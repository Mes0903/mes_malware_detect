
81b6faa1158f04f1c6ea4eb5f7cd446f51076a30f9ab03d31872453689a200ee.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	rex push rbx
   140001002:	sub    rsp,0x20
   140001006:	mov    eax,DWORD PTR [rip+0xb760]        # 0x14000c76c
   14000100c:	lea    rbx,[rip+0xb75d]        # 0x14000c770
   140001013:	test   al,0x1
   140001015:	jne    0x140001049
   140001017:	and    QWORD PTR [rip+0xb759],0x0        # 0x14000c778
   14000101f:	lea    rcx,[rip+0x59aa]        # 0x1400069d0
   140001026:	or     eax,0x1
   140001029:	mov    QWORD PTR [rip+0xb6c8],rbx        # 0x14000c6f8
   140001030:	mov    DWORD PTR [rip+0xb736],eax        # 0x14000c76c
   140001036:	lea    rax,[rip+0x8ddb]        # 0x140009e18
   14000103d:	mov    QWORD PTR [rip+0xb72c],rax        # 0x14000c770
   140001044:	call   0x1400057d0
   140001049:	test   rbx,rbx
   14000104c:	setne  BYTE PTR [rip+0xb715]        # 0x14000c768
   140001053:	add    rsp,0x20
   140001057:	pop    rbx
   140001058:	ret    
   140001059:	int3   
   14000105a:	int3   
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	lea    rcx,[rip+0x5989]        # 0x1400069f0
   140001067:	jmp    0x1400057d0
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	lea    rcx,[rip+0x5999]        # 0x140006a10
   140001077:	jmp    0x1400057d0
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	lea    rcx,[rip+0x59a9]        # 0x140006a30
   140001087:	jmp    0x1400057d0
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	int3   
   140001091:	int3   
   140001092:	int3   
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400010aa:	push   rdi
   1400010ab:	sub    rsp,0x20
   1400010af:	mov    rdi,QWORD PTR [rcx+0x10]
   1400010b3:	mov    rsi,rdx
   1400010b6:	mov    rax,QWORD PTR [rdi]
   1400010b9:	mov    rbx,QWORD PTR [rax+0x18]
   1400010bd:	mov    rcx,rbx
   1400010c0:	call   QWORD PTR [rip+0x724a]        # 0x140008310
   1400010c6:	mov    rdx,rsi
   1400010c9:	mov    rcx,rdi
   1400010cc:	mov    rax,rbx
   1400010cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010d4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400010d9:	add    rsp,0x20
   1400010dd:	pop    rdi
   1400010de:	rex.W jmp rax
   1400010e1:	int3   
   1400010e2:	int3   
   1400010e3:	int3   
   1400010e4:	int3   
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010f5:	push   rdi
   1400010f6:	sub    rsp,0x20
   1400010fa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400010fe:	mov    rax,QWORD PTR [rdi]
   140001101:	mov    rbx,QWORD PTR [rax+0x20]
   140001105:	mov    rcx,rbx
   140001108:	call   QWORD PTR [rip+0x7202]        # 0x140008310
   14000110e:	mov    rcx,rdi
   140001111:	mov    rax,rbx
   140001114:	mov    rbx,QWORD PTR [rsp+0x30]
   140001119:	add    rsp,0x20
   14000111d:	pop    rdi
   14000111e:	rex.W jmp rax
   140001121:	int3   
   140001122:	int3   
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    QWORD PTR [rsp+0x8],rbx
   140001135:	mov    QWORD PTR [rsp+0x10],rsi
   14000113a:	push   rdi
   14000113b:	sub    rsp,0x20
   14000113f:	xor    edi,edi
   140001141:	mov    rsi,rcx
   140001144:	mov    QWORD PTR [r8],rdi
   140001147:	cmp    DWORD PTR [rdx],edi
   140001149:	jne    0x14000116c
   14000114b:	mov    eax,DWORD PTR [rip+0x88fb]        # 0x140009a4c
   140001151:	cmp    DWORD PTR [rdx+0x4],eax
   140001154:	jne    0x14000116c
   140001156:	mov    eax,DWORD PTR [rip+0x88f4]        # 0x140009a50
   14000115c:	cmp    DWORD PTR [rdx+0x8],eax
   14000115f:	jne    0x14000116c
   140001161:	mov    eax,DWORD PTR [rip+0x88ed]        # 0x140009a54
   140001167:	cmp    DWORD PTR [rdx+0xc],eax
   14000116a:	je     0x140001195
   14000116c:	cmp    DWORD PTR [rdx],0x1e12228a
   140001172:	jne    0x1400011af
   140001174:	mov    eax,DWORD PTR [rip+0x88e2]        # 0x140009a5c
   14000117a:	cmp    DWORD PTR [rdx+0x4],eax
   14000117d:	jne    0x1400011af
   14000117f:	mov    eax,DWORD PTR [rip+0x88db]        # 0x140009a60
   140001185:	cmp    DWORD PTR [rdx+0x8],eax
   140001188:	jne    0x1400011af
   14000118a:	mov    eax,DWORD PTR [rip+0x88d4]        # 0x140009a64
   140001190:	cmp    DWORD PTR [rdx+0xc],eax
   140001193:	jne    0x1400011af
   140001195:	mov    QWORD PTR [r8],rcx
   140001198:	mov    rax,QWORD PTR [rcx]
   14000119b:	mov    rbx,QWORD PTR [rax+0x8]
   14000119f:	mov    rcx,rbx
   1400011a2:	call   QWORD PTR [rip+0x7168]        # 0x140008310
   1400011a8:	mov    rcx,rsi
   1400011ab:	call   rbx
   1400011ad:	jmp    0x1400011b4
   1400011af:	mov    edi,0x80004002
   1400011b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011b9:	mov    eax,edi
   1400011bb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400011c0:	add    rsp,0x20
   1400011c4:	pop    rdi
   1400011c5:	ret    
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	mov    eax,0x1
   1400011d5:	lock xadd DWORD PTR [rcx+0xc],eax
   1400011da:	inc    eax
   1400011dc:	ret    
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	int3   
   1400011e1:	int3   
   1400011e2:	int3   
   1400011e3:	int3   
   1400011e4:	int3   
   1400011e5:	int3   
   1400011e6:	int3   
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400011fa:	push   rdi
   1400011fb:	sub    rsp,0x20
   1400011ff:	mov    rsi,rcx
   140001202:	or     edi,0xffffffff
   140001205:	lock xadd DWORD PTR [rcx+0xc],edi
   14000120a:	sub    edi,0x1
   14000120d:	jne    0x14000124d
   14000120f:	test   rcx,rcx
   140001212:	je     0x14000122c
   140001214:	mov    rax,QWORD PTR [rcx]
   140001217:	mov    rbx,QWORD PTR [rax+0x28]
   14000121b:	mov    rcx,rbx
   14000121e:	call   QWORD PTR [rip+0x70ec]        # 0x140008310
   140001224:	lea    edx,[rdi+0x1]
   140001227:	mov    rcx,rsi
   14000122a:	call   rbx
   14000122c:	mov    rsi,QWORD PTR [rip+0xb4c5]        # 0x14000c6f8
   140001233:	test   rsi,rsi
   140001236:	je     0x14000124d
   140001238:	mov    rdx,QWORD PTR [rsi]
   14000123b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000123f:	mov    rcx,rbx
   140001242:	call   QWORD PTR [rip+0x70c8]        # 0x140008310
   140001248:	mov    rcx,rsi
   14000124b:	call   rbx
   14000124d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001252:	mov    eax,edi
   140001254:	mov    rsi,QWORD PTR [rsp+0x38]
   140001259:	add    rsp,0x20
   14000125d:	pop    rdi
   14000125e:	ret    
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    rax,rsp
   140001273:	mov    QWORD PTR [rax+0x8],rbx
   140001277:	mov    QWORD PTR [rax+0x10],rbp
   14000127b:	mov    QWORD PTR [rax+0x18],rsi
   14000127f:	mov    QWORD PTR [rax+0x20],rdi
   140001283:	push   r14
   140001285:	sub    rsp,0x30
   140001289:	and    QWORD PTR [rax-0x18],0x0
   14000128e:	lea    rdx,[rip+0x8853]        # 0x140009ae8
   140001295:	mov    r14,rcx
   140001298:	mov    rsi,r9
   14000129b:	mov    ecx,0x18
   1400012a0:	mov    rbp,r8
   1400012a3:	call   0x1400056f8
   1400012a8:	mov    rbx,rax
   1400012ab:	test   rax,rax
   1400012ae:	je     0x140001379
   1400012b4:	lea    rdi,[rip+0x87ad]        # 0x140009a68
   1400012bb:	mov    DWORD PTR [rax+0xc],0x1
   1400012c2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400012c6:	mov    DWORD PTR [rax+0x14],0x4
   1400012cd:	mov    QWORD PTR [rax],rdi
   1400012d0:	call   QWORD PTR [rip+0x703a]        # 0x140008310
   1400012d6:	mov    rcx,rbx
   1400012d9:	call   QWORD PTR [rdi+0x8]
   1400012dc:	mov    rax,QWORD PTR [rbx]
   1400012df:	mov    QWORD PTR [rsp+0x20],rbx
   1400012e4:	mov    rdi,QWORD PTR [rax+0x10]
   1400012e8:	mov    rcx,rdi
   1400012eb:	call   QWORD PTR [rip+0x701f]        # 0x140008310
   1400012f1:	mov    rcx,rbx
   1400012f4:	call   rdi
   1400012f6:	mov    eax,DWORD PTR [r14]
   1400012f9:	mov    DWORD PTR [rbx+0x14],eax
   1400012fc:	mov    rax,QWORD PTR [rbx]
   1400012ff:	mov    rdi,QWORD PTR [rax]
   140001302:	mov    rcx,rdi
   140001305:	call   QWORD PTR [rip+0x7005]        # 0x140008310
   14000130b:	mov    r8,rsi
   14000130e:	mov    rdx,rbp
   140001311:	mov    rcx,rbx
   140001314:	call   rdi
   140001316:	test   BYTE PTR [r14],0x1
   14000131a:	mov    esi,eax
   14000131c:	je     0x14000135d
   14000131e:	test   eax,eax
   140001320:	js     0x140001359
   140001322:	test   BYTE PTR [r14],0x4
   140001326:	je     0x140001355
   140001328:	mov    rax,QWORD PTR [rip+0xb3c9]        # 0x14000c6f8
   14000132f:	mov    rcx,QWORD PTR [rax]
   140001332:	lea    rax,[rip+0x2437]        # 0x140003770
   140001339:	cmp    QWORD PTR [rcx+0x8],rax
   14000133d:	jne    0x140001347
   14000133f:	call   QWORD PTR [rip+0x6d43]        # 0x140008088
   140001345:	jmp    0x14000135d
   140001347:	lock inc DWORD PTR [rip+0xb3b2]        # 0x14000c700
   14000134e:	mov    rbx,QWORD PTR [rsp+0x20]
   140001353:	jmp    0x14000135d
   140001355:	xor    ebx,ebx
   140001357:	jmp    0x14000135d
   140001359:	and    DWORD PTR [rbx+0x14],0xfffffffa
   14000135d:	test   rbx,rbx
   140001360:	je     0x14000137e
   140001362:	mov    rax,QWORD PTR [rbx]
   140001365:	mov    rdi,QWORD PTR [rax+0x10]
   140001369:	mov    rcx,rdi
   14000136c:	call   QWORD PTR [rip+0x6f9e]        # 0x140008310
   140001372:	mov    rcx,rbx
   140001375:	call   rdi
   140001377:	jmp    0x14000137e
   140001379:	mov    esi,0x8007000e
   14000137e:	mov    rbx,QWORD PTR [rsp+0x40]
   140001383:	mov    eax,esi
   140001385:	mov    rsi,QWORD PTR [rsp+0x50]
   14000138a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000138f:	mov    rdi,QWORD PTR [rsp+0x58]
   140001394:	add    rsp,0x30
   140001398:	pop    r14
   14000139a:	ret    
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	int3   
   1400013a1:	int3   
   1400013a2:	int3   
   1400013a3:	int3   
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400013ba:	push   rsi
   1400013bb:	push   rdi
   1400013bc:	push   r14
   1400013be:	sub    rsp,0x20
   1400013c2:	and    QWORD PTR [r9],0x0
   1400013c6:	mov    r14,r9
   1400013c9:	mov    rbp,r8
   1400013cc:	test   rdx,rdx
   1400013cf:	je     0x1400013e4
   1400013d1:	mov    ebx,0x80040110
   1400013d6:	xor    edx,edx
   1400013d8:	mov    ecx,ebx
   1400013da:	call   QWORD PTR [rip+0x6dc0]        # 0x1400081a0
   1400013e0:	mov    eax,ebx
   1400013e2:	jmp    0x140001442
   1400013e4:	and    QWORD PTR [rsp+0x48],0x0
   1400013ea:	lea    rcx,[rsp+0x48]
   1400013ef:	call   0x140001684
   1400013f4:	mov    esi,eax
   1400013f6:	test   eax,eax
   1400013f8:	js     0x14000141b
   1400013fa:	mov    rbx,QWORD PTR [rsp+0x48]
   1400013ff:	mov    rax,QWORD PTR [rbx]
   140001402:	mov    rdi,QWORD PTR [rax]
   140001405:	mov    rcx,rdi
   140001408:	call   QWORD PTR [rip+0x6f02]        # 0x140008310
   14000140e:	mov    r8,r14
   140001411:	mov    rdx,rbp
   140001414:	mov    rcx,rbx
   140001417:	call   rdi
   140001419:	mov    esi,eax
   14000141b:	mov    rdi,QWORD PTR [rsp+0x48]
   140001420:	test   rdi,rdi
   140001423:	je     0x140001440
   140001425:	and    QWORD PTR [rsp+0x48],0x0
   14000142b:	mov    rdx,QWORD PTR [rdi]
   14000142e:	mov    rbx,QWORD PTR [rdx+0x10]
   140001432:	mov    rcx,rbx
   140001435:	call   QWORD PTR [rip+0x6ed5]        # 0x140008310
   14000143b:	mov    rcx,rdi
   14000143e:	call   rbx
   140001440:	mov    eax,esi
   140001442:	mov    rbx,QWORD PTR [rsp+0x40]
   140001447:	mov    rbp,QWORD PTR [rsp+0x50]
   14000144c:	add    rsp,0x20
   140001450:	pop    r14
   140001452:	pop    rdi
   140001453:	pop    rsi
   140001454:	ret    
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	rex push rbx
   140001462:	sub    rsp,0x20
   140001466:	mov    ebx,0x1
   14000146b:	lock xadd DWORD PTR [rcx+0xc],ebx
   140001470:	inc    ebx
   140001472:	test   BYTE PTR [rcx+0x14],0x6
   140001476:	jne    0x1400014a3
   140001478:	cmp    ebx,0x2
   14000147b:	jne    0x1400014a3
   14000147d:	mov    rax,QWORD PTR [rip+0xb274]        # 0x14000c6f8
   140001484:	mov    rcx,QWORD PTR [rax]
   140001487:	lea    rax,[rip+0x22e2]        # 0x140003770
   14000148e:	cmp    QWORD PTR [rcx+0x8],rax
   140001492:	jne    0x14000149c
   140001494:	call   QWORD PTR [rip+0x6bee]        # 0x140008088
   14000149a:	jmp    0x1400014a3
   14000149c:	lock inc DWORD PTR [rip+0xb25d]        # 0x14000c700
   1400014a3:	mov    eax,ebx
   1400014a5:	add    rsp,0x20
   1400014a9:	pop    rbx
   1400014aa:	ret    
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	int3   
   1400014b1:	int3   
   1400014b2:	int3   
   1400014b3:	int3   
   1400014b4:	int3   
   1400014b5:	int3   
   1400014b6:	int3   
   1400014b7:	int3   
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400014ca:	mov    QWORD PTR [rsp+0x18],rdi
   1400014cf:	push   r14
   1400014d1:	sub    rsp,0x20
   1400014d5:	mov    r14,rcx
   1400014d8:	or     esi,0xffffffff
   1400014db:	lock xadd DWORD PTR [rcx+0xc],esi
   1400014e0:	sub    esi,0x1
   1400014e3:	jne    0x14000151e
   1400014e5:	mov    eax,DWORD PTR [rcx+0x14]
   1400014e8:	and    eax,0x5
   1400014eb:	cmp    al,0x5
   1400014ed:	mov    rax,QWORD PTR [rcx]
   1400014f0:	sete   dil
   1400014f4:	mov    rbx,QWORD PTR [rax+0x28]
   1400014f8:	mov    rcx,rbx
   1400014fb:	call   QWORD PTR [rip+0x6e0f]        # 0x140008310
   140001501:	lea    edx,[rsi+0x1]
   140001504:	mov    rcx,r14
   140001507:	call   rbx
   140001509:	test   dil,dil
   14000150c:	je     0x140001545
   14000150e:	mov    rdi,QWORD PTR [rip+0xb1e3]        # 0x14000c6f8
   140001515:	mov    rax,QWORD PTR [rdi]
   140001518:	mov    rbx,QWORD PTR [rax+0x10]
   14000151c:	jmp    0x140001537
   14000151e:	test   BYTE PTR [rcx+0x14],0x6
   140001522:	jne    0x140001545
   140001524:	cmp    esi,0x1
   140001527:	jne    0x140001545
   140001529:	mov    rdi,QWORD PTR [rip+0xb1c8]        # 0x14000c6f8
   140001530:	mov    rdx,QWORD PTR [rdi]
   140001533:	mov    rbx,QWORD PTR [rdx+0x10]
   140001537:	mov    rcx,rbx
   14000153a:	call   QWORD PTR [rip+0x6dd0]        # 0x140008310
   140001540:	mov    rcx,rdi
   140001543:	call   rbx
   140001545:	mov    rbx,QWORD PTR [rsp+0x30]
   14000154a:	mov    eax,esi
   14000154c:	mov    rsi,QWORD PTR [rsp+0x38]
   140001551:	mov    rdi,QWORD PTR [rsp+0x40]
   140001556:	add    rsp,0x20
   14000155a:	pop    r14
   14000155c:	ret    
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	int3   
   140001561:	int3   
   140001562:	int3   
   140001563:	int3   
   140001564:	int3   
   140001565:	int3   
   140001566:	int3   
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    QWORD PTR [rsp+0x8],rbx
   140001575:	mov    QWORD PTR [rsp+0x10],rsi
   14000157a:	push   rdi
   14000157b:	sub    rsp,0x20
   14000157f:	xor    edi,edi
   140001581:	mov    rsi,rcx
   140001584:	mov    QWORD PTR [r8],rdi
   140001587:	cmp    DWORD PTR [rdx],edi
   140001589:	jne    0x1400015ac
   14000158b:	mov    eax,DWORD PTR [rip+0x84bb]        # 0x140009a4c
   140001591:	cmp    DWORD PTR [rdx+0x4],eax
   140001594:	jne    0x1400015ac
   140001596:	mov    eax,DWORD PTR [rip+0x84b4]        # 0x140009a50
   14000159c:	cmp    DWORD PTR [rdx+0x8],eax
   14000159f:	jne    0x1400015ac
   1400015a1:	mov    eax,DWORD PTR [rip+0x84ad]        # 0x140009a54
   1400015a7:	cmp    DWORD PTR [rdx+0xc],eax
   1400015aa:	je     0x1400015d2
   1400015ac:	cmp    DWORD PTR [rdx],0x1
   1400015af:	jne    0x1400015ec
   1400015b1:	mov    eax,DWORD PTR [rip+0x8525]        # 0x140009adc
   1400015b7:	cmp    DWORD PTR [rdx+0x4],eax
   1400015ba:	jne    0x1400015ec
   1400015bc:	mov    eax,DWORD PTR [rip+0x851e]        # 0x140009ae0
   1400015c2:	cmp    DWORD PTR [rdx+0x8],eax
   1400015c5:	jne    0x1400015ec
   1400015c7:	mov    eax,DWORD PTR [rip+0x8517]        # 0x140009ae4
   1400015cd:	cmp    DWORD PTR [rdx+0xc],eax
   1400015d0:	jne    0x1400015ec
   1400015d2:	mov    QWORD PTR [r8],rcx
   1400015d5:	mov    rax,QWORD PTR [rcx]
   1400015d8:	mov    rbx,QWORD PTR [rax+0x8]
   1400015dc:	mov    rcx,rbx
   1400015df:	call   QWORD PTR [rip+0x6d2b]        # 0x140008310
   1400015e5:	mov    rcx,rsi
   1400015e8:	call   rbx
   1400015ea:	jmp    0x1400015f1
   1400015ec:	mov    edi,0x80004002
   1400015f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015f6:	mov    eax,edi
   1400015f8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400015fd:	add    rsp,0x20
   140001601:	pop    rdi
   140001602:	ret    
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    QWORD PTR [rsp+0x8],rbx
   140001615:	push   rdi
   140001616:	sub    rsp,0x20
   14000161a:	mov    rdi,QWORD PTR [rip+0xb0d7]        # 0x14000c6f8
   140001621:	test   rdi,rdi
   140001624:	jne    0x140001639
   140001626:	mov    ebx,0x80004005
   14000162b:	xor    edx,edx
   14000162d:	mov    ecx,ebx
   14000162f:	call   QWORD PTR [rip+0x6b6b]        # 0x1400081a0
   140001635:	mov    eax,ebx
   140001637:	jmp    0x140001672
   140001639:	mov    rax,QWORD PTR [rdi]
   14000163c:	test   edx,edx
   14000163e:	je     0x14000165e
   140001640:	lea    rcx,[rip+0x2129]        # 0x140003770
   140001647:	cmp    QWORD PTR [rax+0x8],rcx
   14000164b:	jne    0x140001655
   14000164d:	call   QWORD PTR [rip+0x6a35]        # 0x140008088
   140001653:	jmp    0x140001670
   140001655:	lock inc DWORD PTR [rip+0xb0a4]        # 0x14000c700
   14000165c:	jmp    0x140001670
   14000165e:	mov    rbx,QWORD PTR [rax+0x10]
   140001662:	mov    rcx,rbx
   140001665:	call   QWORD PTR [rip+0x6ca5]        # 0x140008310
   14000166b:	mov    rcx,rdi
   14000166e:	call   rbx
   140001670:	xor    eax,eax
   140001672:	mov    rbx,QWORD PTR [rsp+0x30]
   140001677:	add    rsp,0x20
   14000167b:	pop    rdi
   14000167c:	ret    
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	int3   
   140001681:	int3   
   140001682:	int3   
   140001683:	int3   
   140001684:	mov    rax,rsp
   140001687:	mov    QWORD PTR [rax+0x8],rbx
   14000168b:	mov    QWORD PTR [rax+0x10],rsi
   14000168f:	mov    QWORD PTR [rax+0x18],rdi
   140001693:	mov    QWORD PTR [rax+0x20],r14
   140001697:	push   r15
   140001699:	sub    rsp,0x30
   14000169d:	and    QWORD PTR [rcx],0x0
   1400016a1:	lea    rdx,[rip+0x8440]        # 0x140009ae8
   1400016a8:	mov    r15,rcx
   1400016ab:	xor    ebx,ebx
   1400016ad:	lea    ecx,[rbx+0x18]
   1400016b0:	call   0x1400056f8
   1400016b5:	mov    rdi,rax
   1400016b8:	test   rax,rax
   1400016bb:	jne    0x1400016c7
   1400016bd:	mov    esi,0x8007000e
   1400016c2:	jmp    0x14000177e
   1400016c7:	mov    DWORD PTR [rax+0xc],0x1
   1400016ce:	lea    rax,[rip+0x83d3]        # 0x140009aa8
   1400016d5:	mov    QWORD PTR [rdi],rax
   1400016d8:	mov    rax,QWORD PTR [rip+0xb019]        # 0x14000c6f8
   1400016df:	test   rax,rax
   1400016e2:	je     0x140001703
   1400016e4:	mov    rax,QWORD PTR [rax]
   1400016e7:	lea    rcx,[rip+0x2082]        # 0x140003770
   1400016ee:	cmp    QWORD PTR [rax+0x8],rcx
   1400016f2:	jne    0x1400016fc
   1400016f4:	call   QWORD PTR [rip+0x698e]        # 0x140008088
   1400016fa:	jmp    0x140001703
   1400016fc:	lock inc DWORD PTR [rip+0xaffd]        # 0x14000c700
   140001703:	lea    rax,[rip+0x830e]        # 0x140009a18
   14000170a:	mov    QWORD PTR [rdi],rax
   14000170d:	lea    rsi,[rdi+0x10]
   140001711:	and    QWORD PTR [rdi+0x10],rbx
   140001715:	mov    rbx,rdi
   140001718:	mov    r14,QWORD PTR [rsi]
   14000171b:	test   r14,r14
   14000171e:	je     0x140001739
   140001720:	and    QWORD PTR [rsi],0x0
   140001724:	mov    rax,QWORD PTR [r14]
   140001727:	mov    rdi,QWORD PTR [rax+0x10]
   14000172b:	mov    rcx,rdi
   14000172e:	call   QWORD PTR [rip+0x6bdc]        # 0x140008310
   140001734:	mov    rcx,r14
   140001737:	call   rdi
   140001739:	xor    edx,edx
   14000173b:	mov    QWORD PTR [rsp+0x20],rsi
   140001740:	lea    r9,[rip+0x8311]        # 0x140009a58
   140001747:	lea    rcx,[rip+0x834a]        # 0x140009a98
   14000174e:	lea    r8d,[rdx+0x1]
   140001752:	call   QWORD PTR [rip+0x6968]        # 0x1400080c0
   140001758:	mov    esi,eax
   14000175a:	test   eax,eax
   14000175c:	js     0x14000177e
   14000175e:	mov    rax,QWORD PTR [rbx]
   140001761:	mov    rdi,QWORD PTR [rax]
   140001764:	mov    rcx,rdi
   140001767:	call   QWORD PTR [rip+0x6ba3]        # 0x140008310
   14000176d:	mov    r8,r15
   140001770:	lea    rdx,[rip+0x82d1]        # 0x140009a48
   140001777:	mov    rcx,rbx
   14000177a:	call   rdi
   14000177c:	mov    esi,eax
   14000177e:	test   rbx,rbx
   140001781:	je     0x140001798
   140001783:	mov    rcx,QWORD PTR [rbx]
   140001786:	mov    rdi,QWORD PTR [rcx+0x10]
   14000178a:	mov    rcx,rdi
   14000178d:	call   QWORD PTR [rip+0x6b7d]        # 0x140008310
   140001793:	mov    rcx,rbx
   140001796:	call   rdi
   140001798:	mov    rbx,QWORD PTR [rsp+0x40]
   14000179d:	mov    eax,esi
   14000179f:	mov    rsi,QWORD PTR [rsp+0x48]
   1400017a4:	mov    rdi,QWORD PTR [rsp+0x50]
   1400017a9:	mov    r14,QWORD PTR [rsp+0x58]
   1400017ae:	add    rsp,0x30
   1400017b2:	pop    r15
   1400017b4:	ret    
   1400017b5:	int3   
   1400017b6:	int3   
   1400017b7:	int3   
   1400017b8:	int3   
   1400017b9:	int3   
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	rex push rbx
   1400017c2:	sub    rsp,0x20
   1400017c6:	mov    DWORD PTR [rcx+0xc],0xc0000001
   1400017cd:	mov    rbx,rcx
   1400017d0:	test   dl,0x1
   1400017d3:	je     0x1400017db
   1400017d5:	call   QWORD PTR [rip+0x6afd]        # 0x1400082d8
   1400017db:	mov    rax,rbx
   1400017de:	add    rsp,0x20
   1400017e2:	pop    rbx
   1400017e3:	ret    
   1400017e4:	int3   
   1400017e5:	int3   
   1400017e6:	int3   
   1400017e7:	int3   
   1400017e8:	int3   
   1400017e9:	int3   
   1400017ea:	int3   
   1400017eb:	int3   
   1400017ec:	int3   
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400017fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400017ff:	push   rdi
   140001800:	sub    rsp,0x20
   140001804:	mov    rsi,QWORD PTR [rcx+0x10]
   140001808:	mov    ebp,edx
   14000180a:	mov    rdi,rcx
   14000180d:	test   rsi,rsi
   140001810:	je     0x14000182c
   140001812:	and    QWORD PTR [rcx+0x10],0x0
   140001817:	mov    rax,QWORD PTR [rsi]
   14000181a:	mov    rbx,QWORD PTR [rax+0x10]
   14000181e:	mov    rcx,rbx
   140001821:	call   QWORD PTR [rip+0x6ae9]        # 0x140008310
   140001827:	mov    rcx,rsi
   14000182a:	call   rbx
   14000182c:	mov    DWORD PTR [rdi+0xc],0xc0000001
   140001833:	test   bpl,0x1
   140001837:	je     0x140001842
   140001839:	mov    rcx,rdi
   14000183c:	call   QWORD PTR [rip+0x6a96]        # 0x1400082d8
   140001842:	mov    rbx,QWORD PTR [rsp+0x30]
   140001847:	mov    rax,rdi
   14000184a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000184f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001854:	add    rsp,0x20
   140001858:	pop    rdi
   140001859:	ret    
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	mov    rax,rsp
   140001863:	mov    QWORD PTR [rax+0x8],rbx
   140001867:	mov    QWORD PTR [rax+0x10],rbp
   14000186b:	mov    QWORD PTR [rax+0x18],rsi
   14000186f:	push   rdi
   140001870:	sub    rsp,0x50
   140001874:	mov    rdi,QWORD PTR [rcx+0x10]
   140001878:	mov    esi,r9d
   14000187b:	movups xmm0,XMMWORD PTR [r8]
   14000187f:	mov    rbp,rdx
   140001882:	movdqu XMMWORD PTR [rax-0x18],xmm0
   140001887:	mov    rax,QWORD PTR [rdi]
   14000188a:	mov    rbx,QWORD PTR [rax+0x18]
   14000188e:	mov    rcx,rbx
   140001891:	call   QWORD PTR [rip+0x6a79]        # 0x140008310
   140001897:	mov    eax,DWORD PTR [rsp+0x98]
   14000189e:	lea    r8,[rsp+0x40]
   1400018a3:	mov    DWORD PTR [rsp+0x38],eax
   1400018a7:	mov    r9d,esi
   1400018aa:	mov    eax,DWORD PTR [rsp+0x90]
   1400018b1:	mov    rdx,rbp
   1400018b4:	mov    DWORD PTR [rsp+0x30],eax
   1400018b8:	mov    rcx,rdi
   1400018bb:	mov    rax,QWORD PTR [rsp+0x88]
   1400018c3:	mov    QWORD PTR [rsp+0x28],rax
   1400018c8:	mov    eax,DWORD PTR [rsp+0x80]
   1400018cf:	mov    DWORD PTR [rsp+0x20],eax
   1400018d3:	call   rbx
   1400018d5:	mov    rbx,QWORD PTR [rsp+0x60]
   1400018da:	mov    rbp,QWORD PTR [rsp+0x68]
   1400018df:	mov    rsi,QWORD PTR [rsp+0x70]
   1400018e4:	add    rsp,0x50
   1400018e8:	pop    rdi
   1400018e9:	ret    
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	mov    rax,rsp
   1400018f3:	mov    QWORD PTR [rax+0x8],rbx
   1400018f7:	mov    QWORD PTR [rax+0x10],rbp
   1400018fb:	mov    QWORD PTR [rax+0x18],rsi
   1400018ff:	mov    QWORD PTR [rax+0x20],rdi
   140001903:	push   r14
   140001905:	sub    rsp,0x20
   140001909:	mov    rsi,QWORD PTR [rcx+0x10]
   14000190d:	mov    r14,r9
   140001910:	mov    rbx,r8
   140001913:	mov    rbp,rdx
   140001916:	mov    rax,QWORD PTR [rsi]
   140001919:	mov    rdi,QWORD PTR [rax+0x20]
   14000191d:	mov    rcx,rdi
   140001920:	call   QWORD PTR [rip+0x69ea]        # 0x140008310
   140001926:	mov    r9,r14
   140001929:	mov    r8,rbx
   14000192c:	mov    rdx,rbp
   14000192f:	mov    rcx,rsi
   140001932:	call   rdi
   140001934:	mov    rbx,QWORD PTR [rsp+0x30]
   140001939:	mov    rbp,QWORD PTR [rsp+0x38]
   14000193e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001943:	mov    rdi,QWORD PTR [rsp+0x48]
   140001948:	add    rsp,0x20
   14000194c:	pop    r14
   14000194e:	ret    
   14000194f:	int3   
   140001950:	int3   
   140001951:	int3   
   140001952:	int3   
   140001953:	int3   
   140001954:	int3   
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    QWORD PTR [rsp+0x8],rbx
   140001965:	mov    QWORD PTR [rsp+0x10],rsi
   14000196a:	push   rdi
   14000196b:	sub    rsp,0x20
   14000196f:	xor    edi,edi
   140001971:	mov    rsi,rcx
   140001974:	mov    QWORD PTR [r8],rdi
   140001977:	cmp    DWORD PTR [rdx],edi
   140001979:	jne    0x14000199c
   14000197b:	mov    eax,DWORD PTR [rip+0x80cb]        # 0x140009a4c
   140001981:	cmp    DWORD PTR [rdx+0x4],eax
   140001984:	jne    0x14000199c
   140001986:	mov    eax,DWORD PTR [rip+0x80c4]        # 0x140009a50
   14000198c:	cmp    DWORD PTR [rdx+0x8],eax
   14000198f:	jne    0x14000199c
   140001991:	mov    eax,DWORD PTR [rip+0x80bd]        # 0x140009a54
   140001997:	cmp    DWORD PTR [rdx+0xc],eax
   14000199a:	je     0x1400019c5
   14000199c:	cmp    DWORD PTR [rdx],0x991cc8d2
   1400019a2:	jne    0x1400019df
   1400019a4:	mov    eax,DWORD PTR [rip+0x8872]        # 0x14000a21c
   1400019aa:	cmp    DWORD PTR [rdx+0x4],eax
   1400019ad:	jne    0x1400019df
   1400019af:	mov    eax,DWORD PTR [rip+0x886b]        # 0x14000a220
   1400019b5:	cmp    DWORD PTR [rdx+0x8],eax
   1400019b8:	jne    0x1400019df
   1400019ba:	mov    eax,DWORD PTR [rip+0x8864]        # 0x14000a224
   1400019c0:	cmp    DWORD PTR [rdx+0xc],eax
   1400019c3:	jne    0x1400019df
   1400019c5:	mov    QWORD PTR [r8],rcx
   1400019c8:	mov    rax,QWORD PTR [rcx]
   1400019cb:	mov    rbx,QWORD PTR [rax+0x8]
   1400019cf:	mov    rcx,rbx
   1400019d2:	call   QWORD PTR [rip+0x6938]        # 0x140008310
   1400019d8:	mov    rcx,rsi
   1400019db:	call   rbx
   1400019dd:	jmp    0x1400019e4
   1400019df:	mov    edi,0x80004002
   1400019e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019e9:	mov    eax,edi
   1400019eb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400019f0:	add    rsp,0x20
   1400019f4:	pop    rdi
   1400019f5:	ret    
   1400019f6:	int3   
   1400019f7:	int3   
   1400019f8:	int3   
   1400019f9:	int3   
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	mov    rax,rsp
   140001a03:	mov    QWORD PTR [rax+0x8],rbx
   140001a07:	mov    QWORD PTR [rax+0x10],rbp
   140001a0b:	mov    QWORD PTR [rax+0x18],rsi
   140001a0f:	mov    QWORD PTR [rax+0x20],rdi
   140001a13:	push   r14
   140001a15:	sub    rsp,0x30
   140001a19:	and    QWORD PTR [rax-0x18],0x0
   140001a1e:	lea    rdx,[rip+0x80c3]        # 0x140009ae8
   140001a25:	mov    r14,rcx
   140001a28:	mov    rsi,r9
   140001a2b:	mov    ecx,0x18
   140001a30:	mov    rbp,r8
   140001a33:	call   0x1400056f8
   140001a38:	mov    rbx,rax
   140001a3b:	test   rax,rax
   140001a3e:	je     0x140001b09
   140001a44:	lea    rdi,[rip+0x812d]        # 0x140009b78
   140001a4b:	mov    DWORD PTR [rax+0xc],0x1
   140001a52:	mov    rcx,QWORD PTR [rdi+0x8]
   140001a56:	mov    DWORD PTR [rax+0x14],0x4
   140001a5d:	mov    QWORD PTR [rax],rdi
   140001a60:	call   QWORD PTR [rip+0x68aa]        # 0x140008310
   140001a66:	mov    rcx,rbx
   140001a69:	call   QWORD PTR [rdi+0x8]
   140001a6c:	mov    rax,QWORD PTR [rbx]
   140001a6f:	mov    QWORD PTR [rsp+0x20],rbx
   140001a74:	mov    rdi,QWORD PTR [rax+0x10]
   140001a78:	mov    rcx,rdi
   140001a7b:	call   QWORD PTR [rip+0x688f]        # 0x140008310
   140001a81:	mov    rcx,rbx
   140001a84:	call   rdi
   140001a86:	mov    eax,DWORD PTR [r14]
   140001a89:	mov    DWORD PTR [rbx+0x14],eax
   140001a8c:	mov    rax,QWORD PTR [rbx]
   140001a8f:	mov    rdi,QWORD PTR [rax]
   140001a92:	mov    rcx,rdi
   140001a95:	call   QWORD PTR [rip+0x6875]        # 0x140008310
   140001a9b:	mov    r8,rsi
   140001a9e:	mov    rdx,rbp
   140001aa1:	mov    rcx,rbx
   140001aa4:	call   rdi
   140001aa6:	test   BYTE PTR [r14],0x1
   140001aaa:	mov    esi,eax
   140001aac:	je     0x140001aed
   140001aae:	test   eax,eax
   140001ab0:	js     0x140001ae9
   140001ab2:	test   BYTE PTR [r14],0x4
   140001ab6:	je     0x140001ae5
   140001ab8:	mov    rax,QWORD PTR [rip+0xac39]        # 0x14000c6f8
   140001abf:	mov    rcx,QWORD PTR [rax]
   140001ac2:	lea    rax,[rip+0x1ca7]        # 0x140003770
   140001ac9:	cmp    QWORD PTR [rcx+0x8],rax
   140001acd:	jne    0x140001ad7
   140001acf:	call   QWORD PTR [rip+0x65b3]        # 0x140008088
   140001ad5:	jmp    0x140001aed
   140001ad7:	lock inc DWORD PTR [rip+0xac22]        # 0x14000c700
   140001ade:	mov    rbx,QWORD PTR [rsp+0x20]
   140001ae3:	jmp    0x140001aed
   140001ae5:	xor    ebx,ebx
   140001ae7:	jmp    0x140001aed
   140001ae9:	and    DWORD PTR [rbx+0x14],0xfffffffa
   140001aed:	test   rbx,rbx
   140001af0:	je     0x140001b0e
   140001af2:	mov    rax,QWORD PTR [rbx]
   140001af5:	mov    rdi,QWORD PTR [rax+0x10]
   140001af9:	mov    rcx,rdi
   140001afc:	call   QWORD PTR [rip+0x680e]        # 0x140008310
   140001b02:	mov    rcx,rbx
   140001b05:	call   rdi
   140001b07:	jmp    0x140001b0e
   140001b09:	mov    esi,0x8007000e
   140001b0e:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b13:	mov    eax,esi
   140001b15:	mov    rsi,QWORD PTR [rsp+0x50]
   140001b1a:	mov    rbp,QWORD PTR [rsp+0x48]
   140001b1f:	mov    rdi,QWORD PTR [rsp+0x58]
   140001b24:	add    rsp,0x30
   140001b28:	pop    r14
   140001b2a:	ret    
   140001b2b:	int3   
   140001b2c:	int3   
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	int3   
   140001b31:	int3   
   140001b32:	int3   
   140001b33:	int3   
   140001b34:	int3   
   140001b35:	int3   
   140001b36:	int3   
   140001b37:	int3   
   140001b38:	int3   
   140001b39:	int3   
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	mov    QWORD PTR [rsp+0x8],rbx
   140001b45:	mov    QWORD PTR [rsp+0x18],rbp
   140001b4a:	push   rsi
   140001b4b:	push   rdi
   140001b4c:	push   r14
   140001b4e:	sub    rsp,0x20
   140001b52:	and    QWORD PTR [r9],0x0
   140001b56:	mov    r14,r9
   140001b59:	mov    rbp,r8
   140001b5c:	test   rdx,rdx
   140001b5f:	je     0x140001b74
   140001b61:	mov    ebx,0x80040110
   140001b66:	xor    edx,edx
   140001b68:	mov    ecx,ebx
   140001b6a:	call   QWORD PTR [rip+0x6630]        # 0x1400081a0
   140001b70:	mov    eax,ebx
   140001b72:	jmp    0x140001bd2
   140001b74:	and    QWORD PTR [rsp+0x48],0x0
   140001b7a:	lea    rcx,[rsp+0x48]
   140001b7f:	call   0x140001bec
   140001b84:	mov    esi,eax
   140001b86:	test   eax,eax
   140001b88:	js     0x140001bab
   140001b8a:	mov    rbx,QWORD PTR [rsp+0x48]
   140001b8f:	mov    rax,QWORD PTR [rbx]
   140001b92:	mov    rdi,QWORD PTR [rax]
   140001b95:	mov    rcx,rdi
   140001b98:	call   QWORD PTR [rip+0x6772]        # 0x140008310
   140001b9e:	mov    r8,r14
   140001ba1:	mov    rdx,rbp
   140001ba4:	mov    rcx,rbx
   140001ba7:	call   rdi
   140001ba9:	mov    esi,eax
   140001bab:	mov    rdi,QWORD PTR [rsp+0x48]
   140001bb0:	test   rdi,rdi
   140001bb3:	je     0x140001bd0
   140001bb5:	and    QWORD PTR [rsp+0x48],0x0
   140001bbb:	mov    rdx,QWORD PTR [rdi]
   140001bbe:	mov    rbx,QWORD PTR [rdx+0x10]
   140001bc2:	mov    rcx,rbx
   140001bc5:	call   QWORD PTR [rip+0x6745]        # 0x140008310
   140001bcb:	mov    rcx,rdi
   140001bce:	call   rbx
   140001bd0:	mov    eax,esi
   140001bd2:	mov    rbx,QWORD PTR [rsp+0x40]
   140001bd7:	mov    rbp,QWORD PTR [rsp+0x50]
   140001bdc:	add    rsp,0x20
   140001be0:	pop    r14
   140001be2:	pop    rdi
   140001be3:	pop    rsi
   140001be4:	ret    
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	mov    rax,rsp
   140001bef:	mov    QWORD PTR [rax+0x8],rbx
   140001bf3:	mov    QWORD PTR [rax+0x10],rsi
   140001bf7:	mov    QWORD PTR [rax+0x18],rdi
   140001bfb:	mov    QWORD PTR [rax+0x20],r14
   140001bff:	push   r15
   140001c01:	sub    rsp,0x30
   140001c05:	and    QWORD PTR [rcx],0x0
   140001c09:	lea    rdx,[rip+0x7ed8]        # 0x140009ae8
   140001c10:	mov    r15,rcx
   140001c13:	xor    ebx,ebx
   140001c15:	lea    ecx,[rbx+0x18]
   140001c18:	call   0x1400056f8
   140001c1d:	mov    rdi,rax
   140001c20:	test   rax,rax
   140001c23:	jne    0x140001c2f
   140001c25:	mov    esi,0x8007000e
   140001c2a:	jmp    0x140001ce6
   140001c2f:	mov    DWORD PTR [rax+0xc],0x1
   140001c36:	lea    rax,[rip+0x7f0b]        # 0x140009b48
   140001c3d:	mov    QWORD PTR [rdi],rax
   140001c40:	mov    rax,QWORD PTR [rip+0xaab1]        # 0x14000c6f8
   140001c47:	test   rax,rax
   140001c4a:	je     0x140001c6b
   140001c4c:	mov    rax,QWORD PTR [rax]
   140001c4f:	lea    rcx,[rip+0x1b1a]        # 0x140003770
   140001c56:	cmp    QWORD PTR [rax+0x8],rcx
   140001c5a:	jne    0x140001c64
   140001c5c:	call   QWORD PTR [rip+0x6426]        # 0x140008088
   140001c62:	jmp    0x140001c6b
   140001c64:	lock inc DWORD PTR [rip+0xaa95]        # 0x14000c700
   140001c6b:	lea    rax,[rip+0x7ea6]        # 0x140009b18
   140001c72:	mov    QWORD PTR [rdi],rax
   140001c75:	lea    rsi,[rdi+0x10]
   140001c79:	and    QWORD PTR [rdi+0x10],rbx
   140001c7d:	mov    rbx,rdi
   140001c80:	mov    r14,QWORD PTR [rsi]
   140001c83:	test   r14,r14
   140001c86:	je     0x140001ca1
   140001c88:	and    QWORD PTR [rsi],0x0
   140001c8c:	mov    rax,QWORD PTR [r14]
   140001c8f:	mov    rdi,QWORD PTR [rax+0x10]
   140001c93:	mov    rcx,rdi
   140001c96:	call   QWORD PTR [rip+0x6674]        # 0x140008310
   140001c9c:	mov    rcx,r14
   140001c9f:	call   rdi
   140001ca1:	xor    edx,edx
   140001ca3:	mov    QWORD PTR [rsp+0x20],rsi
   140001ca8:	lea    r9,[rip+0x8569]        # 0x14000a218
   140001caf:	lea    rcx,[rip+0x8572]        # 0x14000a228
   140001cb6:	lea    r8d,[rdx+0x1]
   140001cba:	call   QWORD PTR [rip+0x6400]        # 0x1400080c0
   140001cc0:	mov    esi,eax
   140001cc2:	test   eax,eax
   140001cc4:	js     0x140001ce6
   140001cc6:	mov    rax,QWORD PTR [rbx]
   140001cc9:	mov    rdi,QWORD PTR [rax]
   140001ccc:	mov    rcx,rdi
   140001ccf:	call   QWORD PTR [rip+0x663b]        # 0x140008310
   140001cd5:	mov    r8,r15
   140001cd8:	lea    rdx,[rip+0x7d69]        # 0x140009a48
   140001cdf:	mov    rcx,rbx
   140001ce2:	call   rdi
   140001ce4:	mov    esi,eax
   140001ce6:	test   rbx,rbx
   140001ce9:	je     0x140001d00
   140001ceb:	mov    rcx,QWORD PTR [rbx]
   140001cee:	mov    rdi,QWORD PTR [rcx+0x10]
   140001cf2:	mov    rcx,rdi
   140001cf5:	call   QWORD PTR [rip+0x6615]        # 0x140008310
   140001cfb:	mov    rcx,rbx
   140001cfe:	call   rdi
   140001d00:	mov    rbx,QWORD PTR [rsp+0x40]
   140001d05:	mov    eax,esi
   140001d07:	mov    rsi,QWORD PTR [rsp+0x48]
   140001d0c:	mov    rdi,QWORD PTR [rsp+0x50]
   140001d11:	mov    r14,QWORD PTR [rsp+0x58]
   140001d16:	add    rsp,0x30
   140001d1a:	pop    r15
   140001d1c:	ret    
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	int3   
   140001d21:	int3   
   140001d22:	int3   
   140001d23:	int3   
   140001d24:	xor    r9d,r9d
   140001d27:	xor    r8d,r8d
   140001d2a:	lea    edx,[r9+0x1]
   140001d2e:	rex.W jmp QWORD PTR [rip+0x62cb]        # 0x140008000
   140001d35:	int3   
   140001d36:	int3   
   140001d37:	int3   
   140001d38:	int3   
   140001d39:	int3   
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	ret    0x0
   140001d43:	int3   
   140001d44:	int3   
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	mov    eax,DWORD PTR [rcx+0x10]
   140001d53:	mov    DWORD PTR [rdx],eax
   140001d55:	xor    eax,eax
   140001d57:	ret    
   140001d58:	int3   
   140001d59:	int3   
   140001d5a:	int3   
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    QWORD PTR [rsp+0x8],rbx
   140001d65:	mov    QWORD PTR [rsp+0x10],rbp
   140001d6a:	mov    QWORD PTR [rsp+0x18],rsi
   140001d6f:	push   rdi
   140001d70:	sub    rsp,0x20
   140001d74:	mov    rsi,QWORD PTR [rcx+0x18]
   140001d78:	mov    ebp,edx
   140001d7a:	mov    rdi,rcx
   140001d7d:	test   rsi,rsi
   140001d80:	je     0x140001d9c
   140001d82:	and    QWORD PTR [rcx+0x18],0x0
   140001d87:	mov    rax,QWORD PTR [rsi]
   140001d8a:	mov    rbx,QWORD PTR [rax+0x10]
   140001d8e:	mov    rcx,rbx
   140001d91:	call   QWORD PTR [rip+0x6579]        # 0x140008310
   140001d97:	mov    rcx,rsi
   140001d9a:	call   rbx
   140001d9c:	mov    DWORD PTR [rdi+0xc],0xc0000001
   140001da3:	test   bpl,0x1
   140001da7:	je     0x140001db2
   140001da9:	mov    rcx,rdi
   140001dac:	call   QWORD PTR [rip+0x6526]        # 0x1400082d8
   140001db2:	mov    rbx,QWORD PTR [rsp+0x30]
   140001db7:	mov    rax,rdi
   140001dba:	mov    rbp,QWORD PTR [rsp+0x38]
   140001dbf:	mov    rsi,QWORD PTR [rsp+0x40]
   140001dc4:	add    rsp,0x20
   140001dc8:	pop    rdi
   140001dc9:	ret    
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	rex push rbp
   140001dd2:	push   rbx
   140001dd3:	push   rsi
   140001dd4:	push   rdi
   140001dd5:	push   r12
   140001dd7:	push   r14
   140001dd9:	push   r15
   140001ddb:	mov    rbp,rsp
   140001dde:	sub    rsp,0x80
   140001de5:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140001ded:	mov    rax,QWORD PTR [rip+0xa214]        # 0x14000c008
   140001df4:	xor    rax,rsp
   140001df7:	mov    QWORD PTR [rbp-0x10],rax
   140001dfb:	mov    r14,r8
   140001dfe:	mov    r12,rdx
   140001e01:	mov    r15,rcx
   140001e04:	and    QWORD PTR [r8],0x0
   140001e08:	and    QWORD PTR [rbp-0x58],0x0
   140001e0d:	and    QWORD PTR [rbp-0x18],0x0
   140001e12:	lea    r9,[rbp-0x18]
   140001e16:	lea    r8,[rbp-0x30]
   140001e1a:	mov    edx,0x1f
   140001e1f:	lea    rcx,[rip+0x844a]        # 0x14000a270
   140001e26:	call   QWORD PTR [rip+0x63bc]        # 0x1400081e8
   140001e2c:	test   eax,eax
   140001e2e:	jns    0x140001e38
   140001e30:	mov    ecx,eax
   140001e32:	call   0x140001d24
   140001e37:	int3   
   140001e38:	mov    rsi,QWORD PTR [rbp-0x18]
   140001e3c:	mov    rdi,QWORD PTR [rbp-0x58]
   140001e40:	test   rdi,rdi
   140001e43:	je     0x140001e5f
   140001e45:	and    QWORD PTR [rbp-0x58],0x0
   140001e4a:	mov    rax,QWORD PTR [rdi]
   140001e4d:	mov    rbx,QWORD PTR [rax+0x10]
   140001e51:	mov    rcx,rbx
   140001e54:	call   QWORD PTR [rip+0x64b6]        # 0x140008310
   140001e5a:	mov    rcx,rdi
   140001e5d:	call   rbx
   140001e5f:	lea    r8,[rbp-0x58]
   140001e63:	lea    rdx,[rip+0x83ee]        # 0x14000a258
   140001e6a:	mov    rcx,rsi
   140001e6d:	call   QWORD PTR [rip+0x634d]        # 0x1400081c0
   140001e73:	mov    edi,eax
   140001e75:	test   eax,eax
   140001e77:	js     0x140001fb4
   140001e7d:	and    QWORD PTR [rbp-0x60],0x0
   140001e82:	mov    rbx,QWORD PTR [rbp-0x58]
   140001e86:	mov    rax,QWORD PTR [rbx]
   140001e89:	mov    rdi,QWORD PTR [rax+0x30]
   140001e8d:	mov    rcx,rdi
   140001e90:	call   QWORD PTR [rip+0x647a]        # 0x140008310
   140001e96:	lea    r8,[rbp-0x60]
   140001e9a:	mov    rdx,r12
   140001e9d:	mov    rcx,rbx
   140001ea0:	call   rdi
   140001ea2:	mov    edi,eax
   140001ea4:	test   eax,eax
   140001ea6:	js     0x140001f90
   140001eac:	and    QWORD PTR [rbp-0x50],0x0
   140001eb1:	mov    rbx,QWORD PTR [rbp-0x60]
   140001eb5:	mov    rax,QWORD PTR [rbx]
   140001eb8:	mov    rdi,QWORD PTR [rax]
   140001ebb:	mov    rcx,rdi
   140001ebe:	call   QWORD PTR [rip+0x644c]        # 0x140008310
   140001ec4:	lea    r8,[rbp-0x50]
   140001ec8:	lea    rdx,[rip+0x83e1]        # 0x14000a2b0
   140001ecf:	mov    rcx,rbx
   140001ed2:	call   rdi
   140001ed4:	mov    edi,eax
   140001ed6:	test   eax,eax
   140001ed8:	js     0x140001f6c
   140001ede:	and    QWORD PTR [rbp-0x48],0x0
   140001ee3:	lea    rax,[r15-0x8]
   140001ee7:	mov    QWORD PTR [rbp-0x40],rax
   140001eeb:	lea    rdx,[rbp-0x40]
   140001eef:	lea    rcx,[rbp-0x48]
   140001ef3:	call   0x1400026d4
   140001ef8:	mov    edi,eax
   140001efa:	test   eax,eax
   140001efc:	js     0x140001f48
   140001efe:	mov    rbx,QWORD PTR [rbp-0x50]
   140001f02:	mov    rax,QWORD PTR [rbx]
   140001f05:	mov    rdi,QWORD PTR [rax+0x18]
   140001f09:	mov    rcx,rdi
   140001f0c:	call   QWORD PTR [rip+0x63fe]        # 0x140008310
   140001f12:	mov    rdx,QWORD PTR [rbp-0x48]
   140001f16:	mov    rcx,rbx
   140001f19:	call   rdi
   140001f1b:	mov    edi,eax
   140001f1d:	test   eax,eax
   140001f1f:	js     0x140001f48
   140001f21:	mov    rsi,QWORD PTR [rbp-0x60]
   140001f25:	test   rsi,rsi
   140001f28:	je     0x140001f3f
   140001f2a:	mov    rax,QWORD PTR [rsi]
   140001f2d:	mov    rbx,QWORD PTR [rax+0x8]
   140001f31:	mov    rcx,rbx
   140001f34:	call   QWORD PTR [rip+0x63d6]        # 0x140008310
   140001f3a:	mov    rcx,rsi
   140001f3d:	call   rbx
   140001f3f:	mov    rax,QWORD PTR [rbp-0x60]
   140001f43:	mov    QWORD PTR [r14],rax
   140001f46:	xor    edi,edi
   140001f48:	mov    rsi,QWORD PTR [rbp-0x48]
   140001f4c:	test   rsi,rsi
   140001f4f:	je     0x140001f6c
   140001f51:	and    QWORD PTR [rbp-0x48],0x0
   140001f56:	mov    rax,QWORD PTR [rsi]
   140001f59:	mov    rbx,QWORD PTR [rax+0x10]
   140001f5d:	mov    rcx,rbx
   140001f60:	call   QWORD PTR [rip+0x63aa]        # 0x140008310
   140001f66:	mov    rcx,rsi
   140001f69:	call   rbx
   140001f6b:	nop
   140001f6c:	mov    rsi,QWORD PTR [rbp-0x50]
   140001f70:	test   rsi,rsi
   140001f73:	je     0x140001f90
   140001f75:	and    QWORD PTR [rbp-0x50],0x0
   140001f7a:	mov    rax,QWORD PTR [rsi]
   140001f7d:	mov    rbx,QWORD PTR [rax+0x10]
   140001f81:	mov    rcx,rbx
   140001f84:	call   QWORD PTR [rip+0x6386]        # 0x140008310
   140001f8a:	mov    rcx,rsi
   140001f8d:	call   rbx
   140001f8f:	nop
   140001f90:	mov    rsi,QWORD PTR [rbp-0x60]
   140001f94:	test   rsi,rsi
   140001f97:	je     0x140001fb4
   140001f99:	and    QWORD PTR [rbp-0x60],0x0
   140001f9e:	mov    rax,QWORD PTR [rsi]
   140001fa1:	mov    rbx,QWORD PTR [rax+0x10]
   140001fa5:	mov    rcx,rbx
   140001fa8:	call   QWORD PTR [rip+0x6362]        # 0x140008310
   140001fae:	mov    rcx,rsi
   140001fb1:	call   rbx
   140001fb3:	nop
   140001fb4:	mov    rsi,QWORD PTR [rbp-0x58]
   140001fb8:	test   rsi,rsi
   140001fbb:	je     0x140001fd7
   140001fbd:	and    QWORD PTR [rbp-0x58],0x0
   140001fc2:	mov    rax,QWORD PTR [rsi]
   140001fc5:	mov    rbx,QWORD PTR [rax+0x10]
   140001fc9:	mov    rcx,rbx
   140001fcc:	call   QWORD PTR [rip+0x633e]        # 0x140008310
   140001fd2:	mov    rcx,rsi
   140001fd5:	call   rbx
   140001fd7:	mov    eax,edi
   140001fd9:	mov    rcx,QWORD PTR [rbp-0x10]
   140001fdd:	xor    rcx,rsp
   140001fe0:	call   0x1400056b0
   140001fe5:	add    rsp,0x80
   140001fec:	pop    r15
   140001fee:	pop    r14
   140001ff0:	pop    r12
   140001ff2:	pop    rdi
   140001ff3:	pop    rsi
   140001ff4:	pop    rbx
   140001ff5:	pop    rbp
   140001ff6:	ret    
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	rex push rbp
   140002002:	push   rbx
   140002003:	push   rsi
   140002004:	push   rdi
   140002005:	push   r12
   140002007:	push   r13
   140002009:	push   r14
   14000200b:	push   r15
   14000200d:	lea    rbp,[rsp-0x1f]
   140002012:	sub    rsp,0x88
   140002019:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   140002021:	mov    rax,QWORD PTR [rip+0x9fe0]        # 0x14000c008
   140002028:	xor    rax,rsp
   14000202b:	mov    QWORD PTR [rbp+0x7],rax
   14000202f:	mov    r14,r9
   140002032:	mov    r13,r8
   140002035:	mov    r12,rdx
   140002038:	mov    r15,rcx
   14000203b:	xor    ebx,ebx
   14000203d:	mov    QWORD PTR [r9],rbx
   140002040:	mov    QWORD PTR [rbp-0x41],rbx
   140002044:	mov    QWORD PTR [rbp-0x1],rbx
   140002048:	lea    r9,[rbp-0x1]
   14000204c:	lea    r8,[rbp-0x19]
   140002050:	lea    edx,[rbx+0x1f]
   140002053:	lea    rcx,[rip+0x8216]        # 0x14000a270
   14000205a:	call   QWORD PTR [rip+0x6188]        # 0x1400081e8
   140002060:	test   eax,eax
   140002062:	jns    0x14000206c
   140002064:	mov    ecx,eax
   140002066:	call   0x140001d24
   14000206b:	int3   
   14000206c:	mov    rsi,QWORD PTR [rbp-0x1]
   140002070:	mov    rdi,QWORD PTR [rbp-0x41]
   140002074:	test   rdi,rdi
   140002077:	je     0x140002094
   140002079:	mov    QWORD PTR [rbp-0x41],rbx
   14000207d:	mov    rax,QWORD PTR [rdi]
   140002080:	mov    rbx,QWORD PTR [rax+0x10]
   140002084:	mov    rcx,rbx
   140002087:	call   QWORD PTR [rip+0x6283]        # 0x140008310
   14000208d:	mov    rcx,rdi
   140002090:	call   rbx
   140002092:	xor    ebx,ebx
   140002094:	lea    r8,[rbp-0x41]
   140002098:	lea    rdx,[rip+0x81b9]        # 0x14000a258
   14000209f:	mov    rcx,rsi
   1400020a2:	call   QWORD PTR [rip+0x6118]        # 0x1400081c0
   1400020a8:	mov    edi,eax
   1400020aa:	test   eax,eax
   1400020ac:	js     0x1400021eb
   1400020b2:	mov    QWORD PTR [rbp-0x49],rbx
   1400020b6:	mov    rbx,QWORD PTR [rbp-0x41]
   1400020ba:	mov    rax,QWORD PTR [rbx]
   1400020bd:	mov    rdi,QWORD PTR [rax+0x38]
   1400020c1:	mov    rcx,rdi
   1400020c4:	call   QWORD PTR [rip+0x6246]        # 0x140008310
   1400020ca:	lea    r9,[rbp-0x49]
   1400020ce:	mov    r8,r13
   1400020d1:	mov    rdx,r12
   1400020d4:	mov    rcx,rbx
   1400020d7:	call   rdi
   1400020d9:	mov    edi,eax
   1400020db:	xor    r12d,r12d
   1400020de:	test   eax,eax
   1400020e0:	js     0x1400021c7
   1400020e6:	mov    QWORD PTR [rbp-0x39],r12
   1400020ea:	mov    rbx,QWORD PTR [rbp-0x49]
   1400020ee:	mov    rax,QWORD PTR [rbx]
   1400020f1:	mov    rdi,QWORD PTR [rax]
   1400020f4:	mov    rcx,rdi
   1400020f7:	call   QWORD PTR [rip+0x6213]        # 0x140008310
   1400020fd:	lea    r8,[rbp-0x39]
   140002101:	lea    rdx,[rip+0x81a8]        # 0x14000a2b0
   140002108:	mov    rcx,rbx
   14000210b:	call   rdi
   14000210d:	mov    edi,eax
   14000210f:	test   eax,eax
   140002111:	js     0x1400021a4
   140002117:	mov    QWORD PTR [rbp-0x31],r12
   14000211b:	lea    rax,[r15-0x8]
   14000211f:	mov    QWORD PTR [rbp-0x29],rax
   140002123:	lea    rdx,[rbp-0x29]
   140002127:	lea    rcx,[rbp-0x31]
   14000212b:	call   0x1400026d4
   140002130:	mov    edi,eax
   140002132:	test   eax,eax
   140002134:	js     0x140002181
   140002136:	mov    rbx,QWORD PTR [rbp-0x39]
   14000213a:	mov    rax,QWORD PTR [rbx]
   14000213d:	mov    rdi,QWORD PTR [rax+0x18]
   140002141:	mov    rcx,rdi
   140002144:	call   QWORD PTR [rip+0x61c6]        # 0x140008310
   14000214a:	mov    rdx,QWORD PTR [rbp-0x31]
   14000214e:	mov    rcx,rbx
   140002151:	call   rdi
   140002153:	mov    edi,eax
   140002155:	test   eax,eax
   140002157:	js     0x140002181
   140002159:	mov    rsi,QWORD PTR [rbp-0x49]
   14000215d:	test   rsi,rsi
   140002160:	je     0x140002177
   140002162:	mov    rax,QWORD PTR [rsi]
   140002165:	mov    rbx,QWORD PTR [rax+0x8]
   140002169:	mov    rcx,rbx
   14000216c:	call   QWORD PTR [rip+0x619e]        # 0x140008310
   140002172:	mov    rcx,rsi
   140002175:	call   rbx
   140002177:	mov    rax,QWORD PTR [rbp-0x49]
   14000217b:	mov    QWORD PTR [r14],rax
   14000217e:	mov    edi,r12d
   140002181:	mov    rsi,QWORD PTR [rbp-0x31]
   140002185:	test   rsi,rsi
   140002188:	je     0x1400021a4
   14000218a:	mov    QWORD PTR [rbp-0x31],r12
   14000218e:	mov    rax,QWORD PTR [rsi]
   140002191:	mov    rbx,QWORD PTR [rax+0x10]
   140002195:	mov    rcx,rbx
   140002198:	call   QWORD PTR [rip+0x6172]        # 0x140008310
   14000219e:	mov    rcx,rsi
   1400021a1:	call   rbx
   1400021a3:	nop
   1400021a4:	mov    rsi,QWORD PTR [rbp-0x39]
   1400021a8:	test   rsi,rsi
   1400021ab:	je     0x1400021c7
   1400021ad:	mov    QWORD PTR [rbp-0x39],r12
   1400021b1:	mov    rax,QWORD PTR [rsi]
   1400021b4:	mov    rbx,QWORD PTR [rax+0x10]
   1400021b8:	mov    rcx,rbx
   1400021bb:	call   QWORD PTR [rip+0x614f]        # 0x140008310
   1400021c1:	mov    rcx,rsi
   1400021c4:	call   rbx
   1400021c6:	nop
   1400021c7:	mov    rsi,QWORD PTR [rbp-0x49]
   1400021cb:	test   rsi,rsi
   1400021ce:	je     0x1400021ee
   1400021d0:	mov    QWORD PTR [rbp-0x49],r12
   1400021d4:	mov    rax,QWORD PTR [rsi]
   1400021d7:	mov    rbx,QWORD PTR [rax+0x10]
   1400021db:	mov    rcx,rbx
   1400021de:	call   QWORD PTR [rip+0x612c]        # 0x140008310
   1400021e4:	mov    rcx,rsi
   1400021e7:	call   rbx
   1400021e9:	jmp    0x1400021ee
   1400021eb:	xor    r12d,r12d
   1400021ee:	mov    rsi,QWORD PTR [rbp-0x41]
   1400021f2:	test   rsi,rsi
   1400021f5:	je     0x140002210
   1400021f7:	mov    QWORD PTR [rbp-0x41],r12
   1400021fb:	mov    rax,QWORD PTR [rsi]
   1400021fe:	mov    rbx,QWORD PTR [rax+0x10]
   140002202:	mov    rcx,rbx
   140002205:	call   QWORD PTR [rip+0x6105]        # 0x140008310
   14000220b:	mov    rcx,rsi
   14000220e:	call   rbx
   140002210:	mov    eax,edi
   140002212:	mov    rcx,QWORD PTR [rbp+0x7]
   140002216:	xor    rcx,rsp
   140002219:	call   0x1400056b0
   14000221e:	add    rsp,0x88
   140002225:	pop    r15
   140002227:	pop    r14
   140002229:	pop    r13
   14000222b:	pop    r12
   14000222d:	pop    rdi
   14000222e:	pop    rsi
   14000222f:	pop    rbx
   140002230:	pop    rbp
   140002231:	ret    
   140002232:	int3   
   140002233:	int3   
   140002234:	int3   
   140002235:	int3   
   140002236:	int3   
   140002237:	int3   
   140002238:	int3   
   140002239:	int3   
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	and    QWORD PTR [rdx],0x0
   140002244:	mov    eax,0x80004001
   140002249:	ret    
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	mov    QWORD PTR [rsp+0x8],rbx
   140002255:	mov    QWORD PTR [rsp+0x10],rsi
   14000225a:	push   rdi
   14000225b:	sub    rsp,0x20
   14000225f:	xor    edi,edi
   140002261:	mov    rsi,rcx
   140002264:	mov    QWORD PTR [r8],rdi
   140002267:	cmp    DWORD PTR [rdx],edi
   140002269:	jne    0x14000228c
   14000226b:	mov    eax,DWORD PTR [rip+0x77db]        # 0x140009a4c
   140002271:	cmp    DWORD PTR [rdx+0x4],eax
   140002274:	jne    0x14000228c
   140002276:	mov    eax,DWORD PTR [rip+0x77d4]        # 0x140009a50
   14000227c:	cmp    DWORD PTR [rdx+0x8],eax
   14000227f:	jne    0x14000228c
   140002281:	mov    eax,DWORD PTR [rip+0x77cd]        # 0x140009a54
   140002287:	cmp    DWORD PTR [rdx+0xc],eax
   14000228a:	je     0x1400022b5
   14000228c:	cmp    DWORD PTR [rdx],0xff370d8
   140002292:	jne    0x1400022cf
   140002294:	mov    eax,DWORD PTR [rip+0x803a]        # 0x14000a2d4
   14000229a:	cmp    DWORD PTR [rdx+0x4],eax
   14000229d:	jne    0x1400022cf
   14000229f:	mov    eax,DWORD PTR [rip+0x8033]        # 0x14000a2d8
   1400022a5:	cmp    DWORD PTR [rdx+0x8],eax
   1400022a8:	jne    0x1400022cf
   1400022aa:	mov    eax,DWORD PTR [rip+0x802c]        # 0x14000a2dc
   1400022b0:	cmp    DWORD PTR [rdx+0xc],eax
   1400022b3:	jne    0x1400022cf
   1400022b5:	mov    QWORD PTR [r8],rcx
   1400022b8:	mov    rax,QWORD PTR [rcx]
   1400022bb:	mov    rbx,QWORD PTR [rax+0x8]
   1400022bf:	mov    rcx,rbx
   1400022c2:	call   QWORD PTR [rip+0x6048]        # 0x140008310
   1400022c8:	mov    rcx,rsi
   1400022cb:	call   rbx
   1400022cd:	jmp    0x1400022d4
   1400022cf:	mov    edi,0x80004002
   1400022d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022d9:	mov    eax,edi
   1400022db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400022e0:	add    rsp,0x20
   1400022e4:	pop    rdi
   1400022e5:	ret    
   1400022e6:	int3   
   1400022e7:	int3   
   1400022e8:	int3   
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400022fa:	push   rdi
   1400022fb:	sub    rsp,0x20
   1400022ff:	mov    rsi,rcx
   140002302:	or     edi,0xffffffff
   140002305:	lock xadd DWORD PTR [rcx+0xc],edi
   14000230a:	sub    edi,0x1
   14000230d:	jne    0x14000234d
   14000230f:	test   rcx,rcx
   140002312:	je     0x14000232c
   140002314:	mov    rax,QWORD PTR [rcx]
   140002317:	mov    rbx,QWORD PTR [rax+0x20]
   14000231b:	mov    rcx,rbx
   14000231e:	call   QWORD PTR [rip+0x5fec]        # 0x140008310
   140002324:	lea    edx,[rdi+0x1]
   140002327:	mov    rcx,rsi
   14000232a:	call   rbx
   14000232c:	mov    rsi,QWORD PTR [rip+0xa3c5]        # 0x14000c6f8
   140002333:	test   rsi,rsi
   140002336:	je     0x14000234d
   140002338:	mov    rdx,QWORD PTR [rsi]
   14000233b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000233f:	mov    rcx,rbx
   140002342:	call   QWORD PTR [rip+0x5fc8]        # 0x140008310
   140002348:	mov    rcx,rsi
   14000234b:	call   rbx
   14000234d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002352:	mov    eax,edi
   140002354:	mov    rsi,QWORD PTR [rsp+0x38]
   140002359:	add    rsp,0x20
   14000235d:	pop    rdi
   14000235e:	ret    
   14000235f:	int3   
   140002360:	int3   
   140002361:	int3   
   140002362:	int3   
   140002363:	int3   
   140002364:	int3   
   140002365:	int3   
   140002366:	int3   
   140002367:	int3   
   140002368:	int3   
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	rex push rbx
   140002372:	sub    rsp,0x20
   140002376:	mov    ebx,0x1
   14000237b:	lock xadd DWORD PTR [rcx+0x14],ebx
   140002380:	inc    ebx
   140002382:	test   BYTE PTR [rcx+0x28],0x4
   140002386:	jne    0x1400023b3
   140002388:	cmp    ebx,0x2
   14000238b:	jne    0x1400023b3
   14000238d:	mov    rax,QWORD PTR [rip+0xa364]        # 0x14000c6f8
   140002394:	mov    rcx,QWORD PTR [rax]
   140002397:	lea    rax,[rip+0x13d2]        # 0x140003770
   14000239e:	cmp    QWORD PTR [rcx+0x8],rax
   1400023a2:	jne    0x1400023ac
   1400023a4:	call   QWORD PTR [rip+0x5cde]        # 0x140008088
   1400023aa:	jmp    0x1400023b3
   1400023ac:	lock inc DWORD PTR [rip+0xa34d]        # 0x14000c700
   1400023b3:	mov    eax,ebx
   1400023b5:	add    rsp,0x20
   1400023b9:	pop    rbx
   1400023ba:	ret    
   1400023bb:	int3   
   1400023bc:	int3   
   1400023bd:	int3   
   1400023be:	int3   
   1400023bf:	int3   
   1400023c0:	int3   
   1400023c1:	int3   
   1400023c2:	int3   
   1400023c3:	int3   
   1400023c4:	int3   
   1400023c5:	int3   
   1400023c6:	int3   
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400023da:	mov    QWORD PTR [rsp+0x18],rdi
   1400023df:	push   r14
   1400023e1:	sub    rsp,0x20
   1400023e5:	mov    r14,rcx
   1400023e8:	or     esi,0xffffffff
   1400023eb:	lock xadd DWORD PTR [rcx+0x14],esi
   1400023f0:	sub    esi,0x1
   1400023f3:	jne    0x14000242e
   1400023f5:	mov    rax,QWORD PTR [rcx]
   1400023f8:	mov    edi,DWORD PTR [rcx+0x28]
   1400023fb:	shr    edi,0x2
   1400023fe:	mov    rbx,QWORD PTR [rax+0x38]
   140002402:	mov    rcx,rbx
   140002405:	call   QWORD PTR [rip+0x5f05]        # 0x140008310
   14000240b:	lea    edx,[rsi+0x1]
   14000240e:	mov    rcx,r14
   140002411:	call   rbx
   140002413:	and    dil,0x1
   140002417:	je     0x140002455
   140002419:	mov    rdi,QWORD PTR [rip+0xa2d8]        # 0x14000c6f8
   140002420:	test   rdi,rdi
   140002423:	je     0x140002455
   140002425:	mov    rax,QWORD PTR [rdi]
   140002428:	mov    rbx,QWORD PTR [rax+0x10]
   14000242c:	jmp    0x140002447
   14000242e:	test   BYTE PTR [rcx+0x28],0x4
   140002432:	jne    0x140002455
   140002434:	cmp    esi,0x1
   140002437:	jne    0x140002455
   140002439:	mov    rdi,QWORD PTR [rip+0xa2b8]        # 0x14000c6f8
   140002440:	mov    rdx,QWORD PTR [rdi]
   140002443:	mov    rbx,QWORD PTR [rdx+0x10]
   140002447:	mov    rcx,rbx
   14000244a:	call   QWORD PTR [rip+0x5ec0]        # 0x140008310
   140002450:	mov    rcx,rdi
   140002453:	call   rbx
   140002455:	mov    rbx,QWORD PTR [rsp+0x30]
   14000245a:	mov    eax,esi
   14000245c:	mov    rsi,QWORD PTR [rsp+0x38]
   140002461:	mov    rdi,QWORD PTR [rsp+0x40]
   140002466:	add    rsp,0x20
   14000246a:	pop    r14
   14000246c:	ret    
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	int3   
   140002471:	int3   
   140002472:	int3   
   140002473:	int3   
   140002474:	int3   
   140002475:	int3   
   140002476:	int3   
   140002477:	int3   
   140002478:	int3   
   140002479:	int3   
   14000247a:	int3   
   14000247b:	int3   
   14000247c:	int3   
   14000247d:	int3   
   14000247e:	int3   
   14000247f:	int3   
   140002480:	mov    QWORD PTR [rsp+0x8],rbx
   140002485:	mov    QWORD PTR [rsp+0x10],rsi
   14000248a:	push   rdi
   14000248b:	sub    rsp,0x20
   14000248f:	xor    esi,esi
   140002491:	mov    rdi,rcx
   140002494:	mov    QWORD PTR [r8],rsi
   140002497:	cmp    DWORD PTR [rdx],esi
   140002499:	jne    0x1400024bc
   14000249b:	mov    eax,DWORD PTR [rip+0x75ab]        # 0x140009a4c
   1400024a1:	cmp    DWORD PTR [rdx+0x4],eax
   1400024a4:	jne    0x1400024bc
   1400024a6:	mov    eax,DWORD PTR [rip+0x75a4]        # 0x140009a50
   1400024ac:	cmp    DWORD PTR [rdx+0x8],eax
   1400024af:	jne    0x1400024bc
   1400024b1:	mov    eax,DWORD PTR [rip+0x759d]        # 0x140009a54
   1400024b7:	cmp    DWORD PTR [rdx+0xc],eax
   1400024ba:	je     0x1400024e5
   1400024bc:	cmp    DWORD PTR [rdx],0xaf86e2e0
   1400024c2:	jne    0x1400024ed
   1400024c4:	mov    eax,DWORD PTR [rip+0x7d82]        # 0x14000a24c
   1400024ca:	cmp    DWORD PTR [rdx+0x4],eax
   1400024cd:	jne    0x1400024ed
   1400024cf:	mov    eax,DWORD PTR [rip+0x7d7b]        # 0x14000a250
   1400024d5:	cmp    DWORD PTR [rdx+0x8],eax
   1400024d8:	jne    0x1400024ed
   1400024da:	mov    eax,DWORD PTR [rip+0x7d74]        # 0x14000a254
   1400024e0:	cmp    DWORD PTR [rdx+0xc],eax
   1400024e3:	jne    0x1400024ed
   1400024e5:	mov    QWORD PTR [r8],rcx
   1400024e8:	mov    rax,QWORD PTR [rcx]
   1400024eb:	jmp    0x14000254e
   1400024ed:	cmp    DWORD PTR [rdx],0x35
   1400024f0:	jne    0x140002518
   1400024f2:	mov    eax,DWORD PTR [rip+0x7dec]        # 0x14000a2e4
   1400024f8:	cmp    DWORD PTR [rdx+0x4],eax
   1400024fb:	jne    0x140002518
   1400024fd:	mov    eax,DWORD PTR [rip+0x7de5]        # 0x14000a2e8
   140002503:	cmp    DWORD PTR [rdx+0x8],eax
   140002506:	jne    0x140002518
   140002508:	mov    eax,DWORD PTR [rip+0x7dde]        # 0x14000a2ec
   14000250e:	cmp    DWORD PTR [rdx+0xc],eax
   140002511:	jne    0x140002518
   140002513:	mov    QWORD PTR [r8],rcx
   140002516:	jmp    0x140002548
   140002518:	cmp    DWORD PTR [rdx],0x2d161777
   14000251e:	jne    0x140002562
   140002520:	mov    eax,DWORD PTR [rip+0x7d36]        # 0x14000a25c
   140002526:	cmp    DWORD PTR [rdx+0x4],eax
   140002529:	jne    0x140002562
   14000252b:	mov    eax,DWORD PTR [rip+0x7d2f]        # 0x14000a260
   140002531:	cmp    DWORD PTR [rdx+0x8],eax
   140002534:	jne    0x140002562
   140002536:	mov    eax,DWORD PTR [rip+0x7d28]        # 0x14000a264
   14000253c:	cmp    DWORD PTR [rdx+0xc],eax
   14000253f:	jne    0x140002562
   140002541:	lea    rax,[rcx+0x8]
   140002545:	mov    QWORD PTR [r8],rax
   140002548:	mov    rdi,QWORD PTR [r8]
   14000254b:	mov    rax,QWORD PTR [rdi]
   14000254e:	mov    rbx,QWORD PTR [rax+0x8]
   140002552:	mov    rcx,rbx
   140002555:	call   QWORD PTR [rip+0x5db5]        # 0x140008310
   14000255b:	mov    rcx,rdi
   14000255e:	call   rbx
   140002560:	jmp    0x140002567
   140002562:	mov    esi,0x80004002
   140002567:	mov    rbx,QWORD PTR [rsp+0x30]
   14000256c:	mov    eax,esi
   14000256e:	mov    rsi,QWORD PTR [rsp+0x38]
   140002573:	add    rsp,0x20
   140002577:	pop    rdi
   140002578:	ret    
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    QWORD PTR [rsp+0x8],rbx
   140002585:	mov    QWORD PTR [rsp+0x10],rsi
   14000258a:	push   rdi
   14000258b:	sub    rsp,0x20
   14000258f:	xor    ebx,ebx
   140002591:	mov    rdi,r8
   140002594:	mov    QWORD PTR [r8],rbx
   140002597:	mov    rsi,rdx
   14000259a:	mov    DWORD PTR [rdx],ebx
   14000259c:	lea    ecx,[rbx+0x20]
   14000259f:	call   QWORD PTR [rip+0x5b03]        # 0x1400080a8
   1400025a5:	test   rax,rax
   1400025a8:	jne    0x1400025b1
   1400025aa:	mov    ebx,0x8007000e
   1400025af:	jmp    0x1400025d1
   1400025b1:	movups xmm0,XMMWORD PTR [rip+0x7d28]        # 0x14000a2e0
   1400025b8:	movdqu XMMWORD PTR [rax],xmm0
   1400025bc:	movups xmm1,XMMWORD PTR [rip+0x7c95]        # 0x14000a258
   1400025c3:	movdqu XMMWORD PTR [rax+0x10],xmm1
   1400025c8:	mov    DWORD PTR [rsi],0x2
   1400025ce:	mov    QWORD PTR [rdi],rax
   1400025d1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400025d6:	mov    eax,ebx
   1400025d8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025dd:	add    rsp,0x20
   1400025e1:	pop    rdi
   1400025e2:	ret    
   1400025e3:	int3   
   1400025e4:	int3   
   1400025e5:	int3   
   1400025e6:	int3   
   1400025e7:	int3   
   1400025e8:	int3   
   1400025e9:	int3   
   1400025ea:	int3   
   1400025eb:	int3   
   1400025ec:	int3   
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	sub    rsp,0x28
   1400025f4:	and    QWORD PTR [rdx],0x0
   1400025f8:	mov    ecx,0x8000000e
   1400025fd:	xor    edx,edx
   1400025ff:	call   QWORD PTR [rip+0x5b9b]        # 0x1400081a0
   140002605:	mov    eax,0x8000000e
   14000260a:	add    rsp,0x28
   14000260e:	ret    
   14000260f:	int3   
   140002610:	int3   
   140002611:	int3   
   140002612:	int3   
   140002613:	int3   
   140002614:	int3   
   140002615:	int3   
   140002616:	int3   
   140002617:	int3   
   140002618:	int3   
   140002619:	int3   
   14000261a:	int3   
   14000261b:	int3   
   14000261c:	int3   
   14000261d:	int3   
   14000261e:	int3   
   14000261f:	int3   
   140002620:	mov    QWORD PTR [rsp+0x8],rbx
   140002625:	push   rdi
   140002626:	sub    rsp,0x20
   14000262a:	mov    rbx,QWORD PTR [rcx+0x20]
   14000262e:	mov    rdi,rdx
   140002631:	test   rbx,rbx
   140002634:	je     0x140002649
   140002636:	mov    rbx,QWORD PTR [rbx+0x10]
   14000263a:	mov    rcx,rbx
   14000263d:	call   QWORD PTR [rip+0x5ccd]        # 0x140008310
   140002643:	call   rbx
   140002645:	mov    DWORD PTR [rdi],eax
   140002647:	jmp    0x14000264f
   140002649:	mov    DWORD PTR [rdx],0x2
   14000264f:	xor    eax,eax
   140002651:	mov    rbx,QWORD PTR [rsp+0x30]
   140002656:	add    rsp,0x20
   14000265a:	pop    rdi
   14000265b:	ret    
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	int3   
   140002661:	int3   
   140002662:	int3   
   140002663:	int3   
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	sub    rsp,0x28
   140002674:	and    QWORD PTR [rdx],0x0
   140002678:	mov    ecx,0x80004001
   14000267d:	xor    edx,edx
   14000267f:	call   QWORD PTR [rip+0x5b1b]        # 0x1400081a0
   140002685:	mov    eax,0x80004001
   14000268a:	add    rsp,0x28
   14000268e:	ret    
   14000268f:	int3   
   140002690:	int3   
   140002691:	int3   
   140002692:	int3   
   140002693:	int3   
   140002694:	int3   
   140002695:	int3   
   140002696:	int3   
   140002697:	int3   
   140002698:	mov    QWORD PTR [rsp+0x8],rbx
   14000269d:	push   rdi
   14000269e:	sub    rsp,0x20
   1400026a2:	mov    rdi,QWORD PTR [rcx]
   1400026a5:	test   rdi,rdi
   1400026a8:	je     0x1400026c3
   1400026aa:	and    QWORD PTR [rcx],0x0
   1400026ae:	mov    rax,QWORD PTR [rdi]
   1400026b1:	mov    rbx,QWORD PTR [rax+0x10]
   1400026b5:	mov    rcx,rbx
   1400026b8:	call   QWORD PTR [rip+0x5c52]        # 0x140008310
   1400026be:	mov    rcx,rdi
   1400026c1:	call   rbx
   1400026c3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026c8:	add    rsp,0x20
   1400026cc:	pop    rdi
   1400026cd:	ret    
   1400026ce:	int3   
   1400026cf:	int3   
   1400026d0:	int3   
   1400026d1:	int3   
   1400026d2:	int3   
   1400026d3:	int3   
   1400026d4:	rex push rbp
   1400026d6:	push   rsi
   1400026d7:	push   rdi
   1400026d8:	push   r14
   1400026da:	push   r15
   1400026dc:	mov    rbp,rsp
   1400026df:	sub    rsp,0x40
   1400026e3:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   1400026eb:	mov    QWORD PTR [rsp+0x70],rbx
   1400026f0:	mov    r15,rdx
   1400026f3:	mov    r14,rcx
   1400026f6:	mov    rdi,QWORD PTR [rcx]
   1400026f9:	test   rdi,rdi
   1400026fc:	je     0x140002717
   1400026fe:	and    QWORD PTR [rcx],0x0
   140002702:	mov    rax,QWORD PTR [rdi]
   140002705:	mov    rbx,QWORD PTR [rax+0x10]
   140002709:	mov    rcx,rbx
   14000270c:	call   QWORD PTR [rip+0x5bfe]        # 0x140008310
   140002712:	mov    rcx,rdi
   140002715:	call   rbx
   140002717:	and    QWORD PTR [r14],0x0
   14000271b:	and    QWORD PTR [rbp-0x20],0x0
   140002720:	and    QWORD PTR [rbp+0x48],0x0
   140002725:	lea    rdx,[rip+0x73bc]        # 0x140009ae8
   14000272c:	mov    ecx,0x20
   140002731:	call   0x1400056f8
   140002736:	mov    rsi,rax
   140002739:	mov    QWORD PTR [rbp+0x48],rax
   14000273d:	mov    QWORD PTR [rbp-0x10],rax
   140002741:	test   rax,rax
   140002744:	jne    0x140002750
   140002746:	mov    ebx,0x8007000e
   14000274b:	jmp    0x140002859
   140002750:	mov    QWORD PTR [rbp-0x8],rax
   140002754:	mov    DWORD PTR [rax+0xc],0x1
   14000275b:	lea    rax,[rip+0x7556]        # 0x140009cb8
   140002762:	mov    QWORD PTR [rsi],rax
   140002765:	mov    rax,QWORD PTR [rip+0x9f8c]        # 0x14000c6f8
   14000276c:	test   rax,rax
   14000276f:	je     0x140002794
   140002771:	mov    rax,QWORD PTR [rax]
   140002774:	lea    rcx,[rip+0xff5]        # 0x140003770
   14000277b:	cmp    QWORD PTR [rax+0x8],rcx
   14000277f:	jne    0x140002789
   140002781:	call   QWORD PTR [rip+0x5901]        # 0x140008088
   140002787:	jmp    0x140002794
   140002789:	lock inc DWORD PTR [rip+0x9f70]        # 0x14000c700
   140002790:	mov    rsi,QWORD PTR [rbp+0x48]
   140002794:	lea    rax,[rip+0x75b5]        # 0x140009d50
   14000279b:	mov    QWORD PTR [rsi],rax
   14000279e:	and    DWORD PTR [rsi+0x10],0x0
   1400027a2:	and    QWORD PTR [rsi+0x18],0x0
   1400027a7:	mov    QWORD PTR [rbp-0x20],rsi
   1400027ab:	and    QWORD PTR [rbp+0x48],0x0
   1400027b0:	mov    rdi,QWORD PTR [r15]
   1400027b3:	cmp    QWORD PTR [rsi+0x18],rdi
   1400027b7:	je     0x1400027f5
   1400027b9:	test   rdi,rdi
   1400027bc:	je     0x1400027d3
   1400027be:	mov    rax,QWORD PTR [rdi]
   1400027c1:	mov    rbx,QWORD PTR [rax+0x8]
   1400027c5:	mov    rcx,rbx
   1400027c8:	call   QWORD PTR [rip+0x5b42]        # 0x140008310
   1400027ce:	mov    rcx,rdi
   1400027d1:	call   rbx
   1400027d3:	mov    rbx,QWORD PTR [rsi+0x18]
   1400027d7:	mov    QWORD PTR [rsi+0x18],rdi
   1400027db:	test   rbx,rbx
   1400027de:	je     0x1400027f5
   1400027e0:	mov    rax,QWORD PTR [rbx]
   1400027e3:	mov    rdi,QWORD PTR [rax+0x10]
   1400027e7:	mov    rcx,rdi
   1400027ea:	call   QWORD PTR [rip+0x5b20]        # 0x140008310
   1400027f0:	mov    rcx,rbx
   1400027f3:	call   rdi
   1400027f5:	and    QWORD PTR [rbp+0x40],0x0
   1400027fa:	lea    r8,[rbp+0x40]
   1400027fe:	call   0x140005224
   140002803:	mov    ebx,eax
   140002805:	test   eax,eax
   140002807:	js     0x140002816
   140002809:	mov    rcx,QWORD PTR [rbp+0x40]
   14000280d:	call   QWORD PTR [rip+0x5915]        # 0x140008128
   140002813:	mov    DWORD PTR [rsi+0x10],eax
   140002816:	mov    rcx,QWORD PTR [rbp+0x40]
   14000281a:	and    QWORD PTR [rbp+0x40],0x0
   14000281f:	lea    rax,[rcx-0x1]
   140002823:	cmp    rax,0xfffffffffffffffd
   140002827:	ja     0x14000282f
   140002829:	call   QWORD PTR [rip+0x58c1]        # 0x1400080f0
   14000282f:	test   ebx,ebx
   140002831:	js     0x140002847
   140002833:	mov    r8,r14
   140002836:	lea    rdx,[rip+0x7a93]        # 0x14000a2d0
   14000283d:	mov    rcx,rsi
   140002840:	call   0x140002250
   140002845:	mov    ebx,eax
   140002847:	test   rsi,rsi
   14000284a:	je     0x140002859
   14000284c:	and    QWORD PTR [rbp-0x20],0x0
   140002851:	mov    rcx,rsi
   140002854:	call   0x1400022f0
   140002859:	mov    eax,ebx
   14000285b:	mov    rbx,QWORD PTR [rsp+0x70]
   140002860:	add    rsp,0x40
   140002864:	pop    r15
   140002866:	pop    r14
   140002868:	pop    rdi
   140002869:	pop    rsi
   14000286a:	pop    rbp
   14000286b:	ret    
   14000286c:	int3   
   14000286d:	int3   
   14000286e:	int3   
   14000286f:	int3   
   140002870:	int3   
   140002871:	int3   
   140002872:	int3   
   140002873:	int3   
   140002874:	int3   
   140002875:	int3   
   140002876:	int3   
   140002877:	int3   
   140002878:	int3   
   140002879:	int3   
   14000287a:	int3   
   14000287b:	int3   
   14000287c:	int3   
   14000287d:	int3   
   14000287e:	int3   
   14000287f:	int3   
   140002880:	mov    rax,rsp
   140002883:	mov    QWORD PTR [rax+0x8],rbx
   140002887:	mov    QWORD PTR [rax+0x10],rbp
   14000288b:	mov    QWORD PTR [rax+0x18],rsi
   14000288f:	mov    QWORD PTR [rax+0x20],rdi
   140002893:	push   r14
   140002895:	sub    rsp,0x30
   140002899:	and    QWORD PTR [rax-0x18],0x0
   14000289e:	lea    rdx,[rip+0x7243]        # 0x140009ae8
   1400028a5:	mov    r14,rcx
   1400028a8:	mov    rsi,r9
   1400028ab:	mov    ecx,0x18
   1400028b0:	mov    rbp,r8
   1400028b3:	call   0x1400056f8
   1400028b8:	mov    rbx,rax
   1400028bb:	test   rax,rax
   1400028be:	je     0x140002989
   1400028c4:	lea    rdi,[rip+0x7415]        # 0x140009ce0
   1400028cb:	mov    DWORD PTR [rax+0xc],0x1
   1400028d2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400028d6:	mov    DWORD PTR [rax+0x14],0x4
   1400028dd:	mov    QWORD PTR [rax],rdi
   1400028e0:	call   QWORD PTR [rip+0x5a2a]        # 0x140008310
   1400028e6:	mov    rcx,rbx
   1400028e9:	call   QWORD PTR [rdi+0x8]
   1400028ec:	mov    rax,QWORD PTR [rbx]
   1400028ef:	mov    QWORD PTR [rsp+0x20],rbx
   1400028f4:	mov    rdi,QWORD PTR [rax+0x10]
   1400028f8:	mov    rcx,rdi
   1400028fb:	call   QWORD PTR [rip+0x5a0f]        # 0x140008310
   140002901:	mov    rcx,rbx
   140002904:	call   rdi
   140002906:	mov    eax,DWORD PTR [r14]
   140002909:	mov    DWORD PTR [rbx+0x14],eax
   14000290c:	mov    rax,QWORD PTR [rbx]
   14000290f:	mov    rdi,QWORD PTR [rax]
   140002912:	mov    rcx,rdi
   140002915:	call   QWORD PTR [rip+0x59f5]        # 0x140008310
   14000291b:	mov    r8,rsi
   14000291e:	mov    rdx,rbp
   140002921:	mov    rcx,rbx
   140002924:	call   rdi
   140002926:	test   BYTE PTR [r14],0x1
   14000292a:	mov    esi,eax
   14000292c:	je     0x14000296d
   14000292e:	test   eax,eax
   140002930:	js     0x140002969
   140002932:	test   BYTE PTR [r14],0x4
   140002936:	je     0x140002965
   140002938:	mov    rax,QWORD PTR [rip+0x9db9]        # 0x14000c6f8
   14000293f:	mov    rcx,QWORD PTR [rax]
   140002942:	lea    rax,[rip+0xe27]        # 0x140003770
   140002949:	cmp    QWORD PTR [rcx+0x8],rax
   14000294d:	jne    0x140002957
   14000294f:	call   QWORD PTR [rip+0x5733]        # 0x140008088
   140002955:	jmp    0x14000296d
   140002957:	lock inc DWORD PTR [rip+0x9da2]        # 0x14000c700
   14000295e:	mov    rbx,QWORD PTR [rsp+0x20]
   140002963:	jmp    0x14000296d
   140002965:	xor    ebx,ebx
   140002967:	jmp    0x14000296d
   140002969:	and    DWORD PTR [rbx+0x14],0xfffffffa
   14000296d:	test   rbx,rbx
   140002970:	je     0x14000298e
   140002972:	mov    rax,QWORD PTR [rbx]
   140002975:	mov    rdi,QWORD PTR [rax+0x10]
   140002979:	mov    rcx,rdi
   14000297c:	call   QWORD PTR [rip+0x598e]        # 0x140008310
   140002982:	mov    rcx,rbx
   140002985:	call   rdi
   140002987:	jmp    0x14000298e
   140002989:	mov    esi,0x8007000e
   14000298e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002993:	mov    eax,esi
   140002995:	mov    rsi,QWORD PTR [rsp+0x50]
   14000299a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000299f:	mov    rdi,QWORD PTR [rsp+0x58]
   1400029a4:	add    rsp,0x30
   1400029a8:	pop    r14
   1400029aa:	ret    
   1400029ab:	int3   
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	int3   
   1400029b1:	int3   
   1400029b2:	int3   
   1400029b3:	int3   
   1400029b4:	int3   
   1400029b5:	int3   
   1400029b6:	int3   
   1400029b7:	int3   
   1400029b8:	int3   
   1400029b9:	int3   
   1400029ba:	int3   
   1400029bb:	int3   
   1400029bc:	int3   
   1400029bd:	int3   
   1400029be:	int3   
   1400029bf:	int3   
   1400029c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400029ca:	push   rsi
   1400029cb:	push   rdi
   1400029cc:	push   r14
   1400029ce:	sub    rsp,0x20
   1400029d2:	and    QWORD PTR [r9],0x0
   1400029d6:	mov    r14,r9
   1400029d9:	mov    rbp,r8
   1400029dc:	test   rdx,rdx
   1400029df:	je     0x1400029f4
   1400029e1:	mov    ebx,0x80040110
   1400029e6:	xor    edx,edx
   1400029e8:	mov    ecx,ebx
   1400029ea:	call   QWORD PTR [rip+0x57b0]        # 0x1400081a0
   1400029f0:	mov    eax,ebx
   1400029f2:	jmp    0x140002a52
   1400029f4:	and    QWORD PTR [rsp+0x48],0x0
   1400029fa:	lea    rcx,[rsp+0x48]
   1400029ff:	call   0x140002a6c
   140002a04:	mov    esi,eax
   140002a06:	test   eax,eax
   140002a08:	js     0x140002a2b
   140002a0a:	mov    rbx,QWORD PTR [rsp+0x48]
   140002a0f:	mov    rax,QWORD PTR [rbx]
   140002a12:	mov    rdi,QWORD PTR [rax]
   140002a15:	mov    rcx,rdi
   140002a18:	call   QWORD PTR [rip+0x58f2]        # 0x140008310
   140002a1e:	mov    r8,r14
   140002a21:	mov    rdx,rbp
   140002a24:	mov    rcx,rbx
   140002a27:	call   rdi
   140002a29:	mov    esi,eax
   140002a2b:	mov    rdi,QWORD PTR [rsp+0x48]
   140002a30:	test   rdi,rdi
   140002a33:	je     0x140002a50
   140002a35:	and    QWORD PTR [rsp+0x48],0x0
   140002a3b:	mov    rdx,QWORD PTR [rdi]
   140002a3e:	mov    rbx,QWORD PTR [rdx+0x10]
   140002a42:	mov    rcx,rbx
   140002a45:	call   QWORD PTR [rip+0x58c5]        # 0x140008310
   140002a4b:	mov    rcx,rdi
   140002a4e:	call   rbx
   140002a50:	mov    eax,esi
   140002a52:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a57:	mov    rbp,QWORD PTR [rsp+0x50]
   140002a5c:	add    rsp,0x20
   140002a60:	pop    r14
   140002a62:	pop    rdi
   140002a63:	pop    rsi
   140002a64:	ret    
   140002a65:	int3   
   140002a66:	int3   
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	mov    QWORD PTR [rsp+0x8],rbx
   140002a71:	mov    QWORD PTR [rsp+0x10],rsi
   140002a76:	push   rdi
   140002a77:	sub    rsp,0x20
   140002a7b:	and    QWORD PTR [rcx],0x0
   140002a7f:	lea    rdx,[rip+0x7062]        # 0x140009ae8
   140002a86:	mov    rsi,rcx
   140002a89:	mov    ecx,0x30
   140002a8e:	call   0x1400056f8
   140002a93:	mov    rbx,rax
   140002a96:	test   rax,rax
   140002a99:	je     0x140002b3e
   140002a9f:	and    QWORD PTR [rbx+0x20],0x0
   140002aa4:	mov    DWORD PTR [rax+0x14],0x1
   140002aab:	lea    rax,[rip+0x71c6]        # 0x140009c78
   140002ab2:	mov    QWORD PTR [rbx],rax
   140002ab5:	lea    rax,[rip+0x7154]        # 0x140009c10
   140002abc:	mov    QWORD PTR [rbx+0x8],rax
   140002ac0:	mov    rax,QWORD PTR [rip+0x9c31]        # 0x14000c6f8
   140002ac7:	mov    DWORD PTR [rbx+0x28],0x4
   140002ace:	test   rax,rax
   140002ad1:	je     0x140002af2
   140002ad3:	mov    rax,QWORD PTR [rax]
   140002ad6:	lea    rcx,[rip+0xc93]        # 0x140003770
   140002add:	cmp    QWORD PTR [rax+0x8],rcx
   140002ae1:	jne    0x140002aeb
   140002ae3:	call   QWORD PTR [rip+0x559f]        # 0x140008088
   140002ae9:	jmp    0x140002af2
   140002aeb:	lock inc DWORD PTR [rip+0x9c0e]        # 0x14000c700
   140002af2:	lea    rax,[rip+0x70d7]        # 0x140009bd0
   140002af9:	mov    QWORD PTR [rbx],rax
   140002afc:	lea    rax,[rip+0x720d]        # 0x140009d10
   140002b03:	mov    QWORD PTR [rbx+0x8],rax
   140002b07:	mov    rax,QWORD PTR [rbx]
   140002b0a:	mov    rdi,QWORD PTR [rax]
   140002b0d:	mov    rcx,rdi
   140002b10:	call   QWORD PTR [rip+0x57fa]        # 0x140008310
   140002b16:	mov    r8,rsi
   140002b19:	lea    rdx,[rip+0x6f28]        # 0x140009a48
   140002b20:	mov    rcx,rbx
   140002b23:	call   rdi
   140002b25:	mov    rcx,QWORD PTR [rbx]
   140002b28:	mov    esi,eax
   140002b2a:	mov    rdi,QWORD PTR [rcx+0x10]
   140002b2e:	mov    rcx,rdi
   140002b31:	call   QWORD PTR [rip+0x57d9]        # 0x140008310
   140002b37:	mov    rcx,rbx
   140002b3a:	call   rdi
   140002b3c:	jmp    0x140002b43
   140002b3e:	mov    esi,0x8007000e
   140002b43:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b48:	mov    eax,esi
   140002b4a:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b4f:	add    rsp,0x20
   140002b53:	pop    rdi
   140002b54:	ret    
   140002b55:	int3   
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	int3   
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	rex push rbx
   140002b62:	sub    rsp,0x20
   140002b66:	mov    DWORD PTR [rcx+0x14],0xc0000001
   140002b6d:	mov    rbx,rcx
   140002b70:	test   dl,0x1
   140002b73:	je     0x140002b7b
   140002b75:	call   QWORD PTR [rip+0x575d]        # 0x1400082d8
   140002b7b:	mov    rax,rbx
   140002b7e:	add    rsp,0x20
   140002b82:	pop    rbx
   140002b83:	ret    
   140002b84:	int3   
   140002b85:	int3   
   140002b86:	int3   
   140002b87:	int3   
   140002b88:	int3   
   140002b89:	int3   
   140002b8a:	int3   
   140002b8b:	int3   
   140002b8c:	sub    rsp,0x28
   140002b90:	mov    rax,QWORD PTR [rcx]
   140002b93:	test   rax,rax
   140002b96:	je     0x140002ba4
   140002b98:	and    QWORD PTR [rcx],0x0
   140002b9c:	mov    rcx,rax
   140002b9f:	call   0x1400022f0
   140002ba4:	add    rsp,0x28
   140002ba8:	ret    
   140002ba9:	int3   
   140002baa:	int3   
   140002bab:	int3   
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	sub    rsp,0x28
   140002bb4:	mov    rcx,QWORD PTR [rcx]
   140002bb7:	test   rcx,rcx
   140002bba:	je     0x140002bc2
   140002bbc:	call   QWORD PTR [rip+0x5716]        # 0x1400082d8
   140002bc2:	add    rsp,0x28
   140002bc6:	ret    
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	sub    rcx,0x8
   140002bd4:	jmp    0x140002480
   140002bd9:	int3   
   140002bda:	int3   
   140002bdb:	int3   
   140002bdc:	int3   
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	sub    rcx,0x8
   140002be4:	jmp    0x140002620
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	sub    rcx,0x8
   140002bf4:	jmp    0x1400023d0
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	sub    rcx,0x8
   140002c04:	jmp    0x1400025f0
   140002c09:	int3   
   140002c0a:	int3   
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	sub    rcx,0x8
   140002c14:	jmp    0x140002580
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	sub    rcx,0x8
   140002c24:	jmp    0x140002370
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	mov    eax,DWORD PTR [rip+0x9aca]        # 0x14000c700
   140002c36:	ret    
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	lea    rax,[rip+0x8329]        # 0x14000af70
   140002c47:	ret    
   140002c48:	int3   
   140002c49:	int3   
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	lea    rax,[rip+0x8359]        # 0x14000afb0
   140002c57:	ret    
   140002c58:	int3   
   140002c59:	int3   
   140002c5a:	int3   
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	lea    rax,[rip+0x8351]        # 0x14000afb8
   140002c67:	ret    
   140002c68:	int3   
   140002c69:	int3   
   140002c6a:	int3   
   140002c6b:	int3   
   140002c6c:	int3   
   140002c6d:	int3   
   140002c6e:	int3   
   140002c6f:	int3   
   140002c70:	lea    rax,[rip+0x9a79]        # 0x14000c6f0
   140002c77:	ret    
   140002c78:	int3   
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	mov    QWORD PTR [rsp+0x8],rbx
   140002c85:	push   rdi
   140002c86:	sub    rsp,0x20
   140002c8a:	mov    rdi,rcx
   140002c8d:	mov    rbx,rdx
   140002c90:	mov    rcx,rdx
   140002c93:	call   QWORD PTR [rip+0x537f]        # 0x140008018
   140002c99:	mov    QWORD PTR [rdi],rbx
   140002c9c:	mov    rax,rdi
   140002c9f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ca4:	add    rsp,0x20
   140002ca8:	pop    rdi
   140002ca9:	ret    
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002cb5:	push   rdi
   140002cb6:	sub    rsp,0x20
   140002cba:	mov    rdi,rcx
   140002cbd:	mov    rbx,rdx
   140002cc0:	mov    rcx,rdx
   140002cc3:	call   QWORD PTR [rip+0x5367]        # 0x140008030
   140002cc9:	mov    QWORD PTR [rdi],rbx
   140002ccc:	mov    rax,rdi
   140002ccf:	mov    rbx,QWORD PTR [rsp+0x30]
   140002cd4:	add    rsp,0x20
   140002cd8:	pop    rdi
   140002cd9:	ret    
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ce5:	mov    QWORD PTR [rsp+0x18],rbp
   140002cea:	mov    QWORD PTR [rsp+0x10],rdx
   140002cef:	push   rsi
   140002cf0:	push   rdi
   140002cf1:	push   r12
   140002cf3:	push   r13
   140002cf5:	push   r14
   140002cf7:	sub    rsp,0x20
   140002cfb:	mov    bpl,r8b
   140002cfe:	lea    rsi,[rip+0x8273]        # 0x14000af78
   140002d05:	mov    r14,rcx
   140002d08:	lea    r13,[rip+0x82a9]        # 0x14000afb8
   140002d0f:	lea    r12,[rip+0xffffffffffffff1a]        # 0x140002c30
   140002d16:	cmp    rsi,r13
   140002d19:	jae    0x140002dd7
   140002d1f:	cmp    QWORD PTR [rsi],0x0
   140002d23:	je     0x140002dca
   140002d29:	mov    rax,QWORD PTR [r14]
   140002d2c:	cmp    QWORD PTR [rax+0x18],r12
   140002d30:	jne    0x140002d3a
   140002d32:	mov    eax,DWORD PTR [rip+0x99c8]        # 0x14000c700
   140002d38:	jmp    0x140002d3c
   140002d3a:	xor    eax,eax
   140002d3c:	test   eax,eax
   140002d3e:	je     0x140002d49
   140002d40:	test   bpl,bpl
   140002d43:	je     0x140002dd3
   140002d49:	mov    rax,QWORD PTR [rsi]
   140002d4c:	mov    rcx,QWORD PTR [rax+0x18]
   140002d50:	mov    rax,QWORD PTR [rcx]
   140002d53:	test   rax,rax
   140002d56:	je     0x140002dca
   140002d58:	lea    rdx,[rip+0x9991]        # 0x14000c6f0
   140002d5f:	lea    rcx,[rsp+0x58]
   140002d64:	call   0x140002c80
   140002d69:	mov    rax,QWORD PTR [rsi]
   140002d6c:	mov    rcx,QWORD PTR [rax+0x18]
   140002d70:	mov    rbx,QWORD PTR [rcx]
   140002d73:	test   rbx,rbx
   140002d76:	jne    0x140002d8f
   140002d78:	mov    rcx,QWORD PTR [rsp+0x58]
   140002d7d:	test   rcx,rcx
   140002d80:	je     0x140002dca
   140002d82:	call   QWORD PTR [rip+0x5288]        # 0x140008010
   140002d88:	and    QWORD PTR [rsp+0x58],rbx
   140002d8d:	jmp    0x140002dca
   140002d8f:	and    QWORD PTR [rcx],0x0
   140002d93:	mov    rcx,QWORD PTR [rsp+0x58]
   140002d98:	test   rcx,rcx
   140002d9b:	je     0x140002da9
   140002d9d:	call   QWORD PTR [rip+0x526d]        # 0x140008010
   140002da3:	and    QWORD PTR [rsp+0x58],0x0
   140002da9:	mov    rcx,rbx
   140002dac:	call   QWORD PTR [rip+0x5276]        # 0x140008028
   140002db2:	mov    rdi,rax
   140002db5:	mov    rcx,QWORD PTR [rax]
   140002db8:	mov    rbx,QWORD PTR [rcx+0x10]
   140002dbc:	mov    rcx,rbx
   140002dbf:	call   QWORD PTR [rip+0x554b]        # 0x140008310
   140002dc5:	mov    rcx,rdi
   140002dc8:	call   rbx
   140002dca:	add    rsi,0x8
   140002dce:	jmp    0x140002d16
   140002dd3:	xor    al,al
   140002dd5:	jmp    0x140002def
   140002dd7:	mov    rax,QWORD PTR [r14]
   140002dda:	cmp    QWORD PTR [rax+0x18],r12
   140002dde:	jne    0x140002de8
   140002de0:	mov    eax,DWORD PTR [rip+0x991a]        # 0x14000c700
   140002de6:	jmp    0x140002dea
   140002de8:	xor    eax,eax
   140002dea:	test   eax,eax
   140002dec:	sete   al
   140002def:	mov    rbx,QWORD PTR [rsp+0x50]
   140002df4:	mov    rbp,QWORD PTR [rsp+0x60]
   140002df9:	add    rsp,0x20
   140002dfd:	pop    r14
   140002dff:	pop    r13
   140002e01:	pop    r12
   140002e03:	pop    rdi
   140002e04:	pop    rsi
   140002e05:	ret    
   140002e06:	int3   
   140002e07:	int3   
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	mov    rax,rsp
   140002e0f:	mov    QWORD PTR [rax+0x10],rbx
   140002e13:	mov    QWORD PTR [rax+0x20],rsi
   140002e17:	mov    QWORD PTR [rax+0x18],r8
   140002e1b:	mov    QWORD PTR [rax+0x8],rcx
   140002e1f:	push   rbp
   140002e20:	push   rdi
   140002e21:	push   r14
   140002e23:	mov    rbp,rsp
   140002e26:	sub    rsp,0x20
   140002e2a:	and    QWORD PTR [rbp+0x30],0x0
   140002e2f:	mov    rdi,r9
   140002e32:	mov    r14,QWORD PTR [rbp+0x40]
   140002e36:	mov    rsi,rdx
   140002e39:	and    QWORD PTR [r14],0x0
   140002e3d:	mov    rax,QWORD PTR [r9+0x18]
   140002e41:	mov    rcx,QWORD PTR [rax]
   140002e44:	test   rcx,rcx
   140002e47:	je     0x140002eb7
   140002e49:	lea    rdx,[rip+0x98a0]        # 0x14000c6f0
   140002e50:	lea    rcx,[rbp+0x20]
   140002e54:	call   0x140002cb0
   140002e59:	mov    rax,QWORD PTR [rdi+0x18]
   140002e5d:	mov    rcx,QWORD PTR [rax]
   140002e60:	test   rcx,rcx
   140002e63:	je     0x140002ea8
   140002e65:	call   QWORD PTR [rip+0x51bd]        # 0x140008028
   140002e6b:	mov    QWORD PTR [rbp+0x30],rax
   140002e6f:	mov    rdi,rax
   140002e72:	mov    rcx,QWORD PTR [rax]
   140002e75:	mov    rbx,QWORD PTR [rcx]
   140002e78:	mov    rcx,rbx
   140002e7b:	call   QWORD PTR [rip+0x548f]        # 0x140008310
   140002e81:	mov    r8,r14
   140002e84:	lea    rdx,[rip+0x7455]        # 0x14000a2e0
   140002e8b:	mov    rcx,rdi
   140002e8e:	call   rbx
   140002e90:	mov    rcx,QWORD PTR [rbp+0x20]
   140002e94:	mov    ebx,eax
   140002e96:	test   rcx,rcx
   140002e99:	je     0x140002ea1
   140002e9b:	call   QWORD PTR [rip+0x517f]        # 0x140008020
   140002ea1:	mov    eax,ebx
   140002ea3:	jmp    0x140002f87
   140002ea8:	mov    rcx,QWORD PTR [rbp+0x20]
   140002eac:	test   rcx,rcx
   140002eaf:	je     0x140002eb7
   140002eb1:	call   QWORD PTR [rip+0x5169]        # 0x140008020
   140002eb7:	mov    rbx,QWORD PTR [rdi]
   140002eba:	mov    rcx,rbx
   140002ebd:	call   QWORD PTR [rip+0x544d]        # 0x140008310
   140002ec3:	lea    r9,[rbp+0x30]
   140002ec7:	mov    rdx,rdi
   140002eca:	lea    r8,[rip+0x740f]        # 0x14000a2e0
   140002ed1:	mov    rcx,rsi
   140002ed4:	call   rbx
   140002ed6:	test   eax,eax
   140002ed8:	js     0x140002f87
   140002ede:	test   BYTE PTR [rsi],0x4
   140002ee1:	jne    0x140002f7e
   140002ee7:	lea    rdx,[rip+0x9802]        # 0x14000c6f0
   140002eee:	xor    esi,esi
   140002ef0:	lea    rcx,[rbp+0x40]
   140002ef4:	call   0x140002c80
   140002ef9:	mov    rax,QWORD PTR [rdi+0x18]
   140002efd:	mov    rcx,QWORD PTR [rax]
   140002f00:	test   rcx,rcx
   140002f03:	jne    0x140002f18
   140002f05:	mov    rcx,QWORD PTR [rbp+0x30]
   140002f09:	call   QWORD PTR [rip+0x50f9]        # 0x140008008
   140002f0f:	mov    rcx,QWORD PTR [rdi+0x18]
   140002f13:	mov    QWORD PTR [rcx],rax
   140002f16:	jmp    0x140002f36
   140002f18:	call   QWORD PTR [rip+0x510a]        # 0x140008028
   140002f1e:	mov    rsi,rax
   140002f21:	mov    rcx,QWORD PTR [rax]
   140002f24:	mov    rbx,QWORD PTR [rcx+0x8]
   140002f28:	mov    rcx,rbx
   140002f2b:	call   QWORD PTR [rip+0x53df]        # 0x140008310
   140002f31:	mov    rcx,rsi
   140002f34:	call   rbx
   140002f36:	mov    rcx,QWORD PTR [rbp+0x40]
   140002f3a:	test   rcx,rcx
   140002f3d:	je     0x140002f45
   140002f3f:	call   QWORD PTR [rip+0x50cb]        # 0x140008010
   140002f45:	test   rsi,rsi
   140002f48:	je     0x140002f7e
   140002f4a:	mov    rdi,QWORD PTR [rbp+0x30]
   140002f4e:	mov    rax,QWORD PTR [rdi]
   140002f51:	mov    rbx,QWORD PTR [rax+0x10]
   140002f55:	mov    rcx,rbx
   140002f58:	call   QWORD PTR [rip+0x53b2]        # 0x140008310
   140002f5e:	mov    rcx,rdi
   140002f61:	call   rbx
   140002f63:	mov    rdi,QWORD PTR [rbp+0x30]
   140002f67:	mov    rax,QWORD PTR [rdi]
   140002f6a:	mov    rbx,QWORD PTR [rax+0x10]
   140002f6e:	mov    rcx,rbx
   140002f71:	call   QWORD PTR [rip+0x5399]        # 0x140008310
   140002f77:	mov    rcx,rdi
   140002f7a:	call   rbx
   140002f7c:	jmp    0x140002f82
   140002f7e:	mov    rsi,QWORD PTR [rbp+0x30]
   140002f82:	mov    QWORD PTR [r14],rsi
   140002f85:	xor    eax,eax
   140002f87:	mov    rbx,QWORD PTR [rsp+0x48]
   140002f8c:	mov    rsi,QWORD PTR [rsp+0x58]
   140002f91:	add    rsp,0x20
   140002f95:	pop    r14
   140002f97:	pop    rdi
   140002f98:	pop    rbp
   140002f99:	ret    
   140002f9a:	int3   
   140002f9b:	int3   
   140002f9c:	int3   
   140002f9d:	int3   
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140002fa5:	mov    QWORD PTR [rsp+0x10],rbp
   140002faa:	mov    QWORD PTR [rsp+0x18],rsi
   140002faf:	push   rdi
   140002fb0:	push   r12
   140002fb2:	push   r13
   140002fb4:	push   r14
   140002fb6:	push   r15
   140002fb8:	sub    rsp,0x20
   140002fbc:	xor    r13d,r13d
   140002fbf:	lea    r14,[rip+0x7fb2]        # 0x14000af78
   140002fc6:	lea    rax,[rip+0x7fe3]        # 0x14000afb0
   140002fcd:	mov    r12,rcx
   140002fd0:	lea    rsi,[rip+0x7fe0]        # 0x14000afb7
   140002fd7:	mov    edi,r13d
   140002fda:	sub    rsi,r14
   140002fdd:	mov    ebp,r13d
   140002fe0:	shr    rsi,0x3
   140002fe4:	mov    edx,r13d
   140002fe7:	cmp    r14,rax
   140002fea:	mov    rax,r14
   140002fed:	cmova  rsi,r13
   140002ff1:	test   rsi,rsi
   140002ff4:	je     0x1400030df
   140002ffa:	cmp    QWORD PTR [rax],r13
   140002ffd:	je     0x140003001
   140002fff:	inc    ebp
   140003001:	add    rax,0x8
   140003005:	inc    rdx
   140003008:	cmp    rdx,rsi
   14000300b:	jb     0x140002ffa
   14000300d:	test   ebp,ebp
   14000300f:	je     0x1400030df
   140003015:	mov    ecx,ebp
   140003017:	mov    eax,0x4
   14000301c:	mul    rcx
   14000301f:	mov    rcx,0xffffffffffffffff
   140003026:	lea    rdx,[rip+0x6abb]        # 0x140009ae8
   14000302d:	cmovo  rax,rcx
   140003031:	mov    rcx,rax
   140003034:	call   0x140005720
   140003039:	mov    r15,rax
   14000303c:	test   rax,rax
   14000303f:	jne    0x14000304b
   140003041:	mov    edi,0x8007000e
   140003046:	jmp    0x1400030ce
   14000304b:	mov    r9d,r13d
   14000304e:	mov    r8,r13
   140003051:	mov    rdx,r14
   140003054:	test   rsi,rsi
   140003057:	je     0x14000307e
   140003059:	mov    rax,QWORD PTR [rdx]
   14000305c:	test   rax,rax
   14000305f:	je     0x140003072
   140003061:	mov    rax,QWORD PTR [rax+0x18]
   140003065:	mov    ecx,r9d
   140003068:	inc    r9d
   14000306b:	mov    eax,DWORD PTR [rax+0x8]
   14000306e:	mov    DWORD PTR [r15+rcx*4],eax
   140003072:	add    rdx,0x8
   140003076:	inc    r8
   140003079:	cmp    r8,rsi
   14000307c:	jb     0x140003059
   14000307e:	mov    rax,QWORD PTR [r12]
   140003082:	mov    rbx,QWORD PTR [rax+0x58]
   140003086:	mov    rcx,rbx
   140003089:	call   QWORD PTR [rip+0x5281]        # 0x140008310
   14000308f:	mov    r9d,ebp
   140003092:	mov    r8,r15
   140003095:	xor    edx,edx
   140003097:	mov    rcx,r12
   14000309a:	call   rbx
   14000309c:	mov    edi,eax
   14000309e:	mov    r9d,r13d
   1400030a1:	mov    r8,r13
   1400030a4:	test   rsi,rsi
   1400030a7:	je     0x1400030ce
   1400030a9:	mov    rdx,QWORD PTR [r14]
   1400030ac:	test   rdx,rdx
   1400030af:	je     0x1400030c2
   1400030b1:	mov    rdx,QWORD PTR [rdx+0x18]
   1400030b5:	mov    ecx,r9d
   1400030b8:	inc    r9d
   1400030bb:	mov    eax,DWORD PTR [r15+rcx*4]
   1400030bf:	mov    DWORD PTR [rdx+0x8],eax
   1400030c2:	add    r14,0x8
   1400030c6:	inc    r8
   1400030c9:	cmp    r8,rsi
   1400030cc:	jb     0x1400030a9
   1400030ce:	mov    rcx,r15
   1400030d1:	call   QWORD PTR [rip+0x5201]        # 0x1400082d8
   1400030d7:	test   edi,edi
   1400030d9:	js     0x14000316b
   1400030df:	lea    rbx,[rip+0x7ed2]        # 0x14000afb8
   1400030e6:	lea    rcx,[rip+0x7ecb]        # 0x14000afb8
   1400030ed:	mov    rax,rbx
   1400030f0:	cmp    rbx,rcx
   1400030f3:	jae    0x14000316b
   1400030f5:	cmp    QWORD PTR [rax],r13
   1400030f8:	jne    0x140003103
   1400030fa:	add    rax,0x8
   1400030fe:	cmp    rax,rcx
   140003101:	jmp    0x1400030f3
   140003103:	mov    rax,QWORD PTR [rax]
   140003106:	lea    rdx,[rip+0x643]        # 0x140003750
   14000310d:	mov    rcx,QWORD PTR [rax+0x18]
   140003111:	mov    rax,QWORD PTR [r12]
   140003115:	cmp    QWORD PTR [rax+0x48],rdx
   140003119:	jne    0x14000315c
   14000311b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000311f:	call   QWORD PTR [rip+0x508b]        # 0x1400081b0
   140003125:	lea    rcx,[rip+0x7e93]        # 0x14000afbf
   14000312c:	mov    edi,r13d
   14000312f:	sub    rcx,rbx
   140003132:	mov    rdx,r13
   140003135:	shr    rcx,0x3
   140003139:	test   rcx,rcx
   14000313c:	je     0x14000316b
   14000313e:	mov    rax,QWORD PTR [rbx]
   140003141:	test   rax,rax
   140003144:	je     0x14000314e
   140003146:	mov    rax,QWORD PTR [rax+0x18]
   14000314a:	mov    QWORD PTR [rax+0x8],r13
   14000314e:	add    rbx,0x8
   140003152:	inc    rdx
   140003155:	cmp    rdx,rcx
   140003158:	jb     0x14000313e
   14000315a:	jmp    0x14000316b
   14000315c:	mov    edi,0x80004001
   140003161:	xor    edx,edx
   140003163:	mov    ecx,edi
   140003165:	call   QWORD PTR [rip+0x5035]        # 0x1400081a0
   14000316b:	xor    r8d,r8d
   14000316e:	mov    rcx,r12
   140003171:	call   0x140002ce0
   140003176:	mov    rbx,QWORD PTR [rsp+0x50]
   14000317b:	mov    eax,edi
   14000317d:	mov    rbp,QWORD PTR [rsp+0x58]
   140003182:	mov    rsi,QWORD PTR [rsp+0x60]
   140003187:	add    rsp,0x20
   14000318b:	pop    r15
   14000318d:	pop    r14
   14000318f:	pop    r13
   140003191:	pop    r12
   140003193:	pop    rdi
   140003194:	ret    
   140003195:	int3   
   140003196:	int3   
   140003197:	int3   
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400031aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400031af:	push   rdi
   1400031b0:	push   r12
   1400031b2:	push   r13
   1400031b4:	push   r14
   1400031b6:	push   r15
   1400031b8:	sub    rsp,0x30
   1400031bc:	mov    r14,QWORD PTR [rsp+0x80]
   1400031c4:	xor    eax,eax
   1400031c6:	mov    r15,r9
   1400031c9:	mov    r12,r8
   1400031cc:	mov    r13,rdx
   1400031cf:	mov    rbp,rcx
   1400031d2:	mov    QWORD PTR [r14],rax
   1400031d5:	mov    QWORD PTR [r14+0x8],rax
   1400031d9:	mov    QWORD PTR [r14+0x10],rax
   1400031dd:	cmp    BYTE PTR [rcx+0x10],al
   1400031e0:	je     0x1400031ec
   1400031e2:	mov    ebx,0x800704c7
   1400031e7:	jmp    0x14000326e
   1400031ec:	lea    rdi,[rcx+0x18]
   1400031f0:	mov    rsi,QWORD PTR [rdi]
   1400031f3:	test   rsi,rsi
   1400031f6:	je     0x140003210
   1400031f8:	and    QWORD PTR [rdi],rax
   1400031fb:	mov    rax,QWORD PTR [rsi]
   1400031fe:	mov    rbx,QWORD PTR [rax+0x10]
   140003202:	mov    rcx,rbx
   140003205:	call   QWORD PTR [rip+0x5105]        # 0x140008310
   14000320b:	mov    rcx,rsi
   14000320e:	call   rbx
   140003210:	xor    edx,edx
   140003212:	mov    QWORD PTR [rsp+0x20],rdi
   140003217:	lea    r9,[rip+0x710a]        # 0x14000a328
   14000321e:	lea    rcx,[rip+0x7193]        # 0x14000a3b8
   140003225:	lea    r8d,[rdx+0x1]
   140003229:	call   QWORD PTR [rip+0x4e91]        # 0x1400080c0
   14000322f:	mov    ebx,eax
   140003231:	test   eax,eax
   140003233:	js     0x14000326e
   140003235:	mov    rcx,rbp
   140003238:	call   QWORD PTR [rip+0x4e0a]        # 0x140008048
   14000323e:	mov    rdi,QWORD PTR [rdi]
   140003241:	mov    rax,QWORD PTR [rdi]
   140003244:	mov    rbx,QWORD PTR [rax+0x18]
   140003248:	mov    rcx,rbx
   14000324b:	call   QWORD PTR [rip+0x50bf]        # 0x140008310
   140003251:	mov    r9,r15
   140003254:	mov    QWORD PTR [rsp+0x20],r14
   140003259:	mov    r8,r12
   14000325c:	mov    rdx,r13
   14000325f:	mov    rcx,rdi
   140003262:	call   rbx
   140003264:	xor    ecx,ecx
   140003266:	mov    ebx,eax
   140003268:	call   QWORD PTR [rip+0x4dda]        # 0x140008048
   14000326e:	mov    rbp,QWORD PTR [rsp+0x68]
   140003273:	mov    eax,ebx
   140003275:	mov    rbx,QWORD PTR [rsp+0x60]
   14000327a:	mov    rsi,QWORD PTR [rsp+0x70]
   14000327f:	add    rsp,0x30
   140003283:	pop    r15
   140003285:	pop    r14
   140003287:	pop    r13
   140003289:	pop    r12
   14000328b:	pop    rdi
   14000328c:	ret    
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	int3   
   140003291:	int3   
   140003292:	int3   
   140003293:	int3   
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032a5:	push   rdi
   1400032a6:	sub    rsp,0x20
   1400032aa:	mov    rdi,QWORD PTR [rcx+0x18]
   1400032ae:	mov    BYTE PTR [rcx+0x10],0x1
   1400032b2:	test   rdi,rdi
   1400032b5:	je     0x1400032ce
   1400032b7:	mov    rax,QWORD PTR [rdi]
   1400032ba:	mov    rbx,QWORD PTR [rax+0x20]
   1400032be:	mov    rcx,rbx
   1400032c1:	call   QWORD PTR [rip+0x5049]        # 0x140008310
   1400032c7:	mov    rcx,rdi
   1400032ca:	call   rbx
   1400032cc:	jmp    0x1400032d3
   1400032ce:	mov    eax,0x80004005
   1400032d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032d8:	add    rsp,0x20
   1400032dc:	pop    rdi
   1400032dd:	ret    
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	int3   
   1400032e1:	int3   
   1400032e2:	int3   
   1400032e3:	int3   
   1400032e4:	int3   
   1400032e5:	int3   
   1400032e6:	int3   
   1400032e7:	int3   
   1400032e8:	int3   
   1400032e9:	int3   
   1400032ea:	int3   
   1400032eb:	int3   
   1400032ec:	int3   
   1400032ed:	int3   
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	mov    rax,rsp
   1400032f3:	mov    QWORD PTR [rax+0x8],rbx
   1400032f7:	mov    QWORD PTR [rax+0x10],rsi
   1400032fb:	mov    QWORD PTR [rax+0x18],rdi
   1400032ff:	mov    QWORD PTR [rax+0x20],r14
   140003303:	push   r15
   140003305:	sub    rsp,0x30
   140003309:	mov    rdi,QWORD PTR [rsp+0x60]
   14000330e:	xor    ebx,ebx
   140003310:	xor    esi,esi
   140003312:	mov    r14,r9
   140003315:	mov    r15,r8
   140003318:	cmp    DWORD PTR [rsp+0x68],ebx
   14000331c:	jbe    0x140003358
   14000331e:	test   ebx,ebx
   140003320:	js     0x140003364
   140003322:	mov    rdx,QWORD PTR [r14]
   140003325:	lea    rax,[rdi+rsi*4]
   140003329:	mov    r9d,0x4
   14000332f:	mov    ecx,esi
   140003331:	shl    rcx,0x4
   140003335:	mov    r8d,r9d
   140003338:	add    rcx,r15
   14000333b:	mov    QWORD PTR [rsp+0x20],rax
   140003340:	call   QWORD PTR [rip+0x4d5a]        # 0x1400080a0
   140003346:	inc    esi
   140003348:	add    r14,0x8
   14000334c:	mov    ebx,eax
   14000334e:	cmp    esi,DWORD PTR [rsp+0x68]
   140003352:	jb     0x14000331e
   140003354:	test   eax,eax
   140003356:	js     0x140003364
   140003358:	call   QWORD PTR [rip+0x4d5a]        # 0x1400080b8
   14000335e:	mov    ebx,eax
   140003360:	test   eax,eax
   140003362:	jns    0x14000337d
   140003364:	test   esi,esi
   140003366:	je     0x14000337d
   140003368:	mov    ecx,DWORD PTR [rdi]
   14000336a:	call   QWORD PTR [rip+0x4d20]        # 0x140008090
   140003370:	and    DWORD PTR [rdi],0x0
   140003373:	lea    rdi,[rdi+0x4]
   140003377:	sub    rsi,0x1
   14000337b:	jne    0x140003368
   14000337d:	mov    rsi,QWORD PTR [rsp+0x48]
   140003382:	mov    eax,ebx
   140003384:	mov    rbx,QWORD PTR [rsp+0x40]
   140003389:	mov    rdi,QWORD PTR [rsp+0x50]
   14000338e:	mov    r14,QWORD PTR [rsp+0x58]
   140003393:	add    rsp,0x30
   140003397:	pop    r15
   140003399:	ret    
   14000339a:	int3   
   14000339b:	int3   
   14000339c:	int3   
   14000339d:	int3   
   14000339e:	int3   
   14000339f:	int3   
   1400033a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033a5:	push   rdi
   1400033a6:	sub    rsp,0x70
   1400033aa:	mov    edx,0x2
   1400033af:	xor    ecx,ecx
   1400033b1:	call   QWORD PTR [rip+0x4cc9]        # 0x140008080
   1400033b7:	test   eax,eax
   1400033b9:	js     0x1400034f7
   1400033bf:	and    QWORD PTR [rsp+0x30],0x0
   1400033c5:	lea    rax,[rsp+0x30]
   1400033ca:	xor    edx,edx
   1400033cc:	mov    QWORD PTR [rsp+0x20],rax
   1400033d1:	lea    r9,[rip+0x6f60]        # 0x14000a338
   1400033d8:	lea    rcx,[rip+0x6ff9]        # 0x14000a3d8
   1400033df:	lea    r8d,[rdx+0x1]
   1400033e3:	call   QWORD PTR [rip+0x4cd7]        # 0x1400080c0
   1400033e9:	test   eax,eax
   1400033eb:	js     0x140003430
   1400033ed:	mov    rdi,QWORD PTR [rsp+0x30]
   1400033f2:	mov    rax,QWORD PTR [rdi]
   1400033f5:	mov    rbx,QWORD PTR [rax+0x18]
   1400033f9:	mov    rcx,rbx
   1400033fc:	call   QWORD PTR [rip+0x4f0e]        # 0x140008310
   140003402:	mov    edx,0x4
   140003407:	mov    rcx,rdi
   14000340a:	lea    r8d,[rdx+0x18]
   14000340e:	call   rbx
   140003410:	mov    rdi,QWORD PTR [rsp+0x30]
   140003415:	mov    rax,QWORD PTR [rdi]
   140003418:	mov    rbx,QWORD PTR [rax+0x10]
   14000341c:	mov    rcx,rbx
   14000341f:	call   QWORD PTR [rip+0x4eeb]        # 0x140008310
   140003425:	mov    rcx,rdi
   140003428:	call   rbx
   14000342a:	and    QWORD PTR [rsp+0x30],0x0
   140003430:	call   QWORD PTR [rip+0x4c02]        # 0x140008038
   140003436:	mov    ebx,eax
   140003438:	lea    rdi,[rip+0x9331]        # 0x14000c770
   14000343f:	mov    eax,DWORD PTR [rip+0x9327]        # 0x14000c76c
   140003445:	test   al,0x1
   140003447:	jne    0x14000347b
   140003449:	and    QWORD PTR [rip+0x9327],0x0        # 0x14000c778
   140003451:	lea    rcx,[rip+0x3578]        # 0x1400069d0
   140003458:	or     eax,0x1
   14000345b:	mov    QWORD PTR [rip+0x9296],rdi        # 0x14000c6f8
   140003462:	mov    DWORD PTR [rip+0x9304],eax        # 0x14000c76c
   140003468:	lea    rax,[rip+0x69a9]        # 0x140009e18
   14000346f:	mov    QWORD PTR [rip+0x92fa],rax        # 0x14000c770
   140003476:	call   0x1400057d0
   14000347b:	cmp    QWORD PTR [rip+0x92f5],0x0        # 0x14000c778
   140003483:	jne    0x1400034ae
   140003485:	lea    rax,[rip+0x68ec]        # 0x140009d78
   14000348c:	mov    BYTE PTR [rip+0x92f5],0x0        # 0x14000c788
   140003493:	mov    QWORD PTR [rip+0x92e6],rax        # 0x14000c780
   14000349a:	lea    rax,[rip+0x92df]        # 0x14000c780
   1400034a1:	mov    QWORD PTR [rip+0x92d0],rax        # 0x14000c778
   1400034a8:	mov    DWORD PTR [rip+0x92e2],ebx        # 0x14000c790
   1400034ae:	mov    rcx,rdi
   1400034b1:	call   0x140003ad4
   1400034b6:	test   eax,eax
   1400034b8:	js     0x1400034f1
   1400034ba:	jmp    0x1400034d2
   1400034bc:	lea    rcx,[rsp+0x38]
   1400034c1:	call   QWORD PTR [rip+0x4b99]        # 0x140008060
   1400034c7:	lea    rcx,[rsp+0x38]
   1400034cc:	call   QWORD PTR [rip+0x4b9e]        # 0x140008070
   1400034d2:	xor    r9d,r9d
   1400034d5:	lea    rcx,[rsp+0x38]
   1400034da:	xor    r8d,r8d
   1400034dd:	xor    edx,edx
   1400034df:	call   QWORD PTR [rip+0x4b73]        # 0x140008058
   1400034e5:	test   eax,eax
   1400034e7:	jg     0x1400034bc
   1400034e9:	mov    rcx,rdi
   1400034ec:	call   0x140002fa0
   1400034f1:	call   QWORD PTR [rip+0x4ba1]        # 0x140008098
   1400034f7:	xor    eax,eax
   1400034f9:	mov    rbx,QWORD PTR [rsp+0x80]
   140003501:	add    rsp,0x70
   140003505:	pop    rdi
   140003506:	ret    
   140003507:	int3   
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	mov    QWORD PTR [rsp+0x8],rbx
   140003515:	mov    QWORD PTR [rsp+0x10],rsi
   14000351a:	push   rdi
   14000351b:	sub    rsp,0x20
   14000351f:	xor    edi,edi
   140003521:	mov    rsi,rcx
   140003524:	mov    QWORD PTR [r8],rdi
   140003527:	cmp    DWORD PTR [rdx],edi
   140003529:	jne    0x14000354c
   14000352b:	mov    eax,DWORD PTR [rip+0x651b]        # 0x140009a4c
   140003531:	cmp    DWORD PTR [rdx+0x4],eax
   140003534:	jne    0x14000354c
   140003536:	mov    eax,DWORD PTR [rip+0x6514]        # 0x140009a50
   14000353c:	cmp    DWORD PTR [rdx+0x8],eax
   14000353f:	jne    0x14000354c
   140003541:	mov    eax,DWORD PTR [rip+0x650d]        # 0x140009a54
   140003547:	cmp    DWORD PTR [rdx+0xc],eax
   14000354a:	je     0x140003575
   14000354c:	cmp    DWORD PTR [rdx],0xed2ab50
   140003552:	jne    0x14000358f
   140003554:	mov    eax,DWORD PTR [rip+0x6dd2]        # 0x14000a32c
   14000355a:	cmp    DWORD PTR [rdx+0x4],eax
   14000355d:	jne    0x14000358f
   14000355f:	mov    eax,DWORD PTR [rip+0x6dcb]        # 0x14000a330
   140003565:	cmp    DWORD PTR [rdx+0x8],eax
   140003568:	jne    0x14000358f
   14000356a:	mov    eax,DWORD PTR [rip+0x6dc4]        # 0x14000a334
   140003570:	cmp    DWORD PTR [rdx+0xc],eax
   140003573:	jne    0x14000358f
   140003575:	mov    QWORD PTR [r8],rcx
   140003578:	mov    rax,QWORD PTR [rcx]
   14000357b:	mov    rbx,QWORD PTR [rax+0x8]
   14000357f:	mov    rcx,rbx
   140003582:	call   QWORD PTR [rip+0x4d88]        # 0x140008310
   140003588:	mov    rcx,rsi
   14000358b:	call   rbx
   14000358d:	jmp    0x140003594
   14000358f:	mov    edi,0x80004002
   140003594:	mov    rbx,QWORD PTR [rsp+0x30]
   140003599:	mov    eax,edi
   14000359b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035a0:	add    rsp,0x20
   1400035a4:	pop    rdi
   1400035a5:	ret    
   1400035a6:	int3   
   1400035a7:	int3   
   1400035a8:	int3   
   1400035a9:	int3   
   1400035aa:	int3   
   1400035ab:	int3   
   1400035ac:	int3   
   1400035ad:	int3   
   1400035ae:	int3   
   1400035af:	int3   
   1400035b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400035b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400035ba:	push   rdi
   1400035bb:	sub    rsp,0x20
   1400035bf:	xor    eax,eax
   1400035c1:	xor    edi,edi
   1400035c3:	mov    esi,r9d
   1400035c6:	mov    rbx,r8
   1400035c9:	test   r9d,r9d
   1400035cc:	je     0x1400035ef
   1400035ce:	test   eax,eax
   1400035d0:	js     0x1400035ef
   1400035d2:	mov    ecx,DWORD PTR [rbx]
   1400035d4:	test   ecx,ecx
   1400035d6:	je     0x1400035e5
   1400035d8:	call   QWORD PTR [rip+0x4ab2]        # 0x140008090
   1400035de:	test   eax,eax
   1400035e0:	js     0x1400035e5
   1400035e2:	and    DWORD PTR [rbx],0x0
   1400035e5:	inc    edi
   1400035e7:	add    rbx,0x4
   1400035eb:	cmp    edi,esi
   1400035ed:	jb     0x1400035ce
   1400035ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035f4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035f9:	add    rsp,0x20
   1400035fd:	pop    rdi
   1400035fe:	ret    
   1400035ff:	int3   
   140003600:	int3   
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	int3   
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	mov    rax,rsp
   140003613:	mov    QWORD PTR [rax+0x8],rbx
   140003617:	mov    QWORD PTR [rax+0x10],rbp
   14000361b:	mov    QWORD PTR [rax+0x18],rsi
   14000361f:	mov    QWORD PTR [rax+0x20],rdi
   140003623:	push   r13
   140003625:	push   r14
   140003627:	push   r15
   140003629:	sub    rsp,0x20
   14000362d:	mov    ebx,DWORD PTR [rsp+0x60]
   140003631:	mov    edi,0x8
   140003636:	mov    eax,edi
   140003638:	mov    r13,r9
   14000363b:	mul    rbx
   14000363e:	lea    rdx,[rip+0x64a3]        # 0x140009ae8
   140003645:	mov    rsi,r8
   140003648:	lea    r14,[rdi-0x9]
   14000364c:	cmovo  rax,r14
   140003650:	mov    rcx,rax
   140003653:	call   0x140005720
   140003658:	mov    rbp,rax
   14000365b:	mov    eax,edi
   14000365d:	mul    rbx
   140003660:	lea    rdx,[rip+0x6481]        # 0x140009ae8
   140003667:	cmovo  rax,r14
   14000366b:	mov    rcx,rax
   14000366e:	call   0x140005720
   140003673:	xor    r9d,r9d
   140003676:	mov    r14,rax
   140003679:	mov    ebx,r9d
   14000367c:	test   rbp,rbp
   14000367f:	je     0x140003712
   140003685:	test   rax,rax
   140003688:	je     0x140003712
   14000368e:	mov    edi,r9d
   140003691:	cmp    DWORD PTR [rsp+0x60],r9d
   140003696:	jbe    0x1400036e0
   140003698:	mov    r15,rbp
   14000369b:	sub    r15,rsi
   14000369e:	test   ebx,ebx
   1400036a0:	js     0x1400036f6
   1400036a2:	lea    rax,[rip+0x8e7]        # 0x140003f90
   1400036a9:	or     rdx,0xffffffffffffffff
   1400036ad:	mov    QWORD PTR [r15+rsi*1],rax
   1400036b1:	lea    r8,[r14+rdi*8]
   1400036b5:	mov    rcx,QWORD PTR [rsi]
   1400036b8:	inc    rdx
   1400036bb:	cmp    WORD PTR [rcx+rdx*2],r9w
   1400036c0:	jne    0x1400036b8
   1400036c2:	call   QWORD PTR [rip+0x4b28]        # 0x1400081f0
   1400036c8:	inc    edi
   1400036ca:	add    rsi,0x8
   1400036ce:	mov    ebx,eax
   1400036d0:	mov    r9d,0x0
   1400036d6:	cmp    edi,DWORD PTR [rsp+0x60]
   1400036da:	jb     0x14000369e
   1400036dc:	test   eax,eax
   1400036de:	js     0x1400036f6
   1400036e0:	mov    r8d,DWORD PTR [rsp+0x60]
   1400036e5:	mov    r9,r13
   1400036e8:	mov    rdx,rbp
   1400036eb:	mov    rcx,r14
   1400036ee:	call   QWORD PTR [rip+0x4ac4]        # 0x1400081b8
   1400036f4:	mov    ebx,eax
   1400036f6:	test   edi,edi
   1400036f8:	je     0x140003717
   1400036fa:	mov    rsi,r14
   1400036fd:	mov    rcx,QWORD PTR [rsi]
   140003700:	call   QWORD PTR [rip+0x4aca]        # 0x1400081d0
   140003706:	lea    rsi,[rsi+0x8]
   14000370a:	sub    rdi,0x1
   14000370e:	jne    0x1400036fd
   140003710:	jmp    0x140003717
   140003712:	mov    ebx,0x8007000e
   140003717:	mov    rcx,rbp
   14000371a:	call   QWORD PTR [rip+0x4bb8]        # 0x1400082d8
   140003720:	mov    rcx,r14
   140003723:	call   QWORD PTR [rip+0x4baf]        # 0x1400082d8
   140003729:	mov    rbp,QWORD PTR [rsp+0x48]
   14000372e:	mov    eax,ebx
   140003730:	mov    rbx,QWORD PTR [rsp+0x40]
   140003735:	mov    rsi,QWORD PTR [rsp+0x50]
   14000373a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000373f:	add    rsp,0x20
   140003743:	pop    r15
   140003745:	pop    r14
   140003747:	pop    r13
   140003749:	ret    
   14000374a:	int3   
   14000374b:	int3   
   14000374c:	int3   
   14000374d:	int3   
   14000374e:	int3   
   14000374f:	int3   
   140003750:	sub    rsp,0x28
   140003754:	mov    rcx,r8
   140003757:	call   QWORD PTR [rip+0x4a53]        # 0x1400081b0
   14000375d:	xor    eax,eax
   14000375f:	add    rsp,0x28
   140003763:	ret    
   140003764:	int3   
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	int3   
   140003769:	int3   
   14000376a:	int3   
   14000376b:	int3   
   14000376c:	int3   
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	rex.W jmp QWORD PTR [rip+0x4911]        # 0x140008088
   140003777:	int3   
   140003778:	int3   
   140003779:	int3   
   14000377a:	int3   
   14000377b:	int3   
   14000377c:	int3   
   14000377d:	int3   
   14000377e:	int3   
   14000377f:	int3   
   140003780:	mov    QWORD PTR [rsp+0x8],rbx
   140003785:	mov    QWORD PTR [rsp+0x10],rsi
   14000378a:	push   rdi
   14000378b:	sub    rsp,0x20
   14000378f:	mov    rdi,rcx
   140003792:	call   QWORD PTR [rip+0x4918]        # 0x1400080b0
   140003798:	mov    esi,eax
   14000379a:	test   eax,eax
   14000379c:	jne    0x1400037b7
   14000379e:	mov    rdi,QWORD PTR [rdi+0x8]
   1400037a2:	mov    rdx,QWORD PTR [rdi]
   1400037a5:	mov    rbx,QWORD PTR [rdx+0x8]
   1400037a9:	mov    rcx,rbx
   1400037ac:	call   QWORD PTR [rip+0x4b5e]        # 0x140008310
   1400037b2:	mov    rcx,rdi
   1400037b5:	call   rbx
   1400037b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037bc:	mov    eax,esi
   1400037be:	mov    rsi,QWORD PTR [rsp+0x38]
   1400037c3:	add    rsp,0x20
   1400037c7:	pop    rdi
   1400037c8:	ret    
   1400037c9:	int3   
   1400037ca:	int3   
   1400037cb:	int3   
   1400037cc:	int3   
   1400037cd:	int3   
   1400037ce:	int3   
   1400037cf:	int3   
   1400037d0:	xor    eax,eax
   1400037d2:	ret    
   1400037d3:	int3   
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	int3   
   1400037d7:	int3   
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400037e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400037e6:	push   rdi
   1400037e7:	sub    rsp,0x20
   1400037eb:	mov    rsi,QWORD PTR [rcx+0x8]
   1400037ef:	lea    rax,[rip+0x671a]        # 0x140009f10
   1400037f6:	mov    QWORD PTR [rcx],rax
   1400037f9:	mov    rdi,rcx
   1400037fc:	test   rsi,rsi
   1400037ff:	je     0x140003825
   140003801:	cmp    BYTE PTR [rsi+0x8],0x0
   140003805:	je     0x140003820
   140003807:	mov    rax,QWORD PTR [rsi]
   14000380a:	mov    rbx,QWORD PTR [rax]
   14000380d:	mov    rcx,rbx
   140003810:	call   QWORD PTR [rip+0x4afa]        # 0x140008310
   140003816:	mov    edx,0x1
   14000381b:	mov    rcx,rsi
   14000381e:	call   rbx
   140003820:	and    QWORD PTR [rdi+0x8],0x0
   140003825:	lea    rax,[rip+0x6684]        # 0x140009eb0
   14000382c:	mov    r8b,0x1
   14000382f:	mov    rcx,rdi
   140003832:	mov    QWORD PTR [rdi],rax
   140003835:	call   0x140002ce0
   14000383a:	and    QWORD PTR [rip+0x8eb6],0x0        # 0x14000c6f8
   140003842:	mov    rbx,QWORD PTR [rsp+0x30]
   140003847:	mov    rsi,QWORD PTR [rsp+0x38]
   14000384c:	mov    BYTE PTR [rip+0x8f15],0x0        # 0x14000c768
   140003853:	add    rsp,0x20
   140003857:	pop    rdi
   140003858:	ret    
   140003859:	int3   
   14000385a:	int3   
   14000385b:	int3   
   14000385c:	int3   
   14000385d:	int3   
   14000385e:	int3   
   14000385f:	int3   
   140003860:	mov    eax,0x1
   140003865:	lock xadd DWORD PTR [rip+0x8e93],eax        # 0x14000c700
   14000386d:	inc    eax
   14000386f:	ret    
   140003870:	int3   
   140003871:	int3   
   140003872:	int3   
   140003873:	int3   
   140003874:	int3   
   140003875:	int3   
   140003876:	int3   
   140003877:	int3   
   140003878:	int3   
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	or     eax,0xffffffff
   140003883:	lock xadd DWORD PTR [rip+0x8e75],eax        # 0x14000c700
   14000388b:	dec    eax
   14000388d:	ret    
   14000388e:	int3   
   14000388f:	int3   
   140003890:	int3   
   140003891:	int3   
   140003892:	int3   
   140003893:	int3   
   140003894:	int3   
   140003895:	int3   
   140003896:	int3   
   140003897:	int3   
   140003898:	int3   
   140003899:	int3   
   14000389a:	int3   
   14000389b:	int3   
   14000389c:	int3   
   14000389d:	int3   
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	sub    rsp,0x28
   1400038a4:	xor    edx,edx
   1400038a6:	mov    ecx,0x80004001
   1400038ab:	call   QWORD PTR [rip+0x48ef]        # 0x1400081a0
   1400038b1:	mov    eax,0x80004001
   1400038b6:	add    rsp,0x28
   1400038ba:	ret    
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	int3   
   1400038c1:	int3   
   1400038c2:	int3   
   1400038c3:	int3   
   1400038c4:	int3   
   1400038c5:	int3   
   1400038c6:	int3   
   1400038c7:	int3   
   1400038c8:	int3   
   1400038c9:	int3   
   1400038ca:	int3   
   1400038cb:	int3   
   1400038cc:	int3   
   1400038cd:	int3   
   1400038ce:	int3   
   1400038cf:	int3   
   1400038d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400038d5:	push   rdi
   1400038d6:	sub    rsp,0x20
   1400038da:	mov    ebx,edx
   1400038dc:	mov    rdi,rcx
   1400038df:	call   0x1400037dc
   1400038e4:	test   bl,0x1
   1400038e7:	je     0x1400038f2
   1400038e9:	mov    rcx,rdi
   1400038ec:	call   QWORD PTR [rip+0x49e6]        # 0x1400082d8
   1400038f2:	mov    rax,rdi
   1400038f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038fa:	add    rsp,0x20
   1400038fe:	pop    rdi
   1400038ff:	ret    
   140003900:	int3   
   140003901:	int3   
   140003902:	int3   
   140003903:	int3   
   140003904:	int3   
   140003905:	int3   
   140003906:	int3   
   140003907:	int3   
   140003908:	int3   
   140003909:	int3   
   14000390a:	int3   
   14000390b:	int3   
   14000390c:	int3   
   14000390d:	int3   
   14000390e:	int3   
   14000390f:	int3   
   140003910:	mov    QWORD PTR [rsp+0x8],rbx
   140003915:	push   rdi
   140003916:	sub    rsp,0x20
   14000391a:	lea    rax,[rip+0x658f]        # 0x140009eb0
   140003921:	mov    r8b,0x1
   140003924:	mov    QWORD PTR [rcx],rax
   140003927:	mov    ebx,edx
   140003929:	mov    rdi,rcx
   14000392c:	call   0x140002ce0
   140003931:	and    QWORD PTR [rip+0x8dbf],0x0        # 0x14000c6f8
   140003939:	mov    BYTE PTR [rip+0x8e28],0x0        # 0x14000c768
   140003940:	test   bl,0x1
   140003943:	je     0x14000394e
   140003945:	mov    rcx,rdi
   140003948:	call   QWORD PTR [rip+0x498a]        # 0x1400082d8
   14000394e:	mov    rax,rdi
   140003951:	mov    rbx,QWORD PTR [rsp+0x30]
   140003956:	add    rsp,0x20
   14000395a:	pop    rdi
   14000395b:	ret    
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	int3   
   140003961:	int3   
   140003962:	int3   
   140003963:	int3   
   140003964:	int3   
   140003965:	int3   
   140003966:	int3   
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	rex push rbx
   140003972:	sub    rsp,0x20
   140003976:	lea    rax,[rip+0x64fb]        # 0x140009e78
   14000397d:	mov    rbx,rcx
   140003980:	mov    QWORD PTR [rcx],rax
   140003983:	test   dl,0x1
   140003986:	je     0x14000398e
   140003988:	call   QWORD PTR [rip+0x494a]        # 0x1400082d8
   14000398e:	mov    rax,rbx
   140003991:	add    rsp,0x20
   140003995:	pop    rbx
   140003996:	ret    
   140003997:	int3   
   140003998:	int3   
   140003999:	int3   
   14000399a:	int3   
   14000399b:	int3   
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	mov    rax,rsp
   1400039a3:	mov    QWORD PTR [rax+0x8],rbx
   1400039a7:	mov    QWORD PTR [rax+0x10],rbp
   1400039ab:	mov    QWORD PTR [rax+0x18],rsi
   1400039af:	mov    QWORD PTR [rax+0x20],rdi
   1400039b3:	push   r14
   1400039b5:	sub    rsp,0x30
   1400039b9:	and    QWORD PTR [rax-0x18],0x0
   1400039be:	lea    rdx,[rip+0x6123]        # 0x140009ae8
   1400039c5:	mov    r14,rcx
   1400039c8:	mov    rsi,r9
   1400039cb:	mov    ecx,0x18
   1400039d0:	mov    rbp,r8
   1400039d3:	call   0x1400056f8
   1400039d8:	mov    rbx,rax
   1400039db:	test   rax,rax
   1400039de:	je     0x140003aa9
   1400039e4:	lea    rdi,[rip+0x639d]        # 0x140009d88
   1400039eb:	mov    DWORD PTR [rax+0xc],0x1
   1400039f2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400039f6:	mov    DWORD PTR [rax+0x14],0x4
   1400039fd:	mov    QWORD PTR [rax],rdi
   140003a00:	call   QWORD PTR [rip+0x490a]        # 0x140008310
   140003a06:	mov    rcx,rbx
   140003a09:	call   QWORD PTR [rdi+0x8]
   140003a0c:	mov    rax,QWORD PTR [rbx]
   140003a0f:	mov    QWORD PTR [rsp+0x20],rbx
   140003a14:	mov    rdi,QWORD PTR [rax+0x10]
   140003a18:	mov    rcx,rdi
   140003a1b:	call   QWORD PTR [rip+0x48ef]        # 0x140008310
   140003a21:	mov    rcx,rbx
   140003a24:	call   rdi
   140003a26:	mov    eax,DWORD PTR [r14]
   140003a29:	mov    DWORD PTR [rbx+0x14],eax
   140003a2c:	mov    rax,QWORD PTR [rbx]
   140003a2f:	mov    rdi,QWORD PTR [rax]
   140003a32:	mov    rcx,rdi
   140003a35:	call   QWORD PTR [rip+0x48d5]        # 0x140008310
   140003a3b:	mov    r8,rsi
   140003a3e:	mov    rdx,rbp
   140003a41:	mov    rcx,rbx
   140003a44:	call   rdi
   140003a46:	test   BYTE PTR [r14],0x1
   140003a4a:	mov    esi,eax
   140003a4c:	je     0x140003a8d
   140003a4e:	test   eax,eax
   140003a50:	js     0x140003a89
   140003a52:	test   BYTE PTR [r14],0x4
   140003a56:	je     0x140003a85
   140003a58:	mov    rax,QWORD PTR [rip+0x8c99]        # 0x14000c6f8
   140003a5f:	mov    rcx,QWORD PTR [rax]
   140003a62:	lea    rax,[rip+0xfffffffffffffd07]        # 0x140003770
   140003a69:	cmp    QWORD PTR [rcx+0x8],rax
   140003a6d:	jne    0x140003a77
   140003a6f:	call   QWORD PTR [rip+0x4613]        # 0x140008088
   140003a75:	jmp    0x140003a8d
   140003a77:	lock inc DWORD PTR [rip+0x8c82]        # 0x14000c700
   140003a7e:	mov    rbx,QWORD PTR [rsp+0x20]
   140003a83:	jmp    0x140003a8d
   140003a85:	xor    ebx,ebx
   140003a87:	jmp    0x140003a8d
   140003a89:	and    DWORD PTR [rbx+0x14],0xfffffffa
   140003a8d:	test   rbx,rbx
   140003a90:	je     0x140003aae
   140003a92:	mov    rax,QWORD PTR [rbx]
   140003a95:	mov    rdi,QWORD PTR [rax+0x10]
   140003a99:	mov    rcx,rdi
   140003a9c:	call   QWORD PTR [rip+0x486e]        # 0x140008310
   140003aa2:	mov    rcx,rbx
   140003aa5:	call   rdi
   140003aa7:	jmp    0x140003aae
   140003aa9:	mov    esi,0x8007000e
   140003aae:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ab3:	mov    eax,esi
   140003ab5:	mov    rsi,QWORD PTR [rsp+0x50]
   140003aba:	mov    rbp,QWORD PTR [rsp+0x48]
   140003abf:	mov    rdi,QWORD PTR [rsp+0x58]
   140003ac4:	add    rsp,0x30
   140003ac8:	pop    r14
   140003aca:	ret    
   140003acb:	int3   
   140003acc:	int3   
   140003acd:	int3   
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	int3   
   140003ad1:	int3   
   140003ad2:	int3   
   140003ad3:	int3   
   140003ad4:	mov    QWORD PTR [rsp+0x10],rdx
   140003ad9:	mov    QWORD PTR [rsp+0x8],rcx
   140003ade:	push   rbx
   140003adf:	push   rbp
   140003ae0:	push   rsi
   140003ae1:	push   rdi
   140003ae2:	push   r12
   140003ae4:	push   r13
   140003ae6:	push   r14
   140003ae8:	push   r15
   140003aea:	sub    rsp,0x48
   140003aee:	xor    ebx,ebx
   140003af0:	lea    r14,[rip+0x7481]        # 0x14000af78
   140003af7:	lea    rax,[rip+0x74b2]        # 0x14000afb0
   140003afe:	mov    r13,rcx
   140003b01:	lea    rbp,[rip+0x74af]        # 0x14000afb7
   140003b08:	mov    esi,ebx
   140003b0a:	sub    rbp,r14
   140003b0d:	mov    r12d,ebx
   140003b10:	shr    rbp,0x3
   140003b14:	mov    edx,ebx
   140003b16:	cmp    r14,rax
   140003b19:	mov    edi,0x8007000e
   140003b1e:	mov    rax,r14
   140003b21:	cmova  rbp,rbx
   140003b25:	or     r9,0xffffffffffffffff
   140003b29:	test   rbp,rbp
   140003b2c:	je     0x140003d67
   140003b32:	cmp    QWORD PTR [rax],rbx
   140003b35:	je     0x140003b3a
   140003b37:	inc    r12d
   140003b3a:	add    rax,0x8
   140003b3e:	inc    rdx
   140003b41:	cmp    rdx,rbp
   140003b44:	jb     0x140003b32
   140003b46:	test   r12d,r12d
   140003b49:	je     0x140003d67
   140003b4f:	mov    ebx,r12d
   140003b52:	mov    eax,0x4
   140003b57:	mul    rbx
   140003b5a:	lea    rdx,[rip+0x5f87]        # 0x140009ae8
   140003b61:	cmovo  rax,r9
   140003b65:	mov    rcx,rax
   140003b68:	call   0x140005720
   140003b6d:	mov    r15,rax
   140003b70:	mov    QWORD PTR [rsp+0xa0],rax
   140003b78:	mov    rcx,0xffffffffffffffff
   140003b7f:	mov    eax,0x8
   140003b84:	mul    rbx
   140003b87:	lea    rdx,[rip+0x5f5a]        # 0x140009ae8
   140003b8e:	cmovo  rax,rcx
   140003b92:	mov    rcx,rax
   140003b95:	call   0x140005720
   140003b9a:	mov    r13,rax
   140003b9d:	mov    rcx,0xffffffffffffffff
   140003ba4:	mov    eax,0x10
   140003ba9:	mul    rbx
   140003bac:	lea    rdx,[rip+0x5f35]        # 0x140009ae8
   140003bb3:	cmovo  rax,rcx
   140003bb7:	mov    rcx,rax
   140003bba:	call   0x140005720
   140003bbf:	xor    ebx,ebx
   140003bc1:	mov    QWORD PTR [rsp+0xa8],rax
   140003bc9:	test   r15,r15
   140003bcc:	je     0x140003d31
   140003bd2:	test   r13,r13
   140003bd5:	je     0x140003d31
   140003bdb:	test   rax,rax
   140003bde:	je     0x140003d31
   140003be4:	lea    rax,[rip+0x73c5]        # 0x14000afb0
   140003beb:	mov    edi,ebx
   140003bed:	mov    r15,r14
   140003bf0:	cmp    r14,rax
   140003bf3:	jae    0x140003c88
   140003bf9:	test   esi,esi
   140003bfb:	js     0x140003cfa
   140003c01:	mov    rax,QWORD PTR [r15]
   140003c04:	test   rax,rax
   140003c07:	je     0x140003c70
   140003c09:	mov    DWORD PTR [rsp+0x98],0x2
   140003c14:	mov    QWORD PTR [rsp+0x30],rbx
   140003c19:	mov    rbx,QWORD PTR [rax]
   140003c1c:	mov    rcx,rbx
   140003c1f:	call   QWORD PTR [rip+0x46eb]        # 0x140008310
   140003c25:	mov    rdx,QWORD PTR [r15]
   140003c28:	lea    r9,[rsp+0x30]
   140003c2d:	lea    r8,[rip+0x5ea4]        # 0x140009ad8
   140003c34:	lea    rcx,[rsp+0x98]
   140003c3c:	call   rbx
   140003c3e:	xor    ebx,ebx
   140003c40:	mov    esi,eax
   140003c42:	test   eax,eax
   140003c44:	js     0x140003c70
   140003c46:	mov    rcx,QWORD PTR [rsp+0x30]
   140003c4b:	mov    rax,QWORD PTR [rsp+0xa8]
   140003c53:	mov    r8d,edi
   140003c56:	mov    QWORD PTR [r13+r8*8+0x0],rcx
   140003c5b:	add    r8,r8
   140003c5e:	mov    rcx,QWORD PTR [r15]
   140003c61:	inc    edi
   140003c63:	mov    rdx,QWORD PTR [rcx+0x8]
   140003c67:	movups xmm0,XMMWORD PTR [rdx]
   140003c6a:	movdqu XMMWORD PTR [rax+r8*8],xmm0
   140003c70:	add    r15,0x8
   140003c74:	lea    rax,[rip+0x7335]        # 0x14000afb0
   140003c7b:	cmp    r15,rax
   140003c7e:	jb     0x140003bf9
   140003c84:	test   esi,esi
   140003c86:	js     0x140003cfa
   140003c88:	mov    rsi,QWORD PTR [rsp+0x90]
   140003c90:	mov    rax,QWORD PTR [rsi]
   140003c93:	mov    rbx,QWORD PTR [rax+0x50]
   140003c97:	mov    rcx,rbx
   140003c9a:	call   QWORD PTR [rip+0x4670]        # 0x140008310
   140003ca0:	mov    r15,QWORD PTR [rsp+0xa0]
   140003ca8:	mov    r9,r13
   140003cab:	mov    r8,QWORD PTR [rsp+0xa8]
   140003cb3:	xor    edx,edx
   140003cb5:	mov    rcx,rsi
   140003cb8:	mov    DWORD PTR [rsp+0x28],r12d
   140003cbd:	mov    QWORD PTR [rsp+0x20],r15
   140003cc2:	call   rbx
   140003cc4:	xor    ebx,ebx
   140003cc6:	mov    esi,eax
   140003cc8:	test   eax,eax
   140003cca:	js     0x140003d02
   140003ccc:	mov    edi,ebx
   140003cce:	mov    edx,ebx
   140003cd0:	test   rbp,rbp
   140003cd3:	je     0x140003d02
   140003cd5:	mov    rcx,QWORD PTR [r14]
   140003cd8:	test   rcx,rcx
   140003cdb:	je     0x140003cec
   140003cdd:	mov    rcx,QWORD PTR [rcx+0x18]
   140003ce1:	mov    eax,edi
   140003ce3:	inc    edi
   140003ce5:	mov    eax,DWORD PTR [r15+rax*4]
   140003ce9:	mov    DWORD PTR [rcx+0x8],eax
   140003cec:	add    r14,0x8
   140003cf0:	inc    rdx
   140003cf3:	cmp    rdx,rbp
   140003cf6:	jb     0x140003cd5
   140003cf8:	jmp    0x140003d02
   140003cfa:	mov    r15,QWORD PTR [rsp+0xa0]
   140003d02:	test   edi,edi
   140003d04:	je     0x140003d33
   140003d06:	mov    r14,r13
   140003d09:	mov    ebp,edi
   140003d0b:	mov    rdi,QWORD PTR [r14]
   140003d0e:	mov    rax,QWORD PTR [rdi]
   140003d11:	mov    rbx,QWORD PTR [rax+0x10]
   140003d15:	mov    rcx,rbx
   140003d18:	call   QWORD PTR [rip+0x45f2]        # 0x140008310
   140003d1e:	mov    rcx,rdi
   140003d21:	call   rbx
   140003d23:	lea    r14,[r14+0x8]
   140003d27:	sub    rbp,0x1
   140003d2b:	jne    0x140003d0b
   140003d2d:	xor    ebx,ebx
   140003d2f:	jmp    0x140003d33
   140003d31:	mov    esi,edi
   140003d33:	mov    rcx,r15
   140003d36:	call   QWORD PTR [rip+0x459c]        # 0x1400082d8
   140003d3c:	mov    rcx,QWORD PTR [rsp+0xa8]
   140003d44:	call   QWORD PTR [rip+0x458e]        # 0x1400082d8
   140003d4a:	mov    rcx,r13
   140003d4d:	call   QWORD PTR [rip+0x4585]        # 0x1400082d8
   140003d53:	test   esi,esi
   140003d55:	js     0x140003e9f
   140003d5b:	mov    r13,QWORD PTR [rsp+0x90]
   140003d63:	or     r9,0xffffffffffffffff
   140003d67:	lea    r14,[rip+0x724a]        # 0x14000afb8
   140003d6e:	mov    eax,ebx
   140003d70:	lea    rcx,[rip+0x7241]        # 0x14000afb8
   140003d77:	mov    r8,rbx
   140003d7a:	lea    rdi,[rip+0x723e]        # 0x14000afbf
   140003d81:	sub    rdi,r14
   140003d84:	shr    rdi,0x3
   140003d88:	cmp    r14,rcx
   140003d8b:	mov    rcx,r14
   140003d8e:	cmova  rdi,rbx
   140003d92:	test   rdi,rdi
   140003d95:	je     0x140003e9f
   140003d9b:	cmp    QWORD PTR [rcx],rbx
   140003d9e:	je     0x140003da2
   140003da0:	inc    eax
   140003da2:	add    rcx,0x8
   140003da6:	inc    r8
   140003da9:	cmp    r8,rdi
   140003dac:	jb     0x140003d9b
   140003dae:	test   eax,eax
   140003db0:	je     0x140003e9f
   140003db6:	mov    ecx,eax
   140003db8:	mov    eax,0x8
   140003dbd:	mul    rcx
   140003dc0:	lea    rdx,[rip+0x5d21]        # 0x140009ae8
   140003dc7:	cmovo  rax,r9
   140003dcb:	mov    rcx,rax
   140003dce:	call   0x140005720
   140003dd3:	test   rax,rax
   140003dd6:	mov    r12,rax
   140003dd9:	mov    eax,0x8007000e
   140003dde:	cmove  esi,eax
   140003de1:	test   esi,esi
   140003de3:	js     0x140003e96
   140003de9:	mov    QWORD PTR [rsp+0x98],rbx
   140003df1:	mov    esi,ebx
   140003df3:	mov    rbp,rbx
   140003df6:	mov    r15,r14
   140003df9:	test   rdi,rdi
   140003dfc:	je     0x140003e2b
   140003dfe:	mov    rbx,QWORD PTR [r15]
   140003e01:	test   rbx,rbx
   140003e04:	je     0x140003e1d
   140003e06:	mov    rbx,QWORD PTR [rbx+0x8]
   140003e0a:	mov    rcx,rbx
   140003e0d:	call   QWORD PTR [rip+0x44fd]        # 0x140008310
   140003e13:	call   rbx
   140003e15:	mov    ecx,esi
   140003e17:	inc    esi
   140003e19:	mov    QWORD PTR [r12+rcx*8],rax
   140003e1d:	add    r15,0x8
   140003e21:	inc    rbp
   140003e24:	cmp    rbp,rdi
   140003e27:	jb     0x140003dfe
   140003e29:	xor    ebx,ebx
   140003e2b:	mov    rax,QWORD PTR [r13+0x0]
   140003e2f:	lea    rcx,[rip+0xfffffffffffff7da]        # 0x140003610
   140003e36:	xor    edx,edx
   140003e38:	cmp    QWORD PTR [rax+0x40],rcx
   140003e3c:	jne    0x140003e59
   140003e3e:	lea    r9,[rsp+0x98]
   140003e46:	mov    DWORD PTR [rsp+0x20],esi
   140003e4a:	mov    r8,r12
   140003e4d:	mov    rcx,r13
   140003e50:	call   0x140003610
   140003e55:	mov    esi,eax
   140003e57:	jmp    0x140003e66
   140003e59:	mov    esi,0x80004001
   140003e5e:	mov    ecx,esi
   140003e60:	call   QWORD PTR [rip+0x433a]        # 0x1400081a0
   140003e66:	test   esi,esi
   140003e68:	js     0x140003e96
   140003e6a:	mov    rdx,rbx
   140003e6d:	test   rdi,rdi
   140003e70:	je     0x140003e96
   140003e72:	mov    rcx,QWORD PTR [r14]
   140003e75:	test   rcx,rcx
   140003e78:	je     0x140003e8a
   140003e7a:	mov    rcx,QWORD PTR [rcx+0x18]
   140003e7e:	mov    rax,QWORD PTR [rsp+0x98]
   140003e86:	mov    QWORD PTR [rcx+0x8],rax
   140003e8a:	add    r14,0x8
   140003e8e:	inc    rdx
   140003e91:	cmp    rdx,rdi
   140003e94:	jb     0x140003e72
   140003e96:	mov    rcx,r12
   140003e99:	call   QWORD PTR [rip+0x4439]        # 0x1400082d8
   140003e9f:	mov    eax,esi
   140003ea1:	add    rsp,0x48
   140003ea5:	pop    r15
   140003ea7:	pop    r14
   140003ea9:	pop    r13
   140003eab:	pop    r12
   140003ead:	pop    rdi
   140003eae:	pop    rsi
   140003eaf:	pop    rbp
   140003eb0:	pop    rbx
   140003eb1:	ret    
   140003eb2:	int3   
   140003eb3:	int3   
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	int3   
   140003ebd:	int3   
   140003ebe:	int3   
   140003ebf:	int3   
   140003ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ec5:	mov    QWORD PTR [rsp+0x18],rbp
   140003eca:	push   rsi
   140003ecb:	push   rdi
   140003ecc:	push   r14
   140003ece:	sub    rsp,0x20
   140003ed2:	and    QWORD PTR [r9],0x0
   140003ed6:	mov    r14,r9
   140003ed9:	mov    rbp,r8
   140003edc:	test   rdx,rdx
   140003edf:	je     0x140003ef4
   140003ee1:	mov    ebx,0x80040110
   140003ee6:	xor    edx,edx
   140003ee8:	mov    ecx,ebx
   140003eea:	call   QWORD PTR [rip+0x42b0]        # 0x1400081a0
   140003ef0:	mov    eax,ebx
   140003ef2:	jmp    0x140003f52
   140003ef4:	and    QWORD PTR [rsp+0x48],0x0
   140003efa:	lea    rcx,[rsp+0x48]
   140003eff:	call   0x1400040e0
   140003f04:	mov    esi,eax
   140003f06:	test   eax,eax
   140003f08:	js     0x140003f2b
   140003f0a:	mov    rbx,QWORD PTR [rsp+0x48]
   140003f0f:	mov    rax,QWORD PTR [rbx]
   140003f12:	mov    rdi,QWORD PTR [rax]
   140003f15:	mov    rcx,rdi
   140003f18:	call   QWORD PTR [rip+0x43f2]        # 0x140008310
   140003f1e:	mov    r8,r14
   140003f21:	mov    rdx,rbp
   140003f24:	mov    rcx,rbx
   140003f27:	call   rdi
   140003f29:	mov    esi,eax
   140003f2b:	mov    rdi,QWORD PTR [rsp+0x48]
   140003f30:	test   rdi,rdi
   140003f33:	je     0x140003f50
   140003f35:	and    QWORD PTR [rsp+0x48],0x0
   140003f3b:	mov    rdx,QWORD PTR [rdi]
   140003f3e:	mov    rbx,QWORD PTR [rdx+0x10]
   140003f42:	mov    rcx,rbx
   140003f45:	call   QWORD PTR [rip+0x43c5]        # 0x140008310
   140003f4b:	mov    rcx,rdi
   140003f4e:	call   rbx
   140003f50:	mov    eax,esi
   140003f52:	mov    rbx,QWORD PTR [rsp+0x40]
   140003f57:	mov    rbp,QWORD PTR [rsp+0x50]
   140003f5c:	add    rsp,0x20
   140003f60:	pop    r14
   140003f62:	pop    rdi
   140003f63:	pop    rsi
   140003f64:	ret    
   140003f65:	int3   
   140003f66:	int3   
   140003f67:	int3   
   140003f68:	int3   
   140003f69:	int3   
   140003f6a:	int3   
   140003f6b:	int3   
   140003f6c:	int3   
   140003f6d:	int3   
   140003f6e:	int3   
   140003f6f:	int3   
   140003f70:	mov    ecx,DWORD PTR [rcx+0x10]
   140003f73:	xor    r9d,r9d
   140003f76:	xor    r8d,r8d
   140003f79:	lea    edx,[r9+0x12]
   140003f7d:	rex.W jmp QWORD PTR [rip+0x40e4]        # 0x140008068
   140003f84:	int3   
   140003f85:	int3   
   140003f86:	int3   
   140003f87:	int3   
   140003f88:	int3   
   140003f89:	int3   
   140003f8a:	int3   
   140003f8b:	int3   
   140003f8c:	int3   
   140003f8d:	int3   
   140003f8e:	int3   
   140003f8f:	int3   
   140003f90:	mov    QWORD PTR [rsp+0x18],rbx
   140003f95:	mov    QWORD PTR [rsp+0x20],rbp
   140003f9a:	push   rsi
   140003f9b:	push   rdi
   140003f9c:	push   r14
   140003f9e:	sub    rsp,0x70
   140003fa2:	mov    rax,QWORD PTR [rip+0x805f]        # 0x14000c008
   140003fa9:	xor    rax,rsp
   140003fac:	mov    QWORD PTR [rsp+0x60],rax
   140003fb1:	and    QWORD PTR [rdx],0x0
   140003fb5:	mov    rsi,rdx
   140003fb8:	mov    rbx,rcx
   140003fbb:	call   QWORD PTR [rip+0x4237]        # 0x1400081f8
   140003fc1:	test   eax,eax
   140003fc3:	jne    0x140004077
   140003fc9:	lea    rdx,[rsp+0x34]
   140003fce:	mov    rcx,rbx
   140003fd1:	call   QWORD PTR [rip+0x4209]        # 0x1400081e0
   140003fd7:	test   eax,eax
   140003fd9:	js     0x140004077
   140003fdf:	cmp    DWORD PTR [rsp+0x34],0x1
   140003fe4:	je     0x140004077
   140003fea:	xor    edx,edx
   140003fec:	mov    rcx,rbx
   140003fef:	call   QWORD PTR [rip+0x41e3]        # 0x1400081d8
   140003ff5:	mov    rbp,rax
   140003ff8:	lea    rdi,[rip+0x6fb9]        # 0x14000afb8
   140003fff:	lea    r14,[rip+0x6fb2]        # 0x14000afb8
   140004006:	cmp    rdi,r14
   140004009:	jae    0x140004066
   14000400b:	mov    rbx,QWORD PTR [rdi]
   14000400e:	test   rbx,rbx
   140004011:	je     0x140004042
   140004013:	mov    rbx,QWORD PTR [rbx+0x8]
   140004017:	mov    rcx,rbx
   14000401a:	call   QWORD PTR [rip+0x42f0]        # 0x140008310
   140004020:	call   rbx
   140004022:	mov    rcx,rbp
   140004025:	sub    rax,rbp
   140004028:	movzx  edx,WORD PTR [rcx]
   14000402b:	movzx  r8d,WORD PTR [rcx+rax*1]
   140004030:	sub    edx,r8d
   140004033:	jne    0x14000403e
   140004035:	add    rcx,0x2
   140004039:	test   r8d,r8d
   14000403c:	jne    0x140004028
   14000403e:	test   edx,edx
   140004040:	je     0x140004048
   140004042:	add    rdi,0x8
   140004046:	jmp    0x140004006
   140004048:	mov    r9,QWORD PTR [rdi]
   14000404b:	lea    rdx,[rsp+0x30]
   140004050:	mov    DWORD PTR [rsp+0x30],0x2
   140004058:	mov    QWORD PTR [rsp+0x20],rsi
   14000405d:	call   0x140002e0c
   140004062:	mov    ebx,eax
   140004064:	jmp    0x1400040b4
   140004066:	mov    ebx,0x80040111
   14000406b:	xor    edx,edx
   14000406d:	mov    ecx,ebx
   14000406f:	call   QWORD PTR [rip+0x412b]        # 0x1400081a0
   140004075:	jmp    0x1400040b4
   140004077:	movups xmm0,XMMWORD PTR [rip+0x6272]        # 0x14000a2f0
   14000407e:	mov    ebx,0x80070057
   140004083:	lea    r8,[rsp+0x38]
   140004088:	movups xmm1,XMMWORD PTR [rip+0x6271]        # 0x14000a300
   14000408f:	mov    edx,0x13
   140004094:	mov    ecx,ebx
   140004096:	movups XMMWORD PTR [rsp+0x38],xmm0
   14000409b:	movsd  xmm0,QWORD PTR [rip+0x626d]        # 0x14000a310
   1400040a3:	movsd  QWORD PTR [rsp+0x58],xmm0
   1400040a9:	movups XMMWORD PTR [rsp+0x48],xmm1
   1400040ae:	call   QWORD PTR [rip+0x40e4]        # 0x140008198
   1400040b4:	mov    eax,ebx
   1400040b6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400040bb:	xor    rcx,rsp
   1400040be:	call   0x1400056b0
   1400040c3:	lea    r11,[rsp+0x70]
   1400040c8:	mov    rbx,QWORD PTR [r11+0x30]
   1400040cc:	mov    rbp,QWORD PTR [r11+0x38]
   1400040d0:	mov    rsp,r11
   1400040d3:	pop    r14
   1400040d5:	pop    rdi
   1400040d6:	pop    rsi
   1400040d7:	ret    
   1400040d8:	int3   
   1400040d9:	int3   
   1400040da:	int3   
   1400040db:	int3   
   1400040dc:	int3   
   1400040dd:	int3   
   1400040de:	int3   
   1400040df:	int3   
   1400040e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400040e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400040ea:	push   rdi
   1400040eb:	sub    rsp,0x20
   1400040ef:	and    QWORD PTR [rcx],0x0
   1400040f3:	lea    rdx,[rip+0x59ee]        # 0x140009ae8
   1400040fa:	mov    rsi,rcx
   1400040fd:	mov    ecx,0x20
   140004102:	call   0x1400056f8
   140004107:	mov    rbx,rax
   14000410a:	test   rax,rax
   14000410d:	je     0x14000419b
   140004113:	mov    DWORD PTR [rax+0xc],0x1
   14000411a:	lea    rax,[rip+0x5cc7]        # 0x140009de8
   140004121:	mov    QWORD PTR [rbx],rax
   140004124:	mov    rax,QWORD PTR [rip+0x85cd]        # 0x14000c6f8
   14000412b:	test   rax,rax
   14000412e:	je     0x14000414f
   140004130:	mov    rax,QWORD PTR [rax]
   140004133:	lea    rcx,[rip+0xfffffffffffff636]        # 0x140003770
   14000413a:	cmp    QWORD PTR [rax+0x8],rcx
   14000413e:	jne    0x140004148
   140004140:	call   QWORD PTR [rip+0x3f42]        # 0x140008088
   140004146:	jmp    0x14000414f
   140004148:	lock inc DWORD PTR [rip+0x85b1]        # 0x14000c700
   14000414f:	lea    rax,[rip+0x5c62]        # 0x140009db8
   140004156:	mov    BYTE PTR [rbx+0x10],0x0
   14000415a:	mov    rdi,QWORD PTR [rax]
   14000415d:	mov    QWORD PTR [rbx],rax
   140004160:	mov    rcx,rdi
   140004163:	and    QWORD PTR [rbx+0x18],0x0
   140004168:	call   QWORD PTR [rip+0x41a2]        # 0x140008310
   14000416e:	mov    r8,rsi
   140004171:	lea    rdx,[rip+0x58d0]        # 0x140009a48
   140004178:	mov    rcx,rbx
   14000417b:	call   rdi
   14000417d:	mov    esi,eax
   14000417f:	test   rbx,rbx
   140004182:	je     0x1400041a0
   140004184:	mov    rcx,QWORD PTR [rbx]
   140004187:	mov    rdi,QWORD PTR [rcx+0x10]
   14000418b:	mov    rcx,rdi
   14000418e:	call   QWORD PTR [rip+0x417c]        # 0x140008310
   140004194:	mov    rcx,rbx
   140004197:	call   rdi
   140004199:	jmp    0x1400041a0
   14000419b:	mov    esi,0x8007000e
   1400041a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041a5:	mov    eax,esi
   1400041a7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400041ac:	add    rsp,0x20
   1400041b0:	pop    rdi
   1400041b1:	ret    
   1400041b2:	int3   
   1400041b3:	int3   
   1400041b4:	int3   
   1400041b5:	int3   
   1400041b6:	int3   
   1400041b7:	int3   
   1400041b8:	int3   
   1400041b9:	int3   
   1400041ba:	int3   
   1400041bb:	int3   
   1400041bc:	int3   
   1400041bd:	int3   
   1400041be:	int3   
   1400041bf:	int3   
   1400041c0:	mov    rax,rsp
   1400041c3:	mov    QWORD PTR [rax+0x8],rbx
   1400041c7:	mov    QWORD PTR [rax+0x10],rbp
   1400041cb:	mov    QWORD PTR [rax+0x18],rsi
   1400041cf:	mov    QWORD PTR [rax+0x20],rdi
   1400041d3:	push   r14
   1400041d5:	sub    rsp,0x50
   1400041d9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400041dd:	mov    rsi,r9
   1400041e0:	mov    rbp,r8
   1400041e3:	mov    r14d,edx
   1400041e6:	mov    rax,QWORD PTR [rdi]
   1400041e9:	mov    rbx,QWORD PTR [rax+0x18]
   1400041ed:	mov    rcx,rbx
   1400041f0:	call   QWORD PTR [rip+0x411a]        # 0x140008310
   1400041f6:	mov    r9,rsi
   1400041f9:	mov    r8,rbp
   1400041fc:	mov    edx,r14d
   1400041ff:	mov    rcx,rdi
   140004202:	mov    rax,rbx
   140004205:	mov    rbx,QWORD PTR [rsp+0x60]
   14000420a:	mov    rbp,QWORD PTR [rsp+0x68]
   14000420f:	mov    rsi,QWORD PTR [rsp+0x70]
   140004214:	mov    rdi,QWORD PTR [rsp+0x78]
   140004219:	add    rsp,0x50
   14000421d:	pop    r14
   14000421f:	rex.W jmp rax
   140004222:	int3   
   140004223:	int3   
   140004224:	int3   
   140004225:	int3   
   140004226:	int3   
   140004227:	int3   
   140004228:	int3   
   140004229:	int3   
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	mov    QWORD PTR [rsp+0x8],rbx
   140004235:	mov    QWORD PTR [rsp+0x10],rsi
   14000423a:	push   rdi
   14000423b:	sub    rsp,0x20
   14000423f:	mov    rdi,QWORD PTR [rcx+0x10]
   140004243:	mov    esi,edx
   140004245:	mov    rax,QWORD PTR [rdi]
   140004248:	mov    rbx,QWORD PTR [rax+0x28]
   14000424c:	mov    rcx,rbx
   14000424f:	call   QWORD PTR [rip+0x40bb]        # 0x140008310
   140004255:	mov    edx,esi
   140004257:	mov    rcx,rdi
   14000425a:	mov    rax,rbx
   14000425d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004262:	mov    rsi,QWORD PTR [rsp+0x38]
   140004267:	add    rsp,0x20
   14000426b:	pop    rdi
   14000426c:	rex.W jmp rax
   14000426f:	int3   
   140004270:	int3   
   140004271:	int3   
   140004272:	int3   
   140004273:	int3   
   140004274:	int3   
   140004275:	int3   
   140004276:	int3   
   140004277:	int3   
   140004278:	int3   
   140004279:	int3   
   14000427a:	int3   
   14000427b:	int3   
   14000427c:	int3   
   14000427d:	int3   
   14000427e:	int3   
   14000427f:	int3   
   140004280:	mov    QWORD PTR [rsp+0x8],rbx
   140004285:	mov    QWORD PTR [rsp+0x10],rsi
   14000428a:	push   rdi
   14000428b:	sub    rsp,0x20
   14000428f:	mov    rdi,QWORD PTR [rcx+0x10]
   140004293:	mov    rsi,rdx
   140004296:	mov    rax,QWORD PTR [rdi]
   140004299:	mov    rbx,QWORD PTR [rax+0x30]
   14000429d:	mov    rcx,rbx
   1400042a0:	call   QWORD PTR [rip+0x406a]        # 0x140008310
   1400042a6:	mov    rdx,rsi
   1400042a9:	mov    rcx,rdi
   1400042ac:	mov    rax,rbx
   1400042af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042b4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400042b9:	add    rsp,0x20
   1400042bd:	pop    rdi
   1400042be:	rex.W jmp rax
   1400042c1:	int3   
   1400042c2:	int3   
   1400042c3:	int3   
   1400042c4:	int3   
   1400042c5:	int3   
   1400042c6:	int3   
   1400042c7:	int3   
   1400042c8:	int3   
   1400042c9:	int3   
   1400042ca:	int3   
   1400042cb:	int3   
   1400042cc:	int3   
   1400042cd:	int3   
   1400042ce:	int3   
   1400042cf:	int3   
   1400042d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400042da:	push   rdi
   1400042db:	sub    rsp,0x20
   1400042df:	mov    rdi,QWORD PTR [rcx+0x10]
   1400042e3:	mov    rsi,rdx
   1400042e6:	mov    rax,QWORD PTR [rdi]
   1400042e9:	mov    rbx,QWORD PTR [rax+0x38]
   1400042ed:	mov    rcx,rbx
   1400042f0:	call   QWORD PTR [rip+0x401a]        # 0x140008310
   1400042f6:	mov    rdx,rsi
   1400042f9:	mov    rcx,rdi
   1400042fc:	mov    rax,rbx
   1400042ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140004304:	mov    rsi,QWORD PTR [rsp+0x38]
   140004309:	add    rsp,0x20
   14000430d:	pop    rdi
   14000430e:	rex.W jmp rax
   140004311:	int3   
   140004312:	int3   
   140004313:	int3   
   140004314:	int3   
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	int3   
   140004319:	int3   
   14000431a:	int3   
   14000431b:	int3   
   14000431c:	int3   
   14000431d:	int3   
   14000431e:	int3   
   14000431f:	int3   
   140004320:	mov    QWORD PTR [rsp+0x8],rbx
   140004325:	mov    QWORD PTR [rsp+0x10],rsi
   14000432a:	push   rdi
   14000432b:	sub    rsp,0x20
   14000432f:	mov    rdi,QWORD PTR [rcx+0x10]
   140004333:	mov    rsi,rdx
   140004336:	mov    rax,QWORD PTR [rdi]
   140004339:	mov    rbx,QWORD PTR [rax+0x40]
   14000433d:	mov    rcx,rbx
   140004340:	call   QWORD PTR [rip+0x3fca]        # 0x140008310
   140004346:	mov    rdx,rsi
   140004349:	mov    rcx,rdi
   14000434c:	mov    rax,rbx
   14000434f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004354:	mov    rsi,QWORD PTR [rsp+0x38]
   140004359:	add    rsp,0x20
   14000435d:	pop    rdi
   14000435e:	rex.W jmp rax
   140004361:	int3   
   140004362:	int3   
   140004363:	int3   
   140004364:	int3   
   140004365:	int3   
   140004366:	int3   
   140004367:	int3   
   140004368:	int3   
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    QWORD PTR [rsp+0x8],rbx
   140004375:	push   rdi
   140004376:	sub    rsp,0x20
   14000437a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000437e:	mov    rax,QWORD PTR [rdi]
   140004381:	mov    rbx,QWORD PTR [rax+0x48]
   140004385:	mov    rcx,rbx
   140004388:	call   QWORD PTR [rip+0x3f82]        # 0x140008310
   14000438e:	mov    rcx,rdi
   140004391:	mov    rax,rbx
   140004394:	mov    rbx,QWORD PTR [rsp+0x30]
   140004399:	add    rsp,0x20
   14000439d:	pop    rdi
   14000439e:	rex.W jmp rax
   1400043a1:	int3   
   1400043a2:	int3   
   1400043a3:	int3   
   1400043a4:	int3   
   1400043a5:	int3   
   1400043a6:	int3   
   1400043a7:	int3   
   1400043a8:	int3   
   1400043a9:	int3   
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400043ba:	push   rdi
   1400043bb:	sub    rsp,0x20
   1400043bf:	xor    edi,edi
   1400043c1:	mov    rsi,rcx
   1400043c4:	mov    QWORD PTR [r8],rdi
   1400043c7:	cmp    DWORD PTR [rdx],edi
   1400043c9:	jne    0x1400043ec
   1400043cb:	mov    eax,DWORD PTR [rip+0x567b]        # 0x140009a4c
   1400043d1:	cmp    DWORD PTR [rdx+0x4],eax
   1400043d4:	jne    0x1400043ec
   1400043d6:	mov    eax,DWORD PTR [rip+0x5674]        # 0x140009a50
   1400043dc:	cmp    DWORD PTR [rdx+0x8],eax
   1400043df:	jne    0x1400043ec
   1400043e1:	mov    eax,DWORD PTR [rip+0x566d]        # 0x140009a54
   1400043e7:	cmp    DWORD PTR [rdx+0xc],eax
   1400043ea:	je     0x140004415
   1400043ec:	cmp    DWORD PTR [rdx],0x60edc75
   1400043f2:	jne    0x14000442f
   1400043f4:	mov    eax,DWORD PTR [rip+0x5f52]        # 0x14000a34c
   1400043fa:	cmp    DWORD PTR [rdx+0x4],eax
   1400043fd:	jne    0x14000442f
   1400043ff:	mov    eax,DWORD PTR [rip+0x5f4b]        # 0x14000a350
   140004405:	cmp    DWORD PTR [rdx+0x8],eax
   140004408:	jne    0x14000442f
   14000440a:	mov    eax,DWORD PTR [rip+0x5f44]        # 0x14000a354
   140004410:	cmp    DWORD PTR [rdx+0xc],eax
   140004413:	jne    0x14000442f
   140004415:	mov    QWORD PTR [r8],rcx
   140004418:	mov    rax,QWORD PTR [rcx]
   14000441b:	mov    rbx,QWORD PTR [rax+0x8]
   14000441f:	mov    rcx,rbx
   140004422:	call   QWORD PTR [rip+0x3ee8]        # 0x140008310
   140004428:	mov    rcx,rsi
   14000442b:	call   rbx
   14000442d:	jmp    0x140004434
   14000442f:	mov    edi,0x80004002
   140004434:	mov    rbx,QWORD PTR [rsp+0x30]
   140004439:	mov    eax,edi
   14000443b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004440:	add    rsp,0x20
   140004444:	pop    rdi
   140004445:	ret    
   140004446:	int3   
   140004447:	int3   
   140004448:	int3   
   140004449:	int3   
   14000444a:	int3   
   14000444b:	int3   
   14000444c:	int3   
   14000444d:	int3   
   14000444e:	int3   
   14000444f:	int3   
   140004450:	mov    QWORD PTR [rsp+0x8],rbx
   140004455:	mov    QWORD PTR [rsp+0x10],rsi
   14000445a:	push   rdi
   14000445b:	sub    rsp,0x20
   14000445f:	mov    rsi,rcx
   140004462:	or     edi,0xffffffff
   140004465:	lock xadd DWORD PTR [rcx+0xc],edi
   14000446a:	sub    edi,0x1
   14000446d:	jne    0x1400044ad
   14000446f:	test   rcx,rcx
   140004472:	je     0x14000448c
   140004474:	mov    rax,QWORD PTR [rcx]
   140004477:	mov    rbx,QWORD PTR [rax+0x50]
   14000447b:	mov    rcx,rbx
   14000447e:	call   QWORD PTR [rip+0x3e8c]        # 0x140008310
   140004484:	lea    edx,[rdi+0x1]
   140004487:	mov    rcx,rsi
   14000448a:	call   rbx
   14000448c:	mov    rsi,QWORD PTR [rip+0x8265]        # 0x14000c6f8
   140004493:	test   rsi,rsi
   140004496:	je     0x1400044ad
   140004498:	mov    rdx,QWORD PTR [rsi]
   14000449b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000449f:	mov    rcx,rbx
   1400044a2:	call   QWORD PTR [rip+0x3e68]        # 0x140008310
   1400044a8:	mov    rcx,rsi
   1400044ab:	call   rbx
   1400044ad:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044b2:	mov    eax,edi
   1400044b4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400044b9:	add    rsp,0x20
   1400044bd:	pop    rdi
   1400044be:	ret    
   1400044bf:	int3   
   1400044c0:	int3   
   1400044c1:	int3   
   1400044c2:	int3   
   1400044c3:	int3   
   1400044c4:	int3   
   1400044c5:	int3   
   1400044c6:	int3   
   1400044c7:	int3   
   1400044c8:	int3   
   1400044c9:	int3   
   1400044ca:	int3   
   1400044cb:	int3   
   1400044cc:	int3   
   1400044cd:	int3   
   1400044ce:	int3   
   1400044cf:	int3   
   1400044d0:	mov    rax,rsp
   1400044d3:	mov    QWORD PTR [rax+0x8],rbx
   1400044d7:	mov    QWORD PTR [rax+0x10],rbp
   1400044db:	mov    QWORD PTR [rax+0x18],rsi
   1400044df:	mov    QWORD PTR [rax+0x20],rdi
   1400044e3:	push   r14
   1400044e5:	sub    rsp,0x30
   1400044e9:	and    QWORD PTR [rax-0x18],0x0
   1400044ee:	lea    rdx,[rip+0x55f3]        # 0x140009ae8
   1400044f5:	mov    r14,rcx
   1400044f8:	mov    rsi,r9
   1400044fb:	mov    ecx,0x18
   140004500:	mov    rbp,r8
   140004503:	call   0x1400056f8
   140004508:	mov    rbx,rax
   14000450b:	test   rax,rax
   14000450e:	je     0x1400045d9
   140004514:	lea    rdi,[rip+0x5b2d]        # 0x14000a048
   14000451b:	mov    DWORD PTR [rax+0xc],0x1
   140004522:	mov    rcx,QWORD PTR [rdi+0x8]
   140004526:	mov    DWORD PTR [rax+0x14],0x4
   14000452d:	mov    QWORD PTR [rax],rdi
   140004530:	call   QWORD PTR [rip+0x3dda]        # 0x140008310
   140004536:	mov    rcx,rbx
   140004539:	call   QWORD PTR [rdi+0x8]
   14000453c:	mov    rax,QWORD PTR [rbx]
   14000453f:	mov    QWORD PTR [rsp+0x20],rbx
   140004544:	mov    rdi,QWORD PTR [rax+0x10]
   140004548:	mov    rcx,rdi
   14000454b:	call   QWORD PTR [rip+0x3dbf]        # 0x140008310
   140004551:	mov    rcx,rbx
   140004554:	call   rdi
   140004556:	mov    eax,DWORD PTR [r14]
   140004559:	mov    DWORD PTR [rbx+0x14],eax
   14000455c:	mov    rax,QWORD PTR [rbx]
   14000455f:	mov    rdi,QWORD PTR [rax]
   140004562:	mov    rcx,rdi
   140004565:	call   QWORD PTR [rip+0x3da5]        # 0x140008310
   14000456b:	mov    r8,rsi
   14000456e:	mov    rdx,rbp
   140004571:	mov    rcx,rbx
   140004574:	call   rdi
   140004576:	test   BYTE PTR [r14],0x1
   14000457a:	mov    esi,eax
   14000457c:	je     0x1400045bd
   14000457e:	test   eax,eax
   140004580:	js     0x1400045b9
   140004582:	test   BYTE PTR [r14],0x4
   140004586:	je     0x1400045b5
   140004588:	mov    rax,QWORD PTR [rip+0x8169]        # 0x14000c6f8
   14000458f:	mov    rcx,QWORD PTR [rax]
   140004592:	lea    rax,[rip+0xfffffffffffff1d7]        # 0x140003770
   140004599:	cmp    QWORD PTR [rcx+0x8],rax
   14000459d:	jne    0x1400045a7
   14000459f:	call   QWORD PTR [rip+0x3ae3]        # 0x140008088
   1400045a5:	jmp    0x1400045bd
   1400045a7:	lock inc DWORD PTR [rip+0x8152]        # 0x14000c700
   1400045ae:	mov    rbx,QWORD PTR [rsp+0x20]
   1400045b3:	jmp    0x1400045bd
   1400045b5:	xor    ebx,ebx
   1400045b7:	jmp    0x1400045bd
   1400045b9:	and    DWORD PTR [rbx+0x14],0xfffffffa
   1400045bd:	test   rbx,rbx
   1400045c0:	je     0x1400045de
   1400045c2:	mov    rax,QWORD PTR [rbx]
   1400045c5:	mov    rdi,QWORD PTR [rax+0x10]
   1400045c9:	mov    rcx,rdi
   1400045cc:	call   QWORD PTR [rip+0x3d3e]        # 0x140008310
   1400045d2:	mov    rcx,rbx
   1400045d5:	call   rdi
   1400045d7:	jmp    0x1400045de
   1400045d9:	mov    esi,0x8007000e
   1400045de:	mov    rbx,QWORD PTR [rsp+0x40]
   1400045e3:	mov    eax,esi
   1400045e5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400045ea:	mov    rbp,QWORD PTR [rsp+0x48]
   1400045ef:	mov    rdi,QWORD PTR [rsp+0x58]
   1400045f4:	add    rsp,0x30
   1400045f8:	pop    r14
   1400045fa:	ret    
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	mov    QWORD PTR [rsp+0x8],rbx
   140004615:	mov    QWORD PTR [rsp+0x18],rbp
   14000461a:	push   rsi
   14000461b:	push   rdi
   14000461c:	push   r14
   14000461e:	sub    rsp,0x20
   140004622:	and    QWORD PTR [r9],0x0
   140004626:	mov    r14,r9
   140004629:	mov    rbp,r8
   14000462c:	test   rdx,rdx
   14000462f:	je     0x140004644
   140004631:	mov    ebx,0x80040110
   140004636:	xor    edx,edx
   140004638:	mov    ecx,ebx
   14000463a:	call   QWORD PTR [rip+0x3b60]        # 0x1400081a0
   140004640:	mov    eax,ebx
   140004642:	jmp    0x1400046a2
   140004644:	and    QWORD PTR [rsp+0x48],0x0
   14000464a:	lea    rcx,[rsp+0x48]
   14000464f:	call   0x1400046bc
   140004654:	mov    esi,eax
   140004656:	test   eax,eax
   140004658:	js     0x14000467b
   14000465a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000465f:	mov    rax,QWORD PTR [rbx]
   140004662:	mov    rdi,QWORD PTR [rax]
   140004665:	mov    rcx,rdi
   140004668:	call   QWORD PTR [rip+0x3ca2]        # 0x140008310
   14000466e:	mov    r8,r14
   140004671:	mov    rdx,rbp
   140004674:	mov    rcx,rbx
   140004677:	call   rdi
   140004679:	mov    esi,eax
   14000467b:	mov    rdi,QWORD PTR [rsp+0x48]
   140004680:	test   rdi,rdi
   140004683:	je     0x1400046a0
   140004685:	and    QWORD PTR [rsp+0x48],0x0
   14000468b:	mov    rdx,QWORD PTR [rdi]
   14000468e:	mov    rbx,QWORD PTR [rdx+0x10]
   140004692:	mov    rcx,rbx
   140004695:	call   QWORD PTR [rip+0x3c75]        # 0x140008310
   14000469b:	mov    rcx,rdi
   14000469e:	call   rbx
   1400046a0:	mov    eax,esi
   1400046a2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400046a7:	mov    rbp,QWORD PTR [rsp+0x50]
   1400046ac:	add    rsp,0x20
   1400046b0:	pop    r14
   1400046b2:	pop    rdi
   1400046b3:	pop    rsi
   1400046b4:	ret    
   1400046b5:	int3   
   1400046b6:	int3   
   1400046b7:	int3   
   1400046b8:	int3   
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	mov    rax,rsp
   1400046bf:	mov    QWORD PTR [rax+0x8],rbx
   1400046c3:	mov    QWORD PTR [rax+0x10],rsi
   1400046c7:	mov    QWORD PTR [rax+0x18],rdi
   1400046cb:	mov    QWORD PTR [rax+0x20],r14
   1400046cf:	push   r15
   1400046d1:	sub    rsp,0x30
   1400046d5:	and    QWORD PTR [rcx],0x0
   1400046d9:	lea    rdx,[rip+0x5408]        # 0x140009ae8
   1400046e0:	mov    r15,rcx
   1400046e3:	xor    ebx,ebx
   1400046e5:	lea    ecx,[rbx+0x18]
   1400046e8:	call   0x1400056f8
   1400046ed:	mov    rdi,rax
   1400046f0:	test   rax,rax
   1400046f3:	jne    0x1400046ff
   1400046f5:	mov    esi,0x8007000e
   1400046fa:	jmp    0x1400047b6
   1400046ff:	mov    DWORD PTR [rax+0xc],0x1
   140004706:	lea    rax,[rip+0x588b]        # 0x140009f98
   14000470d:	mov    QWORD PTR [rdi],rax
   140004710:	mov    rax,QWORD PTR [rip+0x7fe1]        # 0x14000c6f8
   140004717:	test   rax,rax
   14000471a:	je     0x14000473b
   14000471c:	mov    rax,QWORD PTR [rax]
   14000471f:	lea    rcx,[rip+0xfffffffffffff04a]        # 0x140003770
   140004726:	cmp    QWORD PTR [rax+0x8],rcx
   14000472a:	jne    0x140004734
   14000472c:	call   QWORD PTR [rip+0x3956]        # 0x140008088
   140004732:	jmp    0x14000473b
   140004734:	lock inc DWORD PTR [rip+0x7fc5]        # 0x14000c700
   14000473b:	lea    rax,[rip+0x58ae]        # 0x140009ff0
   140004742:	mov    QWORD PTR [rdi],rax
   140004745:	lea    rsi,[rdi+0x10]
   140004749:	and    QWORD PTR [rdi+0x10],rbx
   14000474d:	mov    rbx,rdi
   140004750:	mov    r14,QWORD PTR [rsi]
   140004753:	test   r14,r14
   140004756:	je     0x140004771
   140004758:	and    QWORD PTR [rsi],0x0
   14000475c:	mov    rax,QWORD PTR [r14]
   14000475f:	mov    rdi,QWORD PTR [rax+0x10]
   140004763:	mov    rcx,rdi
   140004766:	call   QWORD PTR [rip+0x3ba4]        # 0x140008310
   14000476c:	mov    rcx,r14
   14000476f:	call   rdi
   140004771:	xor    edx,edx
   140004773:	mov    QWORD PTR [rsp+0x20],rsi
   140004778:	lea    r9,[rip+0x5bc9]        # 0x14000a348
   14000477f:	lea    rcx,[rip+0x5bd2]        # 0x14000a358
   140004786:	lea    r8d,[rdx+0x1]
   14000478a:	call   QWORD PTR [rip+0x3930]        # 0x1400080c0
   140004790:	mov    esi,eax
   140004792:	test   eax,eax
   140004794:	js     0x1400047b6
   140004796:	mov    rax,QWORD PTR [rbx]
   140004799:	mov    rdi,QWORD PTR [rax]
   14000479c:	mov    rcx,rdi
   14000479f:	call   QWORD PTR [rip+0x3b6b]        # 0x140008310
   1400047a5:	mov    r8,r15
   1400047a8:	lea    rdx,[rip+0x5299]        # 0x140009a48
   1400047af:	mov    rcx,rbx
   1400047b2:	call   rdi
   1400047b4:	mov    esi,eax
   1400047b6:	test   rbx,rbx
   1400047b9:	je     0x1400047d0
   1400047bb:	mov    rcx,QWORD PTR [rbx]
   1400047be:	mov    rdi,QWORD PTR [rcx+0x10]
   1400047c2:	mov    rcx,rdi
   1400047c5:	call   QWORD PTR [rip+0x3b45]        # 0x140008310
   1400047cb:	mov    rcx,rbx
   1400047ce:	call   rdi
   1400047d0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400047d5:	mov    eax,esi
   1400047d7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400047dc:	mov    rdi,QWORD PTR [rsp+0x50]
   1400047e1:	mov    r14,QWORD PTR [rsp+0x58]
   1400047e6:	add    rsp,0x30
   1400047ea:	pop    r15
   1400047ec:	ret    
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	int3   
   1400047f1:	int3   
   1400047f2:	int3   
   1400047f3:	int3   
   1400047f4:	int3   
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	mov    QWORD PTR [rsp+0x8],rbx
   140004805:	mov    QWORD PTR [rsp+0x10],rsi
   14000480a:	push   rdi
   14000480b:	sub    rsp,0x20
   14000480f:	mov    rdi,QWORD PTR [rcx+0x10]
   140004813:	mov    esi,edx
   140004815:	mov    rax,QWORD PTR [rdi]
   140004818:	mov    rbx,QWORD PTR [rax+0x18]
   14000481c:	mov    rcx,rbx
   14000481f:	call   QWORD PTR [rip+0x3aeb]        # 0x140008310
   140004825:	mov    edx,esi
   140004827:	mov    rcx,rdi
   14000482a:	mov    rax,rbx
   14000482d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004832:	mov    rsi,QWORD PTR [rsp+0x38]
   140004837:	add    rsp,0x20
   14000483b:	pop    rdi
   14000483c:	rex.W jmp rax
   14000483f:	int3   
   140004840:	int3   
   140004841:	int3   
   140004842:	int3   
   140004843:	int3   
   140004844:	int3   
   140004845:	int3   
   140004846:	int3   
   140004847:	int3   
   140004848:	int3   
   140004849:	int3   
   14000484a:	int3   
   14000484b:	int3   
   14000484c:	int3   
   14000484d:	int3   
   14000484e:	int3   
   14000484f:	int3   
   140004850:	mov    rax,rsp
   140004853:	mov    QWORD PTR [rax+0x8],rbx
   140004857:	mov    QWORD PTR [rax+0x10],rbp
   14000485b:	mov    QWORD PTR [rax+0x18],rsi
   14000485f:	mov    QWORD PTR [rax+0x20],rdi
   140004863:	push   r14
   140004865:	sub    rsp,0x20
   140004869:	mov    rdi,QWORD PTR [rcx+0x10]
   14000486d:	mov    esi,r9d
   140004870:	mov    ebp,r8d
   140004873:	mov    r14,rdx
   140004876:	mov    rax,QWORD PTR [rdi]
   140004879:	mov    rbx,QWORD PTR [rax+0x20]
   14000487d:	mov    rcx,rbx
   140004880:	call   QWORD PTR [rip+0x3a8a]        # 0x140008310
   140004886:	mov    r9d,esi
   140004889:	mov    r8d,ebp
   14000488c:	mov    rdx,r14
   14000488f:	mov    rcx,rdi
   140004892:	mov    rax,rbx
   140004895:	mov    rbx,QWORD PTR [rsp+0x30]
   14000489a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000489f:	mov    rsi,QWORD PTR [rsp+0x40]
   1400048a4:	mov    rdi,QWORD PTR [rsp+0x48]
   1400048a9:	add    rsp,0x20
   1400048ad:	pop    r14
   1400048af:	rex.W jmp rax
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048c5:	push   rdi
   1400048c6:	sub    rsp,0x20
   1400048ca:	mov    rdi,QWORD PTR [rcx+0x10]
   1400048ce:	mov    rax,QWORD PTR [rdi]
   1400048d1:	mov    rbx,QWORD PTR [rax+0x28]
   1400048d5:	mov    rcx,rbx
   1400048d8:	call   QWORD PTR [rip+0x3a32]        # 0x140008310
   1400048de:	mov    rcx,rdi
   1400048e1:	mov    rax,rbx
   1400048e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048e9:	add    rsp,0x20
   1400048ed:	pop    rdi
   1400048ee:	rex.W jmp rax
   1400048f1:	int3   
   1400048f2:	int3   
   1400048f3:	int3   
   1400048f4:	int3   
   1400048f5:	int3   
   1400048f6:	int3   
   1400048f7:	int3   
   1400048f8:	int3   
   1400048f9:	int3   
   1400048fa:	int3   
   1400048fb:	int3   
   1400048fc:	int3   
   1400048fd:	int3   
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	mov    rax,rsp
   140004903:	mov    QWORD PTR [rax+0x8],rbx
   140004907:	mov    QWORD PTR [rax+0x10],rbp
   14000490b:	mov    QWORD PTR [rax+0x18],rsi
   14000490f:	mov    QWORD PTR [rax+0x20],rdi
   140004913:	push   r14
   140004915:	sub    rsp,0x40
   140004919:	mov    rdi,QWORD PTR [rcx+0x10]
   14000491d:	mov    rsi,r9
   140004920:	mov    rbp,r8
   140004923:	mov    r14,rdx
   140004926:	mov    rax,QWORD PTR [rdi]
   140004929:	mov    rbx,QWORD PTR [rax+0x30]
   14000492d:	mov    rcx,rbx
   140004930:	call   QWORD PTR [rip+0x39da]        # 0x140008310
   140004936:	mov    r9,rsi
   140004939:	mov    r8,rbp
   14000493c:	mov    rdx,r14
   14000493f:	mov    rcx,rdi
   140004942:	mov    rax,rbx
   140004945:	mov    rbx,QWORD PTR [rsp+0x50]
   14000494a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000494f:	mov    rsi,QWORD PTR [rsp+0x60]
   140004954:	mov    rdi,QWORD PTR [rsp+0x68]
   140004959:	add    rsp,0x40
   14000495d:	pop    r14
   14000495f:	rex.W jmp rax
   140004962:	int3   
   140004963:	int3   
   140004964:	int3   
   140004965:	int3   
   140004966:	int3   
   140004967:	int3   
   140004968:	int3   
   140004969:	int3   
   14000496a:	int3   
   14000496b:	int3   
   14000496c:	int3   
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	mov    QWORD PTR [rsp+0x8],rbx
   140004975:	push   rdi
   140004976:	sub    rsp,0x20
   14000497a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000497e:	mov    rax,QWORD PTR [rdi]
   140004981:	mov    rbx,QWORD PTR [rax+0x40]
   140004985:	mov    rcx,rbx
   140004988:	call   QWORD PTR [rip+0x3982]        # 0x140008310
   14000498e:	mov    rcx,rdi
   140004991:	mov    rax,rbx
   140004994:	mov    rbx,QWORD PTR [rsp+0x30]
   140004999:	add    rsp,0x20
   14000499d:	pop    rdi
   14000499e:	rex.W jmp rax
   1400049a1:	int3   
   1400049a2:	int3   
   1400049a3:	int3   
   1400049a4:	int3   
   1400049a5:	int3   
   1400049a6:	int3   
   1400049a7:	int3   
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400049ba:	push   rdi
   1400049bb:	sub    rsp,0x20
   1400049bf:	xor    edi,edi
   1400049c1:	mov    rsi,rcx
   1400049c4:	mov    QWORD PTR [r8],rdi
   1400049c7:	cmp    DWORD PTR [rdx],edi
   1400049c9:	jne    0x1400049ec
   1400049cb:	mov    eax,DWORD PTR [rip+0x507b]        # 0x140009a4c
   1400049d1:	cmp    DWORD PTR [rdx+0x4],eax
   1400049d4:	jne    0x1400049ec
   1400049d6:	mov    eax,DWORD PTR [rip+0x5074]        # 0x140009a50
   1400049dc:	cmp    DWORD PTR [rdx+0x8],eax
   1400049df:	jne    0x1400049ec
   1400049e1:	mov    eax,DWORD PTR [rip+0x506d]        # 0x140009a54
   1400049e7:	cmp    DWORD PTR [rdx+0xc],eax
   1400049ea:	je     0x140004a15
   1400049ec:	cmp    DWORD PTR [rdx],0xe2ed0e45
   1400049f2:	jne    0x140004a2f
   1400049f4:	mov    eax,DWORD PTR [rip+0x5982]        # 0x14000a37c
   1400049fa:	cmp    DWORD PTR [rdx+0x4],eax
   1400049fd:	jne    0x140004a2f
   1400049ff:	mov    eax,DWORD PTR [rip+0x597b]        # 0x14000a380
   140004a05:	cmp    DWORD PTR [rdx+0x8],eax
   140004a08:	jne    0x140004a2f
   140004a0a:	mov    eax,DWORD PTR [rip+0x5974]        # 0x14000a384
   140004a10:	cmp    DWORD PTR [rdx+0xc],eax
   140004a13:	jne    0x140004a2f
   140004a15:	mov    QWORD PTR [r8],rcx
   140004a18:	mov    rax,QWORD PTR [rcx]
   140004a1b:	mov    rbx,QWORD PTR [rax+0x8]
   140004a1f:	mov    rcx,rbx
   140004a22:	call   QWORD PTR [rip+0x38e8]        # 0x140008310
   140004a28:	mov    rcx,rsi
   140004a2b:	call   rbx
   140004a2d:	jmp    0x140004a34
   140004a2f:	mov    edi,0x80004002
   140004a34:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a39:	mov    eax,edi
   140004a3b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a40:	add    rsp,0x20
   140004a44:	pop    rdi
   140004a45:	ret    
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    QWORD PTR [rsp+0x8],rbx
   140004a55:	mov    QWORD PTR [rsp+0x10],rsi
   140004a5a:	push   rdi
   140004a5b:	sub    rsp,0x20
   140004a5f:	mov    rsi,rcx
   140004a62:	or     edi,0xffffffff
   140004a65:	lock xadd DWORD PTR [rcx+0xc],edi
   140004a6a:	sub    edi,0x1
   140004a6d:	jne    0x140004aad
   140004a6f:	test   rcx,rcx
   140004a72:	je     0x140004a8c
   140004a74:	mov    rax,QWORD PTR [rcx]
   140004a77:	mov    rbx,QWORD PTR [rax+0x48]
   140004a7b:	mov    rcx,rbx
   140004a7e:	call   QWORD PTR [rip+0x388c]        # 0x140008310
   140004a84:	lea    edx,[rdi+0x1]
   140004a87:	mov    rcx,rsi
   140004a8a:	call   rbx
   140004a8c:	mov    rsi,QWORD PTR [rip+0x7c65]        # 0x14000c6f8
   140004a93:	test   rsi,rsi
   140004a96:	je     0x140004aad
   140004a98:	mov    rdx,QWORD PTR [rsi]
   140004a9b:	mov    rbx,QWORD PTR [rdx+0x10]
   140004a9f:	mov    rcx,rbx
   140004aa2:	call   QWORD PTR [rip+0x3868]        # 0x140008310
   140004aa8:	mov    rcx,rsi
   140004aab:	call   rbx
   140004aad:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ab2:	mov    eax,edi
   140004ab4:	mov    rsi,QWORD PTR [rsp+0x38]
   140004ab9:	add    rsp,0x20
   140004abd:	pop    rdi
   140004abe:	ret    
   140004abf:	int3   
   140004ac0:	int3   
   140004ac1:	int3   
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	int3   
   140004ac9:	int3   
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	mov    rax,rsp
   140004ad3:	mov    QWORD PTR [rax+0x8],rbx
   140004ad7:	mov    QWORD PTR [rax+0x10],rbp
   140004adb:	mov    QWORD PTR [rax+0x18],rsi
   140004adf:	mov    QWORD PTR [rax+0x20],rdi
   140004ae3:	push   r14
   140004ae5:	sub    rsp,0x30
   140004ae9:	and    QWORD PTR [rax-0x18],0x0
   140004aee:	lea    rdx,[rip+0x4ff3]        # 0x140009ae8
   140004af5:	mov    r14,rcx
   140004af8:	mov    rsi,r9
   140004afb:	mov    ecx,0x18
   140004b00:	mov    rbp,r8
   140004b03:	call   0x1400056f8
   140004b08:	mov    rbx,rax
   140004b0b:	test   rax,rax
   140004b0e:	je     0x140004bd9
   140004b14:	lea    rdi,[rip+0x55d5]        # 0x14000a0f0
   140004b1b:	mov    DWORD PTR [rax+0xc],0x1
   140004b22:	mov    rcx,QWORD PTR [rdi+0x8]
   140004b26:	mov    DWORD PTR [rax+0x14],0x4
   140004b2d:	mov    QWORD PTR [rax],rdi
   140004b30:	call   QWORD PTR [rip+0x37da]        # 0x140008310
   140004b36:	mov    rcx,rbx
   140004b39:	call   QWORD PTR [rdi+0x8]
   140004b3c:	mov    rax,QWORD PTR [rbx]
   140004b3f:	mov    QWORD PTR [rsp+0x20],rbx
   140004b44:	mov    rdi,QWORD PTR [rax+0x10]
   140004b48:	mov    rcx,rdi
   140004b4b:	call   QWORD PTR [rip+0x37bf]        # 0x140008310
   140004b51:	mov    rcx,rbx
   140004b54:	call   rdi
   140004b56:	mov    eax,DWORD PTR [r14]
   140004b59:	mov    DWORD PTR [rbx+0x14],eax
   140004b5c:	mov    rax,QWORD PTR [rbx]
   140004b5f:	mov    rdi,QWORD PTR [rax]
   140004b62:	mov    rcx,rdi
   140004b65:	call   QWORD PTR [rip+0x37a5]        # 0x140008310
   140004b6b:	mov    r8,rsi
   140004b6e:	mov    rdx,rbp
   140004b71:	mov    rcx,rbx
   140004b74:	call   rdi
   140004b76:	test   BYTE PTR [r14],0x1
   140004b7a:	mov    esi,eax
   140004b7c:	je     0x140004bbd
   140004b7e:	test   eax,eax
   140004b80:	js     0x140004bb9
   140004b82:	test   BYTE PTR [r14],0x4
   140004b86:	je     0x140004bb5
   140004b88:	mov    rax,QWORD PTR [rip+0x7b69]        # 0x14000c6f8
   140004b8f:	mov    rcx,QWORD PTR [rax]
   140004b92:	lea    rax,[rip+0xffffffffffffebd7]        # 0x140003770
   140004b99:	cmp    QWORD PTR [rcx+0x8],rax
   140004b9d:	jne    0x140004ba7
   140004b9f:	call   QWORD PTR [rip+0x34e3]        # 0x140008088
   140004ba5:	jmp    0x140004bbd
   140004ba7:	lock inc DWORD PTR [rip+0x7b52]        # 0x14000c700
   140004bae:	mov    rbx,QWORD PTR [rsp+0x20]
   140004bb3:	jmp    0x140004bbd
   140004bb5:	xor    ebx,ebx
   140004bb7:	jmp    0x140004bbd
   140004bb9:	and    DWORD PTR [rbx+0x14],0xfffffffa
   140004bbd:	test   rbx,rbx
   140004bc0:	je     0x140004bde
   140004bc2:	mov    rax,QWORD PTR [rbx]
   140004bc5:	mov    rdi,QWORD PTR [rax+0x10]
   140004bc9:	mov    rcx,rdi
   140004bcc:	call   QWORD PTR [rip+0x373e]        # 0x140008310
   140004bd2:	mov    rcx,rbx
   140004bd5:	call   rdi
   140004bd7:	jmp    0x140004bde
   140004bd9:	mov    esi,0x8007000e
   140004bde:	mov    rbx,QWORD PTR [rsp+0x40]
   140004be3:	mov    eax,esi
   140004be5:	mov    rsi,QWORD PTR [rsp+0x50]
   140004bea:	mov    rbp,QWORD PTR [rsp+0x48]
   140004bef:	mov    rdi,QWORD PTR [rsp+0x58]
   140004bf4:	add    rsp,0x30
   140004bf8:	pop    r14
   140004bfa:	ret    
   140004bfb:	int3   
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	int3   
   140004c01:	int3   
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	mov    QWORD PTR [rsp+0x8],rbx
   140004c15:	mov    QWORD PTR [rsp+0x18],rbp
   140004c1a:	push   rsi
   140004c1b:	push   rdi
   140004c1c:	push   r14
   140004c1e:	sub    rsp,0x20
   140004c22:	and    QWORD PTR [r9],0x0
   140004c26:	mov    r14,r9
   140004c29:	mov    rbp,r8
   140004c2c:	test   rdx,rdx
   140004c2f:	je     0x140004c44
   140004c31:	mov    ebx,0x80040110
   140004c36:	xor    edx,edx
   140004c38:	mov    ecx,ebx
   140004c3a:	call   QWORD PTR [rip+0x3560]        # 0x1400081a0
   140004c40:	mov    eax,ebx
   140004c42:	jmp    0x140004ca2
   140004c44:	and    QWORD PTR [rsp+0x48],0x0
   140004c4a:	lea    rcx,[rsp+0x48]
   140004c4f:	call   0x140004cbc
   140004c54:	mov    esi,eax
   140004c56:	test   eax,eax
   140004c58:	js     0x140004c7b
   140004c5a:	mov    rbx,QWORD PTR [rsp+0x48]
   140004c5f:	mov    rax,QWORD PTR [rbx]
   140004c62:	mov    rdi,QWORD PTR [rax]
   140004c65:	mov    rcx,rdi
   140004c68:	call   QWORD PTR [rip+0x36a2]        # 0x140008310
   140004c6e:	mov    r8,r14
   140004c71:	mov    rdx,rbp
   140004c74:	mov    rcx,rbx
   140004c77:	call   rdi
   140004c79:	mov    esi,eax
   140004c7b:	mov    rdi,QWORD PTR [rsp+0x48]
   140004c80:	test   rdi,rdi
   140004c83:	je     0x140004ca0
   140004c85:	and    QWORD PTR [rsp+0x48],0x0
   140004c8b:	mov    rdx,QWORD PTR [rdi]
   140004c8e:	mov    rbx,QWORD PTR [rdx+0x10]
   140004c92:	mov    rcx,rbx
   140004c95:	call   QWORD PTR [rip+0x3675]        # 0x140008310
   140004c9b:	mov    rcx,rdi
   140004c9e:	call   rbx
   140004ca0:	mov    eax,esi
   140004ca2:	mov    rbx,QWORD PTR [rsp+0x40]
   140004ca7:	mov    rbp,QWORD PTR [rsp+0x50]
   140004cac:	add    rsp,0x20
   140004cb0:	pop    r14
   140004cb2:	pop    rdi
   140004cb3:	pop    rsi
   140004cb4:	ret    
   140004cb5:	int3   
   140004cb6:	int3   
   140004cb7:	int3   
   140004cb8:	int3   
   140004cb9:	int3   
   140004cba:	int3   
   140004cbb:	int3   
   140004cbc:	mov    rax,rsp
   140004cbf:	mov    QWORD PTR [rax+0x8],rbx
   140004cc3:	mov    QWORD PTR [rax+0x10],rsi
   140004cc7:	mov    QWORD PTR [rax+0x18],rdi
   140004ccb:	mov    QWORD PTR [rax+0x20],r14
   140004ccf:	push   r15
   140004cd1:	sub    rsp,0x30
   140004cd5:	and    QWORD PTR [rcx],0x0
   140004cd9:	lea    rdx,[rip+0x4e08]        # 0x140009ae8
   140004ce0:	mov    r15,rcx
   140004ce3:	xor    ebx,ebx
   140004ce5:	lea    ecx,[rbx+0x18]
   140004ce8:	call   0x1400056f8
   140004ced:	mov    rdi,rax
   140004cf0:	test   rax,rax
   140004cf3:	jne    0x140004cff
   140004cf5:	mov    esi,0x8007000e
   140004cfa:	jmp    0x140004db6
   140004cff:	mov    DWORD PTR [rax+0xc],0x1
   140004d06:	lea    rax,[rip+0x536b]        # 0x14000a078
   140004d0d:	mov    QWORD PTR [rdi],rax
   140004d10:	mov    rax,QWORD PTR [rip+0x79e1]        # 0x14000c6f8
   140004d17:	test   rax,rax
   140004d1a:	je     0x140004d3b
   140004d1c:	mov    rax,QWORD PTR [rax]
   140004d1f:	lea    rcx,[rip+0xffffffffffffea4a]        # 0x140003770
   140004d26:	cmp    QWORD PTR [rax+0x8],rcx
   140004d2a:	jne    0x140004d34
   140004d2c:	call   QWORD PTR [rip+0x3356]        # 0x140008088
   140004d32:	jmp    0x140004d3b
   140004d34:	lock inc DWORD PTR [rip+0x79c5]        # 0x14000c700
   140004d3b:	lea    rax,[rip+0x53de]        # 0x14000a120
   140004d42:	mov    QWORD PTR [rdi],rax
   140004d45:	lea    rsi,[rdi+0x10]
   140004d49:	and    QWORD PTR [rdi+0x10],rbx
   140004d4d:	mov    rbx,rdi
   140004d50:	mov    r14,QWORD PTR [rsi]
   140004d53:	test   r14,r14
   140004d56:	je     0x140004d71
   140004d58:	and    QWORD PTR [rsi],0x0
   140004d5c:	mov    rax,QWORD PTR [r14]
   140004d5f:	mov    rdi,QWORD PTR [rax+0x10]
   140004d63:	mov    rcx,rdi
   140004d66:	call   QWORD PTR [rip+0x35a4]        # 0x140008310
   140004d6c:	mov    rcx,r14
   140004d6f:	call   rdi
   140004d71:	xor    edx,edx
   140004d73:	mov    QWORD PTR [rsp+0x20],rsi
   140004d78:	lea    r9,[rip+0x55f9]        # 0x14000a378
   140004d7f:	lea    rcx,[rip+0x5642]        # 0x14000a3c8
   140004d86:	lea    r8d,[rdx+0x1]
   140004d8a:	call   QWORD PTR [rip+0x3330]        # 0x1400080c0
   140004d90:	mov    esi,eax
   140004d92:	test   eax,eax
   140004d94:	js     0x140004db6
   140004d96:	mov    rax,QWORD PTR [rbx]
   140004d99:	mov    rdi,QWORD PTR [rax]
   140004d9c:	mov    rcx,rdi
   140004d9f:	call   QWORD PTR [rip+0x356b]        # 0x140008310
   140004da5:	mov    r8,r15
   140004da8:	lea    rdx,[rip+0x4c99]        # 0x140009a48
   140004daf:	mov    rcx,rbx
   140004db2:	call   rdi
   140004db4:	mov    esi,eax
   140004db6:	test   rbx,rbx
   140004db9:	je     0x140004dd0
   140004dbb:	mov    rcx,QWORD PTR [rbx]
   140004dbe:	mov    rdi,QWORD PTR [rcx+0x10]
   140004dc2:	mov    rcx,rdi
   140004dc5:	call   QWORD PTR [rip+0x3545]        # 0x140008310
   140004dcb:	mov    rcx,rbx
   140004dce:	call   rdi
   140004dd0:	mov    rbx,QWORD PTR [rsp+0x40]
   140004dd5:	mov    eax,esi
   140004dd7:	mov    rsi,QWORD PTR [rsp+0x48]
   140004ddc:	mov    rdi,QWORD PTR [rsp+0x50]
   140004de1:	mov    r14,QWORD PTR [rsp+0x58]
   140004de6:	add    rsp,0x30
   140004dea:	pop    r15
   140004dec:	ret    
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	int3   
   140004df1:	int3   
   140004df2:	int3   
   140004df3:	int3   
   140004df4:	int3   
   140004df5:	int3   
   140004df6:	int3   
   140004df7:	int3   
   140004df8:	int3   
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	mov    QWORD PTR [rsp+0x8],rbx
   140004e05:	mov    QWORD PTR [rsp+0x10],rbp
   140004e0a:	mov    QWORD PTR [rsp+0x18],rsi
   140004e0f:	push   rdi
   140004e10:	sub    rsp,0x20
   140004e14:	mov    rdi,QWORD PTR [rcx+0x10]
   140004e18:	mov    esi,r8d
   140004e1b:	mov    rbp,rdx
   140004e1e:	mov    rax,QWORD PTR [rdi]
   140004e21:	mov    rbx,QWORD PTR [rax+0x18]
   140004e25:	mov    rcx,rbx
   140004e28:	call   QWORD PTR [rip+0x34e2]        # 0x140008310
   140004e2e:	mov    r8d,esi
   140004e31:	mov    rdx,rbp
   140004e34:	mov    rcx,rdi
   140004e37:	mov    rax,rbx
   140004e3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e3f:	mov    rbp,QWORD PTR [rsp+0x38]
   140004e44:	mov    rsi,QWORD PTR [rsp+0x40]
   140004e49:	add    rsp,0x20
   140004e4d:	pop    rdi
   140004e4e:	rex.W jmp rax
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	int3   
   140004e55:	int3   
   140004e56:	int3   
   140004e57:	int3   
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	mov    QWORD PTR [rsp+0x8],rbx
   140004e65:	mov    QWORD PTR [rsp+0x10],rsi
   140004e6a:	push   rdi
   140004e6b:	sub    rsp,0x20
   140004e6f:	xor    edi,edi
   140004e71:	mov    rsi,rcx
   140004e74:	mov    QWORD PTR [r8],rdi
   140004e77:	cmp    DWORD PTR [rdx],edi
   140004e79:	jne    0x140004e9c
   140004e7b:	mov    eax,DWORD PTR [rip+0x4bcb]        # 0x140009a4c
   140004e81:	cmp    DWORD PTR [rdx+0x4],eax
   140004e84:	jne    0x140004e9c
   140004e86:	mov    eax,DWORD PTR [rip+0x4bc4]        # 0x140009a50
   140004e8c:	cmp    DWORD PTR [rdx+0x8],eax
   140004e8f:	jne    0x140004e9c
   140004e91:	mov    eax,DWORD PTR [rip+0x4bbd]        # 0x140009a54
   140004e97:	cmp    DWORD PTR [rdx+0xc],eax
   140004e9a:	je     0x140004ec5
   140004e9c:	cmp    DWORD PTR [rdx],0x208a214e
   140004ea2:	jne    0x140004edf
   140004ea4:	mov    eax,DWORD PTR [rip+0x54f2]        # 0x14000a39c
   140004eaa:	cmp    DWORD PTR [rdx+0x4],eax
   140004ead:	jne    0x140004edf
   140004eaf:	mov    eax,DWORD PTR [rip+0x54eb]        # 0x14000a3a0
   140004eb5:	cmp    DWORD PTR [rdx+0x8],eax
   140004eb8:	jne    0x140004edf
   140004eba:	mov    eax,DWORD PTR [rip+0x54e4]        # 0x14000a3a4
   140004ec0:	cmp    DWORD PTR [rdx+0xc],eax
   140004ec3:	jne    0x140004edf
   140004ec5:	mov    QWORD PTR [r8],rcx
   140004ec8:	mov    rax,QWORD PTR [rcx]
   140004ecb:	mov    rbx,QWORD PTR [rax+0x8]
   140004ecf:	mov    rcx,rbx
   140004ed2:	call   QWORD PTR [rip+0x3438]        # 0x140008310
   140004ed8:	mov    rcx,rsi
   140004edb:	call   rbx
   140004edd:	jmp    0x140004ee4
   140004edf:	mov    edi,0x80004002
   140004ee4:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ee9:	mov    eax,edi
   140004eeb:	mov    rsi,QWORD PTR [rsp+0x38]
   140004ef0:	add    rsp,0x20
   140004ef4:	pop    rdi
   140004ef5:	ret    
   140004ef6:	int3   
   140004ef7:	int3   
   140004ef8:	int3   
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	mov    rax,rsp
   140004f03:	mov    QWORD PTR [rax+0x8],rbx
   140004f07:	mov    QWORD PTR [rax+0x10],rbp
   140004f0b:	mov    QWORD PTR [rax+0x18],rsi
   140004f0f:	mov    QWORD PTR [rax+0x20],rdi
   140004f13:	push   r14
   140004f15:	sub    rsp,0x30
   140004f19:	and    QWORD PTR [rax-0x18],0x0
   140004f1e:	lea    rdx,[rip+0x4bc3]        # 0x140009ae8
   140004f25:	mov    r14,rcx
   140004f28:	mov    rsi,r9
   140004f2b:	mov    ecx,0x18
   140004f30:	mov    rbp,r8
   140004f33:	call   0x1400056f8
   140004f38:	mov    rbx,rax
   140004f3b:	test   rax,rax
   140004f3e:	je     0x140005009
   140004f44:	lea    rdi,[rip+0x524d]        # 0x14000a198
   140004f4b:	mov    DWORD PTR [rax+0xc],0x1
   140004f52:	mov    rcx,QWORD PTR [rdi+0x8]
   140004f56:	mov    DWORD PTR [rax+0x14],0x4
   140004f5d:	mov    QWORD PTR [rax],rdi
   140004f60:	call   QWORD PTR [rip+0x33aa]        # 0x140008310
   140004f66:	mov    rcx,rbx
   140004f69:	call   QWORD PTR [rdi+0x8]
   140004f6c:	mov    rax,QWORD PTR [rbx]
   140004f6f:	mov    QWORD PTR [rsp+0x20],rbx
   140004f74:	mov    rdi,QWORD PTR [rax+0x10]
   140004f78:	mov    rcx,rdi
   140004f7b:	call   QWORD PTR [rip+0x338f]        # 0x140008310
   140004f81:	mov    rcx,rbx
   140004f84:	call   rdi
   140004f86:	mov    eax,DWORD PTR [r14]
   140004f89:	mov    DWORD PTR [rbx+0x14],eax
   140004f8c:	mov    rax,QWORD PTR [rbx]
   140004f8f:	mov    rdi,QWORD PTR [rax]
   140004f92:	mov    rcx,rdi
   140004f95:	call   QWORD PTR [rip+0x3375]        # 0x140008310
   140004f9b:	mov    r8,rsi
   140004f9e:	mov    rdx,rbp
   140004fa1:	mov    rcx,rbx
   140004fa4:	call   rdi
   140004fa6:	test   BYTE PTR [r14],0x1
   140004faa:	mov    esi,eax
   140004fac:	je     0x140004fed
   140004fae:	test   eax,eax
   140004fb0:	js     0x140004fe9
   140004fb2:	test   BYTE PTR [r14],0x4
   140004fb6:	je     0x140004fe5
   140004fb8:	mov    rax,QWORD PTR [rip+0x7739]        # 0x14000c6f8
   140004fbf:	mov    rcx,QWORD PTR [rax]
   140004fc2:	lea    rax,[rip+0xffffffffffffe7a7]        # 0x140003770
   140004fc9:	cmp    QWORD PTR [rcx+0x8],rax
   140004fcd:	jne    0x140004fd7
   140004fcf:	call   QWORD PTR [rip+0x30b3]        # 0x140008088
   140004fd5:	jmp    0x140004fed
   140004fd7:	lock inc DWORD PTR [rip+0x7722]        # 0x14000c700
   140004fde:	mov    rbx,QWORD PTR [rsp+0x20]
   140004fe3:	jmp    0x140004fed
   140004fe5:	xor    ebx,ebx
   140004fe7:	jmp    0x140004fed
   140004fe9:	and    DWORD PTR [rbx+0x14],0xfffffffa
   140004fed:	test   rbx,rbx
   140004ff0:	je     0x14000500e
   140004ff2:	mov    rax,QWORD PTR [rbx]
   140004ff5:	mov    rdi,QWORD PTR [rax+0x10]
   140004ff9:	mov    rcx,rdi
   140004ffc:	call   QWORD PTR [rip+0x330e]        # 0x140008310
   140005002:	mov    rcx,rbx
   140005005:	call   rdi
   140005007:	jmp    0x14000500e
   140005009:	mov    esi,0x8007000e
   14000500e:	mov    rbx,QWORD PTR [rsp+0x40]
   140005013:	mov    eax,esi
   140005015:	mov    rsi,QWORD PTR [rsp+0x50]
   14000501a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000501f:	mov    rdi,QWORD PTR [rsp+0x58]
   140005024:	add    rsp,0x30
   140005028:	pop    r14
   14000502a:	ret    
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	int3   
   140005031:	int3   
   140005032:	int3   
   140005033:	int3   
   140005034:	int3   
   140005035:	int3   
   140005036:	int3   
   140005037:	int3   
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	mov    QWORD PTR [rsp+0x8],rbx
   140005045:	mov    QWORD PTR [rsp+0x18],rbp
   14000504a:	push   rsi
   14000504b:	push   rdi
   14000504c:	push   r14
   14000504e:	sub    rsp,0x20
   140005052:	and    QWORD PTR [r9],0x0
   140005056:	mov    r14,r9
   140005059:	mov    rbp,r8
   14000505c:	test   rdx,rdx
   14000505f:	je     0x140005074
   140005061:	mov    ebx,0x80040110
   140005066:	xor    edx,edx
   140005068:	mov    ecx,ebx
   14000506a:	call   QWORD PTR [rip+0x3130]        # 0x1400081a0
   140005070:	mov    eax,ebx
   140005072:	jmp    0x1400050d2
   140005074:	and    QWORD PTR [rsp+0x48],0x0
   14000507a:	lea    rcx,[rsp+0x48]
   14000507f:	call   0x1400050ec
   140005084:	mov    esi,eax
   140005086:	test   eax,eax
   140005088:	js     0x1400050ab
   14000508a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000508f:	mov    rax,QWORD PTR [rbx]
   140005092:	mov    rdi,QWORD PTR [rax]
   140005095:	mov    rcx,rdi
   140005098:	call   QWORD PTR [rip+0x3272]        # 0x140008310
   14000509e:	mov    r8,r14
   1400050a1:	mov    rdx,rbp
   1400050a4:	mov    rcx,rbx
   1400050a7:	call   rdi
   1400050a9:	mov    esi,eax
   1400050ab:	mov    rdi,QWORD PTR [rsp+0x48]
   1400050b0:	test   rdi,rdi
   1400050b3:	je     0x1400050d0
   1400050b5:	and    QWORD PTR [rsp+0x48],0x0
   1400050bb:	mov    rdx,QWORD PTR [rdi]
   1400050be:	mov    rbx,QWORD PTR [rdx+0x10]
   1400050c2:	mov    rcx,rbx
   1400050c5:	call   QWORD PTR [rip+0x3245]        # 0x140008310
   1400050cb:	mov    rcx,rdi
   1400050ce:	call   rbx
   1400050d0:	mov    eax,esi
   1400050d2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400050d7:	mov    rbp,QWORD PTR [rsp+0x50]
   1400050dc:	add    rsp,0x20
   1400050e0:	pop    r14
   1400050e2:	pop    rdi
   1400050e3:	pop    rsi
   1400050e4:	ret    
   1400050e5:	int3   
   1400050e6:	int3   
   1400050e7:	int3   
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	mov    rax,rsp
   1400050ef:	mov    QWORD PTR [rax+0x8],rbx
   1400050f3:	mov    QWORD PTR [rax+0x10],rsi
   1400050f7:	mov    QWORD PTR [rax+0x18],rdi
   1400050fb:	mov    QWORD PTR [rax+0x20],r14
   1400050ff:	push   r15
   140005101:	sub    rsp,0x30
   140005105:	and    QWORD PTR [rcx],0x0
   140005109:	lea    rdx,[rip+0x49d8]        # 0x140009ae8
   140005110:	mov    r15,rcx
   140005113:	xor    ebx,ebx
   140005115:	lea    ecx,[rbx+0x18]
   140005118:	call   0x1400056f8
   14000511d:	mov    rdi,rax
   140005120:	test   rax,rax
   140005123:	jne    0x14000512f
   140005125:	mov    esi,0x8007000e
   14000512a:	jmp    0x1400051e6
   14000512f:	mov    DWORD PTR [rax+0xc],0x1
   140005136:	lea    rax,[rip+0x50b3]        # 0x14000a1f0
   14000513d:	mov    QWORD PTR [rdi],rax
   140005140:	mov    rax,QWORD PTR [rip+0x75b1]        # 0x14000c6f8
   140005147:	test   rax,rax
   14000514a:	je     0x14000516b
   14000514c:	mov    rax,QWORD PTR [rax]
   14000514f:	lea    rcx,[rip+0xffffffffffffe61a]        # 0x140003770
   140005156:	cmp    QWORD PTR [rax+0x8],rcx
   14000515a:	jne    0x140005164
   14000515c:	call   QWORD PTR [rip+0x2f26]        # 0x140008088
   140005162:	jmp    0x14000516b
   140005164:	lock inc DWORD PTR [rip+0x7595]        # 0x14000c700
   14000516b:	lea    rax,[rip+0x5056]        # 0x14000a1c8
   140005172:	mov    QWORD PTR [rdi],rax
   140005175:	lea    rsi,[rdi+0x10]
   140005179:	and    QWORD PTR [rdi+0x10],rbx
   14000517d:	mov    rbx,rdi
   140005180:	mov    r14,QWORD PTR [rsi]
   140005183:	test   r14,r14
   140005186:	je     0x1400051a1
   140005188:	and    QWORD PTR [rsi],0x0
   14000518c:	mov    rax,QWORD PTR [r14]
   14000518f:	mov    rdi,QWORD PTR [rax+0x10]
   140005193:	mov    rcx,rdi
   140005196:	call   QWORD PTR [rip+0x3174]        # 0x140008310
   14000519c:	mov    rcx,r14
   14000519f:	call   rdi
   1400051a1:	xor    edx,edx
   1400051a3:	mov    QWORD PTR [rsp+0x20],rsi
   1400051a8:	lea    r9,[rip+0x51e9]        # 0x14000a398
   1400051af:	lea    rcx,[rip+0x51d2]        # 0x14000a388
   1400051b6:	lea    r8d,[rdx+0x1]
   1400051ba:	call   QWORD PTR [rip+0x2f00]        # 0x1400080c0
   1400051c0:	mov    esi,eax
   1400051c2:	test   eax,eax
   1400051c4:	js     0x1400051e6
   1400051c6:	mov    rax,QWORD PTR [rbx]
   1400051c9:	mov    rdi,QWORD PTR [rax]
   1400051cc:	mov    rcx,rdi
   1400051cf:	call   QWORD PTR [rip+0x313b]        # 0x140008310
   1400051d5:	mov    r8,r15
   1400051d8:	lea    rdx,[rip+0x4869]        # 0x140009a48
   1400051df:	mov    rcx,rbx
   1400051e2:	call   rdi
   1400051e4:	mov    esi,eax
   1400051e6:	test   rbx,rbx
   1400051e9:	je     0x140005200
   1400051eb:	mov    rcx,QWORD PTR [rbx]
   1400051ee:	mov    rdi,QWORD PTR [rcx+0x10]
   1400051f2:	mov    rcx,rdi
   1400051f5:	call   QWORD PTR [rip+0x3115]        # 0x140008310
   1400051fb:	mov    rcx,rbx
   1400051fe:	call   rdi
   140005200:	mov    rbx,QWORD PTR [rsp+0x40]
   140005205:	mov    eax,esi
   140005207:	mov    rsi,QWORD PTR [rsp+0x48]
   14000520c:	mov    rdi,QWORD PTR [rsp+0x50]
   140005211:	mov    r14,QWORD PTR [rsp+0x58]
   140005216:	add    rsp,0x30
   14000521a:	pop    r15
   14000521c:	ret    
   14000521d:	int3   
   14000521e:	int3   
   14000521f:	int3   
   140005220:	int3   
   140005221:	int3   
   140005222:	int3   
   140005223:	int3   
   140005224:	mov    rax,rsp
   140005227:	mov    QWORD PTR [rax+0x8],rbx
   14000522b:	mov    QWORD PTR [rax+0x10],rsi
   14000522f:	push   rdi
   140005230:	sub    rsp,0x20
   140005234:	and    QWORD PTR [r8],0x0
   140005238:	lea    rdx,[rax+0x18]
   14000523c:	and    QWORD PTR [rax+0x18],0x0
   140005241:	lea    rcx,[rip+0x5160]        # 0x14000a3a8
   140005248:	mov    rsi,r8
   14000524b:	call   QWORD PTR [rip+0x2e77]        # 0x1400080c8
   140005251:	mov    edi,eax
   140005253:	test   eax,eax
   140005255:	js     0x14000527d
   140005257:	mov    rbx,QWORD PTR [rsp+0x40]
   14000525c:	mov    rax,QWORD PTR [rbx]
   14000525f:	mov    rdi,QWORD PTR [rax+0x18]
   140005263:	mov    rcx,rdi
   140005266:	call   QWORD PTR [rip+0x30a4]        # 0x140008310
   14000526c:	mov    r8,rsi
   14000526f:	mov    edx,0x1000
   140005274:	mov    rcx,rbx
   140005277:	call   rdi
   140005279:	mov    edi,eax
   14000527b:	jmp    0x14000528f
   14000527d:	cmp    eax,0x80010117
   140005282:	jne    0x14000528f
   140005284:	call   QWORD PTR [rip+0x2e86]        # 0x140008110
   14000528a:	mov    QWORD PTR [rsi],rax
   14000528d:	xor    edi,edi
   14000528f:	mov    rsi,QWORD PTR [rsp+0x40]
   140005294:	test   rsi,rsi
   140005297:	je     0x1400052b4
   140005299:	and    QWORD PTR [rsp+0x40],0x0
   14000529f:	mov    rax,QWORD PTR [rsi]
   1400052a2:	mov    rbx,QWORD PTR [rax+0x10]
   1400052a6:	mov    rcx,rbx
   1400052a9:	call   QWORD PTR [rip+0x3061]        # 0x140008310
   1400052af:	mov    rcx,rsi
   1400052b2:	call   rbx
   1400052b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052b9:	mov    eax,edi
   1400052bb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400052c0:	add    rsp,0x20
   1400052c4:	pop    rdi
   1400052c5:	ret    
   1400052c6:	int3   
   1400052c7:	int3   
   1400052c8:	int3   
   1400052c9:	int3   
   1400052ca:	int3   
   1400052cb:	int3   
   1400052cc:	int3   
   1400052cd:	int3   
   1400052ce:	int3   
   1400052cf:	int3   
   1400052d0:	sub    rsp,0x28
   1400052d4:	mov    eax,0x5a4d
   1400052d9:	cmp    WORD PTR [rip+0xffffffffffffad20],ax        # 0x140000000
   1400052e0:	je     0x1400052e6
   1400052e2:	xor    eax,eax
   1400052e4:	jmp    0x140005335
   1400052e6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffad4f]        # 0x14000003c
   1400052ed:	lea    rax,[rip+0xffffffffffffad0c]        # 0x140000000
   1400052f4:	add    rcx,rax
   1400052f7:	cmp    DWORD PTR [rcx],0x4550
   1400052fd:	jne    0x1400052e2
   1400052ff:	movzx  eax,WORD PTR [rcx+0x18]
   140005303:	cmp    eax,0x10b
   140005308:	je     0x140005324
   14000530a:	cmp    eax,0x20b
   14000530f:	jne    0x1400052e2
   140005311:	xor    eax,eax
   140005313:	cmp    DWORD PTR [rcx+0x84],0xe
   14000531a:	jbe    0x140005335
   14000531c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005322:	jmp    0x140005332
   140005324:	xor    eax,eax
   140005326:	cmp    DWORD PTR [rcx+0x74],0xe
   14000532a:	jbe    0x140005335
   14000532c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005332:	setne  al
   140005335:	mov    ecx,0x2
   14000533a:	mov    DWORD PTR [rip+0x6de0],eax        # 0x14000c120
   140005340:	call   0x1400058b8
   140005345:	mov    ecx,eax
   140005347:	call   QWORD PTR [rip+0x2f0b]        # 0x140008258
   14000534d:	mov    rcx,QWORD PTR [rip+0x2f2c]        # 0x140008280
   140005354:	or     rax,0xffffffffffffffff
   140005358:	mov    QWORD PTR [rip+0x7449],rax        # 0x14000c7a8
   14000535f:	mov    QWORD PTR [rip+0x744a],rax        # 0x14000c7b0
   140005366:	mov    eax,DWORD PTR [rip+0x6dc8]        # 0x14000c134
   14000536c:	mov    DWORD PTR [rcx],eax
   14000536e:	mov    rcx,QWORD PTR [rip+0x2e9b]        # 0x140008210
   140005375:	mov    eax,DWORD PTR [rip+0x6dad]        # 0x14000c128
   14000537b:	mov    DWORD PTR [rcx],eax
   14000537d:	call   0x1400037d0
   140005382:	cmp    DWORD PTR [rip+0x6c77],0x0        # 0x14000c000
   140005389:	jne    0x140005398
   14000538b:	lea    rcx,[rip+0xffffffffffffe43e]        # 0x1400037d0
   140005392:	call   QWORD PTR [rip+0x2ef0]        # 0x140008288
   140005398:	xor    eax,eax
   14000539a:	add    rsp,0x28
   14000539e:	ret    
   14000539f:	int3   
   1400053a0:	int3   
   1400053a1:	int3   
   1400053a2:	int3   
   1400053a3:	int3   
   1400053a4:	int3   
   1400053a5:	int3   
   1400053a6:	int3   
   1400053a7:	int3   
   1400053a8:	int3   
   1400053a9:	int3   
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	int3   
   1400053ad:	int3   
   1400053ae:	int3   
   1400053af:	int3   
   1400053b0:	sub    rsp,0x38
   1400053b4:	mov    eax,DWORD PTR [rip+0x6d76]        # 0x14000c130
   1400053ba:	lea    r8,[rip+0x6d57]        # 0x14000c118
   1400053c1:	mov    r9d,DWORD PTR [rip+0x6d64]        # 0x14000c12c
   1400053c8:	lea    rdx,[rip+0x6d41]        # 0x14000c110
   1400053cf:	mov    DWORD PTR [rip+0x6d4f],eax        # 0x14000c124
   1400053d5:	lea    rcx,[rip+0x6d2c]        # 0x14000c108
   1400053dc:	lea    rax,[rip+0x6d41]        # 0x14000c124
   1400053e3:	mov    QWORD PTR [rsp+0x20],rax
   1400053e8:	call   QWORD PTR [rip+0x2e72]        # 0x140008260
   1400053ee:	mov    DWORD PTR [rip+0x6d18],eax        # 0x14000c10c
   1400053f4:	add    rsp,0x38
   1400053f8:	ret    
   1400053f9:	int3   
   1400053fa:	int3   
   1400053fb:	int3   
   1400053fc:	int3   
   1400053fd:	int3   
   1400053fe:	int3   
   1400053ff:	int3   
   140005400:	mov    QWORD PTR [rsp+0x8],rbx
   140005405:	mov    QWORD PTR [rsp+0x10],rsi
   14000540a:	mov    QWORD PTR [rsp+0x18],rdi
   14000540f:	push   r12
   140005411:	push   r14
   140005413:	push   r15
   140005415:	sub    rsp,0xb0
   14000541c:	xor    r15d,r15d
   14000541f:	mov    DWORD PTR [rsp+0x20],r15d
   140005424:	lea    rcx,[rsp+0x40]
   140005429:	call   QWORD PTR [rip+0x2d01]        # 0x140008130
   14000542f:	nop
   140005430:	mov    rax,QWORD PTR gs:0x30
   140005439:	mov    rbx,QWORD PTR [rax+0x8]
   14000543d:	mov    r14d,r15d
   140005440:	xor    eax,eax
   140005442:	lock cmpxchg QWORD PTR [rip+0x734d],rbx        # 0x14000c798
   14000544b:	je     0x140005469
   14000544d:	cmp    rax,rbx
   140005450:	jne    0x14000545c
   140005452:	mov    edi,0x1
   140005457:	mov    r14d,edi
   14000545a:	jmp    0x14000546e
   14000545c:	mov    ecx,0x3e8
   140005461:	call   QWORD PTR [rip+0x2d09]        # 0x140008170
   140005467:	jmp    0x140005440
   140005469:	mov    edi,0x1
   14000546e:	mov    eax,DWORD PTR [rip+0x732c]        # 0x14000c7a0
   140005474:	cmp    eax,edi
   140005476:	jne    0x140005486
   140005478:	mov    esi,0x1f
   14000547d:	mov    ecx,esi
   14000547f:	call   0x140005904
   140005484:	jmp    0x1400054f7
   140005486:	mov    eax,DWORD PTR [rip+0x7314]        # 0x14000c7a0
   14000548c:	test   eax,eax
   14000548e:	jne    0x1400054ec
   140005490:	mov    DWORD PTR [rip+0x730a],edi        # 0x14000c7a0
   140005496:	lea    r12,[rip+0x2ed3]        # 0x140008370
   14000549d:	lea    rbx,[rip+0x2eb4]        # 0x140008358
   1400054a4:	mov    QWORD PTR [rsp+0x30],rbx
   1400054a9:	mov    eax,r15d
   1400054ac:	mov    DWORD PTR [rsp+0x24],eax
   1400054b0:	cmp    rbx,r12
   1400054b3:	jae    0x1400054de
   1400054b5:	test   eax,eax
   1400054b7:	jne    0x1400054e2
   1400054b9:	mov    rsi,QWORD PTR [rbx]
   1400054bc:	test   rsi,rsi
   1400054bf:	je     0x1400054d3
   1400054c1:	mov    rcx,rsi
   1400054c4:	mov    rax,QWORD PTR [rip+0x2e45]        # 0x140008310
   1400054cb:	call   rax
   1400054cd:	call   rsi
   1400054cf:	mov    DWORD PTR [rsp+0x24],eax
   1400054d3:	add    rbx,0x8
   1400054d7:	mov    QWORD PTR [rsp+0x30],rbx
   1400054dc:	jmp    0x1400054b0
   1400054de:	test   eax,eax
   1400054e0:	je     0x1400054f2
   1400054e2:	mov    eax,0xff
   1400054e7:	jmp    0x140005653
   1400054ec:	mov    DWORD PTR [rip+0x6c12],edi        # 0x14000c104
   1400054f2:	mov    esi,0x1f
   1400054f7:	mov    eax,DWORD PTR [rip+0x72a3]        # 0x14000c7a0
   1400054fd:	cmp    eax,edi
   1400054ff:	jne    0x14000551e
   140005501:	lea    rdx,[rip+0x2e48]        # 0x140008350
   140005508:	lea    rcx,[rip+0x2e11]        # 0x140008320
   14000550f:	call   0x140005aca
   140005514:	mov    DWORD PTR [rip+0x7282],0x2        # 0x14000c7a0
   14000551e:	test   r14d,r14d
   140005521:	jne    0x14000552d
   140005523:	mov    rax,r15
   140005526:	xchg   QWORD PTR [rip+0x726b],rax        # 0x14000c798
   14000552d:	cmp    QWORD PTR [rip+0x7284],r15        # 0x14000c7b8
   140005534:	je     0x140005564
   140005536:	lea    rcx,[rip+0x727b]        # 0x14000c7b8
   14000553d:	call   0x140005960
   140005542:	test   eax,eax
   140005544:	je     0x140005564
   140005546:	mov    rbx,QWORD PTR [rip+0x726b]        # 0x14000c7b8
   14000554d:	mov    rcx,rbx
   140005550:	mov    rax,QWORD PTR [rip+0x2db9]        # 0x140008310
   140005557:	call   rax
   140005559:	xor    r8d,r8d
   14000555c:	lea    edx,[r8+0x2]
   140005560:	xor    ecx,ecx
   140005562:	call   rbx
   140005564:	mov    rax,QWORD PTR [rip+0x2c9d]        # 0x140008208
   14000556b:	mov    rdx,QWORD PTR [rax]
   14000556e:	test   rdx,rdx
   140005571:	jne    0x14000557d
   140005573:	mov    eax,0xff
   140005578:	jmp    0x140005653
   14000557d:	mov    QWORD PTR [rsp+0x28],rdx
   140005582:	mov    ecx,DWORD PTR [rsp+0x20]
   140005586:	cmp    WORD PTR [rdx],0x20
   14000558a:	ja     0x140005604
   14000558c:	cmp    WORD PTR [rdx],r15w
   140005590:	je     0x140005596
   140005592:	test   ecx,ecx
   140005594:	jne    0x140005604
   140005596:	movzx  eax,WORD PTR [rdx]
   140005599:	sub    ax,di
   14000559c:	cmp    ax,si
   14000559f:	ja     0x1400055ac
   1400055a1:	add    rdx,0x2
   1400055a5:	mov    QWORD PTR [rsp+0x28],rdx
   1400055aa:	jmp    0x140005596
   1400055ac:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400055b0:	movzx  eax,WORD PTR [rsp+0x80]
   1400055b8:	mov    r9d,0xa
   1400055be:	and    cl,dil
   1400055c1:	cmovne r9d,eax
   1400055c5:	mov    r8,rdx
   1400055c8:	xor    edx,edx
   1400055ca:	lea    rcx,[rip+0xffffffffffffaa2f]        # 0x140000000
   1400055d1:	call   0x1400033a0
   1400055d6:	mov    DWORD PTR [rip+0x6b24],eax        # 0x14000c100
   1400055dc:	cmp    DWORD PTR [rip+0x6b3d],r15d        # 0x14000c120
   1400055e3:	jne    0x1400055ed
   1400055e5:	mov    ecx,eax
   1400055e7:	call   QWORD PTR [rip+0x2c63]        # 0x140008250
   1400055ed:	cmp    DWORD PTR [rip+0x6b10],r15d        # 0x14000c104
   1400055f4:	jne    0x140005602
   1400055f6:	call   QWORD PTR [rip+0x2c1c]        # 0x140008218
   1400055fc:	mov    eax,DWORD PTR [rip+0x6afe]        # 0x14000c100
   140005602:	jmp    0x140005653
   140005604:	cmp    WORD PTR [rdx],0x22
   140005608:	jne    0x140005618
   14000560a:	mov    eax,r15d
   14000560d:	test   ecx,ecx
   14000560f:	sete   al
   140005612:	mov    ecx,eax
   140005614:	mov    DWORD PTR [rsp+0x20],eax
   140005618:	add    rdx,0x2
   14000561c:	mov    QWORD PTR [rsp+0x28],rdx
   140005621:	jmp    0x140005586
   140005626:	mov    DWORD PTR [rip+0x6ad4],eax        # 0x14000c100
   14000562c:	cmp    DWORD PTR [rip+0x6aed],0x0        # 0x14000c120
   140005633:	jne    0x14000563e
   140005635:	mov    ecx,eax
   140005637:	call   QWORD PTR [rip+0x2be3]        # 0x140008220
   14000563d:	int3   
   14000563e:	cmp    DWORD PTR [rip+0x6abf],0x0        # 0x14000c104
   140005645:	jne    0x140005653
   140005647:	call   QWORD PTR [rip+0x2bcb]        # 0x140008218
   14000564d:	mov    eax,DWORD PTR [rip+0x6aad]        # 0x14000c100
   140005653:	lea    r11,[rsp+0xb0]
   14000565b:	mov    rbx,QWORD PTR [r11+0x20]
   14000565f:	mov    rsi,QWORD PTR [r11+0x28]
   140005663:	mov    rdi,QWORD PTR [r11+0x30]
   140005667:	mov    rsp,r11
   14000566a:	pop    r15
   14000566c:	pop    r14
   14000566e:	pop    r12
   140005670:	ret    
   140005671:	int3   
   140005672:	int3   
   140005673:	int3   
   140005674:	int3   
   140005675:	int3   
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	sub    rsp,0x28
   140005684:	call   0x1400059f4
   140005689:	add    rsp,0x28
   14000568d:	jmp    0x140005400
   140005692:	int3   
   140005693:	int3   
   140005694:	int3   
   140005695:	int3   
   140005696:	int3   
   140005697:	int3   
   140005698:	int3   
   140005699:	int3   
   14000569a:	int3   
   14000569b:	int3   
   14000569c:	int3   
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	int3   
   1400056a1:	int3   
   1400056a2:	int3   
   1400056a3:	int3   
   1400056a4:	int3   
   1400056a5:	int3   
   1400056a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400056b0:	cmp    rcx,QWORD PTR [rip+0x6951]        # 0x14000c008
   1400056b7:	jne    0x1400056c9
   1400056b9:	rol    rcx,0x10
   1400056bd:	test   cx,0xffff
   1400056c2:	jne    0x1400056c5
   1400056c4:	ret    
   1400056c5:	ror    rcx,0x10
   1400056c9:	jmp    0x140005b20
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	int3   
   1400056d1:	int3   
   1400056d2:	int3   
   1400056d3:	int3   
   1400056d4:	int3   
   1400056d5:	int3   
   1400056d6:	int3   
   1400056d7:	int3   
   1400056d8:	int3   
   1400056d9:	int3   
   1400056da:	int3   
   1400056db:	int3   
   1400056dc:	int3   
   1400056dd:	int3   
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	jmp    QWORD PTR [rip+0x2bfa]        # 0x1400082e0
   1400056e6:	int3   
   1400056e7:	int3   
   1400056e8:	int3   
   1400056e9:	int3   
   1400056ea:	int3   
   1400056eb:	int3   
   1400056ec:	jmp    QWORD PTR [rip+0x2be6]        # 0x1400082d8
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	sub    rsp,0x38
   1400056fc:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005705:	call   0x140005cd8
   14000570a:	nop
   14000570b:	jmp    0x140005712
   14000570d:	mov    rax,QWORD PTR [rsp+0x50]
   140005712:	add    rsp,0x38
   140005716:	ret    
   140005717:	int3   
   140005718:	int3   
   140005719:	int3   
   14000571a:	int3   
   14000571b:	int3   
   14000571c:	int3   
   14000571d:	int3   
   14000571e:	int3   
   14000571f:	int3   
   140005720:	jmp    0x1400056f8
   140005725:	int3   
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	mov    QWORD PTR [rsp+0x8],rbx
   140005731:	push   rdi
   140005732:	sub    rsp,0x20
   140005736:	mov    rdi,rcx
   140005739:	mov    rax,QWORD PTR [rip+0x7070]        # 0x14000c7b0
   140005740:	mov    QWORD PTR [rsp+0x38],rax
   140005745:	cmp    rax,0xffffffffffffffff
   140005749:	jne    0x140005762
   14000574b:	mov    rbx,QWORD PTR [rip+0x2b26]        # 0x140008278
   140005752:	mov    rcx,rbx
   140005755:	call   QWORD PTR [rip+0x2bb5]        # 0x140008310
   14000575b:	mov    rcx,rdi
   14000575e:	call   rbx
   140005760:	jmp    0x1400057bf
   140005762:	mov    ecx,0x8
   140005767:	call   0x140005ca4
   14000576c:	nop
   14000576d:	mov    rax,QWORD PTR [rip+0x703c]        # 0x14000c7b0
   140005774:	mov    QWORD PTR [rsp+0x38],rax
   140005779:	mov    rax,QWORD PTR [rip+0x7028]        # 0x14000c7a8
   140005780:	mov    QWORD PTR [rsp+0x40],rax
   140005785:	lea    r8,[rsp+0x40]
   14000578a:	lea    rdx,[rsp+0x38]
   14000578f:	mov    rcx,rdi
   140005792:	call   0x140005cbc
   140005797:	mov    rbx,rax
   14000579a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000579f:	mov    QWORD PTR [rip+0x700a],rdx        # 0x14000c7b0
   1400057a6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400057ab:	mov    QWORD PTR [rip+0x6ff6],rdx        # 0x14000c7a8
   1400057b2:	mov    ecx,0x8
   1400057b7:	call   0x140005cb0
   1400057bc:	mov    rax,rbx
   1400057bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057c4:	add    rsp,0x20
   1400057c8:	pop    rdi
   1400057c9:	ret    
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	int3   
   1400057cd:	int3   
   1400057ce:	int3   
   1400057cf:	int3   
   1400057d0:	sub    rsp,0x28
   1400057d4:	call   0x14000572c
   1400057d9:	neg    rax
   1400057dc:	sbb    eax,eax
   1400057de:	neg    eax
   1400057e0:	dec    eax
   1400057e2:	add    rsp,0x28
   1400057e6:	ret    
   1400057e7:	int3   
   1400057e8:	int3   
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	int3   
   1400057ed:	int3   
   1400057ee:	int3   
   1400057ef:	int3   
   1400057f0:	sub    rsp,0x28
   1400057f4:	mov    rax,QWORD PTR [rcx]
   1400057f7:	cmp    DWORD PTR [rax],0xe06d7363
   1400057fd:	jne    0x140005822
   1400057ff:	cmp    DWORD PTR [rax+0x18],0x4
   140005803:	jne    0x140005822
   140005805:	mov    ecx,DWORD PTR [rax+0x20]
   140005808:	lea    eax,[rcx-0x19930520]
   14000580e:	cmp    eax,0x2
   140005811:	jbe    0x14000581b
   140005813:	cmp    ecx,0x1994000
   140005819:	jne    0x140005822
   14000581b:	call   QWORD PTR [rip+0x2a17]        # 0x140008238
   140005821:	int3   
   140005822:	xor    eax,eax
   140005824:	add    rsp,0x28
   140005828:	ret    
   140005829:	int3   
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	sub    rsp,0x28
   140005834:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400057f0
   14000583b:	call   QWORD PTR [rip+0x289f]        # 0x1400080e0
   140005841:	xor    eax,eax
   140005843:	add    rsp,0x28
   140005847:	ret    
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	jmp    QWORD PTR [rip+0x2a44]        # 0x140008298
   140005854:	int3   
   140005855:	int3   
   140005856:	int3   
   140005857:	int3   
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	sub    rsp,0x18
   140005860:	xor    edx,edx
   140005862:	lea    rax,[rcx-0x1]
   140005866:	cmp    rax,0xfffffffffffffffd
   14000586a:	ja     0x1400058a8
   14000586c:	mov    eax,0x5a4d
   140005871:	cmp    WORD PTR [rcx],ax
   140005874:	jne    0x1400058a0
   140005876:	cmp    DWORD PTR [rcx+0x3c],edx
   140005879:	jl     0x1400058a0
   14000587b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005882:	jae    0x1400058a0
   140005884:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005888:	add    rax,rcx
   14000588b:	mov    QWORD PTR [rsp],rax
   14000588f:	cmp    DWORD PTR [rax],0x4550
   140005895:	cmovne rax,rdx
   140005899:	mov    rdx,rax
   14000589c:	mov    QWORD PTR [rsp],rax
   1400058a0:	jmp    0x1400058a8
   1400058a2:	xor    edx,edx
   1400058a4:	mov    QWORD PTR [rsp],rdx
   1400058a8:	mov    rax,rdx
   1400058ab:	add    rsp,0x18
   1400058af:	ret    
   1400058b0:	int3   
   1400058b1:	int3   
   1400058b2:	int3   
   1400058b3:	int3   
   1400058b4:	int3   
   1400058b5:	int3   
   1400058b6:	int3   
   1400058b7:	int3   
   1400058b8:	rex push rbx
   1400058ba:	sub    rsp,0x20
   1400058be:	mov    ebx,ecx
   1400058c0:	xor    ecx,ecx
   1400058c2:	call   QWORD PTR [rip+0x2838]        # 0x140008100
   1400058c8:	test   rax,rax
   1400058cb:	je     0x1400058f5
   1400058cd:	mov    rcx,rax
   1400058d0:	call   0x14000585c
   1400058d5:	test   rax,rax
   1400058d8:	je     0x1400058f5
   1400058da:	mov    ecx,0x2
   1400058df:	cmp    WORD PTR [rax+0x5c],cx
   1400058e3:	jne    0x1400058e9
   1400058e5:	mov    eax,ecx
   1400058e7:	jmp    0x1400058f7
   1400058e9:	cmp    WORD PTR [rax+0x5c],0x3
   1400058ee:	mov    eax,0x1
   1400058f3:	je     0x1400058f7
   1400058f5:	mov    eax,ebx
   1400058f7:	add    rsp,0x20
   1400058fb:	pop    rbx
   1400058fc:	ret    
   1400058fd:	int3   
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	int3   
   140005901:	int3   
   140005902:	int3   
   140005903:	int3   
   140005904:	jmp    QWORD PTR [rip+0x2986]        # 0x140008290
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005914:	xor    r9d,r9d
   140005917:	add    r8,rcx
   14000591a:	mov    r10,rdx
   14000591d:	movzx  eax,WORD PTR [r8+0x14]
   140005922:	movzx  r11d,WORD PTR [r8+0x6]
   140005927:	add    rax,0x18
   14000592b:	add    rax,r8
   14000592e:	test   r11d,r11d
   140005931:	je     0x140005951
   140005933:	mov    edx,DWORD PTR [rax+0xc]
   140005936:	cmp    r10,rdx
   140005939:	jb     0x140005945
   14000593b:	mov    ecx,DWORD PTR [rax+0x8]
   14000593e:	add    ecx,edx
   140005940:	cmp    r10,rcx
   140005943:	jb     0x140005953
   140005945:	inc    r9d
   140005948:	add    rax,0x28
   14000594c:	cmp    r9d,r11d
   14000594f:	jb     0x140005933
   140005951:	xor    eax,eax
   140005953:	ret    
   140005954:	int3   
   140005955:	int3   
   140005956:	int3   
   140005957:	int3   
   140005958:	int3   
   140005959:	int3   
   14000595a:	int3   
   14000595b:	int3   
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	mov    QWORD PTR [rsp+0x8],rbx
   140005965:	push   rdi
   140005966:	sub    rsp,0x20
   14000596a:	mov    rbx,rcx
   14000596d:	lea    rdi,[rip+0xffffffffffffa68c]        # 0x140000000
   140005974:	mov    rcx,rdi
   140005977:	call   0x1400059c0
   14000597c:	test   eax,eax
   14000597e:	je     0x1400059a2
   140005980:	sub    rbx,rdi
   140005983:	mov    rdx,rbx
   140005986:	mov    rcx,rdi
   140005989:	call   0x140005910
   14000598e:	test   rax,rax
   140005991:	je     0x1400059a2
   140005993:	mov    eax,DWORD PTR [rax+0x24]
   140005996:	shr    eax,0x1f
   140005999:	not    eax
   14000599b:	and    eax,0x1
   14000599e:	jmp    0x1400059a2
   1400059a0:	xor    eax,eax
   1400059a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059a7:	add    rsp,0x20
   1400059ab:	pop    rdi
   1400059ac:	ret    
   1400059ad:	int3   
   1400059ae:	int3   
   1400059af:	int3   
   1400059b0:	int3   
   1400059b1:	int3   
   1400059b2:	int3   
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	mov    rax,rcx
   1400059c3:	mov    ecx,0x5a4d
   1400059c8:	cmp    WORD PTR [rax],cx
   1400059cb:	je     0x1400059d0
   1400059cd:	xor    eax,eax
   1400059cf:	ret    
   1400059d0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400059d4:	add    rcx,rax
   1400059d7:	xor    eax,eax
   1400059d9:	cmp    DWORD PTR [rcx],0x4550
   1400059df:	jne    0x1400059ed
   1400059e1:	mov    edx,0x20b
   1400059e6:	cmp    WORD PTR [rcx+0x18],dx
   1400059ea:	sete   al
   1400059ed:	ret    
   1400059ee:	int3   
   1400059ef:	int3   
   1400059f0:	int3   
   1400059f1:	int3   
   1400059f2:	int3   
   1400059f3:	int3   
   1400059f4:	mov    QWORD PTR [rsp+0x20],rbx
   1400059f9:	push   rbp
   1400059fa:	mov    rbp,rsp
   1400059fd:	sub    rsp,0x20
   140005a01:	and    QWORD PTR [rbp+0x18],0x0
   140005a06:	movabs rbx,0x2b992ddfa232
   140005a10:	mov    rax,QWORD PTR [rip+0x65f1]        # 0x14000c008
   140005a17:	cmp    rax,rbx
   140005a1a:	jne    0x140005aaf
   140005a20:	lea    rcx,[rbp+0x18]
   140005a24:	call   QWORD PTR [rip+0x2756]        # 0x140008180
   140005a2a:	mov    rax,QWORD PTR [rbp+0x18]
   140005a2e:	mov    QWORD PTR [rbp+0x10],rax
   140005a32:	call   QWORD PTR [rip+0x26e8]        # 0x140008120
   140005a38:	mov    eax,eax
   140005a3a:	xor    QWORD PTR [rbp+0x10],rax
   140005a3e:	call   QWORD PTR [rip+0x25f4]        # 0x140008038
   140005a44:	mov    eax,eax
   140005a46:	xor    QWORD PTR [rbp+0x10],rax
   140005a4a:	call   QWORD PTR [rip+0x2738]        # 0x140008188
   140005a50:	mov    eax,eax
   140005a52:	shl    rax,0x18
   140005a56:	xor    QWORD PTR [rbp+0x10],rax
   140005a5a:	call   QWORD PTR [rip+0x2728]        # 0x140008188
   140005a60:	mov    eax,eax
   140005a62:	lea    rcx,[rbp+0x10]
   140005a66:	xor    rax,QWORD PTR [rbp+0x10]
   140005a6a:	xor    rax,rcx
   140005a6d:	lea    rcx,[rbp+0x20]
   140005a71:	mov    QWORD PTR [rbp+0x10],rax
   140005a75:	call   QWORD PTR [rip+0x26c5]        # 0x140008140
   140005a7b:	mov    eax,DWORD PTR [rbp+0x20]
   140005a7e:	movabs rcx,0xffffffffffff
   140005a88:	shl    rax,0x20
   140005a8c:	xor    rax,QWORD PTR [rbp+0x20]
   140005a90:	xor    rax,QWORD PTR [rbp+0x10]
   140005a94:	and    rax,rcx
   140005a97:	movabs rcx,0x2b992ddfa233
   140005aa1:	cmp    rax,rbx
   140005aa4:	cmove  rax,rcx
   140005aa8:	mov    QWORD PTR [rip+0x6559],rax        # 0x14000c008
   140005aaf:	mov    rbx,QWORD PTR [rsp+0x48]
   140005ab4:	not    rax
   140005ab7:	mov    QWORD PTR [rip+0x6552],rax        # 0x14000c010
   140005abe:	add    rsp,0x20
   140005ac2:	pop    rbp
   140005ac3:	ret    
   140005ac4:	int3   
   140005ac5:	int3   
   140005ac6:	int3   
   140005ac7:	int3   
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	jmp    QWORD PTR [rip+0x2758]        # 0x140008228
   140005ad0:	int3   
   140005ad1:	int3   
   140005ad2:	int3   
   140005ad3:	int3   
   140005ad4:	int3   
   140005ad5:	int3   
   140005ad6:	jmp    QWORD PTR [rip+0x2754]        # 0x140008230
   140005adc:	int3   
   140005add:	int3   
   140005ade:	int3   
   140005adf:	int3   
   140005ae0:	int3   
   140005ae1:	int3   
   140005ae2:	int3   
   140005ae3:	int3   
   140005ae4:	rex push rbx
   140005ae6:	sub    rsp,0x20
   140005aea:	mov    rbx,rcx
   140005aed:	xor    ecx,ecx
   140005aef:	call   QWORD PTR [rip+0x25eb]        # 0x1400080e0
   140005af5:	mov    rcx,rbx
   140005af8:	call   QWORD PTR [rip+0x25da]        # 0x1400080d8
   140005afe:	call   QWORD PTR [rip+0x260c]        # 0x140008110
   140005b04:	mov    rcx,rax
   140005b07:	mov    edx,0xc0000409
   140005b0c:	add    rsp,0x20
   140005b10:	pop    rbx
   140005b11:	rex.W jmp QWORD PTR [rip+0x2600]        # 0x140008118
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	mov    QWORD PTR [rsp+0x8],rcx
   140005b25:	sub    rsp,0x88
   140005b2c:	lea    rcx,[rip+0x66ad]        # 0x14000c1e0
   140005b33:	call   QWORD PTR [rip+0x2627]        # 0x140008160
   140005b39:	mov    rax,QWORD PTR [rip+0x6798]        # 0x14000c2d8
   140005b40:	mov    QWORD PTR [rsp+0x48],rax
   140005b45:	xor    r8d,r8d
   140005b48:	lea    rdx,[rsp+0x50]
   140005b4d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005b52:	call   QWORD PTR [rip+0x25f8]        # 0x140008150
   140005b58:	mov    QWORD PTR [rsp+0x40],rax
   140005b5d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005b63:	je     0x140005ba7
   140005b65:	mov    QWORD PTR [rsp+0x38],0x0
   140005b6e:	lea    rax,[rsp+0x58]
   140005b73:	mov    QWORD PTR [rsp+0x30],rax
   140005b78:	lea    rax,[rsp+0x60]
   140005b7d:	mov    QWORD PTR [rsp+0x28],rax
   140005b82:	lea    rax,[rip+0x6657]        # 0x14000c1e0
   140005b89:	mov    QWORD PTR [rsp+0x20],rax
   140005b8e:	mov    r9,QWORD PTR [rsp+0x40]
   140005b93:	mov    r8,QWORD PTR [rsp+0x48]
   140005b98:	mov    rdx,QWORD PTR [rsp+0x50]
   140005b9d:	xor    ecx,ecx
   140005b9f:	call   QWORD PTR [rip+0x25b3]        # 0x140008158
   140005ba5:	jmp    0x140005bca
   140005ba7:	mov    rax,QWORD PTR [rip+0x66ca]        # 0x14000c278
   140005bae:	mov    rax,QWORD PTR [rax]
   140005bb1:	mov    QWORD PTR [rip+0x6720],rax        # 0x14000c2d8
   140005bb8:	mov    rax,QWORD PTR [rip+0x66b9]        # 0x14000c278
   140005bbf:	add    rax,0x8
   140005bc3:	mov    QWORD PTR [rip+0x66ae],rax        # 0x14000c278
   140005bca:	mov    rax,QWORD PTR [rip+0x6707]        # 0x14000c2d8
   140005bd1:	mov    QWORD PTR [rip+0x6578],rax        # 0x14000c150
   140005bd8:	mov    rax,QWORD PTR [rsp+0x90]
   140005be0:	mov    QWORD PTR [rip+0x6679],rax        # 0x14000c260
   140005be7:	mov    DWORD PTR [rip+0x654f],0xc0000409        # 0x14000c140
   140005bf1:	mov    DWORD PTR [rip+0x6549],0x1        # 0x14000c144
   140005bfb:	mov    DWORD PTR [rip+0x6553],0x3        # 0x14000c158
   140005c05:	mov    eax,0x8
   140005c0a:	imul   rax,rax,0x0
   140005c0e:	lea    rcx,[rip+0x654b]        # 0x14000c160
   140005c15:	mov    QWORD PTR [rcx+rax*1],0x2
   140005c1d:	mov    eax,0x8
   140005c22:	imul   rax,rax,0x1
   140005c26:	lea    rcx,[rip+0x6533]        # 0x14000c160
   140005c2d:	mov    rdx,QWORD PTR [rip+0x63d4]        # 0x14000c008
   140005c34:	mov    QWORD PTR [rcx+rax*1],rdx
   140005c38:	mov    eax,0x8
   140005c3d:	imul   rax,rax,0x2
   140005c41:	lea    rcx,[rip+0x6518]        # 0x14000c160
   140005c48:	mov    rdx,QWORD PTR [rip+0x63c1]        # 0x14000c010
   140005c4f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005c53:	mov    eax,0x8
   140005c58:	imul   rax,rax,0x0
   140005c5c:	mov    rcx,QWORD PTR [rip+0x63a5]        # 0x14000c008
   140005c63:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005c68:	mov    eax,0x8
   140005c6d:	imul   rax,rax,0x1
   140005c71:	mov    rcx,QWORD PTR [rip+0x6398]        # 0x14000c010
   140005c78:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005c7d:	lea    rcx,[rip+0x2914]        # 0x140008598
   140005c84:	call   0x140005ae4
   140005c89:	add    rsp,0x88
   140005c90:	ret    
   140005c91:	int3   
   140005c92:	int3   
   140005c93:	int3   
   140005c94:	int3   
   140005c95:	int3   
   140005c96:	int3   
   140005c97:	int3   
   140005c98:	jmp    QWORD PTR [rip+0x25a2]        # 0x140008240
   140005c9e:	int3   
   140005c9f:	int3   
   140005ca0:	int3   
   140005ca1:	int3   
   140005ca2:	int3   
   140005ca3:	int3   
   140005ca4:	jmp    QWORD PTR [rip+0x259e]        # 0x140008248
   140005caa:	int3   
   140005cab:	int3   
   140005cac:	int3   
   140005cad:	int3   
   140005cae:	int3   
   140005caf:	int3   
   140005cb0:	jmp    QWORD PTR [rip+0x25b2]        # 0x140008268
   140005cb6:	int3   
   140005cb7:	int3   
   140005cb8:	int3   
   140005cb9:	int3   
   140005cba:	int3   
   140005cbb:	int3   
   140005cbc:	jmp    QWORD PTR [rip+0x25ae]        # 0x140008270
   140005cc2:	int3   
   140005cc3:	int3   
   140005cc4:	int3   
   140005cc5:	int3   
   140005cc6:	int3   
   140005cc7:	int3   
   140005cc8:	int3   
   140005cc9:	int3   
   140005cca:	int3   
   140005ccb:	int3   
   140005ccc:	int3   
   140005ccd:	int3   
   140005cce:	int3   
   140005ccf:	int3   
   140005cd0:	int3   
   140005cd1:	int3   
   140005cd2:	int3   
   140005cd3:	int3   
   140005cd4:	int3   
   140005cd5:	int3   
   140005cd6:	int3   
   140005cd7:	int3   
   140005cd8:	rex push rbx
   140005cda:	sub    rsp,0x20
   140005cde:	mov    rbx,rcx
   140005ce1:	jmp    0x140005cf2
   140005ce3:	mov    rcx,rbx
   140005ce6:	call   0x14000663e
   140005ceb:	test   eax,eax
   140005ced:	je     0x140005d03
   140005cef:	mov    rcx,rbx
   140005cf2:	call   QWORD PTR [rip+0x25f0]        # 0x1400082e8
   140005cf8:	test   rax,rax
   140005cfb:	je     0x140005ce3
   140005cfd:	add    rsp,0x20
   140005d01:	pop    rbx
   140005d02:	ret    
   140005d03:	call   0x140006010
   140005d08:	int3   
   140005d09:	int3   
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	rex push rbx
   140005d12:	sub    rsp,0x20
   140005d16:	mov    rbx,rcx
   140005d19:	call   0x14000666e
   140005d1e:	lea    rax,[rip+0x28ab]        # 0x1400085d0
   140005d25:	mov    QWORD PTR [rbx],rax
   140005d28:	mov    rax,rbx
   140005d2b:	add    rsp,0x20
   140005d2f:	pop    rbx
   140005d30:	ret    
   140005d31:	int3   
   140005d32:	int3   
   140005d33:	int3   
   140005d34:	int3   
   140005d35:	int3   
   140005d36:	int3   
   140005d37:	int3   
   140005d38:	rex push rbx
   140005d3a:	sub    rsp,0x20
   140005d3e:	lea    rax,[rip+0x281b]        # 0x140008560
   140005d45:	mov    r8d,0x1
   140005d4b:	lea    rdx,[rsp+0x30]
   140005d50:	mov    QWORD PTR [rsp+0x30],rax
   140005d55:	mov    rbx,rcx
   140005d58:	call   0x140006662
   140005d5d:	lea    rax,[rip+0x286c]        # 0x1400085d0
   140005d64:	mov    QWORD PTR [rbx],rax
   140005d67:	mov    rax,rbx
   140005d6a:	add    rsp,0x20
   140005d6e:	pop    rbx
   140005d6f:	ret    
   140005d70:	int3   
   140005d71:	int3   
   140005d72:	int3   
   140005d73:	int3   
   140005d74:	int3   
   140005d75:	int3   
   140005d76:	int3   
   140005d77:	int3   
   140005d78:	rex push rbx
   140005d7a:	sub    rsp,0x20
   140005d7e:	mov    rbx,rcx
   140005d81:	call   0x14000666e
   140005d86:	lea    rax,[rip+0x2853]        # 0x1400085e0
   140005d8d:	mov    QWORD PTR [rbx],rax
   140005d90:	mov    rax,rbx
   140005d93:	add    rsp,0x20
   140005d97:	pop    rbx
   140005d98:	ret    
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	mov    QWORD PTR [rsp+0x8],rcx
   140005da5:	push   rbx
   140005da6:	sub    rsp,0x20
   140005daa:	mov    QWORD PTR [rsp+0x30],rdx
   140005daf:	mov    rbx,rcx
   140005db2:	lea    rdx,[rsp+0x30]
   140005db7:	call   0x140006656
   140005dbc:	lea    rax,[rip+0x281d]        # 0x1400085e0
   140005dc3:	mov    QWORD PTR [rbx],rax
   140005dc6:	mov    rax,rbx
   140005dc9:	add    rsp,0x20
   140005dcd:	pop    rbx
   140005dce:	ret    
   140005dcf:	int3   
   140005dd0:	int3   
   140005dd1:	int3   
   140005dd2:	int3   
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	lea    rax,[rip+0x27f1]        # 0x1400085d0
   140005ddf:	mov    QWORD PTR [rcx],rax
   140005de2:	jmp    0x14000667a
   140005de7:	int3   
   140005de8:	int3   
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	jmp    0x14000667a
   140005df5:	int3   
   140005df6:	int3   
   140005df7:	int3   
   140005df8:	int3   
   140005df9:	int3   
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	rex push rbx
   140005e02:	sub    rsp,0x20
   140005e06:	lea    rax,[rip+0x27e3]        # 0x1400085f0
   140005e0d:	mov    rbx,rcx
   140005e10:	mov    QWORD PTR [rcx],rax
   140005e13:	test   dl,0x1
   140005e16:	je     0x140005e1d
   140005e18:	call   0x1400056ec
   140005e1d:	mov    rax,rbx
   140005e20:	add    rsp,0x20
   140005e24:	pop    rbx
   140005e25:	ret    
   140005e26:	int3   
   140005e27:	int3   
   140005e28:	int3   
   140005e29:	int3   
   140005e2a:	int3   
   140005e2b:	int3   
   140005e2c:	int3   
   140005e2d:	int3   
   140005e2e:	int3   
   140005e2f:	int3   
   140005e30:	mov    QWORD PTR [rsp+0x8],rbx
   140005e35:	push   rdi
   140005e36:	sub    rsp,0x20
   140005e3a:	lea    rax,[rip+0x278f]        # 0x1400085d0
   140005e41:	mov    ebx,edx
   140005e43:	mov    QWORD PTR [rcx],rax
   140005e46:	mov    rdi,rcx
   140005e49:	call   0x14000667a
   140005e4e:	test   bl,0x1
   140005e51:	je     0x140005e5b
   140005e53:	mov    rcx,rdi
   140005e56:	call   0x1400056ec
   140005e5b:	mov    rax,rdi
   140005e5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e63:	add    rsp,0x20
   140005e67:	pop    rdi
   140005e68:	ret    
   140005e69:	int3   
   140005e6a:	int3   
   140005e6b:	int3   
   140005e6c:	int3   
   140005e6d:	int3   
   140005e6e:	int3   
   140005e6f:	int3   
   140005e70:	mov    QWORD PTR [rsp+0x8],rbx
   140005e75:	push   rdi
   140005e76:	sub    rsp,0x20
   140005e7a:	mov    ebx,edx
   140005e7c:	mov    rdi,rcx
   140005e7f:	call   0x14000667a
   140005e84:	test   bl,0x1
   140005e87:	je     0x140005e91
   140005e89:	mov    rcx,rdi
   140005e8c:	call   0x1400056ec
   140005e91:	mov    rax,rdi
   140005e94:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e99:	add    rsp,0x20
   140005e9d:	pop    rdi
   140005e9e:	ret    
   140005e9f:	int3   
   140005ea0:	int3   
   140005ea1:	int3   
   140005ea2:	int3   
   140005ea3:	int3   
   140005ea4:	int3   
   140005ea5:	int3   
   140005ea6:	int3   
   140005ea7:	int3   
   140005ea8:	mov    rax,rsp
   140005eab:	mov    QWORD PTR [rax+0x18],r8
   140005eaf:	mov    QWORD PTR [rax+0x10],rdx
   140005eb3:	mov    QWORD PTR [rax+0x8],rcx
   140005eb7:	push   rbx
   140005eb8:	push   rsi
   140005eb9:	push   rdi
   140005eba:	push   r14
   140005ebc:	sub    rsp,0x38
   140005ec0:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140005ec8:	mov    rsi,r8
   140005ecb:	mov    rbx,rcx
   140005ece:	mov    rdi,rdx
   140005ed1:	or     rdi,0xf
   140005ed5:	mov    r9,0xfffffffffffffffe
   140005edc:	cmp    rdi,r9
   140005edf:	jbe    0x140005ee6
   140005ee1:	mov    rdi,rdx
   140005ee4:	jmp    0x140005f17
   140005ee6:	mov    r8,QWORD PTR [rcx+0x18]
   140005eea:	mov    rcx,r8
   140005eed:	shr    rcx,1
   140005ef0:	movabs rax,0xaaaaaaaaaaaaaaab
   140005efa:	mul    rdi
   140005efd:	shr    rdx,1
   140005f00:	cmp    rcx,rdx
   140005f03:	jbe    0x140005f17
   140005f05:	mov    rax,r9
   140005f08:	sub    rax,rcx
   140005f0b:	cmp    r8,rax
   140005f0e:	lea    rdi,[rcx+r8*1]
   140005f12:	jbe    0x140005f17
   140005f14:	mov    rdi,r9
   140005f17:	lea    rcx,[rdi+0x1]
   140005f1b:	xor    r14d,r14d
   140005f1e:	test   rcx,rcx
   140005f21:	je     0x140005f3c
   140005f23:	cmp    rcx,0xffffffffffffffff
   140005f27:	ja     0x140005f36
   140005f29:	call   0x140005cd8
   140005f2e:	mov    r14,rax
   140005f31:	test   rax,rax
   140005f34:	jne    0x140005f3c
   140005f36:	call   0x140006010
   140005f3b:	nop
   140005f3c:	jmp    0x140005f52
   140005f3e:	mov    rbx,QWORD PTR [rsp+0x60]
   140005f43:	mov    rsi,QWORD PTR [rsp+0x70]
   140005f48:	mov    rdi,QWORD PTR [rsp+0x68]
   140005f4d:	mov    r14,QWORD PTR [rsp+0x78]
   140005f52:	test   rsi,rsi
   140005f55:	je     0x140005f76
   140005f57:	cmp    QWORD PTR [rbx+0x18],0x10
   140005f5c:	jb     0x140005f63
   140005f5e:	mov    rdx,QWORD PTR [rbx]
   140005f61:	jmp    0x140005f66
   140005f63:	mov    rdx,rbx
   140005f66:	test   rsi,rsi
   140005f69:	je     0x140005f76
   140005f6b:	mov    r8,rsi
   140005f6e:	mov    rcx,r14
   140005f71:	call   0x1400066a8
   140005f76:	cmp    QWORD PTR [rbx+0x18],0x10
   140005f7b:	jb     0x140005f85
   140005f7d:	mov    rcx,QWORD PTR [rbx]
   140005f80:	call   0x1400056ec
   140005f85:	mov    BYTE PTR [rbx],0x0
   140005f88:	mov    QWORD PTR [rbx],r14
   140005f8b:	mov    QWORD PTR [rbx+0x18],rdi
   140005f8f:	mov    QWORD PTR [rbx+0x10],rsi
   140005f93:	cmp    rdi,0x10
   140005f97:	jb     0x140005f9c
   140005f99:	mov    rbx,r14
   140005f9c:	mov    BYTE PTR [rbx+rsi*1],0x0
   140005fa0:	add    rsp,0x38
   140005fa4:	pop    r14
   140005fa6:	pop    rdi
   140005fa7:	pop    rsi
   140005fa8:	pop    rbx
   140005fa9:	ret    
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	int3   
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140005fb5:	mov    QWORD PTR [rsp+0x10],rsi
   140005fba:	push   rdi
   140005fbb:	sub    rsp,0x20
   140005fbf:	mov    rdi,r8
   140005fc2:	mov    rbx,rcx
   140005fc5:	test   dl,dl
   140005fc7:	je     0x140005fe8
   140005fc9:	cmp    QWORD PTR [rcx+0x18],0x10
   140005fce:	jb     0x140005fe8
   140005fd0:	mov    rsi,QWORD PTR [rcx]
   140005fd3:	test   r8,r8
   140005fd6:	je     0x140005fe0
   140005fd8:	mov    rdx,rsi
   140005fdb:	call   0x1400066a8
   140005fe0:	mov    rcx,rsi
   140005fe3:	call   0x1400056ec
   140005fe8:	mov    rsi,QWORD PTR [rsp+0x38]
   140005fed:	mov    QWORD PTR [rbx+0x18],0xf
   140005ff5:	mov    QWORD PTR [rbx+0x10],rdi
   140005ff9:	mov    BYTE PTR [rdi+rbx*1],0x0
   140005ffd:	mov    rbx,QWORD PTR [rsp+0x30]
   140006002:	add    rsp,0x20
   140006006:	pop    rdi
   140006007:	ret    
   140006008:	int3   
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	int3   
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	sub    rsp,0x48
   140006014:	lea    rcx,[rsp+0x20]
   140006019:	call   0x140005d38
   14000601e:	lea    rdx,[rip+0x4dcb]        # 0x14000adf0
   140006025:	lea    rcx,[rsp+0x20]
   14000602a:	call   0x14000669c
   14000602f:	int3   
   140006030:	int3   
   140006031:	int3   
   140006032:	int3   
   140006033:	int3   
   140006034:	int3   
   140006035:	int3   
   140006036:	int3   
   140006037:	int3   
   140006038:	sub    rsp,0x28
   14000603c:	lea    rcx,[rip+0x26cd]        # 0x140008710
   140006043:	call   0x140006050
   140006048:	int3   
   140006049:	int3   
   14000604a:	int3   
   14000604b:	int3   
   14000604c:	int3   
   14000604d:	int3   
   14000604e:	int3   
   14000604f:	int3   
   140006050:	sub    rsp,0x48
   140006054:	mov    rdx,rcx
   140006057:	lea    rcx,[rsp+0x20]
   14000605c:	call   0x140005da0
   140006061:	lea    rdx,[rip+0x4e38]        # 0x14000aea0
   140006068:	lea    rcx,[rsp+0x20]
   14000606d:	call   0x14000669c
   140006072:	int3   
   140006073:	int3   
   140006074:	int3   
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	int3   
   140006079:	int3   
   14000607a:	int3   
   14000607b:	int3   
   14000607c:	sub    rsp,0x48
   140006080:	mov    rdx,rcx
   140006083:	lea    rcx,[rsp+0x20]
   140006088:	call   0x140005da0
   14000608d:	lea    rdx,[rip+0x4e74]        # 0x14000af08
   140006094:	lea    rcx,[rsp+0x20]
   140006099:	call   0x14000669c
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	int3   
   1400060a1:	int3   
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	sub    rsp,0x28
   1400060ac:	lea    rcx,[rip+0x2645]        # 0x1400086f8
   1400060b3:	call   0x14000607c
   1400060b8:	int3   
   1400060b9:	int3   
   1400060ba:	int3   
   1400060bb:	int3   
   1400060bc:	int3   
   1400060bd:	int3   
   1400060be:	int3   
   1400060bf:	int3   
   1400060c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400060ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400060cf:	push   rdi
   1400060d0:	sub    rsp,0x20
   1400060d4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400060d8:	mov    rbp,r8
   1400060db:	mov    rsi,rdx
   1400060de:	mov    rbx,rcx
   1400060e1:	cmp    rdi,r8
   1400060e4:	jb     0x1400061bc
   1400060ea:	sub    rdi,r8
   1400060ed:	cmp    r9,rdi
   1400060f0:	cmovb  rdi,r9
   1400060f4:	cmp    rcx,rdx
   1400060f7:	jne    0x140006125
   1400060f9:	lea    rax,[rdi+r8*1]
   1400060fd:	cmp    QWORD PTR [rcx+0x10],rax
   140006101:	jb     0x1400061c2
   140006107:	cmp    QWORD PTR [rcx+0x18],0x10
   14000610c:	mov    QWORD PTR [rcx+0x10],rax
   140006110:	jb     0x140006115
   140006112:	mov    rcx,QWORD PTR [rcx]
   140006115:	mov    BYTE PTR [rcx+rax*1],0x0
   140006119:	xor    edx,edx
   14000611b:	mov    rcx,rbx
   14000611e:	call   0x1400063e0
   140006123:	jmp    0x1400061a4
   140006125:	cmp    rdi,0xfffffffffffffffe
   140006129:	ja     0x1400061c8
   14000612f:	cmp    QWORD PTR [rcx+0x18],rdi
   140006133:	jae    0x140006143
   140006135:	mov    r8,QWORD PTR [rcx+0x10]
   140006139:	mov    rdx,rdi
   14000613c:	call   0x140005ea8
   140006141:	jmp    0x14000615e
   140006143:	test   rdi,rdi
   140006146:	jne    0x140006163
   140006148:	and    QWORD PTR [rcx+0x10],rdi
   14000614c:	cmp    QWORD PTR [rcx+0x18],0x10
   140006151:	jb     0x140006158
   140006153:	mov    rax,QWORD PTR [rcx]
   140006156:	jmp    0x14000615b
   140006158:	mov    rax,rcx
   14000615b:	mov    BYTE PTR [rax],0x0
   14000615e:	test   rdi,rdi
   140006161:	je     0x1400061a4
   140006163:	cmp    QWORD PTR [rsi+0x18],0x10
   140006168:	jb     0x14000616d
   14000616a:	mov    rsi,QWORD PTR [rsi]
   14000616d:	cmp    QWORD PTR [rbx+0x18],0x10
   140006172:	jb     0x140006179
   140006174:	mov    rcx,QWORD PTR [rbx]
   140006177:	jmp    0x14000617c
   140006179:	mov    rcx,rbx
   14000617c:	test   rdi,rdi
   14000617f:	je     0x14000618d
   140006181:	lea    rdx,[rsi+rbp*1]
   140006185:	mov    r8,rdi
   140006188:	call   0x1400066a8
   14000618d:	cmp    QWORD PTR [rbx+0x18],0x10
   140006192:	mov    QWORD PTR [rbx+0x10],rdi
   140006196:	jb     0x14000619d
   140006198:	mov    rax,QWORD PTR [rbx]
   14000619b:	jmp    0x1400061a0
   14000619d:	mov    rax,rbx
   1400061a0:	mov    BYTE PTR [rax+rdi*1],0x0
   1400061a4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400061a9:	mov    rax,rbx
   1400061ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400061b1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400061b6:	add    rsp,0x20
   1400061ba:	pop    rdi
   1400061bb:	ret    
   1400061bc:	call   0x1400060a8
   1400061c1:	int3   
   1400061c2:	call   0x1400060a8
   1400061c7:	int3   
   1400061c8:	call   0x140006038
   1400061cd:	int3   
   1400061ce:	int3   
   1400061cf:	int3   
   1400061d0:	int3   
   1400061d1:	int3   
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400061d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400061de:	push   rdi
   1400061df:	sub    rsp,0x20
   1400061e3:	mov    rdi,r8
   1400061e6:	mov    rsi,rdx
   1400061e9:	mov    rbx,rcx
   1400061ec:	test   rdx,rdx
   1400061ef:	je     0x14000623d
   1400061f1:	cmp    QWORD PTR [rcx+0x18],0x10
   1400061f6:	jb     0x1400061fd
   1400061f8:	mov    rax,QWORD PTR [rcx]
   1400061fb:	jmp    0x140006200
   1400061fd:	mov    rax,rcx
   140006200:	cmp    rdx,rax
   140006203:	jb     0x14000623d
   140006205:	cmp    QWORD PTR [rcx+0x18],0x10
   14000620a:	jb     0x14000620f
   14000620c:	mov    rcx,QWORD PTR [rcx]
   14000620f:	add    rcx,QWORD PTR [rbx+0x10]
   140006213:	cmp    rcx,rdx
   140006216:	jbe    0x14000623d
   140006218:	cmp    QWORD PTR [rbx+0x18],0x10
   14000621d:	jb     0x140006224
   14000621f:	mov    rax,QWORD PTR [rbx]
   140006222:	jmp    0x140006227
   140006224:	mov    rax,rbx
   140006227:	sub    rsi,rax
   14000622a:	mov    r9,r8
   14000622d:	mov    r8,rsi
   140006230:	mov    rdx,rbx
   140006233:	mov    rcx,rbx
   140006236:	call   0x1400060c0
   14000623b:	jmp    0x1400062b7
   14000623d:	cmp    r8,0xfffffffffffffffe
   140006241:	ja     0x1400062c7
   140006247:	cmp    QWORD PTR [rbx+0x18],r8
   14000624b:	jae    0x14000625e
   14000624d:	mov    r8,QWORD PTR [rbx+0x10]
   140006251:	mov    rdx,rdi
   140006254:	mov    rcx,rbx
   140006257:	call   0x140005ea8
   14000625c:	jmp    0x140006279
   14000625e:	test   r8,r8
   140006261:	jne    0x140006279
   140006263:	and    QWORD PTR [rbx+0x10],r8
   140006267:	cmp    QWORD PTR [rbx+0x18],0x10
   14000626c:	jb     0x140006273
   14000626e:	mov    rax,QWORD PTR [rbx]
   140006271:	jmp    0x140006276
   140006273:	mov    rax,rbx
   140006276:	mov    BYTE PTR [rax],0x0
   140006279:	test   rdi,rdi
   14000627c:	je     0x1400062b4
   14000627e:	cmp    QWORD PTR [rbx+0x18],0x10
   140006283:	jb     0x14000628a
   140006285:	mov    rcx,QWORD PTR [rbx]
   140006288:	jmp    0x14000628d
   14000628a:	mov    rcx,rbx
   14000628d:	test   rdi,rdi
   140006290:	je     0x14000629d
   140006292:	mov    r8,rdi
   140006295:	mov    rdx,rsi
   140006298:	call   0x1400066a8
   14000629d:	cmp    QWORD PTR [rbx+0x18],0x10
   1400062a2:	mov    QWORD PTR [rbx+0x10],rdi
   1400062a6:	jb     0x1400062ad
   1400062a8:	mov    rax,QWORD PTR [rbx]
   1400062ab:	jmp    0x1400062b0
   1400062ad:	mov    rax,rbx
   1400062b0:	mov    BYTE PTR [rax+rdi*1],0x0
   1400062b4:	mov    rax,rbx
   1400062b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062bc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400062c1:	add    rsp,0x20
   1400062c5:	pop    rdi
   1400062c6:	ret    
   1400062c7:	mov    rcx,rbx
   1400062ca:	call   0x140006038
   1400062cf:	int3   
   1400062d0:	int3   
   1400062d1:	int3   
   1400062d2:	int3   
   1400062d3:	int3   
   1400062d4:	int3   
   1400062d5:	int3   
   1400062d6:	int3   
   1400062d7:	int3   
   1400062d8:	int3   
   1400062d9:	int3   
   1400062da:	int3   
   1400062db:	int3   
   1400062dc:	int3   
   1400062dd:	int3   
   1400062de:	int3   
   1400062df:	int3   
   1400062e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400062e5:	push   rdi
   1400062e6:	sub    rsp,0x20
   1400062ea:	mov    ecx,r8d
   1400062ed:	mov    edi,r8d
   1400062f0:	mov    rbx,rdx
   1400062f3:	call   0x1400065e0
   1400062f8:	test   rax,rax
   1400062fb:	mov    DWORD PTR [rbx],edi
   1400062fd:	lea    rax,[rip+0x5d1c]        # 0x14000c020
   140006304:	jne    0x14000630d
   140006306:	lea    rax,[rip+0x5d23]        # 0x14000c030
   14000630d:	mov    QWORD PTR [rbx+0x8],rax
   140006311:	mov    rax,rbx
   140006314:	mov    rbx,QWORD PTR [rsp+0x30]
   140006319:	add    rsp,0x20
   14000631d:	pop    rdi
   14000631e:	ret    
   14000631f:	int3   
   140006320:	int3   
   140006321:	int3   
   140006322:	int3   
   140006323:	int3   
   140006324:	int3   
   140006325:	int3   
   140006326:	int3   
   140006327:	int3   
   140006328:	int3   
   140006329:	int3   
   14000632a:	int3   
   14000632b:	int3   
   14000632c:	int3   
   14000632d:	int3   
   14000632e:	int3   
   14000632f:	int3   
   140006330:	mov    DWORD PTR [rdx],r8d
   140006333:	mov    rax,rdx
   140006336:	mov    QWORD PTR [rdx+0x8],rcx
   14000633a:	ret    
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	int3   
   140006341:	int3   
   140006342:	int3   
   140006343:	int3   
   140006344:	int3   
   140006345:	int3   
   140006346:	int3   
   140006347:	int3   
   140006348:	int3   
   140006349:	int3   
   14000634a:	int3   
   14000634b:	int3   
   14000634c:	int3   
   14000634d:	int3   
   14000634e:	int3   
   14000634f:	int3   
   140006350:	cmp    rcx,QWORD PTR [rdx+0x8]
   140006354:	jne    0x140006361
   140006356:	cmp    DWORD PTR [rdx],r8d
   140006359:	jne    0x140006361
   14000635b:	mov    eax,0x1
   140006360:	ret    
   140006361:	xor    eax,eax
   140006363:	ret    
   140006364:	int3   
   140006365:	int3   
   140006366:	int3   
   140006367:	int3   
   140006368:	int3   
   140006369:	int3   
   14000636a:	int3   
   14000636b:	int3   
   14000636c:	int3   
   14000636d:	int3   
   14000636e:	int3   
   14000636f:	int3   
   140006370:	mov    QWORD PTR [rsp+0x8],rbx
   140006375:	mov    QWORD PTR [rsp+0x10],rsi
   14000637a:	mov    QWORD PTR [rsp+0x18],rdi
   14000637f:	push   r14
   140006381:	sub    rsp,0x30
   140006385:	mov    rax,QWORD PTR [rcx]
   140006388:	mov    rsi,rcx
   14000638b:	mov    r14,r8
   14000638e:	mov    edi,edx
   140006390:	mov    rbx,QWORD PTR [rax+0x18]
   140006394:	mov    rcx,rbx
   140006397:	call   QWORD PTR [rip+0x1f73]        # 0x140008310
   14000639d:	mov    r8d,edi
   1400063a0:	lea    rdx,[rsp+0x20]
   1400063a5:	mov    rcx,rsi
   1400063a8:	call   rbx
   1400063aa:	mov    rcx,QWORD PTR [r14+0x8]
   1400063ae:	cmp    QWORD PTR [rax+0x8],rcx
   1400063b2:	jne    0x1400063c2
   1400063b4:	mov    ecx,DWORD PTR [r14]
   1400063b7:	cmp    DWORD PTR [rax],ecx
   1400063b9:	jne    0x1400063c2
   1400063bb:	mov    eax,0x1
   1400063c0:	jmp    0x1400063c4
   1400063c2:	xor    eax,eax
   1400063c4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400063c9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400063ce:	mov    rdi,QWORD PTR [rsp+0x50]
   1400063d3:	add    rsp,0x30
   1400063d7:	pop    r14
   1400063d9:	ret    
   1400063da:	int3   
   1400063db:	int3   
   1400063dc:	int3   
   1400063dd:	int3   
   1400063de:	int3   
   1400063df:	int3   
   1400063e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400063e5:	push   rdi
   1400063e6:	sub    rsp,0x20
   1400063ea:	mov    rdi,QWORD PTR [rcx+0x10]
   1400063ee:	mov    rbx,rcx
   1400063f1:	cmp    rdi,rdx
   1400063f4:	jb     0x14000646e
   1400063f6:	mov    rax,rdi
   1400063f9:	sub    rax,rdx
   1400063fc:	cmp    rax,r8
   1400063ff:	ja     0x14000641a
   140006401:	cmp    QWORD PTR [rcx+0x18],0x10
   140006406:	mov    QWORD PTR [rcx+0x10],rdx
   14000640a:	jb     0x140006411
   14000640c:	mov    rax,QWORD PTR [rcx]
   14000640f:	jmp    0x140006414
   140006411:	mov    rax,rcx
   140006414:	mov    BYTE PTR [rax+rdx*1],0x0
   140006418:	jmp    0x140006460
   14000641a:	test   r8,r8
   14000641d:	je     0x140006460
   14000641f:	cmp    QWORD PTR [rcx+0x18],0x10
   140006424:	jb     0x14000642b
   140006426:	mov    rax,QWORD PTR [rcx]
   140006429:	jmp    0x14000642e
   14000642b:	mov    rax,rcx
   14000642e:	sub    rdi,r8
   140006431:	lea    rcx,[rax+rdx*1]
   140006435:	mov    rax,rdi
   140006438:	sub    rax,rdx
   14000643b:	je     0x140006449
   14000643d:	lea    rdx,[rcx+r8*1]
   140006441:	mov    r8,rax
   140006444:	call   0x14000664a
   140006449:	cmp    QWORD PTR [rbx+0x18],0x10
   14000644e:	mov    QWORD PTR [rbx+0x10],rdi
   140006452:	jb     0x140006459
   140006454:	mov    rax,QWORD PTR [rbx]
   140006457:	jmp    0x14000645c
   140006459:	mov    rax,rbx
   14000645c:	mov    BYTE PTR [rax+rdi*1],0x0
   140006460:	mov    rax,rbx
   140006463:	mov    rbx,QWORD PTR [rsp+0x30]
   140006468:	add    rsp,0x20
   14000646c:	pop    rdi
   14000646d:	ret    
   14000646e:	call   0x1400060a8
   140006473:	int3   
   140006474:	int3   
   140006475:	int3   
   140006476:	int3   
   140006477:	int3   
   140006478:	int3   
   140006479:	int3   
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	int3   
   14000647d:	int3   
   14000647e:	int3   
   14000647f:	int3   
   140006480:	mov    QWORD PTR [rsp+0x8],rbx
   140006485:	push   rdi
   140006486:	sub    rsp,0x30
   14000648a:	xor    ebx,ebx
   14000648c:	mov    ecx,r8d
   14000648f:	mov    DWORD PTR [rsp+0x20],ebx
   140006493:	mov    rdi,rdx
   140006496:	call   0x1400065e0
   14000649b:	test   rax,rax
   14000649e:	mov    QWORD PTR [rdi+0x18],0xf
   1400064a6:	mov    QWORD PTR [rdi+0x10],rbx
   1400064aa:	lea    rdx,[rip+0x21a7]        # 0x140008658
   1400064b1:	cmovne rdx,rax
   1400064b5:	mov    BYTE PTR [rdi],bl
   1400064b7:	cmp    BYTE PTR [rdx],bl
   1400064b9:	je     0x1400064ca
   1400064bb:	or     rax,0xffffffffffffffff
   1400064bf:	inc    rax
   1400064c2:	cmp    BYTE PTR [rdx+rax*1],bl
   1400064c5:	jne    0x1400064bf
   1400064c7:	mov    rbx,rax
   1400064ca:	mov    r8,rbx
   1400064cd:	mov    rcx,rdi
   1400064d0:	call   0x1400061d4
   1400064d5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400064da:	mov    rax,rdi
   1400064dd:	add    rsp,0x30
   1400064e1:	pop    rdi
   1400064e2:	ret    
   1400064e3:	int3   
   1400064e4:	int3   
   1400064e5:	int3   
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	int3   
   1400064e9:	int3   
   1400064ea:	int3   
   1400064eb:	int3   
   1400064ec:	int3   
   1400064ed:	int3   
   1400064ee:	int3   
   1400064ef:	int3   
   1400064f0:	rex push rbx
   1400064f2:	sub    rsp,0x30
   1400064f6:	xor    eax,eax
   1400064f8:	mov    rbx,rdx
   1400064fb:	mov    DWORD PTR [rsp+0x20],eax
   1400064ff:	cmp    r8d,0x1
   140006503:	jne    0x140006528
   140006505:	mov    QWORD PTR [rdx+0x18],0xf
   14000650d:	lea    r8d,[rax+0x15]
   140006511:	mov    QWORD PTR [rdx+0x10],rax
   140006515:	mov    rcx,rbx
   140006518:	mov    BYTE PTR [rdx],al
   14000651a:	lea    rdx,[rip+0x2187]        # 0x1400086a8
   140006521:	call   0x1400061d4
   140006526:	jmp    0x14000652d
   140006528:	call   0x140006480
   14000652d:	mov    rax,rbx
   140006530:	add    rsp,0x30
   140006534:	pop    rbx
   140006535:	ret    
   140006536:	int3   
   140006537:	int3   
   140006538:	int3   
   140006539:	int3   
   14000653a:	int3   
   14000653b:	int3   
   14000653c:	int3   
   14000653d:	int3   
   14000653e:	int3   
   14000653f:	int3   
   140006540:	mov    QWORD PTR [rsp+0x8],rbx
   140006545:	push   rdi
   140006546:	sub    rsp,0x30
   14000654a:	xor    ebx,ebx
   14000654c:	mov    ecx,r8d
   14000654f:	mov    DWORD PTR [rsp+0x20],ebx
   140006553:	mov    rdi,rdx
   140006556:	call   0x140006610
   14000655b:	test   rax,rax
   14000655e:	mov    QWORD PTR [rdi+0x18],0xf
   140006566:	mov    QWORD PTR [rdi+0x10],rbx
   14000656a:	lea    rdx,[rip+0x20e7]        # 0x140008658
   140006571:	cmovne rdx,rax
   140006575:	mov    BYTE PTR [rdi],bl
   140006577:	cmp    BYTE PTR [rdx],bl
   140006579:	je     0x14000658a
   14000657b:	or     rax,0xffffffffffffffff
   14000657f:	inc    rax
   140006582:	cmp    BYTE PTR [rdx+rax*1],bl
   140006585:	jne    0x14000657f
   140006587:	mov    rbx,rax
   14000658a:	mov    r8,rbx
   14000658d:	mov    rcx,rdi
   140006590:	call   0x1400061d4
   140006595:	mov    rbx,QWORD PTR [rsp+0x40]
   14000659a:	mov    rax,rdi
   14000659d:	add    rsp,0x30
   1400065a1:	pop    rdi
   1400065a2:	ret    
   1400065a3:	int3   
   1400065a4:	int3   
   1400065a5:	int3   
   1400065a6:	int3   
   1400065a7:	int3   
   1400065a8:	int3   
   1400065a9:	int3   
   1400065aa:	int3   
   1400065ab:	int3   
   1400065ac:	int3   
   1400065ad:	int3   
   1400065ae:	int3   
   1400065af:	int3   
   1400065b0:	lea    rax,[rip+0x2099]        # 0x140008650
   1400065b7:	ret    
   1400065b8:	int3   
   1400065b9:	int3   
   1400065ba:	int3   
   1400065bb:	int3   
   1400065bc:	int3   
   1400065bd:	int3   
   1400065be:	int3   
   1400065bf:	int3   
   1400065c0:	lea    rax,[rip+0x20d1]        # 0x140008698
   1400065c7:	ret    
   1400065c8:	int3   
   1400065c9:	int3   
   1400065ca:	int3   
   1400065cb:	int3   
   1400065cc:	int3   
   1400065cd:	int3   
   1400065ce:	int3   
   1400065cf:	int3   
   1400065d0:	lea    rax,[rip+0x2119]        # 0x1400086f0
   1400065d7:	ret    
   1400065d8:	int3   
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	int3   
   1400065dd:	int3   
   1400065de:	int3   
   1400065df:	int3   
   1400065e0:	cmp    QWORD PTR [rip+0x2a30],0x0        # 0x140009018
   1400065e8:	lea    rax,[rip+0x2a21]        # 0x140009010
   1400065ef:	je     0x140006600
   1400065f1:	cmp    DWORD PTR [rax],ecx
   1400065f3:	je     0x140006603
   1400065f5:	add    rax,0x10
   1400065f9:	cmp    QWORD PTR [rax+0x8],0x0
   1400065fe:	jne    0x1400065f1
   140006600:	xor    eax,eax
   140006602:	ret    
   140006603:	mov    rax,QWORD PTR [rax+0x8]
   140006607:	ret    
   140006608:	int3   
   140006609:	int3   
   14000660a:	int3   
   14000660b:	int3   
   14000660c:	int3   
   14000660d:	int3   
   14000660e:	int3   
   14000660f:	int3   
   140006610:	cmp    QWORD PTR [rip+0x2110],0x0        # 0x140008728
   140006618:	lea    rax,[rip+0x2101]        # 0x140008720
   14000661f:	je     0x140006630
   140006621:	cmp    DWORD PTR [rax],ecx
   140006623:	je     0x140006633
   140006625:	add    rax,0x10
   140006629:	cmp    QWORD PTR [rax+0x8],0x0
   14000662e:	jne    0x140006621
   140006630:	xor    eax,eax
   140006632:	ret    
   140006633:	mov    rax,QWORD PTR [rax+0x8]
   140006637:	ret    
   140006638:	int3   
   140006639:	int3   
   14000663a:	int3   
   14000663b:	int3   
   14000663c:	int3   
   14000663d:	int3   
   14000663e:	jmp    QWORD PTR [rip+0x1cac]        # 0x1400082f0
   140006644:	int3   
   140006645:	int3   
   140006646:	int3   
   140006647:	int3   
   140006648:	int3   
   140006649:	int3   
   14000664a:	jmp    QWORD PTR [rip+0x1ca8]        # 0x1400082f8
   140006650:	int3   
   140006651:	int3   
   140006652:	int3   
   140006653:	int3   
   140006654:	int3   
   140006655:	int3   
   140006656:	jmp    QWORD PTR [rip+0x1c74]        # 0x1400082d0
   14000665c:	int3   
   14000665d:	int3   
   14000665e:	int3   
   14000665f:	int3   
   140006660:	int3   
   140006661:	int3   
   140006662:	jmp    QWORD PTR [rip+0x1c60]        # 0x1400082c8
   140006668:	int3   
   140006669:	int3   
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	jmp    QWORD PTR [rip+0x1c4c]        # 0x1400082c0
   140006674:	int3   
   140006675:	int3   
   140006676:	int3   
   140006677:	int3   
   140006678:	int3   
   140006679:	int3   
   14000667a:	jmp    QWORD PTR [rip+0x1c38]        # 0x1400082b8
   140006680:	int3   
   140006681:	int3   
   140006682:	int3   
   140006683:	int3   
   140006684:	int3   
   140006685:	int3   
   140006686:	int3   
   140006687:	int3   
   140006688:	int3   
   140006689:	int3   
   14000668a:	int3   
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	jmp    QWORD PTR [rip+0x1c1a]        # 0x1400082b0
   140006696:	int3   
   140006697:	int3   
   140006698:	int3   
   140006699:	int3   
   14000669a:	int3   
   14000669b:	int3   
   14000669c:	jmp    QWORD PTR [rip+0x1c06]        # 0x1400082a8
   1400066a2:	int3   
   1400066a3:	int3   
   1400066a4:	int3   
   1400066a5:	int3   
   1400066a6:	int3   
   1400066a7:	int3   
   1400066a8:	jmp    QWORD PTR [rip+0x1bf2]        # 0x1400082a0
   1400066ae:	int3   
   1400066af:	int3   
   1400066b0:	int3   
   1400066b1:	int3   
   1400066b2:	int3   
   1400066b3:	int3   
   1400066b4:	int3   
   1400066b5:	int3   
   1400066b6:	int3   
   1400066b7:	int3   
   1400066b8:	int3   
   1400066b9:	int3   
   1400066ba:	int3   
   1400066bb:	int3   
   1400066bc:	int3   
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400066c5:	push   rdi
   1400066c6:	sub    rsp,0x20
   1400066ca:	mov    ebx,edx
   1400066cc:	mov    rdi,rcx
   1400066cf:	call   QWORD PTR [rip+0x1c2b]        # 0x140008300
   1400066d5:	test   bl,0x1
   1400066d8:	je     0x1400066e2
   1400066da:	mov    rcx,rdi
   1400066dd:	call   0x1400056ec
   1400066e2:	mov    rax,rdi
   1400066e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400066ea:	add    rsp,0x20
   1400066ee:	pop    rdi
   1400066ef:	ret    
   1400066f0:	int3   
   1400066f1:	int3   
   1400066f2:	int3   
   1400066f3:	int3   
   1400066f4:	int3   
   1400066f5:	int3   
   1400066f6:	int3   
   1400066f7:	int3   
   1400066f8:	sub    rsp,0x28
   1400066fc:	mov    r8,QWORD PTR [r9+0x38]
   140006700:	mov    rcx,rdx
   140006703:	mov    rdx,r9
   140006706:	call   0x14000671c
   14000670b:	mov    eax,0x1
   140006710:	add    rsp,0x28
   140006714:	ret    
   140006715:	int3   
   140006716:	int3   
   140006717:	int3   
   140006718:	int3   
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	rex push rbx
   14000671e:	sub    rsp,0x20
   140006722:	mov    r11d,DWORD PTR [r8]
   140006725:	mov    rbx,rdx
   140006728:	and    r11d,0xfffffff8
   14000672c:	mov    r9,rcx
   14000672f:	test   BYTE PTR [r8],0x4
   140006733:	mov    r10,rcx
   140006736:	je     0x14000674b
   140006738:	mov    eax,DWORD PTR [r8+0x8]
   14000673c:	movsxd r10,DWORD PTR [r8+0x4]
   140006740:	neg    eax
   140006742:	add    r10,rcx
   140006745:	movsxd rcx,eax
   140006748:	and    r10,rcx
   14000674b:	movsxd rax,r11d
   14000674e:	mov    rdx,QWORD PTR [rax+r10*1]
   140006752:	mov    rax,QWORD PTR [rbx+0x10]
   140006756:	mov    ecx,DWORD PTR [rax+0x8]
   140006759:	add    rcx,QWORD PTR [rbx+0x8]
   14000675d:	test   BYTE PTR [rcx+0x3],0xf
   140006761:	je     0x14000676f
   140006763:	movzx  eax,BYTE PTR [rcx+0x3]
   140006767:	and    eax,0xfffffff0
   14000676a:	cdqe   
   14000676c:	add    r9,rax
   14000676f:	xor    r9,rdx
   140006772:	mov    rcx,r9
   140006775:	add    rsp,0x20
   140006779:	pop    rbx
   14000677a:	jmp    0x1400056b0
   14000677f:	int3   
   140006780:	int3   
   140006781:	int3   
   140006782:	int3   
   140006783:	int3   
   140006784:	int3   
   140006785:	int3   
   140006786:	int3   
   140006787:	int3   
   140006788:	mov    rax,rsp
   14000678b:	mov    QWORD PTR [rax+0x8],rbx
   14000678f:	mov    QWORD PTR [rax+0x10],rbp
   140006793:	mov    QWORD PTR [rax+0x18],rsi
   140006797:	mov    QWORD PTR [rax+0x20],rdi
   14000679b:	push   r14
   14000679d:	sub    rsp,0x20
   1400067a1:	mov    rbx,QWORD PTR [r9+0x38]
   1400067a5:	mov    rsi,rdx
   1400067a8:	mov    r14,r8
   1400067ab:	mov    rbp,rcx
   1400067ae:	mov    rdx,r9
   1400067b1:	mov    rcx,rsi
   1400067b4:	mov    rdi,r9
   1400067b7:	lea    r8,[rbx+0x4]
   1400067bb:	call   0x14000671c
   1400067c0:	mov    r11d,DWORD PTR [rbx+0x4]
   1400067c4:	mov    r8d,0x1
   1400067ca:	mov    r10d,DWORD PTR [rbp+0x4]
   1400067ce:	mov    eax,r11d
   1400067d1:	and    eax,r8d
   1400067d4:	and    r11d,0x2
   1400067d8:	and    r10b,0x66
   1400067dc:	cmove  r11d,eax
   1400067e0:	test   r11d,r11d
   1400067e3:	je     0x1400067f9
   1400067e5:	mov    r9,rdi
   1400067e8:	mov    r8,r14
   1400067eb:	mov    rdx,rsi
   1400067ee:	mov    rcx,rbp
   1400067f1:	call   0x140005c98
   1400067f6:	mov    r8d,eax
   1400067f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400067fe:	mov    eax,r8d
   140006801:	mov    rbp,QWORD PTR [rsp+0x38]
   140006806:	mov    rsi,QWORD PTR [rsp+0x40]
   14000680b:	mov    rdi,QWORD PTR [rsp+0x48]
   140006810:	add    rsp,0x20
   140006814:	pop    r14
   140006816:	ret    
   140006817:	int3   
   140006818:	int3   
   140006819:	int3   
   14000681a:	int3   
   14000681b:	int3   
   14000681c:	int3   
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	int3   
   140006821:	int3   
   140006822:	int3   
   140006823:	int3   
   140006824:	int3   
   140006825:	int3   
   140006826:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006830:	jmp    rax
   140006832:	int3   
   140006833:	int3   
   140006834:	int3   
   140006835:	int3   
   140006836:	int3   
   140006837:	int3   
   140006838:	int3   
   140006839:	int3   
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	int3   
   14000683f:	int3   
   140006840:	int3   
   140006841:	int3   
   140006842:	int3   
   140006843:	int3   
   140006844:	int3   
   140006845:	int3   
   140006846:	lea    rcx,[rdx+0x28]
   14000684d:	jmp    0x140002698
   140006852:	lea    rcx,[rdx+0x20]
   140006859:	jmp    0x140002698
   14000685e:	lea    rcx,[rdx+0x30]
   140006865:	jmp    0x140002698
   14000686a:	lea    rcx,[rdx+0x38]
   140006871:	jmp    0x140002698
   140006876:	int3   
   140006877:	int3   
   140006878:	int3   
   140006879:	int3   
   14000687a:	int3   
   14000687b:	int3   
   14000687c:	lea    rcx,[rdx+0x20]
   140006883:	jmp    0x140002b8c
   140006888:	lea    rcx,[rdx+0x88]
   14000688f:	jmp    0x140002bb0
   140006894:	rex push rbp
   140006896:	sub    rsp,0x20
   14000689a:	mov    rbp,rdx
   14000689d:	mov    rdx,QWORD PTR [rbp+0x30]
   1400068a1:	mov    rcx,QWORD PTR [rbp+0x38]
   1400068a5:	call   0x140001d40
   1400068aa:	add    rsp,0x20
   1400068ae:	pop    rbp
   1400068af:	ret    
   1400068b0:	int3   
   1400068b1:	int3   
   1400068b2:	int3   
   1400068b3:	int3   
   1400068b4:	int3   
   1400068b5:	int3   
   1400068b6:	rex push rbp
   1400068b8:	sub    rsp,0x20
   1400068bc:	mov    rbp,rdx
   1400068bf:	mov    rax,QWORD PTR [rcx]
   1400068c2:	mov    rdx,rcx
   1400068c5:	mov    ecx,DWORD PTR [rax]
   1400068c7:	call   0x14000584e
   1400068cc:	nop
   1400068cd:	add    rsp,0x20
   1400068d1:	pop    rbp
   1400068d2:	ret    
   1400068d3:	int3   
   1400068d4:	int3   
   1400068d5:	int3   
   1400068d6:	int3   
   1400068d7:	int3   
   1400068d8:	int3   
   1400068d9:	int3   
   1400068da:	mov    QWORD PTR [rsp+0x10],rdx
   1400068df:	push   rbp
   1400068e0:	sub    rsp,0x20
   1400068e4:	mov    rbp,rdx
   1400068e7:	and    QWORD PTR [rbp+0x50],0x0
   1400068ec:	lea    rax,[rip+0xffffffffffffee1a]        # 0x14000570d
   1400068f3:	add    rsp,0x20
   1400068f7:	pop    rbp
   1400068f8:	ret    
   1400068f9:	int3   
   1400068fa:	int3   
   1400068fb:	int3   
   1400068fc:	int3   
   1400068fd:	int3   
   1400068fe:	int3   
   1400068ff:	int3   
   140006900:	rex push rbp
   140006902:	sub    rsp,0x20
   140006906:	mov    rbp,rdx
   140006909:	mov    ecx,0x8
   14000690e:	call   0x140005cb0
   140006913:	nop
   140006914:	add    rsp,0x20
   140006918:	pop    rbp
   140006919:	ret    
   14000691a:	int3   
   14000691b:	int3   
   14000691c:	int3   
   14000691d:	int3   
   14000691e:	int3   
   14000691f:	int3   
   140006920:	int3   
   140006921:	int3   
   140006922:	int3   
   140006923:	int3   
   140006924:	int3   
   140006925:	int3   
   140006926:	int3   
   140006927:	int3   
   140006928:	int3   
   140006929:	int3   
   14000692a:	int3   
   14000692b:	int3   
   14000692c:	int3   
   14000692d:	int3   
   14000692e:	int3   
   14000692f:	int3   
   140006930:	rex push rbp
   140006932:	sub    rsp,0x20
   140006936:	mov    rbp,rdx
   140006939:	mov    rax,QWORD PTR [rcx]
   14000693c:	xor    ecx,ecx
   14000693e:	cmp    DWORD PTR [rax],0xc0000005
   140006944:	sete   cl
   140006947:	mov    eax,ecx
   140006949:	add    rsp,0x20
   14000694d:	pop    rbp
   14000694e:	ret    
   14000694f:	int3   
   140006950:	int3   
   140006951:	int3   
   140006952:	int3   
   140006953:	int3   
   140006954:	int3   
   140006955:	int3   
   140006956:	mov    QWORD PTR [rsp+0x10],rdx
   14000695b:	push   rbp
   14000695c:	sub    rsp,0x20
   140006960:	mov    rbp,rdx
   140006963:	mov    rcx,QWORD PTR [rbp+0x68]
   140006967:	mov    QWORD PTR [rbp+0x68],rcx
   14000696b:	xor    eax,eax
   14000696d:	add    rcx,0x1
   140006971:	je     0x140006988
   140006973:	cmp    rcx,0xffffffffffffffff
   140006977:	ja     0x140006983
   140006979:	call   0x140005cd8
   14000697e:	test   rax,rax
   140006981:	jne    0x140006988
   140006983:	call   0x140006010
   140006988:	mov    QWORD PTR [rbp+0x78],rax
   14000698c:	lea    rax,[rip+0xfffffffffffff5ab]        # 0x140005f3e
   140006993:	add    rsp,0x20
   140006997:	pop    rbp
   140006998:	ret    
   140006999:	int3   
   14000699a:	mov    QWORD PTR [rsp+0x10],rdx
   14000699f:	push   rbp
   1400069a0:	sub    rsp,0x20
   1400069a4:	mov    rbp,rdx
   1400069a7:	xor    r8d,r8d
   1400069aa:	mov    dl,0x1
   1400069ac:	mov    rcx,QWORD PTR [rbp+0x60]
   1400069b0:	call   0x140005fb0
   1400069b5:	xor    edx,edx
   1400069b7:	xor    ecx,ecx
   1400069b9:	call   0x14000669c
   1400069be:	nop
   1400069bf:	int3   
   1400069c0:	int3   
   1400069c1:	int3   
   1400069c2:	int3   
   1400069c3:	int3   
   1400069c4:	int3   
   1400069c5:	int3   
   1400069c6:	int3   
   1400069c7:	int3   
   1400069c8:	int3   
   1400069c9:	int3   
   1400069ca:	int3   
   1400069cb:	int3   
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	lea    rcx,[rip+0x5d99]        # 0x14000c770
   1400069d7:	jmp    0x1400037dc
   1400069dc:	int3   
   1400069dd:	int3   
   1400069de:	int3   
   1400069df:	int3   
   1400069e0:	int3   
   1400069e1:	int3   
   1400069e2:	int3   
   1400069e3:	int3   
   1400069e4:	int3   
   1400069e5:	int3   
   1400069e6:	int3   
   1400069e7:	int3   
   1400069e8:	int3   
   1400069e9:	int3   
   1400069ea:	int3   
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	lea    rax,[rip+0x1bf9]        # 0x1400085f0
   1400069f7:	mov    QWORD PTR [rip+0x5622],rax        # 0x14000c020
   1400069fe:	ret    
   1400069ff:	int3   
   140006a00:	int3   
   140006a01:	int3   
   140006a02:	int3   
   140006a03:	int3   
   140006a04:	int3   
   140006a05:	int3   
   140006a06:	int3   
   140006a07:	int3   
   140006a08:	int3   
   140006a09:	int3   
   140006a0a:	int3   
   140006a0b:	int3   
   140006a0c:	int3   
   140006a0d:	int3   
   140006a0e:	int3   
   140006a0f:	int3   
   140006a10:	lea    rax,[rip+0x1bd9]        # 0x1400085f0
   140006a17:	mov    QWORD PTR [rip+0x560a],rax        # 0x14000c028
   140006a1e:	ret    
   140006a1f:	int3   
   140006a20:	int3   
   140006a21:	int3   
   140006a22:	int3   
   140006a23:	int3   
   140006a24:	int3   
   140006a25:	int3   
   140006a26:	int3   
   140006a27:	int3   
   140006a28:	int3   
   140006a29:	int3   
   140006a2a:	int3   
   140006a2b:	int3   
   140006a2c:	int3   
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	lea    rax,[rip+0x1bb9]        # 0x1400085f0
   140006a37:	mov    QWORD PTR [rip+0x55f2],rax        # 0x14000c030
   140006a3e:	ret    

Disassembly of section .imrsiv:

0000000140007000 <.imrsiv>:
   140007000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000140008000 <.rdata>:
   140008000:	sub    BYTE PTR [rax+rax*1+0x0],dh
   140008007:	add    BYTE PTR [rdx],bh
   140008009:	mov    ah,0x0
   14000800b:	add    BYTE PTR [rax],al
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rdx-0x4c],cl
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	fs mov ah,0x0
   14000801b:	add    BYTE PTR [rax],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rsi-0x4c],bh
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	xchg   esi,eax
   140008029:	mov    ah,0x0
   14000802b:	add    BYTE PTR [rax],al
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rsi+0xb4],ah
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rsi+0xb4],bh
	...
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    BYTE PTR [rdx-0x45],ch
	...
   140008056:	add    BYTE PTR [rax],al
   140008058:	and    BYTE PTR [rbp+0x0],dh
   14000805e:	add    BYTE PTR [rax],al
   140008060:	or     al,0xb5
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	div    BYTE PTR [rax+rax*1+0x0]
   14000806f:	add    dl,ah
   140008071:	mov    ah,0x0
	...
   14000807f:	add    al,al
   140008081:	mov    bh,0x0
   140008083:	add    BYTE PTR [rax],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    BYTE PTR [rdi+rsi*4],bl
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	shl    BYTE PTR [rdi+0x0],cl
   140008096:	add    BYTE PTR [rax],al
   140008098:	hlt    
   140008099:	mov    dh,0x0
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    al,ch
   1400080a1:	mov    bh,0x0
   1400080a3:	add    BYTE PTR [rax],al
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    dl,cl
   1400080a9:	mov    dh,0x0
   1400080ab:	add    BYTE PTR [rax],al
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    BYTE PTR [rsi-0x49],ah
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    BYTE PTR [rax],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	xor    bh,BYTE PTR [rax+0x0]
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	push   0xb6
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rsi-0x47],dh
	...
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	xor    bh,BYTE PTR [rcx+0x0]
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	fs mov eax,0x0
	...
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	(bad)  
   1400080f1:	mov    ecx,0x0
	...
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	(bad)  
   140008101:	mov    eax,0x0
	...
   14000810e:	add    BYTE PTR [rax],al
   140008110:	rex.WRX movabs rcx,0xb962000000000000
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    BYTE PTR [rax],al
   14000811e:	add    BYTE PTR [rax],al
   140008120:	mov    al,0xb8
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    BYTE PTR [rax],al
   140008126:	add    BYTE PTR [rax],al
   140008128:	mov    bh,BYTE PTR [rcx+0x0]
   14000812e:	add    BYTE PTR [rax],al
   140008130:	push   rdx
   140008131:	mov    eax,0x0
	...
   14000813e:	add    BYTE PTR [rax],al
   140008140:	xchg   esi,eax
   140008141:	mov    eax,0x0
	...
   14000814e:	add    BYTE PTR [rax],al
   140008150:	add    al,0xb9
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	(bad)  
   140008159:	mov    ecx,0x0
   14000815e:	add    BYTE PTR [rax],al
   140008160:	lock mov eax,0x0
	...
   14000816e:	add    BYTE PTR [rax],al
   140008170:	rex.WX movabs rax,0x0
   14000817a:	add    BYTE PTR [rax],al
   14000817c:	add    BYTE PTR [rax],al
   14000817e:	add    BYTE PTR [rax],al
   140008180:	(bad)  
   140008181:	mov    eax,0x0
   140008186:	add    BYTE PTR [rax],al
   140008188:	loopne 0x140008142
	...
   140008196:	add    BYTE PTR [rax],al
   140008198:	push   rdx
   140008199:	mov    bh,0x0
   14000819b:	add    BYTE PTR [rax],al
   14000819d:	add    BYTE PTR [rax],al
   14000819f:	add    BYTE PTR [rsi+rsi*4+0x0],bh
	...
   1400081af:	add    BYTE PTR [rdi+rsi*4],dh
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	movabs al,ds:0xb0000000000000b7
   1400081c1:	mov    dh,0x0
	...
   1400081cf:	add    BYTE PTR [rsi],al
   1400081d1:	mov    bh,0x0
   1400081d3:	add    BYTE PTR [rax],al
   1400081d5:	add    BYTE PTR [rax],al
   1400081d7:	add    BYTE PTR [rsi],dl
   1400081d9:	mov    eax,0x0
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	xor    BYTE PTR [rdi+0x0],0x0
   1400081e7:	add    BYTE PTR [rax+0xb6],dl
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rax],al
   1400081f1:	mov    eax,0x0
   1400081f6:	add    BYTE PTR [rax],al
   1400081f8:	fdiv   QWORD PTR [rsi+0x0]
	...
   140008206:	add    BYTE PTR [rax],al
   140008208:	call   0x1400082c2
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    ah,bh
   140008211:	mov    ch,0x0
   140008213:	add    BYTE PTR [rax],al
   140008215:	add    BYTE PTR [rax],al
   140008217:	add    BYTE PTR [rsi+0xb5],ah
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    BYTE PTR [rsi+0xb5],bl
   140008225:	add    BYTE PTR [rax],al
   140008227:	add    ah,al
   140008229:	mov    ch,0x0
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    al,dl
   140008231:	mov    ch,0x0
   140008233:	add    BYTE PTR [rax],al
   140008235:	add    BYTE PTR [rax],al
   140008237:	add    BYTE PTR [rax],cl
   140008239:	mov    dh,0x0
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rax],ch
   140008241:	mov    dh,0x0
   140008243:	add    BYTE PTR [rax],al
   140008245:	add    BYTE PTR [rax],al
   140008247:	add    BYTE PTR [rsi],bh
   140008249:	mov    dh,0x0
   14000824b:	add    BYTE PTR [rax],al
   14000824d:	add    BYTE PTR [rax],al
   14000824f:	add    BYTE PTR [rsi+0xb5],dl
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    BYTE PTR [rbp+rsi*4+0x0],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	jb     0x140008217
   140008262:	add    BYTE PTR [rax],al
   140008264:	add    BYTE PTR [rax],al
   140008266:	add    BYTE PTR [rax],al
   140008268:	rex.RX mov sil,0x0
   14000826b:	add    BYTE PTR [rax],al
   14000826d:	add    BYTE PTR [rax],al
   14000826f:	add    BYTE PTR [rax-0x4a],dl
   140008272:	add    BYTE PTR [rax],al
   140008274:	add    BYTE PTR [rax],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	pop    rsi
   140008279:	mov    dh,0x0
   14000827b:	add    BYTE PTR [rax],al
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    dl,dh
   140008281:	mov    ch,0x0
   140008283:	add    BYTE PTR [rax],al
   140008285:	add    BYTE PTR [rax],al
   140008287:	add    BYTE PTR [rax+0xb5],dh
   14000828d:	add    BYTE PTR [rax],al
   14000828f:	add    BYTE PTR [rbp+rsi*4+0x0],ah
   140008293:	add    BYTE PTR [rax],al
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    BYTE PTR [rsi-0x4b],dl
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    BYTE PTR [rax],al
   1400082a0:	push   rdx
   1400082a1:	mov    esp,0x0
   1400082a6:	add    BYTE PTR [rax],al
   1400082a8:	cmp    al,0xbc
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	(bad)  
   1400082b1:	mov    esp,0x0
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	(bad)  
   1400082b9:	mov    esp,0x0
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	call   0x140008380
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    al,cl
   1400082c9:	mov    ebx,0x0
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	test   al,0xbb
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	add    BYTE PTR [rax],al
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	rex.RX mov bpl,0x0
   1400082db:	add    BYTE PTR [rax],al
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rdx],bh
   1400082e1:	mov    ch,0x0
   1400082e3:	add    BYTE PTR [rax],al
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    BYTE PTR [rax+0xbb],cl
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    BYTE PTR [rdx+0xbb],dl
   1400082f5:	add    BYTE PTR [rax],al
   1400082f7:	add    BYTE PTR [rsi+0xbb],bl
   1400082fd:	add    BYTE PTR [rax],al
   1400082ff:	add    BYTE PTR [rsp+rdi*4+0x0],bl
	...
   14000830f:	add    BYTE PTR [rax+0x1d],al
   140008312:	add    BYTE PTR [rax+0x1],al
   140008315:	add    BYTE PTR [rax],al
   140008317:	add    BYTE PTR [rax],dh
   140008319:	push   0x14000
	...
   140008326:	add    BYTE PTR [rax],al
   140008328:	mov    al,0x53
   14000832a:	add    BYTE PTR [rax+0x1],al
   14000832d:	add    BYTE PTR [rax],al
   14000832f:	add    BYTE PTR [rax+0x10],ah
   140008332:	add    BYTE PTR [rax+0x1],al
   140008335:	add    BYTE PTR [rax],al
   140008337:	add    BYTE PTR [rax+0x10],dh
   14000833a:	add    BYTE PTR [rax+0x1],al
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    BYTE PTR [rax+0x1400010],al
   140008345:	add    BYTE PTR [rax],al
   140008347:	add    BYTE PTR [rax],al
   140008349:	adc    BYTE PTR [rax],al
   14000834b:	rex add DWORD PTR [rax],eax
	...
   14000835e:	add    BYTE PTR [rax],al
   140008360:	rcl    BYTE PTR [rdx+0x0],1
   140008363:	rex add DWORD PTR [rax],eax
   140008366:	add    BYTE PTR [rax],al
   140008368:	xor    BYTE PTR [rax+0x0],bl
   14000836b:	rex add DWORD PTR [rax],eax
	...
   140008376:	add    BYTE PTR [rax],al
   140008378:	add    BYTE PTR [rax],dl
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	(bad)  
   14000837d:	adc    BYTE PTR [rax],al
   14000837f:	add    BYTE PTR [rax+0x10],dh
   140008382:	add    BYTE PTR [rax],al
   140008384:	adc    BYTE PTR [rax],0x0
   140008387:	add    BYTE PTR [rax-0xffffff0],ah
   14000838d:	adc    BYTE PTR [rax],al
   14000838f:	add    BYTE PTR [rax],dh
   140008391:	adc    DWORD PTR [rax],eax
   140008393:	add    al,dl
   140008395:	adc    DWORD PTR [rax],eax
   140008397:	add    al,dh
   140008399:	adc    DWORD PTR [rax],eax
   14000839b:	add    BYTE PTR [rax+0x12],dh
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	mov    al,0x13
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	(bad)  
   1400083a5:	adc    al,0x0
   1400083a7:	add    al,al
   1400083a9:	adc    al,0x0
   1400083ab:	add    BYTE PTR [rax+0x15],dh
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	adc    BYTE PTR [rsi],dl
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	rcl    BYTE PTR [rdi],0x0
   1400083b7:	add    al,dh
   1400083b9:	(bad)  
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	(bad)  
   1400083bd:	sbb    BYTE PTR [rax],al
   1400083bf:	add    al,dh
   1400083c1:	sbb    BYTE PTR [rax],al
   1400083c3:	add    BYTE PTR [rax+0x19],ah
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	add    BYTE PTR [rdx],bl
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	rex sbb eax,DWORD PTR [rax]
   1400083cf:	add    BYTE PTR [rax+0x1d],al
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	push   rax
   1400083d5:	sbb    eax,0x1d600000
   1400083da:	add    BYTE PTR [rax],al
   1400083dc:	rcr    BYTE PTR [rip+0x20000000],1        # 0x1600083e2
   1400083e2:	add    BYTE PTR [rax],al
   1400083e4:	and    al,BYTE PTR [rax]
   1400083e7:	add    BYTE PTR [rax+0x22],dl
   1400083ea:	add    BYTE PTR [rax],al
   1400083ec:	lock and al,BYTE PTR [rax]
   1400083ef:	add    BYTE PTR [rax+0x23],dh
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	shl    BYTE PTR [rbx],1
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	and    BYTE PTR [rax+rax*1],0x0
   1400083fc:	and    BYTE PTR [rip+0x25f00000],0x0        # 0x165f08403
   140008403:	add    BYTE PTR [rax],ah
   140008405:	add    BYTE PTR es:[rax],al
   140008408:	jo     0x140008430
   14000840a:	add    BYTE PTR [rax],al
   14000840c:	sub    BYTE PTR [rax],0x0
   14000840f:	add    al,al
   140008411:	sub    DWORD PTR [rax],eax
   140008413:	add    BYTE PTR [rax+0x2b],ah
   140008416:	add    BYTE PTR [rax],al
   140008418:	shr    BYTE PTR [rbx],1
   14000841a:	add    BYTE PTR [rax],al
   14000841c:	loopne 0x140008449
   14000841e:	add    BYTE PTR [rax],al
   140008420:	lock sub eax,DWORD PTR [rax]
   140008423:	add    BYTE PTR [rax],al
   140008425:	sub    al,0x0
   140008427:	add    BYTE PTR [rax],dl
   140008429:	sub    al,0x0
   14000842b:	add    BYTE PTR [rax],ah
   14000842d:	sub    al,0x0
   14000842f:	add    BYTE PTR [rax],dh
   140008431:	sub    al,0x0
   140008433:	add    BYTE PTR [rax+0x2c],al
   140008436:	add    BYTE PTR [rax],al
   140008438:	push   rax
   140008439:	sub    al,0x0
   14000843b:	add    BYTE PTR [rax+0x2c],ah
   14000843e:	add    BYTE PTR [rax],al
   140008440:	jo     0x14000846e
   140008442:	add    BYTE PTR [rax],al
   140008444:	movabs al,ds:0xf0000032a0000031
   14000844d:	xor    al,BYTE PTR [rax]
   14000844f:	add    BYTE PTR [rax],dl
   140008451:	xor    eax,0x35b00000
   140008456:	add    BYTE PTR [rax],al
   140008458:	adc    BYTE PTR [rsi],dh
   14000845a:	add    BYTE PTR [rax],al
   14000845c:	push   rax
   14000845d:	(bad)  
   14000845e:	add    BYTE PTR [rax],al
   140008460:	jo     0x140008499
   140008462:	add    BYTE PTR [rax],al
   140008464:	xor    BYTE PTR [rdi],0x0
   140008467:	add    al,dl
   140008469:	(bad)  
   14000846a:	add    BYTE PTR [rax],al
   14000846c:	(bad)  
   14000846d:	cmp    BYTE PTR [rax],al
   14000846f:	add    BYTE PTR [rax-0x5fffffc8],al
   140008475:	cmp    BYTE PTR [rax],al
   140008477:	add    al,dl
   140008479:	cmp    BYTE PTR [rax],al
   14000847b:	add    BYTE PTR [rax],dl
   14000847d:	cmp    DWORD PTR [rax],eax
   14000847f:	add    BYTE PTR [rax+0x39],dh
   140008482:	add    BYTE PTR [rax],al
   140008484:	movabs al,ds:0x7000003ec0000039
   14000848d:	(bad)  
   14000848e:	add    BYTE PTR [rax],al
   140008490:	nop
   140008491:	(bad)  
   140008492:	add    BYTE PTR [rax],al
   140008494:	rol    BYTE PTR [rcx+0x0],0x0
   140008498:	xor    BYTE PTR [rdx+0x0],al
   14000849b:	add    BYTE PTR [rax-0x2fffffbe],al
   1400084a1:	rex.X add BYTE PTR [rax],al
   1400084a4:	and    BYTE PTR [rbx+0x0],al
   1400084a7:	add    BYTE PTR [rax+0x43],dh
   1400084aa:	add    BYTE PTR [rax],al
   1400084ac:	mov    al,0x43
   1400084ae:	add    BYTE PTR [rax],al
   1400084b0:	push   rax
   1400084b1:	add    BYTE PTR [rax],r8b
   1400084b4:	rol    BYTE PTR [rax+rax*1+0x0],1
   1400084b8:	adc    BYTE PTR [rsi+0x0],al
   1400084bb:	add    BYTE PTR [rax],al
   1400084bd:	rex.W add BYTE PTR [rax],al
   1400084c0:	push   rax
   1400084c1:	rex.W add BYTE PTR [rax],al
   1400084c4:	ror    BYTE PTR [rax+0x0],0x0
   1400084c8:	add    BYTE PTR [rcx+0x0],cl
   1400084cb:	add    BYTE PTR [rax+0x49],dh
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	mov    al,0x49
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	push   rax
   1400084d5:	rex.WX add BYTE PTR [rax],al
   1400084d8:	ror    BYTE PTR [rdx+0x0],1
   1400084db:	add    BYTE PTR [rax],dl
   1400084dd:	rex.WR add BYTE PTR [rax],r8b
   1400084e0:	add    BYTE PTR [rsi+0x0],cl
   1400084e3:	add    BYTE PTR [rax+0x4e],ah
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	add    BYTE PTR [rdi+0x0],cl
   1400084eb:	add    BYTE PTR [rax+0x50],al
   1400084ee:	add    BYTE PTR [rax],al
   1400084f0:	rcl    BYTE PTR [rdx+0x0],1
   1400084f3:	add    BYTE PTR [rax-0x7fffffad],dh
   1400084f9:	push   rsi
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	loopne 0x140008554
   1400084fe:	add    BYTE PTR [rax],al
   140008500:	lock push rdi
   140008502:	add    BYTE PTR [rax],al
   140008504:	xor    BYTE PTR [rax+0x0],bl
   140008507:	add    BYTE PTR [rax],ah
   140008509:	pop    rbx
   14000850a:	add    BYTE PTR [rax],al
   14000850c:	add    BYTE PTR [rsi+0x0],bl
   14000850f:	add    BYTE PTR [rax],dh
   140008511:	pop    rsi
   140008512:	add    BYTE PTR [rax],al
   140008514:	jo     0x140008574
   140008516:	add    BYTE PTR [rax],al
   140008518:	loopne 0x14000857c
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	xor    BYTE PTR [rbx+0x0],ah
   14000851f:	add    BYTE PTR [rax+0x63],dl
   140008522:	add    BYTE PTR [rax],al
   140008524:	jo     0x140008589
   140008526:	add    BYTE PTR [rax],al
   140008528:	and    BYTE PTR [rax+rax*1+0x0],0xf0
   14000852d:	add    BYTE PTR fs:[rax],al
   140008530:	rex
   140008531:	add    BYTE PTR gs:[rax],al
   140008534:	mov    al,0x65
   140008536:	add    BYTE PTR [rax],al
   140008538:	shl    BYTE PTR [rbp+0x0],0x0
   14000853c:	shl    BYTE PTR [rbp+0x0],1
   14000853f:	add    BYTE PTR [rax-0x3fffff9a],dl
   140008545:	data16 add BYTE PTR [rax],al
   140008548:	shr    BYTE PTR [rcx+0x0],1
   14000854b:	add    al,dh
   14000854d:	imul   eax,DWORD PTR [rax],0x6a1000
   140008553:	add    BYTE PTR [rax],dh
   140008555:	push   0x0
	...
   14000855f:	add    BYTE PTR [rdx+0x61],ah
   140008562:	and    BYTE PTR fs:[rcx+0x6c],ah
   140008566:	ins    BYTE PTR es:[rdi],dx
   140008567:	outs   dx,DWORD PTR ds:[rsi]
   140008568:	movsxd esp,DWORD PTR [rcx+0x74]
   14000856b:	imul   ebp,DWORD PTR [rdi+0x6e],0x5220000
   140008572:	xchg   ebx,eax
   140008573:	sbb    DWORD PTR [rdx],eax
   140008575:	add    BYTE PTR [rax],al
   140008577:	add    ah,bl
   140008579:	stos   DWORD PTR es:[rdi],eax
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	add    DWORD PTR [rax],eax
   14000857e:	add    BYTE PTR [rax],al
   140008580:	in     al,dx
   140008581:	stos   DWORD PTR es:[rdi],eax
   140008582:	add    BYTE PTR [rax],al
   140008584:	(bad)  
   140008585:	add    BYTE PTR [rax],al
   140008587:	add    BYTE PTR [rax],bl
   140008589:	lods   al,BYTE PTR ds:[rsi]
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	and    BYTE PTR [rax],al
   14000858e:	add    BYTE PTR [rax],al
   140008590:	add    BYTE PTR [rax],al
   140008592:	add    BYTE PTR [rax],al
   140008594:	add    DWORD PTR [rax],eax
   140008596:	add    BYTE PTR [rax],al
   140008598:	rex rol DWORD PTR [rax],0x40
   14000859c:	add    DWORD PTR [rax],eax
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	loopne 0x140008563
   1400085a2:	add    BYTE PTR [rax+0x1],al
   1400085a5:	add    BYTE PTR [rax],al
   1400085a7:	add    BYTE PTR [rdx],ah
   1400085a9:	add    eax,0x41993
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	cld    
   1400085b1:	lods   al,BYTE PTR ds:[rsi]
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	add    al,BYTE PTR [rax]
   1400085b6:	add    BYTE PTR [rax],al
   1400085b8:	sbb    al,0xad
   1400085ba:	add    BYTE PTR [rax],al
   1400085bc:	or     BYTE PTR [rax],al
   1400085be:	add    BYTE PTR [rax],al
   1400085c0:	jo     0x14000856f
   1400085c2:	add    BYTE PTR [rax],al
   1400085c4:	and    BYTE PTR [rax],al
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	add    BYTE PTR [rax],al
   1400085ca:	add    BYTE PTR [rax],al
   1400085cc:	add    DWORD PTR [rax],eax
   1400085ce:	add    BYTE PTR [rax],al
   1400085d0:	xor    BYTE PTR [rsi+0x0],bl
   1400085d3:	rex add DWORD PTR [rax],eax
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	nop
   1400085d9:	data16 add BYTE PTR [rax+0x1],al
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    BYTE PTR [rax+0x5e],dh
   1400085e2:	add    BYTE PTR [rax+0x1],al
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    BYTE PTR [rax+0x1400066],dl
   1400085ed:	add    BYTE PTR [rax],al
   1400085ef:	add    BYTE PTR [rax],al
   1400085f1:	pop    rsi
   1400085f2:	add    BYTE PTR [rax+0x1],al
   1400085f5:	add    BYTE PTR [rax],al
   1400085f7:	add    al,ah
   1400085f9:	push   rsi
   1400085fa:	add    BYTE PTR [rax+0x1],al
   1400085fd:	add    BYTE PTR [rax],al
   1400085ff:	add    al,ah
   140008601:	push   rsi
   140008602:	add    BYTE PTR [rax+0x1],al
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rax],dh
   140008609:	movsxd eax,DWORD PTR [rax]
   14000860b:	rex add DWORD PTR [rax],eax
   14000860e:	add    BYTE PTR [rax],al
   140008610:	push   rax
   140008611:	movsxd eax,DWORD PTR [rax]
   140008613:	rex add DWORD PTR [rax],eax
   140008616:	add    BYTE PTR [rax],al
   140008618:	jo     0x14000867d
   14000861a:	add    BYTE PTR [rax+0x1],al
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rax],al
   140008621:	pop    rsi
   140008622:	add    BYTE PTR [rax+0x1],al
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    BYTE PTR [rax+0x1400065],dh
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rax+0x1400064],al
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rax],dh
   140008639:	movsxd eax,DWORD PTR [rax]
   14000863b:	rex add DWORD PTR [rax],eax
   14000863e:	add    BYTE PTR [rax],al
   140008640:	push   rax
   140008641:	movsxd eax,DWORD PTR [rax]
   140008643:	rex add DWORD PTR [rax],eax
   140008646:	add    BYTE PTR [rax],al
   140008648:	jo     0x1400086ad
   14000864a:	add    BYTE PTR [rax+0x1],al
   14000864d:	add    BYTE PTR [rax],al
   14000864f:	add    BYTE PTR [rdi+0x65],ah
   140008652:	outs   dx,BYTE PTR ds:[rsi]
   140008653:	gs jb  0x1400086bf
   140008656:	movsxd eax,DWORD PTR [rax]
   140008658:	jne    0x1400086c8
   14000865a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000865e:	outs   dx,BYTE PTR ds:[rsi]
   14000865f:	and    BYTE PTR [rbp+0x72],ah
   140008662:	jb     0x1400086d3
   140008664:	jb     0x140008666
   140008666:	add    BYTE PTR [rax],al
   140008668:	add    BYTE PTR [rsi+0x0],bl
   14000866b:	rex add DWORD PTR [rax],eax
   14000866e:	add    BYTE PTR [rax],al
   140008670:	shl    BYTE PTR [rbp+0x0],0x40
   140008674:	add    DWORD PTR [rax],eax
   140008676:	add    BYTE PTR [rax],al
   140008678:	lock add BYTE PTR fs:[rax+0x1],al
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    BYTE PTR [rax],dh
   140008681:	movsxd eax,DWORD PTR [rax]
   140008683:	rex add DWORD PTR [rax],eax
   140008686:	add    BYTE PTR [rax],al
   140008688:	push   rax
   140008689:	movsxd eax,DWORD PTR [rax]
   14000868b:	rex add DWORD PTR [rax],eax
   14000868e:	add    BYTE PTR [rax],al
   140008690:	jo     0x1400086f5
   140008692:	add    BYTE PTR [rax+0x1],al
   140008695:	add    BYTE PTR [rax],al
   140008697:	add    BYTE PTR [rcx+0x6f],ch
   14000869a:	jae    0x140008710
   14000869c:	jb     0x140008703
   14000869e:	(bad)  
   14000869f:	ins    DWORD PTR es:[rdi],dx
	...
   1400086a8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400086af:	ins    DWORD PTR es:[rdi],dx
   1400086b0:	and    BYTE PTR [rbx+0x74],dh
   1400086b3:	jb     0x14000871a
   1400086b5:	(bad)  
   1400086b6:	ins    DWORD PTR es:[rdi],dx
   1400086b7:	and    BYTE PTR [rbp+0x72],ah
   1400086ba:	jb     0x14000872b
   1400086bc:	jb     0x1400086be
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	add    BYTE PTR [rsi+0x0],bl
   1400086c3:	rex add DWORD PTR [rax],eax
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	shl    BYTE PTR [rbp+0x0],1
   1400086cb:	rex add DWORD PTR [rax],eax
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	rex
   1400086d1:	add    BYTE PTR gs:[rax+0x1],al
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    al,ah
   1400086d9:	(bad)  
   1400086da:	add    BYTE PTR [rax+0x1],al
   1400086dd:	add    BYTE PTR [rax],al
   1400086df:	add    BYTE PTR [rax+0x63],dl
   1400086e2:	add    BYTE PTR [rax+0x1],al
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    BYTE PTR [rax+0x63],dh
   1400086ea:	add    BYTE PTR [rax+0x1],al
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rbx+0x79],dh
   1400086f2:	jae    0x140008768
   1400086f4:	gs ins DWORD PTR es:[rdi],dx
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400086ff:	and    BYTE PTR [rbx+0x74],dh
   140008702:	jb     0x14000876d
   140008704:	outs   dx,BYTE PTR ds:[rsi]
   140008705:	and    BYTE PTR [eax+0x6f],dh
   140008709:	jae    0x140008774
   14000870b:	je     0x140008776
   14000870d:	outs   dx,DWORD PTR ds:[rsi]
   14000870e:	outs   dx,BYTE PTR ds:[rsi]
   14000870f:	add    BYTE PTR [rbx+0x74],dh
   140008712:	jb     0x14000877d
   140008714:	outs   dx,BYTE PTR ds:[rsi]
   140008715:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000871a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000871e:	add    BYTE PTR [eip+0x0],al        # 0x140008725
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    al,dl
   140008729:	mov    eax,DWORD PTR [rax]
   14000872b:	rex add DWORD PTR [rax],eax
   14000872e:	add    BYTE PTR [rax],al
   140008730:	mov    bh,0x0
   140008732:	add    BYTE PTR [rax],al
   140008734:	add    BYTE PTR [rax],al
   140008736:	add    BYTE PTR [rax],al
   140008738:	call   0x1414087c8
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rax+rax*1],dl
   140008742:	add    BYTE PTR [rax],al
   140008744:	add    BYTE PTR [rax],al
   140008746:	add    BYTE PTR [rax],al
   140008748:	clc    
   140008749:	mov    eax,DWORD PTR [rax]
   14000874b:	rex add DWORD PTR [rax],eax
   14000874e:	add    BYTE PTR [rax],al
   140008750:	outs   dx,DWORD PTR ds:[rsi]
   140008751:	add    BYTE PTR [rax],al
   140008753:	add    BYTE PTR [rax],al
   140008755:	add    BYTE PTR [rax],al
   140008757:	add    BYTE PTR [rax],cl
   140008759:	mov    WORD PTR [rax],es
   14000875b:	rex add DWORD PTR [rax],eax
   14000875e:	add    BYTE PTR [rax],al
   140008760:	stos   BYTE PTR es:[rdi],al
   140008761:	add    BYTE PTR [rax],al
   140008763:	add    BYTE PTR [rax],al
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rax],ah
   140008769:	mov    WORD PTR [rax],es
   14000876b:	rex add DWORD PTR [rax],eax
   14000876e:	add    BYTE PTR [rax],al
   140008770:	mov    es,WORD PTR [rax]
   140008772:	add    BYTE PTR [rax],al
   140008774:	add    BYTE PTR [rax],al
   140008776:	add    BYTE PTR [rax],al
   140008778:	and    BYTE PTR [rax+rax*1+0x140],cl
   14000877f:	add    BYTE PTR [rdx+0x0],dl
   140008782:	add    BYTE PTR [rax],al
   140008784:	add    BYTE PTR [rax],al
   140008786:	add    BYTE PTR [rax],al
   140008788:	ror    BYTE PTR [rbx+0x14000],1
   14000878e:	add    BYTE PTR [rax],al
   140008790:	repz add eax,DWORD PTR [rax]
   140008793:	add    BYTE PTR [rax],al
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rax],bh
   140008799:	mov    WORD PTR [rax],es
   14000879b:	rex add DWORD PTR [rax],eax
   14000879e:	add    BYTE PTR [rax],al
   1400087a0:	hlt    
   1400087a1:	add    eax,DWORD PTR [rax]
   1400087a3:	add    BYTE PTR [rax],al
   1400087a5:	add    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rax],bh
   1400087a9:	mov    WORD PTR [rax],es
   1400087ab:	rex add DWORD PTR [rax],eax
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	cmc    
   1400087b1:	add    eax,DWORD PTR [rax]
   1400087b3:	add    BYTE PTR [rax],al
   1400087b5:	add    BYTE PTR [rax],al
   1400087b7:	add    BYTE PTR [rax],bh
   1400087b9:	mov    WORD PTR [rax],es
   1400087bb:	rex add DWORD PTR [rax],eax
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	adc    BYTE PTR [rax],al
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	add    BYTE PTR [rax],al
   1400087c6:	add    BYTE PTR [rax],al
   1400087c8:	ror    BYTE PTR [rbx+0x14000],1
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	(bad)  
   1400087d1:	add    BYTE PTR [rax],al
   1400087d3:	add    BYTE PTR [rax],al
   1400087d5:	add    BYTE PTR [rax],al
   1400087d7:	add    al,bh
   1400087d9:	mov    eax,DWORD PTR [rax]
   1400087db:	rex add DWORD PTR [rax],eax
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	or     DWORD PTR fs:[rax],eax
   1400087e3:	add    BYTE PTR [rax],al
   1400087e5:	add    BYTE PTR [rax],al
   1400087e7:	add    BYTE PTR [rax],ah
   1400087e9:	mov    WORD PTR [rax],es
   1400087eb:	rex add DWORD PTR [rax],eax
   1400087ee:	add    BYTE PTR [rax],al
   1400087f0:	xchg   ecx,eax
   1400087f1:	add    BYTE PTR [rax],al
   1400087f3:	add    BYTE PTR [rax],al
   1400087f5:	add    BYTE PTR [rax],al
   1400087f7:	add    BYTE PTR [rax-0x74],cl
   1400087fa:	add    BYTE PTR [rax+0x1],al
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rbx],cl
   140008801:	add    DWORD PTR [rax],eax
   140008803:	add    BYTE PTR [rax],al
   140008805:	add    BYTE PTR [rax],al
   140008807:	add    BYTE PTR [rax-0x74],ah
   14000880a:	add    BYTE PTR [rax+0x1],al
   14000880d:	add    BYTE PTR [rax],al
   14000880f:	add    BYTE PTR [rax+0x0],dh
   140008812:	add    BYTE PTR [rax],al
   140008814:	add    BYTE PTR [rax],al
   140008816:	add    BYTE PTR [rax],al
   140008818:	js     0x1400087a6
   14000881a:	add    BYTE PTR [rax+0x1],al
   14000881d:	add    BYTE PTR [rax],al
   14000881f:	add    BYTE PTR [rax+0x0],dl
   140008822:	add    BYTE PTR [rax],al
   140008824:	add    BYTE PTR [rax],al
   140008826:	add    BYTE PTR [rax],al
   140008828:	call   0x1414088b8
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rdx],al
   140008831:	add    BYTE PTR [rax],al
   140008833:	add    BYTE PTR [rax],al
   140008835:	add    BYTE PTR [rax],al
   140008837:	add    BYTE PTR [rax+0x140008c],dl
   14000883d:	add    BYTE PTR [rax],al
   14000883f:	add    BYTE PTR [rdi],ah
   140008841:	add    BYTE PTR [rax],al
   140008843:	add    BYTE PTR [rax],al
   140008845:	add    BYTE PTR [rax],al
   140008847:	add    BYTE PTR [rax-0x74],bh
   14000884a:	add    BYTE PTR [rax+0x1],al
   14000884d:	add    BYTE PTR [rax],al
   14000884f:	add    BYTE PTR [rax+rax*1],cl
   140008852:	add    BYTE PTR [rax],al
   140008854:	add    BYTE PTR [rax],al
   140008856:	add    BYTE PTR [rax],al
   140008858:	ror    BYTE PTR [rbx+0x14000],1
   14000885e:	add    BYTE PTR [rax],al
   140008860:	sldt   WORD PTR [rax]
   140008863:	add    BYTE PTR [rax],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    al,bh
   140008869:	mov    eax,DWORD PTR [rax]
   14000886b:	rex add DWORD PTR [rax],eax
   14000886e:	add    BYTE PTR [rax],al
   140008870:	add    DWORD PTR [rax],eax
   140008872:	add    BYTE PTR [rax],al
   140008874:	add    BYTE PTR [rax],al
   140008876:	add    BYTE PTR [rax],al
   140008878:	mov    al,0x8c
   14000887a:	add    BYTE PTR [rax+0x1],al
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rsi],al
   140008881:	add    BYTE PTR [rax],al
   140008883:	add    BYTE PTR [rax],al
   140008885:	add    BYTE PTR [rax],al
   140008887:	add    BYTE PTR [rax-0x74],ah
   14000888a:	add    BYTE PTR [rax+0x1],al
   14000888d:	add    BYTE PTR [rax],al
   14000888f:	add    BYTE PTR [rbx+0x0],bh
   140008892:	add    BYTE PTR [rax],al
   140008894:	add    BYTE PTR [rax],al
   140008896:	add    BYTE PTR [rax],al
   140008898:	(bad)  
   140008899:	mov    WORD PTR [rax],es
   14000889b:	rex add DWORD PTR [rax],eax
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	and    DWORD PTR [rax],eax
   1400088a2:	add    BYTE PTR [rax],al
   1400088a4:	add    BYTE PTR [rax],al
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	enter  0x8c,0x40
   1400088ac:	add    DWORD PTR [rax],eax
   1400088ae:	add    BYTE PTR [rax],al
   1400088b0:	(bad)  
   1400088b1:	add    BYTE PTR [rax],al
   1400088b3:	add    BYTE PTR [rax],al
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    al,cl
   1400088b9:	mov    WORD PTR [rax],es
   1400088bb:	rex add DWORD PTR [rax],eax
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	add    DWORD PTR [rax],0x0
   1400088c3:	add    BYTE PTR [rax],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    BYTE PTR [rax-0x74],ah
   1400088ca:	add    BYTE PTR [rax+0x1],al
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    dh,ah
   1400088d1:	add    eax,DWORD PTR [rax]
   1400088d3:	add    BYTE PTR [rax],al
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    al,dl
   1400088d9:	mov    eax,DWORD PTR [rax]
   1400088db:	rex add DWORD PTR [rax],eax
   1400088de:	add    BYTE PTR [rax],al
   1400088e0:	or     BYTE PTR [rax],al
   1400088e2:	add    BYTE PTR [rax],al
   1400088e4:	add    BYTE PTR [rax],al
   1400088e6:	add    BYTE PTR [rax],al
   1400088e8:	loopne 0x140008876
   1400088ea:	add    BYTE PTR [rax+0x1],al
   1400088ed:	add    BYTE PTR [rax],al
   1400088ef:	add    BYTE PTR [rip+0x0],dl        # 0x1400088f5
   1400088f5:	add    BYTE PTR [rax],al
   1400088f7:	add    al,bh
   1400088f9:	mov    WORD PTR [rax],es
   1400088fb:	rex add DWORD PTR [rax],eax
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	adc    DWORD PTR [rax],eax
   140008902:	add    BYTE PTR [rax],al
   140008904:	add    BYTE PTR [rax],al
   140008906:	add    BYTE PTR [rax],al
   140008908:	sbb    BYTE PTR [rbp+0x14000],cl
   14000890e:	add    BYTE PTR [rax],al
   140008910:	outs   dx,BYTE PTR ds:[rsi]
   140008911:	add    BYTE PTR [rax],al
   140008913:	add    BYTE PTR [rax],al
   140008915:	add    BYTE PTR [rax],al
   140008917:	add    BYTE PTR [rax],bh
   140008919:	mov    WORD PTR [rax],es
   14000891b:	rex add DWORD PTR [rax],eax
   14000891e:	add    BYTE PTR [rax],al
   140008920:	(bad)  
   140008921:	or     DWORD PTR [rax],eax
   140008923:	add    BYTE PTR [rax],al
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    BYTE PTR [rax],ah
   140008929:	mov    WORD PTR [rax],es
   14000892b:	rex add DWORD PTR [rax],eax
   14000892e:	add    BYTE PTR [rax],al
   140008930:	jrcxz  0x140008935
   140008932:	add    BYTE PTR [rax],al
   140008934:	add    BYTE PTR [rax],al
   140008936:	add    BYTE PTR [rax],al
   140008938:	xor    BYTE PTR [rbp+0x14000],cl
   14000893e:	add    BYTE PTR [rax],al
   140008940:	(bad)  
   140008941:	add    BYTE PTR [rax],al
   140008943:	add    BYTE PTR [rax],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    al,ah
   140008949:	mov    WORD PTR [rax],es
   14000894b:	rex add DWORD PTR [rax],eax
   14000894e:	add    BYTE PTR [rax],al
   140008950:	add    eax,DWORD PTR [rax]
   140008952:	add    BYTE PTR [rax],al
   140008954:	add    BYTE PTR [rax],al
   140008956:	add    BYTE PTR [rax],al
   140008958:	nop
   140008959:	mov    WORD PTR [rax],es
   14000895b:	rex add DWORD PTR [rax],eax
   14000895e:	add    BYTE PTR [rax],al
   140008960:	(bad)  
   140008961:	add    BYTE PTR [rax],al
   140008963:	add    BYTE PTR [rax],al
   140008965:	add    BYTE PTR [rax],al
   140008967:	add    BYTE PTR [rax],bh
   140008969:	mov    WORD PTR [rax],es
   14000896b:	rex add DWORD PTR [rax],eax
   14000896e:	add    BYTE PTR [rax],al
   140008970:	(bad)  
   140008971:	add    al,0x0
   140008973:	add    BYTE PTR [rax],al
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    al,bh
   140008979:	mov    WORD PTR [rax],es
   14000897b:	rex add DWORD PTR [rax],eax
   14000897e:	add    BYTE PTR [rax],al
   140008980:	sbb    DWORD PTR [rax],eax
   140008982:	add    BYTE PTR [rax],al
   140008984:	add    BYTE PTR [rax],al
   140008986:	add    BYTE PTR [rax],al
   140008988:	cmp    BYTE PTR [rax+rax*1+0x140],cl
   14000898f:	add    BYTE PTR [rax],ah
   140008991:	add    BYTE PTR [rax],al
   140008993:	add    BYTE PTR [rax],al
   140008995:	add    BYTE PTR [rax],al
   140008997:	add    al,dl
   140008999:	mov    eax,DWORD PTR [rax]
   14000899b:	rex add DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	add    al,0x0
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	add    BYTE PTR [rax],al
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	lea    rax,[rax]
   1400089ab:	rex add DWORD PTR [rax],eax
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	sbb    eax,0x0
   1400089b5:	add    BYTE PTR [rax],al
   1400089b7:	add    BYTE PTR [rax],bh
   1400089b9:	mov    WORD PTR [rax],es
   1400089bb:	rex add DWORD PTR [rax],eax
   1400089be:	add    BYTE PTR [rax],al
   1400089c0:	adc    eax,DWORD PTR [rax]
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	add    BYTE PTR [rax],al
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	ror    BYTE PTR [rbx+0x14000],1
   1400089ce:	add    BYTE PTR [rax],al
   1400089d0:	sbb    eax,0x27
   1400089d5:	add    BYTE PTR [rax],al
   1400089d7:	add    BYTE PTR [rax-0x73],ah
   1400089da:	add    BYTE PTR [rax+0x1],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    BYTE PTR [rax+0x27],al
   1400089e2:	add    BYTE PTR [rax],al
   1400089e4:	add    BYTE PTR [rax],al
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	js     0x140008977
   1400089ea:	add    BYTE PTR [rax+0x1],al
   1400089ed:	add    BYTE PTR [rax],al
   1400089ef:	add    BYTE PTR [rcx+0x27],al
   1400089f2:	add    BYTE PTR [rax],al
   1400089f4:	add    BYTE PTR [rax],al
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	mov    BYTE PTR [rbp+0x14000],cl
   1400089fe:	add    BYTE PTR [rax],al
   140008a00:	(bad)  
   140008a01:	(bad)  
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	add    BYTE PTR [rax],al
   140008a06:	add    BYTE PTR [rax],al
   140008a08:	movabs al,ds:0x350000000140008d
   140008a11:	(bad)  
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	add    BYTE PTR [rax],al
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	ror    BYTE PTR [rbp+0x14000],0x0
   140008a1f:	add    BYTE PTR [rcx],bl
   140008a21:	(bad)  
   140008a22:	add    BYTE PTR [rax],al
   140008a24:	add    BYTE PTR [rax],al
   140008a26:	add    BYTE PTR [rax],al
   140008a28:	loopne 0x1400089b7
   140008a2a:	add    BYTE PTR [rax+0x1],al
   140008a2d:	add    BYTE PTR [rax],al
   140008a2f:	add    BYTE PTR [rbp+0x27],al
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	add    BYTE PTR [rax],al
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	clc    
   140008a39:	lea    eax,[rax]
   140008a3b:	rex add DWORD PTR [rax],eax
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	rex.WRB (bad) 
   140008a42:	add    BYTE PTR [rax],al
   140008a44:	add    BYTE PTR [rax],al
   140008a46:	add    BYTE PTR [rax],al
   140008a48:	adc    BYTE PTR [rsi+0x14000],cl
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	rex.RX (bad) 
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	add    BYTE PTR [rax],al
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	sub    BYTE PTR [rsi+0x14000],cl
   140008a5e:	add    BYTE PTR [rax],al
   140008a60:	(bad)  
   140008a61:	(bad)  
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	add    BYTE PTR [rax],al
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	rex mov es,WORD PTR [rax]
   140008a6b:	rex add DWORD PTR [rax],eax
   140008a6e:	add    BYTE PTR [rax],al
   140008a70:	(bad)  
   140008a71:	(bad)  
   140008a72:	add    BYTE PTR [rax],al
   140008a74:	add    BYTE PTR [rax],al
   140008a76:	add    BYTE PTR [rax],al
   140008a78:	(bad)  
   140008a79:	mov    es,WORD PTR [rax]
   140008a7b:	rex add DWORD PTR [rax],eax
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	push   rcx
   140008a81:	(bad)  
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	add    BYTE PTR [rax],al
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	jo     0x140008a18
   140008a8a:	add    BYTE PTR [rax+0x1],al
   140008a8d:	add    BYTE PTR [rax],al
   140008a8f:	add    BYTE PTR [rdi+riz*1],dh
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	add    BYTE PTR [rax],al
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	mov    BYTE PTR [rsi+0x14000],cl
   140008a9e:	add    BYTE PTR [rax],al
   140008aa0:	adc    al,0x27
   140008aa2:	add    BYTE PTR [rax],al
   140008aa4:	add    BYTE PTR [rax],al
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	movabs al,ds:0x260000000140008e
   140008ab1:	(bad)  
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	add    BYTE PTR [rax],al
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	mov    al,0x8e
   140008aba:	add    BYTE PTR [rax+0x1],al
   140008abd:	add    BYTE PTR [rax],al
   140008abf:	add    BYTE PTR [rax+0x27],cl
   140008ac2:	add    BYTE PTR [rax],al
   140008ac4:	add    BYTE PTR [rax],al
   140008ac6:	add    BYTE PTR [rax],al
   140008ac8:	enter  0x8e,0x40
   140008acc:	add    DWORD PTR [rax],eax
   140008ace:	add    BYTE PTR [rax],al
   140008ad0:	sub    BYTE PTR [rdi],ah
   140008ad2:	add    BYTE PTR [rax],al
   140008ad4:	add    BYTE PTR [rax],al
   140008ad6:	add    BYTE PTR [rax],al
   140008ad8:	loopne 0x140008a68
   140008ada:	add    BYTE PTR [rax+0x1],al
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    BYTE PTR [rax],bh
   140008ae1:	(bad)  
   140008ae2:	add    BYTE PTR [rax],al
   140008ae4:	add    BYTE PTR [rax],al
   140008ae6:	add    BYTE PTR [rax],al
   140008ae8:	clc    
   140008ae9:	mov    es,WORD PTR [rax]
   140008aeb:	rex add DWORD PTR [rax],eax
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	rex.WRXB (bad) 
   140008af2:	add    BYTE PTR [rax],al
   140008af4:	add    BYTE PTR [rax],al
   140008af6:	add    BYTE PTR [rax],al
   140008af8:	or     BYTE PTR [rdi+0x14000],cl
   140008afe:	add    BYTE PTR [rax],al
   140008b00:	rex.X (bad) 
   140008b02:	add    BYTE PTR [rax],al
   140008b04:	add    BYTE PTR [rax],al
   140008b06:	add    BYTE PTR [rax],al
   140008b08:	and    BYTE PTR [rdi+0x14000],cl
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	rex.R (bad) 
   140008b12:	add    BYTE PTR [rax],al
   140008b14:	add    BYTE PTR [rax],al
   140008b16:	add    BYTE PTR [rax],al
   140008b18:	xor    BYTE PTR [rdi+0x14000],cl
   140008b1e:	add    BYTE PTR [rax],al
   140008b20:	rex.XB (bad) 
   140008b22:	add    BYTE PTR [rax],al
   140008b24:	add    BYTE PTR [rax],al
   140008b26:	add    BYTE PTR [rax],al
   140008b28:	rex pop QWORD PTR [rax]
   140008b2b:	rex add DWORD PTR [rax],eax
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	rex.RXB (bad) 
   140008b32:	add    BYTE PTR [rax],al
   140008b34:	add    BYTE PTR [rax],al
   140008b36:	add    BYTE PTR [rax],al
   140008b38:	pop    rax
   140008b39:	pop    QWORD PTR [rax]
   140008b3b:	rex add DWORD PTR [rax],eax
   140008b3e:	add    BYTE PTR [rax],al
   140008b40:	cmp    ah,BYTE PTR [rdi]
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	add    BYTE PTR [rax],al
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	push   0x140008f
   140008b4d:	add    BYTE PTR [rax],al
   140008b4f:	add    BYTE PTR [rcx+0x27],cl
   140008b52:	add    BYTE PTR [rax],al
   140008b54:	add    BYTE PTR [rax],al
   140008b56:	add    BYTE PTR [rax],al
   140008b58:	or     BYTE PTR [rdi+0x14000],0x0
   140008b5f:	add    BYTE PTR [rsi],dh
   140008b61:	(bad)  
   140008b62:	add    BYTE PTR [rax],al
   140008b64:	add    BYTE PTR [rax],al
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	nop
   140008b69:	pop    QWORD PTR [rax]
   140008b6b:	rex add DWORD PTR [rax],eax
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	cmp    eax,0x27
   140008b75:	add    BYTE PTR [rax],al
   140008b77:	add    BYTE PTR [rax+0x140008f],ah
   140008b7d:	add    BYTE PTR [rax],al
   140008b7f:	add    BYTE PTR [rbx],bh
   140008b81:	(bad)  
   140008b82:	add    BYTE PTR [rax],al
   140008b84:	add    BYTE PTR [rax],al
   140008b86:	add    BYTE PTR [rax],al
   140008b88:	mov    eax,0x140008f
   140008b8d:	add    BYTE PTR [rax],al
   140008b8f:	add    BYTE PTR [rcx],bh
   140008b91:	(bad)  
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	add    BYTE PTR [rax],al
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	ror    BYTE PTR [rdi+0x14000],1
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	rex.WR (bad) 
   140008ba2:	add    BYTE PTR [rax],al
   140008ba4:	add    BYTE PTR [rax],al
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	call   0x141408c3c
   140008bad:	add    BYTE PTR [rax],al
   140008baf:	add    BYTE PTR [rbx],dh
   140008bb1:	(bad)  
   140008bb2:	add    BYTE PTR [rax],al
   140008bb4:	add    BYTE PTR [rax],al
   140008bb6:	add    BYTE PTR [rax],al
   140008bb8:	clc    
   140008bb9:	pop    QWORD PTR [rax]
   140008bbb:	rex add DWORD PTR [rax],eax
	...
   140008bce:	add    BYTE PTR [rax],al
   140008bd0:	jo     0x140008c37
   140008bd2:	jb     0x140008c41
   140008bd4:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140008bdb:	fs outs dx,BYTE PTR gs:[rsi]
   140008bde:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140008be5:	add    BYTE PTR [rax],al
   140008be7:	add    BYTE PTR [rsi+0x69],ah
   140008bea:	ins    BYTE PTR es:[rdi],dx
   140008beb:	and    BYTE PTR gs:[rbp+0x78],ah
   140008bef:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140008bf6:	add    BYTE PTR [rax],al
   140008bf8:	outs   dx,BYTE PTR ds:[rsi]
   140008bf9:	outs   dx,DWORD PTR ds:[rsi]
   140008bfa:	and    BYTE PTR [rbx+0x75],dh
   140008bfd:	movsxd ebp,DWORD PTR [rax+0x20]
   140008c00:	fs gs jbe 0x140008c6d
   140008c04:	movsxd esp,DWORD PTR [rbp+0x0]
   140008c07:	add    BYTE PTR [rsi+0x69],ah
   140008c0a:	ins    BYTE PTR es:[rdi],dx
   140008c0b:	outs   dx,BYTE PTR gs:[rsi]
   140008c0d:	(bad)  
   140008c0e:	ins    DWORD PTR es:[rdi],dx
   140008c0f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140008c14:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008c18:	add    BYTE PTR [eax],al
   140008c1b:	add    BYTE PTR [rax],al
   140008c1d:	add    BYTE PTR [rax],al
   140008c1f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140008c23:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   140008c2a:	jb     0x140008c91
   140008c2c:	jae    0x140008c9d
   140008c2e:	jne    0x140008ca2
   140008c30:	movsxd esp,DWORD PTR [rbp+0x20]
   140008c33:	(bad)  
   140008c34:	jne    0x140008ca9
   140008c36:	jns    0x140008c38
   140008c38:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   140008c3f:	jb     0x140008c41
   140008c41:	add    BYTE PTR [rax],al
   140008c43:	add    BYTE PTR [rax],al
   140008c45:	add    BYTE PTR [rax],al
   140008c47:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   140008c4b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140008c50:	jns    0x140008c72
   140008c52:	outs   dx,BYTE PTR ds:[rsi]
   140008c53:	outs   dx,DWORD PTR ds:[rsi]
   140008c54:	je     0x140008c76
   140008c56:	gs ins DWORD PTR es:[rdi],dx
   140008c58:	jo     0x140008cce
   140008c5a:	jns    0x140008c5c
   140008c5c:	add    BYTE PTR [rax],al
   140008c5e:	add    BYTE PTR [rax],al
   140008c60:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140008c67:	and    BYTE PTR [rcx+0x72],ah
   140008c6a:	addr32 jne 0x140008cda
   140008c6d:	outs   dx,BYTE PTR gs:[rsi]
   140008c6f:	je     0x140008c71
   140008c71:	add    BYTE PTR [rax],al
   140008c73:	add    BYTE PTR [rax],al
   140008c75:	add    BYTE PTR [rax],al
   140008c77:	add    BYTE PTR [rsi+0x6f],ch
   140008c7a:	and    BYTE PTR [rbx+0x70],dh
   140008c7d:	(bad)  
   140008c7e:	movsxd esp,DWORD PTR [rbp+0x20]
   140008c81:	outs   dx,DWORD PTR ds:[rsi]
   140008c82:	outs   dx,BYTE PTR ds:[rsi]
   140008c83:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140008c87:	imul   esp,DWORD PTR [rbx+0x65],0x0
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	outs   dx,BYTE PTR ds:[rsi]
   140008c91:	outs   dx,DWORD PTR ds:[rsi]
   140008c92:	and    BYTE PTR [rbx+0x75],dh
   140008c95:	movsxd ebp,DWORD PTR [rax+0x20]
   140008c98:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   140008c9f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140008ca3:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140008ca8:	jns    0x140008caa
   140008caa:	add    BYTE PTR [rax],al
   140008cac:	add    BYTE PTR [rax],al
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	data16 jne 0x140008d21
   140008cb3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008cb7:	outs   dx,BYTE PTR ds:[rsi]
   140008cb8:	and    BYTE PTR [rsi+0x6f],ch
   140008cbb:	je     0x140008cdd
   140008cbd:	jae    0x140008d34
   140008cbf:	jo     0x140008d31
   140008cc1:	outs   dx,DWORD PTR ds:[rsi]
   140008cc2:	jb     0x140008d38
   140008cc4:	gs add BYTE PTR fs:[rax],al
   140008cc8:	outs   dx,BYTE PTR ds:[rsi]
   140008cc9:	outs   dx,DWORD PTR ds:[rsi]
   140008cca:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140008cce:	imul   esp,DWORD PTR [rax],0x61
   140008cd1:	jbe    0x140008d34
   140008cd3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140008cdb:	add    BYTE PTR [rax],al
   140008cdd:	add    BYTE PTR [rax],al
   140008cdf:	add    BYTE PTR [rsi+0x6f],ch
   140008ce2:	je     0x140008d04
   140008ce4:	outs   dx,BYTE PTR gs:[rsi]
   140008ce6:	outs   dx,DWORD PTR ds:[rsi]
   140008ce7:	jne    0x140008d50
   140008ce9:	push   0x6d656d20
   140008cee:	outs   dx,DWORD PTR ds:[rsi]
   140008cef:	jb     0x140008d6a
   140008cf1:	add    BYTE PTR [rax],al
   140008cf3:	add    BYTE PTR [rax],al
   140008cf5:	add    BYTE PTR [rax],al
   140008cf7:	add    BYTE PTR [rdx+0x65],dh
   140008cfa:	jae    0x140008d6b
   140008cfc:	jne    0x140008d70
   140008cfe:	movsxd esp,DWORD PTR [rbp+0x20]
   140008d01:	jne    0x140008d71
   140008d03:	(bad)  
   140008d04:	jbe    0x140008d67
   140008d06:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   140008d0e:	jb     0x140008d89
   140008d10:	and    BYTE PTR [rcx+0x67],ah
   140008d13:	(bad)  
   140008d14:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   140008d1b:	jae    0x140008d90
   140008d1d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140008d21:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140008d28:	imul   eax,DWORD PTR [rax],0x0
   140008d2b:	add    BYTE PTR [rax],al
   140008d2d:	add    BYTE PTR [rax],al
   140008d2f:	add    BYTE PTR [rdi+0x70],ch
   140008d32:	gs jb  0x140008d96
   140008d35:	je     0x140008da0
   140008d37:	outs   dx,DWORD PTR ds:[rsi]
   140008d38:	outs   dx,BYTE PTR ds:[rsi]
   140008d39:	and    BYTE PTR [rbx+0x61],ah
   140008d3c:	outs   dx,BYTE PTR ds:[rsi]
   140008d3d:	movsxd esp,DWORD PTR [rbp+0x6c]
   140008d40:	gs add BYTE PTR fs:[rax],al
   140008d44:	add    BYTE PTR [rax],al
   140008d46:	add    BYTE PTR [rax],al
   140008d48:	je     0x140008db9
   140008d4a:	outs   dx,DWORD PTR ds:[rsi]
   140008d4b:	and    BYTE PTR [rbp+0x61],ch
   140008d4e:	outs   dx,BYTE PTR ds:[rsi]
   140008d4f:	jns    0x140008d71
   140008d51:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140008d58:	jo     0x140008dbf
   140008d5a:	outs   dx,BYTE PTR ds:[rsi]
   140008d5b:	add    BYTE PTR [rax],al
   140008d5d:	add    BYTE PTR [rax],al
   140008d5f:	add    BYTE PTR [rax+0x65],dh
   140008d62:	jb     0x140008dd1
   140008d64:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   140008d6b:	fs outs dx,BYTE PTR gs:[rsi]
   140008d6e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140008d75:	add    BYTE PTR [rax],al
   140008d77:	add    BYTE PTR [rcx+0x64],ah
   140008d7a:	fs jb  0x140008de2
   140008d7d:	jae    0x140008df2
   140008d7f:	pop    rdi
   140008d80:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   140008d87:	add    BYTE PTR [rcx+0x64],ah
   140008d8a:	fs jb  0x140008df2
   140008d8d:	jae    0x140008e02
   140008d8f:	pop    rdi
   140008d90:	outs   dx,BYTE PTR ds:[rsi]
   140008d91:	outs   dx,DWORD PTR ds:[rsi]
   140008d92:	je     0x140008df3
   140008d94:	(bad)  
   140008d95:	jbe    0x140008df8
   140008d97:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140008d9f:	add    BYTE PTR [rcx+0x64],ah
   140008da2:	fs jb  0x140008e0a
   140008da5:	jae    0x140008e1a
   140008da7:	pop    rdi
   140008da8:	data16 (bad) 
   140008daa:	ins    DWORD PTR es:[rdi],dx
   140008dab:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   140008db3:	jae    0x140008e2a
   140008db5:	jo     0x140008e27
   140008db7:	outs   dx,DWORD PTR ds:[rsi]
   140008db8:	jb     0x140008e2e
   140008dba:	gs add BYTE PTR fs:[rax],al
   140008dbe:	add    BYTE PTR [rax],al
   140008dc0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008dc3:	outs   dx,BYTE PTR ds:[rsi]
   140008dc4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008dc9:	outs   dx,BYTE PTR ds:[rsi]
   140008dca:	pop    rdi
   140008dcb:	(bad)  
   140008dcc:	ins    BYTE PTR es:[rdi],dx
   140008dcd:	jb     0x140008e34
   140008dcf:	(bad)  
   140008dd0:	fs jns 0x140008e32
   140008dd3:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140008dda:	jb     0x140008e41
   140008ddc:	jae    0x140008e51
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	(bad)
   140008de5:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   140008ded:	jb     0x140008e58
   140008def:	jo     0x140008e65
   140008df1:	outs   dx,DWORD PTR ds:[rsi]
   140008df2:	jb     0x140008df4
   140008df4:	add    BYTE PTR [rax],al
   140008df6:	add    BYTE PTR [rax],al
   140008df8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008dfb:	outs   dx,BYTE PTR ds:[rsi]
   140008dfc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008e01:	outs   dx,BYTE PTR ds:[rsi]
   140008e02:	pop    rdi
   140008e03:	(bad)  
   140008e04:	(bad)  
   140008e05:	outs   dx,DWORD PTR ds:[rsi]
   140008e06:	jb     0x140008e7c
   140008e08:	gs add BYTE PTR fs:[rax],al
   140008e0c:	add    BYTE PTR [rax],al
   140008e0e:	add    BYTE PTR [rax],al
   140008e10:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008e13:	outs   dx,BYTE PTR ds:[rsi]
   140008e14:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008e19:	outs   dx,BYTE PTR ds:[rsi]
   140008e1a:	pop    rdi
   140008e1b:	jb     0x140008e82
   140008e1d:	data16 jne 0x140008e93
   140008e20:	gs add BYTE PTR fs:[rax],al
   140008e24:	add    BYTE PTR [rax],al
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008e2b:	outs   dx,BYTE PTR ds:[rsi]
   140008e2c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008e31:	outs   dx,BYTE PTR ds:[rsi]
   140008e32:	pop    rdi
   140008e33:	jb     0x140008e9a
   140008e35:	jae    0x140008e9c
   140008e37:	je     0x140008e39
   140008e39:	add    BYTE PTR [rax],al
   140008e3b:	add    BYTE PTR [rax],al
   140008e3d:	add    BYTE PTR [rax],al
   140008e3f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140008e43:	je     0x140008eae
   140008e45:	outs   dx,BYTE PTR ds:[rsi]
   140008e46:	(bad)  
   140008e47:	je     0x140008eb2
   140008e49:	outs   dx,DWORD PTR ds:[rsi]
   140008e4a:	outs   dx,BYTE PTR ds:[rsi]
   140008e4b:	pop    rdi
   140008e4c:	(bad)  
   140008e4d:	fs fs jb 0x140008eb6
   140008e51:	jae    0x140008ec6
   140008e53:	pop    rdi
   140008e54:	jb     0x140008ebb
   140008e56:	jno    0x140008ecd
   140008e58:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140008e5f:	add    BYTE PTR [rdx+0x61],ah
   140008e62:	fs pop rdi
   140008e64:	(bad)  
   140008e65:	fs fs jb 0x140008ece
   140008e69:	jae    0x140008ede
   140008e6b:	add    BYTE PTR [rax],al
   140008e6d:	add    BYTE PTR [rax],al
   140008e6f:	add    BYTE PTR [rax+0x6f],ch
   140008e72:	jae    0x140008ee8
   140008e74:	pop    rdi
   140008e75:	jne    0x140008ee5
   140008e77:	jb     0x140008ede
   140008e79:	(bad)  
   140008e7a:	movsxd ebp,DWORD PTR [rax+0x61]
   140008e7d:	(bad)  
   140008e7e:	ins    BYTE PTR es:[rdi],dx
   140008e7f:	add    BYTE PTR gs:[rax],al
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	outs   dx,DWORD PTR ds:[rsi]
   140008e89:	jo     0x140008ef0
   140008e8b:	jb     0x140008eee
   140008e8d:	je     0x140008ef8
   140008e8f:	outs   dx,DWORD PTR ds:[rsi]
   140008e90:	outs   dx,BYTE PTR ds:[rsi]
   140008e91:	pop    rdi
   140008e92:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140008e99:	jb     0x140008f00
   140008e9b:	jae    0x140008f10
   140008e9d:	add    BYTE PTR [rax],al
   140008e9f:	add    BYTE PTR [rcx+0x6e],ch
   140008ea2:	je     0x140008f09
   140008ea4:	jb     0x140008f18
   140008ea6:	jne    0x140008f18
   140008ea8:	je     0x140008f0f
   140008eaa:	add    BYTE PTR fs:[rax],al
   140008ead:	add    BYTE PTR [rax],al
   140008eaf:	add    BYTE PTR [rcx+0x6e],ch
   140008eb2:	jbe    0x140008f15
   140008eb4:	ins    BYTE PTR es:[rdi],dx
   140008eb5:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   140008ebd:	outs   dx,BYTE PTR gs:[rsi]
   140008ebf:	je     0x140008ec1
   140008ec1:	add    BYTE PTR [rax],al
   140008ec3:	add    BYTE PTR [rax],al
   140008ec5:	add    BYTE PTR [rax],al
   140008ec7:	add    BYTE PTR [rcx+0x6c],ah
   140008eca:	jb     0x140008f31
   140008ecc:	(bad)  
   140008ecd:	fs jns 0x140008f2f
   140008ed0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008ed3:	outs   dx,BYTE PTR ds:[rsi]
   140008ed4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008ed9:	add    BYTE PTR [rax],al
   140008edb:	add    BYTE PTR [rax],al
   140008edd:	add    BYTE PTR [rax],al
   140008edf:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140008ee3:	pop    rdi
   140008ee4:	ins    DWORD PTR es:[rdi],dx
   140008ee5:	(bad)  
   140008ee6:	outs   dx,BYTE PTR ds:[rsi]
   140008ee7:	jns    0x140008f48
   140008ee9:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140008ef0:	jo     0x140008f57
   140008ef2:	outs   dx,BYTE PTR ds:[rsi]
   140008ef3:	add    BYTE PTR [rax],al
   140008ef5:	add    BYTE PTR [rax],al
   140008ef7:	add    BYTE PTR [rbp+0x65],ch
   140008efa:	jae    0x140008f6f
   140008efc:	(bad)  
   140008efd:	addr32 gs pop rdi
   140008f00:	jae    0x140008f6b
   140008f02:	jp     0x140008f69
   140008f04:	add    BYTE PTR [rax],al
   140008f06:	add    BYTE PTR [rax],al
   140008f08:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   140008f0f:	gs pop rdi
   140008f11:	je     0x140008f82
   140008f13:	outs   dx,DWORD PTR ds:[rsi]
   140008f14:	pop    rdi
   140008f15:	ins    BYTE PTR es:[rdi],dx
   140008f16:	outs   dx,DWORD PTR ds:[rsi]
   140008f17:	outs   dx,BYTE PTR ds:[rsi]
   140008f18:	add    BYTE PTR [eax],al
   140008f1b:	add    BYTE PTR [rax],al
   140008f1d:	add    BYTE PTR [rax],al
   140008f1f:	add    BYTE PTR [rsi+0x65],ch
   140008f22:	je     0x140008f9b
   140008f24:	outs   dx,DWORD PTR ds:[rsi]
   140008f25:	jb     0x140008f92
   140008f27:	pop    rdi
   140008f28:	outs   dx,DWORD PTR fs:[rsi]
   140008f2a:	ja     0x140008f9a
   140008f2c:	add    BYTE PTR [rax],al
   140008f2e:	add    BYTE PTR [rax],al
   140008f30:	outs   dx,BYTE PTR ds:[rsi]
   140008f31:	gs je  0x140008fab
   140008f34:	outs   dx,DWORD PTR ds:[rsi]
   140008f35:	jb     0x140008fa2
   140008f37:	pop    rdi
   140008f38:	jb     0x140008f9f
   140008f3a:	jae    0x140008fa1
   140008f3c:	je     0x140008f3e
   140008f3e:	add    BYTE PTR [rax],al
   140008f40:	outs   dx,BYTE PTR ds:[rsi]
   140008f41:	gs je  0x140008fbb
   140008f44:	outs   dx,DWORD PTR ds:[rsi]
   140008f45:	jb     0x140008fb2
   140008f47:	pop    rdi
   140008f48:	jne    0x140008fb8
   140008f4a:	jb     0x140008fb1
   140008f4c:	(bad)  
   140008f4d:	movsxd ebp,DWORD PTR [rax+0x61]
   140008f50:	(bad)  
   140008f51:	ins    BYTE PTR es:[rdi],dx
   140008f52:	add    BYTE PTR gs:[rax],al
   140008f55:	add    BYTE PTR [rax],al
   140008f57:	add    BYTE PTR [rsi+0x6f],ch
   140008f5a:	pop    rdi
   140008f5b:	(bad)  
   140008f5c:	jne    0x140008fc4
   140008f5e:	data16 gs jb 0x140008fc1
   140008f62:	jae    0x140008fd4
   140008f64:	(bad)  
   140008f65:	movsxd esp,DWORD PTR [rbp+0x0]
   140008f68:	outs   dx,BYTE PTR ds:[rsi]
   140008f69:	outs   dx,DWORD PTR ds:[rsi]
   140008f6a:	pop    rdi
   140008f6b:	jo     0x140008fdf
   140008f6d:	outs   dx,DWORD PTR ds:[rsi]
   140008f6e:	je     0x140008fdf
   140008f70:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008f73:	pop    rdi
   140008f74:	outs   dx,DWORD PTR ds:[rsi]
   140008f75:	jo     0x140008feb
   140008f77:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140008f7e:	add    BYTE PTR [rax],al
   140008f80:	outs   dx,BYTE PTR ds:[rsi]
   140008f81:	outs   dx,DWORD PTR ds:[rsi]
   140008f82:	je     0x140008fe3
   140008f84:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008f87:	outs   dx,BYTE PTR ds:[rsi]
   140008f88:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008f8d:	add    BYTE PTR [rax],al
   140008f8f:	add    BYTE PTR [rsi+0x6f],ch
   140008f92:	je     0x140008ff3
   140008f94:	(bad)  
   140008f95:	pop    rdi
   140008f96:	jae    0x140009007
   140008f98:	movsxd ebp,DWORD PTR [rbx+0x65]
   140008f9b:	je     0x140008f9d
   140008f9d:	add    BYTE PTR [rax],al
   140008f9f:	add    BYTE PTR [rdi+0x70],ch
   140008fa2:	gs jb  0x140009006
   140008fa5:	je     0x140009010
   140008fa7:	outs   dx,DWORD PTR ds:[rsi]
   140008fa8:	outs   dx,BYTE PTR ds:[rsi]
   140008fa9:	pop    rdi
   140008faa:	outs   dx,BYTE PTR ds:[rsi]
   140008fab:	outs   dx,DWORD PTR ds:[rsi]
   140008fac:	je     0x14000900d
   140008fae:	jae    0x140009025
   140008fb0:	jo     0x140009022
   140008fb2:	outs   dx,DWORD PTR ds:[rsi]
   140008fb3:	jb     0x140009029
   140008fb5:	gs add BYTE PTR fs:[rax+0x72],dh
   140008fba:	outs   dx,DWORD PTR ds:[rsi]
   140008fbb:	je     0x14000902c
   140008fbd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008fc0:	pop    rdi
   140008fc1:	outs   dx,BYTE PTR ds:[rsi]
   140008fc2:	outs   dx,DWORD PTR ds:[rsi]
   140008fc3:	je     0x140009024
   140008fc5:	jae    0x14000903c
   140008fc7:	jo     0x140009039
   140008fc9:	outs   dx,DWORD PTR ds:[rsi]
   140008fca:	jb     0x140009040
   140008fcc:	gs add BYTE PTR fs:[rax],al
   140008fd0:	ja     0x140009044
   140008fd2:	outs   dx,DWORD PTR ds:[rsi]
   140008fd3:	outs   dx,BYTE PTR ds:[rsi]
   140008fd4:	addr32 pop rdi
   140008fd6:	jo     0x14000904a
   140008fd8:	outs   dx,DWORD PTR ds:[rsi]
   140008fd9:	je     0x14000904a
   140008fdb:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008fde:	pop    rdi
   140008fdf:	je     0x14000905a
   140008fe1:	jo     0x140009048
   140008fe3:	add    BYTE PTR [rax],al
   140008fe5:	add    BYTE PTR [rax],al
   140008fe7:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   140008feb:	gs fs pop rdi
   140008fee:	outs   dx,DWORD PTR ds:[rsi]
   140008fef:	jne    0x140009065
   140008ff1:	add    BYTE PTR [rax],al
   140008ff3:	add    BYTE PTR [rax],al
   140008ff5:	add    BYTE PTR [rax],al
   140008ff7:	add    BYTE PTR [rdi+0x70],ch
   140008ffa:	gs jb  0x14000905e
   140008ffd:	je     0x140009068
   140008fff:	outs   dx,DWORD PTR ds:[rsi]
   140009000:	outs   dx,BYTE PTR ds:[rsi]
   140009001:	pop    rdi
   140009002:	ja     0x140009073
   140009004:	jne    0x140009072
   140009006:	fs pop rdi
   140009008:	(bad)  
   140009009:	ins    BYTE PTR es:[rdi],dx
   14000900a:	outs   dx,DWORD PTR ds:[rsi]
   14000900b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	data16 add BYTE PTR [rax],al
   140009013:	add    BYTE PTR [rax],al
   140009015:	add    BYTE PTR [rax],al
   140009017:	add    BYTE PTR [rax],al
   140009019:	xchg   ebp,eax
   14000901a:	add    BYTE PTR [rax+0x1],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rax+rax*1+0x0],ah
   140009023:	add    BYTE PTR [rax],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rax],ah
   140009029:	xchg   ebp,eax
   14000902a:	add    BYTE PTR [rax+0x1],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rbp+0x0],ah
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	xor    BYTE PTR [rbp+0x14000],dl
   14000903e:	add    BYTE PTR [rax],al
   140009040:	jno    0x140009042
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    BYTE PTR [rax],al
   140009048:	xchg   rbp,rax
   14000904a:	add    BYTE PTR [rax+0x1],al
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rdi],al
   140009051:	add    BYTE PTR [rax],al
   140009053:	add    BYTE PTR [rax],al
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax-0x6b],ah
   14000905a:	add    BYTE PTR [rax+0x1],al
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rcx],ah
   140009061:	add    BYTE PTR [rax],al
   140009063:	add    BYTE PTR [rax],al
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rax-0x6b],bh
   14000906a:	add    BYTE PTR [rax+0x1],al
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rsi],cl
   140009071:	add    BYTE PTR [rax],al
   140009073:	add    BYTE PTR [rax],al
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    BYTE PTR [rax+0x1400095],dl
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rcx],cl
   140009081:	add    BYTE PTR [rax],al
   140009083:	add    BYTE PTR [rax],al
   140009085:	add    BYTE PTR [rax],al
   140009087:	add    BYTE PTR [rax+0x1400095],ah
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rax+0x0],ch
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	mov    eax,0x1400095
   14000909d:	add    BYTE PTR [rax],al
   14000909f:	add    BYTE PTR [rax],ah
   1400090a1:	add    BYTE PTR [rax],al
   1400090a3:	add    BYTE PTR [rax],al
   1400090a5:	add    BYTE PTR [rax],al
   1400090a7:	add    al,cl
   1400090a9:	xchg   ebp,eax
   1400090aa:	add    BYTE PTR [rax+0x1],al
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    BYTE PTR [rdx+0x0],ch
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	fcom   DWORD PTR [rbp+0x14000]
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	add    BYTE PTR [eax],al
   1400090c3:	add    BYTE PTR [rax],al
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    al,dh
   1400090c9:	xchg   ebp,eax
   1400090ca:	add    BYTE PTR [rax+0x1],al
   1400090cd:	add    BYTE PTR [rax],al
   1400090cf:	add    BYTE PTR [rbx+0x0],ch
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	adc    BYTE PTR [rsi+0x14000],dl
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	ins    BYTE PTR es:[rdi],dx
   1400090e1:	add    BYTE PTR [rax],al
   1400090e3:	add    BYTE PTR [rax],al
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    BYTE PTR [rax],ch
   1400090e9:	xchg   esi,eax
   1400090ea:	add    BYTE PTR [rax+0x1],al
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rdx],dl
   1400090f1:	add    BYTE PTR [rax],al
   1400090f3:	add    BYTE PTR [rax],al
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    BYTE PTR [rax],bl
   1400090f9:	lea    eax,[rax]
   1400090fb:	rex add DWORD PTR [rax],eax
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	ins    DWORD PTR es:[rdi],dx
   140009101:	add    BYTE PTR [rax],al
   140009103:	add    BYTE PTR [rax],al
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rax-0x6a],al
   14000910a:	add    BYTE PTR [rax+0x1],al
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rax],dl
   140009111:	add    BYTE PTR [rax],al
   140009113:	add    BYTE PTR [rax],al
   140009115:	add    BYTE PTR [rax],al
   140009117:	add    BYTE PTR [rax],ah
   140009119:	mov    WORD PTR [rax],es
   14000911b:	rex add DWORD PTR [rax],eax
   14000911e:	add    BYTE PTR [rax],al
   140009120:	sub    DWORD PTR [rax],eax
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	rex.W mov WORD PTR [rax],es
   14000912b:	rex add DWORD PTR [rax],eax
   14000912e:	add    BYTE PTR [rax],al
   140009130:	or     BYTE PTR [rax],al
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	(bad)  
   140009139:	xchg   esi,eax
   14000913a:	add    BYTE PTR [rax+0x1],al
   14000913d:	add    BYTE PTR [rax],al
   14000913f:	add    BYTE PTR [rcx],dl
   140009141:	add    BYTE PTR [rax],al
   140009143:	add    BYTE PTR [rax],al
   140009145:	add    BYTE PTR [rax],al
   140009147:	add    al,ch
   140009149:	mov    eax,DWORD PTR [rax]
   14000914b:	rex add DWORD PTR [rax],eax
   14000914e:	add    BYTE PTR [rax],al
   140009150:	sbb    eax,DWORD PTR [rax]
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	js     0x1400090f0
   14000915a:	add    BYTE PTR [rax+0x1],al
   14000915d:	add    BYTE PTR [rax],al
   14000915f:	add    BYTE PTR [rsi],ah
   140009161:	add    BYTE PTR [rax],al
   140009163:	add    BYTE PTR [rax],al
   140009165:	add    BYTE PTR [rax],al
   140009167:	add    BYTE PTR [rax],cl
   140009169:	mov    WORD PTR [rax],es
   14000916b:	rex add DWORD PTR [rax],eax
   14000916e:	add    BYTE PTR [rax],al
   140009170:	sub    BYTE PTR [rax],al
   140009172:	add    BYTE PTR [rax],al
   140009174:	add    BYTE PTR [rax],al
   140009176:	add    BYTE PTR [rax],al
   140009178:	mov    al,0x8c
   14000917a:	add    BYTE PTR [rax+0x1],al
   14000917d:	add    BYTE PTR [rax],al
   14000917f:	add    BYTE PTR [rsi+0x0],ch
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	mov    BYTE PTR [rsi+0x14000],dl
   14000918e:	add    BYTE PTR [rax],al
   140009190:	outs   dx,DWORD PTR ds:[rsi]
   140009191:	add    BYTE PTR [rax],al
   140009193:	add    BYTE PTR [rax],al
   140009195:	add    BYTE PTR [rax],al
   140009197:	add    BYTE PTR [rax+0x1400096],ah
   14000919d:	add    BYTE PTR [rax],al
   14000919f:	add    BYTE PTR [rdx],ch
   1400091a1:	add    BYTE PTR [rax],al
   1400091a3:	add    BYTE PTR [rax],al
   1400091a5:	add    BYTE PTR [rax],al
   1400091a7:	add    BYTE PTR [rax+0x1400096],bh
   1400091ad:	add    BYTE PTR [rax],al
   1400091af:	add    BYTE PTR [rcx],bl
   1400091b1:	add    BYTE PTR [rax],al
   1400091b3:	add    BYTE PTR [rax],al
   1400091b5:	add    BYTE PTR [rax],al
   1400091b7:	add    al,dl
   1400091b9:	xchg   esi,eax
   1400091ba:	add    BYTE PTR [rax+0x1],al
   1400091bd:	add    BYTE PTR [rax],al
   1400091bf:	add    BYTE PTR [rax+rax*1],al
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	movabs al,ds:0x160000000140008e
   1400091d1:	add    BYTE PTR [rax],al
   1400091d3:	add    BYTE PTR [rax],al
   1400091d5:	add    BYTE PTR [rax],al
   1400091d7:	add    BYTE PTR [rax-0x74],ah
   1400091da:	add    BYTE PTR [rax+0x1],al
   1400091dd:	add    BYTE PTR [rax],al
   1400091df:	add    BYTE PTR [rip+0x0],bl        # 0x1400091e5
   1400091e5:	add    BYTE PTR [rax],al
   1400091e7:	add    al,bh
   1400091e9:	xchg   esi,eax
   1400091ea:	add    BYTE PTR [rax+0x1],al
   1400091ed:	add    BYTE PTR [rax],al
   1400091ef:	add    BYTE PTR [rip+0x0],al        # 0x1400091f5
   1400091f5:	add    BYTE PTR [rax],al
   1400091f7:	add    BYTE PTR [rax],bh
   1400091f9:	mov    WORD PTR [rax],es
   1400091fb:	rex add DWORD PTR [rax],eax
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	adc    eax,0x0
   140009205:	add    BYTE PTR [rax],al
   140009207:	add    BYTE PTR [rax],cl
   140009209:	xchg   edi,eax
   14000920a:	add    BYTE PTR [rax+0x1],al
   14000920d:	add    BYTE PTR [rax],al
   14000920f:	add    BYTE PTR [rbx+0x0],dh
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [rax],al
   140009216:	add    BYTE PTR [rax],al
   140009218:	sbb    BYTE PTR [rdi+0x14000],dl
   14000921e:	add    BYTE PTR [rax],al
   140009220:	je     0x140009222
   140009222:	add    BYTE PTR [rax],al
   140009224:	add    BYTE PTR [rax],al
   140009226:	add    BYTE PTR [rax],al
   140009228:	sub    BYTE PTR [rdi+0x14000],dl
   14000922e:	add    BYTE PTR [rax],al
   140009230:	jne    0x140009232
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    BYTE PTR [rax],al
   140009236:	add    BYTE PTR [rax],al
   140009238:	cmp    BYTE PTR [rdi+0x14000],dl
   14000923e:	add    BYTE PTR [rax],al
   140009240:	jbe    0x140009242
   140009242:	add    BYTE PTR [rax],al
   140009244:	add    BYTE PTR [rax],al
   140009246:	add    BYTE PTR [rax],al
   140009248:	xchg   rdi,rax
   14000924a:	add    BYTE PTR [rax+0x1],al
   14000924d:	add    BYTE PTR [rax],al
   14000924f:	add    BYTE PTR [rdi+0x0],dh
   140009252:	add    BYTE PTR [rax],al
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	(bad)  
   140009259:	xchg   edi,eax
   14000925a:	add    BYTE PTR [rax+0x1],al
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    BYTE PTR [rdx],cl
   140009261:	add    BYTE PTR [rax],al
   140009263:	add    BYTE PTR [rax],al
   140009265:	add    BYTE PTR [rax],al
   140009267:	add    BYTE PTR [rax-0x69],dh
   14000926a:	add    BYTE PTR [rax+0x1],al
   14000926d:	add    BYTE PTR [rax],al
   14000926f:	add    BYTE PTR [rcx+0x0],bh
   140009272:	add    BYTE PTR [rax],al
   140009274:	add    BYTE PTR [rax],al
   140009276:	add    BYTE PTR [rax],al
   140009278:	mov    BYTE PTR [rdi+0x14000],dl
   14000927e:	add    BYTE PTR [rax],al
   140009280:	(bad)  
   140009281:	add    BYTE PTR [rax],al
   140009283:	add    BYTE PTR [rax],al
   140009285:	add    BYTE PTR [rax],al
   140009287:	add    al,cl
   140009289:	mov    WORD PTR [rax],es
   14000928b:	rex add DWORD PTR [rax],eax
   14000928e:	add    BYTE PTR [rax],al
   140009290:	js     0x140009292
   140009292:	add    BYTE PTR [rax],al
   140009294:	add    BYTE PTR [rax],al
   140009296:	add    BYTE PTR [rax],al
   140009298:	nop
   140009299:	xchg   edi,eax
   14000929a:	add    BYTE PTR [rax+0x1],al
   14000929d:	add    BYTE PTR [rax],al
   14000929f:	add    BYTE PTR [rdx+0x0],bh
   1400092a2:	add    BYTE PTR [rax],al
   1400092a4:	add    BYTE PTR [rax],al
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	test   al,0x97
   1400092aa:	add    BYTE PTR [rax+0x1],al
   1400092ad:	add    BYTE PTR [rax],al
   1400092af:	add    BYTE PTR [rbx+0x0],bh
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	add    BYTE PTR [rax],al
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	mov    eax,0x1400097
   1400092bd:	add    BYTE PTR [rax],al
   1400092bf:	add    BYTE PTR [rax+rax*1],bl
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	js     0x140009256
   1400092ca:	add    BYTE PTR [rax+0x1],al
   1400092cd:	add    BYTE PTR [rax],al
   1400092cf:	add    BYTE PTR [rax+rax*1+0x0],bh
   1400092d3:	add    BYTE PTR [rax],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    al,dl
   1400092d9:	xchg   edi,eax
   1400092da:	add    BYTE PTR [rax+0x1],al
   1400092dd:	add    BYTE PTR [rax],al
   1400092df:	add    BYTE PTR [rsi],al
   1400092e1:	add    BYTE PTR [rax],al
   1400092e3:	add    BYTE PTR [rax],al
   1400092e5:	add    BYTE PTR [rax],al
   1400092e7:	add    al,ch
   1400092e9:	xchg   edi,eax
   1400092ea:	add    BYTE PTR [rax+0x1],al
   1400092ed:	add    BYTE PTR [rax],al
   1400092ef:	add    BYTE PTR [rbx],dl
   1400092f1:	add    BYTE PTR [rax],al
   1400092f3:	add    BYTE PTR [rax],al
   1400092f5:	add    BYTE PTR [rax],al
   1400092f7:	add    al,bh
   1400092f9:	mov    eax,DWORD PTR [rax]
   1400092fb:	rex add DWORD PTR [rax],eax
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	add    al,BYTE PTR [rax]
   140009302:	add    BYTE PTR [rax],al
   140009304:	add    BYTE PTR [rax],al
   140009306:	add    BYTE PTR [rax],al
   140009308:	nop
   140009309:	mov    WORD PTR [rax],es
   14000930b:	rex add DWORD PTR [rax],eax
   14000930e:	add    BYTE PTR [rax],al
   140009310:	add    eax,DWORD PTR [rax]
   140009312:	add    BYTE PTR [rax],al
   140009314:	add    BYTE PTR [rax],al
   140009316:	add    BYTE PTR [rax],al
   140009318:	or     BYTE PTR [rax+0x14000],bl
   14000931e:	add    BYTE PTR [rax],al
   140009320:	adc    al,0x0
   140009322:	add    BYTE PTR [rax],al
   140009324:	add    BYTE PTR [rax],al
   140009326:	add    BYTE PTR [rax],al
   140009328:	sbb    BYTE PTR [rax+0x14000],bl
   14000932e:	add    BYTE PTR [rax],al
   140009330:	add    BYTE PTR [rax],0x0
   140009333:	add    BYTE PTR [rax],al
   140009335:	add    BYTE PTR [rax],al
   140009337:	add    BYTE PTR [rax],ch
   140009339:	cwde   
   14000933a:	add    BYTE PTR [rax+0x1],al
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    BYTE PTR [rbp+0x0],bh
   140009342:	add    BYTE PTR [rax],al
   140009344:	add    BYTE PTR [rax],al
   140009346:	add    BYTE PTR [rax],al
   140009348:	cmp    BYTE PTR [rax+0x14000],bl
   14000934e:	add    BYTE PTR [rax],al
   140009350:	jle    0x140009352
   140009352:	add    BYTE PTR [rax],al
   140009354:	add    BYTE PTR [rax],al
   140009356:	add    BYTE PTR [rax],al
   140009358:	cdqe   
   14000935a:	add    BYTE PTR [rax+0x1],al
   14000935d:	add    BYTE PTR [rax],al
   14000935f:	add    BYTE PTR [rax+rax*1],cl
   140009362:	add    BYTE PTR [rax],al
   140009364:	add    BYTE PTR [rax],al
   140009366:	add    BYTE PTR [rax],al
   140009368:	loopne 0x1400092f6
   14000936a:	add    BYTE PTR [rax+0x1],al
   14000936d:	add    BYTE PTR [rax],al
   14000936f:	add    BYTE PTR [rcx+0x0],al
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rax-0x68],bl
   14000937a:	add    BYTE PTR [rax+0x1],al
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    BYTE PTR [rcx+0x0],ch
   140009382:	add    BYTE PTR [rax],al
   140009384:	add    BYTE PTR [rax],al
   140009386:	add    BYTE PTR [rax],al
   140009388:	xor    BYTE PTR [rbp+0x14000],cl
   14000938e:	add    BYTE PTR [rax],al
   140009390:	jo     0x140009392
   140009392:	add    BYTE PTR [rax],al
   140009394:	add    BYTE PTR [rax],al
   140009396:	add    BYTE PTR [rax],al
   140009398:	push   0x1400098
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rcx],al
   1400093a1:	add    BYTE PTR [rax],al
   1400093a3:	add    BYTE PTR [rax],al
   1400093a5:	add    BYTE PTR [rax],al
   1400093a7:	add    BYTE PTR [rax+0x1400098],al
   1400093ad:	add    BYTE PTR [rax],al
   1400093af:	add    BYTE PTR [rdx+0x0],al
   1400093b5:	add    BYTE PTR [rax],al
   1400093b7:	add    BYTE PTR [rax+0x1400098],bl
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400093c6:	add    BYTE PTR [rax],al
   1400093c8:	mov    al,0x98
   1400093ca:	add    BYTE PTR [rax+0x1],al
   1400093cd:	add    BYTE PTR [rax],al
   1400093cf:	add    BYTE PTR [rbp+0x0],al
   1400093d5:	add    BYTE PTR [rax],al
   1400093d7:	add    al,cl
   1400093d9:	cwde   
   1400093da:	add    BYTE PTR [rax+0x1],al
   1400093dd:	add    BYTE PTR [rax],al
   1400093df:	add    BYTE PTR [rip+0x0],cl        # 0x1400093e5
   1400093e5:	add    BYTE PTR [rax],al
   1400093e7:	add    al,dl
   1400093e9:	mov    eax,DWORD PTR [rax]
   1400093eb:	rex add DWORD PTR [rax],eax
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	xchg   BYTE PTR [rax],al
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	add    BYTE PTR [rax],al
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	fcomp  DWORD PTR [rax+0x14000]
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	xchg   DWORD PTR [rax],eax
   140009402:	add    BYTE PTR [rax],al
   140009404:	add    BYTE PTR [rax],al
   140009406:	add    BYTE PTR [rax],al
   140009408:	call   0x1414094a5
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    BYTE PTR [rsi],bl
	...
   140009419:	cdq    
   14000941a:	add    BYTE PTR [rax+0x1],al
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    BYTE PTR [rax+rax*1],ah
   140009422:	add    BYTE PTR [rax],al
   140009424:	add    BYTE PTR [rax],al
   140009426:	add    BYTE PTR [rax],al
   140009428:	sbb    BYTE PTR [rcx+0x14000],bl
   14000942e:	add    BYTE PTR [rax],al
   140009430:	or     eax,DWORD PTR [rax]
   140009432:	add    BYTE PTR [rax],al
   140009434:	add    BYTE PTR [rax],al
   140009436:	add    BYTE PTR [rax],al
   140009438:	clc    
   140009439:	mov    WORD PTR [rax],es
   14000943b:	rex add DWORD PTR [rax],eax
   14000943e:	add    BYTE PTR [rax],al
   140009440:	and    al,BYTE PTR [rax]
   140009442:	add    BYTE PTR [rax],al
   140009444:	add    BYTE PTR [rax],al
   140009446:	add    BYTE PTR [rax],al
   140009448:	cmp    BYTE PTR [rcx+0x14000],bl
   14000944e:	add    BYTE PTR [rax],al
   140009450:	jg     0x140009452
   140009452:	add    BYTE PTR [rax],al
   140009454:	add    BYTE PTR [rax],al
   140009456:	add    BYTE PTR [rax],al
   140009458:	push   rax
   140009459:	cdq    
   14000945a:	add    BYTE PTR [rax+0x1],al
   14000945d:	add    BYTE PTR [rax],al
   14000945f:	add    BYTE PTR [rcx+0x0],cl
   140009465:	add    BYTE PTR [rax],al
   140009467:	add    BYTE PTR [rax-0x67],ch
   14000946a:	add    BYTE PTR [rax+0x1],al
   14000946d:	add    BYTE PTR [rax],al
   14000946f:	add    BYTE PTR [rbx+0x0],cl
   140009475:	add    BYTE PTR [rax],al
   140009477:	add    BYTE PTR [rax-0x67],bh
   14000947a:	add    BYTE PTR [rax+0x1],al
   14000947d:	add    BYTE PTR [rax],al
   14000947f:	add    BYTE PTR [rdx+0x0],cl
   140009485:	add    BYTE PTR [rax],al
   140009487:	add    BYTE PTR [rax+0x1400099],cl
   14000948d:	add    BYTE PTR [rax],al
   14000948f:	add    BYTE PTR [rdi],dl
   140009491:	add    BYTE PTR [rax],al
   140009493:	add    BYTE PTR [rax],al
   140009495:	add    BYTE PTR [rax],al
   140009497:	add    BYTE PTR [rax+0x1400099],bl
   14000949d:	add    BYTE PTR [rax],al
   14000949f:	add    BYTE PTR [rax],bl
   1400094a1:	add    BYTE PTR [rax],al
   1400094a3:	add    BYTE PTR [rax],al
   1400094a5:	add    BYTE PTR [rax],al
   1400094a7:	add    BYTE PTR [rax-0x73],cl
   1400094aa:	add    BYTE PTR [rax+0x1],al
   1400094ad:	add    BYTE PTR [rax],al
   1400094af:	add    BYTE PTR [rdi],bl
   1400094b1:	add    BYTE PTR [rax],al
   1400094b3:	add    BYTE PTR [rax],al
   1400094b5:	add    BYTE PTR [rax],al
   1400094b7:	add    BYTE PTR [rax+0x1400099],bh
   1400094bd:	add    BYTE PTR [rax],al
   1400094bf:	add    BYTE PTR [rdx+0x0],dh
   1400094c2:	add    BYTE PTR [rax],al
   1400094c4:	add    BYTE PTR [rax],al
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	enter  0x99,0x40
   1400094cc:	add    DWORD PTR [rax],eax
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	test   BYTE PTR [rax],al
   1400094d2:	add    BYTE PTR [rax],al
   1400094d4:	add    BYTE PTR [rax],al
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	call   0x141409576
   1400094dd:	add    BYTE PTR [rax],al
   1400094df:	add    BYTE PTR [rax+0x0],cl
   1400094e5:	add    BYTE PTR [rax],al
   1400094e7:	add    al,bh
   1400094e9:	cdq    
   1400094ea:	add    BYTE PTR [rax+0x1],al
	...
   1400094fd:	add    BYTE PTR [rax],al
   1400094ff:	add    BYTE PTR [rcx+0x64],ah
   140009502:	fs jb  0x14000956a
   140009505:	jae    0x14000957a
   140009507:	and    BYTE PTR [rsi+0x61],ah
   14000950a:	ins    DWORD PTR es:[rdi],dx
   14000950b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   140009513:	jae    0x14000958a
   140009515:	jo     0x140009587
   140009517:	outs   dx,DWORD PTR ds:[rsi]
   140009518:	jb     0x14000958e
   14000951a:	gs add BYTE PTR fs:[rax],al
   14000951e:	add    BYTE PTR [rax],al
   140009520:	(bad)  
   140009521:	fs fs jb 0x14000958a
   140009525:	jae    0x14000959a
   140009527:	and    BYTE PTR [rcx+0x6e],ch
   14000952a:	and    BYTE PTR [rbp+0x73],dh
   14000952d:	add    BYTE PTR gs:[rax],al
   140009530:	(bad)  
   140009531:	fs fs jb 0x14000959a
   140009535:	jae    0x1400095aa
   140009537:	and    BYTE PTR [rsi+0x6f],ch
   14000953a:	je     0x14000955c
   14000953c:	(bad)  
   14000953d:	jbe    0x1400095a0
   14000953f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140009547:	add    BYTE PTR [rcx+0x6c],ah
   14000954a:	jb     0x1400095b1
   14000954c:	(bad)  
   14000954d:	fs jns 0x140009570
   140009550:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009553:	outs   dx,BYTE PTR ds:[rsi]
   140009554:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140009559:	add    BYTE PTR [rax],al
   14000955b:	add    BYTE PTR [rax],al
   14000955d:	add    BYTE PTR [rax],al
   14000955f:	add    BYTE PTR [rcx+0x72],ah
   140009562:	addr32 jne 0x1400095d2
   140009565:	outs   dx,BYTE PTR gs:[rsi]
   140009567:	je     0x140009589
   140009569:	ins    BYTE PTR es:[rdi],dx
   14000956a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   140009571:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140009575:	add    BYTE PTR [eax],al
   140009578:	(bad)  
   140009579:	jb     0x1400095e2
   14000957b:	jne    0x1400095ea
   14000957d:	outs   dx,BYTE PTR gs:[rsi]
   14000957f:	je     0x1400095a1
   140009581:	outs   dx,DWORD PTR ds:[rsi]
   140009582:	jne    0x1400095f8
   140009584:	and    BYTE PTR [rdi+0x66],ch
   140009587:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14000958b:	(bad)  
   14000958c:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   140009593:	and    BYTE PTR [rcx+0x64],ah
   140009596:	fs jb  0x1400095fe
   140009599:	jae    0x14000960e
   14000959b:	add    BYTE PTR [rax],al
   14000959d:	add    BYTE PTR [rax],al
   14000959f:	add    BYTE PTR [rdx+0x61],ah
   1400095a2:	and    BYTE PTR fs:[rsi+0x69],ah
   1400095a6:	ins    BYTE PTR es:[rdi],dx
   1400095a7:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   1400095ac:	movsxd esi,DWORD PTR [rdx+0x69]
   1400095af:	jo     0x140009625
   1400095b1:	outs   dx,DWORD PTR ds:[rsi]
   1400095b2:	jb     0x1400095b4
   1400095b4:	add    BYTE PTR [rax],al
   1400095b6:	add    BYTE PTR [rax],al
   1400095b8:	(bad)
   1400095bd:	gs jae 0x140009633
   1400095c0:	(bad)  
   1400095c1:	add    BYTE PTR gs:[eax],al
   1400095c5:	add    BYTE PTR [rax],al
   1400095c7:	add    BYTE PTR [rdx+0x72],ah
   1400095ca:	outs   dx,DWORD PTR ds:[rsi]
   1400095cb:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   1400095cf:	jo     0x14000963a
   1400095d1:	jo     0x140009638
   1400095d3:	add    BYTE PTR [rax],al
   1400095d5:	add    BYTE PTR [rax],al
   1400095d7:	add    BYTE PTR [rbx+0x6f],ah
   1400095da:	outs   dx,BYTE PTR ds:[rsi]
   1400095db:	outs   dx,BYTE PTR ds:[rsi]
   1400095dc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095e1:	outs   dx,BYTE PTR ds:[rsi]
   1400095e2:	and    BYTE PTR [rcx+0x62],ah
   1400095e5:	outs   dx,DWORD PTR ds:[rsi]
   1400095e6:	jb     0x14000965c
   1400095e8:	gs add BYTE PTR fs:[rax],al
   1400095ec:	add    BYTE PTR [rax],al
   1400095ee:	add    BYTE PTR [rax],al
   1400095f0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400095f3:	outs   dx,BYTE PTR ds:[rsi]
   1400095f4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095f9:	outs   dx,BYTE PTR ds:[rsi]
   1400095fa:	and    BYTE PTR [rcx+0x6c],ah
   1400095fd:	jb     0x140009664
   1400095ff:	(bad)  
   140009600:	fs jns 0x140009623
   140009603:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   14000960a:	jb     0x140009671
   14000960c:	jae    0x140009681
   14000960e:	add    BYTE PTR [rax],al
   140009610:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009613:	outs   dx,BYTE PTR ds:[rsi]
   140009614:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009619:	outs   dx,BYTE PTR ds:[rsi]
   14000961a:	and    BYTE PTR [rdx+0x65],dh
   14000961d:	data16 jne 0x140009693
   140009620:	gs add BYTE PTR fs:[rax],al
   140009624:	add    BYTE PTR [rax],al
   140009626:	add    BYTE PTR [rax],al
   140009628:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000962b:	outs   dx,BYTE PTR ds:[rsi]
   14000962c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009631:	outs   dx,BYTE PTR ds:[rsi]
   140009632:	and    BYTE PTR [rdx+0x65],dh
   140009635:	jae    0x14000969c
   140009637:	je     0x140009639
   140009639:	add    BYTE PTR [rax],al
   14000963b:	add    BYTE PTR [rax],al
   14000963d:	add    BYTE PTR [rax],al
   14000963f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140009643:	je     0x1400096ae
   140009645:	outs   dx,BYTE PTR ds:[rsi]
   140009646:	(bad)  
   140009647:	je     0x1400096b2
   140009649:	outs   dx,DWORD PTR ds:[rsi]
   14000964a:	outs   dx,BYTE PTR ds:[rsi]
   14000964b:	and    BYTE PTR [rcx+0x64],ah
   14000964e:	fs jb  0x1400096b6
   140009651:	jae    0x1400096c6
   140009653:	and    BYTE PTR [rdx+0x65],dh
   140009656:	jno    0x1400096cd
   140009658:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000965f:	add    BYTE PTR [rbp+0x78],ah
   140009662:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140009666:	(bad)  
   140009667:	(bad)  
   140009668:	ins    BYTE PTR es:[rdi],dx
   140009669:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000966d:	jb     0x1400096dc
   14000966f:	(bad)  
   140009670:	je     0x140009692
   140009672:	gs jb  0x1400096e7
   140009675:	outs   dx,DWORD PTR ds:[rsi]
   140009676:	jb     0x140009678
   140009678:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14000967f:	outs   dx,DWORD PTR ds:[rsi]
   140009680:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140009684:	add    BYTE PTR gs:[eax],al
   140009688:	push   0x2074736f
   14000968d:	jne    0x1400096fd
   14000968f:	jb     0x1400096f6
   140009691:	(bad)  
   140009692:	movsxd ebp,DWORD PTR [rax+0x61]
   140009695:	(bad)  
   140009696:	ins    BYTE PTR es:[rdi],dx
   140009697:	add    BYTE PTR gs:[rax],al
   14000969a:	add    BYTE PTR [rax],al
   14000969c:	add    BYTE PTR [rax],al
   14000969e:	add    BYTE PTR [rax],al
   1400096a0:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   1400096a8:	gs jb  0x1400096cb
   1400096ab:	jb     0x140009712
   1400096ad:	ins    DWORD PTR es:[rdi],dx
   1400096ae:	outs   dx,DWORD PTR ds:[rsi]
   1400096af:	jbe    0x140009716
   1400096b1:	add    BYTE PTR fs:[rax],al
   1400096b4:	add    BYTE PTR [rax],al
   1400096b6:	add    BYTE PTR [rax],al
   1400096b8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   1400096c0:	(bad)  
   1400096c1:	jns    0x140009737
   1400096c3:	and    BYTE PTR gs:[rbx+0x65],dh
   1400096c7:	jno    0x14000973e
   1400096c9:	outs   dx,BYTE PTR gs:[rsi]
   1400096cb:	movsxd esp,DWORD PTR [rbp+0x0]
   1400096ce:	add    BYTE PTR [rax],al
   1400096d0:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   1400096d7:	jo     0x14000974b
   1400096d9:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   1400096e0:	and    BYTE PTR [rbx+0x6f],ah
   1400096e3:	outs   dx,BYTE PTR ds:[rsi]
   1400096e4:	je     0x140009758
   1400096e6:	outs   dx,DWORD PTR ds:[rsi]
   1400096e7:	ins    BYTE PTR es:[rdi],dx
   1400096e8:	and    BYTE PTR [rdi+0x70],ch
   1400096eb:	gs jb  0x14000974f
   1400096ee:	je     0x140009759
   1400096f0:	outs   dx,DWORD PTR ds:[rsi]
   1400096f1:	outs   dx,BYTE PTR ds:[rsi]
   1400096f2:	add    BYTE PTR [rax],al
   1400096f4:	add    BYTE PTR [rax],al
   1400096f6:	add    BYTE PTR [rax],al
   1400096f8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400096ff:	and    BYTE PTR [rbx+0x65],dh
   140009702:	imul   eax,DWORD PTR gs:[rax],0x0
   140009706:	add    BYTE PTR [rax],al
   140009708:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   14000970f:	jb     0x140009776
   140009711:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140009715:	jns    0x140009717
   140009717:	add    BYTE PTR [rbp+0x65],ch
   14000971a:	jae    0x14000978f
   14000971c:	(bad)  
   14000971d:	and    BYTE PTR gs:[ebx+0x69],dh
   140009722:	jp     0x140009789
   140009724:	add    BYTE PTR [rax],al
   140009726:	add    BYTE PTR [rax],al
   140009728:	outs   dx,BYTE PTR ds:[rsi]
   140009729:	gs je  0x1400097a3
   14000972c:	outs   dx,DWORD PTR ds:[rsi]
   14000972d:	jb     0x14000979a
   14000972f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   140009733:	outs   dx,BYTE PTR ds:[rsi]
   140009734:	add    BYTE PTR [rax],al
   140009736:	add    BYTE PTR [rax],al
   140009738:	outs   dx,BYTE PTR ds:[rsi]
   140009739:	gs je  0x1400097b3
   14000973c:	outs   dx,DWORD PTR ds:[rsi]
   14000973d:	jb     0x1400097aa
   14000973f:	and    BYTE PTR [rdx+0x65],dh
   140009742:	jae    0x1400097a9
   140009744:	je     0x140009746
   140009746:	add    BYTE PTR [rax],al
   140009748:	outs   dx,BYTE PTR ds:[rsi]
   140009749:	gs je  0x1400097c3
   14000974c:	outs   dx,DWORD PTR ds:[rsi]
   14000974d:	jb     0x1400097ba
   14000974f:	and    BYTE PTR [rbp+0x6e],dh
   140009752:	jb     0x1400097b9
   140009754:	(bad)  
   140009755:	movsxd ebp,DWORD PTR [rax+0x61]
   140009758:	(bad)  
   140009759:	ins    BYTE PTR es:[rdi],dx
   14000975a:	add    BYTE PTR gs:[rax],al
   14000975d:	add    BYTE PTR [rax],al
   14000975f:	add    BYTE PTR [rsi+0x6f],ch
   140009762:	and    BYTE PTR [rdx+0x75],ah
   140009765:	data16 data16 gs jb 0x14000978a
   14000976a:	jae    0x1400097dc
   14000976c:	(bad)  
   14000976d:	movsxd esp,DWORD PTR [rbp+0x0]
   140009770:	outs   dx,BYTE PTR ds:[rsi]
   140009771:	outs   dx,DWORD PTR ds:[rsi]
   140009772:	and    BYTE PTR [rbx+0x68],ah
   140009775:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14000977d:	gs jae 0x1400097f3
	...
   140009788:	outs   dx,BYTE PTR ds:[rsi]
   140009789:	outs   dx,DWORD PTR ds:[rsi]
   14000978a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14000978e:	imul   eax,DWORD PTR [rax],0x6e
   140009791:	outs   dx,DWORD PTR ds:[rsi]
   140009792:	and    BYTE PTR [rbp+0x65],ch
   140009795:	jae    0x14000980a
   140009797:	(bad)  
   140009798:	and    BYTE PTR gs:[ecx+0x76],ah
   14000979d:	(bad)  
   14000979e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400097a6:	add    BYTE PTR [rax],al
   1400097a8:	outs   dx,BYTE PTR ds:[rsi]
   1400097a9:	outs   dx,DWORD PTR ds:[rsi]
   1400097aa:	and    BYTE PTR [rbp+0x65],ch
   1400097ad:	jae    0x140009822
   1400097af:	(bad)  
   1400097b0:	add    BYTE PTR gs:[eax],al
   1400097b4:	add    BYTE PTR [rax],al
   1400097b6:	add    BYTE PTR [rax],al
   1400097b8:	outs   dx,BYTE PTR ds:[rsi]
   1400097b9:	outs   dx,DWORD PTR ds:[rsi]
   1400097ba:	and    BYTE PTR [rax+0x72],dh
   1400097bd:	outs   dx,DWORD PTR ds:[rsi]
   1400097be:	je     0x14000982f
   1400097c0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400097c3:	and    BYTE PTR [rdi+0x70],ch
   1400097c6:	je     0x140009831
   1400097c8:	outs   dx,DWORD PTR ds:[rsi]
   1400097c9:	outs   dx,BYTE PTR ds:[rsi]
   1400097ca:	add    BYTE PTR [rax],al
   1400097cc:	add    BYTE PTR [rax],al
   1400097ce:	add    BYTE PTR [rax],al
   1400097d0:	outs   dx,BYTE PTR ds:[rsi]
   1400097d1:	outs   dx,DWORD PTR ds:[rsi]
   1400097d2:	and    BYTE PTR [rbx+0x74],dh
   1400097d5:	jb     0x14000983c
   1400097d7:	(bad)  
   1400097d8:	ins    DWORD PTR es:[rdi],dx
   1400097d9:	and    BYTE PTR [rdx+0x65],dh
   1400097dc:	jae    0x14000984d
   1400097de:	jne    0x140009852
   1400097e0:	movsxd esp,DWORD PTR [rbp+0x73]
   1400097e3:	add    BYTE PTR [rax],al
   1400097e5:	add    BYTE PTR [rax],al
   1400097e7:	add    BYTE PTR [rsi+0x6f],ch
   1400097ea:	and    BYTE PTR [rbx+0x75],dh
   1400097ed:	movsxd ebp,DWORD PTR [rax+0x20]
   1400097f0:	fs gs jbe 0x14000985d
   1400097f4:	movsxd esp,DWORD PTR [rbp+0x20]
   1400097f7:	outs   dx,DWORD PTR ds:[rsi]
   1400097f8:	jb     0x14000981a
   1400097fa:	(bad)  
   1400097fb:	fs fs jb 0x140009864
   1400097ff:	jae    0x140009874
   140009801:	add    BYTE PTR [rax],al
   140009803:	add    BYTE PTR [rax],al
   140009805:	add    BYTE PTR [rax],al
   140009807:	add    BYTE PTR [rsi+0x6f],ch
   14000980a:	and    BYTE PTR [rbx+0x75],dh
   14000980d:	movsxd ebp,DWORD PTR [rax+0x20]
   140009810:	jo     0x140009884
   140009812:	outs   dx,DWORD PTR ds:[rsi]
   140009813:	movsxd esp,DWORD PTR [rbp+0x73]
   140009816:	jae    0x140009818
   140009818:	outs   dx,BYTE PTR ds:[rsi]
   140009819:	outs   dx,DWORD PTR ds:[rsi]
   14000981a:	je     0x14000983c
   14000981c:	(bad)  
   14000981d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140009821:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140009826:	jns    0x140009828
   140009828:	outs   dx,BYTE PTR ds:[rsi]
   140009829:	outs   dx,DWORD PTR ds:[rsi]
   14000982a:	je     0x14000984c
   14000982c:	(bad)  
   14000982d:	and    BYTE PTR [rbx+0x6f],dh
   140009830:	movsxd ebp,DWORD PTR [rbx+0x65]
   140009833:	je     0x140009835
   140009835:	add    BYTE PTR [rax],al
   140009837:	add    BYTE PTR [rsi+0x6f],ch
   14000983a:	je     0x14000985c
   14000983c:	(bad)  
   14000983d:	and    BYTE PTR [rbx+0x74],dh
   140009840:	jb     0x1400098a7
   140009842:	(bad)  
   140009843:	ins    DWORD PTR es:[rdi],dx
   140009844:	add    BYTE PTR [rax],al
   140009846:	add    BYTE PTR [rax],al
   140009848:	outs   dx,BYTE PTR ds:[rsi]
   140009849:	outs   dx,DWORD PTR ds:[rsi]
   14000984a:	je     0x14000986c
   14000984c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000984f:	outs   dx,BYTE PTR ds:[rsi]
   140009850:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140009855:	add    BYTE PTR [rax],al
   140009857:	add    BYTE PTR [rsi+0x6f],ch
   14000985a:	je     0x14000987c
   14000985c:	jae    0x1400098d3
   14000985e:	jo     0x1400098d0
   140009860:	outs   dx,DWORD PTR ds:[rsi]
   140009861:	jb     0x1400098d7
   140009863:	gs add BYTE PTR fs:[rax],al
   140009867:	add    BYTE PTR [rdi+0x70],ch
   14000986a:	gs jb  0x1400098ce
   14000986d:	je     0x1400098d8
   14000986f:	outs   dx,DWORD PTR ds:[rsi]
   140009870:	outs   dx,BYTE PTR ds:[rsi]
   140009871:	and    BYTE PTR [rcx+0x6e],ch
   140009874:	and    BYTE PTR [rax+0x72],dh
   140009877:	outs   dx,DWORD PTR ds:[rsi]
   140009878:	addr32 jb 0x1400098e0
   14000987b:	jae    0x1400098f0
   14000987d:	add    BYTE PTR [rax],al
   14000987f:	add    BYTE PTR [rdi+0x70],ch
   140009882:	gs jb  0x1400098e6
   140009885:	je     0x1400098f0
   140009887:	outs   dx,DWORD PTR ds:[rsi]
   140009888:	outs   dx,BYTE PTR ds:[rsi]
   140009889:	and    BYTE PTR [rsi+0x6f],ch
   14000988c:	je     0x1400098ae
   14000988e:	jo     0x1400098f5
   140009890:	jb     0x1400098ff
   140009892:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14000989a:	gs jb  0x1400098fe
   14000989d:	je     0x140009908
   14000989f:	outs   dx,DWORD PTR ds:[rsi]
   1400098a0:	outs   dx,BYTE PTR ds:[rsi]
   1400098a1:	and    BYTE PTR [rsi+0x6f],ch
   1400098a4:	je     0x1400098c6
   1400098a6:	jae    0x14000991d
   1400098a8:	jo     0x14000991a
   1400098aa:	outs   dx,DWORD PTR ds:[rsi]
   1400098ab:	jb     0x140009921
   1400098ad:	gs add BYTE PTR fs:[rdi+0x70],ch
   1400098b2:	gs jb  0x140009916
   1400098b5:	je     0x140009920
   1400098b7:	outs   dx,DWORD PTR ds:[rsi]
   1400098b8:	outs   dx,BYTE PTR ds:[rsi]
   1400098b9:	and    BYTE PTR [rdi+0x6f],dh
   1400098bc:	jne    0x14000992a
   1400098be:	and    BYTE PTR fs:[rdx+0x6c],ah
   1400098c2:	outs   dx,DWORD PTR ds:[rsi]
   1400098c3:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400098c6:	add    BYTE PTR [rax],al
   1400098c8:	outs   dx,DWORD PTR ds:[rsi]
   1400098c9:	ja     0x140009939
   1400098cb:	gs jb  0x1400098ee
   1400098ce:	fs gs (bad) 
   1400098d1:	add    BYTE PTR fs:[rax],al
   1400098d4:	add    BYTE PTR [rax],al
   1400098d6:	add    BYTE PTR [rax],al
   1400098d8:	jo     0x14000994c
   1400098da:	outs   dx,DWORD PTR ds:[rsi]
   1400098db:	je     0x14000994c
   1400098dd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400098e0:	and    BYTE PTR [rbp+0x72],ah
   1400098e3:	jb     0x140009954
   1400098e5:	jb     0x1400098e7
   1400098e7:	add    BYTE PTR [rax+0x72],dh
   1400098ea:	outs   dx,DWORD PTR ds:[rsi]
   1400098eb:	je     0x14000995c
   1400098ed:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400098f0:	and    BYTE PTR [rsi+0x6f],ch
   1400098f3:	je     0x140009915
   1400098f5:	jae    0x14000996c
   1400098f7:	jo     0x140009969
   1400098f9:	outs   dx,DWORD PTR ds:[rsi]
   1400098fa:	jb     0x140009970
   1400098fc:	gs add BYTE PTR fs:[rax],al
   140009900:	jb     0x140009967
   140009902:	(bad)  
   140009903:	and    BYTE PTR fs:[rdi+0x6e],ch
   140009907:	ins    BYTE PTR es:[rdi],dx
   140009908:	jns    0x14000992a
   14000990a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   140009911:	jae    0x140009987
   140009913:	gs ins DWORD PTR es:[rdi],dx
   140009915:	add    BYTE PTR [rax],al
   140009917:	add    BYTE PTR [rdx+0x65],dh
   14000991a:	jae    0x14000998b
   14000991c:	jne    0x140009990
   14000991e:	movsxd esp,DWORD PTR [rbp+0x20]
   140009921:	fs gs (bad) 
   140009924:	fs ins BYTE PTR es:[rdi],dx
   140009926:	outs   dx,DWORD PTR ds:[rsi]
   140009927:	movsxd ebp,DWORD PTR [rbx+0x20]
   14000992a:	ja     0x14000999b
   14000992c:	jne    0x14000999a
   14000992e:	and    BYTE PTR fs:[rdi+0x63],ch
   140009932:	movsxd esi,DWORD PTR [rbp+0x72]
   140009935:	add    BYTE PTR [rax],al
   140009937:	add    BYTE PTR [rdx+0x65],dh
   14000993a:	jae    0x1400099b1
   14000993c:	ins    BYTE PTR es:[rdi],dx
   14000993d:	je     0x14000995f
   14000993f:	outs   dx,DWORD PTR ds:[rsi]
   140009940:	jne    0x1400099b6
   140009942:	and    BYTE PTR [rdi+0x66],ch
   140009945:	and    BYTE PTR [rdx+0x61],dh
   140009948:	outs   dx,BYTE PTR ds:[rsi]
   140009949:	add    BYTE PTR gs:[eax],al
   14000994d:	add    BYTE PTR [rax],al
   14000994f:	add    BYTE PTR [rbx+0x74],dh
   140009952:	(bad)  
   140009953:	je     0x1400099ba
   140009955:	and    BYTE PTR [rsi+0x6f],ch
   140009958:	je     0x14000997a
   14000995a:	jb     0x1400099c1
   14000995c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000995f:	gs jb  0x1400099c3
   140009962:	(bad)  
   140009963:	ins    BYTE PTR es:[rdi],dx
   140009964:	add    BYTE PTR gs:[rax],al
   140009967:	add    BYTE PTR [rbx+0x74],dh
   14000996a:	jb     0x1400099d1
   14000996c:	(bad)  
   14000996d:	ins    DWORD PTR es:[rdi],dx
   14000996e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   140009972:	outs   dx,DWORD PTR gs:[rsi]
   140009974:	jne    0x1400099ea
   140009976:	add    BYTE PTR [rax],al
   140009978:	je     0x1400099df
   14000997a:	js     0x1400099f0
   14000997c:	and    BYTE PTR [rsi+0x69],ah
   14000997f:	ins    BYTE PTR es:[rdi],dx
   140009980:	and    BYTE PTR gs:[rdx+0x75],ah
   140009984:	jae    0x1400099ff
   140009986:	add    BYTE PTR [rax],al
   140009988:	je     0x1400099f3
   14000998a:	ins    DWORD PTR es:[rdi],dx
   14000998b:	gs and BYTE PTR fs:[rdi+0x75],ch
   140009990:	je     0x140009992
   140009992:	add    BYTE PTR [rax],al
   140009994:	add    BYTE PTR [rax],al
   140009996:	add    BYTE PTR [rax],al
   140009998:	je     0x140009a09
   14000999a:	outs   dx,DWORD PTR ds:[rsi]
   14000999b:	and    BYTE PTR [rbp+0x61],ch
   14000999e:	outs   dx,BYTE PTR ds:[rsi]
   14000999f:	jns    0x1400099c1
   1400099a1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   1400099a8:	jo     0x140009a0f
   1400099aa:	outs   dx,BYTE PTR ds:[rsi]
   1400099ab:	and    BYTE PTR [rcx+0x6e],ch
   1400099ae:	and    BYTE PTR [rbx+0x79],dh
   1400099b1:	jae    0x140009a27
   1400099b3:	gs ins DWORD PTR es:[rdi],dx
   1400099b5:	add    BYTE PTR [rax],al
   1400099b7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400099bb:	and    BYTE PTR [rbp+0x61],ch
   1400099be:	outs   dx,BYTE PTR ds:[rsi]
   1400099bf:	jns    0x1400099e1
   1400099c1:	ins    BYTE PTR es:[rdi],dx
   1400099c2:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   1400099c9:	outs   dx,DWORD PTR ds:[rsi]
   1400099ca:	outs   dx,DWORD PTR ds:[rsi]
   1400099cb:	and    BYTE PTR [rbp+0x61],ch
   1400099ce:	outs   dx,BYTE PTR ds:[rsi]
   1400099cf:	jns    0x1400099f1
   1400099d1:	jae    0x140009a4c
   1400099d3:	ins    DWORD PTR es:[rdi],dx
   1400099d4:	(bad)  
   1400099d5:	outs   dx,DWORD PTR ds:[rsi]
   1400099d6:	ins    BYTE PTR es:[rdi],dx
   1400099d7:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   1400099de:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400099e2:	gs ins BYTE PTR es:[rdi],dx
   1400099e4:	jae    0x1400099e6
   1400099e6:	add    BYTE PTR [rax],al
   1400099e8:	jbe    0x140009a4b
   1400099ea:	ins    BYTE PTR es:[rdi],dx
   1400099eb:	jne    0x140009a52
   1400099ed:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400099f1:	and    BYTE PTR [rcx+riz*2+0x72],ch
   1400099f5:	add    BYTE PTR gs:[edi+0x72],dh
   1400099fa:	outs   dx,DWORD PTR ds:[rsi]
   1400099fb:	outs   dx,BYTE PTR ds:[rsi]
   1400099fc:	and    BYTE PTR [eax+0x72],dh
   140009a00:	outs   dx,DWORD PTR ds:[rsi]
   140009a01:	je     0x140009a72
   140009a03:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140009a06:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140009a0a:	add    BYTE PTR gs:[rax],al
   140009a0d:	add    BYTE PTR [rax],al
   140009a0f:	add    al,al
   140009a11:	data16 add BYTE PTR [rax+0x1],al
   140009a15:	add    BYTE PTR [rax],al
   140009a17:	add    BYTE PTR [rax],dh
   140009a19:	adc    DWORD PTR [rax],eax
   140009a1b:	rex add DWORD PTR [rax],eax
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	rcl    BYTE PTR [rcx],1
   140009a22:	add    BYTE PTR [rax+0x1],al
   140009a25:	add    BYTE PTR [rax],al
   140009a27:	add    al,dh
   140009a29:	adc    DWORD PTR [rax],eax
   140009a2b:	rex add DWORD PTR [rax],eax
   140009a2e:	add    BYTE PTR [rax],al
   140009a30:	movabs al,ds:0xf000000001400010
   140009a39:	adc    BYTE PTR [rax],al
   140009a3b:	rex add DWORD PTR [rax],eax
   140009a3e:	add    BYTE PTR [rax],al
   140009a40:	lock (bad) 
   140009a42:	add    BYTE PTR [rax+0x1],al
	...
   140009a4d:	add    BYTE PTR [rax],al
   140009a4f:	add    al,al
   140009a51:	add    BYTE PTR [rax],al
   140009a53:	add    BYTE PTR [rax],al
   140009a55:	add    BYTE PTR [rax],al
   140009a57:	rex.RX mov r12b,BYTE PTR [rdx]
   140009a5a:	adc    bl,BYTE PTR [rsi]
   140009a5c:	stc    
   140009a5d:	scas   al,BYTE PTR es:[rdi]
   140009a5e:	ins    DWORD PTR es:[rdi],dx
   140009a5f:	rex.WRX mov WORD PTR [rbx],?
   140009a62:	movabs eax,ds:0x15705fe2f0db92
   140009a6b:	rex add DWORD PTR [rax],eax
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	(bad)  
   140009a71:	adc    al,0x0
   140009a73:	rex add DWORD PTR [rax],eax
   140009a76:	add    BYTE PTR [rax],al
   140009a78:	rcl    BYTE PTR [rax+rax*1],0x40
   140009a7c:	add    DWORD PTR [rax],eax
   140009a7e:	add    BYTE PTR [rax],al
   140009a80:	mov    al,0x13
   140009a82:	add    BYTE PTR [rax+0x1],al
   140009a85:	add    BYTE PTR [rax],al
   140009a87:	add    BYTE PTR [rax],dl
   140009a89:	(bad)  
   140009a8a:	add    BYTE PTR [rax+0x1],al
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    al,al
   140009a91:	(bad)  
   140009a92:	add    BYTE PTR [rax+0x1],al
   140009a95:	add    BYTE PTR [rax],al
   140009a97:	add    BYTE PTR [rdi],ch
   140009a99:	mov    ah,0x67
   140009a9b:	push   rcx
   140009a9c:	adc    ecx,eax
   140009a9e:	movabs eax,ds:0xb1be6ab8ec4ac47
   140009aa7:	push   rsp
   140009aa8:	xor    BYTE PTR [rcx],dl
   140009aaa:	add    BYTE PTR [rax+0x1],al
   140009aad:	add    BYTE PTR [rax],al
   140009aaf:	add    al,dl
   140009ab1:	adc    DWORD PTR [rax],eax
   140009ab3:	rex add DWORD PTR [rax],eax
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	lock adc DWORD PTR [rax],eax
   140009abb:	rex add DWORD PTR [rax],eax
   140009abe:	add    BYTE PTR [rax],al
   140009ac0:	loopne 0x140009b18
   140009ac2:	add    BYTE PTR [rax+0x1],al
   140009ac5:	add    BYTE PTR [rax],al
   140009ac7:	add    al,ah
   140009ac9:	push   rsi
   140009aca:	add    BYTE PTR [rax+0x1],al
   140009acd:	add    BYTE PTR [rax],al
   140009acf:	add    al,al
   140009ad1:	(bad)  
   140009ad2:	add    BYTE PTR [rax+0x1],al
   140009ad5:	add    BYTE PTR [rax],al
   140009ad7:	add    BYTE PTR [rcx],al
   140009ad9:	add    BYTE PTR [rax],al
   140009adb:	add    BYTE PTR [rax],al
   140009add:	add    BYTE PTR [rax],al
   140009adf:	add    al,al
   140009ae1:	add    BYTE PTR [rax],al
   140009ae3:	add    BYTE PTR [rax],al
   140009ae5:	add    BYTE PTR [rax],al
   140009ae7:	rex.RX add BYTE PTR [rax],r8b
   140009aea:	add    BYTE PTR [rax],al
   140009aec:	add    BYTE PTR [rax],al
   140009aee:	add    BYTE PTR [rax],al
   140009af0:	jo     0x140009b04
   140009af2:	add    BYTE PTR [rax+0x1],al
   140009af5:	add    BYTE PTR [rax],al
   140009af7:	add    BYTE PTR [rax+0x140009a],bl
	...
   140009b05:	add    BYTE PTR [rax],al
   140009b07:	add    al,ah
   140009b09:	mov    BYTE PTR [rax],0x40
   140009b0c:	add    DWORD PTR [rax],eax
	...
   140009b16:	add    BYTE PTR [rax],al
   140009b18:	(bad)  
   140009b19:	sbb    DWORD PTR [rax],eax
   140009b1b:	rex add DWORD PTR [rax],eax
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	rcl    BYTE PTR [rcx],1
   140009b22:	add    BYTE PTR [rax+0x1],al
   140009b25:	add    BYTE PTR [rax],al
   140009b27:	add    al,dh
   140009b29:	adc    DWORD PTR [rax],eax
   140009b2b:	rex add DWORD PTR [rax],eax
   140009b2e:	add    BYTE PTR [rax],al
   140009b30:	(bad)  
   140009b31:	sbb    BYTE PTR [rax],al
   140009b33:	rex add DWORD PTR [rax],eax
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	lock sbb BYTE PTR [rax],al
   140009b3b:	rex add DWORD PTR [rax],eax
   140009b3e:	add    BYTE PTR [rax],al
   140009b40:	lock (bad) 
   140009b42:	add    BYTE PTR [rax+0x1],al
   140009b45:	add    BYTE PTR [rax],al
   140009b47:	add    BYTE PTR [rax+0x19],ah
   140009b4a:	add    BYTE PTR [rax+0x1],al
   140009b4d:	add    BYTE PTR [rax],al
   140009b4f:	add    al,dl
   140009b51:	adc    DWORD PTR [rax],eax
   140009b53:	rex add DWORD PTR [rax],eax
   140009b56:	add    BYTE PTR [rax],al
   140009b58:	lock adc DWORD PTR [rax],eax
   140009b5b:	rex add DWORD PTR [rax],eax
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	loopne 0x140009bb8
   140009b62:	add    BYTE PTR [rax+0x1],al
   140009b65:	add    BYTE PTR [rax],al
   140009b67:	add    al,ah
   140009b69:	push   rsi
   140009b6a:	add    BYTE PTR [rax+0x1],al
   140009b6d:	add    BYTE PTR [rax],al
   140009b6f:	add    al,al
   140009b71:	(bad)  
   140009b72:	add    BYTE PTR [rax+0x1],al
   140009b75:	add    BYTE PTR [rax],al
   140009b77:	add    BYTE PTR [rax+0x15],dh
   140009b7a:	add    BYTE PTR [rax+0x1],al
   140009b7d:	add    BYTE PTR [rax],al
   140009b7f:	add    BYTE PTR [rax+0x14],ah
   140009b82:	add    BYTE PTR [rax+0x1],al
   140009b85:	add    BYTE PTR [rax],al
   140009b87:	add    al,al
   140009b89:	adc    al,0x0
   140009b8b:	rex add DWORD PTR [rax],eax
   140009b8e:	add    BYTE PTR [rax],al
   140009b90:	rex sbb eax,DWORD PTR [rax]
   140009b93:	rex add DWORD PTR [rax],eax
   140009b96:	add    BYTE PTR [rax],al
   140009b98:	adc    BYTE PTR [rsi],dl
   140009b9a:	add    BYTE PTR [rax+0x1],al
   140009b9d:	add    BYTE PTR [rax],al
   140009b9f:	add    al,al
   140009ba1:	(bad)  
   140009ba2:	add    BYTE PTR [rax+0x1],al
   140009ba5:	add    BYTE PTR [rax],al
   140009ba7:	add    BYTE PTR [rax],al
   140009ba9:	sbb    al,BYTE PTR [rax]
   140009bab:	rex add DWORD PTR [rax],eax
   140009bae:	add    BYTE PTR [rax],al
   140009bb0:	cmp    BYTE PTR [rdx+0x14000],ah
	...
   140009bbe:	add    BYTE PTR [rax],al
   140009bc0:	or     bh,al
   140009bc2:	add    BYTE PTR [rax+0x1],al
	...
   140009bcd:	add    BYTE PTR [rax],al
   140009bcf:	add    BYTE PTR [rax+0x1400024],al
   140009bd5:	add    BYTE PTR [rax],al
   140009bd7:	add    BYTE PTR [rax+0x23],dh
   140009bda:	add    BYTE PTR [rax+0x1],al
   140009bdd:	add    BYTE PTR [rax],al
   140009bdf:	add    al,dl
   140009be1:	and    eax,DWORD PTR [rax]
   140009be3:	rex add DWORD PTR [rax],eax
   140009be6:	add    BYTE PTR [rax],al
   140009be8:	and    BYTE PTR [rip+0x14000],0x0        # 0x14001dbef
   140009bef:	add    al,dh
   140009bf1:	and    eax,0x14000
   140009bf6:	add    BYTE PTR [rax],al
   140009bf8:	and    BYTE PTR [rsi],ah
   140009bfa:	add    BYTE PTR [rax+0x1],al
   140009bfd:	add    BYTE PTR [rax],al
   140009bff:	add    BYTE PTR [rax+0x22],al
   140009c02:	add    BYTE PTR [rax+0x1],al
   140009c05:	add    BYTE PTR [rax],al
   140009c07:	add    BYTE PTR [rax+0x2b],ah
   140009c0a:	add    BYTE PTR [rax+0x1],al
   140009c0d:	add    BYTE PTR [rax],al
   140009c0f:	add    al,dl
   140009c11:	sub    eax,DWORD PTR [rax]
   140009c13:	rex add DWORD PTR [rax],eax
   140009c16:	add    BYTE PTR [rax],al
   140009c18:	and    BYTE PTR [rax+rax*1],ch
   140009c1b:	rex add DWORD PTR [rax],eax
   140009c1e:	add    BYTE PTR [rax],al
   140009c20:	lock sub eax,DWORD PTR [rax]
   140009c23:	rex add DWORD PTR [rax],eax
   140009c26:	add    BYTE PTR [rax],al
   140009c28:	adc    BYTE PTR [rax+rax*1],ch
   140009c2b:	rex add DWORD PTR [rax],eax
   140009c2e:	add    BYTE PTR [rax],al
   140009c30:	add    BYTE PTR [rax+rax*1],ch
   140009c33:	rex add DWORD PTR [rax],eax
   140009c36:	add    BYTE PTR [rax],al
   140009c38:	loopne 0x140009c65
   140009c3a:	add    BYTE PTR [rax+0x1],al
   140009c3d:	add    BYTE PTR [rax],al
   140009c3f:	add    al,ah
   140009c41:	push   rsi
   140009c42:	add    BYTE PTR [rax+0x1],al
   140009c45:	add    BYTE PTR [rax],al
   140009c47:	add    al,ah
   140009c49:	push   rsi
   140009c4a:	add    BYTE PTR [rax+0x1],al
   140009c4d:	add    BYTE PTR [rax],al
   140009c4f:	add    BYTE PTR [rax+0x1400028],al
   140009c55:	add    BYTE PTR [rax],al
   140009c57:	add    al,al
   140009c59:	movabs ds:0x14000,al
   140009c62:	add    BYTE PTR [rax],al
   140009c64:	add    BYTE PTR [rax],al
   140009c66:	add    BYTE PTR [rax],al
   140009c68:	sbb    bh,al
   140009c6a:	add    BYTE PTR [rax+0x1],al
	...
   140009c75:	add    BYTE PTR [rax],al
   140009c77:	add    BYTE PTR [rax+0x1400024],al
   140009c7d:	add    BYTE PTR [rax],al
   140009c7f:	add    BYTE PTR [rax+0x23],dh
   140009c82:	add    BYTE PTR [rax+0x1],al
   140009c85:	add    BYTE PTR [rax],al
   140009c87:	add    al,dl
   140009c89:	and    eax,DWORD PTR [rax]
   140009c8b:	rex add DWORD PTR [rax],eax
   140009c8e:	add    BYTE PTR [rax],al
   140009c90:	and    BYTE PTR [rip+0x14000],0x0        # 0x14001dc97
   140009c97:	add    al,dh
   140009c99:	and    eax,0x14000
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	and    BYTE PTR [rsi],ah
   140009ca2:	add    BYTE PTR [rax+0x1],al
   140009ca5:	add    BYTE PTR [rax],al
   140009ca7:	add    BYTE PTR [rax+0x26],dh
   140009caa:	add    BYTE PTR [rax+0x1],al
   140009cad:	add    BYTE PTR [rax],al
   140009caf:	add    BYTE PTR [rax+0x2b],ah
   140009cb2:	add    BYTE PTR [rax+0x1],al
   140009cb5:	add    BYTE PTR [rax],al
   140009cb7:	add    BYTE PTR [rax+0x22],dl
   140009cba:	add    BYTE PTR [rax+0x1],al
   140009cbd:	add    BYTE PTR [rax],al
   140009cbf:	add    al,dl
   140009cc1:	adc    DWORD PTR [rax],eax
   140009cc3:	rex add DWORD PTR [rax],eax
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	lock and al,BYTE PTR [rax]
   140009ccb:	rex add DWORD PTR [rax],eax
   140009cce:	add    BYTE PTR [rax],al
   140009cd0:	loopne 0x140009d28
   140009cd2:	add    BYTE PTR [rax+0x1],al
   140009cd5:	add    BYTE PTR [rax],al
   140009cd7:	add    al,al
   140009cd9:	(bad)  
   140009cda:	add    BYTE PTR [rax+0x1],al
   140009cdd:	add    BYTE PTR [rax],al
   140009cdf:	add    BYTE PTR [rax+0x15],dh
   140009ce2:	add    BYTE PTR [rax+0x1],al
   140009ce5:	add    BYTE PTR [rax],al
   140009ce7:	add    BYTE PTR [rax+0x14],ah
   140009cea:	add    BYTE PTR [rax+0x1],al
   140009ced:	add    BYTE PTR [rax],al
   140009cef:	add    al,al
   140009cf1:	adc    al,0x0
   140009cf3:	rex add DWORD PTR [rax],eax
   140009cf6:	add    BYTE PTR [rax],al
   140009cf8:	shr    BYTE PTR [rcx],0x0
   140009cfb:	rex add DWORD PTR [rax],eax
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	adc    BYTE PTR [rsi],dl
   140009d02:	add    BYTE PTR [rax+0x1],al
   140009d05:	add    BYTE PTR [rax],al
   140009d07:	add    al,al
   140009d09:	(bad)  
   140009d0a:	add    BYTE PTR [rax+0x1],al
   140009d0d:	add    BYTE PTR [rax],al
   140009d0f:	add    al,dl
   140009d11:	sub    eax,DWORD PTR [rax]
   140009d13:	rex add DWORD PTR [rax],eax
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	and    BYTE PTR [rax+rax*1],ch
   140009d1b:	rex add DWORD PTR [rax],eax
   140009d1e:	add    BYTE PTR [rax],al
   140009d20:	lock sub eax,DWORD PTR [rax]
   140009d23:	rex add DWORD PTR [rax],eax
   140009d26:	add    BYTE PTR [rax],al
   140009d28:	adc    BYTE PTR [rax+rax*1],ch
   140009d2b:	rex add DWORD PTR [rax],eax
   140009d2e:	add    BYTE PTR [rax],al
   140009d30:	add    BYTE PTR [rax+rax*1],ch
   140009d33:	rex add DWORD PTR [rax],eax
   140009d36:	add    BYTE PTR [rax],al
   140009d38:	loopne 0x140009d65
   140009d3a:	add    BYTE PTR [rax+0x1],al
   140009d3d:	add    BYTE PTR [rax],al
   140009d3f:	add    al,dl
   140009d41:	sbb    eax,0x14000
   140009d46:	add    BYTE PTR [rax],al
   140009d48:	add    BYTE PTR [rax],ah
   140009d4a:	add    BYTE PTR [rax+0x1],al
   140009d4d:	add    BYTE PTR [rax],al
   140009d4f:	add    BYTE PTR [rax+0x22],dl
   140009d52:	add    BYTE PTR [rax+0x1],al
   140009d55:	add    BYTE PTR [rax],al
   140009d57:	add    al,dl
   140009d59:	adc    DWORD PTR [rax],eax
   140009d5b:	rex add DWORD PTR [rax],eax
   140009d5e:	add    BYTE PTR [rax],al
   140009d60:	lock and al,BYTE PTR [rax]
   140009d63:	rex add DWORD PTR [rax],eax
   140009d66:	add    BYTE PTR [rax],al
   140009d68:	push   rax
   140009d69:	sbb    eax,0x14000
   140009d6e:	add    BYTE PTR [rax],al
   140009d70:	(bad)  
   140009d71:	sbb    eax,0x14000
   140009d76:	add    BYTE PTR [rax],al
   140009d78:	jo     0x140009db3
   140009d7a:	add    BYTE PTR [rax+0x1],al
   140009d7d:	add    BYTE PTR [rax],al
   140009d7f:	add    BYTE PTR [rax+0x3f],dh
   140009d82:	add    BYTE PTR [rax+0x1],al
   140009d85:	add    BYTE PTR [rax],al
   140009d87:	add    BYTE PTR [rax+0x15],dh
   140009d8a:	add    BYTE PTR [rax+0x1],al
   140009d8d:	add    BYTE PTR [rax],al
   140009d8f:	add    BYTE PTR [rax+0x14],ah
   140009d92:	add    BYTE PTR [rax+0x1],al
   140009d95:	add    BYTE PTR [rax],al
   140009d97:	add    al,al
   140009d99:	adc    al,0x0
   140009d9b:	rex add DWORD PTR [rax],eax
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	sar    BYTE PTR [rsi],0x0
   140009da3:	rex add DWORD PTR [rax],eax
   140009da6:	add    BYTE PTR [rax],al
   140009da8:	adc    BYTE PTR [rsi],dl
   140009daa:	add    BYTE PTR [rax+0x1],al
   140009dad:	add    BYTE PTR [rax],al
   140009daf:	add    al,al
   140009db1:	(bad)  
   140009db2:	add    BYTE PTR [rax+0x1],al
   140009db5:	add    BYTE PTR [rax],al
   140009db7:	add    BYTE PTR [rax],dl
   140009db9:	xor    eax,0x14000
   140009dbe:	add    BYTE PTR [rax],al
   140009dc0:	rcl    BYTE PTR [rcx],1
   140009dc2:	add    BYTE PTR [rax+0x1],al
   140009dc5:	add    BYTE PTR [rax],al
   140009dc7:	add    al,dh
   140009dc9:	adc    DWORD PTR [rax],eax
   140009dcb:	rex add DWORD PTR [rax],eax
   140009dce:	add    BYTE PTR [rax],al
   140009dd0:	movabs al,ds:0xa000000001400031
   140009dd9:	xor    al,BYTE PTR [rax]
   140009ddb:	rex add DWORD PTR [rax],eax
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	(bad)  
   140009de1:	sbb    eax,0x14000
   140009de6:	add    BYTE PTR [rax],al
   140009de8:	adc    BYTE PTR [rip+0x14000],dh        # 0x14001ddee
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	rcl    BYTE PTR [rcx],1
   140009df2:	add    BYTE PTR [rax+0x1],al
   140009df5:	add    BYTE PTR [rax],al
   140009df7:	add    al,dh
   140009df9:	adc    DWORD PTR [rax],eax
   140009dfb:	rex add DWORD PTR [rax],eax
   140009dfe:	add    BYTE PTR [rax],al
   140009e00:	loopne 0x140009e58
   140009e02:	add    BYTE PTR [rax+0x1],al
   140009e05:	add    BYTE PTR [rax],al
   140009e07:	add    al,ah
   140009e09:	push   rsi
   140009e0a:	add    BYTE PTR [rax+0x1],al
   140009e0d:	add    BYTE PTR [rax],al
   140009e0f:	add    al,al
   140009e11:	(bad)  
   140009e12:	add    BYTE PTR [rax+0x1],al
   140009e15:	add    BYTE PTR [rax],al
   140009e17:	add    al,dl
   140009e19:	cmp    BYTE PTR [rax],al
   140009e1b:	rex add DWORD PTR [rax],eax
   140009e1e:	add    BYTE PTR [rax],al
   140009e20:	jo     0x140009e59
   140009e22:	add    BYTE PTR [rax+0x1],al
   140009e25:	add    BYTE PTR [rax],al
   140009e27:	add    BYTE PTR [rax+0x1400037],al
   140009e2d:	add    BYTE PTR [rax],al
   140009e2f:	add    al,dl
   140009e31:	(bad)  
   140009e32:	add    BYTE PTR [rax+0x1],al
   140009e35:	add    BYTE PTR [rax],al
   140009e37:	add    BYTE PTR [rax+0x2c],al
   140009e3a:	add    BYTE PTR [rax+0x1],al
   140009e3d:	add    BYTE PTR [rax],al
   140009e3f:	add    BYTE PTR [rax+0x2c],dl
   140009e42:	add    BYTE PTR [rax+0x1],al
   140009e45:	add    BYTE PTR [rax],al
   140009e47:	add    BYTE PTR [rax+0x2c],ah
   140009e4a:	add    BYTE PTR [rax+0x1],al
   140009e4d:	add    BYTE PTR [rax],al
   140009e4f:	add    BYTE PTR [rax+0x2c],dh
   140009e52:	add    BYTE PTR [rax+0x1],al
   140009e55:	add    BYTE PTR [rax],al
   140009e57:	add    BYTE PTR [rax],dl
   140009e59:	add    BYTE PTR ss:[rax+0x1],al
   140009e5d:	add    BYTE PTR [rax],al
   140009e5f:	add    BYTE PTR [rax+0x37],dl
   140009e62:	add    BYTE PTR [rax+0x1],al
   140009e65:	add    BYTE PTR [rax],al
   140009e67:	add    al,dh
   140009e69:	xor    al,BYTE PTR [rax]
   140009e6b:	rex add DWORD PTR [rax],eax
   140009e6e:	add    BYTE PTR [rax],al
   140009e70:	mov    al,0x35
   140009e72:	add    BYTE PTR [rax+0x1],al
   140009e75:	add    BYTE PTR [rax],al
   140009e77:	add    BYTE PTR [rax+0x39],dh
   140009e7a:	add    BYTE PTR [rax+0x1],al
   140009e7d:	add    BYTE PTR [rax],al
   140009e7f:	add    al,ah
   140009e81:	push   rsi
   140009e82:	add    BYTE PTR [rax+0x1],al
   140009e85:	add    BYTE PTR [rax],al
   140009e87:	add    BYTE PTR [rax+0x1400039],ah
   140009e8d:	add    BYTE PTR [rax],al
   140009e8f:	add    BYTE PTR [rax],bl
   140009e91:	movabs ds:0x14000,eax
   140009e9a:	add    BYTE PTR [rax],al
   140009e9c:	add    BYTE PTR [rax],al
   140009e9e:	add    BYTE PTR [rax],al
   140009ea0:	sub    bh,al
   140009ea2:	add    BYTE PTR [rax+0x1],al
	...
   140009ead:	add    BYTE PTR [rax],al
   140009eaf:	add    BYTE PTR [rax],dl
   140009eb1:	cmp    DWORD PTR [rax],eax
   140009eb3:	rex add DWORD PTR [rax],eax
   140009eb6:	add    BYTE PTR [rax],al
   140009eb8:	(bad)  
   140009eb9:	cmp    BYTE PTR [rax],al
   140009ebb:	rex add DWORD PTR [rax],eax
   140009ebe:	add    BYTE PTR [rax],al
   140009ec0:	cmp    BYTE PTR [rax],0x0
   140009ec3:	rex add DWORD PTR [rax],eax
   140009ec6:	add    BYTE PTR [rax],al
   140009ec8:	xor    BYTE PTR [rax+rax*1],ch
   140009ecb:	rex add DWORD PTR [rax],eax
   140009ece:	add    BYTE PTR [rax],al
   140009ed0:	sub    al,0x0
   140009ed3:	rex add DWORD PTR [rax],eax
   140009ed6:	add    BYTE PTR [rax],al
   140009ed8:	push   rax
   140009ed9:	sub    al,0x0
   140009edb:	rex add DWORD PTR [rax],eax
   140009ede:	add    BYTE PTR [rax],al
   140009ee0:	(bad)  
   140009ee1:	sub    al,0x0
   140009ee3:	rex add DWORD PTR [rax],eax
   140009ee6:	add    BYTE PTR [rax],al
   140009ee8:	jo     0x140009f16
   140009eea:	add    BYTE PTR [rax+0x1],al
   140009eed:	add    BYTE PTR [rax],al
   140009eef:	add    BYTE PTR [rax+0x1400038],ah
   140009ef5:	add    BYTE PTR [rax],al
   140009ef7:	add    BYTE PTR [rax+0x1400038],ah
   140009efd:	add    BYTE PTR [rax],al
   140009eff:	add    BYTE PTR [rax+0x1400038],ah
   140009f05:	add    BYTE PTR [rax],al
   140009f07:	add    BYTE PTR [rax+0x1400038],ah
   140009f0d:	add    BYTE PTR [rax],al
   140009f0f:	add    al,dl
   140009f11:	cmp    BYTE PTR [rax],al
   140009f13:	rex add DWORD PTR [rax],eax
   140009f16:	add    BYTE PTR [rax],al
   140009f18:	(bad)  
   140009f19:	cmp    BYTE PTR [rax],al
   140009f1b:	rex add DWORD PTR [rax],eax
   140009f1e:	add    BYTE PTR [rax],al
   140009f20:	cmp    BYTE PTR [rax],0x0
   140009f23:	rex add DWORD PTR [rax],eax
   140009f26:	add    BYTE PTR [rax],al
   140009f28:	shl    BYTE PTR [rdi],1
   140009f2a:	add    BYTE PTR [rax+0x1],al
   140009f2d:	add    BYTE PTR [rax],al
   140009f2f:	add    BYTE PTR [rax+0x2c],al
   140009f32:	add    BYTE PTR [rax+0x1],al
   140009f35:	add    BYTE PTR [rax],al
   140009f37:	add    BYTE PTR [rax+0x2c],dl
   140009f3a:	add    BYTE PTR [rax+0x1],al
   140009f3d:	add    BYTE PTR [rax],al
   140009f3f:	add    BYTE PTR [rax+0x2c],ah
   140009f42:	add    BYTE PTR [rax+0x1],al
   140009f45:	add    BYTE PTR [rax],al
   140009f47:	add    BYTE PTR [rax+0x2c],dh
   140009f4a:	add    BYTE PTR [rax+0x1],al
   140009f4d:	add    BYTE PTR [rax],al
   140009f4f:	add    BYTE PTR [rax+0x1400038],ah
   140009f55:	add    BYTE PTR [rax],al
   140009f57:	add    BYTE PTR [rax+0x1400038],ah
   140009f5d:	add    BYTE PTR [rax],al
   140009f5f:	add    BYTE PTR [rax+0x1400038],ah
   140009f65:	add    BYTE PTR [rax],al
   140009f67:	add    BYTE PTR [rax+0x1400038],ah
   140009f6d:	add    BYTE PTR [rax],al
   140009f6f:	add    al,dl
   140009f71:	add    BYTE PTR [rax+0x1],r8b
   140009f75:	add    BYTE PTR [rax],al
   140009f77:	add    BYTE PTR [rax-0x5d],bl
   140009f7a:	add    BYTE PTR [rax+0x1],al
	...
   140009f85:	add    BYTE PTR [rax],al
   140009f87:	add    BYTE PTR [rax],bh
   140009f89:	mov    DWORD PTR [rax],0x140
	...
   140009f97:	add    BYTE PTR [rax+0x1400043],dh
   140009f9d:	add    BYTE PTR [rax],al
   140009f9f:	add    al,dl
   140009fa1:	adc    DWORD PTR [rax],eax
   140009fa3:	rex add DWORD PTR [rax],eax
   140009fa6:	add    BYTE PTR [rax],al
   140009fa8:	push   rax
   140009fa9:	add    BYTE PTR [rax+0x1],r8b
   140009fad:	add    BYTE PTR [rax],al
   140009faf:	add    al,ah
   140009fb1:	push   rsi
   140009fb2:	add    BYTE PTR [rax+0x1],al
   140009fb5:	add    BYTE PTR [rax],al
   140009fb7:	add    al,ah
   140009fb9:	push   rsi
   140009fba:	add    BYTE PTR [rax+0x1],al
   140009fbd:	add    BYTE PTR [rax],al
   140009fbf:	add    al,ah
   140009fc1:	push   rsi
   140009fc2:	add    BYTE PTR [rax+0x1],al
   140009fc5:	add    BYTE PTR [rax],al
   140009fc7:	add    al,ah
   140009fc9:	push   rsi
   140009fca:	add    BYTE PTR [rax+0x1],al
   140009fcd:	add    BYTE PTR [rax],al
   140009fcf:	add    al,ah
   140009fd1:	push   rsi
   140009fd2:	add    BYTE PTR [rax+0x1],al
   140009fd5:	add    BYTE PTR [rax],al
   140009fd7:	add    al,ah
   140009fd9:	push   rsi
   140009fda:	add    BYTE PTR [rax+0x1],al
   140009fdd:	add    BYTE PTR [rax],al
   140009fdf:	add    al,ah
   140009fe1:	push   rsi
   140009fe2:	add    BYTE PTR [rax+0x1],al
   140009fe5:	add    BYTE PTR [rax],al
   140009fe7:	add    al,al
   140009fe9:	(bad)  
   140009fea:	add    BYTE PTR [rax+0x1],al
   140009fed:	add    BYTE PTR [rax],al
   140009fef:	add    BYTE PTR [rax+0x1400043],dh
   140009ff5:	add    BYTE PTR [rax],al
   140009ff7:	add    al,dl
   140009ff9:	adc    DWORD PTR [rax],eax
   140009ffb:	rex add DWORD PTR [rax],eax
   140009ffe:	add    BYTE PTR [rax],al
   14000a000:	push   rax
   14000a001:	add    BYTE PTR [rax+0x1],r8b
   14000a005:	add    BYTE PTR [rax],al
   14000a007:	add    al,al
   14000a009:	add    BYTE PTR [r8+0x1],al
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    al,dh
   14000a011:	adc    BYTE PTR [rax],al
   14000a013:	rex add DWORD PTR [rax],eax
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	xor    BYTE PTR [rdx+0x0],al
   14000a01b:	rex add DWORD PTR [rax],eax
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	add    BYTE PTR [rdx+0x0],0x40
   14000a024:	add    DWORD PTR [rax],eax
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	rol    BYTE PTR [rdx+0x0],1
   14000a02b:	rex add DWORD PTR [rax],eax
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	and    BYTE PTR [rbx+0x0],al
   14000a033:	rex add DWORD PTR [rax],eax
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	jo     0x14000a07d
   14000a03a:	add    BYTE PTR [rax+0x1],al
   14000a03d:	add    BYTE PTR [rax],al
   14000a03f:	add    al,dh
   14000a041:	(bad)  
   14000a042:	add    BYTE PTR [rax+0x1],al
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    BYTE PTR [rax+0x15],dh
   14000a04a:	add    BYTE PTR [rax+0x1],al
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    BYTE PTR [rax+0x14],ah
   14000a052:	add    BYTE PTR [rax+0x1],al
   14000a055:	add    BYTE PTR [rax],al
   14000a057:	add    al,al
   14000a059:	adc    al,0x0
   14000a05b:	rex add DWORD PTR [rax],eax
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	adc    BYTE PTR [rsi+0x0],al
   14000a063:	rex add DWORD PTR [rax],eax
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	adc    BYTE PTR [rsi],dl
   14000a06a:	add    BYTE PTR [rax+0x1],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    al,al
   14000a071:	(bad)  
   14000a072:	add    BYTE PTR [rax+0x1],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rax+0x1400049],dh
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    al,dl
   14000a081:	adc    DWORD PTR [rax],eax
   14000a083:	rex add DWORD PTR [rax],eax
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	push   rax
   14000a089:	rex.WX add BYTE PTR [rax+0x1],al
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    al,ah
   14000a091:	push   rsi
   14000a092:	add    BYTE PTR [rax+0x1],al
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    al,ah
   14000a099:	push   rsi
   14000a09a:	add    BYTE PTR [rax+0x1],al
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    al,ah
   14000a0a1:	push   rsi
   14000a0a2:	add    BYTE PTR [rax+0x1],al
   14000a0a5:	add    BYTE PTR [rax],al
   14000a0a7:	add    al,ah
   14000a0a9:	push   rsi
   14000a0aa:	add    BYTE PTR [rax+0x1],al
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    al,ah
   14000a0b1:	push   rsi
   14000a0b2:	add    BYTE PTR [rax+0x1],al
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    al,ah
   14000a0b9:	push   rsi
   14000a0ba:	add    BYTE PTR [rax+0x1],al
   14000a0bd:	add    BYTE PTR [rax],al
   14000a0bf:	add    al,al
   14000a0c1:	(bad)  
   14000a0c2:	add    BYTE PTR [rax+0x1],al
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    al,dl
   14000a0c9:	rex.WX add BYTE PTR [rax+0x1],al
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    BYTE PTR [rax-0x5d],ch
   14000a0d2:	add    BYTE PTR [rax+0x1],al
	...
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rax-0x39],cl
   14000a0e2:	add    BYTE PTR [rax+0x1],al
	...
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    BYTE PTR [rax+0x15],dh
   14000a0f2:	add    BYTE PTR [rax+0x1],al
   14000a0f5:	add    BYTE PTR [rax],al
   14000a0f7:	add    BYTE PTR [rax+0x14],ah
   14000a0fa:	add    BYTE PTR [rax+0x1],al
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    al,al
   14000a101:	adc    al,0x0
   14000a103:	rex add DWORD PTR [rax],eax
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	adc    BYTE PTR [rax+rax*1+0x40],cl
   14000a10c:	add    DWORD PTR [rax],eax
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	adc    BYTE PTR [rsi],dl
   14000a112:	add    BYTE PTR [rax+0x1],al
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    al,al
   14000a119:	(bad)  
   14000a11a:	add    BYTE PTR [rax+0x1],al
   14000a11d:	add    BYTE PTR [rax],al
   14000a11f:	add    BYTE PTR [rax+0x1400049],dh
   14000a125:	add    BYTE PTR [rax],al
   14000a127:	add    al,dl
   14000a129:	adc    DWORD PTR [rax],eax
   14000a12b:	rex add DWORD PTR [rax],eax
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	push   rax
   14000a131:	rex.WX add BYTE PTR [rax+0x1],al
   14000a135:	add    BYTE PTR [rax],al
   14000a137:	add    BYTE PTR [rax],al
   14000a139:	rex.W add BYTE PTR [rax+0x1],al
   14000a13d:	add    BYTE PTR [rax],al
   14000a13f:	add    BYTE PTR [rax+0x48],dl
   14000a142:	add    BYTE PTR [rax+0x1],al
   14000a145:	add    BYTE PTR [rax],al
   14000a147:	add    al,al
   14000a149:	rex.W add BYTE PTR [rax+0x1],al
   14000a14d:	add    BYTE PTR [rax],al
   14000a14f:	add    BYTE PTR [rax],al
   14000a151:	rex.WB add BYTE PTR [r8+0x1],al
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    al,dl
   14000a159:	rex.X add BYTE PTR [rax+0x1],al
   14000a15d:	add    BYTE PTR [rax],al
   14000a15f:	add    BYTE PTR [rax+0x49],dh
   14000a162:	add    BYTE PTR [rax+0x1],al
   14000a165:	add    BYTE PTR [rax],al
   14000a167:	add    al,dh
   14000a169:	(bad)  
   14000a16a:	add    BYTE PTR [rax+0x1],al
   14000a16d:	add    BYTE PTR [rax],al
   14000a16f:	add    BYTE PTR [rax],al
   14000a171:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rax+0x14000a3],cl
	...
   14000a185:	add    BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rax-0x39],bl
   14000a18a:	add    BYTE PTR [rax+0x1],al
	...
   14000a195:	add    BYTE PTR [rax],al
   14000a197:	add    BYTE PTR [rax+0x15],dh
   14000a19a:	add    BYTE PTR [rax+0x1],al
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rax+0x14],ah
   14000a1a2:	add    BYTE PTR [rax+0x1],al
   14000a1a5:	add    BYTE PTR [rax],al
   14000a1a7:	add    al,al
   14000a1a9:	adc    al,0x0
   14000a1ab:	rex add DWORD PTR [rax],eax
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	rex push rax
   14000a1b2:	add    BYTE PTR [rax+0x1],al
   14000a1b5:	add    BYTE PTR [rax],al
   14000a1b7:	add    BYTE PTR [rax],dl
   14000a1b9:	(bad)  
   14000a1ba:	add    BYTE PTR [rax+0x1],al
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    al,al
   14000a1c1:	(bad)  
   14000a1c2:	add    BYTE PTR [rax+0x1],al
   14000a1c5:	add    BYTE PTR [rax],al
   14000a1c7:	add    BYTE PTR [rax+0x4e],ah
   14000a1ca:	add    BYTE PTR [rax+0x1],al
   14000a1cd:	add    BYTE PTR [rax],al
   14000a1cf:	add    al,dl
   14000a1d1:	adc    DWORD PTR [rax],eax
   14000a1d3:	rex add DWORD PTR [rax],eax
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	lock and al,BYTE PTR [rax]
   14000a1db:	rex add DWORD PTR [rax],eax
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	add    BYTE PTR [rsi+0x0],cl
   14000a1e3:	rex add DWORD PTR [rax],eax
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	lock (bad) 
   14000a1ea:	add    BYTE PTR [rax+0x1],al
   14000a1ed:	add    BYTE PTR [rax],al
   14000a1ef:	add    BYTE PTR [rax+0x4e],ah
   14000a1f2:	add    BYTE PTR [rax+0x1],al
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    al,dl
   14000a1f9:	adc    DWORD PTR [rax],eax
   14000a1fb:	rex add DWORD PTR [rax],eax
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	lock and al,BYTE PTR [rax]
   14000a203:	rex add DWORD PTR [rax],eax
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	loopne 0x14000a260
   14000a20a:	add    BYTE PTR [rax+0x1],al
   14000a20d:	add    BYTE PTR [rax],al
   14000a20f:	add    al,al
   14000a211:	(bad)  
   14000a212:	add    BYTE PTR [rax+0x1],al
   14000a215:	add    BYTE PTR [rax],al
   14000a217:	add    dl,dl
   14000a219:	enter  0x991c,0xdb
   14000a21d:	pop    rbx
   14000a21e:	(bad)  
   14000a21f:	rex.WX movabs rbx,0x97499c3ab5ec5eb8
   14000a229:	mov    al,BYTE PTR [rbp+0x549a31d]
   14000a22f:	adc    QWORD PTR [rax+0x6e97d53b],0x7a
   14000a237:	mov    ebx,0xba441419
   14000a23c:	(bad)  
   14000a23d:	or     esi,DWORD PTR [rsi-0x2efc56b1]
   14000a243:	ins    BYTE PTR es:[rdi],dx
   14000a244:	ror    DWORD PTR [rdx+rcx*8+0x44],0xe0
   14000a249:	loop   0x14000a1d1
   14000a24b:	scas   eax,DWORD PTR es:[rdi]
   14000a24c:	sub    eax,0x9c4c6ab1
   14000a251:	pop    rdx
   14000a252:	xlat   BYTE PTR ds:[rbx]
   14000a253:	stos   BYTE PTR es:[rdi],al
   14000a254:	adc    BYTE PTR gs:[rsi],bl
   14000a257:	nop
   14000a258:	ja     0x14000a271
   14000a25a:	(bad)  
   14000a25b:	sub    eax,0x4ea5a66f
   14000a260:	mov    ebx,0xfa3f7987
   14000a265:	rex.WB
   14000a266:	rex.B
   14000a267:	repnz add BYTE PTR [rax],al
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	push   rdi
   14000a271:	add    BYTE PTR [rcx+0x0],ch
   14000a274:	outs   dx,BYTE PTR ds:[rsi]
   14000a275:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000a279:	add    BYTE PTR [rdi+0x0],dh
   14000a27c:	jae    0x14000a27e
   14000a27e:	add    BYTE PTR cs:[rbp+0x0],dl
   14000a282:	rex.WB add BYTE PTR [r14],bpl
   14000a285:	add    BYTE PTR [rax+0x0],dl
   14000a288:	outs   dx,DWORD PTR ds:[rsi]
   14000a289:	add    BYTE PTR [rax+0x0],dh
   14000a28c:	jne    0x14000a28e
   14000a28e:	jo     0x14000a290
   14000a290:	jae    0x14000a292
   14000a292:	add    BYTE PTR cs:[rbp+0x0],cl
   14000a296:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a29a:	jae    0x14000a29c
   14000a29c:	(bad)  
   14000a29d:	add    BYTE PTR [rdi+0x0],ah
   14000a2a0:	add    BYTE PTR gs:[rax+rax*1+0x69],al
   14000a2a5:	add    BYTE PTR [rcx+0x0],ah
   14000a2a8:	ins    BYTE PTR es:[rdi],dx
   14000a2a9:	add    BYTE PTR [rdi+0x0],ch
   14000a2ac:	add    BYTE PTR [eax],al
   14000a2af:	add    BYTE PTR [rsi+0x1c0b8732],bl
   14000a2b5:	or     eax,0x759c47b2
   14000a2ba:	mov    bl,0x4f
   14000a2bc:	int3   
   14000a2bd:	and    BYTE PTR [rdi-0x50],dh
   14000a2c0:	enter  0x5817,0xf6
   14000a2c4:	test   ebp,ebx
   14000a2c6:	ss mov r8d,esi
   14000a2ca:	mov    ecx,0xf23929d1
   14000a2cf:	(bad)  
   14000a2d0:	fdiv   DWORD PTR [rax-0xd]
   14000a2d3:	(bad)  
   14000a2d5:	outs   dx,DWORD PTR ds:[rsi]
   14000a2d6:	jns    0x14000a319
   14000a2d8:	or     DWORD PTR [rbp+rdi*8+0x51],0xfffffffd
   14000a2dd:	adc    DWORD PTR [rsp+rdi*4+0x35],esp
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	rol    BYTE PTR [rax],0x0
   14000a2eb:	add    BYTE PTR [rax],al
   14000a2ed:	add    BYTE PTR [rax],al
   14000a2ef:	rex.RX jo 0x14000a2f2
   14000a2f2:	add    BYTE PTR [r11+0x0],spl
   14000a2f6:	je     0x14000a2f8
   14000a2f8:	imul   eax,DWORD PTR [rax],0x610076
   14000a2fe:	je     0x14000a300
   14000a300:	imul   eax,DWORD PTR [rax],0x6c0062
   14000a306:	add    BYTE PTR gs:[rbx+0x0],al
   14000a30a:	ins    BYTE PTR es:[rdi],dx
   14000a30b:	add    BYTE PTR [rcx+0x0],ah
   14000a30e:	jae    0x14000a310
   14000a310:	jae    0x14000a312
   14000a312:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   14000a317:	add    BYTE PTR [rcx-0x58],bl
   14000a31a:	mov    ebp,es
   14000a31c:	mov    esp,0x8f48df80
   14000a321:	(bad)  
   14000a322:	jmp    FWORD PTR [rcx-0xa4bfb6]
   14000a328:	push   rax
   14000a329:	stos   DWORD PTR es:[rdi],eax
   14000a32a:	ror    BYTE PTR [rsi],cl
   14000a32c:	(bad)  
   14000a32d:	enter  0x4cea,0xad
   14000a331:	leave  
   14000a332:	sub    eax,0x8e3b0855
   14000a337:	addr32 pop rbx
   14000a339:	add    DWORD PTR [rax],eax
   14000a33b:	add    BYTE PTR [rax],al
   14000a33d:	add    BYTE PTR [rax],al
   14000a33f:	add    al,al
   14000a341:	add    BYTE PTR [rax],al
   14000a343:	add    BYTE PTR [rax],al
   14000a345:	add    BYTE PTR [rax],al
   14000a347:	rex.RX jne 0x14000a326
   14000a34a:	(bad)  
   14000a34b:	(bad)  
   14000a34c:	push   rsp
   14000a34d:	(bad)  
   14000a34e:	in     eax,dx
   14000a34f:	rex.R xchg ebx,eax
   14000a351:	jno    0x14000a311
   14000a353:	out    dx,eax
   14000a354:	gs xchg edx,eax
   14000a356:	fs (bad) 
   14000a358:	ror    BYTE PTR fs:[rsi-0x6a],1
   14000a35c:	xchg   esi,eax
   14000a35d:	out    dx,al
   14000a35e:	iret   
   14000a35f:	rex.WX xchg rdi,rax
   14000a361:	(bad)  
   14000a362:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a363:	(bad)  
   14000a364:	pop    rdx
   14000a365:	es addr32 (bad) 
   14000a368:	or     al,0x41
   14000a36a:	rex.WXB xchg r11,rax
   14000a36c:	in     al,0x43
   14000a36e:	pop    rsi
   14000a36f:	rex.B cdq 
   14000a371:	xor    eax,0xba81c0fb
   14000a376:	xchg   ebx,eax
   14000a377:	test   eax,0xe2ed0e45
   14000a37c:	in     al,0x87
   14000a37e:	or     ecx,DWORD PTR [rdi-0x63]
   14000a381:	movsxd edi,DWORD PTR [rbx]
   14000a383:	jge    0x14000a3e9
   14000a385:	(bad)
   14000a388:	(bad)  
   14000a389:	xchg   ebp,eax
   14000a38a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a38b:	(bad)  
   14000a38c:	not    ah
   14000a38e:	mov    edx,0x1ef2b747
   14000a393:	fwait
   14000a394:	(bad)  
   14000a395:	mov    edx,0x214ea416
   14000a39a:	mov    ah,BYTE PTR [rax]
   14000a39c:	clc    
   14000a39d:	and    ebx,DWORD PTR [rsi+0x41]
   14000a3a0:	sbb    BYTE PTR [rip+0xffffffffe7a8a692],0x25        # 0x127a94a39
   14000a3a7:	push   rbx
   14000a3a8:	mov    ecx,0x3968c6a1
   14000a3ad:	faddp  st(3),st
   14000a3af:	rex.X lea ebp,[rax]
   14000a3b2:	mov    edi,0x6512a540
   14000a3b7:	rex.B clc 
   14000a3b9:	rex.W (bad) 
   14000a3bb:	(bad)  
   14000a3bc:	jl     0x14000a431
   14000a3be:	fisttp DWORD PTR [rsi-0x45]
   14000a3c1:	and    DWORD PTR [rax],ebx
   14000a3c3:	fdiv   DWORD PTR [rbx+0xc1e517c]
   14000a3c9:	rex.B
   14000a3ca:	rex.WXB xchg r11,rax
   14000a3cc:	in     al,0x43
   14000a3ce:	pop    rsi
   14000a3cf:	rex.B cdq 
   14000a3d1:	xor    eax,0xba81c0fb
   14000a3d6:	xchg   ebx,eax
   14000a3d7:	test   eax,0x34b
   14000a3dc:	add    BYTE PTR [rax],al
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	rol    BYTE PTR [rax],0x0
   14000a3e3:	add    BYTE PTR [rax],al
   14000a3e5:	add    BYTE PTR [rax],al
   14000a3e7:	rex.RX and r8b,BYTE PTR [rip+0x31993]        # 0x14003bd81
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	sbb    al,0xaa
	...
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	or     BYTE PTR [rax],al
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	stos   BYTE PTR es:[rdi],al
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	sub    BYTE PTR [rax],al
	...
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	and    al,BYTE PTR [rip+0x41993]        # 0x14004bda9
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	sbb    al,0xa9
	...
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	or     DWORD PTR [rax],eax
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	mov    al,0xa9
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	rex.W add BYTE PTR [rax],al
   14000a42f:	add    BYTE PTR [rax],al
   14000a431:	add    BYTE PTR [rax],al
   14000a433:	add    BYTE PTR [rcx],al
   14000a435:	add    BYTE PTR [rax],al
   14000a437:	add    BYTE PTR [rdx],ah
   14000a439:	add    eax,0x41993
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	sbb    al,0xa9
	...
   14000a44a:	add    BYTE PTR [rax],al
   14000a44c:	or     DWORD PTR [rax],eax
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	rex test eax,0x480000
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	add    BYTE PTR [rax],al
   14000a45a:	add    BYTE PTR [rax],al
   14000a45c:	add    DWORD PTR [rax],eax
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	add    BYTE PTR [rax],al
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	mov    bl,0x39
   14000a466:	lahf   
   14000a467:	push   rbp
   14000a468:	add    BYTE PTR [rax],al
   14000a46a:	add    BYTE PTR [rax],al
   14000a46c:	add    al,BYTE PTR [rax]
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	(bad)  
   14000a471:	add    BYTE PTR [rax],al
   14000a473:	add    BYTE PTR [rax-0x5b],ah
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	(bad)  
   14000a479:	test   DWORD PTR [rax],eax
   14000a47b:	add    BYTE PTR [rax],al
   14000a47d:	add    BYTE PTR [rax],al
   14000a47f:	add    BYTE PTR [rbx+0x559f39],dh
   14000a485:	add    BYTE PTR [rax],al
   14000a487:	add    BYTE PTR [rip+0xffffffffa0000000],cl        # 0xe000a48d
   14000a48d:	add    al,BYTE PTR [rax]
   14000a48f:	add    BYTE PTR [rbp+riz*4-0x7a640000],bl
	...
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	movabs al,ds:0x0
	...
   14000a515:	add    BYTE PTR [rax],al
   14000a517:	add    BYTE PTR [rax],cl
   14000a519:	rol    BYTE PTR [rax],0x40
   14000a51c:	add    DWORD PTR [rax],eax
	...
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	adc    BYTE PTR [rbx+0x14000],al
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	sbb    BYTE PTR [rbx+0x14000],al
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	js     0x14000a4c5
   14000a542:	add    BYTE PTR [rax+0x1],al
   14000a545:	add    BYTE PTR [rax],al
   14000a547:	add    BYTE PTR [rax+0x0],bh
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	add    BYTE PTR [rax],al
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	add    BYTE PTR [rip+0x0],dh        # 0x14000a556
	...
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	push   rdx
   14000a561:	push   rbx
   14000a562:	rex.R push rbx
   14000a564:	rex.W fidivr WORD PTR [rbx+riz*4]
   14000a568:	lods   eax,DWORD PTR ds:[rsi]
   14000a569:	mov    dl,0xfb
   14000a56b:	rex sbb BYTE PTR [rbx+rax*8+0x70],0x4c
   14000a571:	pop    rsp
   14000a572:	pop    rsi
   14000a573:	add    DWORD PTR gs:[rax],eax
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	push   rax
   14000a579:	imul   esp,DWORD PTR [rbx+0x6b],0x6f487265
   14000a580:	jae    0x14000a5f6
   14000a582:	cs jo  0x14000a5e9
   14000a585:	(bad)  
	...
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	rex.RXB
   14000a59d:	rex.XB push r12
   14000a59f:	rex.WR add BYTE PTR [rax],r10b
   14000a5a2:	add    BYTE PTR [rax],al
   14000a5a4:	mov    WORD PTR [rax],es
   14000a5a6:	add    BYTE PTR [rax],al
   14000a5a8:	cs je  0x14000a610
   14000a5ab:	js     0x14000a621
   14000a5ad:	and    al,0x64
   14000a5af:	imul   eax,DWORD PTR [rax],0x90000000
   14000a5b5:	adc    BYTE PTR [rax],al
   14000a5b7:	add    BYTE PTR [rdi+0x2e000057],al
   14000a5bd:	je     0x14000a624
   14000a5bf:	js     0x14000a635
   14000a5c1:	and    al,0x6d
   14000a5c3:	outs   dx,BYTE PTR ds:[rsi]
   14000a5c4:	add    BYTE PTR [rax],al
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	and    BYTE PTR [rax+0x0],ch
   14000a5cb:	add    BYTE PTR [rdx],dl
   14000a5cd:	add    BYTE PTR [rax],al
   14000a5cf:	add    BYTE PTR [rsi],ch
   14000a5d1:	je     0x14000a638
   14000a5d3:	js     0x14000a649
   14000a5d5:	and    al,0x6d
   14000a5d7:	outs   dx,BYTE PTR ds:[rsi]
   14000a5d8:	and    al,0x30
   14000a5da:	xor    BYTE PTR [rax],al
   14000a5dc:	rex push 0x17f0000
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	cs je  0x14000a64c
   14000a5e7:	js     0x14000a65d
   14000a5e9:	and    al,0x78
   14000a5eb:	add    al,al
   14000a5ed:	imul   eax,DWORD PTR [rax],0x7f00
   14000a5f3:	add    BYTE PTR [rsi],ch
   14000a5f5:	je     0x14000a65c
   14000a5f7:	js     0x14000a66d
   14000a5f9:	and    al,0x79
   14000a5fb:	add    BYTE PTR fs:[rax],al
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	add    BYTE PTR [rax+0x0],dh
   14000a603:	add    BYTE PTR [rax+rax*1],al
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   14000a610:	add    BYTE PTR [rax+0x3100000],al
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000a621:	add    BYTE PTR [rax],al
   14000a623:	add    BYTE PTR [rax],dl
   14000a625:	add    DWORD PTR [rax],0x0
   14000a628:	adc    BYTE PTR [rax],al
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	xor    BYTE PTR cs:[rax],dh
   14000a62f:	movsxd esp,DWORD PTR [rsi+0x67]
   14000a632:	add    BYTE PTR [rax],al
   14000a634:	and    BYTE PTR [rbx+0x80000],al
   14000a63a:	add    BYTE PTR [rax],al
   14000a63c:	cs rex.XB push r10
   14000a63f:	push   rsp
   14000a640:	and    al,0x58
   14000a642:	rex.XB
   14000a643:	add    BYTE PTR [r8],al
   14000a646:	add    BYTE PTR [rax],al
   14000a648:	sub    BYTE PTR [rbx+0x80000],al
   14000a64e:	add    BYTE PTR [rax],al
   14000a650:	cs rex.XB push r10
   14000a653:	push   rsp
   14000a654:	and    al,0x58
   14000a656:	rex.XB
   14000a657:	rex.B
   14000a658:	add    BYTE PTR [r8],al
   14000a65b:	add    BYTE PTR [rax],dh
   14000a65d:	add    DWORD PTR [rax],0x0
   14000a660:	and    BYTE PTR [rax],al
   14000a662:	add    BYTE PTR [rax],al
   14000a664:	cs rex.XB push r10
   14000a667:	push   rsp
   14000a668:	and    al,0x58
   14000a66a:	rex.XB push r13
   14000a66c:	add    BYTE PTR [rax],al
   14000a66e:	add    BYTE PTR [rax],al
   14000a670:	push   rax
   14000a671:	add    DWORD PTR [rax],0x0
   14000a674:	or     BYTE PTR [rax],al
   14000a676:	add    BYTE PTR [rax],al
   14000a678:	cs rex.XB push r10
   14000a67b:	push   rsp
   14000a67c:	and    al,0x58
   14000a67e:	rex.XB pop r10
   14000a680:	add    BYTE PTR [rax],al
   14000a682:	add    BYTE PTR [rax],al
   14000a684:	pop    rax
   14000a685:	add    DWORD PTR [rax],0x0
   14000a688:	or     BYTE PTR [rax],al
   14000a68a:	add    BYTE PTR [rax],al
   14000a68c:	cs rex.XB push r10
   14000a68f:	push   rsp
   14000a690:	and    al,0x58
   14000a692:	rex.WB
   14000a693:	add    BYTE PTR [r8],al
   14000a696:	add    BYTE PTR [rax],al
   14000a698:	(bad)  
   14000a699:	add    DWORD PTR [rax],0x0
   14000a69c:	or     BYTE PTR [rax],al
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	cs rex.XB push r10
   14000a6a3:	push   rsp
   14000a6a4:	and    al,0x58
   14000a6a6:	rex.WB
   14000a6a7:	rex.B
   14000a6a8:	add    BYTE PTR [r8],al
   14000a6ab:	add    BYTE PTR [rax-0x7d],ch
   14000a6ae:	add    BYTE PTR [rax],al
   14000a6b0:	or     BYTE PTR [rax],al
   14000a6b2:	add    BYTE PTR [rax],al
   14000a6b4:	cs rex.XB push r10
   14000a6b7:	push   rsp
   14000a6b8:	and    al,0x58
   14000a6ba:	rex.WB pop r9
   14000a6bc:	add    BYTE PTR [rax],al
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	jo     0x14000a645
   14000a6c2:	add    BYTE PTR [rax],al
   14000a6c4:	or     BYTE PTR [rax],al
   14000a6c6:	add    BYTE PTR [rax],al
   14000a6c8:	cs rex.XB push r10
   14000a6cb:	push   rsp
   14000a6cc:	and    al,0x58
   14000a6ce:	rex.WB pop r10
   14000a6d0:	add    BYTE PTR [rax],al
   14000a6d2:	add    BYTE PTR [rax],al
   14000a6d4:	js     0x14000a659
   14000a6d6:	add    BYTE PTR [rax],al
   14000a6d8:	loopne 0x14000a6db
   14000a6da:	add    BYTE PTR [rax],al
   14000a6dc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000a6e5:	add    BYTE PTR [rax],al
   14000a6e7:	add    BYTE PTR [rax-0x7b],ah
   14000a6ea:	add    BYTE PTR [rax],al
   14000a6ec:	add    BYTE PTR [rax],ah
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	cs jb  0x14000a757
   14000a6f3:	(bad)  
   14000a6f4:	je     0x14000a757
   14000a6f6:	add    BYTE PTR [rax],al
   14000a6f8:	(bad)  
   14000a6f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a6fa:	add    BYTE PTR [rax],al
   14000a6fc:	fadd   QWORD PTR [rdx]
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	cs jb  0x14000a767
   14000a703:	(bad)  
   14000a704:	je     0x14000a767
   14000a706:	and    al,0x7a
   14000a708:	jp     0x14000a784
   14000a70a:	fs (bad) 
   14000a70c:	add    BYTE PTR [eax],al
   14000a70f:	add    BYTE PTR [rax-0x58],al
   14000a712:	add    BYTE PTR [rax],al
   14000a714:	mov    al,0x5
   14000a716:	add    BYTE PTR [rax],al
   14000a718:	cs js  0x14000a77f
   14000a71b:	(bad)  
   14000a71c:	je     0x14000a77f
   14000a71e:	add    BYTE PTR [rax],al
   14000a720:	lock lods eax,DWORD PTR ds:[rsi]
   14000a722:	add    BYTE PTR [rax],al
   14000a724:	jl     0x14000a727
   14000a726:	add    BYTE PTR [rax],al
   14000a728:	cs js  0x14000a78f
   14000a72b:	(bad)  
   14000a72c:	je     0x14000a78f
   14000a72e:	and    al,0x78
   14000a730:	add    BYTE PTR [rax],al
   14000a732:	add    BYTE PTR [rax],al
   14000a734:	jo     0x14000a6e5
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	or     BYTE PTR [rax],al
   14000a73a:	add    BYTE PTR [rax],al
   14000a73c:	ins    DWORD PTR es:[rdi],dx
   14000a73d:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   14000a744:	pop    rdi
   14000a745:	(bad)  
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	js     0x14000a6f9
   14000a74a:	add    BYTE PTR [rax],al
   14000a74c:	cmp    BYTE PTR [rax],al
   14000a74e:	add    BYTE PTR [rax],al
   14000a750:	ins    DWORD PTR es:[rdi],dx
   14000a751:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   14000a758:	pop    rdi
   14000a759:	data16 add BYTE PTR [rax],al
   14000a75c:	mov    al,0xaf
   14000a75e:	add    BYTE PTR [rax],al
   14000a760:	or     BYTE PTR [rax],al
   14000a762:	add    BYTE PTR [rax],al
   14000a764:	ins    DWORD PTR es:[rdi],dx
   14000a765:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   14000a76c:	pop    rdi
   14000a76d:	ins    DWORD PTR es:[rdi],dx
   14000a76e:	add    BYTE PTR [rax],al
   14000a770:	mov    eax,0x80000af
   14000a775:	add    BYTE PTR [rax],al
   14000a777:	add    BYTE PTR [rbp+0x69],ch
   14000a77a:	outs   dx,BYTE PTR ds:[rsi]
   14000a77b:	push   r12
   14000a77d:	rex.WR and al,0x5f
   14000a780:	pop    rdi
   14000a781:	jp     0x14000a783
   14000a783:	add    al,al
   14000a785:	scas   eax,DWORD PTR es:[rdi]
   14000a786:	add    BYTE PTR [rax],al
   14000a788:	rex add DWORD PTR [rax],eax
   14000a78b:	add    BYTE PTR [rsi],ch
   14000a78d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000a795:	add    BYTE PTR [rax],al
   14000a797:	add    BYTE PTR [rax],al
   14000a799:	mov    cl,0x0
   14000a79b:	add    BYTE PTR [rax+rax*1],dl
   14000a79e:	add    BYTE PTR [rax],al
   14000a7a0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000a7a9:	add    BYTE PTR [rax],al
   14000a7ab:	add    BYTE PTR [rax],bl
   14000a7ad:	mov    cl,0x0
   14000a7af:	add    BYTE PTR [rax],dl
   14000a7b1:	add    eax,DWORD PTR [rax]
   14000a7b3:	add    BYTE PTR [rsi],ch
   14000a7b5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000a7bd:	add    BYTE PTR [rax],al
   14000a7bf:	add    BYTE PTR [rax],ch
   14000a7c1:	mov    ah,0x0
   14000a7c3:	add    BYTE PTR [rax+rcx*1+0x0],cl
   14000a7c7:	add    BYTE PTR [rsi],ch
   14000a7c9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000a7d1:	add    BYTE PTR [rax],al
   14000a7d3:	add    BYTE PTR [rax],al
   14000a7d5:	rol    BYTE PTR [rax],0x0
   14000a7d8:	cmp    BYTE PTR [rax],al
   14000a7da:	add    BYTE PTR [rax],al
   14000a7dc:	cs fs (bad) 
   14000a7df:	je     0x14000a842
   14000a7e1:	add    BYTE PTR [rax],al
   14000a7e3:	add    BYTE PTR [rax],bh
   14000a7e5:	rol    BYTE PTR [rax],0x0
   14000a7e8:	mov    edi,0x2e000000
   14000a7ed:	fs (bad) 
   14000a7ef:	je     0x14000a852
   14000a7f1:	and    al,0x72
   14000a7f3:	add    BYTE PTR [rax],al
   14000a7f5:	rol    DWORD PTR [rax],0x0
   14000a7f8:	rol    BYTE PTR [rsi],0x0
   14000a7fb:	add    BYTE PTR [rsi],ch
   14000a7fd:	(bad)  
   14000a7ff:	jae    0x14000a801
   14000a801:	add    BYTE PTR [rax],al
   14000a803:	add    BYTE PTR [rax],al
   14000a805:	rol    BYTE PTR [rax],1
   14000a807:	add    BYTE PTR [rax+0x2e000006],ch
   14000a80d:	jo     0x14000a873
   14000a80f:	(bad)  
   14000a810:	je     0x14000a873
   14000a812:	add    BYTE PTR [rax],al
   14000a814:	add    al,ah
   14000a816:	add    BYTE PTR [rax],al
   14000a818:	movabs al,ds:0x637273722e000000
   14000a821:	and    al,0x30
   14000a823:	xor    DWORD PTR [rax],eax
   14000a825:	add    BYTE PTR [rax],al
   14000a827:	add    BYTE PTR [rax+0x380000e0],ah
   14000a82d:	or     BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rsi],ch
   14000a831:	jb     0x14000a8a6
   14000a833:	jb     0x14000a898
   14000a835:	and    al,0x30
   14000a837:	xor    al,BYTE PTR [rax]
   14000a839:	add    BYTE PTR [rax],al
   14000a83b:	add    BYTE PTR [rax],al
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    BYTE PTR [rcx],al
   14000a841:	clts   
   14000a843:	add    BYTE PTR [rdi],cl
   14000a845:	fs (bad) 
   14000a847:	add    BYTE PTR [rdi],cl
   14000a849:	xor    al,0x6
   14000a84b:	add    BYTE PTR [rdi],cl
   14000a84d:	xor    cl,BYTE PTR [rbx]
   14000a84f:	jo     0x14000a852
   14000a851:	or     al,BYTE PTR [rax+rax*1]
   14000a854:	or     dh,BYTE PTR [rsi+rax*1]
   14000a857:	add    BYTE PTR [rdx],cl
   14000a859:	xor    al,BYTE PTR [rsi]
   14000a85b:	jo     0x14000a85e
   14000a85d:	sbb    DWORD PTR [rdx],ecx
   14000a85f:	add    BYTE PTR [rcx],bl
   14000a861:	je     0x14000a86e
   14000a863:	add    BYTE PTR [rcx],bl
   14000a865:	or     al,BYTE PTR fs:[rax]
   14000a868:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000a86c:	sbb    DWORD PTR [rax+rcx*1],esi
   14000a86f:	add    BYTE PTR [rcx],bl
   14000a871:	push   rdx
   14000a872:	adc    eax,0x81201e0
   14000a877:	add    BYTE PTR [rdx],dl
   14000a879:	push   rsp
   14000a87a:	or     al,BYTE PTR [rax]
   14000a87c:	adc    dh,BYTE PTR [rax+rcx*1]
   14000a87f:	add    BYTE PTR [rdx],dl
   14000a881:	xor    cl,BYTE PTR [rsi]
   14000a883:	loopne 0x14000a891
   14000a885:	jo     0x14000a892
   14000a887:	(bad)  
   14000a888:	add    DWORD PTR [rsi],eax
   14000a88a:	add    al,BYTE PTR [rax]
   14000a88c:	(bad)  
   14000a88d:	xor    al,BYTE PTR [rdx]
   14000a88f:	xor    BYTE PTR [rcx],al
   14000a891:	adc    eax,0x74150008
   14000a896:	or     BYTE PTR [rax],al
   14000a898:	adc    eax,0x15000764
   14000a89d:	xor    al,0x6
   14000a89f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0b9d7
   14000a8a5:	sbb    DWORD PTR [rdx],ecx
   14000a8a7:	add    BYTE PTR [rcx],bl
   14000a8a9:	in     al,0xb
   14000a8ab:	add    BYTE PTR [rcx],bl
   14000a8ad:	je     0x14000a8b9
   14000a8af:	add    BYTE PTR [rcx],bl
   14000a8b1:	or     DWORD PTR fs:[rax],eax
   14000a8b4:	sbb    DWORD PTR [rax+rcx*1],esi
   14000a8b7:	add    BYTE PTR [rcx],bl
   14000a8b9:	push   rdx
   14000a8ba:	adc    eax,0x81401f0
   14000a8bf:	add    BYTE PTR [rsp+riz*2],dl
   14000a8c2:	or     BYTE PTR [rax],al
   14000a8c4:	adc    al,0x54
   14000a8c6:	(bad)  
   14000a8c7:	add    BYTE PTR [rsp+rsi*1],dl
   14000a8ca:	(bad)  
   14000a8cb:	add    BYTE PTR [rdx+rsi*1],dl
   14000a8ce:	adc    BYTE PTR [rax+0x1],dh
   14000a8d1:	adc    al,0x8
   14000a8d3:	add    BYTE PTR [rsp+riz*2],dl
   14000a8d6:	(bad)  
   14000a8d7:	add    BYTE PTR [rsp+rdx*2],dl
   14000a8da:	or     eax,0xc341400
   14000a8df:	add    BYTE PTR [rdx+rdx*4],dl
   14000a8e2:	adc    BYTE PTR [rax+0x1],dh
   14000a8e5:	sbb    DWORD PTR [rdx],ecx
   14000a8e7:	add    BYTE PTR [rcx],bl
   14000a8e9:	je     0x14000a8f4
   14000a8eb:	add    BYTE PTR [rcx],bl
   14000a8ed:	or     BYTE PTR fs:[rax],al
   14000a8f0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000a8f4:	sbb    DWORD PTR [rsi+rax*1],esi
   14000a8f7:	add    BYTE PTR [rcx],bl
   14000a8f9:	xor    dl,BYTE PTR [rip+0x82b19e0]        # 0x1482bc2df
   14000a8ff:	add    BYTE PTR [rip+0x9f00bf2],dl        # 0x149f0b4f7
   14000a905:	loopne 0x14000a90e
   14000a907:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ad7e
   14000a90e:	add    dl,BYTE PTR [rax-0x78]
   14000a911:	add    BYTE PTR [eax],al
   14000a914:	cmp    BYTE PTR [rax+rax*1+0x7200],ah
   14000a91b:	add    bh,bh
   14000a91d:	(bad)  
   14000a91e:	(bad)  
   14000a91f:	inc    DWORD PTR [rsi+0x68]
   14000a922:	add    BYTE PTR [rax],al
   14000a924:	add    BYTE PTR [rax],al
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	push   rdx
   14000a929:	push   0x10000
   14000a92e:	add    BYTE PTR [rax],al
   14000a930:	pop    rsi
   14000a931:	push   0x20000
   14000a936:	add    BYTE PTR [rax],al
   14000a938:	push   0x68
   14000a93a:	add    BYTE PTR [rax],al
   14000a93c:	add    BYTE PTR [rax],al
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	rcr    BYTE PTR [rip+0xffffffffffff0000],1        # 0x13fffa946
   14000a946:	(bad)  
   14000a947:	dec    DWORD PTR [rip+0x1e]        # 0x14000a96b
   14000a94d:	add    BYTE PTR [rax],al
   14000a94f:	add    BYTE PTR [rdx+0x100001e],al
   14000a955:	add    BYTE PTR [rax],al
   14000a957:	add    BYTE PTR [rcx+0x200001e],dh
   14000a95d:	add    BYTE PTR [rax],al
   14000a95f:	add    bl,ah
   14000a961:	(bad)  
   14000a962:	add    BYTE PTR [rax],al
   14000a964:	add    eax,DWORD PTR [rax]
   14000a966:	add    BYTE PTR [rax],al
   14000a968:	rex.W (bad) 
   14000a96a:	add    BYTE PTR [rax],al
   14000a96c:	add    al,BYTE PTR [rax]
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	ins    BYTE PTR es:[rdi],dx
   14000a971:	(bad)  
   14000a972:	add    BYTE PTR [rax],al
   14000a974:	add    DWORD PTR [rax],eax
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	nop
   14000a979:	(bad)  
   14000a97a:	add    BYTE PTR [rax],al
   14000a97c:	add    BYTE PTR [rax],al
   14000a97e:	add    BYTE PTR [rax],al
   14000a980:	mov    ah,0x1f
   14000a982:	add    BYTE PTR [rax],al
   14000a984:	(bad)  
   14000a985:	(bad)  
   14000a986:	(bad)  
   14000a987:	call   FWORD PTR [rcx]
   14000a989:	(bad)  
   14000a98a:	or     al,BYTE PTR [rax]
   14000a98c:	sbb    DWORD PTR [rcx],eax
   14000a98e:	adc    DWORD PTR [rax],eax
   14000a990:	or     eax,0x9e00bf0
   14000a995:	rol    BYTE PTR [rdi],1
   14000a997:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ae0e
   14000a99e:	add    dl,BYTE PTR [rax-0x78]
   14000a9a1:	add    BYTE PTR [eax],al
   14000a9a4:	adc    BYTE PTR [rax+rax*1+0x7200],ah
   14000a9ab:	add    BYTE PTR [rax],al
   14000a9ad:	add    BYTE PTR [rax],al
   14000a9af:	add    BYTE PTR [rax],al
   14000a9b1:	and    BYTE PTR [rax],al
   14000a9b3:	add    bh,bh
   14000a9b5:	(bad)  
   14000a9b6:	(bad)  
   14000a9b7:	inc    DWORD PTR [rax+riz*1+0x0]
   14000a9bb:	add    BYTE PTR [rax],al
   14000a9bd:	add    BYTE PTR [rax],al
   14000a9bf:	add    BYTE PTR [rsi+0x1000020],dh
   14000a9c5:	add    BYTE PTR [rax],al
   14000a9c7:	add    dl,ch
   14000a9c9:	and    BYTE PTR [rax],al
   14000a9cb:	add    BYTE PTR [rdx],al
   14000a9cd:	add    BYTE PTR [rax],al
   14000a9cf:	add    BYTE PTR [rbx],bl
   14000a9d1:	and    DWORD PTR [rax],eax
   14000a9d3:	add    BYTE PTR [rbx],al
   14000a9d5:	add    BYTE PTR [rax],al
   14000a9d7:	add    BYTE PTR [rcx+0x2000021],al
   14000a9dd:	add    BYTE PTR [rax],al
   14000a9df:	add    BYTE PTR [rcx+riz*1+0x10000],ah
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	(bad)  
   14000a9e9:	and    DWORD PTR [rax],eax
   14000a9eb:	add    BYTE PTR [rax],al
   14000a9ed:	add    BYTE PTR [rax],al
   14000a9ef:	add    dh,ch
   14000a9f1:	and    DWORD PTR [rax],eax
   14000a9f3:	add    bh,bh
   14000a9f5:	(bad)  
   14000a9f6:	(bad)  
   14000a9f7:	inc    DWORD PTR [rcx]
   14000a9f9:	add    al,0x1
   14000a9fb:	add    BYTE PTR [rdx+rax*2],al
   14000a9fe:	add    BYTE PTR [rax],al
   14000aa00:	adc    DWORD PTR [rax+rcx*1],ebx
   14000aa03:	add    BYTE PTR [rsp+rsi*1],bl
   14000aa06:	(bad)  
   14000aa07:	add    BYTE PTR [rdi],cl
   14000aa09:	jb     0x14000aa13
   14000aa0b:	lock (bad) 
   14000aa0d:	loopne 0x14000aa13
   14000aa0f:	jo     0x14000aa14
   14000aa11:	(bad)  
   14000aa12:	add    dl,BYTE PTR [rax-0x68]
   14000aa15:	pop    rsp
   14000aa16:	add    BYTE PTR [rax],al
   14000aa18:	call   0x13f00aac0
   14000aa1d:	(bad)  
   14000aa1e:	(bad)  
   14000aa1f:	(bad)  
   14000aa20:	jl     0x14000aa8a
   14000aa22:	add    BYTE PTR [rax],al
   14000aa24:	add    BYTE PTR [rax],al
   14000aa26:	add    BYTE PTR [rax],al
   14000aa28:	mov    BYTE PTR [rax+0x0],ch
   14000aa2b:	add    BYTE PTR [rcx],al
   14000aa2d:	add    BYTE PTR [rax],al
   14000aa2f:	add    BYTE PTR [rax+rbp*2+0x0],dl
	...
   14000aa3e:	add    BYTE PTR [rax],al
   14000aa40:	(bad)  
   14000aa41:	add    BYTE PTR es:[rax],al
   14000aa44:	(bad)  
   14000aa45:	(bad)  
   14000aa46:	(bad)  
   14000aa47:	jmp    QWORD PTR [rax]
   14000aa49:	(bad)  
   14000aa4a:	add    BYTE PTR [rax],al
   14000aa4c:	add    BYTE PTR [rax],al
   14000aa4e:	add    BYTE PTR [rax],al
   14000aa50:	and    eax,0x1000027
   14000aa55:	add    BYTE PTR [rax],al
   14000aa57:	add    BYTE PTR [rsi+0x27],al
   14000aa5a:	add    BYTE PTR [rax],al
   14000aa5c:	(bad)  
   14000aa5d:	(bad)  
   14000aa5e:	(bad)  
   14000aa5f:	call   QWORD PTR [rax+0x27]
   14000aa62:	add    BYTE PTR [rax],al
   14000aa64:	add    DWORD PTR [rax],eax
   14000aa66:	add    BYTE PTR [rax],al
   14000aa68:	push   rsp
   14000aa69:	(bad)  
   14000aa6a:	add    BYTE PTR [rax],al
   14000aa6c:	add    al,BYTE PTR [rax]
   14000aa6e:	add    BYTE PTR [rax],al
   14000aa70:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000aa71:	(bad)  
   14000aa72:	add    BYTE PTR [rax],al
   14000aa74:	add    DWORD PTR [rax],eax
   14000aa76:	add    BYTE PTR [rax],al
   14000aa78:	rex.RXB sub BYTE PTR [r8],r8b
   14000aa7b:	add    bh,bh
   14000aa7d:	(bad)  
   14000aa7e:	(bad)  
   14000aa7f:	inc    DWORD PTR [rcx]
   14000aa81:	(bad)  
   14000aa82:	add    al,BYTE PTR [rax]
   14000aa84:	(bad)  
   14000aa85:	xor    al,BYTE PTR [rdx]
   14000aa87:	push   rax
   14000aa88:	add    DWORD PTR [rbx],ebx
   14000aa8a:	or     al,BYTE PTR [rax]
   14000aa8c:	sbb    edx,DWORD PTR [rsp+rcx*1+0x0]
   14000aa90:	sbb    esi,DWORD PTR [rdx+rcx*1]
   14000aa93:	add    BYTE PTR [rbx],bl
   14000aa95:	xor    dl,BYTE PTR [rdi]
   14000aa97:	loopne 0x14000aaae
   14000aa99:	rcl    BYTE PTR [rbx],1
   14000aa9b:	rcl    BYTE PTR [rcx],0x70
   14000aa9e:	adc    BYTE PTR [rax+0x1],ah
   14000aaa1:	(bad)  
   14000aaa2:	or     BYTE PTR [rax],al
   14000aaa4:	(bad)  
   14000aaa5:	or     eax,DWORD PTR fs:[rax]
   14000aaa8:	(bad)  
   14000aaa9:	xor    al,0x9
   14000aaab:	add    BYTE PTR [rsi],bl
   14000aaad:	xor    dl,BYTE PTR [rdi]
   14000aaaf:	loopne 0x14000aac6
   14000aab1:	jo     0x14000aac7
   14000aab3:	push   rax
   14000aab4:	add    DWORD PTR [rsp+rcx*1],ebx
   14000aab7:	add    BYTE PTR [rsp+riz*2],bl
   14000aaba:	or     al,0x0
   14000aabc:	sbb    al,0x54
   14000aabe:	or     eax,DWORD PTR [rax]
   14000aac0:	sbb    al,0x34
   14000aac2:	or     al,BYTE PTR [rax]
   14000aac4:	sbb    al,0x32
   14000aac6:	sbb    al,dh
   14000aac8:	(bad)  
   14000aac9:	loopne 0x14000aadf
   14000aacb:	rcl    BYTE PTR [rdx],1
   14000aacd:	rcl    BYTE PTR [rax],0x70
   14000aad0:	add    DWORD PTR [rsp+rcx*1],ebx
   14000aad3:	add    BYTE PTR [rsp+riz*2],bl
   14000aad6:	(bad)  
   14000aad7:	add    BYTE PTR [rsp+rdx*2],bl
   14000aada:	or     eax,0xc341c00
   14000aadf:	add    BYTE PTR [rdx+rdx*2],bl
   14000aae2:	sbb    al,dh
   14000aae4:	(bad)  
   14000aae5:	loopne 0x14000aafb
   14000aae7:	rcl    BYTE PTR [rdx],1
   14000aae9:	rcl    BYTE PTR [rax],0x70
   14000aaec:	add    DWORD PTR [rdx],ecx
   14000aaee:	add    al,0x0
   14000aaf0:	or     dh,BYTE PTR [rax+rdx*1]
   14000aaf3:	add    BYTE PTR [rdx],cl
   14000aaf5:	rol    BYTE PTR [rsi],cl
   14000aaf7:	jo     0x14000aafa
   14000aaf9:	sbb    eax,0x741d000c
   14000aafe:	or     eax,DWORD PTR [rax]
   14000ab00:	sbb    eax,0x1d000a64
   14000ab05:	push   rsp
   14000ab06:	or     DWORD PTR [rax],eax
   14000ab08:	sbb    eax,0x1d000834
   14000ab0d:	xor    bl,BYTE PTR [rcx]
   14000ab0f:	lock (bad) 
   14000ab11:	loopne 0x14000ab28
   14000ab13:	rol    BYTE PTR [rcx],1
   14000ab15:	sbb    cl,BYTE PTR [rcx]
   14000ab17:	add    BYTE PTR [rdx],bl
   14000ab19:	(bad)  
   14000ab1a:	(bad)  
   14000ab1b:	lock adc al,0xe0
   14000ab1e:	adc    dl,al
   14000ab20:	adc    al,al
   14000ab22:	(bad)  
   14000ab23:	jo     0x14000ab32
   14000ab25:	(bad)  
   14000ab26:	or     al,0x50
   14000ab28:	or     esi,DWORD PTR [rax]
   14000ab2a:	add    BYTE PTR [rax],al
   14000ab2c:	sbb    DWORD PTR [rcx],esp
   14000ab2e:	or     BYTE PTR [rax],al
   14000ab30:	adc    dl,BYTE PTR [rbp+rdx*1+0x0]
   14000ab34:	adc    dh,BYTE PTR [rsp+rdx*1]
   14000ab37:	add    BYTE PTR [rdx],dl
   14000ab39:	ror    BYTE PTR [rsi],cl
   14000ab3b:	loopne 0x14000ab49
   14000ab3d:	jo     0x14000ab4a
   14000ab3f:	(bad)  
   14000ab40:	clc    
   14000ab41:	data16 add BYTE PTR [rax],al
   14000ab44:	(bad)  
   14000ab45:	add    BYTE PTR [rax],al
   14000ab47:	add    BYTE PTR [rcx],al
   14000ab49:	sbb    DWORD PTR [rdx],ecx
   14000ab4b:	add    BYTE PTR [rcx],bl
   14000ab4d:	je     0x14000ab5e
   14000ab4f:	add    BYTE PTR [rcx],bl
   14000ab51:	fs (bad) 
   14000ab53:	add    BYTE PTR [rcx],bl
   14000ab55:	push   rsp
   14000ab56:	or     eax,0xc341900
   14000ab5b:	add    BYTE PTR [rcx],bl
   14000ab5d:	xchg   edx,eax
   14000ab5e:	adc    eax,0xa1901e0
   14000ab63:	add    BYTE PTR [rcx],bl
   14000ab65:	je     0x14000ab74
   14000ab67:	add    BYTE PTR [rcx],bl
   14000ab69:	fs or  al,0x0
   14000ab6c:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14000ab70:	sbb    DWORD PTR [rdx+rcx*1],esi
   14000ab73:	add    BYTE PTR [rcx],bl
   14000ab75:	jb     0x14000ab8c
   14000ab77:	loopne 0x14000ab7a
   14000ab79:	adc    BYTE PTR [rsi],al
   14000ab7b:	add    BYTE PTR [rax],dl
   14000ab7d:	fs (bad) 
   14000ab7f:	add    BYTE PTR [rax],dl
   14000ab81:	xor    al,0x6
   14000ab83:	add    BYTE PTR [rax],dl
   14000ab85:	xor    cl,BYTE PTR [rax+rsi*2]
   14000ab88:	add    DWORD PTR [rcx+rax*1],eax
   14000ab8b:	add    BYTE PTR [rdx+riz*2],al
   14000ab8e:	add    BYTE PTR [rax],al
   14000ab90:	or     DWORD PTR [rbx+rcx*1],ebx
   14000ab93:	add    BYTE PTR [rsp+rsi*2],bl
   14000ab96:	sbb    al,0x0
   14000ab98:	sbb    al,0x64
   14000ab9a:	sbb    eax,DWORD PTR [rax]
   14000ab9c:	sbb    al,0x34
   14000ab9e:	sbb    al,BYTE PTR [rax]
   14000aba0:	sbb    al,0x1
   14000aba2:	(bad)  
   14000aba3:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0bf99
   14000aba9:	rol    BYTE PTR [rax],0x0
   14000abac:	(bad)  
   14000abad:	pop    rdx
   14000abae:	add    BYTE PTR [rax],al
   14000abb0:	add    DWORD PTR [rax],eax
   14000abb2:	add    BYTE PTR [rax],al
   14000abb4:	xor    BYTE PTR [rax+rax*1+0x0],dl
   14000abb8:	es push rsi
   14000abba:	add    BYTE PTR [rax],al
   14000abbc:	mov    dh,0x68
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	es push rsi
   14000abc2:	add    BYTE PTR [rax],al
   14000abc4:	add    BYTE PTR [rax],al
   14000abc6:	add    BYTE PTR [rax],al
   14000abc8:	add    DWORD PTR [rax],eax
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204abd3
   14000abd2:	add    BYTE PTR [rax],al
   14000abd4:	cwde   
   14000abd5:	pop    rsp
   14000abd6:	add    BYTE PTR [rax],al
   14000abd8:	jo     0x14000ab5f
   14000abda:	add    BYTE PTR [rax],al
   14000abdc:	(bad)  
   14000abdd:	(bad)  
   14000abde:	(bad)  
   14000abdf:	inc    DWORD PTR [rax]
   14000abe1:	add    BYTE PTR [rax],al
   14000abe3:	add    bh,bh
   14000abe5:	(bad)  
   14000abe6:	(bad)  
   14000abe7:	inc    DWORD PTR [rax]
	...
   14000abf1:	add    BYTE PTR [rax],al
   14000abf3:	add    BYTE PTR [rcx],al
   14000abf5:	add    BYTE PTR [rax],al
   14000abf7:	add    BYTE PTR [rcx],al
   14000abf9:	add    BYTE PTR [rax],al
   14000abfb:	add    BYTE PTR [rax],al
   14000abfd:	lods   al,BYTE PTR ds:[rsi]
   14000abfe:	add    BYTE PTR [rax],al
   14000ac00:	add    BYTE PTR [rax],al
	...
   14000ac0b:	add    dl,bl
   14000ac0d:	push   0x380000
   14000ac12:	add    BYTE PTR [rax],al
   14000ac14:	add    BYTE PTR [rax],al
   14000ac16:	add    BYTE PTR [rax],al
   14000ac18:	clc    
   14000ac19:	push   rsi
   14000ac1a:	add    BYTE PTR [rax],al
   14000ac1c:	(bad)  
   14000ac1d:	(bad)  
   14000ac1e:	(bad)  
   14000ac1f:	inc    DWORD PTR [rip+0x57]        # 0x14000ac7c
   14000ac25:	add    BYTE PTR [rax],al
   14000ac27:	add    BYTE PTR [rbx],cl
   14000ac29:	push   rdi
   14000ac2a:	add    BYTE PTR [rax],al
   14000ac2c:	(bad)  
   14000ac2d:	(bad)  
   14000ac2e:	(bad)  
   14000ac2f:	(bad)  
   14000ac30:	fisubr DWORD PTR [rax+0x0]
   14000ac33:	add    BYTE PTR [rax],al
   14000ac35:	add    BYTE PTR [rax],al
   14000ac37:	add    bh,ah
   14000ac39:	push   0x10000
   14000ac3e:	add    BYTE PTR [rax],al
   14000ac40:	in     al,dx
   14000ac41:	push   0x0
   14000ac46:	add    BYTE PTR [rax],al
   14000ac48:	sbb    DWORD PTR [rdx],ecx
   14000ac4a:	add    al,BYTE PTR [rax]
   14000ac4c:	or     dh,BYTE PTR [rdx]
   14000ac4e:	(bad)  
   14000ac4f:	push   rax
   14000ac50:	cwde   
   14000ac51:	pop    rsp
   14000ac52:	add    BYTE PTR [rax],al
   14000ac54:	jo     0x14000abdb
   14000ac56:	add    BYTE PTR [rax],al
   14000ac58:	adc    DWORD PTR [rdx],ecx
   14000ac5a:	add    al,0x0
   14000ac5c:	or     dh,BYTE PTR [rsi+rax*1]
   14000ac5f:	add    BYTE PTR [rdx],cl
   14000ac61:	xor    al,BYTE PTR [rsi]
   14000ac63:	jo     0x14000ac3b
   14000ac65:	pop    rdx
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	add    DWORD PTR [rax],eax
   14000ac6a:	add    BYTE PTR [rax],al
   14000ac6c:	ins    DWORD PTR es:[rdi],dx
   14000ac6d:	push   rdi
   14000ac6e:	add    BYTE PTR [rax],al
   14000ac70:	mov    dl,0x57
   14000ac72:	add    BYTE PTR [rax],al
   14000ac74:	add    BYTE PTR [rcx+0x0],ch
   14000ac77:	add    BYTE PTR [rax],al
   14000ac79:	add    BYTE PTR [rax],al
   14000ac7b:	add    BYTE PTR [rcx],cl
   14000ac7d:	add    al,0x1
   14000ac7f:	add    BYTE PTR [rdx+riz*1],al
   14000ac82:	add    BYTE PTR [rax],al
   14000ac84:	(bad)  
   14000ac85:	pop    rdx
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	add    DWORD PTR [rax],eax
   14000ac8a:	add    BYTE PTR [rax],al
   14000ac8c:	ins    BYTE PTR es:[rdi],dx
   14000ac8d:	pop    rax
   14000ac8e:	add    BYTE PTR [rax],al
   14000ac90:	movabs ds:0xa200000001000058,al
   14000ac99:	pop    rax
   14000ac9a:	add    BYTE PTR [rax],al
   14000ac9c:	or     DWORD PTR [rdx],ecx
   14000ac9e:	add    al,0x0
   14000aca0:	or     dh,BYTE PTR [rsi+rax*1]
   14000aca3:	add    BYTE PTR [rdx],cl
   14000aca5:	xor    al,BYTE PTR [rsi]
   14000aca7:	jo     0x14000ac7f
   14000aca9:	pop    rdx
   14000acaa:	add    BYTE PTR [rax],al
   14000acac:	add    DWORD PTR [rax],eax
   14000acae:	add    BYTE PTR [rax],al
   14000acb0:	ins    DWORD PTR es:[rdi],dx
   14000acb1:	pop    rcx
   14000acb2:	add    BYTE PTR [rax],al
   14000acb4:	movabs al,ds:0xa000006930000059
   14000acbd:	pop    rcx
   14000acbe:	add    BYTE PTR [rax],al
   14000acc0:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dacca
   14000acc6:	or     DWORD PTR [rax],eax
   14000acc8:	or     eax,0x1500632
   14000accd:	or     al,0x2
   14000accf:	add    BYTE PTR [rcx+rax*1],cl
   14000acd2:	adc    DWORD PTR [rax],eax
   14000acd4:	add    BYTE PTR [rax],al
   14000acd6:	add    BYTE PTR [rax],al
   14000acd8:	add    DWORD PTR [rax],eax
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	add    DWORD PTR [rcx+rax*1],eax
   14000acdf:	add    BYTE PTR [rdx+rax*4],al
   14000ace2:	add    BYTE PTR [rax],al
   14000ace4:	sbb    DWORD PTR [rax],esp
   14000ace6:	add    eax,0x14621800
   14000aceb:	loopne 0x14000acff
   14000aced:	jo     0x14000ad00
   14000acef:	(bad)  
   14000acf0:	adc    BYTE PTR [rax],dh
   14000acf2:	add    BYTE PTR [rax],al
   14000acf4:	cwde   
   14000acf5:	pop    rsp
   14000acf6:	add    BYTE PTR [rax],al
   14000acf8:	test   al,0x85
   14000acfa:	add    BYTE PTR [rax],al
   14000acfc:	(bad)  
   14000acfd:	(bad)  
   14000acfe:	(bad)  
   14000acff:	inc    DWORD PTR [rax]
   14000ad01:	add    BYTE PTR [rax],al
   14000ad03:	add    bh,bh
   14000ad05:	(bad)  
   14000ad06:	(bad)  
   14000ad07:	inc    DWORD PTR [rax]
   14000ad09:	add    BYTE PTR [rax],al
   14000ad0b:	add    BYTE PTR [rcx],al
   14000ad0d:	add    BYTE PTR [rax],al
   14000ad0f:	add    BYTE PTR [rax],al
   14000ad11:	add    BYTE PTR [rax],al
   14000ad13:	add    BYTE PTR [rcx],al
	...
   14000ad21:	add    BYTE PTR [rax],al
   14000ad23:	add    BYTE PTR [rbx],al
   14000ad25:	add    BYTE PTR [rax],al
   14000ad27:	add    BYTE PTR [rcx],al
   14000ad29:	add    BYTE PTR [rax],al
   14000ad2b:	add    BYTE PTR [rbp+rbp*4+0x0],al
   14000ad2f:	add    BYTE PTR [rdx],al
   14000ad31:	add    BYTE PTR [rax],al
   14000ad33:	add    BYTE PTR [rdx],al
   14000ad35:	add    BYTE PTR [rax],al
   14000ad37:	add    BYTE PTR [rbx],al
   14000ad39:	add    BYTE PTR [rax],al
   14000ad3b:	add    BYTE PTR [rcx],al
   14000ad3d:	add    BYTE PTR [rax],al
   14000ad3f:	add    BYTE PTR [rax-0x53],bl
   14000ad42:	add    BYTE PTR [rax],al
   14000ad44:	add    BYTE PTR [rax],al
	...
   14000ad4f:	add    BYTE PTR [rsi+0x69],dl
   14000ad52:	add    BYTE PTR [rax],al
   14000ad54:	cmp    BYTE PTR [rax],al
   14000ad56:	add    BYTE PTR [rax],al
   14000ad58:	add    BYTE PTR [rax],al
	...
   14000ad63:	add    BYTE PTR [rdx+0x38000069],bl
   14000ad69:	add    BYTE PTR [rax],al
   14000ad6b:	add    BYTE PTR [rax],al
   14000ad6d:	add    BYTE PTR [rax],al
   14000ad6f:	add    BYTE PTR [rax-0xffffa2],ch
   14000ad75:	(bad)  
   14000ad76:	(bad)  
   14000ad77:	call   QWORD PTR [rdi]
   14000ad79:	pop    rdi
   14000ad7a:	add    BYTE PTR [rax],al
   14000ad7c:	add    BYTE PTR [rax],al
   14000ad7e:	add    BYTE PTR [rax],al
   14000ad80:	cmp    al,0x5f
   14000ad82:	add    BYTE PTR [rax],al
   14000ad84:	(bad)  
   14000ad85:	(bad)  
   14000ad86:	(bad)  
   14000ad87:	call   QWORD PTR [rsi+0x69]
   14000ad8a:	add    BYTE PTR [rax],al
   14000ad8c:	add    BYTE PTR [rax],al
   14000ad8e:	add    BYTE PTR [rax],al
   14000ad90:	movsxd ebp,DWORD PTR [rcx+0x0]
   14000ad93:	add    BYTE PTR [rcx],al
   14000ad95:	add    BYTE PTR [rax],al
   14000ad97:	add    BYTE PTR [rbx+0x69],ch
   14000ad9a:	add    BYTE PTR [rax],al
   14000ad9c:	add    al,BYTE PTR [rax]
   14000ad9e:	add    BYTE PTR [rax],al
   14000ada0:	mov    WORD PTR [rcx+0x0],gs
   14000ada3:	add    BYTE PTR [rax],al
   14000ada5:	add    BYTE PTR [rax],al
   14000ada7:	add    BYTE PTR [rdi+0x3000069],ah
   14000adad:	add    BYTE PTR [rax],al
   14000adaf:	add    BYTE PTR [rcx],bl
   14000adb1:	or     al,BYTE PTR [rdx]
   14000adb3:	add    BYTE PTR [rdx],cl
   14000adb5:	xor    al,BYTE PTR [rsi]
   14000adb7:	push   rax
   14000adb8:	cwde   
   14000adb9:	pop    rsp
   14000adba:	add    BYTE PTR [rax],al
   14000adbc:	test   al,0x85
   14000adbe:	add    BYTE PTR [rax],al
   14000adc0:	add    DWORD PTR [rdx],ecx
   14000adc2:	add    al,BYTE PTR [rax]
   14000adc4:	or     dh,BYTE PTR [rdx]
   14000adc6:	(bad)  
   14000adc7:	xor    BYTE PTR [rcx],al
   14000adc9:	adc    eax,0x74150008
   14000adce:	or     al,BYTE PTR [rax]
   14000add0:	adc    eax,0x15000964
   14000add5:	xor    al,0x8
   14000add7:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0bf2f
   14000addd:	or     al,BYTE PTR [rax+rax*1]
   14000ade0:	or     dh,BYTE PTR [rax+rcx*1]
   14000ade3:	add    BYTE PTR [rdx],cl
   14000ade5:	push   rdx
   14000ade6:	(bad)  
   14000ade7:	jo     0x14000adea
   14000ade9:	(bad)  
   14000adea:	add    al,BYTE PTR [rax]
   14000adec:	(bad)  
   14000aded:	push   rdx
   14000adee:	add    dh,BYTE PTR [rax]
   14000adf0:	add    BYTE PTR [rax],al
   14000adf2:	add    BYTE PTR [rax],al
   14000adf4:	fcomp  DWORD PTR [rbp+0x0]
   14000adf7:	add    BYTE PTR [rax],al
   14000adf9:	add    BYTE PTR [rax],al
   14000adfb:	add    BYTE PTR [rax],dl
   14000adfd:	scas   al,BYTE PTR es:[rdi]
	...
   14000ae0e:	add    BYTE PTR [rax],al
   14000ae10:	add    al,BYTE PTR [rax]
   14000ae12:	add    BYTE PTR [rax],al
   14000ae14:	sub    BYTE PTR [rsi-0x51b00000],ch
	...
   14000ae26:	add    BYTE PTR [rax],al
   14000ae28:	adc    BYTE PTR [rax],al
   14000ae2a:	add    BYTE PTR [rax],al
   14000ae2c:	cmp    al,al
   14000ae2e:	add    BYTE PTR [rax],al
   14000ae30:	add    BYTE PTR [rax],al
   14000ae32:	add    BYTE PTR [rax],al
   14000ae34:	(bad)  
   14000ae35:	(bad)  
   14000ae36:	(bad)  
   14000ae37:	inc    DWORD PTR [rax]
   14000ae39:	add    BYTE PTR [rax],al
   14000ae3b:	add    BYTE PTR [rax],bl
   14000ae3d:	add    BYTE PTR [rax],al
   14000ae3f:	add    BYTE PTR [rax],dl
   14000ae41:	pop    rbp
	...
   14000ae52:	add    BYTE PTR [rax],al
   14000ae54:	(bad)  
   14000ae55:	rol    BYTE PTR [rax],0x0
   14000ae58:	add    BYTE PTR [rax],al
   14000ae5a:	add    BYTE PTR [rax],al
   14000ae5c:	(bad)  
   14000ae5d:	(bad)  
   14000ae5e:	(bad)  
   14000ae5f:	inc    DWORD PTR [rax]
   14000ae61:	add    BYTE PTR [rax],al
   14000ae63:	add    BYTE PTR [rax],bl
   14000ae65:	add    BYTE PTR [rax],al
   14000ae67:	add    BYTE PTR [rsi+0x66],ch
	...
   14000ae7a:	add    BYTE PTR [rax],al
   14000ae7c:	add    al,0x0
   14000ae7f:	add    BYTE PTR [rax],al
   14000ae81:	add    BYTE PTR [rax],al
   14000ae83:	add    bh,bh
   14000ae85:	(bad)  
   14000ae86:	(bad)  
   14000ae87:	inc    DWORD PTR [rax]
   14000ae89:	add    BYTE PTR [rax],al
   14000ae8b:	add    BYTE PTR [rax],bl
   14000ae8d:	add    BYTE PTR [rax],al
   14000ae8f:	add    BYTE PTR [rax+0x5d],bh
	...
   14000aea2:	add    BYTE PTR [rax],al
   14000aea4:	lock pop rbp
   14000aea6:	add    BYTE PTR [rax],al
   14000aea8:	add    BYTE PTR [rax],al
   14000aeaa:	add    BYTE PTR [rax],al
   14000aeac:	shr    BYTE PTR [rsi+0x0],0x0
	...
   14000aebf:	add    BYTE PTR [rbx],al
   14000aec1:	add    BYTE PTR [rax],al
   14000aec3:	add    al,ah
   14000aec5:	scas   al,BYTE PTR es:[rdi]
   14000aec6:	add    BYTE PTR [rax],al
   14000aec8:	js     0x14000ae78
   14000aeca:	add    BYTE PTR [rax],al
   14000aecc:	push   rax
   14000aecd:	scas   al,BYTE PTR es:[rdi]
	...
   14000aee2:	add    BYTE PTR [rax],al
   14000aee4:	test   al,0xc0
   14000aee6:	add    BYTE PTR [rax],al
   14000aee8:	add    BYTE PTR [rax],al
   14000aeea:	add    BYTE PTR [rax],al
   14000aeec:	(bad)  
   14000aeed:	(bad)  
   14000aeee:	(bad)  
   14000aeef:	inc    DWORD PTR [rax]
   14000aef1:	add    BYTE PTR [rax],al
   14000aef3:	add    BYTE PTR [rax],bl
   14000aef5:	add    BYTE PTR [rax],al
   14000aef7:	add    BYTE PTR [rax+0x5d],bh
	...
   14000af0a:	add    BYTE PTR [rax],al
   14000af0c:	lock pop rbp
   14000af0e:	add    BYTE PTR [rax],al
   14000af10:	add    BYTE PTR [rax],al
   14000af12:	add    BYTE PTR [rax],al
   14000af14:	sub    BYTE PTR [rdi+0x0],ch
	...
   14000af26:	add    BYTE PTR [rax],al
   14000af28:	add    eax,DWORD PTR [rax]
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	scas   rax,QWORD PTR es:[rdi]
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	js     0x14000aee0
   14000af32:	add    BYTE PTR [rax],al
   14000af34:	push   rax
   14000af35:	scas   al,BYTE PTR es:[rdi]
	...
   14000af4a:	add    BYTE PTR [rax],al
   14000af4c:	rol    al,1
   14000af4e:	add    BYTE PTR [rax],al
   14000af50:	add    BYTE PTR [rax],al
   14000af52:	add    BYTE PTR [rax],al
   14000af54:	(bad)  
   14000af55:	(bad)  
   14000af56:	(bad)  
   14000af57:	inc    DWORD PTR [rax]
   14000af59:	add    BYTE PTR [rax],al
   14000af5b:	add    BYTE PTR [rax],bl
   14000af5d:	add    BYTE PTR [rax],al
   14000af5f:	add    BYTE PTR [rax+0x5d],bh
	...
   14000af76:	add    BYTE PTR [rax],al
   14000af78:	lock (bad) 
   14000af7a:	add    BYTE PTR [rax+0x1],al
   14000af7d:	add    BYTE PTR [rax],al
   14000af7f:	add    BYTE PTR [rax+0x140009b],ch
   14000af85:	add    BYTE PTR [rax],al
   14000af87:	add    BYTE PTR [rax-0x64],dl
   14000af8a:	add    BYTE PTR [rax+0x1],al
   14000af8d:	add    BYTE PTR [rax],al
   14000af8f:	add    BYTE PTR [rax+0x140009e],cl
   14000af95:	add    BYTE PTR [rax],al
   14000af97:	add    BYTE PTR [rax-0x61],dh
   14000af9a:	add    BYTE PTR [rax+0x1],al
   14000af9d:	add    BYTE PTR [rax],al
   14000af9f:	add    al,cl
   14000afa1:	movabs al,ds:0xa170000000014000
   14000afaa:	add    BYTE PTR [rax+0x1],al
	...
   14000afbd:	add    BYTE PTR [rax],al
   14000afbf:	add    BYTE PTR [rax],bl
   14000afc1:	mov    cl,0x0
	...
   14000afcb:	add    ah,dl
   14000afcd:	mov    ah,0x0
   14000afcf:	add    BYTE PTR [rax],al
   14000afd1:	add    BYTE PTR [rax],0x0
   14000afd4:	jo     0x14000af87
	...
   14000afde:	add    BYTE PTR [rax],al
   14000afe0:	cs mov ch,0x0
   14000afe3:	add    BYTE PTR [rax-0x80],bl
   14000afe6:	add    BYTE PTR [rax],al
   14000afe8:	and    BYTE PTR [rbx+0x0],dh
   14000afee:	add    BYTE PTR [rax],al
   14000aff0:	add    BYTE PTR [rax],al
   14000aff2:	add    BYTE PTR [rax],al
   14000aff4:	sbb    al,0xb6
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	or     BYTE PTR [rdx-0x4e680000],al
	...
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	test   al,0xb9
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	add    BYTE PTR [rax-0x4d500000],0x0
	...
   14000b01b:	add    al,cl
   14000b01d:	mov    ecx,0x81980000
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	call   0x14000b0db
   14000b029:	add    BYTE PTR [rax],al
   14000b02b:	add    BYTE PTR [rax],al
   14000b02d:	add    BYTE PTR [rax],al
   14000b02f:	add    al,dh
   14000b031:	mov    ecx,0x81d00000
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	enter  0xb2,0x0
	...
   14000b044:	sbb    BYTE PTR [rdx-0x7e500000],bh
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	mov    BYTE PTR [rdx+0x0],dh
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	add    BYTE PTR [rax],al
   14000b056:	add    BYTE PTR [rax],al
   14000b058:	cmp    bh,BYTE PTR [rdx-0x7e900000]
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	sub    BYTE PTR [rdx+0x0],dh
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	add    BYTE PTR [rax],al
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	pop    rsp
   14000b06d:	mov    edx,0x81100000
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	lock mov cl,0x0
	...
   14000b07f:	add    BYTE PTR [rsi-0x27ffff46],al
   14000b085:	add    BYTE PTR [rax],0x0
   14000b088:	sbb    BYTE PTR [rdx+0x0],dh
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	add    BYTE PTR [rax],al
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	mov    al,0xba
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	add    BYTE PTR [rcx-0x4da80000],al
	...
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	fidivr DWORD PTR [rdx-0x7ec00000]
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	cwde   
   14000b0b1:	mov    dl,0x0
	...
   14000b0bb:	add    dh,bh
   14000b0bd:	mov    edx,0x81800000
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	push   0xb2
   14000b0c9:	add    BYTE PTR [rax],al
   14000b0cb:	add    BYTE PTR [rax],al
   14000b0cd:	add    BYTE PTR [rax],al
   14000b0cf:	add    BYTE PTR [rdx],ah
   14000b0d1:	mov    ebx,0x81500000
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	or     BYTE PTR [rdx+0x0],dh
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	add    BYTE PTR [rax],al
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	movabs rbx,0xb160000080f00000
	...
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	jl     0x14000b0b5
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	rex.W add BYTE PTR [rax],0x0
	...
   14000b118:	sub    BYTE PTR [rax+rax*1+0x0],dh
   14000b11f:	add    BYTE PTR [rdx],bh
   14000b121:	mov    ah,0x0
   14000b123:	add    BYTE PTR [rax],al
   14000b125:	add    BYTE PTR [rax],al
   14000b127:	add    BYTE PTR [rdx-0x4c],cl
   14000b12a:	add    BYTE PTR [rax],al
   14000b12c:	add    BYTE PTR [rax],al
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	fs mov ah,0x0
   14000b133:	add    BYTE PTR [rax],al
   14000b135:	add    BYTE PTR [rax],al
   14000b137:	add    BYTE PTR [rsi-0x4c],bh
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	add    BYTE PTR [rax],al
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	xchg   esi,eax
   14000b141:	mov    ah,0x0
   14000b143:	add    BYTE PTR [rax],al
   14000b145:	add    BYTE PTR [rax],al
   14000b147:	add    BYTE PTR [rsi+0xb4],ah
   14000b14d:	add    BYTE PTR [rax],al
   14000b14f:	add    BYTE PTR [rsi+0xb4],bh
	...
   14000b15d:	add    BYTE PTR [rax],al
   14000b15f:	add    BYTE PTR [rdx-0x45],ch
	...
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	and    BYTE PTR [rbp+0x0],dh
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	or     al,0xb5
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	add    BYTE PTR [rax],al
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	div    BYTE PTR [rax+rax*1+0x0]
   14000b187:	add    dl,ah
   14000b189:	mov    ah,0x0
	...
   14000b197:	add    al,al
   14000b199:	mov    bh,0x0
   14000b19b:	add    BYTE PTR [rax],al
   14000b19d:	add    BYTE PTR [rax],al
   14000b19f:	add    BYTE PTR [rdi+rsi*4],bl
   14000b1a2:	add    BYTE PTR [rax],al
   14000b1a4:	add    BYTE PTR [rax],al
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	shl    BYTE PTR [rdi+0x0],cl
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	hlt    
   14000b1b1:	mov    dh,0x0
   14000b1b3:	add    BYTE PTR [rax],al
   14000b1b5:	add    BYTE PTR [rax],al
   14000b1b7:	add    al,ch
   14000b1b9:	mov    bh,0x0
   14000b1bb:	add    BYTE PTR [rax],al
   14000b1bd:	add    BYTE PTR [rax],al
   14000b1bf:	add    dl,cl
   14000b1c1:	mov    dh,0x0
   14000b1c3:	add    BYTE PTR [rax],al
   14000b1c5:	add    BYTE PTR [rax],al
   14000b1c7:	add    BYTE PTR [rsi-0x49],ah
   14000b1ca:	add    BYTE PTR [rax],al
   14000b1cc:	add    BYTE PTR [rax],al
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	xor    bh,BYTE PTR [rax+0x0]
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	push   0xb6
   14000b1dd:	add    BYTE PTR [rax],al
   14000b1df:	add    BYTE PTR [rsi-0x47],dh
	...
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	xor    bh,BYTE PTR [rcx+0x0]
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	fs mov eax,0x0
	...
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	(bad)  
   14000b209:	mov    ecx,0x0
	...
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	(bad)  
   14000b219:	mov    eax,0x0
	...
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	rex.WRX movabs rcx,0xb962000000000000
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	add    BYTE PTR [rax],al
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	mov    al,0xb8
   14000b23a:	add    BYTE PTR [rax],al
   14000b23c:	add    BYTE PTR [rax],al
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	mov    bh,BYTE PTR [rcx+0x0]
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	push   rdx
   14000b249:	mov    eax,0x0
	...
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	xchg   esi,eax
   14000b259:	mov    eax,0x0
	...
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	add    al,0xb9
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	add    BYTE PTR [rax],al
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	(bad)  
   14000b271:	mov    ecx,0x0
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	lock mov eax,0x0
	...
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	rex.WX movabs rax,0x0
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	add    BYTE PTR [rax],al
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	(bad)  
   14000b299:	mov    eax,0x0
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	loopne 0x14000b25a
	...
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	push   rdx
   14000b2b1:	mov    bh,0x0
   14000b2b3:	add    BYTE PTR [rax],al
   14000b2b5:	add    BYTE PTR [rax],al
   14000b2b7:	add    BYTE PTR [rsi+rsi*4+0x0],bh
	...
   14000b2c7:	add    BYTE PTR [rdi+rsi*4],dh
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	add    BYTE PTR [rax],al
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	movabs al,ds:0xb0000000000000b7
   14000b2d9:	mov    dh,0x0
	...
   14000b2e7:	add    BYTE PTR [rsi],al
   14000b2e9:	mov    bh,0x0
   14000b2eb:	add    BYTE PTR [rax],al
   14000b2ed:	add    BYTE PTR [rax],al
   14000b2ef:	add    BYTE PTR [rsi],dl
   14000b2f1:	mov    eax,0x0
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	xor    BYTE PTR [rdi+0x0],0x0
   14000b2ff:	add    BYTE PTR [rax+0xb6],dl
   14000b305:	add    BYTE PTR [rax],al
   14000b307:	add    BYTE PTR [rax],al
   14000b309:	mov    eax,0x0
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	fdiv   QWORD PTR [rsi+0x0]
	...
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	call   0x14000b3da
   14000b325:	add    BYTE PTR [rax],al
   14000b327:	add    ah,bh
   14000b329:	mov    ch,0x0
   14000b32b:	add    BYTE PTR [rax],al
   14000b32d:	add    BYTE PTR [rax],al
   14000b32f:	add    BYTE PTR [rsi+0xb5],ah
   14000b335:	add    BYTE PTR [rax],al
   14000b337:	add    BYTE PTR [rsi+0xb5],bl
   14000b33d:	add    BYTE PTR [rax],al
   14000b33f:	add    ah,al
   14000b341:	mov    ch,0x0
   14000b343:	add    BYTE PTR [rax],al
   14000b345:	add    BYTE PTR [rax],al
   14000b347:	add    al,dl
   14000b349:	mov    ch,0x0
   14000b34b:	add    BYTE PTR [rax],al
   14000b34d:	add    BYTE PTR [rax],al
   14000b34f:	add    BYTE PTR [rax],cl
   14000b351:	mov    dh,0x0
   14000b353:	add    BYTE PTR [rax],al
   14000b355:	add    BYTE PTR [rax],al
   14000b357:	add    BYTE PTR [rax],ch
   14000b359:	mov    dh,0x0
   14000b35b:	add    BYTE PTR [rax],al
   14000b35d:	add    BYTE PTR [rax],al
   14000b35f:	add    BYTE PTR [rsi],bh
   14000b361:	mov    dh,0x0
   14000b363:	add    BYTE PTR [rax],al
   14000b365:	add    BYTE PTR [rax],al
   14000b367:	add    BYTE PTR [rsi+0xb5],dl
   14000b36d:	add    BYTE PTR [rax],al
   14000b36f:	add    BYTE PTR [rbp+rsi*4+0x0],al
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	jb     0x14000b32f
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	add    BYTE PTR [rax],al
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	rex.RX mov sil,0x0
   14000b383:	add    BYTE PTR [rax],al
   14000b385:	add    BYTE PTR [rax],al
   14000b387:	add    BYTE PTR [rax-0x4a],dl
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	add    BYTE PTR [rax],al
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	pop    rsi
   14000b391:	mov    dh,0x0
   14000b393:	add    BYTE PTR [rax],al
   14000b395:	add    BYTE PTR [rax],al
   14000b397:	add    dl,dh
   14000b399:	mov    ch,0x0
   14000b39b:	add    BYTE PTR [rax],al
   14000b39d:	add    BYTE PTR [rax],al
   14000b39f:	add    BYTE PTR [rax+0xb5],dh
   14000b3a5:	add    BYTE PTR [rax],al
   14000b3a7:	add    BYTE PTR [rbp+rsi*4+0x0],ah
   14000b3ab:	add    BYTE PTR [rax],al
   14000b3ad:	add    BYTE PTR [rax],al
   14000b3af:	add    BYTE PTR [rsi-0x4b],dl
   14000b3b2:	add    BYTE PTR [rax],al
   14000b3b4:	add    BYTE PTR [rax],al
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	push   rdx
   14000b3b9:	mov    esp,0x0
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	cmp    al,0xbc
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	add    BYTE PTR [rax],al
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	(bad)  
   14000b3c9:	mov    esp,0x0
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	(bad)  
   14000b3d1:	mov    esp,0x0
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	call   0x14000b498
   14000b3dd:	add    BYTE PTR [rax],al
   14000b3df:	add    al,cl
   14000b3e1:	mov    ebx,0x0
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	test   al,0xbb
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    BYTE PTR [rax],al
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	rex.RX mov bpl,0x0
   14000b3f3:	add    BYTE PTR [rax],al
   14000b3f5:	add    BYTE PTR [rax],al
   14000b3f7:	add    BYTE PTR [rdx],bh
   14000b3f9:	mov    ch,0x0
   14000b3fb:	add    BYTE PTR [rax],al
   14000b3fd:	add    BYTE PTR [rax],al
   14000b3ff:	add    BYTE PTR [rax+0xbb],cl
   14000b405:	add    BYTE PTR [rax],al
   14000b407:	add    BYTE PTR [rdx+0xbb],dl
   14000b40d:	add    BYTE PTR [rax],al
   14000b40f:	add    BYTE PTR [rsi+0xbb],bl
   14000b415:	add    BYTE PTR [rax],al
   14000b417:	add    BYTE PTR [rsp+rdi*4+0x0],bl
	...
   14000b427:	add    BYTE PTR [rsp+rax*1+0x52],cl
   14000b42b:	(bad)  
   14000b42c:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000b433:	jo     0x14000b4a9
   14000b435:	imul   ebp,DWORD PTR [rdi+0x6e],0x1250000
   14000b43c:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b43e:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b441:	gs push rax
   14000b443:	outs   dx,DWORD PTR ds:[rsi]
   14000b444:	imul   ebp,DWORD PTR [rsi+0x74],0x9b007265
   14000b44b:	add    al,0x52
   14000b44d:	gs ins BYTE PTR es:[rdi],dx
   14000b44f:	gs (bad) 
   14000b451:	jae    0x14000b4b8
   14000b453:	push   rbx
   14000b454:	push   rdx
   14000b455:	push   rdi
   14000b456:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b458:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000b45b:	js     0x14000b4c0
   14000b45d:	ins    BYTE PTR es:[rdi],dx
   14000b45e:	jne    0x14000b4d3
   14000b460:	imul   esi,DWORD PTR [rsi+0x65],0x41000000
   14000b467:	movsxd esi,DWORD PTR [rcx+0x75]
   14000b46a:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000b471:	outs   dx,DWORD PTR ds:[rsi]
   14000b472:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000b475:	js     0x14000b4da
   14000b477:	ins    BYTE PTR es:[rdi],dx
   14000b478:	jne    0x14000b4ed
   14000b47a:	imul   esi,DWORD PTR [rsi+0x65],0x52049c00
   14000b481:	gs ins BYTE PTR es:[rdi],dx
   14000b483:	gs (bad) 
   14000b485:	jae    0x14000b4ec
   14000b487:	push   rbx
   14000b488:	push   rdx
   14000b489:	push   rdi
   14000b48a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b48c:	movsxd ebp,DWORD PTR [rbx+0x53]
   14000b48f:	push   0x64657261
   14000b494:	add    BYTE PTR [rax],al
   14000b496:	inc    BYTE PTR [rax]
   14000b498:	rex.R
   14000b499:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   14000b49d:	gs push rax
   14000b49f:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a0:	imul   ebp,DWORD PTR [rsi+0x74],0x1007265
   14000b4a7:	add    BYTE PTR [rcx+0x63],al
   14000b4aa:	jno    0x14000b521
   14000b4ac:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000b4b3:	outs   dx,DWORD PTR ds:[rsi]
   14000b4b4:	movsxd ebp,DWORD PTR [rbx+0x53]
   14000b4b7:	push   0x64657261
   14000b4bc:	add    BYTE PTR [rax],al
   14000b4be:	adc    eax,0x74654702
   14000b4c3:	rex.XB jne 0x14000b538
   14000b4c6:	jb     0x14000b52d
   14000b4c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b4c9:	je     0x14000b51f
   14000b4cb:	push   0x64616572
   14000b4d0:	rex.WB
   14000b4d1:	add    BYTE PTR fs:[rax],al
   14000b4d4:	rex.WXB
   14000b4d5:	rex.RB push r10
   14000b4d7:	rex.WRX
   14000b4d8:	rex.RB
   14000b4d9:	xor    r14,QWORD PTR [rdx]
   14000b4dc:	cs fs ins BYTE PTR es:[rdi],dx
   14000b4df:	ins    BYTE PTR es:[rdi],dx
   14000b4e0:	add    BYTE PTR [rax],al
   14000b4e2:	mov    dh,0x0
   14000b4e4:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000b4ec:	rex.WRB
   14000b4ed:	gs jae 0x14000b563
   14000b4f0:	(bad)  
   14000b4f1:	addr32 gs push rdi
   14000b4f4:	add    BYTE PTR [rax],al
   14000b4f6:	xchg   BYTE PTR [rdx],al
   14000b4f8:	push   rax
   14000b4f9:	outs   dx,DWORD PTR ds:[rsi]
   14000b4fa:	jae    0x14000b570
   14000b4fc:	push   rsp
   14000b4fd:	push   0x64616572
   14000b502:	rex.WRB
   14000b503:	gs jae 0x14000b579
   14000b506:	(bad)  
   14000b507:	addr32 gs push rdi
   14000b50a:	add    BYTE PTR [rax],al
   14000b50c:	imul   eax,DWORD PTR [rbx],0x54
   14000b50f:	jb     0x14000b572
   14000b511:	outs   dx,BYTE PTR ds:[rsi]
   14000b512:	jae    0x14000b580
   14000b514:	(bad)  
   14000b515:	je     0x14000b57c
   14000b517:	rex.WRB
   14000b518:	gs jae 0x14000b58e
   14000b51b:	(bad)  
   14000b51c:	add    BYTE PTR gs:[eax],al
   14000b520:	js     0x14000b523
   14000b522:	rex.RXB
   14000b523:	gs je  0x14000b573
   14000b526:	gs jae 0x14000b59c
   14000b529:	(bad)  
   14000b52a:	addr32 gs push rdi
   14000b52d:	add    BYTE PTR [rbp+0x53],dl
   14000b530:	rex.RB push r10
   14000b532:	xor    esi,DWORD PTR [rdx]
   14000b534:	cs fs ins BYTE PTR es:[rdi],dx
   14000b537:	ins    BYTE PTR es:[rdi],dx
   14000b538:	add    BYTE PTR [rax],al
   14000b53a:	sahf   
   14000b53b:	add    bl,BYTE PTR [rdi+0x70]
   14000b53e:	jne    0x14000b5b2
   14000b540:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   14000b544:	ins    BYTE PTR es:[rdi],dx
   14000b545:	add    BYTE PTR [rax+rax*1],dl
   14000b548:	(bad)  
   14000b549:	(bad)  
   14000b54a:	xor    eax,DWORD PTR [rax+0x59]
   14000b54d:	pop    r8
   14000b54f:	push   rax
   14000b550:	rex.RB
   14000b551:	pop    r8
   14000b553:	rex pop rdx
   14000b555:	add    BYTE PTR [rbp+0x0],dl
   14000b558:	pop    rdi
   14000b559:	pop    rax
   14000b55a:	movsxd esi,DWORD PTR [rax+0x74]
   14000b55d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000b566:	pop    rdi
   14000b567:	(bad)  
   14000b568:	ins    DWORD PTR es:[rdi],dx
   14000b569:	jae    0x14000b5d2
   14000b56b:	pop    rdi
   14000b56c:	gs js  0x14000b5d8
   14000b56f:	je     0x14000b571
   14000b571:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000b577:	addr32 gs je 0x14000b5e8
   14000b57b:	(bad)  
   14000b57c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000b583:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000b589:	gs je  0x14000b5eb
   14000b58c:	(bad)  
   14000b58d:	jo     0x14000b5ff
   14000b58f:	pop    rdi
   14000b590:	je     0x14000b60b
   14000b592:	jo     0x14000b5f9
   14000b594:	add    BYTE PTR [rax],al
   14000b596:	xor    al,BYTE PTR [riz*2+0x746978]
   14000b59d:	add    BYTE PTR [rsi],cl
   14000b59f:	add    DWORD PTR [rdi+0x65],ebx
   14000b5a2:	js     0x14000b60d
   14000b5a4:	je     0x14000b5a6
   14000b5a6:	rol    DWORD PTR [rax],0x5f
   14000b5a9:	movsxd esp,DWORD PTR [rbp+0x78]
   14000b5ac:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000b5b4:	jae    0x14000b61b
   14000b5b6:	je     0x14000b62d
   14000b5b8:	jae    0x14000b61f
   14000b5ba:	jb     0x14000b629
   14000b5bc:	(bad)  
   14000b5bd:	je     0x14000b627
   14000b5bf:	gs jb  0x14000b634
   14000b5c2:	add    BYTE PTR [rax],al
   14000b5c4:	jge    0x14000b5c7
   14000b5c6:	pop    rdi
   14000b5c7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000b5ce:	ins    DWORD PTR es:[rdi],dx
   14000b5cf:	add    BYTE PTR [rdi+0x0],dl
   14000b5d2:	pop    rdi
   14000b5d3:	pop    rdi
   14000b5d4:	rex.XB pop r15
   14000b5d6:	jae    0x14000b648
   14000b5d8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000b5dc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000b5e3:	ins    BYTE PTR es:[rdi],dx
   14000b5e4:	gs jb  0x14000b5e7
   14000b5e7:	add    BYTE PTR [rdx+0x63775f03],al
   14000b5ed:	ins    DWORD PTR es:[rdi],dx
   14000b5ee:	fs ins BYTE PTR es:[rdi],dx
   14000b5f0:	outs   dx,BYTE PTR ds:[rsi]
   14000b5f1:	add    BYTE PTR [rdi],ah
   14000b5f3:	add    DWORD PTR [rdi+0x66],ebx
   14000b5f6:	ins    DWORD PTR es:[rdi],dx
   14000b5f7:	outs   dx,DWORD PTR ds:[rsi]
   14000b5f8:	fs add BYTE PTR gs:[rax],al
   14000b5fc:	rol    BYTE PTR [rax],cl
   14000b5fe:	pop    rdi
   14000b5ff:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b602:	ins    DWORD PTR es:[rdi],dx
   14000b603:	outs   dx,DWORD PTR ds:[rsi]
   14000b604:	fs add BYTE PTR gs:[rax],al
   14000b608:	(bad)  
   14000b609:	add    BYTE PTR [rdi],bh
   14000b60b:	je     0x14000b672
   14000b60d:	jb     0x14000b67c
   14000b60f:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000b616:	pop    rcx
   14000b617:	pop    r8
   14000b619:	pop    rax
   14000b61a:	pop    rdx
   14000b61b:	add    BYTE PTR [rbp+0x73],ch
   14000b61e:	jbe    0x14000b683
   14000b620:	jb     0x14000b696
   14000b622:	cs fs ins BYTE PTR es:[rdi],dx
   14000b625:	ins    BYTE PTR es:[rdi],dx
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	pop    rbx
   14000b629:	add    BYTE PTR [rdi+0x5f],bl
   14000b62c:	rex.XB js 0x14000b6a7
   14000b62f:	rex.RX jb 0x14000b693
   14000b632:	ins    DWORD PTR es:[rdi],dx
   14000b633:	gs rex.W (bad) 
   14000b636:	outs   dx,BYTE PTR ds:[rsi]
   14000b637:	fs ins BYTE PTR es:[rdi],dx
   14000b639:	gs jb  0x14000b66f
   14000b63c:	add    BYTE PTR [rax],al
   14000b63e:	out    0x1,al
   14000b640:	pop    rdi
   14000b641:	ins    BYTE PTR es:[rdi],dx
   14000b642:	outs   dx,DWORD PTR ds:[rsi]
   14000b643:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b646:	add    ebx,DWORD PTR [r15+0x75]
   14000b64a:	outs   dx,BYTE PTR ds:[rsi]
   14000b64b:	ins    BYTE PTR es:[rdi],dx
   14000b64c:	outs   dx,DWORD PTR ds:[rsi]
   14000b64d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b650:	jnp    0x14000b652
   14000b652:	pop    rdi
   14000b653:	pop    rdi
   14000b654:	fs ins BYTE PTR es:[rdi],dx
   14000b656:	ins    BYTE PTR es:[rdi],dx
   14000b657:	outs   dx,DWORD PTR ds:[rsi]
   14000b658:	outs   dx,BYTE PTR ds:[rsi]
   14000b659:	gs js  0x14000b6c5
   14000b65c:	je     0x14000b65e
   14000b65e:	nop
   14000b65f:	add    bl,BYTE PTR [rdi+0x6f]
   14000b662:	outs   dx,BYTE PTR ds:[rsi]
   14000b663:	gs js  0x14000b6cf
   14000b666:	je     0x14000b668
   14000b668:	or     BYTE PTR [rax],al
   14000b66a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b66c:	rex.XB jb 0x14000b6d4
   14000b66f:	(bad)  
   14000b670:	je     0x14000b6d7
   14000b672:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b674:	jae    0x14000b6ea
   14000b676:	(bad)  
   14000b677:	outs   dx,BYTE PTR ds:[rsi]
   14000b678:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b67b:	add    BYTE PTR [rcx],cl
   14000b67d:	add    BYTE PTR [rdx+0x6f],dl
   14000b680:	rex.WRXB jb 0x14000b6ec
   14000b683:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   14000b68b:	jb     0x14000b6fc
   14000b68d:	jb     0x14000b68f
   14000b68f:	add    BYTE PTR [rbx],cl
   14000b691:	add    BYTE PTR [rdi+0x69],dl
   14000b694:	outs   dx,BYTE PTR ds:[rsi]
   14000b695:	outs   dx,DWORD PTR fs:[rsi]
   14000b697:	ja     0x14000b70c
   14000b699:	rex.XB jb 0x14000b701
   14000b69c:	(bad)  
   14000b69d:	je     0x14000b704
   14000b69f:	push   rbx
   14000b6a0:	je     0x14000b714
   14000b6a2:	imul   ebp,DWORD PTR [rsi+0x67],0x65666552
   14000b6a9:	jb     0x14000b710
   14000b6ab:	outs   dx,BYTE PTR ds:[rsi]
   14000b6ac:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b6af:	add    BYTE PTR [rcx],al
   14000b6b1:	add    BYTE PTR [rdx+0x6f],dl
   14000b6b4:	rex.RXB
   14000b6b5:	gs je  0x14000b6f9
   14000b6b8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000b6bc:	(bad)  
   14000b6bd:	je     0x14000b728
   14000b6bf:	outs   dx,DWORD PTR ds:[rsi]
   14000b6c0:	outs   dx,BYTE PTR ds:[rsi]
   14000b6c1:	rex.RX (bad) 
   14000b6c3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b6c7:	jns    0x14000b6c9
   14000b6c9:	add    BYTE PTR [rsi],bh
   14000b6cb:	add    BYTE PTR [rbx+0x6f],al
   14000b6ce:	push   rsp
   14000b6cf:	(bad)  
   14000b6d0:	jae    0x14000b73d
   14000b6d2:	rex.WRB
   14000b6d3:	gs ins DWORD PTR es:[rdi],dx
   14000b6d5:	rex.B ins BYTE PTR es:[rdi],dx
   14000b6d7:	ins    BYTE PTR es:[rdi],dx
   14000b6d8:	outs   dx,DWORD PTR ds:[rsi]
   14000b6d9:	movsxd eax,DWORD PTR [rax]
   14000b6db:	add    BYTE PTR [rbx],dl
   14000b6dd:	add    BYTE PTR [rdi+0x69],dl
   14000b6e0:	outs   dx,BYTE PTR ds:[rsi]
   14000b6e1:	outs   dx,DWORD PTR fs:[rsi]
   14000b6e3:	ja     0x14000b758
   14000b6e5:	rex.WB jae 0x14000b73b
   14000b6e8:	je     0x14000b75c
   14000b6ea:	imul   ebp,DWORD PTR [rsi+0x67],0x74706d45
   14000b6f1:	jns    0x14000b6f3
   14000b6f3:	add    BYTE PTR [rdx+0x0],al
   14000b6f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b6f8:	push   rbp
   14000b6f9:	outs   dx,BYTE PTR ds:[rsi]
   14000b6fa:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000b701:	imul   edi,DWORD PTR [rdx+0x65],0xc0000
   14000b708:	push   rdi
   14000b709:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000b710:	gs ins BYTE PTR es:[rdi],dx
   14000b712:	gs je  0x14000b77a
   14000b715:	push   rbx
   14000b716:	je     0x14000b78a
   14000b718:	imul   ebp,DWORD PTR [rsi+0x67],0x43000200
   14000b71f:	outs   dx,DWORD PTR ds:[rsi]
   14000b720:	rex.B
   14000b721:	fs fs push rdx
   14000b724:	gs push bx
   14000b727:	gs jb  0x14000b7a0
   14000b72a:	gs jb  0x14000b77d
   14000b72d:	jb     0x14000b79e
   14000b72f:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b732:	jae    0x14000b734
   14000b734:	(bad)  
   14000b735:	add    BYTE PTR [rdx+0x6f],dl
   14000b738:	push   rdx
   14000b739:	gs jbe 0x14000b7ab
   14000b73c:	imul   esp,DWORD PTR [rbp+0x41],0x63
   14000b740:	je     0x14000b7ab
   14000b742:	jbe    0x14000b7a5
   14000b744:	je     0x14000b7af
   14000b746:	outs   dx,DWORD PTR ds:[rsi]
   14000b747:	outs   dx,BYTE PTR ds:[rsi]
   14000b748:	rex.RX (bad) 
   14000b74a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b74e:	imul   esp,DWORD PTR [rbp+0x73],0x52000a00
   14000b755:	outs   dx,DWORD PTR ds:[rsi]
   14000b756:	rex.WRXB jb 0x14000b7c2
   14000b759:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   14000b761:	jb     0x14000b7d2
   14000b763:	jb     0x14000b7bc
   14000b765:	add    BYTE PTR [rsi],dh
   14000b767:	add    BYTE PTR [rbx+0x6f],al
   14000b76a:	push   rdx
   14000b76b:	gs ins BYTE PTR es:[rdi],dx
   14000b76d:	gs (bad) 
   14000b76f:	jae    0x14000b7d6
   14000b771:	push   rbx
   14000b772:	gs jb  0x14000b7eb
   14000b775:	gs jb  0x14000b7c8
   14000b778:	jb     0x14000b7e9
   14000b77a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b77d:	jae    0x14000b77f
   14000b77f:	add    BYTE PTR [rdi],dl
   14000b781:	add    BYTE PTR [rdi+0x69],dl
   14000b784:	outs   dx,BYTE PTR ds:[rsi]
   14000b785:	outs   dx,DWORD PTR fs:[rsi]
   14000b787:	ja     0x14000b7fc
   14000b789:	push   rbx
   14000b78a:	je     0x14000b7fe
   14000b78c:	imul   ebp,DWORD PTR [rsi+0x67],0x45736148
   14000b793:	ins    DWORD PTR es:[rdi],dx
   14000b794:	(bad)  
   14000b795:	gs fs fs gs fs rex.WRX jne 0x14000b809
   14000b79d:	ins    BYTE PTR es:[rdi],dx
   14000b79e:	add    BYTE PTR [rax],al
   14000b7a0:	add    al,0x0
   14000b7a2:	push   rdx
   14000b7a3:	outs   dx,DWORD PTR ds:[rsi]
   14000b7a4:	push   rdx
   14000b7a5:	imul   esi,DWORD PTR gs:[ebx+0x74],0x63417265
   14000b7ae:	je     0x14000b819
   14000b7b0:	jbe    0x14000b813
   14000b7b2:	je     0x14000b81d
   14000b7b4:	outs   dx,DWORD PTR ds:[rsi]
   14000b7b5:	outs   dx,BYTE PTR ds:[rsi]
   14000b7b6:	rex.RX (bad) 
   14000b7b8:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b7bc:	imul   esp,DWORD PTR [rbp+0x73],0x43002600
   14000b7c3:	outs   dx,DWORD PTR ds:[rsi]
   14000b7c4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b7c6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b7ce:	rex.RB js 0x14000b7d1
   14000b7d1:	add    BYTE PTR [rcx],bh
   14000b7d3:	add    BYTE PTR [rbx+0x6f],al
   14000b7d6:	push   rdx
   14000b7d7:	gs jbe 0x14000b849
   14000b7da:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000b7de:	(bad)  
   14000b7df:	jae    0x14000b854
   14000b7e1:	rex.WRXB (bad) 
   14000b7e3:	push   0x65
   14000b7e5:	movsxd esi,DWORD PTR [rax+rax*1+0x32]
   14000b7e9:	add    BYTE PTR [rbx+0x6f],al
   14000b7ec:	push   rdx
   14000b7ed:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000b7f6:	(bad)  
   14000b7f7:	jae    0x14000b86c
   14000b7f9:	rex.WRXB (bad) 
   14000b7fb:	push   0x65
   14000b7fd:	movsxd esi,DWORD PTR [rax+rax*1+0xa]
   14000b801:	add    BYTE PTR [rdi+0x69],dl
   14000b804:	outs   dx,BYTE PTR ds:[rsi]
   14000b805:	outs   dx,DWORD PTR fs:[rsi]
   14000b807:	ja     0x14000b87c
   14000b809:	rex.XB jb 0x14000b871
   14000b80c:	(bad)  
   14000b80d:	je     0x14000b874
   14000b80f:	push   rbx
   14000b810:	je     0x14000b884
   14000b812:	imul   ebp,DWORD PTR [rsi+0x67],0x57001000
   14000b819:	imul   ebp,DWORD PTR [rsi+0x64],0x4773776f
   14000b820:	gs je  0x14000b876
   14000b823:	je     0x14000b897
   14000b825:	imul   ebp,DWORD PTR [rsi+0x67],0x42776152
   14000b82c:	jne    0x14000b894
   14000b82e:	data16 gs jb 0x14000b832
   14000b832:	(bad)  
   14000b833:	add    BYTE PTR [rbx+0x6f],al
   14000b836:	push   rdx
   14000b837:	gs jae 0x14000b8af
   14000b83a:	ins    DWORD PTR es:[rdi],dx
   14000b83b:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000b83e:	(bad)  
   14000b83f:	jae    0x14000b8b4
   14000b841:	rex.WRXB (bad) 
   14000b843:	push   0x65
   14000b845:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000b849:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56d0b4f
   14000b84f:	gs jo  0x14000b852
   14000b852:	and    BYTE PTR [rax],al
   14000b854:	rex.RXB
   14000b855:	gs je  0x14000b8ab
   14000b858:	je     0x14000b8bb
   14000b85a:	jb     0x14000b8d0
   14000b85c:	jne    0x14000b8ce
   14000b85e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b860:	outs   dx,WORD PTR ds:[rsi]
   14000b862:	push   rdi
   14000b863:	add    BYTE PTR [rdi],cl
   14000b865:	add    BYTE PTR [rbx+0x65],dl
   14000b868:	je     0x14000b8bf
   14000b86a:	outs   dx,BYTE PTR ds:[rsi]
   14000b86b:	push   0x6c646e61
   14000b870:	gs fs rex.RB js 0x14000b8d8
   14000b875:	gs jo  0x14000b8ec
   14000b878:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b87f:	gs jb  0x14000b882
   14000b882:	adc    eax,DWORD PTR [rax]
   14000b884:	rex.RXB
   14000b885:	gs je  0x14000b8d5
   14000b888:	outs   dx,DWORD PTR ds:[rsi]
   14000b889:	fs jne 0x14000b8f8
   14000b88c:	gs rex.W (bad) 
   14000b88f:	outs   dx,BYTE PTR ds:[rsi]
   14000b890:	fs ins BYTE PTR es:[rdi],dx
   14000b892:	gs push rdi
   14000b894:	add    BYTE PTR [rax],al
   14000b896:	add    BYTE PTR [rax],al
   14000b898:	push   rcx
   14000b899:	jne    0x14000b900
   14000b89b:	jb     0x14000b916
   14000b89d:	push   rax
   14000b89e:	gs jb  0x14000b907
   14000b8a1:	outs   dx,DWORD PTR ds:[rsi]
   14000b8a2:	jb     0x14000b911
   14000b8a4:	(bad)  
   14000b8a5:	outs   dx,BYTE PTR ds:[rsi]
   14000b8a6:	movsxd esp,DWORD PTR [rbp+0x43]
   14000b8a9:	outs   dx,DWORD PTR ds:[rsi]
   14000b8aa:	jne    0x14000b91a
   14000b8ac:	je     0x14000b913
   14000b8ae:	jb     0x14000b8b0
   14000b8b0:	or     eax,0x74654700
   14000b8b5:	rex.XB jne 0x14000b92a
   14000b8b8:	jb     0x14000b91f
   14000b8ba:	outs   dx,BYTE PTR ds:[rsi]
   14000b8bb:	je     0x14000b90d
   14000b8bd:	jb     0x14000b92e
   14000b8bf:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b8c2:	jae    0x14000b90d
   14000b8c4:	add    BYTE PTR fs:[rax+rax*1],dl
   14000b8c8:	rex.RXB
   14000b8c9:	gs je  0x14000b91f
   14000b8cc:	jns    0x14000b941
   14000b8ce:	je     0x14000b935
   14000b8d0:	ins    DWORD PTR es:[rdi],dx
   14000b8d1:	push   rsp
   14000b8d2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000b8d9:	ins    BYTE PTR es:[rdi],dx
   14000b8da:	gs push rsp
   14000b8dc:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000b8e3:	gs je  0x14000b93a
   14000b8e6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000b8ed:	je     0x14000b8ef
   14000b8ef:	add    BYTE PTR [rdx],al
   14000b8f1:	add    BYTE PTR [rdx+0x74],dl
   14000b8f4:	ins    BYTE PTR es:[rdi],dx
   14000b8f5:	rex.XB (bad) 
   14000b8f7:	jo     0x14000b96d
   14000b8f9:	jne    0x14000b96d
   14000b8fb:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000b8fe:	outs   dx,BYTE PTR ds:[rsi]
   14000b8ff:	je     0x14000b966
   14000b901:	js     0x14000b977
   14000b903:	add    BYTE PTR [rcx],cl
   14000b905:	add    BYTE PTR [rdx+0x74],dl
   14000b908:	ins    BYTE PTR es:[rdi],dx
   14000b909:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b90b:	outs   dx,DWORD PTR ds:[rsi]
   14000b90c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000b910:	jne    0x14000b980
   14000b912:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000b916:	outs   dx,BYTE PTR ds:[rsi]
   14000b917:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b919:	je     0x14000b98d
   14000b91b:	jns    0x14000b91d
   14000b91d:	add    BYTE PTR [rdi],cl
   14000b91f:	add    BYTE PTR [rdx+0x74],dl
   14000b922:	ins    BYTE PTR es:[rdi],dx
   14000b923:	push   rsi
   14000b924:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000b92b:	outs   dx,BYTE PTR ds:[rsi]
   14000b92c:	ja     0x14000b997
   14000b92e:	outs   dx,BYTE PTR ds:[rsi]
   14000b92f:	add    BYTE PTR fs:[rax],al
   14000b932:	adc    DWORD PTR [rax],eax
   14000b934:	push   rbp
   14000b935:	outs   dx,BYTE PTR ds:[rsi]
   14000b936:	push   0x6c646e61
   14000b93b:	gs fs rex.RB js 0x14000b9a3
   14000b940:	gs jo  0x14000b9b7
   14000b943:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b94a:	gs jb  0x14000b94d
   14000b94d:	add    BYTE PTR [rax+rax*1],cl
   14000b950:	rex.RXB
   14000b951:	gs je  0x14000b997
   14000b954:	jne    0x14000b9c8
   14000b956:	jb     0x14000b9bd
   14000b958:	outs   dx,BYTE PTR ds:[rsi]
   14000b959:	je     0x14000b9ab
   14000b95b:	jb     0x14000b9cc
   14000b95d:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b960:	jae    0x14000b962
   14000b962:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000b967:	ins    DWORD PTR es:[rdi],dx
   14000b968:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b96f:	outs   dx,DWORD PTR ds:[rsi]
   14000b970:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b973:	jae    0x14000b975
   14000b975:	add    BYTE PTR [rax+rax*1],dl
   14000b978:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b97a:	rex.RXB
   14000b97b:	gs je  0x14000b9c1
   14000b97e:	(bad)  
   14000b97f:	ins    BYTE PTR es:[rdi],dx
   14000b980:	ins    BYTE PTR es:[rdi],dx
   14000b981:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b983:	outs   dx,BYTE PTR ds:[rsi]
   14000b984:	je     0x14000b9eb
   14000b986:	js     0x14000b9fc
   14000b988:	add    BYTE PTR [rax],al
   14000b98a:	sbb    BYTE PTR [rax],al
   14000b98c:	rex.RXB
   14000b98d:	gs je  0x14000b9e0
   14000b990:	jb     0x14000ba01
   14000b992:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b995:	jae    0x14000b9e0
   14000b997:	add    BYTE PTR fs:[rax],al
   14000b99a:	add    BYTE PTR [rax],al
   14000b99c:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b99e:	outs   dx,DWORD PTR ds:[rsi]
   14000b99f:	jae    0x14000ba06
   14000b9a1:	rex.W (bad) 
   14000b9a3:	outs   dx,BYTE PTR ds:[rsi]
   14000b9a4:	fs ins BYTE PTR es:[rdi],dx
   14000b9a6:	add    BYTE PTR gs:[rcx+0x70],ah
   14000b9aa:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2d21
   14000b9b4:	outs   dx,DWORD PTR ds:[rsi]
   14000b9b5:	jb     0x14000ba1c
   14000b9b7:	sub    eax,0x2d6d6f63
   14000b9bc:	ins    BYTE PTR es:[rdi],dx
   14000b9bd:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31e6f4
   14000b9c3:	fs ins BYTE PTR es:[rdi],dx
   14000b9c5:	ins    BYTE PTR es:[rdi],dx
   14000b9c6:	add    BYTE PTR [rax],al
   14000b9c8:	(bad)  
   14000b9c9:	jo     0x14000ba34
   14000b9cb:	sub    eax,0x772d736d
   14000b9d0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b9d7:	sub    eax,0x726e6977
   14000b9dc:	je     0x14000ba0b
   14000b9de:	gs jb  0x14000ba53
   14000b9e1:	outs   dx,DWORD PTR ds:[rsi]
   14000b9e2:	jb     0x14000ba11
   14000b9e4:	ins    BYTE PTR es:[rdi],dx
   14000b9e5:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31e71c
   14000b9eb:	fs ins BYTE PTR es:[rdi],dx
   14000b9ed:	ins    BYTE PTR es:[rdi],dx
   14000b9ee:	add    BYTE PTR [rax],al
   14000b9f0:	(bad)  
   14000b9f1:	jo     0x14000ba5c
   14000b9f3:	sub    eax,0x772d736d
   14000b9f8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b9ff:	sub    eax,0x726e6977
   14000ba04:	je     0x14000ba33
   14000ba06:	jae    0x14000ba7c
   14000ba08:	jb     0x14000ba73
   14000ba0a:	outs   dx,BYTE PTR ds:[rsi]
   14000ba0b:	addr32 sub eax,0x312d316c
   14000ba11:	sub    eax,0x6c642e30
   14000ba16:	ins    BYTE PTR es:[rdi],dx
   14000ba17:	add    BYTE PTR [rcx+0x70],ah
   14000ba1a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2d91
   14000ba24:	outs   dx,DWORD PTR ds:[rsi]
   14000ba25:	jb     0x14000ba8c
   14000ba27:	sub    eax,0x726e6977
   14000ba2c:	je     0x14000ba5b
   14000ba2e:	ins    BYTE PTR es:[rdi],dx
   14000ba2f:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30e766
   14000ba35:	fs ins BYTE PTR es:[rdi],dx
   14000ba37:	ins    BYTE PTR es:[rdi],dx
   14000ba38:	add    BYTE PTR [rax],al
   14000ba3a:	(bad)  
   14000ba3b:	jo     0x14000baa6
   14000ba3d:	sub    eax,0x772d736d
   14000ba42:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ba49:	sub    eax,0x636e7973
   14000ba4e:	push   0x2d316c2d
   14000ba53:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64e889
   14000ba59:	ins    BYTE PTR es:[rdi],dx
   14000ba5a:	add    BYTE PTR [rax],al
   14000ba5c:	(bad)  
   14000ba5d:	jo     0x14000bac8
   14000ba5f:	sub    eax,0x772d736d
   14000ba64:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000ba6b:	sub    eax,0x636f7270
   14000ba70:	gs jae 0x14000bae6
   14000ba73:	je     0x14000badd
   14000ba75:	jb     0x14000badc
   14000ba77:	(bad)  
   14000ba78:	fs jae 0x14000baa8
   14000ba7b:	ins    BYTE PTR es:[rdi],dx
   14000ba7c:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32e7b3
   14000ba82:	fs ins BYTE PTR es:[rdi],dx
   14000ba84:	ins    BYTE PTR es:[rdi],dx
   14000ba85:	add    BYTE PTR [rcx+0x70],ah
   14000ba88:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2dff
   14000ba92:	outs   dx,DWORD PTR ds:[rsi]
   14000ba93:	jb     0x14000bafa
   14000ba95:	sub    eax,0x6f727265
   14000ba9a:	jb     0x14000bb04
   14000ba9c:	(bad)  
   14000ba9d:	outs   dx,BYTE PTR ds:[rsi]
   14000ba9e:	fs ins BYTE PTR es:[rdi],dx
   14000baa0:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000baa7:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64e8de
   14000baad:	ins    BYTE PTR es:[rdi],dx
   14000baae:	add    BYTE PTR [rax],al
   14000bab0:	(bad)  
   14000bab1:	jo     0x14000bb1c
   14000bab3:	sub    eax,0x772d736d
   14000bab8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000babf:	sub    eax,0x7262696c
   14000bac4:	(bad)  
   14000bac5:	jb     0x14000bb40
   14000bac7:	ins    BYTE PTR es:[rdi],dx
   14000bac8:	outs   dx,DWORD PTR ds:[rsi]
   14000bac9:	(bad)  
   14000baca:	fs gs jb 0x14000bafb
   14000bace:	ins    BYTE PTR es:[rdi],dx
   14000bacf:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30e807
   14000bad5:	fs ins BYTE PTR es:[rdi],dx
   14000bad7:	ins    BYTE PTR es:[rdi],dx
   14000bad8:	add    BYTE PTR [rax],al
   14000bada:	(bad)  
   14000badb:	jo     0x14000bb46
   14000badd:	sub    eax,0x772d736d
   14000bae2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000bae9:	sub    eax,0x666f7270
   14000baee:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000baf6:	sub    eax,0x6c642e30
   14000bafb:	ins    BYTE PTR es:[rdi],dx
   14000bafc:	add    BYTE PTR [rax],al
   14000bafe:	(bad)  
   14000baff:	jo     0x14000bb6a
   14000bb01:	sub    eax,0x772d736d
   14000bb06:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000bb0d:	sub    eax,0x69737973
   14000bb12:	outs   dx,BYTE PTR ds:[rsi]
   14000bb13:	outs   dx,WORD PTR ds:[rsi]
   14000bb15:	sub    eax,0x322d316c
   14000bb1a:	sub    eax,0x6c642e31
   14000bb1f:	ins    BYTE PTR es:[rdi],dx
   14000bb20:	add    BYTE PTR [rax],al
   14000bb22:	(bad)  
   14000bb23:	jo     0x14000bb8e
   14000bb25:	sub    eax,0x772d736d
   14000bb2a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000bb31:	sub    eax,0x736c7472
   14000bb36:	jne    0x14000bba8
   14000bb38:	jo     0x14000bba9
   14000bb3a:	jb     0x14000bbb0
   14000bb3c:	sub    eax,0x322d316c
   14000bb41:	sub    eax,0x6c642e30
   14000bb46:	ins    BYTE PTR es:[rdi],dx
   14000bb47:	add    BYTE PTR [rcx+0x70],ah
   14000bb4a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2ec1
   14000bb54:	outs   dx,DWORD PTR ds:[rsi]
   14000bb55:	jb     0x14000bbbc
   14000bb57:	sub    eax,0x646e6168
   14000bb5c:	ins    BYTE PTR es:[rdi],dx
   14000bb5d:	gs sub eax,0x312d316c
   14000bb63:	sub    eax,0x6c642e30
   14000bb68:	ins    BYTE PTR es:[rdi],dx
   14000bb69:	add    BYTE PTR [rbx],al
   14000bb6b:	add    DWORD PTR [rbx+0x48],edx
   14000bb6e:	push   rbx
   14000bb6f:	gs je  0x14000bbc6
   14000bb72:	push   0x64616572
   14000bb77:	push   rdx
   14000bb78:	data16 add BYTE PTR gs:[rax],al
   14000bb7c:	push   rbx
   14000bb7d:	rex.W
   14000bb7e:	rex.WR push rdi
   14000bb80:	push   r8
   14000bb82:	rex.WB
   14000bb83:	cs fs ins BYTE PTR es:[rdi],dx
   14000bb86:	ins    BYTE PTR es:[rdi],dx
   14000bb87:	add    BYTE PTR [rsi+0x6c616d04],al
   14000bb8d:	ins    BYTE PTR es:[rdi],dx
   14000bb8e:	outs   dx,DWORD PTR ds:[rsi]
   14000bb8f:	movsxd eax,DWORD PTR [rax]
   14000bb91:	add    BYTE PTR [rdi+0x61635f00],bh
   14000bb97:	ins    BYTE PTR es:[rdi],dx
   14000bb98:	ins    BYTE PTR es:[rdi],dx
   14000bb99:	outs   dx,BYTE PTR ds:[rsi]
   14000bb9a:	gs ja  0x14000bc05
   14000bb9d:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000bba4:	outs   dx,DWORD PTR ds:[rsi]
   14000bba5:	jbe    0x14000bc0c
   14000bba7:	add    BYTE PTR [rdx],cl
   14000bba9:	add    BYTE PTR [rdi],bh
   14000bbab:	(bad)  
   14000bbac:	xor    BYTE PTR [rbp+0x78],ah
   14000bbaf:	movsxd esp,DWORD PTR [rbp+0x70]
   14000bbb2:	je     0x14000bc1d
   14000bbb4:	outs   dx,DWORD PTR ds:[rsi]
   14000bbb5:	outs   dx,BYTE PTR ds:[rsi]
   14000bbb6:	rex
   14000bbb7:	rex push rcx
   14000bbb9:	rex.RB
   14000bbba:	rex.B
   14000bbbb:	rex.B
   14000bbbc:	rex
   14000bbbd:	rex.B
   14000bbbe:	rex.RB
   14000bbbf:	rex.X push rcx
   14000bbc1:	rex.RB
   14000bbc2:	rex.X
   14000bbc3:	rex.R
   14000bbc4:	rex pop rdx
   14000bbc6:	add    BYTE PTR [rax],al
   14000bbc8:	or     eax,DWORD PTR [rax]
   14000bbca:	(bad)  
   14000bbcb:	(bad)  
   14000bbcc:	xor    BYTE PTR [rbp+0x78],ah
   14000bbcf:	movsxd esp,DWORD PTR [rbp+0x70]
   14000bbd2:	je     0x14000bc3d
   14000bbd4:	outs   dx,DWORD PTR ds:[rsi]
   14000bbd5:	outs   dx,BYTE PTR ds:[rsi]
   14000bbd6:	rex
   14000bbd7:	rex push rcx
   14000bbd9:	rex.RB
   14000bbda:	rex.B
   14000bbdb:	rex.B
   14000bbdc:	rex
   14000bbdd:	rex.B
   14000bbde:	rex.RB
   14000bbdf:	rex.X push rcx
   14000bbe1:	rex.RB
   14000bbe2:	rex.X
   14000bbe3:	rex.R
   14000bbe4:	rex.W
   14000bbe5:	rex pop rdx
   14000bbe7:	add    BYTE PTR [rax+rax*1],cl
   14000bbea:	(bad)  
   14000bbeb:	(bad)  
   14000bbec:	xor    BYTE PTR [rbp+0x78],ah
   14000bbef:	movsxd esp,DWORD PTR [rbp+0x70]
   14000bbf2:	je     0x14000bc5d
   14000bbf4:	outs   dx,DWORD PTR ds:[rsi]
   14000bbf5:	outs   dx,BYTE PTR ds:[rsi]
   14000bbf6:	rex
   14000bbf7:	rex push rcx
   14000bbf9:	rex.RB
   14000bbfa:	rex.B
   14000bbfb:	rex.B
   14000bbfc:	rex
   14000bbfd:	rex.B
   14000bbfe:	rex.RB
   14000bbff:	rex.X push rsi
   14000bc01:	xor    BYTE PTR [rax+0x40],al
   14000bc04:	pop    rdx
   14000bc05:	add    BYTE PTR [rcx],dl
   14000bc07:	add    BYTE PTR [rdi],bh
   14000bc09:	(bad)  
   14000bc0a:	xor    DWORD PTR [rbp+0x78],esp
   14000bc0d:	movsxd esp,DWORD PTR [rbp+0x70]
   14000bc10:	je     0x14000bc7b
   14000bc12:	outs   dx,DWORD PTR ds:[rsi]
   14000bc13:	outs   dx,BYTE PTR ds:[rsi]
   14000bc14:	rex
   14000bc15:	rex push rbp
   14000bc17:	rex.RB
   14000bc18:	rex.B
   14000bc19:	rex.B
   14000bc1a:	rex pop rax
   14000bc1c:	pop    rdx
   14000bc1d:	add    BYTE PTR [rcx],dh
   14000bc1f:	add    BYTE PTR [rdi],bh
   14000bc21:	ja     0x14000bc8b
   14000bc23:	(bad)  
   14000bc24:	je     0x14000bc66
   14000bc26:	gs js  0x14000bc8c
   14000bc29:	gs jo  0x14000bca0
   14000bc2c:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000bc33:	rex.X
   14000bc34:	push   r8
   14000bc36:	rex.RB
   14000bc37:	rex.X
   14000bc38:	rex.R pop rax
   14000bc3a:	pop    rdx
   14000bc3b:	add    BYTE PTR [rbx+0x0],cl
   14000bc3e:	pop    rdi
   14000bc3f:	rex.XB js 0x14000bcba
   14000bc42:	push   rsp
   14000bc43:	push   0x45776f72
   14000bc48:	js     0x14000bcad
   14000bc4a:	gs jo  0x14000bcc1
   14000bc4d:	imul   ebp,DWORD PTR [rdi+0x6e],0x4920000
   14000bc54:	ins    DWORD PTR es:[rdi],dx
   14000bc55:	gs ins DWORD PTR es:[rdi],dx
   14000bc57:	movsxd esi,DWORD PTR [rax+0x79]
   14000bc5a:	add    BYTE PTR [rax],al
   14000bc5c:	adc    al,BYTE PTR [rax]
   14000bc5e:	(bad)  
   14000bc5f:	(bad)  
   14000bc60:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000bc64:	gs pop rdi
   14000bc66:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000bc6d:	rex.RB
   14000bc6e:	rex.B
   14000bc6f:	rex.B
   14000bc70:	rex pop rax
   14000bc72:	pop    rdx
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	add    DWORD PTR [rax],eax
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	int    0x5d
   14000c012:	and    dl,dl
   14000c014:	data16 (bad) 
   14000c016:	(bad)  
   14000c017:	inc    DWORD PTR [rax]
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rax],ah
   14000c021:	xchg   BYTE PTR [rax],al
   14000c023:	rex add DWORD PTR [rax],eax
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	push   0x1400086
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    al,al
   14000c031:	xchg   BYTE PTR [rax],al
   14000c033:	rex add DWORD PTR [rax],eax
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	adc    BYTE PTR [rdx+0x14000],bl
	...
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	cs (bad) 
   14000c04a:	push   r14
   14000c04c:	(bad)
   14000c051:	ins    BYTE PTR es:[rdi],dx
   14000c052:	ins    BYTE PTR es:[rdi],dx
   14000c053:	outs   dx,DWORD PTR ds:[rsi]
   14000c054:	movsxd eax,DWORD PTR [rax+0x73]
   14000c057:	je     0x14000c0bd
   14000c059:	rex
   14000c05a:	add    BYTE PTR [rax],al
   14000c05d:	add    BYTE PTR [rax],al
   14000c05f:	add    BYTE PTR [rax],dl
   14000c061:	(bad)  
   14000c062:	add    BYTE PTR [rax+0x1],al
	...
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rsi],ch
   14000c071:	(bad)  
   14000c072:	push   r14
   14000c074:	gs js  0x14000c0da
   14000c077:	gs jo  0x14000c0ee
   14000c07a:	imul   ebp,DWORD PTR [rdi+0x6e],0x10004040
   14000c081:	(bad)  
   14000c082:	add    BYTE PTR [rax+0x1],al
	...
   14000c08d:	add    BYTE PTR [rax],al
   14000c08f:	add    BYTE PTR [rsi],ch
   14000c091:	(bad)  
   14000c092:	push   r14
   14000c094:	ins    BYTE PTR es:[rdi],dx
   14000c095:	outs   dx,DWORD PTR ds:[rsi]
   14000c096:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000c09e:	jb     0x14000c0e0
   14000c0a0:	jae    0x14000c116
   14000c0a2:	fs rex
   14000c0a4:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax],dl
   14000c0a9:	(bad)  
   14000c0aa:	add    BYTE PTR [rax+0x1],al
	...
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rsi],ch
   14000c0b9:	(bad)  
   14000c0ba:	push   r14
   14000c0bc:	ins    BYTE PTR es:[rdi],dx
   14000c0bd:	outs   dx,BYTE PTR gs:[rsi]
   14000c0bf:	addr32 je 0x14000c12a
   14000c0c2:	pop    rdi
   14000c0c3:	gs jb  0x14000c138
   14000c0c6:	outs   dx,DWORD PTR ds:[rsi]
   14000c0c7:	jb     0x14000c109
   14000c0c9:	jae    0x14000c13f
   14000c0cb:	fs rex
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0d0:	adc    BYTE PTR [rdx+0x14000],bl
	...
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	cs (bad) 
   14000c0e2:	push   r14
   14000c0e4:	outs   dx,DWORD PTR ds:[rsi]
   14000c0e5:	jne    0x14000c15b
   14000c0e7:	pop    rdi
   14000c0e8:	outs   dx,DWORD PTR ds:[rsi]
   14000c0e9:	pop    di
   14000c0eb:	jb     0x14000c14e
   14000c0ed:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ee:	addr32 gs rex jae 0x14000c167
   14000c0f3:	fs rex
   14000c0f5:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	add    BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	pop    rcx
   14000d005:	adc    BYTE PTR [rax],al
   14000d007:	add    BYTE PTR [rax-0x5fffff58],cl
   14000d00d:	adc    BYTE PTR [rax],al
   14000d00f:	add    cl,ah
   14000d011:	adc    BYTE PTR [rax],al
   14000d013:	add    BYTE PTR [rax-0x58],al
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	lock adc BYTE PTR [rax],al
   14000d01b:	add    BYTE PTR [rcx],ah
   14000d01d:	adc    DWORD PTR [rax],eax
   14000d01f:	add    BYTE PTR [rax-0x58],dl
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	xor    BYTE PTR [rcx],dl
   14000d026:	add    BYTE PTR [rax],al
   14000d028:	(bad)  
   14000d029:	adc    DWORD PTR [rax],eax
   14000d02b:	add    BYTE PTR [rax-0x58],al
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	lock adc DWORD PTR [rax],eax
   14000d033:	add    BYTE PTR [rdi+0x12],bl
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	test   al,0x0
   14000d03b:	add    BYTE PTR [rax+0x12],dh
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	fwait
   14000d041:	adc    eax,DWORD PTR [rax]
   14000d043:	add    BYTE PTR [rax+rbp*4+0x0],bl
   14000d047:	add    BYTE PTR [rax+0x55000013],dh
   14000d04d:	adc    al,0x0
   14000d04f:	add    BYTE PTR [rax+rbp*4+0x0],dh
   14000d053:	add    BYTE PTR [rax+0x14],ah
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	stos   DWORD PTR es:[rdi],eax
   14000d059:	adc    al,0x0
   14000d05b:	add    BYTE PTR [rax-0x3fffff58],cl
   14000d061:	adc    al,0x0
   14000d063:	add    BYTE PTR [rbp+0x15],bl
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	nop
   14000d069:	test   al,0x0
   14000d06b:	add    BYTE PTR [rax+0x15],dh
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	add    edx,DWORD PTR [rsi]
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	test   al,0x0
   14000d077:	add    BYTE PTR [rax],dl
   14000d079:	(bad)  
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	jge    0x14000d094
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	push   rax
   14000d081:	test   al,0x0
   14000d083:	add    BYTE PTR [rsi+rdx*1+0x17b50000],al
   14000d08a:	add    BYTE PTR [rax],al
   14000d08c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d08d:	test   al,0x0
   14000d08f:	add    al,al
   14000d091:	(bad)  
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	in     al,0x17
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	mov    BYTE PTR [rax+0x17f00000],ch
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	pop    rdx
   14000d0a1:	sbb    BYTE PTR [rax],al
   14000d0a3:	add    BYTE PTR [rax+rbp*4+0x18600000],bh
   14000d0aa:	add    BYTE PTR [rax],al
   14000d0ac:	(bad)  
   14000d0ad:	sbb    BYTE PTR [rax],al
   14000d0af:	add    al,dl
   14000d0b1:	test   al,0x0
   14000d0b3:	add    al,dh
   14000d0b5:	sbb    BYTE PTR [rax],al
   14000d0b7:	add    BYTE PTR [rdi+0x19],cl
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	in     al,0xa8
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	(bad)  
   14000d0c1:	sbb    DWORD PTR [rax],eax
   14000d0c3:	add    dh,dh
   14000d0c5:	sbb    DWORD PTR [rax],eax
   14000d0c7:	add    BYTE PTR [rax-0x58],al
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	add    BYTE PTR [rdx],bl
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	sub    ebx,DWORD PTR [rbx]
   14000d0d2:	add    BYTE PTR [rax],al
   14000d0d4:	pop    rsp
   14000d0d5:	test   al,0x0
   14000d0d7:	add    BYTE PTR [rax+0x1b],al
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	in     eax,0x1b
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	je     0x14000d08a
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	in     al,dx
   14000d0e5:	sbb    eax,DWORD PTR [rax]
   14000d0e7:	add    BYTE PTR [rip+0xffffffffa400001d],bl        # 0xe400d10a
   14000d0ed:	test   al,0x0
   14000d0ef:	add    BYTE PTR [rax+0x1d],ah
   14000d0f2:	add    BYTE PTR [rax],al
   14000d0f4:	retf   0x1d
   14000d0f7:	add    BYTE PTR [rax+rbp*4+0x1dd00000],bh
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	neg    DWORD PTR [rdi]
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	cld    
   14000d105:	test   al,0x0
   14000d107:	add    BYTE PTR [rax],al
   14000d109:	and    BYTE PTR [rax],al
   14000d10b:	add    BYTE PTR [rdx],dh
   14000d10d:	and    al,BYTE PTR [rax]
   14000d10f:	add    BYTE PTR [rax+0x500000a9],cl
   14000d115:	and    al,BYTE PTR [rax]
   14000d117:	add    dh,ah
   14000d119:	and    al,BYTE PTR [rax]
   14000d11b:	add    BYTE PTR [rax-0x58],al
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	lock and al,BYTE PTR [rax]
   14000d123:	add    BYTE PTR [rdi+0x23],bl
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	test   al,0x0
   14000d12b:	add    BYTE PTR [rax+0x23],dh
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	mov    ebx,0x88000023
   14000d135:	test   al,0x0
   14000d137:	add    al,dl
   14000d139:	and    eax,DWORD PTR [rax]
   14000d13b:	add    BYTE PTR [rbp+0x24],ch
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	nop
   14000d141:	test   al,0x0
   14000d143:	add    BYTE PTR [rax+0x79000024],al
   14000d149:	and    eax,0xa8400000
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	and    BYTE PTR [rip+0x25e30000],0x0        # 0x165e3d157
   14000d157:	add    BYTE PTR [rax-0x58],al
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	lock and eax,0x260f0000
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	clc    
   14000d165:	test   eax,0x26200000
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	pop    rsp
   14000d16d:	add    BYTE PTR es:[rax],al
   14000d170:	push   rax
   14000d171:	test   al,0x0
   14000d173:	add    BYTE PTR [rax+0x26],dh
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	(bad)  
   14000d179:	add    BYTE PTR es:[rax],al
   14000d17c:	clc    
   14000d17d:	test   eax,0x26980000
   14000d182:	add    BYTE PTR [rax],al
   14000d184:	(bad)  
   14000d185:	add    BYTE PTR es:[rax],al
   14000d188:	push   rax
   14000d189:	test   al,0x0
   14000d18b:	add    ah,dl
   14000d18d:	add    BYTE PTR es:[rax],al
   14000d190:	ins    BYTE PTR es:[rdi],dx
   14000d191:	sub    BYTE PTR [rax],al
   14000d193:	add    BYTE PTR [rax],al
   14000d195:	stos   BYTE PTR es:[rdi],al
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	sub    BYTE PTR [rax],0x0
   14000d19b:	add    BYTE PTR [rbx+0x5c000029],ch
   14000d1a1:	test   al,0x0
   14000d1a3:	add    al,al
   14000d1a5:	sub    DWORD PTR [rax],eax
   14000d1a7:	add    BYTE PTR [rbp+0x2a],ah
   14000d1aa:	add    BYTE PTR [rax],al
   14000d1ac:	je     0x14000d156
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	ins    BYTE PTR es:[rdi],dx
   14000d1b1:	sub    al,BYTE PTR [rax]
   14000d1b3:	add    BYTE PTR [rbp+0x2b],dl
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	test   al,0x0
   14000d1bb:	add    BYTE PTR [rax+0x2b],ah
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	test   BYTE PTR [rbx],ch
   14000d1c2:	add    BYTE PTR [rax],al
   14000d1c4:	mov    BYTE PTR [rax+0x2b8c0000],ch
   14000d1ca:	add    BYTE PTR [rax],al
   14000d1cc:	test   eax,0xf800002b
   14000d1d1:	test   eax,0x2bb00000
   14000d1d6:	add    BYTE PTR [rax],al
   14000d1d8:	(bad)  
   14000d1d9:	sub    eax,DWORD PTR [rax]
   14000d1db:	add    al,bh
   14000d1dd:	test   eax,0x2c800000
   14000d1e2:	add    BYTE PTR [rax],al
   14000d1e4:	stos   BYTE PTR es:[rdi],al
   14000d1e5:	sub    al,0x0
   14000d1e7:	add    BYTE PTR [rax-0x58],dl
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	mov    al,0x2c
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	fisubr DWORD PTR [rax+rax*1]
   14000d1f3:	add    BYTE PTR [rax-0x58],dl
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	loopne 0x14000d226
   14000d1fa:	add    BYTE PTR [rax],al
   14000d1fc:	(bad)  
   14000d1fd:	add    BYTE PTR cs:[rax],al
   14000d200:	mov    BYTE PTR [rdx+0x2e0c0000],ch
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	(bad)  
   14000d209:	(bad)  
   14000d20a:	add    BYTE PTR [rax],al
   14000d20c:	movabs al,ds:0x9500002fa00000aa
   14000d215:	xor    DWORD PTR [rax],eax
   14000d217:	add    BYTE PTR [rdx+rbp*4+0x31a00000],dh
   14000d21e:	add    BYTE PTR [rax],al
   14000d220:	lea    esi,[rdx]
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	shr    BYTE PTR [rdx+0x32a00000],1
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	fidiv  WORD PTR [rdx]
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	push   rax
   14000d231:	test   al,0x0
   14000d233:	add    al,dh
   14000d235:	xor    al,BYTE PTR [rax]
   14000d237:	add    BYTE PTR [rdx-0x5bffffcd],bl
   14000d23d:	test   al,0x0
   14000d23f:	add    BYTE PTR [rax+0x7000033],ah
   14000d245:	xor    eax,0xaaec0000
   14000d24a:	add    BYTE PTR [rax],al
   14000d24c:	adc    BYTE PTR [rip+0x35a60000],dh        # 0x175a6d252
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	test   al,0x0
   14000d257:	add    BYTE PTR [rax-0xffffcb],dh
   14000d25d:	xor    eax,0xa8400000
   14000d262:	add    BYTE PTR [rax],al
   14000d264:	adc    BYTE PTR [rsi],dh
   14000d266:	add    BYTE PTR [rax],al
   14000d268:	rex.WX (bad) 
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	clc    
   14000d26d:	stos   BYTE PTR es:[rdi],al
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	push   rax
   14000d271:	(bad)  
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	fs (bad) 
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	clc    
   14000d279:	test   eax,0x37800000
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	leave  
   14000d281:	(bad)  
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	test   al,0x0
   14000d287:	add    ah,bl
   14000d289:	(bad)  
   14000d28a:	add    BYTE PTR [rax],al
   14000d28c:	pop    rcx
   14000d28d:	cmp    BYTE PTR [rax],al
   14000d28f:	add    BYTE PTR [rax-0x58],al
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	movabs al,ds:0xf8000038bb000038
   14000d29d:	test   eax,0x38d00000
   14000d2a2:	add    BYTE PTR [rax],al
   14000d2a4:	add    BYTE PTR [rcx],bh
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	push   rax
   14000d2a9:	test   al,0x0
   14000d2ab:	add    BYTE PTR [rax],dl
   14000d2ad:	cmp    DWORD PTR [rax],eax
   14000d2af:	add    BYTE PTR [rcx+rdi*1+0x0],bl
   14000d2b3:	add    BYTE PTR [rax-0x58],dl
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	jo     0x14000d2f3
   14000d2ba:	add    BYTE PTR [rax],al
   14000d2bc:	xchg   edi,eax
   14000d2bd:	cmp    DWORD PTR [rax],eax
   14000d2bf:	add    BYTE PTR [rax-0x5fffff58],cl
   14000d2c5:	cmp    DWORD PTR [rax],eax
   14000d2c7:	add    bl,cl
   14000d2c9:	cmp    al,BYTE PTR [rax]
   14000d2cb:	add    BYTE PTR [rax+rbp*4+0x0],bl
   14000d2cf:	add    ah,dl
   14000d2d1:	cmp    al,BYTE PTR [rax]
   14000d2d3:	add    BYTE PTR [rdx+0x1400003e],dh
   14000d2d9:	stos   DWORD PTR es:[rdi],eax
   14000d2da:	add    BYTE PTR [rax],al
   14000d2dc:	sar    BYTE PTR [rsi],0x0
   14000d2df:	add    BYTE PTR [rbp+0x3f],ah
   14000d2e2:	add    BYTE PTR [rax],al
   14000d2e4:	je     0x14000d28e
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	nop
   14000d2e9:	(bad)  
   14000d2ea:	add    BYTE PTR [rax],al
   14000d2ec:	fadd   DWORD PTR [rax+0x0]
   14000d2ef:	add    BYTE PTR [rbx+rbp*4],ch
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	loopne 0x14000d336
   14000d2f6:	add    BYTE PTR [rax],al
   14000d2f8:	mov    dl,0x41
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	test   al,0x0
   14000d2ff:	add    al,al
   14000d301:	add    BYTE PTR [r8],al
   14000d304:	and    al,BYTE PTR [rdx+0x0]
   14000d307:	add    BYTE PTR [rax-0x55],cl
   14000d30a:	add    BYTE PTR [rax],al
   14000d30c:	xor    BYTE PTR [rdx+0x0],al
   14000d30f:	add    BYTE PTR [rdi+0x42],ch
   14000d312:	add    BYTE PTR [rax],al
   14000d314:	test   al,0x0
   14000d317:	add    BYTE PTR [rax-0x3effffbe],al
   14000d31d:	rex.X add BYTE PTR [rax],al
   14000d320:	test   al,0x0
   14000d323:	add    al,dl
   14000d325:	rex.X add BYTE PTR [rax],al
   14000d328:	adc    DWORD PTR [rbx+0x0],eax
   14000d32b:	add    BYTE PTR [rax-0x58],al
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	and    BYTE PTR [rbx+0x0],al
   14000d333:	add    BYTE PTR [rcx+0x43],ah
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	test   al,0x0
   14000d33b:	add    BYTE PTR [rax+0x43],dh
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	movabs eax,ds:0xb00000a850000043
   14000d349:	rex.XB add BYTE PTR [r8],al
   14000d34c:	rex.RX
   14000d34d:	add    BYTE PTR [rax],r8b
   14000d350:	test   al,0x0
   14000d353:	add    BYTE PTR [rax+0x44],dl
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	mov    edi,0x40000044
   14000d35d:	test   al,0x0
   14000d35f:	add    al,dl
   14000d361:	add    BYTE PTR [rax],r8b
   14000d364:	sti    
   14000d365:	add    BYTE PTR [r8],r8b
   14000d368:	pop    rsp
   14000d369:	test   al,0x0
   14000d36b:	add    BYTE PTR [rax],dl
   14000d36d:	rex.RX add BYTE PTR [rax],r8b
   14000d370:	mov    ch,0x46
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	je     0x14000d31e
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	mov    esp,0xed000046
   14000d37d:	rex.RXB add BYTE PTR [r8],r8b
   14000d380:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d381:	test   al,0x0
   14000d383:	add    BYTE PTR [rax],al
   14000d385:	rex.W add BYTE PTR [rax],al
   14000d388:	(bad)  
   14000d389:	rex.W add BYTE PTR [rax],al
   14000d38c:	test   al,0x0
   14000d38f:	add    BYTE PTR [rax+0x48],dl
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	mov    dl,0x48
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	in     al,0xa8
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	ror    BYTE PTR [rax+0x0],0x0
   14000d3a0:	icebp  
   14000d3a1:	rex.W add BYTE PTR [rax],al
   14000d3a4:	push   rax
   14000d3a5:	test   al,0x0
   14000d3a7:	add    BYTE PTR [rax],al
   14000d3a9:	rex.WB add BYTE PTR [r8],al
   14000d3ac:	(bad)  
   14000d3ad:	rex.WB add BYTE PTR [r8],al
   14000d3b0:	(bad)  
   14000d3b1:	stos   DWORD PTR es:[rdi],eax
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	jo     0x14000d3ff
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	movabs eax,ds:0xb00000a850000049
   14000d3c1:	rex.WB add BYTE PTR [r8],al
   14000d3c4:	rex.RX
   14000d3c5:	rex.WX add BYTE PTR [rax],al
   14000d3c8:	test   al,0x0
   14000d3cb:	add    BYTE PTR [rax+0x4a],dl
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	mov    edi,0x4000004a
   14000d3d5:	test   al,0x0
   14000d3d7:	add    al,dl
   14000d3d9:	rex.WX add BYTE PTR [rax],al
   14000d3dc:	sti    
   14000d3dd:	rex.WXB add BYTE PTR [r8],al
   14000d3e0:	pop    rsp
   14000d3e1:	test   al,0x0
   14000d3e3:	add    BYTE PTR [rax],dl
   14000d3e5:	rex.WR add BYTE PTR [rax],r8b
   14000d3e8:	mov    ch,0x4c
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	je     0x14000d396
   14000d3ee:	add    BYTE PTR [rax],al
   14000d3f0:	mov    esp,0xed00004c
   14000d3f5:	rex.WRB add BYTE PTR [r8],r8b
   14000d3f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d3f9:	test   al,0x0
   14000d3fb:	add    BYTE PTR [rax],al
   14000d3fd:	rex.WRX add BYTE PTR [rax],r8b
   14000d400:	push   rcx
   14000d401:	rex.WRX add BYTE PTR [rax],r8b
   14000d404:	mov    esp,0x600000a8
   14000d409:	rex.WRX add BYTE PTR [rax],r8b
   14000d40c:	test   BYTE PTR [rsi+0x0],0x0
   14000d410:	test   al,0x0
   14000d413:	add    BYTE PTR [rax],al
   14000d415:	rex.WRXB add BYTE PTR [r8],r8b
   14000d418:	sub    edx,DWORD PTR [rax+0x0]
   14000d41b:	add    BYTE PTR [rax+rbp*4+0x0],bl
   14000d41f:	add    BYTE PTR [rax+0x50],al
   14000d422:	add    BYTE PTR [rax],al
   14000d424:	in     eax,0x50
   14000d426:	add    BYTE PTR [rax],al
   14000d428:	je     0x14000d3d2
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	in     al,dx
   14000d42d:	push   rax
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	sbb    eax,0xa4000052
   14000d435:	test   al,0x0
   14000d437:	add    BYTE PTR [rdx+rdx*2],ah
   14000d43a:	add    BYTE PTR [rax],al
   14000d43c:	(bad)  
   14000d43d:	push   rdx
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	js     0x14000d3ed
   14000d442:	add    BYTE PTR [rax],al
   14000d444:	rcl    BYTE PTR [rdx+0x0],1
   14000d447:	add    BYTE PTR [rdi-0x7ffffad],bl
   14000d44d:	test   eax,0x53b00000
   14000d452:	add    BYTE PTR [rax],al
   14000d454:	stc    
   14000d455:	push   rbx
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	mov    BYTE PTR [rbx+0x54000000],ch
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	jno    0x14000d4b8
   14000d462:	add    BYTE PTR [rax],al
   14000d464:	nop
   14000d465:	stos   DWORD PTR es:[rdi],eax
   14000d466:	add    BYTE PTR [rax],al
   14000d468:	adc    BYTE PTR [rsi+0x0],0x0
   14000d46c:	xchg   edx,eax
   14000d46d:	push   rsi
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	clc    
   14000d471:	test   eax,0x56b00000
   14000d476:	add    BYTE PTR [rax],al
   14000d478:	(bad)  
   14000d479:	push   rsi
   14000d47a:	add    BYTE PTR [rax],al
   14000d47c:	enter  0xab,0x0
   14000d480:	clc    
   14000d481:	push   rsi
   14000d482:	add    BYTE PTR [rax],al
   14000d484:	(bad)  
   14000d485:	push   rdi
   14000d486:	add    BYTE PTR [rax],al
   14000d488:	int3   
   14000d489:	stos   DWORD PTR es:[rdi],eax
   14000d48a:	add    BYTE PTR [rax],al
   14000d48c:	sub    al,0x57
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	retf   0x57
   14000d493:	add    BYTE PTR [rax-0x54],bl
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	rcl    BYTE PTR [rdi+0x0],1
   14000d49b:	add    bh,ah
   14000d49d:	push   rdi
   14000d49e:	add    BYTE PTR [rax],al
   14000d4a0:	clc    
   14000d4a1:	test   eax,0x57f00000
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	sub    DWORD PTR [rax+0x0],ebx
   14000d4ab:	add    al,bh
   14000d4ad:	test   eax,0x58300000
   14000d4b2:	add    BYTE PTR [rax],al
   14000d4b4:	rex.W pop rax
   14000d4b6:	add    BYTE PTR [rax],al
   14000d4b8:	clc    
   14000d4b9:	test   eax,0x585c0000
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	mov    al,0x58
   14000d4c2:	add    BYTE PTR [rax],al
   14000d4c4:	jl     0x14000d472
   14000d4c6:	add    BYTE PTR [rax],al
   14000d4c8:	mov    eax,0xfd000058
   14000d4cd:	pop    rax
   14000d4ce:	add    BYTE PTR [rax],al
   14000d4d0:	mov    BYTE PTR [rax+0x59600000],ch
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	lods   eax,DWORD PTR ds:[rsi]
   14000d4d9:	pop    rcx
   14000d4da:	add    BYTE PTR [rax],al
   14000d4dc:	pushf  
   14000d4dd:	lods   al,BYTE PTR ds:[rsi]
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	hlt    
   14000d4e1:	pop    rcx
   14000d4e2:	add    BYTE PTR [rax],al
   14000d4e4:	(bad)  
   14000d4e5:	pop    rdx
   14000d4e6:	add    BYTE PTR [rax],al
   14000d4e8:	shr    BYTE PTR [rax+rax*1+0x5ae400],0x0
   14000d4f0:	sbb    BYTE PTR [rbx+0x0],bl
   14000d4f3:	add    BYTE PTR [rax+0x200000a8],cl
   14000d4f9:	pop    rbx
   14000d4fa:	add    BYTE PTR [rax],al
   14000d4fc:	xchg   ecx,eax
   14000d4fd:	pop    rsp
   14000d4fe:	add    BYTE PTR [rax],al
   14000d500:	int3   
   14000d501:	lods   al,BYTE PTR ds:[rsi]
   14000d502:	add    BYTE PTR [rax],al
   14000d504:	fcomp  DWORD PTR [rax+rax*1+0x0]
   14000d508:	or     DWORD PTR [rbp+0x0],ebx
   14000d50b:	add    BYTE PTR [rax+0x100000a8],cl
   14000d511:	pop    rbp
   14000d512:	add    BYTE PTR [rax],al
   14000d514:	xor    DWORD PTR [rbp+0x0],ebx
   14000d517:	add    BYTE PTR [rax+0x380000a8],cl
   14000d51d:	pop    rbp
   14000d51e:	add    BYTE PTR [rax],al
   14000d520:	jo     0x14000d57f
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	mov    BYTE PTR [rax+0x5d780000],ch
   14000d52a:	add    BYTE PTR [rax],al
   14000d52c:	cdq    
   14000d52d:	pop    rbp
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	mov    BYTE PTR [rax+0x5da00000],ch
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	iret   
   14000d539:	pop    rbp
   14000d53a:	add    BYTE PTR [rax],al
   14000d53c:	shr    BYTE PTR [rbp+0x5e000000],0x0
   14000d543:	add    BYTE PTR [rsi],ah
   14000d545:	pop    rsi
   14000d546:	add    BYTE PTR [rax],al
   14000d548:	mov    BYTE PTR [rax+0x5e300000],ch
   14000d54e:	add    BYTE PTR [rax],al
   14000d550:	imul   ebx,DWORD PTR [rsi+0x0],0xa85000
   14000d557:	add    BYTE PTR [rax+0x5e],dh
   14000d55a:	add    BYTE PTR [rax],al
   14000d55c:	lahf   
   14000d55d:	pop    rsi
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	push   rax
   14000d561:	test   al,0x0
   14000d563:	add    BYTE PTR [rax-0x55ffffa2],ch
   14000d569:	pop    rdi
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	in     al,0xac
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	mov    al,0x5f
   14000d572:	add    BYTE PTR [rax],al
   14000d574:	or     BYTE PTR [rax+0x0],ah
   14000d577:	add    BYTE PTR [rax-0x58],al
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	adc    BYTE PTR [rax+0x0],ah
   14000d57f:	add    BYTE PTR [rax],dh
   14000d581:	(bad)  
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	fsubr  QWORD PTR [rax+rax*1+0x603800]
   14000d58b:	add    BYTE PTR [rcx+0x60],cl
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	clc    
   14000d591:	test   eax,0x60500000
   14000d596:	add    BYTE PTR [rax],al
   14000d598:	jae    0x14000d5fa
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	fsubr  QWORD PTR [rax+rax*1+0x607c00]
   14000d5a3:	add    BYTE PTR [rdi-0x23ffffa0],bl
   14000d5a9:	lods   al,BYTE PTR ds:[rsi]
   14000d5aa:	add    BYTE PTR [rax],al
   14000d5ac:	test   al,0x60
   14000d5ae:	add    BYTE PTR [rax],al
   14000d5b0:	mov    ecx,0xf8000060
   14000d5b5:	test   eax,0x60c00000
   14000d5ba:	add    BYTE PTR [rax],al
   14000d5bc:	(bad)  
   14000d5bd:	(bad)  
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	mov    esp,0xd40000a8
   14000d5c5:	(bad)  
   14000d5c6:	add    BYTE PTR [rax],al
   14000d5c8:	shl    BYTE PTR [rdx+0x0],1
   14000d5cb:	add    BYTE PTR [rax-0x58],al
   14000d5ce:	add    BYTE PTR [rax],al
   14000d5d0:	loopne 0x14000d634
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	(bad)  
   14000d5d5:	movsxd eax,DWORD PTR [rax]
   14000d5d7:	add    BYTE PTR [rax-0x58],dl
   14000d5da:	add    BYTE PTR [rax],al
   14000d5dc:	jo     0x14000d641
   14000d5de:	add    BYTE PTR [rax],al
   14000d5e0:	fisub  DWORD PTR [rbx+0x0]
   14000d5e3:	add    al,cl
   14000d5e5:	lods   eax,DWORD PTR ds:[rsi]
   14000d5e6:	add    BYTE PTR [rax],al
   14000d5e8:	loopne 0x14000d64d
   14000d5ea:	add    BYTE PTR [rax],al
   14000d5ec:	je     0x14000d652
   14000d5ee:	add    BYTE PTR [rax],al
   14000d5f0:	push   rax
   14000d5f1:	test   al,0x0
   14000d5f3:	add    BYTE PTR [rax-0x1cffff9c],al
   14000d5f9:	add    BYTE PTR fs:[rax],al
   14000d5fc:	fsubr  QWORD PTR [rbp+0x64f00000]
   14000d602:	add    BYTE PTR [rax],al
   14000d604:	ss add BYTE PTR gs:[rax],al
   14000d608:	call   0x18000d6ba
   14000d60d:	add    BYTE PTR gs:[rax],al
   14000d610:	movabs ds:0xc00000addc000065,eax
   14000d619:	data16 add BYTE PTR [rax],al
   14000d61c:	lock data16 add BYTE PTR [rax],al
   14000d620:	push   rax
   14000d621:	test   al,0x0
   14000d623:	add    al,bh
   14000d625:	data16 add BYTE PTR [rax],al
   14000d628:	adc    eax,0xf8000067
   14000d62d:	test   eax,0x671c0000
   14000d632:	add    BYTE PTR [rax],al
   14000d634:	jg     0x14000d69d
   14000d636:	add    BYTE PTR [rax],al
   14000d638:	mov    BYTE PTR [rax+0x67880000],ch
   14000d63e:	add    BYTE PTR [rax],al
   14000d640:	(bad)  
   14000d641:	push   0xffffffffa8e40000
   14000d646:	add    BYTE PTR [rax],al
   14000d648:	xor    BYTE PTR [rax+0x0],ch
   14000d64b:	add    BYTE PTR [rdx],dh
   14000d64d:	push   0xffffffffacd80000
   14000d652:	add    BYTE PTR [rax],al
   14000d654:	xchg   esp,eax
   14000d655:	push   0x68b00000
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	sub    BYTE PTR [rdx+0x68b60000],0x0
   14000d663:	add    ah,dl
   14000d665:	push   0xffffffffaa800000
   14000d66a:	add    BYTE PTR [rax],al
   14000d66c:	fisubr DWORD PTR [rax+0x0]
   14000d66f:	add    dl,bh
   14000d671:	push   0xffffffffac480000
   14000d676:	add    BYTE PTR [rax],al
   14000d678:	add    BYTE PTR [rcx+0x0],ch
   14000d67b:	add    BYTE PTR [rbx],bl
   14000d67d:	imul   eax,DWORD PTR [rax],0xaa8000
   14000d683:	add    BYTE PTR [rax],dh
   14000d685:	imul   eax,DWORD PTR [rax],0x695000
   14000d68b:	add    BYTE PTR [rax+0x560000aa],al
   14000d691:	imul   eax,DWORD PTR [rax],0x699a00
   14000d697:	add    BYTE PTR [rax-0x65ffff53],dh
   14000d69d:	imul   eax,DWORD PTR [rax],0x69bf00
   14000d6a3:	.byte 0x0
   14000d6a4:	mov    al,0xad
	...

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e00c:	add    BYTE PTR [rax],al
   14000e00e:	add    al,BYTE PTR [rax]
   14000e010:	adc    BYTE PTR [rax],al
   14000e012:	add    BYTE PTR [rax],al
   14000e014:	and    BYTE PTR [rax],al
   14000e016:	add    BYTE PTR [rax+0x18],al
   14000e01c:	cmp    BYTE PTR [rax],al
   14000e01e:	add    BYTE PTR [rax+0x0],al
	...
   14000e02c:	add    BYTE PTR [rax],al
   14000e02e:	add    DWORD PTR [rax],eax
   14000e030:	add    DWORD PTR [rax],eax
   14000e032:	add    BYTE PTR [rax],al
   14000e034:	push   rax
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rax],0x0
	...
   14000e046:	add    DWORD PTR [rax],eax
   14000e048:	add    DWORD PTR [rax],eax
   14000e04a:	add    BYTE PTR [rax],al
   14000e04c:	push   0x800000
	...
   14000e05d:	add    BYTE PTR [rcx],al
   14000e05f:	add    BYTE PTR [rcx],cl
   14000e061:	add    al,0x0
   14000e063:	add    BYTE PTR [rax+0x0],al
	...
   14000e075:	add    BYTE PTR [rcx],al
   14000e077:	add    BYTE PTR [rcx],cl
   14000e079:	add    al,0x0
   14000e07b:	add    BYTE PTR [rax+0x40000000],dl
   14000e081:	in     eax,0x0
   14000e083:	add    BYTE PTR [rbx+rax*1+0x0],dl
   14000e08a:	add    BYTE PTR [rax],al
   14000e08c:	add    BYTE PTR [rax],al
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	movabs al,ds:0x49c0000e0
   14000e099:	add    BYTE PTR [rax],al
   14000e09b:	add    BYTE PTR [rax],al
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    BYTE PTR [rdi+rdi*1],bh
   14000e0a2:	js     0x14000e111
   14000e0a4:	ins    BYTE PTR es:[rdi],dx
   14000e0a5:	and    BYTE PTR [rsi+0x65],dh
   14000e0a8:	jb     0x14000e11d
   14000e0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e0b1:	xor    BYTE PTR [rdx],ah
   14000e0b3:	and    BYTE PTR [rbp+0x6e],ah
   14000e0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000e0c0:	rex.RX sub eax,0x73202238
   14000e0c6:	je     0x14000e129
   14000e0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000e0c9:	fs (bad) 
   14000e0cb:	ins    BYTE PTR es:[rdi],dx
   14000e0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000e0cd:	outs   dx,BYTE PTR ds:[rsi]
   14000e0ce:	gs cmp eax,0x73657922
   14000e0d4:	and    bh,BYTE PTR [rdi]
   14000e0d6:	ds or  eax,0x2d213c0a
   14000e0dc:	sub    eax,0x706f4320
   14000e0e1:	jns    0x14000e155
   14000e0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000e0ea:	sub    DWORD PTR [rax],esp
   14000e0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000e0f4:	je     0x14000e116
   14000e0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e0f8:	jb     0x14000e16a
   14000e0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000e0fb:	jb     0x14000e15e
   14000e0fd:	je     0x14000e168
   14000e0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000e100:	outs   dx,BYTE PTR ds:[rsi]
   14000e101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e1f34
   14000e107:	cmp    al,0x61
   14000e109:	jae    0x14000e17e
   14000e10b:	gs ins DWORD PTR es:[rdi],dx
   14000e10d:	(bad)  
   14000e10e:	ins    BYTE PTR es:[rdi],dx
   14000e10f:	jns    0x14000e131
   14000e111:	js     0x14000e180
   14000e113:	ins    BYTE PTR es:[rdi],dx
   14000e114:	outs   dx,BYTE PTR ds:[rsi]
   14000e115:	jae    0x14000e154
   14000e117:	and    dh,BYTE PTR [rbp+0x72]
   14000e11a:	outs   dx,BYTE PTR ds:[rsi]
   14000e11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e11e:	push   0x73616d65
   14000e123:	sub    eax,0x7263696d
   14000e128:	outs   dx,DWORD PTR ds:[rsi]
   14000e129:	jae    0x14000e19a
   14000e12b:	data16 je 0x14000e15b
   14000e12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e131:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e134:	ins    DWORD PTR es:[rdi],dx
   14000e135:	cs jbe 0x14000e169
   14000e138:	and    ah,BYTE PTR [rax]
   14000e13a:	ins    DWORD PTR es:[rdi],dx
   14000e13b:	(bad)  
   14000e13c:	outs   dx,BYTE PTR ds:[rsi]
   14000e13d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000e144:	jb     0x14000e1b9
   14000e146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e14d:	xor    BYTE PTR [rdx],ah
   14000e14f:	ds or  eax,0x73613c0a
   14000e155:	jae    0x14000e1bc
   14000e157:	ins    DWORD PTR es:[rdi],dx
   14000e158:	(bad)  
   14000e159:	ins    BYTE PTR es:[rdi],dx
   14000e15a:	jns    0x14000e1a5
   14000e15c:	fs outs dx,BYTE PTR gs:[rsi]
   14000e15f:	je     0x14000e1ca
   14000e161:	je     0x14000e1dc
   14000e163:	or     eax,0x2020200a
   14000e168:	and    BYTE PTR [rsi+0x61],ch
   14000e16b:	ins    DWORD PTR es:[rdi],dx
   14000e16c:	gs cmp eax,0x63694d22
   14000e172:	jb     0x14000e1e3
   14000e174:	jae    0x14000e1e5
   14000e176:	data16 je 0x14000e1a7
   14000e179:	push   rdi
   14000e17a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000e181:	push   rbx
   14000e182:	push   0x2e6c6c65
   14000e187:	push   rax
   14000e188:	imul   esp,DWORD PTR [rbx+0x6b],0x6f487265
   14000e18f:	jae    0x14000e205
   14000e191:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602101a1
   14000e197:	and    BYTE PTR [rax+0x72],dh
   14000e19a:	outs   dx,DWORD PTR ds:[rsi]
   14000e19b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e19e:	jae    0x14000e20f
   14000e1a0:	jb     0x14000e1e3
   14000e1a2:	jb     0x14000e207
   14000e1a4:	push   0x63657469
   14000e1a9:	je     0x14000e220
   14000e1ab:	jb     0x14000e212
   14000e1ad:	cmp    eax,0x646d6122
   14000e1b2:	ss xor al,0x22
   14000e1b5:	or     eax,0x2020200a
   14000e1ba:	and    BYTE PTR [rsi+0x65],dh
   14000e1bd:	jb     0x14000e232
   14000e1bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000e1c6:	xor    DWORD PTR [rsi],ebp
   14000e1c8:	xor    BYTE PTR [rsi],ch
   14000e1ca:	xor    BYTE PTR [rdx],ah
   14000e1cc:	or     eax,0x2020200a
   14000e1d1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000e1d5:	gs cmp eax,0x6e697722
   14000e1db:	xor    esi,DWORD PTR [rdx]
   14000e1dd:	and    ch,BYTE PTR [rdi]
   14000e1df:	ds or  eax,0x65643c0a
   14000e1e5:	jae    0x14000e24a
   14000e1e7:	jb     0x14000e252
   14000e1e9:	jo     0x14000e25f
   14000e1eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   14000e1f2:	outs   dx,DWORD PTR fs:[rsi]
   14000e1f4:	ja     0x14000e269
   14000e1f6:	and    BYTE PTR [rbx+0x68],dl
   14000e1f9:	gs ins BYTE PTR es:[rdi],dx
   14000e1fb:	ins    BYTE PTR es:[rdi],dx
   14000e1fc:	cmp    al,0x2f
   14000e1fe:	fs gs jae 0x14000e265
   14000e202:	jb     0x14000e26d
   14000e204:	jo     0x14000e27a
   14000e206:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000e20d:	fs gs jo 0x14000e276
   14000e211:	outs   dx,BYTE PTR ds:[rsi]
   14000e212:	fs outs dx,BYTE PTR gs:[rsi]
   14000e215:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000e218:	or     eax,0x2020200a
   14000e21d:	and    BYTE PTR [rsp+riz*2],bh
   14000e220:	gs jo  0x14000e288
   14000e223:	outs   dx,BYTE PTR ds:[rsi]
   14000e224:	fs outs dx,BYTE PTR gs:[rsi]
   14000e227:	je     0x14000e26a
   14000e229:	jae    0x14000e29e
   14000e22b:	gs ins DWORD PTR es:[rdi],dx
   14000e22d:	(bad)  
   14000e22e:	ins    BYTE PTR es:[rdi],dx
   14000e22f:	jns    0x14000e26f
   14000e231:	or     eax,0x2020200a
   14000e236:	and    BYTE PTR [rax],ah
   14000e238:	and    BYTE PTR [rax],ah
   14000e23a:	and    BYTE PTR [rcx+riz*2],bh
   14000e23d:	jae    0x14000e2b2
   14000e23f:	gs ins DWORD PTR es:[rdi],dx
   14000e241:	(bad)  
   14000e242:	ins    BYTE PTR es:[rdi],dx
   14000e243:	jns    0x14000e28e
   14000e245:	fs outs dx,BYTE PTR gs:[rsi]
   14000e248:	je     0x14000e2b3
   14000e24a:	je     0x14000e2c5
   14000e24c:	or     eax,0x2020200a
   14000e251:	and    BYTE PTR [rax],ah
   14000e253:	and    BYTE PTR [rax],ah
   14000e255:	and    BYTE PTR [rax],ah
   14000e257:	and    BYTE PTR [rax],ah
   14000e259:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000e25d:	gs cmp eax,0x6e697722
   14000e263:	xor    esi,DWORD PTR [rdx]
   14000e265:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160210275
   14000e26b:	and    BYTE PTR [rax],ah
   14000e26d:	and    BYTE PTR [rax],ah
   14000e26f:	and    BYTE PTR [rax],ah
   14000e271:	and    BYTE PTR [rax],ah
   14000e273:	and    BYTE PTR [rsi+0x61],ch
   14000e276:	ins    DWORD PTR es:[rdi],dx
   14000e277:	gs cmp eax,0x63694d22
   14000e27d:	jb     0x14000e2ee
   14000e27f:	jae    0x14000e2f0
   14000e281:	data16 je 0x14000e2b2
   14000e284:	push   rdi
   14000e285:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000e28c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e28e:	ins    DWORD PTR es:[rdi],dx
   14000e28f:	ins    DWORD PTR es:[rdi],dx
   14000e290:	outs   dx,DWORD PTR ds:[rsi]
   14000e291:	outs   dx,BYTE PTR ds:[rsi]
   14000e292:	sub    eax,0x746e6f43
   14000e297:	jb     0x14000e308
   14000e299:	ins    BYTE PTR es:[rdi],dx
   14000e29a:	jae    0x14000e2be
   14000e29c:	or     eax,0x2020200a
   14000e2a1:	and    BYTE PTR [rax],ah
   14000e2a3:	and    BYTE PTR [rax],ah
   14000e2a5:	and    BYTE PTR [rax],ah
   14000e2a7:	and    BYTE PTR [rax],ah
   14000e2a9:	and    BYTE PTR [rsi+0x65],dh
   14000e2ac:	jb     0x14000e321
   14000e2ae:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000e2b5:	xor    BYTE PTR [rsi],ch
   14000e2b7:	xor    BYTE PTR [rsi],ch
   14000e2b9:	xor    BYTE PTR [rdx],ah
   14000e2bb:	or     eax,0x2020200a
   14000e2c0:	and    BYTE PTR [rax],ah
   14000e2c2:	and    BYTE PTR [rax],ah
   14000e2c4:	and    BYTE PTR [rax],ah
   14000e2c6:	and    BYTE PTR [rax],ah
   14000e2c8:	and    BYTE PTR [rax+0x72],dh
   14000e2cb:	outs   dx,DWORD PTR ds:[rsi]
   14000e2cc:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e2cf:	jae    0x14000e340
   14000e2d1:	jb     0x14000e314
   14000e2d3:	jb     0x14000e338
   14000e2d5:	push   0x63657469
   14000e2da:	je     0x14000e351
   14000e2dc:	jb     0x14000e343
   14000e2de:	cmp    eax,0xd222a22
   14000e2e3:	or     ah,BYTE PTR [rax]
   14000e2e5:	and    BYTE PTR [rax],ah
   14000e2e7:	and    BYTE PTR [rax],ah
   14000e2e9:	and    BYTE PTR [rax],ah
   14000e2eb:	and    BYTE PTR [rax],ah
   14000e2ed:	and    BYTE PTR [rax],ah
   14000e2ef:	and    BYTE PTR [rax+0x75],dh
   14000e2f2:	(bad)  
   14000e2f3:	ins    BYTE PTR es:[rdi],dx
   14000e2f4:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000e2fb:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000e2ff:	and    dh,BYTE PTR [rsi]
   14000e301:	xor    eax,0x36623539
   14000e306:	xor    al,0x31
   14000e308:	xor    al,0x34
   14000e30a:	movsxd esp,DWORD PTR [rbx+0x66]
   14000e30d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000e311:	or     eax,0x2020200a
   14000e316:	and    BYTE PTR [rax],ah
   14000e318:	and    BYTE PTR [rax],ah
   14000e31a:	and    BYTE PTR [rax],ah
   14000e31c:	and    BYTE PTR [rax],ah
   14000e31e:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000e322:	addr32 jne 0x14000e386
   14000e325:	addr32 gs cmp eax,0xd222a22
   14000e32c:	or     ah,BYTE PTR [rax]
   14000e32e:	and    BYTE PTR [rax],ah
   14000e330:	and    BYTE PTR [rax],ah
   14000e332:	and    BYTE PTR [rax],ah
   14000e334:	and    BYTE PTR [rdi],ch
   14000e336:	ds or  eax,0x2020200a
   14000e33c:	and    BYTE PTR [rdi+rbp*1],bh
   14000e33f:	fs gs jo 0x14000e3a8
   14000e343:	outs   dx,BYTE PTR ds:[rsi]
   14000e344:	fs outs dx,BYTE PTR gs:[rsi]
   14000e347:	je     0x14000e38a
   14000e349:	jae    0x14000e3be
   14000e34b:	gs ins DWORD PTR es:[rdi],dx
   14000e34d:	(bad)  
   14000e34e:	ins    BYTE PTR es:[rdi],dx
   14000e34f:	jns    0x14000e38f
   14000e351:	or     eax,0x642f3c0a
   14000e356:	gs jo  0x14000e3be
   14000e359:	outs   dx,BYTE PTR ds:[rsi]
   14000e35a:	fs outs dx,BYTE PTR gs:[rsi]
   14000e35d:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000e360:	or     eax,0x72743c0a
   14000e365:	jne    0x14000e3da
   14000e367:	je     0x14000e3b2
   14000e369:	outs   dx,BYTE PTR ds:[rsi]
   14000e36a:	outs   dx,WORD PTR ds:[rsi]
   14000e36c:	and    BYTE PTR [rax+0x6d],bh
   14000e36f:	ins    BYTE PTR es:[rdi],dx
   14000e370:	outs   dx,BYTE PTR ds:[rsi]
   14000e371:	jae    0x14000e3b0
   14000e373:	and    dh,BYTE PTR [rbp+0x72]
   14000e376:	outs   dx,BYTE PTR ds:[rsi]
   14000e377:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e37a:	push   0x73616d65
   14000e37f:	sub    eax,0x7263696d
   14000e384:	outs   dx,DWORD PTR ds:[rsi]
   14000e385:	jae    0x14000e3f6
   14000e387:	data16 je 0x14000e3b7
   14000e38a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e38d:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e390:	ins    DWORD PTR es:[rdi],dx
   14000e391:	cs jbe 0x14000e3c7
   14000e394:	and    bh,BYTE PTR [rsi]
   14000e396:	or     eax,0x2020200a
   14000e39b:	and    BYTE PTR [rbx+rsi*2],bh
   14000e39e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e3a2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e3aa:	and    BYTE PTR [rax],ah
   14000e3ac:	and    BYTE PTR [rax],ah
   14000e3ae:	and    BYTE PTR [rax],ah
   14000e3b0:	cmp    al,0x72
   14000e3b2:	gs jno 0x14000e42a
   14000e3b5:	gs jae 0x14000e42c
   14000e3b8:	gs fs push rax
   14000e3bb:	jb     0x14000e426
   14000e3bd:	jbe    0x14000e428
   14000e3bf:	ins    BYTE PTR es:[rdi],dx
   14000e3c0:	gs addr32 gs jae 0x14000e403
   14000e3c5:	or     eax,0x2020200a
   14000e3ca:	and    BYTE PTR [rax],ah
   14000e3cc:	and    BYTE PTR [rax],ah
   14000e3ce:	and    BYTE PTR [rax],ah
   14000e3d0:	and    BYTE PTR [rax],ah
   14000e3d2:	and    BYTE PTR [rdx+rsi*2],bh
   14000e3d5:	gs jno 0x14000e44d
   14000e3d8:	gs jae 0x14000e44f
   14000e3db:	gs fs rex.RB js 0x14000e445
   14000e3e0:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e3e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e3ea:	ins    BYTE PTR es:[rdi],dx
   14000e3eb:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000e3ef:	gs ins BYTE PTR es:[rdi],dx
   14000e3f1:	cmp    eax,0x49736122
   14000e3f6:	outs   dx,BYTE PTR ds:[rsi]
   14000e3f7:	jbe    0x14000e468
   14000e3f9:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000e3fd:	and    BYTE PTR [rbp+0x69],dh
   14000e400:	movsxd esp,DWORD PTR [r11+0x65]
   14000e404:	jae    0x14000e479
   14000e406:	cmp    eax,0x6c616622
   14000e40b:	jae    0x14000e472
   14000e40d:	and    ch,BYTE PTR [rdi]
   14000e40f:	ds or  eax,0x2020200a
   14000e415:	and    BYTE PTR [rax],ah
   14000e417:	and    BYTE PTR [rax],ah
   14000e419:	and    BYTE PTR [rdi+rbp*1],bh
   14000e41c:	jb     0x14000e483
   14000e41e:	jno    0x14000e495
   14000e420:	gs jae 0x14000e497
   14000e423:	gs fs push rax
   14000e426:	jb     0x14000e491
   14000e428:	jbe    0x14000e493
   14000e42a:	ins    BYTE PTR es:[rdi],dx
   14000e42b:	gs addr32 gs jae 0x14000e46e
   14000e430:	or     eax,0x2020200a
   14000e435:	and    BYTE PTR [rdi+rbp*1],bh
   14000e438:	jae    0x14000e49f
   14000e43a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e43d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000e445:	je     0x14000e4b9
   14000e447:	jne    0x14000e4bc
   14000e449:	je     0x14000e494
   14000e44b:	outs   dx,BYTE PTR ds:[rsi]
   14000e44c:	outs   dx,WORD PTR ds:[rsi]
   14000e44e:	ds or  eax,0x70613c0a
   14000e454:	jo     0x14000e4c2
   14000e456:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000e45d:	and    BYTE PTR [rax+0x6d],bh
   14000e460:	ins    BYTE PTR es:[rdi],dx
   14000e461:	outs   dx,BYTE PTR ds:[rsi]
   14000e462:	jae    0x14000e4a1
   14000e464:	and    dh,BYTE PTR [rbp+0x72]
   14000e467:	outs   dx,BYTE PTR ds:[rsi]
   14000e468:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e46b:	push   0x73616d65
   14000e470:	sub    eax,0x7263696d
   14000e475:	outs   dx,DWORD PTR ds:[rsi]
   14000e476:	jae    0x14000e4e7
   14000e478:	data16 je 0x14000e4a8
   14000e47b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e47e:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e481:	ins    DWORD PTR es:[rdi],dx
   14000e482:	cs jbe 0x14000e4b8
   14000e485:	and    bh,BYTE PTR [rsi]
   14000e487:	or     eax,0x2020200a
   14000e48c:	and    BYTE PTR [rdi+rsi*2],bh
   14000e48f:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000e496:	gs je  0x14000e50d
   14000e499:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000e4a0:	and    BYTE PTR [rax],ah
   14000e4a2:	and    BYTE PTR [rax],ah
   14000e4a4:	and    BYTE PTR [rax],ah
   14000e4a6:	and    BYTE PTR [rax],ah
   14000e4a8:	cmp    al,0x64
   14000e4aa:	jo     0x14000e515
   14000e4ac:	rex.B ja 0x14000e510
   14000e4af:	jb     0x14000e516
   14000e4b1:	and    BYTE PTR [rax],ah
   14000e4b3:	js     0x14000e522
   14000e4b5:	ins    BYTE PTR es:[rdi],dx
   14000e4b6:	outs   dx,BYTE PTR ds:[rsi]
   14000e4b7:	jae    0x14000e4f6
   14000e4b9:	and    ch,BYTE PTR [rax+0x74]
   14000e4bc:	je     0x14000e52e
   14000e4be:	cmp    ch,BYTE PTR [rdi]
   14000e4c0:	(bad)  
   14000e4c1:	jae    0x14000e526
   14000e4c3:	push   0x73616d65
   14000e4c8:	cs ins DWORD PTR es:[rdi],dx
   14000e4ca:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000e4d1:	je     0x14000e501
   14000e4d3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e4d6:	(bad)  
   14000e4d7:	push   rbx
   14000e4d8:	rex.WRB
   14000e4d9:	rex.WB (bad) 
   14000e4db:	xor    dh,BYTE PTR [rax]
   14000e4dd:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a3c12
   14000e4e3:	outs   dx,DWORD PTR fs:[rsi]
   14000e4e5:	ja     0x14000e55a
   14000e4e7:	push   rbx
   14000e4e8:	gs je  0x14000e55f
   14000e4eb:	imul   ebp,DWORD PTR [rsi+0x67],0x503e2273
   14000e4f2:	gs jb  0x14000e515
   14000e4f5:	ins    DWORD PTR es:[rdi],dx
   14000e4f6:	outs   dx,DWORD PTR ds:[rsi]
   14000e4f7:	outs   dx,BYTE PTR ds:[rsi]
   14000e4f8:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x70642f3c
   14000e500:	imul   eax,DWORD PTR [rcx+0x77],0x3e657261
   14000e507:	or     eax,0x2020200a
   14000e50c:	and    BYTE PTR [rdi+rbp*1],bh
   14000e50f:	ja     0x14000e57a
   14000e511:	outs   dx,BYTE PTR ds:[rsi]
   14000e512:	outs   dx,DWORD PTR fs:[rsi]
   14000e514:	ja     0x14000e589
   14000e516:	push   rbx
   14000e517:	gs je  0x14000e58e
   14000e51a:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000e521:	cmp    al,0x2f
   14000e523:	(bad)  
   14000e524:	jo     0x14000e596
   14000e526:	ins    BYTE PTR es:[rdi],dx
   14000e527:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000e52e:	ds or  eax,0x612f3c0a
   14000e534:	jae    0x14000e5a9
   14000e536:	gs ins DWORD PTR es:[rdi],dx
   14000e538:	(bad)  
   14000e539:	ins    BYTE PTR es:[rdi],dx
   14000e53a:	jns    0x14000e57a
   14000e53c:	add    BYTE PTR [rax],al
   14000e53e:	add    BYTE PTR [rax],al
   14000e540:	xchg   esp,eax
   14000e541:	add    esi,DWORD PTR [rax+rax*1]
   14000e544:	add    BYTE PTR [rax],al
   14000e546:	push   rsi
   14000e547:	add    BYTE PTR [rbx+0x0],dl
   14000e54a:	pop    rdi
   14000e54b:	add    BYTE PTR [rsi+0x0],dl
   14000e54e:	add    BYTE PTR [r10+0x0],r10b
   14000e552:	push   rbx
   14000e553:	add    BYTE PTR [rcx+0x0],cl
   14000e556:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000e55a:	pop    rdi
   14000e55b:	add    BYTE PTR [rcx+0x0],cl
   14000e55e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000e562:	rex.WRXB add BYTE PTR [r8],r8b
   14000e565:	add    BYTE PTR [rax],al
   14000e567:	add    BYTE PTR [rbp+0xfeef04],bh
   14000e56d:	add    BYTE PTR [rcx],al
   14000e56f:	add    BYTE PTR [rax],al
   14000e571:	add    BYTE PTR [rdx],cl
   14000e573:	add    BYTE PTR [rax],al
   14000e575:	add    BYTE PTR [rax],bpl
   14000e578:	add    BYTE PTR [rax],al
   14000e57a:	or     al,BYTE PTR [rax]
   14000e57c:	add    BYTE PTR [rax+0x0],al
   14000e57f:	sub    BYTE PTR [rdi],bh
   14000e581:	add    BYTE PTR [rax],al
   14000e583:	add    BYTE PTR [rax],al
   14000e585:	add    BYTE PTR [rax],al
   14000e587:	add    BYTE PTR [rax+rax*1],al
   14000e58a:	add    al,0x0
   14000e58c:	add    DWORD PTR [rax],eax
	...
   14000e59a:	add    BYTE PTR [rax],al
   14000e59c:	repnz add al,BYTE PTR [rax]
   14000e59f:	add    BYTE PTR [rcx],al
   14000e5a1:	add    BYTE PTR [rbx+0x0],dl
   14000e5a4:	je     0x14000e5a6
   14000e5a6:	jb     0x14000e5a8
   14000e5a8:	imul   eax,DWORD PTR [rax],0x67006e
   14000e5ae:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e5b2:	ins    BYTE PTR es:[rdi],dx
   14000e5b3:	add    BYTE PTR [rbp+0x0],ah
   14000e5b6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e5ba:	data16 add BYTE PTR [rdi+0x0],ch
   14000e5be:	add    BYTE PTR [rax],al
   14000e5c0:	(bad)  
   14000e5c1:	add    al,BYTE PTR [rax]
   14000e5c3:	add    BYTE PTR [rcx],al
   14000e5c5:	add    BYTE PTR [rax],dh
   14000e5c7:	add    BYTE PTR [rax+rax*1],dh
   14000e5ca:	xor    BYTE PTR [rax],al
   14000e5cc:	cmp    DWORD PTR [rax],eax
   14000e5ce:	xor    BYTE PTR [rax],al
   14000e5d0:	xor    al,0x0
   14000e5d2:	rex.X add BYTE PTR [rax],sil
   14000e5d5:	add    BYTE PTR [rax],al
   14000e5d7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000e5db:	add    BYTE PTR [rcx],al
   14000e5dd:	add    BYTE PTR [rbx+0x0],al
   14000e5e0:	outs   dx,DWORD PTR ds:[rsi]
   14000e5e1:	add    BYTE PTR [rbp+0x0],ch
   14000e5e4:	jo     0x14000e5e6
   14000e5e6:	(bad)  
   14000e5e7:	add    BYTE PTR [rsi+0x0],ch
   14000e5ea:	jns    0x14000e5ec
   14000e5ec:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e5f0:	ins    DWORD PTR es:[rdi],dx
   14000e5f1:	add    BYTE PTR [rbp+0x0],ah
   14000e5f4:	add    BYTE PTR [rax],al
   14000e5f6:	add    BYTE PTR [rax],al
   14000e5f8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e5fc:	movsxd eax,DWORD PTR [rax]
   14000e5fe:	jb     0x14000e600
   14000e600:	outs   dx,DWORD PTR ds:[rsi]
   14000e601:	add    BYTE PTR [rbx+0x0],dh
   14000e604:	outs   dx,DWORD PTR ds:[rsi]
   14000e605:	add    BYTE PTR [rsi+0x0],ah
   14000e608:	je     0x14000e60a
   14000e60a:	and    BYTE PTR [rax],al
   14000e60c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e610:	jb     0x14000e612
   14000e612:	jo     0x14000e614
   14000e614:	outs   dx,DWORD PTR ds:[rsi]
   14000e615:	add    BYTE PTR [rdx+0x0],dh
   14000e618:	(bad)  
   14000e619:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e61d:	add    BYTE PTR [rdi+0x0],ch
   14000e620:	outs   dx,BYTE PTR ds:[rsi]
   14000e621:	add    BYTE PTR [rax],al
   14000e623:	add    BYTE PTR [rax+0x0],dl
   14000e626:	adc    al,0x0
   14000e628:	add    DWORD PTR [rax],eax
   14000e62a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e62e:	ins    BYTE PTR es:[rdi],dx
   14000e62f:	add    BYTE PTR [rbp+0x0],ah
   14000e632:	add    BYTE PTR [rbp+0x0],r12b
   14000e636:	jae    0x14000e638
   14000e638:	movsxd eax,DWORD PTR [rax]
   14000e63a:	jb     0x14000e63c
   14000e63c:	imul   eax,DWORD PTR [rax],0x740070
   14000e642:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e648:	add    BYTE PTR [rax],al
   14000e64a:	add    BYTE PTR [rax],al
   14000e64c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e650:	ins    BYTE PTR es:[rdi],dx
   14000e651:	add    BYTE PTR [rbp+0x0],ah
   14000e654:	and    BYTE PTR [rax],al
   14000e656:	push   rax
   14000e657:	add    BYTE PTR [rcx+0x0],ch
   14000e65a:	movsxd eax,DWORD PTR [rax]
   14000e65c:	imul   eax,DWORD PTR [rax],0x65
   14000e65f:	add    BYTE PTR [rdx+0x0],dh
   14000e662:	and    BYTE PTR [rax],al
   14000e664:	push   rbp
   14000e665:	add    BYTE PTR [rcx+0x0],cl
   14000e668:	and    BYTE PTR [rax],al
   14000e66a:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000e66e:	jae    0x14000e670
   14000e670:	je     0x14000e672
   14000e672:	add    BYTE PTR [rax],al
   14000e674:	data16 add BYTE PTR [rbx],ah
   14000e677:	add    BYTE PTR [rcx],al
   14000e679:	add    BYTE PTR [rsi+0x0],al
   14000e67c:	imul   eax,DWORD PTR [rax],0x65006c
   14000e682:	push   rsi
   14000e683:	add    BYTE PTR [rbp+0x0],ah
   14000e686:	jb     0x14000e688
   14000e688:	jae    0x14000e68a
   14000e68a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e690:	add    BYTE PTR [rax],al
   14000e692:	add    BYTE PTR [rax],al
   14000e694:	xor    DWORD PTR [rax],eax
   14000e696:	xor    BYTE PTR [rax],al
   14000e698:	add    BYTE PTR cs:[rax],dh
   14000e69b:	add    BYTE PTR [rsi],ch
   14000e69d:	add    BYTE PTR [rcx],dh
   14000e69f:	add    BYTE PTR [rax],dh
   14000e6a1:	add    BYTE PTR [rdx],dh
   14000e6a3:	add    BYTE PTR [rax+rax*1],dh
   14000e6a6:	xor    BYTE PTR [rax],al
   14000e6a8:	add    BYTE PTR cs:[rcx],dh
   14000e6ab:	add    BYTE PTR [rsi],dh
   14000e6ad:	add    BYTE PTR [rbx],dh
   14000e6af:	add    BYTE PTR [rax],bh
   14000e6b1:	add    BYTE PTR [rax+rax*1],dh
   14000e6b4:	and    BYTE PTR [rax],al
   14000e6b6:	sub    BYTE PTR [rax],al
   14000e6b8:	je     0x14000e6ba
   14000e6ba:	push   0x2e003100
   14000e6bf:	add    BYTE PTR [rcx],dh
   14000e6c1:	add    BYTE PTR [rip+0x37003000],dh        # 0x1770116c7
   14000e6c7:	add    BYTE PTR [rax],dh
   14000e6c9:	add    BYTE PTR [rcx],bh
   14000e6cb:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770117d1
   14000e6d1:	add    BYTE PTR [rax],dh
   14000e6d3:	add    BYTE PTR [rax],dh
   14000e6d5:	add    BYTE PTR [rcx],ch
   14000e6d7:	add    BYTE PTR [rax],al
   14000e6d9:	add    BYTE PTR [rax],al
   14000e6db:	add    BYTE PTR [rsi],dh
   14000e6dd:	add    BYTE PTR [rbx],cl
   14000e6df:	add    BYTE PTR [rcx],al
   14000e6e1:	add    BYTE PTR [rcx+0x0],cl
   14000e6e4:	outs   dx,BYTE PTR ds:[rsi]
   14000e6e5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000e6e9:	add    BYTE PTR [rdx+0x0],dh
   14000e6ec:	outs   dx,BYTE PTR ds:[rsi]
   14000e6ed:	add    BYTE PTR [rcx+0x0],ah
   14000e6f0:	ins    BYTE PTR es:[rdi],dx
   14000e6f1:	add    BYTE PTR [rsi+0x0],cl
   14000e6f4:	(bad)  
   14000e6f5:	add    BYTE PTR [rbp+0x0],ch
   14000e6f8:	add    BYTE PTR gs:[rax],al
   14000e6fb:	add    BYTE PTR [rax+0x0],dl
   14000e6fe:	imul   eax,DWORD PTR [rax],0x6b0063
   14000e704:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e708:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000e70c:	jae    0x14000e70e
   14000e70e:	je     0x14000e710
   14000e710:	add    BYTE PTR [rax],al
   14000e712:	add    BYTE PTR [rax],al
   14000e714:	add    BYTE PTR [rax],0x2e
   14000e717:	add    BYTE PTR [rcx],al
   14000e719:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000e71d:	add    BYTE PTR [rdi+0x0],ah
   14000e720:	(bad)  
   14000e721:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000e725:	add    BYTE PTR [rdi+0x0],ch
   14000e728:	jo     0x14000e72a
   14000e72a:	jns    0x14000e72c
   14000e72c:	jb     0x14000e72e
   14000e72e:	imul   eax,DWORD PTR [rax],0x680067
   14000e734:	je     0x14000e736
   14000e736:	add    BYTE PTR [rax],al
   14000e738:	test   eax,0x4d002000
   14000e73d:	add    BYTE PTR [rcx+0x0],ch
   14000e740:	movsxd eax,DWORD PTR [rax]
   14000e742:	jb     0x14000e744
   14000e744:	outs   dx,DWORD PTR ds:[rsi]
   14000e745:	add    BYTE PTR [rbx+0x0],dh
   14000e748:	outs   dx,DWORD PTR ds:[rsi]
   14000e749:	add    BYTE PTR [rsi+0x0],ah
   14000e74c:	je     0x14000e74e
   14000e74e:	and    BYTE PTR [rax],al
   14000e750:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e754:	jb     0x14000e756
   14000e756:	jo     0x14000e758
   14000e758:	outs   dx,DWORD PTR ds:[rsi]
   14000e759:	add    BYTE PTR [rdx+0x0],dh
   14000e75c:	(bad)  
   14000e75d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e761:	add    BYTE PTR [rdi+0x0],ch
   14000e764:	outs   dx,BYTE PTR ds:[rsi]
   14000e765:	add    BYTE PTR [rsi],ch
   14000e767:	add    BYTE PTR [rax],ah
   14000e769:	add    BYTE PTR [rcx+0x0],al
   14000e76c:	ins    BYTE PTR es:[rdi],dx
   14000e76d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e771:	add    BYTE PTR [rdx+0x0],dh
   14000e774:	imul   eax,DWORD PTR [rax],0x680067
   14000e77a:	je     0x14000e77c
   14000e77c:	jae    0x14000e77e
   14000e77e:	and    BYTE PTR [rax],al
   14000e780:	jb     0x14000e782
   14000e782:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e786:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e78a:	jbe    0x14000e78c
   14000e78c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000e791:	add    BYTE PTR [rax],al
   14000e793:	add    BYTE PTR [rsi+0x0],al
   14000e796:	sldt   WORD PTR [rcx]
   14000e799:	add    BYTE PTR [rdi+0x0],cl
   14000e79c:	jb     0x14000e79e
   14000e79e:	imul   eax,DWORD PTR [rax],0x690067
   14000e7a4:	outs   dx,BYTE PTR ds:[rsi]
   14000e7a5:	add    BYTE PTR [rcx+0x0],ah
   14000e7a8:	ins    BYTE PTR es:[rdi],dx
   14000e7a9:	add    BYTE PTR [rsi+0x0],al
   14000e7ac:	imul   eax,DWORD PTR [rax],0x65006c
   14000e7b2:	outs   dx,BYTE PTR ds:[rsi]
   14000e7b3:	add    BYTE PTR [rcx+0x0],ah
   14000e7b6:	ins    DWORD PTR es:[rdi],dx
   14000e7b7:	add    BYTE PTR [rbp+0x0],ah
   14000e7ba:	add    BYTE PTR [rax],al
   14000e7bc:	push   rax
   14000e7bd:	add    BYTE PTR [rcx+0x0],ch
   14000e7c0:	movsxd eax,DWORD PTR [rax]
   14000e7c2:	imul   eax,DWORD PTR [rax],0x65
   14000e7c5:	add    BYTE PTR [rdx+0x0],dh
   14000e7c8:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000e7cc:	jae    0x14000e7ce
   14000e7ce:	je     0x14000e7d0
   14000e7d0:	add    BYTE PTR cs:[rbp+0x0],ah
   14000e7d4:	js     0x14000e7d6
   14000e7d6:	add    BYTE PTR gs:[rax],al
   14000e7d9:	add    BYTE PTR [rax],al
   14000e7db:	add    BYTE PTR [rdx+0x0],ch
   14000e7de:	and    eax,0x50000100
   14000e7e3:	add    BYTE PTR [rdx+0x0],dh
   14000e7e6:	outs   dx,DWORD PTR ds:[rsi]
   14000e7e7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e7eb:	add    BYTE PTR [rbx+0x0],ah
   14000e7ee:	je     0x14000e7f0
   14000e7f0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e7f4:	ins    DWORD PTR es:[rdi],dx
   14000e7f5:	add    BYTE PTR [rbp+0x0],ah
   14000e7f8:	add    BYTE PTR [rax],al
   14000e7fa:	add    BYTE PTR [rax],al
   14000e7fc:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e800:	movsxd eax,DWORD PTR [rax]
   14000e802:	jb     0x14000e804
   14000e804:	outs   dx,DWORD PTR ds:[rsi]
   14000e805:	add    BYTE PTR [rbx+0x0],dh
   14000e808:	outs   dx,DWORD PTR ds:[rsi]
   14000e809:	add    BYTE PTR [rsi+0x0],ah
   14000e80c:	je     0x14000e80e
   14000e80e:	scas   al,BYTE PTR es:[rdi]
   14000e80f:	add    BYTE PTR [rax],ah
   14000e811:	add    BYTE PTR [rdi+0x0],dl
   14000e814:	imul   eax,DWORD PTR [rax],0x64006e
   14000e81a:	outs   dx,DWORD PTR ds:[rsi]
   14000e81b:	add    BYTE PTR [rdi+0x0],dh
   14000e81e:	jae    0x14000e820
   14000e820:	scas   al,BYTE PTR es:[rdi]
   14000e821:	add    BYTE PTR [rax],ah
   14000e823:	add    BYTE PTR [rdi+0x0],cl
   14000e826:	jo     0x14000e828
   14000e828:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e82c:	(bad)  
   14000e82d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e831:	add    BYTE PTR [rsi+0x0],ch
   14000e834:	add    BYTE PTR [eax],ah
   14000e837:	add    BYTE PTR [rbx+0x0],dl
   14000e83a:	jns    0x14000e83c
   14000e83c:	jae    0x14000e83e
   14000e83e:	je     0x14000e840
   14000e840:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e844:	add    BYTE PTR [rax],al
   14000e846:	add    BYTE PTR [rax],al
   14000e848:	rex.RX add BYTE PTR [rcx],r10b
   14000e84b:	add    BYTE PTR [rcx],al
   14000e84d:	add    BYTE PTR [rax+0x0],dl
   14000e850:	jb     0x14000e852
   14000e852:	outs   dx,DWORD PTR ds:[rsi]
   14000e853:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e857:	add    BYTE PTR [rbx+0x0],ah
   14000e85a:	je     0x14000e85c
   14000e85c:	push   rsi
   14000e85d:	add    BYTE PTR [rbp+0x0],ah
   14000e860:	jb     0x14000e862
   14000e862:	jae    0x14000e864
   14000e864:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e86a:	add    BYTE PTR [rax],al
   14000e86c:	xor    DWORD PTR [rax],eax
   14000e86e:	xor    BYTE PTR [rax],al
   14000e870:	add    BYTE PTR cs:[rax],dh
   14000e873:	add    BYTE PTR [rsi],ch
   14000e875:	add    BYTE PTR [rcx],dh
   14000e877:	add    BYTE PTR [rax],dh
   14000e879:	add    BYTE PTR [rdx],dh
   14000e87b:	add    BYTE PTR [rax+rax*1],dh
   14000e87e:	xor    BYTE PTR [rax],al
   14000e880:	add    BYTE PTR cs:[rcx],dh
   14000e883:	add    BYTE PTR [rsi],dh
   14000e885:	add    BYTE PTR [rbx],dh
   14000e887:	add    BYTE PTR [rax],bh
   14000e889:	add    BYTE PTR [rax+rax*1],dh
   14000e88c:	add    BYTE PTR [rax],al
   14000e88e:	add    BYTE PTR [rax],al
   14000e890:	add    BYTE PTR [rax],r8b
   14000e893:	add    BYTE PTR [rcx],al
   14000e895:	add    BYTE PTR [rsi+0x0],dl
   14000e898:	(bad)  
   14000e899:	add    BYTE PTR [rdx+0x0],dh
   14000e89c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e8a0:	ins    BYTE PTR es:[rdi],dx
   14000e8a1:	add    BYTE PTR [rbp+0x0],ah
   14000e8a4:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e8a8:	data16 add BYTE PTR [rdi+0x0],ch
   14000e8ac:	add    BYTE PTR [rax],al
   14000e8ae:	add    BYTE PTR [rax],al
   14000e8b0:	and    al,0x0
   14000e8b2:	add    al,0x0
   14000e8b4:	add    BYTE PTR [rax],al
   14000e8b6:	push   rsp
   14000e8b7:	add    BYTE PTR [rdx+0x0],dh
   14000e8ba:	(bad)  
   14000e8bb:	add    BYTE PTR [rsi+0x0],ch
   14000e8be:	jae    0x14000e8c0
   14000e8c0:	ins    BYTE PTR es:[rdi],dx
   14000e8c1:	add    BYTE PTR [rcx+0x0],ah
   14000e8c4:	je     0x14000e8c6
   14000e8c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e8cc:	add    BYTE PTR [rax],al
   14000e8ce:	add    BYTE PTR [rax],al
   14000e8d0:	or     DWORD PTR [rax+rsi*4],eax
   14000e8d3:	add    al,0x0
   14000e8d5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000f000 <.reloc>:
   14000f000:	add    BYTE PTR [rax+0xec0000],al
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	adc    BYTE PTR [rbx-0x5cd75ce8],ah
   14000f00e:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14000f014:	movabs ds:0xa5a0a598a368a360,rax
   14000f01e:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   14000f024:	call   0x138a6e0ce
   14000f029:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f02a:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14000f030:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14000f036:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14000f03c:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f03e:	push   0x78a670a6
   14000f043:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f044:	and    BYTE PTR [rsi-0x596f5978],0xc0
   14000f04b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f04c:	enter  0xd0a6,0xa6
   14000f050:	fsub   DWORD PTR [rsi-0x59175920]
   14000f056:	sub    BYTE PTR [rdi-0x58b758c8],ah
   14000f05c:	pop    rax
   14000f05d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f05e:	push   0xffffffff88a778a7
   14000f063:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f064:	cwde   
   14000f065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f066:	test   al,0xa7
   14000f068:	mov    eax,0xd8a7c8a7
   14000f06d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f06e:	call   0x148a8e91a
   14000f073:	test   al,0x18
   14000f075:	test   al,0x28
   14000f077:	test   al,0x38
   14000f079:	test   al,0x48
   14000f07b:	test   al,0x58
   14000f07d:	test   al,0x68
   14000f07f:	test   al,0x78
   14000f081:	test   al,0x88
   14000f083:	test   al,0x98
   14000f085:	test   al,0xa8
   14000f087:	test   al,0xb8
   14000f089:	test   al,0xc8
   14000f08b:	test   al,0xd8
   14000f08d:	test   al,0xe8
   14000f08f:	test   al,0xf8
   14000f091:	test   al,0x8
   14000f093:	test   eax,0xa928a918
   14000f098:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   14000f09e:	push   0xffffffff88a978a9
   14000f0a3:	test   eax,0xa9a8a998
   14000f0a8:	mov    eax,0xd8a9c8a9
   14000f0ad:	test   eax,0xa9f8a9e8
   14000f0b2:	or     BYTE PTR [rdx-0x55d755e8],ch
   14000f0b8:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   14000f0be:	push   0xffffffff88aa78aa
   14000f0c3:	stos   BYTE PTR es:[rdi],al
   14000f0c4:	cwde   
   14000f0c5:	stos   BYTE PTR es:[rdi],al
   14000f0c6:	test   al,0xaa
   14000f0c8:	mov    eax,0xd8aac8aa
   14000f0cd:	stos   BYTE PTR es:[rdi],al
   14000f0ce:	call   0x148abe97d
   14000f0d3:	stos   DWORD PTR es:[rdi],eax
   14000f0d4:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   14000f0da:	stos   QWORD PTR es:[rdi],rax
   14000f0dc:	pop    rax
   14000f0dd:	stos   DWORD PTR es:[rdi],eax
   14000f0de:	push   0xffffffff88ab78ab
   14000f0e3:	stos   DWORD PTR es:[rdi],eax
   14000f0e4:	cwde   
   14000f0e5:	stos   DWORD PTR es:[rdi],eax
   14000f0e6:	test   al,0xab
   14000f0e8:	mov    eax,0xab
   14000f0ed:	nop
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	cld    
   14000f0f1:	add    DWORD PTR [rax],eax
   14000f0f3:	add    BYTE PTR [rax],bl
   14000f0f5:	movabs al,ds:0xa058a048a038a028
   14000f0fe:	push   0xffffffff88a078a0
   14000f103:	movabs al,ds:0xa0c8a0b8a0a8a098
   14000f10c:	fsub   DWORD PTR [rax-0x5f075f18]
   14000f112:	or     BYTE PTR [rcx-0x5ed75ee8],ah
   14000f118:	cmp    BYTE PTR [rcx-0x5ea75eb8],ah
   14000f11e:	push   0xffffffff88a178a1
   14000f123:	movabs eax,ds:0xa1c8a1b8a1a8a198
   14000f12c:	fsub   DWORD PTR [rcx-0x5e075e18]
   14000f132:	or     BYTE PTR [rdx-0x5dd75de8],ah
   14000f138:	cmp    BYTE PTR [rdx-0x5da75db8],ah
   14000f13e:	push   0xffffffff88a278a2
   14000f143:	movabs ds:0xa2c8a2b8a2a8a298,al
   14000f14c:	fsub   DWORD PTR [rdx-0x5d075d18]
   14000f152:	or     BYTE PTR [rbx-0x5cd75ce8],ah
   14000f158:	cmp    BYTE PTR [rbx-0x5ca75cb8],ah
   14000f15e:	push   0xffffffff88a378a3
   14000f163:	movabs ds:0xa3c8a3b8a3a8a398,eax
   14000f16c:	fsub   DWORD PTR [rbx-0x5c075c18]
   14000f172:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   14000f179:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f17a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f17c:	pop    rax
   14000f17d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f17e:	push   0xffffffff88a478a4
   14000f183:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f184:	cwde   
   14000f185:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f186:	test   al,0xa4
   14000f188:	mov    eax,0xd8a4c8a4
   14000f18d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f18e:	call   0x158ab0237
   14000f193:	stos   BYTE PTR es:[rdi],al
   14000f194:	and    BYTE PTR [rdx-0x55cf55d8],ch
   14000f19a:	cmp    BYTE PTR [rdx-0x559755c0],ch
   14000f1a0:	jo     0x14000f14c
   14000f1a2:	js     0x14000f14e
   14000f1a4:	sub    BYTE PTR [rdx-0x556f5578],0xa8
   14000f1ab:	stos   BYTE PTR es:[rdi],al
   14000f1ac:	mov    al,0xaa
   14000f1ae:	mov    eax,0xc8aac0aa
   14000f1b3:	stos   BYTE PTR es:[rdi],al
   14000f1b4:	shr    BYTE PTR [rdx-0x55075510],1
   14000f1ba:	or     BYTE PTR [rbx-0x54df54e8],ch
   14000f1c0:	sub    BYTE PTR [rbx-0x54c754d0],ch
   14000f1c6:	rex stos DWORD PTR es:[rdi],eax
   14000f1c8:	stos   QWORD PTR es:[rdi],rax
   14000f1ca:	push   rax
   14000f1cb:	stos   DWORD PTR es:[rdi],eax
   14000f1cc:	pop    rax
   14000f1cd:	stos   DWORD PTR es:[rdi],eax
   14000f1ce:	(bad)  
   14000f1cf:	stos   DWORD PTR es:[rdi],eax
   14000f1d0:	push   0x78ab70ab
   14000f1d5:	stos   DWORD PTR es:[rdi],eax
   14000f1d6:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14000f1dd:	stos   DWORD PTR es:[rdi],eax
   14000f1de:	movabs al,ds:0xd0abc0abb0aba8ab
   14000f1e7:	stos   DWORD PTR es:[rdi],eax
   14000f1e8:	fsubr  DWORD PTR [rbx-0x54175420]
   14000f1ee:	lock stos DWORD PTR es:[rdi],eax
   14000f1f0:	clc    
   14000f1f1:	stos   DWORD PTR es:[rdi],eax
   14000f1f2:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14000f1f9:	lods   al,BYTE PTR ds:[rsi]
   14000f1fa:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14000f201:	lods   al,BYTE PTR ds:[rsi]
   14000f202:	lods   al,BYTE PTR ds:[rsi]
   14000f204:	rex.W lods al,BYTE PTR ds:[rsi]
   14000f206:	push   rax
   14000f207:	lods   al,BYTE PTR ds:[rsi]
   14000f208:	pop    rax
   14000f209:	lods   al,BYTE PTR ds:[rsi]
   14000f20a:	push   0xffffffff80ac78ac
   14000f20f:	lods   al,BYTE PTR ds:[rsi]
   14000f210:	mov    BYTE PTR [rax+rdx*4-0x5f536754],ch
   14000f217:	lods   al,BYTE PTR ds:[rsi]
   14000f218:	test   al,0xac
   14000f21a:	mov    al,0xac
   14000f21c:	mov    eax,0xc8acc0ac
   14000f221:	lods   al,BYTE PTR ds:[rsi]
   14000f222:	shr    BYTE PTR [rax+rbx*8-0x17531f54],1
   14000f229:	lods   al,BYTE PTR ds:[rsi]
   14000f22a:	lock lods al,BYTE PTR ds:[rsi]
   14000f22c:	clc    
   14000f22d:	lods   al,BYTE PTR ds:[rsi]
   14000f22e:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14000f234:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14000f23a:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14000f240:	lods   rax,QWORD PTR ds:[rsi]
   14000f242:	push   rax
   14000f243:	lods   eax,DWORD PTR ds:[rsi]
   14000f244:	pop    rax
   14000f245:	lods   eax,DWORD PTR ds:[rsi]
   14000f246:	(bad)  
   14000f247:	lods   eax,DWORD PTR ds:[rsi]
   14000f248:	push   0x78ad70ad
   14000f24d:	lods   eax,DWORD PTR ds:[rsi]
   14000f24e:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14000f255:	lods   eax,DWORD PTR ds:[rsi]
   14000f256:	movabs al,ds:0xc0adb8adb0ada8ad
   14000f25f:	lods   eax,DWORD PTR ds:[rsi]
   14000f260:	enter  0xd0ad,0xad
   14000f264:	fsubr  DWORD PTR [rbp-0x52175220]
   14000f26a:	lock lods eax,DWORD PTR ds:[rsi]
   14000f26c:	clc    
   14000f26d:	lods   eax,DWORD PTR ds:[rsi]
   14000f26e:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14000f274:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14000f27a:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14000f280:	rex.W scas al,BYTE PTR es:[rdi]
   14000f282:	push   rax
   14000f283:	scas   al,BYTE PTR es:[rdi]
   14000f284:	pop    rax
   14000f285:	scas   al,BYTE PTR es:[rdi]
   14000f286:	(bad)  
   14000f287:	scas   al,BYTE PTR es:[rdi]
   14000f288:	push   0x78ae70ae
   14000f28d:	scas   al,BYTE PTR es:[rdi]
   14000f28e:	sub    BYTE PTR [rsi-0x516f5178],0xa0
   14000f295:	scas   al,BYTE PTR es:[rdi]
   14000f296:	mov    al,0xae
   14000f298:	mov    eax,0xc8aec0ae
   14000f29d:	scas   al,BYTE PTR es:[rdi]
   14000f29e:	shr    BYTE PTR [rsi-0x511f5128],1
   14000f2a4:	call   0x138afe357
   14000f2a9:	scas   al,BYTE PTR es:[rdi]
   14000f2aa:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14000f2b0:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14000f2b6:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14000f2bc:	scas   rax,QWORD PTR es:[rdi]
   14000f2be:	push   rax
   14000f2bf:	scas   eax,DWORD PTR es:[rdi]
   14000f2c0:	pop    rax
   14000f2c1:	scas   eax,DWORD PTR es:[rdi]
   14000f2c2:	(bad)  
   14000f2c3:	scas   eax,DWORD PTR es:[rdi]
   14000f2c4:	push   0x78af70af
   14000f2c9:	scas   eax,DWORD PTR es:[rdi]
   14000f2ca:	mov    BYTE PTR [rdi-0x505f5068],ch
   14000f2d0:	test   al,0xaf
   14000f2d2:	mov    al,0xaf
   14000f2d4:	mov    eax,0xc8afc0af
   14000f2d9:	scas   eax,DWORD PTR es:[rdi]
   14000f2da:	shr    BYTE PTR [rdi-0x501f5028],1
   14000f2e0:	call   0x138b0e394
   14000f2e5:	scas   eax,DWORD PTR es:[rdi]
   14000f2e6:	add    BYTE PTR [rax],al
   14000f2e8:	add    BYTE PTR [rax+0x9c0000],ah
   14000f2ee:	add    BYTE PTR [rax],al
   14000f2f0:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14000f2f6:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   14000f2fc:	xor    BYTE PTR [rax-0x5fbf5fc8],ah
   14000f302:	rex.W movabs al,ds:0xa068a060a058a050
   14000f30c:	jo     0x14000f2ae
   14000f30e:	js     0x14000f2b0
   14000f310:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14000f317:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14000f320:	shl    BYTE PTR [rax-0x5f2f5f38],0xe0
   14000f327:	movabs al,ds:0xa108a100a0f8a0f0
   14000f330:	adc    BYTE PTR [rcx-0x5edf5ee8],ah
   14000f336:	sub    BYTE PTR [rcx-0x5ec75ed0],ah
   14000f33c:	rex movabs eax,ds:0xa160a158a150a148
   14000f346:	push   0x78a170a1
   14000f34b:	movabs eax,ds:0xa1a8a1a0a198a188
   14000f354:	mov    al,0xa1
   14000f356:	mov    eax,0xc8a1c0a1
   14000f35b:	movabs eax,ds:0xa1e8a1e0a1d8a1d0
   14000f364:	lock movabs eax,ds:0xa210a208a200a1f8
   14000f36e:	sbb    BYTE PTR [rbp-0x5ac75ad0],ah
   14000f374:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f376:	js     0x14000f327
   14000f378:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14000f37f:	scas   eax,DWORD PTR es:[rdi]
   14000f380:	movabs al,ds:0x180000c000afa8af
   14000f389:	add    BYTE PTR [rax],al
   14000f38b:	add    BYTE PTR [rax],ah
   14000f38d:	movabs al,ds:0xa060a038a030a028
   14000f396:	.byte 0x80
   14000f397:	.byte 0xa0
   14000f398:	test   al,0xa0
   14000f39a:	.byte 0xd0
   14000f39b:	.byte 0xa0
