
1f7a2d419df3b95ade7f400446abeefaf3c872e8e6033a7e6ac413b17addbaf4.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	push   rdi
   14000100e:	sub    rsp,0x40
   140001012:	mov    edx,0x2
   140001017:	xor    ecx,ecx
   140001019:	call   QWORD PTR [rip+0x4fe1]        # 0x140006000
   14000101f:	and    DWORD PTR [rsp+0x30],0x0
   140001024:	lea    rax,[rsp+0x38]
   140001029:	and    QWORD PTR [rsp+0x38],0x0
   14000102f:	lea    r9,[rip+0x2292]        # 0x1400032c8
   140001036:	xor    edx,edx
   140001038:	mov    QWORD PTR [rsp+0x20],rax
   14000103d:	lea    rcx,[rip+0x2294]        # 0x1400032d8
   140001044:	lea    r8d,[rdx+0x1]
   140001048:	call   QWORD PTR [rip+0x4fc2]        # 0x140006010
   14000104e:	test   eax,eax
   140001050:	js     0x14000108b
   140001052:	mov    rdi,QWORD PTR [rsp+0x38]
   140001057:	mov    rax,QWORD PTR [rdi]
   14000105a:	mov    rbx,QWORD PTR [rax+0x18]
   14000105e:	mov    rcx,rbx
   140001061:	call   QWORD PTR [rip+0x2109]        # 0x140003170
   140001067:	lea    rdx,[rsp+0x30]
   14000106c:	mov    rcx,rdi
   14000106f:	call   rbx
   140001071:	mov    rdi,QWORD PTR [rsp+0x38]
   140001076:	mov    rax,QWORD PTR [rdi]
   140001079:	mov    rbx,QWORD PTR [rax+0x10]
   14000107d:	mov    rcx,rbx
   140001080:	call   QWORD PTR [rip+0x20ea]        # 0x140003170
   140001086:	mov    rcx,rdi
   140001089:	call   rbx
   14000108b:	cmp    DWORD PTR [rsp+0x30],0x0
   140001090:	jne    0x1400010e6
   140001092:	xor    edx,edx
   140001094:	lea    rcx,[rip+0x2215]        # 0x1400032b0
   14000109b:	call   QWORD PTR [rip+0x1f67]        # 0x140003008
   1400010a1:	lea    rcx,[rip+0x2210]        # 0x1400032b8
   1400010a8:	call   QWORD PTR [rip+0x1f62]        # 0x140003010
   1400010ae:	mov    rbx,rax
   1400010b1:	test   rax,rax
   1400010b4:	je     0x1400010e6
   1400010b6:	mov    edx,0xbbb
   1400010bb:	mov    rcx,rax
   1400010be:	call   QWORD PTR [rip+0x1f54]        # 0x140003018
   1400010c4:	mov    rdi,rax
   1400010c7:	test   rax,rax
   1400010ca:	je     0x1400010e6
   1400010cc:	mov    rcx,rax
   1400010cf:	call   QWORD PTR [rip+0x209b]        # 0x140003170
   1400010d5:	call   rdi
   1400010d7:	mov    rcx,rbx
   1400010da:	call   QWORD PTR [rip+0x1f20]        # 0x140003000
   1400010e0:	call   QWORD PTR [rip+0x4f22]        # 0x140006008
   1400010e6:	xor    eax,eax
   1400010e8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400010ed:	add    rsp,0x40
   1400010f1:	pop    rdi
   1400010f2:	ret    
   1400010f3:	int3   
   1400010f4:	int3   
   1400010f5:	int3   
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	mov    QWORD PTR [rsp+0x8],rbx
   140001101:	push   rdi
   140001102:	sub    rsp,0x80
   140001109:	mov    rdi,rdx
   14000110c:	mov    r8d,0x30
   140001112:	lea    rdx,[rsp+0x20]
   140001117:	mov    rbx,rcx
   14000111a:	call   QWORD PTR [rip+0x1f40]        # 0x140003060
   140001120:	test   rax,rax
   140001123:	jne    0x14000112a
   140001125:	lea    ecx,[rax+0x19]
   140001128:	int    0x29
   14000112a:	test   BYTE PTR [rsp+0x44],0x44
   14000112f:	je     0x140001182
   140001131:	lea    rcx,[rsp+0x50]
   140001136:	call   QWORD PTR [rip+0x1eec]        # 0x140003028
   14000113c:	mov    r8d,DWORD PTR [rsp+0x54]
   140001141:	xor    edx,edx
   140001143:	lea    eax,[r8-0x1]
   140001147:	mov    ecx,eax
   140001149:	and    eax,ebx
   14000114b:	and    ecx,edi
   14000114d:	add    eax,ecx
   14000114f:	dec    rax
   140001152:	add    rax,r8
   140001155:	div    r8
   140001158:	xor    edx,edx
   14000115a:	mov    rcx,rax
   14000115d:	mov    rax,rdi
   140001160:	div    r8
   140001163:	add    ecx,eax
   140001165:	lea    rax,[r8-0x1]
   140001169:	not    rax
   14000116c:	mov    edx,ecx
   14000116e:	and    rax,rbx
   140001171:	test   ecx,ecx
   140001173:	je     0x140001182
   140001175:	lock or DWORD PTR [rax],0x0
   140001179:	add    rax,r8
   14000117c:	sub    rdx,0x1
   140001180:	jne    0x140001175
   140001182:	mov    rbx,QWORD PTR [rsp+0x90]
   14000118a:	add    rsp,0x80
   140001191:	pop    rdi
   140001192:	ret    
   140001193:	int3   
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	mov    QWORD PTR [rsp+0x8],rbx
   1400011a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400011a6:	push   rsi
   1400011a7:	push   rdi
   1400011a8:	push   r14
   1400011aa:	sub    rsp,0x20
   1400011ae:	movsxd r8,DWORD PTR [rip+0xffffffffffffee87]        # 0x14000003c
   1400011b5:	lea    r14,[rip+0xffffffffffffee44]        # 0x140000000
   1400011bc:	add    r8,r14
   1400011bf:	mov    rsi,rdx
   1400011c2:	mov    ebp,ecx
   1400011c4:	cmp    DWORD PTR [r8+0x84],0xd
   1400011cc:	jbe    0x140001282
   1400011d2:	mov    r9d,DWORD PTR [r8+0xf0]
   1400011d9:	test   r9d,r9d
   1400011dc:	je     0x140001282
   1400011e2:	movzx  eax,WORD PTR [r8+0x14]
   1400011e7:	lea    rdx,[r8+0x18]
   1400011eb:	mov    r10d,DWORD PTR [r9+r14*1+0xc]
   1400011f0:	add    rdx,rax
   1400011f3:	movzx  r11d,WORD PTR [r8+0x6]
   1400011f8:	xor    r9d,r9d
   1400011fb:	test   r11d,r11d
   1400011fe:	je     0x14000121e
   140001200:	mov    ecx,DWORD PTR [rdx+0xc]
   140001203:	cmp    r10d,ecx
   140001206:	jb     0x140001212
   140001208:	mov    eax,DWORD PTR [rdx+0x8]
   14000120b:	add    ecx,eax
   14000120d:	cmp    r10d,ecx
   140001210:	jb     0x140001275
   140001212:	inc    r9d
   140001215:	add    rdx,0x28
   140001219:	cmp    r9d,r11d
   14000121c:	jb     0x140001200
   14000121e:	mov    eax,DWORD PTR [rsp+0x50]
   140001222:	xor    ebx,ebx
   140001224:	mov    edi,DWORD PTR [rsp+0x50]
   140001228:	test   rbx,rbx
   14000122b:	je     0x140001282
   14000122d:	cmp    DWORD PTR [rip+0x33dc],0x0        # 0x140004610
   140001234:	mov    r14d,0x19
   14000123a:	jne    0x140001259
   14000123c:	mov    DWORD PTR [rip+0x33ca],0x1        # 0x140004610
   140001246:	test   eax,eax
   140001248:	js     0x14000124f
   14000124a:	mov    ecx,r14d
   14000124d:	int    0x29
   14000124f:	mov    edx,edi
   140001251:	mov    rcx,rbx
   140001254:	call   0x1400010fc
   140001259:	mov    edx,edi
   14000125b:	mov    r9,rsi
   14000125e:	mov    r8d,ebp
   140001261:	mov    rcx,rbx
   140001264:	call   QWORD PTR [rip+0x1e76]        # 0x1400030e0
   14000126a:	test   eax,eax
   14000126c:	jne    0x140001288
   14000126e:	mov    rcx,r14
   140001271:	int    0x29
   140001273:	jmp    0x140001288
   140001275:	mov    ebx,DWORD PTR [rdx+0xc]
   140001278:	mov    edi,eax
   14000127a:	mov    eax,DWORD PTR [rdx+0x24]
   14000127d:	add    rbx,r14
   140001280:	jmp    0x140001228
   140001282:	mov    DWORD PTR [rsi],0x4
   140001288:	mov    rbx,QWORD PTR [rsp+0x40]
   14000128d:	mov    rbp,QWORD PTR [rsp+0x48]
   140001292:	add    rsp,0x20
   140001296:	pop    r14
   140001298:	pop    rdi
   140001299:	pop    rsi
   14000129a:	ret    
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	int3   
   1400012a1:	int3   
   1400012a2:	int3   
   1400012a3:	int3   
   1400012a4:	int3   
   1400012a5:	int3   
   1400012a6:	int3   
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400012b5:	push   rbp
   1400012b6:	push   rbx
   1400012b7:	push   rsi
   1400012b8:	push   rdi
   1400012b9:	push   r12
   1400012bb:	push   r13
   1400012bd:	push   r15
   1400012bf:	lea    rbp,[rsp-0x27]
   1400012c4:	sub    rsp,0xa0
   1400012cb:	test   DWORD PTR [rip+0x1fcb],0x1000        # 0x1400032a0
   1400012d5:	lea    rbx,[rip+0x32fc]        # 0x1400045d8
   1400012dc:	mov    rdi,rdx
   1400012df:	mov    r15,rcx
   1400012e2:	mov    esi,0x1
   1400012e7:	je     0x14000131c
   1400012e9:	mov    rcx,rbx
   1400012ec:	call   QWORD PTR [rip+0x1d4e]        # 0x140003040
   1400012f2:	mov    eax,DWORD PTR [rip+0x331c]        # 0x140004614
   1400012f8:	add    eax,esi
   1400012fa:	mov    DWORD PTR [rip+0x3314],eax        # 0x140004614
   140001300:	cmp    eax,esi
   140001302:	jne    0x140001313
   140001304:	lea    rdx,[rip+0x330d]        # 0x140004618
   14000130b:	lea    ecx,[rsi+0x3]
   14000130e:	call   0x14000119c
   140001313:	mov    rcx,rbx
   140001316:	call   QWORD PTR [rip+0x1d34]        # 0x140003050
   14000131c:	and    QWORD PTR [rbp-0x31],0x0
   140001321:	lea    r10,[rip+0xffffffffffffecd8]        # 0x140000000
   140001328:	mov    r9d,DWORD PTR [r15+0x14]
   14000132c:	mov    ecx,DWORD PTR [r15]
   14000132f:	add    r9,r10
   140001332:	mov    eax,DWORD PTR [r15+0x4]
   140001336:	and    ecx,esi
   140001338:	mov    r12d,DWORD PTR [r15+0x8]
   14000133c:	add    rax,r10
   14000133f:	mov    r8d,DWORD PTR [r15+0xc]
   140001343:	add    r12,r10
   140001346:	mov    edx,DWORD PTR [r15+0x10]
   14000134a:	add    r8,r10
   14000134d:	and    DWORD PTR [rbp-0x39],0x0
   140001351:	add    rdx,r10
   140001354:	and    DWORD PTR [rbp-0x31],0x0
   140001358:	and    QWORD PTR [rbp-0x29],0x0
   14000135d:	and    QWORD PTR [rbp-0x21],0x0
   140001362:	and    DWORD PTR [rbp-0x19],0x0
   140001366:	mov    QWORD PTR [rbp-0x1],r9
   14000136a:	mov    r9d,DWORD PTR [r15+0x1c]
   14000136e:	mov    DWORD PTR [rbp+0x67],r9d
   140001372:	mov    DWORD PTR [rbp-0x59],0x48
   140001379:	mov    QWORD PTR [rbp-0x51],r15
   14000137d:	mov    QWORD PTR [rbp-0x49],rdi
   140001381:	mov    QWORD PTR [rbp-0x41],rax
   140001385:	test   cl,cl
   140001387:	jne    0x1400013e2
   140001389:	test   DWORD PTR [rip+0x1f0d],0x1000        # 0x1400032a0
   140001393:	lea    rax,[rbp-0x59]
   140001397:	mov    QWORD PTR [rbp+0x7],rax
   14000139b:	je     0x1400013c7
   14000139d:	mov    rcx,rbx
   1400013a0:	call   QWORD PTR [rip+0x1c9a]        # 0x140003040
   1400013a6:	add    DWORD PTR [rip+0x3267],0xffffffff        # 0x140004614
   1400013ad:	jne    0x1400013be
   1400013af:	mov    ecx,DWORD PTR [rip+0x3263]        # 0x140004618
   1400013b5:	lea    rdx,[rbp+0x77]
   1400013b9:	call   0x14000119c
   1400013be:	mov    rcx,rbx
   1400013c1:	call   QWORD PTR [rip+0x1c89]        # 0x140003050
   1400013c7:	lea    r9,[rbp+0x7]
   1400013cb:	mov    r8d,esi
   1400013ce:	xor    edx,edx
   1400013d0:	mov    ecx,0xc06d0057
   1400013d5:	call   QWORD PTR [rip+0x1c5d]        # 0x140003038
   1400013db:	xor    eax,eax
   1400013dd:	jmp    0x14000176f
   1400013e2:	mov    rbx,QWORD PTR [r12]
   1400013e6:	movabs rax,0x8000000000000000
   1400013f0:	mov    r13,rdi
   1400013f3:	sub    r13,r8
   1400013f6:	sar    r13,0x3
   1400013fa:	mov    r13d,r13d
   1400013fd:	test   QWORD PTR [rdx+r13*8],rax
   140001401:	mov    eax,0x0
   140001406:	sete   al
   140001409:	mov    DWORD PTR [rbp-0x39],eax
   14000140c:	test   eax,eax
   14000140e:	je     0x140001424
   140001410:	mov    eax,DWORD PTR [rdx+r13*8]
   140001414:	lea    rcx,[rip+0xffffffffffffebe7]        # 0x140000002
   14000141b:	add    rax,rcx
   14000141e:	mov    QWORD PTR [rbp-0x31],rax
   140001422:	jmp    0x14000142c
   140001424:	movzx  eax,WORD PTR [rdx+r13*8]
   140001429:	mov    DWORD PTR [rbp-0x31],eax
   14000142c:	mov    rdi,QWORD PTR [rip+0x1eb5]        # 0x1400032e8
   140001433:	xor    esi,esi
   140001435:	test   rdi,rdi
   140001438:	je     0x140001457
   14000143a:	mov    rcx,rdi
   14000143d:	call   QWORD PTR [rip+0x1d2d]        # 0x140003170
   140001443:	lea    rdx,[rbp-0x59]
   140001447:	xor    ecx,ecx
   140001449:	call   rdi
   14000144b:	mov    rsi,rax
   14000144e:	test   rax,rax
   140001451:	jne    0x140001702
   140001457:	test   rbx,rbx
   14000145a:	jne    0x14000159e
   140001460:	mov    rdi,QWORD PTR [rip+0x1e81]        # 0x1400032e8
   140001467:	test   rdi,rdi
   14000146a:	je     0x14000148a
   14000146c:	mov    rcx,rdi
   14000146f:	call   QWORD PTR [rip+0x1cfb]        # 0x140003170
   140001475:	lea    rdx,[rbp-0x59]
   140001479:	lea    ecx,[rbx+0x1]
   14000147c:	call   rdi
   14000147e:	mov    rbx,rax
   140001481:	test   rax,rax
   140001484:	jne    0x14000153a
   14000148a:	mov    rcx,QWORD PTR [rbp-0x41]
   14000148e:	xor    r8d,r8d
   140001491:	xor    edx,edx
   140001493:	call   QWORD PTR [rip+0x1b87]        # 0x140003020
   140001499:	mov    rbx,rax
   14000149c:	test   rax,rax
   14000149f:	jne    0x14000153a
   1400014a5:	call   QWORD PTR [rip+0x1b85]        # 0x140003030
   1400014ab:	mov    rbx,QWORD PTR [rip+0x1e36]        # 0x1400032e8
   1400014b2:	mov    DWORD PTR [rbp-0x19],eax
   1400014b5:	test   rbx,rbx
   1400014b8:	je     0x1400014d6
   1400014ba:	mov    rcx,rbx
   1400014bd:	call   QWORD PTR [rip+0x1cad]        # 0x140003170
   1400014c3:	lea    rdx,[rbp-0x59]
   1400014c7:	mov    ecx,0x3
   1400014cc:	call   rbx
   1400014ce:	mov    rbx,rax
   1400014d1:	test   rax,rax
   1400014d4:	jne    0x14000153a
   1400014d6:	test   DWORD PTR [rip+0x1dc0],0x1000        # 0x1400032a0
   1400014e0:	lea    rax,[rbp-0x59]
   1400014e4:	mov    QWORD PTR [rbp-0x9],rax
   1400014e8:	je     0x14000151c
   1400014ea:	lea    rcx,[rip+0x30e7]        # 0x1400045d8
   1400014f1:	call   QWORD PTR [rip+0x1b49]        # 0x140003040
   1400014f7:	add    DWORD PTR [rip+0x3116],0xffffffff        # 0x140004614
   1400014fe:	jne    0x14000150f
   140001500:	mov    ecx,DWORD PTR [rip+0x3112]        # 0x140004618
   140001506:	lea    rdx,[rbp+0x7f]
   14000150a:	call   0x14000119c
   14000150f:	lea    rcx,[rip+0x30c2]        # 0x1400045d8
   140001516:	call   QWORD PTR [rip+0x1b34]        # 0x140003050
   14000151c:	xor    edx,edx
   14000151e:	lea    r9,[rbp-0x9]
   140001522:	mov    ecx,0xc06d007e
   140001527:	lea    r8d,[rdx+0x1]
   14000152b:	call   QWORD PTR [rip+0x1b07]        # 0x140003038
   140001531:	mov    rax,QWORD PTR [rbp-0x21]
   140001535:	jmp    0x14000176f
   14000153a:	xor    eax,eax
   14000153c:	lock cmpxchg QWORD PTR [r12],rbx
   140001542:	mov    rdi,rax
   140001545:	jne    0x140001588
   140001547:	cmp    rbx,0xffffffffffffffff
   14000154b:	je     0x14000159e
   14000154d:	cmp    DWORD PTR [r15+0x18],0x0
   140001552:	je     0x14000159e
   140001554:	call   QWORD PTR [rip+0x1aee]        # 0x140003048
   14000155a:	mov    edx,0x8
   14000155f:	mov    rcx,rax
   140001562:	lea    r8d,[rdx+0x8]
   140001566:	call   QWORD PTR [rip+0x1aec]        # 0x140003058
   14000156c:	test   rax,rax
   14000156f:	je     0x14000159e
   140001571:	mov    QWORD PTR [rax+0x8],r15
   140001575:	mov    rcx,QWORD PTR [rip+0x3064]        # 0x1400045e0
   14000157c:	mov    QWORD PTR [rax],rcx
   14000157f:	mov    QWORD PTR [rip+0x305a],rax        # 0x1400045e0
   140001586:	jmp    0x14000159e
   140001588:	cmp    rbx,0xffffffffffffffff
   14000158c:	je     0x140001597
   14000158e:	mov    rcx,rbx
   140001591:	call   QWORD PTR [rip+0x1a69]        # 0x140003000
   140001597:	cmp    rbx,rdi
   14000159a:	cmovne rbx,rdi
   14000159e:	mov    rdi,QWORD PTR [rip+0x1d43]        # 0x1400032e8
   1400015a5:	mov    QWORD PTR [rbp-0x29],rbx
   1400015a9:	test   rdi,rdi
   1400015ac:	je     0x1400015c5
   1400015ae:	mov    rcx,rdi
   1400015b1:	call   QWORD PTR [rip+0x1bb9]        # 0x140003170
   1400015b7:	lea    rdx,[rbp-0x59]
   1400015bb:	mov    ecx,0x2
   1400015c0:	call   rdi
   1400015c2:	mov    rsi,rax
   1400015c5:	test   rsi,rsi
   1400015c8:	jne    0x1400016fb
   1400015ce:	cmp    DWORD PTR [r15+0x14],esi
   1400015d2:	je     0x140001608
   1400015d4:	cmp    DWORD PTR [r15+0x1c],esi
   1400015d8:	je     0x140001608
   1400015da:	movsxd rax,DWORD PTR [rbx+0x3c]
   1400015de:	cmp    DWORD PTR [rax+rbx*1],0x4550
   1400015e5:	jne    0x140001608
   1400015e7:	mov    ecx,DWORD PTR [rbp+0x67]
   1400015ea:	cmp    DWORD PTR [rax+rbx*1+0x8],ecx
   1400015ee:	jne    0x140001608
   1400015f0:	cmp    rbx,QWORD PTR [rax+rbx*1+0x30]
   1400015f5:	jne    0x140001608
   1400015f7:	mov    rsi,QWORD PTR [rbp-0x1]
   1400015fb:	mov    rsi,QWORD PTR [rsi+r13*8]
   1400015ff:	test   rsi,rsi
   140001602:	jne    0x1400016fb
   140001608:	mov    rdx,QWORD PTR [rbp-0x31]
   14000160c:	mov    rcx,rbx
   14000160f:	call   QWORD PTR [rip+0x1a03]        # 0x140003018
   140001615:	mov    rsi,rax
   140001618:	test   rax,rax
   14000161b:	jne    0x1400016fb
   140001621:	call   QWORD PTR [rip+0x1a09]        # 0x140003030
   140001627:	mov    rdi,QWORD PTR [rip+0x1cba]        # 0x1400032e8
   14000162e:	mov    DWORD PTR [rbp-0x19],eax
   140001631:	test   rdi,rdi
   140001634:	je     0x140001654
   140001636:	mov    rcx,rdi
   140001639:	call   QWORD PTR [rip+0x1b31]        # 0x140003170
   14000163f:	lea    rdx,[rbp-0x59]
   140001643:	lea    ecx,[rsi+0x4]
   140001646:	call   rdi
   140001648:	mov    rsi,rax
   14000164b:	test   rax,rax
   14000164e:	jne    0x1400016fb
   140001654:	test   DWORD PTR [rip+0x1c42],0x1000        # 0x1400032a0
   14000165e:	lea    rax,[rbp-0x59]
   140001662:	mov    QWORD PTR [rbp+0xf],rax
   140001666:	je     0x14000169a
   140001668:	lea    rcx,[rip+0x2f69]        # 0x1400045d8
   14000166f:	call   QWORD PTR [rip+0x19cb]        # 0x140003040
   140001675:	add    DWORD PTR [rip+0x2f98],0xffffffff        # 0x140004614
   14000167c:	jne    0x14000168d
   14000167e:	mov    ecx,DWORD PTR [rip+0x2f94]        # 0x140004618
   140001684:	lea    rdx,[rbp+0x17]
   140001688:	call   0x14000119c
   14000168d:	lea    rcx,[rip+0x2f44]        # 0x1400045d8
   140001694:	call   QWORD PTR [rip+0x19b6]        # 0x140003050
   14000169a:	xor    edx,edx
   14000169c:	lea    r9,[rbp+0xf]
   1400016a0:	mov    ecx,0xc06d007f
   1400016a5:	lea    r8d,[rdx+0x1]
   1400016a9:	call   QWORD PTR [rip+0x1989]        # 0x140003038
   1400016af:	test   DWORD PTR [rip+0x1be7],0x1000        # 0x1400032a0
   1400016b9:	je     0x1400016f7
   1400016bb:	lea    rcx,[rip+0x2f16]        # 0x1400045d8
   1400016c2:	call   QWORD PTR [rip+0x1978]        # 0x140003040
   1400016c8:	mov    eax,DWORD PTR [rip+0x2f46]        # 0x140004614
   1400016ce:	inc    eax
   1400016d0:	mov    DWORD PTR [rip+0x2f3e],eax        # 0x140004614
   1400016d6:	cmp    eax,0x1
   1400016d9:	jne    0x1400016ea
   1400016db:	lea    rdx,[rip+0x2f36]        # 0x140004618
   1400016e2:	lea    ecx,[rax+0x3]
   1400016e5:	call   0x14000119c
   1400016ea:	lea    rcx,[rip+0x2ee7]        # 0x1400045d8
   1400016f1:	call   QWORD PTR [rip+0x1959]        # 0x140003050
   1400016f7:	mov    rsi,QWORD PTR [rbp-0x21]
   1400016fb:	mov    rax,QWORD PTR [rbp+0x6f]
   1400016ff:	mov    QWORD PTR [rax],rsi
   140001702:	mov    rdi,QWORD PTR [rip+0x1bdf]        # 0x1400032e8
   140001709:	test   rdi,rdi
   14000170c:	je     0x14000172e
   14000170e:	and    DWORD PTR [rbp-0x19],0x0
   140001712:	mov    rcx,rdi
   140001715:	mov    QWORD PTR [rbp-0x29],rbx
   140001719:	mov    QWORD PTR [rbp-0x21],rsi
   14000171d:	call   QWORD PTR [rip+0x1a4d]        # 0x140003170
   140001723:	lea    rdx,[rbp-0x59]
   140001727:	mov    ecx,0x5
   14000172c:	call   rdi
   14000172e:	test   DWORD PTR [rip+0x1b68],0x1000        # 0x1400032a0
   140001738:	je     0x14000176c
   14000173a:	lea    rcx,[rip+0x2e97]        # 0x1400045d8
   140001741:	call   QWORD PTR [rip+0x18f9]        # 0x140003040
   140001747:	add    DWORD PTR [rip+0x2ec6],0xffffffff        # 0x140004614
   14000174e:	jne    0x14000175f
   140001750:	mov    ecx,DWORD PTR [rip+0x2ec2]        # 0x140004618
   140001756:	lea    rdx,[rbp+0x1b]
   14000175a:	call   0x14000119c
   14000175f:	lea    rcx,[rip+0x2e72]        # 0x1400045d8
   140001766:	call   QWORD PTR [rip+0x18e4]        # 0x140003050
   14000176c:	mov    rax,rsi
   14000176f:	add    rsp,0xa0
   140001776:	pop    r15
   140001778:	pop    r13
   14000177a:	pop    r12
   14000177c:	pop    rdi
   14000177d:	pop    rsi
   14000177e:	pop    rbx
   14000177f:	pop    rbp
   140001780:	ret    
   140001781:	int3   
   140001782:	int3   
   140001783:	int3   
   140001784:	int3   
   140001785:	int3   
   140001786:	int3   
   140001787:	int3   
   140001788:	int3   
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	sub    rsp,0x28
   140001794:	mov    eax,0x5a4d
   140001799:	cmp    WORD PTR [rip+0xffffffffffffe860],ax        # 0x140000000
   1400017a0:	je     0x1400017a6
   1400017a2:	xor    eax,eax
   1400017a4:	jmp    0x1400017f5
   1400017a6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffe88f]        # 0x14000003c
   1400017ad:	lea    rax,[rip+0xffffffffffffe84c]        # 0x140000000
   1400017b4:	add    rcx,rax
   1400017b7:	cmp    DWORD PTR [rcx],0x4550
   1400017bd:	jne    0x1400017a2
   1400017bf:	movzx  eax,WORD PTR [rcx+0x18]
   1400017c3:	cmp    eax,0x10b
   1400017c8:	je     0x1400017e4
   1400017ca:	cmp    eax,0x20b
   1400017cf:	jne    0x1400017a2
   1400017d1:	xor    eax,eax
   1400017d3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400017da:	jbe    0x1400017f5
   1400017dc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400017e2:	jmp    0x1400017f2
   1400017e4:	xor    eax,eax
   1400017e6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400017ea:	jbe    0x1400017f5
   1400017ec:	cmp    DWORD PTR [rcx+0xe8],eax
   1400017f2:	setne  al
   1400017f5:	mov    ecx,0x2
   1400017fa:	mov    DWORD PTR [rip+0x2840],eax        # 0x140004040
   140001800:	call   0x140001c38
   140001805:	mov    ecx,eax
   140001807:	call   QWORD PTR [rip+0x193b]        # 0x140003148
   14000180d:	mov    rcx,QWORD PTR [rip+0x18ec]        # 0x140003100
   140001814:	or     rax,0xffffffffffffffff
   140001818:	mov    QWORD PTR [rip+0x2dc9],rax        # 0x1400045e8
   14000181f:	mov    QWORD PTR [rip+0x2dca],rax        # 0x1400045f0
   140001826:	mov    eax,DWORD PTR [rip+0x2828]        # 0x140004054
   14000182c:	mov    DWORD PTR [rcx],eax
   14000182e:	mov    rcx,QWORD PTR [rip+0x18c3]        # 0x1400030f8
   140001835:	mov    eax,DWORD PTR [rip+0x280d]        # 0x140004048
   14000183b:	mov    DWORD PTR [rcx],eax
   14000183d:	call   0x140001c90
   140001842:	cmp    DWORD PTR [rip+0x27b7],0x0        # 0x140004000
   140001849:	jne    0x140001858
   14000184b:	lea    rcx,[rip+0x43e]        # 0x140001c90
   140001852:	call   QWORD PTR [rip+0x18c8]        # 0x140003120
   140001858:	xor    eax,eax
   14000185a:	add    rsp,0x28
   14000185e:	ret    
   14000185f:	int3   
   140001860:	int3   
   140001861:	int3   
   140001862:	int3   
   140001863:	int3   
   140001864:	int3   
   140001865:	int3   
   140001866:	int3   
   140001867:	int3   
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	sub    rsp,0x38
   140001874:	mov    eax,DWORD PTR [rip+0x27d6]        # 0x140004050
   14000187a:	lea    r8,[rip+0x27b7]        # 0x140004038
   140001881:	mov    r9d,DWORD PTR [rip+0x27c4]        # 0x14000404c
   140001888:	lea    rdx,[rip+0x27a1]        # 0x140004030
   14000188f:	mov    DWORD PTR [rip+0x27af],eax        # 0x140004044
   140001895:	lea    rcx,[rip+0x278c]        # 0x140004028
   14000189c:	lea    rax,[rip+0x27a1]        # 0x140004044
   1400018a3:	mov    QWORD PTR [rsp+0x20],rax
   1400018a8:	call   QWORD PTR [rip+0x18a2]        # 0x140003150
   1400018ae:	mov    DWORD PTR [rip+0x2778],eax        # 0x14000402c
   1400018b4:	add    rsp,0x38
   1400018b8:	ret    
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	sub    rsp,0x28
   1400018c4:	call   0x140001d84
   1400018c9:	add    rsp,0x28
   1400018cd:	jmp    0x1400018d8
   1400018d2:	int3   
   1400018d3:	int3   
   1400018d4:	int3   
   1400018d5:	int3   
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	mov    rax,rsp
   1400018db:	mov    QWORD PTR [rax+0x8],rbx
   1400018df:	mov    QWORD PTR [rax+0x10],rsi
   1400018e3:	mov    QWORD PTR [rax+0x18],rdi
   1400018e7:	push   r15
   1400018e9:	sub    rsp,0xb0
   1400018f0:	and    DWORD PTR [rsp+0x20],0x0
   1400018f5:	lea    rcx,[rax-0x78]
   1400018f9:	call   QWORD PTR [rip+0x17c9]        # 0x1400030c8
   1400018ff:	nop
   140001900:	mov    rax,QWORD PTR gs:0x30
   140001909:	mov    rbx,QWORD PTR [rax+0x8]
   14000190d:	xor    esi,esi
   14000190f:	xor    eax,eax
   140001911:	lock cmpxchg QWORD PTR [rip+0x2cde],rbx        # 0x1400045f8
   14000191a:	je     0x140001935
   14000191c:	cmp    rax,rbx
   14000191f:	jne    0x140001928
   140001921:	mov    esi,0x1
   140001926:	jmp    0x140001935
   140001928:	mov    ecx,0x3e8
   14000192d:	call   QWORD PTR [rip+0x178d]        # 0x1400030c0
   140001933:	jmp    0x14000190f
   140001935:	mov    eax,DWORD PTR [rip+0x2cc5]        # 0x140004600
   14000193b:	cmp    eax,0x1
   14000193e:	jne    0x14000194a
   140001940:	lea    ecx,[rax+0x1e]
   140001943:	call   0x140001c84
   140001948:	jmp    0x1400019bb
   14000194a:	mov    eax,DWORD PTR [rip+0x2cb0]        # 0x140004600
   140001950:	test   eax,eax
   140001952:	jne    0x1400019b1
   140001954:	mov    DWORD PTR [rip+0x2ca2],0x1        # 0x140004600
   14000195e:	lea    r15,[rip+0x184b]        # 0x1400031b0
   140001965:	lea    rbx,[rip+0x182c]        # 0x140003198
   14000196c:	mov    QWORD PTR [rsp+0x38],rbx
   140001971:	mov    DWORD PTR [rsp+0x30],eax
   140001975:	cmp    rbx,r15
   140001978:	jae    0x1400019a3
   14000197a:	test   eax,eax
   14000197c:	jne    0x1400019a7
   14000197e:	mov    rdi,QWORD PTR [rbx]
   140001981:	test   rdi,rdi
   140001984:	je     0x140001998
   140001986:	mov    rcx,rdi
   140001989:	mov    rax,QWORD PTR [rip+0x17e0]        # 0x140003170
   140001990:	call   rax
   140001992:	call   rdi
   140001994:	mov    DWORD PTR [rsp+0x30],eax
   140001998:	add    rbx,0x8
   14000199c:	mov    QWORD PTR [rsp+0x38],rbx
   1400019a1:	jmp    0x140001975
   1400019a3:	test   eax,eax
   1400019a5:	je     0x1400019bb
   1400019a7:	mov    eax,0xff
   1400019ac:	jmp    0x140001b14
   1400019b1:	mov    DWORD PTR [rip+0x2669],0x1        # 0x140004024
   1400019bb:	mov    eax,DWORD PTR [rip+0x2c3f]        # 0x140004600
   1400019c1:	cmp    eax,0x1
   1400019c4:	jne    0x1400019e3
   1400019c6:	lea    rdx,[rip+0x17c3]        # 0x140003190
   1400019cd:	lea    rcx,[rip+0x17ac]        # 0x140003180
   1400019d4:	call   0x140001e5a
   1400019d9:	mov    DWORD PTR [rip+0x2c1d],0x2        # 0x140004600
   1400019e3:	test   esi,esi
   1400019e5:	jne    0x1400019f0
   1400019e7:	xor    eax,eax
   1400019e9:	xchg   QWORD PTR [rip+0x2c08],rax        # 0x1400045f8
   1400019f0:	cmp    QWORD PTR [rip+0x2c10],0x0        # 0x140004608
   1400019f8:	je     0x140001a28
   1400019fa:	lea    rcx,[rip+0x2c07]        # 0x140004608
   140001a01:	call   0x140001cf0
   140001a06:	test   eax,eax
   140001a08:	je     0x140001a28
   140001a0a:	mov    rbx,QWORD PTR [rip+0x2bf7]        # 0x140004608
   140001a11:	mov    rcx,rbx
   140001a14:	mov    rax,QWORD PTR [rip+0x1755]        # 0x140003170
   140001a1b:	call   rax
   140001a1d:	xor    r8d,r8d
   140001a20:	lea    edx,[r8+0x2]
   140001a24:	xor    ecx,ecx
   140001a26:	call   rbx
   140001a28:	mov    rax,QWORD PTR [rip+0x16d9]        # 0x140003108
   140001a2f:	mov    rbx,QWORD PTR [rax]
   140001a32:	mov    QWORD PTR [rsp+0x28],rbx
   140001a37:	mov    edi,DWORD PTR [rsp+0x20]
   140001a3b:	cmp    BYTE PTR [rbx],0x20
   140001a3e:	ja     0x140001ab3
   140001a40:	cmp    BYTE PTR [rbx],0x0
   140001a43:	je     0x140001a49
   140001a45:	test   edi,edi
   140001a47:	jne    0x140001ab3
   140001a49:	mov    al,BYTE PTR [rbx]
   140001a4b:	dec    al
   140001a4d:	cmp    al,0x1f
   140001a4f:	ja     0x140001a5b
   140001a51:	inc    rbx
   140001a54:	mov    QWORD PTR [rsp+0x28],rbx
   140001a59:	jmp    0x140001a49
   140001a5b:	mov    ecx,DWORD PTR [rsp+0x7c]
   140001a5f:	movzx  eax,WORD PTR [rsp+0x80]
   140001a67:	mov    r9d,0xa
   140001a6d:	and    cl,0x1
   140001a70:	cmovne r9d,eax
   140001a74:	mov    r8,rbx
   140001a77:	xor    edx,edx
   140001a79:	lea    rcx,[rip+0xffffffffffffe580]        # 0x140000000
   140001a80:	call   0x140001008
   140001a85:	mov    DWORD PTR [rip+0x2595],eax        # 0x140004020
   140001a8b:	cmp    DWORD PTR [rip+0x25ae],0x0        # 0x140004040
   140001a92:	jne    0x140001a9c
   140001a94:	mov    ecx,eax
   140001a96:	call   QWORD PTR [rip+0x16a4]        # 0x140003140
   140001a9c:	cmp    DWORD PTR [rip+0x2581],0x0        # 0x140004024
   140001aa3:	jne    0x140001ab1
   140001aa5:	call   QWORD PTR [rip+0x1685]        # 0x140003130
   140001aab:	mov    eax,DWORD PTR [rip+0x256f]        # 0x140004020
   140001ab1:	jmp    0x140001b14
   140001ab3:	cmp    BYTE PTR [rbx],0x22
   140001ab6:	jne    0x140001ac5
   140001ab8:	xor    eax,eax
   140001aba:	test   edi,edi
   140001abc:	sete   al
   140001abf:	mov    edi,eax
   140001ac1:	mov    DWORD PTR [rsp+0x20],eax
   140001ac5:	movzx  ecx,BYTE PTR [rbx]
   140001ac8:	call   QWORD PTR [rip+0x165a]        # 0x140003128
   140001ace:	test   eax,eax
   140001ad0:	je     0x140001ada
   140001ad2:	inc    rbx
   140001ad5:	mov    QWORD PTR [rsp+0x28],rbx
   140001ada:	inc    rbx
   140001add:	mov    QWORD PTR [rsp+0x28],rbx
   140001ae2:	jmp    0x140001a3b
   140001ae7:	mov    DWORD PTR [rip+0x2533],eax        # 0x140004020
   140001aed:	cmp    DWORD PTR [rip+0x254c],0x0        # 0x140004040
   140001af4:	jne    0x140001aff
   140001af6:	mov    ecx,eax
   140001af8:	call   QWORD PTR [rip+0x163a]        # 0x140003138
   140001afe:	int3   
   140001aff:	cmp    DWORD PTR [rip+0x251e],0x0        # 0x140004024
   140001b06:	jne    0x140001b14
   140001b08:	call   QWORD PTR [rip+0x1622]        # 0x140003130
   140001b0e:	mov    eax,DWORD PTR [rip+0x250c]        # 0x140004020
   140001b14:	lea    r11,[rsp+0xb0]
   140001b1c:	mov    rbx,QWORD PTR [r11+0x10]
   140001b20:	mov    rsi,QWORD PTR [r11+0x18]
   140001b24:	mov    rdi,QWORD PTR [r11+0x20]
   140001b28:	mov    rsp,r11
   140001b2b:	pop    r15
   140001b2d:	ret    
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	int3   
   140001b31:	int3   
   140001b32:	int3   
   140001b33:	int3   
   140001b34:	int3   
   140001b35:	int3   
   140001b36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001b40:	cmp    rcx,QWORD PTR [rip+0x24c1]        # 0x140004008
   140001b47:	jne    0x140001b59
   140001b49:	rol    rcx,0x10
   140001b4d:	test   cx,0xffff
   140001b52:	jne    0x140001b55
   140001b54:	ret    
   140001b55:	ror    rcx,0x10
   140001b59:	jmp    0x140001ed0
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	int3   
   140001b61:	int3   
   140001b62:	int3   
   140001b63:	int3   
   140001b64:	int3   
   140001b65:	int3   
   140001b66:	int3   
   140001b67:	int3   
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	sub    rsp,0x28
   140001b74:	mov    rax,QWORD PTR [rcx]
   140001b77:	cmp    DWORD PTR [rax],0xe06d7363
   140001b7d:	jne    0x140001ba2
   140001b7f:	cmp    DWORD PTR [rax+0x18],0x4
   140001b83:	jne    0x140001ba2
   140001b85:	mov    ecx,DWORD PTR [rax+0x20]
   140001b88:	lea    eax,[rcx-0x19930520]
   140001b8e:	cmp    eax,0x2
   140001b91:	jbe    0x140001b9b
   140001b93:	cmp    ecx,0x1994000
   140001b99:	jne    0x140001ba2
   140001b9b:	call   QWORD PTR [rip+0x154f]        # 0x1400030f0
   140001ba1:	int3   
   140001ba2:	xor    eax,eax
   140001ba4:	add    rsp,0x28
   140001ba8:	ret    
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	sub    rsp,0x28
   140001bb4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140001b70
   140001bbb:	call   QWORD PTR [rip+0x150f]        # 0x1400030d0
   140001bc1:	xor    eax,eax
   140001bc3:	add    rsp,0x28
   140001bc7:	ret    
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	jmp    QWORD PTR [rip+0x158c]        # 0x140003160
   140001bd4:	int3   
   140001bd5:	int3   
   140001bd6:	int3   
   140001bd7:	int3   
   140001bd8:	int3   
   140001bd9:	int3   
   140001bda:	int3   
   140001bdb:	int3   
   140001bdc:	sub    rsp,0x18
   140001be0:	xor    edx,edx
   140001be2:	lea    rax,[rcx-0x1]
   140001be6:	cmp    rax,0xfffffffffffffffd
   140001bea:	ja     0x140001c28
   140001bec:	mov    eax,0x5a4d
   140001bf1:	cmp    WORD PTR [rcx],ax
   140001bf4:	jne    0x140001c20
   140001bf6:	cmp    DWORD PTR [rcx+0x3c],edx
   140001bf9:	jl     0x140001c20
   140001bfb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140001c02:	jae    0x140001c20
   140001c04:	movsxd rax,DWORD PTR [rcx+0x3c]
   140001c08:	add    rax,rcx
   140001c0b:	mov    QWORD PTR [rsp],rax
   140001c0f:	cmp    DWORD PTR [rax],0x4550
   140001c15:	cmovne rax,rdx
   140001c19:	mov    rdx,rax
   140001c1c:	mov    QWORD PTR [rsp],rax
   140001c20:	jmp    0x140001c28
   140001c22:	xor    edx,edx
   140001c24:	mov    QWORD PTR [rsp],rdx
   140001c28:	mov    rax,rdx
   140001c2b:	add    rsp,0x18
   140001c2f:	ret    
   140001c30:	int3   
   140001c31:	int3   
   140001c32:	int3   
   140001c33:	int3   
   140001c34:	int3   
   140001c35:	int3   
   140001c36:	int3   
   140001c37:	int3   
   140001c38:	rex push rbx
   140001c3a:	sub    rsp,0x20
   140001c3e:	mov    ebx,ecx
   140001c40:	xor    ecx,ecx
   140001c42:	call   QWORD PTR [rip+0x1490]        # 0x1400030d8
   140001c48:	test   rax,rax
   140001c4b:	je     0x140001c75
   140001c4d:	mov    rcx,rax
   140001c50:	call   0x140001bdc
   140001c55:	test   rax,rax
   140001c58:	je     0x140001c75
   140001c5a:	mov    ecx,0x2
   140001c5f:	cmp    WORD PTR [rax+0x5c],cx
   140001c63:	jne    0x140001c69
   140001c65:	mov    eax,ecx
   140001c67:	jmp    0x140001c77
   140001c69:	cmp    WORD PTR [rax+0x5c],0x3
   140001c6e:	mov    eax,0x1
   140001c73:	je     0x140001c77
   140001c75:	mov    eax,ebx
   140001c77:	add    rsp,0x20
   140001c7b:	pop    rbx
   140001c7c:	ret    
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	int3   
   140001c81:	int3   
   140001c82:	int3   
   140001c83:	int3   
   140001c84:	jmp    QWORD PTR [rip+0x14ce]        # 0x140003158
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	xor    eax,eax
   140001c92:	ret    
   140001c93:	int3   
   140001c94:	int3   
   140001c95:	int3   
   140001c96:	int3   
   140001c97:	int3   
   140001c98:	int3   
   140001c99:	int3   
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140001ca4:	xor    r9d,r9d
   140001ca7:	add    r8,rcx
   140001caa:	mov    r10,rdx
   140001cad:	movzx  eax,WORD PTR [r8+0x14]
   140001cb2:	movzx  r11d,WORD PTR [r8+0x6]
   140001cb7:	add    rax,0x18
   140001cbb:	add    rax,r8
   140001cbe:	test   r11d,r11d
   140001cc1:	je     0x140001ce1
   140001cc3:	mov    edx,DWORD PTR [rax+0xc]
   140001cc6:	cmp    r10,rdx
   140001cc9:	jb     0x140001cd5
   140001ccb:	mov    ecx,DWORD PTR [rax+0x8]
   140001cce:	add    ecx,edx
   140001cd0:	cmp    r10,rcx
   140001cd3:	jb     0x140001ce3
   140001cd5:	inc    r9d
   140001cd8:	add    rax,0x28
   140001cdc:	cmp    r9d,r11d
   140001cdf:	jb     0x140001cc3
   140001ce1:	xor    eax,eax
   140001ce3:	ret    
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140001cf5:	push   rdi
   140001cf6:	sub    rsp,0x20
   140001cfa:	mov    rbx,rcx
   140001cfd:	lea    rdi,[rip+0xffffffffffffe2fc]        # 0x140000000
   140001d04:	mov    rcx,rdi
   140001d07:	call   0x140001d50
   140001d0c:	test   eax,eax
   140001d0e:	je     0x140001d32
   140001d10:	sub    rbx,rdi
   140001d13:	mov    rdx,rbx
   140001d16:	mov    rcx,rdi
   140001d19:	call   0x140001ca0
   140001d1e:	test   rax,rax
   140001d21:	je     0x140001d32
   140001d23:	mov    eax,DWORD PTR [rax+0x24]
   140001d26:	shr    eax,0x1f
   140001d29:	not    eax
   140001d2b:	and    eax,0x1
   140001d2e:	jmp    0x140001d32
   140001d30:	xor    eax,eax
   140001d32:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d37:	add    rsp,0x20
   140001d3b:	pop    rdi
   140001d3c:	ret    
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	int3   
   140001d41:	int3   
   140001d42:	int3   
   140001d43:	int3   
   140001d44:	int3   
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	mov    rax,rcx
   140001d53:	mov    ecx,0x5a4d
   140001d58:	cmp    WORD PTR [rax],cx
   140001d5b:	je     0x140001d60
   140001d5d:	xor    eax,eax
   140001d5f:	ret    
   140001d60:	movsxd rcx,DWORD PTR [rax+0x3c]
   140001d64:	add    rcx,rax
   140001d67:	xor    eax,eax
   140001d69:	cmp    DWORD PTR [rcx],0x4550
   140001d6f:	jne    0x140001d7d
   140001d71:	mov    edx,0x20b
   140001d76:	cmp    WORD PTR [rcx+0x18],dx
   140001d7a:	sete   al
   140001d7d:	ret    
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	int3   
   140001d81:	int3   
   140001d82:	int3   
   140001d83:	int3   
   140001d84:	mov    QWORD PTR [rsp+0x20],rbx
   140001d89:	push   rbp
   140001d8a:	mov    rbp,rsp
   140001d8d:	sub    rsp,0x20
   140001d91:	and    QWORD PTR [rbp+0x18],0x0
   140001d96:	movabs rbx,0x2b992ddfa232
   140001da0:	mov    rax,QWORD PTR [rip+0x2261]        # 0x140004008
   140001da7:	cmp    rax,rbx
   140001daa:	jne    0x140001e3f
   140001db0:	lea    rcx,[rbp+0x18]
   140001db4:	call   QWORD PTR [rip+0x12e6]        # 0x1400030a0
   140001dba:	mov    rax,QWORD PTR [rbp+0x18]
   140001dbe:	mov    QWORD PTR [rbp+0x10],rax
   140001dc2:	call   QWORD PTR [rip+0x12e8]        # 0x1400030b0
   140001dc8:	mov    eax,eax
   140001dca:	xor    QWORD PTR [rbp+0x10],rax
   140001dce:	call   QWORD PTR [rip+0x12d4]        # 0x1400030a8
   140001dd4:	mov    eax,eax
   140001dd6:	xor    QWORD PTR [rbp+0x10],rax
   140001dda:	call   QWORD PTR [rip+0x12b8]        # 0x140003098
   140001de0:	mov    eax,eax
   140001de2:	shl    rax,0x18
   140001de6:	xor    QWORD PTR [rbp+0x10],rax
   140001dea:	call   QWORD PTR [rip+0x12a8]        # 0x140003098
   140001df0:	mov    eax,eax
   140001df2:	lea    rcx,[rbp+0x10]
   140001df6:	xor    rax,QWORD PTR [rbp+0x10]
   140001dfa:	xor    rax,rcx
   140001dfd:	lea    rcx,[rbp+0x20]
   140001e01:	mov    QWORD PTR [rbp+0x10],rax
   140001e05:	call   QWORD PTR [rip+0x12ad]        # 0x1400030b8
   140001e0b:	mov    eax,DWORD PTR [rbp+0x20]
   140001e0e:	movabs rcx,0xffffffffffff
   140001e18:	shl    rax,0x20
   140001e1c:	xor    rax,QWORD PTR [rbp+0x20]
   140001e20:	xor    rax,QWORD PTR [rbp+0x10]
   140001e24:	and    rax,rcx
   140001e27:	movabs rcx,0x2b992ddfa233
   140001e31:	cmp    rax,rbx
   140001e34:	cmove  rax,rcx
   140001e38:	mov    QWORD PTR [rip+0x21c9],rax        # 0x140004008
   140001e3f:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e44:	not    rax
   140001e47:	mov    QWORD PTR [rip+0x21c2],rax        # 0x140004010
   140001e4e:	add    rsp,0x20
   140001e52:	pop    rbp
   140001e53:	ret    
   140001e54:	int3   
   140001e55:	int3   
   140001e56:	int3   
   140001e57:	int3   
   140001e58:	int3   
   140001e59:	int3   
   140001e5a:	jmp    QWORD PTR [rip+0x12b8]        # 0x140003118
   140001e60:	int3   
   140001e61:	int3   
   140001e62:	int3   
   140001e63:	int3   
   140001e64:	int3   
   140001e65:	int3   
   140001e66:	jmp    QWORD PTR [rip+0x12a4]        # 0x140003110
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	int3   
   140001e71:	int3   
   140001e72:	int3   
   140001e73:	int3   
   140001e74:	int3   
   140001e75:	int3   
   140001e76:	int3   
   140001e77:	int3   
   140001e78:	int3   
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	ret    0x0
   140001e83:	int3   
   140001e84:	int3   
   140001e85:	int3   
   140001e86:	int3   
   140001e87:	int3   
   140001e88:	int3   
   140001e89:	int3   
   140001e8a:	int3   
   140001e8b:	int3   
   140001e8c:	rex push rbx
   140001e8e:	sub    rsp,0x20
   140001e92:	mov    rbx,rcx
   140001e95:	xor    ecx,ecx
   140001e97:	call   QWORD PTR [rip+0x1233]        # 0x1400030d0
   140001e9d:	mov    rcx,rbx
   140001ea0:	call   QWORD PTR [rip+0x11d2]        # 0x140003078
   140001ea6:	call   QWORD PTR [rip+0x11c4]        # 0x140003070
   140001eac:	mov    rcx,rax
   140001eaf:	mov    edx,0xc0000409
   140001eb4:	add    rsp,0x20
   140001eb8:	pop    rbx
   140001eb9:	rex.W jmp QWORD PTR [rip+0x11a8]        # 0x140003068
   140001ec0:	int3   
   140001ec1:	int3   
   140001ec2:	int3   
   140001ec3:	int3   
   140001ec4:	int3   
   140001ec5:	int3   
   140001ec6:	int3   
   140001ec7:	int3   
   140001ec8:	int3   
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	mov    QWORD PTR [rsp+0x8],rcx
   140001ed5:	sub    rsp,0x88
   140001edc:	lea    rcx,[rip+0x221d]        # 0x140004100
   140001ee3:	call   QWORD PTR [rip+0x11a7]        # 0x140003090
   140001ee9:	mov    rax,QWORD PTR [rip+0x2308]        # 0x1400041f8
   140001ef0:	mov    QWORD PTR [rsp+0x48],rax
   140001ef5:	xor    r8d,r8d
   140001ef8:	lea    rdx,[rsp+0x50]
   140001efd:	mov    rcx,QWORD PTR [rsp+0x48]
   140001f02:	call   QWORD PTR [rip+0x1180]        # 0x140003088
   140001f08:	mov    QWORD PTR [rsp+0x40],rax
   140001f0d:	cmp    QWORD PTR [rsp+0x40],0x0
   140001f13:	je     0x140001f57
   140001f15:	mov    QWORD PTR [rsp+0x38],0x0
   140001f1e:	lea    rax,[rsp+0x58]
   140001f23:	mov    QWORD PTR [rsp+0x30],rax
   140001f28:	lea    rax,[rsp+0x60]
   140001f2d:	mov    QWORD PTR [rsp+0x28],rax
   140001f32:	lea    rax,[rip+0x21c7]        # 0x140004100
   140001f39:	mov    QWORD PTR [rsp+0x20],rax
   140001f3e:	mov    r9,QWORD PTR [rsp+0x40]
   140001f43:	mov    r8,QWORD PTR [rsp+0x48]
   140001f48:	mov    rdx,QWORD PTR [rsp+0x50]
   140001f4d:	xor    ecx,ecx
   140001f4f:	call   QWORD PTR [rip+0x112b]        # 0x140003080
   140001f55:	jmp    0x140001f7a
   140001f57:	mov    rax,QWORD PTR [rip+0x223a]        # 0x140004198
   140001f5e:	mov    rax,QWORD PTR [rax]
   140001f61:	mov    QWORD PTR [rip+0x2290],rax        # 0x1400041f8
   140001f68:	mov    rax,QWORD PTR [rip+0x2229]        # 0x140004198
   140001f6f:	add    rax,0x8
   140001f73:	mov    QWORD PTR [rip+0x221e],rax        # 0x140004198
   140001f7a:	mov    rax,QWORD PTR [rip+0x2277]        # 0x1400041f8
   140001f81:	mov    QWORD PTR [rip+0x20e8],rax        # 0x140004070
   140001f88:	mov    rax,QWORD PTR [rsp+0x90]
   140001f90:	mov    QWORD PTR [rip+0x21e9],rax        # 0x140004180
   140001f97:	mov    DWORD PTR [rip+0x20bf],0xc0000409        # 0x140004060
   140001fa1:	mov    DWORD PTR [rip+0x20b9],0x1        # 0x140004064
   140001fab:	mov    DWORD PTR [rip+0x20c3],0x3        # 0x140004078
   140001fb5:	mov    eax,0x8
   140001fba:	imul   rax,rax,0x0
   140001fbe:	lea    rcx,[rip+0x20bb]        # 0x140004080
   140001fc5:	mov    QWORD PTR [rcx+rax*1],0x2
   140001fcd:	mov    eax,0x8
   140001fd2:	imul   rax,rax,0x1
   140001fd6:	lea    rcx,[rip+0x20a3]        # 0x140004080
   140001fdd:	mov    rdx,QWORD PTR [rip+0x2024]        # 0x140004008
   140001fe4:	mov    QWORD PTR [rcx+rax*1],rdx
   140001fe8:	mov    eax,0x8
   140001fed:	imul   rax,rax,0x2
   140001ff1:	lea    rcx,[rip+0x2088]        # 0x140004080
   140001ff8:	mov    rdx,QWORD PTR [rip+0x2011]        # 0x140004010
   140001fff:	mov    QWORD PTR [rcx+rax*1],rdx
   140002003:	mov    eax,0x8
   140002008:	imul   rax,rax,0x0
   14000200c:	mov    rcx,QWORD PTR [rip+0x1ff5]        # 0x140004008
   140002013:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002018:	mov    eax,0x8
   14000201d:	imul   rax,rax,0x1
   140002021:	mov    rcx,QWORD PTR [rip+0x1fe8]        # 0x140004010
   140002028:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000202d:	lea    rcx,[rip+0x11bc]        # 0x1400031f0
   140002034:	call   0x140001e8c
   140002039:	add    rsp,0x88
   140002040:	ret    
   140002041:	int3   
   140002042:	int3   
   140002043:	int3   
   140002044:	int3   
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	int3   
   140002051:	int3   
   140002052:	int3   
   140002053:	int3   
   140002054:	int3   
   140002055:	int3   
   140002056:	int3   
   140002057:	int3   
   140002058:	int3   
   140002059:	int3   
   14000205a:	int3   
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	lea    rax,[rip+0x3fa9]        # 0x140006010
   140002067:	jmp    0x140002080
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	int3   
   140002071:	int3   
   140002072:	int3   
   140002073:	int3   
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	mov    QWORD PTR [rsp+0x8],rcx
   140002085:	mov    QWORD PTR [rsp+0x10],rdx
   14000208a:	mov    QWORD PTR [rsp+0x18],r8
   14000208f:	mov    QWORD PTR [rsp+0x20],r9
   140002094:	sub    rsp,0x68
   140002098:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000209e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400020a4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400020aa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400020b0:	mov    rdx,rax
   1400020b3:	lea    rcx,[rip+0x162a]        # 0x1400036e4
   1400020ba:	call   0x1400012b0
   1400020bf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400020c5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400020cb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400020d1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400020d7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400020dc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400020e1:	mov    r8,QWORD PTR [rsp+0x80]
   1400020e9:	mov    r9,QWORD PTR [rsp+0x88]
   1400020f1:	add    rsp,0x68
   1400020f5:	jmp    0x1400020f7
   1400020f7:	jmp    rax
   1400020f9:	int3   
   1400020fa:	int3   
   1400020fb:	int3   
   1400020fc:	int3   
   1400020fd:	int3   
   1400020fe:	int3   
   1400020ff:	int3   
   140002100:	lea    rax,[rip+0x3f01]        # 0x140006008
   140002107:	jmp    0x140002080
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	int3   
   140002111:	int3   
   140002112:	int3   
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	int3   
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	lea    rax,[rip+0x3ed9]        # 0x140006000
   140002127:	jmp    0x140002080
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	int3   
   140002131:	int3   
   140002132:	int3   
   140002133:	int3   
   140002134:	int3   
   140002135:	int3   
   140002136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002140:	jmp    rax
   140002142:	int3   
   140002143:	int3   
   140002144:	int3   
   140002145:	int3   
   140002146:	int3   
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	int3   
   140002151:	int3   
   140002152:	int3   
   140002153:	int3   
   140002154:	int3   
   140002155:	int3   
   140002156:	rex push rbp
   140002158:	sub    rsp,0x20
   14000215c:	mov    rbp,rdx
   14000215f:	mov    rax,QWORD PTR [rcx]
   140002162:	mov    rdx,rcx
   140002165:	mov    ecx,DWORD PTR [rax]
   140002167:	call   0x140001bce
   14000216c:	nop
   14000216d:	add    rsp,0x20
   140002171:	pop    rbp
   140002172:	ret    
   140002173:	int3   
   140002174:	int3   
   140002175:	int3   
   140002176:	int3   
   140002177:	int3   
   140002178:	int3   
   140002179:	int3   
   14000217a:	int3   
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	rex push rbp
   140002182:	sub    rsp,0x20
   140002186:	mov    rbp,rdx
   140002189:	mov    rax,QWORD PTR [rcx]
   14000218c:	xor    ecx,ecx
   14000218e:	cmp    DWORD PTR [rax],0xc0000005
   140002194:	sete   cl
   140002197:	mov    eax,ecx
   140002199:	add    rsp,0x20
   14000219d:	pop    rbp
   14000219e:	ret    
   14000219f:	int3   

Disassembly of section .rdata:

0000000140003000 <.rdata>:
   140003000:	push   rax
   140003001:	cmp    DWORD PTR [rax],eax
   140003003:	add    BYTE PTR [rax],al
   140003005:	add    BYTE PTR [rax],al
   140003007:	add    BYTE PTR [rsi+0x39],bl
   14000300a:	add    BYTE PTR [rax],al
   14000300c:	add    BYTE PTR [rax],al
   14000300e:	add    BYTE PTR [rax],al
   140003010:	jl     0x14000304b
   140003012:	add    BYTE PTR [rax],al
   140003014:	add    BYTE PTR [rax],al
   140003016:	add    BYTE PTR [rax],al
   140003018:	mov    WORD PTR [rcx],?
   14000301a:	add    BYTE PTR [rax],al
   14000301c:	add    BYTE PTR [rax],al
   14000301e:	add    BYTE PTR [rax],al
   140003020:	(bad)  
   140003021:	cmp    al,0x0
   140003023:	add    BYTE PTR [rax],al
   140003025:	add    BYTE PTR [rax],al
   140003027:	add    BYTE PTR [rax+0x3c],dl
   14000302a:	add    BYTE PTR [rax],al
   14000302c:	add    BYTE PTR [rax],al
   14000302e:	add    BYTE PTR [rax],al
   140003030:	cmp    al,0x0
   140003033:	add    BYTE PTR [rax],al
   140003035:	add    BYTE PTR [rax],al
   140003037:	add    BYTE PTR [rsi],ch
   140003039:	cmp    al,0x0
   14000303b:	add    BYTE PTR [rax],al
   14000303d:	add    BYTE PTR [rax],al
   14000303f:	add    BYTE PTR [rsp+rdi*1],dl
   140003042:	add    BYTE PTR [rax],al
   140003044:	add    BYTE PTR [rax],al
   140003046:	add    BYTE PTR [rax],al
   140003048:	add    bh,BYTE PTR [rax+rax*1]
   14000304b:	add    BYTE PTR [rax],al
   14000304d:	add    BYTE PTR [rax],al
   14000304f:	add    al,ch
   140003051:	cmp    eax,DWORD PTR [rax]
   140003053:	add    BYTE PTR [rax],al
   140003055:	add    BYTE PTR [rax],al
   140003057:	add    ah,bl
   140003059:	cmp    eax,DWORD PTR [rax]
   14000305b:	add    BYTE PTR [rax],al
   14000305d:	add    BYTE PTR [rax],al
   14000305f:	add    ah,cl
   140003061:	cmp    eax,DWORD PTR [rax]
   140003063:	add    BYTE PTR [rax],al
   140003065:	add    BYTE PTR [rax],al
   140003067:	add    BYTE PTR [rax+0x3b],bh
   14000306d:	add    BYTE PTR [rax],al
   14000306f:	add    BYTE PTR [rbx+rdi*1+0x0],ah
   140003076:	add    BYTE PTR [rax],al
   140003078:	mov    BYTE PTR [rbx],bh
   14000307a:	add    BYTE PTR [rax],al
   14000307c:	add    BYTE PTR [rax],al
   14000307e:	add    BYTE PTR [rax],al
   140003080:	je     0x1400030bd
   140003082:	add    BYTE PTR [rax],al
   140003084:	add    BYTE PTR [rax],al
   140003086:	add    BYTE PTR [rax],al
   140003088:	pop    rdx
   140003089:	cmp    eax,DWORD PTR [rax]
   14000308b:	add    BYTE PTR [rax],al
   14000308d:	add    BYTE PTR [rax],al
   14000308f:	add    BYTE PTR [rsi+0x3b],al
   140003092:	add    BYTE PTR [rax],al
   140003094:	add    BYTE PTR [rax],al
   140003096:	add    BYTE PTR [rax],al
   140003098:	cmp    eax,DWORD PTR ss:[rax]
   14000309b:	add    BYTE PTR [rax],al
   14000309d:	add    BYTE PTR [rax],al
   14000309f:	add    BYTE PTR [rbx+rdi*1],bl
   1400030a2:	add    BYTE PTR [rax],al
   1400030a4:	add    BYTE PTR [rax],al
   1400030a6:	add    BYTE PTR [rax],al
   1400030a8:	(bad)  
   1400030a9:	cmp    eax,DWORD PTR [rax]
   1400030ab:	add    BYTE PTR [rax],al
   1400030ad:	add    BYTE PTR [rax],al
   1400030af:	add    al,dh
   1400030b1:	cmp    al,BYTE PTR [rax]
   1400030b3:	add    BYTE PTR [rax],al
   1400030b5:	add    BYTE PTR [rax],al
   1400030b7:	add    dh,dl
   1400030b9:	cmp    al,BYTE PTR [rax]
   1400030bb:	add    BYTE PTR [rax],al
   1400030bd:	add    BYTE PTR [rax],al
   1400030bf:	add    BYTE PTR [rdx+0x3a],cl
   1400030c5:	add    BYTE PTR [rax],al
   1400030c7:	add    BYTE PTR [rdx+0x3a],dl
   1400030cd:	add    BYTE PTR [rax],al
   1400030cf:	add    BYTE PTR [rdx+rdi*1+0x0],ah
   1400030d6:	add    BYTE PTR [rax],al
   1400030d8:	ret    0x3a
   1400030db:	add    BYTE PTR [rax],al
   1400030dd:	add    BYTE PTR [rax],al
   1400030df:	add    BYTE PTR [rdx+0x3c],dh
	...
   1400030ee:	add    BYTE PTR [rax],al
   1400030f0:	jbe    0x14000312c
   1400030f2:	add    BYTE PTR [rax],al
   1400030f4:	add    BYTE PTR [rax],al
   1400030f6:	add    BYTE PTR [rax],al
   1400030f8:	pop    rsi
   1400030f9:	cmp    al,BYTE PTR [rax]
   1400030fb:	add    BYTE PTR [rax],al
   1400030fd:	add    BYTE PTR [rax],al
   1400030ff:	add    BYTE PTR [rdx+rdi*1+0x0],dl
   140003103:	add    BYTE PTR [rax],al
   140003105:	add    BYTE PTR [rax],al
   140003107:	add    BYTE PTR [rdx+0x3a],cl
   14000310a:	add    BYTE PTR [rax],al
   14000310c:	add    BYTE PTR [rax],al
   14000310e:	add    BYTE PTR [rax],al
   140003110:	xor    bh,BYTE PTR [rdx]
   140003112:	add    BYTE PTR [rax],al
   140003114:	add    BYTE PTR [rax],al
   140003116:	add    BYTE PTR [rax],al
   140003118:	cmp    al,BYTE PTR es:[rax]
   14000311b:	add    BYTE PTR [rax],al
   14000311d:	add    BYTE PTR [rax],al
   14000311f:	add    BYTE PTR [rdx],dl
   140003121:	cmp    al,BYTE PTR [rax]
   140003123:	add    BYTE PTR [rax],al
   140003125:	add    BYTE PTR [rax],al
   140003127:	add    BYTE PTR [rdx+rdi*1],al
   14000312a:	add    BYTE PTR [rax],al
   14000312c:	add    BYTE PTR [rax],al
   14000312e:	add    BYTE PTR [rax],al
   140003130:	cli    
   140003131:	cmp    DWORD PTR [rax],eax
   140003133:	add    BYTE PTR [rax],al
   140003135:	add    BYTE PTR [rax],al
   140003137:	add    dl,dh
   140003139:	cmp    DWORD PTR [rax],eax
   14000313b:	add    BYTE PTR [rax],al
   14000313d:	add    BYTE PTR [rax],al
   14000313f:	add    dl,ch
   140003141:	cmp    DWORD PTR [rax],eax
   140003143:	add    BYTE PTR [rax],al
   140003145:	add    BYTE PTR [rax],al
   140003147:	add    al,bl
   140003149:	cmp    DWORD PTR [rax],eax
   14000314b:	add    BYTE PTR [rax],al
   14000314d:	add    BYTE PTR [rax],al
   14000314f:	add    al,cl
   140003151:	cmp    DWORD PTR [rax],eax
   140003153:	add    BYTE PTR [rax],al
   140003155:	add    BYTE PTR [rax],al
   140003157:	add    BYTE PTR [rdx+0x39],bh
   14000315d:	add    BYTE PTR [rax],al
   14000315f:	add    BYTE PTR [rcx+rdi*1+0x0],ch
	...
   14000316e:	add    BYTE PTR [rax],al
   140003170:	sbb    BYTE PTR [rsi],0x0
   140003173:	rex add DWORD PTR [rax],eax
   140003176:	add    BYTE PTR [rax],al
   140003178:	rex and DWORD PTR [rax],eax
   14000317b:	rex add DWORD PTR [rax],eax
	...
   140003186:	add    BYTE PTR [rax],al
   140003188:	jo     0x1400031a2
   14000318a:	add    BYTE PTR [rax+0x1],al
	...
   14000319d:	add    BYTE PTR [rax],al
   14000319f:	add    BYTE PTR [rax+0x1400017],dl
   1400031a5:	add    BYTE PTR [rax],al
   1400031a7:	add    BYTE PTR [rax+0x140001b],dh
	...
   1400031b5:	add    BYTE PTR [rax],al
   1400031b7:	add    BYTE PTR [rax-0x6fffffee],dh
   1400031bd:	(bad)  
   1400031be:	add    BYTE PTR [rax],al
   1400031c0:	jo     0x1400031da
   1400031c2:	add    BYTE PTR [rax],al
   1400031c4:	rcr    BYTE PTR [rax],0x0
   1400031c7:	add    BYTE PTR [rax+0x1b],dh
   1400031ca:	add    BYTE PTR [rax],al
   1400031cc:	mov    al,0x1b
   1400031ce:	add    BYTE PTR [rax],al
   1400031d0:	nop
   1400031d1:	sbb    al,0x0
   1400031d3:	add    BYTE PTR [rax-0x2fffffe2],al
   1400031d9:	(bad)  
   1400031da:	add    BYTE PTR [rax],al
   1400031dc:	(bad)  
   1400031dd:	and    BYTE PTR [rax],al
   1400031df:	add    BYTE PTR [rax+0x20],al
   1400031e5:	and    DWORD PTR [rax],eax
   1400031e7:	add    BYTE PTR [rax],ah
   1400031e9:	and    DWORD PTR [rax],eax
   1400031eb:	add    BYTE PTR [rax],al
   1400031ed:	add    BYTE PTR [rax],al
   1400031ef:	add    BYTE PTR [rax+0x40],ah
   1400031f2:	add    BYTE PTR [rax+0x1],al
   1400031f5:	add    BYTE PTR [rax],al
   1400031f7:	add    BYTE PTR [rax],al
   1400031f9:	add    BYTE PTR [r8+0x1],al
   1400031fd:	add    BYTE PTR [rax],al
   1400031ff:	add    BYTE PTR [rdi+0x6c],ch
   140003202:	xor    esi,DWORD PTR gs:[rdx]
   140003205:	cs fs ins BYTE PTR es:[rdi],dx
   140003208:	ins    BYTE PTR es:[rdi],dx
   140003209:	add    BYTE PTR [rax],al
   14000320b:	add    BYTE PTR [rax],al
   14000320d:	add    BYTE PTR [rax],al
   14000320f:	add    BYTE PTR [rax+0x0],ah
	...
   140003265:	add    BYTE PTR [rax],al
   140003267:	add    BYTE PTR [rax],cl
   140003269:	add    BYTE PTR [rax+0x1],al
	...
   14000327d:	add    BYTE PTR [rax],al
   14000327f:	add    BYTE PTR [rax+0x31],dh
   140003282:	add    BYTE PTR [rax+0x1],al
   140003285:	add    BYTE PTR [rax],al
   140003287:	add    BYTE PTR [rax+0x31],bh
   14000328a:	add    BYTE PTR [rax+0x1],al
   14000328d:	add    BYTE PTR [rax],al
   14000328f:	add    BYTE PTR [rax+0x1400031],bh
   140003295:	add    BYTE PTR [rax],al
   140003297:	add    BYTE PTR [rip+0x0],cl        # 0x14000329d
   14000329d:	add    BYTE PTR [rax],al
   14000329f:	add    BYTE PTR [rax],al
   1400032a1:	xor    eax,0x0
	...
   1400032b6:	add    BYTE PTR [rax],al
   1400032b8:	ja     0x1400032ba
   1400032ba:	ins    DWORD PTR es:[rdi],dx
   1400032bb:	add    BYTE PTR [rax+0x0],dh
   1400032be:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400032c3:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400032c7:	add    cl,bl
   1400032c9:	sar    DWORD PTR [rbx],1
   1400032cb:	jp     0x140003276
   1400032cd:	xor    eax,0x67a44fb3
   1400032d2:	hlt    
   1400032d3:	mov    WORD PTR [rbp+rsi*1-0x45fb2f1e],gs
   1400032da:	ja     0x1400032ba
   1400032dc:	xchg   edx,eax
   1400032dd:	cmp    al,0x11
   1400032df:	rex.WRB movabs rax,ds:0xe3e0532a3542a5
	...
   1400032f1:	add    BYTE PTR [rax],al
   1400032f3:	add    BYTE PTR [rdx+0x559f38],al
   1400032f9:	add    BYTE PTR [rax],al
   1400032fb:	add    BYTE PTR [rdx],al
   1400032fd:	add    BYTE PTR [rax],al
   1400032ff:	add    BYTE PTR [rip+0x44000000],ah        # 0x184003305
   140003305:	xor    eax,DWORD PTR [rax]
   140003307:	add    BYTE PTR [rcx+rbx*1+0x0],al
   14000330b:	add    BYTE PTR [rax],al
   14000330d:	add    BYTE PTR [rax],al
   14000330f:	add    BYTE PTR [rdx+0x559f38],al
   140003315:	add    BYTE PTR [rax],al
   140003317:	add    BYTE PTR [rip+0x58000000],cl        # 0x19800331d
   14000331d:	add    al,BYTE PTR [rax]
   14000331f:	add    BYTE PTR [rax-0x7fffffcd],al
   140003325:	sbb    DWORD PTR [rax],eax
	...
   140003343:	add    BYTE PTR [rdx+0x53],dl
   140003346:	rex.R push rbx
   140003348:	rex.B
   140003349:	rex.WX cmp BYTE PTR [rax],0x28
   14000334d:	pop    rcx
   14000334e:	call   0x13689e898
   140003353:	push   0xffffffffd306b6d2
   140003358:	add    DWORD PTR [rax],eax
   14000335a:	add    BYTE PTR [rax],al
   14000335c:	ja     0x1400033cb
   14000335e:	jo     0x1400033d3
   140003360:	push   0x2e657261
   140003365:	jo     0x1400033cb
   140003367:	(bad)  
	...
   140003380:	rex.RXB
   140003381:	rex.XB push r12
   140003383:	rex.WR add BYTE PTR [rax],r10b
   140003386:	add    BYTE PTR [rax],al
   140003388:	sub    al,0x11
   14000338a:	add    BYTE PTR [rax],al
   14000338c:	cs je  0x1400033f4
   14000338f:	js     0x140003405
   140003391:	and    al,0x6d
   140003393:	outs   dx,BYTE PTR ds:[rsi]
   140003394:	add    BYTE PTR [rax],al
   140003396:	add    BYTE PTR [rax],al
   140003398:	xor    BYTE PTR [rcx],ah
   14000339a:	add    BYTE PTR [rax],al
   14000339c:	adc    al,BYTE PTR [rax]
   14000339e:	add    BYTE PTR [rax],al
   1400033a0:	cs je  0x140003408
   1400033a3:	js     0x140003419
   1400033a5:	and    al,0x6d
   1400033a7:	outs   dx,BYTE PTR ds:[rsi]
   1400033a8:	and    al,0x30
   1400033aa:	xor    BYTE PTR [rax],al
   1400033ac:	push   rax
   1400033ad:	and    DWORD PTR [rax],eax
   1400033af:	add    BYTE PTR [rax+0x0],dl
   1400033b2:	add    BYTE PTR [rax],al
   1400033b4:	cs je  0x14000341c
   1400033b7:	js     0x14000342d
   1400033b9:	and    al,0x78
   1400033bb:	add    BYTE PTR [rax],al
   1400033bd:	xor    BYTE PTR [rax],al
   1400033bf:	add    BYTE PTR [rax+0x1],dh
   1400033c2:	add    BYTE PTR [rax],al
   1400033c4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   1400033cd:	add    BYTE PTR [rax],al
   1400033cf:	add    BYTE PTR [rax+0x31],dh
   1400033d2:	add    BYTE PTR [rax],al
   1400033d4:	adc    BYTE PTR [rax],al
   1400033d6:	add    BYTE PTR [rax],al
   1400033d8:	xor    BYTE PTR cs:[rax],dh
   1400033db:	movsxd esp,DWORD PTR [rsi+0x67]
   1400033de:	add    BYTE PTR [rax],al
   1400033e0:	xor    BYTE PTR [rcx],0x0
   1400033e3:	add    BYTE PTR [rax],cl
   1400033e5:	add    BYTE PTR [rax],al
   1400033e7:	add    BYTE PTR [rsi],ch
   1400033e9:	rex.XB push r10
   1400033eb:	push   rsp
   1400033ec:	and    al,0x58
   1400033ee:	rex.XB
   1400033ef:	add    BYTE PTR [r8],al
   1400033f2:	add    BYTE PTR [rax],al
   1400033f4:	mov    BYTE PTR [rcx],dh
   1400033f6:	add    BYTE PTR [rax],al
   1400033f8:	or     BYTE PTR [rax],al
   1400033fa:	add    BYTE PTR [rax],al
   1400033fc:	cs rex.XB push r10
   1400033ff:	push   rsp
   140003400:	and    al,0x58
   140003402:	rex.XB
   140003403:	rex.B
   140003404:	add    BYTE PTR [r8],al
   140003407:	add    BYTE PTR [rax+0x8000031],dl
   14000340d:	add    BYTE PTR [rax],al
   14000340f:	add    BYTE PTR [rsi],ch
   140003411:	rex.XB push r10
   140003413:	push   rsp
   140003414:	and    al,0x58
   140003416:	rex.XB pop r10
   140003418:	add    BYTE PTR [rax],al
   14000341a:	add    BYTE PTR [rax],al
   14000341c:	cwde   
   14000341d:	xor    DWORD PTR [rax],eax
   14000341f:	add    BYTE PTR [rax],cl
   140003421:	add    BYTE PTR [rax],al
   140003423:	add    BYTE PTR [rsi],ch
   140003425:	rex.XB push r10
   140003427:	push   rsp
   140003428:	and    al,0x58
   14000342a:	rex.WB
   14000342b:	add    BYTE PTR [r8],al
   14000342e:	add    BYTE PTR [rax],al
   140003430:	movabs al,ds:0x2e00000008000031
   140003439:	rex.XB push r10
   14000343b:	push   rsp
   14000343c:	and    al,0x58
   14000343e:	rex.WB
   14000343f:	rex.B
   140003440:	add    BYTE PTR [r8],al
   140003443:	add    BYTE PTR [rax+0x8000031],ch
   140003449:	add    BYTE PTR [rax],al
   14000344b:	add    BYTE PTR [rsi],ch
   14000344d:	rex.XB push r10
   14000344f:	push   rsp
   140003450:	and    al,0x58
   140003452:	rex.WB pop r9
   140003454:	add    BYTE PTR [rax],al
   140003456:	add    BYTE PTR [rax],al
   140003458:	mov    al,0x31
   14000345a:	add    BYTE PTR [rax],al
   14000345c:	or     BYTE PTR [rax],al
   14000345e:	add    BYTE PTR [rax],al
   140003460:	cs rex.XB push r10
   140003463:	push   rsp
   140003464:	and    al,0x58
   140003466:	rex.WB pop r10
   140003468:	add    BYTE PTR [rax],al
   14000346a:	add    BYTE PTR [rax],al
   14000346c:	mov    eax,0x34000031
   140003471:	add    BYTE PTR [rax],al
   140003473:	add    BYTE PTR [rsi],ch
   140003475:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000347d:	add    BYTE PTR [rax],al
   14000347f:	add    al,dh
   140003481:	xor    DWORD PTR [rax],eax
   140003483:	add    BYTE PTR [rcx+rax*1+0x0],dl
   140003487:	add    BYTE PTR [rsi],ch
   140003489:	jb     0x1400034ef
   14000348b:	(bad)  
   14000348c:	je     0x1400034ef
   14000348e:	add    BYTE PTR [rax],al
   140003490:	xor    r8d,DWORD PTR [rax]
   140003493:	add    BYTE PTR [rdx+rax*1+0x722e0000],dl
   14000349a:	fs (bad) 
   14000349c:	je     0x1400034ff
   14000349e:	and    al,0x7a
   1400034a0:	jp     0x14000351c
   1400034a2:	fs (bad) 
   1400034a4:	add    BYTE PTR [eax],al
   1400034a7:	add    al,bl
   1400034a9:	xor    eax,0x10c0000
   1400034ae:	add    BYTE PTR [rax],al
   1400034b0:	cs js  0x140003517
   1400034b3:	(bad)  
   1400034b4:	je     0x140003517
   1400034b6:	add    BYTE PTR [rax],al
   1400034b8:	in     al,0x36
   1400034ba:	add    BYTE PTR [rax],al
   1400034bc:	and    BYTE PTR [rax],al
   1400034be:	add    BYTE PTR [rax],al
   1400034c0:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   1400034ca:	add    BYTE PTR [rax],al
   1400034cc:	add    al,0x37
   1400034ce:	add    BYTE PTR [rax],al
   1400034d0:	and    BYTE PTR [rax],al
   1400034d2:	add    BYTE PTR [rax],al
   1400034d4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   1400034de:	add    BYTE PTR [rax],al
   1400034e0:	sub    BYTE PTR [rdi],dh
   1400034e2:	add    BYTE PTR [rax],al
   1400034e4:	and    BYTE PTR [rax],al
   1400034e6:	add    BYTE PTR [rax],al
   1400034e8:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   1400034f2:	add    BYTE PTR [rax],al
   1400034f4:	rex.W (bad) 
   1400034f6:	add    BYTE PTR [rax],al
   1400034f8:	cmp    BYTE PTR [rax],al
   1400034fa:	add    BYTE PTR [rax],al
   1400034fc:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140003506:	add    BYTE PTR [rax],al
   140003508:	xor    BYTE PTR [rdi],0x0
   14000350b:	add    BYTE PTR [rax],ah
   14000350d:	add    BYTE PTR [rax],al
   14000350f:	add    BYTE PTR [rsi],ch
   140003511:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000351a:	add    BYTE PTR [rax],al
   14000351c:	movabs al,ds:0x2e00000028000037
   140003525:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000352d:	add    BYTE PTR [rax],al
   14000352f:	add    al,cl
   140003531:	(bad)  
   140003532:	add    BYTE PTR [rax],al
   140003534:	adc    al,0x0
   140003536:	add    BYTE PTR [rax],al
   140003538:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140003541:	add    BYTE PTR [rax],al
   140003543:	add    al,ah
   140003545:	(bad)  
   140003546:	add    BYTE PTR [rax],al
   140003548:	jo     0x14000354b
   14000354a:	add    BYTE PTR [rax],al
   14000354c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140003555:	add    BYTE PTR [rax],al
   140003557:	add    BYTE PTR [rax+0x39],dl
   14000355a:	add    BYTE PTR [rax],al
   14000355c:	xor    al,0x3
   14000355e:	add    BYTE PTR [rax],al
   140003560:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140003569:	add    BYTE PTR [rax],al
   14000356b:	add    BYTE PTR [rax],al
   14000356d:	add    BYTE PTR [rax],al
   140003570:	and    BYTE PTR [rax],al
   140003572:	add    BYTE PTR [rax],al
   140003574:	cs fs (bad) 
   140003577:	je     0x1400035da
   140003579:	add    BYTE PTR [rax],al
   14000357b:	add    BYTE PTR [rax],ah
   14000357d:	add    BYTE PTR [rax],al
   140003580:	cld    
   140003581:	add    eax,0x622e0000
   140003586:	jae    0x1400035fb
   140003588:	add    BYTE PTR [rax],al
   14000358a:	add    BYTE PTR [rax],al
   14000358c:	add    BYTE PTR [rax+0x0],dl
   14000358f:	add    ah,bh
   140003591:	add    BYTE PTR [rax],al
   140003593:	add    BYTE PTR [rsi],ch
   140003595:	jo     0x1400035fb
   140003597:	(bad)  
   140003598:	je     0x1400035fb
   14000359a:	add    BYTE PTR [rax],al
   14000359c:	add    BYTE PTR [rax+0x0],ah
   14000359f:	add    BYTE PTR [rax],ah
   1400035a1:	add    BYTE PTR [rax],al
   1400035a3:	add    BYTE PTR [rsi],ch
   1400035a5:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   1400035ae:	add    BYTE PTR [rax],al
   1400035b0:	add    BYTE PTR [rax+0x0],dh
   1400035b3:	add    BYTE PTR [rsp+rax*1],bl
   1400035b6:	add    BYTE PTR [rax],al
   1400035b8:	cs jb  0x14000362e
   1400035bb:	jb     0x140003620
   1400035bd:	and    al,0x30
   1400035bf:	xor    DWORD PTR [rax],eax
   1400035c1:	add    BYTE PTR [rax],al
   1400035c3:	add    BYTE PTR [rax],ah
   1400035c5:	je     0x1400035c7
   1400035c7:	add    al,ch
   1400035c9:	ins    DWORD PTR es:[rdi],dx
   1400035ca:	add    DWORD PTR [rax],eax
   1400035cc:	cs jb  0x140003642
   1400035cf:	jb     0x140003634
   1400035d1:	and    al,0x30
   1400035d3:	xor    al,BYTE PTR [rax]
   1400035d5:	add    BYTE PTR [rax],al
   1400035d7:	add    BYTE PTR [rcx],al
   1400035d9:	or     al,BYTE PTR [rax+rax*1]
   1400035dc:	or     dh,BYTE PTR [rdx+rcx*1]
   1400035df:	add    BYTE PTR [rdx],cl
   1400035e1:	jb     0x1400035e9
   1400035e3:	jo     0x1400035e6
   1400035e5:	or     eax,0x340d0004
   1400035ea:	adc    al,BYTE PTR [rax]
   1400035ec:	or     eax,0x17006f2
   1400035f1:	adc    cl,BYTE PTR [rax]
   1400035f3:	add    BYTE PTR [rdx],dl
   1400035f5:	push   rsp
   1400035f6:	or     DWORD PTR [rax],eax
   1400035f8:	adc    dh,BYTE PTR [rax+rcx*1]
   1400035fb:	add    BYTE PTR [rdx],dl
   1400035fd:	xor    cl,BYTE PTR [rsi]
   1400035ff:	loopne 0x14000360d
   140003601:	jo     0x14000360e
   140003603:	(bad)  
   140003604:	add    DWORD PTR [rbx],ebx
   140003606:	or     DWORD PTR [rax],eax
   140003608:	sbb    eax,DWORD PTR [rcx]
   14000360a:	adc    al,0x0
   14000360c:	(bad)  
   14000360e:	or     eax,0x9c00bd0
   140003613:	jo     0x14000361d
   140003615:	(bad)  
   140003616:	(bad)  
   140003617:	xor    BYTE PTR [rsi],al
   140003619:	push   rax
   14000361a:	add    BYTE PTR [rax],al
   14000361c:	add    DWORD PTR [rcx+rax*1],eax
   14000361f:	add    BYTE PTR [rdx+rax*2],al
   140003622:	add    BYTE PTR [rax],al
   140003624:	add    DWORD PTR [rcx+rax*1],eax
   140003627:	add    BYTE PTR [rdx+riz*2],al
   14000362a:	add    BYTE PTR [rax],al
   14000362c:	or     DWORD PTR [rax],ebx
   14000362e:	or     DWORD PTR [rax],eax
   140003630:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140003634:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   140003638:	sbb    BYTE PTR [rax+rbx*1],dh
   14000363b:	add    BYTE PTR [rax],bl
   14000363d:	add    DWORD PTR [rsi],edx
   14000363f:	add    BYTE PTR [rcx],dl
   140003641:	lock add BYTE PTR [rax],al
   140003644:	data16 (bad) 
   140003646:	add    BYTE PTR [rax],al
   140003648:	add    DWORD PTR [rax],eax
   14000364a:	add    BYTE PTR [rax],al
   14000364c:	add    BYTE PTR [rcx],bl
   14000364e:	add    BYTE PTR [rax],al
   140003650:	out    0x1a,eax
   140003652:	add    BYTE PTR [rax],al
   140003654:	push   rsi
   140003655:	and    DWORD PTR [rax],eax
   140003657:	add    bh,ah
   140003659:	sbb    al,BYTE PTR [rax]
   14000365b:	add    BYTE PTR [rax],al
   14000365d:	add    BYTE PTR [rax],al
   14000365f:	add    BYTE PTR [rcx],al
   140003661:	add    BYTE PTR [rax],al
   140003663:	add    BYTE PTR [rcx],cl
   140003665:	add    al,0x1
   140003667:	add    BYTE PTR [rdx+riz*1],al
   14000366a:	add    BYTE PTR [rax],al
   14000366c:	data16 (bad) 
   14000366e:	add    BYTE PTR [rax],al
   140003670:	add    DWORD PTR [rax],eax
   140003672:	add    BYTE PTR [rax],al
   140003674:	in     al,dx
   140003675:	sbb    eax,DWORD PTR [rax]
   140003677:	add    BYTE PTR [rdx],ah
   140003679:	sbb    al,0x0
   14000367b:	add    BYTE PTR [rcx],al
   14000367d:	add    BYTE PTR [rax],al
   14000367f:	add    BYTE PTR [rdx],ah
   140003681:	sbb    al,0x0
   140003683:	add    BYTE PTR [rcx],al
   140003685:	(bad)  
   140003686:	add    al,BYTE PTR [rax]
   140003688:	(bad)  
   140003689:	xor    al,BYTE PTR [rdx]
   14000368b:	xor    BYTE PTR [rcx],cl
   14000368d:	or     al,BYTE PTR [rax+rax*1]
   140003690:	or     dh,BYTE PTR [rsi+rax*1]
   140003693:	add    BYTE PTR [rdx],cl
   140003695:	xor    al,BYTE PTR [rsi]
   140003697:	jo     0x1400036ff
   140003699:	(bad)  
   14000369a:	add    BYTE PTR [rax],al
   14000369c:	add    DWORD PTR [rax],eax
   14000369e:	add    BYTE PTR [rax],al
   1400036a0:	std    
   1400036a1:	sbb    al,0x0
   1400036a3:	add    BYTE PTR [rax],dh
   1400036a5:	sbb    eax,0x21800000
   1400036aa:	add    BYTE PTR [rax],al
   1400036ac:	xor    BYTE PTR [rip+0x6010000],bl        # 0x1460136b2
   1400036b2:	add    al,BYTE PTR [rax]
   1400036b4:	(bad)  
   1400036b5:	xor    al,BYTE PTR [rdx]
   1400036b7:	push   rax
   1400036b8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d36c2
   1400036be:	or     DWORD PTR [rax],eax
   1400036c0:	or     eax,0x1500632
   1400036c5:	or     al,0x2
   1400036c7:	add    BYTE PTR [rcx+rax*1],cl
   1400036ca:	adc    DWORD PTR [rax],eax
   1400036cc:	add    BYTE PTR [rax],al
   1400036ce:	add    BYTE PTR [rax],al
   1400036d0:	add    DWORD PTR [rax],eax
   1400036d2:	add    BYTE PTR [rax],al
   1400036d4:	add    DWORD PTR [rax],ebx
   1400036d6:	add    DWORD PTR [rax],eax
   1400036d8:	sbb    dl,al
   1400036da:	add    BYTE PTR [rax],al
   1400036dc:	add    DWORD PTR [rax],ebx
   1400036de:	add    DWORD PTR [rax],eax
   1400036e0:	sbb    dl,al
   1400036e2:	add    BYTE PTR [rax],al
   1400036e4:	add    DWORD PTR [rax],eax
   1400036e6:	add    BYTE PTR [rax],al
   1400036e8:	add    BYTE PTR [rdx],dh
   1400036ea:	add    BYTE PTR [rax],al
   1400036ec:	rol    BYTE PTR [rbp+0x0],1
   1400036ef:	add    BYTE PTR [rax],al
   1400036f1:	(bad)  
   1400036f2:	add    BYTE PTR [rax],al
   1400036f4:	sub    BYTE PTR [rdi],dh
   1400036f6:	add    BYTE PTR [rax],al
   1400036f8:	xor    BYTE PTR [rdi],0x0
	...
   140003727:	add    BYTE PTR [rsi+0x37],ch
   14000372a:	add    BYTE PTR [rax],al
   14000372c:	add    BYTE PTR [rax],al
   14000372e:	add    BYTE PTR [rax],al
   140003730:	pop    rsp
   140003731:	(bad)  
   140003732:	add    BYTE PTR [rax],al
   140003734:	add    BYTE PTR [rax],al
   140003736:	add    BYTE PTR [rax],al
   140003738:	rex.W (bad) 
	...
   14000374a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000374c:	rex.XB jb 0x1400037b4
   14000374f:	(bad)  
   140003750:	je     0x1400037b7
   140003752:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003754:	jae    0x1400037ca
   140003756:	(bad)  
   140003757:	outs   dx,BYTE PTR ds:[rsi]
   140003758:	movsxd esp,DWORD PTR [rbp+0x0]
   14000375b:	add    BYTE PTR [rax],al
   14000375d:	add    BYTE PTR [rbx+0x6f],al
   140003760:	push   rbp
   140003761:	outs   dx,BYTE PTR ds:[rsi]
   140003762:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140003769:	imul   edi,DWORD PTR [rdx+0x65],0x0
   140003770:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140003772:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003774:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000377c:	rex.RB js 0x14000377f
	...
   14000379f:	add    al,ah
   1400037a1:	(bad)  
	...
   1400037aa:	add    BYTE PTR [rax],al
   1400037ac:	sahf   
   1400037ad:	cmp    DWORD PTR [rax],eax
   1400037af:	add    BYTE PTR [rax],al
   1400037b1:	xor    BYTE PTR [rax],al
   1400037b3:	add    al,dl
   1400037b5:	cmp    BYTE PTR [rax],al
	...
   1400037bf:	add    BYTE PTR [rdx+0x3a],ch
   1400037c2:	add    BYTE PTR [rax],al
   1400037c4:	lock xor BYTE PTR [rax],al
	...
   1400037df:	add    BYTE PTR [rax+0x39],dl
   1400037e2:	add    BYTE PTR [rax],al
   1400037e4:	add    BYTE PTR [rax],al
   1400037e6:	add    BYTE PTR [rax],al
   1400037e8:	pop    rsi
   1400037e9:	cmp    DWORD PTR [rax],eax
   1400037eb:	add    BYTE PTR [rax],al
   1400037ed:	add    BYTE PTR [rax],al
   1400037ef:	add    BYTE PTR [rcx+rdi*1+0x0],bh
   1400037f3:	add    BYTE PTR [rax],al
   1400037f5:	add    BYTE PTR [rax],al
   1400037f7:	add    BYTE PTR [rcx+rdi*1+0x0],cl
   1400037fe:	add    BYTE PTR [rax],al
   140003800:	(bad)  
   140003801:	cmp    al,0x0
   140003803:	add    BYTE PTR [rax],al
   140003805:	add    BYTE PTR [rax],al
   140003807:	add    BYTE PTR [rax+0x3c],dl
   14000380a:	add    BYTE PTR [rax],al
   14000380c:	add    BYTE PTR [rax],al
   14000380e:	add    BYTE PTR [rax],al
   140003810:	cmp    al,0x0
   140003813:	add    BYTE PTR [rax],al
   140003815:	add    BYTE PTR [rax],al
   140003817:	add    BYTE PTR [rsi],ch
   140003819:	cmp    al,0x0
   14000381b:	add    BYTE PTR [rax],al
   14000381d:	add    BYTE PTR [rax],al
   14000381f:	add    BYTE PTR [rsp+rdi*1],dl
   140003822:	add    BYTE PTR [rax],al
   140003824:	add    BYTE PTR [rax],al
   140003826:	add    BYTE PTR [rax],al
   140003828:	add    bh,BYTE PTR [rax+rax*1]
   14000382b:	add    BYTE PTR [rax],al
   14000382d:	add    BYTE PTR [rax],al
   14000382f:	add    al,ch
   140003831:	cmp    eax,DWORD PTR [rax]
   140003833:	add    BYTE PTR [rax],al
   140003835:	add    BYTE PTR [rax],al
   140003837:	add    ah,bl
   140003839:	cmp    eax,DWORD PTR [rax]
   14000383b:	add    BYTE PTR [rax],al
   14000383d:	add    BYTE PTR [rax],al
   14000383f:	add    ah,cl
   140003841:	cmp    eax,DWORD PTR [rax]
   140003843:	add    BYTE PTR [rax],al
   140003845:	add    BYTE PTR [rax],al
   140003847:	add    BYTE PTR [rax+0x3b],bh
   14000384d:	add    BYTE PTR [rax],al
   14000384f:	add    BYTE PTR [rbx+rdi*1+0x0],ah
   140003856:	add    BYTE PTR [rax],al
   140003858:	mov    BYTE PTR [rbx],bh
   14000385a:	add    BYTE PTR [rax],al
   14000385c:	add    BYTE PTR [rax],al
   14000385e:	add    BYTE PTR [rax],al
   140003860:	je     0x14000389d
   140003862:	add    BYTE PTR [rax],al
   140003864:	add    BYTE PTR [rax],al
   140003866:	add    BYTE PTR [rax],al
   140003868:	pop    rdx
   140003869:	cmp    eax,DWORD PTR [rax]
   14000386b:	add    BYTE PTR [rax],al
   14000386d:	add    BYTE PTR [rax],al
   14000386f:	add    BYTE PTR [rsi+0x3b],al
   140003872:	add    BYTE PTR [rax],al
   140003874:	add    BYTE PTR [rax],al
   140003876:	add    BYTE PTR [rax],al
   140003878:	cmp    eax,DWORD PTR ss:[rax]
   14000387b:	add    BYTE PTR [rax],al
   14000387d:	add    BYTE PTR [rax],al
   14000387f:	add    BYTE PTR [rbx+rdi*1],bl
   140003882:	add    BYTE PTR [rax],al
   140003884:	add    BYTE PTR [rax],al
   140003886:	add    BYTE PTR [rax],al
   140003888:	(bad)  
   140003889:	cmp    eax,DWORD PTR [rax]
   14000388b:	add    BYTE PTR [rax],al
   14000388d:	add    BYTE PTR [rax],al
   14000388f:	add    al,dh
   140003891:	cmp    al,BYTE PTR [rax]
   140003893:	add    BYTE PTR [rax],al
   140003895:	add    BYTE PTR [rax],al
   140003897:	add    dh,dl
   140003899:	cmp    al,BYTE PTR [rax]
   14000389b:	add    BYTE PTR [rax],al
   14000389d:	add    BYTE PTR [rax],al
   14000389f:	add    BYTE PTR [rdx+0x3a],cl
   1400038a5:	add    BYTE PTR [rax],al
   1400038a7:	add    BYTE PTR [rdx+0x3a],dl
   1400038ad:	add    BYTE PTR [rax],al
   1400038af:	add    BYTE PTR [rdx+rdi*1+0x0],ah
   1400038b6:	add    BYTE PTR [rax],al
   1400038b8:	ret    0x3a
   1400038bb:	add    BYTE PTR [rax],al
   1400038bd:	add    BYTE PTR [rax],al
   1400038bf:	add    BYTE PTR [rdx+0x3c],dh
	...
   1400038ce:	add    BYTE PTR [rax],al
   1400038d0:	jbe    0x14000390c
   1400038d2:	add    BYTE PTR [rax],al
   1400038d4:	add    BYTE PTR [rax],al
   1400038d6:	add    BYTE PTR [rax],al
   1400038d8:	pop    rsi
   1400038d9:	cmp    al,BYTE PTR [rax]
   1400038db:	add    BYTE PTR [rax],al
   1400038dd:	add    BYTE PTR [rax],al
   1400038df:	add    BYTE PTR [rdx+rdi*1+0x0],dl
   1400038e3:	add    BYTE PTR [rax],al
   1400038e5:	add    BYTE PTR [rax],al
   1400038e7:	add    BYTE PTR [rdx+0x3a],cl
   1400038ea:	add    BYTE PTR [rax],al
   1400038ec:	add    BYTE PTR [rax],al
   1400038ee:	add    BYTE PTR [rax],al
   1400038f0:	xor    bh,BYTE PTR [rdx]
   1400038f2:	add    BYTE PTR [rax],al
   1400038f4:	add    BYTE PTR [rax],al
   1400038f6:	add    BYTE PTR [rax],al
   1400038f8:	cmp    al,BYTE PTR es:[rax]
   1400038fb:	add    BYTE PTR [rax],al
   1400038fd:	add    BYTE PTR [rax],al
   1400038ff:	add    BYTE PTR [rdx],dl
   140003901:	cmp    al,BYTE PTR [rax]
   140003903:	add    BYTE PTR [rax],al
   140003905:	add    BYTE PTR [rax],al
   140003907:	add    BYTE PTR [rdx+rdi*1],al
   14000390a:	add    BYTE PTR [rax],al
   14000390c:	add    BYTE PTR [rax],al
   14000390e:	add    BYTE PTR [rax],al
   140003910:	cli    
   140003911:	cmp    DWORD PTR [rax],eax
   140003913:	add    BYTE PTR [rax],al
   140003915:	add    BYTE PTR [rax],al
   140003917:	add    dl,dh
   140003919:	cmp    DWORD PTR [rax],eax
   14000391b:	add    BYTE PTR [rax],al
   14000391d:	add    BYTE PTR [rax],al
   14000391f:	add    dl,ch
   140003921:	cmp    DWORD PTR [rax],eax
   140003923:	add    BYTE PTR [rax],al
   140003925:	add    BYTE PTR [rax],al
   140003927:	add    al,bl
   140003929:	cmp    DWORD PTR [rax],eax
   14000392b:	add    BYTE PTR [rax],al
   14000392d:	add    BYTE PTR [rax],al
   14000392f:	add    al,cl
   140003931:	cmp    DWORD PTR [rax],eax
   140003933:	add    BYTE PTR [rax],al
   140003935:	add    BYTE PTR [rax],al
   140003937:	add    BYTE PTR [rdx+0x39],bh
   14000393d:	add    BYTE PTR [rax],al
   14000393f:	add    BYTE PTR [rcx+rdi*1+0x0],ch
	...
   14000394e:	add    BYTE PTR [rax],al
   140003950:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140003951:	add    DWORD PTR [rsi+0x72],eax
   140003954:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000395e:	mov    WORD PTR [rdx+rdx*2],es
   140003961:	imul   esi,DWORD PTR gs:[ebx+0x74],0x70417265
   14000396a:	jo     0x1400039d8
   14000396c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140003973:	push   rdx
   140003974:	gs jae 0x1400039eb
   140003977:	(bad)  
   140003978:	jb     0x1400039ee
   14000397a:	add    BYTE PTR [rax],al
   14000397c:	scas   eax,DWORD PTR es:[rdi]
   14000397d:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140003981:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14000398a:	add    BYTE PTR [rax],al
   14000398c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000398d:	add    al,BYTE PTR [rdi+0x65]
   140003990:	je     0x1400039e2
   140003992:	jb     0x140003a03
   140003994:	movsxd eax,DWORD PTR [rcx+0x64]
   140003997:	fs jb  0x1400039ff
   14000399a:	jae    0x140003a0f
   14000399c:	add    BYTE PTR [rax],al
   14000399e:	rex.WXB
   14000399f:	rex.RB push r10
   1400039a1:	rex.WRX
   1400039a2:	rex.RB
   1400039a3:	xor    r14,QWORD PTR [rdx]
   1400039a6:	cs fs ins BYTE PTR es:[rdi],dx
   1400039a9:	ins    BYTE PTR es:[rdi],dx
   1400039aa:	add    BYTE PTR [rax],al
   1400039ac:	push   rbp
   1400039ad:	add    BYTE PTR [rdi+0x58],bl
   1400039b0:	movsxd esi,DWORD PTR [rax+0x74]
   1400039b3:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400039bc:	pop    rdi
   1400039bd:	(bad)  
   1400039be:	ins    DWORD PTR es:[rdi],dx
   1400039bf:	jae    0x140003a28
   1400039c1:	pop    rdi
   1400039c2:	gs js  0x140003a2e
   1400039c5:	je     0x1400039c7
   1400039c7:	add    BYTE PTR [rdi+0x0],bh
   1400039ca:	pop    rdi
   1400039cb:	pop    rdi
   1400039cc:	addr32 gs je 0x140003a3d
   1400039d0:	(bad)  
   1400039d1:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400039d8:	mov    es,WORD PTR [rax]
   1400039da:	pop    rdi
   1400039db:	pop    rdi
   1400039dc:	jae    0x140003a43
   1400039de:	je     0x140003a3f
   1400039e0:	(bad)  
   1400039e1:	jo     0x140003a53
   1400039e3:	pop    rdi
   1400039e4:	je     0x140003a5f
   1400039e6:	jo     0x140003a4d
   1400039e8:	add    BYTE PTR [rax],al
   1400039ea:	xor    al,BYTE PTR [riz*2+0x746978]
   1400039f1:	add    BYTE PTR [rsi],cl
   1400039f3:	add    DWORD PTR [rdi+0x65],ebx
   1400039f6:	js     0x140003a61
   1400039f8:	je     0x1400039fa
   1400039fa:	rol    DWORD PTR [rax],0x5f
   1400039fd:	movsxd esp,DWORD PTR [rbp+0x78]
   140003a00:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   140003a08:	jae    0x140003a77
   140003a0a:	(bad)
   140003a0f:	add    BYTE PTR fs:[rax],al
   140003a12:	nop
   140003a13:	add    BYTE PTR [rdi+0x5f],bl
   140003a16:	jae    0x140003a7d
   140003a18:	je     0x140003a8f
   140003a1a:	jae    0x140003a81
   140003a1c:	jb     0x140003a8b
   140003a1e:	(bad)  
   140003a1f:	je     0x140003a89
   140003a21:	gs jb  0x140003a96
   140003a24:	add    BYTE PTR [rax],al
   140003a26:	jge    0x140003a29
   140003a28:	pop    rdi
   140003a29:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140003a30:	ins    DWORD PTR es:[rdi],dx
   140003a31:	add    BYTE PTR [rdi+0x0],dl
   140003a34:	pop    rdi
   140003a35:	pop    rdi
   140003a36:	rex.XB pop r15
   140003a38:	jae    0x140003aaa
   140003a3a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140003a3e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140003a45:	ins    BYTE PTR es:[rdi],dx
   140003a46:	gs jb  0x140003a49
   140003a49:	add    BYTE PTR [rdx+0x63615f00],ah
   140003a4f:	ins    DWORD PTR es:[rdi],dx
   140003a50:	fs ins BYTE PTR es:[rdi],dx
   140003a52:	outs   dx,BYTE PTR ds:[rsi]
   140003a53:	add    BYTE PTR [rdi],ah
   140003a55:	add    DWORD PTR [rdi+0x66],ebx
   140003a58:	ins    DWORD PTR es:[rdi],dx
   140003a59:	outs   dx,DWORD PTR ds:[rsi]
   140003a5a:	fs add BYTE PTR gs:[rax],al
   140003a5e:	rol    BYTE PTR [rax],cl
   140003a60:	pop    rdi
   140003a61:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140003a64:	ins    DWORD PTR es:[rdi],dx
   140003a65:	outs   dx,DWORD PTR ds:[rsi]
   140003a66:	fs add BYTE PTR gs:[rax],al
   140003a6a:	ins    DWORD PTR es:[rdi],dx
   140003a6b:	jae    0x140003ae3
   140003a6d:	movsxd esi,DWORD PTR [rdx+0x74]
   140003a70:	cs fs ins BYTE PTR es:[rdi],dx
   140003a73:	ins    BYTE PTR es:[rdi],dx
   140003a74:	add    BYTE PTR [rax],al
   140003a76:	(bad)  
   140003a77:	add    BYTE PTR [rdi],bh
   140003a79:	je     0x140003ae0
   140003a7b:	jb     0x140003aea
   140003a7d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140003a84:	pop    rcx
   140003a85:	pop    r8
   140003a87:	pop    rax
   140003a88:	pop    rdx
   140003a89:	add    BYTE PTR [rbp+0x5],ch
   140003a8c:	push   rbx
   140003a8d:	ins    BYTE PTR es:[rdi],dx
   140003a8e:	gs gs jo 0x140003a92
   140003a92:	mov    DWORD PTR [rdx],0x53746547
   140003a98:	je     0x140003afb
   140003a9a:	jb     0x140003b10
   140003a9c:	jne    0x140003b0e
   140003a9e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003aa0:	outs   dx,WORD PTR ds:[rsi]
   140003aa2:	push   rdi
   140003aa3:	add    BYTE PTR [rsi+0x5],bl
   140003aa6:	push   rbx
   140003aa7:	gs je  0x140003aff
   140003aaa:	outs   dx,BYTE PTR ds:[rsi]
   140003aab:	push   0x6c646e61
   140003ab0:	gs fs rex.RB js 0x140003b18
   140003ab5:	gs jo  0x140003b2c
   140003ab8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003abf:	gs jb  0x140003ac2
   140003ac2:	outs   dx,BYTE PTR ds:[rsi]
   140003ac3:	add    al,BYTE PTR [rdi+0x65]
   140003ac6:	je     0x140003b15
   140003ac8:	outs   dx,DWORD PTR ds:[rsi]
   140003ac9:	fs jne 0x140003b38
   140003acc:	gs rex.W (bad) 
   140003acf:	outs   dx,BYTE PTR ds:[rsi]
   140003ad0:	fs ins BYTE PTR es:[rdi],dx
   140003ad2:	gs push rdi
   140003ad4:	add    BYTE PTR [rax],al
   140003ad6:	ss add al,0x51
   140003ad9:	jne    0x140003b40
   140003adb:	jb     0x140003b56
   140003add:	push   rax
   140003ade:	gs jb  0x140003b47
   140003ae1:	outs   dx,DWORD PTR ds:[rsi]
   140003ae2:	jb     0x140003b51
   140003ae4:	(bad)  
   140003ae5:	outs   dx,BYTE PTR ds:[rsi]
   140003ae6:	movsxd esp,DWORD PTR [rbp+0x43]
   140003ae9:	outs   dx,DWORD PTR ds:[rsi]
   140003aea:	jne    0x140003b5a
   140003aec:	je     0x140003b53
   140003aee:	jb     0x140003af0
   140003af0:	adc    DWORD PTR [rdx],eax
   140003af2:	rex.RXB
   140003af3:	gs je  0x140003b39
   140003af6:	jne    0x140003b6a
   140003af8:	jb     0x140003b5f
   140003afa:	outs   dx,BYTE PTR ds:[rsi]
   140003afb:	je     0x140003b4d
   140003afd:	jb     0x140003b6e
   140003aff:	movsxd esp,DWORD PTR [rbp+0x73]
   140003b02:	jae    0x140003b4d
   140003b04:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465820d
   140003b0b:	rex.XB jne 0x140003b80
   140003b0e:	jb     0x140003b75
   140003b10:	outs   dx,BYTE PTR ds:[rsi]
   140003b11:	je     0x140003b67
   140003b13:	push   0x64616572
   140003b18:	rex.WB
   140003b19:	add    BYTE PTR fs:[rax],al
   140003b1c:	loopne 0x140003b20
   140003b1e:	rex.RXB
   140003b1f:	gs je  0x140003b75
   140003b22:	jns    0x140003b97
   140003b24:	je     0x140003b8b
   140003b26:	ins    DWORD PTR es:[rdi],dx
   140003b27:	push   rsp
   140003b28:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140003b2f:	ins    BYTE PTR es:[rdi],dx
   140003b30:	gs push rsp
   140003b32:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   140003b39:	gs je  0x140003b90
   140003b3c:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140003b43:	je     0x140003b45
   140003b45:	add    BYTE PTR [rdi+0x6c745204],dh
   140003b4b:	rex.XB (bad) 
   140003b4d:	jo     0x140003bc3
   140003b4f:	jne    0x140003bc3
   140003b51:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140003b54:	outs   dx,BYTE PTR ds:[rsi]
   140003b55:	je     0x140003bbc
   140003b57:	js     0x140003bcd
   140003b59:	add    BYTE PTR [rsi+0x6c745204],bh
   140003b5f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140003b61:	outs   dx,DWORD PTR ds:[rsi]
   140003b62:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140003b66:	jne    0x140003bd6
   140003b68:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140003b6c:	outs   dx,BYTE PTR ds:[rsi]
   140003b6d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140003b6f:	je     0x140003be3
   140003b71:	jns    0x140003b73
   140003b73:	add    ch,al
   140003b75:	add    al,0x52
   140003b77:	je     0x140003be5
   140003b79:	push   rsi
   140003b7a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140003b81:	outs   dx,BYTE PTR ds:[rsi]
   140003b82:	ja     0x140003bed
   140003b84:	outs   dx,BYTE PTR ds:[rsi]
   140003b85:	add    BYTE PTR fs:[rax],al
   140003b88:	sahf   
   140003b89:	add    eax,0x61686e55
   140003b8e:	outs   dx,BYTE PTR ds:[rsi]
   140003b8f:	fs ins BYTE PTR es:[rdi],dx
   140003b91:	gs fs rex.RB js 0x140003bf9
   140003b96:	gs jo  0x140003c0d
   140003b99:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140003ba0:	gs jb  0x140003ba3
   140003ba3:	add    BYTE PTR [rax],dl
   140003ba5:	add    al,BYTE PTR [rdi+0x65]
   140003ba8:	je     0x140003bed
   140003baa:	jne    0x140003c1e
   140003bac:	jb     0x140003c13
   140003bae:	outs   dx,BYTE PTR ds:[rsi]
   140003baf:	je     0x140003c01
   140003bb1:	jb     0x140003c22
   140003bb3:	movsxd esp,DWORD PTR [rbp+0x73]
   140003bb6:	jae    0x140003bb8
   140003bb8:	jl     0x140003bbf
   140003bba:	push   rsp
   140003bbb:	gs jb  0x140003c2b
   140003bbe:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140003bc5:	outs   dx,DWORD PTR ds:[rsi]
   140003bc6:	movsxd esp,DWORD PTR [rbp+0x73]
   140003bc9:	jae    0x140003bcb
   140003bcb:	add    BYTE PTR [rdi+0x72695605],bh
   140003bd1:	je     0x140003c48
   140003bd3:	(bad)  
   140003bd4:	ins    BYTE PTR es:[rdi],dx
   140003bd5:	push   rcx
   140003bd6:	jne    0x140003c3d
   140003bd8:	jb     0x140003c53
   140003bda:	add    BYTE PTR [rax],al
   140003bdc:	cmp    al,0x3
   140003bde:	rex.W
   140003bdf:	gs (bad) 
   140003be1:	jo     0x140003c24
   140003be3:	ins    BYTE PTR es:[rdi],dx
   140003be4:	ins    BYTE PTR es:[rdi],dx
   140003be5:	outs   dx,DWORD PTR ds:[rsi]
   140003be6:	movsxd eax,DWORD PTR [rax]
   140003be8:	fwait
   140003be9:	add    al,0x52
   140003beb:	gs ins BYTE PTR es:[rdi],dx
   140003bed:	gs (bad) 
   140003bef:	jae    0x140003c56
   140003bf1:	push   rbx
   140003bf2:	push   rdx
   140003bf3:	push   rdi
   140003bf4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140003bf6:	movsxd ebp,DWORD PTR [rbx+0x45]
   140003bf9:	js     0x140003c5e
   140003bfb:	ins    BYTE PTR es:[rdi],dx
   140003bfc:	jne    0x140003c71
   140003bfe:	imul   esi,DWORD PTR [rsi+0x65],0x4702ab00
   140003c05:	gs je  0x140003c58
   140003c08:	jb     0x140003c79
   140003c0a:	movsxd esp,DWORD PTR [rbp+0x73]
   140003c0d:	jae    0x140003c57
   140003c0f:	gs (bad) 
   140003c11:	jo     0x140003c13
   140003c13:	add    BYTE PTR [rax],al
   140003c15:	add    BYTE PTR [rcx+0x63],al
   140003c18:	jno    0x140003c8f
   140003c1a:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140003c21:	outs   dx,DWORD PTR ds:[rsi]
   140003c22:	movsxd ebp,DWORD PTR [rbx+0x45]
   140003c25:	js     0x140003c8a
   140003c27:	ins    BYTE PTR es:[rdi],dx
   140003c28:	jne    0x140003c9d
   140003c2a:	imul   esi,DWORD PTR [rsi+0x65],0x52044c00
   140003c31:	(bad)  
   140003c32:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140003c39:	jo     0x140003caf
   140003c3b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2570000
   140003c42:	rex.RXB
   140003c43:	gs je  0x140003c92
   140003c46:	(bad)  
   140003c47:	jae    0x140003cbd
   140003c49:	rex.RB jb 0x140003cbe
   140003c4c:	outs   dx,DWORD PTR ds:[rsi]
   140003c4d:	jb     0x140003c4f
   140003c4f:	add    dl,bl
   140003c51:	add    al,BYTE PTR [rdi+0x65]
   140003c54:	je     0x140003ca9
   140003c56:	jns    0x140003ccb
   140003c58:	je     0x140003cbf
   140003c5a:	ins    DWORD PTR es:[rdi],dx
   140003c5b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140003c5d:	outs   dx,WORD PTR ds:[rsi]
   140003c5f:	add    BYTE PTR [rbp+0x616f4c03],ch
   140003c65:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140003c6e:	js     0x140003cb1
   140003c70:	add    BYTE PTR [rax],al
   140003c72:	mov    ebp,0x72695605
   140003c77:	je     0x140003cee
   140003c79:	(bad)  
   140003c7a:	ins    BYTE PTR es:[rdi],dx
   140003c7b:	push   rax
   140003c7c:	jb     0x140003ced
   140003c7e:	je     0x140003ce5
   140003c80:	movsxd esi,DWORD PTR [rax+rax*1+0x0]

Disassembly of section .data:

0000000140004000 <.data>:
   140004000:	add    DWORD PTR [rax],eax
   140004002:	add    BYTE PTR [rax],al
   140004004:	add    BYTE PTR [rax],al
   140004006:	add    BYTE PTR [rax],al
   140004008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000400e:	add    BYTE PTR [rax],al
   140004010:	int    0x5d
   140004012:	and    dl,dl
   140004014:	data16 (bad) 
   140004016:	(bad)  
   140004017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140005000 <.pdata>:
   140005000:	or     BYTE PTR [rax],dl
   140005002:	add    BYTE PTR [rax],al
   140005004:	repz adc BYTE PTR [rax],al
   140005007:	add    al,bl
   140005009:	xor    eax,0x10fc0000
   14000500e:	add    BYTE PTR [rax],al
   140005010:	xchg   ebx,eax
   140005011:	adc    DWORD PTR [rax],eax
   140005013:	add    ah,ah
   140005015:	xor    eax,0x119c0000
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	fwait
   14000501d:	adc    al,BYTE PTR [rax]
   14000501f:	add    al,dh
   140005021:	xor    eax,0x12b00000
   140005026:	add    BYTE PTR [rax],al
   140005028:	adc    DWORD PTR [rdi],0x36040000
   14000502e:	add    BYTE PTR [rax],al
   140005030:	nop
   140005031:	(bad)  
   140005032:	add    BYTE PTR [rax],al
   140005034:	pop    rdi
   140005035:	sbb    BYTE PTR [rax],al
   140005037:	add    BYTE PTR [rsi+rsi*1],bl
   14000503a:	add    BYTE PTR [rax],al
   14000503c:	jo     0x140005056
   14000503e:	add    BYTE PTR [rax],al
   140005040:	mov    ecx,0x24000018
   140005045:	add    BYTE PTR ss:[rax],al
   140005048:	rcr    BYTE PTR [rax],0x0
   14000504b:	add    dl,dl
   14000504d:	sbb    BYTE PTR [rax],al
   14000504f:	add    BYTE PTR [rsi+rsi*1],bl
   140005052:	add    BYTE PTR [rax],al
   140005054:	fcomp  DWORD PTR [rax]
   140005056:	add    BYTE PTR [rax],al
   140005058:	sbb    eax,DWORD PTR cs:[rax]
   14000505b:	add    BYTE PTR [rsi+rsi*1],ch
   14000505e:	add    BYTE PTR [rax],al
   140005060:	rex sbb eax,DWORD PTR [rax]
   140005063:	add    BYTE PTR [rsi+0x1b],bl
   140005066:	add    BYTE PTR [rax],al
   140005068:	(bad)  
   140005069:	add    BYTE PTR ss:[rax],al
   14000506c:	jo     0x140005089
   14000506e:	add    BYTE PTR [rax],al
   140005070:	test   eax,0x1c00001b
   140005075:	add    BYTE PTR ss:[rax],al
   140005078:	mov    al,0x1b
   14000507a:	add    BYTE PTR [rax],al
   14000507c:	enter  0x1b,0x0
   140005080:	sbb    al,0x36
   140005082:	add    BYTE PTR [rax],al
   140005084:	fcomp  QWORD PTR [rbx]
   140005086:	add    BYTE PTR [rax],al
   140005088:	xor    BYTE PTR [rax+rax*1],bl
   14000508b:	add    BYTE PTR [rsi+rsi*1+0x0],ah
   14000508f:	add    BYTE PTR [rax],bh
   140005091:	sbb    al,0x0
   140005093:	add    BYTE PTR [rbp+0x1c],bh
   140005096:	add    BYTE PTR [rax],al
   140005098:	test   BYTE PTR [rsi],dh
   14000509a:	add    BYTE PTR [rax],al
   14000509c:	lock sbb al,0x0
   14000509f:	add    BYTE PTR [rip+0xffffffff8c00001d],bh        # 0xcc0050c2
   1400050a5:	add    BYTE PTR ss:[rax],al
   1400050a8:	test   BYTE PTR [rip+0x1e540000],bl        # 0x15e5450ae
   1400050ae:	add    BYTE PTR [rax],al
   1400050b0:	mov    eax,0x8c000036
   1400050b5:	(bad)  
   1400050b6:	add    BYTE PTR [rax],al
   1400050b8:	rcr    BYTE PTR [rsi],0x0
   1400050bb:	add    BYTE PTR [rsi+rsi*1+0x1ed00000],al
   1400050c2:	add    BYTE PTR [rax],al
   1400050c4:	and    BYTE PTR [r8],al
   1400050c7:	add    ah,al
   1400050c9:	add    BYTE PTR ss:[rax],al
   1400050cc:	and    BYTE PTR [rax],0x0
   1400050cf:	add    bh,dh
   1400050d1:	and    BYTE PTR [rax],al
   1400050d3:	add    ah,dl
   1400050d5:	add    BYTE PTR ss:[rax],al
   1400050d8:	rex and DWORD PTR [rax],eax
   1400050db:	add    BYTE PTR [rdx+0x21],al
   1400050de:	add    BYTE PTR [rax],al
   1400050e0:	shl    BYTE PTR [rsi],1
   1400050e2:	add    BYTE PTR [rax],al
   1400050e4:	push   rsi
   1400050e5:	and    DWORD PTR [rax],eax
   1400050e7:	add    BYTE PTR [rcx+riz*1+0x0],dh
   1400050eb:	add    BYTE PTR [rax-0x7fffffca],dh
   1400050f1:	and    DWORD PTR [rax],eax
   1400050f3:	add    BYTE PTR [rax-0x4fffffdf],ah
   1400050f9:	add    BYTE PTR ss:[rax],al

Disassembly of section .didat:

0000000140006000 <.didat>:
   140006000:	and    BYTE PTR [rcx],ah
   140006002:	add    BYTE PTR [rax+0x1],al
   140006005:	add    BYTE PTR [rax],al
   140006007:	add    BYTE PTR [rax],al
   140006009:	and    DWORD PTR [rax],eax
   14000600b:	rex add DWORD PTR [rax],eax
   14000600e:	add    BYTE PTR [rax],al
   140006010:	(bad)  
   140006011:	and    BYTE PTR [rax],al
   140006013:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .rsrc:

0000000140007000 <.rsrc>:
	...
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    al,0x0
   140007010:	add    eax,DWORD PTR [rax]
   140007012:	add    BYTE PTR [rax],al
   140007014:	xor    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax+0xe],al
   14000701c:	rol    BYTE PTR [rax],0x0
   14000701f:	adc    BYTE PTR [rax],0x0
   140007022:	add    BYTE PTR [rax],al
   140007024:	fadd   DWORD PTR [rax]
   140007026:	add    BYTE PTR [rax+0x18],al
   14000702c:	lock add BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rax],0x0
	...
   14000703e:	adc    BYTE PTR [rax],al
   140007040:	add    DWORD PTR [rax],eax
   140007042:	add    BYTE PTR [rax],al
   140007044:	or     BYTE PTR [rcx],al
   140007046:	add    BYTE PTR [rax+0x2],al
   14000704c:	and    BYTE PTR [rcx],al
   14000704e:	add    BYTE PTR [rax+0x3],al
   140007054:	cmp    BYTE PTR [rcx],al
   140007056:	add    BYTE PTR [rax+0x4],al
   14000705c:	push   rax
   14000705d:	add    DWORD PTR [rax],eax
   14000705f:	add    BYTE PTR [rip+0x68000000],0x1        # 0x1a8007066
   140007066:	add    BYTE PTR [rax+0x6],al
   14000706c:	add    BYTE PTR [rcx],0x0
   14000706f:	add    BYTE PTR [rdi],0x0
   140007072:	add    BYTE PTR [rax],al
   140007074:	cwde   
   140007075:	add    DWORD PTR [rax],eax
   140007077:	or     BYTE PTR [rax],0x0
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	mov    al,0x1
   14000707e:	add    BYTE PTR [rax+0x9],al
   140007084:	enter  0x1,0x80
   140007088:	or     al,BYTE PTR [rax]
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	loopne 0x14000708f
   14000708e:	add    BYTE PTR [rax+0xb],al
   140007094:	clc    
   140007095:	add    DWORD PTR [rax],eax
   140007097:	or     BYTE PTR [rax+rax*1],0x0
   14000709b:	add    BYTE PTR [rax],dl
   14000709d:	add    al,BYTE PTR [rax]
   14000709f:	or     BYTE PTR [rip+0x28000000],0x2        # 0x1680070a6
   1400070a6:	add    BYTE PTR [rax+0xe],al
   1400070ac:	add    al,BYTE PTR [rax]
   1400070af:	or     BYTE PTR [rdi],0x0
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	pop    rax
   1400070b5:	add    al,BYTE PTR [rax]
   1400070b7:	adc    BYTE PTR [rax],0x0
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	jo     0x1400070c0
   1400070be:	add    BYTE PTR [rax+0x0],al
	...
   1400070cc:	add    DWORD PTR [rax],eax
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	add    BYTE PTR [rax+rax*1],al
   1400070d3:	or     BYTE PTR [rax+0x800002],0x0
	...
   1400070e6:	add    DWORD PTR [rax],eax
   1400070e8:	add    DWORD PTR [rax],eax
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	movabs al,ds:0x800002
	...
   1400070fd:	add    BYTE PTR [rcx],al
   1400070ff:	add    BYTE PTR [rcx],al
   140007101:	add    BYTE PTR [rax],al
   140007103:	add    BYTE PTR [rax+0x800002],bh
	...
   140007115:	add    BYTE PTR [rcx],al
   140007117:	add    BYTE PTR [rcx],cl
   140007119:	add    al,0x0
   14000711b:	add    al,dl
   14000711d:	add    al,BYTE PTR [rax]
	...
   14000712b:	add    BYTE PTR [rax],al
   14000712d:	add    BYTE PTR [rcx],al
   14000712f:	add    BYTE PTR [rcx],cl
   140007131:	add    al,0x0
   140007133:	add    al,ah
   140007135:	add    al,BYTE PTR [rax]
	...
   140007143:	add    BYTE PTR [rax],al
   140007145:	add    BYTE PTR [rcx],al
   140007147:	add    BYTE PTR [rcx],cl
   140007149:	add    al,0x0
   14000714b:	add    al,dh
   14000714d:	add    al,BYTE PTR [rax]
	...
   14000715b:	add    BYTE PTR [rax],al
   14000715d:	add    BYTE PTR [rcx],al
   14000715f:	add    BYTE PTR [rcx],cl
   140007161:	add    al,0x0
   140007163:	add    BYTE PTR [rax],al
   140007165:	add    eax,DWORD PTR [rax]
	...
   140007173:	add    BYTE PTR [rax],al
   140007175:	add    BYTE PTR [rcx],al
   140007177:	add    BYTE PTR [rcx],cl
   140007179:	add    al,0x0
   14000717b:	add    BYTE PTR [rax],dl
   14000717d:	add    eax,DWORD PTR [rax]
	...
   14000718b:	add    BYTE PTR [rax],al
   14000718d:	add    BYTE PTR [rcx],al
   14000718f:	add    BYTE PTR [rcx],cl
   140007191:	add    al,0x0
   140007193:	add    BYTE PTR [rax],ah
   140007195:	add    eax,DWORD PTR [rax]
	...
   1400071a3:	add    BYTE PTR [rax],al
   1400071a5:	add    BYTE PTR [rcx],al
   1400071a7:	add    BYTE PTR [rcx],cl
   1400071a9:	add    al,0x0
   1400071ab:	add    BYTE PTR [rax],dh
   1400071ad:	add    eax,DWORD PTR [rax]
	...
   1400071bb:	add    BYTE PTR [rax],al
   1400071bd:	add    BYTE PTR [rcx],al
   1400071bf:	add    BYTE PTR [rcx],cl
   1400071c1:	add    al,0x0
   1400071c3:	add    BYTE PTR [rax+0x3],al
	...
   1400071d6:	add    DWORD PTR [rax],eax
   1400071d8:	or     DWORD PTR [rax+rax*1],eax
   1400071db:	add    BYTE PTR [rax+0x3],dl
	...
   1400071ee:	add    DWORD PTR [rax],eax
   1400071f0:	or     DWORD PTR [rax+rax*1],eax
   1400071f3:	add    BYTE PTR [rax+0x3],ah
	...
   140007206:	add    DWORD PTR [rax],eax
   140007208:	or     DWORD PTR [rax+rax*1],eax
   14000720b:	add    BYTE PTR [rax+0x3],dh
	...
   14000721e:	add    DWORD PTR [rax],eax
   140007220:	or     DWORD PTR [rax+rax*1],eax
   140007223:	add    BYTE PTR [rax+0x3],al
	...
   140007235:	add    BYTE PTR [rcx],al
   140007237:	add    BYTE PTR [rcx],cl
   140007239:	add    al,0x0
   14000723b:	add    BYTE PTR [rax+0x3],dl
	...
   14000724d:	add    BYTE PTR [rcx],al
   14000724f:	add    BYTE PTR [rcx],cl
   140007251:	add    al,0x0
   140007253:	add    BYTE PTR [rax+0x3],ah
	...
   140007265:	add    BYTE PTR [rcx],al
   140007267:	add    BYTE PTR [rcx],cl
   140007269:	add    al,0x0
   14000726b:	add    BYTE PTR [rax+0x3],dh
	...
   14000727d:	add    BYTE PTR [rcx],al
   14000727f:	add    BYTE PTR [rcx],cl
   140007281:	add    al,0x0
   140007283:	add    al,al
   140007285:	add    eax,DWORD PTR [rax]
	...
   140007293:	add    BYTE PTR [rax],al
   140007295:	add    BYTE PTR [rcx],al
   140007297:	add    BYTE PTR [rcx],cl
   140007299:	add    al,0x0
   14000729b:	add    al,dl
   14000729d:	add    eax,DWORD PTR [rax]
	...
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	add    BYTE PTR [rcx],al
   1400072af:	add    BYTE PTR [rcx],cl
   1400072b1:	add    al,0x0
   1400072b3:	add    al,ah
   1400072b5:	add    eax,DWORD PTR [rax]
	...
   1400072c3:	add    BYTE PTR [rax],al
   1400072c5:	add    BYTE PTR [rcx],al
   1400072c7:	add    BYTE PTR [rcx],cl
   1400072c9:	add    al,0x0
   1400072cb:	add    al,dh
   1400072cd:	add    eax,DWORD PTR [rax]
   1400072cf:	add    BYTE PTR [rax],ah
   1400072d1:	je     0x1400072d3
   1400072d3:	add    BYTE PTR [rax+0xa],ch
	...
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	mov    BYTE PTR [rsi+0x0],bh
   1400072e3:	add    BYTE PTR [rax+0x6],ch
	...
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	lock test BYTE PTR [rax],al
   1400072f3:	add    al,ch
   1400072f5:	add    al,BYTE PTR [rax]
	...
   1400072ff:	add    al,bl
   140007301:	xchg   DWORD PTR [rax],eax
   140007303:	add    al,ch
   140007305:	add    DWORD PTR [rax],eax
	...
   14000730f:	add    al,al
   140007311:	mov    DWORD PTR [rax],eax
   140007313:	add    BYTE PTR [rax],ch
   140007315:	add    DWORD PTR [rax],eax
	...
   14000731f:	add    al,ch
   140007321:	mov    al,BYTE PTR [rax]
   140007323:	add    BYTE PTR [rax],ch
   140007325:	(bad)  
	...
   14000732e:	add    BYTE PTR [rax],al
   140007330:	adc    BYTE PTR [rcx+0xea80000],ah
	...
   14000733e:	add    BYTE PTR [rax],al
   140007340:	mov    eax,0xa80000af
   140007345:	or     BYTE PTR [rax],al
	...
   14000734f:	add    BYTE PTR [rax-0x48],ah
   140007352:	add    BYTE PTR [rax],al
   140007354:	enter  0x6,0x0
	...
   140007360:	sub    BYTE PTR [rdi+0x5680000],bh
	...
   14000736e:	add    BYTE PTR [rax],al
   140007370:	nop
   140007371:	(bad)  
   140007372:	add    BYTE PTR [rax],al
   140007374:	mov    edi,0x8f
   140007379:	add    BYTE PTR [rax],al
   14000737b:	add    BYTE PTR [rax],al
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    BYTE PTR [rax+0x54],dl
   140007382:	add    DWORD PTR [rax],eax
   140007384:	sub    BYTE PTR [rdx+0x0],al
	...
   14000738f:	add    BYTE PTR [rax-0x6a],bh
   140007392:	add    DWORD PTR [rax],eax
   140007394:	test   al,0x25
	...
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	and    BYTE PTR [rcx+rax*1+0x10a800],bh
	...
   1400073af:	add    al,cl
   1400073b1:	int3   
   1400073b2:	add    DWORD PTR [rax],eax
   1400073b4:	mov    BYTE PTR [rcx],cl
	...
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	push   rax
   1400073c1:	(bad)  
   1400073c2:	add    DWORD PTR [rax],eax
   1400073c4:	push   0x4
   1400073c9:	add    BYTE PTR [rax],al
   1400073cb:	add    BYTE PTR [rax],al
   1400073cd:	add    BYTE PTR [rax],al
   1400073cf:	add    BYTE PTR [rax-0x19fffe26],bh
	...
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rax],bh
   1400073e1:	fiadd  WORD PTR [rcx]
   1400073e3:	add    ah,cl
   1400073e5:	add    eax,DWORD PTR [rax]
	...
   1400073ef:	add    BYTE PTR [rax-0x6efffe25],ah
   1400073f5:	add    al,BYTE PTR [rax]
	...
   1400073ff:	add    BYTE PTR [rip+0x44004900],cl        # 0x18400bd05
   140007405:	add    BYTE PTR [rdx+0x0],dl
   140007408:	pop    rdi
   140007409:	add    BYTE PTR [rbp+0x0],cl
   14000740c:	add    BYTE PTR [r9+0x0],cl
   140007410:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140007414:	push   rdx
   140007415:	add    BYTE PTR [rcx+0x0],al
   140007418:	rex.WRB add BYTE PTR [r13+0x0],r8b
   14000741c:	add    BYTE PTR [rax],al
   14000741e:	add    BYTE PTR [rax],al
   140007420:	sub    BYTE PTR [rax],al
   140007422:	add    BYTE PTR [rax],al
   140007424:	add    BYTE PTR [rax],al
   140007427:	add    BYTE PTR [rax+0x1000000],al
   14000742d:	add    BYTE PTR [rax+rax*1],al
   140007430:	add    BYTE PTR [rax],al
   140007432:	add    BYTE PTR [rax],al
   140007434:	add    BYTE PTR [rax],cl
	...
   14000744e:	add    BYTE PTR [rax],0x0
   140007451:	add    BYTE PTR [rax],0x0
   140007454:	add    BYTE PTR [rax+0x800080],al
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	add    BYTE PTR [rax],0x80
   14000745f:	add    BYTE PTR [rax-0x7fffff80],al
   140007465:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000746c:	add    BYTE PTR [rax],al
   14000746e:	inc    DWORD PTR [rax]
   140007470:	add    bh,bh
   140007472:	add    BYTE PTR [rax],al
   140007474:	add    bh,bh
   140007476:	inc    DWORD PTR [rax]
   140007478:	inc    DWORD PTR [rax]
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	inc    DWORD PTR [rax]
   14000747e:	inc    DWORD PTR [rax]
   140007480:	(bad)  
   140007481:	inc    DWORD PTR [rax]
   140007483:	add    bh,bh
   140007485:	(bad)  
   140007486:	inc    DWORD PTR [rax]
	...
   140007518:	add    BYTE PTR [rax],al
   14000751a:	(bad)  
   14000751b:	xchg   DWORD PTR [rdi+0x78],eax
	...
   140007535:	add    BYTE PTR [rax],al
   140007537:	ja     0x1400075b0
   140007539:	ja     0x1400074c9
   14000753b:	mov    al,ch
   14000753d:	mov    ?,WORD PTR [rax+0x0]
	...
   140007550:	add    BYTE PTR [rax],al
   140007552:	add    BYTE PTR [rdi],al
   140007554:	ja     0x1400075cd
   140007556:	jle    0x1400074e0
   140007558:	call   0xc888fde5
   14000755d:	mov    BYTE PTR [rax+0x78],ch
   140007560:	jo     0x140007562
	...
   14000756e:	add    BYTE PTR [rax],al
   140007570:	ja     0x1400075e9
   140007572:	ja     0x14000755c
   140007574:	call   0xc888fe01
   140007579:	mov    cs,WORD PTR [rax-0x18777118]
   14000757f:	mov    bh,ah
   140007581:	js     0x140007583
	...
   14000758b:	add    BYTE PTR [rdi],al
   14000758d:	xchg   BYTE PTR [rsi-0x77171789],al
   140007593:	mov    BYTE PTR [rax-0x17771778],cl
   140007599:	mov    BYTE PTR [rax-0x39777778],cl
   14000759f:	mov    ?,WORD PTR [rax+rcx*4+0x60]
	...
   1400075ab:	(bad)  
   1400075ac:	jle    0x140007536
   1400075ae:	mov    BYTE PTR [rdi-0x77777778],cl
   1400075b4:	mov    cs,WORD PTR [rax-0x17771778]
   1400075ba:	call   0x127895ea7
   1400075bf:	mov    BYTE PTR [rsi-0x78],bh
   1400075c2:	out    0x0,eax
   1400075c4:	add    BYTE PTR [rax],al
   1400075c6:	add    BYTE PTR [rax],al
   1400075c8:	add    BYTE PTR [rax],al
   1400075ca:	add    BYTE PTR [rsi],cl
   1400075cc:	vpmacssdd xmm1,xmm14,xmm8,XMMWORD PTR [r8-0x77777172]
   1400075d6:	call   0xc888fe63
   1400075db:	mov    BYTE PTR [rax+0x7c8e7eef],cl
   1400075e1:	mov    BYTE PTR [rax+rax*1+0x0],bh
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rax],al
   1400075e9:	add    BYTE PTR [rax],al
   1400075eb:	or     BYTE PTR [rax-0x77770108],cl
   1400075f1:	(bad)  
   1400075f2:	clc    
   1400075f3:	mov    BYTE PTR [rax-0x48],bh
   1400075f6:	mov    BYTE PTR [rax-0x17077118],cl
   1400075fc:	mov    BYTE PTR [rax-0x7179771b],cl
   140007602:	xchg   BYTE PTR [rax],al
   140007604:	add    BYTE PTR [rax],al
   140007606:	add    BYTE PTR [rax],al
   140007608:	add    BYTE PTR [rax],al
   14000760a:	add    BYTE PTR [rax],cl
   14000760c:	(bad)
   140007610:	mov    bh,dh
   140007612:	cmp    DWORD PTR [rcx+0x789b9999],edi
   140007618:	mov    BYTE PTR [rax-0x10107778],cl
   14000761e:	jle    0x1400075ae
   140007620:	jle    0x1400075aa
   140007622:	xchg   BYTE PTR [rax],al
   140007624:	add    BYTE PTR [rax],al
   140007626:	add    BYTE PTR [rax],al
   140007628:	add    BYTE PTR [rax],al
   14000762a:	add    BYTE PTR [rsi],cl
   14000762c:	(bad)  
   14000762d:	(bad)  
   14000762e:	mov    cs,WORD PTR [rax+0x7bb97988]
   140007634:	cmp    edi,DWORD PTR [rbx-0x69]
   140007637:	cdq    
   140007638:	mov    BYTE PTR [rax-0x77077711],cl
   14000763e:	mov    WORD PTR [rax+0xe7888c],cs
   140007644:	add    BYTE PTR [rax],al
   140007646:	add    BYTE PTR [rax],al
   140007648:	add    BYTE PTR [rax],al
   14000764a:	add    BYTE PTR [rax],cl
   14000764c:	mov    BYTE PTR [rax-0x64741078],cl
   140007652:	jns    0x14000760d
   140007654:	xchg   edi,eax
   140007655:	xchg   ebx,eax
   140007656:	jns    0x14000760b
   140007658:	fwait
   140007659:	mov    BYTE PTR [rax-0x17771711],cl
   14000765f:	mov    es,WORD PTR [rsi+0x86f8]
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    BYTE PTR [rax],al
   140007669:	add    BYTE PTR [rax],al
   14000766b:	or     bh,ch
   14000766d:	clc    
   14000766e:	mov    ?,edi
   140007670:	xchg   ebx,eax
   140007671:	jns    0x14000762c
   140007673:	jns    0x14000762e
   140007675:	mov    ecx,0x98b989b9
   14000767a:	mov    BYTE PTR [rax-0x77797078],cl
   140007680:	mov    cs,WORD PTR [rax+0xe8]
   140007686:	add    BYTE PTR [rax],al
   140007688:	add    BYTE PTR [rax],al
   14000768a:	add    BYTE PTR [rax],cl
   14000768c:	(bad)  
   14000768d:	(bad)
   140007691:	mov    ecx,0x9898b779
   140007696:	fwait
   140007697:	fwait
   140007698:	cwde   
   140007699:	fwait
   14000769a:	mov    BYTE PTR [rax-0x71181078],cl
   1400076a0:	xchg   DWORD PTR [rax+0x86],ecx
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	add    BYTE PTR [rax],al
   1400076aa:	add    BYTE PTR [rsi],cl
   1400076ac:	(bad)  
   1400076b0:	cwde   
   1400076b1:	lahf   
   1400076b2:	clc    
   1400076b3:	fwait
   1400076b4:	fwait
   1400076b5:	fwait
   1400076b6:	xchg   edi,eax
   1400076b7:	xchg   edi,eax
   1400076b8:	fwait
   1400076b9:	xchg   edi,eax
   1400076ba:	cwde   
   1400076bb:	mov    ?,eax
   1400076bd:	mov    BYTE PTR [rsi-0x17777178],cl
	...
   1400076cb:	or     BYTE PTR [rdi-0x46467c71],cl
   1400076d1:	(bad)  
   1400076d2:	(bad)  
   1400076d3:	clc    
   1400076d4:	jns    0x14000765f
   1400076d6:	mov    ecx,0xb789b9b9
   1400076db:	mov    BYTE PTR [rax-0x18771878],cl
   1400076e1:	mov    BYTE PTR [rsi+0x0],cl
   1400076e7:	add    BYTE PTR [rax],al
   1400076e9:	add    BYTE PTR [rax],al
   1400076eb:	or     BYTE PTR [rax-0x64887608],cl
   1400076f1:	(bad)  
   1400076f2:	(bad)  
   1400076f3:	dec    DWORD PTR [rbx-0x67748665]
   1400076f9:	fwait
   1400076fa:	fwait
   1400076fb:	mov    BYTE PTR [rsi-0x73777108],cl
   140007701:	clc    
   140007702:	xchg   DWORD PTR [rax],eax
   140007704:	add    BYTE PTR [rax],al
   140007706:	add    BYTE PTR [rax],al
   140007708:	add    BYTE PTR [rax],al
   14000770a:	add    BYTE PTR [rsi],cl
   14000770c:	(bad)
   140007710:	ja     0x140007711
   140007712:	(bad)  
   140007713:	(bad)  
   140007714:	dec    DWORD PTR [rcx-0x68646875]
   14000771a:	xchg   edi,eax
   14000771b:	cwde   
   14000771c:	mov    BYTE PTR [rax-0x7117777a],cl
   140007722:	mov    es,WORD PTR [rax]
   140007724:	add    BYTE PTR [rax],al
   140007726:	add    BYTE PTR [rax],al
   140007728:	add    BYTE PTR [rax],al
   14000772a:	add    BYTE PTR [rax],cl
   14000772c:	(bad)
   140007730:	fwait
   140007731:	(bad)  
   140007732:	(bad)  
   140007733:	(bad)  
   140007734:	(bad)  
   140007735:	clc    
   140007736:	mov    ecx,0xb9b7b989
   14000773b:	mov    eax,0x88e88888
   140007740:	xchg   al,bh
   140007742:	mov    BYTE PTR [rax],al
   140007744:	add    BYTE PTR [rax],al
   140007746:	add    BYTE PTR [rax],al
   140007748:	add    BYTE PTR [rax],al
   14000774a:	add    BYTE PTR [rax],cl
   14000774c:	mov    BYTE PTR [rax-0x764647],cl
   140007752:	(bad)  
   140007753:	(bad)  
   140007754:	(bad)  
   140007755:	(bad)  
   140007756:	clc    
   140007757:	fwait
   140007758:	jns    0x1400076e3
   14000775a:	cwde   
   14000775b:	cwde   
   14000775c:	mov    ?,eax
   14000775e:	mov    cs,WORD PTR [rsi+0xe7888e]
   140007764:	add    BYTE PTR [rax],al
   140007766:	add    BYTE PTR [rax],al
   140007768:	add    BYTE PTR [rax],al
   14000776a:	add    BYTE PTR [rsi],cl
   14000776c:	pop    QWORD PTR [rbx-0x6764c9]
   140007772:	(bad)  
   140007773:	(bad)  
   140007774:	(bad)  
   140007775:	(bad)  
   140007776:	push   rdi
   140007778:	mov    ecx,0x88b7b9b9
   14000777d:	mov    bh,ah
   14000777f:	mov    BYTE PTR [rdi+0x8e88],al
   140007785:	add    BYTE PTR [rax],al
   140007787:	add    BYTE PTR [rax],al
   140007789:	add    BYTE PTR [rax],al
   14000778b:	or     BYTE PTR [rdi-0x64846485],cl
   140007791:	(bad)  
   140007792:	(bad)  
   140007793:	(bad)  
   140007794:	(bad)  
   140007795:	(bad)  
   140007796:	(bad)  
   140007797:	dec    DWORD PTR [rax-0x77686468]
   14000779d:	mov    bh,ah
   14000779f:	mov    bh,ah
   1400077a1:	mov    BYTE PTR [rax+0x0],cl
   1400077a7:	add    BYTE PTR [rax],al
   1400077a9:	add    BYTE PTR [rax],al
   1400077ab:	or     BYTE PTR [rax-0x76467677],cl
   1400077b1:	(bad)  
   1400077b2:	(bad)  
   1400077b3:	(bad)  
   1400077b4:	(bad)  
   1400077b5:	(bad)  
   1400077b6:	(bad)  
   1400077b7:	(bad)  
   1400077b8:	clc    
   1400077b9:	mov    bh,0xb9
   1400077bb:	mov    DWORD PTR [rax-0x73017378],ecx
   1400077c1:	clc    
   1400077c2:	out    0x0,eax
   1400077c4:	add    BYTE PTR [rax],al
   1400077c6:	add    BYTE PTR [rax],al
   1400077c8:	add    BYTE PTR [rax],al
   1400077ca:	add    BYTE PTR [rsi],cl
   1400077cc:	(bad)  
   1400077cd:	jnp    0x14000776a
   1400077cf:	jns    0x140007789
   1400077d1:	(bad)  
   1400077d2:	(bad)  
   1400077d3:	(bad)  
   1400077d4:	(bad)  
   1400077d5:	(bad)  
   1400077d6:	(bad)  
   1400077d7:	(bad)  
   1400077d8:	push   rdi
   1400077da:	fwait
   1400077db:	fwait
   1400077dc:	mov    BYTE PTR [rax-0x77717719],cl
   1400077e2:	mov    es,WORD PTR [rax]
   1400077e4:	add    BYTE PTR [rax],al
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	add    BYTE PTR [rax],al
   1400077ea:	add    BYTE PTR [rax],cl
   1400077ec:	(bad)  
   1400077ed:	cmp    ebx,DWORD PTR [rax-0x6465]
   1400077f3:	(bad)  
   1400077f4:	(bad)  
   1400077f5:	(bad)  
   1400077f6:	(bad)  
   1400077f7:	(bad)  
   1400077f8:	(bad)  
   1400077f9:	clc    
   1400077fa:	mov    bh,0x98
   1400077fc:	mov    BYTE PTR [rax-0x77797119],cl
   140007802:	call   0x140007807
   140007807:	add    BYTE PTR [rax],al
   140007809:	add    BYTE PTR [rax],al
   14000780b:	or     BYTE PTR [rax-0x48674487],cl
   140007811:	(bad)  
   140007812:	(bad)  
   140007813:	(bad)  
   140007814:	(bad)  
   140007815:	(bad)  
   140007816:	(bad)  
   140007817:	(bad)  
   140007818:	(bad)  
   140007819:	clc    
   14000781a:	fwait
   14000781b:	fwait
   14000781c:	xchg   DWORD PTR [rdi-0x77717719],ecx
   140007822:	xchg   BYTE PTR [rax],al
   140007824:	add    BYTE PTR [rax],al
   140007826:	add    BYTE PTR [rax],al
   140007828:	add    BYTE PTR [rax],al
   14000782a:	add    BYTE PTR [rsi],cl
   14000782c:	(bad)  
   14000782d:	jnp    0x1400077c7
   14000782f:	mov    ecx,0xffff8f98
   140007834:	(bad)  
   140007835:	(bad)  
   140007836:	(bad)  
   140007837:	(bad)  
   140007838:	dec    DWORD PTR [rbx-0x77776468]
   14000783e:	xchg   BYTE PTR [rax+0x8e88e7],cl
   140007844:	add    BYTE PTR [rax],al
   140007846:	add    BYTE PTR [rax],al
   140007848:	add    BYTE PTR [rax],al
   14000784a:	add    BYTE PTR [rax],cl
   14000784c:	(bad)  
   14000784d:	jnp    0x1400078c8
   14000784f:	mov    bh,0xb9
   140007851:	(bad)  
   140007852:	(bad)  
   140007853:	(bad)  
   140007854:	(bad)  
   140007855:	(bad)  
   140007856:	(bad)  
   140007857:	(bad)  
   140007858:	clc    
   140007859:	fwait
   14000785a:	jnp    0x1400077f4
   14000785c:	mov    BYTE PTR [rdi-0x7737719],cl
   140007862:	out    0x0,eax
   140007864:	add    BYTE PTR [rax],al
   140007866:	add    BYTE PTR [rax],al
   140007868:	add    BYTE PTR [rax],al
   14000786a:	add    BYTE PTR [rax],cl
   14000786c:	mov    BYTE PTR [rcx-0x744647],cl
   140007872:	(bad)  
   140007873:	(bad)  
   140007874:	(bad)  
   140007875:	(bad)  
   140007876:	(bad)  
   140007877:	clc    
   140007878:	mov    ecx,0x88b979b9
   14000787d:	mov    bh,ah
   14000787f:	mov    bh,ah
   140007881:	(bad)  
   140007882:	mov    es,WORD PTR [rax]
   140007884:	add    BYTE PTR [rax],al
   140007886:	add    BYTE PTR [rax],al
   140007888:	add    BYTE PTR [rax],al
   14000788a:	add    BYTE PTR [rsi],cl
   14000788c:	pop    QWORD PTR [rbx-0x678c85]
   140007892:	(bad)  
   140007893:	(bad)  
   140007894:	(bad)  
   140007895:	(bad)  
   140007896:	dec    DWORD PTR [rcx-0x67648475]
   14000789c:	clc    
   14000789d:	clc    
   14000789e:	mov    cs,WORD PTR [rax+0xe788e7]
   1400078a4:	add    BYTE PTR [rax],al
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	add    BYTE PTR [rax],al
   1400078aa:	add    BYTE PTR [rax],cl
   1400078ac:	(bad)  
   1400078ad:	mov    edx,DWORD PTR [rdi-0x4665]
   1400078b3:	(bad)  
   1400078b4:	(bad)  
   1400078b5:	dec    DWORD PTR [rbx-0x67676465]
   1400078bb:	mov    eax,0x88e78888
   1400078c0:	mov    cs,WORD PTR [rax+0x88]
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	add    BYTE PTR [rax],al
   1400078ca:	add    BYTE PTR [rax],cl
   1400078cc:	mov    BYTE PTR [rdi-0x748645],al
   1400078d2:	(bad)  
   1400078d3:	(bad)  
   1400078d4:	(bad)  
   1400078d5:	clc    
   1400078d6:	mov    ecx,0x399b988b
   1400078db:	mov    BYTE PTR [rdi-0x18771871],cl
   1400078e1:	mov    bh,ah
	...
   1400078eb:	(bad)  
   1400078ec:	(bad)  
   1400078ed:	idiv   DWORD PTR [rcx-0x45]
   1400078f0:	cwde   
   1400078f1:	(bad)  
   1400078f2:	(bad)  
   1400078f3:	(bad)  
   1400078f4:	clc    
   1400078f5:	mov    ecx,0x9b7b9b8b
   1400078fa:	jnp    0x140007884
   1400078fc:	mov    BYTE PTR [rax-0x7730774],cl
   140007902:	mov    es,WORD PTR [rax]
   140007904:	add    BYTE PTR [rax],al
   140007906:	add    BYTE PTR [rax],al
   140007908:	add    BYTE PTR [rax],al
   14000790a:	add    BYTE PTR [rax],cl
   14000790c:	mov    al,bh
   14000790e:	mov    bh,0x98
   140007910:	mov    ecx,0x8bffffff
   140007915:	jns    0x1400078d0
   140007917:	mov    DWORD PTR [rcx-0x7777777],edi
   14000791d:	clc    
   14000791e:	out    0x8e,eax
   140007920:	mov    cs,WORD PTR [rax+0xe7]
   140007926:	add    BYTE PTR [rax],al
   140007928:	add    BYTE PTR [rax],al
   14000792a:	add    BYTE PTR [rax],cl
   14000792c:	mov    al,bh
   14000792e:	cmp    DWORD PTR [rcx-0x74000048],0xffffff98
   140007935:	fwait
   140007936:	jnp    0x1400078d3
   140007938:	jae    0x1400078f2
   14000793a:	mov    eax,0xe788f888
   14000793f:	mov    bh,ah
   140007941:	mov    BYTE PTR [rsi+0x0],cl
   140007947:	add    BYTE PTR [rax],al
   140007949:	add    BYTE PTR [rax],al
   14000794b:	(bad)  
   14000794c:	clc    
   14000794d:	pop    QWORD PTR [rdi-0x77706485]
   140007953:	mov    bh,0xb9
   140007955:	mov    bh,0x9b
   140007957:	jns    0x140007911
   140007959:	mov    DWORD PTR [rax-0x18077778],ecx
   14000795f:	mov    BYTE PTR [rsi+0xe788],al
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    BYTE PTR [rax],al
   140007969:	add    BYTE PTR [rax],al
   14000796b:	or     BYTE PTR [rdi+0x799bf888],cl
   140007971:	mov    bh,0xb9
   140007973:	mov    DWORD PTR [rdi-0x76878465],esi
   140007979:	mov    eax,0x8ff88f88
   14000797e:	out    0x88,eax
   140007980:	call   0x14001020d
   140007985:	add    BYTE PTR [rax],al
   140007987:	add    BYTE PTR [rax],al
   140007989:	add    BYTE PTR [rax],al
   14000798b:	or     al,bh
   14000798d:	clc    
   14000798e:	mov    cs,WORD PTR [rcx-0x64646448]
   140007994:	cwde   
   140007995:	mov    eax,0x88b8b798
   14000799a:	mov    al,bh
   14000799c:	mov    BYTE PTR [rax-0x77187719],cl
   1400079a2:	out    0x0,eax
   1400079a4:	add    BYTE PTR [rax],al
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	add    BYTE PTR [rax],al
   1400079aa:	add    BYTE PTR [rax],cl
   1400079ac:	mov    al,bh
   1400079ae:	clc    
   1400079af:	mov    BYTE PTR [rcx-0x47777449],cl
   1400079b5:	cwde   
   1400079b6:	mov    eax,0x8f889b78
   1400079bb:	(bad)
   1400079bf:	mov    BYTE PTR [rsi+0x8e88],cl
   1400079c5:	add    BYTE PTR [rax],al
   1400079c7:	add    BYTE PTR [rax],al
   1400079c9:	add    BYTE PTR [rax],al
   1400079cb:	or     BYTE PTR [rax-0x77707708],cl
   1400079d1:	mov    esi,DWORD PTR [rdi-0x49]
   1400079d4:	mov    ecx,DWORD PTR [rbx-0x77474777]
   1400079da:	clc    
   1400079db:	mov    BYTE PTR [rax-0x18777178],cl
   1400079e1:	mov    bh,ah
	...
   1400079eb:	or     BYTE PTR [rax-0x7077171],cl
   1400079f1:	mov    BYTE PTR [rdi-0x77747677],dh
   1400079f7:	mov    eax,0x88f8f888
   1400079fc:	mov    BYTE PTR [rax-0x7737719],cl
   140007a02:	mov    es,WORD PTR [rax]
   140007a04:	add    BYTE PTR [rax],al
   140007a06:	add    BYTE PTR [rax],al
   140007a08:	add    BYTE PTR [rax],al
   140007a0a:	add    BYTE PTR [rax],cl
   140007a0c:	(bad)  
   140007a10:	(bad)
   140007a14:	mov    eax,0x8f8878b7
   140007a19:	mov    BYTE PTR [rax-0x18707778],cl
   140007a1f:	mov    cs,WORD PTR [rsi+0xe788]
   140007a25:	add    BYTE PTR [rax],al
   140007a27:	add    BYTE PTR [rax],al
   140007a29:	add    BYTE PTR [rax],al
   140007a2b:	or     bh,ch
   140007a2d:	clc    
   140007a2e:	mov    BYTE PTR [rax-0x77777778],cl
   140007a34:	mov    BYTE PTR [rax-0x70777008],cl
   140007a3a:	mov    BYTE PTR [rax-0x77187778],cl
   140007a40:	xchg   DWORD PTR [rax+0x88],ecx
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	add    BYTE PTR [rax],al
   140007a4a:	add    BYTE PTR [rax],cl
   140007a4c:	clc    
   140007a4d:	clc    
   140007a4e:	mov    ?,eax
   140007a50:	mov    BYTE PTR [rax-0x70707071],cl
   140007a56:	(bad)  
   140007a5a:	mov    BYTE PTR [rax-0x7737078],cl
   140007a60:	mov    cs,WORD PTR [rax+0x8e]
   140007a66:	add    BYTE PTR [rax],al
   140007a68:	add    BYTE PTR [rax],al
   140007a6a:	add    BYTE PTR [rax],cl
   140007a6c:	(bad)  
   140007a6d:	(bad)  
   140007a6e:	dec    DWORD PTR [rdi-0x77777771]
   140007a74:	mov    BYTE PTR [rax-0x77770778],cl
   140007a7a:	mov    BYTE PTR [rax-0x17177778],cl
   140007a80:	mov    cs,WORD PTR [rax+0xe0]
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	add    BYTE PTR [rax],al
   140007a8a:	add    BYTE PTR [rax],al
   140007a8c:	call   0x128e96379
   140007a91:	call   0xc8f9097e
   140007a96:	mov    BYTE PTR [rax-0x77777778],cl
   140007a9c:	clc    
   140007a9d:	mov    BYTE PTR [rax+0x8088],cl
	...
   140007ab3:	add    BYTE PTR [rax],al
   140007ab5:	mov    al,ch
   140007ab7:	call   0x12889094a
   140007abc:	call   0x140007ba9
	...
   140007c85:	add    BYTE PTR [rax],al
   140007c87:	add    bh,bh
   140007c89:	(bad)  
   140007c8a:	(bad)  
   140007c8b:	(bad)  
   140007c8c:	(bad)  
   140007c8d:	(bad)  
   140007c8e:	(bad)  
   140007c8f:	(bad)  
   140007c90:	(bad)  
   140007c91:	(bad)  
   140007c92:	(bad)  
   140007c93:	(bad)  
   140007c94:	(bad)  
   140007c95:	(bad)  
   140007c96:	(bad)  
   140007c97:	(bad)  
   140007c98:	(bad)  
   140007c99:	(bad)  
   140007c9a:	(bad)  
   140007c9b:	(bad)  
   140007c9c:	(bad)  
   140007c9d:	(bad)  
   140007c9e:	(bad)  
   140007c9f:	(bad)  
   140007ca0:	(bad)  
   140007ca1:	(bad)  
   140007ca2:	(bad)  
   140007ca3:	(bad)  
   140007ca4:	(bad)  
   140007ca5:	(bad)  
   140007ca6:	(bad)  
   140007ca7:	(bad)  
   140007ca8:	(bad)  
   140007ca9:	(bad)  
   140007caa:	(bad)  
   140007cab:	(bad)  
   140007cac:	clc    
   140007cad:	ud0    edi,edi
   140007cb0:	(bad)  
   140007cb1:	(bad)  
   140007cb2:	(bad)  
   140007cb3:	cld    
   140007cb4:	add    BYTE PTR [rdi],al
   140007cb6:	(bad)  
   140007cb7:	(bad)  
   140007cb8:	(bad)  
   140007cb9:	(bad)  
   140007cba:	inc    BYTE PTR [rax]
   140007cbc:	add    BYTE PTR [rax],al
   140007cbe:	jg     0x140007cbf
   140007cc0:	(bad)  
   140007cc1:	inc    DWORD PTR [rax]
   140007cc3:	add    BYTE PTR [rax],al
   140007cc5:	add    BYTE PTR [rdi],cl
   140007cc7:	(bad)  
   140007cc8:	inc    DWORD PTR [rax+0x0]
   140007cce:	(bad)  
   140007ccf:	(bad)  
   140007cd0:	inc    BYTE PTR [rax]
   140007cd2:	add    BYTE PTR [rax],al
   140007cd4:	add    BYTE PTR [rax],al
   140007cd6:	add    edi,edi
   140007cd8:	inc    BYTE PTR [rax]
   140007cda:	add    BYTE PTR [rax],al
   140007cdc:	add    BYTE PTR [rax],al
   140007cde:	add    edi,edi
   140007ce0:	inc    BYTE PTR [rax]
   140007ce2:	add    BYTE PTR [rax],al
   140007ce4:	add    BYTE PTR [rax],al
   140007ce6:	add    edi,edi
   140007ce8:	inc    BYTE PTR [rax]
   140007cea:	add    BYTE PTR [rax],al
   140007cec:	add    BYTE PTR [rax],al
   140007cee:	add    edi,edi
   140007cf0:	inc    BYTE PTR [rax]
   140007cf2:	add    BYTE PTR [rax],al
   140007cf4:	add    BYTE PTR [rax],al
   140007cf6:	add    edi,edi
   140007cf8:	inc    BYTE PTR [rax]
   140007cfa:	add    BYTE PTR [rax],al
   140007cfc:	add    BYTE PTR [rax],al
   140007cfe:	add    edi,edi
   140007d00:	inc    BYTE PTR [rax]
   140007d02:	add    BYTE PTR [rax],al
   140007d04:	add    BYTE PTR [rax],al
   140007d06:	add    edi,edi
   140007d08:	inc    BYTE PTR [rax]
   140007d0a:	add    BYTE PTR [rax],al
   140007d0c:	add    BYTE PTR [rax],al
   140007d0e:	add    edi,edi
   140007d10:	inc    BYTE PTR [rax]
   140007d12:	add    BYTE PTR [rax],al
   140007d14:	add    BYTE PTR [rax],al
   140007d16:	add    edi,edi
   140007d18:	inc    BYTE PTR [rax]
   140007d1a:	add    BYTE PTR [rax],al
   140007d1c:	add    BYTE PTR [rax],al
   140007d1e:	add    edi,edi
   140007d20:	inc    BYTE PTR [rax]
   140007d22:	add    BYTE PTR [rax],al
   140007d24:	add    BYTE PTR [rax],al
   140007d26:	add    edi,edi
   140007d28:	inc    BYTE PTR [rax]
   140007d2a:	add    BYTE PTR [rax],al
   140007d2c:	add    BYTE PTR [rax],al
   140007d2e:	add    edi,edi
   140007d30:	inc    BYTE PTR [rax]
   140007d32:	add    BYTE PTR [rax],al
   140007d34:	add    BYTE PTR [rax],al
   140007d36:	add    edi,edi
   140007d38:	inc    BYTE PTR [rax]
   140007d3a:	add    BYTE PTR [rax],al
   140007d3c:	add    BYTE PTR [rax],al
   140007d3e:	add    edi,edi
   140007d40:	inc    BYTE PTR [rax]
   140007d42:	add    BYTE PTR [rax],al
   140007d44:	add    BYTE PTR [rax],al
   140007d46:	add    edi,edi
   140007d48:	inc    BYTE PTR [rax]
   140007d4a:	add    BYTE PTR [rax],al
   140007d4c:	add    BYTE PTR [rax],al
   140007d4e:	add    edi,edi
   140007d50:	inc    BYTE PTR [rax]
   140007d52:	add    BYTE PTR [rax],al
   140007d54:	add    BYTE PTR [rax],al
   140007d56:	add    edi,edi
   140007d58:	inc    BYTE PTR [rax]
   140007d5a:	add    BYTE PTR [rax],al
   140007d5c:	add    BYTE PTR [rax],al
   140007d5e:	add    edi,edi
   140007d60:	inc    BYTE PTR [rax]
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	add    BYTE PTR [rax],al
   140007d66:	add    edi,edi
   140007d68:	inc    BYTE PTR [rax]
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	add    BYTE PTR [rax],al
   140007d6e:	add    edi,edi
   140007d70:	inc    BYTE PTR [rax]
   140007d72:	add    BYTE PTR [rax],al
   140007d74:	add    BYTE PTR [rax],al
   140007d76:	add    edi,edi
   140007d78:	inc    BYTE PTR [rax]
   140007d7a:	add    BYTE PTR [rax],al
   140007d7c:	add    BYTE PTR [rax],al
   140007d7e:	add    edi,edi
   140007d80:	inc    BYTE PTR [rax]
   140007d82:	add    BYTE PTR [rax],al
   140007d84:	add    BYTE PTR [rax],al
   140007d86:	add    edi,edi
   140007d88:	inc    BYTE PTR [rax]
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	add    BYTE PTR [rax],al
   140007d8e:	add    edi,edi
   140007d90:	inc    BYTE PTR [rax]
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	add    BYTE PTR [rax],al
   140007d96:	add    edi,edi
   140007d98:	inc    BYTE PTR [rax]
   140007d9a:	add    BYTE PTR [rax],al
   140007d9c:	add    BYTE PTR [rax],al
   140007d9e:	add    edi,edi
   140007da0:	inc    BYTE PTR [rax]
   140007da2:	add    BYTE PTR [rax],al
   140007da4:	add    BYTE PTR [rax],al
   140007da6:	add    edi,edi
   140007da8:	inc    BYTE PTR [rax]
   140007daa:	add    BYTE PTR [rax],al
   140007dac:	add    BYTE PTR [rax],al
   140007dae:	add    edi,edi
   140007db0:	inc    BYTE PTR [rax]
   140007db2:	add    BYTE PTR [rax],al
   140007db4:	add    BYTE PTR [rax],al
   140007db6:	add    edi,edi
   140007db8:	inc    BYTE PTR [rax]
   140007dba:	add    BYTE PTR [rax],al
   140007dbc:	add    BYTE PTR [rax],al
   140007dbe:	add    edi,edi
   140007dc0:	inc    BYTE PTR [rax]
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	add    BYTE PTR [rax],al
   140007dc6:	add    edi,edi
   140007dc8:	inc    BYTE PTR [rax]
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	add    BYTE PTR [rax],al
   140007dce:	add    edi,edi
   140007dd0:	inc    BYTE PTR [rax]
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	add    BYTE PTR [rax],al
   140007dd6:	add    edi,edi
   140007dd8:	inc    BYTE PTR [rax]
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    BYTE PTR [rax],al
   140007dde:	add    edi,edi
   140007de0:	inc    BYTE PTR [rax]
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    edi,edi
   140007de8:	inc    BYTE PTR [rax]
   140007dea:	add    BYTE PTR [rax],al
   140007dec:	add    BYTE PTR [rax],al
   140007dee:	add    edi,edi
   140007df0:	inc    BYTE PTR [rax]
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	add    BYTE PTR [rax],al
   140007df6:	add    edi,edi
   140007df8:	inc    BYTE PTR [rax]
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	add    BYTE PTR [rax],al
   140007dfe:	add    edi,edi
   140007e00:	inc    BYTE PTR [rax]
   140007e02:	add    BYTE PTR [rax],al
   140007e04:	add    BYTE PTR [rax],al
   140007e06:	(bad)  
   140007e07:	(bad)  
   140007e08:	inc    DWORD PTR [rax]
   140007e0a:	add    BYTE PTR [rax],al
   140007e0c:	add    BYTE PTR [rax],al
   140007e0e:	jg     0x140007e0f
   140007e10:	(bad)  
   140007e11:	(bad)  
   140007e12:	inc    eax
   140007e14:	add    BYTE PTR [rdi],cl
   140007e16:	(bad)  
   140007e17:	(bad)  
   140007e18:	(bad)  
   140007e19:	(bad)  
   140007e1a:	(bad)  
   140007e1b:	(bad)  
   140007e1c:	(bad)  
   140007e1d:	(bad)  
   140007e1e:	(bad)  
   140007e1f:	(bad)  
   140007e20:	(bad)  
   140007e21:	(bad)  
   140007e22:	(bad)  
   140007e23:	(bad)  
   140007e24:	(bad)  
   140007e25:	(bad)  
   140007e26:	(bad)  
   140007e27:	(bad)  
   140007e28:	(bad)  
   140007e29:	(bad)  
   140007e2a:	(bad)  
   140007e2b:	(bad)  
   140007e2c:	(bad)  
   140007e2d:	(bad)  
   140007e2e:	(bad)  
   140007e2f:	(bad)  
   140007e30:	(bad)  
   140007e31:	(bad)  
   140007e32:	(bad)  
   140007e33:	(bad)  
   140007e34:	(bad)  
   140007e35:	(bad)  
   140007e36:	(bad)  
   140007e37:	(bad)  
   140007e38:	(bad)  
   140007e39:	(bad)  
   140007e3a:	(bad)  
   140007e3b:	(bad)  
   140007e3c:	(bad)  
   140007e3d:	(bad)  
   140007e3e:	(bad)  
   140007e3f:	(bad)  
   140007e40:	(bad)  
   140007e41:	(bad)  
   140007e42:	(bad)  
   140007e43:	(bad)  
   140007e44:	(bad)  
   140007e45:	(bad)  
   140007e46:	(bad)  
   140007e47:	(bad)  
   140007e48:	(bad)  
   140007e49:	(bad)  
   140007e4a:	(bad)  
   140007e4b:	(bad)  
   140007e4c:	(bad)  
   140007e4d:	(bad)  
   140007e4e:	(bad)  
   140007e4f:	(bad)  
   140007e50:	(bad)  
   140007e51:	(bad)  
   140007e52:	(bad)  
   140007e53:	(bad)  
   140007e54:	(bad)  
   140007e55:	(bad)  
   140007e56:	(bad)  
   140007e57:	(bad)  
   140007e58:	(bad)  
   140007e59:	(bad)  
   140007e5a:	(bad)  
   140007e5b:	(bad)  
   140007e5c:	(bad)  
   140007e5d:	(bad)  
   140007e5e:	(bad)  
   140007e5f:	(bad)  
   140007e60:	(bad)  
   140007e61:	(bad)  
   140007e62:	(bad)  
   140007e63:	(bad)  
   140007e64:	(bad)  
   140007e65:	(bad)  
   140007e66:	(bad)  
   140007e67:	(bad)  
   140007e68:	(bad)  
   140007e69:	(bad)  
   140007e6a:	(bad)  
   140007e6b:	(bad)  
   140007e6c:	(bad)  
   140007e6d:	(bad)  
   140007e6e:	(bad)  
   140007e6f:	(bad)  
   140007e70:	(bad)  
   140007e71:	(bad)  
   140007e72:	(bad)  
   140007e73:	(bad)  
   140007e74:	(bad)  
   140007e75:	(bad)  
   140007e76:	(bad)  
   140007e77:	(bad)  
   140007e78:	(bad)  
   140007e79:	(bad)  
   140007e7a:	(bad)  
   140007e7b:	(bad)  
   140007e7c:	(bad)  
   140007e7d:	(bad)  
   140007e7e:	(bad)  
   140007e7f:	(bad)  
   140007e80:	(bad)  
   140007e81:	(bad)  
   140007e82:	(bad)  
   140007e83:	(bad)  
   140007e84:	(bad)  
   140007e85:	(bad)  
   140007e86:	(bad)  
   140007e87:	jmp    FWORD PTR [rax]
   140007e89:	add    BYTE PTR [rax],al
   140007e8b:	add    BYTE PTR [rax],dh
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rax+0x0],ah
   140007e92:	add    BYTE PTR [rax],al
   140007e94:	add    DWORD PTR [rax],eax
   140007e96:	add    al,0x0
   140007e98:	add    BYTE PTR [rax],al
   140007e9a:	add    BYTE PTR [rax],al
   140007e9c:	add    BYTE PTR [rax+rax*1],0x0
	...
   140007eb4:	add    BYTE PTR [rax],al
   140007eb6:	add    BYTE PTR [rax],0x0
   140007eb9:	add    BYTE PTR [rax],0x0
   140007ebc:	add    BYTE PTR [rax+0x800080],al
   140007ec2:	add    BYTE PTR [rax],al
   140007ec4:	add    BYTE PTR [rax],0x80
   140007ec7:	add    BYTE PTR [rax-0x7fffff80],al
   140007ecd:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140007ed4:	add    BYTE PTR [rax],al
   140007ed6:	inc    DWORD PTR [rax]
   140007ed8:	add    bh,bh
   140007eda:	add    BYTE PTR [rax],al
   140007edc:	add    bh,bh
   140007ede:	inc    DWORD PTR [rax]
   140007ee0:	inc    DWORD PTR [rax]
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	inc    DWORD PTR [rax]
   140007ee6:	inc    DWORD PTR [rax]
   140007ee8:	(bad)  
   140007ee9:	inc    DWORD PTR [rax]
   140007eeb:	add    bh,bh
   140007eed:	(bad)  
   140007eee:	inc    DWORD PTR [rax]
	...
   140007f2c:	add    BYTE PTR [rax],al
   140007f2e:	mov    al,ch
   140007f30:	jo     0x140007f32
	...
   140007f42:	mov    BYTE PTR [rsi-0x77777179],cl
   140007f48:	mov    ?,WORD PTR [rax+0x0]
	...
   140007f53:	add    BYTE PTR [rax],al
   140007f55:	add    BYTE PTR [rax],cl
   140007f57:	mov    bh,ah
   140007f59:	mov    cs,WORD PTR [rsi-0x71777178]
   140007f5f:	mov    BYTE PTR [rsi+0x70e6],al
   140007f65:	add    BYTE PTR [rax],al
   140007f67:	add    BYTE PTR [rax],al
   140007f69:	add    BYTE PTR [rax],al
   140007f6b:	mov    BYTE PTR [rsi-0x77171788],cl
   140007f71:	mov    BYTE PTR [rax-0x77777778],cl
   140007f77:	mov    cs,WORD PTR [rsi+0xce88]
   140007f7d:	add    BYTE PTR [rax],al
   140007f7f:	add    BYTE PTR [rax],al
   140007f81:	or     BYTE PTR [rsi-0x77777772],cl
   140007f87:	mov    BYTE PTR [rax-0x71177718],cl
   140007f8d:	mov    cs,WORD PTR [rsi+0x67888c88]
   140007f93:	push   0x0
   140007f98:	add    BYTE PTR [rsi-0x71777778],cl
   140007f9e:	mov    BYTE PTR [rax-0x77770718],cl
   140007fa4:	mov    BYTE PTR [rax-0x77717778],cl
   140007faa:	call   0x14000803d
   140007faf:	add    BYTE PTR [rax],al
   140007fb1:	mov    al,bh
   140007fb3:	clc    
   140007fb4:	mov    ?,eax
   140007fb6:	mov    BYTE PTR [rax-0x17777778],cl
   140007fbc:	mov    cs,WORD PTR [rax-0x77717772]
   140007fc2:	outs   dx,BYTE PTR ds:[rsi]
   140007fc3:	xchg   BYTE PTR [rax],al
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    BYTE PTR [rax],al
   140007fc9:	call   0xcf890e56
   140007fce:	mov    BYTE PTR [rbx-0x67],bh
   140007fd1:	mov    ecx,0x8e888888
   140007fd6:	mov    BYTE PTR [rsi-0x7897770a],cl
   140007fdc:	add    BYTE PTR [rax],al
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	add    BYTE PTR [rax-0x77770708],cl
   140007fe6:	cmp    DWORD PTR [rcx-0x67646885],edi
   140007fec:	mov    BYTE PTR [rax-0x77717778],cl
   140007ff2:	out    0x8e,eax
   140007ff4:	add    BYTE PTR [rax],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	add    BYTE PTR [rax-0x78],bh
   140007ffb:	dec    BYTE PTR [rax-0x6c68847d]
   140008001:	fwait
   140008002:	xchg   edi,eax
   140008003:	fwait
   140008004:	js     0x140007f94
   140008006:	mov    al,ch
   140008008:	test   BYTE PTR [rax+0x8ec8],0x0
   14000800f:	add    BYTE PTR [rax],al
   140008011:	call   0xf988790e
   140008016:	cdq    
   140008017:	mov    ecx,0x999b98b7
   14000801c:	mov    ecx,0x8e88888f
   140008021:	mov    al,ch
   140008023:	xchg   DWORD PTR [rax],eax
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    BYTE PTR [rax],al
   140008029:	mov    BYTE PTR [rax-0x70847678],cl
   14000802f:	mov    DWORD PTR [rcx-0x47],edi
   140008032:	mov    ecx,0xe898988b
   140008037:	mov    ?,esi
   140008039:	mov    BYTE PTR [rsi-0x2],ch
   14000803c:	add    BYTE PTR [rax],al
   14000803e:	add    BYTE PTR [rax],al
   140008040:	add    al,ch
   140008042:	clc    
   140008043:	mov    BYTE PTR [rbx],bh
   140008045:	cwde   
   140008046:	(bad)  
   140008047:	(bad)  
   140008048:	mov    ecx,0x9b977b89
   14000804d:	jnp    0x140007fd7
   14000804f:	mov    BYTE PTR [rsi+0x8ce888],cl
   140008055:	add    BYTE PTR [rax],al
   140008057:	add    BYTE PTR [rax],al
   140008059:	mov    BYTE PTR [rdi-0x474679],cl
   14000805f:	(bad)  
   140008060:	clc    
   140008061:	mov    ecx,0x97b9b9b9
   140008066:	mov    al,ch
   140008068:	test   BYTE PTR [rax+0x8ec8],0x0
   14000806f:	add    BYTE PTR [rax],al
   140008071:	js     0x140007ffb
   140008073:	mov    edx,DWORD PTR [rdi-0x68]
   140008079:	clc    
   14000807a:	xchg   edi,eax
   14000807b:	cwde   
   14000807c:	cwde   
   14000807d:	mov    ecx,0x888e8888
   140008082:	call   0x140008115
   140008087:	add    BYTE PTR [rax],al
   140008089:	out    dx,eax
   14000808a:	clc    
   14000808b:	(bad)  
   14000808c:	fwait
   14000808d:	lahf   
   14000808e:	(bad)  
   14000808f:	(bad)  
   140008090:	(bad)  
   140008091:	dec    DWORD PTR [rbx-0x67646465]
   140008097:	mov    BYTE PTR [rsi+0xf76e88],cl
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rax],al
   1400080a1:	mov    BYTE PTR [rax-0x677447],cl
   1400080a7:	(bad)  
   1400080a8:	(bad)  
   1400080a9:	(bad)  
   1400080aa:	dec    DWORD PTR [rcx-0x71478677]
   1400080b0:	mov    WORD PTR [rax+0x8ee7],cs
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	add    al,ch
   1400080ba:	clc    
   1400080bb:	fwait
   1400080bc:	xchg   edi,eax
   1400080bd:	mov    eax,0xffffffff
   1400080c2:	(bad)  
   1400080c3:	(bad)  
   1400080c4:	mov    ecx,0xfe8897b7
   1400080c9:	mov    al,cl
   1400080cb:	xchg   DWORD PTR [rax],eax
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rax],al
   1400080d1:	mov    BYTE PTR [rax-0x6746c8],cl
   1400080d7:	(bad)  
   1400080d8:	(bad)  
   1400080d9:	(bad)  
   1400080da:	(bad)  
   1400080db:	(bad)  
   1400080dc:	clc    
   1400080dd:	fwait
   1400080de:	fwait
   1400080df:	mov    BYTE PTR [rsi+0x8ee888],al
   1400080e5:	add    BYTE PTR [rax],al
   1400080e7:	add    BYTE PTR [rax],al
   1400080e9:	js     0x1400080de
   1400080eb:	fwait
   1400080ec:	fwait
   1400080ed:	mov    eax,0xffffffff
   1400080f2:	(bad)  
   1400080f3:	(bad)  
   1400080f4:	dec    DWORD PTR [rcx-0x77017177]
   1400080fa:	out    0x8e,eax
   1400080fc:	add    BYTE PTR [rax],al
   1400080fe:	add    BYTE PTR [rax],al
   140008100:	add    bh,ch
   140008102:	mov    BYTE PTR [rcx-0x6777],bh
   140008108:	(bad)  
   140008109:	(bad)  
   14000810a:	(bad)  
   14000810b:	(bad)  
   14000810c:	(bad)  
   14000810d:	mov    ecx,0x888c88bb
   140008112:	push   0x87
   140008117:	add    BYTE PTR [rax],al
   140008119:	mov    cl,bh
   14000811b:	mov    ecx,0xffffb8b7
   140008120:	(bad)  
   140008121:	(bad)  
   140008122:	(bad)  
   140008123:	(bad)  
   140008124:	clc    
   140008125:	mov    edx,DWORD PTR [rdi-0x17777178]
   14000812b:	mov    es,WORD PTR [rax]
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    BYTE PTR [rax],al
   140008131:	js     0x1400080bb
   140008133:	cwde   
   140008134:	fwait
   140008135:	cwde   
   140008136:	(bad)  
   140008137:	(bad)  
   140008138:	(bad)  
   140008139:	(bad)  
   14000813a:	(bad)  
   14000813b:	dec    DWORD PTR [rbx-0x71786469]
   140008141:	mov    BYTE PTR [rsi-0x79],ch
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	add    bh,ch
   14000814a:	idiv   DWORD PTR [rbx-0x4768]
   140008150:	(bad)  
   140008151:	(bad)  
   140008152:	dec    DWORD PTR [rbx-0x77474667]
   140008158:	xchg   BYTE PTR [rax+0x8ee8],cl
   14000815e:	add    BYTE PTR [rax],al
   140008160:	add    BYTE PTR [rax-0x47866408],cl
   140008166:	(bad)  
   140008167:	(bad)  
   140008168:	(bad)  
   140008169:	(bad)  
   14000816a:	sti    
   14000816b:	xchg   edi,eax
   14000816c:	mov    bh,0xb7
   14000816e:	cwde   
   14000816f:	mov    cs,WORD PTR [rsi+0x86c888]
   140008175:	add    BYTE PTR [rax],al
   140008177:	add    BYTE PTR [rax],al
   140008179:	js     0x140008173
   14000817b:	jnp    0x140008118
   14000817d:	cwde   
   14000817e:	(bad)  
   14000817f:	(bad)  
   140008180:	(bad)  
   140008181:	clc    
   140008182:	mov    bh,0x9b
   140008184:	xchg   edi,eax
   140008185:	fwait
   140008186:	cwde   
   140008187:	mov    BYTE PTR [rdi+0x8ee8e8],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rax],al
   140008191:	out    dx,eax
   140008192:	(bad)  
   140008193:	jnp    0x140008210
   140008195:	lahf   
   140008196:	(bad)  
   140008197:	(bad)  
   140008198:	(bad)  
   140008199:	mov    ecx,0xb7b9b789
   14000819e:	mov    al,ch
   1400081a0:	mov    cs,WORD PTR [rax+0x8768]
   1400081a6:	add    BYTE PTR [rax],al
   1400081a8:	add    BYTE PTR [rax-0x77467608],cl
   1400081ae:	(bad)  
   1400081af:	dec    DWORD PTR [rbx-0x48866485]
   1400081b5:	fwait
   1400081b6:	mov    BYTE PTR [rax-0x7117777a],cl
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	add    BYTE PTR [rax],al
   1400081c0:	add    al,ch
   1400081c2:	clc    
   1400081c3:	div    DWORD PTR [rdi-0x46070048]
   1400081c9:	jns    0x140008182
   1400081cb:	mov    ecx,0x8887988b
   1400081d0:	dec    BYTE PTR [rax+0x8ec8]
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	add    BYTE PTR [rax-0x46867771],cl
   1400081de:	clc    
   1400081df:	mov    ecx,0x989bb8b9
   1400081e4:	fwait
   1400081e5:	mov    BYTE PTR [rax-0x17777918],cl
   1400081eb:	xchg   BYTE PTR [rax],al
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rax],al
   1400081f1:	call   0x1bb8c11f5
   1400081f6:	fwait
   1400081f7:	fwait
   1400081f8:	ja     0x1400081b3
   1400081fa:	mov    bh,0xb9
   1400081fc:	mov    ecx,0xfe888888
   140008201:	mov    BYTE PTR [rsi-0x2],ch
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	add    BYTE PTR [rdi-0x78],bh
   14000820b:	clc    
   14000820c:	call   0xf98a1dac
   140008211:	mov    bh,0x9b
   140008213:	jnp    0x14000828d
   140008215:	mov    BYTE PTR [rax-0x17877178],cl
   14000821b:	xchg   DWORD PTR [rax],eax
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    BYTE PTR [rax],al
   140008221:	call   0xc7900b25
   140008226:	mov    ecx,0x797b9bb8
   14000822b:	mov    ecx,0xfe8e88f8
   140008230:	test   BYTE PTR [rax+0x8ec8],0x0
   140008237:	add    BYTE PTR [rax],al
   140008239:	mov    BYTE PTR [rax-0x74777778],cl
   14000823f:	fwait
   140008240:	mov    bh,0x9b
   140008242:	fwait
   140008243:	mov    BYTE PTR [rax-0x71707078],cl
   140008249:	mov    al,ch
   14000824b:	xchg   BYTE PTR [rax],al
   14000824d:	add    BYTE PTR [rax],al
   14000824f:	add    BYTE PTR [rax],al
   140008251:	js     0x140008252
   140008253:	mov    ?,eax
   140008255:	clc    
   140008256:	mov    BYTE PTR [rax-0x77777787],cl
   14000825c:	clc    
   14000825d:	mov    BYTE PTR [rax+0x6e88f688],cl
   140008263:	test   DWORD PTR [rax],0x0
   140008269:	out    dx,eax
   14000826a:	mov    al,bh
   14000826c:	mov    BYTE PTR [rax-0x77007711],cl
   140008272:	clc    
   140008273:	clc    
   140008274:	out    dx,eax
   140008275:	mov    BYTE PTR [rax-0x18877111],cl
   14000827b:	mov    es,WORD PTR [rax]
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rax],al
   140008281:	mov    bh,bh
   140008283:	clc    
   140008284:	clc    
   140008285:	(bad)  
   140008286:	clc    
   140008287:	(bad)  
   14000828b:	(bad)  
   14000828c:	(bad)
   140008290:	mov    cs,WORD PTR [rax+0xe8c8]
   140008296:	add    BYTE PTR [rax],al
   140008298:	add    BYTE PTR [rsi-0x71717182],cl
   14000829e:	mov    al,ch
   1400082a0:	mov    cs,WORD PTR [rax-0x77770772]
   1400082a6:	mov    al,bh
   1400082a8:	dec    dh
	...
   1400082b6:	add    BYTE PTR [rax-0x17771778],cl
   1400082bc:	out    dx,al
   1400082bd:	mov    cs,WORD PTR [rsi+0xe8e7]
	...
   14000836f:	add    bh,bh
   140008371:	(bad)  
   140008372:	(bad)  
   140008373:	(bad)  
   140008374:	(bad)  
   140008375:	inc    DWORD PTR [rax]
   140008377:	add    bh,bh
   140008379:	(bad)  
   14000837a:	(bad)  
   14000837b:	(bad)  
   14000837c:	(bad)  
   14000837d:	inc    DWORD PTR [rax]
   14000837f:	add    bh,bh
   140008381:	(bad)  
   140008382:	push   rax
   140008384:	jg     0x140008385
   140008386:	add    BYTE PTR [rax],al
   140008388:	(bad)  
   140008389:	push   rax
   14000838b:	add    BYTE PTR [rdi],bl
   14000838d:	inc    DWORD PTR [rax]
   14000838f:	add    bh,bh
   140008391:	clc    
   140008392:	add    BYTE PTR [rax],al
   140008394:	(bad)  
   140008395:	inc    DWORD PTR [rax]
   140008397:	add    ah,bh
   140008399:	add    BYTE PTR [rax],al
   14000839b:	add    BYTE PTR [rbx],al
   14000839d:	inc    DWORD PTR [rax]
   14000839f:	add    al,ah
   1400083a1:	add    BYTE PTR [rax],al
   1400083a3:	add    BYTE PTR [rax],al
   1400083a5:	inc    DWORD PTR [rax]
   1400083a7:	add    al,al
   1400083a9:	add    BYTE PTR [rax],al
   1400083ab:	add    BYTE PTR [rax],al
   1400083ad:	inc    DWORD PTR [rax]
   1400083af:	add    al,al
   1400083b1:	add    BYTE PTR [rax],al
   1400083b3:	add    BYTE PTR [rax],al
   1400083b5:	inc    DWORD PTR [rax]
   1400083b7:	add    al,al
   1400083b9:	add    BYTE PTR [rax],al
   1400083bb:	add    BYTE PTR [rax],al
   1400083bd:	inc    DWORD PTR [rax]
   1400083bf:	add    al,al
   1400083c1:	add    BYTE PTR [rax],al
   1400083c3:	add    BYTE PTR [rax],al
   1400083c5:	inc    DWORD PTR [rax]
   1400083c7:	add    al,al
   1400083c9:	add    BYTE PTR [rax],al
   1400083cb:	add    BYTE PTR [rax],al
   1400083cd:	inc    DWORD PTR [rax]
   1400083cf:	add    al,al
   1400083d1:	add    BYTE PTR [rax],al
   1400083d3:	add    BYTE PTR [rax],al
   1400083d5:	inc    DWORD PTR [rax]
   1400083d7:	add    al,al
   1400083d9:	add    BYTE PTR [rax],al
   1400083db:	add    BYTE PTR [rax],al
   1400083dd:	inc    DWORD PTR [rax]
   1400083df:	add    al,al
   1400083e1:	add    BYTE PTR [rax],al
   1400083e3:	add    BYTE PTR [rax],al
   1400083e5:	inc    DWORD PTR [rax]
   1400083e7:	add    al,al
   1400083e9:	add    BYTE PTR [rax],al
   1400083eb:	add    BYTE PTR [rax],al
   1400083ed:	inc    DWORD PTR [rax]
   1400083ef:	add    al,al
   1400083f1:	add    BYTE PTR [rax],al
   1400083f3:	add    BYTE PTR [rax],al
   1400083f5:	inc    DWORD PTR [rax]
   1400083f7:	add    al,al
   1400083f9:	add    BYTE PTR [rax],al
   1400083fb:	add    BYTE PTR [rax],al
   1400083fd:	inc    DWORD PTR [rax]
   1400083ff:	add    al,al
   140008401:	add    BYTE PTR [rax],al
   140008403:	add    BYTE PTR [rax],al
   140008405:	inc    DWORD PTR [rax]
   140008407:	add    al,al
   140008409:	add    BYTE PTR [rax],al
   14000840b:	add    BYTE PTR [rax],al
   14000840d:	inc    DWORD PTR [rax]
   14000840f:	add    al,al
   140008411:	add    BYTE PTR [rax],al
   140008413:	add    BYTE PTR [rax],al
   140008415:	inc    DWORD PTR [rax]
   140008417:	add    al,al
   140008419:	add    BYTE PTR [rax],al
   14000841b:	add    BYTE PTR [rax],al
   14000841d:	inc    DWORD PTR [rax]
   14000841f:	add    al,al
   140008421:	add    BYTE PTR [rax],al
   140008423:	add    BYTE PTR [rax],al
   140008425:	inc    DWORD PTR [rax]
   140008427:	add    al,al
   140008429:	add    BYTE PTR [rax],al
   14000842b:	add    BYTE PTR [rax],al
   14000842d:	inc    DWORD PTR [rax]
   14000842f:	add    al,al
   140008431:	add    BYTE PTR [rax],al
   140008433:	add    BYTE PTR [rax],al
   140008435:	inc    DWORD PTR [rax]
   140008437:	add    al,al
   140008439:	add    BYTE PTR [rax],al
   14000843b:	add    BYTE PTR [rax],al
   14000843d:	inc    DWORD PTR [rax]
   14000843f:	add    al,al
   140008441:	add    BYTE PTR [rax],al
   140008443:	add    BYTE PTR [rax],al
   140008445:	inc    DWORD PTR [rax]
   140008447:	add    al,al
   140008449:	add    BYTE PTR [rax],al
   14000844b:	add    BYTE PTR [rax],al
   14000844d:	inc    DWORD PTR [rax]
   14000844f:	add    al,al
   140008451:	add    BYTE PTR [rax],al
   140008453:	add    BYTE PTR [rax],al
   140008455:	inc    DWORD PTR [rax]
   140008457:	add    al,al
   140008459:	add    BYTE PTR [rax],al
   14000845b:	add    BYTE PTR [rax],al
   14000845d:	inc    DWORD PTR [rax]
   14000845f:	add    al,al
   140008461:	add    BYTE PTR [rax],al
   140008463:	add    BYTE PTR [rax],al
   140008465:	inc    DWORD PTR [rax]
   140008467:	add    al,al
   140008469:	add    BYTE PTR [rax],al
   14000846b:	add    BYTE PTR [rax],al
   14000846d:	inc    DWORD PTR [rax]
   14000846f:	add    al,al
   140008471:	add    BYTE PTR [rax],al
   140008473:	add    BYTE PTR [rax],al
   140008475:	inc    DWORD PTR [rax]
   140008477:	add    al,al
   140008479:	add    BYTE PTR [rax],al
   14000847b:	add    BYTE PTR [rax],al
   14000847d:	inc    DWORD PTR [rax]
   14000847f:	add    al,al
   140008481:	add    BYTE PTR [rax],al
   140008483:	add    BYTE PTR [rax],al
   140008485:	inc    DWORD PTR [rax]
   140008487:	add    al,al
   140008489:	add    BYTE PTR [rax],al
   14000848b:	add    BYTE PTR [rax],al
   14000848d:	inc    DWORD PTR [rax]
   14000848f:	add    al,al
   140008491:	add    BYTE PTR [rax],al
   140008493:	add    BYTE PTR [rax],al
   140008495:	inc    DWORD PTR [rax]
   140008497:	add    al,al
   140008499:	add    BYTE PTR [rax],al
   14000849b:	add    BYTE PTR [rax],al
   14000849d:	inc    DWORD PTR [rax]
   14000849f:	add    al,al
   1400084a1:	add    BYTE PTR [rax],al
   1400084a3:	add    BYTE PTR [rax],al
   1400084a5:	inc    DWORD PTR [rax]
   1400084a7:	add    al,al
   1400084a9:	add    BYTE PTR [rax],al
   1400084ab:	add    BYTE PTR [rdi],cl
   1400084ad:	inc    DWORD PTR [rax]
   1400084af:	add    bh,bh
   1400084b1:	cld    
   1400084b2:	add    BYTE PTR [rax],al
   1400084b4:	(bad)  
   1400084b5:	inc    DWORD PTR [rax]
   1400084b7:	add    bh,bh
   1400084b9:	(bad)  
   1400084ba:	(bad)  
   1400084bb:	(bad)  
   1400084bc:	(bad)  
   1400084bd:	inc    DWORD PTR [rax]
   1400084bf:	add    bh,bh
   1400084c1:	(bad)  
   1400084c2:	(bad)  
   1400084c3:	(bad)  
   1400084c4:	(bad)  
   1400084c5:	inc    DWORD PTR [rax]
   1400084c7:	add    bh,bh
   1400084c9:	(bad)  
   1400084ca:	(bad)  
   1400084cb:	(bad)  
   1400084cc:	(bad)  
   1400084cd:	inc    DWORD PTR [rax]
   1400084cf:	add    bh,bh
   1400084d1:	(bad)  
   1400084d2:	(bad)  
   1400084d3:	(bad)  
   1400084d4:	(bad)  
   1400084d5:	inc    DWORD PTR [rax]
   1400084d7:	add    bh,bh
   1400084d9:	(bad)  
   1400084da:	(bad)  
   1400084db:	(bad)  
   1400084dc:	(bad)  
   1400084dd:	inc    DWORD PTR [rax]
   1400084df:	add    bh,bh
   1400084e1:	(bad)  
   1400084e2:	(bad)  
   1400084e3:	(bad)  
   1400084e4:	(bad)  
   1400084e5:	inc    DWORD PTR [rax]
   1400084e7:	add    bh,bh
   1400084e9:	(bad)  
   1400084ea:	(bad)  
   1400084eb:	(bad)  
   1400084ec:	(bad)  
   1400084ed:	inc    DWORD PTR [rax]
   1400084ef:	add    BYTE PTR [rax],ch
   1400084f1:	add    BYTE PTR [rax],al
   1400084f3:	add    BYTE PTR [rax],ah
   1400084f5:	add    BYTE PTR [rax],al
   1400084f7:	add    BYTE PTR [rax+0x0],al
   1400084fa:	add    BYTE PTR [rax],al
   1400084fc:	add    DWORD PTR [rax],eax
   1400084fe:	add    al,0x0
   140008500:	add    BYTE PTR [rax],al
   140008502:	add    BYTE PTR [rax],al
   140008504:	add    BYTE PTR [rdx],al
	...
   14000851e:	add    BYTE PTR [rax],0x0
   140008521:	add    BYTE PTR [rax],0x0
   140008524:	add    BYTE PTR [rax+0x800080],al
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	add    BYTE PTR [rax],0x80
   14000852f:	add    BYTE PTR [rax-0x7fffff80],al
   140008535:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000853c:	add    BYTE PTR [rax],al
   14000853e:	inc    DWORD PTR [rax]
   140008540:	add    bh,bh
   140008542:	add    BYTE PTR [rax],al
   140008544:	add    bh,bh
   140008546:	inc    DWORD PTR [rax]
   140008548:	inc    DWORD PTR [rax]
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	inc    DWORD PTR [rax]
   14000854e:	inc    DWORD PTR [rax]
   140008550:	(bad)  
   140008551:	inc    DWORD PTR [rax]
   140008553:	add    bh,bh
   140008555:	(bad)  
   140008556:	inc    DWORD PTR [rax]
	...
   140008580:	add    BYTE PTR [rax+0x7888],cl
   140008586:	add    BYTE PTR [rax],al
   140008588:	add    BYTE PTR [rax],al
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	add    BYTE PTR [rax-0x71777778],cl
   140008592:	mov    bh,ah
   140008594:	xchg   DWORD PTR [rax],eax
   140008596:	add    BYTE PTR [rax],al
   140008598:	add    BYTE PTR [rax-0x71778778],cl
   14000859e:	mov    al,ch
   1400085a0:	mov    cs,WORD PTR [rax-0x77717178]
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	add    BYTE PTR [rsi-0x78],bh
   1400085ab:	mov    cs,WORD PTR [rax-0x77777778]
   1400085b1:	mov    BYTE PTR [rax+0x8e8786],cl
   1400085b7:	add    BYTE PTR [rax],al
   1400085b9:	mov    al,bh
   1400085bb:	mov    BYTE PTR [rax-0x77c76789],cl
   1400085c1:	mov    cs,WORD PTR [rax+0x878e8e]
   1400085c7:	add    BYTE PTR [rax],al
   1400085c9:	call   0xdb840e56
   1400085ce:	fwait
   1400085cf:	xchg   edi,eax
   1400085d0:	cwde   
   1400085d1:	mov    BYTE PTR [rax+0x8e8787],cl
   1400085d7:	add    BYTE PTR [rax],al
   1400085d9:	mov    al,bh
   1400085db:	xchg   DWORD PTR [rbx-0x48466869],ebx
   1400085e1:	mov    bh,ch
   1400085e3:	mov    cs,WORD PTR [rsi+0x87]
   1400085e9:	mov    ?,eax
   1400085eb:	mov    ebx,DWORD PTR [rdi-0x64686405]
   1400085f1:	cwde   
   1400085f2:	mov    BYTE PTR [rsi+0x87f7],al
   1400085f8:	add    BYTE PTR [rax-0x706678],cl
   1400085fe:	mov    DWORD PTR [rcx-0x77718847],edi
   140008604:	mov    cs,WORD PTR [rsi-0x18000000]
   14000860a:	stc    
   14000860b:	mov    bl,0x8f
   14000860d:	(bad)  
   14000860e:	dec    DWORD PTR [rcx-0x71774687]
   140008614:	xchg   DWORD PTR [rdi-0x78000000],eax
   14000861a:	sbb    DWORD PTR [rbx-0x7000071],0xffffffb9
   140008621:	jnp    0x14000869b
   140008623:	xchg   DWORD PTR [rsi+0x87],ecx
   140008629:	mov    BYTE PTR [rbx-0x67],bh
   14000862c:	(bad)  
   14000862d:	(bad)  
   14000862e:	(bad)  
   14000862f:	(bad)  
   140008630:	clc    
   140008631:	cdq    
   140008632:	mov    eax,0x8e878e
   140008637:	add    BYTE PTR [rax],al
   140008639:	call   0x13fc03fd6
   14000863e:	(bad)  
   14000863f:	(bad)  
   140008640:	push   QWORD PTR [rdi-0x78097368]
   140008646:	add    BYTE PTR [rax],al
   140008648:	add    BYTE PTR [rax-0x704887],cl
   14000864e:	(bad)  
   14000864f:	(bad)  
   140008650:	dec    DWORD PTR [rcx-0x77711748]
   140008656:	add    BYTE PTR [rax],al
   140008658:	add    BYTE PTR [rax-0x706475],cl
   14000865e:	(bad)  
   14000865f:	(bad)  
   140008660:	sti    
   140008661:	fwait
   140008662:	js     0x1400085ea
   140008664:	test   DWORD PTR [rsi-0x18000000],0xff8f8979
   14000866e:	(bad)  
   14000866f:	clc    
   140008670:	fwait
   140008671:	xchg   edi,eax
   140008672:	js     0x140008602
   140008674:	mov    es,WORD PTR [rdi-0x78000000]
   14000867a:	mov    edi,DWORD PTR [rcx-0x46000041]
   140008680:	mov    ecx,0x87878889
   140008685:	mov    es,WORD PTR [rax]
   140008687:	add    BYTE PTR [rax],al
   140008689:	mov    BYTE PTR [rdi-0x76007065],al
   14000868f:	mov    ecx,0x8e889b8b
   140008694:	xchg   DWORD PTR [rdi-0x18000000],eax
   14000869a:	clc    
   14000869b:	jnp    0x14000862c
   14000869d:	mov    ebx,DWORD PTR [rbx-0x77886485]
   1400086a3:	xchg   DWORD PTR [rsi+0x8e],ecx
   1400086a9:	mov    BYTE PTR [rax+0x798bb989],cl
   1400086af:	mov    ecx,0x8e888889
   1400086b4:	xchg   DWORD PTR [rdi-0x18000000],eax
   1400086ba:	clc    
   1400086bb:	xchg   DWORD PTR [rbx-0x65],edi
   1400086be:	cwde   
   1400086bf:	mov    ecx,0x8e8888b8
   1400086c4:	mov    es,WORD PTR [rdi-0x78000000]
   1400086ca:	mov    BYTE PTR [rdi-0x77467689],cl
   1400086d0:	js     0x14000865a
   1400086d2:	mov    BYTE PTR [rdi+0x8e87],al
   1400086d8:	add    BYTE PTR [rax-0x78],bh
   1400086db:	call   0xc8890fd8
   1400086e0:	mov    BYTE PTR [rax-0x78717178],cl
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	add    al,ch
   1400086ea:	(bad)
   1400086ee:	mov    ?,eax
   1400086f0:	mov    BYTE PTR [rax-0x77787111],cl
   1400086f6:	add    BYTE PTR [rax],al
   1400086f8:	add    BYTE PTR [rax],cl
   1400086fa:	out    0xe7,eax
   1400086fc:	call   0x1be7f6ee8
   140008701:	jle    0x140008779
   140008703:	xchg   DWORD PTR [rax+0x0],esi
	...
   140008756:	add    BYTE PTR [rax],al
   140008758:	(bad)  
   140008759:	(bad)  
   14000875a:	(bad)  
   14000875b:	(bad)  
   14000875c:	(bad)  
   14000875d:	(bad)  
   14000875e:	(bad)  
   14000875f:	(bad)  
   140008760:	(bad)  
   140008761:	inc    eax
   140008763:	(bad)  
   140008764:	inc    eax
   140008766:	add    BYTE PTR [rdi],bh
   140008768:	rol    BYTE PTR [rax],0x0
   14000876b:	xadd   BYTE PTR [rax],al
   14000876e:	add    BYTE PTR [rdi],cl
   140008770:	rol    BYTE PTR [rax],0x0
   140008773:	xadd   BYTE PTR [rax],al
   140008776:	add    BYTE PTR [rdi],cl
   140008778:	rol    BYTE PTR [rax],0x0
   14000877b:	xadd   BYTE PTR [rax],al
   14000877e:	add    BYTE PTR [rdi],cl
   140008780:	rol    BYTE PTR [rax],0x0
   140008783:	xadd   BYTE PTR [rax],al
   140008786:	add    BYTE PTR [rdi],cl
   140008788:	rol    BYTE PTR [rax],0x0
   14000878b:	xadd   BYTE PTR [rax],al
   14000878e:	add    BYTE PTR [rdi],cl
   140008790:	rol    BYTE PTR [rax],0x0
   140008793:	xadd   BYTE PTR [rax],al
   140008796:	add    BYTE PTR [rdi],cl
   140008798:	rol    BYTE PTR [rax],0x0
   14000879b:	xadd   BYTE PTR [rax],al
   14000879e:	add    BYTE PTR [rdi],cl
   1400087a0:	rol    BYTE PTR [rax],0x0
   1400087a3:	xadd   BYTE PTR [rax],al
   1400087a6:	add    BYTE PTR [rdi],cl
   1400087a8:	rol    BYTE PTR [rax],0x0
   1400087ab:	xadd   BYTE PTR [rax],al
   1400087ae:	add    BYTE PTR [rdi],cl
   1400087b0:	rol    BYTE PTR [rax],0x0
   1400087b3:	xadd   BYTE PTR [rax],al
   1400087b6:	add    BYTE PTR [rdi],cl
   1400087b8:	rol    BYTE PTR [rax],0x0
   1400087bb:	xadd   BYTE PTR [rax],al
   1400087be:	add    BYTE PTR [rdi],cl
   1400087c0:	loopne 0x1400087c2
   1400087c2:	add    BYTE PTR [rdi-0x1],bh
   1400087c5:	(bad)  
   1400087c6:	(bad)  
   1400087c7:	(bad)  
   1400087c8:	(bad)  
   1400087c9:	(bad)  
   1400087ca:	(bad)  
   1400087cb:	(bad)  
   1400087cc:	(bad)  
   1400087cd:	(bad)  
   1400087ce:	(bad)  
   1400087cf:	(bad)  
   1400087d0:	(bad)  
   1400087d1:	(bad)  
   1400087d2:	(bad)  
   1400087d3:	(bad)  
   1400087d4:	(bad)  
   1400087d5:	(bad)  
   1400087d6:	(bad)  
   1400087d7:	jmp    FWORD PTR [rax]
   1400087d9:	add    BYTE PTR [rax],al
   1400087db:	add    BYTE PTR [rax],bl
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rax],dh
   1400087e1:	add    BYTE PTR [rax],al
   1400087e3:	add    BYTE PTR [rcx],al
   1400087e5:	add    BYTE PTR [rax+rax*1],al
   1400087e8:	add    BYTE PTR [rax],al
   1400087ea:	add    BYTE PTR [rax],al
   1400087ec:	and    BYTE PTR [rcx],al
	...
   140008806:	add    BYTE PTR [rax],0x0
   140008809:	add    BYTE PTR [rax],0x0
   14000880c:	add    BYTE PTR [rax+0x800080],al
   140008812:	add    BYTE PTR [rax],al
   140008814:	add    BYTE PTR [rax],0x80
   140008817:	add    BYTE PTR [rax-0x7fffff80],al
   14000881d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140008824:	add    BYTE PTR [rax],al
   140008826:	inc    DWORD PTR [rax]
   140008828:	add    bh,bh
   14000882a:	add    BYTE PTR [rax],al
   14000882c:	add    bh,bh
   14000882e:	inc    DWORD PTR [rax]
   140008830:	inc    DWORD PTR [rax]
   140008832:	add    BYTE PTR [rax],al
   140008834:	inc    DWORD PTR [rax]
   140008836:	inc    DWORD PTR [rax]
   140008838:	(bad)  
   140008839:	inc    DWORD PTR [rax]
   14000883b:	add    bh,bh
   14000883d:	(bad)  
   14000883e:	inc    DWORD PTR [rax]
   140008840:	add    BYTE PTR [rax],al
   140008842:	add    BYTE PTR [rax],al
   140008844:	add    BYTE PTR [rax],al
   140008846:	add    BYTE PTR [rax+0x7088],cl
   14000884c:	add    BYTE PTR [rax],al
   14000884e:	add    BYTE PTR [rax-0x71777778],cl
   140008854:	mov    BYTE PTR [rsi-0x78f7ff88],cl
   14000885a:	mov    BYTE PTR [rsi-0x77777178],cl
   140008860:	mov    es,WORD PTR [rdi-0x77777f7a]
   140008866:	mov    cs,WORD PTR [rax-0x77717779]
   14000886c:	mov    BYTE PTR [rsi-0x7777978],cl
   140008872:	(bad)
   140008876:	js     0x140008800
   140008878:	mov    BYTE PTR [rdi-0x71777772],al
   14000887e:	xchg   DWORD PTR [rcx+0x78999bb7],ebx
   140008884:	mov    BYTE PTR [rsi-0x7717979],cl
   14000888a:	mov    ecx,0x8bb99988
   14000888f:	xchg   edi,eax
   140008890:	mov    es,WORD PTR [rdi-0x7777772]
   140008896:	fwait
   140008897:	(bad)  
   140008898:	clc    
   140008899:	fwait
   14000889a:	cdq    
   14000889b:	mov    ecx,0x86878e88
   1400088a0:	mov    BYTE PTR [rcx-0x760000c7],cl
   1400088a6:	mov    ecx,0x8887987b
   1400088ab:	mov    BYTE PTR [rax-0x8475],cl
   1400088b1:	dec    DWORD PTR [rcx-0x79718847]
   1400088b7:	mov    cs,WORD PTR [rax-0x4677]
   1400088bd:	(bad)  
   1400088be:	(bad)  
   1400088bf:	jns    0x140008878
   1400088c1:	xchg   DWORD PTR [rax-0x68847779],ecx
   1400088c7:	(bad)  
   1400088c8:	(bad)  
   1400088c9:	(bad)  
   1400088ca:	(bad)  
   1400088cb:	sti    
   1400088cc:	xchg   edi,eax
   1400088cd:	mov    cs,WORD PTR [rsi-0x46867772]
   1400088d3:	(bad)  
   1400088d4:	(bad)  
   1400088d5:	(bad)  
   1400088d6:	(bad)  
   1400088d7:	stc    
   1400088d8:	mov    bh,0x87
   1400088da:	xchg   DWORD PTR [rdi-0x647478],eax
   1400088e0:	(bad)  
   1400088e1:	(bad)  
   1400088e2:	clc    
   1400088e3:	mov    ecx,0x878e8778
   1400088e8:	mov    BYTE PTR [rcx-0x7049],cl
   1400088ee:	mov    ecx,0x878e973b
   1400088f3:	mov    cs,WORD PTR [rax-0x6475]
   1400088f9:	mov    DWORD PTR [rcx-0x71784777],edi
   1400088ff:	test   DWORD PTR [rax-0x400c678],0x889b7b9b
   140008909:	mov    es,WORD PTR [rdi-0x44077779]
   14000890f:	mov    BYTE PTR [rbx+0x78b7989b],bl
   140008915:	xchg   DWORD PTR [rdi+0x79888e8e],eax
   14000891b:	mov    ecx,0xb7b9b7b7
   140008920:	mov    BYTE PTR [rsi-0x7777872],cl
   140008926:	mov    BYTE PTR [rbx-0x65],bh
   140008929:	cdq    
   14000892a:	mov    bh,0x88
   14000892c:	mov    BYTE PTR [rdi-0x77777779],al
   140008932:	call   0xc88900bf
   140008937:	mov    BYTE PTR [rax-0x71797172],cl
   14000893d:	clc    
   14000893e:	mov    BYTE PTR [rax-0x77777771],cl
   140008944:	mov    BYTE PTR [rax+0x7e088088],cl
   14000894a:	mov    al,ch
   14000894c:	out    0x8e,eax
   14000894e:	jle    0x1400088de
   140008950:	jle    0x1400088e0
	...
   14000895e:	add    BYTE PTR [rax],al
   140008960:	(bad)  
   140008961:	cld    
   140008962:	(bad)  
   140008963:	add    ah,bh
   140008965:	add    BYTE PTR [rbx],al
   140008967:	add    BYTE PTR [rax+0x100],al
	...
   1400089b5:	add    BYTE PTR [rcx],al
   1400089b7:	add    BYTE PTR [rax-0xfff100],al
   1400089bd:	(bad)  
   1400089be:	inc    DWORD PTR [rax]
   1400089c0:	sub    BYTE PTR [rax],al
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	adc    BYTE PTR [rax],al
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	and    BYTE PTR [rax],al
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	add    DWORD PTR [rax],eax
   1400089ce:	add    al,0x0
   1400089d0:	add    BYTE PTR [rax],al
   1400089d2:	add    BYTE PTR [rax],al
   1400089d4:	add    BYTE PTR [rax],0x0
	...
   1400089eb:	add    BYTE PTR [rax],al
   1400089ed:	add    BYTE PTR [rax+0x800000],al
   1400089f3:	add    BYTE PTR [rax],al
   1400089f5:	add    BYTE PTR [rax+0x8000],0x0
   1400089fc:	add    BYTE PTR [rax],0x80
   1400089ff:	add    BYTE PTR [rax-0x7fffff80],al
   140008a05:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140008a0c:	add    BYTE PTR [rax],al
   140008a0e:	inc    DWORD PTR [rax]
   140008a10:	add    bh,bh
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	add    bh,bh
   140008a16:	inc    DWORD PTR [rax]
   140008a18:	inc    DWORD PTR [rax]
   140008a1a:	add    BYTE PTR [rax],al
   140008a1c:	inc    DWORD PTR [rax]
   140008a1e:	inc    DWORD PTR [rax]
   140008a20:	(bad)  
   140008a21:	inc    DWORD PTR [rax]
   140008a23:	add    bh,bh
   140008a25:	(bad)  
   140008a26:	inc    DWORD PTR [rax]
   140008a28:	xchg   BYTE PTR [rsi-0x7979797a],al
   140008a2e:	xchg   BYTE PTR [rdi-0x77777788],al
   140008a34:	mov    BYTE PTR [rax-0x71177178],cl
   140008a3a:	mov    BYTE PTR [rdi+0x37],dh
   140008a3d:	mov    ?,WORD PTR [rsi-0x79]
   140008a40:	js     0x1400089ca
   140008a42:	jae    0x1400089fd
   140008a44:	mov    ecx,0x788e8737
   140008a49:	out    0x9b,eax
   140008a4b:	mov    ebx,DWORD PTR [rbx-0x10788765]
   140008a51:	mov    ebx,DWORD PTR [rbx-0x68648401]
   140008a57:	mov    ?,WORD PTR [rax+0x79]
   140008a5a:	mov    ecx,0xb7b9f8ff
   140008a5f:	xchg   DWORD PTR [rdi-0x47],edi
   140008a62:	mov    ebx,0x938bffff
   140008a67:	mov    gs,eax
   140008a69:	jnp    0x1400089fe
   140008a6b:	(bad)  
   140008a6c:	push   rdi
   140008a6e:	mov    ecx,0xb3797f87
   140008a73:	(bad)  
   140008a74:	clc    
   140008a75:	fwait
   140008a76:	xchg   edi,eax
   140008a77:	mov    ?,WORD PTR [rdi-0x75]
   140008a7a:	fwait
   140008a7b:	call   FWORD PTR [rbx-0x17784847]
   140008a81:	idiv   DWORD PTR [rcx+0x789b9b8b]
   140008a87:	mov    ?,WORD PTR [rdi-0x78]
   140008a8a:	mov    DWORD PTR [rcx-0x78774847],edi
   140008a90:	js     0x140008a8a
   140008a92:	clc    
   140008a93:	mov    ebx,DWORD PTR [rax-0x10717188]
   140008a99:	(bad)  
   140008a9a:	(bad)  
   140008a9b:	(bad)  
   140008a9c:	(bad)  
   140008a9d:	clc    
   140008a9e:	mov    BYTE PTR [rdi-0x18181889],al
   140008aa4:	outs   dx,BYTE PTR ds:[rsi]
   140008aa5:	jle    0x140008b25
   140008aa7:	js     0x140008aa9
	...
   140008ae5:	add    BYTE PTR [rax],al
   140008ae7:	add    BYTE PTR [rax],ch
   140008ae9:	add    BYTE PTR [rax],al
   140008aeb:	add    BYTE PTR [rax+0x0],al
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	add    BYTE PTR [rax],0x0
   140008af3:	add    BYTE PTR [rcx],al
   140008af5:	add    BYTE PTR [rax],cl
   140008af7:	add    BYTE PTR [rax],al
   140008af9:	add    BYTE PTR [rax],al
   140008afb:	add    BYTE PTR [rax],al
   140008afd:	adc    BYTE PTR [rax],al
	...
   140008b07:	add    BYTE PTR [rax],al
   140008b09:	add    DWORD PTR [rax],eax
   140008b0b:	add    BYTE PTR [rax],al
   140008b0d:	add    DWORD PTR [rax],eax
   140008b0f:	add    BYTE PTR [rax],al
   140008b11:	add    BYTE PTR [rax],al
   140008b13:	add    BYTE PTR [rbp-0x6affd481],ch
   140008b19:	jnp    0x140008b6f
   140008b1b:	add    BYTE PTR [rsi-0x56ffcd7e],ch
   140008b21:	test   DWORD PTR [rdi],edi
   140008b23:	add    BYTE PTR [rcx-0x42ffca7a],dh
   140008b29:	xchg   BYTE PTR [rcx],bh
   140008b2b:	add    BYTE PTR [rbp-0x46ffc475],dh
   140008b31:	(bad)  
   140008b32:	cmp    eax,0x3f8cc000
   140008b37:	add    BYTE PTR [rdx-0x51ffb87f],ch
   140008b3d:	mov    al,BYTE PTR [rbx+0x0]
   140008b40:	mov    ch,0x8f
   140008b42:	add    BYTE PTR [r9-0x43ffb671],r14b
   140008b49:	xchg   ebp,eax
   140008b4a:	rex.W add BYTE PTR [rbx-0x44ffa372],sil
   140008b51:	nop
   140008b52:	push   rbx
   140008b53:	add    BYTE PTR [rbp-0x46ffaf67],bh
   140008b59:	xchg   edx,eax
   140008b5a:	pop    rsp
   140008b5b:	add    BYTE PTR [rdi-0x5fff9777],bl
   140008b61:	xchg   BYTE PTR [rdx+0x0],ah
   140008b64:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008b65:	mov    WORD PTR [rax+rax*1-0x4c],gs
   140008b69:	xchg   edx,eax
   140008b6a:	(bad)  
   140008b6b:	add    BYTE PTR [rax-0x49ff996a],bh
   140008b71:	xchg   esi,eax
   140008b72:	push   0x0
   140008b74:	mov    bh,0x98
   140008b76:	ins    DWORD PTR es:[rdi],dx
   140008b77:	add    BYTE PTR [rdx-0x44ff9667],bh
   140008b7d:	pushf  
   140008b7e:	jb     0x140008b80
   140008b80:	mov    ebp,0xc4007ba1
   140008b85:	xchg   ecx,eax
   140008b86:	rex.XB add r9b,cl
   140008b89:	xchg   esi,eax
   140008b8a:	rex.W add sil,cl
   140008b8d:	fwait
   140008b8e:	rex.WXB add r8b,al
   140008b91:	pushf  
   140008b92:	push   rbp
   140008b93:	add    al,al
   140008b95:	sahf   
   140008b96:	pop    rcx
   140008b97:	add    bl,cl
   140008b99:	pushf  
   140008b9a:	pop    rdx
   140008b9b:	add    al,cl
   140008b9d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008b9e:	pop    rax
   140008b9f:	add    ah,dl
   140008ba1:	movabs ds:0xaee0005da4d70053,eax
   140008baa:	push   rdi
   140008bab:	add    cl,ah
   140008bad:	mov    al,0x59
   140008baf:	add    ch,al
   140008bb1:	popf   
   140008bb2:	fs add bl,cl
   140008bb5:	test   eax,0xa2c40061
   140008bba:	outs   dx,BYTE PTR ds:[rsi]
   140008bbb:	add    ch,cl
   140008bbd:	lods   eax,DWORD PTR ds:[rsi]
   140008bbe:	imul   eax,DWORD PTR [rax],0xffffffd4
   140008bc1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008bc2:	(bad)  
   140008bc3:	add    ch,dl
   140008bc5:	test   al,0x63
   140008bc7:	add    al,bl
   140008bc9:	stos   BYTE PTR es:[rdi],al
   140008bca:	data16 add dl,bl
   140008bcd:	scas   al,BYTE PTR es:[rdi]
   140008bce:	imul   eax,DWORD PTR [rax],0x6bb1dd
   140008bd4:	(bad)
   140008bd8:	ret    
   140008bd9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008bda:	jge    0x140008bdc
   140008bdc:	shr    BYTE PTR [rbp-0x4a21ff8a],cl
   140008be2:	jb     0x140008be4
   140008be4:	shl    DWORD PTR [rax-0x4723ff81],1
   140008bea:	jle    0x140008bec
   140008bec:	loop   0x140008ba5
   140008bee:	imul   eax,DWORD PTR [rax],0xffffffe0
   140008bf1:	mov    ch,0x70
   140008bf3:	add    ah,ah
   140008bf5:	mov    edx,0xbee80075
   140008bfa:	jne    0x140008bfc
   140008bfc:	in     eax,0xbc
   140008bfe:	js     0x140008c00
   140008c00:	jmp    0x1360109c9
   140008c05:	(bad)  
   140008c08:	sbb    BYTE PTR [rdi-0xd],bl
   140008c0b:	add    BYTE PTR [rdx],bl
   140008c0d:	data16 repnz add BYTE PTR [rip+0x2400f779],bl        # 0x16401838e
   140008c15:	ins    BYTE PTR es:[rdi],dx
   140008c16:	icebp  
   140008c17:	add    BYTE PTR [rip+0x3200f276],ah        # 0x172017e93
   140008c1d:	jnp    0x140008c14
   140008c1f:	add    BYTE PTR [rbx+0x7f],al
   140008c22:	stc    
   140008c23:	add    BYTE PTR [rdx-0x65],bh
   140008c26:	mov    edx,0xdd8d3c00
   140008c2b:	add    BYTE PTR [rdi],bl
   140008c2d:	mov    dh,bh
   140008c2f:	add    BYTE PTR [rsp+rcx*4],ch
   140008c32:	in     eax,dx
   140008c33:	add    BYTE PTR [rdi],dh
   140008c35:	sub    ebx,0x0
   140008c38:	xor    eax,0x2800e690
   140008c3d:	xchg   esi,esi
   140008c3f:	add    BYTE PTR [rax],bh
   140008c41:	test   ebp,esi
   140008c43:	add    BYTE PTR [rcx],ch
   140008c45:	xchg   ecx,eax
   140008c46:	clc    
   140008c47:	add    BYTE PTR [rcx],bh
   140008c49:	xchg   esi,eax
   140008c4a:	test   DWORD PTR [rax],0xcc8f4f
   140008c50:	push   rsi
   140008c51:	nop
   140008c52:	leave  
   140008c53:	add    BYTE PTR [rbx-0x74],cl
   140008c56:	xlat   BYTE PTR ds:[rbx]
   140008c57:	add    BYTE PTR [rbx-0x72],dl
   140008c5a:	(bad)  
   140008c5b:	add    BYTE PTR [rcx-0x6b],ch
   140008c5e:	int3   
   140008c5f:	add    BYTE PTR [rbx-0x65],dh
   140008c62:	(bad)  
   140008c63:	add    BYTE PTR [rsi-0x62],al
   140008c66:	out    dx,eax
   140008c67:	add    BYTE PTR [rcx-0x7c],al
   140008c6a:	repz add BYTE PTR [rdx-0x77],al
   140008c6e:	hlt    
   140008c6f:	add    BYTE PTR [rdx-0x73],cl
   140008c72:	repz add BYTE PTR [rsi-0x79],al
   140008c76:	cli    
   140008c77:	add    BYTE PTR [rdx-0x7d],cl
   140008c7a:	clc    
   140008c7b:	add    BYTE PTR [rdx-0x76],cl
   140008c7e:	cli    
   140008c7f:	add    BYTE PTR [rbx-0x72],bl
   140008c82:	test   BYTE PTR [rax],0x47
   140008c85:	xchg   edi,eax
   140008c86:	test   BYTE PTR [rax],0x54
   140008c89:	xchg   edi,eax
   140008c8a:	hlt    
   140008c8b:	add    BYTE PTR [rdi+rdx*4-0x1a],ah
   140008c8f:	add    BYTE PTR [rbp-0x66],ah
   140008c92:	hlt    
   140008c93:	add    BYTE PTR [rcx+riz*4-0x9],cl
   140008c97:	add    BYTE PTR [rdx-0x58],bl
   140008c9a:	stc    
   140008c9b:	add    BYTE PTR [rdx-0x50],bl
   140008c9e:	inc    DWORD PTR [rax]
   140008ca0:	push   0xffffffffffffffaf
   140008ca2:	in     al,dx
   140008ca3:	add    BYTE PTR [rcx-0x50],ch
   140008ca6:	out    dx,eax
   140008ca7:	add    BYTE PTR [rsi-0x4c],dh
   140008caa:	in     eax,dx
   140008cab:	add    BYTE PTR [rbx+rbp*4-0x8],ah
   140008caf:	add    BYTE PTR [rdi-0x59],dh
   140008cb2:	cmc    
   140008cb3:	add    BYTE PTR [rbx-0x4d],ch
   140008cb6:	cli    
   140008cb7:	add    BYTE PTR [rax-0x4c],dh
   140008cba:	stc    
   140008cbb:	add    BYTE PTR [rdi+rbx*4-0x5e5aff7e],dh
   140008cc2:	mov    al,BYTE PTR [rax]
   140008cc4:	mov    edx,0xb50081a4
   140008cc9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008cca:	mov    eax,DWORD PTR [rax]
   140008ccc:	stos   DWORD PTR es:[rdi],eax
   140008ccd:	movabs eax,ds:0xa3970097a7b30095
   140008cd6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008cd7:	add    BYTE PTR [rsi-0x52ff5353],ah
   140008cdd:	mov    bl,0xad
   140008cdf:	add    al,al
   140008ce1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008ce2:	test   BYTE PTR [rax],al
   140008ce4:	(bad)
   140008ce7:	add    bh,al
   140008ce9:	scas   al,BYTE PTR es:[rdi]
   140008cea:	mov    eax,DWORD PTR [rax]
   140008cec:	leave  
   140008ced:	scas   eax,DWORD PTR es:[rdi]
   140008cee:	mov    al,BYTE PTR [rax]
   140008cf0:	int3   
   140008cf1:	mov    bl,0x8f
   140008cf3:	add    dl,dl
   140008cf5:	mov    bl,0x82
   140008cf7:	add    bl,bl
   140008cf9:	mov    ebx,0xb5d00084
   140008cfe:	lea    eax,[rax]
   140008d00:	xlat   BYTE PTR ds:[rbx]
   140008d01:	mov    ebx,0xbdde008f
   140008d06:	mov    eax,DWORD PTR [rax]
   140008d08:	(bad)  
   140008d09:	stos   DWORD PTR es:[rdi],eax
   140008d0a:	xchg   ebx,eax
   140008d0b:	add    dl,cl
   140008d0d:	mov    ah,0x94
   140008d0f:	add    bl,cl
   140008d11:	mov    ah,0x9a
   140008d13:	add    bh,cl
   140008d15:	mov    edx,0xbcd2009c
   140008d1a:	xchg   esp,eax
   140008d1b:	add    dl,bl
   140008d1d:	mov    esi,0xbfdc0094
   140008d22:	cwde   
   140008d23:	add    cl,ah
   140008d25:	mov    ebp,0xbbcd0089
   140008d2a:	movabs ds:0xaebdd100a1bfd400,al
   140008d33:	add    bl,dl
   140008d35:	mov    esi,0xc0dd00b0
   140008d3a:	lea    eax,[rax]
   140008d3c:	fadd   st(2),st
   140008d3e:	xchg   ebp,eax
   140008d3f:	add    ah,bl
   140008d41:	ret    
   140008d42:	(bad)  
   140008d43:	add    dl,ch
   140008d45:	(bad)
   140008d49:	ret    0x8c
   140008d4c:	jmp    0x12e011a16
   140008d51:	leave  
   140008d52:	mov    WORD PTR [rax],es
   140008d54:	repnz mov BYTE PTR [rdx-0x6c3b1d00],0x0
   140008d5c:	jmp    0x126011f27
   140008d61:	retf   
   140008d62:	xchg   esp,eax
   140008d63:	add    bl,ch
   140008d65:	retf   
   140008d66:	xchg   ebx,eax
   140008d67:	add    dl,ah
   140008d69:	(bad)  
   140008d6a:	(bad)  
   140008d6b:	add    ah,ah
   140008d6d:	retf   0x9b
   140008d70:	in     al,dx
   140008d71:	int    0x9a
   140008d73:	add    al,dh
   140008d75:	int    0x91
   140008d77:	add    bh,ch
   140008d79:	rcr    DWORD PTR [rbp-0x682f0c00],1
   140008d7f:	add    ah,dh
   140008d81:	rcr    BYTE PTR [rbx-0x622a0800],cl
   140008d87:	add    bl,bh
   140008d89:	fcomp  DWORD PTR [rbp-0x593d2c00]
   140008d8f:	add    cl,bl
   140008d91:	ret    
   140008d92:	movabs ds:0xa8c2d300a6cadd00,al
   140008d9b:	add    ah,bl
   140008d9d:	enter  0xac,0xca
   140008da1:	ret    0xbb
   140008da4:	fxch   st(0)
   140008da6:	mov    bh,0x0
   140008da8:	jrcxz  0x140008d75
   140008daa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008dab:	add    bl,ch
   140008dad:	(bad)  
   140008dae:	movabs eax,ds:0xa4d2eb00aacde400
   140008db7:	add    bl,ah
   140008db9:	shr    BYTE PTR [rdi-0x532b1400],1
   140008dbf:	add    dh,ch
   140008dc1:	fsubr  DWORD PTR [rbp-0x5c2b0e00]
   140008dc7:	add    al,bh
   140008dc9:	xlat   BYTE PTR ds:[rbx]
   140008dca:	movabs eax,ds:0xa5d9f900a5d8f700
   140008dd3:	add    al,dh
   140008dd5:	(bad)  
   140008dd6:	stos   DWORD PTR es:[rdi],eax
   140008dd7:	add    cl,dh
   140008dd9:	fsubr  DWORD PTR [rax+rax*1+0xabdcfa]
   140008de0:	in     eax,0xce
   140008de2:	mov    dh,0x0
   140008de4:	in     eax,0xd2
   140008de6:	mov    ch,0x0
   140008de8:	in     al,dx
   140008de9:	(bad)  
   140008dea:	mov    dl,0x0
   140008dec:	out    dx,al
   140008ded:	fnstenv [rsi-0x442c1d00]
   140008df3:	add    dl,ch
   140008df5:	(bad)  
   140008df6:	mov    ecx,0xbcdaed00
   140008dfb:	add    cl,dh
   140008dfd:	(bad)  [rax+rax*1+0xb3def8]
   140008e04:	hlt    
   140008e05:	fnstsw WORD PTR [rcx-0x44200700]
   140008e0b:	add    bl,bh
   140008e0d:	loopne 0x140008dc2
   140008e0f:	add    dh,dh
   140008e11:	loopne 0x140008dcf
   140008e13:	add    bl,bh
   140008e15:	jrcxz  0x140008dd3
   140008e17:	add    bh,bh
   140008e19:	(bad)  
   140008e1a:	mov    ebp,0xc3a79000
   140008e1f:	add    BYTE PTR [rdi-0x7dff2755],cl
   140008e25:	mov    ah,0xdd
   140008e27:	add    BYTE PTR [rdx-0x59ff2243],bl
   140008e2d:	mov    eax,0xbcaa00c0
   140008e32:	fild   WORD PTR [rax]
   140008e34:	mov    ch,0xbf
   140008e36:	(bad)  
   140008e37:	add    BYTE PTR [rbx-0x69ff1557],cl
   140008e3d:	mov    eax,0xa58000e8
   140008e42:	repnz add BYTE PTR [rcx-0x73ff0b57],al
   140008e49:	lods   eax,DWORD PTR ds:[rsi]
   140008e4a:	icebp  
   140008e4b:	add    BYTE PTR [rax-0x6dff0749],cl
   140008e51:	mov    dh,0xf4
   140008e53:	add    BYTE PTR [rsp+rdi*4-0x3f51ff1c],ah
   140008e5a:	fild   DWORD PTR [rax]
   140008e5c:	mov    eax,0x8f00d8c1
   140008e61:	ret    0xfb
   140008e64:	xchg   esi,eax
   140008e65:	(bad)  
   140008e66:	cli    
   140008e67:	add    BYTE PTR [rax-0x4bff1135],ch
   140008e6d:	(bad)
   140008e70:	mov    eax,0xbd00e1cc
   140008e75:	(bad)  
   140008e76:	out    dx,al
   140008e77:	add    BYTE PTR [rdi-0x4bff0936],ah
   140008e7d:	iret   
   140008e7e:	cli    
   140008e7f:	add    BYTE PTR [rsi+rdx*8-0x3737ff06],bh
   140008e86:	(bad)
   140008e89:	int    0xc6
   140008e8b:	add    cl,bl
   140008e8d:	rol    dh,cl
   140008e8f:	add    bl,ah
   140008e91:	(bad)  
   140008e92:	rol    BYTE PTR [rax],0xe5
   140008e95:	fadd   st,st(2)
   140008e97:	add    ch,ch
   140008e99:	fadd   st(2),st
   140008e9b:	add    al,ah
   140008e9d:	ror    al,cl
   140008e9f:	add    ah,ah
   140008ea1:	fcmove st,st(1)
   140008ea3:	add    cl,dh
   140008ea5:	ffreep st(3)
   140008ea7:	add    bh,ch
   140008ea9:	loopne 0x140008e73
   140008eab:	add    ch,dh
   140008ead:	jrcxz  0x140008e73
   140008eaf:	add    bl,bh
   140008eb1:	in     eax,0xc2
   140008eb3:	add    dh,bh
   140008eb5:	call   0x124f48f7f
   140008eba:	retf   0xf800
   140008ebd:	out    0xc9,al
   140008ebf:	add    ah,bh
   140008ec1:	jmp    0x121eb8f91
   140008ec6:	rol    BYTE PTR [rax],1
   140008ec8:	out    0xe2,eax
   140008eca:	fadd   DWORD PTR [rax]
   140008ecc:	cmc    
   140008ecd:	out    0xd1,eax
   140008ecf:	add    bh,dh
   140008ed1:	jmp    0x140008ea8
   140008ed3:	add    ah,bh
   140008ed5:	in     al,dx
   140008ed6:	rol    DWORD PTR [rax],cl
   140008ed8:	cli    
   140008ed9:	out    dx,eax
   140008eda:	fiadd  DWORD PTR [rax]
   140008edc:	(bad)  
   140008edd:	lock fadd DWORD PTR [rax]
   140008ee0:	(bad)  
   140008ee1:	(bad)  
   140008ee2:	jmp    0x120da64e7
   140008ee7:	add    ah,al
   140008ee9:	fdiv   st(3),st
   140008eeb:	add    bh,al
   140008eed:	loope  0x140008eeb
   140008eef:	add    dh,dl
   140008ef1:	in     al,0xfb
   140008ef3:	add    ah,bh
   140008ef5:	repnz loope 0x140008ef8
   140008ef8:	out    0xef,al
   140008efa:	std    
   140008efb:	add    dl,ch
   140008efd:	repz std 
   140008eff:	add    bl,dh
   140008f01:	idiv   ah
   140008f03:	add    al,bh
   140008f05:	idiv   ebx
   140008f07:	add    dh,dh
   140008f09:	clc    
   140008f0a:	cld    
   140008f0b:	add    bh,bh
   140008f0d:	(bad)  
   140008f0e:	inc    DWORD PTR [rax]
	...
   140009034:	add    BYTE PTR [rsp+rbx*1],bl
   140009037:	sbb    al,0x1c
   140009039:	(bad)  
   14000903a:	sbb    ch,BYTE PTR [rbx+0x0]
	...
   14000906d:	add    BYTE PTR [rsi],dl
   14000906f:	(bad)  
   140009070:	(bad)  
   140009071:	(bad)  
   140009072:	(bad)  
   140009073:	(bad)  
   140009074:	sbb    al,0x32
   140009076:	jnp    0x140009018
   140009078:	stos   BYTE PTR es:[rdi],al
   140009079:	mov    edx,0xa85e5
	...
   1400090a6:	add    BYTE PTR [rsi],dl
   1400090a8:	(bad)  
   1400090a9:	(bad)  
   1400090aa:	(bad)  
   1400090ab:	(bad)  
   1400090ac:	(bad)  
   1400090ad:	sbb    dh,BYTE PTR [rdx]
   1400090af:	jnp    0x14000903d
   1400090b1:	test   al,0xba
   1400090b3:	in     eax,0xba
   1400090b5:	mov    edx,0xa8a8b6b9
   1400090ba:	test   al,0xb6
   1400090bc:	(bad)  
   1400090bd:	adc    ebp,DWORD PTR [rsi+0x6d]
   1400090c0:	adc    eax,0x0
	...
   1400090dd:	add    BYTE PTR [rax],al
   1400090df:	add    BYTE PTR [rsi],dl
   1400090e1:	(bad)  
   1400090e2:	(bad)  
   1400090e3:	(bad)  
   1400090e4:	(bad)  
   1400090e5:	bndldx (bad),[rcx]
   1400090e8:	jns    0x14000906e
   1400090ea:	test   al,0xba
   1400090ec:	in     eax,0xe6
   1400090ee:	loop   0x1400090aa
   1400090f0:	stos   BYTE PTR es:[rdi],al
   1400090f1:	stos   BYTE PTR es:[rdi],al
   1400090f2:	test   al,0x96
   1400090f4:	xchg   esi,eax
   1400090f5:	xchg   edx,eax
   1400090f6:	xchg   edx,eax
   1400090f7:	xchg   ebx,eax
   1400090f8:	xchg   ebp,eax
   1400090f9:	xchg   ebp,eax
   1400090fa:	fwait
   1400090fb:	mov    dh,0x6
   1400090fd:	or     esp,DWORD PTR [rax+0x6f0225b6]
   140009103:	jo     0x140009105
	...
   140009119:	sub    BYTE PTR [rax],ch
   14000911b:	sub    BYTE PTR [rax],ch
   14000911d:	(bad)  
   14000911e:	movlps xmm5,QWORD PTR [rdx]
   140009121:	xor    eax,0xe6baa67c
   140009126:	out    0xe2,al
   140009128:	loop   0x1400090e2
   14000912a:	stos   BYTE PTR es:[rdi],al
   14000912b:	test   al,0x96
   14000912d:	xchg   esi,eax
   14000912e:	xchg   edx,eax
   14000912f:	xchg   edx,eax
   140009130:	xchg   ebx,eax
   140009131:	xchg   ebx,eax
   140009132:	xchg   ebp,eax
   140009133:	xchg   ebp,eax
   140009134:	xchg   ebp,eax
   140009135:	(bad)  
   140009136:	(bad)  
   140009137:	cwde   
   140009138:	(bad)  
   140009139:	cwde   
   14000913a:	cwde   
   14000913b:	mov    dh,0x9
   14000913d:	or     edi,DWORD PTR [rbp+rsi*1+0x22]
   140009141:	add    DWORD PTR [rdx+rdx*4+0x10],esi
	...
   140009155:	add    BYTE PTR [rax],al
   140009157:	sub    BYTE PTR [rdx],dl
   140009159:	sub    BYTE PTR [rbx],dh
   14000915b:	jl     0x140009103
   14000915d:	mov    ebx,0xe2e6e6e2
   140009162:	mov    edx,0x9296a8aa
   140009167:	xchg   edx,eax
   140009168:	mov    cs,WORD PTR [rdi-0x676a7071]
   14000916e:	cwde   
   14000916f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009170:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009171:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009172:	cwde   
   140009173:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009174:	fwait
   140009175:	xchg   ebx,eax
   140009176:	xchg   ebp,eax
   140009177:	(bad)  
   140009178:	nop
   140009179:	nop
   14000917a:	fwait
   14000917b:	mov    dh,0x1d
   14000917d:	(bad)  
   14000917e:	xchg   edx,eax
   14000917f:	and    al,BYTE PTR ss:[rip+0x142d8386]        # 0x1542e150c
	...
   140009196:	add    BYTE PTR [rip+0xfffffffff0f0f0af],bh        # 0x130f1824b
   14000919c:	out    0xe5,al
   14000919e:	stos   DWORD PTR es:[rdi],eax
   14000919f:	mov    ss,WORD PTR [rdx-0x646a706e]
   1400091a5:	popf   
   1400091a6:	mov    al,0xbb
   1400091a8:	mov    ebx,0xb3bfbaba
   1400091ad:	(bad)  
   1400091ae:	xchg   ebp,eax
   1400091af:	(bad)  
   1400091b0:	fwait
   1400091b1:	(bad)  
   1400091b2:	fwait
   1400091b3:	nop
   1400091b4:	fwait
   1400091b5:	fwait
   1400091b6:	fwait
   1400091b7:	popf   
   1400091b8:	(bad)  
   1400091b9:	popf   
   1400091ba:	popf   
   1400091bb:	mov    ebx,0x8a960c1e
   1400091c0:	sub    al,0x5
   1400091c2:	xchg   BYTE PTR [rbx+0x42c],al
	...
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rcx],bh
   1400091d8:	mov    ebx,0xecf0ecf0
   1400091dd:	fwait
   1400091de:	lea    ebx,[rbp-0x3d404c4d]
   1400091e4:	out    0xd7,al
   1400091e6:	int3   
   1400091e7:	pop    rsp
   1400091e8:	pop    rdx
   1400091e9:	pop    rdx
   1400091ea:	pop    rbx
   1400091eb:	(bad)  
   1400091ec:	retf   0xaac9
   1400091ef:	cwde   
   1400091f0:	xchg   ebp,eax
   1400091f1:	mov    al,0xb0
   1400091f3:	mov    al,0xaf
   1400091f5:	mov    al,0xaf
   1400091f7:	scas   eax,DWORD PTR es:[rdi]
   1400091f8:	popf   
   1400091f9:	scas   eax,DWORD PTR es:[rdi]
   1400091fa:	scas   eax,DWORD PTR es:[rdi]
   1400091fb:	mov    ebx,0x8ea60e1f
   140009200:	sub    eax,0x2d8c9f05
   140009205:	or     eax,DWORD PTR [rax]
	...
   140009217:	cmp    DWORD PTR [rdi-0x410c1310],edi
   14000921d:	cmp    al,0x9d
   14000921f:	mov    esi,0xcdeec2be
   140009224:	rex.XB (bad) 
   140009226:	(bad)  
   140009227:	(bad)  
   140009228:	(bad)  
   140009229:	(bad)  
   14000922a:	ds ds ds (bad) 
   14000922e:	rex.R retf 0x96a5
   140009232:	scas   eax,DWORD PTR es:[rdi]
   140009233:	mov    bl,0xb3
   140009235:	mov    bl,0xb0
   140009237:	mov    al,0xb0
   140009239:	mov    al,0xb0
   14000923b:	mov    esi,0x8ea70e24
   140009240:	(bad)  
   140009241:	add    eax,0xb30969f
	...
   140009256:	add    BYTE PTR [rcx],bh
   140009258:	mov    edi,0xbef3ecf0
   14000925d:	lea    ebx,[rbp+0x43d6e9c2]
   140009263:	ds rex.B
   140009265:	rex.B
   140009266:	rex.B
   140009267:	rex.B
   140009268:	rex.B
   140009269:	rex.B
   14000926a:	rex.B
   14000926b:	rex.B
   14000926c:	rex.B
   14000926d:	rex.B
   14000926e:	ds (bad) 
   140009270:	rex.R enter 0x96a0,0xb3
   140009275:	mov    bl,0xb3
   140009277:	mov    bl,0xb3
   140009279:	mov    al,0xb0
   14000927b:	call   0xd5aba0b9
   140009280:	xor    BYTE PTR [rax],cl
   140009282:	mov    eax,0xd38a7
	...
   140009297:	cmp    DWORD PTR [rsi-0x41130c10],edi
   14000929d:	lea    ebx,[rsi+0x413e68e6]
   1400092a3:	rex.B
   1400092a4:	rex.B
   1400092a5:	rex.B
   1400092a6:	rex.B
   1400092a7:	rex.B
   1400092a8:	rex.B
   1400092a9:	rex.B
   1400092aa:	rex.B
   1400092ab:	rex.B
   1400092ac:	rex.B
   1400092ad:	rex.B
   1400092ae:	rex.B
   1400092af:	rex.B
   1400092b0:	ds rex.B (bad) 
   1400092b3:	movabs ds:0xe8b3b3b3b3b3b38b,al
   1400092bc:	cmp    al,0x11
   1400092be:	mov    cl,0x95
   1400092c0:	(bad)  
   1400092c1:	or     dl,ah
   1400092c3:	lods   al,BYTE PTR ds:[rsi]
   1400092c4:	cmp    BYTE PTR [rcx],dl
	...
   1400092d6:	add    BYTE PTR [rcx],bh
   1400092d8:	mov    edi,0xbef3ecf0
   1400092dd:	xchg   ecx,eax
   1400092de:	mov    ebx,0x42423f5c
   1400092e3:	rex.B
   1400092e4:	rex.B
   1400092e5:	rex.B
   1400092e6:	rex.B
   1400092e7:	rex.X
   1400092e8:	rex.B
   1400092e9:	rex.B
   1400092ea:	rex.B
   1400092eb:	rex.B
   1400092ec:	rex.B
   1400092ed:	rex.B
   1400092ee:	rex.B
   1400092ef:	rex.B
   1400092f0:	rex.B
   1400092f1:	rex.B
   1400092f2:	ds int 0xa2
   1400092f5:	test   BYTE PTR [rbx-0x4f4c4c4d],dh
   1400092fb:	call   0xd5b1a48d
   140009300:	lea    ecx,[rsi]
   140009302:	loope  0x1400092b0
   140009304:	cmp    BYTE PTR [rbx],ah
	...
   140009316:	add    BYTE PTR [rcx],bh
   140009318:	mov    esi,0xbef3f3f3
   14000931d:	(bad)  
   14000931e:	pop    rdi
   14000931f:	rex.X
   140009320:	rex.B
   140009321:	rex.B
   140009322:	rex.X
   140009323:	rex.B
   140009324:	rex.B
   140009325:	rex.X
   140009326:	rex.B
   140009327:	rex.X
   140009328:	rex.B
   140009329:	rex.B
   14000932a:	rex.B
   14000932b:	rex.B
   14000932c:	rex.B
   14000932d:	rex.B
   14000932e:	rex.B
   14000932f:	rex.B
   140009330:	rex.B
   140009331:	rex.B
   140009332:	rex.B
   140009333:	rol    BYTE PTR ds:[rcx-0x4c4c4074],1
   14000933a:	mov    bl,0xe8
   14000933c:	lea    edx,[rcx]
   14000933e:	stos   DWORD PTR es:[rdi],eax
   14000933f:	cwde   
   140009340:	cdq    
   140009341:	adc    DWORD PTR [rdx+0x2339ab],edi
	...
   140009357:	cmp    DWORD PTR [rbx-0x160c1310],edi
   14000935d:	(bad)  
   14000935e:	rex
   14000935f:	rex.B
   140009360:	rex
   140009361:	rex.X
   140009362:	rex.WR fdiv st(0),st
   140009365:	iret   
   140009366:	push   rsi
   140009367:	rex.X
   140009368:	rex.X
   140009369:	rex.X
   14000936a:	rex.B
   14000936b:	rex.XB
   14000936c:	rex.B
   14000936d:	rex.B
   14000936e:	rex.B
   14000936f:	rex.B
   140009370:	rex.B
   140009371:	rex.B
   140009372:	rex.B
   140009373:	rex.B
   140009374:	rex.B xlat BYTE PTR ds:[rbx]
   140009376:	jbe    0x14000931f
   140009378:	mov    edi,0x3ce8b3b3
   14000937d:	adc    DWORD PTR [rsp+rdx*4-0x4d1eee67],ebp
   140009384:	lea    esp,[rbx]
	...
   140009396:	add    BYTE PTR [rbx],bh
   140009398:	mov    esi,0xdff0f3f0
   14000939d:	rex.X
   14000939e:	rex.B
   14000939f:	rex
   1400093a0:	rex.X
   1400093a1:	rex.B fdiv st(7),st
   1400093a4:	(bad)  
   1400093a5:	(bad)  
   1400093a6:	clc    
   1400093a7:	push   0x41414343
   1400093ac:	rex.B
   1400093ad:	rex.XB
   1400093ae:	rex.B
   1400093af:	rex.B
   1400093b0:	rex.B
   1400093b1:	rex.B
   1400093b2:	rex.B
   1400093b3:	rex.B (bad) 
   1400093b5:	pop    rdx
   1400093b6:	fidivr WORD PTR [rax-0x41]
   1400093b9:	mov    bl,0xb3
   1400093bb:	in     eax,0x8d
   1400093bd:	adc    DWORD PTR [rbp+rdx*4-0x5345f167],ebp
   1400093c4:	xchg   ebp,eax
   1400093c5:	sub    DWORD PTR [rax],eax
	...
   1400093d7:	cmp    edi,DWORD PTR [rdi+0x5fe9f3f0]
   1400093dd:	rex.X
   1400093de:	rex
   1400093df:	rex.XB
   1400093e0:	rex.B
   1400093e1:	rex.WR sti 
   1400093e3:	(bad)  
   1400093e4:	(bad)  
   1400093e5:	(bad)  
   1400093e6:	(bad)  
   1400093e7:	std    
   1400093e8:	ficomp DWORD PTR [rdx+0x43]
   1400093eb:	rex.XB
   1400093ec:	rex.B
   1400093ed:	rex.X
   1400093ee:	rex.B
   1400093ef:	rex.XB
   1400093f0:	rex.B
   1400093f1:	rex.XB
   1400093f2:	rex.B
   1400093f3:	rex.B
   1400093f4:	rex.XB (bad) 
   1400093f6:	sar    BYTE PTR [rax-0x58],1
   1400093f9:	mov    edi,0x118de8bf
   1400093fe:	lods   al,BYTE PTR ds:[rsi]
   1400093ff:	cwde   
   140009400:	cdq    
   140009401:	adc    ecx,esp
   140009403:	mov    dl,0x99
   140009405:	sub    DWORD PTR [rax],eax
	...
   140009417:	cmp    eax,eax
   140009419:	lock repz fld QWORD PTR [rax+0x40]
   14000941e:	rex.XB
   14000941f:	rex.X
   140009420:	rex pop rax
   140009422:	cld    
   140009423:	(bad)  
   140009424:	(bad)  
   140009425:	(bad)  
   140009426:	(bad)  
   140009427:	(bad)  
   140009428:	(bad)  
   140009429:	cli    
   14000942a:	int3   
   14000942b:	rex.WR
   14000942c:	rex.XB
   14000942d:	rex.X
   14000942e:	rex.B
   14000942f:	rex.X
   140009430:	rex.B
   140009431:	rex.B
   140009432:	rex.X
   140009433:	rex.B
   140009434:	rex.B
   140009435:	pop    r9
   140009437:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009438:	js     0x1400093ed
   14000943a:	mov    edi,0xac1191e5
   14000943f:	cwde   
   140009440:	cdq    
   140009441:	adc    ecx,esp
   140009443:	lods   al,BYTE PTR ds:[rsi]
   140009444:	cdq    
   140009445:	sub    DWORD PTR [rax],eax
	...
   140009457:	cmp    edi,DWORD PTR [rsi+0x4054ecf3]
   14000945d:	rex.XB
   14000945e:	rex.X
   14000945f:	rex
   140009460:	rex.X pop rax
   140009462:	cld    
   140009463:	(bad)  
   140009464:	(bad)  
   140009465:	(bad)  
   140009466:	(bad)  
   140009467:	(bad)  
   140009468:	(bad)  
   140009469:	(bad)  
   14000946a:	(bad)  
   14000946b:	fistp  DWORD PTR [rsp+rcx*2+0x43]
   14000946f:	rex.B
   140009470:	rex.XB
   140009471:	rex.X
   140009472:	rex.B
   140009473:	rex.XB
   140009474:	rex.B
   140009475:	rex.B
   140009476:	rex.B enter 0xab7e,0xbf
   14000947b:	call   0xd8aca611
   140009480:	cdq    
   140009481:	(bad)  
   140009482:	mov    edx,0x2999ac
	...
   140009497:	cmp    edi,DWORD PTR [rdx+0x4049baf3]
   14000949d:	rex.WXB
   14000949e:	rex.X
   14000949f:	rex.WXB
   1400094a0:	rex.X pop rax
   1400094a2:	cld    
   1400094a3:	(bad)  
   1400094a4:	(bad)  
   1400094a5:	(bad)  
   1400094a6:	(bad)  
   1400094a7:	(bad)  
   1400094a8:	(bad)  
   1400094a9:	(bad)  
   1400094aa:	(bad)  
   1400094ab:	(bad)  
   1400094ac:	cli    
   1400094ad:	(bad)  
   1400094ae:	push   rdi
   1400094af:	rex.XB
   1400094b0:	rex.X
   1400094b1:	rex.X
   1400094b2:	rex.X
   1400094b3:	rex.B
   1400094b4:	rex.X
   1400094b5:	rex.X (bad) 
   1400094b7:	push   0xffffffffe5bf8c86
   1400094bc:	(bad)  
   1400094bd:	adc    DWORD PTR [rax+rbx*4-0x531eee67],ebp
   1400094c4:	cdq    
   1400094c5:	sub    DWORD PTR [rax],eax
	...
   1400094d7:	cmp    edi,DWORD PTR [rsi+0x4b40a4f3]
   1400094dd:	rex.XB
   1400094de:	rex
   1400094df:	rex.XB
   1400094e0:	rex pop rax
   1400094e2:	cld    
   1400094e3:	(bad)  
   1400094e4:	(bad)  
   1400094e5:	(bad)  
   1400094e6:	(bad)  
   1400094e7:	(bad)  
   1400094e8:	(bad)  
   1400094e9:	(bad)  
   1400094ea:	(bad)  
   1400094eb:	(bad)  
   1400094ec:	(bad)  
   1400094ed:	push   rsi
   1400094ef:	(bad)  
   1400094f0:	push   rsi
   1400094f1:	rex.XB
   1400094f2:	rex.X
   1400094f3:	rex.X
   1400094f4:	rex.X
   1400094f5:	rex.X
   1400094f6:	pop    r11
   1400094f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400094f9:	js     0x1400094b7
   1400094fb:	in     eax,0x37
   1400094fd:	adc    DWORD PTR [rax+rbx*4-0x531ef170],ebp
   140009504:	cdq    
   140009505:	sub    DWORD PTR [rax],eax
	...
   140009517:	cmp    eax,eax
   140009519:	icebp  
   14000951a:	ret    
   14000951b:	rex
   14000951c:	rex.WXB
   14000951d:	rex
   14000951e:	rex.XB
   14000951f:	rex.WXB
   140009520:	rex.X push rbp
   140009522:	(bad)  
   140009523:	(bad)  
   140009524:	(bad)  
   140009525:	(bad)  
   140009526:	(bad)  
   140009527:	(bad)  
   140009528:	(bad)  
   140009529:	(bad)  
   14000952a:	(bad)  
   14000952b:	(bad)  
   14000952c:	(bad)  
   14000952d:	(bad)  
   14000952e:	(bad)  
   14000952f:	sti    
   140009530:	(bad)  
   140009531:	pop    rax
   140009532:	push   rsi
   140009533:	rex.XB
   140009534:	rex.X
   140009535:	rex.X
   140009536:	rex
   140009537:	rex.XB fnstsw WORD PTR [r14-0x45]
   14000953b:	mov    esi,0x98b61127
   140009540:	cmp    al,0xe
   140009542:	loope  0x1400094f0
   140009544:	cdq    
   140009545:	sub    DWORD PTR [rax],eax
	...
   140009557:	cmp    eax,eax
   140009559:	in     al,dx
   14000955a:	push   rbx
   14000955b:	rex
   14000955c:	rex.WXB
   14000955d:	rex.WXB
   14000955e:	rex.WXB
   14000955f:	rex.WXB
   140009560:	rex pop rax
   140009562:	cld    
   140009563:	(bad)  
   140009564:	(bad)  
   140009565:	(bad)  
   140009566:	(bad)  
   140009567:	(bad)  
   140009568:	(bad)  
   140009569:	(bad)  
   14000956a:	(bad)  
   14000956b:	(bad)  
   14000956c:	(bad)  
   14000956d:	(bad)  
   14000956e:	(bad)  
   14000956f:	(bad)  
   140009570:	push   rdi
   140009572:	(bad)  
   140009573:	push   rsi
   140009574:	rex.XB
   140009575:	rex.B
   140009576:	rex.XB
   140009577:	sar    BYTE PTR [rsi-0x54],cl
   14000957b:	call   0xd8b6a6a7
   140009580:	cmp    al,0xe
   140009582:	loope  0x140009530
   140009584:	cdq    
   140009585:	sub    DWORD PTR [rax],eax
	...
   140009597:	cmp    edi,DWORD PTR [rsi+0x4b4052e9]
   14000959d:	rex.WXB
   14000959e:	rex.X
   14000959f:	rex.XB
   1400095a0:	rex.WXB push r13
   1400095a2:	(bad)  
   1400095a3:	(bad)  
   1400095a4:	(bad)  
   1400095a5:	(bad)  
   1400095a6:	(bad)  
   1400095a7:	(bad)  
   1400095a8:	(bad)  
   1400095a9:	(bad)  
   1400095aa:	(bad)  
   1400095ab:	(bad)  
   1400095ac:	(bad)  
   1400095ad:	(bad)  
   1400095ae:	(bad)  
   1400095af:	(bad)  
   1400095b0:	(bad)  
   1400095b1:	(bad)  
   1400095b2:	cld    
   1400095b3:	(bad)  
   1400095b4:	rex.WR
   1400095b5:	rex
   1400095b6:	rex.XB
   1400095b7:	rex enter 0xab7e,0xe5
   1400095bc:	(bad)  
   1400095bd:	adc    DWORD PTR [rsi-0x1ef7c56c],esi
   1400095c3:	lods   al,BYTE PTR ds:[rsi]
   1400095c4:	cmp    al,0x29
	...
   1400095d6:	add    BYTE PTR [rbx],bh
   1400095d8:	in     eax,0xe8
   1400095da:	push   rcx
   1400095db:	rex.RXB
   1400095dc:	rex.WXB
   1400095dd:	rex.WXB
   1400095de:	rex.WXB
   1400095df:	rex.WXB
   1400095e0:	rex pop rax
   1400095e2:	cld    
   1400095e3:	(bad)  
   1400095e4:	(bad)  
   1400095e5:	(bad)  
   1400095e6:	(bad)  
   1400095e7:	(bad)  
   1400095e8:	(bad)  
   1400095e9:	(bad)  
   1400095ea:	(bad)  
   1400095eb:	(bad)  
   1400095ec:	(bad)  
   1400095ed:	(bad)  
   1400095ee:	(bad)  
   1400095ef:	(bad)  
   1400095f0:	(bad)  
   1400095f1:	(bad)  
   1400095f2:	call   rbp
   1400095f4:	rex.WR
   1400095f5:	rex.XB
   1400095f6:	rex.X
   1400095f7:	rex.X retf 
   1400095f9:	jle    0x1400095a6
   1400095fb:	call   0xd8b6a727
   140009600:	cmp    cl,BYTE PTR [rsi]
   140009602:	loope  0x1400095b0
   140009604:	cmp    al,0x23
	...
   140009616:	add    BYTE PTR [rbx],bh
   140009618:	mov    esi,0x4b4751e5
   14000961d:	rex.WXB
   14000961e:	rex.WXB
   14000961f:	rex.WXB
   140009620:	rex.WXB push r13
   140009622:	cld    
   140009623:	(bad)  
   140009624:	(bad)  
   140009625:	(bad)  
   140009626:	(bad)  
   140009627:	(bad)  
   140009628:	(bad)  
   140009629:	(bad)  
   14000962a:	(bad)  
   14000962b:	(bad)  
   14000962c:	(bad)  
   14000962d:	(bad)  
   14000962e:	(bad)  
   14000962f:	(bad)  
   140009630:	(bad)  
   140009631:	(bad)  
   140009632:	dec    edi
   140009634:	rex.WR
   140009635:	rex
   140009636:	rex
   140009637:	rex sar DWORD PTR [rsi-0x4a],1
   14000963b:	jmp    0x140009664
   14000963d:	adc    DWORD PTR [rsi-0x1ef1c568],esi
   140009643:	lods   al,BYTE PTR ds:[rsi]
   140009644:	cmp    ah,BYTE PTR [rbx]
	...
   140009656:	add    BYTE PTR [rbx],bh
   140009658:	mov    esi,0x4b4751e8
   14000965d:	rex.WXB
   14000965e:	rex.WXB
   14000965f:	rex.WXB
   140009660:	rex pop rax
   140009662:	cld    
   140009663:	(bad)  
   140009664:	(bad)  
   140009665:	(bad)  
   140009666:	(bad)  
   140009667:	(bad)  
   140009668:	(bad)  
   140009669:	(bad)  
   14000966a:	(bad)  
   14000966b:	(bad)  
   14000966c:	(bad)  
   14000966d:	(bad)  
   14000966e:	(bad)  
   14000966f:	(bad)  
   140009670:	(bad)  
   140009671:	(bad)  
   140009672:	ficom  DWORD PTR [rbp+0x4c]
   140009675:	rex.WXB
   140009676:	rex.XB
   140009677:	rex.WXB sar BYTE PTR [r14-0x46],cl
   14000967b:	jmp    0x1400096a4
   14000967d:	or     eax,0xe3ab6ac
   140009682:	loope  0x14000963f
   140009684:	cmp    al,0x23
	...
   140009696:	add    BYTE PTR [rbx],bh
   140009698:	call   0x18c47e786
   14000969d:	rex.WXB
   14000969e:	rex.WXB
   14000969f:	rex.WXB
   1400096a0:	rex.WXB (bad) 
   1400096a2:	(bad)  
   1400096a3:	(bad)  
   1400096a4:	(bad)  
   1400096a5:	(bad)  
   1400096a6:	(bad)  
   1400096a7:	(bad)  
   1400096a8:	(bad)  
   1400096a9:	(bad)  
   1400096aa:	(bad)  
   1400096ab:	(bad)  
   1400096ac:	(bad)  
   1400096ad:	(bad)  
   1400096ae:	(bad)  
   1400096af:	(bad)  
   1400096b0:	cli    
   1400096b1:	iret   
   1400096b2:	pop    rbp
   1400096b3:	rex.XB
   1400096b4:	rex.WXB
   1400096b5:	rex
   1400096b6:	rex.XB
   1400096b7:	rex.WXB leave 
   1400096b9:	and    dh,0xec
   1400096bc:	(bad)  
   1400096bd:	adc    DWORD PTR [rdx-0x1ef7c554],edi
   1400096c3:	call   0x14000ba02
	...
   1400096d4:	add    BYTE PTR [rax],al
   1400096d6:	add    BYTE PTR [rbx],bh
   1400096d8:	shr    ah,0x45
   1400096db:	rex.RXB
   1400096dc:	rex.WXB
   1400096dd:	rex.WXB
   1400096de:	rex.WXB
   1400096df:	rex.WXB
   1400096e0:	rex.WXB pop r14
   1400096e2:	cld    
   1400096e3:	(bad)  
   1400096e4:	(bad)  
   1400096e5:	(bad)  
   1400096e6:	(bad)  
   1400096e7:	(bad)  
   1400096e8:	(bad)  
   1400096e9:	(bad)  
   1400096ea:	(bad)  
   1400096eb:	(bad)  
   1400096ec:	(bad)  
   1400096ed:	(bad)  
   1400096ee:	(bad)  
   1400096ef:	fsub   QWORD PTR [rdx+0x5d]
   1400096f2:	rex.XB
   1400096f3:	rex.RXB
   1400096f4:	rex.XB
   1400096f5:	rex.WXB
   1400096f6:	rex push rdi
   1400096f8:	frstor [rbp+0x1127e6eb]
   1400096fe:	loop   0x1400096a7
   140009700:	cmp    cl,BYTE PTR [rsi]
   140009702:	loope  0x1400096e9
   140009704:	cmp    esp,DWORD PTR [rbx]
	...
   140009716:	add    BYTE PTR [rbx],bh
   140009718:	shl    bl,0x72
   14000971b:	rex.RXB
   14000971c:	rex.WXB
   14000971d:	rex.WRB
   14000971e:	rex.WXB
   14000971f:	rex.WXB
   140009720:	rex.WXB (bad) 
   140009722:	(bad)  
   140009723:	(bad)  
   140009724:	(bad)  
   140009725:	(bad)  
   140009726:	(bad)  
   140009727:	(bad)  
   140009728:	(bad)  
   140009729:	(bad)  
   14000972a:	(bad)  
   14000972b:	(bad)  
   14000972c:	(bad)  
   14000972d:	sti    
   14000972e:	iret   
   14000972f:	pop    rbp
   140009730:	rex.WR
   140009731:	rex.WXB
   140009732:	rex.WXB
   140009733:	rex.WXB
   140009734:	rex.WXB
   140009735:	rex
   140009736:	(bad)
   14000973c:	(bad)  
   14000973d:	adc    DWORD PTR [rdx-0x1ef1c557],edi
   140009743:	sar    BYTE PTR [rbx],0x23
	...
   140009756:	add    BYTE PTR [rbx],bh
   140009758:	mov    edx,0x4d489ff3
   14000975d:	rex.WXB
   14000975e:	rex.WRB
   14000975f:	rex.WXB
   140009760:	rex.WXB (bad) 
   140009762:	std    
   140009763:	(bad)  
   140009764:	(bad)  
   140009765:	(bad)  
   140009766:	(bad)  
   140009767:	(bad)  
   140009768:	(bad)  
   140009769:	(bad)  
   14000976a:	(bad)  
   14000976b:	(bad)  
   14000976c:	fsub   QWORD PTR [rdx+0x4e]
   14000976f:	rex.WR
   140009770:	rex.WXB
   140009771:	rex.WXB
   140009772:	rex.WXB
   140009773:	rex.XB
   140009774:	rex.WXB
   140009775:	rex.WXB
   140009776:	rex (bad) 
   140009778:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009779:	mov    ecx,0x1127e6e8
   14000977e:	mov    edx,0xe10e3aa7
   140009783:	mov    ebx,0x233a
	...
   140009794:	add    BYTE PTR [rax],al
   140009796:	add    BYTE PTR [rcx],bh
   140009798:	mov    esi,0x474fc0f3
   14000979d:	rex.WRX
   14000979e:	rex.WXB
   14000979f:	rex.WRB
   1400097a0:	rex.WXB (bad) 
   1400097a2:	std    
   1400097a3:	(bad)  
   1400097a4:	(bad)  
   1400097a5:	(bad)  
   1400097a6:	(bad)  
   1400097a7:	(bad)  
   1400097a8:	(bad)  
   1400097a9:	(bad)  
   1400097aa:	sti    
   1400097ab:	iret   
   1400097ac:	(bad)  
   1400097ad:	push   rdi
   1400097ae:	rex.WRB
   1400097af:	rex.WXB
   1400097b0:	rex.WXB
   1400097b1:	rex.WXB
   1400097b2:	rex.WXB
   1400097b3:	rex.WXB
   1400097b4:	rex
   1400097b5:	rex.XB (bad) 
   1400097b7:	cmc    
   1400097b8:	mov    ch,ah
   1400097ba:	in     al,dx
   1400097bb:	jmp    0x1400097e4
   1400097bd:	adc    DWORD PTR [rdx-0x47f1c557],edi
   1400097c3:	mov    ebx,0x233a
	...
   1400097d4:	add    BYTE PTR [rax],al
   1400097d6:	add    BYTE PTR [rbx],bh
   1400097d8:	shl    bl,0xec
   1400097db:	jno    0x14000982a
   1400097dd:	rex.WXB
   1400097de:	rex.WRB
   1400097df:	rex.WRB
   1400097e0:	rex.WXB (bad) 
   1400097e2:	std    
   1400097e3:	(bad)  
   1400097e4:	(bad)  
   1400097e5:	(bad)  
   1400097e6:	(bad)  
   1400097e7:	(bad)  
   1400097e8:	push   rsi
   1400097ea:	addr32 pop rbp
   1400097ec:	rex.WRB
   1400097ed:	rex.WXB
   1400097ee:	rex.WXB
   1400097ef:	rex.WXB
   1400097f0:	rex.WXB
   1400097f1:	rex.WXB
   1400097f2:	rex.WXB
   1400097f3:	rex.WXB
   1400097f4:	rex.WR (bad) 
   1400097f6:	fcmovu st,st(6)
   1400097f8:	mov    eax,ebp
   1400097fa:	in     al,dx
   1400097fb:	jmp    0x140009824
   1400097fd:	adc    DWORD PTR [rdx-0x1ef1c554],edi
   140009803:	lods   al,BYTE PTR ds:[rsi]
   140009804:	cmp    al,0x23
	...
   140009816:	add    BYTE PTR [rcx],bh
   140009818:	mov    ebx,0x46aaf3f3
   14000981d:	rex.WRB
   14000981e:	rex.WRB
   14000981f:	rex.WRB
   140009820:	rex.WXB (bad) 
   140009822:	(bad)  
   140009823:	std    
   140009824:	(bad)  
   140009825:	(bad)  
   140009826:	(bad)  
   140009827:	sti    
   140009828:	(bad)  
   140009829:	pop    rbp
   14000982a:	rex.WRX
   14000982b:	rex.WR
   14000982c:	rex.WXB
   14000982d:	rex.WXB
   14000982e:	rex.WR
   14000982f:	rex.WXB
   140009830:	rex.WXB
   140009831:	rex.WXB
   140009832:	rex.WXB
   140009833:	rex.WRX
   140009834:	addr32 imul esi,esp,0xecece288
   14000983b:	call   0xe7baa967
   140009840:	cmp    cl,BYTE PTR [rsi]
   140009842:	mov    eax,0x233bbb
	...
   140009857:	cmp    DWORD PTR [rdi+0x71e9f3f0],edi
   14000985d:	rex.RXB
   14000985e:	rex.WRB
   14000985f:	rex.WRB
   140009860:	rex.WRB (bad) 
   140009862:	std    
   140009863:	(bad)  
   140009864:	(bad)  
   140009865:	(bad)  
   140009866:	clc    
   140009867:	(bad)  
   140009868:	pop    rbp
   140009869:	rex.WRX
   14000986a:	rex.WRB
   14000986b:	rex.WXB
   14000986c:	rex.WRB
   14000986d:	rex.WXB
   14000986e:	rex.WRB
   14000986f:	rex.WXB
   140009870:	rex.WXB
   140009871:	rex.WXB (bad) 
   140009873:	push   0xffffffffa5ded462
   140009878:	call   0x167e78266
   14000987d:	adc    DWORD PTR [rdx-0x49f1c557],edi
   140009883:	mov    ebx,0x233a
	...
   140009894:	add    BYTE PTR [rax],al
   140009896:	add    BYTE PTR [rdi-0xc130f40],cl
   14000989c:	stos   DWORD PTR es:[rdi],eax
   14000989d:	rex.WRXB
   14000989e:	rex.WRB
   14000989f:	rex.WRB
   1400098a0:	rex.WRB
   1400098a1:	rex.WRB (bad) 
   1400098a4:	cli    
   1400098a5:	(bad)  
   1400098a6:	(bad)  
   1400098a7:	rex.WRX
   1400098a8:	rex.WRB
   1400098a9:	rex.WRB
   1400098aa:	rex.WRB
   1400098ab:	rex.WRB
   1400098ac:	rex.WRB
   1400098ad:	rex.WXB
   1400098ae:	rex.WXB
   1400098af:	rex.WRB push r13
   1400098b1:	push   0x69
   1400098b3:	(bad)  
   1400098b4:	imul   esi,ebp,0xe9e8e588
   1400098ba:	in     al,dx
   1400098bb:	call   0xe7bba9e7
   1400098c0:	cmp    cl,BYTE PTR [rsi]
   1400098c2:	mov    eax,0x233cb7
	...
   1400098d7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400098d8:	in     al,dx
   1400098d9:	repz icebp 
   1400098db:	repz mov esi,0x4d4d4a74
   1400098e1:	rex.WRB
   1400098e2:	rex.WRB (bad) 
   1400098e4:	rex.WRX
   1400098e5:	rex.WRX
   1400098e6:	rex.WRB
   1400098e7:	rex.WRB
   1400098e8:	rex.WRB
   1400098e9:	rex.WRB
   1400098ea:	rex.WXB
   1400098eb:	rex.WXB
   1400098ec:	rex.WRB
   1400098ed:	rex.WRX (bad) 
   1400098ef:	imul   ebp,DWORD PTR [rdx+0x62],0x89d96262
   1400098f6:	mov    eax,0xe9e9e8eb
   1400098fb:	out    0x27,al
   1400098fd:	adc    DWORD PTR [rdx-0x1ef1c557],edi
   140009903:	lods   al,BYTE PTR ds:[rsi]
   140009904:	cmp    ah,BYTE PTR [rbx]
	...
   140009916:	add    BYTE PTR [rax-0xc0c0c14],bl
   14000991c:	mov    esi,0x4d486c91
   140009921:	rex.WRB
   140009922:	rex.WRB
   140009923:	rex.WRB
   140009924:	rex.WRB
   140009925:	rex.WRB
   140009926:	rex.WRB
   140009927:	rex.WRB
   140009928:	rex.WRB
   140009929:	rex.WRX
   14000992a:	rex.WRX (bad) 
   14000992c:	(bad)  
   14000992d:	push   0x6a
   14000992f:	addr32 addr32 (bad) 
   140009933:	(bad)  [rbp-0x1317145b]
   140009939:	call   0x151288227
   14000993e:	mov    ebx,0xe1083aa7
   140009943:	lods   al,BYTE PTR ds:[rsi]
   140009944:	cmp    al,0x23
	...
   140009956:	add    BYTE PTR [rax-0x6060c14],bl
   14000995c:	repz mov bl,0xb3
   14000995f:	jae    0x1400099b6
   140009961:	rex.WRX push rbp
   140009963:	rex.WRX
   140009964:	rex.WRX push rbp
   140009966:	(bad)  
   140009967:	(bad)  
   140009969:	imul   ebp,DWORD PTR [rcx+0x6a],0x67626769
   140009970:	(bad)  
   140009972:	fisub  DWORD PTR [rbp-0x1717144c]
   140009978:	jmp    0x167e78366
   14000997d:	adc    DWORD PTR [rbx-0x55f1c554],edi
   140009983:	mov    ebx,0x233a
	...
   140009994:	add    BYTE PTR [rax],al
   140009996:	add    BYTE PTR [rbp-0xc0f0c1b],dl
   14000999c:	jmp    0x140009950
   14000999e:	ret    0xa5f1
   1400099a1:	vpunpckhwd xmm13,xmm2,XMMWORD PTR [rdx+0x69]
   1400099a6:	imul   ebp,DWORD PTR [rcx+0x69],0x63676369
   1400099ad:	addr32 (bad) 
   1400099b0:	imul   ebx,eax,0xe8ebb4b4
   1400099b6:	call   0x129c382a4
   1400099bb:	call   0xe7bbaae7
   1400099c0:	cmp    cl,BYTE PTR [rsi]
   1400099c2:	loope  0x140009970
   1400099c4:	cmp    al,0x23
	...
   1400099d6:	add    BYTE PTR [rax-0xf0f0c18],bl
   1400099dc:	in     al,dx
   1400099dd:	scas   eax,DWORD PTR es:[rdi]
   1400099de:	mov    esp,0xc7bac2ec
   1400099e3:	movsxd esp,DWORD PTR gs:[rbx+0x63]
   1400099e7:	movsxd ebp,DWORD PTR [rcx+0x62]
   1400099ea:	movsxd esp,DWORD PTR [edx+0x63]
   1400099ee:	imul   edx,eax,0xe8e2b4de
   1400099f4:	call   0x129e983e1
   1400099f9:	mov    esi,0x1127e5e9
   1400099fe:	mov    ebx,0xe1083aa7
   140009a03:	lods   al,BYTE PTR ds:[rsi]
   140009a04:	cmp    al,0x23
	...
   140009a16:	add    BYTE PTR [rax-0xf0f0f18],bl
   140009a1c:	call   0x131ea5ad0
   140009a21:	icebp  
   140009a22:	mov    edi,0x66c5c7a1
   140009a27:	movsxd esp,DWORD PTR [rdi+0x63]
   140009a2a:	addr32 addr32 data16 (bad) 
   140009a2e:	fucom  st(1)
   140009a30:	mov    edx,0xe9e8e8e8
   140009a35:	jmp    0x129bf5d22
   140009a3a:	jmp    0xfb11c128
   140009a3f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009a40:	cdq    
   140009a41:	(bad)  
   140009a42:	mov    dh,0xac
   140009a44:	cmp    al,0x29
	...
   140009a56:	add    BYTE PTR [rbp-0xf0f0c18],dl
   140009a5c:	in     al,dx
   140009a5d:	scas   eax,DWORD PTR es:[rdi]
   140009a5e:	mov    edi,0xc2e9e9e9
   140009a63:	mov    bl,0xc2
   140009a65:	mov    edi,0xddddddb6
   140009a6a:	fucom  st(1)
   140009a6c:	mov    edx,0xe9c2bec0
   140009a71:	call   0x129bf845f
   140009a76:	mov    esi,0xbec2c2e9
   140009a7b:	in     al,dx
   140009a7c:	(bad)  
   140009a7d:	adc    DWORD PTR [rbx-0x47dc5259],edi
   140009a83:	mov    edx,0x2998
	...
   140009a94:	add    BYTE PTR [rax],al
   140009a96:	add    BYTE PTR [rax-0xc0f0f1b],bl
   140009a9c:	call   0x129ed5650
   140009aa1:	jmp    0x102c34868
   140009aa6:	ret    0xc2c2
   140009aa9:	ret    0xc2c2
   140009aac:	ret    0xe9e9
   140009aaf:	ret    0xc2e8
   140009ab2:	mov    esi,0xc2c2c2e9
   140009ab7:	mov    esi,0xf0e9e8c2
   140009abc:	(bad)  
   140009abd:	and    DWORD PTR [rbx-0x47de3f54],edi
   140009ac3:	mov    ebx,0x2bac
	...
   140009ad4:	add    BYTE PTR [rax],al
   140009ad6:	add    BYTE PTR [rbp-0x6060c42],dl
   140009adc:	stc    
   140009add:	lock call 0x12cf187d3
   140009ae3:	in     al,dx
   140009ae4:	jmp    0x128e987ce
   140009ae9:	call   0x128e983d6
   140009aee:	shr    al,0xbe
   140009af1:	call   0xfebf59b4
   140009af6:	mov    esi,0xbfbebec2
   140009afb:	jmp    0xecb1bc8d
   140009b00:	lods   al,BYTE PTR ds:[rsi]
   140009b01:	and    esp,ecx
   140009b03:	sar    BYTE PTR [rax+rax*1],0x0
	...
   140009b17:	add    BYTE PTR [rsi],dh
   140009b19:	ss ss jl 0x140009aab
   140009b1d:	mov    ?,WORD PTR [rdx+rdi*2-0x7b]
   140009b21:	mov    ss,WORD PTR [rdx-0x6969696c]
   140009b27:	test   eax,0xb6acaaa9
   140009b2c:	mov    dh,0xac
   140009b2e:	mov    edx,0xe8e5c0ba
   140009b33:	out    0xe9,al
   140009b35:	in     al,dx
   140009b36:	in     al,dx
   140009b37:	jmp    0x140009b29
   140009b39:	in     al,dx
   140009b3a:	in     al,dx
   140009b3b:	rcr    BYTE PTR [rax-0x66675780],0x0
	...
   140009b6a:	stos   BYTE PTR es:[rdi],al
   140009b6b:	test   al,0xa1
   140009b6d:	movabs eax,ds:0x8b8c8c8c8ba896a9
   140009b76:	mov    WORD PTR [rbx-0x6b747475],cs
	...
   140009f10:	(bad)  
   140009f11:	(bad)  
   140009f12:	(bad)  
   140009f13:	(bad)  
   140009f14:	(bad)  
   140009f15:	(bad)  
   140009f16:	(bad)  
   140009f17:	(bad)  
   140009f18:	(bad)  
   140009f19:	(bad)  
   140009f1a:	(bad)  
   140009f1b:	(bad)  
   140009f1c:	(bad)  
   140009f1d:	(bad)  
   140009f1e:	(bad)  
   140009f1f:	(bad)  
   140009f20:	(bad)  
   140009f21:	(bad)  
   140009f22:	(bad)  
   140009f23:	(bad)  
   140009f24:	(bad)  
   140009f25:	(bad)  
   140009f26:	(bad)  
   140009f27:	(bad)  
   140009f28:	(bad)  
   140009f29:	(bad)  
   140009f2a:	(bad)  
   140009f2b:	(bad)  
   140009f2c:	(bad)  
   140009f2d:	(bad)  
   140009f2e:	(bad)  
   140009f2f:	(bad)  
   140009f30:	(bad)  
   140009f31:	(bad)  
   140009f32:	(bad)  
   140009f33:	(bad)  
   140009f34:	clc    
   140009f35:	ud0    edi,edi
   140009f38:	(bad)  
   140009f39:	(bad)  
   140009f3a:	(bad)  
   140009f3b:	cld    
   140009f3c:	add    BYTE PTR [rdi],al
   140009f3e:	(bad)  
   140009f3f:	(bad)  
   140009f40:	(bad)  
   140009f41:	(bad)  
   140009f42:	inc    BYTE PTR [rax]
   140009f44:	add    BYTE PTR [rax],al
   140009f46:	jg     0x140009f47
   140009f48:	(bad)  
   140009f49:	inc    DWORD PTR [rax]
   140009f4b:	add    BYTE PTR [rax],al
   140009f4d:	add    BYTE PTR [rdi],cl
   140009f4f:	(bad)  
   140009f50:	inc    DWORD PTR [rax+0x0]
   140009f56:	(bad)  
   140009f57:	(bad)  
   140009f58:	inc    BYTE PTR [rax]
   140009f5a:	add    BYTE PTR [rax],al
   140009f5c:	add    BYTE PTR [rax],al
   140009f5e:	add    edi,edi
   140009f60:	inc    BYTE PTR [rax]
   140009f62:	add    BYTE PTR [rax],al
   140009f64:	add    BYTE PTR [rax],al
   140009f66:	add    edi,edi
   140009f68:	inc    BYTE PTR [rax]
   140009f6a:	add    BYTE PTR [rax],al
   140009f6c:	add    BYTE PTR [rax],al
   140009f6e:	add    edi,edi
   140009f70:	inc    BYTE PTR [rax]
   140009f72:	add    BYTE PTR [rax],al
   140009f74:	add    BYTE PTR [rax],al
   140009f76:	add    edi,edi
   140009f78:	inc    BYTE PTR [rax]
   140009f7a:	add    BYTE PTR [rax],al
   140009f7c:	add    BYTE PTR [rax],al
   140009f7e:	add    edi,edi
   140009f80:	inc    BYTE PTR [rax]
   140009f82:	add    BYTE PTR [rax],al
   140009f84:	add    BYTE PTR [rax],al
   140009f86:	add    edi,edi
   140009f88:	inc    BYTE PTR [rax]
   140009f8a:	add    BYTE PTR [rax],al
   140009f8c:	add    BYTE PTR [rax],al
   140009f8e:	add    edi,edi
   140009f90:	inc    BYTE PTR [rax]
   140009f92:	add    BYTE PTR [rax],al
   140009f94:	add    BYTE PTR [rax],al
   140009f96:	add    edi,edi
   140009f98:	inc    BYTE PTR [rax]
   140009f9a:	add    BYTE PTR [rax],al
   140009f9c:	add    BYTE PTR [rax],al
   140009f9e:	add    edi,edi
   140009fa0:	inc    BYTE PTR [rax]
   140009fa2:	add    BYTE PTR [rax],al
   140009fa4:	add    BYTE PTR [rax],al
   140009fa6:	add    edi,edi
   140009fa8:	inc    BYTE PTR [rax]
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	add    BYTE PTR [rax],al
   140009fae:	add    edi,edi
   140009fb0:	inc    BYTE PTR [rax]
   140009fb2:	add    BYTE PTR [rax],al
   140009fb4:	add    BYTE PTR [rax],al
   140009fb6:	add    edi,edi
   140009fb8:	inc    BYTE PTR [rax]
   140009fba:	add    BYTE PTR [rax],al
   140009fbc:	add    BYTE PTR [rax],al
   140009fbe:	add    edi,edi
   140009fc0:	inc    BYTE PTR [rax]
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	add    BYTE PTR [rax],al
   140009fc6:	add    edi,edi
   140009fc8:	inc    BYTE PTR [rax]
   140009fca:	add    BYTE PTR [rax],al
   140009fcc:	add    BYTE PTR [rax],al
   140009fce:	add    edi,edi
   140009fd0:	inc    BYTE PTR [rax]
   140009fd2:	add    BYTE PTR [rax],al
   140009fd4:	add    BYTE PTR [rax],al
   140009fd6:	add    edi,edi
   140009fd8:	inc    BYTE PTR [rax]
   140009fda:	add    BYTE PTR [rax],al
   140009fdc:	add    BYTE PTR [rax],al
   140009fde:	add    edi,edi
   140009fe0:	inc    BYTE PTR [rax]
   140009fe2:	add    BYTE PTR [rax],al
   140009fe4:	add    BYTE PTR [rax],al
   140009fe6:	add    edi,edi
   140009fe8:	inc    BYTE PTR [rax]
   140009fea:	add    BYTE PTR [rax],al
   140009fec:	add    BYTE PTR [rax],al
   140009fee:	add    edi,edi
   140009ff0:	inc    BYTE PTR [rax]
   140009ff2:	add    BYTE PTR [rax],al
   140009ff4:	add    BYTE PTR [rax],al
   140009ff6:	add    edi,edi
   140009ff8:	inc    BYTE PTR [rax]
   140009ffa:	add    BYTE PTR [rax],al
   140009ffc:	add    BYTE PTR [rax],al
   140009ffe:	add    edi,edi
   14000a000:	inc    BYTE PTR [rax]
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    edi,edi
   14000a008:	inc    BYTE PTR [rax]
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	add    BYTE PTR [rax],al
   14000a00e:	add    edi,edi
   14000a010:	inc    BYTE PTR [rax]
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    edi,edi
   14000a018:	inc    BYTE PTR [rax]
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	add    BYTE PTR [rax],al
   14000a01e:	add    edi,edi
   14000a020:	inc    BYTE PTR [rax]
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    edi,edi
   14000a028:	inc    BYTE PTR [rax]
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    edi,edi
   14000a030:	inc    BYTE PTR [rax]
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    BYTE PTR [rax],al
   14000a036:	add    edi,edi
   14000a038:	inc    BYTE PTR [rax]
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    edi,edi
   14000a040:	inc    BYTE PTR [rax]
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    BYTE PTR [rax],al
   14000a046:	add    edi,edi
   14000a048:	inc    BYTE PTR [rax]
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	add    BYTE PTR [rax],al
   14000a04e:	add    edi,edi
   14000a050:	inc    BYTE PTR [rax]
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	add    BYTE PTR [rax],al
   14000a056:	add    edi,edi
   14000a058:	inc    BYTE PTR [rax]
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	add    BYTE PTR [rax],al
   14000a05e:	add    edi,edi
   14000a060:	inc    BYTE PTR [rax]
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	add    BYTE PTR [rax],al
   14000a066:	add    edi,edi
   14000a068:	inc    BYTE PTR [rax]
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	add    BYTE PTR [rax],al
   14000a06e:	add    edi,edi
   14000a070:	inc    BYTE PTR [rax]
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	add    BYTE PTR [rax],al
   14000a076:	add    edi,edi
   14000a078:	inc    BYTE PTR [rax]
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    edi,edi
   14000a080:	inc    BYTE PTR [rax]
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	add    BYTE PTR [rax],al
   14000a086:	add    edi,edi
   14000a088:	inc    BYTE PTR [rax]
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	add    BYTE PTR [rax],al
   14000a08e:	(bad)  
   14000a08f:	(bad)  
   14000a090:	inc    DWORD PTR [rax]
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	add    BYTE PTR [rax],al
   14000a096:	jg     0x14000a097
   14000a098:	(bad)  
   14000a099:	(bad)  
   14000a09a:	inc    eax
   14000a09c:	add    BYTE PTR [rdi],cl
   14000a09e:	(bad)  
   14000a09f:	(bad)  
   14000a0a0:	(bad)  
   14000a0a1:	(bad)  
   14000a0a2:	(bad)  
   14000a0a3:	(bad)  
   14000a0a4:	(bad)  
   14000a0a5:	(bad)  
   14000a0a6:	(bad)  
   14000a0a7:	(bad)  
   14000a0a8:	(bad)  
   14000a0a9:	(bad)  
   14000a0aa:	(bad)  
   14000a0ab:	(bad)  
   14000a0ac:	(bad)  
   14000a0ad:	(bad)  
   14000a0ae:	(bad)  
   14000a0af:	(bad)  
   14000a0b0:	(bad)  
   14000a0b1:	(bad)  
   14000a0b2:	(bad)  
   14000a0b3:	(bad)  
   14000a0b4:	(bad)  
   14000a0b5:	(bad)  
   14000a0b6:	(bad)  
   14000a0b7:	(bad)  
   14000a0b8:	(bad)  
   14000a0b9:	(bad)  
   14000a0ba:	(bad)  
   14000a0bb:	(bad)  
   14000a0bc:	(bad)  
   14000a0bd:	(bad)  
   14000a0be:	(bad)  
   14000a0bf:	(bad)  
   14000a0c0:	(bad)  
   14000a0c1:	(bad)  
   14000a0c2:	(bad)  
   14000a0c3:	(bad)  
   14000a0c4:	(bad)  
   14000a0c5:	(bad)  
   14000a0c6:	(bad)  
   14000a0c7:	(bad)  
   14000a0c8:	(bad)  
   14000a0c9:	(bad)  
   14000a0ca:	(bad)  
   14000a0cb:	(bad)  
   14000a0cc:	(bad)  
   14000a0cd:	(bad)  
   14000a0ce:	(bad)  
   14000a0cf:	(bad)  
   14000a0d0:	(bad)  
   14000a0d1:	(bad)  
   14000a0d2:	(bad)  
   14000a0d3:	(bad)  
   14000a0d4:	(bad)  
   14000a0d5:	(bad)  
   14000a0d6:	(bad)  
   14000a0d7:	(bad)  
   14000a0d8:	(bad)  
   14000a0d9:	(bad)  
   14000a0da:	(bad)  
   14000a0db:	(bad)  
   14000a0dc:	(bad)  
   14000a0dd:	(bad)  
   14000a0de:	(bad)  
   14000a0df:	(bad)  
   14000a0e0:	(bad)  
   14000a0e1:	(bad)  
   14000a0e2:	(bad)  
   14000a0e3:	(bad)  
   14000a0e4:	(bad)  
   14000a0e5:	(bad)  
   14000a0e6:	(bad)  
   14000a0e7:	(bad)  
   14000a0e8:	(bad)  
   14000a0e9:	(bad)  
   14000a0ea:	(bad)  
   14000a0eb:	(bad)  
   14000a0ec:	(bad)  
   14000a0ed:	(bad)  
   14000a0ee:	(bad)  
   14000a0ef:	(bad)  
   14000a0f0:	(bad)  
   14000a0f1:	(bad)  
   14000a0f2:	(bad)  
   14000a0f3:	(bad)  
   14000a0f4:	(bad)  
   14000a0f5:	(bad)  
   14000a0f6:	(bad)  
   14000a0f7:	(bad)  
   14000a0f8:	(bad)  
   14000a0f9:	(bad)  
   14000a0fa:	(bad)  
   14000a0fb:	(bad)  
   14000a0fc:	(bad)  
   14000a0fd:	(bad)  
   14000a0fe:	(bad)  
   14000a0ff:	(bad)  
   14000a100:	(bad)  
   14000a101:	(bad)  
   14000a102:	(bad)  
   14000a103:	(bad)  
   14000a104:	(bad)  
   14000a105:	(bad)  
   14000a106:	(bad)  
   14000a107:	(bad)  
   14000a108:	(bad)  
   14000a109:	(bad)  
   14000a10a:	(bad)  
   14000a10b:	(bad)  
   14000a10c:	(bad)  
   14000a10d:	(bad)  
   14000a10e:	(bad)  
   14000a10f:	jmp    FWORD PTR [rax]
   14000a111:	add    BYTE PTR [rax],al
   14000a113:	add    BYTE PTR [rax],dh
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    BYTE PTR [rax+0x0],ah
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    DWORD PTR [rax],eax
   14000a11e:	or     BYTE PTR [rax],al
   14000a120:	add    BYTE PTR [rax],al
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rcx],cl
	...
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	add    BYTE PTR [rcx],al
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rcx],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	add    BYTE PTR [rax],al
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	scas   al,BYTE PTR es:[rdi]
   14000a13d:	jg     0x14000a156
   14000a13f:	add    BYTE PTR [rbx-0x49ffe17b],dh
   14000a145:	mov    BYTE PTR [rcx],ah
   14000a147:	add    BYTE PTR [rbp-0x47ffd470],bh
   14000a14d:	xchg   ecx,eax
   14000a14e:	(bad)  
   14000a14f:	add    dh,al
   14000a151:	cwde   
   14000a152:	xor    al,0x0
   14000a154:	ret    0x3b98
   14000a157:	add    bh,cl
   14000a159:	movabs eax,ds:0x9cc100449cc2003c
   14000a162:	rex.W add dl,al
   14000a165:	popf   
   14000a166:	rex.WRXB add r14b,r10b
   14000a169:	test   eax,0xabcb0047
   14000a16e:	pop    rdx
   14000a16f:	add    cl,dl
   14000a171:	lods   al,BYTE PTR ds:[rsi]
   14000a172:	push   rsp
   14000a173:	add    al,dl
   14000a175:	scas   al,BYTE PTR es:[rdi]
   14000a176:	pop    rax
   14000a177:	add    ah,dl
   14000a179:	mov    cl,0x5c
   14000a17b:	add    ah,ah
   14000a17d:	mov    ecx,0xaecf0057
   14000a182:	(bad)  
   14000a183:	add    dh,cl
   14000a185:	mov    al,0x65
   14000a187:	add    dh,dl
   14000a189:	mov    bl,0x6b
   14000a18b:	add    al,dl
   14000a18d:	scas   eax,DWORD PTR es:[rdi]
   14000a18e:	jo     0x14000a190
   14000a190:	shl    BYTE PTR [rbp-0x4928ff8e],cl
   14000a196:	jbe    0x14000a198
   14000a198:	(bad)  
   14000a199:	mov    eax,0xbbda0074
   14000a19e:	jae    0x14000a1a0
   14000a1a0:	fnstcw WORD PTR [rax-0x4328ff89]
   14000a1a6:	jge    0x14000a1a8
   14000a1a8:	fstp   TBYTE PTR [rsi-0x4424ff88]
   14000a1ae:	jge    0x14000a1b0
   14000a1b0:	or     al,0x63
   14000a1b2:	repnz add BYTE PTR [rdx],dl
   14000a1b5:	ins    BYTE PTR es:[rdi],dx
   14000a1b6:	cmc    
   14000a1b7:	add    BYTE PTR [rcx],bl
   14000a1b9:	push   0x710a00f1
   14000a1be:	stc    
   14000a1bf:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e01983d
   14000a1c5:	jl     0x14000a1c5
   14000a1c7:	add    BYTE PTR [rbx],ah
   14000a1c9:	push   0xffffffffffffffef
   14000a1cb:	add    BYTE PTR [rip+0x2500eb7f],dh        # 0x165018d50
   14000a1d1:	ins    DWORD PTR es:[rdi],dx
   14000a1d2:	icebp  
   14000a1d3:	add    BYTE PTR [rip+0x2a00f271],ah        # 0x16a01944a
   14000a1d9:	je     0x14000a1cc
   14000a1db:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b01955a
   14000a1e1:	jnp    0x14000a1d6
   14000a1e3:	add    BYTE PTR [rdi],dh
   14000a1e5:	jnp    0x14000a1dd
   14000a1e7:	add    BYTE PTR [rbx],dl
   14000a1e9:	(bad)  
   14000a1ea:	test   DWORD PTR [rax],0xfd871c
   14000a1f0:	sbb    eax,0x1e00ff93
   14000a1f5:	xchg   edi,eax
   14000a1f6:	inc    DWORD PTR [rax]
   14000a1f8:	cmp    eax,0x2000e490
   14000a1fd:	xor    edi,0x0
   14000a200:	(bad)  
   14000a201:	xor    ch,0x0
   14000a204:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   14000a20a:	test   BYTE PTR [rax],0x2a
   14000a20d:	mov    dh,dh
   14000a20f:	add    BYTE PTR [rbx],ch
   14000a211:	cmp    edi,0x0
   14000a214:	and    BYTE PTR [rbx-0x72d5ff01],cl
   14000a21a:	std    
   14000a21b:	add    BYTE PTR [rbx],bh
   14000a21d:	mov    dh,dh
   14000a21f:	add    BYTE PTR [rax],ah
   14000a221:	nop
   14000a222:	test   DWORD PTR [rax],0xf7902c
   14000a228:	and    edx,DWORD PTR [rbp-0x6bd3ff02]
   14000a22e:	clc    
   14000a22f:	add    BYTE PTR [rdi],ch
   14000a231:	cwde   
   14000a232:	cld    
   14000a233:	add    BYTE PTR [rip+0x5b00f694],dh        # 0x19b0198cd
   14000a239:	popf   
   14000a23a:	fild   DWORD PTR [rax]
   14000a23c:	ins    DWORD PTR es:[rdi],dx
   14000a23d:	movabs ds:0x8c5400ec844500d3,al
   14000a246:	loope  0x14000a248
   14000a248:	push   rdi
   14000a249:	xchg   edx,eax
   14000a24a:	loope  0x14000a24c
   14000a24c:	rex.WXB test r13,rsi
   14000a24f:	add    BYTE PTR [rax-0x71],dl
   14000a252:	cmc    
   14000a253:	add    BYTE PTR [rax-0x67],al
   14000a256:	test   DWORD PTR [rax],0xf59a54
   14000a25c:	gs (bad) 
   14000a25e:	in     eax,dx
   14000a25f:	add    BYTE PTR [rax-0x5a],dl
   14000a262:	cli    
   14000a263:	add    BYTE PTR [rdi-0x5e],dh
   14000a266:	out    0x0,al
   14000a268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   14000a26a:	test   DWORD PTR [rax],0xf6a875
   14000a270:	jp     0x14000a224
   14000a272:	test   DWORD PTR [rax],0xb8a68c
   14000a278:	scas   eax,DWORD PTR es:[rdi]
   14000a279:	mov    bh,0xac
   14000a27b:	add    bl,al
   14000a27d:	scas   al,BYTE PTR es:[rdi]
   14000a27e:	xchg   DWORD PTR [rax],eax
   14000a280:	sar    BYTE PTR [rax-0x432aff7f],1
   14000a286:	mov    al,BYTE PTR [rax]
   14000a288:	retf   0x95b8
   14000a28b:	add    dl,dl
   14000a28d:	mov    ebp,0xbdc50097
   14000a292:	stos   DWORD PTR es:[rdi],eax
   14000a293:	add    dl,bl
   14000a295:	rol    DWORD PTR [rdi-0x773c2300],0x0
   14000a29c:	ffree  st(5)
   14000a29e:	mov    es,WORD PTR [rax]
   14000a2a0:	(bad)  
   14000a2a1:	rcr    DWORD PTR [rax+rax*1+0x9cc5db],0xe0
   14000a2a9:	rol    BYTE PTR [rcx-0x7a2f1200],0x0
   14000a2b0:	loopne 0x14000a27a
   14000a2b2:	xchg   ecx,eax
   14000a2b3:	add    cl,ah
   14000a2b5:	retf   0x95
   14000a2b8:	loope  0x14000a285
   14000a2ba:	cdq    
   14000a2bb:	add    bl,ah
   14000a2bd:	int    0x9a
   14000a2bf:	add    ch,ah
   14000a2c1:	iret   
   14000a2c2:	sahf   
   14000a2c3:	add    ah,bl
   14000a2c5:	leave  
   14000a2c6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a2c7:	add    ch,cl
   14000a2c9:	(bad)  
   14000a2ca:	mov    al,0x0
   14000a2cc:	retf   0xbec7
   14000a2cf:	add    ah,bl
   14000a2d1:	int    0xb1
   14000a2d3:	add    ah,ah
   14000a2d5:	retf   
   14000a2d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a2d7:	add    dl,ah
   14000a2d9:	int    0xaa
   14000a2db:	add    ch,ah
   14000a2dd:	shl    DWORD PTR [rdx-0x5b2c1700],1
   14000a2e3:	add    bh,ah
   14000a2e5:	shr    DWORD PTR [rbp-0x542a1700],1
   14000a2eb:	add    ah,ch
   14000a2ed:	xlat   BYTE PTR ds:[rbx]
   14000a2ee:	test   eax,0xaed8ee00
   14000a2f3:	add    al,ah
   14000a2f5:	shl    BYTE PTR [rax-0x4e271600],1
   14000a2fb:	add    ch,ch
   14000a2fd:	fidiv  DWORD PTR [rcx-0x4a251400]
   14000a303:	add    bh,ch
   14000a305:	fdiv   QWORD PTR [rbp-0x47221600]
   14000a30b:	add    ch,ch
   14000a30d:	fdivr  QWORD PTR [rcx-0x42211100]
   14000a313:	add    cl,dh
   14000a315:	fnsave [rax+rax*1+0xb8def0]
   14000a31c:	repnz loopne 0x14000a2dc
   14000a31f:	add    ah,bh
   14000a321:	jrcxz  0x14000a2df
   14000a323:	add    BYTE PTR [rsi-0x63ff2f5a],al
   14000a329:	mov    ah,0xdb
   14000a32b:	add    BYTE PTR [rsi-0x72ff3948],ah
   14000a331:	test   eax,0xaa9000e4
   14000a336:	out    0x0,al
   14000a338:	mov    ?,WORD PTR [rbx-0x477aff1b]
   14000a33e:	clc    
   14000a33f:	add    BYTE PTR [rdx-0x4aff0841],bl
   14000a345:	ror    ah,0x0
   14000a348:	xchg   edx,eax
   14000a349:	(bad)  
   14000a34a:	cli    
   14000a34b:	add    BYTE PTR [rbp-0x5bff0836],ah
   14000a351:	sar    ch,cl
   14000a353:	add    BYTE PTR [rbx+rdx*8-0x363cff06],dh
   14000a35a:	retf   0xda00
   14000a35d:	(bad)  
   14000a35e:	retf   0xee00
   14000a361:	loop   0x14000a32b
   14000a363:	add    cl,dh
   14000a365:	loop   0x14000a329
   14000a367:	add    bl,dh
   14000a369:	in     al,0xc1
   14000a36b:	add    ch,dh
   14000a36d:	in     al,0xc1
   14000a36f:	add    al,dh
   14000a371:	jrcxz  0x14000a339
   14000a373:	add    dl,dh
   14000a375:	in     eax,0xc5
   14000a377:	add    ch,dh
   14000a379:	in     al,0xc6
   14000a37b:	add    al,bh
   14000a37d:	out    0xc2,al
   14000a37f:	add    dl,dh
   14000a381:	out    0xca,al
   14000a383:	add    bh,dh
   14000a385:	out    0xc8,eax
   14000a387:	add    ah,dh
   14000a389:	call   0x12af9a45c
   14000a38e:	leave  
   14000a38f:	add    cl,bh
   14000a391:	jmp    0x126f1a462
   14000a396:	rol    BYTE PTR [rax],cl
   14000a398:	repz (bad) 
   14000a39a:	(bad)  
   14000a39b:	add    ch,dh
   14000a39d:	in     al,dx
   14000a39e:	fadd   DWORD PTR [rax]
   14000a3a0:	ret    
   14000a3a1:	(bad)  
   14000a3a3:	add    cl,bl
   14000a3a5:	call   0x131f6a4a6
   14000a3aa:	out    0x0,eax
   14000a3ac:	clc    
   14000a3ad:	lock loopne 0x14000a3b0
   14000a3b0:	out    0xf2,al
   14000a3b2:	inc    BYTE PTR [rax]
   14000a3b4:	icebp  
   14000a3b5:	idiv   ch
   14000a3b7:	add    ah,dh
   14000a3b9:	clc    
   14000a3ba:	std    
   14000a3bb:	add    bl,bh
   14000a3bd:	cld    
   14000a3be:	inc    BYTE PTR [rax]
   14000a3c0:	(bad)  
   14000a3c1:	(bad)  
   14000a3c2:	inc    BYTE PTR [rax]
	...
   14000a534:	(bad)  
   14000a535:	(bad)  
   14000a536:	inc    DWORD PTR [rax]
	...
   14000a5b4:	push   rbx
   14000a5b5:	push   rdx
   14000a5b6:	sbb    BYTE PTR [rsi],dl
   14000a5b8:	adc    eax,0x0
	...
   14000a5d9:	add    BYTE PTR [rax],al
   14000a5db:	add    BYTE PTR [rdx+0x53],bl
   14000a5de:	push   rdx
   14000a5df:	(bad)  
   14000a5e0:	(bad)  
   14000a5e1:	(bad)  
   14000a5e2:	sbb    bl,BYTE PTR [rbx]
   14000a5e4:	pop    rax
   14000a5e5:	pop    rdi
   14000a5e6:	push   0x6a
   14000a5e8:	js     0x14000a5f0
   14000a5ea:	(bad)  
	...
   14000a603:	add    BYTE PTR [rax],al
   14000a605:	pop    rdx
   14000a606:	push   rbx
   14000a607:	push   rdx
   14000a608:	(bad)  
   14000a609:	adc    eax,0x585c1816
   14000a60e:	pop    rdi
   14000a60f:	(bad)  
   14000a610:	push   0x62
   14000a612:	(bad)  
   14000a613:	imul   ebp,DWORD PTR [rcx+0x69],0x6756262
   14000a61a:	(bad)  
   14000a61b:	add    cl,BYTE PTR [rdx]
	...
   14000a62d:	add    BYTE PTR [rbp+0x53],dl
   14000a630:	push   rdx
   14000a631:	adc    eax,0x5c181613
   14000a636:	pop    rax
   14000a637:	pop    rdi
   14000a638:	(bad)  
   14000a639:	ins    BYTE PTR es:[rdi],dx
   14000a63a:	ins    BYTE PTR es:[rdi],dx
   14000a63b:	ins    BYTE PTR es:[rdi],dx
   14000a63c:	ins    BYTE PTR es:[rdi],dx
   14000a63d:	imul   ebp,DWORD PTR [rcx+0x69],0x5f626262
   14000a644:	pop    rdi
   14000a645:	pop    rdi
   14000a646:	(bad)  
   14000a647:	pop    rsi
   14000a648:	js     0x14000a650
   14000a64a:	pop    rsp
   14000a64b:	ja     0x14000a64e
   14000a64d:	add    eax,0x0
	...
   14000a65a:	add    BYTE PTR [rbx+0x14],dl
   14000a65d:	sbb    BYTE PTR [rbx],bl
   14000a65f:	pop    rax
   14000a660:	pop    rdi
   14000a661:	(bad)  
   14000a662:	push   0x6a
   14000a664:	ins    BYTE PTR es:[rdi],dx
   14000a665:	ins    BYTE PTR es:[rdi],dx
   14000a666:	ins    BYTE PTR es:[rdi],dx
   14000a667:	ins    BYTE PTR es:[rdi],dx
   14000a668:	push   0x62
   14000a66a:	(bad)  
   14000a66c:	(bad)  
   14000a66e:	(bad)  
   14000a670:	(bad)  
   14000a671:	pop    rdi
   14000a672:	(bad)
   14000a677:	pop    rsi
   14000a678:	js     0x14000a680
   14000a67a:	pop    rsp
   14000a67b:	js     0x14000a67e
   14000a67d:	add    al,0x3
   14000a67f:	or     al,BYTE PTR [rax]
	...
   14000a689:	add    BYTE PTR [rdi+0x58],bl
   14000a68c:	jb     0x14000a700
   14000a68e:	jne    0x14000a705
   14000a690:	jb     0x14000a6fe
   14000a692:	ins    BYTE PTR es:[rdi],dx
   14000a693:	push   0x62
   14000a695:	(bad)  
   14000a696:	ins    BYTE PTR es:[rdi],dx
   14000a697:	push   0x6e
   14000a699:	outs   dx,BYTE PTR ds:[rsi]
   14000a69a:	outs   dx,BYTE PTR ds:[rsi]
   14000a69b:	outs   dx,BYTE PTR ds:[rsi]
   14000a69c:	ins    BYTE PTR es:[rdi],dx
   14000a69d:	push   0x62
   14000a69f:	imul   esp,DWORD PTR [rdx+0x62],0x5f5f5e5e
   14000a6a6:	pop    rsi
   14000a6a7:	pop    rdi
   14000a6a8:	ja     0x14000a6b0
   14000a6aa:	pop    rsp
   14000a6ab:	js     0x14000a6ae
   14000a6ad:	adc    eax,0xa75
	...
   14000a6ba:	adc    esi,DWORD PTR [rdx-0x68]
   14000a6bd:	xchg   edx,eax
   14000a6be:	cwde   
   14000a6bf:	ins    BYTE PTR es:[rdi],dx
   14000a6c0:	pop    rsi
   14000a6c1:	outs   dx,BYTE PTR ds:[rsi]
   14000a6c2:	jb     0x14000a736
   14000a6c4:	jns    0x14000a740
   14000a6c6:	outs   dx,DWORD PTR ds:[rsi]
   14000a6c7:	jge    0x14000a747
   14000a6c9:	rex.WRB jg 0x14000a748
   14000a6cc:	mov    DWORD PTR [rdx+0x6c],esi
   14000a6cf:	(bad)  
   14000a6d1:	imul   ebp,DWORD PTR [rcx+0x69],0x62626262
   14000a6d8:	js     0x14000a6e2
   14000a6da:	pop    rsp
   14000a6db:	ja     0x14000a6de
   14000a6dd:	(bad)  
   14000a6de:	nop
   14000a6df:	add    al,0x0
	...
   14000a6e9:	add    BYTE PTR [rbx],dl
   14000a6eb:	jne    0x14000a681
   14000a6ed:	xchg   edx,eax
   14000a6ee:	xchg   esp,eax
   14000a6ef:	pop    rdi
   14000a6f0:	(bad)  
   14000a6f2:	jns    0x14000a76e
   14000a6f4:	gs rex.WB
   14000a6f6:	sub    BYTE PTR [r14],r12b
   14000a6f9:	and    al,0x28
   14000a6fb:	sub    BYTE PTR [rbp+0x49],al
   14000a6fe:	jl     0x14000a76c
   14000a700:	push   0x5f
   14000a702:	ins    BYTE PTR es:[rdi],dx
   14000a703:	push   0x69
   14000a705:	imul   ebp,DWORD PTR [rcx+0x62],0x725c0879
   14000a70c:	add    al,0x1a
   14000a70e:	nop
   14000a70f:	(bad)  
	...
   14000a718:	add    BYTE PTR [rax],al
   14000a71a:	adc    esi,DWORD PTR [rdx-0x6c]
   14000a71d:	xchg   edx,eax
   14000a71e:	xchg   esp,eax
   14000a71f:	pop    rdi
   14000a720:	pop    rdi
   14000a721:	nop
   14000a722:	jb     0x14000a79f
   14000a724:	and    eax,0x26262626
   14000a729:	es es and al,0x24
   14000a72d:	and    al,0x2b
   14000a72f:	and    QWORD PTR [r10+0x5f],0x6a
   14000a734:	push   0x6a
   14000a736:	imul   ebp,DWORD PTR [rcx+0x79],0x4775c08
   14000a73d:	(bad)  
   14000a73e:	nop
   14000a73f:	(bad)  
	...
   14000a748:	add    BYTE PTR [rax],al
   14000a74a:	adc    esi,DWORD PTR [rbp-0x6c]
   14000a74d:	xchg   edx,eax
   14000a74e:	xchg   esp,eax
   14000a74f:	pop    rax
   14000a750:	push   0x6f
   14000a752:	sub    r12d,DWORD PTR [rdi]
   14000a755:	(bad)  
   14000a756:	(bad)  
   14000a757:	es es es es es es es and al,0x24
   14000a760:	rex.RB jl 0x14000a7cc
   14000a763:	sbb    ebp,DWORD PTR [rdx+rbp*2+0x6a]
   14000a767:	imul   edx,DWORD PTR [rax+0x4775c08],0x8901b
	...
   14000a779:	add    BYTE PTR [rbx],dl
   14000a77b:	jb     0x14000a711
   14000a77d:	xchg   edx,eax
   14000a77e:	xchg   edx,eax
   14000a77f:	outs   dx,BYTE PTR ds:[rsi]
   14000a780:	rex.XB sub BYTE PTR [r15d],spl
   14000a784:	(bad)  
   14000a785:	(bad)  
   14000a786:	and    BYTE PTR [rsi],ah
   14000a788:	(bad)  
   14000a789:	es es es (bad) 
   14000a78d:	es es es es rex.X jl 0x14000a800
   14000a794:	pop    rax
   14000a795:	ins    BYTE PTR es:[rdi],dx
   14000a796:	push   0x69
   14000a798:	jns    0x14000a7a2
   14000a79a:	pop    rsp
   14000a79b:	ja     0x14000a7a3
   14000a79d:	sbb    DWORD PTR [rax+0x8],edx
   14000a7a3:	add    BYTE PTR [rax],al
   14000a7a5:	add    BYTE PTR [rax],al
   14000a7a7:	add    BYTE PTR [rax],al
   14000a7a9:	add    BYTE PTR [rbx],dl
   14000a7ab:	jne    0x14000a741
   14000a7ad:	xchg   edx,eax
   14000a7ae:	xchg   esp,eax
   14000a7af:	jb     0x14000a7f4
   14000a7b1:	sub    DWORD PTR [rdi],esp
   14000a7b3:	(bad)  
   14000a7b4:	(bad)  
   14000a7b5:	(bad)  
   14000a7b6:	rex.WRB (bad) 
   14000a7b8:	es es (bad) 
   14000a7bb:	(bad)  
   14000a7bc:	(bad)  
   14000a7bd:	es es es es rex.RB sbb DWORD PTR es:[r15+0x62],0x69
   14000a7c7:	imul   edi,DWORD PTR [rcx+0x8],0x1906775c
   14000a7ce:	nop
   14000a7cf:	or     BYTE PTR [rax],al
	...
   14000a7d9:	add    BYTE PTR [rbx],dl
   14000a7db:	jb     0x14000a771
   14000a7dd:	xchg   esp,eax
   14000a7de:	xchg   ebp,eax
   14000a7df:	jge    0x14000a80a
   14000a7e1:	sub    DWORD PTR [rax],esp
   14000a7e3:	rex.WRB (bad) 
   14000a7e5:	(bad)  
   14000a7e6:	call   FWORD PTR [rbx+0x27272746]
   14000a7ec:	(bad)  
   14000a7ed:	(bad)  
   14000a7ee:	(bad)  
   14000a7ef:	(bad)  
   14000a7f0:	es es es rex.RX
   14000a7f4:	gs pop rax
   14000a7f6:	push   0x69
   14000a7f8:	nop
   14000a7f9:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000a7fd:	sbb    dl,BYTE PTR [rax+0x8]
   14000a803:	add    BYTE PTR [rax],al
   14000a805:	add    BYTE PTR [rax],al
   14000a807:	add    BYTE PTR [rax],al
   14000a809:	add    BYTE PTR [rbx],dl
   14000a80b:	jne    0x14000a7a1
   14000a80d:	xchg   esp,eax
   14000a80e:	jne    0x14000a835
   14000a810:	sub    DWORD PTR [rcx],ebp
   14000a812:	(bad)  
   14000a813:	(bad)  
   14000a814:	(bad)  
   14000a815:	(bad)  
   14000a816:	(bad)  
   14000a817:	(bad)  
   14000a818:	inc    DWORD PTR [rdx+0x2727272b]
   14000a81e:	(bad)  
   14000a81f:	(bad)  
   14000a820:	(bad)  
   14000a821:	(bad)  
   14000a822:	(bad)  
   14000a823:	sub    BYTE PTR [rax+0x796a585b],al
   14000a829:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000a82d:	sbb    DWORD PTR [rsi+0x8],ecx
   14000a833:	add    BYTE PTR [rax],al
   14000a835:	add    BYTE PTR [rax],al
   14000a837:	add    BYTE PTR [rax],al
   14000a839:	add    BYTE PTR [rbx],dl
   14000a83b:	jne    0x14000a7d5
   14000a83d:	nop
   14000a83e:	jnp    0x14000a869
   14000a840:	sub    DWORD PTR [rcx],ebp
   14000a842:	(bad)  
   14000a843:	test   edi,edi
   14000a845:	(bad)  
   14000a846:	(bad)  
   14000a847:	(bad)  
   14000a848:	(bad)  
   14000a849:	call   FWORD PTR [rbx+0x2729284c]
   14000a84f:	sub    BYTE PTR [rdi],ah
   14000a851:	(bad)  
   14000a852:	(bad)  
   14000a853:	sub    BYTE PTR [rbx+0x50],al
   14000a856:	pop    rax
   14000a857:	push   0xffffffffffffff90
   14000a859:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000a85d:	sbb    dl,BYTE PTR [rax+0x8]
   14000a863:	add    BYTE PTR [rax],al
   14000a865:	add    BYTE PTR [rax],al
   14000a867:	add    BYTE PTR [rax],al
   14000a869:	add    BYTE PTR [rbx],dl
   14000a86b:	js     0x14000a806
   14000a86d:	js     0x14000a892
   14000a86f:	sub    dh,BYTE PTR [rdx]
   14000a871:	sub    bl,BYTE PTR [rdi]
   14000a873:	test   edi,edi
   14000a875:	(bad)  
   14000a876:	(bad)  
   14000a877:	(bad)  
   14000a878:	(bad)  
   14000a879:	(bad)  
   14000a87a:	(bad)  
   14000a87b:	inc    DWORD PTR [rdx+0x27282945]
   14000a881:	sub    BYTE PTR [rax],ch
   14000a883:	sub    BYTE PTR [rip+0x7962537c],ah        # 0x1b962fc05
   14000a889:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000a88d:	sbb    dl,BYTE PTR [rax+0x8]
   14000a893:	add    BYTE PTR [rax],al
   14000a895:	add    BYTE PTR [rax],al
   14000a897:	add    BYTE PTR [rax],al
   14000a899:	add    BYTE PTR [rbx],dl
   14000a89b:	jbe    0x14000a836
   14000a89d:	and    esi,DWORD PTR gs:[rdx]
   14000a8a0:	xor    dh,BYTE PTR [rdx]
   14000a8a2:	(bad)  
   14000a8a3:	test   edi,edi
   14000a8a5:	(bad)  
   14000a8a6:	(bad)  
   14000a8a7:	(bad)  
   14000a8a8:	(bad)  
   14000a8a9:	(bad)  
   14000a8aa:	(bad)  
   14000a8ab:	(bad)  
   14000a8ac:	call   FWORD PTR [rdi+0x272a2b4c]
   14000a8b2:	(bad)  
   14000a8b3:	sub    DWORD PTR [rax],ebp
   14000a8b5:	rex.WXB push r13
   14000a8b7:	pop    rax
   14000a8b8:	nop
   14000a8b9:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000a8bd:	sbb    dl,BYTE PTR [rax+0x8]
   14000a8c3:	add    BYTE PTR [rax],al
   14000a8c5:	add    BYTE PTR [rax],al
   14000a8c7:	add    BYTE PTR [rax],al
   14000a8c9:	add    BYTE PTR [rbx],dl
   14000a8cb:	nop
   14000a8cc:	xchg   esp,eax
   14000a8cd:	jnp    0x14000a8f2
   14000a8cf:	xor    dh,BYTE PTR [rdx]
   14000a8d1:	xor    bl,BYTE PTR [rdi]
   14000a8d3:	test   edi,edi
   14000a8d5:	(bad)  
   14000a8d6:	(bad)  
   14000a8d7:	(bad)  
   14000a8d8:	(bad)  
   14000a8d9:	(bad)  
   14000a8da:	(bad)  
   14000a8db:	(bad)  
   14000a8dc:	(bad)  
   14000a8dd:	(bad)  
   14000a8de:	inc    DWORD PTR [rdi+0x272a2b46]
   14000a8e4:	(bad)  
   14000a8e5:	rex.RX
   14000a8e6:	sbb    edi,DWORD PTR fs:[rcx+0x8]
   14000a8ea:	pop    rsp
   14000a8eb:	ja     0x14000a8f3
   14000a8ed:	sbb    dl,BYTE PTR [rax+0x8]
   14000a8f3:	add    BYTE PTR [rax],al
   14000a8f5:	add    BYTE PTR [rax],al
   14000a8f7:	add    BYTE PTR [rax],al
   14000a8f9:	add    BYTE PTR [rbx],dl
   14000a8fb:	mov    ss,WORD PTR [rbp+0x32333246]
   14000a901:	xor    ah,BYTE PTR [rcx]
   14000a903:	test   edi,edi
   14000a905:	(bad)  
   14000a906:	(bad)  
   14000a907:	(bad)  
   14000a908:	(bad)  
   14000a909:	(bad)  
   14000a90a:	(bad)  
   14000a90b:	(bad)  
   14000a90c:	(bad)  
   14000a90d:	(bad)  
   14000a90e:	(bad)  
   14000a90f:	jmp    QWORD PTR [rax+0x2928394c]
   14000a915:	mov    BYTE PTR ss:[rax],bl
   14000a918:	nop
   14000a919:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000a91d:	sbb    cl,BYTE PTR [rsi+0x8]
   14000a923:	add    BYTE PTR [rax],al
   14000a925:	add    BYTE PTR [rax],al
   14000a927:	add    BYTE PTR [rax],al
   14000a929:	add    BYTE PTR [rbx],dl
   14000a92b:	nop
   14000a92c:	nop
   14000a92d:	xor    esi,DWORD PTR ss:[rbx]
   14000a930:	xor    dh,BYTE PTR [rbx]
   14000a932:	and    al,BYTE PTR [rbp-0x1]
   14000a938:	(bad)  
   14000a939:	(bad)  
   14000a93a:	(bad)  
   14000a93b:	(bad)  
   14000a93c:	(bad)  
   14000a93d:	(bad)  
   14000a93e:	(bad)  
   14000a93f:	(bad)  
   14000a940:	(bad)  
   14000a941:	dec    DWORD PTR [rax+0x2a]
   14000a944:	sub    DWORD PTR [rsi],esi
   14000a946:	sbb    DWORD PTR [rax],0xffffff90
   14000a949:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000a94d:	sbb    dl,BYTE PTR [rax+0x8]
   14000a953:	add    BYTE PTR [rax],al
   14000a955:	add    BYTE PTR [rax],al
   14000a957:	add    BYTE PTR [rax],al
   14000a959:	add    BYTE PTR [rbx],dl
   14000a95b:	xchg   edx,eax
   14000a95c:	nop
   14000a95d:	xor    esi,DWORD PTR ss:[rbx]
   14000a960:	xor    esi,DWORD PTR [rbx]
   14000a962:	and    al,BYTE PTR [rbp-0x1]
   14000a968:	(bad)  
   14000a969:	(bad)  
   14000a96a:	(bad)  
   14000a96b:	(bad)  
   14000a96c:	(bad)  
   14000a96d:	(bad)  
   14000a96e:	(bad)  
   14000a96f:	(bad)  
   14000a970:	(bad)  
   14000a971:	dec    DWORD PTR [rbp+0x32]
   14000a974:	sub    DWORD PTR [rbx],esp
   14000a976:	sbb    DWORD PTR [rax],0x79
   14000a979:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000a97d:	sbb    dl,BYTE PTR [rax+0x8]
   14000a983:	add    BYTE PTR [rax],al
   14000a985:	add    BYTE PTR [rax],al
   14000a987:	add    BYTE PTR [rax],al
   14000a989:	add    BYTE PTR [rbx],dl
   14000a98b:	xchg   edx,eax
   14000a98c:	nop
   14000a98d:	xor    esi,DWORD PTR ss:[rip+0xffffffff85223333]        # 0xc522dcc7
   14000a994:	(bad)  
   14000a995:	(bad)  
   14000a996:	(bad)  
   14000a997:	(bad)  
   14000a998:	(bad)  
   14000a999:	(bad)  
   14000a99a:	(bad)  
   14000a99b:	(bad)  
   14000a99c:	(bad)  
   14000a99d:	(bad)  
   14000a99e:	(bad)  
   14000a99f:	(bad)  
   14000a9a0:	inc    DWORD PTR [rdi+0x36293248]
   14000a9a6:	mov    BYTE PTR [rsi],dl
   14000a9a8:	nop
   14000a9a9:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000a9ad:	sbb    dl,BYTE PTR [rax+0x8]
   14000a9b3:	add    BYTE PTR [rax],al
   14000a9b5:	add    BYTE PTR [rax],al
   14000a9b7:	add    BYTE PTR [rax],al
   14000a9b9:	add    BYTE PTR [rbx],dl
   14000a9bb:	xchg   edx,eax
   14000a9bc:	xchg   edx,eax
   14000a9bd:	cmp    DWORD PTR [rip+0x22353335],esi        # 0x16235dcf8
   14000a9c3:	xchg   edi,edi
   14000a9c5:	(bad)  
   14000a9c6:	(bad)  
   14000a9c7:	(bad)  
   14000a9c8:	(bad)  
   14000a9c9:	(bad)  
   14000a9ca:	(bad)  
   14000a9cb:	(bad)  
   14000a9cc:	(bad)  
   14000a9cd:	(bad)  
   14000a9ce:	call   FWORD PTR [rdi+0x32394881]
   14000a9d4:	sub    DWORD PTR [rdi+0x65],eax
   14000a9d7:	adc    edi,DWORD PTR [rcx+0x8]
   14000a9da:	pop    rsp
   14000a9db:	jb     0x14000a9e3
   14000a9dd:	sbb    dl,BYTE PTR [rax+0x8]
   14000a9e3:	add    BYTE PTR [rax],al
   14000a9e5:	add    BYTE PTR [rax],al
   14000a9e7:	add    BYTE PTR [rax],al
   14000a9e9:	add    BYTE PTR [rbx],dl
   14000a9eb:	xchg   edx,eax
   14000a9ec:	xchg   edi,eax
   14000a9ed:	jnp    0x14000aa26
   14000a9ef:	xor    eax,0x872c3335
   14000a9f4:	(bad)  
   14000a9f5:	(bad)  
   14000a9f6:	(bad)  
   14000a9f7:	(bad)  
   14000a9f8:	(bad)  
   14000a9f9:	(bad)  
   14000a9fa:	(bad)  
   14000a9fb:	(bad)  
   14000a9fc:	(bad)  
   14000a9fd:	inc    DWORD PTR [rsi+0x32323948]
   14000aa03:	xor    ah,BYTE PTR [rdx]
   14000aa05:	rex.WRB push r13
   14000aa07:	sbb    BYTE PTR [rax+0x6775c08],dl
   14000aa0d:	sbb    cl,BYTE PTR [rsi+0x8]
   14000aa13:	add    BYTE PTR [rax],al
   14000aa15:	add    BYTE PTR [rax],al
   14000aa17:	add    BYTE PTR [rax],al
   14000aa19:	add    BYTE PTR [rbx],dl
   14000aa1b:	xchg   edx,eax
   14000aa1c:	cdq    
   14000aa1d:	push   rsi
   14000aa1e:	(bad)  
   14000aa1f:	xor    eax,0x872c3535
   14000aa24:	(bad)  
   14000aa25:	(bad)  
   14000aa26:	(bad)  
   14000aa27:	(bad)  
   14000aa28:	(bad)  
   14000aa29:	(bad)  
   14000aa2a:	(bad)  
   14000aa2b:	call   FWORD PTR [rsi+0x32353981]
   14000aa31:	xor    esi,DWORD PTR [rdx]
   14000aa33:	xor    esp,DWORD PTR [rdx]
   14000aa35:	adc    BYTE PTR [rdx+0x5f],0x79
   14000aa39:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000aa3d:	sbb    dl,BYTE PTR [rax+0x8]
   14000aa43:	add    BYTE PTR [rax],al
   14000aa45:	add    BYTE PTR [rax],al
   14000aa47:	add    BYTE PTR [rax],al
   14000aa49:	add    BYTE PTR [rbx],dl
   14000aa4b:	xchg   edx,eax
   14000aa4c:	popf   
   14000aa4d:	outs   dx,DWORD PTR ds:[rsi]
   14000aa4e:	(bad)  
   14000aa4f:	xor    eax,0x872c353b
   14000aa54:	(bad)  
   14000aa55:	(bad)  
   14000aa56:	(bad)  
   14000aa57:	(bad)  
   14000aa58:	(bad)  
   14000aa59:	(bad)  
   14000aa5a:	call   FWORD PTR [rdx+0x32333947]
   14000aa60:	xor    dh,BYTE PTR [rip+0xffffffff83373233]        # 0xc337dc99
   14000aa66:	punpckldq mm2,DWORD PTR [rax+0x6775c08]
   14000aa6d:	sbb    dl,BYTE PTR [rax+0x8]
   14000aa73:	add    BYTE PTR [rax],al
   14000aa75:	add    BYTE PTR [rax],al
   14000aa77:	add    BYTE PTR [rax],al
   14000aa79:	add    BYTE PTR [rbx],dl
   14000aa7b:	xchg   edx,eax
   14000aa7c:	popf   
   14000aa7d:	xchg   edx,eax
   14000aa7e:	cmp    rdi,QWORD PTR [r11]
   14000aa81:	cmp    ebp,DWORD PTR [rdi+rax*4]
   14000aa84:	(bad)  
   14000aa85:	(bad)  
   14000aa86:	(bad)  
   14000aa87:	(bad)  
   14000aa88:	jmp    QWORD PTR [rax+0x34393f4e]
   14000aa8e:	xor    esi,DWORD PTR [rip+0x32333335]        # 0x17233ddc9
   14000aa94:	rex.WR push rsp
   14000aa96:	(bad)  
   14000aa97:	push   0x7a
   14000aa99:	or     BYTE PTR [rax+0x77],bl
   14000aa9c:	(bad)  
   14000aa9d:	sbb    dl,BYTE PTR [rax+0x8]
   14000aaa3:	add    BYTE PTR [rax],al
   14000aaa5:	add    BYTE PTR [rax],al
   14000aaa7:	add    BYTE PTR [rax],al
   14000aaa9:	add    BYTE PTR [rbx],dl
   14000aaab:	nop
   14000aaac:	cdq    
   14000aaad:	cwde   
   14000aaae:	push   rsi
   14000aaaf:	cmp    edi,DWORD PTR cs:[rbx]
   14000aab2:	xor    al,BYTE PTR [rdi-0x1]
   14000aab8:	xchg   DWORD PTR [rdx+0x3b],ecx
   14000aabb:	xor    eax,0x35353535
   14000aac0:	xor    esi,DWORD PTR [rip+0x16833735]        # 0x15683e1fb
   14000aac6:	(bad)  
   14000aac7:	push   0xffffffffffffff91
   14000aac9:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000aacd:	sbb    dl,BYTE PTR [rax+0x8]
   14000aad3:	add    BYTE PTR [rax],al
   14000aad5:	add    BYTE PTR [rax],al
   14000aad7:	add    BYTE PTR [rax],al
   14000aad9:	add    BYTE PTR [rdx],dl
   14000aadb:	mov    bl,BYTE PTR [rcx+0x3c407899]
   14000aae1:	cmp    ebp,DWORD PTR [rax*4-0x7b5f0001]
   14000aae8:	(bad)  
   14000aae9:	(bad)  
   14000aaea:	xor    eax,0x35353535
   14000aaef:	xor    eax,0x4c323535
   14000aaf4:	pop    rbx
   14000aaf5:	sbb    ebp,DWORD PTR [rsi+rbp*2-0x70]
   14000aaf9:	or     BYTE PTR [rdi+rsi*2+0x6],bl
   14000aafd:	sbb    dl,BYTE PTR [rax+0x8]
   14000ab03:	add    BYTE PTR [rax],al
   14000ab05:	add    BYTE PTR [rax],al
   14000ab07:	add    BYTE PTR [rax],al
   14000ab09:	add    BYTE PTR [rdx],dl
   14000ab0b:	mov    ds,WORD PTR [rcx+0x3c639999]
   14000ab11:	cmp    eax,0x8687473a
   14000ab16:	rex.WX (bad) 
   14000ab18:	cmp    esi,DWORD PTR [rbx+rdi*1]
   14000ab1b:	cmp    esi,DWORD PTR [rip+0x3535353b]        # 0x17535e05c
   14000ab21:	xor    al,0x47
   14000ab23:	sbb    BYTE PTR gs:[rdx+0x6d],ch
   14000ab27:	ins    DWORD PTR es:[rdi],dx
   14000ab28:	jp     0x14000ab32
   14000ab2a:	pop    rax
   14000ab2b:	ja     0x14000ab33
   14000ab2d:	sbb    dl,BYTE PTR [rax+0x8]
   14000ab33:	add    BYTE PTR [rax],al
   14000ab35:	add    BYTE PTR [rax],al
   14000ab37:	add    BYTE PTR [rax],al
   14000ab39:	add    BYTE PTR [rdx],dl
   14000ab3b:	mov    bl,BYTE PTR [rcx+0x516c9999]
   14000ab41:	cs cmp eax,0x3a342d3a
   14000ab47:	cmp    edi,DWORD PTR [rbx]
   14000ab49:	cmp    edi,DWORD PTR [rbx]
   14000ab4b:	cmp    edi,DWORD PTR [rbx]
   14000ab4d:	cmp    edi,DWORD PTR [rbx]
   14000ab4f:	cmp    esi,DWORD PTR [rip+0x6a58833d]        # 0x1aa592e92
   14000ab55:	ja     0x14000abc5
   14000ab57:	ins    DWORD PTR es:[rdi],dx
   14000ab58:	nop
   14000ab59:	or     BYTE PTR [rdx+rsi*2+0x6],bl
   14000ab5d:	sbb    dl,BYTE PTR [rax+0x8]
   14000ab63:	add    BYTE PTR [rax],al
   14000ab65:	add    BYTE PTR [rax],al
   14000ab67:	add    BYTE PTR [rax],al
   14000ab69:	add    BYTE PTR [rip+0xffffffff99989990],cl        # 0xd99944ff
   14000ab6f:	jb     0x14000abd3
   14000ab71:	push   rax
   14000ab72:	cmp    al,0x3e
   14000ab74:	cmp    eax,0x3d3d3d3d
   14000ab79:	cmp    edi,DWORD PTR [rbx]
   14000ab7b:	cmp    edi,DWORD PTR [rbx]
   14000ab7d:	cmp    edi,DWORD PTR [rbx]
   14000ab7f:	cmp    bh,BYTE PTR [rsi]
   14000ab81:	and    DWORD PTR [rdx+0x69],0x78
   14000ab85:	ja     0x14000abf9
   14000ab87:	outs   dx,BYTE PTR ds:[rsi]
   14000ab88:	jp     0x14000ab92
   14000ab8a:	pop    rsp
   14000ab8b:	ja     0x14000ab93
   14000ab8d:	sbb    dl,BYTE PTR [rax+0x8]
   14000ab93:	add    BYTE PTR [rax],al
   14000ab95:	add    BYTE PTR [rax],al
   14000ab97:	add    BYTE PTR [rax],al
   14000ab99:	add    BYTE PTR [rip+0xffffffff9898998e],cl        # 0xd899452d
   14000ab9f:	ins    BYTE PTR es:[rdi],dx
   14000aba0:	jb     0x14000ac14
   14000aba2:	push   rsp
   14000aba3:	(bad)  
   14000aba4:	cs cmp eax,0x3d3d3f3d
   14000abaa:	cmp    eax,0x2e3b3d3b
   14000abaf:	rex.RXB
   14000abb0:	gs (bad) 
   14000abb2:	ins    BYTE PTR es:[rdi],dx
   14000abb3:	jns    0x14000ac2d
   14000abb5:	ja     0x14000ac2e
   14000abb7:	outs   dx,BYTE PTR ds:[rsi]
   14000abb8:	xchg   esp,eax
   14000abb9:	or     BYTE PTR [rbx],bl
   14000abbb:	outs   dx,BYTE PTR ds:[rsi]
   14000abbc:	(bad)  
   14000abbd:	sbb    dl,BYTE PTR [rax+0x8]
   14000abc3:	add    BYTE PTR [rax],al
   14000abc5:	add    BYTE PTR [rax],al
   14000abc7:	add    BYTE PTR [rax],al
   14000abc9:	add    BYTE PTR [rip+0xffffffff9898998a],cl        # 0xd8994559
   14000abcf:	ins    BYTE PTR es:[rdi],dx
   14000abd0:	ins    BYTE PTR es:[rdi],dx
   14000abd1:	xchg   esp,eax
   14000abd2:	jne    0x14000ac36
   14000abd4:	rex.WRXB (bad) 
   14000abd6:	cs (bad) 
   14000abd8:	cmp    al,0x3c
   14000abda:	cmp    al,0x2e
   14000abdc:	cs cmp al,0x7c
   14000abdf:	push   0x7879726a
   14000abe4:	js     0x14000ac5d
   14000abe6:	jb     0x14000ac5a
   14000abe8:	xchg   ebp,eax
   14000abe9:	or     BYTE PTR [rbx],bl
   14000abeb:	outs   dx,BYTE PTR ds:[rsi]
   14000abec:	(bad)  
   14000abed:	sbb    dl,BYTE PTR [rax+0x8]
   14000abf3:	add    BYTE PTR [rax],al
   14000abf5:	add    BYTE PTR [rax],al
   14000abf7:	add    BYTE PTR [rax],al
   14000abf9:	add    BYTE PTR [rip+0xffffffff9898988a],cl        # 0xd8994489
   14000abff:	ins    BYTE PTR es:[rdi],dx
   14000ac00:	ins    BYTE PTR es:[rdi],dx
   14000ac01:	xchg   edx,eax
   14000ac02:	xchg   edx,eax
   14000ac03:	jns    0x14000ac6e
   14000ac05:	ins    BYTE PTR es:[rdi],dx
   14000ac06:	push   rsi
   14000ac07:	rex.WRXB
   14000ac08:	xor    BYTE PTR [r9+0x4f],al
   14000ac0c:	push   rsi
   14000ac0d:	ins    BYTE PTR es:[rdi],dx
   14000ac0e:	jb     0x14000ac82
   14000ac10:	nop
   14000ac11:	jns    0x14000ac8c
   14000ac13:	jns    0x14000ac8d
   14000ac15:	js     0x14000ac90
   14000ac17:	ja     0x14000abae
   14000ac19:	or     BYTE PTR [rdx],bl
   14000ac1b:	ins    BYTE PTR es:[rdi],dx
   14000ac1c:	(bad)  
   14000ac1d:	sbb    dl,BYTE PTR [rax+0xc]
   14000ac23:	add    BYTE PTR [rax],al
   14000ac25:	add    BYTE PTR [rax],al
   14000ac27:	add    BYTE PTR [rax],al
   14000ac29:	add    BYTE PTR [rip+0xffffffff98989890],cl        # 0xd89944bf
   14000ac2f:	ins    BYTE PTR es:[rdi],dx
   14000ac30:	ins    BYTE PTR es:[rdi],dx
   14000ac31:	xchg   edx,eax
   14000ac32:	nop
   14000ac33:	nop
   14000ac34:	outs   dx,BYTE PTR ds:[rsi]
   14000ac35:	jne    0x14000acb0
   14000ac37:	jne    0x14000acae
   14000ac39:	js     0x14000acb3
   14000ac3b:	jns    0x14000acb5
   14000ac3d:	js     0x14000abcf
   14000ac3f:	jns    0x14000acba
   14000ac41:	jns    0x14000acbc
   14000ac43:	jns    0x14000acbe
   14000ac45:	jns    0x14000acbe
   14000ac47:	jns    0x14000abde
   14000ac49:	or     BYTE PTR [rsi],dl
   14000ac4b:	push   0x6
   14000ac4d:	adc    al,0x5d
   14000ac4f:	adc    DWORD PTR [rax],eax
	...
   14000ac59:	add    BYTE PTR [rsi],dl
   14000ac5b:	mov    ds,WORD PTR [rbp-0x67666363]
   14000ac61:	cdq    
   14000ac62:	cdq    
   14000ac63:	cdq    
   14000ac64:	cdq    
   14000ac65:	xchg   esp,eax
   14000ac66:	xchg   esp,eax
   14000ac67:	xchg   esp,eax
   14000ac68:	xchg   esp,eax
   14000ac69:	xchg   esp,eax
   14000ac6a:	xchg   esp,eax
   14000ac6b:	xchg   edx,eax
   14000ac6c:	xchg   edx,eax
   14000ac6d:	xchg   edx,eax
   14000ac6e:	nop
   14000ac6f:	xchg   edx,eax
   14000ac70:	nop
   14000ac71:	nop
   14000ac72:	jns    0x14000ac04
   14000ac74:	jns    0x14000acef
   14000ac76:	jne    0x14000acef
   14000ac78:	xchg   ebp,eax
   14000ac79:	or     al,0x1b
   14000ac7b:	addr32 (bad) 
   14000ac7d:	movups xmm3,XMMWORD PTR [rdx]
	...
   14000ac88:	add    BYTE PTR [rax],al
   14000ac8a:	pop    rax
   14000ac8b:	sbb    ebx,DWORD PTR [rax]
   14000ac8d:	sbb    bl,BYTE PTR [rbx]
   14000ac8f:	sbb    DWORD PTR [rbx],ebx
   14000ac91:	pop    rsp
   14000ac92:	pop    rax
   14000ac93:	pop    rax
   14000ac94:	pop    rax
   14000ac95:	pop    rdi
   14000ac96:	pop    rdi
   14000ac97:	(bad)  
   14000ac99:	imul   ebp,DWORD PTR [rcx+0x6c],0x72727277
   14000aca0:	jne    0x14000ac32
   14000aca2:	mov    cs,WORD PTR [rsi-0x6b676e6c]
   14000aca8:	xchg   edx,eax
   14000aca9:	adc    DWORD PTR [rsp+rcx*1],ecx
	...
   14000acc4:	add    BYTE PTR [rax],al
   14000acc6:	(bad)  
   14000acc7:	pop    rdi
   14000acc8:	pop    rdi
   14000acc9:	pop    rdi
   14000acca:	pop    rdi
   14000accb:	pop    rcx
   14000accc:	pop    rcx
   14000accd:	sbb    ebx,DWORD PTR [rdx]
   14000accf:	sbb    BYTE PTR [rax],bl
   14000acd1:	adc    al,0x14
   14000acd3:	adc    edx,DWORD PTR [rdx]
   14000acd5:	adc    ecx,DWORD PTR [rsi]
   14000acd7:	or     eax,0x1a0f
	...
   14000ae38:	(bad)  
   14000ae39:	(bad)  
   14000ae3a:	(bad)  
   14000ae3b:	(bad)  
   14000ae3c:	(bad)  
   14000ae3d:	inc    DWORD PTR [rax]
   14000ae3f:	add    bh,bh
   14000ae41:	(bad)  
   14000ae42:	(bad)  
   14000ae43:	(bad)  
   14000ae44:	(bad)  
   14000ae45:	inc    DWORD PTR [rax]
   14000ae47:	add    bh,bh
   14000ae49:	(bad)  
   14000ae4a:	push   rax
   14000ae4c:	jg     0x14000ae4d
   14000ae4e:	add    BYTE PTR [rax],al
   14000ae50:	(bad)  
   14000ae51:	push   rax
   14000ae53:	add    BYTE PTR [rdi],bl
   14000ae55:	inc    DWORD PTR [rax]
   14000ae57:	add    bh,bh
   14000ae59:	clc    
   14000ae5a:	add    BYTE PTR [rax],al
   14000ae5c:	(bad)  
   14000ae5d:	inc    DWORD PTR [rax]
   14000ae5f:	add    ah,bh
   14000ae61:	add    BYTE PTR [rax],al
   14000ae63:	add    BYTE PTR [rbx],al
   14000ae65:	inc    DWORD PTR [rax]
   14000ae67:	add    al,ah
   14000ae69:	add    BYTE PTR [rax],al
   14000ae6b:	add    BYTE PTR [rax],al
   14000ae6d:	inc    DWORD PTR [rax]
   14000ae6f:	add    al,al
   14000ae71:	add    BYTE PTR [rax],al
   14000ae73:	add    BYTE PTR [rax],al
   14000ae75:	inc    DWORD PTR [rax]
   14000ae77:	add    al,al
   14000ae79:	add    BYTE PTR [rax],al
   14000ae7b:	add    BYTE PTR [rax],al
   14000ae7d:	inc    DWORD PTR [rax]
   14000ae7f:	add    al,al
   14000ae81:	add    BYTE PTR [rax],al
   14000ae83:	add    BYTE PTR [rax],al
   14000ae85:	inc    DWORD PTR [rax]
   14000ae87:	add    al,al
   14000ae89:	add    BYTE PTR [rax],al
   14000ae8b:	add    BYTE PTR [rax],al
   14000ae8d:	inc    DWORD PTR [rax]
   14000ae8f:	add    al,al
   14000ae91:	add    BYTE PTR [rax],al
   14000ae93:	add    BYTE PTR [rax],al
   14000ae95:	inc    DWORD PTR [rax]
   14000ae97:	add    al,al
   14000ae99:	add    BYTE PTR [rax],al
   14000ae9b:	add    BYTE PTR [rax],al
   14000ae9d:	inc    DWORD PTR [rax]
   14000ae9f:	add    al,al
   14000aea1:	add    BYTE PTR [rax],al
   14000aea3:	add    BYTE PTR [rax],al
   14000aea5:	inc    DWORD PTR [rax]
   14000aea7:	add    al,al
   14000aea9:	add    BYTE PTR [rax],al
   14000aeab:	add    BYTE PTR [rax],al
   14000aead:	inc    DWORD PTR [rax]
   14000aeaf:	add    al,al
   14000aeb1:	add    BYTE PTR [rax],al
   14000aeb3:	add    BYTE PTR [rax],al
   14000aeb5:	inc    DWORD PTR [rax]
   14000aeb7:	add    al,al
   14000aeb9:	add    BYTE PTR [rax],al
   14000aebb:	add    BYTE PTR [rax],al
   14000aebd:	inc    DWORD PTR [rax]
   14000aebf:	add    al,al
   14000aec1:	add    BYTE PTR [rax],al
   14000aec3:	add    BYTE PTR [rax],al
   14000aec5:	inc    DWORD PTR [rax]
   14000aec7:	add    al,al
   14000aec9:	add    BYTE PTR [rax],al
   14000aecb:	add    BYTE PTR [rax],al
   14000aecd:	inc    DWORD PTR [rax]
   14000aecf:	add    al,al
   14000aed1:	add    BYTE PTR [rax],al
   14000aed3:	add    BYTE PTR [rax],al
   14000aed5:	inc    DWORD PTR [rax]
   14000aed7:	add    al,al
   14000aed9:	add    BYTE PTR [rax],al
   14000aedb:	add    BYTE PTR [rax],al
   14000aedd:	inc    DWORD PTR [rax]
   14000aedf:	add    al,al
   14000aee1:	add    BYTE PTR [rax],al
   14000aee3:	add    BYTE PTR [rax],al
   14000aee5:	inc    DWORD PTR [rax]
   14000aee7:	add    al,al
   14000aee9:	add    BYTE PTR [rax],al
   14000aeeb:	add    BYTE PTR [rax],al
   14000aeed:	inc    DWORD PTR [rax]
   14000aeef:	add    al,al
   14000aef1:	add    BYTE PTR [rax],al
   14000aef3:	add    BYTE PTR [rax],al
   14000aef5:	inc    DWORD PTR [rax]
   14000aef7:	add    al,al
   14000aef9:	add    BYTE PTR [rax],al
   14000aefb:	add    BYTE PTR [rax],al
   14000aefd:	inc    DWORD PTR [rax]
   14000aeff:	add    al,al
   14000af01:	add    BYTE PTR [rax],al
   14000af03:	add    BYTE PTR [rax],al
   14000af05:	inc    DWORD PTR [rax]
   14000af07:	add    al,al
   14000af09:	add    BYTE PTR [rax],al
   14000af0b:	add    BYTE PTR [rax],al
   14000af0d:	inc    DWORD PTR [rax]
   14000af0f:	add    al,al
   14000af11:	add    BYTE PTR [rax],al
   14000af13:	add    BYTE PTR [rax],al
   14000af15:	inc    DWORD PTR [rax]
   14000af17:	add    al,al
   14000af19:	add    BYTE PTR [rax],al
   14000af1b:	add    BYTE PTR [rax],al
   14000af1d:	inc    DWORD PTR [rax]
   14000af1f:	add    al,al
   14000af21:	add    BYTE PTR [rax],al
   14000af23:	add    BYTE PTR [rax],al
   14000af25:	inc    DWORD PTR [rax]
   14000af27:	add    al,al
   14000af29:	add    BYTE PTR [rax],al
   14000af2b:	add    BYTE PTR [rax],al
   14000af2d:	inc    DWORD PTR [rax]
   14000af2f:	add    al,al
   14000af31:	add    BYTE PTR [rax],al
   14000af33:	add    BYTE PTR [rax],al
   14000af35:	inc    DWORD PTR [rax]
   14000af37:	add    al,al
   14000af39:	add    BYTE PTR [rax],al
   14000af3b:	add    BYTE PTR [rax],al
   14000af3d:	inc    DWORD PTR [rax]
   14000af3f:	add    al,al
   14000af41:	add    BYTE PTR [rax],al
   14000af43:	add    BYTE PTR [rax],al
   14000af45:	inc    DWORD PTR [rax]
   14000af47:	add    al,al
   14000af49:	add    BYTE PTR [rax],al
   14000af4b:	add    BYTE PTR [rax],al
   14000af4d:	inc    DWORD PTR [rax]
   14000af4f:	add    al,al
   14000af51:	add    BYTE PTR [rax],al
   14000af53:	add    BYTE PTR [rax],al
   14000af55:	inc    DWORD PTR [rax]
   14000af57:	add    al,al
   14000af59:	add    BYTE PTR [rax],al
   14000af5b:	add    BYTE PTR [rax],al
   14000af5d:	inc    DWORD PTR [rax]
   14000af5f:	add    al,al
   14000af61:	add    BYTE PTR [rax],al
   14000af63:	add    BYTE PTR [rax],al
   14000af65:	inc    DWORD PTR [rax]
   14000af67:	add    al,al
   14000af69:	add    BYTE PTR [rax],al
   14000af6b:	add    BYTE PTR [rax],al
   14000af6d:	inc    DWORD PTR [rax]
   14000af6f:	add    al,al
   14000af71:	add    BYTE PTR [rax],al
   14000af73:	add    BYTE PTR [rdi],cl
   14000af75:	inc    DWORD PTR [rax]
   14000af77:	add    bh,bh
   14000af79:	cld    
   14000af7a:	add    BYTE PTR [rax],al
   14000af7c:	(bad)  
   14000af7d:	inc    DWORD PTR [rax]
   14000af7f:	add    bh,bh
   14000af81:	(bad)  
   14000af82:	(bad)  
   14000af83:	(bad)  
   14000af84:	(bad)  
   14000af85:	inc    DWORD PTR [rax]
   14000af87:	add    bh,bh
   14000af89:	(bad)  
   14000af8a:	(bad)  
   14000af8b:	(bad)  
   14000af8c:	(bad)  
   14000af8d:	inc    DWORD PTR [rax]
   14000af8f:	add    bh,bh
   14000af91:	(bad)  
   14000af92:	(bad)  
   14000af93:	(bad)  
   14000af94:	(bad)  
   14000af95:	inc    DWORD PTR [rax]
   14000af97:	add    bh,bh
   14000af99:	(bad)  
   14000af9a:	(bad)  
   14000af9b:	(bad)  
   14000af9c:	(bad)  
   14000af9d:	inc    DWORD PTR [rax]
   14000af9f:	add    bh,bh
   14000afa1:	(bad)  
   14000afa2:	(bad)  
   14000afa3:	(bad)  
   14000afa4:	(bad)  
   14000afa5:	inc    DWORD PTR [rax]
   14000afa7:	add    bh,bh
   14000afa9:	(bad)  
   14000afaa:	(bad)  
   14000afab:	(bad)  
   14000afac:	(bad)  
   14000afad:	inc    DWORD PTR [rax]
   14000afaf:	add    bh,bh
   14000afb1:	(bad)  
   14000afb2:	(bad)  
   14000afb3:	(bad)  
   14000afb4:	(bad)  
   14000afb5:	inc    DWORD PTR [rax]
   14000afb7:	add    BYTE PTR [rax],ch
   14000afb9:	add    BYTE PTR [rax],al
   14000afbb:	add    BYTE PTR [rax],ah
   14000afbd:	add    BYTE PTR [rax],al
   14000afbf:	add    BYTE PTR [rax+0x0],al
   14000afc2:	add    BYTE PTR [rax],al
   14000afc4:	add    DWORD PTR [rax],eax
   14000afc6:	or     BYTE PTR [rax],al
   14000afc8:	add    BYTE PTR [rax],al
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	add    BYTE PTR [rax+rax*1],al
	...
   14000afd7:	add    BYTE PTR [rax],al
   14000afd9:	add    DWORD PTR [rax],eax
   14000afdb:	add    BYTE PTR [rax],al
   14000afdd:	add    DWORD PTR [rax],eax
   14000afdf:	add    BYTE PTR [rax],al
   14000afe1:	add    BYTE PTR [rax],al
   14000afe3:	add    BYTE PTR [rsi-0x4cffb067],bh
   14000afe9:	nop
   14000afea:	push   rdi
   14000afeb:	add    BYTE PTR [rsi-0x42ffa36d],dh
   14000aff1:	pushf  
   14000aff2:	pop    rbp
   14000aff3:	add    BYTE PTR [rcx-0x42ff9e6a],bh
   14000aff9:	(bad)  
   14000affa:	add    BYTE PTR gs:[rdx-0x40ff9766],bh
   14000b001:	popf   
   14000b002:	imul   eax,DWORD PTR [rax],0xffffffbf
   14000b005:	movabs eax,ds:0x9ecb00529cc00072
   14000b00e:	pop    rdi
   14000b00f:	add    dl,al
   14000b011:	lahf   
   14000b012:	ins    DWORD PTR es:[rdi],dx
   14000b013:	add    ah,al
   14000b015:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b016:	push   0x6bb3d600
   14000b01b:	add    dl,al
   14000b01d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b01e:	jbe    0x14000b020
   14000b020:	leave  
   14000b021:	lods   al,BYTE PTR ds:[rsi]
   14000b022:	jg     0x14000b024
   14000b024:	enter  0x7bb0,0x0
   14000b028:	shl    BYTE PTR [rbp+0x630c0072],cl
   14000b02e:	repnz add BYTE PTR [rdx],dl
   14000b031:	ins    BYTE PTR es:[rdi],dx
   14000b032:	cmc    
   14000b033:	add    BYTE PTR [rcx],bl
   14000b035:	push   0x710a00f1
   14000b03a:	stc    
   14000b03b:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e01a6b9
   14000b041:	jl     0x14000b041
   14000b043:	add    BYTE PTR [rbx],ah
   14000b045:	push   0xffffffffffffffef
   14000b047:	add    BYTE PTR [rip+0x3500e270],ch        # 0x1750192bd
   14000b04d:	jg     0x14000b03a
   14000b04f:	add    BYTE PTR [rip+0x2500f16d],ah        # 0x16501a1c2
   14000b055:	jno    0x14000b049
   14000b057:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b01a3d6
   14000b05d:	jnp    0x14000b052
   14000b05f:	add    BYTE PTR [rip+0x3700fd70],ah        # 0x17701add5
   14000b065:	jnp    0x14000b05d
   14000b067:	add    BYTE PTR [rdx+0x7b],al
   14000b06a:	xlat   BYTE PTR ds:[rbx]
   14000b06b:	add    BYTE PTR [rsp+rdx*4-0x54],bh
   14000b06f:	add    BYTE PTR [rbx],dl
   14000b071:	(bad)  
   14000b072:	test   DWORD PTR [rax],0xfd871c
   14000b078:	sbb    eax,0x2c00ff93
   14000b07d:	mov    esp,gs
   14000b07f:	add    BYTE PTR [rcx],dh
   14000b081:	mov    esp,edx
   14000b083:	add    BYTE PTR [rax],ah
   14000b085:	xor    edi,0x0
   14000b088:	(bad)  
   14000b089:	xor    ch,0x0
   14000b08c:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   14000b092:	test   BYTE PTR [rax],0x2a
   14000b095:	mov    dh,dh
   14000b097:	add    BYTE PTR [rax],ah
   14000b099:	mov    edi,edi
   14000b09b:	add    BYTE PTR [rax],ah
   14000b09d:	nop
   14000b09e:	test   DWORD PTR [rax],0xf7902c
   14000b0a4:	and    edx,DWORD PTR [rbp-0x6bd3ff02]
   14000b0aa:	clc    
   14000b0ab:	add    BYTE PTR [rdi],ch
   14000b0ad:	cwde   
   14000b0ae:	cld    
   14000b0af:	add    BYTE PTR [rip+0x4b00f694],dh        # 0x18b01a749
   14000b0b5:	(bad)  
   14000b0b6:	(bad)  
   14000b0b7:	add    BYTE PTR [rbx-0x77],dl
   14000b0ba:	xlat   BYTE PTR ds:[rbx]
   14000b0bb:	add    BYTE PTR [rsi-0x70],al
   14000b0be:	xlat   BYTE PTR ds:[rbx]
   14000b0bf:	add    BYTE PTR [rbp-0x6c],ch
   14000b0c2:	enter  0x4500,0x84
   14000b0c6:	in     al,dx
   14000b0c7:	add    BYTE PTR [rsp+rcx*4-0x1f],dl
   14000b0cb:	add    BYTE PTR [rdi-0x6e],dl
   14000b0ce:	loope  0x14000b0d0
   14000b0d0:	rex cdq 
   14000b0d2:	test   DWORD PTR [rax],0xf59a54
   14000b0d8:	gs (bad) 
   14000b0da:	in     eax,dx
   14000b0db:	add    BYTE PTR [rax-0x5a],dl
   14000b0de:	cli    
   14000b0df:	add    BYTE PTR [rdi-0x5b],ah
   14000b0e2:	test   DWORD PTR [rax],0xf6a875
   14000b0e8:	jp     0x14000b09c
   14000b0ea:	test   DWORD PTR [rax],0x97958f
   14000b0f0:	test   eax,0x9d00839e
   14000b0f5:	movabs ds:0xa68c008ca2ae009a,eax
   14000b0fe:	mov    eax,0xacb7af00
   14000b103:	add    bl,al
   14000b105:	scas   al,BYTE PTR es:[rdi]
   14000b106:	xchg   DWORD PTR [rax],eax
   14000b108:	(bad)
   14000b10b:	add    cl,cl
   14000b10d:	mov    bl,0x88
   14000b10f:	add    dl,cl
   14000b111:	mov    ah,0x8a
   14000b113:	add    ah,cl
   14000b115:	mov    dh,0x8d
   14000b117:	add    ch,dl
   14000b119:	mov    esp,0xb9ce008a
   14000b11e:	xchg   ecx,eax
   14000b11f:	add    dl,cl
   14000b121:	mov    eax,0xbbd10095
   14000b126:	xchg   edx,eax
   14000b127:	add    dl,dl
   14000b129:	mov    ebp,0xc1d50097
   14000b12e:	pushf  
   14000b12f:	add    bl,bl
   14000b131:	(bad)
   14000b134:	(bad)  
   14000b135:	ret    
   14000b136:	movabs al,ds:0xa6c9dc00a3c6d800
   14000b13f:	add    ah,dl
   14000b141:	(bad)
   14000b144:	fcmovne st,st(2)
   14000b146:	lods   al,BYTE PTR ds:[rsi]
   14000b147:	add    dl,cl
   14000b149:	(bad)  
   14000b14a:	mov    esi,0xb1cddc00
   14000b14f:	add    ch,bl
   14000b151:	sar    DWORD PTR [rcx-0x5c371f00],1
   14000b157:	add    ah,ah
   14000b159:	retf   
   14000b15a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b15b:	add    dl,ah
   14000b15d:	int    0xaa
   14000b15f:	add    ch,ah
   14000b161:	shl    DWORD PTR [rdx-0x5b2c1700],1
   14000b167:	add    bh,ah
   14000b169:	shr    DWORD PTR [rbp-0x542a1700],1
   14000b16f:	add    dh,ch
   14000b171:	fsubr  DWORD PTR [rsi-0x4f2f2000]
   14000b177:	add    bl,ah
   14000b179:	shl    BYTE PTR [rbp-0x48291900],cl
   14000b17f:	add    dl,ch
   14000b181:	(bad)  
   14000b182:	mov    dl,0x0
   14000b184:	(bad)  
   14000b185:	fdiv   DWORD PTR [rcx-0x49271500]
   14000b18b:	add    ch,ch
   14000b18d:	fidiv  DWORD PTR [rax+rax*1+0xb5dcef]
   14000b194:	loope  0x14000b16a
   14000b196:	mov    esp,0xbfd7e500
   14000b19b:	add    dl,ch
   14000b19d:	fdivr  DWORD PTR [rdx-0x46251300]
   14000b1a3:	add    ch,ch
   14000b1a5:	fdivr  QWORD PTR [rcx-0x43241200]
   14000b1ab:	add    bl,dh
   14000b1ad:	fnsave [rax+rax*1+0xb4def6]
   14000b1b4:	lock fidivr WORD PTR [rax-0x431f0e00]
   14000b1bb:	add    al,bh
   14000b1bd:	loopne 0x14000b177
   14000b1bf:	add    ah,bh
   14000b1c1:	jrcxz  0x14000b17f
   14000b1c3:	add    BYTE PTR [rsi-0x7aff2f5a],al
   14000b1c9:	mov    eax,0xbf9a00f8
   14000b1ce:	test   DWORD PTR [rax],0xccc0b5
   14000b1d4:	xchg   edx,eax
   14000b1d5:	(bad)  
   14000b1d6:	cli    
   14000b1d7:	add    BYTE PTR [rbp-0x25ff0836],ah
   14000b1dd:	(bad)  
   14000b1de:	retf   0xe500
   14000b1e1:	fcmovb st,st(4)
   14000b1e3:	add    al,ah
   14000b1e5:	fcompp 
   14000b1e7:	add    dh,ch
   14000b1e9:	loop   0x14000b1b3
   14000b1eb:	add    bl,ch
   14000b1ed:	loop   0x14000b1c1
   14000b1ef:	add    bh,ch
   14000b1f1:	out    0xd7,al
   14000b1f3:	add    cl,dh
   14000b1f5:	out    0xd2,al
   14000b1f7:	add    cl,dh
   14000b1f9:	jmp    0x12cf5b2d9
   14000b1fe:	fadd   DWORD PTR [rax]
   14000b200:	ret    
   14000b201:	(bad)  
   14000b203:	add    ch,bl
   14000b205:	in     eax,dx
   14000b206:	std    
   14000b207:	add    dh,ah
   14000b209:	repnz inc BYTE PTR [rax]
   14000b20c:	(bad)  
   14000b20d:	(bad)  
   14000b20e:	inc    BYTE PTR [rax]
	...
   14000b3dc:	(bad)  
   14000b3dd:	(bad)  
   14000b3de:	inc    DWORD PTR [rax]
	...
   14000b430:	add    BYTE PTR [rax],al
   14000b432:	rex.WRXB
   14000b433:	rex.WRB
   14000b434:	rex.WRB
   14000b435:	rex.WRB
   14000b436:	adc    QWORD PTR [r8],rax
	...
   14000b449:	add    BYTE PTR [rdi+0x4f],cl
   14000b44c:	rex.WRB
   14000b44d:	rex.WRB
   14000b44e:	rex.WRX push rcx
   14000b450:	push   rcx
   14000b451:	push   rdx
   14000b452:	push   rsi
   14000b453:	push   rsi
   14000b454:	push   rsi
   14000b455:	push   rdi
   14000b456:	pop    rbp
   14000b457:	add    DWORD PTR [rbp+0xd],ecx
	...
   14000b462:	rex.WRB
   14000b463:	rex.WRXB
   14000b464:	rex.WRB
   14000b465:	rex.WRB
   14000b466:	rex.WB
   14000b467:	rex.WRB push r9
   14000b469:	push   rbx
   14000b46a:	push   rsp
   14000b46b:	push   rdi
   14000b46c:	pop    rdi
   14000b46d:	pop    rdi
   14000b46e:	push   rdi
   14000b46f:	push   rdi
   14000b470:	push   rdi
   14000b471:	(bad)  
   14000b472:	pop    rdi
   14000b473:	pop    rdi
   14000b474:	pop    rdi
   14000b475:	pop    rbp
   14000b476:	pop    rbp
   14000b477:	add    DWORD PTR [rdx+0x1],esp
   14000b47a:	rex.WX
   14000b47b:	rex.WRB add BYTE PTR [r8],r8b
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	add    BYTE PTR [rax],al
   14000b482:	adc    dl,BYTE PTR [rdi+riz*2+0x66]
   14000b486:	push   0x70666257
   14000b48b:	jbe    0x14000b505
   14000b48d:	js     0x14000b4f8
   14000b48f:	imul   ebx,DWORD PTR [rdi+0x63],0x625d6062
   14000b496:	(bad)  
   14000b497:	add    DWORD PTR [rsi+0x1],esi
   14000b49a:	jbe    0x14000b4a7
   14000b49c:	add    BYTE PTR [rax],al
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	add    BYTE PTR [rax],al
   14000b4a2:	(bad)  
   14000b4a3:	xchg   WORD PTR [rdi+0x5f],sp
   14000b4a7:	push   rdi
   14000b4a8:	sbb    BYTE PTR [rdx+0x22],0x1a
   14000b4ac:	adc    ebx,DWORD PTR [rcx]
   14000b4ae:	and    bh,BYTE PTR [rax+rbx*2+0x51]
   14000b4b2:	(bad)  
   14000b4b3:	imul   ebp,DWORD PTR [rax+0x68],0xa690a63
   14000b4ba:	jbe    0x14000b4bd
   14000b4bc:	add    BYTE PTR [rax],al
   14000b4be:	add    BYTE PTR [rax],al
   14000b4c0:	add    BYTE PTR [rax],al
   14000b4c2:	(bad)  
   14000b4c3:	xchg   WORD PTR [rax+0x56],si
   14000b4c7:	jg     0x14000b4fe
   14000b4c9:	sbb    al,0x15
   14000b4cb:	sbb    al,0x19
   14000b4cd:	sbb    DWORD PTR [rip+0x495a1a13],edx        # 0x1895acee6
   14000b4d3:	(bad)  
   14000b4d4:	imul   ebp,DWORD PTR [rax+0x64],0x690a760a
   14000b4db:	or     al,BYTE PTR [rax]
   14000b4dd:	add    BYTE PTR [rax],al
   14000b4df:	add    BYTE PTR [rax],al
   14000b4e1:	add    BYTE PTR [rsi],cl
   14000b4e3:	xchg   WORD PTR [rax+0x1514225a],ax
   14000b4ea:	adc    edx,DWORD PTR [rip+0x1c1c1c1c]        # 0x15c1cd10c
   14000b4f0:	adc    eax,0x63495a15
   14000b4f5:	push   0xa750a64
   14000b4fa:	jbe    0x14000b506
   14000b4fc:	add    BYTE PTR [rax],al
   14000b4fe:	add    BYTE PTR [rax],al
   14000b500:	add    BYTE PTR [rax],al
   14000b502:	(bad)  
   14000b503:	push   rdi
   14000b504:	xchg   DWORD PTR [rcx-0xe0eae5],eax
   14000b50a:	mov    BYTE PTR [rcx],ah
   14000b50c:	adc    ebx,DWORD PTR [rcx]
   14000b50e:	sbb    eax,0x19191d1c
   14000b513:	rex.W
   14000b514:	rex.WB (bad) 
   14000b516:	or     dh,BYTE PTR fs:[rsi+0xa]
   14000b51a:	jne    0x14000b526
   14000b51c:	add    BYTE PTR [rax],al
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	add    BYTE PTR [rax],al
   14000b522:	(bad)  
   14000b523:	ins    DWORD PTR es:[rdi],dx
   14000b524:	xchg   DWORD PTR [rsi],esi
   14000b526:	adc    al,0x14
   14000b528:	rex.B (bad) 
   14000b52a:	(bad)  
   14000b52b:	(bad)  
   14000b52c:	jnp    0x14000b543
   14000b52e:	adc    eax,0x151d1d1d
   14000b533:	xor    eax,0xa754f4f
   14000b538:	imul   ecx,DWORD PTR [rdx],0xa76
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	add    BYTE PTR [rax],al
   14000b542:	(bad)  
   14000b543:	and    WORD PTR [rax],0x131e
   14000b548:	rex.X (bad) 
   14000b54a:	(bad)  
   14000b54b:	(bad)  
   14000b54c:	dec    DWORD PTR [rcx+0x1d15153d]
   14000b552:	sbb    eax,0x75504814
   14000b557:	or     dh,BYTE PTR [rsi+0xa]
   14000b55a:	jne    0x14000b566
   14000b55c:	add    BYTE PTR [rax],al
   14000b55e:	add    BYTE PTR [rax],al
   14000b560:	add    BYTE PTR [rax],al
   14000b562:	(bad)  
   14000b563:	ins    DWORD PTR es:[rdi],dx
   14000b564:	jns    0x14000b57c
   14000b566:	sub    dl,BYTE PTR [rdx+rax*2]
   14000b569:	(bad)  
   14000b56a:	(bad)  
   14000b56b:	(bad)  
   14000b56c:	(bad)  
   14000b56d:	(bad)  
   14000b56e:	(bad)  
   14000b56f:	jle    0x14000b590
   14000b571:	adc    al,0x1d
   14000b573:	adc    al,0x38
   14000b575:	rex.WB jne 0x14000b582
   14000b578:	jne    0x14000b584
   14000b57a:	jbe    0x14000b586
   14000b57c:	add    BYTE PTR [rax],al
   14000b57e:	add    BYTE PTR [rax],al
   14000b580:	add    BYTE PTR [rax],al
   14000b582:	(bad)  
   14000b583:	ins    DWORD PTR es:[rdi],dx
   14000b584:	cmp    bl,BYTE PTR [rax]
   14000b586:	sub    edx,DWORD PTR [rsi]
   14000b588:	rex.X (bad) 
   14000b58a:	(bad)  
   14000b58b:	(bad)  
   14000b58c:	(bad)  
   14000b58d:	(bad)  
   14000b58e:	(bad)  
   14000b58f:	(bad)  
   14000b590:	inc    DWORD PTR [rcx+0x1e]
   14000b593:	adc    al,0x39
   14000b595:	rex.WRB (bad) 
   14000b597:	or     dh,BYTE PTR [rbp+0xa]
   14000b59a:	imul   ecx,DWORD PTR [rdx],0x0
   14000b5a0:	add    BYTE PTR [rax],al
   14000b5a2:	(bad)  
   14000b5a3:	sbb    bx,WORD PTR [rax]
   14000b5a6:	sub    edx,DWORD PTR [rsi]
   14000b5a8:	rex.X (bad) 
   14000b5aa:	(bad)  
   14000b5ab:	(bad)  
   14000b5ac:	(bad)  
   14000b5ad:	(bad)  
   14000b5ae:	(bad)  
   14000b5af:	(bad)  
   14000b5b0:	(bad)  
   14000b5b1:	(bad)  
   14000b5b2:	ds adc al,0x1f
   14000b5b5:	movsxd r9,DWORD PTR [r10]
   14000b5b8:	jbe    0x14000b5c4
   14000b5ba:	jbe    0x14000b5c6
   14000b5bc:	add    BYTE PTR [rax],al
   14000b5be:	add    BYTE PTR [rax],al
   14000b5c0:	add    BYTE PTR [rax],al
   14000b5c2:	(bad)  
   14000b5c3:	pop    rsp
   14000b5c4:	sbb    esp,DWORD PTR [rip+0xffffffffff7a172d]        # 0x13f7accf7
   14000b5ca:	(bad)  
   14000b5cb:	(bad)  
   14000b5cc:	(bad)  
   14000b5cd:	(bad)  
   14000b5ce:	(bad)  
   14000b5cf:	(bad)  
   14000b5d0:	(bad)  
   14000b5d1:	inc    DWORD PTR [rcx+0x17]
   14000b5d4:	(bad)  
   14000b5d5:	movsxd r9,DWORD PTR [r10]
   14000b5d8:	jne    0x14000b5e4
   14000b5da:	jne    0x14000b5e6
   14000b5dc:	add    BYTE PTR [rax],al
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	add    BYTE PTR [rax],al
   14000b5e2:	(bad)  
   14000b5e3:	ins    DWORD PTR es:[rdi],dx
   14000b5e4:	ss cs xor al,0x24
   14000b5e8:	jp     0x14000b5e9
   14000b5ea:	(bad)  
   14000b5eb:	(bad)  
   14000b5ec:	(bad)  
   14000b5ed:	(bad)  
   14000b5ee:	(bad)  
   14000b5ef:	dec    DWORD PTR [rdx+0x39162a40]
   14000b5f5:	movsxd r9,DWORD PTR [r10]
   14000b5f8:	jbe    0x14000b604
   14000b5fa:	jne    0x14000b606
   14000b5fc:	add    BYTE PTR [rax],al
   14000b5fe:	add    BYTE PTR [rax],al
   14000b600:	add    BYTE PTR [rax],al
   14000b602:	(bad)  
   14000b603:	ins    DWORD PTR es:[rdi],dx
   14000b604:	cmp    BYTE PTR [rip+0xffffffffff7a243c],ah        # 0x13f7ada46
   14000b60a:	(bad)  
   14000b60b:	(bad)  
   14000b60c:	(bad)  
   14000b60d:	(bad)  
   14000b60e:	(bad)  
   14000b60f:	jge    0x14000b63b
   14000b611:	(bad)  
   14000b612:	sub    dl,BYTE PTR [rdi]
   14000b614:	cmp    BYTE PTR [rcx+0x75],cl
   14000b617:	add    DWORD PTR [rbp+0xa],esi
   14000b61a:	jbe    0x14000b626
   14000b61c:	add    BYTE PTR [rax],al
   14000b61e:	add    BYTE PTR [rax],al
   14000b620:	add    BYTE PTR [rax],al
   14000b622:	(bad)  
   14000b623:	or     BYTE PTR [rax+0x2a],0x3c
   14000b627:	(bad)  
   14000b628:	jp     0x14000b629
   14000b62a:	(bad)  
   14000b62b:	(bad)  
   14000b62c:	dec    DWORD PTR [rdx+0x2a2a173d]
   14000b632:	sub    eax,0x754f4324
   14000b637:	or     dh,BYTE PTR [rax+0xa]
   14000b63a:	imul   ecx,DWORD PTR [rdx],0x0
   14000b640:	add    BYTE PTR [rax],al
   14000b642:	(bad)  
   14000b643:	ins    DWORD PTR es:[rdi],dx
   14000b644:	xor    DWORD PTR [rsi],0x33
   14000b647:	(bad)  
   14000b648:	jge    0x14000b649
   14000b64a:	(bad)  
   14000b64b:	(bad)  
   14000b64c:	jge    0x14000b67a
   14000b64e:	sub    ch,BYTE PTR [rbp*1+0x493b172d]
   14000b655:	(bad)  
   14000b656:	ja     0x14000b662
   14000b658:	jne    0x14000b664
   14000b65a:	jbe    0x14000b666
   14000b65c:	add    BYTE PTR [rax],al
   14000b65e:	add    BYTE PTR [rax],al
   14000b660:	add    BYTE PTR [rax],al
   14000b662:	(bad)  
   14000b663:	xchg   WORD PTR [rbp+0x27],ax
   14000b667:	rex.X dec DWORD PTR es:[rcx+0x30302f3f]
   14000b66f:	sub    eax,0x432b2b2d
   14000b674:	push   rcx
   14000b675:	js     0x14000b6ec
   14000b677:	add    DWORD PTR [rsi+0xa],esi
   14000b67a:	jne    0x14000b686
   14000b67c:	add    BYTE PTR [rax],al
   14000b67e:	add    BYTE PTR [rax],al
   14000b680:	add    BYTE PTR [rax],al
   14000b682:	(bad)  
   14000b683:	push   rdi
   14000b684:	test   BYTE PTR [rbp+0x43],ch
   14000b687:	xor    BYTE PTR [rcx],dh
   14000b689:	cmp    al,0x30
   14000b68b:	(bad)  
   14000b68c:	xor    al,0x30
   14000b68e:	xor    al,0x30
   14000b690:	sub    eax,0x7651472a
   14000b695:	js     0x14000b70e
   14000b697:	add    DWORD PTR [rbp+0xa],esi
   14000b69a:	jne    0x14000b6a6
   14000b69c:	add    BYTE PTR [rax],al
   14000b69e:	add    BYTE PTR [rax],al
   14000b6a0:	add    BYTE PTR [rax],al
   14000b6a2:	(bad)  
   14000b6a3:	pop    rbx
   14000b6a4:	test   DWORD PTR [rax+0x53],esi
   14000b6a7:	rex.XB sub BYTE PTR [rip+0x34343430],spl        # 0x17434eade
   14000b6ae:	xor    BYTE PTR [rax+rbp*1],ch
   14000b6b1:	rex.RXB
   14000b6b2:	imul   r14,QWORD PTR [r14+0x77],0xa760177
   14000b6ba:	jne    0x14000b6c6
   14000b6bc:	add    BYTE PTR [rax],al
   14000b6be:	add    BYTE PTR [rax],al
   14000b6c0:	add    BYTE PTR [rax],al
   14000b6c2:	(bad)  
   14000b6c3:	push   rdi
   14000b6c4:	test   DWORD PTR [rbp+0x5f],ebp
   14000b6c7:	jo     0x14000b70d
   14000b6c9:	and    esi,DWORD PTR [rdi]
   14000b6cb:	(bad)  
   14000b6cc:	and    al,0x27
   14000b6ce:	(bad)  
   14000b6cf:	cmp    BYTE PTR [rsi+0x51],al
   14000b6d2:	jo     0x14000b74c
   14000b6d4:	jne    0x14000b74d
   14000b6d6:	je     0x14000b6d9
   14000b6d8:	jne    0x14000b6e4
   14000b6da:	jbe    0x14000b6e6
   14000b6dc:	add    BYTE PTR [rax],al
   14000b6de:	add    BYTE PTR [rax],al
   14000b6e0:	add    BYTE PTR [rax],al
   14000b6e2:	(bad)  
   14000b6e3:	push   rdi
   14000b6e4:	and    DWORD PTR [rsi+0x54],0x70
   14000b6e8:	jo     0x14000b73e
   14000b6ea:	rex.WRXB
   14000b6eb:	rex.WRXB push r8
   14000b6ed:	rex.WRXB push r10
   14000b6ef:	push   rdi
   14000b6f0:	data16 jne 0x14000b76a
   14000b6f3:	jne    0x14000b769
   14000b6f5:	ja     0x14000b76b
   14000b6f7:	or     dh,BYTE PTR [rbp+0xa]
   14000b6fa:	jbe    0x14000b700
   14000b6fc:	add    BYTE PTR [rax],al
   14000b6fe:	add    BYTE PTR [rax],al
   14000b700:	add    BYTE PTR [rax],al
   14000b702:	(bad)  
   14000b703:	push   rdx
   14000b704:	(bad)  
   14000b705:	jo     0x14000b764
   14000b707:	imul   ebp,DWORD PTR [rcx+0x75],0x75757575
   14000b70e:	ja     0x14000b785
   14000b710:	js     0x14000b789
   14000b712:	ja     0x14000b78b
   14000b714:	ja     0x14000b78d
   14000b716:	js     0x14000b719
   14000b718:	rex.WRX or r9b,BYTE PTR [rax+r10*1]
   14000b71c:	add    BYTE PTR [rax],al
   14000b71e:	add    BYTE PTR [rax],al
   14000b720:	add    BYTE PTR [rax],al
   14000b722:	add    BYTE PTR [rcx],cl
   14000b724:	or     DWORD PTR [rsp+rcx*1],ecx
   14000b727:	or     al,0xc
   14000b729:	or     al,0x6
   14000b72b:	(bad)  
   14000b72c:	(bad)  
   14000b72d:	(bad)  
   14000b72e:	add    eax,0x3030505
   14000b733:	add    eax,DWORD PTR [rdx]
   14000b735:	add    al,BYTE PTR [rsi]
   14000b737:	or     al,0xc
	...
   14000b7dd:	add    BYTE PTR [rax],al
   14000b7df:	add    bh,bh
   14000b7e1:	(bad)  
   14000b7e2:	(bad)  
   14000b7e3:	(bad)  
   14000b7e4:	(bad)  
   14000b7e5:	(bad)  
   14000b7e6:	(bad)  
   14000b7e7:	(bad)  
   14000b7e8:	(bad)  
   14000b7e9:	inc    eax
   14000b7eb:	(bad)  
   14000b7ec:	inc    eax
   14000b7ee:	add    BYTE PTR [rdi],bh
   14000b7f0:	rol    BYTE PTR [rax],0x0
   14000b7f3:	xadd   BYTE PTR [rax],al
   14000b7f6:	add    BYTE PTR [rdi],cl
   14000b7f8:	rol    BYTE PTR [rax],0x0
   14000b7fb:	xadd   BYTE PTR [rax],al
   14000b7fe:	add    BYTE PTR [rdi],cl
   14000b800:	rol    BYTE PTR [rax],0x0
   14000b803:	xadd   BYTE PTR [rax],al
   14000b806:	add    BYTE PTR [rdi],cl
   14000b808:	rol    BYTE PTR [rax],0x0
   14000b80b:	xadd   BYTE PTR [rax],al
   14000b80e:	add    BYTE PTR [rdi],cl
   14000b810:	rol    BYTE PTR [rax],0x0
   14000b813:	xadd   BYTE PTR [rax],al
   14000b816:	add    BYTE PTR [rdi],cl
   14000b818:	rol    BYTE PTR [rax],0x0
   14000b81b:	xadd   BYTE PTR [rax],al
   14000b81e:	add    BYTE PTR [rdi],cl
   14000b820:	rol    BYTE PTR [rax],0x0
   14000b823:	xadd   BYTE PTR [rax],al
   14000b826:	add    BYTE PTR [rdi],cl
   14000b828:	rol    BYTE PTR [rax],0x0
   14000b82b:	xadd   BYTE PTR [rax],al
   14000b82e:	add    BYTE PTR [rdi],cl
   14000b830:	rol    BYTE PTR [rax],0x0
   14000b833:	xadd   BYTE PTR [rax],al
   14000b836:	add    BYTE PTR [rdi],cl
   14000b838:	rol    BYTE PTR [rax],0x0
   14000b83b:	xadd   BYTE PTR [rax],al
   14000b83e:	add    BYTE PTR [rdi],cl
   14000b840:	rol    BYTE PTR [rax],0x0
   14000b843:	xadd   BYTE PTR [rax],al
   14000b846:	add    BYTE PTR [rdi],cl
   14000b848:	loopne 0x14000b84a
   14000b84a:	add    BYTE PTR [rdi-0x1],bh
   14000b84d:	(bad)  
   14000b84e:	(bad)  
   14000b84f:	(bad)  
   14000b850:	(bad)  
   14000b851:	(bad)  
   14000b852:	(bad)  
   14000b853:	(bad)  
   14000b854:	(bad)  
   14000b855:	(bad)  
   14000b856:	(bad)  
   14000b857:	(bad)  
   14000b858:	(bad)  
   14000b859:	(bad)  
   14000b85a:	(bad)  
   14000b85b:	(bad)  
   14000b85c:	(bad)  
   14000b85d:	(bad)  
   14000b85e:	(bad)  
   14000b85f:	jmp    FWORD PTR [rax]
   14000b861:	add    BYTE PTR [rax],al
   14000b863:	add    BYTE PTR [rax],bl
   14000b865:	add    BYTE PTR [rax],al
   14000b867:	add    BYTE PTR [rax],dh
   14000b869:	add    BYTE PTR [rax],al
   14000b86b:	add    BYTE PTR [rcx],al
   14000b86d:	add    BYTE PTR [rax],cl
   14000b86f:	add    BYTE PTR [rax],al
   14000b871:	add    BYTE PTR [rax],al
   14000b873:	add    BYTE PTR [rax+0x2],al
	...
   14000b87e:	add    BYTE PTR [rax],al
   14000b880:	add    BYTE PTR [rcx],al
   14000b882:	add    BYTE PTR [rax],al
   14000b884:	add    BYTE PTR [rcx],al
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	add    BYTE PTR [rax],al
   14000b88a:	add    BYTE PTR [rax],al
   14000b88c:	mov    bh,0x96
   14000b88e:	push   rbx
   14000b88f:	add    BYTE PTR [rax-0x47ffab69],bh
   14000b895:	cwde   
   14000b896:	push   rsi
   14000b897:	add    BYTE PTR [rbp-0x45ffa264],bh
   14000b89d:	(bad)  
   14000b89e:	push   0x7aa4ba00
   14000b8a3:	add    dl,al
   14000b8a5:	lahf   
   14000b8a6:	ins    DWORD PTR es:[rdi],dx
   14000b8a7:	add    ah,al
   14000b8a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b8aa:	push   0x6fabca00
   14000b8af:	add    dh,al
   14000b8b1:	lods   al,BYTE PTR ds:[rsi]
   14000b8b2:	js     0x14000b8b4
   14000b8b4:	shr    BYTE PTR [rdi+0x3b000070],1
   14000b8ba:	inc    DWORD PTR [rax]
   14000b8bc:	add    BYTE PTR [rbp-0xa],al
   14000b8bf:	add    BYTE PTR [rax],cl
   14000b8c1:	pop    rax
   14000b8c2:	cli    
   14000b8c3:	add    BYTE PTR [rbx+riz*2],cl
   14000b8c6:	repnz add BYTE PTR [rdx],dl
   14000b8c9:	ins    BYTE PTR es:[rdi],dx
   14000b8ca:	cmc    
   14000b8cb:	add    BYTE PTR [rcx],bl
   14000b8cd:	push   0x7f0100f1
   14000b8d2:	hlt    
   14000b8d3:	add    BYTE PTR [rdx],cl
   14000b8d5:	jno    0x14000b8d0
   14000b8d7:	add    BYTE PTR [rip+0x1e00f678],dl        # 0x15e01af55
   14000b8dd:	jl     0x14000b8dd
   14000b8df:	add    BYTE PTR [rbx],ah
   14000b8e1:	push   0xffffffffffffffef
   14000b8e3:	add    BYTE PTR [rip+0x2500eb7f],dh        # 0x16501a468
   14000b8e9:	ins    DWORD PTR es:[rdi],dx
   14000b8ea:	icebp  
   14000b8eb:	add    BYTE PTR [rip+0x2a00f271],ah        # 0x16a01ab62
   14000b8f1:	je     0x14000b8e4
   14000b8f3:	add    BYTE PTR [rip+0x2b00f379],ah        # 0x16b01ac72
   14000b8f9:	jnp    0x14000b8ee
   14000b8fb:	add    BYTE PTR [rip+0x3700fd70],ah        # 0x17701b671
   14000b901:	jnp    0x14000b8f9
   14000b903:	add    BYTE PTR [rsp+rdx*4-0x54],bh
   14000b907:	add    BYTE PTR [rdx-0x78],ah
   14000b90a:	mov    ch,0x0
   14000b90c:	add    BYTE PTR [rbx-0x77ffff06],al
   14000b912:	inc    DWORD PTR [rax]
   14000b914:	or     al,0x8f
   14000b916:	inc    DWORD PTR [rax]
   14000b918:	adc    eax,DWORD PTR [rdx-0x78e3ff09]
   14000b91e:	std    
   14000b91f:	add    BYTE PTR [rdi],al
   14000b921:	xchg   ebp,eax
   14000b922:	inc    DWORD PTR [rax]
   14000b924:	sbb    eax,0x2c00ff93
   14000b929:	mov    esp,gs
   14000b92b:	add    BYTE PTR [rax],ah
   14000b92d:	xor    edi,0x0
   14000b930:	(bad)  
   14000b931:	xor    ch,0x0
   14000b934:	sub    DWORD PTR [rbp-0x75dcff0b],eax
   14000b93a:	test   BYTE PTR [rax],0x2a
   14000b93d:	mov    dh,dh
   14000b93f:	add    BYTE PTR [rax],ah
   14000b941:	mov    edi,edi
   14000b943:	add    BYTE PTR [rdx],ch
   14000b945:	(bad)  
   14000b946:	std    
   14000b947:	add    BYTE PTR [rbx],bh
   14000b949:	mov    dh,dh
   14000b94b:	add    BYTE PTR [rax+rdx*4],ch
   14000b94e:	test   DWORD PTR [rax],0xf69435
   14000b954:	rex.WRX xchg rcx,rax
   14000b956:	leave  
   14000b957:	add    BYTE PTR [rbp-0x6a],bl
   14000b95a:	(bad)
   14000b95d:	nop
   14000b95e:	xlat   BYTE PTR ds:[rbx]
   14000b95f:	add    BYTE PTR [rbp-0x6c],ch
   14000b962:	enter  0x4b00,0x85
   14000b966:	cmc    
   14000b967:	add    BYTE PTR [rax-0x71],dl
   14000b96a:	cmc    
   14000b96b:	add    BYTE PTR [rax-0x67],al
   14000b96e:	test   DWORD PTR [rax],0xf59a54
   14000b974:	gs (bad) 
   14000b976:	in     eax,dx
   14000b977:	add    BYTE PTR [rdi-0x5b],ah
   14000b97a:	test   DWORD PTR [rax],0x97958f
   14000b980:	test   eax,0x9d00839e
   14000b985:	movabs ds:0xb7af00b8a68c009a,eax
   14000b98e:	lods   al,BYTE PTR ds:[rsi]
   14000b98f:	add    bl,al
   14000b991:	scas   al,BYTE PTR es:[rdi]
   14000b992:	xchg   DWORD PTR [rax],eax
   14000b994:	iret   
   14000b995:	mov    ch,0x83
   14000b997:	add    cl,cl
   14000b999:	mov    bl,0x85
   14000b99b:	add    dl,cl
   14000b99d:	mov    ah,0x8a
   14000b99f:	add    ah,cl
   14000b9a1:	mov    dh,0x8d
   14000b9a3:	add    dh,cl
   14000b9a5:	mov    ecx,0xb8ca0092
   14000b9aa:	xchg   ebp,eax
   14000b9ab:	add    cl,dl
   14000b9ad:	mov    ebx,0xbcd10092
   14000b9b2:	xchg   esi,eax
   14000b9b3:	add    al,dl
   14000b9b5:	mov    ebp,0xc8cb0098
   14000b9ba:	cdq    
   14000b9bb:	add    ch,dl
   14000b9bd:	rcr    DWORD PTR [rax+rax*1+0x9cc5db],0xd4
   14000b9c5:	leave  
   14000b9c6:	cwde   
   14000b9c7:	add    ch,dl
   14000b9c9:	ret    
   14000b9ca:	movabs al,ds:0xa6c9dc00a3c6d800
   14000b9d3:	add    bl,bl
   14000b9d5:	retf   0xac
   14000b9d8:	int    0xd0
   14000b9da:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b9db:	add    dh,bl
   14000b9dd:	fldcw  WORD PTR [rdi-0x4f393300]
   14000b9e3:	add    ah,bl
   14000b9e5:	int    0xb1
   14000b9e7:	add    ch,bl
   14000b9e9:	sar    DWORD PTR [rcx-0x55321e00],1
   14000b9ef:	add    bh,ah
   14000b9f1:	shr    DWORD PTR [rbp-0x4f2f2000],1
   14000b9f7:	add    bl,ah
   14000b9f9:	shl    BYTE PTR [rbp-0x48291900],cl
   14000b9ff:	add    dl,ch
   14000ba01:	(bad)  
   14000ba02:	mov    dl,0x0
   14000ba04:	loopne 0x14000b9df
   14000ba06:	mov    ch,0x0
   14000ba08:	(bad)  
   14000ba09:	fdiv   DWORD PTR [rcx-0x49271500]
   14000ba0f:	add    ah,ch
   14000ba11:	(bad)  [rdi-0x432b1f00]
   14000ba17:	add    ch,ah
   14000ba19:	xlat   BYTE PTR ds:[rbx]
   14000ba1a:	mov    edi,0xbad8ea00
   14000ba1f:	add    ch,ch
   14000ba21:	fidivr DWORD PTR [rcx-0x46231300]
   14000ba27:	add    dh,ch
   14000ba29:	fstp   TBYTE PTR [rax+rax*1+0xbddeef]
   14000ba30:	(bad)  
   14000ba32:	mov    esi,0xe4a98d00
   14000ba37:	add    BYTE PTR [rsi-0x7aff1a4d],cl
   14000ba3d:	mov    eax,0xc0b500f8
   14000ba42:	int3   
   14000ba43:	add    BYTE PTR [rdx-0x5aff053c],dl
   14000ba49:	retf   0xf7
   14000ba4c:	mov    ah,0xd3
   14000ba4e:	cli    
   14000ba4f:	add    ch,ah
   14000ba51:	fcmovb st,st(4)
   14000ba53:	add    ch,dh
   14000ba55:	in     al,0xc1
   14000ba57:	add    ch,dh
   14000ba59:	in     al,0xc6
   14000ba5b:	add    al,bh
   14000ba5d:	out    0xc2,al
   14000ba5f:	add    bh,dh
   14000ba61:	out    0xc8,eax
   14000ba63:	add    cl,bh
   14000ba65:	jmp    0x122ebbb36
   14000ba6a:	rol    BYTE PTR [rax],cl
   14000ba6c:	out    dx,eax
   14000ba6d:	out    0xd7,al
   14000ba6f:	add    dh,ch
   14000ba71:	jmp    0x126f1bb4a
   14000ba76:	rol    BYTE PTR [rax],cl
   14000ba78:	icebp  
   14000ba79:	jmp    0x11bc3bb59
   14000ba7e:	cli    
   14000ba7f:	add    cl,bl
   14000ba81:	call   0x12dddbb82
   14000ba86:	std    
   14000ba87:	add    ah,dh
   14000ba89:	out    dx,al
   14000ba8a:	loop   0x14000ba8c
   14000ba8c:	out    0xf2,al
   14000ba8e:	inc    BYTE PTR [rax]
   14000ba90:	icebp  
   14000ba91:	idiv   ch
   14000ba93:	add    ah,dh
   14000ba95:	clc    
   14000ba96:	std    
   14000ba97:	add    al,bh
   14000ba99:	clc    
   14000ba9a:	clc    
   14000ba9b:	add    bl,bh
   14000ba9d:	cld    
   14000ba9e:	inc    BYTE PTR [rax]
   14000baa0:	(bad)  
   14000baa1:	(bad)  
   14000baa2:	inc    BYTE PTR [rax]
	...
   14000bc84:	(bad)  
   14000bc85:	(bad)  
   14000bc86:	inc    DWORD PTR [rax]
	...
   14000bc94:	add    BYTE PTR [rax],al
   14000bc96:	rex.WXB
   14000bc97:	rex.RXB
   14000bc98:	rex.RX
   14000bc99:	rex.RX
   14000bc9a:	add    BYTE PTR [rax],r8b
	...
   14000bca5:	add    BYTE PTR [rdx+0x47],cl
   14000bca8:	rex.WX
   14000bca9:	rex.WX
   14000bcaa:	rex.RX
   14000bcab:	rex.RX
   14000bcac:	rex.WX
   14000bcad:	rex.WB
   14000bcae:	rex.WX
   14000bcaf:	rex.WRB
   14000bcb0:	rex.WRB push r9
   14000bcb2:	pop    rbx
   14000bcb3:	add    al,0x8
   14000bcb5:	or     al,BYTE PTR [rax]
   14000bcb7:	add    BYTE PTR [rax],al
   14000bcb9:	rex.RXB
   14000bcba:	rex.RX
   14000bcbb:	rex.X
   14000bcbc:	rex.RX
   14000bcbd:	rex.RX
   14000bcbe:	rex.WX
   14000bcbf:	rex.WRX push rdi
   14000bcc1:	pop    rbx
   14000bcc2:	pop    rdi
   14000bcc3:	pop    rax
   14000bcc4:	push   rdx
   14000bcc5:	push   rbx
   14000bcc6:	pop    rbx
   14000bcc7:	push   rbx
   14000bcc8:	push   rdx
   14000bcc9:	push   rdx
   14000bcca:	pop    rbx
   14000bccb:	add    DWORD PTR [rcx+0x3],edx
   14000bcce:	(bad)  
   14000bccf:	add    BYTE PTR [rsi+0x63],cl
   14000bcd2:	jnp    0x14000bd37
   14000bcd4:	pop    rbx
   14000bcd5:	movsxd ebx,DWORD PTR [rdi+0x54]
   14000bcd8:	rex.B
   14000bcd9:	rex
   14000bcda:	rex
   14000bcdb:	push   r12
   14000bcdd:	rex.WRXB push r11
   14000bcdf:	pop    rcx
   14000bce0:	push   rdx
   14000bce1:	push   rdx
   14000bce2:	pop    rdx
   14000bce3:	add    DWORD PTR [rsi+0x1],esp
   14000bce6:	je     0x14000bceb
   14000bce8:	rex.WX movsxd rax,DWORD PTR [rax+0x6c6a5153]
   14000bcef:	sbb    eax,0xe0e0e0e
   14000bcf4:	(bad)  
   14000bcf5:	rex
   14000bcf6:	rex.WR push rbx
   14000bcf8:	pop    rdi
   14000bcf9:	pop    rbx
   14000bcfa:	pop    rbx
   14000bcfb:	add    esp,DWORD PTR [rsi+0x3]
   14000bcfe:	je     0x14000bd02
   14000bd00:	rex.WX pop rax
   14000bd02:	jnp    0x14000bd57
   14000bd04:	push   rsp
   14000bd05:	(bad)  
   14000bd06:	or     al,0xd
   14000bd08:	bndldx bnd3,[rax]
   14000bd0b:	(bad)  
   14000bd0c:	(bad)  
   14000bd0d:	(bad)  
   14000bd0e:	(bad)  
   14000bd0f:	rex.X push rdx
   14000bd11:	pop    rbp
   14000bd12:	data16 add ah,BYTE PTR [rsi+0x3]
   14000bd16:	jbe    0x14000bd1a
   14000bd18:	rex.WX pop rax
   14000bd1a:	jl     0x14000bd7b
   14000bd1c:	(bad)  
   14000bd1d:	or     eax,0xd18703b
   14000bd22:	(bad)  
   14000bd23:	sbb    bl,BYTE PTR [rdx]
   14000bd25:	(bad)  
   14000bd26:	(bad)  
   14000bd27:	(bad)  
   14000bd28:	(bad)  
   14000bd29:	push   rbx
   14000bd2a:	add    sp,WORD PTR [rsi+0x4]
   14000bd2e:	je     0x14000bd33
   14000bd30:	rex.WX pop rax
   14000bd32:	jp     0x14000bd9f
   14000bd34:	(bad)  
   14000bd35:	adc    BYTE PTR [rsi-0x1],bh
   14000bd38:	jle    0x14000bd76
   14000bd3a:	(bad)  
   14000bd3b:	nop    DWORD PTR [rdx]
   14000bd3e:	adc    DWORD PTR [rip+0x166461f],ebx        # 0x141670363
   14000bd44:	add    WORD PTR [rsi+0x2],si
   14000bd48:	rex.WX movsxd rbp,DWORD PTR [rdx+0x1d]
   14000bd4c:	nop    DWORD PTR [rsi-0x1]
   14000bd50:	(bad)  
   14000bd51:	(bad)  
   14000bd52:	jge    0x14000bd70
   14000bd54:	(bad)  
   14000bd55:	adc    DWORD PTR [rdx],ebx
   14000bd57:	adc    BYTE PTR [rsi],bl
   14000bd59:	rex.X push rdx
   14000bd5b:	add    esp,DWORD PTR [rsi+0x4]
   14000bd5e:	je     0x14000bd62
   14000bd60:	movsxd rbp,DWORD PTR [r14+0x13]
   14000bd64:	adc    al,0x1b
   14000bd66:	jle    0x14000bd67
   14000bd68:	(bad)  
   14000bd69:	(bad)  
   14000bd6a:	inc    DWORD PTR [rbx+0x190f0f6d]
   14000bd70:	adc    eax,0x6601513d
   14000bd75:	add    esi,DWORD PTR [rsi+0x2]
   14000bd78:	rex.WX movsxd rdi,DWORD PTR [rbx]
   14000bd7b:	adc    eax,0xff7e2a14
   14000bd80:	(bad)  
   14000bd81:	(bad)  
   14000bd82:	(bad)  
   14000bd83:	(bad)  
   14000bd84:	inc    DWORD PTR [rcx+0x1f150f38]
   14000bd8a:	rex.WRB add al,0x66
   14000bd8d:	add    esi,DWORD PTR [rsi+0x2]
   14000bd90:	rex.WX pop rax
   14000bd92:	xor    BYTE PTR [rdx],ch
   14000bd94:	adc    al,0x2a
   14000bd96:	jle    0x14000bd97
   14000bd98:	(bad)  
   14000bd99:	(bad)  
   14000bd9a:	(bad)  
   14000bd9b:	(bad)  
   14000bd9c:	(bad)  
   14000bd9d:	inc    DWORD PTR [rdx+0x4d201317]
   14000bda3:	add    DWORD PTR [rsi+0x4],esp
   14000bda6:	je     0x14000bdaa
   14000bda8:	rex.WX pop rbx
   14000bdaa:	xor    BYTE PTR [rip+0xffffffffff7e2b14],ah        # 0x13f7ee8c4
   14000bdb0:	(bad)  
   14000bdb1:	(bad)  
   14000bdb2:	(bad)  
   14000bdb3:	(bad)  
   14000bdb4:	(bad)  
   14000bdb5:	inc    DWORD PTR [rcx+0x4d201330]
   14000bdbb:	add    al,0x66
   14000bdbd:	add    DWORD PTR [rsi+0x2],esi
   14000bdc0:	rex.WX pop rax
   14000bdc2:	cmp    esp,DWORD PTR [rip+0xffffffffff7e2b14]        # 0x13f7ee8dc
   14000bdc8:	(bad)  
   14000bdc9:	(bad)  
   14000bdca:	(bad)  
   14000bdcb:	(bad)  
   14000bdcc:	(bad)  
   14000bdcd:	jge    0x14000bdff
   14000bdcf:	adc    al,0x2a
   14000bdd1:	(bad)  
   14000bdd2:	rex.WX add QWORD PTR [rsi+0x3],rsp
   14000bdd6:	jbe    0x14000bdda
   14000bdd8:	rex.WX movsxd rax,DWORD PTR [rax+0x2e]
   14000bddc:	and    al,0x2d
   14000bdde:	jle    0x14000bddf
   14000bde0:	(bad)  
   14000bde1:	(bad)  
   14000bde2:	inc    DWORD PTR [rcx+0x2414133c]
   14000bde8:	cs cmp eax,0x166044d
   14000bdee:	jbe    0x14000bdf2
   14000bdf0:	movsxd rdx,DWORD PTR [r14+0x25]
   14000bdf4:	and    al,0x28
   14000bdf6:	jle    0x14000bdf7
   14000bdf8:	(bad)  
   14000bdf9:	push   QWORD PTR [rcx+0x29]
   14000bdfc:	adc    ebp,DWORD PTR [rbx]
   14000bdfe:	sub    esp,DWORD PTR [rip+0x3590639]        # 0x14359c43d
   14000be04:	add    si,WORD PTR [rsi+0x2]
   14000be08:	rex.WX movsxd rdi,DWORD PTR [rax+0x36]
   14000be0c:	and    dh,BYTE PTR [rcx]
   14000be0e:	(bad)  
   14000be0f:	(bad)  
   14000be10:	jle    0x14000be4e
   14000be12:	adc    esp,DWORD PTR [rbp*1+0x3d272a2d]
   14000be19:	rex.RX je 0x14000be1d
   14000be1c:	data16 add al,0x74
   14000be1f:	add    ecx,DWORD PTR [rdx+0x58]
   14000be22:	jl     0x14000be6a
   14000be24:	and    esp,DWORD PTR [rbx]
   14000be26:	ins    DWORD PTR es:[rdi],dx
   14000be27:	outs   dx,DWORD PTR ds:[rsi]
   14000be28:	sub    eax,0x2d312c12
   14000be2d:	sub    eax,0x59053a23
   14000be32:	je     0x14000be37
   14000be34:	add    si,WORD PTR [rsi+0x2]
   14000be38:	rex.WB push r11
   14000be3a:	js     0x14000be93
   14000be3c:	and    ah,BYTE PTR ds:[rdx]
   14000be3f:	and    ch,BYTE PTR [rdx+rsi*1]
   14000be42:	xor    dh,BYTE PTR [rcx]
   14000be44:	(bad)  
   14000be45:	cmp    DWORD PTR es:[rsi],eax
   14000be48:	push   rbx
   14000be49:	imul   ax,WORD PTR [rbx],0x466
   14000be4e:	je     0x14000be53
   14000be50:	rex.RX push rdi
   14000be52:	js     0x14000bea7
   14000be54:	push   rcx
   14000be55:	rex.RXB xor eax,0x26262626
   14000be5b:	es (bad) 
   14000be5d:	ss rex.X pop rcx
   14000be60:	data16 add bp,WORD PTR gs:[rcx+0x3]
   14000be66:	jbe    0x14000be6a
   14000be68:	rex.WX push rbx
   14000be6a:	js     0x14000bebd
   14000be6c:	push   rdx
   14000be6d:	jb     0x14000bebd
   14000be6f:	rex.R
   14000be70:	rex xor esi,DWORD PTR [rdi+rdi*1]
   14000be74:	rex.RXB
   14000be75:	rex.WRX pop rbx
   14000be77:	data16 (bad) 
   14000be79:	pop    rbx
   14000be7a:	je     0x14000be7d
   14000be7c:	add    si,WORD PTR [rdi+0x2]
   14000be80:	rex.WX
   14000be81:	rex.WRB jnp 0x14000bedf
   14000be84:	push   rdx
   14000be85:	data16 (bad) 
   14000be87:	(bad)  
   14000be88:	(bad)  
   14000be89:	(bad)  
   14000be8a:	(bad)  
   14000be8b:	(bad)  
   14000be8c:	pop    rbp
   14000be8d:	imul   sp,WORD PTR [rsi+0x66],0x7466
   14000be93:	add    al,0x66
   14000be95:	or     BYTE PTR [rax+rax*1+0x0],al
   14000be99:	rex.X or ecx,DWORD PTR [rbx]
   14000be9c:	or     DWORD PTR [rbx],ecx
   14000be9e:	or     DWORD PTR [rcx],ecx
   14000bea0:	or     DWORD PTR [rcx],ecx
   14000bea2:	or     DWORD PTR [rbx],ecx
   14000bea4:	or     BYTE PTR [rax],cl
   14000bea6:	or     BYTE PTR [rax],cl
   14000bea8:	or     BYTE PTR [rax],cl
   14000beaa:	or     BYTE PTR [rdx],cl
	...
   14000bec8:	(bad)  
   14000bec9:	cld    
   14000beca:	(bad)  
   14000becb:	add    ah,bh
   14000becd:	add    BYTE PTR [rbx],al
   14000becf:	add    BYTE PTR [rax+0x100],al
	...
   14000bf1d:	add    BYTE PTR [rcx],al
   14000bf1f:	add    BYTE PTR [rax-0xfff100],al
   14000bf25:	(bad)  
   14000bf26:	inc    DWORD PTR [rax]
   14000bf28:	sub    BYTE PTR [rax],al
   14000bf2a:	add    BYTE PTR [rax],al
   14000bf2c:	adc    BYTE PTR [rax],al
   14000bf2e:	add    BYTE PTR [rax],al
   14000bf30:	and    BYTE PTR [rax],al
   14000bf32:	add    BYTE PTR [rax],al
   14000bf34:	add    DWORD PTR [rax],eax
   14000bf36:	or     BYTE PTR [rax],al
   14000bf38:	add    BYTE PTR [rax],al
   14000bf3a:	add    BYTE PTR [rax],al
   14000bf3c:	add    BYTE PTR [rcx],al
	...
   14000bf46:	add    BYTE PTR [rax],al
   14000bf48:	add    BYTE PTR [rcx],al
   14000bf4a:	add    BYTE PTR [rax],al
   14000bf4c:	add    BYTE PTR [rcx],al
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	add    BYTE PTR [rax],al
   14000bf52:	add    BYTE PTR [rax],al
   14000bf54:	leave  
   14000bf55:	cwde   
   14000bf56:	push   rbp
   14000bf57:	add    dl,cl
   14000bf59:	(bad)  
   14000bf5a:	pop    rax
   14000bf5b:	add    bl,cl
   14000bf5d:	sahf   
   14000bf5e:	pop    rdi
   14000bf5f:	add    dl,cl
   14000bf61:	stos   DWORD PTR es:[rdi],eax
   14000bf62:	outs   dx,DWORD PTR ds:[rsi]
   14000bf63:	add    dh,dl
   14000bf65:	mov    bl,0x6b
   14000bf67:	add    cl,dl
   14000bf69:	test   eax,0xafd00070
   14000bf6e:	jo     0x14000bf70
   14000bf70:	fstp   TBYTE PTR [rbx+0x7820007d]
   14000bf76:	retf   0x100
   14000bf79:	jns    0x14000bf63
   14000bf7b:	add    BYTE PTR [rcx],al
   14000bf7d:	jg     0x14000bf73
   14000bf7f:	add    BYTE PTR [rsp+rax*4-0x45],al
   14000bf83:	add    BYTE PTR [rdx],ah
   14000bf85:	adc    esi,0xfa830000
   14000bf8b:	add    BYTE PTR [rax],al
   14000bf8d:	mov    bh,bh
   14000bf8f:	add    BYTE PTR [rdi+rcx*4],cl
   14000bf92:	inc    DWORD PTR [rax]
   14000bf94:	(bad)  
   14000bf95:	xchg   edi,eax
   14000bf96:	inc    DWORD PTR [rax]
   14000bf98:	sub    al,0x8c
   14000bf9a:	in     al,dx
   14000bf9b:	add    BYTE PTR [rcx],dh
   14000bf9d:	mov    esp,edx
   14000bf9f:	add    BYTE PTR [rsi],bh
   14000bfa1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bfa2:	inc    DWORD PTR [rax]
   14000bfa4:	rex.WRX xchg rcx,rax
   14000bfa6:	leave  
   14000bfa7:	add    BYTE PTR [rbp-0x6a],bl
   14000bfaa:	(bad)
   14000bfad:	popf   
   14000bfae:	fild   DWORD PTR [rax]
   14000bfb0:	pop    rdi
   14000bfb1:	movabs eax,ds:0xa45e00d3a26d00d9
   14000bfba:	loope  0x14000bfbc
   14000bfbc:	push   rax
   14000bfbd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bfbe:	cli    
   14000bfbf:	add    BYTE PTR [rdi-0x62ff686b],cl
   14000bfc5:	movabs ds:0xbcd500acb7af009a,eax
   14000bfce:	mov    al,BYTE PTR [rax]
   14000bfd0:	loopne 0x14000bf92
   14000bfd2:	add    DWORD PTR [rax],0x8dc0e2
   14000bfd8:	out    0xc5,al
   14000bfda:	xchg   ebx,eax
   14000bfdb:	add    cl,ah
   14000bfdd:	enter  0xa3,0xe4
   14000bfe1:	retf   
   14000bfe2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bfe3:	add    dl,ah
   14000bfe5:	int    0xaa
   14000bfe7:	add    bh,ah
   14000bfe9:	shr    DWORD PTR [rbp-0x4d2a1600],1
   14000bfef:	add    bl,ch
   14000bff1:	fdiv   DWORD PTR [rsi-0x46251300]
   14000bff7:	add    dh,ch
   14000bff9:	fstp   TBYTE PTR [rax+rax*1+0xbfe2f3]
   14000c000:	cld    
   14000c001:	jrcxz  0x14000bfbf
   14000c003:	add    BYTE PTR [rdx-0x5bff053c],dl
   14000c009:	sar    ch,cl
   14000c00b:	add    bl,al
   14000c00d:	leave  
   14000c00e:	retf   0xf800
   14000c011:	out    0xc2,al
   14000c013:	add    bh,dh
   14000c015:	out    0xc8,eax
   14000c017:	add    cl,bh
   14000c019:	jmp    0x12efec0ea
   14000c01e:	(bad)  
   14000c01f:	add    ch,bl
   14000c021:	in     eax,dx
   14000c022:	std    
   14000c023:	add    dh,ah
   14000c025:	repnz inc BYTE PTR [rax]
	...
   14000c34c:	(bad)  
   14000c34d:	(bad)  
   14000c34e:	inc    DWORD PTR [rax]
   14000c350:	(bad)  
   14000c351:	add    al,BYTE PTR [rcx]
   14000c353:	add    DWORD PTR [rcx],eax
   14000c355:	add    DWORD PTR [rcx],eax
   14000c357:	add    DWORD PTR [rcx],eax
   14000c359:	add    DWORD PTR [rcx],eax
   14000c35b:	add    DWORD PTR [rcx],eax
   14000c35d:	add    DWORD PTR [rdx],eax
   14000c35f:	(bad)  
   14000c360:	add    ch,BYTE PTR [rdx]
   14000c362:	(bad)  
   14000c363:	es es and eax,0x24242424
   14000c36a:	and    al,0x24
   14000c36c:	and    al,0x24
   14000c36e:	(bad)  
   14000c36f:	add    al,BYTE PTR [rdx]
   14000c371:	sub    BYTE PTR [rcx],ah
   14000c373:	and    BYTE PTR [rax],cl
   14000c375:	sbb    eax,0xc0d0d15
   14000c37a:	sbb    eax,0x24070706
   14000c37f:	add    DWORD PTR [rcx],eax
   14000c381:	sub    ah,BYTE PTR [rcx]
   14000c383:	(bad)  
   14000c384:	adc    eax,0xe0e0e0b
   14000c389:	or     ecx,DWORD PTR [rdx]
   14000c38b:	or     al,0x4
   14000c38d:	(bad)  
   14000c38e:	and    al,0x1
   14000c390:	add    DWORD PTR [rdx],ebp
   14000c392:	and    dl,BYTE PTR [rsi]
   14000c394:	or     edx,DWORD PTR [rcx]
   14000c396:	adc    BYTE PTR cs:[rdi],cl
   14000c399:	pi2fw  mm1,QWORD PTR [rdx]
   14000c39d:	add    eax,0x31010124
   14000c3a2:	(bad)  
   14000c3a3:	or     ecx,DWORD PTR [rdi]
   14000c3a5:	adc    edi,edi
   14000c3a7:	xor    eax,0xf0f0f1b
   14000c3ac:	or     bl,BYTE PTR [rsp]
   14000c3af:	add    DWORD PTR [rcx],eax
   14000c3b1:	xor    edx,DWORD PTR [rdi]
   14000c3b3:	or     ecx,DWORD PTR [rdi]
   14000c3b5:	adc    edi,edi
   14000c3b7:	(bad)  
   14000c3b8:	jmp    FWORD PTR [rsi]
   14000c3ba:	adc    BYTE PTR [rdi],cl
   14000c3bc:	or     ecx,DWORD PTR [rsp]
   14000c3bf:	add    DWORD PTR [rcx],eax
   14000c3c1:	xor    edx,DWORD PTR [rbx]
   14000c3c3:	(bad)  
   14000c3c4:	movups xmm7,xmm7
   14000c3c7:	(bad)  
   14000c3c8:	(bad)  
   14000c3c9:	push   QWORD PTR [rsp+rdx*1]
   14000c3cc:	(bad)  
   14000c3cd:	or     DWORD PTR [rcx+rax*1],esp
   14000c3d0:	add    DWORD PTR [rbx],esi
   14000c3d2:	adc    ecx,DWORD PTR [rsi]
   14000c3d4:	movups xmm7,xmm7
   14000c3d7:	(bad)  
   14000c3d8:	(bad)  
   14000c3d9:	push   QWORD PTR [rsp+rdx*1]
   14000c3dc:	(bad)  
   14000c3dd:	or     DWORD PTR [rcx+rax*1],esp
   14000c3e0:	add    DWORD PTR [rbx],esi
   14000c3e2:	(bad)  
   14000c3e3:	(bad)  
   14000c3e4:	movups xmm7,xmm7
   14000c3e7:	(bad)  
   14000c3e8:	jmp    FWORD PTR [rip+0xc0b0f10]        # 0x14c0bd2fe
   14000c3ee:	and    al,0x1
   14000c3f0:	add    DWORD PTR [rbx],esi
   14000c3f2:	(bad)  
   14000c3f3:	or     ecx,DWORD PTR [rdi]
   14000c3f5:	adc    edi,edi
   14000c3f7:	xor    eax,0xf0f0f14
   14000c3fc:	or     bl,BYTE PTR [rip+0x33010125]        # 0x17301c527
   14000c402:	xor    BYTE PTR [rcx],bl
   14000c404:	or     edx,DWORD PTR [rcx]
   14000c406:	adc    BYTE PTR cs:[rdi],cl
   14000c409:	(bad)  
   14000c40a:	ud2    
   14000c40c:	(bad)  
   14000c40d:	or     BYTE PTR [rsi],ah
   14000c40f:	add    DWORD PTR [rcx],eax
   14000c411:	xor    ebp,DWORD PTR [rbx+rbp*1]
   14000c414:	sbb    cl,BYTE PTR [rbx]
   14000c416:	(bad)  
   14000c417:	(bad)  
   14000c418:	(bad)  
   14000c419:	(bad)  
   14000c41a:	or     edx,DWORD PTR [rip+0x126201f]        # 0x14126e43f
   14000c420:	add    DWORD PTR [rbx],esi
   14000c422:	sub    al,0x30
   14000c424:	sub    al,0x2f
   14000c426:	sbb    dl,BYTE PTR [rdx]
   14000c428:	adc    bl,BYTE PTR [rax]
   14000c42a:	(bad)  
   14000c42b:	and    ah,BYTE PTR [rcx]
   14000c42d:	and    DWORD PTR [rdi],esp
   14000c42f:	add    DWORD PTR [rdx],eax
   14000c431:	xor    esi,DWORD PTR [rbx]
   14000c433:	xor    esi,DWORD PTR [rbx]
   14000c435:	xor    esi,DWORD PTR [rbx]
   14000c437:	xor    esi,DWORD PTR [rbx]
   14000c439:	xor    esi,DWORD PTR [rdx]
   14000c43b:	sub    ch,BYTE PTR [rdx]
   14000c43d:	sub    BYTE PTR [rdx],ch
   14000c43f:	add    al,BYTE PTR [rsi]
   14000c441:	add    eax,DWORD PTR [rcx]
   14000c443:	add    DWORD PTR [rcx],eax
   14000c445:	add    DWORD PTR [rcx],eax
   14000c447:	add    DWORD PTR [rcx],eax
   14000c449:	add    DWORD PTR [rcx],eax
   14000c44b:	add    DWORD PTR [rcx],eax
   14000c44d:	add    DWORD PTR [rdx],eax
   14000c44f:	(bad)  
	...
   14000c490:	mov    DWORD PTR [rax+0x4e],edx
   14000c493:	rex.RXB or eax,0xa1a0a
   14000c499:	add    BYTE PTR [rax],al
   14000c49b:	or     eax,0x52444849
   14000c4a0:	add    BYTE PTR [rax],al
   14000c4a2:	add    DWORD PTR [rax],eax
   14000c4a4:	add    BYTE PTR [rax],al
   14000c4a6:	add    DWORD PTR [rax],eax
   14000c4a8:	or     BYTE PTR [rsi],al
   14000c4aa:	add    BYTE PTR [rax],al
   14000c4ac:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000c4b0:	data16 add BYTE PTR [rax],al
   14000c4b3:	and    BYTE PTR [rax],al
   14000c4b5:	rex.WB
   14000c4b6:	rex.R
   14000c4b7:	push   r12
   14000c4b9:	js     0x14000c457
   14000c4bb:	in     al,dx
   14000c4bc:	mov    ebp,0xd725b079
   14000c4c1:	jns    0x14000c4e2
   14000c4c3:	idiv   bl
   14000c4c5:	mov    esi,0xf7d77dd3
   14000c4ca:	fmulp  st(4),st
   14000c4cc:	fwait
   14000c4cd:	add    eax,0x1d8300cb
   14000c4d2:	and    BYTE PTR [rax],cl
   14000c4d4:	outs   dx,BYTE PTR ds:[rsi]
   14000c4d5:	and    cl,al
   14000c4d7:	adc    r8b,BYTE PTR [r9+0x51]
   14000c4db:	mov    ah,0x23
   14000c4dd:	mov    dl,BYTE PTR [rdx]
   14000c4df:	and    eax,0x5213a025
   14000c4e4:	mov    eax,ebp
   14000c4e6:	mov    BYTE PTR [rsi+0x4a],dl
   14000c4e9:	rex.WRX stos BYTE PTR es:[rdi],al
   14000c4eb:	loop   0x14000c537
   14000c4ed:	mov    ah,0x54
   14000c4ef:	test   eax,0x4a54ae52
   14000c4f4:	push   rsi
   14000c4f5:	and    eax,0x5b2594a9
   14000c4fa:	xchg   ecx,eax
   14000c4fb:	movabs ds:0xb15c64d94bcb6ca4,al
   14000c504:	rex.WR push rdi
   14000c506:	rex.WX mov fs,WORD PTR [rbx+r9*8]
   14000c50a:	xchg   edx,eax
   14000c50b:	gs xchg ecx,eax
   14000c50d:	or     al,0x17
   14000c50f:	and    BYTE PTR [rcx+rax*1],ah
   14000c512:	adc    BYTE PTR [rax+rax*8],al
   14000c515:	rol    DWORD PTR [rax],0x43
   14000c518:	(bad)  
   14000c519:	xor    BYTE PTR [rbx],cl
   14000c51b:	data16 jnp 0x14000c511
   14000c51e:	idiv   BYTE PTR [rbx-0x1a0c608b]
   14000c524:	(bad)  
   14000c525:	mov    bl,0xf4
   14000c527:	jmp    0x14fbc90ea
   14000c52c:	retf   
   14000c52d:	cmp    al,0xcc
   14000c52f:	rex.XB inc DWORD PTR [r8-0x112108c9]
   14000c536:	shl    DWORD PTR [rdi-0x20c160b1],cl
   14000c53c:	jp     0x14000c4fc
   14000c53e:	repz sbb eax,0x1a8d46a0
   14000c544:	xor    eax,0x51a8d46a
   14000c549:	movabs ds:0x51a8d46a351a8d46,eax
   14000c552:	movabs ds:0x51a8d46a351a8d46,eax
   14000c55b:	movabs ds:0x51a8d46a351a8d46,eax
   14000c564:	movabs ds:0x51a8d46a351a8d46,eax
   14000c56d:	movabs ds:0x51a8d46a351a8d46,eax
   14000c576:	movabs ds:0x51a8d46a351a8d46,eax
   14000c57f:	movabs ds:0x51a8d46a351a8d46,eax
   14000c588:	movabs ds:0x51a8d46a351a8d46,eax
   14000c591:	movabs ds:0x51a8d46a351a8d46,eax
   14000c59a:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5a3:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5ac:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5b5:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5be:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5c7:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5d0:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5d9:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5e2:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5eb:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5f4:	movabs ds:0x51a8d46a351a8d46,eax
   14000c5fd:	movabs ds:0x51a8d46a351a8d46,eax
   14000c606:	movabs ds:0x51a8d46a351a8d46,eax
   14000c60f:	movabs ds:0x51a8d46a351a8d46,eax
   14000c618:	movabs ds:0x51a8d46a351a8d46,eax
   14000c621:	movabs ds:0x51a8d46a351a8d46,eax
   14000c62a:	movabs ds:0x51a8d46a351a8d46,eax
   14000c633:	movabs ds:0x6a0375ed073d8d46,eax
   14000c63c:	pop    rsp
   14000c63d:	sbb    edi,DWORD PTR [rsi+rsi*8-0xd]
   14000c641:	(bad)  
   14000c643:	call   0x148405076
   14000c648:	loopne 0x14000c62a
   14000c64a:	pushf  
   14000c64b:	gs out dx,eax
   14000c64d:	jo     0x14000c6ce
   14000c64f:	repz loopne 0x14000c5f2
   14000c652:	stos   DWORD PTR es:[rdi],eax
   14000c653:	jnp    0x14000c671
   14000c655:	(bad)  
   14000c656:	add    BYTE PTR [rbx],dh
   14000c658:	add    al,0xb0
   14000c65b:	add    dl,BYTE PTR [rbx]
   14000c65d:	movabs al,ds:0x5be4924c5f14a098
   14000c666:	lea    esi,[rcx+rbx*8]
   14000c669:	xor    al,0x82
   14000c66b:	jrcxz  0x14000c66d
   14000c66d:	and    al,al
   14000c66f:	cmp    al,BYTE PTR [rdi+rcx*2]
   14000c672:	xor    eax,0xc7fdffc5
   14000c678:	outs   dx,DWORD PTR ds:[rsi]
   14000c679:	std    
   14000c67a:	neg    BYTE PTR [rdi+rsi*8+0x350131ae]
   14000c681:	add    edi,DWORD PTR [rax+0x15]
   14000c684:	js     0x14000c659
   14000c686:	adc    edx,ebx
   14000c688:	fwait
   14000c689:	sbb    al,0xad
   14000c68b:	test   cl,al
   14000c68d:	cmp    al,0x7d
   14000c68f:	call   0x15787c7c5
   14000c694:	fidivr DWORD PTR [rax+0x54c8d3d0]
   14000c69a:	mov    al,ch
   14000c69c:	push   rsi
   14000c69d:	mov    dl,BYTE PTR [rsi+0x32]
   14000c6a0:	mov    ecx,0xfbf2d1bc
   14000c6a5:	sbb    edx,DWORD PTR [rdi]
   14000c6a7:	iret   
   14000c6a8:	cld    
   14000c6a9:	xlat   BYTE PTR ds:[rbx]
   14000c6aa:	(bad)  
   14000c6ab:	(bad)  
   14000c6ac:	mov    edi,0x82accff
   14000c6b1:	and    al,BYTE PTR [rdx]
   14000c6b3:	adc    BYTE PTR [rcx+0x5e],al
   14000c6b6:	jl     0x14000c6b1
   14000c6b8:	gs jns 0x14000c65e
   14000c6bb:	fidivr DWORD PTR [rdi-0x2a136f61]
   14000c6c1:	lea    edi,[rdi]
   14000c6c3:	sti    
   14000c6c4:	stc    
   14000c6c5:	out    dx,eax
   14000c6c6:	clc    
   14000c6c7:	(bad)  
   14000c6c8:	cli    
   14000c6c9:	push   rcx
   14000c6ca:	add    BYTE PTR [rdx+0x311982],al
   14000c6d0:	adc    edx,DWORD PTR [rip+0x4d645f8d]        # 0x18d652663
   14000c6d6:	rex.WR movabs rbx,0xa1a7452772c22280
   14000c6e0:	add    BYTE PTR [rax],al
   14000c6e2:	add    al,0x1a
   14000c6e4:	movsxd edi,ecx
   14000c6e6:	mov    cl,BYTE PTR [rax]
   14000c6e8:	or     eax,0xb23c1c55
   14000c6ed:	(bad)  
   14000c6ee:	or     al,0x45
   14000c6f0:	enter  0x43fd,0x0
   14000c6f4:	push   rdx
   14000c6f5:	rex.RB out dx,al
   14000c6f7:	(bad)  
   14000c6f8:	or     DWORD PTR [rcx-0x16e3fbbf],0x45523636
   14000c702:	retf   0x5217
   14000c705:	add    BYTE PTR [rcx],dl
   14000c707:	pop    rcx
   14000c708:	and    DWORD PTR [rsi],ecx
   14000c70a:	adc    BYTE PTR [rax+0x42c0bffc],cl
   14000c710:	adc    ecx,0x60
   14000c713:	push   0xffffffffffffff83
   14000c715:	ins    BYTE PTR es:[rdi],dx
   14000c716:	cmp    eax,0xdebedd71
   14000c71b:	jo     0x14000c77c
   14000c71d:	sub    bl,bh
   14000c71f:	jg     0x14000c6d6
   14000c721:	scas   eax,DWORD PTR es:[rdi]
   14000c722:	mov    bh,0xbe
   14000c724:	jb     0x14000c6dc
   14000c726:	xlat   BYTE PTR ds:[rbx]
   14000c727:	pop    rbp
   14000c728:	jmp    0x130d19818
   14000c72d:	and    eax,0xb75ba7c1
   14000c732:	sbb    al,0xbf
   14000c734:	sbb    eax,eax
   14000c736:	pop    rdi
   14000c737:	add    ah,BYTE PTR [rax+0x8]
   14000c73a:	rcl    BYTE PTR [rax],1
   14000c73c:	in     al,0x77
   14000c73e:	(bad)  
   14000c73f:	mov    edi,0x1790034d
   14000c744:	iret   
   14000c745:	(bad)  
   14000c746:	mov    WORD PTR [rax+0x16],fs
   14000c749:	scas   al,BYTE PTR es:[rdi]
   14000c74a:	mov    ecx,0xe7a4e006
   14000c74f:	(bad)  
   14000c750:	add    bh,al
   14000c752:	imul   esi,DWORD PTR [rdi-0x38],0x4feed000
   14000c759:	mov    ecx,0x39828c63
   14000c75e:	mov    ebp,0x5694b469
   14000c763:	movabs ds:0xdffa847ea818b8a0,al
   14000c76c:	or     eax,0x35b24145
   14000c771:	adc    al,0xa3
   14000c773:	movabs eax,ds:0xfc3aa5445660d8d4
   14000c77c:	icebp  
   14000c77d:	(bad)
   14000c780:	and    al,BYTE PTR [rdx-0x6e]
   14000c783:	push   rax
   14000c784:	lahf   
   14000c785:	cdq    
   14000c786:	xor    al,0x13
   14000c788:	mov    BYTE PTR [rcx+rsi*4],bh
   14000c78b:	test   BYTE PTR [rdx],bh
   14000c78d:	in     al,dx
   14000c78e:	out    dx,eax
   14000c78f:	rex.X sub ax,0xa4c5
   14000c794:	sub    BYTE PTR [rax],dl
   14000c796:	cdq    
   14000c797:	sub    eax,0x9fb79713
   14000c79c:	adc    edi,DWORD PTR [rsi-0x39]
   14000c79f:	in     eax,0x2b
   14000c7a1:	xlat   BYTE PTR ds:[rbx]
   14000c7a2:	pop    rbx
   14000c7a3:	mov    ah,BYTE PTR [rbx+rbp*4+0x2dfcca20]
   14000c7aa:	std    
   14000c7ab:	stc    
   14000c7ac:	(bad)  
   14000c7ad:	ja     0x14000c7bf
   14000c7af:	xchg   esp,eax
   14000c7b0:	sub    ebx,DWORD PTR [rdi-0x17e5857d]
   14000c7b6:	rex.RB push r15
   14000c7b8:	xchg   DWORD PTR [rdx+0xbdc5fbe],esi
   14000c7be:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c7bf:	or     al,0xc8
   14000c7c1:	xchg   DWORD PTR [rdx],ebx
   14000c7c3:	fwait
   14000c7c4:	(bad)  
   14000c7c5:	sub    al,0xa2
   14000c7c7:	(bad)  
   14000c7c8:	add    al,0x40
   14000c7ca:	cmp    al,0x5f
   14000c7cc:	adc    BYTE PTR [rdx+0x21],ah
   14000c7cf:	loope  0x14000c79e
   14000c7d1:	or     al,0xeb
   14000c7d3:	rex.WXB or rax,0x72422b2c
   14000c7d9:	push   rbx
   14000c7da:	xchg   ebx,eax
   14000c7db:	out    dx,al
   14000c7dc:	push   0x7e3c2c2a
   14000c7e1:	mov    cl,0xaf
   14000c7e3:	lahf   
   14000c7e4:	pop    rbx
   14000c7e5:	sbb    DWORD PTR [rcx+0x5c000ab1],ebp
   14000c7eb:	cmp    bh,bh
   14000c7ed:	retf   0xa763
   14000c7f0:	rex.WRXB cmp rax,0x6cd575ff
   14000c7f6:	push   0xffffffffffffffb5
   14000c7f8:	jo     0x14000c7e2
   14000c7fa:	cwde   
   14000c7fb:	push   0x74
   14000c7fd:	xor    al,0x37
   14000c7ff:	pop    rdx
   14000c800:	rex.WXB xchg r12,rax
   14000c802:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c803:	(bad)  
   14000c804:	adc    ah,BYTE PTR [rbp-0x4abb2c6a]
   14000c80a:	sbb    ecx,DWORD PTR [rcx+0x1254caba]
   14000c810:	cs adc rax,0xffffffff83d6f57d
   14000c817:	lea    edi,[rdi-0xa]
   14000c81a:	retf   
   14000c81b:	(bad)  
   14000c81c:	cmp    BYTE PTR [rdx-0x7e],dh
   14000c81f:	mov    ah,dh
   14000c821:	hlt    
   14000c822:	mov    bh,0xbf
   14000c824:	(bad)  
   14000c825:	jno    0x14000c7f4
   14000c827:	mov    bl,ch
   14000c829:	mov    bl,0x9f
   14000c82b:	dec    esi
   14000c82d:	add    DWORD PTR [rax],eax
   14000c82f:	inc    DWORD PTR [rax+rax*8]
   14000c832:	and    eax,DWORD PTR [rax]
   14000c834:	test   BYTE PTR [rcx-0x2d888423],cl
   14000c83a:	lahf   
   14000c83b:	nop
   14000c83c:	add    edx,eax
   14000c83e:	adc    DWORD PTR [rcx+0x29],eax
   14000c841:	adc    al,0x0
   14000c844:	push   rdx
   14000c845:	(bad)
   14000c849:	stos   DWORD PTR es:[rdi],eax
   14000c84a:	push   rbx
   14000c84b:	rex.WXB and r13,rax
   14000c84e:	rex.XB clc 
   14000c850:	mov    ecx,DWORD PTR [rax-0x6c5f9e3f]
   14000c856:	xor    eax,0xb330012b
   14000c85b:	data16 movabs ds:0x8234c2d133ca553e,al
   14000c865:	cwde   
   14000c866:	cli    
   14000c867:	jnp    0x14000c8d3
   14000c869:	cdq    
   14000c86a:	(bad)  
   14000c86b:	loopne 0x14000c805
   14000c86d:	sub    DWORD PTR [rbx+0x52],ecx
   14000c870:	pop    rsi
   14000c871:	repz push rdx
   14000c873:	nop
   14000c874:	cdq    
   14000c875:	xor    al,0x11
   14000c877:	add    DWORD PTR [rsp+rdi*1+0x41],0x493c0897
   14000c87f:	(bad)  
   14000c880:	sbb    dl,BYTE PTR [rbx]
   14000c882:	lea    edi,[rbx+rdi*4+0x5c]
   14000c886:	adc    DWORD PTR [rsi-0x2b],esi
   14000c889:	add    dl,BYTE PTR [rax-0x2b33cc30]
   14000c88f:	and    esp,esi
   14000c891:	sahf   
   14000c892:	stos   DWORD PTR es:[rdi],eax
   14000c893:	add    eax,0x4962c224
   14000c898:	xchg   esp,eax
   14000c899:	movabs ds:0x880de21b9a0ff347,eax
   14000c8a2:	nop
   14000c8a3:	adc    al,cl
   14000c8a5:	add    BYTE PTR [rcx],cl
   14000c8a7:	mov    WORD PTR [rax-0x7e73527e],gs
   14000c8ad:	add    BYTE PTR [rax+0x4a041440],dl
   14000c8b3:	(bad)  
   14000c8b4:	(bad)  
   14000c8b5:	(bad)  
   14000c8b6:	(bad)  
   14000c8b7:	adc    bh,bl
   14000c8b9:	mov    eax,0xbbeca046
   14000c8be:	(bad)  
   14000c8bf:	cmp    al,0x96
   14000c8c1:	fdivr  DWORD PTR [rsi+0x12888660]
   14000c8c7:	pop    rbx
   14000c8c8:	mov    gs,WORD PTR [rbx+0x1100965]
   14000c8ce:	mov    BYTE PTR [rcx],cl
   14000c8d0:	and    BYTE PTR [rdx+0x22],ah
   14000c8d3:	mov    BYTE PTR [rbp+0x6],dh
   14000c8d6:	mov    BYTE PTR [rdi+0x60],bh
   14000c8d9:	loopne 0x14000c8c8
   14000c8db:	(bad)  
   14000c8dc:	clc    
   14000c8dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c8de:	mov    dh,0x42
   14000c8e0:	jrcxz  0x14000c931
   14000c8e2:	pop    rdi
   14000c8e3:	faddp  st(6),st
   14000c8e5:	and    BYTE PTR [rdi],dh
   14000c8e7:	push   rcx
   14000c8e8:	(bad)  
   14000c8e9:	fldcw  WORD PTR [rdi]
   14000c8eb:	jns    0x14000c883
   14000c8ed:	(bad)  
   14000c8ee:	jrcxz  0x14000c8c4
   14000c8f0:	mov    bl,0x48
   14000c8f2:	fwait
   14000c8f3:	rex.WRB xor al,0x9b
   14000c8f6:	or     ebp,DWORD PTR [rax-0x4c]
   14000c8f9:	fisttp DWORD PTR [rax+0x1b]
   14000c8fc:	rex.WRB jo 0x14000c922
   14000c8ff:	add    DWORD PTR [rcx],ebp
   14000c901:	test   DWORD PTR [rcx-0x5948c3da],eax
   14000c907:	xchg   ecx,eax
   14000c908:	sbb    eax,DWORD PTR [rcx+0x53]
   14000c90b:	jno    0x14000c8c5
   14000c90d:	mov    bh,0x38
   14000c90f:	add    eax,0xefc12173
   14000c914:	mov    esp,0xbfa3eafb
   14000c919:	div    BYTE PTR [rdi]
   14000c91b:	jg     0x14000c902
   14000c91d:	xchg   edi,eax
   14000c91e:	mov    bh,0x40
   14000c920:	and    al,0x10
   14000c922:	xor    DWORD PTR [rax+0xb],edi
   14000c925:	push   0x184d710
   14000c92a:	jl     0x14000c922
   14000c92c:	repz fistp QWORD PTR [rcx]
   14000c92f:	movabs al,ds:0x2b1db0903c9c27af
   14000c939:	and    eax,0x948a88c9
   14000c93e:	mov    ecx,esi
   14000c940:	adc    DWORD PTR [rcx],eax
   14000c942:	lea    eax,[rdi+rsi*4+0x56f299a]
   14000c949:	mov    dl,0x28
   14000c94b:	or     BYTE PTR [rsi+0x60134889],cl
   14000c951:	cld    
   14000c952:	xor    eax,0xb751e289
   14000c957:	(bad)  
   14000c958:	pop    rax
   14000c959:	and    eax,0xa8e10180
   14000c95e:	(bad)  
   14000c95f:	xor    al,bl
   14000c961:	push   rax
   14000c962:	rol    BYTE PTR [rbp+r11*4+0x4e],1
   14000c967:	mov    edx,0x20b298a1
   14000c96c:	jmp    0x1805ca5c1
   14000c971:	and    BYTE PTR [rdx],dl
   14000c973:	(bad)  
   14000c974:	cmp    edx,DWORD PTR [rax]
   14000c976:	mov    ecx,0x66bd2691
   14000c97b:	stos   BYTE PTR es:[rdi],al
   14000c97c:	(bad)  
   14000c97d:	(bad)  
   14000c97e:	out    0x33,eax
   14000c980:	and    cl,BYTE PTR [rsi-0x77735f98]
   14000c986:	and    bh,bl
   14000c988:	cmp    eax,0xb4ee33e6
   14000c98d:	fsub   st,st(3)
   14000c98f:	and    ch,BYTE PTR [rsp+rax*1+0x9]
   14000c993:	sub    al,0x31
   14000c995:	push   rsp
   14000c996:	loopne 0x14000c95f
   14000c998:	sbb    edx,DWORD PTR [rcx-0x517bb8ef]
   14000c99e:	(bad)  
   14000c99f:	push   rdx
   14000c9a0:	mov    cl,0x48
   14000c9a2:	jl     0x14000c936
   14000c9a4:	or     BYTE PTR [rbp+0x49911520],0x84
   14000c9ab:	sub    BYTE PTR [rcx-0x7bb7ed87],al
   14000c9b1:	adc    al,0x44
   14000c9b3:	enter  0x5ef2,0x44
   14000c9b7:	xchg   edx,eax
   14000c9b8:	sbb    eax,0x45049100
   14000c9bd:	lahf   
   14000c9be:	adc    BYTE PTR [rbx-0x54],cl
   14000c9c2:	xor    DWORD PTR [rcx+0x2f6d6e39],esp
   14000c9c8:	push   rsi
   14000c9c9:	add    al,0x36
   14000c9cb:	rex.X (bad) 
   14000c9cd:	xchg   ebp,eax
   14000c9ce:	add    dl,BYTE PTR [rax]
   14000c9d0:	mov    eax,0x84bb9f5c
   14000c9d5:	mov    esp,0x5cbe22ea
   14000c9da:	jl     0x14000ca27
   14000c9dc:	not    eax
   14000c9de:	sahf   
   14000c9df:	cdq    
   14000c9e0:	xchg   BYTE PTR [rbx+0x13e5812],al
   14000c9e6:	push   rax
   14000c9e7:	or     al,0xba
   14000c9e9:	outs   dx,DWORD PTR ds:[rsi]
   14000c9ea:	adc    ebx,ecx
   14000c9ec:	scas   eax,DWORD PTR es:[rdi]
   14000c9ed:	hlt    
   14000c9ee:	xor    bh,BYTE PTR [rdi+rdi*4]
   14000c9f1:	cmp    cl,BYTE PTR [rdx]
   14000c9f3:	lea    ecx,[rcx+rdx*4-0x2a1200c3]
   14000c9fa:	jbe    0x14000ca73
   14000c9fc:	cmp    bl,BYTE PTR [r13+0x581ee945]
   14000ca03:	nop
   14000ca04:	push   rsi
   14000ca05:	mov    ebx,0x5737218b
   14000ca0a:	movzx  edx,WORD PTR [rbx+0x56852d43]
   14000ca11:	sub    esp,DWORD PTR [rcx-0x21a16812]
   14000ca17:	ror    BYTE PTR [rdi+0x5d],cl
   14000ca1a:	sbb    ch,BYTE PTR [rcx+0x7be0a7d8]
   14000ca20:	mov    esp,0xfc7f87a1
   14000ca25:	ret    0xefc9
   14000ca28:	std    
   14000ca29:	fiadd  WORD PTR [rax-0x6e]
   14000ca2c:	and    DWORD PTR [rdi+0x1ced3ada],esi
   14000ca32:	int3   
   14000ca33:	sub    DWORD PTR [rcx-0x1c],ecx
   14000ca36:	mov    dil,0xc3
   14000ca39:	popf   
   14000ca3a:	rex.RX movabs ds:0x36d84e22289c1a16,al
   14000ca44:	ins    BYTE PTR es:[rdi],dx
   14000ca45:	fs (bad) 
   14000ca47:	sbb    al,0x6c
   14000ca49:	stos   DWORD PTR es:[rdi],eax
   14000ca4a:	(bad)  
   14000ca4b:	jg     0x14000ca46
   14000ca4d:	add    DWORD PTR [rdi+0x4f],0x12
   14000ca51:	push   rcx
   14000ca52:	mov    gs,ebx
   14000ca54:	adc    bh,dl
   14000ca56:	test   BYTE PTR [rcx],al
   14000ca58:	cld    
   14000ca59:	out    0x5f,eax
   14000ca5b:	clc    
   14000ca5c:	out    dx,al
   14000ca5d:	mov    edi,0x63e3706f
   14000ca62:	rex.WB
   14000ca63:	rex.X cmp BYTE PTR [rsi-0x58],sil
   14000ca67:	add    DWORD PTR [rsi-0x56],0xffffffd0
   14000ca6b:	outs   dx,BYTE PTR ds:[rsi]
   14000ca6c:	sub    DWORD PTR [rbx+0x12361e2a],edx
   14000ca72:	jne    0x14000ca2d
   14000ca74:	fisttp QWORD PTR [rax-0x32]
   14000ca77:	mov    ah,0xd2
   14000ca79:	in     al,0x6a
   14000ca7b:	(bad)  
   14000ca7c:	jo     0x14000cacd
   14000ca7e:	xor    DWORD PTR [rdi-0x439ae014],ecx
   14000ca84:	mov    ecx,DWORD PTR [rsi+0x15]
   14000ca87:	adc    DWORD PTR [rbp+0x3699248d],esp
   14000ca8d:	in     eax,dx
   14000ca8e:	sub    al,0xd7
   14000ca90:	fstp   QWORD PTR [rbx+rbx*4+0x6e]
   14000ca94:	cs push 0x1c549189
   14000ca9a:	and    esi,DWORD PTR [rax-0x7d]
   14000ca9d:	push   rcx
   14000ca9e:	cmp    al,0x41
   14000caa0:	cmp    esp,DWORD PTR [rdx+0x65]
   14000caa3:	and    ecx,DWORD PTR [rax]
   14000caa5:	add    al,0x41
   14000caa7:	and    BYTE PTR [rbx],bh
   14000caa9:	(bad)  
   14000caaa:	sbb    al,0xc9
   14000caac:	mov    DWORD PTR [rcx],edx
   14000caae:	add    eax,0x86958940
   14000cab3:	jo     0x14000cb2a
   14000cab5:	lea    esi,[rbp+0x1c]
   14000cab8:	pop    rcx
   14000cab9:	mov    cl,0x41
   14000cabb:	loop   0x14000cae2
   14000cabd:	pushf  
   14000cabe:	rex.R
   14000cabf:	or     BYTE PTR [r10+0x58807140],r8b
   14000cac6:	ret    0xc062
   14000cac9:	sub    al,BYTE PTR [rcx+rax*4]
   14000cacc:	and    al,BYTE PTR [rax+riz*1]
   14000cacf:	xchg   BYTE PTR [rax],dl
   14000cad1:	mov    ecx,0xc0b10836
   14000cad6:	rex
   14000cad7:	rex push 0xfffffffffffffffc
   14000cada:	jle    0x14000cafe
   14000cadc:	add    BYTE PTR [rbx],bl
   14000cade:	(bad)  
   14000cadf:	fstp   QWORD PTR [rax+0x4]
   14000cae2:	retf   0xc840
   14000cae5:	xor    DWORD PTR [rdi-0x5761a7c0],ebx
   14000caeb:	mov    BYTE PTR [rdx],cl
   14000caed:	(bad)  
   14000caee:	or     eax,DWORD PTR [rcx+0x5513420]
   14000caf4:	adc    BYTE PTR [rdx],ah
   14000caf6:	sub    bh,BYTE PTR [rax-0x19dfabae]
   14000cafc:	xor    WORD PTR [rax],0x6209
   14000cb01:	ins    DWORD PTR es:[rdi],dx
   14000cb02:	div    DWORD PTR [rdx+0x55]
   14000cb05:	mov    esi,0x6febac
   14000cb0a:	xor    BYTE PTR [rsi-0x65],bl
   14000cb0d:	sub    DWORD PTR [rbp+0x1b],edx
   14000cb10:	xlat   BYTE PTR ds:[rbx]
   14000cb11:	rex.WRXB cmp BYTE PTR [r13+0xc],0x7f
   14000cb16:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cb17:	adc    BYTE PTR [rsi+rdi*4-0x16594e28],bh
   14000cb1e:	jbe    0x14000cb73
   14000cb20:	imul   edi,DWORD PTR [rip+0x32ac32b3],0x93c00010        # 0x172acfddd
   14000cb2a:	rex.WRXB popf 
   14000cb2c:	cmp    BYTE PTR [rdi],bh
   14000cb2e:	(bad)  
   14000cb30:	pop    rdx
   14000cb31:	ins    DWORD PTR es:[rdi],dx
   14000cb32:	(bad)  
   14000cb33:	(bad)  
   14000cb34:	shr    ch,1
   14000cb36:	vpaddusw ymm11,ymm11,YMMWORD PTR [rcx+0x5c]
   14000cb3b:	xor    cl,BYTE PTR [rbp-0x6c67a892]
   14000cb41:	push   rsp
   14000cb42:	add    BYTE PTR [rsi-0x10b8fe83],bh
   14000cb48:	call   0x16fc89d1d
   14000cb4d:	or     eax,0x6195b9e4
   14000cb52:	add    bl,BYTE PTR [rax-0x2b]
   14000cb55:	and    eax,DWORD PTR [rsi-0x42]
   14000cb58:	jbe    0x14000cb5b
   14000cb5a:	jmp    0x14000cbd9
   14000cb5c:	or     eax,0x6d2168d5
   14000cb61:	xor    al,0xa1
   14000cb63:	sbb    ch,BYTE PTR [rcx]
   14000cb65:	xchg   esp,eax
   14000cb66:	rex.WX mov al,0x36
   14000cb69:	adc    ch,BYTE PTR [rbp+riz*2+0x6]
   14000cb6d:	or     ebp,DWORD PTR [rcx]
   14000cb6f:	rex.XB push r13
   14000cb71:	fdiv   DWORD PTR [rsi+0x53]
   14000cb74:	shr    edi,1
   14000cb76:	dec    eax
   14000cb78:	popf   
   14000cb79:	or     edi,DWORD PTR [rdi+0x1cf793fa]
   14000cb7f:	cmp    BYTE PTR [rip+0x6e6fa5de],bh        # 0x1ae707163
   14000cb85:	mov    esp,0x9fc04ee1
   14000cb8a:	sti    
   14000cb8b:	ret    0x9fd3
   14000cb8e:	rex.WRX cmp bpl,r15b
   14000cb91:	fadd   st,st(1)
   14000cb93:	outs   dx,BYTE PTR ds:[rsi]
   14000cb94:	mov    ah,bl
   14000cb96:	(bad)  
   14000cb97:	sub    eax,0x7fd07140
   14000cb9c:	mov    bl,0x46
   14000cb9e:	movabs ds:0x7a669d4be99a772e,al
   14000cba7:	test   eax,0x512b78a1
   14000cbac:	cmp    al,0x62
   14000cbae:	and    cl,BYTE PTR [rbp+0x44]
   14000cbb1:	(bad)  
   14000cbb2:	gs out 0xdf,eax
   14000cbb5:	rex.WR sbb BYTE PTR [rbx-0x4],r9b
   14000cbb9:	lea    edx,[rcx-0x6a]
   14000cbbc:	(bad)  
   14000cbbd:	cmc    
   14000cbbe:	xor    edi,DWORD PTR [rbp+0x78]
   14000cbc1:	xchg   esp,eax
   14000cbc2:	jmp    0x14000cc07
   14000cbc4:	fcmove st,st(0)
   14000cbc6:	movabs ds:0xcd04c1692b12d231,al
   14000cbcf:	rex.WR (bad) 
   14000cbd1:	jbe    0x14000cc03
   14000cbd3:	mov    edx,0xa44589ea
   14000cbd8:	cld    
   14000cbd9:	cmp    bh,ch
   14000cbdb:	shl    ch,0xda
   14000cbde:	movabs eax,ds:0x9304e146bc6cc21d
   14000cbe7:	rex.W rol BYTE PTR [rdx-0x5e],1
   14000cbeb:	jbe    0x14000cc3f
   14000cbed:	rex.WR ja 0x14000cc35
   14000cbf0:	test   DWORD PTR [rsi+0x27572216],ebp
   14000cbf6:	pop    rbx
   14000cbf7:	adc    eax,0x8580faba
   14000cbfc:	(bad)
   14000cc01:	lea    ecx,[rax]
   14000cc03:	mov    bl,0xf5
   14000cc05:	ins    DWORD PTR es:[rdi],dx
   14000cc06:	xchg   ebp,eax
   14000cc07:	in     eax,0x2a
   14000cc09:	adc    DWORD PTR [rcx],ecx
   14000cc0b:	push   rdi
   14000cc0c:	xchg   esp,eax
   14000cc0d:	jae    0x14000cbf6
   14000cc0f:	add    dl,BYTE PTR [rdi]
   14000cc11:	fbstp  TBYTE PTR [rbp-0x6a]
   14000cc14:	xchg   DWORD PTR [rcx-0xb69136b],edx
   14000cc1a:	and    al,0xe6
   14000cc1c:	rex.XB (bad) 
   14000cc1e:	sti    
   14000cc1f:	rex.RX mov bpl,0xfb
   14000cc22:	(bad)
   14000cc26:	cld    
   14000cc27:	cmp    eax,0x3c1265c2
   14000cc2c:	adc    BYTE PTR [rsi-0x3a5eb739],dl
   14000cc32:	(bad)  
   14000cc33:	hlt    
   14000cc34:	xor    eax,0x8904c5a6
   14000cc39:	out    dx,eax
   14000cc3a:	(bad)  
   14000cc3b:	out    dx,al
   14000cc3c:	stc    
   14000cc3d:	mov    al,BYTE PTR [rdi*2-0x51a7ab60]
   14000cc44:	xchg   ax,ax
   14000cc46:	rex.XB sub eax,0x552d83a2
   14000cc4c:	and    bh,BYTE PTR [rdi+rbp*4+0x27]
   14000cc50:	mov    ah,0x12
   14000cc52:	mov    ch,0x20
   14000cc54:	lea    eax,[rcx+rbp*4]
   14000cc57:	(bad)  
   14000cc58:	imul   ebp,DWORD PTR [rax],0xa6450d32
   14000cc5e:	popf   
   14000cc5f:	sub    BYTE PTR [rax],dh
   14000cc61:	sub    esp,DWORD PTR [rip+0xfa97422]        # 0x14faa4089
   14000cc67:	rol    DWORD PTR [rdx-0x2322f04b],1
   14000cc6d:	ds jl  0x14000ccd1
   14000cc70:	cmp    eax,DWORD PTR [rbx+0x2371641f]
   14000cc76:	outs   dx,DWORD PTR ds:[rsi]
   14000cc77:	cmp    DWORD PTR [rsi+0x3ade8588],esi
   14000cc7d:	cmp    cl,BYTE PTR [rbx+0x16dd8b0a]
   14000cc83:	mov    dl,0xa4
   14000cc85:	mov    ch,0xbe
   14000cc87:	fsubr  QWORD PTR [rbp+0x77]
   14000cc8a:	sbb    cl,BYTE PTR [rcx]
   14000cc8c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cc8d:	sub    eax,DWORD PTR [rbx+0x3cfff07c]
   14000cc93:	mov    edi,0x82ea1ad9
   14000cc98:	icebp  
   14000cc99:	mov    eax,0xd5fd3f6b
   14000cc9e:	rcr    ebx,cl
   14000cca0:	out    dx,eax
   14000cca1:	cli    
   14000cca2:	xchg   ebx,eax
   14000cca3:	out    dx,eax
   14000cca4:	outs   dx,DWORD PTR ds:[rsi]
   14000cca5:	jl     0x14000cc99
   14000cca7:	adc    esi,DWORD PTR [rdi+0x2d]
   14000ccaa:	mov    ebp,0xdecfb138
   14000ccaf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ccb0:	js     0x14000cc75
   14000ccb2:	sbb    DWORD PTR [rax-0x56e40a9e],eax
   14000ccb8:	movabs ds:0x4cdfa98a3003f112,al
   14000ccc1:	xchg   edx,eax
   14000ccc2:	rex.WXB int 0x54
   14000ccc5:	lods   eax,DWORD PTR ds:[rsi]
   14000ccc6:	xor    eax,0x89a76f14
   14000cccb:	sbb    dh,BYTE PTR [rdx+0x1998c275]
   14000ccd1:	(bad)  
   14000ccd2:	lea    eax,[rcx+0x0]
   14000ccd5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ccd6:	lea    esi,[rsi+rax*4]
   14000ccd9:	movabs ds:0xe6641a6fcb3f60fc,eax
   14000cce2:	and    esi,DWORD PTR es:[rdx+0x10]
   14000cce6:	(bad)  
   14000cce7:	sub    eax,0x80222930
   14000ccec:	mov    DWORD PTR [rsi+0x44],eax
   14000ccef:	sbb    BYTE PTR [rcx],ch
   14000ccf1:	movabs ds:0x94c02c7191d27591,al
   14000ccfa:	out    dx,al
   14000ccfb:	out    0xc8,eax
   14000ccfd:	mov    WORD PTR [rcx],es
   14000ccff:	add    esp,DWORD PTR [rsi]
   14000cd01:	movsxd ebp,DWORD PTR [rip+0x2c010176]        # 0x16c01ce7d
   14000cd07:	(bad)  
   14000cd08:	rex.WX ins DWORD PTR es:[rdi],dx
   14000cd0a:	xor    DWORD PTR [rbp-0x48653a9b],0x4e35655e
   14000cd14:	pop    rbp
   14000cd15:	test   BYTE PTR [rcx+rsi*1-0x5637433a],0xb5
   14000cd1d:	sub    BYTE PTR [rsi-0x6a],cl
   14000cd20:	(bad)  
   14000cd21:	imul   ebx,edi,0x0
   14000cd24:	stos   DWORD PTR es:[rdi],eax
   14000cd25:	(bad)  
   14000cd26:	or     ebx,DWORD PTR [rcx-0x77]
   14000cd29:	leave  
   14000cd2a:	push   rsi
   14000cd2b:	std    
   14000cd2c:	(bad)  
   14000cd2d:	lahf   
   14000cd2e:	xor    esp,DWORD PTR [rbx]
   14000cd30:	rex.WRXB ja 0x14000ccd4
   14000cd33:	and    eax,DWORD PTR [rbx+rax*4+0x3dd4a3c3]
   14000cd3a:	xchg   ecx,eax
   14000cd3b:	rex.R mov sil,0xbf
   14000cd3e:	(bad)  
   14000cd3f:	jns    0x14000cda3
   14000cd41:	jg     0x14000cd84
   14000cd43:	or     al,BYTE PTR [rsi-0x36a26fa8]
   14000cd49:	in     al,dx
   14000cd4a:	and    BYTE PTR [rdi],ch
   14000cd4c:	xchg   edx,eax
   14000cd4d:	sub    DWORD PTR [rsp+rdx*1+0x3f],ebx
   14000cd51:	sbb    esp,eax
   14000cd53:	xor    edi,DWORD PTR [rsi+rcx*1]
   14000cd56:	xor    al,0x5c
   14000cd58:	fadd   QWORD PTR [rcx-0x5e]
   14000cd5b:	pop    rdx
   14000cd5c:	(bad)  
   14000cd5d:	mov    ch,0xa2
   14000cd5f:	movabs ds:0x1b4575c5400e2277,al
   14000cd68:	add    DWORD PTR [rsi+0x16],esp
   14000cd6b:	shl    BYTE PTR [rax+0x4be64c99],0x49
   14000cd72:	ret    0x253a
   14000cd75:	fs or  eax,0x2640ad26
   14000cd7b:	and    DWORD PTR [rsi],esi
   14000cd7d:	mov    bl,BYTE PTR [rax+0x12]
   14000cd80:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cd81:	ret    0x6da3
   14000cd84:	push   0x48
   14000cd86:	pop    rdi
   14000cd87:	out    0xdd,eax
   14000cd89:	mov    ebx,0x8bad9b97
   14000cd8e:	mov    ebp,0x6fab3ddc
   14000cd93:	mov    BYTE PTR [rax-0x68],ah
   14000cd96:	(bad)  
   14000cd97:	scas   eax,DWORD PTR es:[rdi]
   14000cd98:	ds dec ah
   14000cd9b:	test   eax,0x2d2ee83f
   14000cda0:	movhps QWORD PTR [rdi],xmm1
   14000cda3:	fnstsw WORD PTR [rax]
   14000cda5:	pop    rax
   14000cda6:	cmp    bh,BYTE PTR [rdx+0x74]
   14000cda9:	fmul   st,st(5)
   14000cdab:	xchg   ebx,eax
   14000cdac:	ins    BYTE PTR es:[rdi],dx
   14000cdad:	test   eax,0xd2de2c9d
   14000cdb2:	in     al,0xf
   14000cdb4:	std    
   14000cdb5:	cld    
   14000cdb6:	mov    ebx,0xfe07f97
   14000cdbb:	rex.WRX ins DWORD PTR es:[rdi],dx
   14000cdbd:	(bad)  
   14000cdbe:	xlat   BYTE PTR ds:[rbx]
   14000cdbf:	sti    
   14000cdc0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cdc1:	imul   ebp,DWORD PTR [rdi-0x120550f8],0xfc1e5ecf
   14000cdcb:	iret   
   14000cdcc:	and    dh,dl
   14000cdce:	fldpi  
   14000cdd0:	leave  
   14000cdd1:	cdq    
   14000cdd2:	clc    
   14000cdd3:	xchg   BYTE PTR [rbx],dh
   14000cdd5:	add    BYTE PTR [rdx],al
   14000cdd7:	fbstp  TBYTE PTR [rsi-0x14]
   14000cdda:	jo     0x14000ce03
   14000cddc:	es jle 0x14000cdef
   14000cddf:	enter  0xa830,0xa7
   14000cde3:	adc    al,0xf5
   14000cde5:	push   rdx
   14000cde6:	(bad)  
   14000cde9:	pushf  
   14000cdea:	push   rcx
   14000cdeb:	xchg   ebp,eax
   14000cdec:	sbb    bh,ah
   14000cdee:	lods   al,BYTE PTR ds:[rsi]
   14000cdef:	pop    rsi
   14000cdf0:	cmp    bl,r9b
   14000cdf3:	jne    0x14000cdac
   14000cdf5:	lahf   
   14000cdf6:	jmp    0x14000ce13
   14000cdf8:	rex.RX cdq 
   14000cdfa:	cmp    DWORD PTR [rsi],esp
   14000cdfc:	and    al,BYTE PTR [rdi+0xa4da889]
   14000ce02:	mov    cl,BYTE PTR [rcx+0x130d330c]
   14000ce08:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ce09:	(bad)  
   14000ce0a:	movabs ds:0x270c35e446999b78,al
   14000ce13:	lods   al,BYTE PTR ds:[rsi]
   14000ce14:	fld    DWORD PTR es:[rax+0x4e]
   14000ce18:	stos   BYTE PTR es:[rdi],al
   14000ce19:	jnp    0x14000ce22
   14000ce1b:	and    eax,0x53d9b58b
   14000ce20:	ins    DWORD PTR es:[rdi],dx
   14000ce21:	rex.WR retf 
   14000ce23:	or     BYTE PTR [rcx+rdx*1+0x71208869],dl
   14000ce2a:	stos   BYTE PTR es:[rdi],al
   14000ce2b:	jne    0x14000ce4e
   14000ce2d:	hlt    
   14000ce2e:	mov    esp,0x23408ae9
   14000ce33:	adc    eax,0x65956046
   14000ce38:	sub    eax,ecx
   14000ce3a:	sub    DWORD PTR [rax+0x2],0xffffffb3
   14000ce3e:	add    BYTE PTR [rdx+0x6d],ah
   14000ce41:	mov    ebx,0xca889de4
   14000ce46:	(bad)  
   14000ce47:	fimul  DWORD PTR [rcx+0x4bf8292e]
   14000ce4d:	and    DWORD PTR [rsi+0xf2bcba3],ecx
   14000ce53:	jmp    0x14000ce5e
   14000ce55:	sub    esi,DWORD PTR [rdx]
   14000ce57:	jnp    0x14000ce7d
   14000ce59:	lock xor DWORD PTR [rdx-0x45],0x6b1d97c4
   14000ce61:	movabs eax,ds:0x68cd381009a9666f
   14000ce6a:	push   rdx
   14000ce6b:	inc    DWORD PTR [rsi-0x69]
   14000ce6e:	mov    ecx,0xa3b7b37e
   14000ce73:	jo     0x14000ce50
   14000ce75:	leave  
   14000ce76:	push   rdi
   14000ce77:	adc    DWORD PTR [rdx+rcx*1+0x0],ecx
   14000ce7b:	and    ebp,DWORD PTR [rbp-0x3a]
   14000ce7e:	push   rsp
   14000ce7f:	ja     0x14000ce81
   14000ce81:	xor    BYTE PTR [rsi+0x6],al
   14000ce84:	rex.X mov spl,0x2d
   14000ce87:	rex.R (bad) 
   14000ce89:	or     BYTE PTR [rsi],al
   14000ce8b:	and    al,0x1a
   14000ce8d:	(bad)  
   14000ce8e:	(bad)  
   14000ce8f:	cwde   
   14000ce90:	movsxd eax,DWORD PTR [rsi+0x75191b24]
   14000ce96:	outs   dx,DWORD PTR ds:[rsi]
   14000ce97:	ins    BYTE PTR es:[rdi],dx
   14000ce98:	stos   DWORD PTR es:[rdi],eax
   14000ce99:	pop    rbx
   14000ce9a:	rex.RXB (bad) 
   14000ce9c:	xchg   ebx,eax
   14000ce9d:	jge    0x14000ce40
   14000ce9f:	add    eax,0x34d1a624
   14000cea4:	jns    0x14000ce74
   14000cea6:	cmp    cl,bh
   14000cea8:	cmp    BYTE PTR [rbx],bl
   14000ceaa:	cmc    
   14000ceab:	push   rbp
   14000ceac:	ficomp WORD PTR [rdi]
   14000ceae:	mov    al,0xe9
   14000ceb0:	out    0xd4,al
   14000ceb2:	ror    DWORD PTR [rbp-0x7284180b],cl
   14000ceb8:	(bad)  
   14000ceb9:	mov    ebp,0x7e0d9dbb
   14000cebe:	repnz scas al,BYTE PTR es:[rdi]
   14000cec0:	(bad)
   14000cec3:	jrcxz  0x14000cedc
   14000cec5:	mov    bh,0x90
   14000cec7:	push   rbp
   14000cec8:	scas   al,BYTE PTR es:[rdi]
   14000cec9:	xlat   BYTE PTR ds:[rbx]
   14000ceca:	(bad)  
   14000cecb:	lahf   
   14000cecc:	add    dh,BYTE PTR [rax+0x18]
   14000cecf:	shl    BYTE PTR [rbp+0x66fd8f59],0xc2
   14000ced6:	sbb    ecx,edx
   14000ced8:	add    dh,bh
   14000ceda:	mov    edi,DWORD PTR [rdi-0x2]
   14000cedd:	fadd   QWORD PTR [rdi+0x1]
   14000cee0:	(bad)  
   14000cee1:	movabs eax,ds:0x698a6533094f569b
   14000ceea:	enter  0x23c4,0xe7
   14000ceee:	and    edi,ebx
   14000cef0:	xor    eax,0xce1114d7
   14000cef5:	mov    ch,0x69
   14000cef7:	(bad)  
   14000cef8:	jae    0x14000cf6d
   14000cefa:	and    bl,cl
   14000cefc:	int    0x51
   14000cefe:	sub    eax,0x1d088872
   14000cf03:	push   dx
   14000cf05:	rex.R and al,0xcc
   14000cf08:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cf09:	adc    esp,esi
   14000cf0b:	jle    0x14000cf30
   14000cf0d:	loope  0x14000ce9c
   14000cf0f:	rex.R jno 0x14000cf61
   14000cf12:	adc    DWORD PTR [rdi-0x7b],esp
   14000cf15:	xor    al,0x9b
   14000cf17:	(bad)  
   14000cf18:	repnz jrcxz 0x14000cedc
   14000cf1b:	stos   BYTE PTR es:[rdi],al
   14000cf1c:	add    BYTE PTR [rbp+rcx*4-0x49697497],ch
   14000cf23:	add    BYTE PTR [rbp+0x40],bl
   14000cf26:	(bad)  
   14000cf27:	rex.R xchg esp,eax
   14000cf29:	adc    BYTE PTR [rcx+0x7],bl
   14000cf2c:	(bad)  
   14000cf2d:	adc    DWORD PTR [rcx+rax*4],ecx
   14000cf30:	mov    ah,0x23
   14000cf32:	xor    eax,0x80255b01
   14000cf37:	or     eax,DWORD PTR [rdx+0x718b3e29]
   14000cf3d:	(bad)  
   14000cf3e:	or     BYTE PTR [rsi-0x78734b64],cl
   14000cf44:	mov    esp,0x98c85277
   14000cf49:	jne    0x14000cf88
   14000cf4b:	mov    DWORD PTR [rax],edx
   14000cf4d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cf4e:	(bad)  
   14000cf4f:	ret    
   14000cf50:	(bad)  
   14000cf51:	xor    esi,DWORD PTR [rax-0x52e37224]
   14000cf57:	xchg   ecx,eax
   14000cf58:	outs   dx,DWORD PTR ds:[rsi]
   14000cf59:	fist   DWORD PTR [rax+rdi*1]
   14000cf5c:	ror    BYTE PTR [rsp+rcx*8],cl
   14000cf5f:	mov    ecx,0xf2a81dca
   14000cf64:	rex.WRB
   14000cf65:	rex.WX sar BYTE PTR [rbp-0x59],cl
   14000cf69:	xchg   BYTE PTR [rsi+0x2d],dl
   14000cf6c:	movabs eax,ds:0x644436a28a48371
   14000cf75:	stc    
   14000cf76:	in     al,0xaa
   14000cf78:	lea    edx,[rcx]
   14000cf7a:	sub    eax,0xa06264c6
   14000cf7f:	add    eax,0x16b10b9c
   14000cf84:	and    ch,BYTE PTR [rbp-0x36]
   14000cf87:	data16 sbb dh,BYTE PTR [rsi]
   14000cf8a:	jae    0x14000cf6a
   14000cf8c:	cmp    BYTE PTR [rax+rdx*1+0x1c2a5b96],dl
   14000cf93:	cmc    
   14000cf94:	add    eax,0x40b29312
   14000cf99:	and    BYTE PTR [rsi+0x13],al
   14000cf9c:	rex.R (bad) 
   14000cf9e:	sub    BYTE PTR [rdx+0x4fd538f2],r10b
   14000cfa5:	mov    edi,0x7992e0f2
   14000cfaa:	out    dx,eax
   14000cfab:	ins    DWORD PTR es:[rdi],dx
   14000cfac:	rex.WXB imul rsp,r11,0xffffffff90035f72
   14000cfb3:	sar    BYTE PTR [rsp+rax*1],0xe8
   14000cfb7:	(bad)  
   14000cfb8:	(bad)  
   14000cfb9:	not    esi
   14000cfbb:	jle    0x14000cfcf
   14000cfbd:	sar    BYTE PTR [rdi],0x9e
   14000cfc0:	jmp    0x14000cf9b
   14000cfc2:	fild   WORD PTR [rax+rdi*4]
   14000cfc5:	add    DWORD PTR es:[rax-0x73],0x3046caaa
   14000cfcd:	(bad)  
   14000cfce:	(bad)  
   14000cfcf:	div    BYTE PTR [rsi+0x773f2169]
   14000cfd5:	push   rbx
   14000cfd6:	scas   eax,DWORD PTR es:[rdi]
   14000cfd7:	or     BYTE PTR [rax+0x6b],bl
   14000cfda:	ror    esp,cl
   14000cfdc:	mov    ch,0x39
   14000cfde:	(bad)  
   14000cfdf:	mov    WORD PTR [rcx+rdx*1],gs
   14000cfe2:	movabs ds:0x88a30c44098ac4c5,eax
   14000cfeb:	repnz rex.R shl DWORD PTR [rax],1
   14000cfef:	push   rcx
   14000cff0:	cmp    al,0x50
   14000cff2:	int3   
   14000cff3:	sbb    DWORD PTR [rcx],edx
   14000cff5:	hlt    
   14000cff6:	mov    QWORD PTR [rdx+rbp*2-0x5e],r10
   14000cffb:	std    
   14000cffc:	xor    BYTE PTR [rdx],ah
   14000cffe:	test   eax,0x6236d231
   14000d003:	(bad)  
   14000d004:	rex.R rol BYTE PTR [rsi],1
   14000d007:	enter  0x40cd,0x92
   14000d00b:	adc    BYTE PTR [rax-0x67735dd5],dl
   14000d011:	jb     0x14000d015
   14000d013:	or     al,0x5
   14000d015:	iret   
   14000d016:	rex push rcx
   14000d018:	ret    
   14000d019:	and    al,0x82
   14000d01b:	sub    eax,0x9f34b6db
   14000d020:	(bad)  
   14000d021:	rex.XB pop r14
   14000d023:	push   rdx
   14000d024:	rex.WRXB xchg r10,rax
   14000d026:	jge    0x14000cffd
   14000d028:	fiadd  DWORD PTR [rip+0xffffffffbc317718]        # 0xfc324746
   14000d02e:	scas   al,BYTE PTR es:[rdi]
   14000d02f:	cwde   
   14000d030:	(bad)  
   14000d031:	(bad)  
   14000d032:	movsxd ecx,DWORD PTR [rsi-0x7a]
   14000d035:	mov    ecx,0x32a8986a
   14000d03a:	rex.WRB (bad) 
   14000d03c:	xor    bh,dh
   14000d03e:	xchg   edx,eax
   14000d03f:	mov    bh,0x5c
   14000d041:	fimul  DWORD PTR [rax]
   14000d043:	mov    esp,0x7ac46909
   14000d048:	adc    eax,0x2a5956bc
   14000d04d:	cwde   
   14000d04e:	or     esi,DWORD PTR [rdx]
   14000d050:	pop    rax
   14000d051:	mov    DWORD PTR [rip+0xffffffff880445bd],edi        # 0xc8051614
   14000d057:	cdq    
   14000d058:	cld    
   14000d059:	cwde   
   14000d05a:	cmp    eax,0xb48e27cd
   14000d05f:	(bad)  
   14000d060:	xchg   DWORD PTR [rsi],eax
   14000d062:	mov    edx,0x3a3c00d0
   14000d067:	sub    DWORD PTR [rdi+0x378478e7],esi
   14000d06d:	or     eax,0x501222f6
   14000d072:	pushf  
   14000d073:	(bad)  
   14000d074:	xor    DWORD PTR [rsi-0x52d897ef],ecx
   14000d07a:	jbe    0x14000d0b5
   14000d07c:	(bad)  
   14000d07d:	test   DWORD PTR [rsp+rax*4+0x1b4b48b4],eax
   14000d084:	rol    DWORD PTR [rip+0x22b066d0],cl        # 0x162b1375a
   14000d08a:	(bad)  
   14000d08b:	rex add ebp,DWORD PTR [rbx]
   14000d08e:	sub    eax,0x4c671335
   14000d093:	xchg   esp,eax
   14000d094:	xor    esp,DWORD PTR [rcx+0x57]
   14000d097:	sbb    al,BYTE PTR [rsi]
   14000d099:	add    DWORD PTR [rax],esi
   14000d09b:	and    ch,BYTE PTR [rbp+rcx*4-0x45b91b97]
   14000d0a2:	rex.RX shl BYTE PTR [rsi],1
   14000d0a5:	rex.X ret 
   14000d0a7:	rex.WRX jmp 0xd464d170
   14000d0ad:	(bad)  
   14000d0ae:	(bad)  
   14000d0af:	rex.RX
   14000d0b0:	rex.WR xchg rsi,rax
   14000d0b2:	add    eax,edi
   14000d0b4:	addr32 cwde 
   14000d0b6:	xchg   edi,eax
   14000d0b7:	leave  
   14000d0b8:	in     al,dx
   14000d0b9:	(bad)  
   14000d0ba:	adc    al,0xfd
   14000d0bc:	cmp    edi,DWORD PTR [rbx-0x2ccd1b24]
   14000d0c2:	cmp    bh,BYTE PTR [rax-0x49]
   14000d0c5:	(bad)  
   14000d0c6:	out    0xc5,eax
   14000d0c8:	ins    BYTE PTR es:[rdi],dx
   14000d0c9:	rex.RX and BYTE PTR [rbp+0x635cf352],r10b
   14000d0d0:	xor    eax,edx
   14000d0d2:	adc    edi,ecx
   14000d0d4:	mov    WORD PTR [rdx],cs
   14000d0d6:	(bad)  
   14000d0d7:	popf   
   14000d0d8:	js     0x14000d13d
   14000d0da:	jmp    0x1ae4253cd
   14000d0df:	(bad)  
   14000d0e0:	mov    dh,bl
   14000d0e2:	sbb    BYTE PTR [rbx],dh
   14000d0e4:	rex.WRX (bad) 
   14000d0e6:	adc    eax,0x93a0c118
   14000d0eb:	xor    BYTE PTR [rdx+0x33],dh
   14000d0ee:	pop    rsi
   14000d0ef:	enter  0xdeec,0x8c
   14000d0f3:	fst    QWORD PTR [rbx-0x14]
   14000d0f6:	or     DWORD PTR [rbx],eax
   14000d0f8:	mov    BYTE PTR [rdi],bh
   14000d0fa:	imul   ecx,DWORD PTR [rbp+rax*1-0x24],0x18906119
   14000d102:	mov    al,0xb1
   14000d104:	push   rbx
   14000d105:	je     0x14000d114
   14000d107:	add    DWORD PTR [rdx+rbx*2-0x3cdbeae2],edi
   14000d10e:	add    al,0x3f
   14000d110:	stos   DWORD PTR es:[rdi],eax
   14000d111:	xor    BYTE PTR [rdi-0x43],dh
   14000d114:	scas   al,BYTE PTR es:[rdi]
   14000d115:	jno    0x14000d13b
   14000d117:	(bad)  
   14000d118:	rex.R add al,0x2d
   14000d11b:	adc    DWORD PTR [rcx+0x12],ebp
   14000d11e:	nop
   14000d11f:	pop    rax
   14000d120:	loop   0x14000d0d9
   14000d122:	adc    dl,BYTE PTR [rsi+0x72315a19]
   14000d128:	es retf 0x6519
   14000d12c:	out    0xf2,al
   14000d12e:	cli    
   14000d12f:	xor    al,BYTE PTR [rax-0xeaf5ece]
   14000d135:	jne    0x14000d10e
   14000d137:	push   rbp
   14000d138:	sar    al,1
   14000d13a:	movabs eax,ds:0x5d72608c5ebf8eb9
   14000d143:	rcr    DWORD PTR [rcx],cl
   14000d145:	shl    DWORD PTR [rbx+rdi*8+0x40262b0e],0x18
   14000d14d:	push   rax
   14000d14e:	mov    ebx,0xc020061
   14000d153:	repnz mov dl,0x1f
   14000d156:	xchg   ebp,eax
   14000d157:	adc    BYTE PTR [rcx],dh
   14000d159:	sbb    BYTE PTR [rip+0xffffffffb146002b],0xa        # 0xf146d18b
   14000d160:	loope  0x14000d14c
   14000d162:	rol    DWORD PTR [rsi-0x52],1
   14000d165:	sbb    eax,DWORD PTR [rdi]
   14000d167:	and    BYTE PTR [rax-0x263ff3c9],dh
   14000d16d:	add    esi,esp
   14000d16f:	sub    ah,BYTE PTR [rsi+rdi*8-0x5fae3aec]
   14000d176:	test   al,0xe2
   14000d178:	fwait
   14000d179:	(bad)  
   14000d17a:	rcr    DWORD PTR [rdx],0x6f
   14000d17d:	adc    al,0x9c
   14000d17f:	jns    0x14000d1f4
   14000d181:	xlat   BYTE PTR ds:[rbx]
   14000d182:	or     DWORD PTR [rbx+0x27],ebx
   14000d185:	mov    DWORD PTR [rax-0x7f6b6eee],ecx
   14000d18b:	rex.R
   14000d18c:	in     al,dx
   14000d18e:	(bad)  
   14000d190:	adc    BYTE PTR cs:[rsi+0x8],al
   14000d194:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d195:	jns    0x14000d15d
   14000d197:	je     0x14000d173
   14000d199:	imul   eax,DWORD PTR [rbx-0x2b],0x2c
   14000d19d:	xchg   edi,eax
   14000d19e:	sbb    eax,0xe4e3306e
   14000d1a3:	test   BYTE PTR [rbx+0x13],dl
   14000d1a6:	mov    DWORD PTR [rbx-0x36],edi
   14000d1a9:	sub    eax,0x6ee31166
   14000d1ae:	pop    rdi
   14000d1af:	loopne 0x14000d225
   14000d1b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1b2:	xor    ch,dh
   14000d1b4:	cld    
   14000d1b5:	fwait
   14000d1b6:	push   rsi
   14000d1b7:	jbe    0x14000d211
   14000d1b9:	jno    0x14000d1bd
   14000d1bb:	cli    
   14000d1bc:	scas   eax,DWORD PTR es:[rdi]
   14000d1bd:	fimul  DWORD PTR [rax+0x346358cc]
   14000d1c3:	jbe    0x14000d17c
   14000d1c5:	movabs eax,ds:0x32f385ec80278e
   14000d1ce:	and    DWORD PTR [rax-0x58],0x47a98f0b
   14000d1d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d1d6:	in     eax,0xba
   14000d1d8:	or     cl,BYTE PTR [rax]
   14000d1da:	fimul  DWORD PTR [rbx]
   14000d1dc:	(bad)  
   14000d1dd:	loopne 0x14000d234
   14000d1df:	gs (bad) 
   14000d1e1:	rex.WXB
   14000d1e2:	rex.W jae 0x14000d190
   14000d1e5:	rex.WR push rbx
   14000d1e7:	or     ch,dl
   14000d1e9:	(bad)  
   14000d1ea:	ror    BYTE PTR [rdx+0x5da7a23],1
   14000d1f0:	mov    bl,0xeb
   14000d1f2:	mov    eax,DWORD PTR [rsi]
   14000d1f4:	sbb    eax,0x24116001
   14000d1f9:	fisubr WORD PTR [rax-0x31ea2378]
   14000d1ff:	stc    
   14000d200:	(bad)  
   14000d201:	sbb    DWORD PTR [rbp+0x3b1b9fa4],0xfe309d97
   14000d20b:	out    0xba,al
   14000d20d:	and    edi,0xfe5c53a7
   14000d213:	jae    0x14000d1c9
   14000d215:	addr32 loop 0x14000d1ac
   14000d218:	enter  0xda9c,0xc3
   14000d21c:	jmp    0x14000d1e1
   14000d21e:	or     dh,ah
   14000d220:	rol    DWORD PTR [rsi],cl
   14000d222:	cli    
   14000d223:	stc    
   14000d224:	add    al,0xea
   14000d226:	xchg   ebx,esi
   14000d228:	mov    cs,WORD PTR [rdi+rbx*4+0x44]
   14000d22c:	sub    bh,bl
   14000d22e:	rex.WB sub bl,BYTE PTR [r10-0x72bbac7c]
   14000d235:	mov    ds,WORD PTR [rax]
   14000d237:	shr    BYTE PTR [rdi+rax*8],0xa8
   14000d23b:	add    cl,bl
   14000d23d:	add    al,0xd
   14000d23f:	(bad)  
   14000d240:	push   rsp
   14000d241:	imul   eax,DWORD PTR [rax],0x3b
   14000d244:	and    dh,BYTE PTR [rbx+rbp*4-0x67]
   14000d248:	cmp    al,0xe4
   14000d24a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d24b:	pop    rdi
   14000d24c:	push   rax
   14000d24d:	cmp    DWORD PTR [rsi],esi
   14000d24f:	imul   esp,DWORD PTR [rsi+0x6a],0x11670a9e
   14000d256:	jle    0x14000d250
   14000d258:	push   rcx
   14000d259:	xor    BYTE PTR [rdi+0x37],dh
   14000d25c:	iret   
   14000d25d:	pop    rbp
   14000d25e:	(bad)  
   14000d25f:	outs   dx,DWORD PTR ds:[rsi]
   14000d260:	mov    ecx,DWORD PTR [rdx+0x315c974e]
   14000d266:	(bad)  
   14000d267:	ret    
   14000d268:	(bad)  
   14000d269:	movabs ds:0xd00220d07f41e18d,al
   14000d272:	pop    rbx
   14000d273:	imul   ecx,DWORD PTR [rdx+0x6ad858b3],0x114a7e15
   14000d27d:	or     r11b,BYTE PTR [rdx+0x35]
   14000d281:	test   DWORD PTR [rax],esp
   14000d283:	xchg   edx,eax
   14000d284:	sub    BYTE PTR [rbp-0x5aedeeed],dl
   14000d28a:	xor    ah,BYTE PTR [rdx]
   14000d28c:	xchg   edx,eax
   14000d28d:	mov    ah,0xd3
   14000d28f:	sbb    eax,0x68c24a90
   14000d294:	(bad)  
   14000d295:	ror    BYTE PTR [rsi-0x46],0xc5
   14000d299:	popf   
   14000d29a:	rex.B xor al,0xd6
   14000d29d:	(bad)  
   14000d29e:	xor    ebx,ebp
   14000d2a0:	cld    
   14000d2a1:	xchg   ebp,eax
   14000d2a2:	jbe    0x14000d26f
   14000d2a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d2a5:	xor    ecx,0x21
   14000d2a8:	sbb    DWORD PTR [rdi],ebp
   14000d2aa:	neg    DWORD PTR [rdx+0x18]
   14000d2ad:	sar    DWORD PTR [rsi+riz*2],0x1
   14000d2b1:	rex.RB mov r15d,0x402d6e86
   14000d2b7:	jl     0x14000d256
   14000d2b9:	push   0x4053f9eb
   14000d2be:	(bad)  
   14000d2bf:	or     DWORD PTR [rsi-0xbf3ffbd],esp
   14000d2c5:	cmp    BYTE PTR [rbp-0xa76e2e5],ch
   14000d2cb:	sbb    DWORD PTR [rbp+0x58],edx
   14000d2ce:	or     eax,0xa2a515c2
   14000d2d3:	mov    ss,WORD PTR [rcx-0x53]
   14000d2d6:	add    esp,ebp
   14000d2d8:	mov    BYTE PTR [rdx],dl
   14000d2da:	(bad)
   14000d2dd:	(bad)
   14000d2e0:	cdq    
   14000d2e1:	mov    al,0x19
   14000d2e3:	adc    ecx,DWORD PTR [rdx+0x53]
   14000d2e6:	mov    ss,ecx
   14000d2e8:	lods   al,BYTE PTR ds:[rsi]
   14000d2e9:	jrcxz  0x14000d350
   14000d2eb:	rex.X pop QWORD PTR [rdi]
   14000d2ee:	fs mov ch,0xde
   14000d2f1:	fisub  WORD PTR [rax-0x70]
   14000d2f4:	or     al,0xb6
   14000d2f6:	(bad)  
   14000d2f7:	pop    rdx
   14000d2f8:	jp     0x14000d365
   14000d2fa:	lods   eax,DWORD PTR ds:[rsi]
   14000d2fb:	xor    DWORD PTR [rdx],ebx
   14000d2fd:	or     eax,0x52d36dd3
   14000d302:	in     al,dx
   14000d303:	ins    BYTE PTR es:[rdi],dx
   14000d304:	adc    al,0x1f
   14000d306:	std    
   14000d307:	ret    
   14000d308:	and    BYTE PTR [rax],dl
   14000d30a:	rex.WXB and BYTE PTR [r14+0x26],dil
   14000d30e:	imul   ecx,DWORD PTR [rdi+0x191022b2],0xffffff90
   14000d315:	out    dx,al
   14000d316:	or     DWORD PTR [rcx+0x1300e790],0x41
   14000d31d:	xchg   ebx,eax
   14000d31e:	or     eax,0xdb06c9b2
   14000d323:	and    bh,BYTE PTR [rcx+0x39661836]
   14000d329:	sub    ecx,esi
   14000d32b:	add    eax,0xe69a7392
   14000d330:	pushf  
   14000d331:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d332:	movabs ds:0x44c0175dbaa34d1a,al
   14000d33b:	mov    dh,0xa3
   14000d33d:	test   al,0x68
   14000d33f:	mov    BYTE PTR gs:[rbx-0x24],dl
   14000d343:	sbb    DWORD PTR [rcx],0xd2e6224c
   14000d349:	mov    cl,0x68
   14000d34b:	rol    BYTE PTR [rbx-0x3a],0xcb
   14000d34f:	mov    ebp,0x16691
   14000d354:	or     al,0x46
   14000d356:	push   rbp
   14000d357:	(bad)  
   14000d358:	mov    edi,0x9df0b8c5
   14000d35d:	ficom  WORD PTR [rdx]
   14000d35f:	or     eax,0x6e248c09
   14000d364:	xchg   esi,ecx
   14000d366:	out    0x34,al
   14000d368:	add    DWORD PTR [rax+rcx*8],eax
   14000d36b:	es rex.WR
   14000d36d:	rex.RXB
   14000d36e:	lea    bx,[rdx+0x3]
   14000d372:	fmul   DWORD PTR [rcx]
   14000d374:	sbb    al,0xcf
   14000d376:	stc    
   14000d377:	adc    esp,DWORD PTR [rax]
   14000d379:	rcr    DWORD PTR [rsp+rsi*2+0x1cff1173],cl
   14000d380:	and    bl,BYTE PTR [rdi-0x4b09b304]
   14000d386:	retf   
   14000d387:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d388:	(bad)  
   14000d389:	and    ecx,edx
   14000d38b:	(bad)  
   14000d38c:	rex.WRB sub al,0x4e
   14000d38f:	add    BYTE PTR [rcx+rdx*8+0x6d5cdbd4],dh
   14000d396:	lea    ebp,[rsi+0xcaceb9c]
   14000d39c:	xchg   ebx,eax
   14000d39d:	xchg   BYTE PTR [rsi+0x42],al
   14000d3a0:	and    BYTE PTR [rcx-0x3b2eed55],dh
   14000d3a6:	sub    eax,0x622c45fa
   14000d3ab:	sbb    eax,0x371d664b
   14000d3b0:	in     eax,0x67
   14000d3b2:	add    BYTE PTR [rdx],al
   14000d3b4:	(bad)  
   14000d3b5:	in     eax,0x97
   14000d3b7:	nop
   14000d3b8:	(bad)  
   14000d3b9:	adc    BYTE PTR [rip+0xffffffffe0201f7e],cl        # 0x12020f33d
   14000d3bf:	fisubr DWORD PTR [rdx]
   14000d3c1:	rex
   14000d3c2:	rex.RX
   14000d3c3:	rex.WRB ins BYTE PTR es:[rdi],dx
   14000d3c5:	xor    al,0x6e
   14000d3c7:	add    al,BYTE PTR [rax]
   14000d3c9:	lods   al,BYTE PTR ds:[rsi]
   14000d3ca:	ss out dx,eax
   14000d3cc:	rex (bad) 
   14000d3ce:	pop    rbp
   14000d3cf:	rex.RX scas eax,DWORD PTR es:[rdi]
   14000d3d1:	jno    0x14000d363
   14000d3d3:	(bad)  
   14000d3d4:	fidiv  DWORD PTR [rdi+0x29]
   14000d3d7:	push   0x34
   14000d3d9:	adc    eax,0x91126a91
   14000d3de:	mov    BYTE PTR [rcx],dh
   14000d3e0:	(bad)  
   14000d3e1:	(bad)  
   14000d3e2:	std    
   14000d3e3:	ins    BYTE PTR es:[rdi],dx
   14000d3e4:	mov    al,0xba
   14000d3e6:	(bad)  
   14000d3e7:	jmp    0xf34a0b28
   14000d3ec:	test   eax,0x4936d3b9
   14000d3f1:	mov    bl,0x6d
   14000d3f3:	test   al,0xd1
   14000d3f5:	xor    BYTE PTR [rsi+rsi*1-0x33fa677c],bl
   14000d3fc:	loop   0x14000d3d3
   14000d3fe:	mov    WORD PTR [rcx-0x68],?
   14000d401:	ror    DWORD PTR [rsi],0x26
   14000d404:	push   rdx
   14000d405:	cmp    BYTE PTR [rax],dl
   14000d407:	jae    0x14000d3fc
   14000d409:	mov    eax,0xbaa3aecc
   14000d40e:	stos   BYTE PTR es:[rdi],al
   14000d40f:	jne    0x14000d3a8
   14000d411:	jle    0x14000d428
   14000d413:	lods   eax,DWORD PTR ds:[rsi]
   14000d414:	sbb    DWORD PTR [rcx+rbx*4+0x6],ecx
   14000d418:	adc    al,0x99
   14000d41a:	and    al,0x4e
   14000d41c:	fild   DWORD PTR es:[rip+0xffffffff94919622]        # 0xd4926a45
   14000d423:	out    dx,al
   14000d424:	rex.WRB
   14000d425:	rex (bad) 
   14000d427:	rex.RXB mov r11b,0x0
   14000d42a:	mov    bl,0x4c
   14000d42c:	add    BYTE PTR [rax+0x1f],bl
   14000d42f:	rex.X mov bpl,0xc8
   14000d432:	push   rax
   14000d433:	jae    0x14000d3e2
   14000d435:	add    esp,ebp
   14000d437:	add    BYTE PTR [rcx-0x49ff2e55],dh
   14000d43d:	mov    cl,0xe2
   14000d43f:	adc    edi,DWORD PTR [rbx-0x7085a387]
   14000d445:	jae    0x14000d422
   14000d447:	test   eax,0x60675a0b
   14000d44c:	(bad)  
   14000d44d:	ret    0xee77
   14000d450:	movabs al,ds:0x7cf57fa30345d7c9
   14000d459:	imul   esi,DWORD PTR [rbx-0x1b],0xffffffd2
   14000d45d:	or     ebx,0x24ca76a3
   14000d463:	add    BYTE PTR [rdx-0x24779c98],bl
   14000d469:	in     al,0x14
   14000d46b:	outs   dx,BYTE PTR ds:[rsi]
   14000d46c:	xor    eax,0x7f2c7067
   14000d471:	sbb    DWORD PTR [rdi+0x44a025cc],eax
   14000d477:	out    0xe3,al
   14000d479:	int3   
   14000d47a:	or     cl,dl
   14000d47c:	xor    DWORD PTR [rdx-0x79bb5d54],ecx
   14000d482:	cmp    BYTE PTR [rsp+rdi*2],dh
   14000d485:	or     DWORD PTR [rax],eax
   14000d487:	loope  0x14000d479
   14000d489:	lock je 0x14000d475
   14000d48c:	mov    dh,BYTE PTR [rbp+0x6cd81dd6]
   14000d492:	fadd   QWORD PTR [rbp+rdx*4-0x4297f85b]
   14000d499:	jae    0x14000d4d2
   14000d49b:	(bad)  
   14000d49c:	mov    cl,0xd5
   14000d49e:	ins    BYTE PTR es:[rdi],dx
   14000d49f:	(bad)  
   14000d4a0:	jbe    0x14000d4bd
   14000d4a2:	(bad)  
   14000d4a3:	mov    ah,0x64
   14000d4a5:	add    DWORD PTR [rcx+0x36],0x58
   14000d4a9:	fistp  WORD PTR [rax]
   14000d4ab:	(bad)  
   14000d4ac:	hlt    
   14000d4ad:	(bad)  
   14000d4ae:	mov    al,0x52
   14000d4b0:	movabs ds:0x2d9a4996cdcd6dba,al
   14000d4b9:	ret    
   14000d4ba:	int    0xa6
   14000d4bc:	nop
   14000d4bd:	rex.WX mov WORD PTR [rbp+0x6],fs
   14000d4c1:	pop    rsp
   14000d4c2:	(bad)  
   14000d4c3:	mov    ah,0xcf
   14000d4c5:	jmp    0x1a3fc5cfd
   14000d4ca:	in     al,dx
   14000d4cb:	lea    edx,[rax+rbp*1-0x28]
   14000d4cf:	rex.RXB jg 0x14000d48e
   14000d4d2:	sbb    al,BYTE PTR [rsi+0x30]
   14000d4d5:	(bad)  [rax+rax*2]
   14000d4d8:	pop    rax
   14000d4d9:	(bad)  
   14000d4da:	pop    rsp
   14000d4db:	rex.RB (bad) 
   14000d4dd:	fdiv   QWORD PTR [rdx]
   14000d4df:	stos   DWORD PTR es:[rdi],eax
   14000d4e0:	mov    DWORD PTR [rax],ebx
   14000d4e2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4e3:	call   0x1a80a9e29
   14000d4e8:	xor    eax,0x300692b1
   14000d4ed:	rex.XB (bad) 
   14000d4ef:	rol    BYTE PTR [rdx],1
   14000d4f1:	mov    WORD PTR [rdx],gs
   14000d4f3:	mov    bl,0x8
   14000d4f5:	mov    dh,0x6d
   14000d4f7:	mov    ch,0x9
   14000d4f9:	mov    al,0x13
   14000d4fb:	rex.WX
   14000d4fc:	rex.R out dx,eax
   14000d4fe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d4ff:	add    ebx,eax
   14000d501:	cmp    ebx,DWORD PTR [rdi-0x5f1015a5]
   14000d507:	test   al,0xcd
   14000d509:	push   rsp
   14000d50a:	mul    DWORD PTR [rdi+0x12]
   14000d50d:	ds rex.WX xchg rbp,rax
   14000d510:	adc    ecx,edx
   14000d512:	(bad)
   14000d515:	sbb    DWORD PTR [rax+rdi*1-0x3f],0xffffffe7
   14000d51a:	mov    bh,0x92
   14000d51c:	outs   dx,BYTE PTR ds:[rsi]
   14000d51d:	(bad)  
   14000d51e:	add    eax,0xb09616a2
   14000d523:	mov    ?,WORD PTR [rbx+0x7b7873f5]
   14000d529:	(bad)  
   14000d52a:	xor    al,0x8e
   14000d52c:	enter  0x9415,0xa5
   14000d530:	push   rsi
   14000d531:	rcr    eax,1
   14000d533:	pop    rax
   14000d534:	retf   0x9603
   14000d537:	fsubr  st,st(5)
   14000d539:	ret    
   14000d53a:	pop    rbx
   14000d53b:	xor    edx,ebp
   14000d53d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d53e:	mov    cl,0xc8
   14000d540:	add    eax,0xc6b4d308
   14000d545:	or     dh,BYTE PTR [rax-0x60]
   14000d548:	call   QWORD PTR [rdx]
   14000d54a:	(bad)  
   14000d54b:	neg    BYTE PTR [rdi-0x3e]
   14000d54e:	lods   eax,DWORD PTR ds:[rsi]
   14000d54f:	jmp    0x14000d530
   14000d551:	rex (bad) 
   14000d553:	sub    eax,0xc2efb46c
   14000d558:	(bad)  
   14000d559:	xor    DWORD PTR [rdi-0x442d352d],0x36ec5d28
   14000d563:	(bad)  
   14000d564:	xchg   esi,eax
   14000d565:	(bad)  
   14000d566:	sbb    ebx,ecx
   14000d568:	sub    bl,cl
   14000d56a:	xchg   ebx,ebx
   14000d56c:	mov    ebp,0x5b1b7ac
   14000d571:	(bad)  
   14000d573:	sub    ebx,DWORD PTR [rbp-0x69123cd8]
   14000d579:	push   rcx
   14000d57a:	lods   eax,DWORD PTR ds:[rsi]
   14000d57b:	xchg   esi,eax
   14000d57c:	test   al,0x76
   14000d57e:	push   rdi
   14000d57f:	jae    0x14000d513
   14000d581:	or     BYTE PTR [rdx+rbp*2-0x54],dl
   14000d585:	fild   WORD PTR [rcx+0x33f3d55d]
   14000d58b:	(bad)  
   14000d58c:	test   eax,0x855c7baa
   14000d591:	mov    esp,0x4b30463a
   14000d596:	sbb    ebx,DWORD PTR [rax]
   14000d598:	push   0xffffffffd7e53899
   14000d59d:	popf   
   14000d59e:	sub    cl,BYTE PTR [rsi-0x36]
   14000d5a1:	xlat   BYTE PTR ds:[rbx]
   14000d5a2:	add    edx,DWORD PTR [rbx]
   14000d5a4:	pushf  
   14000d5a5:	xor    BYTE PTR [rax-0x65b2b31d],0xdc
   14000d5ac:	lahf   
   14000d5ad:	add    BYTE PTR [rbx],al
   14000d5af:	or     DWORD PTR [rdi],0x396f8e25
   14000d5b5:	sbb    BYTE PTR [rcx+0x1d804da],bl
   14000d5bb:	movsxd esi,ecx
   14000d5bd:	out    dx,eax
   14000d5be:	and    dl,BYTE PTR [rdx+0x4e]
   14000d5c1:	clc    
   14000d5c2:	adc    DWORD PTR [rdi],edx
   14000d5c4:	fiadd  WORD PTR [rcx-0x1b]
   14000d5c7:	scas   eax,DWORD PTR es:[rdi]
   14000d5c8:	adc    ch,BYTE PTR [rax-0x36ecee55]
   14000d5ce:	addr32 (bad) 
   14000d5d0:	test   BYTE PTR [rdi],bh
   14000d5d2:	push   rsi
   14000d5d3:	jrcxz  0x14000d645
   14000d5d5:	or     ebx,ebx
   14000d5d7:	out    0x4e,eax
   14000d5d9:	loop   0x14000d5b7
   14000d5db:	jo     0x14000d5ee
   14000d5dd:	rex.R or eax,0x784616e
   14000d5e3:	in     al,0x59
   14000d5e5:	cmp    al,0x90
   14000d5e7:	(bad)  
   14000d5e8:	sbb    DWORD PTR [rbx-0x34],0xffffffd9
   14000d5ec:	jo     0x14000d63d
   14000d5ee:	mov    bh,0x78
   14000d5f0:	sub    BYTE PTR [rsi+rdx*4-0x11],bh
   14000d5f4:	jrcxz  0x14000d5ff
   14000d5f6:	fist   DWORD PTR [rcx]
   14000d5f8:	jl     0x14000d5ca
   14000d5fa:	cdq    
   14000d5fb:	std    
   14000d5fc:	sbb    ah,BYTE PTR [rbp-0x59]
   14000d5ff:	xchg   esi,eax
   14000d600:	fwait
   14000d601:	push   0x4dc8836a
   14000d606:	jns    0x14000d5cd
   14000d608:	rcr    DWORD PTR [rip+0xffffffffb5b77d5e],cl        # 0xf5b8536c
   14000d60e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d60f:	data16 mov bl,al
   14000d612:	pop    rbx
   14000d613:	ffreep st(3)
   14000d615:	movabs eax,ds:0xeac23f85c77167ad
   14000d61e:	loop   0x14000d65b
   14000d620:	jo     0x14000d617
   14000d622:	enter  0xb443,0xd5
   14000d626:	mov    ebp,0xeb4ed27
   14000d62b:	es rex.WXB retf 
   14000d62e:	rex.WXB int 0xcd
   14000d631:	cmc    
   14000d632:	in     eax,dx
   14000d633:	rex.B jg 0x14000d5e9
   14000d636:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d637:	repz lea ebp,[rip+0xffffffffa2fbb7ce]        # 0xe2fc8e0c
   14000d63e:	pop    rdx
   14000d63f:	fisttp DWORD PTR [rdx+0x35]
   14000d642:	pop    rbx
   14000d643:	pop    rdx
   14000d644:	jne    0x14000d680
   14000d646:	pop    rdx
   14000d647:	xor    eax,0xd0118e5b
   14000d64c:	stos   DWORD PTR es:[rdi],eax
   14000d64d:	ror    BYTE PTR [rax],cl
   14000d64f:	sub    dh,ah
   14000d651:	ds stc 
   14000d653:	in     al,0x6b
   14000d655:	(bad)  
   14000d656:	add    al,0xd5
   14000d658:	cmp    ah,BYTE PTR [rdi]
   14000d65a:	imul   eax,DWORD PTR [rax],0xee7b4022
   14000d660:	add    bl,bl
   14000d663:	repz ficom WORD PTR [rax+rcx*4+0x4f924305]
   14000d66b:	movabs al,ds:0x16a8038d883549ea
   14000d674:	sbb    ebp,eax
   14000d676:	fiadd  DWORD PTR [rdi]
   14000d678:	mov    al,0x13
   14000d67a:	(bad)  
   14000d67b:	lea    eax,[rip+0x8821031]        # 0x14882e6b2
   14000d681:	mov    BYTE PTR [rax-0xe],bh
   14000d684:	movabs ds:0xc57eea01bfd5f89c,al
   14000d68d:	sub    bl,BYTE PTR [rax+rdi*2+0x6a9b065e]
   14000d694:	repz in al,dx
   14000d696:	mov    esp,esi
   14000d698:	cld    
   14000d699:	call   0x1202de79e
   14000d69e:	add    BYTE PTR [rsi-0xf],dl
   14000d6a1:	nop
   14000d6a2:	jle    0x14000d6c0
   14000d6a4:	outs   dx,DWORD PTR ds:[rsi]
   14000d6a5:	(bad)  
   14000d6a6:	iret   
   14000d6a7:	movabs al,ds:0xc4f956899b0ac321
   14000d6b0:	rex.XB push r15
   14000d6b2:	sbb    al,0x63
   14000d6b4:	mov    dh,dl
   14000d6b6:	cmc    
   14000d6b7:	mov    BYTE PTR [rbx-0x7e],bl
   14000d6ba:	rex.RX
   14000d6bb:	adc    BYTE PTR [rbx],r10b
   14000d6be:	mov    ecx,0xd0a5f1
   14000d6c3:	mov    dl,BYTE PTR [rbp+0x6a]
   14000d6c6:	lea    r8d,[r8+0x698e1663]
   14000d6cd:	adc    al,0x2d
   14000d6cf:	mov    bh,0xac
   14000d6d1:	xor    cl,dl
   14000d6d3:	rex.XB sbb al,0x59
   14000d6d6:	jnp    0x14000d6f4
   14000d6d8:	rex.RXB xlat BYTE PTR ds:[rbx]
   14000d6da:	(bad)  
   14000d6db:	rex.RXB scas eax,DWORD PTR es:[rdi]
   14000d6dd:	jge    0x14000d6f2
   14000d6df:	scas   al,BYTE PTR es:[rdi]
   14000d6e0:	fdivr  st(0),st
   14000d6e2:	xor    BYTE PTR [rbp+0x6aa0fa1d],ch
   14000d6e8:	(bad)  
   14000d6e9:	pop    rcx
   14000d6ea:	in     al,dx
   14000d6eb:	(bad)  
   14000d6ec:	rex.XB mov edi,DWORD PTR [r10+0x6d]
   14000d6f0:	ins    DWORD PTR es:[rdi],dx
   14000d6f1:	imul   esi,DWORD PTR [rax-0x28dc8a87],0x5b
   14000d6f8:	cmp    ecx,ebp
   14000d6fa:	inc    BYTE PTR [rax-0x47584488]
   14000d700:	fst    st(2)
   14000d702:	imul   esi,DWORD PTR [rdi+0x477693ab],0x19532544
   14000d70c:	sar    DWORD PTR [rsi+rcx*1],0xbe
   14000d710:	rcl    BYTE PTR [rbx],1
   14000d712:	(bad)  
   14000d713:	(bad)  
   14000d714:	scas   eax,DWORD PTR es:[rdi]
   14000d715:	adc    DWORD PTR [rcx],0xa8dd5f54
   14000d71b:	sbb    al,bl
   14000d71d:	pop    rbx
   14000d71e:	push   rsp
   14000d71f:	cmp    eax,0xa2034ff
   14000d724:	adc    esp,DWORD PTR [rax-0x61bf9888]
   14000d72a:	sbb    DWORD PTR [rcx-0x7c],ebp
   14000d72d:	retf   0x5c66
   14000d730:	(bad)  
   14000d731:	cmp    r12d,r10d
   14000d734:	fcomi  st,st(5)
   14000d736:	xor    edx,DWORD PTR [rbx-0x65]
   14000d739:	add    BYTE PTR [rbx],bh
   14000d73b:	or     al,0xbe
   14000d73e:	jnp    0x14000d7a2
   14000d740:	fwait
   14000d741:	pop    rax
   14000d742:	push   0x67
   14000d744:	leave  
   14000d745:	mov    edi,0xf2faf123
   14000d74a:	repz cmp DWORD PTR [rsi+riz*1-0xc1af395],esi
   14000d752:	pop    rcx
   14000d753:	outs   dx,DWORD PTR ds:[rsi]
   14000d754:	mov    ebp,0x67c5f97d
   14000d759:	outs   dx,DWORD PTR ds:[rsi]
   14000d75a:	(bad)  
   14000d75b:	cmp    edi,DWORD PTR [rdx]
   14000d75d:	fsub   DWORD PTR [rdx]
   14000d75f:	sbb    al,0xc0
   14000d761:	add    DWORD PTR [rcx+riz*8+0x78ebe6c3],ebp
   14000d768:	sar    BYTE PTR [rdi+rbp*2-0x3e],0x35
   14000d76d:	mov    cl,0x6d
   14000d76f:	(bad)  
   14000d770:	and    eax,0xa910360b
   14000d776:	sahf   
   14000d777:	pop    rsi
   14000d778:	rol    BYTE PTR [rsp+rcx*8-0x60],0x2c
   14000d77d:	in     eax,0x1
   14000d77f:	mov    edi,0x1d2fc69a
   14000d784:	je     0x14000d70b
   14000d786:	and    bl,bl
   14000d788:	sub    DWORD PTR [rsi],ebx
   14000d78a:	mov    dl,0xf1
   14000d78c:	jge    0x14000d718
   14000d78e:	jnp    0x14000d799
   14000d790:	xor    BYTE PTR [rsi-0x1],0x15
   14000d794:	sbb    al,0x3f
   14000d796:	std    
   14000d797:	(bad)  
   14000d798:	jno    0x14000d76d
   14000d79a:	sub    edi,edi
   14000d79c:	(bad)  
   14000d79d:	xchg   edi,eax
   14000d79e:	outs   dx,DWORD PTR ds:[rsi]
   14000d79f:	stc    
   14000d7a0:	push   rcx
   14000d7a1:	lods   al,BYTE PTR ds:[rsi]
   14000d7a2:	(bad)  
   14000d7a3:	(bad)  
   14000d7a4:	movabs al,ds:0x25e1f0f752e8e1ba
   14000d7ad:	jge    0x14000d794
   14000d7af:	repnz cli 
   14000d7b1:	(bad)  
   14000d7b2:	imul   ebp,DWORD PTR [rbp+0x53],0x1b
   14000d7b6:	fld    QWORD PTR [rdi+0x7a6c46c9]
   14000d7bc:	jge    0x14000d763
   14000d7be:	(bad)  
   14000d7bf:	cmp    bh,BYTE PTR [rdx]
   14000d7c1:	jmp    0x1aad641f4
   14000d7c6:	or     bl,al
   14000d7c8:	xor    al,BYTE PTR [rdx]
   14000d7ca:	es scas eax,DWORD PTR es:[rdi]
   14000d7cc:	retf   
   14000d7cd:	push   rsp
   14000d7ce:	pop    rcx
   14000d7cf:	(bad)  [rsp+rdx*1+0xc]
   14000d7d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d7d4:	ror    ch,cl
   14000d7d6:	adc    eax,0xc6baf046
   14000d7db:	int    0x4a
   14000d7dd:	in     eax,0x73
   14000d7df:	push   rsi
   14000d7e0:	ror    DWORD PTR [rdx-0x5a641ff7],1
   14000d7e6:	jb     0x14000d7af
   14000d7e8:	add    dl,ah
   14000d7ea:	adc    DWORD PTR [rbx],0x60
   14000d7ed:	push   rax
   14000d7ee:	(bad)
   14000d7f3:	or     al,0x60
   14000d7f5:	addr32 in al,dx
   14000d7f7:	adc    dh,bh
   14000d7f9:	mov    ebx,0x2eafe21b
   14000d7fe:	cmp    al,0x1b
   14000d800:	addr32 or al,0x33
   14000d803:	stos   DWORD PTR es:[rdi],eax
   14000d804:	(bad)  
   14000d805:	js     0x14000d7f4
   14000d807:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d808:	xchg   ebx,eax
   14000d809:	rex.WRXB fidivr WORD PTR [r9+0x76]
   14000d80d:	add    eax,DWORD PTR [rdi+0x7403a33]
   14000d813:	mov    al,0x8a
   14000d815:	xchg   ebp,ecx
   14000d817:	movabs ds:0x6af7cd59419e4078,eax
   14000d820:	mov    eax,0xd9124efd
   14000d825:	imul   BYTE PTR [rax]
   14000d827:	rex.WXB jno 0x14000d859
   14000d82a:	lods   eax,DWORD PTR ds:[rsi]
   14000d82b:	mov    ebp,0xed6f8ee4
   14000d830:	cmp    eax,0x662721d7
   14000d835:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d836:	sub    eax,0xe7a05d61
   14000d83b:	or     eax,0xc100b325
   14000d840:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d841:	and    BYTE PTR [rip+0x44942ea],ah        # 0x1444a1b31
   14000d847:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d848:	movabs ds:0xdcf471f7f17b1c55,eax
   14000d851:	lahf   
   14000d852:	(bad)  
   14000d853:	in     eax,0xd6
   14000d855:	(bad)  
   14000d856:	movsxd esp,ebx
   14000d858:	enter  0xd487,0xb1
   14000d85c:	fwait
   14000d85d:	xchg   edi,eax
   14000d85e:	cmp    eax,ebx
   14000d860:	rex.XB mov edi,r9d
   14000d863:	sub    esp,edi
   14000d865:	test   DWORD PTR cs:[rdi-0x3d],0xd5ad1911
   14000d86d:	sub    bh,cl
   14000d86f:	sub    bh,ch
   14000d871:	cmc    
   14000d872:	push   rbp
   14000d873:	mov    dl,0xd0
   14000d875:	(bad)  
   14000d876:	leave  
   14000d877:	ret    0x5692
   14000d87a:	imul   ebp,DWORD PTR [rdx-0x40],0xc1b2fc4a
   14000d881:	and    bl,al
   14000d883:	movabs al,ds:0x5f54618944ccdfa4
   14000d88c:	xchg   BYTE PTR [rcx-0xb],bh
   14000d88f:	mov    es,edx
   14000d891:	xlat   BYTE PTR ds:[rbx]
   14000d892:	add    edx,DWORD PTR [rbx-0x18528234]
   14000d898:	jae    0x14000d89c
   14000d89a:	rex.X
   14000d89b:	fs loop 0x14000d893
   14000d89e:	pop    rcx
   14000d89f:	sbb    eax,0x2623b408
   14000d8a4:	icebp  
   14000d8a5:	jmp    0x13117569a
   14000d8aa:	rex.WRXB xchg r14,rax
   14000d8ac:	cli    
   14000d8ad:	adc    ecx,esi
   14000d8af:	iret   
   14000d8b0:	ins    DWORD PTR es:[rdi],dx
   14000d8b1:	cs xchg esp,eax
   14000d8b3:	push   rbp
   14000d8b4:	mov    eax,0x3b9ead1
   14000d8b9:	(bad)  
   14000d8ba:	jle    0x14000d8bb
   14000d8bc:	(bad)
   14000d8bf:	retf   0x6ab2
   14000d8c2:	rol    DWORD PTR [rax],cl
   14000d8c4:	(bad)  
   14000d8c5:	fs mov esi,0x13cbf789
   14000d8cb:	push   0x2040862
   14000d8d0:	lods   eax,DWORD PTR ds:[rsi]
   14000d8d1:	js     0x14000d8c4
   14000d8d3:	(bad)  
   14000d8d4:	sbb    BYTE PTR [rbp-0x140842a2],bh
   14000d8da:	fsubr  st(3),st
   14000d8dc:	cmp    BYTE PTR [rdx+0x242fdd42],ah
   14000d8e2:	cmp    eax,DWORD PTR [rax-0x53b7c67e]
   14000d8e8:	(bad)  
   14000d8e9:	js     0x14000d894
   14000d8eb:	sbb    esp,DWORD PTR [rdi]
   14000d8ed:	sbb    al,0x20
   14000d8ef:	xchg   edi,eax
   14000d8f0:	scas   eax,DWORD PTR es:[rdi]
   14000d8f1:	rcr    bh,cl
   14000d8f3:	ds cs add ecx,edi
   14000d8f7:	jno    0x14000d883
   14000d8f9:	mov    edx,0x18d8fe23
   14000d8fe:	scas   al,BYTE PTR es:[rdi]
   14000d8ff:	loop   0x14000d8e7
   14000d901:	push   rbx
   14000d902:	inc    DWORD PTR [rdx]
   14000d904:	(bad)  
   14000d905:	cs jge 0x14000d913
   14000d908:	push   rdi
   14000d909:	out    dx,al
   14000d90a:	jl     0x14000d890
   14000d90c:	xchg   edx,eax
   14000d90d:	test   DWORD PTR [rbx-0x2d],ebx
   14000d910:	mov    ebx,0x5d59beef
   14000d915:	pop    rdx
   14000d916:	fstp   DWORD PTR [rsp+rbp*4]
   14000d919:	pop    rsp
   14000d91a:	pop    rsp
   14000d91b:	int    0x25
   14000d91d:	iret   
   14000d91e:	fldcw  WORD PTR [rax-0x73]
   14000d921:	push   rcx
   14000d922:	and    dh,BYTE PTR ss:[rbx]
   14000d925:	sbb    al,0x70
   14000d927:	rcr    BYTE PTR [rbp-0x2c],cl
   14000d92a:	stos   BYTE PTR es:[rdi],al
   14000d92b:	fnsave [rsi]
   14000d92d:	pushf  
   14000d92e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d92f:	xchg   BYTE PTR [rax-0x7b],bl
   14000d932:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d933:	cmp    eax,0x260b5ede
   14000d938:	leave  
   14000d939:	sbb    al,0x3d
   14000d93b:	cmp    eax,0x29707351
   14000d940:	push   rsp
   14000d941:	pop    rsi
   14000d942:	ja     0x14000d9b1
   14000d944:	loopne 0x14000d99b
   14000d946:	cwde   
   14000d947:	mov    ebp,DWORD PTR [rdi+0x55]
   14000d94a:	in     al,dx
   14000d94b:	fnstcw WORD PTR [rsi+0x29180c00]
   14000d951:	and    al,BYTE PTR [rcx]
   14000d953:	fnstsw WORD PTR [rax+0x67f89f9a]
   14000d959:	rex.WB std 
   14000d95b:	imul   esp,ebp,0xe75563e2
   14000d961:	loope  0x14000d938
   14000d963:	adc    ebx,DWORD PTR [rdi-0x45]
   14000d966:	out    dx,eax
   14000d967:	(bad)  
   14000d968:	(bad)  
   14000d969:	rol    DWORD PTR [rbx],0x44
   14000d96c:	xchg   DWORD PTR [rax+0x3b],esi
   14000d96f:	popf   
   14000d970:	(bad)  
   14000d971:	rex.WRXB cdqe 
   14000d973:	(bad)  
   14000d974:	(bad)
   14000d977:	sub    DWORD PTR [rax-0x6e],0x8b188242
   14000d97e:	sub    eax,eax
   14000d980:	fcomp  st(2)
   14000d982:	lods   al,BYTE PTR ds:[rsi]
   14000d983:	(bad)  
   14000d984:	ret    
   14000d985:	sbb    eax,0x8100982f
   14000d98a:	rex.WXB sar BYTE PTR [r15],cl
   14000d98d:	adc    BYTE PTR [rdi-0x5d7e0a49],bh
   14000d993:	ficom  WORD PTR [rax+0x7f]
   14000d996:	movabs eax,ds:0xde84e67956d6dbd6
   14000d99f:	lock or al,0x24
   14000d9a2:	push   0xffffffffe2bebe07
   14000d9a7:	sbb    bh,bh
   14000d9a9:	lods   eax,DWORD PTR ds:[rsi]
   14000d9aa:	mov    ebp,0xbfc70a79
   14000d9af:	repz sbb ebx,eax
   14000d9b2:	cmp    dh,dh
   14000d9b4:	ret    
   14000d9b5:	pop    rax
   14000d9b6:	mov    ebx,0xec7c93ed
   14000d9bb:	xchg   BYTE PTR [rbx],al
   14000d9bd:	in     eax,dx
   14000d9be:	in     eax,0xa5
   14000d9c0:	rex.WRX (bad) 
   14000d9c2:	repnz cdq 
   14000d9c4:	rex.WXB std 
   14000d9c6:	(bad)  
   14000d9c7:	jg     0x14000d9cd
   14000d9c9:	or     al,0x47
   14000d9cb:	pushf  
   14000d9cc:	out    0x9a,eax
   14000d9ce:	int3   
   14000d9cf:	xor    BYTE PTR [rbx],ah
   14000d9d1:	mov    ch,0xd0
   14000d9d3:	(bad)  
   14000d9d4:	rex.WB ja 0x14000d9d8
   14000d9d7:	sub    ch,BYTE PTR [rbp+0x8]
   14000d9da:	and    eax,0x6bfbc089
   14000d9df:	(bad)  
   14000d9e0:	ss push rax
   14000d9e2:	in     al,0x2e
   14000d9e4:	cwde   
   14000d9e5:	(bad)  
   14000d9e6:	movsxd ecx,DWORD PTR [rax+riz*4-0xa6bed9e]
   14000d9ed:	mov    ecx,0x954a83dd
   14000d9f2:	mov    edi,0x3ff68ad6
   14000d9f7:	test   BYTE PTR [rcx+rax*1+0x8905f04],0x89
   14000d9ff:	or     BYTE PTR [rbp+0x48ec7116],dl
   14000da05:	cld    
   14000da06:	adc    esi,DWORD PTR [rax]
   14000da08:	rcl    DWORD PTR [rax+rsi*2-0x27],1
   14000da0c:	(bad)  
   14000da0d:	adc    DWORD PTR [rdi],esp
   14000da0f:	(bad)  
   14000da10:	mov    dl,0x31
   14000da12:	jb     0x14000da12
   14000da14:	addr32 mov dh,0xbd
   14000da17:	fidivr WORD PTR [rsi]
   14000da19:	cmc    
   14000da1a:	fdiv   QWORD PTR [rbx+0x6f]
   14000da1d:	pop    rbx
   14000da1e:	xor    ecx,ebx
   14000da20:	leave  
   14000da21:	add    cl,BYTE PTR [rdi]
   14000da23:	icebp  
   14000da24:	or     ecx,edi
   14000da26:	push   rbx
   14000da27:	fmul   QWORD PTR [rbp+0x6d136097]
   14000da2d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000da2e:	xchg   ebp,eax
   14000da2f:	jmp    0x175f622da
   14000da34:	jbe    0x14000d9de
   14000da36:	adc    ch,BYTE PTR [rbx-0x6d3924a0]
   14000da3c:	fst    DWORD PTR [rdx]
   14000da3e:	mov    edx,0xbee43c4b
   14000da43:	(bad)  
   14000da44:	sbb    al,BYTE PTR [rbx+rbx*2]
   14000da47:	(bad)  
   14000da48:	pop    rdi
   14000da49:	mov    DWORD PTR [rax-0x75],eax
   14000da4c:	stc    
   14000da4d:	cmp    DWORD PTR [rax-0x41913569],0x29
   14000da54:	ins    BYTE PTR es:[rdi],dx
   14000da55:	ror    cl,1
   14000da57:	test   ax,0xfc10
   14000da5b:	cwde   
   14000da5c:	rex.RXB sub al,0xf6
   14000da5f:	xchg   edx,eax
   14000da60:	adc    DWORD PTR [rcx-0x17],esp
   14000da63:	cld    
   14000da64:	push   rdi
   14000da65:	sar    BYTE PTR [rcx-0x4151cb06],1
   14000da6b:	in     eax,dx
   14000da6c:	addr32 rex.WB sbb rax,0xffffffffffbd2fb8
   14000da73:	ficomp WORD PTR [rbx-0x2c]
   14000da76:	retf   
   14000da77:	out    0x56,eax
   14000da79:	cli    
   14000da7a:	imul   ebp,DWORD PTR [rbx],0xffffffeb
   14000da7d:	pop    rdx
   14000da7e:	mov    ah,0x26
   14000da80:	xor    ebp,eax
   14000da82:	sub    edx,ecx
   14000da84:	(bad)  
   14000da85:	and    al,0xcb
   14000da87:	sbb    BYTE PTR [rbp-0x38891952],bl
   14000da8d:	test   al,0x34
   14000da8f:	xor    eax,0x99824ac2
   14000da94:	adc    esi,ebp
   14000da96:	mov    ch,0xe0
   14000da98:	push   rbp
   14000da99:	xor    al,BYTE PTR [rdx+0x614992e8]
   14000da9f:	(bad)  
   14000daa0:	jae    0x14000da25
   14000daa2:	es jle 0x14000db22
   14000daa5:	jne    0x14000dafc
   14000daa7:	mov    esp,0x3ae44c1e
   14000daac:	rcr    BYTE PTR [rsi+0x54088031],0xda
   14000dab3:	lods   al,BYTE PTR ds:[rsi]
   14000dab4:	loope  0x14000db0b
   14000dab6:	adc    bh,BYTE PTR [rdi+0x767744f]
   14000dabc:	jmp    0xa34f
   14000dac0:	fsub   DWORD PTR es:[rbx-0x40]
   14000dac4:	(bad)
   14000dac7:	lea    edi,[rbx+rbp*8-0x3e]
   14000dacb:	test   eax,0x6ecf27a3
   14000dad0:	sbb    eax,0x3b88b1cf
   14000dad5:	stc    
   14000dad6:	or     al,0x3e
   14000dad8:	rex.WRX pop rdi
   14000dada:	ret    0xb612
   14000dadd:	add    BYTE PTR [rsp+rdi*4],dh
   14000dae0:	imul   BYTE PTR [rsi-0x11]
   14000dae3:	rex.WRXB sub BYTE PTR [r13-0x2d],r9b
   14000dae7:	adc    DWORD PTR [rax+0x77],esp
   14000daea:	sub    eax,0x603eaa08
   14000daef:	movsxd ebx,DWORD PTR [rcx]
   14000daf1:	movabs ds:0x887b49c8d88e13dc,eax
   14000dafa:	jbe    0x14000daa5
   14000dafc:	repz sbb al,0x51
   14000daff:	xchg   ebx,eax
   14000db00:	test   eax,0x42053b90
   14000db05:	not    bh
   14000db07:	add    eax,0x1399dfb5
   14000db0c:	sahf   
   14000db0d:	fadd   DWORD PTR [rbx+0x2f62617f]
   14000db13:	rex.RB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000db15:	push   rbp
   14000db16:	retf   0x59ff
   14000db19:	movabs eax,ds:0xe1b8ab064ceb630e
   14000db22:	leave  
   14000db23:	dec    DWORD PTR [rip+0x27e779b]        # 0x1427f52c4
   14000db29:	fwait
   14000db2a:	mov    bh,0x7f
   14000db2c:	xchg   edx,eax
   14000db2d:	out    dx,eax
   14000db2e:	mov    edx,0x656768ed
   14000db33:	mov    cl,0x3d
   14000db35:	cmp    al,0xfd
   14000db37:	rol    BYTE PTR [rbp+0x19031891],cl
   14000db3d:	(bad)  
   14000db3e:	pop    rcx
   14000db3f:	mov    ah,0x26
   14000db41:	cmp    DWORD PTR fs:[rcx],ebp
   14000db44:	popf   
   14000db45:	imul   esi,DWORD PTR [rbx+rdi*4-0x20],0x46
   14000db4a:	retf   
   14000db4b:	shl    BYTE PTR [rcx],0x1
   14000db4e:	xchg   esp,eax
   14000db4f:	cwde   
   14000db50:	rex fldenv [rax]
   14000db53:	cwde   
   14000db54:	xchg   edx,eax
   14000db55:	rex.WRXB movabs ds:0xc995294f8aaaeafa,rax
   14000db5f:	scas   al,BYTE PTR es:[rdi]
   14000db60:	call   0x195217e15
   14000db65:	mov    ch,0xbc
   14000db67:	jns    0x14000db7a
   14000db69:	shl    BYTE PTR [rsi+rdi*4],cl
   14000db6c:	add    eax,0xce6b80b4
   14000db71:	add    BYTE PTR [rdx],ah
   14000db73:	popf   
   14000db74:	(bad)  
   14000db76:	rex.WRXB adc QWORD PTR [r9],0x6ef41330
   14000db7d:	mov    bh,bl
   14000db7f:	mov    ebp,0x92f5af1f
   14000db84:	(bad)  
   14000db85:	mov    ch,0xf7
   14000db87:	imul   ebp,DWORD PTR [rbp+0x11090899],0x109c44a5
   14000db91:	pop    rax
   14000db92:	stc    
   14000db93:	cmp    al,0x95
   14000db95:	cs adc eax,0x9fe795ed
   14000db9b:	mov    esp,0xad9bfbe3
   14000dba0:	adc    DWORD PTR [rsp+rsi*4-0x7a41cf10],0xfffffff7
   14000dba8:	retf   
   14000dba9:	adc    ecx,DWORD PTR [rsi-0x1877e51c]
   14000dbaf:	jmp    0x181201fff
   14000dbb4:	mov    WORD PTR [rsp+rsi*4+0x26],es
   14000dbb8:	adc    BYTE PTR [rbp+0x48],dl
   14000dbbb:	jp     0x14000dc2f
   14000dbbd:	(bad)  
   14000dbbe:	cmp    eax,0x6097139f
   14000dbc3:	mov    edi,0xc4810d7b
   14000dbc8:	adc    al,0x8e
   14000dbca:	cmp    esi,DWORD PTR [rcx]
   14000dbcc:	sub    BYTE PTR [rsi],dl
   14000dbce:	scas   eax,DWORD PTR es:[rdi]
   14000dbcf:	adc    al,0x84
   14000dbd1:	push   0xffffffffffffff89
   14000dbd3:	popf   
   14000dbd4:	or     bl,BYTE PTR [rbx-0x31aa2bc2]
   14000dbda:	cmp    eax,DWORD PTR [rax+rdx*2+0x3243dc7a]
   14000dbe1:	xchg   BYTE PTR [rax+0x57],dl
   14000dbe4:	cmc    
   14000dbe5:	xor    al,0x61
   14000dbe7:	icebp  
   14000dbe8:	(bad)  
   14000dbeb:	out    0xd5,al
   14000dbed:	(bad)  
   14000dbee:	mov    al,0xfe
   14000dbf0:	sahf   
   14000dbf1:	call   QWORD PTR [rdx-0x2f4bc792]
   14000dbf7:	in     al,dx
   14000dbf8:	jbe    0x14000dbe8
   14000dbfa:	push   rax
   14000dbfb:	(bad)  
   14000dbfc:	rex.WRXB sahf 
   14000dbfe:	jmp    0x1660d7f6a
   14000dc03:	iret   
   14000dc04:	sub    bh,ch
   14000dc06:	sbb    DWORD PTR [rbp-0x61b3634d],esp
   14000dc0c:	push   rbx
   14000dc0d:	mov    edx,0x5b355c84
   14000dc12:	xchg   BYTE PTR [rax-0x47],bl
   14000dc15:	rex.RX
   14000dc16:	rex.WRB jle 0x14000dc6c
   14000dc19:	in     al,dx
   14000dc1a:	sub    BYTE PTR [rdx+0x27],dh
   14000dc1d:	rex.RX adc BYTE PTR [rdx-0x41fd99cf],r15b
   14000dc24:	mov    ecx,0x4ee13d1
   14000dc29:	sahf   
   14000dc2a:	push   rdx
   14000dc2b:	mov    eax,0x83cd57aa
   14000dc30:	push   rdx
   14000dc31:	ds jrcxz 0x14000dcb1
   14000dc34:	mov    WORD PTR [rbx-0x36],gs
   14000dc37:	add    BYTE PTR [rdx-0x75039f9f],ah
   14000dc3d:	xor    eax,0x9cc01af1
   14000dc42:	(bad)  
   14000dc43:	out    dx,eax
   14000dc44:	push   0x33ad03c
   14000dc49:	lods   al,BYTE PTR ds:[rsi]
   14000dc4a:	enter  0x11c6,0xb1
   14000dc4e:	(bad)  
   14000dc4f:	add    BYTE PTR [rbx],sil
   14000dc52:	rex.W mov cl,0xdd
   14000dc55:	push   rax
   14000dc56:	and    ah,BYTE PTR [rcx+0x70]
   14000dc59:	ret    0x38c5
   14000dc5c:	cmp    eax,0xeed7f4ff
   14000dc61:	(bad)  
   14000dc62:	popf   
   14000dc63:	sbb    eax,0xc3397669
   14000dc68:	pop    rdi
   14000dc69:	(bad)  
   14000dc6a:	xchg   edi,eax
   14000dc6b:	jno    0x14000dca8
   14000dc6d:	pop    rsi
   14000dc6e:	(bad)  
   14000dc6f:	sub    BYTE PTR [rcx],cl
   14000dc71:	div    ebp
   14000dc73:	sahf   
   14000dc74:	test   BYTE PTR [rdx-0x2833da42],0x87
   14000dc7b:	shl    DWORD PTR [rdx+rcx*4-0x6bb0c1d7],1
   14000dc82:	pop    rsi
   14000dc83:	rex.X (bad) 
   14000dc85:	jns    0x14000dc08
   14000dc87:	add    eax,0x9bb90b36
   14000dc8c:	mov    ebx,0x1a04017
   14000dc91:	mov    cl,0xa9
   14000dc93:	add    eax,DWORD PTR [rcx]
   14000dc95:	rex.RXB cld 
   14000dc97:	sahf   
   14000dc98:	and    DWORD PTR [rax+0x4af0332a],ebx
   14000dc9e:	mov    ch,0x4
   14000dca0:	fistp  DWORD PTR [rsi+0x2a]
   14000dca3:	mov    WORD PTR [rdx+0x66],fs
   14000dca6:	xchg   BYTE PTR [rax+0x54dca4b1],dh
   14000dcac:	cmp    edi,esp
   14000dcae:	lahf   
   14000dcaf:	shl    BYTE PTR [rdx+0xe02feb1],0x7f
   14000dcb6:	std    
   14000dcb7:	jg     0x14000dc79
   14000dcb9:	cli    
   14000dcba:	rex.XB mov r15d,0x78e96a48
   14000dcc0:	cli    
   14000dcc1:	(bad)  
   14000dcc2:	ja     0x14000dca0
   14000dcc4:	xchg   bh,ah
   14000dcc6:	mov    edi,0xb5b8617f
   14000dccb:	mov    esi,0x9064c46d
   14000dcd0:	xchg   ecx,eax
   14000dcd1:	loope  0x14000dd3f
   14000dcd3:	rex.XB xchg r11d,eax
   14000dcd5:	call   0xc3c6af76
   14000dcda:	jns    0x14000dcbe
   14000dcdc:	sbb    al,0x84
   14000dcde:	and    BYTE PTR [rdi+0x7e],0x93
   14000dce2:	rcl    DWORD PTR [rsi+0x676f4e2d],0xd4
   14000dce9:	(bad)  
   14000dcea:	cmp    BYTE PTR [rdi+0x74166972],ah
   14000dcf0:	(bad)  
   14000dcf1:	stos   DWORD PTR es:[rdi],eax
   14000dcf2:	fnstsw WORD PTR [rbp+0x5da330a6]
   14000dcf8:	xor    eax,DWORD PTR [rcx]
   14000dcfa:	jp     0x14000dd67
   14000dcfc:	xor    BYTE PTR [rcx+0xa00c66b],al
   14000dd02:	leave  
   14000dd03:	(bad)  
   14000dd04:	lods   al,BYTE PTR ds:[rsi]
   14000dd05:	mov    esp,0xdd8d8a30
   14000dd0a:	sbb    BYTE PTR [rdx+0x57],bl
   14000dd0d:	retf   
   14000dd0e:	mov    edx,0x3186c5ef
   14000dd13:	add    BYTE PTR [rcx],dh
   14000dd15:	rex retf 0xf5a9
   14000dd19:	adc    BYTE PTR [rdx+0x72],cl
   14000dd1c:	rex.RB
   14000dd1d:	rex.WB retf 0x360
   14000dd21:	adc    BYTE PTR [rbx-0x7e4a1fd3],dh
   14000dd27:	(bad)  
   14000dd28:	push   0x6
   14000dd2a:	xchg   esp,eax
   14000dd2b:	adc    BYTE PTR [rax+0x5b464489],bl
   14000dd31:	lea    edx,[rbx]
   14000dd33:	(bad)  
   14000dd34:	rex.WRX fnsave [rbx+0x1b93472e]
   14000dd3b:	stc    
   14000dd3c:	or     bh,dh
   14000dd3e:	adc    bh,BYTE PTR [rsi+0xab8c386]
   14000dd44:	mov    BYTE PTR [rbp+0x187261c9],dh
   14000dd4a:	cmp    eax,0xece67404
   14000dd4f:	jl     0x14000dd08
   14000dd51:	ins    DWORD PTR es:[rdi],dx
   14000dd52:	movabs eax,ds:0xf1df36e402e1d848
   14000dd5b:	add    ebx,DWORD PTR [rsi+0x72d25053]
   14000dd61:	mov    DWORD PTR [rcx],0x7850d71f
   14000dd67:	retf   0xb595
   14000dd6a:	call   FWORD PTR [rbp+0x3b776146]
   14000dd70:	xor    ebp,DWORD PTR [rax]
   14000dd72:	(bad)  
   14000dd73:	add    eax,0x6ac033bc
   14000dd78:	(bad)  
   14000dd79:	fs (bad) 
   14000dd7b:	xchg   esi,eax
   14000dd7c:	(bad)  
   14000dd7d:	(bad)  
   14000dd7e:	pushf  
   14000dd7f:	adc    BYTE PTR [rcx],dh
   14000dd81:	mov    ?,WORD PTR [rcx+0x18]
   14000dd84:	stos   DWORD PTR es:[rdi],eax
   14000dd85:	sbb    ecx,DWORD PTR [rbx+0x3f380e3b]
   14000dd8b:	rex.R and al,0xf6
   14000dd8e:	(bad)  
   14000dd8f:	(bad)  
   14000dd90:	sub    al,0x23
   14000dd92:	push   rcx
   14000dd93:	pop    rdx
   14000dd94:	repnz push fs
   14000dd97:	mov    eax,0x9cdfd2a6
   14000dd9c:	div    DWORD PTR [rcx-0x20]
   14000dd9f:	pop    rbx
   14000dda0:	jmp    FWORD PTR [rbx]
   14000dda2:	cli    
   14000dda3:	idiv   DWORD PTR [rdi+0xa]
   14000dda6:	jl     0x14000dd94
   14000dda8:	ret    
   14000dda9:	jmp    0xee40cc69
   14000ddae:	mov    esi,0x6f4ce27b
   14000ddb3:	imul   edi,DWORD PTR [rbp-0x35],0xffffffc0
   14000ddb7:	push   0xffffffff9b9408c8
   14000ddbc:	lods   eax,DWORD PTR ds:[rsi]
   14000ddbd:	add    al,0x46
   14000ddbf:	adc    ecx,esp
   14000ddc1:	sar    DWORD PTR [rcx+rbp*8],0x2e
   14000ddc5:	adc    BYTE PTR [rbx+0x274084d4],0x4c
   14000ddcc:	data16 add al,0x3c
   14000ddcf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ddd0:	(bad)  
   14000ddd1:	(bad)  
   14000ddd2:	(bad)  
   14000ddd3:	adc    ebx,DWORD PTR [rax-0x1a7a89f1]
   14000ddd9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ddda:	and    eax,0x262bb01
   14000dddf:	adc    ebx,r9d
   14000dde2:	fisttp WORD PTR [rax+riz*8-0x66]
   14000dde6:	xor    BYTE PTR [rax-0x7bf46a08],al
   14000ddec:	mov    eax,0xb24d6162
   14000ddf1:	(bad)  
   14000ddf2:	cmp    eax,0x3ecd7be1
   14000ddf7:	jno    0x14000de6f
   14000ddf9:	mov    esp,0x6009e9b7
   14000ddfe:	(bad)  
   14000ddff:	and    al,0x39
   14000de01:	rex.XB sub r15d,eax
   14000de04:	neg    BYTE PTR [rcx-0x5e33abd8]
   14000de0a:	adc    ah,BYTE PTR [rdi-0x32]
   14000de0d:	movzx  edx,dx
   14000de10:	(bad)  
   14000de11:	mov    edi,0x177de4f3
   14000de16:	repz and eax,0x80bc185e
   14000de1c:	rex.WRXB mov ?,r14
   14000de1f:	adc    DWORD PTR [rdx+0x316855f9],ebx
   14000de25:	nop
   14000de26:	sar    DWORD PTR [rdx],0x60
   14000de29:	je     0x14000de5f
   14000de2b:	ja     0x14000de8c
   14000de2d:	rex.R out 0x55,al
   14000de30:	mov    ch,0x4a
   14000de32:	rex.WXB
   14000de33:	rex.WRXB test r12,r14
   14000de36:	add    al,0xc8
   14000de38:	(bad)  
   14000de39:	add    edx,DWORD PTR [rax+0x39d01b4b]
   14000de3f:	fs rex.RXB ins BYTE PTR es:[rdi],dx
   14000de42:	movabs ds:0x7005cd0e65a6a80b,eax
   14000de4b:	rol    BYTE PTR [rcx-0x7288925c],cl
   14000de51:	(bad)  
   14000de52:	fisttp WORD PTR [rsi+0x22512084]
   14000de58:	or     eax,DWORD PTR [rcx-0x136e7a08]
   14000de5e:	cdq    
   14000de5f:	(bad)  
   14000de60:	shr    BYTE PTR [rip+0xffffffff83a67776],0x29        # 0xc3a755dd
   14000de67:	int3   
   14000de68:	(bad)  
   14000de69:	ss add eax,0x439b4f61
   14000de6f:	or     ebp,DWORD PTR [rsi+0xa]
   14000de72:	or     edi,ecx
   14000de74:	adc    DWORD PTR [rcx-0x26],ebp
   14000de77:	adc    ecx,DWORD PTR [rdi-0xc5c114f]
   14000de7d:	hlt    
   14000de7e:	dec    DWORD PTR [rcx]
   14000de80:	adc    BYTE PTR [rcx],ah
   14000de82:	cmp    esi,esi
   14000de84:	(bad)  
   14000de85:	jle    0x14000de77
   14000de87:	(bad)  
   14000de88:	pop    rbx
   14000de89:	cmp    ecx,DWORD PTR [rdi-0x63]
   14000de8c:	cmp    bl,dl
   14000de8e:	fistp  DWORD PTR [rdi+rbx*8+0x36]
   14000de92:	rex.RX xor al,0x21
   14000de95:	(bad)  
   14000de96:	xchg   edx,eax
   14000de97:	outs   dx,DWORD PTR ds:[rsi]
   14000de98:	mov    DWORD PTR [rdx+0x66],eax
   14000de9b:	ins    BYTE PTR es:[rdi],dx
   14000de9c:	out    0x76,eax
   14000de9e:	mov    ebx,0x98e1aa50
   14000dea3:	rex pop rsp
   14000dea5:	outs   dx,DWORD PTR ds:[rsi]
   14000dea6:	cdq    
   14000dea7:	fdivr  DWORD PTR [rip+0x1189d87b]        # 0x1518ab728
   14000dead:	mov    esp,0xd4502676
   14000deb2:	xor    ebp,ecx
   14000deb4:	fmul   DWORD PTR [rsi-0x26]
   14000deb7:	test   BYTE PTR [rdi-0x4011eca],dl
   14000debd:	cwde   
   14000debe:	or     esp,ebp
   14000dec0:	mov    DWORD PTR [rbx],edx
   14000dec2:	nop
   14000dec3:	lods   al,BYTE PTR ds:[rsi]
   14000dec4:	retf   
   14000dec5:	ins    BYTE PTR es:[rdi],dx
   14000dec6:	in     al,dx
   14000dec7:	popf   
   14000dec8:	jb     0x14000df0b
   14000deca:	hlt    
   14000decb:	pop    rsi
   14000decc:	(bad)  
   14000decd:	out    0xc4,eax
   14000decf:	(bad)  
   14000ded0:	or     BYTE PTR [rsp+rdx*2],bl
   14000ded3:	jle    0x14000decc
   14000ded5:	sbb    eax,0x65162220
   14000deda:	rex.WRB add BYTE PTR [r11],r15b
   14000dedd:	(bad)  
   14000dede:	mov    BYTE PTR [rsp+rsi*8-0x4a0bfd29],ch
   14000dee5:	enter  0x6468,0x34
   14000dee9:	xor    esi,DWORD PTR [rsi]
   14000deeb:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000deed:	gs jmp 0x14000de8b
   14000def0:	pop    rdi
   14000def1:	sti    
   14000def2:	retf   0xce07
   14000def5:	retf   
   14000def6:	push   rcx
   14000def7:	jle    0x14000def9
   14000def9:	(bad)  
   14000defa:	loope  0x14000deab
   14000defc:	loope  0x14000def5
   14000defe:	rol    BYTE PTR [rdi+rbx*1-0x80],1
   14000df02:	(bad)  
   14000df03:	data16 fld TBYTE PTR [rdx+0x32a3e8e0]
   14000df0a:	adc    eax,DWORD PTR [rax+0x5c]
   14000df0d:	(bad)  
   14000df0e:	(bad)  
   14000df0f:	(bad)  
   14000df10:	femms  
   14000df12:	mov    edx,0x209efe62
   14000df17:	nop
   14000df18:	ficom  WORD PTR [rip+0xffffffffe2bfbdfb]        # 0x122c09d19
   14000df1e:	cmp    al,0xfd
   14000df20:	idiv   BYTE PTR [rsi+rbp*8-0x15]
   14000df24:	imul   ebp,DWORD PTR [rsi],0xffffff81
   14000df27:	sbb    cl,BYTE PTR [rbx]
   14000df29:	movabs al,ds:0x80075a045cd022c6
   14000df32:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000df33:	lea    esp,[rdx]
   14000df35:	rex.RXB ja 0x14000dfa4
   14000df38:	sub    BYTE PTR [rcx+0x3b89fa93],cl
   14000df3e:	outs   dx,DWORD PTR ds:[rsi]
   14000df3f:	rex (bad) 
   14000df41:	xor    eax,DWORD PTR [rax]
   14000df43:	add    esi,DWORD PTR [rcx]
   14000df45:	mov    edx,0x14d80ad0
   14000df4a:	in     eax,dx
   14000df4b:	adc    al,0x94
   14000df4d:	xchg   esp,eax
   14000df4e:	out    dx,al
   14000df4f:	sub    DWORD PTR [rsi+rsi*4],ecx
   14000df52:	test   BYTE PTR [rdx],dl
   14000df54:	rex.XB jo 0x14000df21
   14000df57:	rex.R imul ecx
   14000df5a:	(bad)  
   14000df5b:	and    BYTE PTR [rbx+0x79],bl
   14000df5e:	add    ebp,edi
   14000df60:	idiv   esp
   14000df62:	sbb    al,0xbf
   14000df64:	out    0x81,eax
   14000df66:	fstp   TBYTE PTR [rbx]
   14000df68:	rex.WRXB popf 
   14000df6a:	js     0x14000df25
   14000df6c:	mov    bh,0xb1
   14000df6e:	mov    edx,0xc8c22225
   14000df73:	xor    ecx,ecx
   14000df75:	rex.RB xchg r12d,eax
   14000df77:	lods   al,BYTE PTR ds:[rsi]
   14000df78:	pop    rsp
   14000df79:	rex.RB
   14000df7a:	rex.WXB add al,0xb4
   14000df7d:	mov    al,0x8
   14000df7f:	push   rsi
   14000df80:	test   eax,0x69909589
   14000df85:	adc    dl,BYTE PTR [rdi+0x234e3ba2]
   14000df8b:	lods   eax,DWORD PTR ds:[rsi]
   14000df8c:	rex.WB
   14000df8d:	rex.WR (bad) 
   14000df8f:	push   rdi
   14000df90:	jo     0x14000df77
   14000df92:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000df93:	imul   eax,DWORD PTR [rdx],0x33
   14000df96:	mov    dl,bl
   14000df98:	imul   ebp,DWORD PTR [rdi+0x14],0x1f
   14000df9c:	(bad)  
   14000df9d:	mov    ah,0xba
   14000df9f:	jrcxz  0x14000df9b
   14000dfa1:	(bad)  
   14000dfa2:	(bad)  
   14000dfa3:	cmp    BYTE PTR [rcx],al
   14000dfa5:	sub    DWORD PTR [rsi+0x70258626],esp
   14000dfab:	and    DWORD PTR [rdx],ecx
   14000dfad:	cmp    ebp,ebp
   14000dfaf:	jo     0x14000df93
   14000dfb1:	and    eax,0xf59bc13c
   14000dfb6:	pop    rsi
   14000dfb7:	cli    
   14000dfb8:	add    edi,DWORD PTR [rsi-0x7656ca64]
   14000dfbe:	add    ah,ah
   14000dfc0:	(bad)  
   14000dfc1:	mov    dl,0x3e
   14000dfc3:	xor    BYTE PTR [rsi-0x28599251],ah
   14000dfc9:	int3   
   14000dfca:	lea    ebp,[rbp-0x2d218eac]
   14000dfd0:	imul   esi,esp,0xffffffec
   14000dfd3:	movsxd ebx,DWORD PTR [rdi-0x3]
   14000dfd6:	sar    BYTE PTR [rcx+0x39],0xca
   14000dfda:	(bad)  
   14000dfdb:	shl    DWORD PTR [rbx+0x42f8ebf8],0x90
   14000dfe2:	mov    dh,BYTE PTR [rcx-0x68]
   14000dfe5:	lods   eax,DWORD PTR ds:[rsi]
   14000dfe6:	outs   dx,DWORD PTR ds:[rsi]
   14000dfe7:	adc    al,BYTE PTR [rax]
   14000dfe9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dfea:	rex.WRB push r15
   14000dfec:	(bad)  
   14000dfed:	loope  0x14000e003
   14000dfef:	(bad)  
   14000dff1:	cmp    al,0xbb
   14000dff3:	fisttp QWORD PTR [rip+0xffffffffcc7913d0]        # 0x10c79f3c9
   14000dff9:	shr    DWORD PTR [rax+0x3e24ddc4],1
   14000dfff:	ss pop rax
   14000e001:	xchg   DWORD PTR [rsi+rsi*1],ecx
   14000e004:	retf   0x5003
   14000e007:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e008:	movabs al,ds:0x21ce80875a832d6
   14000e011:	xor    eax,0xad4e0097
   14000e016:	(bad)  
   14000e017:	loopne 0x14000e04d
   14000e019:	add    eax,DWORD PTR [rsi+rsi*8+0x68c0533a]
   14000e020:	adc    BYTE PTR [rdi-0x292fc4b2],ah
   14000e026:	shr    DWORD PTR [rax],0xba
   14000e029:	xor    BYTE PTR [rdi],ah
   14000e02b:	pushf  
   14000e02c:	ror    BYTE PTR [rbp+0x13],cl
   14000e02f:	push   rbp
   14000e030:	dec    DWORD PTR [rdx]
   14000e032:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e033:	xor    bl,al
   14000e035:	test   eax,0xafa5c070
   14000e03a:	cmp    al,0xa
   14000e03c:	nop
   14000e03d:	(bad)  
   14000e03e:	hlt    
   14000e03f:	sahf   
   14000e040:	iret   
   14000e041:	icebp  
   14000e042:	sub    DWORD PTR [rdi-0x41],0xffffffbd
   14000e046:	repz in al,0xb3
   14000e049:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e04a:	sti    
   14000e04b:	sbb    ebp,DWORD PTR [rbx+0x6610225b]
   14000e051:	popf   
   14000e052:	sbb    esi,DWORD PTR [rbx]
   14000e054:	call   0x121166380
   14000e059:	es nop
   14000e05b:	and    eax,0x21398b0b
   14000e060:	xchg   ecx,eax
   14000e061:	mov    al,0x11
   14000e063:	xchg   esp,ebp
   14000e065:	adc    al,0x23
   14000e067:	xor    bl,bh
   14000e069:	cld    
   14000e06a:	sbb    BYTE PTR [rbx],al
   14000e06c:	jns    0x14000e07b
   14000e06e:	rex.WR movabs al,ds:0x673ec13aebcd20aa
   14000e078:	add    dl,bh
   14000e07a:	pushf  
   14000e07b:	add    DWORD PTR [rax+0x101721df],ecx
   14000e081:	xor    dh,BYTE PTR cs:[rbp+0x28]
   14000e085:	add    eax,0xde127288
   14000e08a:	stos   DWORD PTR es:[rdi],eax
   14000e08b:	cli    
   14000e08c:	rex.B in eax,0x8f
   14000e08f:	xor    al,0x3
   14000e091:	(bad)  
   14000e092:	sahf   
   14000e093:	ss pop rbx
   14000e095:	push   rdi
   14000e096:	cli    
   14000e097:	data16 je 0x14000e114
   14000e09a:	sub    eax,0x1cdd5adf
   14000e09f:	(bad)  
   14000e0a0:	and    al,0xe0
   14000e0a2:	jo     0x14000e036
   14000e0a4:	mov    dl,0xb0
   14000e0a6:	repnz pop rsp
   14000e0a8:	lahf   
   14000e0a9:	nop
   14000e0aa:	out    0x9a,eax
   14000e0ac:	sahf   
   14000e0ad:	(bad)  
   14000e0ae:	out    0x37,al
   14000e0b0:	out    dx,al
   14000e0b1:	mov    edi,0x23f84720
   14000e0b6:	js     0x14000e0cc
   14000e0b8:	mov    edi,0xa1705f20
   14000e0bd:	mov    bh,0x85
   14000e0bf:	popf   
   14000e0c0:	rex.WRX pop rsi
   14000e0c2:	repnz xchg ebp,eax
   14000e0c5:	xor    eax,0x16d42134
   14000e0ca:	adc    DWORD PTR [rbx+0x30],edx
   14000e0cd:	xchg   ecx,eax
   14000e0ce:	rex.WRX
   14000e0cf:	rex.WX
   14000e0d0:	rex.WRX
   14000e0d1:	rex.WX (bad) 
   14000e0d3:	sahf   
   14000e0d4:	jns    0x14000e0a5
   14000e0d6:	pop    rax
   14000e0d7:	jl     0x14000e156
   14000e0d9:	test   BYTE PTR [rdx],ch
   14000e0db:	and    ecx,DWORD PTR [rcx-0x2fc0926c]
   14000e0e1:	repnz sbb al,0xb2
   14000e0e4:	jne    0x14000e0ff
   14000e0e6:	mov    dl,0x75
   14000e0e8:	test   eax,0x8b1be3b0
   14000e0ed:	movabs al,ds:0xd97b5006f75061ee
   14000e0f6:	xor    al,BYTE PTR [rdx+rdx*1]
   14000e0f9:	rex mov ecx,0x6220acf3
   14000e0ff:	or     DWORD PTR [rip+0x60a9acac],ebx        # 0x1a0aa8db1
   14000e105:	xor    al,0xec
   14000e107:	je     0x14000e16c
   14000e109:	loope  0x14000e14e
   14000e10b:	lock rex.XB fbstp TBYTE PTR [r14-0x5415c351]
   14000e113:	cld    
   14000e114:	scas   eax,DWORD PTR es:[rdi]
   14000e115:	hlt    
   14000e116:	or     al,0xbe
   14000e118:	xchg   ebp,eax
   14000e119:	add    ah,BYTE PTR [rdi+riz*2-0x6f7bfce1]
   14000e120:	mov    ebp,0xd0fc73f7
   14000e125:	cmp    ebp,DWORD PTR [rsi+0x6f]
   14000e128:	jg     0x14000e125
   14000e12a:	cdq    
   14000e12b:	sar    ebp,cl
   14000e12d:	(bad)  
   14000e12e:	(bad)  
   14000e12f:	sub    eax,0x9d0c2063
   14000e134:	add    eax,ebx
   14000e136:	ds or  eax,0x255eaf
   14000e13c:	movabs rdx,0x32220cc044929a8b
   14000e146:	pop    rsi
   14000e147:	(bad)  
   14000e148:	rex.WXB cld 
   14000e14a:	mov    esp,0x1667df28
   14000e14f:	(bad)  
   14000e150:	xchg   ebp,eax
   14000e151:	sbb    eax,0xd919b381
   14000e156:	(bad)  
   14000e157:	repz xor ebx,DWORD PTR [rax+0x2a7af4c0]
   14000e15e:	fild   QWORD PTR [rbx]
   14000e160:	rex.WR (bad) 
   14000e162:	(bad)  
   14000e163:	(bad)  
   14000e164:	(bad)  
   14000e165:	rex.WR add al,r15b
   14000e168:	stc    
   14000e169:	jns    0x14000e18f
   14000e16b:	fs mov ebp,0xf04169f4
   14000e171:	sahf   
   14000e172:	add    DWORD PTR [rax+0x1b8eccfc],eax
   14000e178:	cmp    edi,ebp
   14000e17a:	sbb    al,0xbd
   14000e17c:	retf   
   14000e17d:	rex.XB mov r9d,0x6b2fb972
   14000e183:	sbb    DWORD PTR [rdx+rsi*8+0x5c],0xffffff9b
   14000e188:	div    BYTE PTR [rax]
   14000e18a:	xchg   ebx,eax
   14000e18b:	fstp   TBYTE PTR [rbp+rbx*4-0x2b]
   14000e18f:	xor    esp,esi
   14000e191:	ret    0xbfb7
   14000e194:	jb     0x14000e18e
   14000e196:	mov    dl,0x59
   14000e198:	out    0x7,al
   14000e19a:	lock add bh,dh
   14000e19d:	mov    edx,0xc200017c
   14000e1a2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1a3:	rcr    DWORD PTR [rsi+0x13280526],cl
   14000e1a9:	sub    ebx,DWORD PTR [rax+rax*8-0x5911fb0b]
   14000e1b0:	bsr    esp,DWORD PTR [rdi+rax*1+0x2fe4c5fc]
   14000e1b8:	(bad)  
   14000e1b9:	cmc    
   14000e1ba:	xchg   ebp,eax
   14000e1bb:	xor    eax,0xa5034980
   14000e1c0:	rex.X clc 
   14000e1c2:	test   DWORD PTR [rdi-0x31730237],esp
   14000e1c8:	lea    esi,[rsi]
   14000e1ca:	and    DWORD PTR [rbx+0x17d5c84d],esp
   14000e1d0:	ins    DWORD PTR es:[rdi],dx
   14000e1d1:	cdq    
   14000e1d2:	div    BYTE PTR [rdx]
   14000e1d4:	js     0x14000e1b7
   14000e1d6:	(bad)  
   14000e1d7:	(bad)  
   14000e1d8:	loope  0x14000e1e0
   14000e1da:	push   rax
   14000e1db:	movsxd ecx,ecx
   14000e1dd:	pop    rcx
   14000e1de:	or     ecx,DWORD PTR [rdx]
   14000e1e0:	loop   0x14000e1b5
   14000e1e2:	stos   BYTE PTR es:[rdi],al
   14000e1e3:	mov    al,al
   14000e1e5:	cmp    ah,BYTE PTR [rdx]
   14000e1e7:	or     eax,0xad8068c8
   14000e1ec:	mov    ecx,0x7761a220
   14000e1f1:	mov    eax,0xa5db5130
   14000e1f6:	lods   al,BYTE PTR ds:[rsi]
   14000e1f7:	movabs eax,ds:0x9ab09ad8a6b18c8
   14000e200:	pushf  
   14000e201:	jnp    0x14000e217
   14000e203:	push   0xfffffffff81fa1b5
   14000e208:	sbb    DWORD PTR [rsi-0x18],edi
   14000e20b:	popf   
   14000e20c:	ja     0x14000e1c2
   14000e20e:	mov    edi,0xdea9e4f5
   14000e213:	out    0x66,al
   14000e215:	rex.WRXB add r8,r10
   14000e218:	rex.RX imul r12d,DWORD PTR [rax-0x30],0xffffffe7
   14000e21d:	rcl    ebp,1
   14000e21f:	(bad)  
   14000e220:	(bad)  
   14000e221:	sub    BYTE PTR [rcx+rbp*8],0x2c
   14000e225:	sbb    BYTE PTR [rsi+0x13],cl
   14000e228:	add    esp,DWORD PTR [rdx+0x26]
   14000e22b:	or     cl,BYTE PTR [rbx]
   14000e22d:	mov    esi,0xfa6acfc4
   14000e232:	sbb    ecx,ebp
   14000e234:	retf   
   14000e235:	add    al,0xa6
   14000e237:	ficom  DWORD PTR [rdx]
   14000e239:	push   rbx
   14000e23a:	mov    cl,BYTE PTR [rsi-0x45]
   14000e23d:	jle    0x14000e2ad
   14000e23f:	es loopne 0x14000e246
   14000e242:	rex.XB test eax,0xe1b45dce
   14000e248:	jp     0x14000e20c
   14000e24a:	mov    ch,0x9f
   14000e24c:	(bad)  
   14000e24d:	fs mov ebx,0xa222a3c9
   14000e253:	test   BYTE PTR [rcx-0x5b],cl
   14000e256:	rex.R
   14000e257:	xchg   r11,rax
   14000e259:	xchg   ecx,eax
   14000e25a:	xor    ah,BYTE PTR [rdx-0x6bd0c217]
   14000e260:	or     al,cl
   14000e262:	add    al,0xa3
   14000e264:	xchg   ebp,eax
   14000e265:	ds scas al,BYTE PTR es:[rdi]
   14000e267:	pop    rsi
   14000e268:	in     al,dx
   14000e269:	retf   
   14000e26a:	retf   0x2656
   14000e26d:	sub    DWORD PTR [rax-0x4510f652],0x50
   14000e274:	xlat   BYTE PTR ds:[rbx]
   14000e275:	xlat   BYTE PTR ds:[rbx]
   14000e276:	sahf   
   14000e277:	cld    
   14000e278:	xchg   ebx,eax
   14000e279:	hlt    
   14000e27a:	jb     0x14000e2f2
   14000e27c:	xchg   esp,eax
   14000e27d:	outs   dx,BYTE PTR ds:[rsi]
   14000e27e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e27f:	jae    0x14000e279
   14000e281:	outs   dx,DWORD PTR ds:[rsi]
   14000e282:	int    0xdf
   14000e284:	mov    bh,0x7a
   14000e286:	xchg   DWORD PTR [rbx+0x747bcbd9],esi
   14000e28c:	stc    
   14000e28d:	add    al,0x45
   14000e28f:	test   DWORD PTR [rsi],eax
   14000e291:	adc    BYTE PTR [rdx+0x7e5c7c8a],ah
   14000e297:	rex.R fcom DWORD PTR [rbx-0x700ed692]
   14000e29e:	xchg   edx,eax
   14000e29f:	xchg   ebp,eax
   14000e2a0:	cmp    eax,0x9e53cc1e
   14000e2a5:	xlat   BYTE PTR ds:[rbx]
   14000e2a6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e2a7:	adc    dh,BYTE PTR [rcx+0x5fc71c5]
   14000e2ad:	rex.XB jb 0x14000e314
   14000e2b0:	sar    DWORD PTR [rdi+0xabfd30a],1
   14000e2b6:	pop    rsp
   14000e2b7:	add    DWORD PTR ds:[rax+0x1bdd006],ebp
   14000e2be:	mov    esp,0x39d40c74
   14000e2c3:	(bad)  
   14000e2c4:	or     DWORD PTR [rdi+0x8ae76c4],ebx
   14000e2ca:	ins    BYTE PTR es:[rdi],dx
   14000e2cb:	and    ah,BYTE PTR [rbx-0x15]
   14000e2ce:	(bad)  
   14000e2cf:	and    BYTE PTR [rbp+0x68],bl
   14000e2d2:	add    eax,0xb06bb462
   14000e2d7:	mov    cl,0xe6
   14000e2d9:	mov    edi,DWORD PTR [rax-0x3e]
   14000e2dc:	sbb    edi,DWORD PTR [rbx+0x7d69e97d]
   14000e2e2:	sti    
   14000e2e3:	xchg   edx,eax
   14000e2e4:	(bad)  
   14000e2e5:	inc    BYTE PTR [rdx]
   14000e2e7:	pop    rax
   14000e2e8:	cmp    cl,BYTE PTR [rsi]
   14000e2ea:	ds (bad) 
   14000e2ec:	xor    BYTE PTR [rdi+0x36775de7],bh
   14000e2f2:	(bad)  
   14000e2f3:	std    
   14000e2f4:	dec    DWORD PTR [rsi-0xc]
   14000e2f7:	mov    bl,0x4c
   14000e2f9:	or     ecx,DWORD PTR [rax+0x20]
   14000e2fc:	pop    rdx
   14000e2fd:	mov    ebx,DWORD PTR [rsi]
   14000e2ff:	hlt    
   14000e300:	nop
   14000e301:	lods   eax,DWORD PTR ds:[rsi]
   14000e302:	xchg   edx,eax
   14000e303:	and    dl,BYTE PTR [rax+0x4e61d3a0]
   14000e309:	sbb    eax,DWORD PTR [rsi-0x14bd7d94]
   14000e30f:	movabs ds:0x40982ed50a09221,al
   14000e318:	jg     0x14000e2da
   14000e31a:	mov    ?,WORD PTR [rax+0x2893ca7d]
   14000e320:	xor    eax,0x55730262
   14000e325:	push   rbx
   14000e326:	imul   ecx,DWORD PTR [rcx-0x2b],0x705fb127
   14000e32d:	in     eax,dx
   14000e32e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e32f:	add    DWORD PTR [rip+0xffffffffa7645557],ebx        # 0xe765388c
   14000e335:	rcl    BYTE PTR [rbx+0x6],1
   14000e338:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e339:	mov    WORD PTR [rcx+rbx*2-0x1e],es
   14000e33d:	(bad)  
   14000e33e:	stos   BYTE PTR es:[rdi],al
   14000e33f:	pop    rax
   14000e340:	push   0x1f580006
   14000e345:	(bad)  
   14000e346:	jrcxz  0x14000e31a
   14000e348:	push   rax
   14000e349:	scas   al,BYTE PTR es:[rdi]
   14000e34a:	pop    rsp
   14000e34b:	in     al,dx
   14000e34c:	(bad)  
   14000e34d:	(bad)  
   14000e34e:	(bad)  
   14000e34f:	cs jp  0x14000e3d0
   14000e352:	repnz pop rax
   14000e354:	jo     0x14000e301
   14000e356:	repnz add ah,dh
   14000e359:	rex.WRX jle 0x14000e371
   14000e35c:	fucomip st,st(3)
   14000e35e:	(bad)  
   14000e35f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e360:	sbb    ebp,DWORD PTR [rax+0x15]
   14000e363:	jg     0x14000e3b8
   14000e365:	jle    0x14000e382
   14000e367:	sbb    eax,0xec77e00c
   14000e36c:	mov    cs,WORD PTR [rcx+0x4b15d6df]
   14000e372:	imul   eax,DWORD PTR [rcx],0x1c
   14000e375:	rex.XB movabs al,ds:0xe5f6d8af3bf2daa2
   14000e37f:	xor    DWORD PTR [rcx],edx
   14000e381:	retf   
   14000e382:	ror    al,1
   14000e384:	jl     0x14000e38e
   14000e386:	(bad)  
   14000e387:	movabs rax,ds:0x9aa152f72f42782a
   14000e391:	test   dh,ch
   14000e393:	sub    BYTE PTR [rbx],dh
   14000e395:	add    al,0x10
   14000e397:	cmp    BYTE PTR [rsp+rax*1-0x54],0x9f
   14000e39c:	test   ecx,ebx
   14000e39e:	cmp    BYTE PTR [rbx],cl
   14000e3a0:	jo     0x14000e3a4
   14000e3a2:	pop    rdx
   14000e3a3:	mov    esp,0xc78b419
   14000e3a8:	call   0xecfe98cb
   14000e3ad:	add    al,0x22
   14000e3af:	or     al,0xbb
   14000e3b1:	cmpxchg BYTE PTR [rdx+0x301880e6],dh
   14000e3b8:	pop    rcx
   14000e3b9:	data16 (bad) 
   14000e3bb:	mov    ebx,ss
   14000e3bd:	or     al,ah
   14000e3bf:	rex.WRX
   14000e3c0:	rex.WRXB xchg r10,rax
   14000e3c2:	rol    DWORD PTR [r14],0xa2
   14000e3c6:	xchg   edx,esi
   14000e3c8:	cmp    al,0x2b
   14000e3ca:	data16 or cl,cl
   14000e3cd:	jrcxz  0x14000e3ce
   14000e3cf:	or     al,0x9a
   14000e3d1:	sub    dh,0x6d
   14000e3d4:	(bad)  
   14000e3d6:	(bad)  
   14000e3d7:	lock movabs eax,ds:0x62fba7b5fabe3b7
   14000e3e1:	jbe    0x14000e3f6
   14000e3e3:	(bad)  
   14000e3e4:	lods   eax,DWORD PTR ds:[rsi]
   14000e3e5:	xchg   ecx,eax
   14000e3e6:	psubd  mm1,QWORD PTR [rbx+rbx*2-0x76]
   14000e3eb:	shl    DWORD PTR [rcx+rax*2-0x6fedb1f4],0xd7
   14000e3f3:	jrcxz  0x14000e3bf
   14000e3f5:	(bad)  [rbx-0x717b303b]
   14000e3fb:	xor    eax,DWORD PTR [rcx]
   14000e3fd:	fist   WORD PTR [rdi+0x13999ea5]
   14000e403:	imul   dl
   14000e405:	mov    DWORD PTR [rax+riz*2-0x69],ecx
   14000e409:	jne    0x14000e45f
   14000e40b:	out    dx,eax
   14000e40c:	mov    ebx,0x1affe90f
   14000e411:	add    r10,QWORD PTR [r10+0x4cb82cd]
   14000e418:	sub    BYTE PTR [rsi],al
   14000e41a:	adc    al,BYTE PTR [rsi]
   14000e41c:	and    eax,0x2888a44c
   14000e421:	and    DWORD PTR [rax],ebp
   14000e423:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e424:	(bad)  
   14000e425:	sub    cl,bl
   14000e427:	retf   0x2b00
   14000e42a:	(bad)  
   14000e42b:	cli    
   14000e42c:	jb     0x14000e493
   14000e42e:	ins    DWORD PTR es:[rdi],dx
   14000e42f:	test   ch,ch
   14000e431:	rex.X xchg esi,eax
   14000e433:	rex.WRX jg 0x14000e457
   14000e436:	rex.B adc eax,0xf3f22770
   14000e43c:	(bad)  
   14000e43d:	icebp  
   14000e43e:	in     al,0xd5
   14000e440:	cs (bad) 
   14000e442:	test   al,0x87
   14000e444:	pop    rdi
   14000e445:	xchg   esp,eax
   14000e446:	mov    edi,0x23f48e87
   14000e44b:	pop    rcx
   14000e44c:	sbb    al,0x13
   14000e44e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e44f:	(bad)
   14000e453:	jmp    0x14000e4a6
   14000e455:	sbb    eax,0xd6f29890
   14000e45a:	or     ebp,ebx
   14000e45c:	(bad)  
   14000e45d:	adc    ch,BYTE PTR [rsi+0x437c1cd3]
   14000e463:	mov    esp,0x5d2411a6
   14000e468:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e469:	(bad)  
   14000e46a:	clc    
   14000e46b:	sbb    al,BYTE PTR [rdx+0x78]
   14000e46e:	mov    cl,0xb8
   14000e470:	sbb    ch,BYTE PTR [rbp-0x65]
   14000e473:	mov    BYTE PTR [rax+0x4c180dc8],ch
   14000e479:	cvtpi2ps xmm5,QWORD PTR [rsi-0x15]
   14000e47d:	(bad)  
   14000e47e:	sbb    eax,DWORD PTR [rcx]
   14000e480:	rex.WR (bad) 
   14000e482:	lods   al,BYTE PTR ds:[rsi]
   14000e483:	popf   
   14000e484:	sub    DWORD PTR [rbp+rbx*4-0xfe2e5ff],0xe0e031e2
   14000e48f:	in     eax,dx
   14000e490:	rex fiadd DWORD PTR [rsi-0x78]
   14000e494:	pop    rdi
   14000e495:	push   rax
   14000e496:	or     al,0x32
   14000e498:	xchg   esi,eax
   14000e499:	sbb    DWORD PTR [rax-0x71499f2f],ecx
   14000e49f:	rex.XB add ebp,DWORD PTR [r13-0x67]
   14000e4a3:	add    BYTE PTR [rbx-0x5e33af0],bl
   14000e4a9:	(bad)
   14000e4ac:	mov    BYTE PTR [rax+0x7d],al
   14000e4af:	retf   
   14000e4b0:	(bad)  
   14000e4b1:	push   rbx
   14000e4b2:	call   QWORD PTR [rdx]
   14000e4b4:	out    0xc0,al
   14000e4b6:	sbb    eax,0xd6cb3c58
   14000e4bb:	mov    bh,0xe1
   14000e4bd:	add    BYTE PTR [rax],al
   14000e4bf:	and    BYTE PTR [rax],al
   14000e4c1:	rex.WB
   14000e4c2:	rex.R
   14000e4c3:	push   r12
   14000e4c5:	js     0x14000e542
   14000e4c7:	repnz fiadd WORD PTR [rdi]
   14000e4ca:	out    dx,eax
   14000e4cb:	imul   edi,DWORD PTR [rsi+rdi*8],0x3f230bc4
   14000e4d2:	xchg   edi,eax
   14000e4d3:	imul   esi,DWORD PTR [rsi+rax*2+0x4963d5b6],0x26286994
   14000e4de:	loop   0x14000e496
   14000e4e0:	and    DWORD PTR [rdx+rax*1-0x7b0750da],esp
   14000e4e7:	xlat   BYTE PTR ds:[rbx]
   14000e4e8:	rex.RX (bad) 
   14000e4ea:	(bad)  
   14000e4eb:	movsxd esp,DWORD PTR fs:[rax-0x27100bda]
   14000e4f2:	xor    al,0xe2
   14000e4f4:	fcomp  QWORD PTR [rax+rax*8-0x4d]
   14000e4f8:	nop
   14000e4f9:	retf   0x7b8b
   14000e4fc:	xchg   ebp,eax
   14000e4fd:	adc    al,0x5c
   14000e4ff:	sbb    dh,BYTE PTR [rbx-0xd]
   14000e502:	jae    0x14000e4a6
   14000e504:	jmp    0x14000e508
   14000e506:	xlat   BYTE PTR ds:[rbx]
   14000e507:	test   BYTE PTR [rcx],al
   14000e509:	sub    BYTE PTR [rdx-0x5f76606e],dh
   14000e50f:	mov    BYTE PTR [rax-0xcfa3ed0],dl
   14000e515:	mov    al,0xdf
   14000e517:	pop    rcx
   14000e518:	out    0xca,eax
   14000e51a:	add    BYTE PTR [rdi+0x4e],dl
   14000e51d:	outs   dx,DWORD PTR ds:[rsi]
   14000e51e:	leave  
   14000e51f:	stc    
   14000e520:	jle    0x14000e530
   14000e522:	mov    edi,0x2618ef83
   14000e527:	adc    edi,DWORD PTR [rdi-0xb7f0719]
   14000e52d:	(bad)  
   14000e52e:	icebp  
   14000e52f:	int3   
   14000e530:	retf   
   14000e531:	sub    esp,DWORD PTR [rax]
   14000e533:	push   0xffffffffffffffe2
   14000e535:	(bad)  
   14000e536:	in     al,0xf3
   14000e538:	cmp    BYTE PTR [rsi],ch
   14000e53a:	out    0x1,eax
   14000e53c:	rex.R
   14000e53d:	rex.X (bad) 
   14000e53f:	fcomi  st,st(3)
   14000e541:	adc    eax,0xf40ed755
   14000e546:	(bad)  
   14000e547:	lods   eax,DWORD PTR ds:[rsi]
   14000e548:	mov    esi,0x721403f7
   14000e54d:	js     0x14000e521
   14000e54f:	fsub   DWORD PTR [rcx-0x21]
   14000e552:	add    BYTE PTR [rax],ah
   14000e554:	pop    rdx
   14000e555:	add    eax,0x712b1108
   14000e55a:	or     DWORD PTR [rsi],ebp
   14000e55c:	push   rax
   14000e55d:	(bad)  
   14000e55e:	mov    al,0xb9
   14000e560:	(bad)  
   14000e561:	pushf  
   14000e562:	sub    BYTE PTR [rbp-0x58a4920c],cl
   14000e568:	rex.B pushf 
   14000e56a:	sub    cl,ah
   14000e56c:	adc    esp,DWORD PTR [rax-0x64]
   14000e56f:	sbb    eax,0xb81cbcb8
   14000e574:	push   0xffffffff816e58f3
   14000e579:	(bad)  
   14000e57a:	(bad)  
   14000e57c:	clc    
   14000e57d:	add    dh,BYTE PTR [rax-0x1b]
   14000e580:	add    eax,0x7008f770
   14000e585:	loopne 0x14000e5bf
   14000e587:	mov    al,0x78
   14000e589:	int3   
   14000e58a:	jae    0x14000e5ec
   14000e58c:	mov    al,bl
   14000e58e:	stc    
   14000e58f:	adc    al,0x11
   14000e591:	add    eax,0x99c30682
   14000e596:	(bad)  
   14000e597:	rex.RX sbb eax,0xffffffd8
   14000e59b:	rex.W
   14000e59c:	rex.R xlat BYTE PTR ds:[rbx]
   14000e59e:	mov    dh,0xaa
   14000e5a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e5a1:	adc    edi,DWORD PTR [rdi+0x22]
   14000e5a4:	jmp    0x14000e529
   14000e5a6:	mov    edi,0x1f901bf2
   14000e5ab:	call   FWORD PTR [rdi-0x18]
   14000e5ae:	out    0x43,al
   14000e5b0:	mov    ecx,ebp
   14000e5b2:	cmp    ebp,edi
   14000e5b4:	mov    esp,0xe2f4bf49
   14000e5b9:	add    eax,0x6b431e9b
   14000e5be:	sbb    BYTE PTR [rax],cl
   14000e5c0:	jmp    0xd1965392
   14000e5c5:	xor    al,ah
   14000e5c7:	or     ah,BYTE PTR [rsi+0x4944a2c9]
   14000e5cd:	adc    al,0x2c
   14000e5cf:	rex.R add al,0x9f
   14000e5d2:	mov    ebx,0x8b1e3edc
   14000e5d7:	or     eax,0xb4d0428f
   14000e5dc:	rex.WXB (bad) 
   14000e5de:	shr    BYTE PTR [rbx+0x604d14c0],1
   14000e5e4:	sahf   
   14000e5e5:	(bad)  
   14000e5e6:	(bad)  
   14000e5e7:	cmc    
   14000e5e8:	outs   dx,DWORD PTR ds:[rsi]
   14000e5e9:	lahf   
   14000e5ea:	jrcxz  0x14000e586
   14000e5ec:	xor    BYTE PTR [rax+0x8f77bc4],al
   14000e5f2:	push   rax
   14000e5f3:	sub    al,0x71
   14000e5f5:	mov    eax,0x648eaca6
   14000e5fa:	jrcxz  0x14000e5e1
   14000e5fc:	xor    eax,0xa9a07273
   14000e601:	pop    rdi
   14000e602:	xchg   edx,eax
   14000e603:	call   0xe0cbfb16
   14000e608:	clc    
   14000e609:	(bad)  
   14000e60a:	xchg   ebp,eax
   14000e60b:	and    eax,DWORD PTR [rdx]
   14000e60d:	movabs al,ds:0xc258faa93d4fd380
   14000e616:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e617:	int3   
   14000e618:	mov    edi,0x5df1fbc1
   14000e61d:	jmp    0x14000e644
   14000e61f:	neg    esi
   14000e621:	std    
   14000e622:	fdiv   DWORD PTR [rbx-0x71]
   14000e625:	ret    0x2dae
   14000e628:	or     BYTE PTR [rbx+0x12afadec],bh
   14000e62e:	pushf  
   14000e62f:	push   rbp
   14000e630:	adc    BYTE PTR [rax],bl
   14000e632:	rex.W fidiv DWORD PTR [rsi]
   14000e635:	mov    eax,0x2b0ed1a7
   14000e63a:	add    al,BYTE PTR [rbx+0x24]
   14000e63d:	(bad)  
   14000e63e:	shr    esi,1
   14000e640:	(bad)  
   14000e641:	xchg   eax,ebp
   14000e643:	or     al,0x50
   14000e645:	(bad)  
   14000e646:	sbb    ebp,DWORD PTR [rdi]
   14000e648:	es ja  0x14000e61e
   14000e64b:	jno    0x14000e662
   14000e64d:	cmp    DWORD PTR [rdi],esp
   14000e64f:	test   DWORD PTR [rdx-0x357261e1],ecx
   14000e655:	rex.R pop rdi
   14000e657:	int3   
   14000e658:	and    al,al
   14000e65a:	imul   eax,DWORD PTR [rbx],0xa70a51fe
   14000e660:	gs mov ch,0x5f
   14000e663:	(bad)  
   14000e664:	add    cl,bl
   14000e666:	mov    edx,0x2bed902
   14000e66b:	test   al,0xef
   14000e66d:	(bad)  
   14000e66e:	xchg   edi,eax
   14000e66f:	out    dx,eax
   14000e670:	add    dl,BYTE PTR [rsi+0x4a904ef]
   14000e676:	xor    BYTE PTR [rbp+0x1c],0x42
   14000e67a:	sub    DWORD PTR [rax+0x1a400933],ecx
   14000e680:	fs xor al,0x4
   14000e683:	cmp    DWORD PTR [rsp+rbp*1+0x268c022e],ebp
   14000e68a:	or     DWORD PTR [rbp+0x2],ecx
   14000e68d:	and    BYTE PTR [rcx+0x1f],bh
   14000e690:	hlt    
   14000e691:	cmc    
   14000e692:	fild   WORD PTR [rip+0xffffffffd2afc8fd]        # 0x112b0af95
   14000e698:	std    
   14000e699:	ja     0x14000e678
   14000e69b:	fcomp  DWORD PTR [rsi+0x5b]
   14000e69e:	fucomip st,st(2)
   14000e6a0:	lods   eax,DWORD PTR ds:[rsi]
   14000e6a1:	lods   eax,DWORD PTR ds:[rsi]
   14000e6a2:	outs   dx,BYTE PTR ds:[rsi]
   14000e6a3:	sbb    DWORD PTR [rcx],eax
   14000e6a5:	add    DWORD PTR [rsi-0x38],eax
   14000e6a8:	mov    WORD PTR [rsi-0x5c],es
   14000e6ab:	mov    bh,0xb6
   14000e6ad:	adc    bl,BYTE PTR [rbp+0xa425924]
   14000e6b3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e6b4:	rex.B (bad) 
   14000e6b6:	cwde   
   14000e6b7:	pop    rcx
   14000e6b8:	or     ah,BYTE PTR [rbp-0x29c0438]
   14000e6be:	movabs ds:0x4be852c7f6c2304d,al
   14000e6c7:	scas   eax,DWORD PTR es:[rdi]
   14000e6c8:	jge    0x14000e6b4
   14000e6ca:	ins    DWORD PTR es:[rdi],dx
   14000e6cb:	ficom  WORD PTR [rax-0x1c]
   14000e6ce:	lock jl 0x14000e6e4
   14000e6d1:	ins    BYTE PTR es:[rdi],dx
   14000e6d2:	mov    esi,0x3fea8fd
   14000e6d7:	xlat   BYTE PTR ds:[rbx]
   14000e6d8:	mov    al,BYTE PTR [rcx]
   14000e6da:	clc    
   14000e6db:	cmp    DWORD PTR [rbp+0x2f53b862],edi
   14000e6e1:	xchg   ebx,eax
   14000e6e2:	in     al,dx
   14000e6e3:	in     eax,0xad
   14000e6e5:	sar    ecx,1
   14000e6e7:	mov    ecx,gs
   14000e6e9:	je     0x14000e70e
   14000e6eb:	rex.WRB
   14000e6ec:	rex.RX jle 0x14000e710
   14000e6ef:	(bad)  
   14000e6f0:	fadd   st(4),st
   14000e6f2:	(bad)  
   14000e6f3:	(bad)
   14000e6f6:	mov    al,0x79
   14000e6f8:	bnd jmp 0x14000e6d8
   14000e6fb:	rex.WXB jp 0x14000e707
   14000e6fe:	outs   dx,DWORD PTR ds:[rsi]
   14000e6ff:	(bad)  
   14000e700:	repz js 0x14000e747
   14000e703:	(bad)  
   14000e704:	adc    BYTE PTR [rsi-0x2f],bh
   14000e707:	scas   eax,DWORD PTR es:[rdi]
   14000e708:	add    al,0x29
   14000e70a:	in     al,dx
   14000e70b:	(bad)  
   14000e70c:	ins    BYTE PTR es:[rdi],dx
   14000e70d:	pop    rdi
   14000e70e:	fld    DWORD PTR [rdx+rax*1]
   14000e711:	mov    dl,BYTE PTR [rcx+0x3a]
   14000e714:	xchg   edi,eax
   14000e715:	mov    dh,0x81
   14000e717:	mov    BYTE PTR [rcx+0xc],0x6e
   14000e71b:	jl     0x14000e725
   14000e71d:	mov    DWORD PTR [rcx],ebx
   14000e71f:	rex.B (bad) 
   14000e721:	mov    dh,0xa4
   14000e723:	fnstcw WORD PTR [rdi+0x7ff9614]
   14000e729:	add    eax,0xcd939c59
   14000e72e:	cmp    BYTE PTR [rdx+0x47a01932],al
   14000e734:	or     dh,0x0
   14000e737:	popf   
   14000e738:	add    esp,DWORD PTR [rsi]
   14000e73a:	jae    0x14000e6ff
   14000e73c:	pop    rbx
   14000e73d:	sbb    edx,DWORD PTR es:[rdi+0x35e651d5]
   14000e744:	add    DWORD PTR [rdi],ebx
   14000e746:	sbb    ah,ch
   14000e748:	mov    dl,dl
   14000e74a:	cli    
   14000e74b:	sub    BYTE PTR [rax-0x14],ch
   14000e74e:	push   rdx
   14000e74f:	add    BYTE PTR [rcx+0x42],dl
   14000e752:	push   rcx
   14000e753:	ja     0x14000e783
   14000e755:	retf   
   14000e756:	movabs eax,ds:0x783a0f3d2e049d2f
   14000e75f:	sub    edi,eax
   14000e761:	enter  0x40bd,0xda
   14000e765:	add    DWORD PTR [rax],esp
   14000e767:	add    BYTE PTR ss:[rbx-0x28],al
   14000e76b:	(bad)  
   14000e76c:	(bad)  
   14000e76d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e76e:	rol    esp,0x10
   14000e771:	jrcxz  0x14000e7a7
   14000e773:	add    ch,BYTE PTR [rax+0x4]
   14000e776:	ja     0x14000e7bd
   14000e778:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e779:	xchg   edi,eax
   14000e77a:	add    bl,BYTE PTR [rdi-0x7e186a4]
   14000e780:	(bad)  
   14000e781:	inc    DWORD PTR [rbp-0x6b003e0c]
   14000e787:	fcomip st,st(7)
   14000e789:	scas   al,BYTE PTR es:[rdi]
   14000e78a:	cmp    ebx,DWORD PTR [rbx-0x408005a1]
   14000e790:	fcomi  st,st(7)
   14000e792:	xlat   BYTE PTR ds:[rbx]
   14000e793:	xor    al,0xeb
   14000e796:	rcl    DWORD PTR [rax],1
   14000e798:	pop    rcx
   14000e799:	outs   dx,DWORD PTR ds:[rsi]
   14000e79a:	rex.WXB push r9
   14000e79c:	movabs ds:0x8f0990d4a0362944,al
   14000e7a5:	rex.X and BYTE PTR [rdi-0xd],al
   14000e7a9:	xchg   esi,eax
   14000e7aa:	sub    DWORD PTR [rax],esi
   14000e7ac:	mov    al,BYTE PTR [rax+0x42]
   14000e7af:	call   FWORD PTR [rax-0x7e]
   14000e7b2:	stc    
   14000e7b3:	and    bl,BYTE PTR [rcx]
   14000e7b5:	rex.WX pop rbp
   14000e7b7:	pop    rcx
   14000e7b8:	imul   ebp,DWORD PTR [rcx],0x81305d80
   14000e7be:	sbb    DWORD PTR [rbp-0xa],eax
   14000e7c1:	and    edx,DWORD PTR [rbx]
   14000e7c3:	mov    eax,0x5d800c26
   14000e7c8:	mov    BYTE PTR [rdi],bl
   14000e7ca:	enter  0xe946,0x9d
   14000e7ce:	pop    rbx
   14000e7cf:	int    0xf4
   14000e7d1:	ficom  DWORD PTR [rax+0x36]
   14000e7d4:	pop    rdx
   14000e7d5:	int    0x46
   14000e7d7:	(bad)  
   14000e7d8:	jmp    0xc454d3df
   14000e7dd:	rex.RB popf 
   14000e7df:	(bad)  
   14000e7e0:	mov    DWORD PTR [rbx+rbp*4],esi
   14000e7e3:	push   0xffffffffffffffbf
   14000e7e5:	(bad)  
   14000e7e6:	xchg   esi,eax
   14000e7e7:	pop    rdi
   14000e7e8:	jns    0x14000e853
   14000e7ea:	stc    
   14000e7eb:	(bad)  
   14000e7ec:	mov    BYTE PTR [rdx-0x4e],0x40
   14000e7f0:	cmp    eax,0x7f992fc
   14000e7f5:	mov    cl,0xce
   14000e7f7:	(bad)  
   14000e7f9:	rex.WRB out 0x8f,eax
   14000e7fc:	(bad)  
   14000e7fd:	cli    
   14000e7fe:	lods   al,BYTE PTR ds:[rsi]
   14000e7ff:	xor    DWORD PTR [rcx-0x22],r9d
   14000e803:	rex.WRXB loopne 0x14000e788
   14000e806:	add    eax,DWORD PTR [rdx]
   14000e808:	push   rcx
   14000e809:	gs (bad) 
   14000e80b:	jge    0x14000e7dd
   14000e80d:	xor    al,0xde
   14000e80f:	sti    
   14000e810:	pop    rcx
   14000e811:	out    0xe3,al
   14000e813:	(bad)  
   14000e814:	mov    BYTE PTR [rbp-0x33bbee5e],al
   14000e81a:	rcl    BYTE PTR [rbp-0x3626f99],0x33
   14000e821:	xor    DWORD PTR [rbx-0x71],0xffffff83
   14000e825:	hlt    
   14000e826:	add    cl,0x7e
   14000e829:	cmp    eax,0x1280240
   14000e82e:	cdq    
   14000e82f:	(bad)  
   14000e830:	movabs al,ds:0x4007a021e819965a
   14000e839:	sahf   
   14000e83a:	fnstenv [rbp+0x3dc26206]
   14000e840:	rex.WB movabs ds:0x79e0c9bd79f8c428,al
   14000e84a:	sbb    BYTE PTR [rdx+0x5306b132],cl
   14000e850:	int3   
   14000e851:	xchg   ebp,eax
   14000e852:	jnp    0x14000e89a
   14000e854:	push   rsp
   14000e855:	jmp    0x150ebf98e
   14000e85a:	pop    rsp
   14000e85b:	jg     0x14000e876
   14000e85d:	jp     0x14000e84c
   14000e85f:	rol    BYTE PTR gs:[rcx-0x85c1f1d],1
   14000e866:	add    ch,BYTE PTR [rcx-0x29]
   14000e869:	cmp    esi,DWORD PTR ds:[rcx]
   14000e86c:	test   BYTE PTR [rsp+rax*4],dl
   14000e86f:	xchg   ebp,eax
   14000e870:	movsxd ebx,DWORD PTR [rsi+0x79]
   14000e873:	movabs eax,ds:0xfeb8bcea504638cd
   14000e87c:	(bad)  
   14000e87d:	(bad)  
   14000e87e:	sbb    al,0xb8
   14000e880:	in     eax,0x7d
   14000e882:	call   0x124f7d965
   14000e887:	fucomp st(7)
   14000e889:	mov    esi,0x93cefd3b
   14000e88e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e88f:	xor    al,BYTE PTR [rax]
   14000e891:	(bad)  
   14000e892:	mov    cl,0x98
   14000e894:	mov    bl,0xe9
   14000e896:	cmc    
   14000e897:	xchg   ebx,eax
   14000e898:	pop    rsp
   14000e899:	and    eax,0xc51124a0
   14000e89e:	pushf  
   14000e89f:	or     esp,DWORD PTR [rdi]
   14000e8a1:	test   edx,eax
   14000e8a3:	in     eax,0x3b
   14000e8a5:	fsubr  st(6),st
   14000e8a7:	xchg   BYTE PTR [rdi],dh
   14000e8a9:	(bad)  
   14000e8aa:	cs mov al,0x91
   14000e8ad:	sahf   
   14000e8ae:	rex.WRX shl QWORD PTR [rcx],1
   14000e8b1:	(bad)  
   14000e8b2:	out    dx,al
   14000e8b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e8b4:	sbb    al,0x5a
   14000e8b6:	xor    eax,0x999af1b
   14000e8bb:	mov    ebp,ss
   14000e8bd:	and    edx,DWORD PTR [rbx]
   14000e8bf:	mov    gs,ebp
   14000e8c1:	subps  xmm4,XMMWORD PTR [rbx-0x5769ff4b]
   14000e8c8:	ss (bad) 
   14000e8ca:	(bad)  
   14000e8cb:	addr32 (bad) 
   14000e8cd:	rex.RX
   14000e8ce:	es (bad) 
   14000e8d0:	shr    BYTE PTR [rcx-0x5e],1
   14000e8d3:	(bad)  
   14000e8d4:	rex.XB (bad) 
   14000e8d6:	and    eax,0xd2a0ab88
   14000e8db:	rex.WRXB call 0x186e852d1
   14000e8e1:	pop    rcx
   14000e8e2:	fidivr WORD PTR [rax-0x17]
   14000e8e5:	in     al,dx
   14000e8e6:	mov    ecx,0xf8ba883b
   14000e8eb:	add    eax,0xa5b479f3
   14000e8f0:	pop    rdi
   14000e8f1:	push   rax
   14000e8f2:	test   BYTE PTR [rdi+0x501665fa],dl
   14000e8f8:	scas   al,BYTE PTR es:[rdi]
   14000e8f9:	shr    cl,1
   14000e8fb:	(bad)  
   14000e8fc:	and    DWORD PTR [rbp+0x48],ecx
   14000e8ff:	in     al,0x24
   14000e901:	shl    BYTE PTR [rdi+0x7d],1
   14000e904:	shl    BYTE PTR [rsi+rdi*8-0x64e4a07d],cl
   14000e90b:	cmp    DWORD PTR [rdx-0x5b],esp
   14000e90e:	ror    BYTE PTR [rcx+0xa],0x1c
   14000e912:	jnp    0x14000e933
   14000e914:	(bad)  
   14000e915:	mov    cl,0xf7
   14000e917:	xor    DWORD PTR [rsi-0x2c2e7a5],eax
   14000e91d:	and    r9d,DWORD PTR [r15-0x1]
   14000e921:	sub    ecx,DWORD PTR [rsi]
   14000e923:	or     esp,0x80138020
   14000e929:	lods   eax,DWORD PTR ds:[rsi]
   14000e92a:	(bad)  
   14000e92b:	sahf   
   14000e92c:	push   rsp
   14000e92d:	or     bl,BYTE PTR [rax-0x67fc3fda]
   14000e933:	mov    esp,0x6881196f
   14000e938:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e939:	leave  
   14000e93a:	rex.R inc BYTE PTR [rdi-0x3a00b2e]
   14000e941:	or     DWORD PTR [rsp+rbp*8+0x780d9ec2],eax
   14000e948:	xchg   ebx,eax
   14000e949:	add    BYTE PTR [rax],cl
   14000e94b:	out    0x8d,al
   14000e94d:	out    0x19,eax
   14000e94f:	and    ebp,ebp
   14000e951:	(bad)  
   14000e952:	fs (bad) 
   14000e954:	(bad)  
   14000e955:	fnstsw WORD PTR [rbx-0x3]
   14000e958:	or     al,0xcc
   14000e95a:	cli    
   14000e95b:	sbb    DWORD PTR [rax-0xf],esp
   14000e95e:	(bad)  
   14000e95f:	lock or eax,0xb1a41f7
   14000e965:	rex.WRX stc 
   14000e967:	es imul esp,esi,0x10
   14000e96b:	pop    rbx
   14000e96c:	mov    bl,0x80
   14000e96e:	jb     0x14000e91b
   14000e970:	and    DWORD PTR [rax-0x20fca7],edi
   14000e976:	(bad)  
   14000e977:	cmp    cl,ah
   14000e979:	sti    
   14000e97a:	movabs r14,0x6dd36fea7e48bbfa
   14000e984:	(bad)  
   14000e985:	sbb    al,0x68
   14000e987:	popf   
   14000e988:	mov    edi,0xb95f5969
   14000e98d:	mov    eax,0xa2d07c6a
   14000e992:	in     al,0x9a
   14000e994:	rex.WRB movabs r15,0x935444e2152374af
   14000e99e:	mov    ch,0x10
   14000e9a0:	mov    edi,DWORD PTR [rbp-0x2eca06e3]
   14000e9a6:	sahf   
   14000e9a7:	push   rbx
   14000e9a8:	pop    rbx
   14000e9a9:	rex.RX loopne 0x14000ea26
   14000e9ac:	scas   eax,DWORD PTR es:[rdi]
   14000e9ad:	(bad)  
   14000e9ae:	add    dh,cl
   14000e9b0:	sub    BYTE PTR [rdx-0x3fb31cf1],bl
   14000e9b6:	rdpmc  
   14000e9b8:	fld    DWORD PTR [rbp+0x2d]
   14000e9bb:	xchg   ebx,eax
   14000e9bc:	jmp    0x14000e996
   14000e9be:	rex.WRXB cdqe 
   14000e9c0:	imul   ebx,DWORD PTR [rdx-0xc],0xffffffb5
   14000e9c4:	add    BYTE PTR [rbp+r11*2-0x6a020f33],bl
   14000e9cc:	and    DWORD PTR [rdx],esi
   14000e9ce:	and    eax,DWORD PTR [rsp+riz*8-0x2e]
   14000e9d2:	jrcxz  0x14000e9d4
   14000e9d4:	add    BYTE PTR [rax-0x5a],cl
   14000e9d7:	in     eax,dx
   14000e9d8:	(bad)  
   14000e9d9:	pop    rsp
   14000e9da:	and    eax,0x6086b2fe
   14000e9df:	mov    cl,0x7a
   14000e9e1:	loop   0x14000ea4e
   14000e9e3:	(bad)  
   14000e9e4:	pop    rbx
   14000e9e5:	xchg   edi,eax
   14000e9e6:	cs mov edi,0x43c29e5f
   14000e9ec:	repnz push rsp
   14000e9ee:	jo     0x14000ea50
   14000e9f0:	push   rcx
   14000e9f1:	jmp    0xd5094ce0
   14000e9f6:	pop    QWORD PTR [rdi]
   14000e9f8:	push   0x29
   14000e9fa:	or     bh,bl
   14000e9fc:	jns    0x14000e9c1
   14000e9fe:	repz and ecx,DWORD PTR [rdi]
   14000ea01:	out    0x8d,al
   14000ea03:	sub    dh,cl
   14000ea05:	adc    eax,eax
   14000ea07:	pushf  
   14000ea08:	adc    BYTE PTR [rdx+0x622f2514],0x73
   14000ea0f:	add    DWORD PTR [rbp-0x7238c179],ecx
   14000ea15:	rex.WRXB (bad) 
   14000ea17:	pop    rbp
   14000ea18:	cwde   
   14000ea19:	test   DWORD PTR [rbx+0x75],ebx
   14000ea1c:	loope  0x14000e9f1
   14000ea1e:	rol    BYTE PTR es:[rbp-0x16],0x81
   14000ea23:	push   rbx
   14000ea24:	mov    bpl,0x20
   14000ea27:	lea    eax,[rbp+0x70]
   14000ea2a:	jae    0x14000ea35
   14000ea2c:	xchg   esp,eax
   14000ea2d:	mov    dh,0x1
   14000ea2f:	xchg   ebp,eax
   14000ea30:	pop    rdx
   14000ea31:	cmc    
   14000ea32:	rex.W in al,dx
   14000ea34:	rex.X and cl,bl
   14000ea37:	ja     0x14000ea35
   14000ea39:	rex jne 0x14000ea31
   14000ea3c:	jnp    0x14000eaa9
   14000ea3e:	fcom   DWORD PTR [rbx+0x3]
   14000ea41:	adc    eax,0x58fc42a9
   14000ea46:	(bad)  
   14000ea47:	add    edx,DWORD PTR [rdx+rsi*8]
   14000ea4a:	rcl    BYTE PTR [rdx-0x5a],cl
   14000ea4d:	ja     0x14000ea9a
   14000ea4f:	(bad)  
   14000ea50:	cld    
   14000ea51:	or     BYTE PTR [rsi-0x37a48868],ch
   14000ea57:	(bad)  
   14000ea58:	cmp    eax,ebp
   14000ea5a:	(bad)  
   14000ea5b:	inc    BYTE PTR [rdx]
   14000ea5d:	out    0xdc,al
   14000ea5f:	adc    eax,eax
   14000ea61:	test   al,0xf
   14000ea63:	mov    ebx,0x8c729053
   14000ea68:	sub    eax,DWORD PTR [rip+0xdc40354]        # 0x14dc4edc2
   14000ea6e:	sbb    esi,DWORD PTR [rdx-0x54]
   14000ea71:	xchg   esp,eax
   14000ea72:	jrcxz  0x14000ea49
   14000ea74:	push   rsp
   14000ea75:	in     al,dx
   14000ea76:	xchg   esp,ebp
   14000ea78:	mov    ch,0x93
   14000ea7a:	lods   al,BYTE PTR ds:[rsi]
   14000ea7b:	psllq  mm3,mm0
   14000ea7e:	(bad)  
   14000ea7f:	add    al,BYTE PTR [rbx-0x2d]
   14000ea82:	rex.XB out dx,eax
   14000ea84:	mov    eax,0xca2495bd
   14000ea89:	sub    ebx,DWORD PTR [rdi-0x80]
   14000ea8c:	sbb    BYTE PTR [rax-0x205939af],bl
   14000ea92:	push   rdi
   14000ea93:	xor    ch,dl
   14000ea95:	sub    edx,ecx
   14000ea97:	cdq    
   14000ea98:	(bad)  
   14000ea99:	mov    bh,0xb6
   14000ea9b:	xor    dh,ah
   14000ea9d:	movabs al,ds:0xd886bcec6230c60d
   14000eaa6:	pop    rcx
   14000eaa7:	add    DWORD PTR [rdi-0x9bdecec],esi
   14000eaad:	(bad)  
   14000eaae:	mov    WORD PTR [rip+0xc756bc6],ds        # 0x14c76567a
   14000eab4:	rex.WRB (bad) 
   14000eab6:	push   rbx
   14000eab7:	xor    edx,DWORD PTR [rcx+rcx*1-0x55323477]
   14000eabe:	movsxd edi,DWORD PTR [rdi-0x20]
   14000eac1:	(bad)  
   14000eac2:	xor    BYTE PTR [rax-0x47f968ed],al
   14000eac8:	shl    bl,cl
   14000eaca:	fst    DWORD PTR [rdx+0x79897005]
   14000ead0:	add    al,0xc2
   14000ead2:	adc    BYTE PTR [rsi+rdx*4-0x44db06e],0xfd
   14000eada:	sub    edx,0x2ff3cdb9
   14000eae0:	fnsave [rsi+0x6a]
   14000eae3:	stos   DWORD PTR es:[rdi],eax
   14000eae4:	jae    0x14000eb2d
   14000eae6:	xchg   edi,eax
   14000eae7:	cli    
   14000eae8:	clc    
   14000eae9:	add    eax,0xf2f779fd
   14000eaee:	cld    
   14000eaef:	sub    esi,DWORD PTR [rsi+0x12]
   14000eaf2:	adc    ecx,esi
   14000eaf4:	xor    DWORD PTR [rdi+rcx*2+0x10fe79a9],ecx
   14000eafb:	fxch   st(6)
   14000eafd:	and    al,BYTE PTR [rax-0xd]
   14000eb00:	jrcxz  0x14000eac1
   14000eb02:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000eb04:	sbb    eax,0xa9483111
   14000eb09:	test   eax,0xdc8e8003
   14000eb0e:	mov    esi,esi
   14000eb10:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000eb11:	dec    BYTE PTR [rdi]
   14000eb13:	rex.RB out dx,eax
   14000eb15:	jl     0x14000eadb
   14000eb17:	add    al,0x2a
   14000eb19:	sub    ebx,DWORD PTR [rdx]
   14000eb1b:	outs   dx,DWORD PTR ds:[rsi]
   14000eb1c:	or     DWORD PTR [rbx+rdx*1+0x2e6853eb],ecx
   14000eb23:	add    ch,BYTE PTR [rcx+0x17]
   14000eb26:	movabs ds:0x90c73fa9d895109a,al
   14000eb2f:	cmp    al,0xf1
   14000eb31:	(bad)  
   14000eb32:	rex.WX scas rax,QWORD PTR es:[rdi]
   14000eb34:	(bad)  
   14000eb35:	pop    rsp
   14000eb36:	sti    
   14000eb37:	out    0x3,eax
   14000eb39:	mov    BYTE PTR [rdx-0x230eab7e],cl
   14000eb3f:	(bad)  
   14000eb40:	ins    DWORD PTR es:[rdi],dx
   14000eb41:	hlt    
   14000eb42:	movabs ds:0xb3b592ca9d59d7d5,al
   14000eb4b:	xor    bh,bl
   14000eb4d:	dec    DWORD PTR [rdx]
   14000eb4f:	in     al,0xd2
   14000eb51:	jae    0x14000eb63
   14000eb53:	xchg   ebx,eax
   14000eb54:	pop    rbx
   14000eb55:	or     eax,0x50659580
   14000eb5a:	retf   0x231
   14000eb5d:	push   0x0
   14000eb5f:	rex.WB or spl,BYTE PTR [r9]
   14000eb62:	adc    eax,0xe6029571
   14000eb67:	fcom   QWORD PTR [rbx]
   14000eb69:	nop
   14000eb6a:	mov    bl,0x4f
   14000eb6c:	movabs al,ds:0x1894dbfeefba9099
   14000eb75:	adc    ecx,esi
   14000eb77:	pop    rdx
   14000eb78:	cwde   
   14000eb79:	(bad)  
   14000eb7a:	fs (bad) 
   14000eb7c:	and    edx,esi
   14000eb7e:	std    
   14000eb7f:	mov    esi,0xc4a86c92
   14000eb84:	push   0xffffffffa4488005
   14000eb89:	cwde   
   14000eb8a:	enter  0x5e28,0x91
   14000eb8e:	adc    DWORD PTR [rax+0x57718111],ecx
   14000eb94:	sbb    esi,DWORD PTR [rcx+0x6b]
   14000eb97:	mov    dl,0xe7
   14000eb99:	mov    cl,0xe0
   14000eb9b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000eb9c:	xchg   edi,eax
   14000eb9d:	jns    0x14000ebb4
   14000eb9f:	push   0x3c
   14000eba1:	xchg   ebp,eax
   14000eba2:	ds rex.WX jne 0x14000eb92
   14000eba6:	(bad)  
   14000eba7:	pop    rdi
   14000eba8:	shl    BYTE PTR [rip+0x2dd50061],0x98        # 0x16dd5ec10
   14000ebaf:	add    BYTE PTR [rbx],ch
   14000ebb1:	jnp    0x14000eb7c
   14000ebb3:	in     eax,0xc5
   14000ebb5:	(bad)  
   14000ebb6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ebb7:	fiadd  WORD PTR [rdi-0x1b]
   14000ebba:	adc    bh,BYTE PTR es:[rdi]
   14000ebbd:	add    DWORD PTR [rax],edi
   14000ebbf:	jnp    0x14000ebab
   14000ebc1:	(bad)  
   14000ebc2:	jg     0x14000ec06
   14000ebc4:	add    al,0xfc
   14000ebc6:	lods   al,BYTE PTR ds:[rsi]
   14000ebc7:	stc    
   14000ebc8:	and    bh,BYTE PTR [rdx]
   14000ebca:	outs   dx,BYTE PTR ds:[rsi]
   14000ebcb:	jne    0x14000eb6c
   14000ebcd:	rex.RB hlt 
   14000ebcf:	movabs ds:0xe2fe8f7c0b1c20fc,al
   14000ebd8:	jrcxz  0x14000ebea
   14000ebda:	call   0xf465e362
   14000ebdf:	jo     0x14000ec54
   14000ebe1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ebe2:	and    esp,esp
   14000ebe4:	adc    cl,BYTE PTR [rsi]
   14000ebe6:	ror    ah,1
   14000ebe8:	(bad)  
   14000ebe9:	(bad)  
   14000ebea:	add    BYTE PTR [rbp+0x1b9e7e87],cl
   14000ebf0:	(bad)  
   14000ebf1:	icebp  
   14000ebf2:	ja     0x14000ec54
   14000ebf4:	xchg   esi,eax
   14000ebf5:	mov    gs,ebx
   14000ebf7:	(bad)  
   14000ebf8:	sub    dl,al
   14000ebfa:	adc    DWORD PTR [rip+0xffffffff9b894031],ecx        # 0xdb8a2c31
   14000ec00:	rex.WB call 0xe08c0788
   14000ec06:	(bad)  
   14000ec07:	push   0x3
   14000ec09:	rex.X jbe 0x14000ec76
   14000ec0c:	rcl    ebx,1
   14000ec0e:	(bad)  
   14000ec0f:	test   DWORD PTR [rsi+0x52],esi
   14000ec12:	xchg   ecx,eax
   14000ec13:	cmp    BYTE PTR [rax],cl
   14000ec15:	(bad)  
   14000ec16:	sahf   
   14000ec17:	test   esi,0x2cfcf4d
   14000ec1d:	sti    
   14000ec1e:	mov    cl,ah
   14000ec20:	hlt    
   14000ec21:	loop   0x14000ebf4
   14000ec23:	sub    edi,ebp
   14000ec25:	sbb    al,BYTE PTR [rdi+0x20863b1c]
   14000ec2b:	cmp    DWORD PTR es:[rcx-0x2b05ed84],0xffffff97
   14000ec33:	and    DWORD PTR [rbx-0x19],ebp
   14000ec36:	adc    BYTE PTR [rdi+rdx*1+0x48132c4a],dh
   14000ec3d:	push   rdx
   14000ec3e:	adc    bl,bl
   14000ec40:	(bad)  
   14000ec41:	jmp    0x14000ec2e
   14000ec43:	sub    dl,bh
   14000ec45:	rcl    edi,0xaf
   14000ec48:	lahf   
   14000ec49:	clc    
   14000ec4a:	out    0xa0,eax
   14000ec4c:	shl    DWORD PTR [rsi],1
   14000ec4e:	fnsave [rbx-0x14]
   14000ec51:	push   rax
   14000ec52:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ec53:	mov    ebp,0x970bb1d0
   14000ec58:	rex.RB (bad) 
   14000ec5a:	rol    al,0xe4
   14000ec5d:	sbb    DWORD PTR [rcx-0x3e66af3f],ebx
   14000ec63:	adc    BYTE PTR [rcx+0x61310c67],0x9d
   14000ec6a:	rex.RXB jns 0x14000ecb7
   14000ec6d:	push   rsi
   14000ec6e:	fdivr  QWORD PTR [rdi-0x37b7f672]
   14000ec74:	mov    bl,0x66
   14000ec76:	xchg   DWORD PTR fs:[rax+0x5e],ecx
   14000ec7a:	fbld   TBYTE PTR [rdx-0x56]
   14000ec7d:	sbb    al,0x8b
   14000ec7f:	sub    bl,BYTE PTR [rdi+0x6be4f975]
   14000ec85:	(bad)  
   14000ec86:	pop    rsi
   14000ec87:	mov    ch,0x44
   14000ec89:	call   FWORD PTR [rsi-0x1]
   14000ec8c:	mov    eax,0x80a00c26
   14000ec91:	(bad)  
   14000ec92:	(bad)  
   14000ec93:	cmp    DWORD PTR [rax],eax
   14000ec95:	js     0x14000ec70
   14000ec97:	test   dl,dh
   14000ec99:	mov    cl,0xe8
   14000ec9b:	jae    0x14000ec9f
   14000ec9d:	icebp  
   14000ec9e:	add    eax,eax
   14000eca0:	retf   
   14000eca1:	iret   
   14000eca2:	jl     0x14000ec9f
   14000eca4:	xchg   DWORD PTR [rdi],ebp
   14000eca6:	cwde   
   14000eca7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eca8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ecaa:	(bad)  
   14000ecab:	repz clc 
   14000ecad:	mov    BYTE PTR [rcx+0xc],bh
   14000ecb0:	in     eax,0x91
   14000ecb2:	pop    rdi
   14000ecb3:	(bad)  
   14000ecb4:	jns    0x14000ec93
   14000ecb6:	(bad)  
   14000ecb7:	xor    ecx,edx
   14000ecb9:	xchg   DWORD PTR [rax],ecx
   14000ecbb:	(bad)  
   14000ecbc:	or     DWORD PTR [rdx],ebp
   14000ecbe:	mov    dh,0x67
   14000ecc0:	adc    bh,BYTE PTR [rdi+riz*8+0x47]
   14000ecc4:	(bad)  
   14000ecc5:	cli    
   14000ecc6:	vmaxpd ymm9,ymm6,ymm7
   14000ecca:	sub    eax,0xbdc8e83e
   14000eccf:	push   0xffffffff8abbf23f
   14000ecd4:	fcomip st,st(5)
   14000ecd6:	sub    DWORD PTR [rbx],edx
   14000ecd8:	rex.R jp 0x14000ecc4
   14000ecdb:	or     DWORD PTR [rcx],ebx
   14000ecdd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ecde:	pop    rdx
   14000ecdf:	and    eax,0x16d2806d
   14000ece4:	ror    BYTE PTR [rcx],0x44
   14000ece7:	cmp    BYTE PTR [rax],dl
   14000ece9:	cmp    al,0x51
   14000eceb:	test   eax,0x100685d1
   14000ecf0:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000ecf2:	sar    BYTE PTR [rdx-0x15088b44],0x7f
   14000ecf9:	je     0x14000ed39
   14000ecfb:	(bad)  
   14000ecfc:	jbe    0x14000ecaa
   14000ecfe:	xor    al,BYTE PTR [rdx+rdx*2-0x33c14d0d]
   14000ed05:	stc    
   14000ed06:	(bad)  
   14000ed07:	(bad)  
   14000ed08:	rex.WRX jg 0x14000ed28
   14000ed0b:	sbb    BYTE PTR [rbp-0x45],ch
   14000ed0e:	addr32 out 0x60,al
   14000ed11:	adc    al,BYTE PTR [rax+0x25]
   14000ed14:	push   rsi
   14000ed15:	mov    esp,ecx
   14000ed17:	add    al,0xce
   14000ed19:	jno    0x14000ed2a
   14000ed1b:	jb     0x14000eca9
   14000ed1d:	rex.WXB mov r14b,0x57
   14000ed20:	movabs al,ds:0xf7c1f4d041bffe9f
   14000ed29:	fst    st(3)
   14000ed2b:	add    al,0x91
   14000ed2d:	xor    DWORD PTR [rdx],eax
   14000ed2f:	xor    DWORD PTR [rdx-0x3c],ebx
   14000ed32:	push   0x511c3d0d
   14000ed37:	sbb    BYTE PTR ds:[rax+0x46090e19],dh
   14000ed3e:	mov    ebx,0x3f360255
   14000ed43:	rex.R ror DWORD PTR [rax],0xa
   14000ed47:	adc    ecx,DWORD PTR [rax+0x3c]
   14000ed4a:	loope  0x14000ece3
   14000ed4c:	sbb    ecx,eax
   14000ed4e:	mov    WORD PTR [rsi+0xf],cs
   14000ed51:	ss pop rsi
   14000ed53:	rex.WB
   14000ed54:	rex.RB fnstenv [r13+0x35e13eca]
   14000ed5b:	out    dx,eax
   14000ed5c:	(bad)  
   14000ed5d:	mov    ch,0x3f
   14000ed5f:	(bad)  
   14000ed60:	xor    eax,0x8000066
   14000ed65:	xchg   ah,bh
   14000ed67:	retf   0xe514
   14000ed6a:	movabs ds:0x7f434fc249341d7,eax
   14000ed73:	ret    
   14000ed74:	(bad)  
   14000ed75:	(bad)  [rbx+0x20463fab]
   14000ed7b:	jl     0x14000edc7
   14000ed7d:	push   QWORD PTR [rcx]
   14000ed7f:	cld    
   14000ed80:	int3   
   14000ed81:	jno    0x14000ed3b
   14000ed83:	mov    al,0x10
   14000ed85:	out    0x65,al
   14000ed87:	sub    DWORD PTR [rdi-0x612f871e],ecx
   14000ed8d:	push   rcx
   14000ed8e:	add    al,0xe4
   14000ed90:	clc    
   14000ed91:	jae    0x14000ed5c
   14000ed93:	ins    DWORD PTR es:[rdi],dx
   14000ed94:	(bad)  
   14000ed95:	push   rax
   14000ed96:	xchg   ebp,eax
   14000ed97:	xchg   DWORD PTR ss:[rdx-0x62056155],ecx
   14000ed9e:	nop
   14000ed9f:	ds hlt 
   14000eda1:	jae    0x14000ed7f
   14000eda3:	clc    
   14000eda4:	in     al,0x6f
   14000eda6:	rex.X (bad) 
   14000eda8:	por    mm6,QWORD PTR [rcx]
   14000edab:	rex.WRB test BYTE PTR [r8],r13b
   14000edae:	clc    
   14000edaf:	(bad)  
   14000edb0:	rcr    BYTE PTR [rax+0x0],1
   14000edb3:	xchg   edx,eax
   14000edb4:	scas   al,BYTE PTR es:[rdi]
   14000edb5:	(bad)  
   14000edb6:	or     al,0x92
   14000edb8:	(bad)  
   14000edb9:	out    0x33,al
   14000edbb:	(bad)
   14000edbf:	int    0x2f
   14000edc1:	cwde   
   14000edc2:	popf   
   14000edc3:	push   rsp
   14000edc4:	sahf   
   14000edc5:	mov    cl,0xba
   14000edc7:	enter  0x2a47,0xc7
   14000edcb:	rex.WX
   14000edcc:	lock repnz xor al,0x3e
   14000edd0:	out    dx,eax
   14000edd1:	sti    
   14000edd2:	gs sti 
   14000edd4:	stos   BYTE PTR es:[rdi],al
   14000edd5:	cmc    
   14000edd6:	subps  xmm7,XMMWORD PTR [rdx]
   14000edd9:	loope  0x14000ee49
   14000eddb:	outs   dx,BYTE PTR ds:[rsi]
   14000eddc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000eddd:	or     eax,ecx
   14000eddf:	or     eax,0xb35a6920
   14000ede4:	and    BYTE PTR [rcx+0x6d],cl
   14000ede7:	ins    BYTE PTR es:[rdi],dx
   14000ede8:	add    DWORD PTR [rip+0xfffffffffe27d1f7],edx        # 0x13e28bfe5
   14000edee:	sbb    eax,0xcb1975b0
   14000edf3:	popf   
   14000edf4:	mov    ah,0x79
   14000edf6:	ret    
   14000edf7:	or     eax,0xc337cacb
   14000edfc:	sbb    BYTE PTR [rbx+0x74],ah
   14000edff:	sahf   
   14000ee00:	mov    esi,ebp
   14000ee02:	cmovns ecx,DWORD PTR [rdi]
   14000ee05:	xchg   DWORD PTR [rdx-0x4e],ecx
   14000ee08:	adc    DWORD PTR [rbx-0x4c],eax
   14000ee0b:	(bad)  
   14000ee0c:	jl     0x14000edf0
   14000ee0e:	movabs al,ds:0x600a12f798b9940d
   14000ee17:	(bad)  
   14000ee18:	int3   
   14000ee19:	sahf   
   14000ee1a:	or     DWORD PTR [rax],esp
   14000ee1c:	xchg   edi,eax
   14000ee1d:	adc    dl,dl
   14000ee1f:	imul   edx,DWORD PTR [rsi],0xdaaa89e0
   14000ee25:	sbb    al,0xb2
   14000ee27:	cmp    esi,DWORD PTR [rdx-0x5a3a92ee]
   14000ee2d:	(bad)  
   14000ee2e:	jge    0x14000edb5
   14000ee30:	imul   ecx,eax,0x0
   14000ee33:	sub    bl,BYTE PTR [rip+0xffffffffb8dc614f]        # 0xf8dd4f88
   14000ee39:	and    al,0xd9
   14000ee3b:	adc    esi,DWORD PTR [rax]
   14000ee3d:	rex.RB cmc 
   14000ee3f:	jg     0x14000ee2a
   14000ee41:	fldenv [rdi]
   14000ee43:	(bad)  
   14000ee44:	mov    esi,0x23fb7685
   14000ee49:	repnz sub dh,bl
   14000ee4c:	es iret 
   14000ee4e:	and    ebx,DWORD PTR [rax]
   14000ee50:	repnz pop rsi
   14000ee52:	push   rcx
   14000ee53:	sbb    al,0x13
   14000ee55:	mov    eax,0x5fb7f4b1
   14000ee5a:	enter  0xcbe9,0x61
   14000ee5e:	cmp    DWORD PTR [rax+0x6c],esi
   14000ee61:	jg     0x14000eeb2
   14000ee63:	imul   ecx,ebx,0xffffffab
   14000ee66:	mov    WORD PTR [rbx],es
   14000ee68:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ee69:	and    esi,edi
   14000ee6b:	movabs ds:0x36a3f3dc28efc8f3,al
   14000ee74:	in     eax,dx
   14000ee75:	pop    rcx
   14000ee76:	imul   eax,DWORD PTR [rdi+0x19],0xa7105a6b
   14000ee7d:	movabs al,ds:0x1b842e93093ac746
   14000ee86:	jbe    0x14000ee21
   14000ee88:	scas   eax,DWORD PTR es:[rdi]
   14000ee89:	(bad)  
   14000ee8b:	nop
   14000ee8c:	push   rdx
   14000ee8d:	repz retf 
   14000ee8f:	test   dh,ch
   14000ee91:	sti    
   14000ee92:	(bad)  
   14000ee93:	xchg   edx,eax
   14000ee94:	cld    
   14000ee95:	mov    cl,0x8a
   14000ee97:	(bad)  
   14000ee98:	cmp    ch,BYTE PTR [rdi+0x12]
   14000ee9b:	rol    edi,0x95
   14000ee9e:	rex.W cmc 
   14000eea0:	xchg   DWORD PTR [rax+0x2e],eax
   14000eea3:	(bad)  
   14000eea4:	(bad)  
   14000eea5:	cld    
   14000eea6:	(bad)  
   14000eea7:	push   rdi
   14000eea8:	add    cl,0xba
   14000eeab:	repz or ebx,DWORD PTR [rax+0x27]
   14000eeaf:	and    DWORD PTR [rip+0xffffffffac349029],esp        # 0xec357ede
   14000eeb5:	mov    BYTE PTR [rdx-0x52],0x9d
   14000eeb9:	(bad)  
   14000eeba:	jbe    0x14000ee85
   14000eebc:	mov    edi,0xd0410ff1
   14000eec1:	hlt    
   14000eec2:	(bad)  
   14000eec3:	ja     0x14000eea2
   14000eec5:	shl    DWORD PTR [rsi-0x73],1
   14000eec8:	adc    DWORD PTR [rcx],edx
   14000eeca:	xor    DWORD PTR [rcx],0x94e59d02
   14000eed0:	clts   
   14000eed2:	xchg   edx,eax
   14000eed3:	cmova  esp,DWORD PTR [rbx+riz*8+0xd]
   14000eed8:	add    BYTE PTR [rax-0x479381cd],cl
   14000eede:	or     cl,bh
   14000eee0:	sbb    al,0x88
   14000eee2:	push   rsp
   14000eee3:	(bad)  
   14000eee4:	jns    0x14000ef18
   14000eee6:	lods   eax,DWORD PTR ds:[rsi]
   14000eee7:	in     eax,0x51
   14000eee9:	rex.WRXB cmp r12b,BYTE PTR [r11]
   14000eeec:	mov    ebp,ebp
   14000eeee:	mov    edx,0xda92d8f2
   14000eef3:	std    
   14000eef4:	fwait
   14000eef5:	movabs ds:0xd03d8fd48fdb7f2,eax
   14000eefe:	and    BYTE PTR [rdx-0x6b47fe40],dh
   14000ef04:	cdq    
   14000ef05:	outs   dx,BYTE PTR ds:[rsi]
   14000ef06:	(bad)  
   14000ef07:	push   0x27
   14000ef09:	(bad)  
   14000ef0a:	lahf   
   14000ef0b:	add    ah,dh
   14000ef0d:	(bad)  
   14000ef0e:	ret    
   14000ef0f:	(bad)  
   14000ef10:	vpaddd ymm0,ymm9,ymm3
   14000ef14:	rex.R shl BYTE PTR [rdi+0x54461ff4],0x31
   14000ef1c:	rex.B ja 0x14000eec7
   14000ef1f:	adc    BYTE PTR [rbp+0x18],bh
   14000ef22:	rex.W mov cl,0x46
   14000ef25:	in     eax,dx
   14000ef26:	sub    DWORD PTR [rcx+0x47],ebp
   14000ef29:	shl    eax,0x1a
   14000ef2c:	rex.RXB
   14000ef2d:	rex jae 0x14000ef31
   14000ef30:	int    0x87
   14000ef32:	inc    DWORD PTR [rsi+0x6bfe3f4a]
   14000ef38:	xor    BYTE PTR [rbp-0x59],ch
   14000ef3b:	or     eax,0xd5e754c4
   14000ef40:	in     al,dx
   14000ef41:	mov    ah,0x5
   14000ef43:	imul   ebp,DWORD PTR [rip+0xffffffffa04b9a82],0x4e105a4        # 0xe04c89cf
   14000ef4d:	add    al,0x67
   14000ef4f:	jae    0x14000eee0
   14000ef51:	repz rcl al,1
   14000ef54:	not    BYTE PTR [rdx-0x4c]
   14000ef57:	(bad)  
   14000ef58:	mov    ch,0xb9
   14000ef5a:	ror    DWORD PTR [rax],cl
   14000ef5c:	mov    esi,0x2eaaae74
   14000ef61:	mov    ecx,0xd0227799
   14000ef66:	jo     0x14000ef6b
   14000ef68:	cli    
   14000ef69:	sti    
   14000ef6a:	pop    rdi
   14000ef6b:	sbb    DWORD PTR [rsi+rsi*8-0x26],0x2508280
   14000ef73:	push   rax
   14000ef74:	ret    
   14000ef75:	push   0x2
   14000ef77:	retf   0x232
   14000ef7a:	jb     0x14000ef8a
   14000ef7c:	rex.X jae 0x14000ef78
   14000ef7f:	add    eax,0xd0e7c5c8
   14000ef84:	push   rsi
   14000ef85:	xchg   esp,eax
   14000ef86:	fdiv   QWORD PTR [rbx-0x9]
   14000ef89:	xor    ebp,esp
   14000ef8b:	sbb    DWORD PTR [rax+0x679d0318],esi
   14000ef91:	enter  0x3fa,0xca
   14000ef95:	(bad)  
   14000ef96:	add    ebp,eax
   14000ef98:	ror    DWORD PTR [rax-0x7de2e73],1
   14000ef9e:	xchg   DWORD PTR [rdx+rcx*4-0x6d083a3b],ebx
   14000efa5:	rex.WRX (bad) 
   14000efa7:	in     eax,0x49
   14000efa9:	movabs ds:0xa86d9a14976220fe,al
   14000efb2:	mov    ecx,0x9a5aedcf
   14000efb7:	rex.XB pushf 
   14000efb9:	stc    
   14000efba:	movsxd edi,DWORD PTR es:[rbx+0xa]
   14000efbe:	jrcxz  0x14000ef97
   14000efc0:	in     al,dx
   14000efc1:	(bad)  
   14000efc2:	ds jo  0x14000ef52
   14000efc5:	sbb    al,al
   14000efc7:	fdivr  DWORD PTR [rbx+0xb]
   14000efca:	std    
   14000efcb:	imul   esi,DWORD PTR [rbx-0x1e],0xf5b2dcc9
   14000efd2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000efd3:	addr32 lahf 
   14000efd5:	cld    
   14000efd6:	js     0x14000ef66
   14000efd8:	and    al,0x7d
   14000efda:	fdivr  DWORD PTR [rdx+rcx*4]
   14000efdd:	ret    
   14000efde:	mov    dl,0x1a
   14000efe0:	push   0x1
   14000efe2:	or     ah,BYTE PTR [rdx-0x4a]
   14000efe5:	rex.WXB pop r15
   14000efe7:	mov    ebp,0x5ce128c9
   14000efec:	mov    al,0xf5
   14000efee:	movabs ds:0xe3f9b08fd1b30456,eax
   14000eff7:	rex.WRB pop r14
   14000eff9:	adc    eax,0xd17bd8f8
   14000effe:	jle    0x14000efe4
   14000f000:	mov    bh,0x95
   14000f002:	fdiv   st(5),st
   14000f004:	movabs ds:0x8141263a156970ba,eax
   14000f00d:	mov    eax,0xb60a7361
   14000f012:	(bad)  
   14000f013:	(bad)  
   14000f014:	sbb    ebx,DWORD PTR [rbp-0x15]
   14000f017:	or     BYTE PTR [rbx+0x6df0841d],0xb5
   14000f01e:	(bad)  
   14000f01f:	push   rdi
   14000f020:	ror    BYTE PTR [rdx+rcx*8-0x71],cl
   14000f024:	cmp    eax,0x8ffd3fd
   14000f029:	or     WORD PTR [rbp+0x125a0baf],dx
   14000f030:	loopne 0x14000efcf
   14000f032:	xchg   dh,ah
   14000f034:	ror    BYTE PTR [rcx-0x68],cl
   14000f037:	(bad)  
   14000f038:	mov    edi,0xc36d190e
   14000f03d:	addr32 pop rdi
   14000f03f:	and    eax,0x86bfba95
   14000f044:	cmc    
   14000f045:	or     eax,0xdfd5f238
   14000f04a:	std    
   14000f04b:	add    edx,DWORD PTR [rax-0x31004598]
   14000f051:	sbb    ebx,ebx
   14000f053:	test   cl,0x6d
   14000f056:	gs (bad) 
   14000f058:	sbb    BYTE PTR [rax+0x1fdd232c],bl
   14000f05e:	jo     0x14000f09e
   14000f060:	sbb    BYTE PTR [rcx-0x3f077232],cl
   14000f066:	movsxd esp,edi
   14000f068:	ins    DWORD PTR es:[rdi],dx
   14000f069:	jo     0x14000f0b7
   14000f06b:	rex cld 
   14000f06d:	ja     0x14000eff3
   14000f06f:	(bad)  
   14000f070:	sbb    eax,0x139e5f61
   14000f075:	(bad)  
   14000f076:	push   rsi
   14000f077:	adc    DWORD PTR [rax-0x478399e7],esi
   14000f07d:	icebp  
   14000f07e:	(bad)  
   14000f07f:	(bad)  
   14000f080:	int3   
   14000f081:	jp     0x14000f080
   14000f083:	sti    
   14000f084:	(bad)  
   14000f085:	cli    
   14000f086:	jno    0x14000f015
   14000f088:	xor    eax,0xd9dee700
   14000f08d:	push   rcx
   14000f08e:	lea    ebx,[rbx-0x1ffe02da]
   14000f094:	loop   0x14000f080
   14000f096:	loopne 0x14000f0f9
   14000f098:	add    dh,al
   14000f09a:	sub    ebp,edi
   14000f09c:	rex.RXB xchg r9d,eax
   14000f09e:	xchg   ecx,eax
   14000f09f:	or     eax,DWORD PTR [rbp+riz*2-0x577d6f9a]
   14000f0a6:	movabs ds:0xd050ee7fd14f41,eax
   14000f0af:	retf   0xba3e
   14000f0b2:	imul   esi,eax,0xffffff96
   14000f0b5:	fwait
   14000f0b6:	mov    ebp,DWORD PTR [rax+0x7d]
   14000f0b9:	in     al,0x6f
   14000f0bb:	test   al,0xf4
   14000f0bd:	(bad)  
   14000f0be:	(bad)  
   14000f0bf:	(bad)  
   14000f0c0:	je     0x14000f0ad
   14000f0c2:	nop
   14000f0c3:	cs sbb al,0x92
   14000f0c6:	or     BYTE PTR [rdx-0x4e4ed770],dh
   14000f0cc:	add    ch,BYTE PTR [rbp+0xf34083]
   14000f0d2:	and    al,0x69
   14000f0d4:	fisub  DWORD PTR [rax+0x22]
   14000f0d7:	test   al,0x40
   14000f0d9:	nop
   14000f0da:	sub    DWORD PTR [rcx-0x7b],0xa8a9ed2d
   14000f0e1:	adc    dl,BYTE PTR [ebx]
   14000f0e4:	or     BYTE PTR [rdi],bh
   14000f0e6:	and    dh,BYTE PTR [rbp+0x1]
   14000f0e9:	adc    al,0x4a
   14000f0ec:	pop    rax
   14000f0ed:	mov    esp,0xbb52f100
   14000f0f2:	pop    rsp
   14000f0f3:	fisubr WORD PTR [rdi+rbx*2-0x7b]
   14000f0f7:	ds cmc 
   14000f0f9:	gs sar dl,1
   14000f0fc:	cmp    DWORD PTR [rax-0x61],ebx
   14000f0ff:	cmp    eax,DWORD PTR [rbx]
   14000f101:	stos   BYTE PTR es:[rdi],al
   14000f102:	add    DWORD PTR [rcx-0x57],edx
   14000f105:	rex.WXB movsxd rsp,DWORD PTR [r14+0x63]
   14000f109:	sbb    ecx,esp
   14000f10b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f10c:	xchg   ebx,eax
   14000f10d:	xor    BYTE PTR [rdi-0x4eb4bc62],dl
   14000f113:	(bad)  
   14000f114:	add    bh,ah
   14000f116:	mov    ebp,0x26b46045
   14000f11b:	cmp    eax,0xd468d21c
   14000f120:	out    0x3c,eax
   14000f122:	(bad)  
   14000f123:	rcr    DWORD PTR [rax],0x63
   14000f126:	loop   0x14000f0fc
   14000f128:	test   al,0x41
   14000f12a:	cli    
   14000f12b:	push   rbx
   14000f12c:	(bad)  
   14000f12d:	or     BYTE PTR [rax+0x31803d67],bl
   14000f133:	loop   0x14000f0d7
   14000f135:	or     ebp,DWORD PTR [rbp+0x67]
   14000f138:	cmp    BYTE PTR [rdi-0x80],bl
   14000f13b:	iret   
   14000f13c:	(bad)  
   14000f13d:	pop    rcx
   14000f13e:	(bad)  
   14000f13f:	pop    rsp
   14000f140:	cdq    
   14000f141:	test   DWORD PTR [rdx-0x5aa04036],ebp
   14000f147:	(bad)  
   14000f148:	mov    al,0x17
   14000f14a:	rex.WRX rcl BYTE PTR [rdx+0x5a],0x5
   14000f14f:	add    DWORD PTR [rdx+0x4751db84],ecx
   14000f155:	rex.WRXB
   14000f156:	es (bad) 
   14000f158:	(bad)  
   14000f159:	mov    esi,0xe60fecf7
   14000f15e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f15f:	rol    BYTE PTR [rdi+0x6c3863cd],cl
   14000f165:	push   rsi
   14000f166:	ins    BYTE PTR es:[rdi],dx
   14000f167:	or     eax,0x7b0e7652
   14000f16c:	rex.WB out dx,eax
   14000f16e:	mov    DWORD PTR [rcx+0x4a577ddf],0x24156265
   14000f178:	xchg   edx,eax
   14000f179:	stos   BYTE PTR es:[rdi],al
   14000f17a:	push   rbp
   14000f17b:	sti    
   14000f17c:	cmp    eax,esp
   14000f17e:	lea    edi,[rcx-0xb]
   14000f181:	jl     0x14000f16f
   14000f183:	mov    r12b,0x1f
   14000f186:	stc    
   14000f187:	sbb    eax,0x6d38f725
   14000f18c:	movabs al,ds:0x4116b521273907aa
   14000f195:	frstor [rbx]
   14000f197:	rex movabs ds:0x272036c470d3f103,eax
   14000f1a1:	test   BYTE PTR [rip+0x319c3554],0x4e        # 0x1719d26fc
   14000f1a8:	push   rax
   14000f1a9:	ds (bad) 
   14000f1ab:	push   rdx
   14000f1ac:	cmp    al,0x70
   14000f1ae:	cmp    al,0x4b
   14000f1b0:	adc    BYTE PTR [rbx+0x44],dh
   14000f1b3:	jmp    0x14000f144
   14000f1b5:	repz (bad) 
   14000f1b7:	adc    DWORD PTR [rdi],esp
   14000f1b9:	rex.RX lea r8d,[rcx-0x33c704c2]
   14000f1c0:	sub    ebx,edi
   14000f1c2:	or     eax,0x4ed89bb2
   14000f1c7:	(bad)  
   14000f1c8:	push   rdx
   14000f1c9:	(bad)
   14000f1ce:	hlt    
   14000f1cf:	ja     0x14000f1d0
   14000f1d1:	xor    eax,0x76de9a20
   14000f1d6:	out    0x4d,eax
   14000f1d8:	ins    DWORD PTR es:[rdi],dx
   14000f1d9:	iret   
   14000f1da:	(bad)  
   14000f1db:	lods   eax,DWORD PTR ds:[rsi]
   14000f1dc:	outs   dx,DWORD PTR ds:[rsi]
   14000f1dd:	pop    rdi
   14000f1de:	enter  0x9ce8,0x74
   14000f1e2:	outs   dx,DWORD PTR ds:[rsi]
   14000f1e3:	or     BYTE PTR [rip+0x5ad68a1c],bh        # 0x19ad77c05
   14000f1e9:	mov    ah,0x41
   14000f1eb:	cwde   
   14000f1ec:	sti    
   14000f1ed:	test   DWORD PTR [rdx+rcx*2-0x477bb9ca],0xbe667250
   14000f1f8:	or     BYTE PTR [rip+0x45a046d1],cl        # 0x185a138cf
   14000f1fe:	rex.X test al,0x52
   14000f201:	rex.W sub bl,cl
   14000f204:	jbe    0x14000f1eb
   14000f206:	rex.B cmp al,0x79
   14000f209:	xor    bl,BYTE PTR [rbx]
   14000f20b:	rol    esp,cl
   14000f20d:	(bad)  
   14000f20e:	ds jrcxz 0x14000f213
   14000f211:	xlat   BYTE PTR ds:[rbx]
   14000f212:	mov    WORD PTR [rcx],es
   14000f214:	push   rsp
   14000f215:	sbb    BYTE PTR [rdx-0x4],ch
   14000f218:	push   rbx
   14000f219:	sub    dh,bl
   14000f21b:	cs jl  0x14000f264
   14000f21e:	(bad)  
   14000f21f:	pop    rdi
   14000f220:	mov    edx,0x4c93e170
   14000f225:	ror    BYTE PTR [rdi+0x60073fe9],0x89
   14000f22c:	cmp    cl,BYTE PTR [rax-0x6]
   14000f22f:	xor    BYTE PTR [rax-0x23],al
   14000f232:	jg     0x14000f2b2
   14000f234:	(bad)  
   14000f235:	rex.R stos DWORD PTR es:[rdi],eax
   14000f237:	jmp    0x14000f1fb
   14000f239:	sub    eax,0x1a0f8222
   14000f23e:	jo     0x14000f1e4
   14000f240:	rex.WR pop rsp
   14000f242:	retf   
   14000f243:	xchg   edi,eax
   14000f244:	rex.WR
   14000f245:	sbb    edi,r8d
   14000f248:	xor    eax,0xfd466e18
   14000f24d:	adc    BYTE PTR [rbx+0x79],cl
   14000f250:	(bad)  
   14000f251:	test   eax,0x65ad026
   14000f256:	mov    ch,0xe
   14000f258:	pop    rax
   14000f259:	int    0xc0
   14000f25b:	rex.WB fidiv DWORD PTR [r10+0x7f885c75]
   14000f262:	mov    DWORD PTR [rbx+riz*4-0x341caa6e],esi
   14000f269:	(bad)
   14000f26c:	mov    bl,bl
   14000f26e:	rex.WB jmp 0x16405c830
   14000f274:	cmp    ch,ah
   14000f276:	push   rax
   14000f277:	fmul   QWORD PTR [rdi]
   14000f279:	add    al,0xb9
   14000f27b:	jp     0x14000f297
   14000f27d:	cli    
   14000f27e:	(bad)
   14000f281:	(bad)
   14000f284:	rex (bad) [rax]
   14000f287:	rex.X (bad) 
   14000f289:	retf   
   14000f28a:	or     ah,cl
   14000f28c:	xchg   ebp,eax
   14000f28d:	(bad)  
   14000f28e:	and    BYTE PTR [rdi+0x28a5a24e],dl
   14000f294:	mov    ecx,0x2a0df8ed
   14000f299:	push   rsp
   14000f29a:	sub    eax,DWORD PTR [rsi]
   14000f29c:	xlat   BYTE PTR es:[rbx]
   14000f29e:	ins    BYTE PTR es:[rdi],dx
   14000f29f:	rex.RX
   14000f2a0:	rex.XB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f2a2:	xchg   DWORD PTR [rbx],eax
   14000f2a4:	ss jns 0x14000f2b5
   14000f2a7:	and    esp,DWORD PTR [rdx]
   14000f2a9:	rex.RX
   14000f2aa:	fs ins BYTE PTR es:[rdi],dx
   14000f2ac:	mov    edx,0x66f4bcf
   14000f2b1:	movabs ds:0x26d72604619357c5,al
   14000f2ba:	xlat   BYTE PTR ds:[rbx]
   14000f2bb:	rex.RX mov spl,0x88
   14000f2be:	(bad)  
   14000f2bf:	and    al,BYTE PTR [rsp+rbx*8]
   14000f2c2:	rex.X push rsp
   14000f2c4:	cs mov dl,0x4e
   14000f2c7:	in     eax,dx
   14000f2c8:	(bad)  
   14000f2c9:	out    0x4d,al
   14000f2cb:	push   rax
   14000f2cc:	adc    esi,esi
   14000f2ce:	stos   DWORD PTR es:[rdi],eax
   14000f2cf:	(bad)  
   14000f2d0:	mov    al,0x7
   14000f2d2:	sbb    al,BYTE PTR [rax]
   14000f2d4:	add    BYTE PTR [rsi+rsi*4+0x5],dl
   14000f2d8:	xchg   esi,eax
   14000f2d9:	pop    rax
   14000f2da:	or     ebx,DWORD PTR [rax+0x3e5ffd2c]
   14000f2e0:	jnp    0x14000f2cb
   14000f2e2:	scas   al,BYTE PTR es:[rdi]
   14000f2e3:	ins    DWORD PTR es:[rdi],dx
   14000f2e4:	imul   esi,DWORD PTR [rsi-0x12],0x56e3cf37
   14000f2eb:	jge    0x14000f2c3
   14000f2ed:	(bad)  
   14000f2ee:	fidiv  DWORD PTR [rax+0x3d8206b9]
   14000f2f4:	pop    rdi
   14000f2f5:	fsub   QWORD PTR [rcx-0x4ecd760e]
   14000f2fb:	jnp    0x14000f2df
   14000f2fd:	repnz (bad) 
   14000f2ff:	add    DWORD PTR [rbx+rsi*1],0x1f58de2
   14000f306:	add    r11,rdi
   14000f309:	repnz pop rsi
   14000f30b:	mov    ah,0x3e
   14000f30d:	repz bswap ecx
   14000f310:	fdiv   st(0),st
   14000f312:	(bad)  
   14000f313:	mov    ebx,0x2647c6fa
   14000f318:	(bad)  
   14000f319:	in     eax,dx
   14000f31a:	fwait
   14000f31b:	ins    BYTE PTR es:[rdi],dx
   14000f31c:	adc    BYTE PTR [rsi+0x63],cl
   14000f31f:	add    DWORD PTR [rax+0x1d],ebp
   14000f322:	add    BYTE PTR [rbp-0x18e2c8e3],ah
   14000f328:	in     al,dx
   14000f329:	out    dx,al
   14000f32a:	retf   0x93b3
   14000f32d:	jae    0x14000f2dc
   14000f32f:	pop    rcx
   14000f330:	popf   
   14000f331:	fidiv  DWORD PTR [rcx]
   14000f333:	xchg   al,ah
   14000f335:	lock mov WORD PTR [rbx+rdi*2-0x3e107284],fs
   14000f33d:	mov    dl,0x3a
   14000f33f:	add    BYTE PTR [rdx],al
   14000f341:	xchg   ebp,eax
   14000f342:	push   rsi
   14000f343:	sbb    edx,edi
   14000f345:	loopne 0x14000f371
   14000f347:	adc    DWORD PTR [rcx-0x60be5094],eax
   14000f34d:	cld    
   14000f34e:	jae    0x14000f2f0
   14000f350:	mov    edi,0xb00dd766
   14000f355:	gs add al,0x42
   14000f358:	or     DWORD PTR [rax-0xd82fe6],esp
   14000f35e:	sbb    al,0x4
   14000f360:	rex.WRB neg r14
   14000f363:	jno    0x14000f3b8
   14000f365:	and    edi,DWORD PTR [rsi+0x64c0c11d]
   14000f36b:	cmp    ebp,esp
   14000f36d:	mov    ebp,0x88d9d281
   14000f372:	mov    esi,ss
   14000f374:	loop   0x14000f378
   14000f376:	xchg   DWORD PTR [rcx+rcx*4-0x21cc7f68],ecx
   14000f37d:	or     esp,DWORD PTR [rdi-0x22]
   14000f380:	(bad)  
   14000f381:	xor    BYTE PTR [rax+0x4cf245c9],al
   14000f387:	mov    edx,DWORD PTR [rsi]
   14000f389:	add    ebp,DWORD PTR [rip+0xffffffffe6b01305]        # 0x126b10694
   14000f38f:	rex cmp DWORD PTR [rsi],ebx
   14000f392:	jl     0x14000f3b6
   14000f394:	out    0xb3,al
   14000f396:	adc    esi,esi
   14000f398:	(bad)  
   14000f399:	scas   al,BYTE PTR es:[rdi]
   14000f39a:	or     DWORD PTR [rbx],eax
   14000f39c:	test   al,0xf4
   14000f39e:	xchg   edi,eax
   14000f39f:	(bad)  
   14000f3a0:	pop    rbp
   14000f3a1:	jrcxz  0x14000f324
   14000f3a3:	sbb    eax,0xfd763a33
   14000f3a8:	hlt    
   14000f3a9:	push   rbx
   14000f3aa:	(bad)  
   14000f3ab:	leave  
   14000f3ac:	add    al,0xfa
   14000f3ae:	mov    al,0xfe
   14000f3b0:	rex.RX xchg eax,eax
   14000f3b2:	jae    0x14000f3aa
   14000f3b4:	adc    cl,BYTE PTR [rbx-0x4e]
   14000f3b7:	(bad)  
   14000f3b8:	jl     0x14000f3d6
   14000f3ba:	jl     0x14000f3a1
   14000f3bc:	push   dx
   14000f3be:	test   al,0xc6
   14000f3c0:	xchg   ecx,eax
   14000f3c1:	cmc    
   14000f3c2:	outs   dx,DWORD PTR ds:[rsi]
   14000f3c3:	mov    edi,0xc51c2739
   14000f3c8:	fwait
   14000f3c9:	ror    ch,cl
   14000f3cb:	push   0xffffffffffffffc4
   14000f3cd:	sbb    edi,esp
   14000f3cf:	loop   0x14000f37a
   14000f3d1:	mov    ecx,0xfc4ff688
   14000f3d6:	mov    edx,0xcbf63e4a
   14000f3db:	xor    BYTE PTR [rbp+0x47cfa14e],cl
   14000f3e1:	pop    rdx
   14000f3e2:	cmp    al,0xb1
   14000f3e4:	add    ah,BYTE PTR [rip+0x8b5a04d]        # 0x148b69437
   14000f3ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f3eb:	sbb    eax,0xb33a6a90
   14000f3f0:	add    BYTE PTR [rbx+0x6ab8e0b6],0x64
   14000f3f7:	ror    BYTE PTR [rax],cl
   14000f3f9:	mov    cl,ch
   14000f3fb:	xlat   BYTE PTR ds:[rbx]
   14000f3fc:	cmp    eax,0x21985711
   14000f401:	lods   al,BYTE PTR ds:[rsi]
   14000f402:	(bad)  
   14000f403:	and    BYTE PTR [rax+0x4e3c747e],dl
   14000f409:	xchg   esi,eax
   14000f40a:	add    ch,BYTE PTR [rcx]
   14000f40c:	jb     0x14000f422
   14000f40e:	add    al,0x7f
   14000f410:	mov    cl,dh
   14000f412:	nop
   14000f413:	mov    edi,0xeae035f8
   14000f418:	rex.WXB
   14000f419:	ss (bad) 
   14000f41b:	xchg   edi,eax
   14000f41c:	xchg   esp,eax
   14000f41d:	cmc    
   14000f41e:	push   rdi
   14000f41f:	jo     0x14000f42b
   14000f421:	repz retf 0xc0b3
   14000f425:	test   BYTE PTR [rdx],0xe
   14000f428:	mov    dh,0xd3
   14000f42a:	out    0xe2,al
   14000f42c:	rex.X (bad) 
   14000f42e:	hlt    
   14000f42f:	movabs al,ds:0xbbf291a32c318d9d
   14000f438:	adc    BYTE PTR [rbx],bl
   14000f43a:	xor    DWORD PTR [rdx+0x0],esp
   14000f43d:	movabs ds:0x7e70181421318c45,eax
   14000f446:	and    DWORD PTR [rdi+riz*4+0x37],0xda3a1ce0
   14000f44e:	(bad)  
   14000f44f:	rex.WX
   14000f450:	mov    cx,0xd720
   14000f454:	(bad)  
   14000f455:	fidivr DWORD PTR [rdi]
   14000f457:	push   rsi
   14000f458:	in     al,dx
   14000f459:	adc    ebx,DWORD PTR [rax-0x3075ed02]
   14000f45f:	imul   ebx,DWORD PTR [rdx-0x40],0x4c1ec27e
   14000f466:	add    edx,DWORD PTR [rdx-0x51de75e1]
   14000f46c:	outs   dx,BYTE PTR ds:[rsi]
   14000f46d:	(bad)  
   14000f46e:	jmp    0x19a0d0cb2
   14000f473:	(bad)  
   14000f474:	rex.RX fstp st(3)
   14000f477:	mov    ebx,0xfce1e1e8
   14000f47c:	push   rcx
   14000f47d:	test   al,ah
   14000f47f:	popf   
   14000f480:	enter  0x156f,0xb6
   14000f484:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f485:	repnz xchg edx,eax
   14000f487:	sub    DWORD PTR [rdx],esp
   14000f489:	add    BYTE PTR [rdi+0x1fddceaa],bh
   14000f48f:	mov    BYTE PTR [rsi-0x2d0f15d3],ch
   14000f495:	out    dx,eax
   14000f496:	lea    edi,[rax-0x16]
   14000f499:	fld    QWORD PTR [rcx-0x23]
   14000f49c:	stc    
   14000f49d:	push   rcx
   14000f49e:	mov    ah,0x3e
   14000f4a0:	std    
   14000f4a1:	bswap  eax
   14000f4a3:	fdiv   st(4),st
   14000f4a5:	movabs al,ds:0x5cdeebd6521ed89e
   14000f4ae:	add    BYTE PTR [rdx+0xb],bl
   14000f4b1:	loopne 0x14000f4f9
   14000f4b3:	fld    TBYTE PTR [rdx+0x3]
   14000f4b6:	pushf  
   14000f4b7:	mov    edx,0x468a99e
   14000f4bc:	sub    ah,ch
   14000f4be:	test   eax,0x416c618
   14000f4c4:	xchg   esp,eax
   14000f4c5:	sti    
   14000f4c6:	(bad)  
   14000f4c7:	out    dx,eax
   14000f4c8:	mov    edx,0x1246d85a
   14000f4cd:	cdq    
   14000f4ce:	rex.WR
   14000f4cf:	ds jg  0x14000f52a
   14000f4d2:	loope  0x14000f46e
   14000f4d4:	and    esp,DWORD PTR [rbx-0x60]
   14000f4d7:	pop    rdi
   14000f4d8:	jns    0x14000f4e4
   14000f4da:	jb     0x14000f4c1
   14000f4dc:	jns    0x14000f556
   14000f4de:	jrcxz  0x14000f4ec
   14000f4e0:	ins    BYTE PTR es:[rdi],dx
   14000f4e1:	mov    ch,0x0
   14000f4e3:	repz ret 0x4097
   14000f4e7:	adc    BYTE PTR [rbx+rbp*8-0x3cb88e3],bh
   14000f4ee:	cld    
   14000f4ef:	cmp    al,0x5c
   14000f4f1:	cmp    eax,0xc3d273a2
   14000f4f6:	movabs eax,ds:0x7642937030c67932
   14000f4ff:	xor    DWORD PTR [rax+0x2838bb1],edx
   14000f505:	(bad)  
   14000f506:	cwde   
   14000f507:	mov    eax,DWORD PTR [rax]
   14000f509:	ins    DWORD PTR es:[rdi],dx
   14000f50a:	fidivr WORD PTR [rcx+0x31]
   14000f50d:	rex.RX xchg eax,eax
   14000f50f:	sbb    esp,DWORD PTR [rbx+0x237208d]
   14000f515:	in     eax,dx
   14000f516:	(bad)  
   14000f517:	or     BYTE PTR [rip+0xffffffff9ed9a238],0xe8        # 0xdeda9756
   14000f51e:	jns    0x14000f50f
   14000f520:	mov    ch,0xf
   14000f522:	jo     0x14000f4f1
   14000f524:	sbb    DWORD PTR [rax+0x4414005d],eax
   14000f52a:	lods   eax,DWORD PTR ds:[rsi]
   14000f52b:	xlat   BYTE PTR ds:[rbx]
   14000f52c:	shl    BYTE PTR [rsi-0xc],1
   14000f52f:	mov    eax,0x53a9f4e0
   14000f534:	(bad)  
   14000f535:	test   al,0xc8
   14000f537:	lock ret 
   14000f539:	cli    
   14000f53a:	sbb    ebp,DWORD PTR [rsi-0x5a5be058]
   14000f540:	(bad)  
   14000f542:	fdivr  DWORD PTR [rip+0xffffffffd92fc739]        # 0x11930bc81
   14000f548:	scas   eax,DWORD PTR es:[rdi]
   14000f549:	mov    ecx,0x6e1aca07
   14000f54e:	(bad)  
   14000f54f:	xor    eax,0x1d56fa23
   14000f554:	(bad)  
   14000f555:	xlat   BYTE PTR ds:[rbx]
   14000f556:	sahf   
   14000f557:	sub    edx,DWORD PTR [rax+0x73]
   14000f55a:	adc    ebp,ebp
   14000f55c:	(bad)  
   14000f55d:	call   FWORD PTR [rbx+0x2a]
   14000f560:	stc    
   14000f561:	fsubr  DWORD PTR [rdi+0x48ed24c0]
   14000f567:	xor    al,0xfb
   14000f569:	movzx  edx,BYTE PTR [rdx+0x36]
   14000f56d:	in     eax,dx
   14000f56e:	add    ch,cl
   14000f570:	add    eax,0xa006d390
   14000f575:	push   rdx
   14000f576:	mov    BYTE PTR [rdi-0x20fad878],cl
   14000f57c:	frstor [rbx-0x34]
   14000f57f:	sub    eax,0xc58a7e0a
   14000f584:	popf   
   14000f585:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f586:	xor    DWORD PTR ds:[rsi-0x43],ebp
   14000f58a:	adc    DWORD PTR [rdx+rbp*2],0x1061cfbf
   14000f591:	sbb    DWORD PTR [rsi+0x45],ecx
   14000f594:	adc    BYTE PTR [rbp+0x385cdfab],dl
   14000f59a:	add    DWORD PTR [rcx],edi
   14000f59c:	mul    DWORD PTR [rax+rdi*4+0x3f]
   14000f5a0:	test   eax,0xe3f4fa04
   14000f5a5:	and    BYTE PTR [rcx],dl
   14000f5a7:	mov    edx,0x49a740f1
   14000f5ac:	(bad)  
   14000f5ad:	and    esp,edi
   14000f5af:	sbb    esp,DWORD PTR [rsp+rsi*4+0x66]
   14000f5b3:	xor    ebx,DWORD PTR [rdx+rsi*4]
   14000f5b6:	sbb    DWORD PTR [rip+0x630d18d9],ecx        # 0x1a30e0e95
   14000f5bc:	xlat   BYTE PTR ds:[rbx]
   14000f5bd:	cld    
   14000f5be:	mov    BYTE PTR [rax+0xd66e318],cl
   14000f5c4:	lods   eax,DWORD PTR ds:[rsi]
   14000f5c5:	pop    rdi
   14000f5c6:	(bad)  
   14000f5c7:	out    0x77,eax
   14000f5c9:	push   rax
   14000f5ca:	adc    rbp,QWORD PTR [rbx-0x35]
   14000f5ce:	or     DWORD PTR [rax],esp
   14000f5d0:	mov    ecx,0x6640d720
   14000f5d5:	or     al,0x72
   14000f5d7:	out    0x5f,eax
   14000f5d9:	add    ch,ch
   14000f5db:	xor    dh,ch
   14000f5dd:	rex.WXB (bad) 
   14000f5df:	mov    BYTE PTR [rcx-0x9],cl
   14000f5e2:	fadd   DWORD PTR [rdi-0x28]
   14000f5e5:	mov    eax,DWORD PTR [rax-0x60]
   14000f5e8:	cwde   
   14000f5e9:	fwait
   14000f5ea:	xchg   ebx,eax
   14000f5eb:	pop    rdi
   14000f5ec:	or     esi,DWORD PTR [rax]
   14000f5ee:	rex.WRB cli 
   14000f5f0:	adc    eax,DWORD PTR [rax+0x1fcb958d]
   14000f5f6:	add    BYTE PTR es:[rdi],cl
   14000f5f9:	out    0x8f,eax
   14000f5fb:	xchg   esi,eax
   14000f5fc:	ins    DWORD PTR es:[rdi],dx
   14000f5fd:	jnp    0x14000f600
   14000f5ff:	stos   BYTE PTR es:[rdi],al
   14000f600:	pop    rsi
   14000f601:	jg     0x14000f603
   14000f603:	(bad)  
   14000f604:	movabs ds:0x63d521d18b37d231,al
   14000f60d:	rex.WRX sar al,0x89
   14000f611:	test   al,0x59
   14000f613:	js     0x14000f598
   14000f615:	movsxd eax,DWORD PTR [rsi+riz*1]
   14000f618:	rex.B (bad) 
   14000f61b:	ret    
   14000f61c:	push   0xffffffff91efccfd
   14000f621:	mov    ecx,0x451b41e5
   14000f626:	push   0x74d77535
   14000f62b:	(bad)  
   14000f62c:	pop    rbp
   14000f62d:	call   0xe34a0c48
   14000f632:	add    ecx,DWORD PTR [rsi+0x3b]
   14000f635:	(bad)  
   14000f636:	rex.R push rax
   14000f638:	or     eax,0x10b1f2f8
   14000f63d:	(bad)  
   14000f63f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f640:	mov    al,0xa1
   14000f642:	in     al,dx
   14000f643:	outs   dx,DWORD PTR ds:[rsi]
   14000f644:	mov    bh,0xe3
   14000f646:	pop    rax
   14000f647:	ror    DWORD PTR [rbp-0x12de8f4a],1
   14000f64d:	std    
   14000f64e:	xchg   DWORD PTR [rsp+rcx*8],edx
   14000f651:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f652:	loop   0x14000f6b3
   14000f654:	add    DWORD PTR [rsi+riz*8+0x20e7ab20],ebp
   14000f65b:	addr32 mov esi,0x40bd9f0d
   14000f661:	je     0x14000f669
   14000f663:	jae    0x14000f64b
   14000f665:	xor    DWORD PTR [rax],esi
   14000f667:	sub    edi,0xd4e6f3be
   14000f66d:	sbb    esp,ebx
   14000f66f:	(bad)  
   14000f670:	(bad)  
   14000f671:	xchg   edx,eax
   14000f672:	in     eax,0x64
   14000f674:	(bad)  
   14000f675:	rex.XB xchg r14b,cl
   14000f678:	test   eax,0x18dca692
   14000f67d:	mov    ebx,0xc4444094
   14000f682:	in     al,dx
   14000f683:	fdivr  st,st(3)
   14000f685:	adc    eax,0x12aae081
   14000f68a:	lods   eax,DWORD PTR ds:[rsi]
   14000f68b:	movabs eax,ds:0x535ecc0e6b132135
   14000f694:	and    cl,dh
   14000f696:	fcom   st(3)
   14000f698:	push   rbx
   14000f699:	mov    ebp,ebp
   14000f69b:	(bad)  
   14000f69c:	in     al,dx
   14000f69d:	test   DWORD PTR [rbx],edx
   14000f69f:	shr    bl,1
   14000f6a1:	test   al,0x0
   14000f6a3:	sub    dl,BYTE PTR [rdi+rdi*1+0x6]
   14000f6a7:	rcr    edx,0xc6
   14000f6aa:	(bad)  
   14000f6ab:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f6ad:	imul   ebx,DWORD PTR [rsi],0xe2ce4dba
   14000f6b3:	push   rsi
   14000f6b4:	jge    0x14000f68c
   14000f6b6:	rex.WB popf 
   14000f6b8:	clc    
   14000f6b9:	or     eax,0x7dfce656
   14000f6be:	jge    0x14000f65e
   14000f6c0:	cmp    DWORD PTR [rbx+rdi*1],edx
   14000f6c3:	jo     0x14000f6cc
   14000f6c5:	mov    bl,0xc1
   14000f6c7:	out    0xa7,al
   14000f6c9:	test   BYTE PTR [rsi+0x1d9ae2ac],0xc
   14000f6d0:	int3   
   14000f6d1:	pop    rbp
   14000f6d2:	(bad)  
   14000f6d3:	call   0x14daffcc3
   14000f6d8:	lock (bad) 
   14000f6da:	cld    
   14000f6db:	xchg   edx,eax
   14000f6dc:	xor    DWORD PTR [rcx-0x25],ecx
   14000f6df:	mov    WORD PTR [rdi-0x6fb6526d],?
   14000f6e5:	jbe    0x14000f667
   14000f6e7:	rex.RX (bad) 
   14000f6e9:	rex.W (bad) [rsi]
   14000f6ec:	cmp    cl,BYTE PTR [rdi-0x27]
   14000f6ef:	in     eax,0xbb
   14000f6f1:	loop   0x14000f6ff
   14000f6f3:	scas   eax,DWORD PTR es:[rdi]
   14000f6f4:	js     0x14000f6e3
   14000f6f6:	lods   eax,DWORD PTR ds:[rsi]
   14000f6f7:	(bad)  
   14000f6f9:	push   rax
   14000f6fa:	fsubr  QWORD PTR [rsi]
   14000f6fc:	lea    edx,[rbx+rdx*2]
   14000f6ff:	jne    0x14000f73d
   14000f701:	fwait
   14000f702:	adc    bh,cl
   14000f704:	int3   
   14000f705:	in     al,dx
   14000f706:	xor    eax,0x3e28075e
   14000f70b:	ret    
   14000f70c:	mov    dl,0xe4
   14000f70e:	(bad)  
   14000f70f:	(bad)  
   14000f710:	add    DWORD PTR [rsi-0x13],esp
   14000f713:	cmp    al,0xf4
   14000f715:	jmp    0xc19df7e1
   14000f71a:	rcr    QWORD PTR [rax+rdi*8+0x1e],0x8
   14000f720:	rex.X mov dil,0xde
   14000f723:	jl     0x14000f769
   14000f725:	jno    0x14000f738
   14000f727:	clc    
   14000f728:	out    dx,eax
   14000f729:	ficom  DWORD PTR [rax+0x6c87ce93]
   14000f72f:	repnz pushf 
   14000f731:	(bad)
   14000f734:	movabs al,ds:0xd968c08c60080998
   14000f73d:	stc    
   14000f73e:	and    eax,0xae38bd54
   14000f743:	cmp    DWORD PTR [rdx-0x37e367e5],edx
   14000f749:	jb     0x14000f7ae
   14000f74b:	pop    rbp
   14000f74c:	add    al,0xbb
   14000f74e:	(bad)  
   14000f74f:	call   FWORD PTR [rip+0xffffffffd8cf5f7e]        # 0x118d056d3
   14000f755:	stos   DWORD PTR es:[rdi],eax
   14000f756:	pop    rcx
   14000f757:	add    BYTE PTR [rdi],cl
   14000f759:	(bad)  
   14000f75a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f75b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f75c:	rex.WXB push QWORD PTR [r11]
   14000f75f:	out    0xaf,eax
   14000f761:	mov    esp,0x87e84993
   14000f766:	repnz outs dx,DWORD PTR ds:[rsi]
   14000f768:	mov    eax,0x90db1621
   14000f76d:	(bad)
   14000f770:	lahf   
   14000f771:	in     eax,0xce
   14000f773:	rcl    DWORD PTR [rdi-0x709da7db],0x92
   14000f77a:	gs (bad) 
   14000f77c:	(bad)  
   14000f77d:	icebp  
   14000f77e:	sbb    dl,ah
   14000f780:	dec    DWORD PTR [rcx]
   14000f782:	fiadd  DWORD PTR [rcx-0x47]
   14000f785:	cmp    eax,0xeef48d7b
   14000f78a:	(bad)  
   14000f78b:	loope  0x14000f763
   14000f78d:	iret   
   14000f78e:	cld    
   14000f78f:	(bad)  
   14000f790:	fwait
   14000f791:	and    esi,edi
   14000f793:	xchg   ebp,eax
   14000f794:	rex.R push rbx
   14000f796:	call   0xe48145d8
   14000f79b:	or     DWORD PTR [rdx+0x74],ebp
   14000f79e:	lods   al,BYTE PTR ds:[rsi]
   14000f79f:	imul   esp,DWORD PTR [rax+0x4f4221da],0x1e866d88
   14000f7a9:	movabs eax,ds:0x263689e8667bdea0
   14000f7b2:	je     0x14000f763
   14000f7b4:	fiadd  WORD PTR [rbx]
   14000f7b6:	gs xchg ebx,eax
   14000f7b8:	sub    DWORD PTR [rsi+rax*1-0x53],edi
   14000f7bc:	(bad)  
   14000f7be:	pop    rdx
   14000f7bf:	pushf  
   14000f7c0:	push   0x12
   14000f7c2:	lods   eax,DWORD PTR ds:[rsi]
   14000f7c3:	push   rsp
   14000f7c4:	xchg   esp,eax
   14000f7c5:	lods   eax,DWORD PTR ds:[rsi]
   14000f7c6:	sub    edx,eax
   14000f7c8:	(bad)  
   14000f7ca:	cmp    ah,BYTE PTR [rdi+rbx*1]
   14000f7cd:	rex.B lahf 
   14000f7cf:	cmp    eax,DWORD PTR [rcx]
   14000f7d1:	hlt    
   14000f7d2:	push   rsi
   14000f7d3:	jo     0x14000f77d
   14000f7d5:	fld    TBYTE PTR [rbp+rsi*4-0x6e]
   14000f7d9:	xchg   esp,eax
   14000f7da:	jge    0x14000f76e
   14000f7dc:	pop    rax
   14000f7dd:	add    al,BYTE PTR [rcx-0x4c]
   14000f7e0:	nop
   14000f7e1:	or     al,0x33
   14000f7e3:	fld    DWORD PTR ss:[rax+0x4525e6ed]
   14000f7ea:	lahf   
   14000f7eb:	or     esp,eax
   14000f7ed:	(bad)  
   14000f7ee:	rex.WXB (bad) 
   14000f7f0:	xchg   ecx,eax
   14000f7f1:	fxch   st(3)
   14000f7f3:	and    ebx,0xccb255b6
   14000f7f9:	or     DWORD PTR [rdx+riz*4],eax
   14000f7fc:	or     eax,0x332018c
   14000f801:	(bad)  
   14000f802:	pop    rdx
   14000f803:	rex.WRXB xor rax,0x6dbf6050
   14000f809:	add    eax,0x305ec556
   14000f80e:	add    bh,dh
   14000f810:	rex.WRX popf 
   14000f812:	cmp    ebp,DWORD PTR ss:[rbx+0x4a]
   14000f816:	xchg   BYTE PTR [rax+0x1f33e5fe],al
   14000f81c:	and    DWORD PTR [rax],eax
   14000f81e:	pmulhw mm1,QWORD PTR [rdi-0x6a]
   14000f822:	(bad)  
   14000f823:	(bad)  
   14000f824:	cwde   
   14000f825:	rol    DWORD PTR [rdi],cl
   14000f827:	xchg   BYTE PTR [rax],al
   14000f829:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f82a:	retf   0xdb86
   14000f82d:	rex.R push rdx
   14000f82f:	ds push rsi
   14000f831:	push   rdi
   14000f832:	movabs ds:0x8aaa19e637c163eb,eax
   14000f83b:	xchg   ebx,eax
   14000f83c:	(bad)  
   14000f83d:	add    DWORD PTR [rax+0x7ff688b9],ebp
   14000f843:	hlt    
   14000f844:	sbb    ecx,DWORD PTR [rdx+0x199fffdf]
   14000f84a:	xchg   ebx,eax
   14000f84b:	mov    dh,0x4d
   14000f84d:	(bad)  
   14000f84e:	pop    rdx
   14000f84f:	imul   BYTE PTR [rax+rax*1]
   14000f852:	add    eax,0x644ba6a8
   14000f857:	fidiv  DWORD PTR [rcx-0x67]
   14000f85a:	xchg   DWORD PTR [rbx+rax*4+0x1ea67d90],ebx
   14000f861:	stos   DWORD PTR es:[rdi],eax
   14000f862:	and    dl,BYTE PTR [rip+0xffffffffc493911a]        # 0x104948982
   14000f868:	cmp    DWORD PTR [rcx],0xf8ac5496
   14000f86e:	(bad)  
   14000f86f:	test   DWORD PTR [rip+0xffffffffe375fc65],esp        # 0x12376f4da
   14000f875:	sbb    eax,0x88ae9214
   14000f87a:	add    BYTE PTR [rbx+0x1e97e84d],al
   14000f880:	add    eax,0xe5790e49
   14000f885:	sbb    DWORD PTR [rax],edx
   14000f887:	add    al,0xc7
   14000f889:	outs   dx,DWORD PTR ds:[rsi]
   14000f88a:	cmp    ebp,DWORD PTR [rdx-0x650d9d6c]
   14000f890:	add    BYTE PTR [rax+0x48],cl
   14000f893:	repnz pushf 
   14000f895:	fs xchg esp,eax
   14000f897:	mov    cl,0x68
   14000f899:	in     eax,dx
   14000f89a:	xor    eax,ebp
   14000f89c:	xchg   edi,eax
   14000f89d:	fimul  WORD PTR [rdi+0x33b31811]
   14000f8a3:	xor    eax,0x13e37cba
   14000f8a8:	iret   
   14000f8a9:	mov    eax,eax
   14000f8ab:	xor    DWORD PTR [rcx+0x5a7cff90],eax
   14000f8b1:	sub    eax,0xa3beb795
   14000f8b6:	jbe    0x14000f930
   14000f8b8:	std    
   14000f8b9:	(bad)  
   14000f8ba:	(bad)  
   14000f8bb:	xor    eax,0x1a6bd280
   14000f8c0:	xchg   edi,eax
   14000f8c1:	inc    BYTE PTR [rdx-0x252b9f02]
   14000f8c7:	xor    cl,ch
   14000f8c9:	ret    
   14000f8ca:	rex.RXB
   14000f8cb:	fs add eax,0xc2d5cc87
   14000f8d1:	(bad)  
   14000f8d2:	(bad)  
   14000f8d3:	jrcxz  0x14000f88a
   14000f8d5:	cmp    BYTE PTR [rbx+0x13],ch
   14000f8d8:	or     ch,0x8e
   14000f8db:	jrcxz  0x14000f8b2
   14000f8dd:	(bad)  
   14000f8de:	xor    al,BYTE PTR [rcx-0xbb728ec]
   14000f8e4:	out    0xa7,eax
   14000f8e6:	and    edi,DWORD PTR [rcx+rbx*8+0x6a]
   14000f8ea:	pop    rbx
   14000f8eb:	fimul  WORD PTR [rax+rcx*2-0x48f303e1]
   14000f8f2:	(bad)  
   14000f8f3:	stc    
   14000f8f4:	sub    eax,0xe9f72396
   14000f8f9:	mov    al,0x7a
   14000f8fb:	(bad)  
   14000f8fc:	(bad)  
   14000f8fd:	rol    DWORD PTR [rsi],0x9b
   14000f900:	jns    0x14000f88a
   14000f902:	xchg   edx,eax
   14000f903:	es and al,0xed
   14000f906:	add    BYTE PTR [rbp-0x29d2d7ca],cl
   14000f90c:	repnz (bad) 
   14000f90e:	ds jne 0x14000f97c
   14000f911:	or     al,ah
   14000f913:	or     esp,DWORD PTR [rdx-0x63aaef84]
   14000f919:	movabs ds:0x1707871dee1cd5d0,eax
   14000f922:	mov    bl,0x83
   14000f924:	adc    eax,0xe7042e7
   14000f929:	adc    dl,al
   14000f92b:	pop    rdi
   14000f92c:	rex.RXB jle 0x14000f919
   14000f92f:	jmp    0x14000f901
   14000f931:	addr32 lahf 
   14000f933:	add    ah,BYTE PTR [rax]
   14000f935:	je     0x14000f92a
   14000f937:	lea    eax,[rdi+0x62866612]
   14000f93d:	es mov ebx,0x24408c2b
   14000f943:	addr32 popf 
   14000f945:	or     eax,0xf1233a19
   14000f94a:	stc    
   14000f94b:	shr    DWORD PTR [rdx-0x37e2189],1
   14000f951:	xchg   ebp,eax
   14000f952:	lea    edx,[rdx+riz*4]
   14000f955:	rex.X mov cl,BYTE PTR [rdi+0x58769859]
   14000f95c:	enter  0xe34c,0x9e
   14000f960:	xchg   esp,eax
   14000f961:	rex.WXB iretq 
   14000f963:	hlt    
   14000f964:	data16 jle 0x14000f966
   14000f967:	scas   eax,DWORD PTR es:[rdi]
   14000f968:	(bad)  
   14000f969:	imul   BYTE PTR [rax+rdx*1]
   14000f96c:	enter  0x127d,0x61
   14000f970:	(bad)  
   14000f971:	rex.WB jmp 0x14000f964
   14000f974:	repnz cdq 
   14000f976:	rex.WXB out dx,eax
   14000f978:	fs xor dh,ah
   14000f97b:	fdivp  st(4),st
   14000f97d:	cmp    eax,DWORD PTR [rcx-0x3e]
   14000f980:	jnp    0x14000f9a9
   14000f982:	outs   dx,DWORD PTR ds:[rsi]
   14000f983:	in     al,0xe3
   14000f985:	rex.B cmp al,0x59
   14000f988:	adc    al,0xd1
   14000f98a:	rex.X jmp 0x1783215d7
   14000f990:	(bad)  
   14000f991:	cwde   
   14000f992:	or     DWORD PTR [rdx+riz*8-0x4bfd9f86],ecx
   14000f999:	je     0x14000fa0e
   14000f99b:	rol    BYTE PTR [rsi],1
   14000f99d:	mov    ah,0xf7
   14000f99f:	or     eax,0x80265a04
   14000f9a4:	adc    eax,0x1a806938
   14000f9a9:	pop    rbp
   14000f9aa:	push   rax
   14000f9ab:	movsxd edx,ecx
   14000f9ad:	sub    eax,0x92806a2c
   14000f9b2:	(bad)  
   14000f9b3:	in     al,dx
   14000f9b4:	(bad)  
   14000f9b5:	and    DWORD PTR [rbp-0x6e50e016],eax
   14000f9bb:	or     BYTE PTR [rcx],dh
   14000f9bd:	add    ch,BYTE PTR [rsi+0x108682cf]
   14000f9c3:	mov    ebp,0xc7ef6b35
   14000f9c8:	sbb    al,BYTE PTR [rbx+rbp*1+0x2463f91f]
   14000f9cf:	out    dx,al
   14000f9d0:	(bad)  
   14000f9d1:	sar    DWORD PTR [rdx],0xf2
   14000f9d4:	(bad)  
   14000f9d5:	mov    esi,0x58fa8c08
   14000f9da:	out    dx,al
   14000f9db:	ss fwait
   14000f9dd:	mov    cl,BYTE PTR [rcx+0x4ccc1998]
   14000f9e3:	rex.WR add al,0x32
   14000f9e6:	sbb    BYTE PTR [rcx],0x66
   14000f9e9:	ins    BYTE PTR es:[rdi],dx
   14000f9ea:	mov    dl,0x8c
   14000f9ec:	(bad)  
   14000f9ed:	rex.WR loopne 0x14000f9b3
   14000f9f0:	xchg   ebp,eax
   14000f9f1:	div    DWORD PTR [rax]
   14000f9f3:	xchg   ebx,eax
   14000f9f4:	add    eax,0x87158410
   14000f9f9:	or     r12,QWORD PTR [rbx+0x2f]
   14000f9fd:	(bad)  
   14000f9fe:	stos   BYTE PTR es:[rdi],al
   14000f9ff:	movsxd ebp,DWORD PTR [rdx+0x3d]
   14000fa02:	add    al,0x17
   14000fa04:	(bad)
   14000fa09:	std    
   14000fa0a:	ins    BYTE PTR es:[rdi],dx
   14000fa0b:	(bad)  
   14000fa0c:	in     al,dx
   14000fa0d:	xchg   ebp,eax
   14000fa0e:	adc    edx,eax
   14000fa10:	jnp    0x14000f9a2
   14000fa12:	imul   BYTE PTR es:[rdi+rcx*8-0x4e424524]
   14000fa1a:	jp     0x14000fa3b
   14000fa1c:	add    esi,DWORD PTR [rdi+rdi*4+0x7e]
   14000fa20:	cs pushf 
   14000fa22:	or     esi,ecx
   14000fa24:	jmp    0x14000fa48
   14000fa26:	and    edi,ecx
   14000fa28:	pop    rbp
   14000fa29:	lods   al,BYTE PTR ds:[rsi]
   14000fa2a:	movabs ds:0x1e6284fc4f7dd495,al
   14000fa33:	fcomp  QWORD PTR [rip+0x1361dc8f]        # 0x15362d6c8
   14000fa39:	(bad)  
   14000fa3a:	scas   eax,DWORD PTR es:[rdi]
   14000fa3b:	(bad)  
   14000fa3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fa3d:	movd   DWORD PTR [rsi-0x481a8025],mm0
   14000fa44:	fcomp  DWORD PTR [rdi*4-0x49d674b1]
   14000fa4b:	(bad)  [rcx-0xf8d9b25]
   14000fa51:	or     eax,0x3400b9a0
   14000fa56:	(bad)  
   14000fa57:	ret    0xa174
   14000fa5a:	pop    rdi
   14000fa5b:	push   rbx
   14000fa5c:	loopne 0x14000fad3
   14000fa5e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fa5f:	(bad)  
   14000fa60:	(bad)  
   14000fa61:	and    edi,DWORD PTR [rdx+0x49]
   14000fa64:	adc    eax,0xaff45839
   14000fa69:	rex.R (bad) 
   14000fa6b:	mov    esp,0x5e3e5fca
   14000fa70:	loope  0x14000fa76
   14000fa72:	nop
   14000fa73:	lea    ecx,[rbx+0x5fc2fd0]
   14000fa79:	and    BYTE PTR [rdx+0x4e1f3763],al
   14000fa7f:	fdiv   DWORD PTR [rcx]
   14000fa81:	add    ebp,eax
   14000fa83:	in     al,dx
   14000fa84:	cmp    BYTE PTR [rdx+0x588d9321],cl
   14000fa8a:	ins    BYTE PTR es:[rdi],dx
   14000fa8b:	xchg   al,dh
   14000fa8d:	pop    rbp
   14000fa8e:	or     DWORD PTR [rcx+0x38988988],0x44
   14000fa95:	(bad)  
   14000fa96:	(bad)  
   14000fa97:	(bad)  
   14000fa98:	sahf   
   14000fa99:	xor    DWORD PTR [rsi],eax
   14000fa9b:	and    al,BYTE PTR [rax+0x31]
   14000fa9e:	sub    esp,DWORD PTR [rbp+0x37]
   14000faa1:	mov    cl,0x2a
   14000faa3:	fidiv  DWORD PTR [rcx-0x427f32b1]
   14000faa9:	repnz add DWORD PTR [rax+0x4c],edi
   14000faad:	loop   0x14000faa1
   14000faaf:	add    DWORD PTR [rbx+0x447dd6de],esp
   14000fab5:	sar    BYTE PTR [rbx-0x375db0ba],0xed
   14000fabc:	(bad)  
   14000fabd:	mov    bh,0x79
   14000fabf:	(bad)  
   14000fac0:	adc    eax,0xc7d30742
   14000fac5:	(bad)  
   14000fac6:	adc    BYTE PTR [rcx-0x5b],ch
   14000fac9:	shl    ecx,1
   14000facb:	shl    BYTE PTR [rbx],0x42
   14000face:	or     BYTE PTR [rbx+0x1e4c1cf7],0x30
   14000fad5:	outs   dx,DWORD PTR ds:[rsi]
   14000fad6:	not    BYTE PTR [rdi+0xf81b41f]
   14000fadc:	jle    0x14000fab4
   14000fade:	cwde   
   14000fadf:	mov    ah,0x6d
   14000fae1:	add    bh,bh
   14000fae3:	sub    al,0x8e
   14000fae5:	xchg   esp,eax
   14000fae6:	pop    rbp
   14000fae7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fae8:	pop    rdi
   14000fae9:	push   0x74
   14000faeb:	and    DWORD PTR [rbp-0x28b91ffd],ebp
   14000faf1:	rex.WRX (bad) 
   14000faf3:	cli    
   14000faf4:	xor    BYTE PTR [rdx-0x29],ah
   14000faf7:	(bad)  
   14000faf8:	shl    DWORD PTR [rbx],0x2f
   14000fafb:	add    eax,0xe03087b1
   14000fb00:	fcomp  DWORD PTR [rbx]
   14000fb02:	call   0x1a3871f5e
   14000fb07:	xchg   ebp,eax
   14000fb08:	jmp    0x11598a5cf
   14000fb0d:	xor    DWORD PTR [rcx],ecx
   14000fb0f:	std    
   14000fb10:	fcom   QWORD PTR [rdi-0x78f9dc0]
   14000fb16:	rcl    BYTE PTR [rdx+0x1ca39f5d],1
   14000fb1c:	adc    edx,DWORD PTR [rax+0x44]
   14000fb1f:	fs or  al,0xa0
   14000fb22:	xor    eax,0xd557eb43
   14000fb27:	fisttp QWORD PTR [rdx+rax*1+0x66]
   14000fb2b:	es rex.RB (bad) 
   14000fb2e:	rex.RB ret 0xd741
   14000fb32:	(bad)  
   14000fb33:	mov    ebx,0x5984cae8
   14000fb38:	sub    ebp,eax
   14000fb3a:	lods   al,BYTE PTR ds:[rsi]
   14000fb3b:	cmp    BYTE PTR [rcx],ch
   14000fb3d:	lods   eax,DWORD PTR ds:[rsi]
   14000fb3e:	adc    eax,0x83d88fdb
   14000fb43:	in     eax,0xc0
   14000fb45:	rex.B (bad) 
   14000fb47:	cli    
   14000fb48:	movabs ds:0xd6fafadcee40c5e5,eax
   14000fb51:	repnz push rax
   14000fb53:	sbb    cl,BYTE PTR [rbx+0x7fa48b6f]
   14000fb59:	jo     0x14000fb9b
   14000fb5b:	rex.WB
   14000fb5c:	rex.R test al,0x5e
   14000fb5f:	(bad)  
   14000fb60:	rex.RXB sar BYTE PTR [r14],cl
   14000fb63:	and    BYTE PTR [rsi+0x4f],dl
   14000fb66:	and    ebp,DWORD PTR [rbp-0x3f]
   14000fb69:	lahf   
   14000fb6a:	stos   DWORD PTR es:[rdi],eax
   14000fb6b:	cli    
   14000fb6c:	xchg   esp,eax
   14000fb6d:	jge    0x14000faf7
   14000fb6f:	jmp    0x14000fb66
   14000fb71:	mov    esi,es
   14000fb73:	jnp    0x14000fbb4
   14000fb75:	int    0xad
   14000fb77:	mov    edi,0x8fac5bf2
   14000fb7c:	fisub  WORD PTR [rdi-0x52a786ef]
   14000fb82:	ja     0x14000fb50
   14000fb84:	gs (bad) 
   14000fb86:	rex.WX ins DWORD PTR es:[rdi],dx
   14000fb88:	jp     0x14000fbfc
   14000fb8a:	push   0x2e
   14000fb8c:	(bad)  
   14000fb8d:	sbb    ebp,DWORD PTR [rbp-0x69]
   14000fb90:	fimul  DWORD PTR [rbx+0x59]
   14000fb93:	(bad)  
   14000fb94:	shl    BYTE PTR [rcx-0x2b],0xc8
   14000fb98:	loop   0x14000fba9
   14000fb9a:	add    QWORD PTR [rcx+0x5f],r14
   14000fb9e:	(bad)  
   14000fb9f:	(bad)  
   14000fba0:	je     0x14000fbf7
   14000fba2:	test   eax,0xd886a8a6
   14000fba7:	xor    al,0x0
   14000fba9:	movabs al,ds:0x2dba96862012fb9f
   14000fbb2:	(bad)
   14000fbb5:	rcr    DWORD PTR [rax-0x4a],cl
   14000fbb8:	loop   0x14000fb50
   14000fbba:	and    DWORD PTR [rdx-0xe],ecx
   14000fbbd:	mov    WORD PTR [rcx],fs
   14000fbbf:	(bad)  
   14000fbc0:	cld    
   14000fbc1:	ds mov es,eax
   14000fbc4:	cld    
   14000fbc5:	(bad)  
   14000fbc6:	rex.WXB
   14000fbc7:	adc    DWORD PTR cs:[rax],ecx
   14000fbca:	adc    esi,DWORD PTR [rcx-0x54009dd6]
   14000fbd0:	gs jbe 0x14000fb7d
   14000fbd3:	add    ecx,DWORD PTR [rdx-0x1a9d6a77]
   14000fbd9:	(bad)  
   14000fbda:	adc    DWORD PTR [rcx],eax
   14000fbdc:	jae    0x14000fc0a
   14000fbde:	and    BYTE PTR [rdx+0x4e77b14e],bh
   14000fbe4:	rcr    BYTE PTR [rax+0x23],0x8f
   14000fbe8:	xor    bh,BYTE PTR [rsi]
   14000fbea:	sti    
   14000fbeb:	mov    ds,WORD PTR [rsi+0x5d]
   14000fbee:	fstp   TBYTE PTR [rdx]
   14000fbf0:	(bad)  
   14000fbf1:	xchg   esp,eax
   14000fbf2:	shl    DWORD PTR [rcx+0x7d],cl
   14000fbf5:	adc    BYTE PTR ss:[rax+0x4c],bh
   14000fbf9:	mov    edi,0xb17f1a5
   14000fbfe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fbff:	push   0x42
   14000fc01:	or     al,0xa0
   14000fc03:	rex.WR hlt 
   14000fc05:	(bad)  
   14000fc06:	jrcxz  0x14000fbf9
   14000fc08:	mov    ch,0xde
   14000fc0a:	rex.WR test al,0x8e
   14000fc0d:	xchg   edx,eax
   14000fc0e:	jmp    0x14000fc5c
   14000fc10:	add    al,0xd0
   14000fc12:	ror    ch,cl
   14000fc14:	call   0xca1cee55
   14000fc19:	(bad)  
   14000fc1a:	jl     0x14000fc40
   14000fc1c:	add    al,0xcf
   14000fc1e:	js     0x14000fc5f
   14000fc20:	mov    DWORD PTR [rbx],ebp
   14000fc22:	add    DWORD PTR [rsi-0x65],ecx
   14000fc25:	cs js  0x14000fc90
   14000fc28:	or     DWORD PTR [rax+0x3a],ecx
   14000fc2b:	adc    ch,dl
   14000fc2d:	add    al,0xc8
   14000fc2f:	in     eax,dx
   14000fc30:	sbb    ecx,DWORD PTR [rax+0x68e4f768]
   14000fc36:	xchg   edi,eax
   14000fc37:	mov    esi,0x3e2d2732
   14000fc3c:	(bad)  
   14000fc3d:	(bad)  
   14000fc3e:	cmp    al,0xc9
   14000fc40:	add    al,0x2b
   14000fc42:	cmc    
   14000fc43:	icebp  
   14000fc44:	(bad)  
   14000fc45:	adc    esi,DWORD PTR [rdx-0xf]
   14000fc48:	cmp    DWORD PTR [rsp+rsi*4],ebp
   14000fc4b:	shl    BYTE PTR [rdi+rdx*8+0x70e71a1f],cl
   14000fc52:	and    al,0xf2
   14000fc54:	and    edx,eax
   14000fc56:	mov    ecx,0x86328c66
   14000fc5b:	jns    0x14000fc72
   14000fc5d:	pop    rdx
   14000fc5e:	and    BYTE PTR [rbp+0x29026656],0x26
   14000fc65:	xchg   ebp,eax
   14000fc66:	add    al,0x26
   14000fc68:	mov    al,0x3b
   14000fc6a:	loop   0x14000fcd1
   14000fc6c:	jb     0x14000fc27
   14000fc6e:	nop
   14000fc6f:	xchg   ebp,eax
   14000fc70:	push   rdx
   14000fc71:	mov    dl,BYTE PTR [rax]
   14000fc73:	xchg   esp,eax
   14000fc74:	mov    ebp,edi
   14000fc76:	push   0x9b5ec06
   14000fc7b:	add    BYTE PTR [rax-0x38955b87],bh
   14000fc81:	outs   dx,BYTE PTR ds:[rsi]
   14000fc82:	ins    DWORD PTR es:[rdi],dx
   14000fc83:	test   DWORD PTR [rdi-0x1a08bfcf],0xfaf145cf
   14000fc8d:	sub    BYTE PTR [rcx-0x18],cl
   14000fc90:	pop    rax
   14000fc91:	repnz rex.XB and bpl,r9b
   14000fc95:	pop    rdi
   14000fc96:	jb     0x14000fc93
   14000fc98:	rex.WX
   14000fc99:	movabs al,gs:0xa35d7838cf1c6c62
   14000fca3:	icebp  
   14000fca4:	movabs eax,ds:0xbc1c84df91e371cf
   14000fcad:	int    0x4e
   14000fcaf:	ficom  DWORD PTR [rcx+0x41]
   14000fcb2:	int3   
   14000fcb3:	and    dh,BYTE PTR [rax+0x16d2bc69]
   14000fcb9:	rcr    BYTE PTR [rdx+0x2],1
   14000fcbc:	xor    eax,0x33494017
   14000fcc1:	cmp    BYTE PTR [rax],cl
   14000fcc3:	loope  0x14000fc98
   14000fcc5:	nop
   14000fcc6:	add    eax,0x11481994
   14000fccb:	mov    cs,WORD PTR [rax+0x6aaf1d2]
   14000fcd1:	ss out dx,al
   14000fcd3:	(bad)  
   14000fcd4:	and    eax,ebp
   14000fcd6:	(bad)  
   14000fcd7:	(bad)  
   14000fcd8:	add    eax,DWORD PTR [rax+rdx*8+0x68]
   14000fcdc:	mov    bh,0xa4
   14000fcde:	(bad)  
   14000fcdf:	sbb    BYTE PTR [rcx],cl
   14000fce1:	pop    rcx
   14000fce2:	push   rcx
   14000fce3:	rex.WXB
   14000fce4:	rex.WR jbe 0x14000fc7a
   14000fce7:	xor    dh,BYTE PTR [rcx]
   14000fce9:	cdq    
   14000fcea:	mov    r9,QWORD PTR [r11+rdx*1-0x1a]
   14000fcef:	sbb    BYTE PTR [rdi+0x20],ah
   14000fcf2:	(bad)  
   14000fcf3:	rol    BYTE PTR [rdx+riz*8-0x67],1
   14000fcf7:	add    BYTE PTR [rbx],ch
   14000fcf9:	push   rsi
   14000fcfa:	(bad)  
   14000fcfb:	in     al,0xe3
   14000fcfd:	jmp    rdi
   14000fcff:	and    ebx,esi
   14000fd01:	fmul   QWORD PTR [rax-0x314dddda]
   14000fd07:	rex.WB and al,0x2a
   14000fd0a:	movabs eax,ds:0xb8478ae603f8ad24
   14000fd13:	rex.WRX mov al,0x57
   14000fd16:	cmp    DWORD PTR [rcx],eax
   14000fd18:	push   rcx
   14000fd19:	adc    dh,bh
   14000fd1b:	mov    eax,0xfa004ffa
   14000fd20:	fistp  DWORD PTR [rbx-0x9]
   14000fd23:	xor    al,BYTE PTR [rax-0x1d66061d]
   14000fd29:	mov    cl,BYTE PTR [rcx+0x2]
   14000fd2c:	sub    BYTE PTR [rdx],ah
   14000fd2e:	cli    
   14000fd2f:	mov    cl,0x80
   14000fd31:	xchg   ebp,eax
   14000fd32:	sbb    BYTE PTR [rbx-0x77],dl
   14000fd35:	fidivr WORD PTR [rbp-0x6]
   14000fd38:	retf   0xff6
   14000fd3b:	std    
   14000fd3c:	add    eax,DWORD PTR [rax]
   14000fd3e:	clc    
   14000fd3f:	xchg   BYTE PTR [rbx-0x2f],bh
   14000fd42:	dec    ah
   14000fd44:	out    dx,eax
   14000fd45:	xor    bh,BYTE PTR [rdi]
   14000fd47:	clc    
   14000fd48:	mov    ch,cl
   14000fd4a:	test   eax,0xa0b56e4b
   14000fd4f:	fbld   TBYTE PTR [rsp+0x2d1a8269]
   14000fd56:	push   rax
   14000fd57:	jmp    0x14000fd79
   14000fd59:	sar    BYTE PTR [rcx],1
   14000fd5b:	ins    BYTE PTR es:[rdi],dx
   14000fd5c:	sbb    eax,0x60134985
   14000fd61:	mov    ?,WORD PTR [rsi]
   14000fd63:	push   rdx
   14000fd64:	sub    eax,0xf9c4ba53
   14000fd69:	jnp    0x14000fd15
   14000fd6b:	in     al,dx
   14000fd6c:	mov    esp,0x92759492
   14000fd71:	(bad)
   14000fd75:	add    DWORD PTR [rdx-0x68e45920],eax
   14000fd7b:	stc    
   14000fd7c:	int3   
   14000fd7d:	sub    edx,DWORD PTR [rdi+0x7ee75a47]
   14000fd83:	(bad)  
   14000fd84:	sar    edx,1
   14000fd86:	out    dx,eax
   14000fd87:	mov    WORD PTR [rcx-0x3765b422],?
   14000fd8d:	shl    DWORD PTR [rdi+0x7a47362],cl
   14000fd93:	(bad)  
   14000fd94:	and    eax,0x29026103
   14000fd99:	jmp    0x14000fdfd
   14000fd9b:	push   rax
   14000fd9c:	rex.RB push 0xffffffffffffffb1
   14000fd9f:	popf   
   14000fda0:	movabs eax,ds:0x1351b203e597ba05
   14000fda9:	pushf  
   14000fdaa:	xor    ch,BYTE PTR [rbx]
   14000fdac:	es push rsi
   14000fdae:	jbe    0x14000fe16
   14000fdb0:	shr    dh,0x60
   14000fdb3:	mov    ch,0x9f
   14000fdb5:	xchg   al,cl
   14000fdb7:	pop    rsi
   14000fdb8:	and    al,0x4
   14000fdba:	icebp  
   14000fdbb:	mov    ebx,0xdc954ac1
   14000fdc0:	(bad)  
   14000fdc1:	cmp    ebp,DWORD PTR [rbx]
   14000fdc3:	(bad)  
   14000fdc4:	gs mov bh,0xb4
   14000fdc7:	rol    edi,1
   14000fdc9:	mov    dl,0x5e
   14000fdcb:	sbb    DWORD PTR [rdi],esp
   14000fdcd:	fdivp  st(0),st
   14000fdcf:	gs rex.WRX push rdx
   14000fdd2:	stc    
   14000fdd3:	xor    edx,0x55784135
   14000fdd9:	in     al,dx
   14000fdda:	xchg   BYTE PTR [rax-0x742aab9f],bl
   14000fde0:	jge    0x14000fd68
   14000fde2:	(bad)  
   14000fde3:	(bad)  
   14000fde5:	mov    ds,WORD PTR [rbx]
   14000fde7:	lahf   
   14000fde8:	cli    
   14000fde9:	rex.WRB call 0x18d8ed9d4
   14000fdef:	es xchg edx,eax
   14000fdf1:	mov    eax,0x40d89e21
   14000fdf6:	movabs eax,ds:0xa832ee81746a09a4
   14000fdff:	mov    ebp,0x939d4a0c
   14000fe04:	nop
   14000fe05:	std    
   14000fe06:	ss push 0x312e6776
   14000fe0c:	push   rdx
   14000fe0d:	mov    dl,BYTE PTR [rbx]
   14000fe0f:	add    BYTE PTR [rax-0x16],dl
   14000fe12:	out    0xea,eax
   14000fe14:	sub    al,bl
   14000fe16:	push   0xffffffffffffffc2
   14000fe18:	(bad)  
   14000fe19:	or     BYTE PTR [rax+0x4e],ah
   14000fe1c:	jg     0x14000fe29
   14000fe1e:	adc    BYTE PTR [rbx-0x39],al
   14000fe21:	outs   dx,BYTE PTR ds:[rsi]
   14000fe22:	cmp    al,bl
   14000fe24:	enter  0x918d,0x73
   14000fe28:	(bad)  
   14000fe29:	scas   al,BYTE PTR es:[rdi]
   14000fe2a:	in     al,0x22
   14000fe2c:	and    BYTE PTR [rsi],ah
   14000fe2e:	add    DWORD PTR [rax-0x68],esp
   14000fe31:	(bad)  
   14000fe32:	xor    BYTE PTR [rcx-0x35de4d9a],cl
   14000fe38:	repz imul eax,DWORD PTR [rcx],0x2
   14000fe3c:	lods   al,BYTE PTR ds:[rsi]
   14000fe3d:	div    BYTE PTR [rbx-0x660ffe2]
   14000fe43:	adc    DWORD PTR [rcx+rdi*2],0xffffffbf
   14000fe47:	sar    BYTE PTR [rax+0x2e1a603f],0xac
   14000fe4e:	outs   dx,BYTE PTR ds:[rsi]
   14000fe4f:	lods   eax,DWORD PTR ds:[rsi]
   14000fe50:	out    0xc6,al
   14000fe52:	fs int3 
   14000fe54:	ss leave 
   14000fe56:	sub    BYTE PTR [rbx],al
   14000fe58:	rex.WX push rcx
   14000fe5a:	fsub   st,st(3)
   14000fe5c:	jbe    0x14000febd
   14000fe5e:	pop    rcx
   14000fe5f:	add    DWORD PTR [rbx+0x35],edi
   14000fe62:	or     eax,0xdff0a008
   14000fe67:	push   rbp
   14000fe68:	lea    esi,[rcx+rax*8+0x40d2d470]
   14000fe6f:	repz (bad) 
   14000fe71:	cld    
   14000fe72:	rex.WR pop rcx
   14000fe74:	retf   0x1747
   14000fe77:	rex.X pushf 
   14000fe79:	xchg   BYTE PTR [rax],bh
   14000fe7b:	rex.WB in eax,0x9c
   14000fe7e:	movabs al,ds:0x68a1e1e582e617da
   14000fe87:	cwde   
   14000fe88:	and    bl,BYTE PTR [rax+0x7ebc4957]
   14000fe8e:	shl    DWORD PTR [rdi],0xdc
   14000fe91:	mov    ebp,esi
   14000fe93:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fe94:	jg     0x14000fe31
   14000fe96:	icebp  
   14000fe97:	sahf   
   14000fe98:	call   QWORD PTR [rax-0x6d]
   14000fe9b:	jb     0x14000feb8
   14000fe9d:	xchg   edi,eax
   14000fe9e:	adc    al,BYTE PTR [rcx-0x20cb46b8]
   14000fea4:	rex.WRB jo 0x14000fe79
   14000fea7:	add    eax,0x16820e75
   14000feac:	pop    QWORD PTR [rdx-0x5dc93426]
   14000feb2:	xor    BYTE PTR [rcx+0x5a],ch
   14000feb5:	rex.RX loope 0x14000fe8a
   14000feb8:	jg     0x14000fe51
   14000feba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000febb:	jl     0x14000fe9d
   14000febd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000febe:	rex.RB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fec0:	sti    
   14000fec1:	clc    
   14000fec2:	(bad)  
   14000fec3:	mov    al,0x2c
   14000fec5:	fcmovnb st,st(1)
   14000fec7:	ror    DWORD PTR [rsi+0x10057b59],cl
   14000fecd:	shl    DWORD PTR [rcx+0x935685],0x6c
   14000fed4:	cmc    
   14000fed5:	xchg   dl,bh
   14000fed7:	ror    dl,cl
   14000fed9:	push   0xe
   14000fedb:	jb     0x14000fef0
   14000fedd:	xchg   edi,eax
   14000fede:	(bad)  
   14000fedf:	mov    BYTE PTR [rbp-0xeef7d9a],cl
   14000fee5:	cmp    al,0xd9
   14000fee7:	add    BYTE PTR [rbx],cl
   14000fee9:	fs (bad) 
   14000feec:	int    0x91
   14000feee:	out    dx,al
   14000feef:	add    DWORD PTR [rsi-0x7fc06218],edx
   14000fef5:	adc    eax,0x30293c49
   14000fefa:	adc    eax,DWORD PTR [rsi+0x60]
   14000fefd:	cs scas al,BYTE PTR es:[rdi]
   14000feff:	not    DWORD PTR [rdi+0x41]
   14000ff02:	adc    BYTE PTR [rsi],ah
   14000ff04:	jo     0x14000ff68
   14000ff06:	(bad)  
   14000ff07:	sub    DWORD PTR [rdx+0x6fb01fc8],edx
   14000ff0d:	jo     0x14000fefc
   14000ff0f:	xchg   edi,eax
   14000ff10:	add    ecx,DWORD PTR [rbx+0x71]
   14000ff13:	rex.WRXB
   14000ff14:	mov    r12b,BYTE PTR [r12+r8*2+0x4a]
   14000ff19:	in     eax,dx
   14000ff1a:	mov    eax,0x98e3757a
   14000ff1f:	and    ah,BYTE PTR [rdx+0x7765e6e3]
   14000ff25:	adc    DWORD PTR [rsi],esp
   14000ff27:	jle    0x14000ff7f
   14000ff29:	push   rbx
   14000ff2a:	jl     0x14000ff43
   14000ff2c:	(bad)  
   14000ff2d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ff2e:	mov    al,0x17
   14000ff30:	rex.WX
   14000ff31:	rex.WRX movabs rdi,0x261b1d17ca5d33c2
   14000ff3b:	mov    esi,0xf6fe8a2e
   14000ff40:	sbb    DWORD PTR [rdx+0x1f],ebx
   14000ff43:	cld    
   14000ff44:	stos   DWORD PTR es:[rdi],eax
   14000ff45:	sub    bh,ch
   14000ff47:	test   eax,0xe96611ff
   14000ff4c:	push   rsi
   14000ff4d:	sbb    eax,0x4974fe36
   14000ff52:	cmp    al,0x24
   14000ff54:	mov    cl,0x8b
   14000ff56:	mov    ch,BYTE PTR [rax+0x1cea04b9]
   14000ff5c:	add    ch,BYTE PTR [rdi]
   14000ff5e:	sbb    al,0x2
   14000ff60:	mov    ch,0x16
   14000ff62:	and    DWORD PTR [rbp+rax*1-0x7ebf7d50],0x2cf8e6c8
   14000ff6d:	lods   eax,DWORD PTR ds:[rsi]
   14000ff6e:	shl    BYTE PTR [rdx+riz*1+0x7cb44317],0x28
   14000ff76:	jl     0x14000ff03
   14000ff78:	jge    0x14000ffab
   14000ff7a:	rex.R cmp BYTE PTR [rcx],0xfd
   14000ff7e:	sbb    BYTE PTR [rdx-0x3b],dl
   14000ff81:	fsubr  QWORD PTR [rsp+riz*4+0x24]
   14000ff85:	and    BYTE PTR [rsp+rbp*4-0x64a41992],ch
   14000ff8c:	add    ecx,edi
   14000ff8e:	cdq    
   14000ff8f:	mov    DWORD PTR [rbx+rdx*4+0x12],eax
   14000ff93:	mov    cl,0x9
   14000ff95:	xor    DWORD PTR [rsi+0x29],0xd946b775
   14000ff9c:	push   0x37919b98
   14000ffa1:	add    eax,0x7c804fac
   14000ffa6:	stos   BYTE PTR es:[rdi],al
   14000ffa7:	lock mov ecx,0xe1f2cbd0
   14000ffad:	(bad)  
   14000ffae:	mul    BYTE PTR [rax+0x13]
   14000ffb1:	ss (bad) 
   14000ffb3:	or     ah,BYTE PTR [rdi]
   14000ffb5:	add    al,0xa5
   14000ffb7:	ins    BYTE PTR es:[rdi],dx
   14000ffb8:	loopne 0x14000ff9c
   14000ffba:	pop    rsi
   14000ffbb:	scas   eax,DWORD PTR es:[rdi]
   14000ffbc:	lahf   
   14000ffbd:	jns    0x14001001c
   14000ffbf:	jno    0x14000ffae
   14000ffc1:	jge    0x14000ffc3
   14000ffc3:	adc    al,0x8c
   14000ffc5:	jg     0x14000ffc8
   14000ffc7:	test   ch,ch
   14000ffc9:	cmp    dh,BYTE PTR [rip+0xfffffffffdbc3437]        # 0x13dbd3406
   14000ffcf:	fistp  WORD PTR [rdi]
   14000ffd1:	sbb    eax,0x9b6a1862
   14000ffd6:	jle    0x14001001c
   14000ffd8:	fcom   QWORD PTR [rcx*2-0x2edd9dff]
   14000ffdf:	(bad)  
   14000ffe0:	xchg   edx,eax
   14000ffe1:	(bad)  
   14000ffe2:	and    eax,0x4697bf0f
   14000ffe7:	rex ins BYTE PTR es:[rdi],dx
   14000ffe9:	mov    edi,0x22162596
   14000ffee:	imul   esi,DWORD PTR [rbp+0xc7e690f],0x741ef47c
   14000fff8:	(bad)  
   14000fff9:	jrcxz  0x14000ffda
   14000fffb:	push   rsp
   14000fffc:	repnz (bad) 
   14000fffe:	(bad)  
   14000ffff:	xlat   BYTE PTR ds:[rbx]
   140010000:	and    BYTE PTR [rdi-0xa24e82b],dh
   140010006:	sti    
   140010007:	ret    0x9009
   14001000a:	ss rex.B int 0x45
   14001000e:	jmp    0x140010027
   140010010:	call   0x14fb80631
   140010015:	fcomp  st(7)
   140010017:	imul   esi,DWORD PTR [rbx],0x16228c30
   14001001d:	(bad)  
   14001001e:	fdivr  QWORD PTR [rdx+0x12]
   140010021:	rex.B leave 
   140010023:	mov    ebx,0xd91817e3
   140010028:	xchg   ebx,eax
   140010029:	cmp    BYTE PTR [rcx],0x7f
   14001002c:	add    dl,BYTE PTR [rax]
   14001002e:	ror    DWORD PTR [rbp-0x1b59f179],0x7c
   140010035:	xchg   edx,eax
   140010036:	out    0x2e,eax
   140010038:	scas   eax,DWORD PTR es:[rdi]
   140010039:	fs jns 0x14000ffea
   14001003c:	and    esi,eax
   14001003e:	nop
   14001003f:	sbb    BYTE PTR [rcx],ah
   140010041:	(bad)  
   140010042:	jno    0x14000ffd2
   140010044:	sar    DWORD PTR [rax],0xb0
   140010047:	lods   al,BYTE PTR ds:[esi]
   14001004a:	hlt    
   14001004b:	jne    0x14001009c
   14001004d:	pop    rbx
   14001004e:	jg     0x140010050
   140010050:	sub    DWORD PTR [rsi],eax
   140010052:	(bad)  
   140010053:	add    al,0x56
   140010055:	ins    BYTE PTR es:[rdi],dx
   140010056:	mov    DWORD PTR [rcx-0x2a],edi
   140010059:	jne    0x14001000c
   14001005b:	jp     0x140010017
   14001005d:	mov    dl,0x35
   14001005f:	pop    rsp
   140010060:	iret   
   140010061:	mov    ah,0xc
   140010063:	mov    al,al
   140010065:	mov    ah,BYTE PTR [rax-0x49872024]
   14001006b:	xchg   ebp,eax
   14001006c:	jmp    0x140010086
   14001006e:	jnp    0x140010006
   140010070:	adc    cl,ah
   140010072:	push   0x2
   140010074:	fs ins BYTE PTR es:[rdi],dx
   140010076:	add    dl,BYTE PTR [rdi+0x68eb3cf2]
   14001007c:	xor    al,0x5a
   14001007e:	es and bl,ah
   140010081:	fwait
   140010082:	cmp    eax,0x49ce7657
   140010087:	sub    BYTE PTR [r15-0x3f],r8b
   14001008b:	rex.B loope 0x1400100aa
   14001008e:	movabs eax,ds:0x5b947caef9181958
   140010097:	cmp    BYTE PTR [rdi],cl
   140010099:	(bad)  
   14001009a:	jl     0x140010105
   14001009c:	jmp    0x1400100fa
   14001009e:	in     eax,dx
   14001009f:	fist   WORD PTR [rdi+0x68]
   1400100a2:	jge    0x140010084
   1400100a4:	addr32 push rbp
   1400100a6:	cli    
   1400100a7:	xchg   edi,eax
   1400100a8:	jg     0x1400100b3
   1400100aa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400100ab:	jge    0x14001007d
   1400100ad:	add    al,0x35
   1400100af:	fucomip st,st(5)
   1400100b1:	or     BYTE PTR [rcx+rcx*2],ch
   1400100b4:	shr    DWORD PTR [rdx+0x3],cl
   1400100b7:	popf   
   1400100b8:	gs enter 0x51c2,0xd0
   1400100bd:	ret    0x7021
   1400100c0:	imul   ecx,DWORD PTR [rcx],0x48
   1400100c3:	fld    TBYTE PTR [rsi+0x61]
   1400100c6:	push   rcx
   1400100c7:	sbb    al,0x45
   1400100c9:	or     al,bh
   1400100cb:	and    al,0xa2
   1400100cd:	add    DWORD PTR [rbx+0x53],0xd8a99d91
   1400100d4:	jge    0x14001009f
   1400100d6:	std    
   1400100d7:	pop    rsi
   1400100d8:	cmp    ecx,DWORD PTR [rdi]
   1400100da:	rex jo 0x1400100c0
   1400100dd:	mov    cl,0xc3
   1400100df:	movabs eax,ds:0x325717f3973cf37b
   1400100e8:	adc    ah,BYTE PTR [rcx]
   1400100ea:	xor    bl,dl
   1400100ec:	es repnz and al,0x21
   1400100f0:	jbe    0x140010095
   1400100f2:	je     0x14001009b
   1400100f4:	test   DWORD PTR [rax-0xf],0xdac8117
   1400100fb:	repnz sahf 
   1400100fd:	sti    
   1400100fe:	jmp    0x12b0c20b9
   140010103:	(bad)  
   140010104:	out    0x7a,al
   140010106:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010107:	rex.RX
   140010108:	rex.R (bad) 
   14001010a:	scas   eax,DWORD PTR es:[rdi]
   14001010b:	(bad)  
   14001010c:	scas   al,BYTE PTR es:[rdi]
   14001010d:	ror    BYTE PTR [rcx+0x2a],0x45
   140010111:	push   rax
   140010112:	sub    DWORD PTR [rcx],esp
   140010114:	(bad)  [rdi+0x36]
   140010117:	rcr    BYTE PTR [rsi-0x57],0x33
   14001011b:	pop    rsp
   14001011c:	jl     0x14001013f
   14001011e:	(bad)  
   14001011f:	sub    ch,BYTE PTR [rdi]
   140010121:	iret   
   140010122:	int3   
   140010123:	xor    bh,BYTE PTR [rbp-0x78]
   140010126:	adc    DWORD PTR [rbx-0x70],ecx
   140010129:	rex.X fcom QWORD PTR [rdi-0x5cbd3514]
   140010130:	(bad)  
   140010131:	js     0x140010177
   140010133:	and    al,0xdd
   140010135:	rex.XB (bad) 
   140010137:	(bad)  
   140010138:	out    dx,eax
   140010139:	add    BYTE PTR [rax-0x1255794b],cl
   14001013f:	sbb    bl,BYTE PTR [rax+0x4a0cc148]
   140010145:	int3   
   140010146:	data16 (bad) 
   140010148:	mov    ebp,0xd6f82af4
   14001014d:	mul    DWORD PTR [rax-0x31402c0b]
   140010153:	jb     0x14001011c
   140010155:	punpckhdq mm5,mm7
   140010158:	and    ah,dh
   14001015a:	fiadd  DWORD PTR [rax]
   14001015c:	shl    BYTE PTR [rsi],cl
   14001015e:	test   al,0xd1
   140010160:	(bad)  
   140010161:	mov    bh,0xf
   140010163:	add    ch,bl
   140010165:	and    esp,DWORD PTR [rax-0x311f5c3b]
   14001016b:	mov    dl,0x5d
   14001016d:	imul   ebp,DWORD PTR [rax-0x61da7924],0xa67efa91
   140010177:	test   al,0x4f
   140010179:	sub    esi,eax
   14001017b:	fucomp st(5)
   14001017d:	addr32 add bl,dl
   140010180:	int    0x38
   140010182:	push   rdi
   140010183:	sub    BYTE PTR [rcx+0x63],ah
   140010186:	mov    ebx,0xb7d7566f
   14001018b:	jae    0x140010158
   14001018d:	sub    BYTE PTR [rax+rbx*4+0x1e],cl
   140010191:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010192:	pop    rbp
   140010193:	cmp    esp,eax
   140010195:	add    al,0x83
   140010197:	adc    DWORD PTR [rsi-0x43],eax
   14001019a:	rex.WR xchg sil,r9b
   14001019d:	adc    al,0x60
   14001019f:	in     eax,0xfe
   1400101a1:	out    0xd1,al
   1400101a3:	es jl  0x140010127
   1400101a6:	jle    0x14001014e
   1400101a8:	mov    bl,0x8d
   1400101aa:	int3   
   1400101ab:	lods   al,BYTE PTR ds:[rsi]
   1400101ac:	ret    
   1400101ad:	rex.WRX sub rax,0xfffffffff9b1a62a
   1400101b3:	shr    ebx,1
   1400101b5:	sbb    bh,BYTE PTR [rbx-0x3b]
   1400101b8:	add    BYTE PTR [rsi+rax*2-0x5],bh
   1400101bc:	mov    QWORD PTR [rax+riz*4],rbp
   1400101c0:	jne    0x140010180
   1400101c2:	rex.WR add al,0x3a
   1400101c5:	xchg   esi,eax
   1400101c6:	lahf   
   1400101c7:	rex.B
   1400101c8:	rex.WR mov cl,0x71
   1400101cb:	cmp    al,0x7f
   1400101cd:	mov    al,0x29
   1400101cf:	popf   
   1400101d0:	stos   BYTE PTR es:[rdi],al
   1400101d1:	out    dx,eax
   1400101d2:	adc    edi,DWORD PTR [rsi-0x3c]
   1400101d5:	pop    rsi
   1400101d6:	rex.XB
   1400101d7:	repnz mov edx,0x1debb065
   1400101dd:	rex.WB
   1400101de:	ror    QWORD PTR [r10+r8*2+0x42],0x8b
   1400101e4:	enter  0x6445,0x2e
   1400101e8:	pushf  
   1400101e9:	lods   al,BYTE PTR ds:[rsi]
   1400101ea:	xor    al,0x37
   1400101ec:	add    ax,0x73fb
   1400101f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400101f1:	sbb    BYTE PTR [rdx-0x3c29775],0xf3
   1400101f8:	sub    bh,cl
   1400101fa:	loope  0x1400101fb
   1400101fc:	or     ah,BYTE PTR [rsi+0x46ec6cb3]
   140010202:	movabs al,ds:0xb9b90b2b77dece
   14001020b:	(bad)  
   14001020c:	(bad)  
   14001020d:	xchg   BYTE PTR [rsp+rbx*1],ch
   140010210:	add    eax,0x3edd97b7
   140010215:	add    eax,0xf2d3137e
   14001021a:	lods   al,BYTE PTR ds:[rsi]
   14001021b:	rex.WX imul rdi,QWORD PTR [rdx+0x16b8f0ac],0x16c1c37
   140010226:	add    BYTE PTR [rsi-0x47],ch
   140010229:	imul   edi,DWORD PTR [rcx],0xd5aa242d
   14001022f:	rcr    BYTE PTR [rsi-0x47],1
   140010232:	je     0x140010269
   140010234:	retf   
   140010235:	repnz int3 
   140010237:	rex.WX outs dx,BYTE PTR ds:[rsi]
   140010239:	push   rdi
   14001023a:	xchg   edi,eax
   14001023b:	retf   
   14001023c:	and    dh,BYTE PTR [rsi+0x1d5fceeb]
   140010242:	rex.WB (bad) 
   140010244:	ja     0x140010299
   140010246:	or     DWORD PTR [rdx-0x27ea513c],0x65
   14001024d:	sbb    eax,0xabe56caf
   140010252:	mov    ecx,0xb56088c1
   140010257:	cmp    BYTE PTR [rcx+0x35],0x88
   14001025b:	jmp    0x14001025e
   14001025d:	jnp    0x140010299
   14001025f:	or     eax,DWORD PTR [rax]
   140010261:	cmp    BYTE PTR [rcx-0x1f],bh
   140010264:	pushf  
   140010265:	cmp    dh,0x84
   140010268:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010269:	(bad)
   14001026c:	(bad)  
   14001026d:	push   rax
   14001026e:	fs cdq 
   140010270:	and    DWORD PTR [rdi+0x28],esp
   140010273:	adc    al,0xcb
   140010275:	pop    rdi
   140010276:	test   eax,0x7151e870
   14001027b:	ins    DWORD PTR es:[rdi],dx
   14001027c:	adc    DWORD PTR [rsi-0x4304dc16],esi
   140010282:	stos   BYTE PTR es:[rdi],al
   140010283:	push   rax
   140010284:	cwde   
   140010285:	or     al,0x9e
   140010287:	out    0x7d,al
   140010289:	cdq    
   14001028a:	and    al,BYTE PTR [rdi]
   14001028c:	sahf   
   14001028d:	xchg   BYTE PTR [rbx-0x4043a5cd],bl
   140010294:	movabs eax,ds:0x58eff89f5a377d6e
   14001029d:	out    dx,al
   14001029e:	cld    
   14001029f:	movabs al,ds:0x53885997201bef26
   1400102a8:	push   rax
   1400102a9:	rol    BYTE PTR [rdx],cl
   1400102ab:	mov    bh,0x96
   1400102ad:	in     al,dx
   1400102ae:	rex.WR or rdi,0xffffffffe895c43c
   1400102b5:	rex.B adc al,0x8c
   1400102b8:	xchg   edi,eax
   1400102b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400102ba:	jo     0x14001026f
   1400102bc:	(bad)  
   1400102bd:	retf   
   1400102be:	add    BYTE PTR [rax-0x6fed8747],al
   1400102c4:	mov    al,0x7f
   1400102c6:	rex.RXB mov DWORD PTR [r9-0x6a165c95],r14d
   1400102cd:	retf   
   1400102ce:	pop    rbx
   1400102cf:	and    edi,DWORD PTR [rdi-0x33e66f2c]
   1400102d5:	jbe    0x140010319
   1400102d7:	jo     0x1400102cf
   1400102d9:	js     0x140010278
   1400102db:	lock sahf 
   1400102dd:	rex.R (bad) 
   1400102df:	(bad)  
   1400102e0:	rex.RX
   1400102e1:	sbb    bp,WORD PTR [rsi+0x58]
   1400102e5:	int    0xed
   1400102e7:	or     BYTE PTR [rax+rdi*2-0x5a37ee42],cl
   1400102ee:	mov    esi,0xac362b9
   1400102f3:	not    edi
   1400102f5:	push   0x3478f378
   1400102fa:	movabs ds:0x4c3390b1f947cd6e,eax
   140010303:	loop   0x140010342
   140010305:	(bad)  
   140010306:	jl     0x140010296
   140010308:	cli    
   140010309:	retf   0x4e7c
   14001030c:	rex.R (bad) 
   14001030e:	and    DWORD PTR [rdi-0x6e8f5c70],edi
   140010314:	enter  0x87f1,0x72
   140010318:	rex.R mov dil,0x37
   14001031b:	adc    DWORD PTR [rsp-0xbad2156],esp
   140010322:	ds adc esp,edx
   140010325:	pop    rdx
   140010326:	rex.R jmp 0x14001036c
   140010329:	jg     0x140010380
   14001032b:	test   eax,0xe835ff0f
   140010330:	rex.RX xlat BYTE PTR ds:[rbx]
   140010332:	shl    BYTE PTR [rax+rax*4-0x37],0x1
   140010337:	xchg   ebx,eax
   140010338:	fstp   TBYTE PTR [rip+0xffffffffda6d8917]        # 0x11a6e8c55
   14001033e:	mov    cl,0xe6
   140010340:	movabs ds:0x5a16e57055941cdd,al
   140010349:	cwde   
   14001034a:	rex.RXB jns 0x1400103ae
   14001034d:	adc    DWORD PTR [rcx-0x44bf0d23],edx
   140010353:	rex.WRX pop rdi
   140010355:	out    dx,al
   140010356:	mov    dh,0x9a
   140010358:	(bad)  
   140010359:	sti    
   14001035a:	mov    esi,DWORD PTR [rsi]
   14001035c:	mov    ah,0xd9
   14001035e:	sbb    ebp,edx
   140010360:	lea    esp,[rcx-0x67276a32]
   140010366:	rex.R movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010368:	rex leave 
   14001036a:	rex.WRX or rax,0x4777f197
   140010370:	add    BYTE PTR [rdx+0x19],bh
   140010373:	rex.RX add r13d,DWORD PTR [rip+0xffffffffb6600043]        # 0xf66103bd
   14001037a:	(bad)
   14001037e:	(bad)  
   14001037f:	cmp    eax,0x36b2fd83
   140010384:	rex.X outs dx,DWORD PTR ds:[rsi]
   140010386:	nop
   140010387:	leave  
   140010388:	add    BYTE PTR [rax+0x3d7087df],bl
   14001038e:	(bad)  
   14001038f:	out    dx,eax
   140010390:	repnz add DWORD PTR [rax],edi
   140010393:	(bad)  
   140010394:	shl    DWORD PTR cs:[rbx+0x14],0x9d
   140010399:	adc    al,0xd3
   14001039b:	mov    esi,0x208d3f25
   1400103a0:	sbb    edx,eax
   1400103a2:	mov    esi,DWORD PTR [rbp+0x4dac2472]
   1400103a8:	sub    DWORD PTR [rbp-0x25d4e907],eax
   1400103ae:	ret    
   1400103af:	movabs ds:0x675355e908eca91e,al
   1400103b8:	jmp    0x1400103b5
   1400103ba:	test   eax,0x7d46ff2b
   1400103bf:	ror    BYTE PTR [rdx+0x60],1
   1400103c2:	add    eax,ecx
   1400103c4:	sub    al,0xd8
   1400103c6:	(bad)  
   1400103c9:	ds (bad) 
   1400103cb:	mov    edx,0x7d685de5
   1400103d0:	loop   0x140010429
   1400103d2:	fnstenv [rsi+rcx*1+0x1b]
   1400103d6:	sbb    BYTE PTR [rip+0x33a21ce8],cl        # 0x173a320c4
   1400103dc:	mov    BYTE PTR [rax-0x65],ch
   1400103df:	pop    rax
   1400103e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400103e1:	shl    DWORD PTR [rsi+0x63884749],1
   1400103e7:	imul   ecx,DWORD PTR [rcx+rsi*4],0xffffffbf
   1400103eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400103ec:	rcr    ah,1
   1400103ee:	in     al,dx
   1400103ef:	or     esi,DWORD PTR [rdi]
   1400103f1:	cs (bad) 
   1400103f3:	adc    al,0x9
   1400103f5:	(bad)  
   1400103f6:	js     0x1400103e6
   1400103f8:	jnp    0x140010434
   1400103fa:	rex.WRB lods al,BYTE PTR ds:[rsi]
   1400103fc:	or     eax,0x219e651
   140010401:	movabs ds:0xd9b1320d9db4ba73,eax
   14001040a:	sbb    ah,dh
   14001040c:	(bad)  
   14001040d:	jg     0x1400103b6
   14001040f:	rol    BYTE PTR [rdi-0x77],cl
   140010412:	rex.WX push rdi
   140010414:	rex.RXB mov r10b,0xed
   140010417:	mov    gs,ebp
   140010419:	push   0x5d
   14001041b:	rex.WRXB pop r12
   14001041d:	mov    DWORD PTR [rbp-0x6079a342],0xb827dc98
   140010427:	mov    dh,0xc
   140010429:	rcl    BYTE PTR [rbx+0x68],0x31
   14001042d:	cmp    al,0x26
   14001042f:	ficomp WORD PTR [rdi+0x11]
   140010432:	test   al,0x6d
   140010434:	jp     0x140010419
   140010436:	(bad)  
   140010437:	movabs ds:0x25fa35f01cde6915,al
   140010440:	stos   DWORD PTR es:[rdi],eax
   140010441:	jle    0x14001040d
   140010443:	iret   
   140010444:	out    dx,eax
   140010445:	adc    edx,DWORD PTR [rax]
   140010447:	stos   DWORD PTR es:[rdi],eax
   140010448:	movabs ds:0x267c4983ad10385,eax
   140010451:	xchg   ecx,eax
   140010452:	enter  0x819,0xc7
   140010456:	or     BYTE PTR [rdx-0x11],ah
   140010459:	fistp  QWORD PTR [rsi+0x7bbdd79]
   14001045f:	xor    eax,0xb1fad017
   140010464:	pop    rdi
   140010465:	(bad)  
   140010466:	rex.XB ins BYTE PTR es:[rdi],dx
   140010468:	(bad)  
   140010469:	xor    al,0xdc
   14001046b:	xchg   edx,eax
   14001046c:	pop    rbp
   14001046d:	or     ah,al
   14001046f:	lods   eax,DWORD PTR ds:[rsi]
   140010470:	sub    al,0x6c
   140010472:	ret    
   140010473:	(bad)  
   140010474:	or     BYTE PTR [rcx],al
   140010476:	sub    BYTE PTR [rcx+rsi*1],dh
   140010479:	add    dl,ah
   14001047b:	or     bh,bl
   14001047d:	sbb    bh,ch
   14001047f:	jae    0x140010482
   140010481:	(bad)  
   140010482:	sub    cl,BYTE PTR [rbp-0xe]
   140010485:	jle    0x1400104b0
   140010487:	es (bad) 
   140010489:	adc    eax,0x6d587e0a
   14001048e:	mov    WORD PTR [rbp+rbx*1-0x66],ds
   140010492:	and    ecx,eax
   140010494:	push   0x1
   140010496:	cmp    edi,DWORD PTR [rsi-0x627be679]
   14001049c:	imul   ebx,DWORD PTR [rax-0x44f9b353],0xc40882aa
   1400104a6:	rex.WX cdqe 
   1400104a8:	xchg   ebp,eax
   1400104a9:	add    BYTE PTR [rax+0x2f],al
   1400104ac:	(bad)  
   1400104ad:	push   0xfffffffffd9231d3
   1400104b2:	(bad)  
   1400104b3:	mov    ebp,0xbc0c00d0
   1400104b8:	repz iret 
   1400104ba:	mov    al,BYTE PTR [rbp-0x5607c94f]
   1400104c0:	mov    edx,0xf1bdced2
   1400104c5:	(bad)  
   1400104c6:	xor    ah,BYTE PTR [rsi+0x200000a0]
   1400104cc:	add    BYTE PTR [rcx+0x44],cl
   1400104cf:	push   r12
   1400104d1:	loopne 0x140010454
   1400104d3:	and    eax,0x79aaa0f8
   1400104d8:	jmp    0xd2fd4ffc
   1400104dd:	imul   esi,DWORD PTR [rcx+0x4fe3e522],0x2a
   1400104e4:	jle    0x14001046d
   1400104e6:	sub    DWORD PTR [rbx],ebp
   1400104e8:	repnz mul DWORD PTR [rdx]
   1400104eb:	idiv   DWORD PTR [rdi+0x45]
   1400104ee:	mov    ah,0xbc
   1400104f0:	(bad)
   1400104f3:	add    eax,0x34fef7a8
   1400104f8:	rex.R out 0xce,eax
   1400104fb:	adc    al,0xd0
   1400104fd:	adc    dh,0xce
   140010500:	adc    al,0x68
   140010502:	add    DWORD PTR [rax-0x43f37a27],esi
   140010508:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010509:	ja     0x140010526
   14001050b:	jp     0x140010552
   14001050d:	ficomp DWORD PTR [rcx-0x37]
   140010510:	add    eax,ebp
   140010512:	int    0x1
   140010514:	sbb    ebp,DWORD PTR [rbx-0x69785c7d]
   14001051a:	rex.WX fidivr DWORD PTR [rbp+0x4222977f]
   140010521:	imul   eax,DWORD PTR [rbx+0x19],0xfffffff6
   140010525:	mov    ch,0x35
   140010527:	(bad)  
   140010528:	out    0x8a,al
   14001052a:	add    eax,0xddfe2498
   14001052f:	iret   
   140010530:	mov    ch,0x91
   140010532:	hlt    
   140010533:	jbe    0x14001058f
   140010535:	(bad)
   140010538:	or     eax,0xaae40f2e
   14001053d:	int3   
   14001053e:	xchg   ecx,eax
   14001053f:	popf   
   140010540:	clc    
   140010541:	jp     0x140010504
   140010543:	(bad)  
   140010544:	cdq    
   140010545:	add    BYTE PTR [rcx+rsi*1-0x43eca07b],ah
   14001054c:	push   rbx
   14001054d:	scas   eax,DWORD PTR es:[rdi]
   14001054e:	lods   al,BYTE PTR ds:[rsi]
   14001054f:	mov    esi,0xc520f78b
   140010554:	adc    al,dh
   140010556:	jg     0x14001059e
   140010558:	ss ds rex.X jns 0x140010518
   14001055d:	rex.W
   14001055e:	rex mov WORD PTR [rcx],gs
   140010561:	push   rsp
   140010562:	sti    
   140010563:	push   0x19e2fca
   140010568:	mov    al,0x96
   14001056a:	test   BYTE PTR [rbx+rbp*8+0x13100683],al
   140010571:	call   FWORD PTR [rbx-0x6b]
   140010574:	cli    
   140010575:	sbb    eax,0x28fff71a
   14001057a:	or     esp,DWORD PTR [rdi-0x2e7feb3f]
   140010580:	sbb    BYTE PTR [rax],0x8
   140010583:	sub    DWORD PTR [rdi+0x3dc78870],esi
   140010589:	std    
   14001058a:	and    eax,0x4c4a8d33
   14001058f:	(bad)  
   140010590:	and    dh,BYTE PTR [rax]
   140010592:	stos   DWORD PTR es:[rdi],eax
   140010593:	out    0x1,eax
   140010595:	add    ch,cl
   140010597:	rex.RX movabs ds:0x5d5d7a2c5618718,eax
   1400105a1:	sub    eax,DWORD PTR [rbx-0x17]
   1400105a4:	cmp    esp,DWORD PTR [rsi-0x321ecc42]
   1400105aa:	sub    BYTE PTR [rcx+0x4],ah
   1400105ad:	mov    dl,0x61
   1400105af:	sbb    eax,0xca633b82
   1400105b4:	jmp    0x1400105d4
   1400105b6:	in     al,0xc8
   1400105b8:	mov    ah,0xc8
   1400105ba:	push   0x3ae3aae
   1400105bf:	in     al,dx
   1400105c0:	cdq    
   1400105c1:	(bad)  
   1400105c2:	add    bh,ch
   1400105c4:	adc    al,0x9e
   1400105c6:	movabs al,ds:0xfff6a263dd0df801
   1400105cf:	(bad)  
   1400105d0:	pop    rcx
   1400105d1:	imul   edx,DWORD PTR [rax+0x62],0x6
   1400105d5:	pop    rsi
   1400105d6:	lods   eax,DWORD PTR ds:[rsi]
   1400105d7:	mul    esi
   1400105d9:	xor    BYTE PTR [rbp+0x16],0x4a
   1400105dd:	xchg   ecx,eax
   1400105de:	loop   0x14001065a
   1400105e0:	rex.X
   1400105e1:	rex.XB loop 0x1400105ac
   1400105e4:	(bad)  
   1400105e5:	repnz (bad) 
   1400105e7:	ins    BYTE PTR es:[rdi],dx
   1400105e8:	adc    al,0x1c
   1400105ea:	push   rsp
   1400105eb:	rex.W jle 0x14001065d
   1400105ee:	(bad)  
   1400105ef:	mov    esp,0xdc8099b5
   1400105f4:	cld    
   1400105f5:	movsxd r14,DWORD PTR [rsi+r8*1-0x4f]
   1400105fa:	(bad)  [rbp-0x40]
   1400105fd:	(bad)  
   1400105fe:	xlat   BYTE PTR ds:[rbx]
   1400105ff:	adc    eax,0xa69b8052
   140010604:	test   DWORD PTR [rbx+0x37],edi
   140010607:	adc    esi,edi
   140010609:	push   0xc
   14001060b:	sbb    DWORD PTR [rax-0x12],0x3f3d5df5
   140010612:	fstp   DWORD PTR [rsi+rcx*4-0x3ffa9b5a]
   140010619:	push   rsi
   14001061a:	fldenv es:[rsi+0x6e]
   14001061e:	mov    dl,0xdd
   140010620:	idiv   esi
   140010622:	clc    
   140010623:	pop    rbx
   140010624:	(bad)  
   140010626:	xor    dl,dl
   140010628:	scas   eax,DWORD PTR es:[rdi]
   140010629:	jno    0x140010664
   14001062b:	outs   dx,DWORD PTR ds:[rsi]
   14001062c:	outs   dx,BYTE PTR ds:[rsi]
   14001062d:	nop
   14001062e:	mov    ebp,0x4cdfeb96
   140010633:	fcom   DWORD PTR [rbx]
   140010635:	or     eax,0x455e9ca0
   14001063a:	ret    0x5d6c
   14001063d:	cmp    BYTE PTR [rdi],cl
   14001063f:	(bad)  
   140010640:	lahf   
   140010641:	push   QWORD PTR [rbp+0x45]
   140010644:	or     ch,BYTE PTR [rdi]
   140010646:	xor    bh,ah
   140010648:	rex.WRX mov bpl,0xf6
   14001064b:	rex.R in al,dx
   14001064d:	xchg   edx,eax
   14001064e:	popf   
   14001064f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010650:	stos   BYTE PTR es:[rdi],al
   140010651:	xchg   edi,eax
   140010652:	(bad)  
   140010653:	(bad)  
   140010654:	(bad)
   140010657:	sbb    DWORD PTR [rdi-0x1810275d],edx
   14001065d:	(bad)  
   14001065e:	xchg   ecx,eax
   14001065f:	push   rax
   140010660:	sti    
   140010661:	pop    rbx
   140010662:	(bad)  
   140010663:	(bad)  
   140010664:	fld    QWORD PTR [rbx]
   140010666:	sbb    BYTE PTR [rbp+0x1d],ch
   140010669:	cmp    DWORD PTR [rdx],0x31067407
   14001066f:	mov    edx,0xaca49bd0
   140010674:	imul   edx,DWORD PTR [rip+0x7b2207f9],0x18c7bc2c        # 0x1bb230e77
   14001067e:	xor    ah,cl
   140010680:	fcmovne st,st(4)
   140010683:	rcl    DWORD PTR [rip+0xffffffffe0c8195d],0xf5        # 0x120c91fe7
   14001068a:	sar    BYTE PTR [rbx+0x720cc08d],1
   140010690:	fstp   DWORD PTR [rcx+0x6cdc6780]
   140010696:	(bad)  
   140010697:	lea    eax,[rbp+rbx*1+0x8de5667]
   14001069e:	push   rsp
   14001069f:	or     BYTE PTR [rsi-0x54],bh
   1400106a2:	(bad)  
   1400106a3:	movsxd ecx,DWORD PTR [rip+0x9c2a480]        # 0x149c3ab29
   1400106a9:	loopne 0x140010668
   1400106ab:	int    0x52
   1400106ad:	jle    0x1400106f8
   1400106af:	fidivr WORD PTR [rdi]
   1400106b1:	call   0x11cb08b4f
   1400106b6:	rex.WRXB add rax,0xffffffffc0844c56
   1400106bc:	adc    BYTE PTR [rdx+0x698dd895],ch
   1400106c2:	sub    cl,ch
   1400106c4:	(bad)  
   1400106c5:	(bad)  
   1400106c7:	mov    bh,0xc
   1400106c9:	(bad)  
   1400106ca:	xchg   DWORD PTR [rsi+0x49],ebp
   1400106cd:	(bad)  
   1400106ce:	cmp    dh,BYTE PTR [rdi+0x23042bbd]
   1400106d4:	add    dl,dl
   1400106d6:	cmp    edx,eax
   1400106d8:	test   BYTE PTR [rbx+0x44],0x10
   1400106dc:	xor    DWORD PTR [rcx-0x28],edx
   1400106df:	rex.RB loope 0x140010696
   1400106e2:	cmc    
   1400106e3:	sub    BYTE PTR [rcx+0x70],ch
   1400106e6:	xchg   ebx,eax
   1400106e7:	loope  0x14001071d
   1400106e9:	rex.XB jrcxz 0x14001074b
   1400106ec:	add    al,0x0
   1400106ee:	(bad)  
   1400106ef:	movabs al,ds:0xe735d5ef665afba1
   1400106f8:	stos   DWORD PTR es:[rdi],eax
   1400106f9:	rol    DWORD PTR [rsi],1
   1400106fb:	fidivr DWORD PTR [rdx+0x15]
   1400106fe:	pop    rdi
   1400106ff:	jg     0x1400106ed
   140010701:	xor    al,0xc5
   140010703:	clc    
   140010704:	retw   
   140010706:	pop    rsi
   140010707:	xor    BYTE PTR [rax],al
   140010709:	cs xor al,0x0
   14001070c:	icebp  
   14001070d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001070e:	pop    rbp
   14001070f:	(bad)  
   140010711:	(bad)  
   140010712:	sub    al,0x25
   140010714:	loope  0x140010721
   140010716:	(bad)  
   140010717:	jge    0x140010770
   140010719:	fsubr  st,st(5)
   14001071b:	rex.R add al,0x89
   14001071e:	rex.X
   14001071f:	rex.WRX ret 
   140010721:	jno    0x14001071b
   140010723:	sbb    eax,0x19059ce9
   140010728:	xchg   edx,edi
   14001072a:	(bad)  
   14001072b:	(bad)  
   14001072c:	(bad)  
   14001072d:	stos   BYTE PTR es:[rdi],al
   14001072e:	mov    eax,0xebab7963
   140010733:	xor    DWORD PTR [rax+rcx*1-0x2e1c285d],eax
   14001073a:	scas   eax,DWORD PTR es:[rdi]
   14001073b:	outs   dx,DWORD PTR ds:[rsi]
   14001073c:	sbb    BYTE PTR [rbx],ah
   14001073e:	xchg   BYTE PTR [rsi+rsi*8+0x46767fa1],cl
   140010745:	shl    ah,0x51
   140010748:	outs   dx,BYTE PTR ds:[rsi]
   140010749:	rex.RB push r11
   14001074b:	cmp    BYTE PTR [rax+0x31],ah
   14001074e:	fisub  WORD PTR [rbp+0x21]
   140010751:	(bad)  
   140010752:	movsxd ecx,DWORD PTR [rbx+rax*1-0x78]
   140010756:	or     edi,DWORD PTR [rbx+0x5c69dabd]
   14001075c:	pop    rbx
   14001075d:	fcmovne st,st(2)
   14001075f:	and    al,0x9b
   140010761:	stc    
   140010762:	and    ah,dh
   140010764:	push   rdx
   140010765:	adc    DWORD PTR [rsi+0x7f],ebx
   140010768:	call   FWORD PTR [rbp-0x7f7ea409]
   14001076e:	push   rsp
   14001076f:	rcr    DWORD PTR [rbx],1
   140010771:	(bad)  
   140010772:	pop    rdx
   140010773:	ficomp WORD PTR [rax]
   140010775:	in     al,dx
   140010776:	add    eax,0x11be9803
   14001077b:	add    BYTE PTR [rbx+0x48],0x38
   14001077f:	adc    DWORD PTR [rbp-0x17],ecx
   140010782:	jns    0x140010726
   140010784:	cs xchg ebp,eax
   140010786:	repz cmp edx,edi
   140010789:	movabs ds:0x47d76f5ef0a50978,al
   140010792:	test   BYTE PTR [rdi],cl
   140010794:	jg     0x14001076a
   140010796:	js     0x140010813
   140010798:	(bad)  
   140010799:	rex.WRB push r9
   14001079b:	push   rcx
   14001079c:	clc    
   14001079d:	(bad)  
   14001079e:	mov    ecx,0x944a5931
   1400107a3:	rex.RX ja 0x140010768
   1400107a6:	or     al,0x16
   1400107a8:	icebp  
   1400107a9:	xchg   esi,eax
   1400107aa:	shl    eax,0x95
   1400107ad:	out    dx,eax
   1400107ae:	imul   esi,DWORD PTR [rsi],0x803dcec5
   1400107b4:	pop    rax
   1400107b5:	xchg   ebx,eax
   1400107b6:	and    BYTE PTR [rsp+rdx*2-0x7],al
   1400107ba:	mul    esp
   1400107bc:	jle    0x1400107f8
   1400107be:	(bad)  
   1400107bf:	ins    DWORD PTR es:[rdi],dx
   1400107c0:	loope  0x140010791
   1400107c2:	mov    cl,0xf0
   1400107c4:	xchg   ecx,eax
   1400107c5:	pushf  
   1400107c6:	test   ebx,esi
   1400107c8:	xor    eax,0x11a5a446
   1400107cd:	jns    0x140010792
   1400107cf:	add    al,BYTE PTR [rdx]
   1400107d1:	cmp    edx,DWORD PTR [rbp+0x772363b7]
   1400107d7:	js     0x140010822
   1400107d9:	scas   eax,DWORD PTR es:[rdi]
   1400107da:	(bad)  
   1400107db:	cmp    ecx,DWORD PTR [rdi+riz*1-0xd2377c9]
   1400107e2:	rex (bad) 
   1400107e4:	sub    BYTE PTR [rdx],bl
   1400107e6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400107e8:	sahf   
   1400107e9:	loopne 0x1400107a5
   1400107eb:	cmp    DWORD PTR [rax+0x4d],esi
   1400107ee:	sbb    DWORD PTR [rax],eax
   1400107f0:	xchg   ebp,eax
   1400107f1:	rex.RX (bad) 
   1400107f3:	je     0x1400107a5
   1400107f5:	fwait
   1400107f6:	add    eax,0x147c33b0
   1400107fb:	scas   al,BYTE PTR es:[rdi]
   1400107fc:	mov    bl,dl
   1400107fe:	pop    rsp
   1400107ff:	xchg   DWORD PTR [rcx+0x1],ebx
   140010802:	adc    al,0x5e
   140010804:	sti    
   140010805:	loopne 0x1400107fb
   140010807:	mov    ecx,DWORD PTR [rax+0x1eb4bf]
   14001080d:	add    eax,0xa79697e1
   140010812:	add    cl,BYTE PTR [rax+0x368c9163]
   140010818:	sbb    DWORD PTR [rax+0x65fb16b4],eax
   14001081e:	call   0xce1c37ee
   140010823:	rex.WRB scas rax,QWORD PTR es:[rdi]
   140010825:	loopne 0x14001081c
   140010827:	(bad)  
   140010828:	loope  0x1400107d1
   14001082a:	(bad)  
   14001082b:	sbb    eax,0xf452297c
   140010830:	jg     0x140010843
   140010832:	ror    DWORD PTR [rcx+0x78405ac9],1
   140010838:	ins    DWORD PTR es:[rdi],dx
   140010839:	vpunpckldq ymm8,ymm8,YMMWORD PTR [rsi-0x58c3dc4e]
   140010841:	cwde   
   140010842:	adc    edi,0x8013fe4b
   140010848:	(bad)  
   140010849:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001084a:	push   rdi
   14001084b:	jae    0x14001086e
   14001084d:	ret    0x98f6
   140010850:	loop   0x1400107ec
   140010852:	add    DWORD PTR [rbx+rax*4+0x1f],ecx
   140010856:	add    edx,DWORD PTR [rbx-0x77ce00c4]
   14001085c:	or     bl,0xad
   14001085f:	cmp    esp,DWORD PTR [rdx]
   140010861:	mov    ebx,0x494b5cb2
   140010866:	int    0x17
   140010868:	mov    edi,0x6d39da7
   14001086d:	ret    0x94e0
   140010870:	loopne 0x140010885
   140010872:	mov    al,0x3f
   140010874:	movsxd esi,ecx
   140010876:	pop    rdi
   140010877:	mul    BYTE PTR [rsi]
   140010879:	test   dh,dl
   14001087b:	rex.RB (bad) 
   14001087d:	(bad)  
   14001087e:	js     0x1400108ba
   140010880:	out    dx,eax
   140010881:	call   FWORD PTR [rbx-0x63]
   140010884:	adc    eax,0xea0b70c8
   140010889:	hlt    
   14001088a:	(bad)  
   14001088b:	shl    DWORD PTR [rdx],cl
   14001088d:	loope  0x140010869
   14001088f:	cmc    
   140010890:	adc    esp,DWORD PTR [rbp+rax*1+0x4465c7c6]
   140010897:	jge    0x1400108a7
   140010899:	movsxd edi,DWORD PTR [rdi+0x17]
   14001089c:	scas   al,BYTE PTR es:[rdi]
   14001089d:	mov    esp,0x414af0
   1400108a2:	mov    WORD PTR [rdx+0x18],gs
   1400108a5:	in     eax,0x4e
   1400108a7:	rex.RXB out dx,eax
   1400108a9:	cmp    BYTE PTR [rbp+rdx*1-0x74],cl
   1400108ad:	cmp    DWORD PTR [rdi+riz*8-0x3a],ebp
   1400108b1:	sub    al,0x2d
   1400108b3:	cld    
   1400108b4:	cmc    
   1400108b5:	jnp    0x14001084a
   1400108b7:	rex.WX
   1400108b8:	rex.RB (bad) 
   1400108ba:	push   0x13c439b2
   1400108bf:	mov    esi,0x6b804cbe
   1400108c4:	mov    ebp,0xb724402f
   1400108c9:	jrcxz  0x1400108ae
   1400108cb:	in     eax,0x94
   1400108cd:	(bad)  
   1400108ce:	lea    esi,[rcx+rdi*1]
   1400108d1:	(bad)  
   1400108d2:	rex.WR xchg rsi,rax
   1400108d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400108d5:	ins    BYTE PTR es:[rdi],dx
   1400108d6:	(bad)  
   1400108d7:	mov    edx,0x65ef3969
   1400108dc:	xchg   esi,eax
   1400108dd:	jb     0x1400108ec
   1400108df:	sahf   
   1400108e0:	xchg   esi,eax
   1400108e1:	sub    esp,edi
   1400108e3:	mov    ss,esp
   1400108e5:	jbe    0x140010870
   1400108e7:	rex.RXB movabs al,ds:0x57d3fe1646f1657f
   1400108f1:	rex.RXB ror DWORD PTR [r8+r8*4],1
   1400108f5:	stos   DWORD PTR es:[rdi],eax
   1400108f6:	ret    
   1400108f7:	rex.WRXB or rax,0xffffffffc13945bc
   1400108fd:	mul    BYTE PTR [rbx+0x5f]
   140010900:	int3   
   140010901:	cmp    bl,ch
   140010903:	jae    0x140010915
   140010905:	sar    BYTE PTR [rsi+0x310e4cdf],1
   14001090b:	mov    ecx,0xdb14b8f7
   140010910:	mov    al,0x9b
   140010912:	xor    ch,BYTE PTR [rbx+0xd]
   140010915:	jle    0x140010959
   140010917:	adc    al,0xdd
   140010919:	(bad)  
   14001091a:	sti    
   14001091b:	adc    bh,BYTE PTR ds:[rcx]
   14001091e:	std    
   14001091f:	adc    DWORD PTR [rsi+0x1e],ebx
   140010922:	pop    rcx
   140010923:	(bad)  
   140010924:	mov    al,0x38
   140010926:	in     eax,dx
   140010927:	outs   dx,DWORD PTR ds:[rsi]
   140010928:	(bad)  
   140010929:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001092a:	fisub  WORD PTR [rcx-0x1ea09320]
   140010930:	jmp    0x140010937
   140010932:	es mov bh,0x3e
   140010935:	cmp    dl,bh
   140010937:	rex.WXB push r12
   140010939:	ins    DWORD PTR es:[rdi],dx
   14001093a:	add    ch,ah
   14001093c:	add    al,0xef
   14001093e:	add    al,0xf4
   140010940:	mov    dl,0x61
   140010942:	int3   
   140010943:	or     eax,ecx
   140010945:	(bad)  
   140010946:	jge    0x140010971
   140010948:	xchg   esi,eax
   140010949:	cld    
   14001094a:	adc    eax,0x1f9ddc52
   14001094f:	mov    edx,DWORD PTR [rdx]
   140010951:	or     al,0x76
   140010953:	jle    0x140010971
   140010955:	(bad)  
   140010956:	ins    BYTE PTR es:[rdi],dx
   140010957:	(bad)  
   140010958:	rex.WRB xchg r15,rax
   14001095a:	hlt    
   14001095b:	mov    cl,0x1c
   14001095d:	sub    ebx,ebx
   14001095f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010960:	fisubr WORD PTR [rcx-0x12521fa8]
   140010966:	or     BYTE PTR [rdi+rdx*1],dh
   140010969:	pop    rdi
   14001096a:	add    BYTE PTR [rip+0xffffffffe8b4c5fe],bh        # 0x128b5cf6e
   140010970:	rex.WXB xlat BYTE PTR ds:[rbx]
   140010972:	mov    bl,0x46
   140010974:	add    ebx,ecx
   140010976:	enter  0x5b06,0xb9
   14001097a:	test   eax,0x4caaf2d9
   14001097f:	add    al,0xa6
   140010981:	sbb    al,0x6b
   140010983:	mul    DWORD PTR [rip+0x4b805d4d]        # 0x18b8166d6
   140010989:	sub    ebp,ebx
   14001098b:	cmp    DWORD PTR [rax],edx
   14001098d:	adc    al,0x6
   14001098f:	or     BYTE PTR [rax+0x5c],cl
   140010992:	(bad)  
   140010993:	and    BYTE PTR [rcx],bl
   140010995:	retf   
   140010996:	sbb    bh,BYTE PTR [rbp-0x9c857e5]
   14001099c:	test   DWORD PTR [rcx],ebp
   14001099e:	xchg   edi,eax
   14001099f:	pop    rbp
   1400109a0:	(bad)  
   1400109a1:	push   rdx
   1400109a2:	mov    esp,0x1ad69efd
   1400109a7:	shl    BYTE PTR [rax+rdi*2+0x1],0xed
   1400109ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400109ad:	add    DWORD PTR [rbx],eax
   1400109af:	rex.RB push r14
   1400109b1:	pop    rdi
   1400109b2:	mov    dl,0x9b
   1400109b4:	(bad)  
   1400109b5:	xchg   esp,eax
   1400109b6:	retf   
   1400109b7:	lods   eax,DWORD PTR ds:[rsi]
   1400109b8:	fisttp DWORD PTR [rbx]
   1400109ba:	rex.X mov esi,fs
   1400109bd:	jrcxz  0x14001094a
   1400109bf:	sub    DWORD PTR [rip+0x52eb3c41],edi        # 0x192ec4606
   1400109c5:	sub    al,0x10
   1400109c7:	mov    bl,BYTE PTR [rip+0x362fee80]        # 0x17630f84d
   1400109cd:	or     eax,0xd6c08522
   1400109d2:	adc    al,0x3b
   1400109d4:	sbb    al,0x11
   1400109d6:	popf   
   1400109d7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400109d8:	rex.X sbb edi,DWORD PTR [rax-0x75]
   1400109dc:	rex.X (bad) 
   1400109de:	(bad)  
   1400109df:	(bad)  
   1400109e0:	sti    
   1400109e1:	pop    rdi
   1400109e2:	dec    DWORD PTR [rdi-0x26]
   1400109e5:	cmp    esp,DWORD PTR [rsi-0x63]
   1400109e8:	(bad)  
   1400109e9:	(bad)  
   1400109ea:	mov    dh,ah
   1400109ec:	cmp    al,0x83
   1400109ee:	in     al,0x43
   1400109f0:	nop
   1400109f1:	lahf   
   1400109f2:	popf   
   1400109f3:	mov    edi,DWORD PTR [rbx+0x4200d23b]
   1400109f9:	pop    rbp
   1400109fa:	push   rbp
   1400109fb:	loop   0x140010a74
   1400109fd:	sbb    BYTE PTR [rsi+0x27b9d8b2],cl
   140010a03:	cs jge 0x140010995
   140010a06:	push   rax
   140010a07:	rex.RB cwde 
   140010a09:	out    dx,al
   140010a0a:	xchg   esi,eax
   140010a0b:	adc    ebp,esp
   140010a0d:	cs popf 
   140010a0f:	push   0x69eb8505
   140010a14:	sub    dl,BYTE PTR [rcx+rdi*4]
   140010a17:	sbb    eax,0x2890988d
   140010a1c:	rex fxtract 
   140010a1f:	rcl    edi,0x95
   140010a22:	(bad)  
   140010a23:	lock pushw 0xd8ec
   140010a28:	pop    rbx
   140010a29:	push   0xffffffffffffffb6
   140010a2b:	pop    rdx
   140010a2c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010a2d:	mov    BYTE PTR [rax],cl
   140010a2f:	movabs ds:0x5efdaaa8fabc1ba4,eax
   140010a38:	ret    0x84c7
   140010a3b:	(bad)  
   140010a3c:	(bad)  
   140010a3d:	jns    0x140010a3e
   140010a3f:	sbb    eax,0xdb1fed85
   140010a44:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010a45:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a46:	repnz adc DWORD PTR [rbx],esp
   140010a49:	lock fimul WORD PTR [rdx-0x52181c77]
   140010a50:	ret    
   140010a51:	or     eax,0x309e97b2
   140010a56:	mov    ebp,0x4637fc2f
   140010a5b:	cmc    
   140010a5c:	scas   al,BYTE PTR es:[rdi]
   140010a5d:	test   al,0x10
   140010a5f:	mov    edi,0xcc4ed809
   140010a64:	jae    0x140010aae
   140010a66:	ds jo  0x140010aca
   140010a69:	shl    DWORD PTR [rdx],0xde
   140010a6c:	dec    DWORD PTR [rax+0x588fdbcb]
   140010a72:	adc    esp,DWORD PTR [rax]
   140010a74:	add    BYTE PTR [rax+rdi*8+0x78],bh
   140010a78:	push   rax
   140010a79:	(bad)  
   140010a7a:	ret    0xd635
   140010a7d:	hlt    
   140010a7e:	adc    ah,BYTE PTR [rdx+0x25]
   140010a81:	loopne 0x140010a60
   140010a83:	rex.WXB (bad) 
   140010a85:	js     0x140010a16
   140010a87:	test   eax,0xfc605c9
   140010a8c:	adc    DWORD PTR [rax+rdx*8-0x27b9649f],ebp
   140010a93:	stos   DWORD PTR es:[rdi],eax
   140010a94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a95:	movsxd esi,ebp
   140010a97:	jmp    0xcec34cb7
   140010a9d:	call   0xd2083b4b
   140010aa2:	in     al,0xfa
   140010aa4:	rol    BYTE PTR [rax],cl
   140010aa6:	mul    BYTE PTR [rdx+rbx*1+0x70]
   140010aaa:	rol    BYTE PTR [rcx+0x47],cl
   140010aad:	jb     0x140010b05
   140010aaf:	mov    dh,0x13
   140010ab1:	rex (bad) 
   140010ab3:	mov    dl,0x91
   140010ab5:	sbb    al,0xc5
   140010ab7:	sub    eax,0xb14f1ab1
   140010abc:	je     0x140010a85
   140010abe:	test   BYTE PTR [rcx+0x27],al
   140010ac1:	in     eax,0x11
   140010ac3:	es xchg ebp,eax
   140010ac5:	push   rbx
   140010ac6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010ac7:	mov    ecx,0x2878e2a8
   140010acc:	and    dl,BYTE PTR [rbx]
   140010ace:	jb     0x140010aae
   140010ad0:	mov    edi,0x4d832105
   140010ad5:	hlt    
   140010ad6:	mov    esi,0x7a734ff2
   140010adb:	neg    bh
   140010add:	es sahf 
   140010adf:	and    DWORD PTR [rsi+0x48085969],eax
   140010ae5:	imul   ebx,DWORD PTR [rax+0xe1a086c],0xffffffac
   140010aec:	std    
   140010aed:	out    dx,eax
   140010aee:	push   rdi
   140010aef:	(bad)  
   140010af0:	js     0x140010b07
   140010af2:	(bad)
   140010af6:	sbb    BYTE PTR [rax-0x30072faa],cl
   140010afc:	mov    ah,0xb3
   140010afe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010aff:	scas   al,BYTE PTR es:[rdi]
   140010b00:	ins    BYTE PTR es:[rdi],dx
   140010b01:	hlt    
   140010b02:	xor    dl,BYTE PTR [rsi+riz*8+0x56e20863]
   140010b09:	loope  0x140010b60
   140010b0b:	xor    eax,0x443ddd80
   140010b10:	jns    0x140010b7e
   140010b12:	rex.WR loop 0x140010b39
   140010b15:	jle    0x140010b31
   140010b17:	pop    QWORD PTR [rax]
   140010b19:	mov    al,0x6b
   140010b1b:	hlt    
   140010b1c:	fdivr  DWORD PTR [rsi+0x7]
   140010b1f:	shl    eax,cl
   140010b21:	sbb    BYTE PTR [rsi-0x5b06ea89],al
   140010b27:	xor    al,0x4c
   140010b29:	xor    eax,0xaa0a9803
   140010b2e:	xor    dl,BYTE PTR [rcx-0x75]
   140010b31:	push   rdx
   140010b32:	(bad)  
   140010b33:	or     eax,DWORD PTR [rax-0x2b04bd2a]
   140010b39:	jo     0x140010bb6
   140010b3b:	rex.WXB (bad) 
   140010b3d:	sbb    eax,DWORD PTR [rdi-0x35]
   140010b40:	(bad)  
   140010b41:	(bad)  
   140010b42:	cmc    
   140010b43:	xchg   edx,eax
   140010b44:	retf   0x62a1
   140010b47:	movabs al,ds:0x10d68fd558b7714a
   140010b50:	mov    WORD PTR [rbp-0x12],ds
   140010b53:	fst    st(3)
   140010b55:	shl    BYTE PTR [rbp+rbp*4-0x1e],0x2d
   140010b5a:	rcr    BYTE PTR [rax],0x46
   140010b5d:	iret   
   140010b5e:	jge    0x140010b29
   140010b60:	or     al,0xbf
   140010b62:	cld    
   140010b63:	rex.WRXB test QWORD PTR [r15-0x487fdb51],r14
   140010b6a:	in     eax,0xa3
   140010b6c:	cld    
   140010b6d:	or     ah,BYTE PTR [rdx-0x6bff26df]
   140010b73:	cmc    
   140010b74:	and    BYTE PTR [rdx],bh
   140010b76:	add    esi,DWORD PTR [rcx+rcx*1-0x7eef6c72]
   140010b7d:	jmp    0xd11488d7
   140010b82:	jne    0x140010b4c
   140010b84:	mov    ebp,0x8b5b3ee0
   140010b89:	adc    BYTE PTR [rax],dl
   140010b8b:	rex.RX pop rcx
   140010b8d:	out    dx,al
   140010b8e:	jbe    0x140010bc2
   140010b90:	rex.RX pop rsp
   140010b92:	push   rsi
   140010b93:	rex.W mov cl,0xd8
   140010b96:	adc    eax,0xf3ecbb61
   140010b9b:	cmp    DWORD PTR [rbp+0x6],esi
   140010b9e:	add    ah,al
   140010ba0:	push   rdx
   140010ba1:	adc    DWORD PTR [rcx+rbp*1+0x6c26024b],eax
   140010ba8:	(bad)  
   140010ba9:	cmp    bl,BYTE PTR [rip+0x4a30ca2a]        # 0x18a31d5d9
   140010baf:	(bad)  
   140010bb0:	(bad)  
   140010bb1:	movabs al,ds:0xca8848103bb0066a
   140010bba:	mov    ebx,0x6a52904
   140010bbf:	(bad)  
   140010bc0:	mov    WORD PTR [rbx],gs
   140010bc2:	popf   
   140010bc3:	cmp    ebp,DWORD PTR [rcx+rbx*1-0xe]
   140010bc7:	stos   DWORD PTR es:[rdi],eax
   140010bc8:	std    
   140010bc9:	rex.WR movabs rax,ds:0x96de98a829afc5e3
   140010bd3:	(bad)  
   140010bd4:	pushf  
   140010bd5:	div    cl
   140010bd7:	stc    
   140010bd8:	jno    0x140010bee
   140010bda:	sub    al,0x80
   140010bdc:	and    al,BYTE PTR [rsi-0x20d5181f]
   140010be2:	rex.WX xchg rax,rax
   140010be4:	rcl    DWORD PTR [rsi],0xb6
   140010be7:	(bad)  
   140010be8:	lock outs dx,DWORD PTR ds:[rsi]
   140010bea:	imul   edi,DWORD PTR [rsi],0xfffffff3
   140010bed:	test   dl,dh
   140010bef:	jns    0x140010ba0
   140010bf1:	add    eax,0x4002e94e
   140010bf6:	loop   0x140010c0e
   140010bf8:	add    BYTE PTR [rbp+0xfa8c0fa],cl
   140010bfe:	xchg   ebx,eax
   140010bff:	or     eax,0xc161f01
   140010c04:	rcr    BYTE PTR [rdx-0x7a60ba9d],0xa3
   140010c0b:	sub    DWORD PTR [rcx-0xec216b6],0x36fcd
   140010c15:	lods   al,BYTE PTR ds:[rsi]
   140010c16:	lods   eax,DWORD PTR ds:[rsi]
   140010c17:	outs   dx,DWORD PTR ds:[rsi]
   140010c18:	cdq    
   140010c19:	push   rdx
   140010c1a:	adc    r13,QWORD PTR [r14+r8*4+0x21]
   140010c1f:	xchg   ebp,eax
   140010c20:	or     cl,BYTE PTR [rax+0x1761e323]
   140010c26:	iret   
   140010c27:	xor    ah,BYTE PTR [rdi+0x39]
   140010c2a:	(bad)
   140010c2d:	(bad)  
   140010c2e:	imul   eax,DWORD PTR [rdx],0xda422d12
   140010c34:	test   eax,0xa061bf3e
   140010c39:	gs add dh,dh
   140010c3c:	jnp    0x140010c7b
   140010c3e:	or     esi,DWORD PTR [rax]
   140010c40:	add    esp,DWORD PTR [rcx]
   140010c42:	test   al,0xf
   140010c44:	xor    dl,BYTE PTR [rbx+0x1717764b]
   140010c4a:	iret   
   140010c4b:	scas   eax,DWORD PTR es:[rdi]
   140010c4c:	pop    rbp
   140010c4d:	mov    esp,0xadf6b58c
   140010c52:	and    edx,DWORD PTR [rcx]
   140010c54:	shr    DWORD PTR [rax],cl
   140010c56:	or     al,0xbb
   140010c58:	enter  0x9f2e,0x10
   140010c5c:	mov    ss,WORD PTR [eax+0x6a]
   140010c60:	repnz icebp 
   140010c62:	jb     0x140010cbf
   140010c64:	or     ah,dl
   140010c66:	(bad)  
   140010c67:	imul   DWORD PTR [rdi+0xc5424cf]
   140010c6d:	in     al,0x8a
   140010c6f:	ret    0x3132
   140010c72:	jp     0x140010c59
   140010c74:	cli    
   140010c75:	rex.RXB push QWORD PTR [r9+0x37cda17f]
   140010c7c:	call   QWORD PTR [rip+0xffffffffe2afaca9]        # 0x122b0b92b
   140010c82:	mov    bl,cl
   140010c84:	rol    BYTE PTR [rsp+rcx*4],0x81
   140010c88:	call   0x14035709e
   140010c8d:	in     eax,0x7d
   140010c8f:	cwde   
   140010c90:	ins    BYTE PTR es:[rdi],dx
   140010c91:	add    al,0xd2
   140010c93:	sbb    DWORD PTR [rax-0x74],esp
   140010c96:	mov    edi,ebp
   140010c98:	packssdw mm5,QWORD PTR [rcx]
   140010c9b:	in     eax,dx
   140010c9c:	jne    0x140010cef
   140010c9e:	lods   al,BYTE PTR ds:[rsi]
   140010c9f:	jg     0x140010cf9
   140010ca1:	mov    ebp,fs
   140010ca3:	push   rdi
   140010ca4:	gs mov edx,0xc703e5be
   140010caa:	add    BYTE PTR [rdx-0x54],ah
   140010cad:	ins    DWORD PTR es:[rdi],dx
   140010cae:	test   DWORD PTR [rbx+0x26],0x948110a1
   140010cb5:	adc    cl,BYTE PTR [rsi+0x54]
   140010cb8:	xchg   ecx,eax
   140010cb9:	nop    DWORD PTR [rax+0x20abe386]
   140010cc0:	lods   eax,DWORD PTR ds:[rsi]
   140010cc1:	mov    dl,BYTE PTR [rdx]
   140010cc3:	sbb    BYTE PTR [rsi-0x712d7ff],cl
   140010cc9:	jmp    0xe2628523
   140010cce:	pop    rcx
   140010ccf:	xchg   ebx,eax
   140010cd0:	mov    BYTE PTR [rcx+0x683163],dh
   140010cd6:	shl    DWORD PTR [rax+0x5f8737a4],1
   140010cdc:	ins    DWORD PTR es:[rdi],dx
   140010cdd:	outs   dx,BYTE PTR ds:[rsi]
   140010cde:	in     al,dx
   140010cdf:	test   DWORD PTR [rsi],eax
   140010ce1:	push   rax
   140010ce2:	and    bh,BYTE PTR [rsi+0x41]
   140010ce5:	mov    esp,0x28547c13
   140010cea:	push   rcx
   140010ceb:	out    0x57,eax
   140010ced:	(bad)  [rdi-0xe35a521]
   140010cf3:	outs   dx,DWORD PTR ds:[rsi]
   140010cf4:	or     bh,BYTE PTR [rbx]
   140010cf6:	mov    ebp,0xfeab5af4
   140010cfb:	(bad)  
   140010cfc:	(bad)  
   140010cfd:	jl     0x140010d21
   140010cff:	(bad)  
   140010d00:	sub    eax,esi
   140010d02:	data16 add cl,BYTE PTR [rdx+0xeb1bea5]
   140010d09:	loopne 0x140010d28
   140010d0b:	adc    DWORD PTR [rcx-0x71],eax
   140010d0e:	rex.RB movabs eax,ds:0xaea4349966885008
   140010d18:	rex.WRXB cdqe 
   140010d1a:	cmc    
   140010d1b:	push   rdi
   140010d1c:	mov    al,0xfd
   140010d1e:	rex.RXB jg 0x140010d58
   140010d21:	push   rdi
   140010d22:	(bad)  
   140010d23:	rex.WRXB
   140010d24:	rex.R jrcxz 0x140010ce7
   140010d27:	rex.RXB
   140010d28:	rex.W pop rdx
   140010d2a:	xchg   BYTE PTR [rdi+0x46],al
   140010d2d:	rex.XB
   140010d2e:	repnz and DWORD PTR [rax],esi
   140010d31:	fiadd  DWORD PTR [rsi]
   140010d33:	and    esp,DWORD PTR gs:[rdi-0x7f23240a]
   140010d3a:	fdivrp st(6),st
   140010d3c:	lods   eax,DWORD PTR ds:[rsi]
   140010d3d:	and    ch,BYTE PTR [rax+0x72e4fe]
   140010d43:	cmp    BYTE PTR [rip+0x32e00e22],dh        # 0x172e11b6b
   140010d49:	(bad)  
   140010d4a:	(bad)  [rdi-0x50683dfb]
   140010d50:	ins    BYTE PTR es:[rdi],dx
   140010d51:	in     al,0xb1
   140010d53:	sbb    eax,DWORD PTR [rsi+0xa950240]
   140010d59:	xor    eax,0x3bcc4352
   140010d5e:	mov    al,0xf1
   140010d60:	pop    rbp
   140010d61:	movabs ds:0x40f475e1504f1b52,al
   140010d6a:	cmp    ecx,ebp
   140010d6c:	and    ch,BYTE PTR [rax+0x27d48aeb]
   140010d72:	jrcxz  0x140010d4e
   140010d74:	cli    
   140010d75:	add    BYTE PTR [rax+0x4fde3d44],ch
   140010d7b:	in     al,0x5
   140010d7d:	jo     0x140010d08
   140010d7f:	scas   al,BYTE PTR es:[rdi]
   140010d80:	shl    BYTE PTR [rdi*1-0x1a44d9d1],cl
   140010d87:	xchg   ebp,eax
   140010d88:	test   DWORD PTR [rdi-0x20],esi
   140010d8b:	out    0xcd,al
   140010d8d:	mov    cl,BYTE PTR [ebp+0x29]
   140010d91:	movsxd ebp,DWORD PTR [rdi-0x5aca4854]
   140010d97:	cmp    al,0x1d
   140010d99:	call   0x191825bbb
   140010d9e:	rex.R jne 0x140010df8
   140010da1:	push   rdi
   140010da2:	movabs ds:0xb4c290a2dfbedac5,al
   140010dab:	(bad)  
   140010dac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010dad:	ror    dl,cl
   140010daf:	cmp    al,0x49
   140010db1:	jmp    0xfef52d64
   140010db6:	hlt    
   140010db7:	(bad)  
   140010db8:	mov    ch,0x79
   140010dba:	cli    
   140010dbb:	rex.WRXB
   140010dbc:	rex.W
   140010dbd:	gs std 
   140010dbf:	xor    BYTE PTR [rsi],al
   140010dc1:	(bad)  
   140010dc2:	ja     0x140010dcf
   140010dc4:	sbb    DWORD PTR [rip+0xffffffffa8cc11e8],ecx        # 0xe8cd1fb2
   140010dca:	(bad)  
   140010dcb:	or     al,0x7b
   140010dcd:	ss out 0xdf,al
   140010dd0:	cmp    esp,edi
   140010dd2:	loopne 0x140010d5c
   140010dd4:	mov    edi,0x700b38ba
   140010dd9:	rex.R
   140010dda:	rex.WRX mov al,0x33
   140010ddd:	add    ebx,DWORD PTR [rax]
   140010ddf:	(bad)  
   140010de0:	hlt    
   140010de1:	xchg   DWORD PTR [rdi],esi
   140010de3:	sbb    cl,BYTE PTR [rsi-0x4ff7ffc1]
   140010de9:	mov    dh,0xb9
   140010deb:	pop    rbp
   140010dec:	push   0x62804400
   140010df1:	movabs eax,ds:0xc3cfff64aa521124
   140010dfa:	or     DWORD PTR [rsi+0x2a],esi
   140010dfd:	push   rbx
   140010dfe:	and    eax,0xf13b1568
   140010e03:	fsub   QWORD PTR [rdi+0x5e1a494c]
   140010e09:	lods   eax,DWORD PTR ds:[rsi]
   140010e0a:	jnp    0x140010dcb
   140010e0c:	or     al,0x85
   140010e0e:	mov    ebp,0xd30a00d0
   140010e13:	mov    dl,0x92
   140010e15:	sahf   
   140010e16:	xor    esi,esp
   140010e18:	add    DWORD PTR [rcx-0x66],ebp
   140010e1b:	sahf   
   140010e1c:	iret   
   140010e1d:	rex.RX sub al,0x2b
   140010e20:	popf   
   140010e21:	cmp    esi,DWORD PTR [rax-0xd]
   140010e24:	out    0x33,al
   140010e26:	adc    edx,DWORD PTR [rdi+0x7e264e90]
   140010e2c:	(bad)  
   140010e2d:	imul   edi,esp,0x839688f7
   140010e33:	sbb    eax,0xe5ac2b1a
   140010e38:	(bad)  
   140010e39:	adc    al,0xca
   140010e3b:	jg     0x140010e36
   140010e3d:	jl     0x140010e1f
   140010e3f:	pop    rbp
   140010e40:	xlat   BYTE PTR ds:[rbx]
   140010e41:	mov    ecx,0x3e2e6002
   140010e46:	(bad)  
   140010e47:	in     eax,dx
   140010e48:	jg     0x140010e3d
   140010e4a:	pop    rbx
   140010e4b:	(bad)  
   140010e4c:	push   rdi
   140010e4d:	iret   
   140010e4e:	sub    BYTE PTR [rsi-0xf],al
   140010e51:	cmp    BYTE PTR [rsi+0x1f],bl
   140010e54:	mov    dl,0x41
   140010e56:	cmp    eax,0x346439
   140010e5b:	rex.RX cmp eax,0x92011b20
   140010e61:	(bad)  
   140010e62:	jmp    0x140010e62
   140010e64:	movabs ds:0xa0ccc55d1616c54,eax
   140010e6d:	rex.XB (bad) 
   140010e6f:	rex.RB
   140010e70:	rex.RXB
   140010e71:	xchg   r8,rax
   140010e73:	cld    
   140010e74:	(bad)  
   140010e75:	gs and al,0xc7
   140010e78:	(bad)  
   140010e79:	adc    BYTE PTR [rax],al
   140010e7b:	mov    eax,0xd23d7574
   140010e80:	add    BYTE PTR [rsp+rcx*8],al
   140010e83:	or     al,0x4e
   140010e85:	push   rdx
   140010e86:	movsxd esp,DWORD PTR [rdi+0x1]
   140010e89:	push   0xffffffff824c8c6c
   140010e8e:	mov    edi,0x7ff19c55
   140010e93:	(bad)  
   140010e94:	jmp    0x13cf2b686
   140010e99:	cmc    
   140010e9a:	push   rbp
   140010e9b:	(bad)  
   140010e9c:	rcl    BYTE PTR [rsp+rbp*8+0x33],0xd7
   140010ea1:	rcr    BYTE PTR [rsi+0x39],1
   140010ea4:	add    DWORD PTR [rbx],ecx
   140010ea6:	mov    bl,0x7b
   140010ea8:	or     dl,dl
   140010eaa:	jbe    0x140010e9f
   140010eac:	pop    rsp
   140010ead:	(bad)  
   140010eae:	fcmovnb st,st(6)
   140010eb0:	mov    ecx,0x77eb77e5
   140010eb5:	pop    rsi
   140010eb6:	clc    
   140010eb7:	and    esi,DWORD PTR [rip+0x210ee846]        # 0x1610ff703
   140010ebd:	outs   dx,DWORD PTR ds:[rsi]
   140010ebe:	add    dl,cl
   140010ec0:	mov    ah,0x39
   140010ec2:	out    dx,al
   140010ec3:	(bad)  
   140010ec4:	mov    edx,DWORD PTR [rdi]
   140010ec6:	or     al,BYTE PTR [rbp+0x2b]
   140010ec9:	(bad)  
   140010eca:	fdivr  QWORD PTR [rdi]
   140010ecc:	in     al,0x74
   140010ece:	jg     0x140010eea
   140010ed0:	(bad)  
   140010ed1:	sbb    ebx,DWORD PTR [rdx-0x4d8b5446]
   140010ed7:	outs   dx,DWORD PTR ds:[rsi]
   140010ed8:	xor    cl,al
   140010eda:	(bad)  
   140010edb:	adc    edi,DWORD PTR [rbp-0x636c00d1]
   140010ee1:	sahf   
   140010ee2:	std    
   140010ee3:	mov    bl,0x44
   140010ee5:	add    DWORD PTR [rdx-0x14],ebp
   140010ee8:	rex.WB
   140010ee9:	add    BYTE PTR [rbx+0x6600d941],r12b
   140010ef0:	mov    eax,0x8843640d
   140010ef5:	(bad)  
   140010ef6:	in     al,dx
   140010ef7:	xor    edi,DWORD PTR [rbx]
   140010ef9:	rex.WRXB movabs r15,0xdd880febdd587d44
   140010f03:	sbb    DWORD PTR [rsi+0x60894831],0x2d6a797c
   140010f0d:	and    ch,cl
   140010f0f:	sbb    al,0x50
   140010f11:	push   rdi
   140010f12:	(bad)  
   140010f13:	mov    bh,0x42
   140010f15:	(bad)  
   140010f16:	(bad)  
   140010f17:	fucomip st,st(7)
   140010f19:	(bad)  
   140010f1a:	rex.WX push rsp
   140010f1c:	(bad)  
   140010f1d:	sbb    bh,dh
   140010f1f:	(bad)  
   140010f20:	fstp   TBYTE PTR [rbx-0xd]
   140010f23:	movabs al,ds:0xedce77f03eebae3b
   140010f2c:	out    dx,al
   140010f2d:	neg    esi
   140010f2f:	mov    bh,0x63
   140010f31:	(bad)  
   140010f32:	add    DWORD PTR [rax],edx
   140010f34:	loopne 0x140010f58
   140010f36:	xchg   ecx,eax
   140010f37:	xchg   edx,eax
   140010f38:	rex.WB lods rax,QWORD PTR ds:[rsi]
   140010f3a:	es gs rex.RXB xchg r10d,eax
   140010f3e:	movsxd ebx,DWORD PTR [rcx+0x56]
   140010f41:	pushf  
   140010f42:	rex.W retf 0xf638
   140010f46:	push   rsp
   140010f47:	and    eax,0x12b2ec91
   140010f4c:	fnstenv [rip+0x715264f6]        # 0x1b1537448
   140010f52:	in     al,0x89
   140010f54:	(bad)  
   140010f55:	xor    eax,0x4f6c4933
   140010f5a:	lea    edi,[rip+0xffffffffe4a71ae5]        # 0x124a82a45
   140010f60:	mov    WORD PTR [rdi],fs
   140010f62:	(bad)  
   140010f63:	(bad)  
   140010f64:	adc    ebx,ecx
   140010f66:	(bad)  
   140010f67:	jns    0x140010f06
   140010f69:	mov    eax,0x596c65e4
   140010f6e:	mov    esp,DWORD PTR [rip+0xffffffff89651b53]        # 0xc9662ac7
   140010f74:	mov    ah,0x24
   140010f76:	pop    rdx
   140010f77:	and    al,0x25
   140010f79:	and    DWORD PTR [rdx],0xb1001241
   140010f7f:	adc    DWORD PTR [rax+rsi*8],eax
   140010f82:	lods   eax,DWORD PTR ds:[rsi]
   140010f83:	out    dx,eax
   140010f84:	mov    ebp,0xcce7beee
   140010f89:	(bad)  
   140010f8a:	neg    esi
   140010f8c:	out    dx,al
   140010f8d:	(bad)  
   140010f8f:	cli    
   140010f90:	add    DWORD PTR [rdi],ebx
   140010f92:	sub    DWORD PTR [rbx],ecx
   140010f94:	and    BYTE PTR [rax-0x10f0af89],ch
   140010f9a:	jge    0x140010f59
   140010f9c:	fidivr WORD PTR [rsi-0x53103083]
   140010fa2:	neg    esp
   140010fa4:	and    al,0xf1
   140010fa6:	outs   dx,DWORD PTR ds:[rsi]
   140010fa7:	xchg   ebp,eax
   140010fa8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010fa9:	add    al,0x8e
   140010fab:	push   rcx
   140010fac:	cdq    
   140010fad:	and    BYTE PTR [rcx],al
   140010faf:	rcr    BYTE PTR [rdx],0x56
   140010fb2:	pop    rdx
   140010fb3:	cld    
   140010fb4:	push   0xffffffffe706dc98
   140010fb9:	mov    cl,0xaf
   140010fbb:	fmul   QWORD PTR [rdx-0x1f]
   140010fbe:	cmp    dl,dl
   140010fc0:	mov    al,BYTE PTR [rdx]
   140010fc2:	pop    rsp
   140010fc3:	mov    edi,0x747b7c6f
   140010fc8:	lods   eax,DWORD PTR ds:[rsi]
   140010fc9:	add    al,al
   140010fcb:	mov    ebp,0x1f3cf6d9
   140010fd0:	rex.WRXB or r12b,BYTE PTR [r8-0x50]
   140010fd4:	mov    eax,0xe1746c74
   140010fd9:	add    cl,dh
   140010fdb:	(bad)  
   140010fdc:	mov    esi,0xda6004a4
   140010fe1:	push   rdx
   140010fe2:	mov    esi,0xd9a7882d
   140010fe7:	std    
   140010fe8:	icebp  
   140010fe9:	retf   0x5de3
   140010fec:	pop    rsi
   140010fed:	(bad)  
   140010fee:	push   0x6d0d7467
   140010ff3:	movabs ds:0x9e2a33ae5a331a07,eax
   140010ffc:	clc    
   140010ffd:	(bad)  
   140010ffe:	mov    WORD PTR [rsi],?
   140011000:	hlt    
   140011001:	or     esi,DWORD PTR [rax]
   140011003:	pop    rbx
   140011004:	(bad)  
   140011005:	xchg   ebx,eax
   140011006:	not    BYTE PTR [rbx+0x38]
   140011009:	test   eax,0xa1cd802e
   14001100e:	movabs ds:0x13385968231680d,eax
   140011017:	push   rsp
   140011018:	adc    dl,ch
   14001101a:	not    DWORD PTR [rbp-0xa]
   14001101d:	jl     0x14001100b
   14001101f:	fadd   QWORD PTR [rbx]
   140011021:	movabs ds:0xe6b31b3d53e60f8e,al
   14001102a:	(bad)
   14001102d:	rex.WRB jae 0x140010ff3
   140011030:	in     eax,dx
   140011031:	add    BYTE PTR [rcx],dl
   140011033:	rex.WRX sahf 
   140011035:	jns    0x140010fdd
   140011037:	push   0xfffffffffc7d5bb8
   14001103c:	lahf   
   14001103d:	mov    bl,0x9e
   14001103f:	nop
   140011040:	rex.WB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011042:	xchg   BYTE PTR [rax],al
   140011044:	stos   DWORD PTR es:[rdi],eax
   140011045:	clc    
   140011046:	cmp    ebp,DWORD PTR [rdx-0x19]
   140011049:	sbb    eax,0xd263f3f9
   14001104e:	sub    DWORD PTR [rdi-0x69628e5],edi
   140011054:	add    BYTE PTR [rdx+rsi*4+0x4e],ah
   140011058:	jno    0x1400110ce
   14001105a:	(bad)  
   14001105b:	jmp    0x140011050
   14001105d:	std    
   14001105e:	pop    rdi
   14001105f:	mov    gs,WORD PTR [rsi-0x3fabfff6]
   140011065:	in     al,dx
   140011066:	mov    BYTE PTR [rcx-0x18],0x62
   14001106a:	mov    DWORD PTR [rbx-0x4c],edi
   14001106d:	rex.WXB ret 0x349a
   140011071:	jge    0x1400110df
   140011073:	cmp    rbx,QWORD PTR [rdi-0x4c]
   140011077:	rcr    edi,1
   140011079:	cmp    ecx,0xffffffe1
   14001107c:	cmp    DWORD PTR [rdi+rax*1],esi
   14001107f:	push   rbp
   140011080:	in     al,0x75
   140011082:	(bad)  
   140011083:	stos   BYTE PTR es:[rdi],al
   140011084:	cmp    BYTE PTR [rsi-0x14],bh
   140011087:	(bad)  
   140011088:	add    BYTE PTR [rdx-0x58615f61],al
   14001108e:	(bad)  
   14001108f:	(bad)  
   140011090:	xlat   BYTE PTR ds:[rbx]
   140011091:	pop    rax
   140011092:	(bad)  
   140011093:	add    eax,0xdab2e049
   140011098:	sar    BYTE PTR [rdx+0x59aed003],1
   14001109e:	jb     0x1400110dd
   1400110a0:	nop
   1400110a1:	mov    ss,esi
   1400110a3:	mov    cl,0xf1
   1400110a5:	movabs eax,ds:0xdbb6837bb1cd2a5f
   1400110ae:	call   0xcf30b8ce
   1400110b3:	fiadd  WORD PTR ds:[rsi+rax*2]
   1400110b7:	jmp    0x1400110e7
   1400110b9:	mov    ebx,0xdde74b4f
   1400110be:	(bad)  
   1400110bf:	lods   eax,DWORD PTR ds:[rsi]
   1400110c0:	xor    dh,BYTE PTR [rbx-0x126de6e6]
   1400110c6:	rex.WRX test al,0x50
   1400110c9:	(bad)  
   1400110ca:	jb     0x140011076
   1400110cc:	mov    dh,0xe7
   1400110ce:	push   0x50
   1400110d0:	mov    bl,0x8c
   1400110d2:	fwait
   1400110d3:	mov    ebp,0xaa941fe3
   1400110d8:	xor    BYTE PTR [rdi-0x61],ah
   1400110db:	pop    rcx
   1400110dc:	(bad)  
   1400110dd:	jmp    0x1400110ca
   1400110df:	adc    BYTE PTR [rax-0x7612d6a8],cl
   1400110e5:	sbb    DWORD PTR [rsp+rbp*1],ecx
   1400110e8:	sbb    DWORD PTR [rdi+0x2],esp
   1400110eb:	test   BYTE PTR [rbx-0x3c],cl
   1400110ee:	adc    al,0x87
   1400110f0:	fild   QWORD PTR [rdx-0x51248d19]
   1400110f6:	clc    
   1400110f7:	xchg   dl,ah
   1400110f9:	imul   esi,DWORD PTR [rbp-0x7b],0xfffffff1
   1400110fd:	sub    al,0xf1
   1400110ff:	test   BYTE PTR [rdx+0x2d642f7],ah
   140011105:	scas   al,BYTE PTR es:[rdi]
   140011106:	xchg   ecx,eax
   140011107:	mov    rax,cr7
   14001110a:	in     al,0x5a
   14001110c:	jge    0x1400110b9
   14001110e:	rex.WRB
   14001110f:	ds rex.WXB shr r12b,cl
   140011113:	xor    DWORD PTR [rbp+0x3b13d6f2],edx
   140011119:	mov    edi,0xea7d2f05
   14001111e:	iret   
   14001111f:	sbb    dh,BYTE PTR [rsi-0x4a6fe79a]
   140011125:	fs or  ebx,edi
   140011128:	(bad)  
   140011129:	rcl    BYTE PTR [rax-0x17],0x84
   14001112d:	sub    eax,0x1d21bfdb
   140011132:	ret    0x1135
   140011135:	pop    rsp
   140011136:	add    eax,0x43aec35d
   14001113b:	in     eax,dx
   14001113c:	js     0x14001115c
   14001113e:	push   rbx
   14001113f:	(bad)  
   140011140:	xchg   ebp,eax
   140011141:	jnp    0x140011167
   140011143:	dec    DWORD PTR [rbx+0x5b17065f]
   140011149:	rex.WB (bad) 
   14001114b:	rex.WX add BYTE PTR [rbp-0x35faa8bc],sil
   140011152:	sbb    al,0xba
   140011154:	jne    0x14001115f
   140011156:	sub    BYTE PTR [rbx+0x57],dh
   140011159:	fld    DWORD PTR [rdi+0x7d]
   14001115c:	xchg   ebp,eax
   14001115d:	(bad)  
   14001115e:	scas   eax,DWORD PTR es:[rdi]
   14001115f:	out    dx,al
   140011160:	stos   DWORD PTR es:[rdi],eax
   140011161:	lahf   
   140011162:	popf   
   140011163:	adc    esp,ebx
   140011165:	(bad)  
   140011166:	in     eax,dx
   140011167:	mov    ch,BYTE PTR [rcx+0x39]
   14001116a:	push   rbx
   14001116b:	test   eax,0x62ea9a56
   140011170:	lods   al,BYTE PTR ds:[rsi]
   140011171:	(bad)  
   140011172:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011173:	(bad)  
   140011174:	fmul   QWORD PTR [rax+rax*4]
   140011177:	outs   dx,BYTE PTR ds:[rsi]
   140011178:	jg     0x140011137
   14001117a:	add    BYTE PTR [rax],dh
   14001117c:	rex.WRXB sahf 
   14001117e:	cmp    DWORD PTR [rdi],ebx
   140011180:	xlat   BYTE PTR ds:[rbx]
   140011181:	out    0x53,al
   140011183:	rex.WX mov WORD PTR [rdx-0x658d20a2],ds
   14001118a:	sub    dl,BYTE PTR [rcx]
   14001118c:	mov    ebx,0xfea1d271
   140011191:	push   rdi
   140011192:	mov    dh,0x7b
   140011194:	and    al,0xfd
   140011196:	std    
   140011197:	outs   dx,DWORD PTR ds:[rsi]
   140011198:	pop    rdi
   140011199:	sub    DWORD PTR [rsi-0x21519aeb],ebp
   14001119f:	jge    0x140011134
   1400111a1:	mov    WORD PTR [rcx+0x3a],gs
   1400111a4:	add    ebp,edi
   1400111a6:	jae    0x1400111f8
   1400111a8:	jrcxz  0x14001115e
   1400111aa:	(bad)  
   1400111ab:	jne    0x14001120b
   1400111ad:	push   0xffffffff9cad7060
   1400111b2:	or     dh,0x2c
   1400111b5:	repz (bad) 
   1400111b7:	jg     0x14001118b
   1400111b9:	mov    ebp,0x985b28e7
   1400111be:	jnp    0x140011238
   1400111c0:	pushf  
   1400111c1:	movsx  ebp,bx
   1400111c4:	test   eax,0x7e3cdf5d
   1400111c9:	jmp    0x14bd79121
   1400111ce:	mov    fs,WORD PTR [rdi]
   1400111d0:	add    BYTE PTR [rax],cl
   1400111d2:	rol    ebx,0x36
   1400111d5:	shl    DWORD PTR [rdi+0x3386fecc],cl
   1400111db:	scas   eax,DWORD PTR es:[rdi]
   1400111dc:	cs adc eax,0x720d5716
   1400111e2:	add    DWORD PTR [rdi-0x1e],0x31
   1400111e6:	pop    rdx
   1400111e7:	pop    rbp
   1400111e8:	lods   al,BYTE PTR ds:[rsi]
   1400111e9:	xor    eax,0xd783afc2
   1400111ee:	(bad)  
   1400111ef:	xchg   edi,eax
   1400111f0:	rex.WRX movsxd r14,ebx
   1400111f3:	iret   
   1400111f4:	jle    0x1400111d4
   1400111f6:	repnz mov ecx,0xe1731a47
   1400111fc:	push   0xffffffffffffffa9
   1400111fe:	out    dx,eax
   1400111ff:	(bad)  
   140011200:	neg    BYTE PTR [rax]
   140011202:	lods   eax,DWORD PTR ds:[rsi]
   140011203:	rex.B
   140011204:	rex.RXB
   140011205:	fwait
   140011206:	(bad)  
   140011207:	(bad)  
   140011208:	push   rdi
   140011209:	jne    0x140011240
   14001120b:	mov    bl,0x1b
   14001120d:	jg     0x101b0e0dd
   140011213:	xor    DWORD PTR [rsi+0x11877df9],esi
   140011219:	fdivr  QWORD PTR [rcx+0x6d77769d]
   14001121f:	ds push rsp
   140011221:	xlat   BYTE PTR ds:[rbx]
   140011222:	push   rbp
   140011223:	(bad)
   140011226:	int    0xe9
   140011228:	fcmovbe st,st(6)
   14001122a:	shr    BYTE PTR [rsi+0x59556fae],1
   140011230:	add    BYTE PTR [rax+rax*1+0x19],0xa3
   140011235:	rex.WB scas rax,QWORD PTR es:[rdi]
   140011237:	(bad)  
   140011238:	adc    cl,BYTE PTR fs:[rcx]
   14001123b:	and    DWORD PTR [rbx+0x1c371eae],esp
   140011241:	int3   
   140011242:	mov    ebx,0xbf3c6cf6
   140011247:	adc    DWORD PTR [rsi+0x888878c],r12d
   14001124e:	xchg   edi,eax
   14001124f:	cdq    
   140011250:	sub    al,0xd8
   140011252:	mov    cl,0xfd
   140011254:	test   DWORD PTR [rax+0x6d703fe],ebp
   14001125a:	add    BYTE PTR [rdx-0x59],ch
   14001125d:	mov    bl,0x17
   14001125f:	adc    al,BYTE PTR [rdx]
   140011261:	rex.WR in al,0x4f
   140011264:	sub    al,BYTE PTR [rax-0x5580cf9c]
   14001126a:	loopne 0x140011277
   14001126c:	ret    
   14001126d:	xor    edi,DWORD PTR [rbx-0x48506112]
   140011273:	and    dl,BYTE PTR [rdx-0xd]
   140011276:	std    
   140011277:	push   rsi
   140011278:	stos   BYTE PTR es:[rdi],al
   140011279:	jmp    FWORD PTR [rsi+0x78]
   14001127c:	movabs ds:0xe60dc17b0dba1e3,al
   140011285:	(bad)  
   140011286:	push   rbp
   140011287:	mov    esp,0x468482c4
   14001128c:	jne    0x140011286
   14001128e:	add    BYTE PTR [rsi+0x7d1fe603],ch
   140011294:	out    0xf7,al
   140011296:	ins    DWORD PTR es:[rdi],dx
   140011297:	jns    0x140011298
   140011299:	sti    
   14001129a:	enter  0x2394,0x13
   14001129e:	stos   DWORD PTR es:[rdi],eax
   14001129f:	loop   0x140011276
   1400112a1:	sub    dh,BYTE PTR fs:[rcx+0x31cb7cd0]
   1400112a8:	jg     0x140011243
   1400112aa:	sub    DWORD PTR [rax+rdi*4-0x5730c0f4],0xffffff8d
   1400112b2:	jmp    0xe8cd9b8b
   1400112b7:	call   0xc01653bb
   1400112bc:	cli    
   1400112bd:	int    0x13
   1400112bf:	push   rbx
   1400112c0:	mov    cl,0x45
   1400112c2:	mov    esp,0x18354f5a
   1400112c7:	add    BYTE PTR [rax-0x12],cl
   1400112ca:	js     0x1400112ef
   1400112cc:	test   BYTE PTR [rdi-0x1dd3a332],spl
   1400112d3:	stc    
   1400112d4:	add    DWORD PTR [rax],esp
   1400112d6:	(bad)  
   1400112d7:	rex.WB push r10
   1400112d9:	xor    DWORD PTR [rbp-0x2b71a42],edi
   1400112df:	out    dx,eax
   1400112e0:	and    dl,BYTE PTR [rbx-0x53]
   1400112e3:	rcr    BYTE PTR [rcx],1
   1400112e5:	repnz out dx,eax
   1400112e7:	cmp    ecx,0xffffffdf
   1400112ea:	leave  
   1400112eb:	mov    ecx,0x3ad4d9db
   1400112f0:	movabs al,ds:0x746d7fadfff3cebe
   1400112f9:	(bad)  
   1400112fa:	add    BYTE PTR [rax],ah
   1400112fc:	rcr    BYTE PTR [rsi+0x4275315],cl
   140011302:	jne    0x1400112fd
   140011304:	add    DWORD PTR [rdx+0x77e65187],esi
   14001130a:	cmp    eax,0x7c35ebb5
   14001130f:	loopne 0x14001130d
   140011311:	addr32 sub esi,esp
   140011314:	or     BYTE PTR [rdx+0x23],dl
   140011317:	push   0x6d56c1eb
   14001131c:	xchg   edi,ebp
   14001131e:	fimul  DWORD PTR [rsi-0x22b76c1]
   140011324:	fidivr DWORD PTR [rcx+0x6d656cd5]
   14001132a:	or     al,0xc4
   14001132c:	(bad)  
   14001132d:	jp     0x14001132d
   14001132f:	cli    
   140011330:	add    ah,ah
   140011332:	int3   
   140011333:	and    ebx,eax
   140011335:	clc    
   140011336:	enter  0x96af,0xe6
   14001133a:	in     al,dx
   14001133b:	push   rdi
   14001133c:	xchg   edx,eax
   14001133d:	not    BYTE PTR [rdx-0x757aaf97]
   140011343:	add    eax,0x6b7431ca
   140011348:	fnstsw WORD PTR [rbp-0x25]
   14001134b:	ret    0xa1f5
   14001134e:	or     dl,al
   140011350:	stos   DWORD PTR es:[rdi],eax
   140011351:	mov    BYTE PTR [rbp-0x57],cl
   140011354:	es push rbp
   140011356:	(bad)  
   140011357:	mov    dh,0x5a
   140011359:	fwait
   14001135a:	outs   dx,DWORD PTR ds:[rsi]
   14001135b:	jnp    0x1400113cc
   14001135d:	mov    ch,0xdd
   14001135f:	jmp    0x140011309
   140011361:	pop    rsi
   140011362:	rex.WRX sub rax,0xfffffffff977dd39
   140011368:	mov    dh,BYTE PTR [rdi+0x79229916]
   14001136e:	repnz int3 
   140011370:	test   DWORD PTR [rdx+0x71],ebp
   140011373:	or     eax,0x51930225
   140011378:	retf   0x6206
   14001137b:	out    0xe7,al
   14001137d:	test   al,bl
   14001137f:	cmp    BYTE PTR [rbp-0xedae5d2],bh
   140011385:	cmc    
   140011386:	cdq    
   140011387:	sub    BYTE PTR [rdx+0x7a],ah
   14001138a:	out    0x4d,eax
   14001138c:	(bad)  
   14001138d:	clc    
   14001138e:	fisttp QWORD PTR [rsi-0x24a939e5]
   140011394:	mov    bl,0x61
   140011396:	out    0x6f,al
   140011398:	add    al,0xf5
   14001139a:	(bad)  
   14001139b:	mov    eax,0x280173a6
   1400113a0:	mov    esp,0x6dd709ad
   1400113a5:	int3   
   1400113a6:	imul   esp,DWORD PTR [rsi-0x30],0x7f
   1400113aa:	rex.W (bad) 
   1400113ac:	mov    bh,BYTE PTR [rbx-0x790fc762]
   1400113b2:	rol    ecx,1
   1400113b4:	repz lahf 
   1400113b6:	in     eax,dx
   1400113b7:	push   rdi
   1400113b8:	fisub  DWORD PTR [rdi-0x3]
   1400113bb:	adc    eax,0x3b7abe31
   1400113c0:	xor    eax,0xa9a34f8a
   1400113c5:	mov    BYTE PTR [rsi],0xb7
   1400113c8:	push   rdx
   1400113c9:	ror    DWORD PTR [rdi+0x0],cl
   1400113cc:	(bad)  
   1400113cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400113ce:	ja     0x1400113fc
   1400113d0:	and    esi,edx
   1400113d2:	cmp    al,0x4e
   1400113d4:	add    esi,ebx
   1400113d6:	mov    esp,0x3e253de7
   1400113db:	(bad)  
   1400113dc:	mov    esi,0xc89280c4
   1400113e1:	imul   esp,edi,0xffffff99
   1400113e4:	iret   
   1400113e5:	stos   DWORD PTR es:[rdi],eax
   1400113e6:	sti    
   1400113e7:	ret    
   1400113e8:	mov    ch,0x46
   1400113ea:	xor    cl,BYTE PTR [rdi+0x48]
   1400113ed:	shr    BYTE PTR [rcx-0x6ab567d8],cl
   1400113f3:	sbb    edi,0x7363f554
   1400113f9:	test   eax,0x40076293
   1400113fe:	and    ebx,DWORD PTR [rdi+0x23]
   140011401:	(bad)  
   140011402:	push   rsi
   140011403:	bsf    ebx,ecx
   140011406:	rex.WXB fild WORD PTR [r8-0x80]
   14001140a:	loop   0x14001139d
   14001140c:	jrcxz  0x1400113b5
   14001140e:	(bad)  
   14001140f:	loope  0x140011421
   140011411:	add    dl,BYTE PTR [rdx+rdx*4-0x3f016cbc]
   140011418:	jb     0x1400113ac
   14001141a:	mov    dh,BYTE PTR [rsi+0x77db8b52]
   140011420:	ss pop rsp
   140011422:	xor    edi,DWORD PTR [rip+0x490d7c8]        # 0x14491ebf0
   140011428:	es (bad) 
   14001142a:	clc    
   14001142b:	jne    0x14001143e
   14001142d:	icebp  
   14001142e:	scas   eax,DWORD PTR es:[rdi]
   14001142f:	rex.WRB movabs ds:0x36ae07fd550bf,al
   140011439:	rex.WRB movabs r14,0x149afccca35e3f53
   140011443:	sbb    BYTE PTR [rcx-0x49a781a1],0x36
   14001144a:	xchg   DWORD PTR [rdi-0xa],esp
   14001144d:	mov    esi,0x799b97b6
   140011452:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011453:	in     eax,0x66
   140011455:	movsxd esi,DWORD PTR [rax-0x3c]
   140011458:	jbe    0x1400114d8
   14001145a:	fsub   DWORD PTR [rsi]
   14001145c:	rex.B
   14001145d:	rex.WX test QWORD PTR [rdx],rax
   140011460:	movabs al,ds:0xa99b185421a018e8
   140011469:	in     al,0x35
   14001146b:	adc    BYTE PTR [rdi-0x6b30601],bh
   140011471:	adc    ebx,DWORD PTR [rdi-0x40600e69]
   140011477:	pop    rbx
   140011478:	int    0xf0
   14001147a:	(bad)
   14001147f:	popf   
   140011480:	sub    BYTE PTR [rsi-0x23],cl
   140011483:	rex.RXB
   140011484:	test   BYTE PTR ds:[rsi+0xee15dd6],cl
   14001148b:	pop    rbx
   14001148c:	js     0x140011435
   14001148e:	mov    eax,DWORD PTR [rdi]
   140011490:	mov    ecx,0xdeabe7ae
   140011495:	rex.X mov bl,0xbf
   140011498:	(bad)  
   140011499:	jg     0x1400114e2
   14001149b:	xor    eax,eax
   14001149d:	pop    rdx
   14001149e:	cld    
   14001149f:	xchg   bl,bh
   1400114a1:	(bad)  
   1400114a2:	cli    
   1400114a3:	pop    rbp
   1400114a4:	fcomp  QWORD PTR [rax-0x7efe690]
   1400114aa:	xchg   bl,bl
   1400114ac:	nop
   1400114ad:	(bad)  
   1400114ae:	sub    eax,0x9f276399
   1400114b3:	(bad)  
   1400114b4:	pop    rdi
   1400114b6:	jns    0x14001148d
   1400114b8:	int    0xcc
   1400114ba:	add    al,0x4e
   1400114bc:	push   rbx
   1400114bd:	rex.WB (bad) 
   1400114bf:	repz and eax,0xcec48925
   1400114c5:	mov    edi,0x193ce5c6
   1400114ca:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400114cb:	mov    ch,cl
   1400114cd:	movsxd ecx,DWORD PTR [rdi]
   1400114cf:	jle    0x1400114aa
   1400114d1:	cmp    al,0xec
   1400114d3:	cmp    DWORD PTR [rbx-0x14],ecx
   1400114d6:	retf   
   1400114d7:	popf   
   1400114d8:	xlat   BYTE PTR ds:[rbx]
   1400114d9:	sub    DWORD PTR [rbp-0x29],0x5d5d35
   1400114e0:	or     BYTE PTR [rcx-0x8],ch
   1400114e3:	(bad)  
   1400114e4:	ds rex xchg esp,eax
   1400114e7:	mov    al,0x47
   1400114e9:	lea    eax,[rbx+0x5a]
   1400114ec:	mul    BYTE PTR [rsi-0x6a]
   1400114ef:	ds ins BYTE PTR es:[rdi],dx
   1400114f1:	mov    edi,DWORD PTR [rcx-0x4133145]
   1400114f7:	push   rsi
   1400114f8:	sbb    al,0x7e
   1400114fa:	(bad)  
   1400114fb:	(bad)  
   1400114fc:	(bad)  
   1400114fd:	(bad)  
   1400114fe:	outs   dx,DWORD PTR ds:[rsi]
   1400114ff:	add    esp,DWORD PTR [rcx-0x156a7b5d]
   140011505:	stos   BYTE PTR es:[rdi],al
   140011506:	sbb    eax,0x2bce3403
   14001150b:	jo     0x14001154c
   14001150d:	mov    ch,0x52
   14001150f:	repz sahf 
   140011511:	iret   
   140011512:	lods   al,BYTE PTR ds:[rsi]
   140011513:	scas   eax,DWORD PTR es:[rdi]
   140011514:	movabs ds:0xe97d25ebf3de6c75,eax
   14001151d:	rex.XB or DWORD PTR [r11],ebp
   140011520:	rex.B cdq 
   140011522:	cld    
   140011523:	mov    bh,BYTE PTR [rsi+rbx*2]
   140011526:	mov    bl,0xb1
   140011528:	(bad)  
   140011529:	jns    0x140011520
   14001152b:	rex.RXB sbb r10d,DWORD PTR [r8+0x2d8087c]
   140011532:	add    BYTE PTR [rsi],0x54
   140011535:	ins    BYTE PTR es:[rdi],dx
   140011536:	push   0xffffffffaa248d37
   14001153b:	rcl    ah,0xe1
   14001153e:	cmp    edi,esp
   140011540:	out    dx,al
   140011541:	add    cl,BYTE PTR [rdx-0x6a8835b8]
   140011547:	imul   ecx,DWORD PTR [rdi],0xfffffffd
   14001154a:	cmp    eax,0xfedfea01
   14001154f:	(bad)  
   140011550:	push   rdx
   140011551:	add    ebx,esi
   140011553:	enter  0xb3f1,0xe3
   140011557:	(bad)  
   140011558:	lea    edx,gs:[rcx-0x2d]
   14001155c:	fwait
   14001155d:	mov    bl,0x66
   14001155f:	(bad)  
   140011560:	fiadd  WORD PTR [rsi+0xcbd400c]
   140011566:	(bad)  
   140011567:	(bad)  
   140011568:	rex.WR adc rax,0x4000c7d3
   14001156e:	int3   
   14001156f:	push   rsp
   140011570:	xchg   ebp,eax
   140011571:	add    ebp,DWORD PTR [rbx+rbp*1+0x71]
   140011575:	xchg   ebx,eax
   140011576:	fwait
   140011577:	mov    dh,0x4f
   140011579:	sbb    eax,0x600bffea
   14001157e:	sbb    al,BYTE PTR [rax]
   140011580:	sub    BYTE PTR [rbx-0x37c7eaa1],0x4
   140011587:	imul   esi,DWORD PTR [rdx+rbp*2+0x7b],0xccb50c
   14001158f:	(bad)  
   140011590:	int    0xdd
   140011592:	iret   
   140011593:	mov    dl,0x7a
   140011595:	xlat   BYTE PTR ds:[rbx]
   140011596:	movabs ds:0x3a3f278dd6cf7f37,eax
   14001159f:	(bad)  
   1400115a0:	rex.WRX add QWORD PTR [rdx+0x4841196a],r8
   1400115a7:	rex.XB push r10
   1400115a9:	movabs eax,ds:0x25a44044ed409e73
   1400115b2:	(bad)  
   1400115b3:	(bad)  
   1400115b4:	ds pop rdi
   1400115b6:	add    DWORD PTR [rax],esp
   1400115b8:	dec    edx
   1400115ba:	cmp    eax,0x37e7be32
   1400115bf:	loopne 0x1400115a7
   1400115c1:	(bad)  
   1400115c2:	sti    
   1400115c3:	shr    DWORD PTR [rdi],1
   1400115c5:	(bad)  
   1400115c6:	rex.WRB
   1400115c7:	add    ecx,r11d
   1400115ca:	adc    bl,BYTE PTR [rdx+0x4de3016f]
   1400115d0:	out    0xe4,eax
   1400115d2:	push   rbx
   1400115d3:	cmc    
   1400115d4:	jbe    0x1400115d4
   1400115d6:	and    al,0xd3
   1400115d8:	add    esi,DWORD PTR [rcx-0x40b928c0]
   1400115de:	push   rbp
   1400115df:	add    eax,0x1341c23e
   1400115e4:	imul   ebx,eax,0x23a02321
   1400115ea:	rex.RX xor ax,0x5428
   1400115ef:	movabs al,ds:0x280afbfb2f801c1e
   1400115f8:	mov    ?,WORD PTR [rsi]
   1400115fa:	jns    0x140011626
   1400115fc:	scas   eax,DWORD PTR es:[rdi]
   1400115fd:	xchg   esp,eax
   1400115fe:	add    esp,DWORD PTR [rdx]
   140011600:	in     eax,0x24
   140011602:	adc    DWORD PTR [rbx],esi
   140011604:	cwde   
   140011605:	mov    bl,0x26
   140011607:	rex.WB adc rax,0xffffffffdfe94dc4
   14001160d:	mov    ah,0x54
   14001160f:	add    BYTE PTR [rdi+riz*1],al
   140011612:	loopne 0x1400115f8
   140011614:	rex.WR cmp al,0x44
   140011617:	(bad)  
   140011618:	gs jb  0x1400115ee
   14001161b:	mov    bl,0xa2
   14001161d:	test   al,0xc7
   14001161f:	sahf   
   140011620:	sar    ecx,cl
   140011622:	xlat   BYTE PTR ds:[rbx]
   140011623:	or     ebx,DWORD PTR [rbp+0x33]
   140011626:	(bad)  
   140011627:	add    dl,0xdb
   14001162a:	jmp    FWORD PTR [rsi+0x1]
   14001162d:	test   al,0xea
   14001162f:	pop    rbp
   140011630:	ja     0x1400115cb
   140011632:	add    esp,edx
   140011634:	lahf   
   140011635:	(bad)  
   140011636:	rex.RX jrcxz 0x14001162e
   140011639:	mov    ebp,DWORD PTR [rbx+0x3b]
   14001163c:	pop    rsi
   14001163d:	mov    dl,0x73
   14001163f:	jae    0x1400115f1
   140011641:	(bad)  
   140011642:	jae    0x140011607
   140011644:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011645:	(bad)  
   140011646:	(bad)
   14001164a:	mov    ?,WORD PTR [rdx]
   14001164c:	xchg   edx,eax
   14001164d:	fcmovbe st,st(4)
   14001164f:	pop    rdx
   140011650:	and    eax,DWORD PTR [rbx-0x5c]
   140011653:	mov    cl,BYTE PTR [rdi-0x30e3365d]
   140011659:	(bad)  
   14001165a:	rcl    cl,cl
   14001165c:	cmp    dh,BYTE PTR [rsi]
   14001165e:	(bad)  
   14001165f:	in     al,0xe7
   140011661:	lods   al,BYTE PTR ds:[rsi]
   140011662:	cmp    ecx,esi
   140011664:	xor    BYTE PTR [rcx],0x20
   140011667:	sub    BYTE PTR [rcx+0x5d],dh
   14001166a:	sbb    al,0xc9
   14001166c:	scas   eax,DWORD PTR es:[rdi]
   14001166d:	(bad)  
   14001166e:	stos   DWORD PTR es:[rdi],eax
   14001166f:	in     eax,0x18
   140011671:	(bad)  
   140011672:	pop    fs
   140011674:	rex.RB (bad) 
   140011676:	mov    BYTE PTR [rbx+0x5ee41baa],bl
   14001167c:	mov    ebp,0x1734236
   140011681:	rex.WRXB (bad) 
   140011683:	repz xor eax,0x4675501a
   140011689:	sbb    al,0x65
   14001168b:	cdq    
   14001168c:	fs jle 0x14001160f
   14001168f:	movabs ds:0xb11241554beaa63e,al
   140011698:	mov    esi,0x908120bf
   14001169d:	fdiv   st(1),st
   14001169f:	sbb    eax,0x9216e748
   1400116a4:	movsxd esp,DWORD PTR [rdi]
   1400116a6:	sahf   
   1400116a7:	(bad)  
   1400116a8:	(bad)  
   1400116a9:	pause  
   1400116ab:	add    BYTE PTR [rax+0x20],cl
   1400116ae:	push   ax
   1400116b0:	(bad)  
   1400116b1:	rex.WX (bad) 
   1400116b3:	(bad)  
   1400116b4:	dec    DWORD PTR [rcx]
   1400116b6:	jmp    0x19036f3da
   1400116bb:	sbb    eax,0x61d69805
   1400116c0:	fcmovnu st,st(2)
   1400116c2:	mov    ah,0x3d
   1400116c4:	rol    dh,cl
   1400116c6:	jo     0x1400116b9
   1400116c8:	fild   QWORD PTR [rdi]
   1400116ca:	sbb    al,0x50
   1400116cc:	mov    eax,0x654c9a56
   1400116d1:	mov    DWORD PTR [rbx-0x45],eax
   1400116d4:	in     al,0xb
   1400116d6:	rex.WRB stos BYTE PTR es:[rdi],al
   1400116d8:	pop    rbp
   1400116d9:	imul   ebp,edi,0xc7d6627e
   1400116df:	outs   dx,DWORD PTR ds:[rsi]
   1400116e0:	sti    
   1400116e1:	mov    esi,0x855b0861
   1400116e6:	sbb    al,0x80
   1400116e8:	mov    dh,0x7e
   1400116ea:	(bad)  
   1400116eb:	rex.WXB scas rax,QWORD PTR es:[rdi]
   1400116ed:	pop    rax
   1400116ee:	and    DWORD PTR [rax+0x5f],ebp
   1400116f1:	mov    bl,0x21
   1400116f3:	or     ebp,edi
   1400116f5:	rex.WX imul BYTE PTR [ecx]
   1400116f9:	scas   al,BYTE PTR es:[rdi]
   1400116fa:	xchg   ebp,eax
   1400116fb:	and    al,0x18
   1400116fd:	jg     0x1400116e5
   1400116ff:	mul    DWORD PTR [rbp-0xd]
   140011702:	push   rdi
   140011703:	fisubr WORD PTR [rcx]
   140011705:	out    0xc4,al
   140011707:	add    eax,DWORD PTR [rsi-0x1f]
   14001170a:	retf   0x5565
   14001170d:	sahf   
   14001170e:	jge    0x14001174b
   140011710:	div    BYTE PTR [rsi-0x2]
   140011713:	(bad)  
   140011714:	xor    ah,bl
   140011716:	jo     0x14001172b
   140011718:	js     0x140011786
   14001171a:	(bad)  
   14001171b:	pop    rax
   14001171c:	jmp    0x1400116ad
   14001171e:	icebp  
   14001171f:	data16 rex.WRB movabs r11,0x71ca1a3417305f66
   14001172a:	push   0xffffffffffffffaf
   14001172c:	mov    edx,0xbc8368d0
   140011731:	ss (bad) 
   140011733:	cdq    
   140011734:	and    esp,ebp
   140011736:	not    DWORD PTR [rdi-0x32]
   140011739:	pop    rax
   14001173a:	out    dx,eax
   14001173b:	rex.RX
   14001173c:	rex je 0x14001171a
   14001173f:	cld    
   140011740:	cmc    
   140011741:	(bad)  
   140011742:	cmp    BYTE PTR [rsi+0x5],dl
   140011745:	(bad)  
   140011746:	cmp    DWORD PTR [rsi+0x76],edi
   140011749:	mov    edx,?
   14001174b:	adc    cl,BYTE PTR [rdx]
   14001174d:	ss (bad) 
   14001174f:	hlt    
   140011750:	(bad)  
   140011751:	ins    DWORD PTR es:[rdi],dx
   140011752:	mov    dl,0x30
   140011754:	outs   dx,DWORD PTR ds:[rsi]
   140011755:	mov    DWORD PTR [rbx+0x53bdbae6],edx
   14001175b:	mov    eax,0x4fccfb76
   140011760:	xchg   ebx,eax
   140011761:	fwait
   140011762:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011763:	pop    rdi
   140011764:	mov    dh,0xde
   140011766:	pop    rdi
   140011767:	fucom  st(0)
   140011769:	test   ebx,eax
   14001176b:	call   0x142ec0043
   140011770:	rex push rsp
   140011772:	out    0xbf,al
   140011774:	cli    
   140011775:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011776:	out    0xf2,al
   140011778:	lahf   
   140011779:	pop    rbp
   14001177a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001177b:	add    BYTE PTR [rdi+rdi*2-0x17],ch
   14001177f:	xchg   ebx,eax
   140011780:	test   BYTE PTR [rbx-0x68e882c9],r10b
   140011787:	rex.WB popf 
   140011789:	(bad)  
   14001178a:	movabs al,ds:0x369b2be7c5f714b1
   140011793:	mov    edx,0x6c38e551
   140011798:	test   eax,0x1be981bf
   14001179d:	fcmovb st,st(1)
   14001179f:	repz rex or edx,eax
   1400117a3:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400117a5:	mov    cl,0xf6
   1400117a7:	ficomp WORD PTR [rdi]
   1400117a9:	sub    ebp,ebp
   1400117ab:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400117ac:	jle    0x140011739
   1400117ae:	test   eax,0xf189fa1c
   1400117b3:	(bad)  
   1400117b4:	cwde   
   1400117b5:	fistp  DWORD PTR [rdx-0x60]
   1400117b8:	sbb    BYTE PTR [rcx-0x79],al
   1400117bb:	sbb    ebp,DWORD PTR [rsi]
   1400117bd:	cdq    
   1400117be:	(bad)  
   1400117bf:	fild   QWORD PTR [rdx+0x2556740b]
   1400117c5:	mov    edx,0x29b07ad0
   1400117ca:	imul   DWORD PTR [rcx-0x16164862]
   1400117d0:	outs   dx,DWORD PTR ds:[rsi]
   1400117d1:	int3   
   1400117d2:	mov    esi,0x6fad48d4
   1400117d7:	cmp    edi,edi
   1400117d9:	pop    rdx
   1400117da:	jge    0x140011831
   1400117dc:	int    0xf8
   1400117de:	mov    ebx,DWORD PTR [rax-0x3f91a861]
   1400117e4:	loop   0x1400117d3
   1400117e6:	scas   eax,DWORD PTR es:[rdi]
   1400117e7:	leave  
   1400117e8:	repnz movabs ds:0x597571c9f57e2f90,al
   1400117f2:	es cwde 
   1400117f4:	sub    al,0xb3
   1400117f6:	jmp    0x1a9ca7abd
   1400117fb:	scas   eax,DWORD PTR es:[rdi]
   1400117fc:	rex.WX inc BYTE PTR [rcx-0x15]
   140011800:	mov    dl,0xdb
   140011802:	jle    0x140011829
   140011804:	ins    DWORD PTR es:[rdi],dx
   140011805:	movabs eax,ds:0x7afb4eb9db5ae531
   14001180e:	(bad)  
   14001180f:	rex.R jmp 0x1671c7424
   140011815:	(bad)  
   140011816:	rex.WR test BYTE PTR [rax+0x48],r9b
   14001181a:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001181c:	cmp    edx,ebx
   14001181e:	(bad)  
   14001181f:	rex
   140011820:	xor    eax,DWORD PTR gs:[rdx-0x66a500b7]
   140011827:	out    dx,al
   140011828:	jp     0x140011824
   14001182a:	shl    BYTE PTR [rdi-0xe1f819],1
   140011830:	repz or al,0x68
   140011833:	stos   BYTE PTR es:[rdi],al
   140011834:	mov    cl,0xe1
   140011836:	mov    eax,es
   140011838:	lock sar DWORD PTR [rbp+0x6b],1
   14001183c:	adc    esi,DWORD PTR [rbp+0x4ad25f11]
   140011842:	fld    TBYTE PTR [rax+0x44]
   140011845:	(bad)  
   140011846:	scas   al,BYTE PTR es:[rdi]
   140011847:	lock adc BYTE PTR [rdi+0x6f],bl
   14001184b:	leave  
   14001184c:	mov    al,0xf5
   14001184e:	xchg   edi,eax
   14001184f:	out    dx,eax
   140011850:	mov    cl,0xf2
   140011852:	loopne 0x14001185b
   140011854:	enter  0xc314,0x44
   140011858:	mov    DWORD PTR [rbp-0x11],ebx
   14001185b:	test   al,0xf8
   14001185d:	cmp    rax,QWORD PTR [r13-0xbce2fd1]
   140011864:	mov    edi,0x86dbefbd
   140011869:	cwde   
   14001186a:	mov    esi,0xc44f9b6f
   14001186f:	jno    0x1400118be
   140011871:	scas   al,BYTE PTR es:[rdi]
   140011872:	push   rbp
   140011873:	sbb    eax,DWORD PTR [rdx-0x6c]
   140011876:	clc    
   140011877:	xor    al,0x41
   140011879:	ins    DWORD PTR es:[rdi],dx
   14001187a:	pop    rbp
   14001187b:	sub    al,0x30
   14001187d:	mov    cl,0x56
   14001187f:	jmp    0x1400118b1
   140011881:	ss (bad) 
   140011883:	(bad)  
   140011884:	ins    BYTE PTR es:[rdi],dx
   140011885:	repnz push rdx
   140011887:	mov    ebx,0xa7d0bb7d
   14001188c:	bnd ja 0x14001190e
   14001188f:	test   al,0x54
   140011891:	nop
   140011892:	stc    
   140011893:	(bad)  
   140011895:	jrcxz  0x1400118f2
   140011897:	mov    ch,0x89
   140011899:	rex.B retf 0xf9ce
   14001189d:	(bad)  
   14001189e:	(bad)  
   1400118a0:	(bad)  
   1400118a1:	rex.WB
   1400118a2:	sar    DWORD PTR es:[rdx-0x4b],1
   1400118a6:	xlat   BYTE PTR ds:[rbx]
   1400118a7:	out    0x46,eax
   1400118a9:	fisubr DWORD PTR [rdx+0x17]
   1400118ac:	xor    BYTE PTR [rcx+0x48],bl
   1400118af:	push   0x42fc0cbb
   1400118b4:	movsxd esi,esp
   1400118b6:	imul   esi,DWORD PTR [rbp+rbp*1+0x4c],0x163f9080
   1400118be:	rex.WR or BYTE PTR [rdx+0x1b],0x98
   1400118c3:	cmp    al,0xb2
   1400118c5:	mov    eax,eax
   1400118c7:	jns    0x140011938
   1400118c9:	icebp  
   1400118ca:	ret    
   1400118cb:	rex.WR rcl BYTE PTR [rdi+0x5f],0xf9
   1400118d0:	and    eax,DWORD PTR [rbp+0x35]
   1400118d3:	(bad)  
   1400118d4:	pop    rbx
   1400118d5:	adc    bh,BYTE PTR [rsi-0x3e]
   1400118d8:	xchg   DWORD PTR [rax],edx
   1400118da:	or     DWORD PTR [rbx+0x0],eax
   1400118dd:	mov    esi,0xa73f90aa
   1400118e2:	vunpckhps ymm14,ymm15,YMMWORD PTR [rax-0x4c]
   1400118e7:	xchg   ecx,esp
   1400118e9:	push   rbp
   1400118ea:	sbb    cl,BYTE PTR [rbx]
   1400118ec:	jb     0x1400118d4
   1400118ee:	adc    DWORD PTR [rbp+rdi*4+0x7eac47e7],ebp
   1400118f5:	out    dx,al
   1400118f6:	jge    0x14001187e
   1400118f8:	mov    dl,BYTE PTR [rcx]
   1400118fa:	sbb    eax,0xffffffdd
   1400118fd:	fidiv  DWORD PTR [rbx]
   1400118ff:	mov    ah,BYTE PTR ds:[rcx]
   140011902:	je     0x1400118b8
   140011904:	or     DWORD PTR [rsi+rsi*1-0x4bde1c60],ecx
   14001190b:	sub    al,0x10
   14001190d:	push   rdx
   14001190e:	jnp    0x14001197b
   140011910:	movabs ds:0xc686ae0d88c0fdbc,eax
   140011919:	add    al,0xa0
   14001191b:	xchg   ecx,eax
   14001191c:	int    0xd7
   14001191e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001191f:	sub    edi,DWORD PTR [rbx+0x40a1093e]
   140011925:	js     0x1400118ee
   140011927:	imul   edi,ebp,0x7f2dec89
   14001192d:	mov    ebp,0xd72187d0
   140011932:	push   rdx
   140011933:	xor    DWORD PTR [rax-0x3],edi
   140011936:	fisttp DWORD PTR [rax]
   140011938:	push   rax
   140011939:	jl     0x14001192c
   14001193b:	call   0xf5415631
   140011940:	adc    al,BYTE PTR [rcx-0x62db32d]
   140011946:	(bad)
   140011949:	jge    0x14001196c
   14001194b:	mov    ah,0xaa
   14001194d:	push   QWORD PTR [rbp*1+0xafbff12]
   140011954:	(bad)  
   140011955:	(bad)  
   140011956:	fidiv  DWORD PTR [rbx+0x5c]
   140011959:	jle    0x14001194e
   14001195b:	(bad)  
   14001195c:	sbb    DWORD PTR [rdi-0x18],0xffffffd2
   140011960:	(bad)  
   140011961:	mov    eax,0x89404efa
   140011966:	ds push rax
   140011968:	adc    BYTE PTR [rdx+rcx*2],0x55
   14001196c:	mov    dh,0x2a
   14001196e:	ficomp DWORD PTR [rdx+0x40]
   140011971:	xchg   ebx,eax
   140011972:	imul   DWORD PTR [rcx+rcx*2-0x70d8d5d1]
   140011979:	xchg   ebp,eax
   14001197a:	mov    ebp,0xdecf5b95
   14001197f:	repnz xchg esi,eax
   140011981:	jl     0x140011982
   140011983:	xor    DWORD PTR [rdi-0x5adec7fb],esp
   140011989:	or     eax,0xd2ac5e27
   14001198e:	(bad)  
   14001198f:	(bad)  
   140011990:	add    DWORD PTR [rdx+0x7b6da579],ebp
   140011996:	push   rsp
   140011997:	fcmovb st,st(3)
   140011999:	mov    ecx,0xf2fd9a47
   14001199e:	jne    0x1400119b6
   1400119a0:	cli    
   1400119a1:	cmp    bl,BYTE PTR [rdx-0x39]
   1400119a4:	(bad)  
   1400119a5:	cmp    eax,0x43d25ebf
   1400119aa:	(bad)  
   1400119ab:	rex.WX or al,0x91
   1400119ae:	rex.B test al,0x2b
   1400119b1:	pop    rcx
   1400119b2:	gs icebp 
   1400119b4:	adc    eax,0x9f9ec66e
   1400119b9:	movabs ds:0x9a00335a96e496ef,eax
   1400119c2:	or     eax,0xdf4bdad4
   1400119c7:	jge    0x14001198c
   1400119c9:	cli    
   1400119ca:	addr32 popf 
   1400119cc:	adc    eax,0xb0d7dad9
   1400119d1:	fwait
   1400119d2:	mov    edx,0xbc0ab181
   1400119d7:	clc    
   1400119d8:	call   FWORD PTR [rbx]
   1400119da:	ds add eax,0xdd7d6d7f
   1400119e0:	cmp    ecx,DWORD PTR [rdx+0x4a]
   1400119e3:	xor    esi,ebx
   1400119e5:	in     eax,0xc7
   1400119e7:	rex.WRXB or rax,0x6d0c6d2f
   1400119ed:	jne    0x140011a63
   1400119ef:	(bad)  
   1400119f0:	(bad)  
   1400119f1:	hlt    
   1400119f2:	out    0x6d,al
   1400119f4:	mov    dh,0xb4
   1400119f6:	pop    rsp
   1400119f7:	xchg   edx,eax
   1400119f8:	rex.WB add rax,0xffffffffcbedbcd1
   1400119fe:	loopne 0x1400119d1
   140011a00:	mov    bl,0xa2
   140011a02:	xor    rsp,QWORD PTR [r10+0x713027db]
   140011a09:	fimul  WORD PTR [rbx]
   140011a0b:	(bad)  
   140011a0c:	iret   
   140011a0d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011a0e:	rcl    ch,cl
   140011a10:	(bad)  
   140011a11:	add    BYTE PTR [rax],bh
   140011a13:	mov    edx,0x3a6fc567
   140011a18:	adc    eax,0x40ce9b5a
   140011a1d:	add    eax,0xf83a790
   140011a22:	xor    eax,DWORD PTR [rcx]
   140011a24:	(bad)  
   140011a25:	mov    ebp,0xc1145ffa
   140011a2a:	xor    DWORD PTR [rip+0x547554a4],edx        # 0x194766ed4
   140011a30:	loopne 0x1400119bd
   140011a32:	or     BYTE PTR [rdx+rbx*2],cl
   140011a35:	xchg   ecx,eax
   140011a36:	scas   al,BYTE PTR es:[rdi]
   140011a37:	pop    rdx
   140011a38:	and    al,BYTE PTR [rsi-0x4b7b6e61]
   140011a3e:	pop    rbx
   140011a3f:	stos   DWORD PTR es:[rdi],eax
   140011a40:	sbb    eax,0x26bf2175
   140011a45:	in     eax,dx
   140011a46:	je     0x140011a72
   140011a48:	in     eax,0x8f
   140011a4a:	jg     0x140011aaa
   140011a4c:	(bad)  
   140011a4d:	push   rbx
   140011a4f:	jg     0x140011abc
   140011a51:	icebp  
   140011a52:	loopne 0x1400119db
   140011a54:	pushf  
   140011a55:	mov    edx,0x5404481f
   140011a5a:	(bad)  
   140011a5b:	(bad)  
   140011a5c:	(bad)  
   140011a5d:	fistp  QWORD PTR [rdx+0x237b43e4]
   140011a63:	(bad)  
   140011a64:	jrcxz  0x140011a1d
   140011a66:	mov    dh,0x7e
   140011a68:	rol    BYTE PTR [rsi-0x42],0x43
   140011a6c:	call   0x14f8afb1d
   140011a71:	or     esp,DWORD PTR [rdi-0x624302a]
   140011a77:	pop    rax
   140011a78:	icebp  
   140011a79:	neg    BYTE PTR [rax]
   140011a7b:	rex.RXB add r8b,r14b
   140011a7e:	(bad)  
   140011a7f:	jmp    0xf4212c58
   140011a84:	xlat   BYTE PTR ds:[rbx]
   140011a85:	push   0xffffffffea02f50c
   140011a8a:	(bad)  
   140011a8b:	movabs ds:0x9fe3e280a5df0ff7,al
   140011a94:	(bad)  
   140011a95:	cmp    cl,BYTE PTR [rdi+rsi*4]
   140011a98:	jae    0x140011a3b
   140011a9a:	mov    edi,0xc5f9b24c
   140011a9f:	and    ch,cl
   140011aa1:	iret   
   140011aa2:	pop    rcx
   140011aa3:	push   rax
   140011aa4:	stos   DWORD PTR es:[rdi],eax
   140011aa5:	ds rex.WB
   140011aa7:	rex.RXB cmp r12d,DWORD PTR [r13+0x3b]
   140011aab:	rex.XB mov r13b,0xc2
   140011aae:	mov    dl,0xaf
   140011ab0:	xchg   ecx,eax
   140011ab1:	xor    DWORD PTR [rbp-0xe],0xffffffe7
   140011ab5:	jbe    0x140011a78
   140011ab7:	jrcxz  0x140011b33
   140011ab9:	movabs ds:0x6ffbfa4aa406106b,eax
   140011ac2:	(bad)  
   140011ac3:	rex.B stos BYTE PTR es:[rdi],al
   140011ac5:	jge    0x140011a8f
   140011ac7:	xchg   edi,eax
   140011ac8:	(bad)  
   140011ac9:	add    al,BYTE PTR [rsi+0x66]
   140011acc:	jo     0x140011b3a
   140011ace:	rex.WRX
   140011acf:	rex.RX (bad) 
   140011ad1:	(bad)  
   140011ad3:	repnz lods eax,DWORD PTR ds:[rsi]
   140011ad5:	addr32 pop rsi
   140011ad7:	hlt    
   140011ad8:	(bad)  
   140011ad9:	(bad)  
   140011ada:	fbld   TBYTE PTR [rbx-0x1cfcb011]
   140011ae0:	and    ch,BYTE PTR [rax+0x420f54b7]
   140011ae6:	(bad)  
   140011ae7:	push   rax
   140011ae8:	fnstsw WORD PTR [rcx-0x71244073]
   140011aee:	mov    edi,0xdce60bfa
   140011af3:	movabs ds:0xb6be0c31b5cb5759,eax
   140011afc:	rex.B cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011afe:	movabs ds:0xec7a5a2ff9fe6c75,eax
   140011b07:	pop    rsi
   140011b08:	movsxd eax,DWORD PTR [rax]
   140011b0a:	movabs al,ds:0xcab85b7849d5f5b2
   140011b13:	cmp    al,0xe3
   140011b15:	and    DWORD PTR [rdx+rcx*1-0x41],edx
   140011b19:	mov    ebp,0xafd319
   140011b1e:	xor    dl,cl
   140011b20:	jrcxz  0x140011b91
   140011b22:	push   0x3e
   140011b24:	sbb    eax,0x1ce88d9e
   140011b29:	ja     0x140011b2d
   140011b2b:	push   0x30
   140011b2d:	(bad)  
   140011b2e:	out    0xf9,al
   140011b30:	xor    eax,0x81bed670
   140011b35:	loopne 0x140011b9c
   140011b37:	cdq    
   140011b38:	mov    dh,0x6c
   140011b3a:	ja     0x140011bb9
   140011b3c:	lods   al,BYTE PTR ds:[rsi]
   140011b3d:	add    ch,BYTE PTR [rdi+0x326567ff]
   140011b43:	pop    rax
   140011b44:	movabs rsi,0x6b0e6d2e8d4ec74
   140011b4e:	push   rbp
   140011b4f:	movsxd esi,DWORD PTR [rcx+rbp*8]
   140011b52:	int    0xd9
   140011b54:	ins    BYTE PTR es:[rdi],dx
   140011b55:	imul   edi,DWORD PTR [rcx-0x96cdb1c],0xefae85f4
   140011b5f:	addr32 rex.WXB iretq 
   140011b62:	push   rbp
   140011b63:	cli    
   140011b64:	ja     0x140011b03
   140011b66:	mov    edi,0x27d71dbd
   140011b6b:	pop    rbp
   140011b6c:	mov    bl,0x84
   140011b6e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011b6f:	fisubr DWORD PTR [rdx]
   140011b71:	add    eax,0x3d55d440
   140011b76:	mov    dl,0x71
   140011b78:	fs cmp al,0x20
   140011b7b:	rex.RX
   140011b7c:	data16 lock (bad) 
   140011b7f:	es ret 0x7713
   140011b83:	dec    ebx
   140011b85:	pop    rsp
   140011b86:	mov    dl,0x79
   140011b88:	jg     0x140011b13
   140011b8a:	(bad)  
   140011b8b:	mov    ecx,0xb1b50ac3
   140011b90:	out    0x3f,eax
   140011b92:	mov    dh,0xef
   140011b94:	popf   
   140011b95:	ficom  DWORD PTR [rcx-0x23]
   140011b98:	(bad)  [rbx+0x0]
   140011b9b:	and    DWORD PTR [rax+rbp*4-0x373c8740],esp
   140011ba2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ba3:	xor    edx,DWORD PTR [rbx+0x1996994d]
   140011ba9:	imul   DWORD PTR [rcx+rbp*1]
   140011bac:	push   rdx
   140011bae:	cmp    eax,0xef2bf9b2
   140011bb3:	adc    al,0x7a
   140011bb5:	hlt    
   140011bb6:	pop    rsi
   140011bb7:	mov    bh,0xc0
   140011bb9:	xor    al,0xf9
   140011bbb:	(bad)  
   140011bbc:	jl     0x140011be0
   140011bbe:	rex.WRX int 0x1f
   140011bc1:	scas   al,BYTE PTR es:[rdi]
   140011bc2:	rex.B (bad) 
   140011bc4:	cs mov eax,0xe2413d0a
   140011bca:	(bad)  
   140011bcb:	out    0x6f,al
   140011bcd:	rex.WB
   140011bce:	repz push 0xffffffffffffffca
   140011bd1:	outs   dx,BYTE PTR ds:[rsi]
   140011bd2:	xchg   ebp,eax
   140011bd3:	repnz pop rsp
   140011bd5:	ja     0x140011c32
   140011bd7:	gs mov edi,0xfd7524b7
   140011bdd:	shr    BYTE PTR [rax+0x1534082d],1
   140011be3:	mov    DWORD PTR [rax+0x4c],esi
   140011be6:	and    eax,0xa893abe9
   140011beb:	rol    DWORD PTR [rsi],1
   140011bed:	or     eax,0x175505b9
   140011bf2:	jns    0x140011ba1
   140011bf4:	movabs ds:0xcdfc4fff4bcc88bf,eax
   140011bfd:	and    ebx,DWORD PTR [rbx+0x4d499b75]
   140011c03:	xchg   edx,eax
   140011c04:	rex.WX mov sil,0xb0
   140011c07:	in     al,0xa4
   140011c09:	(bad)  
   140011c0a:	sbb    ebp,DWORD PTR [rbp-0x80]
   140011c0d:	imul   eax,DWORD PTR [rdi-0x16d24d3e],0xad4e9d5f
   140011c17:	mov    edi,0x22ba0f3b
   140011c1c:	xor    eax,0x502fc57c
   140011c21:	jmp    0xcccc7835
   140011c26:	(bad)  
   140011c27:	or     ch,dh
   140011c29:	rex.RB xchg r13d,eax
   140011c2b:	or     ecx,0x80bc6e8e
   140011c31:	push   0xffffffffff716f0c
   140011c36:	pop    rax
   140011c37:	rex.B leave 
   140011c39:	out    0x24,eax
   140011c3b:	pop    rbx
   140011c3c:	(bad)  
   140011c3d:	popf   
   140011c3e:	jl     0x140011c19
   140011c40:	jl     0xdfd4b171
   140011c46:	(bad)  
   140011c47:	lock jg 0x140011c8f
   140011c4a:	rcr    BYTE PTR [rdi],cl
   140011c4c:	in     eax,dx
   140011c4d:	jmp    0x140011ca5
   140011c4f:	out    dx,al
   140011c50:	enter  0x14a6,0x5
   140011c54:	and    dl,0xa1
   140011c57:	(bad)  
   140011c58:	rex.WR (bad) 
   140011c5a:	add    DWORD PTR [rbp-0x61630f63],edx
   140011c60:	sbb    BYTE PTR [rdx-0x17],dh
   140011c63:	xor    al,0xd6
   140011c65:	jg     0x140011c5a
   140011c67:	pop    rdi
   140011c68:	fnclex 
   140011c6a:	rex.WRXB jg 0x140011c0b
   140011c6d:	adc    DWORD PTR [rbx-0x730f1231],0x3f
   140011c74:	jbe    0x140011c60
   140011c76:	jle    0x140011ca0
   140011c78:	int    0xe5
   140011c7a:	(bad)  
   140011c7b:	fnsave [rbx+0xbaf9b2e]
   140011c81:	jl     0x140011c85
   140011c83:	or     BYTE PTR [rax-0x4d],ch
   140011c86:	jg     0x140011cea
   140011c88:	out    0x4,al
   140011c8a:	mov    esp,0x3b6b1479
   140011c8f:	(bad)  
   140011c91:	sub    eax,DWORD PTR [rcx+0x5b]
   140011c94:	imul   ecx,DWORD PTR [rdx-0x6efd4610],0x66
   140011c9b:	(bad)
   140011c9f:	lea    ebx,[rbx+rdi*4+0x4]
   140011ca3:	add    bh,ch
   140011ca5:	xor    DWORD PTR [rdi+0x79],0xffffffe9
   140011ca9:	jg     0x140011d25
   140011cab:	js     0x140011d16
   140011cad:	(bad)  
   140011cae:	push   rbp
   140011caf:	(bad)  
   140011cb0:	push   rbp
   140011cb1:	jb     0x140011c69
   140011cb3:	jg     0x140011c87
   140011cb5:	pop    rdi
   140011cb6:	mov    al,0xd9
   140011cb8:	fcom   QWORD PTR [rdx+0x49]
   140011cbb:	rex.WB cmp spl,BYTE PTR [r9]
   140011cbe:	std    
   140011cbf:	mov    ch,0x75
   140011cc1:	frstor [rdi-0x3d]
   140011cc4:	cld    
   140011cc5:	ins    DWORD PTR es:[rdi],dx
   140011cc6:	rex.WRB scas al,BYTE PTR es:[rdi]
   140011cc8:	xchg   ebx,eax
   140011cc9:	and    DWORD PTR [rdi+0x367c17d4],0xd1217fd7
   140011cd3:	push   rbp
   140011cd4:	add    DWORD PTR [rax-0x79948137],eax
   140011cda:	jnp    0x140011d06
   140011cdc:	mov    ecx,0x560ecdb5
   140011ce1:	add    bl,ch
   140011ce3:	cmp    al,0xf8
   140011ce5:	xor    BYTE PTR [rcx],dl
   140011ce7:	rex.RX out 0xee,eax
   140011cea:	jl     0x140011d27
   140011cec:	mov    al,BYTE PTR [rbp-0x88b4a83]
   140011cf2:	and    esi,DWORD PTR [rbx]
   140011cf4:	out    0xd5,al
   140011cf6:	leave  
   140011cf7:	or     al,0xc0
   140011cf9:	pop    rdx
   140011cfa:	push   0x35
   140011cfc:	push   0xffffffffffffffdb
   140011cfe:	push   rbp
   140011cff:	push   0x2e
   140011d01:	(bad)  
   140011d02:	cld    
   140011d03:	mov    ecx,0x950e6e3f
   140011d08:	(bad)  
   140011d09:	(bad)  
   140011d0a:	sub    eax,0xb49b7c35
   140011d0f:	cmc    
   140011d10:	test   eax,0xbf9bb3df
   140011d15:	icebp  
   140011d16:	scas   eax,DWORD PTR es:[rdi]
   140011d17:	test   BYTE PTR [rdi-0x6c62b82],bl
   140011d1d:	or     dh,bl
   140011d1f:	mov    ebx,0x2de3025f
   140011d24:	(bad)  
   140011d25:	imul   esp,DWORD PTR [rdi-0x15],0xe5bc7412
   140011d2c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011d2d:	mov    esi,0xb5fbf954
   140011d32:	xlat   BYTE PTR ds:[rbx]
   140011d33:	mov    esi,0xb9277d29
   140011d38:	mov    al,0xd9
   140011d3a:	(bad)  
   140011d3b:	cmp    bh,BYTE PTR [rdi]
   140011d3d:	movabs ds:0x95010035d10aa73e,al
   140011d46:	mov    ah,0x7
   140011d48:	mov    esp,0x69943ef7
   140011d4d:	mov    DWORD PTR [rbp+0x35658a07],esi
   140011d53:	rex.RB out 0x51,eax
   140011d56:	adc    esi,DWORD PTR [rax+0x56]
   140011d59:	outs   dx,BYTE PTR ds:[rsi]
   140011d5a:	rex imul BYTE PTR [rbp+0x6f]
   140011d5e:	(bad)  
   140011d5f:	test   al,0xe2
   140011d61:	movsxd ebx,DWORD PTR [rdi-0x87bc5c1]
   140011d67:	or     eax,0xda4d4880
   140011d6c:	xchg   ebx,eax
   140011d6d:	ins    BYTE PTR es:[rdi],dx
   140011d6e:	jno    0x140011d29
   140011d70:	xor    BYTE PTR [rbx-0x2da569f5],cl
   140011d76:	mov    edi,0x2b3ca8ad
   140011d7b:	out    0x8f,al
   140011d7d:	test   eax,0xead136c3
   140011d82:	mov    edi,0x18bdbf2b
   140011d87:	test   BYTE PTR [rsi+0xa17a509],ah
   140011d8d:	pop    rbp
   140011d8e:	ins    DWORD PTR es:[rdi],dx
   140011d8f:	or     eax,0xb53dc340
   140011d94:	xor    eax,0x1d4af377
   140011d99:	(bad)  
   140011d9b:	add    al,BYTE PTR [rsi+0x48]
   140011d9e:	cs (bad) 
   140011da0:	xchg   ecx,eax
   140011da1:	(bad)  
   140011da2:	adc    eax,0xfa3c924c
   140011da7:	ins    DWORD PTR es:[rdi],dx
   140011da8:	(bad)  
   140011da9:	xchg   ebp,eax
   140011daa:	add    ebx,ebp
   140011dac:	xchg   ecx,eax
   140011dad:	(bad)  
   140011dae:	rex.R push rdx
   140011db0:	fdivp  st(5),st
   140011db2:	sbb    DWORD PTR [rdx+rbx*1+0x504dc426],esp
   140011db9:	movabs ds:0xe27da9abf67c1555,eax
   140011dc2:	(bad)  
   140011dc3:	push   rsi
   140011dc4:	jmp    0x140011e09
   140011dc6:	fidivr WORD PTR [rbp+0x5b]
   140011dc9:	rex.WRX
   140011dca:	rex.WRB (bad) 
   140011dcc:	cmp    ebp,edi
   140011dce:	or     BYTE PTR [rsi+0x7f],dl
   140011dd1:	repz pop rbp
   140011dd3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011dd4:	jle    0x140011dd0
   140011dd6:	mov    bh,0xc
   140011dd8:	xchg   edi,eax
   140011dd9:	rex.XB push r15
   140011ddb:	retf   
   140011ddc:	es test dh,ch
   140011ddf:	rex.X and esi,ecx
   140011de2:	lods   eax,DWORD PTR ds:[rsi]
   140011de3:	mov    edx,DWORD PTR [rax-0x1cb0451f]
   140011de9:	adc    eax,0x375d3550
   140011dee:	rex.X mov cl,0x98
   140011df1:	jmp    0x17035f6d7
   140011df6:	je     0x140011e33
   140011df8:	xchg   esp,eax
   140011df9:	xlat   BYTE PTR ds:[rbx]
   140011dfa:	lock add eax,DWORD PTR [rdx+rdi*8-0x3a47ea04]
   140011e02:	xchg   edi,eax
   140011e03:	(bad)  
   140011e04:	cli    
   140011e05:	pop    rdx
   140011e06:	push   rcx
   140011e07:	pop    rdi
   140011e08:	test   edx,edi
   140011e0a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011e0b:	(bad)  
   140011e0c:	cmp    esi,DWORD PTR [rdx+0x3218a7aa]
   140011e12:	add    ecx,edx
   140011e14:	(bad)  
   140011e15:	xchg   esi,eax
   140011e16:	rex.X mov DWORD PTR es:[rdi],edi
   140011e1a:	lock out dx,al
   140011e1c:	shl    BYTE PTR [rcx+rbp*1],cl
   140011e1f:	(bad)  
   140011e21:	lock mov cl,0x8d
   140011e24:	mov    ch,0xcd
   140011e26:	movabs eax,ds:0xdcc92a49ca81d9f5
   140011e2f:	push   rdx
   140011e30:	cdq    
   140011e31:	in     eax,dx
   140011e32:	fcomp  DWORD PTR [rcx+0x70]
   140011e35:	xchg   edx,eax
   140011e36:	xor    eax,0x12b8fe16
   140011e3b:	lods   al,BYTE PTR ds:[rsi]
   140011e3c:	outs   dx,BYTE PTR ds:[rsi]
   140011e3d:	rex.WXB jp 0x140011e87
   140011e40:	out    dx,al
   140011e41:	xchg   DWORD PTR [rdx+0x1c],edi
   140011e44:	rex.RB push r9
   140011e46:	mov    gs,WORD PTR [rbp+0x72]
   140011e49:	outs   dx,DWORD PTR ds:[rsi]
   140011e4a:	fnstsw WORD PTR [rbp-0x7c]
   140011e4d:	sub    bh,BYTE PTR [rcx]
   140011e4f:	jmp    0xdefae4d9
   140011e54:	scas   al,BYTE PTR es:[rdi]
   140011e55:	sbb    al,BYTE PTR [rax]
   140011e57:	test   cl,dh
   140011e59:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011e5a:	pop    rbp
   140011e5b:	scas   eax,DWORD PTR es:[rdi]
   140011e5c:	mov    cl,0x51
   140011e5e:	mov    edx,0x3cd7fb77
   140011e63:	movsxd eax,DWORD PTR [rdi]
   140011e65:	(bad)  
   140011e66:	adc    esi,eax
   140011e68:	cli    
   140011e69:	call   0x1a793ca3e
   140011e6e:	outs   dx,BYTE PTR ds:[rsi]
   140011e6f:	dec    dh
   140011e71:	rex.RX sub DWORD PTR [rdi],r15d
   140011e74:	cmc    
   140011e75:	cmc    
   140011e76:	jmp    0x140011e53
   140011e78:	xor    DWORD PTR [rdi+0x3f],ebp
   140011e7b:	(bad)  
   140011e7c:	(bad)  
   140011e7d:	imul   eax,DWORD PTR [rsi],0xffffffb5
   140011e80:	imul   rbp,QWORD PTR [rbx-0xe4fff50],0xffffffffffffffc1
   140011e88:	pop    rdi
   140011e89:	mov    ch,BYTE PTR [rbx-0x2a]
   140011e8c:	test   DWORD PTR [rbx],eax
   140011e8e:	add    DWORD PTR [rbp-0x39189525],esi
   140011e94:	rex.RXB (bad) 
   140011e96:	jae    0x140011ed1
   140011e98:	jl     0x140011e89
   140011e9a:	(bad)  
   140011e9b:	and    bh,BYTE PTR [rcx]
   140011e9d:	test   DWORD PTR [rax+0x52],0x3108c815
   140011ea4:	std    
   140011ea5:	icebp  
   140011ea6:	(bad)  
   140011ea7:	je     0x140011e8c
   140011ea9:	and    dh,BYTE PTR [rbx+rsi*2+0x15]
   140011ead:	(bad)  
   140011eae:	pop    QWORD PTR [rcx-0x3f]
   140011eb1:	(bad)  
   140011eb2:	outs   dx,DWORD PTR ds:[rsi]
   140011eb3:	cmp    al,0x4
   140011eb5:	adc    BYTE PTR [rsi],ah
   140011eb7:	rex.WX push rsp
   140011eb9:	rex.WR sbb r11b,BYTE PTR [rdi+rdi*8-0x2e907de6]
   140011ec1:	xor    ebp,DWORD PTR [rdx-0x15]
   140011ec4:	hlt    
   140011ec5:	movabs ds:0xd26845ff88dfe09,rax
   140011ecf:	xchg   BYTE PTR [rsi+0x64],al
   140011ed2:	(bad)  
   140011ed3:	mov    ecx,0xcc6ea47e
   140011ed8:	mov    esp,DWORD PTR [rdi+rdi*2+0x792f1bf8]
   140011edf:	mov    ebp,0x9be8bdcc
   140011ee4:	int    0xda
   140011ee6:	out    0xd0,al
   140011ee8:	fdivrp st(7),st
   140011eea:	loopne 0x140011e9d
   140011eec:	xchg   ecx,eax
   140011eed:	(bad)  
   140011eee:	adc    DWORD PTR [rip+0xffffffff93d64c33],eax        # 0xd3d76b27
   140011ef4:	fdivrp st(2),st
   140011ef6:	mov    ?,WORD PTR [rcx+rcx*8]
   140011ef9:	cli    
   140011efa:	xor    BYTE PTR ss:[rdi-0x78],bh
   140011efe:	or     DWORD PTR [rdi-0xb494bb3],esi
   140011f04:	(bad)  
   140011f06:	mov    al,0x68
   140011f08:	rex.W clc 
   140011f0a:	out    dx,al
   140011f0b:	and    ebp,esi
   140011f0d:	pushf  
   140011f0e:	clc    
   140011f0f:	mov    eax,0xbb4c39a5
   140011f14:	(bad)  
   140011f15:	data16 outs dx,BYTE PTR ds:[rsi]
   140011f17:	icebp  
   140011f18:	xchg   ebp,eax
   140011f19:	xor    ebx,DWORD PTR [rbx+0x2dcb9f27]
   140011f1f:	scas   al,BYTE PTR es:[rdi]
   140011f20:	adc    eax,0x8d59d35d
   140011f25:	movabs eax,ds:0xf9a3b6a803ed73ee
   140011f2e:	ja     0x140011ee4
   140011f30:	mov    ebp,0x1a9e6c25
   140011f35:	and    eax,0x2700671f
   140011f3a:	fdivp  st(0),st
   140011f3c:	push   rbx
   140011f3d:	nop
   140011f3e:	(bad)  
   140011f3f:	cmp    DWORD PTR [rdi+riz*1],eax
   140011f42:	xchg   esi,eax
   140011f43:	add    edx,DWORD PTR [rbx+0x2d620a66]
   140011f49:	cmp    eax,0x6122ae15
   140011f4e:	cmp    eax,0xb5382581
   140011f53:	or     BYTE PTR [rbx+rsi*8],al
   140011f56:	in     al,0x17
   140011f58:	shl    cl,cl
   140011f5a:	pop    rdi
   140011f5b:	cld    
   140011f5c:	jb     0x140011f51
   140011f5e:	jge    0x140011ee7
   140011f60:	fdivr  DWORD PTR [rdx+rbx*2-0x9f5e4b4]
   140011f67:	icebp  
   140011f68:	iret   
   140011f69:	(bad)  
   140011f6a:	cmc    
   140011f6b:	xlat   BYTE PTR ds:[rbx]
   140011f6c:	jle    0x140011f46
   140011f6e:	shl    bh,cl
   140011f70:	ficom  WORD PTR [rdi+0x549f3b04]
   140011f76:	popf   
   140011f77:	mov    edx,0xa5d0f9f
   140011f7c:	out    dx,eax
   140011f7d:	(bad)  
   140011f7e:	and    eax,0xf5a6d0b7
   140011f83:	leave  
   140011f84:	cmp    al,0x41
   140011f86:	(bad)  
   140011f87:	(bad)  
   140011f88:	imul   edx,DWORD PTR [rdx-0x68],0x1bd65874
   140011f8f:	(bad)  
   140011f90:	cmp    ebp,DWORD PTR [rax-0x452c3b1f]
   140011f96:	(bad)  
   140011f97:	sbb    esi,ebp
   140011f99:	adc    ah,BYTE PTR [rdx-0x3b]
   140011f9c:	and    bh,BYTE PTR [rdx-0x2a]
   140011f9f:	jo     0x140011f22
   140011fa1:	rcl    al,0x84
   140011fa4:	data16 lahf 
   140011fa6:	rex.R popf 
   140011fa8:	(bad)  
   140011fa9:	sub    DWORD PTR [rbp-0x37],ecx
   140011fac:	(bad)  
   140011fad:	fistp  WORD PTR [rdi+0x44]
   140011fb0:	out    dx,eax
   140011fb1:	popf   
   140011fb2:	inc    DWORD PTR [rdi-0x10ebd8]
   140011fb8:	(bad)  
   140011fb9:	sub    ebx,0xffffffa3
   140011fbc:	mov    esp,0x304ab8f0
   140011fc1:	imul   ecx,DWORD PTR [rdi+0x7a],0xdef2bb4b
   140011fc8:	repnz rex.WX ror QWORD PTR [rcx+0x2a],0x8e
   140011fce:	leave  
   140011fcf:	sbb    ecx,ebp
   140011fd1:	(bad)  
   140011fd2:	cs ffreep st(1)
   140011fd5:	cld    
   140011fd6:	fneni(8087 only) 
   140011fd8:	fmul   QWORD PTR [rcx+0x7c]
   140011fdb:	movabs ds:0x510cfcba673f33e6,al
   140011fe4:	push   rcx
   140011fe5:	loopne 0x140011fc3
   140011fe7:	rex.RX mov ?,WORD PTR [rbx-0x7a39c695]
   140011fee:	pop    rsp
   140011fef:	outs   dx,BYTE PTR ds:[rsi]
   140011ff0:	imul   eax,ecx,0x555d1de7
   140011ff6:	add    al,dl
   140011ff8:	(bad)  
   140011ff9:	pop    rbp
   140011ffa:	push   0xffffffffffffffad
   140011ffc:	gs rex.WRB (bad) 
   140011fff:	rcl    DWORD PTR [rdx-0x1f],cl
   140012002:	sar    dl,1
   140012004:	outs   dx,BYTE PTR ds:[rsi]
   140012005:	(bad)  
   140012006:	shl    BYTE PTR [rbx],0x5
   140012009:	lahf   
   14001200a:	cmp    DWORD PTR [rbx],esi
   14001200c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001200d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001200e:	xchg   ebx,eax
   14001200f:	and    al,0xa3
   140012011:	(bad)  
   140012012:	fdivp  st(4),st
   140012014:	outs   dx,BYTE PTR ds:[rsi]
   140012015:	add    BYTE PTR [rbp-0x64bab52d],dh
   14001201b:	(bad)  
   14001201c:	xor    ch,bh
   14001201e:	(bad)
   140012022:	imul   ebx,DWORD PTR [rbx-0x4c],0xe13332f9
   140012029:	cmp    al,0x7b
   14001202b:	iret   
   14001202c:	scas   eax,DWORD PTR es:[rdi]
   14001202d:	shr    al,cl
   14001202f:	(bad)  
   140012030:	(bad)  
   140012031:	cdq    
   140012032:	add    al,0x1
   140012034:	pop    rbx
   140012035:	rex.WRX test bpl,r12b
   140012038:	in     al,0xe2
   14001203a:	imul   ebp,DWORD PTR [rdi+rdi*4-0x2e359811],0x916ffbff
   140012045:	pop    rsp
   140012046:	cmp    ch,BYTE PTR [rcx-0x3e]
   140012049:	je     0x1400120a8
   14001204b:	xchg   edi,eax
   14001204c:	enter  0xe5b3,0xd5
   140012050:	std    
   140012051:	xor    eax,0x920d70e8
   140012056:	(bad)  
   140012057:	pop    rsp
   140012058:	mov    ch,0x1e
   14001205a:	xchg   ecx,eax
   14001205b:	jp     0x140012027
   14001205d:	out    dx,al
   14001205e:	and    al,0x27
   140012060:	and    BYTE PTR [rax],cl
   140012062:	(bad)  
   140012063:	(bad)  
   140012064:	add    BYTE PTR [rbp-0x5b6ac1b7],0xd7
   14001206b:	(bad)  
   14001206c:	rcl    edi,cl
   14001206e:	push   rbp
   14001206f:	lea    ebp,[rdx+0x6]
   140012072:	jo     0x140012043
   140012074:	sbb    eax,0x55750322
   140012079:	mov    ebp,0x6f83101a
   14001207e:	and    al,0xfe
   140012080:	mov    ah,0xa5
   140012082:	cld    
   140012083:	(bad)  
   140012084:	cli    
   140012085:	or     al,0xe2
   140012087:	je     0x1400120c3
   140012089:	test   DWORD PTR [rdx-0x1],eax
   14001208c:	leave  
   14001208d:	rex.WRXB (bad) 
   14001208f:	leave  
   140012090:	fcom   QWORD PTR [rdx-0x61b1387]
   140012096:	icebp  
   140012097:	jrcxz  0x140012100
   140012099:	sahf   
   14001209a:	jbe    0x1400120ef
   14001209c:	dec    BYTE PTR [rax]
   14001209e:	loopne 0x1400120c4
   1400120a0:	shl    DWORD PTR [rax+rsi*4+0x58],1
   1400120a4:	div    BYTE PTR [rdi-0x12]
   1400120a7:	retf   0xcd39
   1400120aa:	rex.R popf 
   1400120ac:	adc    eax,DWORD PTR [rdx-0x1d]
   1400120af:	not    ch
   1400120b1:	outs   dx,DWORD PTR ds:[rsi]
   1400120b2:	and    ebx,0x356687cb
   1400120b8:	mov    al,0x76
   1400120bb:	test   eax,0xf9f5fccd
   1400120c0:	xchg   edi,eax
   1400120c1:	psraw  mm6,QWORD PTR [rsi]
   1400120c4:	(bad)  
   1400120c5:	pushf  
   1400120c6:	mov    dh,0xf7
   1400120c8:	xor    eax,0xc54bcdcf
   1400120cd:	test   eax,0x463631d5
   1400120d2:	xlat   BYTE PTR ds:[rbx]
   1400120d3:	adc    eax,0x957457df
   1400120d8:	repnz add dl,ah
   1400120db:	sbb    BYTE PTR [rbx+rdx*1+0x74],0xe2
   1400120e0:	(bad)  
   1400120e1:	jle    0x140012099
   1400120e3:	xchg   ecx,eax
   1400120e4:	cmc    
   1400120e5:	jo     0x1400120d5
   1400120e7:	jrcxz  0x1400120d4
   1400120e9:	cmp    BYTE PTR [rbp-0x6d84b845],bh
   1400120ef:	rex.XB scas eax,DWORD PTR es:[rdi]
   1400120f1:	in     al,0xb3
   1400120f3:	(bad)  
   1400120f4:	jnp    0x140012111
   1400120f6:	idiv   BYTE PTR [rbp-0xf]
   1400120f9:	imul   ebx
   1400120fb:	or     eax,DWORD PTR [rsi+0x1e]
   1400120fe:	outs   dx,DWORD PTR ds:[rsi]
   1400120ff:	xlat   BYTE PTR ds:[rbx]
   140012100:	xchg   edx,eax
   140012101:	push   rsi
   140012102:	cld    
   140012103:	cmp    ebx,DWORD PTR [rbx+rdx*2]
   140012106:	ins    DWORD PTR es:[rdi],dx
   140012107:	jae    0x140012124
   140012109:	mov    edx,ebp
   14001210b:	mov    al,BYTE PTR [rdx-0x1b]
   14001210e:	sti    
   14001210f:	jle    0x1400120a3
   140012111:	cs ds je 0x140012124
   140012115:	xchg   esi,eax
   140012116:	mov    edi,0xaf047ff7
   14001211b:	in     al,dx
   14001211c:	scas   eax,DWORD PTR es:[rdi]
   14001211d:	out    dx,al
   14001211e:	scas   al,BYTE PTR es:[rdi]
   14001211f:	ss (bad) 
   140012121:	and    DWORD PTR [rbp-0x14f38264],eax
   140012127:	idiv   esi
   140012129:	rex.B cdq 
   14001212b:	cmp    al,0xfe
   14001212d:	push   rdi
   14001212e:	or     DWORD PTR [rbx+0x54e44a26],ecx
   140012134:	jp     0x140012191
   140012136:	mov    edx,0xc72bdcc
   14001213b:	sub    eax,0x66d0b772
   140012140:	and    eax,0x466aa5f1
   140012145:	lods   al,BYTE PTR ds:[rsi]
   140012146:	mov    al,BYTE PTR [rdi-0x1754aa8a]
   14001214c:	sbb    BYTE PTR [rax+rbx*2+0x33],0x76
   140012151:	outs   dx,BYTE PTR ds:[rsi]
   140012152:	(bad)  
   140012153:	int3   
   140012154:	stos   DWORD PTR es:[rdi],eax
   140012155:	adc    DWORD PTR [rbx],edx
   140012157:	(bad)  
   140012158:	xlat   BYTE PTR ds:[rbx]
   140012159:	or     edi,esp
   14001215b:	push   rsi
   14001215c:	mov    ebp,0xed6ff14
   140012161:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012162:	lock addr32 push rsp
   140012165:	imul   DWORD PTR [rcx-0x2d713b09]
   14001216b:	push   rax
   14001216c:	push   0xffffffffffffffad
   14001216e:	cmp    al,bl
   140012170:	sub    DWORD PTR [rbx],0xffffffbf
   140012173:	(bad)  
   140012174:	int    0x32
   140012176:	ja     0x14001216f
   140012178:	ja     0x1400121a1
   14001217a:	movabs ds:0x55eb03e4f93fd0bc,eax
   140012183:	sbb    ebx,ecx
   140012185:	xchg   ebp,eax
   140012186:	cli    
   140012187:	out    dx,al
   140012188:	out    dx,eax
   140012189:	fdiv   DWORD PTR [rip+0xffffffff9673064e]        # 0xd67427dd
   14001218f:	rex.WR jb 0x14001212b
   140012192:	(bad)  
   140012193:	lahf   
   140012194:	fsub   QWORD PTR [rsi+rdi*4-0x37]
   140012198:	(bad)  
   140012199:	pop    rsi
   14001219a:	sahf   
   14001219b:	movabs ds:0xddd793009a6c4976,al
   1400121a4:	(bad)  
   1400121a5:	mov    ch,0xfa
   1400121a7:	test   al,0xcd
   1400121a9:	cld    
   1400121aa:	jmp    0x14001214f
   1400121ac:	adc    cl,bh
   1400121ae:	ins    BYTE PTR es:[rdi],dx
   1400121af:	xchg   ebp,eax
   1400121b0:	xchg   ebx,eax
   1400121b1:	xor    esp,DWORD PTR [rdi]
   1400121b3:	scas   eax,DWORD PTR es:[rdi]
   1400121b4:	and    edi,DWORD PTR [rdx+0x2c00f516]
   1400121ba:	mov    QWORD PTR [r10],r8
   1400121bd:	rex.R jrcxz 0x14001219f
   1400121c0:	int    0x77
   1400121c2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400121c3:	imul   ecx,ecx,0x8788441
   1400121c9:	adc    eax,0x2f17ec25
   1400121ce:	enter  0xebd6,0xf6
   1400121d2:	cdq    
   1400121d3:	test   DWORD PTR [rbx+0x58d7ffaf],ecx
   1400121d9:	cmp    DWORD PTR [rcx+0x3f],edi
   1400121dc:	mov    dl,0xf3
   1400121de:	(bad)  
   1400121df:	cli    
   1400121e0:	mov    ebp,0x8e745bf5
   1400121e5:	sar    DWORD PTR [rdx-0x10],0xd7
   1400121e9:	test   eax,0xe9bd1c3
   1400121ee:	cmp    cl,BYTE PTR [rdx+0x7c390077]
   1400121f4:	and    BYTE PTR [rdi+rax*2-0x220f3e11],ah
   1400121fb:	lahf   
   1400121fc:	sar    eax,0xe0
   1400121ff:	sub    eax,DWORD PTR [rax+0x1795071d]
   140012205:	push   rsi
   140012206:	adc    al,0x6b
   140012208:	iret   
   140012209:	push   0xffffffffa209e17a
   14001220e:	jl     0x1400121d8
   140012210:	rex.RX and eax,0xa59b8a81
   140012216:	push   rdi
   140012217:	mov    WORD PTR [rbp+0x32],?
   14001221a:	pop    QWORD PTR [rip+0xffffffffe7abadc4]        # 0x127accfe4
   140012220:	xchg   esi,eax
   140012221:	rcl    BYTE PTR [rsi-0x39],cl
   140012224:	cld    
   140012225:	xor    DWORD PTR [rdi],ecx
   140012227:	imul   eax,DWORD PTR [rsi+rdi*2],0xb55f0a91
   14001222e:	int    0x7b
   140012230:	in     al,dx
   140012231:	sub    ebp,edi
   140012233:	jge    0x14001226d
   140012235:	sub    eax,0xfe866676
   14001223a:	(bad)  
   14001223b:	sbb    dh,bl
   14001223d:	adc    eax,0xf95c12f4
   140012242:	in     eax,0xaa
   140012244:	inc    cl
   140012246:	test   BYTE PTR [rax-0x15],ch
   140012249:	rex.WRX adc BYTE PTR [rdx-0x224e5846],r9b
   140012250:	and    eax,DWORD PTR [rbp+0x1c7780aa]
   140012256:	rex.R test BYTE PTR [rsi-0x5af55f01],0xf7
   14001225e:	(bad)  
   140012260:	test   ebp,edx
   140012262:	xchg   ecx,eax
   140012263:	lahf   
   140012264:	out    dx,eax
   140012265:	scas   eax,DWORD PTR es:[rdi]
   140012266:	(bad)  
   140012267:	push   0xffffffffffffffb2
   140012269:	sahf   
   14001226a:	in     eax,dx
   14001226b:	(bad)  
   14001226c:	out    dx,eax
   14001226d:	(bad)  
   14001226e:	jnp    0x14001223b
   140012270:	sub    edi,DWORD PTR [rsi]
   140012272:	jmp    0x18d74a11e
   140012277:	ins    DWORD PTR es:[rdi],dx
   140012278:	scas   eax,DWORD PTR es:[rdi]
   140012279:	pop    rbx
   14001227a:	int    0x7e
   14001227c:	cs or  al,0x2b
   14001227f:	push   rbx
   140012280:	fcmovu st,st(6)
   140012282:	in     al,dx
   140012283:	mov    cl,0x6d
   140012285:	pop    rbp
   140012286:	push   0xffffffffffffffea
   140012288:	std    
   140012289:	or     edx,DWORD PTR [rcx-0x64]
   14001228c:	pop    rbx
   14001228d:	iret   
   14001228e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001228f:	in     al,dx
   140012290:	mov    ebp,0x22ae87e
   140012295:	rex cmp esp,DWORD PTR [rsi+0x55]
   140012299:	mov    ebp,0xb29a5510
   14001229e:	or     al,0xf4
   1400122a0:	adc    eax,0xdbe62040
   1400122a5:	mov    ch,0x31
   1400122a7:	in     al,dx
   1400122a8:	push   rdi
   1400122a9:	(bad)  
   1400122aa:	push   rsp
   1400122ab:	out    dx,al
   1400122ac:	pop    rax
   1400122ad:	rex.WB clc 
   1400122af:	icebp  
   1400122b0:	out    dx,eax
   1400122b1:	std    
   1400122b2:	adc    eax,0xdfbdf8bc
   1400122b7:	add    ecx,esi
   1400122b9:	(bad)  
   1400122ba:	sbb    dh,bh
   1400122bc:	cmc    
   1400122bd:	movabs ds:0xaeb7dbbfb9670ab2,eax
   1400122c6:	mov    ecx,0x71951ac
   1400122cb:	and    dh,0x43
   1400122ce:	fs (bad) 
   1400122d0:	jg     0x1400122d8
   1400122d2:	cmp    BYTE PTR [rsi+0xaee2c14],ah
   1400122d8:	xor    ebp,DWORD PTR [rdx+0x7053b680]
   1400122de:	ret    0x7dbc
   1400122e1:	clc    
   1400122e2:	jnp    0x14001228c
   1400122e4:	or     al,BYTE PTR [rdx+0x6d]
   1400122e7:	ret    0xba58
   1400122ea:	push   rdi
   1400122eb:	mov    bh,0xf3
   1400122ed:	(bad)  
   1400122ee:	xor    al,0x55
   1400122f0:	mov    ebp,fs
   1400122f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400122f3:	jno    0x140012368
   1400122f5:	pop    rbx
   1400122f6:	shl    BYTE PTR [rax-0x5e],1
   1400122f9:	repz rcl DWORD PTR [rsi+rdx*8-0x2ad4ca2b],1
   140012301:	sub    BYTE PTR [rdx],0xd5
   140012304:	sahf   
   140012305:	pop    rdx
   140012306:	mov    DWORD PTR [rsi-0x62876b2],0x1004f86b
   140012310:	imul   edx,DWORD PTR [rcx],0xaca831ae
   140012316:	(bad)  
   140012317:	(bad)  
   140012318:	cmp    al,0xa
   14001231a:	rex.X
   14001231b:	repnz movabs ds:0xfa3f9f33249a5dbf,eax
   140012325:	in     al,0xd6
   140012327:	adc    esp,DWORD PTR [rdi-0x32]
   14001232a:	mov    ebx,0x6ac4df72
   14001232f:	xchg   edx,eax
   140012330:	rex.R mov dl,0xc5
   140012333:	xchg   ebp,eax
   140012334:	movabs ds:0x4c4ecf59ce776bbf,al
   14001233d:	imul   ebp
   14001233f:	(bad)  
   140012340:	mov    esi,0xf35d3d57
   140012345:	(bad)  
   140012346:	ins    BYTE PTR es:[rdi],dx
   140012347:	(bad)  
   140012348:	or     BYTE PTR [rdx-0x105df97b],ch
   14001234e:	enter  0x980a,0xb8
   140012352:	push   rdi
   140012353:	(bad)  
   140012354:	ins    DWORD PTR es:[rdi],dx
   140012355:	rex.RXB cmc 
   140012357:	pxor   mm5,QWORD PTR [rbx-0x7e]
   14001235b:	scas   al,BYTE PTR es:[rdi]
   14001235c:	push   rax
   14001235d:	stos   DWORD PTR es:[rdi],eax
   14001235e:	in     al,0xf9
   140012360:	rex.RX push rdi
   140012362:	fisttp DWORD PTR [rcx]
   140012364:	pop    rax
   140012365:	stc    
   140012366:	mov    ah,0x0
   140012368:	rcl    ch,0x6f
   14001236b:	or     esi,DWORD PTR [rsi-0x203248a0]
   140012371:	rex.RB or eax,0xf03a2c95
   140012377:	mov    DWORD PTR [rip+0x452333d5],esi        # 0x185245752
   14001237d:	outs   dx,DWORD PTR ds:[rsi]
   14001237e:	jno    0x140012387
   140012380:	rex.WRX jl 0x140012372
   140012383:	jg     0x14001230f
   140012385:	mov    ecx,esi
   140012387:	rex.RXB jmp QWORD PTR [r11-0x7d9d37a2]
   14001238e:	mul    DWORD PTR [rbx]
   140012390:	cmp    eax,0xd5fcc5bb
   140012395:	sub    BYTE PTR [rdx+0x4c],dl
   140012398:	(bad)  
   140012399:	xchg   BYTE PTR [rdx+0xa9c42fa],ch
   14001239f:	test   al,0xf5
   1400123a1:	push   rbp
   1400123a2:	jp     0x140012360
   1400123a4:	(bad)  
   1400123a5:	mov    bh,0x65
   1400123a7:	sar    DWORD PTR [rbx-0x723d77b1],cl
   1400123ad:	push   0xffffffffc98ace8f
   1400123b2:	sub    esi,DWORD PTR [rcx+rax*2+0x24]
   1400123b6:	lods   eax,DWORD PTR ds:[rsi]
   1400123b7:	sub    edx,ebp
   1400123b9:	pushf  
   1400123ba:	stos   BYTE PTR es:[rdi],al
   1400123bb:	fild   WORD PTR [rcx+0x6a]
   1400123be:	xlat   BYTE PTR ds:[rbx]
   1400123bf:	rol    DWORD PTR [rax+0x6350e1a0],1
   1400123c5:	adc    dh,0xf5
   1400123c8:	jmp    FWORD PTR [rax+0x4cd2cf1]
   1400123ce:	test   al,0xe0
   1400123d0:	pop    rdi
   1400123d1:	push   rcx
   1400123d2:	fist   WORD PTR [rdx+rsi*2+0x61]
   1400123d6:	iret   
   1400123d7:	shl    BYTE PTR [rax-0xfbf00a6],1
   1400123dd:	xchg   ebx,eax
   1400123de:	cwde   
   1400123df:	(bad)  
   1400123e0:	cli    
   1400123e1:	rex.RB
   1400123e2:	fwait
   1400123e3:	out    dx,al
   1400123e4:	mov    ecx,0xb8bb9cd1
   1400123e9:	push   rsi
   1400123ea:	jle    0x1400123dc
   1400123ec:	xor    ebx,DWORD PTR [rdi-0x26]
   1400123ef:	or     al,0x4e
   1400123f1:	(bad)  
   1400123f2:	ss rex.RX xchg ebx,eax
   1400123f5:	mov    ecx,0xbcb072a5
   1400123fa:	sub    ecx,DWORD PTR [rdi+0x7a]
   1400123fd:	add    ecx,ebx
   1400123ff:	pop    rsi
   140012400:	cmc    
   140012401:	scas   eax,DWORD PTR es:[rdi]
   140012402:	cmp    eax,0x4f7de198
   140012407:	jns    0x1400123f8
   140012409:	iret   
   14001240a:	cmp    ecx,0x9c1e0035
   140012410:	jmp    0x10faef226
   140012415:	(bad)  
   140012417:	jo     0x1400123f0
   140012419:	(bad)  
   14001241a:	push   rdi
   14001241b:	cmp    ecx,0x35
   14001241e:	cli    
   14001241f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012420:	sub    dl,BYTE PTR [rbx-0x594146e1]
   140012426:	adc    bl,BYTE PTR [rbp+0x65]
   140012429:	add    BYTE PTR [rax],ah
   14001242b:	push   0xffffffffffffffdf
   14001242d:	push   rbx
   14001242e:	cmp    esp,esi
   140012430:	pop    rsi
   140012431:	jne    0x1400123de
   140012433:	mov    ch,bl
   140012435:	add    esp,DWORD PTR [rcx-0xf83eb13]
   14001243b:	movabs ds:0x33a72f439850b562,al
   140012444:	outs   dx,DWORD PTR ds:[rsi]
   140012445:	(bad)  
   140012446:	pop    rcx
   140012447:	pop    rbx
   140012448:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012449:	mov    bh,0x5
   14001244b:	(bad)  
   14001244c:	or     eax,0xdedfb4ba
   140012451:	mov    eax,0x6c748779
   140012456:	xor    ebp,DWORD PTR [rax-0x76657585]
   14001245c:	push   0xffffffffffffffa9
   14001245e:	mov    WORD PTR [rsi+0x75bea392],ss
   140012464:	push   rcx
   140012465:	enter  0xe271,0x7a
   140012469:	sbb    eax,0x680fed8c
   14001246e:	xchg   esp,eax
   14001246f:	(bad)  
   140012470:	xlat   BYTE PTR ds:[rbx]
   140012471:	sbb    dh,BYTE PTR [rip+0xffffffffd4dd12e3]        # 0x114de375a
   140012477:	mov    edx,0xed8cfc4c
   14001247c:	add    al,0xa7
   14001247e:	jbe    0x140012462
   140012480:	push   rbx
   140012481:	rex.XB jnp 0x14001240c
   140012484:	xor    eax,0x5fef288b
   140012489:	sbb    ecx,DWORD PTR [rdi+rbx*1+0x3f]
   14001248d:	xchg   esi,eax
   14001248e:	jmp    0x1400124cf
   140012490:	repz fidiv DWORD PTR [rdi+0x6f55ff49]
   140012497:	out    0x71,al
   140012499:	pop    rsi
   14001249a:	call   0xfef1a20e
   14001249f:	rex.WXB stos BYTE PTR es:[rdi],al
   1400124a1:	(bad)  
   1400124a2:	mov    dl,BYTE PTR [rdx+rbx*1-0x319f365d]
   1400124a9:	(bad)  
   1400124aa:	in     eax,dx
   1400124ab:	fdivr  DWORD PTR [rip+0x4a9696ce]        # 0x18a97bb7f
   1400124b1:	out    0xf5,eax
   1400124b3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400124b4:	cli    
   1400124b5:	pop    rbp
   1400124b6:	test   DWORD PTR [rsi],esi
   1400124b8:	rex.WRB jnp 0x14001246a
   1400124bb:	fidiv  DWORD PTR [rcx-0x34471453]
   1400124c1:	sbb    eax,0xf54deda0
   1400124c6:	mov    al,0xbb
   1400124c8:	(bad)  
   1400124ca:	and    BYTE PTR [rbp-0x7],bl
   1400124cd:	(bad)  
   1400124ce:	stos   BYTE PTR es:[rdi],al
   1400124cf:	scas   al,BYTE PTR es:[rdi]
   1400124d0:	scas   al,BYTE PTR es:[rdi]
   1400124d1:	xchg   BYTE PTR [rcx-0x4d],ch
   1400124d4:	ins    DWORD PTR es:[rdi],dx
   1400124d5:	add    BYTE PTR [rax],al
   1400124d7:	and    BYTE PTR [rax],al
   1400124d9:	rex.WB
   1400124da:	rex.R
   1400124db:	push   r12
   1400124dd:	rex.X sti 
   1400124df:	movabs ds:0x2a6764d36800332a,eax
   1400124e8:	push   rdi
   1400124e9:	out    dx,eax
   1400124ea:	rex.RXB movsxd r11d,DWORD PTR [r11-0x59104d90]
   1400124f1:	add    eax,0xa5341b4
   1400124f7:	(bad)
   1400124fb:	push   rdx
   1400124fc:	add    DWORD PTR [rbp-0x27],edi
   1400124ff:	pop    rbx
   140012500:	clc    
   140012501:	ret    0xffdd
   140012504:	cmp    al,0x8f
   140012506:	montmul (bad)
   140012507:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012508:	(bad)  
   140012509:	xchg   esp,eax
   14001250a:	rcl    dh,0x75
   14001250d:	loop   0x14001251f
   14001250f:	pop    rsp
   140012510:	sti    
   140012511:	(bad)  
   140012512:	shl    DWORD PTR [rsi+0x2d1ddf2a],1
   140012518:	imul   BYTE PTR [rax+0x30]
   14001251b:	movabs ds:0xdb1f1e6962e9b356,al
   140012524:	or     DWORD PTR ss:[rdx],eax
   140012527:	(bad)  
   140012528:	test   ch,al
   14001252a:	shl    BYTE PTR [rdx+0x4f],cl
   14001252d:	cmp    eax,0xbd556a88
   140012532:	add    eax,0x100a213e
   140012537:	cwde   
   140012538:	mov    ecx,0xf8312f8d
   14001253d:	test   BYTE PTR [rax],bh
   14001253f:	cmp    BYTE PTR [rbx-0x4f94cb92],0x2
   140012546:	retf   0x7b16
   140012549:	je     0x140012540
   14001254b:	add    eax,0x5bd57e00
   140012550:	gs lock std 
   140012553:	jmp    FWORD PTR [rbx]
   140012555:	lea    ecx,[rbx-0x7c0481be]
   14001255b:	neg    DWORD PTR [rbp+0x1a]
   14001255e:	lea    ebx,[rbp-0x5f]
   140012561:	pop    rdi
   140012562:	and    dl,dl
   140012564:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012565:	(bad)  
   140012566:	sub    BYTE PTR [rdi],al
   140012568:	cmp    esi,esi
   14001256a:	lea    edi,[rbx+0x2b]
   14001256d:	cmp    ecx,DWORD PTR [rbx]
   14001256f:	rex.WRX sti 
   140012571:	(bad)  
   140012572:	(bad)  
   140012573:	rex.WX movabs al,ds:0xa5d9dd778572fdd8
   14001257d:	(bad)  [rdi]
   14001257f:	jg     0x1400125f1
   140012581:	push   rdi
   140012582:	(bad)  
   140012583:	sar    BYTE PTR [rdx],1
   140012585:	hlt    
   140012586:	cmp    BYTE PTR [rcx],bl
   140012588:	icebp  
   140012589:	test   al,0x41
   14001258b:	jb     0x140012608
   14001258d:	imul   edi
   14001258f:	cmp    bl,BYTE PTR [rdi+0x75]
   140012592:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012593:	add    DWORD PTR [rsi+rdx*4-0x2c],ebx
   140012597:	mov    ecx,0xb7e20d7a
   14001259c:	shr    al,cl
   14001259e:	lock retf 
   1400125a0:	test   QWORD PTR [r9+0x20],rbp
   1400125a4:	sar    BYTE PTR [rsp+rdx*8-0x2b075196],1
   1400125ab:	pop    rcx
   1400125ac:	sub    DWORD PTR [rax-0x20c40d80],ecx
   1400125b2:	xchg   ebp,eax
   1400125b3:	ins    BYTE PTR es:[rdi],dx
   1400125b4:	mov    ebp,0x8c5d7be2
   1400125b9:	rex.RX movabs ds:0xb2de41aa13e3aee5,al
   1400125c3:	test   eax,0x8e8e8663
   1400125c8:	pop    rbx
   1400125ca:	push   0xffffffffa5b5a313
   1400125cf:	adc    eax,0x95f363b4
   1400125d4:	test   BYTE PTR [rsi+0x67311a6e],ch
   1400125da:	add    BYTE PTR [rsi+0x18aaf896],cl
   1400125e0:	movabs ds:0x536aebd0ed7172b1,eax
   1400125e9:	xchg   ebp,eax
   1400125ea:	lock adc al,0x49
   1400125ed:	clc    
   1400125ee:	jp     0x14001259d
   1400125f0:	(bad)  
   1400125f1:	mov    ah,0x6
   1400125f3:	jge    0x1400125c0
   1400125f5:	(bad)  
   1400125f6:	jrcxz  0x1400125d3
   1400125f8:	pop    rax
   1400125f9:	fnstsw WORD PTR [rax]
   1400125fb:	nop
   1400125fc:	out    0x1e,eax
   1400125fe:	jae    0x1400125e0
   140012600:	jbe    0x1400125f6
   140012602:	(bad)  
   140012603:	fcos   
   140012605:	scas   al,BYTE PTR es:[rdi]
   140012606:	or     ah,al
   140012608:	and    esi,edi
   14001260a:	jge    0x140012671
   14001260c:	jrcxz  0x1400125da
   14001260e:	test   ebp,edx
   140012610:	push   rdx
   140012611:	add    DWORD PTR [rax],edx
   140012613:	xchg   ebx,eax
   140012614:	(bad)  
   140012615:	mov    ah,0x6f
   140012617:	(bad)  
   140012618:	retf   
   140012619:	jnp    0x14001260d
   14001261b:	fimul  WORD PTR [rsi-0x4b646a3]
   140012621:	loop   0x140012615
   140012623:	and    dl,bl
   140012625:	out    dx,eax
   140012626:	ins    DWORD PTR es:[rdi],dx
   140012627:	repnz (bad) 
   140012629:	mov    bh,0x6f
   14001262b:	xor    eax,0x5c0d7c79
   140012630:	(bad)  [rcx-0x475f271a]
   140012636:	stc    
   140012637:	int    0xc7
   140012639:	mov    WORD PTR [rsi],?
   14001263b:	ret    
   14001263c:	rex.X
   14001263d:	lock (bad) 
   14001263f:	(bad)
   140012642:	(bad)
   140012645:	div    ebx
   140012647:	lea    edx,[rbp-0x17]
   14001264a:	(bad)  
   14001264b:	pop    rsp
   14001264c:	rex.WRXB je 0x140012604
   14001264f:	xor    eax,DWORD PTR [rcx]
   140012651:	mov    ebp,0x94d518f2
   140012656:	mov    ebp,0x4e5a64c
   14001265b:	movabs ds:0x55cd59862399095f,eax
   140012664:	(bad)  
   140012665:	mov    eax,0x6004aba0
   14001266a:	repz int 0xff
   14001266d:	fsubrp st(6),st
   14001266f:	(bad)  
   140012670:	mov    esp,0x7cce6cac
   140012675:	jmp    0x165259032
   14001267a:	(bad)  
   14001267b:	popf   
   14001267c:	sbb    dh,BYTE PTR gs:[rcx]
   14001267f:	jo     0x140012678
   140012681:	jns    0x140012654
   140012683:	xor    esi,DWORD PTR [rip+0xffffffff9486bf25]        # 0xd487e5ae
   140012689:	xchg   esp,eax
   14001268a:	mov    eax,0xa96a2708
   14001268f:	lea    esp,[rsi-0x4b4d5711]
   140012695:	and    esp,esi
   140012697:	lods   eax,DWORD PTR ds:[rsi]
   140012698:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012699:	sti    
   14001269a:	rex.RX out 0x47,al
   14001269d:	or     edx,DWORD PTR [rax]
   14001269f:	loop   0x140012657
   1400126a1:	(bad)  
   1400126a2:	jno    0x1400126a0
   1400126a4:	fadd   st,st(1)
   1400126a6:	xchg   eax,ebp
   1400126a8:	sahf   
   1400126a9:	(bad)  
   1400126aa:	mov    ebp,0x6627cd2a
   1400126af:	mov    dl,0xe0
   1400126b1:	popf   
   1400126b2:	hlt    
   1400126b3:	test   DWORD PTR [rbx-0x7604c068],0x334e59f7
   1400126bd:	jle    0x1400126be
   1400126bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400126c0:	mov    edi,0xaf85f6b4
   1400126c5:	(bad)  
   1400126c6:	(bad)  
   1400126c7:	sub    edx,DWORD PTR [rax+riz*2]
   1400126ca:	movabs ds:0xbfbc9ec760cbed26,eax
   1400126d3:	jnp    0x140012744
   1400126d5:	outs   dx,BYTE PTR ds:[rsi]
   1400126d6:	jp     0x1400126db
   1400126d8:	or     edi,DWORD PTR [rdi-0x4b22a03a]
   1400126de:	out    0x42,al
   1400126e0:	push   rax
   1400126e1:	pop    rbp
   1400126e2:	int3   
   1400126e3:	(bad)  
   1400126e4:	stc    
   1400126e5:	cmp    ch,bl
   1400126e7:	mov    es,edx
   1400126e9:	test   eax,0x4497714
   1400126ee:	adc    ebp,DWORD PTR ds:[rdx+0x7f]
   1400126f2:	add    eax,0x6173ee72
   1400126f7:	and    eax,edi
   1400126f9:	push   rbx
   1400126fa:	(bad)  
   1400126fb:	xchg   BYTE PTR [rax-0x5c498b5b],dh
   140012701:	cmp    cl,BYTE PTR [rbp-0x15]
   140012704:	out    dx,eax
   140012705:	rex.WRX (bad) 
   140012707:	ror    BYTE PTR [rbx+rax*1-0x68],0x4e
   14001270c:	mov    esi,0x13191aef
   140012711:	sbb    cl,BYTE PTR [rcx-0x77b5d40b]
   140012717:	sub    ebp,esp
   140012719:	add    ebp,DWORD PTR [rax+0x7802baba]
   14001271f:	jb     0x140012764
   140012721:	xchg   DWORD PTR [rdi],ecx
   140012723:	lods   eax,DWORD PTR ds:[rsi]
   140012724:	repz xor DWORD PTR [rbx+0x4c],esp
   140012728:	mov    dl,0xf1
   14001272a:	(bad)  
   14001272b:	test   DWORD PTR [rdx+0x7e],0x9cacbc3
   140012732:	mov    ebx,0x86ea6236
   140012737:	fstp   QWORD PTR [rip+0x4f6449f6]        # 0x18f657133
   14001273d:	push   rbx
   14001273e:	sub    eax,0x8fa663d1
   140012743:	(bad)  
   140012744:	push   rcx
   140012745:	cmc    
   140012746:	movabs eax,ds:0x5f9799a7dc6d20e8
   14001274f:	(bad)  
   140012751:	test   al,0x1d
   140012753:	xchg   ebx,eax
   140012754:	xor    eax,ecx
   140012756:	rex.WR and al,0xde
   140012759:	push   0xffffffffd4cc5b73
   14001275e:	or     eax,0x6efc6acc
   140012763:	rex.WRX (bad) [rbp+0xfeeadb9]
   14001276a:	jg     0x140012739
   14001276c:	cmp    BYTE PTR [rdi],ch
   14001276e:	(bad)  
   14001276f:	pushf  
   140012770:	loop   0x1400127e9
   140012772:	cdq    
   140012773:	xor    DWORD PTR [rip+0xffffffffa1f27ff3],0x63        # 0xe1f3a76d
   14001277a:	fwait
   14001277b:	pop    rdi
   14001277c:	js     0x140012762
   14001277e:	mov    DWORD PTR [rcx],esi
   140012780:	mov    BYTE PTR [rax],al
   140012782:	xor    ax,0x2669
   140012786:	std    
   140012787:	sbb    eax,0x3d83c77b
   14001278c:	sti    
   14001278d:	(bad)  
   14001278e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001278f:	(bad)  
   140012790:	push   rdi
   140012791:	(bad)  
   140012792:	rex.WRX movabs rdi,0x2ec1e07f4f49d970
   14001279c:	out    0x97,al
   14001279e:	(bad)  
   14001279f:	pop    rax
   1400127a0:	rex.WR test QWORD PTR [rcx],0xffffffff923b69b5
   1400127a7:	mov    edi,0x6b01563a
   1400127ac:	adc    eax,0xe2185d4f
   1400127b1:	ret    0x5e46
   1400127b4:	and    esi,0xffffff94
   1400127b7:	rex.X stos BYTE PTR es:[rdi],al
   1400127b9:	adc    esp,eax
   1400127bb:	xor    al,0x33
   1400127bd:	add    DWORD PTR [rsi-0x4af6c21d],ebx
   1400127c3:	movabs ds:0xfb2bbde0dd02af14,al
   1400127cc:	add    edi,DWORD PTR [rdx-0x6033c258]
   1400127d2:	fadd   st,st(0)
   1400127d4:	xor    ebx,DWORD PTR [rdi-0x27]
   1400127d7:	xor    BYTE PTR [rdi],cl
   1400127d9:	mov    dl,0x31
   1400127db:	leave  
   1400127dc:	lock xchg DWORD PTR [rsi+0x4b],edi
   1400127e0:	mov    bl,BYTE PTR [rbx+0x5e]
   1400127e3:	pop    rbx
   1400127e4:	push   rsi
   1400127e5:	cmp    esp,DWORD PTR [rbx]
   1400127e7:	rex.RX je 0x140012856
   1400127ea:	shl    BYTE PTR [rdx-0x2c],1
   1400127ed:	push   rcx
   1400127ee:	and    al,0x99
   1400127f0:	mov    ch,0x79
   1400127f2:	(bad)  
   1400127f3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400127f4:	push   rbx
   1400127f5:	sub    eax,0xfc67b56e
   1400127fa:	pop    rax
   1400127fb:	movabs ds:0x3f9c35bfb6b79ea8,eax
   140012804:	movabs eax,ds:0x44bd19b21e0c4441
   14001280d:	(bad)  
   14001280e:	(bad)  
   14001280f:	jnp    0x1400127fe
   140012811:	(bad)  
   140012812:	jo     0x1400127bc
   140012814:	adc    al,0xfc
   140012816:	or     ebp,ebx
   140012818:	cmp    eax,0x3c6bed11
   14001281d:	xchg   DWORD PTR [rsi],esi
   14001281f:	stos   DWORD PTR es:[rdi],eax
   140012820:	inc    edx
   140012822:	ret    
   140012823:	adc    eax,0x569d6705
   140012828:	and    BYTE PTR [rax],bl
   14001282a:	xor    edi,edi
   14001282c:	rex.XB (bad) 
   14001282e:	rex.WRX (bad) 
   140012830:	ds (bad) 
   140012832:	mov    ecx,0x614e5ba3
   140012837:	and    BYTE PTR [rip+0xfffffffff9fe6389],dh        # 0x139ff8bc6
   14001283d:	mov    ebp,0x6f49c7fb
   140012842:	cmp    dh,bl
   140012844:	jmp    0x14001282a
   140012846:	in     eax,dx
   140012847:	cmp    ecx,DWORD PTR [rax+0x3cd1605a]
   14001284d:	(bad)  
   14001284e:	hlt    
   14001284f:	jns    0x140012838
   140012851:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012852:	jne    0x1400128a2
   140012854:	mov    ebp,0xb14d69f4
   140012859:	punpcklbw mm7,DWORD PTR [rax]
   14001285c:	cs lock (bad) 
   14001285f:	xor    ebx,DWORD PTR [rbx+0x48cbcad8]
   140012865:	(bad)  
   140012866:	movabs ds:0x42b86d7b66a34963,eax
   14001286f:	mov    bh,0x9
   140012871:	xor    BYTE PTR [rbx],al
   140012873:	or     bl,0x50
   140012876:	mov    cl,bh
   140012878:	sbb    edi,esi
   14001287a:	rex.RB adc eax,0xf34a4fcc
   140012880:	cmp    esp,DWORD PTR es:[rcx]
   140012883:	fidivr WORD PTR [rdi+0x5]
   140012886:	adc    BYTE PTR [rax+0x6b],al
   140012889:	add    BYTE PTR [rip+0x1d4fc9be],bh        # 0x15d50f24d
   14001288f:	fisttp QWORD PTR [rsi+rbx*1+0x30]
   140012893:	(bad)  
   140012894:	cwde   
   140012895:	repnz sbb eax,0xdf5bc6bf
   14001289b:	cli    
   14001289c:	rex.WRX pop rdi
   14001289e:	sahf   
   14001289f:	sub    cl,BYTE PTR [rsi+0x77]
   1400128a2:	(bad)
   1400128a6:	sbb    cl,BYTE PTR [rcx+rdx*1-0x54e98e4]
   1400128ad:	push   rdi
   1400128ae:	out    0xcc,eax
   1400128b0:	mov    bh,0x1d
   1400128b2:	sbb    DWORD PTR [rdx+0x2d],0xf260d1da
   1400128b9:	push   0xfffffffff8ae607f
   1400128be:	pop    rsi
   1400128bf:	popf   
   1400128c0:	stos   BYTE PTR es:[rdi],al
   1400128c1:	jge    0x1400128db
   1400128c3:	mov    BYTE PTR [rcx+0x5b],ah
   1400128c6:	mov    ebp,0x55a447d6
   1400128cb:	mov    eax,0x12939cea
   1400128d0:	mov    esi,0x66d16605
   1400128d5:	test   BYTE PTR [rsi],dh
   1400128d7:	test   eax,0x10ac32cb
   1400128dc:	xor    BYTE PTR [rcx+rbp*1-0x34e048c4],dh
   1400128e3:	leave  
   1400128e4:	mov    ebp,esi
   1400128e6:	stos   BYTE PTR es:[rdi],al
   1400128e7:	cwde   
   1400128e8:	push   QWORD PTR [rbx+0x47]
   1400128eb:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400128ed:	std    
   1400128ee:	icebp  
   1400128ef:	(bad)  
   1400128f0:	(bad)  
   1400128f1:	pop    rax
   1400128f2:	ja     0x1400128e1
   1400128f4:	addr32 xor eax,0x1d832649
   1400128fa:	sti    
   1400128fb:	(bad)  
   1400128fc:	or     edi,ebx
   1400128fe:	(bad)  
   1400128ff:	mov    WORD PTR [rdx+0x49c95cfe],ss
   140012905:	pop    rdx
   140012906:	xor    DWORD PTR [rdi+0x71fcc9a2],edi
   14001290c:	jmp    0x1400128e8
   14001290e:	(bad)  
   14001290f:	(bad)  
   140012910:	in     al,dx
   140012911:	cld    
   140012912:	es ret 
   140012914:	rex.RX int3 
   140012916:	mov    edi,0x8eeff10d
   14001291b:	or     esp,ecx
   14001291d:	(bad)  
   14001291e:	rex.RB cmp BYTE PTR [r8+0x12],0x51
   140012923:	pushf  
   140012924:	hlt    
   140012925:	sub    bh,BYTE PTR [rdi-0x7d]
   140012928:	sbb    ebx,0x7b474fda
   14001292e:	ret    
   14001292f:	mov    ebp,0xd3e26544
   140012934:	xchg   ebp,eax
   140012935:	mov    ebp,?
   140012937:	jl     0x1400128df
   140012939:	imul   edx,DWORD PTR [rcx+0xfd14809],0xd
   140012940:	jmp    0x140012944
   140012942:	xor    al,0x6c
   140012944:	movsxd ebp,DWORD PTR [rdx+0xa976a0f]
   14001294a:	repz xchg eax,edi
   14001294d:	int3   
   14001294e:	mov    bh,0xfa
   140012950:	out    dx,eax
   140012951:	test   eax,0xb63b8fe4
   140012956:	shl    DWORD PTR [rdi],0x8
   140012959:	stos   BYTE PTR es:[rdi],al
   14001295a:	ja     0x14001298a
   14001295c:	jmp    0x13f2f128c
   140012961:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012962:	(bad)  
   140012963:	and    al,0xc
   140012965:	(bad)  
   140012966:	idiv   esi
   140012968:	(bad)  
   140012969:	and    BYTE PTR [rsi+0x51],ch
   14001296c:	push   0x4fc2ad48
   140012971:	(bad)  
   140012972:	mov    esp,0xdf035090
   140012977:	sub    ch,BYTE PTR [rdx+0x36]
   14001297a:	mov    dh,0x35
   14001297c:	rcr    BYTE PTR [rbx+0x745da983],1
   140012982:	and    al,0x9e
   140012984:	rex.RX fistp DWORD PTR [rbp+0x45f2d7c5]
   14001298b:	push   rax
   14001298c:	jl     0x1400129db
   14001298e:	lods   eax,DWORD PTR ds:[rsi]
   14001298f:	(bad)
   140012993:	outs   dx,BYTE PTR ds:[rsi]
   140012994:	rex.WR jl 0x1400129f9
   140012997:	rol    BYTE PTR [rdx],1
   140012999:	jl     0x1400129a9
   14001299b:	push   rbx
   14001299c:	sbb    QWORD PTR [rax+0x1f08d50e],rbp
   1400129a3:	movabs ds:0x7f3bde8ddfdde97d,al
   1400129ac:	pop    rsi
   1400129ad:	adc    eax,0x27fe6de4
   1400129b2:	(bad)  
   1400129b3:	or     dh,BYTE PTR [rbp+0x29]
   1400129b6:	mov    esi,0x560ecf59
   1400129bb:	mul    dh
   1400129bd:	repz sti 
   1400129bf:	outs   dx,BYTE PTR ds:[rsi]
   1400129c0:	sbb    BYTE PTR [rbx-0x32dd9f22],bl
   1400129c6:	mov    bh,0x13
   1400129c8:	rcr    BYTE PTR [rbx-0x74],0xdf
   1400129cc:	push   0xffffffffc3e9eb7a
   1400129d1:	icebp  
   1400129d2:	in     eax,dx
   1400129d3:	sahf   
   1400129d4:	cdq    
   1400129d5:	lock iret 
   1400129d7:	mov    ah,0x68
   1400129d9:	sbb    dh,bl
   1400129db:	outs   dx,DWORD PTR ds:[rsi]
   1400129dc:	jmp    0x140012a18
   1400129de:	sub    eax,0x5605dfe9
   1400129e3:	(bad)  
   1400129e4:	out    dx,eax
   1400129e5:	(bad)  
   1400129e6:	xchg   DWORD PTR [rdi+0x57],ebx
   1400129e9:	pop    rax
   1400129ea:	sti    
   1400129eb:	stc    
   1400129ec:	rex.WR xlat BYTE PTR ds:[rbx]
   1400129ee:	jle    0x14001297d
   1400129f0:	ret    
   1400129f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400129f2:	pop    rdi
   1400129f3:	lods   al,BYTE PTR ds:[rsi]
   1400129f4:	cli    
   1400129f5:	shl    ebp,1
   1400129f7:	mov    ch,BYTE PTR [rdi]
   1400129f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400129fa:	or     DWORD PTR [rbp+rax*1+0x7d74b85d],esi
   140012a01:	sbb    al,0xf0
   140012a03:	fadd   DWORD PTR [rsi]
   140012a05:	lahf   
   140012a06:	js     0x140012a68
   140012a08:	xchg   ebp,eax
   140012a09:	out    dx,eax
   140012a0a:	(bad)  
   140012a0b:	push   rax
   140012a0c:	outs   dx,BYTE PTR ds:[rsi]
   140012a0d:	fdivp  st(2),st
   140012a0f:	jrcxz  0x1400129ce
   140012a11:	int    0x77
   140012a13:	mov    esi,0x7c8aa367
   140012a18:	sub    BYTE PTR [r15+riz*8],r10b
   140012a1c:	add    edi,DWORD PTR [rcx-0x27]
   140012a1f:	fistp  QWORD PTR [rbx+rax*2+0x41e45498]
   140012a26:	(bad)  
   140012a27:	(bad)  
   140012a28:	rex (bad) 
   140012a2a:	sbb    al,0x75
   140012a2c:	cwde   
   140012a2d:	(bad)  
   140012a2e:	xor    al,0xdc
   140012a30:	scas   eax,DWORD PTR es:[rdi]
   140012a31:	rex.WX shr QWORD PTR [rax+0x447420fb],cl
   140012a38:	retf   
   140012a39:	or     al,0x99
   140012a3b:	mov    eax,0x55f73697
   140012a40:	adc    ebx,DWORD PTR [rdx+0x63ab5b5c]
   140012a46:	pop    rdx
   140012a47:	xor    esp,DWORD PTR [rbx*8-0x20c671a]
   140012a4e:	outs   dx,BYTE PTR ds:[rsi]
   140012a4f:	mov    edi,0xffc7fb2f
   140012a54:	rex.WRX jnp 0x140012a46
   140012a57:	cld    
   140012a58:	rsm    
   140012a5a:	and    ah,bh
   140012a5c:	fldenv [rdi-0x304a5e1]
   140012a62:	movabs ds:0x37a6a320a0858e4f,eax
   140012a6b:	mov    al,0xb
   140012a6d:	jnp    0x140012a7d
   140012a6f:	(bad)  
   140012a70:	out    0xf7,al
   140012a72:	sbb    eax,0xa0de9918
   140012a77:	fs xchg ebx,eax
   140012a79:	sub    BYTE PTR [rsi-0x6ff019ba],bh
   140012a7f:	(bad)  
   140012a80:	mov    ah,0x97
   140012a82:	imul   edi,DWORD PTR [rsi+rbp*4+0x53],0xf2a4403e
   140012a8a:	shl    esp,cl
   140012a8c:	icebp  
   140012a8d:	icebp  
   140012a8e:	mov    ebp,0x33b60383
   140012a93:	adc    al,0x18
   140012a95:	(bad)  
   140012a96:	mov    edi,0x629e6da9
   140012a9b:	xchg   ah,cl
   140012a9d:	jl     0x140012a9f
   140012a9f:	(bad)  [rdx+0x2cbad0b6]
   140012aa5:	or     BYTE PTR [rdi+riz*2+0x62],dh
   140012aa9:	rex.WRB push r9
   140012aab:	int    0x3a
   140012aad:	(bad)  
   140012aae:	stos   DWORD PTR es:[rdi],eax
   140012aaf:	(bad)  
   140012ab0:	jrcxz  0x140012ac5
   140012ab2:	fwait
   140012ab3:	je     0x140012a9b
   140012ab5:	fdivrp st(3),st
   140012ab7:	cld    
   140012ab8:	imul   ebp,DWORD PTR [rbx-0x491086c],0xfff1833b
   140012ac2:	cld    
   140012ac3:	icebp  
   140012ac4:	and    DWORD PTR [rip+0x5de72b16],ecx        # 0x19de855e0
   140012aca:	sub    eax,0x4249db0d
   140012acf:	rex.WRX jmp 0x140012b3a
   140012ad2:	xchg   esi,eax
   140012ad3:	xlat   BYTE PTR ds:[rbx]
   140012ad4:	stos   BYTE PTR es:[rdi],al
   140012ad5:	mov    bl,0xf0
   140012ad7:	(bad)  
   140012ad8:	mov    ch,0x7d
   140012ada:	(bad)  
   140012adb:	add    al,0x4
   140012add:	fsub   st(0),st
   140012adf:	pop    rdx
   140012ae0:	nop
   140012ae1:	ret    
   140012ae2:	cmove  ecx,DWORD PTR [rax+0x1c]
   140012ae6:	sbb    cl,BYTE PTR [rbx+rdi*1+0x4389ab40]
   140012aed:	adc    ecx,esi
   140012aef:	mov    ecx,0xe5555200
   140012af4:	lahf   
   140012af5:	adc    BYTE PTR es:[rdx+rdi*4+0x53],dl
   140012afa:	add    BYTE PTR [rcx+0x16e4a546],dl
   140012b00:	add    BYTE PTR [rcx-0x50],bh
   140012b03:	push   rax
   140012b04:	push   rbp
   140012b05:	lock fcom QWORD PTR [rdx]
   140012b08:	mov    dl,0x9f
   140012b0a:	clc    
   140012b0b:	add    ecx,DWORD PTR [rcx-0x21]
   140012b0e:	clc    
   140012b0f:	(bad)  
   140012b10:	mov    edx,?
   140012b12:	push   rdx
   140012b13:	jg     0x140012b02
   140012b15:	rex.WRXB out dx,eax
   140012b17:	mov    ebp,0x1eaff9f8
   140012b1c:	(bad)  
   140012b1d:	add    esp,DWORD PTR [rsp+rcx*2-0x3a464cba]
   140012b24:	jb     0x140012b97
   140012b26:	out    dx,eax
   140012b27:	(bad)  
   140012b28:	ret    
   140012b29:	shr    esi,0x3d
   140012b2c:	jrcxz  0x140012ad2
   140012b2e:	out    dx,eax
   140012b2f:	and    al,0x3f
   140012b31:	pop    rdx
   140012b32:	fdivp  st(6),st
   140012b34:	(bad)  
   140012b35:	cmp    ebp,DWORD PTR [rax+0x31]
   140012b38:	jae    0x140012b35
   140012b3a:	jge    0x140012b72
   140012b3c:	cwde   
   140012b3d:	(bad)  
   140012b3e:	rol    BYTE PTR [rsi+0x1a],cl
   140012b41:	xlat   BYTE PTR ds:[rbx]
   140012b42:	mov    BYTE PTR [rdi-0x79],bh
   140012b45:	lods   al,BYTE PTR ds:[rsi]
   140012b46:	retf   
   140012b47:	(bad)  
   140012b48:	(bad)  
   140012b49:	jbe    0x140012b3b
   140012b4b:	fidiv  WORD PTR [rsp+rcx*8]
   140012b4e:	add    al,0xd0
   140012b50:	ins    DWORD PTR es:[rdi],dx
   140012b51:	ret    
   140012b52:	jnp    0x140012b5a
   140012b54:	outs   dx,BYTE PTR ds:[rsi]
   140012b55:	fsub   DWORD PTR [rbp-0x30a8c953]
   140012b5b:	in     al,0x67
   140012b5d:	jb     0x140012b25
   140012b5f:	(bad)  
   140012b60:	mov    cl,0x65
   140012b62:	or     BYTE PTR [rip+0x7040175c],bh        # 0x1b04142c4
   140012b68:	sub    eax,0xd70000f2
   140012b6d:	cmp    esp,ebp
   140012b6f:	stc    
   140012b70:	leave  
   140012b71:	stos   DWORD PTR es:[rdi],eax
   140012b72:	lea    ebx,[rip+0x105dbe4c]        # 0x1505ee9c4
   140012b78:	test   al,0x2e
   140012b7a:	cmp    DWORD PTR [rcx-0x6249441],edi
   140012b80:	xor    esi,edx
   140012b82:	ds jo  0x140012b1f
   140012b85:	ds mov dl,0x65
   140012b88:	mov    cl,0x9a
   140012b8a:	sub    eax,0x27e4cdef
   140012b8f:	out    dx,eax
   140012b90:	int    0xf5
   140012b92:	(bad)
   140012b95:	sbb    eax,DWORD PTR [rbx-0x4f]
   140012b98:	and    DWORD PTR [rcx],esp
   140012b9a:	(bad)  
   140012b9b:	imul   edx,DWORD PTR [rcx+rbp*8-0x49],0x41
   140012ba0:	mov    cl,BYTE PTR [rax+0x4b]
   140012ba3:	jl     0x140012b47
   140012ba5:	or     DWORD PTR [rcx+riz*1],esp
   140012ba8:	(bad)  
   140012ba9:	(bad)  
   140012baa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012bab:	ins    BYTE PTR es:[rdi],dx
   140012bac:	xor    eax,DWORD PTR [rbx+0x2f]
   140012baf:	(bad)  
   140012bb0:	mov    esi,0x84d56270
   140012bb5:	xchg   esi,eax
   140012bb6:	and    ebp,DWORD PTR [rsi+rdi*1]
   140012bb9:	xchg   dl,al
   140012bbb:	rex.WRB sbb al,0x49
   140012bbe:	mov    esp,0x719c5ff6
   140012bc3:	pop    rax
   140012bc4:	ffree  st(7)
   140012bc6:	mov    bh,0x3b
   140012bc8:	movabs al,ds:0x934145da7ad2a293
   140012bd1:	(bad)  
   140012bd2:	fisttp WORD PTR [rbp-0x3782b022]
   140012bd8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012bd9:	(bad)  
   140012bda:	mov    edi,0x5c5dce82
   140012bdf:	(bad)  
   140012be0:	jg     0x140012bd7
   140012be2:	std    
   140012be3:	neg    DWORD PTR [rsi+0x38]
   140012be6:	jge    0x140012c49
   140012be8:	lods   eax,DWORD PTR ds:[rsi]
   140012be9:	add    al,0x1b
   140012beb:	and    eax,0xb4b66893
   140012bf0:	stos   DWORD PTR es:[rdi],eax
   140012bf1:	pop    rax
   140012bf2:	fdiv   DWORD PTR [rdi-0x1d]
   140012bf5:	push   rsi
   140012bf6:	jg     0x140012bdf
   140012bf8:	scas   al,BYTE PTR es:[rdi]
   140012bf9:	pushf  
   140012bfa:	mov    dl,0x81
   140012bfc:	sub    BYTE PTR [rdi],ah
   140012bfe:	or     ah,BYTE PTR [rdx+0xd]
   140012c01:	jbe    0x140012c7f
   140012c03:	(bad)  
   140012c04:	repz (bad) 
   140012c06:	faddp  st(3),st
   140012c08:	in     al,0x7b
   140012c0a:	stos   BYTE PTR es:[rdi],al
   140012c0b:	xor    al,0x95
   140012c0d:	rex.WB jl 0x140012bab
   140012c10:	cmp    dh,dl
   140012c12:	std    
   140012c13:	out    dx,al
   140012c14:	(bad)  
   140012c15:	xlat   BYTE PTR ds:[rbx]
   140012c16:	in     al,dx
   140012c17:	xor    al,0x75
   140012c19:	imul   ecx,DWORD PTR [rsi+0x38],0x54
   140012c1d:	stos   DWORD PTR es:[rdi],eax
   140012c1e:	ds stos BYTE PTR es:[rdi],al
   140012c20:	and    bh,al
   140012c22:	in     al,0xda
   140012c24:	ins    DWORD PTR es:[rdi],dx
   140012c25:	ret    
   140012c26:	stos   DWORD PTR es:[rdi],eax
   140012c27:	rex add DWORD PTR [rdx],edx
   140012c2a:	add    eax,0x8892929
   140012c2f:	pop    rbx
   140012c30:	sub    ebp,DWORD PTR [rsi+rdx*8]
   140012c33:	push   rsi
   140012c34:	(bad)  
   140012c35:	push   rbp
   140012c36:	mov    bh,0x84
   140012c38:	push   rcx
   140012c39:	xchg   edi,eax
   140012c3a:	(bad)  
   140012c3b:	and    BYTE PTR [rbp-0x5c7ffe73],ah
   140012c41:	minps  xmm4,xmm1
   140012c44:	jae    0x140012c93
   140012c46:	call   0xdc0227b5
   140012c4b:	mov    al,sil
   140012c4e:	rex.W cld 
   140012c50:	(bad)  
   140012c51:	jmp    0x140012c17
   140012c53:	(bad)  [rdx-0x6ce05da1]
   140012c59:	sti    
   140012c5a:	jmp    0x140012be7
   140012c5c:	outs   dx,BYTE PTR ds:[rsi]
   140012c5d:	xchg   edi,eax
   140012c5e:	push   0xffffffffffffffe3
   140012c60:	jbe    0x140012cc6
   140012c62:	push   rcx
   140012c63:	mov    esi,0xc4fa29ff
   140012c68:	imul   esi,edi,0xffffffe0
   140012c6b:	mov    ds,WORD PTR [rbx-0x17a44dea]
   140012c71:	xchg   DWORD PTR [rdi-0x63],edi
   140012c74:	rex.RX (bad) 
   140012c77:	(bad)  
   140012c78:	and    edi,ebp
   140012c7a:	in     eax,dx
   140012c7b:	ja     0x140012caa
   140012c7d:	(bad)  
   140012c7e:	rex.WX movabs rcx,0x3fef2a435dca7822
   140012c88:	mov    ah,0xf2
   140012c8a:	(bad)  
   140012c8b:	push   rsp
   140012c8c:	mov    DWORD PTR [rsi],0xd4aa3cbb
   140012c92:	fist   DWORD PTR [rbp-0x1bd8abac]
   140012c98:	(bad)  
   140012c99:	rex.RB
   140012c9a:	ss (bad) 
   140012c9c:	mov    BYTE PTR [rcx+0x38],0x3e
   140012ca0:	cs ja  0x140012cbf
   140012ca3:	sahf   
   140012ca4:	and    DWORD PTR [rax],esi
   140012ca6:	mov    edi,ds
   140012ca8:	pop    rsi
   140012ca9:	rex.WB
   140012caa:	repz test BYTE PTR [rdx+0x3d],0xc1
   140012caf:	mov    ecx,0x17a1da88
   140012cb4:	push   rsi
   140012cb5:	setnp  BYTE PTR [rdi+rsi*2]
   140012cb9:	adc    al,0xd9
   140012cbb:	ja     0x140012c7c
   140012cbd:	rex.WXB jp 0x140012d2f
   140012cc0:	stc    
   140012cc1:	out    dx,eax
   140012cc2:	mov    rax,rdi
   140012cc5:	movabs eax,ds:0x6d0fb3fcff0ccfc7
   140012cce:	or     al,0xf3
   140012cd0:	adc    al,BYTE PTR [rsp+rbp*4+0x49]
   140012cd4:	fidiv  DWORD PTR [rdi+0x793d9583]
   140012cda:	jg     0x140012d55
   140012cdc:	addr32 sahf 
   140012cde:	sub    al,0x2c
   140012ce0:	xchg   esi,eax
   140012ce1:	xchg   esp,eax
   140012ce2:	data16 rex.X (bad) 
   140012ce5:	mov    BYTE PTR [rbp-0x41229703],bh
   140012ceb:	icebp  
   140012cec:	(bad)  
   140012ced:	pop    rdx
   140012cee:	int3   
   140012cef:	(bad)  
   140012cf1:	(bad)  
   140012cf2:	(bad)
   140012cf5:	dec    DWORD PTR [rsi+0x34cbad40]
   140012cfb:	sbb    BYTE PTR [rdi-0x6d4b49ea],dl
   140012d01:	movabs al,ds:0xd7a3fd583a266c5a
   140012d0a:	out    dx,eax
   140012d0b:	mov    edi,0x9126ef06
   140012d10:	sub    al,ah
   140012d12:	pop    rdx
   140012d13:	push   rsi
   140012d14:	adc    DWORD PTR [rsi-0x7ba9369b],esi
   140012d1a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012d1b:	sub    cl,bl
   140012d1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012d1e:	rex.RB fisttp QWORD PTR [rsi*2-0x3145d4ed]
   140012d26:	xchg   edi,eax
   140012d27:	jl     0x140012d5c
   140012d29:	and    ebx,0xcbcef6ab
   140012d2f:	or     eax,0x9914b6d9
   140012d34:	stos   BYTE PTR es:[rdi],al
   140012d35:	mov    ah,0x4c
   140012d37:	fsin   
   140012d39:	pushf  
   140012d3a:	jmp    0x1704130a9
   140012d3f:	lock ret 0xaf68
   140012d43:	cmp    dh,BYTE PTR [rbp-0x48740b13]
   140012d49:	(bad)  
   140012d4a:	int    0xd7
   140012d4c:	or     DWORD PTR [rdi-0x17270ca9],esi
   140012d52:	pop    rdx
   140012d53:	lea    ecx,[rdx-0x5712acd]
   140012d59:	rex.WRX or r12b,al
   140012d5c:	fisub  WORD PTR [rdi-0x6e260f0f]
   140012d62:	ds jae 0x140012d5c
   140012d65:	cs jp  0x140012d4d
   140012d68:	fsubr  QWORD PTR [rbx-0x40e7cd21]
   140012d6e:	clc    
   140012d6f:	mov    ch,0x1b
   140012d71:	hlt    
   140012d72:	cmp    edi,DWORD PTR [rdi]
   140012d74:	(bad)  
   140012d75:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012d76:	rex.RXB out dx,al
   140012d78:	rex.WRB ret 0x50dd
   140012d7c:	or     eax,ebx
   140012d7e:	mov    cl,al
   140012d80:	and    DWORD PTR [rsi-0x60],0xffffff91
   140012d84:	push   rsp
   140012d85:	(bad)  
   140012d86:	scas   al,BYTE PTR es:[rdi]
   140012d87:	in     al,dx
   140012d88:	out    0xf1,al
   140012d8a:	rex.RXB (bad) [r11-0xb3f7dfc]
   140012d91:	rex.WRB in eax,dx
   140012d93:	and    eax,0x2c736320
   140012d98:	push   rsp
   140012d99:	mov    esp,0x6b85f7ef
   140012d9e:	mov    ebx,0x5a68d54b
   140012da3:	fnsave [rdi+0x1c9a28ea]
   140012da9:	or     ecx,DWORD PTR cs:[r9]
   140012dad:	and    BYTE PTR [rax],al
   140012daf:	xlat   BYTE PTR ds:[rbx]
   140012db0:	mul    ah
   140012db2:	mov    dh,0xbb
   140012db4:	xchg   ecx,eax
   140012db5:	jl     0x140012db6
   140012db7:	iret   
   140012db8:	rex.WX mov dl,0xff
   140012dbb:	data16 sbb ah,ch
   140012dbe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012dbf:	(bad)  
   140012dc0:	jg     0x140012d61
   140012dc2:	jle    0x140012e3c
   140012dc4:	in     eax,dx
   140012dc5:	rex.WXB (bad) 
   140012dc7:	rex.WRXB in eax,0x44
   140012dca:	lods   al,BYTE PTR ds:[rsi]
   140012dcb:	(bad)  
   140012dcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012dcd:	(bad)  
   140012dce:	(bad)  
   140012dcf:	(bad)  
   140012dd0:	retf   
   140012dd1:	ror    DWORD PTR [rsi-0xd211cc3],0x4a
   140012dd8:	(bad)  
   140012dd9:	jp     0x140012e58
   140012ddb:	(bad)  
   140012ddc:	xchg   ebx,eax
   140012ddd:	or     BYTE PTR [rdx-0x34],bl
   140012de0:	(bad)  
   140012de1:	stc    
   140012de2:	movabs ds:0x7e2bee1139d7c46b,eax
   140012deb:	(bad)  
   140012dec:	(bad)  [rdx]
   140012dee:	repz fadd QWORD PTR [rcx-0x2e]
   140012df2:	mov    WORD PTR [rip+0x3c4a8dac],ss        # 0x17c4bbba4
   140012df8:	mov    ebp,0x917cc63e
   140012dfd:	imul   ecx,edi,0xffffffb3
   140012e00:	sahf   
   140012e01:	stos   BYTE PTR es:[rdi],al
   140012e02:	nop
   140012e03:	mov    dl,BYTE PTR [rax-0x5556d56]
   140012e09:	mov    eax,0x28856fb3
   140012e0e:	ror    DWORD PTR [rsi+rdi*4-0x49],0xb0
   140012e13:	rex.WRXB (bad) 
   140012e15:	rex.WB jl 0x140012e2d
   140012e18:	(bad)  
   140012e19:	mov    ch,0x25
   140012e1b:	mov    ebp,DWORD PTR [rip+0xffffffffc224ca58]        # 0x10225f879
   140012e21:	xchg   esp,eax
   140012e22:	test   BYTE PTR [rax],al
   140012e24:	cmp    cl,sil
   140012e27:	(bad)  
   140012e28:	repz mov cl,0x41
   140012e2b:	xchg   ebx,eax
   140012e2c:	scas   eax,DWORD PTR es:[rdi]
   140012e2d:	mov    edx,0x4a72ff18
   140012e32:	(bad)  
   140012e33:	in     eax,0xb6
   140012e35:	adc    DWORD PTR [rdx-0x598c1521],edi
   140012e3b:	imul   edx,DWORD PTR [rcx],0x5
   140012e3e:	add    BYTE PTR [rax-0x56],al
   140012e41:	scas   al,BYTE PTR es:[rdi]
   140012e42:	out    dx,al
   140012e43:	xchg   ebx,eax
   140012e44:	adc    ch,al
   140012e46:	sub    ebx,DWORD PTR [rdx+0x3a]
   140012e49:	jp     0x140012e81
   140012e4b:	and    al,dl
   140012e4d:	out    dx,al
   140012e4e:	sub    eax,0xbec95c02
   140012e53:	(bad)  
   140012e54:	mov    DWORD PTR [rdi-0x53],esp
   140012e57:	add    BYTE PTR [rdi-0x45221e3],ah
   140012e5d:	repnz shl DWORD PTR [rbp-0x64],1
   140012e61:	cmp    DWORD PTR [rcx-0x7106e05b],edi
   140012e67:	jge    0x140012e5d
   140012e69:	stos   BYTE PTR es:[rdi],al
   140012e6a:	jge    0x140012eb7
   140012e6c:	sub    edi,ebx
   140012e6e:	jmp    0x1ad282ad2
   140012e73:	jge    0x140012e56
   140012e75:	add    ebx,DWORD PTR [rbx]
   140012e77:	leave  
   140012e78:	jg     0x140012e73
   140012e7a:	ja     0x140012e87
   140012e7c:	cmp    bl,BYTE PTR [rbx+rbp*4+0x24]
   140012e80:	imul   ebx,DWORD PTR [rcx+rbx*2-0x27885be9],0xb8f4275e
   140012e8b:	mov    dh,0xc9
   140012e8e:	rex.XB pop r14
   140012e90:	ins    BYTE PTR es:[rdi],dx
   140012e91:	mov    ah,0xfb
   140012e93:	movabs al,ds:0x37c24ad7e662eaf5
   140012e9c:	push   rsi
   140012e9d:	(bad)  
   140012e9e:	push   rdx
   140012e9f:	(bad)  
   140012ea0:	adc    BYTE PTR [rax+rbx*4],0x3d
   140012ea4:	(bad)  
   140012ea5:	cmp    DWORD PTR [rdx+0x1a9b40c1],ecx
   140012eab:	rex.W (bad) 
   140012ead:	pop    rsi
   140012eae:	adc    BYTE PTR [rax-0x12],al
   140012eb1:	fwait
   140012eb2:	(bad)  
   140012eb3:	mov    ecx,eax
   140012eb5:	(bad)  
   140012eb6:	loope  0x140012e47
   140012eb8:	push   0xfffffffffffffff6
   140012eba:	(bad)  
   140012ebb:	ja     0x140012efd
   140012ebd:	mov    eax,ebp
   140012ebf:	shl    DWORD PTR [rdi-0x8207032],1
   140012ec5:	leave  
   140012ec6:	mov    edi,0x85e71b59
   140012ecb:	adc    ah,BYTE PTR [rdi]
   140012ecd:	push   0xffffffffffffffd2
   140012ecf:	sahf   
   140012ed0:	hlt    
   140012ed1:	xchg   edi,eax
   140012ed2:	jbe    0x140012ebb
   140012ed4:	std    
   140012ed5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012ed6:	sbb    eax,0x673f3279
   140012edb:	rex.WRB (bad) 
   140012edd:	adc    ecx,DWORD PTR [rsi-0x71fe02c4]
   140012ee3:	scas   al,BYTE PTR es:[rdi]
   140012ee4:	xor    al,0x4
   140012ee6:	and    esp,ecx
   140012ee8:	ffree  st(1)
   140012eea:	cld    
   140012eeb:	push   0x1618c9bc
   140012ef0:	stos   DWORD PTR es:[rdi],eax
   140012ef1:	pop    rdx
   140012ef2:	loop   0x140012ec1
   140012ef4:	push   rbx
   140012ef5:	stos   DWORD PTR es:[rdi],eax
   140012ef6:	addr32 mov dl,0xa
   140012ef9:	pushf  
   140012efa:	pop    rdi
   140012efb:	(bad)  
   140012efc:	movsxd ebp,DWORD PTR [rbp-0x18]
   140012eff:	rex.WX (bad) 
   140012f01:	stos   BYTE PTR es:[rdi],al
   140012f02:	push   rbp
   140012f03:	adc    al,BYTE PTR [rsi]
   140012f05:	mov    DWORD PTR [rax-0x1a],edi
   140012f08:	neg    DWORD PTR [rdi-0x6847252e]
   140012f0e:	pushf  
   140012f0f:	popf   
   140012f10:	(bad)  
   140012f11:	rex.RB (bad) 
   140012f13:	sub    edx,DWORD PTR [rdx+rbp*2]
   140012f16:	sub    eax,0xb6970a8b
   140012f1b:	xor    BYTE PTR [rbp-0x6f],al
   140012f1e:	(bad)  
   140012f1f:	rex.RB
   140012f20:	ds mov dl,0x12
   140012f23:	cmc    
   140012f24:	mov    ah,0xd8
   140012f26:	cmp    DWORD PTR [rsi-0x40],edx
   140012f29:	push   rdi
   140012f2a:	jb     0x140012f96
   140012f2c:	xchg   edx,eax
   140012f2d:	int    0x47
   140012f2f:	or     DWORD PTR [rax-0x4ca34554],eax
   140012f35:	sbb    esi,DWORD PTR [rsi-0x49930205]
   140012f3b:	push   rcx
   140012f3c:	(bad)  
   140012f3d:	mov    esi,0xb5d36d
   140012f42:	add    BYTE PTR [rip+0x55468194],al        # 0x19547b0dc
   140012f48:	adc    BYTE PTR [rbp-0x15],ch
   140012f4b:	rex popf 
   140012f4d:	(bad)  
   140012f4e:	mov    dh,0x40
   140012f50:	loopne 0x140012f9c
   140012f52:	ja     0x140012f55
   140012f54:	mov    ch,dl
   140012f56:	sti    
   140012f57:	sbb    ah,BYTE PTR [rdx+rdi*1]
   140012f5a:	(bad)  
   140012f5b:	(bad)  
   140012f5c:	mov    ebp,0xb234096a
   140012f61:	sub    BYTE PTR [rdi],bh
   140012f63:	jo     0x140012faf
   140012f65:	out    dx,al
   140012f66:	mov    edi,0x7ff6996d
   140012f6b:	retf   
   140012f6c:	outs   dx,BYTE PTR ds:[rsi]
   140012f6d:	jp     0x140012f54
   140012f6f:	cld    
   140012f70:	stos   DWORD PTR es:[rdi],eax
   140012f71:	fistp  QWORD PTR [rdi+riz*1]
   140012f74:	scas   eax,DWORD PTR es:[rdi]
   140012f75:	js     0x140012fca
   140012f77:	ds cli 
   140012f79:	lock dec DWORD PTR [rip+0x642fc0fa]        # 0x1a430f07a
   140012f80:	lods   eax,DWORD PTR ds:[rsi]
   140012f81:	ret    
   140012f82:	imul   edi,DWORD PTR [rsi],0x75
   140012f85:	push   QWORD PTR [rip+0xffffffffed93831c]        # 0x12d94b2a7
   140012f8b:	push   0xffffffffaa6d3ba9
   140012f90:	jbe    0x140012fe4
   140012f92:	mov    ah,0x21
   140012f94:	jp     0x140012f76
   140012f96:	lock stos BYTE PTR es:[rdi],al
   140012f98:	sbb    edx,0x5f
   140012f9b:	or     DWORD PTR [rdx-0x33],0xd3ed13e8
   140012fa2:	jo     0x14001301e
   140012fa4:	sub    BYTE PTR [rax],dl
   140012fa6:	push   rsi
   140012fa7:	xlat   BYTE PTR ds:[rbx]
   140012fa8:	adc    eax,0x37b21020
   140012fad:	jl     0x140012fee
   140012faf:	shr    bh,cl
   140012fb1:	stc    
   140012fb2:	jno    0x140012ff5
   140012fb4:	jg     0x140012ff4
   140012fb6:	xchg   edx,eax
   140012fb7:	cli    
   140012fb8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012fb9:	mov    DWORD PTR [rsp+rcx*1+0x4e],0x2fcd92fb
   140012fc1:	adc    eax,0x459de5fd
   140012fc6:	mov    dh,0xb8
   140012fc8:	push   rsp
   140012fc9:	cwde   
   140012fca:	xor    al,0x13
   140012fcc:	rex.WRX push rdx
   140012fce:	and    DWORD PTR [rsi],esi
   140012fd0:	add    BYTE PTR [rcx-0x13],dl
   140012fd3:	ss call 0x1837bfe39
   140012fd9:	lea    ebx,[rbx+rdx*1-0x4f]
   140012fdd:	jge    0x140012f6e
   140012fdf:	sbb    bl,BYTE PTR [rip+0xffffffffd595f9b9]        # 0x11597299e
   140012fe5:	push   rdi
   140012fe6:	jge    0x14001301f
   140012fe8:	ret    
   140012fe9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012fea:	jle    0x140012fab
   140012fec:	(bad)  
   140012fed:	pop    rsp
   140012fee:	or     cl,dh
   140012ff0:	scas   al,BYTE PTR es:[rdi]
   140012ff1:	mov    ?,WORD PTR [rax]
   140012ff3:	cs (bad) 
   140012ff5:	stos   DWORD PTR es:[rdi],eax
   140012ff6:	cwde   
   140012ff7:	(bad)  
   140012ff9:	push   rbx
   140012ffa:	xchg   ebx,eax
   140012ffb:	cmp    DWORD PTR [rdx+0x58],edx
   140012ffe:	push   rdx
   140012fff:	adc    eax,0x22b21556
   140013004:	int3   
   140013005:	push   rcx
   140013006:	mov    ebp,0x54428509
   14001300b:	jl     0x140013072
   14001300d:	(bad)  
   14001300e:	rex.WB (bad) 
   140013010:	(bad)  
   140013011:	sub    DWORD PTR [rcx+0x54],ebx
   140013014:	pop    rax
   140013015:	(bad)  
   140013016:	mov    dl,0x3
   140013018:	adc    BYTE PTR [rbx+0x56],cl
   14001301b:	sub    al,0x91
   14001301d:	xlat   BYTE PTR ds:[rbx]
   14001301e:	sub    BYTE PTR [rax],al
   140013020:	add    al,BYTE PTR [rax+0x36006874]
   140013027:	(bad)  
   140013028:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013029:	cwde   
   14001302a:	in     al,0xab
   14001302c:	scas   eax,DWORD PTR es:[rdi]
   14001302d:	add    eax,0x9efeba08
   140013032:	mov    dh,0xad
   140013034:	mov    ebp,0x6d748aff
   140013039:	repnz add BYTE PTR [rdx+0x4f],ch
   14001303d:	push   rcx
   14001303e:	js     0x140013073
   140013040:	ins    DWORD PTR es:[rdi],dx
   140013041:	jae    0x140013002
   140013043:	push   rbx
   140013044:	or     eax,DWORD PTR [rax]
   140013046:	mov    edx,0x34e14040
   14001304b:	or     dl,cl
   14001304d:	push   rsi
   14001304e:	sub    eax,0x16555206
   140013053:	rol    DWORD PTR [rbp+rdx*1+0xc],1
   140013057:	jbe    0x14001305f
   140013059:	jge    0x1400130c0
   14001305b:	cmp    ah,BYTE PTR [rbx]
   14001305d:	(bad)  
   14001305e:	pushf  
   14001305f:	cli    
   140013060:	scas   al,BYTE PTR es:[rdi]
   140013061:	(bad)  
   140013062:	lods   al,BYTE PTR ds:[rsi]
   140013063:	(bad)  
   140013064:	cdq    
   140013065:	jrcxz  0x140013082
   140013067:	mul    BYTE PTR [rbx]
   140013069:	fistp  QWORD PTR [rbx+rcx*4+0x4ae97d6f]
   140013070:	jbe    0x14001306d
   140013072:	loop   0x1400130cf
   140013074:	jmp    QWORD PTR [rip+0x47786fc6]        # 0x18779a040
   14001307a:	xor    esi,edi
   14001307c:	rcr    DWORD PTR [rdi+0x60],cl
   14001307f:	(bad)  
   140013080:	in     al,0x7b
   140013082:	rex.WRB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140013084:	(bad)  
   140013085:	push   rdi
   140013086:	ret    
   140013087:	adc    eax,0x1327b9de
   14001308c:	push   rdi
   14001308d:	mov    WORD PTR [rbp+0x6864c85e],fs
   140013093:	rex.WR
   140013094:	rex.RX or al,0x8d
   140013097:	test   al,0x92
   140013099:	jno    0x140013077
   14001309b:	ret    
   14001309c:	push   rbp
   14001309d:	xchg   edx,eax
   14001309e:	cmp    bh,BYTE PTR [rax]
   1400130a0:	rex.WXB movabs ds:0xabf17b1867a86390,al
   1400130aa:	imul   esp,DWORD PTR ds:[rcx+0x11],0x40804e91
   1400130b2:	neg    BYTE PTR [rdx+0x7be4847f]
   1400130b8:	jle    0x140013116
   1400130ba:	int    0x8e
   1400130bc:	std    
   1400130bd:	push   rax
   1400130be:	cmp    BYTE PTR [rsi],0xf1
   1400130c1:	shl    bl,1
   1400130c3:	sbb    ebx,DWORD PTR [rdi+0x61b1f07e]
   1400130c9:	pop    rsi
   1400130ca:	pop    rax
   1400130cb:	xor    eax,0xdcc92649
   1400130d0:	(bad)  
   1400130d1:	fstp   DWORD PTR [rdi-0x26]
   1400130d4:	push   rcx
   1400130d5:	hlt    
   1400130d6:	xchg   esi,eax
   1400130d7:	push   rdi
   1400130d8:	or     dl,BYTE PTR [rbx+0x73ef8c54]
   1400130de:	mov    dh,0x50
   1400130e0:	jns    0x140013126
   1400130e2:	jne    0x14001306e
   1400130e4:	call   0x1a1a6ab78
   1400130e9:	ss push rbp
   1400130eb:	sbb    BYTE PTR [rip+0x6713681c],0xba        # 0x1a714990e
   1400130f2:	movsxd ebx,DWORD PTR [rdx]
   1400130f4:	pushf  
   1400130f5:	adc    bh,BYTE PTR [rcx]
   1400130f7:	or     bl,ah
   1400130f9:	in     eax,dx
   1400130fa:	(bad)  
   1400130fc:	lods   eax,DWORD PTR ds:[rsi]
   1400130fd:	outs   dx,BYTE PTR ds:[rsi]
   1400130fe:	xchg   ebp,eax
   1400130ff:	js     0x14001317b
   140013101:	ins    DWORD PTR es:[rdi],dx
   140013102:	xor    al,0x51
   140013104:	mov    cl,bl
   140013106:	test   al,0x15
   140013108:	push   rbp
   140013109:	jno    0x1400130b5
   14001310b:	mov    ebx,0xbb2a88a8
   140013110:	jmp    QWORD PTR [rip+0x1b75157e]        # 0x15b764694
   140013116:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013117:	xchg   BYTE PTR [rdi-0x77],ch
   14001311a:	xchg   rbp,rax
   14001311c:	(bad)  
   14001311d:	(bad)  
   14001311e:	test   al,0x15
   140013120:	movabs ds:0x4400f60ca26a35a5,eax
   140013129:	pop    rbp
   14001312a:	sbb    al,BYTE PTR [rax+rcx*1-0x522ed1fd]
   140013131:	repz adc DWORD PTR [rdi+0x40bb7bff],esi
   140013138:	push   rax
   140013139:	adc    eax,0xb77e8e56
   14001313e:	scas   eax,DWORD PTR es:[rdi]
   14001313f:	cmp    DWORD PTR [rbp-0x4bfff552],edx
   140013145:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013146:	mov    ebx,0x6cfa8c82
   14001314b:	rex jb 0x14001314c
   14001314e:	(bad)  
   14001314f:	rex.RX xchg ebp,eax
   140013151:	shr    BYTE PTR [rcx+0x20],1
   140013154:	add    BYTE PTR [rbp+rdi*8-0x4ddf539f],dh
   14001315b:	adc    BYTE PTR [rsi-0x75341880],0xc1
   140013162:	xchg   ebp,eax
   140013163:	push   rsp
   140013164:	sub    DWORD PTR [rbp-0x2f],edx
   140013167:	sahf   
   140013168:	mov    BYTE PTR [rsi-0x31be3734],ah
   14001316e:	sub    eax,0x3000831c
   140013173:	leave  
   140013174:	mov    dh,0x23
   140013176:	mov    esi,edx
   140013178:	fidiv  WORD PTR [rbx+0x72]
   14001317b:	hlt    
   14001317c:	loope  0x1400131d3
   14001317e:	cmp    eax,0xf8bb2df9
   140013183:	test   bl,0x8b
   140013186:	mov    eax,DWORD PTR [rdi+0x24fdb7b2]
   14001318c:	(bad)  
   14001318d:	call   rbp
   14001318f:	(bad)  
   140013190:	xchg   ebp,eax
   140013191:	stc    
   140013192:	lahf   
   140013193:	inc    BYTE PTR [rdx]
   140013195:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013197:	fmulp  st(3),st
   140013199:	lea    eax,[rsi+0x45]
   14001319c:	out    0x86,eax
   14001319e:	in     eax,dx
   14001319f:	fidivr DWORD PTR [rax-0x2d03328e]
   1400131a5:	stos   BYTE PTR es:[rdi],al
   1400131a6:	push   rax
   1400131a7:	pop    rsp
   1400131a8:	cmc    
   1400131a9:	mov    esp,edx
   1400131ab:	addr32 (bad) 
   1400131ad:	leave  
   1400131ae:	rex.RB mov r14d,0x4c803c37
   1400131b4:	test   BYTE PTR [rax],dl
   1400131b6:	std    
   1400131b7:	jns    0x140013206
   1400131b9:	push   rbp
   1400131ba:	(bad)  
   1400131bb:	(bad)  
   1400131bc:	pop    rsi
   1400131bd:	jne    0x140013154
   1400131bf:	(bad)  
   1400131c0:	(bad)  
   1400131c1:	(bad)  
   1400131c2:	and    bh,bl
   1400131c4:	(bad)  
   1400131c5:	out    dx,eax
   1400131c6:	xchg   cl,bh
   1400131c8:	scas   al,BYTE PTR es:[rdi]
   1400131c9:	(bad)  
   1400131ca:	jno    0x140013158
   1400131cc:	rex.WRXB rol BYTE PTR [r11+0x3f0ccec7],0xfa
   1400131d4:	rcl    cl,0xad
   1400131d7:	rex.WXB jmp 0x14001321d
   1400131da:	retf   
   1400131db:	rex.WB sub bpl,r9b
   1400131de:	ret    0x9b92
   1400131e1:	(bad)
   1400131e4:	push   rdx
   1400131e5:	cwde   
   1400131e6:	xor    al,0x13
   1400131e8:	and    al,0x6
   1400131ea:	int3   
   1400131eb:	mov    edx,eax
   1400131ed:	xchg   DWORD PTR [rax-0x38],ebp
   1400131f0:	and    eax,0x919b503c
   1400131f5:	sbb    ebp,DWORD PTR [rbp-0x77]
   1400131f8:	ficomp WORD PTR [rbx+0x63]
   1400131fb:	mov    ebx,0xe3c98207
   140013200:	stos   DWORD PTR es:[rdi],eax
   140013201:	jrcxz  0x14001322b
   140013203:	jle    0x1400131d0
   140013205:	rex.WRB
   140013206:	rex.WRB
   140013207:	rex.WB stos QWORD PTR es:[rdi],rax
   140013209:	lods   eax,DWORD PTR ds:[rsi]
   14001320a:	add    DWORD PTR [rsi+rcx*8+0x5c],ebx
   14001320e:	fcomp  QWORD PTR [rdx+0x1f7707e8]
   140013214:	icebp  
   140013215:	idiv   BYTE PTR [rsi+0x850a890]
   14001321b:	in     eax,dx
   14001321c:	jbe    0x140013204
   14001321e:	adc    ecx,DWORD PTR [rcx+rsi*1+0x1]
   140013222:	enter  0xf2c7,0x55
   140013226:	xor    cl,dh
   140013228:	jl     0x1400131bd
   14001322a:	xchg   edi,eax
   14001322b:	cwde   
   14001322c:	cmp    al,0x42
   14001322e:	lods   al,BYTE PTR ds:[rsi]
   14001322f:	ins    DWORD PTR es:[rdi],dx
   140013230:	(bad)  
   140013231:	sbb    bl,0xb8
   140013234:	jl     0x14001320d
   140013236:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   140013238:	ins    BYTE PTR es:[rdi],dx
   140013239:	movabs ds:0xedbd303e9269fed6,eax
   140013242:	cmp    dh,bh
   140013244:	mov    dh,BYTE PTR [rbp+rdx*8+0x34]
   140013248:	sub    al,0x89
   14001324b:	rex.X
   14001324c:	rex.W (bad) 
   14001324e:	fwait
   14001324f:	add    DWORD PTR [rdx+0x41],ecx
   140013252:	mov    al,0x5d
   140013254:	or     DWORD PTR [rdx+rbx*4],eax
   140013257:	sti    
   140013258:	adc    rax,0xffffffff80544ca2
   14001325e:	push   0xffffffffaa91a00b
   140013263:	movabs al,cs:0x6f32296900222f62
   14001326d:	(bad)  
   14001326e:	(bad)  
   14001326f:	mov    ebx,DWORD PTR [rax-0x703bf264]
   140013275:	and    ch,BYTE PTR [rbp-0x21]
   140013278:	pmaddwd mm6,QWORD PTR [rbp-0x55]
   14001327c:	lods   eax,DWORD PTR ds:[rsi]
   14001327d:	xchg   edi,eax
   14001327e:	(bad)  
   14001327f:	mov    edx,0xf653a1f9
   140013284:	or     ecx,ebx
   140013286:	test   eax,0x7b35f57e
   14001328b:	int3   
   14001328c:	rex.WXB mov gs,WORD PTR [r14+r13*1]
   140013290:	(bad)  
   140013292:	jnp    0x14001326f
   140013294:	rex.WRXB xchg r10,rax
   140013296:	std    
   140013297:	scas   eax,DWORD PTR es:[rdi]
   140013298:	jg     0x1400132dc
   14001329a:	(bad)  
   14001329b:	out    dx,eax
   14001329c:	std    
   14001329d:	and    ebp,ecx
   14001329f:	jge    0x140013295
   1400132a1:	xchg   edi,eax
   1400132a2:	adc    edi,DWORD PTR [rcx+0x48ba2a78]
   1400132a8:	lods   al,BYTE PTR ds:[rsi]
   1400132a9:	movabs ds:0x3eab5a2c5ba83007,al
   1400132b2:	lock rex.RB
   1400132b4:	rex.RXB sbb r14d,DWORD PTR [r11+0x2bf22900]
   1400132bb:	clc    
   1400132bc:	cli    
   1400132bd:	jge    0x140013294
   1400132bf:	xor    DWORD PTR [rbx+rbp*2+0x2],edx
   1400132c3:	jno    0x140013268
   1400132c5:	imul   esi,DWORD PTR [rbp+0x3114551e],0x44
   1400132cc:	(bad)  
   1400132cd:	int3   
   1400132ce:	rcr    ebx,0x91
   1400132d1:	jge    0x14001329a
   1400132d3:	cmp    eax,eax
   1400132d5:	ja     0x140013296
   1400132d7:	push   rbp
   1400132d8:	mov    ecx,0xe1050737
   1400132dd:	mov    ecx,DWORD PTR [rdi-0xb82e161]
   1400132e3:	or     ecx,DWORD PTR [rdi+0x18da5d6c]
   1400132e9:	pop    rdx
   1400132ea:	xchg   ebx,eax
   1400132eb:	and    al,0xda
   1400132ed:	pop    rbx
   1400132ee:	fcomp  QWORD PTR [rcx-0xa]
   1400132f1:	xchg   esi,eax
   1400132f2:	ja     0x1400132d9
   1400132f4:	std    
   1400132f5:	xchg   ebp,eax
   1400132f6:	sbb    eax,0xb2a92705
   1400132fb:	rex.WB test BYTE PTR [r8+0x20a52201],cl
   140013302:	jns    0x1400132e5
   140013304:	add    DWORD PTR [rbp-0x106c3d6e],esi
   14001330a:	ss sbb al,0x13
   14001330d:	outs   dx,DWORD PTR ds:[rsi]
   14001330e:	push   rcx
   14001330f:	jo     0x140013295
   140013311:	mov    ecx,esi
   140013313:	jns    0x140013362
   140013315:	pop    rax
   140013316:	scas   eax,DWORD PTR es:[rdi]
   140013317:	(bad)  
   140013318:	fist   DWORD PTR [rcx+rax*4]
   14001331b:	cmp    al,0xb1
   14001331d:	lods   eax,DWORD PTR ds:[rsi]
   14001331e:	xchg   ebx,eax
   14001331f:	movabs ds:0x546a0af0d547d16b,eax
   140013328:	jmp    0x140013322
   14001332a:	(bad)  
   14001332b:	(bad)  
   14001332c:	je     0x14001336a
   14001332e:	rex.WXB
   14001332f:	gs pop sp
   140013332:	sahf   
   140013333:	push   rsp
   140013334:	adc    eax,0x7b47652a
   140013339:	sbb    ecx,ecx
   14001333b:	or     BYTE PTR [rbp+0xc],bl
   14001333e:	(bad)  
   14001333f:	int    0x76
   140013341:	popf   
   140013342:	xchg   esp,eax
   140013343:	rex.RXB xchg r11d,eax
   140013345:	sti    
   140013346:	cmp    dl,0x31
   140013349:	movsxd ebp,DWORD PTR [rcx-0x540cce1]
   14001334f:	mov    edi,0x8c7e5709
   140013354:	stos   DWORD PTR es:[rdi],eax
   140013355:	imul   eax,DWORD PTR [rdx],0x78
   140013358:	push   rsi
   140013359:	(bad)  
   14001335a:	test   al,0xb2
   14001335c:	sbb    edx,DWORD PTR [rax+0x4d]
   14001335f:	rex.WRXB shl BYTE PTR [r11+0x5b060105],1
   140013366:	(bad)  
   140013367:	fidiv  WORD PTR [rdx]
   140013369:	mov    DWORD PTR [rcx+0x1ba224],edi
   14001336f:	xchg   esi,eax
   140013370:	movabs eax,ds:0x233462c4b0ca4a30
   140013379:	xchg   ebp,eax
   14001337a:	(bad)
   14001337d:	(bad)  
   14001337e:	push   rcx
   14001337f:	cdq    
   140013380:	add    eax,DWORD PTR [rsi-0x67]
   140013383:	test   eax,0x6cfccb40
   140013388:	rex.WR
   140013389:	rex.WB scas al,BYTE PTR es:[rdi]
   14001338b:	(bad)  
   14001338c:	push   rdx
   14001338d:	fnstsw WORD PTR [rdi-0x55]
   140013390:	cmp    DWORD PTR [rsi],esi
   140013392:	ds je  0x140013347
   140013395:	cld    
   140013396:	cld    
   140013397:	jb     0x14001331f
   140013399:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001339a:	outs   dx,DWORD PTR ds:[rsi]
   14001339b:	fst    DWORD PTR [rbx+0x42d0f8bc]
   1400133a1:	jg     0x14001339a
   1400133a3:	retf   0xbc77
   1400133a6:	cmp    eax,0xa6de1bc1
   1400133ab:	pop    rbx
   1400133ac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400133ad:	mov    ss,WORD PTR [rip+0x65df89f2]        # 0x1a5e0bda5
   1400133b3:	(bad)  
   1400133b4:	jmp    0x1400133f5
   1400133b6:	rex.WR je 0x140013371
   1400133b9:	(bad)  
   1400133ba:	lea    esp,[rsi-0x56]
   1400133bd:	ficomp WORD PTR cs:[rax]
   1400133c0:	fstp   st(2)
   1400133c2:	fs clc 
   1400133c4:	lock xor ch,dh
   1400133c7:	fadd   QWORD PTR [rdx-0x632f85c8]
   1400133cd:	and    edx,DWORD PTR [rax-0x65]
   1400133d0:	sbb    dl,BYTE PTR [r15]
   1400133d3:	out    dx,al
   1400133d4:	jno    0x14001341d
   1400133d6:	jp     0x1400133db
   1400133d8:	mov    BYTE PTR [rdi+0x1e],dh
   1400133db:	rex
   1400133dc:	repnz mov dh,BYTE PTR [rdi]
   1400133df:	ret    0xfebc
   1400133e2:	lahf   
   1400133e3:	stos   BYTE PTR es:[rdi],al
   1400133e4:	cmp    DWORD PTR [rax+0x1b],edi
   1400133e7:	adc    al,0x84
   1400133e9:	push   rcx
   1400133ea:	push   rcx
   1400133eb:	(bad)  
   1400133ec:	add    eax,DWORD PTR [rdi+0x4f]
   1400133ef:	mov    esi,?
   1400133f1:	(bad)  
   1400133f2:	movabs eax,ds:0x2face591cdd5c363
   1400133fb:	sbb    DWORD PTR [rbp+0x7],0xfffffff2
   1400133ff:	inc    dl
   140013401:	rex.WX xchg rcx,rax
   140013403:	sub    eax,0x8936592d
   140013408:	push   rsp
   140013409:	push   rbx
   14001340a:	ja     0x140013469
   14001340c:	cmp    BYTE PTR [ebp-0x3c],al
   140013410:	(bad)  [rcx+rsi*8+0x1e232706]
   140013417:	icebp  
   140013418:	out    dx,eax
   140013419:	cmp    BYTE PTR [rsi+0x55],0x43
   14001341d:	and    ebp,DWORD PTR [rcx]
   14001341f:	fucomip st,st(5)
   140013421:	(bad)  
   140013422:	cwde   
   140013423:	cmp    dl,BYTE PTR [rbx-0x51]
   140013426:	stc    
   140013427:	enter  0xf38d,0xa6
   14001342b:	iret   
   14001342c:	mov    ecx,0x34dfff27
   140013431:	(bad)  
   140013432:	imul   ebx,DWORD PTR [rbp-0x59],0x1b
   140013436:	add    dl,bl
   140013438:	int    0x9d
   14001343a:	rex.WX pop rbp
   14001343c:	push   rcx
   14001343d:	add    BYTE PTR [rdi+0x1e],ch
   140013440:	cmp    al,0x5b
   140013442:	adc    BYTE PTR [rax+0x3d40f1d2],bh
   140013448:	mov    dl,0x18
   14001344a:	mov    ch,0xd1
   14001344c:	sbb    BYTE PTR [rbx-0xb31ec05],ch
   140013452:	in     eax,dx
   140013453:	rcl    BYTE PTR [rbp-0x9],1
   140013456:	add    DWORD PTR [rax+0x21],edi
   140013459:	xchg   ebp,eax
   14001345a:	rcr    cl,0x49
   14001345d:	and    al,0x8a
   14001345f:	rex.R push rbp
   140013461:	mov    DWORD PTR [rsi+rcx*8+0x10397a],edi
   140013468:	(bad)  
   140013469:	mov    dl,0x83
   14001346b:	or     DWORD PTR [rdx-0x68],esp
   14001346e:	xchg   esi,eax
   140013470:	lock xor edx,DWORD PTR [rsi]
   140013473:	cmp    BYTE PTR [rdi+0x55],ch
   140013476:	xchg   esi,eax
   140013477:	push   rbp
   140013478:	cmp    BYTE PTR [rcx],dh
   14001347a:	test   BYTE PTR [rcx+rbx*2+0x48],dl
   14001347e:	sub    eax,0xc0030019
   140013483:	out    dx,al
   140013484:	add    al,0x0
   140013486:	push   rbp
   140013487:	sbb    BYTE PTR [rbx+0x78],ah
   14001348a:	xchg   ebx,eax
   14001348b:	mov    BYTE PTR [rdx],cl
   14001348d:	and    cl,BYTE PTR [rax]
   14001348f:	(bad)  
   140013490:	stc    
   140013491:	in     al,dx
   140013492:	jae    0x1400134ec
   140013494:	fcomp  QWORD PTR [rdx]
   140013496:	mov    ebp,0xa7151b41
   14001349b:	jo     0x140013498
   14001349d:	and    al,0x25
   14001349f:	and    dl,BYTE PTR [rdx+0x3f565cb5]
   1400134a5:	jl     0x140013459
   1400134a7:	clc    
   1400134a8:	jl     0x1400134e9
   1400134aa:	div    r10b
   1400134ad:	sbb    eax,0x4b2dd0e6
   1400134b2:	out    0xe0,al
   1400134b4:	repnz rcr DWORD PTR [rbx+0x17],0xf5
   1400134b9:	in     eax,dx
   1400134ba:	call   FWORD PTR [rsi]
   1400134bc:	hlt    
   1400134bd:	mov    dh,0x7f
   1400134bf:	stos   DWORD PTR es:[rdi],eax
   1400134c0:	jmp    0x140013451
   1400134c2:	jg     0x14001352d
   1400134c4:	(bad)  
   1400134c5:	pop    rdi
   1400134c6:	cld    
   1400134c7:	push   rax
   1400134c8:	retf   0xfd0f
   1400134cb:	gs (bad) 
   1400134cd:	rex.WRXB sbb rax,0xffffffffb5aa8c75
   1400134d3:	push   rsp
   1400134d4:	outs   dx,DWORD PTR ds:[rsi]
   1400134d5:	push   rsp
   1400134d6:	out    dx,al
   1400134d7:	(bad)  
   1400134d8:	pop    rdx
   1400134d9:	push   rdi
   1400134da:	xor    DWORD PTR [rsi],0x7ca36307
   1400134e0:	sbb    BYTE PTR [rax+0x6b],dl
   1400134e3:	add    eax,0xea3ffb5a
   1400134e8:	nop
   1400134e9:	movabs eax,ds:0xcee046fe5e49de4b
   1400134f2:	outs   dx,DWORD PTR ds:[rsi]
   1400134f3:	xlat   BYTE PTR ds:[rbx]
   1400134f4:	je     0x1400134f5
   1400134f6:	lods   eax,DWORD PTR ds:[rsi]
   1400134f7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400134f8:	(bad)  
   1400134f9:	stos   BYTE PTR es:[rdi],al
   1400134fa:	add    BYTE PTR [rsi-0x1d160d84],bh
   140013500:	retf   
   140013501:	rex.WRXB sahf 
   140013503:	int    0xbf
   140013505:	lock call 0xe9286694
   14001350b:	hlt    
   14001350c:	xchg   edi,eax
   14001350d:	jbe    0x1400134f6
   14001350f:	retf   
   140013510:	mov    ebx,0xcadef256
   140013515:	mov    ss,WORD PTR [rdx+0x2b0c9589]
   14001351b:	adc    DWORD PTR [rip+0x13aee14c],0xd9d57bea        # 0x153b01671
   140013525:	sub    eax,0x8d2df600
   14001352a:	mov    dh,0xb5
   14001352c:	(bad)  
   14001352d:	xrelease mov BYTE PTR [rax+0x23],bh
   140013531:	(bad)
   140013535:	rex.XB xlat BYTE PTR ds:[rbx]
   140013537:	in     eax,dx
   140013538:	cs out 0xe4,eax
   14001353b:	in     eax,dx
   14001353c:	jb     0x14001351c
   14001353e:	test   DWORD PTR [rbx],edx
   140013540:	movsxd esi,DWORD PTR [rbp+0x6eff515f]
   140013546:	cmp    al,0x46
   140013548:	rex.W fucompp 
   14001354b:	lock loop 0x1400135c9
   14001354e:	(bad)  
   14001354f:	and    esp,DWORD PTR [rdi+0x4e]
   140013552:	or     BYTE PTR [rcx+0x28943e96],ch
   140013558:	rex.WRB
   140013559:	es (bad) 
   14001355b:	outs   dx,BYTE PTR ds:[rsi]
   14001355c:	and    BYTE PTR [rdx],dl
   14001355e:	out    0x3,eax
   140013560:	test   al,0xb
   140013562:	adc    DWORD PTR [rbx+riz*8-0x71725645],eax
   140013569:	sar    DWORD PTR [rsi-0x67e1369d],cl
   14001356f:	mov    ebp,0xdfc4066d
   140013574:	shl    ah,0xee
   140013577:	ins    DWORD PTR es:[rdi],dx
   140013578:	shl    BYTE PTR [rbp-0x55bbf366],1
   14001357e:	rex.W fld QWORD PTR [rdi-0x27]
   140013582:	sub    cl,BYTE PTR [rbx+rax*1]
   140013585:	ds xchg esi,eax
   140013587:	xor    ebx,DWORD PTR [rbp+0x13]
   14001358a:	jo     0x14001360b
   14001358c:	xlat   BYTE PTR ds:[rbx]
   14001358d:	fiadd  DWORD PTR [rax-0x70f39e00]
   140013593:	adc    eax,DWORD PTR [rbx+0x17]
   140013596:	rex.WX movsxd rbx,DWORD PTR [rsi+0x54175292]
   14001359d:	(bad)  
   14001359e:	pop    rax
   14001359f:	shl    BYTE PTR [rdx],1
   1400135a1:	or     ebx,DWORD PTR [rcx]
   1400135a3:	and    ah,BYTE PTR [rbp+0x29]
   1400135a6:	xor    eax,0xce8b04d5
   1400135ab:	and    DWORD PTR [rax],ebp
   1400135ad:	test   eax,0x199366b1
   1400135b2:	and    ecx,DWORD PTR [rdi]
   1400135b4:	add    dl,BYTE PTR [rsi]
   1400135b6:	rex.R xchg esi,eax
   1400135b8:	add    DWORD PTR [rcx],esp
   1400135ba:	xchg   BYTE PTR [rip+0x5044a1df],dl        # 0x19045d79f
   1400135c0:	(bad)  
   1400135c1:	repz sbb al,0xa9
   1400135c4:	pop    rax
   1400135c5:	nop
   1400135c6:	jecxz  0x1400135a9
   1400135c9:	pop    rsp
   1400135ca:	sbb    BYTE PTR [rsi],dl
   1400135cc:	(bad)  
   1400135cd:	fbstp  TBYTE PTR [rdi-0x4a]
   1400135d0:	cmp    al,0x76
   1400135d2:	fistp  QWORD PTR [rcx+0x79bed8f2]
   1400135d8:	pop    rdx
   1400135d9:	mov    esi,0xb8392563
   1400135de:	ja     0x14001356e
   1400135e0:	ja     0x140013610
   1400135e2:	fbstp  TBYTE PTR [rdx-0x19]
   1400135e5:	adc    ch,BYTE PTR [rsi-0x47]
   1400135e8:	adc    edi,eax
   1400135ea:	sahf   
   1400135eb:	call   FWORD PTR [rsi+0x64]
   1400135ee:	cmp    al,0x92
   1400135f0:	rcl    DWORD PTR [rbx-0x270b68f1],1
   1400135f6:	out    0x12,eax
   1400135f8:	cmp    al,0xfc
   1400135fa:	xchg   edi,eax
   1400135fb:	mov    DWORD PTR [rsi+0x38],ebx
   1400135fe:	or     eax,0xaaa78b9
   140013603:	(bad)  
   140013604:	test   DWORD PTR [rcx],eax
   140013606:	pop    rdx
   140013607:	fwait
   140013608:	cmc    
   140013609:	xchg   ecx,eax
   14001360a:	xor    eax,esp
   14001360c:	and    DWORD PTR [rdx],0xe4ed78b0
   140013612:	(bad)  
   140013613:	cwde   
   140013614:	(bad)  
   140013615:	jge    0x14001364a
   140013617:	js     0x140013600
   140013619:	rex.B cwde 
   14001361b:	rex.XB (bad) 
   14001361d:	sbb    esp,0xb7644afc
   140013623:	mov    esi,0x75d835ca
   140013628:	sub    edi,DWORD PTR [rip+0x3c82f676]        # 0x17c842ca4
   14001362e:	hlt    
   14001362f:	clc    
   140013630:	cmp    ebx,edi
   140013632:	lock icebp 
   140013634:	xor    esp,ebp
   140013636:	adc    BYTE PTR [rcx-0x2f],ch
   140013639:	fwait
   14001363a:	pop    rdi
   14001363b:	sub    DWORD PTR [rsi],edx
   14001363d:	(bad)  
   14001363e:	fcomp  QWORD PTR [rcx-0xa]
   140013641:	xchg   esi,eax
   140013642:	xchg   edi,eax
   140013643:	rex.WX add cl,BYTE PTR [rcx]
   140013646:	or     DWORD PTR [rbp+0x9109112],0x4a44ca14
   140013650:	push   rdx
   140013651:	pop    rcx
   140013652:	mul    DWORD PTR [rcx-0x386cb9e6]
   140013658:	jne    0x140013634
   14001365a:	push   0xffffffffb34edf8a
   14001365f:	nop
   140013660:	(bad)  
   140013661:	and    al,0xb3
   140013663:	push   rbx
   140013664:	out    0xf6,eax
   140013666:	push   0x5b
   140013668:	int3   
   140013669:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001366a:	adc    edx,edi
   14001366c:	outs   dx,BYTE PTR ds:[rsi]
   14001366d:	sbb    eax,0xa804c533
   140013672:	mov    ss,WORD PTR [rdi+0x21]
   140013675:	shl    bh,0x0
   140013678:	pop    rax
   140013679:	and    DWORD PTR [rip+0x75ba9521],esi        # 0x1b5bbcba0
   14001367f:	fild   QWORD PTR [rcx+0x150a0079]
   140013685:	and    eax,0xaa80311f
   14001368a:	lods   al,BYTE PTR ds:[rsi]
   14001368c:	lods   eax,DWORD PTR ds:[rsi]
   14001368d:	movabs ds:0x6a20093225de2200,eax
   140013696:	ins    DWORD PTR es:[rdi],dx
   140013697:	pushf  
   140013698:	(bad)  
   140013699:	mov    al,0x5d
   14001369b:	(bad)  
   14001369c:	lahf   
   14001369d:	push   rsp
   14001369e:	xchg   ebx,eax
   14001369f:	pop    rdx
   1400136a0:	xchg   edi,eax
   1400136a1:	rex.RB int 0xdc
   1400136a4:	gs hlt 
   1400136a6:	mov    bh,0x6d
   1400136a8:	jge    0x14001370c
   1400136aa:	(bad)  
   1400136ab:	fcom   DWORD PTR [rsi]
   1400136ad:	pop    rbp
   1400136ae:	sbb    eax,0xaa1c6027
   1400136b3:	add    ah,BYTE PTR [rax+0x75554d0]
   1400136b9:	push   rsi
   1400136ba:	in     al,dx
   1400136bb:	rcl    BYTE PTR [rsi-0x219ec09b],0xb0
   1400136c2:	rex ret 0x8904
   1400136c6:	push   rbp
   1400136c7:	mov    al,0xa6
   1400136c9:	(bad)  
   1400136ca:	xlat   BYTE PTR ds:[rbx]
   1400136cb:	sub    al,0xb6
   1400136cd:	pop    rax
   1400136ce:	add    DWORD PTR [rax+0x33743288],0x2c5a7049
   1400136d8:	cmc    
   1400136d9:	lods   al,BYTE PTR ds:[rsi]
   1400136da:	pop    rdx
   1400136db:	test   eax,edx
   1400136dd:	pop    rsi
   1400136de:	and    DWORD PTR [rax+rax*4],ebp
   1400136e1:	enter  0x6010,0xa8
   1400136e5:	mov    al,0x46
   1400136e7:	adc    eax,0xe52996f3
   1400136ec:	(bad)  
   1400136ed:	adc    dl,BYTE PTR cs:[rax+0x10]
   1400136f1:	push   rcx
   1400136f2:	outs   dx,BYTE PTR ds:[rsi]
   1400136f3:	cwde   
   1400136f4:	rex.WX add rax,0x70307b2c
   1400136fa:	(bad)  
   1400136fb:	mov    dl,0xe4
   1400136fd:	cmp    edx,DWORD PTR [rcx+rbx*1-0x6eef7afe]
   140013704:	test   al,0xaa
   140013706:	adc    al,BYTE PTR [rcx+0x1c]
   140013709:	adc    eax,DWORD PTR [rcx]
   14001370b:	push   rax
   14001370c:	add    DWORD PTR [rcx],edx
   14001370e:	jmp    0xdc6d6cbc
   140013713:	pop    rsi
   140013714:	sub    ecx,DWORD PTR [rsi-0x416a75fe]
   14001371a:	sbb    esp,ebx
   14001371c:	mov    esi,0x3fddec9c
   140013721:	outs   dx,DWORD PTR ds:[rsi]
   140013722:	jbe    0x140013712
   140013724:	cdq    
   140013725:	jmp    0x140013716
   140013727:	cwde   
   140013728:	mov    ebx,0xb70caeed
   14001372d:	fld    QWORD PTR [rip+0xffffffffc587f9bc]        # 0x1058930ef
   140013733:	mov    esp,DWORD PTR [rdx]
   140013735:	fidivr DWORD PTR [rbx+rdi*2]
   140013738:	(bad)  
   140013739:	cwde   
   14001373a:	or     al,0x57
   14001373c:	sar    esp,cl
   14001373e:	hlt    
   14001373f:	jrcxz  0x140013777
   140013741:	mov    ebx,0x5b632278
   140013746:	mov    al,0xaa
   140013748:	(bad)  
   140013749:	(bad)  
   14001374a:	xchg   edi,edi
   14001374c:	(bad)  
   14001374d:	rol    DWORD PTR [rdx],1
   14001374f:	repz rcl bh,cl
   140013752:	imul   ebx,DWORD PTR [rsi-0x10484bf4],0xc160f308
   14001375c:	pop    rbx
   14001375d:	(bad)  
   14001375e:	in     al,0x75
   140013760:	rex.B ret 0x1753
   140013764:	(bad)  
   140013765:	in     al,0xd8
   140013767:	shr    ebx,cl
   140013769:	cli    
   14001376a:	(bad)  
   14001376b:	mov    ecx,0x56b13975
   140013770:	pop    rdx
   140013771:	fwait
   140013772:	or     al,0xd4
   140013774:	mov    ebx,DWORD PTR fs:[rdx+0x26837cde]
   14001377b:	xor    cl,0x8a
   14001377e:	rex.WRB (bad) 
   140013780:	(bad)  
   140013781:	and    esp,eax
   140013783:	push   rax
   140013784:	xchg   BYTE PTR [rdx],cl
   140013786:	test   eax,0x4f1f225a
   14001378b:	and    BYTE PTR [rbp+0x74cbf044],dh
   140013791:	xchg   ebx,eax
   140013792:	js     0x1400137d7
   140013794:	rex.R
   140013795:	rex xchg ebp,eax
   140013797:	icebp  
   140013798:	lods   al,BYTE PTR ds:[rsi]
   140013799:	jo     0x140013762
   14001379b:	xchg   dh,ah
   14001379d:	rex.WB js 0x1400137d9
   1400137a0:	mov    dl,BYTE PTR [rsi+0x22]
   1400137a3:	rcl    BYTE PTR [rbp*8-0x16297227],1
   1400137aa:	movsxd esi,DWORD PTR [rdx-0x4a569dc7]
   1400137b0:	(bad)  
   1400137b1:	dec    bl
   1400137b3:	out    0x73,eax
   1400137b5:	xor    QWORD PTR [rcx],r8
   1400137b8:	mov    ah,0x4a
   1400137ba:	cmc    
   1400137bb:	rex.RB xchg r12d,eax
   1400137bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400137be:	(bad)  
   1400137bf:	(bad)  
   1400137c0:	rex.RX (bad) 
   1400137c2:	jmp    0x140013810
   1400137c4:	xor    DWORD PTR [rip+0xffffffffeb710154],esp        # 0x12b72391e
   1400137ca:	(bad)
   1400137cd:	xchg   r12d,eax
   1400137cf:	lods   al,BYTE PTR ds:[rsi]
   1400137d0:	sub    eax,0xf8d4d80d
   1400137d5:	sbb    al,0xfc
   1400137d7:	add    al,0x5d
   1400137d9:	rex.WRX shl BYTE PTR [rdx+0x1c],0xe7
   1400137de:	add    DWORD PTR [rbx+rdx*2-0xb],ecx
   1400137e2:	(bad)  
   1400137e3:	xbegin 0x110c227da
   1400137e9:	mov    cl,0xe4
   1400137eb:	jl     0x14c513250
   1400137f1:	add    al,0x71
   1400137f3:	rex.R (bad) 
   1400137f5:	pop    rbx
   1400137f6:	hlt    
   1400137f7:	cmc    
   1400137f8:	(bad)  
   1400137f9:	add    BYTE PTR [rdi],0x0
   1400137fc:	movabs al,ds:0x3aaa56f35eb22dc8
   140013805:	outs   dx,DWORD PTR ds:[rsi]
   140013806:	rex.WXB movabs r11,0xdaa6e5c339ec2ca7
   140013810:	push   rdx
   140013811:	mov    BYTE PTR [rbp+0x49],cl
   140013814:	adc    BYTE PTR [rbp-0x4f],dl
   140013817:	fistp  WORD PTR [r15-0x3d7f6618]
   14001381e:	out    dx,al
   14001381f:	outs   dx,DWORD PTR ds:[rsi]
   140013820:	(bad)  
   140013821:	sub    DWORD PTR [rdx-0x5b],esp
   140013824:	and    al,0x95
   140013826:	mov    eax,DWORD PTR [rsi+0x4bc8a094]
   14001382c:	enter  0x93a,0x76
   140013830:	sub    cl,dl
   140013832:	rex push rbp
   140013834:	sti    
   140013835:	(bad)  
   140013836:	rex.WX
   140013837:	xchg   rcx,rax
   140013839:	rex shl DWORD PTR [rbp+riz*1+0x23],0xa6
   14001383f:	xchg   esp,eax
   140013840:	cmp    BYTE PTR [rcx+0x740d5152],0x9f
   140013847:	(bad)  
   140013848:	es xchg esp,eax
   14001384a:	nop
   14001384b:	and    eax,0x12076582
   140013850:	add    ch,BYTE PTR [rax-0x7c3d1ddb]
   140013856:	push   rbx
   140013857:	rex.WB push r8
   140013859:	and    eax,0x210412e2
   14001385e:	addr32 (bad) 
   140013860:	or     BYTE PTR [rcx],ch
   140013862:	pop    rcx
   140013863:	adc    ah,dh
   140013865:	cdq    
   140013866:	int    0xd2
   140013868:	fidivr WORD PTR [rbx-0x1f9963af]
   14001386e:	xchg   esp,eax
   14001386f:	adc    dh,BYTE PTR [rdi+rax*2-0x61]
   140013873:	sti    
   140013874:	sti    
   140013875:	out    0xcc,eax
   140013877:	loop   0x140013857
   140013879:	mov    ecx,0x80d77e64
   14001387e:	xchg   edi,eax
   14001387f:	push   rdx
   140013880:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013881:	test   DWORD PTR fs:[rip+0xffffffff8000ed37],0x845796ec        # 0xc00225c3
   14001388c:	push   rax
   14001388d:	rcl    DWORD PTR [rip+0x1f6d48b],1        # 0x141f80d1e
   140013893:	ins    BYTE PTR es:[rdi],dx
   140013894:	in     eax,0x32
   140013896:	pop    rsp
   140013897:	(bad)  
   140013898:	rex.WB jle 0x140013919
   14001389b:	retf   
   14001389c:	out    0x97,al
   14001389e:	(bad)  
   14001389f:	push   rdx
   1400138a0:	sahf   
   1400138a1:	pop    rcx
   1400138a2:	(bad)  
   1400138a3:	repnz (bad) 
   1400138a5:	(bad)  
   1400138a6:	in     al,0x85
   1400138a8:	add    cl,BYTE PTR [rcx]
   1400138aa:	ror    BYTE PTR [rbx+0x60],1
   1400138ad:	cli    
   1400138ae:	fld    DWORD PTR es:[rcx]
   1400138b1:	xchg   ebx,eax
   1400138b2:	cmp    ch,BYTE PTR [rdi-0x79aa54c3]
   1400138b8:	(bad)  
   1400138b9:	add    eax,0x90c1de30
   1400138be:	rol    BYTE PTR [rdx],0x6a
   1400138c1:	add    bl,dl
   1400138c3:	or     ah,bh
   1400138c5:	add    cl,ch
   1400138c7:	rex.WX adc BYTE PTR [rax-0x44ec0c09],0x85
   1400138cf:	pop    rbx
   1400138d0:	jl     0x140013854
   1400138d2:	xchg   esi,eax
   1400138d3:	rex.WRXB (bad) 
   1400138d5:	(bad)  
   1400138d6:	scas   eax,DWORD PTR es:[rdi]
   1400138d7:	adc    eax,0xea732b91
   1400138dc:	mov    ch,0x7
   1400138de:	jo     0x14001389c
   1400138e0:	enter  0x45a,0x6
   1400138e4:	in     al,0xf9
   1400138e6:	cmp    eax,0x2af0906
   1400138eb:	push   0x5969cce4
   1400138f0:	(bad)  
   1400138f1:	pop    rbp
   1400138f2:	movabs ds:0x76dcf1865c3a69b6,eax
   1400138fb:	(bad)  
   1400138fc:	(bad)  
   1400138fd:	xchg   esi,eax
   1400138fe:	pop    rcx
   1400138ff:	rex.RB pop r8
   140013901:	rex.R pop rsp
   140013903:	sbb    BYTE PTR [rax+0x55542f15],dh
   140013909:	push   rsi
   14001390a:	popf   
   14001390b:	ret    0xcec0
   14001390e:	xor    al,0x30
   140013910:	mov    dh,0x2c
   140013912:	lea    esi,[rbp-0xcd75b1d]
   140013918:	and    al,0x2d
   14001391a:	(bad)  
   14001391b:	or     eax,0xa6455afb
   140013920:	fwait
   140013921:	add    BYTE PTR [rbp-0x6f],al
   140013924:	add    cl,BYTE PTR [rax-0x25]
   140013927:	iret   
   140013928:	sub    cl,0x4c
   14001392b:	fisub  WORD PTR [rip+0xe2663f5]        # 0x14e279d26
   140013931:	int3   
   140013932:	pop    rbp
   140013933:	clc    
   140013934:	rex.WRXB or QWORD PTR [r8],r12
   140013937:	rex.RXB or eax,0xe030ed02
   14001393d:	mov    bl,0xa2
   14001393f:	scas   eax,DWORD PTR es:[rdi]
   140013940:	sub    eax,DWORD PTR [rax]
   140013942:	mov    esp,0x5f6efbe7
   140013947:	std    
   140013948:	rcr    edi,0xfd
   14001394b:	retf   0xf1d9
   14001394e:	xor    bh,bl
   140013950:	xlat   BYTE PTR ds:[rbx]
   140013951:	add    al,BYTE PTR [rax]
   140013953:	and    ebp,DWORD PTR [rdx-0x3c275af5]
   140013959:	pushf  
   14001395a:	out    0xe7,eax
   14001395c:	and    DWORD PTR [rsi-0x6c],esi
   14001395f:	sbb    dh,BYTE PTR [rsi+0x2aa1cd04]
   140013965:	(bad)  
   140013966:	(bad)  
   140013967:	xchg   ecx,eax
   140013968:	rex.WX stos QWORD PTR es:[rdi],rax
   14001396a:	jae    0x14001398d
   14001396c:	(bad)  
   14001396d:	adc    eax,0x705009a1
   140013972:	adc    edi,DWORD PTR [rsi]
   140013974:	(bad)  
   140013975:	stos   BYTE PTR es:[rdi],al
   140013976:	scas   al,BYTE PTR es:[rdi]
   140013977:	rex.B
   140013978:	rex.WB or al,0x68
   14001397b:	rex.WRB
   14001397c:	mov    eax,DWORD PTR [r10]
   14001397f:	int3   
   140013980:	adc    esi,DWORD PTR [rax]
   140013982:	adc    BYTE PTR [rax+0x5f],0x89
   140013986:	sti    
   140013987:	and    BYTE PTR [rbp+0x55],cl
   14001398a:	leave  
   14001398b:	nop
   14001398c:	and    BYTE PTR [rcx-0x40],dl
   14001398f:	rex xchg ecx,eax
   140013991:	adc    dl,BYTE PTR [rcx+0x42]
   140013994:	test   BYTE PTR [rax+riz*4],al
   140013997:	test   al,ah
   140013999:	(bad)  
   14001399a:	mov    dh,al
   14001399c:	mov    esi,edi
   14001399e:	rex.WRX xor r10b,BYTE PTR [rdx+0x2c082c82]
   1400139a5:	rex.R push 0x9
   1400139a8:	mov    al,0x64
   1400139aa:	(bad)  
   1400139ab:	add    dl,BYTE PTR [rdx+0x12]
   1400139ae:	jno    0x140013979
   1400139b0:	add    BYTE PTR [rip+0x128524a1],0xa1        # 0x152865e58
   1400139b7:	and    al,0x40
   1400139b9:	lods   eax,DWORD PTR ds:[rsi]
   1400139ba:	rex.RXB jrcxz 0x1400139b0
   1400139bd:	fwait
   1400139be:	(bad)  
   1400139bf:	iret   
   1400139c0:	outs   dx,DWORD PTR ds:[rsi]
   1400139c1:	xchg   esi,eax
   1400139c2:	imul   eax,eax,0xfffffff8
   1400139c5:	adc    al,BYTE PTR [rcx+0x4f]
   1400139c8:	jb     0x14001396f
   1400139ca:	rex.WR xchg rbx,rax
   1400139cc:	out    dx,al
   1400139cd:	pop    rdi
   1400139ce:	rex.W (bad) 
   1400139d0:	cli    
   1400139d1:	or     DWORD PTR [rdi],esp
   1400139d3:	(bad)  
   1400139d5:	jb     0x14001399c
   1400139d7:	and    eax,0x7e62ec74
   1400139dc:	or     DWORD PTR [rsi-0x6b],ebp
   1400139df:	nop
   1400139e0:	push   0x20
   1400139e2:	test   eax,0x4d942b28
   1400139e7:	add    al,BYTE PTR [rbx]
   1400139e9:	nop
   1400139ea:	add    DWORD PTR [rip+0x60146a03],0xa3005940        # 0x1a015a3f7
   1400139f4:	(bad)  
   1400139f5:	mov    bh,0x62
   1400139f7:	add    BYTE PTR [rdx+rcx*1+0x62],ah
   1400139fb:	add    ah,BYTE PTR [rip+0x10589280]        # 0x15059cc81
   140013a01:	rex
   140013a02:	rex.RX fld QWORD PTR [rdx+0x70aeacac]
   140013a09:	pop    rsi
   140013a0a:	loop   0x140013a09
   140013a0c:	sbb    eax,0xad9c10a0
   140013a11:	push   rbp
   140013a12:	adc    DWORD PTR [rip+0x4ca00158],esp        # 0x18ca13b70
   140013a18:	and    al,0x5a
   140013a1a:	add    DWORD PTR [rbx],eax
   140013a1c:	sub    esp,eax
   140013a1e:	add    DWORD PTR [rbp-0x12854b95],0xffffffc0
   140013a25:	or     eax,0xea948744
   140013a2a:	lock movabs ds:0x3fe4985a486bd9a1,al
   140013a34:	xchg   edx,eax
   140013a35:	mov    dh,0x11
   140013a37:	shr    al,1
   140013a39:	cdq    
   140013a3a:	sub    al,BYTE PTR [rdi]
   140013a3c:	movabs eax,ds:0x54556ca4d69c001b
   140013a45:	add    BYTE PTR [rdi-0x4f5d5c30],dl
   140013a4b:	sub    eax,0x87abf000
   140013a50:	test   al,0x4e
   140013a52:	scas   al,BYTE PTR es:[rdi]
   140013a53:	out    0xe7,eax
   140013a55:	adc    cl,BYTE PTR [rax-0x3cf554d4]
   140013a5b:	(bad)  
   140013a5c:	(bad)  
   140013a5d:	pop    rdx
   140013a5e:	movabs ds:0x44897426ceb85856,eax
   140013a67:	frstor [rsi]
   140013a69:	or     BYTE PTR [rax-0x59],0x9
   140013a6d:	mov    al,0x1d
   140013a6f:	or     ch,BYTE PTR [rbp-0x74]
   140013a72:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013a73:	jl     0x140013ad5
   140013a75:	repnz add cl,BYTE PTR [rbp+0x0]
   140013a79:	sub    BYTE PTR [rax],dh
   140013a7b:	test   eax,0xd52b3ff2
   140013a80:	(bad)  
   140013a81:	rcl    bh,1
   140013a83:	pop    rbx
   140013a84:	add    esp,DWORD PTR [rax+0x5b]
   140013a87:	out    0x3f,al
   140013a89:	rex.RXB
   140013a8a:	rex.WB out dx,eax
   140013a8c:	(bad)  
   140013a8d:	xchg   BYTE PTR [rbx+0x7be60c63],bl
   140013a93:	shr    DWORD PTR [rsi],1
   140013a95:	rex.WRB
   140013a96:	rex.RB je 0x140013ae0
   140013a99:	scas   al,BYTE PTR es:[rdi]
   140013a9a:	jp     0x140013a23
   140013a9c:	rex.WX sub QWORD PTR [rdx+0x64],rax
   140013aa0:	cwde   
   140013aa1:	jmp    0x191023e28
   140013aa6:	repnz lock stos BYTE PTR es:[rdi],al
   140013aa9:	and    al,BYTE PTR [rsp+rcx*8+0x5a]
   140013aad:	fistp  DWORD PTR [rdi-0x12]
   140013ab0:	rex.RB push r12
   140013ab2:	add    bh,BYTE PTR ds:[rdi+0x51290ddd]
   140013ab9:	add    eax,0x83940936
   140013abe:	int    0x2a
   140013ac0:	mov    esi,esi
   140013ac2:	xchg   ebp,eax
   140013ac3:	sub    DWORD PTR [rcx],esp
   140013ac5:	push   rax
   140013ac6:	or     dl,BYTE PTR [rax+0x2]
   140013ac9:	(bad)  
   140013aca:	push   rsp
   140013acb:	mov    DWORD PTR [rbx],edx
   140013acd:	test   DWORD PTR [rax+riz*1-0x32],esp
   140013ad1:	add    dl,ch
   140013ad3:	or     DWORD PTR [rax+0x53dcccf],ebp
   140013ad9:	xor    dh,BYTE PTR [rsi+0x9]
   140013adc:	out    dx,al
   140013add:	(bad)  
   140013ade:	sbb    al,0x1c
   140013ae0:	mov    ah,BYTE PTR [rdi]
   140013ae2:	(bad)  
   140013ae3:	fs sbb al,0x38
   140013ae6:	fadd   DWORD PTR [rdx+rax*4+0x1d74b2ab]
   140013aed:	int    0xa4
   140013aef:	loop   0x140013a98
   140013af1:	shr    DWORD PTR [rdx],0xbb
   140013af4:	pop    r14
   140013af6:	adc    ah,BYTE PTR [rax]
   140013af8:	rex.WR sub BYTE PTR [rax+0x60],r12b
   140013afc:	test   eax,0x77272584
   140013b01:	sub    eax,0x244a9785
   140013b06:	add    al,0x91
   140013b08:	xchg   ebx,eax
   140013b09:	stos   DWORD PTR es:[rdi],eax
   140013b0a:	mov    ecx,0x9d48d110
   140013b0f:	ja     0x140013ada
   140013b11:	out    0xc0,eax
   140013b13:	test   BYTE PTR [rdx+0x42],bl
   140013b16:	add    BYTE PTR [rcx+0x3d],ch
   140013b19:	mov    bl,0xdc
   140013b1b:	cdq    
   140013b1c:	and    BYTE PTR [rdx-0x6b],dl
   140013b1f:	and    al,0x22
   140013b21:	(bad)  
   140013b22:	push   rbx
   140013b23:	xor    BYTE PTR [rsi],ch
   140013b25:	cs rex.RXB (bad) 
   140013b28:	je     0x140013b33
   140013b2a:	xchg   BYTE PTR [rbp+0x33],dh
   140013b2d:	xchg   esi,eax
   140013b2e:	cdq    
   140013b2f:	rol    BYTE PTR [rdx],0x30
   140013b32:	sbb    rax,0x401b13a3
   140013b38:	sbb    DWORD PTR [rdx+0x24],ecx
   140013b3b:	stos   BYTE PTR es:[rdi],al
   140013b3c:	mov    DWORD PTR [rdx],ebp
   140013b3e:	and    eax,0xefb81a80
   140013b43:	add    al,0x44
   140013b45:	mov    DWORD PTR [rdi+0x1f],esp
   140013b48:	shl    BYTE PTR [rdx],cl
   140013b4a:	cmp    BYTE PTR [rdi-0x6b],ah
   140013b4d:	xor    BYTE PTR [r8],spl
   140013b50:	jne    0x140013ba7
   140013b52:	pushf  
   140013b53:	mov    DWORD PTR [rsp+rcx*2+0x4613fd9d],edx
   140013b5a:	sbb    al,BYTE PTR [rcx-0x796cc23c]
   140013b60:	adc    al,0x61
   140013b62:	jmp    0x140013b98
   140013b64:	(bad)  
   140013b65:	add    dh,ch
   140013b67:	ja     0x140013b4e
   140013b69:	push   rdi
   140013b6a:	rex.B xor eax,0xb81ea960
   140013b70:	adc    al,0x7b
   140013b72:	(bad)  
   140013b73:	(bad)  
   140013b74:	adc    BYTE PTR [rcx-0x5b],cl
   140013b77:	rex
   140013b78:	rex.R not edx
   140013b7b:	movabs al,ds:0xab3d4cdc01314c11
   140013b84:	and    al,0x2
   140013b86:	pop    rax
   140013b87:	rex.WXB (bad) 
   140013b89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013b8a:	xchg   ebp,eax
   140013b8b:	(bad)  
   140013b8c:	and    edx,ecx
   140013b8e:	in     al,dx
   140013b8f:	(bad)  
   140013b90:	(bad)  
   140013b91:	(bad)  
   140013b92:	xor    eax,0x2ac066bc
   140013b97:	(bad)  
   140013b98:	xor    eax,DWORD PTR [rdx]
   140013b9a:	test   DWORD PTR [rbp+0x39],ebp
   140013b9d:	and    BYTE PTR ss:[rsi-0x1a3adfed],ch
   140013ba4:	rex je 0x140013b54
   140013ba7:	or     eax,ebp
   140013ba9:	(bad)  
   140013baa:	jrcxz  0x140013c22
   140013bac:	addr32 fld st(6)
   140013baf:	cs xchg ebx,eax
   140013bb1:	ss jrcxz 0x140013b7b
   140013bb4:	int3   
   140013bb5:	pop    rsi
   140013bb6:	mov    dh,0x3e
   140013bb8:	mov    cl,0xd4
   140013bba:	jg     0x140013c0a
   140013bbc:	mov    WORD PTR [rdi],ds
   140013bbe:	call   0x138052aae
   140013bc3:	jg     0x140013ba3
   140013bc5:	icebp  
   140013bc6:	repnz pop rdi
   140013bc8:	cld    
   140013bc9:	rcr    edi,0xfd
   140013bcc:	bnd call QWORD PTR [rsp+rcx*4-0x75]
   140013bd1:	mov    ebp,0x7cc18aaa
   140013bd6:	(bad)  
   140013bd7:	test   BYTE PTR [rdi],0xf4
   140013bda:	rex.RB jne 0x140013c3c
   140013bdd:	and    DWORD PTR [rax+rcx*1+0x4e28d164],edx
   140013be4:	xchg   edx,eax
   140013be5:	enter  0x5426,0x86
   140013be9:	add    BYTE PTR [rdx+0x52],dh
   140013bec:	imul   ecx,DWORD PTR [rcx+0x55],0x54
   140013bf0:	fisttp QWORD PTR [rbx+rdx*8+0x678588aa]
   140013bf7:	jp     0x140013bae
   140013bf9:	gs xor al,0x60
   140013bfc:	xor    al,0x7e
   140013bfe:	int    0xbe
   140013c00:	xchg   ebx,eax
   140013c01:	test   al,0x20
   140013c03:	xor    BYTE PTR [rcx],ch
   140013c05:	mov    DWORD PTR [rcx+0x26],esi
   140013c08:	cmp    al,0x19
   140013c0a:	adc    BYTE PTR [rbx+0x46702692],dl
   140013c10:	pop    rbp
   140013c11:	add    ah,dl
   140013c13:	push   rsp
   140013c14:	rex sub DWORD PTR [rax+0x3a89008c],ecx
   140013c1b:	enterw 0x9440,0x29
   140013c20:	push   rcx
   140013c21:	lahf   
   140013c22:	fdiv   st,st(4)
   140013c24:	mov    DWORD PTR [rax],ebp
   140013c26:	jne    0x140013bf6
   140013c28:	xor    ecx,DWORD PTR [rbp+0x9]
   140013c2b:	int3   
   140013c2c:	and    BYTE PTR [rsi+0x36c4c4],0xb
   140013c33:	mov    ecx,0xf4227cac
   140013c38:	sub    bl,bl
   140013c3a:	mov    edx,0x394b8c74
   140013c3f:	sub    DWORD PTR [rcx],esi
   140013c41:	or     DWORD PTR [rbx+rdx*1+0x25a912c3],ebx
   140013c48:	jne    0x140013c37
   140013c4a:	and    ebp,DWORD PTR [rax+0x9]
   140013c4d:	(bad)  
   140013c4e:	xlat   BYTE PTR ds:[rbx]
   140013c4f:	sub    ah,BYTE PTR [rax]
   140013c51:	mov    al,0xe2
   140013c53:	pop    rsi
   140013c54:	lods   al,BYTE PTR ds:[rsi]
   140013c55:	dec    ebp
   140013c57:	xchg   BYTE PTR [rsp+rbp*4],ch
   140013c5a:	mov    esp,DWORD PTR [rip+0xffffffff9d6140c0]        # 0xdd627d20
   140013c60:	fdivr  st(1),st
   140013c62:	out    dx,al
   140013c63:	add    eax,0xb6c54120
   140013c69:	out    dx,al
   140013c6a:	xchg   ecx,eax
   140013c6b:	popf   
   140013c6c:	xor    edx,DWORD PTR [rax+0x1319a4e1]
   140013c72:	cmp    DWORD PTR [rbp-0x4d7afbf6],esp
   140013c78:	icebp  
   140013c79:	xchg   edx,eax
   140013c7a:	rol    DWORD PTR [rcx+0x55d3d51c],1
   140013c80:	adc    eax,0x8464aac
   140013c85:	lods   al,BYTE PTR ds:[rsi]
   140013c86:	or     dh,BYTE PTR [rdi]
   140013c88:	movabs ds:0xaa5a40130380294d,eax
   140013c91:	icebp  
   140013c92:	loop   0x140013c2f
   140013c94:	add    DWORD PTR [rax],ebx
   140013c96:	and    dl,BYTE PTR [rax-0x59f7d958]
   140013c9c:	test   BYTE PTR [rcx],cl
   140013c9e:	sub    cl,BYTE PTR [rsi-0x4fcf55f9]
   140013ca4:	mov    esp,edx
   140013ca6:	add    DWORD PTR [rdx+0x202b3a8],0xffffffe8
   140013cad:	or     eax,eax
   140013caf:	loop   0x140013cbf
   140013cb1:	icebp  
   140013cb2:	es cwde 
   140013cb4:	mov    bh,0xc2
   140013cb6:	add    DWORD PTR [rax],ebp
   140013cb8:	sbb    DWORD PTR [rdx+rdi*4+0x51],0x660cf1c8
   140013cc0:	(bad)  
   140013cc1:	xchg   esp,eax
   140013cc2:	sub    BYTE PTR [rax+0x5e175043],al
   140013cc8:	(bad)  
   140013cc9:	push   rbx
   140013cca:	cmp    ebp,0x55063e27
   140013cd0:	sub    esp,DWORD PTR [rdi+0x1fd401e4]
   140013cd6:	and    eax,ecx
   140013cd8:	xchg   esp,eax
   140013cd9:	test   DWORD PTR [rsi],edi
   140013cdb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013cdc:	sahf   
   140013cdd:	(bad)  
   140013cde:	int    0x92
   140013ce0:	neg    DWORD PTR [rbp+0x7da43667]
   140013ce6:	mov    al,0xf1
   140013ce8:	add    esp,DWORD PTR [rbx+0x77]
   140013ceb:	xor    DWORD PTR [rsi-0x69],edi
   140013cee:	mov    edx,0x73c7831f
   140013cf3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013cf4:	scas   eax,DWORD PTR es:[rdi]
   140013cf5:	(bad)  
   140013cf6:	add    BYTE PTR [rax],cl
   140013cf8:	add    BYTE PTR [rsi],bh
   140013cfa:	cmc    
   140013cfb:	enter  0x7f5f,0xd3
   140013cff:	rcr    ebx,0xee
   140013d02:	jp     0x140013cb8
   140013d04:	sub    al,0xca
   140013d06:	xchg   ebp,eax
   140013d07:	int    0x55
   140013d09:	mov    esi,DWORD PTR [rbx+rcx*2]
   140013d0c:	xchg   ecx,eax
   140013d0d:	fs (bad) 
   140013d0f:	xor    DWORD PTR es:[rax],eax
   140013d12:	xor    BYTE PTR [rax],dl
   140013d14:	(bad)  
   140013d15:	mov    ebp,0xa15a2c0a
   140013d1a:	fwait
   140013d1b:	sbb    esp,edi
   140013d1d:	xor    al,0x11
   140013d1f:	lods   eax,DWORD PTR ds:[rsi]
   140013d20:	rex.XB jne 0x140013cc0
   140013d23:	mov    BYTE PTR [rsi-0x54],al
   140013d26:	mul    BYTE PTR [rdx]
   140013d28:	rex.W
   140013d29:	rex.WXB mov BYTE PTR [r8+r10*2],dl
   140013d2d:	sub    eax,0x5554b6a1
   140013d32:	xor    edi,0x263c36c4
   140013d38:	movabs ds:0xaa77dbcd5859de44,al
   140013d41:	imul   ecx,DWORD PTR [rcx],0xa85c4a00
   140013d47:	stos   BYTE PTR es:[rdi],al
   140013d48:	ja     0x140013d34
   140013d4a:	cmp    DWORD PTR [rip+0xffffffffc83130b7],0xfffffffd        # 0x108326e08
   140013d51:	add    dl,BYTE PTR es:[rax+0x20ab3310]
   140013d58:	add    eax,0x9ccaa51
   140013d5d:	adc    DWORD PTR [rbx+0x33],edi
   140013d60:	or     DWORD PTR [rip+0x64215388],0x7111ee20        # 0x1a42290f2
   140013d6a:	(bad)
   140013d6e:	rex.WX adc rax,0x10600094
   140013d74:	(bad)  
   140013d75:	in     al,0x81
   140013d77:	test   BYTE PTR [rcx-0x777b7ff4],cl
   140013d7d:	jge    0x140013dad
   140013d7f:	(bad)  
   140013d80:	mov    ebx,0xd70863b1
   140013d85:	fs es (bad) 
   140013d88:	or     eax,0x500103c5
   140013d8d:	rex.X leave 
   140013d8f:	adc    bh,BYTE PTR [rax+0x110aa5b4]
   140013d95:	xchg   edi,eax
   140013d96:	push   rax
   140013d97:	sub    BYTE PTR [rcx+0x27],bl
   140013d9a:	sbb    eax,0x15515008
   140013d9f:	and    bl,al
   140013da1:	(bad)  
   140013da2:	push   rcx
   140013da3:	sub    cl,BYTE PTR [rip+0x25aee02]        # 0x1425c2bab
   140013da9:	xor    BYTE PTR [rcx],ch
   140013dab:	fcom   QWORD PTR [rax+rcx*1]
   140013dae:	xchg   DWORD PTR [rip+0x2c2fae],edx        # 0x1402d6d62
   140013db4:	mov    al,0x8b
   140013db6:	ja     0x140013e2a
   140013db8:	xchg   ebp,eax
   140013db9:	mov    ah,0xe2
   140013dbb:	and    dl,BYTE PTR [rsp+rax*2-0x57f90316]
   140013dc2:	add    r14,QWORD PTR [rip+0x8106250]        # 0x14811a019
   140013dc9:	(bad)  
   140013dca:	mov    DWORD PTR [rax],r11d
   140013dcd:	movabs ds:0x304064d99c0c8089,al
   140013dd6:	or     al,0x66
   140013dd8:	test   al,0x1a
   140013dda:	addr32 push rbp
   140013ddc:	adc    BYTE PTR [rbp+0x7989c860],0x26
   140013de3:	rol    al,0x38
   140013de6:	jge    0x140013dc7
   140013de8:	(bad)  
   140013de9:	push   rsp
   140013dea:	(bad)  
   140013deb:	sub    bh,bh
   140013ded:	add    DWORD PTR [rsi+rcx*4],0x3833c2c3
   140013df4:	mov    ch,0xd6
   140013df6:	movabs eax,ds:0x5550aae75522580
   140013dff:	mov    DWORD PTR [rdx+rbx*2+0x28b9792],eax
   140013e06:	adc    bh,dl
   140013e08:	mov    edi,0xb4349a23
   140013e0d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013e0e:	rex.WR (bad) 
   140013e10:	stos   BYTE PTR es:[rdi],al
   140013e11:	mov    esp,0x8a3e86
   140013e16:	and    eax,0x855c7ad1
   140013e1b:	jae    0x140013e4c
   140013e1d:	out    0x8c,eax
   140013e1f:	pushf  
   140013e20:	rex.X sar dl,cl
   140013e23:	(bad)  
   140013e25:	loop   0x140013dde
   140013e27:	and    eax,0x1fdad17d
   140013e2c:	(bad)  
   140013e2e:	pop    rdi
   140013e2f:	adc    edx,ebx
   140013e31:	(bad)  
   140013e32:	je     0x140013e89
   140013e34:	movabs ds:0xbdf8b81fe9fc1f00,al
   140013e3d:	push   rcx
   140013e3f:	iret   
   140013e40:	outs   dx,DWORD PTR ds:[rsi]
   140013e41:	pop    rcx
   140013e42:	fidiv  WORD PTR [rbx-0x8]
   140013e45:	movsxd ebx,DWORD PTR [rcx-0x6e]
   140013e48:	mov    ebp,0x28171f3c
   140013e4d:	jb     0x140013e66
   140013e4f:	cmc    
   140013e50:	and    eax,DWORD PTR [rax]
   140013e52:	xor    DWORD PTR es:[rcx],ebx
   140013e55:	xor    DWORD PTR [rdx+0x66],edx
   140013e58:	pop    rsi
   140013e59:	(bad)  
   140013e5a:	loop   0x140013e5f
   140013e5c:	ins    BYTE PTR es:[rdi],dx
   140013e5d:	enter  0x7312,0xc9
   140013e61:	int3   
   140013e62:	and    eax,0x2ddeb138
   140013e67:	jnp    0x140013e07
   140013e69:	add    BYTE PTR [rdx+0x3a00cfa0],0x26
   140013e70:	sub    edi,ecx
   140013e72:	mov    cl,0xd8
   140013e74:	push   rbp
   140013e75:	push   rdx
   140013e76:	mov    ebx,0xfc74b62a
   140013e7b:	(bad)  
   140013e7c:	add    al,ah
   140013e7e:	(bad)  
   140013e7f:	test   BYTE PTR [rbx],ah
   140013e81:	imul   ebx,DWORD PTR [rcx+0x5ed229c8],0x5a
   140013e88:	ret    0x173b
   140013e8b:	adc    eax,0xcb4faa80
   140013e90:	and    eax,DWORD PTR [rax]
   140013e92:	push   rdx
   140013e93:	or     BYTE PTR [rcx],al
   140013e95:	or     al,0x22
   140013e97:	add    eax,0x310a4331
   140013e9c:	cs jo  0x140013eee
   140013e9f:	rex.WR
   140013ea0:	rex.WRX or al,0x91
   140013ea3:	xor    dl,BYTE PTR [rcx]
   140013ea5:	adc    al,0x86
   140013ea7:	cwde   
   140013ea8:	pop    rcx
   140013ea9:	sbb    eax,0x9c4a2753
   140013eae:	cmp    BYTE PTR [rax],0x55
   140013eb1:	(bad)  
   140013eb2:	add    DWORD PTR [rbx+0x2],esi
   140013eb5:	push   rax
   140013eb6:	or     ah,dl
   140013eb8:	adc    al,0xa0
   140013eba:	(bad)  
   140013ebb:	mov    dl,bh
   140013ebd:	retf   0x819c
   140013ec0:	cmp    BYTE PTR [rip+0x69d4e250],ah        # 0x1a9d62116
   140013ec6:	rex.WRX add BYTE PTR [rax],r11b
   140013ec9:	and    dh,BYTE PTR [rdx]
   140013ecb:	and    BYTE PTR [rdx+0x8],cl
   140013ece:	outs   dx,BYTE PTR ds:[rsi]
   140013ecf:	fwait
   140013ed0:	rex.XB and DWORD PTR [r8],eax
   140013ed3:	or     BYTE PTR [rbx-0x46],0x75
   140013ed7:	data16 mov dl,0x38
   140013eda:	mov    esi,0x80418c74
   140013edf:	and    eax,0x49510585
   140013ee4:	(bad)  
   140013ee5:	sub    DWORD PTR [rdx+0x5403ff3],0xde7502a4
   140013eef:	or     esi,DWORD PTR [rdx-0x1e]
   140013ef2:	(bad)  
   140013ef3:	imul   ecx,DWORD PTR [rsi+0xe],0x5e6abc58
   140013efa:	imul   edx,ebx,0x3f26f8de
   140013f00:	cmp    eax,0x558483e
   140013f05:	mov    al,al
   140013f07:	rex.WRX push rbp
   140013f09:	movabs al,ds:0xf51970844ba16a68
   140013f12:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013f13:	push   rax
   140013f14:	rex.XB and BYTE PTR [r14+0x21972192],al
   140013f1b:	int3   
   140013f1c:	(bad)  
   140013f1e:	shr    BYTE PTR [rdx],0x92
   140013f21:	and    BYTE PTR [rax+0x54],0x91
   140013f25:	(bad)  
   140013f26:	enter  0x9110,0x51
   140013f2a:	(bad)  
   140013f2b:	movabs ds:0x315d0055e67224,eax
   140013f34:	adc    ecx,DWORD PTR [rsi+riz*1+0x2d768d70]
   140013f3b:	repnz lea edx,[rdi+rax*1]
   140013f3f:	gs stos BYTE PTR es:[rdi],al
   140013f41:	(bad)  
   140013f42:	cli    
   140013f43:	rex adc eax,0xb888a802
   140013f49:	jrcxz  0x140013ef2
   140013f4b:	sub    eax,0x4ca02dc7
   140013f50:	add    eax,0x213e43a5
   140013f55:	push   rcx
   140013f56:	(bad)  
   140013f57:	adc    al,0x20
   140013f59:	adc    BYTE PTR [rax],dh
   140013f5b:	stos   BYTE PTR es:[rdi],al
   140013f5c:	stos   BYTE PTR es:[rdi],al
   140013f5d:	and    DWORD PTR [rdi+0x54e2675],edx
   140013f63:	xchg   edi,eax
   140013f64:	mov    DWORD PTR [rbx],eax
   140013f66:	ror    ecx,1
   140013f68:	xchg   DWORD PTR [rbp-0x67],ecx
   140013f6b:	(bad)  
   140013f6c:	xchg   esi,eax
   140013f6d:	(bad)  
   140013f6e:	sub    ecx,0x6db40003
   140013f74:	cli    
   140013f75:	lock mov bh,0x44
   140013f78:	fistp  WORD PTR [rdi+0x17]
   140013f7b:	(bad)  
   140013f7c:	pcmpeqb mm6,QWORD PTR [rip+0xffffffffe0004000]        # 0x120017f83
   140013f83:	(bad)  
   140013f84:	fdivrp st(5),st
   140013f86:	xchg   esi,eax
   140013f87:	push   rbp
   140013f88:	add    BYTE PTR [rdi-0xd405806],ch
   140013f8e:	icebp  
   140013f8f:	(bad)  
   140013f90:	xor    bl,BYTE PTR [rbx-0x60285901]
   140013f96:	jg     0x140013fe5
   140013f98:	(bad)  
   140013f99:	cmc    
   140013f9a:	not    DWORD PTR [rdx]
   140013f9c:	fwait
   140013f9d:	mov    esi,0x60291088
   140013fa2:	or     ebp,DWORD PTR [rbx+0x8]
   140013fa5:	mov    BYTE PTR fs:[rdi+rdx*1+0x7514e095],bl
   140013fad:	and    dl,BYTE PTR [rdx+0x36]
   140013fb0:	mov    esp,0xcc4a440b
   140013fb5:	mov    ?,WORD PTR [rdi]
   140013fb7:	rex.WRB pop QWORD PTR [r11-0x61563a5b]
   140013fbe:	add    DWORD PTR [rsp+rcx*8+0x2a],esi
   140013fc2:	out    dx,al
   140013fc3:	pop    rbx
   140013fc4:	in     al,dx
   140013fc5:	xchg   ebx,eax
   140013fc6:	xchg   esp,eax
   140013fc7:	(bad)  
   140013fc8:	or     ch,ah
   140013fca:	clc    
   140013fcb:	jmp    0x161057278
   140013fd0:	cmp    BYTE PTR [rax],dl
   140013fd2:	push   rbp
   140013fd3:	rex.WB pop r9
   140013fd5:	jge    0x140013ffc
   140013fd7:	ins    DWORD PTR es:[rdi],dx
   140013fd8:	and    DWORD PTR [rdx],esi
   140013fda:	jle    0x140013ffd
   140013fdc:	rex.WB push r9
   140013fde:	push   rdx
   140013fdf:	adc    DWORD PTR [rax],edx
   140013fe1:	imul   ebx,DWORD PTR [rcx-0x7],0x58b1d59f
   140013fe8:	xor    BYTE PTR [rsi+0x110c28a5],ch
   140013fee:	rex.XB sbb al,0x23
   140013ff1:	clc    
   140013ff2:	rex.X jle 0x140014041
   140013ff5:	retf   0x5ec4
   140013ff8:	cld    
   140013ff9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013ffa:	and    BYTE PTR [rsi-0x40],cl
   140013ffd:	mov    BYTE PTR fs:[rax],bh
   140014000:	and    eax,0x2654ab7
   140014005:	loop   0x14001401b
   140014007:	sub    DWORD PTR [rax-0x3b9aefcd],r9d
   14001400e:	es add edx,eax
   140014011:	(bad)  
   140014012:	(bad)  
   140014014:	loop   0x140013fda
   140014016:	rex.X adc esp,DWORD PTR [rdi-0x55]
   14001401a:	ret    
   14001401b:	adc    ch,dl
   14001401d:	stos   BYTE PTR es:[rdi],al
   14001401e:	(bad)  
   14001401f:	sti    
   140014020:	sub    DWORD PTR [rdi+0x6f3b545e],edi
   140014026:	mov    esp,0x9530b483
   14001402b:	pop    rdx
   14001402c:	pop    rcx
   14001402d:	mov    ecx,0x1756a754
   140014032:	rex.WR
   140014033:	fs (bad) 
   140014035:	test   ecx,edi
   140014037:	rex.R adc eax,0xa81203a5
   14001403d:	cmp    ch,cl
   14001403f:	stos   BYTE PTR es:[rdi],al
   140014040:	add    al,0xb5
   140014042:	lock (bad) 
   140014044:	cmp    BYTE PTR [rdx],ch
   140014046:	rol    BYTE PTR [rcx],0x0
   140014049:	push   rsi
   14001404a:	iret   
   14001404b:	adc    BYTE PTR [rdx+0x44],cl
   14001404e:	adc    dh,BYTE PTR [rdx]
   140014050:	std    
   140014051:	pop    rbp
   140014052:	sub    dh,BYTE PTR [rdx]
   140014054:	movabs al,ds:0x87d766b96e419aec
   14001405d:	push   rax
   14001405e:	addr32 cld 
   140014060:	rex
   140014061:	rex.W
   140014062:	rex.RB or eax,0x1739d988
   140014068:	xchg   ebp,eax
   140014069:	rex.WB fstp QWORD PTR [r11+0x4a06ab53]
   140014070:	rex.RX mov BYTE PTR [rdx-0x27facd6d],r8b
   140014077:	adc    BYTE PTR [rcx+0x42],ch
   14001407a:	or     al,BYTE PTR [rsi]
   14001407c:	xor    DWORD PTR [rcx+0x1a92570b],edx
   140014082:	(bad)  
   140014084:	(bad)  
   140014085:	xor    ch,dh
   140014087:	(bad)  
   140014088:	adc    eax,ecx
   14001408a:	and    BYTE PTR [rdx],bl
   14001408c:	hlt    
   14001408d:	(bad)  
   14001408e:	and    DWORD PTR [rsi-0x45188635],edi
   140014094:	xchg   DWORD PTR [rdi],edx
   140014096:	test   DWORD PTR [rcx+riz*2-0x6b],ecx
   14001409a:	rex.WXB add rax,0x5a5aaa97
   1400140a0:	(bad)  
   1400140a1:	rex.X push rbp
   1400140a3:	add    al,0x96
   1400140a5:	sub    al,0x39
   1400140a7:	out    0xa5,eax
   1400140a9:	mov    BYTE PTR [rbx+0x0],dh
   1400140ac:	rex.XB mov r10d,0x6dbf8e2
   1400140b2:	sub    BYTE PTR [rsi+0x2a],0x36
   1400140b6:	(bad)  
   1400140b7:	pop    rbp
   1400140b8:	rex.X mov dil,0xb4
   1400140bb:	cmovl  ebx,DWORD PTR [rip+0x6cbaf087]        # 0x1acbc3149
   1400140c2:	sti    
   1400140c3:	xor    bh,BYTE PTR [rdx]
   1400140c5:	(bad)  
   1400140c6:	jmp    0x14001408e
   1400140c8:	clc    
   1400140c9:	sub    DWORD PTR [rsi+0x902266],0xfb3f7dc0
   1400140d3:	add    ebx,DWORD PTR [rdi]
   1400140d5:	add    edx,ecx
   1400140d7:	and    eax,DWORD PTR [rax+0x4ec50ede]
   1400140dd:	(bad)  
   1400140de:	rex.WRX neg bpl
   1400140e1:	cmc    
   1400140e2:	test   DWORD PTR [rsi+0x73b8b64],0xd37d378b
   1400140ec:	rex.WXB
   1400140ed:	rex.WR fimul DWORD PTR [rbx+0x76]
   1400140f1:	sbb    al,0x7c
   1400140f3:	shr    DWORD PTR [rbx],1
   1400140f5:	(bad)  
   1400140f6:	leave  
   1400140f7:	(bad)  
   1400140f8:	pop    rcx
   1400140f9:	mov    edi,0xd4ea03bf
   1400140fe:	rex.WB sub rax,0x738a0e4b
   140014104:	xor    eax,0x36009e0d
   140014109:	(bad)  
   14001410a:	(bad)  
   14001410b:	mov    ah,0x9f
   14001410d:	or     al,0x41
   14001410f:	rex
   140014110:	rex.RXB shr r12b,0x4
   140014114:	sub    eax,0x66011
   140014119:	je     0x14001415f
   14001411b:	shl    BYTE PTR [rbx+0x2a44bd04],1
   140014121:	stos   DWORD PTR es:[rdi],eax
   140014122:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014123:	mov    edx,0xb9576a4a
   140014128:	int3   
   140014129:	iret   
   14001412a:	rex.X
   14001412b:	gs pop rsp
   14001412d:	sbb    DWORD PTR [rax+0x65530422],ebx
   140014133:	jb     0x14001416e
   140014135:	push   rdx
   140014136:	out    dx,eax
   140014137:	jo     0x14001416d
   140014139:	push   rax
   14001413a:	(bad)  
   14001413b:	xor    eax,0xe9420154
   140014140:	and    eax,0xef504974
   140014145:	(bad)  
   140014146:	jo     0x14001419a
   140014148:	adc    al,0x7e
   14001414a:	(bad)  
   14001414b:	xor    edx,DWORD PTR [rcx]
   14001414d:	xor    DWORD PTR [rcx+rdi*4],ebp
   140014150:	jns    0x140014160
   140014152:	(bad)  
   140014153:	push   rdx
   140014154:	or     dh,BYTE PTR [eax]
   140014157:	sbb    BYTE PTR [rcx],cl
   140014159:	enter  0x2b0,0xa9
   14001415d:	xor    ebp,DWORD PTR [rbx]
   14001415f:	cmp    BYTE PTR [rcx],ah
   140014161:	(bad)  
   140014162:	jrcxz  0x14001418a
   140014164:	and    DWORD PTR [rax-0x56],edx
   140014167:	(bad)  
   140014168:	sbb    DWORD PTR [rax+0x194179bc],ebx
   14001416e:	adc    DWORD PTR [rdi+0x60434e2],esp
   140014174:	jae    0x140014178
   140014176:	(bad)  
   140014177:	(bad)
   14001417b:	nop
   14001417c:	add    DWORD PTR [rbx],edi
   14001417e:	in     eax,dx
   14001417f:	rol    DWORD PTR [rdx+0x7b],0x20
   140014183:	sub    BYTE PTR [rbx+0x5a838b42],al
   140014189:	sub    eax,0x61725850
   14001418e:	mov    ecx,0x5729ce12
   140014193:	test   eax,0xd4a6e495
   140014198:	sub    esp,DWORD PTR [rcx+0x155bd52]
   14001419e:	or     edx,DWORD PTR [rax+0x240ef3f5]
   1400141a4:	mov    BYTE PTR [rdx+0x78],ah
   1400141a7:	int    0x97
   1400141a9:	jge    0x140014133
   1400141ab:	rex.RX cmp al,0xe
   1400141ae:	add    al,0xf5
   1400141b0:	retf   0x9532
   1400141b3:	push   rsp
   1400141b4:	add    eax,0x6544aa03
   1400141b9:	(bad)  
   1400141ba:	xor    esi,DWORD PTR [rax]
   1400141bc:	pop    rax
   1400141bd:	and    DWORD PTR [rcx+riz*1],ecx
   1400141c0:	addr32 (bad) 
   1400141c2:	xchg   ebx,eax
   1400141c3:	cmp    BYTE PTR [rbp-0x392e163f],cl
   1400141c9:	xor    esp,DWORD PTR [rdx+rax*1-0x15]
   1400141cd:	rex.WRB
   1400141ce:	or     eax,DWORD PTR es:[rbx+0x4c]
   1400141d2:	rex.RX mov DWORD PTR [rcx+0xc2c128d],r11d
   1400141d9:	adc    ah,BYTE PTR [rdx]
   1400141db:	push   rdx
   1400141dc:	(bad)  
   1400141dd:	pop    rdi
   1400141de:	lahf   
   1400141df:	(bad)  
   1400141e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400141e1:	xchg   r10,rax
   1400141e3:	sub    al,0xb2
   1400141e5:	xor    edx,ecx
   1400141e7:	xchg   BYTE PTR [rip+0x25c025c4],al        # 0x165c167b1
   1400141ed:	rol    BYTE PTR [rip+0xffffffff88854a94],0x28        # 0xc8868c88
   1400141f4:	pop    rcx
   1400141f5:	(bad)  
   1400141f6:	sub    eax,0xaa60f0ad
   1400141fb:	or     DWORD PTR [rax+0x4bdc818d],esi
   140014201:	rex.WR out dx,eax
   140014203:	cdq    
   140014204:	cmc    
   140014205:	jl     0x140014269
   140014207:	cmp    eax,DWORD PTR [rcx]
   140014209:	jrcxz  0x14001423a
   14001420b:	std    
   14001420c:	(bad)  
   14001420d:	iret   
   14001420e:	jl     0x140014216
   140014210:	mov    ch,0xd4
   140014212:	outs   dx,BYTE PTR ds:[rsi]
   140014213:	jnp    0x140014208
   140014215:	fcmovnbe st,st(2)
   140014217:	mov    esi,0xb7f3c49d
   14001421c:	loop   0x1400141f6
   14001421e:	jnp    0x140014256
   140014220:	je     0x14001424f
   140014222:	xor    al,BYTE PTR [rcx]
   140014224:	sub    eax,0x78a017a0
   140014229:	add    al,0x44
   14001422b:	or     ebp,DWORD PTR [rdx]
   14001422d:	sar    BYTE PTR [rdi],cl
   14001422f:	jae    0x140014210
   140014231:	xchg   DWORD PTR [rsi],ebx
   140014233:	(bad)  
   140014234:	shl    bl,1
   140014236:	and    al,0xbd
   140014238:	xchg   edi,eax
   140014239:	rex.WR rcl BYTE PTR [rbx-0x4f],cl
   14001423d:	sbb    DWORD PTR [rdi],esp
   14001423f:	pop    rcx
   140014240:	rex.RX (bad) 
   140014242:	cwde   
   140014243:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014244:	fwait
   140014245:	out    dx,al
   140014246:	fdivr  DWORD PTR [rip+0xffffffffaec8ffbf]        # 0xeeca420b
   14001424c:	fimul  WORD PTR [rsi-0x5a4d4403]
   140014252:	popf   
   140014253:	mov    ebx,0xedba1e76
   140014258:	gs rex.WB scas rax,QWORD PTR es:[rdi]
   14001425b:	xlat   BYTE PTR ds:[rbx]
   14001425c:	out    dx,eax
   14001425d:	movhps xmm1,QWORD PTR [rsi-0x4f6dced0]
   140014264:	out    dx,al
   140014265:	ins    BYTE PTR es:[rdi],dx
   140014266:	cwde   
   140014267:	rex.WRB out 0xbd,eax
   14001426a:	retf   0x2bc1
   14001426d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001426e:	rex.WR jge 0x140014281
   140014271:	sbb    eax,0x511d101
   140014276:	rex.XB mov DWORD PTR [r8],esp
   140014279:	pushf  
   14001427a:	add    ah,BYTE PTR [rsi-0x179ffff1]
   140014280:	xchg   ebx,eax
   140014281:	add    al,al
   140014283:	push   0xffffffffffffff9f
   140014285:	add    al,0x74
   140014287:	rex.R push rdx
   140014289:	sahf   
   14001428a:	xor    esp,DWORD PTR [rdx+0x57]
   14001428d:	and    ebp,esp
   14001428f:	push   0xffffffffffffff88
   140014291:	mov    gs,WORD PTR [rcx+0x6a858108]
   140014297:	mov    edi,0x141cd3bc
   14001429c:	add    BYTE PTR [rcx+rdx*2-0x6c0feffc],cl
   1400142a3:	xor    ch,BYTE PTR [rdx]
   1400142a5:	rex.RXB xchg r11d,eax
   1400142a7:	not    DWORD PTR [rbx+0x78]
   1400142aa:	icebp  
   1400142ab:	int    0x64
   1400142ad:	rex.B
   1400142ae:	rex.WX xchg rsi,rax
   1400142b0:	cwde   
   1400142b1:	mov    BYTE PTR [rcx],dl
   1400142b3:	rol    BYTE PTR [rcx-0x6b9eab77],0x60
   1400142ba:	rex
   1400142bb:	add    BYTE PTR fs:[rsi+0x1a],dh
   1400142bf:	test   bl,bh
   1400142c1:	sbb    BYTE PTR [rax],dl
   1400142c3:	adc    ah,BYTE PTR [rbp+0x4e]
   1400142c6:	adc    eax,0xa1ed7994
   1400142cb:	rex.RXB (bad) 
   1400142cd:	cmp    eax,0x285a6761
   1400142d2:	xchg   ecx,eax
   1400142d3:	(bad)  
   1400142d4:	(bad)  
   1400142d6:	loop   0x140014258
   1400142d8:	(bad)  
   1400142d9:	adc    BYTE PTR [rbx+0x42],dl
   1400142dc:	jo     0x1400142a8
   1400142de:	adc    ebx,0xffffffb8
   1400142e1:	adc    eax,0x53b8e44c
   1400142e6:	pop    rbp
   1400142e7:	xchg   edx,eax
   1400142e8:	cmpps  xmm4,XMMWORD PTR [rax],0x55
   1400142ec:	mov    ch,0xc4
   1400142ee:	sub    BYTE PTR [rip+0x495928],dl        # 0x1404a9c1c
   1400142f4:	xchg   esp,eax
   1400142f5:	(bad)  
   1400142f6:	mov    bh,0x60
   1400142f8:	lods   al,BYTE PTR ds:[rsi]
   1400142f9:	nop
   1400142fa:	or     al,BYTE PTR [rcx-0x57b6f454]
   140014300:	and    BYTE PTR [rax+0x2d],0xa0
   140014304:	or     al,0xaa
   140014306:	(bad)  
   140014307:	pop    rax
   140014308:	jns    0x111e8279b
   14001430e:	or     DWORD PTR [rcx+0x30d11bdc],0x8421c033
   140014318:	or     BYTE PTR [rax-0x43e50428],0x3
   14001431f:	movabs al,ds:0xceaaa301589422d2
   140014328:	in     al,0x2
   14001432a:	sbb    DWORD PTR [rip+0xffffffffd6312261],edx        # 0x116326591
   140014330:	(bad)  
   140014331:	rex.B
   140014332:	rex.W je 0x140014341
   140014335:	xchg   esi,eax
   140014336:	xchg   esp,eax
   140014337:	(bad)  
   140014338:	add    DWORD PTR [rsi+riz*4],ecx
   14001433b:	fcmovnu st,st(6)
   14001433d:	mov    dl,BYTE PTR [rdx+rbp*2]
   140014340:	adc    al,BYTE PTR [rdx-0x7b6d66b7]
   140014346:	rex.WB adc al,BYTE PTR [r14+0x7c28ab32]
   14001434d:	pop    rsp
   14001434e:	leave  
   14001434f:	and    eax,0xa3d339fa
   140014354:	jae    0x1400143b8
   140014356:	rcl    DWORD PTR [rbp+0x5feefaab],cl
   14001435c:	sbb    bl,ah
   14001435e:	(bad)  
   14001435f:	test   eax,0xd89b9f2f
   140014364:	rex.WRX jbe 0x1400143e3
   140014367:	(bad)  
   140014368:	es and eax,0x6fb6db79
   14001436e:	(bad)  
   14001436f:	icebp  
   140014370:	test   BYTE PTR [rdi+0x18],cl
   140014373:	cmp    dl,BYTE PTR [rdi-0x7b]
   140014376:	icebp  
   140014377:	add    ebx,DWORD PTR [rbp+0x75]
   14001437a:	add    BYTE PTR [rax-0x4],bh
   14001437d:	(bad)  
   14001437e:	jno    0x140014385
   140014380:	mov    al,0x71
   140014382:	ror    DWORD PTR [rbp+0x3bbcb787],cl
   140014388:	sub    BYTE PTR [rax-0x5e],bh
   14001438b:	lea    edx,[rbp+rax*4+0x2912e941]
   140014392:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014393:	enter  0x33,0xbd
   140014397:	addr32 (bad) 
   140014399:	cli    
   14001439a:	je     0x140014412
   14001439c:	loope  0x140014369
   14001439e:	lahf   
   14001439f:	in     eax,dx
   1400143a0:	xchg   ebx,eax
   1400143a1:	xor    DWORD PTR [rbp-0x37],edi
   1400143a4:	repz rex.WR movabs rax,ds:0xc9001256a7a6363d
   1400143af:	lea    ebp,[rdi-0x4]
   1400143b2:	(bad)  
   1400143b3:	ja     0x14001434f
   1400143b5:	inc    dl
   1400143b7:	ret    0xfefc
   1400143ba:	fwait
   1400143bb:	mov    cs,WORD PTR [rsi+rdx*1]
   1400143be:	push   rdi
   1400143bf:	jbe    0x1400143ee
   1400143c1:	in     eax,dx
   1400143c2:	mov    ebp,0x37ac96f1
   1400143c7:	fcomp  DWORD PTR [rcx+0x427cd965]
   1400143cd:	add    al,0x6
   1400143cf:	ret    
   1400143d0:	mov    eax,0xfc087e1
   1400143d5:	adc    eax,0x8403105f
   1400143da:	and    eax,DWORD PTR [rdx]
   1400143dc:	add    dl,BYTE PTR [rcx]
   1400143de:	(bad)  
   1400143df:	adc    DWORD PTR [rax],edx
   1400143e1:	(bad)  
   1400143e2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400143e3:	sub    BYTE PTR [rbp-0x76],bh
   1400143e6:	(bad)  
   1400143e7:	adc    DWORD PTR [rsi],ebp
   1400143e9:	adc    DWORD PTR [rbp+rdx*4+0x44],esi
   1400143ed:	(bad)  
   1400143ee:	rex
   1400143ef:	gs int3 
   1400143f1:	push   0xffffffffffffff8f
   1400143f3:	add    ecx,DWORD PTR [rdx]
   1400143f5:	push   rbx
   1400143f6:	mov    cs,WORD PTR [rsi-0xef06e85]
   1400143fc:	(bad)  
   1400143fd:	xor    DWORD PTR [rsi],0x34
   140014400:	(bad)  
   140014401:	out    dx,eax
   140014402:	xor    BYTE PTR [rdx],dh
   140014404:	rex.RX movabs ds:0x707a889a61b25c4,eax
   14001440e:	xchg   DWORD PTR [rbp+0x25d9400c],eax
   140014414:	rex.WXB xor dl,BYTE PTR [r10+r13*2]
   140014418:	loopne 0x1400143fc
   14001441a:	push   0xffffffffffffffe4
   14001441c:	lods   al,BYTE PTR ds:[rsi]
   14001441d:	or     dh,BYTE PTR [rdx]
   14001441f:	jo     0x1400143a6
   140014421:	rex.WRB push r10
   140014423:	adc    BYTE PTR [rip+0x673aae44],ah        # 0x1a73bf26d
   140014429:	xor    BYTE PTR [rbx],dl
   14001442b:	or     BYTE PTR [rdx+rbx*2+0x3103da76],bl
   140014432:	add    BYTE PTR [edx],dh
   140014435:	(bad)  
   140014437:	repz and BYTE PTR [rax-0x3bbd96f0],dl
   14001443e:	rex.RX rol BYTE PTR [rsi-0x234737c4],0x7
   140014446:	stos   BYTE PTR es:[rdi],al
   140014447:	movabs ds:0x51687bbc7a7e2c6f,al
   140014450:	data16 mov BYTE PTR [edx-0x7af4d8fc],bh
   140014458:	add    eax,0xcc3ea971
   14001445d:	test   eax,0x40e4b50
   140014462:	sub    bl,bh
   140014464:	add    eax,edx
   140014466:	and    dh,BYTE PTR ss:[rcx-0x2]
   14001446a:	adc    eax,0x55301abf
   14001446f:	rex.WRX js 0x1400144e7
   140014472:	pop    rcx
   140014473:	xchg   esp,eax
   140014474:	add    DWORD PTR [rsi],ebx
   140014476:	cmp    eax,0xedfbb60
   14001447b:	scas   eax,DWORD PTR es:[rdi]
   14001447c:	fucom  st(4)
   14001447e:	or     al,0x82
   140014480:	sub    dh,BYTE PTR [rcx+0x6aa241db]
   140014486:	push   rsp
   140014487:	mov    DWORD PTR [rbp-0x6b],edx
   14001448a:	rex.WB test rax,0x5a67b004
   140014490:	adc    al,0x60
   140014492:	cmp    al,0x5c
   140014494:	(bad)  
   140014495:	scas   eax,DWORD PTR es:[rdi]
   140014496:	add    bl,al
   140014498:	and    al,0x64
   14001449a:	rcr    BYTE PTR [rdx+rdx*8+0x494860b2],cl
   1400144a1:	rex.WR test rax,0xffffffff80318251
   1400144a7:	and    DWORD PTR [rsi-0x66],eax
   1400144aa:	adc    BYTE PTR [rbp-0x1b644b32],ah
   1400144b0:	mov    ch,0x12
   1400144b2:	pop    rax
   1400144b3:	jl     0x14001443b
   1400144b5:	push   rdi
   1400144b6:	ficomp WORD PTR [rax-0x4fcb919e]
   1400144bc:	std    
   1400144bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400144be:	jnp    0x140014539
   1400144c0:	mov    edx,0x33a638b5
   1400144c5:	repz mov WORD PTR [rbx+0x6fb5833d],cs
   1400144cc:	jg     0x1400144b7
   1400144ce:	adc    DWORD PTR [rdi+0x1b],0x8e27c1a6
   1400144d5:	sahf   
   1400144d6:	outs   dx,BYTE PTR ds:[rsi]
   1400144d7:	pushf  
   1400144d8:	rex.RXB test r13b,r10b
   1400144db:	(bad)  
   1400144dc:	fdivp  st(7),st
   1400144de:	or     eax,0x81d0
   1400144e3:	orps   xmm1,XMMWORD PTR [rcx+0x44]
   1400144e7:	push   r12
   1400144e9:	jmp    FWORD PTR [rbx]
   1400144eb:	(bad)  
   1400144ec:	or     DWORD PTR [rax-0x74],esp
   1400144ef:	movabs es:0xacff8c9305bfad17,eax
   1400144f9:	adc    edi,DWORD PTR [rax-0x2]
   1400144fc:	mov    dh,0xe8
   1400144fe:	sbb    dl,BYTE PTR [rbp+0x389e0304]
   140014504:	jno    0x1400144c2
   140014506:	mov    dl,BYTE PTR [rip+0xffffffffbe6fdbc7]        # 0xfe7120d3
   14001450c:	icebp  
   14001450d:	mov    al,0x67
   14001450f:	xchg   ebx,eax
   140014510:	(bad)  
   140014511:	jrcxz  0x1400144a6
   140014513:	xor    DWORD PTR [rcx+rdx*2+0x56caa9c0],ebp
   14001451a:	xor    bh,BYTE PTR [rax-0x7621348c]
   140014520:	jnp    0x140014520
   140014522:	retf   
   140014523:	push   rcx
   140014524:	sub    BYTE PTR [rdx+0xa],bh
   140014527:	in     eax,dx
   140014528:	add    ebp,eax
   14001452a:	add    DWORD PTR [rcx+rdx*4-0x4581e75],edx
   140014531:	out    dx,al
   140014532:	(bad)  
   140014533:	scas   al,BYTE PTR es:[rdi]
   140014534:	pop    rbx
   140014535:	sar    cl,cl
   140014537:	in     eax,0x85
   140014539:	test   DWORD PTR [rbx+0x2f],eax
   14001453c:	cmp    ah,BYTE PTR [rdx+0x7a]
   14001453f:	cmp    DWORD PTR [rcx+0x71dd377d],0x77
   140014546:	(bad)  
   140014548:	int    0xf
   14001454a:	(bad)  
   14001454b:	jae    0x140014508
   14001454d:	or     al,0x11
   14001454f:	push   rdx
   140014550:	jrcxz  0x1400145b4
   140014552:	pop    rcx
   140014553:	sbb    DWORD PTR [rip+0x40154569],eax        # 0x180168ac2
   140014559:	cmp    BYTE PTR [rdi-0x4ff750cc],dh
   14001455f:	movabs ds:0x285148a182c47cc,al
   140014568:	test   DWORD PTR [rcx],ebx
   14001456a:	add    al,al
   14001456c:	mov    BYTE PTR [rcx-0x31],cl
   14001456f:	xchg   edx,eax
   140014570:	(bad)  
   140014571:	or     BYTE PTR [rcx],ch
   140014573:	iret   
   140014574:	xor    esp,eax
   140014576:	cdq    
   140014577:	(bad)  
   140014578:	mov    dh,0x38
   14001457a:	or     esi,DWORD PTR [rbp-0x7e3f1fc7]
   140014580:	pop    rax
   140014581:	sbb    ebx,DWORD PTR [rdx+0x383824c3]
   140014587:	int    0xc1
   140014589:	cmp    esp,DWORD PTR [rdi]
   14001458b:	test   BYTE PTR [rdx],dl
   14001458e:	(bad)  
   14001458f:	jmp    0x140014546
   140014591:	jne    0x1400145ef
   140014593:	ror    BYTE PTR [rbx+rcx*1+0x3b99f9c3],cl
   14001459a:	mov    fs,WORD PTR [rcx-0x68]
   14001459d:	adc    ah,ch
   14001459f:	push   0x42
   1400145a1:	rex.X
   1400145a2:	sbb    BYTE PTR fs:[rax+0x4a],al
   1400145a6:	in     al,dx
   1400145a7:	int3   
   1400145a8:	or     dl,BYTE PTR [rax-0x1dc35e8f]
   1400145ae:	xchg   esp,eax
   1400145af:	mov    DWORD PTR [rip+0xffffffffd9f51040],ebx        # 0x119f655f5
   1400145b5:	jo     0x1400145c1
   1400145b7:	idiv   DWORD PTR [rbx]
   1400145b9:	(bad)  
   1400145ba:	or     bh,BYTE PTR [rcx+0xf]
   1400145bd:	xchg   esp,eax
   1400145be:	(bad)  
   1400145bf:	loopne 0x140014581
   1400145c1:	xchg   al,cl
   1400145c3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400145c4:	(bad)  
   1400145c5:	mov    ecx,0xebe142f6
   1400145ca:	mov    dh,0x38
   1400145cc:	lahf   
   1400145cd:	or     DWORD PTR [rdi-0xc],0x71
   1400145d1:	jmp    0xe509dc0a
   1400145d6:	rex.X lods eax,DWORD PTR ds:[rsi]
   1400145d8:	(bad)  
   1400145d9:	sbb    al,0x50
   1400145db:	rex add eax,0x3b9254c
   1400145e1:	lods   al,BYTE PTR ds:[rsi]
   1400145e2:	outs   dx,DWORD PTR ds:[rsi]
   1400145e3:	mov    esp,0x89270a07
   1400145e8:	adc    DWORD PTR [rbx],edi
   1400145ea:	and    ecx,DWORD PTR [rcx]
   1400145ec:	movabs eax,ds:0xcfb5022f5692a6c4
   1400145f5:	adc    ah,BYTE PTR [rbp+0x70]
   1400145f8:	xor    DWORD PTR [rax],0x69
   1400145fb:	sets   BYTE PTR [rsi+0x2]
   1400145ff:	ins    BYTE PTR es:[rdi],dx
   140014600:	lods   eax,DWORD PTR ds:[rsi]
   140014601:	pop    rbp
   140014602:	cmp    ch,BYTE PTR [rcx+0x45]
   140014605:	mov    esp,0xcc155783
   14001460a:	push   rsp
   14001460b:	stos   BYTE PTR es:[rdi],al
   14001460c:	xor    bl,BYTE PTR [rbx-0x39bddccc]
   140014612:	ins    BYTE PTR es:[rdi],dx
   140014613:	mov    dl,0xc4
   140014615:	jo     0x1400145c1
   140014617:	sub    DWORD PTR [rcx+rcx*1+0x30],0xb
   14001461c:	pop    rbp
   14001461d:	xlat   BYTE PTR ds:[rbx]
   14001461e:	pop    rcx
   14001461f:	in     al,dx
   140014620:	sbb    edi,DWORD PTR [rdi+riz*8+0x2b]
   140014624:	outs   dx,DWORD PTR ds:[rsi]
   140014625:	fdivr  st(3),st
   140014627:	hlt    
   140014628:	fsub   DWORD PTR [rax-0x1c80c8c9]
   14001462e:	jmp    0x17fb5c884
   140014633:	(bad)  
   140014634:	or     DWORD PTR ss:[rsi-0x26],ebp
   140014638:	cmp    ecx,DWORD PTR [rdi-0x7625e069]
   14001463e:	pop    rdi
   14001463f:	mov    ebp,0x2b76abe7
   140014644:	scas   eax,DWORD PTR es:[rdi]
   140014645:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014646:	add    dh,BYTE PTR [rbx]
   140014648:	loope  0x140014616
   14001464a:	out    0x89,al
   14001464c:	(bad)  
   14001464d:	jg     0x140014631
   14001464f:	in     al,dx
   140014650:	std    
   140014651:	(bad)  
   140014652:	cmp    BYTE PTR [rcx-0x66708b5a],cl
   140014658:	(bad)  
   140014659:	push   rsi
   14001465a:	repz sub DWORD PTR [rbx-0x38],0x335d31f4
   140014662:	add    BYTE PTR [rax-0x67bca1ba],bl
   140014668:	stos   BYTE PTR es:[rdi],al
   140014669:	(bad)  
   14001466a:	add    r9b,r8b
   14001466d:	ds add esp,0xffffffa9
   140014671:	mov    ebp,0x195242e
   140014676:	rex.W loope 0x1400146e5
   140014679:	(bad)
   14001467c:	std    
   14001467d:	(bad)  
   14001467e:	(bad)  
   14001467f:	adc    cl,BYTE PTR [rax+0x54f680fa]
   140014685:	mov    ch,0xff
   140014687:	xor    BYTE PTR [rax+0x45064207],ch
   14001468d:	xor    bl,al
   14001468f:	jae    0x1400146f9
   140014691:	jno    0x14001467a
   140014693:	sbb    eax,0xc1d6e77f
   140014698:	scas   al,BYTE PTR es:[rdi]
   140014699:	std    
   14001469a:	jnp    0x140014717
   14001469c:	retf   
   14001469d:	jnp    0x140014715
   14001469f:	scas   eax,DWORD PTR es:[rdi]
   1400146a0:	in     al,dx
   1400146a1:	(bad)  
   1400146a2:	jl     0x14001467f
   1400146a4:	ret    0xcae2
   1400146a7:	repnz (bad) 
   1400146a9:	jle    0x14001470c
   1400146ab:	pop    rdi
   1400146ac:	(bad)  
   1400146ad:	rex.WR (bad) 
   1400146af:	rex.WXB or al,0xc
   1400146b2:	or     DWORD PTR [rdx+0x66],edi
   1400146b5:	push   rdx
   1400146b6:	jae    0x1400146d8
   1400146b8:	add    cl,BYTE PTR [rdx]
   1400146ba:	rex.RB pop r15
   1400146bc:	and    DWORD PTR [rbx],0xa4d412a5
   1400146c2:	(bad)  
   1400146c3:	sub    ebp,edx
   1400146c5:	jmp    0x15ed1c098
   1400146ca:	movabs al,ds:0x2a493e5b22308967
   1400146d3:	movsxd eax,DWORD PTR [rsi+0x31d50b3d]
   1400146d9:	fcomi  st,st(1)
   1400146db:	cmp    DWORD PTR [rax+0x13b41c1b],esp
   1400146e1:	sbb    al,0x6a
   1400146e3:	rol    edx,cl
   1400146e5:	cdq    
   1400146e6:	int3   
   1400146e7:	ds loop 0x1400146cb
   1400146ea:	or     r8,QWORD PTR [r10]
   1400146ed:	fmul   DWORD PTR [rbp+0x3a]
   1400146f0:	adc    al,0x2
   1400146f2:	adc    ebp,0xf8bb3725
   1400146f8:	test   DWORD PTR [rbx-0x63f8c40b],ecx
   1400146fe:	(bad)  
   1400146ff:	add    al,0x66
   140014701:	mov    QWORD PTR [rax+r10*8+0x2],r9
   140014706:	mov    esp,0x882940e6
   14001470b:	jnp    0x140014693
   14001470d:	mov    ecx,0x48b4ce47
   140014712:	mov    DWORD PTR [rip+0xffffffff8608f818],edi        # 0xc60a3f30
   140014718:	mov    ebx,DWORD PTR [rax+rsi*2-0x1e]
   14001471c:	loop   0x14001473f
   14001471e:	pop    rsi
   14001471f:	jns    0x140014751
   140014721:	sbb    BYTE PTR [rbx-0x54f5b711],0xa0
   140014728:	xchg   esp,eax
   140014729:	lods   eax,DWORD PTR ds:[rsi]
   14001472a:	xchg   esi,eax
   14001472b:	stos   BYTE PTR es:[rdi],al
   14001472c:	xor    BYTE PTR [rdx+rbp*2],ah
   14001472f:	(bad)  
   140014730:	sbb    ah,BYTE PTR [rdx]
   140014732:	push   rcx
   140014733:	push   0x6a10fce1
   140014738:	adc    DWORD PTR [rax-0x3e],eax
   14001473b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001473c:	push   rbp
   14001473d:	sub    ebx,esp
   14001473f:	mov    esp,0x50c9710b
   140014744:	and    al,0x60
   140014746:	mov    BYTE PTR [rdi],ch
   140014748:	(bad)  
   140014749:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001474a:	rex.X scas al,BYTE PTR es:[rdi]
   14001474c:	(bad)  
   14001474d:	adc    bh,0x10
   140014750:	(bad)  
   140014751:	sti    
   140014752:	and    ebx,DWORD PTR [rsi+rcx*1-0x21]
   140014756:	adc    al,0x13
   140014758:	rcl    BYTE PTR [rsi],0xa3
   14001475b:	rex.WXB jbe 0x1400147c6
   14001475e:	retf   0x98d2
   140014761:	(bad)  
   140014762:	mov    esp,0xb5382c69
   140014767:	push   rsi
   140014768:	add    BYTE PTR [rsi+0x33],cl
   14001476b:	movabs es:0xdc03b18d86270d84,al
   140014775:	cmp    cl,0xfe
   140014778:	sub    DWORD PTR [rsi-0x49c6499f],0x12ea7a38
   140014782:	outs   dx,BYTE PTR ds:[rsi]
   140014783:	cmp    DWORD PTR [rax-0x19a984e9],edi
   140014789:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001478b:	fwait
   14001478c:	mul    BYTE PTR [rcx-0x31]
   14001478f:	mov    fs,WORD PTR [rbp-0x5c]
   140014792:	rex.WB (bad) 
   140014794:	addr32 ss (bad) 
   140014797:	js     0x140014790
   140014799:	(bad)  
   14001479a:	mov    edi,0xfc7b9fac
   14001479f:	pushf  
   1400147a0:	retf   
   1400147a1:	xchg   edi,eax
   1400147a2:	and    al,0x1a
   1400147a4:	xchg   ecx,eax
   1400147a5:	sbb    eax,0xc7c4ffbf
   1400147aa:	jle    0x14001479b
   1400147ac:	addr32 rex.WRXB fdivr st(3),st
   1400147b0:	jnp    0x140014759
   1400147b2:	rcl    DWORD PTR [rdi+rbp*8+0x3],1
   1400147b6:	ret    
   1400147b7:	mov    bh,0x43
   1400147b9:	js     0x14001478a
   1400147bb:	or     eax,esi
   1400147bd:	pmuludq mm7,QWORD PTR [rbx+rax*1+0x4512b80]
   1400147c5:	adc    BYTE PTR [rcx-0x504f74dd],ah
   1400147cb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400147cc:	cmp    eax,0xd42d378
   1400147d1:	adc    al,0x6
   1400147d3:	and    BYTE PTR [rdi+0x21c0eda3],dl
   1400147d9:	sbb    eax,0x77b27d3e
   1400147de:	repnz movsxd edi,DWORD PTR [rdi-0x10]
   1400147e2:	(bad)  
   1400147e3:	add    al,0xf4
   1400147e5:	adc    al,0x3a
   1400147e7:	add    BYTE PTR [rax-0x5e3c253a],dl
   1400147ed:	(bad)  
   1400147ee:	cld    
   1400147ef:	jrcxz  0x140014788
   1400147f1:	and    eax,0xf3f38b73
   1400147f6:	sti    
   1400147f7:	outs   dx,DWORD PTR ds:[rsi]
   1400147f8:	cmp    ah,BYTE PTR [rdx-0x4e]
   1400147fb:	(bad)  
   1400147fc:	fmul   QWORD PTR [rip+0x477c5e47]        # 0x1877da649
   140014802:	ficomp DWORD PTR [rbx]
   140014804:	in     al,dx
   140014805:	cwde   
   140014806:	(bad)  
   140014807:	hlt    
   140014808:	(bad)  
   140014809:	adc    ah,BYTE PTR [rsi]
   14001480b:	or     al,0x12
   14001480d:	add    esp,0x0
   140014810:	add    esp,DWORD PTR [rsi+0x631c1c08]
   140014816:	pop    rax
   140014817:	add    BYTE PTR [rsi+0x69],dl
   14001481a:	pop    rdi
   14001481b:	movabs eax,ds:0x6e379c4291d92480
   140014824:	push   0xffffffffb5f32401
   140014829:	imul   esp,DWORD PTR [rcx-0x544ef54e],0x412cf6ac
   140014833:	rex.RXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014835:	sbb    al,0x9d
   140014837:	add    BYTE PTR [rcx+rbx*2+0x90702d1],bh
   14001483e:	or     edx,DWORD PTR [rsi+0x18]
   140014841:	mov    cs,ebp
   140014843:	or     al,al
   140014845:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014846:	and    bh,BYTE PTR [rbx+0x26945a18]
   14001484c:	sub    eax,0xd0b820ca
   140014851:	sbb    eax,0x86140181
   140014856:	cwde   
   140014857:	ret    
   140014858:	rex.WR (bad) 
   14001485a:	(bad)  
   14001485b:	ja     0x1400148a9
   14001485d:	sub    ch,BYTE PTR [rax]
   14001485f:	gs data16 (bad) 
   140014862:	push   rcx
   140014863:	(bad)  
   140014864:	fyl2xp1 
   140014866:	(bad)  
   140014867:	cwde   
   140014868:	rex.WRB add r10b,BYTE PTR [r8+0x4a]
   14001486c:	sub    DWORD PTR [rcx],r14d
   14001486f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014870:	cs push 0xffffffffffffffc1
   140014873:	cmp    eax,0x9b119cc3
   140014878:	xchg   esp,eax
   140014879:	rex.XB cli 
   14001487b:	mov    ah,0x65
   14001487d:	ret    
   14001487e:	(bad)  
   14001487f:	out    0xe0,eax
   140014881:	push   rdx
   140014882:	xchg   edx,eax
   140014883:	rex.WXB
   140014884:	rex.WB cmp BYTE PTR [r8],dil
   140014887:	add    BYTE PTR [rbx],dl
   140014889:	(bad)  
   14001488a:	fs test eax,0xf1648396
   140014890:	mov    dl,0x5b
   140014892:	adc    al,0xb0
   140014894:	sub    BYTE PTR [rbp-0x7a],bl
   140014897:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014898:	sub    cl,BYTE PTR [rdx+0x62]
   14001489b:	sub    eax,0x2a00e95d
   1400148a0:	pop    rbp
   1400148a1:	(bad)  
   1400148a2:	(bad)  
   1400148a3:	rex.R loope 0x1400148c9
   1400148a6:	adc    eax,0x112c13ae
   1400148ab:	lods   al,BYTE PTR ds:[rsi]
   1400148ac:	rex.WXB xor rax,0x5ea78cba
   1400148b2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400148b3:	adc    BYTE PTR [rip+0x5c8b290b],ch        # 0x19c8c71c4
   1400148b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400148ba:	sub    al,0xd4
   1400148bc:	out    0x5,al
   1400148be:	mov    ah,0x2c
   1400148c0:	fst    QWORD PTR [rax+rbp*1]
   1400148c3:	and    eax,0xe0494615
   1400148c8:	sub    ecx,0x5f1b4fcf
   1400148ce:	stc    
   1400148cf:	(bad)  
   1400148d1:	(bad)  
   1400148d2:	fcomip st,st(7)
   1400148d4:	rex.RXB mov r15d,0xdb993ef4
   1400148da:	mov    r10d,0xd21be6eb
   1400148e0:	pop    rbp
   1400148e1:	sti    
   1400148e2:	(bad)  
   1400148e3:	pmaxub mm7,mm2
   1400148e6:	rex.WRB ja 0x1400148df
   1400148e9:	(bad)  
   1400148ea:	jae    0x140014927
   1400148ec:	mov    WORD PTR [rcx+0x25],fs
   1400148ef:	xchg   ebp,eax
   1400148f0:	xchg   ebx,eax
   1400148f1:	sub    al,0xf6
   1400148f3:	xchg   esp,eax
   1400148f4:	sbb    eax,0x99f03c6f
   1400148f9:	(bad)  
   1400148fa:	in     eax,dx
   1400148fb:	sti    
   1400148fc:	jle    0x14001491b
   1400148fe:	rex.WRB cmc 
   140014900:	mov    esi,0x3c07a9cb
   140014905:	iret   
   140014906:	cwde   
   140014907:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014909:	jmp    0x140014919
   14001490b:	add    BYTE PTR [rsi],ch
   14001490d:	rex.RXB sub eax,0xa68ae1ed
   140014913:	add    eax,0x93b598b9
   140014918:	jb     0x14001495a
   14001491a:	or     dl,BYTE PTR [rdi]
   14001491c:	jle    0x1400148ea
   14001491e:	add    ah,dh
   140014920:	rex.WRXB jle 0x14001490f
   140014923:	jle    0x1aaab312b
   140014929:	(bad)  
   14001492a:	test   ah,dh
   14001492c:	mov    esp,DWORD PTR [rax-0x7bf0bff4]
   140014932:	je     0x140014913
   140014934:	pop    rbp
   140014935:	jg     0x140014926
   140014937:	(bad)  
   140014938:	fs jle 0x1400149b4
   14001493b:	(bad)  
   14001493c:	icebp  
   14001493d:	loopne 0x1400148ca
   14001493f:	mov    ds,WORD PTR [rax-0x1232322]
   140014945:	fwait
   140014946:	pop    rsi
   140014947:	repnz (bad) 
   140014949:	(bad)  
   14001494a:	(bad)  
   14001494b:	outs   dx,BYTE PTR ds:[rsi]
   14001494c:	jle    0x1400149af
   14001494e:	(bad)  
   14001494f:	jle    0x1400149a0
   140014951:	retf   0x858c
   140014954:	pop    rsi
   140014955:	add    ah,BYTE PTR [rsi]
   140014957:	(bad)  
   140014958:	sub    DWORD PTR [rcx],esi
   14001495a:	rex.WRB jo 0x14001494d
   14001495d:	fcmovb st,st(4)
   14001495f:	mov    al,0xd0
   140014961:	adc    eax,0xd6c65605
   140014966:	rex xchg eax,eax
   140014968:	(bad)  
   140014969:	fs adc eax,0x66462885
   14001496f:	(bad)  
   140014970:	add    al,al
   140014972:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014973:	rex.WRXB stos BYTE PTR es:[rdi],al
   140014975:	(bad)  
   140014976:	mov    ch,al
   140014978:	sahf   
   140014979:	and    ecx,eax
   14001497b:	and    eax,0xb6355952
   140014980:	pop    rsp
   140014981:	and    ebp,DWORD PTR [rip+0x74845557]        # 0x1b4859ede
   140014987:	mov    ah,dh
   140014989:	rex
   14001498a:	rex.B jae 0x1400149dd
   14001498d:	(bad)  
   14001498e:	mov    esp,0xed436007
   140014993:	xor    dl,BYTE PTR [rcx-0x4f]
   140014996:	push   0xffffffffffffffc3
   140014998:	cmp    BYTE PTR [rcx+riz*8+0x78],dh
   14001499c:	(bad)  
   14001499d:	sub    ecx,esp
   14001499f:	(bad)  
   1400149a0:	sub    eax,0x9c8a6d3b
   1400149a5:	jo     0x14001495e
   1400149a7:	(bad)  
   1400149a8:	cld    
   1400149a9:	(bad)  
   1400149aa:	lock mov WORD PTR [rbp-0x34],cs
   1400149ae:	or     DWORD PTR [rcx],edx
   1400149b0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149b1:	ins    BYTE PTR es:[rdi],dx
   1400149b2:	mov    WORD PTR [rcx],fs
   1400149b4:	push   rax
   1400149b5:	or     al,BYTE PTR [rbx-0x7a]
   1400149b8:	rex sbb DWORD PTR [rbx+0x23398949],edx
   1400149bf:	push   rax
   1400149c0:	lahf   
   1400149c1:	or     al,0xa7
   1400149c3:	int3   
   1400149c4:	pushf  
   1400149c5:	xor    DWORD PTR [rbx+0x42],esi
   1400149c8:	xchg   esi,eax
   1400149c9:	cdq    
   1400149ca:	or     BYTE PTR [rcx],bl
   1400149cc:	adc    esi,DWORD PTR [rcx]
   1400149ce:	adc    dh,BYTE PTR [rdx]
   1400149d0:	add    al,0x32
   1400149d2:	in     al,dx
   1400149d3:	jb     0x1400149f4
   1400149d5:	cld    
   1400149d6:	cmp    al,0x79
   1400149d8:	push   rdx
   1400149d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400149da:	jo     0x140014965
   1400149dc:	out    dx,al
   1400149de:	ins    DWORD PTR es:[rdi],dx
   1400149df:	mov    ecx,0xaa144da5
   1400149e4:	(bad)  
   1400149e5:	stos   DWORD PTR es:[rdi],eax
   1400149e6:	sub    al,BYTE PTR [rdx+0x44]
   1400149e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149ea:	sub    bl,BYTE PTR [rdi+rsi*8-0x647b5d22]
   1400149f1:	mov    eax,0x3bcf77d5
   1400149f6:	add    eax,0x8f127c00
   1400149fb:	pop    rbx
   1400149fc:	in     eax,0xd7
   1400149fe:	stos   BYTE PTR es:[rdi],al
   1400149ff:	sbb    eax,DWORD PTR [rbx]
   140014a01:	gs rex.WB (bad) 
   140014a04:	mov    edx,0xa4040668
   140014a09:	test   BYTE PTR [rbp+0x69e5fdcb],bh
   140014a0f:	sub    ah,BYTE PTR [rsi-0x4f]
   140014a12:	jp     0x140014a0a
   140014a14:	cmp    BYTE PTR [rip+0xffffffff8809f47d],bh        # 0xc80b3e97
   140014a1a:	lods   al,BYTE PTR ds:[rsi]
   140014a1b:	retf   0x3f57
   140014a1e:	stc    
   140014a1f:	icebp  
   140014a20:	lea    esi,[rdx+0x2cb87d58]
   140014a26:	xchg   DWORD PTR [rsi+0x24],edx
   140014a29:	(bad)  
   140014a2a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014a2b:	xor    ebp,DWORD PTR [rdi-0x47120733]
   140014a31:	std    
   140014a32:	repz xchg esi,eax
   140014a34:	icebp  
   140014a35:	add    edi,DWORD PTR [rbp+0x72e000a0]
   140014a3b:	mov    ah,0x2d
   140014a3d:	rol    DWORD PTR [rdx+0x1b],cl
   140014a40:	fiadd  DWORD PTR [rbx-0x78]
   140014a43:	leave  
   140014a44:	xchg   ecx,ecx
   140014a46:	sbb    eax,0x3d0819
   140014a4b:	(bad)  
   140014a4d:	sti    
   140014a4e:	jmp    rdx
   140014a50:	rex.WXB add r10b,dil
   140014a53:	(bad)  
   140014a54:	sbb    al,0xb2
   140014a56:	xchg   DWORD PTR [rcx+0x7d],eax
   140014a59:	mov    edi,0x3aefe93f
   140014a5e:	mov    al,0xbc
   140014a60:	jmp    0x140014a30
   140014a62:	xlat   BYTE PTR ds:[rbx]
   140014a63:	fstp   QWORD PTR [rsp+rcx*2]
   140014a66:	mov    eax,DWORD PTR [rbp-0x4d23c8c3]
   140014a6c:	jnp    0x140014a55
   140014a6e:	sahf   
   140014a6f:	pop    rbp
   140014a70:	mov    ebp,0x8b7df9b9
   140014a75:	sbb    DWORD PTR [rsi-0x2a],0x33
   140014a79:	mov    WORD PTR [rcx+0x6a],es
   140014a7c:	nop
   140014a7d:	sbb    edx,eax
   140014a7f:	(bad)  
   140014a80:	(bad)  
   140014a81:	sbb    esp,DWORD PTR [rsi+0x5]
   140014a84:	adc    DWORD PTR [rax-0x58],0x3238b0a2
   140014a8b:	sub    dl,BYTE PTR [rip+0xffffffffc3ede9a2]        # 0x103ef3433
   140014a91:	push   rdx
   140014a92:	(bad)  
   140014a93:	push   rbp
   140014a94:	mov    cl,0x51
   140014a96:	add    al,0xa7
   140014a98:	cdq    
   140014a99:	sahf   
   140014a9a:	add    eax,0xe72a4474
   140014a9f:	movabs al,ds:0x4b39b1249f29623a
   140014aa8:	jno    0x140014b00
   140014aaa:	rex.RB enter 0x5915,0xac
   140014aaf:	or     esi,DWORD PTR [rax+0x4]
   140014ab2:	jo     0x140014b14
   140014ab4:	(bad)  
   140014ab5:	(bad)  
   140014ab6:	rex.WB outs dx,DWORD PTR ds:[rsi]
   140014ab8:	(bad)  
   140014ab9:	sub    DWORD PTR [rax+riz*8],0x53
   140014abd:	test   ebp,edx
   140014abf:	stc    
   140014ac0:	(bad)  
   140014ac1:	pop    rbp
   140014ac2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014ac3:	add    al,0x0
   140014ac5:	xchg   esp,eax
   140014ac6:	and    DWORD PTR [rdx+0x20],ecx
   140014ac9:	es pop rax
   140014acb:	lahf   
   140014acc:	or     eax,0x79cb858
   140014ad1:	jbe    0x140014b1c
   140014ad3:	rex.WRB in al,dx
   140014ad5:	sbb    al,0x91
   140014ad7:	pushf  
   140014ad8:	add    BYTE PTR [rax+rsi*1-0x7a39bd8d],dl
   140014adf:	fstp   DWORD PTR ss:[rcx-0x58f3e6ef]
   140014ae6:	rex.WR (bad) 
   140014ae8:	movsxd esi,DWORD PTR [rsi]
   140014aea:	cdq    
   140014aeb:	(bad)  
   140014aec:	retf   0x8802
   140014aef:	mov    al,0xcb
   140014af1:	cmc    
   140014af2:	rex.W sub BYTE PTR [rcx+0x37],spl
   140014af6:	pop    rbp
   140014af7:	fwait
   140014af8:	sub    BYTE PTR [rcx-0x4805870d],al
   140014afe:	(bad)  
   140014aff:	loopne 0x140014ab9
   140014b01:	cdq    
   140014b02:	push   rsp
   140014b03:	rex and BYTE PTR [rcx],0x51
   140014b07:	push   rbp
   140014b08:	xor    DWORD PTR [rsi-0x46],esp
   140014b0b:	idiv   esi
   140014b0d:	repnz movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014b0f:	(bad)  
   140014b10:	fwait
   140014b11:	push   rdi
   140014b12:	sub    dh,dh
   140014b14:	(bad)  
   140014b15:	femms  
   140014b17:	jle    0x140014b0a
   140014b19:	clc    
   140014b1a:	push   0xffffffffffffffd7
   140014b1c:	jno    0x140014ae3
   140014b1e:	cdq    
   140014b1f:	rex.WRXB cld 
   140014b21:	inc    BYTE PTR [rdi+0x1]
   140014b24:	ins    BYTE PTR es:[rdi],dx
   140014b25:	mov    cl,0xae
   140014b28:	shl    BYTE PTR [rip+0x6050dd51],1        # 0x1a052287f
   140014b2e:	test   dh,ah
   140014b30:	or     al,0xbc
   140014b32:	cs rex.WB jg 0x140014b13
   140014b36:	xor    BYTE PTR [rbp+0x4c],bh
   140014b39:	fbstp  TBYTE PTR [rax]
   140014b3b:	add    BYTE PTR [rax+0x25],dh
   140014b3e:	(bad)  
   140014b3f:	rcr    BYTE PTR [rsi],1
   140014b41:	mov    dh,dh
   140014b43:	xor    DWORD PTR [rbp+0x13],ebp
   140014b46:	sbb    DWORD PTR [rsp+rax*2+0x4091000b],0xffffff91
   140014b4e:	mov    cs,esi
   140014b50:	lahf   
   140014b51:	retf   0x7e4e
   140014b54:	in     al,dx
   140014b55:	rsqrtps xmm5,XMMWORD PTR [rax-0x3e33fff2]
   140014b5c:	add    DWORD PTR [rbx-0x10],eax
   140014b5f:	rex.WRB hlt 
   140014b61:	(bad)  
   140014b62:	mov    edi,0x4aafede9
   140014b67:	cli    
   140014b68:	or     ecx,DWORD PTR [rbx+0x73]
   140014b6b:	sti    
   140014b6c:	pandn  mm4,QWORD PTR [rdx+rsi*4-0x2]
   140014b71:	cld    
   140014b72:	inc    BYTE PTR [rbx+0x6e64bd37]
   140014b78:	(bad)  
   140014b79:	jno    0x140014b62
   140014b7b:	sar    ah,cl
   140014b7d:	fcom   QWORD PTR [rdx+0x6a]
   140014b80:	sbb    BYTE PTR [rbx],ch
   140014b82:	std    
   140014b83:	adc    al,0x69
   140014b85:	rex.X fdiv DWORD PTR [rbx]
   140014b88:	(bad)  
   140014b89:	sbb    eax,0x46c20b91
   140014b8e:	cs sti 
   140014b90:	sub    al,0x80
   140014b92:	lods   eax,DWORD PTR ds:[rsi]
   140014b93:	pop    rsp
   140014b94:	mov    ds,WORD PTR [rax+0x1]
   140014b97:	mov    dh,0x4a
   140014b99:	std    
   140014b9a:	mov    dh,0xb1
   140014b9c:	push   rbp
   140014b9d:	mov    WORD PTR [rdx+rax*1+0x672088c0],gs
   140014ba4:	rex.WB je 0x140014b3c
   140014ba7:	and    BYTE PTR [rbx-0x3bd30954],ch
   140014bad:	mov    gs,WORD PTR [rcx-0x12be31d4]
   140014bb3:	fsubr  DWORD PTR [rcx+0xe]
   140014bb6:	push   rcx
   140014bb7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014bb8:	pop    rdx
   140014bb9:	rcr    BYTE PTR [rax+riz*8],1
   140014bbc:	repz sbb al,0xdc
   140014bbf:	(bad)  
   140014bc0:	mov    al,0xd7
   140014bc2:	add    DWORD PTR [rbx+0x49d1edf],0xe30b5a27
   140014bcc:	sbb    ebp,edx
   140014bce:	mov    eax,0x262525fc
   140014bd3:	xchg   edi,eax
   140014bd4:	repz loopne 0x140014bd1
   140014bd7:	rex.RB push r11
   140014bd9:	(bad)  
   140014bda:	data16 lahf 
   140014bdc:	out    dx,eax
   140014bdd:	nop
   140014bde:	xor    dh,BYTE PTR [rbx-0x6b59f6fd]
   140014be4:	cdq    
   140014be5:	push   rdx
   140014be6:	xchg   bx,ax
   140014be8:	adc    BYTE PTR [rax+0x26338647],ch
   140014bee:	(bad)  
   140014bef:	mov    ebx,?
   140014bf1:	rex.WRX mov BYTE PTR [rax],r15b
   140014bf4:	xor    DWORD PTR [rcx-0x318da1fd],ecx
   140014bfa:	or     al,BYTE PTR [rbx]
   140014bfc:	xchg   BYTE PTR [rcx+0x7929252],al
   140014c02:	or     BYTE PTR [rsi+0x30003c49],0x77
   140014c09:	loopne 0x140014bd0
   140014c0b:	outs   dx,DWORD PTR ds:[rsi]
   140014c0c:	rex.WX jp 0x140014bcc
   140014c0f:	cmp    al,0x31
   140014c11:	leave  
   140014c12:	test   eax,0x396f306c
   140014c17:	rex.WXB (bad) 
   140014c19:	push   rbx
   140014c1a:	ss mov edi,0xc367b109
   140014c20:	xor    edi,ebx
   140014c22:	je     0x140014c84
   140014c24:	out    0xa1,eax
   140014c26:	sbb    eax,0x9f43fdf3
   140014c2b:	cmp    BYTE PTR [rdx+0x74],bh
   140014c2e:	loop   0x140014cac
   140014c30:	pop    rcx
   140014c31:	cmp    esi,ebx
   140014c33:	fyl2x  
   140014c35:	cdq    
   140014c36:	(bad)  
   140014c37:	lahf   
   140014c38:	push   rsp
   140014c39:	vandnpd ymm15,ymm15,YMMWORD PTR [rbp-0x55945ddc]
   140014c41:	cmp    al,BYTE PTR [rbx+rsi*2+0x26]
   140014c45:	pop    rsi
   140014c46:	pushf  
   140014c47:	int    0xa7
   140014c49:	lods   eax,DWORD PTR ds:[rsi]
   140014c4a:	iret   
   140014c4b:	jne    0x140014c94
   140014c4d:	xor    eax,DWORD PTR [rax]
   140014c4f:	js     0x140014c67
   140014c51:	mov    ah,0x5d
   140014c53:	adc    eax,ebx
   140014c55:	jns    0x140014c43
   140014c57:	mov    DWORD PTR [rcx-0x365a3f38],ecx
   140014c5d:	add    BYTE PTR es:[rdx+0x25],dl
   140014c61:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014c62:	(bad)  
   140014c63:	(bad)  
   140014c64:	cli    
   140014c65:	sti    
   140014c66:	pop    gs
   140014c68:	retf   0x8880
   140014c6b:	jp     0x140014c17
   140014c6d:	call   0x14c885003
   140014c72:	mov    bh,dh
   140014c74:	(bad)  
   140014c75:	xchg   edi,eax
   140014c76:	fdivr  QWORD PTR [rbp+0x68]
   140014c79:	loope  0x140014c5b
   140014c7b:	lods   eax,DWORD PTR ds:[rsi]
   140014c7c:	sti    
   140014c7d:	out    0xf,eax
   140014c7f:	fdiv   QWORD PTR [rdx-0x75]
   140014c82:	leave  
   140014c83:	(bad)  
   140014c84:	repz retf 
   140014c86:	(bad)  
   140014c87:	sbb    al,0xbe
   140014c89:	jae    0x140014c7a
   140014c8b:	mov    ds,WORD PTR [rip+0x4b8bf373]        # 0x18b8d4004
   140014c91:	xchg   DWORD PTR [rsi],edx
   140014c93:	jp     0x140014cbe
   140014c95:	(bad)  
   140014c96:	test   eax,0x60cf5cc1
   140014c9b:	xor    DWORD PTR [rbx-0x14],esp
   140014c9e:	in     al,dx
   140014c9f:	(bad)  
   140014ca0:	lea    ebp,[rax+0x16301105]
   140014ca6:	hlt    
   140014ca7:	(bad)  
   140014ca8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014ca9:	(bad)  
   140014caa:	fldcw  WORD PTR [rax*1+0x631b1456]
   140014cb1:	sub    r8d,r8d
   140014cb4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014cb5:	mov    cl,0x63
   140014cb7:	sbb    BYTE PTR [rdx+0x2400093c],al
   140014cbd:	idiv   BYTE PTR [rax]
   140014cbf:	push   rsp
   140014cc0:	rex.RX and al,0xe5
   140014cc3:	cmp    DWORD PTR [rdx+0x59],edx
   140014cc6:	(bad)  
   140014cc7:	xor    bl,BYTE PTR [rdi+0x23]
   140014cca:	add    esp,DWORD PTR [rax]
   140014ccc:	or     ah,BYTE PTR [rbp+0x4a]
   140014ccf:	add    BYTE PTR [rdi],al
   140014cd1:	test   DWORD PTR [rdx-0x3d],ecx
   140014cd4:	out    0xa0,eax
   140014cd6:	fsubp  st(1),st
   140014cd8:	shl    BYTE PTR [rbp-0x3d3e220d],0x17
   140014cdf:	(bad)  
   140014ce0:	mov    ah,0x10
   140014ce2:	clc    
   140014ce3:	leave  
   140014ce4:	int3   
   140014ce5:	lods   al,BYTE PTR ds:[rsi]
   140014ce6:	(bad)  
   140014ce7:	scas   eax,DWORD PTR es:[rdi]
   140014ce8:	fsub   st,st(5)
   140014cea:	adc    DWORD PTR [r9+0x2219ec0b],r10d
   140014cf1:	xor    BYTE PTR [rax+0x3073b10d],cl
   140014cf7:	adc    dl,BYTE PTR [rbx+0x62]
   140014cfa:	mov    WORD PTR [rbx],cs
   140014cfc:	imul   ebx,DWORD PTR [rdx],0x17
   140014cff:	ror    eax,0x88
   140014d02:	cmp    BYTE PTR [rbp+0x43],ah
   140014d05:	sbb    DWORD PTR [rbx],edx
   140014d07:	neg    DWORD PTR [rax-0x5b39ccd8]
   140014d0d:	(bad)  
   140014d0e:	pushf  
   140014d0f:	rex.WX push 0xffffffffffffffe6
   140014d12:	sbb    esi,0xe00d34fc
   140014d18:	pop    rbx
   140014d19:	(bad)  
   140014d1a:	sub    al,0xad
   140014d1c:	ins    BYTE PTR es:[rdi],dx
   140014d1d:	movabs al,ds:0x5003343bdf9bd307
   140014d26:	outs   dx,DWORD PTR ds:[rsi]
   140014d27:	(bad)  
   140014d28:	fwait
   140014d29:	xlat   BYTE PTR ds:[rbx]
   140014d2a:	and    eax,0x28031b03
   140014d2f:	rex.RX xchg DWORD PTR [rsi],r10d
   140014d32:	int3   
   140014d33:	cli    
   140014d34:	fistp  QWORD PTR [rbp-0x18189693]
   140014d3a:	(bad)  
   140014d3b:	pop    rdi
   140014d3c:	sub    BYTE PTR [rdi+0x6362ea7c],bh
   140014d42:	in     al,dx
   140014d43:	push   rbx
   140014d44:	mov    ecx,0xbd8f37f5
   140014d49:	out    0xdf,eax
   140014d4b:	cld    
   140014d4c:	(bad)  
   140014d4d:	or     bl,BYTE PTR [rbp-0x4d]
   140014d50:	(bad)  
   140014d51:	(bad)  
   140014d52:	xchg   ebp,eax
   140014d53:	(bad)  
   140014d54:	outs   dx,BYTE PTR ds:[rsi]
   140014d55:	mov    cl,dl
   140014d57:	rex.W
   140014d58:	rex.RB jae 0x140014d6c
   140014d5b:	mov    DWORD PTR [rcx],ebx
   140014d5d:	(bad)  
   140014d5e:	mov    eax,0x177da54e
   140014d63:	int    0x0
   140014d65:	loopne 0x140014dd6
   140014d67:	mov    DWORD PTR [rsi+0x3e1c6268],ebp
   140014d6d:	rex.WR
   140014d6e:	ds enter 0x44c5,0xcc
   140014d73:	and    BYTE PTR [rdi],bh
   140014d75:	push   rcx
   140014d76:	xchg   BYTE PTR [rdx-0x7a263857],ch
   140014d7c:	movabs ds:0x81ebef97ccf43ff7,eax
   140014d85:	sub    DWORD PTR [rbx],esp
   140014d87:	rex.RB (bad) 
   140014d89:	rex.R cmp eax,0xfd003340
   140014d8f:	mov    ecx,0x7657877d
   140014d94:	fcomip st,st(1)
   140014d96:	ficom  DWORD PTR [rdi]
   140014d98:	div    DWORD PTR [rdi-0x12]
   140014d9b:	fistp  WORD PTR [rdi-0x642512d3]
   140014da1:	(bad)  
   140014da2:	(bad)  
   140014da3:	out    dx,eax
   140014da4:	cmp    DWORD PTR [rax-0x10],esi
   140014da7:	shl    cl,1
   140014da9:	mov    ecx,0x7bfda585
   140014dae:	(bad)  
   140014daf:	(bad)  
   140014db0:	cmp    eax,0xc5eec226
   140014db5:	or     al,0xa9
   140014db7:	(bad)  
   140014db8:	sbb    al,0x5a
   140014dba:	rex.W sbb cl,BYTE PTR [rsi-0x37]
   140014dbe:	add    BYTE PTR [rdx],dl
   140014dc0:	xchg   edi,eax
   140014dc1:	(bad)  
   140014dc2:	jb     0x140014d68
   140014dc4:	push   rsp
   140014dc5:	(bad)  
   140014dc6:	cmp    eax,0x28a52397
   140014dcb:	(bad)  
   140014dcc:	rex.RX mov r12b,BYTE PTR [rcx+0x29]
   140014dd0:	sbb    BYTE PTR [rsi+0x559520a],dl
   140014dd6:	je     0x140014ded
   140014dd8:	sub    ah,BYTE PTR [rdi+0x9]
   140014ddb:	sbb    BYTE PTR [rcx-0x67],dl
   140014dde:	(bad)  
   140014ddf:	(bad)  
   140014de0:	adc    al,0x28
   140014de2:	(bad)  
   140014de3:	(bad)  
   140014de4:	or     al,0xfb
   140014de6:	or     bh,BYTE PTR [rcx]
   140014de8:	pop    rsi
   140014de9:	js     0x1b02ede8b
   140014def:	or     BYTE PTR [rcx+0x512eb03f],cl
   140014df5:	mov    ch,BYTE PTR [rbx+rcx*4+0x57810013]
   140014dfc:	or     BYTE PTR [rsi+0x12],ch
   140014dff:	xchg   edx,eax
   140014e00:	(bad)  
   140014e01:	add    al,0x76
   140014e03:	leave  
   140014e04:	(bad)  
   140014e05:	rex.WRX jnp 0x140014e28
   140014e08:	and    al,BYTE PTR [rbx-0x34]
   140014e0b:	or     al,0xf
   140014e0d:	or     al,0x4
   140014e0f:	xchg   BYTE PTR ss:[rbp-0x22c79f27],bh
   140014e16:	xchg   ecx,eax
   140014e17:	div    bh
   140014e19:	add    esi,ebx
   140014e1b:	(bad)  
   140014e1c:	rex.WR jmp 0x140014e02
   140014e1f:	mov    ebx,DWORD PTR [rbx-0x151009fb]
   140014e25:	movsxd ebp,DWORD PTR [rcx+0x21]
   140014e28:	vpsubq ymm2,ymm14,YMMWORD PTR [rdi]
   140014e2c:	mov    cl,0xb8
   140014e2e:	xor    BYTE PTR [rdi+0x1839b9b9],cl
   140014e34:	xchg   ebx,eax
   140014e35:	add    BYTE PTR [rax+0xffa113e],0x9c
   140014e3c:	mov    esp,0x87d7ff24
   140014e41:	mov    edi,0x67edd554
   140014e46:	(bad)  
   140014e47:	lods   eax,DWORD PTR ds:[rsi]
   140014e48:	mov    esp,0xbf97e278
   140014e4d:	cli    
   140014e4e:	sahf   
   140014e4f:	jmp    rcx
   140014e51:	ja     0x140014ddb
   140014e53:	push   0xffffffff96e5945c
   140014e58:	mov    BYTE PTR [rip+0xffffffffce316596],bl        # 0x10e32b3f4
   140014e5e:	mov    esp,DWORD PTR [rdx-0x28978a40]
   140014e64:	(bad)  
   140014e65:	sbb    esp,DWORD PTR [rdx-0x5ccde0d5]
   140014e6b:	scas   eax,DWORD PTR es:[rdi]
   140014e6c:	(bad)  
   140014e6d:	jne    0x140014eb6
   140014e6f:	(bad)  
   140014e70:	pushf  
   140014e71:	cmovb  edi,DWORD PTR [rbp+0x54]
   140014e75:	add    al,BYTE PTR [rax-0x5a]
   140014e78:	and    bh,BYTE PTR [rip+0x7ce47a10]        # 0x1bce5c88e
   140014e7e:	(bad)  
   140014e7f:	cmp    eax,0xf400c9ff
   140014e84:	(bad)  
   140014e85:	mov    edi,0x54afede9
   140014e8a:	adc    DWORD PTR [rbx+0x779df37c],esi
   140014e90:	jb     0x140014e68
   140014e92:	fbstp  TBYTE PTR [rbx-0x3d]
   140014e96:	movabs eax,ds:0x307e77b5dced775b
   140014e9f:	pop    rax
   140014ea0:	pop    rdx
   140014ea1:	(bad)  
   140014ea2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014ea3:	pop    rax
   140014ea4:	cdq    
   140014ea5:	rex.WRXB ror BYTE PTR [r11+0xc],1
   140014ea9:	xchg   esi,eax
   140014eaa:	sti    
   140014eab:	(bad)  
   140014eac:	pop    rcx
   140014ead:	adc    eax,0x8835a8b9
   140014eb2:	movabs eax,ds:0x44282e5ac50b0c55
   140014ebb:	mov    cl,0x36
   140014ebd:	je     0x140014e9e
   140014ebf:	out    0x87,eax
   140014ec1:	(bad)  
   140014ec2:	or     cl,BYTE PTR [rax+rcx*2+0x21801ce4]
   140014ec9:	test   eax,0x3971073d
   140014ece:	movaps xmm0,xmm6
   140014ed1:	rex.WRXB add r14,QWORD PTR [r10]
   140014ed4:	(bad)
   140014ed8:	xor    al,0xc0
   140014eda:	add    DWORD PTR [rbp+0x44834568],ebp
   140014ee0:	xor    eax,0x44f73b54
   140014ee5:	(bad)  
   140014ee6:	adc    BYTE PTR [rdx+riz*2],al
   140014ee9:	cwde   
   140014eea:	sbb    DWORD PTR [rdx],ebp
   140014eec:	push   0xffffffffffffffc0
   140014eee:	(bad)  
   140014eef:	adc    BYTE PTR [rax-0x66ffbc9f],0x17
   140014ef6:	in     eax,dx
   140014ef7:	pop    rcx
   140014ef8:	mov    eax,0x765ebbf1
   140014efd:	loopne 0x140014eac
   140014eff:	outs   dx,DWORD PTR ds:[rsi]
   140014f00:	jmp    QWORD PTR [rbp-0xca18a71]
   140014f06:	rol    BYTE PTR [rdi+0x7e],cl
   140014f09:	jmp    0x17fed7d4d
   140014f0e:	xor    bh,BYTE PTR [rdi]
   140014f10:	mov    edi,0xc2d2d0fb
   140014f15:	(bad)  
   140014f16:	and    esi,DWORD PTR [rdi]
   140014f18:	out    dx,al
   140014f19:	(bad)  
   140014f1a:	jo     0x140014edf
   140014f1c:	sar    BYTE PTR [rsi+0x345e07bd],cl
   140014f22:	sub    ch,BYTE PTR [rdi+rdi*4+0x28]
   140014f26:	mov    ah,cl
   140014f28:	adc    esp,DWORD PTR [rdi-0x50b09bd1]
   140014f2e:	(bad)  
   140014f2f:	or     al,0x13
   140014f31:	pop    rbp
   140014f32:	and    cl,al
   140014f34:	or     DWORD PTR [rip+0xffffffffc1e47e6f],ebx        # 0x101e5cda9
   140014f3a:	ja     0x140014f3b
   140014f3c:	repz call QWORD PTR [rbx+0x1b380a98]
   140014f43:	mov    edi,0x2f32cb28
   140014f48:	mov    dh,BYTE PTR [rdx-0x57dd35d4]
   140014f4e:	stc    
   140014f4f:	ror    BYTE PTR [rbx],0x8c
   140014f52:	jmp    0x1406ae9ba
   140014f57:	iret   
   140014f58:	add    edi,DWORD PTR [rdx-0x2c8e9664]
   140014f5e:	lea    eax,[rdi-0x6660d295]
   140014f64:	rex add DWORD PTR [rax+rcx*8],ebx
   140014f68:	add    BYTE PTR [rdx-0x32a9ea40],bl
   140014f6e:	sahf   
   140014f6f:	cld    
   140014f70:	enter  0x3eef,0xc
   140014f74:	and    BYTE PTR [rbx],al
   140014f76:	test   al,0x7
   140014f78:	movabs al,ds:0x3b7a293e84a6404f
   140014f81:	pop    rdi
   140014f82:	cli    
   140014f83:	(bad)  
   140014f84:	add    ecx,DWORD PTR [rbx]
   140014f86:	(bad)  
   140014f87:	outs   dx,BYTE PTR ds:[rsi]
   140014f88:	mov    ecx,0x2dc0fe61
   140014f8d:	mov    bh,0x70
   140014f8f:	ficomp DWORD PTR [rdi-0x68]
   140014f92:	fstp   TBYTE PTR [rbx-0x18]
   140014f95:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014f96:	(bad)  
   140014f97:	in     eax,dx
   140014f98:	fnsave [rip+0x6e96e66f]        # 0x1ae98360d
   140014f9e:	cmp    al,0xb0
   140014fa0:	cmp    al,0x40
   140014fa2:	(bad)  
   140014fa3:	gs in  al,dx
   140014fa5:	pushf  
   140014fa6:	rex.WXB xchg r9,rax
   140014fa8:	sbb    al,dh
   140014faa:	sub    eax,0x35a4692b
   140014faf:	clc    
   140014fb0:	jns    0x140014f6f
   140014fb2:	rex (bad) 
   140014fb4:	(bad)  
   140014fb6:	(bad)  
   140014fb7:	cs rex.R jno 0x140015024
   140014fbb:	sub    al,0xb7
   140014fbd:	(bad)  
   140014fbe:	push   rsi
   140014fbf:	jno    0x14001502a
   140014fc1:	push   0x602c59b1
   140014fc6:	mov    bl,0x10
   140014fc8:	nop
   140014fc9:	(bad)  
   140014fca:	cmp    DWORD PTR [rbp+0x1d],edx
   140014fcd:	mov    cl,0xda
   140014fcf:	(bad)  
   140014fd0:	movabs eax,ds:0x32e72442cf292632
   140014fd9:	(bad)  
   140014fda:	(bad)  
   140014fdb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014fdc:	(bad)  
   140014fdd:	mov    BYTE PTR [rax+0x38c55dc0],0x9c
   140014fe4:	add    DWORD PTR [rcx+0x5a],edx
   140014fe7:	pop    rbx
   140014fe8:	fwait
   140014fe9:	(bad)  
   140014fea:	add    al,0xa0
   140014fec:	hlt    
   140014fed:	rex.WXB mov r8b,0x2f
   140014ff0:	iret   
   140014ff1:	cdq    
   140014ff2:	faddp  st(4),st
   140014ff4:	rex.WB sahf 
   140014ff6:	rex.W in eax,dx
   140014ff8:	(bad)  
   140014ff9:	rcr    DWORD PTR [rdi-0x4],cl
   140014ffc:	(bad)  
   140014ffd:	push   rdi
   140014ffe:	(bad)  
   140014fff:	lock mov DWORD PTR ds:[rbp+0x2b],esi
   140015004:	mov    dl,0x66
   140015006:	lods   eax,DWORD PTR ds:[rsi]
   140015007:	pop    rbp
   140015008:	sub    ecx,DWORD PTR [rdx+0x76b4bd62]
   14001500e:	sub    BYTE PTR [rdx],ah
   140015010:	lea    ebp,[rsp+rdi*1+0x63]
   140015014:	mov    WORD PTR [rsi],fs
   140015016:	(bad)  
   140015017:	or     BYTE PTR [rbx],dh
   140015019:	or     eax,DWORD PTR [rax+0x25]
   14001501c:	or     DWORD PTR [rdx+0x55],ecx
   14001501f:	mov    ch,0x22
   140015021:	(bad)  
   140015022:	(bad)  
   140015023:	jns    0x1400150a3
   140015025:	(bad)  
   140015026:	repz icebp 
   140015028:	scas   eax,DWORD PTR es:[rdi]
   140015029:	and    eax,0x79e000cd
   14001502e:	rex.WRX
   14001502f:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140015031:	(bad)  
   140015032:	jp     0x140015075
   140015034:	jle    0x140014ff0
   140015036:	ins    DWORD PTR es:[rdi],dx
   140015037:	lods   eax,DWORD PTR ds:[rsi]
   140015038:	mov    r8d,0xa451de4
   14001503e:	rex.RX jp 0x140015022
   140015041:	sub    esi,edi
   140015043:	cmc    
   140015044:	(bad)  
   140015045:	jg     0x140015030
   140015047:	mov    bl,0x3d
   140015049:	and    ch,dl
   14001504b:	adc    eax,edx
   14001504d:	(bad)  
   14001504e:	movabs eax,ds:0xe1df6e620d3abf77
   140015057:	in     eax,0xdd
   140015059:	ja     0x140015019
   14001505b:	div    BYTE PTR [rsi-0x4023122]
   140015061:	mov    bl,0xc5
   140015063:	popf   
   140015064:	sti    
   140015065:	mov    dl,0x85
   140015067:	xchg   ebp,eax
   140015068:	fnstsw WORD PTR [rbx-0x4fc5108a]
   14001506e:	ja     0x14001505f
   140015070:	or     eax,0x59071687
   140015075:	outs   dx,DWORD PTR ds:[rsi]
   140015076:	jns    0x1400150a6
   140015078:	(bad)
   14001507b:	adc    al,0xbd
   14001507d:	xchg   esp,eax
   14001507e:	jno    0x140015063
   140015080:	rex.X mov bl,BYTE PTR [rbx]
   140015083:	(bad)  
   140015084:	(bad)  
   140015085:	adc    esp,DWORD PTR [rbx-0x4422f42a]
   14001508b:	pop    rcx
   14001508c:	or     BYTE PTR [rsi],ch
   14001508e:	(bad)  
   14001508f:	in     al,dx
   140015090:	loope  0x14001506e
   140015092:	sub    ch,BYTE PTR [rsi]
   140015094:	mov    es,WORD PTR [rip+0xffffffffbb38a179]        # 0xfb39f213
   14001509a:	pop    rcx
   14001509b:	add    ch,BYTE PTR [rdx+0x255d50ab]
   1400150a1:	xchg   ebp,eax
   1400150a2:	mov    bl,0x50
   1400150a4:	sbb    DWORD PTR [rcx+0xd],edi
   1400150a7:	(bad)  
   1400150a8:	int3   
   1400150a9:	test   ebx,ecx
   1400150ab:	jns    0x140015055
   1400150ad:	or     esi,DWORD PTR [rsi+rbx*2+0x1e]
   1400150b1:	sbb    al,0xe6
   1400150b3:	jnp    0x14001505b
   1400150b5:	test   DWORD PTR [rdx-0x194088e5],0x2cd7a7cb
   1400150bf:	cmp    dl,BYTE PTR [rsi+0x67abb2de]
   1400150c5:	mov    esi,0x8aa86008
   1400150ca:	jne    0x140015074
   1400150cc:	scas   al,BYTE PTR es:[rdi]
   1400150cd:	mov    edx,ebp
   1400150cf:	(bad)  
   1400150d0:	stos   BYTE PTR es:[rdi],al
   1400150d1:	outs   dx,BYTE PTR ds:[rsi]
   1400150d2:	test   al,0xea
   1400150d4:	sbb    ch,dh
   1400150d6:	(bad)  
   1400150d7:	fwait
   1400150d8:	adc    al,BYTE PTR [rax-0x4545294b]
   1400150de:	or     ah,BYTE PTR [rdx-0x667b666a]
   1400150e4:	jne    0x14001511e
   1400150e6:	sbb    bh,BYTE PTR [rbp+0x177da5e0]
   1400150ec:	int    0x0
   1400150ee:	loopne 0x14001512a
   1400150f0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400150f1:	mov    es,esp
   1400150f3:	sub    al,al
   1400150f5:	in     eax,0xa3
   1400150f7:	push   rdi
   1400150f8:	je     0x1400150ed
   1400150fa:	loope  0x1400150bf
   1400150fc:	mov    WORD PTR fs:[rbx-0x7cfafbe6],ds
   140015103:	mov    ch,bl
   140015105:	mov    esp,0xd38d987e
   14001510a:	rex.WRXB hlt 
   14001510c:	ss (bad) 
   14001510e:	cmp    al,0xf1
   140015110:	xor    DWORD PTR [rdx],eax
   140015112:	push   rbp
   140015113:	(bad)  
   140015114:	rex.WRX test al,0x3
   140015117:	or     DWORD PTR [rax-0x202c806],eax
   14001511d:	ja     0x1400150fb
   14001511f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015120:	(bad)
   140015125:	jmp    0x156f7ed3f
   14001512a:	mov    dl,0xe5
   14001512c:	pop    rbp
   14001512d:	(bad)  
   14001512e:	mov    ebp,0x8381e0e8
   140015133:	cmp    DWORD PTR [rcx-0x5a212d3f],0x1e
   14001513a:	cli    
   14001513b:	sub    DWORD PTR [rbx-0x9],esp
   14001513e:	jl     0x14001514f
   140015140:	mov    edi,DWORD PTR [rip+0x5ef981c6]        # 0x19efad30c
   140015146:	add    eax,0x8bcda80a
   14001514b:	in     eax,0x53
   14001514d:	fwait
   14001514e:	in     eax,0x72
   140015150:	and    DWORD PTR [rdx-0x8],edi
   140015153:	ret    0x22d0
   140015156:	mov    bh,0x8a
   140015158:	addr32 mov dh,0x2c
   14001515b:	ss repnz rex.RB ins BYTE PTR es:[rdi],dx
   14001515f:	in     al,0x2
   140015161:	mov    BYTE PTR [rdi+riz*1],bl
   140015164:	enter  0x2218,0x67
   140015168:	rex.WB cmc 
   14001516a:	adc    ah,BYTE PTR [rsp+rbx*2+0x60d72923]
   140015171:	mov    esi,DWORD PTR [rbp-0x6b460130]
   140015177:	sti    
   140015178:	outs   dx,DWORD PTR ds:[rsi]
   140015179:	mov    edx,0xf477e0f3
   14001517e:	push   rbx
   14001517f:	mov    bl,0x74
   140015181:	fbld   TBYTE PTR [rbx-0x7d0b88b1]
   140015187:	out    0xa7,al
   140015189:	ds clc 
   14001518b:	stos   DWORD PTR es:[rdi],eax
   14001518c:	mov    edi,0x42a2e00d
   140015191:	(bad)  
   140015192:	mov    dl,ch
   140015194:	stos   BYTE PTR es:[rdi],al
   140015195:	mov    ch,BYTE PTR [rax+rbp*1+0x30]
   140015199:	push   rsi
   14001519a:	(bad)  
   14001519b:	adc    BYTE PTR [rdi+0x28d7146f],bh
   1400151a1:	lods   eax,DWORD PTR ds:[rsi]
   1400151a2:	push   rbp
   1400151a3:	sar    BYTE PTR [rsi+0x43],0x32
   1400151a7:	jge    0x1400151f5
   1400151a9:	xor    ebx,DWORD PTR [rdi]
   1400151ab:	shl    BYTE PTR [rdi],0x38
   1400151ae:	rex.WRB and al,0x48
   1400151b1:	add    eax,0x4a614313
   1400151b6:	xchg   ecx,eax
   1400151b7:	(bad)  
   1400151b8:	test   eax,0x12e444a6
   1400151bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400151be:	enter  0x8383,0xd3
   1400151c2:	and    bh,dl
   1400151c4:	mov    ebx,0x8ddd7cef
   1400151c9:	or     eax,DWORD PTR [rdi]
   1400151cb:	outs   dx,BYTE PTR ds:[rsi]
   1400151cc:	cmp    DWORD PTR [rax],edi
   1400151ce:	jg     0x140015193
   1400151d0:	int    0x2f
   1400151d2:	out    0xb4,al
   1400151d4:	mov    bh,0xd8
   1400151d6:	pop    rbx
   1400151d7:	fnstenv [rbx-0xd]
   1400151da:	sahf   
   1400151db:	sbb    eax,0xef763b4b
   1400151e0:	mov    ebp,0xbbd96e1
   1400151e5:	cmp    eax,0xec13f5cc
   1400151ea:	cdq    
   1400151eb:	iret   
   1400151ec:	ror    BYTE PTR [rbx+0x18],1
   1400151ef:	(bad)  
   1400151f0:	cs cmp ebx,edx
   1400151f3:	add    al,cl
   1400151f5:	xor    DWORD PTR [rcx],ecx
   1400151f7:	neg    edi
   1400151f9:	rex.RX
   1400151fa:	cs pop rax
   1400151fc:	retf   
   1400151fd:	add    eax,0x187004cf
   140015202:	pop    rdx
   140015203:	in     al,0x85
   140015205:	loopne 0x1400151db
   140015207:	rex.RX mov DWORD PTR [rbp-0x4bc66174],r12d
   14001520e:	pushf  
   14001520f:	loop   0x1400151e6
   140015211:	sti    
   140015212:	(bad)  
   140015213:	std    
   140015214:	xchg   ebp,eax
   140015215:	jle    0x140015249
   140015217:	jg     0x140015282
   140015219:	sub    ebp,DWORD PTR [rdi]
   14001521b:	jg     0x140015219
   14001521d:	ja     0x14001520e
   14001521f:	rex.WXB loop 0x14001525e
   140015222:	jl     0x140015226
   140015224:	repnz mov ch,0xbf
   140015227:	stc    
   140015228:	ror    bh,0x9c
   14001522b:	stc    
   14001522c:	retf   
   14001522d:	(bad)  
   14001522f:	lods   al,BYTE PTR ds:[rsi]
   140015230:	mov    bl,BYTE PTR [rsp+rbp*1-0x53]
   140015234:	mov    ebp,0x86c5e794
   140015239:	mov    BYTE PTR [rip+0x15852b5b],bl        # 0x155867d9a
   14001523f:	jnp    0x14001521e
   140015241:	es jmp 0x1419b5fa3
   140015247:	ror    BYTE PTR [rsi+rbp*1+0x17b98d4b],0xf5
   14001524f:	sbb    al,0x8c
   140015251:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015252:	sub    al,0xca
   140015254:	mov    WORD PTR [rax+0x3ea53052],cs
   14001525a:	scas   eax,DWORD PTR es:[rdi]
   14001525b:	(bad)  
   14001525c:	add    esp,DWORD PTR [rcx+0xe]
   14001525f:	(bad)  
   140015260:	mov    ah,0xc8
   140015262:	out    0xf,al
   140015264:	fdiv   QWORD PTR [rdx-0x40343095]
   14001526a:	in     eax,dx
   14001526b:	jbe    0x140015240
   14001526d:	sbb    ebp,esp
   14001526f:	cwde   
   140015270:	fstp   TBYTE PTR [rbx-0x1d]
   140015273:	lods   eax,DWORD PTR ds:[rsi]
   140015274:	jmp    0x1a4c02555
   140015279:	outs   dx,BYTE PTR ds:[rsi]
   14001527a:	(bad)  
   14001527b:	iret   
   14001527c:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14001527e:	ds jb  0x1400152f4
   140015281:	mov    edi,0x2ff6f597
   140015286:	div    DWORD PTR [rcx-0x2d4fb7c4]
   14001528c:	rex.WRXB mov r8b,0xd2
   14001528f:	xor    ebx,DWORD PTR [rax-0x16]
   140015292:	(bad)  
   140015293:	(bad)  
   140015294:	(bad)  
   140015295:	or     al,0xf9
   140015297:	int3   
   140015298:	add    DWORD PTR [rax+rcx*1],esp
   14001529b:	test   BYTE PTR [rcx+0x21],dl
   14001529e:	clc    
   14001529f:	jmp    0xce1e4ee3
   1400152a4:	(bad)  
   1400152a5:	mov    bl,0x59
   1400152a7:	mov    ch,0x8d
   1400152a9:	(bad)  
   1400152aa:	(bad)  
   1400152ab:	outs   dx,DWORD PTR ds:[rsi]
   1400152ac:	jle    0x1400152a3
   1400152ae:	mov    bl,0x3f
   1400152b0:	jg     0x1400152a4
   1400152b2:	iret   
   1400152b3:	(bad)  
   1400152b4:	shl    DWORD PTR [rdi+0x54],cl
   1400152b7:	je     0x14001527c
   1400152b9:	pop    rdx
   1400152ba:	mov    ebx,0x5872da51
   1400152bf:	adc    al,0xc5
   1400152c1:	pop    rax
   1400152c2:	rex.R ins DWORD PTR es:[rdi],dx
   1400152c4:	imul   ecx,ebx,0xf72526eb
   1400152ca:	pop    rdx
   1400152cb:	ror    DWORD PTR [rax+rax*1],1
   1400152ce:	data16 hlt 
   1400152d0:	pushf  
   1400152d1:	jmp    0x15c0316bc
   1400152d6:	(bad)  
   1400152d8:	jle    0x14001526a
   1400152da:	rcr    DWORD PTR [rdx+rcx*4],cl
   1400152dd:	mov    dl,0x4c
   1400152df:	fldcw  WORD PTR [rcx+0xd]
   1400152e2:	or     DWORD PTR [rcx],edx
   1400152e4:	gs lock jle 0x14001526f
   1400152e8:	add    BYTE PTR [rsi],cl
   1400152ea:	and    ah,dh
   1400152ec:	movsx  ebp,dh
   1400152ef:	(bad)  
   1400152f0:	mov    ebp,0xec2c1934
   1400152f5:	pop    rax
   1400152f6:	mov    esi,0x73978ef9
   1400152fb:	xchg   edx,eax
   1400152fc:	sub    eax,0x6ebbcb66
   140015301:	cmp    bh,BYTE PTR [rdi+rsi*2-0x2d3d3509]
   140015308:	repnz (bad) 
   14001530a:	std    
   14001530b:	sub    edi,DWORD PTR [rbp+0xc]
   14001530e:	push   rdx
   14001530f:	add    edx,DWORD PTR [rbp+0x45]
   140015312:	pop    rsi
   140015313:	xchg   esp,eax
   140015314:	cmp    BYTE PTR [rdi+0x71],bh
   140015317:	mov    bl,0xf8
   140015319:	call   0x160d37aa1
   14001531e:	stc    
   14001531f:	or     eax,0xfd7683eb
   140015324:	cld    
   140015325:	(bad)  
   140015326:	(bad)  
   140015327:	std    
   140015328:	in     eax,0x7f
   14001532a:	cmc    
   14001532b:	cmp    eax,DWORD PTR [rax+rbx*1-0x55]
   14001532f:	push   0xffffffffffffffa1
   140015331:	stos   BYTE PTR es:[rdi],al
   140015332:	jrcxz  0x140015306
   140015334:	fidivr DWORD PTR [rsp+rdi*1-0x32]
   140015338:	mov    edx,DWORD PTR [rsi-0x3de400f9]
   14001533e:	cdq    
   14001533f:	neg    DWORD PTR [rcx+rbp*2+0x6]
   140015343:	add    BYTE PTR [rbx],dh
   140015345:	cli    
   140015346:	mov    edx,0x801cd790
   14001534b:	out    0x6a,al
   14001534d:	shl    BYTE PTR [rsi],1
   14001534f:	(bad)  
   140015350:	mov    edx,DWORD PTR [rcx+rcx*8-0x1f0fda33]
   140015357:	loopne 0x14001533f
   140015359:	pop    rax
   14001535a:	clc    
   14001535b:	cmp    DWORD PTR [rax],ebx
   14001535d:	or     bl,BYTE PTR [rip+0xffffffffebd979ec]        # 0x12bdacd4f
   140015363:	outs   dx,DWORD PTR ds:[rsi]
   140015364:	pop    rsp
   140015365:	jl     0x140015360
   140015367:	sbb    edi,DWORD PTR [rdi-0x56f48573]
   14001536d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001536e:	sub    DWORD PTR [rdi+0x49e9496],0xffffff91
   140015375:	test   al,0x2d
   140015377:	xchg   ebx,eax
   140015378:	(bad)  
   140015379:	cld    
   14001537a:	(bad)  
   14001537c:	(bad)  
   14001537d:	fdiv   DWORD PTR [rax-0x399a2b9f]
   140015383:	lods   eax,DWORD PTR ds:[rsi]
   140015384:	mov    dl,BYTE PTR [rsi+0x6d1c2bea]
   14001538a:	ins    BYTE PTR es:[rdi],dx
   14001538b:	ins    DWORD PTR es:[rdi],dx
   14001538c:	jle    0x140015351
   14001538e:	js     0x140015380
   140015390:	push   QWORD PTR [rsi]
   140015392:	push   0xffffffffba330006
   140015397:	es je  0x14001538d
   14001539a:	lea    eax,[rdi+0x2c16ce29]
   1400153a0:	retf   
   1400153a1:	ret    0x68a8
   1400153a4:	(bad)  
   1400153a5:	push   rbx
   1400153a6:	xor    BYTE PTR [rbx],0x10
   1400153a9:	adc    ch,BYTE PTR [rax]
   1400153ab:	in     al,dx
   1400153ac:	cmp    BYTE PTR [rdi],bl
   1400153ae:	scas   eax,DWORD PTR es:[rdi]
   1400153af:	lahf   
   1400153b0:	cmp    eax,0x80073e7f
   1400153b5:	sub    al,0x4d
   1400153b7:	sbb    DWORD PTR [rax],eax
   1400153b9:	xchg   edx,eax
   1400153ba:	and    al,0x21
   1400153bc:	imul   ebx,DWORD PTR [rbp-0x186390fd],0x71
   1400153c3:	fdiv   DWORD PTR [rsi+riz*4-0x1e]
   1400153c7:	(bad)  
   1400153c8:	rex.WXB (bad) 
   1400153ca:	add    eax,eax
   1400153cc:	mov    WORD PTR [rsi+0x6c5aea17],gs
   1400153d2:	movsxd eax,esi
   1400153d4:	lock xor ebx,DWORD PTR [rdx+0x34668cd1]
   1400153db:	movabs ds:0x8cd19a334668cd19,eax
   1400153e4:	data16 xor al,0xa3
   1400153e7:	sbb    ebp,ecx
   1400153e9:	push   0xffffffffd19a3346
   1400153ee:	mov    WORD PTR [rsi+0x34],fs
   1400153f1:	movabs ds:0x8cd19a334668cd19,eax
   1400153fa:	data16 xor al,0xa3
   1400153fd:	sbb    ebp,ecx
   1400153ff:	push   0xffffffffd19a3346
   140015404:	mov    WORD PTR [rsi+0x34],fs
   140015407:	movabs ds:0x8cd19a334668cd19,eax
   140015410:	data16 xor al,0xa3
   140015413:	sbb    ebp,ecx
   140015415:	push   0xffffffffd19a3346
   14001541a:	mov    WORD PTR [rsi+0x34],fs
   14001541d:	movabs ds:0x8cd19a334668cd19,eax
   140015426:	data16 xor al,0xa3
   140015429:	sbb    ebp,ecx
   14001542b:	push   0xffffffffd19a3346
   140015430:	mov    WORD PTR [rsi+0x34],fs
   140015433:	movabs ds:0xe33fff4005e8cd19,eax
   14001543c:	push   0x2c
   14001543e:	ins    BYTE PTR es:[rdi],dx
   14001543f:	xchg   ecx,eax
   140015440:	rex.W stc 
   140015442:	add    eax,DWORD PTR [rax]
   140015444:	add    BYTE PTR [rax],al
   140015446:	add    BYTE PTR [rcx+0x45],cl
   140015449:	rex.WRX
   14001544a:	rex.R scas al,BYTE PTR es:[rdi]
   14001544c:	rex.X (bad) 
   14001544e:	(bad)  
   14001544f:	add    BYTE PTR [rax],ch
   140015451:	add    BYTE PTR [rax],al
   140015453:	add    BYTE PTR [rax+0x0],al
   140015456:	add    BYTE PTR [rax],al
   140015458:	add    BYTE PTR [rax],0x0
   14001545b:	add    BYTE PTR [rcx],al
   14001545d:	add    BYTE PTR [rax],ah
   14001545f:	add    BYTE PTR [rax],al
   140015461:	add    BYTE PTR [rax],al
   140015463:	add    BYTE PTR [rax],al
   140015465:	rex.X add BYTE PTR [rax],al
	...
   140015810:	mov    esp,0xbc086f9d
   140015815:	popf   
   140015816:	outs   dx,DWORD PTR ds:[rsi]
   140015817:	adc    DWORD PTR [rbp+rbx*4-0x6243e291],edi
   14001581e:	outs   dx,DWORD PTR ds:[rsi]
   14001581f:	cs mov esp,0xbc456b9b
   140015825:	popf   
   140015826:	outs   dx,BYTE PTR ds:[rsi]
   140015827:	sub    al,0xbc
   140015829:	popf   
   14001582a:	outs   dx,DWORD PTR ds:[rsi]
   14001582b:	or     DWORD PTR [rax],eax
	...
   1400158f1:	add    BYTE PTR [rax],al
   1400158f3:	add    BYTE PTR [rbp+rbx*4-0x6243f891],bh
   1400158fa:	outs   dx,DWORD PTR ds:[rsi]
   1400158fb:	adc    DWORD PTR [rbp+rbx*4-0x6243e391],edi
   140015902:	outs   dx,DWORD PTR ds:[rsi]
   140015903:	cs mov esp,0xbc45689a
   140015909:	xchg   edi,eax
   14001590a:	(bad)  
   14001590b:	pop    rdi
   14001590c:	mov    ebx,0xb2805a93
   140015911:	mov    dl,BYTE PTR [rcx-0x67]
   140015914:	stos   BYTE PTR es:[rdi],al
   140015915:	(bad)  
   140015916:	rex.WR lods al,BYTE PTR ds:[rsi]
   140015918:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015919:	or     BYTE PTR [rax-0x40],0xab
   14001591d:	test   BYTE PTR [rbp-0x2b],cl
   140015920:	mov    al,0x8a
   140015922:	push   rdx
   140015923:	fcom   QWORD PTR [rax-0x6853b98f]
   140015929:	jle    0x140015984
   14001592b:	gs mov esp,0xbc176f9d
   140015931:	popf   
   140015932:	outs   dx,DWORD PTR ds:[rsi]
   140015933:	add    al,0x0
	...
   1400159d5:	add    BYTE PTR [rax],al
   1400159d7:	add    BYTE PTR [rbp+rbx*4-0x6243f991],bh
   1400159de:	outs   dx,DWORD PTR ds:[rsi]
   1400159df:	adc    BYTE PTR [rbp+rbx*4-0x6243e391],bh
   1400159e6:	outs   dx,DWORD PTR ds:[rsi]
   1400159e7:	(bad)  
   1400159e8:	mov    ebp,0xbb456699
   1400159ed:	xchg   ebp,eax
   1400159ee:	pop    rsi
   1400159ef:	(bad)  
   1400159f0:	mov    bh,0x8f
   1400159f2:	push   rdi
   1400159f3:	xchg   BYTE PTR [rsi-0x575fb17a],ch
   1400159f9:	or     DWORD PTR [rdx-0x4c],0xc5477ea6
   140015a00:	stos   BYTE PTR es:[rdi],al
   140015a01:	or     DWORD PTR [rax-0x27],0xe3548ab0
   140015a08:	mov    bh,0x93
   140015a0a:	(bad)  
   140015a0b:	call   0x12b77fcd0
   140015a10:	int    0xb2
   140015a12:	mov    dh,ch
   140015a14:	fld    st(1)
   140015a16:	fwait
   140015a17:	icebp  
   140015a18:	in     al,0xd0
   140015a1a:	scas   eax,DWORD PTR es:[rdi]
   140015a1b:	repnz in al,dx
   140015a1d:	xlat   BYTE PTR ds:[rbx]
   140015a1e:	mov    dh,0xed
   140015a20:	lock fnstsw WORD PTR [rdi-0x78431d1c]
   140015a27:	sti    
   140015a28:	movabs eax,ds:0xa77b415c6de63474
   140015a31:	mov    esp,DWORD PTR [rdx+0x50]
   140015a34:	mov    edx,0xbc4d6e9b
   140015a39:	popf   
   140015a3a:	outs   dx,DWORD PTR ds:[rsi]
   140015a3b:	cmp    edi,DWORD PTR [rbp+rbx*4+0xe6f]
	...
   140015aba:	add    BYTE PTR [rax],al
   140015abc:	mov    esp,0xbc056f9d
   140015ac1:	popf   
   140015ac2:	outs   dx,DWORD PTR ds:[rsi]
   140015ac3:	(bad)  
   140015ac4:	mov    esp,0xbc1e6f9d
   140015ac9:	popf   
   140015aca:	outs   dx,DWORD PTR ds:[rsi]
   140015acb:	cs mov esp,0xbb446498
   140015ad1:	xchg   esp,eax
   140015ad2:	pop    rsp
   140015ad3:	(bad)  
   140015ad4:	mov    dl,0x8c
   140015ad6:	push   rbp
   140015ad7:	lea    ebp,[rcx-0x585ab27e]
   140015add:	or     BYTE PTR [rdx-0x43],0xa6
   140015ae1:	jle    0x140015b2b
   140015ae3:	iret   
   140015ae4:	stos   BYTE PTR es:[rdi],al
   140015ae5:	or     DWORD PTR [rcx-0x22],0xe55086ad
   140015aec:	mov    dh,0x91
   140015aee:	pop    rdi
   140015aef:	jmp    0x12e73fab5
   140015af4:	(bad)  
   140015af5:	mov    al,0x85
   140015af7:	lock fnstcw WORD PTR [rdi-0x321b0e6a]
   140015afe:	test   al,0xf0
   140015b00:	out    dx,al
   140015b01:	fstp   TBYTE PTR [rsp+rbp*8-0x1e442410]
   140015b08:	jmp    0x140015adf
   140015b0a:	mov    bl,0xd5
   140015b0c:	call   0x123ca06e2
   140015b11:	leave  
   140015b12:	movabs eax,ds:0x86b9d8b293c0debd
   140015b1b:	scas   al,BYTE PTR es:[rdi]
   140015b1c:	xlat   BYTE PTR ds:[rbx]
   140015b1d:	mov    bh,0x83
   140015b1f:	mov    dl,0xda
   140015b21:	mov    edx,0xd1e7ba85
   140015b26:	scas   eax,DWORD PTR es:[rdi]
   140015b27:	in     eax,0xbf
   140015b29:	xchg   DWORD PTR [rcx],edi
   140015b2b:	call   QWORD PTR [rcx-0x5c22ae89]
   140015b31:	mov    gs,WORD PTR [rsi-0x35]
   140015b34:	test   al,0x8e
   140015b36:	data16 rol BYTE PTR [rbp-0x7d41c59b],1
   140015b3d:	ins    BYTE PTR es:[rdi],dx
   140015b3e:	rex.WRB
   140015b3f:	fs mov esp,0xbc216f9d
   140015b45:	popf   
   140015b46:	outs   dx,DWORD PTR ds:[rsi]
   140015b47:	(bad)  
   140015b48:	mov    esp,0xa6f9d
	...
   140015b9d:	add    BYTE PTR [rax],al
   140015b9f:	add    BYTE PTR [rbp+rbx*4-0x6243fc91],bh
   140015ba6:	outs   dx,DWORD PTR ds:[rsi]
   140015ba7:	or     eax,0x1e6f9dbc
   140015bac:	mov    esp,0xbc2e6c9c
   140015bb1:	xchg   edi,eax
   140015bb2:	movsxd eax,DWORD PTR [rdi+rsi*4-0x70]
   140015bb6:	pop    rdx
   140015bb7:	data16 lods al,BYTE PTR ds:[rsi]
   140015bb9:	xchg   BYTE PTR [rdx-0x69],dl
   140015bbc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015bbd:	or     BYTE PTR [rsi-0x50],0xa5
   140015bc1:	jg     0x140015c0d
   140015bc3:	(bad)
   140015bc6:	rex.W (bad) 
   140015bc8:	stos   BYTE PTR es:[rdi],al
   140015bc9:	or     DWORD PTR [rcx-0x1c],0xe84e84ac
   140015bd0:	mov    ch,0x90
   140015bd2:	pop    rbx
   140015bd3:	(bad)  
   140015bd4:	rcr    BYTE PTR [rbp-0x52311195],0x7e
   140015bdb:	lock fidivr DWORD PTR [rdx+rdx*4-0x5b341b10]
   140015be3:	in     eax,dx
   140015be4:	in     eax,dx
   140015be5:	fdivr  DWORD PTR [rax-0x3f220f18]
   140015beb:	fucomip st,st(4)
   140015bed:	fnstcw WORD PTR [rdx-0x4f2e172c]
   140015bf3:	(bad)  
   140015bf4:	jrcxz  0x140015bc2
   140015bf6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015bf7:	mov    esi,0xb89cc4df
   140015bfc:	fnstcw WORD PTR [rsi-0x48284a71]
   140015c02:	(bad)  
   140015c03:	mov    bh,0xd8
   140015c05:	mov    bh,0x7f
   140015c07:	rcr    bl,0xb9
   140015c0a:	or     bl,0xe0
   140015c0d:	mov    edx,0xbee3d781
   140015c12:	test   dh,bl
   140015c14:	call   0x12be5e1da
   140015c19:	(bad)  
   140015c1a:	xchg   ecx,ebp
   140015c1c:	in     eax,dx
   140015c1d:	(bad)
   140015c20:	out    dx,eax
   140015c21:	leave  
   140015c22:	(bad)  
   140015c23:	out    0xeb,eax
   140015c25:	(bad)  
   140015c26:	scas   al,BYTE PTR es:[rdi]
   140015c27:	repz mov esp,0xaaff3a86
   140015c2d:	xor    DWORD PTR [rsi],0xffffffee
   140015c30:	int3   
   140015c31:	scas   al,BYTE PTR es:[rdi]
   140015c32:	jle    0x140015beb
   140015c34:	jrcxz  0x140015bfc
   140015c36:	cwde   
   140015c37:	ret    0xa4d7
   140015c3a:	pop    rbp
   140015c3b:	inc    DWORD PTR [rax+0x65d43261]
   140015c41:	push   rsp
   140015c42:	cmp    eax,0x3f5d728b
   140015c47:	mov    DWORD PTR [rbx+rdi*2-0x624395aa],edx
   140015c4e:	outs   dx,DWORD PTR ds:[rsi]
   140015c4f:	sbb    eax,0x0
	...
   140015c94:	mov    ebp,0xb72c669a
   140015c99:	xchg   edx,eax
   140015c9a:	pop    rdi
   140015c9b:	je     0x140015c48
   140015c9d:	xchg   DWORD PTR [rbp-0x65],edx
   140015ca0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015ca1:	or     DWORD PTR [rdi-0x46],0xcd4a7fa6
   140015ca8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015ca9:	or     BYTE PTR [rax-0x24],0xab
   140015cad:	(bad)  
   140015cae:	rex.WX call 0x1294fe161
   140015cb4:	mov    ah,0x8b
   140015cb6:	push   rbx
   140015cb7:	in     eax,dx
   140015cb8:	rcr    DWORD PTR [rbp+riz*2+0x77abceef],0xef
   140015cc0:	fidivr DWORD PTR [rdx-0x371a1276]
   140015cc6:	sahf   
   140015cc7:	jmp    0x121b533b9
   140015ccc:	lock ffree st(0)
   140015ccf:	fucomp st(4)
   140015cd1:	fidivr DWORD PTR [rbp-0x492b172d]
   140015cd7:	retf   0xcee3
   140015cda:	lods   al,BYTE PTR ds:[rsi]
   140015cdb:	ret    0xc7de
   140015cde:	lahf   
   140015cdf:	mov    ebx,0xbb93bfda
   140015ce4:	fdivr  DWORD PTR [rcx-0x49274277]
   140015cea:	add    esp,0xcf7fb8da
   140015cf0:	fidivr WORD PTR [rcx-0x441d2880]
   140015cf6:	and    eax,0xe683bee5
   140015cfc:	jmp    0x129ebe3c2
   140015d01:	(bad)  
   140015d02:	xchg   ecx,ebp
   140015d04:	in     al,dx
   140015d05:	(bad)  
   140015d06:	mov    edi,esp
   140015d08:	in     eax,dx
   140015d09:	(bad)  
   140015d0a:	mov    esp,esp
   140015d0c:	in     al,dx
   140015d0d:	(bad)  
   140015d0e:	mov    eax,fs
   140015d10:	in     eax,dx
   140015d11:	(bad)  
   140015d12:	(bad)  
   140015d13:	fucomi st,st(4)
   140015d15:	(bad)  
   140015d16:	mov    edi,ss
   140015d18:	jmp    0x140015ce0
   140015d1a:	mov    dl,ch
   140015d1c:	jmp    0x140015ce3
   140015d1e:	mov    ebp,edx
   140015d20:	in     eax,dx
   140015d21:	(bad)
   140015d24:	jmp    0x140015cfa
   140015d26:	scas   al,BYTE PTR es:[rdi]
   140015d27:	out    dx,al
   140015d28:	ror    BYTE PTR [rdi+rdi*1+0x3583abff],0xf1
   140015d30:	shr    BYTE PTR [rdi-0x4f2e2785],1
   140015d36:	ja     0x140015d25
   140015d38:	leave  
   140015d39:	(bad)  
   140015d3a:	pop    rcx
   140015d3b:	(bad)  
   140015d3c:	lods   eax,DWORD PTR ds:[rsi]
   140015d3d:	jle    0x140015d69
   140015d3f:	std    
   140015d40:	mov    esi,0xe0df719e
   140015d45:	mov    edi,0x88b6e38c
   140015d4a:	rex.RX in al,dx
   140015d4c:	push   0x7a3453
   140015d51:	add    BYTE PTR [rax],al
   140015d53:	or     al,0x0
   140015d55:	add    BYTE PTR [rax],al
   140015d57:	(bad)  
   140015d58:	add    BYTE PTR [rax],al
   140015d5a:	add    BYTE PTR [rcx],al
	...
   140015d90:	(bad)  
   140015d91:	(bad)  
   140015d92:	call   FWORD PTR [rsi]
   140015d94:	mov    ch,0x92
   140015d96:	pop    rdi
   140015d97:	mov    ecx,0xf2528cb7
   140015d9c:	ret    0x5c98
   140015d9f:	repnz shr BYTE PTR [rax-0x46230f92],1
   140015da6:	test   ebp,ebp
   140015da8:	in     eax,0xc7
   140015daa:	cwde   
   140015dab:	out    0xed,eax
   140015dad:	(bad)  
   140015dae:	lods   al,BYTE PTR ds:[rsi]
   140015daf:	fucomp st(5)
   140015db1:	fnstcw WORD PTR [rax-0x4125122a]
   140015db7:	(bad)  
   140015db8:	jmp    0x126cd1794
   140015dbd:	shl    BYTE PTR [rax-0x58331e3c],cl
   140015dc3:	rcr    ebp,0xc4
   140015dc6:	popf   
   140015dc7:	rcr    edx,0xbc
   140015dca:	mov    es,ebx
   140015dcc:	fnstcw WORD PTR [rax-0x4824367d]
   140015dd2:	jle    0x140015da6
   140015dd4:	fistp  QWORD PTR [rcx-0x441c2683]
   140015dda:	jge    0x140015dbc
   140015ddc:	out    0xbe,al
   140015dde:	jle    0x140015dc6
   140015de0:	call   0x129e8dfa5
   140015de5:	ret    0xe783
   140015de8:	(bad)  
   140015de9:	(bad)
   140015dec:	jmp    0x140015db4
   140015dee:	(bad)  
   140015def:	loop   0x140015ddb
   140015df1:	(bad)  
   140015df2:	(bad)  
   140015df3:	fucomp st(2)
   140015df5:	enter  0xd991,0xe9
   140015df9:	(bad)  
   140015dfa:	nop
   140015dfb:	(bad)  
   140015dfc:	jmp    0x129d6edc7
   140015e01:	(bad)
   140015e04:	(bad)  
   140015e05:	(bad)
   140015e08:	jmp    0x12bdee7d0
   140015e0d:	ret    
   140015e0e:	xchg   ecx,esp
   140015e10:	in     al,dx
   140015e11:	(bad)  
   140015e12:	test   ebp,esp
   140015e14:	in     al,dx
   140015e15:	(bad)  
   140015e16:	test   dl,ch
   140015e18:	out    dx,al
   140015e19:	mov    BYTE PTR [rbp-0x79391012],0xf1
   140015e20:	repz retf 0xf08a
   140015e24:	out    dx,al
   140015e25:	(bad)  
   140015e26:	mov    al,0xf9
   140015e28:	(bad)  
   140015e29:	xchg   ecx,eax
   140015e2a:	rex.XB push QWORD PTR [r10-0x2209c678]
   140015e31:	mov    edx,0xb5d7dd82
   140015e36:	jbe    0x140015e23
   140015e38:	int    0x9f
   140015e3a:	pop    rsp
   140015e3b:	jmp    FWORD PTR [rsi+rdi*2-0x644b09d5]
   140015e42:	jae    0x140015deb
   140015e44:	retf   
   140015e45:	mov    dl,0x7e
   140015e47:	rcl    esi,1
   140015e49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015e4a:	(bad)  
   140015e4b:	(bad)  
   140015e4c:	jle    0x140015ea8
   140015e4e:	sub    BYTE PTR [rdx+0x24000000],bh
   140015e54:	add    BYTE PTR [rax],al
   140015e56:	add    BYTE PTR [rdi],ah
   140015e58:	add    BYTE PTR [rax],al
   140015e5a:	add    BYTE PTR [rdx],bl
   140015e5c:	add    BYTE PTR [rax],al
   140015e5e:	add    BYTE PTR [rax+rax*1],cl
   140015e61:	add    BYTE PTR [rax],al
   140015e63:	add    al,BYTE PTR [rax]
	...
   140015e8d:	add    BYTE PTR [rax],al
   140015e8f:	add    bh,bh
   140015e91:	(bad)  
   140015e92:	call   FWORD PTR [rsi]
   140015e94:	test   ch,0x79
   140015e97:	push   rbp
   140015e99:	rcr    DWORD PTR [rbx+rbp*8-0x36351908],cl
   140015ea0:	cmc    
   140015ea1:	in     al,0xc6
   140015ea3:	mov    edx,0xb1bdddf1
   140015ea8:	in     eax,dx
   140015ea9:	fdiv   DWORD PTR [rsi-0x59311857]
   140015eaf:	mov    cl,0xe3
   140015eb1:	(bad)  
   140015eb2:	xchg   edx,eax
   140015eb3:	enter  0xb6de,0x7a
   140015eb7:	xlat   BYTE PTR ds:[rbx]
   140015eb8:	loop   0x140015e76
   140015eba:	sbb    ah,0xe6
   140015ebd:	mov    edi,0xc2e9e283
   140015ec2:	test   bh,ah
   140015ec4:	jmp    0x140015e8a
   140015ec6:	test   dh,ah
   140015ec8:	lock mov DWORD PTR [rdi-0x712e061d],0x9dd7fbe4
   140015ed3:	out    0xf6,al
   140015ed5:	fldcw  WORD PTR [rcx-0x4c270f18]
   140015edb:	out    0xef,al
   140015edd:	fnstenv [rbp-0x4c260e1d]
   140015ee3:	(bad)  
   140015ee5:	fisubr DWORD PTR [rcx-0x652b0827]
   140015eeb:	xlat   BYTE PTR ds:[rbx]
   140015eec:	icebp  
   140015eed:	retf   0xda8d
   140015ef0:	in     al,dx
   140015ef1:	(bad)
   140015ef4:	in     eax,dx
   140015ef5:	enter  0xe58d,0xec
   140015ef9:	(bad)  
   140015efa:	mov    ebx,ebp
   140015efc:	in     eax,dx
   140015efd:	(bad)  
   140015efe:	mov    esi,ebp
   140015f00:	out    dx,eax
   140015f01:	(bad)  
   140015f02:	mov    ecx,esi
   140015f04:	lock enter 0xf08b,0xf1
   140015f09:	retf   0xf08c
   140015f0c:	repz int3 
   140015f0e:	mov    gs,ebp
   140015f10:	hlt    
   140015f11:	int    0x8f
   140015f13:	in     al,dx
   140015f14:	hlt    
   140015f15:	(bad)  
   140015f16:	nop
   140015f17:	jmp    0x126912e11
   140015f1c:	test   bh,0x91
   140015f1f:	in     al,0xf8
   140015f21:	rcl    DWORD PTR [rbx-0x4d270f1f],1
   140015f27:	repnz leave 
   140015f29:	xchg   esi,eax
   140015f2a:	rex.W push QWORD PTR [rcx-0x200fc577]
   140015f31:	mov    esp,0xb7d7ca87
   140015f36:	jns    0x140015f1c
   140015f38:	shl    BYTE PTR [rax+riz*2+0x2c81aeff],cl
   140015f3f:	div    BYTE PTR [rdi-0x34528962]
   140015f45:	mov    al,0x7c
   140015f47:	rcl    esp,1
   140015f49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015f4a:	(bad)  
   140015f4b:	call   FWORD PTR [rdx+0xd81d70]
   140015f51:	add    BYTE PTR [rax],al
   140015f53:	and    eax,0x31000000
   140015f58:	add    BYTE PTR [rax],al
   140015f5a:	add    BYTE PTR [rcx],dh
   140015f5c:	add    BYTE PTR [rax],al
   140015f5e:	add    BYTE PTR [rbx],ch
   140015f60:	add    BYTE PTR [rax],al
   140015f62:	add    BYTE PTR [rsi],bl
   140015f64:	add    BYTE PTR [rax],al
   140015f66:	add    BYTE PTR [rip+0x3000000],cl        # 0x143015f6c
	...
   140015f90:	(bad)  
   140015f91:	(bad)  
   140015f92:	call   FWORD PTR [rsi]
   140015f94:	in     eax,0xba
   140015f96:	je     0x140015f97
   140015f98:	hlt    
   140015f99:	int    0x91
   140015f9b:	mov    dl,0xff
   140015f9d:	fisubr WORD PTR [rbx-0x5621017a]
   140015fa3:	mov    ebp,?
   140015fa5:	fisubr WORD PTR [rbx-0x5b260576]
   140015fab:	xchg   esi,eax
   140015fac:	lock mov BYTE PTR [rsi-0x7c390f1d],0xfd
   140015fb4:	not    eax
   140015fb6:	xchg   ecx,eax
   140015fb7:	fdivp  st(1),st
   140015fb9:	(bad)  
   140015fba:	cdq    
   140015fbb:	iret   
   140015fbc:	stc    
   140015fbd:	(bad)  
   140015fbe:	cdq    
   140015fbf:	leave  
   140015fc0:	(bad)  
   140015fc1:	fstp   DWORD PTR [rbx-0x531b003d]
   140015fc7:	int    0xe9
   140015fc9:	(bad)  
   140015fcb:	loope  0x140015f7d
   140015fcd:	ret    0xf1e5
   140015fd0:	jge    0x140015f75
   140015fd2:	repnz stc 
   140015fd4:	pop    rdx
   140015fd5:	mov    ?,esi
   140015fd7:	std    
   140015fd8:	rex.WX test al,dil
   140015fdb:	dec    DWORD PTR [rax-0x7f]
   140015fde:	clc    
   140015fdf:	dec    DWORD PTR [rsi-0x7b]
   140015fe2:	clc    
   140015fe3:	jmp    QWORD PTR [rbx-0x6e]
   140015fe6:	cmc    
   140015fe7:	dec    DWORD PTR [rax-0x47011459]
   140015fed:	mov    edi,0xcddffed5
   140015ff2:	mov    cl,0xf9
   140015ff4:	in     al,dx
   140015ff5:	retf   0xf093
   140015ff8:	in     eax,dx
   140015ff9:	retf   0xe78e
   140015ffc:	not    ebx
   140015ffe:	cdq    
   140015fff:	loop   0x140015ff9
   140016001:	(bad)  
   140016002:	pushf  
   140016003:	loope  0x140015ffb
   140016005:	(bad)  
   140016006:	fwait
   140016007:	loopne 0x140016000
   140016009:	(bad)  
   14001600a:	(bad)  
   14001600b:	(bad)  
   14001600d:	(bad)  
   14001600e:	cdq    
   14001600f:	(bad)  
   140016011:	rcr    DWORD PTR [rcx-0x682c0722],cl
   140016017:	loopne 0x140016011
   140016019:	rcl    DWORD PTR [rsi-0x6a2d0720],cl
   14001601f:	loopne 0x14001601c
   140016021:	(bad)  
   140016022:	xchg   esi,eax
   140016023:	fcomip st,st(3)
   140016025:	fidiv  DWORD PTR [rcx+rsi*8-0xb46432]
   14001602c:	mov    bl,0x8b
   14001602e:	cmp    ebp,edi
   140016030:	in     eax,0xc1
   140016032:	mov    cl,dl
   140016034:	fidivr WORD PTR [rbx-0x572a1c85]
   14001603a:	movsxd edi,edi
   14001603c:	mov    al,0x83
   14001603e:	(bad)  
   14001603f:	cmc    
   140016040:	shl    DWORD PTR [rbp-0x472a5084],0x82
   140016047:	rcr    eax,1
   140016049:	stos   BYTE PTR es:[rdi],al
   14001604a:	call   DWORD PTR [rdx+rsi*2+0xd51f]
   140016052:	add    BYTE PTR [rax+rax*1],dl
   140016055:	add    BYTE PTR [rax],al
   140016057:	and    al,BYTE PTR [rax]
   140016059:	add    BYTE PTR [rax],al
   14001605b:	and    eax,DWORD PTR [rax]
   14001605d:	add    BYTE PTR [rax],al
   14001605f:	add    BYTE PTR es:[rax],al
   140016062:	add    BYTE PTR [rsi],ah
   140016064:	add    BYTE PTR [rax],al
   140016066:	add    BYTE PTR [rsi],bl
   140016068:	add    BYTE PTR [rax],al
   14001606a:	add    BYTE PTR [rdx],dl
   14001606c:	add    BYTE PTR [rax],al
   14001606e:	add    BYTE PTR [rip+0x0],al        # 0x140016074
	...
   140016090:	(bad)  
   140016091:	(bad)  
   140016092:	call   FWORD PTR [rsi]
   140016094:	in     eax,0xba
   140016096:	jne    0x140016097
   140016098:	cmc    
   140016099:	rcl    BYTE PTR [rsi+rbp*4-0x76532001],1
   1400160a0:	(bad)  
   1400160a1:	fisubr WORD PTR [rbx-0x51200173]
   1400160a7:	mov    edi,esi
   1400160a9:	rcr    DWORD PTR [rcx+rbp*4-0x7e3c13],cl
   1400160b0:	hlt    
   1400160b1:	int    0x8f
   1400160b3:	out    0xfc,eax
   1400160b5:	(bad)  [rcx-0x60240143]
   1400160bb:	mov    ecx,0xc2abe6ff
   1400160c0:	in     al,0xdf
   1400160c2:	(bad)  
   1400160c3:	loop   0x140016046
   1400160c5:	test   eax,0x7935fbf3
   1400160ca:	clc    
   1400160cb:	call   FWORD PTR [rdx]
   1400160cd:	gs hlt 
   1400160cf:	call   FWORD PTR [rax]
   1400160d1:	(bad)  {k3}
   1400160d6:	icebp  
   1400160d7:	call   FWORD PTR [rsi]
   1400160d9:	gs icebp 
   1400160db:	call   FWORD PTR [rsi]
   1400160dd:	fs icebp 
   1400160df:	call   FWORD PTR [rip+0x1afff163]        # 0x15b015248
   1400160e5:	(bad)  
   1400160e6:	icebp  
   1400160e7:	call   FWORD PTR [rax]
   1400160e9:	pop    rdi
   1400160ea:	repz call FWORD PTR [rdi]
   1400160ed:	gs idiv bh
   1400160f0:	rex.XB jg 0x1400160ec
   1400160f3:	dec    DWORD PTR [rdi-0x2b021554]
   1400160f9:	leave  
   1400160fa:	mov    ebx,0x90c3e1f4
   1400160ff:	out    0xee,eax
   140016101:	int    0x96
   140016103:	(bad)  
   140016105:	fisub  DWORD PTR [rax-0x61290623]
   14001610b:	fdivp  st(1),st
   14001610d:	(bad)  
   14001610e:	popf   
   14001610f:	fdivp  st(1),st
   140016111:	(bad)  
   140016112:	pushf  
   140016113:	fdivp  st(2),st
   140016115:	(bad)  
   140016116:	(bad)  
   140016117:	fdivp  st(2),st
   140016119:	(bad)  
   14001611a:	cdq    
   14001611b:	(bad)  
   14001611d:	(bad)  
   14001611e:	cwde   
   14001611f:	(bad)  
   140016121:	(bad)  
   140016122:	cwde   
   140016123:	(bad)  
   140016125:	fidivr WORD PTR [rax+0x53a3d4f1]
   14001612b:	push   QWORD PTR [rsp+rcx*4-0x3b1810c4]
   140016132:	mov    cs,ecx
   140016134:	loopne 0x1400160f4
   140016136:	jle    0x14001611b
   140016138:	fldcw  WORD PTR [rbp-0x7a4d0098]
   14001613e:	xor    ah,dh
   140016140:	(bad)  
   140016141:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016142:	jge    0x1400160f3
   140016144:	fnstcw WORD PTR [rbx-0x50232f7d]
   14001614a:	push   0xffffffffffffffff
   14001614c:	sahf   
   14001614d:	je     0x14001616f
   14001614f:	rol    DWORD PTR [rax],cl
   140016151:	add    BYTE PTR [rax],al
   140016153:	or     DWORD PTR [rax],eax
   140016155:	add    BYTE PTR [rax],al
   140016157:	(bad)  
   140016158:	add    BYTE PTR [rax],al
   14001615a:	add    BYTE PTR [rip+0x14000000],dl        # 0x154016160
   140016160:	add    BYTE PTR [rax],al
   140016162:	add    BYTE PTR [rbx],dl
   140016164:	add    BYTE PTR [rax],al
   140016166:	add    BYTE PTR [rcx],dl
   140016168:	add    BYTE PTR [rax],al
   14001616a:	add    BYTE PTR [rip+0x4000000],cl        # 0x144016170
	...
   140016190:	(bad)  
   140016191:	(bad)  
   140016192:	call   FWORD PTR [rsi]
   140016194:	in     eax,0xba
   140016196:	jne    0x140016197
   140016198:	cmc    
   140016199:	rcl    BYTE PTR [rbp-0x53200052],1
   14001619f:	mov    ebp,edi
   1400161a1:	fisubr WORD PTR [rbx-0x501f0273]
   1400161a7:	mov    esi,esi
   1400161a9:	rcr    DWORD PTR [rbp-0x7d3b1254],cl
   1400161af:	push   rbp
   1400161b1:	rcl    BYTE PTR [rdx-0x5f220021],1
   1400161b7:	mov    ecx,0xd1bae7ff
   1400161bc:	movabs al,ds:0x17fff87730f7ecbc
   1400161c5:	bnd jmp QWORD PTR fs:[rax]
   1400161c9:	push   0xfffffffffffffff1
   1400161cb:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x16601533d
   1400161d1:	ins    BYTE PTR es:[rdi],dx
   1400161d2:	icebp  
   1400161d3:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x166015345
   1400161d9:	imul   esi,ecx,0xffffffff
   1400161dc:	and    eax,0x25fff16b
   1400161e1:	push   0xfffffffffffffff1
   1400161e3:	jmp    QWORD PTR [rip+0x25fff169]        # 0x166015352
   1400161e9:	imul   esi,ecx,0xf16824ff
   1400161ef:	call   FWORD PTR [rsi]
   1400161f1:	movsxd esi,eax
   1400161f3:	call   FWORD PTR [rax]
   1400161f5:	(bad)  
   1400161f6:	repz inc DWORD PTR [rdi+rdi*2-0x6]
   1400161fb:	jmp    FWORD PTR [rbp-0x28032044]
   140016201:	mov    edi,0xc1e0ef9a
   140016206:	(bad)  
   140016207:	jrcxz  0x140016204
   140016209:	fldenv [rax-0x5e250423]
   14001620f:	(bad)  
   140016211:	fcomp  DWORD PTR [rdi-0x61270423]
   140016217:	(bad)  
   140016219:	xlat   BYTE PTR ds:[rbx]
   14001621a:	popf   
   14001621b:	(bad)  
   14001621d:	xlat   BYTE PTR ds:[rbx]
   14001621e:	(bad)  
   140016221:	(bad)  
   140016222:	cdq    
   140016223:	(bad)  
   140016225:	loop   0x1400161e6
   140016227:	icebp  
   140016228:	loop   0x1400161e5
   14001622a:	je     0x14001622b
   14001622c:	mov    eax,0xecf04090
   140016231:	enter  0xc591,0xe4
   140016235:	ret    
   140016236:	sbb    esi,0xff6bb1dd
   14001623c:	mov    ah,0x88
   14001623e:	xor    esi,ebx
   140016240:	shl    DWORD PTR [rbp-0x3b1d6a75],1
   140016246:	mov    eax,edx
   140016248:	loope  0x1400161fe
   14001624a:	outs   dx,BYTE PTR ds:[rsi]
   14001624b:	jmp    QWORD PTR [rax+0xd02176]
   140016251:	add    BYTE PTR [rax],al
   140016253:	add    DWORD PTR [rax],eax
   140016255:	add    BYTE PTR [rax],al
   140016257:	(bad)  
   140016258:	add    BYTE PTR [rax],al
   14001625a:	add    BYTE PTR [rip+0x4000000],al        # 0x144016260
   140016260:	add    BYTE PTR [rax],al
   140016262:	add    BYTE PTR [rdx],al
   140016264:	add    BYTE PTR [rax],al
   140016266:	add    BYTE PTR [rcx],al
	...
   140016290:	(bad)  
   140016291:	(bad)  
   140016292:	call   FWORD PTR [rsi]
   140016294:	in     eax,0xbb
   140016296:	jbe    0x140016297
   140016298:	hlt    
   140016299:	rcl    BYTE PTR [rsi-0x51200152],1
   14001629f:	mov    ebp,edi
   1400162a1:	fisubr WORD PTR [rbp+rcx*4-0x764f1f03]
   1400162a8:	not    bl
   1400162aa:	popf   
   1400162ab:	stos   DWORD PTR es:[rdi],eax
   1400162ac:	in     eax,dx
   1400162ad:	ret    
   1400162ae:	cmp    edi,0xfffffffb
   1400162b1:	ror    DWORD PTR [rdi-0x3d1c0a22],cl
   1400162b7:	fsubr  DWORD PTR [rsi-0x62]
   1400162ba:	repz (bad) 
   1400162bc:	sbb    BYTE PTR [rax-0xb],ch
   1400162bf:	jmp    QWORD PTR [rcx]
   1400162c1:	ins    BYTE PTR es:[rdi],dx
   1400162c2:	icebp  
   1400162c3:	jmp    QWORD PTR [rsi]
   1400162c5:	outs   dx,DWORD PTR ds:[rsi]
   1400162c6:	icebp  
   1400162c7:	jmp    QWORD PTR [rip+0x25fff26e]        # 0x16601553b
   1400162cd:	outs   dx,BYTE PTR ds:[rsi]
   1400162ce:	icebp  
   1400162cf:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166015443
   1400162d5:	ins    DWORD PTR es:[rdi],dx
   1400162d6:	icebp  
   1400162d7:	jmp    QWORD PTR [rsi]
   1400162d9:	ins    DWORD PTR es:[rdi],dx
   1400162da:	icebp  
   1400162db:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x16601544d
   1400162e1:	ins    BYTE PTR es:[rdi],dx
   1400162e2:	icebp  
   1400162e3:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x166015454
   1400162e9:	imul   esi,ecx,0xffffffff
   1400162ec:	and    eax,0x25fff16a
   1400162f1:	push   0xfffffffffffffff1
   1400162f3:	jmp    QWORD PTR [rip+0x1cfff169]        # 0x15d015462
   1400162f9:	movsxd esi,ecx
   1400162fb:	jmp    QWORD PTR [rcx]
   1400162fd:	push   0xffffffffad8cfff7
   140016302:	icebp  
   140016303:	(bad)  
   140016304:	rol    eax,1
   140016306:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016307:	repz (bad) 
   140016309:	mov    ecx,0xd8fae58b
   14001630e:	movabs eax,ds:0x9ed6fadd9fd8fbdd
   140016317:	(bad)  
   140016319:	(bad)  
   14001631a:	popf   
   14001631b:	(bad)  
   14001631d:	(bad)  
   14001631e:	pushf  
   14001631f:	(bad)  
   140016321:	xlat   BYTE PTR ds:[rbx]
   140016322:	(bad)  
   140016325:	jrcxz  0x1400162e6
   140016327:	icebp  
   140016328:	call   0xfc00e2f1
   14001632d:	xchg   ebx,eax
   14001632e:	rex.R out dx,eax
   140016330:	in     eax,dx
   140016331:	leave  
   140016332:	xchg   ebx,eax
   140016333:	(bad)  
   140016334:	out    0xc5,eax
   140016336:	sbb    esp,0xffffffe1
   140016339:	mov    dh,0x6e
   14001633b:	push   QWORD PTR [rsi-0x270ccb76]
   140016341:	mov    esp,0xcbea9292
   140016346:	nop
   140016347:	mov    edi,0xff70b5e0
   14001634c:	scas   al,BYTE PTR es:[rdi]
   14001634d:	and    DWORD PTR [rdi],0xce
	...
   14001638f:	add    bh,bh
   140016391:	(bad)  
   140016392:	call   FWORD PTR [rsi]
   140016394:	in     eax,0xbb
   140016396:	jbe    0x140016397
   140016398:	hlt    
   140016399:	rcl    BYTE PTR [rsi-0x501f0153],1
   14001639f:	mov    ebp,edi
   1400163a1:	fisubr WORD PTR [rsi-0x4e1f0273]
   1400163a7:	mov    ebp,esi
   1400163a9:	(bad)  
   1400163aa:	sahf   
   1400163ab:	stos   DWORD PTR es:[rdi],eax
   1400163ac:	repnz mov BYTE PTR [rax-0x4b271103],0xf5
   1400163b4:	pop    rbx
   1400163b5:	xchg   ebx,eax
   1400163b6:	repnz (bad) 
   1400163b8:	(bad)  
   1400163b9:	imul   esi,esp,0xf27125ff
   1400163bf:	jmp    QWORD PTR [rsi]
   1400163c1:	jno    0x1400163b5
   1400163c3:	jmp    QWORD PTR [rip+0x24fff26f]        # 0x165015638
   1400163c9:	outs   dx,DWORD PTR ds:[rsi]
   1400163ca:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166015640
   1400163d1:	outs   dx,DWORD PTR ds:[rsi]
   1400163d2:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166015648
   1400163d9:	outs   dx,BYTE PTR ds:[rsi]
   1400163da:	icebp  
   1400163db:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x16601554f
   1400163e1:	ins    DWORD PTR es:[rdi],dx
   1400163e2:	icebp  
   1400163e3:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x166015556
   1400163e9:	ins    BYTE PTR es:[rdi],dx
   1400163ea:	icebp  
   1400163eb:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x16601555d
   1400163f1:	imul   esi,ecx,0xffffffff
   1400163f4:	and    eax,0x25fff16b
   1400163f9:	imul   esi,ecx,0xffffffff
   1400163fc:	and    ch,BYTE PTR [rax-0xf]
   1400163ff:	call   FWORD PTR [rcx]
   140016401:	movsxd esi,ebp
   140016403:	inc    DWORD PTR [rcx-0x2f010958]
   140016409:	mov    esi,0xb7d4f4a4
   14001640e:	mov    esp,ebp
   140016410:	cli    
   140016411:	fsub   DWORD PTR [rdx-0x5f270523]
   140016417:	(bad)  
   140016419:	xlat   BYTE PTR ds:[rbx]
   14001641a:	lahf   
   14001641b:	(bad)  
   14001641d:	(bad)  
   14001641e:	popf   
   14001641f:	(bad)  
   140016421:	xlat   BYTE PTR ds:[rbx]
   140016422:	pushf  
   140016423:	(bad)  
   140016425:	jrcxz  0x1400163e7
   140016427:	icebp  
   140016428:	(bad)  
   140016429:	mov    BYTE PTR [rax+0x4593baff],0xef
   140016430:	in     al,dx
   140016431:	leave  
   140016432:	xchg   esp,eax
   140016433:	(bad)  
   140016434:	out    0xc6,eax
   140016436:	xchg   ah,bl
   140016438:	jmp    0x140016401
   14001643a:	test   edi,edi
   14001643c:	mov    ecx,0xd6f2398e
   140016441:	mov    ebx,0xcceb9291
   140016446:	xchg   ecx,eax
   140016447:	mov    edi,0xff72b5de
   14001644c:	mov    esp,0xce2d8c
	...
   14001648d:	add    BYTE PTR [rax],al
   14001648f:	add    bh,bh
   140016491:	(bad)  
   140016492:	call   FWORD PTR [rsi]
   140016494:	in     eax,0xbb
   140016496:	ja     0x140016497
   140016498:	hlt    
   140016499:	rcl    BYTE PTR [rsi-0x501f0253],1
   14001649f:	mov    ebp,edi
   1400164a1:	fild   QWORD PTR [rdi-0x4c1e0273]
   1400164a7:	mov    edi,esi
   1400164a9:	(bad)  
   1400164aa:	pushf  
   1400164ab:	stos   BYTE PTR es:[rdi],al
   1400164ac:	repz rcr DWORD PTR [rbp-0x14659603],1
   1400164b3:	call   FWORD PTR [rax]
   1400164b5:	ins    BYTE PTR es:[rdi],dx
   1400164b6:	cmc    
   1400164b7:	jmp    QWORD PTR [rsi]
   1400164b9:	jae    0x1400164ad
   1400164bb:	jmp    QWORD PTR [rdi]
   1400164bd:	jae    0x1400164b1
   1400164bf:	jmp    QWORD PTR [rax]
   1400164c1:	outs   dx,DWORD PTR ds:[rsi]
   1400164c2:	bnd jmp QWORD PTR [rcx]
   1400164c5:	outs   dx,DWORD PTR ds:[rsi]
   1400164c6:	icebp  
   1400164c7:	jmp    QWORD PTR [rip+0x1ffff171]        # 0x16001563e
   1400164cd:	ins    DWORD PTR es:[rdi],dx
   1400164ce:	bnd jmp QWORD PTR [rax+rsi*2]
   1400164d2:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166015748
   1400164d9:	outs   dx,DWORD PTR ds:[rsi]
   1400164da:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166015750
   1400164e1:	outs   dx,DWORD PTR ds:[rsi]
   1400164e2:	icebp  
   1400164e3:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166015657
   1400164e9:	outs   dx,BYTE PTR ds:[rsi]
   1400164ea:	bnd jmp QWORD PTR [rip+0x26fff26e]        # 0x16701575f
   1400164f1:	ins    DWORD PTR es:[rdi],dx
   1400164f2:	bnd jmp QWORD PTR [rip+0x25fff16d]        # 0x166015666
   1400164f9:	ins    BYTE PTR es:[rdi],dx
   1400164fa:	icebp  
   1400164fb:	jmp    QWORD PTR [rip+0x23fff16c]        # 0x16401566d
   140016501:	push   0xfffffffffffffff1
   140016503:	call   FWORD PTR [rcx]
   140016505:	fs hlt 
   140016507:	call   QWORD PTR [rcx-0x32020e4f]
   14001650d:	mov    dh,0x97
   14001650f:	icebp  
   140016510:	fidivr DWORD PTR [rbp-0x25041b6e]
   140016516:	movabs ds:0x9ed7fadd9fd7fadd,eax
   14001651f:	(bad)  
   140016521:	xlat   BYTE PTR ds:[rbx]
   140016522:	popf   
   140016523:	(bad)  
   140016525:	jrcxz  0x1400164e8
   140016527:	icebp  
   140016528:	(bad)  
   140016529:	mov    BYTE PTR [rax+0x4594baff],0xef
   140016530:	(bad)  
   140016531:	leave  
   140016532:	xchg   ebp,eax
   140016533:	(bad)  
   140016534:	out    0xc6,al
   140016536:	test   esp,ebx
   140016538:	lock iret 
   14001653a:	xchg   edx,eax
   14001653b:	(bad)  
   14001653c:	mov    esp,0xd6f34395
   140016541:	mov    edx,0xcceb9291
   140016546:	nop
   140016547:	mov    edi,0xff74b9e2
   14001654c:	mov    ebx,0xce2e8c
	...
   14001658d:	add    BYTE PTR [rax],al
   14001658f:	add    bh,bh
   140016591:	(bad)  
   140016592:	call   FWORD PTR [rsi]
   140016594:	in     eax,0xbb
   140016596:	ja     0x140016597
   140016598:	repz rcl BYTE PTR [rdi-0x50200252],1
   14001659f:	mov    esp,edi
   1400165a1:	fild   QWORD PTR [rdi-0x4d1f0373]
   1400165a7:	xchg   edi,edi
   1400165a9:	fsub   QWORD PTR [rbp-0x27547051]
   1400165af:	(bad)  
   1400165b0:	sbb    BYTE PTR [rdi-0x9],ch
   1400165b3:	jmp    QWORD PTR [rsi]
   1400165b5:	jne    0x1400165a9
   1400165b7:	jmp    QWORD PTR [rsi]
   1400165b9:	jne    0x1400165ad
   1400165bb:	jmp    QWORD PTR [rax]
   1400165bd:	jo     0x1400165b1
   1400165bf:	inc    DWORD PTR [rbx-0x7a]
   1400165c2:	repz (bad) 
   1400165c4:	mov    edi,0xd2fffad5
   1400165c9:	loope  0x1400165c6
   1400165cb:	dec    DWORD PTR [rsi+0x40fff8b6]
   1400165d1:	xor    ebx,0xffffffff
   1400165d4:	sub    al,0x75
   1400165d6:	bnd jmp QWORD PTR [rsi]
   1400165d9:	jno    0x1400165cd
   1400165db:	jmp    QWORD PTR [rip+0x26fff270]        # 0x167015851
   1400165e1:	jo     0x1400165d5
   1400165e3:	jmp    QWORD PTR [rsi]
   1400165e5:	jo     0x1400165d9
   1400165e7:	jmp    QWORD PTR [rsi]
   1400165e9:	outs   dx,DWORD PTR ds:[rsi]
   1400165ea:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166015860
   1400165f1:	outs   dx,DWORD PTR ds:[rsi]
   1400165f2:	icebp  
   1400165f3:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x166015767
   1400165f9:	outs   dx,BYTE PTR ds:[rsi]
   1400165fa:	icebp  
   1400165fb:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x16601576e
   140016601:	ins    DWORD PTR es:[rdi],dx
   140016602:	icebp  
   140016603:	jmp    QWORD PTR [rdx]
   140016605:	push   0xfffffffffffffff1
   140016607:	jmp    QWORD PTR [rbp*2-0x3e4b0008]
   14001660e:	(bad)  
   140016610:	(bad)
   140016613:	in     eax,dx
   140016614:	jmp    0x13be300e4
   140016619:	fisub  DWORD PTR [rbx-0x60280623]
   14001661f:	(bad)  
   140016621:	fcomp  DWORD PTR [rsi-0x3e1c0725]
   140016627:	icebp  
   140016628:	(bad)  
   140016629:	(bad)  
   14001662a:	jg     0x14001662b
   14001662c:	mov    edx,0xeaef4594
   140016631:	leave  
   140016632:	xchg   edi,eax
   140016633:	(bad)  
   140016634:	in     eax,0xc5
   140016636:	test   esp,ebx
   140016638:	lock (bad) 
   14001663a:	nop
   14001663b:	(bad)  
   14001663c:	mov    esp,0xd5f34395
   140016641:	mov    edx,0xcdeb9292
   140016646:	xchg   edx,eax
   140016647:	mov    edi,0xff85c5e9
   14001664c:	mov    ebp,0xcd2f8f
	...
   14001668d:	add    BYTE PTR [rax],al
   14001668f:	add    bh,bh
   140016691:	(bad)  
   140016692:	call   FWORD PTR [rsi]
   140016694:	in     eax,0xbb
   140016696:	js     0x140016697
   140016698:	repz rcr BYTE PTR [rax-0x4f200252],1
   14001669f:	mov    esp,edi
   1400166a1:	fbstp  TBYTE PTR [rcx-0x4e1c0074]
   1400166a7:	mov    esi,ecx
   1400166a9:	leave  
   1400166aa:	ret    0x28d9
   1400166ad:	js     0x1400166a4
   1400166af:	jmp    QWORD PTR [rbx]
   1400166b1:	jne    0x1400166a6
   1400166b3:	jmp    QWORD PTR [rdi]
   1400166b5:	ja     0x1400166aa
   1400166b7:	jmp    QWORD PTR [rip+0x21fff275]        # 0x162015932
   1400166bd:	jb     0x1400166b1
   1400166bf:	(bad)  
   1400166c0:	mov    ebx,0xfffefad4
   1400166c5:	(bad)  
   1400166c6:	(bad)  
   1400166c7:	(bad)  
   1400166c8:	(bad)  
   1400166c9:	(bad)  
   1400166ca:	(bad)  
   1400166cb:	(bad)  
   1400166cc:	(bad)  
   1400166cd:	(bad)  
   1400166ce:	(bad)  
   1400166cf:	call   rbx
   1400166d1:	loop   0x1400166cf
   1400166d3:	(bad)  
   1400166d4:	ins    DWORD PTR es:[rdi],dx
   1400166d5:	movabs eax,ds:0x752bfff37d36fef6
   1400166de:	bnd jmp QWORD PTR [rip+0x25fff271]        # 0x166015956
   1400166e5:	jno    0x1400166d9
   1400166e7:	jmp    QWORD PTR [rsi]
   1400166e9:	jno    0x1400166dd
   1400166eb:	jmp    QWORD PTR [rsi]
   1400166ed:	jo     0x1400166e1
   1400166ef:	jmp    QWORD PTR [rsi]
   1400166f1:	jo     0x1400166e5
   1400166f3:	jmp    QWORD PTR [rsi]
   1400166f5:	outs   dx,DWORD PTR ds:[rsi]
   1400166f6:	bnd jmp QWORD PTR [rsi]
   1400166f9:	outs   dx,DWORD PTR ds:[rsi]
   1400166fa:	bnd jmp QWORD PTR [rsi]
   1400166fd:	outs   dx,DWORD PTR ds:[rsi]
   1400166fe:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x166015973
   140016705:	outs   dx,BYTE PTR ds:[rsi]
   140016706:	repnz call FWORD PTR [rdi+riz*2]
   14001670a:	icebp  
   14001670b:	dec    DWORD PTR [rbx-0x77]
   14001670e:	cli    
   14001670f:	dec    esi
   140016711:	ret    
   140016712:	mov    edx,0x88adc8f5
   140016717:	jmp    0x11da53f13
   14001671c:	stc    
   14001671d:	fsub   DWORD PTR [rcx-0x5f260523]
   140016723:	(bad)  
   140016725:	jrcxz  0x1400166e9
   140016727:	icebp  
   140016728:	(bad)  
   140016729:	(bad)  
   14001672a:	jg     0x14001672b
   14001672c:	mov    edx,0xe9ef4694
   140016731:	retf   0xc498
   140016734:	in     eax,0xc6
   140016736:	test   esp,ebx
   140016738:	lock (bad) 
   14001673a:	nop
   14001673b:	(bad)  
   14001673c:	mov    esp,0xd5f34395
   140016741:	mov    ebx,0xcdeb9293
   140016746:	xchg   ebx,eax
   140016747:	mov    edi,0xff94ceed
   14001674c:	rcl    BYTE PTR [rsi+0xd03c],0x0
	...
   14001678f:	add    bh,bh
   140016791:	(bad)  
   140016792:	call   FWORD PTR [rsi]
   140016794:	in     al,0xbb
   140016796:	js     0x140016797
   140016798:	repz rcr DWORD PTR [rax-0x4e1f0252],1
   14001679f:	mov    ebp,edi
   1400167a1:	loope  0x140016755
   1400167a3:	xchg   ebx,edi
   1400167a5:	fild   QWORD PTR [rdi-0x1d6b9f57]
   1400167ab:	(bad)  
   1400167ac:	sbb    al,0x73
   1400167ae:	idiv   bh
   1400167b0:	(bad)  
   1400167b1:	js     0x1400167a5
   1400167b3:	jmp    QWORD PTR [rdi]
   1400167b5:	js     0x1400167aa
   1400167b7:	jmp    QWORD PTR [rdx]
   1400167b9:	jne    0x1400167ae
   1400167bb:	(bad)  
   1400167bc:	cmp    eax,DWORD PTR [rbx+rsi*8-0x20c1402]
   1400167c3:	(bad)  
   1400167c4:	(bad)  
   1400167c5:	(bad)  
   1400167c6:	(bad)  
   1400167c7:	(bad)  
   1400167c8:	(bad)  
   1400167c9:	(bad)  
   1400167ca:	(bad)  
   1400167cb:	(bad)  
   1400167cc:	(bad)  
   1400167cd:	(bad)  
   1400167ce:	(bad)  
   1400167cf:	(bad)  
   1400167d0:	(bad)  
   1400167d1:	(bad)  
   1400167d2:	(bad)  
   1400167d3:	(bad)  
   1400167d4:	stc    
   1400167d5:	sti    
   1400167d6:	(bad)  
   1400167d7:	jmp    QWORD PTR [rdi+0x4dfef9c6]
   1400167dd:	(bad)  
   1400167de:	hlt    
   1400167df:	push   QWORD PTR [rdx]
   1400167e1:	jnp    0x1400167d6
   1400167e3:	jmp    FWORD PTR [rdx]
   1400167e5:	jne    0x1400167d9
   1400167e7:	jmp    QWORD PTR [rdx+rsi*2]
   1400167ea:	bnd jmp QWORD PTR [rip+0x26fff272]        # 0x167015a63
   1400167f1:	jb     0x1400167e5
   1400167f3:	jmp    QWORD PTR [rsi]
   1400167f5:	jno    0x1400167e9
   1400167f7:	jmp    QWORD PTR [rsi]
   1400167f9:	jno    0x1400167ed
   1400167fb:	jmp    QWORD PTR [rsi]
   1400167fd:	jo     0x1400167f1
   1400167ff:	jmp    QWORD PTR [rsi]
   140016801:	jo     0x1400167f5
   140016803:	jmp    QWORD PTR [rsi]
   140016805:	outs   dx,DWORD PTR ds:[rsi]
   140016806:	bnd jmp QWORD PTR [rsi]
   140016809:	outs   dx,DWORD PTR ds:[rsi]
   14001680a:	repnz call FWORD PTR [rcx]
   14001680d:	push   0xffffffffb496fff4
   140016812:	in     al,dx
   140016813:	std    
   140016814:	(bad)  
   140016815:	scas   al,BYTE PTR es:[rdi]
   140016816:	nop
   140016817:	out    dx,eax
   140016818:	loop   0x1400167e0
   14001681a:	cdq    
   14001681b:	loop   0x140016818
   14001681d:	fisub  DWORD PTR [rbp-0x5d260623]
   140016823:	(bad)  
   140016825:	jrcxz  0x1400167e9
   140016827:	icebp  
   140016828:	(bad)  
   140016829:	(bad)  
   14001682a:	jg     0x14001682b
   14001682c:	mov    edx,0xe9ef4694
   140016831:	retf   0xc499
   140016834:	in     eax,0xc7
   140016836:	xchg   ah,bl
   140016838:	lock (bad) 
   14001683a:	nop
   14001683b:	(bad)  
   14001683c:	mov    esp,0xd5f34395
   140016841:	mov    ebx,0xcdeb9293
   140016846:	xchg   edx,eax
   140016847:	mov    edi,0xff92cded
   14001684c:	rcr    DWORD PTR [rax+0xd13f],0x0
	...
   14001688f:	add    bh,bh
   140016891:	(bad)  
   140016892:	call   FWORD PTR [rsi]
   140016894:	in     al,0xbb
   140016896:	js     0x140016897
   140016898:	repz rcr DWORD PTR [rcx-0x4c1e0253],1
   14001689f:	mov    edi,edi
   1400168a1:	in     al,0xb1
   1400168a3:	mov    bl,al
   1400168a5:	sar    DWORD PTR [rbx-0xb87dc25],0xff
   1400168ac:	es jp  0x1400168a2
   1400168af:	jmp    QWORD PTR [rdi]
   1400168b1:	jp     0x1400168a6
   1400168b3:	jmp    QWORD PTR [rdi]
   1400168b5:	jns    0x1400168a9
   1400168b7:	jmp    QWORD PTR [rax]
   1400168b9:	jne    0x1400168ad
   1400168bb:	dec    DWORD PTR [rax-0x73]
   1400168be:	repz std 
   1400168c0:	repnz idiv ch
   1400168c3:	(bad)  
   1400168c4:	std    
   1400168c5:	(bad)  
   1400168c6:	(bad)  
   1400168c7:	(bad)  
   1400168c8:	(bad)  
   1400168c9:	(bad)  
   1400168ca:	(bad)  
   1400168cb:	(bad)  
   1400168cc:	(bad)  
   1400168cd:	(bad)  
   1400168ce:	(bad)  
   1400168cf:	(bad)  
   1400168d0:	(bad)  
   1400168d1:	(bad)  
   1400168d2:	(bad)  
   1400168d3:	(bad)  
   1400168d4:	(bad)  
   1400168d5:	(bad)  
   1400168d6:	(bad)  
   1400168d7:	(bad)  
   1400168d8:	(bad)  
   1400168d9:	(bad)  
   1400168da:	(bad)  
   1400168db:	(bad)  
   1400168dc:	fucomp st(1)
   1400168de:	cld    
   1400168df:	(bad)  
   1400168e0:	jp     0x14001688c
   1400168e2:	idiv   dh
   1400168e4:	cmp    al,0x82
   1400168e6:	repz push QWORD PTR [rcx]
   1400168e9:	jnp    0x1400168de
   1400168eb:	jmp    QWORD PTR [rdi]
   1400168ed:	je     0x1400168e1
   1400168ef:	jmp    QWORD PTR [rip+0x26fff272]        # 0x167015b67
   1400168f5:	jb     0x1400168e9
   1400168f7:	jmp    QWORD PTR [rsi]
   1400168f9:	jb     0x1400168ed
   1400168fb:	jmp    QWORD PTR [rsi]
   1400168fd:	jb     0x1400168f1
   1400168ff:	jmp    QWORD PTR [rsi]
   140016901:	jno    0x1400168f5
   140016903:	jmp    QWORD PTR [rsi]
   140016905:	jno    0x1400168f9
   140016907:	jmp    QWORD PTR [rsi]
   140016909:	jo     0x1400168fd
   14001690b:	call   FWORD PTR [rdi]
   14001690d:	imul   esi,ecx,0xffffffff
   140016910:	rex.RX xchg edx,r15d
   140016913:	dec    esp
   140016915:	ret    0xf5ba
   140016918:	(bad)  
   140016919:	lods   eax,DWORD PTR ds:[rsi]
   14001691a:	mov    ecx,ebp
   14001691c:	clc    
   14001691d:	fsub   DWORD PTR [rbx-0x5b260522]
   140016923:	(bad)  
   140016925:	jrcxz  0x1400168e9
   140016927:	icebp  
   140016928:	jmp    0x1400168f0
   14001692a:	jg     0x14001692b
   14001692c:	mov    edx,0xe9ef4694
   140016931:	retf   0xc49b
   140016934:	in     eax,0xc7
   140016936:	xchg   esp,ebx
   140016938:	lock (bad) 
   14001693a:	nop
   14001693b:	(bad)  
   14001693c:	mov    esp,0xd5f34495
   140016941:	mov    ebx,0xcdea9294
   140016946:	xchg   edx,eax
   140016947:	mov    edi,0xff92cded
   14001694c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   14001698f:	add    bh,bh
   140016991:	(bad)  
   140016992:	call   FWORD PTR [rsi]
   140016994:	in     al,0xbb
   140016996:	js     0x140016997
   140016998:	repz rcr DWORD PTR [rdx-0x4b1d0252],1
   14001699f:	test   esi,edi
   1400169a1:	fild   QWORD PTR [rbx-0x2b658e63]
   1400169a7:	sti    
   1400169a8:	sbb    esi,DWORD PTR [rdi-0x8]
   1400169ab:	jmp    FWORD PTR [rax]
   1400169ad:	jl     0x1400169a2
   1400169af:	jmp    FWORD PTR [rax]
   1400169b1:	jnp    0x1400169a6
   1400169b3:	jmp    FWORD PTR [rax]
   1400169b5:	jnp    0x1400169aa
   1400169b7:	jmp    QWORD PTR [rax]
   1400169b9:	jbe    0x1400169ad
   1400169bb:	dec    DWORD PTR [rax-0x72]
   1400169be:	repz std 
   1400169c0:	icebp  
   1400169c1:	idiv   ch
   1400169c3:	(bad)  
   1400169c4:	std    
   1400169c5:	(bad)  
   1400169c6:	(bad)  
   1400169c7:	(bad)  
   1400169c8:	(bad)  
   1400169c9:	(bad)  
   1400169ca:	(bad)  
   1400169cb:	(bad)  
   1400169cc:	(bad)  
   1400169cd:	(bad)  
   1400169ce:	(bad)  
   1400169cf:	(bad)  
   1400169d0:	(bad)  
   1400169d1:	(bad)  
   1400169d2:	(bad)  
   1400169d3:	(bad)  
   1400169d4:	(bad)  
   1400169d5:	(bad)  
   1400169d6:	(bad)  
   1400169d7:	(bad)  
   1400169d8:	(bad)  
   1400169d9:	(bad)  
   1400169da:	(bad)  
   1400169db:	(bad)  
   1400169dc:	(bad)  
   1400169dd:	(bad)  
   1400169de:	(bad)  
   1400169df:	(bad)  
   1400169e0:	(bad)  
   1400169e1:	(bad)  
   1400169e2:	(bad)  
   1400169e3:	push   QWORD PTR [rdi+rcx*8-0x6ba90106]
   1400169ea:	hlt    
   1400169eb:	push   QWORD PTR [rdi]
   1400169ed:	xor    bl,0xff
   1400169f0:	sub    eax,0x25fff279
   1400169f5:	jae    0x1400169e9
   1400169f7:	jmp    QWORD PTR [rsi]
   1400169f9:	jae    0x1400169ed
   1400169fb:	jmp    QWORD PTR [rsi]
   1400169fd:	jae    0x1400169f1
   1400169ff:	jmp    QWORD PTR [rsi]
   140016a01:	jae    0x1400169f5
   140016a03:	jmp    QWORD PTR [rsi]
   140016a05:	jno    0x1400169f9
   140016a07:	jmp    QWORD PTR [rsi]
   140016a09:	jb     0x1400169fd
   140016a0b:	jmp    QWORD PTR [rsi]
   140016a0d:	jno    0x140016a01
   140016a0f:	call   FWORD PTR [rdi]
   140016a11:	outs   dx,BYTE PTR ds:[rsi]
   140016a12:	idiv   bh
   140016a14:	stos   BYTE PTR es:[rdi],al
   140016a15:	mov    esp,0xa8c1fae0
   140016a1a:	mov    ch,ch
   140016a1c:	(bad)  
   140016a1d:	(bad)  
   140016a1e:	lahf   
   140016a1f:	loope  0x140016a1c
   140016a21:	(bad)  [rsi-0x3d1c0825]
   140016a27:	icebp  
   140016a28:	(bad)  
   140016a29:	(bad)  
   140016a2a:	jl     0x140016a2b
   140016a2c:	mov    edx,0xe8ef4694
   140016a31:	retf   0xc49b
   140016a34:	in     eax,0xc6
   140016a36:	xchg   esp,ebx
   140016a38:	lock (bad) 
   140016a3a:	nop
   140016a3b:	(bad)  
   140016a3c:	mov    esp,0xd5f34495
   140016a41:	mov    esp,0xcdea9295
   140016a46:	xchg   ebx,eax
   140016a47:	mov    edi,0xff92cded
   140016a4c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140016a8f:	add    bh,bh
   140016a91:	(bad)  
   140016a92:	call   FWORD PTR [rsi]
   140016a94:	in     al,0xbb
   140016a96:	jns    0x140016a97
   140016a98:	repz rcr DWORD PTR [rdx-0x4a1b0053],1
   140016a9f:	(bad)  
   140016aa0:	in     eax,0xce
   140016aa2:	test   eax,0xeb8337be
   140016aa7:	jmp    QWORD PTR [rbx]
   140016aa9:	jl     0x140016aa2
   140016aab:	jmp    QWORD PTR [rdi]
   140016aad:	jge    0x140016aa3
   140016aaf:	jmp    QWORD PTR [rdi]
   140016ab1:	jge    0x140016aa7
   140016ab3:	jmp    QWORD PTR [rdi]
   140016ab5:	jl     0x140016aab
   140016ab7:	jmp    QWORD PTR [rcx]
   140016ab9:	js     0x140016aae
   140016abb:	dec    DWORD PTR [rcx-0x71]
   140016abe:	hlt    
   140016abf:	std    
   140016ac0:	repnz idiv ebp
   140016ac3:	(bad)  
   140016ac4:	(bad)  
   140016ac5:	(bad)  
   140016ac6:	(bad)  
   140016ac7:	(bad)  
   140016ac8:	(bad)  
   140016ac9:	(bad)  
   140016aca:	(bad)  
   140016acb:	(bad)  
   140016acc:	(bad)  
   140016acd:	(bad)  
   140016ace:	(bad)  
   140016acf:	(bad)  
   140016ad0:	(bad)  
   140016ad1:	(bad)  
   140016ad2:	(bad)  
   140016ad3:	(bad)  
   140016ad4:	(bad)  
   140016ad5:	(bad)  
   140016ad6:	(bad)  
   140016ad7:	(bad)  
   140016ad8:	(bad)  
   140016ad9:	(bad)  
   140016ada:	(bad)  
   140016adb:	(bad)  
   140016adc:	(bad)  
   140016add:	(bad)  
   140016ade:	(bad)  
   140016adf:	(bad)  
   140016ae0:	(bad)  
   140016ae1:	(bad)  
   140016ae2:	(bad)  
   140016ae3:	(bad)  
   140016ae4:	(bad)  
   140016ae5:	(bad)  
   140016ae6:	(bad)  
   140016ae7:	jmp    rsi
   140016ae9:	out    dx,eax
   140016aea:	std    
   140016aeb:	inc    DWORD PTR [rdi+0x44fef7b3]
   140016af1:	mov    ebx,esi
   140016af3:	push   QWORD PTR [rsi]
   140016af5:	jg     0x140016aea
   140016af7:	jmp    FWORD PTR [rax]
   140016af9:	ja     0x140016aed
   140016afb:	jmp    QWORD PTR [rsi]
   140016afd:	jae    0x140016af1
   140016aff:	jmp    QWORD PTR [rsi]
   140016b01:	je     0x140016af5
   140016b03:	jmp    QWORD PTR [rsi]
   140016b05:	je     0x140016af9
   140016b07:	jmp    QWORD PTR [rip+0x27fff273]        # 0x168015d80
   140016b0d:	jae    0x140016b01
   140016b0f:	call   FWORD PTR [rdx]
   140016b11:	imul   esi,ebx,0xffffffff
   140016b14:	je     0x140016aba
   140016b16:	hlt    
   140016b17:	dec    bl
   140016b19:	mov    ah,0x9c
   140016b1b:	icebp  
   140016b1c:	(bad)  
   140016b1d:	mov    esp,0xddfce595
   140016b22:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016b23:	(bad)  
   140016b25:	loop   0x140016ae6
   140016b27:	lock out 0xbc,al
   140016b2a:	outs   dx,BYTE PTR ds:[rsi]
   140016b2b:	(bad)  
   140016b2c:	mov    ecx,0xe8ef4593
   140016b31:	retf   0xc49c
   140016b34:	in     eax,0xc7
   140016b36:	mov    ah,bl
   140016b38:	lock (bad) 
   140016b3a:	nop
   140016b3b:	(bad)  
   140016b3c:	mov    esp,0xd4f34495
   140016b41:	mov    esp,0xcdea9296
   140016b46:	xchg   ebx,eax
   140016b47:	mov    edi,0xff92cded
   140016b4c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140016b8f:	add    bh,bh
   140016b91:	(bad)  
   140016b92:	call   FWORD PTR [rsi]
   140016b94:	in     al,0xbb
   140016b96:	jns    0x140016b97
   140016b98:	repz rcr DWORD PTR [rbx-0x4d1a0053],1
   140016b9f:	test   DWORD PTR [rax+0x21ddb2b7],edi
   140016ba5:	jl     0x140016b9e
   140016ba7:	jmp    QWORD PTR [rdi]
   140016ba9:	jg     0x140016ba0
   140016bab:	jmp    FWORD PTR [rax]
   140016bad:	jle    0x140016ba4
   140016baf:	jmp    QWORD PTR [rdi]
   140016bb1:	jle    0x140016ba8
   140016bb3:	jmp    QWORD PTR [rdi]
   140016bb5:	jle    0x140016bab
   140016bb7:	jmp    QWORD PTR [rax]
   140016bb9:	jns    0x140016baf
   140016bbb:	dec    DWORD PTR [rcx-0x6f]
   140016bbe:	cmc    
   140016bbf:	std    
   140016bc0:	cmc    
   140016bc1:	clc    
   140016bc2:	std    
   140016bc3:	(bad)  
   140016bc4:	(bad)  
   140016bc5:	(bad)  
   140016bc6:	(bad)  
   140016bc7:	(bad)  
   140016bc8:	(bad)  
   140016bc9:	(bad)  
   140016bca:	(bad)  
   140016bcb:	(bad)  
   140016bcc:	(bad)  
   140016bcd:	(bad)  
   140016bce:	(bad)  
   140016bcf:	(bad)  
   140016bd0:	(bad)  
   140016bd1:	(bad)  
   140016bd2:	(bad)  
   140016bd3:	(bad)  
   140016bd4:	(bad)  
   140016bd5:	(bad)  
   140016bd6:	(bad)  
   140016bd7:	(bad)  
   140016bd8:	(bad)  
   140016bd9:	(bad)  
   140016bda:	(bad)  
   140016bdb:	(bad)  
   140016bdc:	(bad)  
   140016bdd:	(bad)  
   140016bde:	(bad)  
   140016bdf:	(bad)  
   140016be0:	(bad)  
   140016be1:	(bad)  
   140016be2:	(bad)  
   140016be3:	(bad)  
   140016be4:	(bad)  
   140016be5:	(bad)  
   140016be6:	(bad)  
   140016be7:	(bad)  
   140016be8:	(bad)  
   140016be9:	(bad)  
   140016bea:	(bad)  
   140016beb:	(bad)  
   140016bec:	(bad)  
   140016bed:	(bad)  
   140016bee:	(bad)  
   140016bef:	inc    ecx
   140016bf1:	fdivr  st,st(3)
   140016bf3:	(bad)  
   140016bf4:	(bad)  
   140016bf5:	pushf  
   140016bf6:	cmc    
   140016bf7:	(bad)  
   140016bf8:	cmp    eax,0x32fff485
   140016bfd:	jle    0x140016bf2
   140016bff:	jmp    QWORD PTR [rdi]
   140016c01:	jne    0x140016bf5
   140016c03:	jmp    QWORD PTR [rip+0x26fff274]        # 0x167015e7d
   140016c09:	je     0x140016bfd
   140016c0b:	jmp    QWORD PTR [rsi]
   140016c0d:	je     0x140016c01
   140016c0f:	jmp    QWORD PTR [rdx]
   140016c11:	jo     0x140016c05
   140016c13:	dec    DWORD PTR [rcx-0x74]
   140016c16:	cli    
   140016c17:	dec    edx
   140016c19:	mov    esi,0xadc7f4b5
   140016c1e:	(bad)  
   140016c1f:	jmp    0x11ca9471c
   140016c24:	mul    cl
   140016c26:	mov    ebp,0x60b4e2f0
   140016c2b:	(bad)  
   140016c2c:	mov    eax,0xe8ef4391
   140016c31:	retf   
   140016c32:	pushf  
   140016c33:	(bad)  
   140016c34:	in     al,0xc7
   140016c36:	mov    ah,bl
   140016c38:	out    dx,eax
   140016c39:	int3   
   140016c3a:	mov    edi,?
   140016c3c:	mov    esp,0xd4f34294
   140016c41:	mov    esp,0xcdea9297
   140016c46:	xchg   esp,eax
   140016c47:	mov    edi,0xff92cced
   140016c4c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140016c8f:	add    bh,bh
   140016c91:	(bad)  
   140016c92:	call   FWORD PTR [rsi]
   140016c94:	in     al,0xbb
   140016c96:	jns    0x140016c97
   140016c98:	hlt    
   140016c99:	rcr    BYTE PTR [rbp+rbp*4-0x72521d01],cl
   140016ca0:	mov    ah,BYTE PTR [rdx+0x7d1cf1c0]
   140016ca6:	sti    
   140016ca7:	jmp    FWORD PTR [rax]
   140016ca9:	xor    ebp,0xf58028ff
   140016caf:	jmp    FWORD PTR [rax]
   140016cb1:	xor    ch,0xff
   140016cb4:	sub    BYTE PTR [rdi-0xb],bh
   140016cb7:	jmp    QWORD PTR [rcx]
   140016cb9:	jnp    0x140016cb0
   140016cbb:	dec    DWORD PTR [rdx-0x6d]
   140016cbe:	cmc    
   140016cbf:	std    
   140016cc0:	idiv   ecx
   140016cc2:	(bad)  
   140016cc3:	(bad)  
   140016cc4:	(bad)  
   140016cc5:	(bad)  
   140016cc6:	(bad)  
   140016cc7:	(bad)  
   140016cc8:	(bad)  
   140016cc9:	(bad)  
   140016cca:	(bad)  
   140016ccb:	(bad)  
   140016ccc:	(bad)  
   140016ccd:	(bad)  
   140016cce:	(bad)  
   140016ccf:	(bad)  
   140016cd0:	(bad)  
   140016cd1:	(bad)  
   140016cd2:	(bad)  
   140016cd3:	(bad)  
   140016cd4:	(bad)  
   140016cd5:	(bad)  
   140016cd6:	(bad)  
   140016cd7:	(bad)  
   140016cd8:	(bad)  
   140016cd9:	(bad)  
   140016cda:	(bad)  
   140016cdb:	(bad)  
   140016cdc:	(bad)  
   140016cdd:	(bad)  
   140016cde:	(bad)  
   140016cdf:	(bad)  
   140016ce0:	(bad)  
   140016ce1:	(bad)  
   140016ce2:	(bad)  
   140016ce3:	(bad)  
   140016ce4:	(bad)  
   140016ce5:	(bad)  
   140016ce6:	(bad)  
   140016ce7:	(bad)  
   140016ce8:	(bad)  
   140016ce9:	(bad)  
   140016cea:	(bad)  
   140016ceb:	(bad)  
   140016cec:	(bad)  
   140016ced:	(bad)  
   140016cee:	(bad)  
   140016cef:	(bad)  
   140016cf0:	(bad)  
   140016cf1:	(bad)  
   140016cf2:	(bad)  
   140016cf3:	(bad)  
   140016cf4:	out    dx,eax
   140016cf5:	cmc    
   140016cf6:	(bad)  
   140016cf7:	call   QWORD PTR [rbx+rdi*4-0x72b50108]
   140016cfe:	hlt    
   140016cff:	(bad)  
   140016d00:	cmp    al,BYTE PTR [rsp+rsi*8-0xc84d201]
   140016d07:	jmp    QWORD PTR [rsi]
   140016d09:	jne    0x140016cfd
   140016d0b:	jmp    QWORD PTR [rip+0x24fff376]        # 0x165016087
   140016d11:	jbe    0x140016d05
   140016d13:	push   QWORD PTR [rcx]
   140016d15:	jg     0x140016d11
   140016d17:	inc    eax
   140016d19:	ror    cl,0xf7
   140016d1c:	shl    BYTE PTR [rdi-0x290e1477],0xa4
   140016d23:	(bad)  
   140016d25:	loope  0x140016ce4
   140016d27:	lock loope 0x140016cda
   140016d2a:	pop    rdx
   140016d2b:	push   QWORD PTR [rdi-0x1710bd6f]
   140016d31:	int3   
   140016d32:	sahf   
   140016d33:	(bad)  
   140016d34:	in     al,0xc6
   140016d36:	mov    ah,bl
   140016d38:	in     al,dx
   140016d39:	mov    BYTE PTR [rdx+0x3e91bbff],0xf3
   140016d40:	(bad)  
   140016d41:	mov    esp,0xceea9297
   140016d46:	xchg   esp,eax
   140016d47:	mov    edi,0xff91cded
   140016d4c:	rcl    DWORD PTR [rdi+0xd13f],0x0
	...
   140016d8f:	add    bh,bh
   140016d91:	(bad)  
   140016d92:	call   FWORD PTR [rsi]
   140016d94:	in     al,0xbb
   140016d96:	jns    0x140016d97
   140016d98:	hlt    
   140016d99:	rcr    DWORD PTR [rbp-0x57230256],cl
   140016d9f:	cdq    
   140016da0:	push   0x1efccc94
   140016da5:	jg     0x140016da2
   140016da7:	jmp    FWORD PTR [rax]
   140016da9:	(bad)  
   140016daa:	cmc    
   140016dab:	jmp    FWORD PTR [rax]
   140016dad:	(bad)  
   140016dae:	cmc    
   140016daf:	jmp    FWORD PTR [rax]
   140016db1:	xor    ebp,0xf58128ff
   140016db7:	jmp    QWORD PTR [rcx]
   140016db9:	jl     0x140016db0
   140016dbb:	dec    DWORD PTR [rdx-0x6c]
   140016dbe:	cmc    
   140016dbf:	std    
   140016dc0:	stc    
   140016dc1:	sti    
   140016dc2:	(bad)  
   140016dc3:	(bad)  
   140016dc4:	(bad)  
   140016dc5:	(bad)  
   140016dc6:	(bad)  
   140016dc7:	(bad)  
   140016dc8:	(bad)  
   140016dc9:	(bad)  
   140016dca:	(bad)  
   140016dcb:	(bad)  
   140016dcc:	(bad)  
   140016dcd:	(bad)  
   140016dce:	(bad)  
   140016dcf:	(bad)  
   140016dd0:	(bad)  
   140016dd1:	(bad)  
   140016dd2:	(bad)  
   140016dd3:	(bad)  
   140016dd4:	(bad)  
   140016dd5:	(bad)  
   140016dd6:	(bad)  
   140016dd7:	(bad)  
   140016dd8:	(bad)  
   140016dd9:	(bad)  
   140016dda:	(bad)  
   140016ddb:	(bad)  
   140016ddc:	(bad)  
   140016ddd:	(bad)  
   140016dde:	(bad)  
   140016ddf:	(bad)  
   140016de0:	(bad)  
   140016de1:	(bad)  
   140016de2:	(bad)  
   140016de3:	(bad)  
   140016de4:	(bad)  
   140016de5:	(bad)  
   140016de6:	(bad)  
   140016de7:	(bad)  
   140016de8:	(bad)  
   140016de9:	(bad)  
   140016dea:	(bad)  
   140016deb:	(bad)  
   140016dec:	(bad)  
   140016ded:	(bad)  
   140016dee:	(bad)  
   140016def:	(bad)  
   140016df0:	(bad)  
   140016df1:	(bad)  
   140016df2:	(bad)  
   140016df3:	(bad)  
   140016df4:	(bad)  
   140016df5:	(bad)  
   140016df6:	(bad)  
   140016df7:	(bad)  
   140016df8:	(bad)  
   140016df9:	(bad)  
   140016dfa:	(bad)  
   140016dfb:	dec    ebp
   140016dfd:	(bad)  
   140016dff:	(bad)  
   140016e00:	push   0x41fef6a0
   140016e05:	mov    ebp,esi
   140016e07:	jmp    FWORD PTR [rdx]
   140016e09:	jns    0x140016dfe
   140016e0b:	jmp    QWORD PTR [rip+0x26fff376]        # 0x167016187
   140016e11:	jbe    0x140016e05
   140016e13:	jmp    QWORD PTR [rdi+rsi*2]
   140016e16:	clc    
   140016e17:	push   QWORD PTR [rcx-0x3f062742]
   140016e1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016e1e:	mov    ch,ch
   140016e20:	in     al,dx
   140016e21:	shl    DWORD PTR [rdx-0x421d0821],1
   140016e27:	lock loope 0x140016dda
   140016e2a:	pop    rdx
   140016e2b:	push   QWORD PTR [rdi-0x1710bd6f]
   140016e31:	int3   
   140016e32:	sahf   
   140016e33:	(bad)  
   140016e34:	in     al,0xc6
   140016e36:	mov    ah,bl
   140016e38:	jmp    0xfa00e6fd
   140016e3d:	(bad)  
   140016e3e:	cmp    dh,bl
   140016e40:	(bad)  
   140016e41:	mov    ebp,0xcdea9298
   140016e46:	xchg   esp,eax
   140016e47:	mov    edi,0xff8bc9eb
   140016e4c:	rcl    DWORD PTR [rsi+0xd03c],0x0
	...
   140016e8f:	add    bh,bh
   140016e91:	(bad)  
   140016e92:	jmp    QWORD PTR [rcx]
   140016e94:	in     al,0xbb
   140016e96:	jns    0x140016e97
   140016e98:	cmc    
   140016e99:	rcr    DWORD PTR [rbp-0x5c280757],cl
   140016e9f:	movabs ds:0xfffb8121ffd58e53,al
   140016ea8:	sub    BYTE PTR [rbx-0x7cd6000b],al
   140016eae:	cmc    
   140016eaf:	jmp    FWORD PTR [rcx]
   140016eb1:	(bad)  
   140016eb2:	cmc    
   140016eb3:	jmp    FWORD PTR [rax]
   140016eb5:	(bad)  
   140016eb6:	cmc    
   140016eb7:	jmp    QWORD PTR [rcx]
   140016eb9:	jle    0x140016eb0
   140016ebb:	dec    DWORD PTR [rdx-0x6c]
   140016ebe:	cmc    
   140016ebf:	std    
   140016ec0:	clc    
   140016ec1:	cli    
   140016ec2:	std    
   140016ec3:	(bad)  
   140016ec4:	(bad)  
   140016ec5:	(bad)  
   140016ec6:	(bad)  
   140016ec7:	(bad)  
   140016ec8:	(bad)  
   140016ec9:	(bad)  
   140016eca:	(bad)  
   140016ecb:	(bad)  
   140016ecc:	(bad)  
   140016ecd:	(bad)  
   140016ece:	(bad)  
   140016ecf:	(bad)  
   140016ed0:	(bad)  
   140016ed1:	(bad)  
   140016ed2:	(bad)  
   140016ed3:	(bad)  
   140016ed4:	(bad)  
   140016ed5:	(bad)  
   140016ed6:	(bad)  
   140016ed7:	(bad)  
   140016ed8:	(bad)  
   140016ed9:	(bad)  
   140016eda:	(bad)  
   140016edb:	(bad)  
   140016edc:	(bad)  
   140016edd:	(bad)  
   140016ede:	(bad)  
   140016edf:	(bad)  
   140016ee0:	(bad)  
   140016ee1:	(bad)  
   140016ee2:	(bad)  
   140016ee3:	(bad)  
   140016ee4:	(bad)  
   140016ee5:	(bad)  
   140016ee6:	(bad)  
   140016ee7:	(bad)  
   140016ee8:	(bad)  
   140016ee9:	(bad)  
   140016eea:	(bad)  
   140016eeb:	(bad)  
   140016eec:	(bad)  
   140016eed:	(bad)  
   140016eee:	(bad)  
   140016eef:	(bad)  
   140016ef0:	(bad)  
   140016ef1:	(bad)  
   140016ef2:	(bad)  
   140016ef3:	(bad)  
   140016ef4:	(bad)  
   140016ef5:	(bad)  
   140016ef6:	(bad)  
   140016ef7:	(bad)  
   140016ef8:	(bad)  
   140016ef9:	(bad)  
   140016efa:	(bad)  
   140016efb:	(bad)  
   140016efc:	(bad)  
   140016efd:	(bad)  
   140016efe:	(bad)  
   140016eff:	(bad)  
   140016f00:	in     eax,dx
   140016f01:	hlt    
   140016f02:	(bad)  
   140016f03:	(bad)  
   140016f04:	(bad)  
   140016f05:	sahf   
   140016f06:	cmc    
   140016f07:	(bad)  
   140016f08:	cmp    al,BYTE PTR [rbp+0x7a26fff4]
   140016f0e:	repz jmp QWORD PTR [rsi]
   140016f11:	js     0x140016f06
   140016f13:	jmp    QWORD PTR [rax]
   140016f15:	jbe    0x140016f0e
   140016f17:	jmp    QWORD PTR [rsi-0x3e052045]
   140016f1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016f1e:	(bad)  
   140016f1f:	in     eax,dx
   140016f20:	jmp    0x138e110f3
   140016f25:	loop   0x140016ee4
   140016f27:	lock loope 0x140016eda
   140016f2a:	pop    rdx
   140016f2b:	push   QWORD PTR [rdi-0x1710bd6f]
   140016f31:	int3   
   140016f32:	lahf   
   140016f33:	(bad)  
   140016f34:	in     al,0xc6
   140016f36:	mov    ah,bl
   140016f38:	jmp    0xfa00e4fb
   140016f3d:	mov    ?,WORD PTR [rax]
   140016f3f:	repnz (bad) 
   140016f41:	mov    ebp,0xcde99299
   140016f46:	xchg   esp,eax
   140016f47:	mov    edi,0xff81c3e8
   140016f4c:	mov    edi,0xcf3793
	...
   140016f8d:	add    BYTE PTR [rax],al
   140016f8f:	add    bh,bh
   140016f91:	(bad)  
   140016f92:	jmp    QWORD PTR [rcx]
   140016f94:	in     al,0xbb
   140016f96:	jns    0x140016f97
   140016f98:	cmc    
   140016f99:	(bad)  
   140016f9a:	popf   
   140016f9b:	test   eax,0xa6a2d4f4
   140016fa0:	rex.WX mov rbx,rdx
   140016fa3:	jmp    QWORD PTR [rdx]
   140016fa5:	cmp    ebx,0xffffffff
   140016fa8:	sub    DWORD PTR [rsi+rsi*8-0x97bd601],eax
   140016faf:	jmp    FWORD PTR [rcx]
   140016fb1:	xor    ebp,0xffffffff
   140016fb4:	sub    DWORD PTR [rbx+0x7f22fff5],eax
   140016fba:	cmc    
   140016fbb:	dec    DWORD PTR [rbx-0x6a]
   140016fbe:	idiv   dh
   140016fc0:	idiv   cl
   140016fc2:	(bad)  
   140016fc3:	(bad)  
   140016fc4:	(bad)  
   140016fc5:	(bad)  
   140016fc6:	(bad)  
   140016fc7:	(bad)  
   140016fc8:	(bad)  
   140016fc9:	(bad)  
   140016fca:	(bad)  
   140016fcb:	(bad)  
   140016fcc:	(bad)  
   140016fcd:	(bad)  
   140016fce:	(bad)  
   140016fcf:	(bad)  
   140016fd0:	(bad)  
   140016fd1:	(bad)  
   140016fd2:	(bad)  
   140016fd3:	(bad)  
   140016fd4:	(bad)  
   140016fd5:	(bad)  
   140016fd6:	(bad)  
   140016fd7:	(bad)  
   140016fd8:	(bad)  
   140016fd9:	(bad)  
   140016fda:	(bad)  
   140016fdb:	(bad)  
   140016fdc:	(bad)  
   140016fdd:	(bad)  
   140016fde:	(bad)  
   140016fdf:	(bad)  
   140016fe0:	(bad)  
   140016fe1:	(bad)  
   140016fe2:	(bad)  
   140016fe3:	(bad)  
   140016fe4:	(bad)  
   140016fe5:	(bad)  
   140016fe6:	(bad)  
   140016fe7:	(bad)  
   140016fe8:	(bad)  
   140016fe9:	(bad)  
   140016fea:	(bad)  
   140016feb:	(bad)  
   140016fec:	(bad)  
   140016fed:	(bad)  
   140016fee:	(bad)  
   140016fef:	(bad)  
   140016ff0:	(bad)  
   140016ff1:	(bad)  
   140016ff2:	(bad)  
   140016ff3:	(bad)  
   140016ff4:	(bad)  
   140016ff5:	(bad)  
   140016ff6:	(bad)  
   140016ff7:	(bad)  
   140016ff8:	(bad)  
   140016ff9:	(bad)  
   140016ffa:	(bad)  
   140016ffb:	(bad)  
   140016ffc:	(bad)  
   140016ffd:	(bad)  
   140016ffe:	(bad)  
   140016fff:	(bad)  
   140017000:	(bad)  
   140017001:	(bad)  
   140017002:	(bad)  
   140017003:	call   QWORD PTR [rdi+0x39fef8c0]
   140017009:	mov    ah,dh
   14001700b:	jmp    FWORD PTR [rax]
   14001700d:	jnp    0x140017002
   14001700f:	jmp    QWORD PTR [rsi]
   140017011:	jns    0x140017005
   140017013:	call   FWORD PTR [rdi]
   140017015:	jbe    0x14001700d
   140017017:	call   FWORD PTR [rbx-0x3d041d4a]
   14001701d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001701e:	mov    gs,esi
   140017020:	out    0xcd,eax
   140017022:	movabs al,ds:0x5ab0e1f0bfe3f8e0
   14001702b:	push   QWORD PTR [rdi-0x1710bd6f]
   140017031:	retf   
   140017032:	lahf   
   140017033:	(bad)  
   140017034:	in     al,0xc7
   140017036:	xchg   esp,ebx
   140017038:	jmp    0xfa00e5fb
   14001703d:	mov    ?,WORD PTR [rax]
   14001703f:	repnz (bad) 
   140017041:	mov    ebp,0xcdea9299
   140017046:	xchg   ebx,eax
   140017047:	mov    edi,0xff7abfe6
   14001704c:	mov    esi,0xcd3190
	...
   14001708d:	add    BYTE PTR [rax],al
   14001708f:	add    bh,bh
   140017091:	(bad)  
   140017092:	jmp    QWORD PTR [rcx]
   140017094:	in     al,0xbb
   140017096:	jns    0x140017097
   140017098:	cmc    
   140017099:	(bad)  
   14001709a:	popf   
   14001709b:	test   eax,0xa6a1d4f2
   1400170a0:	mov    r9,ds
   1400170a3:	jmp    QWORD PTR [rbx]
   1400170a5:	test   ebx,edi
   1400170a7:	jmp    FWORD PTR [rcx]
   1400170a9:	xchg   ch,dh
   1400170ab:	jmp    FWORD PTR [rcx]
   1400170ad:	test   esi,esi
   1400170af:	jmp    FWORD PTR [rcx]
   1400170b1:	test   esi,esi
   1400170b3:	jmp    FWORD PTR [rax]
   1400170b5:	test   ch,dh
   1400170b7:	jmp    QWORD PTR [rcx]
   1400170b9:	xor    ch,0xff
   1400170bc:	rex.WXB xchg r15,rax
   1400170be:	idiv   edi
   1400170c0:	hlt    
   1400170c1:	clc    
   1400170c2:	(bad)  
   1400170c3:	(bad)  
   1400170c4:	(bad)  
   1400170c5:	(bad)  
   1400170c6:	(bad)  
   1400170c7:	(bad)  
   1400170c8:	(bad)  
   1400170c9:	(bad)  
   1400170ca:	(bad)  
   1400170cb:	(bad)  
   1400170cc:	(bad)  
   1400170cd:	(bad)  
   1400170ce:	(bad)  
   1400170cf:	(bad)  
   1400170d0:	(bad)  
   1400170d1:	(bad)  
   1400170d2:	(bad)  
   1400170d3:	(bad)  
   1400170d4:	(bad)  
   1400170d5:	(bad)  
   1400170d6:	(bad)  
   1400170d7:	(bad)  
   1400170d8:	(bad)  
   1400170d9:	(bad)  
   1400170da:	(bad)  
   1400170db:	(bad)  
   1400170dc:	(bad)  
   1400170dd:	(bad)  
   1400170de:	(bad)  
   1400170df:	(bad)  
   1400170e0:	(bad)  
   1400170e1:	(bad)  
   1400170e2:	(bad)  
   1400170e3:	(bad)  
   1400170e4:	(bad)  
   1400170e5:	(bad)  
   1400170e6:	(bad)  
   1400170e7:	(bad)  
   1400170e8:	(bad)  
   1400170e9:	(bad)  
   1400170ea:	(bad)  
   1400170eb:	(bad)  
   1400170ec:	(bad)  
   1400170ed:	(bad)  
   1400170ee:	(bad)  
   1400170ef:	(bad)  
   1400170f0:	(bad)  
   1400170f1:	(bad)  
   1400170f2:	(bad)  
   1400170f3:	(bad)  
   1400170f4:	(bad)  
   1400170f5:	(bad)  
   1400170f6:	(bad)  
   1400170f7:	(bad)  
   1400170f8:	(bad)  
   1400170f9:	(bad)  
   1400170fa:	(bad)  
   1400170fb:	(bad)  
   1400170fc:	(bad)  
   1400170fd:	(bad)  
   1400170fe:	(bad)  
   1400170ff:	(bad)  
   140017100:	sti    
   140017101:	(bad)  
   140017102:	(bad)  
   140017103:	inc    DWORD PTR [rdx+0x35fff8b4]
   140017109:	test   ah,dh
   14001710b:	jmp    QWORD PTR [rdi]
   14001710d:	jge    0x140017104
   14001710f:	jmp    FWORD PTR [rax]
   140017111:	jnp    0x140017106
   140017113:	jmp    QWORD PTR [rdx]
   140017115:	jns    0x14001710e
   140017117:	jmp    QWORD PTR [rax-0x3e041d47]
   14001711d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001711e:	(bad)  
   14001711f:	in     eax,dx
   140017120:	call   0x138e317f5
   140017125:	out    0xc7,al
   140017127:	repz loope 0x1400170d9
   14001712a:	pop    rcx
   14001712b:	push   QWORD PTR [rdi-0x1710bd6f]
   140017131:	retf   
   140017132:	sahf   
   140017133:	ret    
   140017134:	out    0xc9,al
   140017136:	(bad)  
   140017137:	fsubp  st(1),st
   140017139:	mov    edi,0x8eb9ff76
   14001713e:	cmp    dl,dh
   140017140:	(bad)  
   140017141:	mov    ebp,0xcde99198
   140017146:	xchg   ebx,eax
   140017147:	shl    dh,0xbe
   14001714a:	jns    0x14001714b
   14001714c:	mov    ebp,0xcd2f8e
	...
   14001718d:	add    BYTE PTR [rax],al
   14001718f:	add    bh,bh
   140017191:	(bad)  
   140017192:	jmp    QWORD PTR [rcx]
   140017194:	in     al,0xbb
   140017196:	jns    0x140017197
   140017198:	cmc    
   140017199:	(bad)  
   14001719a:	sahf   
   14001719b:	test   eax,0xa5a0d3f5
   1400171a0:	rex.WRX (bad) 
   1400171a2:	(bad)  
   1400171a3:	jmp    QWORD PTR [rdx]
   1400171a5:	xchg   ebx,edi
   1400171a7:	jmp    FWORD PTR [rcx]
   1400171a9:	mov    dh,dh
   1400171ab:	jmp    FWORD PTR [rcx]
   1400171ad:	xchg   esi,esi
   1400171af:	jmp    FWORD PTR [rcx]
   1400171b1:	xchg   esi,esi
   1400171b3:	jmp    FWORD PTR [rcx]
   1400171b5:	xchg   dh,dh
   1400171b7:	jmp    QWORD PTR [rdx]
   1400171b9:	(bad)  
   1400171ba:	cmc    
   1400171bb:	dec    DWORD PTR [rdx-0x68]
   1400171be:	idiv   edi
   1400171c0:	repnz idiv ch
   1400171c3:	(bad)  
   1400171c4:	(bad)  
   1400171c5:	(bad)  
   1400171c6:	(bad)  
   1400171c7:	(bad)  
   1400171c8:	(bad)  
   1400171c9:	(bad)  
   1400171ca:	(bad)  
   1400171cb:	(bad)  
   1400171cc:	(bad)  
   1400171cd:	(bad)  
   1400171ce:	(bad)  
   1400171cf:	(bad)  
   1400171d0:	(bad)  
   1400171d1:	(bad)  
   1400171d2:	(bad)  
   1400171d3:	(bad)  
   1400171d4:	(bad)  
   1400171d5:	(bad)  
   1400171d6:	(bad)  
   1400171d7:	(bad)  
   1400171d8:	(bad)  
   1400171d9:	(bad)  
   1400171da:	(bad)  
   1400171db:	(bad)  
   1400171dc:	(bad)  
   1400171dd:	(bad)  
   1400171de:	(bad)  
   1400171df:	(bad)  
   1400171e0:	(bad)  
   1400171e1:	(bad)  
   1400171e2:	(bad)  
   1400171e3:	(bad)  
   1400171e4:	(bad)  
   1400171e5:	(bad)  
   1400171e6:	(bad)  
   1400171e7:	(bad)  
   1400171e8:	(bad)  
   1400171e9:	(bad)  
   1400171ea:	(bad)  
   1400171eb:	(bad)  
   1400171ec:	(bad)  
   1400171ed:	(bad)  
   1400171ee:	(bad)  
   1400171ef:	(bad)  
   1400171f0:	(bad)  
   1400171f1:	(bad)  
   1400171f2:	(bad)  
   1400171f3:	(bad)  
   1400171f4:	(bad)  
   1400171f5:	(bad)  
   1400171f6:	(bad)  
   1400171f7:	(bad)  
   1400171f8:	(bad)  
   1400171f9:	(bad)  
   1400171fa:	(bad)  
   1400171fb:	(bad)  
   1400171fc:	std    
   1400171fd:	(bad)  
   1400171fe:	(bad)  
   1400171ff:	jmp    FWORD PTR [rbp+0x50fff9cf]
   140017205:	cwde   
   140017206:	idiv   bh
   140017208:	sub    eax,0x28fff583
   14001720d:	jle    0x140017205
   14001720f:	jmp    FWORD PTR [rax]
   140017211:	jg     0x14001720b
   140017213:	jmp    FWORD PTR [rcx]
   140017215:	xor    bh,0xfe
   140017218:	lods   eax,DWORD PTR ds:[rsi]
   140017219:	mov    edi,0xa3bff9db
   14001721e:	mov    ch,ch
   140017220:	in     al,dx
   140017221:	fdivr  DWORD PTR [rax-0x35180719]
   140017227:	cmc    
   140017228:	loope  0x1400171d9
   14001722a:	pop    rax
   14001722b:	push   QWORD PTR [rdi-0x1710bd70]
   140017231:	int3   
   140017232:	lahf   
   140017233:	(bad)
   140017236:	movabs ds:0x388eb9ff77bfe9e3,al
   14001723f:	repnz sar BYTE PTR [rdi+rdx*4-0x5b2a126f],cl
   140017247:	leave  
   140017248:	out    0xbf,al
   14001724a:	jp     0x14001724b
   14001724c:	mov    ebp,0xcd2f8e
	...
   14001728d:	add    BYTE PTR [rax],al
   14001728f:	add    bh,bh
   140017291:	(bad)  
   140017292:	jmp    QWORD PTR [rcx]
   140017294:	in     al,0xbb
   140017296:	jns    0x140017297
   140017298:	cmc    
   140017299:	(bad)  
   14001729a:	sahf   
   14001729b:	test   eax,0x9da0d7fa
   1400172a0:	pop    rsp
   1400172a1:	xchg   ecx,eax
   1400172a2:	leave  
   1400172a3:	std    
   1400172a4:	and    DWORD PTR [rdi-0x77d60003],eax
   1400172aa:	idiv   bh
   1400172ac:	sub    DWORD PTR [rax-0x77d6000a],ecx
   1400172b2:	idiv   bh
   1400172b4:	sub    DWORD PTR [rax-0x7cdd000a],ecx
   1400172ba:	cmc    
   1400172bb:	call   QWORD PTR [rdx-0x63]
   1400172be:	idiv   edi
   1400172c0:	idiv   al
   1400172c2:	std    
   1400172c3:	(bad)  
   1400172c4:	std    
   1400172c5:	std    
   1400172c6:	(bad)  
   1400172c7:	(bad)  
   1400172c8:	(bad)  
   1400172c9:	(bad)  
   1400172ca:	(bad)  
   1400172cb:	(bad)  
   1400172cc:	(bad)  
   1400172cd:	(bad)  
   1400172ce:	(bad)  
   1400172cf:	(bad)  
   1400172d0:	(bad)  
   1400172d1:	(bad)  
   1400172d2:	(bad)  
   1400172d3:	(bad)  
   1400172d4:	(bad)  
   1400172d5:	(bad)  
   1400172d6:	(bad)  
   1400172d7:	(bad)  
   1400172d8:	(bad)  
   1400172d9:	(bad)  
   1400172da:	(bad)  
   1400172db:	(bad)  
   1400172dc:	(bad)  
   1400172dd:	(bad)  
   1400172de:	(bad)  
   1400172df:	(bad)  
   1400172e0:	(bad)  
   1400172e1:	(bad)  
   1400172e2:	(bad)  
   1400172e3:	(bad)  
   1400172e4:	(bad)  
   1400172e5:	(bad)  
   1400172e6:	(bad)  
   1400172e7:	(bad)  
   1400172e8:	(bad)  
   1400172e9:	(bad)  
   1400172ea:	(bad)  
   1400172eb:	(bad)  
   1400172ec:	(bad)  
   1400172ed:	(bad)  
   1400172ee:	(bad)  
   1400172ef:	(bad)  
   1400172f0:	(bad)  
   1400172f1:	(bad)  
   1400172f2:	(bad)  
   1400172f3:	(bad)  
   1400172f4:	(bad)  
   1400172f5:	(bad)  
   1400172f6:	(bad)  
   1400172f7:	(bad)  
   1400172f8:	call   0xca0171ee
   1400172fd:	mov    eax,0x954bfff9
   140017302:	idiv   edi
   140017304:	cs test esi,esi
   140017307:	jmp    FWORD PTR [rcx]
   140017309:	xor    ch,0xff
   14001730c:	(bad)  
   14001730d:	jle    0x140017304
   14001730f:	jmp    FWORD PTR [rdx]
   140017311:	jle    0x140017309
   140017313:	push   QWORD PTR [rcx]
   140017315:	cmp    eax,0xfffffffe
   140017318:	mov    ecx,0xc6f7d0c0
   14001731d:	lods   al,BYTE PTR ds:[rsi]
   14001731e:	xchg   edi,eax
   14001731f:	out    dx,al
   140017320:	cmc    
   140017321:	in     al,0xc8
   140017323:	jmp    0x133c85920
   140017328:	loope  0x1400172d9
   14001732a:	pop    rax
   14001732b:	push   QWORD PTR [rdi-0x1610be70]
   140017331:	shr    DWORD PTR [rbx-0x5a2b1334],1
   140017337:	in     al,0xe9
   140017339:	mov    esi,0x8db9ff75
   14001733e:	(bad)  
   14001733f:	repnz sar DWORD PTR [rdi-0x210e6660],cl
   140017346:	mov    bh,0xd0
   140017348:	out    0xbe,al
   14001734a:	js     0x14001734b
   14001734c:	mov    ebp,0xcd2f8e
	...
   14001738d:	add    BYTE PTR [rax],al
   14001738f:	add    bh,bh
   140017391:	(bad)  
   140017392:	jmp    QWORD PTR [rcx]
   140017394:	in     al,0xbb
   140017396:	js     0x140017397
   140017398:	hlt    
   140017399:	rcr    DWORD PTR [rbp-0x59230155],cl
   14001739f:	xchg   ecx,eax
   1400173a0:	jbe    0x14001733a
   1400173a2:	mov    eax,0xfe881ff6
   1400173a7:	jmp    FWORD PTR [rdx]
   1400173a9:	mov    dh,dh
   1400173ab:	jmp    FWORD PTR [rdx]
   1400173ad:	mov    esi,esi
   1400173af:	jmp    FWORD PTR [rdx]
   1400173b1:	mov    esi,esi
   1400173b3:	jmp    FWORD PTR [rcx]
   1400173b5:	mov    esi,esi
   1400173b7:	jmp    QWORD PTR [rcx]
   1400173b9:	test   dh,dh
   1400173bb:	call   QWORD PTR [rbp-0x60]
   1400173be:	idiv   edi
   1400173c0:	idiv   eax
   1400173c2:	cld    
   1400173c3:	(bad)  
   1400173c4:	std    
   1400173c5:	std    
   1400173c6:	(bad)  
   1400173c7:	(bad)  
   1400173c8:	(bad)  
   1400173c9:	(bad)  
   1400173ca:	(bad)  
   1400173cb:	(bad)  
   1400173cc:	(bad)  
   1400173cd:	(bad)  
   1400173ce:	(bad)  
   1400173cf:	(bad)  
   1400173d0:	(bad)  
   1400173d1:	(bad)  
   1400173d2:	(bad)  
   1400173d3:	(bad)  
   1400173d4:	(bad)  
   1400173d5:	(bad)  
   1400173d6:	(bad)  
   1400173d7:	(bad)  
   1400173d8:	(bad)  
   1400173d9:	(bad)  
   1400173da:	(bad)  
   1400173db:	(bad)  
   1400173dc:	(bad)  
   1400173dd:	(bad)  
   1400173de:	(bad)  
   1400173df:	(bad)  
   1400173e0:	(bad)  
   1400173e1:	(bad)  
   1400173e2:	(bad)  
   1400173e3:	(bad)  
   1400173e4:	(bad)  
   1400173e5:	(bad)  
   1400173e6:	(bad)  
   1400173e7:	(bad)  
   1400173e8:	(bad)  
   1400173e9:	(bad)  
   1400173ea:	(bad)  
   1400173eb:	(bad)  
   1400173ec:	(bad)  
   1400173ed:	(bad)  
   1400173ee:	(bad)  
   1400173ef:	(bad)  
   1400173f0:	(bad)  
   1400173f1:	(bad)  
   1400173f2:	(bad)  
   1400173f3:	(bad)  
   1400173f4:	mov    ebx,0x5efffbd7
   1400173f9:	movabs ds:0x862efff69143fff8,eax
   140017402:	cmc    
   140017403:	jmp    FWORD PTR [rax]
   140017405:	xor    ebp,0xf58128ff
   14001740b:	jmp    QWORD PTR [rdi]
   14001740d:	jg     0x140017404
   14001740f:	jmp    QWORD PTR [rdi*2-0x71c2000a]
   140017416:	sti    
   140017417:	dec    edx
   140017419:	vpmaddwd ymm2,ymm7,ymm4
   14001741d:	shr    DWORD PTR [rsi-0x3a19060f],0xe6
   140017424:	mul    esp
   140017426:	(bad)
   140017429:	scas   eax,DWORD PTR es:[rdi]
   14001742a:	push   rdi
   14001742b:	(bad)  
   14001742c:	mov    ecx,0xebf14593
   140017431:	(bad)  
   140017432:	mov    bl,0xcf
   140017434:	jmp    0x129e30d07
   140017439:	mov    esi,0x8fb9ff74
   14001743e:	cmp    ebx,esi
   140017440:	xlat   BYTE PTR ds:[rbx]
   140017441:	(bad)  
   140017442:	scas   al,BYTE PTR es:[rdi]
   140017443:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017444:	out    dx,eax
   140017445:	fldcw  WORD PTR [rbx+rcx*8-0x87411a]
   14001744c:	mov    ebp,0xcd2f8e
	...
   14001748d:	add    BYTE PTR [rax],al
   14001748f:	add    bh,bh
   140017491:	(bad)  
   140017492:	jmp    QWORD PTR [rcx]
   140017494:	in     al,0xbb
   140017496:	js     0x140017497
   140017498:	hlt    
   140017499:	rcr    BYTE PTR [rbp+rbp*4-0x78521e01],cl
   1400174a0:	popf   
   1400174a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400174a2:	movabs ds:0xf68c2afffc8920e6,eax
   1400174ab:	jmp    FWORD PTR [rdx]
   1400174ad:	mov    esi,esi
   1400174af:	jmp    FWORD PTR [rdx]
   1400174b1:	mov    dh,dh
   1400174b3:	jmp    FWORD PTR [rdx]
   1400174b5:	mov    dh,dh
   1400174b7:	jmp    QWORD PTR [rdx]
   1400174b9:	test   esi,esi
   1400174bb:	call   QWORD PTR [rbp-0x5f]
   1400174be:	idiv   edi
   1400174c0:	idiv   eax
   1400174c2:	cld    
   1400174c3:	(bad)  
   1400174c4:	std    
   1400174c5:	std    
   1400174c6:	(bad)  
   1400174c7:	(bad)  
   1400174c8:	(bad)  
   1400174c9:	(bad)  
   1400174ca:	(bad)  
   1400174cb:	(bad)  
   1400174cc:	(bad)  
   1400174cd:	(bad)  
   1400174ce:	(bad)  
   1400174cf:	(bad)  
   1400174d0:	(bad)  
   1400174d1:	(bad)  
   1400174d2:	(bad)  
   1400174d3:	(bad)  
   1400174d4:	(bad)  
   1400174d5:	(bad)  
   1400174d6:	(bad)  
   1400174d7:	(bad)  
   1400174d8:	(bad)  
   1400174d9:	(bad)  
   1400174da:	(bad)  
   1400174db:	(bad)  
   1400174dc:	(bad)  
   1400174dd:	(bad)  
   1400174de:	(bad)  
   1400174df:	(bad)  
   1400174e0:	(bad)  
   1400174e1:	(bad)  
   1400174e2:	(bad)  
   1400174e3:	(bad)  
   1400174e4:	(bad)  
   1400174e5:	(bad)  
   1400174e6:	(bad)  
   1400174e7:	(bad)  
   1400174e8:	(bad)  
   1400174e9:	(bad)  
   1400174ea:	(bad)  
   1400174eb:	(bad)  
   1400174ec:	jmp    0xc70173e4
   1400174f1:	mov    ecx,0x9445fff9
   1400174f6:	idiv   edi
   1400174f8:	cmp    BYTE PTR [rbx-0x7bd40009],cl
   1400174fe:	cmc    
   1400174ff:	jmp    FWORD PTR [rcx]
   140017501:	xor    ebp,0xffffffff
   140017504:	sub    BYTE PTR [rbx-0x7dd8000b],al
   14001750a:	cmc    
   14001750b:	jmp    FWORD PTR [rax]
   14001750d:	xor    ebp,0xf57b1dff
   140017513:	call   FWORD PTR [rbp-0x5f]
   140017516:	stc    
   140017517:	(bad)  
   140017518:	(bad)  
   14001751a:	(bad)  
   14001751b:	cmc    
   14001751c:	fcmove st,st(0)
   14001751e:	mov    ah,0xef
   140017520:	sti    
   140017521:	in     eax,0xc1
   140017523:	in     al,0xf7
   140017525:	jrcxz  0x1400174ec
   140017527:	repz loopne 0x1400174d9
   14001752a:	pop    rax
   14001752b:	(bad)  
   14001752c:	mov    ecx,0xebf34995
   140017531:	(bad)  
   140017532:	lods   eax,DWORD PTR ds:[rsi]
   140017533:	int3   
   140017534:	call   0x128e30c06
   140017539:	mov    esi,0x91bbff74
   14001753e:	cmp    al,0xf6
   140017540:	fmul   st,st(0)
   140017542:	lods   eax,DWORD PTR ds:[rsi]
   140017543:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017544:	out    dx,al
   140017545:	(bad)  
   140017546:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017547:	enter  0xbee6,0x78
   14001754b:	(bad)  
   14001754c:	mov    ebp,0xcd2f8e
	...
   14001758d:	add    BYTE PTR [rax],al
   14001758f:	add    bh,bh
   140017591:	(bad)  
   140017592:	jmp    QWORD PTR [rcx]
   140017594:	in     al,0xbb
   140017596:	js     0x140017597
   140017598:	repz rcr DWORD PTR [rdx-0x4b1b0053],1
   14001759f:	or     ebx,0x2ccc92b7
   1400175a5:	mov    ch,dh
   1400175a7:	jmp    FWORD PTR [rax]
   1400175a9:	(bad)  
   1400175aa:	clc    
   1400175ab:	jmp    FWORD PTR [rdx]
   1400175ad:	mov    esi,?
   1400175af:	jmp    FWORD PTR [rdx]
   1400175b1:	mov    esi,?
   1400175b3:	jmp    FWORD PTR [rdx]
   1400175b5:	mov    esi,esi
   1400175b7:	jmp    QWORD PTR [rdx]
   1400175b9:	xchg   esi,esi
   1400175bb:	call   QWORD PTR [rbp-0x5f]
   1400175be:	idiv   edi
   1400175c0:	idiv   eax
   1400175c2:	cld    
   1400175c3:	(bad)  
   1400175c4:	std    
   1400175c5:	std    
   1400175c6:	(bad)  
   1400175c7:	(bad)  
   1400175c8:	(bad)  
   1400175c9:	(bad)  
   1400175ca:	(bad)  
   1400175cb:	(bad)  
   1400175cc:	(bad)  
   1400175cd:	(bad)  
   1400175ce:	(bad)  
   1400175cf:	(bad)  
   1400175d0:	(bad)  
   1400175d1:	(bad)  
   1400175d2:	(bad)  
   1400175d3:	(bad)  
   1400175d4:	(bad)  
   1400175d5:	(bad)  
   1400175d6:	(bad)  
   1400175d7:	(bad)  
   1400175d8:	(bad)  
   1400175d9:	(bad)  
   1400175da:	(bad)  
   1400175db:	(bad)  
   1400175dc:	(bad)  
   1400175dd:	(bad)  
   1400175de:	(bad)  
   1400175df:	(bad)  
   1400175e0:	(bad)  
   1400175e1:	(bad)  
   1400175e2:	(bad)  
   1400175e3:	(bad)  
   1400175e4:	(bad)  
   1400175e5:	(bad)  
   1400175e6:	(bad)  
   1400175e7:	(bad)  
   1400175e8:	mov    ebp,0x5dfefcd9
   1400175ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400175ee:	clc    
   1400175ef:	(bad)  
   1400175f0:	(bad)  
   1400175f1:	xchg   edx,eax
   1400175f2:	idiv   bh
   1400175f4:	xor    al,0x8b
   1400175f6:	idiv   bh
   1400175f8:	sub    BYTE PTR [rbp+rsi*8-0xa7cd701],al
   1400175ff:	jmp    FWORD PTR [rcx]
   140017601:	test   ch,dh
   140017603:	jmp    FWORD PTR [rcx]
   140017605:	test   ch,dh
   140017607:	jmp    FWORD PTR [rcx]
   140017609:	xor    ebp,0xffffffff
   14001760c:	(bad)  
   14001760d:	xor    ebp,0xf67d1eff
   140017613:	jmp    QWORD PTR [rax-0x25020b3b]
   140017619:	enter  0xf3b8,0xe2
   14001761d:	(bad)  
   14001761e:	mov    ah,0xec
   140017620:	std    
   140017621:	out    0xc1,eax
   140017623:	jrcxz  0x14001761b
   140017625:	jrcxz  0x1400175ec
   140017627:	repz loopne 0x1400175d9
   14001762a:	pop    rax
   14001762b:	(bad)  
   14001762c:	mov    ecx,0xeaf24693
   140017631:	shr    BYTE PTR [rax-0x6a331736],1
   140017637:	jrcxz  0x140017621
   140017639:	mov    esi,0x90baff74
   14001763e:	cmp    esi,ebp
   140017640:	(bad)  
   140017641:	shl    DWORD PTR [rbx-0x5c2c1258],0xcd
   140017648:	out    0xbe,al
   14001764a:	js     0x14001764b
   14001764c:	mov    ebp,0xcd2f8e
	...
   14001768d:	add    BYTE PTR [rax],al
   14001768f:	add    bh,bh
   140017691:	(bad)  
   140017692:	jmp    QWORD PTR [rcx]
   140017694:	in     al,0xbb
   140017696:	js     0x140017697
   140017698:	repz rcr DWORD PTR [rcx-0x491c0053],1
   14001769f:	xor    ecx,0xffffffcd
   1400176a2:	xchg   esi,eax
   1400176a3:	stos   BYTE PTR es:[rdi],al
   1400176a4:	rex.WRXB (bad) 
   1400176a6:	int3   
   1400176a7:	jmp    QWORD PTR [rbx]
   1400176a9:	(bad)  
   1400176aa:	(bad)  
   1400176ab:	jmp    FWORD PTR [rbx]
   1400176ad:	mov    ?,edi
   1400176af:	jmp    FWORD PTR [rbx]
   1400176b1:	(bad)  
   1400176b2:	idiv   edi
   1400176b4:	sub    ecx,DWORD PTR [rbp-0x77dd000a]
   1400176ba:	idiv   bh
   1400176bc:	push   rbp
   1400176bd:	movabs ds:0xfdfdfffbf7f7fff7,al
   1400176c6:	(bad)  
   1400176c7:	(bad)  
   1400176c8:	(bad)  
   1400176c9:	(bad)  
   1400176ca:	(bad)  
   1400176cb:	(bad)  
   1400176cc:	(bad)  
   1400176cd:	(bad)  
   1400176ce:	(bad)  
   1400176cf:	(bad)  
   1400176d0:	(bad)  
   1400176d1:	(bad)  
   1400176d2:	(bad)  
   1400176d3:	(bad)  
   1400176d4:	(bad)  
   1400176d5:	(bad)  
   1400176d6:	(bad)  
   1400176d7:	(bad)  
   1400176d8:	(bad)  
   1400176d9:	(bad)  
   1400176da:	(bad)  
   1400176db:	(bad)  
   1400176dc:	(bad)  
   1400176dd:	(bad)  
   1400176de:	(bad)  
   1400176df:	(bad)  
   1400176e0:	in     al,dx
   1400176e1:	hlt    
   1400176e2:	(bad)  
   1400176e3:	dec    DWORD PTR [rbx+0x47fefabe]
   1400176e9:	cwde   
   1400176ea:	idiv   edi
   1400176ec:	cmp    eax,0x2ffff793
   1400176f1:	mov    dh,dh
   1400176f3:	jmp    FWORD PTR [rax]
   1400176f5:	test   ebp,esi
   1400176f7:	jmp    FWORD PTR [rax]
   1400176f9:	xchg   dh,dh
   1400176fb:	jmp    FWORD PTR [rcx]
   1400176fd:	test   ebp,esi
   1400176ff:	jmp    FWORD PTR [rcx]
   140017701:	test   ebp,esi
   140017703:	jmp    FWORD PTR [rcx]
   140017705:	test   esi,esi
   140017707:	jmp    QWORD PTR [rip+0x27fff583]        # 0x168016c90
   14001770d:	xor    ebp,0xffffffff
   140017710:	pop    rbp
   140017711:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017712:	cld    
   140017713:	(bad)  
   140017714:	fcomp  st(2)
   140017716:	loopne 0x140017711
   140017718:	(bad)  
   140017719:	mov    edx,0xd9eff1a9
   14001771e:	mov    ecx,0xc2e7fde8
   140017723:	in     eax,0xf6
   140017725:	in     al,0xc6
   140017727:	cmc    
   140017728:	loopne 0x1400176d9
   14001772a:	pop    rax
   14001772b:	(bad)  
   14001772c:	mov    ecx,0xebf14593
   140017731:	shr    BYTE PTR [rax-0x63311435],1
   140017737:	out    0xe8,al
   140017739:	mov    esi,0x8fbaff75
   14001773e:	cmp    dh,ah
   140017740:	(bad)  
   140017741:	shl    DWORD PTR [rcx-0x5b2c1257],0xce
   140017748:	out    0xbe,al
   14001774a:	js     0x14001774b
   14001774c:	mov    ebp,0xcd2f8e
	...
   14001778d:	add    BYTE PTR [rax],al
   14001778f:	add    bh,bh
   140017791:	(bad)  
   140017792:	jmp    QWORD PTR [rcx]
   140017794:	in     al,0xbb
   140017796:	ja     0x140017797
   140017798:	hlt    
   140017799:	rcr    DWORD PTR [rax-0x4c1e0253],1
   14001779f:	mov    bh,bh
   1400177a1:	fisubr WORD PTR [rax-0x60606c73]
   1400177a7:	in     eax,dx
   1400177a8:	and    DWORD PTR [rbp-0x70d50003],ecx
   1400177ae:	idiv   edi
   1400177b0:	sub    ecx,DWORD PTR [rdi-0x71d40009]
   1400177b6:	idiv   edi
   1400177b8:	and    ecx,DWORD PTR [rdx-0x5ca90009]
   1400177be:	idiv   edi
   1400177c0:	div    edi
   1400177c2:	sti    
   1400177c3:	(bad)  
   1400177c4:	std    
   1400177c5:	std    
   1400177c6:	(bad)  
   1400177c7:	(bad)  
   1400177c8:	(bad)  
   1400177c9:	(bad)  
   1400177ca:	(bad)  
   1400177cb:	(bad)  
   1400177cc:	(bad)  
   1400177cd:	(bad)  
   1400177ce:	(bad)  
   1400177cf:	(bad)  
   1400177d0:	(bad)  
   1400177d1:	(bad)  
   1400177d2:	(bad)  
   1400177d3:	(bad)  
   1400177d4:	(bad)  
   1400177d5:	(bad)  
   1400177d6:	(bad)  
   1400177d7:	(bad)  
   1400177d8:	(bad)  
   1400177d9:	(bad)  
   1400177da:	(bad)  
   1400177db:	inc    eax
   1400177dd:	(bad)  
   1400177df:	jmp    QWORD PTR [rax-0x58]
   1400177e2:	clc    
   1400177e3:	inc    DWORD PTR [rdx-0x6a]
   1400177e6:	idiv   edi
   1400177e8:	(bad)  
   1400177e9:	nop
   1400177ea:	idiv   bh
   1400177ec:	sub    cl,BYTE PTR [rcx-0x77d7000a]
   1400177f2:	idiv   bh
   1400177f4:	sub    DWORD PTR [rax-0x77d6000a],ecx
   1400177fa:	idiv   bh
   1400177fc:	sub    DWORD PTR [rdi-0x78d6000a],eax
   140017802:	idiv   bh
   140017804:	and    eax,0x2ffff684
   140017809:	mov    esi,esi
   14001780b:	call   FWORD PTR [rax-0x5f]
   14001780e:	clc    
   14001780f:	call   FWORD PTR [rbx-0x25000238]
   140017815:	int3   
   140017816:	shl    ebp,0xd5
   140017819:	shr    BYTE PTR [rsi+rbp*8-0x18401b06],0xfe
   140017821:	(bad)  
   140017822:	(bad)  
   140017823:	call   0x135c85d1f
   140017828:	loopne 0x1400177d9
   14001782a:	pop    rax
   14001782b:	(bad)  
   14001782c:	mov    ecx,0xecf14593
   140017831:	shr    DWORD PTR [rbp-0x5d2d142f],cl
   140017837:	jmp    0x13f773724
   14001783c:	mov    edx,0xd4f43a8f
   140017841:	shl    BYTE PTR [rax-0x5c2c1257],0xce
   140017848:	out    0xbe,al
   14001784a:	js     0x14001784b
   14001784c:	mov    ebp,0xcd2f8e
	...
   14001788d:	add    BYTE PTR [rax],al
   14001788f:	add    bh,bh
   140017891:	(bad)  
   140017892:	jmp    QWORD PTR [rcx]
   140017894:	in     al,0xbb
   140017896:	ja     0x140017897
   140017898:	hlt    
   140017899:	rcl    DWORD PTR [rdi-0x4e1f0253],1
   14001789f:	mov    edi,edi
   1400178a1:	jrcxz  0x140017856
   1400178a3:	test   ebp,ebx
   1400178a5:	mov    edi,0x8d3cbe8d
   1400178aa:	(bad)  
   1400178ac:	es nop
   1400178ae:	cld    
   1400178af:	jmp    FWORD PTR [rbx]
   1400178b1:	nop
   1400178b2:	idiv   edi
   1400178b4:	sub    ecx,DWORD PTR [rdi-0x74dc0009]
   1400178ba:	idiv   bh
   1400178bc:	push   rdi
   1400178bd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400178be:	idiv   edi
   1400178c0:	clc    
   1400178c1:	idiv   ebx
   1400178c3:	(bad)  
   1400178c4:	std    
   1400178c5:	std    
   1400178c6:	(bad)  
   1400178c7:	(bad)  
   1400178c8:	(bad)  
   1400178c9:	(bad)  
   1400178ca:	(bad)  
   1400178cb:	(bad)  
   1400178cc:	(bad)  
   1400178cd:	(bad)  
   1400178ce:	(bad)  
   1400178cf:	(bad)  
   1400178d0:	(bad)  
   1400178d1:	(bad)  
   1400178d2:	(bad)  
   1400178d3:	(bad)  
   1400178d4:	out    dx,al
   1400178d5:	idiv   dh
   1400178d7:	dec    DWORD PTR [rdi+0x49fefac2]
   1400178dd:	pushf  
   1400178de:	clc    
   1400178df:	(bad)  
   1400178e0:	ds xchg esi,eax
   1400178e2:	idiv   edi
   1400178e4:	(bad)  
   1400178e5:	mov    ?,esi
   1400178e7:	jmp    FWORD PTR [rax]
   1400178e9:	mov    esi,esi
   1400178eb:	jmp    FWORD PTR [rdx]
   1400178ed:	mov    dh,dh
   1400178ef:	jmp    FWORD PTR [rdx]
   1400178f1:	mov    esi,esi
   1400178f3:	jmp    FWORD PTR [rdx]
   1400178f5:	mov    esi,esi
   1400178f7:	jmp    FWORD PTR [rdx]
   1400178f9:	mov    esi,esi
   1400178fb:	jmp    QWORD PTR [rdi]
   1400178fd:	xchg   esi,esi
   1400178ff:	jmp    QWORD PTR [rip+0x3dfff686]        # 0x17e016f8b
   140017905:	xchg   edx,eax
   140017906:	idiv   edi
   140017908:	push   0xffffffffffffffab
   14001790a:	clc    
   14001790b:	jmp    FWORD PTR [rcx-0x54]
   14001790e:	std    
   14001790f:	inc    edi
   140017911:	(bad)  
   140017912:	jmp    0xebbd4b12
   140017917:	icebp  
   140017918:	jmp    0x13eee32f2
   14001791d:	call   0x12a0062e5
   140017922:	(bad)
   140017925:	jrcxz  0x1400178ec
   140017927:	cmc    
   140017928:	loopne 0x1400178d9
   14001792a:	pop    rax
   14001792b:	(bad)  
   14001792c:	mov    edx,0xecf44894
   140017931:	(bad)  
   140017932:	mov    al,0xd2
   140017934:	(bad)  
   140017935:	iret   
   140017936:	sahf   
   140017937:	out    0xe8,al
   140017939:	mov    esi,0x8fbaff75
   14001793e:	cmp    dh,ah
   140017940:	(bad)  
   140017941:	shl    BYTE PTR [rax-0x5c2c1257],0xce
   140017948:	out    0xbe,al
   14001794a:	js     0x14001794b
   14001794c:	mov    ebp,0xcd2f8e
	...
   14001798d:	add    BYTE PTR [rax],al
   14001798f:	add    bh,bh
   140017991:	(bad)  
   140017992:	jmp    QWORD PTR [rcx]
   140017994:	in     al,0xb9
   140017996:	je     0x140017997
   140017998:	hlt    
   140017999:	rcl    BYTE PTR [rsi-0x4f1f0253],1
   14001799f:	mov    ebp,edi
   1400179a1:	loopne 0x140017954
   1400179a3:	mov    edi,esi
   1400179a5:	(bad)  [rcx+rdx*4-0xf606272]
   1400179ac:	and    cl,BYTE PTR [rdi-0x6ed30002]
   1400179b2:	idiv   edi
   1400179b4:	sub    al,0x91
   1400179b6:	idiv   edi
   1400179b8:	and    al,0x8d
   1400179ba:	idiv   edi
   1400179bc:	rex.WRX movabs rax,ds:0xfffffffbf8f9fff7
   1400179c6:	(bad)  
   1400179c7:	(bad)  
   1400179c8:	(bad)  
   1400179c9:	(bad)  
   1400179ca:	(bad)  
   1400179cb:	(bad)  
   1400179cc:	(bad)  
   1400179cd:	(bad)  
   1400179ce:	(bad)  
   1400179cf:	inc    edi
   1400179d1:	loope  0x1400179cf
   1400179d3:	jmp    QWORD PTR [rbx-0x55]
   1400179d6:	stc    
   1400179d7:	inc    BYTE PTR [rdx-0x66]
   1400179da:	idiv   edi
   1400179dc:	cmp    BYTE PTR [rdi+rsi*8-0x973d401],dl
   1400179e3:	jmp    FWORD PTR [rcx]
   1400179e5:	mov    esi,esi
   1400179e7:	jmp    FWORD PTR [rdx]
   1400179e9:	mov    esi,esi
   1400179eb:	jmp    FWORD PTR [rdx]
   1400179ed:	mov    esi,esi
   1400179ef:	jmp    FWORD PTR [rdx]
   1400179f1:	mov    esi,esi
   1400179f3:	jmp    FWORD PTR [rcx]
   1400179f5:	mov    dh,dh
   1400179f7:	jmp    QWORD PTR [rip+0x2efff687]        # 0x16f017084
   1400179fd:	mov    esi,?
   1400179ff:	call   QWORD PTR [rax+riz*4-0x8]
   140017a03:	push   QWORD PTR [rdx-0x4f]
   140017a06:	stc    
   140017a07:	call   FWORD PTR [rsi-0x5b]
   140017a0a:	clc    
   140017a0b:	dec    DWORD PTR [rdi-0x2300033e]
   140017a11:	int3   
   140017a12:	ret    0xd6f5
   140017a15:	ret    0xf0b1
   140017a18:	cli    
   140017a19:	in     eax,0xc2
   140017a1b:	(bad)  
   140017a1c:	std    
   140017a1d:	out    0xc0,al
   140017a1f:	call   0x127c46222
   140017a24:	mul    ebx
   140017a26:	(bad)  
   140017a27:	cmc    
   140017a28:	loopne 0x1400179d9
   140017a2a:	pop    rax
   140017a2b:	(bad)  
   140017a2c:	mov    edx,0xebf34794
   140017a31:	shr    DWORD PTR [rax+rdx*8-0x19623016],cl
   140017a38:	call   0xfb00effb
   140017a3d:	(bad)  
   140017a3e:	cmp    dh,ah
   140017a40:	(bad)  
   140017a41:	rcr    BYTE PTR [rdi-0x5c2c1257],0xce
   140017a48:	out    0xbe,al
   140017a4a:	js     0x140017a4b
   140017a4c:	mov    ebp,0xcd2f8e
	...
   140017a8d:	add    BYTE PTR [rax],al
   140017a8f:	add    bh,bh
   140017a91:	(bad)  
   140017a92:	jmp    QWORD PTR [rcx]
   140017a94:	jmp    0x13501055d
   140017a99:	rcl    BYTE PTR [rsi-0x52200153],1
   140017a9f:	xchg   ebp,edi
   140017aa1:	fisubr WORD PTR [rbp-0x4c1c0073]
   140017aa7:	test   esi,esp
   140017aa9:	ret    
   140017aaa:	mov    edi,DWORD PTR [rax+rdx*2+0x22ffc990]
   140017ab1:	xchg   edx,eax
   140017ab2:	(bad)  
   140017ab3:	jmp    FWORD PTR [rdx+rdx*4]
   140017ab6:	idiv   edi
   140017ab8:	sub    dl,BYTE PTR [rcx-0x6fd50009]
   140017abe:	idiv   edi
   140017ac0:	test   al,0xcf
   140017ac2:	clc    
   140017ac3:	push   rsi
   140017ac5:	clc    
   140017ac6:	sti    
   140017ac7:	jmp    rbx
   140017ac9:	lock (bad) 
   140017acb:	call   QWORD PTR [rdx+0x49fffac6]
   140017ad1:	lahf   
   140017ad2:	clc    
   140017ad3:	(bad)  
   140017ad4:	ds cdq 
   140017ad6:	idiv   edi
   140017ad8:	xor    DWORD PTR [rdx-0x72d60009],edx
   140017ade:	idiv   edi
   140017ae0:	sub    ecx,DWORD PTR [rsi-0x72d4000a]
   140017ae6:	idiv   bh
   140017ae8:	sub    ecx,DWORD PTR [rbp-0x74d70009]
   140017aee:	idiv   bh
   140017af0:	and    eax,0x2dfff689
   140017af5:	(bad)  
   140017af6:	idiv   bh
   140017af8:	rex.WX pushf 
   140017afa:	idiv   edi
   140017afc:	imul   ebp,DWORD PTR [rsi-0x4f900007],0xfffffff9
   140017b03:	call   FWORD PTR [rsi-0x5a]
   140017b06:	clc    
   140017b07:	jmp    QWORD PTR [rdi-0x52]
   140017b0a:	std    
   140017b0b:	call   rsp
   140017b0d:	fsub   st,st(0)
   140017b0f:	cli    
   140017b10:	sar    DWORD PTR [rbx-0x25110c53],1
   140017b16:	mov    esp,0xc0e7fdec
   140017b1b:	call   0x129c1621d
   140017b20:	(bad)  
   140017b21:	out    0xc4,eax
   140017b23:	jmp    0x140017b1c
   140017b25:	in     al,0xc5
   140017b27:	mul    al
   140017b29:	scas   eax,DWORD PTR es:[rdi]
   140017b2a:	pop    rax
   140017b2b:	(bad)  
   140017b2c:	mov    edx,0xebf24693
   140017b31:	shr    DWORD PTR [rdx-0x62301430],cl
   140017b37:	out    0xe9,al
   140017b39:	mov    esi,0x8fbaff75
   140017b3e:	cmp    esp,esi
   140017b40:	(bad)  
   140017b41:	mov    edi,0xd3eda99e
   140017b46:	movabs ds:0x2f8ebdff79bee6ce,al
   140017b4f:	int    0x0
	...
   140017b8d:	add    BYTE PTR [rax],al
   140017b8f:	add    bh,bh
   140017b91:	(bad)  
   140017b92:	jmp    QWORD PTR [rcx]
   140017b94:	out    dx,al
   140017b95:	shl    DWORD PTR [rsi-0x471f0601],cl
   140017b9b:	sar    esi,0xe2
   140017b9e:	mov    dh,0x94
   140017ba0:	std    
   140017ba1:	fild   QWORD PTR [rsp+rcx*4-0x7a502003]
   140017ba8:	cld    
   140017ba9:	(bad)  
   140017baa:	pushf  
   140017bab:	test   eax,0xfd7fa7bc
   140017bb0:	xor    eax,0x26ffe690
   140017bb5:	xchg   ebx,eax
   140017bb6:	(bad)  
   140017bb7:	jmp    FWORD PTR [rip+0x2afff793]        # 0x16b017350
   140017bbd:	xchg   edx,eax
   140017bbe:	idiv   edi
   140017bc0:	sub    dl,BYTE PTR [rcx-0x60b80009]
   140017bc6:	idiv   bh
   140017bc8:	rex pushf 
   140017bca:	idiv   edi
   140017bcc:	xor    DWORD PTR [rdi+rsi*8-0x86bcd01],edx
   140017bd3:	jmp    FWORD PTR [rbx]
   140017bd5:	nop
   140017bd6:	idiv   edi
   140017bd8:	sub    cl,BYTE PTR [rdi-0x70d50009]
   140017bde:	idiv   edi
   140017be0:	sub    BYTE PTR [rsi-0x73d90009],cl
   140017be6:	idiv   edi
   140017be8:	sub    BYTE PTR [rbp-0x6bca000a],cl
   140017bee:	idiv   edi
   140017bf0:	rex.WRXB movabs rax,ds:0xb271fff9af6afff8
   140017bfa:	cli    
   140017bfb:	jmp    QWORD PTR [rbp-0x54]
   140017bfe:	clc    
   140017bff:	call   FWORD PTR [rbp-0x59]
   140017c02:	clc    
   140017c03:	call   FWORD PTR [rdx-0x59]
   140017c06:	cld    
   140017c07:	(bad)  
   140017c08:	mov    ebp,0xd6fdeed4
   140017c0d:	shl    DWORD PTR [rbp+rsi*8-0x114a311e],0xfd
   140017c15:	out    0xc1,al
   140017c17:	(bad)  
   140017c18:	std    
   140017c19:	out    0xc1,al
   140017c1b:	in     al,dx
   140017c1c:	std    
   140017c1d:	out    0xc0,al
   140017c1f:	in     eax,dx
   140017c20:	jmp    rdi
   140017c22:	ret    0xf7ea
   140017c25:	in     al,0xc4
   140017c27:	mul    al
   140017c29:	scas   eax,DWORD PTR es:[rdi]
   140017c2a:	pop    rax
   140017c2b:	(bad)  
   140017c2c:	mov    ecx,0xecf24693
   140017c31:	shr    DWORD PTR [rcx-0x63301430],cl
   140017c37:	out    0xe8,al
   140017c39:	mov    esi,0x8fbaff75
   140017c3e:	cmp    esp,esi
   140017c40:	(bad)  
   140017c41:	mov    edi,0xd3eda99d
   140017c46:	movabs ds:0x2f8ebdff79bee6ce,al
   140017c4f:	int    0x0
	...
   140017c8d:	add    BYTE PTR [rax],al
   140017c8f:	add    bh,bh
   140017c91:	(bad)  
   140017c92:	jmp    QWORD PTR [rcx]
   140017c94:	in     al,dx
   140017c95:	int    0x99
   140017c97:	(bad)  
   140017c98:	clc    
   140017c99:	jrcxz  0x140017c5b
   140017c9b:	(bad)  
   140017c9c:	(bad)  
   140017c9d:	out    dx,eax
   140017c9e:	(bad)  
   140017c9f:	mov    cl,0xfe
   140017ca1:	(bad)  
   140017ca2:	retf   0xfeab
   140017ca5:	out    0xbe,al
   140017ca7:	cdq    
   140017ca8:	clc    
   140017ca9:	xlat   BYTE PTR ds:[rbx]
   140017caa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017cab:	scas   eax,DWORD PTR es:[rdi]
   140017cac:	hlt    
   140017cad:	mov    DWORD PTR [rdx-0x755e5a04],0xed8f2cfd
   140017cb7:	jmp    QWORD PTR [rdx+rdx*4]
   140017cba:	cld    
   140017cbb:	jmp    FWORD PTR [rdx]
   140017cbd:	xchg   edx,eax
   140017cbe:	idiv   edi
   140017cc0:	sub    BYTE PTR [rcx-0x70dc0009],dl
   140017cc6:	idiv   edi
   140017cc8:	and    eax,0x27fff78f
   140017ccd:	nop
   140017cce:	idiv   edi
   140017cd0:	es (bad) 
   140017cd2:	idiv   edi
   140017cd4:	(bad)  
   140017cd5:	(bad)  
   140017cd6:	idiv   edi
   140017cd8:	sub    DWORD PTR [rax-0x6dd10009],edx
   140017cde:	idiv   edi
   140017ce0:	cmp    DWORD PTR [rax-0x5eb40008],ebx
   140017ce6:	clc    
   140017ce7:	jmp    QWORD PTR [rax-0x55]
   140017cea:	stc    
   140017ceb:	jmp    FWORD PTR [rdi-0x4d]
   140017cee:	cli    
   140017cef:	jmp    FWORD PTR [rdi-0x4d]
   140017cf2:	cli    
   140017cf3:	jmp    QWORD PTR [rbp-0x52]
   140017cf6:	stc    
   140017cf7:	call   FWORD PTR [rdi-0x56]
   140017cfa:	clc    
   140017cfb:	call   FWORD PTR [rbp-0x57]
   140017cfe:	stc    
   140017cff:	call   QWORD PTR [rdi-0x59]
   140017d02:	cld    
   140017d03:	jmp    FWORD PTR [rbx-0x25010d33]
   140017d09:	(bad)  
   140017d0a:	mov    esp,0xb2c7dcf7
   140017d0f:	icebp  
   140017d10:	sti    
   140017d11:	out    0xc0,al
   140017d13:	in     eax,dx
   140017d14:	(bad)  
   140017d15:	out    0xc1,al
   140017d17:	in     al,dx
   140017d18:	std    
   140017d19:	out    0xbf,al
   140017d1b:	jmp    0x140017d1b
   140017d1d:	out    0xbd,al
   140017d1f:	jmp    0x140017d20
   140017d21:	out    0xc1,eax
   140017d23:	jmp    0x136c6621f
   140017d28:	loopne 0x140017cd9
   140017d2a:	pop    rax
   140017d2b:	(bad)  
   140017d2c:	mov    edx,0xedf24693
   140017d31:	shr    DWORD PTR [rcx-0x63301430],cl
   140017d37:	out    0xe8,al
   140017d39:	mov    esi,0x8fbaff75
   140017d3e:	cmp    esp,esi
   140017d40:	(bad)  
   140017d41:	mov    edi,0xd3eda99d
   140017d46:	movabs ds:0x308fbdff79bee6ce,al
   140017d4f:	(bad)  
	...
   140017d90:	(bad)  
   140017d91:	(bad)  
   140017d92:	jmp    QWORD PTR [rcx]
   140017d94:	in     al,dx
   140017d95:	int3   
   140017d96:	cwde   
   140017d97:	(bad)  
   140017d98:	clc    
   140017d99:	loopne 0x140017d52
   140017d9b:	sar    edi,0xeb
   140017d9e:	int3   
   140017d9f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017da0:	(bad)  
   140017da1:	in     al,dx
   140017da2:	iret   
   140017da3:	scas   al,BYTE PTR es:[rdi]
   140017da4:	(bad)  
   140017da5:	out    dx,eax
   140017da6:	(bad)  
   140017da7:	mov    al,0xf9
   140017da9:	out    0xc5,al
   140017dab:	(bad)  
   140017dac:	neg    cl
   140017dae:	stos   DWORD PTR es:[rdi],eax
   140017daf:	(bad)  
   140017db0:	stc    
   140017db1:	fldenv [rbp-0x554e5413]
   140017db7:	test   BYTE PTR [rsi-0x62],0xef
   140017dbb:	(bad)  
   140017dbc:	cmp    DWORD PTR [rsi-0x62c20002],ebx
   140017dc2:	clc    
   140017dc3:	(bad)  
   140017dc4:	cmp    eax,0x3efff89d
   140017dc9:	popf   
   140017dca:	clc    
   140017dcb:	inc    DWORD PTR [rbx-0x61]
   140017dce:	clc    
   140017dcf:	dec    DWORD PTR [rdx-0x5e]
   140017dd2:	clc    
   140017dd3:	call   QWORD PTR [rbx-0x59]
   140017dd6:	stc    
   140017dd7:	call   FWORD PTR [rdi-0x53]
   140017dda:	stc    
   140017ddb:	jmp    FWORD PTR [rcx-0x4e]
   140017dde:	cli    
   140017ddf:	push   QWORD PTR [rax-0x4b]
   140017de2:	cli    
   140017de3:	push   QWORD PTR [rax-0x4b]
   140017de6:	cli    
   140017de7:	jmp    FWORD PTR [rcx-0x4f]
   140017dea:	stc    
   140017deb:	jmp    QWORD PTR [rdx-0x53]
   140017dee:	stc    
   140017def:	call   FWORD PTR [rdi-0x55]
   140017df2:	stc    
   140017df3:	call   FWORD PTR [rdi-0x55]
   140017df6:	stc    
   140017df7:	call   FWORD PTR [rbx-0x57]
   140017dfa:	cli    
   140017dfb:	call   FWORD PTR [rdx-0x55]
   140017dfe:	cld    
   140017dff:	jmp    FWORD PTR [rax-0x24011135]
   140017e05:	leave  
   140017e06:	mov    esp,0xb2c7ddf7
   140017e0b:	icebp  
   140017e0c:	sti    
   140017e0d:	in     eax,0xc0
   140017e0f:	jmp    0x140017e0f
   140017e11:	out    0xc0,al
   140017e13:	jmp    0x140017e12
   140017e15:	out    0xbf,al
   140017e17:	jmp    0x140017e17
   140017e19:	out    0xbd,al
   140017e1b:	jmp    0x140017e1b
   140017e1d:	out    0xbd,al
   140017e1f:	jmp    0x140017e20
   140017e21:	out    0xc0,eax
   140017e23:	jmp    0x136c6621f
   140017e28:	loopne 0x140017dd9
   140017e2a:	pop    rax
   140017e2b:	(bad)  
   140017e2c:	mov    edx,0xedf24593
   140017e31:	shl    BYTE PTR [rdi-0x63301430],cl
   140017e37:	out    0xe9,al
   140017e39:	mov    esi,0x8fbaff75
   140017e3e:	cmp    esp,esi
   140017e40:	(bad)  
   140017e41:	mov    edi,0xd3eda99d
   140017e46:	movabs eax,ds:0x308fbdff79bee6ce
   140017e4f:	(bad)  
	...
   140017e90:	(bad)  
   140017e91:	(bad)  
   140017e92:	jmp    QWORD PTR [rcx]
   140017e94:	in     al,dx
   140017e95:	int3   
   140017e96:	cwde   
   140017e97:	push   rdi
   140017e99:	fnsave [rbp-0x3a190439]
   140017e9f:	scas   al,BYTE PTR es:[rdi]
   140017ea0:	sti    
   140017ea1:	in     eax,0xc4
   140017ea3:	mov    al,0xfb
   140017ea5:	out    0xc5,al
   140017ea7:	lods   eax,DWORD PTR ds:[rsi]
   140017ea8:	clc    
   140017ea9:	loopne 0x140017e66
   140017eab:	(bad)
   140017eae:	test   eax,0xbce4fcff
   140017eb3:	jmp    0x140017eb4
   140017eb5:	jmp    0x10ad7577c
   140017eba:	mov    bl,0xf1
   140017ebc:	test   DWORD PTR [rbp-0x48960021],esi
   140017ec2:	(bad)  
   140017ec3:	jmp    FWORD PTR [rbp-0x48]
   140017ec6:	std    
   140017ec7:	push   QWORD PTR [rcx-0x49]
   140017eca:	cli    
   140017ecb:	push   QWORD PTR [rcx-0x49]
   140017ece:	cli    
   140017ecf:	push   QWORD PTR [rax-0x4a]
   140017ed2:	cli    
   140017ed3:	jmp    FWORD PTR [rsi-0x4b]
   140017ed6:	cli    
   140017ed7:	jmp    FWORD PTR [rdx-0x4d]
   140017eda:	cli    
   140017edb:	jmp    QWORD PTR [rbp-0x50]
   140017ede:	stc    
   140017edf:	jmp    QWORD PTR [rcx-0x52]
   140017ee2:	stc    
   140017ee3:	call   FWORD PTR [rdi-0x53]
   140017ee6:	stc    
   140017ee7:	call   FWORD PTR [rdi-0x53]
   140017eea:	stc    
   140017eeb:	jmp    QWORD PTR [rax-0x53]
   140017eee:	stc    
   140017eef:	call   FWORD PTR [rsi-0x55]
   140017ef2:	stc    
   140017ef3:	call   QWORD PTR [rdi-0x57]
   140017ef6:	cld    
   140017ef7:	jmp    FWORD PTR [rcx-0x4f]
   140017efa:	sti    
   140017efb:	(bad)  
   140017efc:	mov    eax,0xdefde1cc
   140017f01:	enter  0xf5b9,0xe3
   140017f05:	int    0xb3
   140017f07:	out    dx,eax
   140017f08:	cld    
   140017f09:	in     eax,0xbf
   140017f0b:	jmp    0x140017f0b
   140017f0d:	out    0xbf,al
   140017f0f:	jmp    0x140017f0e
   140017f11:	out    0xbe,al
   140017f13:	jmp    0x140017f13
   140017f15:	out    0xbd,al
   140017f17:	jmp    0x140017f17
   140017f19:	out    0xbd,al
   140017f1b:	jmp    0x140017f1b
   140017f1d:	in     eax,0xbc
   140017f1f:	jmp    0x140017f20
   140017f21:	out    0xbf,al
   140017f23:	jmp    0x136c6631f
   140017f28:	loopne 0x140017ed9
   140017f2a:	pop    rax
   140017f2b:	(bad)  
   140017f2c:	mov    edx,0xedf24593
   140017f31:	shl    BYTE PTR [rdi-0x63301430],cl
   140017f37:	out    0xe9,al
   140017f39:	mov    esi,0x8fbaff75
   140017f3e:	cmp    esp,esi
   140017f40:	(bad)  
   140017f41:	mov    edi,0xd3eda99b
   140017f46:	movabs eax,ds:0x2f8fbdff79bee6ce
   140017f4f:	(bad)  
	...
   140017f90:	(bad)  
   140017f91:	(bad)  
   140017f92:	jmp    QWORD PTR [rbx]
   140017f94:	in     al,dx
   140017f95:	int3   
   140017f96:	xchg   edi,eax
   140017f97:	(bad)  
   140017f98:	clc    
   140017f99:	fnsave [rdi+rax*8-0x513b1a05]
   140017fa0:	cli    
   140017fa1:	in     eax,0xc2
   140017fa3:	mov    cl,0xfb
   140017fa5:	out    0xc5,al
   140017fa7:	scas   al,BYTE PTR es:[rdi]
   140017fa8:	clc    
   140017fa9:	fidivr WORD PTR [rax-0x5b2a0c3b]
   140017faf:	(bad)  
   140017fb0:	stc    
   140017fb1:	fbstp  TBYTE PTR [rbx-0x40190115]
   140017fb7:	(bad)  
   140017fb8:	jmp    rdi
   140017fba:	mov    esi,0xadd1e7d5
   140017fbf:	in     eax,0xa1
   140017fc1:	mov    dh,0xc0
   140017fc3:	cld    
   140017fc4:	push   0xffffffffffffffaf
   140017fc6:	in     al,dx
   140017fc7:	call   FWORD PTR [rcx-0x51]
   140017fca:	(bad)  
   140017fcb:	call   FWORD PTR [rdx-0x50]
   140017fce:	(bad)  
   140017fcf:	call   FWORD PTR [rsi-0x51]
   140017fd2:	sti    
   140017fd3:	call   FWORD PTR [rdi-0x51]
   140017fd6:	sti    
   140017fd7:	jmp    QWORD PTR [rax-0x51]
   140017fda:	cli    
   140017fdb:	jmp    QWORD PTR [rax-0x52]
   140017fde:	stc    
   140017fdf:	jmp    QWORD PTR [rax-0x52]
   140017fe2:	cli    
   140017fe3:	call   FWORD PTR [rdi-0x52]
   140017fe6:	cli    
   140017fe7:	call   FWORD PTR [rbx-0x53]
   140017fea:	sti    
   140017feb:	call   FWORD PTR [rax-0x54]
   140017fee:	std    
   140017fef:	jmp    QWORD PTR [rcx-0x51]
   140017ff2:	cli    
   140017ff3:	call   QWORD PTR [rax-0x2f001542]
   140017ff9:	int    0xca
   140017ffb:	cli    
   140017ffc:	in     al,0xcc
   140017ffe:	mov    bl,0xf2
   140018000:	out    dx,al
   140018001:	fdiv   DWORD PTR [rdi-0x40190113]
   140018007:	jmp    0x140018007
   140018009:	out    0xbe,al
   14001800b:	jmp    0x14001800b
   14001800d:	out    0xbd,al
   14001800f:	jmp    0x14001800f
   140018011:	out    0xbd,al
   140018013:	jmp    0x140018013
   140018015:	out    0xbd,al
   140018017:	jmp    0x140018017
   140018019:	in     eax,0xbc
   14001801b:	jmp    0x14001801b
   14001801d:	in     al,0xba
   14001801f:	jmp    0x140018020
   140018021:	out    0xbe,al
   140018023:	jmp    0x136c6641f
   140018028:	loopne 0x140017fd9
   14001802a:	pop    rax
   14001802b:	(bad)  
   14001802c:	mov    edx,0xedf24593
   140018031:	shl    BYTE PTR [rsi-0x63301430],cl
   140018037:	out    0xe9,al
   140018039:	mov    esi,0x8fbaff75
   14001803e:	cmp    esp,esi
   140018040:	(bad)  
   140018041:	mov    edi,0xd3eda99b
   140018046:	movabs eax,ds:0x308fbdff79bee6ce
   14001804f:	(bad)  
	...
   140018090:	(bad)  
   140018091:	(bad)  
   140018092:	jmp    QWORD PTR [rbx+rbp*8]
   140018095:	int3   
   140018096:	xchg   edi,eax
   140018097:	push   rdi
   140018099:	fnsave [rdi+rax*8-0x513c1a05]
   1400180a0:	sti    
   1400180a1:	in     al,0xc2
   1400180a3:	mov    cl,0xfa
   1400180a5:	in     eax,0xc4
   1400180a7:	scas   al,BYTE PTR es:[rdi]
   1400180a8:	clc    
   1400180a9:	fidiv  WORD PTR [rdi-0x5b2a0c3b]
   1400180af:	(bad)  
   1400180b0:	stc    
   1400180b1:	fbstp  TBYTE PTR [rbx-0x421a0215]
   1400180b7:	(bad)  
   1400180b8:	std    
   1400180b9:	in     eax,0xbe
   1400180bb:	fdivr  st,st(6)
   1400180bd:	call   0x11efe5483
   1400180c2:	scas   eax,DWORD PTR es:[rdi]
   1400180c3:	jmp    0x13fa84ba5
   1400180c8:	stos   DWORD PTR es:[rdi],eax
   1400180c9:	mov    ebx,0xb380fdc0
   1400180ce:	fdiv   st(7),st
   1400180d0:	imul   esi,DWORD PTR [rax-0x50a00011],0xae5bfff8
   1400180da:	sti    
   1400180db:	call   FWORD PTR [rbx-0x52]
   1400180de:	cld    
   1400180df:	call   FWORD PTR [rsi+rbp*4-0x6]
   1400180e3:	jmp    QWORD PTR [rdi+rbp*4-0xa]
   1400180e7:	push   QWORD PTR [rsi-0x4c]
   1400180ea:	in     eax,dx
   1400180eb:	call   FWORD PTR [rdx-0x35012243]
   1400180f1:	retf   0xfac7
   1400180f4:	jmp    0x130f538cb
   1400180f9:	xlat   BYTE PTR ds:[rbx]
   1400180fa:	mov    ch,0xed
   1400180fc:	sti    
   1400180fd:	jrcxz  0x1400180bb
   1400180ff:	jmp    0x140018100
   140018101:	out    0xbe,al
   140018103:	jmp    0x140018103
   140018105:	out    0xbd,al
   140018107:	jmp    0x140018107
   140018109:	in     eax,0xbd
   14001810b:	jmp    0x14001810b
   14001810d:	in     eax,0xbd
   14001810f:	jmp    0x14001810f
   140018111:	in     eax,0xbc
   140018113:	jmp    0x140018113
   140018115:	in     al,0xbb
   140018117:	jmp    0x140018117
   140018119:	in     al,0xba
   14001811b:	jmp    0x14001811b
   14001811d:	in     al,0xba
   14001811f:	jmp    0x140018120
   140018121:	out    0xbd,al
   140018123:	jmp    0x136c76620
   140018128:	loopne 0x1400180d8
   14001812a:	push   rsi
   14001812b:	(bad)  
   14001812c:	mov    ebx,0xedf34694
   140018131:	shl    BYTE PTR [rsi-0x64301430],cl
   140018137:	out    0xec,al
   140018139:	mov    DWORD PTR [rdi+0x4293bcff],0x9bbfd6f5
   140018143:	test   eax,0xcea2d3ed
   140018148:	jmp    0x100010812
   14001814d:	xchg   ebx,eax
   14001814e:	cmp    edi,ecx
	...
   140018190:	(bad)  
   140018191:	(bad)  
   140018192:	jmp    QWORD PTR [rbx+rbp*8]
   140018195:	int3   
   140018196:	xchg   edi,eax
   140018197:	push   rdi
   140018199:	fnsave [rbx-0x3c1a0439]
   14001819f:	scas   al,BYTE PTR es:[rdi]
   1400181a0:	sti    
   1400181a1:	in     al,0xc0
   1400181a3:	mov    cl,0xfb
   1400181a5:	in     eax,0xc4
   1400181a7:	scas   al,BYTE PTR es:[rdi]
   1400181a8:	clc    
   1400181a9:	fidivr WORD PTR [rax-0x5b2a0c3b]
   1400181af:	(bad)  
   1400181b0:	cli    
   1400181b1:	fbstp  TBYTE PTR [rdx-0x421b0215]
   1400181b7:	(bad)  
   1400181b8:	std    
   1400181b9:	in     al,0xbd
   1400181bb:	fdivr  st,st(5)
   1400181bd:	in     al,0xbe
   1400181bf:	(bad)  
   1400181c0:	cld    
   1400181c1:	loope  0x140018179
   1400181c3:	jmp    0x13fa95ec4
   1400181c8:	jmp    rdx
   1400181ca:	mov    ah,0xef
   1400181cc:	clc    
   1400181cd:	(bad)  [rcx-0x4c2d1b13]
   1400181d3:	repz ror bl,cl
   1400181d6:	mov    ebx,0xc1c8c5f6
   1400181db:	stc    
   1400181dc:	(bad)
   1400181df:	stc    
   1400181e0:	retf   
   1400181e1:	int3   
   1400181e2:	ret    
   1400181e3:	clc    
   1400181e4:	fst    st(3)
   1400181e6:	shl    ch,0xee
   1400181e9:	fnstcw WORD PTR [rdx-0x4822060f]
   1400181ef:	out    dx,al
   1400181f0:	sti    
   1400181f1:	loopne 0x1400181ac
   1400181f3:	jmp    0x1400181f2
   1400181f5:	in     al,0xbc
   1400181f7:	(bad)  
   1400181f8:	jmp    rsi
   1400181fa:	mov    esi,0xbde6ffea
   1400181ff:	jmp    0x1400181ff
   140018201:	in     eax,0xbc
   140018203:	jmp    0x140018203
   140018205:	in     eax,0xbc
   140018207:	jmp    0x140018207
   140018209:	in     al,0xbb
   14001820b:	jmp    0x14001820b
   14001820d:	in     al,0xbb
   14001820f:	jmp    0x14001820f
   140018211:	in     al,0xba
   140018213:	jmp    0x140018213
   140018215:	in     al,0xba
   140018217:	jmp    0x140018217
   140018219:	in     al,0xba
   14001821b:	jmp    0x14001821b
   14001821d:	in     al,0xb9
   14001821f:	jmp    0x140018220
   140018221:	in     eax,0xbb
   140018223:	jmp    0x136cd6b21
   140018228:	loope  0x1400181da
   14001822a:	pop    rcx
   14001822b:	(bad)  
   14001822c:	mov    esp,0xeef34b96
   140018231:	shl    DWORD PTR [rax+rdx*8-0x19633015],1
   140018238:	lock shl DWORD PTR [rcx+0x4d99bfff],cl
   14001823f:	cmc    
   140018240:	(bad)  
   140018241:	mov    edi,0xd4eda89a
   140018246:	movabs ds:0x4599c1ff9aceecce,eax
   14001824f:	rol    BYTE PTR [rax],cl
	...
   14001828d:	add    BYTE PTR [rax],al
   14001828f:	add    bh,bh
   140018291:	(bad)  
   140018292:	jmp    QWORD PTR [rdx]
   140018294:	jmp    0x140018263
   140018296:	cwde   
   140018297:	push   rdi
   140018299:	fnsave [rdi+rax*8-0x513c1b05]
   1400182a0:	sti    
   1400182a1:	in     al,0xc0
   1400182a3:	mov    cl,0xfb
   1400182a5:	in     eax,0xc3
   1400182a7:	scas   al,BYTE PTR es:[rdi]
   1400182a8:	stc    
   1400182a9:	loopne 0x140018264
   1400182ab:	shl    ebx,0xd3
   1400182ae:	movabs ds:0xbde5feeeb0def9ff,al
   1400182b7:	(bad)  
   1400182b8:	(bad)  
   1400182b9:	in     eax,0xbd
   1400182bb:	xlat   BYTE PTR ds:[rbx]
   1400182bc:	(bad)  
   1400182bd:	in     eax,0xbd
   1400182bf:	(bad)  
   1400182c0:	std    
   1400182c1:	loop   0x14001827b
   1400182c3:	loope  0x1400182bd
   1400182c5:	fisubr DWORD PTR [rcx-0x491e0203]
   1400182cb:	hlt    
   1400182cc:	jmp    rbp
   1400182ce:	mov    esp,0xbce6ffec
   1400182d3:	in     al,dx
   1400182d4:	jmp    rsi
   1400182d6:	mov    ecx,0xb9e6ffeb
   1400182db:	jmp    0x1400182dc
   1400182dd:	out    0xb8,al
   1400182df:	jmp    0x1400182e0
   1400182e1:	out    0xb9,al
   1400182e3:	jmp    0x1400182e4
   1400182e5:	out    0xbb,al
   1400182e7:	(bad)  
   1400182e8:	jmp    rsi
   1400182ea:	mov    esp,0xbde6ffeb
   1400182ef:	jmp    0x1400182f0
   1400182f1:	out    0xbd,al
   1400182f3:	jmp    0x1400182f4
   1400182f5:	in     eax,0xbc
   1400182f7:	in     al,dx
   1400182f8:	(bad)  
   1400182f9:	in     eax,0xbc
   1400182fb:	jmp    0x1400182fb
   1400182fd:	in     al,0xbc
   1400182ff:	jmp    0x1400182ff
   140018301:	in     al,0xbb
   140018303:	jmp    0x140018303
   140018305:	in     al,0xbb
   140018307:	jmp    0x140018307
   140018309:	in     al,0xba
   14001830b:	jmp    0x14001830b
   14001830d:	in     al,0xba
   14001830f:	jmp    0x14001830f
   140018311:	in     al,0xba
   140018313:	jmp    0x140018313
   140018315:	in     al,0xba
   140018317:	jmp    0x140018318
   140018319:	in     al,0xb9
   14001831b:	jmp    0x14001831c
   14001831d:	in     al,0xb9
   14001831f:	jmp    0x140018320
   140018321:	in     eax,0xba
   140018323:	jmp    0x136d36e23
   140018328:	in     al,0xba
   14001832a:	outs   dx,BYTE PTR ds:[rsi]
   14001832b:	(bad)  
   14001832c:	mov    ebp,0xeef34f98
   140018331:	shl    BYTE PTR [rbx-0x632f1431],1
   140018337:	out    0xf6,al
   140018339:	loopne 0x1400182f8
   14001833b:	inc    ecx
   14001833d:	lahf   
   14001833e:	pop    rcx
   14001833f:	cmc    
   140018340:	sar    DWORD PTR [rax-0x2c13616f],cl
   140018346:	movabs eax,ds:0x4d9dc3ffaed7f0c6
   14001834f:	rol    DWORD PTR [rax],cl
	...
   14001838d:	add    BYTE PTR [rax],al
   14001838f:	add    bh,bh
   140018391:	(bad)  
   140018392:	inc    DWORD PTR [rdx+rbp*8]
   140018395:	enter  0xff91,0xf5
   140018399:	fisubr DWORD PTR [rdi-0x30140628]
   14001839f:	ret    0xf1fc
   1400183a2:	(bad)  
   1400183a4:	sti    
   1400183a5:	out    dx,eax
   1400183a6:	fcmovne st,st(5)
   1400183a8:	cld    
   1400183a9:	out    dx,eax
   1400183aa:	fcmove st,st(5)
   1400183ac:	cli    
   1400183ad:	jmp    0x125fb6b7e
   1400183b2:	(bad)  
   1400183b3:	idiv   bl
   1400183b5:	call   0x128fd7086
   1400183ba:	int    0xe9
   1400183bc:	sti    
   1400183bd:	jmp    0x129ff6d8e
   1400183c2:	retf   0xfae7
   1400183c5:	in     eax,0xc5
   1400183c7:	lock cli 
   1400183c9:	in     eax,0xc5
   1400183cb:	hlt    
   1400183cc:	cli    
   1400183cd:	in     eax,0xc5
   1400183cf:	repz cli 
   1400183d1:	in     eax,0xc5
   1400183d3:	hlt    
   1400183d4:	cli    
   1400183d5:	in     al,0xc3
   1400183d7:	repnz cli 
   1400183d9:	in     al,0xc2
   1400183db:	hlt    
   1400183dc:	sti    
   1400183dd:	jrcxz  0x14001839f
   1400183df:	repz cli 
   1400183e1:	loop   0x1400183a3
   1400183e3:	repz cli 
   1400183e5:	jrcxz  0x1400183a7
   1400183e7:	hlt    
   1400183e8:	cli    
   1400183e9:	jrcxz  0x1400183ab
   1400183eb:	repz cli 
   1400183ed:	jrcxz  0x1400183af
   1400183ef:	cmc    
   1400183f0:	cli    
   1400183f1:	loop   0x1400183b1
   1400183f3:	repz cli 
   1400183f5:	jrcxz  0x1400183b5
   1400183f7:	repz cli 
   1400183f9:	loop   0x1400183b7
   1400183fb:	repz cli 
   1400183fd:	loope  0x1400183ba
   1400183ff:	repz cli 
   140018401:	loope  0x1400183be
   140018403:	hlt    
   140018404:	cli    
   140018405:	loop   0x1400183c2
   140018407:	repz sti 
   140018409:	loop   0x1400183c6
   14001840b:	hlt    
   14001840c:	cld    
   14001840d:	loope  0x1400183c8
   14001840f:	cmc    
   140018410:	cld    
   140018411:	loope  0x1400183cc
   140018413:	repz cld 
   140018415:	loop   0x1400183d1
   140018417:	hlt    
   140018418:	cld    
   140018419:	loope  0x1400183d2
   14001841b:	repnz std 
   14001841d:	loop   0x1400183d7
   14001841f:	repnz std 
   140018421:	loopne 0x1400183d7
   140018423:	icebp  
   140018424:	stc    
   140018425:	in     eax,0xc6
   140018427:	clc    
   140018428:	call   0x1000109f1
   14001842d:	pushf  
   14001842e:	push   rbp
   14001842f:	clc    
   140018430:	in     eax,dx
   140018431:	iret   
   140018432:	movabs eax,ds:0xaed8f1efa7d5eeda
   14001843b:	inc    ebp
   14001843d:	movabs eax,ds:0xdbf6b39cc4defc57
   140018446:	scas   eax,DWORD PTR es:[rdi]
   140018447:	(bad)  
   140018448:	call   0x134010b12
   14001844d:	loopne 0x14001840e
   14001844f:	outs   dx,DWORD PTR ds:[rsi]
	...
   140018494:	(bad)  
   140018495:	stos   DWORD PTR es:[rdi],eax
   140018496:	push   0x73b3dc6b
   14001849b:	in     al,dx
   14001849c:	(bad)  
   14001849d:	scas   eax,DWORD PTR es:[rdi]
   14001849e:	outs   dx,DWORD PTR ds:[rsi]
   14001849f:	loop   0x140018478
   1400184a1:	mov    cl,0x74
   1400184a3:	loopne 0x140018480
   1400184a5:	mov    dh,0x7c
   1400184a7:	loop   0x140018485
   1400184a9:	mov    eax,0xb8dce27e
   1400184ae:	jg     0x140018492
   1400184b0:	(bad)  [rsi-0x49241282]
   1400184b6:	jle    0x1400184a7
   1400184b8:	fidivr WORD PTR [rdx-0x4020107d]
   1400184be:	mov    ebx,esi
   1400184c0:	loop   0x140018484
   1400184c2:	(bad)  
   1400184c3:	hlt    
   1400184c4:	jrcxz  0x14001848a
   1400184c6:	xchg   edx,eax
   1400184c7:	repz in al,0xc4
   1400184ca:	xchg   ebp,eax
   1400184cb:	repz in al,0xc5
   1400184ce:	xchg   ebp,eax
   1400184cf:	hlt    
   1400184d0:	in     eax,0xc8
   1400184d2:	cdq    
   1400184d3:	repz out 0xcb,al
   1400184d6:	popf   
   1400184d7:	hlt    
   1400184d8:	out    0xcc,eax
   1400184da:	movabs al,ds:0xacd4edf3aad2ecf6
   1400184e3:	repz in eax,dx
   1400184e5:	(bad)  
   1400184e6:	lods   eax,DWORD PTR ds:[rsi]
   1400184e7:	hlt    
   1400184e8:	out    dx,al
   1400184e9:	(bad)  
   1400184ea:	mov    cl,0xf3
   1400184ec:	out    dx,al
   1400184ed:	(bad)  
   1400184ee:	mov    al,0xf7
   1400184f0:	lock fdiv DWORD PTR [rbp-0x48250f0a]
   1400184f7:	hlt    
   1400184f8:	repnz fdivr QWORD PTR [rcx-0x3e200a09]
   1400184ff:	cmc    
   140018500:	cmc    
   140018501:	loope  0x1400184c5
   140018503:	hlt    
   140018504:	cmc    
   140018505:	loop   0x1400184ca
   140018507:	cmc    
   140018508:	mul    bl
   14001850a:	(bad)  
   14001850b:	hlt    
   14001850c:	clc    
   14001850d:	in     al,0xc9
   14001850f:	hlt    
   140018510:	clc    
   140018511:	in     eax,0xcb
   140018513:	hlt    
   140018514:	clc    
   140018515:	out    0xcb,al
   140018517:	cmc    
   140018518:	clc    
   140018519:	call   0x12bfc7aec
   14001851e:	shl    esp,1
   140018520:	cli    
   140018521:	call   0x11df57bf2
   140018526:	mov    ecx,0x9aceebff
   14001852b:	inc    ecx
   14001852d:	test   eax,0xbedbd582
   140018532:	xchg   ecx,eax
   140018533:	iret   
   140018534:	in     eax,dx
   140018535:	retf   
   140018536:	xchg   ecx,eax
   140018537:	loope  0x140018526
   140018539:	(bad)  
   14001853c:	movabs eax,ds:0xec535989a6736b8c
   140018545:	ret    
   140018546:	jp     0x1400185a1
   140018548:	(bad)  
   140018549:	leave  
   14001854a:	mov    cs,WORD PTR [rax-0x7]
   14001854d:	repnz loop 0x140018553
	...
   140018598:	iret   
   140018599:	movabs ds:0x9cc829569eca195b,eax
   1400185a2:	push   rbx
   1400185a3:	sub    ecx,ecx
   1400185a5:	popf   
   1400185a6:	push   rsp
   1400185a7:	xor    al,0xc9
   1400185a9:	sahf   
   1400185aa:	push   rsp
   1400185ab:	cmp    cl,cl
   1400185ad:	sahf   
   1400185ae:	push   rbp
   1400185af:	(bad)  
   1400185b0:	retf   0x569f
   1400185b3:	(bad)  
   1400185b4:	retf   0x579f
   1400185b7:	rex retf 0x579f
   1400185bb:	rex.X enter 0x559d,0x51
   1400185c0:	enter  0x559d,0x54
   1400185c4:	leave  
   1400185c5:	popf   
   1400185c6:	push   rsi
   1400185c7:	push   rsi
   1400185c8:	leave  
   1400185c9:	sahf   
   1400185ca:	push   rsi
   1400185cb:	(bad)  
   1400185cc:	leave  
   1400185cd:	lahf   
   1400185ce:	push   rdi
   1400185cf:	(bad)  
   1400185d0:	retf   
   1400185d1:	movabs al,ds:0xa1cb6f59a0cb6759
   1400185da:	pop    rdx
   1400185db:	ins    DWORD PTR es:[rdi],dx
   1400185dc:	retf   0x5aa0
   1400185df:	jl     0x1400185ab
   1400185e1:	movabs al,ds:0xa1cb815ba1ca815b
   1400185ea:	pop    rsp
   1400185eb:	mov    ebx,cs
   1400185ed:	movabs ds:0xa5ce8f5fa3cc8f5d,al
   1400185f6:	movsxd ebx,DWORD PTR [rbx-0x639c5932]
   1400185fc:	int    0xa6
   1400185fe:	movsxd esp,DWORD PTR [rdx-0x53995832]
   140018604:	(bad)  
   140018605:	test   al,0x67
   140018607:	stos   DWORD PTR es:[rdi],eax
   140018608:	iret   
   140018609:	test   eax,0xabd0ae6a
   14001860e:	ins    BYTE PTR es:[rdi],dx
   14001860f:	mov    dh,0xd0
   140018611:	stos   DWORD PTR es:[rdi],eax
   140018612:	ins    DWORD PTR es:[rdi],dx
   140018613:	mov    ah,0xd1
   140018615:	lods   eax,DWORD PTR ds:[rsi]
   140018616:	outs   dx,DWORD PTR ds:[rsi]
   140018617:	mov    ebp,0xc372aed2
   14001861c:	shr    DWORD PTR [rsi-0x4d293a91],1
   140018622:	jno    0x1400185e6
   140018624:	fidiv  WORD PTR [rsi-0x522c4593]
   14001862a:	imul   esi,DWORD PTR [rbx+0x2a],0x27
   14001862e:	and    eax,0x3f67800e
   140018633:	or     eax,0xf66bced
   140018638:	cmc    
   140018639:	(bad)  
   14001863a:	mov    WORD PTR [rsi],es
	...
   140019478:	(bad)  
   140019479:	(bad)  
   14001947a:	(bad)  
   14001947b:	(bad)  
   14001947c:	(bad)  
   14001947d:	(bad)  
   14001947e:	(bad)  
   14001947f:	(bad)  
   140019480:	(bad)  
   140019481:	(bad)  
   140019482:	(bad)  
   140019483:	(bad)  
   140019484:	(bad)  
   140019485:	(bad)  
   140019486:	(bad)  
   140019487:	(bad)  
   140019488:	(bad)  
   140019489:	(bad)  
   14001948a:	(bad)  
   14001948b:	(bad)  
   14001948c:	(bad)  
   14001948d:	(bad)  
   14001948e:	(bad)  
   14001948f:	(bad)  
   140019490:	(bad)  
   140019491:	(bad)  
   140019492:	(bad)  
   140019493:	(bad)  
   140019494:	cld    
   140019495:	(bad)  
   140019496:	(bad)  
   140019497:	(bad)  
   140019498:	(bad)  
   140019499:	(bad)  
   14001949a:	(bad)  
   14001949b:	inc    BYTE PTR [rax]
   14001949d:	add    edi,edi
   14001949f:	(bad)  
   1400194a0:	(bad)  
   1400194a1:	(bad)  
   1400194a2:	inc    DWORD PTR [rax]
   1400194a4:	add    BYTE PTR [rax],al
   1400194a6:	(bad)  
   1400194a7:	(bad)  
   1400194a8:	(bad)  
   1400194a9:	inc    DWORD PTR [rax+0x7000000]
   1400194af:	(bad)  
   1400194b0:	inc    eax
   1400194b2:	add    BYTE PTR [rax],al
   1400194b4:	add    BYTE PTR [rax],al
   1400194b6:	add    edi,edi
   1400194b8:	inc    BYTE PTR [rax]
   1400194ba:	add    BYTE PTR [rax],al
   1400194bc:	add    BYTE PTR [rax],al
   1400194be:	add    BYTE PTR [rdi-0x4],bh
   1400194c1:	add    BYTE PTR [rax],al
   1400194c3:	add    BYTE PTR [rax],al
   1400194c5:	add    BYTE PTR [rax],al
   1400194c7:	(bad)  
   1400194c8:	cld    
   1400194c9:	add    BYTE PTR [rax],al
   1400194cb:	add    BYTE PTR [rax],al
   1400194cd:	add    BYTE PTR [rax],al
   1400194cf:	(bad)  
   1400194d0:	cld    
   1400194d1:	add    BYTE PTR [rax],al
   1400194d3:	add    BYTE PTR [rax],al
   1400194d5:	add    BYTE PTR [rax],al
   1400194d7:	add    edi,esp
   1400194d9:	add    BYTE PTR [rax],al
   1400194db:	add    BYTE PTR [rax],al
   1400194dd:	add    BYTE PTR [rax],al
   1400194df:	add    edi,esp
   1400194e1:	add    BYTE PTR [rax],al
   1400194e3:	add    BYTE PTR [rax],al
   1400194e5:	add    BYTE PTR [rax],al
   1400194e7:	paddb  mm0,QWORD PTR [rax]
   1400194ea:	add    BYTE PTR [rax],al
   1400194ec:	add    BYTE PTR [rax],al
   1400194ee:	add    edi,edi
   1400194f0:	cld    
   1400194f1:	add    BYTE PTR [rax],al
   1400194f3:	add    BYTE PTR [rax],al
   1400194f5:	add    BYTE PTR [rbx],al
   1400194f7:	(bad)  
   1400194f8:	cld    
   1400194f9:	add    BYTE PTR [rax],al
   1400194fb:	add    BYTE PTR [rax],al
   1400194fd:	add    BYTE PTR [rbx],al
   1400194ff:	(bad)  
   140019500:	cld    
   140019501:	add    BYTE PTR [rax],al
   140019503:	add    BYTE PTR [rax],al
   140019505:	add    BYTE PTR [rbx],al
   140019507:	(bad)  
   140019508:	cld    
   140019509:	add    BYTE PTR [rax],al
   14001950b:	add    BYTE PTR [rax],al
   14001950d:	add    BYTE PTR [rbx],al
   14001950f:	(bad)  
   140019510:	cld    
   140019511:	add    BYTE PTR [rax],al
   140019513:	add    BYTE PTR [rax],al
   140019515:	add    BYTE PTR [rbx],al
   140019517:	(bad)  
   140019518:	cld    
   140019519:	add    BYTE PTR [rax],al
   14001951b:	add    BYTE PTR [rax],al
   14001951d:	add    BYTE PTR [rbx],al
   14001951f:	(bad)  
   140019520:	cld    
   140019521:	add    BYTE PTR [rax],al
   140019523:	add    BYTE PTR [rax],al
   140019525:	add    BYTE PTR [rbx],al
   140019527:	(bad)  
   140019528:	cld    
   140019529:	add    BYTE PTR [rax],al
   14001952b:	add    BYTE PTR [rax],al
   14001952d:	add    BYTE PTR [rbx],al
   14001952f:	(bad)  
   140019530:	cld    
   140019531:	add    BYTE PTR [rax],al
   140019533:	add    BYTE PTR [rax],al
   140019535:	add    BYTE PTR [rbx],al
   140019537:	(bad)  
   140019538:	cld    
   140019539:	add    BYTE PTR [rax],al
   14001953b:	add    BYTE PTR [rax],al
   14001953d:	add    BYTE PTR [rbx],al
   14001953f:	(bad)  
   140019540:	cld    
   140019541:	add    BYTE PTR [rax],al
   140019543:	add    BYTE PTR [rax],al
   140019545:	add    BYTE PTR [rbx],al
   140019547:	(bad)  
   140019548:	cld    
   140019549:	add    BYTE PTR [rax],al
   14001954b:	add    BYTE PTR [rax],al
   14001954d:	add    BYTE PTR [rbx],al
   14001954f:	(bad)  
   140019550:	cld    
   140019551:	add    BYTE PTR [rax],al
   140019553:	add    BYTE PTR [rax],al
   140019555:	add    BYTE PTR [rbx],al
   140019557:	(bad)  
   140019558:	cld    
   140019559:	add    BYTE PTR [rax],al
   14001955b:	add    BYTE PTR [rax],al
   14001955d:	add    BYTE PTR [rbx],al
   14001955f:	(bad)  
   140019560:	cld    
   140019561:	add    BYTE PTR [rax],al
   140019563:	add    BYTE PTR [rax],al
   140019565:	add    BYTE PTR [rbx],al
   140019567:	(bad)  
   140019568:	cld    
   140019569:	add    BYTE PTR [rax],al
   14001956b:	add    BYTE PTR [rax],al
   14001956d:	add    BYTE PTR [rbx],al
   14001956f:	(bad)  
   140019570:	cld    
   140019571:	add    BYTE PTR [rax],al
   140019573:	add    BYTE PTR [rax],al
   140019575:	add    BYTE PTR [rbx],al
   140019577:	(bad)  
   140019578:	cld    
   140019579:	add    BYTE PTR [rax],al
   14001957b:	add    BYTE PTR [rax],al
   14001957d:	add    BYTE PTR [rbx],al
   14001957f:	(bad)  
   140019580:	cld    
   140019581:	add    BYTE PTR [rax],al
   140019583:	add    BYTE PTR [rax],al
   140019585:	add    BYTE PTR [rbx],al
   140019587:	(bad)  
   140019588:	cld    
   140019589:	add    BYTE PTR [rax],al
   14001958b:	add    BYTE PTR [rax],al
   14001958d:	add    BYTE PTR [rbx],al
   14001958f:	(bad)  
   140019590:	cld    
   140019591:	add    BYTE PTR [rax],al
   140019593:	add    BYTE PTR [rax],al
   140019595:	add    BYTE PTR [rbx],al
   140019597:	(bad)  
   140019598:	cld    
   140019599:	add    BYTE PTR [rax],al
   14001959b:	add    BYTE PTR [rax],al
   14001959d:	add    BYTE PTR [rbx],al
   14001959f:	(bad)  
   1400195a0:	cld    
   1400195a1:	add    BYTE PTR [rax],al
   1400195a3:	add    BYTE PTR [rax],al
   1400195a5:	add    BYTE PTR [rbx],al
   1400195a7:	(bad)  
   1400195a8:	cld    
   1400195a9:	add    BYTE PTR [rax],al
   1400195ab:	add    BYTE PTR [rax],al
   1400195ad:	add    BYTE PTR [rbx],al
   1400195af:	(bad)  
   1400195b0:	cld    
   1400195b1:	add    BYTE PTR [rax],al
   1400195b3:	add    BYTE PTR [rax],al
   1400195b5:	add    BYTE PTR [rbx],al
   1400195b7:	(bad)  
   1400195b8:	cld    
   1400195b9:	add    BYTE PTR [rax],al
   1400195bb:	add    BYTE PTR [rax],al
   1400195bd:	add    BYTE PTR [rbx],al
   1400195bf:	(bad)  
   1400195c0:	cld    
   1400195c1:	add    BYTE PTR [rax],al
   1400195c3:	add    BYTE PTR [rax],al
   1400195c5:	add    BYTE PTR [rbx],al
   1400195c7:	(bad)  
   1400195c8:	cld    
   1400195c9:	add    BYTE PTR [rax],al
   1400195cb:	add    BYTE PTR [rax],al
   1400195cd:	add    BYTE PTR [rbx],al
   1400195cf:	(bad)  
   1400195d0:	cld    
   1400195d1:	add    BYTE PTR [rax],al
   1400195d3:	add    BYTE PTR [rax],al
   1400195d5:	add    BYTE PTR [rbx],al
   1400195d7:	(bad)  
   1400195d8:	cld    
   1400195d9:	add    BYTE PTR [rax],al
   1400195db:	add    BYTE PTR [rax],al
   1400195dd:	add    BYTE PTR [rbx],al
   1400195df:	(bad)  
   1400195e0:	cld    
   1400195e1:	add    BYTE PTR [rax],al
   1400195e3:	add    BYTE PTR [rax],al
   1400195e5:	add    BYTE PTR [rbx],al
   1400195e7:	(bad)  
   1400195e8:	cld    
   1400195e9:	add    BYTE PTR [rax],al
   1400195eb:	add    BYTE PTR [rax],al
   1400195ed:	add    BYTE PTR [rbx],al
   1400195ef:	(bad)  
   1400195f0:	cld    
   1400195f1:	add    BYTE PTR [rax],al
   1400195f3:	add    BYTE PTR [rax],al
   1400195f5:	add    BYTE PTR [rbx],al
   1400195f7:	(bad)  
   1400195f8:	inc    BYTE PTR [rax]
   1400195fa:	add    BYTE PTR [rax],al
   1400195fc:	add    BYTE PTR [rax],al
   1400195fe:	add    edi,edi
   140019600:	inc    DWORD PTR [rax]
   140019602:	add    BYTE PTR [rax],al
   140019604:	add    BYTE PTR [rax],al
   140019606:	jg     0x140019607
   140019608:	(bad)  
   140019609:	(bad)  
   14001960a:	(bad)  
   14001960b:	(bad)  
   14001960c:	(bad)  
   14001960d:	(bad)  
   14001960e:	(bad)  
   14001960f:	(bad)  
   140019610:	(bad)  
   140019611:	(bad)  
   140019612:	(bad)  
   140019613:	(bad)  
   140019614:	(bad)  
   140019615:	(bad)  
   140019616:	(bad)  
   140019617:	(bad)  
   140019618:	(bad)  
   140019619:	(bad)  
   14001961a:	(bad)  
   14001961b:	(bad)  
   14001961c:	(bad)  
   14001961d:	(bad)  
   14001961e:	(bad)  
   14001961f:	(bad)  
   140019620:	(bad)  
   140019621:	(bad)  
   140019622:	(bad)  
   140019623:	(bad)  
   140019624:	(bad)  
   140019625:	(bad)  
   140019626:	(bad)  
   140019627:	(bad)  
   140019628:	(bad)  
   140019629:	(bad)  
   14001962a:	(bad)  
   14001962b:	(bad)  
   14001962c:	(bad)  
   14001962d:	(bad)  
   14001962e:	(bad)  
   14001962f:	(bad)  
   140019630:	(bad)  
   140019631:	(bad)  
   140019632:	(bad)  
   140019633:	(bad)  
   140019634:	(bad)  
   140019635:	(bad)  
   140019636:	(bad)  
   140019637:	(bad)  
   140019638:	(bad)  
   140019639:	(bad)  
   14001963a:	(bad)  
   14001963b:	(bad)  
   14001963c:	(bad)  
   14001963d:	(bad)  
   14001963e:	(bad)  
   14001963f:	(bad)  
   140019640:	(bad)  
   140019641:	(bad)  
   140019642:	(bad)  
   140019643:	(bad)  
   140019644:	(bad)  
   140019645:	(bad)  
   140019646:	(bad)  
   140019647:	(bad)  
   140019648:	(bad)  
   140019649:	(bad)  
   14001964a:	(bad)  
   14001964b:	(bad)  
   14001964c:	(bad)  
   14001964d:	(bad)  
   14001964e:	(bad)  
   14001964f:	(bad)  
   140019650:	(bad)  
   140019651:	(bad)  
   140019652:	(bad)  
   140019653:	(bad)  
   140019654:	(bad)  
   140019655:	(bad)  
   140019656:	(bad)  
   140019657:	(bad)  
   140019658:	(bad)  
   140019659:	(bad)  
   14001965a:	(bad)  
   14001965b:	(bad)  
   14001965c:	(bad)  
   14001965d:	(bad)  
   14001965e:	(bad)  
   14001965f:	(bad)  
   140019660:	(bad)  
   140019661:	(bad)  
   140019662:	(bad)  
   140019663:	(bad)  
   140019664:	(bad)  
   140019665:	(bad)  
   140019666:	(bad)  
   140019667:	(bad)  
   140019668:	(bad)  
   140019669:	(bad)  
   14001966a:	(bad)  
   14001966b:	(bad)  
   14001966c:	(bad)  
   14001966d:	(bad)  
   14001966e:	(bad)  
   14001966f:	(bad)  
   140019670:	(bad)  
   140019671:	(bad)  
   140019672:	(bad)  
   140019673:	(bad)  
   140019674:	(bad)  
   140019675:	(bad)  
   140019676:	(bad)  
   140019677:	jmp    FWORD PTR [rax]
   140019679:	add    BYTE PTR [rax],al
   14001967b:	add    BYTE PTR [rax],dh
   14001967d:	add    BYTE PTR [rax],al
   14001967f:	add    BYTE PTR [rax+0x0],ah
   140019682:	add    BYTE PTR [rax],al
   140019684:	add    DWORD PTR [rax],eax
   140019686:	and    BYTE PTR [rax],al
   140019688:	add    BYTE PTR [rax],al
   14001968a:	add    BYTE PTR [rax],al
   14001968c:	and    BYTE PTR [rip+0x0],0x0        # 0x140019693
	...
   140019707:	add    al,BYTE PTR [rax]
   140019709:	add    BYTE PTR [rax],al
   14001970b:	(bad)  
   14001970c:	adc    al,0x13
   14001970e:	adc    DWORD PTR [rip+0x10000000],ecx        # 0x150019714
   140019714:	add    BYTE PTR [rax],al
   140019716:	add    BYTE PTR [rax+rax*1],dl
   140019719:	add    BYTE PTR [rax],al
   14001971b:	sbb    DWORD PTR [rax],eax
   14001971d:	add    BYTE PTR [rax],al
   14001971f:	(bad)  
   140019720:	or     BYTE PTR [rax],cl
   140019722:	or     BYTE PTR [rax],ah
   140019724:	add    BYTE PTR [rax],al
   140019726:	add    BYTE PTR [rdi],bl
   140019728:	add    BYTE PTR [rax],al
   14001972a:	add    BYTE PTR [rdx],dl
   14001972c:	add    BYTE PTR [rax],al
   14001972e:	add    BYTE PTR [rcx],al
	...
   1400197a8:	add    BYTE PTR [rax],al
   1400197aa:	add    BYTE PTR [rcx],al
   1400197ac:	add    BYTE PTR [rax],al
   1400197ae:	add    BYTE PTR [rsi],al
   1400197b0:	add    BYTE PTR [rax],al
   1400197b2:	add    BYTE PTR [rbx],cl
   1400197b4:	add    BYTE PTR [rax],al
   1400197b6:	add    BYTE PTR [rdi],cl
   1400197b8:	add    BYTE PTR [rax],al
   1400197ba:	add    BYTE PTR [rbx],dl
   1400197bc:	add    BYTE PTR [rax],al
   1400197be:	add    BYTE PTR [rcx],bl
   1400197c0:	add    BYTE PTR [rax],al
   1400197c2:	add    BYTE PTR [rip+0x210c0e0f],bl        # 0x1610da5d7
   1400197c8:	(bad)  
   1400197c9:	adc    eax,0xd0f2211
   1400197ce:	or     ah,BYTE PTR [rcx]
   1400197d0:	(bad)  
   1400197d1:	adc    al,0xf
   1400197d3:	and    ch,BYTE PTR [rcx]
   1400197d5:	and    eax,0x383f241c
   1400197da:	sub    BYTE PTR [rcx],ch
   1400197dc:	jbe    0x140019840
   1400197de:	ss cmp al,0x81
   1400197e1:	xor    BYTE PTR [edi+eax*1+0x6],al
   1400197e6:	add    esp,DWORD PTR [rax]
   1400197e8:	add    al,BYTE PTR [rax]
   1400197ea:	add    BYTE PTR [rdi],bl
   1400197ec:	add    eax,DWORD PTR [rax]
   1400197ee:	add    bl,BYTE PTR [rcx]
   1400197f0:	add    eax,DWORD PTR [rax]
   1400197f2:	add    BYTE PTR [rdi],al
	...
   140019850:	add    BYTE PTR [rax],al
   140019852:	add    BYTE PTR [rdx],al
   140019854:	add    BYTE PTR [rax],al
   140019856:	add    BYTE PTR [rdi],al
   140019858:	add    BYTE PTR [rax],al
   14001985a:	add    BYTE PTR [rip+0x12000000],cl        # 0x152019860
   140019860:	add    BYTE PTR [rax],al
   140019862:	add    BYTE PTR [rcx],bl
   140019864:	add    BYTE PTR [rax],al
   140019866:	add    BYTE PTR [rsi+rax*1],bl
   140019869:	add    eax,0xb0c2003
   14001986e:	(bad)  
   14001986f:	and    DWORD PTR [rsi],ecx
   140019871:	or     al,0x3
   140019873:	and    bl,BYTE PTR [rax]
   140019875:	adc    al,0x5
   140019877:	and    ebp,DWORD PTR [rdi]
   140019879:	(bad)  
   14001987a:	or     ch,BYTE PTR [rax]
   14001987c:	cmp    eax,0x752a1633
   140019881:	pop    rdi
   140019882:	sub    al,0x3f
   140019884:	mov    ebp,DWORD PTR [rdi+0x31]
   140019887:	push   rcx
   140019888:	sahf   
   140019889:	jle    0x1400198c2
   14001988b:	stos   BYTE PTR es:[edi],al
   14001988d:	xchg   DWORD PTR [rdx],edi
   14001988f:	jle    0x140019840
   140019891:	mov    DWORD PTR [rdx],esi
   140019893:	lea    esi,[rsi-0x3e60c770]
   140019899:	fwait
   14001989a:	rex.RB mov r12d,0xc34c9ec3
   1400198a0:	mov    bh,0x92
   1400198a2:	cmp    BYTE PTR [rax+0x5d16536e],bh
   1400198a8:	add    BYTE PTR [rax],al
   1400198aa:	add    BYTE PTR [rsi],bl
   1400198ac:	(bad)  
   1400198ad:	add    BYTE PTR [rax],al
   1400198af:	(bad)  
   1400198b0:	add    BYTE PTR [rax],al
   1400198b2:	add    BYTE PTR [rdx],bl
   1400198b4:	add    eax,DWORD PTR [rcx]
   1400198b6:	add    cl,BYTE PTR [rip+0x0]        # 0x1400198bc
	...
   1400198f8:	add    BYTE PTR [rax],al
   1400198fa:	add    BYTE PTR [rcx],al
   1400198fc:	add    BYTE PTR [rax],al
   1400198fe:	add    BYTE PTR [rip+0x8000000],al        # 0x148019904
   140019904:	or     al,0xa
   140019906:	add    dl,BYTE PTR [rax]
   140019908:	or     DWORD PTR [rdi],eax
   14001990a:	add    edx,DWORD PTR [rdi]
   14001990c:	adc    eax,0x71e0b12
   140019911:	(bad)  
   140019912:	add    al,0x1f
   140019914:	(bad)  
   140019916:	add    esp,DWORD PTR [rdx]
   140019918:	adc    edx,DWORD PTR [rax]
   14001991a:	add    al,0x23
   14001991c:	(bad)  
   14001991d:	sbb    DWORD PTR [rsi],eax
   14001991f:	and    al,0x34
   140019921:	sub    ecx,DWORD PTR [rbx]
   140019923:	sub    ah,BYTE PTR [rbp+0x52]
   140019926:	and    BYTE PTR [rax],bh
   140019928:	nop
   140019929:	jne    0x14001995f
   14001992b:	push   rbp
   14001992c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001992d:	test   BYTE PTR [rip+0x3687a96d],bh        # 0x1768942a0
   140019933:	(bad)  
   140019934:	mov    bl,0x8d
   140019936:	(bad)  
   140019937:	xchg   ebp,eax
   140019938:	mov    ebp,0xc2ae4498
   14001993d:	popf   
   14001993e:	rex.W ret 0xa0c5
   140019942:	rex.WRX leave 
   140019944:	(bad)  
   140019945:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019946:	push   rsp
   140019947:	(bad)  
   140019948:	retf   0x5ba8
   14001994b:	rcl    al,1
   14001994d:	mov    al,0x67
   14001994f:	fcom   st(7)
   140019951:	mov    ecx,0xc4e0e077
   140019956:	mov    eax,ebp
   140019958:	out    0xcf,eax
   14001995a:	cwde   
   14001995b:	in     al,dx
   14001995c:	jmp    0x12fef3531
   140019961:	fdiv   QWORD PTR [rbx+0x399bc7ef]
   140019967:	jmp    rax
   140019969:	mov    eax,0x308c65a
   14001996e:	add    DWORD PTR [rdi],esp
   140019970:	add    DWORD PTR [rax],eax
   140019972:	add    BYTE PTR [rip+0x1b050402],bl        # 0x15b069d7a
   140019978:	add    al,BYTE PTR [rcx]
   14001997a:	add    DWORD PTR [rax],edx
   14001997c:	(bad)  
   14001997d:	add    BYTE PTR [rcx],al
   14001997f:	add    al,0x0
	...
   1400199ad:	add    BYTE PTR [rax],al
   1400199af:	add    BYTE PTR [rsp+rdx*2+0x28],ah
   1400199b3:	add    al,0x25
   1400199b5:	(bad)  
   1400199b6:	adc    DWORD PTR [rbx],ecx
   1400199b8:	prefetch BYTE PTR [rsp+rdx*1]
   1400199bc:	sbb    edx,DWORD PTR [rsi]
   1400199be:	(bad)  
   1400199bf:	(bad)  
   1400199c0:	sub    eax,0x4b280a25
   1400199c5:	(bad)  
   1400199c6:	(bad)  
   1400199c7:	(bad)  
   1400199c8:	outs   dx,BYTE PTR ds:[rsi]
   1400199c9:	pop    rbx
   1400199ca:	sub    edi,DWORD PTR [rbx]
   1400199cc:	xchg   esi,eax
   1400199cd:	jnp    0x140019a0a
   1400199cf:	pop    rbx
   1400199d0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400199d1:	xchg   DWORD PTR [rcx+0x72],eax
   1400199d4:	stos   BYTE PTR es:[rdi],al
   1400199d5:	xchg   DWORD PTR [rdi],esi
   1400199d7:	(bad)  
   1400199d8:	mov    ah,0x90
   1400199da:	cmp    eax,0x4598bd96
   1400199df:	scas   al,BYTE PTR es:[rdi]
   1400199e0:	rcr    DWORD PTR [rbp-0x613b3cb8],0x4a
   1400199e7:	(bad)  
   1400199e8:	leave  
   1400199e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400199ea:	push   rsi
   1400199eb:	(bad)  
   1400199ec:	iret   
   1400199ed:	scas   al,BYTE PTR es:[rdi]
   1400199ee:	movsxd ebx,esi
   1400199f0:	xlat   BYTE PTR ds:[rbx]
   1400199f1:	mov    eax,0xc1dee672
   1400199f6:	sub    bh,0xe3
   1400199f9:	(bad)  
   1400199fa:	mov    esi,ecx
   1400199fc:	out    0xce,eax
   1400199fe:	xchg   esi,eax
   1400199ff:	out    dx,al
   140019a00:	in     eax,0xce
   140019a02:	cwde   
   140019a03:	call   0x1229664e9
   140019a08:	(bad)  
   140019a0a:	nop
   140019a0b:	(bad)  
   140019a0d:	(bad)  
   140019a0e:	nop
   140019a0f:	(bad)  
   140019a10:	faddp  st(7),st
   140019a12:	xchg   ecx,eax
   140019a13:	rcr    ebp,cl
   140019a15:	(bad)  
   140019a16:	xchg   ecx,eax
   140019a17:	rcr    bl,1
   140019a19:	ret    
   140019a1a:	mov    edx,edx
   140019a1c:	fld    st(0)
   140019a1e:	xchg   ebx,edx
   140019a20:	out    dx,eax
   140019a21:	fnsave [rsi+0x3599c7e8]
   140019a27:	(bad)  
   140019a28:	mov    esi,0xbefc3597
   140019a2d:	xchg   ecx,eax
   140019a2e:	sub    al,0xfe
   140019a30:	retf   
   140019a31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019a32:	push   rax
   140019a33:	test   DWORD PTR [rax],ecx
   140019a35:	add    al,BYTE PTR [rsi+rbx*1]
   140019a38:	add    DWORD PTR [rax],eax
   140019a3a:	add    BYTE PTR [rdx],bl
   140019a3c:	or     DWORD PTR [rbx],eax
   140019a3e:	add    DWORD PTR [rdx],edx
   140019a40:	or     BYTE PTR [rdx],al
   140019a42:	(bad)  
   140019a43:	or     BYTE PTR [rax],al
	...
   140019a65:	add    BYTE PTR [rax],al
   140019a67:	add    BYTE PTR [rsi+0x74012683],bl
   140019a6d:	pop    rbp
   140019a6e:	and    al,0x20
   140019a70:	xchg   ebp,eax
   140019a71:	js     0x140019aa7
   140019a73:	push   rax
   140019a74:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019a75:	test   BYTE PTR [rcx],bh
   140019a77:	ins    DWORD PTR es:[rdi],dx
   140019a78:	stos   BYTE PTR es:[rdi],al
   140019a79:	xchg   BYTE PTR [rbx],dh
   140019a7b:	test   BYTE PTR [rcx-0x415fbb6b],bh
   140019a81:	fwait
   140019a82:	rex.RXB mov r15b,0xc2
   140019a85:	sahf   
   140019a86:	rex.WX int3 
   140019a88:	(bad)  
   140019a89:	movabs eax,ds:0xafd1df59a9cbda4f
   140019a92:	in     ax,0xd8
   140019a95:	mov    ecx,0xbedcea73
   140019a9a:	jle    0x140019a84
   140019a9c:	faddp  st(2),st
   140019a9e:	test   edi,esp
   140019aa0:	loope  0x140019a69
   140019aa2:	(bad)  
   140019aa3:	in     eax,0xe7
   140019aa5:	rcr    BYTE PTR [rbp-0x602e1820],1
   140019aab:	fsubrp st(5),st
   140019aad:	(bad)  
   140019aae:	pushf  
   140019aaf:	fnclex 
   140019ab1:	retf   
   140019ab2:	cwde   
   140019ab3:	xlat   BYTE PTR ds:[rbx]
   140019ab4:	fmulp  st(0),st
   140019ab6:	xchg   ebx,eax
   140019ab7:	(bad)  
   140019ab8:	ffree  st(6)
   140019aba:	nop
   140019abb:	rcr    esi,cl
   140019abd:	(bad)  
   140019abe:	xchg   ecx,eax
   140019abf:	(bad)  
   140019ac0:	faddp  st(6),st
   140019ac2:	(bad)  
   140019ac3:	fcmovnu st,st(7)
   140019ac5:	(bad)  
   140019ac6:	nop
   140019ac7:	loope  0x140019aa9
   140019ac9:	(bad)  
   140019aca:	mov    fs,ebp
   140019acc:	ffreep st(6)
   140019ace:	(bad)  
   140019acf:	out    0xde,al
   140019ad1:	(bad)  
   140019ad2:	mov    esp,edi
   140019ad4:	ffree  st(4)
   140019ad6:	mov    ah,dh
   140019ad8:	faddp  st(5),st
   140019ada:	(bad)  
   140019adb:	out    0xdc,al
   140019add:	ret    
   140019ade:	mov    ebx,esp
   140019ae0:	out    dx,eax
   140019ae1:	fdiv   QWORD PTR [rbp+rbp*8-0xca6639]
   140019ae8:	loope  0x140019aa6
   140019aea:	ja     0x140019add
   140019aec:	repnz fdiv QWORD PTR [rax+0x157caaf1]
   140019af3:	(bad)  
   140019af4:	mov    edx,0xacb9559b
   140019af9:	xchg   ebp,eax
   140019afa:	imul   esi,DWORD PTR fs:[rdi],0x2e
   140019afe:	sbb    eax,DWORD PTR ss:[rdx]
   140019b01:	(bad)  
   140019b02:	add    edx,DWORD PTR [rdx]
   140019b04:	rex.WRXB
   140019b05:	rex.W push rdx
   140019b07:	(bad)  
   140019b08:	lods   al,BYTE PTR ds:[rsi]
   140019b09:	(bad)  
   140019b0a:	scas   al,BYTE PTR es:[rdi]
   140019b0b:	add    DWORD PTR [rax],eax
	...
   140019b25:	add    BYTE PTR [rax],al
   140019b27:	add    dl,dl
   140019b29:	ret    0x2690
   140019b2c:	(bad)  
   140019b2d:	movabs ds:0xaaccd751a3c7b352,eax
   140019b36:	pop    rbp
   140019b37:	(bad)  
   140019b39:	mov    bl,0x6b
   140019b3b:	loope  0x140019b16
   140019b3d:	mov    ebx,0xc6e2e779
   140019b42:	mov    ecx,ebp
   140019b44:	in     eax,0xcb
   140019b46:	xchg   esp,eax
   140019b47:	(bad)  
   140019b48:	out    0xcd,al
   140019b4a:	cwde   
   140019b4b:	out    0xe4,al
   140019b4d:	int    0x99
   140019b4f:	(bad)  
   140019b51:	int    0x9a
   140019b53:	(bad)  
   140019b54:	loop   0x140019b22
   140019b56:	cdq    
   140019b57:	(bad)  
   140019b58:	loop   0x140019b26
   140019b5a:	cdq    
   140019b5b:	shl    edx,cl
   140019b5d:	retf   
   140019b5e:	cwde   
   140019b5f:	(bad)  
   140019b60:	loop   0x140019b2c
   140019b62:	xchg   edi,eax
   140019b63:	(bad)  
   140019b64:	loopne 0x140019b2f
   140019b66:	xchg   ebx,eax
   140019b67:	(bad)  
   140019b69:	(bad)  
   140019b6a:	xchg   ecx,eax
   140019b6b:	fucom  st(0)
   140019b6d:	enter  0xe091,0xe1
   140019b71:	leave  
   140019b72:	xchg   edx,eax
   140019b73:	in     al,0xe3
   140019b75:	retf   0xe794
   140019b78:	jrcxz  0x140019b44
   140019b7a:	xchg   esp,eax
   140019b7b:	call   0x128946562
   140019b80:	loopne 0x140019b4a
   140019b82:	nop
   140019b83:	out    0xe0,al
   140019b85:	(bad)  
   140019b86:	(bad)  
   140019b87:	in     al,0xdf
   140019b89:	(bad)  
   140019b8a:	mov    fs,ebx
   140019b8c:	faddp  st(5),st
   140019b8e:	mov    esp,fs
   140019b90:	ffreep st(6)
   140019b92:	(bad)  
   140019b93:	in     eax,0xdf
   140019b95:	(bad)
   140019b98:	ffreep st(5)
   140019b9a:	mov    ecx,gs
   140019b9c:	fcmovnb st,st(1)
   140019b9e:	xchg   cl,ch
   140019ba0:	out    dx,al
   140019ba1:	fdiv   QWORD PTR [rbx+0x3599c7f3]
   140019ba7:	(bad)  
   140019ba8:	fistp  QWORD PTR [rbx-0x240f168a]
   140019bae:	mov    cl,0xef
   140019bb0:	test   eax,0xb9ff157b
   140019bb5:	lea    ebp,[rdx]
   140019bb7:	idiv   DWORD PTR [rax+rdx*4-0x382009d2]
   140019bbe:	xchg   ebx,eax
   140019bbf:	scas   eax,DWORD PTR es:[rdi]
   140019bc0:	ja     0x140019c30
   140019bc2:	push   0x1314133d
   140019bc7:	(bad)  
   140019bc8:	sub    al,0x33
   140019bca:	(bad)  
   140019bcb:	add    eax,0x0
	...
   140019be8:	shl    DWORD PTR [rbp-0x4227438f],cl
   140019bee:	jl     0x140019bcd
   140019bf0:	out    0xcf,eax
   140019bf2:	pushf  
   140019bf3:	retf   0xd1e8
   140019bf6:	movabs eax,ds:0xa2d0e5bea5d3e9c3
   140019bff:	mov    edi,0xc99bcce3
   140019c04:	jrcxz  0x140019bd3
   140019c06:	(bad)  
   140019c07:	shl    bl,1
   140019c09:	int    0x99
   140019c0b:	xlat   BYTE PTR ds:[rbx]
   140019c0c:	jrcxz  0x140019bda
   140019c0e:	xchg   edi,eax
   140019c0f:	(bad)  
   140019c11:	retf   0xe394
   140019c14:	loope  0x140019bdf
   140019c16:	xchg   edx,eax
   140019c17:	in     al,0xe8
   140019c19:	rcr    DWORD PTR [rbp-0x5e2a1419],1
   140019c1f:	jmp    0x129a57210
   140019c24:	out    dx,al
   140019c25:	xlat   BYTE PTR ds:[rbx]
   140019c26:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019c27:	call   0x125a77318
   140019c2c:	jmp    0x140019c03
   140019c2e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019c2f:	loopne 0x140019c19
   140019c31:	rcr    BYTE PTR [rdi-0x67321a21],cl
   140019c37:	in     eax,0xe3
   140019c39:	retf   
   140019c3a:	xchg   ebp,eax
   140019c3b:	out    0xe4,al
   140019c3d:	int3   
   140019c3e:	xchg   edi,eax
   140019c3f:	out    0xe3,eax
   140019c41:	retf   0xeb93
   140019c44:	loop   0x140019c0f
   140019c46:	xchg   ecx,eax
   140019c47:	out    dx,al
   140019c48:	loop   0x140019c12
   140019c4a:	(bad)  
   140019c4b:	lock loop 0x140019c15
   140019c4e:	(bad)  
   140019c4f:	icebp  
   140019c50:	loopne 0x140019c19
   140019c52:	mov    ecx,?
   140019c54:	ffreep st(6)
   140019c56:	mov    ebp,edi
   140019c58:	faddp  st(5),st
   140019c5a:	mov    ebp,esi
   140019c5c:	fadd   st(3),st
   140019c5e:	xchg   ebx,ebp
   140019c60:	out    dx,al
   140019c61:	fdiv   QWORD PTR [rbx+0x399dcaf2]
   140019c67:	(bad)  
   140019c68:	fistp  QWORD PTR [rbx-0x240e1589]
   140019c6e:	mov    cl,0xf0
   140019c70:	scas   al,BYTE PTR es:[rdi]
   140019c71:	jg     0x140019c89
   140019c73:	dec    esi
   140019c75:	test   eax,0xdbece862
   140019c7a:	mov    ch,0xe6
   140019c7c:	mov    ebp,0xacec3594
   140019c81:	xchg   ebx,eax
   140019c82:	pop    rcx
   140019c83:	or     ecx,DWORD PTR gs:[rip+0x1313150c]        # 0x15314b196
   140019c8a:	and    BYTE PTR [rdi],cl
   140019c8c:	and    ebp,DWORD PTR cs:[rip+0x7]        # 0x140019c9a
	...
   140019ca7:	add    al,dl
   140019ca9:	mov    cl,0x69
   140019cab:	jmp    rbx
   140019cad:	int    0x98
   140019caf:	mov    esp,0xa1b7def0
   140019cb4:	out    dx,al
   140019cb5:	fdiv   QWORD PTR [rbx-0x48211053]
   140019cbb:	scas   al,BYTE PTR es:[rdi]
   140019cbc:	out    0xce,al
   140019cbe:	(bad)  
   140019cbf:	fcmovnu st,st(7)
   140019cc1:	(bad)  
   140019cc2:	mov    esi,ebp
   140019cc4:	(bad)  
   140019cc5:	shl    DWORD PTR [rdx-0x5c2b1623],cl
   140019ccb:	fld1   
   140019ccd:	shl    DWORD PTR [rsp+rdx*8-0x254f220e],cl
   140019cd4:	cli    
   140019cd5:	in     al,0xb8
   140019cd7:	in     eax,dx
   140019cd8:	(bad)  
   140019cd9:	(bad)  
   140019cda:	mov    dl,0xf6
   140019cdc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019cdd:	mov    bh,0xc6
   140019cdf:	cli    
   140019ce0:	lea    ebp,[rax-0x5d84001c]
   140019ce6:	idiv   edi
   140019ce8:	nop
   140019ce9:	stos   BYTE PTR es:[rdi],al
   140019cea:	out    0xff,al
   140019cec:	movabs al,ds:0xf1fbc5cfd2fedab3
   140019cf5:	fnsave [rbx-0x602b1406]
   140019cfb:	repz in eax,0xcd
   140019cfe:	xchg   ebp,eax
   140019cff:	in     al,dx
   140019d00:	in     al,0xcc
   140019d02:	xchg   ebp,eax
   140019d03:	call   0x1279c6cef
   140019d08:	in     al,0xcc
   140019d0a:	xchg   edi,eax
   140019d0b:	out    0xe3,eax
   140019d0d:	retf   
   140019d0e:	xchg   esi,eax
   140019d0f:	out    0xe3,al
   140019d11:	retf   0xe694
   140019d14:	loop   0x140019ce0
   140019d16:	xchg   edx,eax
   140019d17:	out    0xe2,al
   140019d19:	retf   0xe692
   140019d1c:	ffreep st(7)
   140019d1e:	mov    fs,ebp
   140019d20:	icebp  
   140019d21:	fidiv  WORD PTR [rsi+0x399dcaf0]
   140019d27:	(bad)  
   140019d28:	fistp  QWORD PTR [rbx-0x240e1589]
   140019d2e:	mov    cl,0xf0
   140019d30:	mov    ch,0x86
   140019d32:	sbb    al,0xff
   140019d34:	shr    DWORD PTR [rsi-0x22111a99],1
   140019d3a:	mov    ecx,0x2a90bee3
   140019d3f:	(bad)  
   140019d40:	mov    esi,0x26265a3
   140019d45:	or     eax,DWORD PTR [rsi+rdx*1]
   140019d48:	adc    DWORD PTR [rdi],ecx
   140019d4a:	adc    dl,BYTE PTR [rdx]
   140019d4c:	(bad)  
   140019d4d:	sbb    BYTE PTR [rcx],bl
   140019d4f:	or     al,0x29
   140019d51:	sub    DWORD PTR [rcx],ebp
   140019d53:	(bad)  
	...
   140019d68:	(bad)  
   140019d69:	mov    al,0x65
   140019d6b:	jmp    rdi
   140019d6d:	rcr    BYTE PTR [rdi-0x4b221046],1
   140019d73:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019d74:	out    dx,al
   140019d75:	fdiv   QWORD PTR [rbx-0x49210f51]
   140019d7b:	mov    dl,0xe0
   140019d7d:	(bad)  
   140019d7e:	mov    ecx,gs
   140019d80:	loopne 0x140019d48
   140019d82:	mov    ebp,fs
   140019d84:	jmp    0x140019d5c
   140019d86:	stos   BYTE PTR es:[rdi],al
   140019d87:	int3   
   140019d88:	repnz fidiv WORD PTR [rdx-0x461a032d]
   140019d8f:	jmp    0x140019d54
   140019d91:	(bad)
   140019d94:	ins    DWORD PTR es:[rdi],dx
   140019d95:	(bad)  
   140019d96:	out    0xfc,eax
   140019d98:	rex.RB xor r9d,0xf5722ffd
   140019d9f:	jmp    QWORD PTR [rsi]
   140019da1:	push   0xfffffffffffffff4
   140019da3:	jmp    QWORD PTR [rcx+rbp*2]
   140019da6:	repnz jmp FWORD PTR [rdi]
   140019da9:	jo     0x140019d9f
   140019dab:	push   QWORD PTR [rsi]
   140019dad:	jne    0x140019da3
   140019daf:	dec    DWORD PTR [rdx-0x7f]
   140019db2:	hlt    
   140019db3:	(bad)  
   140019db4:	addr32 xchg ebp,eax
   140019db6:	hlt    
   140019db7:	(bad)  
   140019db8:	sahf   
   140019db9:	mov    ah,0xdc
   140019dbb:	(bad)  
   140019dbc:	jrcxz  0x140019d90
   140019dbe:	lods   eax,DWORD PTR ds:[rsi]
   140019dbf:	cli    
   140019dc0:	(bad)  
   140019dc1:	rcr    DWORD PTR [rbp-0x7239200f],cl
   140019dc7:	out    0xe8,eax
   140019dc9:	rcr    BYTE PTR [rsi-0x6531191d],1
   140019dcf:	in     eax,0xe5
   140019dd1:	int3   
   140019dd2:	cwde   
   140019dd3:	in     eax,0xe4
   140019dd5:	int3   
   140019dd6:	xchg   esi,eax
   140019dd7:	in     eax,0xe3
   140019dd9:	retf   
   140019dda:	xchg   ebp,eax
   140019ddb:	in     eax,0xe0
   140019ddd:	leave  
   140019dde:	xchg   ecx,eax
   140019ddf:	in     al,0xf2
   140019de1:	loopne 0x140019d9b
   140019de3:	out    dx,al
   140019de4:	int    0x9e
   140019de6:	cmp    bh,bh
   140019de8:	fistp  QWORD PTR [rbx-0x240e1589]
   140019dee:	mov    cl,0xf0
   140019df0:	mov    ecx,0xd2ff228a
   140019df5:	lods   eax,DWORD PTR ds:[rsi]
   140019df6:	in     ax,0xef
   140019df9:	fistp  QWORD PTR [rbx+0x3095c3e2]
   140019dff:	std    
   140019e00:	retf   0x6eaf
   140019e03:	pop    rsp
   140019e04:	or     BYTE PTR [rax],cl
   140019e06:	or     BYTE PTR [rsi],cl
   140019e08:	adc    DWORD PTR [rax],edx
   140019e0a:	(bad)  
   140019e0b:	movups XMMWORD PTR [rip+0x18190e22],xmm2        # 0x1581aac34
   140019e12:	(bad)  
   140019e13:	or     edi,DWORD PTR [rcx]
   140019e15:	xor    eax,0x5884042b
   140019e1a:	cmp    DWORD PTR [rcx],eax
	...
   140019e28:	(bad)  
   140019e29:	mov    al,0x65
   140019e2b:	jmp    rbp
   140019e2d:	iret   
   140019e2e:	sahf   
   140019e2f:	mov    ebp,0xa8b5ddef
   140019e34:	out    dx,eax
   140019e35:	fdiv   QWORD PTR [rbx-0x48210f4f]
   140019e3b:	mov    bl,0xdf
   140019e3d:	(bad)
   140019e40:	faddp  st(4),st
   140019e42:	mov    ecx,fs
   140019e44:	cmc    
   140019e45:	loopne 0x140019dfb
   140019e47:	fldl2t 
   140019e49:	fnstenv [rax-0x30597f12]
   140019e4f:	clc    
   140019e50:	(bad)  
   140019e51:	jp     0x140019e43
   140019e53:	std    
   140019e54:	outs   dx,DWORD PTR es:[rsi]
   140019e56:	lock jmp QWORD PTR [rsi]
   140019e59:	outs   dx,BYTE PTR ds:[rsi]
   140019e5a:	icebp  
   140019e5b:	jmp    QWORD PTR [rsi]
   140019e5d:	ins    DWORD PTR es:[rdi],dx
   140019e5e:	icebp  
   140019e5f:	jmp    QWORD PTR [rip+0x25fff16c]        # 0x166018fd1
   140019e65:	ins    BYTE PTR es:[rdi],dx
   140019e66:	icebp  
   140019e67:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x166018fd8
   140019e6d:	push   0xfffffffffffffff1
   140019e6f:	jmp    QWORD PTR [rdx+rbp*2]
   140019e72:	icebp  
   140019e73:	jmp    QWORD PTR [rip+0x3efff069]        # 0x17f018ee2
   140019e79:	jnp    0x140019e6c
   140019e7b:	(bad)  
   140019e7c:	push   0xffffffffb8feed96
   140019e81:	mov    edi,0xd0e8fdc7
   140019e86:	fwait
   140019e87:	hlt    
   140019e88:	fadd   st(3),st
   140019e8a:	xchg   ecx,ebp
   140019e8c:	out    0xd1,eax
   140019e8e:	sahf   
   140019e8f:	jrcxz  0x140019e77
   140019e91:	(bad)  
   140019e92:	(bad)  
   140019e93:	in     al,0xe5
   140019e95:	int    0x99
   140019e97:	in     al,0xe4
   140019e99:	int3   
   140019e9a:	xchg   edi,eax
   140019e9b:	in     al,0xe1
   140019e9d:	retf   0xe394
   140019ea0:	repnz loopne 0x140019e5c
   140019ea3:	in     eax,dx
   140019ea4:	int    0x9e
   140019ea6:	cmp    bh,bh
   140019ea8:	fistp  QWORD PTR [rbx-0x240e1589]
   140019eae:	mov    cl,0xf0
   140019eb0:	mov    esp,0xd4ff268e
   140019eb5:	scas   al,BYTE PTR es:[rdi]
   140019eb6:	in     ax,0xf2
   140019eb9:	loope  0x140019e79
   140019ebb:	loopne 0x140019e81
   140019ebd:	xchg   edi,eax
   140019ebe:	xor    bh,ch
   140019ec0:	(bad)  
   140019ec1:	mov    ch,0x71
   140019ec3:	push   rdi
   140019ec4:	sub    al,0xc
   140019ec6:	adc    DWORD PTR [rip+0x81e0a1e],eax        # 0x1481fa8ea
   140019ecc:	and    DWORD PTR [rcx],ebx
   140019ece:	and    DWORD PTR [rax],ecx
   140019ed0:	(bad)  
   140019ed1:	es (bad) 
   140019ed3:	(bad)  
   140019ed4:	sub    esi,DWORD PTR [rax]
   140019ed6:	xor    al,0x7
   140019ed8:	outs   dx,BYTE PTR ds:[rsi]
   140019ed9:	xor    dh,BYTE PTR [rbx]
   140019edb:	add    eax,ebp
   140019edd:	lods   eax,DWORD PTR ds:[rsi]
   140019ede:	movabs eax,ds:0x1
   140019ee7:	add    dh,cl
   140019ee9:	mov    al,0x65
   140019eeb:	jmp    rbp
   140019eed:	iret   
   140019eee:	sahf   
   140019eef:	mov    ebp,0xaab6deef
   140019ef4:	out    dx,eax
   140019ef5:	fdiv   QWORD PTR [rbx-0x48200f4f]
   140019efb:	mov    ch,0xdb
   140019efd:	mov    esi,0xcfe9e683
   140019f02:	(bad)  
   140019f03:	(bad)  
   140019f04:	fmulp  st(7),st
   140019f06:	stos   DWORD PTR es:[rdi],eax
   140019f07:	repz push rdi
   140019f09:	nop
   140019f0a:	loopne 0x140019f06
   140019f0c:	xor    bh,BYTE PTR [rax-0xf]
   140019f0f:	(bad)  
   140019f10:	(bad)  
   140019f11:	jno    0x140019f05
   140019f13:	jmp    QWORD PTR [rdi]
   140019f15:	jo     0x140019f09
   140019f17:	jmp    QWORD PTR [rsi]
   140019f19:	outs   dx,DWORD PTR ds:[rsi]
   140019f1a:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x16601918f
   140019f21:	outs   dx,BYTE PTR ds:[rsi]
   140019f22:	icebp  
   140019f23:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x166019096
   140019f29:	ins    DWORD PTR es:[rdi],dx
   140019f2a:	icebp  
   140019f2b:	jmp    QWORD PTR [rip+0x25fff16d]        # 0x16601909e
   140019f31:	ins    BYTE PTR es:[rdi],dx
   140019f32:	icebp  
   140019f33:	jmp    QWORD PTR [rip+0x25fff16b]        # 0x1660190a4
   140019f39:	imul   esi,ecx,0xffffffff
   140019f3c:	and    ebp,DWORD PTR [rax-0x10]
   140019f3f:	dec    DWORD PTR [rbx+rax*4-0xf]
   140019f43:	(bad)  
   140019f44:	popf   
   140019f45:	mov    dl,0xd4
   140019f47:	cld    
   140019f48:	in     al,0xcf
   140019f4a:	popf   
   140019f4b:	not    esp
   140019f4d:	mov    eax,0xd1e8ea77
   140019f52:	lahf   
   140019f53:	jrcxz  0x140019f3a
   140019f55:	(bad)  
   140019f56:	cdq    
   140019f57:	in     al,0xe5
   140019f59:	int    0x98
   140019f5b:	in     al,0xe1
   140019f5d:	retf   0xe394
   140019f60:	repnz loopne 0x140019f1d
   140019f63:	in     eax,dx
   140019f64:	int    0x9e
   140019f66:	cmp    bh,bh
   140019f68:	fistp  QWORD PTR [rbx-0x240e1589]
   140019f6e:	mov    cl,0xf0
   140019f70:	ret    
   140019f71:	xchg   esp,eax
   140019f72:	cs call rbp
   140019f75:	mov    al,0x67
   140019f77:	in     eax,0xf1
   140019f79:	loope  0x140019f38
   140019f7b:	loopne 0x140019f4b
   140019f7d:	lahf   
   140019f7e:	cmp    edi,edi
   140019f80:	(bad)  
   140019f81:	mov    eax,0x5774
	...
   140019f92:	add    BYTE PTR [rax],al
   140019f94:	rex.W outs dx,DWORD PTR ds:[rsi]
   140019f96:	and    eax,DWORD PTR [rbx]
   140019f98:	and    dh,BYTE PTR [rdi+0x77]
   140019f9b:	add    eax,DWORD PTR [rax]
	...
   140019fa5:	add    BYTE PTR [rax],al
   140019fa7:	add    dh,cl
   140019fa9:	mov    al,0x65
   140019fab:	jmp    rbp
   140019fad:	iret   
   140019fae:	sahf   
   140019faf:	mov    ebp,0xaab6deef
   140019fb4:	out    dx,eax
   140019fb5:	fdiv   QWORD PTR [rdx+rsi*4-0x4c4a2312]
   140019fbc:	jmp    0x140019f8f
   140019fbe:	sahf   
   140019fbf:	out    0xe1,eax
   140019fc1:	int3   
   140019fc2:	movabs ds:0xf1752afbe18a4ff8,eax
   140019fcb:	jmp    QWORD PTR [rbx]
   140019fcd:	jo     0x140019fc1
   140019fcf:	call   QWORD PTR [rcx]
   140019fd1:	gs icebp 
   140019fd3:	call   QWORD PTR [rdx]
   140019fd5:	fs icebp 
   140019fd7:	call   QWORD PTR [rip+0x22fff266]        # 0x163019243
   140019fdd:	ins    BYTE PTR es:[rdi],dx
   140019fde:	bnd jmp QWORD PTR [rip+0x25fff26f]        # 0x166019254
   140019fe5:	outs   dx,DWORD PTR ds:[rsi]
   140019fe6:	bnd jmp QWORD PTR [rsi]
   140019fe9:	outs   dx,DWORD PTR ds:[rsi]
   140019fea:	icebp  
   140019feb:	jmp    QWORD PTR [rip+0x25fff16e]        # 0x16601915f
   140019ff1:	outs   dx,BYTE PTR ds:[rsi]
   140019ff2:	bnd jmp QWORD PTR [rsi]
   140019ff5:	ins    DWORD PTR es:[rdi],dx
   140019ff6:	bnd jmp QWORD PTR [rip+0x25fff16c]        # 0x166019169
   140019ffd:	ins    BYTE PTR es:[rdi],dx
   140019ffe:	icebp  
   140019fff:	jmp    QWORD PTR [rdi]
   14001a001:	ins    DWORD PTR es:[rdi],dx
   14001a002:	icebp  
   14001a003:	dec    DWORD PTR [rcx-0x7e]
   14001a006:	out    dx,eax
   14001a007:	(bad)  
   14001a008:	cdq    
   14001a009:	mov    bl,0xe5
   14001a00b:	(bad)  
   14001a00c:	jmp    0x118fa3fe3
   14001a011:	mov    esi,0xd0e7e97f
   14001a016:	popf   
   14001a017:	jrcxz  0x140019ffe
   14001a019:	int    0x98
   14001a01b:	in     al,0xe2
   14001a01d:	retf   
   14001a01e:	xchg   esp,eax
   14001a01f:	jrcxz  0x14001a013
   14001a021:	loopne 0x140019fdd
   14001a023:	in     eax,dx
   14001a024:	iret   
   14001a025:	movabs eax,ds:0xdbf1ea77bbdfff3d
   14001a02e:	mov    cl,0xf0
   14001a030:	(bad)  
   14001a031:	cdq    
   14001a032:	xor    eax,0x67b0d5ff
   14001a037:	in     eax,0xf0
   14001a039:	loopne 0x140019ff8
   14001a03b:	loopne 0x14001a00b
   14001a03d:	lahf   
   14001a03e:	cmp    bh,bh
   14001a040:	fstp   TBYTE PTR [rbp+0x547d]
	...
   14001a066:	add    BYTE PTR [rax],al
   14001a068:	(bad)  
   14001a069:	mov    al,0x65
   14001a06b:	jmp    rsi
   14001a06d:	iret   
   14001a06e:	sahf   
   14001a06f:	mov    esi,0xaab6deef
   14001a074:	out    dx,al
   14001a075:	fdiv   QWORD PTR [rbx+rsi*4-0x4c472111]
   14001a07c:	lock fsubr QWORD PTR [rsi-0x2076ab16]
   14001a083:	std    
   14001a084:	(bad)  
   14001a085:	ja     0x14001a079
   14001a087:	jmp    QWORD PTR [rbx]
   14001a089:	jb     0x14001a07d
   14001a08b:	jmp    QWORD PTR [rbx+rsi*2]
   14001a08e:	icebp  
   14001a08f:	call   FWORD PTR [rcx-0x3b000943]
   14001a095:	(bad)  
   14001a097:	(bad)  
   14001a098:	js     0x14001a042
   14001a09a:	idiv   bh
   14001a09c:	sub    dh,BYTE PTR [rcx+rsi*8-0x1]
   14001a0a0:	and    ebp,DWORD PTR [rsi-0xe]
   14001a0a3:	jmp    QWORD PTR [rdi+rbp*2]
   14001a0a6:	bnd jmp QWORD PTR [rsi]
   14001a0a9:	jo     0x14001a09d
   14001a0ab:	jmp    QWORD PTR [rsi]
   14001a0ad:	jo     0x14001a0a1
   14001a0af:	jmp    QWORD PTR [rsi]
   14001a0b1:	outs   dx,DWORD PTR ds:[rsi]
   14001a0b2:	bnd jmp QWORD PTR [rsi]
   14001a0b5:	outs   dx,BYTE PTR ds:[rsi]
   14001a0b6:	bnd jmp QWORD PTR [rip+0x25fff26e]        # 0x16601932b
   14001a0bd:	ins    DWORD PTR es:[rdi],dx
   14001a0be:	icebp  
   14001a0bf:	jmp    QWORD PTR [rip+0x27fff16d]        # 0x168019232
   14001a0c5:	ins    BYTE PTR es:[rdi],dx
   14001a0c6:	icebp  
   14001a0c7:	dec    DWORD PTR [rbx-0x79]
   14001a0ca:	icebp  
   14001a0cb:	(bad)  
   14001a0cc:	mov    cl,0xc1
   14001a0ce:	(bad)  
   14001a0d0:	loopne 0x14001a098
   14001a0d2:	(bad)  
   14001a0d3:	repz ffreep st(6)
   14001a0d6:	mov    fs,esi
   14001a0d8:	out    0xcf,al
   14001a0da:	fwait
   14001a0db:	in     al,0xe2
   14001a0dd:	retf   
   14001a0de:	xchg   esp,eax
   14001a0df:	jrcxz  0x14001a0d4
   14001a0e1:	loopne 0x14001a09d
   14001a0e3:	in     eax,dx
   14001a0e4:	(bad)  
   14001a0e5:	movabs eax,ds:0xdbf1ea77bbdfff3c
   14001a0ee:	mov    cl,0xf0
   14001a0f0:	(bad)  
   14001a0f1:	cdq    
   14001a0f2:	xor    eax,0x67afd4ff
   14001a0f7:	in     eax,0xf1
   14001a0f9:	loope  0x14001a0b8
   14001a0fb:	loopne 0x14001a0cc
   14001a0fd:	movabs eax,ds:0x537fbedbff3c
	...
   14001a126:	add    BYTE PTR [rax],al
   14001a128:	(bad)  
   14001a129:	mov    al,0x65
   14001a12b:	jmp    rsi
   14001a12d:	iret   
   14001a12e:	sahf   
   14001a12f:	mov    esi,0xabb6def0
   14001a134:	in     eax,dx
   14001a135:	fdiv   QWORD PTR [rbp-0x441a0654]
   14001a13b:	rcr    BYTE PTR [rbp+0x23f2c1b3],cl
   14001a141:	jne    0x14001a137
   14001a143:	jmp    FWORD PTR [rax]
   14001a145:	js     0x14001a13a
   14001a147:	call   QWORD PTR [rbx]
   14001a149:	push   0xfffffffffffffff2
   14001a14b:	push   QWORD PTR [rbx-0x59]
   14001a14e:	idiv   bh
   14001a150:	(bad)  
   14001a151:	(bad)  
   14001a152:	(bad)  
   14001a153:	(bad)  
   14001a154:	(bad)  
   14001a155:	(bad)  
   14001a156:	(bad)  
   14001a157:	(bad)  
   14001a158:	(bad)  
   14001a159:	(bad)  
   14001a15a:	(bad)  
   14001a15b:	call   rdx
   14001a15d:	jrcxz  0x14001a159
   14001a15f:	dec    DWORD PTR [rbp-0x73]
   14001a162:	repz jmp QWORD PTR [rip+0x23fff272]        # 0x1640193db
   14001a169:	jo     0x14001a15d
   14001a16b:	jmp    QWORD PTR [rbx]
   14001a16d:	jno    0x14001a161
   14001a16f:	jmp    QWORD PTR [rsi]
   14001a171:	jno    0x14001a165
   14001a173:	jmp    QWORD PTR [rsi]
   14001a175:	jo     0x14001a169
   14001a177:	jmp    QWORD PTR [rsi]
   14001a179:	jo     0x14001a16d
   14001a17b:	jmp    QWORD PTR [rsi]
   14001a17d:	outs   dx,DWORD PTR ds:[rsi]
   14001a17e:	bnd jmp QWORD PTR [rsi]
   14001a181:	outs   dx,DWORD PTR ds:[rsi]
   14001a182:	bnd jmp QWORD PTR [rip+0x26fff26e]        # 0x1670193f7
   14001a189:	ins    DWORD PTR es:[rdi],dx
   14001a18a:	icebp  
   14001a18b:	call   FWORD PTR [rcx-0x71]
   14001a18e:	repz dec esi
   14001a191:	retf   0xfbbc
   14001a194:	fnstcw WORD PTR [rbp-0x30191181]
   14001a19a:	fwait
   14001a19b:	jrcxz  0x14001a180
   14001a19d:	int3   
   14001a19e:	xchg   edi,eax
   14001a19f:	jrcxz  0x14001a193
   14001a1a1:	loopne 0x14001a15d
   14001a1a3:	in     eax,dx
   14001a1a4:	(bad)  
   14001a1a5:	movabs eax,ds:0xdbf1ea77bbdfff3c
   14001a1ae:	mov    al,0xf0
   14001a1b0:	(bad)  
   14001a1b1:	cdq    
   14001a1b2:	xor    eax,0x67b0d4ff
   14001a1b7:	in     eax,0xf0
   14001a1b9:	loope  0x14001a178
   14001a1bb:	loopne 0x14001a18c
   14001a1bd:	movabs eax,ds:0x5886c2ddff3c
	...
   14001a1e6:	add    BYTE PTR [rax],al
   14001a1e8:	(bad)  
   14001a1e9:	mov    al,0x65
   14001a1eb:	jmp    rsi
   14001a1ed:	iret   
   14001a1ee:	sahf   
   14001a1ef:	mov    esi,0xa9b5ddef
   14001a1f4:	icebp  
   14001a1f5:	loopne 0x14001a1af
   14001a1f7:	mov    ch,0xe6
   14001a1f9:	xlat   BYTE PTR ds:[rbx]
   14001a1fa:	mov    cl,0xee
   14001a1fc:	cs xor ecx,0xf37927fb
   14001a203:	jmp    FWORD PTR [rax]
   14001a205:	js     0x14001a1fa
   14001a207:	call   QWORD PTR [rcx]
   14001a209:	push   0xfffffffffffffff2
   14001a20b:	call   FWORD PTR [rdx-0x10940]
   14001a211:	(bad)  
   14001a212:	(bad)  
   14001a213:	(bad)  
   14001a214:	(bad)  
   14001a215:	(bad)  
   14001a216:	(bad)  
   14001a217:	(bad)  
   14001a218:	(bad)  
   14001a219:	(bad)  
   14001a21a:	(bad)  
   14001a21b:	(bad)  
   14001a21c:	(bad)  
   14001a21d:	(bad)  
   14001a21e:	(bad)  
   14001a21f:	(bad)  
   14001a220:	stc    
   14001a221:	sti    
   14001a222:	(bad)  
   14001a223:	call   FWORD PTR [rdx+0x33fff7bf]
   14001a229:	jge    0x14001a21d
   14001a22b:	jmp    QWORD PTR [rip+0x23fff372]        # 0x1640195a3
   14001a231:	jo     0x14001a225
   14001a233:	jmp    QWORD PTR [rbx]
   14001a235:	jno    0x14001a229
   14001a237:	jmp    QWORD PTR [rsi]
   14001a239:	jb     0x14001a22d
   14001a23b:	jmp    QWORD PTR [rsi]
   14001a23d:	jno    0x14001a231
   14001a23f:	jmp    QWORD PTR [rsi]
   14001a241:	jno    0x14001a235
   14001a243:	jmp    QWORD PTR [rsi]
   14001a245:	jo     0x14001a239
   14001a247:	jmp    QWORD PTR [rsi]
   14001a249:	jo     0x14001a23d
   14001a24b:	jmp    FWORD PTR [rdi]
   14001a24d:	jne    0x14001a23e
   14001a24f:	dec    DWORD PTR [rbp-0x27021550]
   14001a255:	ret    
   14001a256:	xchg   esp,eax
   14001a257:	hlt    
   14001a258:	fnstcw WORD PTR [rdi-0x311a177e]
   14001a25e:	(bad)  
   14001a25f:	loop   0x14001a253
   14001a261:	loopne 0x14001a21d
   14001a263:	in     eax,dx
   14001a264:	(bad)  
   14001a265:	movabs eax,ds:0xdbf0ec78bce1ff3c
   14001a26e:	mov    cl,0xef
   14001a270:	(bad)  
   14001a271:	cdq    
   14001a272:	xor    eax,0x67b0d4ff
   14001a277:	in     eax,0xf0
   14001a279:	loope  0x14001a238
   14001a27b:	loopne 0x14001a24c
   14001a27d:	movabs eax,ds:0x5886c2ddff3c
	...
   14001a2a6:	add    BYTE PTR [rax],al
   14001a2a8:	iret   
   14001a2a9:	mov    al,0x67
   14001a2ab:	(bad)  
   14001a2ac:	call   0x130c14884
   14001a2b1:	fidivr WORD PTR [rcx-0x4a1e0a5c]
   14001a2b7:	int3   
   14001a2b8:	and    DWORD PTR [rbx+0x7923f9ce],0xfffffff4
   14001a2bf:	jmp    FWORD PTR [rax]
   14001a2c1:	jnp    0x14001a2b6
   14001a2c3:	jmp    FWORD PTR [rax]
   14001a2c5:	jp     0x14001a2ba
   14001a2c7:	call   QWORD PTR [rax]
   14001a2c9:	ins    DWORD PTR es:[rdi],dx
   14001a2ca:	bnd jmp QWORD PTR [rdx-0x10a3a]
   14001a2d1:	(bad)  
   14001a2d2:	(bad)  
   14001a2d3:	(bad)  
   14001a2d4:	(bad)  
   14001a2d5:	(bad)  
   14001a2d6:	(bad)  
   14001a2d7:	(bad)  
   14001a2d8:	(bad)  
   14001a2d9:	(bad)  
   14001a2da:	(bad)  
   14001a2db:	(bad)  
   14001a2dc:	(bad)  
   14001a2dd:	(bad)  
   14001a2de:	(bad)  
   14001a2df:	(bad)  
   14001a2e0:	(bad)  
   14001a2e1:	(bad)  
   14001a2e2:	(bad)  
   14001a2e3:	(bad)  
   14001a2e4:	(bad)  
   14001a2e5:	(bad)  
   14001a2e6:	(bad)  
   14001a2e7:	(bad)  
   14001a2e8:	fsub   st,st(7)
   14001a2ea:	sti    
   14001a2eb:	jmp    FWORD PTR [rdx-0x60]
   14001a2ee:	hlt    
   14001a2ef:	jmp    FWORD PTR [rip+0x28fff378]        # 0x16901966d
   14001a2f5:	jne    0x14001a2ea
   14001a2f7:	jmp    QWORD PTR [rdx]
   14001a2f9:	jb     0x14001a2ed
   14001a2fb:	jmp    QWORD PTR [rsi]
   14001a2fd:	jae    0x14001a2f1
   14001a2ff:	jmp    QWORD PTR [rsi]
   14001a301:	jae    0x14001a2f5
   14001a303:	jmp    QWORD PTR [rsi]
   14001a305:	jb     0x14001a2f9
   14001a307:	jmp    QWORD PTR [rsi]
   14001a309:	jno    0x14001a2fd
   14001a30b:	jmp    FWORD PTR [rdx]
   14001a30d:	je     0x14001a300
   14001a30f:	call   QWORD PTR [rdi-0x74]
   14001a312:	out    0xfe,al
   14001a314:	mov    bl,0xb8
   14001a316:	mov    ch,0xf9
   14001a318:	(bad)  
   14001a319:	mov    ecx,0xcee6ee76
   14001a31e:	(bad)  
   14001a31f:	loop   0x14001a313
   14001a321:	loopne 0x14001a2dd
   14001a323:	in     eax,dx
   14001a324:	(bad)  
   14001a325:	movabs eax,ds:0xdaeee874badeff3c
   14001a32e:	mov    al,0xed
   14001a330:	(bad)  
   14001a331:	cdq    
   14001a332:	xor    eax,0x67b0d4ff
   14001a337:	in     eax,0xf0
   14001a339:	loope  0x14001a2f8
   14001a33b:	loopne 0x14001a30c
   14001a33d:	movabs eax,ds:0x5886c2ddff3c
	...
   14001a366:	add    BYTE PTR [rax],al
   14001a368:	(bad)  
   14001a369:	mov    al,0x65
   14001a36b:	(bad)  
   14001a36c:	call   0x131c14b45
   14001a371:	loop   0x14001a335
   14001a373:	movabs ds:0xffff771deab4def1,al
   14001a37c:	(bad)  
   14001a37d:	jge    0x14001a372
   14001a37f:	jmp    FWORD PTR [rax]
   14001a381:	jge    0x14001a377
   14001a383:	jmp    FWORD PTR [rax]
   14001a385:	jl     0x14001a37a
   14001a387:	call   QWORD PTR [rcx]
   14001a389:	ins    DWORD PTR es:[rdi],dx
   14001a38a:	bnd jmp QWORD PTR [rax-0x10a3a]
   14001a391:	(bad)  
   14001a392:	(bad)  
   14001a393:	(bad)  
   14001a394:	(bad)  
   14001a395:	(bad)  
   14001a396:	(bad)  
   14001a397:	(bad)  
   14001a398:	(bad)  
   14001a399:	(bad)  
   14001a39a:	(bad)  
   14001a39b:	(bad)  
   14001a39c:	(bad)  
   14001a39d:	(bad)  
   14001a39e:	(bad)  
   14001a39f:	(bad)  
   14001a3a0:	(bad)  
   14001a3a1:	(bad)  
   14001a3a2:	(bad)  
   14001a3a3:	(bad)  
   14001a3a4:	(bad)  
   14001a3a5:	(bad)  
   14001a3a6:	(bad)  
   14001a3a7:	(bad)  
   14001a3a8:	(bad)  
   14001a3a9:	(bad)  
   14001a3aa:	(bad)  
   14001a3ab:	(bad)  
   14001a3ac:	(bad)  
   14001a3ad:	(bad)  
   14001a3ae:	(bad)  
   14001a3af:	call   FWORD PTR [rdi+0x44fff8c3]
   14001a3b5:	mov    ebx,esi
   14001a3b7:	jmp    FWORD PTR [rdx]
   14001a3b9:	js     0x14001a3ae
   14001a3bb:	jmp    QWORD PTR [rsi]
   14001a3bd:	je     0x14001a3b1
   14001a3bf:	jmp    QWORD PTR [rdx+rsi*2]
   14001a3c2:	bnd jmp QWORD PTR [rsi]
   14001a3c5:	je     0x14001a3b9
   14001a3c7:	jmp    QWORD PTR [rsi]
   14001a3c9:	jae    0x14001a3bd
   14001a3cb:	jmp    FWORD PTR [rcx]
   14001a3cd:	je     0x14001a3c0
   14001a3cf:	(bad)  
   14001a3d0:	cmp    BYTE PTR [rcx+rbp*8-0x2],bh
   14001a3d4:	popf   
   14001a3d5:	mov    ecx,0xbcd5fcdf
   14001a3da:	xor    ecx,0xffffffe0
   14001a3dd:	enter  0xe38f,0xf3
   14001a3e1:	loope  0x14001a39e
   14001a3e3:	in     eax,dx
   14001a3e4:	(bad)  
   14001a3e5:	movabs eax,ds:0xd9eee773b9ddff3c
   14001a3ee:	mov    al,0xee
   14001a3f0:	(bad)  
   14001a3f1:	cdq    
   14001a3f2:	xor    eax,0x67b0d4ff
   14001a3f7:	in     eax,0xf0
   14001a3f9:	loope  0x14001a3b8
   14001a3fb:	loopne 0x14001a3cc
   14001a3fd:	movabs eax,ds:0x5886c2ddff3c
	...
   14001a426:	add    BYTE PTR [rax],al
   14001a428:	(bad)  
   14001a429:	mov    al,0x65
   14001a42b:	(bad)  
   14001a42c:	call   0x134bd4e05
   14001a431:	jrcxz  0x14001a3f5
   14001a433:	scas   eax,DWORD PTR es:[rdi]
   14001a434:	retf   
   14001a435:	(bad)  
   14001a436:	mov    ebp,0xfc7a18ff
   14001a43b:	jmp    FWORD PTR [rcx]
   14001a43d:	jg     0x14001a434
   14001a43f:	jmp    QWORD PTR [rdi]
   14001a441:	jle    0x14001a438
   14001a443:	jmp    FWORD PTR [rax]
   14001a445:	jg     0x14001a43b
   14001a447:	call   QWORD PTR [rcx]
   14001a449:	outs   dx,DWORD PTR ds:[rsi]
   14001a44a:	hlt    
   14001a44b:	jmp    QWORD PTR [rbx-0x10938]
   14001a451:	(bad)  
   14001a452:	(bad)  
   14001a453:	(bad)  
   14001a454:	(bad)  
   14001a455:	(bad)  
   14001a456:	(bad)  
   14001a457:	(bad)  
   14001a458:	(bad)  
   14001a459:	(bad)  
   14001a45a:	(bad)  
   14001a45b:	(bad)  
   14001a45c:	(bad)  
   14001a45d:	(bad)  
   14001a45e:	(bad)  
   14001a45f:	(bad)  
   14001a460:	(bad)  
   14001a461:	(bad)  
   14001a462:	(bad)  
   14001a463:	(bad)  
   14001a464:	(bad)  
   14001a465:	(bad)  
   14001a466:	(bad)  
   14001a467:	(bad)  
   14001a468:	(bad)  
   14001a469:	(bad)  
   14001a46a:	(bad)  
   14001a46b:	(bad)  
   14001a46c:	(bad)  
   14001a46d:	(bad)  
   14001a46e:	(bad)  
   14001a46f:	(bad)  
   14001a470:	(bad)  
   14001a471:	(bad)  
   14001a472:	(bad)  
   14001a473:	push   rcx
   14001a475:	idiv   ah
   14001a477:	jmp    FWORD PTR [rsi-0x5c]
   14001a47a:	hlt    
   14001a47b:	push   QWORD PTR [rcx]
   14001a47d:	jle    0x14001a473
   14001a47f:	jmp    FWORD PTR [rcx+rdi*2]
   14001a482:	repz jmp QWORD PTR [rbx]
   14001a485:	je     0x14001a479
   14001a487:	jmp    QWORD PTR [rsp+rsi*2]
   14001a48a:	bnd jmp QWORD PTR [rdi]
   14001a48d:	jne    0x14001a481
   14001a48f:	jmp    FWORD PTR [rsi]
   14001a491:	js     0x14001a484
   14001a493:	push   QWORD PTR [rsi-0x5e]
   14001a496:	out    0xfe,al
   14001a498:	int3   
   14001a499:	mov    esp,0xbad5f695
   14001a49e:	jns    0x14001a487
   14001a4a0:	hlt    
   14001a4a1:	loop   0x14001a45f
   14001a4a3:	in     eax,dx
   14001a4a4:	(bad)  
   14001a4a5:	movabs eax,ds:0xdaeee773b9ddff3c
   14001a4ae:	mov    al,0xee
   14001a4b0:	(bad)  
   14001a4b1:	cdq    
   14001a4b2:	xor    eax,0x67b0d4ff
   14001a4b7:	in     eax,0xf0
   14001a4b9:	loope  0x14001a478
   14001a4bb:	loopne 0x14001a48c
   14001a4bd:	movabs eax,ds:0x5886c2ddff3c
	...
   14001a4e6:	add    BYTE PTR [rax],al
   14001a4e8:	(bad)  
   14001a4e9:	mov    al,0x65
   14001a4eb:	(bad)  
   14001a4ec:	jmp    0x135ba52c7
   14001a4f1:	in     al,0xbf
   14001a4f3:	ror    BYTE PTR [rsi+riz*4+0x7e1fffd6],0xf9
   14001a4fb:	jmp    FWORD PTR [rax]
   14001a4fd:	xor    ch,0xff
   14001a500:	sub    BYTE PTR [rax+0x7f29fff5],al
   14001a506:	cmc    
   14001a507:	call   QWORD PTR [rcx]
   14001a509:	jno    0x14001a4ff
   14001a50b:	jmp    QWORD PTR [rbp-0x10936]
   14001a511:	(bad)  
   14001a512:	(bad)  
   14001a513:	(bad)  
   14001a514:	(bad)  
   14001a515:	(bad)  
   14001a516:	(bad)  
   14001a517:	(bad)  
   14001a518:	(bad)  
   14001a519:	(bad)  
   14001a51a:	(bad)  
   14001a51b:	(bad)  
   14001a51c:	(bad)  
   14001a51d:	(bad)  
   14001a51e:	(bad)  
   14001a51f:	(bad)  
   14001a520:	(bad)  
   14001a521:	(bad)  
   14001a522:	(bad)  
   14001a523:	(bad)  
   14001a524:	(bad)  
   14001a525:	(bad)  
   14001a526:	(bad)  
   14001a527:	(bad)  
   14001a528:	(bad)  
   14001a529:	(bad)  
   14001a52a:	(bad)  
   14001a52b:	(bad)  
   14001a52c:	(bad)  
   14001a52d:	(bad)  
   14001a52e:	(bad)  
   14001a52f:	(bad)  
   14001a530:	(bad)  
   14001a531:	(bad)  
   14001a532:	(bad)  
   14001a533:	(bad)  
   14001a534:	(bad)  
   14001a535:	(bad)  
   14001a536:	(bad)  
   14001a537:	(bad)  
   14001a538:	(bad)  
   14001a539:	(bad)  
   14001a53a:	(bad)  
   14001a53b:	push   QWORD PTR [rsi+0x51fff9d1]
   14001a541:	xchg   ecx,eax
   14001a542:	repz push QWORD PTR [rbx]
   14001a545:	jg     0x14001a53b
   14001a547:	jmp    FWORD PTR [rdx+rdi*2]
   14001a54a:	repz jmp QWORD PTR [rip+0x23fff274]        # 0x1640197c5
   14001a551:	jno    0x14001a544
   14001a553:	dec    DWORD PTR [rsi-0x6d]
   14001a556:	(bad)  
   14001a557:	dec    edx
   14001a559:	(bad)  
   14001a55a:	scas   eax,DWORD PTR es:[rdi]
   14001a55b:	stc    
   14001a55c:	shl    DWORD PTR [rbp-0x1d0b1591],1
   14001a562:	mov    esp,0x3ca1ceed
   14001a567:	(bad)  
   14001a568:	fnstsw WORD PTR [rdx-0x2611188c]
   14001a56e:	mov    al,0xee
   14001a570:	(bad)  
   14001a571:	cdq    
   14001a572:	xor    eax,0x67b0d4ff
   14001a577:	in     eax,0xf0
   14001a579:	loope  0x14001a538
   14001a57b:	loopne 0x14001a54c
   14001a57d:	movabs eax,ds:0x5988c3deff3c
	...
   14001a5a6:	add    BYTE PTR [rax],al
   14001a5a8:	(bad)  
   14001a5a9:	mov    al,0x65
   14001a5ab:	(bad)  
   14001a5ac:	(bad)  
   14001a5ad:	xlat   BYTE PTR ds:[rbx]
   14001a5ae:	scas   eax,DWORD PTR es:[rdi]
   14001a5af:	mov    ch,0xf6
   14001a5b1:	in     al,0xbf
   14001a5b3:	rcl    BYTE PTR [rcx-0x72],1
   14001a5b6:	out    dx,eax
   14001a5b7:	jmp    QWORD PTR [rdx+rax*4]
   14001a5ba:	idiv   bh
   14001a5bc:	sub    BYTE PTR [rdx-0x7dd7000b],al
   14001a5c2:	cmc    
   14001a5c3:	jmp    FWORD PTR [rcx]
   14001a5c5:	xor    ebp,0xf47211ff
   14001a5cb:	jmp    QWORD PTR [rsi-0x10835]
   14001a5d1:	(bad)  
   14001a5d2:	(bad)  
   14001a5d3:	(bad)  
   14001a5d4:	(bad)  
   14001a5d5:	(bad)  
   14001a5d6:	(bad)  
   14001a5d7:	(bad)  
   14001a5d8:	(bad)  
   14001a5d9:	(bad)  
   14001a5da:	(bad)  
   14001a5db:	(bad)  
   14001a5dc:	(bad)  
   14001a5dd:	(bad)  
   14001a5de:	(bad)  
   14001a5df:	(bad)  
   14001a5e0:	(bad)  
   14001a5e1:	(bad)  
   14001a5e2:	(bad)  
   14001a5e3:	(bad)  
   14001a5e4:	(bad)  
   14001a5e5:	(bad)  
   14001a5e6:	(bad)  
   14001a5e7:	(bad)  
   14001a5e8:	(bad)  
   14001a5e9:	(bad)  
   14001a5ea:	(bad)  
   14001a5eb:	(bad)  
   14001a5ec:	(bad)  
   14001a5ed:	(bad)  
   14001a5ee:	(bad)  
   14001a5ef:	(bad)  
   14001a5f0:	(bad)  
   14001a5f1:	(bad)  
   14001a5f2:	(bad)  
   14001a5f3:	(bad)  
   14001a5f4:	(bad)  
   14001a5f5:	(bad)  
   14001a5f6:	(bad)  
   14001a5f7:	(bad)  
   14001a5f8:	(bad)  
   14001a5f9:	(bad)  
   14001a5fa:	(bad)  
   14001a5fb:	(bad)  
   14001a5fc:	(bad)  
   14001a5fd:	(bad)  
   14001a5fe:	(bad)  
   14001a5ff:	push   rsp
   14001a601:	clc    
   14001a602:	std    
   14001a603:	jmp    FWORD PTR [rbx-0x5d]
   14001a606:	idiv   bh
   14001a608:	cmp    eax,DWORD PTR [rbp+0x7826fff4]
   14001a60e:	repz jmp QWORD PTR [rsi*2-0x7ccf000e]
   14001a616:	(bad)  
   14001a617:	(bad)  
   14001a618:	mov    edi,0xd0fbc3c4
   14001a61d:	mov    ch,0x6f
   14001a61f:	in     al,dx
   14001a620:	hlt    
   14001a621:	loop   0x14001a5df
   14001a623:	in     eax,dx
   14001a624:	(bad)  
   14001a625:	movabs eax,ds:0xd9eee774baddff3c
   14001a62e:	mov    al,0xee
   14001a630:	(bad)  
   14001a631:	cdq    
   14001a632:	xor    eax,0x67b0d4ff
   14001a637:	in     eax,0xf0
   14001a639:	loope  0x14001a5f8
   14001a63b:	loopne 0x14001a60c
   14001a63d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001a666:	add    BYTE PTR [rax],al
   14001a668:	(bad)  
   14001a669:	mov    al,0x65
   14001a66b:	(bad)  
   14001a66c:	(bad)  
   14001a66d:	fdiv   DWORD PTR [rax-0x421d0b4c]
   14001a673:	fisubr DWORD PTR [rcx]
   14001a675:	cmp    edi,0xf68427ff
   14001a67b:	jmp    FWORD PTR [rcx]
   14001a67d:	xor    ebp,0xffffffff
   14001a680:	sub    DWORD PTR [rbx-0x7bd5000b],eax
   14001a686:	cmc    
   14001a687:	call   QWORD PTR [rdx]
   14001a689:	jne    0x14001a67f
   14001a68b:	jmp    QWORD PTR [rsi-0x10835]
   14001a691:	(bad)  
   14001a692:	(bad)  
   14001a693:	(bad)  
   14001a694:	(bad)  
   14001a695:	(bad)  
   14001a696:	(bad)  
   14001a697:	(bad)  
   14001a698:	(bad)  
   14001a699:	(bad)  
   14001a69a:	(bad)  
   14001a69b:	(bad)  
   14001a69c:	(bad)  
   14001a69d:	(bad)  
   14001a69e:	(bad)  
   14001a69f:	(bad)  
   14001a6a0:	(bad)  
   14001a6a1:	(bad)  
   14001a6a2:	(bad)  
   14001a6a3:	(bad)  
   14001a6a4:	(bad)  
   14001a6a5:	(bad)  
   14001a6a6:	(bad)  
   14001a6a7:	(bad)  
   14001a6a8:	(bad)  
   14001a6a9:	(bad)  
   14001a6aa:	(bad)  
   14001a6ab:	(bad)  
   14001a6ac:	(bad)  
   14001a6ad:	(bad)  
   14001a6ae:	(bad)  
   14001a6af:	(bad)  
   14001a6b0:	(bad)  
   14001a6b1:	(bad)  
   14001a6b2:	(bad)  
   14001a6b3:	(bad)  
   14001a6b4:	(bad)  
   14001a6b5:	(bad)  
   14001a6b6:	(bad)  
   14001a6b7:	(bad)  
   14001a6b8:	(bad)  
   14001a6b9:	(bad)  
   14001a6ba:	(bad)  
   14001a6bb:	(bad)  
   14001a6bc:	(bad)  
   14001a6bd:	(bad)  
   14001a6be:	(bad)  
   14001a6bf:	(bad)  
   14001a6c0:	(bad)  
   14001a6c1:	(bad)  
   14001a6c2:	(bad)  
   14001a6c3:	(bad)  
   14001a6c4:	(bad)  
   14001a6c5:	(bad)  
   14001a6c6:	std    
   14001a6c7:	call   QWORD PTR [rdi-0x68]
   14001a6ca:	repnz jmp FWORD PTR [rsp+rdi*2]
   14001a6ce:	repz jmp QWORD PTR [rdi+rsi*2]
   14001a6d2:	bnd jmp QWORD PTR [rsi]
   14001a6d5:	jg     0x14001a6d6
   14001a6d7:	push   QWORD PTR [rbp-0x31043440]
   14001a6dd:	mov    bl,0x68
   14001a6df:	in     eax,dx
   14001a6e0:	repz loope 0x14001a69e
   14001a6e3:	in     eax,dx
   14001a6e4:	(bad)  
   14001a6e5:	movabs eax,ds:0xdaeee774baddff3c
   14001a6ee:	mov    al,0xee
   14001a6f0:	(bad)  
   14001a6f1:	cdq    
   14001a6f2:	xor    eax,0x67b0d4ff
   14001a6f7:	in     eax,0xf0
   14001a6f9:	loope  0x14001a6b8
   14001a6fb:	loopne 0x14001a6cc
   14001a6fd:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001a726:	add    BYTE PTR [rax],al
   14001a728:	(bad)  
   14001a729:	mov    al,0x65
   14001a72b:	(bad)  
   14001a72c:	jmp    0x14001a708
   14001a72e:	mov    bl,0xb3
   14001a730:	icebp  
   14001a731:	fbstp  TBYTE PTR [rdi-0x7cd625]
   14001a737:	jmp    FWORD PTR [rax]
   14001a739:	xchg   dh,dh
   14001a73b:	jmp    FWORD PTR [rcx]
   14001a73d:	test   esi,esi
   14001a73f:	jmp    FWORD PTR [rcx]
   14001a741:	test   ch,dh
   14001a743:	jmp    FWORD PTR [rcx]
   14001a745:	test   ch,dh
   14001a747:	call   QWORD PTR [rdx]
   14001a749:	ja     0x14001a740
   14001a74b:	jmp    QWORD PTR [rdi-0x534]
   14001a751:	(bad)  
   14001a752:	(bad)  
   14001a753:	(bad)  
   14001a754:	(bad)  
   14001a755:	(bad)  
   14001a756:	(bad)  
   14001a757:	(bad)  
   14001a758:	(bad)  
   14001a759:	(bad)  
   14001a75a:	(bad)  
   14001a75b:	(bad)  
   14001a75c:	(bad)  
   14001a75d:	(bad)  
   14001a75e:	(bad)  
   14001a75f:	(bad)  
   14001a760:	(bad)  
   14001a761:	(bad)  
   14001a762:	(bad)  
   14001a763:	(bad)  
   14001a764:	(bad)  
   14001a765:	(bad)  
   14001a766:	(bad)  
   14001a767:	(bad)  
   14001a768:	(bad)  
   14001a769:	(bad)  
   14001a76a:	(bad)  
   14001a76b:	(bad)  
   14001a76c:	(bad)  
   14001a76d:	(bad)  
   14001a76e:	(bad)  
   14001a76f:	(bad)  
   14001a770:	(bad)  
   14001a771:	(bad)  
   14001a772:	(bad)  
   14001a773:	(bad)  
   14001a774:	(bad)  
   14001a775:	(bad)  
   14001a776:	(bad)  
   14001a777:	(bad)  
   14001a778:	(bad)  
   14001a779:	(bad)  
   14001a77a:	(bad)  
   14001a77b:	(bad)  
   14001a77c:	(bad)  
   14001a77d:	(bad)  
   14001a77e:	(bad)  
   14001a77f:	(bad)  
   14001a780:	(bad)  
   14001a781:	(bad)  
   14001a782:	(bad)  
   14001a783:	(bad)  
   14001a784:	(bad)  
   14001a785:	(bad)  
   14001a786:	(bad)  
   14001a787:	jmp    FWORD PTR [rsi-0x5a]
   14001a78a:	hlt    
   14001a78b:	jmp    FWORD PTR [rdi]
   14001a78d:	xor    ah,0xff
   14001a790:	and    al,0x78
   14001a792:	icebp  
   14001a793:	jmp    QWORD PTR [rip+0xffffffffb2ffff7e]        # 0xf301a717
   14001a799:	ror    esp,0xfc
   14001a79c:	(bad)  
   14001a79d:	mov    bl,0x68
   14001a79f:	in     eax,dx
   14001a7a0:	repz loope 0x14001a75e
   14001a7a3:	in     eax,dx
   14001a7a4:	(bad)  
   14001a7a5:	movabs eax,ds:0xdaeee774baddff3c
   14001a7ae:	mov    al,0xee
   14001a7b0:	(bad)  
   14001a7b1:	cdq    
   14001a7b2:	xor    eax,0x67b0d4ff
   14001a7b7:	in     eax,0xf0
   14001a7b9:	loope  0x14001a778
   14001a7bb:	loopne 0x14001a78c
   14001a7bd:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001a7e6:	add    BYTE PTR [rax],al
   14001a7e8:	(bad)  
   14001a7e9:	mov    al,0x65
   14001a7eb:	(bad)  
   14001a7ec:	in     al,dx
   14001a7ed:	(bad)  [rsi-0x441f0d4e]
   14001a7f3:	fsubr  DWORD PTR [rcx]
   14001a7f5:	test   bh,bh
   14001a7f7:	jmp    FWORD PTR [rax]
   14001a7f9:	xchg   edi,esi
   14001a7fb:	jmp    FWORD PTR [rcx]
   14001a7fd:	xchg   esi,esi
   14001a7ff:	jmp    FWORD PTR [rcx]
   14001a801:	xchg   esi,esi
   14001a803:	jmp    FWORD PTR [rdx]
   14001a805:	test   esi,esi
   14001a807:	call   QWORD PTR [rbx]
   14001a809:	jns    0x14001a800
   14001a80b:	jmp    QWORD PTR [rbp-0x535]
   14001a811:	(bad)  
   14001a812:	(bad)  
   14001a813:	(bad)  
   14001a814:	(bad)  
   14001a815:	(bad)  
   14001a816:	(bad)  
   14001a817:	(bad)  
   14001a818:	(bad)  
   14001a819:	(bad)  
   14001a81a:	(bad)  
   14001a81b:	(bad)  
   14001a81c:	(bad)  
   14001a81d:	(bad)  
   14001a81e:	(bad)  
   14001a81f:	(bad)  
   14001a820:	(bad)  
   14001a821:	(bad)  
   14001a822:	(bad)  
   14001a823:	(bad)  
   14001a824:	(bad)  
   14001a825:	(bad)  
   14001a826:	(bad)  
   14001a827:	(bad)  
   14001a828:	(bad)  
   14001a829:	(bad)  
   14001a82a:	(bad)  
   14001a82b:	(bad)  
   14001a82c:	(bad)  
   14001a82d:	(bad)  
   14001a82e:	(bad)  
   14001a82f:	(bad)  
   14001a830:	(bad)  
   14001a831:	(bad)  
   14001a832:	(bad)  
   14001a833:	(bad)  
   14001a834:	(bad)  
   14001a835:	(bad)  
   14001a836:	(bad)  
   14001a837:	(bad)  
   14001a838:	(bad)  
   14001a839:	(bad)  
   14001a83a:	(bad)  
   14001a83b:	(bad)  
   14001a83c:	(bad)  
   14001a83d:	(bad)  
   14001a83e:	(bad)  
   14001a83f:	(bad)  
   14001a840:	(bad)  
   14001a841:	(bad)  
   14001a842:	(bad)  
   14001a843:	(bad)  
   14001a844:	mov    eax,0x5dfffad4
   14001a849:	sahf   
   14001a84a:	idiv   edi
   14001a84c:	sub    eax,0x24fff47f
   14001a851:	jp     0x14001a845
   14001a853:	jmp    FWORD PTR [rsi]
   14001a855:	xchg   bh,bh
   14001a857:	inc    eax
   14001a859:	(bad)
   14001a85c:	int    0xb1
   14001a85e:	(bad)  
   14001a85f:	in     eax,dx
   14001a860:	repz loope 0x14001a81e
   14001a863:	in     eax,dx
   14001a864:	(bad)  
   14001a865:	movabs eax,ds:0xdaeee774baddff3c
   14001a86e:	mov    al,0xee
   14001a870:	(bad)  
   14001a871:	cdq    
   14001a872:	xor    eax,0x67b0d5ff
   14001a877:	in     eax,0xf0
   14001a879:	loopne 0x14001a838
   14001a87b:	loopne 0x14001a84c
   14001a87d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001a8a6:	add    BYTE PTR [rax],al
   14001a8a8:	(bad)  
   14001a8a9:	mov    al,0x65
   14001a8ab:	(bad)  
   14001a8ac:	in     al,dx
   14001a8ad:	fdiv   QWORD PTR [rsi-0x441f0e4d]
   14001a8b3:	(bad)  
   14001a8b4:	rex.XB (bad) 
   14001a8b6:	cmc    
   14001a8b7:	jmp    QWORD PTR [rdi]
   14001a8b9:	mov    al,bh
   14001a8bb:	jmp    FWORD PTR [rcx]
   14001a8bd:	mov    dh,dh
   14001a8bf:	jmp    FWORD PTR [rcx]
   14001a8c1:	mov    dh,dh
   14001a8c3:	jmp    FWORD PTR [rdx]
   14001a8c5:	mov    dh,dh
   14001a8c7:	call   QWORD PTR [rbx]
   14001a8c9:	jnp    0x14001a8c1
   14001a8cb:	push   QWORD PTR [rdx-0x52d]
   14001a8d1:	(bad)  
   14001a8d2:	(bad)  
   14001a8d3:	(bad)  
   14001a8d4:	(bad)  
   14001a8d5:	(bad)  
   14001a8d6:	(bad)  
   14001a8d7:	(bad)  
   14001a8d8:	(bad)  
   14001a8d9:	(bad)  
   14001a8da:	(bad)  
   14001a8db:	(bad)  
   14001a8dc:	(bad)  
   14001a8dd:	(bad)  
   14001a8de:	(bad)  
   14001a8df:	(bad)  
   14001a8e0:	(bad)  
   14001a8e1:	(bad)  
   14001a8e2:	(bad)  
   14001a8e3:	(bad)  
   14001a8e4:	(bad)  
   14001a8e5:	(bad)  
   14001a8e6:	(bad)  
   14001a8e7:	(bad)  
   14001a8e8:	(bad)  
   14001a8e9:	(bad)  
   14001a8ea:	(bad)  
   14001a8eb:	(bad)  
   14001a8ec:	(bad)  
   14001a8ed:	(bad)  
   14001a8ee:	(bad)  
   14001a8ef:	(bad)  
   14001a8f0:	(bad)  
   14001a8f1:	(bad)  
   14001a8f2:	(bad)  
   14001a8f3:	(bad)  
   14001a8f4:	(bad)  
   14001a8f5:	(bad)  
   14001a8f6:	(bad)  
   14001a8f7:	(bad)  
   14001a8f8:	(bad)  
   14001a8f9:	(bad)  
   14001a8fa:	(bad)  
   14001a8fb:	push   rcx
   14001a8fd:	idiv   ch
   14001a8ff:	inc    DWORD PTR [rdi+0x56fff8b8]
   14001a905:	fwait
   14001a906:	idiv   edi
   14001a908:	cmp    ecx,DWORD PTR [rbx+0x7d24fff6]
   14001a90e:	hlt    
   14001a90f:	jmp    QWORD PTR [rbx]
   14001a911:	jp     0x14001a906
   14001a913:	inc    DWORD PTR [rsi-0x6b]
   14001a916:	std    
   14001a917:	dec    esp
   14001a919:	(bad)  
   14001a91a:	mov    ah,0xfa
   14001a91c:	leave  
   14001a91d:	lods   al,BYTE PTR ds:[rsi]
   14001a91e:	push   rdi
   14001a91f:	jmp    0x14001a915
   14001a921:	loop   0x14001a8de
   14001a923:	in     eax,dx
   14001a924:	(bad)  
   14001a925:	movabs eax,ds:0xdaeee774baddff3c
   14001a92e:	mov    al,0xee
   14001a930:	(bad)  
   14001a931:	cdq    
   14001a932:	xor    eax,0x67b0d5ff
   14001a937:	in     eax,0xf1
   14001a939:	loopne 0x14001a8f8
   14001a93b:	loopne 0x14001a90c
   14001a93d:	movabs eax,ds:0x5e8ec6dfff3c
	...
   14001a966:	add    BYTE PTR [rax],al
   14001a968:	(bad)  
   14001a969:	mov    al,0x65
   14001a96b:	(bad)  
   14001a96c:	in     eax,dx
   14001a96d:	fdiv   QWORD PTR [rdi-0x411f0f4b]
   14001a973:	mov    ebp,0xffd3a383
   14001a978:	and    cl,BYTE PTR [rbx-0x75d50002]
   14001a97e:	idiv   bh
   14001a980:	sub    cl,BYTE PTR [rcx-0x76d4000a]
   14001a986:	idiv   bh
   14001a988:	adc    edi,DWORD PTR [rbp-0xa]
   14001a98b:	push   QWORD PTR [rbx+rdx*8-0x6]
   14001a992:	(bad)  
   14001a993:	(bad)  
   14001a994:	(bad)  
   14001a995:	(bad)  
   14001a996:	(bad)  
   14001a997:	(bad)  
   14001a998:	(bad)  
   14001a999:	(bad)  
   14001a99a:	(bad)  
   14001a99b:	(bad)  
   14001a99c:	(bad)  
   14001a99d:	(bad)  
   14001a99e:	(bad)  
   14001a99f:	(bad)  
   14001a9a0:	(bad)  
   14001a9a1:	(bad)  
   14001a9a2:	(bad)  
   14001a9a3:	(bad)  
   14001a9a4:	(bad)  
   14001a9a5:	(bad)  
   14001a9a6:	(bad)  
   14001a9a7:	(bad)  
   14001a9a8:	(bad)  
   14001a9a9:	(bad)  
   14001a9aa:	(bad)  
   14001a9ab:	(bad)  
   14001a9ac:	(bad)  
   14001a9ad:	(bad)  
   14001a9ae:	(bad)  
   14001a9af:	(bad)  
   14001a9b0:	(bad)  
   14001a9b1:	(bad)  
   14001a9b2:	(bad)  
   14001a9b3:	(bad)  
   14001a9b4:	(bad)  
   14001a9b5:	(bad)  
   14001a9b6:	(bad)  
   14001a9b7:	jmp    FWORD PTR [rdi+rcx*8-0x66af0006]
   14001a9be:	idiv   edi
   14001a9c0:	(bad)  
   14001a9c1:	mov    esi,esi
   14001a9c3:	jmp    FWORD PTR [rcx]
   14001a9c5:	(bad)  
   14001a9c6:	cmc    
   14001a9c7:	jmp    QWORD PTR [rsi+rdi*2]
   14001a9ca:	cmc    
   14001a9cb:	jmp    FWORD PTR [rax]
   14001a9cd:	xor    ch,0xff
   14001a9d0:	sbb    al,0x79
   14001a9d2:	cmc    
   14001a9d3:	jmp    FWORD PTR [rsi-0x56]
   14001a9d6:	cmc    
   14001a9d7:	dec    esp
   14001a9d9:	mov    edx,0xb4cff798
   14001a9de:	imul   ebp,ecx,0xfffffff4
   14001a9e1:	loop   0x14001a99f
   14001a9e3:	in     eax,dx
   14001a9e4:	(bad)  
   14001a9e5:	movabs eax,ds:0xdaeee774baddff3c
   14001a9ee:	mov    al,0xee
   14001a9f0:	(bad)  
   14001a9f1:	cdq    
   14001a9f2:	xor    eax,0x67b0d5ff
   14001a9f7:	in     eax,0xf1
   14001a9f9:	loope  0x14001a9b8
   14001a9fb:	loopne 0x14001a9cc
   14001a9fd:	movabs eax,ds:0x5f8fc6e0ff3c
	...
   14001aa26:	add    BYTE PTR [rax],al
   14001aa28:	(bad)  
   14001aa29:	mov    al,0x65
   14001aa2b:	(bad)  
   14001aa2c:	in     al,dx
   14001aa2d:	(bad)  [rsi-0x3b1c0d48]
   14001aa33:	lods   al,BYTE PTR ds:[rsi]
   14001aa34:	sar    DWORD PTR [rbx-0x73e00050],0xff
   14001aa3b:	jmp    FWORD PTR [rdx]
   14001aa3d:	mov    esi,ebp
   14001aa3f:	jmp    FWORD PTR [rdx]
   14001aa41:	mov    esi,esi
   14001aa43:	jmp    FWORD PTR [rbx]
   14001aa45:	mov    esi,esi
   14001aa47:	call   QWORD PTR [rdi+rdi*2]
   14001aa4a:	idiv   bh
   14001aa4c:	mov    ah,0xd3
   14001aa4e:	cli    
   14001aa4f:	(bad)  
   14001aa50:	(bad)  
   14001aa51:	(bad)  
   14001aa52:	(bad)  
   14001aa53:	(bad)  
   14001aa54:	(bad)  
   14001aa55:	(bad)  
   14001aa56:	(bad)  
   14001aa57:	(bad)  
   14001aa58:	(bad)  
   14001aa59:	(bad)  
   14001aa5a:	(bad)  
   14001aa5b:	(bad)  
   14001aa5c:	(bad)  
   14001aa5d:	(bad)  
   14001aa5e:	(bad)  
   14001aa5f:	(bad)  
   14001aa60:	(bad)  
   14001aa61:	(bad)  
   14001aa62:	(bad)  
   14001aa63:	(bad)  
   14001aa64:	(bad)  
   14001aa65:	(bad)  
   14001aa66:	(bad)  
   14001aa67:	(bad)  
   14001aa68:	(bad)  
   14001aa69:	(bad)  
   14001aa6a:	(bad)  
   14001aa6b:	(bad)  
   14001aa6c:	(bad)  
   14001aa6d:	(bad)  
   14001aa6e:	(bad)  
   14001aa6f:	jmp    rdi
   14001aa71:	repnz std 
   14001aa73:	inc    DWORD PTR [rcx+rdi*4-0x74c90007]
   14001aa7a:	idiv   bh
   14001aa7c:	xor    BYTE PTR [rax-0x7dd9000a],cl
   14001aa82:	cmc    
   14001aa83:	jmp    QWORD PTR [rsi]
   14001aa85:	xor    ebp,0xffffffff
   14001aa88:	sub    BYTE PTR [rbx-0x7dd5000b],al
   14001aa8e:	cmc    
   14001aa8f:	call   QWORD PTR [rsi]
   14001aa91:	jns    0x14001aa8c
   14001aa93:	call   QWORD PTR [rdx-0x32011848]
   14001aa99:	mov    ah,0x7c
   14001aa9b:	repz fcmovb st,st(0)
   14001aa9e:	and    esi,0xfffffff3
   14001aaa1:	loopne 0x14001aa5e
   14001aaa3:	in     eax,dx
   14001aaa4:	(bad)  
   14001aaa5:	movabs eax,ds:0xdaeee774baddff3c
   14001aaae:	mov    al,0xee
   14001aab0:	(bad)  
   14001aab1:	cdq    
   14001aab2:	xor    eax,0x67b0d5ff
   14001aab7:	in     eax,0xf1
   14001aab9:	loopne 0x14001aa78
   14001aabb:	loopne 0x14001aa8c
   14001aabd:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001aae6:	add    BYTE PTR [rax],al
   14001aae8:	iret   
   14001aae9:	mov    al,0x67
   14001aaeb:	(bad)  
   14001aaec:	in     eax,dx
   14001aaed:	(bad)  [rbp-0x35190b46]
   14001aaf3:	lahf   
   14001aaf4:	fmulp  st(6),st
   14001aaf6:	test   al,0xeb
   14001aaf8:	and    cl,BYTE PTR [rdi+rdi*8-0x872d401]
   14001aaff:	jmp    FWORD PTR [rbx]
   14001ab01:	(bad)  
   14001ab02:	idiv   edi
   14001ab04:	sub    ecx,DWORD PTR [rsi+rsi*8-0x97feb01]
   14001ab0b:	push   QWORD PTR [rbx+rdx*8-0x7]
   14001ab12:	std    
   14001ab13:	(bad)  
   14001ab14:	(bad)  
   14001ab15:	(bad)  
   14001ab16:	(bad)  
   14001ab17:	(bad)  
   14001ab18:	(bad)  
   14001ab19:	(bad)  
   14001ab1a:	(bad)  
   14001ab1b:	(bad)  
   14001ab1c:	(bad)  
   14001ab1d:	(bad)  
   14001ab1e:	(bad)  
   14001ab1f:	(bad)  
   14001ab20:	(bad)  
   14001ab21:	(bad)  
   14001ab22:	(bad)  
   14001ab23:	(bad)  
   14001ab24:	(bad)  
   14001ab25:	(bad)  
   14001ab26:	(bad)  
   14001ab27:	(bad)  
   14001ab28:	(bad)  
   14001ab29:	(bad)  
   14001ab2a:	(bad)  
   14001ab2b:	inc    edx
   14001ab2d:	(bad)  
   14001ab2f:	dec    DWORD PTR [rbx+rbx*4-0xa]
   14001ab33:	push   QWORD PTR [rbx]
   14001ab35:	mov    esi,esi
   14001ab37:	jmp    FWORD PTR [rsi+rax*4]
   14001ab3a:	idiv   bh
   14001ab3c:	and    eax,0x28fff683
   14001ab41:	test   ebp,esi
   14001ab43:	jmp    FWORD PTR [rcx]
   14001ab45:	test   ch,dh
   14001ab47:	jmp    FWORD PTR [rcx]
   14001ab49:	test   dh,dh
   14001ab4b:	jmp    FWORD PTR [rax]
   14001ab4d:	xor    esp,0xffffffff
   14001ab50:	sub    ecx,DWORD PTR [rdx-0x434e0002]
   14001ab56:	(bad)  
   14001ab57:	cld    
   14001ab58:	enter  0x50aa,0xf0
   14001ab5c:	loope  0x14001ab27
   14001ab5e:	xchg   edx,eax
   14001ab5f:	jrcxz  0x14001ab55
   14001ab61:	loop   0x14001ab1e
   14001ab63:	out    dx,al
   14001ab64:	(bad)  
   14001ab65:	movabs eax,ds:0xdaeee774baddff3c
   14001ab6e:	mov    al,0xee
   14001ab70:	(bad)  
   14001ab71:	cwde   
   14001ab72:	xor    edi,edi
   14001ab74:	(bad)  
   14001ab75:	scas   eax,DWORD PTR es:[rdi]
   14001ab76:	in     ax,0xf1
   14001ab79:	loope  0x14001ab39
   14001ab7b:	loopne 0x14001ab4c
   14001ab7d:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001aba6:	add    BYTE PTR [rax],al
   14001aba8:	(bad)  
   14001aba9:	mov    al,0x65
   14001abab:	(bad)  
   14001abac:	in     eax,dx
   14001abad:	(bad)  [rbp-0x34180b46]
   14001abb3:	lahf   
   14001abb4:	in     eax,dx
   14001abb5:	fidivr WORD PTR [rcx-0x17629f37]
   14001abbb:	jmp    FWORD PTR [rax]
   14001abbd:	(bad)  
   14001abbe:	sti    
   14001abbf:	jmp    FWORD PTR [rbx]
   14001abc1:	(bad)  
   14001abc2:	idiv   edi
   14001abc4:	sub    al,0x8e
   14001abc6:	idiv   edi
   14001abc8:	adc    eax,0xb5fff682
   14001abcd:	(bad)  
   14001abce:	stc    
   14001abcf:	(bad)  
   14001abd0:	(bad)  
   14001abd1:	(bad)  
   14001abd2:	std    
   14001abd3:	(bad)  
   14001abd4:	(bad)  
   14001abd5:	(bad)  
   14001abd6:	(bad)  
   14001abd7:	(bad)  
   14001abd8:	(bad)  
   14001abd9:	(bad)  
   14001abda:	(bad)  
   14001abdb:	(bad)  
   14001abdc:	(bad)  
   14001abdd:	(bad)  
   14001abde:	(bad)  
   14001abdf:	(bad)  
   14001abe0:	(bad)  
   14001abe1:	(bad)  
   14001abe2:	(bad)  
   14001abe3:	push   rbx
   14001abe5:	clc    
   14001abe6:	std    
   14001abe7:	(bad)  
   14001abe8:	jns    0x14001ab9e
   14001abea:	stc    
   14001abeb:	(bad)  
   14001abec:	cmp    al,0x93
   14001abee:	idiv   edi
   14001abf0:	xor    DWORD PTR [rbp-0x78d7000a],ecx
   14001abf6:	idiv   bh
   14001abf8:	(bad)  
   14001abf9:	mov    dh,dh
   14001abfb:	jmp    FWORD PTR [rcx]
   14001abfd:	xchg   esi,esi
   14001abff:	jmp    FWORD PTR [rcx]
   14001ac01:	xchg   esi,esi
   14001ac03:	jmp    FWORD PTR [rcx]
   14001ac05:	xchg   dh,dh
   14001ac07:	jmp    FWORD PTR [rcx]
   14001ac09:	xchg   dh,dh
   14001ac0b:	jmp    QWORD PTR [rax]
   14001ac0d:	xor    dh,0xff
   14001ac10:	pop    rsi
   14001ac11:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ac12:	sti    
   14001ac13:	dec    esp
   14001ac15:	mov    eax,0xb0cdf691
   14001ac1a:	(bad)  
   14001ac1b:	in     al,dx
   14001ac1c:	out    0xd0,al
   14001ac1e:	pushf  
   14001ac1f:	in     al,0xf6
   14001ac21:	in     eax,0xbe
   14001ac23:	icebp  
   14001ac24:	int    0x9f
   14001ac26:	cmp    bh,bh
   14001ac28:	fnstsw WORD PTR [rdx-0x2511188c]
   14001ac2e:	mov    al,0xee
   14001ac30:	(bad)  
   14001ac31:	cwde   
   14001ac32:	xor    edi,edi
   14001ac34:	(bad)  
   14001ac35:	scas   eax,DWORD PTR es:[rdi]
   14001ac36:	data16 in al,0xf3
   14001ac39:	loope  0x14001abf9
   14001ac3b:	jrcxz  0x14001ac0c
   14001ac3d:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001ac66:	add    BYTE PTR [rax],al
   14001ac68:	int    0xaf
   14001ac6a:	movsxd edi,edi
   14001ac6c:	in     al,dx
   14001ac6d:	fnstenv [rbx-0x381a0b46]
   14001ac73:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ac74:	lock loop 0x14001ac38
   14001ac77:	mov    al,0xc9
   14001ac79:	mov    ebp,0x9220ffa5
   14001ac7e:	(bad)  
   14001ac7f:	jmp    FWORD PTR [rbx]
   14001ac81:	nop
   14001ac82:	idiv   edi
   14001ac84:	sub    al,0x8f
   14001ac86:	idiv   edi
   14001ac88:	adc    eax,0xb9fff684
   14001ac8d:	(bad)  
   14001ac8e:	stc    
   14001ac8f:	(bad)  
   14001ac90:	(bad)  
   14001ac91:	(bad)  
   14001ac92:	std    
   14001ac93:	(bad)  
   14001ac94:	(bad)  
   14001ac95:	(bad)  
   14001ac96:	(bad)  
   14001ac97:	(bad)  
   14001ac98:	(bad)  
   14001ac99:	(bad)  
   14001ac9a:	(bad)  
   14001ac9b:	(bad)  
   14001ac9c:	(bad)  
   14001ac9d:	(bad)  
   14001ac9e:	(bad)  
   14001ac9f:	push   QWORD PTR [rcx+0x54fffbd5]
   14001aca5:	movabs ds:0x8c2cfff78f33fff8,al
   14001acae:	idiv   bh
   14001acb0:	sub    BYTE PTR [rdx-0x76d6000a],cl
   14001acb6:	idiv   bh
   14001acb8:	sub    cl,BYTE PTR [rcx-0x76d5000a]
   14001acbe:	idiv   bh
   14001acc0:	sub    DWORD PTR [rax-0x77d6000a],ecx
   14001acc6:	idiv   bh
   14001acc8:	sub    DWORD PTR [rdi-0x72d2000a],eax
   14001acce:	cld    
   14001accf:	push   QWORD PTR [rax-0x3202293d]
   14001acd5:	mov    al,0x67
   14001acd7:	icebp  
   14001acd8:	loope  0x14001aca3
   14001acda:	nop
   14001acdb:	(bad)  
   14001acdc:	jmp    0x14001acb1
   14001acde:	movabs ds:0x3fa3d0f0bee3f5e7,al
   14001ace7:	(bad)  
   14001ace8:	fnstsw WORD PTR [rdx-0x2511188c]
   14001acee:	mov    al,0xee
   14001acf0:	(bad)  
   14001acf1:	cwde   
   14001acf2:	xor    edi,edi
   14001acf4:	xlat   BYTE PTR ds:[rbx]
   14001acf5:	mov    cl,0x6a
   14001acf7:	jmp    0x125c18ff0
   14001acfc:	iret   
   14001acfd:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001ad26:	add    BYTE PTR [rax],al
   14001ad28:	int3   
   14001ad29:	scas   al,BYTE PTR es:[rdi]
   14001ad2a:	(bad)  
   14001ad2b:	(bad)  
   14001ad2c:	jmp    0x14001ad07
   14001ad2e:	mov    bl,0xba
   14001ad30:	repnz in al,0xc5
   14001ad33:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ad34:	repz in eax,0xc8
   14001ad37:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ad38:	jmp    0x19fd55e14
   14001ad3d:	pushf  
   14001ad3e:	loopne 0x14001ad3f
   14001ad40:	(bad)  
   14001ad41:	xchg   esp,eax
   14001ad42:	(bad)  
   14001ad43:	jmp    FWORD PTR [rip+0x16fff791]        # 0x15701a4da
   14001ad49:	xchg   dh,dh
   14001ad4b:	jmp    QWORD PTR [rsi-0x733]
   14001ad51:	(bad)  
   14001ad52:	(bad)  
   14001ad53:	(bad)  
   14001ad54:	(bad)  
   14001ad55:	(bad)  
   14001ad56:	(bad)  
   14001ad57:	push   rbx
   14001ad59:	clc    
   14001ad5a:	(bad)  
   14001ad5b:	dec    DWORD PTR [rbp+0x39fffac2]
   14001ad61:	xchg   esp,eax
   14001ad62:	idiv   edi
   14001ad64:	xor    edx,DWORD PTR [rcx-0x73d70009]
   14001ad6a:	idiv   bh
   14001ad6c:	sub    BYTE PTR [rdi+rsi*8-0x973d501],cl
   14001ad73:	jmp    FWORD PTR [rdx]
   14001ad75:	mov    esi,esi
   14001ad77:	jmp    FWORD PTR [rdx]
   14001ad79:	mov    esi,esi
   14001ad7b:	jmp    FWORD PTR [rdx]
   14001ad7d:	mov    dh,dh
   14001ad7f:	jmp    FWORD PTR [rdx]
   14001ad81:	mov    dh,dh
   14001ad83:	jmp    FWORD PTR [rdx]
   14001ad85:	mov    esi,esi
   14001ad87:	call   FWORD PTR [rdi]
   14001ad89:	test   edi,esi
   14001ad8b:	jmp    QWORD PTR [rbp-0x57]
   14001ad8e:	repnz (bad) 
   14001ad90:	(bad)  
   14001ad91:	mov    edi,0xb8d4f894
   14001ad96:	jne    0x14001ad86
   14001ad98:	jmp    0x14001ad6f
   14001ad9a:	movabs ds:0xbee4f6e69cd0e7e8,al
   14001ada3:	icebp  
   14001ada4:	shl    BYTE PTR [rbx-0x452200c1],1
   14001adaa:	je     0x14001ad93
   14001adac:	out    dx,al
   14001adad:	fidiv  DWORD PTR [rax+0x3398c6ee]
   14001adb3:	call   rdi
   14001adb5:	mov    cl,0x6a
   14001adb7:	call   0x124c18fb0
   14001adbc:	iret   
   14001adbd:	movabs eax,ds:0x6495c9e1ff3c
	...
   14001ade6:	add    BYTE PTR [rax],al
   14001ade8:	int3   
   14001ade9:	lods   eax,DWORD PTR ds:[rsi]
   14001adea:	pop    rdi
   14001adeb:	(bad)  
   14001adec:	(bad)  
   14001aded:	fnstenv [rdx-0x3b1c0e46]
   14001adf3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001adf4:	icebp  
   14001adf5:	jrcxz  0x14001adbb
   14001adf7:	lods   al,BYTE PTR ds:[rsi]
   14001adf8:	icebp  
   14001adf9:	in     al,0xc6
   14001adfb:	lods   eax,DWORD PTR ds:[rsi]
   14001adfc:	fcmovne st,st(1)
   14001adfe:	movabs eax,ds:0xf9942bfff99627f8
   14001ae07:	jmp    QWORD PTR [rip+0x3bfff78e]        # 0x17c01a59b
   14001ae0d:	cdq    
   14001ae0e:	idiv   edi
   14001ae10:	mov    ebx,0xa7fff8d8
   14001ae15:	sar    edx,1
   14001ae17:	dec    DWORD PTR [rbp-0x5f]
   14001ae1a:	clc    
   14001ae1b:	push   QWORD PTR [rax]
   14001ae1d:	xchg   edx,eax
   14001ae1e:	idiv   edi
   14001ae20:	sub    eax,0x27fff790
   14001ae25:	(bad)  
   14001ae26:	idiv   edi
   14001ae28:	sub    cl,BYTE PTR [rsi-0x71d40009]
   14001ae2e:	idiv   edi
   14001ae30:	sub    ecx,DWORD PTR [rbp-0x72d4000a]
   14001ae36:	idiv   bh
   14001ae38:	sub    cl,BYTE PTR [rsi+rsi*8-0x973d501]
   14001ae3f:	jmp    FWORD PTR [rdx]
   14001ae41:	mov    esi,esi
   14001ae43:	jmp    QWORD PTR [rsi]
   14001ae45:	mov    esi,esi
   14001ae47:	(bad)  
   14001ae48:	ds pushf 
   14001ae4a:	sti    
   14001ae4b:	call   rdx
   14001ae4d:	retf   0xfdbb
   14001ae50:	shl    DWORD PTR [rbp-0x2f180d93],1
   14001ae56:	fwait
   14001ae57:	jmp    0x129a28347
   14001ae5c:	(bad)  
   14001ae5d:	rcr    BYTE PTR [rdi-0x3f1a0715],cl
   14001ae63:	repz shl BYTE PTR [rdx-0x452200c3],1
   14001ae6a:	je     0x14001ae53
   14001ae6c:	out    dx,al
   14001ae6d:	fnstenv [rax+0x3398c6ee]
   14001ae73:	call   rdi
   14001ae75:	mov    cl,0x69
   14001ae77:	call   0x124c19070
   14001ae7c:	iret   
   14001ae7d:	movabs eax,ds:0x6596cae2ff3c
	...
   14001aea6:	add    BYTE PTR [rax],al
   14001aea8:	retf   
   14001aea9:	lods   al,BYTE PTR ds:[rsi]
   14001aeaa:	pop    rsi
   14001aeab:	(bad)  
   14001aeac:	(bad)  
   14001aead:	fnstenv [rdx-0x3d1d0f47]
   14001aeb3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001aeb4:	lock loop 0x14001ae79
   14001aeb7:	lods   eax,DWORD PTR ds:[rsi]
   14001aeb8:	repnz in al,0xc6
   14001aebb:	scas   eax,DWORD PTR es:[rdi]
   14001aebc:	out    0xd0,al
   14001aebe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001aebf:	call   0x13f935e83
   14001aec4:	sbb    al,0x98
   14001aec6:	(bad)  
   14001aec7:	jmp    FWORD PTR [rsp+rdx*4]
   14001aeca:	cli    
   14001aecb:	jmp    QWORD PTR [rdi+rcx*4]
   14001aece:	idiv   edi
   14001aed0:	sbb    BYTE PTR [rax-0x74e2000a],cl
   14001aed6:	idiv   edi
   14001aed8:	(bad)  
   14001aed9:	(bad)  
   14001aeda:	idiv   edi
   14001aedc:	sub    dl,BYTE PTR [rax-0x6fd40009]
   14001aee2:	idiv   edi
   14001aee4:	sub    al,0x91
   14001aee6:	idiv   edi
   14001aee8:	sub    edx,DWORD PTR [rax-0x70d40009]
   14001aeee:	idiv   edi
   14001aef0:	sub    ecx,DWORD PTR [rdi-0x70d40009]
   14001aef6:	idiv   edi
   14001aef8:	sub    ecx,DWORD PTR [rsi-0x71d40009]
   14001aefe:	idiv   bh
   14001af00:	sub    BYTE PTR [rbx-0x6ad00009],cl
   14001af06:	sti    
   14001af07:	push   QWORD PTR [rbp+rdi*4-0x3d25033b]
   14001af0e:	mov    dh,ch
   14001af10:	out    0xd1,eax
   14001af12:	movabs al,ds:0xa6d7edebaddaefed
   14001af1b:	in     al,dx
   14001af1c:	(bad)  
   14001af1d:	rcr    BYTE PTR [rdi-0x411a0816],cl
   14001af23:	repnz shl BYTE PTR [rdx-0x462300c3],1
   14001af2a:	jae    0x14001af13
   14001af2c:	out    dx,al
   14001af2d:	fidiv  DWORD PTR [rax+0x3398c6ee]
   14001af33:	call   rsi
   14001af35:	mov    al,0x69
   14001af37:	call   0x124c19130
   14001af3c:	iret   
   14001af3d:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001af66:	add    BYTE PTR [rax],al
   14001af68:	retf   
   14001af69:	lods   al,BYTE PTR ds:[rsi]
   14001af6a:	pop    rsi
   14001af6b:	(bad)  
   14001af6c:	jmp    0x130bb6049
   14001af71:	loop   0x14001af35
   14001af73:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001af74:	lock loope 0x14001af37
   14001af77:	lods   eax,DWORD PTR ds:[rsi]
   14001af78:	lock jrcxz 0x14001af3e
   14001af7b:	mov    al,0xe8
   14001af7d:	shl    DWORD PTR [rdi-0x67361d1c],cl
   14001af83:	out    dx,eax
   14001af84:	mov    esp,0x21fea1b5
   14001af89:	xchg   ebp,eax
   14001af8a:	std    
   14001af8b:	jmp    FWORD PTR [rdx]
   14001af8d:	xchg   edi,eax
   14001af8e:	(bad)  
   14001af8f:	jmp    FWORD PTR [rsi]
   14001af91:	xchg   esp,eax
   14001af92:	idiv   edi
   14001af94:	sub    al,0x93
   14001af96:	idiv   edi
   14001af98:	sub    al,0x93
   14001af9a:	idiv   edi
   14001af9c:	sub    al,0x93
   14001af9e:	idiv   edi
   14001afa0:	sub    al,0x92
   14001afa2:	idiv   edi
   14001afa4:	sub    al,0x92
   14001afa6:	idiv   edi
   14001afa8:	sub    al,0x91
   14001afaa:	idiv   edi
   14001afac:	sub    al,0x91
   14001afae:	idiv   edi
   14001afb0:	sub    edx,DWORD PTR [rax-0x6fd40009]
   14001afb6:	idiv   edi
   14001afb8:	sub    edx,DWORD PTR [rax-0x72db0009]
   14001afbe:	clc    
   14001afbf:	push   QWORD PTR [rbx]
   14001afc1:	cwde   
   14001afc2:	stc    
   14001afc3:	push   QWORD PTR [rbx-0x1e013740]
   14001afc9:	retf   0xf797
   14001afcc:	jrcxz  0x14001af9b
   14001afce:	fwait
   14001afcf:	out    dx,eax
   14001afd0:	icebp  
   14001afd1:	fdiv   QWORD PTR [rbx-0x53251115]
   14001afd7:	jmp    0x14001afc7
   14001afd9:	fsubr  DWORD PTR [rdx-0x58291415]
   14001afdf:	(bad)  
   14001afe0:	mul    ebp
   14001afe2:	shl    edx,0xd0
   14001afe5:	movabs ds:0xdaefe673b9dcff3d,al
   14001afee:	mov    al,0xed
   14001aff0:	(bad)  
   14001aff1:	cwde   
   14001aff2:	xor    edi,edi
   14001aff4:	xlat   BYTE PTR ds:[rbx]
   14001aff5:	mov    cl,0x69
   14001aff7:	call   0x124c191f0
   14001affc:	iret   
   14001affd:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001b026:	add    BYTE PTR [rax],al
   14001b028:	retf   0x5bac
   14001b02b:	(bad)  
   14001b02c:	jmp    0x130b96109
   14001b031:	loope  0x14001aff3
   14001b033:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b034:	out    dx,eax
   14001b035:	loopne 0x14001aff7
   14001b037:	lods   al,BYTE PTR ds:[rsi]
   14001b038:	lock loop 0x14001affd
   14001b03b:	scas   eax,DWORD PTR es:[rdi]
   14001b03c:	out    0xd1,al
   14001b03e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b03f:	call   0x123ad862d
   14001b044:	(bad)  
   14001b045:	xlat   BYTE PTR ds:[rbx]
   14001b046:	scas   eax,DWORD PTR es:[rdi]
   14001b047:	ffree  st(7)
   14001b049:	mov    ecx,0x9634fc98
   14001b04e:	hlt    
   14001b04f:	jmp    QWORD PTR [rcx]
   14001b051:	(bad)  
   14001b052:	(bad)  
   14001b053:	jmp    FWORD PTR [rsi+rdx*4]
   14001b056:	cli    
   14001b057:	jmp    FWORD PTR [rsi]
   14001b059:	xchg   ebp,eax
   14001b05a:	idiv   edi
   14001b05c:	cs xchg esp,eax
   14001b05e:	idiv   bh
   14001b060:	sub    al,0x94
   14001b062:	idiv   edi
   14001b064:	sub    al,0x94
   14001b066:	idiv   edi
   14001b068:	sub    al,0x93
   14001b06a:	idiv   edi
   14001b06c:	sub    al,0x92
   14001b06e:	idiv   bh
   14001b070:	sub    al,0x92
   14001b072:	idiv   edi
   14001b074:	sub    DWORD PTR [rcx-0x6fe10008],edx
   14001b07a:	(bad)  
   14001b07b:	(bad)  
   14001b07c:	ds sahf 
   14001b07e:	std    
   14001b07f:	dec    esi
   14001b081:	enter  0xfebc,0xe0
   14001b085:	retf   
   14001b086:	cdq    
   14001b087:	cmc    
   14001b088:	out    0xd3,eax
   14001b08a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b08b:	in     eax,dx
   14001b08c:	icebp  
   14001b08d:	fidiv  WORD PTR [rbp-0x4f241016]
   14001b093:	jmp    0x14001b084
   14001b095:	fisubr DWORD PTR [rdi-0x52251115]
   14001b09b:	jmp    0x14001b089
   14001b09d:	xlat   BYTE PTR ds:[rbx]
   14001b09e:	stos   BYTE PTR es:[rdi],al
   14001b09f:	(bad)  
   14001b0a0:	clc    
   14001b0a1:	out    0xc5,eax
   14001b0a3:	repnz shl BYTE PTR [rdx-0x492500c3],1
   14001b0aa:	jo     0x14001b095
   14001b0ac:	in     eax,dx
   14001b0ad:	fsubr  DWORD PTR [rbp+0x3398c6ee]
   14001b0b3:	call   rdi
   14001b0b5:	mov    cl,0x69
   14001b0b7:	call   0x124c192b0
   14001b0bc:	iret   
   14001b0bd:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001b0e6:	add    BYTE PTR [rax],al
   14001b0e8:	retf   
   14001b0e9:	lods   al,BYTE PTR ds:[rsi]
   14001b0ea:	pop    rbx
   14001b0eb:	(bad)  
   14001b0ec:	call   0x12fb961c8
   14001b0f1:	loopne 0x14001b0b3
   14001b0f3:	movabs ds:0xafc2e1efacbfe0ef,eax
   14001b0fc:	out    0xd1,al
   14001b0fe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b0ff:	call   0x126a883eb
   14001b104:	repnz jrcxz 0x14001b0c8
   14001b107:	(bad)  
   14001b108:	in     eax,dx
   14001b109:	fnstenv [rbx-0x65351f26]
   14001b10f:	lock xchg edx,eax
   14001b111:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b112:	scas   eax,DWORD PTR es:[rdi]
   14001b113:	jmp    QWORD PTR [rax]
   14001b115:	xchg   ebp,eax
   14001b116:	(bad)  
   14001b117:	call   FWORD PTR [rsi]
   14001b119:	cwde   
   14001b11a:	(bad)  
   14001b11b:	jmp    QWORD PTR [rax]
   14001b11d:	cwde   
   14001b11e:	(bad)  
   14001b11f:	jmp    QWORD PTR [rbx]
   14001b121:	xchg   edi,eax
   14001b122:	(bad)  
   14001b123:	jmp    QWORD PTR [rip+0x23ffff96]        # 0x16401b0bf
   14001b129:	xchg   ebp,eax
   14001b12a:	(bad)  
   14001b12b:	call   FWORD PTR [rdi]
   14001b12d:	xchg   esp,eax
   14001b12e:	(bad)  
   14001b12f:	call   FWORD PTR [rip+0x25ffff94]        # 0x16601b0c9
   14001b135:	xchg   esi,eax
   14001b136:	(bad)  
   14001b137:	call   QWORD PTR [rsi-0x1b002e4e]
   14001b13d:	(bad)  
   14001b13e:	test   al,0xfa
   14001b140:	in     al,0xd0
   14001b142:	movabs al,ds:0xb6deefebb3dceef0
   14001b14b:	jmp    0x14001b13c
   14001b14d:	fdiv   QWORD PTR [rbx-0x4d241015]
   14001b153:	jmp    0x14001b144
   14001b155:	(bad)  [rax-0x4f251015]
   14001b15b:	jmp    0x14001b14a
   14001b15d:	fldcw  WORD PTR [rbp-0x38170616]
   14001b163:	repnz shl BYTE PTR [rdx-0x4a2700c3],1
   14001b16a:	outs   dx,DWORD PTR ds:[rsi]
   14001b16b:	(bad)  
   14001b16c:	jmp    0x14001b144
   14001b16e:	stos   DWORD PTR es:[rdi],eax
   14001b16f:	out    dx,eax
   14001b170:	(bad)  
   14001b171:	cwde   
   14001b172:	xor    edi,edi
   14001b174:	xlat   BYTE PTR ds:[rbx]
   14001b175:	mov    cl,0x69
   14001b177:	call   0x124c19370
   14001b17c:	iret   
   14001b17d:	movabs eax,ds:0x6a9bcde3ff3c
	...
   14001b1a6:	add    BYTE PTR [rax],al
   14001b1a8:	retf   
   14001b1a9:	stos   DWORD PTR es:[rdi],eax
   14001b1aa:	pop    rbx
   14001b1ab:	(bad)  
   14001b1ac:	call   0x12fb96187
   14001b1b1:	loopne 0x14001b172
   14001b1b3:	movabs ds:0xaec2e1efabbddfed,eax
   14001b1bc:	out    0xcf,al
   14001b1be:	movabs ds:0xbee0f1e6a5d1e6e8,al
   14001b1c7:	(bad)  
   14001b1c8:	icebp  
   14001b1c9:	loopne 0x14001b189
   14001b1cb:	xlat   BYTE PTR ds:[rbx]
   14001b1cc:	out    dx,eax
   14001b1cd:	fnsave [rdi-0x5e301923]
   14001b1d3:	mul    edi
   14001b1d5:	shr    DWORD PTR [rcx-0x5b443a0b],cl
   14001b1db:	cli    
   14001b1dc:	(bad)  
   14001b1dd:	movabs ds:0x9142ffcda171ffb1,eax
   14001b1e6:	in     al,0xff
   14001b1e8:	imul   ebx,DWORD PTR [rdi-0x556e002c],0xbdc3ffc0
   14001b1f2:	lods   al,BYTE PTR ds:[rsi]
   14001b1f3:	cld    
   14001b1f4:	out    0xd1,al
   14001b1f6:	stos   DWORD PTR es:[rdi],eax
   14001b1f7:	imul   ebx
   14001b1f9:	fldcw  WORD PTR [rdi-0x4f26140f]
   14001b1ff:	in     al,dx
   14001b200:	lock fistp QWORD PTR [rax-0x48210f16]
   14001b207:	jmp    0x14001b1f8
   14001b209:	fnsave [rsi-0x4a221015]
   14001b20f:	jmp    0x14001b200
   14001b211:	fdiv   QWORD PTR [rbx+rbp*8-0x144c2311]
   14001b218:	out    dx,eax
   14001b219:	(bad)  [rcx-0x4f251115]
   14001b21f:	(bad)  
   14001b220:	stc    
   14001b221:	jmp    0xe2d2a4ef
   14001b226:	cmp    eax,0x6db2d5ff
   14001b22b:	jmp    0x14001b216
   14001b22d:	shl    DWORD PTR [rsi+0x3398c6f1],cl
   14001b233:	call   rsi
   14001b235:	mov    al,0x69
   14001b237:	call   0x124c19430
   14001b23c:	fsubr  DWORD PTR [rdx-0x321c00ba]
   14001b242:	fwait
   14001b243:	push   0x0
	...
   14001b265:	add    BYTE PTR [rax],al
   14001b267:	add    dl,cl
   14001b269:	stos   DWORD PTR es:[rdi],eax
   14001b26a:	pop    rax
   14001b26b:	(bad)  
   14001b26c:	call   0x12eb86247
   14001b271:	fidivr WORD PTR [rbp-0x4421135e]
   14001b277:	stos   BYTE PTR es:[rdi],al
   14001b278:	out    dx,al
   14001b279:	fistp  QWORD PTR [rdi-0x5d311952]
   14001b27f:	jmp    0x125a7846b
   14001b284:	icebp  
   14001b285:	loopne 0x14001b244
   14001b287:	(bad)  
   14001b288:	lock fistp QWORD PTR [rdi+rdx*8-0x22442010]
   14001b290:	in     al,dx
   14001b291:	(bad)  
   14001b292:	lods   al,BYTE PTR ds:[rsi]
   14001b293:	imul   dh
   14001b295:	(bad)  [rbp+rbp*8-0x16472210]
   14001b29c:	out    dx,al
   14001b29d:	fdiv   QWORD PTR [rbp-0x4c241214]
   14001b2a3:	out    dx,al
   14001b2a4:	out    dx,al
   14001b2a5:	fdiv   QWORD PTR [rax+rsi*8-0x114a2212]
   14001b2ac:	out    dx,eax
   14001b2ad:	fnsave [rdi-0x48221014]
   14001b2b3:	(bad)  
   14001b2b4:	out    dx,eax
   14001b2b5:	fnsave [rdi-0x46200e17]
   14001b2bb:	jmp    0x12abb92b0
   14001b2c0:	lock fidiv WORD PTR [rdi-0x48210f15]
   14001b2c7:	jmp    0x14001b2b9
   14001b2c9:	fnsave [rdi-0x49220f15]
   14001b2cf:	jmp    0x14001b2c1
   14001b2d1:	fnsave [rbp-0x4a230f15]
   14001b2d7:	jmp    0x14001b2c9
   14001b2d9:	fdiv   QWORD PTR [rbx+rbp*8-0x164e2412]
   14001b2e0:	stc    
   14001b2e1:	jmp    0xe2d2a5af
   14001b2e6:	cmp    eax,0x69afd4ff
   14001b2eb:	bnd call 0x106f852c1
   14001b2f1:	xchg   edi,eax
   14001b2f2:	xor    edi,edi
   14001b2f4:	fidiv  DWORD PTR [rcx-0x3011049e]
   14001b2fa:	cmp    edx,0xffffffe7
   14001b2fd:	mov    esp,0xffffff5a
   14001b302:	inc    DWORD PTR [rbp+0x0]
	...
   14001b325:	add    BYTE PTR [rax],al
   14001b327:	add    dl,dl
   14001b329:	mov    ch,0x6e
   14001b32b:	(bad)  
   14001b32c:	jmp    0x135cb650a
   14001b331:	in     al,dx
   14001b332:	fadd   st,st(5)
   14001b334:	imul   dh
   14001b336:	fmul   st(7),st
   14001b338:	clc    
   14001b339:	lock loope 0x14001b310
   14001b33c:	cmc    
   14001b33d:	(bad)  
   14001b33e:	(bad)  
   14001b33f:	jmp    0x14001b334
   14001b341:	call   0x12cf8a717
   14001b346:	fsubr  st,st(3)
   14001b348:	imul   ah
   14001b34a:	xlat   BYTE PTR ds:[rbx]
   14001b34b:	jmp    0x14001b343
   14001b34d:	in     al,dx
   14001b34e:	xlat   BYTE PTR ds:[rbx]
   14001b34f:	(bad)  
   14001b350:	cmc    
   14001b351:	(bad)  
   14001b352:	(bad)  
   14001b353:	icebp  
   14001b354:	hlt    
   14001b355:	call   0x127f6a829
   14001b35a:	int    0xf3
   14001b35c:	hlt    
   14001b35d:	out    0xcc,eax
   14001b35f:	repz hlt 
   14001b361:	out    0xcc,eax
   14001b363:	repz hlt 
   14001b365:	out    0xcc,eax
   14001b367:	repz hlt 
   14001b369:	out    0xcb,eax
   14001b36b:	repz repnz jrcxz 0x14001b334
   14001b36f:	icebp  
   14001b370:	repnz jrcxz 0x14001b339
   14001b373:	repnz repnz jrcxz 0x14001b33d
   14001b377:	repnz repnz jrcxz 0x14001b341
   14001b37b:	repnz repnz jrcxz 0x14001b344
   14001b37f:	repnz icebp 
   14001b381:	loope  0x14001b345
   14001b383:	icebp  
   14001b384:	icebp  
   14001b385:	loope  0x14001b349
   14001b387:	repnz icebp 
   14001b389:	loope  0x14001b34b
   14001b38b:	icebp  
   14001b38c:	icebp  
   14001b38d:	loope  0x14001b34f
   14001b38f:	repnz icebp 
   14001b391:	fistp  QWORD PTR [rsi-0x44210f0f]
   14001b397:	lock out dx,eax
   14001b399:	fnstsw WORD PTR [rax-0x4b231210]
   14001b39f:	in     eax,dx
   14001b3a0:	stc    
   14001b3a1:	(bad)  
   14001b3a2:	retf   0xd8f3
   14001b3a5:	stos   BYTE PTR es:[rdi],al
   14001b3a6:	rex.RXB call r13
   14001b3a9:	mov    dl,0x6f
   14001b3ab:	jmp    0x14001b395
   14001b3ad:	rcr    BYTE PTR [rdi+0x3398c6f6],1
   14001b3b3:	call   rdx
   14001b3b5:	stos   DWORD PTR es:[rdi],eax
   14001b3b6:	rex.WRB cmc 
   14001b3b8:	shr    DWORD PTR [rbx-0x4a2913b1],1
   14001b3be:	ins    DWORD PTR es:[rdi],dx
   14001b3bf:	nop
   14001b3c0:	(bad)  
   14001b3c1:	(bad)  
   14001b3c2:	call   FWORD PTR [rbx]
	...
   14001b3e8:	int3   
   14001b3e9:	lods   eax,DWORD PTR ds:[rsi]
   14001b3ea:	(bad)  
   14001b3eb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b3ec:	(bad)  
   14001b3ed:	mov    ecx,0xb4d5f679
   14001b3f2:	ins    BYTE PTR es:[rdi],dx
   14001b3f3:	repz (bad) 
   14001b3f5:	mov    dh,0x6e
   14001b3f7:	repz xlat BYTE PTR ds:[rbx]
   14001b3f9:	mov    dh,0x70
   14001b3fb:	cmc    
   14001b3fc:	fdivr  DWORD PTR [rcx-0x44250a8e]
   14001b402:	js     0x14001b400
   14001b404:	ffree  st(0)
   14001b406:	cmp    ebx,0xfc86c4de
   14001b40c:	ffreep st(4)
   14001b40e:	xchg   ebp,edi
   14001b410:	ffreep st(5)
   14001b412:	mov    esp,edi
   14001b414:	loope  0x14001b3dd
   14001b416:	mov    ?,esp
   14001b418:	in     al,0xcd
   14001b41a:	xchg   edi,eax
   14001b41b:	std    
   14001b41c:	in     eax,0xce
   14001b41e:	(bad)  
   14001b41f:	cld    
   14001b420:	in     eax,0xcf
   14001b422:	popf   
   14001b423:	cld    
   14001b424:	out    0xd1,eax
   14001b426:	sahf   
   14001b427:	cld    
   14001b428:	call   0x12afd56fe
   14001b42d:	(bad)  
   14001b42e:	stos   BYTE PTR es:[rdi],al
   14001b42f:	sti    
   14001b430:	in     eax,dx
   14001b431:	fidiv  DWORD PTR [rdx-0x4e251306]
   14001b437:	sti    
   14001b438:	in     eax,dx
   14001b439:	fnstenv [rdx-0x4c241106]
   14001b43f:	cli    
   14001b440:	out    dx,eax
   14001b441:	fidivr WORD PTR [rbx-0x401f0e07]
   14001b447:	stc    
   14001b448:	repnz in al,0xc5
   14001b44b:	stc    
   14001b44c:	repnz in al,0xc6
   14001b44f:	clc    
   14001b450:	repnz in eax,0xc7
   14001b453:	clc    
   14001b454:	repz out 0xca,al
   14001b457:	clc    
   14001b458:	hlt    
   14001b459:	call   0x127f7ac2b
   14001b45e:	int3   
   14001b45f:	hlt    
   14001b460:	stc    
   14001b461:	jmp    0xf5e3b32e
   14001b466:	push   rbx
   14001b467:	call   rbx
   14001b469:	stos   BYTE PTR es:[rdi],al
   14001b46a:	rex.WB clc 
   14001b46c:	shl    BYTE PTR [rax+rax*2+0x54a9d0fc],cl
   14001b473:	jge    0x14001b474
   14001b475:	(bad)  
   14001b476:	inc    DWORD PTR [rsi]
	...
   14001b4ac:	call   0x1141a5482
   14001b4b1:	ret    0x3a8e
   14001b4b4:	fcmove st,st(0)
   14001b4b6:	nop
   14001b4b7:	(bad)  
   14001b4b8:	(bad)  
   14001b4b9:	sar    BYTE PTR [rdi+0x4b],0xd9
   14001b4bd:	ret    0x5783
   14001b4c0:	xlat   BYTE PTR ds:[rbx]
   14001b4c1:	mov    edi,0xb9d4637b
   14001b4c6:	outs   dx,BYTE PTR ds:[rsi]
   14001b4c7:	gs iret 
   14001b4c9:	scas   eax,DWORD PTR es:[rdi]
   14001b4ca:	pop    rax
   14001b4cb:	addr32 (bad) 
   14001b4cd:	scas   al,BYTE PTR es:[rdi]
   14001b4ce:	push   rbp
   14001b4cf:	ins    BYTE PTR es:[rdi],dx
   14001b4d0:	iret   
   14001b4d1:	scas   eax,DWORD PTR es:[rdi]
   14001b4d2:	pop    rcx
   14001b4d3:	ins    DWORD PTR es:[rdi],dx
   14001b4d4:	(bad)  
   14001b4d5:	scas   al,BYTE PTR es:[rdi]
   14001b4d6:	pop    rcx
   14001b4d7:	jg     0x14001b4a7
   14001b4d9:	lods   eax,DWORD PTR ds:[rsi]
   14001b4da:	pop    rcx
   14001b4db:	test   esi,ecx
   14001b4dd:	lods   eax,DWORD PTR ds:[rsi]
   14001b4de:	pop    rcx
   14001b4df:	nop
   14001b4e0:	(bad)  
   14001b4e1:	lods   eax,DWORD PTR ds:[rsi]
   14001b4e2:	pop    rcx
   14001b4e3:	xchg   esp,eax
   14001b4e4:	int    0xac
   14001b4e6:	pop    rcx
   14001b4e7:	fwait
   14001b4e8:	shl    DWORD PTR [rbp-0x56325a96],cl
   14001b4ee:	push   rbx
   14001b4ef:	mov    bh,0xd0
   14001b4f1:	mov    cl,0x65
   14001b4f3:	mov    al,0xcc
   14001b4f5:	test   al,0x53
   14001b4f7:	(bad)  
   14001b4f8:	(bad)  
   14001b4f9:	test   eax,0xa9cecd56
   14001b4fe:	push   rbp
   14001b4ff:	ror    edi,1
   14001b501:	test   eax,0xa9ced655
   14001b506:	push   rbp
   14001b507:	(bad)  
   14001b509:	test   eax,0xa9cfe054
   14001b50e:	push   rsi
   14001b50f:	in     eax,0xd0
   14001b511:	stos   DWORD PTR es:[rdi],eax
   14001b512:	pop    rdx
   14001b513:	repnz iret 
   14001b515:	stos   BYTE PTR es:[rdi],al
   14001b516:	pop    rax
   14001b517:	repz (bad) 
   14001b519:	test   al,0x54
   14001b51b:	hlt    
   14001b51c:	int3   
   14001b51d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001b51e:	rex.WB
   14001b51f:	repz enter 0x3a9c,0xef
   14001b524:	(bad)
   14001b527:	test   BYTE PTR [rax],al
	...
   14001ba9d:	add    BYTE PTR [rax],al
   14001ba9f:	add    bh,bh
   14001baa1:	(bad)  
   14001baa2:	inc    DWORD PTR [rax+0xff0f]
   14001baa8:	(bad)  
   14001baa9:	inc    eax
   14001baab:	add    BYTE PTR [rdi],al
   14001baad:	inc    DWORD PTR [rax]
   14001baaf:	add    bh,bh
   14001bab1:	lock add BYTE PTR [rax],al
   14001bab4:	add    edi,edi
   14001bab6:	add    BYTE PTR [rax],al
   14001bab8:	cld    
   14001bab9:	add    BYTE PTR [rax],al
   14001babb:	add    BYTE PTR [rax],al
   14001babd:	inc    DWORD PTR [rax]
   14001babf:	add    al,dh
   14001bac1:	add    BYTE PTR [rax],al
   14001bac3:	add    BYTE PTR [rax],al
   14001bac5:	jg     0x14001bac7
   14001bac7:	add    al,al
   14001bac9:	add    BYTE PTR [rax],al
   14001bacb:	add    BYTE PTR [rax],al
   14001bacd:	(bad)  
   14001bace:	add    BYTE PTR [rax],al
   14001bad0:	rol    BYTE PTR [rax],0x0
   14001bad3:	add    BYTE PTR [rax],al
   14001bad5:	(bad)  
   14001bad6:	add    BYTE PTR [rax],al
   14001bad8:	rol    BYTE PTR [rax],0x0
   14001badb:	add    BYTE PTR [rax],al
   14001badd:	sldt   WORD PTR [rax]
   14001bae0:	rol    BYTE PTR [rax],0x0
   14001bae3:	add    BYTE PTR [rax],al
   14001bae5:	(bad)  
   14001bae6:	add    BYTE PTR [rax],al
   14001bae8:	rol    BYTE PTR [rax],0x0
   14001baeb:	add    BYTE PTR [rax],al
   14001baed:	add    DWORD PTR [rax],eax
   14001baef:	add    al,al
   14001baf1:	add    BYTE PTR [rax],al
   14001baf3:	add    BYTE PTR [rax],al
   14001baf5:	add    BYTE PTR [rax],al
   14001baf7:	add    al,al
   14001baf9:	add    BYTE PTR [rax],al
   14001bafb:	add    BYTE PTR [rax],al
   14001bafd:	jns    0x14001baff
   14001baff:	add    al,al
   14001bb01:	add    BYTE PTR [rax],al
   14001bb03:	add    BYTE PTR [rax],al
   14001bb05:	jg     0x14001bb07
   14001bb07:	add    al,al
   14001bb09:	add    BYTE PTR [rax],al
   14001bb0b:	add    BYTE PTR [rax],al
   14001bb0d:	jg     0x14001bb0f
   14001bb0f:	add    al,al
   14001bb11:	add    BYTE PTR [rax],al
   14001bb13:	add    BYTE PTR [rax],al
   14001bb15:	jg     0x14001bb17
   14001bb17:	add    al,al
   14001bb19:	add    BYTE PTR [rax],al
   14001bb1b:	add    BYTE PTR [rax],al
   14001bb1d:	jg     0x14001bb1f
   14001bb1f:	add    al,al
   14001bb21:	add    BYTE PTR [rax],al
   14001bb23:	add    BYTE PTR [rax],al
   14001bb25:	jg     0x14001bb27
   14001bb27:	add    al,al
   14001bb29:	add    BYTE PTR [rax],al
   14001bb2b:	add    BYTE PTR [rax],al
   14001bb2d:	jg     0x14001bb2f
   14001bb2f:	add    al,al
   14001bb31:	add    BYTE PTR [rax],al
   14001bb33:	add    BYTE PTR [rax],al
   14001bb35:	jg     0x14001bb37
   14001bb37:	add    al,al
   14001bb39:	add    BYTE PTR [rax],al
   14001bb3b:	add    BYTE PTR [rax],al
   14001bb3d:	jg     0x14001bb3f
   14001bb3f:	add    al,al
   14001bb41:	add    BYTE PTR [rax],al
   14001bb43:	add    BYTE PTR [rax],al
   14001bb45:	jg     0x14001bb47
   14001bb47:	add    al,al
   14001bb49:	add    BYTE PTR [rax],al
   14001bb4b:	add    BYTE PTR [rax],al
   14001bb4d:	jg     0x14001bb4f
   14001bb4f:	add    al,al
   14001bb51:	add    BYTE PTR [rax],al
   14001bb53:	add    BYTE PTR [rax],al
   14001bb55:	jg     0x14001bb57
   14001bb57:	add    al,al
   14001bb59:	add    BYTE PTR [rax],al
   14001bb5b:	add    BYTE PTR [rax],al
   14001bb5d:	jg     0x14001bb5f
   14001bb5f:	add    al,al
   14001bb61:	add    BYTE PTR [rax],al
   14001bb63:	add    BYTE PTR [rax],al
   14001bb65:	jg     0x14001bb67
   14001bb67:	add    al,al
   14001bb69:	add    BYTE PTR [rax],al
   14001bb6b:	add    BYTE PTR [rax],al
   14001bb6d:	jg     0x14001bb6f
   14001bb6f:	add    al,al
   14001bb71:	add    BYTE PTR [rax],al
   14001bb73:	add    BYTE PTR [rax],al
   14001bb75:	jg     0x14001bb77
   14001bb77:	add    al,al
   14001bb79:	add    BYTE PTR [rax],al
   14001bb7b:	add    BYTE PTR [rax],al
   14001bb7d:	jg     0x14001bb7f
   14001bb7f:	add    al,al
   14001bb81:	add    BYTE PTR [rax],al
   14001bb83:	add    BYTE PTR [rax],al
   14001bb85:	jg     0x14001bb87
   14001bb87:	add    al,al
   14001bb89:	add    BYTE PTR [rax],al
   14001bb8b:	add    BYTE PTR [rax],al
   14001bb8d:	jg     0x14001bb8f
   14001bb8f:	add    al,al
   14001bb91:	add    BYTE PTR [rax],al
   14001bb93:	add    BYTE PTR [rax],al
   14001bb95:	jg     0x14001bb97
   14001bb97:	add    al,al
   14001bb99:	add    BYTE PTR [rax],al
   14001bb9b:	add    BYTE PTR [rax],al
   14001bb9d:	jg     0x14001bb9f
   14001bb9f:	add    al,al
   14001bba1:	add    BYTE PTR [rax],al
   14001bba3:	add    BYTE PTR [rax],al
   14001bba5:	jg     0x14001bba7
   14001bba7:	add    al,al
   14001bba9:	add    BYTE PTR [rax],al
   14001bbab:	add    BYTE PTR [rax],al
   14001bbad:	jg     0x14001bbaf
   14001bbaf:	add    al,al
   14001bbb1:	add    BYTE PTR [rax],al
   14001bbb3:	add    BYTE PTR [rax],al
   14001bbb5:	jg     0x14001bbb7
   14001bbb7:	add    al,al
   14001bbb9:	add    BYTE PTR [rax],al
   14001bbbb:	add    BYTE PTR [rax],al
   14001bbbd:	jg     0x14001bbbf
   14001bbbf:	add    al,al
   14001bbc1:	add    BYTE PTR [rax],al
   14001bbc3:	add    BYTE PTR [rax],al
   14001bbc5:	jg     0x14001bbc7
   14001bbc7:	add    al,al
   14001bbc9:	add    BYTE PTR [rax],al
   14001bbcb:	add    BYTE PTR [rax],al
   14001bbcd:	jg     0x14001bbcf
   14001bbcf:	add    al,al
   14001bbd1:	add    BYTE PTR [rax],al
   14001bbd3:	add    BYTE PTR [rax],al
   14001bbd5:	jg     0x14001bbd7
   14001bbd7:	add    al,al
   14001bbd9:	add    BYTE PTR [rax],al
   14001bbdb:	add    BYTE PTR [rbx],al
   14001bbdd:	inc    DWORD PTR [rax]
   14001bbdf:	add    al,ah
   14001bbe1:	add    BYTE PTR [rax],al
   14001bbe3:	add    BYTE PTR [rdi],bh
   14001bbe5:	inc    DWORD PTR [rax]
   14001bbe7:	add    bh,bh
   14001bbe9:	(bad)  
   14001bbea:	(bad)  
   14001bbeb:	(bad)  
   14001bbec:	(bad)  
   14001bbed:	inc    DWORD PTR [rax]
   14001bbef:	add    bh,bh
   14001bbf1:	(bad)  
   14001bbf2:	(bad)  
   14001bbf3:	(bad)  
   14001bbf4:	(bad)  
   14001bbf5:	inc    DWORD PTR [rax]
   14001bbf7:	add    bh,bh
   14001bbf9:	(bad)  
   14001bbfa:	(bad)  
   14001bbfb:	(bad)  
   14001bbfc:	(bad)  
   14001bbfd:	inc    DWORD PTR [rax]
   14001bbff:	add    bh,bh
   14001bc01:	(bad)  
   14001bc02:	(bad)  
   14001bc03:	(bad)  
   14001bc04:	(bad)  
   14001bc05:	inc    DWORD PTR [rax]
   14001bc07:	add    bh,bh
   14001bc09:	(bad)  
   14001bc0a:	(bad)  
   14001bc0b:	(bad)  
   14001bc0c:	(bad)  
   14001bc0d:	inc    DWORD PTR [rax]
   14001bc0f:	add    bh,bh
   14001bc11:	(bad)  
   14001bc12:	(bad)  
   14001bc13:	(bad)  
   14001bc14:	(bad)  
   14001bc15:	inc    DWORD PTR [rax]
   14001bc17:	add    bh,bh
   14001bc19:	(bad)  
   14001bc1a:	(bad)  
   14001bc1b:	(bad)  
   14001bc1c:	(bad)  
   14001bc1d:	inc    DWORD PTR [rax]
   14001bc1f:	add    BYTE PTR [rax],ch
   14001bc21:	add    BYTE PTR [rax],al
   14001bc23:	add    BYTE PTR [rax],ah
   14001bc25:	add    BYTE PTR [rax],al
   14001bc27:	add    BYTE PTR [rax+0x0],al
   14001bc2a:	add    BYTE PTR [rax],al
   14001bc2c:	add    DWORD PTR [rax],eax
   14001bc2e:	and    BYTE PTR [rax],al
   14001bc30:	add    BYTE PTR [rax],al
   14001bc32:	add    BYTE PTR [rax],al
   14001bc34:	adc    BYTE PTR [rax],0x0
	...
   14001bcf3:	add    bh,bh
   14001bcf5:	(bad)  
   14001bcf6:	inc    DWORD PTR [rcx]
	...
   14001bd00:	(bad)  
   14001bd01:	push   rsi
   14001bd03:	add    DWORD PTR [rax],eax
   14001bd05:	add    BYTE PTR [rax],al
   14001bd07:	add    bh,bh
   14001bd09:	(bad)  
   14001bd0a:	jmp    0x12701bc12
   14001bd0f:	add    edi,edi
   14001bd11:	jmp    rax
   14001bd13:	add    eax,0x6dbffff
   14001bd18:	jmp    0x14001bcfa
   14001bd1a:	mov    al,0xd
   14001bd1c:	sar    DWORD PTR [rbx-0x593de176],1
   14001bd22:	jae    0x14001bd4f
   14001bd24:	scas   al,BYTE PTR es:[rdi]
   14001bd25:	xchg   edx,eax
   14001bd26:	movsxd eax,DWORD PTR [rdx]
	...
   14001bd5c:	scas   eax,DWORD PTR es:[rdi]
   14001bd5d:	xchg   esp,eax
   14001bd5e:	add    DWORD PTR gs:[rbp-0x41fe9567],esi
   14001bd65:	movabs ds:0x718d013b68830374,al
   14001bd6e:	rex.X add eax,0x6497894
   14001bd74:	sahf   
   14001bd75:	(bad)  
   14001bd76:	push   rbx
   14001bd77:	or     ch,BYTE PTR [rdi-0x48eda770]
   14001bd7d:	cwde   
   14001bd7e:	(bad)  
   14001bd7f:	sbb    al,0xc2
   14001bd81:	movabs ds:0x94b3455a92b13269,eax
   14001bd8a:	pop    rsp
   14001bd8b:	pop    rcx
   14001bd8c:	mov    bl,0x94
   14001bd8e:	pop    rsp
   14001bd8f:	jno    0x14001bd4a
   14001bd91:	(bad)  
   14001bd92:	(bad)  
   14001bd93:	fwait
   14001bd94:	mov    esp,0xbeb1669d
   14001bd99:	movabs al,ds:0x9ab8c96ea2bfc36b
   14001bda2:	gs (bad) 
   14001bda4:	mov    dh,0x92
   14001bda6:	rex.X mov spl,0x0
	...
   14001bdcd:	add    BYTE PTR [rax],al
   14001bdcf:	add    BYTE PTR [rbx-0x67fe8f61],bh
   14001bdd5:	jl     0x14001be25
   14001bdd7:	(bad)  
   14001bdd8:	scas   al,BYTE PTR es:[rdi]
   14001bdd9:	(bad)  
   14001bdda:	push   rsi
   14001bddb:	(bad)  
   14001bddc:	mov    bl,0x94
   14001bdde:	pop    rbx
   14001bddf:	and    bh,BYTE PTR [rsp+rbx*4-0x5d3ed09e]
   14001bde6:	push   0x5a97b741
   14001bdeb:	gs mov edx,0xbd7a5e99
   14001bdf1:	lahf   
   14001bdf2:	imul   edx,DWORD PTR [rbp-0x55965f43],0xbd6da1bd
   14001bdfc:	mov    edi,0xc7cf70a3
   14001be01:	stos   DWORD PTR es:[rdi],eax
   14001be02:	jns    0x14001bddc
   14001be04:	shl    BYTE PTR [rsp+rax*4-0x77492e1f],1
   14001be0b:	in     al,0xd1
   14001be0d:	mov    bh,0x8a
   14001be0f:	out    0xd5,eax
   14001be11:	mov    esi,0xbfd6e495
   14001be16:	cdq    
   14001be17:	in     al,0xd7
   14001be19:	rcr    BYTE PTR [rdx-0x643f281b],0xe4
   14001be20:	loope  0x14001bdea
   14001be22:	popf   
   14001be23:	idiv   BYTE PTR [rsi-0x2c01b067]
   14001be29:	mov    ch,0x7b
   14001be2b:	in     eax,0xb2
   14001be2d:	lea    eax,[rcx-0x3a]
   14001be30:	cmp    bh,BYTE PTR [rdx]
   14001be32:	cmp    cl,BYTE PTR [rcx]
   14001be34:	add    BYTE PTR [rax],al
   14001be36:	add    BYTE PTR [rax],al
   14001be38:	cmp    bh,BYTE PTR [rdx]
   14001be3a:	cmp    al,BYTE PTR [rdx]
	...
   14001be50:	mov    dl,0x93
   14001be52:	pop    rcx
   14001be53:	sahf   
   14001be54:	mov    edx,0xbcad699d
   14001be59:	movabs al,ds:0xa4c0d36d9fbcc26c
   14001be62:	jae    0x14001be3f
   14001be64:	(bad)  
   14001be65:	lods   al,BYTE PTR ds:[rsi]
   14001be66:	jnp    0x14001be48
   14001be68:	shl    BYTE PTR [rsi-0x442a1975],1
   14001be6e:	xchg   edx,eax
   14001be6f:	call   0x128977f4b
   14001be74:	fcmovnb st,st(4)
   14001be76:	pushf  
   14001be77:	call   0x129a2865b
   14001be7c:	faddp  st(7),st
   14001be7e:	movabs eax,ds:0x9bc1d8e69ec4dbe9
   14001be87:	in     al,0xd9
   14001be89:	rcr    DWORD PTR [rbx-0x5c341d1e],0xe5
   14001be90:	loopne 0x14001be5a
   14001be92:	movabs eax,ds:0x9ec8e0e79fc7e0e5
   14001be9b:	(bad)  
   14001be9c:	ffreep st(7)
   14001be9e:	popf   
   14001be9f:	jmp    0x134a08a8a
   14001bea4:	mov    esp,0xe2fe4e98
   14001bea9:	retf   
   14001beaa:	movabs ds:0x79acc8ff4f99bedd,eax
   14001beb3:	loop   0x14001be77
   14001beb5:	popf   
   14001beb6:	push   rbx
   14001beb7:	mov    al,0x3a
   14001beb9:	cmp    bh,BYTE PTR [rdx]
   14001bebb:	sub    bh,BYTE PTR [rdx]
   14001bebd:	cmp    bh,BYTE PTR [rdx]
   14001bebf:	add    al,BYTE PTR [rax]
	...
   14001becd:	add    BYTE PTR [rax],al
   14001becf:	add    ah,cl
   14001bed1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bed2:	pop    rbx
   14001bed3:	(bad)  
   14001bed5:	ret    
   14001bed6:	xchg   esi,eax
   14001bed7:	std    
   14001bed8:	jmp    0x123e26eb0
   14001bedd:	int    0xa9
   14001bedf:	loopne 0x14001bec7
   14001bee1:	iret   
   14001bee2:	stos   BYTE PTR es:[rdi],al
   14001bee3:	loop   0x14001bec7
   14001bee5:	int3   
   14001bee6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bee7:	in     al,0xdc
   14001bee9:	(bad)  
   14001beea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001beeb:	loope  0x14001becf
   14001beed:	int    0xaa
   14001beef:	fucomip st,st(4)
   14001bef1:	(bad)  
   14001bef2:	mov    dl,0xe6
   14001bef4:	repz fdiv QWORD PTR [rbp-0x48200813]
   14001befb:	icebp  
   14001befc:	neg    dh
   14001befe:	mov    bh,0xee
   14001bf00:	out    dx,al
   14001bf01:	xlat   BYTE PTR ds:[rbx]
   14001bf02:	mov    al,0xe9
   14001bf04:	jmp    0x14001beda
   14001bf06:	lods   eax,DWORD PTR ds:[rsi]
   14001bf07:	call   0x127a589ed
   14001bf0c:	call   0x127ec63e0
   14001bf11:	int    0xa2
   14001bf13:	in     eax,dx
   14001bf14:	in     al,0xca
   14001bf16:	lahf   
   14001bf17:	in     eax,dx
   14001bf18:	in     al,0xca
   14001bf1a:	lahf   
   14001bf1b:	out    dx,al
   14001bf1c:	jrcxz  0x14001bee7
   14001bf1e:	lahf   
   14001bf1f:	jmp    0x14001bf0b
   14001bf21:	iret   
   14001bf22:	movabs ds:0xb7def5fe4f99bef6,al
   14001bf2b:	cmc    
   14001bf2c:	mov    ebp,0xf5ff4e98
   14001bf31:	fidiv  WORD PTR [rdi+0x539dc2ee]
   14001bf37:	repnz cmp bh,BYTE PTR [rdx]
   14001bf3a:	cmp    al,BYTE PTR [rax+0x3a]
   14001bf3d:	cmp    bh,BYTE PTR [rdx]
   14001bf3f:	sub    BYTE PTR [rdx],bh
   14001bf41:	cmp    bh,BYTE PTR [rdx]
   14001bf43:	xor    edi,DWORD PTR [rdx]
   14001bf45:	cmp    bh,BYTE PTR [rdx]
   14001bf47:	or     eax,DWORD PTR [rax]
   14001bf49:	add    BYTE PTR [rax],al
   14001bf4b:	add    BYTE PTR [rax],al
   14001bf4d:	add    BYTE PTR [rax],al
   14001bf4f:	add    dl,bl
   14001bf51:	mov    ch,0x6c
   14001bf53:	sti    
   14001bf54:	(bad)  
   14001bf56:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bf57:	int3   
   14001bf58:	repnz jrcxz 0x14001bf25
   14001bf5b:	mov    dl,0xe5
   14001bf5d:	iret   
   14001bf5e:	stos   DWORD PTR es:[rdi],eax
   14001bf5f:	(bad)  
   14001bf60:	fcmovnb st,st(5)
   14001bf62:	lahf   
   14001bf63:	loop   0x14001bf41
   14001bf65:	(bad)  
   14001bf66:	movabs eax,ds:0xbac0c0dfb9d4e2e0
   14001bf6f:	test   BYTE PTR [rbx+0x7d],0xce
   14001bf73:	std    
   14001bf74:	sub    DWORD PTR [rdi-0x1b],ebp
   14001bf77:	call   QWORD PTR [rip+0x26fff664]        # 0x16701b5e1
   14001bf7d:	push   0xffffffffffffffe9
   14001bf7f:	inc    DWORD PTR [rsi+0x77]
   14001bf82:	(bad)  
   14001bf83:	push   QWORD PTR [rdi-0x2c003341]
   14001bf89:	(bad)  
   14001bf8a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bf8b:	stc    
   14001bf8c:	shl    BYTE PTR [rdi-0x341c0e70],1
   14001bf92:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bf93:	in     al,0xec
   14001bf95:	shr    DWORD PTR [rcx-0x5930171c],cl
   14001bf9b:	in     al,0xe7
   14001bf9d:	(bad)  
   14001bf9e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bf9f:	loope  0x14001bf8d
   14001bfa1:	shl    BYTE PTR [rsi+0x509abff1],cl
   14001bfa7:	std    
   14001bfa8:	lock (bad) [rbp+0x4f99befa]
   14001bfaf:	push   rax
   14001bfb1:	fnsave [rsi+0x529cc1f8]
   14001bfb7:	(bad)  
   14001bfb8:	cmp    bh,BYTE PTR [rdx]
   14001bfba:	cmp    bl,BYTE PTR [rip+0x1d3a3a3a]        # 0x15d3bf9fa
   14001bfc0:	cmp    bh,BYTE PTR [rdx]
   14001bfc2:	cmp    bl,BYTE PTR [rip+0xe3a3a3a]        # 0x14e3bfa02
	...
   14001bfd0:	(bad)  
   14001bfd1:	mov    cl,0x66
   14001bfd3:	neg    ah
   14001bfd5:	(bad)  
   14001bfd6:	movabs ds:0xaccfe3b4c6e2f2d1,al
   14001bfdf:	rcl    esp,1
   14001bfe1:	mov    esi,0xcfd4e798
   14001bfe6:	(bad)
   14001bfe9:	jg     0x14001bfbd
   14001bfeb:	clc    
   14001bfec:	(bad)  
   14001bfed:	outs   dx,BYTE PTR ds:[rsi]
   14001bfee:	out    dx,eax
   14001bfef:	std    
   14001bff0:	sbb    BYTE PTR [rbp-0xe],ah
   14001bff3:	jmp    QWORD PTR [rcx]
   14001bff5:	push   0xfffffffffffffff1
   14001bff7:	jmp    QWORD PTR [rbx+rbp*2]
   14001bffa:	out    dx,eax
   14001bffb:	jmp    QWORD PTR [rax]
   14001bffd:	imul   ebp,edi,0xf1641aff
   14001c003:	dec    DWORD PTR [rip+0x31fff75f]        # 0x17201b768
   14001c009:	jo     0x14001bfea
   14001c00b:	inc    esp
   14001c00d:	ret    0xffbe
   14001c010:	(bad)
   14001c013:	repnz loopne 0x14001bfdf
   14001c016:	movabs ds:0xa8d0e9e4acd5ede4,eax
   14001c01f:	loope  0x14001c00f
   14001c021:	(bad)  
   14001c022:	test   al,0xf1
   14001c024:	mov    edi,0xf0fd519b
   14001c029:	fdiv   QWORD PTR [rsi+0x509bbff9]
   14001c02f:	push   rax
   14001c031:	fnsave [rsi+0x529cc1f8]
   14001c037:	inc    DWORD PTR [rax]
	...
   14001c04d:	add    BYTE PTR [rax],al
   14001c04f:	add    ch,dl
   14001c051:	mov    al,0x66
   14001c053:	neg    ah
   14001c055:	(bad)  
   14001c056:	movabs ds:0xb1d1e3b3c7e1f1d1,al
   14001c05f:	retf   0xc6c6
   14001c062:	sar    dl,0x3b
   14001c065:	jge    0x14001c040
   14001c067:	sti    
   14001c068:	adc    eax,0x15fef267
   14001c06d:	data16 out dx,al
   14001c06f:	dec    DWORD PTR [rsi]
   14001c071:	(bad)  
   14001c072:	lock call QWORD PTR [rsi]
   14001c075:	bnd jmp WORD PTR [rsi]
   14001c079:	outs   dx,BYTE PTR ds:[rsi]
   14001c07a:	bnd jmp QWORD PTR [rdi]
   14001c07d:	outs   dx,BYTE PTR ds:[rsi]
   14001c07e:	bnd jmp QWORD PTR [rdi]
   14001c081:	ins    DWORD PTR es:[rdi],dx
   14001c082:	repnz jmp FWORD PTR [rcx]
   14001c085:	outs   dx,BYTE PTR ds:[rsi]
   14001c086:	repnz call FWORD PTR [rdi+riz*2]
   14001c08a:	out    dx,eax
   14001c08b:	call   FWORD PTR [rdx]
   14001c08d:	addr32 out dx,eax
   14001c08f:	(bad)  
   14001c090:	mov    esi,0xc3ffc2c1
   14001c095:	stos   BYTE PTR es:[rdi],al
   14001c096:	xor    bl,0xe5
   14001c099:	int    0xa5
   14001c09b:	jrcxz  0x14001c086
   14001c09d:	shr    DWORD PTR [rdx-0x562a101f],1
   14001c0a3:	icebp  
   14001c0a4:	rcr    BYTE PTR [rcx+rdx*2-0x49230f03],0xf9
   14001c0ac:	rcr    BYTE PTR [rbx-0x210f00af],0xb6
   14001c0b3:	clc    
   14001c0b4:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001c0d0:	(bad)  
   14001c0d1:	mov    al,0x66
   14001c0d3:	neg    ah
   14001c0d5:	(bad)  
   14001c0d6:	movabs eax,ds:0xcfd9deafc9e0eed2
   14001c0df:	fdiv   DWORD PTR [rsi]
   14001c0e1:	jp     0x14001c0cd
   14001c0e3:	(bad)  
   14001c0e4:	adc    ch,BYTE PTR [rax-0xd]
   14001c0e7:	jmp    FWORD PTR [rcx+rdi*2]
   14001c0ea:	repnz (bad) 
   14001c0ec:	(bad)  
   14001c0ed:	(bad)  
   14001c0ee:	std    
   14001c0ef:	dec    esi
   14001c0f1:	loopne 0x14001c0ed
   14001c0f3:	push   QWORD PTR [rip+0x6fff27c]        # 0x14701b375
   14001c0f9:	pop    rsi
   14001c0fa:	repnz call FWORD PTR [rsi]
   14001c0fd:	ins    BYTE PTR es:[rdi],dx
   14001c0fe:	bnd jmp QWORD PTR [rdi]
   14001c101:	jno    0x14001c0f5
   14001c103:	jmp    QWORD PTR [rsi]
   14001c105:	outs   dx,DWORD PTR ds:[rsi]
   14001c106:	bnd jmp QWORD PTR [rdi]
   14001c109:	outs   dx,DWORD PTR ds:[rsi]
   14001c10a:	bnd jmp QWORD PTR [rdx]
   14001c10d:	push   0xffffffffffffffef
   14001c10f:	call   FWORD PTR [rsi]
   14001c111:	ins    BYTE PTR es:[rdi],dx
   14001c112:	in     eax,dx
   14001c113:	(bad)  
   14001c114:	mov    edi,0xbdffb1ba
   14001c119:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c11a:	jge    0x14001c10d
   14001c11c:	in     al,0xcc
   14001c11e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c11f:	in     eax,0xef
   14001c121:	(bad)  
   14001c122:	test   eax,0x519cc0f1
   14001c127:	std    
   14001c128:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c12f:	push   rax
   14001c131:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c137:	inc    DWORD PTR [rax]
	...
   14001c14d:	add    BYTE PTR [rax],al
   14001c14f:	add    ch,dl
   14001c151:	mov    cl,0x66
   14001c153:	neg    cl
   14001c155:	(bad)
   14001c158:	in     al,dx
   14001c159:	loope  0x14001c127
   14001c15b:	mov    dl,0x5a
   14001c15d:	mov    edx,edi
   14001c15f:	call   QWORD PTR [rax]
   14001c161:	imul   edi,ebp,0xffffffff
   14001c164:	or     al,0x68
   14001c166:	lock (bad) 
   14001c168:	jnp    0x14001c116
   14001c16a:	idiv   bh
   14001c16c:	(bad)  
   14001c16d:	(bad)  
   14001c16e:	(bad)  
   14001c16f:	(bad)  
   14001c170:	(bad)  
   14001c171:	(bad)  
   14001c172:	(bad)  
   14001c173:	(bad)  
   14001c174:	(bad)  
   14001c175:	(bad)  
   14001c176:	(bad)  
   14001c177:	call   FWORD PTR [rax+0x18fff8be]
   14001c17d:	imul   esi,ecx,0xffffffff
   14001c180:	adc    ah,BYTE PTR [rbp-0xe]
   14001c183:	jmp    QWORD PTR [rbx]
   14001c185:	jo     0x14001c179
   14001c187:	jmp    QWORD PTR [rdi]
   14001c189:	jno    0x14001c17d
   14001c18b:	jmp    QWORD PTR [rdi]
   14001c18d:	jo     0x14001c181
   14001c18f:	call   QWORD PTR [rsi]
   14001c191:	repz dec DWORD PTR [ebx-0x7c]
   14001c196:	(bad)  
   14001c198:	shr    DWORD PTR [rsi-0x4d370675],0x8a
   14001c19f:	lock repnz fsubr DWORD PTR [rbp+0x519cc0f0]
   14001c1a7:	std    
   14001c1a8:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c1af:	push   rax
   14001c1b1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c1b7:	inc    DWORD PTR [rax]
	...
   14001c1cd:	add    BYTE PTR [rax],al
   14001c1cf:	add    ch,dl
   14001c1d1:	mov    cl,0x66
   14001c1d3:	neg    edx
   14001c1d5:	(bad)  
   14001c1d6:	test   al,0xc8
   14001c1d8:	(bad)  
   14001c1da:	ror    dh,1
   14001c1dc:	and    BYTE PTR [rdx-0x6],dh
   14001c1df:	jmp    QWORD PTR [rip+0xafff37b]        # 0x14b01b560
   14001c1e5:	push   0xffffffffb07ffff0
   14001c1ea:	idiv   bh
   14001c1ec:	(bad)  
   14001c1ed:	(bad)  
   14001c1ee:	(bad)  
   14001c1ef:	(bad)  
   14001c1f0:	(bad)  
   14001c1f1:	(bad)  
   14001c1f2:	(bad)  
   14001c1f3:	(bad)  
   14001c1f4:	(bad)  
   14001c1f5:	(bad)  
   14001c1f6:	(bad)  
   14001c1f7:	(bad)  
   14001c1f8:	(bad)  
   14001c1f9:	(bad)  
   14001c1fa:	(bad)  
   14001c1fb:	jmp    rdx
   14001c1fd:	in     eax,dx
   14001c1fe:	sti    
   14001c1ff:	call   FWORD PTR [rax-0x6a]
   14001c202:	repz call QWORD PTR [rdx]
   14001c205:	push   0x6e1bfff0
   14001c20a:	bnd jmp QWORD PTR [rip+0x27fff273]        # 0x16801b484
   14001c211:	jae    0x14001c203
   14001c213:	call   QWORD PTR [rcx]
   14001c215:	push   0xfffffffffffffffa
   14001c217:	(bad)  
   14001c218:	mov    ebx,0xcaffb1b8
   14001c21d:	mov    bl,0x8b
   14001c21f:	out    dx,al
   14001c220:	cmc    
   14001c221:	fld    TBYTE PTR [rdi+0x519cc0ee]
   14001c227:	std    
   14001c228:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c22f:	push   rax
   14001c231:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c237:	inc    DWORD PTR [rax]
	...
   14001c24d:	add    BYTE PTR [rax],al
   14001c24f:	add    ch,dl
   14001c251:	mov    al,0x66
   14001c253:	neg    esp
   14001c255:	retf   0xc6ac
   14001c258:	jle    0x14001c1fb
   14001c25a:	ret    
   14001c25b:	out    dx,al
   14001c25c:	adc    dh,BYTE PTR [rdx-0x4]
   14001c25f:	jmp    FWORD PTR [rcx+rax*4]
   14001c262:	hlt    
   14001c263:	dec    DWORD PTR [rax]
   14001c265:	imul   esi,esp,0xffffffff
   14001c268:	jle    0x14001c21b
   14001c26a:	idiv   bh
   14001c26c:	(bad)  
   14001c26d:	(bad)  
   14001c26e:	(bad)  
   14001c26f:	(bad)  
   14001c270:	(bad)  
   14001c271:	(bad)  
   14001c272:	(bad)  
   14001c273:	(bad)  
   14001c274:	(bad)  
   14001c275:	(bad)  
   14001c276:	(bad)  
   14001c277:	(bad)  
   14001c278:	(bad)  
   14001c279:	(bad)  
   14001c27a:	(bad)  
   14001c27b:	(bad)  
   14001c27c:	(bad)  
   14001c27d:	(bad)  
   14001c27e:	(bad)  
   14001c27f:	(bad)  
   14001c280:	(bad)  
   14001c281:	(bad)  
   14001c282:	(bad)  
   14001c283:	jmp    FWORD PTR [rbp+0x2bfff9cc]
   14001c289:	jp     0x14001c27d
   14001c28b:	call   QWORD PTR [rcx]
   14001c28d:	push   0x7422fff3
   14001c292:	lock call QWORD PTR [rbx]
   14001c295:	imul   edi,ecx,0xffffffff
   14001c298:	fs mov esi,cs
   14001c29b:	inc    ebp
   14001c29d:	lods   eax,DWORD PTR ds:[rsi]
   14001c29e:	test   ah,dh
   14001c2a0:	repnz fsubr DWORD PTR [rbp+0x519cc0ee]
   14001c2a7:	std    
   14001c2a8:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c2af:	push   rax
   14001c2b1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c2b7:	inc    DWORD PTR [rax]
	...
   14001c2cd:	add    BYTE PTR [rax],al
   14001c2cf:	add    ch,dl
   14001c2d1:	mov    al,0x67
   14001c2d3:	neg    ah
   14001c2d5:	leave  
   14001c2d6:	stos   BYTE PTR es:[rdi],al
   14001c2d7:	retf   0x894c
   14001c2da:	(bad)  
   14001c2dc:	sbb    BYTE PTR [rcx-0x2],bh
   14001c2df:	jmp    FWORD PTR [rsp+rax*4]
   14001c2e2:	hlt    
   14001c2e3:	dec    DWORD PTR [rax]
   14001c2e5:	outs   dx,BYTE PTR ds:[rsi]
   14001c2e6:	cmc    
   14001c2e7:	inc    DWORD PTR [rax-0x84c]
   14001c2ed:	(bad)  
   14001c2ee:	(bad)  
   14001c2ef:	(bad)  
   14001c2f0:	(bad)  
   14001c2f1:	(bad)  
   14001c2f2:	(bad)  
   14001c2f3:	(bad)  
   14001c2f4:	(bad)  
   14001c2f5:	(bad)  
   14001c2f6:	(bad)  
   14001c2f7:	(bad)  
   14001c2f8:	(bad)  
   14001c2f9:	(bad)  
   14001c2fa:	(bad)  
   14001c2fb:	(bad)  
   14001c2fc:	(bad)  
   14001c2fd:	(bad)  
   14001c2fe:	(bad)  
   14001c2ff:	(bad)  
   14001c300:	(bad)  
   14001c301:	(bad)  
   14001c302:	(bad)  
   14001c303:	(bad)  
   14001c304:	(bad)  
   14001c305:	(bad)  
   14001c306:	(bad)  
   14001c307:	(bad)  
   14001c308:	(bad)  
   14001c309:	(bad)  
   14001c30a:	(bad)  
   14001c30b:	push   QWORD PTR [rax+rbp*4-0x9]
   14001c30f:	jmp    QWORD PTR [rbx]
   14001c311:	ja     0x14001c307
   14001c313:	call   QWORD PTR [rip+0x40fff56d]        # 0x18101b886
   14001c319:	and    edi,0xffffffff
   14001c31c:	(bad)  
   14001c31d:	scas   al,BYTE PTR es:[rdi]
   14001c31e:	test   edi,esi
   14001c320:	in     al,dx
   14001c321:	shl    BYTE PTR [rdi+0x529cc0ef],cl
   14001c327:	std    
   14001c328:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c32f:	push   rax
   14001c331:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c337:	inc    DWORD PTR [rax]
	...
   14001c34d:	add    BYTE PTR [rax],al
   14001c34f:	add    ch,dl
   14001c351:	mov    al,0x67
   14001c353:	hlt    
   14001c354:	fcmovb st,st(7)
   14001c356:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001c357:	(bad)  
   14001c358:	xor    bh,BYTE PTR [rdi-0x14]
   14001c35b:	(bad)  
   14001c35c:	sbb    eax,0x2cffff7f
   14001c361:	test   ebp,esi
   14001c363:	dec    DWORD PTR [rcx]
   14001c365:	jb     0x14001c35c
   14001c367:	inc    DWORD PTR [rcx-0x74b]
   14001c36d:	(bad)  
   14001c36e:	(bad)  
   14001c36f:	(bad)  
   14001c370:	(bad)  
   14001c371:	(bad)  
   14001c372:	(bad)  
   14001c373:	(bad)  
   14001c374:	(bad)  
   14001c375:	(bad)  
   14001c376:	(bad)  
   14001c377:	(bad)  
   14001c378:	(bad)  
   14001c379:	(bad)  
   14001c37a:	(bad)  
   14001c37b:	(bad)  
   14001c37c:	(bad)  
   14001c37d:	(bad)  
   14001c37e:	(bad)  
   14001c37f:	(bad)  
   14001c380:	(bad)  
   14001c381:	(bad)  
   14001c382:	(bad)  
   14001c383:	(bad)  
   14001c384:	(bad)  
   14001c385:	(bad)  
   14001c386:	(bad)  
   14001c387:	(bad)  
   14001c388:	(bad)  
   14001c389:	(bad)  
   14001c38a:	(bad)  
   14001c38b:	(bad)  
   14001c38c:	(bad)  
   14001c38d:	(bad)  
   14001c38e:	(bad)  
   14001c38f:	jmp    QWORD PTR [rbx-0x61]
   14001c392:	repz call QWORD PTR [rdx]
   14001c395:	ins    DWORD PTR es:[rdi],dx
   14001c396:	repz jmp FWORD PTR [rcx]
   14001c399:	jnp    0x14001c38e
   14001c39b:	dec    eax
   14001c39d:	scas   eax,DWORD PTR es:[rdi]
   14001c39e:	test   eax,edi
   14001c3a0:	jmp    0x100f06874
   14001c3a5:	pushf  
   14001c3a6:	push   rdx
   14001c3a7:	std    
   14001c3a8:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c3af:	push   rax
   14001c3b1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c3b7:	inc    DWORD PTR [rax]
	...
   14001c3cd:	add    BYTE PTR [rax],al
   14001c3cf:	add    ch,dl
   14001c3d1:	mov    al,0x67
   14001c3d3:	hlt    
   14001c3d4:	fcmovb st,st(7)
   14001c3d6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c3d7:	int    0x30
   14001c3d9:	jg     0x14001c3c6
   14001c3db:	(bad)  
   14001c3dc:	(bad)  
   14001c3dd:	test   edi,edi
   14001c3df:	jmp    FWORD PTR [rdi]
   14001c3e1:	mov    dh,ch
   14001c3e3:	dec    DWORD PTR [rax+rdi*2]
   14001c3e6:	idiv   bh
   14001c3e8:	xor    BYTE PTR [rsi-0x7],0xff
   14001c3ef:	(bad)  
   14001c3f0:	(bad)  
   14001c3f1:	(bad)  
   14001c3f2:	(bad)  
   14001c3f3:	(bad)  
   14001c3f4:	(bad)  
   14001c3f5:	(bad)  
   14001c3f6:	(bad)  
   14001c3f7:	(bad)  
   14001c3f8:	(bad)  
   14001c3f9:	(bad)  
   14001c3fa:	(bad)  
   14001c3fb:	(bad)  
   14001c3fc:	(bad)  
   14001c3fd:	(bad)  
   14001c3fe:	(bad)  
   14001c3ff:	(bad)  
   14001c400:	(bad)  
   14001c401:	(bad)  
   14001c402:	(bad)  
   14001c403:	(bad)  
   14001c404:	(bad)  
   14001c405:	(bad)  
   14001c406:	(bad)  
   14001c407:	(bad)  
   14001c408:	(bad)  
   14001c409:	(bad)  
   14001c40a:	(bad)  
   14001c40b:	(bad)  
   14001c40c:	(bad)  
   14001c40d:	(bad)  
   14001c40e:	(bad)  
   14001c40f:	push   QWORD PTR [rcx-0x56]
   14001c412:	idiv   edi
   14001c414:	adc    esi,DWORD PTR [rax-0xc]
   14001c417:	jmp    FWORD PTR [rbx]
   14001c419:	jle    0x14001c40e
   14001c41b:	dec    eax
   14001c41d:	scas   eax,DWORD PTR es:[rdi]
   14001c41e:	test   eax,edi
   14001c420:	jmp    0x14001c3f3
   14001c422:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c423:	out    dx,al
   14001c424:	rcr    BYTE PTR [rdx+rdx*2-0x49230f03],0xf9
   14001c42c:	rcr    BYTE PTR [rbx-0x210f00af],0xb6
   14001c433:	clc    
   14001c434:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001c450:	(bad)  
   14001c451:	mov    al,0x67
   14001c453:	neg    dl
   14001c455:	(bad)  
   14001c456:	test   al,0xcb
   14001c458:	rex.W xchg dl,bl
   14001c45b:	cli    
   14001c45c:	and    DWORD PTR [rax-0x6dc90002],ecx
   14001c462:	hlt    
   14001c463:	call   QWORD PTR [rax]
   14001c465:	xor    dh,0xff
   14001c468:	xchg   DWORD PTR [rdx-0x7],edi
   14001c46e:	(bad)  
   14001c46f:	(bad)  
   14001c470:	(bad)  
   14001c471:	(bad)  
   14001c472:	(bad)  
   14001c473:	(bad)  
   14001c474:	(bad)  
   14001c475:	(bad)  
   14001c476:	(bad)  
   14001c477:	(bad)  
   14001c478:	(bad)  
   14001c479:	(bad)  
   14001c47a:	(bad)  
   14001c47b:	(bad)  
   14001c47c:	(bad)  
   14001c47d:	(bad)  
   14001c47e:	(bad)  
   14001c47f:	(bad)  
   14001c480:	(bad)  
   14001c481:	(bad)  
   14001c482:	(bad)  
   14001c483:	(bad)  
   14001c484:	(bad)  
   14001c485:	(bad)  
   14001c486:	(bad)  
   14001c487:	(bad)  
   14001c488:	(bad)  
   14001c489:	repz std 
   14001c48b:	jmp    QWORD PTR [rdx-0x5d]
   14001c48e:	clc    
   14001c48f:	jmp    FWORD PTR [rdi]
   14001c491:	(bad)  
   14001c492:	idiv   bh
   14001c494:	adc    esi,DWORD PTR [rbx-0x8]
   14001c497:	inc    DWORD PTR [rbx-0x79]
   14001c49a:	out    0xff,eax
   14001c49c:	(bad)
   14001c49f:	imul   ah
   14001c4a1:	shl    BYTE PTR [rdi+0x529cc0ef],cl
   14001c4a7:	std    
   14001c4a8:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c4af:	push   rax
   14001c4b1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c4b7:	inc    DWORD PTR [rax]
	...
   14001c4cd:	add    BYTE PTR [rax],al
   14001c4cf:	add    ch,dl
   14001c4d1:	mov    cl,0x66
   14001c4d3:	neg    esp
   14001c4d5:	retf   0xc6ac
   14001c4d8:	ins    DWORD PTR es:[rdi],dx
   14001c4d9:	xchg   esp,eax
   14001c4da:	mov    esi,0xfc881df2
   14001c4df:	(bad)  
   14001c4e0:	ds cdq 
   14001c4e2:	hlt    
   14001c4e3:	call   QWORD PTR [rdx]
   14001c4e5:	xchg   esi,esi
   14001c4e7:	dec    DWORD PTR [rcx-0x644]
   14001c4ed:	(bad)  
   14001c4ee:	(bad)  
   14001c4ef:	(bad)  
   14001c4f0:	(bad)  
   14001c4f1:	(bad)  
   14001c4f2:	(bad)  
   14001c4f3:	(bad)  
   14001c4f4:	(bad)  
   14001c4f5:	(bad)  
   14001c4f6:	(bad)  
   14001c4f7:	(bad)  
   14001c4f8:	(bad)  
   14001c4f9:	(bad)  
   14001c4fa:	(bad)  
   14001c4fb:	(bad)  
   14001c4fc:	(bad)  
   14001c4fd:	(bad)  
   14001c4fe:	(bad)  
   14001c4ff:	(bad)  
   14001c500:	(bad)  
   14001c501:	(bad)  
   14001c502:	(bad)  
   14001c503:	call   QWORD PTR [rbp+0x26fffac2]
   14001c509:	(bad)  
   14001c50a:	idiv   edi
   14001c50c:	sbb    DWORD PTR [rcx-0xa],edi
   14001c50f:	jmp    QWORD PTR [rbx]
   14001c511:	jg     0x14001c506
   14001c513:	call   QWORD PTR [rax+rdi*2]
   14001c516:	cld    
   14001c517:	jmp    FWORD PTR [rax-0x6e]
   14001c51a:	(bad)  
   14001c51b:	inc    ebx
   14001c51d:	stos   DWORD PTR es:[rdi],eax
   14001c51e:	xor    edx,0xfffffff2
   14001c521:	fsubr  DWORD PTR [rbp+0x519cc0ee]
   14001c527:	std    
   14001c528:	lock fdiv QWORD PTR [rsi+0x519bc0f9]
   14001c52f:	push   rax
   14001c531:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c537:	inc    DWORD PTR [rax]
	...
   14001c54d:	add    BYTE PTR [rax],al
   14001c54f:	add    ch,dl
   14001c551:	mov    al,0x66
   14001c553:	clc    
   14001c554:	(bad)  
   14001c556:	scas   al,BYTE PTR es:[rdi]
   14001c557:	(bad)  
   14001c558:	pushf  
   14001c559:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c55a:	movabs al,ds:0xf99d40fffa8424e0
   14001c563:	call   FWORD PTR [rcx]
   14001c565:	(bad)  
   14001c566:	idiv   edi
   14001c568:	mov    BYTE PTR [rsi-0x8],bh
   14001c56e:	(bad)  
   14001c56f:	(bad)  
   14001c570:	(bad)  
   14001c571:	(bad)  
   14001c572:	(bad)  
   14001c573:	(bad)  
   14001c574:	(bad)  
   14001c575:	(bad)  
   14001c576:	(bad)  
   14001c577:	(bad)  
   14001c578:	(bad)  
   14001c579:	(bad)  
   14001c57a:	(bad)  
   14001c57b:	jmp    rbx
   14001c57d:	lock std 
   14001c57f:	call   QWORD PTR [rax-0x62]
   14001c582:	clc    
   14001c583:	call   QWORD PTR [rsi]
   14001c585:	jnp    0x14001c57d
   14001c587:	call   FWORD PTR [rdi]
   14001c589:	xor    dh,0xff
   14001c58c:	sub    BYTE PTR [rbp-0x7bd5000a],al
   14001c592:	cmc    
   14001c593:	call   QWORD PTR [rip+0xffffffff8bfffa7e]        # 0xcc01c017
   14001c599:	xchg   esp,eax
   14001c59a:	lahf   
   14001c59b:	std    
   14001c59c:	(bad)
   14001c59f:	in     al,dx
   14001c5a0:	clc    
   14001c5a1:	fdiv   QWORD PTR [rdx+0x509abfef]
   14001c5a7:	std    
   14001c5a8:	lock fdiv QWORD PTR [rsi+0x529cc1f9]
   14001c5af:	push   rax
   14001c5b1:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c5b7:	inc    DWORD PTR [rax]
	...
   14001c5cd:	add    BYTE PTR [rax],al
   14001c5cf:	add    ah,dl
   14001c5d1:	mov    al,0x66
   14001c5d3:	neg    esp
   14001c5d5:	leave  
   14001c5d6:	test   al,0xcd
   14001c5d8:	loope  0x14001c5b0
   14001c5da:	ret    0x53b9
   14001c5dd:	mov    dl,dl
   14001c5df:	jmp    FWORD PTR [rdi]
   14001c5e1:	cdq    
   14001c5e2:	std    
   14001c5e3:	call   FWORD PTR [rdx]
   14001c5e5:	nop
   14001c5e6:	cmc    
   14001c5e7:	call   QWORD PTR [rbx+rax*8-0x8]
   14001c5ee:	(bad)  
   14001c5ef:	(bad)  
   14001c5f0:	(bad)  
   14001c5f1:	(bad)  
   14001c5f2:	(bad)  
   14001c5f3:	(bad)  
   14001c5f4:	(bad)  
   14001c5f5:	(bad)  
   14001c5f6:	(bad)  
   14001c5f7:	call   QWORD PTR [rcx+0x23fffbc2]
   14001c5fd:	mov    ch,dh
   14001c5ff:	call   FWORD PTR [rcx+rax*4]
   14001c602:	idiv   bh
   14001c604:	sub    BYTE PTR [rax-0x76d6000a],cl
   14001c60a:	idiv   bh
   14001c60c:	sub    al,0x88
   14001c60e:	idiv   bh
   14001c610:	(bad)  
   14001c611:	jl     0x14001c60b
   14001c613:	call   QWORD PTR [rbx-0x6e]
   14001c616:	loope  0x14001c617
   14001c618:	mov    ebx,0xe5f684a7
   14001c61d:	(bad)  
   14001c61e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c61f:	in     al,0xf8
   14001c621:	fidiv  WORD PTR [rdx+0x519bbff3]
   14001c627:	std    
   14001c628:	lock fnsave [rsi+0x519cc0fa]
   14001c62f:	push   rax
   14001c631:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c637:	inc    DWORD PTR [rax]
	...
   14001c64d:	add    BYTE PTR [rax],al
   14001c64f:	add    ah,dl
   14001c651:	mov    al,0x66
   14001c653:	neg    edx
   14001c655:	(bad)  
   14001c656:	lahf   
   14001c657:	shr    edi,1
   14001c659:	loope  0x14001c625
   14001c65b:	scas   al,BYTE PTR es:[rdi]
   14001c65c:	xchg   esi,eax
   14001c65d:	(bad)  
   14001c65e:	nop
   14001c65f:	(bad)  
   14001c660:	xor    ecx,DWORD PTR [rbp-0x68e20011]
   14001c666:	sti    
   14001c667:	jmp    FWORD PTR [rsi-0x51]
   14001c66a:	idiv   edi
   14001c66c:	(bad)  
   14001c66d:	(bad)  
   14001c66e:	(bad)  
   14001c66f:	(bad)  
   14001c670:	fucomi st,st(4)
   14001c672:	cld    
   14001c673:	call   QWORD PTR [rsi-0x58]
   14001c676:	stc    
   14001c677:	call   FWORD PTR [rdi]
   14001c679:	mov    edi,?
   14001c67b:	jmp    FWORD PTR [rdx]
   14001c67d:	mov    ?,edi
   14001c67f:	jmp    FWORD PTR [rsi+rcx*4]
   14001c682:	idiv   edi
   14001c684:	sub    ecx,DWORD PTR [rbp-0x74d5000a]
   14001c68a:	idiv   edi
   14001c68c:	es xchg ch,dh
   14001c68f:	jmp    QWORD PTR [rax*4-0x6c720011]
   14001c696:	pushf  
   14001c697:	std    
   14001c698:	sar    DWORD PTR [rbx-0x20070b6c],1
   14001c69e:	mov    bh,0xe5
   14001c6a0:	neg    esp
   14001c6a2:	mov    al,0xf5
   14001c6a4:	rcr    BYTE PTR [rdx+rdx*2-0x49220f02],0xfa
   14001c6ac:	rcr    BYTE PTR [rcx+rdx*2-0x49210f01],0xf8
   14001c6b4:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001c6d0:	(bad)  
   14001c6d1:	mov    al,0x65
   14001c6d3:	not    edi
   14001c6d5:	rcr    DWORD PTR [rbp-0x3b21122f],0xb3
   14001c6dc:	(bad)  
   14001c6de:	lods   eax,DWORD PTR ds:[rsi]
   14001c6df:	retf   
   14001c6e0:	or     BYTE PTR [rbx-0x6ed60068],0xf2
   14001c6e7:	jmp    QWORD PTR [rbx]
   14001c6e9:	xchg   ebx,eax
   14001c6ea:	sti    
   14001c6eb:	inc    DWORD PTR [rcx-0x61]
   14001c6ee:	idiv   bh
   14001c6f0:	sub    edx,DWORD PTR [rbx-0x6ddb000b]
   14001c6f6:	idiv   edi
   14001c6f8:	xor    edx,DWORD PTR [rbp-0x6ace0009]
   14001c6fe:	idiv   edi
   14001c700:	xor    BYTE PTR [rbx-0x6fd00009],dl
   14001c706:	idiv   edi
   14001c708:	(bad)  
   14001c709:	mov    dh,dh
   14001c70b:	call   FWORD PTR [rip+0xffffffff89fff184]        # 0xca01b895
   14001c711:	movabs eax,ds:0xdaf2f790b7ceffbe
   14001c71a:	mov    cl,0xea
   14001c71c:	stc    
   14001c71d:	fbstp  TBYTE PTR [rbp-0x4f230817]
   14001c723:	test   al,0x9c
   14001c726:	push   rcx
   14001c727:	std    
   14001c728:	lock fnsave [rsi+0x519cc0fa]
   14001c72f:	push   rax
   14001c731:	fidiv  WORD PTR [rsi+0x529cc1f8]
   14001c737:	inc    DWORD PTR [rax]
	...
   14001c74d:	add    BYTE PTR [rax],al
   14001c74f:	add    ah,dl
   14001c751:	scas   eax,DWORD PTR es:[rdi]
   14001c752:	gs not ebp
   14001c755:	mov    edi,0xdbebd19b
   14001c75a:	mov    edi,0xaed0e3b4
   14001c75f:	iret   
   14001c760:	sar    DWORD PTR [rbx-0x6c74116c],cl
   14001c766:	cwde   
   14001c767:	cld    
   14001c768:	cmp    BYTE PTR [rsi-0x73e7001d],cl
   14001c76e:	sti    
   14001c76f:	jmp    FWORD PTR [rdx]
   14001c771:	xchg   edx,eax
   14001c772:	clc    
   14001c773:	push   QWORD PTR [rdx*4-0x68c9000a]
   14001c77a:	cmc    
   14001c77b:	push   QWORD PTR [rsp+rdx*4]
   14001c77e:	cmc    
   14001c77f:	jmp    FWORD PTR [rsi+rcx*4]
   14001c782:	cmc    
   14001c783:	call   FWORD PTR [rip+0x34fffb87]        # 0x17501c310
   14001c789:	mov    edx,esp
   14001c78b:	dec    DWORD PTR [rdi-0x37004a60]
   14001c791:	mov    cl,0x88
   14001c793:	imul   dh
   14001c795:	(bad)  
   14001c796:	scas   al,BYTE PTR es:[rdi]
   14001c797:	(bad)  
   14001c798:	clc    
   14001c799:	fidiv  WORD PTR [rbx+rbp*8-0x174e230b]
   14001c7a0:	neg    esp
   14001c7a2:	mov    al,0xf4
   14001c7a4:	rcr    BYTE PTR [rcx+rdx*2-0x49220f02],0xfa
   14001c7ac:	rcr    BYTE PTR [rcx+rdx*2-0x48210f01],0xf9
   14001c7b4:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001c7d0:	shr    DWORD PTR [rdi-0x412b089c],cl
   14001c7d6:	(bad)  
   14001c7d7:	shr    dl,1
   14001c7d9:	fidivr DWORD PTR [rsi-0x57321d4c]
   14001c7df:	rcr    esi,1
   14001c7e1:	(bad)  
   14001c7e2:	lahf   
   14001c7e3:	(bad)  
   14001c7e4:	in     eax,0xd0
   14001c7e6:	scas   al,BYTE PTR es:[rdi]
   14001c7e7:	(bad)  
   14001c7e8:	movabs ds:0x46ffb09173f37c96,eax
   14001c7f1:	mov    ds,ecx
   14001c7f3:	jmp    QWORD PTR [rdi]
   14001c7f5:	mov    esp,ebp
   14001c7f7:	call   QWORD PTR [rip+0x28fff683]        # 0x16901be80
   14001c7fd:	mov    ebp,ebp
   14001c7ff:	inc    DWORD PTR [rdi-0x70]
   14001c802:	(bad)  
   14001c804:	jns    0x14001c7a0
   14001c806:	mov    esi,0x8ba1adff
   14001c80b:	cld    
   14001c80c:	sar    DWORD PTR [rax-0x2810106f],1
   14001c812:	scas   eax,DWORD PTR es:[rdi]
   14001c813:	(bad)  
   14001c814:	clc    
   14001c815:	fnsave [rbx-0x4f250b15]
   14001c81b:	jmp    0x14001c812
   14001c81d:	fdiv   QWORD PTR [rcx-0x4f230818]
   14001c823:	hlt    
   14001c824:	rcr    BYTE PTR [rcx+rdx*2-0x49220f02],0xfa
   14001c82c:	rcr    BYTE PTR [rcx+rdx*2-0x48210f01],0xf9
   14001c834:	rcr    DWORD PTR [rdx+rdx*2+0xff],0x0
	...
   14001c850:	(bad)  
   14001c851:	mov    al,0x65
   14001c853:	clc    
   14001c854:	sar    BYTE PTR [rbp-0x28183266],cl
   14001c85a:	mov    ebp,0xa5c9dfb1
   14001c85f:	rcr    edx,1
   14001c861:	rcl    BYTE PTR [rsi+rbp*8-0x2c4f2a15],0xe6
   14001c869:	shr    DWORD PTR [rbp-0x643d252a],1
   14001c86f:	clc    
   14001c870:	enter  0x91b3,0xf9
   14001c874:	(bad)  
   14001c875:	mov    ch,0x95
   14001c877:	sti    
   14001c878:	(bad)  
   14001c879:	mov    dh,0x97
   14001c87b:	cld    
   14001c87c:	enter  0x98b6,0xfb
   14001c880:	iret   
   14001c881:	mov    ebx,0xc7ddfb99
   14001c886:	movabs ds:0xb4def7f0a8cbe0f7,eax
   14001c88f:	call   0x12ab3a589
   14001c894:	hlt    
   14001c895:	(bad)  [rax-0x4f250b15]
   14001c89b:	jmp    0x14001c892
   14001c89d:	fdiv   QWORD PTR [rcx-0x4f230818]
   14001c8a3:	hlt    
   14001c8a4:	rcr    BYTE PTR [rcx+rdx*2-0x48220f03],0xfa
   14001c8ac:	rcr    BYTE PTR [rbx-0x210f00af],0xb8
   14001c8b3:	clc    
   14001c8b4:	mov    edx,0xf25595
	...
   14001c8cd:	add    BYTE PTR [rax],al
   14001c8cf:	add    ah,dl
   14001c8d1:	scas   eax,DWORD PTR es:[rdi]
   14001c8d2:	addr32 cld 
   14001c8d4:	shl    BYTE PTR [rdi-0x26131773],1
   14001c8da:	mov    ecx,0xadd1e7c2
   14001c8df:	shl    ebp,cl
   14001c8e1:	retf   0xf89c
   14001c8e4:	out    dx,al
   14001c8e5:	(bad)  
   14001c8e6:	stos   DWORD PTR es:[rdi],eax
   14001c8e7:	jmp    0x128ad9dd9
   14001c8ec:	neg    ebx
   14001c8ee:	scas   eax,DWORD PTR es:[rdi]
   14001c8ef:	div    edi
   14001c8f1:	fld    TBYTE PTR [rdi-0x51240a0a]
   14001c8f7:	hlt    
   14001c8f8:	neg    ah
   14001c8fa:	scas   eax,DWORD PTR es:[rdi]
   14001c8fb:	hlt    
   14001c8fc:	neg    esp
   14001c8fe:	mov    al,0xf4
   14001c900:	neg    esp
   14001c902:	mov    al,0xf4
   14001c904:	cli    
   14001c905:	loopne 0x14001c8ba
   14001c907:	hlt    
   14001c908:	cld    
   14001c909:	loop   0x14001c8c1
   14001c90b:	hlt    
   14001c90c:	stc    
   14001c90d:	fbstp  TBYTE PTR [rdx-0x4d21070c]
   14001c913:	repnz clc 
   14001c915:	fidiv  WORD PTR [rdx-0x4d210710]
   14001c91b:	out    dx,eax
   14001c91c:	stc    
   14001c91d:	fbstp  TBYTE PTR [rbx+rbp*8-0x44a1b01]
   14001c924:	rcr    DWORD PTR [rdx+rdx*2-0x79492c01],0xf8
   14001c92c:	vorps  xmm7,xmm11,xmm7
   14001c930:	mov    esp,0xbeea6399
   14001c935:	popf   
   14001c936:	push   0x9e
	...
   14001c94f:	add    BYTE PTR [rdi-0x4783a873],ch
   14001c955:	cwde   
   14001c956:	data16 ffree st(3)
   14001c959:	movabs al,ds:0x9fc3ff70a0c3ff70
   14001c962:	outs   dx,DWORD PTR ds:[rsi]
   14001c963:	inc    edx
   14001c965:	lahf   
   14001c966:	outs   dx,BYTE PTR ds:[rsi]
   14001c967:	inc    ecx
   14001c969:	sahf   
   14001c96a:	ins    DWORD PTR es:[rdi],dx
   14001c96b:	inc    eax
   14001c96d:	popf   
   14001c96e:	imul   edi,edi,0xffffffc0
   14001c971:	pushf  
   14001c972:	push   0xffffffffffffffff
   14001c974:	mov    ebp,0xbcff679b
   14001c979:	(bad)  
   14001c97a:	addr32 (bad) 
   14001c97c:	mov    esp,0xbaff6499
   14001c981:	xchg   edi,eax
   14001c982:	movsxd edi,edi
   14001c984:	mov    ecx,0xb8ff6096
   14001c989:	xchg   esi,eax
   14001c98a:	pop    rdi
   14001c98b:	push   QWORD PTR [rdi-0x4900a26d]
   14001c991:	xchg   ebx,eax
   14001c992:	pop    rbx
   14001c993:	push   QWORD PTR [rbp-0x4b00a46d]
   14001c999:	xchg   ecx,eax
   14001c99a:	pop    rax
   14001c99b:	push   QWORD PTR [rbx-0x4c00a870]
   14001c9a1:	(bad)  
   14001c9a2:	push   rdi
   14001c9a3:	push   QWORD PTR [rcx-0x4b17a872]
   14001c9a9:	xchg   ecx,eax
   14001c9aa:	pop    rdx
   14001c9ab:	mov    edi,0x59588eb0
   14001c9b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001c9b1:	mov    BYTE PTR [rcx+0x15],bl
   14001c9b4:	test   al,0x8c
   14001c9b6:	pop    rbp
   14001c9b7:	(bad)  
	...
   14001cc48:	(bad)  
   14001cc49:	(bad)  
   14001cc4a:	(bad)  
   14001cc4b:	(bad)  
   14001cc4c:	(bad)  
   14001cc4d:	in     eax,dx
   14001cc4e:	add    bh,bh
   14001cc50:	clc    
   14001cc51:	add    BYTE PTR [rax],al
   14001cc53:	inc    eax
   14001cc55:	add    BYTE PTR [rax],al
   14001cc57:	(bad)  
   14001cc58:	rol    BYTE PTR [rax],0x0
   14001cc5b:	add    eax,eax
   14001cc5d:	add    BYTE PTR [rax],al
   14001cc5f:	add    al,al
   14001cc61:	add    BYTE PTR [rax],al
   14001cc63:	add    al,al
   14001cc65:	add    BYTE PTR [rax],al
   14001cc67:	xadd   BYTE PTR [rax],al
   14001cc6a:	add    BYTE PTR [rdi],cl
   14001cc6c:	rol    BYTE PTR [rax],0x0
   14001cc6f:	xadd   BYTE PTR [rax],al
   14001cc72:	add    BYTE PTR [rdi],cl
   14001cc74:	rol    BYTE PTR [rax],0x0
   14001cc77:	xadd   BYTE PTR [rax],al
   14001cc7a:	add    BYTE PTR [rdi],cl
   14001cc7c:	rol    BYTE PTR [rax],0x0
   14001cc7f:	xadd   BYTE PTR [rax],al
   14001cc82:	add    BYTE PTR [rdi],cl
   14001cc84:	rol    BYTE PTR [rax],0x0
   14001cc87:	xadd   BYTE PTR [rax],al
   14001cc8a:	add    BYTE PTR [rdi],cl
   14001cc8c:	rol    BYTE PTR [rax],0x0
   14001cc8f:	xadd   BYTE PTR [rax],al
   14001cc92:	add    BYTE PTR [rdi],cl
   14001cc94:	rol    BYTE PTR [rax],0x0
   14001cc97:	xadd   BYTE PTR [rax],al
   14001cc9a:	add    BYTE PTR [rdi],cl
   14001cc9c:	rol    BYTE PTR [rax],0x0
   14001cc9f:	xadd   BYTE PTR [rax],al
   14001cca2:	add    BYTE PTR [rdi],cl
   14001cca4:	rol    BYTE PTR [rax],0x0
   14001cca7:	xadd   BYTE PTR [rax],al
   14001ccaa:	add    BYTE PTR [rdi],cl
   14001ccac:	rol    BYTE PTR [rax],0x0
   14001ccaf:	xadd   BYTE PTR [rax],al
   14001ccb2:	add    BYTE PTR [rdi],cl
   14001ccb4:	(bad)  
   14001ccb5:	(bad)  
   14001ccb6:	(bad)  
   14001ccb7:	(bad)  
   14001ccb8:	(bad)  
   14001ccb9:	(bad)  
   14001ccba:	(bad)  
   14001ccbb:	(bad)  
   14001ccbc:	(bad)  
   14001ccbd:	(bad)  
   14001ccbe:	(bad)  
   14001ccbf:	(bad)  
   14001ccc0:	(bad)  
   14001ccc1:	(bad)  
   14001ccc2:	(bad)  
   14001ccc3:	(bad)  
   14001ccc4:	(bad)  
   14001ccc5:	(bad)  
   14001ccc6:	(bad)  
   14001ccc7:	jmp    FWORD PTR [rax]
   14001ccc9:	add    BYTE PTR [rax],al
   14001cccb:	add    BYTE PTR [rax],bl
   14001cccd:	add    BYTE PTR [rax],al
   14001cccf:	add    BYTE PTR [rax],dh
   14001ccd1:	add    BYTE PTR [rax],al
   14001ccd3:	add    BYTE PTR [rcx],al
   14001ccd5:	add    BYTE PTR [rax],ah
   14001ccd7:	add    BYTE PTR [rax],al
   14001ccd9:	add    BYTE PTR [rax],al
   14001ccdb:	add    BYTE PTR [rax+0x9],ah
	...
   14001cd0a:	add    BYTE PTR [rax],al
   14001cd0c:	lea    ebp,[rdi+0x22]
   14001cd0f:	add    DWORD PTR [rsi-0x60fdc888],edx
   14001cd15:	test   BYTE PTR [rcx+0x7],cl
   14001cd18:	stos   DWORD PTR es:[rdi],eax
   14001cd19:	xchg   ecx,eax
   14001cd1a:	pop    rbx
   14001cd1b:	or     eax,ecx
   14001cd1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cd1e:	jno    0x14001cd4a
   14001cd20:	mov    ch,0x98
   14001cd22:	(bad)  
   14001cd23:	(bad)  
   14001cd24:	mov    ecx,0xbd64679f
   14001cd29:	movabs ds:0xabc2a772a5be876f,eax
   14001cd32:	jp     0x14001cd01
   14001cd34:	ret    
   14001cd35:	stos   DWORD PTR es:[rdi],eax
   14001cd36:	jp     0x14001cd12
   14001cd38:	shl    DWORD PTR [rdi+0x617bed71],0x2b
   14001cd3f:	(bad)  
   14001cd40:	(bad)  
   14001cd41:	adc    ecx,DWORD PTR [rip+0x548aa614]        # 0x1948c735b
   14001cd47:	add    DWORD PTR [rax],eax
	...
   14001cd51:	add    BYTE PTR [rax],al
   14001cd53:	add    BYTE PTR [rbx-0x4efdcd84],bl
   14001cd59:	xchg   esp,eax
   14001cd5a:	pop    rcx
   14001cd5b:	and    BYTE PTR [rcx+rbx*4-0x5b41b29e],dh
   14001cd62:	ins    DWORD PTR es:[rdi],dx
   14001cd63:	mov    si,0x6ea4
   14001cd67:	ja     0x14001cd29
   14001cd69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cd6a:	jb     0x14001cd03
   14001cd6c:	shl    BYTE PTR [rdi-0x553c548c],0x78
   14001cd73:	ret    
   14001cd74:	(bad)  
   14001cd75:	stos   BYTE PTR es:[rdi],al
   14001cd76:	js     0x14001cd4b
   14001cd78:	ret    
   14001cd79:	stos   DWORD PTR es:[rdi],eax
   14001cd7a:	js     0x14001cd5e
   14001cd7c:	(bad)  
   14001cd7d:	scas   eax,DWORD PTR es:[rdi]
   14001cd7e:	jge    0x14001cd6a
   14001cd80:	int    0xb6
   14001cd82:	xchg   dh,ch
   14001cd84:	(bad)  
   14001cd85:	mov    eax,0xb9cff18c
   14001cd8a:	mov    ?,eax
   14001cd8c:	sar    DWORD PTR [rbp-0x412d106b],1
   14001cd92:	xchg   edi,eax
   14001cd93:	out    dx,eax
   14001cd94:	rol    ecx,cl
   14001cd96:	pushf  
   14001cd97:	jmp    0x14001cd76
   14001cd99:	retf   
   14001cd9a:	test   al,0xf1
   14001cd9c:	mov    ebp,0xbfff5d9d
   14001cda1:	movabs ds:0xa35e92abfa69,al
   14001cdaa:	add    BYTE PTR [rcx],dl
   14001cdac:	add    BYTE PTR [rax],al
   14001cdae:	add    BYTE PTR [rax],al
   14001cdb0:	(bad)  
   14001cdb1:	mov    eax,0xafc65d90
   14001cdb6:	jg     0x14001cd78
   14001cdb8:	(bad)  
   14001cdb9:	stos   BYTE PTR es:[rdi],al
   14001cdba:	js     0x14001cd9d
   14001cdbc:	ret    
   14001cdbd:	test   eax,0xacc5e678
   14001cdc2:	jge    0x14001cdad
   14001cdc4:	retf   
   14001cdc5:	mov    dl,0x84
   14001cdc7:	lock iret 
   14001cdc9:	mov    ecx,0xbed3ee8c
   14001cdce:	xchg   ebp,eax
   14001cdcf:	out    dx,eax
   14001cdd0:	fcmovnb st,st(7)
   14001cdd2:	movabs ds:0xb1d0e2f0accddeef,eax
   14001cddb:	out    dx,al
   14001cddc:	(bad)  
   14001cdde:	scas   al,BYTE PTR es:[rdi]
   14001cddf:	jmp    0x124a995bb
   14001cde4:	(bad)  
   14001cde5:	(bad)  
   14001cde6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cde7:	jrcxz  0x14001cdc8
   14001cde9:	int    0xac
   14001cdeb:	out    0xda,eax
   14001cded:	(bad)  
   14001cdee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001cdef:	call   0x12ba393cd
   14001cdf4:	xlat   BYTE PTR ds:[rbx]
   14001cdf5:	ret    
   14001cdf6:	lahf   
   14001cdf7:	jmp    0x14001cdda
   14001cdf9:	int    0xa6
   14001cdfb:	out    dx,eax
   14001cdfc:	mov    dh,0x96
   14001cdfe:	push   rbx
   14001cdff:	call   rdx
   14001ce01:	mov    esi,0x99b9e097
   14001ce06:	pop    rax
   14001ce07:	(bad)  
   14001ce08:	mov    edi,0xbbfb67a1
   14001ce0d:	movabs ds:0xd4e2e593bfd47f72,al
   14001ce16:	mov    ecx,0xcae2effd
   14001ce1b:	shl    al,1
   14001ce1d:	shl    BYTE PTR [rsi-0x50312210],cl
   14001ce23:	jmp    0x14001ce05
   14001ce25:	shl    BYTE PTR [rsi-0x552b2425],cl
   14001ce2b:	ffreep st(7)
   14001ce2d:	(bad)  
   14001ce2e:	movabs ds:0xbeaa83f2afbaa1ea,eax
   14001ce37:	test   DWORD PTR [rax-0x640a4754],0xcaf19bb7
   14001ce41:	retf   
   14001ce42:	fwait
   14001ce43:	out    dx,eax
   14001ce44:	rol    ebp,1
   14001ce46:	nop
   14001ce47:	in     al,dx
   14001ce48:	fcmovnb st,st(6)
   14001ce4a:	movabs eax,ds:0xa0c6dbeca5cbdfe8
   14001ce53:	in     eax,dx
   14001ce54:	xlat   BYTE PTR ds:[rbx]
   14001ce55:	ret    
   14001ce56:	popf   
   14001ce57:	jmp    0x12eac9e3f
   14001ce5c:	mov    bh,0x96
   14001ce5e:	push   rsp
   14001ce5f:	(bad)  
   14001ce60:	(bad)  
   14001ce61:	(bad)  
   14001ce62:	mov    dl,0xec
   14001ce64:	mov    bh,0x96
   14001ce66:	push   rbx
   14001ce67:	push   rcx
   14001ce69:	fistp  QWORD PTR [rax+riz*8-0xa96748]
   14001ce70:	iret   
   14001ce71:	mov    ecx,0xcadafd8d
   14001ce76:	scas   al,BYTE PTR es:[rdi]
   14001ce77:	mov    esp,0xaed5e8f1
   14001ce7c:	(bad)  
   14001ce7d:	ret    
   14001ce7e:	lahf   
   14001ce7f:	(bad)  
   14001ce81:	mov    ebp,0xdfd6e594
   14001ce86:	stos   DWORD PTR es:[rdi],eax
   14001ce87:	(bad)  
   14001ce88:	mov    BYTE PTR [rsi+0x7130f8dd],ch
   14001ce8e:	(bad)  
   14001ce8f:	dec    DWORD PTR [rdi]
   14001ce91:	pop    rbx
   14001ce92:	(bad)  
   14001ce93:	dec    DWORD PTR [rbx]
   14001ce95:	push   rsi
   14001ce96:	(bad)  
   14001ce97:	dec    DWORD PTR [rip+0x11ffff54]        # 0x15201cdf1
   14001ce9d:	pop    rax
   14001ce9e:	(bad)  
   14001ce9f:	(bad)  
   14001cea0:	cmp    DWORD PTR [rdi-0x1],esi
   14001cea3:	(bad)  
   14001cea4:	jg     0x14001ce44
   14001cea6:	mov    bh,0xfb
   14001cea8:	mov    ecx,0xc2d6eb8c
   14001ceae:	fsubrp st(3),st
   14001ceb1:	shr    BYTE PTR [rbp-0x5936221f],1
   14001ceb7:	(bad)  
   14001ceb9:	shr    BYTE PTR [rsi+0x5597b7e7],cl
   14001cebf:	(bad)  
   14001cec0:	jmp    0x14001ce99
   14001cec2:	mov    ch,0xe7
   14001cec4:	mov    bh,0x97
   14001cec6:	push   rsp
   14001cec7:	push   rbp
   14001cec9:	loop   0x14001ce8b
   14001cecb:	out    0xb8,eax
   14001cecd:	xchg   edi,eax
   14001cece:	push   rsp
   14001cecf:	dec    edi
   14001ced1:	mov    ecx,0xc7d8f68d
   14001ced6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ced7:	retf   
   14001ced8:	(bad)  
   14001ced9:	ffree  st(6)
   14001cedb:	mov    bl,0xd5
   14001cedd:	ret    0xd99d
   14001cee0:	leave  
   14001cee1:	enter  0xf599,0x3b
   14001cee5:	cmp    bh,0xff
   14001cee8:	add    BYTE PTR [rbx],bh
   14001ceea:	(bad)  
   14001ceeb:	inc    DWORD PTR [rax]
   14001ceed:	rex
   14001ceee:	lock dec DWORD PTR [rip+0x2bffef5f]        # 0x16c01be54
   14001cef5:	jno    0x14001cee5
   14001cef7:	jmp    FWORD PTR [rax]
   14001cef9:	outs   dx,DWORD PTR ds:[rsi]
   14001cefa:	in     eax,dx
   14001cefb:	jmp    QWORD PTR [rax]
   14001cefd:	addr32 out dx,al
   14001ceff:	dec    DWORD PTR [rbx]
   14001cf01:	pop    rdx
   14001cf02:	clc    
   14001cf03:	dec    DWORD PTR [rdx]
   14001cf05:	pop    rbx
   14001cf06:	(bad)  
   14001cf07:	dec    DWORD PTR [rdx-0x7e]
   14001cf0a:	cld    
   14001cf0b:	push   QWORD PTR [rsi-0x290f8351]
   14001cf11:	ret    0xe09c
   14001cf14:	in     al,0xd1
   14001cf16:	scas   al,BYTE PTR es:[rdi]
   14001cf17:	(bad)  
   14001cf19:	shr    BYTE PTR [rdi+0x5597b8e9],cl
   14001cf1f:	(bad)  
   14001cf20:	jmp    0x14001cef9
   14001cf22:	mov    ch,0xe6
   14001cf24:	mov    eax,0xf6ff5497
   14001cf29:	jrcxz  0x14001ceec
   14001cf2b:	in     al,0xb8
   14001cf2d:	xchg   edi,eax
   14001cf2e:	push   rsp
   14001cf2f:	call   rax
   14001cf31:	mov    edx,0xc5d7f98f
   14001cf36:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001cf37:	retf   0xe0ec
   14001cf3a:	int3   
   14001cf3b:	stos   DWORD PTR es:[rdi],eax
   14001cf3c:	(bad)  
   14001cf3e:	movabs ds:0xfc4900fffc7840df,eax
   14001cf47:	jmp    QWORD PTR [rcx-0x66]
   14001cf4a:	lock jmp QWORD PTR [rbp+0x20fff6c5]
   14001cf51:	outs   dx,DWORD PTR ds:[rsi]
   14001cf52:	icebp  
   14001cf53:	inc    DWORD PTR [rax]
   14001cf55:	push   rax
   14001cf56:	icebp  
   14001cf57:	call   FWORD PTR [rsi]
   14001cf59:	imul   esi,edx,0xffffffff
   14001cf5c:	sub    eax,0x2dfff274
   14001cf61:	jb     0x14001cf54
   14001cf63:	call   FWORD PTR [rdi]
   14001cf65:	addr32 out dx,al
   14001cf67:	dec    DWORD PTR [rdx]
   14001cf69:	(bad)  
   14001cf6a:	(bad)  
   14001cf6b:	dec    DWORD PTR [rsi-0x7a]
   14001cf6e:	clc    
   14001cf6f:	push   QWORD PTR [rbx-0x2c0f915c]
   14001cf75:	rcr    BYTE PTR [rbx-0x48251225],0xe7
   14001cf7c:	mov    bh,0x97
   14001cf7e:	push   rbp
   14001cf7f:	(bad)  
   14001cf80:	jmp    0x14001cf59
   14001cf82:	mov    ah,0xe6
   14001cf84:	mov    eax,0xf6ff5598
   14001cf89:	in     al,0xc2
   14001cf8b:	in     eax,0xb8
   14001cf8d:	xchg   edi,eax
   14001cf8e:	push   rsp
   14001cf8f:	call   rcx
   14001cf91:	mov    ebx,0xc5d7f990
   14001cf96:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cf97:	(bad)  
   14001cf98:	out    0xe0,eax
   14001cf9a:	ret    0x8bb3
   14001cf9d:	test   al,0xe3
   14001cf9f:	std    
   14001cfa0:	add    BYTE PTR [rsi-0x1],dl
   14001cfa3:	call   QWORD PTR [rsi]
   14001cfa5:	outs   dx,DWORD PTR ds:[rsi]
   14001cfa6:	in     eax,dx
   14001cfa7:	(bad)  
   14001cfa8:	fsub   st(2),st
   14001cfaa:	cld    
   14001cfab:	(bad)  
   14001cfac:	(bad)  
   14001cfad:	(bad)  
   14001cfae:	(bad)  
   14001cfaf:	(bad)  
   14001cfb0:	(bad)  
   14001cfb2:	sti    
   14001cfb3:	jmp    FWORD PTR [rbp-0x5e]
   14001cfb6:	idiv   edi
   14001cfb8:	add    BYTE PTR [rax-0x10],bl
   14001cfbb:	dec    DWORD PTR [rcx]
   14001cfbd:	pop    rsi
   14001cfbe:	bnd jmp QWORD PTR [rdi]
   14001cfc1:	jno    0x14001cfb5
   14001cfc3:	jmp    FWORD PTR [rbx+rsi*2]
   14001cfc6:	repnz call FWORD PTR [rip+0x14fff167]        # 0x15501c134
   14001cfcd:	ins    DWORD PTR es:[rdi],dx
   14001cfce:	(bad)  
   14001cfcf:	dec    DWORD PTR [rbx-0x3f004d65]
   14001cfd5:	stos   DWORD PTR es:[rdi],eax
   14001cfd6:	jp     0x14001cfba
   14001cfd8:	out    0xd3,al
   14001cfda:	mov    al,0xe4
   14001cfdc:	mov    eax,0xebff5597
   14001cfe1:	xlat   BYTE PTR ds:[rbx]
   14001cfe2:	mov    ch,0xe6
   14001cfe4:	mov    eax,0xf6ff5598
   14001cfe9:	in     al,0xc2
   14001cfeb:	in     eax,0xb8
   14001cfed:	xchg   edi,eax
   14001cfee:	push   rsp
   14001cfef:	dec    edi
   14001cff1:	mov    ecx,0xc8d9f88e
   14001cff6:	stos   BYTE PTR es:[rdi],al
   14001cff7:	ret    0xdad9
   14001cffa:	mov    ah,0xcf
   14001cffc:	(bad)  
   14001cffd:	outs   dx,BYTE PTR ds:[rsi]
   14001cffe:	(bad)  
   14001cfff:	inc    DWORD PTR [rdi+riz*2]
   14001d002:	icebp  
   14001d003:	jmp    FWORD PTR [rip+0xffffffffdafff07d]        # 0x11b01c086
   14001d009:	jmp    0x14001d009
   14001d00e:	(bad)  
   14001d00f:	(bad)  
   14001d010:	(bad)  
   14001d011:	(bad)  
   14001d012:	(bad)  
   14001d013:	(bad)  
   14001d014:	(bad)  
   14001d015:	(bad)  
   14001d016:	(bad)  
   14001d017:	inc    eax
   14001d019:	fdivr  st,st(1)
   14001d01b:	push   QWORD PTR [rdx]
   14001d01d:	jl     0x14001d010
   14001d01f:	inc    DWORD PTR [rax]
   14001d021:	pop    rdx
   14001d022:	out    dx,eax
   14001d023:	call   FWORD PTR [rsi]
   14001d025:	outs   dx,DWORD PTR ds:[rsi]
   14001d026:	repnz jmp FWORD PTR [rbx]
   14001d029:	jne    0x14001d01b
   14001d02b:	call   QWORD PTR [rdi]
   14001d02d:	ins    BYTE PTR es:[rdi],dx
   14001d02e:	cld    
   14001d02f:	(bad)  
   14001d030:	cmp    BYTE PTR [rsi-0x1],bh
   14001d033:	push   QWORD PTR [rdi-0x27118759]
   14001d039:	(bad)  
   14001d03a:	lahf   
   14001d03b:	jrcxz  0x14001cff5
   14001d03d:	cwde   
   14001d03e:	push   rsi
   14001d03f:	(bad)  
   14001d040:	jmp    0x14001d019
   14001d042:	mov    ah,0xe6
   14001d044:	mov    eax,0xf6ff5598
   14001d049:	in     al,0xc2
   14001d04b:	in     eax,0xb8
   14001d04d:	xchg   edi,eax
   14001d04e:	push   rsp
   14001d04f:	call   rax
   14001d051:	mov    ecx,0xc9daf58e
   14001d056:	stos   DWORD PTR es:[rdi],eax
   14001d057:	ret    
   14001d058:	stos   DWORD PTR es:[rdi],eax
   14001d059:	mov    ebp,0x6f0df2cb
   14001d05e:	(bad)  
   14001d05f:	call   QWORD PTR [rsi]
   14001d061:	jb     0x14001d054
   14001d063:	jmp    QWORD PTR [rbx]
   14001d065:	jl     0x14001d05b
   14001d067:	call   rdi
   14001d069:	out    0xfb,eax
   14001d06b:	(bad)  
   14001d06c:	(bad)  
   14001d06d:	(bad)  
   14001d06e:	(bad)  
   14001d06f:	(bad)  
   14001d070:	(bad)  
   14001d071:	(bad)  
   14001d072:	(bad)  
   14001d073:	(bad)  
   14001d074:	(bad)  
   14001d075:	(bad)  
   14001d076:	(bad)  
   14001d077:	(bad)  
   14001d078:	(bad)  
   14001d079:	(bad)  
   14001d07a:	(bad)  
   14001d07b:	push   rbx
   14001d07d:	stc    
   14001d07e:	(bad)  
   14001d07f:	dec    DWORD PTR [rax+0x6fff7b3]
   14001d085:	movsxd esi,eax
   14001d087:	dec    DWORD PTR [riz*2+0x6f19fff2]
   14001d08e:	repz jmp QWORD PTR [rdx]
   14001d091:	jns    0x14001d092
   14001d093:	call   QWORD PTR [rcx-0x2d0a706a]
   14001d099:	mov    ebp,0x98b8e796
   14001d09e:	push   rsi
   14001d09f:	(bad)  
   14001d0a0:	jmp    0x14001d079
   14001d0a2:	mov    ah,0xe6
   14001d0a4:	mov    eax,0xf6ff5598
   14001d0a9:	in     al,0xc2
   14001d0ab:	in     eax,0xb8
   14001d0ad:	xchg   edi,eax
   14001d0ae:	push   rsp
   14001d0af:	call   rax
   14001d0b1:	mov    ecx,0xc9dbf38f
   14001d0b6:	test   eax,0xec9a64c9
   14001d0bb:	call   FWORD PTR [rax]
   14001d0bd:	jnp    0x14001d0be
   14001d0bf:	call   QWORD PTR [rsi+rsi*2]
   14001d0c2:	bnd jmp QWORD PTR [rsi]
   14001d0c5:	jg     0x14001d0bc
   14001d0c7:	(bad)  
   14001d0c8:	(bad)  
   14001d0ca:	cld    
   14001d0cb:	(bad)  
   14001d0cc:	(bad)  
   14001d0cd:	(bad)  
   14001d0ce:	(bad)  
   14001d0cf:	(bad)  
   14001d0d0:	(bad)  
   14001d0d1:	(bad)  
   14001d0d2:	(bad)  
   14001d0d3:	(bad)  
   14001d0d4:	(bad)  
   14001d0d5:	(bad)  
   14001d0d6:	(bad)  
   14001d0d7:	(bad)  
   14001d0d8:	(bad)  
   14001d0d9:	(bad)  
   14001d0da:	(bad)  
   14001d0db:	(bad)  
   14001d0dc:	(bad)  
   14001d0dd:	(bad)  
   14001d0de:	(bad)  
   14001d0df:	(bad)  
   14001d0e0:	(bad)  
   14001d0e1:	(bad)  
   14001d0e2:	(bad)  
   14001d0e3:	jmp    rdi
   14001d0e5:	icebp  
   14001d0e6:	(bad)  
   14001d0e7:	dec    DWORD PTR [rdx-0x72]
   14001d0ea:	idiv   bh
   14001d0ec:	or     al,0x67
   14001d0ee:	repz call FWORD PTR [rip+0x74ffff7c]        # 0x1b501d071
   14001d0f5:	mov    fs,WORD PTR [rsi-0x6a422d08]
   14001d0fb:	jmp    0x14001d0b5
   14001d0fd:	cwde   
   14001d0fe:	push   rsi
   14001d0ff:	(bad)  
   14001d100:	jmp    0x14001d0d9
   14001d102:	mov    ch,0xe7
   14001d104:	mov    eax,0xf6ff5598
   14001d109:	in     al,0xc2
   14001d10b:	in     eax,0xb8
   14001d10d:	xchg   edi,eax
   14001d10e:	push   rsp
   14001d10f:	call   rax
   14001d111:	mov    ecx,0xc5d6f08e
   14001d116:	movabs ds:0xfd821ffff98b3fcf,eax
   14001d11f:	call   QWORD PTR [rbx]
   14001d121:	jbe    0x14001d116
   14001d123:	jmp    QWORD PTR [rsi]
   14001d125:	xor    dh,0xff
   14001d128:	fucompp 
   14001d12a:	cld    
   14001d12b:	(bad)  
   14001d12c:	(bad)  
   14001d12d:	(bad)  
   14001d12e:	(bad)  
   14001d12f:	(bad)  
   14001d130:	(bad)  
   14001d131:	(bad)  
   14001d132:	(bad)  
   14001d133:	(bad)  
   14001d134:	(bad)  
   14001d135:	(bad)  
   14001d136:	(bad)  
   14001d137:	(bad)  
   14001d138:	(bad)  
   14001d139:	(bad)  
   14001d13a:	(bad)  
   14001d13b:	(bad)  
   14001d13c:	(bad)  
   14001d13d:	(bad)  
   14001d13e:	(bad)  
   14001d13f:	(bad)  
   14001d140:	(bad)  
   14001d141:	(bad)  
   14001d142:	(bad)  
   14001d143:	(bad)  
   14001d144:	(bad)  
   14001d145:	(bad)  
   14001d146:	(bad)  
   14001d147:	push   rcx
   14001d149:	idiv   ch
   14001d14b:	push   QWORD PTR [rip+0xaffef82]        # 0x14b01c0d3
   14001d151:	jno    0x14001d152
   14001d153:	call   FWORD PTR [rsp+rax*4-0x4d]
   14001d157:	stc    
   14001d158:	sar    DWORD PTR [rsi-0x6847146a],cl
   14001d15e:	push   rbp
   14001d15f:	(bad)  
   14001d160:	jmp    0x14001d13a
   14001d162:	mov    dh,0xe7
   14001d164:	mov    eax,0xf6ff5598
   14001d169:	in     al,0xc2
   14001d16b:	in     eax,0xb8
   14001d16d:	xchg   edi,eax
   14001d16e:	push   rsp
   14001d16f:	call   rax
   14001d171:	mov    ecx,0xc5d7f08e
   14001d176:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d177:	(bad)  
   14001d178:	ds mov ecx,?
   14001d17b:	call   FWORD PTR [rdi]
   14001d17d:	xchg   ch,bh
   14001d17f:	call   QWORD PTR [rcx+rdi*2]
   14001d182:	repz jmp QWORD PTR [rip+0xffffffffd8fff782]        # 0x11901c90b
   14001d189:	jmp    0x14001d18b
   14001d18e:	(bad)  
   14001d18f:	(bad)  
   14001d190:	(bad)  
   14001d191:	(bad)  
   14001d192:	(bad)  
   14001d193:	(bad)  
   14001d194:	(bad)  
   14001d195:	(bad)  
   14001d196:	(bad)  
   14001d197:	(bad)  
   14001d198:	(bad)  
   14001d199:	(bad)  
   14001d19a:	(bad)  
   14001d19b:	(bad)  
   14001d19c:	(bad)  
   14001d19d:	(bad)  
   14001d19e:	(bad)  
   14001d19f:	(bad)  
   14001d1a0:	(bad)  
   14001d1a1:	(bad)  
   14001d1a2:	(bad)  
   14001d1a3:	(bad)  
   14001d1a4:	(bad)  
   14001d1a5:	(bad)  
   14001d1a6:	(bad)  
   14001d1a7:	(bad)  
   14001d1a8:	jmp    0x18001cf9f
   14001d1ad:	mov    esi,esp
   14001d1af:	dec    DWORD PTR [rdi+rsi*2]
   14001d1b2:	(bad)  
   14001d1b3:	call   FWORD PTR [rdi-0x7b]
   14001d1b6:	mov    dl,0xf9
   14001d1b8:	sar    BYTE PTR [rbp-0x6847146b],cl
   14001d1be:	push   rbp
   14001d1bf:	(bad)  
   14001d1c0:	in     al,dx
   14001d1c1:	fidiv  DWORD PTR [rsi+0x5598b8e7]
   14001d1c7:	push   rsi
   14001d1c9:	in     al,0xc2
   14001d1cb:	out    0xb8,al
   14001d1cd:	xchg   edi,eax
   14001d1ce:	push   rsp
   14001d1cf:	call   rax
   14001d1d1:	mov    ecx,0xc5d7f38f
   14001d1d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d1d7:	retf   0x985f
   14001d1da:	in     al,dx
   14001d1db:	call   FWORD PTR [rsi]
   14001d1dd:	mov    bh,bh
   14001d1df:	call   QWORD PTR [rsp+rdi*2]
   14001d1e2:	repnz jmp FWORD PTR [rdx]
   14001d1e5:	xchg   bh,dh
   14001d1e7:	(bad)  
   14001d1e8:	fucomp st(3)
   14001d1ea:	std    
   14001d1eb:	(bad)  
   14001d1ec:	(bad)  
   14001d1ed:	(bad)  
   14001d1ee:	(bad)  
   14001d1ef:	(bad)  
   14001d1f0:	(bad)  
   14001d1f1:	(bad)  
   14001d1f2:	(bad)  
   14001d1f3:	(bad)  
   14001d1f4:	(bad)  
   14001d1f5:	(bad)  
   14001d1f6:	(bad)  
   14001d1f7:	(bad)  
   14001d1f8:	(bad)  
   14001d1f9:	(bad)  
   14001d1fa:	(bad)  
   14001d1fb:	(bad)  
   14001d1fc:	(bad)  
   14001d1fd:	(bad)  
   14001d1fe:	(bad)  
   14001d1ff:	(bad)  
   14001d200:	cld    
   14001d201:	std    
   14001d202:	(bad)  
   14001d203:	inc    eax
   14001d205:	(bad)  
   14001d207:	push   QWORD PTR [rdi+rax*4]
   14001d20a:	cmc    
   14001d20b:	call   QWORD PTR [rip+0x1efff573]        # 0x15f01c784
   14001d211:	test   edi,edi
   14001d213:	push   QWORD PTR [rsi-0x72]
   14001d216:	movabs ds:0x5698b8ea91b8cff7,eax
   14001d21f:	(bad)  
   14001d220:	jmp    0x14001d1f9
   14001d222:	mov    ch,0xe7
   14001d224:	mov    eax,0xf6ff5497
   14001d229:	in     al,0xc2
   14001d22b:	out    0xb8,eax
   14001d22d:	xchg   edi,eax
   14001d22e:	push   rsp
   14001d22f:	call   rcx
   14001d231:	mov    edx,0xc8d9f78f
   14001d236:	stos   BYTE PTR es:[rdi],al
   14001d237:	ret    
   14001d238:	xchg   esp,eax
   14001d239:	test   eax,0x8a18f7ba
   14001d23e:	(bad)  
   14001d23f:	call   QWORD PTR [rdi+rdi*2]
   14001d242:	repz jmp FWORD PTR [rdx]
   14001d245:	mov    edi,esi
   14001d247:	(bad)  
   14001d248:	fsub   st(4),st
   14001d24a:	cld    
   14001d24b:	(bad)  
   14001d24c:	(bad)  
   14001d24d:	(bad)  
   14001d24e:	(bad)  
   14001d24f:	(bad)  
   14001d250:	(bad)  
   14001d251:	(bad)  
   14001d252:	(bad)  
   14001d253:	(bad)  
   14001d254:	(bad)  
   14001d255:	(bad)  
   14001d256:	(bad)  
   14001d257:	(bad)  
   14001d258:	(bad)  
   14001d259:	(bad)  
   14001d25a:	(bad)  
   14001d25b:	jmp    rsp
   14001d25d:	lock std 
   14001d25f:	jmp    QWORD PTR [rdx-0x5b]
   14001d262:	stc    
   14001d263:	inc    DWORD PTR [rcx]
   14001d265:	ins    DWORD PTR es:[rdi],dx
   14001d266:	idiv   bh
   14001d268:	(bad)  
   14001d269:	js     0x14001d260
   14001d26b:	call   FWORD PTR [rdx]
   14001d26d:	jle    0x14001d267
   14001d26f:	jmp    QWORD PTR [rsi]
   14001d271:	(bad)  
   14001d272:	(bad)  
   14001d273:	call   QWORD PTR [rsi-0x310b796e]
   14001d279:	mov    ecx,0x98b8e692
   14001d27e:	push   rsi
   14001d27f:	(bad)  
   14001d280:	(bad)  
   14001d281:	(bad)  
   14001d282:	mov    bl,0xe6
   14001d284:	mov    eax,0xf6ff5598
   14001d289:	in     al,0xc2
   14001d28b:	out    0xb8,eax
   14001d28d:	xchg   edi,eax
   14001d28e:	push   rsp
   14001d28f:	call   rax
   14001d291:	mov    edx,0xcadbfa8f
   14001d296:	lods   eax,DWORD PTR ds:[rsi]
   14001d297:	rol    esp,0xc2
   14001d29a:	pushf  
   14001d29b:	fcomp  DWORD PTR [rsi+rax*4]
   14001d29e:	(bad)  
   14001d29f:	dec    DWORD PTR [rdi]
   14001d2a1:	cmp    ecx,0xffffffff
   14001d2a4:	xor    BYTE PTR [rsp+rsi*8-0x4111e01],cl
   14001d2ab:	(bad)  
   14001d2ac:	(bad)  
   14001d2ad:	(bad)  
   14001d2ae:	(bad)  
   14001d2af:	(bad)  
   14001d2b0:	(bad)  
   14001d2b1:	(bad)  
   14001d2b2:	(bad)  
   14001d2b3:	(bad)  
   14001d2b4:	cld    
   14001d2b5:	cld    
   14001d2b6:	(bad)  
   14001d2b7:	jmp    FWORD PTR [rsi+0x23fffad2]
   14001d2bd:	test   edi,esi
   14001d2bf:	inc    DWORD PTR [rsi]
   14001d2c1:	jno    0x14001d2b9
   14001d2c3:	jmp    QWORD PTR [rbx]
   14001d2c5:	test   dh,dh
   14001d2c7:	jmp    FWORD PTR [rip+0x1afff485]        # 0x15b01c752
   14001d2cd:	xchg   edi,edi
   14001d2cf:	inc    DWORD PTR [rax-0x6c]
   14001d2d2:	hlt    
   14001d2d3:	push   QWORD PTR [rbx-0x22139065]
   14001d2d9:	leave  
   14001d2da:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d2db:	in     eax,0xb8
   14001d2dd:	cwde   
   14001d2de:	push   rsi
   14001d2df:	(bad)  
   14001d2e0:	jmp    0xf8e986bb
   14001d2e5:	cwde   
   14001d2e6:	push   rbp
   14001d2e7:	push   rsi
   14001d2e9:	in     al,0xc2
   14001d2eb:	out    0xb8,al
   14001d2ed:	xchg   edi,eax
   14001d2ee:	push   rsp
   14001d2ef:	dec    edi
   14001d2f1:	mov    eax,0xc8d8fa8d
   14001d2f6:	test   eax,0xb9d7e1c5
   14001d2fb:	mov    dh,0x67
   14001d2fd:	xchg   esp,eax
   14001d2fe:	(bad)  
   14001d2ff:	inc    DWORD PTR [rax]
   14001d301:	xchg   edi,edi
   14001d303:	push   QWORD PTR [rbx]
   14001d305:	(bad)  
   14001d306:	repz push rbp
   14001d309:	clc    
   14001d30a:	cld    
   14001d30b:	(bad)  
   14001d30c:	(bad)  
   14001d30d:	(bad)  
   14001d30e:	(bad)  
   14001d30f:	(bad)  
   14001d310:	fldl2e 
   14001d312:	std    
   14001d313:	jmp    QWORD PTR [rax-0x57]
   14001d316:	cli    
   14001d317:	inc    DWORD PTR [rdx]
   14001d319:	jne    0x14001d310
   14001d31b:	call   QWORD PTR [rip+0x2cfff67e]        # 0x16d01c99f
   14001d321:	mov    esi,esi
   14001d323:	jmp    FWORD PTR [rsi]
   14001d325:	mov    esi,esi
   14001d327:	jmp    QWORD PTR [rcx]
   14001d329:	cmp    eax,0xffffffff
   14001d32c:	sbb    DWORD PTR [rdx-0x6a710001],edx
   14001d332:	sahf   
   14001d333:	cld    
   14001d334:	shr    DWORD PTR [rcx-0x1b091b85],0xc2
   14001d33b:	jmp    0x13f566af8
   14001d340:	out    dx,al
   14001d341:	(bad)  [rdi+0x5598b8eb]
   14001d347:	push   rsi
   14001d349:	in     al,0xc3
   14001d34b:	out    0xb8,al
   14001d34d:	xchg   edi,eax
   14001d34e:	push   rsp
   14001d34f:	dec    edi
   14001d351:	mov    ecx,0xc3d5fa8d
   14001d356:	movabs ds:0x84b1bcacc8ddeac9,eax
   14001d35f:	out    0xf,eax
   14001d361:	xchg   esp,edi
   14001d363:	dec    DWORD PTR [rbx]
   14001d365:	nop
   14001d366:	(bad)  
   14001d367:	(bad)  
   14001d368:	jle    0x14001d320
   14001d36a:	clc    
   14001d36b:	call   FWORD PTR [rax+0x2dfff8c6]
   14001d371:	xchg   ecx,eax
   14001d372:	idiv   edi
   14001d374:	add    eax,0x24fff77b
   14001d379:	mov    dh,bh
   14001d37b:	jmp    FWORD PTR [rsi]
   14001d37d:	nop
   14001d37e:	idiv   edi
   14001d380:	(bad)  
   14001d381:	(bad)  
   14001d382:	idiv   bh
   14001d384:	sub    BYTE PTR [rcx-0x6ef30009],cl
   14001d38a:	(bad)  
   14001d38b:	call   QWORD PTR [rdx-0x68]
   14001d38e:	in     al,dx
   14001d38f:	push   QWORD PTR [rbx-0x200e966b]
   14001d395:	int3   
   14001d396:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d397:	in     al,0xf5
   14001d399:	loope  0x14001d35a
   14001d39b:	out    dx,eax
   14001d39c:	mov    eax,0xedff5497
   14001d3a1:	fnstenv [rsi+0x5598b8e9]
   14001d3a7:	push   rsi
   14001d3a9:	in     al,0xc3
   14001d3ab:	out    0xb8,al
   14001d3ad:	xchg   edi,eax
   14001d3ae:	push   rsp
   14001d3af:	dec    esi
   14001d3b1:	mov    eax,0xc0d2fa8c
   14001d3b6:	sahf   
   14001d3b7:	retf   0xdbe8
   14001d3ba:	(bad)  
   14001d3bb:	mov    al,0xd7
   14001d3bd:	ret    
   14001d3be:	movabs al,ds:0xff8902fe83a0aad6
   14001d3c7:	inc    DWORD PTR [rax]
   14001d3c9:	mov    edi,?
   14001d3cb:	dec    DWORD PTR [rdx]
   14001d3cd:	(bad)  
   14001d3ce:	clc    
   14001d3cf:	call   FWORD PTR [rdi]
   14001d3d1:	mov    ah,dh
   14001d3d3:	push   QWORD PTR [rbx]
   14001d3d5:	xchg   edx,eax
   14001d3d6:	hlt    
   14001d3d7:	push   QWORD PTR [rip+0x31fff491]        # 0x17201c86e
   14001d3dd:	nop
   14001d3de:	repz call FWORD PTR [rsi]
   14001d3e1:	(bad)  
   14001d3e2:	(bad)  
   14001d3e3:	inc    DWORD PTR [rsi]
   14001d3e5:	xchg   esp,eax
   14001d3e6:	(bad)  
   14001d3e7:	inc    DWORD PTR [rsi+rdx*4-0xc]
   14001d3eb:	push   QWORD PTR [rbx+rbx*4-0x38220b89]
   14001d3f2:	movabs ds:0xb8dcefe8b8dbeee9,eax
   14001d3fb:	out    dx,eax
   14001d3fc:	mov    eax,0xedff5597
   14001d401:	fidiv  DWORD PTR [rsi+0x5598b8ea]
   14001d407:	push   rsi
   14001d409:	in     al,0xc3
   14001d40b:	out    0xb8,eax
   14001d40d:	xchg   edi,eax
   14001d40e:	push   rsp
   14001d40f:	dec    ebp
   14001d411:	mov    dh,0x8a
   14001d413:	cli    
   14001d414:	sar    DWORD PTR [rdi-0x271a3563],1
   14001d41a:	shl    BYTE PTR [rbx-0x23603c29],0xd5
   14001d421:	mov    edi,0xb2c0e798
   14001d426:	mov    ch,al
   14001d428:	rex.RX xchg edx,eax
   14001d42a:	sar    edi,cl
   14001d42c:	add    BYTE PTR [rcx-0x66f70001],dl
   14001d432:	(bad)  
   14001d433:	dec    DWORD PTR [rdi]
   14001d435:	xchg   edi,eax
   14001d436:	(bad)  
   14001d437:	dec    DWORD PTR [rdx]
   14001d439:	xchg   esp,eax
   14001d43a:	(bad)  
   14001d43b:	inc    DWORD PTR [rcx]
   14001d43d:	xchg   ebx,eax
   14001d43e:	(bad)  
   14001d43f:	call   QWORD PTR [rdi]
   14001d441:	xchg   esp,eax
   14001d442:	(bad)  
   14001d443:	jmp    FWORD PTR [rsp+rdx*4-0x40]
   14001d447:	inc    edx
   14001d449:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d44a:	jns    0x14001d43e
   14001d44c:	ffree  st(7)
   14001d44e:	movabs ds:0xaed2e5ebb4d9ece9,al
   14001d457:	call   0x12eb9af4a
   14001d45c:	mov    eax,0xedff5597
   14001d461:	fidiv  DWORD PTR [rsi+0x5598b8ea]
   14001d467:	push   rsi
   14001d469:	in     al,0xc3
   14001d46b:	out    0xb8,eax
   14001d46d:	xchg   edi,eax
   14001d46e:	push   rsp
   14001d46f:	dec    ebp
   14001d471:	mov    bh,0x8b
   14001d473:	stc    
   14001d474:	rol    al,1
   14001d476:	lahf   
   14001d477:	ret    
   14001d478:	jrcxz  0x14001d451
   14001d47a:	mov    edi,0x97bed2af
   14001d47f:	loopne 0x14001d457
   14001d481:	ret    0xe49c
   14001d484:	loop   0x14001d458
   14001d486:	mov    ah,0xc7
   14001d488:	fld    st(1)
   14001d48a:	xchg   edx,eax
   14001d48b:	jmp    0x139908451
   14001d490:	and    DWORD PTR [rax-0x6ba90751],0xffffffcc
   14001d497:	std    
   14001d498:	pop    rsi
   14001d499:	xchg   esi,eax
   14001d49a:	(bad)  
   14001d49b:	sti    
   14001d49c:	xchg   edi,eax
   14001d49d:	movabs ds:0xc1d9f190b3cbf8a6,eax
   14001d4a6:	xchg   edx,eax
   14001d4a7:	jmp    0x125ada48f
   14001d4ac:	jmp    0x125eb8685
   14001d4b1:	shr    BYTE PTR [rbx+rbp*8-0x1753301d],1
   14001d4b8:	out    dx,al
   14001d4b9:	fidiv  DWORD PTR [rdi+0x5597b8ed]
   14001d4bf:	(bad)  
   14001d4c0:	in     eax,dx
   14001d4c1:	fnstenv [rsi+0x5598b8e7]
   14001d4c7:	(bad)  
   14001d4c8:	cli    
   14001d4c9:	out    0xc6,eax
   14001d4cb:	jmp    0x13f566c88
   14001d4d0:	sar    DWORD PTR [rdx+rdx*4-0x6e473201],cl
   14001d4d7:	loope  0x14001d4c2
   14001d4d9:	fadd   st(2),st
   14001d4db:	mov    eax,0xe0a5c8dd
   14001d4e0:	fmulp  st(0),st
   14001d4e2:	movabs al,ds:0xadd1e6e0b1d3e6fa
   14001d4eb:	lock (bad) 
   14001d4ed:	shr    DWORD PTR [rsi-0x502b1607],cl
   14001d4f3:	cmc    
   14001d4f4:	(bad)  
   14001d4f5:	(bad)  
   14001d4f6:	scas   eax,DWORD PTR es:[rdi]
   14001d4f7:	cmc    
   14001d4f8:	(bad)  
   14001d4f9:	(bad)  
   14001d4fa:	mov    cl,0xf5
   14001d4fc:	(bad)  
   14001d4fd:	(bad)  
   14001d4fe:	mov    al,0xf4
   14001d500:	(bad)  
   14001d501:	(bad)  
   14001d502:	mov    dl,0xf2
   14001d504:	in     eax,dx
   14001d505:	fnstenv [rbp-0x4824100f]
   14001d50b:	repnz in eax,dx
   14001d50d:	fidiv  DWORD PTR [rbp-0x4b26130f]
   14001d513:	out    dx,eax
   14001d514:	in     al,dx
   14001d515:	fnstenv [rbp-0x3e1b0817]
   14001d51b:	icebp  
   14001d51c:	mov    esp,0xedff5b9d
   14001d521:	fnstenv [rbp+rbp*8-0x97593a]
   14001d528:	fcmovb st,st(4)
   14001d52a:	popf   
   14001d52b:	ror    ebp,0xb5
   14001d52e:	mov    DWORD PTR [rcx-0x61],ebx
   14001d531:	test   BYTE PTR [rcx+0x3a],cl
   14001d534:	mov    eax,0xccd36f9e
   14001d539:	scas   al,BYTE PTR es:[rdi]
   14001d53a:	jb     0x14001d53b
   14001d53c:	int3   
   14001d53d:	scas   al,BYTE PTR es:[rdi]
   14001d53e:	jb     0x14001d53f
   14001d540:	int3   
   14001d541:	scas   al,BYTE PTR es:[rdi]
   14001d542:	jb     0x14001d543
   14001d544:	retf   
   14001d545:	lods   eax,DWORD PTR ds:[rsi]
   14001d546:	jno    0x14001d547
   14001d548:	retf   
   14001d549:	lods   al,BYTE PTR ds:[rsi]
   14001d54a:	jo     0x14001d54b
   14001d54c:	retf   
   14001d54d:	lods   al,BYTE PTR ds:[rsi]
   14001d54e:	jo     0x14001d54f
   14001d550:	retf   0x6fab
   14001d553:	dec    ecx
   14001d555:	stos   DWORD PTR es:[rdi],eax
   14001d556:	ins    DWORD PTR es:[rdi],dx
   14001d557:	dec    eax
   14001d559:	stos   BYTE PTR es:[rdi],al
   14001d55a:	ins    BYTE PTR es:[rdi],dx
   14001d55b:	dec    eax
   14001d55d:	test   eax,0xa8c7ff6b
   14001d562:	push   0xffffffffffffffff
   14001d564:	(bad)  
   14001d565:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d566:	imul   edi,edi,0xff68a6c6
   14001d56c:	vpackuswb ymm7,ymm11,ymm7
   14001d570:	(bad)  
   14001d571:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d572:	inc    dx
   14001d575:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d576:	gs inc edx
   14001d579:	movabs ds:0x9ab5944f88a4ff64,eax
   14001d582:	push   0x578da974
   14001d587:	push   rdx
	...
   14001d5f0:	inc    BYTE PTR [rax]
   14001d5f2:	add    eax,DWORD PTR [rax]
   14001d5f4:	add    BYTE PTR [rax],0x1
	...
   14001d647:	add    BYTE PTR [rax],al
   14001d649:	add    BYTE PTR [rbx],al
   14001d64b:	add    bh,bh
   14001d64d:	(bad)  
   14001d64e:	inc    DWORD PTR [rax]
   14001d650:	sub    BYTE PTR [rax],al
   14001d652:	add    BYTE PTR [rax],al
   14001d654:	adc    BYTE PTR [rax],al
   14001d656:	add    BYTE PTR [rax],al
   14001d658:	and    BYTE PTR [rax],al
   14001d65a:	add    BYTE PTR [rax],al
   14001d65c:	add    DWORD PTR [rax],eax
   14001d65e:	and    BYTE PTR [rax],al
   14001d660:	add    BYTE PTR [rax],al
   14001d662:	add    BYTE PTR [rax],al
   14001d664:	add    al,0x0
	...
   14001d677:	add    cl,cl
   14001d679:	cwde   
   14001d67a:	push   rbp
   14001d67b:	xchg   ecx,ecx
   14001d67d:	cwde   
   14001d67e:	push   rbp
   14001d67f:	lock leave 
   14001d681:	cwde   
   14001d682:	push   rbp
   14001d683:	dec    ecx
   14001d685:	cwde   
   14001d686:	push   rbp
   14001d687:	dec    ecx
   14001d689:	cwde   
   14001d68a:	push   rbp
   14001d68b:	dec    ecx
   14001d68d:	cwde   
   14001d68e:	push   rbp
   14001d68f:	dec    ecx
   14001d691:	cwde   
   14001d692:	push   rbp
   14001d693:	dec    ecx
   14001d695:	cwde   
   14001d696:	push   rbp
   14001d697:	dec    ecx
   14001d699:	cwde   
   14001d69a:	push   rbp
   14001d69b:	dec    ecx
   14001d69d:	cwde   
   14001d69e:	push   rbp
   14001d69f:	dec    ecx
   14001d6a1:	cwde   
   14001d6a2:	push   rbp
   14001d6a3:	dec    ecx
   14001d6a5:	cwde   
   14001d6a6:	push   rbp
   14001d6a7:	dec    ecx
   14001d6a9:	cwde   
   14001d6aa:	push   rbp
   14001d6ab:	dec    ecx
   14001d6ad:	cwde   
   14001d6ae:	push   rbp
   14001d6af:	dec    ecx
   14001d6b1:	cwde   
   14001d6b2:	push   rbp
   14001d6b3:	repz leave 
   14001d6b5:	cwde   
   14001d6b6:	push   rbp
   14001d6b7:	mov    cl,cl
   14001d6b9:	cwde   
   14001d6ba:	push   rbp
   14001d6bb:	lock in al,dx
   14001d6bd:	(bad)  
   14001d6be:	mov    ah,0xdd
   14001d6c0:	jmp    0x14001d696
   14001d6c2:	mov    al,0xff
   14001d6c4:	jmp    0x12801859b
   14001d6c9:	shr    BYTE PTR [rbx-0x56311901],1
   14001d6cf:	jmp    rbp
   14001d6d1:	int    0xa7
   14001d6d3:	jmp    rsp
   14001d6d5:	retf   
   14001d6d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d6d7:	jmp    rsp
   14001d6d9:	retf   0xffa4
   14001d6dc:	in     al,0xca
   14001d6de:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d6df:	jmp    rsp
   14001d6e1:	retf   0xffa4
   14001d6e4:	in     al,0xca
   14001d6e6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d6e7:	jmp    rsp
   14001d6e9:	retf   0xffa4
   14001d6ec:	in     al,0xca
   14001d6ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d6ef:	jmp    rsp
   14001d6f1:	int3   
   14001d6f2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d6f3:	(bad)  
   14001d6f5:	cwde   
   14001d6f6:	push   rbp
   14001d6f7:	repz leave 
   14001d6f9:	cwde   
   14001d6fa:	push   rbp
   14001d6fb:	(bad)  
   14001d6fc:	in     eax,dx
   14001d6fd:	xlat   BYTE PTR ds:[rbx]
   14001d6fe:	mov    bh,0xff
   14001d700:	loope  0x14001d6c1
   14001d702:	mov    bh,bh
   14001d704:	fistp  QWORD PTR [rbp+rax*4-0x7e462301]
   14001d70b:	jmp    QWORD PTR [rax+0x4eff9aa6]
   14001d711:	mov    es,ebx
   14001d713:	jmp    QWORD PTR [rdx]
   14001d715:	(bad)  
   14001d716:	xlat   BYTE PTR ds:[rbx]
   14001d717:	jmp    QWORD PTR [rcx]
   14001d719:	jg     0x14001d6ef
   14001d71b:	dec    DWORD PTR [rcx-0x77]
   14001d71e:	mov    ebp,0x919e99ff
   14001d723:	call   rsp
   14001d725:	lods   eax,DWORD PTR ds:[rsi]
   14001d726:	jno    0x14001d727
   14001d728:	(bad)  
   14001d729:	lods   eax,DWORD PTR ds:[rsi]
   14001d72a:	jno    0x14001d72b
   14001d72c:	(bad)  
   14001d72d:	lods   eax,DWORD PTR ds:[rsi]
   14001d72e:	jno    0x14001d72f
   14001d730:	in     al,0xca
   14001d732:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d733:	dec    ecx
   14001d735:	cwde   
   14001d736:	push   rbp
   14001d737:	dec    ecx
   14001d739:	cwde   
   14001d73a:	push   rbp
   14001d73b:	(bad)  
   14001d73c:	out    dx,eax
   14001d73d:	fidivr DWORD PTR [rcx-0x703e1c01]
   14001d743:	(bad)  
   14001d744:	fidivr DWORD PTR [rsp+rcx*4-0x356eb201]
   14001d74b:	inc    DWORD PTR [rax]
   14001d74d:	jg     0x14001d742
   14001d74f:	inc    DWORD PTR [rax]
   14001d751:	cmp    eax,0xffffffff
   14001d754:	add    BYTE PTR [rbx+rdi*8-0x57aff01],al
   14001d75b:	inc    DWORD PTR [rax]
   14001d75d:	xor    ah,0xff
   14001d760:	add    BYTE PTR [rcx-0x17],bh
   14001d763:	(bad)  
   14001d764:	(bad)  
   14001d765:	test   BYTE PTR [rdi+0x74aaccff],bh
   14001d76b:	call   rsp
   14001d76d:	lods   eax,DWORD PTR ds:[rsi]
   14001d76e:	jno    0x14001d76f
   14001d770:	in     al,0xca
   14001d772:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d773:	dec    ecx
   14001d775:	cwde   
   14001d776:	push   rbp
   14001d777:	dec    ecx
   14001d779:	cwde   
   14001d77a:	push   rbp
   14001d77b:	push   rcx
   14001d77d:	fdivr  QWORD PTR [rbp-0x6c3a1901]
   14001d783:	call   FWORD PTR [rbp-0x6a]
   14001d786:	ret    
   14001d787:	inc    DWORD PTR [rax]
   14001d789:	xor    edi,0xff951eff
   14001d78f:	jmp    QWORD PTR [rbp+0xfffffd5]
   14001d795:	nop
   14001d796:	(bad)  
   14001d797:	inc    DWORD PTR [rax]
   14001d799:	mov    edi,edi
   14001d79b:	inc    DWORD PTR [rax]
   14001d79d:	mov    edi,edi
   14001d79f:	inc    DWORD PTR [rax]
   14001d7a1:	mov    bh,bh
   14001d7a3:	inc    DWORD PTR [rax]
   14001d7a5:	jnp    0x14001d793
   14001d7a7:	dec    DWORD PTR [rbx-0x7d]
   14001d7aa:	mov    dl,0xff
   14001d7ac:	(bad)  
   14001d7ad:	lods   eax,DWORD PTR ds:[rsi]
   14001d7ae:	jno    0x14001d7af
   14001d7b0:	in     al,0xca
   14001d7b2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001d7b3:	dec    ecx
   14001d7b5:	cwde   
   14001d7b6:	push   rbp
   14001d7b7:	dec    ecx
   14001d7b9:	cwde   
   14001d7ba:	push   rbp
   14001d7bb:	(bad)  
   14001d7bc:	stc    
   14001d7bd:	out    0xcc,eax
   14001d7bf:	jmp    FWORD PTR [rdi+0x3ffacb4]
   14001d7c5:	jle    0x14001d7b7
   14001d7c7:	inc    DWORD PTR [rax]
   14001d7c9:	xchg   edi,edi
   14001d7cb:	call   FWORD PTR [rsi]
   14001d7cd:	xchg   esi,eax
   14001d7ce:	(bad)  
   14001d7cf:	(bad)  
   14001d7d0:	(bad)  
   14001d7d1:	(bad)  
   14001d7d2:	(bad)  
   14001d7d3:	jmp    rsp
   14001d7d5:	repz (bad) 
   14001d7d7:	dec    DWORD PTR [rax-0x55]
   14001d7da:	(bad)  
   14001d7db:	inc    DWORD PTR [rax]
   14001d7dd:	mov    bh,bh
   14001d7df:	inc    DWORD PTR [rax]
   14001d7e1:	mov    edi,edi
   14001d7e3:	inc    DWORD PTR [rax]
   14001d7e5:	mov    bh,bh
   14001d7e7:	inc    DWORD PTR [rdx]
   14001d7e9:	jbe    0x14001d7cd
   14001d7eb:	call   QWORD PTR [rbp-0x1b006f66]
   14001d7f1:	retf   0xffa4
   14001d7f4:	leave  
   14001d7f5:	cwde   
   14001d7f6:	push   rbp
   14001d7f7:	dec    ecx
   14001d7f9:	cwde   
   14001d7fa:	push   rbp
   14001d7fb:	(bad)  
   14001d7fc:	(bad)  
   14001d7fd:	out    dx,al
   14001d7fe:	(bad)  
   14001d7ff:	call   QWORD PTR [rdi-0x65]
   14001d802:	(bad)  
   14001d803:	inc    DWORD PTR [rax]
   14001d805:	(bad)  
   14001d806:	clc    
   14001d807:	inc    DWORD PTR [rax]
   14001d809:	xchg   edi,edi
   14001d80b:	call   FWORD PTR [rsi]
   14001d80d:	xchg   edi,eax
   14001d80e:	(bad)  
   14001d80f:	(bad)  
   14001d810:	(bad)  
   14001d811:	(bad)  
   14001d812:	(bad)  
   14001d813:	(bad)  
   14001d814:	(bad)  
   14001d815:	(bad)  
   14001d816:	(bad)  
   14001d817:	(bad)  
   14001d818:	(bad)  
   14001d819:	(bad)  
   14001d81a:	(bad)  
   14001d81b:	call   FWORD PTR [rcx+0xcfffed0]
   14001d821:	nop
   14001d822:	(bad)  
   14001d823:	inc    DWORD PTR [rax]
   14001d825:	mov    edi,edi
   14001d827:	inc    DWORD PTR [rax]
   14001d829:	jle    0x14001d81c
   14001d82b:	(bad)  
   14001d82c:	(bad)  
   14001d82d:	(bad)  
   14001d82e:	mov    esp,0xa4cae4ff
   14001d833:	dec    ecx
   14001d835:	cwde   
   14001d836:	push   rbp
   14001d837:	dec    ecx
   14001d839:	cwde   
   14001d83a:	push   rbp
   14001d83b:	(bad)  
   14001d83c:	(bad)  
   14001d83d:	out    dx,al
   14001d83e:	(bad)  
   14001d83f:	push   QWORD PTR [rcx]
   14001d841:	(bad)  
   14001d842:	loop   0x14001d843
   14001d844:	add    BYTE PTR [rsp+rdi*8-0x77ff01],al
   14001d84b:	call   FWORD PTR [rsi]
   14001d84d:	xchg   edi,eax
   14001d84e:	(bad)  
   14001d84f:	(bad)  
   14001d850:	(bad)  
   14001d851:	(bad)  
   14001d852:	(bad)  
   14001d853:	(bad)  
   14001d854:	(bad)  
   14001d855:	(bad)  
   14001d856:	(bad)  
   14001d857:	(bad)  
   14001d858:	(bad)  
   14001d859:	(bad)  
   14001d85a:	(bad)  
   14001d85b:	(bad)  
   14001d85c:	(bad)  
   14001d85d:	(bad)  
   14001d85e:	(bad)  
   14001d85f:	(bad)  
   14001d860:	fdivrp st(0),st
   14001d862:	(bad)  
   14001d863:	(bad)  
   14001d864:	(bad)  
   14001d865:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001d866:	(bad)  
   14001d867:	inc    DWORD PTR [rax]
   14001d869:	test   cl,bh
   14001d86b:	jmp    QWORD PTR [rax]
   14001d86d:	js     0x14001d838
   14001d86f:	jmp    rsp
   14001d871:	retf   0xffa4
   14001d874:	leave  
   14001d875:	cwde   
   14001d876:	push   rbp
   14001d877:	dec    ecx
   14001d879:	cwde   
   14001d87a:	push   rbp
   14001d87b:	(bad)  
   14001d87c:	(bad)  
   14001d87d:	out    dx,al
   14001d87e:	(bad)  
   14001d87f:	jmp    FWORD PTR [rdi]
   14001d881:	mov    ebx,fs
   14001d883:	inc    DWORD PTR [rax]
   14001d885:	test   ah,bh
   14001d887:	inc    DWORD PTR [rax]
   14001d889:	xchg   edi,edi
   14001d88b:	call   FWORD PTR [rsi]
   14001d88d:	xchg   edi,eax
   14001d88e:	(bad)  
   14001d88f:	(bad)  
   14001d890:	(bad)  
   14001d891:	(bad)  
   14001d892:	(bad)  
   14001d893:	(bad)  
   14001d894:	(bad)  
   14001d895:	(bad)  
   14001d896:	(bad)  
   14001d897:	(bad)  
   14001d898:	(bad)  
   14001d899:	(bad)  
   14001d89a:	(bad)  
   14001d89b:	(bad)  
   14001d89c:	(bad)  
   14001d89d:	(bad)  
   14001d89e:	(bad)  
   14001d89f:	(bad)  
   14001d8a0:	fsubr  st,st(5)
   14001d8a2:	(bad)  
   14001d8a3:	push   QWORD PTR [rsi]
   14001d8a5:	movabs ds:0x781ffff98300ffff,al
   14001d8ae:	retf   0xe4ff
   14001d8b1:	retf   
   14001d8b2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d8b3:	dec    ecx
   14001d8b5:	cwde   
   14001d8b6:	push   rbp
   14001d8b7:	dec    ecx
   14001d8b9:	cwde   
   14001d8ba:	push   rbp
   14001d8bb:	(bad)  
   14001d8bc:	(bad)  
   14001d8bd:	out    dx,al
   14001d8be:	(bad)  
   14001d8bf:	call   FWORD PTR [rdx-0x61]
   14001d8c2:	fdiv   st(7),st
   14001d8c4:	add    BYTE PTR [rcx-0x78ff0008],al
   14001d8ca:	(bad)  
   14001d8cb:	call   FWORD PTR [rsi]
   14001d8cd:	xchg   esi,eax
   14001d8ce:	(bad)  
   14001d8cf:	(bad)  
   14001d8d0:	(bad)  
   14001d8d1:	(bad)  
   14001d8d2:	(bad)  
   14001d8d3:	(bad)  
   14001d8d4:	(bad)  
   14001d8d5:	(bad)  
   14001d8d6:	(bad)  
   14001d8d7:	(bad)  
   14001d8d8:	(bad)  
   14001d8d9:	(bad)  
   14001d8da:	(bad)  
   14001d8db:	dec    DWORD PTR [rbp+0x9ffffcb]
   14001d8e1:	(bad)  
   14001d8e2:	(bad)  
   14001d8e3:	inc    DWORD PTR [rax]
   14001d8e5:	mov    bh,bh
   14001d8e7:	inc    DWORD PTR [rax]
   14001d8e9:	jg     0x14001d8dd
   14001d8eb:	inc    DWORD PTR [rdx-0x7c]
   14001d8ee:	mov    edi,0xa7cde5ff
   14001d8f3:	dec    ecx
   14001d8f5:	cwde   
   14001d8f6:	push   rbp
   14001d8f7:	dec    ecx
   14001d8f9:	cwde   
   14001d8fa:	push   rbp
   14001d8fb:	(bad)  
   14001d8fc:	(bad)  
   14001d8fd:	out    dx,al
   14001d8fe:	(bad)  
   14001d8ff:	(bad)  
   14001d900:	mov    edi,0x3ffcaca
   14001d905:	jle    0x14001d8f7
   14001d907:	inc    DWORD PTR [rax]
   14001d909:	xchg   bh,bh
   14001d90b:	call   FWORD PTR [rsi]
   14001d90d:	xchg   ebp,eax
   14001d90e:	(bad)  
   14001d90f:	(bad)  
   14001d910:	(bad)  
   14001d911:	(bad)  
   14001d912:	(bad)  
   14001d913:	jmp    rsp
   14001d915:	repz (bad) 
   14001d917:	inc    DWORD PTR [rbp-0x57]
   14001d91a:	(bad)  
   14001d91b:	inc    DWORD PTR [rax]
   14001d91d:	mov    edi,edi
   14001d91f:	inc    DWORD PTR [rax]
   14001d921:	mov    bh,bh
   14001d923:	inc    DWORD PTR [rax]
   14001d925:	xchg   edi,edi
   14001d927:	inc    DWORD PTR [rbx]
   14001d929:	jp     0x14001d914
   14001d92b:	call   FWORD PTR [rbp-0x1900675d]
   14001d931:	(bad)  
   14001d932:	test   eax,0x5598c9ff
   14001d937:	dec    ecx
   14001d939:	cwde   
   14001d93a:	push   rbp
   14001d93b:	(bad)  
   14001d93c:	(bad)  
   14001d93d:	out    dx,al
   14001d93e:	(bad)  
   14001d93f:	(bad)  
   14001d940:	std    
   14001d941:	in     al,0xbf
   14001d943:	jmp    FWORD PTR [rsi+riz*4-0x27]
   14001d947:	inc    DWORD PTR [rax]
   14001d949:	xor    bh,0xff
   14001d94c:	(bad)  
   14001d94d:	xchg   esp,eax
   14001d94e:	(bad)  
   14001d94f:	jmp    QWORD PTR [rbp+0xfffffd5]
   14001d955:	mov    ?,edi
   14001d957:	inc    DWORD PTR [rax]
   14001d959:	mov    bh,bh
   14001d95b:	inc    DWORD PTR [rax]
   14001d95d:	xchg   edi,edi
   14001d95f:	inc    DWORD PTR [rax]
   14001d961:	xchg   edi,edi
   14001d963:	inc    DWORD PTR [rax]
   14001d965:	jg     0x14001d95b
   14001d967:	call   FWORD PTR [rbp-0x6d]
   14001d96a:	mov    ebp,0x81b9dcff
   14001d96f:	jmp    rdi
   14001d971:	shr    BYTE PTR [rbx+0x5598c9ff],1
   14001d977:	dec    ecx
   14001d979:	cwde   
   14001d97a:	push   rbp
   14001d97b:	(bad)  
   14001d97c:	(bad)  
   14001d97d:	out    dx,al
   14001d97e:	(bad)  
   14001d97f:	(bad)  
   14001d980:	std    
   14001d981:	in     al,0xbf
   14001d983:	push   rsi
   14001d985:	loope  0x14001d947
   14001d987:	call   FWORD PTR [rbx-0x5d]
   14001d98a:	loope  0x14001d98b
   14001d98c:	add    BYTE PTR [rax-0x7dff0009],al
   14001d992:	cli    
   14001d993:	inc    DWORD PTR [rax]
   14001d995:	test   ah,bh
   14001d997:	inc    DWORD PTR [rax]
   14001d999:	test   ah,bh
   14001d99b:	inc    DWORD PTR [rax]
   14001d99d:	cmp    ecx,0xffffffff
   14001d9a0:	add    BYTE PTR [rsi-0xc],bh
   14001d9a3:	dec    DWORD PTR [rsi-0x6d]
   14001d9a6:	int    0xff
   14001d9a8:	fidivr DWORD PTR [rsp+rcx*4-0x7a432001]
   14001d9af:	(bad)  
   14001d9b0:	jmp    0x10a018887
   14001d9b5:	cwde   
   14001d9b6:	push   rbp
   14001d9b7:	dec    ecx
   14001d9b9:	cwde   
   14001d9ba:	push   rbp
   14001d9bb:	(bad)  
   14001d9bc:	(bad)  
   14001d9bd:	out    dx,al
   14001d9be:	(bad)  
   14001d9bf:	(bad)  
   14001d9c0:	std    
   14001d9c1:	in     al,0xbf
   14001d9c3:	(bad)  
   14001d9c4:	std    
   14001d9c5:	in     al,0xbf
   14001d9c7:	(bad)  
   14001d9c8:	std    
   14001d9c9:	in     al,0xbf
   14001d9cb:	(bad)  
   14001d9cc:	mov    edi,0x60ffcccb
   14001d9d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001d9d2:	loopne 0x14001d9d3
   14001d9d4:	sub    eax,0x2dffe990
   14001d9d9:	(bad)  
   14001d9dd:	movabs eax,ds:0xc5e6ffafb6b1ffd9
   14001d9e6:	xchg   ebx,eax
   14001d9e7:	jmp    rbx
   14001d9e9:	ror    DWORD PTR [rdi-0x75401e01],0xff
   14001d9f0:	jmp    0x14001d9c6
   14001d9f2:	mov    al,0xff
   14001d9f4:	leave  
   14001d9f5:	cwde   
   14001d9f6:	push   rbp
   14001d9f7:	dec    ecx
   14001d9f9:	cwde   
   14001d9fa:	push   rbp
   14001d9fb:	in     eax,dx
   14001d9fc:	cli    
   14001d9fd:	call   0x12f00b8d0
   14001da02:	(bad)  
   14001da03:	(bad)  
   14001da04:	(bad)  
   14001da05:	out    dx,al
   14001da06:	(bad)  
   14001da07:	(bad)  
   14001da08:	(bad)  
   14001da09:	out    dx,al
   14001da0a:	(bad)  
   14001da0b:	(bad)  
   14001da0c:	(bad)  
   14001da0d:	out    dx,al
   14001da0e:	(bad)  
   14001da0f:	(bad)  
   14001da10:	(bad)  
   14001da11:	out    dx,al
   14001da12:	(bad)  
   14001da13:	(bad)  
   14001da14:	(bad)  
   14001da15:	out    dx,al
   14001da16:	(bad)  
   14001da17:	(bad)  
   14001da18:	(bad)  
   14001da19:	out    dx,al
   14001da1a:	(bad)  
   14001da1b:	(bad)  
   14001da1c:	(bad)  
   14001da1d:	out    dx,al
   14001da1e:	(bad)  
   14001da1f:	(bad)  
   14001da20:	stc    
   14001da21:	out    0xcc,eax
   14001da23:	push   rcx
   14001da25:	fdivr  QWORD PTR [rbp-0x46251001]
   14001da2b:	(bad)  
   14001da2c:	in     eax,dx
   14001da2d:	xlat   BYTE PTR ds:[rbx]
   14001da2e:	mov    bh,0xff
   14001da30:	in     al,dx
   14001da31:	(bad)  
   14001da32:	mov    ah,0xdd
   14001da34:	leave  
   14001da35:	cwde   
   14001da36:	push   rbp
   14001da37:	lock leave 
   14001da39:	cwde   
   14001da3a:	push   rbp
   14001da3b:	test   cl,cl
   14001da3d:	cwde   
   14001da3e:	push   rbp
   14001da3f:	in     eax,dx
   14001da40:	leave  
   14001da41:	cwde   
   14001da42:	push   rbp
   14001da43:	dec    ecx
   14001da45:	cwde   
   14001da46:	push   rbp
   14001da47:	dec    ecx
   14001da49:	cwde   
   14001da4a:	push   rbp
   14001da4b:	dec    ecx
   14001da4d:	cwde   
   14001da4e:	push   rbp
   14001da4f:	dec    ecx
   14001da51:	cwde   
   14001da52:	push   rbp
   14001da53:	dec    ecx
   14001da55:	cwde   
   14001da56:	push   rbp
   14001da57:	dec    ecx
   14001da59:	cwde   
   14001da5a:	push   rbp
   14001da5b:	dec    ecx
   14001da5d:	cwde   
   14001da5e:	push   rbp
   14001da5f:	dec    ecx
   14001da61:	cwde   
   14001da62:	push   rbp
   14001da63:	dec    ecx
   14001da65:	cwde   
   14001da66:	push   rbp
   14001da67:	dec    ecx
   14001da69:	cwde   
   14001da6a:	push   rbp
   14001da6b:	dec    ecx
   14001da6d:	cwde   
   14001da6e:	push   rbp
   14001da6f:	dec    ecx
   14001da71:	cwde   
   14001da72:	push   rbp
   14001da73:	lock leave 
   14001da75:	cwde   
   14001da76:	push   rbp
   14001da77:	xchg   DWORD PTR [rax],eax
	...
   14001dab9:	add    BYTE PTR [rcx],al
   14001dabb:	add    BYTE PTR [rax],dl
   14001dabd:	add    BYTE PTR [rax+0x40],al
   14001dac0:	adc    BYTE PTR [rax],al
   14001dac2:	add    DWORD PTR [rax],eax
   14001dac4:	add    al,0x0
   14001dac6:	push   0x100000a
   14001dacb:	add    BYTE PTR [rax],dh
   14001dacd:	xor    BYTE PTR [rax],dl
   14001dacf:	add    BYTE PTR [rcx],al
   14001dad1:	add    BYTE PTR [rax+rax*1],al
   14001dad4:	push   0x2000006
   14001dad9:	add    BYTE PTR [rax],ah
   14001dadb:	and    BYTE PTR [rax],dl
   14001dadd:	add    BYTE PTR [rcx],al
   14001dadf:	add    BYTE PTR [rax+rax*1],al
   14001dae2:	call   0x14301dae9
   14001dae7:	add    BYTE PTR [rax],bl
   14001dae9:	sbb    BYTE PTR [rax],dl
   14001daeb:	add    BYTE PTR [rcx],al
   14001daed:	add    BYTE PTR [rax+rax*1],al
   14001daf0:	call   0x14401daf6
   14001daf5:	add    BYTE PTR [rax],dl
   14001daf7:	adc    BYTE PTR [rax],dl
   14001daf9:	add    BYTE PTR [rcx],al
   14001dafb:	add    BYTE PTR [rax+rax*1],al
   14001dafe:	sub    BYTE PTR [rcx],al
   14001db00:	add    BYTE PTR [rax],al
   14001db02:	add    eax,0x404000
   14001db07:	add    BYTE PTR [rcx],al
   14001db09:	add    BYTE PTR [rax],cl
   14001db0b:	add    BYTE PTR [rax],ch
   14001db0d:	(bad)  
   14001db0e:	add    BYTE PTR [rax],al
   14001db10:	(bad)  
   14001db11:	add    BYTE PTR [rax],dh
   14001db13:	xor    BYTE PTR [rax],al
   14001db15:	add    BYTE PTR [rcx],al
   14001db17:	add    BYTE PTR [rax],cl
   14001db19:	add    BYTE PTR [rax+0x700000e],ch
   14001db1f:	add    BYTE PTR [rax],ah
   14001db21:	and    BYTE PTR [rax],al
   14001db23:	add    BYTE PTR [rcx],al
   14001db25:	add    BYTE PTR [rax],cl
   14001db27:	add    BYTE PTR [rax+0x8000008],ch
   14001db2d:	add    BYTE PTR [rax],bl
   14001db2f:	sbb    BYTE PTR [rax],al
   14001db31:	add    BYTE PTR [rcx],al
   14001db33:	add    BYTE PTR [rax],cl
   14001db35:	add    al,cl
   14001db37:	(bad)  
   14001db38:	add    BYTE PTR [rax],al
   14001db3a:	or     DWORD PTR [rax],eax
   14001db3c:	adc    BYTE PTR [rax],dl
   14001db3e:	add    BYTE PTR [rax],al
   14001db40:	add    DWORD PTR [rax],eax
   14001db42:	or     BYTE PTR [rax],al
   14001db44:	push   0xa000005
   14001db49:	add    BYTE PTR [rax],al
   14001db4b:	add    BYTE PTR [rax],al
   14001db4d:	add    BYTE PTR [rcx],al
   14001db4f:	add    BYTE PTR [rax],ah
   14001db51:	add    BYTE PTR [rdi+0xb00008f],bh
   14001db57:	add    BYTE PTR [rax+0x40],al
   14001db5a:	add    BYTE PTR [rax],al
   14001db5c:	add    DWORD PTR [rax],eax
   14001db5e:	and    BYTE PTR [rax],al
   14001db60:	sub    BYTE PTR [rdx+0x0],al
   14001db63:	add    BYTE PTR [rax+rax*1],cl
   14001db66:	xor    BYTE PTR [rax],dh
   14001db68:	add    BYTE PTR [rax],al
   14001db6a:	add    DWORD PTR [rax],eax
   14001db6c:	and    BYTE PTR [rax],al
   14001db6e:	test   al,0x25
   14001db70:	add    BYTE PTR [rax],al
   14001db72:	or     eax,0x202000
   14001db77:	add    BYTE PTR [rcx],al
   14001db79:	add    BYTE PTR [rax],ah
   14001db7b:	add    BYTE PTR [rax+0xe000010],ch
   14001db81:	add    BYTE PTR [rax],bl
   14001db83:	sbb    BYTE PTR [rax],al
   14001db85:	add    BYTE PTR [rcx],al
   14001db87:	add    BYTE PTR [rax],ah
   14001db89:	add    BYTE PTR [rax+0xf000009],cl
   14001db8f:	add    BYTE PTR [rax],dl
   14001db91:	adc    BYTE PTR [rax],al
   14001db93:	add    BYTE PTR [rcx],al
   14001db95:	add    BYTE PTR [rax],ah
   14001db97:	add    BYTE PTR [rax+0x4],ch
   14001db9a:	add    BYTE PTR [rax],al
   14001db9c:	adc    BYTE PTR [rax],al
   14001db9e:	add    BYTE PTR [rax],al
   14001dba0:	cmp    al,0x3f
   14001dba2:	js     0x14001dc11
   14001dba4:	ins    BYTE PTR es:[rdi],dx
   14001dba5:	and    BYTE PTR [rsi+0x65],dh
   14001dba8:	jb     0x14001dc1d
   14001dbaa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001dbb1:	xor    BYTE PTR [rdx],ah
   14001dbb3:	and    BYTE PTR [rbp+0x6e],ah
   14001dbb6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14001dbb9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14001dbc0:	rex.RX sub eax,0x73202238
   14001dbc6:	je     0x14001dc29
   14001dbc8:	outs   dx,BYTE PTR ds:[rsi]
   14001dbc9:	fs (bad) 
   14001dbcb:	ins    BYTE PTR es:[rdi],dx
   14001dbcc:	outs   dx,DWORD PTR ds:[rsi]
   14001dbcd:	outs   dx,BYTE PTR ds:[rsi]
   14001dbce:	gs cmp eax,0x73657922
   14001dbd4:	and    bh,BYTE PTR [rdi]
   14001dbd6:	ds or  eax,0x73613c0a
   14001dbdc:	jae    0x14001dc43
   14001dbde:	ins    DWORD PTR es:[rdi],dx
   14001dbdf:	(bad)  
   14001dbe0:	ins    BYTE PTR es:[rdi],dx
   14001dbe1:	jns    0x14001dc03
   14001dbe3:	js     0x14001dc52
   14001dbe5:	ins    BYTE PTR es:[rdi],dx
   14001dbe6:	outs   dx,BYTE PTR ds:[rsi]
   14001dbe7:	jae    0x14001dc26
   14001dbe9:	and    dh,BYTE PTR [rbp+0x72]
   14001dbec:	outs   dx,BYTE PTR ds:[rsi]
   14001dbed:	cmp    dh,BYTE PTR [rbx+0x63]
   14001dbf0:	push   0x73616d65
   14001dbf5:	sub    eax,0x7263696d
   14001dbfa:	outs   dx,DWORD PTR ds:[rsi]
   14001dbfb:	jae    0x14001dc6c
   14001dbfd:	data16 je 0x14001dc2d
   14001dc00:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001dc03:	cmp    ah,BYTE PTR [rcx+0x73]
   14001dc06:	ins    DWORD PTR es:[rdi],dx
   14001dc07:	cs jbe 0x14001dc3b
   14001dc0a:	and    cl,BYTE PTR [rip+0x616d200a]        # 0x1a16efc1a
   14001dc10:	outs   dx,BYTE PTR ds:[rsi]
   14001dc11:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001dc18:	jb     0x14001dc8d
   14001dc1a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001dc21:	xor    BYTE PTR [rdx],ah
   14001dc23:	and    BYTE PTR ds:[rip+0x200a0d0a],cl        # 0x1600be934
   14001dc2a:	and    BYTE PTR [rcx+riz*2],bh
   14001dc2d:	jae    0x14001dca2
   14001dc2f:	gs ins DWORD PTR es:[rdi],dx
   14001dc31:	(bad)  
   14001dc32:	ins    BYTE PTR es:[rdi],dx
   14001dc33:	jns    0x14001dc7e
   14001dc35:	fs outs dx,BYTE PTR gs:[rsi]
   14001dc38:	je     0x14001dca3
   14001dc3a:	je     0x14001dcb5
   14001dc3c:	or     eax,0x2020200a
   14001dc41:	and    BYTE PTR [rax],ah
   14001dc43:	and    BYTE PTR [rsi+0x61],ch
   14001dc46:	ins    DWORD PTR es:[rdi],dx
   14001dc47:	gs cmp eax,0x706d7722
   14001dc4d:	jae    0x14001dcb7
   14001dc4f:	(bad)  
   14001dc50:	jb     0x14001dcb7
   14001dc52:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021fc62
   14001dc58:	and    BYTE PTR [rax],ah
   14001dc5a:	and    BYTE PTR [rax+0x72],dh
   14001dc5d:	outs   dx,DWORD PTR ds:[rsi]
   14001dc5e:	movsxd esp,DWORD PTR [rbp+0x73]
   14001dc61:	jae    0x14001dcd2
   14001dc63:	jb     0x14001dca6
   14001dc65:	jb     0x14001dcca
   14001dc67:	push   0x63657469
   14001dc6c:	je     0x14001dce3
   14001dc6e:	jb     0x14001dcd5
   14001dc70:	cmp    eax,0x36385822
   14001dc75:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021fc85
   14001dc7b:	and    BYTE PTR [rax],ah
   14001dc7d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14001dc81:	gs cmp eax,0x6e697722
   14001dc87:	xor    esi,DWORD PTR [rdx]
   14001dc89:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021fc99
   14001dc8f:	and    BYTE PTR [rax],ah
   14001dc91:	and    BYTE PTR [rsi+0x65],dh
   14001dc94:	jb     0x14001dd09
   14001dc96:	imul   ebp,DWORD PTR [rdi+0x6e],0x3131223d
   14001dc9d:	xor    BYTE PTR cs:[rsi],ch
   14001dca0:	xor    BYTE PTR [rsi],ch
   14001dca2:	xor    BYTE PTR ss:[rax],dh
   14001dca5:	xor    BYTE PTR [rdx],ah
   14001dca7:	or     eax,0x2020200a
   14001dcac:	and    BYTE PTR [rax],ah
   14001dcae:	and    BYTE PTR [rdi],ch
   14001dcb0:	ds or  eax,0x200a0d0a
   14001dcb6:	and    BYTE PTR [rsp+riz*2],bh
   14001dcb9:	gs jae 0x14001dd1f
   14001dcbc:	jb     0x14001dd27
   14001dcbe:	jo     0x14001dd34
   14001dcc0:	imul   ebp,DWORD PTR [rdi+0x6e],0x7070413e
   14001dcc7:	ins    BYTE PTR es:[rdi],dx
   14001dcc8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001dccf:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001dcd3:	jae    0x14001dd3d
   14001dcd5:	(bad)  
   14001dcd6:	jb     0x14001dd3d
   14001dcd8:	and    BYTE PTR [rsi+0x6f],ah
   14001dcdb:	ins    BYTE PTR es:[rdi],dx
   14001dcdc:	fs gs jb 0x14001dd53
   14001dce0:	and    BYTE PTR [rbx+0x6f],ah
   14001dce3:	outs   dx,BYTE PTR ds:[rsi]
   14001dce4:	je     0x14001dd47
   14001dce6:	imul   ebp,DWORD PTR [rsi+0x69],0x6d20676e
   14001dced:	gs imul esp,DWORD PTR fs:[rcx+0x20],0x74206f74
   14001dcf6:	push   0x656d2065
   14001dcfb:	imul   esp,DWORD PTR fs:[rcx+0x20],0x72616873
   14001dd03:	imul   ebp,DWORD PTR [rsi+0x67],0x72657320
   14001dd0a:	jbe    0x14001dd75
   14001dd0c:	movsxd esp,DWORD PTR [rbp+0x2e]
   14001dd0f:	cmp    al,0x2f
   14001dd11:	fs gs jae 0x14001dd78
   14001dd15:	jb     0x14001dd80
   14001dd17:	jo     0x14001dd8d
   14001dd19:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14001dd20:	or     ah,BYTE PTR [rax]
   14001dd22:	and    BYTE PTR [rsp+rsi*2],bh
   14001dd25:	jb     0x14001dd9c
   14001dd27:	jae    0x14001dd9d
   14001dd29:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001dd2b:	outs   dx,WORD PTR ds:[rsi]
   14001dd2d:	and    BYTE PTR [rax+0x6d],bh
   14001dd30:	ins    BYTE PTR es:[rdi],dx
   14001dd31:	outs   dx,BYTE PTR ds:[rsi]
   14001dd32:	jae    0x14001dd71
   14001dd34:	and    dh,BYTE PTR [rbp+0x72]
   14001dd37:	outs   dx,BYTE PTR ds:[rsi]
   14001dd38:	cmp    dh,BYTE PTR [rbx+0x63]
   14001dd3b:	push   0x73616d65
   14001dd40:	sub    eax,0x7263696d
   14001dd45:	outs   dx,DWORD PTR ds:[rsi]
   14001dd46:	jae    0x14001ddb7
   14001dd48:	data16 je 0x14001dd78
   14001dd4b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001dd4e:	cmp    ah,BYTE PTR [rcx+0x73]
   14001dd51:	ins    DWORD PTR es:[rdi],dx
   14001dd52:	cs jbe 0x14001dd88
   14001dd55:	and    bh,BYTE PTR [rsi]
   14001dd57:	or     eax,0x2020200a
   14001dd5c:	and    BYTE PTR [rbx+rsi*2],bh
   14001dd5f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001dd63:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001dd6b:	and    BYTE PTR [rax],ah
   14001dd6d:	and    BYTE PTR [rax],ah
   14001dd6f:	cmp    al,0x72
   14001dd71:	gs jno 0x14001dde9
   14001dd74:	gs jae 0x14001ddeb
   14001dd77:	gs fs push rax
   14001dd7a:	jb     0x14001dde5
   14001dd7c:	jbe    0x14001dde7
   14001dd7e:	ins    BYTE PTR es:[rdi],dx
   14001dd7f:	gs addr32 gs jae 0x14001ddc2
   14001dd84:	or     eax,0x2020200a
   14001dd89:	and    BYTE PTR [rax],ah
   14001dd8b:	and    BYTE PTR [rax],ah
   14001dd8d:	and    BYTE PTR [rdx+rsi*2],bh
   14001dd90:	gs jno 0x14001de08
   14001dd93:	gs jae 0x14001de0a
   14001dd96:	gs fs rex.RB js 0x14001de00
   14001dd9b:	movsxd esi,DWORD PTR [rbp+0x74]
   14001dd9e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001dda5:	ins    BYTE PTR es:[rdi],dx
   14001dda6:	or     eax,0x2020200a
   14001ddab:	and    BYTE PTR [rax],ah
   14001ddad:	and    BYTE PTR [rax],ah
   14001ddaf:	and    BYTE PTR [rax],ah
   14001ddb1:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001ddb5:	gs ins BYTE PTR es:[rdi],dx
   14001ddb7:	cmp    eax,0x49736122
   14001ddbc:	outs   dx,BYTE PTR ds:[rsi]
   14001ddbd:	jbe    0x14001de2e
   14001ddbf:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001ddc3:	or     eax,0x2020200a
   14001ddc8:	and    BYTE PTR [rax],ah
   14001ddca:	and    BYTE PTR [rax],ah
   14001ddcc:	and    BYTE PTR [rax],ah
   14001ddce:	and    BYTE PTR [rbp+0x69],dh
   14001ddd1:	movsxd esp,DWORD PTR [r11+0x65]
   14001ddd5:	jae    0x14001de4a
   14001ddd7:	cmp    eax,0x6c616622
   14001dddc:	jae    0x14001de43
   14001ddde:	and    ch,BYTE PTR [rdi]
   14001dde0:	ds or  eax,0x2020200a
   14001dde6:	and    BYTE PTR [rax],ah
   14001dde8:	and    BYTE PTR [rdi+rbp*1],bh
   14001ddeb:	jb     0x14001de52
   14001dded:	jno    0x14001de64
   14001ddef:	gs jae 0x14001de66
   14001ddf2:	gs fs push rax
   14001ddf5:	jb     0x14001de60
   14001ddf7:	jbe    0x14001de62
   14001ddf9:	ins    BYTE PTR es:[rdi],dx
   14001ddfa:	gs addr32 gs jae 0x14001de3d
   14001ddff:	or     eax,0x2020200a
   14001de04:	and    BYTE PTR [rdi+rbp*1],bh
   14001de07:	jae    0x14001de6e
   14001de09:	movsxd esi,DWORD PTR [rbp+0x72]
   14001de0c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001de14:	cmp    al,0x2f
   14001de16:	je     0x14001de8a
   14001de18:	jne    0x14001de8d
   14001de1a:	je     0x14001de65
   14001de1c:	outs   dx,BYTE PTR ds:[rsi]
   14001de1d:	outs   dx,WORD PTR ds:[rsi]
   14001de1f:	ds or  eax,0x3c0a0d0a
   14001de25:	(bad)  
   14001de26:	(bad)  
   14001de27:	jae    0x14001de9c
   14001de29:	gs ins DWORD PTR es:[rdi],dx
   14001de2b:	(bad)  
   14001de2c:	ins    BYTE PTR es:[rdi],dx
   14001de2d:	jns    0x14001de6d
   14001de2f:	or     eax,0xa
   14001de34:	add    BYTE PTR [rax],al
   14001de36:	add    BYTE PTR [rax],al
   14001de38:	int3   
   14001de39:	add    esi,DWORD PTR [rax+rax*1]
   14001de3c:	add    BYTE PTR [rax],al
   14001de3e:	push   rsi
   14001de3f:	add    BYTE PTR [rbx+0x0],dl
   14001de42:	pop    rdi
   14001de43:	add    BYTE PTR [rsi+0x0],dl
   14001de46:	add    BYTE PTR [r10+0x0],r10b
   14001de4a:	push   rbx
   14001de4b:	add    BYTE PTR [rcx+0x0],cl
   14001de4e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001de52:	pop    rdi
   14001de53:	add    BYTE PTR [rcx+0x0],cl
   14001de56:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001de5a:	rex.WRXB add BYTE PTR [r8],r8b
   14001de5d:	add    BYTE PTR [rax],al
   14001de5f:	add    BYTE PTR [rbp+0xfeef04],bh
   14001de65:	add    BYTE PTR [rcx],al
   14001de67:	add    BYTE PTR [rax],al
   14001de69:	add    BYTE PTR [rax+rax*1],cl
   14001de6c:	add    BYTE PTR [rax+0x0],al
   14001de6f:	sub    BYTE PTR [rax],al
   14001de71:	add    BYTE PTR [rax+rax*1],cl
   14001de74:	add    BYTE PTR [rax+0x0],al
   14001de77:	sub    BYTE PTR [rdi],bh
   14001de79:	add    BYTE PTR [rax],al
   14001de7b:	add    BYTE PTR [rax],al
   14001de7d:	add    BYTE PTR [rax],al
   14001de7f:	add    BYTE PTR [rax+rax*1],al
   14001de82:	add    al,0x0
   14001de84:	add    DWORD PTR [rax],eax
	...
   14001de92:	add    BYTE PTR [rax],al
   14001de94:	sub    al,BYTE PTR [rbx]
   14001de96:	add    BYTE PTR [rax],al
   14001de98:	add    DWORD PTR [rax],eax
   14001de9a:	push   rbx
   14001de9b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001de9f:	add    BYTE PTR [rcx+0x0],ch
   14001dea2:	outs   dx,BYTE PTR ds:[rsi]
   14001dea3:	add    BYTE PTR [rdi+0x0],ah
   14001dea6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001deaa:	ins    BYTE PTR es:[rdi],dx
   14001deab:	add    BYTE PTR [rbp+0x0],ah
   14001deae:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001deb2:	data16 add BYTE PTR [rdi+0x0],ch
   14001deb6:	add    BYTE PTR [rax],al
   14001deb8:	(bad)  
   14001deb9:	add    eax,DWORD PTR [rax]
   14001debb:	add    BYTE PTR [rcx],al
   14001debd:	add    BYTE PTR [rax],dh
   14001debf:	add    BYTE PTR [rax+rax*1],dh
   14001dec2:	xor    BYTE PTR [rax],al
   14001dec4:	cmp    DWORD PTR [rax],eax
   14001dec6:	xor    BYTE PTR [rax],al
   14001dec8:	xor    al,0x0
   14001deca:	rex.X add BYTE PTR [rax],sil
   14001decd:	add    BYTE PTR [rax],al
   14001decf:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001ded3:	add    BYTE PTR [rcx],al
   14001ded5:	add    BYTE PTR [rbx+0x0],al
   14001ded8:	outs   dx,DWORD PTR ds:[rsi]
   14001ded9:	add    BYTE PTR [rbp+0x0],ch
   14001dedc:	jo     0x14001dede
   14001dede:	(bad)  
   14001dedf:	add    BYTE PTR [rsi+0x0],ch
   14001dee2:	jns    0x14001dee4
   14001dee4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001dee8:	ins    DWORD PTR es:[rdi],dx
   14001dee9:	add    BYTE PTR [rbp+0x0],ah
   14001deec:	add    BYTE PTR [rax],al
   14001deee:	add    BYTE PTR [rax],al
   14001def0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001def4:	movsxd eax,DWORD PTR [rax]
   14001def6:	jb     0x14001def8
   14001def8:	outs   dx,DWORD PTR ds:[rsi]
   14001def9:	add    BYTE PTR [rbx+0x0],dh
   14001defc:	outs   dx,DWORD PTR ds:[rsi]
   14001defd:	add    BYTE PTR [rsi+0x0],ah
   14001df00:	je     0x14001df02
   14001df02:	and    BYTE PTR [rax],al
   14001df04:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001df08:	jb     0x14001df0a
   14001df0a:	jo     0x14001df0c
   14001df0c:	outs   dx,DWORD PTR ds:[rsi]
   14001df0d:	add    BYTE PTR [rdx+0x0],dh
   14001df10:	(bad)  
   14001df11:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001df15:	add    BYTE PTR [rdi+0x0],ch
   14001df18:	outs   dx,BYTE PTR ds:[rsi]
   14001df19:	add    BYTE PTR [rax],al
   14001df1b:	add    BYTE PTR [rsi+0x1002f00],al
   14001df21:	add    BYTE PTR [rsi+0x0],al
   14001df24:	imul   eax,DWORD PTR [rax],0x65006c
   14001df2a:	add    BYTE PTR [rbp+0x0],r12b
   14001df2e:	jae    0x14001df30
   14001df30:	movsxd eax,DWORD PTR [rax]
   14001df32:	jb     0x14001df34
   14001df34:	imul   eax,DWORD PTR [rax],0x740070
   14001df3a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001df40:	add    BYTE PTR [rax],al
   14001df42:	add    BYTE PTR [rax],al
   14001df44:	push   rdi
   14001df45:	add    BYTE PTR [rcx+0x0],ch
   14001df48:	outs   dx,BYTE PTR ds:[rsi]
   14001df49:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14001df4d:	add    BYTE PTR [rdi+0x0],dh
   14001df50:	jae    0x14001df52
   14001df52:	and    BYTE PTR [rax],al
   14001df54:	rex.WRB add BYTE PTR [r13+0x0],r12b
   14001df58:	add    BYTE PTR fs:[rcx+0x0],ch
   14001df5c:	(bad)  
   14001df5d:	add    BYTE PTR [rax],ah
   14001df5f:	add    BYTE PTR [rax+0x0],dl
   14001df62:	ins    BYTE PTR es:[rdi],dx
   14001df63:	add    BYTE PTR [rcx+0x0],ah
   14001df66:	jns    0x14001df68
   14001df68:	add    BYTE PTR gs:[rdx+0x0],dh
   14001df6c:	and    BYTE PTR [rax],al
   14001df6e:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14001df72:	ins    BYTE PTR es:[rdi],dx
   14001df73:	add    BYTE PTR [rax+rax*1+0x65],ah
   14001df77:	add    BYTE PTR [rdx+0x0],dh
   14001df7a:	and    BYTE PTR [rax],al
   14001df7c:	push   rbx
   14001df7d:	add    BYTE PTR [rax+0x0],ch
   14001df80:	(bad)  
   14001df81:	add    BYTE PTR [rdx+0x0],dh
   14001df84:	imul   eax,DWORD PTR [rax],0x67006e
   14001df8a:	and    BYTE PTR [rax],al
   14001df8c:	add    BYTE PTR [r8+0x0],r15b
   14001df90:	add    BYTE PTR gs:[rbx+0x0],ah
   14001df94:	jne    0x14001df96
   14001df96:	je     0x14001df98
   14001df98:	(bad)  
   14001df99:	add    BYTE PTR [rdx+0x0],ah
   14001df9c:	ins    BYTE PTR es:[rdi],dx
   14001df9d:	add    BYTE PTR [rbp+0x0],ah
   14001dfa0:	add    BYTE PTR [rax],al
   14001dfa2:	add    BYTE PTR [rax],al
   14001dfa4:	data16 add BYTE PTR [rbx],ah
   14001dfa7:	add    BYTE PTR [rcx],al
   14001dfa9:	add    BYTE PTR [rsi+0x0],al
   14001dfac:	imul   eax,DWORD PTR [rax],0x65006c
   14001dfb2:	push   rsi
   14001dfb3:	add    BYTE PTR [rbp+0x0],ah
   14001dfb6:	jb     0x14001dfb8
   14001dfb8:	jae    0x14001dfba
   14001dfba:	imul   eax,DWORD PTR [rax],0x6e006f
   14001dfc0:	add    BYTE PTR [rax],al
   14001dfc2:	add    BYTE PTR [rax],al
   14001dfc4:	xor    DWORD PTR [rax],eax
   14001dfc6:	xor    al,BYTE PTR [rax]
   14001dfc8:	add    BYTE PTR cs:[rax],dh
   14001dfcb:	add    BYTE PTR [rsi],ch
   14001dfcd:	add    BYTE PTR [rcx],dh
   14001dfcf:	add    BYTE PTR [rax],dh
   14001dfd1:	add    BYTE PTR [rdx],dh
   14001dfd3:	add    BYTE PTR [rax+rax*1],dh
   14001dfd6:	xor    BYTE PTR [rax],al
   14001dfd8:	add    BYTE PTR cs:[rcx],dh
   14001dfdb:	add    BYTE PTR [rsi],dh
   14001dfdd:	add    BYTE PTR [rbx],dh
   14001dfdf:	add    BYTE PTR [rax],bh
   14001dfe1:	add    BYTE PTR [rax+rax*1],dh
   14001dfe4:	and    BYTE PTR [rax],al
   14001dfe6:	sub    BYTE PTR [rax],al
   14001dfe8:	je     0x14001dfea
   14001dfea:	push   0x2e003100
   14001dfef:	add    BYTE PTR [rcx],dh
   14001dff1:	add    BYTE PTR [rip+0x37003000],dh        # 0x177020ff7
   14001dff7:	add    BYTE PTR [rax],dh
   14001dff9:	add    BYTE PTR [rcx],bh
   14001dffb:	add    BYTE PTR [rip+0x37003100],ch        # 0x177021101
   14001e001:	add    BYTE PTR [rax],dh
   14001e003:	add    BYTE PTR [rax],dh
   14001e005:	add    BYTE PTR [rcx],ch
   14001e007:	add    BYTE PTR [rax],al
   14001e009:	add    BYTE PTR [rax],al
   14001e00b:	add    BYTE PTR [rdx],bh
   14001e00d:	add    BYTE PTR [rip+0x49000100],cl        # 0x18901e113
   14001e013:	add    BYTE PTR [rsi+0x0],ch
   14001e016:	je     0x14001e018
   14001e018:	add    BYTE PTR gs:[rdx+0x0],dh
   14001e01c:	outs   dx,BYTE PTR ds:[rsi]
   14001e01d:	add    BYTE PTR [rcx+0x0],ah
   14001e020:	ins    BYTE PTR es:[rdi],dx
   14001e021:	add    BYTE PTR [rsi+0x0],cl
   14001e024:	(bad)  
   14001e025:	add    BYTE PTR [rbp+0x0],ch
   14001e028:	add    BYTE PTR gs:[rax],al
   14001e02b:	add    BYTE PTR [rdi+0x0],dh
   14001e02e:	ins    DWORD PTR es:[rdi],dx
   14001e02f:	add    BYTE PTR [rax+0x0],dh
   14001e032:	jae    0x14001e034
   14001e034:	push   0x72006100
   14001e039:	add    BYTE PTR [rbp+0x0],ah
   14001e03c:	add    BYTE PTR cs:[rbp+0x0],ah
   14001e040:	js     0x14001e042
   14001e042:	add    BYTE PTR gs:[rax],al
   14001e045:	add    BYTE PTR [rax],al
   14001e047:	add    BYTE PTR [rax+0x1002e00],al
   14001e04d:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001e051:	add    BYTE PTR [rdi+0x0],ah
   14001e054:	(bad)  
   14001e055:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001e059:	add    BYTE PTR [rdi+0x0],ch
   14001e05c:	jo     0x14001e05e
   14001e05e:	jns    0x14001e060
   14001e060:	jb     0x14001e062
   14001e062:	imul   eax,DWORD PTR [rax],0x680067
   14001e068:	je     0x14001e06a
   14001e06a:	add    BYTE PTR [rax],al
   14001e06c:	test   eax,0x4d002000
   14001e071:	add    BYTE PTR [rcx+0x0],ch
   14001e074:	movsxd eax,DWORD PTR [rax]
   14001e076:	jb     0x14001e078
   14001e078:	outs   dx,DWORD PTR ds:[rsi]
   14001e079:	add    BYTE PTR [rbx+0x0],dh
   14001e07c:	outs   dx,DWORD PTR ds:[rsi]
   14001e07d:	add    BYTE PTR [rsi+0x0],ah
   14001e080:	je     0x14001e082
   14001e082:	and    BYTE PTR [rax],al
   14001e084:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001e088:	jb     0x14001e08a
   14001e08a:	jo     0x14001e08c
   14001e08c:	outs   dx,DWORD PTR ds:[rsi]
   14001e08d:	add    BYTE PTR [rdx+0x0],dh
   14001e090:	(bad)  
   14001e091:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001e095:	add    BYTE PTR [rdi+0x0],ch
   14001e098:	outs   dx,BYTE PTR ds:[rsi]
   14001e099:	add    BYTE PTR [rsi],ch
   14001e09b:	add    BYTE PTR [rax],ah
   14001e09d:	add    BYTE PTR [rcx+0x0],al
   14001e0a0:	ins    BYTE PTR es:[rdi],dx
   14001e0a1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14001e0a5:	add    BYTE PTR [rdx+0x0],dh
   14001e0a8:	imul   eax,DWORD PTR [rax],0x680067
   14001e0ae:	je     0x14001e0b0
   14001e0b0:	jae    0x14001e0b2
   14001e0b2:	and    BYTE PTR [rax],al
   14001e0b4:	jb     0x14001e0b6
   14001e0b6:	add    BYTE PTR gs:[rbx+0x0],dh
   14001e0ba:	add    BYTE PTR gs:[rdx+0x0],dh
   14001e0be:	jbe    0x14001e0c0
   14001e0c0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14001e0c5:	add    BYTE PTR [rax],al
   14001e0c7:	add    BYTE PTR [rdx+0x0],al
   14001e0ca:	or     eax,0x4f000100
   14001e0cf:	add    BYTE PTR [rdx+0x0],dh
   14001e0d2:	imul   eax,DWORD PTR [rax],0x690067
   14001e0d8:	outs   dx,BYTE PTR ds:[rsi]
   14001e0d9:	add    BYTE PTR [rcx+0x0],ah
   14001e0dc:	ins    BYTE PTR es:[rdi],dx
   14001e0dd:	add    BYTE PTR [rsi+0x0],al
   14001e0e0:	imul   eax,DWORD PTR [rax],0x65006c
   14001e0e6:	outs   dx,BYTE PTR ds:[rsi]
   14001e0e7:	add    BYTE PTR [rcx+0x0],ah
   14001e0ea:	ins    DWORD PTR es:[rdi],dx
   14001e0eb:	add    BYTE PTR [rbp+0x0],ah
   14001e0ee:	add    BYTE PTR [rax],al
   14001e0f0:	ja     0x14001e0f2
   14001e0f2:	ins    DWORD PTR es:[rdi],dx
   14001e0f3:	add    BYTE PTR [rax+0x0],dh
   14001e0f6:	jae    0x14001e0f8
   14001e0f8:	push   0x72006100
   14001e0fd:	add    BYTE PTR [rbp+0x0],ah
   14001e100:	add    BYTE PTR cs:[rbp+0x0],ah
   14001e104:	js     0x14001e106
   14001e106:	add    BYTE PTR gs:[rax],al
   14001e109:	add    BYTE PTR [rax],al
   14001e10b:	add    BYTE PTR [rdx+0x0],ch
   14001e10e:	and    eax,0x50000100
   14001e113:	add    BYTE PTR [rdx+0x0],dh
   14001e116:	outs   dx,DWORD PTR ds:[rsi]
   14001e117:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001e11b:	add    BYTE PTR [rbx+0x0],ah
   14001e11e:	je     0x14001e120
   14001e120:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001e124:	ins    DWORD PTR es:[rdi],dx
   14001e125:	add    BYTE PTR [rbp+0x0],ah
   14001e128:	add    BYTE PTR [rax],al
   14001e12a:	add    BYTE PTR [rax],al
   14001e12c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001e130:	movsxd eax,DWORD PTR [rax]
   14001e132:	jb     0x14001e134
   14001e134:	outs   dx,DWORD PTR ds:[rsi]
   14001e135:	add    BYTE PTR [rbx+0x0],dh
   14001e138:	outs   dx,DWORD PTR ds:[rsi]
   14001e139:	add    BYTE PTR [rsi+0x0],ah
   14001e13c:	je     0x14001e13e
   14001e13e:	scas   al,BYTE PTR es:[rdi]
   14001e13f:	add    BYTE PTR [rax],ah
   14001e141:	add    BYTE PTR [rdi+0x0],dl
   14001e144:	imul   eax,DWORD PTR [rax],0x64006e
   14001e14a:	outs   dx,DWORD PTR ds:[rsi]
   14001e14b:	add    BYTE PTR [rdi+0x0],dh
   14001e14e:	jae    0x14001e150
   14001e150:	scas   al,BYTE PTR es:[rdi]
   14001e151:	add    BYTE PTR [rax],ah
   14001e153:	add    BYTE PTR [rdi+0x0],cl
   14001e156:	jo     0x14001e158
   14001e158:	add    BYTE PTR gs:[rdx+0x0],dh
   14001e15c:	(bad)  
   14001e15d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001e161:	add    BYTE PTR [rsi+0x0],ch
   14001e164:	add    BYTE PTR [eax],ah
   14001e167:	add    BYTE PTR [rbx+0x0],dl
   14001e16a:	jns    0x14001e16c
   14001e16c:	jae    0x14001e16e
   14001e16e:	je     0x14001e170
   14001e170:	add    BYTE PTR gs:[rbp+0x0],ch
   14001e174:	add    BYTE PTR [rax],al
   14001e176:	add    BYTE PTR [rax],al
   14001e178:	rex.RX add BYTE PTR [rcx],r10b
   14001e17b:	add    BYTE PTR [rcx],al
   14001e17d:	add    BYTE PTR [rax+0x0],dl
   14001e180:	jb     0x14001e182
   14001e182:	outs   dx,DWORD PTR ds:[rsi]
   14001e183:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001e187:	add    BYTE PTR [rbx+0x0],ah
   14001e18a:	je     0x14001e18c
   14001e18c:	push   rsi
   14001e18d:	add    BYTE PTR [rbp+0x0],ah
   14001e190:	jb     0x14001e192
   14001e192:	jae    0x14001e194
   14001e194:	imul   eax,DWORD PTR [rax],0x6e006f
   14001e19a:	add    BYTE PTR [rax],al
   14001e19c:	xor    DWORD PTR [rax],eax
   14001e19e:	xor    al,BYTE PTR [rax]
   14001e1a0:	add    BYTE PTR cs:[rax],dh
   14001e1a3:	add    BYTE PTR [rsi],ch
   14001e1a5:	add    BYTE PTR [rcx],dh
   14001e1a7:	add    BYTE PTR [rax],dh
   14001e1a9:	add    BYTE PTR [rdx],dh
   14001e1ab:	add    BYTE PTR [rax+rax*1],dh
   14001e1ae:	xor    BYTE PTR [rax],al
   14001e1b0:	add    BYTE PTR cs:[rcx],dh
   14001e1b3:	add    BYTE PTR [rsi],dh
   14001e1b5:	add    BYTE PTR [rbx],dh
   14001e1b7:	add    BYTE PTR [rax],bh
   14001e1b9:	add    BYTE PTR [rax+rax*1],dh
   14001e1bc:	add    BYTE PTR [rax],al
   14001e1be:	add    BYTE PTR [rax],al
   14001e1c0:	add    BYTE PTR [rax],r8b
   14001e1c3:	add    BYTE PTR [rcx],al
   14001e1c5:	add    BYTE PTR [rsi+0x0],dl
   14001e1c8:	(bad)  
   14001e1c9:	add    BYTE PTR [rdx+0x0],dh
   14001e1cc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001e1d0:	ins    BYTE PTR es:[rdi],dx
   14001e1d1:	add    BYTE PTR [rbp+0x0],ah
   14001e1d4:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001e1d8:	data16 add BYTE PTR [rdi+0x0],ch
   14001e1dc:	add    BYTE PTR [rax],al
   14001e1de:	add    BYTE PTR [rax],al
   14001e1e0:	and    al,0x0
   14001e1e2:	add    al,0x0
   14001e1e4:	add    BYTE PTR [rax],al
   14001e1e6:	push   rsp
   14001e1e7:	add    BYTE PTR [rdx+0x0],dh
   14001e1ea:	(bad)  
   14001e1eb:	add    BYTE PTR [rsi+0x0],ch
   14001e1ee:	jae    0x14001e1f0
   14001e1f0:	ins    BYTE PTR es:[rdi],dx
   14001e1f1:	add    BYTE PTR [rcx+0x0],ah
   14001e1f4:	je     0x14001e1f6
   14001e1f6:	imul   eax,DWORD PTR [rax],0x6e006f
   14001e1fc:	add    BYTE PTR [rax],al
   14001e1fe:	add    BYTE PTR [rax],al
   14001e200:	or     DWORD PTR [rax+rsi*4],eax
   14001e203:	add    al,0x0
   14001e205:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014001f000 <.reloc>:
   14001f000:	add    BYTE PTR [rax],dh
   14001f002:	add    BYTE PTR [rax],al
   14001f004:	and    BYTE PTR [rax],al
   14001f006:	add    BYTE PTR [rax],al
   14001f008:	jo     0x14001efab
   14001f00a:	js     0x14001efad
   14001f00c:	mov    BYTE PTR [rcx-0x5e575e60],ah
   14001f012:	lock movabs eax,ds:0xa288a280a268a1f8
   14001f01c:	nop
   14001f01d:	movabs ds:0x10000060000000,al
   14001f026:	add    BYTE PTR [rax],al
   14001f028:	add    BYTE PTR [rax-0x5fef5ff8],ah
	...
