
78dc236cc76e06c9aa253cb95dc297eedb63e4dd1b98335b6cdaa64ce4b1056c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4515]        # 0x405530
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4516]        # 0x405540
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4519]        # 0x405550
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x44dc]        # 0x405520
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x438f]        # 0x4053e0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x44b1]        # 0x405510
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402ba8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401b60
  401081:	mov    rdx,QWORD PTR [rip+0x43e8]        # 0x405470
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x43ce]        # 0x405460
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4434]        # 0x4054d0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x436b]        # 0x405410
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401740
  4010af:	mov    rax,QWORD PTR [rip+0x42da]        # 0x405390
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402ba8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x919]        # 0x401a40
  401127:	call   0x401a30
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4395]        # 0x405500
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4325]        # 0x4054c0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402bc0
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x434a]        # 0x405510
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x424b]        # 0x405440
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x818e]        # 0x409390
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x4227]        # 0x405450
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x416c]        # 0x4053d0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d50
  40127d:	lea    rcx,[rip+0x106c]        # 0x4022f0
  401284:	call   QWORD PTR [rip+0x80fe]        # 0x409388
  40128a:	mov    rdx,QWORD PTR [rip+0x419f]        # 0x405430
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402200
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402bf0
  4012a5:	call   0x401b40
  4012aa:	mov    rax,QWORD PTR [rip+0x412f]        # 0x4053e0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4141]        # 0x405400
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1cca],eax        # 0x403000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b30
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b18
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b30
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b28
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401710
  4013bb:	mov    rax,QWORD PTR [rip+0x402e]        # 0x4053f0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402cc0
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b90
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x4019]        # 0x405450
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402b98
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x402d]        # 0x405490
  401463:	mov    rcx,QWORD PTR [rip+0x4016]        # 0x405480
  40146a:	call   0x402b88
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e9f]        # 0x409338
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x4009]        # 0x4054b0
  4014a7:	mov    rcx,QWORD PTR [rip+0x3ff2]        # 0x4054a0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b88
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b50
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4035]        # 0x405510
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401750
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x4005]        # 0x405510
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401750
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x7dba]        # 0x4092f0
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x7daa]        # 0x4092e8
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x7d92]        # 0x4092d8
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x7d82]        # 0x4092d0
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x7d72]        # 0x4092c8
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x7d62]        # 0x4092c0
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x7d52]        # 0x4092b8
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x7d42]        # 0x4092b0
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x7d32]        # 0x4092a8
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x7d22]        # 0x4092a0
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x7d12]        # 0x409298
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x7d02]        # 0x409290
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x7cf2]        # 0x409288
  401596:	nop
  401597:	nop
  401598:	nop    DWORD PTR [rax+rax*1+0x0]
  4015a0:	push   rbx
  4015a1:	sub    rsp,0x30
  4015a5:	mov    rbx,rcx
  4015a8:	mov    rcx,QWORD PTR [rip+0x7461]        # 0x408a10
  4015af:	call   0x401b50
  4015b4:	cmp    rax,0xffffffffffffffff
  4015b8:	mov    QWORD PTR [rsp+0x20],rax
  4015bd:	je     0x401635
  4015bf:	mov    ecx,0x8
  4015c4:	call   0x402b80
  4015c9:	mov    rcx,QWORD PTR [rip+0x7440]        # 0x408a10
  4015d0:	call   0x401b50
  4015d5:	mov    rcx,QWORD PTR [rip+0x743c]        # 0x408a18
  4015dc:	mov    QWORD PTR [rsp+0x20],rax
  4015e1:	call   0x401b50
  4015e6:	lea    rdx,[rsp+0x20]
  4015eb:	lea    r8,[rsp+0x28]
  4015f0:	mov    rcx,rbx
  4015f3:	mov    QWORD PTR [rsp+0x28],rax
  4015f8:	call   0x402bc8
  4015fd:	mov    rcx,QWORD PTR [rsp+0x20]
  401602:	mov    rbx,rax
  401605:	call   0x401b60
  40160a:	mov    rcx,QWORD PTR [rsp+0x28]
  40160f:	mov    QWORD PTR [rip+0x73fa],rax        # 0x408a10
  401616:	call   0x401b60
  40161b:	mov    ecx,0x8
  401620:	mov    QWORD PTR [rip+0x73f1],rax        # 0x408a18
  401627:	call   0x402b68
  40162c:	mov    rax,rbx
  40162f:	add    rsp,0x30
  401633:	pop    rbx
  401634:	ret    
  401635:	mov    rax,QWORD PTR [rip+0x3de4]        # 0x405420
  40163c:	mov    rcx,rbx
  40163f:	call   QWORD PTR [rax]
  401641:	add    rsp,0x30
  401645:	pop    rbx
  401646:	ret    
  401647:	nop    WORD PTR [rax+rax*1+0x0]
  401650:	sub    rsp,0x28
  401654:	call   0x4015a0
  401659:	test   rax,rax
  40165c:	sete   al
  40165f:	movzx  eax,al
  401662:	neg    eax
  401664:	add    rsp,0x28
  401668:	ret    
  401669:	nop
  40166a:	nop
  40166b:	nop
  40166c:	nop
  40166d:	nop
  40166e:	nop
  40166f:	nop
  401670:	sub    rsp,0x28
  401674:	mov    rax,QWORD PTR [rip+0x3585]        # 0x404c00
  40167b:	mov    rax,QWORD PTR [rax]
  40167e:	test   rax,rax
  401681:	je     0x4016a0
  401683:	call   rax
  401685:	mov    rax,QWORD PTR [rip+0x3574]        # 0x404c00
  40168c:	lea    rdx,[rax+0x8]
  401690:	mov    rax,QWORD PTR [rax+0x8]
  401694:	mov    QWORD PTR [rip+0x3565],rdx        # 0x404c00
  40169b:	test   rax,rax
  40169e:	jne    0x401683
  4016a0:	add    rsp,0x28
  4016a4:	ret    
  4016a5:	nop
  4016a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016b0:	push   rsi
  4016b1:	push   rbx
  4016b2:	sub    rsp,0x28
  4016b6:	mov    rsi,QWORD PTR [rip+0x3ce3]        # 0x4053a0
  4016bd:	mov    rax,QWORD PTR [rsi]
  4016c0:	cmp    eax,0xffffffff
  4016c3:	mov    ebx,eax
  4016c5:	je     0x4016f0
  4016c7:	test   ebx,ebx
  4016c9:	je     0x4016da
  4016cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016d0:	mov    eax,ebx
  4016d2:	call   QWORD PTR [rsi+rax*8]
  4016d5:	sub    ebx,0x1
  4016d8:	jne    0x4016d0
  4016da:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401670
  4016e1:	add    rsp,0x28
  4016e5:	pop    rbx
  4016e6:	pop    rsi
  4016e7:	jmp    0x401650
  4016ec:	nop    DWORD PTR [rax+0x0]
  4016f0:	xor    ebx,ebx
  4016f2:	jmp    0x4016f6
  4016f4:	mov    ebx,eax
  4016f6:	lea    edx,[rbx+0x1]
  4016f9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4016fe:	mov    rax,rdx
  401701:	jne    0x4016f4
  401703:	jmp    0x4016c7
  401705:	nop
  401706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401710:	mov    eax,DWORD PTR [rip+0x691a]        # 0x408030
  401716:	test   eax,eax
  401718:	je     0x401720
  40171a:	repz ret 
  40171c:	nop    DWORD PTR [rax+0x0]
  401720:	mov    DWORD PTR [rip+0x6906],0x1        # 0x408030
  40172a:	jmp    0x4016b0
  40172c:	nop
  40172d:	nop
  40172e:	nop
  40172f:	nop
  401730:	mov    rax,QWORD PTR [rip+0x7cb9]        # 0x4093f0
  401737:	rex.W jmp rax
  40173a:	nop
  40173b:	nop
  40173c:	nop
  40173d:	nop
  40173e:	nop
  40173f:	nop
  401740:	xor    eax,eax
  401742:	ret    
  401743:	nop
  401744:	nop
  401745:	nop
  401746:	nop
  401747:	nop
  401748:	nop
  401749:	nop
  40174a:	nop
  40174b:	nop
  40174c:	nop
  40174d:	nop
  40174e:	nop
  40174f:	nop
  401750:	push   r12
  401752:	push   rbp
  401753:	push   rdi
  401754:	push   rsi
  401755:	push   rbx
  401756:	sub    rsp,0x40
  40175a:	mov    rbx,QWORD PTR [rip+0x34ff]        # 0x404c60
  401761:	movabs rax,0x2b992ddfa232
  40176b:	mov    QWORD PTR [rsp+0x20],0x0
  401774:	cmp    rbx,rax
  401777:	je     0x401790
  401779:	not    rbx
  40177c:	mov    QWORD PTR [rip+0x34ed],rbx        # 0x404c70
  401783:	add    rsp,0x40
  401787:	pop    rbx
  401788:	pop    rsi
  401789:	pop    rdi
  40178a:	pop    rbp
  40178b:	pop    r12
  40178d:	ret    
  40178e:	xchg   ax,ax
  401790:	lea    rcx,[rsp+0x20]
  401795:	call   QWORD PTR [rip+0x7ba5]        # 0x409340
  40179b:	mov    r12,QWORD PTR [rsp+0x20]
  4017a0:	call   QWORD PTR [rip+0x7b7a]        # 0x409320
  4017a6:	mov    ebp,eax
  4017a8:	call   QWORD PTR [rip+0x7b7a]        # 0x409328
  4017ae:	mov    edi,eax
  4017b0:	call   QWORD PTR [rip+0x7b92]        # 0x409348
  4017b6:	lea    rcx,[rsp+0x30]
  4017bb:	mov    esi,eax
  4017bd:	call   QWORD PTR [rip+0x7b9d]        # 0x409360
  4017c3:	xor    r12,QWORD PTR [rsp+0x30]
  4017c8:	mov    edx,edi
  4017ca:	movabs rax,0xffffffffffff
  4017d4:	xor    rbp,r12
  4017d7:	mov    rdi,rbp
  4017da:	xor    rdi,rdx
  4017dd:	mov    edx,esi
  4017df:	xor    rdi,rdx
  4017e2:	mov    rsi,rdi
  4017e5:	and    rsi,rax
  4017e8:	cmp    rsi,rbx
  4017eb:	je     0x401810
  4017ed:	mov    rax,rsi
  4017f0:	not    rax
  4017f3:	mov    QWORD PTR [rip+0x3466],rsi        # 0x404c60
  4017fa:	mov    QWORD PTR [rip+0x346f],rax        # 0x404c70
  401801:	add    rsp,0x40
  401805:	pop    rbx
  401806:	pop    rsi
  401807:	pop    rdi
  401808:	pop    rbp
  401809:	pop    r12
  40180b:	ret    
  40180c:	nop    DWORD PTR [rax+0x0]
  401810:	movabs rax,0xffffd466d2205dcc
  40181a:	movabs rsi,0x2b992ddfa233
  401824:	jmp    0x4017f3
  401826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401830:	push   rbp
  401831:	push   rsi
  401832:	push   rbx
  401833:	mov    rbp,rsp
  401836:	sub    rsp,0x70
  40183a:	mov    rsi,rcx
  40183d:	lea    rcx,[rip+0x683c]        # 0x408080
  401844:	call   QWORD PTR [rip+0x7b26]        # 0x409370
  40184a:	mov    rbx,QWORD PTR [rip+0x6927]        # 0x408178
  401851:	xor    r8d,r8d
  401854:	lea    rdx,[rbp-0x28]
  401858:	mov    rcx,rbx
  40185b:	call   QWORD PTR [rip+0x7b17]        # 0x409378
  401861:	test   rax,rax
  401864:	mov    r9,rax
  401867:	je     0x401910
  40186d:	lea    rax,[rbp-0x20]
  401871:	mov    QWORD PTR [rsp+0x38],0x0
  40187a:	mov    r8,rbx
  40187d:	mov    rdx,QWORD PTR [rbp-0x28]
  401881:	xor    ecx,ecx
  401883:	mov    QWORD PTR [rsp+0x30],rax
  401888:	lea    rax,[rbp-0x18]
  40188c:	mov    QWORD PTR [rsp+0x28],rax
  401891:	lea    rax,[rip+0x67e8]        # 0x408080
  401898:	mov    QWORD PTR [rsp+0x20],rax
  40189d:	call   QWORD PTR [rip+0x7add]        # 0x409380
  4018a3:	mov    rax,QWORD PTR [rip+0x68ce]        # 0x408178
  4018aa:	xor    ecx,ecx
  4018ac:	mov    QWORD PTR [rip+0x684d],rsi        # 0x408100
  4018b3:	mov    DWORD PTR [rip+0x6cc3],0xc0000409        # 0x408580
  4018bd:	mov    DWORD PTR [rip+0x6cbd],0x1        # 0x408584
  4018c7:	mov    QWORD PTR [rip+0x6cc2],rax        # 0x408590
  4018ce:	mov    rax,QWORD PTR [rip+0x338b]        # 0x404c60
  4018d5:	mov    QWORD PTR [rbp-0x10],rax
  4018d9:	mov    rax,QWORD PTR [rip+0x3390]        # 0x404c70
  4018e0:	mov    QWORD PTR [rbp-0x8],rax
  4018e4:	call   QWORD PTR [rip+0x7a9e]        # 0x409388
  4018ea:	lea    rcx,[rip+0x37ff]        # 0x4050f0
  4018f1:	call   QWORD PTR [rip+0x7ab1]        # 0x4093a8
  4018f7:	call   QWORD PTR [rip+0x7a1b]        # 0x409318
  4018fd:	mov    edx,0xc0000409
  401902:	mov    rcx,rax
  401905:	call   QWORD PTR [rip+0x7a8d]        # 0x409398
  40190b:	call   0x402b60
  401910:	mov    rax,QWORD PTR [rbp+0x18]
  401914:	mov    QWORD PTR [rip+0x685d],rax        # 0x408178
  40191b:	lea    rax,[rbp+0x8]
  40191f:	mov    QWORD PTR [rip+0x67f2],rax        # 0x408118
  401926:	jmp    0x4018a3
  40192b:	nop
  40192c:	nop
  40192d:	nop
  40192e:	nop
  40192f:	nop
  401930:	sub    rsp,0x28
  401934:	test   edx,edx
  401936:	je     0x401950
  401938:	cmp    edx,0x3
  40193b:	je     0x401950
  40193d:	mov    eax,0x1
  401942:	add    rsp,0x28
  401946:	ret    
  401947:	nop    WORD PTR [rax+rax*1+0x0]
  401950:	call   0x402640
  401955:	mov    eax,0x1
  40195a:	add    rsp,0x28
  40195e:	ret    
  40195f:	nop
  401960:	push   rsi
  401961:	push   rbx
  401962:	sub    rsp,0x28
  401966:	mov    rax,QWORD PTR [rip+0x3a13]        # 0x405380
  40196d:	cmp    DWORD PTR [rax],0x2
  401970:	je     0x401978
  401972:	mov    DWORD PTR [rax],0x2
  401978:	cmp    edx,0x2
  40197b:	je     0x401990
  40197d:	cmp    edx,0x1
  401980:	je     0x4019c2
  401982:	mov    eax,0x1
  401987:	add    rsp,0x28
  40198b:	pop    rbx
  40198c:	pop    rsi
  40198d:	ret    
  40198e:	xchg   ax,ax
  401990:	lea    rbx,[rip+0x86c9]        # 0x40a060
  401997:	lea    rsi,[rip+0x86c2]        # 0x40a060
  40199e:	cmp    rbx,rsi
  4019a1:	je     0x401982
  4019a3:	mov    rax,QWORD PTR [rbx]
  4019a6:	test   rax,rax
  4019a9:	je     0x4019ad
  4019ab:	call   rax
  4019ad:	add    rbx,0x8
  4019b1:	cmp    rbx,rsi
  4019b4:	jne    0x4019a3
  4019b6:	mov    eax,0x1
  4019bb:	add    rsp,0x28
  4019bf:	pop    rbx
  4019c0:	pop    rsi
  4019c1:	ret    
  4019c2:	call   0x402640
  4019c7:	jmp    0x401982
  4019c9:	nop    DWORD PTR [rax+0x0]
  4019d0:	xor    eax,eax
  4019d2:	ret    
  4019d3:	nop
  4019d4:	nop
  4019d5:	nop
  4019d6:	nop
  4019d7:	nop
  4019d8:	nop
  4019d9:	nop
  4019da:	nop
  4019db:	nop
  4019dc:	nop
  4019dd:	nop
  4019de:	nop
  4019df:	nop
  4019e0:	sub    rsp,0x58
  4019e4:	mov    rax,QWORD PTR [rip+0x6c75]        # 0x408660
  4019eb:	test   rax,rax
  4019ee:	je     0x401a1c
  4019f0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4019f9:	mov    DWORD PTR [rsp+0x20],ecx
  4019fd:	lea    rcx,[rsp+0x20]
  401a02:	mov    QWORD PTR [rsp+0x28],rdx
  401a07:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a0d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a13:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a19:	call   rax
  401a1b:	nop
  401a1c:	add    rsp,0x58
  401a20:	ret    
  401a21:	nop    DWORD PTR [rax+rax*1+0x0]
  401a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a30:	mov    QWORD PTR [rip+0x6c29],rcx        # 0x408660
  401a37:	jmp    0x402ba0
  401a3c:	nop    DWORD PTR [rax+0x0]
  401a40:	push   rsi
  401a41:	push   rbx
  401a42:	sub    rsp,0x78
  401a46:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a4b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a50:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a56:	cmp    DWORD PTR [rcx],0x6
  401a59:	ja     0x401b30
  401a5f:	mov    edx,DWORD PTR [rcx]
  401a61:	lea    rax,[rip+0x37cc]        # 0x405234
  401a68:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401a6c:	add    rax,rdx
  401a6f:	jmp    rax
  401a71:	lea    rbx,[rip+0x3698]        # 0x405110
  401a78:	nop    DWORD PTR [rax+rax*1+0x0]
  401a80:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401a86:	mov    rsi,QWORD PTR [rcx+0x8]
  401a8a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401a8f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401a94:	call   0x402bb8
  401a99:	movsd  QWORD PTR [rsp+0x30],xmm8
  401aa0:	lea    rcx,[rax+0x60]
  401aa4:	lea    rdx,[rip+0x375d]        # 0x405208
  401aab:	movsd  QWORD PTR [rsp+0x28],xmm7
  401ab1:	mov    r9,rsi
  401ab4:	mov    r8,rbx
  401ab7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401abd:	call   0x402b48
  401ac2:	nop
  401ac3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401ac8:	xor    eax,eax
  401aca:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401acf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ad5:	add    rsp,0x78
  401ad9:	pop    rbx
  401ada:	pop    rsi
  401adb:	ret    
  401adc:	nop    DWORD PTR [rax+0x0]
  401ae0:	lea    rbx,[rip+0x3648]        # 0x40512f
  401ae7:	jmp    0x401a80
  401ae9:	nop    DWORD PTR [rax+0x0]
  401af0:	lea    rbx,[rip+0x3659]        # 0x405150
  401af7:	jmp    0x401a80
  401af9:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rbx,[rip+0x36b9]        # 0x4051c0
  401b07:	jmp    0x401a80
  401b0c:	nop    DWORD PTR [rax+0x0]
  401b10:	lea    rbx,[rip+0x3681]        # 0x405198
  401b17:	jmp    0x401a80
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x3649]        # 0x405170
  401b27:	jmp    0x401a80
  401b2c:	nop    DWORD PTR [rax+0x0]
  401b30:	lea    rbx,[rip+0x36bf]        # 0x4051f6
  401b37:	jmp    0x401a80
  401b3c:	nop
  401b3d:	nop
  401b3e:	nop
  401b3f:	nop
  401b40:	fninit 
  401b42:	ret    
  401b43:	nop
  401b44:	nop
  401b45:	nop
  401b46:	nop
  401b47:	nop
  401b48:	nop
  401b49:	nop
  401b4a:	nop
  401b4b:	nop
  401b4c:	nop
  401b4d:	nop
  401b4e:	nop
  401b4f:	nop
  401b50:	mov    rax,rcx
  401b53:	ret    
  401b54:	xchg   ax,ax
  401b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b60:	mov    rax,rcx
  401b63:	ret    
  401b64:	nop
  401b65:	nop
  401b66:	nop
  401b67:	nop
  401b68:	nop
  401b69:	nop
  401b6a:	nop
  401b6b:	nop
  401b6c:	nop
  401b6d:	nop
  401b6e:	nop
  401b6f:	nop
  401b70:	push   rsi
  401b71:	push   rbx
  401b72:	sub    rsp,0x38
  401b76:	lea    rax,[rsp+0x58]
  401b7b:	mov    rbx,rcx
  401b7e:	mov    QWORD PTR [rsp+0x58],rdx
  401b83:	mov    QWORD PTR [rsp+0x60],r8
  401b88:	mov    QWORD PTR [rsp+0x68],r9
  401b8d:	mov    QWORD PTR [rsp+0x28],rax
  401b92:	call   0x402bb8
  401b97:	lea    rcx,[rip+0x36b2]        # 0x405250
  401b9e:	lea    r9,[rax+0x60]
  401ba2:	mov    r8d,0x1b
  401ba8:	mov    edx,0x1
  401bad:	call   0x402b38
  401bb2:	mov    rsi,QWORD PTR [rsp+0x28]
  401bb7:	call   0x402bb8
  401bbc:	lea    rcx,[rax+0x60]
  401bc0:	mov    rdx,rbx
  401bc3:	mov    r8,rsi
  401bc6:	call   0x402b08
  401bcb:	call   0x402b60
  401bd0:	nop
  401bd1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401be0:	push   r13
  401be2:	push   r12
  401be4:	push   rbp
  401be5:	push   rdi
  401be6:	push   rsi
  401be7:	push   rbx
  401be8:	sub    rsp,0x58
  401bec:	movsxd rbp,DWORD PTR [rip+0x6a91]        # 0x408684
  401bf3:	mov    rbx,rcx
  401bf6:	mov    rsi,rdx
  401bf9:	mov    rdi,r8
  401bfc:	test   ebp,ebp
  401bfe:	jle    0x401cfa
  401c04:	mov    rax,QWORD PTR [rip+0x6a7d]        # 0x408688
  401c0b:	xor    r9d,r9d
  401c0e:	add    rax,0x8
  401c12:	mov    r10,QWORD PTR [rax]
  401c15:	cmp    rbx,r10
  401c18:	jb     0x401c2e
  401c1a:	mov    rdx,QWORD PTR [rax+0x8]
  401c1e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c22:	add    r10,r11
  401c25:	cmp    rbx,r10
  401c28:	jb     0x401ce0
  401c2e:	add    r9d,0x1
  401c32:	add    rax,0x18
  401c36:	cmp    r9d,ebp
  401c39:	jne    0x401c12
  401c3b:	mov    rcx,rbx
  401c3e:	call   0x402850
  401c43:	test   rax,rax
  401c46:	mov    r12,rax
  401c49:	je     0x401d32
  401c4f:	lea    rbp,[rbp+rbp*2+0x0]
  401c54:	shl    rbp,0x3
  401c58:	mov    r13,rbp
  401c5b:	add    r13,QWORD PTR [rip+0x6a26]        # 0x408688
  401c62:	mov    QWORD PTR [r13+0x10],rax
  401c66:	mov    DWORD PTR [r13+0x0],0x0
  401c6e:	call   0x402970
  401c73:	mov    edx,DWORD PTR [r12+0xc]
  401c78:	mov    r8d,0x30
  401c7e:	add    rax,rdx
  401c81:	lea    rdx,[rsp+0x20]
  401c86:	mov    QWORD PTR [r13+0x8],rax
  401c8a:	mov    rax,QWORD PTR [rip+0x69f7]        # 0x408688
  401c91:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401c96:	call   QWORD PTR [rip+0x771c]        # 0x4093b8
  401c9c:	test   rax,rax
  401c9f:	je     0x401d15
  401ca1:	mov    eax,DWORD PTR [rsp+0x44]
  401ca5:	lea    edx,[rax-0x4]
  401ca8:	and    edx,0xfffffffb
  401cab:	je     0x401cd9
  401cad:	sub    eax,0x40
  401cb0:	and    eax,0xffffffbf
  401cb3:	je     0x401cd9
  401cb5:	mov    r9,rbp
  401cb8:	add    r9,QWORD PTR [rip+0x69c9]        # 0x408688
  401cbf:	mov    r8d,0x40
  401cc5:	mov    rdx,QWORD PTR [rsp+0x38]
  401cca:	mov    rcx,QWORD PTR [rsp+0x20]
  401ccf:	call   QWORD PTR [rip+0x76db]        # 0x4093b0
  401cd5:	test   eax,eax
  401cd7:	je     0x401d01
  401cd9:	add    DWORD PTR [rip+0x69a4],0x1        # 0x408684
  401ce0:	mov    r8,rdi
  401ce3:	mov    rdx,rsi
  401ce6:	mov    rcx,rbx
  401ce9:	add    rsp,0x58
  401ced:	pop    rbx
  401cee:	pop    rsi
  401cef:	pop    rdi
  401cf0:	pop    rbp
  401cf1:	pop    r12
  401cf3:	pop    r13
  401cf5:	jmp    0x402b28
  401cfa:	xor    ebp,ebp
  401cfc:	jmp    0x401c3b
  401d01:	call   QWORD PTR [rip+0x7629]        # 0x409330
  401d07:	lea    rcx,[rip+0x35ba]        # 0x4052c8
  401d0e:	mov    edx,eax
  401d10:	call   0x401b70
  401d15:	mov    rax,QWORD PTR [rip+0x696c]        # 0x408688
  401d1c:	mov    edx,DWORD PTR [r12+0x8]
  401d21:	lea    rcx,[rip+0x3568]        # 0x405290
  401d28:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d2d:	call   0x401b70
  401d32:	lea    rcx,[rip+0x3537]        # 0x405270
  401d39:	mov    rdx,rbx
  401d3c:	call   0x401b70
  401d41:	nop
  401d42:	nop    DWORD PTR [rax+0x0]
  401d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d50:	push   rbp
  401d51:	push   r14
  401d53:	push   r13
  401d55:	push   r12
  401d57:	push   rdi
  401d58:	push   rsi
  401d59:	push   rbx
  401d5a:	mov    rbp,rsp
  401d5d:	sub    rsp,0x60
  401d61:	mov    ebx,DWORD PTR [rip+0x6919]        # 0x408680
  401d67:	test   ebx,ebx
  401d69:	je     0x401d80
  401d6b:	mov    rsp,rbp
  401d6e:	pop    rbx
  401d6f:	pop    rsi
  401d70:	pop    rdi
  401d71:	pop    r12
  401d73:	pop    r13
  401d75:	pop    r14
  401d77:	pop    rbp
  401d78:	ret    
  401d79:	nop    DWORD PTR [rax+0x0]
  401d80:	mov    DWORD PTR [rip+0x68f6],0x1        # 0x408680
  401d8a:	call   0x4028a0
  401d8f:	cdqe   
  401d91:	lea    rax,[rax+rax*2]
  401d95:	lea    rax,[rax*8+0x1e]
  401d9d:	and    rax,0xfffffffffffffff0
  401da1:	call   0x402ac0
  401da6:	mov    rsi,QWORD PTR [rip+0x3603]        # 0x4053b0
  401dad:	mov    rbx,QWORD PTR [rip+0x360c]        # 0x4053c0
  401db4:	sub    rsp,rax
  401db7:	mov    DWORD PTR [rip+0x68c3],0x0        # 0x408684
  401dc1:	lea    rax,[rsp+0x20]
  401dc6:	mov    QWORD PTR [rip+0x68bb],rax        # 0x408688
  401dcd:	mov    rax,rsi
  401dd0:	sub    rax,rbx
  401dd3:	cmp    rax,0x7
  401dd7:	jle    0x401d6b
  401dd9:	cmp    rax,0xb
  401ddd:	jle    0x401e05
  401ddf:	mov    r11d,DWORD PTR [rbx]
  401de2:	test   r11d,r11d
  401de5:	jne    0x401f30
  401deb:	mov    r10d,DWORD PTR [rbx+0x4]
  401def:	test   r10d,r10d
  401df2:	jne    0x401f30
  401df8:	mov    r9d,DWORD PTR [rbx+0x8]
  401dfc:	test   r9d,r9d
  401dff:	jne    0x401e1c
  401e01:	add    rbx,0xc
  401e05:	mov    r8d,DWORD PTR [rbx]
  401e08:	test   r8d,r8d
  401e0b:	jne    0x401f30
  401e11:	mov    ecx,DWORD PTR [rbx+0x4]
  401e14:	test   ecx,ecx
  401e16:	jne    0x401f30
  401e1c:	mov    edx,DWORD PTR [rbx+0x8]
  401e1f:	cmp    edx,0x1
  401e22:	jne    0x40203c
  401e28:	add    rbx,0xc
  401e2c:	cmp    rbx,rsi
  401e2f:	jae    0x401d6b
  401e35:	mov    r12,QWORD PTR [rip+0x35a4]        # 0x4053e0
  401e3c:	lea    r13,[rbp-0x30]
  401e40:	movabs r14,0xffffffff00000000
  401e4a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e4d:	mov    eax,DWORD PTR [rbx]
  401e4f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e53:	add    rax,r12
  401e56:	add    rcx,r12
  401e59:	cmp    edx,0x10
  401e5c:	mov    r8,QWORD PTR [rax]
  401e5f:	je     0x401fa6
  401e65:	jbe    0x401f6d
  401e6b:	cmp    edx,0x20
  401e6e:	je     0x401fef
  401e74:	cmp    edx,0x40
  401e77:	jne    0x401fdb
  401e7d:	sub    r8,rax
  401e80:	mov    rdx,r13
  401e83:	mov    rdi,r13
  401e86:	mov    rax,r8
  401e89:	add    rax,QWORD PTR [rcx]
  401e8c:	mov    r8d,0x8
  401e92:	mov    QWORD PTR [rbp-0x30],rax
  401e96:	call   0x401be0
  401e9b:	add    rbx,0xc
  401e9f:	cmp    rbx,rsi
  401ea2:	jb     0x401e4a
  401ea4:	mov    eax,DWORD PTR [rip+0x67da]        # 0x408684
  401eaa:	xor    ebx,ebx
  401eac:	xor    esi,esi
  401eae:	test   eax,eax
  401eb0:	jle    0x401d6b
  401eb6:	mov    r14,QWORD PTR [rip+0x74fb]        # 0x4093b8
  401ebd:	lea    r13,[rbp-0x34]
  401ec1:	mov    r12,QWORD PTR [rip+0x74e8]        # 0x4093b0
  401ec8:	jmp    0x401ee3
  401eca:	nop    WORD PTR [rax+rax*1+0x0]
  401ed0:	add    esi,0x1
  401ed3:	add    rbx,0x18
  401ed7:	cmp    esi,DWORD PTR [rip+0x67a7]        # 0x408684
  401edd:	jge    0x401d6b
  401ee3:	mov    rax,rbx
  401ee6:	add    rax,QWORD PTR [rip+0x679b]        # 0x408688
  401eed:	mov    edx,DWORD PTR [rax]
  401eef:	test   edx,edx
  401ef1:	je     0x401ed0
  401ef3:	mov    rcx,QWORD PTR [rax+0x8]
  401ef7:	mov    r8d,0x30
  401efd:	mov    rdx,rdi
  401f00:	call   r14
  401f03:	test   rax,rax
  401f06:	je     0x40201e
  401f0c:	mov    rax,QWORD PTR [rip+0x6775]        # 0x408688
  401f13:	mov    r9,r13
  401f16:	mov    rdx,QWORD PTR [rbp-0x18]
  401f1a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f1e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f22:	call   r12
  401f25:	jmp    0x401ed0
  401f27:	nop    WORD PTR [rax+rax*1+0x0]
  401f30:	cmp    rbx,rsi
  401f33:	jae    0x401d6b
  401f39:	mov    r12,QWORD PTR [rip+0x34a0]        # 0x4053e0
  401f40:	lea    rdi,[rbp-0x30]
  401f44:	mov    ecx,DWORD PTR [rbx+0x4]
  401f47:	mov    eax,DWORD PTR [rbx]
  401f49:	mov    r8d,0x4
  401f4f:	mov    rdx,rdi
  401f52:	add    rbx,0x8
  401f56:	add    rcx,r12
  401f59:	add    eax,DWORD PTR [rcx]
  401f5b:	mov    DWORD PTR [rbp-0x30],eax
  401f5e:	call   0x401be0
  401f63:	cmp    rbx,rsi
  401f66:	jb     0x401f44
  401f68:	jmp    0x401ea4
  401f6d:	cmp    edx,0x8
  401f70:	jne    0x401fdb
  401f72:	movzx  edx,BYTE PTR [rcx]
  401f75:	mov    rdi,r13
  401f78:	mov    r10,rdx
  401f7b:	or     r10,0xffffffffffffff00
  401f82:	test   dl,dl
  401f84:	cmovs  rdx,r10
  401f88:	sub    rdx,rax
  401f8b:	lea    rax,[r8+rdx*1]
  401f8f:	mov    r8d,0x1
  401f95:	mov    rdx,r13
  401f98:	mov    QWORD PTR [rbp-0x30],rax
  401f9c:	call   0x401be0
  401fa1:	jmp    0x401e9b
  401fa6:	movzx  edx,WORD PTR [rcx]
  401fa9:	mov    rdi,r13
  401fac:	mov    r10,rdx
  401faf:	or     r10,0xffffffffffff0000
  401fb6:	test   dx,dx
  401fb9:	cmovs  rdx,r10
  401fbd:	sub    rdx,rax
  401fc0:	lea    rax,[r8+rdx*1]
  401fc4:	mov    r8d,0x2
  401fca:	mov    rdx,r13
  401fcd:	mov    QWORD PTR [rbp-0x30],rax
  401fd1:	call   0x401be0
  401fd6:	jmp    0x401e9b
  401fdb:	lea    rcx,[rip+0x3346]        # 0x405328
  401fe2:	mov    QWORD PTR [rbp-0x30],0x0
  401fea:	call   0x401b70
  401fef:	mov    edx,DWORD PTR [rcx]
  401ff1:	mov    rdi,r13
  401ff4:	mov    r10,rdx
  401ff7:	or     r10,r14
  401ffa:	test   edx,edx
  401ffc:	cmovs  rdx,r10
  402000:	sub    rdx,rax
  402003:	lea    rax,[r8+rdx*1]
  402007:	mov    r8d,0x4
  40200d:	mov    rdx,r13
  402010:	mov    QWORD PTR [rbp-0x30],rax
  402014:	call   0x401be0
  402019:	jmp    0x401e9b
  40201e:	add    rbx,QWORD PTR [rip+0x6663]        # 0x408688
  402025:	lea    rcx,[rip+0x3264]        # 0x405290
  40202c:	mov    rax,QWORD PTR [rbx+0x10]
  402030:	mov    r8,QWORD PTR [rbx+0x8]
  402034:	mov    edx,DWORD PTR [rax+0x8]
  402037:	call   0x401b70
  40203c:	lea    rcx,[rip+0x32ad]        # 0x4052f0
  402043:	call   0x401b70
  402048:	nop
  402049:	nop
  40204a:	nop
  40204b:	nop
  40204c:	nop
  40204d:	nop
  40204e:	nop
  40204f:	nop
  402050:	sub    rsp,0x28
  402054:	mov    eax,DWORD PTR [rcx]
  402056:	cmp    eax,0xc0000091
  40205b:	ja     0x4020c0
  40205d:	cmp    eax,0xc000008d
  402062:	jae    0x4020df
  402064:	cmp    eax,0xc0000008
  402069:	je     0x402180
  40206f:	ja     0x402150
  402075:	cmp    eax,0x80000002
  40207a:	je     0x402180
  402080:	cmp    eax,0xc0000005
  402085:	jne    0x40215e
  40208b:	xor    edx,edx
  40208d:	mov    ecx,0xb
  402092:	call   0x402b20
  402097:	cmp    rax,0x1
  40209b:	je     0x4021e0
  4020a1:	test   rax,rax
  4020a4:	je     0x4021c0
  4020aa:	mov    ecx,0xb
  4020af:	call   rax
  4020b1:	xor    eax,eax
  4020b3:	add    rsp,0x28
  4020b7:	ret    
  4020b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020c0:	cmp    eax,0xc0000094
  4020c5:	je     0x402190
  4020cb:	ja     0x402110
  4020cd:	cmp    eax,0xc0000092
  4020d2:	je     0x402180
  4020d8:	cmp    eax,0xc0000093
  4020dd:	jne    0x40215e
  4020df:	xor    edx,edx
  4020e1:	mov    ecx,0x8
  4020e6:	call   0x402b20
  4020eb:	cmp    rax,0x1
  4020ef:	mov    rdx,rax
  4020f2:	je     0x402168
  4020f4:	test   rdx,rdx
  4020f7:	mov    eax,0x1
  4020fc:	je     0x4020b3
  4020fe:	mov    ecx,0x8
  402103:	call   rdx
  402105:	xor    eax,eax
  402107:	add    rsp,0x28
  40210b:	ret    
  40210c:	nop    DWORD PTR [rax+0x0]
  402110:	cmp    eax,0xc0000095
  402115:	je     0x402180
  402117:	cmp    eax,0xc0000096
  40211c:	jne    0x40215e
  40211e:	xor    edx,edx
  402120:	mov    ecx,0x4
  402125:	call   0x402b20
  40212a:	cmp    rax,0x1
  40212e:	je     0x4021ca
  402134:	test   rax,rax
  402137:	je     0x4021c0
  40213d:	mov    ecx,0x4
  402142:	call   rax
  402144:	xor    eax,eax
  402146:	jmp    0x4020b3
  40214b:	nop    DWORD PTR [rax+rax*1+0x0]
  402150:	cmp    eax,0xc000001d
  402155:	je     0x40211e
  402157:	cmp    eax,0xc000008c
  40215c:	je     0x402180
  40215e:	mov    eax,0x1
  402163:	add    rsp,0x28
  402167:	ret    
  402168:	mov    edx,0x1
  40216d:	mov    ecx,0x8
  402172:	call   0x402b20
  402177:	call   0x401b40
  40217c:	nop    DWORD PTR [rax+0x0]
  402180:	xor    eax,eax
  402182:	add    rsp,0x28
  402186:	ret    
  402187:	nop    WORD PTR [rax+rax*1+0x0]
  402190:	xor    edx,edx
  402192:	mov    ecx,0x8
  402197:	call   0x402b20
  40219c:	cmp    rax,0x1
  4021a0:	mov    rdx,rax
  4021a3:	jne    0x4020f4
  4021a9:	mov    edx,0x1
  4021ae:	mov    ecx,0x8
  4021b3:	call   0x402b20
  4021b8:	xor    eax,eax
  4021ba:	jmp    0x4020b3
  4021bf:	nop
  4021c0:	mov    eax,0x4
  4021c5:	add    rsp,0x28
  4021c9:	ret    
  4021ca:	mov    edx,0x1
  4021cf:	mov    ecx,0x4
  4021d4:	call   0x402b20
  4021d9:	xor    eax,eax
  4021db:	jmp    0x4020b3
  4021e0:	mov    edx,0x1
  4021e5:	mov    ecx,0xb
  4021ea:	call   0x402b20
  4021ef:	xor    eax,eax
  4021f1:	jmp    0x4020b3
  4021f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402200:	push   r12
  402202:	push   rbp
  402203:	push   rdi
  402204:	push   rsi
  402205:	push   rbx
  402206:	sub    rsp,0x20
  40220a:	call   0x402970
  40220f:	mov    rbp,rax
  402212:	mov    eax,DWORD PTR [rip+0x64b0]        # 0x4086c8
  402218:	test   eax,eax
  40221a:	jne    0x402241
  40221c:	test   rbp,rbp
  40221f:	je     0x402241
  402221:	lea    rcx,[rip+0x3138]        # 0x405360
  402228:	mov    DWORD PTR [rip+0x6496],0x1        # 0x4086c8
  402232:	call   0x4027b0
  402237:	test   rax,rax
  40223a:	je     0x402250
  40223c:	mov    eax,0x1
  402241:	add    rsp,0x20
  402245:	pop    rbx
  402246:	pop    rsi
  402247:	pop    rdi
  402248:	pop    rbp
  402249:	pop    r12
  40224b:	ret    
  40224c:	nop    DWORD PTR [rax+0x0]
  402250:	lea    rbx,[rip+0x65a9]        # 0x408800
  402257:	mov    ecx,0x30
  40225c:	lea    rdx,[rip+0x649d]        # 0x408700
  402263:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402050
  40226a:	xor    esi,esi
  40226c:	mov    rdi,rbx
  40226f:	rep stos QWORD PTR es:[rdi],rax
  402272:	mov    rdi,rdx
  402275:	sub    r12,rbp
  402278:	mov    cl,0x20
  40227a:	rep stos QWORD PTR es:[rdi],rax
  40227d:	mov    rdi,rdx
  402280:	jmp    0x4022b0
  402282:	mov    BYTE PTR [rdi],0x9
  402285:	mov    DWORD PTR [rdi+0x4],r12d
  402289:	add    rsi,0x1
  40228d:	mov    edx,DWORD PTR [rax+0xc]
  402290:	add    rbx,0xc
  402294:	mov    DWORD PTR [rbx-0xc],edx
  402297:	add    edx,DWORD PTR [rax+0x8]
  40229a:	mov    rax,rdi
  40229d:	sub    rax,rbp
  4022a0:	add    rdi,0x8
  4022a4:	mov    DWORD PTR [rbx-0x4],eax
  4022a7:	mov    DWORD PTR [rbx-0x8],edx
  4022aa:	cmp    rsi,0x20
  4022ae:	je     0x4022e5
  4022b0:	mov    rcx,rsi
  4022b3:	call   0x4028e0
  4022b8:	test   rax,rax
  4022bb:	jne    0x402282
  4022bd:	test   rsi,rsi
  4022c0:	je     0x40223c
  4022c6:	mov    edx,esi
  4022c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022d0:	mov    r8,rbp
  4022d3:	lea    rcx,[rip+0x6526]        # 0x408800
  4022da:	call   QWORD PTR [rip+0x7088]        # 0x409368
  4022e0:	jmp    0x40223c
  4022e5:	mov    edx,0x20
  4022ea:	jmp    0x4022d0
  4022ec:	nop    DWORD PTR [rax+0x0]
  4022f0:	push   rbx
  4022f1:	sub    rsp,0x20
  4022f5:	mov    rdx,QWORD PTR [rcx]
  4022f8:	mov    eax,DWORD PTR [rdx]
  4022fa:	mov    r8d,eax
  4022fd:	and    r8d,0x20ffffff
  402304:	cmp    r8d,0x20474343
  40230b:	je     0x402410
  402311:	cmp    eax,0xc0000091
  402316:	mov    rbx,rcx
  402319:	ja     0x4023a0
  40231f:	cmp    eax,0xc000008d
  402324:	jae    0x4023b7
  40232a:	cmp    eax,0xc0000008
  40232f:	je     0x402363
  402331:	ja     0x402370
  402333:	cmp    eax,0x80000002
  402338:	je     0x402363
  40233a:	cmp    eax,0xc0000005
  40233f:	jne    0x402382
  402341:	xor    edx,edx
  402343:	mov    ecx,0xb
  402348:	call   0x402b20
  40234d:	cmp    rax,0x1
  402351:	je     0x402480
  402357:	test   rax,rax
  40235a:	je     0x402382
  40235c:	mov    ecx,0xb
  402361:	call   rax
  402363:	mov    eax,0xffffffff
  402368:	add    rsp,0x20
  40236c:	pop    rbx
  40236d:	ret    
  40236e:	xchg   ax,ax
  402370:	cmp    eax,0xc000001d
  402375:	je     0x402436
  40237b:	cmp    eax,0xc000008c
  402380:	je     0x402363
  402382:	mov    rax,QWORD PTR [rip+0x6337]        # 0x4086c0
  402389:	test   rax,rax
  40238c:	je     0x402368
  40238e:	mov    rcx,rbx
  402391:	add    rsp,0x20
  402395:	pop    rbx
  402396:	rex.W jmp rax
  402399:	nop    DWORD PTR [rax+0x0]
  4023a0:	cmp    eax,0xc0000094
  4023a5:	je     0x4023e2
  4023a7:	ja     0x402420
  4023a9:	cmp    eax,0xc0000092
  4023ae:	je     0x402363
  4023b0:	cmp    eax,0xc0000093
  4023b5:	jne    0x402382
  4023b7:	xor    edx,edx
  4023b9:	mov    ecx,0x8
  4023be:	call   0x402b20
  4023c3:	cmp    rax,0x1
  4023c7:	jne    0x4023f4
  4023c9:	mov    edx,0x1
  4023ce:	mov    ecx,0x8
  4023d3:	call   0x402b20
  4023d8:	call   0x401b40
  4023dd:	jmp    0x402363
  4023e2:	xor    edx,edx
  4023e4:	mov    ecx,0x8
  4023e9:	call   0x402b20
  4023ee:	cmp    rax,0x1
  4023f2:	je     0x402462
  4023f4:	test   rax,rax
  4023f7:	je     0x402382
  4023f9:	mov    ecx,0x8
  4023fe:	call   rax
  402400:	mov    eax,0xffffffff
  402405:	jmp    0x402368
  40240a:	nop    WORD PTR [rax+rax*1+0x0]
  402410:	test   BYTE PTR [rdx+0x4],0x1
  402414:	jne    0x402311
  40241a:	jmp    0x402363
  40241f:	nop
  402420:	cmp    eax,0xc0000095
  402425:	je     0x402363
  40242b:	cmp    eax,0xc0000096
  402430:	jne    0x402382
  402436:	xor    edx,edx
  402438:	mov    ecx,0x4
  40243d:	call   0x402b20
  402442:	cmp    rax,0x1
  402446:	je     0x402494
  402448:	test   rax,rax
  40244b:	je     0x402382
  402451:	mov    ecx,0x4
  402456:	call   rax
  402458:	mov    eax,0xffffffff
  40245d:	jmp    0x402368
  402462:	mov    edx,0x1
  402467:	mov    ecx,0x8
  40246c:	call   0x402b20
  402471:	jmp    0x402363
  402476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402480:	mov    edx,0x1
  402485:	mov    ecx,0xb
  40248a:	call   0x402b20
  40248f:	jmp    0x402363
  402494:	mov    edx,0x1
  402499:	mov    ecx,0x4
  40249e:	call   0x402b20
  4024a3:	jmp    0x402363
  4024a8:	nop
  4024a9:	nop
  4024aa:	nop
  4024ab:	nop
  4024ac:	nop
  4024ad:	nop
  4024ae:	nop
  4024af:	nop
  4024b0:	push   rbp
  4024b1:	push   rdi
  4024b2:	push   rsi
  4024b3:	push   rbx
  4024b4:	sub    rsp,0x28
  4024b8:	lea    rcx,[rip+0x64e1]        # 0x4089a0
  4024bf:	call   QWORD PTR [rip+0x6e4b]        # 0x409310
  4024c5:	mov    rbx,QWORD PTR [rip+0x64b4]        # 0x408980
  4024cc:	test   rbx,rbx
  4024cf:	je     0x402504
  4024d1:	mov    rbp,QWORD PTR [rip+0x6ec8]        # 0x4093a0
  4024d8:	mov    rdi,QWORD PTR [rip+0x6e51]        # 0x409330
  4024df:	nop
  4024e0:	mov    ecx,DWORD PTR [rbx]
  4024e2:	call   rbp
  4024e4:	mov    rsi,rax
  4024e7:	call   rdi
  4024e9:	test   eax,eax
  4024eb:	jne    0x4024fb
  4024ed:	test   rsi,rsi
  4024f0:	je     0x4024fb
  4024f2:	mov    rax,QWORD PTR [rbx+0x8]
  4024f6:	mov    rcx,rsi
  4024f9:	call   rax
  4024fb:	mov    rbx,QWORD PTR [rbx+0x10]
  4024ff:	test   rbx,rbx
  402502:	jne    0x4024e0
  402504:	mov    rax,QWORD PTR [rip+0x6e4d]        # 0x409358
  40250b:	lea    rcx,[rip+0x648e]        # 0x4089a0
  402512:	add    rsp,0x28
  402516:	pop    rbx
  402517:	pop    rsi
  402518:	pop    rdi
  402519:	pop    rbp
  40251a:	rex.W jmp rax
  40251d:	nop    DWORD PTR [rax]
  402520:	push   rdi
  402521:	push   rsi
  402522:	push   rbx
  402523:	sub    rsp,0x20
  402527:	mov    eax,DWORD PTR [rip+0x645b]        # 0x408988
  40252d:	test   eax,eax
  40252f:	jne    0x402540
  402531:	add    rsp,0x20
  402535:	pop    rbx
  402536:	pop    rsi
  402537:	pop    rdi
  402538:	ret    
  402539:	nop    DWORD PTR [rax+0x0]
  402540:	mov    rsi,rdx
  402543:	mov    edi,ecx
  402545:	mov    edx,0x18
  40254a:	mov    ecx,0x1
  40254f:	call   0x402b58
  402554:	test   rax,rax
  402557:	mov    rbx,rax
  40255a:	je     0x402598
  40255c:	mov    DWORD PTR [rax],edi
  40255e:	mov    QWORD PTR [rax+0x8],rsi
  402562:	lea    rcx,[rip+0x6437]        # 0x4089a0
  402569:	call   QWORD PTR [rip+0x6da1]        # 0x409310
  40256f:	mov    rax,QWORD PTR [rip+0x640a]        # 0x408980
  402576:	lea    rcx,[rip+0x6423]        # 0x4089a0
  40257d:	mov    QWORD PTR [rip+0x63fc],rbx        # 0x408980
  402584:	mov    QWORD PTR [rbx+0x10],rax
  402588:	call   QWORD PTR [rip+0x6dca]        # 0x409358
  40258e:	xor    eax,eax
  402590:	add    rsp,0x20
  402594:	pop    rbx
  402595:	pop    rsi
  402596:	pop    rdi
  402597:	ret    
  402598:	mov    eax,0xffffffff
  40259d:	jmp    0x402531
  40259f:	nop
  4025a0:	push   rbx
  4025a1:	sub    rsp,0x20
  4025a5:	mov    eax,DWORD PTR [rip+0x63dd]        # 0x408988
  4025ab:	test   eax,eax
  4025ad:	jne    0x4025c0
  4025af:	xor    eax,eax
  4025b1:	add    rsp,0x20
  4025b5:	pop    rbx
  4025b6:	ret    
  4025b7:	nop    WORD PTR [rax+rax*1+0x0]
  4025c0:	mov    ebx,ecx
  4025c2:	lea    rcx,[rip+0x63d7]        # 0x4089a0
  4025c9:	call   QWORD PTR [rip+0x6d41]        # 0x409310
  4025cf:	mov    rdx,QWORD PTR [rip+0x63aa]        # 0x408980
  4025d6:	test   rdx,rdx
  4025d9:	je     0x4025f7
  4025db:	mov    eax,DWORD PTR [rdx]
  4025dd:	cmp    eax,ebx
  4025df:	jne    0x4025ee
  4025e1:	jmp    0x40262f
  4025e3:	mov    r8d,DWORD PTR [rax]
  4025e6:	cmp    r8d,ebx
  4025e9:	je     0x402610
  4025eb:	mov    rdx,rax
  4025ee:	mov    rax,QWORD PTR [rdx+0x10]
  4025f2:	test   rax,rax
  4025f5:	jne    0x4025e3
  4025f7:	lea    rcx,[rip+0x63a2]        # 0x4089a0
  4025fe:	call   QWORD PTR [rip+0x6d54]        # 0x409358
  402604:	xor    eax,eax
  402606:	add    rsp,0x20
  40260a:	pop    rbx
  40260b:	ret    
  40260c:	nop    DWORD PTR [rax+0x0]
  402610:	mov    rcx,rax
  402613:	mov    rax,QWORD PTR [rax+0x10]
  402617:	mov    QWORD PTR [rdx+0x10],rax
  40261b:	call   0x402b40
  402620:	lea    rcx,[rip+0x6379]        # 0x4089a0
  402627:	call   QWORD PTR [rip+0x6d2b]        # 0x409358
  40262d:	jmp    0x402604
  40262f:	mov    rax,QWORD PTR [rdx+0x10]
  402633:	mov    rcx,rdx
  402636:	mov    QWORD PTR [rip+0x6343],rax        # 0x408980
  40263d:	jmp    0x40261b
  40263f:	nop
  402640:	push   rbx
  402641:	sub    rsp,0x20
  402645:	cmp    edx,0x1
  402648:	je     0x4026e0
  40264e:	jb     0x402680
  402650:	cmp    edx,0x2
  402653:	je     0x402670
  402655:	cmp    edx,0x3
  402658:	jne    0x402675
  40265a:	mov    eax,DWORD PTR [rip+0x6328]        # 0x408988
  402660:	test   eax,eax
  402662:	je     0x402675
  402664:	call   0x4024b0
  402669:	jmp    0x402675
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]
  402670:	call   0x401b40
  402675:	mov    eax,0x1
  40267a:	add    rsp,0x20
  40267e:	pop    rbx
  40267f:	ret    
  402680:	mov    eax,DWORD PTR [rip+0x6302]        # 0x408988
  402686:	test   eax,eax
  402688:	jne    0x402710
  40268e:	mov    eax,DWORD PTR [rip+0x62f4]        # 0x408988
  402694:	cmp    eax,0x1
  402697:	jne    0x402675
  402699:	mov    rcx,QWORD PTR [rip+0x62e0]        # 0x408980
  4026a0:	test   rcx,rcx
  4026a3:	je     0x4026b6
  4026a5:	mov    rbx,QWORD PTR [rcx+0x10]
  4026a9:	call   0x402b40
  4026ae:	test   rbx,rbx
  4026b1:	mov    rcx,rbx
  4026b4:	jne    0x4026a5
  4026b6:	lea    rcx,[rip+0x62e3]        # 0x4089a0
  4026bd:	mov    QWORD PTR [rip+0x62b8],0x0        # 0x408980
  4026c8:	mov    DWORD PTR [rip+0x62b6],0x0        # 0x408988
  4026d2:	call   QWORD PTR [rip+0x6c30]        # 0x409308
  4026d8:	jmp    0x402675
  4026da:	nop    WORD PTR [rax+rax*1+0x0]
  4026e0:	mov    eax,DWORD PTR [rip+0x62a2]        # 0x408988
  4026e6:	test   eax,eax
  4026e8:	je     0x402700
  4026ea:	mov    eax,0x1
  4026ef:	mov    DWORD PTR [rip+0x628f],0x1        # 0x408988
  4026f9:	add    rsp,0x20
  4026fd:	pop    rbx
  4026fe:	ret    
  4026ff:	nop
  402700:	lea    rcx,[rip+0x6299]        # 0x4089a0
  402707:	call   QWORD PTR [rip+0x6c43]        # 0x409350
  40270d:	jmp    0x4026ea
  40270f:	nop
  402710:	call   0x4024b0
  402715:	jmp    0x40268e
  40271a:	nop
  40271b:	nop
  40271c:	nop
  40271d:	nop
  40271e:	nop
  40271f:	nop
  402720:	movsxd rax,DWORD PTR [rcx+0x3c]
  402724:	add    rcx,rax
  402727:	xor    eax,eax
  402729:	cmp    DWORD PTR [rcx],0x4550
  40272f:	je     0x402733
  402731:	repz ret 
  402733:	xor    eax,eax
  402735:	cmp    WORD PTR [rcx+0x18],0x20b
  40273b:	sete   al
  40273e:	ret    
  40273f:	nop
  402740:	cmp    WORD PTR [rcx],0x5a4d
  402745:	je     0x402750
  402747:	xor    eax,eax
  402749:	ret    
  40274a:	nop    WORD PTR [rax+rax*1+0x0]
  402750:	jmp    0x402720
  402752:	nop    DWORD PTR [rax+0x0]
  402756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402760:	movsxd rax,DWORD PTR [rcx+0x3c]
  402764:	add    rcx,rax
  402767:	movzx  eax,WORD PTR [rcx+0x14]
  40276b:	lea    rax,[rcx+rax*1+0x18]
  402770:	movzx  ecx,WORD PTR [rcx+0x6]
  402774:	test   ecx,ecx
  402776:	je     0x4027a1
  402778:	sub    ecx,0x1
  40277b:	lea    rcx,[rcx+rcx*4]
  40277f:	lea    r9,[rax+rcx*8+0x28]
  402784:	mov    r8d,DWORD PTR [rax+0xc]
  402788:	cmp    r8,rdx
  40278b:	mov    rcx,r8
  40278e:	ja     0x402798
  402790:	add    ecx,DWORD PTR [rax+0x8]
  402793:	cmp    rdx,rcx
  402796:	jb     0x4027a3
  402798:	add    rax,0x28
  40279c:	cmp    rax,r9
  40279f:	jne    0x402784
  4027a1:	xor    eax,eax
  4027a3:	repz ret 
  4027a5:	nop
  4027a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027b0:	push   rdi
  4027b1:	push   rsi
  4027b2:	push   rbx
  4027b3:	sub    rsp,0x20
  4027b7:	mov    rsi,rcx
  4027ba:	call   0x402b18
  4027bf:	cmp    rax,0x8
  4027c3:	ja     0x4027e0
  4027c5:	mov    rbx,QWORD PTR [rip+0x2c14]        # 0x4053e0
  4027cc:	xor    edi,edi
  4027ce:	cmp    WORD PTR [rbx],0x5a4d
  4027d3:	je     0x4027f0
  4027d5:	mov    rax,rdi
  4027d8:	add    rsp,0x20
  4027dc:	pop    rbx
  4027dd:	pop    rsi
  4027de:	pop    rdi
  4027df:	ret    
  4027e0:	xor    edi,edi
  4027e2:	mov    rax,rdi
  4027e5:	add    rsp,0x20
  4027e9:	pop    rbx
  4027ea:	pop    rsi
  4027eb:	pop    rdi
  4027ec:	ret    
  4027ed:	nop    DWORD PTR [rax]
  4027f0:	mov    rcx,rbx
  4027f3:	call   0x402720
  4027f8:	test   eax,eax
  4027fa:	je     0x4027d5
  4027fc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402800:	add    rdx,rbx
  402803:	movzx  eax,WORD PTR [rdx+0x14]
  402807:	lea    rbx,[rdx+rax*1+0x18]
  40280c:	movzx  eax,WORD PTR [rdx+0x6]
  402810:	test   eax,eax
  402812:	je     0x4027d5
  402814:	sub    eax,0x1
  402817:	lea    rax,[rax+rax*4]
  40281b:	lea    rdi,[rbx+rax*8+0x28]
  402820:	jmp    0x40282b
  402822:	add    rbx,0x28
  402826:	cmp    rbx,rdi
  402829:	je     0x4027e0
  40282b:	mov    r8d,0x8
  402831:	mov    rdx,rsi
  402834:	mov    rcx,rbx
  402837:	call   0x402b10
  40283c:	test   eax,eax
  40283e:	jne    0x402822
  402840:	mov    rdi,rbx
  402843:	mov    rax,rdi
  402846:	add    rsp,0x20
  40284a:	pop    rbx
  40284b:	pop    rsi
  40284c:	pop    rdi
  40284d:	ret    
  40284e:	xchg   ax,ax
  402850:	push   rsi
  402851:	push   rbx
  402852:	sub    rsp,0x28
  402856:	mov    rbx,QWORD PTR [rip+0x2b83]        # 0x4053e0
  40285d:	cmp    WORD PTR [rbx],0x5a4d
  402862:	je     0x402870
  402864:	xor    eax,eax
  402866:	add    rsp,0x28
  40286a:	pop    rbx
  40286b:	pop    rsi
  40286c:	ret    
  40286d:	nop    DWORD PTR [rax]
  402870:	mov    rsi,rcx
  402873:	mov    rcx,rbx
  402876:	call   0x402720
  40287b:	test   eax,eax
  40287d:	je     0x402864
  40287f:	sub    rsi,rbx
  402882:	mov    rcx,rbx
  402885:	mov    rdx,rsi
  402888:	add    rsp,0x28
  40288c:	pop    rbx
  40288d:	pop    rsi
  40288e:	jmp    0x402760
  402893:	nop    DWORD PTR [rax]
  402896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028a0:	push   rbx
  4028a1:	sub    rsp,0x20
  4028a5:	mov    rbx,QWORD PTR [rip+0x2b34]        # 0x4053e0
  4028ac:	xor    eax,eax
  4028ae:	cmp    WORD PTR [rbx],0x5a4d
  4028b3:	je     0x4028c0
  4028b5:	add    rsp,0x20
  4028b9:	pop    rbx
  4028ba:	ret    
  4028bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028c0:	mov    rcx,rbx
  4028c3:	call   0x402720
  4028c8:	test   eax,eax
  4028ca:	je     0x4028b5
  4028cc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4028d0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4028d5:	add    rsp,0x20
  4028d9:	pop    rbx
  4028da:	ret    
  4028db:	nop    DWORD PTR [rax+rax*1+0x0]
  4028e0:	push   rdi
  4028e1:	push   rsi
  4028e2:	push   rbx
  4028e3:	sub    rsp,0x20
  4028e7:	mov    rsi,QWORD PTR [rip+0x2af2]        # 0x4053e0
  4028ee:	xor    edi,edi
  4028f0:	mov    rbx,rcx
  4028f3:	cmp    WORD PTR [rsi],0x5a4d
  4028f8:	je     0x402905
  4028fa:	mov    rax,rdi
  4028fd:	add    rsp,0x20
  402901:	pop    rbx
  402902:	pop    rsi
  402903:	pop    rdi
  402904:	ret    
  402905:	mov    rcx,rsi
  402908:	call   0x402720
  40290d:	test   eax,eax
  40290f:	je     0x4028fa
  402911:	movsxd rax,DWORD PTR [rsi+0x3c]
  402915:	add    rsi,rax
  402918:	movzx  eax,WORD PTR [rsi+0x14]
  40291c:	lea    rdx,[rsi+rax*1+0x18]
  402921:	movzx  eax,WORD PTR [rsi+0x6]
  402925:	test   eax,eax
  402927:	je     0x4028fa
  402929:	sub    eax,0x1
  40292c:	lea    rax,[rax+rax*4]
  402930:	lea    rax,[rdx+rax*8+0x28]
  402935:	test   BYTE PTR [rdx+0x27],0x20
  402939:	je     0x402944
  40293b:	test   rbx,rbx
  40293e:	je     0x402960
  402940:	sub    rbx,0x1
  402944:	add    rdx,0x28
  402948:	cmp    rdx,rax
  40294b:	jne    0x402935
  40294d:	xor    edi,edi
  40294f:	mov    rax,rdi
  402952:	add    rsp,0x20
  402956:	pop    rbx
  402957:	pop    rsi
  402958:	pop    rdi
  402959:	ret    
  40295a:	nop    WORD PTR [rax+rax*1+0x0]
  402960:	mov    rdi,rdx
  402963:	mov    rax,rdi
  402966:	add    rsp,0x20
  40296a:	pop    rbx
  40296b:	pop    rsi
  40296c:	pop    rdi
  40296d:	ret    
  40296e:	xchg   ax,ax
  402970:	push   rsi
  402971:	push   rbx
  402972:	sub    rsp,0x28
  402976:	mov    rsi,QWORD PTR [rip+0x2a63]        # 0x4053e0
  40297d:	xor    ebx,ebx
  40297f:	cmp    WORD PTR [rsi],0x5a4d
  402984:	je     0x402990
  402986:	mov    rax,rbx
  402989:	add    rsp,0x28
  40298d:	pop    rbx
  40298e:	pop    rsi
  40298f:	ret    
  402990:	mov    rcx,rsi
  402993:	call   0x402720
  402998:	test   eax,eax
  40299a:	cmovne rbx,rsi
  40299e:	mov    rax,rbx
  4029a1:	add    rsp,0x28
  4029a5:	pop    rbx
  4029a6:	pop    rsi
  4029a7:	ret    
  4029a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029b0:	push   rsi
  4029b1:	push   rbx
  4029b2:	sub    rsp,0x28
  4029b6:	mov    rbx,QWORD PTR [rip+0x2a23]        # 0x4053e0
  4029bd:	xor    eax,eax
  4029bf:	cmp    WORD PTR [rbx],0x5a4d
  4029c4:	je     0x4029d0
  4029c6:	add    rsp,0x28
  4029ca:	pop    rbx
  4029cb:	pop    rsi
  4029cc:	ret    
  4029cd:	nop    DWORD PTR [rax]
  4029d0:	mov    rsi,rcx
  4029d3:	mov    rcx,rbx
  4029d6:	call   0x402720
  4029db:	test   eax,eax
  4029dd:	je     0x4029c6
  4029df:	sub    rsi,rbx
  4029e2:	mov    rcx,rbx
  4029e5:	mov    rdx,rsi
  4029e8:	call   0x402760
  4029ed:	test   rax,rax
  4029f0:	je     0x402a01
  4029f2:	mov    eax,DWORD PTR [rax+0x24]
  4029f5:	not    eax
  4029f7:	shr    eax,0x1f
  4029fa:	add    rsp,0x28
  4029fe:	pop    rbx
  4029ff:	pop    rsi
  402a00:	ret    
  402a01:	xor    eax,eax
  402a03:	jmp    0x4029c6
  402a05:	nop
  402a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a10:	push   rbp
  402a11:	push   rdi
  402a12:	push   rsi
  402a13:	push   rbx
  402a14:	sub    rsp,0x28
  402a18:	mov    rdi,QWORD PTR [rip+0x29c1]        # 0x4053e0
  402a1f:	xor    ebp,ebp
  402a21:	mov    esi,ecx
  402a23:	cmp    WORD PTR [rdi],0x5a4d
  402a28:	je     0x402a40
  402a2a:	mov    rax,rbp
  402a2d:	add    rsp,0x28
  402a31:	pop    rbx
  402a32:	pop    rsi
  402a33:	pop    rdi
  402a34:	pop    rbp
  402a35:	ret    
  402a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a40:	mov    rcx,rdi
  402a43:	call   0x402720
  402a48:	test   eax,eax
  402a4a:	je     0x402a2a
  402a4c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a50:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a57:	test   edx,edx
  402a59:	je     0x402a2a
  402a5b:	mov    ebx,edx
  402a5d:	mov    rcx,rdi
  402a60:	mov    rdx,rbx
  402a63:	call   0x402760
  402a68:	test   rax,rax
  402a6b:	je     0x402a2a
  402a6d:	add    rbx,rdi
  402a70:	mov    rdx,rbx
  402a73:	jne    0x402a87
  402a75:	jmp    0x402a2a
  402a77:	nop    WORD PTR [rax+rax*1+0x0]
  402a80:	sub    esi,0x1
  402a83:	add    rdx,0x14
  402a87:	mov    ecx,DWORD PTR [rdx+0x4]
  402a8a:	test   ecx,ecx
  402a8c:	jne    0x402a95
  402a8e:	mov    eax,DWORD PTR [rdx+0xc]
  402a91:	test   eax,eax
  402a93:	je     0x402ab0
  402a95:	test   esi,esi
  402a97:	jg     0x402a80
  402a99:	mov    ebp,DWORD PTR [rdx+0xc]
  402a9c:	add    rbp,rdi
  402a9f:	mov    rax,rbp
  402aa2:	add    rsp,0x28
  402aa6:	pop    rbx
  402aa7:	pop    rsi
  402aa8:	pop    rdi
  402aa9:	pop    rbp
  402aaa:	ret    
  402aab:	nop    DWORD PTR [rax+rax*1+0x0]
  402ab0:	xor    ebp,ebp
  402ab2:	mov    rax,rbp
  402ab5:	add    rsp,0x28
  402ab9:	pop    rbx
  402aba:	pop    rsi
  402abb:	pop    rdi
  402abc:	pop    rbp
  402abd:	ret    
  402abe:	nop
  402abf:	nop
  402ac0:	push   rcx
  402ac1:	push   rax
  402ac2:	cmp    rax,0x1000
  402ac8:	lea    rcx,[rsp+0x18]
  402acd:	jb     0x402ae8
  402acf:	sub    rcx,0x1000
  402ad6:	or     QWORD PTR [rcx],0x0
  402ada:	sub    rax,0x1000
  402ae0:	cmp    rax,0x1000
  402ae6:	ja     0x402acf
  402ae8:	sub    rcx,rax
  402aeb:	or     QWORD PTR [rcx],0x0
  402aef:	pop    rax
  402af0:	pop    rcx
  402af1:	ret    
  402af2:	nop
  402af3:	nop
  402af4:	nop
  402af5:	nop
  402af6:	nop
  402af7:	nop
  402af8:	nop
  402af9:	nop
  402afa:	nop
  402afb:	nop
  402afc:	nop
  402afd:	nop
  402afe:	nop
  402aff:	nop
  402b00:	jmp    QWORD PTR [rip+0x69aa]        # 0x4094b0
  402b06:	nop
  402b07:	nop
  402b08:	jmp    QWORD PTR [rip+0x699a]        # 0x4094a8
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x698a]        # 0x4094a0
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x697a]        # 0x409498
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x696a]        # 0x409490
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x695a]        # 0x409488
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x694a]        # 0x409480
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x693a]        # 0x409478
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x692a]        # 0x409470
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x691a]        # 0x409468
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x690a]        # 0x409460
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x68fa]        # 0x409458
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x68ea]        # 0x409450
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x68da]        # 0x409448
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x68ca]        # 0x409440
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x68ba]        # 0x409438
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x68aa]        # 0x409430
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x689a]        # 0x409428
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x6882]        # 0x409418
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x6872]        # 0x409410
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x685a]        # 0x409400
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x684a]        # 0x4093f8
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x683a]        # 0x4093f0
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x682a]        # 0x4093e8
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x6812]        # 0x4093d8
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0x6802]        # 0x4093d0
  402bce:	nop
  402bcf:	nop
  402bd0:	jmp    QWORD PTR [rip+0x67f2]        # 0x4093c8
  402bd6:	nop
  402bd7:	nop
  402bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402be0:	mov    rax,QWORD PTR [rip+0x5e09]        # 0x4089f0
  402be7:	ret    
  402be8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	mov    rax,rcx
  402bf3:	xchg   QWORD PTR [rip+0x5df6],rax        # 0x4089f0
  402bfa:	ret    
  402bfb:	nop
  402bfc:	nop
  402bfd:	nop
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x67b2]        # 0x4093b8
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x67a2]        # 0x4093b0
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x6792]        # 0x4093a8
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x6782]        # 0x4093a0
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x6772]        # 0x409398
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x6762]        # 0x409390
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x6752]        # 0x409388
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x6742]        # 0x409380
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x6732]        # 0x409378
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x6722]        # 0x409370
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x6712]        # 0x409368
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x6702]        # 0x409360
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x66f2]        # 0x409358
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x66e2]        # 0x409350
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x66d2]        # 0x409348
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x66c2]        # 0x409340
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x66b2]        # 0x409338
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x66a2]        # 0x409330
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x6692]        # 0x409328
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x6682]        # 0x409320
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x6672]        # 0x409318
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0x6662]        # 0x409310
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0x6652]        # 0x409308
  402cb6:	nop
  402cb7:	nop
  402cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cc0:	push   rbp
  402cc1:	push   r13
  402cc3:	push   r12
  402cc5:	push   rdi
  402cc6:	push   rsi
  402cc7:	push   rbx
  402cc8:	mov    rbp,rsp
  402ccb:	sub    rsp,0x68
  402ccf:	mov    r12d,ecx
  402cd2:	mov    r13,rdx
  402cd5:	call   0x401710
  402cda:	cmp    r12d,0x1
  402cde:	je     0x402f65
  402ce4:	jle    0x402cfd
  402ce6:	mov    rdx,QWORD PTR [r13+0x8]
  402cea:	movzx  eax,BYTE PTR [rdx]
  402ced:	cmp    al,0x2d
  402cef:	je     0x402f06
  402cf5:	cmp    al,0x2e
  402cf7:	je     0x402daf
  402cfd:	mov    rdi,QWORD PTR [rip+0x66e4]        # 0x4093e8
  402d04:	call   rdi
  402d06:	lea    rsi,[rax+0x60]
  402d0a:	call   rdi
  402d0c:	lea    rbx,[rax+0x30]
  402d10:	call   rdi
  402d12:	mov    rdx,rbx
  402d15:	mov    rcx,rax
  402d18:	mov    QWORD PTR [rsp+0x20],r13
  402d1d:	mov    r9d,r12d
  402d20:	mov    r8,rsi
  402d23:	call   0x401568
  402d28:	mov    rax,QWORD PTR [rip+0x2831]        # 0x405560
  402d2f:	mov    rdx,rbp
  402d32:	mov    rcx,QWORD PTR [rax]
  402d35:	add    rcx,0x770
  402d3c:	call   0x402b70
  402d41:	test   eax,eax
  402d43:	mov    ebx,eax
  402d45:	je     0x402de3
  402d4b:	mov    rax,QWORD PTR [rip+0x280e]        # 0x405560
  402d52:	xor    ecx,ecx
  402d54:	mov    rax,QWORD PTR [rax]
  402d57:	mov    DWORD PTR [rax+0xac4],0x1
  402d61:	call   0x401570
  402d66:	lea    rdx,[rbp-0x18]
  402d6a:	lea    rcx,[rbp-0x1c]
  402d6e:	call   0x401550
  402d73:	mov    esi,DWORD PTR [rbp-0x1c]
  402d76:	test   esi,esi
  402d78:	jne    0x402d81
  402d7a:	mov    eax,DWORD PTR [rbp-0x18]
  402d7d:	test   eax,eax
  402d7f:	je     0x402da0
  402d81:	mov    edi,DWORD PTR [rbp-0x18]
  402d84:	call   QWORD PTR [rip+0x665e]        # 0x4093e8
  402d8a:	lea    rdx,[rip+0x22ff]        # 0x405090
  402d91:	lea    rcx,[rax+0x60]
  402d95:	mov    r9d,esi
  402d98:	mov    r8d,edi
  402d9b:	call   0x402b48
  402da0:	mov    eax,ebx
  402da2:	add    rsp,0x68
  402da6:	pop    rbx
  402da7:	pop    rsi
  402da8:	pop    rdi
  402da9:	pop    r12
  402dab:	pop    r13
  402dad:	pop    rbp
  402dae:	ret    
  402daf:	cmp    BYTE PTR [rdx+0x1],0x0
  402db3:	jne    0x402cfd
  402db9:	mov    rax,QWORD PTR [rip+0x27b0]        # 0x405570
  402dc0:	mov    rbx,QWORD PTR [rax]
  402dc3:	call   QWORD PTR [rip+0x661f]        # 0x4093e8
  402dc9:	lea    rdx,[rip+0x270]        # 0x403040
  402dd0:	lea    rcx,[rax+0x30]
  402dd4:	mov    r8,rbx
  402dd7:	call   0x402b48
  402ddc:	xor    ecx,ecx
  402dde:	call   0x402b50
  402de3:	lea    rcx,[rip+0x2216]        # 0x405000
  402dea:	xor    r8d,r8d
  402ded:	xor    edx,edx
  402def:	call   0x401548
  402df4:	mov    rsi,QWORD PTR [rip+0x2765]        # 0x405560
  402dfb:	lea    rdx,[rip+0x1d7e]        # 0x404b80
  402e02:	mov    rcx,QWORD PTR [rsi]
  402e05:	mov    DWORD PTR [rcx+0x70],0x1
  402e0c:	add    rcx,0x28c
  402e13:	call   0x401580
  402e18:	mov    rax,QWORD PTR [rsi]
  402e1b:	lea    rcx,[rax+0x28c]
  402e22:	call   0x401558
  402e27:	mov    rax,QWORD PTR [rsi]
  402e2a:	cmp    DWORD PTR [rax+0x1dc],0x0
  402e31:	je     0x402e60
  402e33:	mov    r9,QWORD PTR [rax+0x9d8]
  402e3a:	lea    rcx,[rip+0x21cf]        # 0x405010
  402e41:	mov    r8d,0x73
  402e47:	mov    edx,0x1
  402e4c:	call   0x402b38
  402e51:	xor    r8d,r8d
  402e54:	xor    edx,edx
  402e56:	mov    ecx,0x1
  402e5b:	call   0x401578
  402e60:	lea    rdx,[rbp-0x10]
  402e64:	lea    rcx,[rbp-0x14]
  402e68:	lea    r8,[rbp-0xc]
  402e6c:	call   0x401530
  402e71:	cmp    DWORD PTR [rbp-0x10],0x4
  402e75:	mov    rsi,rax
  402e78:	jle    0x402e9f
  402e7a:	lea    rcx,[rip+0x2203]        # 0x405084
  402e81:	xor    r8d,r8d
  402e84:	xor    edx,edx
  402e86:	call   0x401548
  402e8b:	mov    rax,QWORD PTR [rip+0x26ce]        # 0x405560
  402e92:	mov    rax,QWORD PTR [rax]
  402e95:	mov    DWORD PTR [rax+0x98],0x1
  402e9f:	mov    r9d,DWORD PTR [rbp-0xc]
  402ea3:	mov    r8d,DWORD PTR [rbp-0x10]
  402ea7:	mov    rcx,rsi
  402eaa:	mov    edx,DWORD PTR [rbp-0x14]
  402ead:	call   0x401560
  402eb2:	call   0x401538
  402eb7:	call   0x401590
  402ebc:	call   0x401540
  402ec1:	mov    rax,QWORD PTR [rip+0x2698]        # 0x405560
  402ec8:	mov    rax,QWORD PTR [rax]
  402ecb:	cmp    DWORD PTR [rax+0x228],0x0
  402ed2:	je     0x402d4b
  402ed8:	cmp    DWORD PTR [rax+0x4c],0x0
  402edc:	jne    0x402d4b
  402ee2:	cmp    DWORD PTR [rax+0x1f8],0x0
  402ee9:	jne    0x402d4b
  402eef:	cmp    DWORD PTR [rax+0x1f4],0x0
  402ef6:	jne    0x402d4b
  402efc:	call   0x401588
  402f01:	jmp    0x402d4b
  402f06:	cmp    BYTE PTR [rdx+0x1],0x0
  402f0a:	jne    0x402cfd
  402f10:	mov    rax,QWORD PTR [rip+0x2659]        # 0x405570
  402f17:	mov    rbx,QWORD PTR [rax]
  402f1a:	call   QWORD PTR [rip+0x64c8]        # 0x4093e8
  402f20:	lea    rcx,[rax+0x30]
  402f24:	lea    rax,[rip+0x9d5]        # 0x403900
  402f2b:	lea    r9,[rip+0x18ce]        # 0x404800
  402f32:	lea    rdx,[rip+0x19c7]        # 0x404900
  402f39:	mov    r8,rbx
  402f3c:	mov    QWORD PTR [rsp+0x30],rax
  402f41:	lea    rax,[rip+0xdb8]        # 0x403d00
  402f48:	mov    QWORD PTR [rsp+0x28],rax
  402f4d:	lea    rax,[rip+0x122c]        # 0x404180
  402f54:	mov    QWORD PTR [rsp+0x20],rax
  402f59:	call   0x402b48
  402f5e:	xor    ecx,ecx
  402f60:	call   0x402b50
  402f65:	xor    ecx,ecx
  402f67:	call   0x402b00
  402f6c:	test   eax,eax
  402f6e:	je     0x402cfd
  402f74:	mov    rax,QWORD PTR [rip+0x25f5]        # 0x405570
  402f7b:	mov    rbx,QWORD PTR [rax]
  402f7e:	call   QWORD PTR [rip+0x6464]        # 0x4093e8
  402f84:	lea    rdx,[rip+0x4f5]        # 0x403480
  402f8b:	lea    rcx,[rax+0x30]
  402f8f:	mov    r8,rbx
  402f92:	call   0x402b48
  402f97:	xor    ecx,ecx
  402f99:	call   0x402b50
  402f9e:	nop
  402f9f:	nop
  402fa0:	(bad)  
  402fa1:	(bad)  
  402fa2:	(bad)  
  402fa3:	(bad)  
  402fa4:	(bad)  
  402fa5:	(bad)  
  402fa6:	(bad)  
  402fa7:	inc    DWORD PTR [rax]
  402fa9:	add    BYTE PTR [rax],al
  402fab:	add    BYTE PTR [rax],al
  402fad:	add    BYTE PTR [rax],al
  402faf:	add    bh,bh
  402fb1:	(bad)  
  402fb2:	(bad)  
  402fb3:	(bad)  
  402fb4:	(bad)  
  402fb5:	(bad)  
  402fb6:	(bad)  
  402fb7:	inc    DWORD PTR [rax]
  402fb9:	add    BYTE PTR [rax],al
  402fbb:	add    BYTE PTR [rax],al
  402fbd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000403000 <.data>:
  403000:	or     al,BYTE PTR [rax]
	...
  40303e:	add    BYTE PTR [rax],al
  403040:	or     dl,BYTE PTR [rcx+0x68]
  403043:	jne    0x4030b1
  403045:	ins    BYTE PTR es:[rdi],dx
  403046:	and    BYTE PTR [rip+0x450a2e73],ah        # 0x454a5ebf
  40304c:	js     0x4030b1
  40304e:	gs jo  0x4030c5
  403051:	and    BYTE PTR [rsi+0x6f],ah
  403054:	jb     0x403076
  403056:	(bad)  
  403057:	rex.RX
  403058:	cs (bad) 
  40305a:	and    BYTE PTR [rcx+0x6e],ah
  40305d:	and    BYTE PTR fs:[rdi],ah
  403060:	push   rax
  403061:	rex.RXB (bad) 
  403063:	sub    al,0x20
  403065:	jne    0x4030d7
  403067:	jo     0x4030ce
  403069:	jb     0x4030ca
  40306b:	movsxd esp,DWORD PTR [rcx+0x73]
  40306e:	and    BYTE PTR gs:[rdi+0x70],ch
  403072:	je     0x4030dd
  403074:	outs   dx,DWORD PTR ds:[rsi]
  403075:	outs   dx,BYTE PTR ds:[rsi]
  403076:	jae    0x403098
  403078:	je     0x4030db
  40307a:	imul   esp,DWORD PTR [rbp+0x20],0x61
  40307e:	outs   dx,BYTE PTR ds:[rsi]
  40307f:	and    BYTE PTR [rcx+0x72],ah
  403082:	addr32 jne 0x4030f2
  403085:	outs   dx,BYTE PTR gs:[rsi]
  403087:	je     0x4030b7
  403089:	or     cl,BYTE PTR [rdx]
  40308b:	and    BYTE PTR [rcx+0x6e],ch
  40308e:	movsxd ebp,DWORD PTR [rcx+0x64]
  403091:	outs   dx,BYTE PTR gs:[rsi]
  403093:	movsxd esp,DWORD PTR [rbp+0x73]
  403096:	and    BYTE PTR [rax],ah
  403098:	and    BYTE PTR [rax],ah
  40309a:	and    BYTE PTR [rdi+0x65],al
  40309d:	outs   dx,DWORD PTR ds:[rsi]
  40309e:	ins    DWORD PTR es:[rdi],dx
  40309f:	jbe    0x40310a
  4030a1:	gs ja  0x4030c4
  4030a4:	and    BYTE PTR [rax],ah
  4030a6:	and    BYTE PTR [rax],ah
  4030a8:	and    BYTE PTR [rax],ah
  4030aa:	ins    DWORD PTR es:[rdi],dx
  4030ab:	(bad)  
  4030ac:	je     0x403116
  4030ae:	gs ins DWORD PTR es:[rdi],dx
  4030b0:	(bad)  
  4030b1:	je     0x40311c
  4030b3:	movsxd esp,DWORD PTR [rcx+0x20]
  4030b6:	and    BYTE PTR [rax],ah
  4030b8:	and    BYTE PTR [rdi+0x46],cl
  4030bb:	rex.RX pop rdi
  4030bd:	outs   dx,WORD PTR ds:[rsi]
  4030bf:	jb     0x40312e
  4030c1:	(bad)  
  4030c2:	je     0x4030e4
  4030c4:	and    BYTE PTR [rax],ah
  4030c6:	and    BYTE PTR [rax],ah
  4030c8:	jo     0x403139
  4030ca:	imul   ebp,DWORD PTR [rsi+0x74],0x6175645f
  4030d1:	ins    BYTE PTR es:[rdi],dx
  4030d2:	or     ah,BYTE PTR [rax]
  4030d4:	jae    0x40314b
  4030d6:	ins    DWORD PTR es:[rdi],dx
  4030d7:	ins    DWORD PTR es:[rdi],dx
  4030d8:	(bad)  
  4030d9:	jb     0x403154
  4030db:	and    BYTE PTR [rax],ah
  4030dd:	and    BYTE PTR [rax],ah
  4030df:	and    BYTE PTR [rax],ah
  4030e1:	and    BYTE PTR [rax],ah
  4030e3:	data16 (bad) 
  4030e5:	movsxd esp,DWORD PTR [rbp+0x74]
  4030e8:	pop    rdi
  4030e9:	fs jne 0x403159
  4030ec:	jo     0x4030f8
  4030ee:	or     ah,BYTE PTR [rax]
  4030f0:	rex.RX movsxd r11d,DWORD PTR [rdi+0x72]
  4030f4:	gs fs jne 0x403166
  4030f8:	fs (bad) 
  4030fa:	outs   dx,BYTE PTR ds:[rsi]
  4030fb:	je     0x40311d
  4030fd:	and    BYTE PTR [rax],ah
  4030ff:	rex.RX
  403100:	fs pop rdi
  403102:	movsxd esp,DWORD PTR [rsp+riz*2+0x5f]
  403106:	imul   ebp,DWORD PTR [rsi+0x20],0x20202020
  40310d:	and    BYTE PTR [rsi+0x46],al
  403110:	pop    rdi
  403111:	fs jne 0x403181
  403114:	jo     0x403175
  403116:	js     0x40318a
  403118:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x44494620
  403120:	jae    0x403142
  403122:	and    BYTE PTR [rax],ah
  403124:	and    BYTE PTR [rax],ah
  403126:	and    BYTE PTR [rax],ah
  403128:	and    BYTE PTR [rax],ah
  40312a:	and    BYTE PTR [rax],ah
  40312c:	rex.RX ins DWORD PTR es:[rdi],dx
  40312e:	gs jb  0x403198
  403131:	gs jae 0x40313e
  403134:	and    BYTE PTR [rsi+0x6e],al
  403137:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  40313f:	and    BYTE PTR [rax],ah
  403141:	and    BYTE PTR [rax],ah
  403143:	and    BYTE PTR [rsi+0x4e],al
  403146:	pop    rdi
  403147:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  40314e:	movsxd esi,DWORD PTR [rax+riz*1+0x20]
  403152:	and    BYTE PTR [rsi+0x4f],al
  403155:	jo     0x4031cb
  403157:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202073
  40315e:	and    BYTE PTR [rax],ah
  403160:	and    BYTE PTR [rax],ah
  403162:	rex.RX jo 0x4031c4
  403165:	movsxd ebp,DWORD PTR [rdi+0x6f]
  403168:	jb     0x4031ce
  40316a:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  403171:	rex.RX push rax
  403173:	pop    rdi
  403174:	outs   dx,BYTE PTR ds:[rsi]
  403175:	gs (bad) 
  403177:	jb     0x4031de
  403179:	jae    0x4031ef
  40317b:	or     ah,BYTE PTR [rax]
  40317d:	rex.RX push rcx
  40317f:	push   0x20666c61
  403184:	and    BYTE PTR [rax],ah
  403186:	and    BYTE PTR [rax],ah
  403188:	and    BYTE PTR [rax],ah
  40318a:	and    BYTE PTR [rax],ah
  40318c:	rex.RX jae 0x403204
  40318f:	ins    DWORD PTR es:[rdi],dx
  403190:	ins    DWORD PTR es:[rdi],dx
  403191:	(bad)  
  403192:	jb     0x40320d
  403194:	and    BYTE PTR [rax],ah
  403196:	and    BYTE PTR [rax],ah
  403198:	and    BYTE PTR [rax],ah
  40319a:	and    BYTE PTR [rsi+0x76],al
  40319d:	pop    rdi
  40319e:	push   0x73666c61
  4031a3:	jo     0x403206
  4031a5:	movsxd esp,DWORD PTR [rbp+0x20]
  4031a8:	and    BYTE PTR [rax],ah
  4031aa:	rex.RX
  4031ab:	rex.WRB (bad) 
  4031ad:	jo     0x40321b
  4031af:	and    BYTE PTR gs:[rax],ah
  4031b2:	and    BYTE PTR [rax],ah
  4031b4:	and    BYTE PTR [rax],ah
  4031b6:	and    BYTE PTR [rax],ah
  4031b8:	and    BYTE PTR [rsi+0x78],al
  4031bb:	pop    rdi
  4031bc:	outs   dx,BYTE PTR ds:[rsi]
  4031bd:	outs   dx,DWORD PTR ds:[rsi]
  4031be:	outs   dx,BYTE PTR ds:[rsi]
  4031bf:	pop    rdi
  4031c0:	jb     0x403227
  4031c2:	fs jne 0x403233
  4031c5:	fs (bad) 
  4031c7:	outs   dx,BYTE PTR ds:[rsi]
  4031c8:	je     0x4031d4
  4031ca:	or     ah,BYTE PTR [rax]
  4031cc:	rex.RXB jbe 0x403234
  4031cf:	jb     0x403245
  4031d1:	imul   esp,DWORD PTR [rbx+0x65],0x20202073
  4031d8:	and    BYTE PTR [rax],ah
  4031da:	and    BYTE PTR [rdi+0x70],al
  4031dd:	outs   dx,DWORD PTR ds:[rsi]
  4031de:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  4031e5:	and    BYTE PTR [rax],ah
  4031e7:	and    BYTE PTR [rax],ah
  4031e9:	and    BYTE PTR [rdi+0x61],al
  4031ec:	ins    BYTE PTR es:[rdi],dx
  4031ed:	ins    BYTE PTR es:[rdi],dx
  4031ee:	pop    rdi
  4031ef:	jo     0x403260
  4031f1:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  4031f8:	and    BYTE PTR [rdi+0x6e],al
  4031fb:	outs   dx,DWORD PTR ds:[rsi]
  4031fc:	pop    rdi
  4031fd:	jo     0x40326b
  4031ff:	(bad)  
  403200:	outs   dx,BYTE PTR ds:[rsi]
  403201:	gs jae 0x403224
  403204:	and    BYTE PTR [rax],ah
  403206:	and    BYTE PTR [rax],ah
  403208:	rex.RXB imul r13d,DWORD PTR [r14+0x6e],0x200a7265
  403210:	rex.RXB movsxd r12d,DWORD PTR [r13+0x6e]
  403214:	je     0x403288
  403216:	jne    0x403285
  403218:	jae    0x40323a
  40321a:	and    BYTE PTR [rax],ah
  40321c:	and    BYTE PTR [rax],ah
  40321e:	and    BYTE PTR [rdi+0x68],al
  403221:	jns    0x403293
  403223:	gs jb  0x403296
  403226:	ins    BYTE PTR es:[rdi],dx
  403227:	(bad)  
  403228:	outs   dx,BYTE PTR ds:[rsi]
  403229:	gs jae 0x40324c
  40322c:	and    BYTE PTR [rax],ah
  40322e:	rex.RXB jb 0x40329a
  403231:	fs addr32 gs jae 0x403256
  403236:	and    BYTE PTR [rax],ah
  403238:	and    BYTE PTR [rax],ah
  40323a:	and    BYTE PTR [rax],ah
  40323c:	and    BYTE PTR [rdi+0x6f],al
  40323f:	jne    0x4032b5
  403241:	gs jb  0x403264
  403244:	and    BYTE PTR [rax],ah
  403246:	and    BYTE PTR [rax],ah
  403248:	and    BYTE PTR [rax],ah
  40324a:	and    BYTE PTR [rax],ah
  40324c:	rex.RXB
  40324d:	rex.R jb 0x4032bf
  403250:	jo     0x4032b1
  403252:	imul   ebp,DWORD PTR fs:[rbp+0xa],0x4150200a
  40325a:	jb     0x4032c1
  40325c:	(bad)  
  40325d:	pop    rdi
  40325e:	imul   esp,DWORD PTR [rbp+0x65],0x70
  403262:	and    BYTE PTR [rax],ah
  403264:	and    BYTE PTR [rax],ah
  403266:	and    BYTE PTR [rax+0x64],dl
  403269:	jb     0x4032da
  40326b:	jo     0x40328d
  40326d:	xor    BYTE PTR fs:[rdx],bh
  403270:	xor    BYTE PTR [rax+rsi*1+0x20],al
  403274:	and    BYTE PTR [rax],ah
  403276:	push   rax
  403277:	outs   dx,DWORD PTR ds:[esi]
  403279:	outs   dx,DWORD PTR ds:[rsi]
  40327a:	and    BYTE PTR fs:[rax],ah
  40327d:	and    BYTE PTR [rax],ah
  40327f:	and    BYTE PTR [rax],ah
  403281:	and    BYTE PTR [rax],ah
  403283:	and    BYTE PTR [rax],ah
  403285:	push   rax
  403286:	rex.RX (bad) 
  403288:	movsxd esp,DWORD PTR [rbp+0x74]
  40328b:	pop    rdi
  40328c:	(bad)  
  40328d:	jb     0x4032f4
  40328f:	(bad)  
  403290:	pop    rdi
  403291:	imul   esp,DWORD PTR [rbp+0x65],0x70
  403295:	or     ah,BYTE PTR [rax]
  403297:	push   rax
  403298:	rex.RXB outs dx,DWORD PTR ds:[rsi]
  40329a:	outs   dx,DWORD PTR ds:[rsi]
  40329b:	fs pop rdi
  40329d:	outs   dx,BYTE PTR ds:[rsi]
  40329e:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  4032a6:	and    BYTE PTR [rax+0x4d],dl
  4032a9:	gs jb  0x403313
  4032ac:	gs pop rdi
  4032ae:	imul   esp,DWORD PTR [rbp+0x65],0x70
  4032b2:	and    BYTE PTR [rax],ah
  4032b4:	and    BYTE PTR [rax+0x6f],dl
  4032b7:	jne    0x40332d
  4032b9:	jo     0x403330
  4032bb:	je     0x40331c
  4032bd:	outs   dx,WORD PTR ds:[rsi]
  4032bf:	jb     0x403324
  4032c1:	gs and BYTE PTR fs:[rax+0x70],dl
  4032c6:	jb     0x40332d
  4032c8:	movsxd ebp,DWORD PTR [rcx+0x73]
  4032cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e5f
  4032d2:	or     cl,BYTE PTR [rdx]
  4032d4:	and    BYTE PTR [rcx+0x62],dl
  4032d7:	imul   edi,DWORD PTR [rdx],0x30
  4032da:	rex.X imul edi,DWORD PTR [rdx],0x30
  4032de:	pop    rdi
  4032df:	fs jb  0x403351
  4032e2:	jo     0x403304
  4032e4:	push   rcx
  4032e5:	movsxd ebp,DWORD PTR [rdi+0x70]
  4032e8:	ins    BYTE PTR es:[rdi],dx
  4032e9:	(bad)  
  4032ea:	outs   dx,BYTE PTR ds:[rsi]
  4032eb:	(bad)  
  4032ec:	jb     0x40330e
  4032ee:	and    BYTE PTR [rax],ah
  4032f0:	and    BYTE PTR [rax],ah
  4032f2:	and    BYTE PTR [rcx+0x47],dl
  4032f5:	pop    rdi
  4032f6:	push   0x5f666c61
  4032fb:	outs   dx,DWORD PTR ds:[esi]
  4032fd:	outs   dx,DWORD PTR ds:[rsi]
  4032fe:	and    BYTE PTR fs:[rax],ah
  403301:	and    BYTE PTR [rcx+0x69],dl
  403304:	pop    rdi
  403305:	jb     0x40336c
  403307:	fs jne 0x403378
  40330a:	fs (bad) 
  40330c:	outs   dx,BYTE PTR ds:[rsi]
  40330d:	je     0x40332f
  40330f:	and    BYTE PTR [rax],ah
  403311:	push   rcx
  403312:	rex.WX outs dx,DWORD PTR ds:[rsi]
  403314:	addr32 ins BYTE PTR es:[edi],dx
  403317:	or     ah,BYTE PTR gs:[rax]
  40331a:	push   rcx
  40331b:	jae    0x403382
  40331d:	(bad)  
  40331e:	jb     0x403383
  403320:	push   0x7473315f
  403325:	and    BYTE PTR [rax],ah
  403327:	and    BYTE PTR [rax],ah
  403329:	push   rcx
  40332a:	je     0x40339e
  40332c:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  403333:	je     0x40339a
  403335:	and    BYTE PTR [rax],ah
  403337:	and    BYTE PTR [rcx+0x56],dl
  40333a:	gs jb  0x4033b1
  40333d:	gs js  0x40339f
  403340:	outs   dx,DWORD PTR ds:[esi]
  403342:	outs   dx,DWORD PTR ds:[rsi]
  403343:	or     cl,BYTE PTR fs:[rdx]
  403346:	and    BYTE PTR [rsp+rsi*1+0x5f],dl
  40334a:	je     0x4033be
  40334c:	(bad)  
  40334d:	movsxd esp,DWORD PTR [rbp+0x20]
  403350:	and    BYTE PTR [rax],ah
  403352:	and    BYTE PTR [rax],ah
  403354:	and    BYTE PTR [rax],ah
  403356:	push   rsp
  403357:	movsxd ebp,DWORD PTR [rax+0x65]
  40335a:	movsxd ebp,DWORD PTR [rbx+0x5f]
  40335d:	outs   dx,DWORD PTR ds:[rsi]
  40335e:	data16 je 0x4033c6
  403361:	outs   dx,BYTE PTR ds:[rsi]
  403362:	and    BYTE PTR [rax],ah
  403364:	and    BYTE PTR [rbx+rsi*2+0x74],dl
  403368:	(bad)  
  403369:	je     0x4033d4
  40336b:	jae    0x4033e1
  40336d:	imul   esp,DWORD PTR [rbx+0x73],0x20202020
  403374:	push   rsp
  403375:	jbe    0x4033dc
  403377:	jb     0x4033e2
  403379:	data16 jns 0x40339c
  40337c:	and    BYTE PTR [rax],ah
  40337e:	and    BYTE PTR [rax],ah
  403380:	and    BYTE PTR [rax],ah
  403382:	and    BYTE PTR [rdx+rdi*2+0x5f],dl
  403386:	jae    0x4033fc
  403388:	outs   dx,DWORD PTR fs:[rsi]
  40338a:	jne    0x403400
  40338c:	or     ah,BYTE PTR [rax]
  40338e:	push   rsp
  40338f:	rex.RX (bad) 
  403391:	movsxd esp,DWORD PTR [rbp+0x74]
  403394:	pop    rdi
  403395:	ins    BYTE PTR es:[rdi],dx
  403396:	outs   dx,DWORD PTR ds:[rsi]
  403397:	and    BYTE PTR [eax],ah
  40339a:	and    BYTE PTR [rax],ah
  40339c:	and    BYTE PTR [rcx+rcx*2+0x6e],dl
  4033a0:	jo     0x403417
  4033a2:	je     0x403403
  4033a4:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2020
  4033ab:	and    BYTE PTR [rax+rdx*2+0x6f],dl
  4033af:	imul   ebp,DWORD PTR [rsi+0x74],0x6172745f
  4033b6:	movsxd esp,DWORD PTR [rbp+0x20]
  4033b9:	and    BYTE PTR [rax],ah
  4033bb:	push   rsp
  4033bc:	rex.WRB
  4033bd:	gs jb  0x403427
  4033c0:	gs pop rdi
  4033c2:	je     0x403436
  4033c4:	(bad)  
  4033c5:	movsxd esp,DWORD PTR [rbp+0x20]
  4033c8:	and    BYTE PTR [rax],ah
  4033ca:	push   rsp
  4033cb:	rex.WRXB jne 0x403442
  4033ce:	jo     0x403445
  4033d0:	je     0x403431
  4033d2:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x5420
  4033d9:	push   rdi
  4033da:	imul   esp,DWORD PTR [rbp+riz*2+0x5f],0x63617274
  4033e2:	and    BYTE PTR gs:[rax],ah
  4033e5:	and    BYTE PTR [rax],ah
  4033e7:	push   rsp
  4033e8:	push   rsi
  4033e9:	gs jb  0x403460
  4033ec:	gs js  0x40344e
  4033ef:	jae    0x403465
  4033f1:	outs   dx,DWORD PTR ds:[rsi]
  4033f2:	jo     0x403414
  4033f4:	and    BYTE PTR [rax],ah
  4033f6:	push   rsp
  4033f7:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4033f9:	outs   dx,BYTE PTR ds:[rsi]
  4033fa:	gs pop rdi
  4033fc:	jae    0x403472
  4033fe:	outs   dx,DWORD PTR ds:[rsi]
  4033ff:	jo     0x40340b
  403401:	or     ah,BYTE PTR [rax]
  403403:	rex.B outs dx,BYTE PTR ds:[rsi]
  403405:	ins    BYTE PTR es:[edi],dx
  403407:	gs pop rdi
  403409:	ins    DWORD PTR es:[rdi],dx
  40340a:	(bad)  
  40340b:	js     0x40342d
  40340d:	and    BYTE PTR [rax],ah
  40340f:	and    BYTE PTR [rax],ah
  403411:	and    BYTE PTR [rbx+0x65],al
  403414:	outs   dx,BYTE PTR ds:[rsi]
  403415:	je     0x403489
  403417:	jne    0x403486
  403419:	pop    rdi
  40341a:	jae    0x403485
  40341c:	jp     0x403483
  40341e:	and    BYTE PTR [rax],ah
  403420:	and    BYTE PTR [rdx+0x61],dl
  403423:	outs   dx,BYTE PTR ds:[rsi]
  403424:	outs   dx,DWORD PTR fs:[rsi]
  403426:	ins    DWORD PTR es:[rdi],dx
  403427:	pop    rdi
  403428:	imul   esi,DWORD PTR fs:[rbx+0x74],0x20202020
  403430:	push   rbp
  403431:	movsxd ebp,DWORD PTR [rdi+0x70]
  403434:	ins    BYTE PTR es:[rdi],dx
  403435:	(bad)  
  403436:	outs   dx,BYTE PTR ds:[rsi]
  403437:	(bad)  
  403438:	jb     0x403499
  40343a:	ins    DWORD PTR es:[rdi],dx
  40343b:	(bad)  
  40343c:	js     0x40345e
  40343e:	and    BYTE PTR [rdi+0x69],dl
  403441:	fs gs pop rdi
  403444:	outs   dx,DWORD PTR ds:[rsi]
  403445:	jne    0x4034bb
  403447:	jae    0x4034b2
  403449:	fs or  al,BYTE PTR gs:[rax]
	...
  40347d:	add    BYTE PTR [rax],al
  40347f:	add    BYTE PTR [rdx],cl
  403481:	jno    0x4034eb
  403483:	(bad)  
  403484:	ins    BYTE PTR es:[rdi],dx
  403485:	sub    ax,0x6820
  403489:	(bad)  
  40348a:	ins    BYTE PTR es:[rdi],dx
  40348b:	data16 jae 0x4034fe
  40348e:	(bad)  
  40348f:	movsxd esp,DWORD PTR [rbp+0x20]
  403492:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403499:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40349d:	outs   dx,BYTE PTR ds:[rsi]
  40349e:	and    BYTE PTR [rcx+0x62],ah
  4034a1:	outs   dx,DWORD PTR ds:[rsi]
  4034a2:	jne    0x403518
  4034a4:	and    BYTE PTR [rcx+0x20],ah
  4034a7:	jo     0x403518
  4034a9:	imul   ebp,DWORD PTR [rsi+0x74],0x5120202e
  4034b0:	push   0x206c6c75
  4034b5:	and    eax,0x20200a73
  4034ba:	and    BYTE PTR [rax],ah
  4034bc:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  4034c3:	jae    0x403539
  4034c5:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x645b203a
  4034cd:	imul   ebp,DWORD PTR [rbp+0x2c],0x202c3120
  4034d4:	imul   ebp,DWORD PTR [rsi+0x74],0x6f697265
  4034db:	jb     0x4034fd
  4034dd:	jo     0x40354e
  4034df:	imul   ebp,DWORD PTR [rsi+0x74],0x64202c5d
  4034e6:	imul   ebp,DWORD PTR [rbp+0x2b],0x6e202c31
  4034ed:	sub    al,0x20
  4034ef:	movsxd ebp,DWORD PTR [rdi+0x65]
  4034f2:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
  4034f9:	je     0x40356e
  4034fb:	sub    ebp,DWORD PTR [rdi+0x66]
  4034fe:	data16 jae 0x403566
  403501:	je     0x40350d
  403503:	and    BYTE PTR [rax],ah
  403505:	and    BYTE PTR [rax],ah
  403507:	movsxd ebp,DWORD PTR [rdi+0x6d]
  40350a:	ins    DWORD PTR es:[rdi],dx
  40350b:	outs   dx,BYTE PTR gs:[rsi]
  40350d:	je     0x403582
  40350f:	and    BYTE PTR [rbx+0x74],dh
  403512:	(bad)  
  403513:	jb     0x403589
  403515:	and    BYTE PTR [rdi+0x69],dh
  403518:	je     0x403582
  40351a:	and    BYTE PTR [rcx+0x20],ah
  40351d:	outs   dx,BYTE PTR ds:[rsi]
  40351e:	outs   dx,DWORD PTR ds:[rsi]
  40351f:	outs   dx,BYTE PTR ds:[rsi]
  403520:	sub    eax,0x656d756e
  403525:	jb     0x403590
  403527:	movsxd esp,DWORD PTR [rax]
  403529:	movsxd ebp,DWORD PTR [rax+0x61]
  40352c:	jb     0x40358f
  40352e:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  403532:	or     cl,BYTE PTR [rdx]
  403534:	outs   dx,DWORD PTR ds:[rsi]
  403535:	jo     0x4035ab
  403537:	imul   ebp,DWORD PTR [rdi+0x6e],0x71282073
  40353e:	push   0x2e666c61
  403543:	push   0x3a296d74
  403548:	or     ah,BYTE PTR [rax]
  40354a:	and    BYTE PTR [rax],ah
  40354c:	and    BYTE PTR [rax+0x6e],cl
  40354f:	sub    al,0x6e
  403551:	and    BYTE PTR [rip+0x65707320],ch        # 0x65b0a877
  403557:	movsxd ebp,DWORD PTR [rcx+0x66]
  40355a:	jns    0x40357c
  40355c:	movsxd ebp,DWORD PTR [rdi+0x6f]
  40355f:	jb     0x4035c5
  403561:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  403568:	outs   dx,DWORD PTR ds:[rsi]
  403569:	data16 and BYTE PTR [rcx+0x6e],ch
  40356d:	je     0x4035d4
  40356f:	jb     0x4035da
  403571:	outs   dx,DWORD PTR ds:[rsi]
  403572:	jb     0x403594
  403574:	jo     0x4035e5
  403576:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  40357d:	and    BYTE PTR [rcx+0x74],dl
  403580:	and    BYTE PTR [rax],ah
  403582:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2a9a8
  403588:	(bad)  
  403589:	outs   dx,BYTE PTR ds:[rsi]
  40358a:	addr32 jne 0x4035f9
  40358d:	(bad)  
  40358e:	je     0x4035f5
  403590:	and    BYTE PTR fs:[rdi+0x75],ch
  403594:	je     0x403606
  403596:	jne    0x40360c
  403598:	or     ah,BYTE PTR [rax]
  40359a:	and    BYTE PTR [rax],ah
  40359c:	and    BYTE PTR [rcx+0x4a],dl
  40359f:	and    BYTE PTR [rax],ah
  4035a1:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67af9fc7
  4035a7:	ins    BYTE PTR es:[edi],dx
  4035a9:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4035ae:	jo     0x403625
  4035b0:	je     0x4035d2
  4035b2:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  4035b9:	and    BYTE PTR [rdi+0x66],ch
  4035bc:	and    BYTE PTR [rbp+0x65],ch
  4035bf:	jb     0x403628
  4035c1:	gs and BYTE PTR fs:[rsi+0x61],ah
  4035c6:	movsxd esp,DWORD PTR [rbp+0x74]
  4035c9:	jae    0x4035d5
  4035cb:	and    BYTE PTR [rax],ah
  4035cd:	and    BYTE PTR [rax],ah
  4035cf:	push   rsp
  4035d0:	jbe    0x4035f2
  4035d2:	and    BYTE PTR [rax],ah
  4035d4:	sub    eax,0x72657620
  4035d9:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  4035e0:	jne    0x40364e
  4035e2:	je     0x40361e
  4035e4:	and    BYTE PTR [rbx+0x74],dh
  4035e7:	jb     0x40365e
  4035e9:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  4035ed:	gs sub al,0x20
  4035f0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4035f3:	jbe    0x40365a
  4035f5:	js     0x403660
  4035f7:	je     0x403672
  4035f9:	sub    al,0x20
  4035fb:	(bad)  
  4035fc:	outs   dx,BYTE PTR ds:[rsi]
  4035fd:	and    BYTE PTR fs:[rdx+0x65],dh
  403601:	fs jne 0x403672
  403604:	fs (bad) 
  403606:	outs   dx,BYTE PTR ds:[rsi]
  403607:	movsxd edi,DWORD PTR [rcx+0xa]
  40360a:	and    BYTE PTR [rax],ah
  40360c:	and    BYTE PTR [rax],ah
  40360e:	and    BYTE PTR cs:[rax],ah
  403611:	and    BYTE PTR [rax],ah
  403613:	sub    eax,0x6e6f6320
  403618:	movsxd ebp,DWORD PTR [rcx+0x73]
  40361b:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ch
  403620:	je     0x403642
  403622:	outs   dx,DWORD PTR ds:[rsi]
  403623:	data16 and BYTE PTR [rcx+0x6c],ah
  403627:	ins    BYTE PTR es:[rdi],dx
  403628:	and    BYTE PTR [rdi+0x70],ch
  40362b:	je     0x403696
  40362d:	outs   dx,DWORD PTR ds:[rsi]
  40362e:	outs   dx,BYTE PTR ds:[rsi]
  40362f:	jae    0x40363b
  403631:	and    BYTE PTR [rax],ah
  403633:	and    BYTE PTR [rax],ah
  403635:	sub    eax,0x20202020
  40363a:	sub    eax,0x656e6f20
  40363f:	sub    eax,0x656e696c
  403644:	and    BYTE PTR [rbp+riz*2+0x73],ah
  403648:	movsxd esi,DWORD PTR [rdx+0x69]
  40364b:	jo     0x4036c1
  40364d:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  403654:	(bad)  
  403655:	ins    BYTE PTR es:[rdi],dx
  403656:	ins    BYTE PTR es:[rdi],dx
  403657:	and    BYTE PTR [rdi+0x70],ch
  40365a:	je     0x4036c5
  40365c:	outs   dx,DWORD PTR ds:[rsi]
  40365d:	outs   dx,BYTE PTR ds:[rsi]
  40365e:	jae    0x40366a
  403660:	or     ch,BYTE PTR [rdi+0x75]
  403663:	je     0x4036d5
  403665:	jne    0x4036db
  403667:	and    BYTE PTR [rdi+0x70],ch
  40366a:	je     0x4036d5
  40366c:	outs   dx,DWORD PTR ds:[rsi]
  40366d:	outs   dx,BYTE PTR ds:[rsi]
  40366e:	jae    0x403690
  403670:	sub    BYTE PTR [rbx+0x75],dh
  403673:	(bad)
  403678:	cmp    cl,BYTE PTR [rdx]
  40367a:	and    BYTE PTR [rax],ah
  40367c:	and    BYTE PTR [rax],ah
  40367e:	jae    0x4036a0
  403680:	and    BYTE PTR [rax],ah
  403682:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5a9a8
  403688:	ins    DWORD PTR es:[rdi],dx
  403689:	(bad)  
  40368a:	jb     0x403705
  40368c:	and    BYTE PTR [rdi+0x66],ch
  40368f:	and    BYTE PTR [rdx+0x65],dh
  403692:	jae    0x403709
  403694:	ins    BYTE PTR es:[rdi],dx
  403695:	je     0x40370a
  403697:	and    BYTE PTR [rax],ch
  403699:	fs gs data16 (bad) 
  40369d:	jne    0x40370b
  40369f:	je     0x4036ca
  4036a1:	or     ah,BYTE PTR [rax]
  4036a3:	and    BYTE PTR [rax],ah
  4036a5:	and    BYTE PTR [rsi+0x70],al
  4036a8:	and    BYTE PTR [rax],ah
  4036aa:	and    BYTE PTR [rip+0x746e6920],ch        # 0x74ae9fd0
  4036b0:	gs jb  0x403726
  4036b3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4036b8:	outs   dx,BYTE PTR ds:[rsi]
  4036b9:	and    BYTE PTR [rbx+0x6f],ah
  4036bc:	outs   dx,DWORD PTR ds:[rsi]
  4036bd:	jb     0x403723
  4036bf:	imul   ebp,DWORD PTR [rsi+0x61],0xa736574
  4036c6:	and    BYTE PTR [rax],ah
  4036c8:	and    BYTE PTR [rax],ah
  4036ca:	rex.RX jbe 0x4036ed
  4036cd:	and    BYTE PTR [rax],ah
  4036cf:	sub    eax,0x6e6f6e20
  4036d4:	sub    eax,0x75646572
  4036d9:	outs   dx,BYTE PTR ds:[rsi]
  4036da:	fs (bad) 
  4036dc:	outs   dx,BYTE PTR ds:[rsi]
  4036dd:	je     0x4036ff
  4036df:	push   0x73666c61
  4036e4:	jo     0x403747
  4036e6:	movsxd esp,DWORD PTR [rbp+0x73]
  4036e9:	and    BYTE PTR [rcx+0x6e],ch
  4036ec:	movsxd ebp,DWORD PTR [rcx+0x64]
  4036ef:	outs   dx,BYTE PTR gs:[rsi]
  4036f1:	je     0x403713
  4036f3:	je     0x403764
  4036f5:	and    BYTE PTR [rbp+0x61],ah
  4036f8:	movsxd ebp,DWORD PTR [rax+0x20]
  4036fb:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403702:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403706:	outs   dx,BYTE PTR ds:[rsi]
  403707:	or     ah,BYTE PTR [rax]
  403709:	and    BYTE PTR [rax],ah
  40370b:	and    BYTE PTR [rsi+0x78],al
  40370e:	and    BYTE PTR [rax],ah
  403710:	and    BYTE PTR [rip+0x6e6f6e20],ch        # 0x6eafa536
  403716:	sub    eax,0x75646572
  40371b:	outs   dx,BYTE PTR ds:[rsi]
  40371c:	fs (bad) 
  40371e:	outs   dx,BYTE PTR ds:[rsi]
  40371f:	je     0x403741
  403721:	push   0x73666c61
  403726:	jo     0x403789
  403728:	movsxd esp,DWORD PTR [rbp+0x73]
  40372b:	or     ah,BYTE PTR [rax]
  40372d:	and    BYTE PTR [rax],ah
  40372f:	and    BYTE PTR [rdi+0x20],ch
  403732:	and    BYTE PTR [rax],ah
  403734:	and    BYTE PTR [rip+0x46464f20],ch        # 0x4686865a
  40373a:	and    BYTE PTR [rsi+0x69],ah
  40373d:	ins    BYTE PTR es:[rdi],dx
  40373e:	and    BYTE PTR gs:[rsi+0x6f],ah
  403742:	jb     0x4037b1
  403744:	(bad)  
  403745:	je     0x403767
  403747:	sub    BYTE PTR [rbp+rsi*2+0x61],ah
  40374b:	ins    BYTE PTR es:[rdi],dx
  40374c:	and    BYTE PTR [rbx+0x6f],ah
  40374f:	outs   dx,BYTE PTR ds:[rsi]
  403750:	jbe    0x4037b7
  403752:	js     0x403774
  403754:	push   0x296c6c75
  403759:	or     ah,BYTE PTR [rax]
  40375b:	and    BYTE PTR [rax],ah
  40375d:	and    BYTE PTR [rdi+0x20],al
  403760:	and    BYTE PTR [rax],ah
  403762:	and    BYTE PTR [rip+0x6f654720],ch        # 0x6fa57e88
  403768:	ins    DWORD PTR es:[rdi],dx
  403769:	jbe    0x4037d4
  40376b:	gs ja  0x40378e
  40376e:	outs   dx,DWORD PTR ds:[rsi]
  40376f:	jne    0x4037e5
  403771:	jo     0x4037e8
  403773:	je     0x403795
  403775:	sub    BYTE PTR [rbp+rsi*2+0x61],ah
  403779:	ins    BYTE PTR es:[rdi],dx
  40377a:	and    BYTE PTR [rbx+0x6f],ah
  40377d:	outs   dx,BYTE PTR ds:[rsi]
  40377e:	jbe    0x4037e5
  403780:	js     0x4037a2
  403782:	push   0x296c6c75
  403787:	or     ah,BYTE PTR [rax]
  403789:	and    BYTE PTR [rax],ah
  40378b:	and    BYTE PTR [rbp+0x20],ch
  40378e:	and    BYTE PTR [rax],ah
  403790:	and    BYTE PTR [rip+0x74614d20],ch        # 0x74a184b6
  403796:	push   0x74616d65
  40379b:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  4037a2:	jo     0x403819
  4037a4:	je     0x4037c6
  4037a6:	sub    BYTE PTR [rbp+rsi*2+0x61],ah
  4037aa:	ins    BYTE PTR es:[rdi],dx
  4037ab:	and    BYTE PTR [rbx+0x6f],ah
  4037ae:	outs   dx,BYTE PTR ds:[rsi]
  4037af:	jbe    0x403816
  4037b1:	js     0x4037d3
  4037b3:	push   0x296c6c75
  4037b8:	or     ah,BYTE PTR [rax]
  4037ba:	and    BYTE PTR [rax],ah
  4037bc:	and    BYTE PTR [rcx+0x56],dl
  4037bf:	outs   dx,BYTE PTR ds:[rsi]
  4037c0:	and    BYTE PTR [rax],ah
  4037c2:	sub    eax,0x69727020
  4037c7:	outs   dx,BYTE PTR ds:[rsi]
  4037c8:	je     0x4037ea
  4037ca:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  4037d1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4037d5:	outs   dx,BYTE PTR ds:[rsi]
  4037d6:	jae    0x4037f8
  4037d8:	outs   dx,WORD PTR ds:[rsi]
  4037da:	jb     0x4037fc
  4037dc:	push   0x73666c61
  4037e1:	jo     0x403844
  4037e3:	movsxd esp,DWORD PTR [rbp+0x20]
  4037e6:	outs   dx,BYTE PTR ds:[rsi]
  4037e7:	sub    al,0x20
  4037e9:	sub    eax,0x6669206e
  4037ee:	and    BYTE PTR [rsi+0x6f],ch
  4037f1:	je     0x4037fd
  4037f3:	and    BYTE PTR [rax],ah
  4037f5:	and    BYTE PTR [rax],ah
  4037f7:	push   rsp
  4037f8:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  4037fc:	ins    BYTE PTR es:[rdi],dx
  4037fd:	and    BYTE PTR gs:[rip+0x74756f20],ch        # 0x74b5a724
  403804:	jo     0x40387b
  403806:	je     0x403828
  403808:	jb     0x40386f
  40380a:	jae    0x403881
  40380c:	ins    BYTE PTR es:[rdi],dx
  40380d:	je     0x403882
  40380f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  403813:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  40381a:	(bad)  
  40381b:	jns    0x40383d
  40381d:	(bad)  
  40381e:	and    BYTE PTR gs:[rbp+0x6e],ah
  403822:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  403826:	gs and BYTE PTR fs:[rcx+0x6e],ch
  40382b:	and    BYTE PTR [rbx+0x69],dh
  40382e:	outs   dx,BYTE PTR ds:[rsi]
  40382f:	ins    BYTE PTR es:[edi],dx
  403831:	and    BYTE PTR gs:[rcx+0x75],dh
  403835:	outs   dx,DWORD PTR ds:[rsi]
  403836:	je     0x40389d
  403838:	jae    0x403844
  40383a:	or     ah,BYTE PTR [rbp+0x78]
  40383d:	(bad)  
  40383e:	ins    DWORD PTR es:[rdi],dx
  40383f:	jo     0x4038ad
  403841:	gs jae 0x40387e
  403844:	or     ah,BYTE PTR [rax]
  403846:	and    BYTE PTR [rax],ah
  403848:	and    BYTE PTR [rdx+0x62],dh
  40384b:	outs   dx,DWORD PTR ds:[rsi]
  40384c:	js     0x40386e
  40384e:	and    BYTE PTR fs:[rax+riz*1+0x71],bh
  403853:	movsxd ebp,DWORD PTR [rdi+0x6e]
  403856:	jbe    0x4038bd
  403858:	js     0x40387a
  40385a:	rex.RX push rcx
  40385c:	and    BYTE PTR [rsi+0x20],ch
  40385f:	jl     0x403881
  403861:	jno    0x4038cb
  403863:	(bad)  
  403864:	ins    BYTE PTR es:[rdi],dx
  403865:	data16 and BYTE PTR [rbx+0x20],dh
  403869:	rex.W xor BYTE PTR [rax+rsi*1],bpl
  40386d:	sub    al,0x30
  40386f:	and    BYTE PTR [rsi+0x70],al
  403872:	or     ah,BYTE PTR [rax]
  403874:	and    BYTE PTR [rax],ah
  403876:	and    BYTE PTR [rdx+0x62],dh
  403879:	outs   dx,DWORD PTR ds:[rsi]
  40387a:	js     0x40389c
  40387c:	movsxd esp,DWORD PTR [rax]
  40387e:	jl     0x4038a0
  403880:	jno    0x4038e5
  403882:	outs   dx,DWORD PTR ds:[rsi]
  403883:	outs   dx,BYTE PTR ds:[rsi]
  403884:	jbe    0x4038eb
  403886:	js     0x4038a8
  403888:	rex.RX push rcx
  40388a:	and    BYTE PTR [rsi+0x56],al
  40388d:	and    BYTE PTR [rsi+0x20],ch
  403890:	jl     0x4038b2
  403892:	jno    0x4038fc
  403894:	(bad)  
  403895:	ins    BYTE PTR es:[rdi],dx
  403896:	data16 and BYTE PTR [rbx+0x20],dh
  40389a:	imul   ecx,DWORD PTR [rdx],0x20202020
  4038a0:	jb     0x403904
  4038a2:	outs   dx,DWORD PTR ds:[rsi]
  4038a3:	js     0x4038c5
  4038a5:	movsxd esp,DWORD PTR [rax]
  4038a7:	jl     0x4038c9
  4038a9:	jno    0x40390e
  4038ab:	outs   dx,DWORD PTR ds:[rsi]
  4038ac:	outs   dx,BYTE PTR ds:[rsi]
  4038ad:	jbe    0x403914
  4038af:	js     0x4038d1
  4038b1:	rex.RX push rcx
  4038b3:	and    BYTE PTR [rsi+0x56],al
  4038b6:	and    BYTE PTR [rsi+0x20],ch
  4038b9:	jl     0x4038db
  4038bb:	jno    0x403925
  4038bd:	(bad)  
  4038be:	ins    BYTE PTR es:[rdi],dx
  4038bf:	data16 and BYTE PTR [rbx+0x20],dh
  4038c3:	outs   dx,DWORD PTR ds:[rsi]
  4038c4:	or     cl,BYTE PTR [rdx]
	...
  4038fe:	add    BYTE PTR [rax],al
  403900:	rex.RXB
  403901:	outs   dx,DWORD PTR gs:[rsi]
  403903:	ins    DWORD PTR es:[rdi],dx
  403904:	jbe    0x40396f
  403906:	gs ja  0x403929
  403909:	outs   dx,DWORD PTR ds:[rsi]
  40390a:	jne    0x403980
  40390c:	jo     0x403983
  40390e:	je     0x403930
  403910:	sub    BYTE PTR [rdx],dh
  403912:	sub    eax,0x33202c64
  403917:	sub    eax,0x6e612064
  40391c:	and    BYTE PTR fs:[rbp*1+0x64203b64],dh
  403924:	jne    0x403987
  403926:	ins    BYTE PTR es:[rdi],dx
  403927:	and    BYTE PTR [rbx+0x6f],ah
  40392a:	outs   dx,BYTE PTR ds:[rsi]
  40392b:	jbe    0x403992
  40392d:	js     0x40394f
  40392f:	push   0x296c6c75
  403934:	or     ah,BYTE PTR [rax]
  403936:	and    BYTE PTR [rax],ah
  403938:	and    BYTE PTR [rdi+0x61],al
  40393b:	and    BYTE PTR [rax],ah
  40393d:	and    BYTE PTR [rip+0x6c6c6120],ch        # 0x6cac9a63
  403943:	and    BYTE PTR [rax+0x6f],dh
  403946:	imul   ebp,DWORD PTR [rsi+0x74],0x69282073
  40394d:	cs gs cs sub al,0x20
  403952:	je     0x4039c6
  403954:	(bad)  
  403955:	outs   dx,BYTE PTR ds:[rsi]
  403956:	jae    0x4039be
  403958:	outs   dx,DWORD PTR ds:[rsi]
  403959:	jb     0x4039c8
  40395b:	gs and BYTE PTR fs:[rax+0x61],ch
  403960:	ins    BYTE PTR es:[rdi],dx
  403961:	data16 jae 0x4039d4
  403964:	(bad)  
  403965:	movsxd esp,DWORD PTR [rbp+0x73]
  403968:	sub    DWORD PTR [rax],esp
  40396a:	(bad)  
  40396b:	jae    0x40398d
  40396d:	outs   dx,DWORD PTR fs:[rsi]
  40396f:	je     0x4039e4
  403971:	or     ah,BYTE PTR [rax]
  403973:	and    BYTE PTR [rax],ah
  403975:	and    BYTE PTR [rax],ah
  403977:	rex.RXB jo 0x40399a
  40397a:	and    BYTE PTR [rip+0x6f632020],ch        # 0x6fa359a0
  403980:	jo     0x4039ee
  403982:	(bad)  
  403983:	outs   dx,BYTE PTR ds:[rsi]
  403984:	(bad)  
  403985:	jb     0x4039a7
  403987:	jo     0x4039f8
  403989:	imul   ebp,DWORD PTR [rsi+0x74],0x6e612073
  403990:	and    BYTE PTR fs:[rsi+0x65],dh
  403994:	jb     0x403a0a
  403996:	imul   esp,DWORD PTR [rbx+0x65],0x73612073
  40399d:	and    BYTE PTR [rdx+0x61],dh
  4039a0:	imul   ebp,DWORD PTR fs:[rcx+0xa],0x20202020
  4039a8:	and    BYTE PTR [rdi+0x76],al
  4039ab:	and    BYTE PTR [rax],ah
  4039ad:	sub    eax,0x65762020
  4039b2:	jb     0x403a28
  4039b4:	imul   esp,DWORD PTR [rbx+0x65],0x69282073
  4039bb:	cs gs cs sub al,0x20
  4039c0:	outs   dx,BYTE PTR ds:[rsi]
  4039c1:	outs   dx,DWORD PTR ds:[rsi]
  4039c2:	outs   dx,BYTE PTR ds:[rsi]
  4039c3:	sub    eax,0x75646572
  4039c8:	outs   dx,BYTE PTR ds:[rsi]
  4039c9:	fs (bad) 
  4039cb:	outs   dx,BYTE PTR ds:[rsi]
  4039cc:	je     0x4039ee
  4039ce:	push   0x73666c61
  4039d3:	jo     0x403a36
  4039d5:	movsxd esp,DWORD PTR [rbp+0x73]
  4039d8:	sub    DWORD PTR [rax],esp
  4039da:	(bad)  
  4039db:	jae    0x4039fd
  4039dd:	jae    0x403a4f
  4039df:	push   0x73657265
  4039e4:	or     ah,BYTE PTR [rax]
  4039e6:	and    BYTE PTR [rax],ah
  4039e8:	and    BYTE PTR [rdi+0x69],al
  4039eb:	and    BYTE PTR [rax],ah
  4039ed:	and    BYTE PTR [rip+0x6e6e6920],ch        # 0x6eaea313
  4039f3:	gs jb  0x403a16
  4039f6:	jo     0x403a64
  4039f8:	(bad)  
  4039f9:	outs   dx,BYTE PTR ds:[rsi]
  4039fa:	gs jae 0x403a1d
  4039fd:	sub    BYTE PTR [rcx+0x2e],ch
  403a00:	gs cs sub al,0x20
  403a04:	push   0x73666c61
  403a09:	jo     0x403a6c
  403a0b:	movsxd esp,DWORD PTR [rbp+0x20]
  403a0e:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403a15:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403a19:	outs   dx,BYTE PTR ds:[rsi]
  403a1a:	jae    0x403a45
  403a1c:	and    BYTE PTR [rdi+0x6e],ch
  403a1f:	ins    BYTE PTR es:[rdi],dx
  403a20:	jns    0x403a2c
  403a22:	and    BYTE PTR [rax],ah
  403a24:	and    BYTE PTR [rax],ah
  403a26:	and    BYTE PTR [rdi+0x6e],al
  403a29:	and    BYTE PTR [rax],ah
  403a2b:	sub    eax,0x6f6e2020
  403a30:	and    BYTE PTR [rax+0x6c],dh
  403a33:	(bad)  
  403a34:	outs   dx,BYTE PTR ds:[rsi]
  403a35:	gs jae 0x403a42
  403a38:	and    BYTE PTR [rax],ah
  403a3a:	and    BYTE PTR [rax],ah
  403a3c:	and    BYTE PTR [rdi+0x6f],al
  403a3f:	and    BYTE PTR [rax],ah
  403a41:	sub    eax,0x756f2020
  403a46:	je     0x403aad
  403a48:	jb     0x403a6a
  403a4a:	jo     0x403ab8
  403a4c:	(bad)  
  403a4d:	outs   dx,BYTE PTR ds:[rsi]
  403a4e:	gs jae 0x403a71
  403a51:	outs   dx,DWORD PTR ds:[rsi]
  403a52:	outs   dx,BYTE PTR ds:[rsi]
  403a53:	ins    BYTE PTR es:[rdi],dx
  403a54:	jns    0x403a60
  403a56:	and    BYTE PTR [rax],ah
  403a58:	and    BYTE PTR [rax],ah
  403a5a:	rex.RXB movsxd r9d,DWORD PTR [r9]
  403a5d:	and    BYTE PTR [rip+0x6e656320],ch        # 0x6ea59d83
  403a63:	je     0x403ad7
  403a65:	jne    0x403ad4
  403a67:	jae    0x403a73
  403a69:	and    BYTE PTR [rax],ah
  403a6b:	and    BYTE PTR [rax],ah
  403a6d:	rex.RXB push 0x2d202020
  403a73:	and    BYTE PTR [rax+0x79],ch
  403a76:	jo     0x403add
  403a78:	jb     0x403aea
  403a7a:	ins    BYTE PTR es:[rdi],dx
  403a7b:	(bad)  
  403a7c:	outs   dx,BYTE PTR ds:[rsi]
  403a7d:	and    BYTE PTR gs:[rcx+0x6e],ch
  403a81:	je     0x403ae8
  403a83:	jb     0x403af8
  403a85:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403a8a:	outs   dx,BYTE PTR ds:[rsi]
  403a8b:	jae    0x403a97
  403a8d:	and    BYTE PTR [rax],ah
  403a8f:	and    BYTE PTR [rax],ah
  403a91:	rex.RXB jb 0x403ab4
  403a94:	and    BYTE PTR [rax],ah
  403a96:	sub    eax,0x64697220
  403a9b:	addr32 gs jae 0x403aa9
  403a9f:	and    BYTE PTR [rax],ah
  403aa1:	and    BYTE PTR [rax],ah
  403aa3:	rex.RXB
  403aa4:	rex.R outs dx,BYTE PTR ds:[rsi]
  403aa6:	and    BYTE PTR [rax],ah
  403aa8:	sub    eax,0x6f726420
  403aad:	jo     0x403acf
  403aaf:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  403ab7:	outs   dx,BYTE PTR ds:[rsi]
  403ab8:	and    BYTE PTR [rsi+0x20],ch
  403abb:	imul   ebp,DWORD PTR [rsi+0x20],0x20642d33
  403ac2:	(bad)  
  403ac3:	outs   dx,BYTE PTR ds:[rsi]
  403ac4:	and    BYTE PTR fs:[rbp*1+0x756f2064],dh
  403acc:	je     0x403b3e
  403ace:	jne    0x403b44
  403ad0:	or     cl,BYTE PTR [rdx]
  403ad2:	push   rax
  403ad3:	jb     0x403b3e
  403ad5:	outs   dx,BYTE PTR ds:[rsi]
  403ad6:	je     0x403af8
  403ad8:	outs   dx,DWORD PTR ds:[rsi]
  403ad9:	jo     0x403b4f
  403adb:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  403ae2:	and    BYTE PTR [rax],ah
  403ae4:	and    BYTE PTR [rax+0x41],dl
  403ae7:	outs   dx,BYTE PTR ds:[rsi]
  403ae8:	and    BYTE PTR [rax],ah
  403aea:	sub    eax,0x65656b20
  403aef:	jo     0x403b11
  403af1:	outs   dx,BYTE PTR ds:[rsi]
  403af2:	and    BYTE PTR [rcx+riz*2+0x72],ch
  403af6:	addr32 gs jae 0x403b6e
  403afa:	and    BYTE PTR [rsi+0x61],ah
  403afd:	movsxd esp,DWORD PTR [rbp+0x74]
  403b00:	jae    0x403b22
  403b02:	sub    BYTE PTR [rcx+0x2e],ch
  403b05:	gs cs sub al,0x20
  403b09:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403b10:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403b14:	outs   dx,BYTE PTR ds:[rsi]
  403b15:	jae    0x403b40
  403b17:	and    BYTE PTR [rdx+0x79],ah
  403b1a:	and    BYTE PTR [rcx+0x72],ah
  403b1d:	gs (bad) 
  403b1f:	or     ah,BYTE PTR [rax]
  403b21:	and    BYTE PTR [rax],ah
  403b23:	and    BYTE PTR [rax+0x64],dl
  403b26:	imul   edi,DWORD PTR [rdx],0x6e
  403b29:	sub    eax,0x6f726420
  403b2e:	jo     0x403b50
  403b30:	data16 (bad) 
  403b32:	movsxd esp,DWORD PTR [rbp+0x74]
  403b35:	and    BYTE PTR [rcx+0x66],ch
  403b38:	and    BYTE PTR [rsi+0x6f],ch
  403b3b:	jb     0x403baa
  403b3d:	(bad)  
  403b3e:	ins    BYTE PTR es:[rdi],dx
  403b3f:	pop    rbx
  403b40:	imul   ebx,DWORD PTR [rbp+0x20],0x3c
  403b44:	cmp    eax,0x28206e20
  403b49:	fs gs data16 (bad) 
  403b4d:	jne    0x403bbb
  403b4f:	je     0x403b71
  403b51:	xor    BYTE PTR [rsi],ch
  403b53:	xor    BYTE PTR [rcx],ch
  403b55:	or     ah,BYTE PTR [rax]
  403b57:	and    BYTE PTR [rax],ah
  403b59:	and    BYTE PTR [rax+0x44],dl
  403b5c:	imul   edi,DWORD PTR [rdx],0x6e
  403b5f:	sub    eax,0x6f726420
  403b64:	jo     0x403b86
  403b66:	data16 (bad) 
  403b68:	movsxd esp,DWORD PTR [rbp+0x74]
  403b6b:	and    BYTE PTR [rcx+0x66],ch
  403b6e:	and    BYTE PTR [rsi+0x6f],ch
  403b71:	jb     0x403be0
  403b73:	(bad)  
  403b74:	ins    BYTE PTR es:[rdi],dx
  403b75:	pop    rbx
  403b76:	imul   ebx,DWORD PTR [rbp+0x20],0x3e
  403b7a:	cmp    eax,0x200a6e20
  403b7f:	and    BYTE PTR [rax],ah
  403b81:	and    BYTE PTR [rax+0x67],dl
  403b84:	and    BYTE PTR [rax],ah
  403b86:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2abac
  403b8c:	outs   dx,BYTE PTR ds:[rsi]
  403b8d:	je     0x403baf
  403b8f:	outs   dx,DWORD PTR ds:[esi]
  403b91:	outs   dx,DWORD PTR ds:[rsi]
  403b92:	and    BYTE PTR fs:[rsi+0x61],ah
  403b96:	movsxd esp,DWORD PTR [rbp+0x74]
  403b99:	jae    0x403bbb
  403b9b:	sub    BYTE PTR [rsi+0x65],ch
  403b9e:	gs fs jae 0x403bc2
  403ba2:	(bad)  
  403ba3:	push   rcx
  403ba4:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  403ba6:	(bad)  
  403ba7:	and    BYTE PTR [rdi+0x72],ch
  403baa:	and    BYTE PTR [rdi],ah
  403bac:	push   rcx
  403bad:	push   rsi
  403bae:	outs   dx,BYTE PTR ds:[rsi]
  403baf:	(bad)  
  403bb0:	sub    DWORD PTR [rdx],ecx
  403bb2:	and    BYTE PTR [rax],ah
  403bb4:	and    BYTE PTR [rax],ah
  403bb6:	push   rax
  403bb7:	rex.RX outs dx,BYTE PTR ds:[rsi]
  403bb9:	and    BYTE PTR [rax],ah
  403bbb:	sub    eax,0x65656b20
  403bc0:	jo     0x403be2
  403bc2:	data16 (bad) 
  403bc4:	movsxd esp,DWORD PTR [rbp+0x74]
  403bc7:	jae    0x403be9
  403bc9:	ja     0x403c33
  403bcb:	outs   dx,DWORD PTR ds:[rsi]
  403bcc:	jae    0x403c33
  403bce:	and    BYTE PTR [rcx+0x72],ah
  403bd1:	gs (bad) 
  403bd3:	and    BYTE PTR [rcx+0x73],ch
  403bd6:	and    BYTE PTR [rcx+0x74],ah
  403bd9:	and    BYTE PTR [rbp+riz*2+0x61],ch
  403bdd:	jae    0x403c53
  403bdf:	and    BYTE PTR [rsi+0xa],ch
  403be2:	and    BYTE PTR [rax],ah
  403be4:	and    BYTE PTR [rax],ah
  403be6:	push   rax
  403be7:	rex.RXB and BYTE PTR [r8],r12b
  403bea:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2ac10
  403bf0:	outs   dx,BYTE PTR ds:[rsi]
  403bf1:	je     0x403c13
  403bf3:	outs   dx,BYTE PTR ds:[rsi]
  403bf4:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  403bfc:	and    BYTE PTR [rdi+0x66],ch
  403bff:	and    BYTE PTR [rdi+0x6f],ah
  403c02:	outs   dx,DWORD PTR ds:[rsi]
  403c03:	and    BYTE PTR fs:[rsi+0x61],ah
  403c07:	movsxd esp,DWORD PTR [rbp+0x74]
  403c0a:	jae    0x403c16
  403c0c:	and    BYTE PTR [rax],ah
  403c0e:	and    BYTE PTR [rax],ah
  403c10:	push   rax
  403c11:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  403c13:	and    BYTE PTR [rax],ah
  403c15:	sub    eax,0x65656b20
  403c1a:	jo     0x403c3c
  403c1c:	outs   dx,BYTE PTR ds:[rsi]
  403c1d:	and    BYTE PTR [rsi+0x61],ah
  403c20:	movsxd esp,DWORD PTR [rbp+0x74]
  403c23:	jae    0x403c45
  403c25:	ja     0x403c90
  403c27:	je     0x403c91
  403c29:	and    BYTE PTR [rbp+0x6f],ch
  403c2c:	jae    0x403ca2
  403c2e:	and    BYTE PTR [rbp+0x65],ch
  403c31:	jb     0x403c9a
  403c33:	gs jae 0x403c40
  403c36:	and    BYTE PTR [rax],ah
  403c38:	and    BYTE PTR [rax],ah
  403c3a:	push   rax
  403c3b:	outs   dx,DWORD PTR ds:[rsi]
  403c3c:	and    BYTE PTR [rax],ah
  403c3e:	and    BYTE PTR [rip+0x726f6620],ch        # 0x72afa264
  403c44:	movsxd esp,DWORD PTR [rbp+0x20]
  403c47:	outs   dx,DWORD PTR ds:[rsi]
  403c48:	jne    0x403cbe
  403c4a:	jo     0x403cc1
  403c4c:	je     0x403c7c
  403c4e:	and    BYTE PTR [rax],ah
  403c50:	rex.WB
  403c51:	data16 and BYTE PTR [rbp+0x72],ah
  403c55:	jb     0x403cc6
  403c57:	jb     0x403c85
  403c59:	and    BYTE PTR [rdi+0x75],ch
  403c5c:	je     0x403cce
  403c5e:	jne    0x403cd4
  403c60:	and    BYTE PTR [rsi+0x65],ch
  403c63:	imul   esp,DWORD PTR [rdi+0x68],0x68726f62
  403c6a:	outs   dx,DWORD PTR ds:[rsi]
  403c6b:	outs   dx,DWORD PTR ds:[rsi]
  403c6c:	and    BYTE PTR fs:[rdi+0x66],ch
  403c70:	and    BYTE PTR [rsi+0x61],ah
  403c73:	movsxd esp,DWORD PTR [rbp+0x74]
  403c76:	or     ah,BYTE PTR [rax]
  403c78:	and    BYTE PTR [rax],ah
  403c7a:	and    BYTE PTR [rax+0x70],dl
  403c7d:	and    BYTE PTR [rax],ah
  403c7f:	and    BYTE PTR [rip+0x206f6420],ch        # 0x20afa0a5
  403c85:	outs   dx,BYTE PTR ds:[rsi]
  403c86:	outs   dx,DWORD PTR ds:[rsi]
  403c87:	je     0x403ca9
  403c89:	jb     0x403cf0
  403c8b:	jo     0x403cfc
  403c8d:	jb     0x403d03
  403c8f:	and    BYTE PTR [rax+0x72],dh
  403c92:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  403c96:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  403c9d:	(bad)  
  403c9e:	ins    BYTE PTR es:[rdi],dx
  403c9f:	gs ins DWORD PTR es:[rdi],dx
  403ca1:	jae    0x403cad
  403ca3:	or     ah,BYTE PTR [rax]
  403ca5:	and    BYTE PTR [rax],ah
  403ca7:	and    BYTE PTR [rsi],ch
  403ca9:	and    BYTE PTR [rax],ah
  403cab:	and    BYTE PTR [rax],ah
  403cad:	sub    eax,0x73696c20
  403cb2:	je     0x403cd4
  403cb4:	outs   dx,DWORD PTR ds:[rsi]
  403cb5:	data16 and BYTE PTR [rcx+0x6c],ah
  403cb9:	ins    BYTE PTR es:[rdi],dx
  403cba:	and    BYTE PTR [rdi+0x70],ch
  403cbd:	je     0x403d28
  403cbf:	outs   dx,DWORD PTR ds:[rsi]
  403cc0:	outs   dx,BYTE PTR ds:[rsi]
  403cc1:	jae    0x403ccd
  403cc3:	and    BYTE PTR [rax],ah
  403cc5:	and    BYTE PTR [rax],ah
  403cc7:	sub    eax,0x20202020
  403ccc:	sub    eax,0x656e6f20
  403cd1:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  403cd5:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
  403cda:	movsxd esi,DWORD PTR [rdx+0x69]
  403cdd:	jo     0x403d53
  403cdf:	imul   ebp,DWORD PTR [rdi+0x6e],0x666f2073
  403ce6:	and    BYTE PTR [rcx+0x6c],ah
  403ce9:	ins    BYTE PTR es:[rdi],dx
  403cea:	and    BYTE PTR [rdi+0x70],ch
  403ced:	je     0x403d58
  403cef:	outs   dx,DWORD PTR ds:[rsi]
  403cf0:	outs   dx,BYTE PTR ds:[rsi]
  403cf1:	jae    0x403cfd
	...
  403cff:	add    BYTE PTR [rbp+0x6f],cl
  403d02:	jb     0x403d69
  403d04:	and    BYTE PTR [rsi+0x6f],ah
  403d07:	jb     0x403d76
  403d09:	(bad)  
  403d0a:	je     0x403d7f
  403d0c:	cmp    cl,BYTE PTR [rdx]
  403d0e:	and    BYTE PTR [rax],ah
  403d10:	and    BYTE PTR [rax],ah
  403d12:	rex.RX movsxd r12d,DWORD PTR [rax]
  403d15:	and    BYTE PTR [rax],ah
  403d17:	sub    eax,0x756f6320
  403d1c:	outs   dx,BYTE PTR ds:[rsi]
  403d1d:	je     0x403d3f
  403d1f:	jo     0x403d8d
  403d21:	jne    0x403d96
  403d23:	and    BYTE PTR [rdx+0x65],dh
  403d26:	fs jne 0x403d97
  403d29:	fs (bad) 
  403d2b:	outs   dx,BYTE PTR ds:[rsi]
  403d2c:	je     0x403d4e
  403d2e:	push   0x73666c61
  403d33:	jo     0x403d96
  403d35:	movsxd esp,DWORD PTR [rbp+0x73]
  403d38:	and    BYTE PTR [rsi+0x6f],ah
  403d3b:	jb     0x403d5d
  403d3d:	gs (bad) 
  403d3f:	movsxd ebp,DWORD PTR [rax+0x20]
  403d42:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403d49:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403d4d:	outs   dx,BYTE PTR ds:[rsi]
  403d4e:	or     ah,BYTE PTR [rax]
  403d50:	and    BYTE PTR [rax],ah
  403d52:	and    BYTE PTR [rax],ah
  403d54:	and    BYTE PTR [rax],ah
  403d56:	and    BYTE PTR [rax],ah
  403d58:	sub    eax,0x51202020
  403d5d:	movsxd esp,DWORD PTR [rax]
  403d5f:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  403d63:	(bad)  
  403d64:	jne    0x403dd2
  403d66:	je     0x403d91
  403d68:	and    BYTE PTR [rsi+0x6f],ah
  403d6b:	jb     0x403d8d
  403d6d:	movsxd ebp,DWORD PTR [rdi+0x70]
  403d70:	ins    BYTE PTR es:[rdi],dx
  403d71:	(bad)  
  403d72:	outs   dx,BYTE PTR ds:[rsi]
  403d73:	(bad)  
  403d74:	jb     0x403d96
  403d76:	(bad)  
  403d77:	outs   dx,BYTE PTR ds:[rsi]
  403d78:	and    BYTE PTR fs:[rcx+0x69],dl
  403d7c:	and    BYTE PTR [rsi+0x6f],ah
  403d7f:	jb     0x403da1
  403d81:	outs   dx,DWORD PTR ds:[rsi]
  403d82:	je     0x403dec
  403d84:	gs jb  0x403da7
  403d87:	jb     0x403dee
  403d89:	fs jne 0x403dfa
  403d8c:	fs (bad) 
  403d8e:	outs   dx,BYTE PTR ds:[rsi]
  403d8f:	je     0x403d9b
  403d91:	and    BYTE PTR [rax],ah
  403d93:	and    BYTE PTR [rax],ah
  403d95:	rex.RX
  403d96:	and    BYTE PTR fs:[rax],ah
  403d99:	and    BYTE PTR [rip+0x65737520],ch        # 0x65b3b2bf
  403d9f:	and    BYTE PTR [rbx+0x64],ah
  403da2:	and    BYTE PTR fs:[rsi+0x6f],ah
  403da6:	jb     0x403e15
  403da8:	(bad)  
  403da9:	je     0x403dcb
  403dab:	outs   dx,WORD PTR ds:[rsi]
  403dad:	jb     0x403dcf
  403daf:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  403db6:	push   0x676f6d6f
  403dbb:	outs   dx,BYTE PTR gs:[rsi]
  403dbd:	outs   dx,DWORD PTR gs:[rsi]
  403dbf:	jne    0x403e34
  403dc1:	and    BYTE PTR [rdi+0x69],dh
  403dc4:	je     0x403e2e
  403dc6:	and    BYTE PTR [rdi+0x66],ch
  403dc9:	data16 jae 0x403e31
  403dcc:	je     0x403dee
  403dce:	imul   si,WORD PTR [rdx+0x73],0x2974
  403dd4:	or     ah,BYTE PTR [rax]
  403dd6:	and    BYTE PTR [rax],ah
  403dd8:	and    BYTE PTR [rsi+0x46],al
  403ddb:	and    BYTE PTR [rax],ah
  403ddd:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1a403
  403de3:	gs je  0x403e06
  403de6:	fs jne 0x403e56
  403de9:	jo     0x403e0b
  403deb:	ja     0x403e56
  403ded:	je     0x403e57
  403def:	outs   dx,DWORD PTR ds:[rsi]
  403df0:	jne    0x403e66
  403df2:	and    BYTE PTR [rdx+0x69],dh
  403df5:	fs addr32 gs jae 0x403e04
  403dfa:	and    BYTE PTR [rax],ah
  403dfc:	and    BYTE PTR [rax],ah
  403dfe:	rex.RX
  403dff:	rex.WB and BYTE PTR [r8],spl
  403e02:	and    BYTE PTR [rip+0x20444920],ch        # 0x20848728
  403e08:	outs   dx,DWORD PTR ds:[rsi]
  403e09:	data16 and BYTE PTR [rbp+0x61],ah
  403e0d:	movsxd ebp,DWORD PTR [rax+0x20]
  403e10:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403e17:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403e1b:	outs   dx,BYTE PTR ds:[rsi]
  403e1c:	or     ah,BYTE PTR [rax]
  403e1e:	and    BYTE PTR [rax],ah
  403e20:	and    BYTE PTR [rsi+0x6d],al
  403e23:	and    BYTE PTR [rax],ah
  403e25:	and    BYTE PTR [rip+0x72656d20],ch        # 0x72a5ab4b
  403e2b:	and    BYTE PTR gs:[ebx+0x6f],ah
  403e30:	jne    0x403ea0
  403e32:	je     0x403e54
  403e34:	outs   dx,WORD PTR ds:[rsi]
  403e36:	jb     0x403e58
  403e38:	gs (bad) 
  403e3a:	movsxd ebp,DWORD PTR [rax+0x20]
  403e3d:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403e44:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403e48:	outs   dx,BYTE PTR ds:[rsi]
  403e49:	and    BYTE PTR [rax],ch
  403e4b:	xor    eax,0x6d203131
  403e50:	(bad)  
  403e51:	js     0x403e7c
  403e53:	or     ah,BYTE PTR [rax]
  403e55:	and    BYTE PTR [rax],ah
  403e57:	and    BYTE PTR [rsi+0x4d],al
  403e5a:	and    BYTE PTR [rax],ah
  403e5c:	and    BYTE PTR [rip+0x70614d20],ch        # 0x70a18b82
  403e62:	ins    BYTE PTR es:[rdi],dx
  403e63:	and    BYTE PTR gs:[rdi+0x75],ch
  403e67:	je     0x403ed9
  403e69:	jne    0x403edf
  403e6b:	and    BYTE PTR [rax],ch
  403e6d:	fs jne 0x403ed1
  403e70:	ins    BYTE PTR es:[rdi],dx
  403e71:	and    BYTE PTR [rbx+0x6f],ah
  403e74:	outs   dx,BYTE PTR ds:[rsi]
  403e75:	jbe    0x403edc
  403e77:	js     0x403e99
  403e79:	push   0x296c6c75
  403e7e:	or     ah,BYTE PTR [rax]
  403e80:	and    BYTE PTR [rax],ah
  403e82:	and    BYTE PTR [rsi+0x6e],al
  403e85:	and    BYTE PTR [rax],ah
  403e87:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa1ad
  403e8d:	outs   dx,BYTE PTR ds:[rsi]
  403e8e:	je     0x403eb0
  403e90:	jo     0x403efe
  403e92:	jne    0x403f07
  403e94:	and    BYTE PTR [rsi+0x65],ch
  403e97:	imul   esp,DWORD PTR [rdi+0x68],0x69726f62
  403e9e:	outs   dx,BYTE PTR ds:[rsi]
  403e9f:	and    BYTE PTR [ecx+0x6e],ch
  403ea3:	je     0x403f0a
  403ea5:	jb     0x403f1a
  403ea7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403eac:	outs   dx,BYTE PTR ds:[rsi]
  403ead:	jae    0x403ecf
  403eaf:	outs   dx,WORD PTR ds:[rsi]
  403eb1:	jb     0x403ed3
  403eb3:	gs (bad) 
  403eb5:	movsxd ebp,DWORD PTR [rax+0x20]
  403eb8:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  403ebf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  403ec3:	outs   dx,BYTE PTR ds:[rsi]
  403ec4:	or     ah,BYTE PTR [rax]
  403ec6:	and    BYTE PTR [rax],ah
  403ec8:	and    BYTE PTR [rsi+0x4e],al
  403ecb:	and    BYTE PTR [rax],ah
  403ecd:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa1f3
  403ed3:	outs   dx,BYTE PTR ds:[rsi]
  403ed4:	je     0x403ef6
  403ed6:	jo     0x403f44
  403ed8:	jne    0x403f4d
  403eda:	and    BYTE PTR [rcx+0x6e],ch
  403edd:	je     0x403f44
  403edf:	jb     0x403f54
  403ee1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403ee6:	outs   dx,BYTE PTR ds:[rsi]
  403ee7:	jae    0x403f09
  403ee9:	outs   dx,WORD PTR ds:[rsi]
  403eeb:	jb     0x403f0d
  403eed:	gs (bad) 
  403eef:	movsxd ebp,DWORD PTR [rax+0x20]
  403ef2:	outs   dx,BYTE PTR ds:[rsi]
  403ef3:	outs   dx,DWORD PTR ds:[rsi]
  403ef4:	outs   dx,BYTE PTR ds:[rsi]
  403ef5:	sub    eax,0x75646572
  403efa:	outs   dx,BYTE PTR ds:[rsi]
  403efb:	fs (bad) 
  403efd:	outs   dx,BYTE PTR ds:[rsi]
  403efe:	je     0x403f20
  403f00:	push   0x73666c61
  403f05:	jo     0x403f68
  403f07:	movsxd esp,DWORD PTR [rbp+0xa]
  403f0a:	and    BYTE PTR [rax],ah
  403f0c:	and    BYTE PTR [rax],ah
  403f0e:	rex.RX
  403f0f:	rex.WRXB and BYTE PTR [r8],r12b
  403f12:	and    BYTE PTR [rip+0x74706f20],ch        # 0x74b0ae38
  403f18:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e612073
  403f1f:	and    BYTE PTR fs:[rax+0x72],dh
  403f23:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  403f27:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
  403f2e:	jae    0x403fa4
  403f30:	(bad)  
  403f31:	outs   dx,BYTE PTR ds:[rsi]
  403f32:	je     0x403fa7
  403f34:	or     ah,BYTE PTR [rax]
  403f36:	and    BYTE PTR [rax],ah
  403f38:	and    BYTE PTR [rsi+0x70],al
  403f3b:	and    BYTE PTR [rax],ah
  403f3d:	and    BYTE PTR [rip+0x6d696420],ch        # 0x6da9a363
  403f43:	sub    al,0x20
  403f45:	movsxd ebp,DWORD PTR [rdi+0x75]
  403f48:	outs   dx,BYTE PTR ds:[rsi]
  403f49:	je     0x403f77
  403f4b:	and    BYTE PTR [rcx+0x6e],ah
  403f4e:	and    BYTE PTR fs:[rcx+0x6e],ch
  403f52:	je     0x403fb9
  403f54:	jb     0x403fc9
  403f56:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403f5b:	outs   dx,BYTE PTR ds:[rsi]
  403f5c:	and    BYTE PTR [rbx+0x6f],ah
  403f5f:	outs   dx,DWORD PTR ds:[rsi]
  403f60:	jb     0x403fc6
  403f62:	imul   ebp,DWORD PTR [rsi+0x61],0xa736574
  403f69:	and    BYTE PTR [rax],ah
  403f6b:	and    BYTE PTR [rax],ah
  403f6d:	rex.RX push rax
  403f6f:	and    BYTE PTR [rax],ah
  403f71:	and    BYTE PTR [rip+0x61656e20],ch        # 0x61a5ad97
  403f77:	jb     0x403fde
  403f79:	jae    0x403fef
  403f7b:	and    BYTE PTR [rax+0x61],ch
  403f7e:	ins    BYTE PTR es:[rdi],dx
  403f7f:	data16 jae 0x403ff2
  403f82:	(bad)  
  403f83:	movsxd esp,DWORD PTR [rbp+0x20]
  403f86:	(bad)  
  403f87:	outs   dx,BYTE PTR ds:[rsi]
  403f88:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ah
  403f8d:	je     0x403ff0
  403f8f:	outs   dx,BYTE PTR ds:[rsi]
  403f90:	movsxd esp,DWORD PTR [rbp+0x20]
  403f93:	outs   dx,WORD PTR ds:[rsi]
  403f95:	jb     0x403fb7
  403f97:	gs (bad) 
  403f99:	movsxd ebp,DWORD PTR [rax+0x20]
  403f9c:	jb     0x404003
  403f9e:	fs jne 0x40400f
  403fa1:	fs (bad) 
  403fa3:	outs   dx,BYTE PTR ds:[rsi]
  403fa4:	je     0x403fc6
  403fa6:	push   0x73666c61
  403fab:	jo     0x40400e
  403fad:	movsxd esp,DWORD PTR [rbp+0xa]
  403fb0:	and    BYTE PTR [rax],ah
  403fb2:	and    BYTE PTR [rax],ah
  403fb4:	rex.RX push rcx
  403fb6:	and    BYTE PTR [rax],ah
  403fb8:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafa2de
  403fbe:	ins    DWORD PTR es:[rdi],dx
  403fbf:	(bad)  
  403fc0:	outs   dx,BYTE PTR ds:[rsi]
  403fc1:	and    BYTE PTR fs:[rbp+0x73],dh
  403fc5:	gs and BYTE PTR fs:[rsi+0x6f],ah
  403fca:	jb     0x403fec
  403fcc:	jno    0x404036
  403fce:	(bad)  
  403fcf:	ins    BYTE PTR es:[rdi],dx
  403fd0:	data16 or ah,BYTE PTR [rax]
  403fd3:	and    BYTE PTR [rax],ah
  403fd5:	and    BYTE PTR [rsi+0x73],al
  403fd8:	and    BYTE PTR [rax],ah
  403fda:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5b300
  403fe0:	ins    DWORD PTR es:[rdi],dx
  403fe1:	(bad)  
  403fe2:	jb     0x40405d
  403fe4:	cmp    ah,BYTE PTR [rax]
  403fe6:	and    ebp,DWORD PTR [rcx+0x6e]
  403fe9:	je     0x40400b
  403feb:	sub    BYTE PTR [rax],bh
  403fed:	sub    DWORD PTR [rax+riz*1],ebp
  403ff0:	imul   ebp,DWORD PTR fs:[rbp+0x2c],0x61682320
  403ff8:	ins    BYTE PTR es:[rdi],dx
  403ff9:	data16 jae 0x40406c
  403ffc:	(bad)  
  403ffd:	movsxd esp,DWORD PTR [rbp+0x73]
  404000:	sub    al,0x20
  404002:	and    ebp,DWORD PTR [rsi+0x6f]
  404005:	outs   dx,BYTE PTR ds:[rsi]
  404006:	sub    eax,0x75646572
  40400b:	outs   dx,BYTE PTR ds:[rsi]
  40400c:	fs (bad) 
  40400e:	outs   dx,BYTE PTR ds:[rsi]
  40400f:	je     0x40403d
  404011:	and    BYTE PTR [rbx],ah
  404013:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  40401a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40401e:	outs   dx,BYTE PTR ds:[rsi]
  40401f:	jae    0x40402b
  404021:	and    BYTE PTR [rax],ah
  404023:	and    BYTE PTR [rax],ah
  404025:	and    BYTE PTR [rax],ah
  404027:	and    BYTE PTR [rax],ah
  404029:	and    BYTE PTR [rax],ah
  40402b:	and    BYTE PTR [rax],ah
  40402d:	and    BYTE PTR [rax],ah
  40402f:	and    BYTE PTR [rax],ah
  404031:	and    BYTE PTR [rax],ah
  404033:	and    BYTE PTR [rax],ah
  404035:	and    BYTE PTR [rax],ah
  404037:	outs   dx,WORD PTR ds:[rsi]
  404039:	jb     0x40405b
  40403b:	outs   dx,DWORD PTR ds:[rsi]
  40403c:	jne    0x4040b2
  40403e:	jo     0x4040b5
  404040:	je     0x40407c
  404042:	and    BYTE PTR [rbx],ah
  404044:	outs   dx,BYTE PTR ds:[rsi]
  404045:	outs   dx,DWORD PTR ds:[rsi]
  404046:	outs   dx,BYTE PTR ds:[rsi]
  404047:	sub    eax,0x75646572
  40404c:	outs   dx,BYTE PTR ds:[rsi]
  40404d:	fs (bad) 
  40404f:	outs   dx,BYTE PTR ds:[rsi]
  404050:	je     0x40407e
  404052:	and    BYTE PTR [rbx],ah
  404054:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  40405b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40405f:	outs   dx,BYTE PTR ds:[rsi]
  404060:	jae    0x40408e
  404062:	and    BYTE PTR [rbx],ah
  404064:	movsxd ebp,DWORD PTR [rdi+0x70]
  404067:	ins    BYTE PTR es:[rdi],dx
  404068:	(bad)  
  404069:	outs   dx,BYTE PTR ds:[rsi]
  40406a:	(bad)  
  40406b:	jb     0x404077
  40406d:	and    BYTE PTR [rax],ah
  40406f:	and    BYTE PTR [rax],ah
  404071:	and    BYTE PTR [rax],ah
  404073:	and    BYTE PTR [rax],ah
  404075:	and    BYTE PTR [rax],ah
  404077:	and    BYTE PTR [rax],ah
  404079:	and    BYTE PTR [rax],ah
  40407b:	and    BYTE PTR [rax],ah
  40407d:	and    BYTE PTR [rax],ah
  40407f:	and    BYTE PTR [rax],ah
  404081:	and    BYTE PTR [rax],ah
  404083:	and    BYTE PTR [rax],ah
  404085:	and    BYTE PTR [rax],ah
  404087:	and    BYTE PTR [rax],ah
  404089:	and    BYTE PTR [rax],ah
  40408b:	and    BYTE PTR [rax],ah
  40408d:	and    BYTE PTR [rax],ah
  40408f:	push   0x73666c61
  404094:	jo     0x4040f7
  404096:	movsxd esp,DWORD PTR [rbp+0x73]
  404099:	sub    al,0x20
  40409b:	and    ebp,DWORD PTR [rsi+0x6f]
  40409e:	outs   dx,BYTE PTR ds:[rsi]
  40409f:	sub    eax,0x706d6973
  4040a4:	ins    BYTE PTR es:[rdi],dx
  4040a5:	imul   esp,DWORD PTR [rbx+0x69],0x69206c61
  4040ac:	outs   dx,BYTE PTR ds:[rsi]
  4040ad:	je     0x404114
  4040af:	jb     0x404124
  4040b1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4040b6:	outs   dx,BYTE PTR ds:[rsi]
  4040b7:	jae    0x4040c3
  4040b9:	and    BYTE PTR [rax],ah
  4040bb:	and    BYTE PTR [rax],ah
  4040bd:	and    BYTE PTR [rax],ah
  4040bf:	and    BYTE PTR [rax],ah
  4040c1:	and    BYTE PTR [rax],ah
  4040c3:	and    BYTE PTR [rax],ah
  4040c5:	and    BYTE PTR [rax],ah
  4040c7:	and    BYTE PTR [rax],ah
  4040c9:	and    BYTE PTR [rax],ah
  4040cb:	and    BYTE PTR [rax],ah
  4040cd:	and    esi,DWORD PTR [rdx+0x65]
  4040d0:	(bad)  
  4040d1:	ins    BYTE PTR es:[rdi],dx
  4040d2:	and    BYTE PTR [rax],ch
  4040d4:	xor    ch,BYTE PTR [rcx]
  4040d6:	sub    al,0x20
  4040d8:	ins    DWORD PTR es:[rdi],dx
  4040d9:	(bad)  
  4040da:	js     0x4040fc
  4040dc:	outs   dx,DWORD PTR ds:[rsi]
  4040dd:	jne    0x404153
  4040df:	gs jb  0x404102
  4040e2:	jo     0x404150
  4040e4:	(bad)  
  4040e5:	outs   dx,BYTE PTR ds:[rsi]
  4040e6:	gs sub al,0x20
  4040e9:	ins    DWORD PTR es:[rdi],dx
  4040ea:	imul   ebp,DWORD PTR [rsi+0x20],0x74726576
  4040f1:	gs js  0x4040fe
  4040f4:	and    BYTE PTR [rax],ah
  4040f6:	and    BYTE PTR [rax],ah
  4040f8:	rex.RX jbe 0x40411b
  4040fb:	and    BYTE PTR [rax],ah
  4040fd:	sub    eax,0x756f6320
  404102:	outs   dx,BYTE PTR ds:[rsi]
  404103:	je     0x404125
  404105:	jo     0x404173
  404107:	jne    0x40417c
  404109:	and    BYTE PTR [rsi+0x6f],ch
  40410c:	outs   dx,BYTE PTR ds:[rsi]
  40410d:	sub    eax,0x75646572
  404112:	outs   dx,BYTE PTR ds:[rsi]
  404113:	fs (bad) 
  404115:	outs   dx,BYTE PTR ds:[rsi]
  404116:	je     0x404138
  404118:	push   0x73666c61
  40411d:	jo     0x404180
  40411f:	movsxd esp,DWORD PTR [rbp+0x73]
  404122:	and    BYTE PTR [rsi+0x6f],ah
  404125:	jb     0x404147
  404127:	gs (bad) 
  404129:	movsxd ebp,DWORD PTR [rax+0x20]
  40412c:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  404133:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  404137:	outs   dx,BYTE PTR ds:[rsi]
  404138:	or     ah,BYTE PTR [rax]
  40413a:	and    BYTE PTR [rax],ah
  40413c:	and    BYTE PTR [rsi+0x78],al
  40413f:	and    BYTE PTR [rax],ah
  404141:	and    BYTE PTR [rip+0x6e6f6e20],ch        # 0x6eafaf67
  404147:	sub    eax,0x75646572
  40414c:	outs   dx,BYTE PTR ds:[rsi]
  40414d:	fs (bad) 
  40414f:	outs   dx,BYTE PTR ds:[rsi]
  404150:	je     0x404172
  404152:	push   0x73666c61
  404157:	jo     0x4041ba
  404159:	movsxd esp,DWORD PTR [rbp+0x73]
  40415c:	or     cl,BYTE PTR [rdx]
	...
  40417e:	add    BYTE PTR [rax],al
  404180:	push   rsp
  404181:	jb     0x4041e4
  404183:	movsxd esp,DWORD PTR [rbp+0x20]
  404186:	outs   dx,DWORD PTR ds:[rsi]
  404187:	jo     0x4041fd
  404189:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  404190:	and    BYTE PTR [rax],ah
  404192:	and    BYTE PTR [rsp+rsi*1+0x20],dl
  404196:	and    BYTE PTR [rax],ah
  404198:	sub    eax,0x61727420
  40419d:	movsxd esp,DWORD PTR [rbp+0x20]
  4041a0:	(bad)  
  4041a1:	je     0x4041c3
  4041a3:	ins    BYTE PTR es:[rdi],dx
  4041a4:	gs jbe 0x40420c
  4041a7:	ins    BYTE PTR es:[rdi],dx
  4041a8:	and    BYTE PTR [rsi+0x2c],ch
  4041ab:	and    BYTE PTR [rdi*1+0x2c6c6c61],dh
  4041b2:	and    BYTE PTR [rip+0x6d656d3d],dh        # 0x6da5aef5
  4041b8:	(bad)  
  4041b9:	addr32 (bad) 
  4041bb:	jne    0x404230
  4041bd:	jae    0x4041eb
  4041bf:	and    BYTE PTR [rip+0x65203d31],ch        # 0x65607ef6
  4041c5:	jbe    0x40422c
  4041c7:	outs   dx,BYTE PTR ds:[rsi]
  4041c8:	je     0x40423d
  4041ca:	or     ah,BYTE PTR [rax]
  4041cc:	and    BYTE PTR [rax],ah
  4041ce:	and    BYTE PTR [rbx+riz*2+0x20],dl
  4041d2:	and    BYTE PTR [rax],ah
  4041d4:	sub    eax,0x65686320
  4041d9:	movsxd ebp,DWORD PTR [rbx+0x20]
  4041dc:	data16 jb 0x404244
  4041df:	jno    0x404256
  4041e1:	outs   dx,BYTE PTR gs:[rsi]
  4041e3:	je     0x404251
  4041e5:	jns    0x404207
  4041e7:	fs jne 0x40425c
  4041ea:	imul   ebp,DWORD PTR [rsi+0x67],0x65786520
  4041f1:	movsxd esi,DWORD PTR [rbp+0x74]
  4041f4:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  4041fb:	and    BYTE PTR [rbx+rsi*2+0x20],dl
  4041ff:	and    BYTE PTR [rax],ah
  404201:	sub    eax,0x69727020
  404206:	outs   dx,BYTE PTR ds:[rsi]
  404207:	je     0x404229
  404209:	jae    0x40427f
  40420b:	(bad)  
  40420c:	je     0x404277
  40420e:	jae    0x404284
  404210:	imul   esp,DWORD PTR [rbx+0x73],0x2020200a
  404217:	and    BYTE PTR [rsi+rsi*2+0x20],dl
  40421b:	and    BYTE PTR [rax],ah
  40421d:	sub    eax,0x72657620
  404222:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  404229:	jne    0x404297
  40422b:	je     0x404267
  40422d:	and    BYTE PTR [rbx+0x74],dh
  404230:	jb     0x4042a7
  404232:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  404236:	gs sub al,0x20
  404239:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40423c:	jbe    0x4042a3
  40423e:	js     0x4042a9
  404240:	je     0x4042bb
  404242:	sub    al,0x20
  404244:	(bad)  
  404245:	outs   dx,BYTE PTR ds:[rsi]
  404246:	and    BYTE PTR fs:[rdx+0x65],dh
  40424a:	fs jne 0x4042bb
  40424d:	fs (bad) 
  40424f:	outs   dx,BYTE PTR ds:[rsi]
  404250:	movsxd edi,DWORD PTR [rcx+0xa]
  404253:	and    BYTE PTR [rax],ah
  404255:	and    BYTE PTR [rax],ah
  404257:	push   rsp
  404258:	jp     0x40427a
  40425a:	and    BYTE PTR [rax],ah
  40425c:	sub    eax,0x6e657320
  404261:	and    BYTE PTR fs:[rcx+0x6c],ah
  404265:	ins    BYTE PTR es:[rdi],dx
  404266:	and    BYTE PTR [rdi+0x75],ch
  404269:	je     0x4042db
  40426b:	jne    0x4042e1
  40426d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  404271:	jae    0x4042e7
  404273:	outs   dx,DWORD PTR fs:[rsi]
  404275:	jne    0x4042eb
  404277:	or     ah,BYTE PTR [rax]
  404279:	and    BYTE PTR [rax],ah
  40427b:	and    BYTE PTR [rsi+rax*2+0x6e],dl
  40427f:	and    BYTE PTR [rax],ah
  404281:	sub    eax,0x70657220
  404286:	outs   dx,DWORD PTR ds:[rsi]
  404287:	jb     0x4042fd
  404289:	and    BYTE PTR [rbx+0x75],dh
  40428c:	ins    DWORD PTR es:[rdi],dx
  40428d:	ins    DWORD PTR es:[rdi],dx
  40428e:	(bad)  
  40428f:	jb     0x40430a
  404291:	and    BYTE PTR [rdi+0x68],dh
  404294:	outs   dx,BYTE PTR gs:[rsi]
  404296:	and    BYTE PTR [rsi+0x20],ch
  404299:	outs   dx,DWORD PTR ds:[rsi]
  40429a:	jb     0x4042bc
  40429c:	ins    DWORD PTR es:[rdi],dx
  40429d:	outs   dx,DWORD PTR ds:[rsi]
  40429e:	jb     0x404305
  4042a0:	and    BYTE PTR [rsi+0x61],ah
  4042a3:	movsxd esp,DWORD PTR [rbp+0x74]
  4042a6:	jae    0x4042c8
  4042a8:	movsxd esi,DWORD PTR [rdx+0x65]
  4042ab:	(bad)  
  4042ac:	je     0x404313
  4042ae:	or     ah,BYTE PTR fs:[rax]
  4042b1:	and    BYTE PTR [rax],ah
  4042b3:	and    BYTE PTR [rcx+rcx*2+0x20],dl
  4042b7:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x202d
  4042be:	imul   ebp,DWORD PTR [rsi+0x70],0x64207475
  4042c5:	(bad)  
  4042c6:	je     0x404329
  4042c8:	and    BYTE PTR [rsi+0x72],ah
  4042cb:	outs   dx,DWORD PTR ds:[rsi]
  4042cc:	ins    DWORD PTR es:[rdi],dx
  4042cd:	and    BYTE PTR [rsi+0x69],ah
  4042d0:	ins    BYTE PTR es:[rdi],dx
  4042d1:	gs sub al,0x20
  4042d4:	outs   dx,BYTE PTR ds:[rsi]
  4042d5:	outs   dx,DWORD PTR ds:[rsi]
  4042d6:	and    BYTE PTR [rbx+0x70],dh
  4042d9:	(bad)  
  4042da:	movsxd esp,DWORD PTR [rbp+0x73]
  4042dd:	and    BYTE PTR [rdi+0x72],ch
  4042e0:	and    BYTE PTR [rbx+0x69],dh
  4042e3:	outs   dx,BYTE PTR ds:[rsi]
  4042e4:	ins    BYTE PTR es:[edi],dx
  4042e6:	and    BYTE PTR gs:[rcx+0x75],dh
  4042ea:	outs   dx,DWORD PTR ds:[rsi]
  4042eb:	je     0x404352
  4042ed:	jae    0x4042f9
  4042ef:	and    BYTE PTR [rax],ah
  4042f1:	and    BYTE PTR [rax],ah
  4042f3:	push   rsp
  4042f4:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  4042f8:	ins    BYTE PTR es:[rdi],dx
  4042f9:	and    BYTE PTR gs:[rip+0x74756f20],ch        # 0x74b5b220
  404300:	jo     0x404377
  404302:	je     0x404324
  404304:	jb     0x40436b
  404306:	jae    0x40437d
  404308:	ins    BYTE PTR es:[rdi],dx
  404309:	je     0x40437e
  40430b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40430f:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  404316:	(bad)  
  404317:	jns    0x404339
  404319:	(bad)  
  40431a:	and    BYTE PTR gs:[rbp+0x6e],ah
  40431e:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  404322:	gs and BYTE PTR fs:[rcx+0x6e],ch
  404327:	and    BYTE PTR [rbx+0x69],dh
  40432a:	outs   dx,BYTE PTR ds:[rsi]
  40432b:	ins    BYTE PTR es:[edi],dx
  40432d:	and    BYTE PTR gs:[rcx+0x75],dh
  404331:	outs   dx,DWORD PTR ds:[rsi]
  404332:	je     0x404399
  404334:	jae    0x404340
  404336:	and    BYTE PTR [rax],ah
  404338:	and    BYTE PTR [rax],ah
  40433a:	push   rsp
  40433b:	push   rax
  40433c:	outs   dx,BYTE PTR ds:[rsi]
  40433d:	and    BYTE PTR [rax],ah
  40433f:	sub    eax,0x72757420
  404344:	outs   dx,BYTE PTR ds:[rsi]
  404345:	and    BYTE PTR [rdi+0x6e],ch
  404348:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  40434c:	movsxd ebp,DWORD PTR [rcx+0x6e]
  40434f:	and    BYTE PTR [edi+0x68],dh
  404353:	outs   dx,BYTE PTR gs:[rsi]
  404355:	and    BYTE PTR [rax+0x61],ch
  404358:	ins    BYTE PTR es:[rdi],dx
  404359:	data16 jae 0x4043cc
  40435c:	(bad)  
  40435d:	movsxd esp,DWORD PTR [rbp+0x20]
  404360:	outs   dx,BYTE PTR ds:[rsi]
  404361:	and    BYTE PTR [rcx+0x64],ah
  404364:	fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40436b:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  404372:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  404376:	outs   dx,BYTE PTR ds:[rsi]
  404377:	or     ah,BYTE PTR [rax]
  404379:	and    BYTE PTR [rax],ah
  40437b:	and    BYTE PTR [rbp+rcx*2+0x6e],dl
  40437f:	and    BYTE PTR [rax],ah
  404381:	sub    eax,0x72757420
  404386:	outs   dx,BYTE PTR ds:[rsi]
  404387:	and    BYTE PTR [rdi+0x6e],ch
  40438a:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  40438e:	movsxd ebp,DWORD PTR [rcx+0x6e]
  404391:	and    BYTE PTR [ecx+0x74],ah
  404395:	and    BYTE PTR [rbp+0x65],ch
  404398:	jb     0x404401
  40439a:	and    BYTE PTR gs:[rsi+0xa],ch
  40439e:	and    BYTE PTR [rax],ah
  4043a0:	and    BYTE PTR [rax],ah
  4043a2:	push   rsp
  4043a3:	push   rdi
  4043a4:	outs   dx,BYTE PTR ds:[rsi]
  4043a5:	and    BYTE PTR [rax],ah
  4043a7:	sub    eax,0x61727420
  4043ac:	movsxd esp,DWORD PTR [rbp+0x20]
  4043af:	ins    DWORD PTR es:[rdi],dx
  4043b0:	gs jb  0x40441a
  4043b3:	and    BYTE PTR gs:[rsi+0x61],ah
  4043b7:	movsxd esp,DWORD PTR [rbp+0x74]
  4043ba:	jae    0x4043dc
  4043bc:	ja     0x404426
  4043be:	outs   dx,BYTE PTR gs:[rsi]
  4043c0:	and    BYTE PTR [rdi+0x69],dh
  4043c3:	fs je  0x40442e
  4043c6:	and    BYTE PTR [rsi],bh
  4043c8:	and    BYTE PTR [rsi+0xa],ch
  4043cb:	and    BYTE PTR [rax],ah
  4043cd:	and    BYTE PTR [rax],ah
  4043cf:	push   rsp
  4043d0:	push   rsi
  4043d1:	outs   dx,BYTE PTR ds:[rsi]
  4043d2:	and    BYTE PTR [rax],ah
  4043d4:	sub    eax,0x6f747320
  4043d9:	jo     0x4043fb
  4043db:	jno    0x404445
  4043dd:	jne    0x40444b
  4043df:	ins    BYTE PTR es:[rdi],dx
  4043e0:	and    BYTE PTR [rcx+0x66],ah
  4043e3:	je     0x40444a
  4043e5:	jb     0x404407
  4043e7:	(bad)  
  4043e8:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6c616820
  4043f1:	data16 jae 0x404464
  4043f4:	(bad)  
  4043f5:	movsxd esp,DWORD PTR [rbp+0x20]
  4043f8:	outs   dx,BYTE PTR ds:[rsi]
  4043f9:	sub    al,0x20
  4043fb:	sub    eax,0x6f66206e
  404400:	jb     0x404422
  404402:	(bad)  
  404403:	outs   dx,WORD PTR gs:[rsi]
  404406:	jb     0x40446d
  404408:	and    BYTE PTR [rax],ch
  40440a:	jae    0x404471
  40440c:	and    BYTE PTR gs:[rbx+rax*2+0x6e],dl
  404411:	sub    DWORD PTR [rdx],ecx
  404413:	and    BYTE PTR [rax],ah
  404415:	and    BYTE PTR [rax],ah
  404417:	push   rsp
  404418:	rex.XB outs dx,BYTE PTR ds:[rsi]
  40441a:	and    BYTE PTR [rax],ah
  40441c:	sub    eax,0x6f747320
  404421:	jo     0x404443
  404423:	jno    0x40448d
  404425:	jne    0x404493
  404427:	ins    BYTE PTR es:[rdi],dx
  404428:	and    BYTE PTR [rcx+0x66],ah
  40442b:	je     0x404492
  40442d:	jb     0x40444f
  40442f:	(bad)  
  404430:	jne    0x40449b
  404432:	ins    BYTE PTR es:[rdi],dx
  404433:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e6f6320
  40443b:	and    BYTE PTR gs:[rsi+0x6f],ah
  40443f:	jb     0x404461
  404441:	push   0x73666c61
  404446:	jo     0x4044a9
  404448:	movsxd esp,DWORD PTR [rbp+0x20]
  40444b:	outs   dx,BYTE PTR ds:[rsi]
  40444c:	and    BYTE PTR [rax],ch
  40444e:	jae    0x4044b5
  404450:	and    BYTE PTR gs:[rsi+rdx*2+0x6e],dl
  404455:	sub    DWORD PTR [rdx],ecx
  404457:	or     dl,BYTE PTR [rax+0x72]
  40445a:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  40445e:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f20
  404465:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  40446c:	and    BYTE PTR [rax],ah
  40446e:	and    BYTE PTR [rbx+0x6e],al
  404471:	and    BYTE PTR [rax],ah
  404473:	and    BYTE PTR [rip+0x64617220],ch        # 0x64a1b699
  404479:	imul   esi,DWORD PTR [rbp+0x73],0x20666f20
  404480:	movsxd esp,DWORD PTR [rbp+0x6e]
  404483:	je     0x4044f7
  404485:	jne    0x4044f4
  404487:	and    BYTE PTR [rax],ch
  404489:	jb     0x4044fa
  40448b:	jne    0x4044fb
  40448d:	outs   dx,DWORD PTR fs:[rsi]
  40448f:	data16 data16 and BYTE PTR [rcx+0x64],ah
  404494:	fs gs sub DWORD PTR fs:[rsi],ebp
  404499:	and    BYTE PTR [rax],ah
  40449b:	rex.WRB
  40449c:	gs jb  0x404506
  40449f:	and    BYTE PTR gs:[rsi+0x61],ah
  4044a3:	movsxd esp,DWORD PTR [rbp+0x74]
  4044a6:	jae    0x4044c8
  4044a8:	imul   esp,DWORD PTR [rsi+0x20],0x2d6e6f6e
  4044af:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4044b2:	jbe    0x404519
  4044b4:	js     0x4044c0
  4044b6:	and    BYTE PTR [rax],ah
  4044b8:	and    BYTE PTR [rax],ah
  4044ba:	and    BYTE PTR [rcx+0x6e],al
  4044bd:	and    BYTE PTR [rax],ah
  4044bf:	sub    eax,0x736f6320
  4044c4:	imul   ebp,DWORD PTR [rsi+0x65],0x20666f20
  4044cb:	ins    DWORD PTR es:[rdi],dx
  4044cc:	(bad)  
  4044cd:	js     0x404538
  4044cf:	ins    DWORD PTR es:[rdi],dx
  4044d0:	jne    0x40453f
  4044d2:	and    BYTE PTR [rcx+0x6e],ah
  4044d5:	ins    BYTE PTR es:[edi],dx
  4044d7:	gs and BYTE PTR cs:[rax],ah
  4044db:	rex.WRB
  4044dc:	gs jb  0x404546
  4044df:	and    BYTE PTR gs:[rsi+0x61],ah
  4044e3:	movsxd esp,DWORD PTR [rbp+0x74]
  4044e6:	jae    0x404508
  4044e8:	imul   esp,DWORD PTR [rsi+0x20],0x69736f63
  4044ef:	outs   dx,BYTE PTR ds:[rsi]
  4044f0:	and    BYTE PTR gs:[rsi],bh
  4044f3:	and    BYTE PTR [rsi+0x20],ch
  4044f6:	outs   dx,DWORD PTR ds:[rsi]
  4044f7:	jb     0x404519
  4044f9:	outs   dx,BYTE PTR ds:[rsi]
  4044fa:	outs   dx,DWORD PTR ds:[rsi]
  4044fb:	outs   dx,BYTE PTR ds:[rsi]
  4044fc:	sub    eax,0x766e6f63
  404501:	gs js  0x40450e
  404504:	and    BYTE PTR [rax],ah
  404506:	and    BYTE PTR [rax],ah
  404508:	and    BYTE PTR [rax],ah
  40450a:	and    BYTE PTR [rax],ah
  40450c:	and    BYTE PTR [rax],ah
  40450e:	and    BYTE PTR [rbx+0x2d],al
  404511:	xor    BYTE PTR [rax],ah
  404513:	jb     0x404584
  404515:	jne    0x404585
  404517:	outs   dx,DWORD PTR fs:[rsi]
  404519:	data16 data16 sub al,0x20
  40451d:	rex.B sub eax,0x39392e30
  404523:	(bad)  
  404524:	rex.XB sub eax,0x31302e30
  40452a:	and    BYTE PTR [rax+0x72],dh
  40452d:	gs sub eax,0x6772656d
  404533:	gs sub al,0x20
  404536:	xor    BYTE PTR [r14],bpl
  404539:	cmp    DWORD PTR [rcx],edi
  40453b:	(bad)  
  40453c:	rex.XB xor BYTE PTR [r14],bpl
  40453f:	xor    BYTE PTR [rcx],dh
  404541:	and    BYTE PTR [rax+0x6f],dh
  404544:	jae    0x4045ba
  404546:	sub    eax,0x6772656d
  40454b:	or     ah,BYTE PTR gs:[rax]
  40454e:	and    BYTE PTR [rax],ah
  404550:	and    BYTE PTR [rdx+0x6e],dl
  404553:	and    BYTE PTR [rax],ah
  404555:	and    BYTE PTR [rip+0x6e617220],ch        # 0x6ea1b77b
  40455b:	outs   dx,DWORD PTR fs:[rsi]
  40455d:	ins    DWORD PTR es:[rdi],dx
  40455e:	ins    BYTE PTR es:[rdi],dx
  40455f:	jns    0x404581
  404561:	jo     0x4045c8
  404563:	jb     0x4045d9
  404565:	jne    0x4045d9
  404567:	(bad)  
  404568:	and    BYTE PTR [rbx+0x6f],ah
  40456b:	ins    DWORD PTR es:[rdi],dx
  40456c:	jo     0x4045e3
  40456e:	je     0x4045d1
  404570:	je     0x4045db
  404572:	outs   dx,DWORD PTR ds:[rsi]
  404573:	outs   dx,BYTE PTR ds:[rsi]
  404574:	jae    0x404596
  404576:	(bad)  
  404577:	jns    0x404599
  404579:	(bad)  
  40457a:	and    BYTE PTR [rsi+0x61],ah
  40457d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  404581:	and    BYTE PTR [rdi+0x66],ch
  404584:	and    BYTE PTR [rbx+0x31],bl
  404587:	sub    eax,0x2b312c6e
  40458c:	outs   dx,BYTE PTR ds:[rsi]
  40458d:	pop    rbp
  40458e:	or     ah,BYTE PTR [rax]
  404590:	and    BYTE PTR [rax],ah
  404592:	and    BYTE PTR [rbp+0x6e],dl
  404595:	and    BYTE PTR [rax],ah
  404597:	and    BYTE PTR [rip+0x78616d20],ch        # 0x78a1b2bd
  40459d:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4045a1:	je     0x404604
  4045a3:	outs   dx,BYTE PTR ds:[rsi]
  4045a4:	movsxd esp,DWORD PTR [rbp+0x20]
  4045a7:	(bad)  
  4045a8:	gs ins BYTE PTR es:[rdi],dx
  4045aa:	outs   dx,DWORD PTR ds:[rsi]
  4045ab:	ja     0x4045cd
  4045ad:	jo     0x40461b
  4045af:	(bad)  
  4045b0:	outs   dx,BYTE PTR ds:[rsi]
  4045b1:	and    BYTE PTR gs:[rsi+0x6f],ah
  4045b5:	jb     0x4045d7
  4045b7:	(bad)  
  4045b8:	and    BYTE PTR [rsi+0x65],ch
  4045bb:	ja     0x4045e9
  4045bd:	and    BYTE PTR [rbx+0x6f],ah
  4045c0:	jo     0x40462e
  4045c2:	(bad)  
  4045c3:	outs   dx,BYTE PTR ds:[rsi]
  4045c4:	(bad)  
  4045c5:	jb     0x4045e7
  4045c7:	push   0x73666c61
  4045cc:	jo     0x40462f
  4045ce:	movsxd esp,DWORD PTR [rbp+0xa]
  4045d1:	and    BYTE PTR [rax],ah
  4045d3:	and    BYTE PTR [rax],ah
  4045d5:	push   rdi
  4045d6:	outs   dx,BYTE PTR ds:[rsi]
  4045d7:	and    BYTE PTR [rax],ah
  4045d9:	and    BYTE PTR [rip+0x6e696d20],ch        # 0x6ea9b2ff
  4045df:	and    BYTE PTR [rsi+0x61],ah
  4045e2:	movsxd esp,DWORD PTR [rbp+0x74]
  4045e5:	and    BYTE PTR [rdi+0x69],dh
  4045e8:	fs je  0x404653
  4045eb:	and    BYTE PTR [rsi+0x6f],ah
  4045ee:	jb     0x404610
  4045f0:	outs   dx,DWORD PTR ds:[rsi]
  4045f1:	jne    0x404667
  4045f3:	jae    0x40465e
  4045f5:	fs and BYTE PTR gs:[rax+0x61],ch
  4045fa:	ins    BYTE PTR es:[rdi],dx
  4045fb:	data16 jae 0x40466e
  4045fe:	(bad)  
  4045ff:	movsxd esp,DWORD PTR [rbp+0x20]
  404602:	sub    BYTE PTR [rdx+0x65],ah
  404605:	outs   dx,WORD PTR ds:[rsi]
  404607:	jb     0x40466e
  404609:	and    BYTE PTR [rdx+0x6f],dh
  40460c:	jne    0x40467c
  40460e:	outs   dx,DWORD PTR fs:[rsi]
  404610:	data16 sub WORD PTR [rdx],cx
  404614:	or     cl,BYTE PTR [rdi+0x75]
  404617:	je     0x404689
  404619:	jne    0x40468f
  40461b:	and    BYTE PTR [rsi+0x6f],ah
  40461e:	jb     0x40468d
  404620:	(bad)  
  404621:	je     0x404696
  404623:	and    BYTE PTR [rax],ch
  404625:	ins    DWORD PTR es:[rdi],dx
  404626:	(bad)  
  404627:	jns    0x404649
  404629:	(bad)  
  40462a:	and    BYTE PTR gs:[rbx+0x6f],ah
  40462e:	ins    DWORD PTR es:[rdi],dx
  40462f:	(bad)  
  404630:	imul   ebp,DWORD PTR [rsi+0x65],0x69203b64
  404637:	data16 and BYTE PTR [rsi+0x6f],ch
  40463b:	outs   dx,BYTE PTR ds:[rsi]
  40463c:	gs sub al,0x20
  40463f:	jo     0x4046b3
  404641:	outs   dx,DWORD PTR ds:[rsi]
  404642:	fs jne 0x4046a8
  404645:	gs jae 0x404668
  404648:	(bad)  
  404649:	and    BYTE PTR [rbx+0x75],dh
  40464c:	ins    DWORD PTR es:[rdi],dx
  40464d:	ins    DWORD PTR es:[rdi],dx
  40464e:	(bad)  
  40464f:	jb     0x4046ca
  404651:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  404655:	jae    0x4046cb
  404657:	outs   dx,DWORD PTR fs:[rsi]
  404659:	jne    0x4046cf
  40465b:	sub    DWORD PTR [rdx],edi
  40465d:	or     ah,BYTE PTR [rax]
  40465f:	and    BYTE PTR [rax],ah
  404661:	and    BYTE PTR [rsi+0x20],ah
  404664:	and    BYTE PTR [rax],ah
  404666:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1ac8c
  40466c:	gs je  0x40468f
  40466f:	fs jne 0x4046df
  404672:	jo     0x40467e
  404674:	and    BYTE PTR [rax],ah
  404676:	and    BYTE PTR [rax],ah
  404678:	rex.RXB and BYTE PTR [r8],r12b
  40467b:	and    BYTE PTR [rax],ah
  40467d:	sub    eax,0x6f654720
  404682:	ins    DWORD PTR es:[rdi],dx
  404683:	jbe    0x4046ee
  404685:	gs ja  0x4046a8
  404688:	outs   dx,DWORD PTR ds:[rsi]
  404689:	jne    0x4046ff
  40468b:	jo     0x404702
  40468d:	je     0x4046af
  40468f:	sub    BYTE PTR [rbp+rsi*2+0x61],ah
  404693:	ins    BYTE PTR es:[rdi],dx
  404694:	and    BYTE PTR [rbx+0x6f],ah
  404697:	outs   dx,BYTE PTR ds:[rsi]
  404698:	jbe    0x4046ff
  40469a:	js     0x4046bc
  40469c:	push   0x296c6c75
  4046a1:	or     ah,BYTE PTR [rax]
  4046a3:	and    BYTE PTR [rax],ah
  4046a5:	and    BYTE PTR [rcx+0x20],ch
  4046a8:	and    BYTE PTR [rax],ah
  4046aa:	and    BYTE PTR [rip+0x6e6f6e20],ch        # 0x6eafb4d0
  4046b0:	sub    eax,0x75646572
  4046b5:	outs   dx,BYTE PTR ds:[rsi]
  4046b6:	fs (bad) 
  4046b8:	outs   dx,BYTE PTR ds:[rsi]
  4046b9:	je     0x4046db
  4046bb:	push   0x73666c61
  4046c0:	jo     0x404723
  4046c2:	movsxd esp,DWORD PTR [rbp+0x73]
  4046c5:	and    BYTE PTR [rcx+0x6e],ch
  4046c8:	movsxd ebp,DWORD PTR [rcx+0x64]
  4046cb:	outs   dx,BYTE PTR gs:[rsi]
  4046cd:	je     0x4046ef
  4046cf:	je     0x404740
  4046d1:	and    BYTE PTR [rbp+0x61],ah
  4046d4:	movsxd ebp,DWORD PTR [rax+0x20]
  4046d7:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  4046de:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4046e2:	outs   dx,BYTE PTR ds:[rsi]
  4046e3:	or     ah,BYTE PTR [rax]
  4046e5:	and    BYTE PTR [rax],ah
  4046e7:	and    BYTE PTR [rbp+0x20],ch
  4046ea:	and    BYTE PTR [rax],ah
  4046ec:	and    BYTE PTR [rip+0x74614d20],ch        # 0x74a19412
  4046f2:	push   0x74616d65
  4046f7:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  4046fe:	jo     0x404775
  404700:	je     0x404722
  404702:	sub    BYTE PTR [rbp+rsi*2+0x61],ah
  404706:	ins    BYTE PTR es:[rdi],dx
  404707:	and    BYTE PTR [rbx+0x6f],ah
  40470a:	outs   dx,BYTE PTR ds:[rsi]
  40470b:	jbe    0x404772
  40470d:	js     0x40472f
  40470f:	push   0x296c6c75
  404714:	or     ah,BYTE PTR [rax]
  404716:	and    BYTE PTR [rax],ah
  404718:	and    BYTE PTR [rdi+0x20],ch
  40471b:	and    BYTE PTR [rax],ah
  40471d:	and    BYTE PTR [rip+0x46464f20],ch        # 0x46869643
  404723:	and    BYTE PTR [rsi+0x6f],ah
  404726:	jb     0x404795
  404728:	(bad)  
  404729:	je     0x40474b
  40472b:	sub    BYTE PTR [rbp+rsi*2+0x61],ah
  40472f:	ins    BYTE PTR es:[rdi],dx
  404730:	and    BYTE PTR [rbx+0x6f],ah
  404733:	outs   dx,BYTE PTR ds:[rsi]
  404734:	jbe    0x40479b
  404736:	js     0x404758
  404738:	push   0x3a6c6c75
  40473d:	and    BYTE PTR [rcx+rbp*2+0x6d],ah
  404741:	outs   dx,BYTE PTR gs:[rsi]
  404743:	jae    0x4047ae
  404745:	outs   dx,DWORD PTR ds:[rsi]
  404746:	outs   dx,BYTE PTR ds:[rsi]
  404747:	sub    al,0x20
  404749:	jo     0x4047ba
  40474b:	imul   ebp,DWORD PTR [rsi+0x74],0x61202c73
  404752:	outs   dx,BYTE PTR ds:[rsi]
  404753:	and    BYTE PTR fs:[rsi+0x61],ah
  404757:	movsxd esp,DWORD PTR [rbp+0x74]
  40475a:	jae    0x404785
  40475c:	or     ah,BYTE PTR [rax]
  40475e:	and    BYTE PTR [rax],ah
  404760:	and    BYTE PTR [rax+0x20],dh
  404763:	and    BYTE PTR [rax],ah
  404765:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5bd8b
  40476b:	je     0x4047d2
  40476d:	js     0x40478f
  40476f:	movsxd ebp,DWORD PTR [rdi+0x6f]
  404772:	jb     0x4047d8
  404774:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  40477b:	outs   dx,DWORD PTR ds:[rsi]
  40477c:	data16 and BYTE PTR [rbp+rsi*2+0x61],ah
  404781:	ins    BYTE PTR es:[rdi],dx
  404782:	and    BYTE PTR [rbx+0x6f],ah
  404785:	outs   dx,BYTE PTR ds:[rsi]
  404786:	jbe    0x4047ed
  404788:	js     0x4047aa
  40478a:	push   0x206c6c75
  40478f:	sub    BYTE PTR [rbx+0x6f],ah
  404792:	jo     0x404800
  404794:	(bad)  
  404795:	outs   dx,BYTE PTR ds:[rsi]
  404796:	(bad)  
  404797:	jb     0x40480c
  404799:	and    BYTE PTR [rcx+0x66],ch
  40479c:	and    BYTE PTR [rdi],ah
  40479e:	push   rcx
  40479f:	movsxd esp,DWORD PTR [rdi]
  4047a1:	and    BYTE PTR [rdi+0x72],ch
  4047a4:	and    BYTE PTR [rdi],ah
  4047a6:	push   rcx
  4047a7:	imul   esp,DWORD PTR [rdi],0x20200a29
  4047ad:	and    BYTE PTR [rax],ah
  4047af:	jae    0x4047d1
  4047b1:	and    BYTE PTR [rax],ah
  4047b3:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5bad9
  4047b9:	ins    DWORD PTR es:[rdi],dx
  4047ba:	(bad)  
  4047bb:	jb     0x404836
  4047bd:	and    BYTE PTR [rax],ch
  4047bf:	jae    0x404835
  4047c1:	fs gs jb 0x404837
  4047c5:	sub    DWORD PTR [rdx],ecx
  4047c7:	or     al,BYTE PTR [rax]
	...
  4047fd:	add    BYTE PTR [rax],al
  4047ff:	add    BYTE PTR [rax],ah
  404801:	and    BYTE PTR [rax],ah
  404803:	and    BYTE PTR [rcx+0x62],dl
  404806:	imul   edi,DWORD PTR [rdx],0x30
  404809:	rex.X imul edi,DWORD PTR [rdx],0x30
  40480d:	and    BYTE PTR [rip+0x6d657220],ch        # 0x6da5ba33
  404813:	outs   dx,DWORD PTR ds:[rsi]
  404814:	jbe    0x40487b
  404816:	and    BYTE PTR [rbx+0x2d],ch
  404819:	je     0x404883
  40481b:	and    BYTE PTR [rbx+0x6f],ah
  40481e:	outs   dx,DWORD PTR ds:[rsi]
  40481f:	jb     0x404885
  404821:	imul   ebp,DWORD PTR [rsi+0x61],0x66206574
  404828:	jb     0x404899
  40482a:	ins    DWORD PTR es:[rdi],dx
  40482b:	and    BYTE PTR [rcx+0x6e],ch
  40482e:	jo     0x4048a5
  404830:	je     0x40483c
  404832:	and    BYTE PTR [rax],ah
  404834:	and    BYTE PTR [rax],ah
  404836:	push   rcx
  404837:	jae    0x404859
  404839:	and    BYTE PTR [rax],ah
  40483b:	sub    eax,0x61657320
  404840:	jb     0x4048a5
  404842:	push   0x6c6c6120
  404847:	and    BYTE PTR [rax+0x61],ch
  40484a:	ins    BYTE PTR es:[rdi],dx
  40484b:	data16 jae 0x4048be
  40484e:	(bad)  
  40484f:	movsxd esp,DWORD PTR [rbp+0x73]
  404852:	and    BYTE PTR [rsi+0x6f],ah
  404855:	jb     0x404877
  404857:	je     0x4048c1
  404859:	and    BYTE PTR gs:[rcx+0x6e],ch
  40485d:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6973206c
  404865:	ins    DWORD PTR es:[rdi],dx
  404866:	jo     0x4048d4
  404868:	gs js  0x404875
  40486b:	and    BYTE PTR [rax],ah
  40486d:	and    BYTE PTR [rax],ah
  40486f:	push   rcx
  404870:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  404872:	and    BYTE PTR [rax],ah
  404874:	sub    eax,0x69727020
  404879:	outs   dx,BYTE PTR ds:[rsi]
  40487a:	je     0x40489c
  40487c:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  404883:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  404887:	outs   dx,BYTE PTR ds:[rsi]
  404888:	and    BYTE PTR [rcx+0x66],ch
  40488b:	and    BYTE PTR [rsi+0x69],dh
  40488e:	jae    0x4048f9
  404890:	(bad)  
  404891:	ins    BYTE PTR es:[rdi],dx
  404892:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  404897:	push   0x73666c61
  40489c:	jo     0x4048ff
  40489e:	movsxd esp,DWORD PTR [rbp+0x20]
  4048a1:	outs   dx,BYTE PTR ds:[rsi]
  4048a2:	sub    al,0x20
  4048a4:	sub    eax,0x6f66206e
  4048a9:	jb     0x4048cb
  4048ab:	outs   dx,BYTE PTR ds:[rsi]
  4048ac:	outs   dx,DWORD PTR ds:[rsi]
  4048ad:	je     0x4048b9
  4048af:	and    BYTE PTR [rax],ah
  4048b1:	and    BYTE PTR [rax],ah
  4048b3:	push   rcx
  4048b4:	push   rsi
  4048b5:	outs   dx,BYTE PTR ds:[rsi]
  4048b6:	and    BYTE PTR [rax],ah
  4048b8:	sub    eax,0x69727020
  4048bd:	outs   dx,BYTE PTR ds:[rsi]
  4048be:	je     0x4048e0
  4048c0:	imul   ebp,DWORD PTR [rsi+0x74],0x65737265
  4048c7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4048cb:	outs   dx,BYTE PTR ds:[rsi]
  4048cc:	jae    0x4048ee
  4048ce:	outs   dx,WORD PTR ds:[rsi]
  4048d0:	jb     0x4048f2
  4048d2:	push   0x73666c61
  4048d7:	jo     0x40493a
  4048d9:	movsxd esp,DWORD PTR [rbp+0x20]
  4048dc:	outs   dx,BYTE PTR ds:[rsi]
  4048dd:	sub    al,0x20
  4048df:	sub    eax,0x6669206e
  4048e4:	and    BYTE PTR [rsi+0x6f],ch
  4048e7:	je     0x4048f3
  4048e9:	or     al,BYTE PTR [rax]
	...
  4048ff:	add    BYTE PTR [rdx],cl
  404901:	jno    0x40496b
  404903:	(bad)  
  404904:	ins    BYTE PTR es:[rdi],dx
  404905:	sub    ax,0x6320
  404909:	outs   dx,DWORD PTR ds:[rsi]
  40490a:	ins    DWORD PTR es:[rdi],dx
  40490b:	jo     0x404982
  40490d:	je     0x404974
  40490f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  404913:	and    BYTE PTR [rcx+0x6e],ch
  404916:	je     0x40497d
  404918:	jb     0x40498d
  40491a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40491f:	outs   dx,BYTE PTR ds:[rsi]
  404920:	and    BYTE PTR [rdi+0x66],ch
  404923:	and    BYTE PTR [rax+0x61],ch
  404926:	ins    BYTE PTR es:[rdi],dx
  404927:	data16 jae 0x40499a
  40492a:	(bad)  
  40492b:	movsxd esp,DWORD PTR [rbp+0x73]
  40492e:	and    BYTE PTR [rcx+0x62],ah
  404931:	outs   dx,DWORD PTR ds:[rsi]
  404932:	jne    0x4049a8
  404934:	and    BYTE PTR [rcx+0x20],ah
  404937:	jo     0x4049a8
  404939:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  404940:	and    BYTE PTR [rax+0x74],ch
  404943:	je     0x4049b5
  404945:	cmp    ch,BYTE PTR [rdi]
  404947:	(bad)  
  404948:	ja     0x4049c1
  40494a:	ja     0x40497a
  40494c:	jno    0x4049b6
  40494e:	jne    0x4049bc
  404950:	ins    BYTE PTR es:[rdi],dx
  404951:	outs   dx,DWORD PTR cs:[rsi]
  404953:	jb     0x4049bc
  404955:	and    BYTE PTR [rax],ah
  404957:	and    eax,0x690a0a73
  40495c:	outs   dx,BYTE PTR ds:[rsi]
  40495d:	jo     0x4049d4
  40495f:	je     0x404981
  404961:	sub    BYTE PTR [rbx+0x74],dh
  404964:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x20200a3a
  40496c:	and    BYTE PTR [rax],ah
  40496e:	outs   dx,DWORD PTR ds:[rsi]
  40496f:	jo     0x4049e5
  404971:	imul   ebp,DWORD PTR [rdi+0x6e],0x69206c61
  404978:	outs   dx,BYTE PTR ds:[rsi]
  404979:	je     0x4049e0
  40497b:	jb     0x4049e6
  40497d:	outs   dx,DWORD PTR ds:[rsi]
  40497e:	jb     0x4049a0
  404980:	jo     0x4049f1
  404982:	imul   ebp,DWORD PTR [rsi+0x74],0x6964203a
  404989:	ins    DWORD PTR es:[rdi],dx
  40498a:	outs   dx,BYTE PTR gs:[rsi]
  40498c:	jae    0x4049f7
  40498e:	outs   dx,DWORD PTR ds:[rsi]
  40498f:	outs   dx,BYTE PTR ds:[rsi]
  404990:	sub    al,0x20
  404992:	xor    DWORD PTR [rax+riz*1],ebp
  404995:	movsxd ebp,DWORD PTR [rdi+0x6f]
  404998:	jb     0x4049fe
  40499a:	imul   ebp,DWORD PTR [rsi+0x61],0xa736574
  4049a1:	and    BYTE PTR [rax],ah
  4049a3:	and    BYTE PTR [rax],ah
  4049a5:	imul   si,WORD PTR [rdx+0x73],0x2074
  4049ab:	ins    BYTE PTR es:[rdi],dx
  4049ac:	imul   ebp,DWORD PTR [rsi+0x65],0x64203a73
  4049b3:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  4049ba:	outs   dx,BYTE PTR ds:[rsi]
  4049bb:	sub    esi,DWORD PTR [rcx]
  4049bd:	and    BYTE PTR [rcx+0x6e],ah
  4049c0:	and    BYTE PTR fs:[rsi+0x75],ch
  4049c4:	ins    DWORD PTR es:[rdi],dx
  4049c5:	(bad)  
  4049c6:	gs jb  0x4049e9
  4049c9:	outs   dx,DWORD PTR ds:[rsi]
  4049ca:	data16 and BYTE PTR [rax+0x61],ch
  4049ce:	ins    BYTE PTR es:[rdi],dx
  4049cf:	data16 jae 0x404a42
  4049d2:	(bad)  
  4049d3:	movsxd esp,DWORD PTR [rbp+0x73]
  4049d6:	or     ah,BYTE PTR [rax]
  4049d8:	and    BYTE PTR [rax],ah
  4049da:	and    BYTE PTR [rdi+0x74],ch
  4049dd:	push   0x6c207265
  4049e2:	imul   ebp,DWORD PTR [rsi+0x65],0x68203a73
  4049e9:	(bad)  
  4049ea:	ins    BYTE PTR es:[rdi],dx
  4049eb:	data16 jae 0x404a5e
  4049ee:	(bad)  
  4049ef:	movsxd esp,DWORD PTR [rbp+0x20]
  4049f2:	movsxd ebp,DWORD PTR [rdi+0x65]
  4049f5:	data16 imul sp,WORD PTR [rbx+0x69],0x6e65
  4049fc:	je     0x404a71
  4049fe:	and    BYTE PTR [rsi+0x6f],ah
  404a01:	ins    BYTE PTR es:[rdi],dx
  404a02:	ins    BYTE PTR es:[rdi],dx
  404a03:	outs   dx,DWORD PTR ds:[rsi]
  404a04:	ja     0x404a6b
  404a06:	and    BYTE PTR fs:[rdx+0x79],ah
  404a0a:	and    BYTE PTR [rdi+0x66],ch
  404a0d:	data16 jae 0x404a75
  404a10:	je     0x404a1c
  404a12:	and    BYTE PTR [rax],ah
  404a14:	and    BYTE PTR [rax],ah
  404a16:	movsxd ebp,DWORD PTR [rdi+0x6d]
  404a19:	ins    DWORD PTR es:[rdi],dx
  404a1a:	outs   dx,BYTE PTR gs:[rsi]
  404a1c:	je     0x404a91
  404a1e:	cmp    ah,BYTE PTR [rax]
  404a20:	and    BYTE PTR [rax],ah
  404a22:	and    BYTE PTR [rbx+0x74],dh
  404a25:	(bad)  
  404a26:	jb     0x404a9c
  404a28:	and    BYTE PTR [rdi+0x69],dh
  404a2b:	je     0x404a95
  404a2d:	and    BYTE PTR [rcx+0x20],ah
  404a30:	outs   dx,BYTE PTR ds:[rsi]
  404a31:	outs   dx,DWORD PTR ds:[rsi]
  404a32:	outs   dx,BYTE PTR ds:[rsi]
  404a33:	sub    eax,0x656d756e
  404a38:	jb     0x404aa3
  404a3a:	movsxd esp,DWORD PTR [rax]
  404a3c:	movsxd ebp,DWORD PTR [rax+0x61]
  404a3f:	jb     0x404aa2
  404a41:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  404a45:	or     cl,BYTE PTR [rdx]
  404a47:	outs   dx,DWORD PTR ds:[rsi]
  404a48:	jo     0x404abe
  404a4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  404a51:	and    BYTE PTR [rax],ah
  404a53:	and    BYTE PTR [rax+0x6e],cl
  404a56:	sub    al,0x6e
  404a58:	and    BYTE PTR [rip+0x65707320],ch        # 0x65b0bd7e
  404a5e:	movsxd ebp,DWORD PTR [rcx+0x66]
  404a61:	jns    0x404a83
  404a63:	movsxd ebp,DWORD PTR [rdi+0x6f]
  404a66:	jb     0x404acc
  404a68:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  404a6f:	outs   dx,DWORD PTR ds:[rsi]
  404a70:	data16 and BYTE PTR [rcx+0x6e],ch
  404a74:	je     0x404adb
  404a76:	jb     0x404ae1
  404a78:	outs   dx,DWORD PTR ds:[rsi]
  404a79:	jb     0x404a9b
  404a7b:	jo     0x404aec
  404a7d:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  404a84:	and    BYTE PTR [rcx+0x74],dl
  404a87:	and    BYTE PTR [rax],ah
  404a89:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2beaf
  404a8f:	(bad)  
  404a90:	outs   dx,BYTE PTR ds:[rsi]
  404a91:	addr32 jne 0x404b00
  404a94:	(bad)  
  404a95:	je     0x404afc
  404a97:	and    BYTE PTR fs:[rdi+0x75],ch
  404a9b:	je     0x404b0d
  404a9d:	jne    0x404b13
  404a9f:	or     ah,BYTE PTR [rax]
  404aa1:	and    BYTE PTR [rax],ah
  404aa3:	and    BYTE PTR [rcx+0x4a],dl
  404aa6:	and    BYTE PTR [rax],ah
  404aa8:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67afb4ce
  404aae:	ins    BYTE PTR es:[edi],dx
  404ab0:	gs and BYTE PTR fs:[rcx+0x6e],ch
  404ab5:	jo     0x404b2c
  404ab7:	je     0x404ad9
  404ab9:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  404ac0:	and    BYTE PTR [rdi+0x66],ch
  404ac3:	and    BYTE PTR [rbp+0x65],ch
  404ac6:	jb     0x404b2f
  404ac8:	gs and BYTE PTR fs:[rsi+0x61],ah
  404acd:	movsxd esp,DWORD PTR [rbp+0x74]
  404ad0:	jae    0x404adc
  404ad2:	and    BYTE PTR [rax],ah
  404ad4:	and    BYTE PTR [rax],ah
  404ad6:	push   rcx
  404ad7:	movsxd esp,DWORD PTR [rax]
  404ad9:	and    BYTE PTR [rax],ah
  404adb:	sub    eax,0x65656b20
  404ae0:	jo     0x404b02
  404ae2:	movsxd ebp,DWORD PTR [rdi+0x70]
  404ae5:	ins    BYTE PTR es:[rdi],dx
  404ae6:	(bad)  
  404ae7:	outs   dx,BYTE PTR ds:[rsi]
  404ae8:	(bad)  
  404ae9:	jb     0x404b0b
  404aeb:	push   0x73666c61
  404af0:	jo     0x404b53
  404af2:	movsxd esp,DWORD PTR [rbp+0x73]
  404af5:	or     ah,BYTE PTR [rax]
  404af7:	and    BYTE PTR [rax],ah
  404af9:	and    BYTE PTR [rcx+0x69],dl
  404afc:	and    BYTE PTR [rax],ah
  404afe:	and    BYTE PTR [rip+0x65656b20],ch        # 0x65a5b624
  404b04:	jo     0x404b26
  404b06:	outs   dx,DWORD PTR ds:[rsi]
  404b07:	je     0x404b71
  404b09:	gs jb  0x404b2c
  404b0c:	jb     0x404b73
  404b0e:	fs jne 0x404b7f
  404b11:	fs (bad) 
  404b13:	outs   dx,BYTE PTR ds:[rsi]
  404b14:	je     0x404b36
  404b16:	push   0x73666c61
  404b1b:	jo     0x404b7e
  404b1d:	movsxd esp,DWORD PTR [rbp+0x73]
  404b20:	or     cl,BYTE PTR [rdx]
  404b22:	push   rcx
  404b23:	push   0x206c6c75
  404b28:	movsxd ebp,DWORD PTR [rdi+0x6e]
  404b2b:	je     0x404b9f
  404b2d:	outs   dx,DWORD PTR ds:[rsi]
  404b2e:	ins    BYTE PTR es:[rdi],dx
  404b2f:	and    BYTE PTR [rdi+0x70],ch
  404b32:	je     0x404b9d
  404b34:	outs   dx,DWORD PTR ds:[rsi]
  404b35:	outs   dx,BYTE PTR ds:[rsi]
  404b36:	jae    0x404b72
  404b38:	or     ah,BYTE PTR [rax]
  404b3a:	and    BYTE PTR [rax],ah
  404b3c:	and    BYTE PTR [rcx+0x4a],dl
  404b3f:	outs   dx,BYTE PTR ds:[rsi]
  404b40:	and    BYTE PTR [rax],ah
  404b42:	sub    eax,0x6e617220
  404b47:	outs   dx,DWORD PTR fs:[rsi]
  404b49:	ins    DWORD PTR es:[rdi],dx
  404b4a:	ins    BYTE PTR es:[rdi],dx
  404b4b:	jns    0x404b6d
  404b4d:	push   0x6f
  404b4f:	addr32 ins BYTE PTR es:[edi],dx
  404b52:	and    BYTE PTR gs:[rcx+0x6e],ch
  404b56:	jo     0x404bcd
  404b58:	je     0x404b7a
  404b5a:	imul   ebp,DWORD PTR [rsi+0x20],0x676e6172
  404b61:	and    BYTE PTR gs:[rbx+0x2d],bl
  404b65:	outs   dx,BYTE PTR ds:[rsi]
  404b66:	sub    al,0x6e
  404b68:	pop    rbp
  404b69:	or     ah,BYTE PTR [rip+0x25732573]        # 0x25b370e2
  404b6f:	jae    0x404b96
  404b71:	jae    0x404b73
	...
  404b7f:	add    BYTE PTR [rax],ah
  404b81:	and    BYTE PTR fs:[rsi+0x20],ch
  404b85:	jbe    0x404ba7
  404b87:	push   rcx
  404b88:	(bad)  
  404b8a:	and    BYTE PTR [rcx+0x62],dl
  404b8d:	rex.X and BYTE PTR [rcx+0x66],dl
  404b91:	and    BYTE PTR [rcx+0x67],dl
  404b94:	and    BYTE PTR [rcx+0x6d],dl
  404b97:	and    BYTE PTR [rcx+0x72],dl
  404b9a:	and    BYTE PTR [rcx+0x52],dl
  404b9d:	and    BYTE PTR [rcx+0x76],dl
  404ba0:	and    BYTE PTR [rcx+0x78],dl
  404ba3:	and    BYTE PTR [rcx+0x7a],dl
  404ba6:	and    BYTE PTR [rdx+rdx*2+0x20],dl
  404baa:	and    BYTE PTR [r14+0x20],r10b
  404bae:	rex.RX (bad) 
  404bb0:	and    BYTE PTR [rsi+0x41],al
  404bb3:	and    BYTE PTR [rsi+0x43],al
  404bb6:	and    BYTE PTR [rsi+0x44],al
  404bb9:	and    BYTE PTR [rsi+0x53],al
  404bbc:	and    BYTE PTR [rsi+0x74],al
  404bbf:	and    BYTE PTR [rsi+0x56],al
  404bc2:	and    BYTE PTR [rdi+0x74],al
  404bc5:	and    BYTE PTR [rcx+0x30],dl
  404bc8:	and    BYTE PTR [rcx+0x31],dl
  404bcb:	and    BYTE PTR [rcx+0x32],dl
  404bce:	and    BYTE PTR [rcx+0x33],dl
  404bd1:	and    BYTE PTR [rcx+0x34],dl
  404bd4:	and    BYTE PTR [rcx+0x35],dl
  404bd7:	and    BYTE PTR [rcx+0x36],dl
  404bda:	and    BYTE PTR [rcx+0x37],dl
  404bdd:	and    BYTE PTR [rcx+0x38],dl
  404be0:	and    BYTE PTR [rcx+0x39],dl
  404be3:	and    BYTE PTR [rax],al
	...
  404bfd:	add    BYTE PTR [rax],al
  404bff:	add    BYTE PTR [rax+0x402f],bh
	...
  404c0d:	add    BYTE PTR [rax],al
  404c0f:	add    bh,bh
  404c11:	(bad)  
  404c12:	(bad)  
  404c13:	(bad)  
  404c14:	(bad)  
  404c15:	(bad)  
  404c16:	(bad)  
  404c17:	inc    DWORD PTR [rax]
  404c19:	add    BYTE PTR [rax],al
  404c1b:	add    BYTE PTR [rax],al
  404c1d:	add    BYTE PTR [rax],al
  404c1f:	add    bh,bh
	...
  404c2d:	add    BYTE PTR [rax],al
  404c2f:	add    BYTE PTR [rdx],al
	...
  404c3d:	add    BYTE PTR [rax],al
  404c3f:	add    bh,bh
  404c41:	(bad)  
  404c42:	(bad)  
  404c43:	inc    DWORD PTR [rax]
	...
  404c4d:	add    BYTE PTR [rax],al
  404c4f:	add    al,ah
  404c51:	sub    eax,DWORD PTR [rax+0x0]
  404c54:	add    BYTE PTR [rax],al
  404c56:	add    BYTE PTR [rax],al
  404c58:	lock sub eax,DWORD PTR [rax+0x0]
  404c5c:	add    BYTE PTR [rax],al
  404c5e:	add    BYTE PTR [rax],al
  404c60:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  404c6e:	add    BYTE PTR [rax],al
  404c70:	int    0x5d
  404c72:	and    dl,dl
  404c74:	data16 (bad) 
  404c76:	(bad)  
  404c77:	inc    DWORD PTR [rax]
  404c79:	add    BYTE PTR [rax],al
  404c7b:	add    BYTE PTR [rax],al
  404c7d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	rex.W (bad) 
  405002:	ins    BYTE PTR es:[rdi],dx
  405003:	data16 jae 0x405076
  405006:	(bad)  
  405007:	movsxd esp,DWORD PTR [rbp+0x0]
  40500a:	add    BYTE PTR [rax],al
  40500c:	add    BYTE PTR [rax],al
  40500e:	add    BYTE PTR [rax],al
  405010:	jno    0x40507a
  405012:	jne    0x405080
  405014:	ins    BYTE PTR es:[rdi],dx
  405015:	and    BYTE PTR [rbp+0x72],ah
  405018:	jb     0x405089
  40501a:	jb     0x405056
  40501c:	and    BYTE PTR [rdi+0x70],ch
  40501f:	je     0x40508a
  405021:	outs   dx,DWORD PTR ds:[rsi]
  405022:	outs   dx,BYTE PTR ds:[rsi]
  405023:	jae    0x405045
  405025:	(bad)  
  405026:	push   rcx
  405027:	(bad)  
  405028:	imul   edi,DWORD PTR [rdx],0x6e
  40502b:	(bad)  
  40502c:	and    BYTE PTR [rcx+0x6e],ah
  40502f:	and    BYTE PTR fs:[rdi],ah
  405032:	push   rcx
  405033:	rex.X imul edi,DWORD PTR [rdx],0x6e
  405037:	(bad)  
  405038:	and    BYTE PTR [rcx+0x72],ah
  40503b:	and    BYTE PTR gs:[rsi+0x6f],ch
  40503f:	je     0x405061
  405041:	jne    0x4050b6
  405043:	gs and BYTE PTR fs:[rdi+0x69],dh
  405048:	je     0x4050b2
  40504a:	and    BYTE PTR [rcx+0x68],dh
  40504d:	(bad)  
  40504e:	ins    BYTE PTR es:[rdi],dx
  40504f:	data16 or ah,BYTE PTR cs:[rax]
  405053:	and    BYTE PTR [rax],ah
  405055:	and    BYTE PTR [rax],ah
  405057:	and    BYTE PTR [rax],ah
  405059:	and    BYTE PTR [rax],ah
  40505b:	and    BYTE PTR [rax],ah
  40505d:	and    BYTE PTR [rax],ah
  40505f:	push   rbp
  405060:	jae    0x4050c7
  405062:	and    BYTE PTR [rdi],ah
  405064:	push   rcx
  405065:	(bad)  
  405066:	imul   edi,DWORD PTR [rdx],0x30
  405069:	rex.X imul edi,DWORD PTR [rdx],0x30
  40506d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  405071:	fs jb  0x4050e3
  405074:	jo     0x405096
  405076:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  40507e:	outs   dx,BYTE PTR ds:[rsi]
  40507f:	and    BYTE PTR [rbx+0x2e],ch
  405082:	or     al,BYTE PTR [rax]
  405084:	push   rcx
  405085:	js     0x4050e8
  405087:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6d]
  40508b:	gs jb  0x4050f5
  40508e:	add    BYTE PTR gs:[rcx+0x68],dh
  405092:	jne    0x405100
  405094:	ins    BYTE PTR es:[rdi],dx
  405095:	and    BYTE PTR [rcx+0x6e],ch
  405098:	je     0x4050ff
  40509a:	jb     0x40510a
  40509c:	(bad)  
  40509d:	ins    BYTE PTR es:[rdi],dx
  40509e:	and    BYTE PTR [rdi+0x61],dh
  4050a1:	jb     0x405111
  4050a3:	imul   ebp,DWORD PTR [rsi+0x67],0x616d2820
  4050aa:	imul   ebp,DWORD PTR [rsi+0x29],0x6964203a
  4050b1:	and    BYTE PTR fs:[rsi+0x6f],ch
  4050b5:	je     0x4050d7
  4050b7:	data16 jb 0x40511f
  4050ba:	and    BYTE PTR gs:[rip+0x79622064],ah        # 0x79a27125
  4050c1:	je     0x405128
  4050c3:	jae    0x4050e5
  4050c5:	outs   dx,DWORD PTR ds:[rsi]
  4050c6:	data16 and BYTE PTR [rdi+rbp*2+0x6e],ch
  4050cb:	and    BYTE PTR [ebp+0x65],ch
  4050cf:	ins    DWORD PTR es:[rdi],dx
  4050d0:	outs   dx,DWORD PTR ds:[rsi]
  4050d1:	jb     0x40514c
  4050d3:	and    BYTE PTR [rax],ch
  4050d5:	and    eax,0x69702064
  4050da:	movsxd esp,DWORD PTR gs:[rbp+0x73]
  4050de:	sub    DWORD PTR [rdx],ecx
	...
  4050f0:	add    BYTE PTR [rbp+0x40],0x0
  4050f7:	add    BYTE PTR [rax+0x4080],al
  4050fd:	add    BYTE PTR [rax],al
  4050ff:	add    BYTE PTR [rax+0x19],ah
  405102:	add    BYTE PTR [rax],al
	...
  40510d:	add    BYTE PTR [rax],al
  40510f:	add    BYTE PTR [rcx+0x72],al
  405112:	addr32 jne 0x405182
  405115:	outs   dx,BYTE PTR gs:[rsi]
  405117:	je     0x405139
  405119:	outs   dx,DWORD PTR fs:[rsi]
  40511b:	ins    DWORD PTR es:[rdi],dx
  40511c:	(bad)  
  40511d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405124:	jb     0x405146
  405126:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40512a:	rex.B
  40512b:	rex.WB
  40512c:	rex.WRX sub QWORD PTR [rax],r8
  40512f:	rex.B jb 0x405199
  405132:	jne    0x4051a1
  405134:	outs   dx,BYTE PTR gs:[rsi]
  405136:	je     0x405158
  405138:	jae    0x4051a3
  40513a:	outs   dx,BYTE PTR ds:[rsi]
  40513b:	addr32 jne 0x4051aa
  40513e:	(bad)  
  40513f:	jb     0x4051aa
  405141:	je     0x4051bc
  405143:	and    BYTE PTR [rax],ch
  405145:	push   rbx
  405146:	rex.WB
  405147:	rex.RXB
  405148:	rex.WRX sub QWORD PTR [rax],r8
  40514b:	add    BYTE PTR [rax],al
  40514d:	add    BYTE PTR [rax],al
  40514f:	add    BYTE PTR [rdi+0x76],cl
  405152:	gs jb  0x4051bb
  405155:	ins    BYTE PTR es:[rdi],dx
  405156:	outs   dx,DWORD PTR ds:[rsi]
  405157:	ja     0x405179
  405159:	jb     0x4051bc
  40515b:	outs   dx,BYTE PTR ds:[rsi]
  40515c:	and    BYTE PTR gs:[ebp+0x72],ah
  405161:	jb     0x4051d2
  405163:	jb     0x405185
  405165:	sub    BYTE PTR [rdi+0x56],cl
  405168:	rex.RB push r10
  40516a:	rex.RX
  40516b:	rex.WR
  40516c:	rex.WRXB push r15
  40516e:	sub    DWORD PTR [rax],eax
  405170:	push   rax
  405171:	(bad)  
  405172:	jb     0x4051e8
  405174:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40517b:	jae    0x40519d
  40517d:	outs   dx,DWORD PTR ds:[rsi]
  40517e:	data16 and BYTE PTR [rbx+0x69],dh
  405182:	outs   dx,BYTE PTR ds:[esi]
  405184:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40518b:	and    BYTE PTR gs:[rax],ch
  40518e:	push   rax
  40518f:	rex.WR
  405190:	rex.WRXB push r11
  405192:	push   rbx
  405193:	sub    DWORD PTR [rax],eax
  405195:	add    BYTE PTR [rax],al
  405197:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40519b:	(bad)  
  40519c:	ins    BYTE PTR es:[rdi],dx
  40519d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4051a1:	jae    0x4051c3
  4051a3:	outs   dx,DWORD PTR ds:[rsi]
  4051a4:	data16 and BYTE PTR [rbx+0x69],dh
  4051a8:	outs   dx,BYTE PTR ds:[esi]
  4051aa:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4051b1:	and    BYTE PTR gs:[rax],ch
  4051b4:	push   rsp
  4051b5:	rex.WR
  4051b6:	rex.WRXB push r11
  4051b8:	push   rbx
  4051b9:	sub    DWORD PTR [rax],eax
  4051bb:	add    BYTE PTR [rax],al
  4051bd:	add    BYTE PTR [rax],al
  4051bf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4051c3:	and    BYTE PTR [rdx+0x65],dh
  4051c6:	jae    0x40523d
  4051c8:	ins    BYTE PTR es:[rdi],dx
  4051c9:	je     0x4051eb
  4051cb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4051d2:	jae    0x405241
  4051d4:	(bad)  
  4051d5:	ins    BYTE PTR es:[rdi],dx
  4051d6:	ins    BYTE PTR es:[rdi],dx
  4051d7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4051db:	(bad)  
  4051dc:	and    BYTE PTR gs:[rdx+0x65],dh
  4051e0:	jo     0x405254
  4051e2:	gs jae 0x40524a
  4051e5:	outs   dx,BYTE PTR ds:[rsi]
  4051e6:	je     0x40524d
  4051e8:	and    BYTE PTR fs:[rax],ch
  4051eb:	push   rbp
  4051ec:	rex.WRX
  4051ed:	rex.R
  4051ee:	rex.RB push r10
  4051f0:	rex.RX
  4051f1:	rex.WR
  4051f2:	rex.WRXB push r15
  4051f4:	sub    DWORD PTR [rax],eax
  4051f6:	push   rbp
  4051f7:	outs   dx,BYTE PTR ds:[rsi]
  4051f8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4051fc:	outs   dx,BYTE PTR ds:[rsi]
  4051fd:	and    BYTE PTR [rbp+0x72],ah
  405200:	jb     0x405271
  405202:	jb     0x405204
  405204:	add    BYTE PTR [rax],al
  405206:	add    BYTE PTR [rax],al
  405208:	pop    rdi
  405209:	ins    DWORD PTR es:[rdi],dx
  40520a:	(bad)  
  40520b:	je     0x405275
  40520d:	gs jb  0x405282
  405210:	sub    BYTE PTR [rcx],ch
  405212:	cmp    ah,BYTE PTR [rax]
  405214:	and    eax,0x6e692073
  405219:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657a92
  40521f:	sub    al,0x20
  405221:	and    eax,0x20202967
  405226:	sub    BYTE PTR [rdx+0x65],dh
  405229:	je     0x4052a1
  40522b:	(bad)  
  40522c:	ins    BYTE PTR es:[rdi],dx
  40522d:	cmp    eax,0xa296725
  405232:	add    BYTE PTR [rax],al
  405234:	cld    
  405235:	enter  0xffff,0x3d
  405239:	enter  0xffff,0xac
  40523d:	enter  0xffff,0xbc
  405241:	enter  0xffff,0xcc
  405245:	enter  0xffff,0xdc
  405249:	enter  0xffff,0xec
  40524d:	enter  0xffff,0x4d
  405251:	imul   ebp,DWORD PTR [rsi+0x67],0x36772d77
  405258:	xor    al,0x20
  40525a:	jb     0x4052d1
  40525c:	outs   dx,BYTE PTR ds:[rsi]
  40525d:	je     0x4052c8
  40525f:	ins    DWORD PTR es:[rdi],dx
  405260:	and    BYTE PTR gs:[rsi+0x61],ah
  405264:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40526c:	add    BYTE PTR [rax],al
  40526e:	add    BYTE PTR [rax],al
  405270:	rex.B
  405271:	fs fs jb 0x4052da
  405275:	jae    0x4052ea
  405277:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a872ed
  40527d:	jae    0x40529f
  40527f:	outs   dx,BYTE PTR ds:[rsi]
  405280:	outs   dx,DWORD PTR ds:[rsi]
  405281:	and    BYTE PTR [rcx+0x6d],ch
  405284:	(bad)  
  405285:	addr32 gs sub eax,0x74636573
  40528c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405293:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40529a:	jne    0x405301
  40529c:	jb     0x405317
  40529e:	and    BYTE PTR [rsi+0x61],ah
  4052a1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4052a9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27313
  4052af:	je     0x405316
  4052b1:	jae    0x4052d3
  4052b3:	(bad)  
  4052b4:	je     0x4052d6
  4052b6:	(bad)  
  4052b7:	fs fs jb 0x405320
  4052bb:	jae    0x405330
  4052bd:	and    BYTE PTR [rip+0x70],ah        # 0x405333
  4052c3:	add    BYTE PTR [rax],al
  4052c5:	add    BYTE PTR [rax],al
  4052c7:	add    BYTE PTR [rax],ah
  4052c9:	and    BYTE PTR [rsi+0x69],dl
  4052cc:	jb     0x405342
  4052ce:	jne    0x405331
  4052d0:	ins    BYTE PTR es:[rdi],dx
  4052d1:	push   rax
  4052d2:	jb     0x405343
  4052d4:	je     0x40533b
  4052d6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4052da:	(bad)  
  4052db:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4052e3:	push   0x646f6320
  4052e8:	and    BYTE PTR gs:[rax],dh
  4052eb:	js     0x405312
  4052ed:	js     0x4052ef
  4052ef:	add    BYTE PTR [rax],ah
  4052f1:	and    BYTE PTR [rbp+0x6e],dl
  4052f4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052f8:	outs   dx,BYTE PTR ds:[rsi]
  4052f9:	and    BYTE PTR [rax+0x73],dh
  4052fc:	gs jne 0x405363
  4052ff:	outs   dx,DWORD PTR ds:[rsi]
  405300:	and    BYTE PTR [rdx+0x65],dh
  405303:	ins    BYTE PTR es:[rdi],dx
  405304:	outs   dx,DWORD PTR ds:[rsi]
  405305:	movsxd esp,DWORD PTR [rcx+0x74]
  405308:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40530f:	je     0x405380
  405311:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405314:	and    BYTE PTR [rsi+0x65],dh
  405317:	jb     0x40538c
  405319:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405320:	or     al,BYTE PTR [rax]
  405322:	add    BYTE PTR [rax],al
  405324:	add    BYTE PTR [rax],al
  405326:	add    BYTE PTR [rax],al
  405328:	and    BYTE PTR [rax],ah
  40532a:	push   rbp
  40532b:	outs   dx,BYTE PTR ds:[rsi]
  40532c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405330:	outs   dx,BYTE PTR ds:[rsi]
  405331:	and    BYTE PTR [rax+0x73],dh
  405334:	gs jne 0x40539b
  405337:	outs   dx,DWORD PTR ds:[rsi]
  405338:	and    BYTE PTR [rdx+0x65],dh
  40533b:	ins    BYTE PTR es:[rdi],dx
  40533c:	outs   dx,DWORD PTR ds:[rsi]
  40533d:	movsxd esp,DWORD PTR [rcx+0x74]
  405340:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405347:	and    BYTE PTR [rbx+0x69],dh
  40534a:	jp     0x4053b1
  40534c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a81b6
	...
  40535e:	add    BYTE PTR [rax],al
  405360:	cs jo  0x4053c7
  405363:	(bad)  
  405364:	je     0x4053c7
	...
  40536e:	add    BYTE PTR [rax],al
  405370:	push   rax
  405371:	sbb    eax,0x0
	...
  40537e:	add    BYTE PTR [rax],al
  405380:	xor    BYTE PTR [rax+rax*2+0x0],cl
	...
  405390:	rex
  405391:	rex.WR
  405392:	add    BYTE PTR [rax],al
	...
  40539d:	add    BYTE PTR [rax],al
  40539f:	add    BYTE PTR [rax+0x402f],ah
	...
  4053ad:	add    BYTE PTR [rax],al
  4053af:	add    BYTE PTR [rcx+rbx*2],al
  4053b2:	add    BYTE PTR [rax],al
	...
  4053bd:	add    BYTE PTR [rax],al
  4053bf:	add    al,ah
  4053c1:	pop    rax
  4053c2:	add    BYTE PTR [rax],al
	...
  4053d1:	push   rcx
  4053d2:	add    BYTE PTR [rax],al
	...
  4053e1:	add    BYTE PTR [rax+0x0],al
	...
  4053f0:	loopne 0x405385
  4053f2:	add    BYTE PTR [rax],al
	...
  4053fd:	add    BYTE PTR [rax],al
  4053ff:	add    BYTE PTR [rax],cl
  405401:	xchg   esp,eax
  405402:	add    BYTE PTR [rax],al
	...
  40540d:	add    BYTE PTR [rax],al
  40540f:	add    BYTE PTR [rax],ah
  405411:	xchg   esp,eax
  405412:	add    BYTE PTR [rax],al
	...
  40541d:	add    BYTE PTR [rax],al
  40541f:	add    BYTE PTR [rax],bh
  405421:	xchg   esp,eax
  405422:	add    BYTE PTR [rax],al
	...
  40542d:	add    BYTE PTR [rax],al
  40542f:	add    al,al
  405431:	xchg   BYTE PTR [rax+0x0],al
	...
  405440:	sub    BYTE PTR [rdx+0x40],cl
	...
  40544e:	add    BYTE PTR [rax],al
  405450:	and    BYTE PTR [rdx+0x40],cl
	...
  40545e:	add    BYTE PTR [rax],al
  405460:	adc    BYTE PTR [rdx+0x40],cl
	...
  40546e:	add    BYTE PTR [rax],al
  405470:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40547e:	add    BYTE PTR [rax],al
  405480:	add    BYTE PTR [rax+0x40],ah
	...
  40548e:	add    BYTE PTR [rax],al
  405490:	adc    BYTE PTR [rax+0x40],ah
	...
  40549e:	add    BYTE PTR [rax],al
  4054a0:	sbb    BYTE PTR [rax+0x40],ah
	...
  4054ae:	add    BYTE PTR [rax],al
  4054b0:	xor    BYTE PTR [rax+0x40],ah
	...
  4054be:	add    BYTE PTR [rax],al
  4054c0:	rex add BYTE PTR [rax+0x0],0x0
	...
  4054cd:	add    BYTE PTR [rax],al
  4054cf:	add    BYTE PTR [rax+0x4086],dl
	...
  4054dd:	add    BYTE PTR [rax],al
  4054df:	add    al,dh
  4054e1:	and    al,BYTE PTR [rax+0x0]
	...
  4054f0:	sbb    al,BYTE PTR [rax+0x0]
	...
  405500:	xchg   BYTE PTR [rax+0x0],al
	...
  405510:	jo     0x405498
  405512:	add    BYTE PTR [rax],al
	...
  40551d:	add    BYTE PTR [rax],al
  40551f:	add    BYTE PTR [rax-0x80],dl
  405522:	add    BYTE PTR [rax],al
	...
  40552d:	add    BYTE PTR [rax],al
  40552f:	add    BYTE PTR [rax-0x7a],bl
  405532:	add    BYTE PTR [rax],al
	...
  40553d:	add    BYTE PTR [rax],al
  40553f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40554f:	add    BYTE PTR [rax-0x7a],dl
  405552:	add    BYTE PTR [rax],al
	...
  40555d:	add    BYTE PTR [rax],al
  40555f:	add    al,ah
  405561:	xchg   edx,eax
  405562:	add    BYTE PTR [rax],al
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    al,bh
  405571:	xchg   edx,eax
  405572:	add    BYTE PTR [rax],al
	...
  40557d:	add    BYTE PTR [rax],al
  40557f:	add    BYTE PTR [rdi+0x43],al
  405582:	rex.XB cmp spl,BYTE PTR [r8]
  405585:	sub    BYTE PTR [rdi+0x4e],al
  405588:	push   rbp
  405589:	sub    DWORD PTR [rax],esp
  40558b:	xor    al,0x2e
  40558d:	cmp    DWORD PTR [rsi],ebp
  40558f:	xor    al,0x0
	...
  40559d:	add    BYTE PTR [rax],al
  40559f:	add    BYTE PTR [rdi+0x43],al
  4055a2:	rex.XB cmp spl,BYTE PTR [r8]
  4055a5:	sub    BYTE PTR [rdi+0x4e],al
  4055a8:	push   rbp
  4055a9:	sub    DWORD PTR [rax],esp
  4055ab:	xor    al,0x2e
  4055ad:	cmp    DWORD PTR [rsi],ebp
  4055af:	xor    al,0x0
	...
  4055bd:	add    BYTE PTR [rax],al
  4055bf:	add    BYTE PTR [rdi+0x43],al
  4055c2:	rex.XB cmp spl,BYTE PTR [r8]
  4055c5:	sub    BYTE PTR [rdi+0x4e],al
  4055c8:	push   rbp
  4055c9:	sub    DWORD PTR [rax],esp
  4055cb:	xor    al,0x2e
  4055cd:	cmp    DWORD PTR [rsi],ebp
  4055cf:	xor    al,0x0
	...
  4055dd:	add    BYTE PTR [rax],al
  4055df:	add    BYTE PTR [rdi+0x43],al
  4055e2:	rex.XB cmp spl,BYTE PTR [r8]
  4055e5:	sub    BYTE PTR [rdi+0x4e],al
  4055e8:	push   rbp
  4055e9:	sub    DWORD PTR [rax],esp
  4055eb:	xor    al,0x2e
  4055ed:	cmp    DWORD PTR [rsi],ebp
  4055ef:	xor    al,0x0
	...
  4055fd:	add    BYTE PTR [rax],al
  4055ff:	add    BYTE PTR [rdi+0x43],al
  405602:	rex.XB cmp spl,BYTE PTR [r8]
  405605:	sub    BYTE PTR [rdi+0x4e],al
  405608:	push   rbp
  405609:	sub    DWORD PTR [rax],esp
  40560b:	xor    al,0x2e
  40560d:	cmp    DWORD PTR [rsi],ebp
  40560f:	xor    al,0x0
	...
  40561d:	add    BYTE PTR [rax],al
  40561f:	add    BYTE PTR [rdi+0x43],al
  405622:	rex.XB cmp spl,BYTE PTR [r8]
  405625:	sub    BYTE PTR [rdi+0x4e],al
  405628:	push   rbp
  405629:	sub    DWORD PTR [rax],esp
  40562b:	xor    al,0x2e
  40562d:	cmp    DWORD PTR [rsi],ebp
  40562f:	xor    al,0x0
	...
  40563d:	add    BYTE PTR [rax],al
  40563f:	add    BYTE PTR [rdi+0x43],al
  405642:	rex.XB cmp spl,BYTE PTR [r8]
  405645:	sub    BYTE PTR [rdi+0x4e],al
  405648:	push   rbp
  405649:	sub    DWORD PTR [rax],esp
  40564b:	xor    al,0x2e
  40564d:	cmp    DWORD PTR [rsi],ebp
  40564f:	xor    al,0x0
	...
  40565d:	add    BYTE PTR [rax],al
  40565f:	add    BYTE PTR [rdi+0x43],al
  405662:	rex.XB cmp spl,BYTE PTR [r8]
  405665:	sub    BYTE PTR [rdi+0x4e],al
  405668:	push   rbp
  405669:	sub    DWORD PTR [rax],esp
  40566b:	xor    al,0x2e
  40566d:	cmp    DWORD PTR [rsi],ebp
  40566f:	xor    al,0x0
	...
  40567d:	add    BYTE PTR [rax],al
  40567f:	add    BYTE PTR [rdi+0x43],al
  405682:	rex.XB cmp spl,BYTE PTR [r8]
  405685:	sub    BYTE PTR [rdi+0x4e],al
  405688:	push   rbp
  405689:	sub    DWORD PTR [rax],esp
  40568b:	xor    al,0x2e
  40568d:	cmp    DWORD PTR [rsi],ebp
  40568f:	xor    al,0x0
	...
  40569d:	add    BYTE PTR [rax],al
  40569f:	add    BYTE PTR [rdi+0x43],al
  4056a2:	rex.XB cmp spl,BYTE PTR [r8]
  4056a5:	sub    BYTE PTR [rdi+0x4e],al
  4056a8:	push   rbp
  4056a9:	sub    DWORD PTR [rax],esp
  4056ab:	xor    al,0x2e
  4056ad:	cmp    DWORD PTR [rsi],ebp
  4056af:	xor    al,0x0
	...
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	add    BYTE PTR [rdi+0x43],al
  4056c2:	rex.XB cmp spl,BYTE PTR [r8]
  4056c5:	sub    BYTE PTR [rdi+0x4e],al
  4056c8:	push   rbp
  4056c9:	sub    DWORD PTR [rax],esp
  4056cb:	xor    al,0x2e
  4056cd:	cmp    DWORD PTR [rsi],ebp
  4056cf:	xor    al,0x0
	...
  4056dd:	add    BYTE PTR [rax],al
  4056df:	add    BYTE PTR [rdi+0x43],al
  4056e2:	rex.XB cmp spl,BYTE PTR [r8]
  4056e5:	sub    BYTE PTR [rdi+0x4e],al
  4056e8:	push   rbp
  4056e9:	sub    DWORD PTR [rax],esp
  4056eb:	xor    al,0x2e
  4056ed:	cmp    DWORD PTR [rsi],ebp
  4056ef:	xor    al,0x0
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rdi+0x43],al
  405702:	rex.XB cmp spl,BYTE PTR [r8]
  405705:	sub    BYTE PTR [rdi+0x4e],al
  405708:	push   rbp
  405709:	sub    DWORD PTR [rax],esp
  40570b:	xor    al,0x2e
  40570d:	cmp    DWORD PTR [rsi],ebp
  40570f:	xor    al,0x0
	...
  40571d:	add    BYTE PTR [rax],al
  40571f:	add    BYTE PTR [rdi+0x43],al
  405722:	rex.XB cmp spl,BYTE PTR [r8]
  405725:	sub    BYTE PTR [rdi+0x4e],al
  405728:	push   rbp
  405729:	sub    DWORD PTR [rax],esp
  40572b:	xor    al,0x2e
  40572d:	cmp    DWORD PTR [rsi],ebp
  40572f:	xor    al,0x0
	...
  40573d:	add    BYTE PTR [rax],al
  40573f:	add    BYTE PTR [rdi+0x43],al
  405742:	rex.XB cmp spl,BYTE PTR [r8]
  405745:	sub    BYTE PTR [rdi+0x4e],al
  405748:	push   rbp
  405749:	sub    DWORD PTR [rax],esp
  40574b:	xor    al,0x2e
  40574d:	cmp    DWORD PTR [rsi],ebp
  40574f:	xor    al,0x0
	...
  40575d:	add    BYTE PTR [rax],al
  40575f:	add    BYTE PTR [rdi+0x43],al
  405762:	rex.XB cmp spl,BYTE PTR [r8]
  405765:	sub    BYTE PTR [rdi+0x4e],al
  405768:	push   rbp
  405769:	sub    DWORD PTR [rax],esp
  40576b:	xor    al,0x2e
  40576d:	cmp    DWORD PTR [rsi],ebp
  40576f:	xor    al,0x0
	...
  40577d:	add    BYTE PTR [rax],al
  40577f:	add    BYTE PTR [rdi+0x43],al
  405782:	rex.XB cmp spl,BYTE PTR [r8]
  405785:	sub    BYTE PTR [rdi+0x4e],al
  405788:	push   rbp
  405789:	sub    DWORD PTR [rax],esp
  40578b:	xor    al,0x2e
  40578d:	cmp    DWORD PTR [rsi],ebp
  40578f:	xor    al,0x0
	...
  40579d:	add    BYTE PTR [rax],al
  40579f:	add    BYTE PTR [rdi+0x43],al
  4057a2:	rex.XB cmp spl,BYTE PTR [r8]
  4057a5:	sub    BYTE PTR [rdi+0x4e],al
  4057a8:	push   rbp
  4057a9:	sub    DWORD PTR [rax],esp
  4057ab:	xor    al,0x2e
  4057ad:	cmp    DWORD PTR [rsi],ebp
  4057af:	xor    al,0x0
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rdi+0x43],al
  4057c2:	rex.XB cmp spl,BYTE PTR [r8]
  4057c5:	sub    BYTE PTR [rdi+0x4e],al
  4057c8:	push   rbp
  4057c9:	sub    DWORD PTR [rax],esp
  4057cb:	xor    al,0x2e
  4057cd:	cmp    DWORD PTR [rsi],ebp
  4057cf:	xor    al,0x0
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rdi+0x43],al
  4057e2:	rex.XB cmp spl,BYTE PTR [r8]
  4057e5:	sub    BYTE PTR [rdi+0x4e],al
  4057e8:	push   rbp
  4057e9:	sub    DWORD PTR [rax],esp
  4057eb:	xor    al,0x2e
  4057ed:	cmp    DWORD PTR [rsi],ebp
  4057ef:	xor    al,0x0
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rdi+0x43],al
  405802:	rex.XB cmp spl,BYTE PTR [r8]
  405805:	sub    BYTE PTR [rdi+0x4e],al
  405808:	push   rbp
  405809:	sub    DWORD PTR [rax],esp
  40580b:	xor    al,0x2e
  40580d:	cmp    DWORD PTR [rsi],ebp
  40580f:	xor    al,0x0
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rdi+0x43],al
  405822:	rex.XB cmp spl,BYTE PTR [r8]
  405825:	sub    BYTE PTR [rdi+0x4e],al
  405828:	push   rbp
  405829:	sub    DWORD PTR [rax],esp
  40582b:	xor    al,0x2e
  40582d:	cmp    DWORD PTR [rsi],ebp
  40582f:	xor    al,0x0
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rdi+0x43],al
  405842:	rex.XB cmp spl,BYTE PTR [r8]
  405845:	sub    BYTE PTR [rdi+0x4e],al
  405848:	push   rbp
  405849:	sub    DWORD PTR [rax],esp
  40584b:	xor    al,0x2e
  40584d:	cmp    DWORD PTR [rsi],ebp
  40584f:	xor    al,0x0
	...
  40585d:	add    BYTE PTR [rax],al
  40585f:	add    BYTE PTR [rdi+0x43],al
  405862:	rex.XB cmp spl,BYTE PTR [r8]
  405865:	sub    BYTE PTR [rdi+0x4e],al
  405868:	push   rbp
  405869:	sub    DWORD PTR [rax],esp
  40586b:	xor    al,0x2e
  40586d:	cmp    DWORD PTR [rsi],ebp
  40586f:	xor    al,0x0
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rdi+0x43],al
  405882:	rex.XB cmp spl,BYTE PTR [r8]
  405885:	sub    BYTE PTR [rdi+0x4e],al
  405888:	push   rbp
  405889:	sub    DWORD PTR [rax],esp
  40588b:	xor    al,0x2e
  40588d:	cmp    DWORD PTR [rsi],ebp
  40588f:	xor    al,0x0
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rdi+0x43],al
  4058a2:	rex.XB cmp spl,BYTE PTR [r8]
  4058a5:	sub    BYTE PTR [rdi+0x4e],al
  4058a8:	push   rbp
  4058a9:	sub    DWORD PTR [rax],esp
  4058ab:	xor    al,0x2e
  4058ad:	cmp    DWORD PTR [rsi],ebp
  4058af:	xor    al,0x0
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    BYTE PTR [rdi+0x43],al
  4058c2:	rex.XB cmp spl,BYTE PTR [r8]
  4058c5:	sub    BYTE PTR [rdi+0x4e],al
  4058c8:	push   rbp
  4058c9:	sub    DWORD PTR [rax],esp
  4058cb:	xor    al,0x2e
  4058cd:	cmp    DWORD PTR [rsi],ebp
  4058cf:	xor    al,0x0
	...
  4058e5:	add    BYTE PTR [rax],al
  4058e7:	add    BYTE PTR [rcx],al
  4058e9:	add    BYTE PTR [rax],al
  4058eb:	add    al,ah
  4058ed:	xchg   edx,eax
  4058ee:	add    BYTE PTR [rax],al
  4058f0:	(bad)  
  4058f1:	push   rbp
  4058f2:	add    BYTE PTR [rax],al
  4058f4:	add    BYTE PTR [rax],al
  4058f7:	add    al,bh
  4058f9:	xchg   edx,eax
  4058fa:	add    BYTE PTR [rax],al
  4058fc:	jo     0x405953
  4058fe:	add    BYTE PTR [rax],al
  405900:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax+0x47000015],ah
  40604d:	(bad)  
  40604e:	add    BYTE PTR [rax],al
  406050:	jl     0x4060c2
  406052:	add    BYTE PTR [rax],al
  406054:	push   rax
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	imul   edx,DWORD PTR [rsi],0x70840000
  40605e:	add    BYTE PTR [rax],al
  406060:	jo     0x406078
  406062:	add    BYTE PTR [rax],al
  406064:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	mov    WORD PTR [rax+0x0],?
  40606b:	add    BYTE PTR [rax+0x5000016],dh
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	xchg   esp,eax
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax],dl
  406079:	(bad)  
  40607a:	add    BYTE PTR [rax],al
  40607c:	sub    al,0x17
  40607e:	add    BYTE PTR [rax],al
  406080:	movabs al,ds:0x3a00001730000070
  406089:	(bad)  
  40608a:	add    BYTE PTR [rax],al
  40608c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40608d:	jo     0x40608f
  40608f:	add    BYTE PTR [rax+0x17],al
  406092:	add    BYTE PTR [rax],al
  406094:	rex.XB (bad) 
  406096:	add    BYTE PTR [rax],al
  406098:	test   al,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	push   rax
  40609d:	(bad)  
  40609e:	add    BYTE PTR [rax],al
  4060a0:	sbb    BYTE PTR es:[rax],al
  4060a3:	add    BYTE PTR [rax+rsi*2+0x18300000],ch
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	sub    ebx,DWORD PTR [rcx]
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	mov    esp,0x30000070
  4060b5:	sbb    DWORD PTR [rax],eax
  4060b7:	add    BYTE PTR [rdi+0x19],bl
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	int3   
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x19],ah
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	leave  
  4060c5:	sbb    DWORD PTR [rax],eax
  4060c7:	add    ah,dl
  4060c9:	jo     0x4060cb
  4060cb:	add    al,dl
  4060cd:	sbb    DWORD PTR [rax],eax
  4060cf:	add    bl,dl
  4060d1:	sbb    DWORD PTR [rax],eax
  4060d3:	add    al,ah
  4060d5:	jo     0x4060d7
  4060d7:	add    al,ah
  4060d9:	sbb    DWORD PTR [rax],eax
  4060db:	add    BYTE PTR [rcx],ah
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    ah,ah
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],dh
  4060e5:	sbb    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rdx+rbx*1],bh
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	in     al,dx
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax+0x1a],al
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	cmp    al,0x1b
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	lock jo 0x4060fb
  4060fb:	add    BYTE PTR [rax+0x1b],al
  4060fe:	add    BYTE PTR [rax],al
  406100:	rex.XB sbb eax,DWORD PTR [r8]
  406103:	add    BYTE PTR [rax],cl
  406105:	jno    0x406107
  406107:	add    BYTE PTR [rax+0x1b],dl
  40610a:	add    BYTE PTR [rax],al
  40610c:	push   rsp
  40610d:	sbb    eax,DWORD PTR [rax]
  40610f:	add    BYTE PTR [rcx+rsi*2],cl
  406112:	add    BYTE PTR [rax],al
  406114:	(bad)  
  406115:	sbb    eax,DWORD PTR [rax]
  406117:	add    BYTE PTR [rbx+rbx*1+0x0],ah
  40611b:	add    BYTE PTR [rax],dl
  40611d:	jno    0x40611f
  40611f:	add    BYTE PTR [rax+0x1b],dh
  406122:	add    BYTE PTR [rax],al
  406124:	rcr    DWORD PTR [rbx],1
  406126:	add    BYTE PTR [rax],al
  406128:	adc    al,0x71
  40612a:	add    BYTE PTR [rax],al
  40612c:	loopne 0x406149
  40612e:	add    BYTE PTR [rax],al
  406130:	rex.X sbb eax,0x71200000
  406136:	add    BYTE PTR [rax],al
  406138:	push   rax
  406139:	sbb    eax,0x20490000
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	push   rax
  406145:	and    BYTE PTR [rax],al
  406147:	add    dh,dh
  406149:	and    DWORD PTR [rax],eax
  40614b:	add    BYTE PTR [rcx+rsi*2+0x0],cl
  40614f:	add    BYTE PTR [rax],al
  406151:	and    al,BYTE PTR [rax]
  406153:	add    ah,ch
  406155:	and    al,BYTE PTR [rax]
  406157:	add    BYTE PTR [rcx+rsi*2+0x0],dl
  40615b:	add    al,dh
  40615d:	and    al,BYTE PTR [rax]
  40615f:	add    BYTE PTR [rax+0x64000024],ch
  406165:	jno    0x406167
  406167:	add    BYTE PTR [rax+0x1d000024],dh
  40616d:	and    eax,0x716c0000
  406172:	add    BYTE PTR [rax],al
  406174:	and    BYTE PTR [rip+0x259f0000],ah        # 0x25df617a
  40617a:	add    BYTE PTR [rax],al
  40617c:	jl     0x4061ef
  40617e:	add    BYTE PTR [rax],al
  406180:	movabs al,ds:0x880000263f000025
  406189:	jno    0x40618b
  40618b:	add    BYTE PTR [rax+0x26],al
  40618e:	add    BYTE PTR [rax],al
  406190:	sbb    ah,BYTE PTR [rdi]
  406192:	add    BYTE PTR [rax],al
  406194:	nop
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax],ah
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	(bad)  
  40619d:	(bad)  
  40619e:	add    BYTE PTR [rax],al
  4061a0:	cwde   
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax+0x27],al
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	push   rdx
  4061a9:	(bad)  
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	pushf  
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x27],ah
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4061b5:	(bad)  
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	movabs al,ds:0x4e000027b0000071
  4061c1:	sub    BYTE PTR [rax],al
  4061c3:	add    BYTE PTR [rcx+rsi*2+0x28500000],ah
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	xchg   ebx,eax
  4061cd:	sub    BYTE PTR [rax],al
  4061cf:	add    BYTE PTR [rax-0x5fffff8f],dh
  4061d5:	sub    BYTE PTR [rax],al
  4061d7:	add    bl,bl
  4061d9:	sub    BYTE PTR [rax],al
  4061db:	add    BYTE PTR [rcx+rsi*2+0x28e00000],bh
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	outs   dx,BYTE PTR ds:[rsi]
  4061e5:	sub    DWORD PTR [rax],eax
  4061e7:	add    ah,al
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax+0x29],dh
  4061ee:	add    BYTE PTR [rax],al
  4061f0:	test   al,0x29
  4061f2:	add    BYTE PTR [rax],al
  4061f4:	shl    BYTE PTR [rcx+0x0],1
  4061f7:	add    BYTE PTR [rax+0x5000029],dh
  4061fd:	sub    al,BYTE PTR [rax]
  4061ff:	add    ah,bl
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax],dl
  406205:	sub    al,BYTE PTR [rax]
  406207:	add    BYTE PTR [rsi-0x17ffffd6],bh
  40620d:	jno    0x40620f
  40620f:	add    al,ah
  406211:	sub    eax,DWORD PTR [rax]
  406213:	add    al,ch
  406215:	sub    eax,DWORD PTR [rax]
  406217:	add    al,bh
  406219:	jno    0x40621b
  40621b:	add    al,dh
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    bl,bh
  406221:	sub    eax,DWORD PTR [rax]
  406223:	add    ah,bh
  406225:	jno    0x406227
  406227:	add    al,al
  406229:	sub    al,0x0
  40622b:	add    BYTE PTR [rdi+0x6800002f],bl
  406231:	jo     0x406233
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	shr    BYTE PTR [rbx],1
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,dh
  407041:	and    al,BYTE PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	shr    BYTE PTR [rbx],1
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	lock and al,BYTE PTR [rax]
  407063:	add    BYTE PTR [rdx*1+0xf010000],bl
  40706a:	or     BYTE PTR [rip+0x30bc20f],al        # 0x34c327f
  407070:	or     BYTE PTR [rax],dh
  407072:	(bad)  
  407073:	(bad)  
  407074:	(bad)  
  407075:	jo     0x40707c
  407077:	rol    BYTE PTR [rbx],0xd0
  40707a:	add    DWORD PTR [rax+0x1],edx
  40707d:	add    eax,0x52050002
  407082:	add    DWORD PTR [rax],esi
  407084:	add    DWORD PTR [rcx+rax*1],eax
  407087:	add    BYTE PTR [rdx+rax*2],al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    DWORD PTR [rcx+rax*1],eax
  40708f:	add    BYTE PTR [rdx+rax*2],al
  407092:	add    BYTE PTR [rax],al
  407094:	add    DWORD PTR [rsi],eax
  407096:	add    eax,DWORD PTR [rax]
  407098:	(bad)  
  407099:	rex.X add sil,BYTE PTR [rax]
  40709c:	add    DWORD PTR [rax+0x0],esp
  40709f:	add    BYTE PTR [rcx],al
  4070a1:	add    BYTE PTR [rax],al
  4070a3:	add    BYTE PTR [rcx],al
  4070a5:	add    BYTE PTR [rax],al
  4070a7:	add    BYTE PTR [rcx],al
  4070a9:	add    BYTE PTR [rax],al
  4070ab:	add    BYTE PTR [rcx],al
  4070ad:	or     al,BYTE PTR [rsi]
  4070af:	add    BYTE PTR [rdx],cl
  4070b1:	jb     0x4070b9
  4070b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07519
  4070b9:	push   rax
  4070ba:	add    al,al
  4070bc:	add    DWORD PTR [rdx],ecx
  4070be:	add    eax,0x6d20a05
  4070c3:	add    eax,DWORD PTR [rbx]
  4070c5:	xor    BYTE PTR [rdx],al
  4070c7:	(bad)  
  4070c8:	add    DWORD PTR [rax+0x0],edx
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	add    al,0x1
  4070cf:	add    BYTE PTR [rdx+rax*2],al
  4070d2:	add    BYTE PTR [rax],al
  4070d4:	add    DWORD PTR [rsi],eax
  4070d6:	add    eax,DWORD PTR [rax]
  4070d8:	(bad)  
  4070d9:	rex.X add sil,BYTE PTR [rax]
  4070dc:	add    DWORD PTR [rax+0x0],esp
  4070df:	add    BYTE PTR [rcx],al
  4070e1:	add    BYTE PTR [rax],al
  4070e3:	add    BYTE PTR [rcx],al
  4070e5:	add    al,0x1
  4070e7:	add    BYTE PTR [rdx+riz*4],al
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	add    DWORD PTR [rax],eax
  4070ee:	add    BYTE PTR [rax],al
  4070f0:	add    DWORD PTR [rsi],edx
  4070f2:	or     DWORD PTR [rax],eax
  4070f4:	(bad)  
  4070f5:	mov    BYTE PTR [rsi],al
  4070f7:	add    BYTE PTR [rax],dl
  4070f9:	js     0x407100
  4070fb:	add    BYTE PTR [rbx],cl
  4070fd:	push   0xffffffffe2060004
  407102:	add    dh,BYTE PTR [rax]
  407104:	add    DWORD PTR [rax+0x0],esp
  407107:	add    BYTE PTR [rcx],al
  407109:	add    BYTE PTR [rax],al
  40710b:	add    BYTE PTR [rcx],al
  40710d:	add    BYTE PTR [rax],al
  40710f:	add    BYTE PTR [rcx],al
  407111:	add    BYTE PTR [rax],al
  407113:	add    BYTE PTR [rcx],al
  407115:	(bad)  
  407116:	add    eax,DWORD PTR [rax]
  407118:	(bad)  
  407119:	(bad)  
  40711b:	xor    BYTE PTR [rcx],al
  40711d:	(bad)  
  40711e:	add    BYTE PTR [rax],al
  407120:	add    DWORD PTR [rdi+rax*1],ecx
  407123:	add    BYTE PTR [rdx+riz*4],cl
  407126:	or     BYTE PTR [rax],dh
  407128:	(bad)  
  407129:	(bad)  
  40712a:	(bad)  
  40712b:	jo     0x407132
  40712d:	push   rax
  40712e:	add    al,0xc0
  407130:	add    dl,al
  407132:	add    BYTE PTR [rax],al
  407134:	add    DWORD PTR [rcx],edx
  407136:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e234d
  40713c:	or     dh,BYTE PTR [rax]
  40713e:	or     DWORD PTR [rax+0x8],esp
  407141:	jo     0x40714a
  407143:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220751a
  40714a:	add    BYTE PTR [rax],al
  40714c:	add    DWORD PTR [rcx+rax*1],eax
  40714f:	add    BYTE PTR [rdx+rax*2],al
  407152:	add    BYTE PTR [rax],al
  407154:	add    DWORD PTR [rdx],ecx
  407156:	(bad)  
  407157:	add    BYTE PTR [rdx],cl
  407159:	xor    al,BYTE PTR [rsi]
  40715b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075c1
  407161:	push   rax
  407162:	add    al,al
  407164:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245716c
  40716a:	add    DWORD PTR [rax],esi
  40716c:	add    DWORD PTR [rax],ecx
  40716e:	add    eax,0x4420800
  407173:	xor    BYTE PTR [rbx],al
  407175:	(bad)  
  407176:	add    dh,BYTE PTR [rax+0x1]
  407179:	push   rax
  40717a:	add    BYTE PTR [rax],al
  40717c:	add    DWORD PTR [rdi],eax
  40717e:	add    al,0x0
  407180:	(bad)  
  407181:	xor    al,BYTE PTR [rbx]
  407183:	xor    BYTE PTR [rdx],al
  407185:	(bad)  
  407186:	add    DWORD PTR [rax+0x1],esi
  407189:	add    eax,0x32050002
  40718e:	add    DWORD PTR [rax],esi
  407190:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457198
  407196:	add    DWORD PTR [rax],esi
  407198:	add    DWORD PTR [rax],eax
  40719a:	add    BYTE PTR [rax],al
  40719c:	add    DWORD PTR [rax],eax
  40719e:	add    BYTE PTR [rax],al
  4071a0:	add    DWORD PTR [rax],eax
  4071a2:	add    BYTE PTR [rax],al
  4071a4:	add    DWORD PTR [rdi],eax
  4071a6:	add    al,0x0
  4071a8:	(bad)  
  4071a9:	xor    al,BYTE PTR [rbx]
  4071ab:	xor    BYTE PTR [rdx],al
  4071ad:	(bad)  
  4071ae:	add    DWORD PTR [rax+0x1],esi
  4071b1:	(bad)  
  4071b2:	add    eax,DWORD PTR [rax]
  4071b4:	(bad)  
  4071b5:	rex.X add sil,BYTE PTR [rax]
  4071b8:	add    DWORD PTR [rax+0x0],esp
  4071bb:	add    BYTE PTR [rcx],al
  4071bd:	add    eax,0x32050002
  4071c2:	add    DWORD PTR [rax],esi
  4071c4:	add    DWORD PTR [rdi],eax
  4071c6:	add    al,0x0
  4071c8:	(bad)  
  4071c9:	xor    al,BYTE PTR [rbx]
  4071cb:	xor    BYTE PTR [rdx],al
  4071cd:	(bad)  
  4071ce:	add    DWORD PTR [rax+0x1],esi
  4071d1:	(bad)  
  4071d2:	add    eax,DWORD PTR [rax]
  4071d4:	(bad)  
  4071d5:	rex.X add sil,BYTE PTR [rax]
  4071d8:	add    DWORD PTR [rax+0x0],esp
  4071db:	add    BYTE PTR [rcx],al
  4071dd:	(bad)  
  4071de:	add    eax,DWORD PTR [rax]
  4071e0:	(bad)  
  4071e1:	rex.X add sil,BYTE PTR [rax]
  4071e4:	add    DWORD PTR [rax+0x0],esp
  4071e7:	add    BYTE PTR [rcx],al
  4071e9:	or     BYTE PTR [rip+0x4420800],al        # 0x48279ef
  4071ef:	xor    BYTE PTR [rbx],al
  4071f1:	(bad)  
  4071f2:	add    dh,BYTE PTR [rax+0x1]
  4071f5:	push   rax
  4071f6:	add    BYTE PTR [rax],al
  4071f8:	add    DWORD PTR [rax],eax
  4071fa:	add    BYTE PTR [rax],al
  4071fc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	xor    BYTE PTR [rcx-0x6d780000],bl
  409012:	add    BYTE PTR [rax],al
  409014:	rcl    BYTE PTR [rax+0x0],1
  40901a:	add    BYTE PTR [rax],al
  40901c:	add    BYTE PTR [rax],al
  40901e:	add    BYTE PTR [rax],al
  409020:	pushf  
  409021:	cdq    
  409022:	add    BYTE PTR [rax],al
  409024:	or     BYTE PTR [rbx-0x6e700000],dl
	...
  409032:	add    BYTE PTR [rax],al
  409034:	and    al,0x9a
  409036:	add    BYTE PTR [rax],al
  409038:	enter  0x93,0x0
	...
  409050:	rcl    BYTE PTR [rax+rax*1+0x0],0x0
  409058:	(bad)  
  409059:	xchg   esp,eax
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	call   0x4090f9
  409065:	add    BYTE PTR [rax],al
  409067:	add    al,bh
  409069:	xchg   esp,eax
  40906a:	add    BYTE PTR [rax],al
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	or     BYTE PTR [rbp+0x0],dl
  409076:	add    BYTE PTR [rax],al
  409078:	sbb    BYTE PTR [rbp+0x0],dl
  40907e:	add    BYTE PTR [rax],al
  409080:	and    al,0x95
  409082:	add    BYTE PTR [rax],al
  409084:	add    BYTE PTR [rax],al
  409086:	add    BYTE PTR [rax],al
  409088:	xor    BYTE PTR [rbp+0x0],dl
  40908e:	add    BYTE PTR [rax],al
  409090:	rex xchg ebp,eax
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	push   rsp
  409099:	xchg   ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	(bad)  
  4090a1:	xchg   ebp,eax
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	je     0x40903f
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	jl     0x409047
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	mov    BYTE PTR [rbp+0x0],dl
  4090be:	add    BYTE PTR [rax],al
  4090c0:	cwde   
  4090c1:	xchg   ebp,eax
	...
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	test   al,0x95
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	rcl    BYTE PTR [rbp+0x0],0x0
  4090df:	add    al,bl
  4090e1:	xchg   ebp,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	in     al,dx
  4090e9:	xchg   ebp,eax
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	add    dl,BYTE PTR [rsi+0x0]
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	sbb    BYTE PTR [rsi+0x0],dl
  4090fe:	add    BYTE PTR [rax],al
  409100:	sub    BYTE PTR [rsi+0x0],dl
  409106:	add    BYTE PTR [rax],al
  409108:	cmp    dl,BYTE PTR [rsi+0x0]
  40910e:	add    BYTE PTR [rax],al
  409110:	push   rsp
  409111:	xchg   esi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	fs xchg esi,eax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	adc    BYTE PTR [rsi+0x0],0x0
  409127:	add    BYTE PTR [rax+0x96],bl
  40912d:	add    BYTE PTR [rax],al
  40912f:	add    BYTE PTR [rdx+0x96],dh
  409135:	add    BYTE PTR [rax],al
  409137:	add    al,cl
  409139:	xchg   esi,eax
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax],al
  40913e:	add    BYTE PTR [rax],al
  409140:	fcom   QWORD PTR [rsi+0x0]
  409146:	add    BYTE PTR [rax],al
  409148:	not    BYTE PTR [rsi+0x0]
  40914e:	add    BYTE PTR [rax],al
  409150:	or     dl,BYTE PTR [rdi+0x0]
  409156:	add    BYTE PTR [rax],al
  409158:	sub    BYTE PTR [rdi+0x0],dl
  40915e:	add    BYTE PTR [rax],al
  409160:	xor    BYTE PTR [rdi+0x0],dl
  409166:	add    BYTE PTR [rax],al
  409168:	rex.R xchg edi,eax
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	push   rdx
  409171:	xchg   edi,eax
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	outs   dx,BYTE PTR ds:[rsi]
  409179:	xchg   edi,eax
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    BYTE PTR [rax],al
  40917e:	add    BYTE PTR [rax],al
  409180:	adc    BYTE PTR [rdi+0x0],0x0
	...
  40918f:	add    BYTE PTR [rax+0x97],dl
  409195:	add    BYTE PTR [rax],al
  409197:	add    BYTE PTR [rax+0x97],ch
  40919d:	add    BYTE PTR [rax],al
  40919f:	add    BYTE PTR [rsi+0x97],dh
  4091a5:	add    BYTE PTR [rax],al
  4091a7:	add    dh,al
  4091a9:	xchg   edi,eax
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	rcl    BYTE PTR [rdi+0x0],cl
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	loopne 0x409151
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	lock xchg edi,eax
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	add    bl,BYTE PTR [rax+0x0]
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	(bad)  
  4091d1:	cwde   
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	and    BYTE PTR [rax+0x0],bl
  4091de:	add    BYTE PTR [rax],al
  4091e0:	cs cwde 
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rax],al
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	cmp    BYTE PTR [rax+0x0],bl
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	rex.X cwde 
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	rex.WRX cdqe 
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	push   rsi
  409201:	cwde   
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	(bad)  
  409209:	cwde   
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	push   0xffffffffffffff98
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	je     0x4091b2
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	jl     0x4091ba
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	xchg   BYTE PTR [rax+0x0],bl
  40922e:	add    BYTE PTR [rax],al
  409230:	mov    ds,WORD PTR [rax+0x0]
  409236:	add    BYTE PTR [rax],al
  409238:	cwde   
  409239:	cwde   
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	movabs al,ds:0xaa00000000000098
  409249:	cwde   
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	mov    ah,0x98
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	mov    esi,0x98
  40925d:	add    BYTE PTR [rax],al
  40925f:	add    al,cl
  409261:	cwde   
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	rcr    BYTE PTR [rax+0x0],cl
  40926e:	add    BYTE PTR [rax],al
  409270:	fcomp  QWORD PTR [rax+0x0]
  409276:	add    BYTE PTR [rax],al
  409278:	call   0x409315
	...
  409285:	add    BYTE PTR [rax],al
  409287:	add    al,al
  409289:	xchg   esp,eax
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	(bad)  
  409291:	xchg   esp,eax
  409292:	add    BYTE PTR [rax],al
  409294:	add    BYTE PTR [rax],al
  409296:	add    BYTE PTR [rax],al
  409298:	call   0x409331
  40929d:	add    BYTE PTR [rax],al
  40929f:	add    al,bh
  4092a1:	xchg   esp,eax
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	or     BYTE PTR [rbp+0x0],dl
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	sbb    BYTE PTR [rbp+0x0],dl
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	and    al,0x95
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	xor    BYTE PTR [rbp+0x0],dl
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	rex xchg ebp,eax
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	push   rsp
  4092d1:	xchg   ebp,eax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	(bad)  
  4092d9:	xchg   ebp,eax
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	je     0x409277
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	add    BYTE PTR [rax],al
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	jl     0x40927f
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	add    BYTE PTR [rax],al
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	mov    BYTE PTR [rbp+0x0],dl
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	cwde   
  4092f9:	xchg   ebp,eax
	...
  409306:	add    BYTE PTR [rax],al
  409308:	test   al,0x95
  40930a:	add    BYTE PTR [rax],al
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	rcl    BYTE PTR [rbp+0x0],0x0
  409317:	add    al,bl
  409319:	xchg   ebp,eax
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	in     al,dx
  409321:	xchg   ebp,eax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	add    dl,BYTE PTR [rsi+0x0]
  40932e:	add    BYTE PTR [rax],al
  409330:	sbb    BYTE PTR [rsi+0x0],dl
  409336:	add    BYTE PTR [rax],al
  409338:	sub    BYTE PTR [rsi+0x0],dl
  40933e:	add    BYTE PTR [rax],al
  409340:	cmp    dl,BYTE PTR [rsi+0x0]
  409346:	add    BYTE PTR [rax],al
  409348:	push   rsp
  409349:	xchg   esi,eax
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	fs xchg esi,eax
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	adc    BYTE PTR [rsi+0x0],0x0
  40935f:	add    BYTE PTR [rax+0x96],bl
  409365:	add    BYTE PTR [rax],al
  409367:	add    BYTE PTR [rdx+0x96],dh
  40936d:	add    BYTE PTR [rax],al
  40936f:	add    al,cl
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	fcom   QWORD PTR [rsi+0x0]
  40937e:	add    BYTE PTR [rax],al
  409380:	not    BYTE PTR [rsi+0x0]
  409386:	add    BYTE PTR [rax],al
  409388:	or     dl,BYTE PTR [rdi+0x0]
  40938e:	add    BYTE PTR [rax],al
  409390:	sub    BYTE PTR [rdi+0x0],dl
  409396:	add    BYTE PTR [rax],al
  409398:	xor    BYTE PTR [rdi+0x0],dl
  40939e:	add    BYTE PTR [rax],al
  4093a0:	rex.R xchg edi,eax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	push   rdx
  4093a9:	xchg   edi,eax
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	add    BYTE PTR [rax],al
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	outs   dx,BYTE PTR ds:[rsi]
  4093b1:	xchg   edi,eax
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	adc    BYTE PTR [rdi+0x0],0x0
	...
  4093c7:	add    BYTE PTR [rax+0x97],dl
  4093cd:	add    BYTE PTR [rax],al
  4093cf:	add    BYTE PTR [rax+0x97],ch
  4093d5:	add    BYTE PTR [rax],al
  4093d7:	add    BYTE PTR [rsi+0x97],dh
  4093dd:	add    BYTE PTR [rax],al
  4093df:	add    dh,al
  4093e1:	xchg   edi,eax
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	rcl    BYTE PTR [rdi+0x0],cl
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	loopne 0x409389
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	lock xchg edi,eax
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	add    BYTE PTR [rax],al
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    bl,BYTE PTR [rax+0x0]
  409406:	add    BYTE PTR [rax],al
  409408:	(bad)  
  409409:	cwde   
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	and    BYTE PTR [rax+0x0],bl
  409416:	add    BYTE PTR [rax],al
  409418:	cs cwde 
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
  40941e:	add    BYTE PTR [rax],al
  409420:	cmp    BYTE PTR [rax+0x0],bl
  409426:	add    BYTE PTR [rax],al
  409428:	rex.X cwde 
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	rex.WRX cdqe 
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	push   rsi
  409439:	cwde   
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	(bad)  
  409441:	cwde   
  409442:	add    BYTE PTR [rax],al
  409444:	add    BYTE PTR [rax],al
  409446:	add    BYTE PTR [rax],al
  409448:	push   0xffffffffffffff98
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
  40944e:	add    BYTE PTR [rax],al
  409450:	je     0x4093ea
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	jl     0x4093f2
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	xchg   BYTE PTR [rax+0x0],bl
  409466:	add    BYTE PTR [rax],al
  409468:	mov    ds,WORD PTR [rax+0x0]
  40946e:	add    BYTE PTR [rax],al
  409470:	cwde   
  409471:	cwde   
  409472:	add    BYTE PTR [rax],al
  409474:	add    BYTE PTR [rax],al
  409476:	add    BYTE PTR [rax],al
  409478:	movabs al,ds:0xaa00000000000098
  409481:	cwde   
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	mov    ah,0x98
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	mov    esi,0x98
  409495:	add    BYTE PTR [rax],al
  409497:	add    al,cl
  409499:	cwde   
  40949a:	add    BYTE PTR [rax],al
  40949c:	add    BYTE PTR [rax],al
  40949e:	add    BYTE PTR [rax],al
  4094a0:	rcr    BYTE PTR [rax+0x0],cl
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	fcomp  QWORD PTR [rax+0x0]
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	call   0x40954d
	...
  4094bd:	add    BYTE PTR [rax],al
  4094bf:	add    BYTE PTR [rax+rax*1],bl
  4094c2:	jno    0x40952c
  4094c4:	pop    rdi
  4094c5:	movsxd ebp,DWORD PTR [rax+0x65]
  4094c8:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4094cb:	outs   dx,DWORD PTR ds:[rsi]
  4094cc:	jne    0x409542
  4094ce:	jo     0x409545
  4094d0:	je     0x4094d2
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	(bad)  
  4094d5:	add    BYTE PTR [rcx+0x68],dh
  4094d8:	pop    rdi
  4094d9:	movsxd ebp,DWORD PTR [rax+0x65]
  4094dc:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4094df:	jo     0x409550
  4094e1:	imul   ebp,DWORD PTR [rsi+0x74],0x73
  4094e8:	and    al,BYTE PTR [rax]
  4094ea:	jno    0x409554
  4094ec:	pop    rdi
  4094ed:	movsxd ebp,DWORD PTR [rax+0x65]
  4094f0:	movsxd ebp,DWORD PTR [rbx+0x66]
  4094f3:	ins    BYTE PTR es:[rdi],dx
  4094f4:	(bad)  
  4094f5:	addr32 jae 0x4094f8
  4094f8:	rex.WX add BYTE PTR [rcx+0x68],sil
  4094fc:	pop    rdi
  4094fd:	gs jb  0x409572
  409500:	gs js  0x40956c
  409503:	je     0x409505
  409505:	add    BYTE PTR [rax],al
  409507:	add    BYTE PTR [rbp+0x0],ah
  40950a:	jno    0x409574
  40950c:	pop    rdi
  40950d:	data16 jb 0x409575
  409510:	gs jno 0x40957b
  409513:	jne    0x409581
  409515:	ins    BYTE PTR es:[rdi],dx
  409516:	add    BYTE PTR [rax],al
  409518:	ja     0x40951a
  40951a:	jno    0x409584
  40951c:	pop    rdi
  40951d:	imul   ebp,DWORD PTR [rsi+0x69],0x415f74
  409524:	js     0x409526
  409526:	jno    0x409590
  409528:	pop    rdi
  409529:	imul   ebp,DWORD PTR [rsi+0x69],0x425f74
  409530:	jnp    0x409532
  409532:	jno    0x40959c
  409534:	pop    rdi
  409535:	imul   ebp,DWORD PTR [rsi+0x69],0x616c6674
  40953c:	addr32 jae 0x40953f
  40953f:	add    BYTE PTR [rbx+0x5f687100],bl
  409545:	ins    DWORD PTR es:[rdi],dx
  409546:	gs ins DWORD PTR es:[rdi],dx
  409548:	data16 jb 0x4095b0
  40954b:	gs jae 0x4095b6
  40954e:	outs   dx,DWORD PTR ds:[rsi]
  40954f:	jb     0x4095c5
  409551:	add    BYTE PTR [rax],al
  409553:	add    dl,al
  409555:	add    BYTE PTR [rcx+0x68],dh
  409558:	pop    rdi
  409559:	outs   dx,DWORD PTR ds:[rsi]
  40955a:	jo     0x4095d0
  40955c:	imul   ebp,DWORD PTR [rdi+0x6e],0x71010e00
  409563:	push   0x6f72705f
  409568:	fs jne 0x4095ce
  40956b:	gs pop rdi
  40956d:	outs   dx,DWORD PTR ds:[rsi]
  40956e:	jne    0x4095e4
  409570:	jo     0x4095e7
  409572:	je     0x409574
  409574:	adc    eax,DWORD PTR [rcx]
  409576:	jno    0x4095e0
  409578:	pop    rdi
  409579:	jno    0x4095e3
  40957b:	add    BYTE PTR [rip+0x5f687101],dl        # 0x5fa90682
  409581:	jno    0x4095eb
  409583:	jne    0x4095f1
  409585:	ins    BYTE PTR es:[rdi],dx
  409586:	add    BYTE PTR [rax],al
  409588:	sbb    eax,DWORD PTR [rcx]
  40958a:	jno    0x4095f4
  40958c:	pop    rdi
  40958d:	jb     0x4095f4
  40958f:	(bad)  
  409590:	fs jo  0x409602
  409593:	imul   ebp,DWORD PTR [rsi+0x74],0x16b0073
  40959a:	jno    0x409604
  40959c:	pop    rdi
  40959d:	jbe    0x409604
  40959f:	jb     0x409614
  4095a1:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4095a8:	fadd   DWORD PTR [rax]
  4095aa:	rex.R
  4095ab:	gs ins BYTE PTR es:[rdi],dx
  4095ad:	gs je  0x409615
  4095b0:	rex.XB jb 0x40961c
  4095b3:	je     0x40961e
  4095b5:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095b8:	push   rbx
  4095b9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095be:	outs   dx,BYTE PTR ds:[rsi]
  4095bf:	add    al,bh
  4095c1:	add    BYTE PTR [rbp+0x6e],al
  4095c4:	je     0x40962b
  4095c6:	jb     0x40960b
  4095c8:	jb     0x409633
  4095ca:	je     0x409635
  4095cc:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095cf:	push   rbx
  4095d0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095d5:	outs   dx,BYTE PTR ds:[rsi]
  4095d6:	add    BYTE PTR [rax],al
  4095d8:	int    0x1
  4095da:	rex.RXB
  4095db:	gs je  0x409621
  4095de:	jne    0x409652
  4095e0:	jb     0x409647
  4095e2:	outs   dx,BYTE PTR ds:[rsi]
  4095e3:	je     0x409635
  4095e5:	jb     0x409656
  4095e7:	movsxd esp,DWORD PTR [rbp+0x73]
  4095ea:	jae    0x4095ec
  4095ec:	(bad)  
  4095ed:	add    DWORD PTR [rdi+0x65],eax
  4095f0:	je     0x409635
  4095f2:	jne    0x409666
  4095f4:	jb     0x40965b
  4095f6:	outs   dx,BYTE PTR ds:[rsi]
  4095f7:	je     0x409649
  4095f9:	jb     0x40966a
  4095fb:	movsxd esp,DWORD PTR [rbp+0x73]
  4095fe:	jae    0x409649
  409600:	fs add dl,dl
  409603:	add    DWORD PTR [rdi+0x65],eax
  409606:	je     0x40964b
  409608:	jne    0x40967c
  40960a:	jb     0x409671
  40960c:	outs   dx,BYTE PTR ds:[rsi]
  40960d:	je     0x409663
  40960f:	push   0x64616572
  409614:	rex.WB
  409615:	add    BYTE PTR fs:[rax],al
  409618:	adc    BYTE PTR [rdx],al
  40961a:	rex.RXB
  40961b:	gs je  0x40966a
  40961e:	(bad)  
  40961f:	jae    0x409695
  409621:	rex.RB jb 0x409696
  409624:	outs   dx,DWORD PTR ds:[rsi]
  409625:	jb     0x409627
  409627:	add    BYTE PTR [rbx+0x2],dh
  40962a:	rex.RXB
  40962b:	gs je  0x409681
  40962e:	je     0x409691
  409630:	jb     0x4096a6
  409632:	jne    0x4096a4
  409634:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409636:	outs   dx,WORD PTR ds:[rsi]
  409638:	add    BYTE PTR [r10+0x74654702],cl
  40963f:	push   rbx
  409640:	jns    0x4096b5
  409642:	je     0x4096a9
  409644:	ins    DWORD PTR es:[rdi],dx
  409645:	push   rsp
  409646:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40964d:	ins    BYTE PTR es:[rdi],dx
  40964e:	gs push rsp
  409650:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  409657:	gs je  0x4096ae
  40965a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409661:	je     0x409663
  409663:	add    cl,bh
  409665:	add    cl,BYTE PTR [rcx+0x6e]
  409668:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409670:	rex.XB jb 0x4096dc
  409673:	je     0x4096de
  409675:	movsxd esp,DWORD PTR [rcx+0x6c]
  409678:	push   rbx
  409679:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40967e:	outs   dx,BYTE PTR ds:[rsi]
  40967f:	add    BYTE PTR [rbx+0x3],cl
  409682:	rex.WR
  409683:	gs (bad) 
  409685:	jbe    0x4096ec
  409687:	rex.XB jb 0x4096f3
  40968a:	je     0x4096f5
  40968c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40968f:	push   rbx
  409690:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409695:	outs   dx,BYTE PTR ds:[rsi]
  409696:	add    BYTE PTR [rax],al
  409698:	mov    ebx,0x65755103
  40969d:	jb     0x409718
  40969f:	push   rax
  4096a0:	gs jb  0x409709
  4096a3:	outs   dx,DWORD PTR ds:[rsi]
  4096a4:	jb     0x409713
  4096a6:	(bad)  
  4096a7:	outs   dx,BYTE PTR ds:[rsi]
  4096a8:	movsxd esp,DWORD PTR [rbp+0x43]
  4096ab:	outs   dx,DWORD PTR ds:[rsi]
  4096ac:	jne    0x40971c
  4096ae:	je     0x409715
  4096b0:	jb     0x4096b2
  4096b2:	add    DWORD PTR [rdx+rdx*2],eax
  4096b5:	je     0x409723
  4096b7:	rex.B
  4096b8:	fs fs rex.RX jne 0x40972b
  4096bd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096c1:	outs   dx,BYTE PTR ds:[rsi]
  4096c2:	push   rsp
  4096c3:	(bad)  
  4096c4:	(bad)  
  4096c5:	ins    BYTE PTR es:[rdi],dx
  4096c6:	add    BYTE PTR gs:[rdx],al
  4096c9:	add    al,0x52
  4096cb:	je     0x409739
  4096cd:	rex.XB (bad) 
  4096cf:	jo     0x409745
  4096d1:	jne    0x409745
  4096d3:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4096d6:	outs   dx,BYTE PTR ds:[rsi]
  4096d7:	je     0x40973e
  4096d9:	js     0x40974f
  4096db:	add    BYTE PTR [rcx],cl
  4096dd:	add    al,0x52
  4096df:	je     0x40974d
  4096e1:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4096e3:	outs   dx,DWORD PTR ds:[rsi]
  4096e4:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4096e8:	jne    0x409758
  4096ea:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096ee:	outs   dx,BYTE PTR ds:[rsi]
  4096ef:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4096f1:	je     0x409765
  4096f3:	jns    0x4096f5
  4096f5:	add    BYTE PTR [rax],dl
  4096f7:	add    al,0x52
  4096f9:	je     0x409767
  4096fb:	push   rsi
  4096fc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409703:	outs   dx,BYTE PTR ds:[rsi]
  409704:	ja     0x40976f
  409706:	outs   dx,BYTE PTR ds:[rsi]
  409707:	add    BYTE PTR fs:[rax],al
  40970a:	lahf   
  40970b:	add    al,0x53
  40970d:	gs je  0x409765
  409710:	outs   dx,BYTE PTR ds:[rsi]
  409711:	push   0x6c646e61
  409716:	gs fs rex.RB js 0x40977e
  40971b:	gs jo  0x409792
  40971e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409725:	gs jb  0x409728
  409728:	lods   al,BYTE PTR ds:[rsi]
  409729:	add    al,0x53
  40972b:	ins    BYTE PTR es:[rdi],dx
  40972c:	gs gs jo 0x409730
  409730:	mov    edx,0x72655404
  409735:	ins    DWORD PTR es:[rdi],dx
  409736:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40973d:	outs   dx,DWORD PTR ds:[rsi]
  40973e:	movsxd esp,DWORD PTR [rbp+0x73]
  409741:	jae    0x409743
  409743:	add    cl,al
  409745:	add    al,0x54
  409747:	ins    BYTE PTR es:[rdi],dx
  409748:	jae    0x409791
  40974a:	gs je  0x4097a3
  40974d:	(bad)  
  40974e:	ins    BYTE PTR es:[rdi],dx
  40974f:	jne    0x4097b6
  409751:	add    dh,cl
  409753:	add    al,0x55
  409755:	outs   dx,BYTE PTR ds:[rsi]
  409756:	push   0x6c646e61
  40975b:	gs fs rex.RB js 0x4097c3
  409760:	gs jo  0x4097d7
  409763:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40976a:	gs jb  0x40976d
  40976d:	add    ah,ch
  40976f:	add    al,0x56
  409771:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409778:	jb     0x4097e9
  40977a:	je     0x4097e1
  40977c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409780:	out    dx,al
  409781:	add    al,0x56
  409783:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40978a:	jne    0x4097f1
  40978c:	jb     0x409807
  40978e:	add    BYTE PTR [rax],al
  409790:	(bad)  
  409791:	add    BYTE PTR [rdi+0x5f],bl
  409794:	rex.XB pop r15
  409796:	jae    0x409808
  409798:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40979c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4097a3:	ins    BYTE PTR es:[rdi],dx
  4097a4:	gs jb  0x4097a7
  4097a7:	add    BYTE PTR [rsi+0x0],cl
  4097aa:	pop    rdi
  4097ab:	pop    rdi
  4097ac:	fs ins BYTE PTR es:[rdi],dx
  4097ae:	ins    BYTE PTR es:[rdi],dx
  4097af:	outs   dx,DWORD PTR ds:[rsi]
  4097b0:	outs   dx,BYTE PTR ds:[rsi]
  4097b1:	gs js  0x40981d
  4097b4:	je     0x4097b6
  4097b6:	push   rcx
  4097b7:	add    BYTE PTR [rdi+0x5f],bl
  4097ba:	addr32 gs je 0x40982b
  4097be:	(bad)  
  4097bf:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4097c6:	push   rdx
  4097c7:	add    BYTE PTR [rdi+0x5f],bl
  4097ca:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4097d1:	add    BYTE PTR [rbx+0x0],dl
  4097d4:	pop    rdi
  4097d5:	pop    rdi
  4097d6:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4097dd:	movsxd eax,DWORD PTR [rax]
  4097df:	add    BYTE PTR [rdx+0x0],bl
  4097e2:	pop    rdi
  4097e3:	pop    rdi
  4097e4:	ins    BYTE PTR es:[rdi],dx
  4097e5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4097e8:	jbe    0x409849
  4097ea:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4097f1:	add    BYTE PTR [rdi+0x5f],bl
  4097f4:	jae    0x40985b
  4097f6:	je     0x409857
  4097f8:	(bad)  
  4097f9:	jo     0x40986b
  4097fb:	pop    rdi
  4097fc:	je     0x409877
  4097fe:	jo     0x409865
  409800:	add    BYTE PTR [rax],al
  409802:	(bad)  
  409803:	add    BYTE PTR [rdi+0x5f],bl
  409806:	jae    0x40986d
  409808:	je     0x40987f
  40980a:	jae    0x409871
  40980c:	jb     0x40987b
  40980e:	(bad)  
  40980f:	je     0x409879
  409811:	gs jb  0x409886
  409814:	add    BYTE PTR [rax],al
  409816:	jno    0x409818
  409818:	pop    rdi
  409819:	(bad)  
  40981a:	movsxd ebp,DWORD PTR [rbp+0x64]
  40981d:	ins    BYTE PTR es:[rdi],dx
  40981e:	outs   dx,BYTE PTR ds:[rsi]
  40981f:	add    BYTE PTR [rax+0x0],bh
  409822:	pop    rdi
  409823:	(bad)  
  409824:	ins    DWORD PTR es:[rdi],dx
  409825:	jae    0x40988e
  409827:	pop    rdi
  409828:	gs js  0x409894
  40982b:	je     0x40982d
  40982d:	add    BYTE PTR [rdx+0x65635f00],cl
  409833:	js     0x40989e
  409835:	je     0x409837
  409837:	add    dl,bl
  409839:	add    BYTE PTR [rdi+0x66],bl
  40983c:	ins    DWORD PTR es:[rdi],dx
  40983d:	outs   dx,DWORD PTR ds:[rsi]
  40983e:	fs add BYTE PTR gs:[rax],al
  409842:	sbb    al,BYTE PTR [rcx]
  409844:	pop    rdi
  409845:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40984c:	ins    DWORD PTR es:[rdi],dx
  40984d:	add    BYTE PTR [rax+0x6f6c5f01],al
  409853:	movsxd ebp,DWORD PTR [rbx+0x0]
  409856:	and    eax,0x6e6f5f02
  40985b:	gs js  0x4098c7
  40985e:	je     0x409860
  409860:	push   rdx
  409861:	add    bl,BYTE PTR [rdi+0x73]
  409864:	gs je  0x4098d1
  409867:	ins    DWORD PTR es:[rdi],dx
  409868:	jo     0x40986a
  40986a:	(bad)
  40986e:	outs   dx,BYTE PTR ds:[rsi]
  40986f:	ins    BYTE PTR es:[rdi],dx
  409870:	outs   dx,DWORD PTR ds:[rsi]
  409871:	movsxd ebp,DWORD PTR [rbx+0x0]
  409874:	jg     0x409879
  409876:	(bad)  
  409877:	(bad)  
  409878:	outs   dx,DWORD PTR ds:[rsi]
  409879:	jb     0x4098ef
  40987b:	add    BYTE PTR [rax+0x6c616303],dl
  409881:	ins    BYTE PTR es:[rdi],dx
  409882:	outs   dx,DWORD PTR ds:[rsi]
  409883:	movsxd eax,DWORD PTR [rax]
  409885:	add    BYTE PTR [rbp+0x69786503],bl
  40988b:	je     0x40988d
  40988d:	add    BYTE PTR [rax+0x72706603],dh
  409893:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40989a:	data16 jb 0x409902
  40989d:	add    BYTE PTR gs:[rax],al
  4098a0:	ret    0x6603
  4098a3:	ja     0x409917
  4098a5:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  4098ad:	(bad)  
  4098ae:	ins    BYTE PTR es:[rdi],dx
  4098af:	ins    BYTE PTR es:[rdi],dx
  4098b0:	outs   dx,DWORD PTR ds:[rsi]
  4098b1:	movsxd eax,DWORD PTR [rax]
  4098b3:	add    al,bh
  4098b5:	add    ebp,DWORD PTR [rbp+0x65]
  4098b8:	ins    DWORD PTR es:[rdi],dx
  4098b9:	movsxd esi,DWORD PTR [rax+0x79]
  4098bc:	add    BYTE PTR [rax],al
  4098be:	(bad)  
  4098bf:	add    al,0x73
  4098c1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4098c8:	sub    eax,DWORD PTR [rbx+rsi*2]
  4098cb:	je     0x40993f
  4098cd:	ins    BYTE PTR es:[rdi],dx
  4098ce:	outs   dx,BYTE PTR gs:[rsi]
  4098d0:	add    BYTE PTR [rax],al
  4098d2:	cs add al,0x73
  4098d5:	je     0x409949
  4098d7:	outs   dx,BYTE PTR ds:[rsi]
  4098d8:	movsxd ebp,DWORD PTR [rbp+0x70]
  4098db:	add    BYTE PTR [rsi+0x4],cl
  4098de:	jbe    0x409946
  4098e0:	jo     0x409954
  4098e2:	imul   ebp,DWORD PTR [rsi+0x74],0xde000066
  4098e9:	add    al,0x5f
  4098eb:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	add    BYTE PTR [rax-0x70000000],dl
  4098fa:	add    BYTE PTR [rax],al
  4098fc:	add    BYTE PTR [rax-0x70000000],dl
  409902:	add    BYTE PTR [rax],al
  409904:	add    BYTE PTR [rax-0x70000000],dl
  40990a:	add    BYTE PTR [rax],al
  40990c:	add    BYTE PTR [rax-0x70000000],dl
  409912:	add    BYTE PTR [rax],al
  409914:	add    BYTE PTR [rax-0x70000000],dl
  40991a:	add    BYTE PTR [rax],al
  40991c:	add    BYTE PTR [rax-0x70000000],dl
  409922:	add    BYTE PTR [rax],al
  409924:	add    BYTE PTR [rax-0x70000000],dl
  40992a:	add    BYTE PTR [rax],al
  40992c:	add    BYTE PTR [rax+0x696c0000],dl
  409932:	(bad)  
  409934:	push   0x2d6c6c75
  409939:	xor    eax,0x6c6c642e
  40993e:	add    BYTE PTR [rax],al
  409940:	adc    al,0x90
  409942:	add    BYTE PTR [rax],al
  409944:	adc    al,0x90
  409946:	add    BYTE PTR [rax],al
  409948:	adc    al,0x90
  40994a:	add    BYTE PTR [rax],al
  40994c:	adc    al,0x90
  40994e:	add    BYTE PTR [rax],al
  409950:	adc    al,0x90
  409952:	add    BYTE PTR [rax],al
  409954:	adc    al,0x90
  409956:	add    BYTE PTR [rax],al
  409958:	adc    al,0x90
  40995a:	add    BYTE PTR [rax],al
  40995c:	adc    al,0x90
  40995e:	add    BYTE PTR [rax],al
  409960:	adc    al,0x90
  409962:	add    BYTE PTR [rax],al
  409964:	adc    al,0x90
  409966:	add    BYTE PTR [rax],al
  409968:	adc    al,0x90
  40996a:	add    BYTE PTR [rax],al
  40996c:	adc    al,0x90
  40996e:	add    BYTE PTR [rax],al
  409970:	adc    al,0x90
  409972:	add    BYTE PTR [rax],al
  409974:	adc    al,0x90
  409976:	add    BYTE PTR [rax],al
  409978:	adc    al,0x90
  40997a:	add    BYTE PTR [rax],al
  40997c:	adc    al,0x90
  40997e:	add    BYTE PTR [rax],al
  409980:	adc    al,0x90
  409982:	add    BYTE PTR [rax],al
  409984:	adc    al,0x90
  409986:	add    BYTE PTR [rax],al
  409988:	adc    al,0x90
  40998a:	add    BYTE PTR [rax],al
  40998c:	adc    al,0x90
  40998e:	add    BYTE PTR [rax],al
  409990:	adc    al,0x90
  409992:	add    BYTE PTR [rax],al
  409994:	adc    al,0x90
  409996:	add    BYTE PTR [rax],al
  409998:	adc    al,0x90
  40999a:	add    BYTE PTR [rax],al
  40999c:	rex.WXB
  40999d:	rex.RB push r10
  40999f:	rex.WRX
  4099a0:	rex.RB
  4099a1:	xor    r14,QWORD PTR [rdx]
  4099a4:	cs fs ins BYTE PTR es:[rdi],dx
  4099a7:	ins    BYTE PTR es:[rdi],dx
  4099a8:	add    BYTE PTR [rax],al
  4099aa:	add    BYTE PTR [rax],al
  4099ac:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099b2:	add    BYTE PTR [rax],al
  4099b4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ba:	add    BYTE PTR [rax],al
  4099bc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099c2:	add    BYTE PTR [rax],al
  4099c4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ca:	add    BYTE PTR [rax],al
  4099cc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099d2:	add    BYTE PTR [rax],al
  4099d4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099da:	add    BYTE PTR [rax],al
  4099dc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099e2:	add    BYTE PTR [rax],al
  4099e4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ea:	add    BYTE PTR [rax],al
  4099ec:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099f2:	add    BYTE PTR [rax],al
  4099f4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099fa:	add    BYTE PTR [rax],al
  4099fc:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a02:	add    BYTE PTR [rax],al
  409a04:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a0a:	add    BYTE PTR [rax],al
  409a0c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a12:	add    BYTE PTR [rax],al
  409a14:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a1a:	add    BYTE PTR [rax],al
  409a1c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409a22:	add    BYTE PTR [rax],al
  409a24:	ins    DWORD PTR es:[rdi],dx
  409a25:	jae    0x409a9d
  409a27:	movsxd esi,DWORD PTR [rdx+0x74]
  409a2a:	cs fs ins BYTE PTR es:[rdi],dx
  409a2d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],dh
  40a029:	(bad)  
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x19],ah
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax],dh
  40a049:	sbb    DWORD PTR [rax+0x0],eax
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
