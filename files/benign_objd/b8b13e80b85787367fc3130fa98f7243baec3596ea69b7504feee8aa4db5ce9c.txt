
b8b13e80b85787367fc3130fa98f7243baec3596ea69b7504feee8aa4db5ce9c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x20
   14000100a:	xor    edx,edx
   14000100c:	lea    rcx,[rip+0xe835]        # 0x14000f848
   140001013:	lea    r8d,[rdx+0x28]
   140001017:	call   0x14000a15c
   14000101c:	and    DWORD PTR [rip+0xe815],0x0        # 0x14000f838
   140001023:	lea    rax,[rip+0xe806]        # 0x14000f830
   14000102a:	and    QWORD PTR [rip+0xe80e],0x0        # 0x14000f840
   140001032:	lea    rcx,[rip+0xe80f]        # 0x14000f848
   140001039:	and    DWORD PTR [rip+0xe7fc],0x0        # 0x14000f83c
   140001040:	and    QWORD PTR [rip+0xe828],0x0        # 0x14000f870
   140001048:	mov    QWORD PTR [rip+0xe799],rax        # 0x14000f7e8
   14000104f:	call   0x1400069ac
   140001054:	test   eax,eax
   140001056:	jns    0x140001061
   140001058:	mov    BYTE PTR [rip+0xe775],0x1        # 0x14000f7d4
   14000105f:	jmp    0x14000106b
   140001061:	mov    DWORD PTR [rip+0xe7cd],0x38        # 0x14000f838
   14000106b:	movups xmm0,XMMWORD PTR [rip+0xb836]        # 0x14000c8a8
   140001072:	movdqu XMMWORD PTR [rip+0xe75e],xmm0        # 0x14000f7d8
   14000107a:	call   QWORD PTR [rip+0xa030]        # 0x14000b0b0
   140001080:	and    QWORD PTR [rip+0xe7f8],0x0        # 0x14000f880
   140001088:	xor    ecx,ecx
   14000108a:	mov    DWORD PTR [rip+0xe7e8],eax        # 0x14000f878
   140001090:	mov    DWORD PTR [rip+0xe7ee],0x1388        # 0x14000f888
   14000109a:	mov    DWORD PTR [rip+0xe7e8],0x3e8        # 0x14000f88c
   1400010a4:	mov    BYTE PTR [rip+0xe7e5],0x1        # 0x14000f890
   1400010ab:	mov    BYTE PTR [rip+0xe7e0],0x0        # 0x14000f892
   1400010b2:	call   QWORD PTR [rip+0xa350]        # 0x14000b408
   1400010b8:	test   eax,eax
   1400010ba:	jns    0x1400010de
   1400010bc:	cmp    eax,0x80010106
   1400010c1:	jne    0x1400010d5
   1400010c3:	lea    rcx,[rip+0xb196]        # 0x14000c260
   1400010ca:	call   QWORD PTR [rip+0xa050]        # 0x14000b120
   1400010d0:	test   rax,rax
   1400010d3:	jne    0x1400010e5
   1400010d5:	mov    BYTE PTR [rip+0xe6f8],0x1        # 0x14000f7d4
   1400010dc:	jmp    0x14000111e
   1400010de:	mov    BYTE PTR [rip+0xe7ad],0x1        # 0x14000f892
   1400010e5:	mov    rdi,QWORD PTR [rip+0xe874]        # 0x14000f960
   1400010ec:	mov    rax,QWORD PTR [rip+0xe875]        # 0x14000f968
   1400010f3:	jmp    0x140001119
   1400010f5:	mov    rbx,QWORD PTR [rdi]
   1400010f8:	test   rbx,rbx
   1400010fb:	je     0x140001115
   1400010fd:	mov    rbx,QWORD PTR [rbx+0x40]
   140001101:	mov    rcx,rbx
   140001104:	call   QWORD PTR [rip+0xa30e]        # 0x14000b418
   14000110a:	mov    cl,0x1
   14000110c:	call   rbx
   14000110e:	mov    rax,QWORD PTR [rip+0xe853]        # 0x14000f968
   140001115:	add    rdi,0x8
   140001119:	cmp    rdi,rax
   14000111c:	jb     0x1400010f5
   14000111e:	lea    rax,[rip+0xacb3]        # 0x14000bdd8
   140001125:	lea    rcx,[rip+0x9a74]        # 0x14000aba0
   14000112c:	mov    QWORD PTR [rip+0xe6fd],rax        # 0x14000f830
   140001133:	mov    rbx,QWORD PTR [rsp+0x30]
   140001138:	add    rsp,0x20
   14000113c:	pop    rdi
   14000113d:	jmp    0x14000a0ac
   140001142:	int3   
   140001143:	int3   
   140001144:	int3   
   140001145:	int3   
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex push rbx
   140001152:	sub    rsp,0x20
   140001156:	xor    edx,edx
   140001158:	lea    rcx,[rip+0xe769]        # 0x14000f8c8
   14000115f:	lea    r8d,[rdx+0x28]
   140001163:	call   0x14000a15c
   140001168:	and    QWORD PTR [rip+0xe780],0x0        # 0x14000f8f0
   140001170:	lea    rax,[rip+0xffffffffffffee89]        # 0x140000000
   140001177:	and    DWORD PTR [rip+0xe77a],0x0        # 0x14000f8f8
   14000117e:	lea    rcx,[rip+0xe743]        # 0x14000f8c8
   140001185:	and    DWORD PTR [rip+0xe770],0x0        # 0x14000f8fc
   14000118c:	mov    ebx,0x1
   140001191:	mov    QWORD PTR [rip+0xe718],rax        # 0x14000f8b0
   140001198:	mov    QWORD PTR [rip+0xe709],rax        # 0x14000f8a8
   14000119f:	lea    rax,[rip+0xb752]        # 0x14000c8f8
   1400011a6:	mov    QWORD PTR [rip+0xe713],rax        # 0x14000f8c0
   1400011ad:	mov    DWORD PTR [rip+0xe6e9],0x60        # 0x14000f8a0
   1400011b7:	mov    BYTE PTR [rip+0xe6fb],bl        # 0x14000f8b8
   1400011bd:	mov    DWORD PTR [rip+0xe6f5],0x800        # 0x14000f8bc
   1400011c7:	call   0x1400069ac
   1400011cc:	movzx  ecx,BYTE PTR [rip+0xe601]        # 0x14000f7d4
   1400011d3:	test   eax,eax
   1400011d5:	cmovs  ecx,ebx
   1400011d8:	mov    BYTE PTR [rip+0xe5f6],cl        # 0x14000f7d4
   1400011de:	lea    rcx,[rip+0x9a3b]        # 0x14000ac20
   1400011e5:	add    rsp,0x20
   1400011e9:	pop    rbx
   1400011ea:	jmp    0x14000a0ac
   1400011ef:	int3   
   1400011f0:	sub    rsp,0x28
   1400011f4:	xor    edx,edx
   1400011f6:	lea    rcx,[rip+0xe70b]        # 0x14000f908
   1400011fd:	lea    r8d,[rdx+0x28]
   140001201:	call   0x14000a15c
   140001206:	and    QWORD PTR [rip+0xe72a],0x0        # 0x14000f938
   14000120e:	lea    rcx,[rip+0xe6f3]        # 0x14000f908
   140001215:	and    DWORD PTR [rip+0xe724],0x0        # 0x14000f940
   14000121c:	and    DWORD PTR [rip+0xe721],0x0        # 0x14000f944
   140001223:	and    QWORD PTR [rip+0xe705],0x0        # 0x14000f930
   14000122b:	mov    DWORD PTR [rip+0xe6cb],0x48        # 0x14000f900
   140001235:	call   0x1400069ac
   14000123a:	test   eax,eax
   14000123c:	jns    0x14000124c
   14000123e:	and    DWORD PTR [rip+0xe6bb],0x0        # 0x14000f900
   140001245:	mov    BYTE PTR [rip+0xe588],0x1        # 0x14000f7d4
   14000124c:	lea    rcx,[rip+0x9a1d]        # 0x14000ac70
   140001253:	add    rsp,0x28
   140001257:	jmp    0x14000a0ac
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	sub    rsp,0x28
   140001264:	xor    edx,edx
   140001266:	lea    rcx,[rip+0xe703]        # 0x14000f970
   14000126d:	lea    r8d,[rdx+0x28]
   140001271:	call   0x14000a15c
   140001276:	and    DWORD PTR [rip+0xe6d3],0x0        # 0x14000f950
   14000127d:	lea    rax,[rip+0xffffffffffffed7c]        # 0x140000000
   140001284:	mov    QWORD PTR [rip+0xe6cd],rax        # 0x14000f958
   14000128b:	lea    rcx,[rip+0xe6de]        # 0x14000f970
   140001292:	lea    rax,[rip+0xcd27]        # 0x14000dfc0
   140001299:	mov    QWORD PTR [rip+0xe6c0],rax        # 0x14000f960
   1400012a0:	lea    rax,[rip+0xcd21]        # 0x14000dfc8
   1400012a7:	mov    QWORD PTR [rip+0xe6ba],rax        # 0x14000f968
   1400012ae:	call   0x1400069ac
   1400012b3:	test   eax,eax
   1400012b5:	jns    0x1400012c0
   1400012b7:	mov    BYTE PTR [rip+0xe516],0x1        # 0x14000f7d4
   1400012be:	jmp    0x1400012ca
   1400012c0:	mov    DWORD PTR [rip+0xe686],0x48        # 0x14000f950
   1400012ca:	lea    rcx,[rip+0x9a8f]        # 0x14000ad60
   1400012d1:	add    rsp,0x28
   1400012d5:	jmp    0x14000a0ac
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	int3   
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	mov    rcx,QWORD PTR [rcx]
   1400012f3:	rex.W jmp QWORD PTR [rip+0x9ed6]        # 0x14000b1d0
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	xor    r9d,r9d
   140001303:	mov    r8d,ecx
   140001306:	lea    edx,[r9+0x65]
   14000130a:	jmp    0x140008b04
   14000130f:	int3   
   140001310:	int3   
   140001311:	int3   
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	mov    r11,rsp
   14000131b:	mov    DWORD PTR [r11+0x20],r9d
   14000131f:	sub    rsp,0x58
   140001323:	and    QWORD PTR [r11-0x18],0x0
   140001328:	lea    rax,[r11+0x28]
   14000132c:	mov    r9d,0x4
   140001332:	mov    QWORD PTR [r11-0x20],r9
   140001336:	mov    QWORD PTR [r11-0x28],rax
   14000133a:	lea    rax,[r11+0x20]
   14000133e:	mov    QWORD PTR [r11-0x30],r9
   140001342:	movzx  r9d,dx
   140001346:	mov    edx,0x2b
   14000134b:	mov    QWORD PTR [r11-0x38],rax
   14000134f:	call   QWORD PTR [rip+0x9ce3]        # 0x14000b038
   140001355:	add    rsp,0x58
   140001359:	ret    
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	mov    r11,rsp
   140001363:	mov    DWORD PTR [r11+0x20],r9d
   140001367:	sub    rsp,0x98
   14000136e:	and    QWORD PTR [r11-0x18],0x0
   140001373:	lea    rax,[r11+0x48]
   140001377:	mov    r8d,0x46
   14000137d:	movzx  r9d,r8w
   140001381:	lea    edx,[r8-0x42]
   140001385:	mov    QWORD PTR [r11-0x20],rdx
   140001389:	lea    r8,[rip+0xb0c8]        # 0x14000c458
   140001390:	mov    QWORD PTR [r11-0x28],rax
   140001394:	lea    rax,[r11+0x40]
   140001398:	mov    QWORD PTR [r11-0x30],rdx
   14000139c:	mov    QWORD PTR [r11-0x38],rax
   1400013a0:	lea    rax,[r11+0x38]
   1400013a4:	mov    QWORD PTR [r11-0x40],rdx
   1400013a8:	mov    QWORD PTR [r11-0x48],rax
   1400013ac:	lea    rax,[r11+0x30]
   1400013b0:	mov    QWORD PTR [r11-0x50],rdx
   1400013b4:	mov    QWORD PTR [r11-0x58],rax
   1400013b8:	lea    rax,[r11+0x28]
   1400013bc:	mov    QWORD PTR [r11-0x60],rdx
   1400013c0:	mov    QWORD PTR [r11-0x68],rax
   1400013c4:	lea    rax,[r11+0x20]
   1400013c8:	mov    QWORD PTR [r11-0x70],rdx
   1400013cc:	mov    edx,0x2b
   1400013d1:	mov    QWORD PTR [r11-0x78],rax
   1400013d5:	call   QWORD PTR [rip+0x9c5d]        # 0x14000b038
   1400013db:	add    rsp,0x98
   1400013e2:	ret    
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	mov    DWORD PTR [rsp+0x20],r9d
   1400013f1:	sub    rsp,0x68
   1400013f5:	mov    r10,QWORD PTR [rsp+0x90]
   1400013fd:	test   r10,r10
   140001400:	je     0x140001415
   140001402:	or     r9,0xffffffffffffffff
   140001406:	inc    r9
   140001409:	cmp    BYTE PTR [r10+r9*1],0x0
   14000140e:	jne    0x140001406
   140001410:	inc    r9
   140001413:	jmp    0x14000141b
   140001415:	mov    r9d,0x5
   14000141b:	mov    r11d,0x4
   140001421:	lea    rax,[rip+0xaa68]        # 0x14000be90
   140001428:	test   r10,r10
   14000142b:	cmovne rax,r10
   14000142f:	and    QWORD PTR [rsp+0x50],0x0
   140001435:	mov    QWORD PTR [rsp+0x48],r11
   14000143a:	lea    r10,[rsp+0x98]
   140001442:	mov    QWORD PTR [rsp+0x40],r10
   140001447:	mov    QWORD PTR [rsp+0x38],r9
   14000144c:	mov    QWORD PTR [rsp+0x30],rax
   140001451:	lea    rax,[rsp+0x88]
   140001459:	movzx  r9d,dx
   14000145d:	lea    edx,[r11+0x27]
   140001461:	mov    QWORD PTR [rsp+0x28],r11
   140001466:	mov    QWORD PTR [rsp+0x20],rax
   14000146b:	call   QWORD PTR [rip+0x9bc7]        # 0x14000b038
   140001471:	add    rsp,0x68
   140001475:	ret    
   140001476:	int3   
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	mov    QWORD PTR [rsp+0x8],rbx
   140001485:	mov    QWORD PTR [rsp+0x10],rsi
   14000148a:	push   rdi
   14000148b:	sub    rsp,0x20
   14000148f:	and    DWORD PTR [r8],0x0
   140001493:	mov    rbx,rdx
   140001496:	sub    ecx,0x4
   140001499:	je     0x1400014b0
   14000149b:	cmp    ecx,0x1
   14000149e:	je     0x1400014a7
   1400014a0:	mov    eax,0x57
   1400014a5:	jmp    0x1400014ef
   1400014a7:	xor    edi,edi
   1400014a9:	xor    eax,eax
   1400014ab:	xor    sil,sil
   1400014ae:	jmp    0x1400014d1
   1400014b0:	mov    rcx,r9
   1400014b3:	call   QWORD PTR [rip+0x9b87]        # 0x14000b040
   1400014b9:	mov    rcx,rax
   1400014bc:	mov    rdi,rax
   1400014bf:	call   QWORD PTR [rip+0x9b83]        # 0x14000b048
   1400014c5:	mov    rcx,rdi
   1400014c8:	mov    sil,al
   1400014cb:	call   QWORD PTR [rip+0x9b7f]        # 0x14000b050
   1400014d1:	test   BYTE PTR [rbx+0x1a],0x2
   1400014d5:	je     0x1400014e2
   1400014d7:	mov    rcx,QWORD PTR [rbx+0x10]
   1400014db:	test   rcx,rcx
   1400014de:	cmovne rbx,rcx
   1400014e2:	mov    QWORD PTR [rbx+0x10],rdi
   1400014e6:	mov    BYTE PTR [rbx+0x19],sil
   1400014ea:	mov    DWORD PTR [rbx+0x1c],eax
   1400014ed:	xor    eax,eax
   1400014ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014f4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400014f9:	add    rsp,0x20
   1400014fd:	pop    rdi
   1400014fe:	ret    
   1400014ff:	int3   
   140001500:	int3   
   140001501:	int3   
   140001502:	int3   
   140001503:	int3   
   140001504:	int3   
   140001505:	int3   
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	mov    QWORD PTR [rsp+0x8],rbx
   140001515:	mov    QWORD PTR [rsp+0x10],rbp
   14000151a:	mov    QWORD PTR [rsp+0x18],rsi
   14000151f:	push   rdi
   140001520:	sub    rsp,0x20
   140001524:	mov    rsi,QWORD PTR [rip+0xe435]        # 0x14000f960
   14000152b:	mov    ebp,edx
   14000152d:	mov    rax,QWORD PTR [rip+0xe434]        # 0x14000f968
   140001534:	mov    rdi,rcx
   140001537:	jmp    0x14000155d
   140001539:	mov    rbx,QWORD PTR [rsi]
   14000153c:	test   rbx,rbx
   14000153f:	je     0x140001559
   140001541:	mov    rbx,QWORD PTR [rbx+0x40]
   140001545:	mov    rcx,rbx
   140001548:	call   QWORD PTR [rip+0x9eca]        # 0x14000b418
   14000154e:	xor    ecx,ecx
   140001550:	call   rbx
   140001552:	mov    rax,QWORD PTR [rip+0xe40f]        # 0x14000f968
   140001559:	add    rsi,0x8
   14000155d:	cmp    rsi,rax
   140001560:	jb     0x140001539
   140001562:	mov    rcx,rdi
   140001565:	call   0x14000676c
   14000156a:	call   0x1400066d0
   14000156f:	cmp    BYTE PTR [rdi+0x62],0x0
   140001573:	je     0x14000157b
   140001575:	call   QWORD PTR [rip+0x9e5d]        # 0x14000b3d8
   14000157b:	mov    rcx,rdi
   14000157e:	call   0x14000676c
   140001583:	test   bpl,0x1
   140001587:	je     0x140001591
   140001589:	mov    rcx,rdi
   14000158c:	call   0x1400096d4
   140001591:	mov    rbx,QWORD PTR [rsp+0x30]
   140001596:	mov    rax,rdi
   140001599:	mov    rbp,QWORD PTR [rsp+0x38]
   14000159e:	mov    rsi,QWORD PTR [rsp+0x40]
   1400015a3:	add    rsp,0x20
   1400015a7:	pop    rdi
   1400015a8:	ret    
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400015ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400015bf:	push   rdi
   1400015c0:	sub    rsp,0x60
   1400015c4:	xor    esi,esi
   1400015c6:	mov    QWORD PTR [rip+0xe247],0x1        # 0x14000f818
   1400015d1:	lea    rax,[rip+0xa278]        # 0x14000b850
   1400015d8:	mov    QWORD PTR [rip+0xe231],rsi        # 0x14000f810
   1400015df:	lea    rbx,[rip+0xe21a]        # 0x14000f800
   1400015e6:	mov    QWORD PTR [rip+0xe213],rsi        # 0x14000f800
   1400015ed:	mov    QWORD PTR [rip+0xe234],rax        # 0x14000f828
   1400015f4:	lea    rdi,[rip+0xe22d]        # 0x14000f828
   1400015fb:	mov    QWORD PTR [rip+0xda2e],rbx        # 0x14000f030
   140001602:	mov    r8,QWORD PTR [rdi]
   140001605:	lea    rax,[rbx+0x8]
   140001609:	mov    QWORD PTR [rsp+0x38],rax
   14000160e:	lea    rcx,[rip+0xfffffffffffffe6b]        # 0x140001480
   140001615:	mov    QWORD PTR [rsp+0x30],rsi
   14000161a:	lea    rax,[rsp+0x48]
   14000161f:	mov    QWORD PTR [rsp+0x48],r8
   140001624:	lea    rdi,[rdi+0x8]
   140001628:	mov    QWORD PTR [rsp+0x50],rsi
   14000162d:	mov    r9d,0x1
   140001633:	mov    QWORD PTR [rsp+0x28],rsi
   140001638:	mov    rdx,rbx
   14000163b:	mov    QWORD PTR [rsp+0x20],rax
   140001640:	mov    QWORD PTR [rbx+0x20],r8
   140001644:	call   QWORD PTR [rip+0x9a0e]        # 0x14000b058
   14000164a:	mov    rbx,QWORD PTR [rbx]
   14000164d:	test   rbx,rbx
   140001650:	jne    0x140001602
   140001652:	cmp    BYTE PTR [rip+0xe17b],sil        # 0x14000f7d4
   140001659:	je     0x140001660
   14000165b:	or     edi,0xffffffff
   14000165e:	jmp    0x140001688
   140001660:	mov    DWORD PTR [rsp+0x40],esi
   140001664:	call   QWORD PTR [rip+0x9a2e]        # 0x14000b098
   14000166a:	mov    rdx,rax
   14000166d:	lea    r8,[rsp+0x40]
   140001672:	call   0x1400040c8
   140001677:	cmp    al,0x1
   140001679:	jne    0x140001684
   14000167b:	call   0x140004338
   140001680:	mov    edi,eax
   140001682:	jmp    0x140001688
   140001684:	mov    edi,DWORD PTR [rsp+0x40]
   140001688:	mov    rbx,QWORD PTR [rip+0xd9a1]        # 0x14000f030
   14000168f:	lea    rbp,[rip+0xd99a]        # 0x14000f030
   140001696:	cmp    rbx,rbp
   140001699:	je     0x1400016fb
   14000169b:	test   BYTE PTR [rbx+0x1c],0x1
   14000169f:	je     0x1400016d2
   1400016a1:	cmp    BYTE PTR [rbx+0x19],0x2
   1400016a5:	jb     0x1400016d2
   1400016a7:	call   0x1400068c8
   1400016ac:	mov    rcx,QWORD PTR [rip+0xd97d]        # 0x14000f030
   1400016b3:	lea    r8,[rip+0xad9e]        # 0x14000c458
   1400016ba:	mov    r9d,eax
   1400016bd:	mov    edx,0xa
   1400016c2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400016c6:	call   0x140006960
   1400016cb:	mov    rbx,QWORD PTR [rip+0xd95e]        # 0x14000f030
   1400016d2:	cmp    rbx,rbp
   1400016d5:	je     0x1400016fb
   1400016d7:	jmp    0x1400016ef
   1400016d9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400016dd:	test   rcx,rcx
   1400016e0:	je     0x1400016ec
   1400016e2:	call   QWORD PTR [rip+0x9978]        # 0x14000b060
   1400016e8:	mov    QWORD PTR [rbx+0x8],rsi
   1400016ec:	mov    rbx,QWORD PTR [rbx]
   1400016ef:	test   rbx,rbx
   1400016f2:	jne    0x1400016d9
   1400016f4:	mov    QWORD PTR [rip+0xd935],rbp        # 0x14000f030
   1400016fb:	lea    r11,[rsp+0x60]
   140001700:	mov    eax,edi
   140001702:	mov    rbx,QWORD PTR [r11+0x10]
   140001706:	mov    rbp,QWORD PTR [r11+0x18]
   14000170a:	mov    rsi,QWORD PTR [r11+0x20]
   14000170e:	mov    rsp,r11
   140001711:	pop    rdi
   140001712:	ret    
   140001713:	int3   
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	mov    QWORD PTR [rsp+0x8],rbx
   140001721:	mov    QWORD PTR [rsp+0x10],rsi
   140001726:	push   rdi
   140001727:	sub    rsp,0x20
   14000172b:	mov    rdi,QWORD PTR [rcx+0x58]
   14000172f:	mov    rsi,rcx
   140001732:	test   rdi,rdi
   140001735:	je     0x14000174c
   140001737:	mov    rax,QWORD PTR [rdi]
   14000173a:	mov    rbx,QWORD PTR [rax+0x10]
   14000173e:	mov    rcx,rbx
   140001741:	call   QWORD PTR [rip+0x9cd1]        # 0x14000b418
   140001747:	mov    rcx,rdi
   14000174a:	call   rbx
   14000174c:	lea    rcx,[rsi+0x28]
   140001750:	cmp    BYTE PTR [rcx+0x28],0x0
   140001754:	je     0x140001760
   140001756:	mov    BYTE PTR [rcx+0x28],0x0
   14000175a:	call   QWORD PTR [rip+0x9998]        # 0x14000b0f8
   140001760:	mov    rbx,QWORD PTR [rsp+0x30]
   140001765:	mov    rsi,QWORD PTR [rsp+0x38]
   14000176a:	add    rsp,0x20
   14000176e:	pop    rdi
   14000176f:	ret    
   140001770:	int3   
   140001771:	int3   
   140001772:	int3   
   140001773:	int3   
   140001774:	int3   
   140001775:	int3   
   140001776:	int3   
   140001777:	int3   
   140001778:	mov    QWORD PTR [rsp+0x8],rbx
   14000177d:	mov    QWORD PTR [rsp+0x10],rsi
   140001782:	push   rdi
   140001783:	sub    rsp,0x30
   140001787:	lea    rsi,[rcx+0x60]
   14000178b:	mov    rbx,rcx
   14000178e:	mov    rcx,rsi
   140001791:	xor    edi,edi
   140001793:	call   QWORD PTR [rip+0x9957]        # 0x14000b0f0
   140001799:	add    rbx,0x58
   14000179d:	cmp    QWORD PTR [rbx],rdi
   1400017a0:	jne    0x14000181a
   1400017a2:	lea    r9,[rip+0xac27]        # 0x14000c3d0
   1400017a9:	mov    QWORD PTR [rsp+0x20],rbx
   1400017ae:	xor    edx,edx
   1400017b0:	lea    r8d,[rdi+0x4]
   1400017b4:	lea    rcx,[rip+0xac65]        # 0x14000c420
   1400017bb:	call   QWORD PTR [rip+0x9c27]        # 0x14000b3e8
   1400017c1:	mov    edi,eax
   1400017c3:	test   eax,eax
   1400017c5:	jns    0x14000181a
   1400017c7:	mov    rcx,QWORD PTR [rip+0xd862]        # 0x14000f030
   1400017ce:	lea    rax,[rip+0xd85b]        # 0x14000f030
   1400017d5:	cmp    rcx,rax
   1400017d8:	je     0x14000181a
   1400017da:	test   BYTE PTR [rcx+0x1c],0x8
   1400017de:	je     0x14000181a
   1400017e0:	cmp    BYTE PTR [rcx+0x19],0x2
   1400017e4:	jb     0x14000181a
   1400017e6:	call   0x1400068c8
   1400017eb:	mov    rcx,QWORD PTR [rip+0xd83e]        # 0x14000f030
   1400017f2:	lea    r8,[rip+0xac5f]        # 0x14000c458
   1400017f9:	mov    r9d,eax
   1400017fc:	mov    DWORD PTR [rsp+0x28],edi
   140001800:	lea    rax,[rip+0xa691]        # 0x14000be98
   140001807:	mov    edx,0xb
   14000180c:	mov    QWORD PTR [rsp+0x20],rax
   140001811:	mov    rcx,QWORD PTR [rcx+0x10]
   140001815:	call   0x1400013ec
   14000181a:	mov    rcx,rsi
   14000181d:	call   QWORD PTR [rip+0x98c5]        # 0x14000b0e8
   140001823:	mov    rbx,QWORD PTR [rsp+0x40]
   140001828:	mov    eax,edi
   14000182a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000182f:	add    rsp,0x30
   140001833:	pop    rdi
   140001834:	ret    
   140001835:	int3   
   140001836:	int3   
   140001837:	int3   
   140001838:	int3   
   140001839:	int3   
   14000183a:	int3   
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	mov    QWORD PTR [rsp+0x8],rbx
   140001845:	mov    QWORD PTR [rsp+0x10],rsi
   14000184a:	push   rdi
   14000184b:	sub    rsp,0x30
   14000184f:	mov    rsi,rdx
   140001852:	mov    rdi,rcx
   140001855:	test   rdx,rdx
   140001858:	jne    0x1400018b9
   14000185a:	mov    rcx,QWORD PTR [rip+0xd7cf]        # 0x14000f030
   140001861:	lea    rax,[rip+0xd7c8]        # 0x14000f030
   140001868:	cmp    rcx,rax
   14000186b:	je     0x1400018af
   14000186d:	test   BYTE PTR [rcx+0x1c],0x8
   140001871:	je     0x1400018af
   140001873:	cmp    BYTE PTR [rcx+0x19],0x2
   140001877:	jb     0x1400018af
   140001879:	call   0x1400068c8
   14000187e:	mov    rcx,QWORD PTR [rip+0xd7ab]        # 0x14000f030
   140001885:	lea    edx,[rsi+0xc]
   140001888:	mov    r9d,eax
   14000188b:	mov    DWORD PTR [rsp+0x28],0x80070057
   140001893:	lea    rax,[rip+0xa62e]        # 0x14000bec8
   14000189a:	lea    r8,[rip+0xabb7]        # 0x14000c458
   1400018a1:	mov    QWORD PTR [rsp+0x20],rax
   1400018a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018aa:	call   0x1400013ec
   1400018af:	mov    ebx,0x80070057
   1400018b4:	jmp    0x14000197a
   1400018b9:	call   0x140001778
   1400018be:	mov    ebx,eax
   1400018c0:	test   eax,eax
   1400018c2:	jns    0x140001905
   1400018c4:	mov    rcx,QWORD PTR [rip+0xd765]        # 0x14000f030
   1400018cb:	lea    rax,[rip+0xd75e]        # 0x14000f030
   1400018d2:	cmp    rcx,rax
   1400018d5:	je     0x14000197a
   1400018db:	test   BYTE PTR [rcx+0x1c],0x8
   1400018df:	je     0x14000197a
   1400018e5:	cmp    BYTE PTR [rcx+0x19],0x2
   1400018e9:	jb     0x14000197a
   1400018ef:	call   0x1400068c8
   1400018f4:	mov    r9d,eax
   1400018f7:	mov    edx,0xd
   1400018fc:	lea    rax,[rip+0xa5d5]        # 0x14000bed8
   140001903:	jmp    0x14000195a
   140001905:	mov    rdi,QWORD PTR [rdi+0x58]
   140001909:	mov    rax,QWORD PTR [rdi]
   14000190c:	mov    rbx,QWORD PTR [rax+0x38]
   140001910:	mov    rcx,rbx
   140001913:	call   QWORD PTR [rip+0x9aff]        # 0x14000b418
   140001919:	mov    rdx,rsi
   14000191c:	mov    rcx,rdi
   14000191f:	call   rbx
   140001921:	mov    ebx,eax
   140001923:	test   eax,eax
   140001925:	jns    0x14000197a
   140001927:	mov    rcx,QWORD PTR [rip+0xd702]        # 0x14000f030
   14000192e:	lea    rax,[rip+0xd6fb]        # 0x14000f030
   140001935:	cmp    rcx,rax
   140001938:	je     0x14000197a
   14000193a:	test   BYTE PTR [rcx+0x1c],0x8
   14000193e:	je     0x14000197a
   140001940:	cmp    BYTE PTR [rcx+0x19],0x2
   140001944:	jb     0x14000197a
   140001946:	call   0x1400068c8
   14000194b:	mov    r9d,eax
   14000194e:	mov    edx,0xe
   140001953:	lea    rax,[rip+0xa5b6]        # 0x14000bf10
   14000195a:	mov    rcx,QWORD PTR [rip+0xd6cf]        # 0x14000f030
   140001961:	lea    r8,[rip+0xaaf0]        # 0x14000c458
   140001968:	mov    DWORD PTR [rsp+0x28],ebx
   14000196c:	mov    QWORD PTR [rsp+0x20],rax
   140001971:	mov    rcx,QWORD PTR [rcx+0x10]
   140001975:	call   0x1400013ec
   14000197a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000197f:	mov    eax,ebx
   140001981:	mov    rbx,QWORD PTR [rsp+0x40]
   140001986:	add    rsp,0x30
   14000198a:	pop    rdi
   14000198b:	ret    
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	int3   
   140001991:	int3   
   140001992:	int3   
   140001993:	int3   
   140001994:	int3   
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400019a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400019aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400019af:	push   rdi
   1400019b0:	push   r14
   1400019b2:	push   r15
   1400019b4:	sub    rsp,0x40
   1400019b8:	mov    rsi,r9
   1400019bb:	mov    rbp,r8
   1400019be:	mov    r14,rdx
   1400019c1:	mov    rdi,rcx
   1400019c4:	test   rdx,rdx
   1400019c7:	jne    0x140001a09
   1400019c9:	mov    rcx,QWORD PTR [rip+0xd660]        # 0x14000f030
   1400019d0:	lea    rax,[rip+0xd659]        # 0x14000f030
   1400019d7:	cmp    rcx,rax
   1400019da:	je     0x140001c0b
   1400019e0:	test   BYTE PTR [rcx+0x1c],0x8
   1400019e4:	je     0x140001c0b
   1400019ea:	cmp    BYTE PTR [rcx+0x19],0x2
   1400019ee:	jb     0x140001c0b
   1400019f4:	call   0x1400068c8
   1400019f9:	mov    r9d,eax
   1400019fc:	lea    edx,[r14+0xf]
   140001a00:	lea    rax,[rip+0xa4c1]        # 0x14000bec8
   140001a07:	jmp    0x140001a4d
   140001a09:	test   r8,r8
   140001a0c:	jne    0x140001a76
   140001a0e:	mov    rcx,QWORD PTR [rip+0xd61b]        # 0x14000f030
   140001a15:	lea    rax,[rip+0xd614]        # 0x14000f030
   140001a1c:	cmp    rcx,rax
   140001a1f:	je     0x140001c0b
   140001a25:	test   BYTE PTR [rcx+0x1c],0x8
   140001a29:	je     0x140001c0b
   140001a2f:	cmp    BYTE PTR [rcx+0x19],0x2
   140001a33:	jb     0x140001c0b
   140001a39:	call   0x1400068c8
   140001a3e:	mov    r9d,eax
   140001a41:	mov    edx,0x10
   140001a46:	lea    rax,[rip+0xa4e3]        # 0x14000bf30
   140001a4d:	mov    rcx,QWORD PTR [rip+0xd5dc]        # 0x14000f030
   140001a54:	lea    r8,[rip+0xa9fd]        # 0x14000c458
   140001a5b:	mov    DWORD PTR [rsp+0x28],0x80070057
   140001a63:	mov    QWORD PTR [rsp+0x20],rax
   140001a68:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a6c:	call   0x1400013ec
   140001a71:	jmp    0x140001c0b
   140001a76:	test   r9,r9
   140001a79:	jne    0x140001adc
   140001a7b:	mov    rcx,QWORD PTR [rip+0xd5ae]        # 0x14000f030
   140001a82:	lea    rax,[rip+0xd5a7]        # 0x14000f030
   140001a89:	cmp    rcx,rax
   140001a8c:	je     0x140001ad2
   140001a8e:	test   BYTE PTR [rcx+0x1c],0x8
   140001a92:	je     0x140001ad2
   140001a94:	cmp    BYTE PTR [rcx+0x19],0x2
   140001a98:	jb     0x140001ad2
   140001a9a:	call   0x1400068c8
   140001a9f:	mov    rcx,QWORD PTR [rip+0xd58a]        # 0x14000f030
   140001aa6:	lea    r8,[rip+0xa9ab]        # 0x14000c458
   140001aad:	mov    r9d,eax
   140001ab0:	mov    DWORD PTR [rsp+0x28],0x80070057
   140001ab8:	lea    rax,[rip+0xa481]        # 0x14000bf40
   140001abf:	mov    edx,0x11
   140001ac4:	mov    QWORD PTR [rsp+0x20],rax
   140001ac9:	mov    rcx,QWORD PTR [rcx+0x10]
   140001acd:	call   0x1400013ec
   140001ad2:	mov    ebx,0x80070057
   140001ad7:	jmp    0x140001d11
   140001adc:	mov    rcx,rdx
   140001adf:	call   QWORD PTR [rip+0x96fb]        # 0x14000b1e0
   140001ae5:	cmp    eax,0x100
   140001aea:	jbe    0x140001b26
   140001aec:	mov    rcx,QWORD PTR [rip+0xd53d]        # 0x14000f030
   140001af3:	lea    rax,[rip+0xd536]        # 0x14000f030
   140001afa:	cmp    rcx,rax
   140001afd:	je     0x140001c0b
   140001b03:	test   BYTE PTR [rcx+0x1c],0x8
   140001b07:	je     0x140001c0b
   140001b0d:	cmp    BYTE PTR [rcx+0x19],0x2
   140001b11:	jb     0x140001c0b
   140001b17:	call   0x1400068c8
   140001b1c:	mov    edx,0x12
   140001b21:	jmp    0x140001be9
   140001b26:	mov    rcx,rbp
   140001b29:	call   QWORD PTR [rip+0x96b1]        # 0x14000b1e0
   140001b2f:	cmp    eax,0x201
   140001b34:	jbe    0x140001b6d
   140001b36:	mov    rcx,QWORD PTR [rip+0xd4f3]        # 0x14000f030
   140001b3d:	lea    rax,[rip+0xd4ec]        # 0x14000f030
   140001b44:	cmp    rcx,rax
   140001b47:	je     0x140001c0b
   140001b4d:	test   BYTE PTR [rcx+0x1c],0x8
   140001b51:	je     0x140001c0b
   140001b57:	cmp    BYTE PTR [rcx+0x19],0x2
   140001b5b:	jb     0x140001c0b
   140001b61:	call   0x1400068c8
   140001b66:	mov    edx,0x13
   140001b6b:	jmp    0x140001be9
   140001b6d:	mov    rcx,rsi
   140001b70:	call   QWORD PTR [rip+0x966a]        # 0x14000b1e0
   140001b76:	cmp    eax,0x400
   140001b7b:	jbe    0x140001ba8
   140001b7d:	mov    rcx,QWORD PTR [rip+0xd4ac]        # 0x14000f030
   140001b84:	lea    rax,[rip+0xd4a5]        # 0x14000f030
   140001b8b:	cmp    rcx,rax
   140001b8e:	je     0x140001c0b
   140001b90:	test   BYTE PTR [rcx+0x1c],0x8
   140001b94:	je     0x140001c0b
   140001b96:	cmp    BYTE PTR [rcx+0x19],0x2
   140001b9a:	jb     0x140001c0b
   140001b9c:	call   0x1400068c8
   140001ba1:	mov    edx,0x14
   140001ba6:	jmp    0x140001be9
   140001ba8:	mov    r15,QWORD PTR [rsp+0x80]
   140001bb0:	mov    rcx,r15
   140001bb3:	call   QWORD PTR [rip+0x9627]        # 0x14000b1e0
   140001bb9:	cmp    eax,0x2800
   140001bbe:	jbe    0x140001c15
   140001bc0:	mov    rcx,QWORD PTR [rip+0xd469]        # 0x14000f030
   140001bc7:	lea    rax,[rip+0xd462]        # 0x14000f030
   140001bce:	cmp    rcx,rax
   140001bd1:	je     0x140001c0b
   140001bd3:	test   BYTE PTR [rcx+0x1c],0x8
   140001bd7:	je     0x140001c0b
   140001bd9:	cmp    BYTE PTR [rcx+0x19],0x2
   140001bdd:	jb     0x140001c0b
   140001bdf:	call   0x1400068c8
   140001be4:	mov    edx,0x15
   140001be9:	mov    rcx,QWORD PTR [rip+0xd440]        # 0x14000f030
   140001bf0:	lea    r8,[rip+0xa861]        # 0x14000c458
   140001bf7:	mov    r9d,eax
   140001bfa:	mov    DWORD PTR [rsp+0x20],0x80070057
   140001c02:	mov    rcx,QWORD PTR [rcx+0x10]
   140001c06:	call   0x140001318
   140001c0b:	mov    ebx,0x80070057
   140001c10:	jmp    0x140001cfa
   140001c15:	mov    rcx,rdi
   140001c18:	call   0x140001778
   140001c1d:	mov    ebx,eax
   140001c1f:	test   eax,eax
   140001c21:	jns    0x140001c64
   140001c23:	mov    rcx,QWORD PTR [rip+0xd406]        # 0x14000f030
   140001c2a:	lea    rax,[rip+0xd3ff]        # 0x14000f030
   140001c31:	cmp    rcx,rax
   140001c34:	je     0x140001cfa
   140001c3a:	test   BYTE PTR [rcx+0x1c],0x8
   140001c3e:	je     0x140001cfa
   140001c44:	cmp    BYTE PTR [rcx+0x19],0x2
   140001c48:	jb     0x140001cfa
   140001c4e:	call   0x1400068c8
   140001c53:	mov    r9d,eax
   140001c56:	mov    edx,0x16
   140001c5b:	lea    rax,[rip+0xa276]        # 0x14000bed8
   140001c62:	jmp    0x140001cda
   140001c64:	mov    rbx,QWORD PTR [rdi+0x58]
   140001c68:	mov    rax,QWORD PTR [rbx]
   140001c6b:	mov    rdi,QWORD PTR [rax+0x40]
   140001c6f:	mov    rcx,rdi
   140001c72:	call   QWORD PTR [rip+0x97a0]        # 0x14000b418
   140001c78:	mov    eax,DWORD PTR [rsp+0x90]
   140001c7f:	mov    r9,rsi
   140001c82:	mov    DWORD PTR [rsp+0x30],eax
   140001c86:	mov    r8,rbp
   140001c89:	mov    eax,DWORD PTR [rsp+0x88]
   140001c90:	mov    rdx,r14
   140001c93:	mov    DWORD PTR [rsp+0x28],eax
   140001c97:	mov    rcx,rbx
   140001c9a:	mov    QWORD PTR [rsp+0x20],r15
   140001c9f:	call   rdi
   140001ca1:	mov    ebx,eax
   140001ca3:	test   eax,eax
   140001ca5:	jns    0x140001cfa
   140001ca7:	mov    rcx,QWORD PTR [rip+0xd382]        # 0x14000f030
   140001cae:	lea    rax,[rip+0xd37b]        # 0x14000f030
   140001cb5:	cmp    rcx,rax
   140001cb8:	je     0x140001cfa
   140001cba:	test   BYTE PTR [rcx+0x1c],0x8
   140001cbe:	je     0x140001cfa
   140001cc0:	cmp    BYTE PTR [rcx+0x19],0x2
   140001cc4:	jb     0x140001cfa
   140001cc6:	call   0x1400068c8
   140001ccb:	mov    r9d,eax
   140001cce:	mov    edx,0x17
   140001cd3:	lea    rax,[rip+0xa276]        # 0x14000bf50
   140001cda:	mov    rcx,QWORD PTR [rip+0xd34f]        # 0x14000f030
   140001ce1:	lea    r8,[rip+0xa770]        # 0x14000c458
   140001ce8:	mov    DWORD PTR [rsp+0x28],ebx
   140001cec:	mov    QWORD PTR [rsp+0x20],rax
   140001cf1:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cf5:	call   0x1400013ec
   140001cfa:	test   rsi,rsi
   140001cfd:	je     0x140001d11
   140001cff:	mov    rcx,rsi
   140001d02:	call   QWORD PTR [rip+0x94e0]        # 0x14000b1e8
   140001d08:	mov    ecx,eax
   140001d0a:	mov    rdi,rsi
   140001d0d:	xor    eax,eax
   140001d0f:	rep stos BYTE PTR es:[rdi],al
   140001d11:	mov    rbp,QWORD PTR [rsp+0x68]
   140001d16:	mov    eax,ebx
   140001d18:	mov    rbx,QWORD PTR [rsp+0x60]
   140001d1d:	mov    rsi,QWORD PTR [rsp+0x70]
   140001d22:	add    rsp,0x40
   140001d26:	pop    r15
   140001d28:	pop    r14
   140001d2a:	pop    rdi
   140001d2b:	ret    
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	int3   
   140001d31:	int3   
   140001d32:	int3   
   140001d33:	int3   
   140001d34:	int3   
   140001d35:	int3   
   140001d36:	int3   
   140001d37:	int3   
   140001d38:	int3   
   140001d39:	int3   
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	mov    rax,rsp
   140001d43:	mov    QWORD PTR [rax+0x8],rbx
   140001d47:	mov    QWORD PTR [rax+0x18],r8
   140001d4b:	push   rbp
   140001d4c:	push   rsi
   140001d4d:	push   rdi
   140001d4e:	push   r12
   140001d50:	push   r13
   140001d52:	push   r14
   140001d54:	push   r15
   140001d56:	sub    rsp,0x50
   140001d5a:	and    QWORD PTR [rax+0x10],0x0
   140001d5f:	mov    r13,r9
   140001d62:	mov    rbp,QWORD PTR [rsp+0xb8]
   140001d6a:	mov    r15,rdx
   140001d6d:	mov    rbx,rcx
   140001d70:	test   rdx,rdx
   140001d73:	jne    0x140001dd5
   140001d75:	mov    rcx,QWORD PTR [rip+0xd2b4]        # 0x14000f030
   140001d7c:	lea    rax,[rip+0xd2ad]        # 0x14000f030
   140001d83:	cmp    rcx,rax
   140001d86:	je     0x140001dcb
   140001d88:	test   BYTE PTR [rcx+0x1c],0x8
   140001d8c:	je     0x140001dcb
   140001d8e:	cmp    BYTE PTR [rcx+0x19],0x2
   140001d92:	jb     0x140001dcb
   140001d94:	call   0x1400068c8
   140001d99:	mov    r9d,eax
   140001d9c:	lea    edx,[r15+0x18]
   140001da0:	lea    rax,[rip+0xa121]        # 0x14000bec8
   140001da7:	mov    rcx,QWORD PTR [rip+0xd282]        # 0x14000f030
   140001dae:	lea    r8,[rip+0xa6a3]        # 0x14000c458
   140001db5:	mov    DWORD PTR [rsp+0x28],0x80070057
   140001dbd:	mov    QWORD PTR [rsp+0x20],rax
   140001dc2:	mov    rcx,QWORD PTR [rcx+0x10]
   140001dc6:	call   0x1400013ec
   140001dcb:	mov    esi,0x80070057
   140001dd0:	jmp    0x140002185
   140001dd5:	mov    r14,QWORD PTR [rsp+0xb0]
   140001ddd:	test   r14,r14
   140001de0:	jne    0x140001e16
   140001de2:	mov    rcx,QWORD PTR [rip+0xd247]        # 0x14000f030
   140001de9:	lea    rax,[rip+0xd240]        # 0x14000f030
   140001df0:	cmp    rcx,rax
   140001df3:	je     0x140001dcb
   140001df5:	test   BYTE PTR [rcx+0x1c],0x8
   140001df9:	je     0x140001dcb
   140001dfb:	cmp    BYTE PTR [rcx+0x19],0x2
   140001dff:	jb     0x140001dcb
   140001e01:	call   0x1400068c8
   140001e06:	mov    r9d,eax
   140001e09:	lea    edx,[r14+0x19]
   140001e0d:	lea    rax,[rip+0xa11c]        # 0x14000bf30
   140001e14:	jmp    0x140001da7
   140001e16:	test   rbp,rbp
   140001e19:	jne    0x140001e7a
   140001e1b:	mov    rcx,QWORD PTR [rip+0xd20e]        # 0x14000f030
   140001e22:	lea    rax,[rip+0xd207]        # 0x14000f030
   140001e29:	cmp    rcx,rax
   140001e2c:	je     0x140001e70
   140001e2e:	test   BYTE PTR [rcx+0x1c],0x8
   140001e32:	je     0x140001e70
   140001e34:	cmp    BYTE PTR [rcx+0x19],0x2
   140001e38:	jb     0x140001e70
   140001e3a:	call   0x1400068c8
   140001e3f:	mov    rcx,QWORD PTR [rip+0xd1ea]        # 0x14000f030
   140001e46:	lea    edx,[rbp+0x1a]
   140001e49:	mov    r9d,eax
   140001e4c:	mov    DWORD PTR [rsp+0x28],0x80070057
   140001e54:	lea    rax,[rip+0xa0e5]        # 0x14000bf40
   140001e5b:	lea    r8,[rip+0xa5f6]        # 0x14000c458
   140001e62:	mov    QWORD PTR [rsp+0x20],rax
   140001e67:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e6b:	call   0x1400013ec
   140001e70:	mov    esi,0x80070057
   140001e75:	jmp    0x14000219c
   140001e7a:	mov    rcx,rdx
   140001e7d:	call   QWORD PTR [rip+0x935d]        # 0x14000b1e0
   140001e83:	mov    edi,0x100
   140001e88:	cmp    eax,edi
   140001e8a:	jbe    0x140001ee8
   140001e8c:	mov    rcx,QWORD PTR [rip+0xd19d]        # 0x14000f030
   140001e93:	lea    rax,[rip+0xd196]        # 0x14000f030
   140001e9a:	cmp    rcx,rax
   140001e9d:	je     0x140001dcb
   140001ea3:	test   BYTE PTR [rcx+0x1c],0x8
   140001ea7:	je     0x140001dcb
   140001ead:	cmp    BYTE PTR [rcx+0x19],0x2
   140001eb1:	jb     0x140001dcb
   140001eb7:	call   0x1400068c8
   140001ebc:	mov    edx,0x1b
   140001ec1:	mov    rcx,QWORD PTR [rip+0xd168]        # 0x14000f030
   140001ec8:	lea    r8,[rip+0xa589]        # 0x14000c458
   140001ecf:	mov    r9d,eax
   140001ed2:	mov    DWORD PTR [rsp+0x20],0x80070057
   140001eda:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ede:	call   0x140001318
   140001ee3:	jmp    0x140001dcb
   140001ee8:	mov    rcx,r13
   140001eeb:	call   QWORD PTR [rip+0x92ef]        # 0x14000b1e0
   140001ef1:	cmp    eax,edi
   140001ef3:	jbe    0x140001f2c
   140001ef5:	mov    rcx,QWORD PTR [rip+0xd134]        # 0x14000f030
   140001efc:	lea    rax,[rip+0xd12d]        # 0x14000f030
   140001f03:	cmp    rcx,rax
   140001f06:	je     0x140001dcb
   140001f0c:	test   BYTE PTR [rcx+0x1c],0x8
   140001f10:	je     0x140001dcb
   140001f16:	cmp    BYTE PTR [rcx+0x19],0x2
   140001f1a:	jb     0x140001dcb
   140001f20:	call   0x1400068c8
   140001f25:	mov    edx,0x1c
   140001f2a:	jmp    0x140001ec1
   140001f2c:	mov    rcx,r14
   140001f2f:	call   QWORD PTR [rip+0x92ab]        # 0x14000b1e0
   140001f35:	cmp    eax,0x201
   140001f3a:	jbe    0x140001f76
   140001f3c:	mov    rcx,QWORD PTR [rip+0xd0ed]        # 0x14000f030
   140001f43:	lea    rax,[rip+0xd0e6]        # 0x14000f030
   140001f4a:	cmp    rcx,rax
   140001f4d:	je     0x140001dcb
   140001f53:	test   BYTE PTR [rcx+0x1c],0x8
   140001f57:	je     0x140001dcb
   140001f5d:	cmp    BYTE PTR [rcx+0x19],0x2
   140001f61:	jb     0x140001dcb
   140001f67:	call   0x1400068c8
   140001f6c:	mov    edx,0x1d
   140001f71:	jmp    0x140001ec1
   140001f76:	mov    rcx,rbp
   140001f79:	call   QWORD PTR [rip+0x9261]        # 0x14000b1e0
   140001f7f:	cmp    eax,0x400
   140001f84:	jbe    0x140001fc0
   140001f86:	mov    rcx,QWORD PTR [rip+0xd0a3]        # 0x14000f030
   140001f8d:	lea    rax,[rip+0xd09c]        # 0x14000f030
   140001f94:	cmp    rcx,rax
   140001f97:	je     0x140001dcb
   140001f9d:	test   BYTE PTR [rcx+0x1c],0x8
   140001fa1:	je     0x140001dcb
   140001fa7:	cmp    BYTE PTR [rcx+0x19],0x2
   140001fab:	jb     0x140001dcb
   140001fb1:	call   0x1400068c8
   140001fb6:	mov    edx,0x1e
   140001fbb:	jmp    0x140001ec1
   140001fc0:	mov    r12,QWORD PTR [rsp+0xc0]
   140001fc8:	mov    rcx,r12
   140001fcb:	call   QWORD PTR [rip+0x920f]        # 0x14000b1e0
   140001fd1:	cmp    eax,0x2800
   140001fd6:	jbe    0x140002012
   140001fd8:	mov    rcx,QWORD PTR [rip+0xd051]        # 0x14000f030
   140001fdf:	lea    rax,[rip+0xd04a]        # 0x14000f030
   140001fe6:	cmp    rcx,rax
   140001fe9:	je     0x140001dcb
   140001fef:	test   BYTE PTR [rcx+0x1c],0x8
   140001ff3:	je     0x140001dcb
   140001ff9:	cmp    BYTE PTR [rcx+0x19],0x2
   140001ffd:	jb     0x140001dcb
   140002003:	call   0x1400068c8
   140002008:	mov    edx,0x1f
   14000200d:	jmp    0x140001ec1
   140002012:	lea    rcx,[rbx-0x8]
   140002016:	call   0x140001778
   14000201b:	mov    esi,eax
   14000201d:	test   eax,eax
   14000201f:	jns    0x140002065
   140002021:	mov    rcx,QWORD PTR [rip+0xd008]        # 0x14000f030
   140002028:	lea    rax,[rip+0xd001]        # 0x14000f030
   14000202f:	cmp    rcx,rax
   140002032:	je     0x140002185
   140002038:	test   BYTE PTR [rcx+0x1c],0x8
   14000203c:	je     0x140002185
   140002042:	cmp    BYTE PTR [rcx+0x19],0x2
   140002046:	jb     0x140002185
   14000204c:	call   0x1400068c8
   140002051:	mov    r9d,eax
   140002054:	mov    edx,0x20
   140002059:	lea    rax,[rip+0x9e78]        # 0x14000bed8
   140002060:	jmp    0x140002165
   140002065:	mov    rbx,QWORD PTR [rbx+0x50]
   140002069:	mov    rax,QWORD PTR [rbx]
   14000206c:	mov    rdi,QWORD PTR [rax]
   14000206f:	mov    rcx,rdi
   140002072:	call   QWORD PTR [rip+0x93a0]        # 0x14000b418
   140002078:	lea    r8,[rsp+0x98]
   140002080:	mov    rcx,rbx
   140002083:	lea    rdx,[rip+0xa246]        # 0x14000c2d0
   14000208a:	call   rdi
   14000208c:	mov    esi,eax
   14000208e:	test   eax,eax
   140002090:	jns    0x1400020d6
   140002092:	mov    rcx,QWORD PTR [rip+0xcf97]        # 0x14000f030
   140002099:	lea    rax,[rip+0xcf90]        # 0x14000f030
   1400020a0:	cmp    rcx,rax
   1400020a3:	je     0x140002185
   1400020a9:	test   BYTE PTR [rcx+0x1c],0x8
   1400020ad:	je     0x140002185
   1400020b3:	cmp    BYTE PTR [rcx+0x19],0x2
   1400020b7:	jb     0x140002185
   1400020bd:	call   0x1400068c8
   1400020c2:	mov    r9d,eax
   1400020c5:	mov    edx,0x21
   1400020ca:	lea    rax,[rip+0x9e97]        # 0x14000bf68
   1400020d1:	jmp    0x140002165
   1400020d6:	mov    rdi,QWORD PTR [rsp+0x98]
   1400020de:	mov    rax,QWORD PTR [rdi]
   1400020e1:	mov    rbx,QWORD PTR [rax+0x70]
   1400020e5:	mov    rcx,rbx
   1400020e8:	call   QWORD PTR [rip+0x932a]        # 0x14000b418
   1400020ee:	mov    eax,DWORD PTR [rsp+0xd0]
   1400020f5:	mov    r9,r13
   1400020f8:	mov    r8,QWORD PTR [rsp+0xa0]
   140002100:	mov    rdx,r15
   140002103:	mov    DWORD PTR [rsp+0x48],eax
   140002107:	mov    rcx,rdi
   14000210a:	mov    eax,DWORD PTR [rsp+0xc8]
   140002111:	mov    DWORD PTR [rsp+0x40],eax
   140002115:	mov    QWORD PTR [rsp+0x38],r12
   14000211a:	and    QWORD PTR [rsp+0x30],0x0
   140002120:	mov    QWORD PTR [rsp+0x28],rbp
   140002125:	mov    QWORD PTR [rsp+0x20],r14
   14000212a:	call   rbx
   14000212c:	mov    esi,eax
   14000212e:	test   eax,eax
   140002130:	jns    0x140002185
   140002132:	mov    rcx,QWORD PTR [rip+0xcef7]        # 0x14000f030
   140002139:	lea    rax,[rip+0xcef0]        # 0x14000f030
   140002140:	cmp    rcx,rax
   140002143:	je     0x140002185
   140002145:	test   BYTE PTR [rcx+0x1c],0x8
   140002149:	je     0x140002185
   14000214b:	cmp    BYTE PTR [rcx+0x19],0x2
   14000214f:	jb     0x140002185
   140002151:	call   0x1400068c8
   140002156:	mov    r9d,eax
   140002159:	mov    edx,0x22
   14000215e:	lea    rax,[rip+0x9deb]        # 0x14000bf50
   140002165:	mov    rcx,QWORD PTR [rip+0xcec4]        # 0x14000f030
   14000216c:	lea    r8,[rip+0xa2e5]        # 0x14000c458
   140002173:	mov    DWORD PTR [rsp+0x28],esi
   140002177:	mov    QWORD PTR [rsp+0x20],rax
   14000217c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002180:	call   0x1400013ec
   140002185:	test   rbp,rbp
   140002188:	je     0x14000219c
   14000218a:	mov    rcx,rbp
   14000218d:	call   QWORD PTR [rip+0x9055]        # 0x14000b1e8
   140002193:	mov    ecx,eax
   140002195:	mov    rdi,rbp
   140002198:	xor    eax,eax
   14000219a:	rep stos BYTE PTR es:[rdi],al
   14000219c:	mov    rdi,QWORD PTR [rsp+0x98]
   1400021a4:	test   rdi,rdi
   1400021a7:	je     0x1400021be
   1400021a9:	mov    rax,QWORD PTR [rdi]
   1400021ac:	mov    rbx,QWORD PTR [rax+0x10]
   1400021b0:	mov    rcx,rbx
   1400021b3:	call   QWORD PTR [rip+0x925f]        # 0x14000b418
   1400021b9:	mov    rcx,rdi
   1400021bc:	call   rbx
   1400021be:	mov    eax,esi
   1400021c0:	mov    rbx,QWORD PTR [rsp+0x90]
   1400021c8:	add    rsp,0x50
   1400021cc:	pop    r15
   1400021ce:	pop    r14
   1400021d0:	pop    r13
   1400021d2:	pop    r12
   1400021d4:	pop    rdi
   1400021d5:	pop    rsi
   1400021d6:	pop    rbp
   1400021d7:	ret    
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    rax,rsp
   1400021e3:	mov    QWORD PTR [rax+0x8],rbx
   1400021e7:	mov    QWORD PTR [rax+0x20],r9
   1400021eb:	mov    QWORD PTR [rax+0x18],r8
   1400021ef:	push   rbp
   1400021f0:	push   rsi
   1400021f1:	push   rdi
   1400021f2:	push   r12
   1400021f4:	push   r13
   1400021f6:	push   r14
   1400021f8:	push   r15
   1400021fa:	sub    rsp,0x70
   1400021fe:	and    QWORD PTR [rax+0x10],0x0
   140002203:	mov    rdi,r9
   140002206:	mov    r14,QWORD PTR [rsp+0xd8]
   14000220e:	mov    rbp,rdx
   140002211:	mov    rbx,rcx
   140002214:	test   rdx,rdx
   140002217:	jne    0x140002278
   140002219:	mov    rcx,QWORD PTR [rip+0xce10]        # 0x14000f030
   140002220:	lea    rax,[rip+0xce09]        # 0x14000f030
   140002227:	cmp    rcx,rax
   14000222a:	je     0x14000226e
   14000222c:	test   BYTE PTR [rcx+0x1c],0x8
   140002230:	je     0x14000226e
   140002232:	cmp    BYTE PTR [rcx+0x19],0x2
   140002236:	jb     0x14000226e
   140002238:	call   0x1400068c8
   14000223d:	mov    rcx,QWORD PTR [rip+0xcdec]        # 0x14000f030
   140002244:	lea    edx,[rbp+0x23]
   140002247:	mov    r9d,eax
   14000224a:	mov    DWORD PTR [rsp+0x28],0x80070057
   140002252:	lea    rax,[rip+0x9c6f]        # 0x14000bec8
   140002259:	lea    r8,[rip+0xa1f8]        # 0x14000c458
   140002260:	mov    QWORD PTR [rsp+0x20],rax
   140002265:	mov    rcx,QWORD PTR [rcx+0x10]
   140002269:	call   0x1400013ec
   14000226e:	mov    esi,0x80070057
   140002273:	jmp    0x1400025ac
   140002278:	mov    rcx,rdx
   14000227b:	call   QWORD PTR [rip+0x8f5f]        # 0x14000b1e0
   140002281:	mov    esi,0x100
   140002286:	cmp    eax,esi
   140002288:	jbe    0x1400022d7
   14000228a:	mov    rcx,QWORD PTR [rip+0xcd9f]        # 0x14000f030
   140002291:	lea    rax,[rip+0xcd98]        # 0x14000f030
   140002298:	cmp    rcx,rax
   14000229b:	je     0x14000226e
   14000229d:	test   BYTE PTR [rcx+0x1c],0x8
   1400022a1:	je     0x14000226e
   1400022a3:	cmp    BYTE PTR [rcx+0x19],0x2
   1400022a7:	jb     0x14000226e
   1400022a9:	call   0x1400068c8
   1400022ae:	mov    edx,0x24
   1400022b3:	mov    rcx,QWORD PTR [rip+0xcd76]        # 0x14000f030
   1400022ba:	lea    r8,[rip+0xa197]        # 0x14000c458
   1400022c1:	mov    r9d,eax
   1400022c4:	mov    DWORD PTR [rsp+0x20],0x80070057
   1400022cc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400022d0:	call   0x140001318
   1400022d5:	jmp    0x14000226e
   1400022d7:	mov    rcx,rdi
   1400022da:	call   QWORD PTR [rip+0x8f00]        # 0x14000b1e0
   1400022e0:	cmp    eax,esi
   1400022e2:	jbe    0x14000231b
   1400022e4:	mov    rcx,QWORD PTR [rip+0xcd45]        # 0x14000f030
   1400022eb:	lea    rax,[rip+0xcd3e]        # 0x14000f030
   1400022f2:	cmp    rcx,rax
   1400022f5:	je     0x14000226e
   1400022fb:	test   BYTE PTR [rcx+0x1c],0x8
   1400022ff:	je     0x14000226e
   140002305:	cmp    BYTE PTR [rcx+0x19],0x2
   140002309:	jb     0x14000226e
   14000230f:	call   0x1400068c8
   140002314:	mov    edx,0x25
   140002319:	jmp    0x1400022b3
   14000231b:	mov    r15,QWORD PTR [rsp+0xd0]
   140002323:	mov    rcx,r15
   140002326:	call   QWORD PTR [rip+0x8eb4]        # 0x14000b1e0
   14000232c:	cmp    eax,0x201
   140002331:	jbe    0x14000236d
   140002333:	mov    rcx,QWORD PTR [rip+0xccf6]        # 0x14000f030
   14000233a:	lea    rax,[rip+0xccef]        # 0x14000f030
   140002341:	cmp    rcx,rax
   140002344:	je     0x14000226e
   14000234a:	test   BYTE PTR [rcx+0x1c],0x8
   14000234e:	je     0x14000226e
   140002354:	cmp    BYTE PTR [rcx+0x19],0x2
   140002358:	jb     0x14000226e
   14000235e:	call   0x1400068c8
   140002363:	mov    edx,0x26
   140002368:	jmp    0x1400022b3
   14000236d:	mov    r12,QWORD PTR [rsp+0xe0]
   140002375:	mov    rcx,r12
   140002378:	call   QWORD PTR [rip+0x8e62]        # 0x14000b1e0
   14000237e:	cmp    eax,0x2800
   140002383:	jbe    0x1400023bf
   140002385:	mov    rcx,QWORD PTR [rip+0xcca4]        # 0x14000f030
   14000238c:	lea    rax,[rip+0xcc9d]        # 0x14000f030
   140002393:	cmp    rcx,rax
   140002396:	je     0x14000226e
   14000239c:	test   BYTE PTR [rcx+0x1c],0x8
   1400023a0:	je     0x14000226e
   1400023a6:	cmp    BYTE PTR [rcx+0x19],0x2
   1400023aa:	jb     0x14000226e
   1400023b0:	call   0x1400068c8
   1400023b5:	mov    edx,0x27
   1400023ba:	jmp    0x1400022b3
   1400023bf:	mov    r13,QWORD PTR [rsp+0xf8]
   1400023c7:	mov    rcx,r13
   1400023ca:	call   QWORD PTR [rip+0x8e10]        # 0x14000b1e0
   1400023d0:	cmp    eax,0x800
   1400023d5:	jbe    0x140002411
   1400023d7:	mov    rcx,QWORD PTR [rip+0xcc52]        # 0x14000f030
   1400023de:	lea    rax,[rip+0xcc4b]        # 0x14000f030
   1400023e5:	cmp    rcx,rax
   1400023e8:	je     0x14000226e
   1400023ee:	test   BYTE PTR [rcx+0x1c],0x8
   1400023f2:	je     0x14000226e
   1400023f8:	cmp    BYTE PTR [rcx+0x19],0x2
   1400023fc:	jb     0x14000226e
   140002402:	call   0x1400068c8
   140002407:	mov    edx,0x28
   14000240c:	jmp    0x1400022b3
   140002411:	lea    rcx,[rbx-0x10]
   140002415:	call   0x140001778
   14000241a:	mov    esi,eax
   14000241c:	test   eax,eax
   14000241e:	jns    0x140002464
   140002420:	mov    rcx,QWORD PTR [rip+0xcc09]        # 0x14000f030
   140002427:	lea    rax,[rip+0xcc02]        # 0x14000f030
   14000242e:	cmp    rcx,rax
   140002431:	je     0x1400025ac
   140002437:	test   BYTE PTR [rcx+0x1c],0x8
   14000243b:	je     0x1400025ac
   140002441:	cmp    BYTE PTR [rcx+0x19],0x2
   140002445:	jb     0x1400025ac
   14000244b:	call   0x1400068c8
   140002450:	mov    r9d,eax
   140002453:	mov    edx,0x29
   140002458:	lea    rax,[rip+0x9a79]        # 0x14000bed8
   14000245f:	jmp    0x14000258c
   140002464:	mov    rbx,QWORD PTR [rbx+0x48]
   140002468:	mov    rax,QWORD PTR [rbx]
   14000246b:	mov    rdi,QWORD PTR [rax]
   14000246e:	mov    rcx,rdi
   140002471:	call   QWORD PTR [rip+0x8fa1]        # 0x14000b418
   140002477:	lea    r8,[rsp+0xb8]
   14000247f:	mov    rcx,rbx
   140002482:	lea    rdx,[rip+0x9e37]        # 0x14000c2c0
   140002489:	call   rdi
   14000248b:	mov    esi,eax
   14000248d:	test   eax,eax
   14000248f:	jns    0x1400024d5
   140002491:	mov    rcx,QWORD PTR [rip+0xcb98]        # 0x14000f030
   140002498:	lea    rax,[rip+0xcb91]        # 0x14000f030
   14000249f:	cmp    rcx,rax
   1400024a2:	je     0x1400025ac
   1400024a8:	test   BYTE PTR [rcx+0x1c],0x8
   1400024ac:	je     0x1400025ac
   1400024b2:	cmp    BYTE PTR [rcx+0x19],0x2
   1400024b6:	jb     0x1400025ac
   1400024bc:	call   0x1400068c8
   1400024c1:	mov    r9d,eax
   1400024c4:	mov    edx,0x2a
   1400024c9:	lea    rax,[rip+0x9ac8]        # 0x14000bf98
   1400024d0:	jmp    0x14000258c
   1400024d5:	mov    rax,QWORD PTR [rsp+0x100]
   1400024dd:	mov    rdi,QWORD PTR [rsp+0xb8]
   1400024e5:	movups xmm0,XMMWORD PTR [rax]
   1400024e8:	mov    rax,QWORD PTR [rdi]
   1400024eb:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   1400024f1:	mov    rbx,QWORD PTR [rax+0x80]
   1400024f8:	mov    rcx,rbx
   1400024fb:	call   QWORD PTR [rip+0x8f17]        # 0x14000b418
   140002501:	mov    r9,QWORD PTR [rsp+0xc8]
   140002509:	lea    rax,[rsp+0x60]
   14000250e:	mov    r8,QWORD PTR [rsp+0xc0]
   140002516:	mov    rdx,rbp
   140002519:	mov    QWORD PTR [rsp+0x58],rax
   14000251e:	mov    rcx,rdi
   140002521:	mov    eax,DWORD PTR [rsp+0xf0]
   140002528:	mov    QWORD PTR [rsp+0x50],r13
   14000252d:	mov    DWORD PTR [rsp+0x48],eax
   140002531:	mov    eax,DWORD PTR [rsp+0xe8]
   140002538:	mov    DWORD PTR [rsp+0x40],eax
   14000253c:	mov    QWORD PTR [rsp+0x38],r12
   140002541:	and    QWORD PTR [rsp+0x30],0x0
   140002547:	mov    QWORD PTR [rsp+0x28],r14
   14000254c:	mov    QWORD PTR [rsp+0x20],r15
   140002551:	call   rbx
   140002553:	mov    esi,eax
   140002555:	test   eax,eax
   140002557:	jns    0x1400025ac
   140002559:	mov    rcx,QWORD PTR [rip+0xcad0]        # 0x14000f030
   140002560:	lea    rax,[rip+0xcac9]        # 0x14000f030
   140002567:	cmp    rcx,rax
   14000256a:	je     0x1400025ac
   14000256c:	test   BYTE PTR [rcx+0x1c],0x8
   140002570:	je     0x1400025ac
   140002572:	cmp    BYTE PTR [rcx+0x19],0x2
   140002576:	jb     0x1400025ac
   140002578:	call   0x1400068c8
   14000257d:	mov    r9d,eax
   140002580:	mov    edx,0x2b
   140002585:	lea    rax,[rip+0x99c4]        # 0x14000bf50
   14000258c:	mov    rcx,QWORD PTR [rip+0xca9d]        # 0x14000f030
   140002593:	lea    r8,[rip+0x9ebe]        # 0x14000c458
   14000259a:	mov    DWORD PTR [rsp+0x28],esi
   14000259e:	mov    QWORD PTR [rsp+0x20],rax
   1400025a3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400025a7:	call   0x1400013ec
   1400025ac:	test   r14,r14
   1400025af:	je     0x1400025c3
   1400025b1:	mov    rcx,r14
   1400025b4:	call   QWORD PTR [rip+0x8c2e]        # 0x14000b1e8
   1400025ba:	mov    ecx,eax
   1400025bc:	mov    rdi,r14
   1400025bf:	xor    eax,eax
   1400025c1:	rep stos BYTE PTR es:[rdi],al
   1400025c3:	mov    rdi,QWORD PTR [rsp+0xb8]
   1400025cb:	test   rdi,rdi
   1400025ce:	je     0x1400025e5
   1400025d0:	mov    rax,QWORD PTR [rdi]
   1400025d3:	mov    rbx,QWORD PTR [rax+0x10]
   1400025d7:	mov    rcx,rbx
   1400025da:	call   QWORD PTR [rip+0x8e38]        # 0x14000b418
   1400025e0:	mov    rcx,rdi
   1400025e3:	call   rbx
   1400025e5:	mov    eax,esi
   1400025e7:	mov    rbx,QWORD PTR [rsp+0xb0]
   1400025ef:	add    rsp,0x70
   1400025f3:	pop    r15
   1400025f5:	pop    r14
   1400025f7:	pop    r13
   1400025f9:	pop    r12
   1400025fb:	pop    rdi
   1400025fc:	pop    rsi
   1400025fd:	pop    rbp
   1400025fe:	ret    
   1400025ff:	int3   
   140002600:	int3   
   140002601:	int3   
   140002602:	int3   
   140002603:	int3   
   140002604:	int3   
   140002605:	int3   
   140002606:	int3   
   140002607:	int3   
   140002608:	int3   
   140002609:	int3   
   14000260a:	int3   
   14000260b:	int3   
   14000260c:	int3   
   14000260d:	int3   
   14000260e:	int3   
   14000260f:	int3   
   140002610:	mov    rax,rsp
   140002613:	mov    QWORD PTR [rax+0x8],rbx
   140002617:	mov    QWORD PTR [rax+0x10],rbp
   14000261b:	mov    QWORD PTR [rax+0x18],rsi
   14000261f:	mov    QWORD PTR [rax+0x20],rdi
   140002623:	push   r14
   140002625:	sub    rsp,0x30
   140002629:	mov    rsi,r9
   14000262c:	movzx  r14d,r8w
   140002630:	mov    rbp,rdx
   140002633:	mov    rdi,rcx
   140002636:	test   rdx,rdx
   140002639:	jne    0x14000266e
   14000263b:	mov    rcx,QWORD PTR [rip+0xc9ee]        # 0x14000f030
   140002642:	lea    rax,[rip+0xc9e7]        # 0x14000f030
   140002649:	cmp    rcx,rax
   14000264c:	je     0x1400026ca
   14000264e:	test   BYTE PTR [rcx+0x1c],0x8
   140002652:	je     0x1400026ca
   140002654:	cmp    BYTE PTR [rcx+0x19],0x2
   140002658:	jb     0x1400026ca
   14000265a:	call   0x1400068c8
   14000265f:	mov    r9d,eax
   140002662:	lea    edx,[rbp+0x2c]
   140002665:	lea    rax,[rip+0x985c]        # 0x14000bec8
   14000266c:	jmp    0x1400026a6
   14000266e:	test   r9,r9
   140002671:	jne    0x1400026d4
   140002673:	mov    rcx,QWORD PTR [rip+0xc9b6]        # 0x14000f030
   14000267a:	lea    rax,[rip+0xc9af]        # 0x14000f030
   140002681:	cmp    rcx,rax
   140002684:	je     0x1400026ca
   140002686:	test   BYTE PTR [rcx+0x1c],0x8
   14000268a:	je     0x1400026ca
   14000268c:	cmp    BYTE PTR [rcx+0x19],0x2
   140002690:	jb     0x1400026ca
   140002692:	call   0x1400068c8
   140002697:	mov    r9d,eax
   14000269a:	mov    edx,0x2d
   14000269f:	lea    rax,[rip+0x9922]        # 0x14000bfc8
   1400026a6:	mov    rcx,QWORD PTR [rip+0xc983]        # 0x14000f030
   1400026ad:	lea    r8,[rip+0x9da4]        # 0x14000c458
   1400026b4:	mov    DWORD PTR [rsp+0x28],0x80070057
   1400026bc:	mov    QWORD PTR [rsp+0x20],rax
   1400026c1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400026c5:	call   0x1400013ec
   1400026ca:	mov    ebx,0x80070057
   1400026cf:	jmp    0x14000279c
   1400026d4:	call   0x140001778
   1400026d9:	mov    ebx,eax
   1400026db:	test   eax,eax
   1400026dd:	jns    0x140002720
   1400026df:	mov    rcx,QWORD PTR [rip+0xc94a]        # 0x14000f030
   1400026e6:	lea    rax,[rip+0xc943]        # 0x14000f030
   1400026ed:	cmp    rcx,rax
   1400026f0:	je     0x14000279c
   1400026f6:	test   BYTE PTR [rcx+0x1c],0x8
   1400026fa:	je     0x14000279c
   140002700:	cmp    BYTE PTR [rcx+0x19],0x2
   140002704:	jb     0x14000279c
   14000270a:	call   0x1400068c8
   14000270f:	mov    r9d,eax
   140002712:	mov    edx,0x2e
   140002717:	lea    rax,[rip+0x97ba]        # 0x14000bed8
   14000271e:	jmp    0x14000277c
   140002720:	mov    rdi,QWORD PTR [rdi+0x58]
   140002724:	mov    rax,QWORD PTR [rdi]
   140002727:	mov    rbx,QWORD PTR [rax+0x48]
   14000272b:	mov    rcx,rbx
   14000272e:	call   QWORD PTR [rip+0x8ce4]        # 0x14000b418
   140002734:	mov    r9,rsi
   140002737:	movzx  r8d,r14w
   14000273b:	mov    rdx,rbp
   14000273e:	mov    rcx,rdi
   140002741:	call   rbx
   140002743:	mov    ebx,eax
   140002745:	test   eax,eax
   140002747:	jns    0x14000279c
   140002749:	mov    rcx,QWORD PTR [rip+0xc8e0]        # 0x14000f030
   140002750:	lea    rax,[rip+0xc8d9]        # 0x14000f030
   140002757:	cmp    rcx,rax
   14000275a:	je     0x14000279c
   14000275c:	test   BYTE PTR [rcx+0x1c],0x8
   140002760:	je     0x14000279c
   140002762:	cmp    BYTE PTR [rcx+0x19],0x2
   140002766:	jb     0x14000279c
   140002768:	call   0x1400068c8
   14000276d:	mov    r9d,eax
   140002770:	mov    edx,0x2f
   140002775:	lea    rax,[rip+0x985c]        # 0x14000bfd8
   14000277c:	mov    rcx,QWORD PTR [rip+0xc8ad]        # 0x14000f030
   140002783:	lea    r8,[rip+0x9cce]        # 0x14000c458
   14000278a:	mov    DWORD PTR [rsp+0x28],ebx
   14000278e:	mov    QWORD PTR [rsp+0x20],rax
   140002793:	mov    rcx,QWORD PTR [rcx+0x10]
   140002797:	call   0x1400013ec
   14000279c:	mov    rbp,QWORD PTR [rsp+0x48]
   1400027a1:	mov    eax,ebx
   1400027a3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400027a8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400027ad:	mov    rdi,QWORD PTR [rsp+0x58]
   1400027b2:	add    rsp,0x30
   1400027b6:	pop    r14
   1400027b8:	ret    
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400027ca:	push   rdi
   1400027cb:	sub    rsp,0x30
   1400027cf:	mov    rsi,rdx
   1400027d2:	mov    rdi,rcx
   1400027d5:	test   rdx,rdx
   1400027d8:	jne    0x140002839
   1400027da:	mov    rcx,QWORD PTR [rip+0xc84f]        # 0x14000f030
   1400027e1:	lea    rax,[rip+0xc848]        # 0x14000f030
   1400027e8:	cmp    rcx,rax
   1400027eb:	je     0x14000282f
   1400027ed:	test   BYTE PTR [rcx+0x1c],0x8
   1400027f1:	je     0x14000282f
   1400027f3:	cmp    BYTE PTR [rcx+0x19],0x2
   1400027f7:	jb     0x14000282f
   1400027f9:	call   0x1400068c8
   1400027fe:	mov    rcx,QWORD PTR [rip+0xc82b]        # 0x14000f030
   140002805:	lea    edx,[rsi+0x30]
   140002808:	mov    r9d,eax
   14000280b:	mov    DWORD PTR [rsp+0x28],0x80070057
   140002813:	lea    rax,[rip+0x97e6]        # 0x14000c000
   14000281a:	lea    r8,[rip+0x9c37]        # 0x14000c458
   140002821:	mov    QWORD PTR [rsp+0x20],rax
   140002826:	mov    rcx,QWORD PTR [rcx+0x10]
   14000282a:	call   0x1400013ec
   14000282f:	mov    ebx,0x80070057
   140002834:	jmp    0x1400028fa
   140002839:	call   0x140001778
   14000283e:	mov    ebx,eax
   140002840:	test   eax,eax
   140002842:	jns    0x140002885
   140002844:	mov    rcx,QWORD PTR [rip+0xc7e5]        # 0x14000f030
   14000284b:	lea    rax,[rip+0xc7de]        # 0x14000f030
   140002852:	cmp    rcx,rax
   140002855:	je     0x1400028fa
   14000285b:	test   BYTE PTR [rcx+0x1c],0x8
   14000285f:	je     0x1400028fa
   140002865:	cmp    BYTE PTR [rcx+0x19],0x2
   140002869:	jb     0x1400028fa
   14000286f:	call   0x1400068c8
   140002874:	mov    r9d,eax
   140002877:	mov    edx,0x31
   14000287c:	lea    rax,[rip+0x9655]        # 0x14000bed8
   140002883:	jmp    0x1400028da
   140002885:	mov    rdi,QWORD PTR [rdi+0x58]
   140002889:	mov    rax,QWORD PTR [rdi]
   14000288c:	mov    rbx,QWORD PTR [rax+0x50]
   140002890:	mov    rcx,rbx
   140002893:	call   QWORD PTR [rip+0x8b7f]        # 0x14000b418
   140002899:	mov    rdx,rsi
   14000289c:	mov    rcx,rdi
   14000289f:	call   rbx
   1400028a1:	mov    ebx,eax
   1400028a3:	test   eax,eax
   1400028a5:	jns    0x1400028fa
   1400028a7:	mov    rcx,QWORD PTR [rip+0xc782]        # 0x14000f030
   1400028ae:	lea    rax,[rip+0xc77b]        # 0x14000f030
   1400028b5:	cmp    rcx,rax
   1400028b8:	je     0x1400028fa
   1400028ba:	test   BYTE PTR [rcx+0x1c],0x8
   1400028be:	je     0x1400028fa
   1400028c0:	cmp    BYTE PTR [rcx+0x19],0x2
   1400028c4:	jb     0x1400028fa
   1400028c6:	call   0x1400068c8
   1400028cb:	mov    r9d,eax
   1400028ce:	mov    edx,0x32
   1400028d3:	lea    rax,[rip+0x9736]        # 0x14000c010
   1400028da:	mov    rcx,QWORD PTR [rip+0xc74f]        # 0x14000f030
   1400028e1:	lea    r8,[rip+0x9b70]        # 0x14000c458
   1400028e8:	mov    DWORD PTR [rsp+0x28],ebx
   1400028ec:	mov    QWORD PTR [rsp+0x20],rax
   1400028f1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400028f5:	call   0x1400013ec
   1400028fa:	mov    rsi,QWORD PTR [rsp+0x48]
   1400028ff:	mov    eax,ebx
   140002901:	mov    rbx,QWORD PTR [rsp+0x40]
   140002906:	add    rsp,0x30
   14000290a:	pop    rdi
   14000290b:	ret    
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	int3   
   140002911:	int3   
   140002912:	int3   
   140002913:	int3   
   140002914:	int3   
   140002915:	int3   
   140002916:	int3   
   140002917:	int3   
   140002918:	int3   
   140002919:	int3   
   14000291a:	int3   
   14000291b:	int3   
   14000291c:	int3   
   14000291d:	int3   
   14000291e:	int3   
   14000291f:	int3   
   140002920:	mov    QWORD PTR [rsp+0x8],rbx
   140002925:	mov    QWORD PTR [rsp+0x10],rsi
   14000292a:	push   rdi
   14000292b:	sub    rsp,0x30
   14000292f:	mov    rsi,rdx
   140002932:	mov    rdi,rcx
   140002935:	test   rdx,rdx
   140002938:	jne    0x140002999
   14000293a:	mov    rcx,QWORD PTR [rip+0xc6ef]        # 0x14000f030
   140002941:	lea    rax,[rip+0xc6e8]        # 0x14000f030
   140002948:	cmp    rcx,rax
   14000294b:	je     0x14000298f
   14000294d:	test   BYTE PTR [rcx+0x1c],0x8
   140002951:	je     0x14000298f
   140002953:	cmp    BYTE PTR [rcx+0x19],0x2
   140002957:	jb     0x14000298f
   140002959:	call   0x1400068c8
   14000295e:	mov    rcx,QWORD PTR [rip+0xc6cb]        # 0x14000f030
   140002965:	lea    edx,[rsi+0x33]
   140002968:	mov    r9d,eax
   14000296b:	mov    DWORD PTR [rsp+0x28],0x80070057
   140002973:	lea    rax,[rip+0x954e]        # 0x14000bec8
   14000297a:	lea    r8,[rip+0x9ad7]        # 0x14000c458
   140002981:	mov    QWORD PTR [rsp+0x20],rax
   140002986:	mov    rcx,QWORD PTR [rcx+0x10]
   14000298a:	call   0x1400013ec
   14000298f:	mov    ebx,0x80070057
   140002994:	jmp    0x140002a5a
   140002999:	call   0x140001778
   14000299e:	mov    ebx,eax
   1400029a0:	test   eax,eax
   1400029a2:	jns    0x1400029e5
   1400029a4:	mov    rcx,QWORD PTR [rip+0xc685]        # 0x14000f030
   1400029ab:	lea    rax,[rip+0xc67e]        # 0x14000f030
   1400029b2:	cmp    rcx,rax
   1400029b5:	je     0x140002a5a
   1400029bb:	test   BYTE PTR [rcx+0x1c],0x8
   1400029bf:	je     0x140002a5a
   1400029c5:	cmp    BYTE PTR [rcx+0x19],0x2
   1400029c9:	jb     0x140002a5a
   1400029cf:	call   0x1400068c8
   1400029d4:	mov    r9d,eax
   1400029d7:	mov    edx,0x34
   1400029dc:	lea    rax,[rip+0x94f5]        # 0x14000bed8
   1400029e3:	jmp    0x140002a3a
   1400029e5:	mov    rdi,QWORD PTR [rdi+0x58]
   1400029e9:	mov    rax,QWORD PTR [rdi]
   1400029ec:	mov    rbx,QWORD PTR [rax+0x58]
   1400029f0:	mov    rcx,rbx
   1400029f3:	call   QWORD PTR [rip+0x8a1f]        # 0x14000b418
   1400029f9:	mov    rdx,rsi
   1400029fc:	mov    rcx,rdi
   1400029ff:	call   rbx
   140002a01:	mov    ebx,eax
   140002a03:	test   eax,eax
   140002a05:	jns    0x140002a5a
   140002a07:	mov    rcx,QWORD PTR [rip+0xc622]        # 0x14000f030
   140002a0e:	lea    rax,[rip+0xc61b]        # 0x14000f030
   140002a15:	cmp    rcx,rax
   140002a18:	je     0x140002a5a
   140002a1a:	test   BYTE PTR [rcx+0x1c],0x8
   140002a1e:	je     0x140002a5a
   140002a20:	cmp    BYTE PTR [rcx+0x19],0x2
   140002a24:	jb     0x140002a5a
   140002a26:	call   0x1400068c8
   140002a2b:	mov    r9d,eax
   140002a2e:	mov    edx,0x35
   140002a33:	lea    rax,[rip+0x95f6]        # 0x14000c030
   140002a3a:	mov    rcx,QWORD PTR [rip+0xc5ef]        # 0x14000f030
   140002a41:	lea    r8,[rip+0x9a10]        # 0x14000c458
   140002a48:	mov    DWORD PTR [rsp+0x28],ebx
   140002a4c:	mov    QWORD PTR [rsp+0x20],rax
   140002a51:	mov    rcx,QWORD PTR [rcx+0x10]
   140002a55:	call   0x1400013ec
   140002a5a:	mov    rsi,QWORD PTR [rsp+0x48]
   140002a5f:	mov    eax,ebx
   140002a61:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a66:	add    rsp,0x30
   140002a6a:	pop    rdi
   140002a6b:	ret    
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	int3   
   140002a71:	int3   
   140002a72:	int3   
   140002a73:	int3   
   140002a74:	int3   
   140002a75:	int3   
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	mov    QWORD PTR [rsp+0x8],rbx
   140002a85:	mov    QWORD PTR [rsp+0x10],rbp
   140002a8a:	mov    QWORD PTR [rsp+0x18],rsi
   140002a8f:	push   rdi
   140002a90:	sub    rsp,0x30
   140002a94:	mov    rsi,r8
   140002a97:	mov    rbp,rdx
   140002a9a:	mov    rdi,rcx
   140002a9d:	test   rdx,rdx
   140002aa0:	jne    0x140002ad5
   140002aa2:	mov    rcx,QWORD PTR [rip+0xc587]        # 0x14000f030
   140002aa9:	lea    rax,[rip+0xc580]        # 0x14000f030
   140002ab0:	cmp    rcx,rax
   140002ab3:	je     0x140002b31
   140002ab5:	test   BYTE PTR [rcx+0x1c],0x8
   140002ab9:	je     0x140002b31
   140002abb:	cmp    BYTE PTR [rcx+0x19],0x2
   140002abf:	jb     0x140002b31
   140002ac1:	call   0x1400068c8
   140002ac6:	mov    r9d,eax
   140002ac9:	lea    edx,[rbp+0x36]
   140002acc:	lea    rax,[rip+0x93f5]        # 0x14000bec8
   140002ad3:	jmp    0x140002b0d
   140002ad5:	test   r8,r8
   140002ad8:	jne    0x140002b3b
   140002ada:	mov    rcx,QWORD PTR [rip+0xc54f]        # 0x14000f030
   140002ae1:	lea    rax,[rip+0xc548]        # 0x14000f030
   140002ae8:	cmp    rcx,rax
   140002aeb:	je     0x140002b31
   140002aed:	test   BYTE PTR [rcx+0x1c],0x8
   140002af1:	je     0x140002b31
   140002af3:	cmp    BYTE PTR [rcx+0x19],0x2
   140002af7:	jb     0x140002b31
   140002af9:	call   0x1400068c8
   140002afe:	mov    r9d,eax
   140002b01:	mov    edx,0x37
   140002b06:	lea    rax,[rip+0x9423]        # 0x14000bf30
   140002b0d:	mov    rcx,QWORD PTR [rip+0xc51c]        # 0x14000f030
   140002b14:	lea    r8,[rip+0x993d]        # 0x14000c458
   140002b1b:	mov    DWORD PTR [rsp+0x28],0x80070057
   140002b23:	mov    QWORD PTR [rsp+0x20],rax
   140002b28:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b2c:	call   0x1400013ec
   140002b31:	mov    ebx,0x80070057
   140002b36:	jmp    0x140002bff
   140002b3b:	call   0x140001778
   140002b40:	mov    ebx,eax
   140002b42:	test   eax,eax
   140002b44:	jns    0x140002b87
   140002b46:	mov    rcx,QWORD PTR [rip+0xc4e3]        # 0x14000f030
   140002b4d:	lea    rax,[rip+0xc4dc]        # 0x14000f030
   140002b54:	cmp    rcx,rax
   140002b57:	je     0x140002bff
   140002b5d:	test   BYTE PTR [rcx+0x1c],0x8
   140002b61:	je     0x140002bff
   140002b67:	cmp    BYTE PTR [rcx+0x19],0x2
   140002b6b:	jb     0x140002bff
   140002b71:	call   0x1400068c8
   140002b76:	mov    r9d,eax
   140002b79:	mov    edx,0x38
   140002b7e:	lea    rax,[rip+0x9353]        # 0x14000bed8
   140002b85:	jmp    0x140002bdf
   140002b87:	mov    rdi,QWORD PTR [rdi+0x58]
   140002b8b:	mov    rax,QWORD PTR [rdi]
   140002b8e:	mov    rbx,QWORD PTR [rax+0x60]
   140002b92:	mov    rcx,rbx
   140002b95:	call   QWORD PTR [rip+0x887d]        # 0x14000b418
   140002b9b:	mov    r8,rsi
   140002b9e:	mov    rdx,rbp
   140002ba1:	mov    rcx,rdi
   140002ba4:	call   rbx
   140002ba6:	mov    ebx,eax
   140002ba8:	test   eax,eax
   140002baa:	jns    0x140002bff
   140002bac:	mov    rcx,QWORD PTR [rip+0xc47d]        # 0x14000f030
   140002bb3:	lea    rax,[rip+0xc476]        # 0x14000f030
   140002bba:	cmp    rcx,rax
   140002bbd:	je     0x140002bff
   140002bbf:	test   BYTE PTR [rcx+0x1c],0x8
   140002bc3:	je     0x140002bff
   140002bc5:	cmp    BYTE PTR [rcx+0x19],0x2
   140002bc9:	jb     0x140002bff
   140002bcb:	call   0x1400068c8
   140002bd0:	mov    r9d,eax
   140002bd3:	mov    edx,0x39
   140002bd8:	lea    rax,[rip+0x9471]        # 0x14000c050
   140002bdf:	mov    rcx,QWORD PTR [rip+0xc44a]        # 0x14000f030
   140002be6:	lea    r8,[rip+0x986b]        # 0x14000c458
   140002bed:	mov    DWORD PTR [rsp+0x28],ebx
   140002bf1:	mov    QWORD PTR [rsp+0x20],rax
   140002bf6:	mov    rcx,QWORD PTR [rcx+0x10]
   140002bfa:	call   0x1400013ec
   140002bff:	mov    rbp,QWORD PTR [rsp+0x48]
   140002c04:	mov    eax,ebx
   140002c06:	mov    rbx,QWORD PTR [rsp+0x40]
   140002c0b:	mov    rsi,QWORD PTR [rsp+0x50]
   140002c10:	add    rsp,0x30
   140002c14:	pop    rdi
   140002c15:	ret    
   140002c16:	int3   
   140002c17:	int3   
   140002c18:	int3   
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	mov    QWORD PTR [rsp+0x8],rbx
   140002c25:	push   rdi
   140002c26:	sub    rsp,0x30
   140002c2a:	xor    ebx,ebx
   140002c2c:	mov    rdi,rdx
   140002c2f:	test   rdx,rdx
   140002c32:	jne    0x140002c90
   140002c34:	mov    rax,QWORD PTR [rip+0xc3f5]        # 0x14000f030
   140002c3b:	lea    rcx,[rip+0xc3ee]        # 0x14000f030
   140002c42:	cmp    rax,rcx
   140002c45:	je     0x140002c89
   140002c47:	test   BYTE PTR [rax+0x1c],0x8
   140002c4b:	je     0x140002c89
   140002c4d:	cmp    BYTE PTR [rax+0x19],0x2
   140002c51:	jb     0x140002c89
   140002c53:	call   0x1400068c8
   140002c58:	mov    rcx,QWORD PTR [rip+0xc3d1]        # 0x14000f030
   140002c5f:	lea    edx,[rdi+0x3a]
   140002c62:	mov    r9d,eax
   140002c65:	mov    DWORD PTR [rsp+0x28],0x80070057
   140002c6d:	lea    rax,[rip+0x93f4]        # 0x14000c068
   140002c74:	lea    r8,[rip+0x97dd]        # 0x14000c458
   140002c7b:	mov    QWORD PTR [rsp+0x20],rax
   140002c80:	mov    rcx,QWORD PTR [rcx+0x10]
   140002c84:	call   0x1400013ec
   140002c89:	mov    ebx,0x80070057
   140002c8e:	jmp    0x140002c98
   140002c90:	call   QWORD PTR [rip+0x843a]        # 0x14000b0d0
   140002c96:	mov    DWORD PTR [rdi],eax
   140002c98:	mov    eax,ebx
   140002c9a:	mov    rbx,QWORD PTR [rsp+0x40]
   140002c9f:	add    rsp,0x30
   140002ca3:	pop    rdi
   140002ca4:	ret    
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    rax,rsp
   140002cb3:	mov    QWORD PTR [rax+0x8],rbx
   140002cb7:	mov    QWORD PTR [rax+0x10],rbp
   140002cbb:	mov    QWORD PTR [rax+0x18],rsi
   140002cbf:	mov    QWORD PTR [rax+0x20],rdi
   140002cc3:	push   r14
   140002cc5:	sub    rsp,0x30
   140002cc9:	mov    r14,r9
   140002ccc:	mov    rsi,r8
   140002ccf:	mov    rbp,rdx
   140002cd2:	test   rdx,rdx
   140002cd5:	jne    0x140002d16
   140002cd7:	mov    rax,QWORD PTR [rip+0xc352]        # 0x14000f030
   140002cde:	lea    rdi,[rip+0xc34b]        # 0x14000f030
   140002ce5:	cmp    rax,rdi
   140002ce8:	je     0x140002db3
   140002cee:	test   BYTE PTR [rax+0x1c],0x8
   140002cf2:	je     0x140002db3
   140002cf8:	cmp    BYTE PTR [rax+0x19],0x2
   140002cfc:	jb     0x140002db3
   140002d02:	call   0x1400068c8
   140002d07:	mov    r9d,eax
   140002d0a:	lea    edx,[rbp+0x3b]
   140002d0d:	lea    rax,[rip+0x9364]        # 0x14000c078
   140002d14:	jmp    0x140002d8f
   140002d16:	test   r8,r8
   140002d19:	jne    0x140002d54
   140002d1b:	mov    rax,QWORD PTR [rip+0xc30e]        # 0x14000f030
   140002d22:	lea    rdi,[rip+0xc307]        # 0x14000f030
   140002d29:	cmp    rax,rdi
   140002d2c:	je     0x140002db3
   140002d32:	test   BYTE PTR [rax+0x1c],0x8
   140002d36:	je     0x140002db3
   140002d38:	cmp    BYTE PTR [rax+0x19],0x2
   140002d3c:	jb     0x140002db3
   140002d3e:	call   0x1400068c8
   140002d43:	mov    r9d,eax
   140002d46:	mov    edx,0x3c
   140002d4b:	lea    rax,[rip+0x9336]        # 0x14000c088
   140002d52:	jmp    0x140002d8f
   140002d54:	mov    rbx,QWORD PTR [rsp+0x60]
   140002d59:	test   rbx,rbx
   140002d5c:	jne    0x140002dbd
   140002d5e:	mov    rax,QWORD PTR [rip+0xc2cb]        # 0x14000f030
   140002d65:	lea    rdi,[rip+0xc2c4]        # 0x14000f030
   140002d6c:	cmp    rax,rdi
   140002d6f:	je     0x140002db3
   140002d71:	test   BYTE PTR [rax+0x1c],0x8
   140002d75:	je     0x140002db3
   140002d77:	cmp    BYTE PTR [rax+0x19],0x2
   140002d7b:	jb     0x140002db3
   140002d7d:	call   0x1400068c8
   140002d82:	mov    r9d,eax
   140002d85:	lea    edx,[rbx+0x3d]
   140002d88:	lea    rax,[rip+0x9139]        # 0x14000bec8
   140002d8f:	mov    rcx,QWORD PTR [rip+0xc29a]        # 0x14000f030
   140002d96:	lea    r8,[rip+0x96bb]        # 0x14000c458
   140002d9d:	mov    DWORD PTR [rsp+0x28],0x80070057
   140002da5:	mov    QWORD PTR [rsp+0x20],rax
   140002daa:	mov    rcx,QWORD PTR [rcx+0x10]
   140002dae:	call   0x1400013ec
   140002db3:	mov    ebx,0x80070057
   140002db8:	jmp    0x140002e63
   140002dbd:	mov    rax,QWORD PTR [rip+0xc26c]        # 0x14000f030
   140002dc4:	lea    rdi,[rip+0xc265]        # 0x14000f030
   140002dcb:	cmp    rax,rdi
   140002dce:	je     0x140002e00
   140002dd0:	test   BYTE PTR [rax+0x1c],0x1
   140002dd4:	je     0x140002e00
   140002dd6:	cmp    BYTE PTR [rax+0x19],0x4
   140002dda:	jb     0x140002e00
   140002ddc:	call   0x1400068c8
   140002de1:	mov    rcx,QWORD PTR [rip+0xc248]        # 0x14000f030
   140002de8:	lea    r8,[rip+0x9669]        # 0x14000c458
   140002def:	mov    r9d,eax
   140002df2:	mov    edx,0x3e
   140002df7:	mov    rcx,QWORD PTR [rcx+0x10]
   140002dfb:	call   0x140006960
   140002e00:	mov    r9,rbx
   140002e03:	mov    r8,r14
   140002e06:	mov    rdx,rsi
   140002e09:	mov    rcx,rbp
   140002e0c:	call   0x140008e14
   140002e11:	mov    ebx,eax
   140002e13:	test   eax,eax
   140002e15:	jns    0x140002e63
   140002e17:	mov    rax,QWORD PTR [rip+0xc212]        # 0x14000f030
   140002e1e:	cmp    rax,rdi
   140002e21:	je     0x140002e63
   140002e23:	test   BYTE PTR [rax+0x1c],0x8
   140002e27:	je     0x140002e63
   140002e29:	cmp    BYTE PTR [rax+0x19],0x2
   140002e2d:	jb     0x140002e63
   140002e2f:	call   0x1400068c8
   140002e34:	mov    rcx,QWORD PTR [rip+0xc1f5]        # 0x14000f030
   140002e3b:	lea    r8,[rip+0x9616]        # 0x14000c458
   140002e42:	mov    r9d,eax
   140002e45:	mov    DWORD PTR [rsp+0x28],ebx
   140002e49:	lea    rax,[rip+0x9248]        # 0x14000c098
   140002e50:	mov    edx,0x3f
   140002e55:	mov    QWORD PTR [rsp+0x20],rax
   140002e5a:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e5e:	call   0x1400013ec
   140002e63:	mov    rbp,QWORD PTR [rsp+0x48]
   140002e68:	mov    eax,ebx
   140002e6a:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e6f:	mov    rsi,QWORD PTR [rsp+0x50]
   140002e74:	mov    rdi,QWORD PTR [rsp+0x58]
   140002e79:	add    rsp,0x30
   140002e7d:	pop    r14
   140002e7f:	ret    
   140002e80:	int3   
   140002e81:	int3   
   140002e82:	int3   
   140002e83:	int3   
   140002e84:	int3   
   140002e85:	int3   
   140002e86:	int3   
   140002e87:	int3   
   140002e88:	int3   
   140002e89:	int3   
   140002e8a:	int3   
   140002e8b:	int3   
   140002e8c:	int3   
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	mov    QWORD PTR [rsp+0x8],rbx
   140002e95:	mov    QWORD PTR [rsp+0x10],rbp
   140002e9a:	mov    QWORD PTR [rsp+0x18],rsi
   140002e9f:	push   rdi
   140002ea0:	sub    rsp,0xe0
   140002ea7:	mov    rbp,r8
   140002eaa:	mov    rsi,rdx
   140002ead:	test   rdx,rdx
   140002eb0:	jne    0x140002ee5
   140002eb2:	mov    rax,QWORD PTR [rip+0xc177]        # 0x14000f030
   140002eb9:	lea    rdi,[rip+0xc170]        # 0x14000f030
   140002ec0:	cmp    rax,rdi
   140002ec3:	je     0x140002f41
   140002ec5:	test   BYTE PTR [rax+0x1c],0x8
   140002ec9:	je     0x140002f41
   140002ecb:	cmp    BYTE PTR [rax+0x19],0x2
   140002ecf:	jb     0x140002f41
   140002ed1:	call   0x1400068c8
   140002ed6:	mov    r9d,eax
   140002ed9:	lea    edx,[rsi+0x40]
   140002edc:	lea    rax,[rip+0x91e5]        # 0x14000c0c8
   140002ee3:	jmp    0x140002f1d
   140002ee5:	test   r8,r8
   140002ee8:	jne    0x140002f4b
   140002eea:	mov    rax,QWORD PTR [rip+0xc13f]        # 0x14000f030
   140002ef1:	lea    rdi,[rip+0xc138]        # 0x14000f030
   140002ef8:	cmp    rax,rdi
   140002efb:	je     0x140002f41
   140002efd:	test   BYTE PTR [rax+0x1c],0x8
   140002f01:	je     0x140002f41
   140002f03:	cmp    BYTE PTR [rax+0x19],0x2
   140002f07:	jb     0x140002f41
   140002f09:	call   0x1400068c8
   140002f0e:	mov    r9d,eax
   140002f11:	mov    edx,0x41
   140002f16:	lea    rax,[rip+0x915b]        # 0x14000c078
   140002f1d:	mov    rcx,QWORD PTR [rip+0xc10c]        # 0x14000f030
   140002f24:	lea    r8,[rip+0x952d]        # 0x14000c458
   140002f2b:	mov    DWORD PTR [rsp+0x28],0x80070057
   140002f33:	mov    QWORD PTR [rsp+0x20],rax
   140002f38:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f3c:	call   0x1400013ec
   140002f41:	mov    ebx,0x80070057
   140002f46:	jmp    0x1400030cb
   140002f4b:	mov    rcx,rdx
   140002f4e:	call   0x1400035fc
   140002f53:	mov    ebx,eax
   140002f55:	test   eax,eax
   140002f57:	jns    0x140002f9d
   140002f59:	mov    rax,QWORD PTR [rip+0xc0d0]        # 0x14000f030
   140002f60:	lea    rdi,[rip+0xc0c9]        # 0x14000f030
   140002f67:	cmp    rax,rdi
   140002f6a:	je     0x1400030cb
   140002f70:	test   BYTE PTR [rax+0x1c],0x8
   140002f74:	je     0x1400030cb
   140002f7a:	cmp    BYTE PTR [rax+0x19],0x2
   140002f7e:	jb     0x1400030cb
   140002f84:	call   0x1400068c8
   140002f89:	mov    r9d,eax
   140002f8c:	mov    edx,0x42
   140002f91:	lea    rax,[rip+0x9140]        # 0x14000c0d8
   140002f98:	jmp    0x140003093
   140002f9d:	mov    rax,QWORD PTR [rip+0xc08c]        # 0x14000f030
   140002fa4:	lea    rdi,[rip+0xc085]        # 0x14000f030
   140002fab:	cmp    rax,rdi
   140002fae:	je     0x140002fe0
   140002fb0:	test   BYTE PTR [rax+0x1c],0x1
   140002fb4:	je     0x140002fe0
   140002fb6:	cmp    BYTE PTR [rax+0x19],0x4
   140002fba:	jb     0x140002fe0
   140002fbc:	call   0x1400068c8
   140002fc1:	mov    rcx,QWORD PTR [rip+0xc068]        # 0x14000f030
   140002fc8:	lea    r8,[rip+0x9489]        # 0x14000c458
   140002fcf:	mov    r9d,eax
   140002fd2:	mov    edx,0x43
   140002fd7:	mov    rcx,QWORD PTR [rcx+0x10]
   140002fdb:	call   0x140006960
   140002fe0:	xor    edx,edx
   140002fe2:	lea    rcx,[rsp+0x70]
   140002fe7:	lea    r8d,[rdx+0x68]
   140002feb:	call   0x14000a15c
   140002ff0:	xor    eax,eax
   140002ff2:	mov    DWORD PTR [rsp+0x70],0x68
   140002ffa:	mov    QWORD PTR [rsp+0x50],rax
   140002fff:	xor    r9d,r9d
   140003002:	mov    QWORD PTR [rsp+0x58],rax
   140003007:	xor    r8d,r8d
   14000300a:	mov    QWORD PTR [rsp+0x60],rax
   14000300f:	mov    rdx,rbp
   140003012:	lea    rax,[rsp+0x50]
   140003017:	mov    rcx,rsi
   14000301a:	mov    QWORD PTR [rsp+0x48],rax
   14000301f:	lea    rax,[rsp+0x70]
   140003024:	mov    QWORD PTR [rsp+0x40],rax
   140003029:	and    QWORD PTR [rsp+0x38],0x0
   14000302f:	and    QWORD PTR [rsp+0x30],0x0
   140003035:	mov    DWORD PTR [rsp+0x28],0x10
   14000303d:	mov    DWORD PTR [rsp+0x20],0x1
   140003045:	call   QWORD PTR [rip+0x807d]        # 0x14000b0c8
   14000304b:	test   eax,eax
   14000304d:	jne    0x1400030b5
   14000304f:	call   QWORD PTR [rip+0x80e3]        # 0x14000b138
   140003055:	movzx  ebx,ax
   140003058:	or     ebx,0x80070000
   14000305e:	test   eax,eax
   140003060:	cmovle ebx,eax
   140003063:	test   ebx,ebx
   140003065:	jns    0x1400030cb
   140003067:	mov    rax,QWORD PTR [rip+0xbfc2]        # 0x14000f030
   14000306e:	cmp    rax,rdi
   140003071:	je     0x1400030cb
   140003073:	test   BYTE PTR [rax+0x1c],0x8
   140003077:	je     0x1400030cb
   140003079:	cmp    BYTE PTR [rax+0x19],0x2
   14000307d:	jb     0x1400030cb
   14000307f:	call   0x1400068c8
   140003084:	mov    r9d,eax
   140003087:	mov    edx,0x44
   14000308c:	lea    rax,[rip+0x906d]        # 0x14000c100
   140003093:	mov    rcx,QWORD PTR [rip+0xbf96]        # 0x14000f030
   14000309a:	lea    r8,[rip+0x93b7]        # 0x14000c458
   1400030a1:	mov    DWORD PTR [rsp+0x28],ebx
   1400030a5:	mov    QWORD PTR [rsp+0x20],rax
   1400030aa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030ae:	call   0x1400013ec
   1400030b3:	jmp    0x1400030cb
   1400030b5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400030ba:	call   QWORD PTR [rip+0x8000]        # 0x14000b0c0
   1400030c0:	mov    rcx,QWORD PTR [rsp+0x58]
   1400030c5:	call   QWORD PTR [rip+0x7ff5]        # 0x14000b0c0
   1400030cb:	lea    r11,[rsp+0xe0]
   1400030d3:	mov    eax,ebx
   1400030d5:	mov    rbx,QWORD PTR [r11+0x10]
   1400030d9:	mov    rbp,QWORD PTR [r11+0x18]
   1400030dd:	mov    rsi,QWORD PTR [r11+0x20]
   1400030e1:	mov    rsp,r11
   1400030e4:	pop    rdi
   1400030e5:	ret    
   1400030e6:	int3   
   1400030e7:	int3   
   1400030e8:	int3   
   1400030e9:	int3   
   1400030ea:	int3   
   1400030eb:	int3   
   1400030ec:	int3   
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	mov    rax,rsp
   1400030f3:	mov    QWORD PTR [rax+0x8],rbx
   1400030f7:	mov    QWORD PTR [rax+0x10],rbp
   1400030fb:	mov    QWORD PTR [rax+0x18],rsi
   1400030ff:	mov    QWORD PTR [rax+0x20],rdi
   140003103:	push   r14
   140003105:	sub    rsp,0x60
   140003109:	movaps XMMWORD PTR [rax-0x18],xmm6
   14000310d:	mov    rsi,r9
   140003110:	movdqa xmm6,XMMWORD PTR [rip+0x99e8]        # 0x14000cb00
   140003118:	mov    rbp,r8
   14000311b:	mov    r14,rdx
   14000311e:	mov    rdi,rcx
   140003121:	mov    rax,QWORD PTR [rip+0xbf08]        # 0x14000f030
   140003128:	lea    rcx,[rip+0xbf01]        # 0x14000f030
   14000312f:	cmp    rax,rcx
   140003132:	je     0x140003164
   140003134:	test   BYTE PTR [rax+0x1c],0x1
   140003138:	je     0x140003164
   14000313a:	cmp    BYTE PTR [rax+0x19],0x4
   14000313e:	jb     0x140003164
   140003140:	call   0x1400068c8
   140003145:	mov    rcx,QWORD PTR [rip+0xbee4]        # 0x14000f030
   14000314c:	lea    r8,[rip+0x9305]        # 0x14000c458
   140003153:	mov    r9d,eax
   140003156:	mov    edx,0x45
   14000315b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000315f:	call   0x140006960
   140003164:	mov    rax,QWORD PTR [rdi+0x8]
   140003168:	movdqa XMMWORD PTR [rsp+0x40],xmm6
   14000316e:	mov    rbx,QWORD PTR [rax+0x98]
   140003175:	mov    rcx,rbx
   140003178:	call   QWORD PTR [rip+0x829a]        # 0x14000b418
   14000317e:	mov    rax,QWORD PTR [rsp+0x90]
   140003186:	lea    rcx,[rdi+0x8]
   14000318a:	mov    QWORD PTR [rsp+0x38],rax
   14000318f:	mov    r9,rsi
   140003192:	lea    rax,[rsp+0x40]
   140003197:	mov    r8,rbp
   14000319a:	mov    QWORD PTR [rsp+0x30],rax
   14000319f:	mov    rdx,r14
   1400031a2:	and    DWORD PTR [rsp+0x28],0x0
   1400031a7:	and    DWORD PTR [rsp+0x20],0x0
   1400031ac:	call   rbx
   1400031ae:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   1400031b3:	lea    r11,[rsp+0x60]
   1400031b8:	mov    rbx,QWORD PTR [r11+0x10]
   1400031bc:	mov    rbp,QWORD PTR [r11+0x18]
   1400031c0:	mov    rsi,QWORD PTR [r11+0x20]
   1400031c4:	mov    rdi,QWORD PTR [r11+0x28]
   1400031c8:	mov    rsp,r11
   1400031cb:	pop    r14
   1400031cd:	ret    
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	int3   
   1400031d1:	int3   
   1400031d2:	int3   
   1400031d3:	int3   
   1400031d4:	int3   
   1400031d5:	int3   
   1400031d6:	int3   
   1400031d7:	int3   
   1400031d8:	int3   
   1400031d9:	int3   
   1400031da:	int3   
   1400031db:	int3   
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400031e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400031ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400031ef:	push   rbp
   1400031f0:	push   r12
   1400031f2:	push   r13
   1400031f4:	push   r14
   1400031f6:	push   r15
   1400031f8:	mov    rbp,rsp
   1400031fb:	sub    rsp,0x70
   1400031ff:	and    QWORD PTR [rbp-0x18],0x0
   140003204:	mov    r13,r9
   140003207:	and    QWORD PTR [rbp-0x20],0x0
   14000320c:	mov    r14,rdx
   14000320f:	and    DWORD PTR [rbp+0x48],0x0
   140003213:	mov    rax,QWORD PTR [rip+0xbe16]        # 0x14000f030
   14000321a:	lea    rbx,[rip+0xbe0f]        # 0x14000f030
   140003221:	mov    r12,QWORD PTR [rbp+0x60]
   140003225:	mov    esi,0x4
   14000322a:	mov    dil,0x1
   14000322d:	cmp    rax,rbx
   140003230:	je     0x140003287
   140003232:	test   BYTE PTR [rax+0x1c],dil
   140003236:	je     0x140003287
   140003238:	cmp    BYTE PTR [rax+0x19],sil
   14000323c:	jb     0x140003287
   14000323e:	call   0x1400068c8
   140003243:	mov    rcx,QWORD PTR [rip+0xbde6]        # 0x14000f030
   14000324a:	mov    r9d,eax
   14000324d:	mov    eax,DWORD PTR [r12+0x8]
   140003252:	mov    DWORD PTR [rsp+0x40],eax
   140003256:	mov    eax,DWORD PTR [r12+0xc]
   14000325b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000325f:	mov    DWORD PTR [rsp+0x38],eax
   140003263:	mov    eax,DWORD PTR [r12]
   140003267:	mov    DWORD PTR [rsp+0x30],eax
   14000326b:	mov    eax,DWORD PTR [r12+0x4]
   140003270:	mov    DWORD PTR [rsp+0x28],eax
   140003274:	mov    eax,DWORD PTR [rbp+0x58]
   140003277:	mov    DWORD PTR [rsp+0x20],eax
   14000327b:	call   0x140001360
   140003280:	mov    rax,QWORD PTR [rip+0xbda9]        # 0x14000f030
   140003287:	test   r13,r13
   14000328a:	jne    0x1400032de
   14000328c:	cmp    rax,rbx
   14000328f:	je     0x1400032d4
   140003291:	test   BYTE PTR [rax+0x1c],0x8
   140003295:	je     0x1400032d4
   140003297:	cmp    BYTE PTR [rax+0x19],0x2
   14000329b:	jb     0x1400032d4
   14000329d:	call   0x1400068c8
   1400032a2:	mov    r9d,eax
   1400032a5:	lea    edx,[r13+0x47]
   1400032a9:	lea    rax,[rip+0x8e68]        # 0x14000c118
   1400032b0:	mov    rcx,QWORD PTR [rip+0xbd79]        # 0x14000f030
   1400032b7:	lea    r8,[rip+0x919a]        # 0x14000c458
   1400032be:	mov    DWORD PTR [rsp+0x28],0x80070057
   1400032c6:	mov    QWORD PTR [rsp+0x20],rax
   1400032cb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400032cf:	call   0x1400013ec
   1400032d4:	mov    esi,0x80070057
   1400032d9:	jmp    0x1400035ac
   1400032de:	mov    r15,QWORD PTR [rbp+0x68]
   1400032e2:	test   r15,r15
   1400032e5:	jne    0x14000330d
   1400032e7:	cmp    rax,rbx
   1400032ea:	je     0x1400032d4
   1400032ec:	test   BYTE PTR [rax+0x1c],0x8
   1400032f0:	je     0x1400032d4
   1400032f2:	cmp    BYTE PTR [rax+0x19],0x2
   1400032f6:	jb     0x1400032d4
   1400032f8:	call   0x1400068c8
   1400032fd:	mov    r9d,eax
   140003300:	lea    edx,[r15+0x48]
   140003304:	lea    rax,[rip+0x8e1d]        # 0x14000c128
   14000330b:	jmp    0x1400032b0
   14000330d:	test   r14,r14
   140003310:	je     0x140003372
   140003312:	mov    rcx,r14
   140003315:	call   QWORD PTR [rip+0x7ec5]        # 0x14000b1e0
   14000331b:	cmp    eax,0x201
   140003320:	jbe    0x14000336b
   140003322:	mov    rax,QWORD PTR [rip+0xbd07]        # 0x14000f030
   140003329:	cmp    rax,rbx
   14000332c:	je     0x1400032d4
   14000332e:	test   BYTE PTR [rax+0x1c],0x8
   140003332:	je     0x1400032d4
   140003334:	cmp    BYTE PTR [rax+0x19],0x2
   140003338:	jb     0x1400032d4
   14000333a:	call   0x1400068c8
   14000333f:	mov    rcx,QWORD PTR [rip+0xbcea]        # 0x14000f030
   140003346:	lea    r8,[rip+0x910b]        # 0x14000c458
   14000334d:	mov    r9d,eax
   140003350:	mov    DWORD PTR [rsp+0x20],0x80070057
   140003358:	mov    edx,0x49
   14000335d:	mov    rcx,QWORD PTR [rcx+0x10]
   140003361:	call   0x140001318
   140003366:	jmp    0x1400032d4
   14000336b:	mov    rax,QWORD PTR [rip+0xbcbe]        # 0x14000f030
   140003372:	cmp    rax,rbx
   140003375:	je     0x1400033ed
   140003377:	test   BYTE PTR [rax+0x1c],dil
   14000337b:	je     0x1400033b3
   14000337d:	cmp    BYTE PTR [rax+0x19],sil
   140003381:	jb     0x1400033b3
   140003383:	call   0x1400068c8
   140003388:	mov    rcx,QWORD PTR [rip+0xbca1]        # 0x14000f030
   14000338f:	lea    r8,[rip+0x90c2]        # 0x14000c458
   140003396:	mov    r9d,eax
   140003399:	mov    QWORD PTR [rsp+0x20],r14
   14000339e:	mov    edx,0x4a
   1400033a3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033a7:	call   0x140006824
   1400033ac:	mov    rax,QWORD PTR [rip+0xbc7d]        # 0x14000f030
   1400033b3:	cmp    rax,rbx
   1400033b6:	je     0x1400033ed
   1400033b8:	test   BYTE PTR [rax+0x1c],dil
   1400033bc:	je     0x1400033ed
   1400033be:	cmp    BYTE PTR [rax+0x19],sil
   1400033c2:	jb     0x1400033ed
   1400033c4:	call   0x1400068c8
   1400033c9:	mov    rcx,QWORD PTR [rip+0xbc60]        # 0x14000f030
   1400033d0:	lea    r8,[rip+0x9081]        # 0x14000c458
   1400033d7:	mov    r9d,eax
   1400033da:	mov    QWORD PTR [rsp+0x20],r13
   1400033df:	mov    edx,0x4b
   1400033e4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033e8:	call   0x140006824
   1400033ed:	lea    rax,[rbp-0x18]
   1400033f1:	mov    r8d,esi
   1400033f4:	lea    r9,[rip+0x8fc5]        # 0x14000c3c0
   1400033fb:	mov    QWORD PTR [rsp+0x20],rax
   140003400:	xor    edx,edx
   140003402:	lea    rcx,[rip+0x9017]        # 0x14000c420
   140003409:	call   QWORD PTR [rip+0x7fd9]        # 0x14000b3e8
   14000340f:	mov    esi,eax
   140003411:	test   eax,eax
   140003413:	jns    0x140003472
   140003415:	mov    rax,QWORD PTR [rip+0xbc14]        # 0x14000f030
   14000341c:	cmp    rax,rbx
   14000341f:	je     0x1400035ac
   140003425:	test   BYTE PTR [rax+0x1c],0x8
   140003429:	je     0x1400035ac
   14000342f:	cmp    BYTE PTR [rax+0x19],0x2
   140003433:	jb     0x1400035ac
   140003439:	call   0x1400068c8
   14000343e:	mov    r9d,eax
   140003441:	mov    edx,0x4c
   140003446:	lea    rax,[rip+0x8cf3]        # 0x14000c140
   14000344d:	mov    rcx,QWORD PTR [rip+0xbbdc]        # 0x14000f030
   140003454:	lea    r8,[rip+0x8ffd]        # 0x14000c458
   14000345b:	mov    DWORD PTR [rsp+0x28],esi
   14000345f:	mov    QWORD PTR [rsp+0x20],rax
   140003464:	mov    rcx,QWORD PTR [rcx+0x10]
   140003468:	call   0x1400013ec
   14000346d:	jmp    0x1400035ac
   140003472:	mov    rbx,QWORD PTR [rbp-0x18]
   140003476:	mov    rax,QWORD PTR [rbx]
   140003479:	mov    rdi,QWORD PTR [rax+0x28]
   14000347d:	mov    rcx,rdi
   140003480:	call   QWORD PTR [rip+0x7f92]        # 0x14000b418
   140003486:	lea    rdx,[rbp+0x48]
   14000348a:	mov    rcx,rbx
   14000348d:	call   rdi
   14000348f:	mov    ebx,eax
   140003491:	test   eax,eax
   140003493:	jns    0x1400034c0
   140003495:	mov    rcx,QWORD PTR [rip+0xbb94]        # 0x14000f030
   14000349c:	lea    rax,[rip+0xbb8d]        # 0x14000f030
   1400034a3:	cmp    rcx,rax
   1400034a6:	je     0x14000351c
   1400034a8:	test   BYTE PTR [rcx+0x1c],0x1
   1400034ac:	je     0x14000351c
   1400034ae:	cmp    BYTE PTR [rcx+0x19],0x2
   1400034b2:	jb     0x14000351c
   1400034b4:	call   0x1400068c8
   1400034b9:	mov    edx,0x4d
   1400034be:	jmp    0x1400034fe
   1400034c0:	mov    ecx,DWORD PTR [rbp+0x48]
   1400034c3:	call   QWORD PTR [rip+0x7d6f]        # 0x14000b238
   1400034c9:	test   eax,eax
   1400034cb:	jne    0x14000351c
   1400034cd:	mov    rax,QWORD PTR [rip+0xbb5c]        # 0x14000f030
   1400034d4:	lea    rcx,[rip+0xbb55]        # 0x14000f030
   1400034db:	cmp    rax,rcx
   1400034de:	je     0x14000351c
   1400034e0:	test   BYTE PTR [rax+0x1c],0x1
   1400034e4:	je     0x14000351c
   1400034e6:	cmp    BYTE PTR [rax+0x19],0x2
   1400034ea:	jb     0x14000351c
   1400034ec:	call   QWORD PTR [rip+0x7c46]        # 0x14000b138
   1400034f2:	mov    ebx,eax
   1400034f4:	call   0x1400068c8
   1400034f9:	mov    edx,0x4e
   1400034fe:	mov    rcx,QWORD PTR [rip+0xbb2b]        # 0x14000f030
   140003505:	lea    r8,[rip+0x8f4c]        # 0x14000c458
   14000350c:	mov    r9d,eax
   14000350f:	mov    DWORD PTR [rsp+0x20],ebx
   140003513:	mov    rcx,QWORD PTR [rcx+0x10]
   140003517:	call   0x140001318
   14000351c:	movups xmm0,XMMWORD PTR [r12]
   140003521:	mov    rbx,QWORD PTR [rbp-0x18]
   140003525:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   14000352a:	mov    rax,QWORD PTR [rbx]
   14000352d:	mov    rdi,QWORD PTR [rax+0x38]
   140003531:	mov    rcx,rdi
   140003534:	call   QWORD PTR [rip+0x7ede]        # 0x14000b418
   14000353a:	mov    r9d,DWORD PTR [rbp+0x50]
   14000353e:	lea    rax,[rbp-0x20]
   140003542:	mov    QWORD PTR [rsp+0x30],rax
   140003547:	mov    r8,r14
   14000354a:	lea    rax,[rbp-0x10]
   14000354e:	mov    rdx,r13
   140003551:	mov    QWORD PTR [rsp+0x28],rax
   140003556:	mov    rcx,rbx
   140003559:	mov    eax,DWORD PTR [rbp+0x58]
   14000355c:	mov    DWORD PTR [rsp+0x20],eax
   140003560:	call   rdi
   140003562:	mov    esi,eax
   140003564:	test   eax,eax
   140003566:	jns    0x1400035a0
   140003568:	mov    rax,QWORD PTR [rip+0xbac1]        # 0x14000f030
   14000356f:	lea    rcx,[rip+0xbaba]        # 0x14000f030
   140003576:	cmp    rax,rcx
   140003579:	je     0x1400035ac
   14000357b:	test   BYTE PTR [rax+0x1c],0x8
   14000357f:	je     0x1400035ac
   140003581:	cmp    BYTE PTR [rax+0x19],0x2
   140003585:	jb     0x1400035ac
   140003587:	call   0x1400068c8
   14000358c:	mov    r9d,eax
   14000358f:	mov    edx,0x4f
   140003594:	lea    rax,[rip+0x8bcd]        # 0x14000c168
   14000359b:	jmp    0x14000344d
   1400035a0:	mov    rax,QWORD PTR [rbp-0x20]
   1400035a4:	and    QWORD PTR [rbp-0x20],0x0
   1400035a9:	mov    QWORD PTR [r15],rax
   1400035ac:	mov    rcx,QWORD PTR [rbp-0x20]
   1400035b0:	call   QWORD PTR [rip+0x7c1a]        # 0x14000b1d0
   1400035b6:	mov    rbx,QWORD PTR [rbp-0x18]
   1400035ba:	test   rbx,rbx
   1400035bd:	je     0x1400035d4
   1400035bf:	mov    rax,QWORD PTR [rbx]
   1400035c2:	mov    rdi,QWORD PTR [rax+0x10]
   1400035c6:	mov    rcx,rdi
   1400035c9:	call   QWORD PTR [rip+0x7e49]        # 0x14000b418
   1400035cf:	mov    rcx,rbx
   1400035d2:	call   rdi
   1400035d4:	lea    r11,[rsp+0x70]
   1400035d9:	mov    eax,esi
   1400035db:	mov    rbx,QWORD PTR [r11+0x30]
   1400035df:	mov    rsi,QWORD PTR [r11+0x38]
   1400035e3:	mov    rdi,QWORD PTR [r11+0x40]
   1400035e7:	mov    rsp,r11
   1400035ea:	pop    r15
   1400035ec:	pop    r14
   1400035ee:	pop    r13
   1400035f0:	pop    r12
   1400035f2:	pop    rbp
   1400035f3:	ret    
   1400035f4:	int3   
   1400035f5:	int3   
   1400035f6:	int3   
   1400035f7:	int3   
   1400035f8:	int3   
   1400035f9:	int3   
   1400035fa:	int3   
   1400035fb:	int3   
   1400035fc:	mov    rax,rsp
   1400035ff:	push   rbp
   140003600:	push   rdi
   140003601:	push   r12
   140003603:	push   r14
   140003605:	push   r15
   140003607:	lea    rbp,[rax-0x1a8]
   14000360e:	sub    rsp,0x280
   140003615:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000361e:	mov    QWORD PTR [rax+0x10],rbx
   140003622:	mov    QWORD PTR [rax+0x18],rsi
   140003626:	mov    rax,QWORD PTR [rip+0xb9f3]        # 0x14000f020
   14000362d:	xor    rax,rsp
   140003630:	mov    QWORD PTR [rbp+0x170],rax
   140003637:	mov    rdi,rcx
   14000363a:	xor    r15d,r15d
   14000363d:	mov    r14b,r15b
   140003640:	mov    WORD PTR [rsp+0x60],r15w
   140003646:	xor    edx,edx
   140003648:	mov    r8d,0x206
   14000364e:	lea    rcx,[rsp+0x62]
   140003653:	call   0x14000a15c
   140003658:	mov    QWORD PTR [rsp+0x38],r15
   14000365d:	mov    QWORD PTR [rsp+0x30],r15
   140003662:	mov    DWORD PTR [rsp+0x48],r15d
   140003667:	xor    eax,eax
   140003669:	mov    QWORD PTR [rsp+0x4c],rax
   14000366e:	mov    DWORD PTR [rsp+0x54],eax
   140003672:	mov    rcx,rdi
   140003675:	call   QWORD PTR [rip+0x7b65]        # 0x14000b1e0
   14000367b:	cmp    eax,0x104
   140003680:	jae    0x14000395b
   140003686:	lea    rax,[rsp+0x38]
   14000368b:	mov    QWORD PTR [rsp+0x20],rax
   140003690:	lea    r9,[rip+0x8d19]        # 0x14000c3b0
   140003697:	xor    edx,edx
   140003699:	lea    r8d,[r15+0x17]
   14000369d:	lea    rcx,[rip+0x9284]        # 0x14000c928
   1400036a4:	call   QWORD PTR [rip+0x7d3e]        # 0x14000b3e8
   1400036aa:	mov    esi,eax
   1400036ac:	test   eax,eax
   1400036ae:	jns    0x140003713
   1400036b0:	lea    rax,[rip+0xb979]        # 0x14000f030
   1400036b7:	mov    rcx,QWORD PTR [rip+0xb972]        # 0x14000f030
   1400036be:	cmp    rcx,rax
   1400036c1:	je     0x140003952
   1400036c7:	test   BYTE PTR [rcx+0x1c],0x8
   1400036cb:	je     0x140003952
   1400036d1:	cmp    BYTE PTR [rcx+0x19],0x2
   1400036d5:	jb     0x140003952
   1400036db:	call   0x1400068c8
   1400036e0:	mov    r9d,eax
   1400036e3:	lea    edx,[r15+0x50]
   1400036e7:	lea    rax,[rip+0x8aa2]        # 0x14000c190
   1400036ee:	mov    DWORD PTR [rsp+0x28],esi
   1400036f2:	mov    QWORD PTR [rsp+0x20],rax
   1400036f7:	lea    r8,[rip+0x8d5a]        # 0x14000c458
   1400036fe:	mov    rcx,QWORD PTR [rip+0xb92b]        # 0x14000f030
   140003705:	mov    rcx,QWORD PTR [rcx+0x10]
   140003709:	call   0x1400013ec
   14000370e:	jmp    0x140003952
   140003713:	mov    rcx,rdi
   140003716:	call   QWORD PTR [rip+0x7b04]        # 0x14000b220
   14000371c:	mov    rbx,rax
   14000371f:	or     r9d,0xffffffff
   140003723:	mov    DWORD PTR [rsp+0x28],r9d
   140003728:	lea    rax,[rip+0x8ab1]        # 0x14000c1e0
   14000372f:	mov    QWORD PTR [rsp+0x20],rax
   140003734:	mov    r8,rbx
   140003737:	lea    r12d,[r9+0x2]
   14000373b:	mov    edx,r12d
   14000373e:	lea    ecx,[r12+0x7e]
   140003743:	call   QWORD PTR [rip+0x796f]        # 0x14000b0b8
   140003749:	cmp    eax,0x2
   14000374c:	jne    0x140003952
   140003752:	sub    rbx,rdi
   140003755:	sar    rbx,1
   140003758:	cmp    rbx,0x7ffffffe
   14000375f:	jbe    0x140003770
   140003761:	mov    ebx,0x80070057
   140003766:	mov    WORD PTR [rsp+0x60],r15w
   14000376c:	mov    esi,ebx
   14000376e:	jmp    0x1400037be
   140003770:	mov    edx,0x104
   140003775:	lea    rcx,[rsp+0x60]
   14000377a:	mov    esi,r15d
   14000377d:	lea    rax,[rsp+0x60]
   140003782:	sub    rdi,rax
   140003785:	lea    rax,[rbx-0x104]
   14000378c:	add    rax,rdx
   14000378f:	je     0x1400037a6
   140003791:	movzx  eax,WORD PTR [rdi+rcx*1]
   140003795:	test   ax,ax
   140003798:	je     0x1400037a6
   14000379a:	mov    WORD PTR [rcx],ax
   14000379d:	add    rcx,0x2
   1400037a1:	sub    rdx,r12
   1400037a4:	jne    0x140003785
   1400037a6:	test   rdx,rdx
   1400037a9:	jne    0x1400037b4
   1400037ab:	sub    rcx,0x2
   1400037af:	mov    esi,0x8007007a
   1400037b4:	mov    WORD PTR [rcx],r15w
   1400037b8:	mov    ebx,esi
   1400037ba:	test   esi,esi
   1400037bc:	jns    0x140003806
   1400037be:	lea    rax,[rip+0xb86b]        # 0x14000f030
   1400037c5:	mov    rcx,QWORD PTR [rip+0xb864]        # 0x14000f030
   1400037cc:	cmp    rcx,rax
   1400037cf:	je     0x140003952
   1400037d5:	test   BYTE PTR [rcx+0x1c],0x8
   1400037d9:	je     0x140003952
   1400037df:	cmp    BYTE PTR [rcx+0x19],0x2
   1400037e3:	jb     0x140003952
   1400037e9:	call   0x1400068c8
   1400037ee:	mov    r9d,eax
   1400037f1:	mov    edx,0x51
   1400037f6:	mov    DWORD PTR [rsp+0x28],ebx
   1400037fa:	lea    rax,[rip+0x89f7]        # 0x14000c1f8
   140003801:	jmp    0x1400036f2
   140003806:	mov    ecx,r15d
   140003809:	lea    rax,[rsp+0x60]
   14000380e:	cmp    WORD PTR [rax],r15w
   140003812:	je     0x140003831
   140003814:	cmp    WORD PTR [rax],0x2f
   140003818:	jne    0x140003822
   14000381a:	mov    edx,0x5c
   14000381f:	mov    WORD PTR [rax],dx
   140003822:	add    ecx,r12d
   140003825:	add    rax,0x2
   140003829:	cmp    ecx,0x104
   14000382f:	jb     0x14000380e
   140003831:	mov    rbx,QWORD PTR [rsp+0x38]
   140003836:	mov    rax,QWORD PTR [rbx]
   140003839:	mov    rdi,QWORD PTR [rax+0x50]
   14000383d:	mov    rcx,rdi
   140003840:	call   QWORD PTR [rip+0x7bd2]        # 0x14000b418
   140003846:	lea    r9,[rsp+0x30]
   14000384b:	xor    r8d,r8d
   14000384e:	lea    rdx,[rsp+0x60]
   140003853:	mov    rcx,rbx
   140003856:	call   rdi
   140003858:	mov    ebx,eax
   14000385a:	test   eax,eax
   14000385c:	jns    0x1400038b6
   14000385e:	lea    rax,[rip+0xb7cb]        # 0x14000f030
   140003865:	mov    rcx,QWORD PTR [rip+0xb7c4]        # 0x14000f030
   14000386c:	cmp    rcx,rax
   14000386f:	je     0x14000395b
   140003875:	test   BYTE PTR [rcx+0x1c],r12b
   140003879:	je     0x14000395b
   14000387f:	cmp    BYTE PTR [rcx+0x19],0x2
   140003883:	jb     0x14000395b
   140003889:	call   0x1400068c8
   14000388e:	mov    r9d,eax
   140003891:	mov    edx,0x52
   140003896:	mov    DWORD PTR [rsp+0x20],ebx
   14000389a:	lea    r8,[rip+0x8bb7]        # 0x14000c458
   1400038a1:	mov    rcx,QWORD PTR [rip+0xb788]        # 0x14000f030
   1400038a8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400038ac:	call   0x140001318
   1400038b1:	jmp    0x14000395b
   1400038b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038bb:	mov    rax,QWORD PTR [rbx]
   1400038be:	mov    rdi,QWORD PTR [rax+0x18]
   1400038c2:	mov    rcx,rdi
   1400038c5:	call   QWORD PTR [rip+0x7b4d]        # 0x14000b418
   1400038cb:	lea    rdx,[rsp+0x48]
   1400038d0:	mov    rcx,rbx
   1400038d3:	call   rdi
   1400038d5:	mov    esi,eax
   1400038d7:	test   eax,eax
   1400038d9:	jns    0x140003913
   1400038db:	lea    rax,[rip+0xb74e]        # 0x14000f030
   1400038e2:	mov    rcx,QWORD PTR [rip+0xb747]        # 0x14000f030
   1400038e9:	cmp    rcx,rax
   1400038ec:	je     0x140003952
   1400038ee:	test   BYTE PTR [rcx+0x1c],0x8
   1400038f2:	je     0x140003952
   1400038f4:	cmp    BYTE PTR [rcx+0x19],0x2
   1400038f8:	jb     0x140003952
   1400038fa:	call   0x1400068c8
   1400038ff:	mov    r9d,eax
   140003902:	mov    edx,0x53
   140003907:	lea    rax,[rip+0x892a]        # 0x14000c238
   14000390e:	jmp    0x1400036ee
   140003913:	mov    rax,QWORD PTR [rsp+0x48]
   140003918:	mov    rcx,QWORD PTR [rsp+0x50]
   14000391d:	cmp    rax,QWORD PTR [rip+0x9024]        # 0x14000c948
   140003924:	jne    0x140003934
   140003926:	cmp    rcx,QWORD PTR [rip+0x9023]        # 0x14000c950
   14000392d:	jne    0x140003934
   14000392f:	mov    r14b,r12b
   140003932:	jmp    0x140003952
   140003934:	sub    rax,QWORD PTR [rip+0x8ffd]        # 0x14000c938
   14000393b:	jne    0x140003947
   14000393d:	mov    rax,rcx
   140003940:	sub    rax,QWORD PTR [rip+0x8ff9]        # 0x14000c940
   140003947:	movzx  r14d,r14b
   14000394b:	test   rax,rax
   14000394e:	cmove  r14d,r12d
   140003952:	test   esi,esi
   140003954:	js     0x140003960
   140003956:	test   r14b,r14b
   140003959:	jne    0x140003960
   14000395b:	mov    esi,0x80070057
   140003960:	mov    rbx,QWORD PTR [rsp+0x30]
   140003965:	test   rbx,rbx
   140003968:	je     0x140003980
   14000396a:	mov    rax,QWORD PTR [rbx]
   14000396d:	mov    rdi,QWORD PTR [rax+0x10]
   140003971:	mov    rcx,rdi
   140003974:	call   QWORD PTR [rip+0x7a9e]        # 0x14000b418
   14000397a:	mov    rcx,rbx
   14000397d:	call   rdi
   14000397f:	nop
   140003980:	mov    rbx,QWORD PTR [rsp+0x38]
   140003985:	test   rbx,rbx
   140003988:	je     0x14000399f
   14000398a:	mov    rax,QWORD PTR [rbx]
   14000398d:	mov    rdi,QWORD PTR [rax+0x10]
   140003991:	mov    rcx,rdi
   140003994:	call   QWORD PTR [rip+0x7a7e]        # 0x14000b418
   14000399a:	mov    rcx,rbx
   14000399d:	call   rdi
   14000399f:	mov    eax,esi
   1400039a1:	mov    rcx,QWORD PTR [rbp+0x170]
   1400039a8:	xor    rcx,rsp
   1400039ab:	call   0x140009bc0
   1400039b0:	lea    r11,[rsp+0x280]
   1400039b8:	mov    rbx,QWORD PTR [r11+0x38]
   1400039bc:	mov    rsi,QWORD PTR [r11+0x40]
   1400039c0:	mov    rsp,r11
   1400039c3:	pop    r15
   1400039c5:	pop    r14
   1400039c7:	pop    r12
   1400039c9:	pop    rdi
   1400039ca:	pop    rbp
   1400039cb:	ret    
   1400039cc:	int3   
   1400039cd:	int3   
   1400039ce:	int3   
   1400039cf:	int3   
   1400039d0:	int3   
   1400039d1:	int3   
   1400039d2:	int3   
   1400039d3:	int3   
   1400039d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400039d9:	push   rdi
   1400039da:	sub    rsp,0x20
   1400039de:	mov    rdi,QWORD PTR [rcx]
   1400039e1:	test   rdi,rdi
   1400039e4:	je     0x1400039fb
   1400039e6:	mov    rax,QWORD PTR [rdi]
   1400039e9:	mov    rbx,QWORD PTR [rax+0x10]
   1400039ed:	mov    rcx,rbx
   1400039f0:	call   QWORD PTR [rip+0x7a22]        # 0x14000b418
   1400039f6:	mov    rcx,rdi
   1400039f9:	call   rbx
   1400039fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a00:	add    rsp,0x20
   140003a04:	pop    rdi
   140003a05:	ret    
   140003a06:	int3   
   140003a07:	int3   
   140003a08:	int3   
   140003a09:	int3   
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	rex push rbx
   140003a12:	sub    rsp,0x20
   140003a16:	or     ebx,0xffffffff
   140003a19:	lock xadd DWORD PTR [rcx+0xc],ebx
   140003a1e:	sub    ebx,0x1
   140003a21:	jne    0x140003a4b
   140003a23:	cmp    BYTE PTR [rcx+0x60],bl
   140003a26:	je     0x140003a38
   140003a28:	mov    BYTE PTR [rcx+0x61],0x1
   140003a2c:	mov    rcx,QWORD PTR [rcx+0x50]
   140003a30:	call   QWORD PTR [rip+0x7672]        # 0x14000b0a8
   140003a36:	jmp    0x140003a4b
   140003a38:	mov    ecx,DWORD PTR [rcx+0x48]
   140003a3b:	xor    r9d,r9d
   140003a3e:	xor    r8d,r8d
   140003a41:	lea    edx,[r9+0x12]
   140003a45:	call   QWORD PTR [rip+0x77e5]        # 0x14000b230
   140003a4b:	mov    eax,ebx
   140003a4d:	add    rsp,0x20
   140003a51:	pop    rbx
   140003a52:	ret    
   140003a53:	int3   
   140003a54:	int3   
   140003a55:	int3   
   140003a56:	int3   
   140003a57:	int3   
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	mov    QWORD PTR [rsp+0x8],rbx
   140003a65:	push   rdi
   140003a66:	sub    rsp,0x20
   140003a6a:	mov    rax,QWORD PTR [rdx]
   140003a6d:	mov    rdi,rdx
   140003a70:	mov    rbx,QWORD PTR [rax+0x18]
   140003a74:	mov    rcx,rbx
   140003a77:	call   QWORD PTR [rip+0x799b]        # 0x14000b418
   140003a7d:	lea    r8,[rip+0x83bc]        # 0x14000be40
   140003a84:	mov    rcx,rdi
   140003a87:	lea    rdx,[rip+0x8dea]        # 0x14000c878
   140003a8e:	mov    rax,rbx
   140003a91:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a96:	add    rsp,0x20
   140003a9a:	pop    rdi
   140003a9b:	rex.W jmp rax
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	int3   
   140003aa1:	int3   
   140003aa2:	int3   
   140003aa3:	int3   
   140003aa4:	int3   
   140003aa5:	int3   
   140003aa6:	int3   
   140003aa7:	int3   
   140003aa8:	int3   
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	int3   
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	xor    eax,eax
   140003ab2:	ret    
   140003ab3:	int3   
   140003ab4:	int3   
   140003ab5:	int3   
   140003ab6:	int3   
   140003ab7:	int3   
   140003ab8:	int3   
   140003ab9:	int3   
   140003aba:	int3   
   140003abb:	int3   
   140003abc:	int3   
   140003abd:	int3   
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	test   rdx,rdx
   140003ac3:	jne    0x140003acb
   140003ac5:	mov    eax,0x80004003
   140003aca:	ret    
   140003acb:	mov    DWORD PTR [rdx],0x1
   140003ad1:	xor    eax,eax
   140003ad3:	ret    
   140003ad4:	int3   
   140003ad5:	int3   
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ae5:	push   rdi
   140003ae6:	sub    rsp,0x20
   140003aea:	mov    rbx,r9
   140003aed:	test   edx,edx
   140003aef:	je     0x140003af8
   140003af1:	mov    eax,0x8002000b
   140003af6:	jmp    0x140003b4e
   140003af8:	test   rbx,rbx
   140003afb:	jne    0x140003b04
   140003afd:	mov    eax,0x80004003
   140003b02:	jmp    0x140003b4e
   140003b04:	mov    rcx,QWORD PTR [rip+0xb63d]        # 0x14000f148
   140003b0b:	xor    eax,eax
   140003b0d:	test   rcx,rcx
   140003b10:	jne    0x140003b28
   140003b12:	mov    edx,r8d
   140003b15:	lea    rcx,[rip+0xb614]        # 0x14000f130
   140003b1c:	call   0x140006414
   140003b21:	mov    rcx,QWORD PTR [rip+0xb620]        # 0x14000f148
   140003b28:	mov    QWORD PTR [rbx],rcx
   140003b2b:	mov    rdi,QWORD PTR [rip+0xb616]        # 0x14000f148
   140003b32:	test   rdi,rdi
   140003b35:	je     0x140003b4e
   140003b37:	mov    rax,QWORD PTR [rdi]
   140003b3a:	mov    rbx,QWORD PTR [rax+0x8]
   140003b3e:	mov    rcx,rbx
   140003b41:	call   QWORD PTR [rip+0x78d1]        # 0x14000b418
   140003b47:	mov    rcx,rdi
   140003b4a:	call   rbx
   140003b4c:	xor    eax,eax
   140003b4e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b53:	add    rsp,0x20
   140003b57:	pop    rdi
   140003b58:	ret    
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	lea    rcx,[rip+0xb5c9]        # 0x14000f130
   140003b67:	jmp    0x140005df4
   140003b6c:	int3   
   140003b6d:	int3   
   140003b6e:	int3   
   140003b6f:	int3   
   140003b70:	int3   
   140003b71:	int3   
   140003b72:	int3   
   140003b73:	int3   
   140003b74:	int3   
   140003b75:	int3   
   140003b76:	int3   
   140003b77:	int3   
   140003b78:	int3   
   140003b79:	int3   
   140003b7a:	int3   
   140003b7b:	int3   
   140003b7c:	int3   
   140003b7d:	int3   
   140003b7e:	int3   
   140003b7f:	int3   
   140003b80:	mov    r11,rsp
   140003b83:	sub    rsp,0x58
   140003b87:	mov    rax,QWORD PTR [rsp+0xa0]
   140003b8f:	mov    r8d,edx
   140003b92:	mov    QWORD PTR [r11-0x10],rax
   140003b96:	mov    rdx,rcx
   140003b99:	mov    rax,QWORD PTR [rsp+0x98]
   140003ba1:	lea    rcx,[rip+0xb588]        # 0x14000f130
   140003ba8:	mov    QWORD PTR [r11-0x18],rax
   140003bac:	mov    rax,QWORD PTR [rsp+0x90]
   140003bb4:	mov    QWORD PTR [r11-0x20],rax
   140003bb8:	mov    rax,QWORD PTR [rsp+0x88]
   140003bc0:	mov    QWORD PTR [r11-0x28],rax
   140003bc4:	movzx  eax,WORD PTR [rsp+0x80]
   140003bcc:	mov    WORD PTR [rsp+0x28],ax
   140003bd1:	mov    DWORD PTR [r11-0x38],r9d
   140003bd5:	call   0x140005d44
   140003bda:	add    rsp,0x58
   140003bde:	ret    
   140003bdf:	int3   
   140003be0:	int3   
   140003be1:	int3   
   140003be2:	int3   
   140003be3:	int3   
   140003be4:	int3   
   140003be5:	int3   
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140003bf5:	push   rdi
   140003bf6:	sub    rsp,0x20
   140003bfa:	mov    rbx,r9
   140003bfd:	test   edx,edx
   140003bff:	je     0x140003c08
   140003c01:	mov    eax,0x8002000b
   140003c06:	jmp    0x140003c5e
   140003c08:	test   rbx,rbx
   140003c0b:	jne    0x140003c14
   140003c0d:	mov    eax,0x80004003
   140003c12:	jmp    0x140003c5e
   140003c14:	mov    rcx,QWORD PTR [rip+0xb4f5]        # 0x14000f110
   140003c1b:	xor    eax,eax
   140003c1d:	test   rcx,rcx
   140003c20:	jne    0x140003c38
   140003c22:	mov    edx,r8d
   140003c25:	lea    rcx,[rip+0xb4cc]        # 0x14000f0f8
   140003c2c:	call   0x140006414
   140003c31:	mov    rcx,QWORD PTR [rip+0xb4d8]        # 0x14000f110
   140003c38:	mov    QWORD PTR [rbx],rcx
   140003c3b:	mov    rdi,QWORD PTR [rip+0xb4ce]        # 0x14000f110
   140003c42:	test   rdi,rdi
   140003c45:	je     0x140003c5e
   140003c47:	mov    rax,QWORD PTR [rdi]
   140003c4a:	mov    rbx,QWORD PTR [rax+0x8]
   140003c4e:	mov    rcx,rbx
   140003c51:	call   QWORD PTR [rip+0x77c1]        # 0x14000b418
   140003c57:	mov    rcx,rdi
   140003c5a:	call   rbx
   140003c5c:	xor    eax,eax
   140003c5e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c63:	add    rsp,0x20
   140003c67:	pop    rdi
   140003c68:	ret    
   140003c69:	int3   
   140003c6a:	int3   
   140003c6b:	int3   
   140003c6c:	int3   
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	lea    rcx,[rip+0xb481]        # 0x14000f0f8
   140003c77:	jmp    0x140005df4
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	int3   
   140003c81:	int3   
   140003c82:	int3   
   140003c83:	int3   
   140003c84:	int3   
   140003c85:	int3   
   140003c86:	int3   
   140003c87:	int3   
   140003c88:	int3   
   140003c89:	int3   
   140003c8a:	int3   
   140003c8b:	int3   
   140003c8c:	int3   
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	mov    r11,rsp
   140003c93:	sub    rsp,0x58
   140003c97:	mov    rax,QWORD PTR [rsp+0xa0]
   140003c9f:	mov    r8d,edx
   140003ca2:	mov    QWORD PTR [r11-0x10],rax
   140003ca6:	mov    rdx,rcx
   140003ca9:	mov    rax,QWORD PTR [rsp+0x98]
   140003cb1:	lea    rcx,[rip+0xb440]        # 0x14000f0f8
   140003cb8:	mov    QWORD PTR [r11-0x18],rax
   140003cbc:	mov    rax,QWORD PTR [rsp+0x90]
   140003cc4:	mov    QWORD PTR [r11-0x20],rax
   140003cc8:	mov    rax,QWORD PTR [rsp+0x88]
   140003cd0:	mov    QWORD PTR [r11-0x28],rax
   140003cd4:	movzx  eax,WORD PTR [rsp+0x80]
   140003cdc:	mov    WORD PTR [rsp+0x28],ax
   140003ce1:	mov    DWORD PTR [r11-0x38],r9d
   140003ce5:	call   0x140005d44
   140003cea:	add    rsp,0x58
   140003cee:	ret    
   140003cef:	int3   
   140003cf0:	int3   
   140003cf1:	int3   
   140003cf2:	int3   
   140003cf3:	int3   
   140003cf4:	int3   
   140003cf5:	int3   
   140003cf6:	int3   
   140003cf7:	int3   
   140003cf8:	int3   
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	int3   
   140003cff:	int3   
   140003d00:	mov    QWORD PTR [rsp+0x8],rbx
   140003d05:	push   rdi
   140003d06:	sub    rsp,0x20
   140003d0a:	mov    rbx,r9
   140003d0d:	test   edx,edx
   140003d0f:	je     0x140003d18
   140003d11:	mov    eax,0x8002000b
   140003d16:	jmp    0x140003d6e
   140003d18:	test   rbx,rbx
   140003d1b:	jne    0x140003d24
   140003d1d:	mov    eax,0x80004003
   140003d22:	jmp    0x140003d6e
   140003d24:	mov    rcx,QWORD PTR [rip+0xb3ad]        # 0x14000f0d8
   140003d2b:	xor    eax,eax
   140003d2d:	test   rcx,rcx
   140003d30:	jne    0x140003d48
   140003d32:	mov    edx,r8d
   140003d35:	lea    rcx,[rip+0xb384]        # 0x14000f0c0
   140003d3c:	call   0x140006414
   140003d41:	mov    rcx,QWORD PTR [rip+0xb390]        # 0x14000f0d8
   140003d48:	mov    QWORD PTR [rbx],rcx
   140003d4b:	mov    rdi,QWORD PTR [rip+0xb386]        # 0x14000f0d8
   140003d52:	test   rdi,rdi
   140003d55:	je     0x140003d6e
   140003d57:	mov    rax,QWORD PTR [rdi]
   140003d5a:	mov    rbx,QWORD PTR [rax+0x8]
   140003d5e:	mov    rcx,rbx
   140003d61:	call   QWORD PTR [rip+0x76b1]        # 0x14000b418
   140003d67:	mov    rcx,rdi
   140003d6a:	call   rbx
   140003d6c:	xor    eax,eax
   140003d6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d73:	add    rsp,0x20
   140003d77:	pop    rdi
   140003d78:	ret    
   140003d79:	int3   
   140003d7a:	int3   
   140003d7b:	int3   
   140003d7c:	int3   
   140003d7d:	int3   
   140003d7e:	int3   
   140003d7f:	int3   
   140003d80:	lea    rcx,[rip+0xb339]        # 0x14000f0c0
   140003d87:	jmp    0x140005df4
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	int3   
   140003d91:	int3   
   140003d92:	int3   
   140003d93:	int3   
   140003d94:	int3   
   140003d95:	int3   
   140003d96:	int3   
   140003d97:	int3   
   140003d98:	int3   
   140003d99:	int3   
   140003d9a:	int3   
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	mov    r11,rsp
   140003da3:	sub    rsp,0x58
   140003da7:	mov    rax,QWORD PTR [rsp+0xa0]
   140003daf:	mov    r8d,edx
   140003db2:	mov    QWORD PTR [r11-0x10],rax
   140003db6:	mov    rdx,rcx
   140003db9:	mov    rax,QWORD PTR [rsp+0x98]
   140003dc1:	lea    rcx,[rip+0xb2f8]        # 0x14000f0c0
   140003dc8:	mov    QWORD PTR [r11-0x18],rax
   140003dcc:	mov    rax,QWORD PTR [rsp+0x90]
   140003dd4:	mov    QWORD PTR [r11-0x20],rax
   140003dd8:	mov    rax,QWORD PTR [rsp+0x88]
   140003de0:	mov    QWORD PTR [r11-0x28],rax
   140003de4:	movzx  eax,WORD PTR [rsp+0x80]
   140003dec:	mov    WORD PTR [rsp+0x28],ax
   140003df1:	mov    DWORD PTR [r11-0x38],r9d
   140003df5:	call   0x140005d44
   140003dfa:	add    rsp,0x58
   140003dfe:	ret    
   140003dff:	int3   
   140003e00:	int3   
   140003e01:	int3   
   140003e02:	int3   
   140003e03:	int3   
   140003e04:	int3   
   140003e05:	int3   
   140003e06:	int3   
   140003e07:	int3   
   140003e08:	int3   
   140003e09:	int3   
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	mov    QWORD PTR [rsp+0x8],rbx
   140003e15:	push   rdi
   140003e16:	sub    rsp,0x20
   140003e1a:	mov    rbx,r9
   140003e1d:	test   edx,edx
   140003e1f:	je     0x140003e28
   140003e21:	mov    eax,0x8002000b
   140003e26:	jmp    0x140003e7e
   140003e28:	test   rbx,rbx
   140003e2b:	jne    0x140003e34
   140003e2d:	mov    eax,0x80004003
   140003e32:	jmp    0x140003e7e
   140003e34:	mov    rcx,QWORD PTR [rip+0xb265]        # 0x14000f0a0
   140003e3b:	xor    eax,eax
   140003e3d:	test   rcx,rcx
   140003e40:	jne    0x140003e58
   140003e42:	mov    edx,r8d
   140003e45:	lea    rcx,[rip+0xb23c]        # 0x14000f088
   140003e4c:	call   0x140006414
   140003e51:	mov    rcx,QWORD PTR [rip+0xb248]        # 0x14000f0a0
   140003e58:	mov    QWORD PTR [rbx],rcx
   140003e5b:	mov    rdi,QWORD PTR [rip+0xb23e]        # 0x14000f0a0
   140003e62:	test   rdi,rdi
   140003e65:	je     0x140003e7e
   140003e67:	mov    rax,QWORD PTR [rdi]
   140003e6a:	mov    rbx,QWORD PTR [rax+0x8]
   140003e6e:	mov    rcx,rbx
   140003e71:	call   QWORD PTR [rip+0x75a1]        # 0x14000b418
   140003e77:	mov    rcx,rdi
   140003e7a:	call   rbx
   140003e7c:	xor    eax,eax
   140003e7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e83:	add    rsp,0x20
   140003e87:	pop    rdi
   140003e88:	ret    
   140003e89:	int3   
   140003e8a:	int3   
   140003e8b:	int3   
   140003e8c:	int3   
   140003e8d:	int3   
   140003e8e:	int3   
   140003e8f:	int3   
   140003e90:	lea    rcx,[rip+0xb1f1]        # 0x14000f088
   140003e97:	jmp    0x140005df4
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	int3   
   140003ea1:	int3   
   140003ea2:	int3   
   140003ea3:	int3   
   140003ea4:	int3   
   140003ea5:	int3   
   140003ea6:	int3   
   140003ea7:	int3   
   140003ea8:	int3   
   140003ea9:	int3   
   140003eaa:	int3   
   140003eab:	int3   
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	mov    r11,rsp
   140003eb3:	sub    rsp,0x58
   140003eb7:	mov    rax,QWORD PTR [rsp+0xa0]
   140003ebf:	mov    r8d,edx
   140003ec2:	mov    QWORD PTR [r11-0x10],rax
   140003ec6:	mov    rdx,rcx
   140003ec9:	mov    rax,QWORD PTR [rsp+0x98]
   140003ed1:	lea    rcx,[rip+0xb1b0]        # 0x14000f088
   140003ed8:	mov    QWORD PTR [r11-0x18],rax
   140003edc:	mov    rax,QWORD PTR [rsp+0x90]
   140003ee4:	mov    QWORD PTR [r11-0x20],rax
   140003ee8:	mov    rax,QWORD PTR [rsp+0x88]
   140003ef0:	mov    QWORD PTR [r11-0x28],rax
   140003ef4:	movzx  eax,WORD PTR [rsp+0x80]
   140003efc:	mov    WORD PTR [rsp+0x28],ax
   140003f01:	mov    DWORD PTR [r11-0x38],r9d
   140003f05:	call   0x140005d44
   140003f0a:	add    rsp,0x58
   140003f0e:	ret    
   140003f0f:	int3   
   140003f10:	int3   
   140003f11:	int3   
   140003f12:	int3   
   140003f13:	int3   
   140003f14:	int3   
   140003f15:	int3   
   140003f16:	int3   
   140003f17:	int3   
   140003f18:	int3   
   140003f19:	int3   
   140003f1a:	int3   
   140003f1b:	int3   
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	mov    rax,rsp
   140003f23:	mov    QWORD PTR [rax+0x18],r8
   140003f27:	mov    QWORD PTR [rax+0x10],rdx
   140003f2b:	mov    QWORD PTR [rax+0x8],rcx
   140003f2f:	push   rbx
   140003f30:	push   rsi
   140003f31:	push   rdi
   140003f32:	push   r12
   140003f34:	push   r13
   140003f36:	push   r14
   140003f38:	push   r15
   140003f3a:	sub    rsp,0x30
   140003f3e:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140003f46:	mov    r12,r8
   140003f49:	mov    r13,rdx
   140003f4c:	mov    r15,rcx
   140003f4f:	xor    esi,esi
   140003f51:	test   r8,r8
   140003f54:	jne    0x140003f60
   140003f56:	mov    eax,0x80004003
   140003f5b:	jmp    0x140004080
   140003f60:	mov    QWORD PTR [r8],rsi
   140003f63:	mov    r14d,0x8007000e
   140003f69:	mov    DWORD PTR [rsp+0x88],r14d
   140003f71:	mov    QWORD PTR [rsp+0x20],rsi
   140003f76:	mov    ecx,0x58
   140003f7b:	call   0x140009654
   140003f80:	mov    rdi,rax
   140003f83:	test   rax,rax
   140003f86:	je     0x140003fb1
   140003f88:	mov    DWORD PTR [rax+0x8],esi
   140003f8b:	xor    edx,edx
   140003f8d:	lea    r8d,[rdx+0x28]
   140003f91:	lea    rcx,[rax+0x10]
   140003f95:	call   0x14000a15c
   140003f9a:	mov    BYTE PTR [rdi+0x38],sil
   140003f9e:	mov    DWORD PTR [rdi+0x48],esi
   140003fa1:	mov    QWORD PTR [rdi+0x50],rsi
   140003fa5:	lea    rax,[rip+0x7e04]        # 0x14000bdb0
   140003fac:	mov    QWORD PTR [rdi],rax
   140003faf:	jmp    0x140003fb4
   140003fb1:	mov    rdi,rsi
   140003fb4:	mov    QWORD PTR [rsp+0x20],rdi
   140003fb9:	jmp    0x140003fdc
   140003fbb:	xor    esi,esi
   140003fbd:	mov    r12,QWORD PTR [rsp+0x80]
   140003fc5:	mov    r13,QWORD PTR [rsp+0x78]
   140003fca:	mov    r15,QWORD PTR [rsp+0x70]
   140003fcf:	mov    r14d,DWORD PTR [rsp+0x88]
   140003fd7:	mov    rdi,QWORD PTR [rsp+0x20]
   140003fdc:	test   rdi,rdi
   140003fdf:	je     0x14000407d
   140003fe5:	mov    QWORD PTR [rdi+0x40],r15
   140003fe9:	lea    rcx,[rdi+0x10]
   140003fed:	call   0x1400069ac
   140003ff2:	mov    r14d,eax
   140003ff5:	test   eax,eax
   140003ff7:	js     0x140003ffd
   140003ff9:	mov    BYTE PTR [rdi+0x38],0x1
   140003ffd:	cmovns r14d,esi
   140004001:	test   r14d,r14d
   140004004:	jne    0x140004027
   140004006:	mov    rax,QWORD PTR [rdi]
   140004009:	mov    rbx,QWORD PTR [rax]
   14000400c:	mov    rcx,rbx
   14000400f:	call   QWORD PTR [rip+0x7403]        # 0x14000b418
   140004015:	mov    r8,r12
   140004018:	mov    rdx,r13
   14000401b:	mov    rcx,rdi
   14000401e:	call   rbx
   140004020:	mov    r14d,eax
   140004023:	test   eax,eax
   140004025:	je     0x14000407d
   140004027:	mov    DWORD PTR [rdi+0x8],0xc0000001
   14000402e:	lea    rax,[rip+0x7d2b]        # 0x14000bd60
   140004035:	mov    QWORD PTR [rdi],rax
   140004038:	mov    r12,QWORD PTR [rdi+0x50]
   14000403c:	test   r12,r12
   14000403f:	je     0x140004057
   140004041:	mov    rdx,QWORD PTR [r12]
   140004045:	mov    rbx,QWORD PTR [rdx+0x10]
   140004049:	mov    rcx,rbx
   14000404c:	call   QWORD PTR [rip+0x73c6]        # 0x14000b418
   140004052:	mov    rcx,r12
   140004055:	call   rbx
   140004057:	lea    rax,[rip+0x7d2a]        # 0x14000bd88
   14000405e:	mov    QWORD PTR [rdi],rax
   140004061:	cmp    BYTE PTR [rdi+0x38],sil
   140004065:	je     0x140004075
   140004067:	mov    BYTE PTR [rdi+0x38],sil
   14000406b:	lea    rcx,[rdi+0x10]
   14000406f:	call   QWORD PTR [rip+0x7083]        # 0x14000b0f8
   140004075:	mov    rcx,rdi
   140004078:	call   0x1400096d4
   14000407d:	mov    eax,r14d
   140004080:	add    rsp,0x30
   140004084:	pop    r15
   140004086:	pop    r14
   140004088:	pop    r13
   14000408a:	pop    r12
   14000408c:	pop    rdi
   14000408d:	pop    rsi
   14000408e:	pop    rbx
   14000408f:	ret    
   140004090:	int3   
   140004091:	int3   
   140004092:	int3   
   140004093:	int3   
   140004094:	int3   
   140004095:	int3   
   140004096:	int3   
   140004097:	int3   
   140004098:	int3   
   140004099:	int3   
   14000409a:	int3   
   14000409b:	int3   
   14000409c:	int3   
   14000409d:	int3   
   14000409e:	int3   
   14000409f:	int3   
   1400040a0:	test   rcx,rcx
   1400040a3:	je     0x140004718
   1400040a9:	test   r8,r8
   1400040ac:	jne    0x1400040b5
   1400040ae:	mov    eax,0x80004003
   1400040b3:	jmp    0x1400040be
   1400040b5:	and    QWORD PTR [r8],0x0
   1400040b9:	mov    eax,0x80040110
   1400040be:	ret    
   1400040bf:	int3   
   1400040c0:	int3   
   1400040c1:	int3   
   1400040c2:	int3   
   1400040c3:	int3   
   1400040c4:	int3   
   1400040c5:	int3   
   1400040c6:	int3   
   1400040c7:	int3   
   1400040c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400040cd:	push   rbp
   1400040ce:	push   rsi
   1400040cf:	push   rdi
   1400040d0:	push   r14
   1400040d2:	push   r15
   1400040d4:	mov    rbp,rsp
   1400040d7:	sub    rsp,0x50
   1400040db:	mov    rax,QWORD PTR [rip+0xaf3e]        # 0x14000f020
   1400040e2:	xor    rax,rsp
   1400040e5:	mov    QWORD PTR [rbp-0x8],rax
   1400040e9:	xor    r15d,r15d
   1400040ec:	mov    r14,r8
   1400040ef:	mov    DWORD PTR [r8],r15d
   1400040f2:	mov    rbx,rdx
   1400040f5:	mov    eax,DWORD PTR [rip+0x817d]        # 0x14000c278
   1400040fb:	test   rdx,rdx
   1400040fe:	mov    DWORD PTR [rbp-0x10],eax
   140004101:	movzx  eax,WORD PTR [rip+0x8174]        # 0x14000c27c
   140004108:	mov    WORD PTR [rbp-0xc],ax
   14000410c:	je     0x1400041c3
   140004112:	cmp    WORD PTR [rbx],r15w
   140004116:	je     0x1400041c3
   14000411c:	lea    rax,[rbp-0x10]
   140004120:	movzx  ecx,WORD PTR [rax]
   140004123:	test   cx,cx
   140004126:	je     0x14000413f
   140004128:	cmp    WORD PTR [rbx],cx
   14000412b:	je     0x1400041b5
   140004131:	mov    rcx,rax
   140004134:	call   QWORD PTR [rip+0x7106]        # 0x14000b240
   14000413a:	test   rax,rax
   14000413d:	jne    0x140004120
   14000413f:	mov    rcx,rbx
   140004142:	call   QWORD PTR [rip+0x70f8]        # 0x14000b240
   140004148:	mov    rbx,rax
   14000414b:	test   rax,rax
   14000414e:	jmp    0x14000410c
   140004150:	lea    rdx,[rip+0x8129]        # 0x14000c280
   140004157:	mov    rcx,rbx
   14000415a:	call   0x140005c70
   14000415f:	test   eax,eax
   140004161:	je     0x1400042d2
   140004167:	lea    rdx,[rip+0x812a]        # 0x14000c298
   14000416e:	mov    rcx,rbx
   140004171:	call   0x140005c70
   140004176:	test   eax,eax
   140004178:	je     0x1400041ed
   14000417a:	test   rbx,rbx
   14000417d:	je     0x1400041c3
   14000417f:	cmp    WORD PTR [rbx],r15w
   140004183:	je     0x1400041c3
   140004185:	lea    rax,[rbp-0x10]
   140004189:	movzx  ecx,WORD PTR [rax]
   14000418c:	test   cx,cx
   14000418f:	je     0x1400041a4
   140004191:	cmp    WORD PTR [rbx],cx
   140004194:	je     0x1400041b5
   140004196:	mov    rcx,rax
   140004199:	call   QWORD PTR [rip+0x70a1]        # 0x14000b240
   14000419f:	test   rax,rax
   1400041a2:	jne    0x140004189
   1400041a4:	mov    rcx,rbx
   1400041a7:	call   QWORD PTR [rip+0x7093]        # 0x14000b240
   1400041ad:	mov    rbx,rax
   1400041b0:	test   rax,rax
   1400041b3:	jmp    0x14000417d
   1400041b5:	mov    rcx,rbx
   1400041b8:	call   QWORD PTR [rip+0x7082]        # 0x14000b240
   1400041be:	mov    rbx,rax
   1400041c1:	jmp    0x1400041c6
   1400041c3:	mov    rbx,r15
   1400041c6:	test   rbx,rbx
   1400041c9:	jne    0x140004150
   1400041cb:	mov    al,0x1
   1400041cd:	mov    rcx,QWORD PTR [rbp-0x8]
   1400041d1:	xor    rcx,rsp
   1400041d4:	call   0x140009bc0
   1400041d9:	mov    rbx,QWORD PTR [rsp+0x80]
   1400041e1:	add    rsp,0x50
   1400041e5:	pop    r15
   1400041e7:	pop    r14
   1400041e9:	pop    rdi
   1400041ea:	pop    rsi
   1400041eb:	pop    rbp
   1400041ec:	ret    
   1400041ed:	mov    edx,0x64
   1400041f2:	lea    rax,[rip+0x867f]        # 0x14000c878
   1400041f9:	mov    QWORD PTR [rbp-0x30],rax
   1400041fd:	lea    r9,[rbp-0x30]
   140004201:	lea    rax,[rip+0x7c38]        # 0x14000be40
   140004208:	xorps  xmm0,xmm0
   14000420b:	mov    QWORD PTR [rbp-0x28],rax
   14000420f:	lea    r8d,[rdx-0x63]
   140004213:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140004218:	call   0x140008b04
   14000421d:	mov    DWORD PTR [r14],eax
   140004220:	test   eax,eax
   140004222:	js     0x14000432a
   140004228:	mov    rdi,QWORD PTR [rip+0xb731]        # 0x14000f960
   14000422f:	mov    eax,r15d
   140004232:	mov    rcx,QWORD PTR [rip+0xb72f]        # 0x14000f968
   140004239:	cmp    rdi,rcx
   14000423c:	jae    0x1400042a2
   14000423e:	mov    rsi,QWORD PTR [rdi]
   140004241:	test   rsi,rsi
   140004244:	je     0x140004291
   140004246:	mov    rbx,QWORD PTR [rsi+0x8]
   14000424a:	mov    rcx,rbx
   14000424d:	call   QWORD PTR [rip+0x71c5]        # 0x14000b418
   140004253:	mov    ecx,0x1
   140004258:	call   rbx
   14000425a:	test   eax,eax
   14000425c:	js     0x140004327
   140004262:	mov    rbx,QWORD PTR [rsi+0x38]
   140004266:	mov    rcx,rbx
   140004269:	call   QWORD PTR [rip+0x71a9]        # 0x14000b418
   14000426f:	call   rbx
   140004271:	mov    rcx,QWORD PTR [rsi]
   140004274:	mov    rdx,rax
   140004277:	mov    r8d,0x1
   14000427d:	call   0x140005340
   140004282:	test   eax,eax
   140004284:	js     0x140004327
   14000428a:	mov    rcx,QWORD PTR [rip+0xb6d7]        # 0x14000f968
   140004291:	add    rdi,0x8
   140004295:	cmp    rdi,rcx
   140004298:	jb     0x14000423e
   14000429a:	test   eax,eax
   14000429c:	js     0x140004327
   1400042a2:	mov    rcx,QWORD PTR [rip+0xb6af]        # 0x14000f958
   1400042a9:	call   0x140005a64
   1400042ae:	test   eax,eax
   1400042b0:	js     0x140004327
   1400042b2:	mov    rbx,QWORD PTR [rip+0xb537]        # 0x14000f7f0
   1400042b9:	test   rbx,rbx
   1400042bc:	je     0x140004327
   1400042be:	mov    rcx,rbx
   1400042c1:	call   QWORD PTR [rip+0x7151]        # 0x14000b418
   1400042c7:	mov    rcx,QWORD PTR [rip+0xb5da]        # 0x14000f8a8
   1400042ce:	call   rbx
   1400042d0:	jmp    0x140004327
   1400042d2:	mov    rbx,QWORD PTR [rip+0xb51f]        # 0x14000f7f8
   1400042d9:	test   rbx,rbx
   1400042dc:	je     0x1400042ed
   1400042de:	mov    rcx,rbx
   1400042e1:	call   QWORD PTR [rip+0x7131]        # 0x14000b418
   1400042e7:	call   rbx
   1400042e9:	test   eax,eax
   1400042eb:	js     0x1400042f2
   1400042ed:	call   0x1400051e4
   1400042f2:	mov    DWORD PTR [r14],eax
   1400042f5:	test   eax,eax
   1400042f7:	js     0x14000432a
   1400042f9:	xor    r8d,r8d
   1400042fc:	lea    rax,[rip+0x8575]        # 0x14000c878
   140004303:	mov    QWORD PTR [rbp-0x30],rax
   140004307:	lea    r9,[rbp-0x30]
   14000430b:	lea    rax,[rip+0x7b2e]        # 0x14000be40
   140004312:	xorps  xmm0,xmm0
   140004315:	mov    QWORD PTR [rbp-0x28],rax
   140004319:	lea    edx,[r8+0x64]
   14000431d:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140004322:	call   0x140008b04
   140004327:	mov    DWORD PTR [r14],eax
   14000432a:	xor    al,al
   14000432c:	jmp    0x1400041cd
   140004331:	int3   
   140004332:	int3   
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	mov    QWORD PTR [rsp+0x18],rbx
   14000433d:	mov    DWORD PTR [rsp+0x10],edx
   140004341:	mov    QWORD PTR [rsp+0x8],rcx
   140004346:	push   rsi
   140004347:	push   rdi
   140004348:	push   r14
   14000434a:	sub    rsp,0x60
   14000434e:	mov    rsi,QWORD PTR [rip+0xb60b]        # 0x14000f960
   140004355:	mov    edi,0x1
   14000435a:	jmp    0x1400043f1
   14000435f:	test   edi,edi
   140004361:	js     0x140004400
   140004367:	mov    rbx,QWORD PTR [rsi]
   14000436a:	test   rbx,rbx
   14000436d:	je     0x1400043ed
   14000436f:	and    QWORD PTR [rsp+0x80],0x0
   140004378:	mov    rdi,QWORD PTR [rbx+0x10]
   14000437c:	test   rdi,rdi
   14000437f:	je     0x1400043ed
   140004381:	mov    rcx,rdi
   140004384:	call   QWORD PTR [rip+0x708e]        # 0x14000b418
   14000438a:	mov    rcx,QWORD PTR [rbx+0x18]
   14000438e:	lea    r8,[rsp+0x80]
   140004396:	lea    rdx,[rip+0x84fb]        # 0x14000c898
   14000439d:	call   rdi
   14000439f:	mov    edi,eax
   1400043a1:	test   eax,eax
   1400043a3:	js     0x1400043cb
   1400043a5:	mov    rdx,QWORD PTR [rsp+0x80]
   1400043ad:	lea    rax,[rbx+0x28]
   1400043b1:	mov    rcx,QWORD PTR [rbx]
   1400043b4:	mov    r9d,0x1
   1400043ba:	mov    QWORD PTR [rsp+0x20],rax
   1400043bf:	lea    r8d,[r9+0x3]
   1400043c3:	call   QWORD PTR [rip+0x6fff]        # 0x14000b3c8
   1400043c9:	mov    edi,eax
   1400043cb:	mov    r14,QWORD PTR [rsp+0x80]
   1400043d3:	test   r14,r14
   1400043d6:	je     0x1400043ed
   1400043d8:	mov    rax,QWORD PTR [r14]
   1400043db:	mov    rbx,QWORD PTR [rax+0x10]
   1400043df:	mov    rcx,rbx
   1400043e2:	call   QWORD PTR [rip+0x7030]        # 0x14000b418
   1400043e8:	mov    rcx,r14
   1400043eb:	call   rbx
   1400043ed:	add    rsi,0x8
   1400043f1:	cmp    rsi,QWORD PTR [rip+0xb570]        # 0x14000f968
   1400043f8:	jb     0x14000435f
   1400043fe:	test   edi,edi
   140004400:	jne    0x14000446a
   140004402:	cmp    BYTE PTR [rip+0xb487],0x0        # 0x14000f890
   140004409:	je     0x140004471
   14000440b:	xor    r9d,r9d
   14000440e:	xor    r8d,r8d
   140004411:	xor    edx,edx
   140004413:	xor    ecx,ecx
   140004415:	call   QWORD PTR [rip+0x6c6d]        # 0x14000b088
   14000441b:	mov    QWORD PTR [rip+0xb45e],rax        # 0x14000f880
   140004422:	test   rax,rax
   140004425:	je     0x140004463
   140004427:	lea    rax,[rsp+0x88]
   14000442f:	xor    edx,edx
   140004431:	mov    QWORD PTR [rsp+0x28],rax
   140004436:	lea    r9,[rip+0xb3f3]        # 0x14000f830
   14000443d:	and    DWORD PTR [rsp+0x20],0x0
   140004442:	lea    r8,[rip+0x787]        # 0x140004bd0
   140004449:	xor    ecx,ecx
   14000444b:	call   QWORD PTR [rip+0x6c2f]        # 0x14000b080
   140004451:	test   rax,rax
   140004454:	jne    0x140004471
   140004456:	mov    rcx,QWORD PTR [rip+0xb423]        # 0x14000f880
   14000445d:	call   QWORD PTR [rip+0x6c5d]        # 0x14000b0c0
   140004463:	mov    edi,0x80004005
   140004468:	jmp    0x140004471
   14000446a:	mov    BYTE PTR [rip+0xb41f],0x0        # 0x14000f890
   140004471:	test   edi,edi
   140004473:	jne    0x1400044bb
   140004475:	xor    r9d,r9d
   140004478:	lea    rcx,[rsp+0x30]
   14000447d:	xor    r8d,r8d
   140004480:	xor    edx,edx
   140004482:	call   QWORD PTR [rip+0x6dc8]        # 0x14000b250
   140004488:	test   eax,eax
   14000448a:	jle    0x1400044bd
   14000448c:	lea    rcx,[rsp+0x30]
   140004491:	call   QWORD PTR [rip+0x6dc1]        # 0x14000b258
   140004497:	lea    rcx,[rsp+0x30]
   14000449c:	call   QWORD PTR [rip+0x6dc6]        # 0x14000b268
   1400044a2:	xor    r9d,r9d
   1400044a5:	lea    rcx,[rsp+0x30]
   1400044aa:	xor    r8d,r8d
   1400044ad:	xor    edx,edx
   1400044af:	call   QWORD PTR [rip+0x6d9b]        # 0x14000b250
   1400044b5:	test   eax,eax
   1400044b7:	jg     0x14000448c
   1400044b9:	test   edi,edi
   1400044bb:	js     0x140004505
   1400044bd:	mov    rbx,QWORD PTR [rip+0xb49c]        # 0x14000f960
   1400044c4:	xor    edi,edi
   1400044c6:	jmp    0x1400044e7
   1400044c8:	test   edi,edi
   1400044ca:	jne    0x1400044f0
   1400044cc:	mov    rax,QWORD PTR [rbx]
   1400044cf:	test   rax,rax
   1400044d2:	je     0x1400044e3
   1400044d4:	mov    ecx,DWORD PTR [rax+0x28]
   1400044d7:	test   ecx,ecx
   1400044d9:	je     0x1400044e3
   1400044db:	call   QWORD PTR [rip+0x6eff]        # 0x14000b3e0
   1400044e1:	mov    edi,eax
   1400044e3:	add    rbx,0x8
   1400044e7:	cmp    rbx,QWORD PTR [rip+0xb47a]        # 0x14000f968
   1400044ee:	jb     0x1400044c8
   1400044f0:	cmp    BYTE PTR [rip+0xb399],0x0        # 0x14000f890
   1400044f7:	je     0x140004505
   1400044f9:	mov    ecx,DWORD PTR [rip+0xb38d]        # 0x14000f88c
   1400044ff:	call   QWORD PTR [rip+0x6b8b]        # 0x14000b090
   140004505:	mov    eax,edi
   140004507:	mov    rbx,QWORD PTR [rsp+0x90]
   14000450f:	add    rsp,0x60
   140004513:	pop    r14
   140004515:	pop    rdi
   140004516:	pop    rsi
   140004517:	ret    
   140004518:	int3   
   140004519:	int3   
   14000451a:	int3   
   14000451b:	int3   
   14000451c:	int3   
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	mov    eax,0x1
   140004525:	lock xadd DWORD PTR [rcx+0x8],eax
   14000452a:	inc    eax
   14000452c:	ret    
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	int3   
   140004531:	int3   
   140004532:	int3   
   140004533:	int3   
   140004534:	int3   
   140004535:	int3   
   140004536:	int3   
   140004537:	int3   
   140004538:	int3   
   140004539:	int3   
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	mov    QWORD PTR [rsp+0x8],rbx
   140004545:	mov    QWORD PTR [rsp+0x10],rsi
   14000454a:	mov    QWORD PTR [rsp+0x18],rdi
   14000454f:	push   r14
   140004551:	sub    rsp,0x20
   140004555:	mov    rdi,rcx
   140004558:	or     esi,0xffffffff
   14000455b:	lock xadd DWORD PTR [rcx+0x8],esi
   140004560:	sub    esi,0x1
   140004563:	jne    0x1400045bf
   140004565:	test   rcx,rcx
   140004568:	je     0x1400045bf
   14000456a:	lea    rax,[rip+0x77ef]        # 0x14000bd60
   140004571:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140004578:	mov    QWORD PTR [rcx],rax
   14000457b:	mov    r14,QWORD PTR [rcx+0x50]
   14000457f:	test   r14,r14
   140004582:	je     0x140004599
   140004584:	mov    rax,QWORD PTR [r14]
   140004587:	mov    rbx,QWORD PTR [rax+0x10]
   14000458b:	mov    rcx,rbx
   14000458e:	call   QWORD PTR [rip+0x6e84]        # 0x14000b418
   140004594:	mov    rcx,r14
   140004597:	call   rbx
   140004599:	lea    rax,[rip+0x77e8]        # 0x14000bd88
   1400045a0:	lea    rcx,[rdi+0x10]
   1400045a4:	mov    QWORD PTR [rdi],rax
   1400045a7:	cmp    BYTE PTR [rcx+0x28],0x0
   1400045ab:	je     0x1400045b7
   1400045ad:	mov    BYTE PTR [rcx+0x28],0x0
   1400045b1:	call   QWORD PTR [rip+0x6b41]        # 0x14000b0f8
   1400045b7:	mov    rcx,rdi
   1400045ba:	call   0x1400096d4
   1400045bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045c4:	mov    eax,esi
   1400045c6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400045cb:	mov    rdi,QWORD PTR [rsp+0x40]
   1400045d0:	add    rsp,0x20
   1400045d4:	pop    r14
   1400045d6:	ret    
   1400045d7:	int3   
   1400045d8:	int3   
   1400045d9:	int3   
   1400045da:	int3   
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	mov    r9,r8
   1400045e3:	mov    r8,rdx
   1400045e6:	lea    rdx,[rip+0x7d93]        # 0x14000c380
   1400045ed:	jmp    0x1400069d4
   1400045f2:	int3   
   1400045f3:	int3   
   1400045f4:	int3   
   1400045f5:	int3   
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	int3   
   1400045f9:	int3   
   1400045fa:	int3   
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	mov    QWORD PTR [rsp+0x10],rbx
   140004605:	mov    QWORD PTR [rsp+0x18],rsi
   14000460a:	mov    QWORD PTR [rsp+0x8],rcx
   14000460f:	push   rdi
   140004610:	push   r12
   140004612:	push   r13
   140004614:	push   r14
   140004616:	push   r15
   140004618:	sub    rsp,0x20
   14000461c:	mov    r14,r9
   14000461f:	mov    r13,r8
   140004622:	mov    rdi,rcx
   140004625:	mov    eax,0x80004003
   14000462a:	test   r9,r9
   14000462d:	je     0x1400046fa
   140004633:	and    QWORD PTR [r9],0x0
   140004637:	test   rdx,rdx
   14000463a:	je     0x140004646
   14000463c:	mov    eax,0x80040110
   140004641:	jmp    0x1400046fa
   140004646:	cmp    DWORD PTR [rcx+0x48],0x0
   14000464a:	jne    0x1400046d5
   140004650:	lea    rsi,[rcx+0x50]
   140004654:	cmp    QWORD PTR [rsi],0x0
   140004658:	jne    0x1400046d5
   14000465a:	add    rcx,0x10
   14000465e:	call   QWORD PTR [rip+0x6a8c]        # 0x14000b0f0
   140004664:	cmp    DWORD PTR [rdi+0x48],0x0
   140004668:	jne    0x1400046cb
   14000466a:	cmp    QWORD PTR [rsi],0x0
   14000466e:	jne    0x1400046cb
   140004670:	lea    rcx,[rsp+0x68]
   140004675:	call   0x140004c34
   14000467a:	mov    DWORD PTR [rdi+0x48],eax
   14000467d:	test   eax,eax
   14000467f:	js     0x1400046cb
   140004681:	mov    r12,QWORD PTR [rsp+0x68]
   140004686:	mov    rax,QWORD PTR [r12]
   14000468a:	mov    rbx,QWORD PTR [rax]
   14000468d:	mov    rcx,rbx
   140004690:	call   QWORD PTR [rip+0x6d82]        # 0x14000b418
   140004696:	mov    r8,rsi
   140004699:	lea    rdx,[rip+0x8278]        # 0x14000c918
   1400046a0:	mov    rcx,r12
   1400046a3:	call   rbx
   1400046a5:	mov    DWORD PTR [rdi+0x48],eax
   1400046a8:	test   eax,eax
   1400046aa:	jns    0x1400046cb
   1400046ac:	mov    rax,QWORD PTR [r12]
   1400046b0:	mov    rbx,QWORD PTR [rax+0x80]
   1400046b7:	mov    rcx,rbx
   1400046ba:	call   QWORD PTR [rip+0x6d58]        # 0x14000b418
   1400046c0:	mov    edx,0x1
   1400046c5:	mov    rcx,r12
   1400046c8:	call   rbx
   1400046ca:	nop
   1400046cb:	lea    rcx,[rdi+0x10]
   1400046cf:	call   QWORD PTR [rip+0x6a13]        # 0x14000b0e8
   1400046d5:	mov    eax,DWORD PTR [rdi+0x48]
   1400046d8:	test   eax,eax
   1400046da:	jne    0x1400046fa
   1400046dc:	mov    rdi,QWORD PTR [rdi+0x50]
   1400046e0:	mov    rax,QWORD PTR [rdi]
   1400046e3:	mov    rbx,QWORD PTR [rax]
   1400046e6:	mov    rcx,rbx
   1400046e9:	call   QWORD PTR [rip+0x6d29]        # 0x14000b418
   1400046ef:	mov    r8,r14
   1400046f2:	mov    rdx,r13
   1400046f5:	mov    rcx,rdi
   1400046f8:	call   rbx
   1400046fa:	mov    rbx,QWORD PTR [rsp+0x58]
   1400046ff:	mov    rsi,QWORD PTR [rsp+0x60]
   140004704:	add    rsp,0x20
   140004708:	pop    r15
   14000470a:	pop    r14
   14000470c:	pop    r13
   14000470e:	pop    r12
   140004710:	pop    rdi
   140004711:	ret    
   140004712:	int3   
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	mov    rax,rsp
   14000471b:	mov    QWORD PTR [rax+0x18],r8
   14000471f:	mov    QWORD PTR [rax+0x10],rdx
   140004723:	mov    QWORD PTR [rax+0x8],rcx
   140004727:	push   rbx
   140004728:	push   rsi
   140004729:	push   rdi
   14000472a:	push   r12
   14000472c:	push   r13
   14000472e:	push   r14
   140004730:	push   r15
   140004732:	sub    rsp,0x30
   140004736:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000473e:	mov    r12,r8
   140004741:	mov    r13,rdx
   140004744:	xor    r14d,r14d
   140004747:	test   r8,r8
   14000474a:	jne    0x140004756
   14000474c:	mov    eax,0x80004003
   140004751:	jmp    0x14000489e
   140004756:	mov    QWORD PTR [r8],r14
   140004759:	mov    r15d,0x8007000e
   14000475f:	mov    DWORD PTR [rsp+0x70],r15d
   140004764:	mov    QWORD PTR [rsp+0x88],r14
   14000476c:	mov    ecx,0x88
   140004771:	call   0x140009654
   140004776:	mov    rsi,rax
   140004779:	mov    QWORD PTR [rsp+0x28],rax
   14000477e:	test   rax,rax
   140004781:	je     0x1400047fb
   140004783:	mov    DWORD PTR [rax+0x20],r14d
   140004787:	mov    edi,0x28
   14000478c:	mov    r8d,edi
   14000478f:	xor    edx,edx
   140004791:	lea    rcx,[rax+0x28]
   140004795:	call   0x14000a15c
   14000479a:	mov    BYTE PTR [rsi+0x50],r14b
   14000479e:	mov    QWORD PTR [rsi+0x58],r14
   1400047a2:	lea    rcx,[rsi+0x60]
   1400047a6:	mov    r8d,edi
   1400047a9:	xor    edx,edx
   1400047ab:	call   0x14000a15c
   1400047b0:	nop
   1400047b1:	lea    rax,[rip+0x72d8]        # 0x14000ba90
   1400047b8:	mov    QWORD PTR [rsi],rax
   1400047bb:	lea    rax,[rip+0x7246]        # 0x14000ba08
   1400047c2:	mov    QWORD PTR [rsi+0x8],rax
   1400047c6:	lea    rax,[rip+0x71a3]        # 0x14000b970
   1400047cd:	mov    QWORD PTR [rsi+0x10],rax
   1400047d1:	lea    rax,[rip+0x70f8]        # 0x14000b8d0
   1400047d8:	mov    QWORD PTR [rsi+0x18],rax
   1400047dc:	mov    rdi,QWORD PTR [rip+0xb005]        # 0x14000f7e8
   1400047e3:	mov    rax,QWORD PTR [rdi]
   1400047e6:	mov    rbx,QWORD PTR [rax+0x8]
   1400047ea:	mov    rcx,rbx
   1400047ed:	call   QWORD PTR [rip+0x6c25]        # 0x14000b418
   1400047f3:	mov    rcx,rdi
   1400047f6:	call   rbx
   1400047f8:	nop
   1400047f9:	jmp    0x1400047fe
   1400047fb:	mov    rsi,r14
   1400047fe:	mov    QWORD PTR [rsp+0x88],rsi
   140004806:	jmp    0x140004825
   140004808:	xor    r14d,r14d
   14000480b:	mov    r12,QWORD PTR [rsp+0x80]
   140004813:	mov    r13,QWORD PTR [rsp+0x78]
   140004818:	mov    r15d,DWORD PTR [rsp+0x70]
   14000481d:	mov    rsi,QWORD PTR [rsp+0x88]
   140004825:	test   rsi,rsi
   140004828:	je     0x14000489b
   14000482a:	lock inc DWORD PTR [rsi+0x20]
   14000482e:	lea    rcx,[rsi+0x28]
   140004832:	call   0x1400069ac
   140004837:	mov    r15d,eax
   14000483a:	test   eax,eax
   14000483c:	js     0x140004854
   14000483e:	mov    BYTE PTR [rsi+0x50],0x1
   140004842:	lea    rcx,[rsi+0x60]
   140004846:	call   0x1400069ac
   14000484b:	mov    r15d,eax
   14000484e:	test   eax,eax
   140004850:	cmovns r15d,r14d
   140004854:	lock dec DWORD PTR [rsi+0x20]
   140004858:	test   r15d,r15d
   14000485b:	jne    0x14000487e
   14000485d:	mov    rax,QWORD PTR [rsi]
   140004860:	mov    rbx,QWORD PTR [rax]
   140004863:	mov    rcx,rbx
   140004866:	call   QWORD PTR [rip+0x6bac]        # 0x14000b418
   14000486c:	mov    r8,r12
   14000486f:	mov    rdx,r13
   140004872:	mov    rcx,rsi
   140004875:	call   rbx
   140004877:	mov    r15d,eax
   14000487a:	test   eax,eax
   14000487c:	je     0x14000489b
   14000487e:	mov    r8,QWORD PTR [rsi]
   140004881:	mov    rbx,QWORD PTR [r8+0x80]
   140004888:	mov    rcx,rbx
   14000488b:	call   QWORD PTR [rip+0x6b87]        # 0x14000b418
   140004891:	mov    edx,0x1
   140004896:	mov    rcx,rsi
   140004899:	call   rbx
   14000489b:	mov    eax,r15d
   14000489e:	add    rsp,0x30
   1400048a2:	pop    r15
   1400048a4:	pop    r14
   1400048a6:	pop    r13
   1400048a8:	pop    r12
   1400048aa:	pop    rdi
   1400048ab:	pop    rsi
   1400048ac:	pop    rbx
   1400048ad:	ret    
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	int3   
   1400048b1:	int3   
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400048ca:	push   rdi
   1400048cb:	sub    rsp,0x20
   1400048cf:	mov    esi,0x1
   1400048d4:	lock xadd DWORD PTR [rcx+0x20],esi
   1400048d9:	inc    esi
   1400048db:	cmp    esi,0x2
   1400048de:	jne    0x1400048fc
   1400048e0:	mov    rdi,QWORD PTR [rip+0xaf01]        # 0x14000f7e8
   1400048e7:	mov    rdx,QWORD PTR [rdi]
   1400048ea:	mov    rbx,QWORD PTR [rdx+0x8]
   1400048ee:	mov    rcx,rbx
   1400048f1:	call   QWORD PTR [rip+0x6b21]        # 0x14000b418
   1400048f7:	mov    rcx,rdi
   1400048fa:	call   rbx
   1400048fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140004901:	mov    eax,esi
   140004903:	mov    rsi,QWORD PTR [rsp+0x38]
   140004908:	add    rsp,0x20
   14000490c:	pop    rdi
   14000490d:	ret    
   14000490e:	int3   
   14000490f:	int3   
   140004910:	int3   
   140004911:	int3   
   140004912:	int3   
   140004913:	int3   
   140004914:	int3   
   140004915:	int3   
   140004916:	int3   
   140004917:	int3   
   140004918:	int3   
   140004919:	int3   
   14000491a:	int3   
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	mov    QWORD PTR [rsp+0x8],rbx
   140004925:	mov    QWORD PTR [rsp+0x10],rsi
   14000492a:	push   rdi
   14000492b:	sub    rsp,0x20
   14000492f:	mov    rdi,rcx
   140004932:	or     esi,0xffffffff
   140004935:	lock xadd DWORD PTR [rcx+0x20],esi
   14000493a:	sub    esi,0x1
   14000493d:	jne    0x140004961
   14000493f:	test   rcx,rcx
   140004942:	je     0x140004982
   140004944:	mov    rax,QWORD PTR [rcx]
   140004947:	mov    rbx,QWORD PTR [rax+0x80]
   14000494e:	mov    rcx,rbx
   140004951:	call   QWORD PTR [rip+0x6ac1]        # 0x14000b418
   140004957:	lea    edx,[rsi+0x1]
   14000495a:	mov    rcx,rdi
   14000495d:	call   rbx
   14000495f:	jmp    0x140004982
   140004961:	cmp    esi,0x1
   140004964:	jne    0x140004982
   140004966:	mov    rdi,QWORD PTR [rip+0xae7b]        # 0x14000f7e8
   14000496d:	mov    rdx,QWORD PTR [rdi]
   140004970:	mov    rbx,QWORD PTR [rdx+0x10]
   140004974:	mov    rcx,rbx
   140004977:	call   QWORD PTR [rip+0x6a9b]        # 0x14000b418
   14000497d:	mov    rcx,rdi
   140004980:	call   rbx
   140004982:	mov    rbx,QWORD PTR [rsp+0x30]
   140004987:	mov    eax,esi
   140004989:	mov    rsi,QWORD PTR [rsp+0x38]
   14000498e:	add    rsp,0x20
   140004992:	pop    rdi
   140004993:	ret    
   140004994:	int3   
   140004995:	int3   
   140004996:	int3   
   140004997:	int3   
   140004998:	int3   
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	mov    r9,r8
   1400049a3:	mov    r8,rdx
   1400049a6:	lea    rdx,[rip+0x7ad3]        # 0x14000c480
   1400049ad:	jmp    0x1400069d4
   1400049b2:	int3   
   1400049b3:	int3   
   1400049b4:	int3   
   1400049b5:	int3   
   1400049b6:	int3   
   1400049b7:	int3   
   1400049b8:	mov    rax,rsp
   1400049bb:	mov    QWORD PTR [rax+0x8],rcx
   1400049bf:	push   rdi
   1400049c0:	sub    rsp,0x30
   1400049c4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400049cc:	mov    QWORD PTR [rax+0x10],rbx
   1400049d0:	mov    QWORD PTR [rax+0x18],rsi
   1400049d4:	mov    rsi,rcx
   1400049d7:	lea    rax,[rip+0x70b2]        # 0x14000ba90
   1400049de:	mov    QWORD PTR [rcx],rax
   1400049e1:	lea    rax,[rip+0x7020]        # 0x14000ba08
   1400049e8:	mov    QWORD PTR [rcx+0x8],rax
   1400049ec:	lea    rax,[rip+0x6f7d]        # 0x14000b970
   1400049f3:	mov    QWORD PTR [rcx+0x10],rax
   1400049f7:	lea    rax,[rip+0x6ed2]        # 0x14000b8d0
   1400049fe:	mov    QWORD PTR [rcx+0x18],rax
   140004a02:	mov    DWORD PTR [rcx+0x20],0xc0000001
   140004a09:	add    rcx,0x60
   140004a0d:	call   QWORD PTR [rip+0x66e5]        # 0x14000b0f8
   140004a13:	mov    rdi,QWORD PTR [rip+0xadce]        # 0x14000f7e8
   140004a1a:	mov    rax,QWORD PTR [rdi]
   140004a1d:	mov    rbx,QWORD PTR [rax+0x10]
   140004a21:	mov    rcx,rbx
   140004a24:	call   QWORD PTR [rip+0x69ee]        # 0x14000b418
   140004a2a:	mov    rcx,rdi
   140004a2d:	call   rbx
   140004a2f:	nop
   140004a30:	mov    rcx,rsi
   140004a33:	mov    rbx,QWORD PTR [rsp+0x48]
   140004a38:	mov    rsi,QWORD PTR [rsp+0x50]
   140004a3d:	add    rsp,0x30
   140004a41:	pop    rdi
   140004a42:	jmp    0x14000171c
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    eax,0x1
   140004a55:	lock xadd DWORD PTR [rcx+0x20],eax
   140004a5a:	inc    eax
   140004a5c:	ret    
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	int3   
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	int3   
   140004a65:	int3   
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	mov    QWORD PTR [rsp+0x8],rbx
   140004a75:	mov    QWORD PTR [rsp+0x10],rsi
   140004a7a:	mov    QWORD PTR [rsp+0x18],rdi
   140004a7f:	push   r14
   140004a81:	sub    rsp,0x20
   140004a85:	mov    r14,rcx
   140004a88:	or     esi,0xffffffff
   140004a8b:	lock xadd DWORD PTR [rcx+0x20],esi
   140004a90:	sub    esi,0x1
   140004a93:	jne    0x140004aed
   140004a95:	mov    rdi,QWORD PTR [rip+0xad4c]        # 0x14000f7e8
   140004a9c:	mov    rax,QWORD PTR [rdi]
   140004a9f:	mov    rbx,QWORD PTR [rax+0x8]
   140004aa3:	mov    rcx,rbx
   140004aa6:	call   QWORD PTR [rip+0x696c]        # 0x14000b418
   140004aac:	mov    rcx,rdi
   140004aaf:	call   rbx
   140004ab1:	test   r14,r14
   140004ab4:	je     0x140004ad1
   140004ab6:	mov    rax,QWORD PTR [r14]
   140004ab9:	mov    rbx,QWORD PTR [rax+0x80]
   140004ac0:	mov    rcx,rbx
   140004ac3:	call   QWORD PTR [rip+0x694f]        # 0x14000b418
   140004ac9:	lea    edx,[rsi+0x1]
   140004acc:	mov    rcx,r14
   140004acf:	call   rbx
   140004ad1:	mov    rdi,QWORD PTR [rip+0xad10]        # 0x14000f7e8
   140004ad8:	mov    rdx,QWORD PTR [rdi]
   140004adb:	mov    rbx,QWORD PTR [rdx+0x10]
   140004adf:	mov    rcx,rbx
   140004ae2:	call   QWORD PTR [rip+0x6930]        # 0x14000b418
   140004ae8:	mov    rcx,rdi
   140004aeb:	call   rbx
   140004aed:	mov    rbx,QWORD PTR [rsp+0x30]
   140004af2:	mov    eax,esi
   140004af4:	mov    rsi,QWORD PTR [rsp+0x38]
   140004af9:	mov    rdi,QWORD PTR [rsp+0x40]
   140004afe:	add    rsp,0x20
   140004b02:	pop    r14
   140004b04:	ret    
   140004b05:	int3   
   140004b06:	int3   
   140004b07:	int3   
   140004b08:	int3   
   140004b09:	int3   
   140004b0a:	int3   
   140004b0b:	int3   
   140004b0c:	int3   
   140004b0d:	int3   
   140004b0e:	int3   
   140004b0f:	int3   
   140004b10:	mov    QWORD PTR [rsp+0x8],rbx
   140004b15:	push   rdi
   140004b16:	sub    rsp,0x20
   140004b1a:	lea    rax,[rip+0x71b7]        # 0x14000bcd8
   140004b21:	mov    DWORD PTR [rcx+0x20],0xc0000001
   140004b28:	mov    QWORD PTR [rcx],rax
   140004b2b:	mov    rdi,rcx
   140004b2e:	lea    rax,[rip+0x711b]        # 0x14000bc50
   140004b35:	mov    ebx,edx
   140004b37:	mov    QWORD PTR [rcx+0x8],rax
   140004b3b:	lea    rax,[rip+0x7076]        # 0x14000bbb8
   140004b42:	mov    QWORD PTR [rcx+0x10],rax
   140004b46:	lea    rax,[rip+0x6fcb]        # 0x14000bb18
   140004b4d:	mov    QWORD PTR [rcx+0x18],rax
   140004b51:	add    rcx,0x60
   140004b55:	call   QWORD PTR [rip+0x659d]        # 0x14000b0f8
   140004b5b:	mov    rcx,rdi
   140004b5e:	call   0x14000171c
   140004b63:	test   bl,0x1
   140004b66:	je     0x140004b70
   140004b68:	mov    rcx,rdi
   140004b6b:	call   0x1400096d4
   140004b70:	mov    rax,rdi
   140004b73:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b78:	add    rsp,0x20
   140004b7c:	pop    rdi
   140004b7d:	ret    
   140004b7e:	int3   
   140004b7f:	int3   
   140004b80:	int3   
   140004b81:	int3   
   140004b82:	int3   
   140004b83:	int3   
   140004b84:	int3   
   140004b85:	int3   
   140004b86:	int3   
   140004b87:	int3   
   140004b88:	int3   
   140004b89:	int3   
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	mov    QWORD PTR [rsp+0x8],rbx
   140004b95:	push   rdi
   140004b96:	sub    rsp,0x20
   140004b9a:	mov    ebx,edx
   140004b9c:	mov    rdi,rcx
   140004b9f:	call   0x1400049b8
   140004ba4:	test   bl,0x1
   140004ba7:	je     0x140004bb1
   140004ba9:	mov    rcx,rdi
   140004bac:	call   0x1400096d4
   140004bb1:	mov    rax,rdi
   140004bb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bb9:	add    rsp,0x20
   140004bbd:	pop    rdi
   140004bbe:	ret    
   140004bbf:	int3   
   140004bc0:	int3   
   140004bc1:	int3   
   140004bc2:	int3   
   140004bc3:	int3   
   140004bc4:	int3   
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	rex push rbx
   140004bd2:	sub    rsp,0x20
   140004bd6:	mov    rbx,rcx
   140004bd9:	mov    rcx,QWORD PTR [rbx+0x50]
   140004bdd:	or     edx,0xffffffff
   140004be0:	call   QWORD PTR [rip+0x6492]        # 0x14000b078
   140004be6:	mov    edx,DWORD PTR [rbx+0x58]
   140004be9:	mov    rcx,QWORD PTR [rbx+0x50]
   140004bed:	mov    BYTE PTR [rbx+0x61],0x0
   140004bf1:	call   QWORD PTR [rip+0x6481]        # 0x14000b078
   140004bf7:	test   eax,eax
   140004bf9:	je     0x140004be6
   140004bfb:	cmp    BYTE PTR [rbx+0x61],0x0
   140004bff:	jne    0x140004bd9
   140004c01:	cmp    DWORD PTR [rbx+0xc],0x0
   140004c05:	jne    0x140004bd9
   140004c07:	mov    rcx,QWORD PTR [rbx+0x50]
   140004c0b:	call   QWORD PTR [rip+0x64af]        # 0x14000b0c0
   140004c11:	mov    ecx,DWORD PTR [rbx+0x48]
   140004c14:	xor    r9d,r9d
   140004c17:	xor    r8d,r8d
   140004c1a:	lea    edx,[r9+0x12]
   140004c1e:	call   QWORD PTR [rip+0x660c]        # 0x14000b230
   140004c24:	xor    eax,eax
   140004c26:	add    rsp,0x20
   140004c2a:	pop    rbx
   140004c2b:	ret    
   140004c2c:	int3   
   140004c2d:	int3   
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	int3   
   140004c31:	int3   
   140004c32:	int3   
   140004c33:	int3   
   140004c34:	mov    QWORD PTR [rsp+0x8],rcx
   140004c39:	push   rbx
   140004c3a:	push   rsi
   140004c3b:	push   rdi
   140004c3c:	push   r14
   140004c3e:	push   r15
   140004c40:	sub    rsp,0x30
   140004c44:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004c4d:	mov    r15,rcx
   140004c50:	xor    esi,esi
   140004c52:	test   rcx,rcx
   140004c55:	jne    0x140004c61
   140004c57:	mov    eax,0x80004003
   140004c5c:	jmp    0x140004d55
   140004c61:	mov    QWORD PTR [rcx],rsi
   140004c64:	mov    r14d,0x8007000e
   140004c6a:	mov    DWORD PTR [rsp+0x68],r14d
   140004c6f:	mov    QWORD PTR [rsp+0x70],rsi
   140004c74:	mov    ecx,0x88
   140004c79:	call   0x140009654
   140004c7e:	mov    rdi,rax
   140004c81:	test   rax,rax
   140004c84:	je     0x140004cdc
   140004c86:	mov    DWORD PTR [rax+0x20],esi
   140004c89:	xor    edx,edx
   140004c8b:	lea    r8d,[rdx+0x28]
   140004c8f:	lea    rcx,[rax+0x28]
   140004c93:	call   0x14000a15c
   140004c98:	mov    BYTE PTR [rdi+0x50],sil
   140004c9c:	mov    QWORD PTR [rdi+0x58],rsi
   140004ca0:	lea    rcx,[rdi+0x60]
   140004ca4:	xor    edx,edx
   140004ca6:	lea    r8d,[rdx+0x28]
   140004caa:	call   0x14000a15c
   140004caf:	lea    rax,[rip+0x7022]        # 0x14000bcd8
   140004cb6:	mov    QWORD PTR [rdi],rax
   140004cb9:	lea    rax,[rip+0x6f90]        # 0x14000bc50
   140004cc0:	mov    QWORD PTR [rdi+0x8],rax
   140004cc4:	lea    rax,[rip+0x6eed]        # 0x14000bbb8
   140004ccb:	mov    QWORD PTR [rdi+0x10],rax
   140004ccf:	lea    rax,[rip+0x6e42]        # 0x14000bb18
   140004cd6:	mov    QWORD PTR [rdi+0x18],rax
   140004cda:	jmp    0x140004cdf
   140004cdc:	mov    rdi,rsi
   140004cdf:	mov    QWORD PTR [rsp+0x70],rdi
   140004ce4:	jmp    0x140004cf7
   140004ce6:	xor    esi,esi
   140004ce8:	mov    r15,QWORD PTR [rsp+0x60]
   140004ced:	mov    r14d,DWORD PTR [rsp+0x68]
   140004cf2:	mov    rdi,QWORD PTR [rsp+0x70]
   140004cf7:	test   rdi,rdi
   140004cfa:	je     0x140004d4f
   140004cfc:	lock inc DWORD PTR [rdi+0x20]
   140004d00:	lea    rcx,[rdi+0x28]
   140004d04:	call   0x1400069ac
   140004d09:	mov    r14d,eax
   140004d0c:	test   eax,eax
   140004d0e:	js     0x140004d26
   140004d10:	mov    BYTE PTR [rdi+0x50],0x1
   140004d14:	lea    rcx,[rdi+0x60]
   140004d18:	call   0x1400069ac
   140004d1d:	mov    r14d,eax
   140004d20:	test   eax,eax
   140004d22:	cmovns r14d,esi
   140004d26:	lock dec DWORD PTR [rdi+0x20]
   140004d2a:	test   r14d,r14d
   140004d2d:	je     0x140004d4f
   140004d2f:	mov    r8,QWORD PTR [rdi]
   140004d32:	mov    rbx,QWORD PTR [r8+0x80]
   140004d39:	mov    rcx,rbx
   140004d3c:	call   QWORD PTR [rip+0x66d6]        # 0x14000b418
   140004d42:	mov    edx,0x1
   140004d47:	mov    rcx,rdi
   140004d4a:	call   rbx
   140004d4c:	mov    rdi,rsi
   140004d4f:	mov    QWORD PTR [r15],rdi
   140004d52:	mov    eax,r14d
   140004d55:	add    rsp,0x30
   140004d59:	pop    r15
   140004d5b:	pop    r14
   140004d5d:	pop    rdi
   140004d5e:	pop    rsi
   140004d5f:	pop    rbx
   140004d60:	ret    
   140004d61:	int3   
   140004d62:	int3   
   140004d63:	int3   
   140004d64:	int3   
   140004d65:	int3   
   140004d66:	int3   
   140004d67:	int3   
   140004d68:	int3   
   140004d69:	int3   
   140004d6a:	int3   
   140004d6b:	int3   
   140004d6c:	int3   
   140004d6d:	int3   
   140004d6e:	int3   
   140004d6f:	int3   
   140004d70:	sub    rcx,0x8
   140004d74:	jmp    0x140002e90
   140004d79:	int3   
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	int3   
   140004d7d:	int3   
   140004d7e:	int3   
   140004d7f:	int3   
   140004d80:	sub    rcx,0x8
   140004d84:	jmp    0x140002cb0
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	int3   
   140004d8d:	int3   
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	sub    rcx,0x10
   140004d94:	jmp    0x140001d40
   140004d99:	int3   
   140004d9a:	int3   
   140004d9b:	int3   
   140004d9c:	int3   
   140004d9d:	int3   
   140004d9e:	int3   
   140004d9f:	int3   
   140004da0:	sub    rcx,0x18
   140004da4:	jmp    0x1400019a0
   140004da9:	int3   
   140004daa:	int3   
   140004dab:	int3   
   140004dac:	int3   
   140004dad:	int3   
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	sub    rcx,0x10
   140004db4:	jmp    0x140002c20
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	sub    rcx,0x10
   140004dc4:	jmp    0x140004920
   140004dc9:	int3   
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	sub    rcx,0x8
   140004dd4:	jmp    0x1400048c0
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	sub    rcx,0x8
   140004de4:	jmp    0x1400049a0
   140004de9:	int3   
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	int3   
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	sub    rcx,0x18
   140004df4:	jmp    0x140004a70
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	sub    rcx,0x10
   140004e04:	jmp    0x140004a50
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	sub    rcx,0x10
   140004e14:	jmp    0x140002a80
   140004e19:	int3   
   140004e1a:	int3   
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	sub    rcx,0x10
   140004e24:	jmp    0x140002610
   140004e29:	int3   
   140004e2a:	int3   
   140004e2b:	int3   
   140004e2c:	int3   
   140004e2d:	int3   
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	sub    rcx,0x8
   140004e34:	jmp    0x140002920
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	sub    rcx,0x8
   140004e44:	jmp    0x1400027c0
   140004e49:	int3   
   140004e4a:	int3   
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	sub    rcx,0x10
   140004e54:	jmp    0x140002e90
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	sub    rcx,0x10
   140004e64:	jmp    0x140002cb0
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	sub    rcx,0x8
   140004e74:	jmp    0x1400021e0
   140004e79:	int3   
   140004e7a:	int3   
   140004e7b:	int3   
   140004e7c:	int3   
   140004e7d:	int3   
   140004e7e:	int3   
   140004e7f:	int3   
   140004e80:	sub    rcx,0x18
   140004e84:	jmp    0x140002c20
   140004e89:	int3   
   140004e8a:	int3   
   140004e8b:	int3   
   140004e8c:	int3   
   140004e8d:	int3   
   140004e8e:	int3   
   140004e8f:	int3   
   140004e90:	sub    rcx,0x18
   140004e94:	jmp    0x140004920
   140004e99:	int3   
   140004e9a:	int3   
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	sub    rcx,0x10
   140004ea4:	jmp    0x1400048c0
   140004ea9:	int3   
   140004eaa:	int3   
   140004eab:	int3   
   140004eac:	int3   
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	sub    rcx,0x10
   140004eb4:	jmp    0x1400049a0
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	sub    rcx,0x8
   140004ec4:	jmp    0x140001840
   140004ec9:	int3   
   140004eca:	int3   
   140004ecb:	int3   
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	sub    rcx,0x18
   140004ed4:	jmp    0x140004a50
   140004ed9:	int3   
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	int3   
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	sub    rcx,0x18
   140004ee4:	jmp    0x140002a80
   140004ee9:	int3   
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	sub    rcx,0x18
   140004ef4:	jmp    0x140002610
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	sub    rcx,0x10
   140004f04:	jmp    0x140002920
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	int3   
   140004f0d:	int3   
   140004f0e:	int3   
   140004f0f:	int3   
   140004f10:	sub    rcx,0x10
   140004f14:	jmp    0x1400027c0
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	sub    rcx,0x8
   140004f24:	jmp    0x1400030f0
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	sub    rcx,0x18
   140004f34:	jmp    0x140002e90
   140004f39:	int3   
   140004f3a:	int3   
   140004f3b:	int3   
   140004f3c:	int3   
   140004f3d:	int3   
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	sub    rcx,0x18
   140004f44:	jmp    0x140002cb0
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	sub    rcx,0x8
   140004f54:	jmp    0x1400019a0
   140004f59:	int3   
   140004f5a:	int3   
   140004f5b:	int3   
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	sub    rcx,0x18
   140004f64:	jmp    0x1400048c0
   140004f69:	int3   
   140004f6a:	int3   
   140004f6b:	int3   
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	sub    rcx,0x18
   140004f74:	jmp    0x1400049a0
   140004f79:	int3   
   140004f7a:	int3   
   140004f7b:	int3   
   140004f7c:	int3   
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	sub    rcx,0x8
   140004f84:	jmp    0x140004a70
   140004f89:	int3   
   140004f8a:	int3   
   140004f8b:	int3   
   140004f8c:	int3   
   140004f8d:	int3   
   140004f8e:	int3   
   140004f8f:	int3   
   140004f90:	sub    rcx,0x10
   140004f94:	jmp    0x140001840
   140004f99:	int3   
   140004f9a:	int3   
   140004f9b:	int3   
   140004f9c:	int3   
   140004f9d:	int3   
   140004f9e:	int3   
   140004f9f:	int3   
   140004fa0:	sub    rcx,0x18
   140004fa4:	jmp    0x140002920
   140004fa9:	int3   
   140004faa:	int3   
   140004fab:	int3   
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	sub    rcx,0x18
   140004fb4:	jmp    0x1400027c0
   140004fb9:	int3   
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	int3   
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	sub    rcx,0x8
   140004fc4:	jmp    0x140001d40
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	sub    rcx,0x10
   140004fd4:	jmp    0x1400019a0
   140004fd9:	int3   
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	sub    rcx,0x8
   140004fe4:	jmp    0x140002c20
   140004fe9:	int3   
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	sub    rcx,0x8
   140004ff4:	jmp    0x140004920
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	sub    rcx,0x10
   140005004:	jmp    0x140004a70
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	sub    rcx,0x8
   140005014:	jmp    0x140004a50
   140005019:	int3   
   14000501a:	int3   
   14000501b:	int3   
   14000501c:	int3   
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	sub    rcx,0x18
   140005024:	jmp    0x140001840
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	sub    rcx,0x8
   140005034:	jmp    0x140002a80
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	sub    rcx,0x8
   140005044:	jmp    0x140002610
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	mov    QWORD PTR [rsp+0x8],rbx
   140005055:	mov    QWORD PTR [rsp+0x10],rsi
   14000505a:	push   rdi
   14000505b:	sub    rsp,0x30
   14000505f:	mov    rbx,rdx
   140005062:	test   rdx,rdx
   140005065:	jne    0x14000506e
   140005067:	mov    eax,0x80004003
   14000506c:	jmp    0x1400050be
   14000506e:	xor    esi,esi
   140005070:	lea    rdi,[rcx+0x40]
   140005074:	cmp    QWORD PTR [rdi],rsi
   140005077:	jne    0x14000509e
   140005079:	lea    r9,[rip+0x7230]        # 0x14000c2b0
   140005080:	mov    QWORD PTR [rsp+0x20],rdi
   140005085:	xor    edx,edx
   140005087:	lea    r8d,[rsi+0x1]
   14000508b:	lea    rcx,[rip+0x67ce]        # 0x14000b860
   140005092:	call   QWORD PTR [rip+0x6350]        # 0x14000b3e8
   140005098:	mov    esi,eax
   14000509a:	test   eax,eax
   14000509c:	js     0x1400050bc
   14000509e:	mov    rcx,QWORD PTR [rdi]
   1400050a1:	mov    QWORD PTR [rbx],rcx
   1400050a4:	mov    rdi,QWORD PTR [rdi]
   1400050a7:	mov    rdx,QWORD PTR [rdi]
   1400050aa:	mov    rbx,QWORD PTR [rdx+0x8]
   1400050ae:	mov    rcx,rbx
   1400050b1:	call   QWORD PTR [rip+0x6361]        # 0x14000b418
   1400050b7:	mov    rcx,rdi
   1400050ba:	call   rbx
   1400050bc:	mov    eax,esi
   1400050be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400050c3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400050c8:	add    rsp,0x30
   1400050cc:	pop    rdi
   1400050cd:	ret    
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	int3   
   1400050d1:	int3   
   1400050d2:	int3   
   1400050d3:	int3   
   1400050d4:	int3   
   1400050d5:	int3   
   1400050d6:	int3   
   1400050d7:	int3   
   1400050d8:	int3   
   1400050d9:	int3   
   1400050da:	int3   
   1400050db:	int3   
   1400050dc:	int3   
   1400050dd:	int3   
   1400050de:	int3   
   1400050df:	int3   
   1400050e0:	mov    eax,DWORD PTR [rcx+0xc]
   1400050e3:	ret    
   1400050e4:	int3   
   1400050e5:	int3   
   1400050e6:	int3   
   1400050e7:	int3   
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	int3   
   1400050ed:	int3   
   1400050ee:	int3   
   1400050ef:	int3   
   1400050f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400050f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400050fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400050ff:	push   rdi
   140005100:	sub    rsp,0x20
   140005104:	mov    rbp,rdx
   140005107:	mov    rsi,r9
   14000510a:	xor    edx,edx
   14000510c:	mov    rdi,r8
   14000510f:	mov    eax,0x80004003
   140005114:	test   r9,r9
   140005117:	je     0x14000515f
   140005119:	mov    QWORD PTR [r9],rdx
   14000511c:	test   rbp,rbp
   14000511f:	je     0x140005147
   140005121:	cmp    DWORD PTR [r8],edx
   140005124:	jne    0x140005140
   140005126:	cmp    DWORD PTR [r8+0x4],edx
   14000512a:	jne    0x140005140
   14000512c:	cmp    DWORD PTR [r8+0x8],0xc0
   140005134:	jne    0x140005140
   140005136:	cmp    DWORD PTR [r8+0xc],0x46000000
   14000513e:	je     0x140005147
   140005140:	mov    eax,0x80040110
   140005145:	jmp    0x14000515f
   140005147:	mov    rbx,QWORD PTR [rcx+0x40]
   14000514b:	mov    rcx,rbx
   14000514e:	call   QWORD PTR [rip+0x62c4]        # 0x14000b418
   140005154:	mov    r8,rsi
   140005157:	mov    rdx,rdi
   14000515a:	mov    rcx,rbp
   14000515d:	call   rbx
   14000515f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005164:	mov    rbp,QWORD PTR [rsp+0x38]
   140005169:	mov    rsi,QWORD PTR [rsp+0x40]
   14000516e:	add    rsp,0x20
   140005172:	pop    rdi
   140005173:	ret    
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    eax,0x1
   140005185:	lock xadd DWORD PTR [rcx+0xc],eax
   14000518a:	inc    eax
   14000518c:	ret    
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	int3   
   140005191:	int3   
   140005192:	int3   
   140005193:	int3   
   140005194:	int3   
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	int3   
   140005199:	int3   
   14000519a:	int3   
   14000519b:	int3   
   14000519c:	int3   
   14000519d:	int3   
   14000519e:	int3   
   14000519f:	int3   
   1400051a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400051a5:	push   rdi
   1400051a6:	sub    rsp,0x20
   1400051aa:	mov    rdi,QWORD PTR [rip+0xa637]        # 0x14000f7e8
   1400051b1:	mov    rax,QWORD PTR [rdi]
   1400051b4:	test   edx,edx
   1400051b6:	je     0x1400051be
   1400051b8:	mov    rbx,QWORD PTR [rax+0x8]
   1400051bc:	jmp    0x1400051c2
   1400051be:	mov    rbx,QWORD PTR [rax+0x10]
   1400051c2:	mov    rcx,rbx
   1400051c5:	call   QWORD PTR [rip+0x624d]        # 0x14000b418
   1400051cb:	mov    rcx,rdi
   1400051ce:	call   rbx
   1400051d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400051d5:	xor    eax,eax
   1400051d7:	add    rsp,0x20
   1400051db:	pop    rdi
   1400051dc:	ret    
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	int3   
   1400051e1:	int3   
   1400051e2:	int3   
   1400051e3:	int3   
   1400051e4:	mov    QWORD PTR [rsp+0x10],rbx
   1400051e9:	mov    QWORD PTR [rsp+0x18],r8
   1400051ee:	mov    QWORD PTR [rsp+0x8],rcx
   1400051f3:	push   rsi
   1400051f4:	push   rdi
   1400051f5:	push   r14
   1400051f7:	sub    rsp,0x30
   1400051fb:	mov    rdi,QWORD PTR [rip+0xa75e]        # 0x14000f960
   140005202:	xor    esi,esi
   140005204:	mov    rax,QWORD PTR [rip+0xa75d]        # 0x14000f968
   14000520b:	cmp    rdi,rax
   14000520e:	jae    0x140005272
   140005210:	mov    r14,QWORD PTR [rdi]
   140005213:	test   r14,r14
   140005216:	je     0x140005261
   140005218:	mov    rbx,QWORD PTR [r14+0x38]
   14000521c:	mov    rcx,rbx
   14000521f:	call   QWORD PTR [rip+0x61f3]        # 0x14000b418
   140005225:	call   rbx
   140005227:	mov    rcx,QWORD PTR [r14]
   14000522a:	mov    rdx,rax
   14000522d:	xor    r8d,r8d
   140005230:	call   0x140005340
   140005235:	mov    esi,eax
   140005237:	test   eax,eax
   140005239:	js     0x140005329
   14000523f:	mov    rbx,QWORD PTR [r14+0x8]
   140005243:	mov    rcx,rbx
   140005246:	call   QWORD PTR [rip+0x61cc]        # 0x14000b418
   14000524c:	xor    ecx,ecx
   14000524e:	call   rbx
   140005250:	mov    esi,eax
   140005252:	test   eax,eax
   140005254:	js     0x140005329
   14000525a:	mov    rax,QWORD PTR [rip+0xa707]        # 0x14000f968
   140005261:	add    rdi,0x8
   140005265:	cmp    rdi,rax
   140005268:	jb     0x140005210
   14000526a:	test   esi,esi
   14000526c:	js     0x140005329
   140005272:	mov    rcx,QWORD PTR [rip+0xa6df]        # 0x14000f958
   140005279:	lea    r9,[rsp+0x60]
   14000527e:	and    QWORD PTR [rsp+0x68],0x0
   140005284:	lea    r8,[rsp+0x68]
   140005289:	and    QWORD PTR [rsp+0x60],0x0
   14000528f:	call   0x1400058bc
   140005294:	mov    esi,eax
   140005296:	test   eax,eax
   140005298:	js     0x1400052ff
   14000529a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000529f:	mov    rax,QWORD PTR [rbx]
   1400052a2:	mov    rdi,QWORD PTR [rax+0x38]
   1400052a6:	mov    rcx,rdi
   1400052a9:	call   QWORD PTR [rip+0x6169]        # 0x14000b418
   1400052af:	lea    rdx,[rsp+0x50]
   1400052b4:	mov    rcx,rbx
   1400052b7:	call   rdi
   1400052b9:	mov    esi,eax
   1400052bb:	test   eax,eax
   1400052bd:	js     0x1400052ff
   1400052bf:	mov    rcx,QWORD PTR [rsp+0x50]
   1400052c4:	mov    eax,DWORD PTR [rcx+0x14]
   1400052c7:	mov    r9d,DWORD PTR [rcx+0x10]
   1400052cb:	movzx  r8d,WORD PTR [rcx+0x1a]
   1400052d0:	movzx  edx,WORD PTR [rcx+0x18]
   1400052d4:	mov    DWORD PTR [rsp+0x20],eax
   1400052d8:	call   QWORD PTR [rip+0x5f32]        # 0x14000b210
   1400052de:	mov    rbx,QWORD PTR [rsp+0x60]
   1400052e3:	mov    esi,eax
   1400052e5:	mov    rax,QWORD PTR [rbx]
   1400052e8:	mov    rdi,QWORD PTR [rax+0x60]
   1400052ec:	mov    rcx,rdi
   1400052ef:	call   QWORD PTR [rip+0x6123]        # 0x14000b418
   1400052f5:	mov    rdx,QWORD PTR [rsp+0x50]
   1400052fa:	mov    rcx,rbx
   1400052fd:	call   rdi
   1400052ff:	mov    rbx,QWORD PTR [rsp+0x60]
   140005304:	test   rbx,rbx
   140005307:	je     0x14000531e
   140005309:	mov    rax,QWORD PTR [rbx]
   14000530c:	mov    rdi,QWORD PTR [rax+0x10]
   140005310:	mov    rcx,rdi
   140005313:	call   QWORD PTR [rip+0x60ff]        # 0x14000b418
   140005319:	mov    rcx,rbx
   14000531c:	call   rdi
   14000531e:	mov    rcx,QWORD PTR [rsp+0x68]
   140005323:	call   QWORD PTR [rip+0x5ea7]        # 0x14000b1d0
   140005329:	mov    eax,esi
   14000532b:	mov    rbx,QWORD PTR [rsp+0x58]
   140005330:	add    rsp,0x30
   140005334:	pop    r14
   140005336:	pop    rdi
   140005337:	pop    rsi
   140005338:	ret    
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x18],rbx
   140005345:	push   rbp
   140005346:	push   rsi
   140005347:	push   rdi
   140005348:	push   r12
   14000534a:	push   r13
   14000534c:	push   r14
   14000534e:	push   r15
   140005350:	lea    rbp,[rsp-0x140]
   140005358:	sub    rsp,0x240
   14000535f:	mov    rax,QWORD PTR [rip+0x9cba]        # 0x14000f020
   140005366:	xor    rax,rsp
   140005369:	mov    QWORD PTR [rbp+0x130],rax
   140005370:	xor    r13d,r13d
   140005373:	mov    r12d,r8d
   140005376:	mov    ebx,r13d
   140005379:	mov    rsi,rdx
   14000537c:	mov    QWORD PTR [rsp+0x68],rbx
   140005381:	mov    r14,rcx
   140005384:	test   rdx,rdx
   140005387:	je     0x1400057a4
   14000538d:	cmp    DWORD PTR [rcx],r13d
   140005390:	jne    0x1400053b7
   140005392:	mov    eax,DWORD PTR [rip+0x7574]        # 0x14000c90c
   140005398:	cmp    DWORD PTR [rcx+0x4],eax
   14000539b:	jne    0x1400053b7
   14000539d:	mov    eax,DWORD PTR [rip+0x756d]        # 0x14000c910
   1400053a3:	cmp    DWORD PTR [rcx+0x8],eax
   1400053a6:	jne    0x1400053b7
   1400053a8:	mov    eax,DWORD PTR [rip+0x7566]        # 0x14000c914
   1400053ae:	cmp    DWORD PTR [rcx+0xc],eax
   1400053b1:	je     0x1400057a4
   1400053b7:	lea    rax,[rsp+0x68]
   1400053bc:	mov    r15d,0x1
   1400053c2:	mov    r8d,r15d
   1400053c5:	mov    QWORD PTR [rsp+0x20],rax
   1400053ca:	lea    r9,[rip+0x6f0f]        # 0x14000c2e0
   1400053d1:	xor    edx,edx
   1400053d3:	lea    rcx,[rip+0x757e]        # 0x14000c958
   1400053da:	call   QWORD PTR [rip+0x6008]        # 0x14000b3e8
   1400053e0:	test   eax,eax
   1400053e2:	js     0x14000579f
   1400053e8:	cmp    DWORD PTR [rsi],r13d
   1400053eb:	je     0x14000547a
   1400053f1:	mov    rax,QWORD PTR [rsi+0x8]
   1400053f5:	mov    rbx,QWORD PTR [rsp+0x68]
   1400053fa:	movups xmm0,XMMWORD PTR [rax]
   1400053fd:	movdqu XMMWORD PTR [rbp-0x68],xmm0
   140005402:	mov    rax,QWORD PTR [rbx]
   140005405:	test   r12d,r12d
   140005408:	je     0x140005440
   14000540a:	cmp    DWORD PTR [rsi],r15d
   14000540d:	jne    0x140005415
   14000540f:	mov    rdi,QWORD PTR [rax+0x28]
   140005413:	jmp    0x140005419
   140005415:	mov    rdi,QWORD PTR [rax+0x38]
   140005419:	mov    rcx,rdi
   14000541c:	call   QWORD PTR [rip+0x5ff6]        # 0x14000b418
   140005422:	lea    r9,[rbp-0x68]
   140005426:	mov    r8d,r15d
   140005429:	mov    rdx,r14
   14000542c:	mov    rcx,rbx
   14000542f:	call   rdi
   140005431:	mov    r15d,eax
   140005434:	test   eax,eax
   140005436:	js     0x140005470
   140005438:	mov    r15d,0x1
   14000543e:	jmp    0x140005467
   140005440:	cmp    DWORD PTR [rsi],r15d
   140005443:	jne    0x14000544b
   140005445:	mov    rdi,QWORD PTR [rax+0x30]
   140005449:	jmp    0x14000544f
   14000544b:	mov    rdi,QWORD PTR [rax+0x40]
   14000544f:	mov    rcx,rdi
   140005452:	call   QWORD PTR [rip+0x5fc0]        # 0x14000b418
   140005458:	lea    r9,[rbp-0x68]
   14000545c:	mov    r8d,r15d
   14000545f:	mov    rdx,r14
   140005462:	mov    rcx,rbx
   140005465:	call   rdi
   140005467:	add    rsi,0x10
   14000546b:	jmp    0x1400053e8
   140005470:	mov    rbx,QWORD PTR [rsp+0x68]
   140005475:	jmp    0x1400057a7
   14000547a:	test   r12d,r12d
   14000547d:	jne    0x14000579f
   140005483:	lea    r8d,[r12+0x40]
   140005488:	mov    rcx,r14
   14000548b:	lea    rdx,[rbp+0xb0]
   140005492:	call   QWORD PTR [rip+0x5f38]        # 0x14000b3d0
   140005498:	mov    ebx,0x80
   14000549d:	lea    r8,[rip+0x6e7c]        # 0x14000c320
   1400054a4:	mov    edx,ebx
   1400054a6:	lea    rcx,[rbp-0x50]
   1400054aa:	call   QWORD PTR [rip+0x5ec8]        # 0x14000b378
   1400054b0:	lea    r14d,[r12+0xc]
   1400054b5:	lea    r12d,[rbx-0x6a]
   1400054b9:	lea    r15d,[rbx-0x30]
   1400054bd:	test   eax,eax
   1400054bf:	je     0x1400054e5
   1400054c1:	cmp    eax,r14d
   1400054c4:	je     0x140005804
   1400054ca:	cmp    eax,r12d
   1400054cd:	je     0x1400057f9
   1400054d3:	cmp    eax,0x22
   1400054d6:	je     0x1400057f9
   1400054dc:	cmp    eax,r15d
   1400054df:	jne    0x1400057ee
   1400054e5:	lea    r8,[rbp+0xb0]
   1400054ec:	mov    rdx,rbx
   1400054ef:	lea    rcx,[rbp-0x50]
   1400054f3:	call   QWORD PTR [rip+0x5e77]        # 0x14000b370
   1400054f9:	test   eax,eax
   1400054fb:	je     0x140005521
   1400054fd:	cmp    eax,r14d
   140005500:	je     0x140005825
   140005506:	cmp    eax,r12d
   140005509:	je     0x14000581a
   14000550f:	cmp    eax,0x22
   140005512:	je     0x14000581a
   140005518:	cmp    eax,r15d
   14000551b:	jne    0x14000580f
   140005521:	lea    r8,[rip+0x6dc8]        # 0x14000c2f0
   140005528:	mov    rdx,rbx
   14000552b:	lea    rcx,[rbp-0x50]
   14000552f:	call   QWORD PTR [rip+0x5e3b]        # 0x14000b370
   140005535:	test   eax,eax
   140005537:	je     0x14000555d
   140005539:	cmp    eax,r14d
   14000553c:	je     0x140005846
   140005542:	cmp    eax,r12d
   140005545:	je     0x14000583b
   14000554b:	cmp    eax,0x22
   14000554e:	je     0x14000583b
   140005554:	cmp    eax,r15d
   140005557:	jne    0x140005830
   14000555d:	mov    rdi,0xffffffff80000000
   140005564:	mov    QWORD PTR [rbp-0x78],r13
   140005568:	lea    rax,[rsp+0x78]
   14000556d:	mov    QWORD PTR [rbp-0x80],rdi
   140005571:	mov    rcx,rdi
   140005574:	mov    QWORD PTR [rbp-0x70],r13
   140005578:	mov    r9d,0x20019
   14000557e:	mov    DWORD PTR [rsp+0x60],r13d
   140005583:	xor    r8d,r8d
   140005586:	mov    QWORD PTR [rsp+0x78],r13
   14000558b:	lea    rdx,[rbp-0x50]
   14000558f:	mov    QWORD PTR [rsp+0x20],rax
   140005594:	mov    rbx,r13
   140005597:	call   QWORD PTR [rip+0x5a7b]        # 0x14000b018
   14000559d:	test   eax,eax
   14000559f:	jne    0x140005615
   1400055a1:	mov    rbx,QWORD PTR [rsp+0x78]
   1400055a6:	lea    rax,[rsp+0x60]
   1400055ab:	mov    QWORD PTR [rsp+0x58],r13
   1400055b0:	xor    r9d,r9d
   1400055b3:	mov    QWORD PTR [rsp+0x50],r13
   1400055b8:	xor    r8d,r8d
   1400055bb:	mov    QWORD PTR [rsp+0x48],r13
   1400055c0:	xor    edx,edx
   1400055c2:	mov    QWORD PTR [rsp+0x40],r13
   1400055c7:	mov    rcx,rbx
   1400055ca:	mov    QWORD PTR [rsp+0x38],r13
   1400055cf:	mov    QWORD PTR [rsp+0x30],r13
   1400055d4:	mov    QWORD PTR [rsp+0x28],r13
   1400055d9:	mov    QWORD PTR [rsp+0x20],rax
   1400055de:	call   QWORD PTR [rip+0x5a24]        # 0x14000b008
   1400055e4:	movsxd rsi,eax
   1400055e7:	test   rbx,rbx
   1400055ea:	je     0x1400055f8
   1400055ec:	mov    rcx,rbx
   1400055ef:	call   QWORD PTR [rip+0x5a0b]        # 0x14000b000
   1400055f5:	mov    rbx,r13
   1400055f8:	test   rsi,rsi
   1400055fb:	jne    0x140005615
   1400055fd:	cmp    DWORD PTR [rsp+0x60],r13d
   140005602:	jne    0x140005615
   140005604:	lea    rdx,[rbp-0x50]
   140005608:	lea    rcx,[rbp-0x80]
   14000560c:	call   0x140007d08
   140005611:	mov    rdi,QWORD PTR [rbp-0x80]
   140005615:	mov    esi,0x80
   14000561a:	lea    r8,[rip+0x6cff]        # 0x14000c320
   140005621:	mov    edx,esi
   140005623:	lea    rcx,[rbp-0x50]
   140005627:	call   QWORD PTR [rip+0x5d4b]        # 0x14000b378
   14000562d:	test   eax,eax
   14000562f:	je     0x140005655
   140005631:	cmp    eax,r14d
   140005634:	je     0x140005867
   14000563a:	cmp    eax,r12d
   14000563d:	je     0x14000585c
   140005643:	cmp    eax,0x22
   140005646:	je     0x14000585c
   14000564c:	cmp    eax,r15d
   14000564f:	jne    0x140005851
   140005655:	lea    r8,[rbp+0xb0]
   14000565c:	mov    rdx,rsi
   14000565f:	lea    rcx,[rbp-0x50]
   140005663:	call   QWORD PTR [rip+0x5d07]        # 0x14000b370
   140005669:	test   eax,eax
   14000566b:	je     0x140005691
   14000566d:	cmp    eax,r14d
   140005670:	je     0x140005888
   140005676:	cmp    eax,r12d
   140005679:	je     0x14000587d
   14000567f:	cmp    eax,0x22
   140005682:	je     0x14000587d
   140005688:	cmp    eax,r15d
   14000568b:	jne    0x140005872
   140005691:	lea    r8,[rip+0x6c98]        # 0x14000c330
   140005698:	mov    rdx,rsi
   14000569b:	lea    rcx,[rbp-0x50]
   14000569f:	call   QWORD PTR [rip+0x5ccb]        # 0x14000b370
   1400056a5:	test   eax,eax
   1400056a7:	je     0x1400056cd
   1400056a9:	cmp    eax,r14d
   1400056ac:	je     0x1400058a9
   1400056b2:	cmp    eax,r12d
   1400056b5:	je     0x14000589e
   1400056bb:	cmp    eax,0x22
   1400056be:	je     0x14000589e
   1400056c4:	cmp    eax,r15d
   1400056c7:	jne    0x140005893
   1400056cd:	lea    rax,[rsp+0x70]
   1400056d2:	mov    QWORD PTR [rsp+0x70],r13
   1400056d7:	mov    r9d,0x20019
   1400056dd:	mov    QWORD PTR [rsp+0x20],rax
   1400056e2:	xor    r8d,r8d
   1400056e5:	lea    rdx,[rbp-0x50]
   1400056e9:	mov    rcx,rdi
   1400056ec:	call   QWORD PTR [rip+0x5926]        # 0x14000b018
   1400056f2:	test   eax,eax
   1400056f4:	jne    0x140005783
   1400056fa:	mov    eax,r13d
   1400056fd:	test   rbx,rbx
   140005700:	je     0x14000570b
   140005702:	mov    rcx,rbx
   140005705:	call   QWORD PTR [rip+0x58f5]        # 0x14000b000
   14000570b:	mov    rbx,QWORD PTR [rsp+0x70]
   140005710:	test   eax,eax
   140005712:	jne    0x140005783
   140005714:	mov    QWORD PTR [rsp+0x58],r13
   140005719:	lea    rax,[rsp+0x60]
   14000571e:	mov    QWORD PTR [rsp+0x50],r13
   140005723:	xor    r9d,r9d
   140005726:	mov    QWORD PTR [rsp+0x48],r13
   14000572b:	xor    r8d,r8d
   14000572e:	mov    QWORD PTR [rsp+0x40],r13
   140005733:	xor    edx,edx
   140005735:	mov    QWORD PTR [rsp+0x38],r13
   14000573a:	mov    rcx,rbx
   14000573d:	mov    QWORD PTR [rsp+0x30],r13
   140005742:	mov    QWORD PTR [rsp+0x28],r13
   140005747:	mov    QWORD PTR [rsp+0x20],rax
   14000574c:	call   QWORD PTR [rip+0x58b6]        # 0x14000b008
   140005752:	movsxd rsi,eax
   140005755:	test   rbx,rbx
   140005758:	je     0x140005766
   14000575a:	mov    rcx,rbx
   14000575d:	call   QWORD PTR [rip+0x589d]        # 0x14000b000
   140005763:	mov    rbx,r13
   140005766:	test   rsi,rsi
   140005769:	jne    0x140005783
   14000576b:	cmp    DWORD PTR [rsp+0x60],r13d
   140005770:	jne    0x140005783
   140005772:	lea    rdx,[rbp-0x50]
   140005776:	lea    rcx,[rbp-0x80]
   14000577a:	call   0x140007d08
   14000577f:	mov    rdi,QWORD PTR [rbp-0x80]
   140005783:	test   rbx,rbx
   140005786:	je     0x140005791
   140005788:	mov    rcx,rbx
   14000578b:	call   QWORD PTR [rip+0x586f]        # 0x14000b000
   140005791:	test   rdi,rdi
   140005794:	je     0x14000579f
   140005796:	mov    rcx,rdi
   140005799:	call   QWORD PTR [rip+0x5861]        # 0x14000b000
   14000579f:	mov    rbx,QWORD PTR [rsp+0x68]
   1400057a4:	mov    r15d,r13d
   1400057a7:	test   rbx,rbx
   1400057aa:	je     0x1400057c1
   1400057ac:	mov    rcx,QWORD PTR [rbx]
   1400057af:	mov    rdi,QWORD PTR [rcx+0x10]
   1400057b3:	mov    rcx,rdi
   1400057b6:	call   QWORD PTR [rip+0x5c5c]        # 0x14000b418
   1400057bc:	mov    rcx,rbx
   1400057bf:	call   rdi
   1400057c1:	mov    eax,r15d
   1400057c4:	mov    rcx,QWORD PTR [rbp+0x130]
   1400057cb:	xor    rcx,rsp
   1400057ce:	call   0x140009bc0
   1400057d3:	mov    rbx,QWORD PTR [rsp+0x290]
   1400057db:	add    rsp,0x240
   1400057e2:	pop    r15
   1400057e4:	pop    r14
   1400057e6:	pop    r13
   1400057e8:	pop    r12
   1400057ea:	pop    rdi
   1400057eb:	pop    rsi
   1400057ec:	pop    rbp
   1400057ed:	ret    
   1400057ee:	mov    ecx,0x80004005
   1400057f3:	call   0x140008de4
   1400057f8:	int3   
   1400057f9:	mov    ecx,0x80070057
   1400057fe:	call   0x140008de4
   140005803:	int3   
   140005804:	mov    ecx,0x8007000e
   140005809:	call   0x140008de4
   14000580e:	int3   
   14000580f:	mov    ecx,0x80004005
   140005814:	call   0x140008de4
   140005819:	int3   
   14000581a:	mov    ecx,0x80070057
   14000581f:	call   0x140008de4
   140005824:	int3   
   140005825:	mov    ecx,0x8007000e
   14000582a:	call   0x140008de4
   14000582f:	int3   
   140005830:	mov    ecx,0x80004005
   140005835:	call   0x140008de4
   14000583a:	int3   
   14000583b:	mov    ecx,0x80070057
   140005840:	call   0x140008de4
   140005845:	int3   
   140005846:	mov    ecx,0x8007000e
   14000584b:	call   0x140008de4
   140005850:	int3   
   140005851:	mov    ecx,0x80004005
   140005856:	call   0x140008de4
   14000585b:	int3   
   14000585c:	mov    ecx,0x80070057
   140005861:	call   0x140008de4
   140005866:	int3   
   140005867:	mov    ecx,0x8007000e
   14000586c:	call   0x140008de4
   140005871:	int3   
   140005872:	mov    ecx,0x80004005
   140005877:	call   0x140008de4
   14000587c:	int3   
   14000587d:	mov    ecx,0x80070057
   140005882:	call   0x140008de4
   140005887:	int3   
   140005888:	mov    ecx,0x8007000e
   14000588d:	call   0x140008de4
   140005892:	int3   
   140005893:	mov    ecx,0x80004005
   140005898:	call   0x140008de4
   14000589d:	int3   
   14000589e:	mov    ecx,0x80070057
   1400058a3:	call   0x140008de4
   1400058a8:	int3   
   1400058a9:	mov    ecx,0x8007000e
   1400058ae:	call   0x140008de4
   1400058b3:	int3   
   1400058b4:	int3   
   1400058b5:	int3   
   1400058b6:	int3   
   1400058b7:	int3   
   1400058b8:	int3   
   1400058b9:	int3   
   1400058ba:	int3   
   1400058bb:	int3   
   1400058bc:	rex push rbx
   1400058be:	push   rbp
   1400058bf:	push   rsi
   1400058c0:	push   rdi
   1400058c1:	push   r14
   1400058c3:	sub    rsp,0x260
   1400058ca:	mov    rax,QWORD PTR [rip+0x974f]        # 0x14000f020
   1400058d1:	xor    rax,rsp
   1400058d4:	mov    QWORD PTR [rsp+0x250],rax
   1400058dc:	xor    ebp,ebp
   1400058de:	mov    rsi,r9
   1400058e1:	mov    r14,r8
   1400058e4:	test   r8,r8
   1400058e7:	je     0x140005a18
   1400058ed:	test   r9,r9
   1400058f0:	je     0x140005a18
   1400058f6:	mov    QWORD PTR [r8],rbp
   1400058f9:	lea    rdx,[rsp+0x30]
   1400058fe:	mov    r8d,0x104
   140005904:	mov    QWORD PTR [r9],rbp
   140005907:	call   QWORD PTR [rip+0x57f3]        # 0x14000b100
   14000590d:	test   eax,eax
   14000590f:	jne    0x14000591d
   140005911:	call   0x1400070b8
   140005916:	mov    ebx,eax
   140005918:	jmp    0x140005a14
   14000591d:	cmp    eax,0x104
   140005922:	jne    0x14000592e
   140005924:	mov    ebx,0x8007007a
   140005929:	jmp    0x140005a14
   14000592e:	movzx  eax,WORD PTR [rsp+0x30]
   140005933:	lea    rcx,[rsp+0x30]
   140005938:	mov    rdi,rbp
   14000593b:	jmp    0x14000595e
   14000593d:	movzx  edx,ax
   140005940:	cmp    edx,0x2e
   140005943:	je     0x14000594f
   140005945:	cmp    edx,0x5c
   140005948:	jne    0x140005952
   14000594a:	mov    rdi,rbp
   14000594d:	jmp    0x140005952
   14000594f:	mov    rdi,rcx
   140005952:	call   QWORD PTR [rip+0x58e8]        # 0x14000b240
   140005958:	mov    rcx,rax
   14000595b:	movzx  eax,WORD PTR [rax]
   14000595e:	test   ax,ax
   140005961:	jne    0x14000593d
   140005963:	test   rdi,rdi
   140005966:	mov    rdx,rsi
   140005969:	cmove  rdi,rcx
   14000596d:	lea    rcx,[rsp+0x30]
   140005972:	call   QWORD PTR [rip+0x5880]        # 0x14000b1f8
   140005978:	mov    ebx,eax
   14000597a:	test   eax,eax
   14000597c:	jns    0x1400059fb
   14000597e:	movzx  eax,WORD PTR [rip+0x69e3]        # 0x14000c368
   140005985:	mov    rcx,rdi
   140005988:	movsd  xmm0,QWORD PTR [rip+0x69d0]        # 0x14000c360
   140005990:	mov    WORD PTR [rsp+0x28],ax
   140005995:	lea    rax,[rsp+0x30]
   14000599a:	sub    rcx,rax
   14000599d:	movsd  QWORD PTR [rsp+0x20],xmm0
   1400059a3:	sar    rcx,1
   1400059a6:	lea    rax,[rcx+0x5]
   1400059aa:	cmp    rax,0x104
   1400059b0:	jbe    0x1400059b9
   1400059b2:	mov    ebx,0x80004005
   1400059b7:	jmp    0x140005a14
   1400059b9:	mov    edx,0x10e
   1400059be:	lea    r8,[rsp+0x20]
   1400059c3:	sub    rdx,rcx
   1400059c6:	mov    rcx,rdi
   1400059c9:	call   QWORD PTR [rip+0x59a9]        # 0x14000b378
   1400059cf:	test   eax,eax
   1400059d1:	je     0x1400059e7
   1400059d3:	cmp    eax,0xc
   1400059d6:	je     0x140005a51
   1400059d8:	cmp    eax,0x16
   1400059db:	je     0x140005a46
   1400059dd:	cmp    eax,0x22
   1400059e0:	je     0x140005a46
   1400059e2:	cmp    eax,0x50
   1400059e5:	jne    0x140005a3b
   1400059e7:	mov    rdx,rsi
   1400059ea:	lea    rcx,[rsp+0x30]
   1400059ef:	call   QWORD PTR [rip+0x5803]        # 0x14000b1f8
   1400059f5:	mov    ebx,eax
   1400059f7:	test   eax,eax
   1400059f9:	js     0x140005a14
   1400059fb:	lea    rcx,[rsp+0x30]
   140005a00:	call   QWORD PTR [rip+0x5802]        # 0x14000b208
   140005a06:	test   rax,rax
   140005a09:	mov    QWORD PTR [r14],rax
   140005a0c:	mov    ecx,0x8007000e
   140005a11:	cmove  ebx,ecx
   140005a14:	mov    eax,ebx
   140005a16:	jmp    0x140005a1d
   140005a18:	mov    eax,0x80004003
   140005a1d:	mov    rcx,QWORD PTR [rsp+0x250]
   140005a25:	xor    rcx,rsp
   140005a28:	call   0x140009bc0
   140005a2d:	add    rsp,0x260
   140005a34:	pop    r14
   140005a36:	pop    rdi
   140005a37:	pop    rsi
   140005a38:	pop    rbp
   140005a39:	pop    rbx
   140005a3a:	ret    
   140005a3b:	mov    ecx,0x80004005
   140005a40:	call   0x140008de4
   140005a45:	int3   
   140005a46:	mov    ecx,0x80070057
   140005a4b:	call   0x140008de4
   140005a50:	int3   
   140005a51:	mov    ecx,0x8007000e
   140005a56:	call   0x140008de4
   140005a5b:	int3   
   140005a5c:	int3   
   140005a5d:	int3   
   140005a5e:	int3   
   140005a5f:	int3   
   140005a60:	int3   
   140005a61:	int3   
   140005a62:	int3   
   140005a63:	int3   
   140005a64:	mov    QWORD PTR [rsp+0x10],rbx
   140005a69:	mov    QWORD PTR [rsp+0x18],rsi
   140005a6e:	push   rbp
   140005a6f:	push   r14
   140005a71:	push   r15
   140005a73:	lea    rbp,[rsp-0x170]
   140005a7b:	sub    rsp,0x270
   140005a82:	mov    rax,QWORD PTR [rip+0x9597]        # 0x14000f020
   140005a89:	xor    rax,rsp
   140005a8c:	mov    QWORD PTR [rbp+0x160],rax
   140005a93:	xor    r15d,r15d
   140005a96:	lea    r9,[rsp+0x38]
   140005a9b:	lea    r8,[rsp+0x30]
   140005aa0:	mov    QWORD PTR [rsp+0x30],r15
   140005aa5:	mov    QWORD PTR [rsp+0x38],r15
   140005aaa:	call   0x1400058bc
   140005aaf:	mov    r14d,eax
   140005ab2:	test   eax,eax
   140005ab4:	js     0x140005bee
   140005aba:	mov    rbx,QWORD PTR [rsp+0x38]
   140005abf:	mov    QWORD PTR [rsp+0x40],r15
   140005ac4:	mov    rax,QWORD PTR [rbx]
   140005ac7:	mov    rsi,QWORD PTR [rax+0x48]
   140005acb:	mov    rcx,rsi
   140005ace:	call   QWORD PTR [rip+0x5944]        # 0x14000b418
   140005ad4:	lea    rax,[rsp+0x40]
   140005ad9:	xor    r9d,r9d
   140005adc:	mov    QWORD PTR [rsp+0x28],rax
   140005ae1:	xor    r8d,r8d
   140005ae4:	or     edx,0xffffffff
   140005ae7:	mov    QWORD PTR [rsp+0x20],r15
   140005aec:	mov    rcx,rbx
   140005aef:	call   rsi
   140005af1:	test   eax,eax
   140005af3:	js     0x140005bcd
   140005af9:	cmp    QWORD PTR [rsp+0x40],r15
   140005afe:	je     0x140005bcd
   140005b04:	mov    rcx,QWORD PTR [rsp+0x30]
   140005b09:	call   QWORD PTR [rip+0x56d1]        # 0x14000b1e0
   140005b0f:	mov    r8,QWORD PTR [rsp+0x30]
   140005b14:	lea    rcx,[rsp+0x50]
   140005b19:	mov    r14d,0x104
   140005b1f:	mov    r9d,eax
   140005b22:	mov    edx,r14d
   140005b25:	call   QWORD PTR [rip+0x5865]        # 0x14000b390
   140005b2b:	test   eax,eax
   140005b2d:	je     0x140005b53
   140005b2f:	cmp    eax,0xc
   140005b32:	je     0x140005c59
   140005b38:	cmp    eax,0x16
   140005b3b:	je     0x140005c4e
   140005b41:	cmp    eax,0x22
   140005b44:	je     0x140005c4e
   140005b4a:	cmp    eax,0x50
   140005b4d:	jne    0x140005c43
   140005b53:	lea    rbx,[rsp+0x50]
   140005b58:	mov    WORD PTR [rbp+0x156],r15w
   140005b60:	lea    rsi,[rsp+0x50]
   140005b65:	cmp    WORD PTR [rsp+0x50],r15w
   140005b6b:	je     0x140005b9f
   140005b6d:	mov    rcx,rsi
   140005b70:	call   QWORD PTR [rip+0x56ca]        # 0x14000b240
   140005b76:	movzx  ecx,WORD PTR [rsi]
   140005b79:	sub    cx,0x2f
   140005b7d:	cmp    cx,0x2d
   140005b81:	ja     0x140005b96
   140005b83:	movabs rdx,0x200000000801
   140005b8d:	bt     rdx,rcx
   140005b91:	jae    0x140005b96
   140005b93:	mov    rbx,rax
   140005b96:	mov    rsi,rax
   140005b99:	cmp    WORD PTR [rax],r15w
   140005b9d:	jne    0x140005b6d
   140005b9f:	lea    rax,[rsp+0x50]
   140005ba4:	sub    rbx,rax
   140005ba7:	sar    rbx,1
   140005baa:	cmp    ebx,r14d
   140005bad:	jae    0x140005bc6
   140005baf:	mov    eax,ebx
   140005bb1:	add    rax,rax
   140005bb4:	cmp    rax,0x208
   140005bba:	jae    0x140005c64
   140005bc0:	mov    WORD PTR [rsp+rax*1+0x50],r15w
   140005bc6:	lea    r8,[rsp+0x50]
   140005bcb:	jmp    0x140005bd0
   140005bcd:	xor    r8d,r8d
   140005bd0:	mov    rdx,QWORD PTR [rsp+0x30]
   140005bd5:	mov    rcx,QWORD PTR [rsp+0x38]
   140005bda:	call   QWORD PTR [rip+0x55c0]        # 0x14000b1a0
   140005be0:	mov    rcx,QWORD PTR [rsp+0x40]
   140005be5:	mov    r14d,eax
   140005be8:	call   QWORD PTR [rip+0x55e2]        # 0x14000b1d0
   140005bee:	mov    rbx,QWORD PTR [rsp+0x38]
   140005bf3:	test   rbx,rbx
   140005bf6:	je     0x140005c0d
   140005bf8:	mov    rax,QWORD PTR [rbx]
   140005bfb:	mov    rsi,QWORD PTR [rax+0x10]
   140005bff:	mov    rcx,rsi
   140005c02:	call   QWORD PTR [rip+0x5810]        # 0x14000b418
   140005c08:	mov    rcx,rbx
   140005c0b:	call   rsi
   140005c0d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005c12:	call   QWORD PTR [rip+0x55b8]        # 0x14000b1d0
   140005c18:	mov    eax,r14d
   140005c1b:	mov    rcx,QWORD PTR [rbp+0x160]
   140005c22:	xor    rcx,rsp
   140005c25:	call   0x140009bc0
   140005c2a:	lea    r11,[rsp+0x270]
   140005c32:	mov    rbx,QWORD PTR [r11+0x28]
   140005c36:	mov    rsi,QWORD PTR [r11+0x30]
   140005c3a:	mov    rsp,r11
   140005c3d:	pop    r15
   140005c3f:	pop    r14
   140005c41:	pop    rbp
   140005c42:	ret    
   140005c43:	mov    ecx,0x80004005
   140005c48:	call   0x140008de4
   140005c4d:	int3   
   140005c4e:	mov    ecx,0x80070057
   140005c53:	call   0x140008de4
   140005c58:	int3   
   140005c59:	mov    ecx,0x8007000e
   140005c5e:	call   0x140008de4
   140005c63:	int3   
   140005c64:	call   0x140009f08
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	mov    QWORD PTR [rsp+0x8],rbx
   140005c75:	mov    QWORD PTR [rsp+0x10],rbp
   140005c7a:	mov    QWORD PTR [rsp+0x18],rsi
   140005c7f:	push   rdi
   140005c80:	sub    rsp,0x20
   140005c84:	mov    rsi,rcx
   140005c87:	mov    rdi,rdx
   140005c8a:	movzx  ecx,WORD PTR [rcx]
   140005c8d:	call   QWORD PTR [rip+0x55b5]        # 0x14000b248
   140005c93:	movzx  ecx,WORD PTR [rdi]
   140005c96:	mov    rbx,rax
   140005c99:	call   QWORD PTR [rip+0x55a9]        # 0x14000b248
   140005c9f:	movabs rbp,0x100000201
   140005ca9:	mov    r8,rax
   140005cac:	test   bx,bx
   140005caf:	je     0x140005d08
   140005cb1:	cmp    bx,r8w
   140005cb5:	jne    0x140005cf9
   140005cb7:	cmp    bx,0x20
   140005cbb:	je     0x140005cff
   140005cbd:	cmp    bx,0x9
   140005cc1:	je     0x140005cf9
   140005cc3:	mov    rcx,rsi
   140005cc6:	call   QWORD PTR [rip+0x5574]        # 0x14000b240
   140005ccc:	mov    rcx,rdi
   140005ccf:	mov    rsi,rax
   140005cd2:	call   QWORD PTR [rip+0x5568]        # 0x14000b240
   140005cd8:	movzx  ecx,WORD PTR [rsi]
   140005cdb:	mov    rdi,rax
   140005cde:	call   QWORD PTR [rip+0x5564]        # 0x14000b248
   140005ce4:	movzx  ecx,WORD PTR [rdi]
   140005ce7:	movzx  ebx,ax
   140005cea:	call   QWORD PTR [rip+0x5558]        # 0x14000b248
   140005cf0:	movzx  r8d,ax
   140005cf4:	test   bx,bx
   140005cf7:	jne    0x140005cb1
   140005cf9:	cmp    bx,0x20
   140005cfd:	ja     0x140005d1d
   140005cff:	movzx  eax,bx
   140005d02:	bt     rbp,rax
   140005d06:	jae    0x140005d1d
   140005d08:	cmp    r8w,0x20
   140005d0d:	ja     0x140005d1d
   140005d0f:	movzx  eax,r8w
   140005d13:	bt     rbp,rax
   140005d17:	jae    0x140005d1d
   140005d19:	xor    eax,eax
   140005d1b:	jmp    0x140005d28
   140005d1d:	cmp    bx,r8w
   140005d21:	sbb    eax,eax
   140005d23:	and    eax,0xfffffffe
   140005d26:	inc    eax
   140005d28:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d2d:	mov    rbp,QWORD PTR [rsp+0x38]
   140005d32:	mov    rsi,QWORD PTR [rsp+0x40]
   140005d37:	add    rsp,0x20
   140005d3b:	pop    rdi
   140005d3c:	ret    
   140005d3d:	int3   
   140005d3e:	int3   
   140005d3f:	int3   
   140005d40:	int3   
   140005d41:	int3   
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	mov    QWORD PTR [rsp+0x8],rbx
   140005d49:	mov    QWORD PTR [rsp+0x10],rbp
   140005d4e:	mov    QWORD PTR [rsp+0x18],rsi
   140005d53:	push   rdi
   140005d54:	sub    rsp,0x40
   140005d58:	xor    eax,eax
   140005d5a:	mov    esi,r8d
   140005d5d:	mov    rbp,rdx
   140005d60:	mov    rbx,rcx
   140005d63:	cmp    QWORD PTR [rcx+0x18],rax
   140005d67:	je     0x140005d6f
   140005d69:	cmp    QWORD PTR [rcx+0x28],rax
   140005d6d:	jne    0x140005d78
   140005d6f:	mov    edx,DWORD PTR [rsp+0x70]
   140005d73:	call   0x140006414
   140005d78:	mov    rdi,QWORD PTR [rbx+0x18]
   140005d7c:	test   rdi,rdi
   140005d7f:	je     0x140005dd6
   140005d81:	mov    rax,QWORD PTR [rdi]
   140005d84:	mov    rbx,QWORD PTR [rax+0x58]
   140005d88:	mov    rcx,rbx
   140005d8b:	call   QWORD PTR [rip+0x5687]        # 0x14000b418
   140005d91:	mov    rax,QWORD PTR [rsp+0x98]
   140005d99:	mov    r8d,esi
   140005d9c:	movzx  r9d,WORD PTR [rsp+0x78]
   140005da2:	mov    rdx,rbp
   140005da5:	mov    QWORD PTR [rsp+0x38],rax
   140005daa:	mov    rcx,rdi
   140005dad:	mov    rax,QWORD PTR [rsp+0x90]
   140005db5:	mov    QWORD PTR [rsp+0x30],rax
   140005dba:	mov    rax,QWORD PTR [rsp+0x88]
   140005dc2:	mov    QWORD PTR [rsp+0x28],rax
   140005dc7:	mov    rax,QWORD PTR [rsp+0x80]
   140005dcf:	mov    QWORD PTR [rsp+0x20],rax
   140005dd4:	call   rbx
   140005dd6:	mov    rbx,QWORD PTR [rsp+0x50]
   140005ddb:	mov    rbp,QWORD PTR [rsp+0x58]
   140005de0:	mov    rsi,QWORD PTR [rsp+0x60]
   140005de5:	add    rsp,0x40
   140005de9:	pop    rdi
   140005dea:	ret    
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	int3   
   140005df1:	int3   
   140005df2:	int3   
   140005df3:	int3   
   140005df4:	mov    rax,rsp
   140005df7:	mov    QWORD PTR [rax+0x8],rbx
   140005dfb:	mov    QWORD PTR [rax+0x10],rbp
   140005dff:	mov    QWORD PTR [rax+0x20],rsi
   140005e03:	mov    QWORD PTR [rax+0x18],r8
   140005e07:	push   rdi
   140005e08:	push   r12
   140005e0a:	push   r13
   140005e0c:	push   r14
   140005e0e:	push   r15
   140005e10:	sub    rsp,0x20
   140005e14:	xor    edx,edx
   140005e16:	mov    r13d,r9d
   140005e19:	mov    rbx,rcx
   140005e1c:	mov    eax,edx
   140005e1e:	cmp    QWORD PTR [rcx+0x18],rdx
   140005e22:	je     0x140005e2a
   140005e24:	cmp    QWORD PTR [rcx+0x28],rdx
   140005e28:	jne    0x140005e3a
   140005e2a:	mov    edx,DWORD PTR [rsp+0x70]
   140005e2e:	call   0x140006414
   140005e33:	mov    r8,QWORD PTR [rsp+0x60]
   140005e38:	xor    edx,edx
   140005e3a:	mov    r12,QWORD PTR [rbx+0x18]
   140005e3e:	test   r12,r12
   140005e41:	je     0x140005ed5
   140005e47:	mov    rbp,QWORD PTR [rbx+0x28]
   140005e4b:	test   rbp,rbp
   140005e4e:	je     0x140005eb2
   140005e50:	cmp    r13d,0x1
   140005e54:	jne    0x140005eb2
   140005e56:	mov    r15,QWORD PTR [r8]
   140005e59:	test   r15,r15
   140005e5c:	jne    0x140005e62
   140005e5e:	mov    edi,edx
   140005e60:	jmp    0x140005e70
   140005e62:	or     rdi,0xffffffffffffffff
   140005e66:	inc    rdi
   140005e69:	cmp    WORD PTR [r15+rdi*2],dx
   140005e6e:	jne    0x140005e66
   140005e70:	mov    ebx,DWORD PTR [rbx+0x30]
   140005e73:	sub    ebx,0x1
   140005e76:	js     0x140005eb2
   140005e78:	movsxd rsi,ebx
   140005e7b:	lea    r14,[rbp+0x8]
   140005e7f:	mov    rax,rsi
   140005e82:	shl    rax,0x4
   140005e86:	add    r14,rax
   140005e89:	cmp    edi,DWORD PTR [r14]
   140005e8c:	jne    0x140005ea6
   140005e8e:	movsxd r8,DWORD PTR [r14]
   140005e91:	mov    rdx,r15
   140005e94:	mov    rcx,QWORD PTR [r14-0x8]
   140005e98:	add    r8,r8
   140005e9b:	call   0x14000a706
   140005ea0:	xor    edx,edx
   140005ea2:	test   eax,eax
   140005ea4:	je     0x140005ef2
   140005ea6:	dec    ebx
   140005ea8:	sub    r14,0x10
   140005eac:	sub    rsi,0x1
   140005eb0:	jns    0x140005e89
   140005eb2:	mov    rax,QWORD PTR [r12]
   140005eb6:	mov    rbx,QWORD PTR [rax+0x50]
   140005eba:	mov    rcx,rbx
   140005ebd:	call   QWORD PTR [rip+0x5555]        # 0x14000b418
   140005ec3:	mov    r9,QWORD PTR [rsp+0x78]
   140005ec8:	mov    r8d,r13d
   140005ecb:	mov    rdx,QWORD PTR [rsp+0x60]
   140005ed0:	mov    rcx,r12
   140005ed3:	call   rbx
   140005ed5:	mov    rbx,QWORD PTR [rsp+0x50]
   140005eda:	mov    rbp,QWORD PTR [rsp+0x58]
   140005edf:	mov    rsi,QWORD PTR [rsp+0x68]
   140005ee4:	add    rsp,0x20
   140005ee8:	pop    r15
   140005eea:	pop    r14
   140005eec:	pop    r13
   140005eee:	pop    r12
   140005ef0:	pop    rdi
   140005ef1:	ret    
   140005ef2:	movsxd rax,ebx
   140005ef5:	add    rax,rax
   140005ef8:	mov    ecx,DWORD PTR [rbp+rax*8+0xc]
   140005efc:	mov    rax,QWORD PTR [rsp+0x78]
   140005f01:	mov    DWORD PTR [rax],ecx
   140005f03:	mov    eax,edx
   140005f05:	jmp    0x140005ed5
   140005f07:	int3   
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	mov    QWORD PTR [rsp+0x18],rbx
   140005f15:	push   rbp
   140005f16:	push   rsi
   140005f17:	push   rdi
   140005f18:	push   r14
   140005f1a:	push   r15
   140005f1c:	sub    rsp,0x20
   140005f20:	mov    r15,QWORD PTR [rcx]
   140005f23:	mov    r14,rdx
   140005f26:	mov    rdi,QWORD PTR [rdx]
   140005f29:	mov    rsi,rcx
   140005f2c:	test   r15,r15
   140005f2f:	jne    0x140005f99
   140005f31:	test   rdi,rdi
   140005f34:	je     0x140005f85
   140005f36:	xor    bpl,bpl
   140005f39:	test   bpl,bpl
   140005f3c:	jne    0x140005f85
   140005f3e:	mov    r14,QWORD PTR [r14]
   140005f41:	mov    rdi,QWORD PTR [rsi]
   140005f44:	and    QWORD PTR [rsi],0x0
   140005f48:	test   r14,r14
   140005f4b:	je     0x140005f6b
   140005f4d:	mov    rax,QWORD PTR [r14]
   140005f50:	mov    rbx,QWORD PTR [rax]
   140005f53:	mov    rcx,rbx
   140005f56:	call   QWORD PTR [rip+0x54bc]        # 0x14000b418
   140005f5c:	mov    r8,rsi
   140005f5f:	lea    rdx,[rip+0x648a]        # 0x14000c3f0
   140005f66:	mov    rcx,r14
   140005f69:	call   rbx
   140005f6b:	test   rdi,rdi
   140005f6e:	je     0x140005f85
   140005f70:	mov    rax,QWORD PTR [rdi]
   140005f73:	mov    rbx,QWORD PTR [rax+0x10]
   140005f77:	mov    rcx,rbx
   140005f7a:	call   QWORD PTR [rip+0x5498]        # 0x14000b418
   140005f80:	mov    rcx,rdi
   140005f83:	call   rbx
   140005f85:	mov    rax,QWORD PTR [rsi]
   140005f88:	mov    rbx,QWORD PTR [rsp+0x60]
   140005f8d:	add    rsp,0x20
   140005f91:	pop    r15
   140005f93:	pop    r14
   140005f95:	pop    rdi
   140005f96:	pop    rsi
   140005f97:	pop    rbp
   140005f98:	ret    
   140005f99:	test   rdi,rdi
   140005f9c:	je     0x140005f36
   140005f9e:	and    QWORD PTR [rsp+0x50],0x0
   140005fa4:	and    QWORD PTR [rsp+0x58],0x0
   140005faa:	mov    rax,QWORD PTR [r15]
   140005fad:	mov    rbx,QWORD PTR [rax]
   140005fb0:	mov    rcx,rbx
   140005fb3:	call   QWORD PTR [rip+0x545f]        # 0x14000b418
   140005fb9:	lea    r8,[rsp+0x50]
   140005fbe:	mov    rcx,r15
   140005fc1:	lea    rdx,[rip+0x68d0]        # 0x14000c898
   140005fc8:	call   rbx
   140005fca:	mov    rax,QWORD PTR [rdi]
   140005fcd:	mov    rbx,QWORD PTR [rax]
   140005fd0:	mov    rcx,rbx
   140005fd3:	call   QWORD PTR [rip+0x543f]        # 0x14000b418
   140005fd9:	lea    r8,[rsp+0x58]
   140005fde:	mov    rcx,rdi
   140005fe1:	lea    rdx,[rip+0x68b0]        # 0x14000c898
   140005fe8:	call   rbx
   140005fea:	mov    rdi,QWORD PTR [rsp+0x58]
   140005fef:	mov    rbx,QWORD PTR [rsp+0x50]
   140005ff4:	cmp    rbx,rdi
   140005ff7:	sete   bpl
   140005ffb:	test   rdi,rdi
   140005ffe:	je     0x14000601a
   140006000:	mov    rax,QWORD PTR [rdi]
   140006003:	mov    rbx,QWORD PTR [rax+0x10]
   140006007:	mov    rcx,rbx
   14000600a:	call   QWORD PTR [rip+0x5408]        # 0x14000b418
   140006010:	mov    rcx,rdi
   140006013:	call   rbx
   140006015:	mov    rbx,QWORD PTR [rsp+0x50]
   14000601a:	test   rbx,rbx
   14000601d:	je     0x140005f39
   140006023:	mov    rax,QWORD PTR [rbx]
   140006026:	mov    rdi,QWORD PTR [rax+0x10]
   14000602a:	mov    rcx,rdi
   14000602d:	call   QWORD PTR [rip+0x53e5]        # 0x14000b418
   140006033:	mov    rcx,rbx
   140006036:	call   rdi
   140006038:	jmp    0x140005f39
   14000603d:	int3   
   14000603e:	int3   
   14000603f:	int3   
   140006040:	int3   
   140006041:	int3   
   140006042:	int3   
   140006043:	int3   
   140006044:	rex push rbx
   140006046:	sub    rsp,0x20
   14000604a:	cmp    BYTE PTR [rcx+0x8],0x0
   14000604e:	mov    rbx,rcx
   140006051:	je     0x140006060
   140006053:	mov    rcx,QWORD PTR [rcx]
   140006056:	call   QWORD PTR [rip+0x508c]        # 0x14000b0e8
   14000605c:	mov    BYTE PTR [rbx+0x8],0x0
   140006060:	add    rsp,0x20
   140006064:	pop    rbx
   140006065:	ret    
   140006066:	int3   
   140006067:	int3   
   140006068:	int3   
   140006069:	int3   
   14000606a:	int3   
   14000606b:	int3   
   14000606c:	mov    rax,rsp
   14000606f:	mov    QWORD PTR [rax+0x18],r8
   140006073:	mov    QWORD PTR [rax+0x10],rdx
   140006077:	mov    QWORD PTR [rax+0x8],rcx
   14000607b:	push   rsi
   14000607c:	push   rdi
   14000607d:	push   r14
   14000607f:	sub    rsp,0x30
   140006083:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14000608b:	mov    QWORD PTR [rax+0x20],rbx
   14000608f:	mov    rbx,r8
   140006092:	mov    r14,rcx
   140006095:	xor    edi,edi
   140006097:	test   rcx,rcx
   14000609a:	jne    0x1400060a3
   14000609c:	mov    eax,0x80070057
   1400060a1:	jmp    0x140006109
   1400060a3:	mov    QWORD PTR [rsp+0x58],rdi
   1400060a8:	mov    ecx,0x18
   1400060ad:	call   0x140009654
   1400060b2:	mov    rsi,rax
   1400060b5:	mov    QWORD PTR [rsp+0x58],rax
   1400060ba:	jmp    0x1400060cd
   1400060bc:	xor    edi,edi
   1400060be:	mov    rbx,QWORD PTR [rsp+0x60]
   1400060c3:	mov    r14,QWORD PTR [rsp+0x50]
   1400060c8:	mov    rsi,QWORD PTR [rsp+0x58]
   1400060cd:	test   rsi,rsi
   1400060d0:	jne    0x1400060d9
   1400060d2:	mov    edi,0x8007000e
   1400060d7:	jmp    0x140006107
   1400060d9:	lea    rax,[rip+0x40]        # 0x140006120
   1400060e0:	mov    QWORD PTR [rsi],rax
   1400060e3:	mov    QWORD PTR [rsi+0x8],rbx
   1400060e7:	lea    rcx,[r14+0x10]
   1400060eb:	call   QWORD PTR [rip+0x4fff]        # 0x14000b0f0
   1400060f1:	mov    rdx,QWORD PTR [r14+0x8]
   1400060f5:	mov    QWORD PTR [rsi+0x10],rdx
   1400060f9:	mov    QWORD PTR [r14+0x8],rsi
   1400060fd:	lea    rcx,[r14+0x10]
   140006101:	call   QWORD PTR [rip+0x4fe1]        # 0x14000b0e8
   140006107:	mov    eax,edi
   140006109:	mov    rbx,QWORD PTR [rsp+0x68]
   14000610e:	add    rsp,0x30
   140006112:	pop    r14
   140006114:	pop    rdi
   140006115:	pop    rsi
   140006116:	ret    
   140006117:	int3   
   140006118:	int3   
   140006119:	int3   
   14000611a:	int3   
   14000611b:	int3   
   14000611c:	int3   
   14000611d:	int3   
   14000611e:	int3   
   14000611f:	int3   
   140006120:	test   rcx,rcx
   140006123:	je     0x140006197
   140006125:	mov    QWORD PTR [rsp+0x8],rbx
   14000612a:	mov    QWORD PTR [rsp+0x10],rsi
   14000612f:	push   rdi
   140006130:	sub    rsp,0x20
   140006134:	mov    rsi,QWORD PTR [rcx+0x18]
   140006138:	mov    rdi,rcx
   14000613b:	test   rsi,rsi
   14000613e:	je     0x140006155
   140006140:	mov    rax,QWORD PTR [rsi]
   140006143:	mov    rbx,QWORD PTR [rax+0x10]
   140006147:	mov    rcx,rbx
   14000614a:	call   QWORD PTR [rip+0x52c8]        # 0x14000b418
   140006150:	mov    rcx,rsi
   140006153:	call   rbx
   140006155:	and    QWORD PTR [rdi+0x18],0x0
   14000615a:	mov    rcx,QWORD PTR [rdi+0x28]
   14000615e:	test   rcx,rcx
   140006161:	je     0x140006183
   140006163:	lea    rbx,[rcx-0x8]
   140006167:	mov    edx,0x10
   14000616c:	mov    r8d,DWORD PTR [rbx]
   14000616f:	lea    r9,[rip+0xffffffffffffb17a]        # 0x1400012f0
   140006176:	call   0x140009be4
   14000617b:	mov    rcx,rbx
   14000617e:	call   0x1400096d4
   140006183:	and    QWORD PTR [rdi+0x28],0x0
   140006188:	mov    rbx,QWORD PTR [rsp+0x30]
   14000618d:	mov    rsi,QWORD PTR [rsp+0x38]
   140006192:	add    rsp,0x20
   140006196:	pop    rdi
   140006197:	ret    
   140006198:	int3   
   140006199:	int3   
   14000619a:	int3   
   14000619b:	int3   
   14000619c:	int3   
   14000619d:	int3   
   14000619e:	int3   
   14000619f:	int3   
   1400061a0:	and    QWORD PTR [rcx],0x0
   1400061a4:	mov    rax,rcx
   1400061a7:	and    DWORD PTR [rcx+0x8],0x0
   1400061ab:	or     DWORD PTR [rcx+0xc],0xffffffff
   1400061af:	ret    
   1400061b0:	int3   
   1400061b1:	int3   
   1400061b2:	int3   
   1400061b3:	int3   
   1400061b4:	int3   
   1400061b5:	int3   
   1400061b6:	int3   
   1400061b7:	int3   
   1400061b8:	mov    QWORD PTR [rsp+0x10],rdx
   1400061bd:	mov    QWORD PTR [rsp+0x8],rcx
   1400061c2:	push   rbx
   1400061c3:	push   rsi
   1400061c4:	push   r12
   1400061c6:	push   r13
   1400061c8:	push   r14
   1400061ca:	push   r15
   1400061cc:	sub    rsp,0x48
   1400061d0:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400061d9:	mov    rsi,rdx
   1400061dc:	mov    r13,rcx
   1400061df:	mov    rax,QWORD PTR [rdx]
   1400061e2:	mov    rbx,QWORD PTR [rax+0x18]
   1400061e6:	mov    rcx,rbx
   1400061e9:	call   QWORD PTR [rip+0x5229]        # 0x14000b418
   1400061ef:	lea    rdx,[rsp+0x98]
   1400061f7:	mov    rcx,rsi
   1400061fa:	call   rbx
   1400061fc:	test   eax,eax
   1400061fe:	js     0x1400063fb
   140006204:	xor    r14d,r14d
   140006207:	mov    QWORD PTR [rsp+0x90],r14
   14000620f:	mov    rax,QWORD PTR [rsp+0x98]
   140006217:	movzx  ecx,WORD PTR [rax+0x30]
   14000621b:	mov    DWORD PTR [r13+0x30],ecx
   14000621f:	and    QWORD PTR [r13+0x28],r14
   140006223:	test   ecx,ecx
   140006225:	je     0x1400062d5
   14000622b:	mov    ebx,ecx
   14000622d:	lea    eax,[r14+0x10]
   140006231:	mul    rcx
   140006234:	lea    rcx,[r14-0x1]
   140006238:	cmovo  rax,rcx
   14000623c:	add    rax,0x8
   140006240:	cmovb  rax,rcx
   140006244:	mov    rcx,rax
   140006247:	call   0x14000975c
   14000624c:	mov    QWORD PTR [rsp+0x38],rax
   140006251:	test   rax,rax
   140006254:	je     0x140006281
   140006256:	mov    DWORD PTR [rax],ebx
   140006258:	lea    r14,[rax+0x8]
   14000625c:	lea    rax,[rip+0xffffffffffffb08d]        # 0x1400012f0
   140006263:	mov    QWORD PTR [rsp+0x20],rax
   140006268:	lea    r9,[rip+0xffffffffffffff31]        # 0x1400061a0
   14000626f:	mov    r8d,ebx
   140006272:	mov    edx,0x10
   140006277:	mov    rcx,r14
   14000627a:	call   0x14000a0cc
   14000627f:	jmp    0x140006284
   140006281:	xor    r14d,r14d
   140006284:	mov    QWORD PTR [rsp+0x90],r14
   14000628c:	jmp    0x1400062a6
   14000628e:	mov    r13,QWORD PTR [rsp+0x80]
   140006296:	mov    rsi,QWORD PTR [rsp+0x88]
   14000629e:	mov    r14,QWORD PTR [rsp+0x90]
   1400062a6:	test   r14,r14
   1400062a9:	jne    0x1400062d5
   1400062ab:	mov    rax,QWORD PTR [rsi]
   1400062ae:	mov    rbx,QWORD PTR [rax+0x98]
   1400062b5:	mov    rcx,rbx
   1400062b8:	call   QWORD PTR [rip+0x515a]        # 0x14000b418
   1400062be:	mov    rdx,QWORD PTR [rsp+0x98]
   1400062c6:	mov    rcx,rsi
   1400062c9:	call   rbx
   1400062cb:	mov    eax,0x8007000e
   1400062d0:	jmp    0x1400063fd
   1400062d5:	xor    r12d,r12d
   1400062d8:	cmp    DWORD PTR [r13+0x30],r12d
   1400062dc:	jle    0x1400063d7
   1400062e2:	mov    r15,r14
   1400062e5:	and    DWORD PTR [r15+0x8],0x0
   1400062ea:	and    DWORD PTR [r15+0xc],0x0
   1400062ef:	mov    rax,QWORD PTR [rsi]
   1400062f2:	mov    rbx,QWORD PTR [rax+0x28]
   1400062f6:	mov    rcx,rbx
   1400062f9:	call   QWORD PTR [rip+0x5119]        # 0x14000b418
   1400062ff:	lea    r8,[rsp+0x90]
   140006307:	mov    edx,r12d
   14000630a:	mov    rcx,rsi
   14000630d:	call   rbx
   14000630f:	test   eax,eax
   140006311:	js     0x1400063c6
   140006317:	and    QWORD PTR [rsp+0x88],0x0
   140006320:	mov    rax,QWORD PTR [rsi]
   140006323:	mov    rbx,QWORD PTR [rax+0x60]
   140006327:	mov    rcx,rbx
   14000632a:	call   QWORD PTR [rip+0x50e8]        # 0x14000b418
   140006330:	and    QWORD PTR [rsp+0x28],0x0
   140006336:	and    QWORD PTR [rsp+0x20],0x0
   14000633c:	xor    r9d,r9d
   14000633f:	lea    r8,[rsp+0x88]
   140006347:	mov    rax,QWORD PTR [rsp+0x90]
   14000634f:	mov    edx,DWORD PTR [rax]
   140006351:	mov    rcx,rsi
   140006354:	call   rbx
   140006356:	test   eax,eax
   140006358:	js     0x140006397
   14000635a:	mov    rbx,QWORD PTR [rsp+0x88]
   140006362:	and    QWORD PTR [rsp+0x88],0x0
   14000636b:	cmp    QWORD PTR [r15],rbx
   14000636e:	je     0x14000637c
   140006370:	mov    rcx,QWORD PTR [r15]
   140006373:	call   QWORD PTR [rip+0x4e57]        # 0x14000b1d0
   140006379:	mov    QWORD PTR [r15],rbx
   14000637c:	mov    rcx,QWORD PTR [r15]
   14000637f:	call   QWORD PTR [rip+0x4e5b]        # 0x14000b1e0
   140006385:	mov    DWORD PTR [r15+0x8],eax
   140006389:	mov    rax,QWORD PTR [rsp+0x90]
   140006391:	mov    eax,DWORD PTR [rax]
   140006393:	mov    DWORD PTR [r15+0xc],eax
   140006397:	mov    rax,QWORD PTR [rsi]
   14000639a:	mov    rbx,QWORD PTR [rax+0xa0]
   1400063a1:	mov    rcx,rbx
   1400063a4:	call   QWORD PTR [rip+0x506e]        # 0x14000b418
   1400063aa:	mov    rdx,QWORD PTR [rsp+0x90]
   1400063b2:	mov    rcx,rsi
   1400063b5:	call   rbx
   1400063b7:	nop
   1400063b8:	mov    rcx,QWORD PTR [rsp+0x88]
   1400063c0:	call   QWORD PTR [rip+0x4e0a]        # 0x14000b1d0
   1400063c6:	inc    r12d
   1400063c9:	add    r15,0x10
   1400063cd:	cmp    r12d,DWORD PTR [r13+0x30]
   1400063d1:	jl     0x1400062e5
   1400063d7:	mov    QWORD PTR [r13+0x28],r14
   1400063db:	mov    rax,QWORD PTR [rsi]
   1400063de:	mov    rbx,QWORD PTR [rax+0x98]
   1400063e5:	mov    rcx,rbx
   1400063e8:	call   QWORD PTR [rip+0x502a]        # 0x14000b418
   1400063ee:	mov    rdx,QWORD PTR [rsp+0x98]
   1400063f6:	mov    rcx,rsi
   1400063f9:	call   rbx
   1400063fb:	xor    eax,eax
   1400063fd:	add    rsp,0x48
   140006401:	pop    r15
   140006403:	pop    r14
   140006405:	pop    r13
   140006407:	pop    r12
   140006409:	pop    rsi
   14000640a:	pop    rbx
   14000640b:	ret    
   14000640c:	int3   
   14000640d:	int3   
   14000640e:	int3   
   14000640f:	int3   
   140006410:	int3   
   140006411:	int3   
   140006412:	int3   
   140006413:	int3   
   140006414:	mov    rax,rsp
   140006417:	push   rbp
   140006418:	push   rsi
   140006419:	push   rdi
   14000641a:	push   r14
   14000641c:	push   r15
   14000641e:	lea    rbp,[rax-0x1b8]
   140006425:	sub    rsp,0x290
   14000642c:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140006435:	mov    QWORD PTR [rax+0x18],rbx
   140006439:	mov    rax,QWORD PTR [rip+0x8be0]        # 0x14000f020
   140006440:	xor    rax,rsp
   140006443:	mov    QWORD PTR [rbp+0x180],rax
   14000644a:	mov    ebx,edx
   14000644c:	mov    rsi,rcx
   14000644f:	cmp    QWORD PTR [rcx+0x18],0x0
   140006454:	je     0x140006464
   140006456:	cmp    QWORD PTR [rcx+0x28],0x0
   14000645b:	je     0x140006464
   14000645d:	xor    eax,eax
   14000645f:	jmp    0x1400066a2
   140006464:	mov    r15,QWORD PTR [rip+0x937d]        # 0x14000f7e8
   14000646b:	add    r15,0x18
   14000646f:	mov    QWORD PTR [rsp+0x50],r15
   140006474:	mov    rcx,r15
   140006477:	call   QWORD PTR [rip+0x4c73]        # 0x14000b0f0
   14000647d:	mov    BYTE PTR [rsp+0x58],0x1
   140006482:	mov    r14d,0x80004005
   140006488:	cmp    QWORD PTR [rsi+0x18],0x0
   14000648d:	jne    0x140006678
   140006493:	and    QWORD PTR [rsp+0x30],0x0
   140006499:	mov    rcx,QWORD PTR [rsi+0x8]
   14000649d:	mov    eax,DWORD PTR [rcx]
   14000649f:	cmp    DWORD PTR [rip+0x9333],eax        # 0x14000f7d8
   1400064a5:	jne    0x140006515
   1400064a7:	mov    eax,DWORD PTR [rcx+0x4]
   1400064aa:	cmp    DWORD PTR [rip+0x932c],eax        # 0x14000f7dc
   1400064b0:	jne    0x140006515
   1400064b2:	mov    eax,DWORD PTR [rcx+0x8]
   1400064b5:	cmp    DWORD PTR [rip+0x9325],eax        # 0x14000f7e0
   1400064bb:	jne    0x140006515
   1400064bd:	mov    eax,DWORD PTR [rcx+0xc]
   1400064c0:	cmp    DWORD PTR [rip+0x931e],eax        # 0x14000f7e4
   1400064c6:	jne    0x140006515
   1400064c8:	mov    eax,0xffff
   1400064cd:	cmp    WORD PTR [rsi+0x10],ax
   1400064d1:	jne    0x140006515
   1400064d3:	cmp    WORD PTR [rsi+0x12],ax
   1400064d7:	jne    0x140006515
   1400064d9:	mov    ebx,0x104
   1400064de:	mov    r8d,ebx
   1400064e1:	lea    rdx,[rsp+0x70]
   1400064e6:	mov    rcx,QWORD PTR [rip+0x93bb]        # 0x14000f8a8
   1400064ed:	call   QWORD PTR [rip+0x4c0d]        # 0x14000b100
   1400064f3:	test   eax,eax
   1400064f5:	je     0x14000667b
   1400064fb:	cmp    eax,ebx
   1400064fd:	je     0x14000667b
   140006503:	lea    rdx,[rsp+0x30]
   140006508:	lea    rcx,[rsp+0x70]
   14000650d:	call   QWORD PTR [rip+0x4ce5]        # 0x14000b1f8
   140006513:	jmp    0x140006531
   140006515:	lea    rax,[rsp+0x30]
   14000651a:	mov    QWORD PTR [rsp+0x20],rax
   14000651f:	mov    r9d,ebx
   140006522:	movzx  r8d,WORD PTR [rsi+0x12]
   140006527:	movzx  edx,WORD PTR [rsi+0x10]
   14000652b:	call   QWORD PTR [rip+0x4cbf]        # 0x14000b1f0
   140006531:	mov    r14d,eax
   140006534:	test   eax,eax
   140006536:	js     0x14000667b
   14000653c:	and    QWORD PTR [rsp+0x40],0x0
   140006542:	mov    rdi,QWORD PTR [rsp+0x30]
   140006547:	mov    rax,QWORD PTR [rdi]
   14000654a:	mov    rbx,QWORD PTR [rax+0x30]
   14000654e:	mov    rcx,rbx
   140006551:	call   QWORD PTR [rip+0x4ec1]        # 0x14000b418
   140006557:	lea    r8,[rsp+0x40]
   14000655c:	mov    rdx,QWORD PTR [rsi]
   14000655f:	mov    rcx,rdi
   140006562:	call   rbx
   140006564:	mov    r14d,eax
   140006567:	test   eax,eax
   140006569:	js     0x14000663c
   14000656f:	mov    rbx,QWORD PTR [rsp+0x40]
   140006574:	mov    QWORD PTR [rsp+0x38],rbx
   140006579:	test   rbx,rbx
   14000657c:	je     0x140006598
   14000657e:	mov    rax,QWORD PTR [rbx]
   140006581:	mov    rdi,QWORD PTR [rax+0x8]
   140006585:	mov    rcx,rdi
   140006588:	call   QWORD PTR [rip+0x4e8a]        # 0x14000b418
   14000658e:	mov    rcx,rbx
   140006591:	call   rdi
   140006593:	mov    rbx,QWORD PTR [rsp+0x40]
   140006598:	and    QWORD PTR [rsp+0x48],0x0
   14000659e:	mov    rax,QWORD PTR [rbx]
   1400065a1:	mov    rdi,QWORD PTR [rax]
   1400065a4:	mov    rcx,rdi
   1400065a7:	call   QWORD PTR [rip+0x4e6b]        # 0x14000b418
   1400065ad:	lea    r8,[rsp+0x48]
   1400065b2:	lea    rdx,[rip+0x5e27]        # 0x14000c3e0
   1400065b9:	mov    rcx,rbx
   1400065bc:	call   rdi
   1400065be:	test   eax,eax
   1400065c0:	js     0x1400065d1
   1400065c2:	lea    rdx,[rsp+0x48]
   1400065c7:	lea    rcx,[rsp+0x38]
   1400065cc:	call   0x140005f10
   1400065d1:	mov    rax,QWORD PTR [rsp+0x38]
   1400065d6:	and    QWORD PTR [rsp+0x38],0x0
   1400065dc:	mov    QWORD PTR [rsi+0x18],rax
   1400065e0:	mov    rax,QWORD PTR [rip+0x9201]        # 0x14000f7e8
   1400065e7:	test   rax,rax
   1400065ea:	je     0x1400065f2
   1400065ec:	lea    rcx,[rax+0x8]
   1400065f0:	jmp    0x1400065f4
   1400065f2:	xor    ecx,ecx
   1400065f4:	mov    r8,rsi
   1400065f7:	call   0x14000606c
   1400065fc:	nop
   1400065fd:	mov    rbx,QWORD PTR [rsp+0x48]
   140006602:	test   rbx,rbx
   140006605:	je     0x14000661d
   140006607:	mov    rax,QWORD PTR [rbx]
   14000660a:	mov    rdi,QWORD PTR [rax+0x10]
   14000660e:	mov    rcx,rdi
   140006611:	call   QWORD PTR [rip+0x4e01]        # 0x14000b418
   140006617:	mov    rcx,rbx
   14000661a:	call   rdi
   14000661c:	nop
   14000661d:	mov    rbx,QWORD PTR [rsp+0x38]
   140006622:	test   rbx,rbx
   140006625:	je     0x14000663c
   140006627:	mov    rax,QWORD PTR [rbx]
   14000662a:	mov    rdi,QWORD PTR [rax+0x10]
   14000662e:	mov    rcx,rdi
   140006631:	call   QWORD PTR [rip+0x4de1]        # 0x14000b418
   140006637:	mov    rcx,rbx
   14000663a:	call   rdi
   14000663c:	mov    rdi,QWORD PTR [rsp+0x30]
   140006641:	mov    rax,QWORD PTR [rdi]
   140006644:	mov    rbx,QWORD PTR [rax+0x10]
   140006648:	mov    rcx,rbx
   14000664b:	call   QWORD PTR [rip+0x4dc7]        # 0x14000b418
   140006651:	mov    rcx,rdi
   140006654:	call   rbx
   140006656:	nop
   140006657:	mov    rbx,QWORD PTR [rsp+0x40]
   14000665c:	test   rbx,rbx
   14000665f:	je     0x14000667b
   140006661:	mov    rax,QWORD PTR [rbx]
   140006664:	mov    rdi,QWORD PTR [rax+0x10]
   140006668:	mov    rcx,rdi
   14000666b:	call   QWORD PTR [rip+0x4da7]        # 0x14000b418
   140006671:	mov    rcx,rbx
   140006674:	call   rdi
   140006676:	jmp    0x14000667b
   140006678:	xor    r14d,r14d
   14000667b:	mov    rdx,QWORD PTR [rsi+0x18]
   14000667f:	test   rdx,rdx
   140006682:	je     0x140006696
   140006684:	cmp    QWORD PTR [rsi+0x28],0x0
   140006689:	jne    0x140006696
   14000668b:	mov    rcx,rsi
   14000668e:	call   0x1400061b8
   140006693:	mov    r14d,eax
   140006696:	mov    rcx,r15
   140006699:	call   QWORD PTR [rip+0x4a49]        # 0x14000b0e8
   14000669f:	mov    eax,r14d
   1400066a2:	mov    rcx,QWORD PTR [rbp+0x180]
   1400066a9:	xor    rcx,rsp
   1400066ac:	call   0x140009bc0
   1400066b1:	mov    rbx,QWORD PTR [rsp+0x2d0]
   1400066b9:	add    rsp,0x290
   1400066c0:	pop    r15
   1400066c2:	pop    r14
   1400066c4:	pop    rdi
   1400066c5:	pop    rsi
   1400066c6:	pop    rbp
   1400066c7:	ret    
   1400066c8:	int3   
   1400066c9:	int3   
   1400066ca:	int3   
   1400066cb:	int3   
   1400066cc:	int3   
   1400066cd:	int3   
   1400066ce:	int3   
   1400066cf:	int3   
   1400066d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400066d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400066da:	mov    QWORD PTR [rsp+0x18],rdi
   1400066df:	push   r14
   1400066e1:	sub    rsp,0x20
   1400066e5:	cmp    DWORD PTR [rip+0x9264],0x0        # 0x14000f950
   1400066ec:	je     0x14000674d
   1400066ee:	mov    rdi,QWORD PTR [rip+0x926b]        # 0x14000f960
   1400066f5:	mov    rax,QWORD PTR [rip+0x926c]        # 0x14000f968
   1400066fc:	jmp    0x140006734
   1400066fe:	mov    rsi,QWORD PTR [rdi]
   140006701:	test   rsi,rsi
   140006704:	je     0x140006730
   140006706:	mov    r14,QWORD PTR [rsi+0x20]
   14000670a:	test   r14,r14
   14000670d:	je     0x140006724
   14000670f:	mov    rax,QWORD PTR [r14]
   140006712:	mov    rbx,QWORD PTR [rax+0x10]
   140006716:	mov    rcx,rbx
   140006719:	call   QWORD PTR [rip+0x4cf9]        # 0x14000b418
   14000671f:	mov    rcx,r14
   140006722:	call   rbx
   140006724:	and    QWORD PTR [rsi+0x20],0x0
   140006729:	mov    rax,QWORD PTR [rip+0x9238]        # 0x14000f968
   140006730:	add    rdi,0x8
   140006734:	cmp    rdi,rax
   140006737:	jb     0x1400066fe
   140006739:	lea    rcx,[rip+0x9230]        # 0x14000f970
   140006740:	call   QWORD PTR [rip+0x49b2]        # 0x14000b0f8
   140006746:	and    DWORD PTR [rip+0x9203],0x0        # 0x14000f950
   14000674d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006752:	mov    rsi,QWORD PTR [rsp+0x38]
   140006757:	mov    rdi,QWORD PTR [rsp+0x40]
   14000675c:	add    rsp,0x20
   140006760:	pop    r14
   140006762:	ret    
   140006763:	int3   
   140006764:	int3   
   140006765:	int3   
   140006766:	int3   
   140006767:	int3   
   140006768:	int3   
   140006769:	int3   
   14000676a:	int3   
   14000676b:	int3   
   14000676c:	mov    QWORD PTR [rsp+0x8],rbx
   140006771:	mov    QWORD PTR [rsp+0x10],rsi
   140006776:	mov    QWORD PTR [rsp+0x18],rdi
   14000677b:	push   r14
   14000677d:	sub    rsp,0x20
   140006781:	lea    rsi,[rcx+0x8]
   140006785:	mov    rdi,rcx
   140006788:	cmp    DWORD PTR [rsi],0x0
   14000678b:	je     0x1400067fd
   14000678d:	cmp    QWORD PTR [rcx+0x10],0x0
   140006792:	je     0x1400067d2
   140006794:	test   rsi,rsi
   140006797:	je     0x140006813
   140006799:	mov    r14,QWORD PTR [rsi+0x8]
   14000679d:	test   r14,r14
   1400067a0:	je     0x1400067c8
   1400067a2:	mov    rbx,QWORD PTR [r14]
   1400067a5:	mov    rcx,rbx
   1400067a8:	call   QWORD PTR [rip+0x4c6a]        # 0x14000b418
   1400067ae:	mov    rcx,QWORD PTR [r14+0x8]
   1400067b2:	call   rbx
   1400067b4:	mov    rbx,QWORD PTR [r14+0x10]
   1400067b8:	mov    rcx,r14
   1400067bb:	call   0x1400096d4
   1400067c0:	mov    r14,rbx
   1400067c3:	test   rbx,rbx
   1400067c6:	jne    0x1400067a2
   1400067c8:	and    QWORD PTR [rsi+0x8],0x0
   1400067cd:	and    QWORD PTR [rdi+0x10],0x0
   1400067d2:	mov    r14,QWORD PTR [rdi+0x40]
   1400067d6:	test   r14,r14
   1400067d9:	je     0x1400067f0
   1400067db:	mov    rax,QWORD PTR [r14]
   1400067de:	mov    rbx,QWORD PTR [rax+0x10]
   1400067e2:	mov    rcx,rbx
   1400067e5:	call   QWORD PTR [rip+0x4c2d]        # 0x14000b418
   1400067eb:	mov    rcx,r14
   1400067ee:	call   rbx
   1400067f0:	lea    rcx,[rdi+0x18]
   1400067f4:	call   QWORD PTR [rip+0x48fe]        # 0x14000b0f8
   1400067fa:	and    DWORD PTR [rsi],0x0
   1400067fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140006802:	mov    rsi,QWORD PTR [rsp+0x38]
   140006807:	mov    rdi,QWORD PTR [rsp+0x40]
   14000680c:	add    rsp,0x20
   140006810:	pop    r14
   140006812:	ret    
   140006813:	mov    ecx,0xc0000005
   140006818:	call   0x1400070f0
   14000681d:	int3   
   14000681e:	int3   
   14000681f:	int3   
   140006820:	int3   
   140006821:	int3   
   140006822:	int3   
   140006823:	int3   
   140006824:	mov    DWORD PTR [rsp+0x20],r9d
   140006829:	sub    rsp,0x58
   14000682d:	mov    rax,QWORD PTR [rsp+0x80]
   140006835:	xor    r11d,r11d
   140006838:	mov    r10,rcx
   14000683b:	test   rax,rax
   14000683e:	je     0x140006864
   140006840:	cmp    WORD PTR [rax],r11w
   140006844:	jne    0x14000684c
   140006846:	lea    ecx,[r11+0xe]
   14000684a:	jmp    0x140006869
   14000684c:	or     rcx,0xffffffffffffffff
   140006850:	inc    rcx
   140006853:	cmp    WORD PTR [rax+rcx*2],r11w
   140006858:	jne    0x140006850
   14000685a:	lea    rcx,[rcx*2+0x2]
   140006862:	jmp    0x140006869
   140006864:	mov    ecx,0xa
   140006869:	test   rax,rax
   14000686c:	je     0x14000687f
   14000686e:	cmp    WORD PTR [rax],r11w
   140006872:	lea    r9,[rip+0x5b87]        # 0x14000c400
   140006879:	cmove  rax,r9
   14000687d:	jmp    0x140006886
   14000687f:	lea    rax,[rip+0x5b8a]        # 0x14000c410
   140006886:	mov    QWORD PTR [rsp+0x40],r11
   14000688b:	mov    QWORD PTR [rsp+0x38],rcx
   140006890:	mov    rcx,r10
   140006893:	mov    QWORD PTR [rsp+0x30],rax
   140006898:	lea    rax,[rsp+0x78]
   14000689d:	movzx  r9d,dx
   1400068a1:	mov    edx,0x2b
   1400068a6:	mov    QWORD PTR [rsp+0x28],0x4
   1400068af:	mov    QWORD PTR [rsp+0x20],rax
   1400068b4:	call   QWORD PTR [rip+0x477e]        # 0x14000b038
   1400068ba:	add    rsp,0x58
   1400068be:	ret    
   1400068bf:	int3   
   1400068c0:	int3   
   1400068c1:	int3   
   1400068c2:	int3   
   1400068c3:	int3   
   1400068c4:	int3   
   1400068c5:	int3   
   1400068c6:	int3   
   1400068c7:	int3   
   1400068c8:	rex push rbx
   1400068ca:	sub    rsp,0x40
   1400068ce:	mov    rax,QWORD PTR [rip+0x874b]        # 0x14000f020
   1400068d5:	xor    rax,rsp
   1400068d8:	mov    QWORD PTR [rsp+0x38],rax
   1400068dd:	xor    eax,eax
   1400068df:	mov    DWORD PTR [rsp+0x28],0xf4e10000
   1400068e7:	lea    r8,[rsp+0x20]
   1400068ec:	mov    QWORD PTR [rsp+0x2c],rax
   1400068f1:	lea    rdx,[rip+0x5b38]        # 0x14000c430
   1400068f8:	mov    DWORD PTR [rsp+0x34],eax
   1400068fc:	xor    ecx,ecx
   1400068fe:	call   QWORD PTR [rip+0x47d4]        # 0x14000b0d8
   140006904:	test   eax,eax
   140006906:	je     0x140006942
   140006908:	mov    rcx,QWORD PTR [rsp+0x20]
   14000690d:	lea    rdx,[rip+0x5b2c]        # 0x14000c440
   140006914:	call   QWORD PTR [rip+0x4816]        # 0x14000b130
   14000691a:	mov    rbx,rax
   14000691d:	test   rax,rax
   140006920:	je     0x140006937
   140006922:	mov    rcx,rax
   140006925:	call   QWORD PTR [rip+0x4aed]        # 0x14000b418
   14000692b:	lea    rdx,[rsp+0x28]
   140006930:	mov    ecx,0x1
   140006935:	call   rbx
   140006937:	mov    rcx,QWORD PTR [rsp+0x20]
   14000693c:	call   QWORD PTR [rip+0x47fe]        # 0x14000b140
   140006942:	mov    eax,DWORD PTR [rsp+0x28]
   140006946:	mov    rcx,QWORD PTR [rsp+0x38]
   14000694b:	xor    rcx,rsp
   14000694e:	call   0x140009bc0
   140006953:	add    rsp,0x40
   140006957:	pop    rbx
   140006958:	ret    
   140006959:	int3   
   14000695a:	int3   
   14000695b:	int3   
   14000695c:	int3   
   14000695d:	int3   
   14000695e:	int3   
   14000695f:	int3   
   140006960:	mov    r11,rsp
   140006963:	mov    DWORD PTR [r11+0x20],r9d
   140006967:	sub    rsp,0x48
   14000696b:	and    QWORD PTR [r11-0x18],0x0
   140006970:	lea    rax,[r11+0x20]
   140006974:	movzx  r9d,dx
   140006978:	mov    edx,0x2b
   14000697d:	mov    QWORD PTR [r11-0x20],0x4
   140006985:	mov    QWORD PTR [r11-0x28],rax
   140006989:	call   QWORD PTR [rip+0x46a9]        # 0x14000b038
   14000698f:	add    rsp,0x48
   140006993:	ret    
   140006994:	int3   
   140006995:	int3   
   140006996:	int3   
   140006997:	int3   
   140006998:	int3   
   140006999:	int3   
   14000699a:	int3   
   14000699b:	int3   
   14000699c:	int3   
   14000699d:	int3   
   14000699e:	int3   
   14000699f:	int3   
   1400069a0:	ret    0x0
   1400069a3:	int3   
   1400069a4:	int3   
   1400069a5:	int3   
   1400069a6:	int3   
   1400069a7:	int3   
   1400069a8:	int3   
   1400069a9:	int3   
   1400069aa:	int3   
   1400069ab:	int3   
   1400069ac:	sub    rsp,0x38
   1400069b0:	call   QWORD PTR [rip+0x472a]        # 0x14000b0e0
   1400069b6:	xor    eax,eax
   1400069b8:	mov    DWORD PTR [rsp+0x20],eax
   1400069bc:	jmp    0x1400069c7
   1400069be:	mov    eax,0x8007000e
   1400069c3:	mov    DWORD PTR [rsp+0x20],eax
   1400069c7:	add    rsp,0x38
   1400069cb:	ret    
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	int3   
   1400069d1:	int3   
   1400069d2:	int3   
   1400069d3:	int3   
   1400069d4:	mov    rax,rsp
   1400069d7:	mov    QWORD PTR [rax+0x8],rbx
   1400069db:	mov    QWORD PTR [rax+0x10],rbp
   1400069df:	mov    QWORD PTR [rax+0x18],rsi
   1400069e3:	mov    QWORD PTR [rax+0x20],rdi
   1400069e7:	push   r12
   1400069e9:	push   r14
   1400069eb:	push   r15
   1400069ed:	sub    rsp,0x20
   1400069f1:	xor    esi,esi
   1400069f3:	mov    r14,r9
   1400069f6:	mov    rdi,r8
   1400069f9:	mov    rbx,rdx
   1400069fc:	mov    r12,rcx
   1400069ff:	test   rcx,rcx
   140006a02:	je     0x140006aea
   140006a08:	test   rdx,rdx
   140006a0b:	je     0x140006aea
   140006a11:	test   r9,r9
   140006a14:	jne    0x140006a20
   140006a16:	mov    esi,0x80004003
   140006a1b:	jmp    0x140006aef
   140006a20:	mov    QWORD PTR [r9],rsi
   140006a23:	cmp    DWORD PTR [r8],esi
   140006a26:	jne    0x140006a66
   140006a28:	cmp    DWORD PTR [r8+0x4],esi
   140006a2c:	jne    0x140006a66
   140006a2e:	cmp    DWORD PTR [r8+0x8],0xc0
   140006a36:	jne    0x140006a66
   140006a38:	cmp    DWORD PTR [r8+0xc],0x46000000
   140006a40:	jne    0x140006a66
   140006a42:	mov    rdi,QWORD PTR [rdx+0x8]
   140006a46:	add    rdi,rcx
   140006a49:	mov    rax,QWORD PTR [rdi]
   140006a4c:	mov    rbx,QWORD PTR [rax+0x8]
   140006a50:	mov    rcx,rbx
   140006a53:	call   QWORD PTR [rip+0x49bf]        # 0x14000b418
   140006a59:	mov    rcx,rdi
   140006a5c:	call   rbx
   140006a5e:	mov    QWORD PTR [r14],rdi
   140006a61:	jmp    0x140006aef
   140006a66:	cmp    QWORD PTR [rdx+0x10],rsi
   140006a6a:	je     0x140006ad3
   140006a6c:	mov    rcx,QWORD PTR [rbx]
   140006a6f:	mov    ebp,esi
   140006a71:	test   rcx,rcx
   140006a74:	sete   bpl
   140006a78:	test   ebp,ebp
   140006a7a:	jne    0x140006a9a
   140006a7c:	mov    eax,DWORD PTR [rdi]
   140006a7e:	cmp    DWORD PTR [rcx],eax
   140006a80:	jne    0x140006ac9
   140006a82:	mov    eax,DWORD PTR [rdi+0x4]
   140006a85:	cmp    DWORD PTR [rcx+0x4],eax
   140006a88:	jne    0x140006ac9
   140006a8a:	mov    eax,DWORD PTR [rdi+0x8]
   140006a8d:	cmp    DWORD PTR [rcx+0x8],eax
   140006a90:	jne    0x140006ac9
   140006a92:	mov    eax,DWORD PTR [rdi+0xc]
   140006a95:	cmp    DWORD PTR [rcx+0xc],eax
   140006a98:	jne    0x140006ac9
   140006a9a:	mov    r15,QWORD PTR [rbx+0x10]
   140006a9e:	cmp    r15,0x1
   140006aa2:	je     0x140006ade
   140006aa4:	mov    rcx,r15
   140006aa7:	call   QWORD PTR [rip+0x496b]        # 0x14000b418
   140006aad:	mov    r9,QWORD PTR [rbx+0x8]
   140006ab1:	mov    r8,r14
   140006ab4:	mov    rdx,rdi
   140006ab7:	mov    rcx,r12
   140006aba:	call   r15
   140006abd:	test   eax,eax
   140006abf:	je     0x140006ada
   140006ac1:	test   ebp,ebp
   140006ac3:	jne    0x140006ac9
   140006ac5:	test   eax,eax
   140006ac7:	js     0x140006ada
   140006ac9:	add    rbx,0x18
   140006acd:	cmp    QWORD PTR [rbx+0x10],rsi
   140006ad1:	jne    0x140006a6c
   140006ad3:	mov    esi,0x80004002
   140006ad8:	jmp    0x140006aef
   140006ada:	mov    esi,eax
   140006adc:	jmp    0x140006aef
   140006ade:	mov    rdi,QWORD PTR [rbx+0x8]
   140006ae2:	add    rdi,r12
   140006ae5:	jmp    0x140006a49
   140006aea:	mov    esi,0x80070057
   140006aef:	mov    rbx,QWORD PTR [rsp+0x40]
   140006af4:	mov    eax,esi
   140006af6:	mov    rsi,QWORD PTR [rsp+0x50]
   140006afb:	mov    rbp,QWORD PTR [rsp+0x48]
   140006b00:	mov    rdi,QWORD PTR [rsp+0x58]
   140006b05:	add    rsp,0x20
   140006b09:	pop    r15
   140006b0b:	pop    r14
   140006b0d:	pop    r12
   140006b0f:	ret    
   140006b10:	int3   
   140006b11:	int3   
   140006b12:	int3   
   140006b13:	int3   
   140006b14:	int3   
   140006b15:	int3   
   140006b16:	int3   
   140006b17:	int3   
   140006b18:	int3   
   140006b19:	int3   
   140006b1a:	int3   
   140006b1b:	int3   
   140006b1c:	int3   
   140006b1d:	int3   
   140006b1e:	int3   
   140006b1f:	int3   
   140006b20:	test   r8,r8
   140006b23:	je     0x140006b29
   140006b25:	and    QWORD PTR [r8],0x0
   140006b29:	mov    eax,0x80004001
   140006b2e:	ret    
   140006b2f:	int3   
   140006b30:	int3   
   140006b31:	int3   
   140006b32:	int3   
   140006b33:	int3   
   140006b34:	int3   
   140006b35:	int3   
   140006b36:	int3   
   140006b37:	int3   
   140006b38:	int3   
   140006b39:	int3   
   140006b3a:	int3   
   140006b3b:	int3   
   140006b3c:	int3   
   140006b3d:	int3   
   140006b3e:	int3   
   140006b3f:	int3   
   140006b40:	mov    eax,0x1
   140006b45:	ret    
   140006b46:	int3   
   140006b47:	int3   
   140006b48:	int3   
   140006b49:	int3   
   140006b4a:	int3   
   140006b4b:	int3   
   140006b4c:	int3   
   140006b4d:	int3   
   140006b4e:	int3   
   140006b4f:	int3   
   140006b50:	mov    QWORD PTR [rsp+0x8],rbx
   140006b55:	push   rdi
   140006b56:	sub    rsp,0x20
   140006b5a:	mov    ebx,edx
   140006b5c:	mov    rdi,rcx
   140006b5f:	call   0x140006ce0
   140006b64:	test   bl,0x1
   140006b67:	je     0x140006b71
   140006b69:	mov    rcx,rdi
   140006b6c:	call   0x1400096d4
   140006b71:	mov    rax,rdi
   140006b74:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b79:	add    rsp,0x20
   140006b7d:	pop    rdi
   140006b7e:	ret    
   140006b7f:	int3   
   140006b80:	int3   
   140006b81:	int3   
   140006b82:	int3   
   140006b83:	int3   
   140006b84:	int3   
   140006b85:	int3   
   140006b86:	int3   
   140006b87:	int3   
   140006b88:	rex push rbx
   140006b8a:	sub    rsp,0x20
   140006b8e:	mov    rbx,rcx
   140006b91:	mov    rcx,QWORD PTR [rcx]
   140006b94:	test   rcx,rcx
   140006b97:	je     0x140006ba3
   140006b99:	call   QWORD PTR [rip+0x47f9]        # 0x14000b398
   140006b9f:	and    QWORD PTR [rbx],0x0
   140006ba3:	mov    rcx,QWORD PTR [rbx+0x8]
   140006ba7:	test   rcx,rcx
   140006baa:	je     0x140006bb7
   140006bac:	call   QWORD PTR [rip+0x47e6]        # 0x14000b398
   140006bb2:	and    QWORD PTR [rbx+0x8],0x0
   140006bb7:	and    DWORD PTR [rbx+0x10],0x0
   140006bbb:	add    rsp,0x20
   140006bbf:	pop    rbx
   140006bc0:	ret    
   140006bc1:	int3   
   140006bc2:	int3   
   140006bc3:	int3   
   140006bc4:	int3   
   140006bc5:	int3   
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	mov    QWORD PTR [rsp+0x8],rcx
   140006bcd:	push   rbx
   140006bce:	sub    rsp,0x30
   140006bd2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006bdb:	mov    rbx,rcx
   140006bde:	call   0x140006c1c
   140006be3:	nop
   140006be4:	mov    rcx,QWORD PTR [rbx]
   140006be7:	test   rcx,rcx
   140006bea:	je     0x140006bf6
   140006bec:	call   QWORD PTR [rip+0x47a6]        # 0x14000b398
   140006bf2:	and    QWORD PTR [rbx],0x0
   140006bf6:	mov    rcx,QWORD PTR [rbx+0x8]
   140006bfa:	test   rcx,rcx
   140006bfd:	je     0x140006c0a
   140006bff:	call   QWORD PTR [rip+0x4793]        # 0x14000b398
   140006c05:	and    QWORD PTR [rbx+0x8],0x0
   140006c0a:	and    DWORD PTR [rbx+0x10],0x0
   140006c0e:	add    rsp,0x30
   140006c12:	pop    rbx
   140006c13:	ret    
   140006c14:	int3   
   140006c15:	int3   
   140006c16:	int3   
   140006c17:	int3   
   140006c18:	int3   
   140006c19:	int3   
   140006c1a:	int3   
   140006c1b:	int3   
   140006c1c:	mov    QWORD PTR [rsp+0x8],rbx
   140006c21:	mov    QWORD PTR [rsp+0x10],rsi
   140006c26:	push   rdi
   140006c27:	sub    rsp,0x20
   140006c2b:	xor    esi,esi
   140006c2d:	mov    rbx,rcx
   140006c30:	cmp    DWORD PTR [rcx+0x10],esi
   140006c33:	jle    0x140006c6a
   140006c35:	xor    edi,edi
   140006c37:	test   rdi,rdi
   140006c3a:	js     0x140006cb1
   140006c3c:	cmp    esi,DWORD PTR [rbx+0x10]
   140006c3f:	jge    0x140006cb1
   140006c41:	mov    rcx,QWORD PTR [rbx]
   140006c44:	mov    rcx,QWORD PTR [rdi+rcx*1]
   140006c48:	call   0x1400096d4
   140006c4d:	cmp    esi,DWORD PTR [rbx+0x10]
   140006c50:	jge    0x140006ca6
   140006c52:	mov    rcx,QWORD PTR [rbx+0x8]
   140006c56:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140006c5a:	call   0x1400096d4
   140006c5f:	inc    esi
   140006c61:	add    rdi,0x8
   140006c65:	cmp    esi,DWORD PTR [rbx+0x10]
   140006c68:	jl     0x140006c37
   140006c6a:	mov    rcx,QWORD PTR [rbx]
   140006c6d:	test   rcx,rcx
   140006c70:	je     0x140006c7c
   140006c72:	call   QWORD PTR [rip+0x4720]        # 0x14000b398
   140006c78:	and    QWORD PTR [rbx],0x0
   140006c7c:	mov    rcx,QWORD PTR [rbx+0x8]
   140006c80:	test   rcx,rcx
   140006c83:	je     0x140006c90
   140006c85:	call   QWORD PTR [rip+0x470d]        # 0x14000b398
   140006c8b:	and    QWORD PTR [rbx+0x8],0x0
   140006c90:	and    DWORD PTR [rbx+0x10],0x0
   140006c94:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c99:	xor    eax,eax
   140006c9b:	mov    rsi,QWORD PTR [rsp+0x38]
   140006ca0:	add    rsp,0x20
   140006ca4:	pop    rdi
   140006ca5:	ret    
   140006ca6:	mov    ecx,0xc000008c
   140006cab:	call   0x1400070f0
   140006cb0:	int3   
   140006cb1:	mov    ecx,0xc000008c
   140006cb6:	call   0x1400070f0
   140006cbb:	int3   
   140006cbc:	int3   
   140006cbd:	int3   
   140006cbe:	int3   
   140006cbf:	int3   
   140006cc0:	int3   
   140006cc1:	int3   
   140006cc2:	int3   
   140006cc3:	int3   
   140006cc4:	int3   
   140006cc5:	int3   
   140006cc6:	int3   
   140006cc7:	int3   
   140006cc8:	int3   
   140006cc9:	int3   
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	add    rcx,0x8
   140006cd4:	jmp    0x140006c1c
   140006cd9:	int3   
   140006cda:	int3   
   140006cdb:	int3   
   140006cdc:	int3   
   140006cdd:	int3   
   140006cde:	int3   
   140006cdf:	int3   
   140006ce0:	mov    QWORD PTR [rsp+0x8],rcx
   140006ce5:	push   rbx
   140006ce6:	sub    rsp,0x30
   140006cea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006cf3:	lea    rax,[rip+0x510e]        # 0x14000be08
   140006cfa:	mov    QWORD PTR [rcx],rax
   140006cfd:	lea    rbx,[rcx+0x8]
   140006d01:	mov    rcx,rbx
   140006d04:	call   0x140006c1c
   140006d09:	nop
   140006d0a:	mov    QWORD PTR [rsp+0x40],rbx
   140006d0f:	mov    rcx,rbx
   140006d12:	call   0x140006c1c
   140006d17:	nop
   140006d18:	mov    rcx,QWORD PTR [rbx]
   140006d1b:	test   rcx,rcx
   140006d1e:	je     0x140006d2a
   140006d20:	call   QWORD PTR [rip+0x4672]        # 0x14000b398
   140006d26:	and    QWORD PTR [rbx],0x0
   140006d2a:	mov    rcx,QWORD PTR [rbx+0x8]
   140006d2e:	test   rcx,rcx
   140006d31:	je     0x140006d3e
   140006d33:	call   QWORD PTR [rip+0x465f]        # 0x14000b398
   140006d39:	and    QWORD PTR [rbx+0x8],0x0
   140006d3e:	and    DWORD PTR [rbx+0x10],0x0
   140006d42:	add    rsp,0x30
   140006d46:	pop    rbx
   140006d47:	ret    
   140006d48:	int3   
   140006d49:	int3   
   140006d4a:	int3   
   140006d4b:	int3   
   140006d4c:	int3   
   140006d4d:	int3   
   140006d4e:	int3   
   140006d4f:	int3   
   140006d50:	rex push rbx
   140006d52:	sub    rsp,0x20
   140006d56:	mov    rbx,rcx
   140006d59:	mov    rcx,QWORD PTR [rcx]
   140006d5c:	call   0x1400096d4
   140006d61:	and    QWORD PTR [rbx],0x0
   140006d65:	add    rsp,0x20
   140006d69:	pop    rbx
   140006d6a:	ret    
   140006d6b:	int3   
   140006d6c:	int3   
   140006d6d:	int3   
   140006d6e:	int3   
   140006d6f:	int3   
   140006d70:	int3   
   140006d71:	int3   
   140006d72:	int3   
   140006d73:	int3   
   140006d74:	mov    rax,rsp
   140006d77:	mov    QWORD PTR [rax+0x18],r8
   140006d7b:	mov    QWORD PTR [rax+0x10],rdx
   140006d7f:	mov    QWORD PTR [rax+0x8],rcx
   140006d83:	push   rbx
   140006d84:	push   rsi
   140006d85:	push   rdi
   140006d86:	push   r12
   140006d88:	push   r13
   140006d8a:	push   r14
   140006d8c:	push   r15
   140006d8e:	sub    rsp,0x60
   140006d92:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140006d9a:	mov    r13,r8
   140006d9d:	mov    r12,rdx
   140006da0:	mov    r15,rcx
   140006da3:	xor    esi,esi
   140006da5:	test   rdx,rdx
   140006da8:	je     0x140006ff4
   140006dae:	test   r8,r8
   140006db1:	je     0x140006ff4
   140006db7:	mov    r14d,esi
   140006dba:	or     rbx,0xffffffffffffffff
   140006dbe:	mov    rax,rbx
   140006dc1:	inc    rax
   140006dc4:	cmp    WORD PTR [rdx+rax*2],si
   140006dc8:	jne    0x140006dc1
   140006dca:	lea    rcx,[rax*2+0x2]
   140006dd2:	mov    QWORD PTR [rsp+0x48],rcx
   140006dd7:	mov    QWORD PTR [rsp+0x28],rsi
   140006ddc:	mov    eax,0x2
   140006de1:	mul    rcx
   140006de4:	cmovo  rax,rbx
   140006de8:	mov    rcx,rax
   140006deb:	call   0x14000975c
   140006df0:	mov    QWORD PTR [rsp+0x20],rax
   140006df5:	mov    QWORD PTR [rsp+0x28],rax
   140006dfa:	jmp    0x140006e27
   140006dfc:	xor    esi,esi
   140006dfe:	or     rbx,0xffffffffffffffff
   140006e02:	mov    r15,QWORD PTR [rsp+0xa0]
   140006e0a:	mov    r13,QWORD PTR [rsp+0xb0]
   140006e12:	mov    r12,QWORD PTR [rsp+0xa8]
   140006e1a:	mov    r14d,esi
   140006e1d:	mov    rax,QWORD PTR [rsp+0x28]
   140006e22:	mov    QWORD PTR [rsp+0x20],rax
   140006e27:	mov    rdi,rax
   140006e2a:	mov    QWORD PTR [rsp+0x40],rax
   140006e2f:	mov    rax,rbx
   140006e32:	inc    rax
   140006e35:	cmp    WORD PTR [r13+rax*2+0x0],si
   140006e3b:	jne    0x140006e32
   140006e3d:	inc    eax
   140006e3f:	movsxd rcx,eax
   140006e42:	add    rcx,rcx
   140006e45:	mov    QWORD PTR [rsp+0x38],rcx
   140006e4a:	mov    QWORD PTR [rsp+0x30],rsi
   140006e4f:	mov    eax,0x2
   140006e54:	mul    rcx
   140006e57:	cmovo  rax,rbx
   140006e5b:	mov    rcx,rax
   140006e5e:	call   0x14000975c
   140006e63:	mov    rbx,rax
   140006e66:	mov    QWORD PTR [rsp+0x30],rax
   140006e6b:	mov    rax,QWORD PTR [rsp+0x20]
   140006e70:	jmp    0x140006ea3
   140006e72:	xor    esi,esi
   140006e74:	mov    r15,QWORD PTR [rsp+0xa0]
   140006e7c:	mov    r13,QWORD PTR [rsp+0xb0]
   140006e84:	mov    r12,QWORD PTR [rsp+0xa8]
   140006e8c:	mov    r14d,esi
   140006e8f:	mov    rax,QWORD PTR [rsp+0x28]
   140006e94:	mov    QWORD PTR [rsp+0x20],rax
   140006e99:	mov    rdi,QWORD PTR [rsp+0x40]
   140006e9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ea3:	mov    QWORD PTR [rsp+0xa8],rbx
   140006eab:	test   rax,rax
   140006eae:	je     0x140006fd2
   140006eb4:	test   rbx,rbx
   140006eb7:	je     0x140006fd2
   140006ebd:	mov    rdx,QWORD PTR [rsp+0x48]
   140006ec2:	mov    r9,rdx
   140006ec5:	mov    r8,r12
   140006ec8:	mov    rcx,rax
   140006ecb:	call   QWORD PTR [rip+0x44af]        # 0x14000b380
   140006ed1:	test   eax,eax
   140006ed3:	je     0x140006f0a
   140006ed5:	cmp    eax,0xc
   140006ed8:	je     0x140006eff
   140006eda:	cmp    eax,0x16
   140006edd:	je     0x140006ef4
   140006edf:	cmp    eax,0x22
   140006ee2:	je     0x140006ef4
   140006ee4:	cmp    eax,0x50
   140006ee7:	je     0x140006f0a
   140006ee9:	mov    ecx,0x80004005
   140006eee:	call   0x140008de4
   140006ef3:	int3   
   140006ef4:	mov    ecx,0x80070057
   140006ef9:	call   0x140008de4
   140006efe:	int3   
   140006eff:	mov    ecx,0x8007000e
   140006f04:	call   0x140008de4
   140006f09:	int3   
   140006f0a:	mov    r9,QWORD PTR [rsp+0x38]
   140006f0f:	mov    r8,r13
   140006f12:	mov    rdx,r9
   140006f15:	mov    rcx,rbx
   140006f18:	call   QWORD PTR [rip+0x4462]        # 0x14000b380
   140006f1e:	test   eax,eax
   140006f20:	je     0x140006f57
   140006f22:	cmp    eax,0xc
   140006f25:	je     0x140006f4c
   140006f27:	cmp    eax,0x16
   140006f2a:	je     0x140006f41
   140006f2c:	cmp    eax,0x22
   140006f2f:	je     0x140006f41
   140006f31:	cmp    eax,0x50
   140006f34:	je     0x140006f57
   140006f36:	mov    ecx,0x80004005
   140006f3b:	call   0x140008de4
   140006f40:	int3   
   140006f41:	mov    ecx,0x80070057
   140006f46:	call   0x140008de4
   140006f4b:	int3   
   140006f4c:	mov    ecx,0x8007000e
   140006f51:	call   0x140008de4
   140006f56:	int3   
   140006f57:	mov    eax,DWORD PTR [r15+0x10]
   140006f5b:	inc    eax
   140006f5d:	movsxd rdx,eax
   140006f60:	mov    r12d,0x8
   140006f66:	mov    r8d,r12d
   140006f69:	mov    rcx,QWORD PTR [r15]
   140006f6c:	call   QWORD PTR [rip+0x809e]        # 0x14000f010
   140006f72:	test   rax,rax
   140006f75:	je     0x140006fd2
   140006f77:	mov    QWORD PTR [r15],rax
   140006f7a:	mov    eax,DWORD PTR [r15+0x10]
   140006f7e:	inc    eax
   140006f80:	movsxd rdx,eax
   140006f83:	mov    r8d,r12d
   140006f86:	mov    rcx,QWORD PTR [r15+0x8]
   140006f8a:	call   QWORD PTR [rip+0x8080]        # 0x14000f010
   140006f90:	test   rax,rax
   140006f93:	je     0x140006fd2
   140006f95:	mov    QWORD PTR [r15+0x8],rax
   140006f99:	movsxd rdx,DWORD PTR [r15+0x10]
   140006f9d:	mov    rax,QWORD PTR [r15]
   140006fa0:	lea    rcx,[rax+rdx*8]
   140006fa4:	test   rcx,rcx
   140006fa7:	je     0x140006fb1
   140006fa9:	mov    rax,QWORD PTR [rsp+0x20]
   140006fae:	mov    QWORD PTR [rcx],rax
   140006fb1:	mov    rax,QWORD PTR [r15+0x8]
   140006fb5:	lea    rcx,[rax+rdx*8]
   140006fb9:	test   rcx,rcx
   140006fbc:	je     0x140006fc1
   140006fbe:	mov    QWORD PTR [rcx],rbx
   140006fc1:	inc    DWORD PTR [r15+0x10]
   140006fc5:	mov    rdi,rsi
   140006fc8:	mov    QWORD PTR [rsp+0x40],rsi
   140006fcd:	mov    rbx,rsi
   140006fd0:	jmp    0x140006fd8
   140006fd2:	mov    r14d,0x8007000e
   140006fd8:	test   r14d,r14d
   140006fdb:	setns  sil
   140006fdf:	mov    rcx,rbx
   140006fe2:	call   0x1400096d4
   140006fe7:	nop
   140006fe8:	mov    rcx,rdi
   140006feb:	call   0x1400096d4
   140006ff0:	mov    eax,esi
   140006ff2:	jmp    0x140006ff6
   140006ff4:	xor    eax,eax
   140006ff6:	add    rsp,0x60
   140006ffa:	pop    r15
   140006ffc:	pop    r14
   140006ffe:	pop    r13
   140007000:	pop    r12
   140007002:	pop    rdi
   140007003:	pop    rsi
   140007004:	pop    rbx
   140007005:	ret    
   140007006:	int3   
   140007007:	int3   
   140007008:	int3   
   140007009:	int3   
   14000700a:	int3   
   14000700b:	int3   
   14000700c:	int3   
   14000700d:	int3   
   14000700e:	int3   
   14000700f:	int3   
   140007010:	sub    rsp,0x38
   140007014:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000701d:	test   rdx,rdx
   140007020:	je     0x140007043
   140007022:	test   r8,r8
   140007025:	je     0x140007043
   140007027:	and    QWORD PTR [rsp+0x48],0x0
   14000702d:	add    rcx,0x8
   140007031:	call   0x140006d74
   140007036:	neg    eax
   140007038:	sbb    eax,eax
   14000703a:	not    eax
   14000703c:	and    eax,0x8007000e
   140007041:	jmp    0x140007048
   140007043:	mov    eax,0x80070057
   140007048:	add    rsp,0x38
   14000704c:	ret    
   14000704d:	int3   
   14000704e:	int3   
   14000704f:	int3   
   140007050:	int3   
   140007051:	int3   
   140007052:	int3   
   140007053:	int3   
   140007054:	mov    rcx,QWORD PTR [rcx]
   140007057:	rex.W jmp QWORD PTR [rip+0x433a]        # 0x14000b398
   14000705e:	int3   
   14000705f:	int3   
   140007060:	int3   
   140007061:	int3   
   140007062:	int3   
   140007063:	int3   
   140007064:	sub    rsp,0x28
   140007068:	lea    rax,[rcx+0x8]
   14000706c:	cmp    QWORD PTR [rcx],rax
   14000706f:	je     0x140007076
   140007071:	call   0x140007054
   140007076:	add    rsp,0x28
   14000707a:	ret    
   14000707b:	int3   
   14000707c:	int3   
   14000707d:	int3   
   14000707e:	int3   
   14000707f:	int3   
   140007080:	int3   
   140007081:	int3   
   140007082:	int3   
   140007083:	int3   
   140007084:	rex push rbx
   140007086:	sub    rsp,0x20
   14000708a:	mov    rbx,rcx
   14000708d:	mov    rcx,rdx
   140007090:	call   QWORD PTR [rip+0x42f2]        # 0x14000b388
   140007096:	test   rax,rax
   140007099:	je     0x1400070a4
   14000709b:	mov    QWORD PTR [rbx],rax
   14000709e:	add    rsp,0x20
   1400070a2:	pop    rbx
   1400070a3:	ret    
   1400070a4:	mov    ecx,0x8007000e
   1400070a9:	call   0x140008de4
   1400070ae:	int3   
   1400070af:	int3   
   1400070b0:	int3   
   1400070b1:	int3   
   1400070b2:	int3   
   1400070b3:	int3   
   1400070b4:	int3   
   1400070b5:	int3   
   1400070b6:	int3   
   1400070b7:	int3   
   1400070b8:	sub    rsp,0x28
   1400070bc:	call   QWORD PTR [rip+0x4076]        # 0x14000b138
   1400070c2:	mov    ecx,eax
   1400070c4:	movzx  eax,ax
   1400070c7:	or     eax,0x80070000
   1400070cc:	test   ecx,ecx
   1400070ce:	cmovle eax,ecx
   1400070d1:	add    rsp,0x28
   1400070d5:	ret    
   1400070d6:	int3   
   1400070d7:	int3   
   1400070d8:	int3   
   1400070d9:	int3   
   1400070da:	int3   
   1400070db:	int3   
   1400070dc:	mov    rcx,QWORD PTR [rcx+0x8]
   1400070e0:	rex.W jmp QWORD PTR [rip+0x4319]        # 0x14000b400
   1400070e7:	int3   
   1400070e8:	int3   
   1400070e9:	int3   
   1400070ea:	int3   
   1400070eb:	int3   
   1400070ec:	int3   
   1400070ed:	int3   
   1400070ee:	int3   
   1400070ef:	int3   
   1400070f0:	xor    r9d,r9d
   1400070f3:	xor    r8d,r8d
   1400070f6:	lea    edx,[r9+0x1]
   1400070fa:	rex.W jmp QWORD PTR [rip+0x3f6f]        # 0x14000b070
   140007101:	int3   
   140007102:	int3   
   140007103:	int3   
   140007104:	int3   
   140007105:	int3   
   140007106:	int3   
   140007107:	int3   
   140007108:	mov    rax,rsp
   14000710b:	mov    QWORD PTR [rax+0x8],rbx
   14000710f:	mov    QWORD PTR [rax+0x10],rbp
   140007113:	mov    QWORD PTR [rax+0x18],rsi
   140007117:	mov    QWORD PTR [rax+0x20],rdi
   14000711b:	push   r14
   14000711d:	sub    rsp,0x20
   140007121:	mov    rbx,rcx
   140007124:	mov    esi,r8d
   140007127:	lea    ecx,[r8+0x1]
   14000712b:	mov    rbp,rdx
   14000712e:	add    ecx,DWORD PTR [rbx]
   140007130:	cmp    ecx,DWORD PTR [rbx]
   140007132:	jle    0x1400071e5
   140007138:	cmp    ecx,r8d
   14000713b:	jle    0x1400071e5
   140007141:	mov    edi,DWORD PTR [rbx+0x4]
   140007144:	xor    r14d,r14d
   140007147:	cmp    ecx,edi
   140007149:	jl     0x140007184
   14000714b:	cmp    edi,0x3fffffff
   140007151:	jg     0x1400071e5
   140007157:	add    edi,edi
   140007159:	cmp    ecx,edi
   14000715b:	jge    0x14000714b
   14000715d:	mov    eax,edi
   14000715f:	mov    ecx,0xffffffff
   140007164:	add    rax,rax
   140007167:	cmp    rax,rcx
   14000716a:	ja     0x1400071e5
   14000716c:	mov    rcx,QWORD PTR [rbx+0x8]
   140007170:	mov    edx,eax
   140007172:	call   QWORD PTR [rip+0x4280]        # 0x14000b3f8
   140007178:	test   rax,rax
   14000717b:	je     0x1400071e5
   14000717d:	mov    QWORD PTR [rbx+0x8],rax
   140007181:	mov    DWORD PTR [rbx+0x4],edi
   140007184:	cmp    DWORD PTR [rbx],r14d
   140007187:	jl     0x1400071e5
   140007189:	mov    ecx,DWORD PTR [rbx+0x4]
   14000718c:	cmp    DWORD PTR [rbx],ecx
   14000718e:	jge    0x1400071e5
   140007190:	mov    eax,ecx
   140007192:	sub    eax,DWORD PTR [rbx]
   140007194:	cmp    eax,ecx
   140007196:	jg     0x1400071e5
   140007198:	movsxd rcx,DWORD PTR [rbx]
   14000719b:	mov    r8,rbp
   14000719e:	movsxd rdx,eax
   1400071a1:	mov    rax,QWORD PTR [rbx+0x8]
   1400071a5:	add    rdx,rdx
   1400071a8:	lea    rcx,[rax+rcx*2]
   1400071ac:	lea    eax,[rsi+rsi*1]
   1400071af:	movsxd r9,eax
   1400071b2:	call   QWORD PTR [rip+0x41c8]        # 0x14000b380
   1400071b8:	test   eax,eax
   1400071ba:	je     0x1400071d0
   1400071bc:	cmp    eax,0xc
   1400071bf:	je     0x140007218
   1400071c1:	cmp    eax,0x16
   1400071c4:	je     0x14000720d
   1400071c6:	cmp    eax,0x22
   1400071c9:	je     0x14000720d
   1400071cb:	cmp    eax,0x50
   1400071ce:	jne    0x140007202
   1400071d0:	add    DWORD PTR [rbx],esi
   1400071d2:	mov    rax,QWORD PTR [rbx+0x8]
   1400071d6:	movsxd rcx,DWORD PTR [rbx]
   1400071d9:	mov    WORD PTR [rax+rcx*2],r14w
   1400071de:	mov    eax,0x1
   1400071e3:	jmp    0x1400071e7
   1400071e5:	xor    eax,eax
   1400071e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400071ec:	mov    rbp,QWORD PTR [rsp+0x38]
   1400071f1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400071f6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400071fb:	add    rsp,0x20
   1400071ff:	pop    r14
   140007201:	ret    
   140007202:	mov    ecx,0x80004005
   140007207:	call   0x140008de4
   14000720c:	int3   
   14000720d:	mov    ecx,0x80070057
   140007212:	call   0x140008de4
   140007217:	int3   
   140007218:	mov    ecx,0x8007000e
   14000721d:	call   0x140008de4
   140007222:	int3   
   140007223:	int3   
   140007224:	int3   
   140007225:	int3   
   140007226:	int3   
   140007227:	int3   
   140007228:	int3   
   140007229:	int3   
   14000722a:	int3   
   14000722b:	int3   
   14000722c:	mov    rax,rsp
   14000722f:	push   rbp
   140007230:	push   rsi
   140007231:	push   rdi
   140007232:	push   r12
   140007234:	push   r13
   140007236:	push   r14
   140007238:	push   r15
   14000723a:	lea    rbp,[rax-0x5f]
   14000723e:	sub    rsp,0x90
   140007245:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   14000724d:	mov    QWORD PTR [rax+0x10],rbx
   140007251:	mov    rax,QWORD PTR [rip+0x7dc8]        # 0x14000f020
   140007258:	xor    rax,rsp
   14000725b:	mov    QWORD PTR [rbp+0x17],rax
   14000725f:	mov    r12,r8
   140007262:	mov    rdi,rdx
   140007265:	mov    rsi,rcx
   140007268:	xor    ebx,ebx
   14000726a:	test   r8,r8
   14000726d:	jne    0x140007279
   14000726f:	mov    eax,0x80004003
   140007274:	jmp    0x1400074b0
   140007279:	mov    QWORD PTR [r8],rbx
   14000727c:	or     rax,0xffffffffffffffff
   140007280:	inc    rax
   140007283:	cmp    WORD PTR [rdx+rax*2],bx
   140007287:	jne    0x140007280
   140007289:	add    eax,eax
   14000728b:	mov    ecx,0x3e8
   140007290:	cmp    eax,0x64
   140007293:	cmovl  eax,ecx
   140007296:	mov    DWORD PTR [rbp-0x49],ebx
   140007299:	mov    DWORD PTR [rbp-0x45],eax
   14000729c:	mov    ecx,eax
   14000729e:	add    rcx,rcx
   1400072a1:	mov    eax,0xffffffff
   1400072a6:	cmp    rcx,rax
   1400072a9:	jbe    0x1400072b4
   1400072ab:	mov    rax,rbx
   1400072ae:	mov    QWORD PTR [rbp-0x41],rbx
   1400072b2:	jmp    0x1400072c8
   1400072b4:	mov    ecx,ecx
   1400072b6:	call   QWORD PTR [rip+0x4134]        # 0x14000b3f0
   1400072bc:	mov    QWORD PTR [rbp-0x41],rax
   1400072c0:	test   rax,rax
   1400072c3:	je     0x1400072c8
   1400072c5:	mov    WORD PTR [rax],bx
   1400072c8:	test   rax,rax
   1400072cb:	jne    0x1400072d7
   1400072cd:	mov    ebx,0x8007000e
   1400072d2:	jmp    0x1400074a4
   1400072d7:	mov    QWORD PTR [rsi],rdi
   1400072da:	cmp    WORD PTR [rdi],bx
   1400072dd:	je     0x140007498
   1400072e3:	mov    rdx,QWORD PTR [rsi]
   1400072e6:	cmp    WORD PTR [rdx],0x25
   1400072ea:	jne    0x140007433
   1400072f0:	mov    rcx,rdx
   1400072f3:	call   QWORD PTR [rip+0x3f47]        # 0x14000b240
   1400072f9:	mov    rdi,rax
   1400072fc:	mov    QWORD PTR [rsi],rax
   1400072ff:	cmp    WORD PTR [rax],0x25
   140007303:	jne    0x14000730d
   140007305:	mov    rdx,rax
   140007308:	jmp    0x140007433
   14000730d:	test   rax,rax
   140007310:	je     0x140007491
   140007316:	movzx  eax,WORD PTR [rax]
   140007319:	test   ax,ax
   14000731c:	je     0x140007491
   140007322:	cmp    ax,0x25
   140007326:	je     0x140007336
   140007328:	mov    rcx,rdi
   14000732b:	call   QWORD PTR [rip+0x3f0f]        # 0x14000b240
   140007331:	mov    rdi,rax
   140007334:	jmp    0x140007316
   140007336:	test   rdi,rdi
   140007339:	je     0x140007491
   14000733f:	mov    rax,rdi
   140007342:	sub    rax,QWORD PTR [rsi]
   140007345:	sar    rax,1
   140007348:	cmp    rax,0x1f
   14000734c:	jg     0x14000748a
   140007352:	movsxd r9,eax
   140007355:	mov    r8,QWORD PTR [rsi]
   140007358:	mov    edx,0x20
   14000735d:	lea    rcx,[rbp-0x29]
   140007361:	call   QWORD PTR [rip+0x4029]        # 0x14000b390
   140007367:	test   eax,eax
   140007369:	je     0x14000738f
   14000736b:	cmp    eax,0xc
   14000736e:	je     0x140007474
   140007374:	cmp    eax,0x16
   140007377:	je     0x140007469
   14000737d:	cmp    eax,0x22
   140007380:	je     0x140007469
   140007386:	cmp    eax,0x50
   140007389:	jne    0x14000745e
   14000738f:	mov    r13,QWORD PTR [rsi+0x8]
   140007393:	mov    r15d,ebx
   140007396:	mov    r14,rbx
   140007399:	cmp    DWORD PTR [r13+0x18],ebx
   14000739d:	jle    0x1400073c1
   14000739f:	mov    rax,QWORD PTR [r13+0x8]
   1400073a3:	lea    rdx,[rbp-0x29]
   1400073a7:	mov    rcx,QWORD PTR [rax+r14*8]
   1400073ab:	call   QWORD PTR [rip+0x3cef]        # 0x14000b0a0
   1400073b1:	test   eax,eax
   1400073b3:	je     0x1400073c9
   1400073b5:	inc    r15d
   1400073b8:	inc    r14
   1400073bb:	cmp    r15d,DWORD PTR [r13+0x18]
   1400073bf:	jl     0x14000739f
   1400073c1:	or     r15d,0xffffffff
   1400073c5:	or     r14,0xffffffffffffffff
   1400073c9:	cmp    r14,0xffffffffffffffff
   1400073cd:	je     0x140007491
   1400073d3:	test   r14,r14
   1400073d6:	js     0x14000747f
   1400073dc:	cmp    r15d,DWORD PTR [r13+0x18]
   1400073e0:	jge    0x14000747f
   1400073e6:	mov    rax,QWORD PTR [r13+0x10]
   1400073ea:	mov    rdx,QWORD PTR [rax+r14*8]
   1400073ee:	test   rdx,rdx
   1400073f1:	je     0x140007491
   1400073f7:	mov    QWORD PTR [rbp-0x39],rbx
   1400073fb:	or     r8,0xffffffffffffffff
   1400073ff:	inc    r8
   140007402:	cmp    WORD PTR [rdx+r8*2],bx
   140007407:	jne    0x1400073ff
   140007409:	lea    rcx,[rbp-0x49]
   14000740d:	call   0x140007108
   140007412:	nop
   140007413:	test   eax,eax
   140007415:	je     0x1400072cd
   14000741b:	cmp    QWORD PTR [rsi],rdi
   14000741e:	je     0x14000744a
   140007420:	mov    rcx,QWORD PTR [rsi]
   140007423:	call   QWORD PTR [rip+0x3e17]        # 0x14000b240
   140007429:	mov    QWORD PTR [rsi],rax
   14000742c:	cmp    rax,rdi
   14000742f:	jne    0x140007420
   140007431:	jmp    0x14000744a
   140007433:	mov    r8d,0x1
   140007439:	lea    rcx,[rbp-0x49]
   14000743d:	call   0x140007108
   140007442:	test   eax,eax
   140007444:	je     0x1400072cd
   14000744a:	mov    rcx,QWORD PTR [rsi]
   14000744d:	call   QWORD PTR [rip+0x3ded]        # 0x14000b240
   140007453:	mov    QWORD PTR [rsi],rax
   140007456:	cmp    WORD PTR [rax],bx
   140007459:	jmp    0x1400072dd
   14000745e:	mov    ecx,0x80004005
   140007463:	call   0x140008de4
   140007468:	int3   
   140007469:	mov    ecx,0x80070057
   14000746e:	call   0x140008de4
   140007473:	int3   
   140007474:	mov    ecx,0x8007000e
   140007479:	call   0x140008de4
   14000747e:	int3   
   14000747f:	mov    ecx,0xc000008c
   140007484:	call   0x1400070f0
   140007489:	int3   
   14000748a:	mov    ebx,0x80004005
   14000748f:	jmp    0x1400074a4
   140007491:	mov    ebx,0x80020009
   140007496:	jmp    0x1400074a4
   140007498:	mov    rcx,QWORD PTR [rbp-0x41]
   14000749c:	mov    QWORD PTR [rbp-0x41],rbx
   1400074a0:	mov    QWORD PTR [r12],rcx
   1400074a4:	mov    rcx,QWORD PTR [rbp-0x41]
   1400074a8:	call   QWORD PTR [rip+0x3f52]        # 0x14000b400
   1400074ae:	mov    eax,ebx
   1400074b0:	mov    rcx,QWORD PTR [rbp+0x17]
   1400074b4:	xor    rcx,rsp
   1400074b7:	call   0x140009bc0
   1400074bc:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400074c4:	add    rsp,0x90
   1400074cb:	pop    r15
   1400074cd:	pop    r14
   1400074cf:	pop    r13
   1400074d1:	pop    r12
   1400074d3:	pop    rdi
   1400074d4:	pop    rsi
   1400074d5:	pop    rbp
   1400074d6:	ret    
   1400074d7:	int3   
   1400074d8:	int3   
   1400074d9:	int3   
   1400074da:	int3   
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	mov    rax,rsp
   1400074e3:	mov    QWORD PTR [rax+0x8],rbx
   1400074e7:	mov    QWORD PTR [rax+0x10],rbp
   1400074eb:	mov    QWORD PTR [rax+0x18],rsi
   1400074ef:	mov    QWORD PTR [rax+0x20],rdi
   1400074f3:	push   r15
   1400074f5:	sub    rsp,0x20
   1400074f9:	mov    eax,DWORD PTR [rip+0x8499]        # 0x14000f998
   1400074ff:	mov    rsi,rdx
   140007502:	mov    rbp,rcx
   140007505:	test   al,0x1
   140007507:	jne    0x14000757a
   140007509:	or     eax,0x1
   14000750c:	mov    DWORD PTR [rip+0x8486],eax        # 0x14000f998
   140007512:	lea    rax,[rip+0x41fb]        # 0x14000b714
   140007519:	mov    QWORD PTR [rip+0x8480],rax        # 0x14000f9a0
   140007520:	mov    eax,0x8
   140007525:	mov    WORD PTR [rip+0x847c],ax        # 0x14000f9a8
   14000752c:	lea    rax,[rip+0x41e5]        # 0x14000b718
   140007533:	mov    QWORD PTR [rip+0x8476],rax        # 0x14000f9b0
   14000753a:	mov    eax,0x4008
   14000753f:	mov    WORD PTR [rip+0x8472],ax        # 0x14000f9b8
   140007546:	lea    rax,[rip+0x41cf]        # 0x14000b71c
   14000754d:	mov    QWORD PTR [rip+0x846c],rax        # 0x14000f9c0
   140007554:	mov    eax,0x13
   140007559:	mov    WORD PTR [rip+0x8468],ax        # 0x14000f9c8
   140007560:	lea    rax,[rip+0x41b9]        # 0x14000b720
   140007567:	mov    QWORD PTR [rip+0x8462],rax        # 0x14000f9d0
   14000756e:	mov    eax,0x11
   140007573:	mov    WORD PTR [rip+0x845e],ax        # 0x14000f9d8
   14000757a:	lea    r15,[rip+0x841f]        # 0x14000f9a0
   140007581:	xor    ebx,ebx
   140007583:	mov    rdi,r15
   140007586:	mov    rdx,QWORD PTR [rdi]
   140007589:	mov    rcx,rbp
   14000758c:	call   QWORD PTR [rip+0x3b0e]        # 0x14000b0a0
   140007592:	test   eax,eax
   140007594:	je     0x1400075a9
   140007596:	inc    ebx
   140007598:	add    rdi,0x10
   14000759c:	movsxd rax,ebx
   14000759f:	cmp    rax,0x4
   1400075a3:	jb     0x140007586
   1400075a5:	xor    eax,eax
   1400075a7:	jmp    0x1400075bd
   1400075a9:	movsxd rcx,ebx
   1400075ac:	mov    eax,0x1
   1400075b1:	add    rcx,rcx
   1400075b4:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   1400075ba:	mov    WORD PTR [rsi],cx
   1400075bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075c2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400075c7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400075cc:	mov    rdi,QWORD PTR [rsp+0x48]
   1400075d1:	add    rsp,0x20
   1400075d5:	pop    r15
   1400075d7:	ret    
   1400075d8:	int3   
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	rex push rbx
   1400075e2:	push   rsi
   1400075e3:	push   rdi
   1400075e4:	push   r12
   1400075e6:	push   r13
   1400075e8:	push   r14
   1400075ea:	push   r15
   1400075ec:	mov    eax,0x21a0
   1400075f1:	call   0x14000a740
   1400075f6:	sub    rsp,rax
   1400075f9:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140007602:	mov    rax,QWORD PTR [rip+0x7a17]        # 0x14000f020
   140007609:	xor    rax,rsp
   14000760c:	mov    QWORD PTR [rsp+0x2190],rax
   140007614:	mov    r15,r8
   140007617:	mov    QWORD PTR [rsp+0x40],r8
   14000761c:	mov    r13,rdx
   14000761f:	mov    r12,rcx
   140007622:	mov    QWORD PTR [rsp+0x50],rcx
   140007627:	mov    QWORD PTR [rsp+0x48],rdx
   14000762c:	mov    QWORD PTR [rsp+0x60],r8
   140007631:	mov    QWORD PTR [rsp+0x70],r9
   140007636:	xor    ebx,ebx
   140007638:	mov    WORD PTR [rsp+0x30],bx
   14000763d:	lea    rdx,[rsp+0x190]
   140007645:	call   0x140007dec
   14000764a:	test   eax,eax
   14000764c:	js     0x140007acb
   140007652:	lea    rdx,[rsp+0x30]
   140007657:	lea    rcx,[rsp+0x190]
   14000765f:	call   0x1400074e0
   140007664:	test   eax,eax
   140007666:	jne    0x140007672
   140007668:	mov    eax,0x80020009
   14000766d:	jmp    0x140007acb
   140007672:	mov    rcx,QWORD PTR [r12]
   140007676:	movzx  eax,WORD PTR [rcx]
   140007679:	cmp    eax,0x20
   14000767c:	ja     0x14000769a
   14000767e:	movabs rdx,0x100002600
   140007688:	bt     rdx,rax
   14000768c:	jae    0x14000769a
   14000768e:	call   QWORD PTR [rip+0x3bac]        # 0x14000b240
   140007694:	mov    QWORD PTR [r12],rax
   140007698:	jmp    0x140007672
   14000769a:	lea    rdx,[rsp+0x190]
   1400076a2:	mov    rcx,r12
   1400076a5:	call   0x140007dec
   1400076aa:	test   eax,eax
   1400076ac:	js     0x140007acb
   1400076b2:	movzx  eax,WORD PTR [rsp+0x30]
   1400076b7:	cmp    eax,0x8
   1400076ba:	je     0x140007a65
   1400076c0:	cmp    eax,0x11
   1400076c3:	je     0x1400078aa
   1400076c9:	cmp    eax,0x13
   1400076cc:	je     0x140007872
   1400076d2:	cmp    eax,0x4008
   1400076d7:	jne    0x140007ab7
   1400076dd:	lea    rcx,[rsp+0x190]
   1400076e5:	or     rsi,0xffffffffffffffff
   1400076e9:	mov    rax,rsi
   1400076ec:	inc    rax
   1400076ef:	cmp    WORD PTR [rcx+rax*2],bx
   1400076f3:	jne    0x1400076ec
   1400076f5:	add    eax,0x2
   1400076f8:	mov    QWORD PTR [rsp+0x80],rbx
   140007700:	movsxd rcx,eax
   140007703:	test   eax,eax
   140007705:	je     0x140007743
   140007707:	xor    edx,edx
   140007709:	mov    rax,rsi
   14000770c:	div    rcx
   14000770f:	cmp    rax,0x2
   140007713:	jb     0x140007739
   140007715:	lea    rdx,[rcx+rcx*1]
   140007719:	cmp    rdx,0x100
   140007720:	jbe    0x140007743
   140007722:	lea    rcx,[rsp+0x80]
   14000772a:	call   0x140007084
   14000772f:	mov    rdi,QWORD PTR [rsp+0x80]
   140007737:	jmp    0x140007753
   140007739:	mov    ecx,0x80070057
   14000773e:	call   0x140008de4
   140007743:	lea    rdi,[rsp+0x88]
   14000774b:	mov    QWORD PTR [rsp+0x80],rdi
   140007753:	jmp    0x140007777
   140007755:	xor    ebx,ebx
   140007757:	or     rsi,0xffffffffffffffff
   14000775b:	mov    rdi,QWORD PTR [rsp+0x80]
   140007763:	mov    r12,QWORD PTR [rsp+0x50]
   140007768:	mov    r13,QWORD PTR [rsp+0x48]
   14000776d:	mov    rax,QWORD PTR [rsp+0x60]
   140007772:	mov    QWORD PTR [rsp+0x40],rax
   140007777:	test   rdi,rdi
   14000777a:	je     0x14000784a
   140007780:	lea    r14,[rsp+0x190]
   140007788:	cmp    WORD PTR [rsp+0x190],bx
   140007790:	je     0x1400077d7
   140007792:	mov    r15d,0x30
   140007798:	mov    rcx,r14
   14000779b:	call   QWORD PTR [rip+0x3a9f]        # 0x14000b240
   1400077a1:	movzx  ecx,WORD PTR [r14]
   1400077a5:	cmp    cx,0x5c
   1400077a9:	jne    0x1400077c6
   1400077ab:	cmp    WORD PTR [rax],r15w
   1400077af:	jne    0x1400077c6
   1400077b1:	mov    WORD PTR [rdi],bx
   1400077b4:	add    rdi,0x2
   1400077b8:	mov    rcx,rax
   1400077bb:	call   QWORD PTR [rip+0x3a7f]        # 0x14000b240
   1400077c1:	mov    r14,rax
   1400077c4:	jmp    0x1400077d1
   1400077c6:	mov    WORD PTR [rdi],cx
   1400077c9:	add    rdi,0x2
   1400077cd:	add    r14,0x2
   1400077d1:	cmp    WORD PTR [r14],bx
   1400077d5:	jne    0x140007798
   1400077d7:	mov    DWORD PTR [rdi],0x0
   1400077dd:	mov    eax,ebx
   1400077df:	mov    rdx,QWORD PTR [rsp+0x80]
   1400077e7:	test   rdx,rdx
   1400077ea:	setne  al
   1400077ed:	test   eax,eax
   1400077ef:	jne    0x1400077fc
   1400077f1:	mov    ecx,0x80004005
   1400077f6:	call   0x140008de4
   1400077fb:	int3   
   1400077fc:	mov    r9d,ebx
   1400077ff:	mov    r8,rdx
   140007802:	mov    rcx,rsi
   140007805:	inc    rcx
   140007808:	cmp    WORD PTR [r8+rcx*2],bx
   14000780d:	jne    0x140007805
   14000780f:	inc    ecx
   140007811:	lea    r8,[r8+rcx*2]
   140007815:	lea    r9d,[r9+rcx*2]
   140007819:	cmp    ecx,0x1
   14000781c:	jne    0x140007802
   14000781e:	mov    DWORD PTR [rsp+0x28],r9d
   140007823:	mov    QWORD PTR [rsp+0x20],rdx
   140007828:	lea    r9d,[rcx+0x6]
   14000782c:	xor    r8d,r8d
   14000782f:	mov    rdx,QWORD PTR [rsp+0x40]
   140007834:	mov    rcx,QWORD PTR [r13+0x0]
   140007838:	call   QWORD PTR [rip+0x37e2]        # 0x14000b020
   14000783e:	mov    esi,eax
   140007840:	mov    rdi,QWORD PTR [rsp+0x80]
   140007848:	jmp    0x14000784f
   14000784a:	mov    esi,0xe
   14000784f:	lea    rax,[rsp+0x88]
   140007857:	cmp    rdi,rax
   14000785a:	je     0x140007aaa
   140007860:	lea    rcx,[rsp+0x80]
   140007868:	call   0x140007054
   14000786d:	jmp    0x140007aaa
   140007872:	lea    r9,[rsp+0x30]
   140007877:	xor    r8d,r8d
   14000787a:	xor    edx,edx
   14000787c:	lea    rcx,[rsp+0x190]
   140007884:	call   QWORD PTR [rip+0x394e]        # 0x14000b1d8
   14000788a:	mov    eax,DWORD PTR [rsp+0x30]
   14000788e:	mov    DWORD PTR [rsp+0x38],eax
   140007892:	mov    DWORD PTR [rsp+0x28],0x4
   14000789a:	lea    rax,[rsp+0x38]
   14000789f:	mov    r9d,0x4
   1400078a5:	jmp    0x140007a93
   1400078aa:	lea    rax,[rsp+0x190]
   1400078b2:	or     rsi,0xffffffffffffffff
   1400078b6:	mov    rdi,rsi
   1400078b9:	inc    rdi
   1400078bc:	cmp    WORD PTR [rax+rdi*2],bx
   1400078c0:	jne    0x1400078b9
   1400078c2:	mov    DWORD PTR [rsp+0x38],edi
   1400078c6:	test   dil,0x1
   1400078ca:	je     0x1400078d6
   1400078cc:	mov    eax,0x80004005
   1400078d1:	jmp    0x140007acb
   1400078d6:	mov    eax,edi
   1400078d8:	cdq    
   1400078d9:	sub    eax,edx
   1400078db:	sar    eax,1
   1400078dd:	movsxd r14,eax
   1400078e0:	mov    DWORD PTR [rsp+0x30],r14d
   1400078e5:	mov    QWORD PTR [rsp+0x80],rbx
   1400078ed:	mov    rcx,r14
   1400078f0:	test   eax,eax
   1400078f2:	je     0x14000792f
   1400078f4:	xor    edx,edx
   1400078f6:	mov    rax,rsi
   1400078f9:	div    rcx
   1400078fc:	cmp    rax,0x1
   140007900:	jae    0x14000790c
   140007902:	mov    ecx,0x80070057
   140007907:	call   0x140008de4
   14000790c:	cmp    rcx,0x100
   140007913:	jbe    0x14000792f
   140007915:	mov    rdx,rcx
   140007918:	lea    rcx,[rsp+0x80]
   140007920:	call   0x140007084
   140007925:	mov    rcx,QWORD PTR [rsp+0x80]
   14000792d:	jmp    0x14000793f
   14000792f:	lea    rcx,[rsp+0x88]
   140007937:	mov    QWORD PTR [rsp+0x80],rcx
   14000793f:	mov    rsi,QWORD PTR [rsp+0x40]
   140007944:	jmp    0x140007968
   140007946:	xor    ebx,ebx
   140007948:	mov    edi,DWORD PTR [rsp+0x38]
   14000794c:	mov    r14d,DWORD PTR [rsp+0x30]
   140007951:	mov    rcx,QWORD PTR [rsp+0x80]
   140007959:	mov    r12,QWORD PTR [rsp+0x50]
   14000795e:	mov    r13,QWORD PTR [rsp+0x48]
   140007963:	mov    rsi,QWORD PTR [rsp+0x60]
   140007968:	test   rcx,rcx
   14000796b:	jne    0x140007990
   14000796d:	lea    rax,[rsp+0x88]
   140007975:	test   rax,rax
   140007978:	je     0x1400078cc
   14000797e:	lea    rcx,[rsp+0x80]
   140007986:	call   0x140007054
   14000798b:	jmp    0x1400078cc
   140007990:	movsxd r8,r14d
   140007993:	xor    edx,edx
   140007995:	call   0x14000a15c
   14000799a:	mov    r8d,ebx
   14000799d:	mov    r9,rbx
   1400079a0:	movsxd r11,edi
   1400079a3:	test   edi,edi
   1400079a5:	jle    0x140007a1a
   1400079a7:	mov    r15d,0x30
   1400079ad:	mov    eax,r8d
   1400079b0:	cdq    
   1400079b1:	sub    eax,edx
   1400079b3:	sar    eax,1
   1400079b5:	movsxd r10,eax
   1400079b8:	add    r10,QWORD PTR [rsp+0x80]
   1400079c0:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   1400079c9:	mov    eax,edx
   1400079cb:	cmp    edx,r15d
   1400079ce:	jl     0x1400079f6
   1400079d0:	cmp    eax,0x39
   1400079d3:	jle    0x1400079f1
   1400079d5:	cmp    eax,0x40
   1400079d8:	jle    0x1400079f6
   1400079da:	cmp    eax,0x46
   1400079dd:	jle    0x1400079ec
   1400079df:	add    eax,0xffffff9f
   1400079e2:	cmp    eax,0x5
   1400079e5:	ja     0x1400079f6
   1400079e7:	sub    dl,0x57
   1400079ea:	jmp    0x1400079f8
   1400079ec:	sub    dl,0x37
   1400079ef:	jmp    0x1400079f8
   1400079f1:	sub    dl,r15b
   1400079f4:	jmp    0x1400079f8
   1400079f6:	mov    dl,bl
   1400079f8:	mov    ecx,r8d
   1400079fb:	and    ecx,0x1
   1400079fe:	shl    ecx,0x2
   140007a01:	mov    eax,0x4
   140007a06:	sub    eax,ecx
   140007a08:	mov    cl,al
   140007a0a:	shl    dl,cl
   140007a0c:	or     BYTE PTR [r10],dl
   140007a0f:	inc    r8d
   140007a12:	inc    r9
   140007a15:	cmp    r9,r11
   140007a18:	jl     0x1400079ad
   140007a1a:	mov    DWORD PTR [rsp+0x28],r14d
   140007a1f:	mov    rax,QWORD PTR [rsp+0x80]
   140007a27:	mov    QWORD PTR [rsp+0x20],rax
   140007a2c:	mov    r9d,0x3
   140007a32:	xor    r8d,r8d
   140007a35:	mov    rdx,rsi
   140007a38:	mov    rcx,QWORD PTR [r13+0x0]
   140007a3c:	call   QWORD PTR [rip+0x35de]        # 0x14000b020
   140007a42:	mov    esi,eax
   140007a44:	lea    rax,[rsp+0x88]
   140007a4c:	cmp    QWORD PTR [rsp+0x80],rax
   140007a54:	je     0x140007aaa
   140007a56:	lea    rcx,[rsp+0x80]
   140007a5e:	call   0x140007054
   140007a63:	jmp    0x140007aaa
   140007a65:	lea    rax,[rsp+0x190]
   140007a6d:	or     rsi,0xffffffffffffffff
   140007a71:	inc    rsi
   140007a74:	cmp    WORD PTR [rax+rsi*2],bx
   140007a78:	jne    0x140007a71
   140007a7a:	lea    eax,[rsi*2+0x2]
   140007a81:	mov    DWORD PTR [rsp+0x28],eax
   140007a85:	lea    rax,[rsp+0x190]
   140007a8d:	mov    r9d,0x1
   140007a93:	mov    QWORD PTR [rsp+0x20],rax
   140007a98:	xor    r8d,r8d
   140007a9b:	mov    rdx,r15
   140007a9e:	mov    rcx,QWORD PTR [r13+0x0]
   140007aa2:	call   QWORD PTR [rip+0x3578]        # 0x14000b020
   140007aa8:	mov    esi,eax
   140007aaa:	test   esi,esi
   140007aac:	je     0x140007ab7
   140007aae:	mov    ecx,esi
   140007ab0:	call   0x140007dd8
   140007ab5:	jmp    0x140007acb
   140007ab7:	mov    rdx,QWORD PTR [rsp+0x70]
   140007abc:	mov    rcx,r12
   140007abf:	call   0x140007dec
   140007ac4:	test   eax,eax
   140007ac6:	cmovs  ebx,eax
   140007ac9:	mov    eax,ebx
   140007acb:	mov    rcx,QWORD PTR [rsp+0x2190]
   140007ad3:	xor    rcx,rsp
   140007ad6:	call   0x140009bc0
   140007adb:	add    rsp,0x21a0
   140007ae2:	pop    r15
   140007ae4:	pop    r14
   140007ae6:	pop    r13
   140007ae8:	pop    r12
   140007aea:	pop    rdi
   140007aeb:	pop    rsi
   140007aec:	pop    rbx
   140007aed:	ret    
   140007aee:	int3   
   140007aef:	int3   
   140007af0:	int3   
   140007af1:	int3   
   140007af2:	int3   
   140007af3:	int3   
   140007af4:	mov    QWORD PTR [rsp+0x18],rbx
   140007af9:	push   rdi
   140007afa:	mov    eax,0x2030
   140007aff:	call   0x14000a740
   140007b04:	sub    rsp,rax
   140007b07:	mov    rax,QWORD PTR [rip+0x7512]        # 0x14000f020
   140007b0e:	xor    rax,rsp
   140007b11:	mov    QWORD PTR [rsp+0x2020],rax
   140007b19:	cmp    WORD PTR [rdx],0x3d
   140007b1d:	mov    rdi,rdx
   140007b20:	mov    rbx,rcx
   140007b23:	jne    0x140007b74
   140007b25:	call   0x140007dec
   140007b2a:	test   eax,eax
   140007b2c:	js     0x140007b76
   140007b2e:	mov    rcx,QWORD PTR [rbx]
   140007b31:	movzx  eax,WORD PTR [rcx]
   140007b34:	cmp    eax,0x20
   140007b37:	ja     0x140007b54
   140007b39:	movabs rdx,0x100002600
   140007b43:	bt     rdx,rax
   140007b47:	jae    0x140007b54
   140007b49:	call   QWORD PTR [rip+0x36f1]        # 0x14000b240
   140007b4f:	mov    QWORD PTR [rbx],rax
   140007b52:	jmp    0x140007b2e
   140007b54:	lea    rdx,[rsp+0x20]
   140007b59:	mov    rcx,rbx
   140007b5c:	call   0x140007dec
   140007b61:	test   eax,eax
   140007b63:	js     0x140007b76
   140007b65:	mov    rdx,rdi
   140007b68:	mov    rcx,rbx
   140007b6b:	call   0x140007dec
   140007b70:	test   eax,eax
   140007b72:	js     0x140007b76
   140007b74:	xor    eax,eax
   140007b76:	mov    rcx,QWORD PTR [rsp+0x2020]
   140007b7e:	xor    rcx,rsp
   140007b81:	call   0x140009bc0
   140007b86:	mov    rbx,QWORD PTR [rsp+0x2050]
   140007b8e:	add    rsp,0x2030
   140007b95:	pop    rdi
   140007b96:	ret    
   140007b97:	int3   
   140007b98:	int3   
   140007b99:	int3   
   140007b9a:	int3   
   140007b9b:	int3   
   140007b9c:	int3   
   140007b9d:	int3   
   140007b9e:	int3   
   140007b9f:	int3   
   140007ba0:	mov    QWORD PTR [rsp+0x18],rbx
   140007ba5:	push   rbp
   140007ba6:	push   rsi
   140007ba7:	push   rdi
   140007ba8:	lea    rbp,[rsp-0x180]
   140007bb0:	sub    rsp,0x280
   140007bb7:	mov    rax,QWORD PTR [rip+0x7462]        # 0x14000f020
   140007bbe:	xor    rax,rsp
   140007bc1:	mov    QWORD PTR [rbp+0x170],rax
   140007bc8:	xor    eax,eax
   140007bca:	mov    rdi,rcx
   140007bcd:	mov    rcx,QWORD PTR [rcx]
   140007bd0:	mov    r9d,0x2001f
   140007bd6:	mov    QWORD PTR [rsp+0x48],rax
   140007bdb:	xor    r8d,r8d
   140007bde:	mov    QWORD PTR [rsp+0x50],rax
   140007be3:	mov    rsi,rdx
   140007be6:	mov    QWORD PTR [rsp+0x58],rax
   140007beb:	mov    QWORD PTR [rsp+0x60],rax
   140007bf0:	lea    rax,[rsp+0x60]
   140007bf5:	mov    QWORD PTR [rsp+0x20],rax
   140007bfa:	call   QWORD PTR [rip+0x3418]        # 0x14000b018
   140007c00:	mov    ebx,eax
   140007c02:	test   eax,eax
   140007c04:	jne    0x140007ca3
   140007c0a:	mov    rcx,QWORD PTR [rsp+0x48]
   140007c0f:	test   rcx,rcx
   140007c12:	je     0x140007c1c
   140007c14:	call   QWORD PTR [rip+0x33e6]        # 0x14000b000
   140007c1a:	mov    ebx,eax
   140007c1c:	mov    rcx,QWORD PTR [rsp+0x60]
   140007c21:	mov    QWORD PTR [rsp+0x48],rcx
   140007c26:	test   ebx,ebx
   140007c28:	jne    0x140007ca3
   140007c2a:	jmp    0x140007c46
   140007c2c:	lea    rdx,[rsp+0x70]
   140007c31:	lea    rcx,[rsp+0x48]
   140007c36:	call   0x140007ba0
   140007c3b:	mov    ebx,eax
   140007c3d:	test   eax,eax
   140007c3f:	jne    0x140007ca3
   140007c41:	mov    rcx,QWORD PTR [rsp+0x48]
   140007c46:	lea    rax,[rsp+0x68]
   140007c4b:	mov    DWORD PTR [rsp+0x40],0x100
   140007c53:	mov    QWORD PTR [rsp+0x38],rax
   140007c58:	lea    r9,[rsp+0x40]
   140007c5d:	and    QWORD PTR [rsp+0x30],0x0
   140007c63:	lea    r8,[rsp+0x70]
   140007c68:	and    QWORD PTR [rsp+0x28],0x0
   140007c6e:	xor    edx,edx
   140007c70:	and    QWORD PTR [rsp+0x20],0x0
   140007c76:	call   QWORD PTR [rip+0x3394]        # 0x14000b010
   140007c7c:	test   eax,eax
   140007c7e:	je     0x140007c2c
   140007c80:	mov    rcx,QWORD PTR [rsp+0x48]
   140007c85:	test   rcx,rcx
   140007c88:	je     0x140007c96
   140007c8a:	call   QWORD PTR [rip+0x3370]        # 0x14000b000
   140007c90:	and    QWORD PTR [rsp+0x48],0x0
   140007c96:	mov    rdx,rsi
   140007c99:	mov    rcx,rdi
   140007c9c:	call   0x140007d08
   140007ca1:	mov    ebx,eax
   140007ca3:	mov    rcx,QWORD PTR [rsp+0x48]
   140007ca8:	test   rcx,rcx
   140007cab:	je     0x140007cb3
   140007cad:	call   QWORD PTR [rip+0x334d]        # 0x14000b000
   140007cb3:	mov    eax,ebx
   140007cb5:	mov    rcx,QWORD PTR [rbp+0x170]
   140007cbc:	xor    rcx,rsp
   140007cbf:	call   0x140009bc0
   140007cc4:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140007ccc:	add    rsp,0x280
   140007cd3:	pop    rdi
   140007cd4:	pop    rsi
   140007cd5:	pop    rbp
   140007cd6:	ret    
   140007cd7:	int3   
   140007cd8:	int3   
   140007cd9:	int3   
   140007cda:	int3   
   140007cdb:	int3   
   140007cdc:	int3   
   140007cdd:	int3   
   140007cde:	int3   
   140007cdf:	int3   
   140007ce0:	rex push rbx
   140007ce2:	sub    rsp,0x20
   140007ce6:	mov    rbx,rcx
   140007ce9:	mov    rcx,QWORD PTR [rcx]
   140007cec:	test   rcx,rcx
   140007cef:	je     0x140007cfb
   140007cf1:	call   QWORD PTR [rip+0x3309]        # 0x14000b000
   140007cf7:	and    QWORD PTR [rbx],0x0
   140007cfb:	add    rsp,0x20
   140007cff:	pop    rbx
   140007d00:	ret    
   140007d01:	int3   
   140007d02:	int3   
   140007d03:	int3   
   140007d04:	int3   
   140007d05:	int3   
   140007d06:	int3   
   140007d07:	int3   
   140007d08:	mov    QWORD PTR [rsp+0x8],rbx
   140007d0d:	mov    QWORD PTR [rsp+0x10],rsi
   140007d12:	push   rdi
   140007d13:	sub    rsp,0x20
   140007d17:	cmp    QWORD PTR [rcx+0x8],0x0
   140007d1c:	mov    rsi,rdx
   140007d1f:	mov    rbx,rcx
   140007d22:	jne    0x140007d7e
   140007d24:	cmp    QWORD PTR [rcx+0x10],0x0
   140007d29:	jne    0x140007d7e
   140007d2b:	lea    rcx,[rip+0x4aae]        # 0x14000c7e0
   140007d32:	call   QWORD PTR [rip+0x33e8]        # 0x14000b120
   140007d38:	test   rax,rax
   140007d3b:	je     0x140007d53
   140007d3d:	lea    rdx,[rip+0x4af4]        # 0x14000c838
   140007d44:	mov    rcx,rax
   140007d47:	call   QWORD PTR [rip+0x33e3]        # 0x14000b130
   140007d4d:	mov    QWORD PTR [rbx+0x8],rax
   140007d51:	jmp    0x140007d7e
   140007d53:	xor    r8d,r8d
   140007d56:	lea    rcx,[rip+0x4aeb]        # 0x14000c848
   140007d5d:	xor    edx,edx
   140007d5f:	call   QWORD PTR [rip+0x33c3]        # 0x14000b128
   140007d65:	test   rax,rax
   140007d68:	je     0x140007d7e
   140007d6a:	lea    rdx,[rip+0x4af7]        # 0x14000c868
   140007d71:	mov    rcx,rax
   140007d74:	call   QWORD PTR [rip+0x33b6]        # 0x14000b130
   140007d7a:	mov    QWORD PTR [rbx+0x10],rax
   140007d7e:	mov    rdi,QWORD PTR [rbx+0x8]
   140007d82:	test   rdi,rdi
   140007d85:	je     0x140007da0
   140007d87:	mov    rcx,rdi
   140007d8a:	call   QWORD PTR [rip+0x3688]        # 0x14000b418
   140007d90:	mov    rcx,QWORD PTR [rbx]
   140007d93:	xor    r9d,r9d
   140007d96:	xor    r8d,r8d
   140007d99:	mov    rdx,rsi
   140007d9c:	call   rdi
   140007d9e:	jmp    0x140007dc2
   140007da0:	mov    rdi,QWORD PTR [rbx+0x10]
   140007da4:	test   rdi,rdi
   140007da7:	je     0x140007dbc
   140007da9:	mov    rcx,rdi
   140007dac:	call   QWORD PTR [rip+0x3666]        # 0x14000b418
   140007db2:	mov    rcx,QWORD PTR [rbx]
   140007db5:	mov    rdx,rsi
   140007db8:	call   rdi
   140007dba:	jmp    0x140007dc2
   140007dbc:	call   QWORD PTR [rip+0x3376]        # 0x14000b138
   140007dc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140007dc7:	mov    rsi,QWORD PTR [rsp+0x38]
   140007dcc:	add    rsp,0x20
   140007dd0:	pop    rdi
   140007dd1:	ret    
   140007dd2:	int3   
   140007dd3:	int3   
   140007dd4:	int3   
   140007dd5:	int3   
   140007dd6:	int3   
   140007dd7:	int3   
   140007dd8:	movzx  eax,cx
   140007ddb:	or     eax,0x80070000
   140007de0:	test   ecx,ecx
   140007de2:	cmovle eax,ecx
   140007de5:	ret    
   140007de6:	int3   
   140007de7:	int3   
   140007de8:	int3   
   140007de9:	int3   
   140007dea:	int3   
   140007deb:	int3   
   140007dec:	mov    rax,rsp
   140007def:	mov    QWORD PTR [rax+0x8],rbx
   140007df3:	mov    QWORD PTR [rax+0x10],rbp
   140007df7:	mov    QWORD PTR [rax+0x18],rsi
   140007dfb:	mov    QWORD PTR [rax+0x20],rdi
   140007dff:	push   r12
   140007e01:	push   r14
   140007e03:	push   r15
   140007e05:	sub    rsp,0x20
   140007e09:	mov    rbx,rdx
   140007e0c:	mov    rdi,rcx
   140007e0f:	movabs r12,0x100002600
   140007e19:	mov    rcx,QWORD PTR [rdi]
   140007e1c:	movzx  eax,WORD PTR [rcx]
   140007e1f:	cmp    eax,0x20
   140007e22:	ja     0x140007e35
   140007e24:	bt     r12,rax
   140007e28:	jae    0x140007e35
   140007e2a:	call   QWORD PTR [rip+0x3410]        # 0x14000b240
   140007e30:	mov    QWORD PTR [rdi],rax
   140007e33:	jmp    0x140007e19
   140007e35:	xor    r14d,r14d
   140007e38:	cmp    r14w,WORD PTR [rcx]
   140007e3c:	je     0x140007f52
   140007e42:	lea    r15d,[r14+0x27]
   140007e46:	lea    rbp,[rbx+0x2000]
   140007e4d:	cmp    r15w,WORD PTR [rcx]
   140007e51:	jne    0x140007ef2
   140007e57:	call   QWORD PTR [rip+0x33e3]        # 0x14000b240
   140007e5d:	mov    QWORD PTR [rdi],rax
   140007e60:	cmp    r14w,WORD PTR [rax]
   140007e64:	je     0x140007ed2
   140007e66:	mov    rcx,QWORD PTR [rdi]
   140007e69:	cmp    r15w,WORD PTR [rcx]
   140007e6d:	jne    0x140007e7b
   140007e6f:	call   QWORD PTR [rip+0x33cb]        # 0x14000b240
   140007e75:	cmp    r15w,WORD PTR [rax]
   140007e79:	jne    0x140007ed2
   140007e7b:	mov    rcx,QWORD PTR [rdi]
   140007e7e:	cmp    r15w,WORD PTR [rcx]
   140007e82:	jne    0x140007e8d
   140007e84:	call   QWORD PTR [rip+0x33b6]        # 0x14000b240
   140007e8a:	mov    QWORD PTR [rdi],rax
   140007e8d:	mov    rsi,QWORD PTR [rdi]
   140007e90:	mov    rcx,rsi
   140007e93:	call   QWORD PTR [rip+0x33a7]        # 0x14000b240
   140007e99:	mov    QWORD PTR [rdi],rax
   140007e9c:	sub    rax,rsi
   140007e9f:	sar    rax,1
   140007ea2:	lea    rcx,[rax+0x1]
   140007ea6:	lea    rcx,[rbx+rcx*2]
   140007eaa:	cmp    rcx,rbp
   140007ead:	jae    0x140007f52
   140007eb3:	test   eax,eax
   140007eb5:	jle    0x140007ecd
   140007eb7:	sub    rsi,rbx
   140007eba:	mov    ecx,eax
   140007ebc:	movzx  eax,WORD PTR [rsi+rbx*1]
   140007ec0:	mov    WORD PTR [rbx],ax
   140007ec3:	add    rbx,0x2
   140007ec7:	sub    rcx,0x1
   140007ecb:	jne    0x140007ebc
   140007ecd:	mov    rax,QWORD PTR [rdi]
   140007ed0:	jmp    0x140007e60
   140007ed2:	mov    rax,QWORD PTR [rdi]
   140007ed5:	cmp    r14w,WORD PTR [rax]
   140007ed9:	je     0x140007f52
   140007edb:	cmp    rbx,rbp
   140007ede:	jae    0x140007f52
   140007ee0:	mov    WORD PTR [rbx],r14w
   140007ee4:	mov    rcx,QWORD PTR [rdi]
   140007ee7:	call   QWORD PTR [rip+0x3353]        # 0x14000b240
   140007eed:	mov    QWORD PTR [rdi],rax
   140007ef0:	jmp    0x140007f4e
   140007ef2:	mov    rsi,QWORD PTR [rdi]
   140007ef5:	movzx  eax,WORD PTR [rsi]
   140007ef8:	cmp    eax,0x20
   140007efb:	ja     0x140007f03
   140007efd:	bt     r12,rax
   140007f01:	jb     0x140007f45
   140007f03:	mov    rcx,rsi
   140007f06:	call   QWORD PTR [rip+0x3334]        # 0x14000b240
   140007f0c:	mov    QWORD PTR [rdi],rax
   140007f0f:	sub    rax,rsi
   140007f12:	sar    rax,1
   140007f15:	lea    rcx,[rax+0x1]
   140007f19:	lea    rcx,[rbx+rcx*2]
   140007f1d:	cmp    rcx,rbp
   140007f20:	jae    0x140007f52
   140007f22:	test   eax,eax
   140007f24:	jle    0x140007f3c
   140007f26:	sub    rsi,rbx
   140007f29:	mov    ecx,eax
   140007f2b:	movzx  eax,WORD PTR [rsi+rbx*1]
   140007f2f:	mov    WORD PTR [rbx],ax
   140007f32:	add    rbx,0x2
   140007f36:	sub    rcx,0x1
   140007f3a:	jne    0x140007f2b
   140007f3c:	mov    rax,QWORD PTR [rdi]
   140007f3f:	cmp    r14w,WORD PTR [rax]
   140007f43:	jne    0x140007ef2
   140007f45:	cmp    rbx,rbp
   140007f48:	jae    0x140007f52
   140007f4a:	mov    WORD PTR [rbx],r14w
   140007f4e:	xor    eax,eax
   140007f50:	jmp    0x140007f57
   140007f52:	mov    eax,0x80020009
   140007f57:	mov    rbx,QWORD PTR [rsp+0x40]
   140007f5c:	mov    rbp,QWORD PTR [rsp+0x48]
   140007f61:	mov    rsi,QWORD PTR [rsp+0x50]
   140007f66:	mov    rdi,QWORD PTR [rsp+0x58]
   140007f6b:	add    rsp,0x20
   140007f6f:	pop    r15
   140007f71:	pop    r14
   140007f73:	pop    r12
   140007f75:	ret    
   140007f76:	int3   
   140007f77:	int3   
   140007f78:	int3   
   140007f79:	int3   
   140007f7a:	int3   
   140007f7b:	int3   
   140007f7c:	rex push rbp
   140007f7e:	push   rbx
   140007f7f:	push   rsi
   140007f80:	push   rdi
   140007f81:	lea    rbp,[rsp-0x21f8]
   140007f89:	mov    eax,0x22f8
   140007f8e:	call   0x14000a740
   140007f93:	sub    rsp,rax
   140007f96:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140007f9e:	mov    rax,QWORD PTR [rip+0x707b]        # 0x14000f020
   140007fa5:	xor    rax,rsp
   140007fa8:	mov    QWORD PTR [rbp+0x21e0],rax
   140007faf:	mov    DWORD PTR [rsp+0x78],r9d
   140007fb4:	mov    QWORD PTR [rbp-0x78],r8
   140007fb8:	mov    rdi,rdx
   140007fbb:	mov    rax,rcx
   140007fbe:	mov    QWORD PTR [rsp+0x70],rcx
   140007fc3:	xor    ecx,ecx
   140007fc5:	mov    esi,ecx
   140007fc7:	mov    QWORD PTR [rbp-0x70],rcx
   140007fcb:	mov    QWORD PTR [rbp-0x68],rcx
   140007fcf:	mov    QWORD PTR [rbp-0x60],rcx
   140007fd3:	mov    ecx,DWORD PTR [rbp+0x2240]
   140007fd9:	mov    DWORD PTR [rbp-0x40],ecx
   140007fdc:	mov    rcx,rax
   140007fdf:	call   0x140007dec
   140007fe4:	test   eax,eax
   140007fe6:	mov    ebx,eax
   140007fe8:	js     0x140008728
   140007fee:	cmp    WORD PTR [rdi],0x7d
   140007ff2:	je     0x140008728
   140007ff8:	mov    eax,0x1
   140007ffd:	mov    DWORD PTR [rsp+0x68],eax
   140008001:	lea    rdx,[rip+0x3758]        # 0x14000b760
   140008008:	mov    rcx,rdi
   14000800b:	call   QWORD PTR [rip+0x308f]        # 0x14000b0a0
   140008011:	xor    ecx,ecx
   140008013:	mov    ebx,ecx
   140008015:	test   eax,eax
   140008017:	sete   bl
   14000801a:	mov    DWORD PTR [rsp+0x60],ebx
   14000801e:	lea    rdx,[rip+0x370b]        # 0x14000b730
   140008025:	mov    rcx,rdi
   140008028:	call   QWORD PTR [rip+0x3072]        # 0x14000b0a0
   14000802e:	test   eax,eax
   140008030:	je     0x14000803a
   140008032:	test   ebx,ebx
   140008034:	je     0x1400080ff
   14000803a:	mov    rdx,rdi
   14000803d:	mov    rcx,QWORD PTR [rsp+0x70]
   140008042:	call   0x140007dec
   140008047:	mov    ebx,eax
   140008049:	xor    edx,edx
   14000804b:	test   eax,eax
   14000804d:	js     0x140008728
   140008053:	cmp    DWORD PTR [rsp+0x78],edx
   140008057:	je     0x1400080ff
   14000805d:	mov    QWORD PTR [rbp-0x58],rdx
   140008061:	mov    QWORD PTR [rbp-0x50],rdx
   140008065:	mov    QWORD PTR [rbp-0x48],rdx
   140008069:	mov    rcx,rdi
   14000806c:	movzx  eax,WORD PTR [rdi]
   14000806f:	jmp    0x140008083
   140008071:	cmp    ax,0x5c
   140008075:	je     0x14000808a
   140008077:	call   QWORD PTR [rip+0x31c3]        # 0x14000b240
   14000807d:	mov    rcx,rax
   140008080:	movzx  eax,WORD PTR [rax]
   140008083:	test   ax,ax
   140008086:	jne    0x140008071
   140008088:	jmp    0x140008093
   14000808a:	test   rcx,rcx
   14000808d:	jne    0x1400086f7
   140008093:	lea    rbx,[rip+0x37d6]        # 0x14000b870
   14000809a:	mov    rdx,QWORD PTR [rbx]
   14000809d:	mov    rcx,rdi
   1400080a0:	call   QWORD PTR [rip+0x2ffa]        # 0x14000b0a0
   1400080a6:	test   eax,eax
   1400080a8:	je     0x1400080ce
   1400080aa:	add    rbx,0x8
   1400080ae:	lea    rax,[rip+0x381b]        # 0x14000b8d0
   1400080b5:	cmp    rbx,rax
   1400080b8:	jl     0x14000809a
   1400080ba:	mov    rax,QWORD PTR [rbp-0x78]
   1400080be:	mov    QWORD PTR [rbp-0x58],rax
   1400080c2:	mov    rdx,rdi
   1400080c5:	lea    rcx,[rbp-0x58]
   1400080c9:	call   0x140007ba0
   1400080ce:	xor    eax,eax
   1400080d0:	cmp    DWORD PTR [rsp+0x60],eax
   1400080d4:	je     0x1400080ff
   1400080d6:	mov    rdx,rdi
   1400080d9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400080de:	call   0x140007dec
   1400080e3:	mov    ebx,eax
   1400080e5:	test   eax,eax
   1400080e7:	js     0x140008728
   1400080ed:	mov    rdx,rdi
   1400080f0:	mov    rcx,QWORD PTR [rsp+0x70]
   1400080f5:	call   0x140007af4
   1400080fa:	jmp    0x1400083a8
   1400080ff:	lea    rdx,[rip+0x3642]        # 0x14000b748
   140008106:	mov    rcx,rdi
   140008109:	call   QWORD PTR [rip+0x2f91]        # 0x14000b0a0
   14000810f:	xor    ecx,ecx
   140008111:	test   eax,eax
   140008113:	jne    0x140008130
   140008115:	mov    DWORD PTR [rsp+0x68],ecx
   140008119:	mov    rdx,rdi
   14000811c:	mov    rcx,QWORD PTR [rsp+0x70]
   140008121:	call   0x140007dec
   140008126:	mov    ebx,eax
   140008128:	test   eax,eax
   14000812a:	js     0x140008728
   140008130:	lea    rdx,[rip+0x35f1]        # 0x14000b728
   140008137:	mov    rcx,rdi
   14000813a:	call   QWORD PTR [rip+0x2f60]        # 0x14000b0a0
   140008140:	xor    edx,edx
   140008142:	test   eax,eax
   140008144:	jne    0x14000823b
   14000814a:	lea    rdx,[rbp+0x1e0]
   140008151:	mov    rcx,QWORD PTR [rsp+0x70]
   140008156:	call   0x140007dec
   14000815b:	mov    ebx,eax
   14000815d:	test   eax,eax
   14000815f:	js     0x140008728
   140008165:	mov    rdx,rdi
   140008168:	mov    rcx,QWORD PTR [rsp+0x70]
   14000816d:	call   0x140007dec
   140008172:	mov    ebx,eax
   140008174:	xor    edx,edx
   140008176:	test   eax,eax
   140008178:	js     0x140008728
   14000817e:	cmp    WORD PTR [rdi],0x3d
   140008182:	jne    0x1400086f7
   140008188:	cmp    DWORD PTR [rsp+0x78],edx
   14000818c:	je     0x1400081bf
   14000818e:	mov    QWORD PTR [rbp-0x50],rdx
   140008192:	mov    QWORD PTR [rbp-0x48],rdx
   140008196:	mov    rax,QWORD PTR [rbp-0x78]
   14000819a:	mov    QWORD PTR [rbp-0x58],rax
   14000819e:	mov    r9,rdi
   1400081a1:	lea    r8,[rbp+0x1e0]
   1400081a8:	lea    rdx,[rbp-0x58]
   1400081ac:	mov    rcx,QWORD PTR [rsp+0x70]
   1400081b1:	call   0x1400075e0
   1400081b6:	mov    ebx,eax
   1400081b8:	xor    edx,edx
   1400081ba:	jmp    0x1400083ac
   1400081bf:	cmp    DWORD PTR [rbp+0x2240],edx
   1400081c5:	jne    0x140008229
   1400081c7:	cmp    DWORD PTR [rsp+0x68],edx
   1400081cb:	je     0x140008229
   1400081cd:	mov    QWORD PTR [rsp+0x68],rdx
   1400081d2:	lea    rax,[rsp+0x68]
   1400081d7:	mov    QWORD PTR [rsp+0x20],rax
   1400081dc:	mov    r9d,0x20006
   1400081e2:	xor    r8d,r8d
   1400081e5:	mov    rcx,QWORD PTR [rbp-0x78]
   1400081e9:	call   QWORD PTR [rip+0x2e29]        # 0x14000b018
   1400081ef:	test   eax,eax
   1400081f1:	jne    0x14000871f
   1400081f7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400081fc:	mov    QWORD PTR [rbp-0x80],rbx
   140008200:	lea    rdx,[rbp+0x1e0]
   140008207:	mov    rcx,rbx
   14000820a:	call   QWORD PTR [rip+0x2e20]        # 0x14000b030
   140008210:	test   eax,0xfffffffd
   140008215:	jne    0x1400086dd
   14000821b:	test   rbx,rbx
   14000821e:	je     0x140008229
   140008220:	mov    rcx,rbx
   140008223:	call   QWORD PTR [rip+0x2dd7]        # 0x14000b000
   140008229:	mov    rdx,rdi
   14000822c:	mov    rcx,QWORD PTR [rsp+0x70]
   140008231:	call   0x140007af4
   140008236:	jmp    0x140007fe4
   14000823b:	mov    rcx,rdi
   14000823e:	movzx  eax,WORD PTR [rdi]
   140008241:	jmp    0x140008257
   140008243:	cmp    ax,0x5c
   140008247:	je     0x14000825e
   140008249:	call   QWORD PTR [rip+0x2ff1]        # 0x14000b240
   14000824f:	mov    rcx,rax
   140008252:	movzx  eax,WORD PTR [rax]
   140008255:	xor    edx,edx
   140008257:	test   ax,ax
   14000825a:	jne    0x140008243
   14000825c:	jmp    0x140008267
   14000825e:	test   rcx,rcx
   140008261:	jne    0x1400086f7
   140008267:	cmp    DWORD PTR [rsp+0x78],edx
   14000826b:	je     0x140008409
   140008271:	mov    QWORD PTR [rsp+0x68],rdx
   140008276:	lea    rax,[rsp+0x68]
   14000827b:	mov    QWORD PTR [rsp+0x20],rax
   140008280:	mov    r9d,0x2001f
   140008286:	xor    r8d,r8d
   140008289:	mov    rdx,rdi
   14000828c:	mov    rbx,QWORD PTR [rbp-0x78]
   140008290:	mov    rcx,rbx
   140008293:	call   QWORD PTR [rip+0x2d7f]        # 0x14000b018
   140008299:	xor    ecx,ecx
   14000829b:	test   eax,eax
   14000829d:	jne    0x1400082c2
   14000829f:	mov    eax,ecx
   1400082a1:	test   rsi,rsi
   1400082a4:	je     0x1400082b1
   1400082a6:	mov    rcx,rsi
   1400082a9:	call   QWORD PTR [rip+0x2d51]        # 0x14000b000
   1400082af:	xor    ecx,ecx
   1400082b1:	mov    rsi,QWORD PTR [rsp+0x68]
   1400082b6:	mov    QWORD PTR [rbp-0x70],rsi
   1400082ba:	test   eax,eax
   1400082bc:	je     0x140008371
   1400082c2:	mov    QWORD PTR [rsp+0x68],rcx
   1400082c7:	lea    rax,[rsp+0x68]
   1400082cc:	mov    QWORD PTR [rsp+0x20],rax
   1400082d1:	mov    r9d,0x20019
   1400082d7:	xor    r8d,r8d
   1400082da:	mov    rdx,rdi
   1400082dd:	mov    rcx,rbx
   1400082e0:	call   QWORD PTR [rip+0x2d32]        # 0x14000b018
   1400082e6:	xor    ecx,ecx
   1400082e8:	test   eax,eax
   1400082ea:	jne    0x14000830b
   1400082ec:	mov    eax,ecx
   1400082ee:	test   rsi,rsi
   1400082f1:	je     0x1400082fe
   1400082f3:	mov    rcx,rsi
   1400082f6:	call   QWORD PTR [rip+0x2d04]        # 0x14000b000
   1400082fc:	xor    ecx,ecx
   1400082fe:	mov    rsi,QWORD PTR [rsp+0x68]
   140008303:	mov    QWORD PTR [rbp-0x70],rsi
   140008307:	test   eax,eax
   140008309:	je     0x140008371
   14000830b:	mov    QWORD PTR [rsp+0x68],rcx
   140008310:	lea    rax,[rbp-0x3c]
   140008314:	mov    QWORD PTR [rsp+0x40],rax
   140008319:	lea    rax,[rsp+0x68]
   14000831e:	mov    QWORD PTR [rsp+0x38],rax
   140008323:	mov    QWORD PTR [rsp+0x30],rcx
   140008328:	mov    DWORD PTR [rsp+0x28],0x2001f
   140008330:	mov    DWORD PTR [rsp+0x20],ecx
   140008334:	xor    r9d,r9d
   140008337:	xor    r8d,r8d
   14000833a:	mov    rdx,rdi
   14000833d:	mov    rcx,rbx
   140008340:	call   QWORD PTR [rip+0x2ce2]        # 0x14000b028
   140008346:	xor    edx,edx
   140008348:	test   eax,eax
   14000834a:	jne    0x14000871f
   140008350:	mov    eax,edx
   140008352:	test   rsi,rsi
   140008355:	je     0x140008360
   140008357:	mov    rcx,rsi
   14000835a:	call   QWORD PTR [rip+0x2ca0]        # 0x14000b000
   140008360:	mov    rsi,QWORD PTR [rsp+0x68]
   140008365:	mov    QWORD PTR [rbp-0x70],rsi
   140008369:	test   eax,eax
   14000836b:	jne    0x14000871f
   140008371:	mov    rdx,rdi
   140008374:	mov    rcx,QWORD PTR [rsp+0x70]
   140008379:	call   0x140007dec
   14000837e:	mov    ebx,eax
   140008380:	xor    edx,edx
   140008382:	test   eax,eax
   140008384:	js     0x140008728
   14000838a:	cmp    WORD PTR [rdi],0x3d
   14000838e:	jne    0x1400083b4
   140008390:	mov    r9,rdi
   140008393:	xor    r8d,r8d
   140008396:	lea    rdx,[rbp-0x70]
   14000839a:	mov    rcx,QWORD PTR [rsp+0x70]
   14000839f:	call   0x1400075e0
   1400083a4:	mov    rsi,QWORD PTR [rbp-0x70]
   1400083a8:	xor    edx,edx
   1400083aa:	mov    ebx,eax
   1400083ac:	test   eax,eax
   1400083ae:	js     0x140008728
   1400083b4:	cmp    WORD PTR [rdi],0x7b
   1400083b8:	jne    0x140007fee
   1400083be:	or     rax,0xffffffffffffffff
   1400083c2:	inc    rax
   1400083c5:	cmp    WORD PTR [rdi+rax*2],dx
   1400083c9:	jne    0x1400083c2
   1400083cb:	mov    ecx,0x1
   1400083d0:	cmp    rax,rcx
   1400083d3:	jne    0x140007fee
   1400083d9:	mov    DWORD PTR [rsp+0x20],edx
   1400083dd:	mov    r9d,DWORD PTR [rsp+0x78]
   1400083e2:	mov    r8,rsi
   1400083e5:	mov    rdx,rdi
   1400083e8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400083ed:	call   0x140007f7c
   1400083f2:	mov    ebx,eax
   1400083f4:	test   eax,eax
   1400083f6:	js     0x140008728
   1400083fc:	mov    rdx,rdi
   1400083ff:	mov    rcx,QWORD PTR [rsp+0x70]
   140008404:	jmp    0x140007fdf
   140008409:	mov    ebx,DWORD PTR [rbp+0x2240]
   14000840f:	test   ebx,ebx
   140008411:	jne    0x140008462
   140008413:	mov    QWORD PTR [rbp-0x80],rdx
   140008417:	lea    rax,[rbp-0x80]
   14000841b:	mov    QWORD PTR [rsp+0x20],rax
   140008420:	mov    r9d,0x20019
   140008426:	xor    r8d,r8d
   140008429:	mov    rdx,rdi
   14000842c:	mov    rcx,QWORD PTR [rbp-0x78]
   140008430:	call   QWORD PTR [rip+0x2be2]        # 0x14000b018
   140008436:	mov    DWORD PTR [rsp+0x60],eax
   14000843a:	xor    edx,edx
   14000843c:	test   eax,eax
   14000843e:	jne    0x14000846d
   140008440:	mov    eax,edx
   140008442:	mov    DWORD PTR [rsp+0x60],edx
   140008446:	test   rsi,rsi
   140008449:	je     0x140008458
   14000844b:	mov    rcx,rsi
   14000844e:	call   QWORD PTR [rip+0x2bac]        # 0x14000b000
   140008454:	mov    DWORD PTR [rsp+0x60],eax
   140008458:	mov    rsi,QWORD PTR [rbp-0x80]
   14000845c:	mov    QWORD PTR [rbp-0x70],rsi
   140008460:	jmp    0x14000846b
   140008462:	mov    eax,0x2
   140008467:	mov    DWORD PTR [rsp+0x60],eax
   14000846b:	test   eax,eax
   14000846d:	mov    eax,0x1
   140008472:	cmovne ebx,eax
   140008475:	mov    DWORD PTR [rbp+0x2240],ebx
   14000847b:	or     r9,0xffffffffffffffff
   14000847f:	mov    r8,rdi
   140008482:	mov    edx,0x104
   140008487:	lea    rcx,[rbp-0x30]
   14000848b:	call   QWORD PTR [rip+0x2eff]        # 0x14000b390
   140008491:	test   eax,eax
   140008493:	je     0x1400084b9
   140008495:	cmp    eax,0xc
   140008498:	je     0x140008714
   14000849e:	cmp    eax,0x16
   1400084a1:	je     0x140008709
   1400084a7:	cmp    eax,0x22
   1400084aa:	je     0x140008709
   1400084b0:	cmp    eax,0x50
   1400084b3:	jne    0x1400086fe
   1400084b9:	mov    rdx,rdi
   1400084bc:	mov    rcx,QWORD PTR [rsp+0x70]
   1400084c1:	call   0x140007dec
   1400084c6:	mov    ebx,eax
   1400084c8:	test   eax,eax
   1400084ca:	js     0x140008728
   1400084d0:	mov    rdx,rdi
   1400084d3:	mov    rcx,QWORD PTR [rsp+0x70]
   1400084d8:	call   0x140007af4
   1400084dd:	mov    ebx,eax
   1400084df:	xor    edx,edx
   1400084e1:	test   eax,eax
   1400084e3:	js     0x140008728
   1400084e9:	cmp    WORD PTR [rdi],0x7b
   1400084ed:	jne    0x140008550
   1400084ef:	or     rax,0xffffffffffffffff
   1400084f3:	inc    rax
   1400084f6:	cmp    WORD PTR [rdi+rax*2],dx
   1400084fa:	jne    0x1400084f3
   1400084fc:	mov    ecx,0x1
   140008501:	cmp    rax,rcx
   140008504:	jne    0x140008550
   140008506:	mov    eax,DWORD PTR [rbp+0x2240]
   14000850c:	mov    DWORD PTR [rsp+0x20],eax
   140008510:	xor    r9d,r9d
   140008513:	mov    r8,rsi
   140008516:	mov    rdx,rdi
   140008519:	mov    rcx,QWORD PTR [rsp+0x70]
   14000851e:	call   0x140007f7c
   140008523:	mov    ebx,eax
   140008525:	xor    edx,edx
   140008527:	test   eax,eax
   140008529:	jns    0x140008537
   14000852b:	cmp    DWORD PTR [rbp+0x2240],edx
   140008531:	je     0x140008728
   140008537:	mov    rdx,rdi
   14000853a:	mov    rcx,QWORD PTR [rsp+0x70]
   14000853f:	call   0x140007dec
   140008544:	mov    ebx,eax
   140008546:	xor    edx,edx
   140008548:	test   eax,eax
   14000854a:	js     0x140008728
   140008550:	mov    eax,DWORD PTR [rbp-0x40]
   140008553:	mov    DWORD PTR [rbp+0x2240],eax
   140008559:	mov    ecx,DWORD PTR [rsp+0x60]
   14000855d:	cmp    ecx,0x2
   140008560:	je     0x140007fee
   140008566:	test   ecx,ecx
   140008568:	je     0x140008577
   14000856a:	test   eax,eax
   14000856c:	je     0x140008721
   140008572:	jmp    0x140007fee
   140008577:	test   eax,eax
   140008579:	je     0x14000862e
   14000857f:	mov    DWORD PTR [rsp+0x60],edx
   140008583:	mov    QWORD PTR [rsp+0x58],rdx
   140008588:	mov    QWORD PTR [rsp+0x50],rdx
   14000858d:	mov    QWORD PTR [rsp+0x48],rdx
   140008592:	mov    QWORD PTR [rsp+0x40],rdx
   140008597:	mov    QWORD PTR [rsp+0x38],rdx
   14000859c:	mov    QWORD PTR [rsp+0x30],rdx
   1400085a1:	mov    QWORD PTR [rsp+0x28],rdx
   1400085a6:	lea    rax,[rsp+0x60]
   1400085ab:	mov    QWORD PTR [rsp+0x20],rax
   1400085b0:	xor    r9d,r9d
   1400085b3:	xor    r8d,r8d
   1400085b6:	xor    edx,edx
   1400085b8:	mov    rcx,rsi
   1400085bb:	call   QWORD PTR [rip+0x2a47]        # 0x14000b008
   1400085c1:	xor    edx,edx
   1400085c3:	test   eax,eax
   1400085c5:	jne    0x14000862e
   1400085c7:	mov    eax,edx
   1400085c9:	cmp    DWORD PTR [rsp+0x60],edx
   1400085cd:	seta   al
   1400085d0:	test   eax,eax
   1400085d2:	je     0x14000862e
   1400085d4:	lea    rax,[rip+0x3295]        # 0x14000b870
   1400085db:	mov    QWORD PTR [rbp-0x80],rax
   1400085df:	mov    rdx,QWORD PTR [rax]
   1400085e2:	lea    rcx,[rbp-0x30]
   1400085e6:	call   QWORD PTR [rip+0x2ab4]        # 0x14000b0a0
   1400085ec:	xor    edx,edx
   1400085ee:	test   eax,eax
   1400085f0:	je     0x140007fee
   1400085f6:	mov    rax,QWORD PTR [rbp-0x80]
   1400085fa:	add    rax,0x8
   1400085fe:	mov    QWORD PTR [rbp-0x80],rax
   140008602:	lea    rcx,[rip+0x32c7]        # 0x14000b8d0
   140008609:	cmp    rax,rcx
   14000860c:	jl     0x1400085df
   14000860e:	cmp    DWORD PTR [rsp+0x68],edx
   140008612:	je     0x140007fee
   140008618:	lea    rdx,[rbp-0x30]
   14000861c:	lea    rcx,[rbp-0x70]
   140008620:	call   0x140007ba0
   140008625:	mov    rsi,QWORD PTR [rbp-0x70]
   140008629:	jmp    0x140007fee
   14000862e:	mov    DWORD PTR [rsp+0x60],edx
   140008632:	mov    QWORD PTR [rsp+0x58],rdx
   140008637:	mov    QWORD PTR [rsp+0x50],rdx
   14000863c:	mov    QWORD PTR [rsp+0x48],rdx
   140008641:	mov    QWORD PTR [rsp+0x40],rdx
   140008646:	mov    QWORD PTR [rsp+0x38],rdx
   14000864b:	mov    QWORD PTR [rsp+0x30],rdx
   140008650:	mov    QWORD PTR [rsp+0x28],rdx
   140008655:	lea    rax,[rsp+0x60]
   14000865a:	mov    QWORD PTR [rsp+0x20],rax
   14000865f:	xor    r9d,r9d
   140008662:	xor    r8d,r8d
   140008665:	xor    edx,edx
   140008667:	mov    rcx,rsi
   14000866a:	call   QWORD PTR [rip+0x2998]        # 0x14000b008
   140008670:	xor    edx,edx
   140008672:	test   eax,eax
   140008674:	je     0x14000867c
   140008676:	mov    DWORD PTR [rsp+0x60],edx
   14000867a:	jmp    0x140008689
   14000867c:	mov    eax,edx
   14000867e:	cmp    DWORD PTR [rsp+0x60],edx
   140008682:	seta   al
   140008685:	mov    DWORD PTR [rsp+0x60],eax
   140008689:	test   rsi,rsi
   14000868c:	je     0x1400086a3
   14000868e:	mov    rcx,rsi
   140008691:	call   QWORD PTR [rip+0x2969]        # 0x14000b000
   140008697:	xor    edx,edx
   140008699:	mov    esi,edx
   14000869b:	mov    QWORD PTR [rbp-0x70],rdx
   14000869f:	test   eax,eax
   1400086a1:	jne    0x14000871f
   1400086a3:	cmp    DWORD PTR [rsp+0x68],edx
   1400086a7:	je     0x140007fee
   1400086ad:	cmp    DWORD PTR [rsp+0x60],edx
   1400086b1:	jne    0x140007fee
   1400086b7:	mov    QWORD PTR [rbp-0x50],rdx
   1400086bb:	mov    QWORD PTR [rbp-0x48],rdx
   1400086bf:	mov    rax,QWORD PTR [rbp-0x78]
   1400086c3:	mov    QWORD PTR [rbp-0x58],rax
   1400086c7:	lea    rdx,[rbp-0x30]
   1400086cb:	lea    rcx,[rbp-0x58]
   1400086cf:	call   0x140007d08
   1400086d4:	test   eax,eax
   1400086d6:	jne    0x14000871f
   1400086d8:	jmp    0x140007fee
   1400086dd:	mov    ecx,eax
   1400086df:	call   0x140007dd8
   1400086e4:	mov    ebx,eax
   1400086e6:	mov    rcx,QWORD PTR [rbp-0x80]
   1400086ea:	test   rcx,rcx
   1400086ed:	je     0x140008728
   1400086ef:	call   QWORD PTR [rip+0x290b]        # 0x14000b000
   1400086f5:	jmp    0x140008728
   1400086f7:	mov    ebx,0x80020009
   1400086fc:	jmp    0x140008728
   1400086fe:	mov    ecx,0x80004005
   140008703:	call   0x140008de4
   140008708:	int3   
   140008709:	mov    ecx,0x80070057
   14000870e:	call   0x140008de4
   140008713:	int3   
   140008714:	mov    ecx,0x8007000e
   140008719:	call   0x140008de4
   14000871e:	int3   
   14000871f:	mov    ecx,eax
   140008721:	call   0x140007dd8
   140008726:	mov    ebx,eax
   140008728:	test   rsi,rsi
   14000872b:	je     0x140008736
   14000872d:	mov    rcx,rsi
   140008730:	call   QWORD PTR [rip+0x28ca]        # 0x14000b000
   140008736:	mov    eax,ebx
   140008738:	mov    rcx,QWORD PTR [rbp+0x21e0]
   14000873f:	xor    rcx,rsp
   140008742:	call   0x140009bc0
   140008747:	add    rsp,0x22f8
   14000874e:	pop    rdi
   14000874f:	pop    rsi
   140008750:	pop    rbx
   140008751:	pop    rbp
   140008752:	ret    
   140008753:	int3   
   140008754:	int3   
   140008755:	int3   
   140008756:	int3   
   140008757:	int3   
   140008758:	int3   
   140008759:	int3   
   14000875a:	int3   
   14000875b:	int3   
   14000875c:	mov    QWORD PTR [rsp+0x20],rbx
   140008761:	push   rbp
   140008762:	push   rsi
   140008763:	push   rdi
   140008764:	push   r12
   140008766:	push   r13
   140008768:	push   r14
   14000876a:	push   r15
   14000876c:	mov    eax,0x2050
   140008771:	call   0x14000a740
   140008776:	sub    rsp,rax
   140008779:	mov    rax,QWORD PTR [rip+0x68a0]        # 0x14000f020
   140008780:	xor    rax,rsp
   140008783:	mov    QWORD PTR [rsp+0x2040],rax
   14000878b:	xor    r12d,r12d
   14000878e:	mov    r15d,r8d
   140008791:	mov    QWORD PTR [rsp+0x30],r12
   140008796:	mov    rdi,rcx
   140008799:	mov    ebp,r12d
   14000879c:	test   rdx,rdx
   14000879f:	je     0x1400087b4
   1400087a1:	lea    r8,[rsp+0x30]
   1400087a6:	call   0x14000722c
   1400087ab:	mov    rbp,QWORD PTR [rsp+0x30]
   1400087b0:	mov    ebx,eax
   1400087b2:	jmp    0x1400087b9
   1400087b4:	mov    ebx,0x80004003
   1400087b9:	test   ebx,ebx
   1400087bb:	js     0x1400088e7
   1400087c1:	mov    QWORD PTR [rdi],rbp
   1400087c4:	cmp    r12w,WORD PTR [rbp+0x0]
   1400087c9:	je     0x1400088de
   1400087cf:	lea    r13,[rip+0x3f2a]        # 0x14000c700
   1400087d6:	lea    rdx,[rsp+0x40]
   1400087db:	mov    rcx,rdi
   1400087de:	call   0x140007dec
   1400087e3:	mov    ebx,eax
   1400087e5:	test   eax,eax
   1400087e7:	js     0x1400088de
   1400087ed:	mov    esi,r12d
   1400087f0:	mov    rbx,r12
   1400087f3:	mov    r14,r13
   1400087f6:	mov    rdx,QWORD PTR [r14]
   1400087f9:	lea    rcx,[rsp+0x40]
   1400087fe:	call   QWORD PTR [rip+0x289c]        # 0x14000b0a0
   140008804:	test   eax,eax
   140008806:	je     0x14000881f
   140008808:	inc    esi
   14000880a:	inc    rbx
   14000880d:	movsxd rax,esi
   140008810:	add    r14,0x10
   140008814:	cmp    rax,0xe
   140008818:	jb     0x1400087f6
   14000881a:	mov    rsi,r12
   14000881d:	jmp    0x140008827
   14000881f:	add    rbx,rbx
   140008822:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   140008827:	test   rsi,rsi
   14000882a:	je     0x1400088d9
   140008830:	lea    rdx,[rsp+0x40]
   140008835:	mov    rcx,rdi
   140008838:	call   0x140007dec
   14000883d:	mov    ebx,eax
   14000883f:	test   eax,eax
   140008841:	js     0x1400088de
   140008847:	mov    eax,0x7b
   14000884c:	cmp    ax,WORD PTR [rsp+0x40]
   140008851:	jne    0x1400088d9
   140008857:	mov    DWORD PTR [rsp+0x20],r12d
   14000885c:	mov    r8,rsi
   14000885f:	lea    rdx,[rsp+0x40]
   140008864:	mov    rcx,rdi
   140008867:	test   r15d,r15d
   14000886a:	je     0x14000889a
   14000886c:	mov    r14,QWORD PTR [rdi]
   14000886f:	mov    r9d,r15d
   140008872:	call   0x140007f7c
   140008877:	mov    ebx,eax
   140008879:	test   eax,eax
   14000887b:	jns    0x1400088a8
   14000887d:	xor    r9d,r9d
   140008880:	mov    QWORD PTR [rdi],r14
   140008883:	mov    r8,rsi
   140008886:	mov    DWORD PTR [rsp+0x20],r12d
   14000888b:	lea    rdx,[rsp+0x40]
   140008890:	mov    rcx,rdi
   140008893:	call   0x140007f7c
   140008898:	jmp    0x1400088de
   14000889a:	xor    r9d,r9d
   14000889d:	call   0x140007f7c
   1400088a2:	mov    ebx,eax
   1400088a4:	test   eax,eax
   1400088a6:	js     0x1400088de
   1400088a8:	mov    rcx,QWORD PTR [rdi]
   1400088ab:	movzx  eax,WORD PTR [rcx]
   1400088ae:	cmp    eax,0x20
   1400088b1:	ja     0x1400088ce
   1400088b3:	movabs rdx,0x100002600
   1400088bd:	bt     rdx,rax
   1400088c1:	jae    0x1400088ce
   1400088c3:	call   QWORD PTR [rip+0x2977]        # 0x14000b240
   1400088c9:	mov    QWORD PTR [rdi],rax
   1400088cc:	jmp    0x1400088a8
   1400088ce:	cmp    r12w,WORD PTR [rcx]
   1400088d2:	je     0x1400088de
   1400088d4:	jmp    0x1400087d6
   1400088d9:	mov    ebx,0x80020009
   1400088de:	mov    rcx,rbp
   1400088e1:	call   QWORD PTR [rip+0x2b19]        # 0x14000b400
   1400088e7:	mov    eax,ebx
   1400088e9:	mov    rcx,QWORD PTR [rsp+0x2040]
   1400088f1:	xor    rcx,rsp
   1400088f4:	call   0x140009bc0
   1400088f9:	mov    rbx,QWORD PTR [rsp+0x20a8]
   140008901:	add    rsp,0x2050
   140008908:	pop    r15
   14000890a:	pop    r14
   14000890c:	pop    r13
   14000890e:	pop    r12
   140008910:	pop    rdi
   140008911:	pop    rsi
   140008912:	pop    rbp
   140008913:	ret    
   140008914:	int3   
   140008915:	int3   
   140008916:	int3   
   140008917:	int3   
   140008918:	int3   
   140008919:	int3   
   14000891a:	int3   
   14000891b:	int3   
   14000891c:	mov    rax,rsp
   14000891f:	push   rsi
   140008920:	push   rdi
   140008921:	push   r14
   140008923:	sub    rsp,0x490
   14000892a:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140008933:	mov    QWORD PTR [rax+0x8],rbx
   140008937:	mov    rax,QWORD PTR [rip+0x66e2]        # 0x14000f020
   14000893e:	xor    rax,rsp
   140008941:	mov    QWORD PTR [rsp+0x480],rax
   140008949:	mov    r14,r9
   14000894c:	mov    rdi,r8
   14000894f:	mov    rax,rdx
   140008952:	xor    ebx,ebx
   140008954:	mov    QWORD PTR [rsp+0x60],rbx
   140008959:	mov    QWORD PTR [rsp+0x50],rcx
   14000895e:	mov    QWORD PTR [rsp+0x48],rbx
   140008963:	mov    QWORD PTR [rsp+0x70],rbx
   140008968:	xor    edx,edx
   14000896a:	lea    r8d,[rbx+0x2]
   14000896e:	mov    rcx,rax
   140008971:	call   QWORD PTR [rip+0x27b1]        # 0x14000b128
   140008977:	mov    rsi,rax
   14000897a:	mov    QWORD PTR [rsp+0x38],rax
   14000897f:	test   rax,rax
   140008982:	jne    0x140008990
   140008984:	call   0x1400070b8
   140008989:	mov    ebx,eax
   14000898b:	jmp    0x140008ac0
   140008990:	xor    r9d,r9d
   140008993:	mov    r8,rdi
   140008996:	mov    rdx,r14
   140008999:	mov    rcx,rax
   14000899c:	call   QWORD PTR [rip+0x2766]        # 0x14000b108
   1400089a2:	mov    rdi,rax
   1400089a5:	test   rax,rax
   1400089a8:	jne    0x1400089b4
   1400089aa:	call   0x1400070b8
   1400089af:	jmp    0x140008ab4
   1400089b4:	mov    rdx,rax
   1400089b7:	mov    rcx,rsi
   1400089ba:	call   QWORD PTR [rip+0x2750]        # 0x14000b110
   1400089c0:	mov    r14,rax
   1400089c3:	mov    QWORD PTR [rsp+0x40],rax
   1400089c8:	test   rax,rax
   1400089cb:	je     0x1400089aa
   1400089cd:	mov    rdx,rdi
   1400089d0:	mov    rcx,rsi
   1400089d3:	call   QWORD PTR [rip+0x273f]        # 0x14000b118
   1400089d9:	mov    edi,eax
   1400089db:	mov    DWORD PTR [rsp+0x30],eax
   1400089df:	inc    eax
   1400089e1:	cmp    eax,edi
   1400089e3:	jae    0x140008a06
   1400089e5:	lea    rax,[rsp+0x78]
   1400089ea:	cmp    QWORD PTR [rsp+0x70],rax
   1400089ef:	je     0x1400089fc
   1400089f1:	lea    rcx,[rsp+0x70]
   1400089f6:	call   0x140007054
   1400089fb:	nop
   1400089fc:	mov    eax,0x8007000e
   140008a01:	jmp    0x140008ad9
   140008a06:	mov    ecx,eax
   140008a08:	test   eax,eax
   140008a0a:	je     0x140008a43
   140008a0c:	xor    edx,edx
   140008a0e:	or     rax,0xffffffffffffffff
   140008a12:	div    rcx
   140008a15:	cmp    rax,0x2
   140008a19:	jb     0x140008a39
   140008a1b:	lea    rdx,[rcx+rcx*1]
   140008a1f:	cmp    rdx,0x400
   140008a26:	jbe    0x140008a43
   140008a28:	lea    rcx,[rsp+0x70]
   140008a2d:	call   0x140007084
   140008a32:	mov    rax,QWORD PTR [rsp+0x70]
   140008a37:	jmp    0x140008a4d
   140008a39:	mov    ecx,0x80070057
   140008a3e:	call   0x140008de4
   140008a43:	lea    rax,[rsp+0x78]
   140008a48:	mov    QWORD PTR [rsp+0x70],rax
   140008a4d:	jmp    0x140008a64
   140008a4f:	xor    ebx,ebx
   140008a51:	mov    rax,QWORD PTR [rsp+0x70]
   140008a56:	mov    rsi,QWORD PTR [rsp+0x38]
   140008a5b:	mov    r14,QWORD PTR [rsp+0x40]
   140008a60:	mov    edi,DWORD PTR [rsp+0x30]
   140008a64:	test   rax,rax
   140008a67:	jne    0x140008a70
   140008a69:	mov    ebx,0x8007000e
   140008a6e:	jmp    0x140008ab6
   140008a70:	mov    DWORD PTR [rsp+0x28],edi
   140008a74:	mov    QWORD PTR [rsp+0x20],rax
   140008a79:	mov    r9d,edi
   140008a7c:	mov    r8,r14
   140008a7f:	xor    edx,edx
   140008a81:	lea    ecx,[rdx+0x3]
   140008a84:	call   QWORD PTR [rip+0x26be]        # 0x14000b148
   140008a8a:	test   eax,eax
   140008a8c:	je     0x1400089aa
   140008a92:	mov    ecx,eax
   140008a94:	mov    rax,QWORD PTR [rsp+0x70]
   140008a99:	mov    WORD PTR [rax+rcx*2],bx
   140008a9d:	mov    r8d,DWORD PTR [rsp+0x4d0]
   140008aa5:	mov    rdx,QWORD PTR [rsp+0x70]
   140008aaa:	lea    rcx,[rsp+0x48]
   140008aaf:	call   0x14000875c
   140008ab4:	mov    ebx,eax
   140008ab6:	mov    rcx,rsi
   140008ab9:	call   QWORD PTR [rip+0x2681]        # 0x14000b140
   140008abf:	nop
   140008ac0:	lea    rax,[rsp+0x78]
   140008ac5:	cmp    QWORD PTR [rsp+0x70],rax
   140008aca:	je     0x140008ad7
   140008acc:	lea    rcx,[rsp+0x70]
   140008ad1:	call   0x140007054
   140008ad6:	nop
   140008ad7:	mov    eax,ebx
   140008ad9:	mov    rcx,QWORD PTR [rsp+0x480]
   140008ae1:	xor    rcx,rsp
   140008ae4:	call   0x140009bc0
   140008ae9:	mov    rbx,QWORD PTR [rsp+0x4b0]
   140008af1:	add    rsp,0x490
   140008af8:	pop    r14
   140008afa:	pop    rdi
   140008afb:	pop    rsi
   140008afc:	ret    
   140008afd:	int3   
   140008afe:	int3   
   140008aff:	int3   
   140008b00:	int3   
   140008b01:	int3   
   140008b02:	int3   
   140008b03:	int3   
   140008b04:	mov    QWORD PTR [rsp+0x8],rbx
   140008b09:	push   rbp
   140008b0a:	push   rsi
   140008b0b:	push   rdi
   140008b0c:	push   r14
   140008b0e:	push   r15
   140008b10:	lea    rbp,[rsp-0x9b0]
   140008b18:	sub    rsp,0xab0
   140008b1f:	mov    rax,QWORD PTR [rip+0x64fa]        # 0x14000f020
   140008b26:	xor    rax,rsp
   140008b29:	mov    QWORD PTR [rbp+0x9a0],rax
   140008b30:	mov    rdi,QWORD PTR [rip+0x6cb1]        # 0x14000f7e8
   140008b37:	lea    rax,[rip+0x32ca]        # 0x14000be08
   140008b3e:	xor    r15d,r15d
   140008b41:	mov    esi,edx
   140008b43:	mov    QWORD PTR [rsp+0x30],rax
   140008b48:	xorps  xmm0,xmm0
   140008b4b:	mov    DWORD PTR [rsp+0x48],r15d
   140008b50:	mov    rbx,r9
   140008b53:	mov    r14d,r8d
   140008b56:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   140008b5c:	test   r9,r9
   140008b5f:	je     0x140008b8d
   140008b61:	mov    rax,QWORD PTR [r9]
   140008b64:	jmp    0x140008b88
   140008b66:	mov    r8,QWORD PTR [rbx+0x8]
   140008b6a:	test   rax,rax
   140008b6d:	je     0x140008b81
   140008b6f:	test   r8,r8
   140008b72:	je     0x140008b81
   140008b74:	mov    rdx,rax
   140008b77:	lea    rcx,[rsp+0x38]
   140008b7c:	call   0x140006d74
   140008b81:	add    rbx,0x10
   140008b85:	mov    rax,QWORD PTR [rbx]
   140008b88:	test   rax,rax
   140008b8b:	jne    0x140008b66
   140008b8d:	mov    rax,QWORD PTR [rdi]
   140008b90:	mov    rbx,QWORD PTR [rax+0x28]
   140008b94:	mov    rcx,rbx
   140008b97:	call   QWORD PTR [rip+0x287b]        # 0x14000b418
   140008b9d:	lea    rdx,[rsp+0x30]
   140008ba2:	mov    rcx,rdi
   140008ba5:	call   rbx
   140008ba7:	mov    ebx,eax
   140008ba9:	test   eax,eax
   140008bab:	js     0x140008d36
   140008bb1:	mov    rbx,QWORD PTR [rip+0x6cf0]        # 0x14000f8a8
   140008bb8:	lea    rdx,[rsp+0x60]
   140008bbd:	mov    edi,0x104
   140008bc2:	mov    rcx,rbx
   140008bc5:	mov    r8d,edi
   140008bc8:	call   QWORD PTR [rip+0x2532]        # 0x14000b100
   140008bce:	test   eax,eax
   140008bd0:	jne    0x140008bde
   140008bd2:	call   0x1400070b8
   140008bd7:	mov    ebx,eax
   140008bd9:	jmp    0x140008d36
   140008bde:	cmp    eax,edi
   140008be0:	jne    0x140008bec
   140008be2:	mov    ebx,0x8007007a
   140008be7:	jmp    0x140008d36
   140008bec:	lea    rdx,[rsp+0x60]
   140008bf1:	mov    ecx,r15d
   140008bf4:	mov    r9d,0x27
   140008bfa:	movzx  r8d,WORD PTR [rdx]
   140008bfe:	test   r8w,r8w
   140008c02:	je     0x140008c36
   140008c04:	mov    eax,ecx
   140008c06:	mov    WORD PTR [rbp+rax*2+0x170],r8w
   140008c0f:	cmp    r8w,r9w
   140008c13:	jne    0x140008c28
   140008c15:	cmp    ecx,0x206
   140008c1b:	jae    0x140008c28
   140008c1d:	inc    ecx
   140008c1f:	mov    WORD PTR [rbp+rcx*2+0x170],r9w
   140008c28:	add    rdx,0x2
   140008c2c:	inc    ecx
   140008c2e:	cmp    ecx,0x207
   140008c34:	jb     0x140008bfa
   140008c36:	mov    eax,ecx
   140008c38:	mov    WORD PTR [rbp+rax*2+0x170],r15w
   140008c41:	test   rbx,rbx
   140008c44:	je     0x140008c5f
   140008c46:	xor    ecx,ecx
   140008c48:	call   QWORD PTR [rip+0x24d2]        # 0x14000b120
   140008c4e:	cmp    rbx,rax
   140008c51:	je     0x140008c5f
   140008c53:	lea    r8,[rbp+0x170]
   140008c5a:	jmp    0x140008cf2
   140008c5f:	mov    edi,0x22
   140008c64:	lea    rcx,[rbp+0x170]
   140008c6b:	or     rbx,0xffffffffffffffff
   140008c6f:	mov    WORD PTR [rbp+0x580],di
   140008c76:	mov    rax,rbx
   140008c79:	inc    rax
   140008c7c:	cmp    WORD PTR [rcx+rax*2],r15w
   140008c81:	jne    0x140008c79
   140008c83:	inc    eax
   140008c85:	lea    r8,[rbp+0x170]
   140008c8c:	movsxd r9,eax
   140008c8f:	lea    rcx,[rbp+0x582]
   140008c96:	add    r9,r9
   140008c99:	mov    edx,0x416
   140008c9e:	call   QWORD PTR [rip+0x26dc]        # 0x14000b380
   140008ca4:	test   eax,eax
   140008ca6:	je     0x140008cb2
   140008ca8:	mov    ebx,0x80004005
   140008cad:	jmp    0x140008d36
   140008cb2:	lea    rax,[rbp+0x580]
   140008cb9:	inc    rbx
   140008cbc:	cmp    WORD PTR [rax+rbx*2],r15w
   140008cc1:	jne    0x140008cb9
   140008cc3:	movsxd rax,ebx
   140008cc6:	mov    WORD PTR [rbp+rax*2+0x580],di
   140008cce:	lea    rax,[rax*2+0x2]
   140008cd6:	cmp    rax,0x418
   140008cdc:	jae    0x140008d9b
   140008ce2:	mov    WORD PTR [rbp+rax*1+0x580],r15w
   140008ceb:	lea    r8,[rbp+0x580]
   140008cf2:	lea    rdx,[rip+0x3857]        # 0x14000c550
   140008cf9:	lea    rcx,[rsp+0x38]
   140008cfe:	call   0x140006d74
   140008d03:	neg    eax
   140008d05:	mov    edi,0x8007000e
   140008d0a:	sbb    ebx,ebx
   140008d0c:	not    ebx
   140008d0e:	and    ebx,edi
   140008d10:	test   ebx,ebx
   140008d12:	js     0x140008d36
   140008d14:	lea    r8,[rbp+0x170]
   140008d1b:	lea    rdx,[rip+0x383e]        # 0x14000c560
   140008d22:	lea    rcx,[rsp+0x38]
   140008d27:	call   0x140006d74
   140008d2c:	neg    eax
   140008d2e:	sbb    ebx,ebx
   140008d30:	not    ebx
   140008d32:	and    ebx,edi
   140008d34:	jns    0x140008d68
   140008d36:	lea    rcx,[rsp+0x30]
   140008d3b:	call   0x140006ce0
   140008d40:	mov    eax,ebx
   140008d42:	mov    rcx,QWORD PTR [rbp+0x9a0]
   140008d49:	xor    rcx,rsp
   140008d4c:	call   0x140009bc0
   140008d51:	mov    rbx,QWORD PTR [rsp+0xae0]
   140008d59:	add    rsp,0xab0
   140008d60:	pop    r15
   140008d62:	pop    r14
   140008d64:	pop    rdi
   140008d65:	pop    rsi
   140008d66:	pop    rbp
   140008d67:	ret    
   140008d68:	movzx  r8d,si
   140008d6c:	lea    r9,[rip+0x3805]        # 0x14000c578
   140008d73:	lea    rdx,[rsp+0x60]
   140008d78:	lea    rcx,[rsp+0x30]
   140008d7d:	test   r14d,r14d
   140008d80:	je     0x140008d8c
   140008d82:	mov    DWORD PTR [rsp+0x20],0x1
   140008d8a:	jmp    0x140008d91
   140008d8c:	mov    DWORD PTR [rsp+0x20],r15d
   140008d91:	call   0x14000891c
   140008d96:	jmp    0x140008bd7
   140008d9b:	call   0x140009f08
   140008da0:	int3   
   140008da1:	int3   
   140008da2:	int3   
   140008da3:	int3   
   140008da4:	int3   
   140008da5:	int3   
   140008da6:	int3   
   140008da7:	int3   
   140008da8:	rex push rbx
   140008daa:	sub    rsp,0x20
   140008dae:	cmp    QWORD PTR [rcx],0x0
   140008db2:	mov    rbx,rcx
   140008db5:	je     0x140008dcc
   140008db7:	mov    rcx,QWORD PTR [rbx]
   140008dba:	mov    rax,QWORD PTR [rcx]
   140008dbd:	mov    QWORD PTR [rbx],rax
   140008dc0:	call   QWORD PTR [rip+0x25d2]        # 0x14000b398
   140008dc6:	cmp    QWORD PTR [rbx],0x0
   140008dca:	jne    0x140008db7
   140008dcc:	add    rsp,0x20
   140008dd0:	pop    rbx
   140008dd1:	ret    
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	mov    DWORD PTR [rcx],edx
   140008dda:	mov    rax,rcx
   140008ddd:	ret    
   140008dde:	int3   
   140008ddf:	int3   
   140008de0:	int3   
   140008de1:	int3   
   140008de2:	int3   
   140008de3:	int3   
   140008de4:	sub    rsp,0x28
   140008de8:	mov    edx,ecx
   140008dea:	lea    rcx,[rsp+0x40]
   140008def:	call   0x140008dd8
   140008df4:	lea    rdx,[rip+0x519d]        # 0x14000df98
   140008dfb:	mov    ecx,DWORD PTR [rax]
   140008dfd:	mov    DWORD PTR [rsp+0x38],ecx
   140008e01:	lea    rcx,[rsp+0x38]
   140008e06:	call   0x14000a1a8
   140008e0b:	int3   
   140008e0c:	int3   
   140008e0d:	int3   
   140008e0e:	int3   
   140008e0f:	int3   
   140008e10:	int3   
   140008e11:	int3   
   140008e12:	int3   
   140008e13:	int3   
   140008e14:	mov    QWORD PTR [rsp+0x18],r8
   140008e19:	mov    QWORD PTR [rsp+0x10],rdx
   140008e1e:	mov    QWORD PTR [rsp+0x8],rcx
   140008e23:	push   rbp
   140008e24:	push   rbx
   140008e25:	push   rsi
   140008e26:	push   rdi
   140008e27:	push   r13
   140008e29:	push   r14
   140008e2b:	push   r15
   140008e2d:	mov    rbp,rsp
   140008e30:	sub    rsp,0x60
   140008e34:	xor    r15d,r15d
   140008e37:	mov    r13,r9
   140008e3a:	mov    rax,r8
   140008e3d:	mov    QWORD PTR [rbp-0x18],r15
   140008e41:	neg    rax
   140008e44:	mov    QWORD PTR [rbp-0x20],r15
   140008e48:	mov    rsi,r8
   140008e4b:	mov    edi,r15d
   140008e4e:	sbb    r9d,r9d
   140008e51:	neg    r9d
   140008e54:	add    r9d,0x2
   140008e58:	test   rcx,rcx
   140008e5b:	jne    0x140008ebd
   140008e5d:	mov    rax,QWORD PTR [rip+0x61cc]        # 0x14000f030
   140008e64:	lea    r15,[rip+0x61c5]        # 0x14000f030
   140008e6b:	cmp    rax,r15
   140008e6e:	je     0x140008eb2
   140008e70:	test   BYTE PTR [rax+0x1c],0x8
   140008e74:	je     0x140008eb2
   140008e76:	cmp    BYTE PTR [rax+0x19],0x2
   140008e7a:	jb     0x140008eb2
   140008e7c:	call   0x1400068c8
   140008e81:	mov    r9d,eax
   140008e84:	lea    edx,[rdi+0xa]
   140008e87:	lea    rax,[rip+0x3ada]        # 0x14000c968
   140008e8e:	mov    rcx,QWORD PTR [rip+0x619b]        # 0x14000f030
   140008e95:	lea    r8,[rip+0x3c54]        # 0x14000caf0
   140008e9c:	mov    DWORD PTR [rsp+0x28],0x80070057
   140008ea4:	mov    QWORD PTR [rsp+0x20],rax
   140008ea9:	mov    rcx,QWORD PTR [rcx+0x10]
   140008ead:	call   0x1400013ec
   140008eb2:	mov    r14d,0x80070057
   140008eb8:	jmp    0x14000949e
   140008ebd:	test   rdx,rdx
   140008ec0:	jne    0x140008ef7
   140008ec2:	mov    rax,QWORD PTR [rip+0x6167]        # 0x14000f030
   140008ec9:	lea    r15,[rip+0x6160]        # 0x14000f030
   140008ed0:	cmp    rax,r15
   140008ed3:	je     0x140008eb2
   140008ed5:	test   BYTE PTR [rax+0x1c],0x8
   140008ed9:	je     0x140008eb2
   140008edb:	cmp    BYTE PTR [rax+0x19],0x2
   140008edf:	jb     0x140008eb2
   140008ee1:	call   0x1400068c8
   140008ee6:	mov    r9d,eax
   140008ee9:	mov    edx,0xb
   140008eee:	lea    rax,[rip+0x3a83]        # 0x14000c978
   140008ef5:	jmp    0x140008e8e
   140008ef7:	mov    ecx,0x8
   140008efc:	mov    DWORD PTR [rbp-0x8],r9d
   140008f00:	lea    r8,[rbp-0x8]
   140008f04:	mov    DWORD PTR [rbp-0x4],r15d
   140008f08:	lea    edx,[rcx-0x7]
   140008f0b:	call   QWORD PTR [rip+0x229f]        # 0x14000b1b0
   140008f11:	mov    QWORD PTR [rbp-0x10],rax
   140008f15:	mov    rdi,rax
   140008f18:	test   rax,rax
   140008f1b:	jne    0x140008f27
   140008f1d:	mov    ebx,0x8007000e
   140008f22:	mov    r14d,ebx
   140008f25:	jmp    0x140008f39
   140008f27:	mov    rcx,rax
   140008f2a:	call   QWORD PTR [rip+0x2290]        # 0x14000b1c0
   140008f30:	mov    ebx,eax
   140008f32:	mov    r14d,eax
   140008f35:	test   eax,eax
   140008f37:	jns    0x140008f81
   140008f39:	mov    rax,QWORD PTR [rip+0x60f0]        # 0x14000f030
   140008f40:	lea    r15,[rip+0x60e9]        # 0x14000f030
   140008f47:	cmp    rax,r15
   140008f4a:	je     0x14000949e
   140008f50:	test   BYTE PTR [rax+0x1c],0x8
   140008f54:	je     0x14000949e
   140008f5a:	cmp    BYTE PTR [rax+0x19],0x2
   140008f5e:	jb     0x14000949e
   140008f64:	call   0x1400068c8
   140008f69:	mov    r9d,eax
   140008f6c:	mov    DWORD PTR [rsp+0x28],ebx
   140008f70:	lea    rax,[rip+0x3a11]        # 0x14000c988
   140008f77:	mov    edx,0xc
   140008f7c:	jmp    0x140009482
   140008f81:	lea    r8,[rbp+0x40]
   140008f85:	xor    edx,edx
   140008f87:	lea    rcx,[rbp-0x10]
   140008f8b:	call   0x140009510
   140008f90:	mov    r14d,eax
   140008f93:	test   eax,eax
   140008f95:	jns    0x140008fdb
   140008f97:	mov    rax,QWORD PTR [rip+0x6092]        # 0x14000f030
   140008f9e:	lea    r15,[rip+0x608b]        # 0x14000f030
   140008fa5:	cmp    rax,r15
   140008fa8:	je     0x14000949e
   140008fae:	test   BYTE PTR [rax+0x1c],0x8
   140008fb2:	je     0x14000949e
   140008fb8:	cmp    BYTE PTR [rax+0x19],0x2
   140008fbc:	jb     0x14000949e
   140008fc2:	call   0x1400068c8
   140008fc7:	mov    edx,0xd
   140008fcc:	mov    r9d,eax
   140008fcf:	lea    rax,[rip+0x39ca]        # 0x14000c9a0
   140008fd6:	jmp    0x14000947d
   140008fdb:	lea    r8,[rbp+0x48]
   140008fdf:	mov    edx,0x1
   140008fe4:	lea    rcx,[rbp-0x10]
   140008fe8:	call   0x140009510
   140008fed:	mov    r14d,eax
   140008ff0:	test   eax,eax
   140008ff2:	jns    0x14000902b
   140008ff4:	mov    rax,QWORD PTR [rip+0x6035]        # 0x14000f030
   140008ffb:	lea    r15,[rip+0x602e]        # 0x14000f030
   140009002:	cmp    rax,r15
   140009005:	je     0x14000949e
   14000900b:	test   BYTE PTR [rax+0x1c],0x8
   14000900f:	je     0x14000949e
   140009015:	cmp    BYTE PTR [rax+0x19],0x2
   140009019:	jb     0x14000949e
   14000901f:	call   0x1400068c8
   140009024:	mov    edx,0xe
   140009029:	jmp    0x140008fcc
   14000902b:	test   rsi,rsi
   14000902e:	je     0x140009083
   140009030:	lea    r8,[rbp+0x50]
   140009034:	mov    edx,0x2
   140009039:	lea    rcx,[rbp-0x10]
   14000903d:	call   0x140009510
   140009042:	mov    r14d,eax
   140009045:	test   eax,eax
   140009047:	jns    0x140009083
   140009049:	mov    rax,QWORD PTR [rip+0x5fe0]        # 0x14000f030
   140009050:	lea    r15,[rip+0x5fd9]        # 0x14000f030
   140009057:	cmp    rax,r15
   14000905a:	je     0x14000949e
   140009060:	test   BYTE PTR [rax+0x1c],0x8
   140009064:	je     0x14000949e
   14000906a:	cmp    BYTE PTR [rax+0x19],0x2
   14000906e:	jb     0x14000949e
   140009074:	call   0x1400068c8
   140009079:	mov    edx,0xf
   14000907e:	jmp    0x140008fcc
   140009083:	mov    esi,0x4
   140009088:	test   r13,r13
   14000908b:	je     0x1400090ff
   14000908d:	cmp    WORD PTR [r13+0x0],r15w
   140009092:	je     0x1400090ff
   140009094:	lea    rax,[rbp-0x20]
   140009098:	mov    r8d,esi
   14000909b:	lea    r9,[rip+0x3a1e]        # 0x14000cac0
   1400090a2:	mov    QWORD PTR [rsp+0x20],rax
   1400090a7:	xor    edx,edx
   1400090a9:	lea    rcx,[rip+0x3370]        # 0x14000c420
   1400090b0:	call   QWORD PTR [rip+0x2332]        # 0x14000b3e8
   1400090b6:	mov    r14d,eax
   1400090b9:	test   eax,eax
   1400090bb:	jns    0x1400090ff
   1400090bd:	mov    rax,QWORD PTR [rip+0x5f6c]        # 0x14000f030
   1400090c4:	lea    r15,[rip+0x5f65]        # 0x14000f030
   1400090cb:	cmp    rax,r15
   1400090ce:	je     0x14000949e
   1400090d4:	test   BYTE PTR [rax+0x1c],0x8
   1400090d8:	je     0x14000949e
   1400090de:	cmp    BYTE PTR [rax+0x19],0x2
   1400090e2:	jb     0x14000949e
   1400090e8:	call   0x1400068c8
   1400090ed:	lea    edx,[rsi+0xc]
   1400090f0:	mov    r9d,eax
   1400090f3:	lea    rax,[rip+0x38be]        # 0x14000c9b8
   1400090fa:	jmp    0x14000947d
   1400090ff:	mov    rbx,QWORD PTR [rbp-0x20]
   140009103:	test   rbx,rbx
   140009106:	je     0x1400092ac
   14000910c:	mov    rax,QWORD PTR [rip+0x5f1d]        # 0x14000f030
   140009113:	lea    r15,[rip+0x5f16]        # 0x14000f030
   14000911a:	cmp    rax,r15
   14000911d:	je     0x140009153
   14000911f:	test   BYTE PTR [rax+0x1c],0x1
   140009123:	je     0x140009153
   140009125:	cmp    BYTE PTR [rax+0x19],0x5
   140009129:	jb     0x140009153
   14000912b:	call   0x1400068c8
   140009130:	mov    rcx,QWORD PTR [rip+0x5ef9]        # 0x14000f030
   140009137:	lea    r8,[rip+0x39b2]        # 0x14000caf0
   14000913e:	mov    r9d,eax
   140009141:	mov    edx,0x11
   140009146:	mov    rcx,QWORD PTR [rcx+0x10]
   14000914a:	call   0x140006960
   14000914f:	mov    rbx,QWORD PTR [rbp-0x20]
   140009153:	mov    rax,QWORD PTR [rbx]
   140009156:	mov    rsi,QWORD PTR [rax+0x28]
   14000915a:	mov    rcx,rsi
   14000915d:	call   QWORD PTR [rip+0x22b5]        # 0x14000b418
   140009163:	lea    rdx,[rbp+0x60]
   140009167:	mov    rcx,rbx
   14000916a:	call   rsi
   14000916c:	mov    r14d,eax
   14000916f:	test   eax,eax
   140009171:	jns    0x1400091b0
   140009173:	mov    rax,QWORD PTR [rip+0x5eb6]        # 0x14000f030
   14000917a:	cmp    rax,r15
   14000917d:	je     0x14000949e
   140009183:	test   BYTE PTR [rax+0x1c],0x8
   140009187:	je     0x14000949e
   14000918d:	cmp    BYTE PTR [rax+0x19],0x2
   140009191:	jb     0x14000949e
   140009197:	call   0x1400068c8
   14000919c:	mov    r9d,eax
   14000919f:	mov    edx,0x12
   1400091a4:	lea    rax,[rip+0x382d]        # 0x14000c9d8
   1400091ab:	jmp    0x14000947d
   1400091b0:	mov    ecx,DWORD PTR [rbp+0x60]
   1400091b3:	call   QWORD PTR [rip+0x207f]        # 0x14000b238
   1400091b9:	xor    r14d,r14d
   1400091bc:	test   eax,eax
   1400091be:	jne    0x140009223
   1400091c0:	call   QWORD PTR [rip+0x1f72]        # 0x14000b138
   1400091c6:	movzx  ebx,ax
   1400091c9:	or     ebx,0x80070000
   1400091cf:	test   eax,eax
   1400091d1:	cmovle ebx,eax
   1400091d4:	test   ebx,ebx
   1400091d6:	jns    0x140009223
   1400091d8:	mov    rax,QWORD PTR [rip+0x5e51]        # 0x14000f030
   1400091df:	cmp    rax,r15
   1400091e2:	je     0x140009223
   1400091e4:	test   BYTE PTR [rax+0x1c],0x8
   1400091e8:	je     0x140009223
   1400091ea:	cmp    BYTE PTR [rax+0x19],0x2
   1400091ee:	jb     0x140009223
   1400091f0:	call   0x1400068c8
   1400091f5:	mov    rcx,QWORD PTR [rip+0x5e34]        # 0x14000f030
   1400091fc:	lea    edx,[r14+0x13]
   140009200:	mov    r9d,eax
   140009203:	mov    DWORD PTR [rsp+0x28],ebx
   140009207:	lea    rax,[rip+0x37f2]        # 0x14000ca00
   14000920e:	lea    r8,[rip+0x38db]        # 0x14000caf0
   140009215:	mov    QWORD PTR [rsp+0x20],rax
   14000921a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000921e:	call   0x1400013ec
   140009223:	mov    rbx,QWORD PTR [rbp-0x20]
   140009227:	mov    rax,QWORD PTR [rbx]
   14000922a:	mov    rsi,QWORD PTR [rax+0x30]
   14000922e:	mov    rcx,rsi
   140009231:	call   QWORD PTR [rip+0x21e1]        # 0x14000b418
   140009237:	mov    QWORD PTR [rsp+0x30],rdi
   14000923c:	xor    r9d,r9d
   14000923f:	mov    QWORD PTR [rsp+0x28],r14
   140009244:	xor    r8d,r8d
   140009247:	mov    rdx,r13
   14000924a:	mov    WORD PTR [rsp+0x20],r14w
   140009250:	mov    rcx,rbx
   140009253:	call   rsi
   140009255:	cmp    eax,0x800700b7
   14000925a:	mov    r14d,eax
   14000925d:	mov    eax,0x0
   140009262:	cmove  r14d,eax
   140009266:	test   r14d,r14d
   140009269:	jns    0x14000949e
   14000926f:	mov    rax,QWORD PTR [rip+0x5dba]        # 0x14000f030
   140009276:	cmp    rax,r15
   140009279:	je     0x14000949e
   14000927f:	test   BYTE PTR [rax+0x1c],0x8
   140009283:	je     0x14000949e
   140009289:	cmp    BYTE PTR [rax+0x19],0x2
   14000928d:	jb     0x14000949e
   140009293:	call   0x1400068c8
   140009298:	mov    r9d,eax
   14000929b:	mov    edx,0x14
   1400092a0:	lea    rax,[rip+0x3781]        # 0x14000ca28
   1400092a7:	jmp    0x14000947d
   1400092ac:	mov    rax,QWORD PTR [rip+0x5d7d]        # 0x14000f030
   1400092b3:	lea    r15,[rip+0x5d76]        # 0x14000f030
   1400092ba:	cmp    rax,r15
   1400092bd:	je     0x1400092ef
   1400092bf:	test   BYTE PTR [rax+0x1c],0x1
   1400092c3:	je     0x1400092ef
   1400092c5:	cmp    BYTE PTR [rax+0x19],0x5
   1400092c9:	jb     0x1400092ef
   1400092cb:	call   0x1400068c8
   1400092d0:	mov    rcx,QWORD PTR [rip+0x5d59]        # 0x14000f030
   1400092d7:	lea    r8,[rip+0x3812]        # 0x14000caf0
   1400092de:	mov    r9d,eax
   1400092e1:	mov    edx,0x15
   1400092e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400092ea:	call   0x140006960
   1400092ef:	lea    rax,[rbp-0x18]
   1400092f3:	mov    r8d,esi
   1400092f6:	lea    r9,[rip+0x37d3]        # 0x14000cad0
   1400092fd:	mov    QWORD PTR [rsp+0x20],rax
   140009302:	xor    edx,edx
   140009304:	lea    rcx,[rip+0x37d5]        # 0x14000cae0
   14000930b:	call   QWORD PTR [rip+0x20d7]        # 0x14000b3e8
   140009311:	xor    r13d,r13d
   140009314:	mov    r14d,eax
   140009317:	test   eax,eax
   140009319:	jns    0x14000934d
   14000931b:	mov    rax,QWORD PTR [rip+0x5d0e]        # 0x14000f030
   140009322:	cmp    rax,r15
   140009325:	je     0x14000949e
   14000932b:	test   BYTE PTR [rax+0x1c],0x8
   14000932f:	je     0x14000949e
   140009335:	cmp    BYTE PTR [rax+0x19],0x2
   140009339:	jb     0x14000949e
   14000933f:	call   0x1400068c8
   140009344:	lea    edx,[r13+0x16]
   140009348:	jmp    0x1400090f0
   14000934d:	mov    rbx,QWORD PTR [rbp-0x18]
   140009351:	mov    rax,QWORD PTR [rbx]
   140009354:	mov    rsi,QWORD PTR [rax+0x20]
   140009358:	mov    rcx,rsi
   14000935b:	call   QWORD PTR [rip+0x20b7]        # 0x14000b418
   140009361:	lea    rdx,[rbp+0x60]
   140009365:	mov    rcx,rbx
   140009368:	call   rsi
   14000936a:	mov    r14d,eax
   14000936d:	test   eax,eax
   14000936f:	jns    0x1400093ae
   140009371:	mov    rax,QWORD PTR [rip+0x5cb8]        # 0x14000f030
   140009378:	cmp    rax,r15
   14000937b:	je     0x14000949e
   140009381:	test   BYTE PTR [rax+0x1c],0x8
   140009385:	je     0x14000949e
   14000938b:	cmp    BYTE PTR [rax+0x19],0x2
   14000938f:	jb     0x14000949e
   140009395:	call   0x1400068c8
   14000939a:	mov    r9d,eax
   14000939d:	mov    edx,0x17
   1400093a2:	lea    rax,[rip+0x36af]        # 0x14000ca58
   1400093a9:	jmp    0x14000947d
   1400093ae:	mov    ecx,DWORD PTR [rbp+0x60]
   1400093b1:	call   QWORD PTR [rip+0x1e81]        # 0x14000b238
   1400093b7:	test   eax,eax
   1400093b9:	jne    0x14000941f
   1400093bb:	call   QWORD PTR [rip+0x1d77]        # 0x14000b138
   1400093c1:	movzx  ebx,ax
   1400093c4:	or     ebx,0x80070000
   1400093ca:	test   eax,eax
   1400093cc:	cmovle ebx,eax
   1400093cf:	test   ebx,ebx
   1400093d1:	jns    0x14000941f
   1400093d3:	mov    rax,QWORD PTR [rip+0x5c56]        # 0x14000f030
   1400093da:	cmp    rax,r15
   1400093dd:	je     0x14000941f
   1400093df:	test   BYTE PTR [rax+0x1c],0x8
   1400093e3:	je     0x14000941f
   1400093e5:	cmp    BYTE PTR [rax+0x19],0x2
   1400093e9:	jb     0x14000941f
   1400093eb:	call   0x1400068c8
   1400093f0:	mov    rcx,QWORD PTR [rip+0x5c39]        # 0x14000f030
   1400093f7:	lea    r8,[rip+0x36f2]        # 0x14000caf0
   1400093fe:	mov    r9d,eax
   140009401:	mov    DWORD PTR [rsp+0x28],ebx
   140009405:	lea    rax,[rip+0x35f4]        # 0x14000ca00
   14000940c:	mov    edx,0x18
   140009411:	mov    QWORD PTR [rsp+0x20],rax
   140009416:	mov    rcx,QWORD PTR [rcx+0x10]
   14000941a:	call   0x1400013ec
   14000941f:	mov    rbx,QWORD PTR [rbp-0x18]
   140009423:	mov    rax,QWORD PTR [rbx]
   140009426:	mov    rsi,QWORD PTR [rax+0x18]
   14000942a:	mov    rcx,rsi
   14000942d:	call   QWORD PTR [rip+0x1fe5]        # 0x14000b418
   140009433:	xor    r9d,r9d
   140009436:	mov    r8,rdi
   140009439:	xor    edx,edx
   14000943b:	mov    rcx,rbx
   14000943e:	call   rsi
   140009440:	cmp    eax,0x800700b7
   140009445:	mov    r14d,eax
   140009448:	cmove  r14d,r13d
   14000944c:	test   r14d,r14d
   14000944f:	jns    0x14000949e
   140009451:	mov    rax,QWORD PTR [rip+0x5bd8]        # 0x14000f030
   140009458:	cmp    rax,r15
   14000945b:	je     0x14000949e
   14000945d:	test   BYTE PTR [rax+0x1c],0x8
   140009461:	je     0x14000949e
   140009463:	cmp    BYTE PTR [rax+0x19],0x2
   140009467:	jb     0x14000949e
   140009469:	call   0x1400068c8
   14000946e:	mov    r9d,eax
   140009471:	mov    edx,0x19
   140009476:	lea    rax,[rip+0x360b]        # 0x14000ca88
   14000947d:	mov    DWORD PTR [rsp+0x28],r14d
   140009482:	mov    rcx,QWORD PTR [rip+0x5ba7]        # 0x14000f030
   140009489:	lea    r8,[rip+0x3660]        # 0x14000caf0
   140009490:	mov    QWORD PTR [rsp+0x20],rax
   140009495:	mov    rcx,QWORD PTR [rcx+0x10]
   140009499:	call   0x1400013ec
   14000949e:	mov    rbx,QWORD PTR [rbp-0x20]
   1400094a2:	test   rbx,rbx
   1400094a5:	je     0x1400094bc
   1400094a7:	mov    rax,QWORD PTR [rbx]
   1400094aa:	mov    rsi,QWORD PTR [rax+0x10]
   1400094ae:	mov    rcx,rsi
   1400094b1:	call   QWORD PTR [rip+0x1f61]        # 0x14000b418
   1400094b7:	mov    rcx,rbx
   1400094ba:	call   rsi
   1400094bc:	mov    rbx,QWORD PTR [rbp-0x18]
   1400094c0:	test   rbx,rbx
   1400094c3:	je     0x1400094da
   1400094c5:	mov    rax,QWORD PTR [rbx]
   1400094c8:	mov    rsi,QWORD PTR [rax+0x10]
   1400094cc:	mov    rcx,rsi
   1400094cf:	call   QWORD PTR [rip+0x1f43]        # 0x14000b418
   1400094d5:	mov    rcx,rbx
   1400094d8:	call   rsi
   1400094da:	test   rdi,rdi
   1400094dd:	je     0x1400094f5
   1400094df:	mov    rcx,rdi
   1400094e2:	call   QWORD PTR [rip+0x1ce0]        # 0x14000b1c8
   1400094e8:	test   eax,eax
   1400094ea:	js     0x1400094f5
   1400094ec:	mov    rcx,rdi
   1400094ef:	call   QWORD PTR [rip+0x1cc3]        # 0x14000b1b8
   1400094f5:	mov    eax,r14d
   1400094f8:	add    rsp,0x60
   1400094fc:	pop    r15
   1400094fe:	pop    r14
   140009500:	pop    r13
   140009502:	pop    rdi
   140009503:	pop    rsi
   140009504:	pop    rbx
   140009505:	pop    rbp
   140009506:	ret    
   140009507:	int3   
   140009508:	int3   
   140009509:	int3   
   14000950a:	int3   
   14000950b:	int3   
   14000950c:	int3   
   14000950d:	int3   
   14000950e:	int3   
   14000950f:	int3   
   140009510:	mov    rax,rsp
   140009513:	mov    QWORD PTR [rax+0x10],rbx
   140009517:	mov    QWORD PTR [rax+0x18],rsi
   14000951b:	push   rdi
   14000951c:	sub    rsp,0x20
   140009520:	and    DWORD PTR [rax+0x8],0x0
   140009524:	mov    rsi,r8
   140009527:	movsxd rbx,edx
   14000952a:	lea    r8,[rax+0x8]
   14000952e:	mov    rdi,rcx
   140009531:	mov    edx,0x1
   140009536:	mov    rcx,QWORD PTR [rcx]
   140009539:	call   QWORD PTR [rip+0x1c69]        # 0x14000b1a8
   14000953f:	test   eax,eax
   140009541:	js     0x1400095c9
   140009547:	cmp    ebx,DWORD PTR [rsp+0x30]
   14000954b:	jl     0x1400095b4
   14000954d:	mov    rcx,QWORD PTR [rdi]
   140009550:	lea    r8,[rsp+0x48]
   140009555:	and    DWORD PTR [rsp+0x48],0x0
   14000955a:	mov    edx,0x1
   14000955f:	call   QWORD PTR [rip+0x1c9b]        # 0x14000b200
   140009565:	test   eax,eax
   140009567:	js     0x1400095d1
   140009569:	cmp    ebx,DWORD PTR [rsp+0x48]
   14000956d:	jg     0x1400095b4
   14000956f:	movsxd rax,DWORD PTR [rsp+0x30]
   140009574:	sub    rbx,rax
   140009577:	mov    rax,QWORD PTR [rdi]
   14000957a:	mov    rcx,QWORD PTR [rax+0x10]
   14000957e:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140009582:	test   rcx,rcx
   140009585:	je     0x14000958d
   140009587:	call   QWORD PTR [rip+0x1c43]        # 0x14000b1d0
   14000958d:	mov    rcx,QWORD PTR [rsi]
   140009590:	call   QWORD PTR [rip+0x1c72]        # 0x14000b208
   140009596:	mov    rdx,rax
   140009599:	test   rax,rax
   14000959c:	jne    0x1400095a5
   14000959e:	mov    eax,0x8007000e
   1400095a3:	jmp    0x1400095b9
   1400095a5:	mov    rax,QWORD PTR [rdi]
   1400095a8:	mov    rcx,QWORD PTR [rax+0x10]
   1400095ac:	xor    eax,eax
   1400095ae:	mov    QWORD PTR [rcx+rbx*8],rdx
   1400095b2:	jmp    0x1400095b9
   1400095b4:	mov    eax,0x80070057
   1400095b9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400095be:	mov    rsi,QWORD PTR [rsp+0x40]
   1400095c3:	add    rsp,0x20
   1400095c7:	pop    rdi
   1400095c8:	ret    
   1400095c9:	mov    ecx,eax
   1400095cb:	call   0x140008de4
   1400095d0:	int3   
   1400095d1:	mov    ecx,eax
   1400095d3:	call   0x140008de4
   1400095d8:	int3   
   1400095d9:	int3   
   1400095da:	int3   
   1400095db:	int3   
   1400095dc:	int3   
   1400095dd:	int3   
   1400095de:	int3   
   1400095df:	int3   
   1400095e0:	rex push rbx
   1400095e2:	sub    rsp,0x20
   1400095e6:	mov    rbx,rcx
   1400095e9:	call   0x14000a174
   1400095ee:	lea    rax,[rip+0x209b]        # 0x14000b690
   1400095f5:	mov    QWORD PTR [rbx],rax
   1400095f8:	mov    rax,rbx
   1400095fb:	add    rsp,0x20
   1400095ff:	pop    rbx
   140009600:	ret    
   140009601:	int3   
   140009602:	int3   
   140009603:	int3   
   140009604:	int3   
   140009605:	int3   
   140009606:	int3   
   140009607:	int3   
   140009608:	rex push rbx
   14000960a:	sub    rsp,0x20
   14000960e:	mov    r8d,0x1
   140009614:	lea    rdx,[rip+0x59e5]        # 0x14000f000
   14000961b:	mov    rbx,rcx
   14000961e:	call   0x14000a168
   140009623:	lea    rax,[rip+0x2066]        # 0x14000b690
   14000962a:	mov    QWORD PTR [rbx],rax
   14000962d:	mov    rax,rbx
   140009630:	add    rsp,0x20
   140009634:	pop    rbx
   140009635:	ret    
   140009636:	int3   
   140009637:	int3   
   140009638:	int3   
   140009639:	int3   
   14000963a:	int3   
   14000963b:	int3   
   14000963c:	lea    rax,[rip+0x204d]        # 0x14000b690
   140009643:	mov    QWORD PTR [rcx],rax
   140009646:	jmp    0x14000a180
   14000964b:	int3   
   14000964c:	int3   
   14000964d:	int3   
   14000964e:	int3   
   14000964f:	int3   
   140009650:	int3   
   140009651:	int3   
   140009652:	int3   
   140009653:	int3   
   140009654:	rex push rbx
   140009656:	sub    rsp,0x40
   14000965a:	mov    rbx,rcx
   14000965d:	jmp    0x14000966e
   14000965f:	mov    rcx,rbx
   140009662:	call   0x14000a19c
   140009667:	test   eax,eax
   140009669:	je     0x14000967f
   14000966b:	mov    rcx,rbx
   14000966e:	call   QWORD PTR [rip+0x1d14]        # 0x14000b388
   140009674:	test   rax,rax
   140009677:	je     0x14000965f
   140009679:	add    rsp,0x40
   14000967d:	pop    rbx
   14000967e:	ret    
   14000967f:	mov    eax,DWORD PTR [rip+0x5b73]        # 0x14000f1f8
   140009685:	test   al,0x1
   140009687:	jne    0x1400096aa
   140009689:	or     eax,0x1
   14000968c:	lea    rcx,[rip+0x5b4d]        # 0x14000f1e0
   140009693:	mov    DWORD PTR [rip+0x5b5f],eax        # 0x14000f1f8
   140009699:	call   0x140009608
   14000969e:	lea    rcx,[rip+0x16cb]        # 0x14000ad70
   1400096a5:	call   0x14000a0ac
   1400096aa:	lea    rdx,[rip+0x5b2f]        # 0x14000f1e0
   1400096b1:	lea    rcx,[rsp+0x20]
   1400096b6:	call   0x1400095e0
   1400096bb:	lea    rdx,[rip+0x483e]        # 0x14000df00
   1400096c2:	lea    rcx,[rsp+0x20]
   1400096c7:	call   0x14000a1a8
   1400096cc:	int3   
   1400096cd:	int3   
   1400096ce:	int3   
   1400096cf:	int3   
   1400096d0:	int3   
   1400096d1:	int3   
   1400096d2:	int3   
   1400096d3:	int3   
   1400096d4:	rex.W jmp QWORD PTR [rip+0x1cbd]        # 0x14000b398
   1400096db:	int3   
   1400096dc:	int3   
   1400096dd:	int3   
   1400096de:	int3   
   1400096df:	int3   
   1400096e0:	int3   
   1400096e1:	int3   
   1400096e2:	int3   
   1400096e3:	int3   
   1400096e4:	int3   
   1400096e5:	int3   
   1400096e6:	int3   
   1400096e7:	int3   
   1400096e8:	int3   
   1400096e9:	int3   
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400096f5:	push   rdi
   1400096f6:	sub    rsp,0x20
   1400096fa:	lea    rax,[rip+0x1f8f]        # 0x14000b690
   140009701:	mov    ebx,edx
   140009703:	mov    QWORD PTR [rcx],rax
   140009706:	mov    rdi,rcx
   140009709:	call   0x14000a180
   14000970e:	test   bl,0x1
   140009711:	je     0x14000971c
   140009713:	mov    rcx,rdi
   140009716:	call   QWORD PTR [rip+0x1c7c]        # 0x14000b398
   14000971c:	mov    rax,rdi
   14000971f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009724:	add    rsp,0x20
   140009728:	pop    rdi
   140009729:	ret    
   14000972a:	int3   
   14000972b:	int3   
   14000972c:	int3   
   14000972d:	int3   
   14000972e:	int3   
   14000972f:	int3   
   140009730:	sub    rsp,0x48
   140009734:	mov    rdx,rcx
   140009737:	lea    rcx,[rsp+0x20]
   14000973c:	call   0x1400095e0
   140009741:	lea    rdx,[rip+0x47b8]        # 0x14000df00
   140009748:	lea    rcx,[rsp+0x20]
   14000974d:	call   0x14000a1a8
   140009752:	int3   
   140009753:	int3   
   140009754:	int3   
   140009755:	int3   
   140009756:	int3   
   140009757:	int3   
   140009758:	int3   
   140009759:	int3   
   14000975a:	int3   
   14000975b:	int3   
   14000975c:	rex push rbx
   14000975e:	sub    rsp,0x40
   140009762:	mov    rbx,rcx
   140009765:	jmp    0x140009776
   140009767:	mov    rcx,rbx
   14000976a:	call   0x14000a19c
   14000976f:	test   eax,eax
   140009771:	je     0x140009787
   140009773:	mov    rcx,rbx
   140009776:	call   QWORD PTR [rip+0x1c0c]        # 0x14000b388
   14000977c:	test   rax,rax
   14000977f:	je     0x140009767
   140009781:	add    rsp,0x40
   140009785:	pop    rbx
   140009786:	ret    
   140009787:	mov    eax,DWORD PTR [rip+0x5a8b]        # 0x14000f218
   14000978d:	test   al,0x1
   14000978f:	jne    0x1400097b2
   140009791:	or     eax,0x1
   140009794:	lea    rcx,[rip+0x5a65]        # 0x14000f200
   14000979b:	mov    DWORD PTR [rip+0x5a77],eax        # 0x14000f218
   1400097a1:	call   0x140009608
   1400097a6:	lea    rcx,[rip+0x15e3]        # 0x14000ad90
   1400097ad:	call   0x14000a0ac
   1400097b2:	lea    rdx,[rip+0x5a47]        # 0x14000f200
   1400097b9:	lea    rcx,[rsp+0x20]
   1400097be:	call   0x1400095e0
   1400097c3:	lea    rdx,[rip+0x4736]        # 0x14000df00
   1400097ca:	lea    rcx,[rsp+0x20]
   1400097cf:	call   0x14000a1a8
   1400097d4:	int3   
   1400097d5:	int3   
   1400097d6:	int3   
   1400097d7:	int3   
   1400097d8:	int3   
   1400097d9:	int3   
   1400097da:	int3   
   1400097db:	int3   
   1400097dc:	int3   
   1400097dd:	int3   
   1400097de:	int3   
   1400097df:	int3   
   1400097e0:	sub    rsp,0x28
   1400097e4:	mov    eax,0x5a4d
   1400097e9:	cmp    WORD PTR [rip+0xffffffffffff6810],ax        # 0x140000000
   1400097f0:	je     0x1400097f6
   1400097f2:	xor    eax,eax
   1400097f4:	jmp    0x140009845
   1400097f6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff683f]        # 0x14000003c
   1400097fd:	lea    rax,[rip+0xffffffffffff67fc]        # 0x140000000
   140009804:	add    rcx,rax
   140009807:	cmp    DWORD PTR [rcx],0x4550
   14000980d:	jne    0x1400097f2
   14000980f:	movzx  eax,WORD PTR [rcx+0x18]
   140009813:	cmp    eax,0x10b
   140009818:	je     0x140009834
   14000981a:	cmp    eax,0x20b
   14000981f:	jne    0x1400097f2
   140009821:	xor    eax,eax
   140009823:	cmp    DWORD PTR [rcx+0x84],0xe
   14000982a:	jbe    0x140009845
   14000982c:	cmp    DWORD PTR [rcx+0xf8],eax
   140009832:	jmp    0x140009842
   140009834:	xor    eax,eax
   140009836:	cmp    DWORD PTR [rcx+0x74],0xe
   14000983a:	jbe    0x140009845
   14000983c:	cmp    DWORD PTR [rcx+0xe8],eax
   140009842:	setne  al
   140009845:	mov    ecx,0x2
   14000984a:	mov    DWORD PTR [rip+0x59f0],eax        # 0x14000f240
   140009850:	call   0x14000a288
   140009855:	mov    ecx,eax
   140009857:	call   QWORD PTR [rip+0x1ab3]        # 0x14000b310
   14000985d:	mov    rcx,QWORD PTR [rip+0x1a3c]        # 0x14000b2a0
   140009864:	or     rax,0xffffffffffffffff
   140009868:	mov    QWORD PTR [rip+0x61a9],rax        # 0x14000fa18
   14000986f:	mov    QWORD PTR [rip+0x61aa],rax        # 0x14000fa20
   140009876:	mov    eax,DWORD PTR [rip+0x5f50]        # 0x14000f7cc
   14000987c:	mov    DWORD PTR [rcx],eax
   14000987e:	mov    rcx,QWORD PTR [rip+0x1a23]        # 0x14000b2a8
   140009885:	mov    eax,DWORD PTR [rip+0x5f35]        # 0x14000f7c0
   14000988b:	mov    DWORD PTR [rcx],eax
   14000988d:	call   0x140003ab0
   140009892:	cmp    DWORD PTR [rip+0x577f],0x0        # 0x14000f018
   140009899:	jne    0x1400098a8
   14000989b:	lea    rcx,[rip+0xffffffffffffa20e]        # 0x140003ab0
   1400098a2:	call   QWORD PTR [rip+0x19d8]        # 0x14000b280
   1400098a8:	xor    eax,eax
   1400098aa:	add    rsp,0x28
   1400098ae:	ret    
   1400098af:	int3   
   1400098b0:	int3   
   1400098b1:	int3   
   1400098b2:	int3   
   1400098b3:	int3   
   1400098b4:	int3   
   1400098b5:	int3   
   1400098b6:	int3   
   1400098b7:	int3   
   1400098b8:	int3   
   1400098b9:	int3   
   1400098ba:	int3   
   1400098bb:	int3   
   1400098bc:	int3   
   1400098bd:	int3   
   1400098be:	int3   
   1400098bf:	int3   
   1400098c0:	sub    rsp,0x38
   1400098c4:	mov    eax,DWORD PTR [rip+0x5efe]        # 0x14000f7c8
   1400098ca:	lea    r8,[rip+0x5967]        # 0x14000f238
   1400098d1:	mov    r9d,DWORD PTR [rip+0x5eec]        # 0x14000f7c4
   1400098d8:	lea    rdx,[rip+0x5951]        # 0x14000f230
   1400098df:	mov    DWORD PTR [rip+0x595f],eax        # 0x14000f244
   1400098e5:	lea    rcx,[rip+0x593c]        # 0x14000f228
   1400098ec:	lea    rax,[rip+0x5951]        # 0x14000f244
   1400098f3:	mov    QWORD PTR [rsp+0x20],rax
   1400098f8:	call   QWORD PTR [rip+0x1a1a]        # 0x14000b318
   1400098fe:	mov    DWORD PTR [rip+0x5928],eax        # 0x14000f22c
   140009904:	add    rsp,0x38
   140009908:	ret    
   140009909:	int3   
   14000990a:	int3   
   14000990b:	int3   
   14000990c:	int3   
   14000990d:	int3   
   14000990e:	int3   
   14000990f:	int3   
   140009910:	mov    QWORD PTR [rsp+0x8],rbx
   140009915:	mov    QWORD PTR [rsp+0x10],rsi
   14000991a:	mov    QWORD PTR [rsp+0x18],rdi
   14000991f:	push   r12
   140009921:	push   r14
   140009923:	push   r15
   140009925:	sub    rsp,0xb0
   14000992c:	xor    r15d,r15d
   14000992f:	mov    DWORD PTR [rsp+0x20],r15d
   140009934:	lea    rcx,[rsp+0x40]
   140009939:	call   QWORD PTR [rip+0x1811]        # 0x14000b150
   14000993f:	nop
   140009940:	mov    rax,QWORD PTR gs:0x30
   140009949:	mov    rbx,QWORD PTR [rax+0x8]
   14000994d:	mov    r14d,r15d
   140009950:	xor    eax,eax
   140009952:	lock cmpxchg QWORD PTR [rip+0x60ad],rbx        # 0x14000fa08
   14000995b:	je     0x140009979
   14000995d:	cmp    rax,rbx
   140009960:	jne    0x14000996c
   140009962:	mov    edi,0x1
   140009967:	mov    r14d,edi
   14000996a:	jmp    0x14000997e
   14000996c:	mov    ecx,0x3e8
   140009971:	call   QWORD PTR [rip+0x1719]        # 0x14000b090
   140009977:	jmp    0x140009950
   140009979:	mov    edi,0x1
   14000997e:	mov    eax,DWORD PTR [rip+0x608c]        # 0x14000fa10
   140009984:	cmp    eax,edi
   140009986:	jne    0x140009996
   140009988:	mov    esi,0x1f
   14000998d:	mov    ecx,esi
   14000998f:	call   0x14000a2d4
   140009994:	jmp    0x140009a07
   140009996:	mov    eax,DWORD PTR [rip+0x6074]        # 0x14000fa10
   14000999c:	test   eax,eax
   14000999e:	jne    0x1400099fc
   1400099a0:	mov    DWORD PTR [rip+0x606a],edi        # 0x14000fa10
   1400099a6:	lea    r12,[rip+0x1acb]        # 0x14000b478
   1400099ad:	lea    rbx,[rip+0x1aac]        # 0x14000b460
   1400099b4:	mov    QWORD PTR [rsp+0x30],rbx
   1400099b9:	mov    eax,r15d
   1400099bc:	mov    DWORD PTR [rsp+0x24],eax
   1400099c0:	cmp    rbx,r12
   1400099c3:	jae    0x1400099ee
   1400099c5:	test   eax,eax
   1400099c7:	jne    0x1400099f2
   1400099c9:	mov    rsi,QWORD PTR [rbx]
   1400099cc:	test   rsi,rsi
   1400099cf:	je     0x1400099e3
   1400099d1:	mov    rcx,rsi
   1400099d4:	mov    rax,QWORD PTR [rip+0x1a3d]        # 0x14000b418
   1400099db:	call   rax
   1400099dd:	call   rsi
   1400099df:	mov    DWORD PTR [rsp+0x24],eax
   1400099e3:	add    rbx,0x8
   1400099e7:	mov    QWORD PTR [rsp+0x30],rbx
   1400099ec:	jmp    0x1400099c0
   1400099ee:	test   eax,eax
   1400099f0:	je     0x140009a02
   1400099f2:	mov    eax,0xff
   1400099f7:	jmp    0x140009b63
   1400099fc:	mov    DWORD PTR [rip+0x581e],edi        # 0x14000f220
   140009a02:	mov    esi,0x1f
   140009a07:	mov    eax,DWORD PTR [rip+0x6003]        # 0x14000fa10
   140009a0d:	cmp    eax,edi
   140009a0f:	jne    0x140009a2e
   140009a11:	lea    rdx,[rip+0x1a40]        # 0x14000b458
   140009a18:	lea    rcx,[rip+0x1a09]        # 0x14000b428
   140009a1f:	call   0x14000a49a
   140009a24:	mov    DWORD PTR [rip+0x5fe2],0x2        # 0x14000fa10
   140009a2e:	test   r14d,r14d
   140009a31:	jne    0x140009a3d
   140009a33:	mov    rax,r15
   140009a36:	xchg   QWORD PTR [rip+0x5fcb],rax        # 0x14000fa08
   140009a3d:	cmp    QWORD PTR [rip+0x5fe4],r15        # 0x14000fa28
   140009a44:	je     0x140009a74
   140009a46:	lea    rcx,[rip+0x5fdb]        # 0x14000fa28
   140009a4d:	call   0x14000a330
   140009a52:	test   eax,eax
   140009a54:	je     0x140009a74
   140009a56:	mov    rbx,QWORD PTR [rip+0x5fcb]        # 0x14000fa28
   140009a5d:	mov    rcx,rbx
   140009a60:	mov    rax,QWORD PTR [rip+0x19b1]        # 0x14000b418
   140009a67:	call   rax
   140009a69:	xor    r8d,r8d
   140009a6c:	lea    edx,[r8+0x2]
   140009a70:	xor    ecx,ecx
   140009a72:	call   rbx
   140009a74:	mov    rax,QWORD PTR [rip+0x181d]        # 0x14000b298
   140009a7b:	mov    rdx,QWORD PTR [rax]
   140009a7e:	test   rdx,rdx
   140009a81:	jne    0x140009a8d
   140009a83:	mov    eax,0xff
   140009a88:	jmp    0x140009b63
   140009a8d:	mov    QWORD PTR [rsp+0x28],rdx
   140009a92:	mov    ecx,DWORD PTR [rsp+0x20]
   140009a96:	cmp    WORD PTR [rdx],0x20
   140009a9a:	ja     0x140009b14
   140009a9c:	cmp    WORD PTR [rdx],r15w
   140009aa0:	je     0x140009aa6
   140009aa2:	test   ecx,ecx
   140009aa4:	jne    0x140009b14
   140009aa6:	movzx  eax,WORD PTR [rdx]
   140009aa9:	sub    ax,di
   140009aac:	cmp    ax,si
   140009aaf:	ja     0x140009abc
   140009ab1:	add    rdx,0x2
   140009ab5:	mov    QWORD PTR [rsp+0x28],rdx
   140009aba:	jmp    0x140009aa6
   140009abc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140009ac0:	movzx  eax,WORD PTR [rsp+0x80]
   140009ac8:	mov    r9d,0xa
   140009ace:	and    cl,dil
   140009ad1:	cmovne r9d,eax
   140009ad5:	mov    r8,rdx
   140009ad8:	xor    edx,edx
   140009ada:	lea    rcx,[rip+0xffffffffffff651f]        # 0x140000000
   140009ae1:	call   0x1400015b0
   140009ae6:	mov    DWORD PTR [rip+0x5730],eax        # 0x14000f21c
   140009aec:	cmp    DWORD PTR [rip+0x574d],r15d        # 0x14000f240
   140009af3:	jne    0x140009afd
   140009af5:	mov    ecx,eax
   140009af7:	call   QWORD PTR [rip+0x180b]        # 0x14000b308
   140009afd:	cmp    DWORD PTR [rip+0x571c],r15d        # 0x14000f220
   140009b04:	jne    0x140009b12
   140009b06:	call   QWORD PTR [rip+0x176c]        # 0x14000b278
   140009b0c:	mov    eax,DWORD PTR [rip+0x570a]        # 0x14000f21c
   140009b12:	jmp    0x140009b63
   140009b14:	cmp    WORD PTR [rdx],0x22
   140009b18:	jne    0x140009b28
   140009b1a:	mov    eax,r15d
   140009b1d:	test   ecx,ecx
   140009b1f:	sete   al
   140009b22:	mov    ecx,eax
   140009b24:	mov    DWORD PTR [rsp+0x20],eax
   140009b28:	add    rdx,0x2
   140009b2c:	mov    QWORD PTR [rsp+0x28],rdx
   140009b31:	jmp    0x140009a96
   140009b36:	mov    DWORD PTR [rip+0x56e0],eax        # 0x14000f21c
   140009b3c:	cmp    DWORD PTR [rip+0x56fd],0x0        # 0x14000f240
   140009b43:	jne    0x140009b4e
   140009b45:	mov    ecx,eax
   140009b47:	call   QWORD PTR [rip+0x17b3]        # 0x14000b300
   140009b4d:	int3   
   140009b4e:	cmp    DWORD PTR [rip+0x56cb],0x0        # 0x14000f220
   140009b55:	jne    0x140009b63
   140009b57:	call   QWORD PTR [rip+0x171b]        # 0x14000b278
   140009b5d:	mov    eax,DWORD PTR [rip+0x56b9]        # 0x14000f21c
   140009b63:	lea    r11,[rsp+0xb0]
   140009b6b:	mov    rbx,QWORD PTR [r11+0x20]
   140009b6f:	mov    rsi,QWORD PTR [r11+0x28]
   140009b73:	mov    rdi,QWORD PTR [r11+0x30]
   140009b77:	mov    rsp,r11
   140009b7a:	pop    r15
   140009b7c:	pop    r14
   140009b7e:	pop    r12
   140009b80:	ret    
   140009b81:	int3   
   140009b82:	int3   
   140009b83:	int3   
   140009b84:	int3   
   140009b85:	int3   
   140009b86:	int3   
   140009b87:	int3   
   140009b88:	int3   
   140009b89:	int3   
   140009b8a:	int3   
   140009b8b:	int3   
   140009b8c:	int3   
   140009b8d:	int3   
   140009b8e:	int3   
   140009b8f:	int3   
   140009b90:	sub    rsp,0x28
   140009b94:	call   0x14000a3c4
   140009b99:	add    rsp,0x28
   140009b9d:	jmp    0x140009910
   140009ba2:	int3   
   140009ba3:	int3   
   140009ba4:	int3   
   140009ba5:	int3   
   140009ba6:	int3   
   140009ba7:	int3   
   140009ba8:	int3   
   140009ba9:	int3   
   140009baa:	int3   
   140009bab:	int3   
   140009bac:	int3   
   140009bad:	int3   
   140009bae:	int3   
   140009baf:	int3   
   140009bb0:	int3   
   140009bb1:	int3   
   140009bb2:	int3   
   140009bb3:	int3   
   140009bb4:	int3   
   140009bb5:	int3   
   140009bb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009bc0:	cmp    rcx,QWORD PTR [rip+0x5459]        # 0x14000f020
   140009bc7:	jne    0x140009bd9
   140009bc9:	rol    rcx,0x10
   140009bcd:	test   cx,0xffff
   140009bd2:	jne    0x140009bd5
   140009bd4:	ret    
   140009bd5:	ror    rcx,0x10
   140009bd9:	jmp    0x140009d90
   140009bde:	int3   
   140009bdf:	int3   
   140009be0:	int3   
   140009be1:	int3   
   140009be2:	int3   
   140009be3:	int3   
   140009be4:	mov    rax,rsp
   140009be7:	mov    QWORD PTR [rax+0x20],r9
   140009beb:	mov    DWORD PTR [rax+0x18],r8d
   140009bef:	mov    QWORD PTR [rax+0x10],rdx
   140009bf3:	push   rbx
   140009bf4:	push   rsi
   140009bf5:	push   rdi
   140009bf6:	push   r14
   140009bf8:	sub    rsp,0x38
   140009bfc:	mov    r14,r9
   140009bff:	movsxd rbx,r8d
   140009c02:	mov    rsi,rdx
   140009c05:	and    DWORD PTR [rax-0x38],0x0
   140009c09:	mov    rdi,rbx
   140009c0c:	imul   rdi,rdx
   140009c10:	add    rdi,rcx
   140009c13:	mov    QWORD PTR [rax+0x8],rdi
   140009c17:	sub    ebx,0x1
   140009c1a:	mov    DWORD PTR [rsp+0x70],ebx
   140009c1e:	js     0x140009c3c
   140009c20:	sub    rdi,rsi
   140009c23:	mov    QWORD PTR [rsp+0x60],rdi
   140009c28:	mov    rcx,r14
   140009c2b:	mov    rax,QWORD PTR [rip+0x17e6]        # 0x14000b418
   140009c32:	call   rax
   140009c34:	mov    rcx,rdi
   140009c37:	call   r14
   140009c3a:	jmp    0x140009c17
   140009c3c:	mov    DWORD PTR [rsp+0x20],0x1
   140009c44:	add    rsp,0x38
   140009c48:	pop    r14
   140009c4a:	pop    rdi
   140009c4b:	pop    rsi
   140009c4c:	pop    rbx
   140009c4d:	ret    
   140009c4e:	int3   
   140009c4f:	int3   
   140009c50:	int3   
   140009c51:	int3   
   140009c52:	int3   
   140009c53:	int3   
   140009c54:	mov    QWORD PTR [rsp+0x10],rbx
   140009c59:	mov    DWORD PTR [rsp+0x18],r8d
   140009c5e:	mov    QWORD PTR [rsp+0x8],rcx
   140009c63:	push   rsi
   140009c64:	push   rdi
   140009c65:	push   r14
   140009c67:	sub    rsp,0x40
   140009c6b:	mov    rsi,r9
   140009c6e:	mov    ebx,r8d
   140009c71:	mov    r14,rdx
   140009c74:	mov    rdi,rcx
   140009c77:	sub    ebx,0x1
   140009c7a:	mov    DWORD PTR [rsp+0x70],ebx
   140009c7e:	js     0x140009c98
   140009c80:	sub    rdi,r14
   140009c83:	mov    QWORD PTR [rsp+0x60],rdi
   140009c88:	mov    rcx,rsi
   140009c8b:	call   QWORD PTR [rip+0x1787]        # 0x14000b418
   140009c91:	mov    rcx,rdi
   140009c94:	call   rsi
   140009c96:	jmp    0x140009c77
   140009c98:	jmp    0x140009c9a
   140009c9a:	mov    rbx,QWORD PTR [rsp+0x68]
   140009c9f:	add    rsp,0x40
   140009ca3:	pop    r14
   140009ca5:	pop    rdi
   140009ca6:	pop    rsi
   140009ca7:	ret    
   140009ca8:	int3   
   140009ca9:	int3   
   140009caa:	int3   
   140009cab:	int3   
   140009cac:	int3   
   140009cad:	int3   
   140009cae:	int3   
   140009caf:	int3   
   140009cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140009cb5:	push   rdi
   140009cb6:	sub    rsp,0x20
   140009cba:	mov    ebx,edx
   140009cbc:	mov    rdi,rcx
   140009cbf:	call   QWORD PTR [rip+0x15f3]        # 0x14000b2b8
   140009cc5:	test   bl,0x1
   140009cc8:	je     0x140009cd2
   140009cca:	mov    rcx,rdi
   140009ccd:	call   0x1400096d4
   140009cd2:	mov    rax,rdi
   140009cd5:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cda:	add    rsp,0x20
   140009cde:	pop    rdi
   140009cdf:	ret    
   140009ce0:	int3   
   140009ce1:	int3   
   140009ce2:	int3   
   140009ce3:	int3   
   140009ce4:	int3   
   140009ce5:	int3   
   140009ce6:	int3   
   140009ce7:	int3   
   140009ce8:	int3   
   140009ce9:	int3   
   140009cea:	int3   
   140009ceb:	int3   
   140009cec:	int3   
   140009ced:	int3   
   140009cee:	int3   
   140009cef:	int3   
   140009cf0:	sub    rsp,0x38
   140009cf4:	mov    r9,rdx
   140009cf7:	test   rdx,rdx
   140009cfa:	je     0x140009d31
   140009cfc:	xor    edx,edx
   140009cfe:	lea    rax,[rdx-0x20]
   140009d02:	div    r9
   140009d05:	cmp    rax,r8
   140009d08:	jae    0x140009d31
   140009d0a:	call   0x14000a4b2
   140009d0f:	and    QWORD PTR [rsp+0x20],0x0
   140009d15:	xor    r9d,r9d
   140009d18:	xor    r8d,r8d
   140009d1b:	xor    edx,edx
   140009d1d:	xor    ecx,ecx
   140009d1f:	mov    DWORD PTR [rax],0xc
   140009d25:	call   0x14000a4c0
   140009d2a:	xor    eax,eax
   140009d2c:	add    rsp,0x38
   140009d30:	ret    
   140009d31:	imul   r9,r8
   140009d35:	mov    rdx,r9
   140009d38:	add    rsp,0x38
   140009d3c:	jmp    0x14000a596
   140009d41:	int3   
   140009d42:	int3   
   140009d43:	int3   
   140009d44:	int3   
   140009d45:	int3   
   140009d46:	int3   
   140009d47:	int3   
   140009d48:	rex push rbx
   140009d4a:	sub    rsp,0x20
   140009d4e:	mov    rbx,rcx
   140009d51:	xor    ecx,ecx
   140009d53:	call   QWORD PTR [rip+0x1407]        # 0x14000b160
   140009d59:	mov    rcx,rbx
   140009d5c:	call   QWORD PTR [rip+0x13f6]        # 0x14000b158
   140009d62:	call   QWORD PTR [rip+0x1400]        # 0x14000b168
   140009d68:	mov    rcx,rax
   140009d6b:	mov    edx,0xc0000409
   140009d70:	add    rsp,0x20
   140009d74:	pop    rbx
   140009d75:	rex.W jmp QWORD PTR [rip+0x13f4]        # 0x14000b170
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	int3   
   140009d81:	int3   
   140009d82:	int3   
   140009d83:	int3   
   140009d84:	int3   
   140009d85:	int3   
   140009d86:	int3   
   140009d87:	int3   
   140009d88:	int3   
   140009d89:	int3   
   140009d8a:	int3   
   140009d8b:	int3   
   140009d8c:	int3   
   140009d8d:	int3   
   140009d8e:	int3   
   140009d8f:	int3   
   140009d90:	mov    QWORD PTR [rsp+0x8],rcx
   140009d95:	sub    rsp,0x88
   140009d9c:	lea    rcx,[rip+0x554d]        # 0x14000f2f0
   140009da3:	call   QWORD PTR [rip+0x160f]        # 0x14000b3b8
   140009da9:	mov    rax,QWORD PTR [rip+0x5638]        # 0x14000f3e8
   140009db0:	mov    QWORD PTR [rsp+0x48],rax
   140009db5:	xor    r8d,r8d
   140009db8:	lea    rdx,[rsp+0x50]
   140009dbd:	mov    rcx,QWORD PTR [rsp+0x48]
   140009dc2:	call   QWORD PTR [rip+0x15e8]        # 0x14000b3b0
   140009dc8:	mov    QWORD PTR [rsp+0x40],rax
   140009dcd:	cmp    QWORD PTR [rsp+0x40],0x0
   140009dd3:	je     0x140009e17
   140009dd5:	mov    QWORD PTR [rsp+0x38],0x0
   140009dde:	lea    rax,[rsp+0x58]
   140009de3:	mov    QWORD PTR [rsp+0x30],rax
   140009de8:	lea    rax,[rsp+0x60]
   140009ded:	mov    QWORD PTR [rsp+0x28],rax
   140009df2:	lea    rax,[rip+0x54f7]        # 0x14000f2f0
   140009df9:	mov    QWORD PTR [rsp+0x20],rax
   140009dfe:	mov    r9,QWORD PTR [rsp+0x40]
   140009e03:	mov    r8,QWORD PTR [rsp+0x48]
   140009e08:	mov    rdx,QWORD PTR [rsp+0x50]
   140009e0d:	xor    ecx,ecx
   140009e0f:	call   QWORD PTR [rip+0x1593]        # 0x14000b3a8
   140009e15:	jmp    0x140009e3a
   140009e17:	mov    rax,QWORD PTR [rip+0x556a]        # 0x14000f388
   140009e1e:	mov    rax,QWORD PTR [rax]
   140009e21:	mov    QWORD PTR [rip+0x55c0],rax        # 0x14000f3e8
   140009e28:	mov    rax,QWORD PTR [rip+0x5559]        # 0x14000f388
   140009e2f:	add    rax,0x8
   140009e33:	mov    QWORD PTR [rip+0x554e],rax        # 0x14000f388
   140009e3a:	mov    rax,QWORD PTR [rip+0x55a7]        # 0x14000f3e8
   140009e41:	mov    QWORD PTR [rip+0x5418],rax        # 0x14000f260
   140009e48:	mov    rax,QWORD PTR [rsp+0x90]
   140009e50:	mov    QWORD PTR [rip+0x5519],rax        # 0x14000f370
   140009e57:	mov    DWORD PTR [rip+0x53ef],0xc0000409        # 0x14000f250
   140009e61:	mov    DWORD PTR [rip+0x53e9],0x1        # 0x14000f254
   140009e6b:	mov    DWORD PTR [rip+0x53f3],0x3        # 0x14000f268
   140009e75:	mov    eax,0x8
   140009e7a:	imul   rax,rax,0x0
   140009e7e:	lea    rcx,[rip+0x53eb]        # 0x14000f270
   140009e85:	mov    QWORD PTR [rcx+rax*1],0x2
   140009e8d:	mov    eax,0x8
   140009e92:	imul   rax,rax,0x1
   140009e96:	lea    rcx,[rip+0x53d3]        # 0x14000f270
   140009e9d:	mov    rdx,QWORD PTR [rip+0x517c]        # 0x14000f020
   140009ea4:	mov    QWORD PTR [rcx+rax*1],rdx
   140009ea8:	mov    eax,0x8
   140009ead:	imul   rax,rax,0x2
   140009eb1:	lea    rcx,[rip+0x53b8]        # 0x14000f270
   140009eb8:	mov    rdx,QWORD PTR [rip+0x5169]        # 0x14000f028
   140009ebf:	mov    QWORD PTR [rcx+rax*1],rdx
   140009ec3:	mov    eax,0x8
   140009ec8:	imul   rax,rax,0x0
   140009ecc:	mov    rcx,QWORD PTR [rip+0x514d]        # 0x14000f020
   140009ed3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140009ed8:	mov    eax,0x8
   140009edd:	imul   rax,rax,0x1
   140009ee1:	mov    rcx,QWORD PTR [rip+0x5140]        # 0x14000f028
   140009ee8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140009eed:	lea    rcx,[rip+0x17bc]        # 0x14000b6b0
   140009ef4:	call   0x140009d48
   140009ef9:	add    rsp,0x88
   140009f00:	ret    
   140009f01:	int3   
   140009f02:	int3   
   140009f03:	int3   
   140009f04:	int3   
   140009f05:	int3   
   140009f06:	int3   
   140009f07:	int3   
   140009f08:	sub    rsp,0x78
   140009f0c:	lea    rcx,[rip+0x53dd]        # 0x14000f2f0
   140009f13:	call   QWORD PTR [rip+0x149f]        # 0x14000b3b8
   140009f19:	mov    rax,QWORD PTR [rip+0x54c8]        # 0x14000f3e8
   140009f20:	mov    QWORD PTR [rsp+0x48],rax
   140009f25:	xor    r8d,r8d
   140009f28:	lea    rdx,[rsp+0x50]
   140009f2d:	mov    rcx,QWORD PTR [rsp+0x48]
   140009f32:	call   QWORD PTR [rip+0x1478]        # 0x14000b3b0
   140009f38:	mov    QWORD PTR [rsp+0x40],rax
   140009f3d:	cmp    QWORD PTR [rsp+0x40],0x0
   140009f43:	je     0x140009f87
   140009f45:	mov    QWORD PTR [rsp+0x38],0x0
   140009f4e:	lea    rax,[rsp+0x58]
   140009f53:	mov    QWORD PTR [rsp+0x30],rax
   140009f58:	lea    rax,[rsp+0x60]
   140009f5d:	mov    QWORD PTR [rsp+0x28],rax
   140009f62:	lea    rax,[rip+0x5387]        # 0x14000f2f0
   140009f69:	mov    QWORD PTR [rsp+0x20],rax
   140009f6e:	mov    r9,QWORD PTR [rsp+0x40]
   140009f73:	mov    r8,QWORD PTR [rsp+0x48]
   140009f78:	mov    rdx,QWORD PTR [rsp+0x50]
   140009f7d:	xor    ecx,ecx
   140009f7f:	call   QWORD PTR [rip+0x1423]        # 0x14000b3a8
   140009f85:	jmp    0x140009faa
   140009f87:	mov    rax,QWORD PTR [rip+0x53fa]        # 0x14000f388
   140009f8e:	mov    rax,QWORD PTR [rax]
   140009f91:	mov    QWORD PTR [rip+0x5450],rax        # 0x14000f3e8
   140009f98:	mov    rax,QWORD PTR [rip+0x53e9]        # 0x14000f388
   140009f9f:	add    rax,0x8
   140009fa3:	mov    QWORD PTR [rip+0x53de],rax        # 0x14000f388
   140009faa:	mov    rax,QWORD PTR [rip+0x5437]        # 0x14000f3e8
   140009fb1:	mov    QWORD PTR [rip+0x52a8],rax        # 0x14000f260
   140009fb8:	mov    DWORD PTR [rip+0x528e],0xc0000409        # 0x14000f250
   140009fc2:	mov    DWORD PTR [rip+0x5288],0x1        # 0x14000f254
   140009fcc:	mov    DWORD PTR [rip+0x5292],0x1        # 0x14000f268
   140009fd6:	mov    eax,0x8
   140009fdb:	imul   rax,rax,0x0
   140009fdf:	lea    rcx,[rip+0x528a]        # 0x14000f270
   140009fe6:	mov    QWORD PTR [rcx+rax*1],0x8
   140009fee:	lea    rcx,[rip+0x16bb]        # 0x14000b6b0
   140009ff5:	call   0x140009d48
   140009ffa:	add    rsp,0x78
   140009ffe:	ret    
   140009fff:	int3   
   14000a000:	int3   
   14000a001:	int3   
   14000a002:	int3   
   14000a003:	int3   
   14000a004:	int3   
   14000a005:	int3   
   14000a006:	int3   
   14000a007:	int3   
   14000a008:	mov    QWORD PTR [rsp+0x8],rbx
   14000a00d:	push   rdi
   14000a00e:	sub    rsp,0x20
   14000a012:	mov    rdi,rcx
   14000a015:	mov    rax,QWORD PTR [rip+0x5a04]        # 0x14000fa20
   14000a01c:	mov    QWORD PTR [rsp+0x38],rax
   14000a021:	cmp    rax,0xffffffffffffffff
   14000a025:	jne    0x14000a03e
   14000a027:	mov    rbx,QWORD PTR [rip+0x12c2]        # 0x14000b2f0
   14000a02e:	mov    rcx,rbx
   14000a031:	call   QWORD PTR [rip+0x13e1]        # 0x14000b418
   14000a037:	mov    rcx,rdi
   14000a03a:	call   rbx
   14000a03c:	jmp    0x14000a09b
   14000a03e:	mov    ecx,0x8
   14000a043:	call   0x14000a5a2
   14000a048:	nop
   14000a049:	mov    rax,QWORD PTR [rip+0x59d0]        # 0x14000fa20
   14000a050:	mov    QWORD PTR [rsp+0x38],rax
   14000a055:	mov    rax,QWORD PTR [rip+0x59bc]        # 0x14000fa18
   14000a05c:	mov    QWORD PTR [rsp+0x40],rax
   14000a061:	lea    r8,[rsp+0x40]
   14000a066:	lea    rdx,[rsp+0x38]
   14000a06b:	mov    rcx,rdi
   14000a06e:	call   0x14000a5ba
   14000a073:	mov    rbx,rax
   14000a076:	mov    rdx,QWORD PTR [rsp+0x38]
   14000a07b:	mov    QWORD PTR [rip+0x599e],rdx        # 0x14000fa20
   14000a082:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a087:	mov    QWORD PTR [rip+0x598a],rdx        # 0x14000fa18
   14000a08e:	mov    ecx,0x8
   14000a093:	call   0x14000a5ae
   14000a098:	mov    rax,rbx
   14000a09b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a0a0:	add    rsp,0x20
   14000a0a4:	pop    rdi
   14000a0a5:	ret    
   14000a0a6:	int3   
   14000a0a7:	int3   
   14000a0a8:	int3   
   14000a0a9:	int3   
   14000a0aa:	int3   
   14000a0ab:	int3   
   14000a0ac:	sub    rsp,0x28
   14000a0b0:	call   0x14000a008
   14000a0b5:	neg    rax
   14000a0b8:	sbb    eax,eax
   14000a0ba:	neg    eax
   14000a0bc:	dec    eax
   14000a0be:	add    rsp,0x28
   14000a0c2:	ret    
   14000a0c3:	int3   
   14000a0c4:	int3   
   14000a0c5:	int3   
   14000a0c6:	int3   
   14000a0c7:	int3   
   14000a0c8:	int3   
   14000a0c9:	int3   
   14000a0ca:	int3   
   14000a0cb:	int3   
   14000a0cc:	mov    rax,rsp
   14000a0cf:	mov    QWORD PTR [rax+0x18],rbx
   14000a0d3:	mov    QWORD PTR [rax+0x20],rsi
   14000a0d7:	mov    QWORD PTR [rax+0x10],rdx
   14000a0db:	mov    QWORD PTR [rax+0x8],rcx
   14000a0df:	push   rdi
   14000a0e0:	push   r14
   14000a0e2:	push   r15
   14000a0e4:	sub    rsp,0x30
   14000a0e8:	mov    r14,r9
   14000a0eb:	mov    r15d,r8d
   14000a0ee:	mov    rsi,rdx
   14000a0f1:	mov    rdi,rcx
   14000a0f4:	xor    ebx,ebx
   14000a0f6:	mov    DWORD PTR [rax-0x28],ebx
   14000a0f9:	mov    DWORD PTR [rax-0x24],ebx
   14000a0fc:	mov    DWORD PTR [rsp+0x20],ebx
   14000a100:	cmp    ebx,r15d
   14000a103:	jge    0x14000a120
   14000a105:	mov    rcx,r14
   14000a108:	call   QWORD PTR [rip+0x130a]        # 0x14000b418
   14000a10e:	mov    rcx,rdi
   14000a111:	call   r14
   14000a114:	add    rdi,rsi
   14000a117:	mov    QWORD PTR [rsp+0x50],rdi
   14000a11c:	inc    ebx
   14000a11e:	jmp    0x14000a0fc
   14000a120:	mov    DWORD PTR [rsp+0x24],0x1
   14000a128:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a12d:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a132:	add    rsp,0x30
   14000a136:	pop    r15
   14000a138:	pop    r14
   14000a13a:	pop    rdi
   14000a13b:	ret    
   14000a13c:	int3   
   14000a13d:	int3   
   14000a13e:	int3   
   14000a13f:	int3   
   14000a140:	int3   
   14000a141:	int3   
   14000a142:	int3   
   14000a143:	int3   
   14000a144:	int3   
   14000a145:	int3   
   14000a146:	int3   
   14000a147:	int3   
   14000a148:	int3   
   14000a149:	int3   
   14000a14a:	int3   
   14000a14b:	int3   
   14000a14c:	int3   
   14000a14d:	int3   
   14000a14e:	int3   
   14000a14f:	int3   
   14000a150:	jmp    QWORD PTR [rip+0x1212]        # 0x14000b368
   14000a156:	int3   
   14000a157:	int3   
   14000a158:	int3   
   14000a159:	int3   
   14000a15a:	int3   
   14000a15b:	int3   
   14000a15c:	jmp    QWORD PTR [rip+0x11fe]        # 0x14000b360
   14000a162:	int3   
   14000a163:	int3   
   14000a164:	int3   
   14000a165:	int3   
   14000a166:	int3   
   14000a167:	int3   
   14000a168:	jmp    QWORD PTR [rip+0x11ea]        # 0x14000b358
   14000a16e:	int3   
   14000a16f:	int3   
   14000a170:	int3   
   14000a171:	int3   
   14000a172:	int3   
   14000a173:	int3   
   14000a174:	jmp    QWORD PTR [rip+0x11d6]        # 0x14000b350
   14000a17a:	int3   
   14000a17b:	int3   
   14000a17c:	int3   
   14000a17d:	int3   
   14000a17e:	int3   
   14000a17f:	int3   
   14000a180:	jmp    QWORD PTR [rip+0x11c2]        # 0x14000b348
   14000a186:	int3   
   14000a187:	int3   
   14000a188:	int3   
   14000a189:	int3   
   14000a18a:	int3   
   14000a18b:	int3   
   14000a18c:	int3   
   14000a18d:	int3   
   14000a18e:	int3   
   14000a18f:	int3   
   14000a190:	jmp    QWORD PTR [rip+0x11aa]        # 0x14000b340
   14000a196:	int3   
   14000a197:	int3   
   14000a198:	int3   
   14000a199:	int3   
   14000a19a:	int3   
   14000a19b:	int3   
   14000a19c:	jmp    QWORD PTR [rip+0x1196]        # 0x14000b338
   14000a1a2:	int3   
   14000a1a3:	int3   
   14000a1a4:	int3   
   14000a1a5:	int3   
   14000a1a6:	int3   
   14000a1a7:	int3   
   14000a1a8:	jmp    QWORD PTR [rip+0x1182]        # 0x14000b330
   14000a1ae:	int3   
   14000a1af:	int3   
   14000a1b0:	int3   
   14000a1b1:	int3   
   14000a1b2:	int3   
   14000a1b3:	int3   
   14000a1b4:	int3   
   14000a1b5:	int3   
   14000a1b6:	int3   
   14000a1b7:	int3   
   14000a1b8:	int3   
   14000a1b9:	int3   
   14000a1ba:	int3   
   14000a1bb:	int3   
   14000a1bc:	int3   
   14000a1bd:	int3   
   14000a1be:	int3   
   14000a1bf:	int3   
   14000a1c0:	sub    rsp,0x28
   14000a1c4:	mov    rax,QWORD PTR [rcx]
   14000a1c7:	cmp    DWORD PTR [rax],0xe06d7363
   14000a1cd:	jne    0x14000a1f2
   14000a1cf:	cmp    DWORD PTR [rax+0x18],0x4
   14000a1d3:	jne    0x14000a1f2
   14000a1d5:	mov    ecx,DWORD PTR [rax+0x20]
   14000a1d8:	lea    eax,[rcx-0x19930520]
   14000a1de:	cmp    eax,0x2
   14000a1e1:	jbe    0x14000a1eb
   14000a1e3:	cmp    ecx,0x1994000
   14000a1e9:	jne    0x14000a1f2
   14000a1eb:	call   QWORD PTR [rip+0x10bf]        # 0x14000b2b0
   14000a1f1:	int3   
   14000a1f2:	xor    eax,eax
   14000a1f4:	add    rsp,0x28
   14000a1f8:	ret    
   14000a1f9:	int3   
   14000a1fa:	int3   
   14000a1fb:	int3   
   14000a1fc:	int3   
   14000a1fd:	int3   
   14000a1fe:	int3   
   14000a1ff:	int3   
   14000a200:	sub    rsp,0x28
   14000a204:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000a1c0
   14000a20b:	call   QWORD PTR [rip+0xf4f]        # 0x14000b160
   14000a211:	xor    eax,eax
   14000a213:	add    rsp,0x28
   14000a217:	ret    
   14000a218:	int3   
   14000a219:	int3   
   14000a21a:	int3   
   14000a21b:	int3   
   14000a21c:	int3   
   14000a21d:	int3   
   14000a21e:	jmp    QWORD PTR [rip+0x1104]        # 0x14000b328
   14000a224:	int3   
   14000a225:	int3   
   14000a226:	int3   
   14000a227:	int3   
   14000a228:	int3   
   14000a229:	int3   
   14000a22a:	int3   
   14000a22b:	int3   
   14000a22c:	sub    rsp,0x18
   14000a230:	xor    edx,edx
   14000a232:	lea    rax,[rcx-0x1]
   14000a236:	cmp    rax,0xfffffffffffffffd
   14000a23a:	ja     0x14000a278
   14000a23c:	mov    eax,0x5a4d
   14000a241:	cmp    WORD PTR [rcx],ax
   14000a244:	jne    0x14000a270
   14000a246:	cmp    DWORD PTR [rcx+0x3c],edx
   14000a249:	jl     0x14000a270
   14000a24b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000a252:	jae    0x14000a270
   14000a254:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000a258:	add    rax,rcx
   14000a25b:	mov    QWORD PTR [rsp],rax
   14000a25f:	cmp    DWORD PTR [rax],0x4550
   14000a265:	cmovne rax,rdx
   14000a269:	mov    rdx,rax
   14000a26c:	mov    QWORD PTR [rsp],rax
   14000a270:	jmp    0x14000a278
   14000a272:	xor    edx,edx
   14000a274:	mov    QWORD PTR [rsp],rdx
   14000a278:	mov    rax,rdx
   14000a27b:	add    rsp,0x18
   14000a27f:	ret    
   14000a280:	int3   
   14000a281:	int3   
   14000a282:	int3   
   14000a283:	int3   
   14000a284:	int3   
   14000a285:	int3   
   14000a286:	int3   
   14000a287:	int3   
   14000a288:	rex push rbx
   14000a28a:	sub    rsp,0x20
   14000a28e:	mov    ebx,ecx
   14000a290:	xor    ecx,ecx
   14000a292:	call   QWORD PTR [rip+0xe88]        # 0x14000b120
   14000a298:	test   rax,rax
   14000a29b:	je     0x14000a2c5
   14000a29d:	mov    rcx,rax
   14000a2a0:	call   0x14000a22c
   14000a2a5:	test   rax,rax
   14000a2a8:	je     0x14000a2c5
   14000a2aa:	mov    ecx,0x2
   14000a2af:	cmp    WORD PTR [rax+0x5c],cx
   14000a2b3:	jne    0x14000a2b9
   14000a2b5:	mov    eax,ecx
   14000a2b7:	jmp    0x14000a2c7
   14000a2b9:	cmp    WORD PTR [rax+0x5c],0x3
   14000a2be:	mov    eax,0x1
   14000a2c3:	je     0x14000a2c7
   14000a2c5:	mov    eax,ebx
   14000a2c7:	add    rsp,0x20
   14000a2cb:	pop    rbx
   14000a2cc:	ret    
   14000a2cd:	int3   
   14000a2ce:	int3   
   14000a2cf:	int3   
   14000a2d0:	int3   
   14000a2d1:	int3   
   14000a2d2:	int3   
   14000a2d3:	int3   
   14000a2d4:	jmp    QWORD PTR [rip+0x1046]        # 0x14000b320
   14000a2da:	int3   
   14000a2db:	int3   
   14000a2dc:	int3   
   14000a2dd:	int3   
   14000a2de:	int3   
   14000a2df:	int3   
   14000a2e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000a2e4:	xor    r9d,r9d
   14000a2e7:	add    r8,rcx
   14000a2ea:	mov    r10,rdx
   14000a2ed:	movzx  eax,WORD PTR [r8+0x14]
   14000a2f2:	movzx  r11d,WORD PTR [r8+0x6]
   14000a2f7:	add    rax,0x18
   14000a2fb:	add    rax,r8
   14000a2fe:	test   r11d,r11d
   14000a301:	je     0x14000a321
   14000a303:	mov    edx,DWORD PTR [rax+0xc]
   14000a306:	cmp    r10,rdx
   14000a309:	jb     0x14000a315
   14000a30b:	mov    ecx,DWORD PTR [rax+0x8]
   14000a30e:	add    ecx,edx
   14000a310:	cmp    r10,rcx
   14000a313:	jb     0x14000a323
   14000a315:	inc    r9d
   14000a318:	add    rax,0x28
   14000a31c:	cmp    r9d,r11d
   14000a31f:	jb     0x14000a303
   14000a321:	xor    eax,eax
   14000a323:	ret    
   14000a324:	int3   
   14000a325:	int3   
   14000a326:	int3   
   14000a327:	int3   
   14000a328:	int3   
   14000a329:	int3   
   14000a32a:	int3   
   14000a32b:	int3   
   14000a32c:	int3   
   14000a32d:	int3   
   14000a32e:	int3   
   14000a32f:	int3   
   14000a330:	mov    QWORD PTR [rsp+0x8],rbx
   14000a335:	push   rdi
   14000a336:	sub    rsp,0x20
   14000a33a:	mov    rbx,rcx
   14000a33d:	lea    rdi,[rip+0xffffffffffff5cbc]        # 0x140000000
   14000a344:	mov    rcx,rdi
   14000a347:	call   0x14000a390
   14000a34c:	test   eax,eax
   14000a34e:	je     0x14000a372
   14000a350:	sub    rbx,rdi
   14000a353:	mov    rdx,rbx
   14000a356:	mov    rcx,rdi
   14000a359:	call   0x14000a2e0
   14000a35e:	test   rax,rax
   14000a361:	je     0x14000a372
   14000a363:	mov    eax,DWORD PTR [rax+0x24]
   14000a366:	shr    eax,0x1f
   14000a369:	not    eax
   14000a36b:	and    eax,0x1
   14000a36e:	jmp    0x14000a372
   14000a370:	xor    eax,eax
   14000a372:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a377:	add    rsp,0x20
   14000a37b:	pop    rdi
   14000a37c:	ret    
   14000a37d:	int3   
   14000a37e:	int3   
   14000a37f:	int3   
   14000a380:	int3   
   14000a381:	int3   
   14000a382:	int3   
   14000a383:	int3   
   14000a384:	int3   
   14000a385:	int3   
   14000a386:	int3   
   14000a387:	int3   
   14000a388:	int3   
   14000a389:	int3   
   14000a38a:	int3   
   14000a38b:	int3   
   14000a38c:	int3   
   14000a38d:	int3   
   14000a38e:	int3   
   14000a38f:	int3   
   14000a390:	mov    rax,rcx
   14000a393:	mov    ecx,0x5a4d
   14000a398:	cmp    WORD PTR [rax],cx
   14000a39b:	je     0x14000a3a0
   14000a39d:	xor    eax,eax
   14000a39f:	ret    
   14000a3a0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000a3a4:	add    rcx,rax
   14000a3a7:	xor    eax,eax
   14000a3a9:	cmp    DWORD PTR [rcx],0x4550
   14000a3af:	jne    0x14000a3bd
   14000a3b1:	mov    edx,0x20b
   14000a3b6:	cmp    WORD PTR [rcx+0x18],dx
   14000a3ba:	sete   al
   14000a3bd:	ret    
   14000a3be:	int3   
   14000a3bf:	int3   
   14000a3c0:	int3   
   14000a3c1:	int3   
   14000a3c2:	int3   
   14000a3c3:	int3   
   14000a3c4:	mov    QWORD PTR [rsp+0x20],rbx
   14000a3c9:	push   rbp
   14000a3ca:	mov    rbp,rsp
   14000a3cd:	sub    rsp,0x20
   14000a3d1:	and    QWORD PTR [rbp+0x18],0x0
   14000a3d6:	movabs rbx,0x2b992ddfa232
   14000a3e0:	mov    rax,QWORD PTR [rip+0x4c39]        # 0x14000f020
   14000a3e7:	cmp    rax,rbx
   14000a3ea:	jne    0x14000a47f
   14000a3f0:	lea    rcx,[rbp+0x18]
   14000a3f4:	call   QWORD PTR [rip+0xd86]        # 0x14000b180
   14000a3fa:	mov    rax,QWORD PTR [rbp+0x18]
   14000a3fe:	mov    QWORD PTR [rbp+0x10],rax
   14000a402:	call   QWORD PTR [rip+0xcc8]        # 0x14000b0d0
   14000a408:	mov    eax,eax
   14000a40a:	xor    QWORD PTR [rbp+0x10],rax
   14000a40e:	call   QWORD PTR [rip+0xc9c]        # 0x14000b0b0
   14000a414:	mov    eax,eax
   14000a416:	xor    QWORD PTR [rbp+0x10],rax
   14000a41a:	call   QWORD PTR [rip+0xd68]        # 0x14000b188
   14000a420:	mov    eax,eax
   14000a422:	shl    rax,0x18
   14000a426:	xor    QWORD PTR [rbp+0x10],rax
   14000a42a:	call   QWORD PTR [rip+0xd58]        # 0x14000b188
   14000a430:	mov    eax,eax
   14000a432:	lea    rcx,[rbp+0x10]
   14000a436:	xor    rax,QWORD PTR [rbp+0x10]
   14000a43a:	xor    rax,rcx
   14000a43d:	lea    rcx,[rbp+0x20]
   14000a441:	mov    QWORD PTR [rbp+0x10],rax
   14000a445:	call   QWORD PTR [rip+0xd2d]        # 0x14000b178
   14000a44b:	mov    eax,DWORD PTR [rbp+0x20]
   14000a44e:	movabs rcx,0xffffffffffff
   14000a458:	shl    rax,0x20
   14000a45c:	xor    rax,QWORD PTR [rbp+0x20]
   14000a460:	xor    rax,QWORD PTR [rbp+0x10]
   14000a464:	and    rax,rcx
   14000a467:	movabs rcx,0x2b992ddfa233
   14000a471:	cmp    rax,rbx
   14000a474:	cmove  rax,rcx
   14000a478:	mov    QWORD PTR [rip+0x4ba1],rax        # 0x14000f020
   14000a47f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a484:	not    rax
   14000a487:	mov    QWORD PTR [rip+0x4b9a],rax        # 0x14000f028
   14000a48e:	add    rsp,0x20
   14000a492:	pop    rbp
   14000a493:	ret    
   14000a494:	int3   
   14000a495:	int3   
   14000a496:	int3   
   14000a497:	int3   
   14000a498:	int3   
   14000a499:	int3   
   14000a49a:	jmp    QWORD PTR [rip+0xde8]        # 0x14000b288
   14000a4a0:	int3   
   14000a4a1:	int3   
   14000a4a2:	int3   
   14000a4a3:	int3   
   14000a4a4:	int3   
   14000a4a5:	int3   
   14000a4a6:	jmp    QWORD PTR [rip+0xde4]        # 0x14000b290
   14000a4ac:	int3   
   14000a4ad:	int3   
   14000a4ae:	int3   
   14000a4af:	int3   
   14000a4b0:	int3   
   14000a4b1:	int3   
   14000a4b2:	jmp    QWORD PTR [rip+0xe08]        # 0x14000b2c0
   14000a4b8:	int3   
   14000a4b9:	int3   
   14000a4ba:	int3   
   14000a4bb:	int3   
   14000a4bc:	int3   
   14000a4bd:	int3   
   14000a4be:	int3   
   14000a4bf:	int3   
   14000a4c0:	jmp    0x14000a4cc
   14000a4c5:	int3   
   14000a4c6:	int3   
   14000a4c7:	int3   
   14000a4c8:	int3   
   14000a4c9:	int3   
   14000a4ca:	int3   
   14000a4cb:	int3   
   14000a4cc:	rex push rbx
   14000a4ce:	sub    rsp,0x540
   14000a4d5:	mov    rax,QWORD PTR [rip+0x4b44]        # 0x14000f020
   14000a4dc:	xor    rax,rsp
   14000a4df:	mov    QWORD PTR [rsp+0x530],rax
   14000a4e7:	lea    rcx,[rsp+0x60]
   14000a4ec:	call   QWORD PTR [rip+0xec6]        # 0x14000b3b8
   14000a4f2:	mov    rbx,QWORD PTR [rsp+0x158]
   14000a4fa:	lea    rdx,[rsp+0x40]
   14000a4ff:	mov    rcx,rbx
   14000a502:	xor    r8d,r8d
   14000a505:	call   QWORD PTR [rip+0xea5]        # 0x14000b3b0
   14000a50b:	test   rax,rax
   14000a50e:	je     0x14000a549
   14000a510:	and    QWORD PTR [rsp+0x38],0x0
   14000a516:	lea    rcx,[rsp+0x48]
   14000a51b:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a520:	mov    r9,rax
   14000a523:	mov    QWORD PTR [rsp+0x30],rcx
   14000a528:	mov    r8,rbx
   14000a52b:	lea    rcx,[rsp+0x50]
   14000a530:	mov    QWORD PTR [rsp+0x28],rcx
   14000a535:	lea    rcx,[rsp+0x60]
   14000a53a:	mov    QWORD PTR [rsp+0x20],rcx
   14000a53f:	xor    ecx,ecx
   14000a541:	call   QWORD PTR [rip+0xe61]        # 0x14000b3a8
   14000a547:	jmp    0x14000a569
   14000a549:	mov    rax,QWORD PTR [rsp+0x548]
   14000a551:	mov    QWORD PTR [rsp+0x158],rax
   14000a559:	lea    rax,[rsp+0x548]
   14000a561:	mov    QWORD PTR [rsp+0xf8],rax
   14000a569:	lea    rcx,[rip+0x1150]        # 0x14000b6c0
   14000a570:	call   QWORD PTR [rip+0xc1a]        # 0x14000b190
   14000a576:	mov    rcx,QWORD PTR [rsp+0x530]
   14000a57e:	xor    rcx,rsp
   14000a581:	call   0x140009bc0
   14000a586:	add    rsp,0x540
   14000a58d:	pop    rbx
   14000a58e:	ret    
   14000a58f:	int3   
   14000a590:	int3   
   14000a591:	int3   
   14000a592:	int3   
   14000a593:	int3   
   14000a594:	int3   
   14000a595:	int3   
   14000a596:	jmp    QWORD PTR [rip+0xd2c]        # 0x14000b2c8
   14000a59c:	int3   
   14000a59d:	int3   
   14000a59e:	int3   
   14000a59f:	int3   
   14000a5a0:	int3   
   14000a5a1:	int3   
   14000a5a2:	jmp    QWORD PTR [rip+0xd28]        # 0x14000b2d0
   14000a5a8:	int3   
   14000a5a9:	int3   
   14000a5aa:	int3   
   14000a5ab:	int3   
   14000a5ac:	int3   
   14000a5ad:	int3   
   14000a5ae:	jmp    QWORD PTR [rip+0xd2c]        # 0x14000b2e0
   14000a5b4:	int3   
   14000a5b5:	int3   
   14000a5b6:	int3   
   14000a5b7:	int3   
   14000a5b8:	int3   
   14000a5b9:	int3   
   14000a5ba:	jmp    QWORD PTR [rip+0xd28]        # 0x14000b2e8
   14000a5c0:	int3   
   14000a5c1:	int3   
   14000a5c2:	int3   
   14000a5c3:	int3   
   14000a5c4:	int3   
   14000a5c5:	int3   
   14000a5c6:	int3   
   14000a5c7:	int3   
   14000a5c8:	sub    rsp,0x28
   14000a5cc:	mov    r8,QWORD PTR [r9+0x38]
   14000a5d0:	mov    rcx,rdx
   14000a5d3:	mov    rdx,r9
   14000a5d6:	call   0x14000a5ec
   14000a5db:	mov    eax,0x1
   14000a5e0:	add    rsp,0x28
   14000a5e4:	ret    
   14000a5e5:	int3   
   14000a5e6:	int3   
   14000a5e7:	int3   
   14000a5e8:	int3   
   14000a5e9:	int3   
   14000a5ea:	int3   
   14000a5eb:	int3   
   14000a5ec:	rex push rbx
   14000a5ee:	sub    rsp,0x20
   14000a5f2:	mov    r11d,DWORD PTR [r8]
   14000a5f5:	mov    rbx,rdx
   14000a5f8:	and    r11d,0xfffffff8
   14000a5fc:	mov    r9,rcx
   14000a5ff:	test   BYTE PTR [r8],0x4
   14000a603:	mov    r10,rcx
   14000a606:	je     0x14000a61b
   14000a608:	mov    eax,DWORD PTR [r8+0x8]
   14000a60c:	movsxd r10,DWORD PTR [r8+0x4]
   14000a610:	neg    eax
   14000a612:	add    r10,rcx
   14000a615:	movsxd rcx,eax
   14000a618:	and    r10,rcx
   14000a61b:	movsxd rax,r11d
   14000a61e:	mov    rdx,QWORD PTR [rax+r10*1]
   14000a622:	mov    rax,QWORD PTR [rbx+0x10]
   14000a626:	mov    ecx,DWORD PTR [rax+0x8]
   14000a629:	add    rcx,QWORD PTR [rbx+0x8]
   14000a62d:	test   BYTE PTR [rcx+0x3],0xf
   14000a631:	je     0x14000a63f
   14000a633:	movzx  eax,BYTE PTR [rcx+0x3]
   14000a637:	and    eax,0xfffffff0
   14000a63a:	cdqe   
   14000a63c:	add    r9,rax
   14000a63f:	xor    r9,rdx
   14000a642:	mov    rcx,r9
   14000a645:	add    rsp,0x20
   14000a649:	pop    rbx
   14000a64a:	jmp    0x140009bc0
   14000a64f:	int3   
   14000a650:	int3   
   14000a651:	int3   
   14000a652:	int3   
   14000a653:	int3   
   14000a654:	int3   
   14000a655:	int3   
   14000a656:	jmp    QWORD PTR [rip+0xc9c]        # 0x14000b2f8
   14000a65c:	int3   
   14000a65d:	int3   
   14000a65e:	int3   
   14000a65f:	int3   
   14000a660:	int3   
   14000a661:	int3   
   14000a662:	int3   
   14000a663:	int3   
   14000a664:	mov    rax,rsp
   14000a667:	mov    QWORD PTR [rax+0x8],rbx
   14000a66b:	mov    QWORD PTR [rax+0x10],rbp
   14000a66f:	mov    QWORD PTR [rax+0x18],rsi
   14000a673:	mov    QWORD PTR [rax+0x20],rdi
   14000a677:	push   r14
   14000a679:	sub    rsp,0x20
   14000a67d:	mov    rbx,QWORD PTR [r9+0x38]
   14000a681:	mov    rsi,rdx
   14000a684:	mov    r14,r8
   14000a687:	mov    rbp,rcx
   14000a68a:	mov    rdx,r9
   14000a68d:	mov    rcx,rsi
   14000a690:	mov    rdi,r9
   14000a693:	lea    r8,[rbx+0x4]
   14000a697:	call   0x14000a5ec
   14000a69c:	mov    r11d,DWORD PTR [rbx+0x4]
   14000a6a0:	mov    r8d,0x1
   14000a6a6:	mov    r10d,DWORD PTR [rbp+0x4]
   14000a6aa:	mov    eax,r11d
   14000a6ad:	and    eax,r8d
   14000a6b0:	and    r11d,0x2
   14000a6b4:	and    r10b,0x66
   14000a6b8:	cmove  r11d,eax
   14000a6bc:	test   r11d,r11d
   14000a6bf:	je     0x14000a6d5
   14000a6c1:	mov    r9,rdi
   14000a6c4:	mov    r8,r14
   14000a6c7:	mov    rdx,rsi
   14000a6ca:	mov    rcx,rbp
   14000a6cd:	call   0x14000a656
   14000a6d2:	mov    r8d,eax
   14000a6d5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6da:	mov    eax,r8d
   14000a6dd:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a6e2:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a6e7:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a6ec:	add    rsp,0x20
   14000a6f0:	pop    r14
   14000a6f2:	ret    
   14000a6f3:	int3   
   14000a6f4:	int3   
   14000a6f5:	int3   
   14000a6f6:	int3   
   14000a6f7:	int3   
   14000a6f8:	int3   
   14000a6f9:	int3   
   14000a6fa:	int3   
   14000a6fb:	int3   
   14000a6fc:	int3   
   14000a6fd:	int3   
   14000a6fe:	int3   
   14000a6ff:	int3   
   14000a700:	int3   
   14000a701:	int3   
   14000a702:	int3   
   14000a703:	int3   
   14000a704:	int3   
   14000a705:	int3   
   14000a706:	jmp    QWORD PTR [rip+0xbcc]        # 0x14000b2d8
   14000a70c:	int3   
   14000a70d:	int3   
   14000a70e:	int3   
   14000a70f:	int3   
   14000a710:	int3   
   14000a711:	int3   
   14000a712:	int3   
   14000a713:	int3   
   14000a714:	int3   
   14000a715:	int3   
   14000a716:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a720:	jmp    rax
   14000a722:	int3   
   14000a723:	int3   
   14000a724:	int3   
   14000a725:	int3   
   14000a726:	int3   
   14000a727:	int3   
   14000a728:	int3   
   14000a729:	int3   
   14000a72a:	int3   
   14000a72b:	int3   
   14000a72c:	int3   
   14000a72d:	int3   
   14000a72e:	int3   
   14000a72f:	int3   
   14000a730:	int3   
   14000a731:	int3   
   14000a732:	int3   
   14000a733:	int3   
   14000a734:	int3   
   14000a735:	int3   
   14000a736:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a740:	sub    rsp,0x10
   14000a744:	mov    QWORD PTR [rsp],r10
   14000a748:	mov    QWORD PTR [rsp+0x8],r11
   14000a74d:	xor    r11,r11
   14000a750:	lea    r10,[rsp+0x18]
   14000a755:	sub    r10,rax
   14000a758:	cmovb  r10,r11
   14000a75c:	mov    r11,QWORD PTR gs:0x10
   14000a765:	cmp    r10,r11
   14000a768:	jae    0x14000a77f
   14000a76a:	and    r10w,0xf000
   14000a770:	lea    r11,[r11-0x1000]
   14000a777:	test   BYTE PTR [r11],r11b
   14000a77a:	cmp    r10,r11
   14000a77d:	jne    0x14000a770
   14000a77f:	mov    r10,QWORD PTR [rsp]
   14000a783:	mov    r11,QWORD PTR [rsp+0x8]
   14000a788:	add    rsp,0x10
   14000a78c:	ret    
   14000a78d:	int3   
   14000a78e:	int3   
   14000a78f:	int3   
   14000a790:	int3   
   14000a791:	int3   
   14000a792:	int3   
   14000a793:	int3   
   14000a794:	int3   
   14000a795:	int3   
   14000a796:	lea    rcx,[rdx+0x38]
   14000a79d:	jmp    0x1400039d4
   14000a7a2:	lea    rcx,[rdx+0x30]
   14000a7a9:	jmp    0x1400039d4
   14000a7ae:	int3   
   14000a7af:	int3   
   14000a7b0:	int3   
   14000a7b1:	int3   
   14000a7b2:	int3   
   14000a7b3:	int3   
   14000a7b4:	mov    QWORD PTR [rsp+0x10],rdx
   14000a7b9:	push   rbp
   14000a7ba:	sub    rsp,0x20
   14000a7be:	mov    rbp,rdx
   14000a7c1:	lea    rax,[rip+0xffffffffffff97f3]        # 0x140003fbb
   14000a7c8:	add    rsp,0x20
   14000a7cc:	pop    rbp
   14000a7cd:	ret    
   14000a7ce:	int3   
   14000a7cf:	int3   
   14000a7d0:	int3   
   14000a7d1:	int3   
   14000a7d2:	int3   
   14000a7d3:	int3   
   14000a7d4:	int3   
   14000a7d5:	rex push rbp
   14000a7d7:	sub    rsp,0x20
   14000a7db:	mov    rbp,rdx
   14000a7de:	mov    rcx,QWORD PTR [rbp+0x50]
   14000a7e2:	add    rcx,0x10
   14000a7e6:	add    rsp,0x20
   14000a7ea:	pop    rbp
   14000a7eb:	rex.W jmp QWORD PTR [rip+0x8f6]        # 0x14000b0e8
   14000a7f2:	int3   
   14000a7f3:	int3   
   14000a7f4:	int3   
   14000a7f5:	int3   
   14000a7f6:	int3   
   14000a7f7:	int3   
   14000a7f8:	int3   
   14000a7f9:	mov    rcx,QWORD PTR [rdx+0x28]
   14000a800:	jmp    0x1400096d4
   14000a805:	mov    rcx,QWORD PTR [rdx+0x28]
   14000a80c:	jmp    0x14000171c
   14000a811:	mov    QWORD PTR [rsp+0x10],rdx
   14000a816:	push   rbp
   14000a817:	sub    rsp,0x20
   14000a81b:	mov    rbp,rdx
   14000a81e:	lea    rax,[rip+0xffffffffffff9fe3]        # 0x140004808
   14000a825:	add    rsp,0x20
   14000a829:	pop    rbp
   14000a82a:	ret    
   14000a82b:	int3   
   14000a82c:	int3   
   14000a82d:	int3   
   14000a82e:	int3   
   14000a82f:	int3   
   14000a830:	int3   
   14000a831:	int3   
   14000a832:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a839:	jmp    0x14000171c
   14000a83e:	int3   
   14000a83f:	int3   
   14000a840:	int3   
   14000a841:	int3   
   14000a842:	int3   
   14000a843:	int3   
   14000a844:	mov    QWORD PTR [rsp+0x10],rdx
   14000a849:	push   rbp
   14000a84a:	sub    rsp,0x20
   14000a84e:	mov    rbp,rdx
   14000a851:	lea    rax,[rip+0xffffffffffffa48e]        # 0x140004ce6
   14000a858:	add    rsp,0x20
   14000a85c:	pop    rbp
   14000a85d:	ret    
   14000a85e:	int3   
   14000a85f:	int3   
   14000a860:	int3   
   14000a861:	int3   
   14000a862:	int3   
   14000a863:	int3   
   14000a864:	int3   
   14000a865:	mov    QWORD PTR [rsp+0x10],rdx
   14000a86a:	push   rbp
   14000a86b:	sub    rsp,0x20
   14000a86f:	mov    rbp,rdx
   14000a872:	lea    rax,[rip+0xffffffffffffb843]        # 0x1400060bc
   14000a879:	add    rsp,0x20
   14000a87d:	pop    rbp
   14000a87e:	ret    
   14000a87f:	int3   
   14000a880:	int3   
   14000a881:	int3   
   14000a882:	int3   
   14000a883:	int3   
   14000a884:	int3   
   14000a885:	int3   
   14000a886:	mov    rcx,QWORD PTR [rdx+0x38]
   14000a88d:	jmp    0x1400096d4
   14000a892:	mov    QWORD PTR [rsp+0x10],rdx
   14000a897:	push   rbp
   14000a898:	sub    rsp,0x30
   14000a89c:	mov    rbp,rdx
   14000a89f:	lea    rax,[rip+0xffffffffffffb9e8]        # 0x14000628e
   14000a8a6:	add    rsp,0x30
   14000a8aa:	pop    rbp
   14000a8ab:	ret    
   14000a8ac:	int3   
   14000a8ad:	lea    rcx,[rdx+0x88]
   14000a8b4:	jmp    0x1400012f0
   14000a8b9:	int3   
   14000a8ba:	int3   
   14000a8bb:	int3   
   14000a8bc:	int3   
   14000a8bd:	int3   
   14000a8be:	int3   
   14000a8bf:	lea    rcx,[rdx+0x50]
   14000a8c6:	jmp    0x140006044
   14000a8cb:	lea    rcx,[rdx+0x40]
   14000a8d2:	jmp    0x1400039d4
   14000a8d7:	lea    rcx,[rdx+0x38]
   14000a8de:	jmp    0x1400039d4
   14000a8e3:	lea    rcx,[rdx+0x48]
   14000a8ea:	jmp    0x1400039d4
   14000a8ef:	int3   
   14000a8f0:	int3   
   14000a8f1:	int3   
   14000a8f2:	int3   
   14000a8f3:	int3   
   14000a8f4:	int3   
   14000a8f5:	rex push rbp
   14000a8f7:	sub    rsp,0x20
   14000a8fb:	mov    rbp,rdx
   14000a8fe:	mov    rax,QWORD PTR [rcx]
   14000a901:	xor    ecx,ecx
   14000a903:	cmp    DWORD PTR [rax],0xc0000017
   14000a909:	sete   cl
   14000a90c:	mov    eax,ecx
   14000a90e:	add    rsp,0x20
   14000a912:	pop    rbp
   14000a913:	ret    
   14000a914:	int3   
   14000a915:	int3   
   14000a916:	int3   
   14000a917:	int3   
   14000a918:	int3   
   14000a919:	int3   
   14000a91a:	int3   
   14000a91b:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a922:	jmp    0x140006b88
   14000a927:	int3   
   14000a928:	int3   
   14000a929:	int3   
   14000a92a:	int3   
   14000a92b:	int3   
   14000a92c:	int3   
   14000a92d:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a934:	add    rcx,0x8
   14000a938:	jmp    0x140006bc8
   14000a93d:	mov    rcx,QWORD PTR [rdx+0x40]
   14000a944:	jmp    0x140006b88
   14000a949:	int3   
   14000a94a:	int3   
   14000a94b:	int3   
   14000a94c:	int3   
   14000a94d:	int3   
   14000a94e:	int3   
   14000a94f:	mov    QWORD PTR [rsp+0x10],rdx
   14000a954:	push   rbp
   14000a955:	sub    rsp,0x20
   14000a959:	mov    rbp,rdx
   14000a95c:	lea    rax,[rip+0xffffffffffffc499]        # 0x140006dfc
   14000a963:	add    rsp,0x20
   14000a967:	pop    rbp
   14000a968:	ret    
   14000a969:	int3   
   14000a96a:	lea    rcx,[rdx+0x40]
   14000a971:	jmp    0x140006d50
   14000a976:	mov    QWORD PTR [rsp+0x10],rdx
   14000a97b:	push   rbp
   14000a97c:	sub    rsp,0x20
   14000a980:	mov    rbp,rdx
   14000a983:	lea    rax,[rip+0xffffffffffffc4e8]        # 0x140006e72
   14000a98a:	add    rsp,0x20
   14000a98e:	pop    rbp
   14000a98f:	ret    
   14000a990:	int3   
   14000a991:	lea    rcx,[rdx+0xa8]
   14000a998:	jmp    0x140006d50
   14000a99d:	int3   
   14000a99e:	int3   
   14000a99f:	int3   
   14000a9a0:	int3   
   14000a9a1:	int3   
   14000a9a2:	int3   
   14000a9a3:	lea    rcx,[rdx+0x48]
   14000a9aa:	jmp    0x140008da8
   14000a9af:	int3   
   14000a9b0:	int3   
   14000a9b1:	int3   
   14000a9b2:	int3   
   14000a9b3:	int3   
   14000a9b4:	int3   
   14000a9b5:	lea    rcx,[rdx+0x20]
   14000a9bc:	jmp    0x1400070dc
   14000a9c1:	lea    rcx,[rdx+0x30]
   14000a9c8:	jmp    0x140008da8
   14000a9cd:	int3   
   14000a9ce:	int3   
   14000a9cf:	int3   
   14000a9d0:	int3   
   14000a9d1:	int3   
   14000a9d2:	int3   
   14000a9d3:	lea    rcx,[rdx+0x80]
   14000a9da:	jmp    0x140007064
   14000a9df:	mov    QWORD PTR [rsp+0x10],rdx
   14000a9e4:	push   rbp
   14000a9e5:	sub    rsp,0x30
   14000a9e9:	mov    rbp,rdx
   14000a9ec:	lea    rax,[rip+0xffffffffffffcd62]        # 0x140007755
   14000a9f3:	add    rsp,0x30
   14000a9f7:	pop    rbp
   14000a9f8:	ret    
   14000a9f9:	int3   
   14000a9fa:	lea    rcx,[rdx+0x80]
   14000aa01:	jmp    0x140007064
   14000aa06:	mov    QWORD PTR [rsp+0x10],rdx
   14000aa0b:	push   rbp
   14000aa0c:	sub    rsp,0x30
   14000aa10:	mov    rbp,rdx
   14000aa13:	lea    rax,[rip+0xffffffffffffcf2c]        # 0x140007946
   14000aa1a:	add    rsp,0x30
   14000aa1e:	pop    rbp
   14000aa1f:	ret    
   14000aa20:	int3   
   14000aa21:	int3   
   14000aa22:	int3   
   14000aa23:	int3   
   14000aa24:	int3   
   14000aa25:	int3   
   14000aa26:	int3   
   14000aa27:	lea    rcx,[rdx+0x90]
   14000aa2e:	jmp    0x140007ce0
   14000aa33:	lea    rcx,[rdx+0xa8]
   14000aa3a:	jmp    0x140007ce0
   14000aa3f:	int3   
   14000aa40:	int3   
   14000aa41:	int3   
   14000aa42:	int3   
   14000aa43:	int3   
   14000aa44:	int3   
   14000aa45:	lea    rcx,[rdx+0x60]
   14000aa4c:	jmp    0x140008da8
   14000aa51:	lea    rcx,[rdx+0x70]
   14000aa58:	jmp    0x140007064
   14000aa5d:	mov    QWORD PTR [rsp+0x10],rdx
   14000aa62:	push   rbp
   14000aa63:	sub    rsp,0x30
   14000aa67:	mov    rbp,rdx
   14000aa6a:	lea    rax,[rip+0xffffffffffffdfde]        # 0x140008a4f
   14000aa71:	add    rsp,0x30
   14000aa75:	pop    rbp
   14000aa76:	ret    
   14000aa77:	int3   
   14000aa78:	int3   
   14000aa79:	int3   
   14000aa7a:	int3   
   14000aa7b:	int3   
   14000aa7c:	int3   
   14000aa7d:	int3   
   14000aa7e:	rex push rbp
   14000aa80:	sub    rsp,0x20
   14000aa84:	mov    rbp,rdx
   14000aa87:	mov    rax,QWORD PTR [rcx]
   14000aa8a:	mov    rdx,rcx
   14000aa8d:	mov    ecx,DWORD PTR [rax]
   14000aa8f:	call   0x14000a21e
   14000aa94:	nop
   14000aa95:	add    rsp,0x20
   14000aa99:	pop    rbp
   14000aa9a:	ret    
   14000aa9b:	int3   
   14000aa9c:	int3   
   14000aa9d:	int3   
   14000aa9e:	int3   
   14000aa9f:	int3   
   14000aaa0:	int3   
   14000aaa1:	int3   
   14000aaa2:	rex push rbp
   14000aaa4:	sub    rsp,0x20
   14000aaa8:	mov    rbp,rdx
   14000aaab:	cmp    DWORD PTR [rbp+0x20],0x0
   14000aaaf:	jne    0x14000aac7
   14000aab1:	mov    r9,QWORD PTR [rbp+0x78]
   14000aab5:	mov    r8d,DWORD PTR [rbp+0x70]
   14000aab9:	mov    rdx,QWORD PTR [rbp+0x68]
   14000aabd:	mov    rcx,QWORD PTR [rbp+0x60]
   14000aac1:	call   0x140009c54
   14000aac6:	nop
   14000aac7:	add    rsp,0x20
   14000aacb:	pop    rbp
   14000aacc:	ret    
   14000aacd:	int3   
   14000aace:	int3   
   14000aacf:	int3   
   14000aad0:	int3   
   14000aad1:	int3   
   14000aad2:	int3   
   14000aad3:	int3   
   14000aad4:	rex push rbp
   14000aad6:	sub    rsp,0x20
   14000aada:	mov    rbp,rdx
   14000aadd:	mov    QWORD PTR [rbp+0x38],rcx
   14000aae1:	mov    QWORD PTR [rbp+0x28],rcx
   14000aae5:	mov    rax,QWORD PTR [rbp+0x28]
   14000aae9:	mov    rcx,QWORD PTR [rax]
   14000aaec:	mov    QWORD PTR [rbp+0x30],rcx
   14000aaf0:	mov    rax,QWORD PTR [rbp+0x30]
   14000aaf4:	cmp    DWORD PTR [rax],0xe06d7363
   14000aafa:	je     0x14000ab08
   14000aafc:	mov    DWORD PTR [rbp+0x20],0x0
   14000ab03:	mov    eax,DWORD PTR [rbp+0x20]
   14000ab06:	jmp    0x14000ab0f
   14000ab08:	call   QWORD PTR [rip+0x7a2]        # 0x14000b2b0
   14000ab0e:	nop
   14000ab0f:	add    rsp,0x20
   14000ab13:	pop    rbp
   14000ab14:	ret    
   14000ab15:	int3   
   14000ab16:	int3   
   14000ab17:	int3   
   14000ab18:	int3   
   14000ab19:	int3   
   14000ab1a:	int3   
   14000ab1b:	int3   
   14000ab1c:	rex push rbp
   14000ab1e:	sub    rsp,0x20
   14000ab22:	mov    rbp,rdx
   14000ab25:	mov    ecx,0x8
   14000ab2a:	call   0x14000a5ae
   14000ab2f:	nop
   14000ab30:	add    rsp,0x20
   14000ab34:	pop    rbp
   14000ab35:	ret    
   14000ab36:	int3   
   14000ab37:	int3   
   14000ab38:	int3   
   14000ab39:	int3   
   14000ab3a:	int3   
   14000ab3b:	int3   
   14000ab3c:	int3   
   14000ab3d:	rex push rbp
   14000ab3f:	sub    rsp,0x20
   14000ab43:	mov    rbp,rdx
   14000ab46:	cmp    DWORD PTR [rbp+0x24],0x0
   14000ab4a:	jne    0x14000ab62
   14000ab4c:	mov    r9,QWORD PTR [rbp+0x70]
   14000ab50:	mov    r8d,DWORD PTR [rbp+0x20]
   14000ab54:	mov    rdx,QWORD PTR [rbp+0x58]
   14000ab58:	mov    rcx,QWORD PTR [rbp+0x50]
   14000ab5c:	call   0x140009c54
   14000ab61:	nop
   14000ab62:	add    rsp,0x20
   14000ab66:	pop    rbp
   14000ab67:	ret    
   14000ab68:	int3   
   14000ab69:	int3   
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	rex push rbp
   14000ab72:	sub    rsp,0x20
   14000ab76:	mov    rbp,rdx
   14000ab79:	mov    rax,QWORD PTR [rcx]
   14000ab7c:	xor    ecx,ecx
   14000ab7e:	cmp    DWORD PTR [rax],0xc0000005
   14000ab84:	sete   cl
   14000ab87:	mov    eax,ecx
   14000ab89:	add    rsp,0x20
   14000ab8d:	pop    rbp
   14000ab8e:	ret    
   14000ab8f:	int3   
   14000ab90:	int3   
   14000ab91:	int3   
   14000ab92:	int3   
   14000ab93:	int3   
   14000ab94:	int3   
   14000ab95:	int3   
   14000ab96:	int3   
   14000ab97:	int3   
   14000ab98:	int3   
   14000ab99:	int3   
   14000ab9a:	int3   
   14000ab9b:	int3   
   14000ab9c:	int3   
   14000ab9d:	int3   
   14000ab9e:	int3   
   14000ab9f:	int3   
   14000aba0:	mov    QWORD PTR [rsp+0x8],rbx
   14000aba5:	push   rdi
   14000aba6:	sub    rsp,0x20
   14000abaa:	mov    rdi,QWORD PTR [rip+0x4daf]        # 0x14000f960
   14000abb1:	mov    rax,QWORD PTR [rip+0x4db0]        # 0x14000f968
   14000abb8:	jmp    0x14000abde
   14000abba:	mov    rbx,QWORD PTR [rdi]
   14000abbd:	test   rbx,rbx
   14000abc0:	je     0x14000abda
   14000abc2:	mov    rbx,QWORD PTR [rbx+0x40]
   14000abc6:	mov    rcx,rbx
   14000abc9:	call   QWORD PTR [rip+0x849]        # 0x14000b418
   14000abcf:	xor    ecx,ecx
   14000abd1:	call   rbx
   14000abd3:	mov    rax,QWORD PTR [rip+0x4d8e]        # 0x14000f968
   14000abda:	add    rdi,0x8
   14000abde:	cmp    rdi,rax
   14000abe1:	jb     0x14000abba
   14000abe3:	lea    rcx,[rip+0x4c46]        # 0x14000f830
   14000abea:	call   0x14000676c
   14000abef:	call   0x1400066d0
   14000abf4:	cmp    BYTE PTR [rip+0x4c97],0x0        # 0x14000f892
   14000abfb:	je     0x14000ac03
   14000abfd:	call   QWORD PTR [rip+0x7d5]        # 0x14000b3d8
   14000ac03:	lea    rcx,[rip+0x4c26]        # 0x14000f830
   14000ac0a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ac0f:	add    rsp,0x20
   14000ac13:	pop    rdi
   14000ac14:	jmp    0x14000676c
   14000ac19:	int3   
   14000ac1a:	int3   
   14000ac1b:	int3   
   14000ac1c:	int3   
   14000ac1d:	int3   
   14000ac1e:	int3   
   14000ac1f:	int3   
   14000ac20:	sub    rsp,0x28
   14000ac24:	lea    rcx,[rip+0x4c9d]        # 0x14000f8c8
   14000ac2b:	call   QWORD PTR [rip+0x4c7]        # 0x14000b0f8
   14000ac31:	mov    rcx,QWORD PTR [rip+0x4cb8]        # 0x14000f8f0
   14000ac38:	test   rcx,rcx
   14000ac3b:	je     0x14000ac4b
   14000ac3d:	call   QWORD PTR [rip+0x755]        # 0x14000b398
   14000ac43:	and    QWORD PTR [rip+0x4ca5],0x0        # 0x14000f8f0
   14000ac4b:	and    DWORD PTR [rip+0x4ca6],0x0        # 0x14000f8f8
   14000ac52:	and    DWORD PTR [rip+0x4ca3],0x0        # 0x14000f8fc
   14000ac59:	add    rsp,0x28
   14000ac5d:	ret    
   14000ac5e:	int3   
   14000ac5f:	int3   
   14000ac60:	int3   
   14000ac61:	int3   
   14000ac62:	int3   
   14000ac63:	int3   
   14000ac64:	int3   
   14000ac65:	int3   
   14000ac66:	int3   
   14000ac67:	int3   
   14000ac68:	int3   
   14000ac69:	int3   
   14000ac6a:	int3   
   14000ac6b:	int3   
   14000ac6c:	int3   
   14000ac6d:	int3   
   14000ac6e:	int3   
   14000ac6f:	int3   
   14000ac70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ac75:	mov    QWORD PTR [rsp+0x10],rsi
   14000ac7a:	push   rdi
   14000ac7b:	sub    rsp,0x20
   14000ac7f:	cmp    DWORD PTR [rip+0x4c7a],0x48        # 0x14000f900
   14000ac86:	mov    rsi,QWORD PTR [rip+0x4c1b]        # 0x14000f8a8
   14000ac8d:	jne    0x14000ad0e
   14000ac8f:	mov    eax,DWORD PTR [rip+0x4cab]        # 0x14000f940
   14000ac95:	xor    ebx,ebx
   14000ac97:	test   eax,eax
   14000ac99:	jle    0x14000acd2
   14000ac9b:	xor    edi,edi
   14000ac9d:	test   rdi,rdi
   14000aca0:	js     0x14000ad46
   14000aca6:	cmp    ebx,eax
   14000aca8:	jge    0x14000ad46
   14000acae:	mov    rax,QWORD PTR [rip+0x4c83]        # 0x14000f938
   14000acb5:	mov    rdx,rsi
   14000acb8:	movzx  ecx,WORD PTR [rdi+rax*1]
   14000acbc:	call   QWORD PTR [rip+0x59e]        # 0x14000b260
   14000acc2:	mov    eax,DWORD PTR [rip+0x4c78]        # 0x14000f940
   14000acc8:	inc    ebx
   14000acca:	add    rdi,0x2
   14000acce:	cmp    ebx,eax
   14000acd0:	jl     0x14000ac9d
   14000acd2:	mov    rcx,QWORD PTR [rip+0x4c5f]        # 0x14000f938
   14000acd9:	test   rcx,rcx
   14000acdc:	je     0x14000acec
   14000acde:	call   QWORD PTR [rip+0x6b4]        # 0x14000b398
   14000ace4:	and    QWORD PTR [rip+0x4c4c],0x0        # 0x14000f938
   14000acec:	and    DWORD PTR [rip+0x4c4d],0x0        # 0x14000f940
   14000acf3:	lea    rcx,[rip+0x4c0e]        # 0x14000f908
   14000acfa:	and    DWORD PTR [rip+0x4c43],0x0        # 0x14000f944
   14000ad01:	call   QWORD PTR [rip+0x3f1]        # 0x14000b0f8
   14000ad07:	and    DWORD PTR [rip+0x4bf2],0x0        # 0x14000f900
   14000ad0e:	mov    rcx,QWORD PTR [rip+0x4c23]        # 0x14000f938
   14000ad15:	test   rcx,rcx
   14000ad18:	je     0x14000ad28
   14000ad1a:	call   QWORD PTR [rip+0x678]        # 0x14000b398
   14000ad20:	and    QWORD PTR [rip+0x4c10],0x0        # 0x14000f938
   14000ad28:	and    DWORD PTR [rip+0x4c11],0x0        # 0x14000f940
   14000ad2f:	and    DWORD PTR [rip+0x4c0e],0x0        # 0x14000f944
   14000ad36:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ad3b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ad40:	add    rsp,0x20
   14000ad44:	pop    rdi
   14000ad45:	ret    
   14000ad46:	mov    ecx,0xc000008c
   14000ad4b:	call   0x1400070f0
   14000ad50:	int3   
   14000ad51:	int3   
   14000ad52:	int3   
   14000ad53:	int3   
   14000ad54:	int3   
   14000ad55:	int3   
   14000ad56:	int3   
   14000ad57:	int3   
   14000ad58:	int3   
   14000ad59:	int3   
   14000ad5a:	int3   
   14000ad5b:	int3   
   14000ad5c:	int3   
   14000ad5d:	int3   
   14000ad5e:	int3   
   14000ad5f:	int3   
   14000ad60:	jmp    0x1400066d0
   14000ad65:	int3   
   14000ad66:	int3   
   14000ad67:	int3   
   14000ad68:	int3   
   14000ad69:	int3   
   14000ad6a:	int3   
   14000ad6b:	int3   
   14000ad6c:	int3   
   14000ad6d:	int3   
   14000ad6e:	int3   
   14000ad6f:	int3   
   14000ad70:	lea    rax,[rip+0x919]        # 0x14000b690
   14000ad77:	lea    rcx,[rip+0x4462]        # 0x14000f1e0
   14000ad7e:	mov    QWORD PTR [rip+0x445b],rax        # 0x14000f1e0
   14000ad85:	jmp    0x14000a180
   14000ad8a:	int3   
   14000ad8b:	int3   
   14000ad8c:	int3   
   14000ad8d:	int3   
   14000ad8e:	int3   
   14000ad8f:	int3   
   14000ad90:	lea    rax,[rip+0x8f9]        # 0x14000b690
   14000ad97:	lea    rcx,[rip+0x4462]        # 0x14000f200
   14000ad9e:	mov    QWORD PTR [rip+0x445b],rax        # 0x14000f200
   14000ada5:	jmp    0x14000a180

Disassembly of section .rdata:

000000014000b000 <.rdata>:
   14000b000:	movabs al,ds:0xae000000000000e4
   14000b009:	in     al,0x0
   14000b00b:	add    BYTE PTR [rax],al
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    dl,al
   14000b011:	in     al,0x0
   14000b013:	add    BYTE PTR [rax],al
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    dl,dl
   14000b019:	in     al,0x0
   14000b01b:	add    BYTE PTR [rax],al
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    dl,ah
   14000b021:	in     al,0x0
   14000b023:	add    BYTE PTR [rax],al
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    ah,dh
   14000b029:	in     al,0x0
   14000b02b:	add    BYTE PTR [rax],al
   14000b02d:	add    BYTE PTR [rax],al
   14000b02f:	add    BYTE PTR [rsi],al
   14000b031:	in     eax,0x0
   14000b033:	add    BYTE PTR [rax],al
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rax],bl
   14000b039:	in     eax,0x0
   14000b03b:	add    BYTE PTR [rax],al
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rax],ch
   14000b041:	in     eax,0x0
   14000b043:	add    BYTE PTR [rax],al
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rax-0x1b],al
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    BYTE PTR [rax],al
   14000b050:	push   rsi
   14000b051:	in     eax,0x0
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    BYTE PTR [rbp+riz*8+0x0],ch
   14000b05b:	add    BYTE PTR [rax],al
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    BYTE PTR [rdx+0xe5],al
	...
   14000b06d:	add    BYTE PTR [rax],al
   14000b06f:	add    BYTE PTR [rdx],cl
   14000b071:	out    0x0,al
   14000b073:	add    BYTE PTR [rax],al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    BYTE PTR [rdx+0xe7],bl
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rdx+0xe7],cl
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    BYTE PTR [rdx-0x19],bh
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	add    BYTE PTR [rax],al
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	jb     0x14000b079
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	add    BYTE PTR [rax],al
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	(bad)  
   14000b099:	out    0x0,eax
   14000b09b:	add    BYTE PTR [rax],al
   14000b09d:	add    BYTE PTR [rax],al
   14000b09f:	add    dh,bh
   14000b0a1:	in     eax,0x0
   14000b0a3:	add    BYTE PTR [rax],al
   14000b0a5:	add    BYTE PTR [rax],al
   14000b0a7:	add    BYTE PTR [rdi+riz*8+0x0],dl
   14000b0ab:	add    BYTE PTR [rax],al
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    BYTE PTR [rsi],bh
   14000b0b1:	out    0x0,eax
   14000b0b3:	add    BYTE PTR [rax],al
   14000b0b5:	add    BYTE PTR [rax],al
   14000b0b7:	add    BYTE PTR [rdi+riz*8],ch
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	add    BYTE PTR [rax],al
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	(bad)  
   14000b0c1:	out    0x0,eax
   14000b0c3:	add    BYTE PTR [rax],al
   14000b0c5:	add    BYTE PTR [rax],al
   14000b0c7:	add    BYTE PTR [rdi+riz*8],cl
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	add    BYTE PTR [rax],al
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	mul    dh
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	add    BYTE PTR [rax],al
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	loopne 0x14000b0c0
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	add    BYTE PTR [rax],al
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	(bad)  
   14000b0e1:	out    0x0,al
   14000b0e3:	add    BYTE PTR [rax],al
   14000b0e5:	add    BYTE PTR [rax],al
   14000b0e7:	add    BYTE PTR [rsi+riz*8+0x0],ch
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	xchg   esp,eax
   14000b0f1:	out    0x0,al
   14000b0f3:	add    BYTE PTR [rax],al
   14000b0f5:	add    BYTE PTR [rax],al
   14000b0f7:	add    BYTE PTR [rsi+riz*8+0x0],bh
   14000b0fb:	add    BYTE PTR [rax],al
   14000b0fd:	add    BYTE PTR [rax],al
   14000b0ff:	add    BYTE PTR [rsi-0x1a],ah
   14000b102:	add    BYTE PTR [rax],al
   14000b104:	add    BYTE PTR [rax],al
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	push   rsp
   14000b109:	out    0x0,al
   14000b10b:	add    BYTE PTR [rax],al
   14000b10d:	add    BYTE PTR [rax],al
   14000b10f:	add    BYTE PTR [rsi+riz*8+0x0],al
   14000b113:	add    BYTE PTR [rax],al
   14000b115:	add    BYTE PTR [rax],al
   14000b117:	add    BYTE PTR [rdx],dh
   14000b119:	out    0x0,al
   14000b11b:	add    BYTE PTR [rax],al
   14000b11d:	add    BYTE PTR [rax],al
   14000b11f:	add    dl,ch
   14000b121:	in     eax,0x0
   14000b123:	add    BYTE PTR [rax],al
   14000b125:	add    BYTE PTR [rax],al
   14000b127:	add    al,bl
   14000b129:	in     eax,0x0
   14000b12b:	add    BYTE PTR [rax],al
   14000b12d:	add    BYTE PTR [rax],al
   14000b12f:	add    dh,al
   14000b131:	in     eax,0x0
   14000b133:	add    BYTE PTR [rax],al
   14000b135:	add    BYTE PTR [rax],al
   14000b137:	add    BYTE PTR [rsi+0xe5],dh
   14000b13d:	add    BYTE PTR [rax],al
   14000b13f:	add    BYTE PTR [rax+0xe5],ch
   14000b145:	add    BYTE PTR [rax],al
   14000b147:	add    BYTE PTR [rsi+riz*8],bl
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	add    BYTE PTR [rax],al
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	xchg   edx,eax
   14000b151:	jmp    0x14000b153
   14000b153:	add    BYTE PTR [rax],al
   14000b155:	add    BYTE PTR [rax],al
   14000b157:	add    BYTE PTR [rbx+rbp*8+0x0],ah
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	shr    bl,0x0
   14000b163:	add    BYTE PTR [rax],al
   14000b165:	add    BYTE PTR [rax],al
   14000b167:	add    dh,bl
   14000b169:	jmp    0x14000b16b
   14000b16b:	add    BYTE PTR [rax],al
   14000b16d:	add    BYTE PTR [rax],al
   14000b16f:	add    dl,dh
   14000b171:	jmp    0x14000b173
   14000b173:	add    BYTE PTR [rax],al
   14000b175:	add    BYTE PTR [rax],al
   14000b177:	add    BYTE PTR [rsi],al
   14000b179:	in     al,dx
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	add    BYTE PTR [rax],al
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	and    ah,ch
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	add    BYTE PTR [rax],al
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	cmp    ch,ah
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	add    BYTE PTR [rax],al
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	rex.WX in al,dx
	...
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	movabs ds:0x1480000000000000,eax
   14000b1a9:	add    BYTE PTR [rax],al
   14000b1ab:	add    BYTE PTR [rax],al
   14000b1ad:	add    BYTE PTR [rax],al
   14000b1af:	or     BYTE PTR [rdi],0x0
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	add    BYTE PTR [rax],al
   14000b1b6:	add    BYTE PTR [rax+0x10],al
   14000b1bc:	add    BYTE PTR [rax],al
   14000b1be:	add    BYTE PTR [rax+0x15],al
   14000b1c4:	add    BYTE PTR [rax],al
   14000b1c6:	add    BYTE PTR [rax+0x16],al
   14000b1cc:	add    BYTE PTR [rax],al
   14000b1ce:	add    BYTE PTR [rax+0x6],al
   14000b1d4:	add    BYTE PTR [rax],al
   14000b1d6:	add    BYTE PTR [rax+0x115],al
   14000b1dc:	add    BYTE PTR [rax],al
   14000b1de:	add    BYTE PTR [rax+0x7],al
   14000b1e4:	add    BYTE PTR [rax],al
   14000b1e6:	add    BYTE PTR [rax+0x95],al
   14000b1ec:	add    BYTE PTR [rax],al
   14000b1ee:	add    BYTE PTR [rax+0xa2],al
   14000b1f4:	add    BYTE PTR [rax],al
   14000b1f6:	add    BYTE PTR [rax+0xa1],al
   14000b1fc:	add    BYTE PTR [rax],al
   14000b1fe:	add    BYTE PTR [rax+0x13],al
   14000b204:	add    BYTE PTR [rax],al
   14000b206:	add    BYTE PTR [rax+0x2],al
   14000b20c:	add    BYTE PTR [rax],al
   14000b20e:	add    BYTE PTR [rax+0xba],al
   14000b214:	add    BYTE PTR [rax],al
   14000b216:	add    BYTE PTR [rax+0x0],al
   14000b21c:	add    BYTE PTR [rax],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	es jmp 0x14000b223
	...
   14000b22f:	add    dh,ah
   14000b231:	out    0x0,eax
   14000b233:	add    BYTE PTR [rax],al
   14000b235:	add    BYTE PTR [rax],al
   14000b237:	add    dl,cl
   14000b239:	out    0x0,eax
   14000b23b:	add    BYTE PTR [rax],al
   14000b23d:	add    BYTE PTR [rax],al
   14000b23f:	add    BYTE PTR [rsi+0xe7],bh
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    ah,bh
   14000b249:	out    0x0,eax
   14000b24b:	add    BYTE PTR [rax],al
   14000b24d:	add    BYTE PTR [rax],al
   14000b24f:	add    BYTE PTR [rdx],cl
   14000b251:	call   0x14000b256
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	sbb    al,ch
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	add    BYTE PTR [rax],al
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	(bad)  
   14000b261:	in     al,dx
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	add    BYTE PTR [rax],al
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	sub    al,0xe8
	...
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	mov    ch,cl
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	add    BYTE PTR [rax],al
   14000b27e:	add    BYTE PTR [rax],al
   14000b280:	xchg   esp,eax
   14000b281:	jmp    0x14000b286
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	test   al,0xe9
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	add    BYTE PTR [rax],al
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	mov    ah,0xe9
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	add    BYTE PTR [rax],al
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	int3   
   14000b299:	jmp    0x14000b29e
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	(bad)  
   14000b2a1:	jmp    0x14000b2a6
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	loopne 0x14000b293
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	add    BYTE PTR [rax],al
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	in     al,dx
   14000b2b1:	jmp    0x14000b2b6
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	add    dl,ch
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	add    BYTE PTR [rax],al
   14000b2be:	add    BYTE PTR [rax],al
   14000b2c0:	and    al,0xea
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	add    BYTE PTR [rax],al
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	cs (bad) 
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	add    BYTE PTR [rax],al
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	cmp    dl,ch
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	add    BYTE PTR [rax],al
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	mov    ch,ah
   14000b2da:	add    BYTE PTR [rax],al
   14000b2dc:	add    BYTE PTR [rax],al
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	rex (bad) 
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	add    BYTE PTR [rax],al
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	rex.WX (bad) 
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	add    BYTE PTR [rax],al
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	pop    rax
   14000b2f1:	(bad)  
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	add    BYTE PTR [rax],al
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	je     0x14000b2e6
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	add    BYTE PTR [rax],al
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	(bad)  
   14000b301:	jmp    0x14000b306
   14000b306:	add    BYTE PTR [rax],al
   14000b308:	jp     0x14000b2f3
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	add    BYTE PTR [rax],al
   14000b30e:	add    BYTE PTR [rax],al
   14000b310:	push   0xe9
   14000b315:	add    BYTE PTR [rax],al
   14000b317:	add    BYTE PTR [rsi-0x17],dl
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	add    BYTE PTR [rax],al
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	jmp    0x14000b326
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	cmp    ch,cl
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	add    BYTE PTR [rax],al
   14000b330:	and    al,0xe9
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	add    BYTE PTR [rax],al
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	sbb    cl,ch
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	add    BYTE PTR [rax],al
   14000b33e:	add    BYTE PTR [rax],al
   14000b340:	cli    
   14000b341:	call   0x14000b346
   14000b346:	add    BYTE PTR [rax],al
   14000b348:	loop   0x14000b332
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	add    BYTE PTR [rax],al
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	(bad)  
   14000b351:	call   0x14000b356
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b359:	call   0x14000b35e
   14000b35e:	add    BYTE PTR [rax],al
   14000b360:	(bad)  
   14000b361:	call   0x14000b366
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	mov    gs,eax
   14000b36a:	add    BYTE PTR [rax],al
   14000b36c:	add    BYTE PTR [rax],al
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	(bad)  
   14000b371:	call   0x14000b376
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	jbe    0x14000b362
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	add    BYTE PTR [rax],al
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	push   0xffffffffffffffe8
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	add    BYTE PTR [rax],al
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	(bad)  
   14000b389:	call   0x14000b38e
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	push   rsp
   14000b391:	call   0x14000b396
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	rex.WR call 0x14000b39e
	...
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	je     0x14000b395
   14000b3aa:	add    BYTE PTR [rax],al
   14000b3ac:	add    BYTE PTR [rax],al
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	pop    rdx
   14000b3b1:	jmp    0x14000b3b3
   14000b3b3:	add    BYTE PTR [rax],al
   14000b3b5:	add    BYTE PTR [rax],al
   14000b3b7:	add    BYTE PTR [rsi-0x15],al
	...
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	loopne 0x14000b3b4
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	add    BYTE PTR [rax],al
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	(bad)  
   14000b3d1:	(bad)  
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	add    BYTE PTR [rax],al
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	mov    esp,0xea
   14000b3dd:	add    BYTE PTR [rax],al
   14000b3df:	add    al,bh
   14000b3e1:	(bad)  
   14000b3e2:	add    BYTE PTR [rax],al
   14000b3e4:	add    BYTE PTR [rax],al
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	cwde   
   14000b3e9:	(bad)  
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    BYTE PTR [rax],al
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	xchg   dl,ch
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	add    BYTE PTR [rax],al
   14000b3f6:	add    BYTE PTR [rax],al
   14000b3f8:	jb     0x14000b3e4
   14000b3fa:	add    BYTE PTR [rax],al
   14000b3fc:	add    BYTE PTR [rax],al
   14000b3fe:	add    BYTE PTR [rax],al
   14000b400:	(bad)  
   14000b401:	(bad)  
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	add    BYTE PTR [rax],al
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	lods   al,BYTE PTR ds:[rsi]
   14000b409:	(bad)  
	...
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	movabs al,ds:0x2000000001400069
   14000b421:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b422:	add    BYTE PTR [rax+0x1],al
	...
   14000b42d:	add    BYTE PTR [rax],al
   14000b42f:	add    al,al
   14000b431:	cwde   
   14000b432:	add    BYTE PTR [rax+0x1],al
   14000b435:	add    BYTE PTR [rax],al
   14000b437:	add    BYTE PTR [rax+0x11],dl
   14000b43a:	add    BYTE PTR [rax+0x1],al
   14000b43d:	add    BYTE PTR [rax],al
   14000b43f:	add    al,dh
   14000b441:	adc    DWORD PTR [rax],eax
   14000b443:	rex add DWORD PTR [rax],eax
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	(bad)  
   14000b449:	adc    al,BYTE PTR [rax]
   14000b44b:	rex add DWORD PTR [rax],eax
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	add    BYTE PTR [rax],dl
   14000b452:	add    BYTE PTR [rax+0x1],al
	...
   14000b465:	add    BYTE PTR [rax],al
   14000b467:	add    al,ah
   14000b469:	xchg   edi,eax
   14000b46a:	add    BYTE PTR [rax+0x1],al
   14000b46d:	add    BYTE PTR [rax],al
   14000b46f:	add    BYTE PTR [rax],al
   14000b471:	movabs ds:0x14000,al
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	add    BYTE PTR [rax],al
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	add    BYTE PTR [rax],dl
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	push   rax
   14000b485:	adc    DWORD PTR [rax],eax
   14000b487:	add    al,dh
   14000b489:	adc    DWORD PTR [rax],eax
   14000b48b:	add    BYTE PTR [rax+0x12],ah
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	lock adc al,BYTE PTR [rax]
   14000b493:	add    BYTE PTR [rax],al
   14000b495:	adc    eax,DWORD PTR [rax]
   14000b497:	add    BYTE PTR [rax+0x10000014],al
   14000b49d:	adc    eax,0x18400000
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	movabs al,ds:0xe000001d40000019
   14000b4ad:	and    DWORD PTR [rax],eax
   14000b4af:	add    BYTE PTR [rax],dl
   14000b4b1:	add    BYTE PTR es:[rax],al
   14000b4b4:	shl    BYTE PTR [rdi],0x0
   14000b4b7:	add    BYTE PTR [rax],ah
   14000b4b9:	sub    DWORD PTR [rax],eax
   14000b4bb:	add    BYTE PTR [rax+0x2000002a],al
   14000b4c1:	sub    al,0x0
   14000b4c3:	add    BYTE PTR [rax-0x6fffffd4],dh
   14000b4c9:	add    BYTE PTR cs:[rax],al
   14000b4cc:	lock xor BYTE PTR [rax],al
   14000b4cf:	add    al,ah
   14000b4d1:	xor    DWORD PTR [rax],eax
   14000b4d3:	add    BYTE PTR [rax],dl
   14000b4d5:	cmp    al,BYTE PTR [rax]
   14000b4d7:	add    BYTE PTR [rax+0x3a],ah
   14000b4da:	add    BYTE PTR [rax],al
   14000b4dc:	mov    al,0x3a
   14000b4de:	add    BYTE PTR [rax],al
   14000b4e0:	sar    BYTE PTR [rdx],0x0
   14000b4e3:	add    al,ah
   14000b4e5:	cmp    al,BYTE PTR [rax]
   14000b4e7:	add    BYTE PTR [rax+0x3b],ah
   14000b4ea:	add    BYTE PTR [rax],al
   14000b4ec:	cmp    BYTE PTR [rbx],0x0
   14000b4ef:	add    al,dh
   14000b4f1:	cmp    eax,DWORD PTR [rax]
   14000b4f3:	add    BYTE PTR [rax+0x3c],dh
   14000b4f6:	add    BYTE PTR [rax],al
   14000b4f8:	nop
   14000b4f9:	cmp    al,0x0
   14000b4fb:	add    BYTE PTR [rax],al
   14000b4fd:	cmp    eax,0x3d800000
   14000b502:	add    BYTE PTR [rax],al
   14000b504:	movabs al,ds:0x9000003e1000003d
   14000b50d:	add    BYTE PTR ds:[rax],al
   14000b510:	mov    al,0x3e
   14000b512:	add    BYTE PTR [rax],al
   14000b514:	and    BYTE PTR [rdi],bh
   14000b516:	add    BYTE PTR [rax],al
   14000b518:	movabs al,ds:0x4000004520000040
   14000b521:	add    BYTE PTR [r8],r8b
   14000b524:	loopne 0x14000b56b
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	add    BYTE PTR [rsi+0x0],al
   14000b52b:	add    al,al
   14000b52d:	rex.W add BYTE PTR [rax],al
   14000b530:	and    BYTE PTR [rcx+0x0],cl
   14000b533:	add    BYTE PTR [rax+0x50000049],ah
   14000b539:	rex.WX add BYTE PTR [rax],al
   14000b53c:	jo     0x14000b588
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	adc    BYTE PTR [rbx+0x0],cl
   14000b543:	add    BYTE PTR [rax-0x2fffffb5],dl
   14000b549:	rex.WXB add BYTE PTR [r8],al
   14000b54c:	jo     0x14000b59b
   14000b54e:	add    BYTE PTR [rax],al
   14000b550:	or     BYTE PTR [rbp+0x0],0x0
   14000b554:	nop
   14000b555:	rex.WRB add BYTE PTR [r8],r8b
   14000b558:	movabs al,ds:0xc000004db000004d
   14000b561:	rex.WRB add BYTE PTR [r8],r8b
   14000b564:	ror    BYTE PTR [rbp+0x0],1
   14000b567:	add    al,ah
   14000b569:	rex.WRB add BYTE PTR [r8],r8b
   14000b56c:	lock rex.WRB add BYTE PTR [r8],r8b
   14000b570:	add    BYTE PTR [rsi+0x0],cl
   14000b573:	add    BYTE PTR [rax],dl
   14000b575:	rex.WRX add BYTE PTR [rax],r8b
   14000b578:	and    BYTE PTR [rsi+0x0],cl
   14000b57b:	add    BYTE PTR [rax],dh
   14000b57d:	rex.WRX add BYTE PTR [rax],r8b
   14000b580:	rex
   14000b581:	rex.WRX add BYTE PTR [rax],r8b
   14000b584:	push   rax
   14000b585:	rex.WRX add BYTE PTR [rax],r8b
   14000b588:	(bad)  
   14000b589:	rex.WRX add BYTE PTR [rax],r8b
   14000b58c:	jo     0x14000b5dc
   14000b58e:	add    BYTE PTR [rax],al
   14000b590:	or     BYTE PTR [rsi+0x0],0x0
   14000b594:	nop
   14000b595:	rex.WRX add BYTE PTR [rax],r8b
   14000b598:	movabs al,ds:0xc000004eb000004e
   14000b5a1:	rex.WRX add BYTE PTR [rax],r8b
   14000b5a4:	ror    BYTE PTR [rsi+0x0],1
   14000b5a7:	add    al,ah
   14000b5a9:	rex.WRX add BYTE PTR [rax],r8b
   14000b5ac:	lock rex.WRX add BYTE PTR [rax],r8b
   14000b5b0:	add    BYTE PTR [rdi+0x0],cl
   14000b5b3:	add    BYTE PTR [rax],dl
   14000b5b5:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5b8:	and    BYTE PTR [rdi+0x0],cl
   14000b5bb:	add    BYTE PTR [rax],dh
   14000b5bd:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5c0:	rex
   14000b5c1:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5c4:	push   rax
   14000b5c5:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5c8:	(bad)  
   14000b5c9:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5cc:	jo     0x14000b61d
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	or     BYTE PTR [rdi+0x0],0x0
   14000b5d4:	nop
   14000b5d5:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5d8:	movabs al,ds:0xc000004fb000004f
   14000b5e1:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5e4:	ror    BYTE PTR [rdi+0x0],1
   14000b5e7:	add    al,ah
   14000b5e9:	rex.WRXB add BYTE PTR [r8],r8b
   14000b5ec:	lock rex.WRXB add BYTE PTR [r8],r8b
   14000b5f0:	add    BYTE PTR [rax+0x0],dl
   14000b5f3:	add    BYTE PTR [rax],dl
   14000b5f5:	push   rax
   14000b5f6:	add    BYTE PTR [rax],al
   14000b5f8:	and    BYTE PTR [rax+0x0],dl
   14000b5fb:	add    BYTE PTR [rax],dh
   14000b5fd:	push   rax
   14000b5fe:	add    BYTE PTR [rax],al
   14000b600:	rex push rax
   14000b602:	add    BYTE PTR [rax],al
   14000b604:	push   rax
   14000b605:	push   rax
   14000b606:	add    BYTE PTR [rax],al
   14000b608:	loopne 0x14000b65a
   14000b60a:	add    BYTE PTR [rax],al
   14000b60c:	lock push rax
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	adc    BYTE PTR [rcx+0x0],0x0
   14000b614:	movabs al,ds:0xa000006120000051
   14000b61d:	(bad)  
   14000b61e:	add    BYTE PTR [rax],al
   14000b620:	movabs al,ds:0x4000006b20000069
   14000b629:	imul   eax,DWORD PTR [rax],0x0
   14000b62c:	push   rax
   14000b62d:	imul   eax,DWORD PTR [rax],0x0
   14000b630:	shr    BYTE PTR [rax+rax*1+0x0],1
   14000b634:	adc    BYTE PTR [rax+0x0],dh
   14000b637:	add    al,dh
   14000b639:	xchg   esi,eax
   14000b63a:	add    BYTE PTR [rax],al
   14000b63c:	xor    BYTE PTR [rdi-0x68200000],dl
   14000b642:	add    BYTE PTR [rax],al
   14000b644:	rcr    BYTE PTR [rax-0x64700000],0x0
   14000b64b:	add    BYTE PTR [rax-0xfffff64],dh
   14000b651:	pushf  
   14000b652:	add    BYTE PTR [rax],al
   14000b654:	nop
   14000b655:	popf   
   14000b656:	add    BYTE PTR [rax],al
   14000b658:	push   rax
   14000b659:	movabs eax,ds:0xa1c00000a1900000
   14000b662:	add    BYTE PTR [rax],al
   14000b664:	add    BYTE PTR [rdx-0x54600000],ah
   14000b66a:	add    BYTE PTR [rax],al
   14000b66c:	and    BYTE PTR [rax+rax*1+0xac7000],ch
   14000b673:	add    BYTE PTR [rax-0x53],ah
   14000b676:	add    BYTE PTR [rax],al
   14000b678:	jo     0x14000b627
   14000b67a:	add    BYTE PTR [rax],al
   14000b67c:	nop
   14000b67d:	lods   eax,DWORD PTR ds:[rsi]
   14000b67e:	add    BYTE PTR [rax],al
   14000b680:	(bad)
   14000b685:	ins    BYTE PTR es:[rdi],dx
   14000b686:	ins    BYTE PTR es:[rdi],dx
   14000b687:	outs   dx,DWORD PTR ds:[rsi]
   14000b688:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b68b:	imul   ebp,DWORD PTR [rdi+0x6e],0x96f00000
   14000b692:	add    BYTE PTR [rax+0x1],al
   14000b695:	add    BYTE PTR [rax],al
   14000b697:	add    BYTE PTR [rax+0x14000a1],dl
   14000b69d:	add    BYTE PTR [rax],al
   14000b69f:	add    BYTE PTR [rax],dh
   14000b6a1:	xchg   edi,eax
   14000b6a2:	add    BYTE PTR [rax+0x1],al
   14000b6a5:	add    BYTE PTR [rax],al
   14000b6a7:	add    BYTE PTR [rax+0x140009c],dh
   14000b6ad:	add    BYTE PTR [rax],al
   14000b6af:	add    BYTE PTR [rax-0xe],dl
   14000b6b2:	add    BYTE PTR [rax+0x1],al
   14000b6b5:	add    BYTE PTR [rax],al
   14000b6b7:	add    al,dh
   14000b6b9:	repnz add BYTE PTR [rax+0x1],al
   14000b6bd:	add    BYTE PTR [rax],al
   14000b6bf:	add    BYTE PTR [rcx+0x6e],cl
   14000b6c2:	jbe    0x14000b725
   14000b6c4:	ins    BYTE PTR es:[rdi],dx
   14000b6c5:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   14000b6cd:	gs je  0x14000b735
   14000b6d0:	jb     0x14000b6f2
   14000b6d2:	jo     0x14000b735
   14000b6d4:	jae    0x14000b749
   14000b6d6:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14000b6dc:	rex.XB and BYTE PTR [r10+0x75],sil
   14000b6e0:	outs   dx,BYTE PTR ds:[rsi]
   14000b6e1:	je     0x14000b74c
   14000b6e3:	ins    DWORD PTR es:[rdi],dx
   14000b6e4:	and    BYTE PTR gs:[rsi+0x75],ah
   14000b6e8:	outs   dx,BYTE PTR ds:[rsi]
   14000b6e9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000b6ed:	outs   dx,BYTE PTR ds:[rsi]
   14000b6ee:	or     al,BYTE PTR cs:[rax]
   14000b6f1:	add    BYTE PTR [rax],al
   14000b6f3:	add    BYTE PTR [rax],al
   14000b6f5:	add    BYTE PTR [rax],al
   14000b6f7:	add    BYTE PTR [rbx+0x0],al
   14000b6fa:	rex.WR add BYTE PTR [rbx+0x0],r10b
   14000b6fe:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000b703:	add    BYTE PTR [rax],al
   14000b705:	add    BYTE PTR [rax],al
   14000b707:	add    BYTE PTR [rcx+0x0],al
   14000b70a:	jo     0x14000b70c
   14000b70c:	jo     0x14000b70e
   14000b70e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000b713:	add    BYTE PTR [rbx+0x0],dl
   14000b716:	add    BYTE PTR [rax],al
   14000b718:	rex.WRB add BYTE PTR [r8],r8b
   14000b71b:	add    BYTE PTR [rax+rax*1+0x0],al
   14000b71f:	add    BYTE PTR [rdx+0x0],al
   14000b722:	add    BYTE PTR [rax],al
   14000b724:	add    BYTE PTR [rax],al
   14000b726:	add    BYTE PTR [rax],al
   14000b728:	push   rsi
   14000b729:	add    BYTE PTR [rcx+0x0],ah
   14000b72c:	ins    BYTE PTR es:[rdi],dx
   14000b72d:	add    BYTE PTR [rax],al
   14000b72f:	add    BYTE PTR [rsi+0x0],al
   14000b732:	outs   dx,DWORD PTR ds:[rsi]
   14000b733:	add    BYTE PTR [rdx+0x0],dh
   14000b736:	movsxd eax,DWORD PTR [rax]
   14000b738:	add    BYTE PTR gs:[rdx+0x0],dl
   14000b73c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b740:	outs   dx,DWORD PTR ds:[rsi]
   14000b741:	add    BYTE PTR [rsi+0x0],dh
   14000b744:	add    BYTE PTR gs:[rax],al
   14000b747:	add    BYTE PTR [rsi+0x0],cl
   14000b74a:	outs   dx,DWORD PTR ds:[rsi]
   14000b74b:	add    BYTE PTR [rdx+0x0],dl
   14000b74e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b752:	outs   dx,DWORD PTR ds:[rsi]
   14000b753:	add    BYTE PTR [rsi+0x0],dh
   14000b756:	add    BYTE PTR gs:[rax],al
   14000b759:	add    BYTE PTR [rax],al
   14000b75b:	add    BYTE PTR [rax],al
   14000b75d:	add    BYTE PTR [rax],al
   14000b75f:	add    BYTE PTR [rax+rax*1+0x65],al
   14000b763:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000b767:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b76b:	add    BYTE PTR [rax],al
   14000b76d:	add    BYTE PTR [rax],al
   14000b76f:	add    BYTE PTR [rbx+0x0],al
   14000b772:	outs   dx,DWORD PTR ds:[rsi]
   14000b773:	add    BYTE PTR [rbp+0x0],ch
   14000b776:	jo     0x14000b778
   14000b778:	outs   dx,DWORD PTR ds:[rsi]
   14000b779:	add    BYTE PTR [rsi+0x0],ch
   14000b77c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000b780:	je     0x14000b782
   14000b782:	and    BYTE PTR [rax],al
   14000b784:	rex.XB add BYTE PTR [r9+0x0],spl
   14000b788:	je     0x14000b78a
   14000b78a:	add    BYTE PTR gs:[rdi+0x0],ah
   14000b78e:	outs   dx,DWORD PTR ds:[rsi]
   14000b78f:	add    BYTE PTR [rdx+0x0],dh
   14000b792:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000b7a0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b7a4:	ins    BYTE PTR es:[rdi],dx
   14000b7a5:	add    BYTE PTR [rbp+0x0],ah
   14000b7a8:	push   rsp
   14000b7a9:	add    BYTE PTR [rcx+0x0],bh
   14000b7ac:	jo     0x14000b7ae
   14000b7ae:	add    BYTE PTR gs:[rax],al
   14000b7b1:	add    BYTE PTR [rax],al
   14000b7b3:	add    BYTE PTR [rax],al
   14000b7b5:	add    BYTE PTR [rax],al
   14000b7b7:	add    BYTE PTR [rcx+0x0],cl
   14000b7ba:	outs   dx,BYTE PTR ds:[rsi]
   14000b7bb:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b7bf:	add    BYTE PTR [rdx+0x0],dh
   14000b7c2:	data16 add BYTE PTR [rcx+0x0],ah
   14000b7c6:	movsxd eax,DWORD PTR [rax]
   14000b7c8:	add    BYTE PTR gs:[rax],al
   14000b7cb:	add    BYTE PTR [rax],al
   14000b7cd:	add    BYTE PTR [rax],al
   14000b7cf:	add    BYTE PTR [rax+0x0],cl
   14000b7d2:	(bad)  
   14000b7d3:	add    BYTE PTR [rdx+0x0],dh
   14000b7d6:	add    BYTE PTR fs:[rdi+0x0],dh
   14000b7da:	(bad)  
   14000b7db:	add    BYTE PTR [rdx+0x0],dh
   14000b7de:	add    BYTE PTR gs:[rax],al
   14000b7e1:	add    BYTE PTR [rax],al
   14000b7e3:	add    BYTE PTR [rax],al
   14000b7e5:	add    BYTE PTR [rax],al
   14000b7e7:	add    BYTE PTR [rbp+0x0],cl
   14000b7ea:	imul   eax,DWORD PTR [rax],0x65006d
	...
   14000b7f8:	push   rbx
   14000b7f9:	add    BYTE PTR [rcx+0x0],al
   14000b7fc:	rex.WRB add BYTE PTR [r8],r8b
   14000b7ff:	add    BYTE PTR [rbx+0x0],dl
   14000b802:	add    BYTE PTR [r11+0x0],r8b
   14000b806:	push   rbp
   14000b807:	add    BYTE PTR [rdx+0x0],dl
   14000b80a:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   14000b817:	add    BYTE PTR [rbx+0x0],dl
   14000b81a:	pop    rcx
   14000b81b:	add    BYTE PTR [rbx+0x0],dl
   14000b81e:	push   rsp
   14000b81f:	add    BYTE PTR [rbp+0x0],al
   14000b822:	rex.WRB add BYTE PTR [r8],r8b
   14000b825:	add    BYTE PTR [rax],al
   14000b827:	add    BYTE PTR [rbx+0x0],dl
   14000b82a:	outs   dx,DWORD PTR ds:[rsi]
   14000b82b:	add    BYTE PTR [rsi+0x0],ah
   14000b82e:	je     0x14000b830
   14000b830:	ja     0x14000b832
   14000b832:	(bad)  
   14000b833:	add    BYTE PTR [rdx+0x0],dh
   14000b836:	add    BYTE PTR gs:[rax],al
   14000b839:	add    BYTE PTR [rax],al
   14000b83b:	add    BYTE PTR [rax],al
   14000b83d:	add    BYTE PTR [rax],al
   14000b83f:	add    BYTE PTR [rax+rax*1+0x79],dl
   14000b843:	add    BYTE PTR [rax+0x0],dh
   14000b846:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14000b84b:	add    BYTE PTR [rdx+0x0],ah
   14000b84e:	add    BYTE PTR [rax],al
   14000b850:	call   0x171715c8f
   14000b855:	loope  0x14000b814
   14000b857:	rex.X mov eax,esp
   14000b85a:	and    esi,DWORD PTR [rax+0x4f]
   14000b85d:	mov    dl,0x7c
   14000b85f:	push   0x23
   14000b861:	add    eax,DWORD PTR [rax]
   14000b863:	add    BYTE PTR [rax],al
   14000b865:	add    BYTE PTR [rax],al
   14000b867:	add    al,al
   14000b869:	add    BYTE PTR [rax],al
   14000b86b:	add    BYTE PTR [rax],al
   14000b86d:	add    BYTE PTR [rax],al
   14000b86f:	rex.RX or BYTE PTR [rdi+0x14000],r14b
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	clc    
   14000b879:	mov    dh,0x0
   14000b87b:	rex add DWORD PTR [rax],eax
   14000b87e:	add    BYTE PTR [rax],al
   14000b880:	jo     0x14000b839
   14000b882:	add    BYTE PTR [rax+0x1],al
   14000b885:	add    BYTE PTR [rax],al
   14000b887:	add    BYTE PTR [rax+0x14000b7],ah
   14000b88d:	add    BYTE PTR [rax],al
   14000b88f:	add    BYTE PTR [rax+0x14000b7],bh
   14000b895:	add    BYTE PTR [rax],al
   14000b897:	add    al,dl
   14000b899:	mov    bh,0x0
   14000b89b:	rex add DWORD PTR [rax],eax
   14000b89e:	add    BYTE PTR [rax],al
   14000b8a0:	call   0x14140b95c
   14000b8a5:	add    BYTE PTR [rax],al
   14000b8a7:	add    al,bh
   14000b8a9:	mov    bh,0x0
   14000b8ab:	rex add DWORD PTR [rax],eax
   14000b8ae:	add    BYTE PTR [rax],al
   14000b8b0:	add    BYTE PTR [rax+0x14000],bh
   14000b8b6:	add    BYTE PTR [rax],al
   14000b8b8:	sbb    BYTE PTR [rax+0x14000],bh
   14000b8be:	add    BYTE PTR [rax],al
   14000b8c0:	sub    BYTE PTR [rax+0x14000],bh
   14000b8c6:	add    BYTE PTR [rax],al
   14000b8c8:	rex mov eax,0x14000
   14000b8ce:	add    BYTE PTR [rax],al
   14000b8d0:	jo     0x14000b921
   14000b8d2:	add    BYTE PTR [rax+0x1],al
   14000b8d5:	add    BYTE PTR [rax],al
   14000b8d7:	add    al,dl
   14000b8d9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b8dd:	add    BYTE PTR [rax],al
   14000b8df:	add    al,dh
   14000b8e1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000b8e5:	add    BYTE PTR [rax],al
   14000b8e7:	add    al,al
   14000b8e9:	cmp    al,BYTE PTR [rax]
   14000b8eb:	rex add DWORD PTR [rax],eax
   14000b8ee:	add    BYTE PTR [rax],al
   14000b8f0:	adc    BYTE PTR [rsi],bh
   14000b8f2:	add    BYTE PTR [rax+0x1],al
   14000b8f5:	add    BYTE PTR [rax],al
   14000b8f7:	add    BYTE PTR [rax+0x140003e],dl
   14000b8fd:	add    BYTE PTR [rax],al
   14000b8ff:	add    BYTE PTR [rax+0x140003e],dh
   14000b905:	add    BYTE PTR [rax],al
   14000b907:	add    BYTE PTR [rax],ah
   14000b909:	push   rax
   14000b90a:	add    BYTE PTR [rax+0x1],al
   14000b90d:	add    BYTE PTR [rax],al
   14000b90f:	add    BYTE PTR [rax+0x140004d],ah
   14000b915:	add    BYTE PTR [rax],al
   14000b917:	add    al,dh
   14000b919:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b91d:	add    BYTE PTR [rax],al
   14000b91f:	add    BYTE PTR [rax+0x140004f],dh
   14000b925:	add    BYTE PTR [rax],al
   14000b927:	add    BYTE PTR [rax+0x140004f],ah
   14000b92d:	add    BYTE PTR [rax],al
   14000b92f:	add    al,ah
   14000b931:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b935:	add    BYTE PTR [rax],al
   14000b937:	add    BYTE PTR [rax+0x140004e],al
   14000b93d:	add    BYTE PTR [rax],al
   14000b93f:	add    BYTE PTR [rax+0x4f],al
   14000b942:	add    BYTE PTR [rax+0x1],al
   14000b945:	add    BYTE PTR [rax],al
   14000b947:	add    BYTE PTR [rax],dh
   14000b949:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000b94d:	add    BYTE PTR [rax],al
   14000b94f:	add    BYTE PTR [rax+0x140004d],dl
   14000b955:	add    BYTE PTR [rax],al
   14000b957:	add    BYTE PTR [rax+0x4e],dh
   14000b95a:	add    BYTE PTR [rax+0x1],al
   14000b95d:	add    BYTE PTR [rax],al
   14000b95f:	add    BYTE PTR [rax],ah
   14000b961:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000b965:	add    BYTE PTR [rax],al
   14000b967:	add    al,ah
   14000b969:	xor    DWORD PTR [rax],eax
   14000b96b:	rex add DWORD PTR [rax],eax
   14000b96e:	add    BYTE PTR [rax],al
   14000b970:	mov    al,0x4e
   14000b972:	add    BYTE PTR [rax+0x1],al
   14000b975:	add    BYTE PTR [rax],al
   14000b977:	add    BYTE PTR [rax],al
   14000b979:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b97d:	add    BYTE PTR [rax],al
   14000b97f:	add    BYTE PTR [rax],al
   14000b981:	push   rax
   14000b982:	add    BYTE PTR [rax+0x1],al
   14000b985:	add    BYTE PTR [rax],al
   14000b987:	add    al,al
   14000b989:	cmp    al,BYTE PTR [rax]
   14000b98b:	rex add DWORD PTR [rax],eax
   14000b98e:	add    BYTE PTR [rax],al
   14000b990:	add    BYTE PTR [rip+0x14000],bh        # 0x14001f996
   14000b996:	add    BYTE PTR [rax],al
   14000b998:	cmp    BYTE PTR [rip+0x14000],0x0        # 0x14001f99f
   14000b99f:	add    BYTE PTR [rax+0x140003d],ah
   14000b9a5:	add    BYTE PTR [rax],al
   14000b9a7:	add    BYTE PTR [rax+0x140004f],dl
   14000b9ad:	add    BYTE PTR [rax],al
   14000b9af:	add    al,dl
   14000b9b1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000b9b5:	add    BYTE PTR [rax],al
   14000b9b7:	add    BYTE PTR [rax],ah
   14000b9b9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b9bd:	add    BYTE PTR [rax],al
   14000b9bf:	add    BYTE PTR [rax],dl
   14000b9c1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000b9c5:	add    BYTE PTR [rax],al
   14000b9c7:	add    BYTE PTR [rax],al
   14000b9c9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000b9cd:	add    BYTE PTR [rax],al
   14000b9cf:	add    BYTE PTR [rax],dl
   14000b9d1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000b9d5:	add    BYTE PTR [rax],al
   14000b9d7:	add    BYTE PTR [rax+0x140004d],dh
   14000b9dd:	add    BYTE PTR [rax],al
   14000b9df:	add    BYTE PTR [rax+0x4e],ah
   14000b9e2:	add    BYTE PTR [rax+0x1],al
   14000b9e5:	add    BYTE PTR [rax],al
   14000b9e7:	add    BYTE PTR [rax+0x4e],dl
   14000b9ea:	add    BYTE PTR [rax+0x1],al
   14000b9ed:	add    BYTE PTR [rax],al
   14000b9ef:	add    al,al
   14000b9f1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000b9f5:	add    BYTE PTR [rax],al
   14000b9f7:	add    al,ah
   14000b9f9:	and    DWORD PTR [rax],eax
   14000b9fb:	rex add DWORD PTR [rax],eax
   14000b9fe:	add    BYTE PTR [rax],al
   14000ba00:	lock xor BYTE PTR [rax],al
   14000ba03:	rex add DWORD PTR [rax],eax
   14000ba06:	add    BYTE PTR [rax],al
   14000ba08:	loopne 0x14000ba57
   14000ba0a:	add    BYTE PTR [rax+0x1],al
   14000ba0d:	add    BYTE PTR [rax],al
   14000ba0f:	add    BYTE PTR [rax],dl
   14000ba11:	push   rax
   14000ba12:	add    BYTE PTR [rax+0x1],al
   14000ba15:	add    BYTE PTR [rax],al
   14000ba17:	add    BYTE PTR [rax+0x140004f],al
   14000ba1d:	add    BYTE PTR [rax],al
   14000ba1f:	add    al,al
   14000ba21:	cmp    al,BYTE PTR [rax]
   14000ba23:	rex add DWORD PTR [rax],eax
   14000ba26:	add    BYTE PTR [rax],al
   14000ba28:	lock cmp eax,DWORD PTR [rax]
   14000ba2b:	rex add DWORD PTR [rax],eax
   14000ba2e:	add    BYTE PTR [rax],al
   14000ba30:	jo     0x14000ba6e
   14000ba32:	add    BYTE PTR [rax+0x1],al
   14000ba35:	add    BYTE PTR [rax],al
   14000ba37:	add    BYTE PTR [rax+0x140003c],dl
   14000ba3d:	add    BYTE PTR [rax],al
   14000ba3f:	add    al,al
   14000ba41:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000ba45:	add    BYTE PTR [rax],al
   14000ba47:	add    BYTE PTR [rax+0x4f],dl
   14000ba4a:	add    BYTE PTR [rax+0x1],al
   14000ba4d:	add    BYTE PTR [rax],al
   14000ba4f:	add    BYTE PTR [rax+0x50],al
   14000ba52:	add    BYTE PTR [rax+0x1],al
   14000ba55:	add    BYTE PTR [rax],al
   14000ba57:	add    BYTE PTR [rax+0x4e],al
   14000ba5a:	add    BYTE PTR [rax+0x1],al
   14000ba5d:	add    BYTE PTR [rax],al
   14000ba5f:	add    BYTE PTR [rax],dh
   14000ba61:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000ba65:	add    BYTE PTR [rax],al
   14000ba67:	add    BYTE PTR [rax],dh
   14000ba69:	push   rax
   14000ba6a:	add    BYTE PTR [rax+0x1],al
   14000ba6d:	add    BYTE PTR [rax],al
   14000ba6f:	add    al,ah
   14000ba71:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000ba75:	add    BYTE PTR [rax],al
   14000ba77:	add    BYTE PTR [rax+0x140004d],al
   14000ba7d:	add    BYTE PTR [rax],al
   14000ba7f:	add    BYTE PTR [rax+0x4d],dh
   14000ba82:	add    BYTE PTR [rax+0x1],al
   14000ba85:	add    BYTE PTR [rax],al
   14000ba87:	add    BYTE PTR [rax+0x1d],al
   14000ba8a:	add    BYTE PTR [rax+0x1],al
   14000ba8d:	add    BYTE PTR [rax],al
   14000ba8f:	add    BYTE PTR [rax+0x1400049],ah
   14000ba95:	add    BYTE PTR [rax],al
   14000ba97:	add    BYTE PTR [rax+0x4a],dl
   14000ba9a:	add    BYTE PTR [rax+0x1],al
   14000ba9d:	add    BYTE PTR [rax],al
   14000ba9f:	add    BYTE PTR [rax+0x4a],dh
   14000baa2:	add    BYTE PTR [rax+0x1],al
   14000baa5:	add    BYTE PTR [rax],al
   14000baa7:	add    al,al
   14000baa9:	cmp    al,BYTE PTR [rax]
   14000baab:	rex add DWORD PTR [rax],eax
   14000baae:	add    BYTE PTR [rax],al
   14000bab0:	loopne 0x14000baec
   14000bab2:	add    BYTE PTR [rax+0x1],al
   14000bab5:	add    BYTE PTR [rax],al
   14000bab7:	add    BYTE PTR [rax+0x3b],ah
   14000baba:	add    BYTE PTR [rax+0x1],al
   14000babd:	add    BYTE PTR [rax],al
   14000babf:	add    BYTE PTR [rax+0x140003b],al
   14000bac5:	add    BYTE PTR [rax],al
   14000bac7:	add    BYTE PTR [rax+0x18],al
   14000baca:	add    BYTE PTR [rax+0x1],al
   14000bacd:	add    BYTE PTR [rax],al
   14000bacf:	add    BYTE PTR [rax+0x1400019],ah
   14000bad5:	add    BYTE PTR [rax],al
   14000bad7:	add    BYTE PTR [rax],dl
   14000bad9:	add    BYTE PTR es:[rax+0x1],al
   14000badd:	add    BYTE PTR [rax],al
   14000badf:	add    al,al
   14000bae1:	(bad)  
   14000bae2:	add    BYTE PTR [rax+0x1],al
   14000bae5:	add    BYTE PTR [rax],al
   14000bae7:	add    BYTE PTR [rax],ah
   14000bae9:	sub    DWORD PTR [rax],eax
   14000baeb:	rex add DWORD PTR [rax],eax
   14000baee:	add    BYTE PTR [rax],al
   14000baf0:	sub    BYTE PTR [rdx],0x0
   14000baf3:	rex add DWORD PTR [rax],eax
   14000baf6:	add    BYTE PTR [rax],al
   14000baf8:	and    BYTE PTR [rax+rax*1],ch
   14000bafb:	rex add DWORD PTR [rax],eax
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	mov    al,0x2c
   14000bb02:	add    BYTE PTR [rax+0x1],al
   14000bb05:	add    BYTE PTR [rax],al
   14000bb07:	add    BYTE PTR [rax+0x140002e],dl
   14000bb0d:	add    BYTE PTR [rax],al
   14000bb0f:	add    BYTE PTR [rax+0x140004b],dl
   14000bb15:	add    BYTE PTR [rax],al
   14000bb17:	add    BYTE PTR [rax+0x4f],dh
   14000bb1a:	add    BYTE PTR [rax+0x1],al
   14000bb1d:	add    BYTE PTR [rax],al
   14000bb1f:	add    BYTE PTR [rax+0x4f],ah
   14000bb22:	add    BYTE PTR [rax+0x1],al
   14000bb25:	add    BYTE PTR [rax],al
   14000bb27:	add    BYTE PTR [rax+0x140004e],dl
   14000bb2d:	add    BYTE PTR [rax],al
   14000bb2f:	add    al,al
   14000bb31:	cmp    al,BYTE PTR [rax]
   14000bb33:	rex add DWORD PTR [rax],eax
   14000bb36:	add    BYTE PTR [rax],al
   14000bb38:	adc    BYTE PTR [rsi],bh
   14000bb3a:	add    BYTE PTR [rax+0x1],al
   14000bb3d:	add    BYTE PTR [rax],al
   14000bb3f:	add    BYTE PTR [rax+0x140003e],dl
   14000bb45:	add    BYTE PTR [rax],al
   14000bb47:	add    BYTE PTR [rax+0x140003e],dh
   14000bb4d:	add    BYTE PTR [rax],al
   14000bb4f:	add    BYTE PTR [rax],ah
   14000bb51:	push   rax
   14000bb52:	add    BYTE PTR [rax+0x1],al
   14000bb55:	add    BYTE PTR [rax],al
   14000bb57:	add    BYTE PTR [rax+0x140004d],ah
   14000bb5d:	add    BYTE PTR [rax],al
   14000bb5f:	add    al,dh
   14000bb61:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bb65:	add    BYTE PTR [rax],al
   14000bb67:	add    BYTE PTR [rax+0x140004f],dh
   14000bb6d:	add    BYTE PTR [rax],al
   14000bb6f:	add    BYTE PTR [rax+0x140004f],ah
   14000bb75:	add    BYTE PTR [rax],al
   14000bb77:	add    al,ah
   14000bb79:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bb7d:	add    BYTE PTR [rax],al
   14000bb7f:	add    BYTE PTR [rax+0x140004e],al
   14000bb85:	add    BYTE PTR [rax],al
   14000bb87:	add    BYTE PTR [rax+0x4f],al
   14000bb8a:	add    BYTE PTR [rax+0x1],al
   14000bb8d:	add    BYTE PTR [rax],al
   14000bb8f:	add    BYTE PTR [rax],dh
   14000bb91:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bb95:	add    BYTE PTR [rax],al
   14000bb97:	add    BYTE PTR [rax+0x140004d],dl
   14000bb9d:	add    BYTE PTR [rax],al
   14000bb9f:	add    BYTE PTR [rax+0x4e],dh
   14000bba2:	add    BYTE PTR [rax+0x1],al
   14000bba5:	add    BYTE PTR [rax],al
   14000bba7:	add    BYTE PTR [rax],ah
   14000bba9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bbad:	add    BYTE PTR [rax],al
   14000bbaf:	add    al,ah
   14000bbb1:	xor    DWORD PTR [rax],eax
   14000bbb3:	rex add DWORD PTR [rax],eax
   14000bbb6:	add    BYTE PTR [rax],al
   14000bbb8:	mov    al,0x4e
   14000bbba:	add    BYTE PTR [rax+0x1],al
   14000bbbd:	add    BYTE PTR [rax],al
   14000bbbf:	add    BYTE PTR [rax+0x140004e],ah
   14000bbc5:	add    BYTE PTR [rax],al
   14000bbc7:	add    al,al
   14000bbc9:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000bbcd:	add    BYTE PTR [rax],al
   14000bbcf:	add    al,al
   14000bbd1:	cmp    al,BYTE PTR [rax]
   14000bbd3:	rex add DWORD PTR [rax],eax
   14000bbd6:	add    BYTE PTR [rax],al
   14000bbd8:	add    BYTE PTR [rip+0x14000],bh        # 0x14001fbde
   14000bbde:	add    BYTE PTR [rax],al
   14000bbe0:	cmp    BYTE PTR [rip+0x14000],0x0        # 0x14001fbe7
   14000bbe7:	add    BYTE PTR [rax+0x140003d],ah
   14000bbed:	add    BYTE PTR [rax],al
   14000bbef:	add    BYTE PTR [rax+0x140004f],dl
   14000bbf5:	add    BYTE PTR [rax],al
   14000bbf7:	add    al,dl
   14000bbf9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bbfd:	add    BYTE PTR [rax],al
   14000bbff:	add    BYTE PTR [rax],ah
   14000bc01:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bc05:	add    BYTE PTR [rax],al
   14000bc07:	add    BYTE PTR [rax],dl
   14000bc09:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bc0d:	add    BYTE PTR [rax],al
   14000bc0f:	add    BYTE PTR [rax],al
   14000bc11:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bc15:	add    BYTE PTR [rax],al
   14000bc17:	add    BYTE PTR [rax],dl
   14000bc19:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bc1d:	add    BYTE PTR [rax],al
   14000bc1f:	add    BYTE PTR [rax+0x140004d],dh
   14000bc25:	add    BYTE PTR [rax],al
   14000bc27:	add    BYTE PTR [rax+0x4e],ah
   14000bc2a:	add    BYTE PTR [rax+0x1],al
   14000bc2d:	add    BYTE PTR [rax],al
   14000bc2f:	add    BYTE PTR [rax+0x4e],dl
   14000bc32:	add    BYTE PTR [rax+0x1],al
   14000bc35:	add    BYTE PTR [rax],al
   14000bc37:	add    al,al
   14000bc39:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bc3d:	add    BYTE PTR [rax],al
   14000bc3f:	add    al,ah
   14000bc41:	and    DWORD PTR [rax],eax
   14000bc43:	rex add DWORD PTR [rax],eax
   14000bc46:	add    BYTE PTR [rax],al
   14000bc48:	lock xor BYTE PTR [rax],al
   14000bc4b:	rex add DWORD PTR [rax],eax
   14000bc4e:	add    BYTE PTR [rax],al
   14000bc50:	loopne 0x14000bc9f
   14000bc52:	add    BYTE PTR [rax+0x1],al
   14000bc55:	add    BYTE PTR [rax],al
   14000bc57:	add    al,dl
   14000bc59:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14000bc5d:	add    BYTE PTR [rax],al
   14000bc5f:	add    al,dh
   14000bc61:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bc65:	add    BYTE PTR [rax],al
   14000bc67:	add    al,al
   14000bc69:	cmp    al,BYTE PTR [rax]
   14000bc6b:	rex add DWORD PTR [rax],eax
   14000bc6e:	add    BYTE PTR [rax],al
   14000bc70:	lock cmp eax,DWORD PTR [rax]
   14000bc73:	rex add DWORD PTR [rax],eax
   14000bc76:	add    BYTE PTR [rax],al
   14000bc78:	jo     0x14000bcb6
   14000bc7a:	add    BYTE PTR [rax+0x1],al
   14000bc7d:	add    BYTE PTR [rax],al
   14000bc7f:	add    BYTE PTR [rax+0x140003c],dl
   14000bc85:	add    BYTE PTR [rax],al
   14000bc87:	add    al,al
   14000bc89:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bc8d:	add    BYTE PTR [rax],al
   14000bc8f:	add    BYTE PTR [rax+0x4f],dl
   14000bc92:	add    BYTE PTR [rax+0x1],al
   14000bc95:	add    BYTE PTR [rax],al
   14000bc97:	add    BYTE PTR [rax+0x50],al
   14000bc9a:	add    BYTE PTR [rax+0x1],al
   14000bc9d:	add    BYTE PTR [rax],al
   14000bc9f:	add    BYTE PTR [rax+0x4e],al
   14000bca2:	add    BYTE PTR [rax+0x1],al
   14000bca5:	add    BYTE PTR [rax],al
   14000bca7:	add    BYTE PTR [rax],dh
   14000bca9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000bcad:	add    BYTE PTR [rax],al
   14000bcaf:	add    BYTE PTR [rax],dh
   14000bcb1:	push   rax
   14000bcb2:	add    BYTE PTR [rax+0x1],al
   14000bcb5:	add    BYTE PTR [rax],al
   14000bcb7:	add    al,ah
   14000bcb9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   14000bcbd:	add    BYTE PTR [rax],al
   14000bcbf:	add    BYTE PTR [rax+0x140004d],al
   14000bcc5:	add    BYTE PTR [rax],al
   14000bcc7:	add    BYTE PTR [rax+0x4d],dh
   14000bcca:	add    BYTE PTR [rax+0x1],al
   14000bccd:	add    BYTE PTR [rax],al
   14000bccf:	add    BYTE PTR [rax+0x1d],al
   14000bcd2:	add    BYTE PTR [rax+0x1],al
   14000bcd5:	add    BYTE PTR [rax],al
   14000bcd7:	add    BYTE PTR [rax+0x1400049],ah
   14000bcdd:	add    BYTE PTR [rax],al
   14000bcdf:	add    al,al
   14000bce1:	rex.W add BYTE PTR [rax+0x1],al
   14000bce5:	add    BYTE PTR [rax],al
   14000bce7:	add    BYTE PTR [rax],ah
   14000bce9:	rex.WB add BYTE PTR [r8+0x1],al
   14000bced:	add    BYTE PTR [rax],al
   14000bcef:	add    al,al
   14000bcf1:	cmp    al,BYTE PTR [rax]
   14000bcf3:	rex add DWORD PTR [rax],eax
   14000bcf6:	add    BYTE PTR [rax],al
   14000bcf8:	loopne 0x14000bd34
   14000bcfa:	add    BYTE PTR [rax+0x1],al
   14000bcfd:	add    BYTE PTR [rax],al
   14000bcff:	add    BYTE PTR [rax+0x3b],ah
   14000bd02:	add    BYTE PTR [rax+0x1],al
   14000bd05:	add    BYTE PTR [rax],al
   14000bd07:	add    BYTE PTR [rax+0x140003b],al
   14000bd0d:	add    BYTE PTR [rax],al
   14000bd0f:	add    BYTE PTR [rax+0x18],al
   14000bd12:	add    BYTE PTR [rax+0x1],al
   14000bd15:	add    BYTE PTR [rax],al
   14000bd17:	add    BYTE PTR [rax+0x1400019],ah
   14000bd1d:	add    BYTE PTR [rax],al
   14000bd1f:	add    BYTE PTR [rax],dl
   14000bd21:	add    BYTE PTR es:[rax+0x1],al
   14000bd25:	add    BYTE PTR [rax],al
   14000bd27:	add    al,al
   14000bd29:	(bad)  
   14000bd2a:	add    BYTE PTR [rax+0x1],al
   14000bd2d:	add    BYTE PTR [rax],al
   14000bd2f:	add    BYTE PTR [rax],ah
   14000bd31:	sub    DWORD PTR [rax],eax
   14000bd33:	rex add DWORD PTR [rax],eax
   14000bd36:	add    BYTE PTR [rax],al
   14000bd38:	sub    BYTE PTR [rdx],0x0
   14000bd3b:	rex add DWORD PTR [rax],eax
   14000bd3e:	add    BYTE PTR [rax],al
   14000bd40:	and    BYTE PTR [rax+rax*1],ch
   14000bd43:	rex add DWORD PTR [rax],eax
   14000bd46:	add    BYTE PTR [rax],al
   14000bd48:	mov    al,0x2c
   14000bd4a:	add    BYTE PTR [rax+0x1],al
   14000bd4d:	add    BYTE PTR [rax],al
   14000bd4f:	add    BYTE PTR [rax+0x140002e],dl
   14000bd55:	add    BYTE PTR [rax],al
   14000bd57:	add    BYTE PTR [rax],dl
   14000bd59:	rex.WXB add BYTE PTR [r8+0x1],al
   14000bd5d:	add    BYTE PTR [rax],al
   14000bd5f:	add    BYTE PTR [rax-0x5f],dl
   14000bd62:	add    BYTE PTR [rax+0x1],al
   14000bd65:	add    BYTE PTR [rax],al
   14000bd67:	add    BYTE PTR [rax-0x5f],dl
   14000bd6a:	add    BYTE PTR [rax+0x1],al
   14000bd6d:	add    BYTE PTR [rax],al
   14000bd6f:	add    BYTE PTR [rax-0x5f],dl
   14000bd72:	add    BYTE PTR [rax+0x1],al
   14000bd75:	add    BYTE PTR [rax],al
   14000bd77:	add    BYTE PTR [rax],al
   14000bd79:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bd7d:	add    BYTE PTR [rax],al
   14000bd7f:	add    BYTE PTR [rax+0x1400051],ah
   14000bd85:	add    BYTE PTR [rax],al
   14000bd87:	add    BYTE PTR [rax-0x5f],dl
   14000bd8a:	add    BYTE PTR [rax+0x1],al
   14000bd8d:	add    BYTE PTR [rax],al
   14000bd8f:	add    BYTE PTR [rax-0x5f],dl
   14000bd92:	add    BYTE PTR [rax+0x1],al
   14000bd95:	add    BYTE PTR [rax],al
   14000bd97:	add    BYTE PTR [rax-0x5f],dl
   14000bd9a:	add    BYTE PTR [rax+0x1],al
   14000bd9d:	add    BYTE PTR [rax],al
   14000bd9f:	add    al,dh
   14000bda1:	push   rax
   14000bda2:	add    BYTE PTR [rax+0x1],al
   14000bda5:	add    BYTE PTR [rax],al
   14000bda7:	add    BYTE PTR [rax+0x1400051],ah
   14000bdad:	add    BYTE PTR [rax],al
   14000bdaf:	add    al,ah
   14000bdb1:	add    BYTE PTR [r8+0x1],r8b
   14000bdb5:	add    BYTE PTR [rax],al
   14000bdb7:	add    BYTE PTR [rax],ah
   14000bdb9:	add    BYTE PTR [r8+0x1],r8b
   14000bdbd:	add    BYTE PTR [rax],al
   14000bdbf:	add    BYTE PTR [rax+0x45],al
   14000bdc2:	add    BYTE PTR [rax+0x1],al
   14000bdc5:	add    BYTE PTR [rax],al
   14000bdc7:	add    BYTE PTR [rax],al
   14000bdc9:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000bdcd:	add    BYTE PTR [rax],al
   14000bdcf:	add    BYTE PTR [rax+0x1400051],ah
   14000bdd5:	add    BYTE PTR [rax],al
   14000bdd7:	add    BYTE PTR [rax],dl
   14000bdd9:	adc    eax,0x14000
   14000bdde:	add    BYTE PTR [rax],al
   14000bde0:	adc    BYTE PTR [rcx+0x0],0x40
   14000bde4:	add    DWORD PTR [rax],eax
   14000bde6:	add    BYTE PTR [rax],al
   14000bde8:	adc    BYTE PTR [rdx],bh
   14000bdea:	add    BYTE PTR [rax+0x1],al
   14000bded:	add    BYTE PTR [rax],al
   14000bdef:	add    al,ah
   14000bdf1:	push   rax
   14000bdf2:	add    BYTE PTR [rax+0x1],al
   14000bdf5:	add    BYTE PTR [rax],al
   14000bdf7:	add    BYTE PTR [rax+0x50],dl
   14000bdfa:	add    BYTE PTR [rax+0x1],al
   14000bdfd:	add    BYTE PTR [rax],al
   14000bdff:	add    BYTE PTR [rax+0x3a],ah
   14000be02:	add    BYTE PTR [rax+0x1],al
   14000be05:	add    BYTE PTR [rax],al
   14000be07:	add    BYTE PTR [rax],ah
   14000be09:	imul   eax,DWORD PTR [rax],0x40
   14000be0c:	add    DWORD PTR [rax],eax
   14000be0e:	add    BYTE PTR [rax],al
   14000be10:	rex imul eax,DWORD PTR [rax],0x40
   14000be14:	add    DWORD PTR [rax],eax
   14000be16:	add    BYTE PTR [rax],al
   14000be18:	mov    al,0x3a
   14000be1a:	add    BYTE PTR [rax+0x1],al
   14000be1d:	add    BYTE PTR [rax],al
   14000be1f:	add    BYTE PTR [rax],dl
   14000be21:	jo     0x14000be23
   14000be23:	rex add DWORD PTR [rax],eax
   14000be26:	add    BYTE PTR [rax],al
   14000be28:	shr    BYTE PTR [rax+rax*1+0x40],1
   14000be2c:	add    DWORD PTR [rax],eax
   14000be2e:	add    BYTE PTR [rax],al
   14000be30:	push   rax
   14000be31:	imul   eax,DWORD PTR [rax],0x40
   14000be34:	add    DWORD PTR [rax],eax
	...
   14000be3e:	add    BYTE PTR [rax],al
   14000be40:	jnp    0x14000be42
   14000be42:	rex.XB add BYTE PTR [r9],dil
   14000be45:	add    BYTE PTR [rdx],dh
   14000be47:	add    BYTE PTR [rcx+0x0],al
   14000be4a:	cmp    DWORD PTR [rax],eax
   14000be4c:	add    BYTE PTR ss:[rcx],dh
   14000be4f:	add    BYTE PTR [rdi],dh
   14000be51:	add    BYTE PTR [rip+0x45003000],ch        # 0x18500ee57
   14000be57:	add    BYTE PTR [rcx+0x0],al
   14000be5a:	add    BYTE PTR [rip+0x32003400],r13b        # 0x17200f261
   14000be61:	add    BYTE PTR [rbx],dh
   14000be63:	add    BYTE PTR [rip+0x42002d00],dh        # 0x18200eb69
   14000be69:	add    BYTE PTR [rax+rax*1+0x32],al
   14000be6d:	add    BYTE PTR [rdx+0x0],al
   14000be70:	sub    eax,0x34003800
   14000be75:	add    BYTE PTR [rip+0x30003400],dh        # 0x17000f27b
   14000be7b:	add    BYTE PTR [rbp+0x0],al
   14000be7e:	rex.RX add BYTE PTR [rcx],r14b
   14000be81:	add    BYTE PTR [rsi+0x0],al
   14000be84:	rex.RX add BYTE PTR [rcx+0x0],r8b
   14000be88:	cmp    DWORD PTR [rax],eax
   14000be8a:	jge    0x14000be8c
   14000be8c:	add    BYTE PTR [rax],al
   14000be8e:	add    BYTE PTR [rax],al
   14000be90:	rex.WRX push rbp
   14000be92:	rex.WR
   14000be93:	rex.WR add BYTE PTR [rax],r8b
   14000be96:	add    BYTE PTR [rax],al
   14000be98:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000be9a:	rex.XB jb 0x14000bf02
   14000be9d:	(bad)  
   14000be9e:	je     0x14000bf05
   14000bea0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bea2:	jae    0x14000bf18
   14000bea4:	(bad)  
   14000bea5:	outs   dx,BYTE PTR ds:[rsi]
   14000bea6:	movsxd esp,DWORD PTR [rbp+0x20]
   14000bea9:	outs   dx,WORD PTR ds:[rsi]
   14000beab:	jb     0x14000becd
   14000bead:	push   rdi
   14000beae:	outs   dx,DWORD PTR ds:[rsi]
   14000beaf:	jb     0x14000bf1c
   14000beb1:	jae    0x14000bf23
   14000beb3:	(bad)  
   14000beb4:	movsxd esp,DWORD PTR [rbp+0x20]
   14000beb7:	push   rdx
   14000beb8:	jne    0x14000bf28
   14000beba:	je     0x14000bf25
   14000bebc:	ins    DWORD PTR es:[rdi],dx
   14000bebd:	and    BYTE PTR gs:[rsi+0x61],ah
   14000bec1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x62000000
   14000bec9:	jae    0x14000bf3f
   14000becb:	jb     0x14000bf24
   14000becd:	outs   dx,DWORD PTR ds:[rsi]
   14000bece:	jb     0x14000bf3b
   14000bed0:	jae    0x14000bf42
   14000bed2:	(bad)  
   14000bed3:	movsxd esp,DWORD PTR [rbp+0x49]
   14000bed6:	add    BYTE PTR fs:[rcx+0x6e],cl
   14000beda:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000bee2:	push   rdi
   14000bee3:	outs   dx,DWORD PTR ds:[rsi]
   14000bee4:	jb     0x14000bf51
   14000bee6:	jae    0x14000bf58
   14000bee8:	(bad)  
   14000bee9:	movsxd esp,DWORD PTR [rbp+0x4f]
   14000beec:	(bad)  
   14000beed:	push   0x65
   14000beef:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14000bef3:	outs   dx,DWORD PTR ds:[rsi]
   14000bef4:	jb     0x14000bf16
   14000bef6:	push   rdi
   14000bef7:	outs   dx,DWORD PTR ds:[rsi]
   14000bef8:	jb     0x14000bf65
   14000befa:	jae    0x14000bf6c
   14000befc:	(bad)  
   14000befd:	movsxd esp,DWORD PTR [rbp+0x20]
   14000bf00:	push   rdx
   14000bf01:	jne    0x14000bf71
   14000bf03:	je     0x14000bf6e
   14000bf05:	ins    DWORD PTR es:[rdi],dx
   14000bf06:	and    BYTE PTR gs:[rsi+0x61],ah
   14000bf0a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x69440000
   14000bf12:	jae    0x14000bf77
   14000bf14:	outs   dx,DWORD PTR ds:[rsi]
   14000bf15:	outs   dx,BYTE PTR ds:[rsi]
   14000bf16:	outs   dx,BYTE PTR ds:[rsi]
   14000bf17:	movsxd esi,DWORD PTR gs:[rdi+rdx*2+0x6f]
   14000bf1c:	jb     0x14000bf89
   14000bf1e:	jae    0x14000bf90
   14000bf20:	(bad)  
   14000bf21:	movsxd esp,DWORD PTR [rbp+0x20]
   14000bf24:	data16 (bad) 
   14000bf26:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000bf2e:	add    BYTE PTR [rax],al
   14000bf30:	(bad)
   14000bf35:	jae    0x14000bf9c
   14000bf37:	jb     0x14000bf87
   14000bf39:	(bad)  
   14000bf3a:	ins    DWORD PTR es:[rdi],dx
   14000bf3b:	add    BYTE PTR gs:[rax],al
   14000bf3e:	add    BYTE PTR [rax],al
   14000bf40:	(bad)
   14000bf45:	(bad)  
   14000bf46:	jae    0x14000bfbb
   14000bf48:	ja     0x14000bfb9
   14000bf4a:	jb     0x14000bfb0
   14000bf4c:	add    BYTE PTR [rax],al
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	push   rbx
   14000bf51:	je     0x14000bfb4
   14000bf53:	jb     0x14000bfc9
   14000bf55:	push   rdi
   14000bf56:	outs   dx,DWORD PTR ds:[rsi]
   14000bf57:	jb     0x14000bfc4
   14000bf59:	jae    0x14000bfcb
   14000bf5b:	(bad)  
   14000bf5c:	movsxd esp,DWORD PTR [rbp+0x20]
   14000bf5f:	data16 (bad) 
   14000bf61:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x51000000
   14000bf69:	jne    0x14000bfd0
   14000bf6b:	jb     0x14000bfe6
   14000bf6d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bf6f:	je     0x14000bfd6
   14000bf71:	jb     0x14000bfd9
   14000bf73:	(bad)  
   14000bf74:	movsxd esp,DWORD PTR [rbp+0x20]
   14000bf77:	outs   dx,WORD PTR ds:[rsi]
   14000bf79:	jb     0x14000bf9b
   14000bf7b:	rex.WB push r15
   14000bf7d:	outs   dx,DWORD PTR ds:[rsi]
   14000bf7e:	jb     0x14000bfeb
   14000bf80:	jae    0x14000bff2
   14000bf82:	(bad)  
   14000bf83:	movsxd esp,DWORD PTR [rbp+0x53]
   14000bf86:	movsxd esi,DWORD PTR [rdx+0x69]
   14000bf89:	jo     0x14000bfff
   14000bf8b:	(bad)  
   14000bf8c:	(bad)  
   14000bf8d:	ins    BYTE PTR es:[rdi],dx
   14000bf8e:	xor    ah,BYTE PTR gs:[rax]
   14000bf91:	data16 (bad) 
   14000bf93:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65755100
   14000bf9b:	jb     0x14000c016
   14000bf9d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000bf9f:	je     0x14000c006
   14000bfa1:	jb     0x14000c009
   14000bfa3:	(bad)  
   14000bfa4:	movsxd esp,DWORD PTR [rbp+0x20]
   14000bfa7:	outs   dx,WORD PTR ds:[rsi]
   14000bfa9:	jb     0x14000bfcb
   14000bfab:	rex.WB push r15
   14000bfad:	outs   dx,DWORD PTR ds:[rsi]
   14000bfae:	jb     0x14000c01b
   14000bfb0:	jae    0x14000c022
   14000bfb2:	(bad)  
   14000bfb3:	movsxd esp,DWORD PTR [rbp+0x53]
   14000bfb6:	movsxd esi,DWORD PTR [rdx+0x69]
   14000bfb9:	jo     0x14000c02f
   14000bfbb:	(bad)  
   14000bfbc:	(bad)  
   14000bfbd:	ins    BYTE PTR es:[rdi],dx
   14000bfbe:	xor    esp,DWORD PTR gs:[rax]
   14000bfc1:	data16 (bad) 
   14000bfc3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x43627000
   14000bfcb:	jb     0x14000c032
   14000bfcd:	fs rex.RB js 0x14000c03a
   14000bfd1:	jae    0x14000c047
   14000bfd3:	add    BYTE PTR [rax],al
   14000bfd5:	add    BYTE PTR [rax],al
   14000bfd7:	add    BYTE PTR [rcx+0x73],cl
   14000bfda:	push   rdi
   14000bfdb:	outs   dx,DWORD PTR ds:[rsi]
   14000bfdc:	jb     0x14000c049
   14000bfde:	jae    0x14000c050
   14000bfe0:	(bad)  
   14000bfe1:	movsxd esp,DWORD PTR [rbp+0x43]
   14000bfe4:	jb     0x14000c04b
   14000bfe6:	fs outs dx,BYTE PTR gs:[rsi]
   14000bfe9:	je     0x14000c054
   14000bfeb:	(bad)  
   14000bfec:	ins    BYTE PTR es:[rdi],dx
   14000bfed:	push   rbx
   14000bfee:	jo     0x14000c055
   14000bff0:	movsxd ebp,DWORD PTR [rcx+0x66]
   14000bff3:	imul   esp,DWORD PTR [rbp+0x64],0x69616620
   14000bffa:	ins    BYTE PTR es:[rdi],dx
   14000bffb:	gs add BYTE PTR fs:[rax],al
   14000bfff:	add    BYTE PTR [rax+0x62],dh
   14000c002:	push   rbx
   14000c003:	push   rbx
   14000c004:	rex.WRXB
   14000c005:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c007:	(bad)  
   14000c008:	(bad)  
   14000c009:	ins    BYTE PTR es:[rdi],dx
   14000c00a:	gs add BYTE PTR fs:[rax],al
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	rex.WB jae 0x14000c06a
   14000c013:	outs   dx,DWORD PTR ds:[rsi]
   14000c014:	jb     0x14000c081
   14000c016:	jae    0x14000c088
   14000c018:	(bad)  
   14000c019:	movsxd esp,DWORD PTR [rbp+0x53]
   14000c01c:	push   rbx
   14000c01d:	rex.WRXB
   14000c01e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c020:	(bad)  
   14000c021:	(bad)  
   14000c022:	ins    BYTE PTR es:[rdi],dx
   14000c023:	gs and BYTE PTR fs:[rsi+0x61],ah
   14000c028:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000c030:	rex.XB ins BYTE PTR es:[rdi],dx
   14000c032:	gs (bad) 
   14000c034:	jb     0x14000c08d
   14000c036:	outs   dx,DWORD PTR ds:[rsi]
   14000c037:	jb     0x14000c0a4
   14000c039:	jae    0x14000c0ab
   14000c03b:	(bad)  
   14000c03c:	movsxd esp,DWORD PTR [rbp+0x43]
   14000c03f:	jb     0x14000c0a6
   14000c041:	fs outs dx,BYTE PTR gs:[rsi]
   14000c044:	je     0x14000c0af
   14000c046:	(bad)  
   14000c047:	ins    BYTE PTR es:[rdi],dx
   14000c048:	and    BYTE PTR [rsi+0x61],ah
   14000c04b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x416e4f00
   14000c053:	jne    0x14000c0c9
   14000c055:	push   0x69746e65
   14000c05a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c05d:	gs and BYTE PTR fs:[rsi+0x61],ah
   14000c062:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x75700000
   14000c06a:	ins    BYTE PTR es:[rdi],dx
   14000c06b:	push   rax
   14000c06c:	jb     0x14000c0dd
   14000c06e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c071:	jae    0x14000c0bc
   14000c073:	add    BYTE PTR fs:[rax],al
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	(bad)
   14000c07d:	jb     0x14000c0e6
   14000c07f:	jne    0x14000c0ee
   14000c081:	outs   dx,BYTE PTR gs:[rsi]
   14000c083:	je     0x14000c0f8
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rdx+0x73],ah
   14000c08a:	je     0x14000c0fe
   14000c08c:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x687461
   14000c095:	add    BYTE PTR [rax],al
   14000c097:	add    BYTE PTR [rbx+0x54],al
   14000c09a:	jae    0x14000c0ff
   14000c09c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c09e:	ins    DWORD PTR es:[rdi],dx
   14000c09f:	rex.W
   14000c0a0:	gs ins BYTE PTR es:[rdi],dx
   14000c0a2:	jo     0x14000c109
   14000c0a4:	jb     0x14000c0e0
   14000c0a6:	cmp    dl,BYTE PTR [rbx+0x74]
   14000c0a9:	(bad)  
   14000c0aa:	jb     0x14000c120
   14000c0ac:	push   rdx
   14000c0ad:	gs ins DWORD PTR es:[rdi],dx
   14000c0af:	outs   dx,DWORD PTR ds:[rsi]
   14000c0b0:	je     0x14000c117
   14000c0b2:	rex.B jo 0x14000c125
   14000c0b5:	ins    BYTE PTR es:[rdi],dx
   14000c0b6:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000c0bd:	and    BYTE PTR [rsi+0x61],ah
   14000c0c0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000c0c8:	(bad)
   14000c0cd:	jae    0x14000c143
   14000c0cf:	jae    0x14000c134
   14000c0d1:	add    BYTE PTR [rax],al
   14000c0d3:	add    BYTE PTR [rax],al
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rcx+0x6e],cl
   14000c0da:	jbe    0x14000c13d
   14000c0dc:	ins    BYTE PTR es:[rdi],dx
   14000c0dd:	imul   esp,DWORD PTR [rax+riz*1+0x4d],0x43535453
   14000c0e5:	and    BYTE PTR [rdi+rbp*2+0x63],cl
   14000c0e9:	(bad)  
   14000c0ea:	je     0x14000c155
   14000c0ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c0ed:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ee:	and    BYTE PTR [rax+0x61],dh
   14000c0f1:	jae    0x14000c166
   14000c0f3:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000c0f8:	and    DWORD PTR [rax],eax
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	add    BYTE PTR [rax],al
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	rex.XB jb 0x14000c168
   14000c103:	(bad)  
   14000c104:	je     0x14000c16b
   14000c106:	push   rax
   14000c107:	jb     0x14000c178
   14000c109:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c10c:	jae    0x14000c12e
   14000c10e:	data16 (bad) 
   14000c110:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000c118:	(bad)
   14000c11d:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000c124:	add    BYTE PTR [rax],al
   14000c126:	add    BYTE PTR [rax],al
   14000c128:	jo     0x14000c18c
   14000c12a:	jae    0x14000c1a0
   14000c12c:	jb     0x14000c173
   14000c12e:	outs   dx,BYTE PTR ds:[rsi]
   14000c12f:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c132:	gs fs push rsp
   14000c135:	outs   dx,DWORD PTR ds:[rsi]
   14000c136:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   14000c13a:	add    BYTE PTR [rax],al
   14000c13c:	add    BYTE PTR [rax],al
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	rex.RX (bad) 
   14000c142:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x57707320
   14000c14a:	outs   dx,DWORD PTR ds:[rsi]
   14000c14b:	jb     0x14000c1b8
   14000c14d:	jae    0x14000c1bf
   14000c14f:	(bad)  
   14000c150:	movsxd esp,DWORD PTR [rbp+0x2e]
   14000c153:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c155:	rex.XB jb 0x14000c1bd
   14000c158:	(bad)  
   14000c159:	je     0x14000c1c0
   14000c15b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c15d:	jae    0x14000c1d3
   14000c15f:	(bad)  
   14000c160:	outs   dx,BYTE PTR ds:[rsi]
   14000c161:	movsxd esp,DWORD PTR [rbp+0x28]
   14000c164:	sub    DWORD PTR [rax],eax
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	rex.RX (bad) 
   14000c16a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x57707320
   14000c172:	outs   dx,DWORD PTR ds:[rsi]
   14000c173:	jb     0x14000c1e0
   14000c175:	jae    0x14000c1e7
   14000c177:	(bad)  
   14000c178:	movsxd esp,DWORD PTR [rbp+0x2d]
   14000c17b:	ds rex.RXB
   14000c17d:	gs je  0x14000c1c3
   14000c180:	ins    BYTE PTR es:[rdi],dx
   14000c181:	(bad)  
   14000c182:	imul   ebp,DWORD PTR [rbp+0x73],0x656b6f54
   14000c189:	outs   dx,BYTE PTR ds:[rsi]
   14000c18a:	xor    ch,BYTE PTR [rax]
   14000c18c:	sub    DWORD PTR [rax],eax
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c192:	rex.XB jb 0x14000c1fa
   14000c195:	(bad)  
   14000c196:	je     0x14000c1fd
   14000c198:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c19a:	jae    0x14000c210
   14000c19c:	(bad)  
   14000c19d:	outs   dx,BYTE PTR ds:[rsi]
   14000c19e:	movsxd esp,DWORD PTR [rbp+0x20]
   14000c1a1:	sub    BYTE PTR [rbx+0x4c],al
   14000c1a4:	push   rbx
   14000c1a5:	rex.WB
   14000c1a6:	rex.R pop rdi
   14000c1a8:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14000c1aa:	outs   dx,DWORD PTR ds:[rsi]
   14000c1ab:	ja     0x14000c21b
   14000c1ad:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000c1af:	ins    BYTE PTR es:[rdi],dx
   14000c1b0:	fs gs jb 0x14000c201
   14000c1b4:	(bad)  
   14000c1b5:	outs   dx,BYTE PTR ds:[rsi]
   14000c1b6:	(bad)  
   14000c1b7:	addr32 gs jb 0x14000c1e4
   14000c1bb:	and    BYTE PTR [rsi+0x61],ah
   14000c1be:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
   14000c1c6:	rex.WB jae 0x14000c21f
   14000c1c9:	(bad)  
   14000c1ca:	ins    BYTE PTR es:[rdi],dx
   14000c1cb:	imul   esp,DWORD PTR [rbp+rcx*2+0x73],0x4c637374
   14000c1d3:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c1d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	ins    DWORD PTR es:[rdi],dx
   14000c1e1:	add    BYTE PTR [rbx+0x0],dh
   14000c1e4:	je     0x14000c1e6
   14000c1e6:	jae    0x14000c1e8
   14000c1e8:	movsxd eax,DWORD PTR [rax]
   14000c1ea:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c1ee:	js     0x14000c1f0
   14000c1f0:	add    BYTE PTR gs:[rax],al
   14000c1f3:	add    BYTE PTR [rax],al
   14000c1f5:	add    BYTE PTR [rax],al
   14000c1f7:	add    BYTE PTR [rbx+0x74],dl
   14000c1fa:	jb     0x14000c265
   14000c1fc:	outs   dx,BYTE PTR ds:[rsi]
   14000c1fd:	rex.XB movsxd ebp,DWORD PTR [r8d+0x43]
   14000c202:	outs   dx,DWORD PTR ds:[rsi]
   14000c203:	jo     0x14000c27e
   14000c205:	rex.WRX and BYTE PTR [rax],r13b
   14000c208:	ja     0x14000c27d
   14000c20a:	jp     0x14000c252
   14000c20c:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x29687461
   14000c214:	and    BYTE PTR [rsi+0x61],ah
   14000c217:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
   14000c21f:	rex.WB jae 0x14000c278
   14000c222:	(bad)  
   14000c223:	ins    BYTE PTR es:[rdi],dx
   14000c224:	imul   esp,DWORD PTR [rbp+rcx*2+0x73],0x4c637374
   14000c22c:	outs   dx,DWORD PTR ds:[rsi]
   14000c22d:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c230:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000c237:	add    BYTE PTR [rdi+0x65],al
   14000c23a:	je     0x14000c285
   14000c23c:	and    BYTE PTR fs:[rsi+0x61],ah
   14000c240:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
   14000c248:	rex.WB jae 0x14000c2a1
   14000c24b:	(bad)  
   14000c24c:	ins    BYTE PTR es:[rdi],dx
   14000c24d:	imul   esp,DWORD PTR [rbp+rcx*2+0x73],0x4c637374
   14000c255:	outs   dx,DWORD PTR ds:[rsi]
   14000c256:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c259:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000c260:	rex.WRB add BYTE PTR [r11+0x0],r14b
   14000c264:	movsxd eax,DWORD PTR [rax]
   14000c266:	outs   dx,DWORD PTR ds:[rsi]
   14000c267:	add    BYTE PTR [rdx+0x0],dh
   14000c26a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000c26e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000c273:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c277:	add    BYTE PTR [rip+0x2f00],ch        # 0x14000f17d
   14000c27d:	add    BYTE PTR [rax],al
   14000c27f:	add    BYTE PTR [rbp+0x0],dl
   14000c282:	outs   dx,BYTE PTR ds:[rsi]
   14000c283:	add    BYTE PTR [rdx+0x0],dh
   14000c286:	add    BYTE PTR gs:[rdi+0x0],ah
   14000c28a:	push   rbx
   14000c28b:	add    BYTE PTR [rbp+0x0],ah
   14000c28e:	jb     0x14000c290
   14000c290:	jbe    0x14000c292
   14000c292:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	push   rdx
   14000c299:	add    BYTE PTR [rbp+0x0],ah
   14000c29c:	add    BYTE PTR [ebx+0x0],dl
   14000c2a0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c2a4:	jbe    0x14000c2a6
   14000c2a6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c2aa:	add    BYTE PTR [rax],al
   14000c2ac:	add    BYTE PTR [rax],al
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	rex.RX add DWORD PTR [rax],r8d
   14000c2b3:	add    BYTE PTR [rax],al
   14000c2b5:	add    BYTE PTR [rax],al
   14000c2b7:	add    al,al
   14000c2b9:	add    BYTE PTR [rax],al
   14000c2bb:	add    BYTE PTR [rax],al
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	rex.RX adc r12b,BYTE PTR [rbp+0x1e]
   14000c2c3:	push   rbx
   14000c2c4:	mov    edi,0x804bd22c
   14000c2c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c2ca:	(bad)  [rdx]
   14000c2cc:	jno    0x14000c331
   14000c2ce:	push   0xffffffffffffff9a
   14000c2d0:	movabs ds:0x8f429ddda5efea49,al
   14000c2d9:	rex.X mov bl,0x3b
   14000c2dc:	movabs ds:0x2e01248c3c4,al
   14000c2e5:	add    BYTE PTR [rax],al
   14000c2e7:	add    al,al
   14000c2e9:	add    BYTE PTR [rax],al
   14000c2eb:	add    BYTE PTR [rax],al
   14000c2ed:	add    BYTE PTR [rax],al
   14000c2ef:	rex.RX pop rsp
   14000c2f1:	add    BYTE PTR [rdx+0x0],dl
   14000c2f4:	add    BYTE PTR gs:[rcx+0x0],dh
   14000c2f8:	jne    0x14000c2fa
   14000c2fa:	imul   eax,DWORD PTR [rax],0x650072
   14000c300:	add    BYTE PTR fs:[rax],ah
   14000c303:	add    BYTE PTR [rbx+0x0],al
   14000c306:	(bad)  
   14000c307:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c30b:	add    BYTE PTR [rdi+0x0],ah
   14000c30e:	outs   dx,DWORD PTR ds:[rsi]
   14000c30f:	add    BYTE PTR [rdx+0x0],dh
   14000c312:	imul   eax,DWORD PTR [rax],0x730065
	...
   14000c320:	add    BYTE PTR [r8+r8*1+0x53],cl
   14000c325:	add    BYTE PTR [rcx+0x0],cl
   14000c328:	add    BYTE PTR [rax+rax*1+0x0],r11b
   14000c32d:	add    BYTE PTR [rax],al
   14000c32f:	add    BYTE PTR [rax+rax*1+0x49],bl
   14000c333:	add    BYTE PTR [rbp+0x0],ch
   14000c336:	jo     0x14000c338
   14000c338:	ins    BYTE PTR es:[rdi],dx
   14000c339:	add    BYTE PTR [rbp+0x0],ah
   14000c33c:	ins    DWORD PTR es:[rdi],dx
   14000c33d:	add    BYTE PTR [rbp+0x0],ah
   14000c340:	outs   dx,BYTE PTR ds:[rsi]
   14000c341:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c345:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000c349:	add    BYTE PTR [rbx+0x0],al
   14000c34c:	(bad)  
   14000c34d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c351:	add    BYTE PTR [rdi+0x0],ah
   14000c354:	outs   dx,DWORD PTR ds:[rsi]
   14000c355:	add    BYTE PTR [rdx+0x0],dh
   14000c358:	imul   eax,DWORD PTR [rax],0x730065
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	add    BYTE PTR cs:[rax+rax*1+0x6c],dh
   14000c365:	add    BYTE PTR [rdx+0x0],ah
	...
   14000c370:	add    DWORD PTR [rax],eax
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	add    BYTE PTR [rax],al
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	rol    BYTE PTR [rax],0x0
   14000c37b:	add    BYTE PTR [rax],al
   14000c37d:	add    BYTE PTR [rax],al
   14000c37f:	rex.RX jo 0x14000c345
   14000c382:	add    BYTE PTR [rax+0x1],al
	...
   14000c38d:	add    BYTE PTR [rax],al
   14000c38f:	add    BYTE PTR [rcx],al
	...
   14000c3ad:	add    BYTE PTR [rax],al
   14000c3af:	add    BYTE PTR [rdx-0x28],dh
   14000c3b2:	loop   0x14000c33f
   14000c3b4:	stos   BYTE PTR es:[rdi],al
   14000c3b5:	xchg   BYTE PTR [rdi+0x4d],al
   14000c3b8:	mov    bh,0x76
   14000c3ba:	xor    cl,ah
   14000c3bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c3bd:	or     al,0x70
   14000c3bf:	sbb    BYTE PTR [rdx-0x42],cl
   14000c3c2:	in     al,dx
   14000c3c3:	sbb    edx,DWORD PTR [rsi+rdx*8+0x3b]
   14000c3c7:	rex.X scas eax,DWORD PTR es:[rdi]
   14000c3c9:	jmp    0x14000c389
   14000c3cb:	lea    edx,[rbx+0x2c]
   14000c3ce:	adc    eax,esi
   14000c3d0:	movabs ds:0x8f429ddda5efea49,al
   14000c3d9:	rex.X mov dl,0x3b
   14000c3dc:	xchg   edx,eax
   14000c3dd:	(bad)
   14000c3e1:	add    al,0x2
   14000c3e3:	add    BYTE PTR [rax],al
   14000c3e5:	add    BYTE PTR [rax],al
   14000c3e7:	add    al,al
   14000c3e9:	add    BYTE PTR [rax],al
   14000c3eb:	add    BYTE PTR [rax],al
   14000c3ed:	add    BYTE PTR [rax],al
   14000c3ef:	add    DWORD PTR [rdx+r8*1],r8d
   14000c3f3:	add    BYTE PTR [rax],al
   14000c3f5:	add    BYTE PTR [rax],al
   14000c3f7:	add    al,al
   14000c3f9:	add    BYTE PTR [rax],al
   14000c3fb:	add    BYTE PTR [rax],al
   14000c3fd:	add    BYTE PTR [rax],al
   14000c3ff:	rex.RX cmp al,0x0
   14000c402:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000c406:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   14000c40b:	add    BYTE PTR [rax],al
   14000c40d:	add    BYTE PTR [rax],al
   14000c40f:	add    BYTE PTR [rsi+0x0],cl
   14000c412:	push   rbp
   14000c413:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   14000c41f:	add    BYTE PTR [rsi-0x52b0e204],ah
   14000c425:	cmp    ah,cl
   14000c427:	rex.W test BYTE PTR [rsi],al
   14000c42a:	rex.WXB ret 0x501a
   14000c42e:	sbb    eax,0x7664417c
   14000c433:	(bad)  
   14000c434:	jo     0x14000c49f
   14000c436:	xor    esi,DWORD PTR [rdx]
   14000c438:	cs fs ins BYTE PTR es:[rdi],dx
   14000c43b:	ins    BYTE PTR es:[rdi],dx
   14000c43c:	add    BYTE PTR [rax],al
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	rex.RB jbe 0x14000c4a8
   14000c443:	outs   dx,BYTE PTR ds:[rsi]
   14000c444:	je     0x14000c487
   14000c446:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000c44a:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6e6f4364
   14000c452:	je     0x14000c4c6
   14000c454:	outs   dx,DWORD PTR ds:[rsi]
   14000c455:	ins    BYTE PTR es:[rdi],dx
   14000c456:	add    BYTE PTR [rax],al
   14000c458:	sar    BYTE PTR [rdx],1
   14000c45a:	mov    ecx,DWORD PTR [rsi+0x6239754a]
   14000c460:	(bad)  
   14000c461:	sub    al,0xe7
   14000c463:	sti    
   14000c464:	(bad)  
   14000c466:	mov    ebp,0x3a0c1e27
   14000c46b:	mov    ah,0x3f
   14000c46d:	mov    dh,0x91
   14000c46f:	rex.RX mov sil,0x8f
   14000c472:	int    0x80
   14000c474:	jp     0x14000c4bb
   14000c476:	fiadd  DWORD PTR [rcx]
	...
   14000c480:	(bad)
   14000c484:	add    DWORD PTR [rax],eax
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	sbb    BYTE PTR [rax],al
   14000c48a:	add    BYTE PTR [rax],al
   14000c48c:	add    BYTE PTR [rax],al
   14000c48e:	add    BYTE PTR [rax],al
   14000c490:	add    DWORD PTR [rax],eax
   14000c492:	add    BYTE PTR [rax],al
   14000c494:	add    BYTE PTR [rax],al
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	xor    ch,al
   14000c49a:	add    BYTE PTR [rax+0x1],al
   14000c49d:	add    BYTE PTR [rax],al
   14000c49f:	add    BYTE PTR [rax],bl
   14000c4a1:	add    BYTE PTR [rax],al
   14000c4a3:	add    BYTE PTR [rax],al
   14000c4a5:	add    BYTE PTR [rax],al
   14000c4a7:	add    BYTE PTR [rcx],al
   14000c4a9:	add    BYTE PTR [rax],al
   14000c4ab:	add    BYTE PTR [rax],al
   14000c4ad:	add    BYTE PTR [rax],al
   14000c4af:	add    BYTE PTR [rax],ah
   14000c4b1:	(bad)
   14000c4b4:	add    DWORD PTR [rax],eax
   14000c4b6:	add    BYTE PTR [rax],al
   14000c4b8:	sbb    BYTE PTR [rax],al
   14000c4ba:	add    BYTE PTR [rax],al
   14000c4bc:	add    BYTE PTR [rax],al
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	add    DWORD PTR [rax],eax
   14000c4c2:	add    BYTE PTR [rax],al
   14000c4c4:	add    BYTE PTR [rax],al
   14000c4c6:	add    BYTE PTR [rax],al
   14000c4c8:	adc    ch,al
   14000c4ca:	add    BYTE PTR [rax+0x1],al
   14000c4cd:	add    BYTE PTR [rax],al
   14000c4cf:	add    BYTE PTR [rax],bl
   14000c4d1:	add    BYTE PTR [rax],al
   14000c4d3:	add    BYTE PTR [rax],al
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	add    BYTE PTR [rcx],al
   14000c4d9:	add    BYTE PTR [rax],al
   14000c4db:	add    BYTE PTR [rax],al
   14000c4dd:	add    BYTE PTR [rax],al
   14000c4df:	add    BYTE PTR [rax+0x14000c8],cl
   14000c4e5:	add    BYTE PTR [rax],al
   14000c4e7:	add    BYTE PTR [rax],bl
   14000c4e9:	add    BYTE PTR [rax],al
   14000c4eb:	add    BYTE PTR [rax],al
   14000c4ed:	add    BYTE PTR [rax],al
   14000c4ef:	add    BYTE PTR [rcx],al
	...
   14000c50d:	add    BYTE PTR [rax],al
   14000c50f:	add    BYTE PTR [rdi-0x33],ah
   14000c512:	cld    
   14000c513:	repz xchg edi,ebp
   14000c516:	adc    al,0x49
   14000c518:	xor    DWORD PTR [rax-0x220bf527],0x4
   14000c51f:	mov    ebx,0xf3fccd68
   14000c524:	xchg   edi,ebp
   14000c526:	adc    eax,0xd9b18349
   14000c52b:	or     dh,ah
   14000c52d:	fld    QWORD PTR [rbx+rdi*4]
   14000c530:	cmp    BYTE PTR [rbp+rbp*8-0x2d],bh
   14000c534:	xchg   ebx,eax
   14000c535:	inc    al
   14000c537:	xchg   DWORD PTR [r11],r12d
   14000c53a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c53b:	sbb    bh,BYTE PTR [rip+0x7705ef21]        # 0x1b706b462
   14000c541:	sbb    BYTE PTR [rax],bl
   14000c543:	movabs al,ds:0xb76ea2ac4f70ef90
   14000c54c:	(bad)
   14000c550:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000c554:	add    BYTE PTR fs:[rbp+0x0],dh
   14000c558:	ins    BYTE PTR es:[rdi],dx
   14000c559:	add    BYTE PTR [rbp+0x0],ah
   14000c55c:	add    BYTE PTR [rax],al
   14000c55e:	add    BYTE PTR [rax],al
   14000c560:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000c564:	add    BYTE PTR fs:[rbp+0x0],dh
   14000c568:	ins    BYTE PTR es:[rdi],dx
   14000c569:	add    BYTE PTR [rbp+0x0],ah
   14000c56c:	pop    rdi
   14000c56d:	add    BYTE PTR [rdx+0x0],dl
   14000c570:	(bad)  
   14000c571:	add    BYTE PTR [rdi+0x0],dh
   14000c574:	add    BYTE PTR [rax],al
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	push   rdx
   14000c579:	add    BYTE PTR [rbp+0x0],al
   14000c57c:	rex.RXB add BYTE PTR [r9+0x0],r9b
   14000c580:	push   rbx
   14000c581:	add    BYTE PTR [rax+rax*1+0x52],dl
   14000c585:	add    BYTE PTR [rcx+0x0],bl
	...
   14000c590:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c594:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   14000c5a0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c5a4:	rex.XB add BYTE PTR [r13+0x0],dl
	...
   14000c5b0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c5b4:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   14000c5c0:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c5c4:	push   rbp
   14000c5c5:	add    BYTE PTR [rax],al
   14000c5c7:	add    BYTE PTR [rax+0x0],cl
   14000c5ca:	rex.WXB add BYTE PTR [r8+0x0],dl
   14000c5ce:	add    BYTE PTR [rax],r8b
   14000c5d1:	add    BYTE PTR [rax],al
   14000c5d3:	add    BYTE PTR [rax],al
   14000c5d5:	add    BYTE PTR [rax],al
   14000c5d7:	add    BYTE PTR [rax+0x0],cl
   14000c5da:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   14000c5e7:	add    BYTE PTR [rax+0x0],cl
   14000c5ea:	rex.WXB add BYTE PTR [r11+0x0],al
   14000c5ee:	rex.XB add BYTE PTR [r8],al
   14000c5f1:	add    BYTE PTR [rax],al
   14000c5f3:	add    BYTE PTR [rax],al
   14000c5f5:	add    BYTE PTR [rax],al
   14000c5f7:	add    BYTE PTR [rax+0x0],cl
   14000c5fa:	rex.WXB add BYTE PTR [r13+0x0],al
   14000c5fe:	pop    rcx
   14000c5ff:	add    BYTE PTR [rdi+0x0],bl
   14000c602:	add    BYTE PTR [r8+r8*1+0x41],cl
   14000c607:	add    BYTE PTR [rbx+0x0],dl
   14000c60a:	push   rbx
   14000c60b:	add    BYTE PTR [rbp+0x0],al
   14000c60e:	push   rbx
   14000c60f:	add    BYTE PTR [rdi+0x0],bl
   14000c612:	push   rdx
   14000c613:	add    BYTE PTR [rdi+0x0],cl
   14000c616:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   14000c61b:	add    BYTE PTR [rax],al
   14000c61d:	add    BYTE PTR [rax],al
   14000c61f:	add    BYTE PTR [rax+0x0],cl
   14000c622:	rex.WXB add BYTE PTR [r13+0x0],al
   14000c626:	pop    rcx
   14000c627:	add    BYTE PTR [rdi+0x0],bl
   14000c62a:	rex.XB add BYTE PTR [r13+0x0],dl
   14000c62e:	push   rdx
   14000c62f:	add    BYTE PTR [rdx+0x0],dl
   14000c632:	add    BYTE PTR [r14+0x0],r9b
   14000c636:	push   rsp
   14000c637:	add    BYTE PTR [rdi+0x0],bl
   14000c63a:	push   rbp
   14000c63b:	add    BYTE PTR [rbx+0x0],dl
   14000c63e:	add    BYTE PTR [r10+0x0],r10b
   14000c642:	add    BYTE PTR [rax],al
   14000c644:	add    BYTE PTR [rax],al
   14000c646:	add    BYTE PTR [rax],al
   14000c648:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c64c:	add    BYTE PTR [r9+0x0],r11b
   14000c650:	pop    rdi
   14000c651:	add    BYTE PTR [rax+rax*1+0x4f],cl
   14000c655:	add    BYTE PTR [rbx+0x0],al
   14000c658:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000c65d:	add    BYTE PTR [rbp+0x0],cl
   14000c660:	add    BYTE PTR [r11+0x0],al
   14000c664:	rex.W add BYTE PTR [rcx+0x0],cl
   14000c668:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000c66c:	add    BYTE PTR [rax],al
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c674:	add    BYTE PTR [r9+0x0],r11b
   14000c678:	pop    rdi
   14000c679:	add    BYTE PTR [rbp+0x0],dl
   14000c67c:	push   rbx
   14000c67d:	add    BYTE PTR [rbp+0x0],al
   14000c680:	push   rdx
   14000c681:	add    BYTE PTR [rbx+0x0],dl
   14000c684:	add    BYTE PTR [rax],al
   14000c686:	add    BYTE PTR [rax],al
   14000c688:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c68c:	add    BYTE PTR [r9+0x0],r11b
   14000c690:	pop    rdi
   14000c691:	add    BYTE PTR [rax+0x0],dl
   14000c694:	add    BYTE PTR [r10+0x0],r10b
   14000c698:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000c69c:	push   rdx
   14000c69d:	add    BYTE PTR [rbp+0x0],cl
   14000c6a0:	add    BYTE PTR [r14+0x0],cl
   14000c6a4:	rex.XB add BYTE PTR [r13+0x0],al
   14000c6a8:	pop    rdi
   14000c6a9:	add    BYTE PTR [rax+rax*1+0x41],al
   14000c6ad:	add    BYTE PTR [rax+rax*1+0x41],dl
   14000c6b1:	add    BYTE PTR [rax],al
   14000c6b3:	add    BYTE PTR [rax],al
   14000c6b5:	add    BYTE PTR [rax],al
   14000c6b7:	add    BYTE PTR [rax+0x0],cl
   14000c6ba:	rex.WXB add BYTE PTR [r13+0x0],al
   14000c6be:	pop    rcx
   14000c6bf:	add    BYTE PTR [rdi+0x0],bl
   14000c6c2:	add    BYTE PTR [rcx+0x0],r11b
   14000c6c6:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000c6ca:	add    BYTE PTR [rcx+0x0],r8b
   14000c6ce:	push   rsp
   14000c6cf:	add    BYTE PTR [rcx+0x0],al
   14000c6d2:	add    BYTE PTR [rax],al
   14000c6d4:	add    BYTE PTR [rax],al
   14000c6d6:	add    BYTE PTR [rax],al
   14000c6d8:	rex.W add BYTE PTR [rbx+0x0],cl
   14000c6dc:	add    BYTE PTR [r9+0x0],r11b
   14000c6e0:	pop    rdi
   14000c6e1:	add    BYTE PTR [rbx+0x0],al
   14000c6e4:	push   rbp
   14000c6e5:	add    BYTE PTR [rdx+0x0],dl
   14000c6e8:	push   rdx
   14000c6e9:	add    BYTE PTR [rbp+0x0],al
   14000c6ec:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   14000c6f1:	add    BYTE PTR [rbx+0x0],al
   14000c6f4:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c6f8:	rex.RX add BYTE PTR [rcx+0x0],r9b
   14000c6fc:	rex.RXB add BYTE PTR [r8],r8b
   14000c6ff:	add    BYTE PTR [rax+0x14000c5],dl
   14000c705:	add    BYTE PTR [rax],al
   14000c707:	add    BYTE PTR [rax],al
   14000c709:	add    BYTE PTR [rax],al
   14000c70b:	cmp    bh,0xff
   14000c70e:	(bad)  
   14000c70f:	jmp    QWORD PTR [rax+0x14000c5]
   14000c715:	add    BYTE PTR [rax],al
   14000c717:	add    BYTE PTR [rcx],al
   14000c719:	add    BYTE PTR [rax],al
   14000c71b:	cmp    bh,0xff
   14000c71e:	(bad)  
   14000c71f:	push   QWORD PTR [rax+0x14000c5]
   14000c725:	add    BYTE PTR [rax],al
   14000c727:	add    BYTE PTR [rdx],al
   14000c729:	add    BYTE PTR [rax],al
   14000c72b:	cmp    bh,0xff
   14000c72e:	(bad)  
   14000c72f:	inc    eax
   14000c731:	(bad)
   14000c734:	add    DWORD PTR [rax],eax
   14000c736:	add    BYTE PTR [rax],al
   14000c738:	add    eax,DWORD PTR [rax]
   14000c73a:	add    BYTE PTR [rax-0x1],al
   14000c740:	enter  0xc5,0x40
   14000c744:	add    DWORD PTR [rax],eax
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	add    al,0x0
   14000c74a:	add    BYTE PTR [rax-0x1],al
   14000c750:	fadd   st,st(5)
   14000c752:	add    BYTE PTR [rax+0x1],al
   14000c755:	add    BYTE PTR [rax],al
   14000c757:	add    BYTE PTR [rsi],al
   14000c759:	add    BYTE PTR [rax],al
   14000c75b:	cmp    bh,0xff
   14000c75e:	(bad)  
   14000c75f:	(bad)  
   14000c760:	call   0x14140c82a
   14000c765:	add    BYTE PTR [rax],al
   14000c767:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f80c76d
   14000c76d:	(bad)  
   14000c76e:	(bad)  
   14000c76f:	(bad)  
   14000c770:	clc    
   14000c771:	(bad)
   14000c774:	add    DWORD PTR [rax],eax
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	add    BYTE PTR [rax],al
   14000c77a:	add    BYTE PTR [rax-0x1],al
   14000c780:	and    dh,al
   14000c782:	add    BYTE PTR [rax+0x1],al
   14000c785:	add    BYTE PTR [rax],al
   14000c787:	add    BYTE PTR [rcx],al
   14000c789:	add    BYTE PTR [rax],al
   14000c78b:	cmp    bh,0xff
   14000c78e:	(bad)  
   14000c78f:	dec    DWORD PTR [rax-0x3a]
   14000c792:	add    BYTE PTR [rax+0x1],al
   14000c795:	add    BYTE PTR [rax],al
   14000c797:	add    BYTE PTR [rdx],al
   14000c799:	add    BYTE PTR [rax],al
   14000c79b:	cmp    bh,0xff
   14000c79e:	(bad)  
   14000c79f:	push   QWORD PTR [rax-0x3a]
   14000c7a2:	add    BYTE PTR [rax+0x1],al
   14000c7a5:	add    BYTE PTR [rax],al
   14000c7a7:	add    BYTE PTR [rbx],al
   14000c7a9:	add    BYTE PTR [rax],al
   14000c7ab:	cmp    bh,0xff
   14000c7ae:	(bad)  
   14000c7af:	dec    DWORD PTR [rax+0x14000c6]
   14000c7b5:	add    BYTE PTR [rax],al
   14000c7b7:	add    BYTE PTR [rax+rax*1],al
   14000c7ba:	add    BYTE PTR [rax-0x1],al
   14000c7c0:	mov    eax,0x14000c6
   14000c7c5:	add    BYTE PTR [rax],al
   14000c7c7:	add    BYTE PTR [rsi],al
   14000c7c9:	add    BYTE PTR [rax],al
   14000c7cb:	cmp    bh,0xff
   14000c7ce:	(bad)  
   14000c7cf:	(bad)  
   14000c7d0:	fadd   st,st(6)
   14000c7d2:	add    BYTE PTR [rax+0x1],al
   14000c7d5:	add    BYTE PTR [rax],al
   14000c7d7:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f80c7dd
   14000c7dd:	(bad)  
   14000c7de:	(bad)  
   14000c7df:	inc    DWORD PTR [rcx+0x0]
   14000c7e2:	push   rax
   14000c7e3:	add    BYTE PTR [rcx+0x0],cl
   14000c7e6:	sub    eax,0x53004d00
   14000c7eb:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a9011ef1
   14000c7f1:	add    BYTE PTR [rsi+0x0],ch
   14000c7f4:	sub    eax,0x6f004300
   14000c7f9:	add    BYTE PTR [rdx+0x0],dh
   14000c7fc:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af011403
   14000c803:	add    BYTE PTR [rbx+0x0],ah
   14000c806:	(bad)  
   14000c807:	add    BYTE PTR [rax+rax*1+0x52],ch
   14000c80b:	add    BYTE PTR [rbp+0x0],ah
   14000c80e:	add    BYTE PTR [ecx+0x0],ch
   14000c812:	jae    0x14000c814
   14000c814:	je     0x14000c816
   14000c816:	jb     0x14000c818
   14000c818:	jns    0x14000c81a
   14000c81a:	sub    eax,0x31004c00
   14000c81f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00f925
   14000c825:	add    BYTE PTR [rax],dh
   14000c827:	add    BYTE PTR [rsi],ch
   14000c829:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000c82d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c831:	add    BYTE PTR [rax],al
   14000c833:	add    BYTE PTR [rax],al
   14000c835:	add    BYTE PTR [rax],al
   14000c837:	add    BYTE PTR [rdx+0x65],dl
   14000c83a:	addr32 rex.R
   14000c83c:	gs ins BYTE PTR es:[rdi],dx
   14000c83e:	gs je  0x14000c8a6
   14000c841:	rex.WXB
   14000c842:	gs jns 0x14000c88a
   14000c845:	js     0x14000c89e
   14000c847:	add    BYTE PTR [rcx+0x0],ah
   14000c84a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000c84e:	(bad)  
   14000c84f:	add    BYTE PTR [rax+0x0],dh
   14000c852:	imul   eax,DWORD PTR [rax],0x320033
   14000c858:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000c85d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000c861:	add    BYTE PTR [rax],al
   14000c863:	add    BYTE PTR [rax],al
   14000c865:	add    BYTE PTR [rax],al
   14000c867:	add    BYTE PTR [rdx+0x65],dl
   14000c86a:	addr32 rex.R
   14000c86c:	gs ins BYTE PTR es:[rdi],dx
   14000c86e:	gs je  0x14000c8d6
   14000c871:	rex.WXB
   14000c872:	gs jns 0x14000c8cc
   14000c875:	add    BYTE PTR [rax],al
   14000c877:	add    BYTE PTR [rcx+0x0],al
   14000c87a:	push   rax
   14000c87b:	add    BYTE PTR [rax+0x0],dl
   14000c87e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000c883:	add    BYTE PTR [rax],al
   14000c885:	add    BYTE PTR [rax],al
   14000c887:	add    BYTE PTR [rax],al
   14000c889:	add    al,0x2
   14000c88b:	add    BYTE PTR [rax],al
   14000c88d:	add    BYTE PTR [rax],al
   14000c88f:	add    al,al
   14000c891:	add    BYTE PTR [rax],al
   14000c893:	add    BYTE PTR [rax],al
   14000c895:	add    BYTE PTR [rax],al
   14000c897:	rex.RX add BYTE PTR [rax],r8b
   14000c89a:	add    BYTE PTR [rax],al
   14000c89c:	add    BYTE PTR [rax],al
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	rol    BYTE PTR [rax],0x0
   14000c8a3:	add    BYTE PTR [rax],al
   14000c8a5:	add    BYTE PTR [rax],al
   14000c8a7:	rex.RX iret 
   14000c8a9:	mov    BYTE PTR [rcx-0x4],bl
   14000c8ac:	push   0x6d
   14000c8ae:	adc    cl,BYTE PTR [rax-0x53]
   14000c8b1:	fldcw  WORD PTR [rip+0x34474fde]        # 0x174481895
   14000c8b7:	outs   dx,DWORD PTR ds:[rsi]
   14000c8b8:	ja     0x14000c8d2
   14000c8ba:	sbb    BYTE PTR [rax+0x4f70ef90],ah
   14000c8c0:	lods   al,BYTE PTR ds:[rsi]
   14000c8c1:	movabs ds:0x7c38ef37c54bb76e,al
   14000c8ca:	in     eax,dx
   14000c8cb:	rcl    DWORD PTR [rbx-0x78ba3f02],cl
   14000c8d1:	and    esp,DWORD PTR [rsi-0x10dec2e6]
   14000c8d7:	add    eax,0xf3fccd68
   14000c8dc:	xchg   edi,ebp
   14000c8de:	adc    eax,0xd9b18349
   14000c8e3:	or     dh,ah
   14000c8e5:	fld    QWORD PTR [rbx+rdi*4]
   14000c8e8:	addr32 int 0xfc
   14000c8eb:	repz xchg edi,ebp
   14000c8ee:	adc    al,0x49
   14000c8f0:	xor    DWORD PTR [rax-0x220bf527],0x4
   14000c8f7:	mov    ebx,0x394c3de0
   14000c8fc:	outs   dx,DWORD PTR ds:[rsi]
   14000c8fd:	cmp    al,0xd2
   14000c8ff:	adc    DWORD PTR [rcx+0x4fc0007b],eax
   14000c905:	jns    0x14000c981
   14000c907:	mov    bh,0x0
	...
   14000c91d:	add    BYTE PTR [rax],al
   14000c91f:	add    al,al
   14000c921:	add    BYTE PTR [rax],al
   14000c923:	add    BYTE PTR [rax],al
   14000c925:	add    BYTE PTR [rax],al
   14000c927:	rex.RX xor dil,r8b
   14000c92a:	lock rex.WRB popf 
   14000c92d:	(bad)  
   14000c92f:	rex.WX xchg rcx,rax
   14000c931:	push   rbx
   14000c932:	stos   BYTE PTR es:[rdi],al
   14000c933:	imul   eax,DWORD PTR [rdx-0x4fa58617],0x31
   14000c93a:	push   rdx
   14000c93b:	(bad)  
   14000c93c:	icebp  
   14000c93d:	mov    dl,0x57
   14000c93f:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c941:	(bad)  
   14000c942:	test   al,0xe7
   14000c944:	(bad)  
   14000c945:	(bad)  
   14000c946:	jge    0x14000c96f
   14000c948:	ja     0x14000c998
   14000c94a:	rcr    DWORD PTR [rdx],0xe7
   14000c94d:	add    bl,BYTE PTR [rbp+0x4e]
   14000c950:	mov    bh,0x44
   14000c952:	cs mov cl,0xae
   14000c955:	push   rcx
   14000c956:	cwde   
   14000c957:	mov    bh,0x5
   14000c959:	loopne 0x14000c95d
   14000c95b:	add    BYTE PTR [rax],al
   14000c95d:	add    BYTE PTR [rax],al
   14000c95f:	add    al,al
   14000c961:	add    BYTE PTR [rax],al
   14000c963:	add    BYTE PTR [rax],al
   14000c965:	add    BYTE PTR [rax],al
   14000c967:	(bad)
   14000c96d:	outs   dx,DWORD PTR ds:[rsi]
   14000c96e:	ins    DWORD PTR es:[rdi],dx
   14000c96f:	ins    DWORD PTR es:[rdi],dx
   14000c970:	(bad)  
   14000c971:	outs   dx,BYTE PTR ds:[rsi]
   14000c972:	imul   r13,QWORD PTR fs:[rsi+0x65],0x74736200
   14000c97b:	jb     0x14000c9cf
   14000c97d:	rex.R push rax
   14000c97f:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
   14000c988:	jae    0x14000c9eb
   14000c98a:	push   rax
   14000c98b:	(bad)  
   14000c98c:	jb     0x14000c9ef
   14000c98e:	ins    DWORD PTR es:[rdi],dx
   14000c98f:	jae    0x14000c9bf
   14000c991:	rex.XB jb 0x14000c9f9
   14000c994:	(bad)  
   14000c995:	je     0x14000c9fc
   14000c997:	and    BYTE PTR [rsi+0x61],ah
   14000c99a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x61500021
   14000c9a2:	jb     0x14000ca05
   14000c9a4:	ins    DWORD PTR es:[rdi],dx
   14000c9a5:	jae    0x14000c9d5
   14000c9a7:	push   rbx
   14000c9a8:	gs je  0x14000c9ec
   14000c9ab:	je     0x14000c9cd
   14000c9ad:	data16 (bad) 
   14000c9af:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000c9b7:	add    BYTE PTR [rbx+0x6f],al
   14000c9ba:	rex.XB jb 0x14000ca22
   14000c9bd:	(bad)  
   14000c9be:	je     0x14000ca25
   14000c9c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c9c2:	jae    0x14000ca38
   14000c9c4:	(bad)  
   14000c9c5:	outs   dx,BYTE PTR ds:[rsi]
   14000c9c6:	movsxd esp,DWORD PTR [rbp+0x20]
   14000c9c9:	data16 (bad) 
   14000c9cb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000c9d3:	add    BYTE PTR [rax],al
   14000c9d5:	add    BYTE PTR [rax],al
   14000c9d7:	add    BYTE PTR [rbx+0x70],dh
   14000c9da:	push   rdi
   14000c9db:	outs   dx,DWORD PTR ds:[rsi]
   14000c9dc:	jb     0x14000ca49
   14000c9de:	jae    0x14000ca50
   14000c9e0:	(bad)  
   14000c9e1:	movsxd esp,DWORD PTR [rbp+0x2d]
   14000c9e4:	ds rex.RXB
   14000c9e6:	gs je  0x14000ca39
   14000c9e9:	jb     0x14000ca5a
   14000c9eb:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c9ee:	jae    0x14000ca39
   14000c9f0:	and    BYTE PTR fs:[rsi+0x61],ah
   14000c9f4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000c9fc:	add    BYTE PTR [rax],al
   14000c9fe:	add    BYTE PTR [rax],al
   14000ca00:	rex.B ins BYTE PTR es:[rdi],dx
   14000ca02:	ins    BYTE PTR es:[rdi],dx
   14000ca03:	outs   dx,DWORD PTR ds:[rsi]
   14000ca04:	ja     0x14000ca59
   14000ca06:	gs je  0x14000ca4f
   14000ca09:	outs   dx,DWORD PTR ds:[rsi]
   14000ca0a:	jb     0x14000ca71
   14000ca0c:	addr32 jb 0x14000ca7e
   14000ca0f:	jne    0x14000ca7f
   14000ca11:	fs push rdi
   14000ca13:	imul   ebp,DWORD PTR [rsi+0x64],0x6620776f
   14000ca1a:	(bad)  
   14000ca1b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000ca23:	add    BYTE PTR [rax],al
   14000ca25:	add    BYTE PTR [rax],al
   14000ca27:	add    BYTE PTR [rbx+0x70],dh
   14000ca2a:	push   rdi
   14000ca2b:	outs   dx,DWORD PTR ds:[rsi]
   14000ca2c:	jb     0x14000ca99
   14000ca2e:	jae    0x14000caa0
   14000ca30:	(bad)  
   14000ca31:	movsxd esp,DWORD PTR [rbp+0x2d]
   14000ca34:	ds push rbx
   14000ca36:	je     0x14000ca99
   14000ca38:	jb     0x14000caae
   14000ca3a:	push   rdx
   14000ca3b:	gs ins DWORD PTR es:[rdi],dx
   14000ca3d:	outs   dx,DWORD PTR ds:[rsi]
   14000ca3e:	je     0x14000caa5
   14000ca40:	rex.B jo 0x14000cab3
   14000ca43:	ins    BYTE PTR es:[rdi],dx
   14000ca44:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000ca4b:	and    BYTE PTR [rsi+0x61],ah
   14000ca4e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000ca56:	add    BYTE PTR [rax],al
   14000ca58:	jae    0x14000caca
   14000ca5a:	push   rdx
   14000ca5b:	gs ins DWORD PTR es:[rdi],dx
   14000ca5d:	outs   dx,DWORD PTR ds:[rsi]
   14000ca5e:	je     0x14000cac5
   14000ca60:	rex.R
   14000ca61:	gs jae 0x14000cacf
   14000ca64:	je     0x14000cad5
   14000ca66:	jo     0x14000caab
   14000ca68:	ins    BYTE PTR es:[rdi],dx
   14000ca69:	imul   esp,DWORD PTR [rbp+0x6e],0x473e2d74
   14000ca70:	gs je  0x14000cac3
   14000ca73:	jb     0x14000cae4
   14000ca75:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ca78:	jae    0x14000cac3
   14000ca7a:	and    BYTE PTR fs:[rsi+0x61],ah
   14000ca7e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000ca86:	add    BYTE PTR [rax],al
   14000ca88:	jae    0x14000cafa
   14000ca8a:	push   rdx
   14000ca8b:	gs ins DWORD PTR es:[rdi],dx
   14000ca8d:	outs   dx,DWORD PTR ds:[rsi]
   14000ca8e:	je     0x14000caf5
   14000ca90:	rex.R
   14000ca91:	gs jae 0x14000caff
   14000ca94:	je     0x14000cb05
   14000ca96:	jo     0x14000cadb
   14000ca98:	ins    BYTE PTR es:[rdi],dx
   14000ca99:	imul   esp,DWORD PTR [rbp+0x6e],0x533e2d74
   14000caa0:	je     0x14000cb03
   14000caa2:	jb     0x14000cb18
   14000caa4:	push   rdx
   14000caa5:	gs ins DWORD PTR es:[rdi],dx
   14000caa7:	outs   dx,DWORD PTR ds:[rsi]
   14000caa8:	je     0x14000cb0f
   14000caaa:	rex.B jo 0x14000cb1d
   14000caad:	ins    BYTE PTR es:[rdi],dx
   14000caae:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000cab5:	and    BYTE PTR [rsi+0x61],ah
   14000cab8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x21
   14000cac0:	iret   
   14000cac1:	xlat   BYTE PTR ds:[rbx]
   14000cac2:	fcom   DWORD PTR [rsi+0x4286783e]
   14000cac8:	or     DWORD PTR [rbx+rbp*8-0x40],0xffffffe9
   14000cacd:	pop    rdi
   14000cace:	js     0x14000cb0c
   14000cad0:	(bad)  
   14000cad1:	fnsave [rdx+0x657f53a0]
   14000cad7:	rex.WRX test QWORD PTR [rdi-0x7b],r8
   14000cadb:	sbb    DWORD PTR [rdx-0x14],edx
   14000cade:	mov    WORD PTR [rsi+0x1b462d7b],ss
   14000cae4:	fdiv   DWORD PTR [rdx+0x44]
   14000cae7:	rex.RB lods al,BYTE PTR ds:[rsi]
   14000cae9:	rcr    eax,0x4e
   14000caec:	pop    rbx
   14000caed:	(bad)  
   14000caee:	mov    dl,BYTE PTR [rcx+rbp*2]
   14000caf1:	mov    esp,0x6a1ed464
   14000caf6:	in     al,0x98
   14000caf8:	mov    ebp,0x550892fe
   14000cafd:	xchg   ecx,eax
   14000cafe:	ret    0x1efc
   14000cb01:	add    BYTE PTR [rax],al
   14000cb03:	add    BYTE PTR [rdi],bl
   14000cb05:	add    BYTE PTR [rax],al
   14000cb07:	add    ah,ah
   14000cb09:	add    al,BYTE PTR [rax]
   14000cb0b:	add    BYTE PTR [rbp+0x22000002],al
   14000cb11:	add    eax,0x41993
   14000cb16:	add    BYTE PTR [rax],al
   14000cb18:	ins    BYTE PTR es:[rdi],dx
   14000cb19:	fadd   QWORD PTR [rax]
   14000cb1b:	add    BYTE PTR [rcx],al
   14000cb1d:	add    BYTE PTR [rax],al
   14000cb1f:	add    BYTE PTR [rsp+rbx*8+0xa0000],cl
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	rcr    ah,0x0
   14000cb2b:	add    BYTE PTR [rax+0x0],bl
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	add    BYTE PTR [rax],al
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	add    DWORD PTR [rax],eax
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	and    al,BYTE PTR [rip+0x21993]        # 0x14002e4d1
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	lock fild DWORD PTR [rax]
	...
   14000cb4b:	add    BYTE PTR [rip+0x0],al        # 0x14000cb51
   14000cb51:	fadd   QWORD PTR [rax]
   14000cb53:	add    al,cl
   14000cb55:	add    BYTE PTR [rax],al
   14000cb57:	add    BYTE PTR [rax],al
   14000cb59:	add    BYTE PTR [rax],al
   14000cb5b:	add    BYTE PTR [rcx],al
   14000cb5d:	add    BYTE PTR [rax],al
   14000cb5f:	add    BYTE PTR [rdx],ah
   14000cb61:	add    eax,0x61993
   14000cb66:	add    BYTE PTR [rax],al
   14000cb68:	mov    esp,0x20000da
   14000cb6d:	add    BYTE PTR [rax],al
   14000cb6f:	add    ah,ch
   14000cb71:	fiadd  DWORD PTR [rax]
   14000cb73:	add    BYTE PTR [rdx],cl
   14000cb75:	add    BYTE PTR [rax],al
   14000cb77:	add    BYTE PTR [rax-0x25],al
   14000cb7a:	add    BYTE PTR [rax],al
   14000cb7c:	js     0x14000cb7e
   14000cb7e:	add    BYTE PTR [rax],al
   14000cb80:	add    BYTE PTR [rax],al
   14000cb82:	add    BYTE PTR [rax],al
   14000cb84:	add    DWORD PTR [rax],eax
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	and    al,BYTE PTR [rip+0x21993]        # 0x14002e521
   14000cb8e:	add    BYTE PTR [rax],al
   14000cb90:	rex.W fiadd DWORD PTR [rax]
	...
   14000cb9b:	add    BYTE PTR [rip+0x58000000],al        # 0x19800cba1
   14000cba1:	fiadd  DWORD PTR [rax]
   14000cba3:	add    BYTE PTR [rax],bh
   14000cba5:	add    BYTE PTR [rax],al
   14000cba7:	add    BYTE PTR [rax],al
   14000cba9:	add    BYTE PTR [rax],al
   14000cbab:	add    BYTE PTR [rcx],al
   14000cbad:	add    BYTE PTR [rax],al
   14000cbaf:	add    BYTE PTR [rdx],ah
   14000cbb1:	add    eax,0x11993
   14000cbb6:	add    BYTE PTR [rax],al
   14000cbb8:	loopne 0x14000cb93
	...
   14000cbc2:	add    BYTE PTR [rax],al
   14000cbc4:	add    eax,DWORD PTR [rax]
   14000cbc6:	add    BYTE PTR [rax],al
   14000cbc8:	call   0x16000cca6
   14000cbcd:	add    BYTE PTR [rax],al
   14000cbcf:	add    BYTE PTR [rax],al
   14000cbd1:	add    BYTE PTR [rax],al
   14000cbd3:	add    BYTE PTR [rcx],al
   14000cbd5:	add    BYTE PTR [rax],al
   14000cbd7:	add    BYTE PTR [rdx],ah
   14000cbd9:	add    eax,0x61993
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	in     al,dx
   14000cbe1:	fadd   DWORD PTR [rax]
   14000cbe3:	add    BYTE PTR [rdx],al
   14000cbe5:	add    BYTE PTR [rax],al
   14000cbe7:	add    BYTE PTR [rcx+rbx*8],bl
   14000cbea:	add    BYTE PTR [rax],al
   14000cbec:	or     al,BYTE PTR [rax]
   14000cbee:	add    BYTE PTR [rax],al
   14000cbf0:	jo     0x14000cbcb
   14000cbf2:	add    BYTE PTR [rax],al
   14000cbf4:	push   rax
   14000cbf5:	add    BYTE PTR [rax],al
   14000cbf7:	add    BYTE PTR [rax],al
   14000cbf9:	add    BYTE PTR [rax],al
   14000cbfb:	add    BYTE PTR [rcx],al
   14000cbfd:	add    BYTE PTR [rax],al
   14000cbff:	add    BYTE PTR [rdx],ah
   14000cc01:	add    eax,0x21993
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	cwde   
   14000cc09:	fadd   DWORD PTR [rax]
	...
   14000cc13:	add    BYTE PTR [rip+0xffffffffa8000000],al        # 0xe800cc19
   14000cc19:	fadd   DWORD PTR [rax]
   14000cc1b:	add    BYTE PTR [rax],ah
   14000cc1d:	add    BYTE PTR [rax],al
   14000cc1f:	add    BYTE PTR [rax],al
   14000cc21:	add    BYTE PTR [rax],al
   14000cc23:	add    BYTE PTR [rcx],al
   14000cc25:	add    BYTE PTR [rax],al
   14000cc27:	add    BYTE PTR [rdx],ah
   14000cc29:	add    eax,0x11993
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	fadd   DWORD PTR fs:[rax]
	...
   14000cc3b:	add    BYTE PTR [rbx],al
   14000cc3d:	add    BYTE PTR [rax],al
   14000cc3f:	add    BYTE PTR [rax-0x28],dh
   14000cc42:	add    BYTE PTR [rax],al
   14000cc44:	and    BYTE PTR [rax],al
   14000cc46:	add    BYTE PTR [rax],al
   14000cc48:	add    BYTE PTR [rax],al
   14000cc4a:	add    BYTE PTR [rax],al
   14000cc4c:	add    DWORD PTR [rax],eax
   14000cc4e:	add    BYTE PTR [rax],al
   14000cc50:	and    al,BYTE PTR [rip+0x41993]        # 0x14004e5e9
   14000cc56:	add    BYTE PTR [rax],al
   14000cc58:	test   bh,dl
	...
   14000cc62:	add    BYTE PTR [rax],al
   14000cc64:	or     DWORD PTR [rax],eax
   14000cc66:	add    BYTE PTR [rax],al
   14000cc68:	mov    al,0xd7
   14000cc6a:	add    BYTE PTR [rax],al
   14000cc6c:	(bad)  
   14000cc6d:	add    BYTE PTR [rax],al
   14000cc6f:	add    BYTE PTR [rax],al
   14000cc71:	add    BYTE PTR [rax],al
   14000cc73:	add    BYTE PTR [rcx],al
   14000cc75:	add    BYTE PTR [rax],al
   14000cc77:	add    BYTE PTR [rdx],ah
   14000cc79:	add    eax,0x41993
   14000cc7e:	add    BYTE PTR [rax],al
   14000cc80:	mov    esp,0x10000d6
   14000cc85:	add    BYTE PTR [rax],al
   14000cc87:	add    ah,bl
   14000cc89:	(bad)  
   14000cc8a:	add    BYTE PTR [rax],al
   14000cc8c:	or     BYTE PTR [rax],al
   14000cc8e:	add    BYTE PTR [rax],al
   14000cc90:	adc    bh,dl
   14000cc92:	add    BYTE PTR [rax],al
   14000cc94:	xor    BYTE PTR [rax],al
   14000cc96:	add    BYTE PTR [rax],al
   14000cc98:	add    BYTE PTR [rax],al
   14000cc9a:	add    BYTE PTR [rax],al
   14000cc9c:	add    DWORD PTR [rax],eax
   14000cc9e:	add    BYTE PTR [rax],al
   14000cca0:	and    al,BYTE PTR [rip+0x21993]        # 0x14002e639
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	sbb    al,0xd3
   14000ccaa:	add    BYTE PTR [rax],al
   14000ccac:	add    DWORD PTR [rax],eax
   14000ccae:	add    BYTE PTR [rax],al
   14000ccb0:	xor    al,0xd6
   14000ccb2:	add    BYTE PTR [rax],al
   14000ccb4:	add    al,0x0
   14000ccb6:	add    BYTE PTR [rax],al
   14000ccb8:	(bad)  
   14000ccb9:	(bad)  
   14000ccba:	add    BYTE PTR [rax],al
   14000ccbc:	and    BYTE PTR [rax],al
   14000ccbe:	add    BYTE PTR [rax],al
   14000ccc0:	add    BYTE PTR [rax],al
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	add    DWORD PTR [rax],eax
   14000ccc6:	add    BYTE PTR [rax],al
   14000ccc8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002e661
   14000ccce:	add    BYTE PTR [rax],al
   14000ccd0:	sbb    al,0xd3
   14000ccd2:	add    BYTE PTR [rax],al
   14000ccd4:	add    DWORD PTR [rax],eax
   14000ccd6:	add    BYTE PTR [rax],al
   14000ccd8:	adc    ch,dl
   14000ccda:	add    BYTE PTR [rax],al
   14000ccdc:	add    al,0x0
   14000ccde:	add    BYTE PTR [rax],al
   14000cce0:	cmp    ch,dl
   14000cce2:	add    BYTE PTR [rax],al
   14000cce4:	and    BYTE PTR [rax],al
   14000cce6:	add    BYTE PTR [rax],al
   14000cce8:	add    BYTE PTR [rax],al
   14000ccea:	add    BYTE PTR [rax],al
   14000ccec:	add    DWORD PTR [rax],eax
   14000ccee:	add    BYTE PTR [rax],al
   14000ccf0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001e689
   14000ccf6:	add    BYTE PTR [rax],al
   14000ccf8:	fcom   st(4)
	...
   14000cd02:	add    BYTE PTR [rax],al
   14000cd04:	add    eax,DWORD PTR [rax]
   14000cd06:	add    BYTE PTR [rax],al
   14000cd08:	loopne 0x14000ccde
   14000cd0a:	add    BYTE PTR [rax],al
   14000cd0c:	and    BYTE PTR [rax],al
   14000cd0e:	add    BYTE PTR [rax],al
   14000cd10:	add    BYTE PTR [rax],al
   14000cd12:	add    BYTE PTR [rax],al
   14000cd14:	add    DWORD PTR [rax],eax
   14000cd16:	add    BYTE PTR [rax],al
   14000cd18:	and    al,BYTE PTR [rip+0x41993]        # 0x14004e6b1
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	sbb    al,0xd4
   14000cd22:	add    BYTE PTR [rax],al
   14000cd24:	add    DWORD PTR [rax],eax
   14000cd26:	add    BYTE PTR [rax],al
   14000cd28:	cmp    al,0xd4
   14000cd2a:	add    BYTE PTR [rax],al
   14000cd2c:	or     BYTE PTR [rax],al
   14000cd2e:	add    BYTE PTR [rax],al
   14000cd30:	jo     0x14000cd06
   14000cd32:	add    BYTE PTR [rax],al
   14000cd34:	and    BYTE PTR [rax],al
   14000cd36:	add    BYTE PTR [rax],al
   14000cd38:	add    BYTE PTR [rax],al
   14000cd3a:	add    BYTE PTR [rax],al
   14000cd3c:	add    DWORD PTR [rax],eax
   14000cd3e:	add    BYTE PTR [rax],al
   14000cd40:	and    al,BYTE PTR [rip+0x21993]        # 0x14002e6d9
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	sbb    al,0xd3
   14000cd4a:	add    BYTE PTR [rax],al
   14000cd4c:	add    DWORD PTR [rax],eax
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	sub    al,0xd3
   14000cd52:	add    BYTE PTR [rax],al
   14000cd54:	add    al,0x0
   14000cd56:	add    BYTE PTR [rax],al
   14000cd58:	pop    rax
   14000cd59:	rol    DWORD PTR [rax],cl
   14000cd5b:	add    BYTE PTR [rax],ch
   14000cd5d:	add    BYTE PTR [rax],al
   14000cd5f:	add    BYTE PTR [rax],al
   14000cd61:	add    BYTE PTR [rax],al
   14000cd63:	add    BYTE PTR [rcx],al
   14000cd65:	add    BYTE PTR [rax],al
   14000cd67:	add    BYTE PTR [rdx],ah
   14000cd69:	add    eax,0x21993
   14000cd6e:	add    BYTE PTR [rax],al
   14000cd70:	mov    ah,0xd2
	...
   14000cd7a:	add    BYTE PTR [rax],al
   14000cd7c:	add    eax,0xc8000000
   14000cd81:	rol    BYTE PTR [rax],cl
   14000cd83:	add    BYTE PTR [rax+0x0],al
   14000cd86:	add    BYTE PTR [rax],al
   14000cd88:	add    BYTE PTR [rax],al
   14000cd8a:	add    BYTE PTR [rax],al
   14000cd8c:	add    DWORD PTR [rax],eax
   14000cd8e:	add    BYTE PTR [rax],al
   14000cd90:	add    BYTE PTR [rax],al
   14000cd92:	add    BYTE PTR [rax],al
   14000cd94:	push   rcx
   14000cd95:	cmp    BYTE PTR [rdi+0x55],bl
   14000cd9b:	add    BYTE PTR [rdx],al
   14000cd9d:	add    BYTE PTR [rax],al
   14000cd9f:	add    BYTE PTR [rip+0xffffffff90000000],ah        # 0xd000cda5
   14000cda5:	(bad)  
   14000cda6:	add    BYTE PTR [rax],al
   14000cda8:	nop
   14000cda9:	rol    BYTE PTR [rax],0x0
   14000cdac:	add    BYTE PTR [rax],al
   14000cdae:	add    BYTE PTR [rax],al
   14000cdb0:	push   rcx
   14000cdb1:	cmp    BYTE PTR [rdi+0x55],bl
   14000cdb7:	add    BYTE PTR [rip+0xffffffff84000000],cl        # 0xc400cdbd
   14000cdbd:	add    al,BYTE PTR [rax]
   14000cdbf:	add    ah,cl
   14000cdc1:	(bad)  
   14000cdc2:	add    BYTE PTR [rax],al
   14000cdc4:	int3   
   14000cdc5:	rol    BYTE PTR [rax],0x0
	...
   14000cdf0:	movabs al,ds:0x0
	...
   14000ce45:	add    BYTE PTR [rax],al
   14000ce47:	add    BYTE PTR [rax],ah
   14000ce49:	lock add BYTE PTR [rax+0x1],al
	...
   14000ce5d:	add    BYTE PTR [rax],al
   14000ce5f:	add    BYTE PTR [rax],bl
   14000ce61:	mov    ah,0x0
   14000ce63:	rex add DWORD PTR [rax],eax
   14000ce66:	add    BYTE PTR [rax],al
   14000ce68:	and    BYTE PTR [rax+rax*1+0x140],dh
   14000ce6f:	add    BYTE PTR [rax+0x14000b4],al
   14000ce75:	add    BYTE PTR [rax],al
   14000ce77:	add    BYTE PTR [rax+0x0],al
   14000ce7d:	add    BYTE PTR [rax],al
   14000ce7f:	add    BYTE PTR [rax],al
   14000ce81:	xor    eax,0x0
	...
   14000ce8e:	add    BYTE PTR [rax],al
   14000ce90:	push   rdx
   14000ce91:	push   rbx
   14000ce92:	rex.R push rbx
   14000ce94:	sub    DWORD PTR [rbx+0x7d29ce4a],ebp
   14000ce9a:	mov    dh,0x40
   14000ce9c:	mov    bh,0xdb
   14000ce9e:	sub    DWORD PTR [rax-0x2e4f40f6],ebx
   14000cea4:	add    DWORD PTR [rax],eax
   14000cea6:	add    BYTE PTR [rax],al
   14000cea8:	push   rsp
   14000cea9:	push   rbx
   14000ceaa:	push   rdi
   14000ceab:	(bad)  
   14000ceac:	push   rax
   14000cead:	jb     0x14000cf27
   14000ceaf:	jns    0x14000cedf
   14000ceb1:	jo     0x14000cf17
   14000ceb3:	(bad)  
	...
   14000cecc:	rex.RXB
   14000cecd:	rex.XB push r12
   14000cecf:	rex.WR add BYTE PTR [rax],r10b
   14000ced2:	add    BYTE PTR [rax],al
   14000ced4:	fiadd  DWORD PTR [rdx]
   14000ced6:	add    BYTE PTR [rax],al
   14000ced8:	cs je  0x14000cf40
   14000cedb:	js     0x14000cf51
   14000cedd:	and    al,0x64
   14000cedf:	imul   eax,DWORD PTR [rax],0xe0000000
   14000cee5:	adc    al,BYTE PTR [rax]
   14000cee7:	add    BYTE PTR [rsp+rdx*4],ch
   14000ceea:	add    BYTE PTR [rax],al
   14000ceec:	cs je  0x14000cf54
   14000ceef:	js     0x14000cf65
   14000cef1:	and    al,0x6d
   14000cef3:	outs   dx,BYTE PTR ds:[rsi]
   14000cef4:	add    BYTE PTR [rax],al
   14000cef6:	add    BYTE PTR [rax],al
   14000cef8:	adc    BYTE PTR [rdi+0x7d0000],ah
   14000cefe:	add    BYTE PTR [rax],al
   14000cf00:	cs je  0x14000cf68
   14000cf03:	js     0x14000cf79
   14000cf05:	and    al,0x6d
   14000cf07:	outs   dx,BYTE PTR ds:[rsi]
   14000cf08:	and    al,0x30
   14000cf0a:	xor    BYTE PTR [rax],al
   14000cf0c:	nop
   14000cf0d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cf0e:	add    BYTE PTR [rax],al
   14000cf10:	add    BYTE PTR [rax+rax*1],al
   14000cf13:	add    BYTE PTR [rsi],ch
   14000cf15:	je     0x14000cf7c
   14000cf17:	js     0x14000cf8d
   14000cf19:	and    al,0x78
   14000cf1b:	add    BYTE PTR [rax+0x1a0000ab],dl
   14000cf21:	add    al,BYTE PTR [rax]
   14000cf23:	add    BYTE PTR [rsi],ch
   14000cf25:	je     0x14000cf8c
   14000cf27:	js     0x14000cf9d
   14000cf29:	and    al,0x79
   14000cf2b:	add    BYTE PTR fs:[rax],al
   14000cf2e:	add    BYTE PTR [rax],al
   14000cf30:	add    BYTE PTR [rax+0x4180000],dh
   14000cf36:	add    BYTE PTR [rax],al
   14000cf38:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000cf41:	add    BYTE PTR [rax],al
   14000cf43:	add    BYTE PTR [rax],bl
   14000cf45:	mov    ah,0x0
   14000cf47:	add    BYTE PTR [rax],dl
   14000cf49:	add    BYTE PTR [rax],al
   14000cf4b:	add    BYTE PTR [rsi],ch
   14000cf4d:	xor    BYTE PTR [rax],dh
   14000cf4f:	movsxd esp,DWORD PTR [rsi+0x67]
   14000cf52:	add    BYTE PTR [rax],al
   14000cf54:	sub    BYTE PTR [rax+rax*1+0x800],dh
   14000cf5b:	add    BYTE PTR [rsi],ch
   14000cf5d:	rex.XB push r10
   14000cf5f:	push   rsp
   14000cf60:	and    al,0x58
   14000cf62:	rex.XB
   14000cf63:	add    BYTE PTR [r8],al
   14000cf66:	add    BYTE PTR [rax],al
   14000cf68:	xor    BYTE PTR [rax+rax*1+0x800],dh
   14000cf6f:	add    BYTE PTR [rsi],ch
   14000cf71:	rex.XB push r10
   14000cf73:	push   rsp
   14000cf74:	and    al,0x58
   14000cf76:	rex.XB
   14000cf77:	rex.B
   14000cf78:	add    BYTE PTR [r8],al
   14000cf7b:	add    BYTE PTR [rax],bh
   14000cf7d:	mov    ah,0x0
   14000cf7f:	add    BYTE PTR [rax],bl
   14000cf81:	add    BYTE PTR [rax],al
   14000cf83:	add    BYTE PTR [rsi],ch
   14000cf85:	rex.XB push r10
   14000cf87:	push   rsp
   14000cf88:	and    al,0x58
   14000cf8a:	rex.XB
   14000cf8b:	rex.WR add BYTE PTR [rax],r8b
   14000cf8e:	add    BYTE PTR [rax],al
   14000cf90:	push   rax
   14000cf91:	mov    ah,0x0
   14000cf93:	add    BYTE PTR [rax],cl
   14000cf95:	add    BYTE PTR [rax],al
   14000cf97:	add    BYTE PTR [rsi],ch
   14000cf99:	rex.XB push r10
   14000cf9b:	push   rsp
   14000cf9c:	and    al,0x58
   14000cf9e:	rex.XB push r13
   14000cfa0:	add    BYTE PTR [rax],al
   14000cfa2:	add    BYTE PTR [rax],al
   14000cfa4:	pop    rax
   14000cfa5:	mov    ah,0x0
   14000cfa7:	add    BYTE PTR [rax],cl
   14000cfa9:	add    BYTE PTR [rax],al
   14000cfab:	add    BYTE PTR [rsi],ch
   14000cfad:	rex.XB push r10
   14000cfaf:	push   rsp
   14000cfb0:	and    al,0x58
   14000cfb2:	rex.XB pop r10
   14000cfb4:	add    BYTE PTR [rax],al
   14000cfb6:	add    BYTE PTR [rax],al
   14000cfb8:	(bad)  
   14000cfb9:	mov    ah,0x0
   14000cfbb:	add    BYTE PTR [rax],cl
   14000cfbd:	add    BYTE PTR [rax],al
   14000cfbf:	add    BYTE PTR [rsi],ch
   14000cfc1:	rex.XB push r10
   14000cfc3:	push   rsp
   14000cfc4:	and    al,0x58
   14000cfc6:	rex.WB
   14000cfc7:	add    BYTE PTR [r8],al
   14000cfca:	add    BYTE PTR [rax],al
   14000cfcc:	push   0x80000b4
   14000cfd1:	add    BYTE PTR [rax],al
   14000cfd3:	add    BYTE PTR [rsi],ch
   14000cfd5:	rex.XB push r10
   14000cfd7:	push   rsp
   14000cfd8:	and    al,0x58
   14000cfda:	rex.WB
   14000cfdb:	rex.B
   14000cfdc:	add    BYTE PTR [r8],al
   14000cfdf:	add    BYTE PTR [rax-0x4c],dh
   14000cfe2:	add    BYTE PTR [rax],al
   14000cfe4:	or     BYTE PTR [rax],al
   14000cfe6:	add    BYTE PTR [rax],al
   14000cfe8:	cs rex.XB push r10
   14000cfeb:	push   rsp
   14000cfec:	and    al,0x58
   14000cfee:	rex.WB pop r9
   14000cff0:	add    BYTE PTR [rax],al
   14000cff2:	add    BYTE PTR [rax],al
   14000cff4:	js     0x14000cfaa
   14000cff6:	add    BYTE PTR [rax],al
   14000cff8:	or     BYTE PTR [rax],al
   14000cffa:	add    BYTE PTR [rax],al
   14000cffc:	cs rex.XB push r10
   14000cfff:	push   rsp
   14000d000:	and    al,0x58
   14000d002:	rex.WB pop r10
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	xor    BYTE PTR [rax+rax*1+0x20000],0x0
   14000d010:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000d019:	add    BYTE PTR [rax],al
   14000d01b:	add    BYTE PTR [rax+0x100000b6],al
   14000d021:	sbb    BYTE PTR [rax],al
   14000d023:	add    BYTE PTR [rsi],ch
   14000d025:	jb     0x14000d08b
   14000d027:	(bad)  
   14000d028:	je     0x14000d08b
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	nop
   14000d02d:	(bad)  
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	rol    BYTE PTR [rdx],0x0
   14000d033:	add    BYTE PTR [rsi],ch
   14000d035:	jb     0x14000d09b
   14000d037:	(bad)  
   14000d038:	je     0x14000d09b
   14000d03a:	and    al,0x7a
   14000d03c:	jp     0x14000d0b8
   14000d03e:	fs (bad) 
   14000d040:	add    BYTE PTR [eax],al
   14000d043:	add    BYTE PTR [rax-0x2f],dl
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	mov    BYTE PTR [rip+0x782e0000],cl        # 0x1b82ed04e
   14000d04e:	fs (bad) 
   14000d050:	je     0x14000d0b3
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	fcomp  st(6)
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	fadd   QWORD PTR [rax]
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	cs js  0x14000d0c3
   14000d05f:	(bad)  
   14000d060:	je     0x14000d0c3
   14000d062:	and    al,0x78
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	mov    eax,0x80000df
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    BYTE PTR [rcx+0x54],al
   14000d072:	rex.WR and al,0x5f
   14000d075:	pop    rdi
   14000d076:	(bad)  
   14000d077:	add    al,al
   14000d079:	fild   WORD PTR [rax]
   14000d07b:	add    BYTE PTR [rax],cl
   14000d07d:	add    BYTE PTR [rax],al
   14000d07f:	add    BYTE PTR [rcx+0x54],al
   14000d082:	rex.WR and al,0x5f
   14000d085:	pop    rdi
   14000d086:	ins    DWORD PTR es:[rdi],dx
   14000d087:	add    al,cl
   14000d089:	fild   WORD PTR [rax]
   14000d08b:	add    BYTE PTR [rax],cl
   14000d08d:	add    BYTE PTR [rax],al
   14000d08f:	add    BYTE PTR [rcx+0x54],al
   14000d092:	rex.WR and al,0x5f
   14000d095:	pop    rdi
   14000d096:	jp     0x14000d098
   14000d098:	rcr    bh,1
   14000d09a:	add    BYTE PTR [rax],al
   14000d09c:	movabs al,ds:0x746164692e000000
   14000d0a5:	(bad)  
   14000d0a6:	and    al,0x32
   14000d0a8:	add    BYTE PTR [rax],al
   14000d0aa:	add    BYTE PTR [rax],al
   14000d0ac:	jo     0x14000d08e
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	adc    al,0x0
   14000d0b2:	add    BYTE PTR [rax],al
   14000d0b4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000d0bd:	add    BYTE PTR [rax],al
   14000d0bf:	add    BYTE PTR [rax+0x180000e0],cl
   14000d0c5:	add    al,0x0
   14000d0c7:	add    BYTE PTR [rsi],ch
   14000d0c9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000d0d1:	add    BYTE PTR [rax],al
   14000d0d3:	add    BYTE PTR [rax-0xbffff1c],ah
   14000d0d9:	(bad)  
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000d0e5:	add    BYTE PTR [rax],al
   14000d0e7:	add    BYTE PTR [rax],al
   14000d0e9:	lock add BYTE PTR [rax],al
   14000d0ec:	jo     0x14000d0ef
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	cs fs (bad) 
   14000d0f3:	je     0x14000d156
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rax-0xf],dh
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	jo     0x14000d0fe
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	cs fs (bad) 
   14000d103:	je     0x14000d166
   14000d105:	and    al,0x72
   14000d107:	add    al,ah
   14000d109:	icebp  
   14000d10a:	add    BYTE PTR [rax],al
   14000d10c:	push   rax
   14000d10d:	or     BYTE PTR [rax],al
   14000d10f:	add    BYTE PTR [rsi],ch
   14000d111:	(bad)  
   14000d113:	jae    0x14000d115
   14000d115:	add    BYTE PTR [rax],al
   14000d117:	add    BYTE PTR [rax],al
   14000d119:	add    BYTE PTR [rcx],al
   14000d11b:	add    BYTE PTR [rax+0x7],dl
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	cs jo  0x14000d187
   14000d123:	(bad)  
   14000d124:	je     0x14000d187
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	add    BYTE PTR [rax],dl
   14000d12a:	add    DWORD PTR [rax],eax
   14000d12c:	test   BYTE PTR [rcx],al
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	cs jb  0x14000d1a6
   14000d133:	jb     0x14000d198
   14000d135:	and    al,0x30
   14000d137:	xor    DWORD PTR [rax],eax
   14000d139:	add    BYTE PTR [rax],al
   14000d13b:	add    BYTE PTR [rax+0x8000111],dl
   14000d141:	sub    BYTE PTR [rax],al
   14000d143:	add    BYTE PTR [rsi],ch
   14000d145:	jb     0x14000d1ba
   14000d147:	jb     0x14000d1ac
   14000d149:	and    al,0x30
   14000d14b:	xor    al,BYTE PTR [rax]
   14000d14d:	add    BYTE PTR [rax],al
   14000d14f:	add    BYTE PTR [rcx],al
   14000d151:	or     eax,DWORD PTR [rcx]
   14000d153:	add    BYTE PTR [rbx],cl
   14000d155:	movabs ds:0x10e00020e010000,al
   14000d15e:	adc    eax,DWORD PTR [rax]
   14000d160:	add    DWORD PTR [rcx],ecx
   14000d162:	add    DWORD PTR [rax],eax
   14000d164:	or     edx,eax
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	add    DWORD PTR [rdi],ecx
   14000d16a:	(bad)  
   14000d16b:	add    BYTE PTR [rdi],cl
   14000d16d:	fs (bad) 
   14000d16f:	add    BYTE PTR [rdi],cl
   14000d171:	xor    al,0x6
   14000d173:	add    BYTE PTR [rdi],cl
   14000d175:	xor    cl,BYTE PTR [rbx]
   14000d177:	jo     0x14000d17a
   14000d179:	or     al,BYTE PTR [rax+rax*1]
   14000d17c:	or     dh,BYTE PTR [rsi+rax*1]
   14000d17f:	add    BYTE PTR [rdx],cl
   14000d181:	xor    al,BYTE PTR [rsi]
   14000d183:	jo     0x14000d186
   14000d185:	adc    al,0x8
   14000d187:	add    BYTE PTR [rsp+riz*2],dl
   14000d18a:	or     BYTE PTR [rax],al
   14000d18c:	adc    al,0x54
   14000d18e:	(bad)  
   14000d18f:	add    BYTE PTR [rsp+rsi*1],dl
   14000d192:	(bad)  
   14000d193:	add    BYTE PTR [rdx+rsi*1],dl
   14000d196:	adc    BYTE PTR [rax+0x1],dh
   14000d199:	adc    al,0x8
   14000d19b:	add    BYTE PTR [rsp+riz*2],dl
   14000d19e:	adc    BYTE PTR [rax],al
   14000d1a0:	adc    al,0x54
   14000d1a2:	lldt   WORD PTR [rsp+rsi*1]
   14000d1a6:	(bad)  
   14000d1a7:	add    BYTE PTR [rdx+rsi*4],dl
   14000d1aa:	adc    BYTE PTR [rax+0x1],dh
   14000d1ad:	clts   
   14000d1af:	add    BYTE PTR [rdi],cl
   14000d1b1:	or     DWORD PTR fs:[rax],eax
   14000d1b4:	sysenter 
   14000d1b6:	or     BYTE PTR [rax],al
   14000d1b8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000d1bb:	jo     0x14000d1be
   14000d1bd:	sbb    BYTE PTR [rdx],cl
   14000d1bf:	add    BYTE PTR [rax],bl
   14000d1c1:	fs (bad) 
   14000d1c3:	add    BYTE PTR [rax],bl
   14000d1c5:	push   rsp
   14000d1c6:	or     eax,0xc341800
   14000d1cb:	add    BYTE PTR [rax],bl
   14000d1cd:	jb     0x14000d1e3
   14000d1cf:	lock adc ah,al
   14000d1d2:	adc    BYTE PTR [rax+0x1],dh
   14000d1d5:	sbb    cl,BYTE PTR [rdx]
   14000d1d7:	add    BYTE PTR [rdx],bl
   14000d1d9:	xor    al,0x12
   14000d1db:	add    BYTE PTR [rdx],bl
   14000d1dd:	xchg   edx,eax
   14000d1de:	(bad)  
   14000d1df:	lock adc al,0xe0
   14000d1e2:	adc    dl,al
   14000d1e4:	adc    al,al
   14000d1e6:	(bad)  
   14000d1e7:	jo     0x14000d1f6
   14000d1e9:	(bad)  
   14000d1ea:	or     al,0x50
   14000d1ec:	add    DWORD PTR [rsi],ebx
   14000d1ee:	or     al,BYTE PTR [rax]
   14000d1f0:	(bad)  
   14000d1f1:	xor    al,0x16
   14000d1f3:	add    BYTE PTR [rsi],bl
   14000d1f5:	rcr    BYTE PTR [rdx],cl
   14000d1f7:	lock sbb al,ah
   14000d1fa:	(bad)  
   14000d1fb:	rcl    BYTE PTR [rax+rax*8],1
   14000d1fe:	adc    dh,BYTE PTR [rax+0x11]
   14000d201:	(bad)  
   14000d202:	adc    BYTE PTR [rax+0x1],dl
   14000d205:	sbb    DWORD PTR [rdx],ecx
   14000d207:	add    BYTE PTR [rcx],bl
   14000d209:	je     0x14000d216
   14000d20b:	add    BYTE PTR [rcx],bl
   14000d20d:	or     al,BYTE PTR fs:[rax]
   14000d210:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000d214:	sbb    DWORD PTR [rax+rcx*1],esi
   14000d217:	add    BYTE PTR [rcx],bl
   14000d219:	push   rdx
   14000d21a:	adc    eax,0x81401e0
   14000d21f:	add    BYTE PTR [rsp+riz*2],dl
   14000d222:	or     al,BYTE PTR [rax]
   14000d224:	adc    al,0x54
   14000d226:	or     DWORD PTR [rax],eax
   14000d228:	adc    al,0x34
   14000d22a:	or     BYTE PTR [rax],al
   14000d22c:	adc    al,0x52
   14000d22e:	adc    BYTE PTR [rax+0x1],dh
   14000d231:	or     al,BYTE PTR [rax+rax*1]
   14000d234:	or     dh,BYTE PTR [rax+rcx*1]
   14000d237:	add    BYTE PTR [rdx],cl
   14000d239:	push   rdx
   14000d23a:	(bad)  
   14000d23b:	jo     0x14000d23e
   14000d23d:	(bad)  
   14000d23e:	or     DWORD PTR [rax],eax
   14000d240:	(bad)  
   14000d241:	and    BYTE PTR fs:[rax],al
   14000d244:	(bad)  
   14000d245:	push   rsp
   14000d246:	(bad)  
   14000d247:	add    BYTE PTR [rdi],dl
   14000d249:	xor    al,0x1e
   14000d24b:	add    BYTE PTR [rdi],dl
   14000d24d:	add    DWORD PTR [rax+rax*1],ebx
   14000d250:	adc    BYTE PTR [rax+0x0],dh
   14000d253:	add    BYTE PTR [rcx],al
   14000d255:	sbb    eax,0x681d000c
   14000d25a:	add    eax,0x11741900
   14000d25f:	add    BYTE PTR [rcx],bl
   14000d261:	adc    BYTE PTR fs:[rax],al
   14000d264:	sbb    DWORD PTR [rdi+rcx*1+0x0],edx
   14000d268:	sbb    DWORD PTR [rsi+rcx*1],esi
   14000d26b:	add    BYTE PTR [rcx],bl
   14000d26d:	mov    dl,0x15
   14000d26f:	loopne 0x14000d272
   14000d271:	(bad)  
   14000d272:	or     al,0x0
   14000d274:	(bad)  
   14000d275:	je     0x14000d28d
   14000d277:	add    BYTE PTR [rdi],bl
   14000d279:	fs adc eax,0x14341f00
   14000d27f:	add    BYTE PTR [rdi],bl
   14000d281:	rcr    BYTE PTR [rax],cl
   14000d283:	lock (bad) 
   14000d285:	loopne 0x14000d29b
   14000d287:	rcl    BYTE PTR [rdx],1
   14000d289:	rcl    BYTE PTR [rax],0x50
   14000d28c:	sbb    DWORD PTR [rbx],edi
   14000d28e:	or     eax,DWORD PTR [rax]
   14000d290:	sub    ah,BYTE PTR [rax+rbx*2+0x0]
   14000d294:	es xor al,0x57
   14000d297:	add    BYTE PTR [rcx],bl
   14000d299:	add    DWORD PTR [rax+0x0],edx
   14000d29c:	or     esi,eax
   14000d29e:	or     eax,esp
   14000d2a0:	(bad)  
   14000d2a1:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14050d718
   14000d2a8:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	push   0x720000cd
   14000d2b1:	add    al,BYTE PTR [rax]
   14000d2b3:	add    bh,bh
   14000d2b5:	(bad)  
   14000d2b6:	(bad)  
   14000d2b7:	call   QWORD PTR [rsi+0xa7]
   14000d2bd:	add    BYTE PTR [rax],al
   14000d2bf:	add    BYTE PTR [rdx+0xa7],ah
   14000d2c5:	add    BYTE PTR [rax],al
   14000d2c7:	add    ah,bh
   14000d2c9:	xor    eax,0xffff0000
   14000d2ce:	(bad)  
   14000d2cf:	call   FWORD PTR [rbp+0x36]
   14000d2d2:	add    BYTE PTR [rax],al
   14000d2d4:	add    BYTE PTR [rax],al
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	(bad)  
   14000d2d9:	add    BYTE PTR ss:[rax],al
   14000d2dc:	add    DWORD PTR [rax],eax
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	(bad)  
   14000d2e1:	cmp    DWORD PTR [rax],eax
   14000d2e3:	add    BYTE PTR [rax],al
   14000d2e5:	add    BYTE PTR [rax],al
   14000d2e7:	add    BYTE PTR [rax-0xffffc7],al
   14000d2ed:	(bad)  
   14000d2ee:	(bad)  
   14000d2ef:	inc    DWORD PTR [rcx]
   14000d2f1:	(bad)  
   14000d2f2:	add    al,BYTE PTR [rax]
   14000d2f4:	(bad)  
   14000d2f5:	xor    al,BYTE PTR [rdx]
   14000d2f7:	xor    BYTE PTR [rcx],al
   14000d2f9:	(bad)  
   14000d2fa:	add    DWORD PTR [rax],eax
   14000d2fc:	(bad)  
   14000d2fd:	movabs ds:0x521e000826190000,al
   14000d306:	sbb    dh,al
   14000d308:	sbb    al,ah
   14000d30a:	(bad)  
   14000d30b:	rcl    BYTE PTR [rax+rax*8],1
   14000d30e:	adc    dh,BYTE PTR [rax+0x11]
   14000d311:	(bad)  
   14000d312:	adc    BYTE PTR [rax],dh
   14000d314:	push   rsi
   14000d315:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d316:	add    BYTE PTR [rax],al
   14000d318:	rex int 0x0
   14000d31b:	add    bh,bh
   14000d31d:	(bad)  
   14000d31e:	(bad)  
   14000d31f:	inc    DWORD PTR [rax]
   14000d321:	add    BYTE PTR [rax],al
   14000d323:	add    bh,bh
   14000d325:	(bad)  
   14000d326:	(bad)  
   14000d327:	inc    DWORD PTR [rax]
	...
   14000d331:	add    BYTE PTR [rax],al
   14000d333:	add    BYTE PTR [rcx],al
   14000d335:	add    BYTE PTR [rax],al
   14000d337:	add    BYTE PTR [rcx],al
   14000d339:	add    BYTE PTR [rax],al
   14000d33b:	add    BYTE PTR [rax-0x2d],al
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	add    BYTE PTR [rax],al
	...
   14000d34b:	add    BYTE PTR [rdi+riz*4+0x380000],dh
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	add    BYTE PTR [rax],al
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	and    BYTE PTR [rdi],bh
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	(bad)  
   14000d35d:	(bad)  
   14000d35e:	(bad)  
   14000d35f:	push   QWORD PTR [rsi+0x3f]
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	add    BYTE PTR [rax],al
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	mov    ecx,0xff00003f
   14000d36d:	(bad)  
   14000d36e:	(bad)  
   14000d36f:	push   QWORD PTR [rdi+riz*4+0x0]
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	sbb    DWORD PTR [rdx],ecx
   14000d37a:	add    al,BYTE PTR [rax]
   14000d37c:	or     dh,BYTE PTR [rdx]
   14000d37e:	(bad)  
   14000d37f:	push   rax
   14000d380:	push   rsi
   14000d381:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	rex int 0x0
   14000d387:	add    BYTE PTR [rcx],bl
   14000d389:	and    DWORD PTR [rax],ecx
   14000d38b:	add    BYTE PTR [rbx],dl
   14000d38d:	xor    al,0x10
   14000d38f:	add    BYTE PTR [rbx],dl
   14000d391:	xchg   edx,eax
   14000d392:	or     al,0xf0
   14000d394:	or     ah,al
   14000d396:	or     BYTE PTR [rax+0x7],dh
   14000d399:	(bad)  
   14000d39a:	(bad)  
   14000d39b:	push   rax
   14000d39c:	enter  0xa5,0x0
   14000d3a0:	rex.W add BYTE PTR [rax],al
   14000d3a3:	add    BYTE PTR [rcx],al
   14000d3a5:	(bad)  
   14000d3a6:	(bad)  
   14000d3a7:	add    BYTE PTR [rsi],dl
   14000d3a9:	xor    al,0x12
   14000d3ab:	add    BYTE PTR [rsi],dl
   14000d3ad:	mov    dl,0x12
   14000d3af:	loopne 0x14000d3c1
   14000d3b1:	jo     0x14000d3c2
   14000d3b3:	(bad)  
   14000d3b4:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415d3c2
   14000d3ba:	or     BYTE PTR [rax],al
   14000d3bc:	adc    eax,0x15000764
   14000d3c1:	xor    al,0x6
   14000d3c3:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e0e4fb
   14000d3c9:	sbb    al,0xa
   14000d3cb:	add    BYTE PTR [rsp+riz*2],bl
   14000d3ce:	or     al,0x0
   14000d3d0:	sbb    al,0x34
   14000d3d2:	or     eax,DWORD PTR [rax]
   14000d3d4:	sbb    al,0x32
   14000d3d6:	sbb    al,dh
   14000d3d8:	(bad)  
   14000d3d9:	loopne 0x14000d3ef
   14000d3db:	rcl    BYTE PTR [rdx],1
   14000d3dd:	rcl    BYTE PTR [rax],0x70
   14000d3e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d3e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d3e2:	add    BYTE PTR [rax],al
   14000d3e4:	add    DWORD PTR [rax],eax
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	pop    rdx
   14000d3e9:	rex.RX add BYTE PTR [rax],r8b
   14000d3ec:	retf   
   14000d3ed:	rex.RX add BYTE PTR [rax],r8b
   14000d3f0:	(bad)  
   14000d3f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d3f2:	add    BYTE PTR [rax],al
   14000d3f4:	add    BYTE PTR [rax],al
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	add    DWORD PTR [rsi],eax
   14000d3fa:	add    al,BYTE PTR [rax]
   14000d3fc:	(bad)  
   14000d3fd:	xor    al,BYTE PTR [rdx]
   14000d3ff:	push   rax
   14000d400:	sbb    DWORD PTR [rsi],esp
   14000d402:	or     BYTE PTR [rax],al
   14000d404:	(bad)  
   14000d405:	push   rdx
   14000d406:	sbb    dh,al
   14000d408:	sbb    al,ah
   14000d40a:	(bad)  
   14000d40b:	rcl    BYTE PTR [rax+rax*8],1
   14000d40e:	adc    dh,BYTE PTR [rax+0x11]
   14000d411:	(bad)  
   14000d412:	adc    BYTE PTR [rax],dh
   14000d414:	push   rsi
   14000d415:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	sbb    ch,cl
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	(bad)  
   14000d41d:	(bad)  
   14000d41e:	(bad)  
   14000d41f:	inc    DWORD PTR [rax]
   14000d421:	add    BYTE PTR [rax],al
   14000d423:	add    BYTE PTR [rax],al
   14000d425:	add    BYTE PTR [rax],al
   14000d427:	add    cl,bh
   14000d429:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	add    DWORD PTR [rax],eax
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	add    eax,0xff0000a8
   14000d435:	(bad)  
   14000d436:	(bad)  
   14000d437:	inc    DWORD PTR [rax]
   14000d439:	add    BYTE PTR [rax],al
   14000d43b:	add    BYTE PTR [rax],al
   14000d43d:	add    BYTE PTR [rax],al
   14000d43f:	add    BYTE PTR [rdx],al
   14000d441:	add    BYTE PTR [rax],al
   14000d443:	add    BYTE PTR [rbx],al
   14000d445:	add    BYTE PTR [rax],al
   14000d447:	add    BYTE PTR [rcx],al
   14000d449:	add    BYTE PTR [rax],al
   14000d44b:	add    BYTE PTR [rax-0x2c],dl
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	add    BYTE PTR [rax],al
	...
   14000d45b:	add    BYTE PTR [rcx],dl
   14000d45d:	test   al,0x0
   14000d45f:	add    BYTE PTR [rax],bh
	...
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    BYTE PTR [rax],bl
   14000d471:	rex.RXB add BYTE PTR [r8],r8b
   14000d474:	(bad)  
   14000d475:	(bad)  
   14000d476:	(bad)  
   14000d477:	jmp    FWORD PTR [rdi+rax*2+0x0]
   14000d47b:	add    BYTE PTR [rax],al
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    BYTE PTR [rsi+0x47],bh
   14000d482:	add    BYTE PTR [rax],al
   14000d484:	add    DWORD PTR [rax],eax
   14000d486:	add    BYTE PTR [rax],al
   14000d488:	mov    cl,0x47
   14000d48a:	add    BYTE PTR [rax],al
   14000d48c:	add    al,BYTE PTR [rax]
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	stc    
   14000d491:	rex.RXB add BYTE PTR [r8],r8b
   14000d494:	add    DWORD PTR [rax],eax
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	inc    BYTE PTR [rdi+0x0]
   14000d49b:	add    BYTE PTR [rax],al
   14000d49d:	add    BYTE PTR [rax],al
   14000d49f:	add    BYTE PTR [rsi],al
   14000d4a1:	rex.W add BYTE PTR [rax],al
   14000d4a4:	(bad)  
   14000d4a5:	(bad)  
   14000d4a6:	(bad)  
   14000d4a7:	call   QWORD PTR [rcx]
   14000d4a9:	test   al,0x0
   14000d4ab:	add    BYTE PTR [rax],al
   14000d4ad:	add    BYTE PTR [rax],al
   14000d4af:	add    BYTE PTR [rcx],bl
   14000d4b1:	or     al,BYTE PTR [rdx]
   14000d4b3:	add    BYTE PTR [rdx],cl
   14000d4b5:	xor    al,BYTE PTR [rsi]
   14000d4b7:	push   rax
   14000d4b8:	push   rsi
   14000d4b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d4ba:	add    BYTE PTR [rax],al
   14000d4bc:	sbb    ch,cl
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	adc    DWORD PTR [rsi+rax*1],ebx
   14000d4c3:	add    BYTE PTR [rsp+riz*2],bl
   14000d4c6:	or     al,BYTE PTR [rax]
   14000d4c8:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000d4cb:	add    BYTE PTR [rdx+rdx*2],cl
   14000d4ce:	or     BYTE PTR [rax+0x56],dh
   14000d4d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d4d2:	add    BYTE PTR [rax],al
   14000d4d4:	lock int3 
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	(bad)  
   14000d4d9:	(bad)  
   14000d4da:	(bad)  
   14000d4db:	push   QWORD PTR [rdx]
   14000d4dd:	test   al,0x0
   14000d4df:	add    BYTE PTR [rax-0xffffb7],bh
   14000d4e5:	(bad)  
   14000d4e6:	(bad)  
   14000d4e7:	inc    DWORD PTR [rdx]
   14000d4e9:	rex.WX add BYTE PTR [rax],al
   14000d4ec:	add    BYTE PTR [rax],al
   14000d4ee:	add    BYTE PTR [rax],al
   14000d4f0:	xor    BYTE PTR [rdx+0x0],cl
   14000d4f3:	add    bh,bh
   14000d4f5:	(bad)  
   14000d4f6:	(bad)  
   14000d4f7:	call   FWORD PTR [rcx]
   14000d4f9:	sbb    DWORD PTR [rsi],eax
   14000d4fb:	add    BYTE PTR [rax],dl
   14000d4fd:	push   rdx
   14000d4fe:	or     al,0xf0
   14000d500:	or     ah,al
   14000d502:	or     BYTE PTR [rax+0x7],dh
   14000d505:	(bad)  
   14000d506:	(bad)  
   14000d507:	xor    BYTE PTR [rsi-0x5a],dl
   14000d50a:	add    BYTE PTR [rax],al
   14000d50c:	enter  0xcc,0x0
	...
   14000d518:	add    DWORD PTR [rax],eax
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	add    DWORD PTR [rax],eax
   14000d51e:	add    BYTE PTR [rax],al
   14000d520:	and    al,0xd5
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	add    BYTE PTR [rax],al
	...
   14000d52f:	add    BYTE PTR [rax+rbp*4+0x0],al
   14000d533:	add    BYTE PTR [rax],bh
   14000d535:	add    BYTE PTR [rax],al
   14000d537:	add    BYTE PTR [rsp+rcx*2],dh
   14000d53a:	add    BYTE PTR [rax],al
   14000d53c:	(bad)  
   14000d53d:	(bad)  
   14000d53e:	(bad)  
   14000d53f:	push   QWORD PTR [rsp+rcx*2+0x0]
   14000d543:	add    BYTE PTR [rax],al
   14000d545:	add    BYTE PTR [rax],al
   14000d547:	add    ah,ah
   14000d549:	rex.WR add BYTE PTR [rax],r8b
   14000d54c:	(bad)  
   14000d54d:	(bad)  
   14000d54e:	(bad)  
   14000d54f:	inc    DWORD PTR [rax+rbp*4+0x0]
   14000d553:	add    BYTE PTR [rax],al
   14000d555:	add    BYTE PTR [rax],al
   14000d557:	add    BYTE PTR [rcx],bl
   14000d559:	or     al,BYTE PTR [rdx]
   14000d55b:	add    BYTE PTR [rdx],cl
   14000d55d:	xor    al,BYTE PTR [rsi]
   14000d55f:	push   rax
   14000d560:	push   rsi
   14000d561:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d562:	add    BYTE PTR [rax],al
   14000d564:	enter  0xcc,0x0
   14000d568:	add    DWORD PTR [rdi],edx
   14000d56a:	(bad)  
   14000d56b:	add    BYTE PTR [rdi],dl
   14000d56d:	xor    al,0xb
   14000d56f:	add    BYTE PTR [rdi],dl
   14000d571:	push   rdx
   14000d572:	adc    esp,eax
   14000d574:	adc    DWORD PTR [rax+0x10],esi
   14000d577:	(bad)  
   14000d578:	sbb    DWORD PTR [rax],esi
   14000d57a:	or     eax,DWORD PTR [rax]
   14000d57c:	(bad)  
   14000d57d:	xor    al,0x52
   14000d57f:	add    BYTE PTR [rdi],bl
   14000d581:	add    DWORD PTR [rax+0x0],ecx
   14000d584:	adc    al,dh
   14000d586:	(bad)  
   14000d587:	loopne 0x14000d595
   14000d589:	ror    BYTE PTR [rdx],1
   14000d58b:	ror    BYTE PTR [rax],0x70
   14000d58e:	(bad)  
   14000d58f:	(bad)  
   14000d590:	(bad)  
   14000d591:	push   rax
   14000d592:	add    BYTE PTR [rax],al
   14000d594:	enter  0xa5,0x0
   14000d598:	xor    BYTE PTR [rdx],al
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	sbb    DWORD PTR [rax],esp
   14000d59e:	(bad)  
   14000d59f:	add    BYTE PTR [rsi],cl
   14000d5a1:	add    DWORD PTR [rax+rax*1+0x7],ecx
   14000d5a5:	loopne 0x14000d5ac
   14000d5a7:	jo     0x14000d5ad
   14000d5a9:	(bad)  
   14000d5aa:	add    edx,DWORD PTR [rax+0x2]
   14000d5ad:	xor    BYTE PTR [rax],al
   14000d5af:	add    al,cl
   14000d5b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d5b2:	add    BYTE PTR [rax],al
   14000d5b4:	push   rax
   14000d5b5:	add    al,BYTE PTR [rax]
   14000d5b7:	add    BYTE PTR [rcx],bl
   14000d5b9:	(bad)  
   14000d5ba:	or     DWORD PTR [rax],eax
   14000d5bc:	(bad)  
   14000d5bd:	fs push rsp
   14000d5bf:	add    BYTE PTR [rsi],bl
   14000d5c1:	xor    al,0x53
   14000d5c3:	add    BYTE PTR [rsi],bl
   14000d5c5:	add    DWORD PTR [rsi+0x0],ecx
   14000d5c8:	(bad)  
   14000d5ca:	or     eax,0x500be0
   14000d5cf:	add    al,cl
   14000d5d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d5d2:	add    BYTE PTR [rax],al
   14000d5d4:	(bad)  
   14000d5d5:	add    al,BYTE PTR [rax]
   14000d5d7:	add    BYTE PTR [rcx],al
   14000d5d9:	adc    al,0x8
   14000d5db:	add    BYTE PTR [rsp+riz*2],dl
   14000d5de:	or     al,0x0
   14000d5e0:	adc    al,0x54
   14000d5e2:	or     eax,DWORD PTR [rax]
   14000d5e4:	adc    al,0x34
   14000d5e6:	or     al,BYTE PTR [rax]
   14000d5e8:	adc    al,0x72
   14000d5ea:	adc    BYTE PTR [rax+0x1],dh
   14000d5ed:	and    BYTE PTR [rax+rax*1],cl
   14000d5f0:	and    BYTE PTR [rbp+rcx*1+0x0],ah
   14000d5f4:	and    BYTE PTR [rbx+rcx*1+0x0],dl
   14000d5f8:	and    BYTE PTR [rdx+rcx*1],dh
   14000d5fb:	add    BYTE PTR [rax],ah
   14000d5fd:	xor    bl,BYTE PTR [rax+rsi*8]
   14000d600:	sbb    ah,al
   14000d602:	sbb    al,dl
   14000d604:	(bad)  
   14000d605:	rcl    BYTE PTR [rax+rsi*2],0x1
   14000d609:	adc    BYTE PTR [rax],cl
   14000d60b:	add    BYTE PTR [rax],dl
   14000d60d:	xor    al,0xc
   14000d60f:	add    BYTE PTR [rax],dl
   14000d611:	xor    cl,BYTE PTR [rax+rsi*8]
   14000d614:	or     ah,al
   14000d616:	or     BYTE PTR [rax+0x7],dh
   14000d619:	(bad)  
   14000d61a:	(bad)  
   14000d61b:	push   rax
   14000d61c:	sbb    DWORD PTR [rbx],esp
   14000d61e:	(bad)  
   14000d61f:	add    BYTE PTR [rbx],ah
   14000d621:	xor    al,0xd
   14000d623:	add    BYTE PTR [rdi],dl
   14000d625:	push   rdx
   14000d626:	adc    esp,eax
   14000d628:	adc    DWORD PTR [rax+0x10],esi
   14000d62b:	(bad)  
   14000d62c:	push   rsi
   14000d62d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d62e:	add    BYTE PTR [rax],al
   14000d630:	movabs al,ds:0xcc
   14000d639:	add    BYTE PTR [rax],al
   14000d63b:	add    BYTE PTR [rcx],al
   14000d63d:	add    BYTE PTR [rax],al
   14000d63f:	add    BYTE PTR [rcx],al
   14000d641:	add    BYTE PTR [rax],al
   14000d643:	add    BYTE PTR [rax-0x2a],cl
   14000d646:	add    BYTE PTR [rax],al
   14000d648:	add    BYTE PTR [rax],al
	...
   14000d653:	add    BYTE PTR [rbp-0x58],ah
   14000d656:	add    BYTE PTR [rax],al
   14000d658:	cmp    BYTE PTR [rax],al
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	add    BYTE PTR [rax],al
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	ins    BYTE PTR es:[rdi],dx
   14000d661:	(bad)  
   14000d662:	add    BYTE PTR [rax],al
   14000d664:	(bad)  
   14000d665:	(bad)  
   14000d666:	(bad)  
   14000d667:	jmp    FWORD PTR [rax+0x60]
   14000d66d:	add    BYTE PTR [rax],al
   14000d66f:	add    BYTE PTR [rdx-0xffffa0],bh
   14000d675:	(bad)  
   14000d676:	(bad)  
   14000d677:	jmp    QWORD PTR [rbp-0x58]
   14000d67a:	add    BYTE PTR [rax],al
   14000d67c:	add    BYTE PTR [rax],al
   14000d67e:	add    BYTE PTR [rax],al
   14000d680:	sbb    DWORD PTR [rdx],ecx
   14000d682:	add    al,BYTE PTR [rax]
   14000d684:	or     dh,BYTE PTR [rdx]
   14000d686:	(bad)  
   14000d687:	push   rax
   14000d688:	push   rsi
   14000d689:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d68a:	add    BYTE PTR [rax],al
   14000d68c:	movabs al,ds:0x14000614010000cc
   14000d695:	fs (bad) 
   14000d697:	add    BYTE PTR [rsp+rsi*1],dl
   14000d69a:	(bad)  
   14000d69b:	add    BYTE PTR [rdx+rsi*1],dl
   14000d69e:	adc    BYTE PTR [rax+0x19],dh
   14000d6a1:	and    DWORD PTR [rdi],eax
   14000d6a3:	add    BYTE PTR [rax],bl
   14000d6a5:	(bad)  
   14000d6a6:	adc    al,0xf0
   14000d6a8:	adc    ah,al
   14000d6aa:	adc    al,dl
   14000d6ac:	(bad)  
   14000d6ad:	ror    BYTE PTR [rax+riz*2],0xb
   14000d6b1:	xor    BYTE PTR [rax],al
   14000d6b3:	add    BYTE PTR [rsi-0x5a],dl
   14000d6b6:	add    BYTE PTR [rax],al
   14000d6b8:	js     0x14000d686
   14000d6ba:	add    BYTE PTR [rax],al
   14000d6bc:	(bad)  
   14000d6bd:	(bad)  
   14000d6be:	(bad)  
   14000d6bf:	inc    DWORD PTR [rax]
   14000d6c1:	add    BYTE PTR [rax],al
   14000d6c3:	add    BYTE PTR [rax],al
   14000d6c5:	add    BYTE PTR [rax],al
   14000d6c7:	add    BYTE PTR [rsi-0xffff58],al
   14000d6cd:	(bad)  
   14000d6ce:	(bad)  
   14000d6cf:	inc    DWORD PTR [rax]
   14000d6d1:	add    BYTE PTR [rax],al
   14000d6d3:	add    bh,bh
   14000d6d5:	(bad)  
   14000d6d6:	(bad)  
   14000d6d7:	jmp    FWORD PTR [rbp+0xa8]
   14000d6dd:	add    BYTE PTR [rax],al
   14000d6df:	add    BYTE PTR [rcx],al
   14000d6e1:	add    BYTE PTR [rax],al
   14000d6e3:	add    BYTE PTR [rdx],al
   14000d6e5:	add    BYTE PTR [rax],al
   14000d6e7:	add    BYTE PTR [rcx],al
   14000d6e9:	add    BYTE PTR [rax],al
   14000d6eb:	add    al,dh
   14000d6ed:	(bad)  
   14000d6ee:	add    BYTE PTR [rax],al
   14000d6f0:	add    BYTE PTR [rax],al
	...
   14000d6fb:	add    BYTE PTR [rdx+0x480000a8],dl
	...
   14000d70d:	add    BYTE PTR [rax],al
   14000d70f:	add    BYTE PTR [rax-0xffff9f],bh
   14000d715:	(bad)  
   14000d716:	(bad)  
   14000d717:	jmp    FWORD PTR [rbx]
   14000d719:	(bad)  
   14000d71a:	add    BYTE PTR [rax],al
   14000d71c:	add    BYTE PTR [rax],al
   14000d71e:	add    BYTE PTR [rax],al
   14000d720:	push   rcx
   14000d721:	(bad)  
   14000d722:	add    BYTE PTR [rax],al
   14000d724:	add    DWORD PTR [rax],eax
   14000d726:	add    BYTE PTR [rax],al
   14000d728:	test   BYTE PTR [rdx+0x0],ah
   14000d72b:	add    BYTE PTR [rax],al
   14000d72d:	add    BYTE PTR [rax],al
   14000d72f:	add    BYTE PTR [rdx+riz*2-0x10000],cl
   14000d736:	(bad)  
   14000d737:	jmp    QWORD PTR [rax]
   14000d739:	movsxd eax,DWORD PTR [rax]
   14000d73b:	add    BYTE PTR [rbx],al
   14000d73d:	add    BYTE PTR [rax],al
   14000d73f:	add    BYTE PTR [rax-0xffff9d],bh
   14000d745:	(bad)  
   14000d746:	(bad)  
   14000d747:	call   QWORD PTR [rdx+0xa8]
   14000d74d:	add    BYTE PTR [rax],al
   14000d74f:	add    BYTE PTR [rcx],bl
   14000d751:	or     al,BYTE PTR [rdx]
   14000d753:	add    BYTE PTR [rdx],cl
   14000d755:	push   rdx
   14000d756:	(bad)  
   14000d757:	push   rax
   14000d758:	push   rsi
   14000d759:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	js     0x14000d72a
   14000d75e:	add    BYTE PTR [rax],al
   14000d760:	sbb    DWORD PTR [rsi],esi
   14000d762:	or     DWORD PTR [rax],eax
   14000d764:	and    eax,0x18005a34
   14000d769:	add    DWORD PTR [rdx+0x0],edx
   14000d76c:	or     dh,al
   14000d76e:	or     al,ah
   14000d770:	(bad)  
   14000d771:	jo     0x14000d778
   14000d773:	(bad)  
   14000d774:	add    al,0x50
   14000d776:	add    BYTE PTR [rax],al
   14000d778:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   14000d77a:	add    BYTE PTR [rax],al
   14000d77c:	push   rax
   14000d77d:	int3   
   14000d77e:	add    BYTE PTR [rax],al
   14000d780:	(bad)  
   14000d781:	add    al,BYTE PTR [rax]
   14000d783:	add    bh,bh
   14000d785:	(bad)  
   14000d786:	(bad)  
   14000d787:	(bad)  
   14000d788:	mov    edi,0xa8
   14000d78d:	add    BYTE PTR [rax],al
   14000d78f:	add    bl,cl
   14000d791:	test   al,0x0
   14000d793:	add    BYTE PTR [rcx],al
   14000d795:	add    BYTE PTR [rax],al
   14000d797:	add    bh,dl
   14000d799:	test   al,0x0
   14000d79b:	add    BYTE PTR [rdx],al
   14000d79d:	add    BYTE PTR [rax],al
   14000d79f:	add    bl,ah
   14000d7a1:	test   al,0x0
	...
   14000d7af:	add    BYTE PTR [rsp+riz*2],dl
   14000d7b2:	add    BYTE PTR [rax],al
   14000d7b4:	(bad)  
   14000d7b5:	(bad)  
   14000d7b6:	(bad)  
   14000d7b7:	push   QWORD PTR [rsp+riz*2+0x0]
   14000d7bb:	add    BYTE PTR [rax],al
   14000d7bd:	add    BYTE PTR [rax],al
   14000d7bf:	add    BYTE PTR [rdx+0x65],al
   14000d7c2:	add    BYTE PTR [rax],al
   14000d7c4:	add    DWORD PTR [rax],eax
   14000d7c6:	add    BYTE PTR [rax],al
   14000d7c8:	cwde   
   14000d7c9:	add    BYTE PTR gs:[rax],al
   14000d7cc:	add    al,BYTE PTR [rax]
   14000d7ce:	add    BYTE PTR [rax],al
   14000d7d0:	sahf   
   14000d7d1:	add    BYTE PTR gs:[rax],al
   14000d7d4:	add    eax,DWORD PTR [rax]
   14000d7d6:	add    BYTE PTR [rax],al
   14000d7d8:	std    
   14000d7d9:	add    BYTE PTR gs:[rax],al
   14000d7dc:	add    al,BYTE PTR [rax]
   14000d7de:	add    BYTE PTR [rax],al
   14000d7e0:	sbb    eax,0x1000066
   14000d7e5:	add    BYTE PTR [rax],al
   14000d7e7:	add    BYTE PTR [rdi+0x66],dl
   14000d7ea:	add    BYTE PTR [rax],al
   14000d7ec:	add    BYTE PTR [rax],al
   14000d7ee:	add    BYTE PTR [rax],al
   14000d7f0:	xchg   esi,eax
   14000d7f1:	data16 add BYTE PTR [rax],al
   14000d7f4:	(bad)  
   14000d7f5:	(bad)  
   14000d7f6:	(bad)  
   14000d7f7:	inc    DWORD PTR [rcx]
   14000d7f9:	or     DWORD PTR [rcx],eax
   14000d7fb:	add    BYTE PTR [rcx],cl
   14000d7fd:	movabs ds:0x7206000215190000,al
   14000d806:	add    dh,BYTE PTR [rax]
   14000d808:	enter  0xa5,0x0
   14000d80c:	cmp    BYTE PTR [rax],al
   14000d80e:	add    BYTE PTR [rax],al
   14000d810:	add    DWORD PTR [rbx],ecx
   14000d812:	add    DWORD PTR [rax],eax
   14000d814:	or     eax,DWORD PTR [rdx+0x4090000]
   14000d81a:	add    DWORD PTR [rax],eax
   14000d81c:	add    al,0x62
   14000d81e:	add    BYTE PTR [rax],al
   14000d820:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d821:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d822:	add    BYTE PTR [rax],al
   14000d824:	add    DWORD PTR [rax],eax
   14000d826:	add    BYTE PTR [rax],al
   14000d828:	mov    al,0x69
   14000d82a:	add    BYTE PTR [rax],al
   14000d82c:	mov    esi,0xf5000069
   14000d831:	test   al,0x0
   14000d833:	add    BYTE PTR [rsi+0x1000069],bh
   14000d839:	sbb    eax,0x741d000c
   14000d83e:	or     eax,DWORD PTR [rax]
   14000d840:	sbb    eax,0x1d000a64
   14000d845:	push   rsp
   14000d846:	or     DWORD PTR [rax],eax
   14000d848:	sbb    eax,0x1d000834
   14000d84d:	xor    bl,BYTE PTR [rcx]
   14000d84f:	lock (bad) 
   14000d851:	loopne 0x14000d868
   14000d853:	rcl    BYTE PTR [rcx],0x13
   14000d856:	add    al,BYTE PTR [rax]
   14000d858:	or     dl,BYTE PTR [rdx+0x6]
   14000d85b:	xor    BYTE PTR [rsi-0x5a],dl
   14000d85e:	add    BYTE PTR [rax],al
   14000d860:	sub    ah,cl
   14000d862:	add    BYTE PTR [rax],al
   14000d864:	(bad)  
   14000d865:	(bad)  
   14000d866:	(bad)  
   14000d867:	call   FWORD PTR [rbx]
   14000d869:	test   eax,0x0
   14000d86e:	add    BYTE PTR [rax],al
   14000d870:	enter  0x6b,0x0
   14000d874:	(bad)  
   14000d875:	(bad)  
   14000d876:	(bad)  
   14000d877:	(bad)  
   14000d878:	fisubr WORD PTR [rbx+0x0]
   14000d87b:	add    BYTE PTR [rax],al
   14000d87d:	add    BYTE PTR [rax],al
   14000d87f:	add    ah,ah
   14000d881:	imul   eax,DWORD PTR [rax],0x0
   14000d884:	(bad)  
   14000d885:	(bad)  
   14000d886:	(bad)  
   14000d887:	call   QWORD PTR [rcx]
   14000d889:	adc    eax,DWORD PTR [rdx]
   14000d88b:	add    BYTE PTR [rdx],cl
   14000d88d:	push   rdx
   14000d88e:	(bad)  
   14000d88f:	xor    BYTE PTR [rsi-0x5a],dl
   14000d892:	add    BYTE PTR [rax],al
   14000d894:	add    ah,cl
   14000d896:	add    BYTE PTR [rax],al
   14000d898:	(bad)  
   14000d899:	(bad)  
   14000d89a:	(bad)  
   14000d89b:	jmp    FWORD PTR [rip+0xffffffffff0000a9]        # 0x13f00d94a
   14000d8a1:	(bad)  
   14000d8a2:	(bad)  
   14000d8a3:	(bad)  
   14000d8a4:	cmp    eax,0xe00000a9
   14000d8a9:	ins    BYTE PTR es:[rdi],dx
   14000d8aa:	add    BYTE PTR [rax],al
   14000d8ac:	(bad)  
   14000d8ad:	(bad)  
   14000d8ae:	(bad)  
   14000d8af:	(bad)  
   14000d8b0:	std    
   14000d8b1:	ins    BYTE PTR es:[rdi],dx
   14000d8b2:	add    BYTE PTR [rax],al
   14000d8b4:	add    BYTE PTR [rax],al
   14000d8b6:	add    BYTE PTR [rax],al
   14000d8b8:	or     ch,BYTE PTR [rbp+0x0]
   14000d8bb:	add    bh,bh
   14000d8bd:	(bad)  
   14000d8be:	(bad)  
   14000d8bf:	dec    DWORD PTR [rdi]
   14000d8c1:	ins    DWORD PTR es:[rdi],dx
   14000d8c2:	add    BYTE PTR [rax],al
   14000d8c4:	add    DWORD PTR [rax],eax
   14000d8c6:	add    BYTE PTR [rax],al
   14000d8c8:	sbb    BYTE PTR [rbp+0x0],ch
   14000d8cb:	add    bh,bh
   14000d8cd:	(bad)  
   14000d8ce:	(bad)  
   14000d8cf:	call   FWORD PTR [rcx]
   14000d8d1:	or     BYTE PTR es:[rax],al
   14000d8d4:	(bad)  
   14000d8d5:	mov    dl,0x1a
   14000d8d7:	lock sbb al,ah
   14000d8da:	(bad)  
   14000d8db:	rcl    BYTE PTR [rax+rax*8],1
   14000d8de:	adc    dh,BYTE PTR [rax+0x11]
   14000d8e1:	(bad)  
   14000d8e2:	adc    BYTE PTR [rax],dh
   14000d8e4:	push   rsi
   14000d8e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d8e6:	add    BYTE PTR [rax],al
   14000d8e8:	fmul   st,st(3)
   14000d8ea:	add    BYTE PTR [rax],al
   14000d8ec:	(bad)  
   14000d8ed:	(bad)  
   14000d8ee:	(bad)  
   14000d8ef:	inc    DWORD PTR [rax]
   14000d8f1:	add    BYTE PTR [rax],al
   14000d8f3:	add    bh,bh
   14000d8f5:	(bad)  
   14000d8f6:	(bad)  
   14000d8f7:	inc    DWORD PTR [rax]
   14000d8f9:	add    BYTE PTR [rax],al
   14000d8fb:	add    bh,bh
   14000d8fd:	(bad)  
   14000d8fe:	(bad)  
   14000d8ff:	jmp    FWORD PTR [rdx-0x57]
   14000d902:	add    BYTE PTR [rax],al
   14000d904:	add    al,BYTE PTR [rax]
   14000d906:	add    BYTE PTR [rax],al
   14000d908:	add    BYTE PTR [rax],al
   14000d90a:	add    BYTE PTR [rax],al
   14000d90c:	add    al,BYTE PTR [rax]
   14000d90e:	add    BYTE PTR [rax],al
   14000d910:	add    BYTE PTR [rax],al
   14000d912:	add    BYTE PTR [rax],al
   14000d914:	add    al,BYTE PTR [rax]
   14000d916:	add    BYTE PTR [rax],al
   14000d918:	xchg   ecx,eax
   14000d919:	test   eax,0x0
   14000d91e:	add    BYTE PTR [rax],al
   14000d920:	add    BYTE PTR [rax],al
   14000d922:	add    BYTE PTR [rax],al
   14000d924:	add    DWORD PTR [rax],eax
   14000d926:	add    BYTE PTR [rax],al
   14000d928:	add    DWORD PTR [rax],eax
   14000d92a:	add    BYTE PTR [rax],al
   14000d92c:	rex.R fld DWORD PTR [rax]
   14000d92f:	add    BYTE PTR [rbx],al
   14000d931:	add    BYTE PTR [rax],al
   14000d933:	add    BYTE PTR [rbx],al
   14000d935:	add    BYTE PTR [rax],al
   14000d937:	add    BYTE PTR [rax+rax*1],al
   14000d93a:	add    BYTE PTR [rax],al
   14000d93c:	add    DWORD PTR [rax],eax
   14000d93e:	add    BYTE PTR [rax],al
   14000d940:	pop    rax
   14000d941:	fld    DWORD PTR [rax]
   14000d943:	add    BYTE PTR [rax+0x0],al
	...
   14000d94e:	add    BYTE PTR [rax],al
   14000d950:	rex.WRXB test rax,0x380000
   14000d956:	add    BYTE PTR [rax],al
   14000d958:	add    BYTE PTR [rax],al
	...
   14000d963:	add    BYTE PTR [rsi-0x57],dh
   14000d966:	add    BYTE PTR [rax],al
   14000d968:	cmp    BYTE PTR [rax],al
   14000d96a:	add    BYTE PTR [rax],al
   14000d96c:	add    BYTE PTR [rax],al
   14000d96e:	add    BYTE PTR [rax],al
   14000d970:	je     0x14000d9df
   14000d972:	add    BYTE PTR [rax],al
   14000d974:	(bad)  
   14000d975:	(bad)  
   14000d976:	(bad)  
   14000d977:	(bad)  
   14000d978:	fsubr  QWORD PTR [rbp+0x0]
   14000d97b:	add    BYTE PTR [rax],al
   14000d97d:	add    BYTE PTR [rax],al
   14000d97f:	add    dl,bh
   14000d981:	ins    DWORD PTR es:[rdi],dx
   14000d982:	add    BYTE PTR [rax],al
   14000d984:	(bad)  
   14000d985:	(bad)  
   14000d986:	(bad)  
   14000d987:	jmp    QWORD PTR [rdi]
   14000d989:	outs   dx,BYTE PTR ds:[rsi]
   14000d98a:	add    BYTE PTR [rax],al
   14000d98c:	add    al,BYTE PTR [rax]
   14000d98e:	add    BYTE PTR [rax],al
   14000d990:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14000d992:	add    BYTE PTR [rax],al
   14000d994:	add    eax,DWORD PTR [rax]
   14000d996:	add    BYTE PTR [rax],al
   14000d998:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   14000d99c:	add    al,BYTE PTR [rax]
   14000d99e:	add    BYTE PTR [rax],al
   14000d9a0:	movabs ds:0xdf0000000500006e,eax
   14000d9a9:	outs   dx,DWORD PTR ds:[rsi]
   14000d9aa:	add    BYTE PTR [rax],al
   14000d9ac:	add    al,BYTE PTR [rax]
   14000d9ae:	add    BYTE PTR [rax],al
   14000d9b0:	call   0x13f00da24
   14000d9b5:	(bad)  
   14000d9b6:	(bad)  
   14000d9b7:	dec    DWORD PTR [rdi-0x57]
   14000d9ba:	add    BYTE PTR [rax],al
   14000d9bc:	add    BYTE PTR [rax],al
   14000d9be:	add    BYTE PTR [rax],al
   14000d9c0:	sbb    DWORD PTR [rdx],ecx
   14000d9c2:	add    al,BYTE PTR [rax]
   14000d9c4:	or     dh,BYTE PTR [rdx]
   14000d9c6:	(bad)  
   14000d9c7:	push   rax
   14000d9c8:	push   rsi
   14000d9c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d9ca:	add    BYTE PTR [rax],al
   14000d9cc:	fmul   st,st(3)
   14000d9ce:	add    BYTE PTR [rax],al
   14000d9d0:	adc    DWORD PTR [rip+0x62040001],ecx        # 0x1a204d9d7
   14000d9d6:	add    BYTE PTR [rax],al
   14000d9d8:	push   rsi
   14000d9d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d9da:	add    BYTE PTR [rax],al
   14000d9dc:	mov    al,0xcb
   14000d9de:	add    BYTE PTR [rax],al
   14000d9e0:	(bad)  
   14000d9e1:	(bad)  
   14000d9e2:	(bad)  
   14000d9e3:	jmp    QWORD PTR [rbx+0x100000a9]
   14000d9e9:	jo     0x14000d9eb
   14000d9eb:	add    bh,bh
   14000d9ed:	(bad)  
   14000d9ee:	(bad)  
   14000d9ef:	jmp    FWORD PTR [rip+0x70]        # 0x14000da65
   14000d9f5:	add    BYTE PTR [rax],al
   14000d9f7:	add    BYTE PTR [rcx+0x70],al
   14000d9fa:	add    BYTE PTR [rax],al
   14000d9fc:	(bad)  
   14000d9fd:	(bad)  
   14000d9fe:	(bad)  
   14000d9ff:	inc    DWORD PTR [rcx]
   14000da01:	add    al,0x1
   14000da03:	add    BYTE PTR [rdx+rax*2],al
   14000da06:	add    BYTE PTR [rax],al
   14000da08:	add    DWORD PTR [rcx],ebx
   14000da0a:	or     al,BYTE PTR [rax]
   14000da0c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000da10:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000da14:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000da18:	sbb    DWORD PTR [rsi+rax*1],esi
   14000da1b:	add    BYTE PTR [rcx],bl
   14000da1d:	xor    dl,BYTE PTR [rip+0xb3319e0]        # 0x14b33f403
   14000da23:	add    BYTE PTR [rip+0x19001b34],ah        # 0x15900f55d
   14000da29:	add    DWORD PTR [rdx],edx
   14000da2b:	add    BYTE PTR [rsi],cl
   14000da2d:	lock or al,0xe0
   14000da30:	or     dl,al
   14000da32:	or     al,al
   14000da34:	(bad)  
   14000da35:	jo     0x14000da3c
   14000da37:	(bad)  
   14000da38:	add    al,0x50
   14000da3a:	add    BYTE PTR [rax],al
   14000da3c:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   14000da3e:	add    BYTE PTR [rax],al
   14000da40:	mov    bl,cl
   14000da42:	add    BYTE PTR [rax],al
   14000da44:	(bad)  
   14000da45:	add    BYTE PTR [rax],al
   14000da47:	add    bh,bh
   14000da49:	(bad)  
   14000da4a:	(bad)  
   14000da4b:	push   QWORD PTR [rbp+0xa9]
   14000da51:	add    BYTE PTR [rax],al
   14000da53:	add    cl,al
   14000da55:	test   eax,0x722c0000
   14000da5a:	add    BYTE PTR [rax],al
   14000da5c:	(bad)  
   14000da5d:	(bad)  
   14000da5e:	(bad)  
   14000da5f:	dec    eax
   14000da61:	jb     0x14000da63
   14000da63:	add    BYTE PTR [rax],al
   14000da65:	add    BYTE PTR [rax],al
   14000da67:	add    bl,bh
   14000da69:	jae    0x14000da6b
   14000da6b:	add    BYTE PTR [rcx],al
   14000da6d:	add    BYTE PTR [rax],al
   14000da6f:	add    BYTE PTR [rbx],dl
   14000da71:	je     0x14000da73
   14000da73:	add    BYTE PTR [rax],al
   14000da75:	add    BYTE PTR [rax],al
   14000da77:	add    BYTE PTR [rsp+rsi*2-0x10000],ah
   14000da7e:	(bad)  
   14000da7f:	inc    DWORD PTR [rcx]
   14000da81:	sbb    DWORD PTR [rdx],ecx
   14000da83:	add    BYTE PTR [rcx],bl
   14000da85:	je     0x14000da90
   14000da87:	add    BYTE PTR [rcx],bl
   14000da89:	or     BYTE PTR fs:[rax],al
   14000da8c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000da90:	sbb    DWORD PTR [rsi+rax*1],esi
   14000da93:	add    BYTE PTR [rcx],bl
   14000da95:	xor    dl,BYTE PTR [rip+0x93419f0]        # 0x14934f48b
   14000da9b:	add    BYTE PTR [rcx],bl
   14000da9d:	add    DWORD PTR [rsp+rax*1],esi
   14000daa0:	or     al,0xf0
   14000daa2:	or     ah,al
   14000daa4:	or     al,dl
   14000daa6:	(bad)  
   14000daa7:	rol    BYTE PTR [rax+rsi*2],0x3
   14000daab:	(bad)  
   14000daac:	add    dh,BYTE PTR [rax]
   14000daae:	add    BYTE PTR [rax],al
   14000dab0:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   14000dab2:	add    BYTE PTR [rax],al
   14000dab4:	(bad)  
   14000dab5:	retf   
   14000dab6:	add    BYTE PTR [rax],al
   14000dab8:	xchg   ebx,eax
   14000dab9:	and    DWORD PTR [rax],eax
   14000dabb:	add    bh,bh
   14000dabd:	(bad)  
   14000dabe:	(bad)  
   14000dabf:	call   rbx
   14000dac1:	test   eax,0x0
	...
   14000dad2:	add    BYTE PTR [rax],al
   14000dad4:	(bad)  
   14000dad5:	(bad)  
   14000dad6:	(bad)  
   14000dad7:	(bad)  
   14000dad8:	cli    
   14000dad9:	test   eax,0x30000
   14000dade:	add    BYTE PTR [rax],al
   14000dae0:	add    BYTE PTR [rax],al
   14000dae2:	add    BYTE PTR [rax],al
   14000dae4:	add    eax,DWORD PTR [rax]
   14000dae6:	add    BYTE PTR [rax],al
   14000dae8:	add    BYTE PTR [rax],al
   14000daea:	add    BYTE PTR [rax],al
   14000daec:	add    DWORD PTR [rax],eax
   14000daee:	add    BYTE PTR [rax],al
   14000daf0:	add    DWORD PTR [rax],eax
   14000daf2:	add    BYTE PTR [rax],al
   14000daf4:	add    al,BYTE PTR [rax]
   14000daf6:	add    BYTE PTR [rax],al
   14000daf8:	add    DWORD PTR [rax],eax
   14000dafa:	add    BYTE PTR [rax],al
   14000dafc:	adc    al,0xdb
   14000dafe:	add    BYTE PTR [rax],al
   14000db00:	add    al,0x0
   14000db02:	add    BYTE PTR [rax],al
   14000db04:	add    al,0x0
   14000db06:	add    BYTE PTR [rax],al
   14000db08:	add    eax,0x1000000
   14000db0d:	add    BYTE PTR [rax],al
   14000db0f:	add    BYTE PTR [rax],ch
   14000db11:	fild   DWORD PTR [rax]
   14000db13:	add    BYTE PTR [rax+0x0],al
	...
   14000db1e:	add    BYTE PTR [rax],al
   14000db20:	fild   QWORD PTR [rcx+0x480000]
   14000db26:	add    BYTE PTR [rax],al
   14000db28:	add    BYTE PTR [rax],al
	...
   14000db33:	add    BYTE PTR [rsi],al
   14000db35:	stos   BYTE PTR es:[rdi],al
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	rex.W add BYTE PTR [rax],al
   14000db3b:	add    BYTE PTR [rax],al
   14000db3d:	add    BYTE PTR [rax],al
   14000db3f:	add    al,ah
   14000db41:	jne    0x14000db43
   14000db43:	add    bh,bh
   14000db45:	(bad)  
   14000db46:	(bad)  
   14000db47:	inc    DWORD PTR [rax]
   14000db49:	ja     0x14000db4b
   14000db4b:	add    BYTE PTR [rcx],al
   14000db4d:	add    BYTE PTR [rax],al
   14000db4f:	add    BYTE PTR [rbx+0x77],dl
   14000db52:	add    BYTE PTR [rax],al
   14000db54:	add    BYTE PTR [rax],al
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	rex.WRXB js 0x14000db5b
   14000db5b:	add    bh,bh
   14000db5d:	(bad)  
   14000db5e:	(bad)  
   14000db5f:	(bad)  
   14000db60:	in     eax,dx
   14000db61:	js     0x14000db63
   14000db63:	add    BYTE PTR [rax+rax*1],al
   14000db66:	add    BYTE PTR [rax],al
   14000db68:	(bad)  
   14000db69:	jns    0x14000db6b
   14000db6b:	add    BYTE PTR [rbx],al
   14000db6d:	add    BYTE PTR [rax],al
   14000db6f:	add    BYTE PTR [rbp+0x79],ch
   14000db72:	add    BYTE PTR [rax],al
   14000db74:	(bad)  
   14000db75:	(bad)  
   14000db76:	(bad)  
   14000db77:	call   QWORD PTR [rax+0x3000079]
   14000db7d:	add    BYTE PTR [rax],al
   14000db7f:	add    BYTE PTR [rdx+rdi*2+0x0],al
   14000db83:	add    bh,bh
   14000db85:	(bad)  
   14000db86:	(bad)  
   14000db87:	(bad)  
   14000db88:	fild   QWORD PTR [rcx+0x0]
   14000db8e:	add    BYTE PTR [rax],al
   14000db90:	sbb    DWORD PTR [rdx],ecx
   14000db92:	add    al,BYTE PTR [rax]
   14000db94:	or     dl,BYTE PTR [rdx+0x6]
   14000db97:	push   rax
   14000db98:	push   rsi
   14000db99:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000db9a:	add    BYTE PTR [rax],al
   14000db9c:	(bad)  
   14000db9d:	retf   
   14000db9e:	add    BYTE PTR [rax],al
   14000dba0:	sbb    DWORD PTR [rip+0x34130005],esp        # 0x17413dbab
   14000dba6:	or     al,BYTE PTR [rbx+rdx*1]
   14000dba9:	add    DWORD PTR [rsi],eax
   14000dbab:	add    al,0x6
   14000dbad:	jo     0x14000dbaf
   14000dbaf:	add    al,cl
   14000dbb1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dbb2:	add    BYTE PTR [rax],al
   14000dbb4:	and    BYTE PTR [rax],ah
   14000dbb6:	add    BYTE PTR [rax],al
   14000dbb8:	sbb    DWORD PTR [rax],ebp
   14000dbba:	(bad)  
   14000dbbb:	add    BYTE PTR [rdi],dl
   14000dbbd:	xor    al,0x56
   14000dbbf:	add    BYTE PTR [rdi],dl
   14000dbc1:	add    DWORD PTR [rax+0x0],edx
   14000dbc4:	or     BYTE PTR [rax+0x7],dh
   14000dbc7:	(bad)  
   14000dbc8:	(bad)  
   14000dbc9:	push   rax
   14000dbca:	add    BYTE PTR [rax],al
   14000dbcc:	enter  0xa5,0x0
   14000dbd0:	jo     0x14000dbd4
   14000dbd2:	add    BYTE PTR [rax],al
   14000dbd4:	sbb    DWORD PTR [rbx],esi
   14000dbd6:	(bad)  
   14000dbd7:	add    BYTE PTR [rdx],bl
   14000dbd9:	add    DWORD PTR [rdi+0x4],ebx
   14000dbdc:	add    eax,0x3600470
   14000dbe1:	xor    BYTE PTR [rdx],al
   14000dbe3:	push   rax
   14000dbe4:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   14000dbe6:	add    BYTE PTR [rax],al
   14000dbe8:	cmp    bl,cl
   14000dbea:	add    BYTE PTR [rax],al
   14000dbec:	loop   0x14000dc10
   14000dbee:	add    BYTE PTR [rax],al
   14000dbf0:	(bad)  
   14000dbf1:	(bad)  
   14000dbf2:	(bad)  
   14000dbf3:	jmp    QWORD PTR [rdi]
   14000dbf5:	stos   BYTE PTR es:[rdi],al
   14000dbf6:	add    BYTE PTR [rax],al
   14000dbf8:	add    BYTE PTR [rax],al
   14000dbfa:	add    BYTE PTR [rax],al
   14000dbfc:	xor    ebp,DWORD PTR [rdx+0x7f7c0000]
   14000dc02:	add    BYTE PTR [rax],al
   14000dc04:	(bad)  
   14000dc05:	(bad)  
   14000dc06:	(bad)  
   14000dc07:	call   rbx
   14000dc09:	jg     0x14000dc0b
   14000dc0b:	add    BYTE PTR [rax],al
   14000dc0d:	add    BYTE PTR [rax],al
   14000dc0f:	add    BYTE PTR [rsi+0x1000081],dl
   14000dc15:	add    BYTE PTR [rax],al
   14000dc17:	add    BYTE PTR [rdx+0x81],bh
   14000dc1d:	add    BYTE PTR [rax],al
   14000dc1f:	add    BYTE PTR [rax],ch
   14000dc21:	xchg   DWORD PTR [rax],eax
   14000dc23:	add    bh,bh
   14000dc25:	(bad)  
   14000dc26:	(bad)  
   14000dc27:	call   FWORD PTR [rcx]
   14000dc29:	(bad)  
   14000dc2a:	or     eax,DWORD PTR [rax]
   14000dc2c:	sbb    eax,0x1d041534
   14000dc31:	add    DWORD PTR [rdx],ecx
   14000dc33:	add    al,0x10
   14000dc35:	lock (bad) 
   14000dc37:	loopne 0x14000dc45
   14000dc39:	ror    BYTE PTR [rdx],1
   14000dc3b:	ror    BYTE PTR [rax],0x70
   14000dc3e:	(bad)  
   14000dc3f:	(bad)  
   14000dc40:	(bad)  
   14000dc41:	push   rax
   14000dc42:	add    BYTE PTR [rax],al
   14000dc44:	enter  0xa5,0x0
   14000dc48:	and    BYTE PTR [rax],al
   14000dc4b:	add    BYTE PTR [rcx],bl
   14000dc4d:	sub    eax,0x341b0007
   14000dc52:	xchg   esi,eax
   14000dc53:	add    BYTE PTR [rsi],cl
   14000dc55:	add    DWORD PTR [rdx+0x5e00700],edx
   14000dc5b:	jo     0x14000dc61
   14000dc5d:	(bad)  
   14000dc5e:	add    BYTE PTR [rax],al
   14000dc60:	cmps   BYTE PTR fs:[rsi],BYTE PTR es:[rdi]
   14000dc62:	add    BYTE PTR [rax],al
   14000dc64:	adc    bl,cl
   14000dc66:	add    BYTE PTR [rax],al
   14000dc68:	add    DWORD PTR [rax+rax*1],0x0
   14000dc6c:	(bad)  
   14000dc6d:	(bad)  
   14000dc6e:	(bad)  
   14000dc6f:	inc    DWORD PTR [rbp-0x56]
   14000dc72:	add    BYTE PTR [rax],al
   14000dc74:	add    BYTE PTR [rax],al
   14000dc76:	add    BYTE PTR [rax],al
   14000dc78:	push   rcx
   14000dc79:	stos   BYTE PTR es:[rdi],al
   14000dc7a:	add    BYTE PTR [rax],al
   14000dc7c:	add    DWORD PTR [rax],eax
   14000dc7e:	add    BYTE PTR [rax],al
   14000dc80:	add    BYTE PTR [rax],al
   14000dc82:	add    BYTE PTR [rax],al
   14000dc84:	add    DWORD PTR [rax],eax
   14000dc86:	add    BYTE PTR [rax],al
   14000dc88:	add    BYTE PTR [rax],al
   14000dc8a:	add    BYTE PTR [rax],al
   14000dc8c:	add    al,BYTE PTR [rax]
   14000dc8e:	add    BYTE PTR [rax],al
   14000dc90:	add    al,BYTE PTR [rax]
   14000dc92:	add    BYTE PTR [rax],al
   14000dc94:	add    eax,DWORD PTR [rax]
   14000dc96:	add    BYTE PTR [rax],al
   14000dc98:	add    DWORD PTR [rax],eax
   14000dc9a:	add    BYTE PTR [rax],al
   14000dc9c:	movabs al,ds:0x400000dc
   14000dca5:	add    BYTE PTR [rax],al
   14000dca7:	add    BYTE PTR [rax],al
   14000dca9:	add    BYTE PTR [rax],al
   14000dcab:	add    BYTE PTR [rbp-0x56],bl
   14000dcae:	add    BYTE PTR [rax],al
   14000dcb0:	rex.W add BYTE PTR [rax],al
	...
   14000dcbf:	add    BYTE PTR [rcx+rcx*4],bl
   14000dcc2:	add    BYTE PTR [rax],al
   14000dcc4:	(bad)  
   14000dcc5:	(bad)  
   14000dcc6:	(bad)  
   14000dcc7:	call   FWORD PTR [rcx-0x77]
   14000dcca:	add    BYTE PTR [rax],al
   14000dccc:	add    BYTE PTR [rax],al
   14000dcce:	add    BYTE PTR [rax],al
   14000dcd0:	push   0x1000089
   14000dcd5:	add    BYTE PTR [rax],al
   14000dcd7:	add    ch,ah
   14000dcd9:	mov    DWORD PTR [rax],eax
   14000dcdb:	add    BYTE PTR [rax],al
   14000dcdd:	add    BYTE PTR [rax],al
   14000dcdf:	add    ah,bh
   14000dce1:	mov    DWORD PTR [rax],eax
   14000dce3:	add    bh,bh
   14000dce5:	(bad)  
   14000dce6:	(bad)  
   14000dce7:	inc    DWORD PTR [rsi]
   14000dce9:	mov    al,BYTE PTR [rax]
   14000dceb:	add    BYTE PTR [rdx],al
   14000dced:	add    BYTE PTR [rax],al
   14000dcef:	add    BYTE PTR [rbp-0x76],cl
   14000dcf2:	add    BYTE PTR [rax],al
   14000dcf4:	add    DWORD PTR [rax],eax
   14000dcf6:	add    BYTE PTR [rax],al
   14000dcf8:	ror    BYTE PTR [rdx+0x0],0x0
   14000dcff:	add    bh,dl
   14000dd01:	mov    al,BYTE PTR [rax]
   14000dd03:	add    bh,bh
   14000dd05:	(bad)  
   14000dd06:	(bad)  
   14000dd07:	call   FWORD PTR [rbp-0x56]
   14000dd0a:	add    BYTE PTR [rax],al
   14000dd0c:	add    BYTE PTR [rax],al
   14000dd0e:	add    BYTE PTR [rax],al
   14000dd10:	sbb    DWORD PTR [rdx],ecx
   14000dd12:	add    al,BYTE PTR [rax]
   14000dd14:	or     dl,BYTE PTR [rdx+0x6]
   14000dd17:	push   rax
   14000dd18:	push   rsi
   14000dd19:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dd1a:	add    BYTE PTR [rax],al
   14000dd1c:	adc    bl,cl
   14000dd1e:	add    BYTE PTR [rax],al
   14000dd20:	sbb    DWORD PTR [rcx+rcx*1],ebp
   14000dd23:	add    BYTE PTR [rbx],bl
   14000dd25:	xor    al,0x5c
   14000dd27:	add    DWORD PTR [rbx],ebx
   14000dd29:	add    DWORD PTR [rsi+0x1],edx
   14000dd2c:	or     al,0xf0
   14000dd2e:	or     ah,al
   14000dd30:	or     BYTE PTR [rax+0x7],dh
   14000dd33:	(bad)  
   14000dd34:	(bad)  
   14000dd35:	push   rax
   14000dd36:	add    BYTE PTR [rax],al
   14000dd38:	enter  0xa5,0x0
   14000dd3c:	movabs al,ds:0x200008200100000a
   14000dd45:	mov    dl,0x19
   14000dd47:	lock (bad) 
   14000dd49:	loopne 0x14000dd60
   14000dd4b:	rcl    BYTE PTR [rbx],1
   14000dd4d:	jo     0x14000dd61
   14000dd4f:	(bad)  
   14000dd50:	adc    DWORD PTR [rax],esi
   14000dd52:	adc    BYTE PTR [rax+0x1],dl
   14000dd55:	adc    BYTE PTR [rsi],al
   14000dd57:	add    BYTE PTR [rax],dl
   14000dd59:	or     BYTE PTR fs:[rax],al
   14000dd5c:	adc    BYTE PTR [rdi+rax*1],dh
   14000dd5f:	add    BYTE PTR [rax],dl
   14000dd61:	xor    cl,BYTE PTR [rax+rsi*2]
   14000dd64:	add    DWORD PTR [rcx+rax*1],eax
   14000dd67:	add    BYTE PTR [rdx+rax*4],al
   14000dd6a:	add    BYTE PTR [rax],al
   14000dd6c:	add    DWORD PTR [rsi],eax
   14000dd6e:	add    al,BYTE PTR [rax]
   14000dd70:	(bad)  
   14000dd71:	jb     0x14000dd75
   14000dd73:	xor    BYTE PTR [rcx],cl
   14000dd75:	sbb    al,0xb
   14000dd77:	add    BYTE PTR [rsp+rsi*2],bl
   14000dd7a:	sbb    al,0x0
   14000dd7c:	sbb    al,0x64
   14000dd7e:	sbb    eax,DWORD PTR [rax]
   14000dd80:	sbb    al,0x34
   14000dd82:	sbb    al,BYTE PTR [rax]
   14000dd84:	sbb    al,0x1
   14000dd86:	(bad)  
   14000dd87:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0f17d
   14000dd8d:	rol    BYTE PTR [rax],0x0
   14000dd90:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dd91:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dd92:	add    BYTE PTR [rax],al
   14000dd94:	add    DWORD PTR [rax],eax
   14000dd96:	add    BYTE PTR [rax],al
   14000dd98:	rex cdq 
   14000dd9a:	add    BYTE PTR [rax],al
   14000dd9c:	ss fwait
   14000dd9e:	add    BYTE PTR [rax],al
   14000dda0:	jle    0x14000dd4c
   14000dda2:	add    BYTE PTR [rax],al
   14000dda4:	ss fwait
   14000dda6:	add    BYTE PTR [rax],al
   14000dda8:	add    DWORD PTR [rax],eax
   14000ddaa:	add    BYTE PTR [rax],al
   14000ddac:	adc    DWORD PTR [rax],ebx
   14000ddae:	add    eax,0x14621800
   14000ddb3:	loopne 0x14000ddc7
   14000ddb5:	jo     0x14000ddc8
   14000ddb7:	(bad)  
   14000ddb8:	adc    BYTE PTR [rax],dh
   14000ddba:	add    BYTE PTR [rax],al
   14000ddbc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ddbd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ddbe:	add    BYTE PTR [rax],al
   14000ddc0:	add    DWORD PTR [rax],eax
   14000ddc2:	add    BYTE PTR [rax],al
   14000ddc4:	(bad)  
   14000ddc5:	pushf  
   14000ddc6:	add    BYTE PTR [rax],al
   14000ddc8:	rex.R pushf 
   14000ddca:	add    BYTE PTR [rax],al
   14000ddcc:	movabs ds:0x9000000000000aa,al
   14000ddd5:	(bad)  
   14000ddd6:	(bad)  
   14000ddd7:	add    BYTE PTR [rdi],dl
   14000ddd9:	xor    al,0xd
   14000dddb:	add    BYTE PTR [rdi],dl
   14000dddd:	jb     0x14000ddf2
   14000dddf:	loopne 0x14000ddf2
   14000dde1:	jo     0x14000ddf3
   14000dde3:	(bad)  
   14000dde4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dde5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dde6:	add    BYTE PTR [rax],al
   14000dde8:	add    DWORD PTR [rax],eax
   14000ddea:	add    BYTE PTR [rax],al
   14000ddec:	ja     0x14000dd8a
   14000ddee:	add    BYTE PTR [rax],al
   14000ddf0:	(bad)  
   14000ddf1:	pushf  
   14000ddf2:	add    BYTE PTR [rax],al
   14000ddf4:	(bad)  
   14000ddf5:	stos   BYTE PTR es:[rdi],al
   14000ddf6:	add    BYTE PTR [rax],al
   14000ddf8:	(bad)  
   14000ddf9:	pushf  
   14000ddfa:	add    BYTE PTR [rax],al
   14000ddfc:	add    DWORD PTR [rcx+rax*1],eax
   14000ddff:	add    BYTE PTR [rdx+riz*2],al
   14000de02:	add    BYTE PTR [rax],al
   14000de04:	add    DWORD PTR [rcx+rax*1],eax
   14000de07:	add    BYTE PTR [rdx+riz*8],al
   14000de0a:	add    BYTE PTR [rax],al
   14000de0c:	add    DWORD PTR [rdx+rax*1],ecx
   14000de0f:	add    BYTE PTR [rcx+rax*1],cl
   14000de12:	adc    DWORD PTR [rax],eax
   14000de14:	adc    DWORD PTR [rdx],ecx
   14000de16:	add    al,0x0
   14000de18:	or     dh,BYTE PTR [rsi+rax*1]
   14000de1b:	add    BYTE PTR [rdx],cl
   14000de1d:	xor    al,BYTE PTR [rsi]
   14000de1f:	jo     0x14000ddc7
   14000de21:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de22:	add    BYTE PTR [rax],al
   14000de24:	add    DWORD PTR [rax],eax
   14000de26:	add    BYTE PTR [rax],al
   14000de28:	rex.WB movabs al,ds:0xab1c0000a08e0000
   14000de32:	add    BYTE PTR [rax],al
   14000de34:	add    BYTE PTR [rax],al
   14000de36:	add    BYTE PTR [rax],al
   14000de38:	adc    DWORD PTR [rax+rcx*1],ebx
   14000de3b:	add    BYTE PTR [rsp+riz*2],bl
   14000de3e:	or     eax,0xc341c00
   14000de43:	add    BYTE PTR [rdx+rdx*2],bl
   14000de46:	sbb    al,dh
   14000de48:	(bad)  
   14000de49:	loopne 0x14000de5f
   14000de4b:	jo     0x14000ddf3
   14000de4d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de4e:	add    BYTE PTR [rax],al
   14000de50:	add    DWORD PTR [rax],eax
   14000de52:	add    BYTE PTR [rax],al
   14000de54:	cld    
   14000de55:	movabs al,ds:0xab3d0000a1280000
   14000de5e:	add    BYTE PTR [rax],al
   14000de60:	add    BYTE PTR [rax],al
   14000de62:	add    BYTE PTR [rax],al
   14000de64:	or     DWORD PTR [rcx+rax*1],eax
   14000de67:	add    BYTE PTR [rdx+riz*1],al
   14000de6a:	add    BYTE PTR [rax],al
   14000de6c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000de6d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de6e:	add    BYTE PTR [rax],al
   14000de70:	add    DWORD PTR [rax],eax
   14000de72:	add    BYTE PTR [rax],al
   14000de74:	cmp    al,0xa2
   14000de76:	add    BYTE PTR [rax],al
   14000de78:	jb     0x14000de1c
   14000de7a:	add    BYTE PTR [rax],al
   14000de7c:	add    DWORD PTR [rax],eax
   14000de7e:	add    BYTE PTR [rax],al
   14000de80:	jb     0x14000de24
   14000de82:	add    BYTE PTR [rax],al
   14000de84:	or     DWORD PTR [rdx],ecx
   14000de86:	add    al,0x0
   14000de88:	or     dh,BYTE PTR [rsi+rax*1]
   14000de8b:	add    BYTE PTR [rdx],cl
   14000de8d:	xor    al,BYTE PTR [rsi]
   14000de8f:	jo     0x14000de37
   14000de91:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000de92:	add    BYTE PTR [rax],al
   14000de94:	add    DWORD PTR [rax],eax
   14000de96:	add    BYTE PTR [rax],al
   14000de98:	cmp    eax,0x700000a3
   14000de9d:	movabs ds:0xa3700000ab700000,eax
   14000dea6:	add    BYTE PTR [rax],al
   14000dea8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740ddeb2
   14000deae:	or     DWORD PTR [rax],eax
   14000deb0:	or     eax,0x19500632
   14000deb5:	sbb    eax,DWORD PTR [rbx]
   14000deb7:	add    BYTE PTR [rcx],cl
   14000deb9:	add    DWORD PTR [rax+0x300200],ebp
   14000debf:	add    al,cl
   14000dec1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dec2:	add    BYTE PTR [rax],al
   14000dec4:	xor    BYTE PTR [rip+0x10000],al        # 0x14001deca
   14000deca:	add    BYTE PTR [rax],al
   14000decc:	add    BYTE PTR [rax],al
   14000dece:	add    BYTE PTR [rax],al
   14000ded0:	add    DWORD PTR [rcx+rax*1],eax
   14000ded3:	add    BYTE PTR [rdx+rdx*1],al
   14000ded6:	add    BYTE PTR [rax],al
   14000ded8:	add    BYTE PTR [rax],al
   14000deda:	add    BYTE PTR [rax],al
   14000dedc:	jo     0x14000decf
   14000dede:	add    BYTE PTR [rax],al
   14000dee0:	add    BYTE PTR [rax],al
   14000dee2:	add    BYTE PTR [rax],al
   14000dee4:	(bad)  
   14000dee5:	(bad)  
   14000dee6:	(bad)  
   14000dee7:	inc    DWORD PTR [rax]
   14000dee9:	add    BYTE PTR [rax],al
   14000deeb:	add    BYTE PTR [rax],bl
   14000deed:	add    BYTE PTR [rax],al
   14000deef:	add    BYTE PTR [rcx+riz*4+0x0],dh
	...
   14000df03:	add    BYTE PTR [rsi+rdx*4],bh
   14000df06:	add    BYTE PTR [rax],al
   14000df08:	add    BYTE PTR [rax],al
   14000df0a:	add    BYTE PTR [rax],al
   14000df0c:	and    bh,bl
	...
   14000df1e:	add    BYTE PTR [rax],al
   14000df20:	add    al,BYTE PTR [rax]
   14000df22:	add    BYTE PTR [rax],al
   14000df24:	cmp    bh,bl
   14000df26:	add    BYTE PTR [rax],al
   14000df28:	fcomp  st(6)
	...
   14000df36:	add    BYTE PTR [rax],al
   14000df38:	adc    BYTE PTR [rax],al
   14000df3a:	add    BYTE PTR [rax],al
   14000df3c:	nop
   14000df3d:	icebp  
   14000df3e:	add    BYTE PTR [rax],al
   14000df40:	add    BYTE PTR [rax],al
   14000df42:	add    BYTE PTR [rax],al
   14000df44:	(bad)  
   14000df45:	(bad)  
   14000df46:	(bad)  
   14000df47:	inc    DWORD PTR [rax]
   14000df49:	add    BYTE PTR [rax],al
   14000df4b:	add    BYTE PTR [rax],bl
   14000df4d:	add    BYTE PTR [rax],al
   14000df4f:	add    al,ah
   14000df51:	xchg   ebp,eax
	...
   14000df62:	add    BYTE PTR [rax],al
   14000df64:	mov    eax,0xf1
   14000df69:	add    BYTE PTR [rax],al
   14000df6b:	add    bh,bh
   14000df6d:	(bad)  
   14000df6e:	(bad)  
   14000df6f:	inc    DWORD PTR [rax]
   14000df71:	add    BYTE PTR [rax],al
   14000df73:	add    BYTE PTR [rax+rax*1],al
	...
   14000df86:	add    BYTE PTR [rax],al
   14000df88:	add    DWORD PTR [rax],eax
   14000df8a:	add    BYTE PTR [rax],al
   14000df8c:	(bad)  
   14000df8d:	fild   WORD PTR [rax]
	...
   14000dfa3:	add    BYTE PTR [rax+0xdf],cl
	...
   14000dfbd:	add    BYTE PTR [rax],al
   14000dfbf:	add    BYTE PTR [rax-0x10],al
   14000dfc2:	add    BYTE PTR [rax+0x1],al
	...
   14000dfcd:	add    BYTE PTR [rax],al
   14000dfcf:	add    BYTE PTR [rax+0xe0],cl
   14000dfd5:	add    BYTE PTR [rax],al
   14000dfd7:	add    BYTE PTR [rax],al
   14000dfd9:	add    BYTE PTR [rax],al
   14000dfdb:	add    BYTE PTR [rdx+0xe5],bl
   14000dfe1:	mov    al,0x0
   14000dfe3:	add    al,bh
   14000dfe5:	loopne 0x14000dfe7
	...
   14000dfef:	add    BYTE PTR [rax+0x700000e7],dh
   14000dff5:	mov    al,0x0
   14000dff7:	add    BYTE PTR [rax+0xe2],bh
   14000dffd:	add    BYTE PTR [rax],al
   14000dfff:	add    BYTE PTR [rax],al
   14000e001:	add    BYTE PTR [rax],al
   14000e003:	add    BYTE PTR [rax-0x18],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	xor    BYTE PTR [rdx-0x1d000000],dh
	...
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	sbb    dl,ch
   14000e01a:	add    BYTE PTR [rax],al
   14000e01c:	js     0x14000dfd0
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	push   rax
   14000e021:	in     al,0x0
	...
   14000e02b:	add    BYTE PTR [rsi],cl
   14000e02d:	jmp    0x14000e02f
   14000e02f:	add    al,cl
   14000e031:	mov    bl,0x0
   14000e033:	add    BYTE PTR [rax],ch
   14000e035:	loop   0x14000e037
	...
   14000e03f:	add    BYTE PTR [rax],bl
   14000e041:	jmp    0x14000e043
   14000e043:	add    BYTE PTR [rax-0x57ffff4f],ah
   14000e049:	loop   0x14000e04b
	...
   14000e053:	add    BYTE PTR [rdx],bh
   14000e055:	jmp    0x14000e057
   14000e057:	add    BYTE PTR [rax],ah
   14000e059:	mov    dl,0x0
   14000e05b:	add    BYTE PTR [rax],dh
   14000e05d:	in     al,0x0
	...
   14000e067:	add    BYTE PTR [rax-0x57ffff15],cl
   14000e06d:	mov    bl,0x0
	...
   14000e087:	add    BYTE PTR [rax+0xe4],ah
   14000e08d:	add    BYTE PTR [rax],al
   14000e08f:	add    BYTE PTR [rsi+0xe4],ch
   14000e095:	add    BYTE PTR [rax],al
   14000e097:	add    dl,al
   14000e099:	in     al,0x0
   14000e09b:	add    BYTE PTR [rax],al
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    dl,dl
   14000e0a1:	in     al,0x0
   14000e0a3:	add    BYTE PTR [rax],al
   14000e0a5:	add    BYTE PTR [rax],al
   14000e0a7:	add    dl,ah
   14000e0a9:	in     al,0x0
   14000e0ab:	add    BYTE PTR [rax],al
   14000e0ad:	add    BYTE PTR [rax],al
   14000e0af:	add    ah,dh
   14000e0b1:	in     al,0x0
   14000e0b3:	add    BYTE PTR [rax],al
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rsi],al
   14000e0b9:	in     eax,0x0
   14000e0bb:	add    BYTE PTR [rax],al
   14000e0bd:	add    BYTE PTR [rax],al
   14000e0bf:	add    BYTE PTR [rax],bl
   14000e0c1:	in     eax,0x0
   14000e0c3:	add    BYTE PTR [rax],al
   14000e0c5:	add    BYTE PTR [rax],al
   14000e0c7:	add    BYTE PTR [rax],ch
   14000e0c9:	in     eax,0x0
   14000e0cb:	add    BYTE PTR [rax],al
   14000e0cd:	add    BYTE PTR [rax],al
   14000e0cf:	add    BYTE PTR [rax-0x1b],al
   14000e0d2:	add    BYTE PTR [rax],al
   14000e0d4:	add    BYTE PTR [rax],al
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	push   rsi
   14000e0d9:	in     eax,0x0
   14000e0db:	add    BYTE PTR [rax],al
   14000e0dd:	add    BYTE PTR [rax],al
   14000e0df:	add    BYTE PTR [rbp+riz*8+0x0],ch
   14000e0e3:	add    BYTE PTR [rax],al
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rdx+0xe5],al
	...
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f7:	add    BYTE PTR [rdx],cl
   14000e0f9:	out    0x0,al
   14000e0fb:	add    BYTE PTR [rax],al
   14000e0fd:	add    BYTE PTR [rax],al
   14000e0ff:	add    BYTE PTR [rdx+0xe7],bl
   14000e105:	add    BYTE PTR [rax],al
   14000e107:	add    BYTE PTR [rdx+0xe7],cl
   14000e10d:	add    BYTE PTR [rax],al
   14000e10f:	add    BYTE PTR [rdx-0x19],bh
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	add    BYTE PTR [rax],al
   14000e116:	add    BYTE PTR [rax],al
   14000e118:	jb     0x14000e101
   14000e11a:	add    BYTE PTR [rax],al
   14000e11c:	add    BYTE PTR [rax],al
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	(bad)  
   14000e121:	out    0x0,eax
   14000e123:	add    BYTE PTR [rax],al
   14000e125:	add    BYTE PTR [rax],al
   14000e127:	add    dh,bh
   14000e129:	in     eax,0x0
   14000e12b:	add    BYTE PTR [rax],al
   14000e12d:	add    BYTE PTR [rax],al
   14000e12f:	add    BYTE PTR [rdi+riz*8+0x0],dl
   14000e133:	add    BYTE PTR [rax],al
   14000e135:	add    BYTE PTR [rax],al
   14000e137:	add    BYTE PTR [rsi],bh
   14000e139:	out    0x0,eax
   14000e13b:	add    BYTE PTR [rax],al
   14000e13d:	add    BYTE PTR [rax],al
   14000e13f:	add    BYTE PTR [rdi+riz*8],ch
   14000e142:	add    BYTE PTR [rax],al
   14000e144:	add    BYTE PTR [rax],al
   14000e146:	add    BYTE PTR [rax],al
   14000e148:	(bad)  
   14000e149:	out    0x0,eax
   14000e14b:	add    BYTE PTR [rax],al
   14000e14d:	add    BYTE PTR [rax],al
   14000e14f:	add    BYTE PTR [rdi+riz*8],cl
   14000e152:	add    BYTE PTR [rax],al
   14000e154:	add    BYTE PTR [rax],al
   14000e156:	add    BYTE PTR [rax],al
   14000e158:	mul    dh
   14000e15a:	add    BYTE PTR [rax],al
   14000e15c:	add    BYTE PTR [rax],al
   14000e15e:	add    BYTE PTR [rax],al
   14000e160:	loopne 0x14000e148
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	add    BYTE PTR [rax],al
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	(bad)  
   14000e169:	out    0x0,al
   14000e16b:	add    BYTE PTR [rax],al
   14000e16d:	add    BYTE PTR [rax],al
   14000e16f:	add    BYTE PTR [rsi+riz*8+0x0],ch
   14000e176:	add    BYTE PTR [rax],al
   14000e178:	xchg   esp,eax
   14000e179:	out    0x0,al
   14000e17b:	add    BYTE PTR [rax],al
   14000e17d:	add    BYTE PTR [rax],al
   14000e17f:	add    BYTE PTR [rsi+riz*8+0x0],bh
   14000e183:	add    BYTE PTR [rax],al
   14000e185:	add    BYTE PTR [rax],al
   14000e187:	add    BYTE PTR [rsi-0x1a],ah
   14000e18a:	add    BYTE PTR [rax],al
   14000e18c:	add    BYTE PTR [rax],al
   14000e18e:	add    BYTE PTR [rax],al
   14000e190:	push   rsp
   14000e191:	out    0x0,al
   14000e193:	add    BYTE PTR [rax],al
   14000e195:	add    BYTE PTR [rax],al
   14000e197:	add    BYTE PTR [rsi+riz*8+0x0],al
   14000e19b:	add    BYTE PTR [rax],al
   14000e19d:	add    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rdx],dh
   14000e1a1:	out    0x0,al
   14000e1a3:	add    BYTE PTR [rax],al
   14000e1a5:	add    BYTE PTR [rax],al
   14000e1a7:	add    dl,ch
   14000e1a9:	in     eax,0x0
   14000e1ab:	add    BYTE PTR [rax],al
   14000e1ad:	add    BYTE PTR [rax],al
   14000e1af:	add    al,bl
   14000e1b1:	in     eax,0x0
   14000e1b3:	add    BYTE PTR [rax],al
   14000e1b5:	add    BYTE PTR [rax],al
   14000e1b7:	add    dh,al
   14000e1b9:	in     eax,0x0
   14000e1bb:	add    BYTE PTR [rax],al
   14000e1bd:	add    BYTE PTR [rax],al
   14000e1bf:	add    BYTE PTR [rsi+0xe5],dh
   14000e1c5:	add    BYTE PTR [rax],al
   14000e1c7:	add    BYTE PTR [rax+0xe5],ch
   14000e1cd:	add    BYTE PTR [rax],al
   14000e1cf:	add    BYTE PTR [rsi+riz*8],bl
   14000e1d2:	add    BYTE PTR [rax],al
   14000e1d4:	add    BYTE PTR [rax],al
   14000e1d6:	add    BYTE PTR [rax],al
   14000e1d8:	xchg   edx,eax
   14000e1d9:	jmp    0x14000e1db
   14000e1db:	add    BYTE PTR [rax],al
   14000e1dd:	add    BYTE PTR [rax],al
   14000e1df:	add    BYTE PTR [rbx+rbp*8+0x0],ah
   14000e1e6:	add    BYTE PTR [rax],al
   14000e1e8:	shr    bl,0x0
   14000e1eb:	add    BYTE PTR [rax],al
   14000e1ed:	add    BYTE PTR [rax],al
   14000e1ef:	add    dh,bl
   14000e1f1:	jmp    0x14000e1f3
   14000e1f3:	add    BYTE PTR [rax],al
   14000e1f5:	add    BYTE PTR [rax],al
   14000e1f7:	add    dl,dh
   14000e1f9:	jmp    0x14000e1fb
   14000e1fb:	add    BYTE PTR [rax],al
   14000e1fd:	add    BYTE PTR [rax],al
   14000e1ff:	add    BYTE PTR [rsi],al
   14000e201:	in     al,dx
   14000e202:	add    BYTE PTR [rax],al
   14000e204:	add    BYTE PTR [rax],al
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	and    ah,ch
   14000e20a:	add    BYTE PTR [rax],al
   14000e20c:	add    BYTE PTR [rax],al
   14000e20e:	add    BYTE PTR [rax],al
   14000e210:	cmp    ch,ah
   14000e212:	add    BYTE PTR [rax],al
   14000e214:	add    BYTE PTR [rax],al
   14000e216:	add    BYTE PTR [rax],al
   14000e218:	rex.WX in al,dx
	...
   14000e226:	add    BYTE PTR [rax],al
   14000e228:	movabs ds:0x1480000000000000,eax
   14000e231:	add    BYTE PTR [rax],al
   14000e233:	add    BYTE PTR [rax],al
   14000e235:	add    BYTE PTR [rax],al
   14000e237:	or     BYTE PTR [rdi],0x0
   14000e23a:	add    BYTE PTR [rax],al
   14000e23c:	add    BYTE PTR [rax],al
   14000e23e:	add    BYTE PTR [rax+0x10],al
   14000e244:	add    BYTE PTR [rax],al
   14000e246:	add    BYTE PTR [rax+0x15],al
   14000e24c:	add    BYTE PTR [rax],al
   14000e24e:	add    BYTE PTR [rax+0x16],al
   14000e254:	add    BYTE PTR [rax],al
   14000e256:	add    BYTE PTR [rax+0x6],al
   14000e25c:	add    BYTE PTR [rax],al
   14000e25e:	add    BYTE PTR [rax+0x115],al
   14000e264:	add    BYTE PTR [rax],al
   14000e266:	add    BYTE PTR [rax+0x7],al
   14000e26c:	add    BYTE PTR [rax],al
   14000e26e:	add    BYTE PTR [rax+0x95],al
   14000e274:	add    BYTE PTR [rax],al
   14000e276:	add    BYTE PTR [rax+0xa2],al
   14000e27c:	add    BYTE PTR [rax],al
   14000e27e:	add    BYTE PTR [rax+0xa1],al
   14000e284:	add    BYTE PTR [rax],al
   14000e286:	add    BYTE PTR [rax+0x13],al
   14000e28c:	add    BYTE PTR [rax],al
   14000e28e:	add    BYTE PTR [rax+0x2],al
   14000e294:	add    BYTE PTR [rax],al
   14000e296:	add    BYTE PTR [rax+0xba],al
   14000e29c:	add    BYTE PTR [rax],al
   14000e29e:	add    BYTE PTR [rax+0x0],al
   14000e2a4:	add    BYTE PTR [rax],al
   14000e2a6:	add    BYTE PTR [rax],al
   14000e2a8:	es jmp 0x14000e2ab
	...
   14000e2b7:	add    dh,ah
   14000e2b9:	out    0x0,eax
   14000e2bb:	add    BYTE PTR [rax],al
   14000e2bd:	add    BYTE PTR [rax],al
   14000e2bf:	add    dl,cl
   14000e2c1:	out    0x0,eax
   14000e2c3:	add    BYTE PTR [rax],al
   14000e2c5:	add    BYTE PTR [rax],al
   14000e2c7:	add    BYTE PTR [rsi+0xe7],bh
   14000e2cd:	add    BYTE PTR [rax],al
   14000e2cf:	add    ah,bh
   14000e2d1:	out    0x0,eax
   14000e2d3:	add    BYTE PTR [rax],al
   14000e2d5:	add    BYTE PTR [rax],al
   14000e2d7:	add    BYTE PTR [rdx],cl
   14000e2d9:	call   0x14000e2de
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	sbb    al,ch
   14000e2e2:	add    BYTE PTR [rax],al
   14000e2e4:	add    BYTE PTR [rax],al
   14000e2e6:	add    BYTE PTR [rax],al
   14000e2e8:	(bad)  
   14000e2e9:	in     al,dx
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	add    BYTE PTR [rax],al
   14000e2ee:	add    BYTE PTR [rax],al
   14000e2f0:	sub    al,0xe8
	...
   14000e2fe:	add    BYTE PTR [rax],al
   14000e300:	mov    ch,cl
   14000e302:	add    BYTE PTR [rax],al
   14000e304:	add    BYTE PTR [rax],al
   14000e306:	add    BYTE PTR [rax],al
   14000e308:	xchg   esp,eax
   14000e309:	jmp    0x14000e30e
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	test   al,0xe9
   14000e312:	add    BYTE PTR [rax],al
   14000e314:	add    BYTE PTR [rax],al
   14000e316:	add    BYTE PTR [rax],al
   14000e318:	mov    ah,0xe9
   14000e31a:	add    BYTE PTR [rax],al
   14000e31c:	add    BYTE PTR [rax],al
   14000e31e:	add    BYTE PTR [rax],al
   14000e320:	int3   
   14000e321:	jmp    0x14000e326
   14000e326:	add    BYTE PTR [rax],al
   14000e328:	(bad)  
   14000e329:	jmp    0x14000e32e
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	loopne 0x14000e31b
   14000e332:	add    BYTE PTR [rax],al
   14000e334:	add    BYTE PTR [rax],al
   14000e336:	add    BYTE PTR [rax],al
   14000e338:	in     al,dx
   14000e339:	jmp    0x14000e33e
   14000e33e:	add    BYTE PTR [rax],al
   14000e340:	add    dl,ch
   14000e342:	add    BYTE PTR [rax],al
   14000e344:	add    BYTE PTR [rax],al
   14000e346:	add    BYTE PTR [rax],al
   14000e348:	and    al,0xea
   14000e34a:	add    BYTE PTR [rax],al
   14000e34c:	add    BYTE PTR [rax],al
   14000e34e:	add    BYTE PTR [rax],al
   14000e350:	cs (bad) 
   14000e352:	add    BYTE PTR [rax],al
   14000e354:	add    BYTE PTR [rax],al
   14000e356:	add    BYTE PTR [rax],al
   14000e358:	cmp    dl,ch
   14000e35a:	add    BYTE PTR [rax],al
   14000e35c:	add    BYTE PTR [rax],al
   14000e35e:	add    BYTE PTR [rax],al
   14000e360:	mov    ch,ah
   14000e362:	add    BYTE PTR [rax],al
   14000e364:	add    BYTE PTR [rax],al
   14000e366:	add    BYTE PTR [rax],al
   14000e368:	rex (bad) 
   14000e36a:	add    BYTE PTR [rax],al
   14000e36c:	add    BYTE PTR [rax],al
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	rex.WX (bad) 
   14000e372:	add    BYTE PTR [rax],al
   14000e374:	add    BYTE PTR [rax],al
   14000e376:	add    BYTE PTR [rax],al
   14000e378:	pop    rax
   14000e379:	(bad)  
   14000e37a:	add    BYTE PTR [rax],al
   14000e37c:	add    BYTE PTR [rax],al
   14000e37e:	add    BYTE PTR [rax],al
   14000e380:	je     0x14000e36e
   14000e382:	add    BYTE PTR [rax],al
   14000e384:	add    BYTE PTR [rax],al
   14000e386:	add    BYTE PTR [rax],al
   14000e388:	(bad)  
   14000e389:	jmp    0x14000e38e
   14000e38e:	add    BYTE PTR [rax],al
   14000e390:	jp     0x14000e37b
   14000e392:	add    BYTE PTR [rax],al
   14000e394:	add    BYTE PTR [rax],al
   14000e396:	add    BYTE PTR [rax],al
   14000e398:	push   0xe9
   14000e39d:	add    BYTE PTR [rax],al
   14000e39f:	add    BYTE PTR [rsi-0x17],dl
   14000e3a2:	add    BYTE PTR [rax],al
   14000e3a4:	add    BYTE PTR [rax],al
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	jmp    0x14000e3ae
   14000e3ae:	add    BYTE PTR [rax],al
   14000e3b0:	cmp    ch,cl
   14000e3b2:	add    BYTE PTR [rax],al
   14000e3b4:	add    BYTE PTR [rax],al
   14000e3b6:	add    BYTE PTR [rax],al
   14000e3b8:	and    al,0xe9
   14000e3ba:	add    BYTE PTR [rax],al
   14000e3bc:	add    BYTE PTR [rax],al
   14000e3be:	add    BYTE PTR [rax],al
   14000e3c0:	sbb    cl,ch
   14000e3c2:	add    BYTE PTR [rax],al
   14000e3c4:	add    BYTE PTR [rax],al
   14000e3c6:	add    BYTE PTR [rax],al
   14000e3c8:	cli    
   14000e3c9:	call   0x14000e3ce
   14000e3ce:	add    BYTE PTR [rax],al
   14000e3d0:	loop   0x14000e3ba
   14000e3d2:	add    BYTE PTR [rax],al
   14000e3d4:	add    BYTE PTR [rax],al
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	(bad)  
   14000e3d9:	call   0x14000e3de
   14000e3de:	add    BYTE PTR [rax],al
   14000e3e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e3e1:	call   0x14000e3e6
   14000e3e6:	add    BYTE PTR [rax],al
   14000e3e8:	(bad)  
   14000e3e9:	call   0x14000e3ee
   14000e3ee:	add    BYTE PTR [rax],al
   14000e3f0:	mov    gs,eax
   14000e3f2:	add    BYTE PTR [rax],al
   14000e3f4:	add    BYTE PTR [rax],al
   14000e3f6:	add    BYTE PTR [rax],al
   14000e3f8:	(bad)  
   14000e3f9:	call   0x14000e3fe
   14000e3fe:	add    BYTE PTR [rax],al
   14000e400:	jbe    0x14000e3ea
   14000e402:	add    BYTE PTR [rax],al
   14000e404:	add    BYTE PTR [rax],al
   14000e406:	add    BYTE PTR [rax],al
   14000e408:	push   0xffffffffffffffe8
   14000e40a:	add    BYTE PTR [rax],al
   14000e40c:	add    BYTE PTR [rax],al
   14000e40e:	add    BYTE PTR [rax],al
   14000e410:	(bad)  
   14000e411:	call   0x14000e416
   14000e416:	add    BYTE PTR [rax],al
   14000e418:	push   rsp
   14000e419:	call   0x14000e41e
   14000e41e:	add    BYTE PTR [rax],al
   14000e420:	rex.WR call 0x14000e426
	...
   14000e42e:	add    BYTE PTR [rax],al
   14000e430:	je     0x14000e41d
   14000e432:	add    BYTE PTR [rax],al
   14000e434:	add    BYTE PTR [rax],al
   14000e436:	add    BYTE PTR [rax],al
   14000e438:	pop    rdx
   14000e439:	jmp    0x14000e43b
   14000e43b:	add    BYTE PTR [rax],al
   14000e43d:	add    BYTE PTR [rax],al
   14000e43f:	add    BYTE PTR [rsi-0x15],al
	...
   14000e44e:	add    BYTE PTR [rax],al
   14000e450:	loopne 0x14000e43c
   14000e452:	add    BYTE PTR [rax],al
   14000e454:	add    BYTE PTR [rax],al
   14000e456:	add    BYTE PTR [rax],al
   14000e458:	(bad)  
   14000e459:	(bad)  
   14000e45a:	add    BYTE PTR [rax],al
   14000e45c:	add    BYTE PTR [rax],al
   14000e45e:	add    BYTE PTR [rax],al
   14000e460:	mov    esp,0xea
   14000e465:	add    BYTE PTR [rax],al
   14000e467:	add    al,bh
   14000e469:	(bad)  
   14000e46a:	add    BYTE PTR [rax],al
   14000e46c:	add    BYTE PTR [rax],al
   14000e46e:	add    BYTE PTR [rax],al
   14000e470:	cwde   
   14000e471:	(bad)  
   14000e472:	add    BYTE PTR [rax],al
   14000e474:	add    BYTE PTR [rax],al
   14000e476:	add    BYTE PTR [rax],al
   14000e478:	xchg   dl,ch
   14000e47a:	add    BYTE PTR [rax],al
   14000e47c:	add    BYTE PTR [rax],al
   14000e47e:	add    BYTE PTR [rax],al
   14000e480:	jb     0x14000e46c
   14000e482:	add    BYTE PTR [rax],al
   14000e484:	add    BYTE PTR [rax],al
   14000e486:	add    BYTE PTR [rax],al
   14000e488:	(bad)  
   14000e489:	(bad)  
   14000e48a:	add    BYTE PTR [rax],al
   14000e48c:	add    BYTE PTR [rax],al
   14000e48e:	add    BYTE PTR [rax],al
   14000e490:	lods   al,BYTE PTR ds:[rsi]
   14000e491:	(bad)  
	...
   14000e49e:	add    BYTE PTR [rax],al
   14000e4a0:	push   rbp
   14000e4a1:	add    dl,BYTE PTR [rdx+0x65]
   14000e4a4:	rex.XB ins BYTE PTR es:[edi],dx
   14000e4a7:	outs   dx,DWORD PTR ds:[rsi]
   14000e4a8:	jae    0x14000e50f
   14000e4aa:	rex.WXB
   14000e4ab:	gs jns 0x14000e4ae
   14000e4ae:	lea    eax,[rdx]
   14000e4b0:	push   rdx
   14000e4b1:	gs addr32 push rcx
   14000e4b4:	jne    0x14000e51b
   14000e4b6:	jb     0x14000e531
   14000e4b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e4ba:	outs   dx,WORD PTR ds:[rsi]
   14000e4bc:	rex.WXB
   14000e4bd:	gs jns 0x14000e517
   14000e4c0:	add    BYTE PTR [rax],al
   14000e4c2:	je     0x14000e4c6
   14000e4c4:	push   rdx
   14000e4c5:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000e4c9:	jne    0x14000e538
   14000e4cb:	rex.WXB
   14000e4cc:	gs jns 0x14000e514
   14000e4cf:	js     0x14000e528
   14000e4d1:	add    BYTE PTR [rsi+0x67655202],al
   14000e4d7:	rex.WRXB jo 0x14000e53f
   14000e4da:	outs   dx,BYTE PTR ds:[rsi]
   14000e4db:	rex.WXB
   14000e4dc:	gs jns 0x14000e524
   14000e4df:	js     0x14000e538
   14000e4e1:	add    BYTE PTR [rbx+0x67655202],ah
   14000e4e7:	push   rbx
   14000e4e8:	gs je  0x14000e541
   14000e4eb:	(bad)  
   14000e4ec:	ins    BYTE PTR es:[rdi],dx
   14000e4ed:	jne    0x14000e554
   14000e4ef:	rex.RB js 0x14000e549
   14000e4f2:	add    BYTE PTR [rax],al
   14000e4f4:	pop    rsi
   14000e4f5:	add    dl,BYTE PTR [rdx+0x65]
   14000e4f8:	addr32 rex.XB jb 0x14000e561
   14000e4fc:	(bad)  
   14000e4fd:	je     0x14000e564
   14000e4ff:	rex.WXB
   14000e500:	gs jns 0x14000e548
   14000e503:	js     0x14000e55c
   14000e505:	add    BYTE PTR [rbp+0x2],ch
   14000e508:	push   rdx
   14000e509:	gs addr32 rex.R
   14000e50c:	gs ins BYTE PTR es:[rdi],dx
   14000e50e:	gs je  0x14000e576
   14000e511:	push   rsi
   14000e512:	(bad)  
   14000e513:	ins    BYTE PTR es:[rdi],dx
   14000e514:	jne    0x14000e57b
   14000e516:	push   rdi
   14000e517:	add    BYTE PTR [rax],ah
   14000e519:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   14000e51d:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000e520:	gs jae 0x14000e596
   14000e523:	(bad)  
   14000e524:	add    BYTE PTR gs:[eax],al
   14000e528:	jb     0x14000e52b
   14000e52a:	rex.RXB
   14000e52b:	gs je  0x14000e582
   14000e52e:	jb     0x14000e591
   14000e530:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000e533:	outs   dx,DWORD PTR ds:[rsi]
   14000e534:	addr32 addr32 gs jb 0x14000e581
   14000e539:	(bad)  
   14000e53a:	outs   dx,BYTE PTR ds:[rsi]
   14000e53b:	fs ins BYTE PTR es:[rdi],dx
   14000e53d:	add    BYTE PTR gs:[rax],al
   14000e540:	jno    0x14000e543
   14000e542:	rex.RXB
   14000e543:	gs je  0x14000e59a
   14000e546:	jb     0x14000e5a9
   14000e548:	movsxd esp,DWORD PTR [rbp+0x45]
   14000e54b:	outs   dx,BYTE PTR ds:[rsi]
   14000e54c:	(bad)  
   14000e54d:	(bad)  
   14000e54e:	ins    BYTE PTR es:[rdi],dx
   14000e54f:	gs rex.WR
   14000e551:	gs jbe 0x14000e5b9
   14000e554:	ins    BYTE PTR es:[rdi],dx
   14000e555:	add    BYTE PTR [rax+0x1],dh
   14000e558:	rex.RXB
   14000e559:	gs je  0x14000e5b0
   14000e55c:	jb     0x14000e5bf
   14000e55e:	movsxd esp,DWORD PTR [rbp+0x45]
   14000e561:	outs   dx,BYTE PTR ds:[rsi]
   14000e562:	(bad)  
   14000e563:	(bad)  
   14000e564:	ins    BYTE PTR es:[rdi],dx
   14000e565:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000e568:	(bad)  
   14000e569:	addr32 jae 0x14000e56c
   14000e56c:	scas   eax,DWORD PTR es:[rdi]
   14000e56d:	add    dl,BYTE PTR [rdx+0x65]
   14000e570:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000e578:	(bad)  
   14000e579:	movsxd esp,DWORD PTR [rbp+0x47]
   14000e57c:	jne    0x14000e5e7
   14000e57e:	fs jae 0x14000e5d8
   14000e581:	add    BYTE PTR [rip+0x726e5503],ch        # 0x1b26f3a8a
   14000e587:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000e590:	(bad)  
   14000e591:	movsxd esp,DWORD PTR [rbp+0x47]
   14000e594:	jne    0x14000e5ff
   14000e596:	fs jae 0x14000e599
   14000e599:	add    BYTE PTR [rcx+0x44],al
   14000e59c:	push   rsi
   14000e59d:	push   r8
   14000e59f:	xor    rsi,QWORD PTR [r10]
   14000e5a2:	cs fs ins BYTE PTR es:[rdi],dx
   14000e5a5:	ins    BYTE PTR es:[rdi],dx
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e5a9:	add    DWORD PTR [rsi+0x72],eax
   14000e5ac:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   14000e5b6:	push   rdi
   14000e5b7:	add    al,BYTE PTR [rdi+0x65]
   14000e5ba:	je     0x14000e608
   14000e5bc:	(bad)  
   14000e5bd:	jae    0x14000e633
   14000e5bf:	rex.RB jb 0x14000e634
   14000e5c2:	outs   dx,DWORD PTR ds:[rsi]
   14000e5c3:	jb     0x14000e5c5
   14000e5c5:	add    BYTE PTR [rbp+0x74654702],ah
   14000e5cb:	push   rax
   14000e5cc:	jb     0x14000e63d
   14000e5ce:	movsxd eax,DWORD PTR [rcx+0x64]
   14000e5d1:	fs jb  0x14000e639
   14000e5d4:	jae    0x14000e649
   14000e5d6:	add    BYTE PTR [rax],al
   14000e5d8:	scas   al,BYTE PTR es:[rdi]
   14000e5d9:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14000e5dd:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000e5e6:	js     0x14000e63f
   14000e5e8:	add    BYTE PTR [rax],al
   14000e5ea:	outs   dx,BYTE PTR ds:[rsi]
   14000e5eb:	add    al,BYTE PTR [rdi+0x65]
   14000e5ee:	je     0x14000e63d
   14000e5f0:	outs   dx,DWORD PTR ds:[rsi]
   14000e5f1:	fs jne 0x14000e660
   14000e5f4:	gs rex.W (bad) 
   14000e5f7:	outs   dx,BYTE PTR ds:[rsi]
   14000e5f8:	fs ins BYTE PTR es:[rdi],dx
   14000e5fa:	gs push rdi
   14000e5fc:	add    BYTE PTR [rax],al
   14000e5fe:	and    eax,0x74736c06
   14000e603:	jb     0x14000e668
   14000e605:	ins    DWORD PTR es:[rdi],dx
   14000e606:	jo     0x14000e671
   14000e608:	push   rdi
   14000e609:	add    BYTE PTR [rsp+rax*1+0x52],cl
   14000e60d:	(bad)  
   14000e60e:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000e615:	jo     0x14000e68b
   14000e617:	imul   ebp,DWORD PTR [rdi+0x6e],0x3d80000
   14000e61e:	rex.WRB jne 0x14000e68d
   14000e621:	je     0x14000e68c
   14000e623:	rex.X jns 0x14000e69a
   14000e626:	gs push rsp
   14000e628:	outs   dx,DWORD PTR ds:[rsi]
   14000e629:	push   rdi
   14000e62a:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14000e632:	ins    BYTE PTR es:[rdi],dx
   14000e633:	add    eax,0x657a6953
   14000e638:	outs   dx,DWORD PTR ds:[rsi]
   14000e639:	push   dx
   14000e63b:	gs jae 0x14000e6ad
   14000e63e:	jne    0x14000e6b2
   14000e640:	movsxd esp,DWORD PTR [rbp+0x0]
   14000e643:	add    BYTE PTR [rdx+0x616f4c03],dh
   14000e649:	fs push rdx
   14000e64b:	gs jae 0x14000e6bd
   14000e64e:	jne    0x14000e6c2
   14000e650:	movsxd esp,DWORD PTR [rbp+0x0]
   14000e653:	add    BYTE PTR [rsi+0x6e694601],cl
   14000e659:	fs push rdx
   14000e65b:	gs jae 0x14000e6cd
   14000e65e:	jne    0x14000e6d2
   14000e660:	movsxd esp,DWORD PTR [rbp+0x45]
   14000e663:	js     0x14000e6bc
   14000e665:	add    BYTE PTR [rdx+0x2],ch
   14000e668:	rex.RXB
   14000e669:	gs je  0x14000e6b9
   14000e66c:	outs   dx,DWORD PTR ds:[rsi]
   14000e66d:	fs jne 0x14000e6dc
   14000e670:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000e67a:	add    BYTE PTR [rax],al
   14000e67c:	add    eax,0x6c654401
   14000e681:	gs je  0x14000e6e9
   14000e684:	rex.XB jb 0x14000e6f0
   14000e687:	je     0x14000e6f2
   14000e689:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e68c:	push   rbx
   14000e68d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000e692:	outs   dx,BYTE PTR ds:[rsi]
   14000e693:	add    BYTE PTR [rcx],ch
   14000e695:	add    DWORD PTR [rbp+0x6e],eax
   14000e698:	je     0x14000e6ff
   14000e69a:	jb     0x14000e6df
   14000e69c:	jb     0x14000e707
   14000e69e:	je     0x14000e709
   14000e6a0:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e6a3:	push   rbx
   14000e6a4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000e6a9:	outs   dx,BYTE PTR ds:[rsi]
   14000e6aa:	add    BYTE PTR [rax],al
   14000e6ac:	test   eax,0x61654c03
   14000e6b1:	jbe    0x14000e718
   14000e6b3:	rex.XB jb 0x14000e71f
   14000e6b6:	je     0x14000e721
   14000e6b8:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e6bb:	push   rbx
   14000e6bc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000e6c1:	outs   dx,BYTE PTR ds:[rsi]
   14000e6c2:	add    BYTE PTR [rax],al
   14000e6c4:	push   rsp
   14000e6c5:	add    ecx,DWORD PTR [rcx+0x6e]
   14000e6c8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000e6d0:	rex.XB jb 0x14000e73c
   14000e6d3:	je     0x14000e73e
   14000e6d5:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e6d8:	push   rbx
   14000e6d9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000e6de:	outs   dx,BYTE PTR ds:[rsi]
   14000e6df:	add    BYTE PTR [rdx+rax*1+0x47],ch
   14000e6e3:	gs je  0x14000e733
   14000e6e6:	outs   dx,DWORD PTR ds:[rsi]
   14000e6e7:	fs jne 0x14000e756
   14000e6ea:	gs rex.W (bad) 
   14000e6ed:	outs   dx,BYTE PTR ds:[rsi]
   14000e6ee:	fs ins BYTE PTR es:[rdi],dx
   14000e6f0:	gs rex.RB js 0x14000e735
   14000e6f4:	add    BYTE PTR [rax],al
   14000e6f6:	adc    DWORD PTR [rdx],eax
   14000e6f8:	rex.RXB
   14000e6f9:	gs je  0x14000e73f
   14000e6fc:	jne    0x14000e770
   14000e6fe:	jb     0x14000e765
   14000e700:	outs   dx,BYTE PTR ds:[rsi]
   14000e701:	je     0x14000e753
   14000e703:	jb     0x14000e774
   14000e705:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e708:	jae    0x14000e753
   14000e70a:	fs add dl,bl
   14000e70d:	add    BYTE PTR [rbx+0x72],al
   14000e710:	gs (bad) 
   14000e712:	je     0x14000e779
   14000e714:	push   rax
   14000e715:	jb     0x14000e786
   14000e717:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e71a:	jae    0x14000e773
   14000e71c:	add    BYTE PTR [rax],al
   14000e71e:	jge    0x14000e720
   14000e720:	rex.XB ins BYTE PTR es:[rdi],dx
   14000e722:	outs   dx,DWORD PTR ds:[rsi]
   14000e723:	jae    0x14000e78a
   14000e725:	rex.W (bad) 
   14000e727:	outs   dx,BYTE PTR ds:[rsi]
   14000e728:	fs ins BYTE PTR es:[rdi],dx
   14000e72a:	add    BYTE PTR gs:[rcx+0x6d6f4300],dl
   14000e731:	jo     0x14000e794
   14000e733:	jb     0x14000e79a
   14000e735:	push   rbx
   14000e736:	je     0x14000e7aa
   14000e738:	imul   ebp,DWORD PTR [rsi+0x67],0x15000057
   14000e73f:	add    al,BYTE PTR [rdi+0x65]
   14000e742:	je     0x14000e787
   14000e744:	jne    0x14000e7b8
   14000e746:	jb     0x14000e7ad
   14000e748:	outs   dx,BYTE PTR ds:[rsi]
   14000e749:	je     0x14000e79f
   14000e74b:	push   0x64616572
   14000e750:	rex.WB
   14000e751:	add    BYTE PTR fs:[rax],al
   14000e754:	or     BYTE PTR [rip+0x45746553],al        # 0x185754cad
   14000e75a:	jbe    0x14000e7c1
   14000e75c:	outs   dx,BYTE PTR ds:[rsi]
   14000e75d:	je     0x14000e75f
   14000e75f:	add    al,dl
   14000e761:	add    DWORD PTR [rdi+0x65],eax
   14000e764:	je     0x14000e7a9
   14000e766:	outs   dx,DWORD PTR ds:[rsi]
   14000e767:	ins    DWORD PTR es:[rdi],dx
   14000e768:	ins    DWORD PTR es:[rdi],dx
   14000e769:	(bad)  
   14000e76a:	outs   dx,BYTE PTR ds:[rsi]
   14000e76b:	imul   r13,QWORD PTR fs:[rsi+0x65],0x56d0057
   14000e774:	push   rbx
   14000e775:	ins    BYTE PTR es:[rdi],dx
   14000e776:	gs gs jo 0x14000e77a
   14000e77a:	mov    ah,0x0
   14000e77c:	rex.XB jb 0x14000e7e4
   14000e77f:	(bad)  
   14000e780:	je     0x14000e7e7
   14000e782:	rex.RB jbe 0x14000e7ea
   14000e785:	outs   dx,BYTE PTR ds:[rsi]
   14000e786:	je     0x14000e7df
   14000e788:	add    BYTE PTR [rax],al
   14000e78a:	out    0x0,al
   14000e78c:	rex.XB jb 0x14000e7f4
   14000e78f:	(bad)  
   14000e790:	je     0x14000e7f7
   14000e792:	push   rsp
   14000e793:	push   0x64616572
   14000e798:	add    BYTE PTR [rax],al
   14000e79a:	enter  0x5705,0x61
   14000e79e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000e7a6:	ins    BYTE PTR es:[edi],dx
   14000e7a8:	gs rex.WRXB (bad) 
   14000e7ab:	push   0x65
   14000e7ad:	movsxd esi,DWORD PTR [rax+rax*1+0x4b]
   14000e7b1:	rex.RB push r10
   14000e7b3:	rex.WRX
   14000e7b4:	rex.RB
   14000e7b5:	xor    r14,QWORD PTR [rdx]
   14000e7b8:	cs fs ins BYTE PTR es:[rdi],dx
   14000e7bb:	ins    BYTE PTR es:[rdi],dx
   14000e7bc:	add    BYTE PTR [rax],al
   14000e7be:	xor    DWORD PTR [rax],eax
   14000e7c0:	rex.XB push 0x654e7261
   14000e7c6:	js     0x14000e83c
   14000e7c8:	push   rdi
   14000e7c9:	add    BYTE PTR [rsi],al
   14000e7cb:	add    BYTE PTR [rcx+0x6c],al
   14000e7ce:	ins    BYTE PTR es:[rdi],dx
   14000e7cf:	outs   dx,DWORD PTR ds:[rsi]
   14000e7d0:	ja     0x14000e825
   14000e7d2:	gs je  0x14000e81b
   14000e7d5:	outs   dx,DWORD PTR ds:[rsi]
   14000e7d6:	jb     0x14000e83d
   14000e7d8:	addr32 jb 0x14000e84a
   14000e7db:	jne    0x14000e84b
   14000e7dd:	fs push rdi
   14000e7df:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000e7e6:	xchg   BYTE PTR [rdx],al
   14000e7e8:	push   rax
   14000e7e9:	outs   dx,DWORD PTR ds:[rsi]
   14000e7ea:	jae    0x14000e860
   14000e7ec:	push   rsp
   14000e7ed:	push   0x64616572
   14000e7f2:	rex.WRB
   14000e7f3:	gs jae 0x14000e869
   14000e7f6:	(bad)  
   14000e7f7:	addr32 gs push rdi
   14000e7fa:	add    BYTE PTR [rax],al
   14000e7fc:	cmp    al,0x0
   14000e7fe:	rex.XB push 0x70557261
   14000e804:	jo     0x14000e86b
   14000e806:	jb     0x14000e85f
   14000e808:	add    BYTE PTR [rax],al
   14000e80a:	js     0x14000e80d
   14000e80c:	rex.RXB
   14000e80d:	gs je  0x14000e85d
   14000e810:	gs jae 0x14000e886
   14000e813:	(bad)  
   14000e814:	addr32 gs push rdi
   14000e817:	add    BYTE PTR [rbx+0x3],ch
   14000e81a:	push   rsp
   14000e81b:	jb     0x14000e87e
   14000e81d:	outs   dx,BYTE PTR ds:[rsi]
   14000e81e:	jae    0x14000e88c
   14000e820:	(bad)  
   14000e821:	je     0x14000e888
   14000e823:	rex.WRB
   14000e824:	gs jae 0x14000e89a
   14000e827:	(bad)  
   14000e828:	add    BYTE PTR gs:[eax],al
   14000e82c:	mov    dh,0x0
   14000e82e:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   14000e836:	rex.WRB
   14000e837:	gs jae 0x14000e8ad
   14000e83a:	(bad)  
   14000e83b:	addr32 gs push rdi
   14000e83e:	add    BYTE PTR [rax],al
   14000e840:	push   rbp
   14000e841:	push   rbx
   14000e842:	rex.RB push r10
   14000e844:	xor    esi,DWORD PTR [rdx]
   14000e846:	cs fs ins BYTE PTR es:[rdi],dx
   14000e849:	ins    BYTE PTR es:[rdi],dx
   14000e84a:	add    BYTE PTR [rax],al
   14000e84c:	rex.WR add al,0x66
   14000e84f:	jb     0x14000e8b6
   14000e851:	add    BYTE PTR gs:[rax],al
   14000e854:	or     eax,0x73637705
   14000e859:	outs   dx,BYTE PTR ds:[rsi]
   14000e85a:	movsxd esi,DWORD PTR [rax+0x79]
   14000e85d:	pop    rdi
   14000e85e:	jae    0x14000e860
   14000e860:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000e867:	movsxd eax,DWORD PTR [rax]
   14000e869:	add    BYTE PTR [rbx+0x6d656d04],dl
   14000e86f:	movsxd esi,DWORD PTR [rax+0x79]
   14000e872:	pop    rdi
   14000e873:	jae    0x14000e875
   14000e875:	add    BYTE PTR [rip+0x73637705],al        # 0x1b3645f80
   14000e87b:	movsxd esi,DWORD PTR [rax+0x79]
   14000e87e:	pop    rdi
   14000e87f:	jae    0x14000e881
   14000e881:	add    BYTE PTR [rax],al
   14000e883:	add    eax,0x63736377
   14000e888:	(bad)  
   14000e889:	je     0x14000e8ea
   14000e88b:	jae    0x14000e88d
   14000e88d:	add    BYTE PTR [rsi+0x75705f02],bl
   14000e893:	jb     0x14000e8fa
   14000e895:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e898:	ins    BYTE PTR es:[rdi],dx
   14000e899:	add    BYTE PTR [rsi+0x6d656d04],dl
   14000e89f:	jae    0x14000e906
   14000e8a1:	je     0x14000e8a3
   14000e8a3:	add    BYTE PTR [rbx],cl
   14000e8a5:	add    BYTE PTR [rdi],bh
   14000e8a7:	(bad)  
   14000e8a8:	xor    BYTE PTR [rbp+0x78],ah
   14000e8ab:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e8ae:	je     0x14000e919
   14000e8b0:	outs   dx,DWORD PTR ds:[rsi]
   14000e8b1:	outs   dx,BYTE PTR ds:[rsi]
   14000e8b2:	rex
   14000e8b3:	rex push rcx
   14000e8b5:	rex.RB
   14000e8b6:	rex.B
   14000e8b7:	rex.B
   14000e8b8:	rex
   14000e8b9:	rex.B
   14000e8ba:	rex.RB
   14000e8bb:	rex.X push rcx
   14000e8bd:	rex.RB
   14000e8be:	rex.X
   14000e8bf:	rex.R
   14000e8c0:	rex.W
   14000e8c1:	rex pop rdx
   14000e8c3:	add    BYTE PTR [rax+rax*1],cl
   14000e8c6:	(bad)  
   14000e8c7:	(bad)  
   14000e8c8:	xor    BYTE PTR [rbp+0x78],ah
   14000e8cb:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e8ce:	je     0x14000e939
   14000e8d0:	outs   dx,DWORD PTR ds:[rsi]
   14000e8d1:	outs   dx,BYTE PTR ds:[rsi]
   14000e8d2:	rex
   14000e8d3:	rex push rcx
   14000e8d5:	rex.RB
   14000e8d6:	rex.B
   14000e8d7:	rex.B
   14000e8d8:	rex
   14000e8d9:	rex.B
   14000e8da:	rex.RB
   14000e8db:	rex.X push rsi
   14000e8dd:	xor    BYTE PTR [rax+0x40],al
   14000e8e0:	pop    rdx
   14000e8e1:	add    BYTE PTR [rcx],dl
   14000e8e3:	add    BYTE PTR [rdi],bh
   14000e8e5:	(bad)  
   14000e8e6:	xor    DWORD PTR [rbp+0x78],esp
   14000e8e9:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e8ec:	je     0x14000e957
   14000e8ee:	outs   dx,DWORD PTR ds:[rsi]
   14000e8ef:	outs   dx,BYTE PTR ds:[rsi]
   14000e8f0:	rex
   14000e8f1:	rex push rbp
   14000e8f3:	rex.RB
   14000e8f4:	rex.B
   14000e8f5:	rex.B
   14000e8f6:	rex pop rax
   14000e8f8:	pop    rdx
   14000e8f9:	add    BYTE PTR [rcx],dh
   14000e8fb:	add    BYTE PTR [rdi],bh
   14000e8fd:	ja     0x14000e967
   14000e8ff:	(bad)  
   14000e900:	je     0x14000e942
   14000e902:	gs js  0x14000e968
   14000e905:	gs jo  0x14000e97c
   14000e908:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000e90f:	rex.X
   14000e910:	push   r8
   14000e912:	rex.RB
   14000e913:	rex.X
   14000e914:	rex.R pop rax
   14000e916:	pop    rdx
   14000e917:	add    BYTE PTR [rdi+0x61635f00],bh
   14000e91d:	ins    BYTE PTR es:[rdi],dx
   14000e91e:	ins    BYTE PTR es:[rdi],dx
   14000e91f:	outs   dx,BYTE PTR ds:[rsi]
   14000e920:	gs ja  0x14000e98b
   14000e923:	add    BYTE PTR [rbx+0x0],cl
   14000e926:	pop    rdi
   14000e927:	rex.XB js 0x14000e9a2
   14000e92a:	push   rsp
   14000e92b:	push   0x45776f72
   14000e930:	js     0x14000e995
   14000e932:	gs jo  0x14000e9a9
   14000e935:	imul   ebp,DWORD PTR [rdi+0x6e],0x550000
   14000e93c:	pop    rdi
   14000e93d:	pop    rax
   14000e93e:	movsxd esi,DWORD PTR [rax+0x74]
   14000e941:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000e94a:	pop    rdi
   14000e94b:	(bad)  
   14000e94c:	ins    DWORD PTR es:[rdi],dx
   14000e94d:	jae    0x14000e9b6
   14000e94f:	pop    rdi
   14000e950:	gs js  0x14000e9bc
   14000e953:	je     0x14000e955
   14000e955:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000e95b:	addr32 gs je 0x14000e9cc
   14000e95f:	(bad)  
   14000e960:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000e967:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000e96d:	gs je  0x14000e9cf
   14000e970:	(bad)  
   14000e971:	jo     0x14000e9e3
   14000e973:	pop    rdi
   14000e974:	je     0x14000e9ef
   14000e976:	jo     0x14000e9dd
   14000e978:	add    BYTE PTR [rax],al
   14000e97a:	xor    al,BYTE PTR [riz*2+0x746978]
   14000e981:	add    BYTE PTR [rsi],cl
   14000e983:	add    DWORD PTR [rdi+0x65],ebx
   14000e986:	js     0x14000e9f1
   14000e988:	je     0x14000e98a
   14000e98a:	rol    DWORD PTR [rax],0x5f
   14000e98d:	movsxd esp,DWORD PTR [rbp+0x78]
   14000e990:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000e998:	jae    0x14000e9ff
   14000e99a:	je     0x14000ea11
   14000e99c:	jae    0x14000ea03
   14000e99e:	jb     0x14000ea0d
   14000e9a0:	(bad)  
   14000e9a1:	je     0x14000ea0b
   14000e9a3:	gs jb  0x14000ea18
   14000e9a6:	add    BYTE PTR [rax],al
   14000e9a8:	jge    0x14000e9ab
   14000e9aa:	pop    rdi
   14000e9ab:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000e9b2:	ins    DWORD PTR es:[rdi],dx
   14000e9b3:	add    BYTE PTR [rdi+0x0],dl
   14000e9b6:	pop    rdi
   14000e9b7:	pop    rdi
   14000e9b8:	rex.XB pop r15
   14000e9ba:	jae    0x14000ea2c
   14000e9bc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000e9c0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000e9c7:	ins    BYTE PTR es:[rdi],dx
   14000e9c8:	gs jb  0x14000e9cb
   14000e9cb:	add    BYTE PTR [rdx+0x63775f03],al
   14000e9d1:	ins    DWORD PTR es:[rdi],dx
   14000e9d2:	fs ins BYTE PTR es:[rdi],dx
   14000e9d4:	outs   dx,BYTE PTR ds:[rsi]
   14000e9d5:	add    BYTE PTR [rdi],ah
   14000e9d7:	add    DWORD PTR [rdi+0x66],ebx
   14000e9da:	ins    DWORD PTR es:[rdi],dx
   14000e9db:	outs   dx,DWORD PTR ds:[rsi]
   14000e9dc:	fs add BYTE PTR gs:[rax],al
   14000e9e0:	rol    BYTE PTR [rax],cl
   14000e9e2:	pop    rdi
   14000e9e3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e9e6:	ins    DWORD PTR es:[rdi],dx
   14000e9e7:	outs   dx,DWORD PTR ds:[rsi]
   14000e9e8:	fs add BYTE PTR gs:[rax],al
   14000e9ec:	(bad)  
   14000e9ed:	add    BYTE PTR [rdi],bh
   14000e9ef:	je     0x14000ea56
   14000e9f1:	jb     0x14000ea60
   14000e9f3:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000e9fa:	pop    rcx
   14000e9fb:	pop    r8
   14000e9fd:	pop    rax
   14000e9fe:	pop    rdx
   14000e9ff:	add    BYTE PTR [rdx],dl
   14000ea01:	add    BYTE PTR [rdi],bh
   14000ea03:	(bad)  
   14000ea04:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000ea08:	gs pop rdi
   14000ea0a:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000ea11:	rex.RB
   14000ea12:	rex.B
   14000ea13:	rex.B
   14000ea14:	rex pop rax
   14000ea16:	pop    rdx
   14000ea17:	add    BYTE PTR [rbp+0x73],ch
   14000ea1a:	jbe    0x14000ea7f
   14000ea1c:	jb     0x14000ea92
   14000ea1e:	cs fs ins BYTE PTR es:[rdi],dx
   14000ea21:	ins    BYTE PTR es:[rdi],dx
   14000ea22:	add    BYTE PTR [rax],al
   14000ea24:	add    eax,0x72655f01
   14000ea29:	jb     0x14000ea99
   14000ea2b:	outs   dx,DWORD PTR ds:[rsi]
   14000ea2c:	add    BYTE PTR [rax],al
   14000ea2e:	test   eax,0x61657204
   14000ea33:	ins    BYTE PTR es:[rdi],dx
   14000ea34:	ins    BYTE PTR es:[rdi],dx
   14000ea35:	outs   dx,DWORD PTR ds:[rsi]
   14000ea36:	movsxd eax,DWORD PTR [rax]
   14000ea38:	out    0x1,al
   14000ea3a:	pop    rdi
   14000ea3b:	ins    BYTE PTR es:[rdi],dx
   14000ea3c:	outs   dx,DWORD PTR ds:[rsi]
   14000ea3d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000ea40:	add    ebx,DWORD PTR [r15+0x75]
   14000ea44:	outs   dx,BYTE PTR ds:[rsi]
   14000ea45:	ins    BYTE PTR es:[rdi],dx
   14000ea46:	outs   dx,DWORD PTR ds:[rsi]
   14000ea47:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000ea4a:	jnp    0x14000ea4c
   14000ea4c:	pop    rdi
   14000ea4d:	pop    rdi
   14000ea4e:	fs ins BYTE PTR es:[rdi],dx
   14000ea50:	ins    BYTE PTR es:[rdi],dx
   14000ea51:	outs   dx,DWORD PTR ds:[rsi]
   14000ea52:	outs   dx,BYTE PTR ds:[rsi]
   14000ea53:	gs js  0x14000eabf
   14000ea56:	je     0x14000ea58
   14000ea58:	nop
   14000ea59:	add    bl,BYTE PTR [rdi+0x6f]
   14000ea5c:	outs   dx,BYTE PTR ds:[rsi]
   14000ea5d:	gs js  0x14000eac9
   14000ea60:	je     0x14000ea62
   14000ea62:	mov    WORD PTR [rax],es
   14000ea64:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ea66:	push   rsp
   14000ea67:	(bad)  
   14000ea68:	jae    0x14000ead5
   14000ea6a:	rex.WRB
   14000ea6b:	gs ins DWORD PTR es:[rdi],dx
   14000ea6d:	rex.RX jb 0x14000ead5
   14000ea70:	add    BYTE PTR gs:[rbp+0x546f4300],cl
   14000ea77:	(bad)  
   14000ea78:	jae    0x14000eae5
   14000ea7a:	rex.WRB
   14000ea7b:	gs ins DWORD PTR es:[rdi],dx
   14000ea7d:	push   rdx
   14000ea7e:	gs (bad) 
   14000ea80:	ins    BYTE PTR es:[rdi],dx
   14000ea81:	ins    BYTE PTR es:[rdi],dx
   14000ea82:	outs   dx,DWORD PTR ds:[rsi]
   14000ea83:	movsxd eax,DWORD PTR [rax]
   14000ea85:	add    BYTE PTR [rbx+0x546f4300],cl
   14000ea8b:	(bad)  
   14000ea8c:	jae    0x14000eaf9
   14000ea8e:	rex.WRB
   14000ea8f:	gs ins DWORD PTR es:[rdi],dx
   14000ea91:	rex.B ins BYTE PTR es:[rdi],dx
   14000ea93:	ins    BYTE PTR es:[rdi],dx
   14000ea94:	outs   dx,DWORD PTR ds:[rsi]
   14000ea95:	movsxd eax,DWORD PTR [rax]
   14000ea97:	add    BYTE PTR [rbx],ch
   14000ea99:	add    BYTE PTR [rbx+0x6f],al
   14000ea9c:	rex.XB jb 0x14000eb04
   14000ea9f:	(bad)  
   14000eaa0:	je     0x14000eb07
   14000eaa2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000eaa4:	jae    0x14000eb1a
   14000eaa6:	(bad)  
   14000eaa7:	outs   dx,BYTE PTR ds:[rsi]
   14000eaa8:	movsxd esp,DWORD PTR [rbp+0x0]
   14000eaab:	add    BYTE PTR [rax+0x0],ah
   14000eaae:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000eab0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000eab2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000eaba:	add    BYTE PTR [rax],al
   14000eabc:	nop
   14000eabd:	add    BYTE PTR [rbx+0x6f],al
   14000eac0:	push   rbp
   14000eac1:	outs   dx,BYTE PTR ds:[rsi]
   14000eac2:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000eac9:	imul   edi,DWORD PTR [rdx+0x65],0x20b0000
   14000ead0:	push   rbx
   14000ead1:	je     0x14000eb45
   14000ead3:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   14000eada:	rex.RXB push r13
   14000eadc:	rex.WB
   14000eadd:	xor    r8b,BYTE PTR [rax]
   14000eae0:	jbe    0x14000eae2
   14000eae2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000eae4:	push   rdx
   14000eae5:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000eaee:	(bad)  
   14000eaef:	jae    0x14000eb64
   14000eaf1:	rex.WRXB (bad) 
   14000eaf3:	push   0x65
   14000eaf5:	movsxd esi,DWORD PTR [rax+rax*1-0x7e]
   14000eaf9:	add    BYTE PTR [rbx+0x6f],al
   14000eafc:	push   rdx
   14000eafd:	gs jbe 0x14000eb6f
   14000eb00:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000eb04:	(bad)  
   14000eb05:	jae    0x14000eb7a
   14000eb07:	rex.WRXB (bad) 
   14000eb09:	push   0x65
   14000eb0b:	movsxd esi,DWORD PTR [rax+rax*1+0x6f]
   14000eb0f:	ins    BYTE PTR es:[rdi],dx
   14000eb10:	xor    esi,DWORD PTR gs:[rdx]
   14000eb13:	cs fs ins BYTE PTR es:[rdi],dx
   14000eb16:	ins    BYTE PTR es:[rdi],dx
   14000eb17:	add    BYTE PTR [rdi+0x4c],cl
   14000eb1a:	rex.RB
   14000eb1b:	push   r13
   14000eb1d:	push   rsp
   14000eb1e:	xor    esi,DWORD PTR [rdx]
   14000eb20:	cs fs ins BYTE PTR es:[rdi],dx
   14000eb23:	ins    BYTE PTR es:[rdi],dx
   14000eb24:	add    BYTE PTR [rax],al
   14000eb26:	rex.WRB add BYTE PTR [r8+0x61],r10b
   14000eb2a:	je     0x14000eb94
   14000eb2c:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x656c6946
   14000eb34:	rex.WRX (bad) 
   14000eb36:	ins    DWORD PTR es:[rdi],dx
   14000eb37:	gs push rdi
   14000eb39:	add    BYTE PTR [rbx+0x48],dl
   14000eb3c:	rex.WR push rdi
   14000eb3e:	push   r8
   14000eb40:	rex.WB
   14000eb41:	cs fs ins BYTE PTR es:[rdi],dx
   14000eb44:	ins    BYTE PTR es:[rdi],dx
   14000eb45:	add    dh,al
   14000eb47:	add    dl,BYTE PTR [rdx+0x74]
   14000eb4a:	ins    BYTE PTR es:[rdi],dx
   14000eb4b:	rex.XB (bad) 
   14000eb4d:	jo     0x14000ebc3
   14000eb4f:	jne    0x14000ebc3
   14000eb51:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000eb54:	outs   dx,BYTE PTR ds:[rsi]
   14000eb55:	je     0x14000ebbc
   14000eb57:	js     0x14000ebcd
   14000eb59:	add    BYTE PTR [rdi+0x4],dh
   14000eb5c:	push   rdx
   14000eb5d:	je     0x14000ebcb
   14000eb5f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000eb61:	outs   dx,DWORD PTR ds:[rsi]
   14000eb62:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000eb66:	jne    0x14000ebd6
   14000eb68:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000eb6c:	outs   dx,BYTE PTR ds:[rsi]
   14000eb6d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000eb6f:	je     0x14000ebe3
   14000eb71:	jns    0x14000eb73
   14000eb73:	add    BYTE PTR [rbx+0x6c745205],cl
   14000eb79:	push   rsi
   14000eb7a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000eb81:	outs   dx,BYTE PTR ds:[rsi]
   14000eb82:	ja     0x14000ebed
   14000eb84:	outs   dx,BYTE PTR ds:[rsi]
   14000eb85:	add    BYTE PTR fs:[rax],al
   14000eb88:	outs   dx,BYTE PTR ds:[rsi]
   14000eb89:	je     0x14000ebef
   14000eb8b:	ins    BYTE PTR es:[rdi],dx
   14000eb8c:	ins    BYTE PTR es:[rdi],dx
   14000eb8d:	cs fs ins BYTE PTR es:[rdi],dx
   14000eb90:	ins    BYTE PTR es:[rdi],dx
   14000eb91:	add    bh,al
   14000eb93:	add    al,BYTE PTR [rdi+0x65]
   14000eb96:	je     0x14000ebeb
   14000eb98:	je     0x14000ebfb
   14000eb9a:	jb     0x14000ec10
   14000eb9c:	jne    0x14000ec0e
   14000eb9e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000eba0:	outs   dx,WORD PTR ds:[rsi]
   14000eba2:	push   rdi
   14000eba3:	add    BYTE PTR [rsi+0x686e5505],bl
   14000eba9:	(bad)  
   14000ebaa:	outs   dx,BYTE PTR ds:[rsi]
   14000ebab:	fs ins BYTE PTR es:[rdi],dx
   14000ebad:	gs fs rex.RB js 0x14000ec15
   14000ebb2:	gs jo  0x14000ec29
   14000ebb5:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000ebbc:	gs jb  0x14000ebbf
   14000ebbf:	add    BYTE PTR [rsi+0x5],bl
   14000ebc2:	push   rbx
   14000ebc3:	gs je  0x14000ec1b
   14000ebc6:	outs   dx,BYTE PTR ds:[rsi]
   14000ebc7:	push   0x6c646e61
   14000ebcc:	gs fs rex.RB js 0x14000ec34
   14000ebd1:	gs jo  0x14000ec48
   14000ebd4:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000ebdb:	gs jb  0x14000ebde
   14000ebde:	adc    BYTE PTR [rdx],al
   14000ebe0:	rex.RXB
   14000ebe1:	gs je  0x14000ec27
   14000ebe4:	jne    0x14000ec58
   14000ebe6:	jb     0x14000ec4d
   14000ebe8:	outs   dx,BYTE PTR ds:[rsi]
   14000ebe9:	je     0x14000ec3b
   14000ebeb:	jb     0x14000ec5c
   14000ebed:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ebf0:	jae    0x14000ebf2
   14000ebf2:	jl     0x14000ebf9
   14000ebf4:	push   rsp
   14000ebf5:	gs jb  0x14000ec65
   14000ebf8:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000ebff:	outs   dx,DWORD PTR ds:[rsi]
   14000ec00:	movsxd esp,DWORD PTR [rbp+0x73]
   14000ec03:	jae    0x14000ec05
   14000ec05:	add    BYTE PTR [rsi],dh
   14000ec07:	add    al,0x51
   14000ec09:	jne    0x14000ec70
   14000ec0b:	jb     0x14000ec86
   14000ec0d:	push   rax
   14000ec0e:	gs jb  0x14000ec77
   14000ec11:	outs   dx,DWORD PTR ds:[rsi]
   14000ec12:	jb     0x14000ec81
   14000ec14:	(bad)  
   14000ec15:	outs   dx,BYTE PTR ds:[rsi]
   14000ec16:	movsxd esp,DWORD PTR [rbp+0x43]
   14000ec19:	outs   dx,DWORD PTR ds:[rsi]
   14000ec1a:	jne    0x14000ec8a
   14000ec1c:	je     0x14000ec83
   14000ec1e:	jb     0x14000ec20
   14000ec20:	loopne 0x14000ec24
   14000ec22:	rex.RXB
   14000ec23:	gs je  0x14000ec79
   14000ec26:	jns    0x14000ec9b
   14000ec28:	je     0x14000ec8f
   14000ec2a:	ins    DWORD PTR es:[rdi],dx
   14000ec2b:	push   rsp
   14000ec2c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000ec33:	ins    BYTE PTR es:[rdi],dx
   14000ec34:	gs push rsp
   14000ec36:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000ec3d:	gs je  0x14000ec94
   14000ec40:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000ec47:	je     0x14000ec49
   14000ec49:	add    BYTE PTR [rcx],al
   14000ec4b:	add    al,0x4f
   14000ec4d:	jne    0x14000ecc3
   14000ec4f:	jo     0x14000ecc6
   14000ec51:	je     0x14000ec97
   14000ec53:	gs (bad) 
   14000ec55:	jne    0x14000ecbe
   14000ec57:	push   rbx
   14000ec58:	je     0x14000eccc
   14000ec5a:	imul   ebp,DWORD PTR [rsi+0x67],0x74000041
   14000ec61:	add    edx,DWORD PTR [rbp+0x6e]
   14000ec64:	jb     0x14000eccb
   14000ec66:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14000ec6e:	(bad)  
   14000ec6f:	jae    0x14000ece4
   14000ec71:	add    BYTE PTR [r8],al
   14000ec74:	pop    rbx
   14000ec75:	add    BYTE PTR [rdi+0x5f],bl
   14000ec78:	rex.XB js 0x14000ecf3
   14000ec7b:	rex.RX jb 0x14000ecdf
   14000ec7e:	ins    DWORD PTR es:[rdi],dx
   14000ec7f:	gs rex.W (bad) 
   14000ec82:	outs   dx,BYTE PTR ds:[rsi]
   14000ec83:	fs ins BYTE PTR es:[rdi],dx
   14000ec85:	gs jb  0x14000ecbb
   14000ec88:	add    BYTE PTR [rax],al
   14000ec8a:	xchg   ecx,eax
   14000ec8b:	add    al,0x6d
   14000ec8d:	gs ins DWORD PTR es:[rdi],dx
   14000ec8f:	movsxd ebp,DWORD PTR [rbp+0x70]
	...

Disassembly of section .data:

000000014000f000 <.data>:
   14000f000:	xor    BYTE PTR [rsi+0x14000],0x0
	...
   14000f00f:	add    al,dh
   14000f011:	pushf  
   14000f012:	add    BYTE PTR [rax+0x1],al
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	add    BYTE PTR [rcx],al
   14000f019:	add    BYTE PTR [rax],al
   14000f01b:	add    BYTE PTR [rax],al
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rdx],dh
   14000f021:	movabs ds:0x5dcd00002b992ddf,al
   14000f02a:	and    dl,dl
   14000f02c:	data16 (bad) 
   14000f02e:	(bad)  
   14000f02f:	push   QWORD PTR [rax]
   14000f031:	lock add BYTE PTR [rax+0x1],al
	...
   14000f03d:	add    BYTE PTR [rax],al
   14000f03f:	add    BYTE PTR [rax-0x3c],ch
   14000f042:	add    BYTE PTR [rax+0x1],al
   14000f045:	add    BYTE PTR [rax],al
   14000f047:	add    BYTE PTR [rax],al
   14000f049:	adc    eax,DWORD PTR [rax]
   14000f04b:	rex add DWORD PTR [rax],eax
   14000f04e:	add    BYTE PTR [rax],al
   14000f050:	and    BYTE PTR [rdi],bh
   14000f052:	add    BYTE PTR [rax+0x1],al
   14000f055:	add    BYTE PTR [rax],al
   14000f057:	add    BYTE PTR [rax+0x1400040],ah
	...
   14000f06d:	add    BYTE PTR [rax],al
   14000f06f:	add    BYTE PTR [rax+0x140003a],dh
   14000f075:	add    BYTE PTR [rax],al
   14000f077:	add    BYTE PTR [rax+0x140003a],dh
   14000f07d:	add    BYTE PTR [rax],al
   14000f07f:	add    BYTE PTR [rax+0x1400069],ah
   14000f085:	add    BYTE PTR [rax],al
   14000f087:	add    BYTE PTR [rax+0x14000c8],bh
   14000f08d:	add    BYTE PTR [rax],al
   14000f08f:	add    BYTE PTR [rax+0x14000c8],ch
   14000f095:	add    BYTE PTR [rax],al
   14000f097:	add    BYTE PTR [rcx],al
	...
   14000f0bd:	add    BYTE PTR [rax],al
   14000f0bf:	add    al,cl
   14000f0c1:	enter  0x4000,0x1
   14000f0c5:	add    BYTE PTR [rax],al
   14000f0c7:	add    BYTE PTR [rax+0x14000c8],ch
   14000f0cd:	add    BYTE PTR [rax],al
   14000f0cf:	add    BYTE PTR [rcx],al
	...
   14000f0f5:	add    BYTE PTR [rax],al
   14000f0f7:	add    al,bl
   14000f0f9:	enter  0x4000,0x1
   14000f0fd:	add    BYTE PTR [rax],al
   14000f0ff:	add    BYTE PTR [rax+0x14000c8],ch
   14000f105:	add    BYTE PTR [rax],al
   14000f107:	add    BYTE PTR [rcx],al
	...
   14000f12d:	add    BYTE PTR [rax],al
   14000f12f:	add    al,ch
   14000f131:	enter  0x4000,0x1
   14000f135:	add    BYTE PTR [rax],al
   14000f137:	add    BYTE PTR [rax+0x14000c8],ch
   14000f13d:	add    BYTE PTR [rax],al
   14000f13f:	add    BYTE PTR [rcx],al
	...
   14000f16d:	add    BYTE PTR [rax],al
   14000f16f:	add    BYTE PTR [rax+0x14000b6],ch
	...
   14000f17d:	add    BYTE PTR [rax],al
   14000f17f:	add    BYTE PTR [rsi],ch
   14000f181:	(bad)  
   14000f182:	push   r14
   14000f184:	gs js  0x14000f1ea
   14000f187:	gs jo  0x14000f1fe
   14000f18a:	imul   ebp,DWORD PTR [rdi+0x6e],0xa8004040
   14000f191:	mov    dh,0x0
   14000f193:	rex add DWORD PTR [rax],eax
	...
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	cs (bad) 
   14000f1a2:	push   r14
   14000f1a4:	(bad)
   14000f1a9:	ins    BYTE PTR es:[rdi],dx
   14000f1aa:	ins    BYTE PTR es:[rdi],dx
   14000f1ab:	outs   dx,DWORD PTR ds:[rsi]
   14000f1ac:	movsxd eax,DWORD PTR [rax+0x73]
   14000f1af:	je     0x14000f215
   14000f1b1:	rex
   14000f1b2:	add    BYTE PTR [rax],al
   14000f1b5:	add    BYTE PTR [rax],al
   14000f1b7:	add    BYTE PTR [rax+0x14000b6],ch
	...
   14000f1c5:	add    BYTE PTR [rax],al
   14000f1c7:	add    BYTE PTR [rsi],ch
   14000f1c9:	(bad)  
   14000f1ca:	push   r14
   14000f1cc:	rex.XB
   14000f1cd:	rex.B je 0x14000f23c
   14000f1d0:	rex.RB js 0x14000f236
   14000f1d3:	gs jo  0x14000f24a
   14000f1d6:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14000f1dd:	rex
   14000f1de:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140010000 <.pdata>:
   140010000:	add    BYTE PTR [rax],dl
   140010002:	add    BYTE PTR [rax],al
   140010004:	rex.X adc DWORD PTR [rax],eax
   140010007:	add    BYTE PTR [rax-0x2f],bh
   14001000a:	add    BYTE PTR [rax],al
   14001000c:	push   rax
   14001000d:	adc    DWORD PTR [rax],eax
   14001000f:	add    bh,ch
   140010011:	adc    DWORD PTR [rax],eax
   140010013:	add    al,dh
   140010015:	rol    BYTE PTR [rax],cl
   140010017:	add    al,dh
   140010019:	adc    DWORD PTR [rax],eax
   14001001b:	add    BYTE PTR [rdx+rdx*1+0x0],bl
   14001001f:	add    BYTE PTR [rax],al
   140010021:	fiadd  DWORD PTR [rax]
   140010023:	add    BYTE PTR [rax+0x12],ah
   140010026:	add    BYTE PTR [rax],al
   140010028:	ficom  DWORD PTR [rdx]
   14001002a:	add    BYTE PTR [rax],al
   14001002c:	add    dl,bl
   14001002e:	add    BYTE PTR [rax],al
   140010030:	sbb    BYTE PTR [rbx],dl
   140010032:	add    BYTE PTR [rax],al
   140010034:	pop    rdx
   140010035:	adc    eax,DWORD PTR [rax]
   140010037:	add    BYTE PTR [rax-0x2f],dl
   14001003a:	add    BYTE PTR [rax],al
   14001003c:	(bad)  
   14001003d:	adc    eax,DWORD PTR [rax]
   14001003f:	add    bl,ah
   140010041:	adc    eax,DWORD PTR [rax]
   140010043:	add    BYTE PTR [rax-0x2f],bl
   140010046:	add    BYTE PTR [rax],al
   140010048:	in     al,dx
   140010049:	adc    eax,DWORD PTR [rax]
   14001004b:	add    BYTE PTR [rsi+0x14],dh
   14001004e:	add    BYTE PTR [rax],al
   140010050:	(bad)  
   140010051:	rol    DWORD PTR [rax],1
   140010053:	add    BYTE PTR [rax-0xffffec],al
   140010059:	adc    al,0x0
   14001005b:	add    BYTE PTR [rax-0x2f],ch
   14001005e:	add    BYTE PTR [rax],al
   140010060:	adc    BYTE PTR [rip+0x15a90000],dl        # 0x155aa0066
   140010066:	add    BYTE PTR [rax],al
   140010068:	test   cl,dl
   14001006a:	add    BYTE PTR [rax],al
   14001006c:	mov    al,0x15
   14001006e:	add    BYTE PTR [rax],al
   140010070:	adc    edx,DWORD PTR [rdi]
   140010072:	add    BYTE PTR [rax],al
   140010074:	cwde   
   140010075:	rol    DWORD PTR [rax],1
   140010077:	add    BYTE PTR [rdi+rdx*1],bl
   14001007a:	add    BYTE PTR [rax],al
   14001007c:	jo     0x140010095
   14001007e:	add    BYTE PTR [rax],al
   140010080:	push   0x780000d1
   140010085:	(bad)  
   140010086:	add    BYTE PTR [rax],al
   140010088:	xor    eax,0xac000018
   14001008d:	rol    DWORD PTR [rax],1
   14001008f:	add    BYTE PTR [rax+0x18],al
   140010092:	add    BYTE PTR [rax],al
   140010094:	mov    WORD PTR [rcx],ds
   140010096:	add    BYTE PTR [rax],al
   140010098:	lods   al,BYTE PTR ds:[rsi]
   140010099:	rol    DWORD PTR [rax],1
   14001009b:	add    BYTE PTR [rax+0x2c000019],ah
   1400100a1:	sbb    eax,0xd1bc0000
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	rex sbb eax,0x21d80000
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	(bad)  
   1400100b1:	rol    DWORD PTR [rax],1
   1400100b3:	add    al,ah
   1400100b5:	and    DWORD PTR [rax],eax
   1400100b7:	add    bh,bh
   1400100b9:	and    eax,0xd1ec0000
   1400100be:	add    BYTE PTR [rax],al
   1400100c0:	adc    BYTE PTR [rsi],ah
   1400100c2:	add    BYTE PTR [rax],al
   1400100c4:	mov    ecx,0x4000027
   1400100c9:	rol    BYTE PTR [rax],cl
   1400100cb:	add    al,al
   1400100cd:	(bad)  
   1400100ce:	add    BYTE PTR [rax],al
   1400100d0:	or     al,0x29
   1400100d2:	add    BYTE PTR [rax],al
   1400100d4:	lods   al,BYTE PTR ds:[rsi]
   1400100d5:	rol    DWORD PTR [rax],1
   1400100d7:	add    BYTE PTR [rax],ah
   1400100d9:	sub    DWORD PTR [rax],eax
   1400100db:	add    BYTE PTR [rdx+rbp*1+0x0],ch
   1400100df:	add    BYTE PTR [rcx+rdx*8+0x2a800000],ch
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	(bad)  
   1400100e9:	sub    al,0x0
   1400100eb:	add    BYTE PTR [rdx+rdx*8],bl
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	and    BYTE PTR [rax+rax*1],ch
   1400100f3:	add    BYTE PTR [rbp+0x3000002c],ah
   1400100f9:	rol    BYTE PTR [rax],cl
   1400100fb:	add    BYTE PTR [rax-0x7fffffd4],dh
   140010101:	add    BYTE PTR cs:[rax],al
   140010104:	add    al,0xd2
   140010106:	add    BYTE PTR [rax],al
   140010108:	nop
   140010109:	add    BYTE PTR cs:[rax],al
   14001010c:	out    0x30,al
   14001010e:	add    BYTE PTR [rax],al
   140010110:	cmp    al,0xd2
   140010112:	add    BYTE PTR [rax],al
   140010114:	lock xor BYTE PTR [rax],al
   140010117:	add    dh,cl
   140010119:	xor    DWORD PTR [rax],eax
   14001011b:	add    BYTE PTR [rdx+rdx*8+0x0],dl
   14001011f:	add    al,ah
   140010121:	xor    DWORD PTR [rax],eax
   140010123:	add    ah,dh
   140010125:	xor    eax,0xd2700000
   14001012a:	add    BYTE PTR [rax],al
   14001012c:	cld    
   14001012d:	xor    eax,0x39cc0000
   140010132:	add    BYTE PTR [rax],al
   140010134:	mov    edx,ss
   140010136:	add    BYTE PTR [rax],al
   140010138:	(bad)  
   140010139:	cmp    DWORD PTR [rax],eax
   14001013b:	add    BYTE PTR [rsi],al
   14001013d:	cmp    al,BYTE PTR [rax]
   14001013f:	add    BYTE PTR [rax-0x2f],bh
   140010142:	add    BYTE PTR [rax],al
   140010144:	adc    BYTE PTR [rdx],bh
   140010146:	add    BYTE PTR [rax],al
   140010148:	push   rbx
   140010149:	cmp    al,BYTE PTR [rax]
   14001014b:	add    al,dh
   14001014d:	rol    BYTE PTR [rax],cl
   14001014f:	add    BYTE PTR [rax+0x3a],ah
   140010152:	add    BYTE PTR [rax],al
   140010154:	sahf   
   140010155:	cmp    al,BYTE PTR [rax]
   140010157:	add    BYTE PTR [rax-0x2f],bh
   14001015a:	add    BYTE PTR [rax],al
   14001015c:	loopne 0x140010198
   14001015e:	add    BYTE PTR [rax],al
   140010160:	pop    rcx
   140010161:	cmp    eax,DWORD PTR [rax]
   140010163:	add    BYTE PTR [rax-0x2f],bh
   140010166:	add    BYTE PTR [rax],al
   140010168:	cmp    BYTE PTR [rbx],0x0
   14001016b:	add    bh,bl
   14001016d:	cmp    eax,DWORD PTR [rax]
   14001016f:	add    al,bh
   140010171:	rol    BYTE PTR [rax],cl
   140010173:	add    al,dh
   140010175:	cmp    eax,DWORD PTR [rax]
   140010177:	add    BYTE PTR [rcx+0x3c],ch
   14001017a:	add    BYTE PTR [rax],al
   14001017c:	js     0x14001014f
   14001017e:	add    BYTE PTR [rax],al
   140010180:	nop
   140010181:	cmp    al,0x0
   140010183:	add    bh,ch
   140010185:	cmp    al,0x0
   140010187:	add    al,bh
   140010189:	rol    BYTE PTR [rax],cl
   14001018b:	add    BYTE PTR [rax],al
   14001018d:	cmp    eax,0x3d790000
   140010192:	add    BYTE PTR [rax],al
   140010194:	js     0x140010167
   140010196:	add    BYTE PTR [rax],al
   140010198:	movabs al,ds:0xf800003dff00003d
   1400101a1:	rol    BYTE PTR [rax],cl
   1400101a3:	add    BYTE PTR [rax],dl
   1400101a5:	add    BYTE PTR ds:[rax],al
   1400101a8:	mov    DWORD PTR [rsi],edi
   1400101aa:	add    BYTE PTR [rax],al
   1400101ac:	js     0x14001017f
   1400101ae:	add    BYTE PTR [rax],al
   1400101b0:	mov    al,0x3e
   1400101b2:	add    BYTE PTR [rax],al
   1400101b4:	(bad)  
   1400101b6:	add    BYTE PTR [rax],al
   1400101b8:	clc    
   1400101b9:	rol    BYTE PTR [rax],cl
   1400101bb:	add    BYTE PTR [rax],ah
   1400101bd:	(bad)  
   1400101be:	add    BYTE PTR [rax],al
   1400101c0:	nop
   1400101c1:	add    BYTE PTR [rax],al
   1400101c4:	add    bl,dl
   1400101c6:	add    BYTE PTR [rax],al
   1400101c8:	enter  0x40,0x0
   1400101cc:	xor    DWORD PTR [rbx+0x0],eax
   1400101cf:	add    BYTE PTR [rax+0x380000d3],cl
   1400101d5:	rex.XB add BYTE PTR [r8],al
   1400101d8:	sbb    BYTE PTR [rbp+0x0],al
   1400101db:	add    BYTE PTR [rbx+rdx*8+0x45400000],ah
   1400101e2:	add    BYTE PTR [rax],al
   1400101e4:	xlat   BYTE PTR ds:[rbx]
   1400101e5:	add    BYTE PTR [r8],r8b
   1400101e8:	mov    ah,0xd3
   1400101ea:	add    BYTE PTR [rax],al
   1400101ec:	add    BYTE PTR [rsi+0x0],al
   1400101ef:	add    BYTE PTR [rdx],dl
   1400101f1:	rex.RXB add BYTE PTR [r8],r8b
   1400101f4:	enter  0xd3,0x0
   1400101f8:	sbb    BYTE PTR [rdi+0x0],al
   1400101fb:	add    BYTE PTR [rsi+0x48],ch
   140010201:	(bad)  
   140010202:	add    BYTE PTR [rax],al
   140010204:	ror    BYTE PTR [rax+0x0],0x0
   140010208:	(bad)  
   140010209:	rex.WB add BYTE PTR [r8],al
   14001020c:	push   0x200000d1
   140010211:	rex.WB add BYTE PTR [r8],al
   140010214:	xchg   esp,eax
   140010215:	rex.WB add BYTE PTR [r8],al
   140010218:	push   0xffffffffb80000d1
   14001021d:	rex.WB add BYTE PTR [r8],al
   140010220:	rex.RXB
   140010221:	rex.WX add BYTE PTR [rax],al
   140010224:	rcl    ah,0x0
   140010227:	add    BYTE PTR [rax+0x4a],dh
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	add    eax,0xb400004b
   140010231:	rol    DWORD PTR [rax],cl
   140010233:	add    BYTE PTR [rax],dl
   140010235:	rex.WXB add BYTE PTR [r8],al
   140010238:	jle    0x140010285
   14001023a:	add    BYTE PTR [rax],al
   14001023c:	js     0x14001020f
   14001023e:	add    BYTE PTR [rax],al
   140010240:	nop
   140010241:	rex.WXB add BYTE PTR [r8],al
   140010244:	mov    edi,0x7800004b
   140010249:	rol    DWORD PTR [rax],1
   14001024b:	add    al,dl
   14001024d:	rex.WXB add BYTE PTR [r8],al
   140010250:	sub    al,0x4c
   140010252:	add    BYTE PTR [rax],al
   140010254:	lock rol BYTE PTR [rax],cl
   140010257:	add    BYTE PTR [rsp+rcx*2],dh
   14001025a:	add    BYTE PTR [rax],al
   14001025c:	(bad)  
   14001025d:	rex.WRB add BYTE PTR [r8],r8b
   140010260:	clc    
   140010261:	(bad)  
   140010262:	add    BYTE PTR [rax],al
   140010264:	push   rax
   140010265:	push   rax
   140010266:	add    BYTE PTR [rax],al
   140010268:	(bad)  
   140010269:	push   rax
   14001026a:	add    BYTE PTR [rax],al
   14001026c:	lods   al,BYTE PTR ds:[rsi]
   14001026d:	rol    DWORD PTR [rax],1
   14001026f:	add    al,dh
   140010271:	push   rax
   140010272:	add    BYTE PTR [rax],al
   140010274:	je     0x1400102c7
   140010276:	add    BYTE PTR [rax],al
   140010278:	test   cl,dl
   14001027a:	add    BYTE PTR [rax],al
   14001027c:	movabs al,ds:0x78000051dd000051
   140010285:	rol    DWORD PTR [rax],1
   140010287:	add    ah,ah
   140010289:	push   rcx
   14001028a:	add    BYTE PTR [rax],al
   14001028c:	cmp    DWORD PTR [rbx+0x0],edx
   14001028f:	add    BYTE PTR [rax-0x2b],ch
   140010292:	add    BYTE PTR [rax],al
   140010294:	rex push rbx
   140010296:	add    BYTE PTR [rax],al
   140010298:	mov    ah,0x58
   14001029a:	add    BYTE PTR [rax],al
   14001029c:	js     0x140010273
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	mov    esp,0x5c000058
   1400102a5:	pop    rdx
   1400102a6:	add    BYTE PTR [rax],al
   1400102a8:	pushf  
   1400102a9:	(bad)  
   1400102aa:	add    BYTE PTR [rax],al
   1400102ac:	fs pop rdx
   1400102ae:	add    BYTE PTR [rax],al
   1400102b0:	push   0x5c
   1400102b2:	add    BYTE PTR [rax],al
   1400102b4:	mov    eax,0x700000d5
   1400102b9:	pop    rsp
   1400102ba:	add    BYTE PTR [rax],al
   1400102bc:	cmp    eax,0x8400005d
   1400102c1:	rol    DWORD PTR [rax],1
   1400102c3:	add    BYTE PTR [rbp+rbx*2+0x0],al
   1400102c7:	add    bl,ch
   1400102c9:	pop    rbp
   1400102ca:	add    BYTE PTR [rax],al
   1400102cc:	fcom   st(5)
   1400102ce:	add    BYTE PTR [rax],al
   1400102d0:	hlt    
   1400102d1:	pop    rbp
   1400102d2:	add    BYTE PTR [rax],al
   1400102d4:	(bad)  
   1400102d5:	pop    rdi
   1400102d6:	add    BYTE PTR [rax],al
   1400102d8:	in     al,dx
   1400102d9:	(bad)  
   1400102da:	add    BYTE PTR [rax],al
   1400102dc:	adc    BYTE PTR [rdi+0x0],bl
   1400102df:	add    BYTE PTR [rip+0x8000060],bh        # 0x148010345
   1400102e5:	(bad)  
   1400102e6:	add    BYTE PTR [rax],al
   1400102e8:	rex.R (bad) 
   1400102ea:	add    BYTE PTR [rax],al
   1400102ec:	data16 (bad) 
   1400102ee:	add    BYTE PTR [rax],al
   1400102f0:	lock rol BYTE PTR [rax],cl
   1400102f3:	add    BYTE PTR [rax+riz*2+0x0],ch
   1400102f7:	add    BYTE PTR [rdi],dl
   1400102f9:	(bad)  
   1400102fa:	add    BYTE PTR [rax],al
   1400102fc:	sbb    al,0xd6
   1400102fe:	add    BYTE PTR [rax],al
   140010300:	and    BYTE PTR [rcx+0x0],ah
   140010303:	add    BYTE PTR [rax-0x6fffff9f],bl
   140010309:	(bad)  
   14001030a:	add    BYTE PTR [rax],al
   14001030c:	mov    eax,0xc000061
   140010311:	add    BYTE PTR fs:[rax],al
   140010314:	movabs al,ds:0xc8000064140000d6
   14001031d:	data16 add BYTE PTR [rax],al
   140010320:	(bad)  
   140010321:	xlat   BYTE PTR ds:[rbx]
   140010322:	add    BYTE PTR [rax],al
   140010324:	shl    BYTE PTR [rsi+0x0],1
   140010327:	add    BYTE PTR [rbx+0x67],ah
   14001032a:	add    BYTE PTR [rax],al
   14001032c:	mov    ah,0xd3
   14001032e:	add    BYTE PTR [rax],al
   140010330:	ins    BYTE PTR es:[rdi],dx
   140010331:	add    BYTE PTR [eax],al
   140010334:	(bad)  
   140010335:	push   0xffffffffd3b40000
   14001033a:	add    BYTE PTR [rax],al
   14001033c:	and    al,0x68
   14001033e:	add    BYTE PTR [rax],al
   140010340:	mov    edi,0xf8000068
   140010345:	xlat   BYTE PTR ds:[rbx]
   140010346:	add    BYTE PTR [rax],al
   140010348:	enter  0x68,0x0
   14001034c:	pop    rcx
   14001034d:	imul   eax,DWORD PTR [rax],0xd80000
   140010353:	add    BYTE PTR [rax+0x69],ah
   140010356:	add    BYTE PTR [rax],al
   140010358:	xchg   esp,eax
   140010359:	imul   eax,DWORD PTR [rax],0xd81000
   14001035f:	add    BYTE PTR [rcx+rbp*2+0x69cc0000],ch
   140010366:	add    BYTE PTR [rax],al
   140010368:	sbb    al,bl
   14001036a:	add    BYTE PTR [rax],al
   14001036c:	(bad)  
   14001036d:	imul   eax,DWORD PTR [rax],0x6b1000
   140010373:	add    BYTE PTR [rax],bh
   140010375:	fadd   DWORD PTR [rax]
   140010377:	add    BYTE PTR [rax+0x6b],dl
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	jg     0x1400103e9
   14001037e:	add    BYTE PTR [rax],al
   140010380:	js     0x140010353
   140010382:	add    BYTE PTR [rax],al
   140010384:	mov    BYTE PTR [rbx+0x0],ch
   140010387:	add    cl,al
   140010389:	imul   eax,DWORD PTR [rax],0x0
   14001038c:	lock rol BYTE PTR [rax],cl
   14001038f:	add    al,cl
   140010391:	imul   eax,DWORD PTR [rax],0x0
   140010394:	adc    al,0x6c
   140010396:	add    BYTE PTR [rax],al
   140010398:	push   rsp
   140010399:	fadd   DWORD PTR [rax]
   14001039b:	add    BYTE PTR [rsp+rbp*2],bl
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	mov    esp,0x6800006c
   1400103a5:	rol    DWORD PTR [rax],1
   1400103a7:	add    al,ah
   1400103a9:	ins    BYTE PTR es:[rdi],dx
   1400103aa:	add    BYTE PTR [rax],al
   1400103ac:	rex.W ins DWORD PTR es:[rdi],dx
   1400103ae:	add    BYTE PTR [rax],al
   1400103b0:	mov    al,bl
   1400103b2:	add    BYTE PTR [rax],al
   1400103b4:	push   rax
   1400103b5:	ins    DWORD PTR es:[rdi],dx
   1400103b6:	add    BYTE PTR [rax],al
   1400103b8:	imul   ebp,DWORD PTR [rbp+0x0],0x0
   1400103bc:	lock rol BYTE PTR [rax],cl
   1400103bf:	add    BYTE PTR [rbp+rbp*2+0x0],dh
   1400103c3:	add    BYTE PTR [rsi],al
   1400103c5:	jo     0x1400103c7
   1400103c7:	add    al,dl
   1400103c9:	fadd   DWORD PTR [rax]
   1400103cb:	add    BYTE PTR [rax],dl
   1400103cd:	jo     0x1400103cf
   1400103cf:	add    BYTE PTR [rbp+0x70],cl
   1400103d2:	add    BYTE PTR [rax],al
   1400103d4:	rcr    cl,1
   1400103d6:	add    BYTE PTR [rax],al
   1400103d8:	fs jo  0x1400103db
   1400103db:	add    BYTE PTR [rbx+0x70],bh
   1400103de:	add    BYTE PTR [rax],al
   1400103e0:	add    dl,bl
   1400103e2:	add    BYTE PTR [rax],al
   1400103e4:	test   BYTE PTR [rax+0x0],dh
   1400103e7:	add    BYTE PTR [rdi-0xfffff90],ch
   1400103ed:	rol    BYTE PTR [rax],cl
   1400103ef:	add    BYTE PTR [rax-0x29ffff90],bh
   1400103f5:	jo     0x1400103f7
   1400103f7:	add    BYTE PTR [rax],al
   1400103f9:	fiadd  DWORD PTR [rax]
   1400103fb:	add    BYTE PTR [rax],cl
   1400103fd:	jno    0x1400103ff
   1400103ff:	add    BYTE PTR [rbx],ah
   140010401:	jb     0x140010403
   140010403:	add    BYTE PTR [rax],cl
   140010405:	fiadd  DWORD PTR [rax]
   140010407:	add    BYTE PTR [rdx+rsi*2],ch
   14001040a:	add    BYTE PTR [rax],al
   14001040c:	xlat   BYTE PTR ds:[rbx]
   14001040d:	je     0x14001040f
   14001040f:	add    BYTE PTR [rax],ah
   140010411:	fiadd  DWORD PTR [rax]
   140010413:	add    al,ah
   140010415:	je     0x140010417
   140010417:	add    al,bl
   140010419:	jne    0x14001041b
   14001041b:	add    BYTE PTR [rax-0x1fffff26],al
   140010421:	jne    0x140010423
   140010423:	add    dh,ch
   140010425:	jp     0x140010427
   140010427:	add    BYTE PTR [rax-0xbffff26],bl
   14001042d:	jp     0x14001042f
   14001042f:	add    BYTE PTR [rdi-0x5fffff85],dl
   140010435:	fild   DWORD PTR [rax]
   140010437:	add    BYTE PTR [rax-0x28ffff85],ah
   14001043d:	jl     0x14001043f
   14001043f:	add    BYTE PTR [rax-0x1fffff25],bh
   140010445:	jl     0x140010447
   140010447:	add    BYTE PTR [rcx],al
   140010449:	jge    0x14001044b
   14001044b:	add    al,dh
   14001044d:	rol    BYTE PTR [rax],cl
   14001044f:	add    BYTE PTR [rax],cl
   140010451:	jge    0x140010453
   140010453:	add    dl,dl
   140010455:	jge    0x140010457
   140010457:	add    BYTE PTR [rax-0x2f],ch
   14001045a:	add    BYTE PTR [rax],al
   14001045c:	in     al,dx
   14001045d:	jge    0x14001045f
   14001045f:	add    BYTE PTR [rsi+0x7f],dh
   140010462:	add    BYTE PTR [rax],al
   140010464:	cmp    al,bl
   140010466:	add    BYTE PTR [rax],al
   140010468:	jl     0x1400104e9
   14001046a:	add    BYTE PTR [rax],al
   14001046c:	push   rbx
   14001046d:	xchg   DWORD PTR [rax],eax
   14001046f:	add    ah,dl
   140010471:	fild   DWORD PTR [rax]
   140010473:	add    BYTE PTR [rdi+rax*4+0x0],bl
   140010477:	add    BYTE PTR [rcx+rcx*4],dl
   14001047a:	add    BYTE PTR [rax],al
   14001047c:	sub    ah,bl
   14001047e:	add    BYTE PTR [rax],al
   140010480:	sbb    al,0x89
   140010482:	add    BYTE PTR [rax],al
   140010484:	std    
   140010485:	mov    al,BYTE PTR [rax]
   140010487:	add    BYTE PTR [rsp+rbx*8+0x0],cl
   14001048b:	add    BYTE PTR [rbx+rcx*4],al
   14001048e:	add    BYTE PTR [rax],al
   140010490:	movabs eax,ds:0xa80000dd2000008d
   140010499:	lea    eax,[rax]
   14001049b:	add    dl,dl
   14001049d:	lea    eax,[rax]
   14001049f:	add    al,dh
   1400104a1:	rol    BYTE PTR [rax],cl
   1400104a3:	add    ah,ah
   1400104a5:	lea    eax,[rax]
   1400104a7:	add    BYTE PTR [rsi+rcx*4],cl
   1400104aa:	add    BYTE PTR [rax],al
   1400104ac:	add    dl,bl
   1400104ae:	add    BYTE PTR [rax],al
   1400104b0:	adc    al,0x8e
   1400104b2:	add    BYTE PTR [rax],al
   1400104b4:	(bad)  
   1400104b5:	xchg   ebp,eax
   1400104b6:	add    BYTE PTR [rax],al
   1400104b8:	rex fld QWORD PTR [rax]
   1400104bb:	add    BYTE PTR [rax],dl
   1400104bd:	xchg   ebp,eax
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	fst    DWORD PTR [rbp-0x22ac0000]
   1400104c6:	add    BYTE PTR [rax],al
   1400104c8:	loopne 0x14001045f
   1400104ca:	add    BYTE PTR [rax],al
   1400104cc:	add    DWORD PTR [rsi-0x2d100000],edx
   1400104d2:	add    BYTE PTR [rax],al
   1400104d4:	or     BYTE PTR [rsi-0x69ca0000],dl
   1400104da:	add    BYTE PTR [rax],al
   1400104dc:	lock rol BYTE PTR [rax],cl
   1400104df:	add    BYTE PTR [rsi+rdx*4+0x0],dl
   1400104e3:	add    ch,cl
   1400104e5:	xchg   esi,eax
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	ins    BYTE PTR es:[rdi],dx
   1400104e9:	fld    QWORD PTR [rax]
   1400104eb:	add    al,dh
   1400104ed:	xchg   esi,eax
   1400104ee:	add    BYTE PTR [rax],al
   1400104f0:	sub    dl,BYTE PTR [rdi-0x2e880000]
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	xor    BYTE PTR [rdi-0x68ad0000],dl
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	fld    QWORD PTR fs:[rax]
   140010503:	add    BYTE PTR [rdi+rdx*4+0x0],bl
   140010507:	add    ch,dl
   140010509:	xchg   edi,eax
   14001050a:	add    BYTE PTR [rax],al
   14001050c:	ins    BYTE PTR es:[rdi],dx
   14001050d:	fld    QWORD PTR [rax]
   14001050f:	add    al,ah
   140010511:	xchg   edi,eax
   140010512:	add    BYTE PTR [rax],al
   140010514:	scas   eax,DWORD PTR es:[rdi]
   140010515:	cwde   
   140010516:	add    BYTE PTR [rax],al
   140010518:	add    dl,bl
   14001051a:	add    BYTE PTR [rax],al
   14001051c:	rcr    BYTE PTR [rax-0x66f70000],0x0
   140010523:	add    ah,bh
   140010525:	fld    QWORD PTR [rax]
   140010527:	add    BYTE PTR [rax],dl
   140010529:	cdq    
   14001052a:	add    BYTE PTR [rax],al
   14001052c:	sbb    DWORD PTR [rbx-0x228c0000],0x9b900000
   140010536:	add    BYTE PTR [rax],al
   140010538:	movabs ds:0xc00000da0000009b,al
   140010541:	fwait
   140010542:	add    BYTE PTR [rax],al
   140010544:	ficomp WORD PTR [rbx-0x22580000]
   14001054a:	add    BYTE PTR [rax],al
   14001054c:	in     al,0x9b
   14001054e:	add    BYTE PTR [rax],al
   140010550:	rex.WRX pushf 
   140010552:	add    BYTE PTR [rax],al
   140010554:	lods   al,BYTE PTR ds:[rsi]
   140010555:	fld    QWORD PTR [rax]
   140010557:	add    BYTE PTR [rsp+rbx*4+0x0],dl
   14001055b:	add    BYTE PTR [rax-0x2bffff64],ch
   140010561:	fld    QWORD PTR [rax]
   140010563:	add    BYTE PTR [rax-0x1fffff64],dh
   140010569:	pushf  
   14001056a:	add    BYTE PTR [rax],al
   14001056c:	js     0x14001053f
   14001056e:	add    BYTE PTR [rax],al
   140010570:	lock pushf 
   140010572:	add    BYTE PTR [rax],al
   140010574:	rex.B popf 
   140010576:	add    BYTE PTR [rax],al
   140010578:	cld    
   140010579:	fld    QWORD PTR [rax]
   14001057b:	add    BYTE PTR [rax-0x63],cl
   14001057e:	add    BYTE PTR [rax],al
   140010580:	jl     0x14001051f
   140010582:	add    BYTE PTR [rax],al
   140010584:	lock rol BYTE PTR [rax],cl
   140010587:	add    BYTE PTR [rax+0x100009d],dl
   14001058d:	lahf   
   14001058e:	add    BYTE PTR [rax],al
   140010590:	or     al,0xde
   140010592:	add    BYTE PTR [rax],al
   140010594:	or     BYTE PTR [rdi-0x60010000],bl
   14001059a:	add    BYTE PTR [rax],al
   14001059c:	add    al,0xde
   14001059e:	add    BYTE PTR [rax],al
   1400105a0:	or     BYTE PTR [rax-0x5f5a0000],ah
   1400105a6:	add    BYTE PTR [rax],al
   1400105a8:	adc    al,0xde
   1400105aa:	add    BYTE PTR [rax],al
   1400105ac:	lods   al,BYTE PTR ds:[rsi]
   1400105ad:	movabs al,ds:0xda000000a0c30000
   1400105b6:	add    BYTE PTR [rax],al
   1400105b8:	int3   
   1400105b9:	movabs al,ds:0xde380000a13c0000
   1400105c2:	add    BYTE PTR [rax],al
   1400105c4:	shl    BYTE PTR [rcx-0x5e070000],0x0
   1400105cb:	add    BYTE PTR [rax],al
   1400105cd:	fiadd  DWORD PTR [rax]
   1400105cf:	add    BYTE PTR [rax],al
   1400105d1:	movabs ds:0xda000000a2180000,al
   1400105da:	add    BYTE PTR [rax],al
   1400105dc:	sub    al,0xa2
   1400105de:	add    BYTE PTR [rax],al
   1400105e0:	and    BYTE PTR [rdx-0x219c0000],0x0
   1400105e7:	add    BYTE PTR [rax-0x32ffff5e],cl
   1400105ed:	movabs ds:0xa3300000d2f00000,al
   1400105f6:	add    BYTE PTR [rax],al
   1400105f8:	jge    0x14001059d
   1400105fa:	add    BYTE PTR [rax],al
   1400105fc:	test   dh,bl
   1400105fe:	add    BYTE PTR [rax],al
   140010600:	(bad)
   140010604:	xchg   esp,eax
   140010605:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010606:	add    BYTE PTR [rax],al
   140010608:	test   al,0xde
   14001060a:	add    BYTE PTR [rax],al
   14001060c:	int3   
   14001060d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001060e:	add    BYTE PTR [rax],al
   140010610:	(bad)  
   140010611:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010612:	add    BYTE PTR [rax],al
   140010614:	mov    ah,0xde
   140010616:	add    BYTE PTR [rax],al
   140010618:	enter  0xa5,0x0
   14001061c:	in     eax,0xa5
   14001061e:	add    BYTE PTR [rax],al
   140010620:	add    dl,bl
   140010622:	add    BYTE PTR [rax],al
   140010624:	in     al,dx
   140010625:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010626:	add    BYTE PTR [rax],al
   140010628:	rex.WRXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001062a:	add    BYTE PTR [rax],al
   14001062c:	lock rol BYTE PTR [rax],cl
   14001062f:	add    BYTE PTR [rsi+riz*4+0x0],ah
   140010633:	add    bl,dh
   140010635:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010636:	add    BYTE PTR [rax],al
   140010638:	or     dl,bl
   14001063a:	add    BYTE PTR [rax],al
   14001063c:	and    BYTE PTR [rdi-0x58de0000],ah
   140010642:	add    BYTE PTR [rax],al
   140010644:	enter  0xde,0x0
   140010648:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001064a:	add    BYTE PTR [rax],al
   14001064c:	lea    esp,[rdi-0x21300000]
   140010652:	add    BYTE PTR [rax],al
   140010654:	mov    ah,0xa7
   140010656:	add    BYTE PTR [rax],al
   140010658:	iret   
   140010659:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001065a:	add    BYTE PTR [rax],al
   14001065c:	js     0x140010631
   14001065e:	add    BYTE PTR [rax],al
   140010660:	(bad)  
   140010661:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010662:	add    BYTE PTR [rax],al
   140010664:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010666:	add    BYTE PTR [rax],al
   140010668:	clc    
   140010669:	rol    DWORD PTR [rax],cl
   14001066b:	add    BYTE PTR [rcx],dl
   14001066d:	test   al,0x0
   14001066f:	add    BYTE PTR [rax+rbp*4],ch
   140010672:	add    BYTE PTR [rax],al
   140010674:	mov    al,0xd4
   140010676:	add    BYTE PTR [rax],al
   140010678:	rex.R test al,0x0
   14001067b:	add    BYTE PTR [rdi-0x58],bl
   14001067e:	add    BYTE PTR [rax],al
   140010680:	pop    rax
   140010681:	(bad)  
   140010682:	add    BYTE PTR [rax],al
   140010684:	gs test al,0x0
   140010687:	add    BYTE PTR [rax-0x7fffff58],al
   14001068d:	(bad)  
   14001068e:	add    BYTE PTR [rax],al
   140010690:	xchg   edx,eax
   140010691:	test   al,0x0
   140010693:	add    BYTE PTR [rbp+0x500000a8],ch
   140010699:	xlat   BYTE PTR ds:[rbx]
   14001069a:	add    BYTE PTR [rax],al
   14001069c:	cmc    
   14001069d:	test   al,0x0
   14001069f:	add    BYTE PTR [rip+0xfffffffff80000a9],dl        # 0x13801074e
   1400106a5:	rol    DWORD PTR [rax],cl
   1400106a7:	add    BYTE PTR [rdi-0x57],cl
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	push   0xffffffffffffffa9
   1400106ae:	add    BYTE PTR [rax],al
   1400106b0:	rcr    cl,0x0
   1400106b3:	add    BYTE PTR [rsi-0x57],dh
   1400106b6:	add    BYTE PTR [rax],al
   1400106b8:	xchg   ecx,eax
   1400106b9:	test   eax,0xd9c00000
   1400106be:	add    BYTE PTR [rax],al
   1400106c0:	fild   QWORD PTR [rcx-0x56060000]
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	nop
   1400106c9:	fild   DWORD PTR [rax]
   1400106cb:	add    BYTE PTR [rsi],al
   1400106cd:	stos   BYTE PTR es:[rdi],al
   1400106ce:	add    BYTE PTR [rax],al
   1400106d0:	and    DWORD PTR [rdx-0x24700000],ebp
   1400106d6:	add    BYTE PTR [rax],al
   1400106d8:	pop    rbp
   1400106d9:	stos   BYTE PTR es:[rdi],al
   1400106da:	add    BYTE PTR [rax],al
   1400106dc:	js     0x140010688
   1400106de:	add    BYTE PTR [rax],al
   1400106e0:	adc    ch,bl
   1400106e2:	add    BYTE PTR [rax],al
   1400106e4:	jle    0x140010690
   1400106e6:	add    BYTE PTR [rax],al
   1400106e8:	pushf  
   1400106e9:	stos   BYTE PTR es:[rdi],al
   1400106ea:	add    BYTE PTR [rax],al
   1400106ec:	clc    
   1400106ed:	rol    DWORD PTR [rax],cl
   1400106ef:	add    BYTE PTR [rdx-0x31ffff56],ah
   1400106f5:	stos   BYTE PTR es:[rdi],al
   1400106f6:	add    BYTE PTR [rax],al
   1400106f8:	clc    
   1400106f9:	rol    DWORD PTR [rax],cl
   1400106fb:	add    ah,dl
   1400106fd:	stos   BYTE PTR es:[rdi],al
   1400106fe:	add    BYTE PTR [rax],al
   140010700:	(bad)  
   140010701:	stos   DWORD PTR es:[rdi],eax
   140010702:	add    BYTE PTR [rax],al
   140010704:	clc    
   140010705:	rol    DWORD PTR [rax],cl
   140010707:	add    BYTE PTR [rbx+rbp*4],bl
   14001070a:	add    BYTE PTR [rax],al
   14001070c:	(bad)  
   14001070d:	stos   DWORD PTR es:[rdi],eax
   14001070e:	add    BYTE PTR [rax],al
   140010710:	clc    
   140010711:	rol    DWORD PTR [rax],cl
   140010713:	add    BYTE PTR [rip+0x690000ab],bh        # 0x1a90107c4
   140010719:	stos   DWORD PTR es:[rdi],eax
   14001071a:	add    BYTE PTR [rax],al
   14001071c:	clc    
   14001071d:	rol    DWORD PTR [rax],cl
   14001071f:	add    BYTE PTR [rax-0x55],dh
   140010722:	add    BYTE PTR [rax],al
   140010724:	nop
   140010725:	stos   DWORD PTR es:[rdi],eax
   140010726:	add    BYTE PTR [rax],al
   140010728:	clc    
   140010729:	rol    DWORD PTR [rax],cl
   14001072b:	add    BYTE PTR [rax+0x190000ab],ah
   140010731:	lods   al,BYTE PTR ds:[rsi]
   140010732:	add    BYTE PTR [rax],al
   140010734:	js     0x140010707
   140010736:	add    BYTE PTR [rax],al
   140010738:	and    BYTE PTR [rax+rax*1+0xac5e00],ch
   14001073f:	add    BYTE PTR [rax],al
   140010741:	fiadd  DWORD PTR [rax]
   140010743:	add    BYTE PTR [rax-0x54],dh
   140010746:	add    BYTE PTR [rax],al
   140010748:	push   rcx
   140010749:	lods   eax,DWORD PTR ds:[rsi]
   14001074a:	add    BYTE PTR [rax],al
   14001074c:	.byte 0x68
   14001074d:	rol    DWORD PTR [rax],1
	...

Disassembly of section .rsrc:

0000000140011000 <.rsrc>:
	...
   14001100c:	add    al,BYTE PTR [rax]
   14001100e:	add    al,BYTE PTR [rax]
   140011010:	(bad)  
   140011011:	add    DWORD PTR [rax],eax
   140011013:	xor    BYTE PTR [rax],0x0
   140011016:	add    BYTE PTR [rax-0x7ffffe8e],al
   14001101c:	push   rax
   14001101d:	add    BYTE PTR [rax],al
   14001101f:	adc    BYTE PTR [rax],0x0
   140011022:	add    BYTE PTR [rax],al
   140011024:	push   0x18800000
   140011029:	add    BYTE PTR [rax],al
   14001102b:	add    BYTE PTR [rax+0x800000],al
	...
   14001103d:	add    BYTE PTR [rdx],al
   14001103f:	add    BYTE PTR [rax+rax*1+0x0],ah
   140011043:	add    BYTE PTR [rax+0x65800000],bl
   140011049:	add    BYTE PTR [rax],al
   14001104b:	add    BYTE PTR [rax+0x800000],dh
	...
   14001105d:	add    BYTE PTR [rcx],al
   14001105f:	add    BYTE PTR [rcx],al
   140011061:	add    BYTE PTR [rax],al
   140011063:	add    al,cl
   140011065:	add    BYTE PTR [rax],al
   140011067:	add    BYTE PTR [rax],0x0
	...
   140011076:	add    DWORD PTR [rax],eax
   140011078:	add    DWORD PTR [rax],eax
   14001107a:	add    BYTE PTR [rax],al
   14001107c:	loopne 0x14001107e
   14001107e:	add    BYTE PTR [rax+0x0],al
	...
   14001108c:	add    BYTE PTR [rax],al
   14001108e:	add    DWORD PTR [rax],eax
   140011090:	add    DWORD PTR [rax],eax
   140011092:	add    BYTE PTR [rax],al
   140011094:	clc    
   140011095:	add    BYTE PTR [rax],al
   140011097:	add    BYTE PTR [rax],0x0
	...
   1400110a6:	add    DWORD PTR [rax],eax
   1400110a8:	or     DWORD PTR [rax+rax*1],eax
   1400110ab:	add    BYTE PTR [rax],dl
   1400110ad:	add    DWORD PTR [rax],eax
	...
   1400110bb:	add    BYTE PTR [rax],al
   1400110bd:	add    BYTE PTR [rcx],al
   1400110bf:	add    BYTE PTR [rcx],cl
   1400110c1:	add    al,0x0
   1400110c3:	add    BYTE PTR [rax],ah
   1400110c5:	add    DWORD PTR [rax],eax
	...
   1400110d3:	add    BYTE PTR [rax],al
   1400110d5:	add    BYTE PTR [rcx],al
   1400110d7:	add    BYTE PTR [rcx],cl
   1400110d9:	add    al,0x0
   1400110db:	add    BYTE PTR [rax],dh
   1400110dd:	add    DWORD PTR [rax],eax
	...
   1400110eb:	add    BYTE PTR [rax],al
   1400110ed:	add    BYTE PTR [rcx],al
   1400110ef:	add    BYTE PTR [rcx],cl
   1400110f1:	add    al,0x0
   1400110f3:	add    BYTE PTR [rax+0x1],al
	...
   140011106:	add    DWORD PTR [rax],eax
   140011108:	or     DWORD PTR [rax+rax*1],eax
   14001110b:	add    BYTE PTR [rax+0x1],dl
   14001110e:	add    BYTE PTR [rax],al
   140011110:	adc    BYTE PTR [rax],bl
   140011112:	add    DWORD PTR [rax],eax
   140011114:	repz add eax,DWORD PTR [rax]
	...
   14001111f:	add    BYTE PTR [rax],cl
   140011121:	sbb    al,0x1
   140011123:	add    BYTE PTR [rcx+0x9],al
   140011129:	add    BYTE PTR [rax],al
   14001112b:	add    BYTE PTR [rax],al
   14001112d:	add    BYTE PTR [rax],al
   14001112f:	add    BYTE PTR [rax+0x4000125],dl
   140011135:	adc    al,0x0
	...
   14001113f:	add    BYTE PTR [rax+0x14],dl
   140011142:	add    DWORD PTR [rax],eax
   140011144:	mov    esp,0x3
   140011149:	add    BYTE PTR [rax],al
   14001114b:	add    BYTE PTR [rax],al
   14001114d:	add    BYTE PTR [rax],al
   14001114f:	add    BYTE PTR [rax-0x44fffeef],dl
   140011155:	add    al,BYTE PTR [rax]
	...
   14001115f:	add    BYTE PTR [rax],cl
   140011161:	add    BYTE PTR [rdx+0x0],dl
   140011164:	add    BYTE PTR [r15+0x0],r8b
   140011168:	rex.WB add BYTE PTR [r11+0x0],dl
   14001116c:	push   rsp
   14001116d:	add    BYTE PTR [rdx+0x0],dl
   140011170:	pop    rcx
   140011171:	add    BYTE PTR [rdi],al
   140011173:	add    BYTE PTR [rax+rax*1+0x59],dl
   140011177:	add    BYTE PTR [rax+0x0],dl
   14001117a:	add    BYTE PTR [r8+rax*1+0x49],r9b
   14001117f:	add    BYTE PTR [rdx+0x0],al
	...
   14001118e:	add    BYTE PTR [rax],al
   140011190:	cmp    al,0x3f
   140011192:	js     0x140011201
   140011194:	ins    BYTE PTR es:[rdi],dx
   140011195:	and    BYTE PTR [rsi+0x65],dh
   140011198:	jb     0x14001120d
   14001119a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400111a1:	xor    BYTE PTR [rdx],ah
   1400111a3:	and    BYTE PTR [rbp+0x6e],ah
   1400111a6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400111a9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400111b0:	rex.RX sub eax,0x73202238
   1400111b6:	je     0x140011219
   1400111b8:	outs   dx,BYTE PTR ds:[rsi]
   1400111b9:	fs (bad) 
   1400111bb:	ins    BYTE PTR es:[rdi],dx
   1400111bc:	outs   dx,DWORD PTR ds:[rsi]
   1400111bd:	outs   dx,BYTE PTR ds:[rsi]
   1400111be:	gs cmp eax,0x73657922
   1400111c4:	and    bh,BYTE PTR [rdi]
   1400111c6:	ds or  eax,0x2d213c0a
   1400111cc:	sub    eax,0x706f4320
   1400111d1:	jns    0x140011245
   1400111d3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400111da:	sub    DWORD PTR [rax],esp
   1400111dc:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400111e4:	je     0x140011206
   1400111e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400111e8:	jb     0x14001125a
   1400111ea:	outs   dx,DWORD PTR ds:[rsi]
   1400111eb:	jb     0x14001124e
   1400111ed:	je     0x140011258
   1400111ef:	outs   dx,DWORD PTR ds:[rsi]
   1400111f0:	outs   dx,BYTE PTR ds:[rsi]
   1400111f1:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e5024
   1400111f7:	cmp    al,0x61
   1400111f9:	jae    0x14001126e
   1400111fb:	gs ins DWORD PTR es:[rdi],dx
   1400111fd:	(bad)  
   1400111fe:	ins    BYTE PTR es:[rdi],dx
   1400111ff:	jns    0x140011221
   140011201:	js     0x140011270
   140011203:	ins    BYTE PTR es:[rdi],dx
   140011204:	outs   dx,BYTE PTR ds:[rsi]
   140011205:	jae    0x140011244
   140011207:	and    dh,BYTE PTR [rbp+0x72]
   14001120a:	outs   dx,BYTE PTR ds:[rsi]
   14001120b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001120e:	push   0x73616d65
   140011213:	sub    eax,0x7263696d
   140011218:	outs   dx,DWORD PTR ds:[rsi]
   140011219:	jae    0x14001128a
   14001121b:	data16 je 0x14001124b
   14001121e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011221:	cmp    ah,BYTE PTR [rcx+0x73]
   140011224:	ins    DWORD PTR es:[rdi],dx
   140011225:	cs jbe 0x140011259
   140011228:	and    ah,BYTE PTR [rax]
   14001122a:	ins    DWORD PTR es:[rdi],dx
   14001122b:	(bad)  
   14001122c:	outs   dx,BYTE PTR ds:[rsi]
   14001122d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140011234:	jb     0x1400112a9
   140011236:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001123d:	xor    BYTE PTR [rdx],ah
   14001123f:	ds or  eax,0x73613c0a
   140011245:	jae    0x1400112ac
   140011247:	ins    DWORD PTR es:[rdi],dx
   140011248:	(bad)  
   140011249:	ins    BYTE PTR es:[rdi],dx
   14001124a:	jns    0x140011295
   14001124c:	fs outs dx,BYTE PTR gs:[rsi]
   14001124f:	je     0x1400112ba
   140011251:	je     0x1400112cc
   140011253:	or     eax,0x2020200a
   140011258:	and    BYTE PTR [rsi+0x65],dh
   14001125b:	jb     0x1400112d0
   14001125d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140011264:	xor    DWORD PTR [rsi],ebp
   140011266:	xor    BYTE PTR [rsi],ch
   140011268:	xor    BYTE PTR [rdx],ah
   14001126a:	or     eax,0x2020200a
   14001126f:	and    BYTE PTR [rax+0x72],dh
   140011272:	outs   dx,DWORD PTR ds:[rsi]
   140011273:	movsxd esp,DWORD PTR [rbp+0x73]
   140011276:	jae    0x1400112e7
   140011278:	jb     0x1400112bb
   14001127a:	jb     0x1400112df
   14001127c:	push   0x63657469
   140011281:	je     0x1400112f8
   140011283:	jb     0x1400112ea
   140011285:	cmp    eax,0x646d6122
   14001128a:	ss xor al,0x22
   14001128d:	or     eax,0x2020200a
   140011292:	and    BYTE PTR [rsi+0x61],ch
   140011295:	ins    DWORD PTR es:[rdi],dx
   140011296:	gs cmp eax,0x63694d22
   14001129c:	jb     0x14001130d
   14001129e:	jae    0x14001130f
   1400112a0:	data16 je 0x1400112d1
   1400112a3:	push   rdi
   1400112a4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400112ab:	push   rsp
   1400112ac:	gs jb  0x14001131c
   1400112af:	imul   ebp,DWORD PTR [rsi+0x61],0x7265536c
   1400112b6:	jbe    0x140011321
   1400112b8:	movsxd esp,DWORD PTR [rbp+0x73]
   1400112bb:	cs push rsp
   1400112bd:	push   rbx
   1400112be:	push   rdi
   1400112bf:	(bad)  
   1400112c0:	push   rax
   1400112c1:	jb     0x14001133b
   1400112c3:	jns    0x1400112e7
   1400112c5:	or     eax,0x2020200a
   1400112ca:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400112ce:	gs cmp eax,0x6e697722
   1400112d4:	xor    esi,DWORD PTR [rdx]
   1400112d6:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f41e6
   1400112dc:	or     bh,BYTE PTR [rsp+riz*2]
   1400112df:	gs jae 0x140011345
   1400112e2:	jb     0x14001134d
   1400112e4:	jo     0x14001135a
   1400112e6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d65523e
   1400112ed:	outs   dx,DWORD PTR ds:[rsi]
   1400112ee:	je     0x140011355
   1400112f0:	and    BYTE PTR [rbp+riz*2+0x73],al
   1400112f4:	imul   esi,DWORD PTR [rdi+rbp*2+0x70],0x20
   1400112f9:	push   rbx
   1400112fa:	gs jb  0x140011373
   1400112fd:	imul   esp,DWORD PTR [rbx+0x65],0x65572073
   140011304:	(bad)  
   140011305:	and    BYTE PTR [rax+0x72],dl
   140011308:	outs   dx,DWORD PTR ds:[rsi]
   140011309:	js     0x140011384
   14001130b:	cmp    al,0x2f
   14001130d:	fs gs jae 0x140011374
   140011311:	jb     0x14001137c
   140011313:	jo     0x140011389
   140011315:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14001131c:	or     bh,BYTE PTR [rsp+rsi*2]
   14001131f:	jb     0x140011396
   140011321:	jae    0x140011397
   140011323:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011325:	outs   dx,WORD PTR ds:[rsi]
   140011327:	and    BYTE PTR [rax+0x6d],bh
   14001132a:	ins    BYTE PTR es:[rdi],dx
   14001132b:	outs   dx,BYTE PTR ds:[rsi]
   14001132c:	jae    0x14001136b
   14001132e:	and    dh,BYTE PTR [rbp+0x72]
   140011331:	outs   dx,BYTE PTR ds:[rsi]
   140011332:	cmp    dh,BYTE PTR [rbx+0x63]
   140011335:	push   0x73616d65
   14001133a:	sub    eax,0x7263696d
   14001133f:	outs   dx,DWORD PTR ds:[rsi]
   140011340:	jae    0x1400113b1
   140011342:	data16 je 0x140011372
   140011345:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011348:	cmp    ah,BYTE PTR [rcx+0x73]
   14001134b:	ins    DWORD PTR es:[rdi],dx
   14001134c:	cs jbe 0x140011382
   14001134f:	and    bh,BYTE PTR [rsi]
   140011351:	or     eax,0x2020200a
   140011356:	and    BYTE PTR [rbx+rsi*2],bh
   140011359:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001135d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140011365:	and    BYTE PTR [rax],ah
   140011367:	and    BYTE PTR [rax],ah
   140011369:	and    BYTE PTR [rax],ah
   14001136b:	cmp    al,0x72
   14001136d:	gs jno 0x1400113e5
   140011370:	gs jae 0x1400113e7
   140011373:	gs fs push rax
   140011376:	jb     0x1400113e1
   140011378:	jbe    0x1400113e3
   14001137a:	ins    BYTE PTR es:[rdi],dx
   14001137b:	gs addr32 gs jae 0x1400113be
   140011380:	or     eax,0x2020200a
   140011385:	and    BYTE PTR [rax],ah
   140011387:	and    BYTE PTR [rax],ah
   140011389:	and    BYTE PTR [rax],ah
   14001138b:	and    BYTE PTR [rax],ah
   14001138d:	and    BYTE PTR [rdx+rsi*2],bh
   140011390:	gs jno 0x140011408
   140011393:	gs jae 0x14001140a
   140011396:	gs fs rex.RB js 0x140011400
   14001139b:	movsxd esi,DWORD PTR [rbp+0x74]
   14001139e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400113a5:	ins    BYTE PTR es:[rdi],dx
   1400113a6:	or     eax,0x2020200a
   1400113ab:	and    BYTE PTR [rax],ah
   1400113ad:	and    BYTE PTR [rax],ah
   1400113af:	and    BYTE PTR [rax],ah
   1400113b1:	and    BYTE PTR [rax],ah
   1400113b3:	and    BYTE PTR [rax],ah
   1400113b5:	and    BYTE PTR [rax],ah
   1400113b7:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400113bb:	gs ins BYTE PTR es:[rdi],dx
   1400113bd:	cmp    eax,0x49736122
   1400113c2:	outs   dx,BYTE PTR ds:[rsi]
   1400113c3:	jbe    0x140011434
   1400113c5:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400113c9:	or     eax,0x2020200a
   1400113ce:	and    BYTE PTR [rax],ah
   1400113d0:	and    BYTE PTR [rax],ah
   1400113d2:	and    BYTE PTR [rax],ah
   1400113d4:	and    BYTE PTR [rax],ah
   1400113d6:	and    BYTE PTR [rax],ah
   1400113d8:	and    BYTE PTR [rax],ah
   1400113da:	and    BYTE PTR [rbp+0x69],dh
   1400113dd:	movsxd esp,DWORD PTR [r11+0x65]
   1400113e1:	jae    0x140011456
   1400113e3:	cmp    eax,0x6c616622
   1400113e8:	jae    0x14001144f
   1400113ea:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602133fa
   1400113f0:	and    BYTE PTR [rax],ah
   1400113f2:	and    BYTE PTR [rax],ah
   1400113f4:	and    BYTE PTR [rax],ah
   1400113f6:	and    BYTE PTR [rax],ah
   1400113f8:	and    BYTE PTR [rdi],ch
   1400113fa:	ds or  eax,0x2020200a
   140011400:	and    BYTE PTR [rax],ah
   140011402:	and    BYTE PTR [rax],ah
   140011404:	and    BYTE PTR [rdi+rbp*1],bh
   140011407:	jb     0x14001146e
   140011409:	jno    0x140011480
   14001140b:	gs jae 0x140011482
   14001140e:	gs fs push rax
   140011411:	jb     0x14001147c
   140011413:	jbe    0x14001147e
   140011415:	ins    BYTE PTR es:[rdi],dx
   140011416:	gs addr32 gs jae 0x140011459
   14001141b:	or     eax,0x2020200a
   140011420:	and    BYTE PTR [rdi+rbp*1],bh
   140011423:	jae    0x14001148a
   140011425:	movsxd esi,DWORD PTR [rbp+0x72]
   140011428:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140011430:	je     0x1400114a4
   140011432:	jne    0x1400114a7
   140011434:	je     0x14001147f
   140011436:	outs   dx,BYTE PTR ds:[rsi]
   140011437:	outs   dx,WORD PTR ds:[rsi]
   140011439:	ds or  eax,0x612f3c0a
   14001143f:	jae    0x1400114b4
   140011441:	gs ins DWORD PTR es:[rdi],dx
   140011443:	(bad)  
   140011444:	ins    BYTE PTR es:[rdi],dx
   140011445:	jns    0x140011485
   140011447:	or     eax,0xa0d0a
   14001144c:	add    BYTE PTR [rax],al
   14001144e:	add    BYTE PTR [rax],al
   140011450:	mov    esp,0x3403
   140011455:	add    BYTE PTR [rsi+0x0],dl
   140011458:	push   rbx
   140011459:	add    BYTE PTR [rdi+0x0],bl
   14001145c:	push   rsi
   14001145d:	add    BYTE PTR [rbp+0x0],al
   140011460:	push   rdx
   140011461:	add    BYTE PTR [rbx+0x0],dl
   140011464:	rex.WB add BYTE PTR [r15+0x0],cl
   140011468:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14001146c:	rex.WB add BYTE PTR [r14+0x0],cl
   140011470:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140011474:	add    BYTE PTR [rax],al
   140011476:	add    BYTE PTR [rax],al
   140011478:	mov    ebp,0xfeef04
   14001147d:	add    BYTE PTR [rcx],al
   14001147f:	add    BYTE PTR [rax],al
   140011481:	add    BYTE PTR [rdx],cl
   140011483:	add    BYTE PTR [rax],al
   140011485:	add    BYTE PTR [rax],bpl
   140011488:	add    BYTE PTR [rax],al
   14001148a:	or     al,BYTE PTR [rax]
   14001148c:	add    BYTE PTR [rax+0x0],al
   14001148f:	sub    BYTE PTR [rdi],bh
   140011491:	add    BYTE PTR [rax],al
   140011493:	add    BYTE PTR [rax],al
   140011495:	add    BYTE PTR [rax],al
   140011497:	add    BYTE PTR [rax+rax*1],al
   14001149a:	add    al,0x0
   14001149c:	add    DWORD PTR [rax],eax
	...
   1400114aa:	add    BYTE PTR [rax],al
   1400114ac:	sbb    al,BYTE PTR [rbx]
   1400114ae:	add    BYTE PTR [rax],al
   1400114b0:	add    DWORD PTR [rax],eax
   1400114b2:	push   rbx
   1400114b3:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400114b7:	add    BYTE PTR [rcx+0x0],ch
   1400114ba:	outs   dx,BYTE PTR ds:[rsi]
   1400114bb:	add    BYTE PTR [rdi+0x0],ah
   1400114be:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400114c2:	ins    BYTE PTR es:[rdi],dx
   1400114c3:	add    BYTE PTR [rbp+0x0],ah
   1400114c6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400114ca:	data16 add BYTE PTR [rdi+0x0],ch
   1400114ce:	add    BYTE PTR [rax],al
   1400114d0:	test   BYTE PTR [rdx],0x0
   1400114d3:	add    BYTE PTR [rcx],al
   1400114d5:	add    BYTE PTR [rax],dh
   1400114d7:	add    BYTE PTR [rax+rax*1],dh
   1400114da:	xor    BYTE PTR [rax],al
   1400114dc:	cmp    DWORD PTR [rax],eax
   1400114de:	xor    BYTE PTR [rax],al
   1400114e0:	xor    al,0x0
   1400114e2:	rex.X add BYTE PTR [rax],sil
   1400114e5:	add    BYTE PTR [rax],al
   1400114e7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400114eb:	add    BYTE PTR [rcx],al
   1400114ed:	add    BYTE PTR [rbx+0x0],al
   1400114f0:	outs   dx,DWORD PTR ds:[rsi]
   1400114f1:	add    BYTE PTR [rbp+0x0],ch
   1400114f4:	jo     0x1400114f6
   1400114f6:	(bad)  
   1400114f7:	add    BYTE PTR [rsi+0x0],ch
   1400114fa:	jns    0x1400114fc
   1400114fc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011500:	ins    DWORD PTR es:[rdi],dx
   140011501:	add    BYTE PTR [rbp+0x0],ah
   140011504:	add    BYTE PTR [rax],al
   140011506:	add    BYTE PTR [rax],al
   140011508:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001150c:	movsxd eax,DWORD PTR [rax]
   14001150e:	jb     0x140011510
   140011510:	outs   dx,DWORD PTR ds:[rsi]
   140011511:	add    BYTE PTR [rbx+0x0],dh
   140011514:	outs   dx,DWORD PTR ds:[rsi]
   140011515:	add    BYTE PTR [rsi+0x0],ah
   140011518:	je     0x14001151a
   14001151a:	and    BYTE PTR [rax],al
   14001151c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140011520:	jb     0x140011522
   140011522:	jo     0x140011524
   140011524:	outs   dx,DWORD PTR ds:[rsi]
   140011525:	add    BYTE PTR [rdx+0x0],dh
   140011528:	(bad)  
   140011529:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001152d:	add    BYTE PTR [rdi+0x0],ch
   140011530:	outs   dx,BYTE PTR ds:[rsi]
   140011531:	add    BYTE PTR [rax],al
   140011533:	add    BYTE PTR [rax+0x1002c00],al
   140011539:	add    BYTE PTR [rsi+0x0],al
   14001153c:	imul   eax,DWORD PTR [rax],0x65006c
   140011542:	add    BYTE PTR [rbp+0x0],r12b
   140011546:	jae    0x140011548
   140011548:	movsxd eax,DWORD PTR [rax]
   14001154a:	jb     0x14001154c
   14001154c:	imul   eax,DWORD PTR [rax],0x740070
   140011552:	imul   eax,DWORD PTR [rax],0x6e006f
   140011558:	add    BYTE PTR [rax],al
   14001155a:	add    BYTE PTR [rax],al
   14001155c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011560:	movsxd eax,DWORD PTR [rax]
   140011562:	jb     0x140011564
   140011564:	outs   dx,DWORD PTR ds:[rsi]
   140011565:	add    BYTE PTR [rbx+0x0],dh
   140011568:	outs   dx,DWORD PTR ds:[rsi]
   140011569:	add    BYTE PTR [rsi+0x0],ah
   14001156c:	je     0x14001156e
   14001156e:	and    BYTE PTR [rax],al
   140011570:	push   rdx
   140011571:	add    BYTE PTR [rbp+0x0],ah
   140011574:	ins    DWORD PTR es:[rdi],dx
   140011575:	add    BYTE PTR [rdi+0x0],ch
   140011578:	je     0x14001157a
   14001157a:	add    BYTE PTR gs:[rax],ah
   14001157d:	add    BYTE PTR [rax+rax*1+0x65],al
   140011581:	add    BYTE PTR [rbx+0x0],dh
   140011584:	imul   eax,DWORD PTR [rax],0x74
   140011587:	add    BYTE PTR [rdi+0x0],ch
   14001158a:	jo     0x14001158c
   14001158c:	and    BYTE PTR [rax],al
   14001158e:	push   rbx
   14001158f:	add    BYTE PTR [rbp+0x0],ah
   140011592:	jb     0x140011594
   140011594:	jbe    0x140011596
   140011596:	imul   eax,DWORD PTR [rax],0x650063
   14001159c:	jae    0x14001159e
   14001159e:	and    BYTE PTR [rax],al
   1400115a0:	push   rdi
   1400115a1:	add    BYTE PTR [rbp+0x0],ah
   1400115a4:	(bad)  
   1400115a5:	add    BYTE PTR [rax],ah
   1400115a7:	add    BYTE PTR [rax+0x0],dl
   1400115aa:	jb     0x1400115ac
   1400115ac:	outs   dx,DWORD PTR ds:[rsi]
   1400115ad:	add    BYTE PTR [rax+0x0],bh
   1400115b0:	jns    0x1400115b2
   1400115b2:	add    BYTE PTR [rax],al
   1400115b4:	data16 add BYTE PTR [rbx],ah
   1400115b7:	add    BYTE PTR [rcx],al
   1400115b9:	add    BYTE PTR [rsi+0x0],al
   1400115bc:	imul   eax,DWORD PTR [rax],0x65006c
   1400115c2:	push   rsi
   1400115c3:	add    BYTE PTR [rbp+0x0],ah
   1400115c6:	jb     0x1400115c8
   1400115c8:	jae    0x1400115ca
   1400115ca:	imul   eax,DWORD PTR [rax],0x6e006f
   1400115d0:	add    BYTE PTR [rax],al
   1400115d2:	add    BYTE PTR [rax],al
   1400115d4:	xor    DWORD PTR [rax],eax
   1400115d6:	xor    BYTE PTR [rax],al
   1400115d8:	add    BYTE PTR cs:[rax],dh
   1400115db:	add    BYTE PTR [rsi],ch
   1400115dd:	add    BYTE PTR [rcx],dh
   1400115df:	add    BYTE PTR [rax],dh
   1400115e1:	add    BYTE PTR [rdx],dh
   1400115e3:	add    BYTE PTR [rax+rax*1],dh
   1400115e6:	xor    BYTE PTR [rax],al
   1400115e8:	add    BYTE PTR cs:[rcx],dh
   1400115eb:	add    BYTE PTR [rsi],dh
   1400115ed:	add    BYTE PTR [rbx],dh
   1400115ef:	add    BYTE PTR [rax],bh
   1400115f1:	add    BYTE PTR [rax+rax*1],dh
   1400115f4:	and    BYTE PTR [rax],al
   1400115f6:	sub    BYTE PTR [rax],al
   1400115f8:	je     0x1400115fa
   1400115fa:	push   0x2e003100
   1400115ff:	add    BYTE PTR [rcx],dh
   140011601:	add    BYTE PTR [rip+0x37003000],dh        # 0x177014607
   140011607:	add    BYTE PTR [rax],dh
   140011609:	add    BYTE PTR [rcx],bh
   14001160b:	add    BYTE PTR [rip+0x37003100],ch        # 0x177014711
   140011611:	add    BYTE PTR [rax],dh
   140011613:	add    BYTE PTR [rax],dh
   140011615:	add    BYTE PTR [rcx],ch
   140011617:	add    BYTE PTR [rax],al
   140011619:	add    BYTE PTR [rax],al
   14001161b:	add    BYTE PTR [rdx],dh
   14001161d:	add    BYTE PTR [rcx],cl
   14001161f:	add    BYTE PTR [rcx],al
   140011621:	add    BYTE PTR [rcx+0x0],cl
   140011624:	outs   dx,BYTE PTR ds:[rsi]
   140011625:	add    BYTE PTR [rax+rax*1+0x65],dh
   140011629:	add    BYTE PTR [rdx+0x0],dh
   14001162c:	outs   dx,BYTE PTR ds:[rsi]
   14001162d:	add    BYTE PTR [rcx+0x0],ah
   140011630:	ins    BYTE PTR es:[rdi],dx
   140011631:	add    BYTE PTR [rsi+0x0],cl
   140011634:	(bad)  
   140011635:	add    BYTE PTR [rbp+0x0],ch
   140011638:	add    BYTE PTR gs:[rax],al
   14001163b:	add    BYTE PTR [rax+rax*1+0x53],dl
   14001163f:	add    BYTE PTR [rdi+0x0],dl
   140011642:	(bad)  
   140011643:	add    BYTE PTR [rax+0x0],dl
   140011646:	jb     0x140011648
   140011648:	js     0x14001164a
   14001164a:	jns    0x14001164c
   14001164c:	add    BYTE PTR [rax],al
   14001164e:	add    BYTE PTR [rax],al
   140011650:	add    BYTE PTR [rax],0x2e
   140011653:	add    BYTE PTR [rcx],al
   140011655:	add    BYTE PTR [rax+rax*1+0x65],cl
   140011659:	add    BYTE PTR [rdi+0x0],ah
   14001165c:	(bad)  
   14001165d:	add    BYTE PTR [rax+rax*1+0x43],ch
   140011661:	add    BYTE PTR [rdi+0x0],ch
   140011664:	jo     0x140011666
   140011666:	jns    0x140011668
   140011668:	jb     0x14001166a
   14001166a:	imul   eax,DWORD PTR [rax],0x680067
   140011670:	je     0x140011672
   140011672:	add    BYTE PTR [rax],al
   140011674:	test   eax,0x4d002000
   140011679:	add    BYTE PTR [rcx+0x0],ch
   14001167c:	movsxd eax,DWORD PTR [rax]
   14001167e:	jb     0x140011680
   140011680:	outs   dx,DWORD PTR ds:[rsi]
   140011681:	add    BYTE PTR [rbx+0x0],dh
   140011684:	outs   dx,DWORD PTR ds:[rsi]
   140011685:	add    BYTE PTR [rsi+0x0],ah
   140011688:	je     0x14001168a
   14001168a:	and    BYTE PTR [rax],al
   14001168c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140011690:	jb     0x140011692
   140011692:	jo     0x140011694
   140011694:	outs   dx,DWORD PTR ds:[rsi]
   140011695:	add    BYTE PTR [rdx+0x0],dh
   140011698:	(bad)  
   140011699:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001169d:	add    BYTE PTR [rdi+0x0],ch
   1400116a0:	outs   dx,BYTE PTR ds:[rsi]
   1400116a1:	add    BYTE PTR [rsi],ch
   1400116a3:	add    BYTE PTR [rax],ah
   1400116a5:	add    BYTE PTR [rcx+0x0],al
   1400116a8:	ins    BYTE PTR es:[rdi],dx
   1400116a9:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400116ad:	add    BYTE PTR [rdx+0x0],dh
   1400116b0:	imul   eax,DWORD PTR [rax],0x680067
   1400116b6:	je     0x1400116b8
   1400116b8:	jae    0x1400116ba
   1400116ba:	and    BYTE PTR [rax],al
   1400116bc:	jb     0x1400116be
   1400116be:	add    BYTE PTR gs:[rbx+0x0],dh
   1400116c2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400116c6:	jbe    0x1400116c8
   1400116c8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400116cd:	add    BYTE PTR [rax],al
   1400116cf:	add    BYTE PTR [rdx+0x0],al
   1400116d2:	or     eax,0x4f000100
   1400116d7:	add    BYTE PTR [rdx+0x0],dh
   1400116da:	imul   eax,DWORD PTR [rax],0x690067
   1400116e0:	outs   dx,BYTE PTR ds:[rsi]
   1400116e1:	add    BYTE PTR [rcx+0x0],ah
   1400116e4:	ins    BYTE PTR es:[rdi],dx
   1400116e5:	add    BYTE PTR [rsi+0x0],al
   1400116e8:	imul   eax,DWORD PTR [rax],0x65006c
   1400116ee:	outs   dx,BYTE PTR ds:[rsi]
   1400116ef:	add    BYTE PTR [rcx+0x0],ah
   1400116f2:	ins    DWORD PTR es:[rdi],dx
   1400116f3:	add    BYTE PTR [rbp+0x0],ah
   1400116f6:	add    BYTE PTR [rax],al
   1400116f8:	push   rsp
   1400116f9:	add    BYTE PTR [rbx+0x0],dl
   1400116fc:	push   rdi
   1400116fd:	add    BYTE PTR [rdx+0x0],ah
   140011700:	push   rax
   140011701:	add    BYTE PTR [rdx+0x0],dh
   140011704:	js     0x140011706
   140011706:	jns    0x140011708
   140011708:	add    BYTE PTR cs:[rbp+0x0],ah
   14001170c:	js     0x14001170e
   14001170e:	add    BYTE PTR gs:[rax],al
   140011711:	add    BYTE PTR [rax],al
   140011713:	add    BYTE PTR [rdx+0x0],ch
   140011716:	and    eax,0x50000100
   14001171b:	add    BYTE PTR [rdx+0x0],dh
   14001171e:	outs   dx,DWORD PTR ds:[rsi]
   14001171f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140011723:	add    BYTE PTR [rbx+0x0],ah
   140011726:	je     0x140011728
   140011728:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001172c:	ins    DWORD PTR es:[rdi],dx
   14001172d:	add    BYTE PTR [rbp+0x0],ah
   140011730:	add    BYTE PTR [rax],al
   140011732:	add    BYTE PTR [rax],al
   140011734:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011738:	movsxd eax,DWORD PTR [rax]
   14001173a:	jb     0x14001173c
   14001173c:	outs   dx,DWORD PTR ds:[rsi]
   14001173d:	add    BYTE PTR [rbx+0x0],dh
   140011740:	outs   dx,DWORD PTR ds:[rsi]
   140011741:	add    BYTE PTR [rsi+0x0],ah
   140011744:	je     0x140011746
   140011746:	scas   al,BYTE PTR es:[rdi]
   140011747:	add    BYTE PTR [rax],ah
   140011749:	add    BYTE PTR [rdi+0x0],dl
   14001174c:	imul   eax,DWORD PTR [rax],0x64006e
   140011752:	outs   dx,DWORD PTR ds:[rsi]
   140011753:	add    BYTE PTR [rdi+0x0],dh
   140011756:	jae    0x140011758
   140011758:	scas   al,BYTE PTR es:[rdi]
   140011759:	add    BYTE PTR [rax],ah
   14001175b:	add    BYTE PTR [rdi+0x0],cl
   14001175e:	jo     0x140011760
   140011760:	add    BYTE PTR gs:[rdx+0x0],dh
   140011764:	(bad)  
   140011765:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011769:	add    BYTE PTR [rsi+0x0],ch
   14001176c:	add    BYTE PTR [eax],ah
   14001176f:	add    BYTE PTR [rbx+0x0],dl
   140011772:	jns    0x140011774
   140011774:	jae    0x140011776
   140011776:	je     0x140011778
   140011778:	add    BYTE PTR gs:[rbp+0x0],ch
   14001177c:	add    BYTE PTR [rax],al
   14001177e:	add    BYTE PTR [rax],al
   140011780:	rex.RX add BYTE PTR [rcx],r10b
   140011783:	add    BYTE PTR [rcx],al
   140011785:	add    BYTE PTR [rax+0x0],dl
   140011788:	jb     0x14001178a
   14001178a:	outs   dx,DWORD PTR ds:[rsi]
   14001178b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001178f:	add    BYTE PTR [rbx+0x0],ah
   140011792:	je     0x140011794
   140011794:	push   rsi
   140011795:	add    BYTE PTR [rbp+0x0],ah
   140011798:	jb     0x14001179a
   14001179a:	jae    0x14001179c
   14001179c:	imul   eax,DWORD PTR [rax],0x6e006f
   1400117a2:	add    BYTE PTR [rax],al
   1400117a4:	xor    DWORD PTR [rax],eax
   1400117a6:	xor    BYTE PTR [rax],al
   1400117a8:	add    BYTE PTR cs:[rax],dh
   1400117ab:	add    BYTE PTR [rsi],ch
   1400117ad:	add    BYTE PTR [rcx],dh
   1400117af:	add    BYTE PTR [rax],dh
   1400117b1:	add    BYTE PTR [rdx],dh
   1400117b3:	add    BYTE PTR [rax+rax*1],dh
   1400117b6:	xor    BYTE PTR [rax],al
   1400117b8:	add    BYTE PTR cs:[rcx],dh
   1400117bb:	add    BYTE PTR [rsi],dh
   1400117bd:	add    BYTE PTR [rbx],dh
   1400117bf:	add    BYTE PTR [rax],bh
   1400117c1:	add    BYTE PTR [rax+rax*1],dh
   1400117c4:	add    BYTE PTR [rax],al
   1400117c6:	add    BYTE PTR [rax],al
   1400117c8:	add    BYTE PTR [rax],r8b
   1400117cb:	add    BYTE PTR [rcx],al
   1400117cd:	add    BYTE PTR [rsi+0x0],dl
   1400117d0:	(bad)  
   1400117d1:	add    BYTE PTR [rdx+0x0],dh
   1400117d4:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400117d8:	ins    BYTE PTR es:[rdi],dx
   1400117d9:	add    BYTE PTR [rbp+0x0],ah
   1400117dc:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400117e0:	data16 add BYTE PTR [rdi+0x0],ch
   1400117e4:	add    BYTE PTR [rax],al
   1400117e6:	add    BYTE PTR [rax],al
   1400117e8:	and    al,0x0
   1400117ea:	add    al,0x0
   1400117ec:	add    BYTE PTR [rax],al
   1400117ee:	push   rsp
   1400117ef:	add    BYTE PTR [rdx+0x0],dh
   1400117f2:	(bad)  
   1400117f3:	add    BYTE PTR [rsi+0x0],ch
   1400117f6:	jae    0x1400117f8
   1400117f8:	ins    BYTE PTR es:[rdi],dx
   1400117f9:	add    BYTE PTR [rcx+0x0],ah
   1400117fc:	je     0x1400117fe
   1400117fe:	imul   eax,DWORD PTR [rax],0x6e006f
   140011804:	add    BYTE PTR [rax],al
   140011806:	add    BYTE PTR [rax],al
   140011808:	or     DWORD PTR [rax+rsi*4],eax
   14001180b:	add    al,0x0
   14001180d:	add    BYTE PTR [rax],al
   14001180f:	add    BYTE PTR [rax+0x4b],cl
   140011812:	rex.XB push r10
   140011814:	or     eax,0xa0d7b0a
   140011819:	and    BYTE PTR [rax],ah
   14001181b:	and    BYTE PTR [rax],ah
   14001181d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14001181f:	push   rdx
   140011820:	gs ins DWORD PTR es:[rdi],dx
   140011822:	outs   dx,DWORD PTR ds:[rsi]
   140011823:	jbe    0x14001188a
   140011825:	and    BYTE PTR [rcx+0x70],al
   140011828:	jo     0x140011873
   14001182a:	rex.R or eax,0x2020200a
   140011830:	and    BYTE PTR [rbx+0xd],bh
   140011833:	or     ah,BYTE PTR [rax]
   140011835:	and    BYTE PTR [rax],ah
   140011837:	and    BYTE PTR [rax],ah
   140011839:	and    BYTE PTR [rax],ah
   14001183b:	and    BYTE PTR [rdi],ah
   14001183d:	and    eax,0x49505041
   140011842:	rex.R and eax,0x203d2027
   140011848:	jae    0x14001186a
   14001184a:	(bad)  
   14001184b:	push   rsp
   14001184c:	push   rbx
   14001184d:	push   rdi
   14001184e:	(bad)  
   14001184f:	push   rax
   140011850:	jb     0x1400118ca
   140011852:	jns    0x140011882
   140011854:	gs js  0x1400118bc
   140011857:	(bad)  
   140011858:	or     eax,0x2020200a
   14001185d:	and    BYTE PTR [rax],ah
   14001185f:	and    BYTE PTR [rax],ah
   140011861:	and    BYTE PTR [rbx+0xd],bh
   140011864:	or     ah,BYTE PTR [rax]
   140011866:	and    BYTE PTR [rax],ah
   140011868:	and    BYTE PTR [rax],ah
   14001186a:	and    BYTE PTR [rax],ah
   14001186c:	and    BYTE PTR [rax],ah
   14001186e:	and    BYTE PTR [rax],ah
   140011870:	and    BYTE PTR [rsi+0x61],dh
   140011873:	ins    BYTE PTR es:[rdi],dx
   140011874:	and    BYTE PTR [rcx+0x75],al
   140011877:	je     0x1400118e1
   140011879:	outs   dx,BYTE PTR gs:[rsi]
   14001187b:	je     0x1400118e6
   14001187d:	movsxd esp,DWORD PTR [rcx+0x74]
   140011880:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140011887:	ins    BYTE PTR es:[rdi],dx
   140011888:	and    BYTE PTR [rip+0x36206420],bh        # 0x176217cae
   14001188e:	or     eax,0x2020200a
   140011893:	and    BYTE PTR [rax],ah
   140011895:	and    BYTE PTR [rax],ah
   140011897:	and    BYTE PTR [rax],ah
   140011899:	and    BYTE PTR [rax],ah
   14001189b:	and    BYTE PTR [rsi+0x61],dh
   14001189e:	ins    BYTE PTR es:[rdi],dx
   14001189f:	and    BYTE PTR [rcx+riz*2+0x75],cl
   1400118a3:	outs   dx,BYTE PTR ds:[rsi]
   1400118a4:	movsxd ebp,DWORD PTR [rax+0x50]
   1400118a7:	gs jb  0x140011917
   1400118aa:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   1400118b1:	cmp    eax,0x27206220
   1400118b6:	xor    BYTE PTR [rcx],dh
   1400118b8:	xor    BYTE PTR [rax],dh
   1400118ba:	xor    DWORD PTR [rax+rdi*1],esi
   1400118bd:	xor    BYTE PTR [rcx],bh
   1400118bf:	xor    BYTE PTR [rax],dh
   1400118c1:	xor    BYTE PTR [rax],dh
   1400118c3:	xor    BYTE PTR [rax],dh
   1400118c5:	xor    BYTE PTR [rcx+0x30],al
   1400118c8:	xor    BYTE PTR [rax],dh
   1400118ca:	xor    BYTE PTR [rax],dh
   1400118cc:	xor    BYTE PTR [rax],dh
   1400118ce:	xor    DWORD PTR [rax+rsi*1],esi
   1400118d1:	xor    BYTE PTR [rax],dh
   1400118d3:	xor    BYTE PTR [rax],dh
   1400118d5:	xor    BYTE PTR [rbx],dh
   1400118d7:	xor    BYTE PTR [rax],dh
   1400118d9:	xor    BYTE PTR [rax],dh
   1400118db:	xor    BYTE PTR [rax],dh
   1400118dd:	xor    BYTE PTR [rax],dh
   1400118df:	xor    dh,BYTE PTR [rax]
   1400118e1:	xor    BYTE PTR [rcx],dh
   1400118e3:	rex.XB xor BYTE PTR [r8],sil
   1400118e6:	xor    BYTE PTR [rcx],dh
   1400118e8:	xor    BYTE PTR [rax],dh
   1400118ea:	xor    BYTE PTR [rax],dh
   1400118ec:	xor    BYTE PTR [rax],dh
   1400118ee:	xor    DWORD PTR [rcx],esi
   1400118f0:	xor    BYTE PTR [rax],dh
   1400118f2:	xor    DWORD PTR [rax+rsi*1],esi
   1400118f5:	xor    BYTE PTR [rax],dh
   1400118f7:	xor    al,0x30
   1400118f9:	xor    BYTE PTR [rax],dh
   1400118fb:	xor    BYTE PTR [rax],dh
   1400118fd:	xor    BYTE PTR [rax],dh
   1400118ff:	xor    DWORD PTR [rax],esi
   140011901:	xor    DWORD PTR [rax],esi
   140011903:	xor    BYTE PTR [rax],dh
   140011905:	xor    BYTE PTR [rax],dh
   140011907:	xor    BYTE PTR [rax],dh
   140011909:	xor    BYTE PTR [rax],dh
   14001190b:	xor    BYTE PTR [rcx],dh
   14001190d:	xor    BYTE PTR [rax],dh
   14001190f:	xor    BYTE PTR [rcx],dh
   140011911:	xor    BYTE PTR [rax],dh
   140011913:	xor    BYTE PTR [rax],dh
   140011915:	xor    BYTE PTR [rax],dh
   140011917:	xor    dh,BYTE PTR [rax]
   140011919:	xor    BYTE PTR [rsi],dh
   14001191b:	xor    BYTE PTR [rax],dh
   14001191d:	xor    BYTE PTR [rax],dh
   14001191f:	xor    al,0x30
   140011921:	xor    BYTE PTR [rax],dh
   140011923:	xor    BYTE PTR [rax],dh
   140011925:	xor    BYTE PTR [rax],dh
   140011927:	xor    BYTE PTR [rax],dh
   140011929:	xor    BYTE PTR [rcx],dh
   14001192b:	xor    al,0x30
   14001192d:	xor    BYTE PTR [rax],dh
   14001192f:	rex.X xor BYTE PTR [rax],sil
   140011932:	xor    BYTE PTR [rax],dh
   140011934:	xor    BYTE PTR [rax],dh
   140011936:	xor    BYTE PTR [rcx],dh
   140011938:	xor    BYTE PTR [rcx],dh
   14001193a:	xor    BYTE PTR [rax],dh
   14001193c:	xor    BYTE PTR [rax],dh
   14001193e:	xor    BYTE PTR [rax],dh
   140011940:	xor    BYTE PTR [rax],dh
   140011942:	xor    BYTE PTR [rax],dh
   140011944:	xor    BYTE PTR [rip+0x30303231],dh        # 0x170314b7b
   14001194a:	xor    BYTE PTR [rax],dh
   14001194c:	xor    BYTE PTR [rax],dh
   14001194e:	xor    BYTE PTR [rax],dh
   140011950:	xor    BYTE PTR [rax],dh
   140011952:	xor    DWORD PTR [rax],edi
   140011954:	xor    BYTE PTR [rax],dh
   140011956:	xor    BYTE PTR [rdx+0x30],al
   140011959:	xor    BYTE PTR [rax],dh
   14001195b:	xor    BYTE PTR [rax],dh
   14001195d:	xor    BYTE PTR [rax],dh
   14001195f:	xor    DWORD PTR [rax],esi
   140011961:	xor    dh,BYTE PTR [rax]
   140011963:	xor    BYTE PTR [rax],dh
   140011965:	xor    BYTE PTR [rax],dh
   140011967:	xor    BYTE PTR [rax],dh
   140011969:	xor    BYTE PTR [rax],dh
   14001196b:	xor    BYTE PTR [rax],dh
   14001196d:	xor    eax,0x30303032
   140011972:	xor    BYTE PTR [rax],dh
   140011974:	xor    BYTE PTR [rax],dh
   140011976:	xor    dh,BYTE PTR [rax]
   140011978:	xor    BYTE PTR [rdx],dh
   14001197a:	xor    BYTE PTR [rax],dh
   14001197c:	xor    BYTE PTR [rax],dh
   14001197e:	xor    BYTE PTR [rax],dh
   140011980:	xor    BYTE PTR [rax],dh
   140011982:	xor    DWORD PTR [rax+rsi*1],esi
   140011985:	xor    BYTE PTR [rax],dh
   140011987:	rex.X xor BYTE PTR [rax],sil
   14001198a:	xor    BYTE PTR [rax],dh
   14001198c:	xor    BYTE PTR [rax],dh
   14001198e:	xor    BYTE PTR [rcx],dh
   140011990:	xor    BYTE PTR [rcx],dh
   140011992:	xor    BYTE PTR [rax],dh
   140011994:	xor    BYTE PTR [rax],dh
   140011996:	xor    BYTE PTR [rax],dh
   140011998:	xor    BYTE PTR [rax],dh
   14001199a:	xor    BYTE PTR [rax],dh
   14001199c:	xor    BYTE PTR [rip+0x30303430],dh        # 0x170314dd2
   1400119a2:	xor    BYTE PTR [rax],dh
   1400119a4:	xor    BYTE PTR [rax],dh
   1400119a6:	xor    BYTE PTR [rax],dh
   1400119a8:	xor    BYTE PTR [rax],dh
   1400119aa:	xor    DWORD PTR [rax],edi
   1400119ac:	xor    BYTE PTR [rax],dh
   1400119ae:	xor    BYTE PTR [rdx+0x30],al
   1400119b1:	xor    BYTE PTR [rax],dh
   1400119b3:	xor    BYTE PTR [rax],dh
   1400119b5:	xor    BYTE PTR [rax],dh
   1400119b7:	xor    DWORD PTR [rax],esi
   1400119b9:	xor    dh,BYTE PTR [rax]
   1400119bb:	xor    BYTE PTR [rax],dh
   1400119bd:	xor    BYTE PTR [rax],dh
   1400119bf:	xor    BYTE PTR [rax],dh
   1400119c1:	xor    BYTE PTR [rax],dh
   1400119c3:	xor    BYTE PTR [rax],dh
   1400119c5:	rex.RX xor BYTE PTR [rdx],r14b
   1400119c8:	xor    BYTE PTR [rax],dh
   1400119ca:	xor    BYTE PTR [rax],dh
   1400119cc:	xor    BYTE PTR [rax],dh
   1400119ce:	xor    BYTE PTR [rcx],dh
   1400119d0:	xor    BYTE PTR [rax],dh
   1400119d2:	xor    BYTE PTR [rax],dh
   1400119d4:	xor    BYTE PTR [rax],dh
   1400119d6:	xor    BYTE PTR [rcx],dh
   1400119d8:	xor    BYTE PTR [rdx],dh
   1400119da:	xor    BYTE PTR [rax],dh
   1400119dc:	xor    BYTE PTR [rax],dh
   1400119de:	xor    BYTE PTR [rax],dh
   1400119e0:	xor    BYTE PTR [rax],dh
   1400119e2:	xor    BYTE PTR [rax],dh
   1400119e4:	xor    BYTE PTR [rip+0x30303032],dh        # 0x170314a1c
   1400119ea:	xor    BYTE PTR [rax],dh
   1400119ec:	xor    BYTE PTR [rax],dh
   1400119ee:	xor    dh,BYTE PTR [rax]
   1400119f0:	xor    BYTE PTR [rdx],dh
   1400119f2:	xor    BYTE PTR [rax],dh
   1400119f4:	xor    BYTE PTR [rax],dh
   1400119f6:	xor    BYTE PTR [rcx],dh
   1400119f8:	xor    BYTE PTR [rdx],dh
   1400119fa:	xor    BYTE PTR [rax],dh
   1400119fc:	xor    BYTE PTR [rax],dh
   1400119fe:	xor    BYTE PTR [rax],dh
   140011a00:	xor    BYTE PTR [rax],dh
   140011a02:	xor    BYTE PTR [rax],dh
   140011a04:	xor    BYTE PTR [rip+0x30303032],dh        # 0x170314a3c
   140011a0a:	xor    BYTE PTR [rax],dh
   140011a0c:	xor    BYTE PTR [rax],dh
   140011a0e:	xor    dh,BYTE PTR [rax]
   140011a10:	xor    BYTE PTR [rdx],dh
   140011a12:	xor    BYTE PTR [rax],dh
   140011a14:	xor    BYTE PTR [rax],dh
   140011a16:	(bad)  
   140011a17:	or     eax,0x2020200a
   140011a1c:	and    BYTE PTR [rax],ah
   140011a1e:	and    BYTE PTR [rax],ah
   140011a20:	and    BYTE PTR [rax],ah
   140011a22:	and    BYTE PTR [rax],ah
   140011a24:	and    BYTE PTR [rsi+0x61],dh
   140011a27:	ins    BYTE PTR es:[rdi],dx
   140011a28:	and    BYTE PTR [rcx+0x63],al
   140011a2b:	movsxd esp,DWORD PTR [rbp+0x73]
   140011a2e:	jae    0x140011a80
   140011a30:	gs jb  0x140011aa0
   140011a33:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140011a3a:	cmp    eax,0x27206220
   140011a3f:	xor    BYTE PTR [rcx],dh
   140011a41:	xor    BYTE PTR [rax],dh
   140011a43:	xor    DWORD PTR [rax+rdi*1],esi
   140011a46:	xor    BYTE PTR [rsi],dh
   140011a48:	xor    al,0x30
   140011a4a:	xor    BYTE PTR [rax],dh
   140011a4c:	xor    BYTE PTR [rax],dh
   140011a4e:	xor    BYTE PTR [rdi],dh
   140011a50:	xor    al,0x30
   140011a52:	xor    BYTE PTR [rax],dh
   140011a54:	xor    BYTE PTR [rax],dh
   140011a56:	xor    BYTE PTR [rcx],dh
   140011a58:	xor    al,0x30
   140011a5a:	xor    BYTE PTR [rax],dh
   140011a5c:	xor    BYTE PTR [rax],dh
   140011a5e:	xor    BYTE PTR [rbx],dh
   140011a60:	xor    BYTE PTR [rax],dh
   140011a62:	xor    BYTE PTR [rax],dh
   140011a64:	xor    BYTE PTR [rax],dh
   140011a66:	xor    BYTE PTR [rax],dh
   140011a68:	xor    dh,BYTE PTR [rax]
   140011a6a:	xor    BYTE PTR [rcx],dh
   140011a6c:	rex.XB xor BYTE PTR [r8],sil
   140011a6f:	xor    BYTE PTR [rcx],dh
   140011a71:	xor    BYTE PTR [rax],dh
   140011a73:	xor    BYTE PTR [rax],dh
   140011a75:	xor    BYTE PTR [rax],dh
   140011a77:	xor    DWORD PTR [rcx],esi
   140011a79:	xor    BYTE PTR [rax],dh
   140011a7b:	xor    DWORD PTR [rax+rsi*1],esi
   140011a7e:	xor    BYTE PTR [rax],dh
   140011a80:	xor    al,0x30
   140011a82:	xor    BYTE PTR [rax],dh
   140011a84:	xor    BYTE PTR [rax],dh
   140011a86:	xor    BYTE PTR [rax],dh
   140011a88:	xor    DWORD PTR [rax],esi
   140011a8a:	xor    DWORD PTR [rax],esi
   140011a8c:	xor    BYTE PTR [rax],dh
   140011a8e:	xor    BYTE PTR [rax],dh
   140011a90:	xor    BYTE PTR [rax],dh
   140011a92:	xor    BYTE PTR [rax],dh
   140011a94:	xor    BYTE PTR [rcx],dh
   140011a96:	xor    BYTE PTR [rax],dh
   140011a98:	xor    BYTE PTR [rcx],dh
   140011a9a:	xor    BYTE PTR [rax],dh
   140011a9c:	xor    BYTE PTR [rax],dh
   140011a9e:	xor    BYTE PTR [rax],dh
   140011aa0:	xor    dh,BYTE PTR [rax]
   140011aa2:	xor    BYTE PTR [rbx],dh
   140011aa4:	xor    al,0x30
   140011aa6:	xor    BYTE PTR [rax],dh
   140011aa8:	xor    dh,BYTE PTR [rax]
   140011aaa:	xor    BYTE PTR [rax],dh
   140011aac:	xor    BYTE PTR [rax],dh
   140011aae:	xor    BYTE PTR [rax],dh
   140011ab0:	xor    BYTE PTR [rax],dh
   140011ab2:	xor    BYTE PTR [rcx],dh
   140011ab4:	xor    al,0x30
   140011ab6:	xor    BYTE PTR [rax],dh
   140011ab8:	xor    esi,DWORD PTR [rax]
   140011aba:	xor    BYTE PTR [rax],dh
   140011abc:	xor    BYTE PTR [rax],dh
   140011abe:	xor    BYTE PTR [rax],dh
   140011ac0:	xor    DWORD PTR [rax],esi
   140011ac2:	xor    DWORD PTR [rax],esi
   140011ac4:	xor    BYTE PTR [rax],dh
   140011ac6:	xor    BYTE PTR [rax],dh
   140011ac8:	xor    BYTE PTR [rax],dh
   140011aca:	xor    BYTE PTR [rax],dh
   140011acc:	xor    BYTE PTR [rax],dh
   140011ace:	xor    eax,0x30304130
   140011ad3:	xor    BYTE PTR [rax],dh
   140011ad5:	xor    BYTE PTR [rax],dh
   140011ad7:	xor    BYTE PTR [rax],dh
   140011ad9:	xor    BYTE PTR [rax],dh
   140011adb:	xor    DWORD PTR [rax],edi
   140011add:	xor    BYTE PTR [rax],dh
   140011adf:	xor    BYTE PTR [rbx],dh
   140011ae1:	xor    BYTE PTR [rax],dh
   140011ae3:	xor    BYTE PTR [rax],dh
   140011ae5:	xor    BYTE PTR [rax],dh
   140011ae7:	xor    BYTE PTR [rcx],dh
   140011ae9:	xor    BYTE PTR [rdx],dh
   140011aeb:	xor    BYTE PTR [rax],dh
   140011aed:	xor    BYTE PTR [rax],dh
   140011aef:	xor    BYTE PTR [rax],dh
   140011af1:	xor    BYTE PTR [rax],dh
   140011af3:	xor    BYTE PTR [rax],dh
   140011af5:	xor    BYTE PTR [rsi+0x30],al
   140011af8:	xor    dh,BYTE PTR [rax]
   140011afa:	xor    BYTE PTR [rax],dh
   140011afc:	xor    BYTE PTR [rax],dh
   140011afe:	xor    BYTE PTR [rax],dh
   140011b00:	xor    DWORD PTR [rax],esi
   140011b02:	xor    BYTE PTR [rax],dh
   140011b04:	xor    BYTE PTR [rax],dh
   140011b06:	xor    BYTE PTR [rax],dh
   140011b08:	xor    DWORD PTR [rax],esi
   140011b0a:	xor    dh,BYTE PTR [rax]
   140011b0c:	xor    BYTE PTR [rax],dh
   140011b0e:	xor    BYTE PTR [rax],dh
   140011b10:	xor    BYTE PTR [rax],dh
   140011b12:	xor    BYTE PTR [rax],dh
   140011b14:	xor    BYTE PTR [rax],dh
   140011b16:	xor    eax,0x30303032
   140011b1b:	xor    BYTE PTR [rax],dh
   140011b1d:	xor    BYTE PTR [rax],dh
   140011b1f:	xor    dh,BYTE PTR [rax]
   140011b21:	xor    BYTE PTR [rdx],dh
   140011b23:	xor    BYTE PTR [rax],dh
   140011b25:	xor    BYTE PTR [rax],dh
   140011b27:	xor    BYTE PTR [rcx],dh
   140011b29:	xor    BYTE PTR [rdx],dh
   140011b2b:	xor    BYTE PTR [rax],dh
   140011b2d:	xor    BYTE PTR [rax],dh
   140011b2f:	xor    BYTE PTR [rax],dh
   140011b31:	xor    BYTE PTR [rax],dh
   140011b33:	xor    BYTE PTR [rax],dh
   140011b35:	xor    BYTE PTR [rip+0x30303032],dh        # 0x170314b6d
   140011b3b:	xor    BYTE PTR [rax],dh
   140011b3d:	xor    BYTE PTR [rax],dh
   140011b3f:	xor    dh,BYTE PTR [rax]
   140011b41:	xor    BYTE PTR [rdx],dh
   140011b43:	xor    BYTE PTR [rax],dh
   140011b45:	xor    BYTE PTR [rax],dh
   140011b47:	(bad)  
   140011b48:	or     eax,0x2020200a
   140011b4d:	and    BYTE PTR [rax],ah
   140011b4f:	and    BYTE PTR [rax],ah
   140011b51:	and    BYTE PTR [rax],ah
   140011b53:	and    BYTE PTR [rax],ah
   140011b55:	and    BYTE PTR [rsi+0x61],dh
   140011b58:	ins    BYTE PTR es:[rdi],dx
   140011b59:	and    BYTE PTR [rcx+0x70],al
   140011b5c:	jo     0x140011ba7
   140011b5e:	rex.R
   140011b5f:	rex.RX ins BYTE PTR es:[rdi],dx
   140011b61:	(bad)  
   140011b62:	addr32 jae 0x140011b85
   140011b65:	cmp    eax,0x35206420
   140011b6a:	ss or  eax,0x2020200a
   140011b70:	and    BYTE PTR [rax],ah
   140011b72:	and    BYTE PTR [rax],ah
   140011b74:	and    BYTE PTR [rax],ah
   140011b76:	and    BYTE PTR [rax],ah
   140011b78:	and    BYTE PTR [rsi+0x61],dh
   140011b7b:	ins    BYTE PTR es:[rdi],dx
   140011b7c:	and    BYTE PTR [rdx+0x75],dl
   140011b7f:	outs   dx,BYTE PTR ds:[rsi]
   140011b80:	rex.B jae 0x140011ba3
   140011b83:	cmp    eax,0x27207320
   140011b88:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011b8a:	je     0x140011bf1
   140011b8c:	jb     0x140011bef
   140011b8e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140011b92:	and    BYTE PTR gs:[rbp+0x73],dl
   140011b96:	gs jb  0x140011bc0
   140011b99:	or     eax,0x2020200a
   140011b9e:	and    BYTE PTR [rax],ah
   140011ba0:	and    BYTE PTR [rax],ah
   140011ba2:	and    BYTE PTR [rbp+0xd],bh
   140011ba5:	or     ah,BYTE PTR [rax]
   140011ba7:	and    BYTE PTR [rax],ah
   140011ba9:	and    BYTE PTR [rax],ah
   140011bab:	and    BYTE PTR [rax],ah
   140011bad:	and    BYTE PTR [rdi],ah
   140011baf:	push   rsp
   140011bb0:	push   rbx
   140011bb1:	push   rdi
   140011bb2:	(bad)  
   140011bb3:	push   rax
   140011bb4:	jb     0x140011c2e
   140011bb6:	jns    0x140011be6
   140011bb8:	gs js  0x140011c20
   140011bbb:	(bad)  
   140011bbc:	or     eax,0x2020200a
   140011bc1:	and    BYTE PTR [rax],ah
   140011bc3:	and    BYTE PTR [rax],ah
   140011bc5:	and    BYTE PTR [rbx+0xd],bh
   140011bc8:	or     ah,BYTE PTR [rax]
   140011bca:	and    BYTE PTR [rax],ah
   140011bcc:	and    BYTE PTR [rax],ah
   140011bce:	and    BYTE PTR [rax],ah
   140011bd0:	and    BYTE PTR [rax],ah
   140011bd2:	and    BYTE PTR [rax],ah
   140011bd4:	and    BYTE PTR [rsi+0x61],dh
   140011bd7:	ins    BYTE PTR es:[rdi],dx
   140011bd8:	and    BYTE PTR [rcx+0x70],al
   140011bdb:	jo     0x140011c26
   140011bdd:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167218f04
   140011be4:	and    eax,0x49505041
   140011be9:	rex.R and eax,0x200a0d27
   140011bef:	and    BYTE PTR [rax],ah
   140011bf1:	and    BYTE PTR [rax],ah
   140011bf3:	and    BYTE PTR [rax],ah
   140011bf5:	and    BYTE PTR [rbp+0xd],bh
   140011bf8:	or     ah,BYTE PTR [rax]
   140011bfa:	and    BYTE PTR [rax],ah
   140011bfc:	and    BYTE PTR [rbp+0xd],bh
   140011bff:	or     bh,BYTE PTR [rbp+0xd]
   140011c02:	or     al,BYTE PTR [rax]
   140011c04:	add    BYTE PTR [rax],al
   140011c06:	add    BYTE PTR [rax],al
   140011c08:	rex.W
   140011c09:	rex.WXB
   140011c0a:	rex.XB push r10
   140011c0c:	or     eax,0xa0d7b0a
   140011c11:	and    BYTE PTR [rax],ah
   140011c13:	and    BYTE PTR [rax],ah
   140011c15:	rex.WRB push r11
   140011c17:	push   rsp
   140011c18:	push   rbx
   140011c19:	push   rdi
   140011c1a:	gs (bad) 
   140011c1c:	push   rax
   140011c1d:	jb     0x140011c8e
   140011c1f:	js     0x140011c9a
   140011c21:	cs rex.WRB push r11
   140011c24:	push   rsp
   140011c25:	push   rbx
   140011c26:	push   rdi
   140011c27:	gs (bad) 
   140011c29:	push   rax
   140011c2a:	jb     0x140011c9b
   140011c2c:	js     0x140011ca7
   140011c2e:	xor    DWORD PTR cs:[rax],esp
   140011c31:	cmp    eax,0x27207320
   140011c36:	rex.WRB push r11
   140011c38:	push   rsp
   140011c39:	push   rbx
   140011c3a:	push   rdi
   140011c3b:	gs (bad) 
   140011c3d:	push   rax
   140011c3e:	jb     0x140011caf
   140011c40:	js     0x140011cbb
   140011c42:	and    BYTE PTR [rbx+0x6c],al
   140011c45:	(bad)  
   140011c46:	jae    0x140011cbb
   140011c48:	(bad)  
   140011c49:	or     eax,0x2020200a
   140011c4e:	and    BYTE PTR [rbx+0xd],bh
   140011c51:	or     ah,BYTE PTR [rax]
   140011c53:	and    BYTE PTR [rax],ah
   140011c55:	and    BYTE PTR [rax],ah
   140011c57:	and    BYTE PTR [rax],ah
   140011c59:	and    BYTE PTR [rbx+0x4c],al
   140011c5c:	push   rbx
   140011c5d:	rex.WB
   140011c5e:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167218f85
   140011c65:	jnp    0x140011ca9
   140011c67:	xor    al,0x33
   140011c69:	xor    BYTE PTR [r11+0x31],al
   140011c6d:	rex.RB sub eax,0x46333642
   140011c73:	sub    eax,0x31393634
   140011c78:	sub    eax,0x46383642
   140011c7d:	sub    eax,0x30384443
   140011c82:	(bad)  
   140011c83:	rex.B xor al,0x35
   140011c86:	rex.R
   140011c87:	xor    BYTE PTR [r9],sil
   140011c8a:	jge    0x140011cb3
   140011c8c:	or     eax,0x2020200a
   140011c91:	and    BYTE PTR [rbp+0xd],bh
   140011c94:	or     ah,BYTE PTR [rax]
   140011c96:	and    BYTE PTR [rax],ah
   140011c98:	and    BYTE PTR [rbp+0x53],cl
   140011c9b:	push   rsp
   140011c9c:	push   rbx
   140011c9d:	push   rdi
   140011c9e:	gs (bad) 
   140011ca0:	push   rax
   140011ca1:	jb     0x140011d12
   140011ca3:	js     0x140011d1e
   140011ca5:	cs rex.WRB push r11
   140011ca8:	push   rsp
   140011ca9:	push   rbx
   140011caa:	push   rdi
   140011cab:	gs (bad) 
   140011cad:	push   rax
   140011cae:	jb     0x140011d1f
   140011cb0:	js     0x140011d2b
   140011cb2:	and    BYTE PTR [rip+0x27207320],bh        # 0x167218fd8
   140011cb8:	rex.WRB push r11
   140011cba:	push   rsp
   140011cbb:	push   rbx
   140011cbc:	push   rdi
   140011cbd:	gs (bad) 
   140011cbf:	push   rax
   140011cc0:	jb     0x140011d31
   140011cc2:	js     0x140011d3d
   140011cc4:	and    BYTE PTR [rbx+0x6c],al
   140011cc7:	(bad)  
   140011cc8:	jae    0x140011d3d
   140011cca:	(bad)  
   140011ccb:	or     eax,0x2020200a
   140011cd0:	and    BYTE PTR [rbx+0xd],bh
   140011cd3:	or     ah,BYTE PTR [rax]
   140011cd5:	and    BYTE PTR [rax],ah
   140011cd7:	and    BYTE PTR [rax],ah
   140011cd9:	and    BYTE PTR [rax],ah
   140011cdb:	and    BYTE PTR [rbx+0x4c],al
   140011cde:	push   rbx
   140011cdf:	rex.WB
   140011ce0:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167219007
   140011ce7:	jnp    0x140011d2b
   140011ce9:	xor    al,0x33
   140011ceb:	xor    BYTE PTR [r11+0x31],al
   140011cef:	rex.RB sub eax,0x46333642
   140011cf5:	sub    eax,0x31393634
   140011cfa:	sub    eax,0x46383642
   140011cff:	sub    eax,0x30384443
   140011d04:	(bad)  
   140011d05:	rex.B xor al,0x35
   140011d08:	rex.R
   140011d09:	xor    BYTE PTR [r9],sil
   140011d0c:	jge    0x140011d35
   140011d0e:	or     eax,0x2020200a
   140011d13:	and    BYTE PTR [rax],ah
   140011d15:	and    BYTE PTR [rax],ah
   140011d17:	and    BYTE PTR [rbx+0x75],al
   140011d1a:	jb     0x140011d72
   140011d1c:	gs jb  0x140011d3f
   140011d1f:	cmp    eax,0x27207320
   140011d24:	rex.WRB push r11
   140011d26:	push   rsp
   140011d27:	push   rbx
   140011d28:	push   rdi
   140011d29:	gs (bad) 
   140011d2b:	push   rax
   140011d2c:	jb     0x140011d9d
   140011d2e:	js     0x140011da9
   140011d30:	cs rex.WRB push r11
   140011d33:	push   rsp
   140011d34:	push   rbx
   140011d35:	push   rdi
   140011d36:	gs (bad) 
   140011d38:	push   rax
   140011d39:	jb     0x140011daa
   140011d3b:	js     0x140011db6
   140011d3d:	xor    DWORD PTR cs:[rdi],esp
   140011d40:	or     eax,0x2020200a
   140011d45:	and    BYTE PTR [rbp+0xd],bh
   140011d48:	or     ah,BYTE PTR [rax]
   140011d4a:	and    BYTE PTR [rax],ah
   140011d4c:	and    BYTE PTR [rsi+0x6f],cl
   140011d4f:	push   rdx
   140011d50:	gs ins DWORD PTR es:[rdi],dx
   140011d52:	outs   dx,DWORD PTR ds:[rsi]
   140011d53:	jbe    0x140011dba
   140011d55:	and    BYTE PTR [rbx+0x4c],al
   140011d58:	push   rbx
   140011d59:	rex.WB
   140011d5a:	rex.R or eax,0x2020200a
   140011d60:	and    BYTE PTR [rbx+0xd],bh
   140011d63:	or     ah,BYTE PTR [rax]
   140011d65:	and    BYTE PTR [rax],ah
   140011d67:	and    BYTE PTR [rax],ah
   140011d69:	and    BYTE PTR [rax],ah
   140011d6b:	and    BYTE PTR [rsi+0x6f],al
   140011d6e:	jb     0x140011dd3
   140011d70:	gs push rdx
   140011d72:	gs ins DWORD PTR es:[rdi],dx
   140011d74:	outs   dx,DWORD PTR ds:[rsi]
   140011d75:	jbe    0x140011ddc
   140011d77:	and    BYTE PTR [rbx+0x42],bh
   140011d7a:	xor    al,0x33
   140011d7c:	xor    BYTE PTR [r11+0x31],al
   140011d80:	rex.RB sub eax,0x46333642
   140011d86:	sub    eax,0x31393634
   140011d8b:	sub    eax,0x46383642
   140011d90:	sub    eax,0x30384443
   140011d95:	(bad)  
   140011d96:	rex.B xor al,0x35
   140011d99:	rex.R
   140011d9a:	xor    BYTE PTR [r9],sil
   140011d9d:	jge    0x140011dbf
   140011d9f:	cmp    eax,0x27207320
   140011da4:	rex.WRB push r11
   140011da6:	push   rsp
   140011da7:	push   rbx
   140011da8:	push   rdi
   140011da9:	gs (bad) 
   140011dab:	push   rax
   140011dac:	jb     0x140011e1d
   140011dae:	js     0x140011e29
   140011db0:	and    BYTE PTR [rbx+0x6c],al
   140011db3:	(bad)  
   140011db4:	jae    0x140011e29
   140011db6:	(bad)  
   140011db7:	or     eax,0x2020200a
   140011dbc:	and    BYTE PTR [rax],ah
   140011dbe:	and    BYTE PTR [rax],ah
   140011dc0:	and    BYTE PTR [rbx+0xd],bh
   140011dc3:	or     ah,BYTE PTR [rax]
   140011dc5:	and    BYTE PTR [rax],ah
   140011dc7:	and    BYTE PTR [rax],ah
   140011dc9:	and    BYTE PTR [rax],ah
   140011dcb:	and    BYTE PTR [rax],ah
   140011dcd:	and    BYTE PTR [rax],ah
   140011dcf:	and    BYTE PTR [rax+0x72],dl
   140011dd2:	outs   dx,DWORD PTR ds:[rsi]
   140011dd3:	addr32 rex.WB
   140011dd5:	and    BYTE PTR [rip+0x27207320],r15b        # 0x1672190fc
   140011ddc:	rex.WRB push r11
   140011dde:	push   rsp
   140011ddf:	push   rbx
   140011de0:	push   rdi
   140011de1:	gs (bad) 
   140011de3:	push   rax
   140011de4:	jb     0x140011e55
   140011de6:	js     0x140011e61
   140011de8:	cs rex.WRB push r11
   140011deb:	push   rsp
   140011dec:	push   rbx
   140011ded:	push   rdi
   140011dee:	gs (bad) 
   140011df0:	push   rax
   140011df1:	jb     0x140011e62
   140011df3:	js     0x140011e6e
   140011df5:	xor    DWORD PTR cs:[rdi],esp
   140011df8:	or     eax,0x2020200a
   140011dfd:	and    BYTE PTR [rax],ah
   140011dff:	and    BYTE PTR [rax],ah
   140011e01:	and    BYTE PTR [rax],ah
   140011e03:	and    BYTE PTR [rax],ah
   140011e05:	and    BYTE PTR [rsi+0x65],dl
   140011e08:	jb     0x140011e7d
   140011e0a:	imul   ebp,DWORD PTR [rdi+0x6e],0x65646e49
   140011e11:	jo     0x140011e78
   140011e13:	outs   dx,BYTE PTR ds:[rsi]
   140011e14:	fs outs dx,BYTE PTR gs:[rsi]
   140011e17:	je     0x140011e69
   140011e19:	jb     0x140011e8a
   140011e1b:	addr32 rex.WB
   140011e1d:	and    BYTE PTR [rip+0x27207320],r15b        # 0x167219144
   140011e24:	rex.WRB push r11
   140011e26:	push   rsp
   140011e27:	push   rbx
   140011e28:	push   rdi
   140011e29:	gs (bad) 
   140011e2b:	push   rax
   140011e2c:	jb     0x140011e9d
   140011e2e:	js     0x140011ea9
   140011e30:	cs rex.WRB push r11
   140011e33:	push   rsp
   140011e34:	push   rbx
   140011e35:	push   rdi
   140011e36:	gs (bad) 
   140011e38:	push   rax
   140011e39:	jb     0x140011eaa
   140011e3b:	js     0x140011eb6
   140011e3d:	(bad)  
   140011e3e:	or     eax,0x2020200a
   140011e43:	and    BYTE PTR [rax],ah
   140011e45:	and    BYTE PTR [rax],ah
   140011e47:	and    BYTE PTR [rax],ah
   140011e49:	and    BYTE PTR [rax],ah
   140011e4b:	and    BYTE PTR [rdi+rbp*2+0x63],cl
   140011e4f:	(bad)  
   140011e50:	ins    BYTE PTR es:[rdi],dx
   140011e51:	push   rbx
   140011e52:	gs jb  0x140011ecb
   140011e55:	gs jb  0x140011e8b
   140011e58:	xor    ah,BYTE PTR [rax]
   140011e5a:	cmp    eax,0x27207320
   140011e5f:	and    eax,0x55444f4d
   140011e64:	rex.WR
   140011e65:	rex.RB and eax,0x200a0d27
   140011e6b:	and    BYTE PTR [rax],ah
   140011e6d:	and    BYTE PTR [rax],ah
   140011e6f:	and    BYTE PTR [rax],ah
   140011e71:	and    BYTE PTR [rax],ah
   140011e73:	and    BYTE PTR [rax],ah
   140011e75:	and    BYTE PTR [rsi+0x61],dh
   140011e78:	ins    BYTE PTR es:[rdi],dx
   140011e79:	and    BYTE PTR [rcx+0x70],al
   140011e7c:	jo     0x140011ec7
   140011e7e:	and    BYTE PTR [rip+0x27207320],r15b        # 0x1672191a5
   140011e85:	and    eax,0x49505041
   140011e8a:	rex.R and eax,0x200a0d27
   140011e90:	and    BYTE PTR [rax],ah
   140011e92:	and    BYTE PTR [rax],ah
   140011e94:	and    BYTE PTR [rax],ah
   140011e96:	and    BYTE PTR [rax],ah
   140011e98:	and    BYTE PTR [rax],ah
   140011e9a:	and    BYTE PTR [rdi],ah
   140011e9c:	push   rsp
   140011e9d:	jns    0x140011f0f
   140011e9f:	imul   r12,QWORD PTR gs:[rdx+0x27],0x73203d20
   140011ea8:	and    BYTE PTR [rdi],ah
   140011eaa:	jnp    0x140011ef2
   140011eac:	rex.XB xor eax,0x43383839
   140011eb2:	rex.RX sub eax,0x41364436
   140011eb8:	sub    eax,0x32313834
   140011ebd:	sub    eax,0x39444441
   140011ec2:	sub    eax,0x45444432
   140011ec7:	xor    al,0x46
   140011ec9:	xor    al,0x37
   140011ecb:	xor    esi,DWORD PTR [rsi+rsi*1]
   140011ece:	rex.RX jge 0x140011ef8
   140011ed1:	or     eax,0x2020200a
   140011ed6:	and    BYTE PTR [rax],ah
   140011ed8:	and    BYTE PTR [rax],ah
   140011eda:	and    BYTE PTR [rbp+0xd],bh
   140011edd:	or     ah,BYTE PTR [rax]
   140011edf:	and    BYTE PTR [rax],ah
   140011ee1:	and    BYTE PTR [rbp+0xd],bh
   140011ee4:	or     ah,BYTE PTR [rax]
   140011ee6:	and    BYTE PTR [rax],ah
   140011ee8:	and    BYTE PTR [rsi+0x6f],cl
   140011eeb:	push   rdx
   140011eec:	gs ins DWORD PTR es:[rdi],dx
   140011eee:	outs   dx,DWORD PTR ds:[rsi]
   140011eef:	jbe    0x140011f56
   140011ef1:	and    BYTE PTR [rcx+0x6e],cl
   140011ef4:	je     0x140011f5b
   140011ef6:	jb     0x140011f5e
   140011ef8:	(bad)  
   140011ef9:	movsxd esp,DWORD PTR [rbp+0xd]
   140011efc:	or     ah,BYTE PTR [rax]
   140011efe:	and    BYTE PTR [rax],ah
   140011f00:	and    BYTE PTR [rbx+0xd],bh
   140011f03:	or     ah,BYTE PTR [rax]
   140011f05:	and    BYTE PTR [rax],ah
   140011f07:	and    BYTE PTR [rax],ah
   140011f09:	and    BYTE PTR [rax],ah
   140011f0b:	and    BYTE PTR [rsi+0x6f],al
   140011f0e:	jb     0x140011f73
   140011f10:	gs push rdx
   140011f12:	gs ins DWORD PTR es:[rdi],dx
   140011f14:	outs   dx,DWORD PTR ds:[rsi]
   140011f15:	jbe    0x140011f7c
   140011f17:	and    BYTE PTR [rbx+0x46],bh
   140011f1a:	xor    eax,DWORD PTR [rsi+0x43]
   140011f1d:	rex.XB
   140011f1e:	rex.R
   140011f1f:	ss (bad) 
   140011f21:	sub    eax,0x37384645
   140011f26:	sub    eax,0x34313934
   140011f2b:	sub    eax,0x30423338
   140011f30:	sub    eax,0x41303944
   140011f35:	rex.RX xor al,0x44
   140011f38:	xor    BYTE PTR [rdx+rax*2],r14b
   140011f3c:	rex.X jge 0x140011f5f
   140011f3f:	cmp    eax,0x27207320
   140011f44:	rex.WB
   140011f45:	rex.WRB push r11
   140011f47:	push   rsp
   140011f48:	push   rbx
   140011f49:	push   rdi
   140011f4a:	gs (bad) 
   140011f4c:	push   rax
   140011f4d:	jb     0x140011fbe
   140011f4f:	js     0x140011fca
   140011f51:	(bad)  
   140011f52:	or     eax,0x2020200a
   140011f57:	and    BYTE PTR [rax],ah
   140011f59:	and    BYTE PTR [rax],ah
   140011f5b:	and    BYTE PTR [rbx+0xd],bh
   140011f5e:	or     ah,BYTE PTR [rax]
   140011f60:	and    BYTE PTR [rax],ah
   140011f62:	and    BYTE PTR [rax],ah
   140011f64:	and    BYTE PTR [rax],ah
   140011f66:	and    BYTE PTR [rax],ah
   140011f68:	and    BYTE PTR [rax],ah
   140011f6a:	and    BYTE PTR [rsi+0x75],cl
   140011f6d:	ins    DWORD PTR es:[rdi],dx
   140011f6e:	rex.WRB
   140011f6f:	gs je  0x140011fda
   140011f72:	outs   dx,DWORD PTR ds:[rsi]
   140011f73:	fs jae 0x140011f96
   140011f76:	cmp    eax,0x27207320
   140011f7b:	xor    DWORD PTR [rsi],esi
   140011f7d:	(bad)  
   140011f7e:	or     eax,0x2020200a
   140011f83:	and    BYTE PTR [rax],ah
   140011f85:	and    BYTE PTR [rax],ah
   140011f87:	and    BYTE PTR [rax],ah
   140011f89:	and    BYTE PTR [rax],ah
   140011f8b:	and    BYTE PTR [rax+0x72],dl
   140011f8e:	outs   dx,DWORD PTR ds:[rsi]
   140011f8f:	js     0x14001200a
   140011f91:	push   rbx
   140011f92:	je     0x140012009
   140011f94:	(bad)
   140011f99:	and    BYTE PTR fs:[rip+0x27207320],bh        # 0x1672192c0
   140011fa0:	jnp    0x140011fd2
   140011fa2:	xor    BYTE PTR [rax],dh
   140011fa4:	xor    dh,BYTE PTR [rax]
   140011fa6:	xor    al,0x32
   140011fa8:	xor    al,0x2d
   140011faa:	xor    BYTE PTR [rax],dh
   140011fac:	xor    BYTE PTR [rax],dh
   140011fae:	sub    eax,0x30303030
   140011fb3:	sub    eax,0x30303043
   140011fb8:	sub    eax,0x30303030
   140011fbd:	xor    BYTE PTR [rax],dh
   140011fbf:	xor    BYTE PTR [rax],dh
   140011fc1:	xor    BYTE PTR [rax],dh
   140011fc3:	xor    al,0x36
   140011fc5:	jge    0x140011fee
   140011fc7:	or     eax,0x2020200a
   140011fcc:	and    BYTE PTR [rax],ah
   140011fce:	and    BYTE PTR [rax],ah
   140011fd0:	and    BYTE PTR [rax],ah
   140011fd2:	and    BYTE PTR [rax],ah
   140011fd4:	and    BYTE PTR [rax+0x72],dl
   140011fd7:	outs   dx,DWORD PTR ds:[rsi]
   140011fd8:	js     0x140012053
   140011fda:	push   rbx
   140011fdb:	je     0x140012052
   140011fdd:	(bad)
   140011fe2:	xor    esi,DWORD PTR fs:[rdx]
   140011fe5:	and    BYTE PTR [rip+0x27207320],bh        # 0x16721930b
   140011feb:	jnp    0x14001201d
   140011fed:	xor    BYTE PTR [rax],dh
   140011fef:	xor    dh,BYTE PTR [rax]
   140011ff1:	xor    al,0x32
   140011ff3:	xor    al,0x2d
   140011ff5:	xor    BYTE PTR [rax],dh
   140011ff7:	xor    BYTE PTR [rax],dh
   140011ff9:	sub    eax,0x30303030
   140011ffe:	sub    eax,0x30303043
   140012003:	sub    eax,0x30303030
   140012008:	xor    BYTE PTR [rax],dh
   14001200a:	xor    BYTE PTR [rax],dh
   14001200c:	xor    BYTE PTR [rax],dh
   14001200e:	xor    al,0x36
   140012010:	jge    0x140012039
   140012012:	or     eax,0x2020200a
   140012017:	and    BYTE PTR [rax],ah
   140012019:	and    BYTE PTR [rax],ah
   14001201b:	and    BYTE PTR [rax],ah
   14001201d:	and    BYTE PTR [rax],ah
   14001201f:	and    BYTE PTR [rcx+rdi*2+0x70],dl
   140012023:	imul   r12,QWORD PTR gs:[rdx+0x20],0x2073203d
   14001202c:	(bad)  
   14001202d:	jnp    0x140012075
   14001202f:	rex.XB xor eax,0x43383839
   140012035:	rex.RX sub eax,0x41364436
   14001203b:	sub    eax,0x32313834
   140012040:	sub    eax,0x39444441
   140012045:	sub    eax,0x45444432
   14001204a:	xor    al,0x46
   14001204c:	xor    al,0x37
   14001204e:	xor    esi,DWORD PTR [rsi+rsi*1]
   140012051:	rex.RX jge 0x14001207b
   140012054:	or     eax,0x2020200a
   140012059:	and    BYTE PTR [rax],ah
   14001205b:	and    BYTE PTR [rax],ah
   14001205d:	and    BYTE PTR [rax],ah
   14001205f:	and    BYTE PTR [rax],ah
   140012061:	and    BYTE PTR [rbx+0xd],bh
   140012064:	or     ah,BYTE PTR [rax]
   140012066:	and    BYTE PTR [rax],ah
   140012068:	and    BYTE PTR [rax],ah
   14001206a:	and    BYTE PTR [rax],ah
   14001206c:	and    BYTE PTR [rax],ah
   14001206e:	and    BYTE PTR [rax],ah
   140012070:	and    BYTE PTR [rax],ah
   140012072:	and    BYTE PTR [rax],ah
   140012074:	and    BYTE PTR [rsi+0x65],dl
   140012077:	jb     0x1400120ec
   140012079:	imul   ebp,DWORD PTR [rdi+0x6e],0x73203d20
   140012080:	and    BYTE PTR [rdi],ah
   140012082:	xor    DWORD PTR [rsi],ebp
   140012084:	xor    BYTE PTR [rdi],ah
   140012086:	or     eax,0x2020200a
   14001208b:	and    BYTE PTR [rax],ah
   14001208d:	and    BYTE PTR [rax],ah
   14001208f:	and    BYTE PTR [rax],ah
   140012091:	and    BYTE PTR [rax],ah
   140012093:	and    BYTE PTR [rbp+0xd],bh
   140012096:	or     ah,BYTE PTR [rax]
   140012098:	and    BYTE PTR [rax],ah
   14001209a:	and    BYTE PTR [rax],ah
   14001209c:	and    BYTE PTR [rax],ah
   14001209e:	and    BYTE PTR [rbp+0xd],bh
   1400120a1:	or     ah,BYTE PTR [rax]
   1400120a3:	and    BYTE PTR [rax],ah
   1400120a5:	and    BYTE PTR [rax],ah
   1400120a7:	and    BYTE PTR [rax],ah
   1400120a9:	and    BYTE PTR [rsi+0x6f],al
   1400120ac:	jb     0x140012111
   1400120ae:	gs push rdx
   1400120b0:	gs ins DWORD PTR es:[rdi],dx
   1400120b2:	outs   dx,DWORD PTR ds:[rsi]
   1400120b3:	jbe    0x14001211a
   1400120b5:	and    BYTE PTR [rbx+0x46],bh
   1400120b8:	xor    eax,DWORD PTR [rsi+0x43]
   1400120bb:	rex.XB
   1400120bc:	rex.R
   1400120bd:	cmp    BYTE PTR ss:[rip+0x37384645],ch        # 0x177396709
   1400120c4:	sub    eax,0x35313934
   1400120c9:	sub    eax,0x31423338
   1400120ce:	sub    eax,0x41303944
   1400120d3:	rex.RX xor al,0x44
   1400120d6:	xor    BYTE PTR [rdx+rax*2],r14b
   1400120da:	rex.X jge 0x1400120fd
   1400120dd:	cmp    eax,0x27207320
   1400120e2:	rex.WB
   1400120e3:	rex.WRB push r11
   1400120e5:	push   rsp
   1400120e6:	push   rbx
   1400120e7:	push   rdi
   1400120e8:	gs (bad) 
   1400120ea:	push   rax
   1400120eb:	jb     0x14001215c
   1400120ed:	js     0x140012168
   1400120ef:	xor    ah,BYTE PTR [rdi]
   1400120f1:	or     eax,0x2020200a
   1400120f6:	and    BYTE PTR [rax],ah
   1400120f8:	and    BYTE PTR [rax],ah
   1400120fa:	and    BYTE PTR [rbx+0xd],bh
   1400120fd:	or     ah,BYTE PTR [rax]
   1400120ff:	and    BYTE PTR [rax],ah
   140012101:	and    BYTE PTR [rax],ah
   140012103:	and    BYTE PTR [rax],ah
   140012105:	and    BYTE PTR [rax],ah
   140012107:	and    BYTE PTR [rax],ah
   140012109:	and    BYTE PTR [rsi+0x75],cl
   14001210c:	ins    DWORD PTR es:[rdi],dx
   14001210d:	rex.WRB
   14001210e:	gs je  0x140012179
   140012111:	outs   dx,DWORD PTR ds:[rsi]
   140012112:	fs jae 0x140012135
   140012115:	cmp    eax,0x27207320
   14001211a:	xor    DWORD PTR [rdi],esi
   14001211c:	(bad)  
   14001211d:	or     eax,0x2020200a
   140012122:	and    BYTE PTR [rax],ah
   140012124:	and    BYTE PTR [rax],ah
   140012126:	and    BYTE PTR [rax],ah
   140012128:	and    BYTE PTR [rax],ah
   14001212a:	and    BYTE PTR [rax+0x72],dl
   14001212d:	outs   dx,DWORD PTR ds:[rsi]
   14001212e:	js     0x1400121a9
   140012130:	push   rbx
   140012131:	je     0x1400121a8
   140012133:	(bad)
   140012138:	and    BYTE PTR fs:[rip+0x27207320],bh        # 0x16721945f
   14001213f:	jnp    0x140012171
   140012141:	xor    BYTE PTR [rax],dh
   140012143:	xor    dh,BYTE PTR [rax]
   140012145:	xor    al,0x32
   140012147:	xor    al,0x2d
   140012149:	xor    BYTE PTR [rax],dh
   14001214b:	xor    BYTE PTR [rax],dh
   14001214d:	sub    eax,0x30303030
   140012152:	sub    eax,0x30303043
   140012157:	sub    eax,0x30303030
   14001215c:	xor    BYTE PTR [rax],dh
   14001215e:	xor    BYTE PTR [rax],dh
   140012160:	xor    BYTE PTR [rax],dh
   140012162:	xor    al,0x36
   140012164:	jge    0x14001218d
   140012166:	or     eax,0x2020200a
   14001216b:	and    BYTE PTR [rax],ah
   14001216d:	and    BYTE PTR [rax],ah
   14001216f:	and    BYTE PTR [rax],ah
   140012171:	and    BYTE PTR [rax],ah
   140012173:	and    BYTE PTR [rax+0x72],dl
   140012176:	outs   dx,DWORD PTR ds:[rsi]
   140012177:	js     0x1400121f2
   140012179:	push   rbx
   14001217a:	je     0x1400121f1
   14001217c:	(bad)
   140012181:	xor    esi,DWORD PTR fs:[rdx]
   140012184:	and    BYTE PTR [rip+0x27207320],bh        # 0x1672194aa
   14001218a:	jnp    0x1400121bc
   14001218c:	xor    BYTE PTR [rax],dh
   14001218e:	xor    dh,BYTE PTR [rax]
   140012190:	xor    al,0x32
   140012192:	xor    al,0x2d
   140012194:	xor    BYTE PTR [rax],dh
   140012196:	xor    BYTE PTR [rax],dh
   140012198:	sub    eax,0x30303030
   14001219d:	sub    eax,0x30303043
   1400121a2:	sub    eax,0x30303030
   1400121a7:	xor    BYTE PTR [rax],dh
   1400121a9:	xor    BYTE PTR [rax],dh
   1400121ab:	xor    BYTE PTR [rax],dh
   1400121ad:	xor    al,0x36
   1400121af:	jge    0x1400121d8
   1400121b1:	or     eax,0x2020200a
   1400121b6:	and    BYTE PTR [rax],ah
   1400121b8:	and    BYTE PTR [rax],ah
   1400121ba:	and    BYTE PTR [rax],ah
   1400121bc:	and    BYTE PTR [rax],ah
   1400121be:	and    BYTE PTR [rcx+rdi*2+0x70],dl
   1400121c2:	imul   r12,QWORD PTR gs:[rdx+0x20],0x2073203d
   1400121cb:	(bad)  
   1400121cc:	jnp    0x140012214
   1400121ce:	rex.XB xor eax,0x43383839
   1400121d4:	rex.RX sub eax,0x41364436
   1400121da:	sub    eax,0x32313834
   1400121df:	sub    eax,0x39444441
   1400121e4:	sub    eax,0x45444432
   1400121e9:	xor    al,0x46
   1400121eb:	xor    al,0x37
   1400121ed:	xor    esi,DWORD PTR [rsi+rsi*1]
   1400121f0:	rex.RX jge 0x14001221a
   1400121f3:	or     eax,0x2020200a
   1400121f8:	and    BYTE PTR [rax],ah
   1400121fa:	and    BYTE PTR [rax],ah
   1400121fc:	and    BYTE PTR [rax],ah
   1400121fe:	and    BYTE PTR [rax],ah
   140012200:	and    BYTE PTR [rbx+0xd],bh
   140012203:	or     ah,BYTE PTR [rax]
   140012205:	and    BYTE PTR [rax],ah
   140012207:	and    BYTE PTR [rax],ah
   140012209:	and    BYTE PTR [rax],ah
   14001220b:	and    BYTE PTR [rax],ah
   14001220d:	and    BYTE PTR [rax],ah
   14001220f:	and    BYTE PTR [rax],ah
   140012211:	and    BYTE PTR [rax],ah
   140012213:	and    BYTE PTR [rsi+0x65],dl
   140012216:	jb     0x14001228b
   140012218:	imul   ebp,DWORD PTR [rdi+0x6e],0x73203d20
   14001221f:	and    BYTE PTR [rdi],ah
   140012221:	xor    DWORD PTR [rsi],ebp
   140012223:	xor    BYTE PTR [rdi],ah
   140012225:	or     eax,0x2020200a
   14001222a:	and    BYTE PTR [rax],ah
   14001222c:	and    BYTE PTR [rax],ah
   14001222e:	and    BYTE PTR [rax],ah
   140012230:	and    BYTE PTR [rax],ah
   140012232:	and    BYTE PTR [rbp+0xd],bh
   140012235:	or     ah,BYTE PTR [rax]
   140012237:	and    BYTE PTR [rax],ah
   140012239:	and    BYTE PTR [rax],ah
   14001223b:	and    BYTE PTR [rax],ah
   14001223d:	and    BYTE PTR [rbp+0xd],bh
   140012240:	or     ah,BYTE PTR [rax]
   140012242:	and    BYTE PTR [rax],ah
   140012244:	and    BYTE PTR [rax],ah
   140012246:	and    BYTE PTR [rax],ah
   140012248:	and    BYTE PTR [rsi+0x6f],al
   14001224b:	jb     0x1400122b0
   14001224d:	gs push rdx
   14001224f:	gs ins DWORD PTR es:[rdi],dx
   140012251:	outs   dx,DWORD PTR ds:[rsi]
   140012252:	jbe    0x1400122b9
   140012254:	and    BYTE PTR [rbx+0x44],bh
   140012257:	xor    eax,DWORD PTR [rbp+0x44]
   14001225a:	(bad)  
   14001225b:	rex.XB xor edi,DWORD PTR [r8]
   14001225e:	sub    eax,0x33394546
   140012263:	sub    eax,0x30433534
   140012268:	sub    eax,0x33323738
   14001226d:	sub    eax,0x41313641
   140012272:	xor    eax,DWORD PTR [rdx+rsi*1+0x31]
   140012276:	rex.RB
   140012277:	rex.RX xor BYTE PTR [rip+0x203d207d],r14b        # 0x1603e42fb
   14001227e:	jae    0x1400122a0
   140012280:	(bad)  
   140012281:	rex.WB
   140012282:	rex.WRB push r11
   140012284:	push   rsp
   140012285:	push   rbx
   140012286:	push   rdi
   140012287:	gs (bad) 
   140012289:	push   rax
   14001228a:	jb     0x1400122fb
   14001228c:	js     0x140012307
   14001228e:	xor    esp,DWORD PTR [rdi]
   140012290:	or     eax,0x2020200a
   140012295:	and    BYTE PTR [rax],ah
   140012297:	and    BYTE PTR [rax],ah
   140012299:	and    BYTE PTR [rbx+0xd],bh
   14001229c:	or     ah,BYTE PTR [rax]
   14001229e:	and    BYTE PTR [rax],ah
   1400122a0:	and    BYTE PTR [rax],ah
   1400122a2:	and    BYTE PTR [rax],ah
   1400122a4:	and    BYTE PTR [rax],ah
   1400122a6:	and    BYTE PTR [rax],ah
   1400122a8:	and    BYTE PTR [rsi+0x75],cl
   1400122ab:	ins    DWORD PTR es:[rdi],dx
   1400122ac:	rex.WRB
   1400122ad:	gs je  0x140012318
   1400122b0:	outs   dx,DWORD PTR ds:[rsi]
   1400122b1:	fs jae 0x1400122d4
   1400122b4:	cmp    eax,0x27207320
   1400122b9:	xor    DWORD PTR [rcx],edi
   1400122bb:	(bad)  
   1400122bc:	or     eax,0x2020200a
   1400122c1:	and    BYTE PTR [rax],ah
   1400122c3:	and    BYTE PTR [rax],ah
   1400122c5:	and    BYTE PTR [rax],ah
   1400122c7:	and    BYTE PTR [rax],ah
   1400122c9:	and    BYTE PTR [rax+0x72],dl
   1400122cc:	outs   dx,DWORD PTR ds:[rsi]
   1400122cd:	js     0x140012348
   1400122cf:	push   rbx
   1400122d0:	je     0x140012347
   1400122d2:	(bad)
   1400122d7:	and    BYTE PTR fs:[rip+0x27207320],bh        # 0x1672195fe
   1400122de:	jnp    0x140012310
   1400122e0:	xor    BYTE PTR [rax],dh
   1400122e2:	xor    dh,BYTE PTR [rax]
   1400122e4:	xor    al,0x32
   1400122e6:	xor    al,0x2d
   1400122e8:	xor    BYTE PTR [rax],dh
   1400122ea:	xor    BYTE PTR [rax],dh
   1400122ec:	sub    eax,0x30303030
   1400122f1:	sub    eax,0x30303043
   1400122f6:	sub    eax,0x30303030
   1400122fb:	xor    BYTE PTR [rax],dh
   1400122fd:	xor    BYTE PTR [rax],dh
   1400122ff:	xor    BYTE PTR [rax],dh
   140012301:	xor    al,0x36
   140012303:	jge    0x14001232c
   140012305:	or     eax,0x2020200a
   14001230a:	and    BYTE PTR [rax],ah
   14001230c:	and    BYTE PTR [rax],ah
   14001230e:	and    BYTE PTR [rax],ah
   140012310:	and    BYTE PTR [rax],ah
   140012312:	and    BYTE PTR [rax+0x72],dl
   140012315:	outs   dx,DWORD PTR ds:[rsi]
   140012316:	js     0x140012391
   140012318:	push   rbx
   140012319:	je     0x140012390
   14001231b:	(bad)
   140012320:	xor    esi,DWORD PTR fs:[rdx]
   140012323:	and    BYTE PTR [rip+0x27207320],bh        # 0x167219649
   140012329:	jnp    0x14001235b
   14001232b:	xor    BYTE PTR [rax],dh
   14001232d:	xor    dh,BYTE PTR [rax]
   14001232f:	xor    al,0x32
   140012331:	xor    al,0x2d
   140012333:	xor    BYTE PTR [rax],dh
   140012335:	xor    BYTE PTR [rax],dh
   140012337:	sub    eax,0x30303030
   14001233c:	sub    eax,0x30303043
   140012341:	sub    eax,0x30303030
   140012346:	xor    BYTE PTR [rax],dh
   140012348:	xor    BYTE PTR [rax],dh
   14001234a:	xor    BYTE PTR [rax],dh
   14001234c:	xor    al,0x36
   14001234e:	jge    0x140012377
   140012350:	or     eax,0x2020200a
   140012355:	and    BYTE PTR [rax],ah
   140012357:	and    BYTE PTR [rax],ah
   140012359:	and    BYTE PTR [rax],ah
   14001235b:	and    BYTE PTR [rax],ah
   14001235d:	and    BYTE PTR [rcx+rdi*2+0x70],dl
   140012361:	imul   r12,QWORD PTR gs:[rdx+0x20],0x2073203d
   14001236a:	(bad)  
   14001236b:	jnp    0x1400123b3
   14001236d:	rex.XB xor eax,0x43383839
   140012373:	rex.RX sub eax,0x41364436
   140012379:	sub    eax,0x32313834
   14001237e:	sub    eax,0x39444441
   140012383:	sub    eax,0x45444432
   140012388:	xor    al,0x46
   14001238a:	xor    al,0x37
   14001238c:	xor    esi,DWORD PTR [rsi+rsi*1]
   14001238f:	rex.RX jge 0x1400123b9
   140012392:	or     eax,0x2020200a
   140012397:	and    BYTE PTR [rax],ah
   140012399:	and    BYTE PTR [rax],ah
   14001239b:	and    BYTE PTR [rax],ah
   14001239d:	and    BYTE PTR [rax],ah
   14001239f:	and    BYTE PTR [rbx+0xd],bh
   1400123a2:	or     ah,BYTE PTR [rax]
   1400123a4:	and    BYTE PTR [rax],ah
   1400123a6:	and    BYTE PTR [rax],ah
   1400123a8:	and    BYTE PTR [rax],ah
   1400123aa:	and    BYTE PTR [rax],ah
   1400123ac:	and    BYTE PTR [rax],ah
   1400123ae:	and    BYTE PTR [rax],ah
   1400123b0:	and    BYTE PTR [rax],ah
   1400123b2:	and    BYTE PTR [rsi+0x65],dl
   1400123b5:	jb     0x14001242a
   1400123b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x73203d20
   1400123be:	and    BYTE PTR [rdi],ah
   1400123c0:	xor    DWORD PTR [rsi],ebp
   1400123c2:	xor    BYTE PTR [rdi],ah
   1400123c4:	or     eax,0x2020200a
   1400123c9:	and    BYTE PTR [rax],ah
   1400123cb:	and    BYTE PTR [rax],ah
   1400123cd:	and    BYTE PTR [rax],ah
   1400123cf:	and    BYTE PTR [rax],ah
   1400123d1:	and    BYTE PTR [rbp+0xd],bh
   1400123d4:	or     ah,BYTE PTR [rax]
   1400123d6:	and    BYTE PTR [rax],ah
   1400123d8:	and    BYTE PTR [rax],ah
   1400123da:	and    BYTE PTR [rax],ah
   1400123dc:	and    BYTE PTR [rbp+0xd],bh
   1400123df:	or     ah,BYTE PTR [rax]
   1400123e1:	and    BYTE PTR [rax],ah
   1400123e3:	and    BYTE PTR [rax],ah
   1400123e5:	and    BYTE PTR [rax],ah
   1400123e7:	and    BYTE PTR [rsi+0x6f],al
   1400123ea:	jb     0x14001244f
   1400123ec:	gs push rdx
   1400123ee:	gs ins DWORD PTR es:[rdi],dx
   1400123f0:	outs   dx,DWORD PTR ds:[rsi]
   1400123f1:	jbe    0x140012458
   1400123f3:	and    BYTE PTR [rbx+0x41],bh
   1400123f6:	xor    BYTE PTR [rcx],dh
   1400123f8:	cmp    BYTE PTR [rcx],dh
   1400123fa:	cmp    BYTE PTR [rdi],dh
   1400123fc:	(bad)  
   1400123fd:	sub    eax,0x30394645
   140012402:	sub    eax,0x30376634
   140012407:	sub    eax,0x32414341
   14001240c:	sub    eax,0x37424536
   140012411:	xor    al,0x42
   140012413:	rex.XB xor eax,0x46453733
   140012419:	jge    0x14001243b
   14001241b:	cmp    eax,0x27207320
   140012420:	rex.WB
   140012421:	rex.WRB push r11
   140012423:	push   rsp
   140012424:	push   rbx
   140012425:	push   rdi
   140012426:	gs (bad) 
   140012428:	push   rax
   140012429:	jb     0x14001249a
   14001242b:	js     0x1400124a6
   14001242d:	xor    al,0x27
   14001242f:	or     eax,0x2020200a
   140012434:	and    BYTE PTR [rax],ah
   140012436:	and    BYTE PTR [rax],ah
   140012438:	and    BYTE PTR [rbx+0xd],bh
   14001243b:	or     ah,BYTE PTR [rax]
   14001243d:	and    BYTE PTR [rax],ah
   14001243f:	and    BYTE PTR [rax],ah
   140012441:	and    BYTE PTR [rax],ah
   140012443:	and    BYTE PTR [rax],ah
   140012445:	and    BYTE PTR [rax],ah
   140012447:	and    BYTE PTR [rsi+0x75],cl
   14001244a:	ins    DWORD PTR es:[rdi],dx
   14001244b:	rex.WRB
   14001244c:	gs je  0x1400124b7
   14001244f:	outs   dx,DWORD PTR ds:[rsi]
   140012450:	fs jae 0x140012473
   140012453:	cmp    eax,0x27207320
   140012458:	xor    dh,BYTE PTR [rax]
   14001245a:	(bad)  
   14001245b:	or     eax,0x2020200a
   140012460:	and    BYTE PTR [rax],ah
   140012462:	and    BYTE PTR [rax],ah
   140012464:	and    BYTE PTR [rax],ah
   140012466:	and    BYTE PTR [rax],ah
   140012468:	and    BYTE PTR [rax+0x72],dl
   14001246b:	outs   dx,DWORD PTR ds:[rsi]
   14001246c:	js     0x1400124e7
   14001246e:	push   rbx
   14001246f:	je     0x1400124e6
   140012471:	(bad)
   140012476:	and    BYTE PTR fs:[rip+0x27207320],bh        # 0x16721979d
   14001247d:	jnp    0x1400124af
   14001247f:	xor    BYTE PTR [rax],dh
   140012481:	xor    dh,BYTE PTR [rax]
   140012483:	xor    al,0x32
   140012485:	xor    al,0x2d
   140012487:	xor    BYTE PTR [rax],dh
   140012489:	xor    BYTE PTR [rax],dh
   14001248b:	sub    eax,0x30303030
   140012490:	sub    eax,0x30303043
   140012495:	sub    eax,0x30303030
   14001249a:	xor    BYTE PTR [rax],dh
   14001249c:	xor    BYTE PTR [rax],dh
   14001249e:	xor    BYTE PTR [rax],dh
   1400124a0:	xor    al,0x36
   1400124a2:	jge    0x1400124cb
   1400124a4:	or     eax,0x2020200a
   1400124a9:	and    BYTE PTR [rax],ah
   1400124ab:	and    BYTE PTR [rax],ah
   1400124ad:	and    BYTE PTR [rax],ah
   1400124af:	and    BYTE PTR [rax],ah
   1400124b1:	and    BYTE PTR [rax+0x72],dl
   1400124b4:	outs   dx,DWORD PTR ds:[rsi]
   1400124b5:	js     0x140012530
   1400124b7:	push   rbx
   1400124b8:	je     0x14001252f
   1400124ba:	(bad)
   1400124bf:	xor    esi,DWORD PTR fs:[rdx]
   1400124c2:	and    BYTE PTR [rip+0x27207320],bh        # 0x1672197e8
   1400124c8:	jnp    0x1400124fa
   1400124ca:	xor    BYTE PTR [rax],dh
   1400124cc:	xor    dh,BYTE PTR [rax]
   1400124ce:	xor    al,0x32
   1400124d0:	xor    al,0x2d
   1400124d2:	xor    BYTE PTR [rax],dh
   1400124d4:	xor    BYTE PTR [rax],dh
   1400124d6:	sub    eax,0x30303030
   1400124db:	sub    eax,0x30303043
   1400124e0:	sub    eax,0x30303030
   1400124e5:	xor    BYTE PTR [rax],dh
   1400124e7:	xor    BYTE PTR [rax],dh
   1400124e9:	xor    BYTE PTR [rax],dh
   1400124eb:	xor    al,0x36
   1400124ed:	jge    0x140012516
   1400124ef:	or     eax,0x2020200a
   1400124f4:	and    BYTE PTR [rax],ah
   1400124f6:	and    BYTE PTR [rax],ah
   1400124f8:	and    BYTE PTR [rax],ah
   1400124fa:	and    BYTE PTR [rax],ah
   1400124fc:	and    BYTE PTR [rcx+rdi*2+0x70],dl
   140012500:	imul   r12,QWORD PTR gs:[rdx+0x20],0x2073203d
   140012509:	(bad)  
   14001250a:	jnp    0x140012552
   14001250c:	rex.XB xor eax,0x43383839
   140012512:	rex.RX sub eax,0x41364436
   140012518:	sub    eax,0x32313834
   14001251d:	sub    eax,0x39444441
   140012522:	sub    eax,0x45444432
   140012527:	xor    al,0x46
   140012529:	xor    al,0x37
   14001252b:	xor    esi,DWORD PTR [rsi+rsi*1]
   14001252e:	rex.RX jge 0x140012558
   140012531:	or     eax,0x2020200a
   140012536:	and    BYTE PTR [rax],ah
   140012538:	and    BYTE PTR [rax],ah
   14001253a:	and    BYTE PTR [rax],ah
   14001253c:	and    BYTE PTR [rax],ah
   14001253e:	and    BYTE PTR [rbx+0xd],bh
   140012541:	or     ah,BYTE PTR [rax]
   140012543:	and    BYTE PTR [rax],ah
   140012545:	and    BYTE PTR [rax],ah
   140012547:	and    BYTE PTR [rax],ah
   140012549:	and    BYTE PTR [rax],ah
   14001254b:	and    BYTE PTR [rax],ah
   14001254d:	and    BYTE PTR [rax],ah
   14001254f:	and    BYTE PTR [rax],ah
   140012551:	and    BYTE PTR [rsi+0x65],dl
   140012554:	jb     0x1400125c9
   140012556:	imul   ebp,DWORD PTR [rdi+0x6e],0x73203d20
   14001255d:	and    BYTE PTR [rdi],ah
   14001255f:	xor    DWORD PTR [rsi],ebp
   140012561:	xor    BYTE PTR [rdi],ah
   140012563:	or     eax,0x2020200a
   140012568:	and    BYTE PTR [rax],ah
   14001256a:	and    BYTE PTR [rax],ah
   14001256c:	and    BYTE PTR [rax],ah
   14001256e:	and    BYTE PTR [rax],ah
   140012570:	and    BYTE PTR [rbp+0xd],bh
   140012573:	or     ah,BYTE PTR [rax]
   140012575:	and    BYTE PTR [rax],ah
   140012577:	and    BYTE PTR [rax],ah
   140012579:	and    BYTE PTR [rax],ah
   14001257b:	and    BYTE PTR [rbp+0xd],bh
   14001257e:	or     ah,BYTE PTR [rax]
   140012580:	and    BYTE PTR [rax],ah
   140012582:	and    BYTE PTR [rbp+0xd],bh
   140012585:	or     bh,BYTE PTR [rbp+0xd]
   140012588:	or     al,BYTE PTR [rax]
   14001258a:	add    BYTE PTR [rax],al
   14001258c:	add    BYTE PTR [rax],al
   14001258e:	add    BYTE PTR [rax],al
   140012590:	rex.WRB push r11
   140012592:	rex.RX push rsp
   140012594:	add    al,BYTE PTR [rax]
   140012596:	add    DWORD PTR [rax],eax
   140012598:	add    BYTE PTR [rax],al
   14001259a:	add    BYTE PTR [rax],al
   14001259c:	or     DWORD PTR [rax+rax*1],eax
   14001259f:	add    BYTE PTR [rax],al
   1400125a1:	add    BYTE PTR [rax],al
   1400125a3:	add    BYTE PTR [rbx+0x0],al
   1400125a6:	add    BYTE PTR [rax],al
   1400125a8:	add    DWORD PTR [rax],eax
   1400125aa:	add    BYTE PTR [rax],al
   1400125ac:	add    BYTE PTR [rax],al
   1400125ae:	add    BYTE PTR [rax],al
   1400125b0:	(bad)  
	...
   1400125bd:	add    BYTE PTR [rax],al
   1400125bf:	add    BYTE PTR [rdi],ch
   1400125c1:	add    BYTE PTR [rax],al
   1400125c3:	add    BYTE PTR [rdx+0x2],ch
   1400125c9:	add    BYTE PTR [rax],al
   1400125cb:	add    bh,bh
   1400125cd:	(bad)  
   1400125ce:	(bad)  
   1400125cf:	(bad)  
   1400125d0:	(bad)  
   1400125d1:	(bad)  
   1400125d2:	(bad)  
   1400125d3:	jmp    QWORD PTR [rax]
   1400125d5:	add    BYTE PTR [rax],al
   1400125d7:	add    BYTE PTR [rax+0x1000000],al
   1400125dd:	add    BYTE PTR [rax],al
   1400125df:	add    BYTE PTR [rdx],al
   1400125e1:	add    BYTE PTR [rax],al
   1400125e3:	add    BYTE PTR [rax],al
   1400125e5:	add    BYTE PTR [rax],al
   1400125e7:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400125eb:	add    al,cl
   1400125ed:	add    BYTE PTR [rax],al
   1400125ef:	add    BYTE PTR [rcx+rax*1],ch
   1400125f2:	add    BYTE PTR [rax],al
   1400125f4:	nop
   1400125f5:	add    DWORD PTR [rax],eax
   1400125f7:	add    ah,dh
   1400125f9:	add    DWORD PTR [rax],eax
   1400125fb:	add    BYTE PTR [rcx+rax*1+0x0],bl
   1400125ff:	add    BYTE PTR [rax+0x2],bl
   140012602:	add    BYTE PTR [rax],al
   140012604:	(bad)  
   140012605:	(bad)  
   140012606:	(bad)  
   140012607:	dec    DWORD PTR [rdi]
   140012609:	add    BYTE PTR [rax],al
   14001260b:	add    BYTE PTR [rax*1+0x180000],dh
   140012612:	add    BYTE PTR [rax],al
   140012614:	(bad)  
   140012615:	(bad)  
   140012616:	(bad)  
   140012617:	dec    DWORD PTR [rdi]
   140012619:	add    BYTE PTR [rax],al
   14001261b:	add    BYTE PTR [rbp+rax*1+0x0],cl
   14001261f:	add    BYTE PTR [rax+rax*1],bl
   140012622:	add    BYTE PTR [rax],al
   140012624:	(bad)  
   140012625:	(bad)  
   140012626:	(bad)  
   140012627:	dec    DWORD PTR [rdi]
   140012629:	add    BYTE PTR [rax],al
   14001262b:	add    ah,dh
   14001262d:	add    al,0x0
   14001262f:	add    BYTE PTR [rax+0x0],al
   140012632:	add    BYTE PTR [rax],al
   140012634:	(bad)  
   140012635:	(bad)  
   140012636:	(bad)  
   140012637:	dec    DWORD PTR [rdi]
   140012639:	add    BYTE PTR [rax],al
   14001263b:	add    BYTE PTR [rbx+rax*1+0x800000],dh
   140012642:	add    BYTE PTR [rax],al
   140012644:	(bad)  
   140012645:	(bad)  
   140012646:	(bad)  
   140012647:	dec    DWORD PTR [rdi]
   140012649:	add    BYTE PTR [rax],al
   14001264b:	add    BYTE PTR [rsp+rax*1],dh
   14001264e:	add    BYTE PTR [rax],al
   140012650:	rol    BYTE PTR [rax],0x0
   140012653:	add    bh,bh
   140012655:	(bad)  
   140012656:	(bad)  
   140012657:	dec    DWORD PTR [rdi]
   140012659:	add    BYTE PTR [rax],al
   14001265b:	add    BYTE PTR [rax+0x5],ch
   14001265e:	add    BYTE PTR [rax],al
   140012660:	add    BYTE PTR [rdx],al
   140012662:	add    BYTE PTR [rax],al
   140012664:	(bad)  
   140012665:	(bad)  
   140012666:	(bad)  
   140012667:	dec    DWORD PTR [rdi]
   140012669:	add    BYTE PTR [rax],al
   14001266b:	add    BYTE PTR [rax+0x7],ch
   14001266e:	add    BYTE PTR [rax],al
   140012670:	sbb    al,0x5
   140012672:	add    BYTE PTR [rax],al
   140012674:	(bad)  
   140012675:	(bad)  
   140012676:	(bad)  
   140012677:	dec    DWORD PTR [rdi]
   140012679:	add    BYTE PTR [rax],al
   14001267b:	add    BYTE PTR [rsp+rcx*1+0x2300000],al
   140012682:	add    BYTE PTR [rax],al
   140012684:	(bad)  
   140012685:	(bad)  
   140012686:	(bad)  
   140012687:	dec    DWORD PTR [rdi]
   140012689:	add    BYTE PTR [rax],al
   14001268b:	add    BYTE PTR [rsi+rcx*1+0x280000],dh
   140012692:	add    BYTE PTR [rax],al
   140012694:	(bad)  
   140012695:	(bad)  
   140012696:	(bad)  
   140012697:	dec    DWORD PTR [rdi]
   140012699:	add    BYTE PTR [rax],al
   14001269b:	add    bh,bh
   14001269d:	(bad)  
   14001269e:	(bad)  
   14001269f:	inc    DWORD PTR [rax]
   1400126a1:	add    BYTE PTR [rax],al
   1400126a3:	add    bh,bh
   1400126a5:	(bad)  
   1400126a6:	(bad)  
   1400126a7:	dec    DWORD PTR [rdi]
   1400126a9:	add    BYTE PTR [rax],al
   1400126ab:	add    bh,bh
   1400126ad:	(bad)  
   1400126ae:	(bad)  
   1400126af:	inc    DWORD PTR [rax]
   1400126b1:	add    BYTE PTR [rax],al
   1400126b3:	add    bh,bh
   1400126b5:	(bad)  
   1400126b6:	(bad)  
   1400126b7:	dec    DWORD PTR [rdi]
   1400126b9:	add    BYTE PTR [rax],al
   1400126bb:	add    bh,bh
   1400126bd:	(bad)  
   1400126be:	(bad)  
   1400126bf:	inc    DWORD PTR [rax]
   1400126c1:	add    BYTE PTR [rax],al
   1400126c3:	add    bh,bh
   1400126c5:	(bad)  
   1400126c6:	(bad)  
   1400126c7:	dec    DWORD PTR [rdi]
   1400126c9:	add    BYTE PTR [rax],al
   1400126cb:	add    bh,bh
   1400126cd:	(bad)  
   1400126ce:	(bad)  
   1400126cf:	inc    DWORD PTR [rax]
   1400126d1:	add    BYTE PTR [rax],al
   1400126d3:	add    bh,bh
   1400126d5:	(bad)  
   1400126d6:	(bad)  
   1400126d7:	dec    DWORD PTR [rdi]
   1400126d9:	add    BYTE PTR [rax],al
   1400126db:	add    bh,bh
   1400126dd:	(bad)  
   1400126de:	(bad)  
   1400126df:	inc    DWORD PTR [rax]
   1400126e1:	add    BYTE PTR [rax],al
   1400126e3:	add    bh,bh
   1400126e5:	(bad)  
   1400126e6:	(bad)  
   1400126e7:	dec    DWORD PTR [rdi]
   1400126e9:	add    BYTE PTR [rax],al
   1400126eb:	add    BYTE PTR [rip+0xffffffffdc000042],ah        # 0x11c012733
   1400126f1:	(bad)  
	...
   1400126fa:	add    BYTE PTR [rax],al
   1400126fc:	add    eax,DWORD PTR [rax]
	...
   140012716:	add    BYTE PTR [rax],al
   140012718:	sbb    BYTE PTR [rax],al
   14001271a:	add    BYTE PTR [rax],al
   14001271c:	add    al,BYTE PTR [rax]
   14001271e:	add    BYTE PTR [rax],al
   140012720:	sbb    al,0x0
   140012722:	add    BYTE PTR [rax],al
   140012724:	add    BYTE PTR [rax],al
   140012726:	add    BYTE PTR [rax],al
   140012728:	cmp    BYTE PTR [rax],al
	...
   140012732:	add    BYTE PTR [rax],al
   140012734:	(bad)  
   140012735:	(bad)  
   140012736:	(bad)  
   140012737:	inc    DWORD PTR [rax+rax*1]
   14001273a:	add    BYTE PTR [rax],al
   14001273c:	or     BYTE PTR [rax],al
	...
   14001274a:	add    BYTE PTR [rax],al
   14001274c:	(bad)  
   14001274d:	(bad)  
   14001274e:	(bad)  
   14001274f:	push   QWORD PTR [rdx+rax*2]
   140012752:	add    DWORD PTR [rax],eax
   140012754:	fmul   QWORD PTR [rsi]
	...
   14001275e:	add    BYTE PTR [rax],al
   140012760:	add    eax,DWORD PTR [rax]
   140012762:	add    BYTE PTR [rax],al
   140012764:	add    BYTE PTR [rax],al
   140012766:	add    BYTE PTR [rax],al
   140012768:	add    DWORD PTR [rax],eax
	...
   14001277a:	add    BYTE PTR [rax],al
   14001277c:	(bad)  
   14001277d:	add    BYTE PTR [rax],al
   14001277f:	add    al,al
   140012781:	adc    DWORD PTR [rax],eax
   140012783:	add    BYTE PTR [rax+rax*1],dh
   140012786:	add    BYTE PTR [rax],al
   140012788:	add    BYTE PTR [rax],al
   14001278a:	add    BYTE PTR [rax],al
   14001278c:	rex.WR add BYTE PTR [rax],r8b
	...
   140012797:	add    bh,bh
   140012799:	(bad)  
   14001279a:	(bad)  
   14001279b:	inc    DWORD PTR [rcx]
   14001279d:	add    BYTE PTR [rax+0x800],ah
   1400127a3:	add    al,cl
   1400127a5:	add    BYTE PTR [rax],al
   1400127a7:	add    BYTE PTR [rip+0x1300],al        # 0x140013aad
   1400127ad:	add    BYTE PTR [rax],al
   1400127af:	add    bh,bh
   1400127b1:	(bad)  
   1400127b2:	(bad)  
   1400127b3:	push   QWORD PTR [rdx+rax*2]
   1400127b6:	add    al,BYTE PTR [rax]
   1400127b8:	(bad)  
   1400127b9:	sldt   WORD PTR [rax]
	...
   1400127c4:	add    eax,DWORD PTR [rax]
   1400127c6:	add    BYTE PTR [rax],al
   1400127c8:	add    BYTE PTR [rax],al
   1400127ca:	add    BYTE PTR [rax],al
   1400127cc:	add    al,BYTE PTR [rax]
	...
   1400127de:	add    BYTE PTR [rax],al
   1400127e0:	js     0x1400127e2
   1400127e2:	add    BYTE PTR [rax],al
   1400127e4:	rcl    BYTE PTR [rcx],0x0
   1400127e7:	add    BYTE PTR [rax+0x0],dl
   1400127ea:	add    BYTE PTR [rax],al
   1400127ec:	add    BYTE PTR [rax],al
   1400127ee:	add    BYTE PTR [rax],al
   1400127f0:	push   0x0
   1400127f5:	add    BYTE PTR [rax],al
   1400127f7:	add    BYTE PTR [rax],al
   1400127f9:	add    BYTE PTR [rax],al
   1400127fb:	add    bh,bh
   1400127fd:	(bad)  
   1400127fe:	(bad)  
   1400127ff:	inc    DWORD PTR [rcx]
   140012801:	add    BYTE PTR [rax+0x800],bl
   140012807:	add    BYTE PTR [rcx+rax*1],ch
   14001280a:	add    BYTE PTR [rax],al
   14001280c:	add    al,0x0
   14001280e:	adc    DWORD PTR [rax],eax
   140012810:	add    BYTE PTR [rax],al
   140012812:	add    BYTE PTR [rax],al
   140012814:	(bad)  
   140012815:	(bad)  
   140012816:	(bad)  
   140012817:	push   QWORD PTR [rdx+rax*2]
   14001281a:	add    eax,DWORD PTR [rax]
   14001281c:	adc    BYTE PTR fs:[rax],al
	...
   140012827:	add    BYTE PTR [rbx],al
   140012829:	add    BYTE PTR [rax],al
   14001282b:	add    BYTE PTR [rax],al
   14001282d:	add    BYTE PTR [rax],al
   14001282f:	add    BYTE PTR [rcx],al
	...
   140012841:	add    BYTE PTR [rax],al
   140012843:	add    BYTE PTR [rax-0x40000000],dl
   140012849:	adc    DWORD PTR [rax],eax
   14001284b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14001284f:	add    BYTE PTR [rax],al
   140012851:	add    BYTE PTR [rax],al
   140012853:	add    BYTE PTR [rax+rax*1+0x0],al
   14001285a:	add    BYTE PTR [rax],al
   14001285c:	add    BYTE PTR [rax],al
   14001285e:	add    BYTE PTR [rax],al
   140012860:	(bad)  
   140012861:	(bad)  
   140012862:	(bad)  
   140012863:	inc    DWORD PTR [rcx]
   140012865:	add    BYTE PTR [rax+0x800],cl
   14001286b:	add    BYTE PTR [rax+0x3000001],dl
   140012871:	add    BYTE PTR [rax],dl
   140012873:	add    BYTE PTR [rax],al
   140012875:	add    BYTE PTR [rax],al
   140012877:	add    bh,bh
   140012879:	(bad)  
   14001287a:	(bad)  
   14001287b:	push   QWORD PTR [rdx+rax*2]
   14001287e:	add    al,0x0
   140012880:	hlt    
   140012881:	adc    BYTE PTR [rax],al
	...
   14001288b:	add    BYTE PTR [rbx],al
   14001288d:	add    BYTE PTR [rax],al
   14001288f:	add    BYTE PTR [rax],al
   140012891:	add    BYTE PTR [rax],al
   140012893:	add    BYTE PTR [rcx],cl
	...
   1400128a5:	add    BYTE PTR [rax],al
   1400128a7:	add    BYTE PTR [rax-0x40000000],ch
   1400128ad:	adc    DWORD PTR [rax],eax
   1400128af:	add    BYTE PTR [rax+0x0],cl
   1400128b5:	add    BYTE PTR [rax],al
   1400128b7:	add    BYTE PTR [rax+0x0],ah
   1400128bd:	add    BYTE PTR [rax],al
   1400128bf:	add    BYTE PTR [rax],al
   1400128c1:	add    BYTE PTR [rax],al
   1400128c3:	add    bh,bh
   1400128c5:	(bad)  
   1400128c6:	(bad)  
   1400128c7:	inc    DWORD PTR [rcx]
   1400128c9:	add    BYTE PTR [rax+0x800],al
   1400128cf:	add    BYTE PTR [rcx],al
   1400128d1:	add    BYTE PTR [rax],al
   1400128d3:	add    BYTE PTR [rdx],al
   1400128d5:	add    BYTE PTR [rdi],al
   1400128d7:	add    BYTE PTR [rax],al
   1400128d9:	add    BYTE PTR [rax],al
   1400128db:	add    bh,bh
   1400128dd:	(bad)  
   1400128de:	(bad)  
   1400128df:	jmp    QWORD PTR [rcx]
   1400128e1:	and    DWORD PTR [rip+0x138000],eax        # 0x14014a8e7
	...
   1400128ef:	add    BYTE PTR [rbx],al
	...
   1400128f9:	add    BYTE PTR [rax+rax*1],al
	...
   14001290c:	(bad)  
   14001290d:	(bad)  
   14001290e:	(bad)  
   14001290f:	inc    DWORD PTR [rax]
   140012911:	add    BYTE PTR [rax],al
   140012913:	add    BYTE PTR [rsp+rax*1+0x0],dl
   140012917:	add    BYTE PTR [rax],al
   140012919:	add    BYTE PTR [rax],al
   14001291b:	add    bh,bh
   14001291d:	(bad)  
   14001291e:	(bad)  
   14001291f:	inc    DWORD PTR [rax]
   140012921:	add    BYTE PTR [rax],al
   140012923:	add    BYTE PTR [rax],al
   140012925:	add    BYTE PTR [rax],al
   140012927:	add    bh,bh
   140012929:	(bad)  
   14001292a:	(bad)  
   14001292b:	inc    DWORD PTR [rax]
   14001292d:	add    BYTE PTR [rax],al
   14001292f:	add    BYTE PTR [rax],dl
   140012931:	add    BYTE PTR [rax],al
   140012933:	add    bh,bh
   140012935:	(bad)  
   140012936:	(bad)  
   140012937:	inc    DWORD PTR [rax]
   140012939:	add    BYTE PTR [rax],al
   14001293b:	add    BYTE PTR [rax],al
   14001293d:	add    BYTE PTR [rax],al
   14001293f:	add    bh,bh
   140012941:	(bad)  
   140012942:	(bad)  
   140012943:	(bad)  
   140012944:	(bad)  
   140012945:	(bad)  
   140012946:	(bad)  
   140012947:	(bad)  
   140012948:	(bad)  
   140012949:	(bad)  
   14001294a:	(bad)  
   14001294b:	jmp    FWORD PTR [rax-0x1000000]
   140012951:	(bad)  
   140012952:	(bad)  
   140012953:	(bad)  
   140012954:	(bad)  
   140012955:	(bad)  
   140012956:	(bad)  
   140012957:	(bad)  
   140012958:	(bad)  
   140012959:	(bad)  
   14001295a:	(bad)  
   14001295b:	(bad)  
   14001295c:	(bad)  
   14001295d:	(bad)  
   14001295e:	(bad)  
   14001295f:	(bad)  
   140012960:	(bad)  
   140012961:	(bad)  
   140012962:	(bad)  
   140012963:	(bad)  
   140012964:	(bad)  
   140012965:	(bad)  
   140012966:	(bad)  
   140012967:	(bad)  
   140012968:	(bad)  
   140012969:	(bad)  
   14001296a:	(bad)  
   14001296b:	(bad)  
   14001296c:	(bad)  
   14001296d:	(bad)  
   14001296e:	(bad)  
   14001296f:	(bad)  
   140012970:	(bad)  
   140012971:	(bad)  
   140012972:	(bad)  
   140012973:	call   QWORD PTR [rax-0x1000000]
   140012979:	(bad)  
   14001297a:	(bad)  
   14001297b:	(bad)  
   14001297c:	(bad)  
   14001297d:	(bad)  
   14001297e:	(bad)  
   14001297f:	(bad)  
   140012980:	(bad)  
   140012981:	(bad)  
   140012982:	(bad)  
   140012983:	(bad)  
   140012984:	(bad)  
   140012985:	(bad)  
   140012986:	(bad)  
   140012987:	jmp    QWORD PTR [rax+0x0]
   14001298a:	add    BYTE PTR [rax],al
   14001298c:	xor    BYTE PTR [rax],al
   14001298e:	add    BYTE PTR [rax],al
   140012990:	(bad)  
   140012991:	(bad)  
   140012992:	(bad)  
   140012993:	(bad)  
   140012994:	(bad)  
   140012995:	(bad)  
   140012996:	(bad)  
   140012997:	(bad)  
   140012998:	js     0x14001299a
   14001299a:	add    BYTE PTR [rax],al
   14001299c:	(bad)  
   14001299d:	(bad)  
   14001299e:	(bad)  
   14001299f:	(bad)  
   1400129a0:	(bad)  
   1400129a1:	(bad)  
   1400129a2:	(bad)  
   1400129a3:	(bad)  
   1400129a4:	(bad)  
   1400129a5:	(bad)  
   1400129a6:	(bad)  
   1400129a7:	(bad)  
   1400129a8:	(bad)  
   1400129a9:	(bad)  
   1400129aa:	(bad)  
   1400129ab:	(bad)  
   1400129ac:	(bad)  
   1400129ad:	(bad)  
   1400129ae:	(bad)  
   1400129af:	(bad)  
   1400129b0:	(bad)  
   1400129b1:	(bad)  
   1400129b2:	(bad)  
   1400129b3:	(bad)  
   1400129b4:	(bad)  
   1400129b5:	(bad)  
   1400129b6:	(bad)  
   1400129b7:	(bad)  
   1400129b8:	(bad)  
   1400129b9:	(bad)  
   1400129ba:	(bad)  
   1400129bb:	(bad)  
   1400129bc:	(bad)  
   1400129bd:	(bad)  
   1400129be:	(bad)  
   1400129bf:	(bad)  
   1400129c0:	(bad)  
   1400129c1:	(bad)  
   1400129c2:	(bad)  
   1400129c3:	dec    edi
   1400129c5:	mov    BYTE PTR [rcx-0x4],bl
   1400129c8:	push   0x6d
   1400129ca:	adc    cl,BYTE PTR [rax-0x53]
   1400129cd:	fldcw  WORD PTR [rip+0x34474fde]        # 0x1744879b1
   1400129d3:	outs   dx,DWORD PTR ds:[rsi]
   1400129d4:	(bad)  
   1400129d5:	(bad)  
   1400129d6:	(bad)  
   1400129d7:	(bad)  
   1400129d8:	(bad)  
   1400129d9:	(bad)  
   1400129da:	(bad)  
   1400129db:	call   FWORD PTR [rsi]
   1400129dd:	or     al,0x3a
   1400129df:	mov    ah,0x3f
   1400129e1:	mov    dh,0x91
   1400129e3:	rex.RX mov sil,0x8f
   1400129e6:	int    0x80
   1400129e8:	jp     0x140012a2f
   1400129ea:	fiadd  DWORD PTR [rcx]
   1400129ec:	add    BYTE PTR [rax],al
   1400129ee:	add    BYTE PTR [rax],al
   1400129f0:	(bad)  
   1400129f1:	(bad)  
   1400129f2:	(bad)  
   1400129f3:	push   QWORD PTR [rax]
   1400129f5:	add    al,0x2
   1400129f7:	add    BYTE PTR [rax],al
   1400129f9:	add    BYTE PTR [rax],al
   1400129fb:	add    al,al
   1400129fd:	add    BYTE PTR [rax],al
   1400129ff:	add    BYTE PTR [rax],al
   140012a01:	add    BYTE PTR [rax],al
   140012a03:	rex.RX add r8b,BYTE PTR [rax]
   140012a06:	add    BYTE PTR [rax],al
   140012a08:	(bad)  
   140012a09:	(bad)  
   140012a0a:	(bad)  
   140012a0b:	inc    DWORD PTR [rax]
   140012a0d:	add    al,0x2
   140012a0f:	add    BYTE PTR [rax],al
   140012a11:	add    BYTE PTR [rax],al
   140012a13:	add    al,al
   140012a15:	add    BYTE PTR [rax],al
   140012a17:	add    BYTE PTR [rax],al
   140012a19:	add    BYTE PTR [rax],al
   140012a1b:	rex.RX add DWORD PTR [rax],r8d
   140012a1e:	add    BYTE PTR [rax],al
   140012a20:	(bad)  
   140012a21:	(bad)  
   140012a22:	(bad)  
   140012a23:	push   QWORD PTR [rdi+0x18]
   140012a26:	sbb    BYTE PTR [rax+0x4f70ef90],ah
   140012a2c:	lods   al,BYTE PTR ds:[rsi]
   140012a2d:	movabs ds:0x64ef37c54bb76e,al
   140012a36:	add    BYTE PTR [rax],al
   140012a38:	sbb    BYTE PTR [rax],al
   140012a3a:	add    BYTE PTR [rax],al
   140012a3c:	cmp    BYTE PTR [rbp+rbp*8-0x2d],bh
   140012a40:	xchg   ebx,eax
   140012a41:	inc    al
   140012a43:	xchg   DWORD PTR [r11],r12d
   140012a46:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012a47:	sbb    bh,BYTE PTR [rip+0xffffffffc805ef21]        # 0x10807196e
   140012a4d:	add    BYTE PTR [rax],al
   140012a4f:	add    BYTE PTR [rax],al
   140012a51:	add    BYTE PTR [rax],al
   140012a53:	add    BYTE PTR [rax-0x33],ch
   140012a56:	cld    
   140012a57:	repz xchg edi,ebp
   140012a5a:	adc    eax,0xd9b18349
   140012a5f:	or     dh,ah
   140012a61:	fld    QWORD PTR [rbx+rdi*4]
   140012a64:	sub    al,0x1
   140012a66:	add    BYTE PTR [rax],al
   140012a68:	(bad)  
   140012a69:	(bad)  
   140012a6a:	(bad)  
   140012a6b:	jmp    QWORD PTR [rdi-0x33]
   140012a6e:	cld    
   140012a6f:	repz xchg edi,ebp
   140012a72:	adc    al,0x49
   140012a74:	xor    DWORD PTR [rax-0x220bf527],0x4
   140012a7b:	mov    ebx,0x190
   140012a80:	rex.W add BYTE PTR [rax],al
   140012a83:	add    BYTE PTR [rax+rax*1+0x0],ah
   140012a87:	add    BYTE PTR [rcx],al
   140012a89:	add    BYTE PTR [rax],al
   140012a8b:	add    bh,bh
   140012a8d:	(bad)  
   140012a8e:	(bad)  
   140012a8f:	call   QWORD PTR [rax]
   140012a91:	add    BYTE PTR [rax],al
   140012a93:	add    al,cl
   140012a95:	add    BYTE PTR [rax],al
   140012a97:	add    BYTE PTR [rax],al
   140012a99:	add    BYTE PTR [rax],al
   140012a9b:	add    bh,bh
   140012a9d:	(bad)  
   140012a9e:	(bad)  
   140012a9f:	jmp    QWORD PTR [rax]
   140012aa1:	add    BYTE PTR [rax],al
   140012aa3:	add    BYTE PTR [rcx+rax*1],ch
   140012aa6:	add    BYTE PTR [rax],al
   140012aa8:	add    BYTE PTR [rax],al
   140012aaa:	add    BYTE PTR [rax],al
   140012aac:	(bad)  
   140012aad:	(bad)  
   140012aae:	(bad)  
   140012aaf:	push   QWORD PTR [rax]
   140012ab1:	add    BYTE PTR [rax],al
   140012ab3:	add    BYTE PTR [rax+0x1],dl
   140012ab9:	add    BYTE PTR [rax],al
   140012abb:	add    bh,bh
   140012abd:	(bad)  
   140012abe:	(bad)  
   140012abf:	(bad)  
   140012ac0:	(bad)  
   140012ac1:	(bad)  
   140012ac2:	(bad)  
   140012ac3:	inc    DWORD PTR [rax]
   140012ac5:	add    BYTE PTR [rcx],al
   140012ac7:	add    eax,DWORD PTR [rax]
   140012ac9:	add    BYTE PTR [rax],al
   140012acb:	add    BYTE PTR [rax+0x0],cl
   140012ace:	add    BYTE PTR [rax],al
   140012ad0:	add    DWORD PTR [rax],eax
   140012ad2:	add    BYTE PTR [rcx],al
	...
   140012adc:	xor    BYTE PTR [rax],al
   140012ade:	add    BYTE PTR [rax],al
   140012ae0:	add    BYTE PTR [rax],al
   140012ae2:	add    BYTE PTR [rax],al
   140012ae4:	add    al,BYTE PTR [rax]
   140012ae6:	add    BYTE PTR [rax],al
   140012ae8:	(bad)  
   140012ae9:	add    BYTE PTR [rbx+0x74],dh
   140012aec:	outs   dx,DWORD PTR fs:[rsi]
   140012aee:	ins    BYTE PTR es:[rdi],dx
   140012aef:	xor    ch,BYTE PTR gs:[rsi]
   140012af2:	je     0x140012b60
   140012af4:	(bad)  
   140012af5:	push   rdi
   140012af6:	push   rdi
   140012af7:	push   rdi
   140012af8:	(bad)  
   140012af9:	(bad)  
   140012afa:	(bad)  
   140012afb:	(bad)  
   140012afc:	(bad)  
   140012afd:	(bad)  
   140012afe:	(bad)  
   140012aff:	(bad)  
   140012b00:	(bad)  
   140012b01:	(bad)  
   140012b02:	(bad)  
   140012b03:	(bad)  
   140012b04:	(bad)  
   140012b05:	(bad)  
   140012b06:	(bad)  
   140012b07:	(bad)  
   140012b08:	(bad)  
   140012b09:	(bad)  
   140012b0a:	(bad)  
   140012b0b:	(bad)  
   140012b0c:	(bad)  
   140012b0d:	(bad)  
   140012b0e:	(bad)  
   140012b0f:	(bad)  
   140012b10:	(bad)  
   140012b11:	(bad)  
   140012b12:	(bad)  
   140012b13:	(bad)  
   140012b14:	(bad)  
   140012b15:	(bad)  
   140012b16:	(bad)  
   140012b17:	(bad)  
   140012b18:	(bad)  
   140012b19:	(bad)  
   140012b1a:	(bad)  
   140012b1b:	(bad)  
   140012b1c:	(bad)  
   140012b1d:	(bad)  
   140012b1e:	(bad)  
   140012b1f:	jmp    FWORD PTR [rcx+rax*1]
   140012b22:	add    BYTE PTR [rax],al
   140012b24:	(bad)  
   140012b25:	(bad)  
   140012b26:	(bad)  
   140012b27:	(bad)  
   140012b28:	(bad)  
   140012b29:	(bad)  
   140012b2a:	(bad)  
   140012b2b:	dec    DWORD PTR [rax+0x24000004]
   140012b31:	add    eax,DWORD PTR [rax]
   140012b33:	add    bh,bh
   140012b35:	(bad)  
   140012b36:	(bad)  
   140012b37:	(bad)  
   140012b38:	(bad)  
   140012b39:	(bad)  
   140012b3a:	(bad)  
   140012b3b:	(bad)  
   140012b3c:	call   0x13f012b44
   140012b41:	(bad)  
   140012b42:	(bad)  
   140012b43:	(bad)  
   140012b44:	(bad)  
   140012b45:	(bad)  
   140012b46:	(bad)  
   140012b47:	(bad)  
   140012b48:	(bad)  
   140012b49:	(bad)  
   140012b4a:	(bad)  
   140012b4b:	(bad)  
   140012b4c:	(bad)  
   140012b4d:	(bad)  
   140012b4e:	(bad)  
   140012b4f:	(bad)  
   140012b50:	(bad)  
   140012b51:	(bad)  
   140012b52:	(bad)  
   140012b53:	(bad)  
   140012b54:	(bad)  
   140012b55:	(bad)  
   140012b56:	(bad)  
   140012b57:	(bad)  
   140012b58:	(bad)  
   140012b59:	(bad)  
   140012b5a:	(bad)  
   140012b5b:	(bad)  
   140012b5c:	(bad)  
   140012b5d:	(bad)  
   140012b5e:	(bad)  
   140012b5f:	call   QWORD PTR [rsp+rax*1+0x0]
   140012b63:	add    BYTE PTR [rax],ah
   140012b65:	add    al,0x0
   140012b67:	add    bh,bh
   140012b69:	(bad)  
   140012b6a:	(bad)  
   140012b6b:	call   QWORD PTR [rax-0xfffffe]
   140012b71:	(bad)  
   140012b72:	(bad)  
   140012b73:	(bad)  
   140012b74:	(bad)  
   140012b75:	(bad)  
   140012b76:	(bad)  
   140012b77:	inc    DWORD PTR [rax]
   140012b79:	add    eax,0xffff0000
   140012b7e:	(bad)  
   140012b7f:	(bad)  
   140012b80:	(bad)  
   140012b81:	(bad)  
   140012b82:	(bad)  
   140012b83:	(bad)  
   140012b84:	(bad)  
   140012b85:	(bad)  
   140012b86:	(bad)  
   140012b87:	(bad)  
   140012b88:	(bad)  
   140012b89:	(bad)  
   140012b8a:	(bad)  
   140012b8b:	(bad)  
   140012b8c:	(bad)  
   140012b8d:	(bad)  
   140012b8e:	(bad)  
   140012b8f:	(bad)  
   140012b90:	call   0x13f012b97
   140012b95:	(bad)  
   140012b96:	(bad)  
   140012b97:	(bad)  
   140012b98:	(bad)  
   140012b99:	(bad)  
   140012b9a:	(bad)  
   140012b9b:	(bad)  
   140012b9c:	(bad)  
   140012b9d:	(bad)  
   140012b9e:	(bad)  
   140012b9f:	(bad)  
   140012ba0:	(bad)  
   140012ba1:	(bad)  
   140012ba2:	(bad)  
   140012ba3:	push   QWORD PTR [rcx+rax*1+0x0]
   140012ba7:	add    al,dl
   140012ba9:	add    al,BYTE PTR [rax]
   140012bab:	add    bh,bh
   140012bad:	(bad)  
   140012bae:	(bad)  
   140012baf:	(bad)  
   140012bb0:	(bad)  
   140012bb1:	(bad)  
   140012bb2:	(bad)  
   140012bb3:	(bad)  
   140012bb4:	(bad)  
   140012bb5:	(bad)  
   140012bb6:	(bad)  
   140012bb7:	(bad)  
   140012bb8:	(bad)  
   140012bb9:	(bad)  
   140012bba:	(bad)  
   140012bbb:	(bad)  
   140012bbc:	(bad)  
   140012bbd:	(bad)  
   140012bbe:	(bad)  
   140012bbf:	(bad)  
   140012bc0:	(bad)  
   140012bc1:	(bad)  
   140012bc2:	(bad)  
   140012bc3:	(bad)  
   140012bc4:	(bad)  
   140012bc5:	(bad)  
   140012bc6:	(bad)  
   140012bc7:	(bad)  
   140012bc8:	(bad)  
   140012bc9:	(bad)  
   140012bca:	(bad)  
   140012bcb:	(bad)  
   140012bcc:	js     0x140012bd2
   140012bce:	add    BYTE PTR [rax],al
   140012bd0:	(bad)  
   140012bd1:	(bad)  
   140012bd2:	(bad)  
   140012bd3:	jmp    QWORD PTR [rax-0x3ffffffd]
   140012bd9:	add    eax,DWORD PTR [rax]
   140012bdb:	add    BYTE PTR [rdx+rax*1+0x500000],dh
   140012be2:	add    BYTE PTR [rax],al
   140012be4:	xor    al,0x0
   140012be6:	add    BYTE PTR [rax],al
   140012be8:	(bad)  
   140012be9:	(bad)  
   140012bea:	(bad)  
   140012beb:	jmp    rsp
   140012bed:	add    al,0x0
   140012bef:	add    bh,bh
   140012bf1:	(bad)  
   140012bf2:	(bad)  
   140012bf3:	jmp    rax
   140012bf5:	add    BYTE PTR [rax],al
   140012bf7:	add    bh,bh
   140012bf9:	(bad)  
   140012bfa:	(bad)  
   140012bfb:	(bad)  
   140012bfc:	(bad)  
   140012bfd:	(bad)  
   140012bfe:	(bad)  
   140012bff:	(bad)  
   140012c00:	(bad)  
   140012c01:	(bad)  
   140012c02:	(bad)  
   140012c03:	(bad)  
   140012c04:	(bad)  
   140012c05:	(bad)  
   140012c06:	(bad)  
   140012c07:	(bad)  
   140012c08:	(bad)  
   140012c09:	(bad)  
   140012c0a:	(bad)  
   140012c0b:	(bad)  
   140012c0c:	(bad)  
   140012c0d:	(bad)  
   140012c0e:	(bad)  
   140012c0f:	jmp    rsp
   140012c11:	add    DWORD PTR [rax],eax
   140012c13:	add    bh,bh
   140012c15:	(bad)  
   140012c16:	(bad)  
   140012c17:	call   FWORD PTR [rsp+rax*1-0x10000]
   140012c1e:	(bad)  
   140012c1f:	inc    DWORD PTR [rax-0xfffffd]
   140012c25:	(bad)  
   140012c26:	(bad)  
   140012c27:	(bad)  
   140012c28:	(bad)  
   140012c29:	(bad)  
   140012c2a:	(bad)  
   140012c2b:	(bad)  
   140012c2c:	(bad)  
   140012c2d:	(bad)  
   140012c2e:	(bad)  
   140012c2f:	(bad)  
   140012c30:	(bad)  
   140012c31:	(bad)  
   140012c32:	(bad)  
   140012c33:	(bad)  
   140012c34:	(bad)  
   140012c35:	(bad)  
   140012c36:	(bad)  
   140012c37:	inc    DWORD PTR [rbx+rax*1]
   140012c3a:	add    BYTE PTR [rax],al
   140012c3c:	movabs al,ds:0xb00000001c000001
   140012c45:	add    al,0x0
   140012c47:	add    bh,bh
   140012c49:	(bad)  
   140012c4a:	(bad)  
   140012c4b:	(bad)  
   140012c4c:	(bad)  
   140012c4d:	(bad)  
   140012c4e:	(bad)  
   140012c4f:	(bad)  
   140012c50:	(bad)  
   140012c51:	(bad)  
   140012c52:	(bad)  
   140012c53:	(bad)  
   140012c54:	(bad)  
   140012c55:	(bad)  
   140012c56:	(bad)  
   140012c57:	(bad)  
   140012c58:	(bad)  
   140012c59:	(bad)  
   140012c5a:	(bad)  
   140012c5b:	(bad)  
   140012c5c:	(bad)  
   140012c5d:	(bad)  
   140012c5e:	(bad)  
   140012c5f:	(bad)  
   140012c60:	(bad)  
   140012c61:	(bad)  
   140012c62:	(bad)  
   140012c63:	(bad)  
   140012c64:	(bad)  
   140012c65:	(bad)  
   140012c66:	(bad)  
   140012c67:	(bad)  
   140012c68:	(bad)  
   140012c69:	(bad)  
   140012c6a:	(bad)  
   140012c6b:	(bad)  
   140012c6c:	cld    
   140012c6d:	add    BYTE PTR [rax],al
   140012c6f:	add    bh,bh
   140012c71:	(bad)  
   140012c72:	(bad)  
   140012c73:	inc    DWORD PTR [rdx+rax*1+0x0]
   140012c77:	add    bh,bh
   140012c79:	(bad)  
   140012c7a:	(bad)  
   140012c7b:	jmp    QWORD PTR [rax+0x2]
   140012c7e:	add    BYTE PTR [rax],al
   140012c80:	xor    al,0x4
   140012c82:	add    BYTE PTR [rax],al
   140012c84:	(bad)  
   140012c85:	(bad)  
   140012c86:	(bad)  
   140012c87:	dec    esp
   140012c89:	add    al,0x0
   140012c8b:	add    BYTE PTR [rax+0x4],ch
   140012c8e:	add    BYTE PTR [rax],al
   140012c90:	(bad)  
   140012c91:	(bad)  
   140012c92:	(bad)  
   140012c93:	(bad)  
   140012c94:	(bad)  
   140012c95:	(bad)  
   140012c96:	(bad)  
   140012c97:	(bad)  
   140012c98:	(bad)  
   140012c99:	(bad)  
   140012c9a:	(bad)  
   140012c9b:	jmp    QWORD PTR [rax]
   140012c9d:	add    al,BYTE PTR [rax]
   140012c9f:	add    bh,bh
   140012ca1:	(bad)  
   140012ca2:	(bad)  
   140012ca3:	(bad)  
   140012ca4:	(bad)  
   140012ca5:	(bad)  
   140012ca6:	(bad)  
   140012ca7:	(bad)  
   140012ca8:	(bad)  
   140012ca9:	(bad)  
   140012caa:	(bad)  
   140012cab:	(bad)  
   140012cac:	(bad)  
   140012cad:	(bad)  
   140012cae:	(bad)  
   140012caf:	(bad)  
   140012cb0:	(bad)  
   140012cb1:	(bad)  
   140012cb2:	(bad)  
   140012cb3:	(bad)  
   140012cb4:	(bad)  
   140012cb5:	(bad)  
   140012cb6:	(bad)  
   140012cb7:	(bad)  
   140012cb8:	(bad)  
   140012cb9:	(bad)  
   140012cba:	(bad)  
   140012cbb:	call   QWORD PTR [rcx+rax*1]
   140012cbe:	add    BYTE PTR [rax],al
   140012cc0:	(bad)  
   140012cc1:	(bad)  
   140012cc2:	(bad)  
   140012cc3:	(bad)  
   140012cc4:	(bad)  
   140012cc5:	(bad)  
   140012cc6:	(bad)  
   140012cc7:	(bad)  
   140012cc8:	(bad)  
   140012cc9:	(bad)  
   140012cca:	(bad)  
   140012ccb:	(bad)  
   140012ccc:	(bad)  
   140012ccd:	(bad)  
   140012cce:	(bad)  
   140012ccf:	(bad)  
   140012cd0:	(bad)  
   140012cd1:	(bad)  
   140012cd2:	(bad)  
   140012cd3:	(bad)  
   140012cd4:	(bad)  
   140012cd5:	(bad)  
   140012cd6:	(bad)  
   140012cd7:	(bad)  
   140012cd8:	(bad)  
   140012cd9:	(bad)  
   140012cda:	(bad)  
   140012cdb:	(bad)  
   140012cdc:	(bad)  
   140012cdd:	(bad)  
   140012cde:	(bad)  
   140012cdf:	(bad)  
   140012ce0:	(bad)  
   140012ce1:	(bad)  
   140012ce2:	(bad)  
   140012ce3:	call   FWORD PTR [rax+0x3]
   140012ce6:	add    BYTE PTR [rax],al
   140012ce8:	(bad)  
   140012ce9:	(bad)  
   140012cea:	(bad)  
   140012ceb:	(bad)  
   140012cec:	(bad)  
   140012ced:	(bad)  
   140012cee:	(bad)  
   140012cef:	(bad)  
   140012cf0:	(bad)  
   140012cf1:	(bad)  
   140012cf2:	(bad)  
   140012cf3:	inc    DWORD PTR [rsp+rax*1]
   140012cf6:	add    BYTE PTR [rax],al
   140012cf8:	(bad)  
   140012cf9:	(bad)  
   140012cfa:	(bad)  
   140012cfb:	(bad)  
   140012cfc:	(bad)  
   140012cfd:	(bad)  
   140012cfe:	(bad)  
   140012cff:	dec    DWORD PTR [rdi]
   140012d01:	add    BYTE PTR [rax+0x21],dl
   140012d04:	rex.WRB push r11
   140012d06:	push   rsp
   140012d07:	push   rbx
   140012d08:	push   rdi
   140012d09:	gs (bad) 
   140012d0b:	push   rax
   140012d0c:	jb     0x140012d7d
   140012d0e:	js     0x140012d89
   140012d10:	imul   r12,QWORD PTR [rdx+0x57],0x0
   140012d18:	(bad)  
   140012d19:	(bad)  
   140012d1a:	(bad)  
   140012d1b:	dec    DWORD PTR [rax+rdi*1]
   140012d1e:	push   rdx
   140012d1f:	xchg   esi,eax
   140012d20:	rex.WRB push r11
   140012d22:	push   rsp
   140012d23:	push   rbx
   140012d24:	push   rdi
   140012d25:	gs (bad) 
   140012d27:	push   rax
   140012d28:	jb     0x140012d99
   140012d2a:	js     0x140012da5
   140012d2c:	add    BYTE PTR fs:[rax],al
   140012d2f:	add    bh,bh
   140012d31:	(bad)  
   140012d32:	(bad)  
   140012d33:	dec    DWORD PTR [rsi]
   140012d35:	cmp    BYTE PTR [rbx+0x534d49c7],bh
   140012d3b:	push   rsp
   140012d3c:	push   rbx
   140012d3d:	push   rdi
   140012d3e:	gs (bad) 
   140012d40:	push   rax
   140012d41:	jb     0x140012db2
   140012d43:	js     0x140012dbe
   140012d45:	xor    al,0x57
   140012d47:	push   rdi
   140012d48:	enter  0x0,0x0
   140012d4c:	(bad)  
   140012d4d:	(bad)  
   140012d4e:	(bad)  
   140012d4f:	dec    DWORD PTR [rsi]
   140012d51:	cmp    BYTE PTR [rdx+0x534d49c7],bh
   140012d57:	push   rsp
   140012d58:	push   rbx
   140012d59:	push   rdi
   140012d5a:	gs (bad) 
   140012d5c:	push   rax
   140012d5d:	jb     0x140012dce
   140012d5f:	js     0x140012dda
   140012d61:	xor    edx,DWORD PTR [rdi+0x57]
   140012d64:	sub    al,0x1
   140012d66:	add    BYTE PTR [rax],al
   140012d68:	(bad)  
   140012d69:	(bad)  
   140012d6a:	(bad)  
   140012d6b:	dec    DWORD PTR [rsi]
   140012d6d:	cmp    BYTE PTR [rcx+0x534d49c7],bh
   140012d73:	push   rsp
   140012d74:	push   rbx
   140012d75:	push   rdi
   140012d76:	gs (bad) 
   140012d78:	push   rax
   140012d79:	jb     0x140012dea
   140012d7b:	js     0x140012df6
   140012d7d:	xor    dl,BYTE PTR [rdi+0x57]
   140012d80:	nop
   140012d81:	add    DWORD PTR [rax],eax
   140012d83:	add    bh,bh
   140012d85:	(bad)  
   140012d86:	(bad)  
   140012d87:	dec    DWORD PTR [rip+0x496dac38]        # 0x1896ed9c5
   140012d8d:	rex.WRB push r11
   140012d8f:	push   rsp
   140012d90:	push   rbx
   140012d91:	push   rdi
   140012d92:	gs (bad) 
   140012d94:	push   rax
   140012d95:	jb     0x140012e06
   140012d97:	js     0x140012e12
   140012d99:	push   rdi
   140012d9a:	push   rdi
   140012d9b:	push   rdi
   140012d9c:	nop
   140012d9d:	add    DWORD PTR [rax],eax
   140012d9f:	add    bh,bh
   140012da1:	(bad)  
   140012da2:	(bad)  
   140012da3:	call   QWORD PTR [rbx]
   140012da5:	add    BYTE PTR [rcx+0x4b],dh
   140012da8:	imul   r14d,DWORD PTR [rbx+0x63],0x656e6e6f
   140012db0:	movsxd esi,DWORD PTR [rdi+rdx*2+0x6f]
   140012db4:	jb     0x140012e21
   140012db6:	jae    0x140012e28
   140012db8:	(bad)  
   140012db9:	movsxd esp,DWORD PTR [rbp+0x57]
   140012dbc:	(bad)  
   140012dbd:	(bad)  
   140012dbe:	(bad)  
   140012dbf:	(bad)  
   140012dc0:	(bad)  
   140012dc1:	(bad)  
   140012dc2:	(bad)  
   140012dc3:	dec    DWORD PTR [rdi]
   140012dc5:	add    BYTE PTR [rsi],cl
   140012dc7:	(bad)
   140012dcd:	outs   dx,DWORD PTR ds:[rsi]
   140012dce:	jb     0x140012e3b
   140012dd0:	jae    0x140012e42
   140012dd2:	(bad)  
   140012dd3:	movsxd esp,DWORD PTR [rbp+0x49]
   140012dd6:	fs push rdi
   140012dd8:	nop
   140012dd9:	add    DWORD PTR [rax],eax
   140012ddb:	add    bh,bh
   140012ddd:	(bad)  
   140012dde:	(bad)  
   140012ddf:	dec    DWORD PTR [rsi]
   140012de1:	add    BYTE PTR [rdi],bh
   140012de3:	cmp    eax,0x72617453
   140012de8:	je     0x140012e41
   140012dea:	outs   dx,DWORD PTR ds:[rsi]
   140012deb:	jb     0x140012e58
   140012ded:	jae    0x140012e5f
   140012def:	(bad)  
   140012df0:	movsxd esp,DWORD PTR [rbp+0x57]
   140012df3:	push   rdi
   140012df4:	(bad)  
   140012df5:	(bad)  
   140012df6:	(bad)  
   140012df7:	(bad)  
   140012df8:	(bad)  
   140012df9:	(bad)  
   140012dfa:	(bad)  
   140012dfb:	dec    DWORD PTR [rax+rax*1]
   140012dfe:	fucomp st(0)
   140012e00:	(bad)
   140012e05:	jae    0x140012e6c
   140012e07:	jb     0x140012e57
   140012e09:	(bad)  
   140012e0a:	ins    DWORD PTR es:[rdi],dx
   140012e0b:	gs (bad) 
   140012e0d:	(bad)  
   140012e0e:	(bad)  
   140012e0f:	jmp    QWORD PTR [rax+rax*1+0xc0000]
   140012e16:	jno    0x140012de9
   140012e18:	(bad)
   140012e1d:	(bad)  
   140012e1e:	jae    0x140012e93
   140012e20:	ja     0x140012e91
   140012e22:	jb     0x140012e88
   140012e24:	(bad)  
   140012e25:	(bad)  
   140012e26:	(bad)  
   140012e27:	(bad)  
   140012e28:	(bad)  
   140012e29:	(bad)  
   140012e2a:	(bad)  
   140012e2b:	call   QWORD PTR [rbx]
   140012e2d:	add    BYTE PTR [rdx],cl
   140012e2f:	fisub  DWORD PTR [rdx+0x73]
   140012e32:	je     0x140012ea6
   140012e34:	push   rdi
   140012e35:	outs   dx,DWORD PTR ds:[rsi]
   140012e36:	jb     0x140012ea3
   140012e38:	jae    0x140012eaa
   140012e3a:	(bad)  
   140012e3b:	movsxd esp,DWORD PTR [rbp+0x50]
   140012e3e:	(bad)  
   140012e3f:	jb     0x140012ea2
   140012e41:	ins    DWORD PTR es:[rdi],dx
   140012e42:	jae    0x140012e9b
   140012e44:	(bad)  
   140012e45:	(bad)  
   140012e46:	(bad)  
   140012e47:	(bad)  
   140012e48:	(bad)  
   140012e49:	(bad)  
   140012e4a:	(bad)  
   140012e4b:	dec    DWORD PTR [rax]
   140012e4d:	add    ah,ah
   140012e4f:	add    DWORD PTR [rsp+rdx*2+0x69],ebp
   140012e53:	ins    DWORD PTR es:[rdi],dx
   140012e54:	outs   dx,DWORD PTR gs:[rsi]
   140012e56:	jne    0x140012ecc
   140012e58:	(bad)  
   140012e59:	(bad)  
   140012e5a:	(bad)  
   140012e5b:	(bad)  
   140012e5c:	(bad)  
   140012e5d:	(bad)  
   140012e5e:	(bad)  
   140012e5f:	inc    DWORD PTR [rsi]
   140012e61:	add    bh,bh
   140012e63:	test   al,0x6c
   140012e65:	rex.RX ins BYTE PTR es:[rdi],dx
   140012e67:	(bad)  
   140012e68:	addr32 jae 0x140012ec2
   140012e6b:	push   rdi
   140012e6c:	nop
   140012e6d:	add    DWORD PTR [rax],eax
   140012e6f:	add    bh,bh
   140012e71:	(bad)  
   140012e72:	(bad)  
   140012e73:	call   FWORD PTR [rsi]
   140012e75:	add    BYTE PTR [rbx+0x577349f5],ch
   140012e7b:	outs   dx,DWORD PTR ds:[rsi]
   140012e7c:	jb     0x140012ee9
   140012e7e:	jae    0x140012ef0
   140012e80:	(bad)  
   140012e81:	movsxd esp,DWORD PTR [rbp+0x43]
   140012e84:	jb     0x140012eeb
   140012e86:	fs outs dx,BYTE PTR gs:[rsi]
   140012e89:	je     0x140012ef4
   140012e8b:	(bad)  
   140012e8c:	ins    BYTE PTR es:[rdi],dx
   140012e8d:	push   rbx
   140012e8e:	jo     0x140012ef5
   140012e90:	movsxd ebp,DWORD PTR [rcx+0x66]
   140012e93:	imul   esp,DWORD PTR [rbp+0x64],0xffff5757
   140012e9a:	(bad)  
   140012e9b:	(bad)  
   140012e9c:	(bad)  
   140012e9d:	(bad)  
   140012e9e:	(bad)  
   140012e9f:	jmp    QWORD PTR [rax]
   140012ea1:	add    cl,dl
   140012ea3:	jns    0x140012f07
   140012ea5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140012ea7:	jne    0x140012f17
   140012ea9:	je     0x140012f00
   140012eab:	outs   dx,BYTE PTR ds:[rsi]
   140012eac:	(bad)  
   140012ead:	jne    0x140012f23
   140012eaf:	push   0x69746e65
   140012eb4:	movsxd esp,DWORD PTR [rcx+0x74]
   140012eb7:	gs fs rex.XB jb 0x140012f21
   140012ebc:	fs outs dx,BYTE PTR gs:[rsi]
   140012ebf:	je     0x140012f2a
   140012ec1:	(bad)  
   140012ec2:	ins    BYTE PTR es:[rdi],dx
   140012ec3:	jae    0x140012ec4
   140012ec5:	(bad)  
   140012ec6:	(bad)  
   140012ec7:	(bad)  
   140012ec8:	(bad)  
   140012ec9:	(bad)  
   140012eca:	(bad)  
   140012ecb:	dec    DWORD PTR [rbx]
   140012ecd:	add    BYTE PTR [rax+0x4362706a],ah
   140012ed3:	jb     0x140012f3a
   140012ed5:	fs rex.RB js 0x140012f42
   140012ed9:	jae    0x140012f4f
   140012edb:	push   rdi
   140012edc:	nop
   140012edd:	add    DWORD PTR [rax],eax
   140012edf:	add    bh,bh
   140012ee1:	(bad)  
   140012ee2:	(bad)  
   140012ee3:	call   QWORD PTR [rip+0x49554600]        # 0x1895674e9
   140012ee9:	jae    0x140012f42
   140012eeb:	outs   dx,DWORD PTR ds:[rsi]
   140012eec:	jb     0x140012f59
   140012eee:	jae    0x140012f60
   140012ef0:	(bad)  
   140012ef1:	movsxd esp,DWORD PTR [rbp+0x53]
   140012ef4:	push   rbx
   140012ef5:	rex.WRXB
   140012ef6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140012ef8:	(bad)  
   140012ef9:	(bad)  
   140012efa:	ins    BYTE PTR es:[rdi],dx
   140012efb:	gs fs push rdi
   140012efe:	push   rdi
   140012eff:	push   rdi
   140012f00:	(bad)  
   140012f01:	(bad)  
   140012f02:	(bad)  
   140012f03:	(bad)  
   140012f04:	(bad)  
   140012f05:	(bad)  
   140012f06:	(bad)  
   140012f07:	dec    DWORD PTR [rax+rax*1]
   140012f0a:	(bad)  
   140012f0b:	(bad)
   140012f0e:	push   rbx
   140012f0f:	push   rbx
   140012f10:	rex.WRXB
   140012f11:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140012f13:	(bad)  
   140012f14:	(bad)  
   140012f15:	ins    BYTE PTR es:[rdi],dx
   140012f16:	gs fs nop
   140012f19:	add    DWORD PTR [rax],eax
   140012f1b:	add    bh,bh
   140012f1d:	(bad)  
   140012f1e:	(bad)  
   140012f1f:	call   FWORD PTR [rax]
   140012f21:	add    BYTE PTR [rcx+0x1c],ch
   140012f24:	rex.XB ins BYTE PTR es:[rdi],dx
   140012f26:	gs (bad) 
   140012f28:	jb     0x140012f81
   140012f2a:	outs   dx,DWORD PTR ds:[rsi]
   140012f2b:	jb     0x140012f98
   140012f2d:	jae    0x140012f9f
   140012f2f:	(bad)  
   140012f30:	movsxd esp,DWORD PTR [rbp+0x43]
   140012f33:	jb     0x140012f9a
   140012f35:	fs outs dx,BYTE PTR gs:[rsi]
   140012f38:	je     0x140012fa3
   140012f3a:	(bad)  
   140012f3b:	ins    BYTE PTR es:[rdi],dx
   140012f3c:	nop
   140012f3d:	add    DWORD PTR [rax],eax
   140012f3f:	add    bh,bh
   140012f41:	(bad)  
   140012f42:	(bad)  
   140012f43:	dec    DWORD PTR [rdi]
   140012f45:	add    bh,bl
   140012f47:	imul   ecx,DWORD PTR [rdi+0x6e],0x68747541
   140012f4e:	outs   dx,BYTE PTR gs:[rsi]
   140012f50:	je     0x140012fbb
   140012f52:	movsxd esp,DWORD PTR [rcx+0x74]
   140012f55:	gs fs push rdi
   140012f58:	nop
   140012f59:	add    DWORD PTR [rax],eax
   140012f5b:	add    BYTE PTR [rax],cl
   140012f5d:	add    al,BYTE PTR [rax]
   140012f5f:	add    BYTE PTR [rax+rax*1],cl
   140012f62:	(bad)  
   140012f63:	mov    es,WORD PTR [rdi+0x65]
   140012f66:	je     0x140012fb8
   140012f68:	jb     0x140012fd9
   140012f6a:	movsxd esp,DWORD PTR [rbp+0x73]
   140012f6d:	jae    0x140012fb8
   140012f6f:	fs (bad) 
   140012f71:	(bad)  
   140012f72:	(bad)  
   140012f73:	(bad)  
   140012f74:	(bad)  
   140012f75:	(bad)  
   140012f76:	(bad)  
   140012f77:	dec    DWORD PTR [rax+rax*1]
   140012f7a:	(bad)  
   140012f7b:	mov    dh,BYTE PTR [rax+0x75]
   140012f7e:	ins    BYTE PTR es:[rdi],dx
   140012f7f:	push   rax
   140012f80:	jb     0x140012ff1
   140012f82:	movsxd esp,DWORD PTR [rbp+0x73]
   140012f85:	jae    0x140012fd0
   140012f87:	fs nop
   140012f89:	add    DWORD PTR [rax],eax
   140012f8b:	add    bh,bh
   140012f8d:	(bad)  
   140012f8e:	(bad)  
   140012f8f:	call   QWORD PTR [rsi]
   140012f91:	add    BYTE PTR [rbp+0x617453c0],bl
   140012f97:	jb     0x14001300d
   140012f99:	push   rdx
   140012f9a:	gs ins DWORD PTR es:[rdi],dx
   140012f9c:	outs   dx,DWORD PTR ds:[rsi]
   140012f9d:	je     0x140013004
   140012f9f:	rex.B jo 0x140013012
   140012fa2:	ins    BYTE PTR es:[rdi],dx
   140012fa3:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140012faa:	push   rdi
   140012fab:	push   rdi
   140012fac:	(bad)  
   140012fad:	(bad)  
   140012fae:	(bad)  
   140012faf:	jmp    FWORD PTR [rax+rax*1+0x0]
   140012fb3:	add    BYTE PTR [rip+0x6294b900],cl        # 0x1a295e8b9
   140012fb9:	jae    0x14001302f
   140012fbb:	jb     0x140012ffe
   140012fbd:	jb     0x140013026
   140012fbf:	jne    0x14001302e
   140012fc1:	outs   dx,BYTE PTR gs:[rsi]
   140012fc3:	je     0x140013038
   140012fc5:	push   rdi
   140012fc6:	push   rdi
   140012fc7:	push   rdi
   140012fc8:	(bad)  
   140012fc9:	(bad)  
   140012fca:	(bad)  
   140012fcb:	dec    DWORD PTR [rax+0xc000000]
   140012fd1:	add    BYTE PTR [rdx+rax*2+0x72747362],ch
   140012fd8:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0xff687461
   140012fe1:	(bad)  
   140012fe2:	(bad)  
   140012fe3:	(bad)  
   140012fe4:	(bad)  
   140012fe5:	(bad)  
   140012fe6:	(bad)  
   140012fe7:	call   QWORD PTR [rax]
   140012fe9:	add    BYTE PTR [rsi+0x74736285],ah
   140012fef:	jb     0x140013043
   140012ff1:	rex.R push rax
   140012ff3:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140012ffb:	jns    0x140012f8d
   140012ffd:	add    DWORD PTR [rax],eax
   140012fff:	add    BYTE PTR [rax],al
   140013001:	add    BYTE PTR [rax],al
   140013003:	add    BYTE PTR [rdx],dl
   140013005:	add    al,dl
   140013007:	sti    
   140013008:	push   rbx
   140013009:	je     0x14001306c
   14001300b:	jb     0x140013081
   14001300d:	push   rdx
   14001300e:	gs ins DWORD PTR es:[rdi],dx
   140013010:	outs   dx,DWORD PTR ds:[rsi]
   140013011:	je     0x140013078
   140013013:	rex.R
   140013014:	gs jae 0x140013082
   140013017:	je     0x140013088
   140013019:	jo     0x140013072
   14001301b:	push   rdi
   14001301c:	(bad)  
   14001301d:	(bad)  
   14001301e:	(bad)  
   14001301f:	inc    esp
   140013021:	add    BYTE PTR [rax],al
   140013023:	add    BYTE PTR [rcx],cl
   140013025:	add    BYTE PTR [rsi],cl
   140013027:	sub    DWORD PTR [rdx+0x73],esp
   14001302a:	je     0x14001309e
   14001302c:	rex.WRB jae 0x1400130a3
   14001302f:	jae    0x140013094
   140013031:	push   rdi
   140013032:	push   rdi
   140013033:	push   rdi
   140013034:	sub    al,0x1
   140013036:	add    BYTE PTR [rax],al
   140013038:	(bad)  
   140013039:	(bad)  
   14001303a:	(bad)  
   14001303b:	call   QWORD PTR [rax]
   14001303d:	add    BYTE PTR [rbp+0x61745339],bh
   140013043:	jb     0x1400130b9
   140013045:	push   rdi
   140013046:	outs   dx,DWORD PTR ds:[rsi]
   140013047:	jb     0x1400130b4
   140013049:	jae    0x1400130bb
   14001304b:	(bad)  
   14001304c:	movsxd esp,DWORD PTR [rbp+0x45]
   14001304f:	js     0x140013050
   140013051:	(bad)  
   140013052:	(bad)  
   140013053:	(bad)  
   140013054:	(bad)  
   140013055:	(bad)  
   140013056:	(bad)  
   140013057:	call   FWORD PTR [rcx]
   140013059:	add    bl,bh
   14001305b:	mul    BYTE PTR [rdx+0x73]
   14001305e:	je     0x1400130d2
   140013060:	push   rdi
   140013061:	outs   dx,DWORD PTR ds:[rsi]
   140013062:	jb     0x1400130cf
   140013064:	jae    0x1400130d6
   140013066:	(bad)  
   140013067:	movsxd esp,DWORD PTR [rbp+0x46]
   14001306a:	jb     0x1400130d5
   14001306c:	outs   dx,BYTE PTR gs:[rsi]
   14001306e:	fs ins BYTE PTR es:[rdi],dx
   140013070:	jns    0x1400130c0
   140013072:	(bad)  
   140013073:	ins    DWORD PTR es:[rdi],dx
   140013074:	gs push rdi
   140013076:	push   rdi
   140013077:	push   rdi
   140013078:	(bad)  
   140013079:	(bad)  
   14001307a:	(bad)  
   14001307b:	(bad)  
   14001307c:	(bad)  
   14001307d:	(bad)  
   14001307e:	(bad)  
   14001307f:	call   QWORD PTR [rdx]
   140013081:	add    BYTE PTR [rdx+0x53],cl
   140013084:	(bad)
   140013089:	gs imul esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   140013092:	rex.WRX (bad) 
   140013094:	ins    DWORD PTR es:[rdi],dx
   140013095:	gs push rdi
   140013097:	push   rdi
   140013098:	enter  0x0,0x0
   14001309c:	(bad)  
   14001309d:	(bad)  
   14001309e:	(bad)  
   14001309f:	call   QWORD PTR [rcx]
   1400130a1:	add    BYTE PTR [rdi],dh
   1400130a3:	xor    BYTE PTR [rbx+0x74],dl
   1400130a6:	(bad)  
   1400130a7:	jb     0x14001311d
   1400130a9:	push   rdi
   1400130aa:	outs   dx,DWORD PTR ds:[rsi]
   1400130ab:	jb     0x140013118
   1400130ad:	jae    0x14001311f
   1400130af:	(bad)  
   1400130b0:	movsxd esp,DWORD PTR [rbp+0x45]
   1400130b3:	js     0x1400130e7
   1400130b5:	push   rdi
   1400130b6:	push   rdi
   1400130b7:	push   rdi
   1400130b8:	(bad)  
   1400130b9:	(bad)  
   1400130ba:	(bad)  
   1400130bb:	(bad)  
   1400130bc:	(bad)  
   1400130bd:	(bad)  
   1400130be:	(bad)  
   1400130bf:	call   FWORD PTR [rcx]
   1400130c1:	add    BYTE PTR [rax+0x74736254],bh
   1400130c7:	jb     0x14001310e
   1400130c9:	jbe    0x140013130
   1400130cb:	outs   dx,BYTE PTR ds:[rsi]
   1400130cc:	je     0x14001311a
   1400130ce:	outs   dx,DWORD PTR ds:[rsi]
   1400130cf:	addr32 push rbp
   1400130d1:	jo     0x14001313f
   1400130d3:	outs   dx,DWORD PTR ds:[rsi]
   1400130d4:	(bad)  
   1400130d5:	fs rex.B
   1400130d7:	fs fs jb 0x140013140
   1400130db:	jae    0x140013150
   1400130dd:	push   rdi
   1400130de:	push   rdi
   1400130df:	push   rdi
   1400130e0:	(bad)  
   1400130e1:	(bad)  
   1400130e2:	(bad)  
   1400130e3:	(bad)  
   1400130e4:	(bad)  
   1400130e5:	(bad)  
   1400130e6:	(bad)  
   1400130e7:	dec    DWORD PTR [rip+0x63d89100]        # 0x1a3d9c1ed
   1400130ed:	outs   dx,DWORD PTR ds:[rsi]
   1400130ee:	jb     0x140013162
   1400130f0:	gs ins BYTE PTR es:[rdi],dx
   1400130f2:	(bad)  
   1400130f3:	je     0x14001315e
   1400130f5:	outs   dx,DWORD PTR ds:[rsi]
   1400130f6:	outs   dx,BYTE PTR ds:[rsi]
   1400130f7:	rex.WB
   1400130f8:	fs push rdi
   1400130fa:	push   rdi
   1400130fb:	push   rdi
   1400130fc:	enter  0x0,0x0
   140013100:	(bad)  
   140013101:	add    DWORD PTR [rax],eax
   140013103:	add    BYTE PTR [rsi],cl
   140013105:	add    bh,bh
   140013107:	icebp  
   140013108:	rex.RXB
   140013109:	gs je  0x14001314f
   14001310c:	ins    BYTE PTR es:[rdi],dx
   14001310d:	(bad)  
   14001310e:	imul   ebp,DWORD PTR [rbp+0x73],0x656b6f54
   140013115:	outs   dx,BYTE PTR ds:[rsi]
   140013116:	push   rdi
   140013117:	push   rdi
   140013118:	(bad)  
   140013119:	(bad)  
   14001311a:	(bad)  
   14001311b:	(bad)  
   14001311c:	(bad)  
   14001311d:	(bad)  
   14001311e:	(bad)  
   14001311f:	dec    DWORD PTR [rax]
   140013121:	add    BYTE PTR [rbx],bl
   140013123:	(bad)  
   140013124:	(bad)
   140013129:	imul   ebp,DWORD PTR [rsi+0x74],0xffffffff
   140013130:	(bad)  
   140013131:	(bad)  
   140013132:	(bad)  
   140013133:	call   QWORD PTR [rcx]
   140013135:	add    dl,ah
   140013137:	movabs ds:0x636e457274736270,eax
   140013140:	outs   dx,DWORD PTR ds:[rsi]
   140013141:	fs gs fs push rsp
   140013145:	outs   dx,DWORD PTR ds:[rsi]
   140013146:	imul   esp,DWORD PTR [rbp+0x6e],0x57
   14001314a:	push   rdi
   14001314b:	push   rdi
   14001314c:	hlt    
   14001314d:	add    DWORD PTR [rax],eax
   14001314f:	add    BYTE PTR [rax+0x2],bh
   140013152:	add    BYTE PTR [rax],al
   140013154:	(bad)  
   140013155:	cmp    BYTE PTR [rdx+0x676174c9],bl
   14001315b:	push   rdx
   14001315c:	rex.RB
   14001315d:	rex.XB push r12
   14001315f:	push   rdi
   140013160:	hlt    
   140013161:	add    DWORD PTR [rax],eax
   140013163:	add    bh,bh
   140013165:	(bad)  
   140013166:	(bad)  
   140013167:	inc    DWORD PTR [rax+rdx*1]
   14001316a:	in     eax,0x7b
   14001316c:	ins    BYTE PTR es:[rdi],dx
   14001316d:	gs data16 je 0x140013165
   140013171:	add    DWORD PTR [rax],eax
   140013173:	add    bh,bh
   140013175:	(bad)  
   140013176:	(bad)  
   140013177:	inc    DWORD PTR [rbx]
   140013179:	adc    BYTE PTR [rip+0x706f74da],dh        # 0x1b070a659
   14001317f:	push   rdi
   140013180:	hlt    
   140013181:	add    DWORD PTR [rax],eax
   140013183:	add    bh,bh
   140013185:	(bad)  
   140013186:	(bad)  
   140013187:	inc    DWORD PTR [rip+0x72150d10]        # 0x1b2163e9d
   14001318d:	imul   esp,DWORD PTR [rdi+0x68],0x57575774
   140013194:	hlt    
   140013195:	add    DWORD PTR [rax],eax
   140013197:	add    bh,bh
   140013199:	(bad)  
   14001319a:	(bad)  
   14001319b:	inc    DWORD PTR [rsi]
   14001319d:	adc    BYTE PTR [rax+0x7b],cl
   1400131a0:	(bad)  
   1400131a1:	outs   dx,DWORD PTR ds:[rsi]
   1400131a2:	je     0x140013218
   1400131a4:	outs   dx,DWORD PTR ds:[rsi]
   1400131a5:	ins    DWORD PTR es:[rdi],dx
   1400131a6:	push   rdi
   1400131a7:	push   rdi
   1400131a8:	add    BYTE PTR fs:[rax],al
   1400131ab:	add    bh,bh
   1400131ad:	(bad)  
   1400131ae:	(bad)  
   1400131af:	dec    DWORD PTR [rdi]
   1400131b1:	add    BYTE PTR [rbx+0x4f],dl
   1400131b4:	rex.RXB
   1400131b5:	gs je  0x1400131fb
   1400131b8:	ins    BYTE PTR es:[rdi],dx
   1400131b9:	(bad)  
   1400131ba:	imul   ebp,DWORD PTR [rbp+0x73],0x656b6f54
   1400131c1:	outs   dx,BYTE PTR ds:[rsi]
   1400131c2:	xor    dl,BYTE PTR [rdi-0x1]
   1400131c5:	(bad)  
   1400131c6:	(bad)  
   1400131c7:	dec    DWORD PTR [rcx+rax*1+0x0]
   1400131cb:	add    BYTE PTR [rbx],cl
   1400131cd:	add    ah,ah
   1400131cf:	movsxd rbp,DWORD PTR [rcx+riz*2+0x69]
   1400131d4:	ins    DWORD PTR es:[rdi],dx
   1400131d5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400131d7:	outs   dx,DWORD PTR ds:[rsi]
   1400131d8:	imul   ebp,DWORD PTR [rcx+0x65],0x57
   1400131dc:	(bad)  
   1400131dd:	(bad)  
   1400131de:	(bad)  
   1400131df:	(bad)  
   1400131e0:	cmp    al,0x3
   1400131e2:	add    BYTE PTR [rax],al
   1400131e4:	adc    BYTE PTR [rax],al
   1400131e6:	cmp    eax,0x6e7768a1
   1400131eb:	fs rex.XB jb 0x140013254
   1400131ef:	fs push rbp
   1400131f1:	imul   edx,DWORD PTR [rax+0x61],0x746e6572
   1400131f8:	(bad)  
   1400131f9:	(bad)  
   1400131fa:	(bad)  
   1400131fb:	dec    esp
   1400131fd:	add    DWORD PTR [rax],eax
   1400131ff:	add    BYTE PTR [rax],dl
   140013201:	add    BYTE PTR [rax],ah
   140013203:	sbb    dh,BYTE PTR [rdx+0x65]
   140013206:	movsxd esi,DWORD PTR [rbx+rax*2+0x72]
   14001320a:	gs fs push rbp
   14001320d:	imul   edx,DWORD PTR [rax+0x61],0x746e6572
   140013214:	add    BYTE PTR ss:[rbp+0x69],cl
   140013218:	movsxd esi,DWORD PTR [rdx+0x6f]
   14001321b:	jae    0x14001328c
   14001321d:	data16 je 0x140013240
   140013220:	push   rsp
   140013221:	gs jb  0x140013291
   140013224:	imul   ebp,DWORD PTR [rsi+0x61],0x6553206c
   14001322b:	jb     0x1400132a3
   14001322d:	imul   esp,DWORD PTR [rbx+0x65],0x65572073
   140013234:	(bad)  
   140013235:	and    BYTE PTR [rax+0x72],dl
   140013238:	outs   dx,DWORD PTR ds:[rsi]
   140013239:	js     0x1400132b4
   14001323b:	and    BYTE PTR [rcx],dh
   14001323d:	xor    BYTE PTR cs:[rax],ah
   140013240:	push   rsp
   140013241:	jns    0x1400132b3
   140013243:	and    BYTE PTR gs:[rcx+rbp*2+0x62],cl
   140013248:	jb     0x1400132ab
   14001324a:	jb     0x1400132c5
   14001324c:	adc    al,BYTE PTR [rax]
   14001324e:	rex.WRB push r11
   140013250:	push   rsp
   140013251:	push   rbx
   140013252:	push   rdi
   140013253:	gs (bad) 
   140013255:	push   rax
   140013256:	jb     0x1400132c7
   140013258:	js     0x1400132d3
   14001325a:	and    BYTE PTR [rbx+0x6c],al
   14001325d:	(bad)  
   14001325e:	jae    0x1400132d3
   140013260:	sbb    BYTE PTR [rax],al
   140013262:	rex.WB
   140013263:	rex.WRB push r11
   140013265:	push   rsp
   140013266:	push   rbx
   140013267:	push   rdi
   140013268:	gs (bad) 
   14001326a:	push   rax
   14001326b:	jb     0x1400132dc
   14001326d:	js     0x1400132e8
   14001326f:	xor    al,0x20
   140013271:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140013273:	je     0x1400132da
   140013275:	jb     0x1400132dd
   140013277:	(bad)  
   140013278:	movsxd esp,DWORD PTR [rbp+0x57]
   14001327b:	push   rdi
   14001327c:	sbb    BYTE PTR [rax],al
   14001327e:	rex.WB
   14001327f:	rex.WRB push r11
   140013281:	push   rsp
   140013282:	push   rbx
   140013283:	push   rdi
   140013284:	gs (bad) 
   140013286:	push   rax
   140013287:	jb     0x1400132f8
   140013289:	js     0x140013304
   14001328b:	xor    esp,DWORD PTR [rax]
   14001328d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001328f:	je     0x1400132f6
   140013291:	jb     0x1400132f9
   140013293:	(bad)  
   140013294:	movsxd esp,DWORD PTR [rbp+0x57]
   140013297:	push   rdi
   140013298:	sbb    BYTE PTR [rax],al
   14001329a:	rex.WB
   14001329b:	rex.WRB push r11
   14001329d:	push   rsp
   14001329e:	push   rbx
   14001329f:	push   rdi
   1400132a0:	gs (bad) 
   1400132a2:	push   rax
   1400132a3:	jb     0x140013314
   1400132a5:	js     0x140013320
   1400132a7:	xor    ah,BYTE PTR [rax]
   1400132a9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400132ab:	je     0x140013312
   1400132ad:	jb     0x140013315
   1400132af:	(bad)  
   1400132b0:	movsxd esp,DWORD PTR [rbp+0x57]
   1400132b3:	push   rdi
   1400132b4:	(bad)  
   1400132b5:	add    BYTE PTR [rcx+0x4d],cl
   1400132b8:	push   rbx
   1400132b9:	push   rsp
   1400132ba:	push   rbx
   1400132bb:	push   rdi
   1400132bc:	gs (bad) 
   1400132be:	push   rax
   1400132bf:	jb     0x140013330
   1400132c1:	js     0x14001333c
   1400132c3:	and    BYTE PTR [rcx+0x6e],cl
   1400132c6:	je     0x14001332d
   1400132c8:	jb     0x140013330
   1400132ca:	(bad)  
   1400132cb:	movsxd esp,DWORD PTR [rbp+0x57]
   1400132ce:	push   rdi
   1400132cf:	push   rdi
   1400132d0:	sbb    al,BYTE PTR [rax]
   1400132d2:	ins    DWORD PTR es:[rdi],dx
   1400132d3:	gs je  0x14001333e
   1400132d6:	outs   dx,DWORD PTR ds:[rsi]
   1400132d7:	and    BYTE PTR fs:[rcx+rbp*2+0x73],al
   1400132dc:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400132df:	outs   dx,BYTE PTR ds:[rsi]
   1400132e0:	movsxd esi,DWORD PTR gs:[rdi+rdx*2+0x6f]
   1400132e5:	jb     0x140013352
   1400132e7:	jae    0x140013359
   1400132e9:	(bad)  
   1400132ea:	movsxd esp,DWORD PTR [rbp+0x15]
   1400132ed:	add    BYTE PTR [rbp+0x65],ch
   1400132f0:	je     0x14001335a
   1400132f2:	outs   dx,DWORD PTR ds:[rsi]
   1400132f3:	and    BYTE PTR fs:[rbx+0x74],dl
   1400132f7:	(bad)  
   1400132f8:	jb     0x14001336e
   1400132fa:	push   rdi
   1400132fb:	outs   dx,DWORD PTR ds:[rsi]
   1400132fc:	jb     0x140013369
   1400132fe:	jae    0x140013370
   140013300:	(bad)  
   140013301:	movsxd esp,DWORD PTR [rbp+0x57]
   140013304:	and    eax,0x74656d00
   140013309:	push   0x4920646f
   14001330e:	jae    0x140013367
   140013310:	outs   dx,DWORD PTR ds:[rsi]
   140013311:	jb     0x14001337e
   140013313:	jae    0x140013385
   140013315:	(bad)  
   140013316:	movsxd esp,DWORD PTR [rbp+0x43]
   140013319:	jb     0x140013380
   14001331b:	fs outs dx,BYTE PTR gs:[rsi]
   14001331e:	je     0x140013389
   140013320:	(bad)  
   140013321:	ins    BYTE PTR es:[rdi],dx
   140013322:	push   rbx
   140013323:	jo     0x14001338a
   140013325:	movsxd ebp,DWORD PTR [rcx+0x66]
   140013328:	imul   esp,DWORD PTR [rbp+0x64],0x6d001c57
   14001332f:	gs je  0x14001339a
   140013332:	outs   dx,DWORD PTR ds:[rsi]
   140013333:	and    BYTE PTR fs:[rcx+0x73],cl
   140013337:	push   rdi
   140013338:	outs   dx,DWORD PTR ds:[rsi]
   140013339:	jb     0x1400133a6
   14001333b:	jae    0x1400133ad
   14001333d:	(bad)  
   14001333e:	movsxd esp,DWORD PTR [rbp+0x53]
   140013341:	push   rbx
   140013342:	rex.WRXB
   140013343:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140013345:	(bad)  
   140013346:	(bad)  
   140013347:	ins    BYTE PTR es:[rdi],dx
   140013348:	gs fs push rdi
   14001334b:	push   rdi
   14001334c:	(bad)  
   14001334d:	add    BYTE PTR [rbp+0x65],ch
   140013350:	je     0x1400133ba
   140013352:	outs   dx,DWORD PTR ds:[rsi]
   140013353:	and    BYTE PTR fs:[rbx+0x6c],al
   140013357:	gs (bad) 
   140013359:	jb     0x1400133b2
   14001335b:	outs   dx,DWORD PTR ds:[rsi]
   14001335c:	jb     0x1400133c9
   14001335e:	jae    0x1400133d0
   140013360:	(bad)  
   140013361:	movsxd esp,DWORD PTR [rbp+0x43]
   140013364:	jb     0x1400133cb
   140013366:	fs outs dx,BYTE PTR gs:[rsi]
   140013369:	je     0x1400133d4
   14001336b:	(bad)  
   14001336c:	ins    BYTE PTR es:[rdi],dx
   14001336d:	push   rdi
   14001336e:	push   rdi
   14001336f:	push   rdi
   140013370:	(bad)  
   140013371:	add    BYTE PTR [rbp+0x65],ch
   140013374:	je     0x1400133de
   140013376:	outs   dx,DWORD PTR ds:[rsi]
   140013377:	and    BYTE PTR fs:[rdi+0x6e],cl
   14001337b:	rex.B jne 0x1400133f2
   14001337e:	push   0x69746e65
   140013383:	movsxd esp,DWORD PTR [rcx+0x74]
   140013386:	gs adc eax,DWORD PTR fs:[rax]
   14001338a:	ins    DWORD PTR es:[rdi],dx
   14001338b:	gs je  0x1400133f6
   14001338e:	outs   dx,DWORD PTR ds:[rsi]
   14001338f:	and    BYTE PTR fs:[rdi+0x65],al
   140013393:	je     0x1400133e5
   140013395:	jb     0x140013406
   140013397:	movsxd esp,DWORD PTR [rbp+0x73]
   14001339a:	jae    0x1400133e5
   14001339c:	fs push rdi
   14001339e:	push   rdi
   14001339f:	push   rdi
   1400133a0:	sbb    eax,0x74656d00
   1400133a5:	push   0x5320646f
   1400133aa:	je     0x14001340d
   1400133ac:	jb     0x140013422
   1400133ae:	push   rdx
   1400133af:	gs ins DWORD PTR es:[rdi],dx
   1400133b1:	outs   dx,DWORD PTR ds:[rsi]
   1400133b2:	je     0x140013419
   1400133b4:	rex.B jo 0x140013427
   1400133b7:	ins    BYTE PTR es:[rdi],dx
   1400133b8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400133bf:	push   rdi
   1400133c0:	sbb    DWORD PTR [rax],eax
   1400133c2:	ins    DWORD PTR es:[rdi],dx
   1400133c3:	gs je  0x14001342e
   1400133c6:	outs   dx,DWORD PTR ds:[rsi]
   1400133c7:	and    BYTE PTR fs:[rbx+0x74],dl
   1400133cb:	(bad)  
   1400133cc:	jb     0x140013442
   1400133ce:	push   rdx
   1400133cf:	gs ins DWORD PTR es:[rdi],dx
   1400133d1:	outs   dx,DWORD PTR ds:[rsi]
   1400133d2:	je     0x140013439
   1400133d4:	rex.R
   1400133d5:	gs jae 0x140013443
   1400133d8:	je     0x140013449
   1400133da:	jo     0x140013433
   1400133dc:	(bad)  
   1400133dd:	add    BYTE PTR [rbp+0x65],ch
   1400133e0:	je     0x14001344a
   1400133e2:	outs   dx,DWORD PTR ds:[rsi]
   1400133e3:	and    BYTE PTR fs:[rbx+0x74],dl
   1400133e7:	(bad)  
   1400133e8:	jb     0x14001345e
   1400133ea:	push   rdi
   1400133eb:	outs   dx,DWORD PTR ds:[rsi]
   1400133ec:	jb     0x140013459
   1400133ee:	jae    0x140013460
   1400133f0:	(bad)  
   1400133f1:	movsxd esp,DWORD PTR [rbp+0x45]
   1400133f4:	js     0x14001344d
   1400133f6:	push   rdi
   1400133f7:	push   rdi
   1400133f8:	sbb    BYTE PTR [rax],al
   1400133fa:	ins    DWORD PTR es:[rdi],dx
   1400133fb:	gs je  0x140013466
   1400133fe:	outs   dx,DWORD PTR ds:[rsi]
   1400133ff:	and    BYTE PTR fs:[rbx+0x74],dl
   140013403:	(bad)  
   140013404:	jb     0x14001347a
   140013406:	push   rdi
   140013407:	outs   dx,DWORD PTR ds:[rsi]
   140013408:	jb     0x140013475
   14001340a:	jae    0x14001347c
   14001340c:	(bad)  
   14001340d:	movsxd esp,DWORD PTR [rbp+0x45]
   140013410:	js     0x140013444
   140013412:	push   rdi
   140013413:	push   rdi
   140013414:	adc    eax,0x74656d00
   140013419:	push   0x4720646f
   14001341e:	gs je  0x140013464
   140013421:	ins    BYTE PTR es:[rdi],dx
   140013422:	(bad)  
   140013423:	imul   ebp,DWORD PTR [rbp+0x73],0x656b6f54
   14001342a:	outs   dx,BYTE PTR ds:[rsi]
   14001342b:	push   rdi
   14001342c:	(bad)  
   14001342d:	add    BYTE PTR [rbp+0x65],ch
   140013430:	je     0x14001349a
   140013432:	outs   dx,DWORD PTR ds:[rsi]
   140013433:	and    BYTE PTR fs:[rdi+0x65],al
   140013437:	je     0x14001347c
   140013439:	ins    BYTE PTR es:[rdi],dx
   14001343a:	(bad)  
   14001343b:	imul   ebp,DWORD PTR [rbp+0x73],0x656b6f54
   140013442:	outs   dx,BYTE PTR ds:[rsi]
   140013443:	xor    bl,BYTE PTR [rdx]
   140013445:	add    BYTE PTR [rbx],cl
   140013447:	rex or eax,DWORD PTR [rax]
   14001344a:	or     eax,DWORD PTR [rax+0x4013001a]
   140013450:	adc    eax,DWORD PTR [rax]
   140013452:	adc    eax,DWORD PTR [rax+0x7fff001d]
   140013458:	or     eax,0x1a000000
   14001345d:	add    BYTE PTR [rax],cl
   14001345f:	or     BYTE PTR [rax],al
   140013462:	or     BYTE PTR [rax+0x7fff001d],al
   140013468:	hlt    
   140013469:	add    DWORD PTR [rax],eax
   14001346b:	add    BYTE PTR [rax+rax*1+0x0],dh
   14001346f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140013473:	add    BYTE PTR [rcx],bl
   140013475:	add    BYTE PTR [rcx],bl
   140013477:	add    BYTE PTR [rax],0x0
   14001347a:	add    BYTE PTR [rax],al
   14001347c:	cwde   
   14001347d:	add    BYTE PTR [rax+rax*1+0x4409],ch
   140013484:	(bad)  
   140013485:	add    BYTE PTR [rax],al
   140013487:	add    BYTE PTR [rax],al
   140013489:	add    BYTE PTR [rax],al
   14001348b:	add    BYTE PTR [rax],bl
   14001348d:	add    al,BYTE PTR [rax]
   14001348f:	add    BYTE PTR [rax],cl
   140013491:	add    BYTE PTR [rax],cl
   140013493:	cmp    ah,0x0
   140013496:	add    BYTE PTR [rax],al
   140013498:	add    DWORD PTR [rax],eax
   14001349a:	add    BYTE PTR [rax],al
   14001349c:	or     BYTE PTR [rax],al
   14001349e:	or     BYTE PTR [rax+0x114],al
   1400134a4:	add    DWORD PTR [rax],eax
   1400134a6:	add    BYTE PTR [rax],al
   1400134a8:	or     BYTE PTR [rax],al
   1400134aa:	or     BYTE PTR [rax+0x420],al
   1400134b0:	add    DWORD PTR [rax],eax
   1400134b2:	add    BYTE PTR [rax],al
   1400134b4:	adc    eax,DWORD PTR [rax]
   1400134b6:	adc    eax,DWORD PTR [rax+0x4cc]
   1400134bc:	add    DWORD PTR [rax],eax
   1400134be:	add    BYTE PTR [rax],al
   1400134c0:	adc    eax,DWORD PTR [rax]
   1400134c2:	adc    eax,DWORD PTR [rax+0x4e4]
   1400134c8:	add    DWORD PTR [rax],eax
   1400134ca:	add    BYTE PTR [rax],al
   1400134cc:	and    BYTE PTR [rax],al
   1400134ce:	add    BYTE PTR [rax],al
   1400134d0:	add    BYTE PTR [rip+0x10000],al        # 0x1400234d6
   1400134d6:	add    BYTE PTR [rax],al
   1400134d8:	sbb    BYTE PTR [rax],al
   1400134da:	add    BYTE PTR [rax],al
   1400134dc:	xor    al,0x4
   1400134de:	add    BYTE PTR [rax],al
   1400134e0:	or     al,BYTE PTR [rax]
   1400134e2:	add    BYTE PTR [rax],al
   1400134e4:	or     eax,0xb0000000
   1400134e9:	add    al,0x0
   1400134eb:	add    BYTE PTR [rax],al
   1400134ed:	add    BYTE PTR [rax],al
   1400134ef:	add    al,ch
   1400134f1:	add    BYTE PTR [rax],al
   1400134f3:	add    BYTE PTR [rax+0x19000000],bl
   1400134f9:	add    BYTE PTR [rcx],bl
   1400134fb:	add    BYTE PTR [rax],0x0
   1400134fe:	add    BYTE PTR [rax],al
   140013500:	mov    BYTE PTR [rax],al
   140013502:	(bad)  
   140013503:	add    BYTE PTR [rcx],cl
   140013505:	add    al,0x0
   140013507:	add    BYTE PTR [rdx],cl
   140013509:	add    BYTE PTR [rax],al
   14001350b:	add    BYTE PTR [rax],al
   14001350d:	add    BYTE PTR [rax],al
   14001350f:	add    ah,ah
   140013511:	add    DWORD PTR [rax],eax
   140013513:	add    BYTE PTR [rax],cl
   140013515:	add    BYTE PTR [rax],cl
   140013517:	add    ah,0x0
   14001351a:	add    BYTE PTR [rax],al
   14001351c:	add    DWORD PTR [rax],eax
   14001351e:	add    BYTE PTR [rax],al
   140013520:	or     BYTE PTR [rax],al
   140013522:	or     BYTE PTR [rax+0x358],al
   140013528:	add    DWORD PTR [rax],eax
   14001352a:	add    BYTE PTR [rax],al
   14001352c:	or     BYTE PTR [rax],al
   14001352e:	or     BYTE PTR [rax+0x380],al
   140013534:	add    DWORD PTR [rax],eax
   140013536:	add    BYTE PTR [rax],al
   140013538:	or     BYTE PTR [rax],al
   14001353a:	or     BYTE PTR [rax+0xfc],al
   140013540:	add    DWORD PTR [rax],eax
   140013542:	add    BYTE PTR [rax],al
   140013544:	or     BYTE PTR [rax],al
   140013546:	or     BYTE PTR [rax+0x114],al
   14001354c:	add    DWORD PTR [rax],eax
   14001354e:	add    BYTE PTR [rax],al
   140013550:	or     BYTE PTR [rax],al
   140013552:	or     BYTE PTR [rax+0x12c],al
   140013558:	add    DWORD PTR [rax],eax
   14001355a:	add    BYTE PTR [rax],al
   14001355c:	add    eax,DWORD PTR [rax]
   14001355e:	add    eax,DWORD PTR [rax+0x14c]
   140013564:	add    DWORD PTR [rax],eax
   140013566:	add    BYTE PTR [rax],al
   140013568:	add    eax,DWORD PTR [rax]
   14001356a:	add    eax,DWORD PTR [rax+0x160]
   140013570:	add    DWORD PTR [rax],eax
   140013572:	add    BYTE PTR [rax],al
   140013574:	or     BYTE PTR [rax],al
   140013576:	or     BYTE PTR [rax+0x3c0],al
   14001357c:	add    DWORD PTR [rax],eax
   14001357e:	add    BYTE PTR [rax],al
   140013580:	adc    BYTE PTR [rax],al
   140013582:	add    BYTE PTR [rax],al
   140013584:	call   0x14101358c
   140013589:	add    BYTE PTR [rax],al
   14001358b:	add    BYTE PTR [rax+0x0],dl
   14001358e:	add    DWORD PTR [rax],eax
   140013590:	sbb    DWORD PTR [rax],eax
   140013592:	sbb    DWORD PTR [rax+0x0],eax
   140013598:	nop
   140013599:	add    BYTE PTR [rax+rax*1+0x9],bh
   14001359d:	add    DWORD PTR [rax],r8d
   1400135a0:	add    al,0x0
   1400135a2:	add    BYTE PTR [rax],al
   1400135a4:	add    BYTE PTR [rax],al
   1400135a6:	add    BYTE PTR [rax],al
   1400135a8:	add    BYTE PTR [rdx],al
   1400135aa:	add    BYTE PTR [rax],al
   1400135ac:	or     BYTE PTR [rax],al
   1400135ae:	or     BYTE PTR [rax+0xfc],al
   1400135b4:	add    DWORD PTR [rax],eax
   1400135b6:	add    BYTE PTR [rax],al
   1400135b8:	or     BYTE PTR [rax],al
   1400135ba:	or     BYTE PTR [rax+0x114],al
   1400135c0:	add    DWORD PTR [rax],eax
   1400135c2:	add    BYTE PTR [rax],al
   1400135c4:	or     BYTE PTR [rax],al
   1400135c6:	or     BYTE PTR [rax+0x420],al
   1400135cc:	add    DWORD PTR [rax],eax
   1400135ce:	add    BYTE PTR [rax],al
   1400135d0:	sbb    BYTE PTR [rax],al
   1400135d2:	add    BYTE PTR [rax],al
   1400135d4:	xor    al,0x4
   1400135d6:	add    BYTE PTR [rax],al
   1400135d8:	or     al,BYTE PTR [rax]
   1400135da:	add    BYTE PTR [rax],al
   1400135dc:	or     eax,DWORD PTR [rax]
   1400135de:	add    BYTE PTR [rax],al
   1400135e0:	or     al,0x0
   1400135e2:	add    BYTE PTR [rax],al
   1400135e4:	movabs al,ds:0x404000003
   1400135ed:	add    BYTE PTR [rax],al
   1400135ef:	add    BYTE PTR [rax-0x80000000],bl
   1400135f5:	add    BYTE PTR [rax],al
   1400135f7:	add    BYTE PTR [rax+0x19000000],al
   1400135fd:	add    BYTE PTR [rcx],bl
   1400135ff:	add    BYTE PTR [rax],0x0
   140013602:	add    BYTE PTR [rax],al
   140013604:	add    BYTE PTR [rax],0xb4
   140013607:	add    BYTE PTR [rcx],cl
   140013609:	add    al,0x0
   14001360b:	add    BYTE PTR [rax],cl
   14001360d:	add    BYTE PTR [rax],al
   14001360f:	add    BYTE PTR [rax],al
   140013611:	add    BYTE PTR [rax],al
   140013613:	add    al,cl
   140013615:	add    DWORD PTR [rax],eax
   140013617:	add    BYTE PTR [rax],cl
   140013619:	add    BYTE PTR [rax],cl
   14001361b:	add    ah,0x0
   14001361e:	add    BYTE PTR [rax],al
   140013620:	add    DWORD PTR [rax],eax
   140013622:	add    BYTE PTR [rax],al
   140013624:	or     BYTE PTR [rax],al
   140013626:	or     BYTE PTR [rax+0x358],al
   14001362c:	add    DWORD PTR [rax],eax
   14001362e:	add    BYTE PTR [rax],al
   140013630:	or     BYTE PTR [rax],al
   140013632:	or     BYTE PTR [rax+0x380],al
   140013638:	add    DWORD PTR [rax],eax
   14001363a:	add    BYTE PTR [rax],al
   14001363c:	or     BYTE PTR [rax],al
   14001363e:	or     BYTE PTR [rax+0xfc],al
   140013644:	add    DWORD PTR [rax],eax
   140013646:	add    BYTE PTR [rax],al
   140013648:	or     BYTE PTR [rax],al
   14001364a:	or     BYTE PTR [rax+0x114],al
   140013650:	add    DWORD PTR [rax],eax
   140013652:	add    BYTE PTR [rax],al
   140013654:	or     BYTE PTR [rax],al
   140013656:	or     BYTE PTR [rax+0x12c],al
   14001365c:	add    DWORD PTR [rax],eax
   14001365e:	add    BYTE PTR [rax],al
   140013660:	add    eax,DWORD PTR [rax]
   140013662:	add    eax,DWORD PTR [rax+0x14c]
   140013668:	add    DWORD PTR [rax],eax
   14001366a:	add    BYTE PTR [rax],al
   14001366c:	add    eax,DWORD PTR [rax]
   14001366e:	add    eax,DWORD PTR [rax+0x160]
   140013674:	add    DWORD PTR [rax],eax
   140013676:	add    BYTE PTR [rax],al
   140013678:	or     al,BYTE PTR [rax]
   14001367a:	add    BYTE PTR [rax],al
   14001367c:	cmp    al,0x3
   14001367e:	add    BYTE PTR [rax],al
   140013680:	add    BYTE PTR [rax],al
   140013682:	add    BYTE PTR [rax],al
   140013684:	sbb    al,0x2
   140013686:	add    BYTE PTR [rax],al
   140013688:	sub    al,0x0
   14001368a:	add    BYTE PTR [rax],al
   14001368c:	sbb    DWORD PTR [rax],eax
   14001368e:	sbb    DWORD PTR [rax+0x0],eax
   140013694:	cmp    BYTE PTR [rax],al
   140013696:	add    BYTE PTR [rcx],r9b
   140013699:	add    al,0x0
   14001369b:	add    BYTE PTR [rcx],al
   14001369d:	add    BYTE PTR [rax],al
   14001369f:	add    BYTE PTR [rax],al
   1400136a1:	add    BYTE PTR [rax],al
   1400136a3:	add    BYTE PTR [rax+rax*1+0x80000],bh
   1400136aa:	or     BYTE PTR [rax+0xc4],al
   1400136b0:	add    DWORD PTR [rax],eax
   1400136b2:	add    BYTE PTR [rax],al
   1400136b4:	push   0x19000100
   1400136b9:	add    BYTE PTR [rcx],bl
   1400136bb:	add    BYTE PTR [rax],0x0
   1400136be:	add    BYTE PTR [rax],al
   1400136c0:	add    BYTE PTR [rax+rax*1+0x10409],dl
   1400136c8:	(bad)  
   1400136c9:	add    BYTE PTR [rax],al
   1400136cb:	add    BYTE PTR [rax],al
   1400136cd:	add    BYTE PTR [rax],al
   1400136cf:	add    al,bl
   1400136d1:	add    BYTE PTR [rax],al
   1400136d3:	add    BYTE PTR [rax],cl
   1400136d5:	add    BYTE PTR [rax],cl
   1400136d7:	add    ah,0x0
   1400136da:	add    BYTE PTR [rax],al
   1400136dc:	add    DWORD PTR [rax],eax
   1400136de:	add    BYTE PTR [rax],al
   1400136e0:	or     BYTE PTR [rax],al
   1400136e2:	or     BYTE PTR [rax+0xfc],al
   1400136e8:	add    DWORD PTR [rax],eax
   1400136ea:	add    BYTE PTR [rax],al
   1400136ec:	or     BYTE PTR [rax],al
   1400136ee:	or     BYTE PTR [rax+0x114],al
   1400136f4:	add    DWORD PTR [rax],eax
   1400136f6:	add    BYTE PTR [rax],al
   1400136f8:	or     BYTE PTR [rax],al
   1400136fa:	or     BYTE PTR [rax+0x12c],al
   140013700:	add    DWORD PTR [rax],eax
   140013702:	add    BYTE PTR [rax],al
   140013704:	add    eax,DWORD PTR [rax]
   140013706:	add    eax,DWORD PTR [rax+0x14c]
   14001370c:	add    DWORD PTR [rax],eax
   14001370e:	add    BYTE PTR [rax],al
   140013710:	add    eax,DWORD PTR [rax]
   140013712:	add    eax,DWORD PTR [rax+0x160]
   140013718:	add    DWORD PTR [rax],eax
   14001371a:	add    BYTE PTR [rax],al
   14001371c:	add    BYTE PTR [rdx],r8b
   14001371f:	add    BYTE PTR [rcx],bl
   140013721:	add    BYTE PTR [rcx],bl
   140013723:	add    BYTE PTR [rax],0x0
   140013726:	add    BYTE PTR [rax],al
   140013728:	rex.W add BYTE PTR [rax+rax*1+0x9],bpl
   14001372d:	add    r8b,BYTE PTR [rax]
   140013730:	add    eax,DWORD PTR [rax]
   140013732:	add    BYTE PTR [rax],al
   140013734:	add    BYTE PTR [rax],al
   140013736:	add    BYTE PTR [rax],al
   140013738:	lock add BYTE PTR [rax],al
   14001373b:	add    BYTE PTR [rax],cl
   14001373d:	add    BYTE PTR [rax],cl
   14001373f:	add    ah,0x0
   140013742:	add    BYTE PTR [rax],al
   140013744:	add    DWORD PTR [rax],eax
   140013746:	add    BYTE PTR [rax],al
   140013748:	or     eax,DWORD PTR [rax]
   14001374a:	or     eax,DWORD PTR [rax+0x1a0]
   140013750:	add    DWORD PTR [rax],eax
   140013752:	add    BYTE PTR [rax],al
   140013754:	add    BYTE PTR [rax],al
   140013756:	add    BYTE PTR [rax],al
   140013758:	int3   
   140013759:	add    DWORD PTR [rax],eax
   14001375b:	add    BYTE PTR [rdx],cl
   14001375d:	add    BYTE PTR [rax],al
   14001375f:	add    BYTE PTR [rax+rax*1],ch
   140013762:	add    eax,DWORD PTR [rax]
   140013764:	sbb    DWORD PTR [rax],eax
   140013766:	sbb    DWORD PTR [rax+0x0],eax
   14001376c:	push   rax
   14001376d:	add    BYTE PTR [rax+rax*1+0x9],cl
   140013771:	add    r8d,DWORD PTR [rax]
   140013774:	add    DWORD PTR [rax],eax
   140013776:	add    BYTE PTR [rax],al
   140013778:	add    BYTE PTR [rax],al
   14001377a:	add    BYTE PTR [rax],al
   14001377c:	sbb    BYTE PTR [rcx],al
   14001377e:	add    BYTE PTR [rax],al
   140013780:	add    BYTE PTR [rax],al
   140013782:	add    BYTE PTR [rax],al
   140013784:	or     BYTE PTR [rdx],al
   140013786:	add    BYTE PTR [rax],al
   140013788:	or     al,BYTE PTR [rax]
   14001378a:	add    BYTE PTR [rax],al
   14001378c:	sub    al,0x0
   14001378e:	add    al,0x0
   140013790:	sbb    DWORD PTR [rax],eax
   140013792:	sbb    DWORD PTR [rax+0x0],eax
   140013798:	pop    rax
   140013799:	add    BYTE PTR [rax+rax*1+0x9],al
   14001379d:	add    al,0x4
   14001379f:	add    BYTE PTR [rcx],al
   1400137a1:	add    BYTE PTR [rax],al
   1400137a3:	add    BYTE PTR [rax],al
   1400137a5:	add    BYTE PTR [rax],al
   1400137a7:	add    BYTE PTR [rax],bh
   1400137a9:	add    DWORD PTR [rax],eax
   1400137ab:	add    BYTE PTR [rax],cl
   1400137ad:	add    BYTE PTR [rax],cl
   1400137af:	add    ah,0x0
   1400137b2:	add    BYTE PTR [rax],al
   1400137b4:	add    DWORD PTR [rax],eax
   1400137b6:	add    BYTE PTR [rax],al
   1400137b8:	cmp    BYTE PTR [rax],al
   1400137ba:	add    eax,0x19001900
   1400137bf:	add    BYTE PTR [rax],0x0
   1400137c2:	add    BYTE PTR [rax],al
   1400137c4:	(bad)  
   1400137c5:	add    BYTE PTR [rax+rax*1+0x9],dl
   1400137c9:	add    al,0x5
   1400137cb:	add    BYTE PTR [rdx],al
   1400137cd:	add    BYTE PTR [rax],al
   1400137cf:	add    BYTE PTR [rax],al
   1400137d1:	add    BYTE PTR [rax],al
   1400137d3:	add    BYTE PTR [rcx+rax*1+0x0],bl
   1400137d7:	add    BYTE PTR [rax],cl
   1400137d9:	add    BYTE PTR [rax],cl
   1400137db:	add    ah,0x0
   1400137de:	add    BYTE PTR [rax],al
   1400137e0:	add    DWORD PTR [rax],eax
   1400137e2:	add    BYTE PTR [rax],al
   1400137e4:	or     BYTE PTR [rax],al
   1400137e6:	or     BYTE PTR [rax+0xfc],al
   1400137ec:	add    DWORD PTR [rax],eax
   1400137ee:	add    BYTE PTR [rax],al
   1400137f0:	sub    al,0x0
   1400137f2:	(bad)  
   1400137f3:	add    BYTE PTR [rcx],bl
   1400137f5:	add    BYTE PTR [rcx],bl
   1400137f7:	add    BYTE PTR [rax],0x0
   1400137fa:	add    BYTE PTR [rax],al
   1400137fc:	push   0x9004c00
   140013801:	rex.R (bad) 
   140013803:	add    BYTE PTR [rcx],al
   140013805:	add    BYTE PTR [rax],al
   140013807:	add    BYTE PTR [rax],al
   140013809:	add    BYTE PTR [rax],al
   14001380b:	add    BYTE PTR [rcx+rax*1+0x0],dh
   14001380f:	add    BYTE PTR [rax],cl
   140013811:	add    BYTE PTR [rax],al
   140013813:	add    BYTE PTR [rax+0x2],bh
   140013816:	add    BYTE PTR [rax],al
   140013818:	or     al,BYTE PTR [rax]
   14001381a:	add    BYTE PTR [rax],al
   14001381c:	push   rax
   14001381d:	add    BYTE PTR [rdi],al
   14001381f:	add    BYTE PTR [rcx],bl
   140013821:	add    BYTE PTR [rcx],bl
   140013823:	add    BYTE PTR [rax],0x0
   140013826:	add    BYTE PTR [rax],al
   140013828:	jo     0x14001382a
   14001382a:	je     0x14001382c
   14001382c:	or     DWORD PTR [rdi+rax*1],eax
   14001382f:	add    BYTE PTR [rax+rax*1],al
   140013832:	add    BYTE PTR [rax],al
   140013834:	add    BYTE PTR [rax],al
   140013836:	add    BYTE PTR [rax],al
   140013838:	mov    WORD PTR [rcx],es
   14001383a:	add    BYTE PTR [rax],al
   14001383c:	or     BYTE PTR [rax],al
   14001383e:	or     BYTE PTR [rax+0x2b4],al
   140013844:	add    DWORD PTR [rax],eax
   140013846:	add    BYTE PTR [rax],al
   140013848:	or     BYTE PTR [rax],al
   14001384a:	or     BYTE PTR [rax+0x2d0],al
   140013850:	add    DWORD PTR [rax],eax
   140013852:	add    BYTE PTR [rax],al
   140013854:	or     BYTE PTR [rax],al
   140013856:	or     BYTE PTR [rax+0x2e8],al
   14001385c:	add    DWORD PTR [rax],eax
   14001385e:	add    BYTE PTR [rax],al
   140013860:	or     BYTE PTR [rax],al
   140013862:	or     BYTE PTR [rax+0xc4],al
   140013868:	add    DWORD PTR [rax],eax
   14001386a:	add    BYTE PTR [rax],al
   14001386c:	cmp    BYTE PTR [rax],al
   14001386e:	or     BYTE PTR [rax],al
   140013870:	sbb    DWORD PTR [rax],eax
   140013872:	sbb    DWORD PTR [rax+0x0],eax
   140013878:	js     0x14001387a
   14001387a:	push   rsp
   14001387b:	add    BYTE PTR [rcx],cl
   14001387d:	add    al,0x8
   14001387f:	add    BYTE PTR [rdx],al
   140013881:	add    BYTE PTR [rax],al
   140013883:	add    BYTE PTR [rax],al
   140013885:	add    BYTE PTR [rax],al
   140013887:	add    BYTE PTR [rcx+rax*1+0x80000],ch
   14001388e:	or     BYTE PTR [rax+0x324],al
   140013894:	add    DWORD PTR [rax],eax
   140013896:	add    BYTE PTR [rax],al
   140013898:	or     BYTE PTR [rax],al
   14001389a:	or     BYTE PTR [rax+0x2b4],al
   1400138a0:	add    DWORD PTR [rax],eax
   1400138a2:	add    BYTE PTR [rax],al
   1400138a4:	add    DWORD PTR [rax],eax
   1400138a6:	add    BYTE PTR [rax],al
   1400138a8:	add    al,BYTE PTR [rax]
   1400138aa:	add    BYTE PTR [rax],al
   1400138ac:	add    eax,DWORD PTR [rax]
   1400138ae:	add    BYTE PTR [rax],al
   1400138b0:	add    al,0x0
   1400138b2:	add    BYTE PTR [rax],al
   1400138b4:	add    eax,0x6000000
   1400138b9:	add    BYTE PTR [rax],al
   1400138bb:	add    BYTE PTR [rdi],al
   1400138bd:	add    BYTE PTR [rax],al
   1400138bf:	add    BYTE PTR [rax],cl
   1400138c1:	add    BYTE PTR [rax],al
   1400138c3:	add    BYTE PTR [rcx],cl
   1400138c5:	add    BYTE PTR [rax],al
   1400138c7:	add    BYTE PTR [rax+rax*1+0xe00000],ah
   1400138ce:	add    BYTE PTR [rax],al
   1400138d0:	je     0x1400138d3
   1400138d2:	add    BYTE PTR [rax],al
   1400138d4:	in     al,0x1
   1400138d6:	add    BYTE PTR [rax],al
   1400138d8:	and    BYTE PTR [rdx],al
   1400138da:	add    BYTE PTR [rax],al
   1400138dc:	add    r8b,BYTE PTR [rax]
   1400138df:	add    BYTE PTR [rax+0x2],ah
   1400138e2:	add    BYTE PTR [rax],al
   1400138e4:	nop
   1400138e5:	add    al,BYTE PTR [rax]
   1400138e7:	add    BYTE PTR [rbx+rax*1],al
   1400138ea:	add    BYTE PTR [rax],al
   1400138ec:	add    BYTE PTR [rax],al
   1400138ee:	add    BYTE PTR [rax],al
   1400138f0:	sub    al,0x0
   1400138f2:	add    BYTE PTR [rax],al
   1400138f4:	xchg   esp,eax
   1400138f5:	add    BYTE PTR [rax],al
   1400138f7:	add    al,bl
   1400138f9:	add    BYTE PTR [rax],al
   1400138fb:	add    BYTE PTR [rcx+rax*1],al
   1400138fe:	add    BYTE PTR [rax],al
   140013900:	xor    BYTE PTR [rcx],al
   140013902:	add    BYTE PTR [rax],al
   140013904:	push   0xffffffff94000001
   140013909:	add    DWORD PTR [rax],eax
   14001390b:	add    ah,ah
   14001390d:	add    DWORD PTR [rax],eax
   14001390f:	add    BYTE PTR [rax+0x0],dl
   140013912:	add    BYTE PTR [rax],al
   140013914:	adc    al,0x0
   140013916:	add    BYTE PTR [rax],al
   140013918:	add    eax,DWORD PTR [rax]
   14001391a:	add    eax,DWORD PTR [rax+0x0]
   140013920:	add    BYTE PTR [rax],al
   140013922:	and    al,0x0
   140013924:	add    BYTE PTR [rax],al
   140013926:	add    BYTE PTR [rax],al
   140013928:	adc    al,0x0
   14001392a:	add    DWORD PTR [rax],eax
   14001392c:	add    eax,DWORD PTR [rax]
   14001392e:	add    eax,DWORD PTR [rax+0x0]
   140013934:	add    BYTE PTR [rax],al
   140013936:	and    al,0x0
   140013938:	add    al,0x0
   14001393a:	add    BYTE PTR [rax],al
   14001393c:	adc    al,0x0
   14001393e:	add    al,BYTE PTR [rax]
   140013940:	add    eax,DWORD PTR [rax]
   140013942:	add    eax,DWORD PTR [rax+0x0]
   140013948:	add    BYTE PTR [rax],al
   14001394a:	and    al,0x0
   14001394c:	or     BYTE PTR [rax],al
   14001394e:	add    BYTE PTR [rax],al
   140013950:	adc    al,0x0
   140013952:	add    eax,DWORD PTR [rax]
   140013954:	add    eax,DWORD PTR [rax]
   140013956:	add    eax,DWORD PTR [rax+0x0]
   14001395c:	add    BYTE PTR [rax],al
   14001395e:	and    al,0x0
   140013960:	or     al,0x0
   140013962:	add    BYTE PTR [rax],al
   140013964:	add    BYTE PTR [rax],al
   140013966:	add    BYTE PTR [rax+0x1],al
   140013969:	add    BYTE PTR [rax],al
   14001396b:	add    al,BYTE PTR [rax]
   14001396e:	add    BYTE PTR [rax+0x3],al
   140013971:	add    BYTE PTR [rax],al
   140013973:	rex push 0x78000004
   140013979:	add    al,0x0
   14001397b:	add    BYTE PTR [rax-0x63fffffc],cl
   140013981:	add    al,0x0
   140013983:	add    BYTE PTR [rax],al
   140013985:	add    BYTE PTR [rax],al
   140013987:	add    BYTE PTR [rax+rax*1],dl
   14001398a:	add    BYTE PTR [rax],al
   14001398c:	sub    BYTE PTR [rax],al
   14001398e:	add    BYTE PTR [rax],al
   140013990:	cmp    al,0x0
   140013992:	add    BYTE PTR [rax],al
   140013994:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140014000 <.reloc>:
   140014000:	add    BYTE PTR [rax+0x1980000],dh
   140014006:	add    BYTE PTR [rax],al
   140014008:	sbb    BYTE PTR [rax+riz*1+0x38a430a4],ah
   14001400f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014010:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014012:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014014:	push   rax
   140014015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014016:	push   0xffffffff90a470a4
   14001401b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001401c:	cwde   
   14001401d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001401e:	movabs al,ds:0x70a6b8a6b0a6a8a6
   140014027:	test   al,0x78
   140014029:	test   al,0x80
   14001402b:	test   al,0x88
   14001402d:	test   al,0x90
   14001402f:	test   al,0x98
   140014031:	test   al,0xa0
   140014033:	test   al,0xa8
   140014035:	test   al,0xb0
   140014037:	test   al,0xb8
   140014039:	test   al,0xc0
   14001403b:	test   al,0xc8
   14001403d:	test   al,0xd0
   14001403f:	test   al,0xd8
   140014041:	test   al,0xe0
   140014043:	test   al,0xe8
   140014045:	test   al,0xf0
   140014047:	test   al,0xf8
   140014049:	test   al,0x0
   14001404b:	test   eax,0xa910a908
   140014050:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140014056:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14001405c:	test   rax,0xffffffffa958a950
   140014062:	(bad)  
   140014063:	test   eax,0xa970a968
   140014068:	js     0x140014013
   14001406a:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140014071:	test   eax,0xa9a8a9a0
   140014076:	mov    al,0xa9
   140014078:	mov    eax,0xc8a9c0a9
   14001407d:	test   eax,0xa9d8a9d0
   140014082:	loopne 0x14001402d
   140014084:	call   0x138ab3132
   140014089:	test   eax,0xaa08aa00
   14001408e:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140014094:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14001409a:	stos   BYTE PTR es:[rdi],al
   14001409c:	rex.W stos BYTE PTR es:[rdi],al
   14001409e:	push   rax
   14001409f:	stos   BYTE PTR es:[rdi],al
   1400140a0:	pop    rax
   1400140a1:	stos   BYTE PTR es:[rdi],al
   1400140a2:	(bad)  
   1400140a3:	stos   BYTE PTR es:[rdi],al
   1400140a4:	push   0x78aa70aa
   1400140a9:	stos   BYTE PTR es:[rdi],al
   1400140aa:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400140b1:	stos   BYTE PTR es:[rdi],al
   1400140b2:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400140bb:	stos   BYTE PTR es:[rdi],al
   1400140bc:	enter  0xd0aa,0xaa
   1400140c0:	fsubr  DWORD PTR [rdx-0x55175520]
   1400140c6:	lock stos BYTE PTR es:[rdi],al
   1400140c8:	clc    
   1400140c9:	stos   BYTE PTR es:[rdi],al
   1400140ca:	add    BYTE PTR [rbx-0x54ef54f8],ch
   1400140d0:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   1400140d6:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   1400140dc:	stos   QWORD PTR es:[rdi],rax
   1400140de:	push   rax
   1400140df:	stos   DWORD PTR es:[rdi],eax
   1400140e0:	pop    rax
   1400140e1:	stos   DWORD PTR es:[rdi],eax
   1400140e2:	(bad)  
   1400140e3:	stos   DWORD PTR es:[rdi],eax
   1400140e4:	push   0x78ab70ab
   1400140e9:	stos   DWORD PTR es:[rdi],eax
   1400140ea:	sub    BYTE PTR [rbx-0x546f5478],0x98
   1400140f1:	stos   DWORD PTR es:[rdi],eax
   1400140f2:	movabs al,ds:0xc0abb8abb0aba8ab
   1400140fb:	stos   DWORD PTR es:[rdi],eax
   1400140fc:	enter  0xd0ab,0xab
   140014100:	fsubr  DWORD PTR [rbx-0x54175420]
   140014106:	lock stos DWORD PTR es:[rdi],eax
   140014108:	clc    
   140014109:	stos   DWORD PTR es:[rdi],eax
   14001410a:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   140014111:	lods   al,BYTE PTR ds:[rsi]
   140014112:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   140014119:	lods   al,BYTE PTR ds:[rsi]
   14001411a:	lods   al,BYTE PTR ds:[rsi]
   14001411c:	rex.W lods al,BYTE PTR ds:[rsi]
   14001411e:	push   rax
   14001411f:	lods   al,BYTE PTR ds:[rsi]
   140014120:	pop    rax
   140014121:	lods   al,BYTE PTR ds:[rsi]
   140014122:	(bad)  
   140014123:	lods   al,BYTE PTR ds:[rsi]
   140014124:	push   0x78ac70ac
   140014129:	lods   al,BYTE PTR ds:[rsi]
   14001412a:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   140014132:	movabs al,ds:0xc0acb8acb0aca8ac
   14001413b:	lods   al,BYTE PTR ds:[rsi]
   14001413c:	enter  0xd0ac,0xac
   140014140:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   140014147:	lods   al,BYTE PTR ds:[rsi]
   140014148:	clc    
   140014149:	lods   al,BYTE PTR ds:[rsi]
   14001414a:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140014150:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140014156:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14001415c:	lods   rax,QWORD PTR ds:[rsi]
   14001415e:	push   rax
   14001415f:	lods   eax,DWORD PTR ds:[rsi]
   140014160:	pop    rax
   140014161:	lods   eax,DWORD PTR ds:[rsi]
   140014162:	(bad)  
   140014163:	lods   eax,DWORD PTR ds:[rsi]
   140014164:	push   0x78ad70ad
   140014169:	lods   eax,DWORD PTR ds:[rsi]
   14001416a:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140014171:	lods   eax,DWORD PTR ds:[rsi]
   140014172:	movabs al,ds:0xc0adb8adb0ada8ad
   14001417b:	lods   eax,DWORD PTR ds:[rsi]
   14001417c:	enter  0xd0ad,0xad
   140014180:	fsubr  DWORD PTR [rbp-0x52175220]
   140014186:	lock lods eax,DWORD PTR ds:[rsi]
   140014188:	clc    
   140014189:	lods   eax,DWORD PTR ds:[rsi]
   14001418a:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140014190:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140014196:	xor    BYTE PTR [rsi+0xc000],ch
   14001419c:	cmp    BYTE PTR [rax],al
   14001419e:	add    BYTE PTR [rax],al
   1400141a0:	and    BYTE PTR [rbx-0x5b675b80],0xb0
   1400141a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400141a8:	enter  0xe0a4,0xa4
   1400141ac:	add    BYTE PTR [rdi-0x58df58f0],ah
   1400141b2:	xor    BYTE PTR [rdi-0x58af58c0],ah
   1400141b8:	(bad)  
   1400141b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400141ba:	jo     0x140014163
   1400141bc:	and    BYTE PTR [rdi-0x585f5870],0xb0
   1400141c3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400141c4:	shl    BYTE PTR [rdi-0x51b75830],0x60
   1400141cb:	scas   al,BYTE PTR es:[rdi]
   1400141cc:	push   0xae70ae
   1400141d1:	rol    BYTE PTR [rax],1
   1400141d3:	add    BYTE PTR [rax+rax*1],cl
   1400141d6:	add    BYTE PTR [rax],al
   1400141d8:	shr    BYTE PTR [rdi-0x10000000],0x0
   1400141df:	add    BYTE PTR [rax+rax*1],dh
   1400141e2:	add    BYTE PTR [rax],al
   1400141e4:	add    BYTE PTR [rax-0x5fcf5ff0],ah
   1400141ea:	movabs al,ds:0xa070a058a050a048
   1400141f4:	js     0x140014196
   1400141f6:	and    BYTE PTR [rax-0x5f6f5f78],0xc0
   1400141fd:	movabs al,ds:0xa130a100a0f8a0c8
   140014206:	cmp    BYTE PTR [rcx-0x5e6f5e90],ah
   14001420c:	.byte 0xb8
   14001420d:	.byte 0xa1
	...
