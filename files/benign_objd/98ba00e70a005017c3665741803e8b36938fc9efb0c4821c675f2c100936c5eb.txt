
98ba00e70a005017c3665741803e8b36938fc9efb0c4821c675f2c100936c5eb.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x20
   14000100a:	lea    rax,[rip+0x4a557]        # 0x14004b568
   140001011:	mov    rdi,rcx
   140001014:	add    rcx,0x8
   140001018:	mov    QWORD PTR [rcx-0x8],rax
   14000101c:	mov    ebx,edx
   14000101e:	call   QWORD PTR [rip+0x4a034]        # 0x14004b058
   140001024:	test   bl,0x1
   140001027:	je     0x140001031
   140001029:	mov    rcx,rdi
   14000102c:	call   0x1400263fc
   140001031:	mov    rax,rdi
   140001034:	mov    rbx,QWORD PTR [rsp+0x30]
   140001039:	add    rsp,0x20
   14000103d:	pop    rdi
   14000103e:	ret    
   14000103f:	int3   
   140001040:	sub    rsp,0x28
   140001044:	test   edx,edx
   140001046:	jne    0x1400010df
   14000104c:	lea    rdx,[rip+0x4a535]        # 0x14004b588
   140001053:	call   QWORD PTR [rip+0x4a06f]        # 0x14004b0c8
   140001059:	mov    QWORD PTR [rip+0x71860],rax        # 0x1400728c0
   140001060:	test   rax,rax
   140001063:	je     0x140001078
   140001065:	mov    ecx,0x150e828
   14000106a:	call   rax
   14000106c:	test   rax,rax
   14000106f:	jne    0x140001080
   140001071:	mov    QWORD PTR [rip+0x71848],rax        # 0x1400728c0
   140001078:	or     eax,0xffffffff
   14000107b:	add    rsp,0x28
   14000107f:	ret    
   140001080:	call   rax
   140001082:	mov    r11d,eax
   140001085:	test   eax,eax
   140001087:	je     0x14000109a
   140001089:	xor    eax,eax
   14000108b:	mov    QWORD PTR [rip+0x7182e],rax        # 0x1400728c0
   140001092:	mov    eax,r11d
   140001095:	add    rsp,0x28
   140001099:	ret    
   14000109a:	mov    ecx,0x33c7358c
   14000109f:	call   QWORD PTR [rip+0x7181b]        # 0x1400728c0
   1400010a5:	mov    ecx,0x593e8644
   1400010aa:	mov    QWORD PTR [rip+0x7181f],rax        # 0x1400728d0
   1400010b1:	call   QWORD PTR [rip+0x71809]        # 0x1400728c0
   1400010b7:	cmp    QWORD PTR [rip+0x71811],0x0        # 0x1400728d0
   1400010bf:	mov    QWORD PTR [rip+0x71812],rax        # 0x1400728d8
   1400010c6:	je     0x1400010cd
   1400010c8:	test   rax,rax
   1400010cb:	je     0x140001101
   1400010cd:	xor    eax,eax
   1400010cf:	mov    QWORD PTR [rip+0x717fa],rax        # 0x1400728d0
   1400010d6:	mov    QWORD PTR [rip+0x717fb],rax        # 0x1400728d8
   1400010dd:	jmp    0x140001101
   1400010df:	cmp    edx,0x1
   1400010e2:	jne    0x140001101
   1400010e4:	lea    rdx,[rip+0x4a485]        # 0x14004b570
   1400010eb:	call   QWORD PTR [rip+0x49fd7]        # 0x14004b0c8
   1400010f1:	mov    QWORD PTR [rip+0x717d0],rax        # 0x1400728c8
   1400010f8:	test   rax,rax
   1400010fb:	je     0x140001078
   140001101:	lea    rcx,[rip+0x71828]        # 0x140072930
   140001108:	xor    edx,edx
   14000110a:	mov    r8d,0x3160
   140001110:	call   0x14002a910
   140001115:	xor    eax,eax
   140001117:	add    rsp,0x28
   14000111b:	ret    
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    QWORD PTR [rsp+0x8],rbx
   140001125:	mov    QWORD PTR [rsp+0x10],rbp
   14000112a:	mov    QWORD PTR [rsp+0x18],rsi
   14000112f:	push   rdi
   140001130:	sub    rsp,0x20
   140001134:	movsxd rsi,ecx
   140001137:	lea    rbp,[rip+0xffffffffffffeec2]        # 0x140000000
   14000113e:	cmp    QWORD PTR [rbp+rsi*8+0x728e0],0x0
   140001147:	mov    rdi,rsi
   14000114a:	jne    0x1400011a4
   14000114c:	lea    rax,[rip+0x4a46d]        # 0x14004b5c0
   140001153:	lea    rcx,[rip+0x4a446]        # 0x14004b5a0
   14000115a:	test   esi,esi
   14000115c:	cmove  rcx,rax
   140001160:	xor    edx,edx
   140001162:	call   0x1400019dc
   140001167:	mov    rbx,rax
   14000116a:	test   rax,rax
   14000116d:	jne    0x140001174
   14000116f:	lea    eax,[rbx-0x2]
   140001172:	jmp    0x1400011a6
   140001174:	mov    edx,esi
   140001176:	mov    rcx,rax
   140001179:	call   0x140001040
   14000117e:	mov    esi,eax
   140001180:	test   eax,eax
   140001182:	je     0x140001191
   140001184:	mov    rcx,rbx
   140001187:	call   QWORD PTR [rip+0x49f13]        # 0x14004b0a0
   14000118d:	mov    eax,esi
   14000118f:	jmp    0x1400011a6
   140001191:	mov    QWORD PTR [rbp+rdi*8+0x728e0],rbx
   140001199:	mov    DWORD PTR [rbp+rdi*4+0x72918],0x1
   1400011a4:	xor    eax,eax
   1400011a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011ab:	mov    rbp,QWORD PTR [rsp+0x38]
   1400011b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400011b5:	add    rsp,0x20
   1400011b9:	pop    rdi
   1400011ba:	ret    
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400011ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400011cf:	push   rdi
   1400011d0:	sub    rsp,0x20
   1400011d4:	lea    rbp,[rip+0xffffffffffffee25]        # 0x140000000
   1400011db:	movsxd rsi,ecx
   1400011de:	xor    ebx,ebx
   1400011e0:	cmp    BYTE PTR [rsi+rbp*1+0x72900],bl
   1400011e7:	je     0x14000120c
   1400011e9:	nop    DWORD PTR [rax+0x0]
   1400011f0:	mov    ecx,0x64
   1400011f5:	call   QWORD PTR [rip+0x49e7d]        # 0x14004b078
   1400011fb:	inc    ebx
   1400011fd:	cmp    ebx,0xa
   140001200:	jae    0x140001220
   140001202:	cmp    BYTE PTR [rsi+rbp*1+0x72900],0x0
   14000120a:	jne    0x1400011f0
   14000120c:	cmp    QWORD PTR [rbp+rsi*8+0x728e0],0x0
   140001215:	jne    0x140001225
   140001217:	mov    ecx,esi
   140001219:	call   0x140001120
   14000121e:	jmp    0x140001227
   140001220:	or     eax,0xffffffff
   140001223:	jmp    0x140001227
   140001225:	xor    eax,eax
   140001227:	mov    rbx,QWORD PTR [rsp+0x30]
   14000122c:	mov    rbp,QWORD PTR [rsp+0x38]
   140001231:	mov    rsi,QWORD PTR [rsp+0x40]
   140001236:	add    rsp,0x20
   14000123a:	pop    rdi
   14000123b:	ret    
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	mov    QWORD PTR [rsp+0x10],rsi
   140001245:	push   rdi
   140001246:	sub    rsp,0x20
   14000124a:	mov    rdi,rdx
   14000124d:	mov    rsi,rcx
   140001250:	lock add DWORD PTR [rip+0x716b0],0x1        # 0x140072908
   140001258:	xor    ecx,ecx
   14000125a:	call   0x1400011c0
   14000125f:	test   eax,eax
   140001261:	jne    0x1400012ee
   140001267:	mov    QWORD PTR [rsp+0x30],rbx
   14000126c:	mov    rbx,QWORD PTR [rip+0x71855]        # 0x140072ac8
   140001273:	test   rbx,rbx
   140001276:	jne    0x1400012a1
   140001278:	mov    rax,QWORD PTR [rip+0x71641]        # 0x1400728c0
   14000127f:	test   rax,rax
   140001282:	je     0x14000129a
   140001284:	mov    ecx,0x2926aaad
   140001289:	call   rax
   14000128b:	mov    rbx,rax
   14000128e:	mov    QWORD PTR [rip+0x71833],rax        # 0x140072ac8
   140001295:	test   rax,rax
   140001298:	jne    0x1400012a1
   14000129a:	mov    eax,0xfffffffd
   14000129f:	jmp    0x1400012e9
   1400012a1:	mov    rax,QWORD PTR [rip+0x71628]        # 0x1400728d0
   1400012a8:	mov    QWORD PTR [rsp+0x40],0x0
   1400012b1:	test   rax,rax
   1400012b4:	je     0x1400012c2
   1400012b6:	lea    rdx,[rsp+0x40]
   1400012bb:	mov    ecx,0x2926aaad
   1400012c0:	call   rax
   1400012c2:	mov    rdx,rdi
   1400012c5:	mov    rcx,rsi
   1400012c8:	call   rbx
   1400012ca:	mov    ebx,eax
   1400012cc:	mov    rax,QWORD PTR [rip+0x71605]        # 0x1400728d8
   1400012d3:	test   rax,rax
   1400012d6:	je     0x1400012e7
   1400012d8:	mov    rdx,QWORD PTR [rsp+0x40]
   1400012dd:	mov    r8d,ebx
   1400012e0:	mov    ecx,0x2926aaad
   1400012e5:	call   rax
   1400012e7:	mov    eax,ebx
   1400012e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012ee:	lock add DWORD PTR [rip+0x71612],0xffffffff        # 0x140072908
   1400012f6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400012fb:	add    rsp,0x20
   1400012ff:	pop    rdi
   140001300:	ret    
   140001301:	int3   
   140001302:	int3   
   140001303:	int3   
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	mov    QWORD PTR [rsp+0x8],rbx
   140001315:	mov    QWORD PTR [rsp+0x10],rsi
   14000131a:	push   rdi
   14000131b:	sub    rsp,0x20
   14000131f:	mov    eax,DWORD PTR [rip+0x7479b]        # 0x140075ac0
   140001325:	lea    rsi,[rip+0x4a23c]        # 0x14004b568
   14000132c:	test   al,0x1
   14000132e:	jne    0x140001359
   140001330:	or     eax,0x1
   140001333:	lea    rcx,[rip+0x7475e]        # 0x140075a98
   14000133a:	mov    QWORD PTR [rip+0x7474f],rsi        # 0x140075a90
   140001341:	mov    DWORD PTR [rip+0x74779],eax        # 0x140075ac0
   140001347:	call   QWORD PTR [rip+0x49d23]        # 0x14004b070
   14000134d:	lea    rcx,[rip+0x495ec]        # 0x14004a940
   140001354:	call   0x1400263e4
   140001359:	lea    rcx,[rip+0x74738]        # 0x140075a98
   140001360:	call   QWORD PTR [rip+0x49dba]        # 0x14004b120
   140001366:	lock add DWORD PTR [rip+0x7159a],0x1        # 0x140072908
   14000136e:	mov    edi,DWORD PTR [rip+0x715a4]        # 0x140072918
   140001374:	xor    ecx,ecx
   140001376:	call   0x1400011c0
   14000137b:	mov    ebx,eax
   14000137d:	test   eax,eax
   14000137f:	jne    0x14000138a
   140001381:	lea    ecx,[rdi+0x1]
   140001384:	mov    DWORD PTR [rip+0x7158e],ecx        # 0x140072918
   14000138a:	lock add DWORD PTR [rip+0x71576],0xffffffff        # 0x140072908
   140001392:	mov    edx,DWORD PTR [rip+0x74728]        # 0x140075ac0
   140001398:	test   dl,0x1
   14000139b:	jne    0x1400013c6
   14000139d:	or     edx,0x1
   1400013a0:	lea    rcx,[rip+0x746f1]        # 0x140075a98
   1400013a7:	mov    QWORD PTR [rip+0x746e2],rsi        # 0x140075a90
   1400013ae:	mov    DWORD PTR [rip+0x7470c],edx        # 0x140075ac0
   1400013b4:	call   QWORD PTR [rip+0x49cb6]        # 0x14004b070
   1400013ba:	lea    rcx,[rip+0x4957f]        # 0x14004a940
   1400013c1:	call   0x1400263e4
   1400013c6:	lea    rcx,[rip+0x746cb]        # 0x140075a98
   1400013cd:	call   QWORD PTR [rip+0x49c95]        # 0x14004b068
   1400013d3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013d8:	mov    eax,ebx
   1400013da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013df:	add    rsp,0x20
   1400013e3:	pop    rdi
   1400013e4:	ret    
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	rex push rbx
   1400013f2:	sub    rsp,0x20
   1400013f6:	mov    eax,DWORD PTR [rip+0x746c4]        # 0x140075ac0
   1400013fc:	lea    rbx,[rip+0x4a165]        # 0x14004b568
   140001403:	test   al,0x1
   140001405:	jne    0x140001430
   140001407:	or     eax,0x1
   14000140a:	lea    rcx,[rip+0x74687]        # 0x140075a98
   140001411:	mov    QWORD PTR [rip+0x74678],rbx        # 0x140075a90
   140001418:	mov    DWORD PTR [rip+0x746a2],eax        # 0x140075ac0
   14000141e:	call   QWORD PTR [rip+0x49c4c]        # 0x14004b070
   140001424:	lea    rcx,[rip+0x49515]        # 0x14004a940
   14000142b:	call   0x1400263e4
   140001430:	lea    rcx,[rip+0x74661]        # 0x140075a98
   140001437:	call   QWORD PTR [rip+0x49ce3]        # 0x14004b120
   14000143d:	cmp    QWORD PTR [rip+0x7149b],0x0        # 0x1400728e0
   140001445:	mov    BYTE PTR [rip+0x714b4],0x1        # 0x140072900
   14000144c:	je     0x140001689
   140001452:	cmp    QWORD PTR [rip+0x71466],0x0        # 0x1400728c0
   14000145a:	je     0x140001689
   140001460:	add    DWORD PTR [rip+0x714b1],0xffffffff        # 0x140072918
   140001467:	je     0x1400014b8
   140001469:	mov    eax,DWORD PTR [rip+0x74651]        # 0x140075ac0
   14000146f:	mov    BYTE PTR [rip+0x7148a],0x0        # 0x140072900
   140001476:	test   al,0x1
   140001478:	jne    0x1400014a3
   14000147a:	or     eax,0x1
   14000147d:	lea    rcx,[rip+0x74614]        # 0x140075a98
   140001484:	mov    QWORD PTR [rip+0x74605],rbx        # 0x140075a90
   14000148b:	mov    DWORD PTR [rip+0x7462f],eax        # 0x140075ac0
   140001491:	call   QWORD PTR [rip+0x49bd9]        # 0x14004b070
   140001497:	lea    rcx,[rip+0x494a2]        # 0x14004a940
   14000149e:	call   0x1400263e4
   1400014a3:	lea    rcx,[rip+0x745ee]        # 0x140075a98
   1400014aa:	call   QWORD PTR [rip+0x49bb8]        # 0x14004b068
   1400014b0:	xor    eax,eax
   1400014b2:	add    rsp,0x20
   1400014b6:	pop    rbx
   1400014b7:	ret    
   1400014b8:	mov    QWORD PTR [rsp+0x30],rdi
   1400014bd:	xor    edi,edi
   1400014bf:	mov    eax,edi
   1400014c1:	lock xadd DWORD PTR [rip+0x7143f],eax        # 0x140072908
   1400014c9:	test   eax,eax
   1400014cb:	je     0x140001524
   1400014cd:	mov    eax,DWORD PTR [rip+0x745ed]        # 0x140075ac0
   1400014d3:	mov    BYTE PTR [rip+0x71426],dil        # 0x140072900
   1400014da:	test   al,0x1
   1400014dc:	jne    0x140001507
   1400014de:	or     eax,0x1
   1400014e1:	lea    rcx,[rip+0x745b0]        # 0x140075a98
   1400014e8:	mov    QWORD PTR [rip+0x745a1],rbx        # 0x140075a90
   1400014ef:	mov    DWORD PTR [rip+0x745cb],eax        # 0x140075ac0
   1400014f5:	call   QWORD PTR [rip+0x49b75]        # 0x14004b070
   1400014fb:	lea    rcx,[rip+0x4943e]        # 0x14004a940
   140001502:	call   0x1400263e4
   140001507:	lea    rcx,[rip+0x7458a]        # 0x140075a98
   14000150e:	call   QWORD PTR [rip+0x49b54]        # 0x14004b068
   140001514:	mov    rdi,QWORD PTR [rsp+0x30]
   140001519:	mov    eax,0xffffff2f
   14000151e:	add    rsp,0x20
   140001522:	pop    rbx
   140001523:	ret    
   140001524:	mov    ecx,0xd22bdd7e
   140001529:	call   QWORD PTR [rip+0x71391]        # 0x1400728c0
   14000152f:	test   rax,rax
   140001532:	jne    0x14000158b
   140001534:	mov    eax,DWORD PTR [rip+0x74586]        # 0x140075ac0
   14000153a:	mov    BYTE PTR [rip+0x713bf],dil        # 0x140072900
   140001541:	test   al,0x1
   140001543:	jne    0x14000156e
   140001545:	or     eax,0x1
   140001548:	lea    rcx,[rip+0x74549]        # 0x140075a98
   14000154f:	mov    QWORD PTR [rip+0x7453a],rbx        # 0x140075a90
   140001556:	mov    DWORD PTR [rip+0x74564],eax        # 0x140075ac0
   14000155c:	call   QWORD PTR [rip+0x49b0e]        # 0x14004b070
   140001562:	lea    rcx,[rip+0x493d7]        # 0x14004a940
   140001569:	call   0x1400263e4
   14000156e:	lea    rcx,[rip+0x74523]        # 0x140075a98
   140001575:	call   QWORD PTR [rip+0x49aed]        # 0x14004b068
   14000157b:	mov    rdi,QWORD PTR [rsp+0x30]
   140001580:	mov    eax,0xfffffffd
   140001585:	add    rsp,0x20
   140001589:	pop    rbx
   14000158a:	ret    
   14000158b:	call   rax
   14000158d:	test   eax,eax
   14000158f:	je     0x1400015ec
   140001591:	mov    eax,DWORD PTR [rip+0x74529]        # 0x140075ac0
   140001597:	inc    DWORD PTR [rip+0x7137b]        # 0x140072918
   14000159d:	mov    BYTE PTR [rip+0x7135c],dil        # 0x140072900
   1400015a4:	test   al,0x1
   1400015a6:	jne    0x1400015d1
   1400015a8:	or     eax,0x1
   1400015ab:	lea    rcx,[rip+0x744e6]        # 0x140075a98
   1400015b2:	mov    QWORD PTR [rip+0x744d7],rbx        # 0x140075a90
   1400015b9:	mov    DWORD PTR [rip+0x74501],eax        # 0x140075ac0
   1400015bf:	call   QWORD PTR [rip+0x49aab]        # 0x14004b070
   1400015c5:	lea    rcx,[rip+0x49374]        # 0x14004a940
   1400015cc:	call   0x1400263e4
   1400015d1:	lea    rcx,[rip+0x744c0]        # 0x140075a98
   1400015d8:	call   QWORD PTR [rip+0x49a8a]        # 0x14004b068
   1400015de:	mov    rdi,QWORD PTR [rsp+0x30]
   1400015e3:	or     eax,0xffffffff
   1400015e6:	add    rsp,0x20
   1400015ea:	pop    rbx
   1400015eb:	ret    
   1400015ec:	mov    rcx,QWORD PTR [rip+0x712ed]        # 0x1400728e0
   1400015f3:	mov    QWORD PTR [rip+0x712c6],rdi        # 0x1400728c0
   1400015fa:	call   QWORD PTR [rip+0x49aa0]        # 0x14004b0a0
   140001600:	lea    rcx,[rip+0x71329]        # 0x140072930
   140001607:	xor    edx,edx
   140001609:	mov    r8d,0x3160
   14000160f:	mov    QWORD PTR [rip+0x712ca],rdi        # 0x1400728e0
   140001616:	mov    QWORD PTR [rip+0x712b3],rdi        # 0x1400728d0
   14000161d:	mov    QWORD PTR [rip+0x712b4],rdi        # 0x1400728d8
   140001624:	mov    DWORD PTR [rip+0x712de],edi        # 0x140072908
   14000162a:	mov    DWORD PTR [rip+0x712e8],edi        # 0x140072918
   140001630:	call   0x14002a910
   140001635:	mov    eax,DWORD PTR [rip+0x74485]        # 0x140075ac0
   14000163b:	mov    BYTE PTR [rip+0x712be],dil        # 0x140072900
   140001642:	test   al,0x1
   140001644:	jne    0x14000166f
   140001646:	or     eax,0x1
   140001649:	lea    rcx,[rip+0x74448]        # 0x140075a98
   140001650:	mov    QWORD PTR [rip+0x74439],rbx        # 0x140075a90
   140001657:	mov    DWORD PTR [rip+0x74463],eax        # 0x140075ac0
   14000165d:	call   QWORD PTR [rip+0x49a0d]        # 0x14004b070
   140001663:	lea    rcx,[rip+0x492d6]        # 0x14004a940
   14000166a:	call   0x1400263e4
   14000166f:	lea    rcx,[rip+0x74422]        # 0x140075a98
   140001676:	call   QWORD PTR [rip+0x499ec]        # 0x14004b068
   14000167c:	mov    rdi,QWORD PTR [rsp+0x30]
   140001681:	xor    eax,eax
   140001683:	add    rsp,0x20
   140001687:	pop    rbx
   140001688:	ret    
   140001689:	mov    eax,DWORD PTR [rip+0x74431]        # 0x140075ac0
   14000168f:	mov    BYTE PTR [rip+0x7126a],0x0        # 0x140072900
   140001696:	test   al,0x1
   140001698:	jne    0x1400016c3
   14000169a:	or     eax,0x1
   14000169d:	lea    rcx,[rip+0x743f4]        # 0x140075a98
   1400016a4:	mov    QWORD PTR [rip+0x743e5],rbx        # 0x140075a90
   1400016ab:	mov    DWORD PTR [rip+0x7440f],eax        # 0x140075ac0
   1400016b1:	call   QWORD PTR [rip+0x499b9]        # 0x14004b070
   1400016b7:	lea    rcx,[rip+0x49282]        # 0x14004a940
   1400016be:	call   0x1400263e4
   1400016c3:	lea    rcx,[rip+0x743ce]        # 0x140075a98
   1400016ca:	call   QWORD PTR [rip+0x49998]        # 0x14004b068
   1400016d0:	mov    eax,0xfffffffc
   1400016d5:	add    rsp,0x20
   1400016d9:	pop    rbx
   1400016da:	ret    
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	lea    rcx,[rip+0x49231]        # 0x14004a918
   1400016e7:	jmp    0x1400263e4
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	sub    rsp,0x28
   1400016f4:	lea    rcx,[rip+0x75efd]        # 0x1400775f8
   1400016fb:	call   0x140025c54
   140001700:	lea    rcx,[rip+0x49229]        # 0x14004a930
   140001707:	add    rsp,0x28
   14000170b:	jmp    0x1400263e4
   140001710:	lea    rcx,[rip+0x49245]        # 0x14004a95c
   140001717:	jmp    0x1400263e4
   14000171c:	sub    rsp,0x38
   140001720:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001729:	mov    ecx,0x8
   14000172e:	call   0x140026118
   140001733:	mov    rcx,rax
   140001736:	mov    QWORD PTR [rsp+0x40],rax
   14000173b:	xor    eax,eax
   14000173d:	test   rcx,rcx
   140001740:	je     0x140001748
   140001742:	call   0x140025c54
   140001747:	nop
   140001748:	mov    QWORD PTR [rip+0x74389],rax        # 0x140075ad8
   14000174f:	lea    rcx,[rip+0x4924a]        # 0x14004a9a0
   140001756:	add    rsp,0x38
   14000175a:	jmp    0x1400263e4
   14000175f:	int3   
   140001760:	sub    rsp,0x28
   140001764:	lea    rcx,[rip+0x74ae5]        # 0x140076250
   14000176b:	call   0x1400272c4
   140001770:	lea    rcx,[rip+0x49259]        # 0x14004a9d0
   140001777:	add    rsp,0x28
   14000177b:	jmp    0x1400263e4
   140001780:	lea    rcx,[rip+0x49255]        # 0x14004a9dc
   140001787:	jmp    0x1400263e4
   14000178c:	lea    rcx,[rip+0x49275]        # 0x14004aa08
   140001793:	jmp    0x1400263e4
   140001798:	lea    rcx,[rip+0x492c9]        # 0x14004aa68
   14000179f:	jmp    0x1400263e4
   1400017a4:	sub    rsp,0x28
   1400017a8:	lea    rcx,[rip+0x74d41]        # 0x1400764f0
   1400017af:	call   0x1400272c4
   1400017b4:	lea    rcx,[rip+0x49301]        # 0x14004aabc
   1400017bb:	add    rsp,0x28
   1400017bf:	jmp    0x1400263e4
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017d5:	mov    QWORD PTR [rsp+0x10],rdi
   1400017da:	xor    edi,edi
   1400017dc:	lea    rax,[rdx-0x1]
   1400017e0:	cmp    rax,0x7ffffffe
   1400017e6:	mov    r10,rdx
   1400017e9:	mov    r9d,edi
   1400017ec:	mov    edx,0x80070057
   1400017f1:	cmova  r9d,edx
   1400017f5:	mov    rbx,r8
   1400017f8:	mov    r11,rcx
   1400017fb:	test   r9d,r9d
   1400017fe:	js     0x140001836
   140001800:	mov    rcx,r10
   140001803:	mov    rax,r11
   140001806:	test   r10,r10
   140001809:	je     0x14000181a
   14000180b:	cmp    WORD PTR [rax],di
   14000180e:	je     0x14000181a
   140001810:	add    rax,0x2
   140001814:	sub    rcx,0x1
   140001818:	jne    0x14000180b
   14000181a:	mov    rax,rcx
   14000181d:	neg    rax
   140001820:	sbb    r9d,r9d
   140001823:	not    r9d
   140001826:	and    r9d,edx
   140001829:	test   rcx,rcx
   14000182c:	je     0x140001836
   14000182e:	mov    r8,r10
   140001831:	sub    r8,rcx
   140001834:	jmp    0x140001839
   140001836:	mov    r8,rdi
   140001839:	test   r9d,r9d
   14000183c:	js     0x140001890
   14000183e:	mov    rdx,r10
   140001841:	lea    rcx,[r11+r8*2]
   140001845:	mov    r9d,edi
   140001848:	sub    rdx,r8
   14000184b:	je     0x140001883
   14000184d:	mov    rax,rdx
   140001850:	sub    rax,r10
   140001853:	lea    r10,[r8+0x7fffffff]
   14000185a:	add    r10,rax
   14000185d:	sub    rbx,rcx
   140001860:	test   r10,r10
   140001863:	je     0x14000187e
   140001865:	movzx  eax,WORD PTR [rbx+rcx*1]
   140001869:	test   ax,ax
   14000186c:	je     0x14000187e
   14000186e:	mov    WORD PTR [rcx],ax
   140001871:	dec    r10
   140001874:	add    rcx,0x2
   140001878:	sub    rdx,0x1
   14000187c:	jne    0x140001860
   14000187e:	test   rdx,rdx
   140001881:	jne    0x14000188d
   140001883:	sub    rcx,0x2
   140001887:	mov    r9d,0x8007007a
   14000188d:	mov    WORD PTR [rcx],di
   140001890:	mov    rbx,QWORD PTR [rsp+0x8]
   140001895:	mov    eax,r9d
   140001898:	mov    rdi,QWORD PTR [rsp+0x10]
   14000189d:	ret    
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018a5:	mov    QWORD PTR [rsp+0x10],rdi
   1400018aa:	xor    edi,edi
   1400018ac:	mov    r10,rdx
   1400018af:	shr    r10,1
   1400018b2:	mov    r9d,edi
   1400018b5:	mov    edx,0x80070057
   1400018ba:	mov    r11,r8
   1400018bd:	mov    rbx,rcx
   1400018c0:	lea    rax,[r10-0x1]
   1400018c4:	cmp    rax,0x7ffffffe
   1400018ca:	cmova  r9d,edx
   1400018ce:	test   r9d,r9d
   1400018d1:	js     0x140001909
   1400018d3:	mov    rcx,r10
   1400018d6:	mov    rax,rbx
   1400018d9:	test   r10,r10
   1400018dc:	je     0x1400018ed
   1400018de:	cmp    WORD PTR [rax],di
   1400018e1:	je     0x1400018ed
   1400018e3:	add    rax,0x2
   1400018e7:	sub    rcx,0x1
   1400018eb:	jne    0x1400018de
   1400018ed:	mov    rax,rcx
   1400018f0:	neg    rax
   1400018f3:	sbb    r9d,r9d
   1400018f6:	not    r9d
   1400018f9:	and    r9d,edx
   1400018fc:	test   rcx,rcx
   1400018ff:	je     0x140001909
   140001901:	mov    r8,r10
   140001904:	sub    r8,rcx
   140001907:	jmp    0x14000190c
   140001909:	mov    r8,rdi
   14000190c:	test   r9d,r9d
   14000190f:	js     0x140001964
   140001911:	mov    rdx,r10
   140001914:	lea    rcx,[rbx+r8*2]
   140001918:	mov    r9d,edi
   14000191b:	sub    rdx,r8
   14000191e:	je     0x140001957
   140001920:	mov    rax,rdx
   140001923:	sub    rax,r10
   140001926:	lea    r10,[r8+0x7fffffff]
   14000192d:	add    r10,rax
   140001930:	sub    r11,rcx
   140001933:	test   r10,r10
   140001936:	je     0x140001952
   140001938:	movzx  eax,WORD PTR [r11+rcx*1]
   14000193d:	test   ax,ax
   140001940:	je     0x140001952
   140001942:	mov    WORD PTR [rcx],ax
   140001945:	dec    r10
   140001948:	add    rcx,0x2
   14000194c:	sub    rdx,0x1
   140001950:	jne    0x140001933
   140001952:	test   rdx,rdx
   140001955:	jne    0x140001961
   140001957:	sub    rcx,0x2
   14000195b:	mov    r9d,0x8007007a
   140001961:	mov    WORD PTR [rcx],di
   140001964:	mov    rbx,QWORD PTR [rsp+0x8]
   140001969:	mov    eax,r9d
   14000196c:	mov    rdi,QWORD PTR [rsp+0x10]
   140001971:	ret    
   140001972:	int3   
   140001973:	int3   
   140001974:	mov    QWORD PTR [rsp+0x8],rbx
   140001979:	mov    QWORD PTR [rsp+0x10],rbp
   14000197e:	mov    QWORD PTR [rsp+0x18],rsi
   140001983:	push   rdi
   140001984:	sub    rsp,0x20
   140001988:	mov    ebp,edx
   14000198a:	mov    rbx,rcx
   14000198d:	xor    edi,edi
   14000198f:	call   0x140001c68
   140001994:	mov    rsi,rax
   140001997:	test   rbx,rbx
   14000199a:	je     0x1400019a1
   14000199c:	test   rax,rax
   14000199f:	je     0x1400019b8
   1400019a1:	and    ebp,0xffffe0f7
   1400019a7:	xor    edx,edx
   1400019a9:	mov    r8d,ebp
   1400019ac:	mov    rcx,rsi
   1400019af:	call   QWORD PTR [rip+0x496db]        # 0x14004b090
   1400019b5:	mov    rdi,rax
   1400019b8:	mov    rcx,rsi
   1400019bb:	call   QWORD PTR [rip+0x496ff]        # 0x14004b0c0
   1400019c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019c6:	mov    rax,rdi
   1400019c9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400019ce:	mov    rsi,QWORD PTR [rsp+0x40]
   1400019d3:	add    rsp,0x20
   1400019d7:	pop    rdi
   1400019d8:	ret    
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400019e1:	mov    QWORD PTR [rsp+0x10],rbp
   1400019e6:	mov    QWORD PTR [rsp+0x18],rsi
   1400019eb:	push   rdi
   1400019ec:	sub    rsp,0x20
   1400019f0:	mov    rdi,rcx
   1400019f3:	mov    ebp,edx
   1400019f5:	xor    ecx,ecx
   1400019f7:	xor    ebx,ebx
   1400019f9:	call   QWORD PTR [rip+0x49719]        # 0x14004b118
   1400019ff:	mov    rcx,rdi
   140001a02:	call   0x140001d48
   140001a07:	test   eax,eax
   140001a09:	je     0x140001a18
   140001a0b:	mov    ecx,0xa0
   140001a10:	call   QWORD PTR [rip+0x49702]        # 0x14004b118
   140001a16:	jmp    0x140001a82
   140001a18:	mov    ecx,0x37e4
   140001a1d:	call   0x140003a40
   140001a22:	cmp    eax,0x1
   140001a25:	jne    0x140001a75
   140001a27:	lea    r8d,[rax+0x1]
   140001a2b:	mov    rcx,rdi
   140001a2e:	lea    rdx,[rip+0x5c467]        # 0x14005de9c
   140001a35:	call   0x14002c5a8
   140001a3a:	test   eax,eax
   140001a3c:	jne    0x140001a75
   140001a3e:	mov    rcx,rdi
   140001a41:	call   0x140002d34
   140001a46:	mov    rsi,rax
   140001a49:	call   QWORD PTR [rip+0x49691]        # 0x14004b0e0
   140001a4f:	test   rsi,rsi
   140001a52:	je     0x140001a6c
   140001a54:	mov    edx,ebp
   140001a56:	mov    rcx,rsi
   140001a59:	call   0x140001a9c
   140001a5e:	mov    rcx,rsi
   140001a61:	mov    rbx,rax
   140001a64:	call   QWORD PTR [rip+0x49656]        # 0x14004b0c0
   140001a6a:	jmp    0x140001a82
   140001a6c:	cmp    eax,0x7e
   140001a6f:	je     0x140001a75
   140001a71:	xor    eax,eax
   140001a73:	jmp    0x140001a85
   140001a75:	mov    edx,ebp
   140001a77:	mov    rcx,rdi
   140001a7a:	call   0x140001974
   140001a7f:	mov    rbx,rax
   140001a82:	mov    rax,rbx
   140001a85:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a8a:	mov    rbp,QWORD PTR [rsp+0x38]
   140001a8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001a94:	add    rsp,0x20
   140001a98:	pop    rdi
   140001a99:	ret    
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	mov    QWORD PTR [rsp+0x8],rbx
   140001aa1:	push   rdi
   140001aa2:	sub    rsp,0x20
   140001aa6:	mov    rbx,rcx
   140001aa9:	mov    edi,edx
   140001aab:	xor    ecx,ecx
   140001aad:	call   QWORD PTR [rip+0x49665]        # 0x14004b118
   140001ab3:	mov    rcx,rbx
   140001ab6:	call   0x140001d8c
   140001abb:	test   eax,eax
   140001abd:	jne    0x140001ace
   140001abf:	mov    ecx,0xa0
   140001ac4:	call   QWORD PTR [rip+0x4964e]        # 0x14004b118
   140001aca:	xor    eax,eax
   140001acc:	jmp    0x140001af5
   140001ace:	mov    rcx,rbx
   140001ad1:	call   0x140001dd8
   140001ad6:	test   eax,eax
   140001ad8:	jne    0x140001ae1
   140001ada:	mov    ecx,0xa1
   140001adf:	jmp    0x140001ac4
   140001ae1:	and    edi,0xffffe0f7
   140001ae7:	xor    edx,edx
   140001ae9:	mov    r8d,edi
   140001aec:	mov    rcx,rbx
   140001aef:	call   QWORD PTR [rip+0x4959b]        # 0x14004b090
   140001af5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001afa:	add    rsp,0x20
   140001afe:	pop    rdi
   140001aff:	ret    
   140001b00:	mov    QWORD PTR [rsp+0x8],rbx
   140001b05:	mov    QWORD PTR [rsp+0x10],rbp
   140001b0a:	mov    DWORD PTR [rsp+0x18],r8d
   140001b0f:	push   rsi
   140001b10:	push   rdi
   140001b11:	push   r14
   140001b13:	sub    rsp,0x20
   140001b17:	xor    r14d,r14d
   140001b1a:	xor    ecx,ecx
   140001b1c:	mov    esi,r14d
   140001b1f:	mov    rdi,rdx
   140001b22:	call   QWORD PTR [rip+0x495f0]        # 0x14004b118
   140001b28:	test   rdi,rdi
   140001b2b:	jne    0x140001b3f
   140001b2d:	mov    ecx,0x57
   140001b32:	call   QWORD PTR [rip+0x495e0]        # 0x14004b118
   140001b38:	xor    eax,eax
   140001b3a:	jmp    0x140001c52
   140001b3f:	or     rax,0xffffffffffffffff
   140001b43:	inc    rax
   140001b46:	cmp    WORD PTR [rdi+rax*2],r14w
   140001b4b:	jne    0x140001b43
   140001b4d:	lea    rbp,[rax*2+0x2]
   140001b55:	mov    ecx,0x40
   140001b5a:	mov    rdx,rbp
   140001b5d:	call   QWORD PTR [rip+0x495a5]        # 0x14004b108
   140001b63:	mov    rbx,rax
   140001b66:	test   rax,rax
   140001b69:	je     0x140001b38
   140001b6b:	mov    r8,rbp
   140001b6e:	mov    rdx,rdi
   140001b71:	mov    rcx,rax
   140001b74:	call   0x140028fd0
   140001b79:	xor    r8d,r8d
   140001b7c:	lea    rdx,[rip+0x5c321]        # 0x14005dea4
   140001b83:	cmp    WORD PTR [rbx],0x22
   140001b87:	mov    rcx,rbx
   140001b8a:	je     0x140001b93
   140001b8c:	lea    rdx,[rip+0x5c315]        # 0x14005dea8
   140001b93:	call   0x14002c434
   140001b98:	mov    rdi,rax
   140001b9b:	test   rax,rax
   140001b9e:	jne    0x140001bab
   140001ba0:	mov    rcx,rbx
   140001ba3:	call   QWORD PTR [rip+0x49517]        # 0x14004b0c0
   140001ba9:	jmp    0x140001b2d
   140001bab:	mov    rcx,rdi
   140001bae:	call   0x140001d8c
   140001bb3:	test   eax,eax
   140001bb5:	jne    0x140001bca
   140001bb7:	mov    rcx,rbx
   140001bba:	call   QWORD PTR [rip+0x49500]        # 0x14004b0c0
   140001bc0:	mov    ecx,0xa0
   140001bc5:	jmp    0x140001b32
   140001bca:	mov    rcx,rdi
   140001bcd:	call   0x140001dd8
   140001bd2:	test   eax,eax
   140001bd4:	je     0x140001be6
   140001bd6:	mov    rcx,rbx
   140001bd9:	call   QWORD PTR [rip+0x494e1]        # 0x14004b0c0
   140001bdf:	mov    eax,0x1
   140001be4:	jmp    0x140001c52
   140001be6:	lea    rdx,[rsp+0x50]
   140001beb:	mov    DWORD PTR [rsp+0x50],r14d
   140001bf0:	mov    rcx,rdi
   140001bf3:	call   0x1400020d0
   140001bf8:	test   eax,eax
   140001bfa:	je     0x140001c15
   140001bfc:	cmp    DWORD PTR [rsp+0x50],r14d
   140001c01:	jne    0x140001c11
   140001c03:	mov    ecx,0x80092009
   140001c08:	call   QWORD PTR [rip+0x4950a]        # 0x14004b118
   140001c0e:	mov    eax,r14d
   140001c11:	test   eax,eax
   140001c13:	jne    0x140001c36
   140001c15:	call   QWORD PTR [rip+0x494c5]        # 0x14004b0e0
   140001c1b:	mov    edx,eax
   140001c1d:	mov    rcx,rdi
   140001c20:	call   0x140002778
   140001c25:	test   eax,eax
   140001c27:	jne    0x140001c36
   140001c29:	mov    edi,r14d
   140001c2c:	call   QWORD PTR [rip+0x494ae]        # 0x14004b0e0
   140001c32:	mov    esi,eax
   140001c34:	jmp    0x140001c3b
   140001c36:	mov    edi,0x1
   140001c3b:	mov    rcx,rbx
   140001c3e:	call   QWORD PTR [rip+0x4947c]        # 0x14004b0c0
   140001c44:	test   edi,edi
   140001c46:	jne    0x140001c50
   140001c48:	mov    ecx,esi
   140001c4a:	call   QWORD PTR [rip+0x494c8]        # 0x14004b118
   140001c50:	mov    eax,edi
   140001c52:	mov    rbx,QWORD PTR [rsp+0x40]
   140001c57:	mov    rbp,QWORD PTR [rsp+0x48]
   140001c5c:	add    rsp,0x20
   140001c60:	pop    r14
   140001c62:	pop    rdi
   140001c63:	pop    rsi
   140001c64:	ret    
   140001c65:	int3   
   140001c66:	int3   
   140001c67:	int3   
   140001c68:	mov    rax,rsp
   140001c6b:	mov    QWORD PTR [rax+0x8],rbx
   140001c6f:	mov    QWORD PTR [rax+0x10],rbp
   140001c73:	mov    QWORD PTR [rax+0x18],rsi
   140001c77:	mov    QWORD PTR [rax+0x20],rdi
   140001c7b:	push   r14
   140001c7d:	sub    rsp,0x20
   140001c81:	xor    ebp,ebp
   140001c83:	mov    rdi,rcx
   140001c86:	mov    ebx,ebp
   140001c88:	test   rcx,rcx
   140001c8b:	je     0x140001d28
   140001c91:	xor    edx,edx
   140001c93:	xor    ecx,ecx
   140001c95:	call   QWORD PTR [rip+0x4944d]        # 0x14004b0e8
   140001c9b:	or     r14,0xffffffffffffffff
   140001c9f:	mov    esi,eax
   140001ca1:	mov    rdx,r14
   140001ca4:	inc    rdx
   140001ca7:	cmp    WORD PTR [rdi+rdx*2],bp
   140001cab:	jne    0x140001ca4
   140001cad:	lea    ecx,[rax+0x1]
   140001cb0:	add    rdx,rcx
   140001cb3:	mov    ecx,0x40
   140001cb8:	add    rdx,rdx
   140001cbb:	call   QWORD PTR [rip+0x49447]        # 0x14004b108
   140001cc1:	mov    rbx,rax
   140001cc4:	test   rax,rax
   140001cc7:	je     0x140001d2b
   140001cc9:	mov    edx,esi
   140001ccb:	mov    rcx,rbx
   140001cce:	call   QWORD PTR [rip+0x49414]        # 0x14004b0e8
   140001cd4:	mov    r8d,eax
   140001cd7:	mov    eax,0x5c
   140001cdc:	lea    ecx,[r8-0x1]
   140001ce0:	cmp    WORD PTR [rbx+rcx*2],ax
   140001ce4:	je     0x140001cee
   140001ce6:	mov    WORD PTR [rbx+r8*2],ax
   140001ceb:	inc    r8d
   140001cee:	mov    r9d,ebp
   140001cf1:	mov    rax,r14
   140001cf4:	inc    rax
   140001cf7:	cmp    WORD PTR [rdi+rax*2],bp
   140001cfb:	jne    0x140001cf4
   140001cfd:	test   rax,rax
   140001d00:	je     0x140001d28
   140001d02:	mov    rdx,rbp
   140001d05:	movzx  eax,WORD PTR [rdi+rdx*2]
   140001d09:	lea    ecx,[r9+r8*1]
   140001d0d:	inc    r9d
   140001d10:	mov    WORD PTR [rbx+rcx*2],ax
   140001d14:	mov    edx,r9d
   140001d17:	mov    rax,r14
   140001d1a:	inc    rax
   140001d1d:	cmp    WORD PTR [rdi+rax*2],bp
   140001d21:	jne    0x140001d1a
   140001d23:	cmp    rdx,rax
   140001d26:	jb     0x140001d05
   140001d28:	mov    rax,rbx
   140001d2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d30:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d35:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d3a:	mov    rdi,QWORD PTR [rsp+0x48]
   140001d3f:	add    rsp,0x20
   140001d43:	pop    r14
   140001d45:	ret    
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	xor    eax,eax
   140001d4a:	mov    r8,rcx
   140001d4d:	test   rcx,rcx
   140001d50:	je     0x140001d80
   140001d52:	or     rdx,0xffffffffffffffff
   140001d56:	inc    rdx
   140001d59:	cmp    WORD PTR [rcx+rdx*2],ax
   140001d5d:	jne    0x140001d56
   140001d5f:	test   rdx,rdx
   140001d62:	je     0x140001d80
   140001d64:	mov    rcx,rax
   140001d67:	cmp    WORD PTR [r8+rcx*2],0x5c
   140001d6d:	je     0x140001d83
   140001d6f:	cmp    WORD PTR [r8+rcx*2],0x2f
   140001d75:	je     0x140001d83
   140001d77:	inc    eax
   140001d79:	mov    ecx,eax
   140001d7b:	cmp    rcx,rdx
   140001d7e:	jb     0x140001d67
   140001d80:	xor    eax,eax
   140001d82:	ret    
   140001d83:	mov    eax,0x1
   140001d88:	ret    
   140001d89:	int3   
   140001d8a:	int3   
   140001d8b:	int3   
   140001d8c:	rex push rbx
   140001d8e:	sub    rsp,0x20
   140001d92:	mov    rbx,rcx
   140001d95:	test   rcx,rcx
   140001d98:	jne    0x140001d9e
   140001d9a:	xor    eax,eax
   140001d9c:	jmp    0x140001dd0
   140001d9e:	cmp    WORD PTR [rcx],0x5c
   140001da2:	je     0x140001dcb
   140001da4:	cmp    WORD PTR [rcx],0x2f
   140001da8:	je     0x140001dcb
   140001daa:	movzx  ecx,WORD PTR [rcx]
   140001dad:	call   0x14002c25c
   140001db2:	test   eax,eax
   140001db4:	je     0x140001d9a
   140001db6:	cmp    WORD PTR [rbx+0x2],0x3a
   140001dbb:	jne    0x140001d9a
   140001dbd:	cmp    WORD PTR [rbx+0x4],0x5c
   140001dc2:	je     0x140001dcb
   140001dc4:	cmp    WORD PTR [rbx+0x4],0x2f
   140001dc9:	jne    0x140001d9a
   140001dcb:	mov    eax,0x1
   140001dd0:	add    rsp,0x20
   140001dd4:	pop    rbx
   140001dd5:	ret    
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	mov    QWORD PTR [rsp+0x10],rbx
   140001ddd:	mov    QWORD PTR [rsp+0x18],rbp
   140001de2:	mov    QWORD PTR [rsp+0x20],rsi
   140001de7:	push   rdi
   140001de8:	push   r14
   140001dea:	push   r15
   140001dec:	sub    rsp,0x260
   140001df3:	mov    rax,QWORD PTR [rip+0x6f256]        # 0x140071050
   140001dfa:	xor    rax,rsp
   140001dfd:	mov    QWORD PTR [rsp+0x250],rax
   140001e05:	xor    r15d,r15d
   140001e08:	mov    DWORD PTR [rsp+0x30],0x24
   140001e10:	cmp    DWORD PTR [rip+0x756b9],r15d        # 0x1400774d0
   140001e17:	mov    rsi,rcx
   140001e1a:	mov    ebp,r15d
   140001e1d:	mov    DWORD PTR [rsp+0x34],0x26
   140001e25:	mov    ebx,r15d
   140001e28:	mov    DWORD PTR [rsp+0x38],0x2a
   140001e30:	mov    r14d,r15d
   140001e33:	jne    0x140001eae
   140001e35:	mov    r8b,0x3
   140001e38:	lea    edx,[r15+0x2]
   140001e3c:	xor    ecx,ecx
   140001e3e:	call   QWORD PTR [rip+0x49274]        # 0x14004b0b8
   140001e44:	mov    r8b,0x3
   140001e47:	lea    edx,[r15+0x1]
   140001e4b:	mov    rcx,rax
   140001e4e:	call   QWORD PTR [rip+0x49264]        # 0x14004b0b8
   140001e54:	mov    r8b,0x3
   140001e57:	lea    edx,[r15+0x20]
   140001e5b:	mov    rcx,rax
   140001e5e:	call   QWORD PTR [rip+0x49254]        # 0x14004b0b8
   140001e64:	lea    edx,[r15+0x23]
   140001e68:	mov    DWORD PTR [rip+0x7565e],0x11c        # 0x1400774d0
   140001e72:	mov    r8,rax
   140001e75:	mov    DWORD PTR [rip+0x75655],0x6        # 0x1400774d4
   140001e7f:	lea    rcx,[rip+0x7564a]        # 0x1400774d0
   140001e86:	mov    DWORD PTR [rip+0x75648],0x1        # 0x1400774d8
   140001e90:	mov    WORD PTR [rip+0x7574c],r15w        # 0x1400775e4
   140001e98:	call   QWORD PTR [rip+0x491fa]        # 0x14004b098
   140001e9e:	mov    ecx,r15d
   140001ea1:	test   eax,eax
   140001ea3:	sete   cl
   140001ea6:	mov    DWORD PTR [rip+0x6fd04],ecx        # 0x140071bb0
   140001eac:	jmp    0x140001eb4
   140001eae:	mov    ecx,DWORD PTR [rip+0x6fcfc]        # 0x140071bb0
   140001eb4:	test   ecx,ecx
   140001eb6:	je     0x140001ec2
   140001eb8:	mov    eax,0x1
   140001ebd:	jmp    0x1400020a2
   140001ec2:	test   rsi,rsi
   140001ec5:	je     0x14000208d
   140001ecb:	xor    r9d,r9d
   140001ece:	xor    r8d,r8d
   140001ed1:	xor    edx,edx
   140001ed3:	mov    rcx,rsi
   140001ed6:	call   QWORD PTR [rip+0x49234]        # 0x14004b110
   140001edc:	mov    edi,eax
   140001ede:	test   eax,eax
   140001ee0:	je     0x14000208d
   140001ee6:	mov    edx,edi
   140001ee8:	mov    ecx,0x40
   140001eed:	add    rdx,rdx
   140001ef0:	call   QWORD PTR [rip+0x49212]        # 0x14004b108
   140001ef6:	mov    rbp,rax
   140001ef9:	test   rax,rax
   140001efc:	je     0x14000208d
   140001f02:	xor    r9d,r9d
   140001f05:	mov    r8,rax
   140001f08:	mov    edx,edi
   140001f0a:	mov    rcx,rsi
   140001f0d:	call   QWORD PTR [rip+0x491fd]        # 0x14004b110
   140001f13:	cmp    edi,eax
   140001f15:	jbe    0x14000208d
   140001f1b:	mov    rsi,r15
   140001f1e:	xor    edx,edx
   140001f20:	lea    rcx,[rsp+0x40]
   140001f25:	mov    r8d,0x20a
   140001f2b:	mov    rbx,r15
   140001f2e:	call   0x14002a910
   140001f33:	cmp    QWORD PTR [rip+0x754e6],r15        # 0x140077420
   140001f3a:	jne    0x140001f6f
   140001f3c:	xor    edx,edx
   140001f3e:	lea    rcx,[rip+0x5bf8b]        # 0x14005ded0
   140001f45:	call   0x140001974
   140001f4a:	mov    QWORD PTR [rip+0x754cf],rax        # 0x140077420
   140001f51:	test   rax,rax
   140001f54:	je     0x140001f6f
   140001f56:	lea    rdx,[rip+0x5bf8b]        # 0x14005dee8
   140001f5d:	mov    rcx,rax
   140001f60:	call   QWORD PTR [rip+0x49162]        # 0x14004b0c8
   140001f66:	mov    QWORD PTR [rip+0x754c3],rax        # 0x140077430
   140001f6d:	jmp    0x140001f76
   140001f6f:	mov    rax,QWORD PTR [rip+0x754ba]        # 0x140077430
   140001f76:	test   rax,rax
   140001f79:	je     0x14000208d
   140001f7f:	mov    edx,DWORD PTR [rsp+rsi*4+0x30]
   140001f83:	lea    rcx,[rsp+0x40]
   140001f88:	mov    QWORD PTR [rsp+0x20],rcx
   140001f8d:	xor    r9d,r9d
   140001f90:	xor    ecx,ecx
   140001f92:	xor    r8d,r8d
   140001f95:	call   rax
   140001f97:	test   eax,eax
   140001f99:	jne    0x140002044
   140001f9f:	lea    rax,[rsp+0x40]
   140001fa4:	or     rdi,0xffffffffffffffff
   140001fa8:	inc    rdi
   140001fab:	cmp    WORD PTR [rax+rdi*2],r15w
   140001fb0:	jne    0x140001fa8
   140001fb2:	add    rdi,0x2
   140001fb6:	mov    ecx,0x40
   140001fbb:	lea    rdx,[rdi+rdi*1]
   140001fbf:	call   QWORD PTR [rip+0x49143]        # 0x14004b108
   140001fc5:	mov    rbx,rax
   140001fc8:	test   rax,rax
   140001fcb:	je     0x14000208a
   140001fd1:	lea    rax,[rdi-0x1]
   140001fd5:	mov    r8d,0x7ffffffe
   140001fdb:	cmp    rax,r8
   140001fde:	ja     0x140002020
   140001fe0:	sub    r8,rdi
   140001fe3:	lea    r9,[rsp+0x40]
   140001fe8:	sub    r9,rbx
   140001feb:	mov    rdx,rdi
   140001fee:	mov    rcx,rbx
   140001ff1:	lea    rax,[r8+rdx*1]
   140001ff5:	test   rax,rax
   140001ff8:	je     0x140002011
   140001ffa:	movzx  eax,WORD PTR [r9+rcx*1]
   140001fff:	test   ax,ax
   140002002:	je     0x140002011
   140002004:	mov    WORD PTR [rcx],ax
   140002007:	add    rcx,0x2
   14000200b:	sub    rdx,0x1
   14000200f:	jne    0x140001ff1
   140002011:	test   rdx,rdx
   140002014:	lea    rax,[rcx-0x2]
   140002018:	cmovne rax,rcx
   14000201c:	mov    WORD PTR [rax],r15w
   140002020:	lea    r8,[rip+0x5bed5]        # 0x14005defc
   140002027:	mov    rdx,rdi
   14000202a:	mov    rcx,rbx
   14000202d:	call   0x1400017d0
   140002032:	lea    r8,[rip+0x5be5f]        # 0x14005de98
   140002039:	mov    rdx,rdi
   14000203c:	mov    rcx,rbx
   14000203f:	call   0x1400017d0
   140002044:	test   rbx,rbx
   140002047:	je     0x14000208d
   140002049:	or     r8,0xffffffffffffffff
   14000204d:	inc    r8
   140002050:	cmp    WORD PTR [rbx+r8*2],r15w
   140002055:	jne    0x14000204d
   140002057:	mov    rdx,rbx
   14000205a:	mov    rcx,rbp
   14000205d:	call   0x14002c5a8
   140002062:	test   eax,eax
   140002064:	mov    r14d,r15d
   140002067:	sete   r14b
   14000206b:	test   r14d,r14d
   14000206e:	jne    0x14000208d
   140002070:	mov    rcx,rbx
   140002073:	call   QWORD PTR [rip+0x49047]        # 0x14004b0c0
   140002079:	inc    rsi
   14000207c:	mov    rbx,r15
   14000207f:	cmp    rsi,0x3
   140002083:	jge    0x14000208d
   140002085:	jmp    0x140001f1e
   14000208a:	mov    rbx,r15
   14000208d:	mov    rcx,rbx
   140002090:	call   QWORD PTR [rip+0x4902a]        # 0x14004b0c0
   140002096:	mov    rcx,rbp
   140002099:	call   QWORD PTR [rip+0x49021]        # 0x14004b0c0
   14000209f:	mov    eax,r14d
   1400020a2:	mov    rcx,QWORD PTR [rsp+0x250]
   1400020aa:	xor    rcx,rsp
   1400020ad:	call   0x140025df0
   1400020b2:	lea    r11,[rsp+0x260]
   1400020ba:	mov    rbx,QWORD PTR [r11+0x28]
   1400020be:	mov    rbp,QWORD PTR [r11+0x30]
   1400020c2:	mov    rsi,QWORD PTR [r11+0x38]
   1400020c6:	mov    rsp,r11
   1400020c9:	pop    r15
   1400020cb:	pop    r14
   1400020cd:	pop    rdi
   1400020ce:	ret    
   1400020cf:	int3   
   1400020d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020d5:	push   rbp
   1400020d6:	push   rsi
   1400020d7:	push   rdi
   1400020d8:	push   r12
   1400020da:	push   r13
   1400020dc:	push   r14
   1400020de:	push   r15
   1400020e0:	lea    rbp,[rsp-0x50]
   1400020e5:	sub    rsp,0x150
   1400020ec:	xor    r13d,r13d
   1400020ef:	mov    r15,rcx
   1400020f2:	xor    ecx,ecx
   1400020f4:	mov    QWORD PTR [rsp+0x60],r13
   1400020f9:	mov    QWORD PTR [rsp+0x68],r13
   1400020fe:	mov    edi,r13d
   140002101:	mov    esi,r13d
   140002104:	mov    QWORD PTR [rsp+0x70],r13
   140002109:	mov    r14d,r13d
   14000210c:	mov    ebx,r13d
   14000210f:	mov    r12,rdx
   140002112:	call   QWORD PTR [rip+0x49000]        # 0x14004b118
   140002118:	mov    rcx,r15
   14000211b:	call   QWORD PTR [rip+0x48fd7]        # 0x14004b0f8
   140002121:	cmp    eax,0xffffffff
   140002124:	je     0x140002438
   14000212a:	test   al,0x50
   14000212c:	jne    0x140002438
   140002132:	cmp    QWORD PTR [rip+0x752b7],r13        # 0x1400773f0
   140002139:	jne    0x140002236
   14000213f:	xor    edx,edx
   140002141:	lea    rcx,[rip+0x5bdb8]        # 0x14005df00
   140002148:	call   0x140001974
   14000214d:	mov    QWORD PTR [rip+0x7529c],rax        # 0x1400773f0
   140002154:	test   rax,rax
   140002157:	je     0x140002236
   14000215d:	lea    rdx,[rip+0x5bdb4]        # 0x14005df18
   140002164:	mov    rcx,rax
   140002167:	call   QWORD PTR [rip+0x48f5b]        # 0x14004b0c8
   14000216d:	mov    rcx,QWORD PTR [rip+0x7527c]        # 0x1400773f0
   140002174:	lea    rdx,[rip+0x5bdad]        # 0x14005df28
   14000217b:	mov    QWORD PTR [rip+0x7546e],rax        # 0x1400775f0
   140002182:	call   QWORD PTR [rip+0x48f40]        # 0x14004b0c8
   140002188:	mov    rcx,QWORD PTR [rip+0x75261]        # 0x1400773f0
   14000218f:	lea    rdx,[rip+0x5bda2]        # 0x14005df38
   140002196:	mov    QWORD PTR [rip+0x7532b],rax        # 0x1400774c8
   14000219d:	call   QWORD PTR [rip+0x48f25]        # 0x14004b0c8
   1400021a3:	mov    rcx,QWORD PTR [rip+0x75246]        # 0x1400773f0
   1400021aa:	lea    rdx,[rip+0x5bda7]        # 0x14005df58
   1400021b1:	mov    QWORD PTR [rip+0x75280],rax        # 0x140077438
   1400021b8:	call   QWORD PTR [rip+0x48f0a]        # 0x14004b0c8
   1400021be:	mov    rcx,QWORD PTR [rip+0x7522b]        # 0x1400773f0
   1400021c5:	lea    rdx,[rip+0x5bdac]        # 0x14005df78
   1400021cc:	mov    QWORD PTR [rip+0x75215],rax        # 0x1400773e8
   1400021d3:	call   QWORD PTR [rip+0x48eef]        # 0x14004b0c8
   1400021d9:	mov    rcx,QWORD PTR [rip+0x75210]        # 0x1400773f0
   1400021e0:	lea    rdx,[rip+0x5bda9]        # 0x14005df90
   1400021e7:	mov    QWORD PTR [rip+0x752a2],rax        # 0x140077490
   1400021ee:	call   QWORD PTR [rip+0x48ed4]        # 0x14004b0c8
   1400021f4:	mov    rcx,QWORD PTR [rip+0x751f5]        # 0x1400773f0
   1400021fb:	lea    rdx,[rip+0x5bda6]        # 0x14005dfa8
   140002202:	mov    QWORD PTR [rip+0x752a7],rax        # 0x1400774b0
   140002209:	call   QWORD PTR [rip+0x48eb9]        # 0x14004b0c8
   14000220f:	mov    rcx,QWORD PTR [rip+0x751da]        # 0x1400773f0
   140002216:	lea    rdx,[rip+0x5bda3]        # 0x14005dfc0
   14000221d:	mov    QWORD PTR [rip+0x75234],rax        # 0x140077458
   140002224:	call   QWORD PTR [rip+0x48e9e]        # 0x14004b0c8
   14000222a:	mov    rcx,rax
   14000222d:	mov    QWORD PTR [rip+0x75254],rax        # 0x140077488
   140002234:	jmp    0x14000223d
   140002236:	mov    rcx,QWORD PTR [rip+0x7524b]        # 0x140077488
   14000223d:	cmp    QWORD PTR [rip+0x753ac],r13        # 0x1400775f0
   140002244:	je     0x140002434
   14000224a:	cmp    QWORD PTR [rip+0x75277],r13        # 0x1400774c8
   140002251:	je     0x140002434
   140002257:	cmp    QWORD PTR [rip+0x751da],r13        # 0x140077438
   14000225e:	je     0x140002434
   140002264:	cmp    QWORD PTR [rip+0x7517d],r13        # 0x1400773e8
   14000226b:	je     0x140002434
   140002271:	cmp    QWORD PTR [rip+0x75218],r13        # 0x140077490
   140002278:	je     0x140002434
   14000227e:	mov    rax,QWORD PTR [rip+0x7522b]        # 0x1400774b0
   140002285:	test   rax,rax
   140002288:	je     0x140002434
   14000228e:	cmp    QWORD PTR [rip+0x751c3],r13        # 0x140077458
   140002295:	je     0x140002434
   14000229b:	test   rcx,rcx
   14000229e:	je     0x140002434
   1400022a4:	mov    QWORD PTR [rsp+0x50],r13
   1400022a9:	lea    rcx,[rsp+0x68]
   1400022ae:	mov    QWORD PTR [rsp+0x48],rcx
   1400022b3:	mov    r9d,0x2
   1400022b9:	lea    rcx,[rsp+0x60]
   1400022be:	mov    r8d,0x400
   1400022c4:	mov    QWORD PTR [rsp+0x40],rcx
   1400022c9:	mov    rdx,r15
   1400022cc:	lea    rcx,[rbp+0xa8]
   1400022d3:	mov    QWORD PTR [rsp+0x38],rcx
   1400022d8:	lea    rcx,[rsp+0x78]
   1400022dd:	mov    QWORD PTR [rsp+0x30],rcx
   1400022e2:	lea    rcx,[rsp+0x7c]
   1400022e7:	mov    QWORD PTR [rsp+0x28],rcx
   1400022ec:	lea    ecx,[r9-0x1]
   1400022f0:	mov    DWORD PTR [rsp+0x20],r13d
   1400022f5:	call   rax
   1400022f7:	mov    ebx,eax
   1400022f9:	test   eax,eax
   1400022fb:	jne    0x140002308
   1400022fd:	call   QWORD PTR [rip+0x48ddd]        # 0x14004b0e0
   140002303:	jmp    0x140002443
   140002308:	mov    rcx,QWORD PTR [rsp+0x68]
   14000230d:	lea    rax,[rbp+0xa0]
   140002314:	xor    r9d,r9d
   140002317:	mov    QWORD PTR [rsp+0x20],rax
   14000231c:	xor    r8d,r8d
   14000231f:	lea    r15d,[r9+0x6]
   140002323:	mov    edx,r15d
   140002326:	call   QWORD PTR [rip+0x75164]        # 0x140077490
   14000232c:	mov    ebx,eax
   14000232e:	test   eax,eax
   140002330:	je     0x1400022fd
   140002332:	mov    edx,DWORD PTR [rbp+0xa0]
   140002338:	lea    ecx,[r15+0x3a]
   14000233c:	call   QWORD PTR [rip+0x48dc6]        # 0x14004b108
   140002342:	mov    rdi,rax
   140002345:	test   rax,rax
   140002348:	je     0x1400022fd
   14000234a:	mov    rcx,QWORD PTR [rsp+0x68]
   14000234f:	lea    rax,[rbp+0xa0]
   140002356:	mov    r9,rdi
   140002359:	mov    QWORD PTR [rsp+0x20],rax
   14000235e:	xor    r8d,r8d
   140002361:	mov    edx,r15d
   140002364:	call   QWORD PTR [rip+0x75126]        # 0x140077490
   14000236a:	mov    ebx,eax
   14000236c:	test   eax,eax
   14000236e:	je     0x1400022fd
   140002370:	movups xmm0,XMMWORD PTR [rdi+0x8]
   140002374:	mov    rcx,QWORD PTR [rsp+0x60]
   140002379:	lea    rax,[rbp-0x80]
   14000237d:	mov    r15d,0xb0000
   140002383:	mov    QWORD PTR [rsp+0x28],r13
   140002388:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   14000238d:	mov    r9d,r15d
   140002390:	xor    r8d,r8d
   140002393:	movups xmm1,XMMWORD PTR [rdi+0x18]
   140002397:	mov    edx,0x10001
   14000239c:	mov    QWORD PTR [rsp+0x20],rax
   1400023a1:	movdqu XMMWORD PTR [rbp-0x78],xmm1
   1400023a6:	call   QWORD PTR [rip+0x7503c]        # 0x1400773e8
   1400023ac:	mov    rsi,rax
   1400023af:	test   rax,rax
   1400023b2:	je     0x1400022fd
   1400023b8:	test   r12,r12
   1400023bb:	je     0x1400023d3
   1400023bd:	mov    rcx,rax
   1400023c0:	call   0x1400024a4
   1400023c5:	mov    DWORD PTR [r12],eax
   1400023c9:	call   QWORD PTR [rip+0x48d11]        # 0x14004b0e0
   1400023cf:	test   eax,eax
   1400023d1:	jne    0x140002443
   1400023d3:	lea    rdx,[rsp+0x70]
   1400023d8:	mov    rcx,rdi
   1400023db:	call   0x14000266c
   1400023e0:	mov    r14,QWORD PTR [rsp+0x70]
   1400023e5:	test   eax,eax
   1400023e7:	je     0x140002443
   1400023e9:	movups xmm0,XMMWORD PTR [r14+0x8]
   1400023ee:	mov    rcx,QWORD PTR [rsp+0x60]
   1400023f3:	lea    rax,[rbp-0x80]
   1400023f7:	mov    QWORD PTR [rsp+0x28],r13
   1400023fc:	mov    r9d,r15d
   1400023ff:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140002404:	xor    r8d,r8d
   140002407:	mov    edx,0x10001
   14000240c:	movups xmm1,XMMWORD PTR [r14+0x18]
   140002411:	mov    QWORD PTR [rsp+0x20],rax
   140002416:	movdqu XMMWORD PTR [rbp-0x78],xmm1
   14000241b:	call   QWORD PTR [rip+0x74fc7]        # 0x1400773e8
   140002421:	mov    rsi,rax
   140002424:	test   rax,rax
   140002427:	je     0x1400022fd
   14000242d:	mov    ebx,0x1
   140002432:	jmp    0x140002443
   140002434:	xor    eax,eax
   140002436:	jmp    0x140002487
   140002438:	mov    ecx,0x7e
   14000243d:	call   QWORD PTR [rip+0x48cd5]        # 0x14004b118
   140002443:	mov    rcx,rdi
   140002446:	call   QWORD PTR [rip+0x48c74]        # 0x14004b0c0
   14000244c:	mov    rcx,r14
   14000244f:	call   QWORD PTR [rip+0x48c6b]        # 0x14004b0c0
   140002455:	test   rsi,rsi
   140002458:	je     0x140002463
   14000245a:	mov    rcx,rsi
   14000245d:	call   QWORD PTR [rip+0x74fd5]        # 0x140077438
   140002463:	mov    rcx,QWORD PTR [rsp+0x60]
   140002468:	test   rcx,rcx
   14000246b:	je     0x140002475
   14000246d:	xor    edx,edx
   14000246f:	call   QWORD PTR [rip+0x75053]        # 0x1400774c8
   140002475:	mov    rcx,QWORD PTR [rsp+0x68]
   14000247a:	test   rcx,rcx
   14000247d:	je     0x140002485
   14000247f:	call   QWORD PTR [rip+0x7516b]        # 0x1400775f0
   140002485:	mov    eax,ebx
   140002487:	mov    rbx,QWORD PTR [rsp+0x190]
   14000248f:	add    rsp,0x150
   140002496:	pop    r15
   140002498:	pop    r14
   14000249a:	pop    r13
   14000249c:	pop    r12
   14000249e:	pop    rdi
   14000249f:	pop    rsi
   1400024a0:	pop    rbp
   1400024a1:	ret    
   1400024a2:	int3   
   1400024a3:	int3   
   1400024a4:	mov    r11,rsp
   1400024a7:	mov    QWORD PTR [r11+0x10],rbx
   1400024ab:	mov    QWORD PTR [r11+0x18],rbp
   1400024af:	mov    QWORD PTR [r11+0x20],rsi
   1400024b3:	push   rdi
   1400024b4:	push   r14
   1400024b6:	push   r15
   1400024b8:	sub    rsp,0x70
   1400024bc:	mov    rax,QWORD PTR [rip+0x6eb8d]        # 0x140071050
   1400024c3:	xor    rax,rsp
   1400024c6:	mov    QWORD PTR [rsp+0x68],rax
   1400024cb:	xor    ebx,ebx
   1400024cd:	lea    rax,[rip+0x5bb24]        # 0x14005dff8
   1400024d4:	mov    QWORD PTR [r11-0x38],rax
   1400024d8:	lea    rsi,[rip+0x5baf9]        # 0x14005dfd8
   1400024df:	lea    rax,[rip+0x5bb2a]        # 0x14005e010
   1400024e6:	mov    DWORD PTR [rsp+0x28],ebx
   1400024ea:	mov    QWORD PTR [r11-0x30],rax
   1400024ee:	lea    rbp,[rip+0x5bb43]        # 0x14005e038
   1400024f5:	lea    rax,[rip+0x5bb64]        # 0x14005e060
   1400024fc:	mov    QWORD PTR [r11-0x40],rsi
   140002500:	xor    r9d,r9d
   140002503:	mov    QWORD PTR [r11-0x50],rax
   140002507:	lea    edx,[rbx+0x4]
   14000250a:	mov    QWORD PTR [r11-0x28],rbx
   14000250e:	lea    r8d,[rbx+0x1]
   140002512:	mov    QWORD PTR [r11-0x58],rbp
   140002516:	mov    r15,rcx
   140002519:	mov    QWORD PTR [r11-0x48],rbx
   14000251d:	mov    edi,ebx
   14000251f:	mov    QWORD PTR [r11-0x68],rbx
   140002523:	call   QWORD PTR [rip+0x74f2f]        # 0x140077458
   140002529:	mov    r14d,eax
   14000252c:	test   eax,eax
   14000252e:	jne    0x14000253b
   140002530:	call   QWORD PTR [rip+0x48baa]        # 0x14004b0e0
   140002536:	jmp    0x140002639
   14000253b:	mov    rdx,r14
   14000253e:	mov    ecx,0x40
   140002543:	call   QWORD PTR [rip+0x48bbf]        # 0x14004b108
   140002549:	mov    rdi,rax
   14000254c:	test   rax,rax
   14000254f:	je     0x140002530
   140002551:	xor    r9d,r9d
   140002554:	mov    DWORD PTR [rsp+0x28],r14d
   140002559:	mov    rcx,r15
   14000255c:	mov    QWORD PTR [rsp+0x20],rax
   140002561:	lea    edx,[r9+0x4]
   140002565:	lea    r8d,[r9+0x1]
   140002569:	call   QWORD PTR [rip+0x74ee9]        # 0x140077458
   14000256f:	test   eax,eax
   140002571:	je     0x140002530
   140002573:	mov    r8d,ebx
   140002576:	mov    rax,rdi
   140002579:	sub    rsi,rdi
   14000257c:	movzx  ecx,BYTE PTR [rax]
   14000257f:	movzx  edx,BYTE PTR [rax+rsi*1]
   140002583:	sub    ecx,edx
   140002585:	jne    0x14000258e
   140002587:	inc    rax
   14000258a:	test   edx,edx
   14000258c:	jne    0x14000257c
   14000258e:	test   ecx,ecx
   140002590:	je     0x1400025a4
   140002592:	inc    r8d
   140002595:	mov    rsi,QWORD PTR [rsp+r8*8+0x48]
   14000259a:	test   rsi,rsi
   14000259d:	jne    0x140002576
   14000259f:	jmp    0x140002639
   1400025a4:	mov    rcx,rdi
   1400025a7:	call   QWORD PTR [rip+0x48b13]        # 0x14004b0c0
   1400025ad:	xor    r9d,r9d
   1400025b0:	mov    DWORD PTR [rsp+0x28],ebx
   1400025b4:	xor    r8d,r8d
   1400025b7:	mov    QWORD PTR [rsp+0x20],rbx
   1400025bc:	mov    rcx,r15
   1400025bf:	mov    rdi,rbx
   1400025c2:	lea    edx,[r9+0x4]
   1400025c6:	call   QWORD PTR [rip+0x74e8c]        # 0x140077458
   1400025cc:	mov    esi,eax
   1400025ce:	test   eax,eax
   1400025d0:	je     0x140002530
   1400025d6:	mov    edx,esi
   1400025d8:	mov    ecx,0x40
   1400025dd:	call   QWORD PTR [rip+0x48b25]        # 0x14004b108
   1400025e3:	mov    rdi,rax
   1400025e6:	test   rax,rax
   1400025e9:	je     0x140002530
   1400025ef:	xor    r9d,r9d
   1400025f2:	mov    DWORD PTR [rsp+0x28],esi
   1400025f6:	xor    r8d,r8d
   1400025f9:	mov    QWORD PTR [rsp+0x20],rax
   1400025fe:	mov    rcx,r15
   140002601:	lea    edx,[r9+0x4]
   140002605:	call   QWORD PTR [rip+0x74e4d]        # 0x140077458
   14000260b:	test   eax,eax
   14000260d:	je     0x140002530
   140002613:	mov    esi,ebx
   140002615:	jmp    0x14000262d
   140002617:	mov    rdx,rbp
   14000261a:	mov    rcx,rdi
   14000261d:	call   0x14002c4ac
   140002622:	test   eax,eax
   140002624:	je     0x140002634
   140002626:	inc    esi
   140002628:	mov    rbp,QWORD PTR [rsp+rsi*8+0x30]
   14000262d:	test   rbp,rbp
   140002630:	jne    0x140002617
   140002632:	jmp    0x140002639
   140002634:	mov    ebx,0x1
   140002639:	mov    rcx,rdi
   14000263c:	call   QWORD PTR [rip+0x48a7e]        # 0x14004b0c0
   140002642:	mov    eax,ebx
   140002644:	mov    rcx,QWORD PTR [rsp+0x68]
   140002649:	xor    rcx,rsp
   14000264c:	call   0x140025df0
   140002651:	lea    r11,[rsp+0x70]
   140002656:	mov    rbx,QWORD PTR [r11+0x28]
   14000265a:	mov    rbp,QWORD PTR [r11+0x30]
   14000265e:	mov    rsi,QWORD PTR [r11+0x38]
   140002662:	mov    rsp,r11
   140002665:	pop    r15
   140002667:	pop    r14
   140002669:	pop    rdi
   14000266a:	ret    
   14000266b:	int3   
   14000266c:	mov    QWORD PTR [rsp+0x10],rbx
   140002671:	mov    QWORD PTR [rsp+0x18],rbp
   140002676:	push   rsi
   140002677:	push   rdi
   140002678:	push   r14
   14000267a:	sub    rsp,0x40
   14000267e:	xor    edi,edi
   140002680:	xor    ebx,ebx
   140002682:	and    QWORD PTR [rdx],rdi
   140002685:	mov    r14,rdx
   140002688:	mov    rsi,rcx
   14000268b:	cmp    DWORD PTR [rcx+0x78],ebx
   14000268e:	jbe    0x140002761
   140002694:	test   edi,edi
   140002696:	jne    0x140002761
   14000269c:	mov    rcx,QWORD PTR [rsi+0x80]
   1400026a3:	lea    rbp,[rbx+rbx*2]
   1400026a7:	lea    rdx,[rip+0x5b9ca]        # 0x14005e078
   1400026ae:	mov    rcx,QWORD PTR [rcx+rbp*8]
   1400026b2:	call   QWORD PTR [rip+0x48a38]        # 0x14004b0f0
   1400026b8:	test   eax,eax
   1400026ba:	jne    0x14000274f
   1400026c0:	mov    rax,QWORD PTR [rsi+0x80]
   1400026c7:	mov    edx,0x1f4
   1400026cc:	mov    ecx,0x10001
   1400026d1:	mov    r8,QWORD PTR [rax+rbp*8+0x10]
   1400026d6:	lea    rax,[rsp+0x60]
   1400026db:	mov    QWORD PTR [rsp+0x30],rax
   1400026e0:	and    QWORD PTR [rsp+0x28],0x0
   1400026e6:	and    DWORD PTR [rsp+0x20],edi
   1400026ea:	mov    r9d,DWORD PTR [r8]
   1400026ed:	mov    r8,QWORD PTR [r8+0x8]
   1400026f1:	call   QWORD PTR [rip+0x74d91]        # 0x140077488
   1400026f7:	test   eax,eax
   1400026f9:	je     0x14000275b
   1400026fb:	mov    edx,DWORD PTR [rsp+0x60]
   1400026ff:	lea    ecx,[rdi+0x40]
   140002702:	call   QWORD PTR [rip+0x48a00]        # 0x14004b108
   140002708:	mov    QWORD PTR [r14],rax
   14000270b:	test   rax,rax
   14000270e:	je     0x14000275b
   140002710:	mov    rcx,QWORD PTR [rsi+0x80]
   140002717:	mov    edx,0x1f4
   14000271c:	mov    r8,QWORD PTR [rcx+rbp*8+0x10]
   140002721:	lea    rcx,[rsp+0x60]
   140002726:	mov    QWORD PTR [rsp+0x30],rcx
   14000272b:	mov    ecx,0x10001
   140002730:	mov    QWORD PTR [rsp+0x28],rax
   140002735:	and    DWORD PTR [rsp+0x20],edi
   140002739:	mov    r9d,DWORD PTR [r8]
   14000273c:	mov    r8,QWORD PTR [r8+0x8]
   140002740:	call   QWORD PTR [rip+0x74d42]        # 0x140077488
   140002746:	test   eax,eax
   140002748:	je     0x14000275b
   14000274a:	mov    edi,0x1
   14000274f:	inc    ebx
   140002751:	cmp    ebx,DWORD PTR [rsi+0x78]
   140002754:	jae    0x140002761
   140002756:	jmp    0x140002694
   14000275b:	call   QWORD PTR [rip+0x4897f]        # 0x14004b0e0
   140002761:	mov    rbx,QWORD PTR [rsp+0x68]
   140002766:	mov    eax,edi
   140002768:	mov    rbp,QWORD PTR [rsp+0x70]
   14000276d:	add    rsp,0x40
   140002771:	pop    r14
   140002773:	pop    rdi
   140002774:	pop    rsi
   140002775:	ret    
   140002776:	int3   
   140002777:	int3   
   140002778:	mov    QWORD PTR [rsp+0x18],rbx
   14000277d:	mov    QWORD PTR [rsp+0x20],rsi
   140002782:	push   rbp
   140002783:	push   rdi
   140002784:	push   r12
   140002786:	push   r14
   140002788:	push   r15
   14000278a:	lea    rbp,[rsp-0xf0]
   140002792:	sub    rsp,0x1f0
   140002799:	mov    rax,QWORD PTR [rip+0x6e8b0]        # 0x140071050
   1400027a0:	xor    rax,rsp
   1400027a3:	mov    QWORD PTR [rbp+0xe0],rax
   1400027aa:	movups xmm0,XMMWORD PTR [rip+0x5b8df]        # 0x14005e090
   1400027b1:	mov    rbx,rcx
   1400027b4:	mov    edi,DWORD PTR [rip+0x74cae]        # 0x140077468
   1400027ba:	movsd  xmm1,QWORD PTR [rip+0x5b8de]        # 0x14005e0a0
   1400027c2:	lea    rcx,[rip+0x5b8e7]        # 0x14005e0b0
   1400027c9:	movups XMMWORD PTR [rsp+0x70],xmm0
   1400027ce:	mov    r14d,edx
   1400027d1:	movsd  QWORD PTR [rbp-0x80],xmm1
   1400027d6:	call   QWORD PTR [rip+0x488fc]        # 0x14004b0d8
   1400027dc:	mov    rcx,rbx
   1400027df:	call   QWORD PTR [rip+0x488f3]        # 0x14004b0d8
   1400027e5:	lea    rcx,[rip+0x5b94c]        # 0x14005e138
   1400027ec:	call   QWORD PTR [rip+0x488e6]        # 0x14004b0d8
   1400027f2:	mov    ecx,0x1c
   1400027f7:	lea    r8,[rsp+0x74]
   1400027fc:	lea    r9d,[rcx-0x14]
   140002800:	mov    edx,r14d
   140002803:	shr    edx,cl
   140002805:	and    dx,0xf
   140002809:	cmp    dx,0xa
   14000280d:	sbb    ax,ax
   140002810:	sub    ecx,0x4
   140002813:	and    ax,0xfff9
   140002817:	add    ax,0x37
   14000281b:	add    ax,dx
   14000281e:	mov    WORD PTR [r8],ax
   140002822:	lea    r8,[r8+0x2]
   140002826:	sub    r9,0x1
   14000282a:	jne    0x140002800
   14000282c:	lea    rcx,[rsp+0x70]
   140002831:	call   QWORD PTR [rip+0x488a1]        # 0x14004b0d8
   140002837:	xor    r15d,r15d
   14000283a:	test   edi,edi
   14000283c:	jne    0x140002aea
   140002842:	cmp    DWORD PTR [rip+0x6f36b],r15d        # 0x140071bb4
   140002849:	je     0x140002ad3
   14000284f:	mov    rax,QWORD PTR [rip+0x74baa]        # 0x140077400
   140002856:	mov    r12d,0x100
   14000285c:	mov    DWORD PTR [rsp+0x68],0x2000100
   140002864:	mov    WORD PTR [rsp+0x6c],r15w
   14000286a:	mov    DWORD PTR [rsp+0x58],0x41fcc608
   140002872:	mov    DWORD PTR [rsp+0x5c],0x4def8496
   14000287a:	mov    DWORD PTR [rsp+0x60],0x9b7d3eb4
   140002882:	mov    DWORD PTR [rsp+0x64],0xffa675d6
   14000288a:	mov    DWORD PTR [rip+0x6f323],r15d        # 0x140071bb4
   140002891:	test   rax,rax
   140002894:	jne    0x1400028b0
   140002896:	xor    edx,edx
   140002898:	lea    rcx,[rip+0x5b611]        # 0x14005deb0
   14000289f:	call   0x140001974
   1400028a4:	mov    QWORD PTR [rip+0x74b55],rax        # 0x140077400
   1400028ab:	test   rax,rax
   1400028ae:	je     0x14000292d
   1400028b0:	cmp    QWORD PTR [rip+0x74be9],r15        # 0x1400774a0
   1400028b7:	jne    0x1400028dc
   1400028b9:	lea    rdx,[rip+0x5b898]        # 0x14005e158
   1400028c0:	mov    rcx,rax
   1400028c3:	call   QWORD PTR [rip+0x487ff]        # 0x14004b0c8
   1400028c9:	mov    QWORD PTR [rip+0x74bd0],rax        # 0x1400774a0
   1400028d0:	test   rax,rax
   1400028d3:	je     0x14000292d
   1400028d5:	mov    rax,QWORD PTR [rip+0x74b24]        # 0x140077400
   1400028dc:	cmp    QWORD PTR [rip+0x74b65],r15        # 0x140077448
   1400028e3:	jne    0x140002908
   1400028e5:	lea    rdx,[rip+0x5b87c]        # 0x14005e168
   1400028ec:	mov    rcx,rax
   1400028ef:	call   QWORD PTR [rip+0x487d3]        # 0x14004b0c8
   1400028f5:	mov    QWORD PTR [rip+0x74b4c],rax        # 0x140077448
   1400028fc:	test   rax,rax
   1400028ff:	je     0x14000292d
   140002901:	mov    rax,QWORD PTR [rip+0x74af8]        # 0x140077400
   140002908:	cmp    QWORD PTR [rip+0x74bb1],r15        # 0x1400774c0
   14000290f:	jne    0x140002934
   140002911:	lea    rdx,[rip+0x5b860]        # 0x14005e178
   140002918:	mov    rcx,rax
   14000291b:	call   QWORD PTR [rip+0x487a7]        # 0x14004b0c8
   140002921:	mov    QWORD PTR [rip+0x74b98],rax        # 0x1400774c0
   140002928:	test   rax,rax
   14000292b:	jne    0x140002934
   14000292d:	xor    eax,eax
   14000292f:	jmp    0x140002b04
   140002934:	cmp    QWORD PTR [rip+0x74b3d],r15        # 0x140077478
   14000293b:	jne    0x140002973
   14000293d:	xor    edx,edx
   14000293f:	lea    rcx,[rip+0x5b842]        # 0x14005e188
   140002946:	call   0x140001974
   14000294b:	mov    QWORD PTR [rip+0x74b26],rax        # 0x140077478
   140002952:	test   rax,rax
   140002955:	je     0x140002973
   140002957:	lea    rdx,[rip+0x5b842]        # 0x14005e1a0
   14000295e:	mov    rcx,rax
   140002961:	call   QWORD PTR [rip+0x48761]        # 0x14004b0c8
   140002967:	mov    rbx,rax
   14000296a:	mov    QWORD PTR [rip+0x74b0f],rax        # 0x140077480
   140002971:	jmp    0x14000297a
   140002973:	mov    rbx,QWORD PTR [rip+0x74b06]        # 0x140077480
   14000297a:	test   rbx,rbx
   14000297d:	je     0x14000292d
   14000297f:	xor    edx,edx
   140002981:	lea    rcx,[rbp-0x70]
   140002985:	lea    r8d,[rdx+0x4e]
   140002989:	call   0x14002a910
   14000298e:	mov    r8d,0x27
   140002994:	lea    rdx,[rbp-0x70]
   140002998:	lea    rcx,[rsp+0x58]
   14000299d:	call   rbx
   14000299f:	cmp    eax,0x27
   1400029a2:	jne    0x14000292d
   1400029a4:	lea    rbx,[rsp+0x68]
   1400029a9:	cmp    WORD PTR [rbx],r15w
   1400029ad:	je     0x140002acf
   1400029b3:	movzx  r9d,WORD PTR [rbx]
   1400029b7:	lea    rax,[rsp+0x50]
   1400029bc:	or     r9d,0x20019
   1400029c3:	mov    QWORD PTR [rsp+0x50],r15
   1400029c8:	xor    r8d,r8d
   1400029cb:	mov    QWORD PTR [rsp+0x20],rax
   1400029d0:	lea    rdx,[rip+0x5b7d9]        # 0x14005e1b0
   1400029d7:	mov    rcx,0xffffffff80000002
   1400029de:	call   QWORD PTR [rip+0x74abc]        # 0x1400774a0
   1400029e4:	test   eax,eax
   1400029e6:	jne    0x140002ac3
   1400029ec:	mov    edi,r15d
   1400029ef:	mov    esi,r15d
   1400029f2:	mov    r8,r12
   1400029f5:	mov    DWORD PTR [rsp+0x40],0x80
   1400029fd:	xor    edx,edx
   1400029ff:	mov    DWORD PTR [rsp+0x44],0x4
   140002a07:	lea    rcx,[rbp-0x20]
   140002a0b:	call   0x14002a910
   140002a10:	mov    rcx,QWORD PTR [rsp+0x50]
   140002a15:	lea    rax,[rsp+0x44]
   140002a1a:	mov    QWORD PTR [rsp+0x38],rax
   140002a1f:	lea    r9,[rsp+0x40]
   140002a24:	lea    rax,[rsp+0x48]
   140002a29:	mov    edx,edi
   140002a2b:	mov    QWORD PTR [rsp+0x30],rax
   140002a30:	lea    r8,[rbp-0x20]
   140002a34:	mov    QWORD PTR [rsp+0x28],r15
   140002a39:	mov    QWORD PTR [rsp+0x20],r15
   140002a3e:	call   QWORD PTR [rip+0x74a04]        # 0x140077448
   140002a44:	inc    edi
   140002a46:	mov    r9d,eax
   140002a49:	test   eax,eax
   140002a4b:	jne    0x140002a9c
   140002a4d:	lea    rax,[rbp-0x70]
   140002a51:	or     rcx,0xffffffffffffffff
   140002a55:	inc    rcx
   140002a58:	cmp    WORD PTR [rax+rcx*2],r15w
   140002a5d:	jne    0x140002a55
   140002a5f:	mov    eax,DWORD PTR [rsp+0x40]
   140002a63:	cmp    rcx,rax
   140002a66:	jne    0x1400029f2
   140002a68:	lea    rax,[rbp-0x70]
   140002a6c:	lea    r8,[rbp-0x20]
   140002a70:	sub    r8,rax
   140002a73:	movzx  ecx,WORD PTR [rax]
   140002a76:	movzx  edx,WORD PTR [rax+r8*1]
   140002a7b:	sub    ecx,edx
   140002a7d:	jne    0x140002a87
   140002a7f:	add    rax,0x2
   140002a83:	test   edx,edx
   140002a85:	jne    0x140002a73
   140002a87:	test   ecx,ecx
   140002a89:	jne    0x1400029f2
   140002a8f:	cmp    DWORD PTR [rsp+0x48],r15d
   140002a94:	mov    eax,r15d
   140002a97:	setne  al
   140002a9a:	or     esi,eax
   140002a9c:	cmp    r9d,0x103
   140002aa3:	jne    0x1400029f2
   140002aa9:	mov    rcx,QWORD PTR [rsp+0x50]
   140002aae:	call   QWORD PTR [rip+0x74a0c]        # 0x1400774c0
   140002ab4:	mov    edi,r15d
   140002ab7:	test   esi,esi
   140002ab9:	setne  dil
   140002abd:	mov    DWORD PTR [rip+0x749a5],edi        # 0x140077468
   140002ac3:	add    rbx,0x2
   140002ac7:	test   edi,edi
   140002ac9:	je     0x1400029a9
   140002acf:	test   edi,edi
   140002ad1:	jne    0x140002aea
   140002ad3:	cmp    DWORD PTR [rip+0x7498e],r15d        # 0x140077468
   140002ada:	jne    0x140002aea
   140002adc:	mov    ecx,r14d
   140002adf:	call   QWORD PTR [rip+0x48633]        # 0x14004b118
   140002ae5:	jmp    0x14000292d
   140002aea:	lea    rcx,[rip+0x5b70f]        # 0x14005e200
   140002af1:	call   QWORD PTR [rip+0x485e1]        # 0x14004b0d8
   140002af7:	xor    ecx,ecx
   140002af9:	call   QWORD PTR [rip+0x48619]        # 0x14004b118
   140002aff:	mov    eax,0x1
   140002b04:	mov    rcx,QWORD PTR [rbp+0xe0]
   140002b0b:	xor    rcx,rsp
   140002b0e:	call   0x140025df0
   140002b13:	lea    r11,[rsp+0x1f0]
   140002b1b:	mov    rbx,QWORD PTR [r11+0x40]
   140002b1f:	mov    rsi,QWORD PTR [r11+0x48]
   140002b23:	mov    rsp,r11
   140002b26:	pop    r15
   140002b28:	pop    r14
   140002b2a:	pop    r12
   140002b2c:	pop    rdi
   140002b2d:	pop    rbp
   140002b2e:	ret    
   140002b2f:	int3   
   140002b30:	mov    QWORD PTR [rsp+0x10],rbx
   140002b35:	mov    QWORD PTR [rsp+0x18],rsi
   140002b3a:	push   rbp
   140002b3b:	push   rdi
   140002b3c:	push   r14
   140002b3e:	mov    rbp,rsp
   140002b41:	sub    rsp,0x70
   140002b45:	mov    rax,QWORD PTR [rip+0x6e504]        # 0x140071050
   140002b4c:	xor    rax,rsp
   140002b4f:	mov    QWORD PTR [rbp-0x10],rax
   140002b53:	mov    rsi,rcx
   140002b56:	xor    edi,edi
   140002b58:	xor    ecx,ecx
   140002b5a:	xor    ebx,ebx
   140002b5c:	call   QWORD PTR [rip+0x485b6]        # 0x14004b118
   140002b62:	test   rsi,rsi
   140002b65:	je     0x140002d06
   140002b6b:	mov    rcx,rsi
   140002b6e:	call   0x140001d48
   140002b73:	test   eax,eax
   140002b75:	jne    0x140002d06
   140002b7b:	call   0x140002f24
   140002b80:	mov    r14,rax
   140002b83:	test   rax,rax
   140002b86:	je     0x140002cd3
   140002b8c:	mov    rcx,rsi
   140002b8f:	call   0x140003db0
   140002b94:	mov    rdi,rax
   140002b97:	test   rax,rax
   140002b9a:	je     0x140002cd3
   140002ba0:	mov    rcx,rax
   140002ba3:	call   0x1400033e8
   140002ba8:	lea    rdx,[rip+0x5b699]        # 0x14005e248
   140002baf:	mov    rcx,rax
   140002bb2:	mov    rsi,rax
   140002bb5:	call   0x14002be24
   140002bba:	test   eax,eax
   140002bbc:	je     0x140002bd3
   140002bbe:	call   QWORD PTR [rip+0x4851c]        # 0x14004b0e0
   140002bc4:	test   eax,eax
   140002bc6:	jne    0x140002bd3
   140002bc8:	mov    rcx,rdi
   140002bcb:	call   0x1400040b4
   140002bd0:	mov    rbx,rax
   140002bd3:	lea    rdx,[rip+0x5b67e]        # 0x14005e258
   140002bda:	mov    rcx,rsi
   140002bdd:	call   0x14002be24
   140002be2:	test   eax,eax
   140002be4:	je     0x140002c92
   140002bea:	test   rbx,rbx
   140002bed:	jne    0x140002cd3
   140002bf3:	call   QWORD PTR [rip+0x484e7]        # 0x14004b0e0
   140002bf9:	test   eax,eax
   140002bfb:	jne    0x140002c5e
   140002bfd:	and    QWORD PTR [rbp-0x18],rbx
   140002c01:	lea    rax,[rip+0x5b660]        # 0x14005e268
   140002c08:	and    QWORD PTR [rbp-0x38],rbx
   140002c0c:	lea    r9,[rbp-0x50]
   140002c10:	mov    QWORD PTR [rbp-0x30],rax
   140002c14:	mov    r8,r14
   140002c17:	lea    rax,[rip+0x5b67a]        # 0x14005e298
   140002c1e:	mov    rcx,rdi
   140002c21:	mov    QWORD PTR [rbp-0x28],rax
   140002c25:	lea    rax,[rip+0x5b694]        # 0x14005e2c0
   140002c2c:	mov    QWORD PTR [rbp-0x20],rax
   140002c30:	lea    rax,[rip+0x5b6c1]        # 0x14005e2f8
   140002c37:	mov    QWORD PTR [rbp-0x50],rax
   140002c3b:	lea    rax,[rip+0x5b6de]        # 0x14005e320
   140002c42:	mov    QWORD PTR [rbp-0x48],rax
   140002c46:	lea    rax,[rip+0x5b6fb]        # 0x14005e348
   140002c4d:	mov    QWORD PTR [rbp-0x40],rax
   140002c51:	call   0x1400042fc
   140002c56:	mov    rbx,rax
   140002c59:	test   rax,rax
   140002c5c:	jne    0x140002cd3
   140002c5e:	call   QWORD PTR [rip+0x4847c]        # 0x14004b0e0
   140002c64:	test   eax,eax
   140002c66:	jne    0x140002c97
   140002c68:	and    QWORD PTR [rbp-0x40],0x0
   140002c6d:	lea    rax,[rip+0x5b70c]        # 0x14005e380
   140002c74:	mov    QWORD PTR [rbp-0x50],rax
   140002c78:	lea    r8,[rbp-0x50]
   140002c7c:	lea    rax,[rip+0x5b73d]        # 0x14005e3c0
   140002c83:	mov    rcx,rdi
   140002c86:	mov    QWORD PTR [rbp-0x48],rax
   140002c8a:	call   0x1400044c0
   140002c8f:	mov    rbx,rax
   140002c92:	test   rbx,rbx
   140002c95:	jne    0x140002cd3
   140002c97:	call   QWORD PTR [rip+0x48443]        # 0x14004b0e0
   140002c9d:	test   eax,eax
   140002c9f:	jne    0x140002cd3
   140002ca1:	and    QWORD PTR [rbp-0x48],0x0
   140002ca6:	lea    rax,[rip+0x5b753]        # 0x14005e400
   140002cad:	and    QWORD PTR [rbp-0x28],0x0
   140002cb2:	lea    r9,[rbp-0x30]
   140002cb6:	mov    QWORD PTR [rbp-0x50],rax
   140002cba:	mov    r8,r14
   140002cbd:	lea    rax,[rip+0x5b76c]        # 0x14005e430
   140002cc4:	mov    rcx,rdi
   140002cc7:	mov    QWORD PTR [rbp-0x30],rax
   140002ccb:	call   0x1400042fc
   140002cd0:	mov    rbx,rax
   140002cd3:	mov    rcx,r14
   140002cd6:	call   QWORD PTR [rip+0x483e4]        # 0x14004b0c0
   140002cdc:	mov    rcx,rdi
   140002cdf:	call   QWORD PTR [rip+0x483db]        # 0x14004b0c0
   140002ce5:	test   rbx,rbx
   140002ce8:	je     0x140002cee
   140002cea:	xor    ecx,ecx
   140002cec:	jmp    0x140002cfb
   140002cee:	call   QWORD PTR [rip+0x483ec]        # 0x14004b0e0
   140002cf4:	test   eax,eax
   140002cf6:	jne    0x140002d01
   140002cf8:	lea    ecx,[rax+0x7e]
   140002cfb:	call   QWORD PTR [rip+0x48417]        # 0x14004b118
   140002d01:	mov    rax,rbx
   140002d04:	jmp    0x140002d13
   140002d06:	mov    ecx,0xa0
   140002d0b:	call   QWORD PTR [rip+0x48407]        # 0x14004b118
   140002d11:	xor    eax,eax
   140002d13:	mov    rcx,QWORD PTR [rbp-0x10]
   140002d17:	xor    rcx,rsp
   140002d1a:	call   0x140025df0
   140002d1f:	lea    r11,[rsp+0x70]
   140002d24:	mov    rbx,QWORD PTR [r11+0x28]
   140002d28:	mov    rsi,QWORD PTR [r11+0x30]
   140002d2c:	mov    rsp,r11
   140002d2f:	pop    r14
   140002d31:	pop    rdi
   140002d32:	pop    rbp
   140002d33:	ret    
   140002d34:	mov    QWORD PTR [rsp+0x8],rbx
   140002d39:	mov    QWORD PTR [rsp+0x10],rbp
   140002d3e:	mov    QWORD PTR [rsp+0x18],rsi
   140002d43:	push   rdi
   140002d44:	push   r14
   140002d46:	push   r15
   140002d48:	sub    rsp,0x30
   140002d4c:	mov    rsi,rcx
   140002d4f:	xor    r15d,r15d
   140002d52:	xor    ecx,ecx
   140002d54:	mov    ebx,r15d
   140002d57:	call   QWORD PTR [rip+0x483bb]        # 0x14004b118
   140002d5d:	test   rsi,rsi
   140002d60:	je     0x140002efc
   140002d66:	mov    rcx,rsi
   140002d69:	call   0x140001d48
   140002d6e:	test   eax,eax
   140002d70:	jne    0x140002efc
   140002d76:	mov    rcx,rsi
   140002d79:	call   0x140002b30
   140002d7e:	mov    rdi,rax
   140002d81:	test   rax,rax
   140002d84:	je     0x140002e40
   140002d8a:	call   0x140003384
   140002d8f:	mov    rbp,rax
   140002d92:	test   rax,rax
   140002d95:	je     0x140002e38
   140002d9b:	mov    rcx,rdi
   140002d9e:	call   0x140001d48
   140002da3:	test   eax,eax
   140002da5:	je     0x140002e21
   140002da7:	lea    rax,[rip+0x5b6b2]        # 0x14005e460
   140002dae:	mov    QWORD PTR [rsp+0x20],rax
   140002db3:	lea    rsi,[rsp+0x20]
   140002db8:	lea    rax,[rip+0x5b6b9]        # 0x14005e478
   140002dbf:	mov    QWORD PTR [rsp+0x28],rax
   140002dc4:	mov    rdx,QWORD PTR [rsi]
   140002dc7:	or     r14,0xffffffffffffffff
   140002dcb:	inc    r14
   140002dce:	cmp    WORD PTR [rdx+r14*2],r15w
   140002dd3:	jne    0x140002dcb
   140002dd5:	mov    r8,r14
   140002dd8:	mov    rcx,rdi
   140002ddb:	call   0x14002c5a8
   140002de0:	test   eax,eax
   140002de2:	je     0x140002df4
   140002de4:	add    rsi,0x8
   140002de8:	lea    rax,[rsp+0x30]
   140002ded:	cmp    rsi,rax
   140002df0:	jb     0x140002dc4
   140002df2:	jmp    0x140002e03
   140002df4:	lea    rdx,[rdi+r14*2]
   140002df8:	mov    rcx,rbp
   140002dfb:	call   0x140003520
   140002e00:	mov    rbx,rax
   140002e03:	lea    rax,[rsp+0x30]
   140002e08:	cmp    rsi,rax
   140002e0b:	jne    0x140002e2f
   140002e0d:	mov    rcx,rdi
   140002e10:	call   0x140001d8c
   140002e15:	test   eax,eax
   140002e17:	je     0x140002e2f
   140002e19:	mov    rbx,rdi
   140002e1c:	mov    rdi,r15
   140002e1f:	jmp    0x140002e2f
   140002e21:	mov    rdx,rdi
   140002e24:	mov    rcx,rbp
   140002e27:	call   0x140003520
   140002e2c:	mov    rbx,rax
   140002e2f:	mov    rcx,rbp
   140002e32:	call   QWORD PTR [rip+0x48288]        # 0x14004b0c0
   140002e38:	mov    rcx,rdi
   140002e3b:	jmp    0x140002ed5
   140002e40:	call   QWORD PTR [rip+0x4829a]        # 0x14004b0e0
   140002e46:	cmp    eax,0x7e
   140002e49:	jne    0x140002ee4
   140002e4f:	mov    rcx,rsi
   140002e52:	call   0x140003db0
   140002e57:	mov    rsi,rax
   140002e5a:	test   rax,rax
   140002e5d:	je     0x140002ee4
   140002e63:	mov    ecx,0x37e4
   140002e68:	call   0x140003a40
   140002e6d:	test   eax,eax
   140002e6f:	je     0x140002e78
   140002e71:	call   0x1400030d0
   140002e76:	jmp    0x140002e7d
   140002e78:	call   0x140003384
   140002e7d:	mov    rdi,rax
   140002e80:	test   rax,rax
   140002e83:	je     0x140002ed2
   140002e85:	mov    rdx,rsi
   140002e88:	mov    rcx,rax
   140002e8b:	call   0x140003520
   140002e90:	mov    rbx,rax
   140002e93:	test   rax,rax
   140002e96:	je     0x140002ec9
   140002e98:	mov    rcx,rax
   140002e9b:	call   QWORD PTR [rip+0x48257]        # 0x14004b0f8
   140002ea1:	cmp    eax,0xffffffff
   140002ea4:	je     0x140002eaa
   140002ea6:	test   al,0x50
   140002ea8:	je     0x140002ec9
   140002eaa:	call   QWORD PTR [rip+0x48230]        # 0x14004b0e0
   140002eb0:	cmp    eax,0x2
   140002eb3:	jne    0x140002ebd
   140002eb5:	xor    ecx,ecx
   140002eb7:	call   QWORD PTR [rip+0x4825b]        # 0x14004b118
   140002ebd:	mov    rcx,rbx
   140002ec0:	call   QWORD PTR [rip+0x481fa]        # 0x14004b0c0
   140002ec6:	mov    rbx,r15
   140002ec9:	mov    rcx,rdi
   140002ecc:	call   QWORD PTR [rip+0x481ee]        # 0x14004b0c0
   140002ed2:	mov    rcx,rsi
   140002ed5:	call   QWORD PTR [rip+0x481e5]        # 0x14004b0c0
   140002edb:	test   rbx,rbx
   140002ede:	je     0x140002ee4
   140002ee0:	xor    ecx,ecx
   140002ee2:	jmp    0x140002ef1
   140002ee4:	call   QWORD PTR [rip+0x481f6]        # 0x14004b0e0
   140002eea:	test   eax,eax
   140002eec:	jne    0x140002ef7
   140002eee:	lea    ecx,[rax+0x7e]
   140002ef1:	call   QWORD PTR [rip+0x48221]        # 0x14004b118
   140002ef7:	mov    rax,rbx
   140002efa:	jmp    0x140002f09
   140002efc:	mov    ecx,0xa0
   140002f01:	call   QWORD PTR [rip+0x48211]        # 0x14004b118
   140002f07:	xor    eax,eax
   140002f09:	mov    rbx,QWORD PTR [rsp+0x50]
   140002f0e:	mov    rbp,QWORD PTR [rsp+0x58]
   140002f13:	mov    rsi,QWORD PTR [rsp+0x60]
   140002f18:	add    rsp,0x30
   140002f1c:	pop    r15
   140002f1e:	pop    r14
   140002f20:	pop    rdi
   140002f21:	ret    
   140002f22:	int3   
   140002f23:	int3   
   140002f24:	mov    QWORD PTR [rsp+0x8],rbx
   140002f29:	mov    QWORD PTR [rsp+0x10],rdi
   140002f2e:	push   rbp
   140002f2f:	mov    rbp,rsp
   140002f32:	sub    rsp,0x80
   140002f39:	mov    rax,QWORD PTR [rip+0x6e110]        # 0x140071050
   140002f40:	xor    rax,rsp
   140002f43:	mov    QWORD PTR [rbp-0x10],rax
   140002f47:	and    QWORD PTR [rbp-0x38],0x0
   140002f4c:	xor    eax,eax
   140002f4e:	and    DWORD PTR [rbp-0x2c],0x0
   140002f52:	xor    ecx,ecx
   140002f54:	mov    QWORD PTR [rbp-0x28],rax
   140002f58:	xor    ebx,ebx
   140002f5a:	mov    QWORD PTR [rbp-0x20],rax
   140002f5e:	xor    edi,edi
   140002f60:	mov    QWORD PTR [rbp-0x18],rax
   140002f64:	mov    DWORD PTR [rbp-0x30],0x20
   140002f6b:	call   QWORD PTR [rip+0x481a7]        # 0x14004b118
   140002f71:	mov    rax,QWORD PTR [rip+0x744f8]        # 0x140077470
   140002f78:	test   rax,rax
   140002f7b:	jne    0x140002f97
   140002f7d:	xor    edx,edx
   140002f7f:	lea    rcx,[rip+0x5b57a]        # 0x14005e500
   140002f86:	call   0x140001974
   140002f8b:	mov    QWORD PTR [rip+0x744de],rax        # 0x140077470
   140002f92:	test   rax,rax
   140002f95:	je     0x140002ff9
   140002f97:	cmp    QWORD PTR [rip+0x74442],rbx        # 0x1400773e0
   140002f9e:	jne    0x140002fc3
   140002fa0:	lea    rdx,[rip+0x5b579]        # 0x14005e520
   140002fa7:	mov    rcx,rax
   140002faa:	call   QWORD PTR [rip+0x48118]        # 0x14004b0c8
   140002fb0:	mov    QWORD PTR [rip+0x74429],rax        # 0x1400773e0
   140002fb7:	test   rax,rax
   140002fba:	je     0x140002ff9
   140002fbc:	mov    rax,QWORD PTR [rip+0x744ad]        # 0x140077470
   140002fc3:	cmp    QWORD PTR [rip+0x74446],rbx        # 0x140077410
   140002fca:	jne    0x140002fe8
   140002fcc:	lea    rdx,[rip+0x5b575]        # 0x14005e548
   140002fd3:	mov    rcx,rax
   140002fd6:	call   QWORD PTR [rip+0x480ec]        # 0x14004b0c8
   140002fdc:	mov    QWORD PTR [rip+0x7442d],rax        # 0x140077410
   140002fe3:	test   rax,rax
   140002fe6:	je     0x140002ff9
   140002fe8:	lea    r8,[rbp-0x30]
   140002fec:	lea    rdx,[rbp-0x38]
   140002ff0:	call   0x140003b08
   140002ff5:	test   eax,eax
   140002ff7:	jne    0x140003000
   140002ff9:	xor    eax,eax
   140002ffb:	jmp    0x1400030ac
   140003000:	mov    rcx,QWORD PTR [rbp-0x38]
   140003004:	lea    rax,[rbp-0x40]
   140003008:	and    DWORD PTR [rbp-0x40],ebx
   14000300b:	lea    rdx,[rbp-0x30]
   14000300f:	mov    QWORD PTR [rsp+0x30],rax
   140003014:	xor    r9d,r9d
   140003017:	and    DWORD PTR [rsp+0x28],ebx
   14000301b:	and    QWORD PTR [rsp+0x20],rbx
   140003020:	lea    r8d,[r9+0x9]
   140003024:	call   QWORD PTR [rip+0x743b6]        # 0x1400773e0
   14000302a:	mov    eax,DWORD PTR [rbp-0x40]
   14000302d:	test   eax,eax
   14000302f:	je     0x140003082
   140003031:	mov    edx,eax
   140003033:	mov    ecx,0x40
   140003038:	call   QWORD PTR [rip+0x480ca]        # 0x14004b108
   14000303e:	mov    rbx,rax
   140003041:	test   rax,rax
   140003044:	je     0x140003082
   140003046:	mov    ecx,DWORD PTR [rbp-0x40]
   140003049:	lea    rdx,[rbp-0x30]
   14000304d:	and    QWORD PTR [rsp+0x30],rdi
   140003052:	xor    r9d,r9d
   140003055:	mov    DWORD PTR [rsp+0x28],ecx
   140003059:	mov    rcx,QWORD PTR [rbp-0x38]
   14000305d:	mov    QWORD PTR [rsp+0x20],rax
   140003062:	lea    r8d,[r9+0x9]
   140003066:	call   QWORD PTR [rip+0x74374]        # 0x1400773e0
   14000306c:	test   eax,eax
   14000306e:	je     0x140003082
   140003070:	mov    rdx,rbx
   140003073:	lea    rcx,[rip+0x5b436]        # 0x14005e4b0
   14000307a:	call   0x140003520
   14000307f:	mov    rdi,rax
   140003082:	mov    rcx,rbx
   140003085:	call   QWORD PTR [rip+0x48035]        # 0x14004b0c0
   14000308b:	cmp    QWORD PTR [rbp-0x38],0x0
   140003090:	je     0x14000309c
   140003092:	mov    rcx,QWORD PTR [rbp-0x38]
   140003096:	call   QWORD PTR [rip+0x74374]        # 0x140077410
   14000309c:	test   rdi,rdi
   14000309f:	je     0x1400030a9
   1400030a1:	xor    ecx,ecx
   1400030a3:	call   QWORD PTR [rip+0x4806f]        # 0x14004b118
   1400030a9:	mov    rax,rdi
   1400030ac:	mov    rcx,QWORD PTR [rbp-0x10]
   1400030b0:	xor    rcx,rsp
   1400030b3:	call   0x140025df0
   1400030b8:	lea    r11,[rsp+0x80]
   1400030c0:	mov    rbx,QWORD PTR [r11+0x10]
   1400030c4:	mov    rdi,QWORD PTR [r11+0x18]
   1400030c8:	mov    rsp,r11
   1400030cb:	pop    rbp
   1400030cc:	ret    
   1400030cd:	int3   
   1400030ce:	int3   
   1400030cf:	int3   
   1400030d0:	mov    rax,rsp
   1400030d3:	mov    QWORD PTR [rax+0x8],rbx
   1400030d7:	mov    QWORD PTR [rax+0x10],rsi
   1400030db:	mov    QWORD PTR [rax+0x18],r14
   1400030df:	mov    QWORD PTR [rax+0x20],r15
   1400030e3:	push   rbp
   1400030e4:	mov    rbp,rsp
   1400030e7:	sub    rsp,0x80
   1400030ee:	mov    rax,QWORD PTR [rip+0x6df5b]        # 0x140071050
   1400030f5:	xor    rax,rsp
   1400030f8:	mov    QWORD PTR [rbp-0x10],rax
   1400030fc:	xor    r15d,r15d
   1400030ff:	mov    QWORD PTR [rbp-0x30],0x20
   140003107:	xor    eax,eax
   140003109:	mov    QWORD PTR [rbp-0x38],r15
   14000310d:	xor    ecx,ecx
   14000310f:	mov    QWORD PTR [rbp-0x28],rax
   140003113:	mov    QWORD PTR [rbp-0x20],rax
   140003117:	mov    esi,r15d
   14000311a:	mov    QWORD PTR [rbp-0x18],rax
   14000311e:	mov    ebx,r15d
   140003121:	mov    r14d,r15d
   140003124:	call   QWORD PTR [rip+0x47fee]        # 0x14004b118
   14000312a:	mov    ecx,0x1770
   14000312f:	call   0x140003a40
   140003134:	test   eax,eax
   140003136:	jne    0x140003148
   140003138:	lea    ecx,[rax+0x78]
   14000313b:	call   QWORD PTR [rip+0x47fd7]        # 0x14004b118
   140003141:	xor    eax,eax
   140003143:	jmp    0x140003359
   140003148:	mov    rax,QWORD PTR [rip+0x74321]        # 0x140077470
   14000314f:	test   rax,rax
   140003152:	jne    0x14000316e
   140003154:	xor    edx,edx
   140003156:	lea    rcx,[rip+0x5b3a3]        # 0x14005e500
   14000315d:	call   0x140001974
   140003162:	mov    QWORD PTR [rip+0x74307],rax        # 0x140077470
   140003169:	test   rax,rax
   14000316c:	je     0x140003141
   14000316e:	cmp    QWORD PTR [rip+0x742cb],r15        # 0x140077440
   140003175:	jne    0x14000319a
   140003177:	lea    rdx,[rip+0x5b3ea]        # 0x14005e568
   14000317e:	mov    rcx,rax
   140003181:	call   QWORD PTR [rip+0x47f41]        # 0x14004b0c8
   140003187:	mov    QWORD PTR [rip+0x742b2],rax        # 0x140077440
   14000318e:	test   rax,rax
   140003191:	je     0x140003141
   140003193:	mov    rax,QWORD PTR [rip+0x742d6]        # 0x140077470
   14000319a:	cmp    QWORD PTR [rip+0x74267],r15        # 0x140077408
   1400031a1:	jne    0x1400031c6
   1400031a3:	lea    rdx,[rip+0x5b3de]        # 0x14005e588
   1400031aa:	mov    rcx,rax
   1400031ad:	call   QWORD PTR [rip+0x47f15]        # 0x14004b0c8
   1400031b3:	mov    QWORD PTR [rip+0x7424e],rax        # 0x140077408
   1400031ba:	test   rax,rax
   1400031bd:	je     0x140003141
   1400031bf:	mov    rax,QWORD PTR [rip+0x742aa]        # 0x140077470
   1400031c6:	cmp    QWORD PTR [rip+0x74243],r15        # 0x140077410
   1400031cd:	jne    0x1400031ef
   1400031cf:	lea    rdx,[rip+0x5b372]        # 0x14005e548
   1400031d6:	mov    rcx,rax
   1400031d9:	call   QWORD PTR [rip+0x47ee9]        # 0x14004b0c8
   1400031df:	mov    QWORD PTR [rip+0x7422a],rax        # 0x140077410
   1400031e6:	test   rax,rax
   1400031e9:	je     0x140003141
   1400031ef:	lea    r8,[rbp-0x30]
   1400031f3:	lea    rdx,[rbp-0x38]
   1400031f7:	call   0x140003b08
   1400031fc:	test   eax,eax
   1400031fe:	je     0x140003141
   140003204:	mov    rcx,QWORD PTR [rbp-0x38]
   140003208:	lea    rax,[rbp-0x40]
   14000320c:	mov    DWORD PTR [rsp+0x38],r15d
   140003211:	lea    r9,[rbp-0x3c]
   140003215:	mov    QWORD PTR [rsp+0x30],rax
   14000321a:	lea    r8,[rip+0x5b50f]        # 0x14005e730
   140003221:	mov    DWORD PTR [rsp+0x28],r15d
   140003226:	lea    rdx,[rbp-0x30]
   14000322a:	mov    QWORD PTR [rsp+0x20],r15
   14000322f:	mov    DWORD PTR [rbp-0x40],r15d
   140003233:	mov    DWORD PTR [rbp-0x3c],r15d
   140003237:	call   QWORD PTR [rip+0x74203]        # 0x140077440
   14000323d:	mov    eax,DWORD PTR [rbp-0x40]
   140003240:	test   eax,eax
   140003242:	je     0x140003327
   140003248:	mov    edx,eax
   14000324a:	mov    ecx,0x40
   14000324f:	add    rdx,rdx
   140003252:	call   QWORD PTR [rip+0x47eb0]        # 0x14004b108
   140003258:	mov    rsi,rax
   14000325b:	test   rax,rax
   14000325e:	je     0x140003327
   140003264:	mov    ecx,DWORD PTR [rbp-0x40]
   140003267:	lea    r9,[rbp-0x3c]
   14000326b:	mov    DWORD PTR [rsp+0x38],r15d
   140003270:	lea    r8,[rip+0x5b4b9]        # 0x14005e730
   140003277:	mov    QWORD PTR [rsp+0x30],r15
   14000327c:	lea    rdx,[rbp-0x30]
   140003280:	mov    DWORD PTR [rsp+0x28],ecx
   140003284:	mov    rcx,QWORD PTR [rbp-0x38]
   140003288:	mov    QWORD PTR [rsp+0x20],rax
   14000328d:	call   QWORD PTR [rip+0x741ad]        # 0x140077440
   140003293:	test   eax,eax
   140003295:	je     0x140003327
   14000329b:	lea    rax,[rbp-0x40]
   14000329f:	xor    r9d,r9d
   1400032a2:	mov    QWORD PTR [rsp+0x28],rax
   1400032a7:	xor    r8d,r8d
   1400032aa:	xor    edx,edx
   1400032ac:	mov    DWORD PTR [rsp+0x20],r15d
   1400032b1:	mov    rcx,rsi
   1400032b4:	call   QWORD PTR [rip+0x7414e]        # 0x140077408
   1400032ba:	mov    eax,DWORD PTR [rbp-0x40]
   1400032bd:	test   eax,eax
   1400032bf:	je     0x140003327
   1400032c1:	mov    edx,eax
   1400032c3:	mov    ecx,0x40
   1400032c8:	add    rdx,rdx
   1400032cb:	call   QWORD PTR [rip+0x47e37]        # 0x14004b108
   1400032d1:	mov    rbx,rax
   1400032d4:	test   rax,rax
   1400032d7:	je     0x140003327
   1400032d9:	mov    ecx,DWORD PTR [rbp-0x40]
   1400032dc:	mov    r9,rax
   1400032df:	mov    QWORD PTR [rsp+0x28],r15
   1400032e4:	xor    r8d,r8d
   1400032e7:	mov    DWORD PTR [rsp+0x20],ecx
   1400032eb:	xor    edx,edx
   1400032ed:	mov    rcx,rsi
   1400032f0:	call   QWORD PTR [rip+0x74112]        # 0x140077408
   1400032f6:	test   eax,eax
   1400032f8:	je     0x140003327
   1400032fa:	mov    edx,0x5c
   1400032ff:	mov    rcx,rbx
   140003302:	call   0x140028e54
   140003307:	lea    rdx,[rax+0x2]
   14000330b:	test   rax,rax
   14000330e:	jne    0x140003313
   140003310:	mov    rdx,rbx
   140003313:	sub    rdx,rbx
   140003316:	mov    rcx,rbx
   140003319:	sar    rdx,1
   14000331c:	dec    rdx
   14000331f:	call   0x140003724
   140003324:	mov    r14,rax
   140003327:	mov    rcx,rbx
   14000332a:	call   QWORD PTR [rip+0x47d90]        # 0x14004b0c0
   140003330:	mov    rcx,rsi
   140003333:	call   QWORD PTR [rip+0x47d87]        # 0x14004b0c0
   140003339:	cmp    QWORD PTR [rbp-0x38],r15
   14000333d:	je     0x140003349
   14000333f:	mov    rcx,QWORD PTR [rbp-0x38]
   140003343:	call   QWORD PTR [rip+0x740c7]        # 0x140077410
   140003349:	test   r14,r14
   14000334c:	je     0x140003356
   14000334e:	xor    ecx,ecx
   140003350:	call   QWORD PTR [rip+0x47dc2]        # 0x14004b118
   140003356:	mov    rax,r14
   140003359:	mov    rcx,QWORD PTR [rbp-0x10]
   14000335d:	xor    rcx,rsp
   140003360:	call   0x140025df0
   140003365:	lea    r11,[rsp+0x80]
   14000336d:	mov    rbx,QWORD PTR [r11+0x10]
   140003371:	mov    rsi,QWORD PTR [r11+0x18]
   140003375:	mov    r14,QWORD PTR [r11+0x20]
   140003379:	mov    r15,QWORD PTR [r11+0x28]
   14000337d:	mov    rsp,r11
   140003380:	pop    rbp
   140003381:	ret    
   140003382:	int3   
   140003383:	int3   
   140003384:	mov    QWORD PTR [rsp+0x8],rbx
   140003389:	push   rdi
   14000338a:	sub    rsp,0x20
   14000338e:	xor    ecx,ecx
   140003390:	call   QWORD PTR [rip+0x47d82]        # 0x14004b118
   140003396:	xor    edx,edx
   140003398:	xor    ecx,ecx
   14000339a:	call   QWORD PTR [rip+0x47d48]        # 0x14004b0e8
   1400033a0:	mov    edx,eax
   1400033a2:	mov    ecx,0x40
   1400033a7:	add    rdx,rdx
   1400033aa:	mov    edi,eax
   1400033ac:	call   QWORD PTR [rip+0x47d56]        # 0x14004b108
   1400033b2:	mov    rbx,rax
   1400033b5:	test   rax,rax
   1400033b8:	je     0x1400033d8
   1400033ba:	mov    edx,edi
   1400033bc:	mov    rcx,rax
   1400033bf:	call   QWORD PTR [rip+0x47d23]        # 0x14004b0e8
   1400033c5:	test   eax,eax
   1400033c7:	je     0x1400033cd
   1400033c9:	cmp    edi,eax
   1400033cb:	jae    0x1400033d8
   1400033cd:	mov    rcx,rbx
   1400033d0:	call   QWORD PTR [rip+0x47cea]        # 0x14004b0c0
   1400033d6:	xor    ebx,ebx
   1400033d8:	mov    rax,rbx
   1400033db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033e0:	add    rsp,0x20
   1400033e4:	pop    rdi
   1400033e5:	ret    
   1400033e6:	int3   
   1400033e7:	int3   
   1400033e8:	mov    rdx,rcx
   1400033eb:	or     rax,0xffffffffffffffff
   1400033ef:	inc    rax
   1400033f2:	cmp    WORD PTR [rcx+rax*2],0x0
   1400033f7:	jne    0x1400033ef
   1400033f9:	lea    rax,[rcx+rax*2]
   1400033fd:	mov    r9d,0x2e
   140003403:	mov    rcx,rax
   140003406:	cmp    rdx,rax
   140003409:	jae    0x140003426
   14000340b:	mov    r8d,0x5c
   140003411:	cmp    r8w,WORD PTR [rcx]
   140003415:	je     0x140003426
   140003417:	cmp    r9w,WORD PTR [rcx]
   14000341b:	je     0x14000342a
   14000341d:	sub    rcx,0x2
   140003421:	cmp    rdx,rcx
   140003424:	jb     0x14000340b
   140003426:	cmp    r9w,WORD PTR [rcx]
   14000342a:	cmove  rax,rcx
   14000342e:	ret    
   14000342f:	int3   
   140003430:	mov    rax,rsp
   140003433:	mov    QWORD PTR [rax+0x8],rbx
   140003437:	mov    QWORD PTR [rax+0x10],rbp
   14000343b:	mov    QWORD PTR [rax+0x18],rsi
   14000343f:	mov    QWORD PTR [rax+0x20],rdi
   140003443:	push   r14
   140003445:	sub    rsp,0x20
   140003449:	mov    rsi,rdx
   14000344c:	mov    rdi,rcx
   14000344f:	mov    edx,0x5c
   140003454:	call   0x140028e54
   140003459:	xor    ebx,ebx
   14000345b:	test   rax,rax
   14000345e:	je     0x140003464
   140003460:	lea    rdi,[rax+0x2]
   140003464:	mov    rdx,rsi
   140003467:	mov    rcx,rdi
   14000346a:	call   0x14002be24
   14000346f:	test   eax,eax
   140003471:	jne    0x14000347d
   140003473:	mov    eax,0x1
   140003478:	jmp    0x140003503
   14000347d:	mov    rcx,rdi
   140003480:	call   0x1400033e8
   140003485:	mov    rcx,rsi
   140003488:	mov    r14,rax
   14000348b:	call   0x1400033e8
   140003490:	mov    rbp,rax
   140003493:	mov    rcx,r14
   140003496:	sub    rbp,rsi
   140003499:	sub    rcx,rdi
   14000349c:	sar    rbp,1
   14000349f:	mov    r10,rax
   1400034a2:	sar    rcx,1
   1400034a5:	cmp    rcx,rbp
   1400034a8:	je     0x1400034ae
   1400034aa:	xor    eax,eax
   1400034ac:	jmp    0x140003503
   1400034ae:	movzx  eax,WORD PTR [rip+0x5a9e3]        # 0x14005de98
   1400034b5:	cmp    WORD PTR [r10],ax
   1400034b9:	je     0x1400034d5
   1400034bb:	lea    rdx,[rip+0x5ad86]        # 0x14005e248
   1400034c2:	mov    rcx,r10
   1400034c5:	call   0x14002be24
   1400034ca:	test   eax,eax
   1400034cc:	jne    0x1400034aa
   1400034ce:	movzx  eax,WORD PTR [rip+0x5a9c3]        # 0x14005de98
   1400034d5:	cmp    WORD PTR [r14],ax
   1400034d9:	je     0x1400034ee
   1400034db:	lea    rdx,[rip+0x5ad66]        # 0x14005e248
   1400034e2:	mov    rcx,r14
   1400034e5:	call   0x14002be24
   1400034ea:	test   eax,eax
   1400034ec:	jne    0x1400034aa
   1400034ee:	mov    r8,rbp
   1400034f1:	mov    rdx,rsi
   1400034f4:	mov    rcx,rdi
   1400034f7:	call   0x14002c5a8
   1400034fc:	test   eax,eax
   1400034fe:	sete   bl
   140003501:	mov    eax,ebx
   140003503:	mov    rbx,QWORD PTR [rsp+0x30]
   140003508:	mov    rbp,QWORD PTR [rsp+0x38]
   14000350d:	mov    rsi,QWORD PTR [rsp+0x40]
   140003512:	mov    rdi,QWORD PTR [rsp+0x48]
   140003517:	add    rsp,0x20
   14000351b:	pop    r14
   14000351d:	ret    
   14000351e:	int3   
   14000351f:	int3   
   140003520:	mov    QWORD PTR [rsp+0x8],rbx
   140003525:	mov    QWORD PTR [rsp+0x10],rbp
   14000352a:	mov    QWORD PTR [rsp+0x18],rsi
   14000352f:	push   rdi
   140003530:	push   r14
   140003532:	push   r15
   140003534:	sub    rsp,0x20
   140003538:	xor    r15d,r15d
   14000353b:	mov    rsi,rdx
   14000353e:	mov    rdi,rcx
   140003541:	test   rcx,rcx
   140003544:	jne    0x140003553
   140003546:	mov    rcx,rdx
   140003549:	call   0x14000366c
   14000354e:	jmp    0x140003650
   140003553:	test   rsi,rsi
   140003556:	je     0x140003549
   140003558:	or     rdx,0xffffffffffffffff
   14000355c:	mov    rcx,rdx
   14000355f:	inc    rcx
   140003562:	cmp    WORD PTR [rdi+rcx*2],r15w
   140003567:	jne    0x14000355f
   140003569:	inc    rdx
   14000356c:	cmp    WORD PTR [rsi+rdx*2],r15w
   140003571:	jne    0x140003569
   140003573:	test   rcx,rcx
   140003576:	je     0x140003590
   140003578:	cmp    WORD PTR [rdi+rcx*2-0x2],0x5c
   14000357e:	je     0x140003590
   140003580:	test   rdx,rdx
   140003583:	je     0x140003590
   140003585:	cmp    WORD PTR [rsi],0x5c
   140003589:	mov    ebp,0x1
   14000358e:	jne    0x140003593
   140003590:	mov    ebp,r15d
   140003593:	mov    eax,ebp
   140003595:	add    rax,rdx
   140003598:	add    rax,rcx
   14000359b:	mov    ecx,0x40
   1400035a0:	lea    r14,[rax*2+0x2]
   1400035a8:	mov    rdx,r14
   1400035ab:	call   QWORD PTR [rip+0x47b57]        # 0x14004b108
   1400035b1:	mov    rbx,rax
   1400035b4:	test   rax,rax
   1400035b7:	je     0x14000364d
   1400035bd:	mov    rdx,r14
   1400035c0:	mov    r8d,0x7ffffffe
   1400035c6:	shr    rdx,1
   1400035c9:	lea    rcx,[rdx-0x1]
   1400035cd:	cmp    rcx,r8
   1400035d0:	ja     0x140003641
   1400035d2:	sub    r8,rdx
   1400035d5:	mov    rcx,rax
   1400035d8:	sub    rdi,rax
   1400035db:	mov    r9d,r15d
   1400035de:	lea    rax,[r8+rdx*1]
   1400035e2:	test   rax,rax
   1400035e5:	je     0x1400035fd
   1400035e7:	movzx  eax,WORD PTR [rdi+rcx*1]
   1400035eb:	test   ax,ax
   1400035ee:	je     0x1400035fd
   1400035f0:	mov    WORD PTR [rcx],ax
   1400035f3:	add    rcx,0x2
   1400035f7:	sub    rdx,0x1
   1400035fb:	jne    0x1400035de
   1400035fd:	test   rdx,rdx
   140003600:	jne    0x14000360c
   140003602:	sub    rcx,0x2
   140003606:	mov    r9d,0x8007007a
   14000360c:	mov    WORD PTR [rcx],r15w
   140003610:	test   r9d,r9d
   140003613:	js     0x140003641
   140003615:	test   ebp,ebp
   140003617:	je     0x14000362f
   140003619:	lea    r8,[rip+0x5a8dc]        # 0x14005defc
   140003620:	mov    rdx,r14
   140003623:	mov    rcx,rbx
   140003626:	call   0x1400018a0
   14000362b:	test   eax,eax
   14000362d:	js     0x140003641
   14000362f:	mov    r8,rsi
   140003632:	mov    rdx,r14
   140003635:	mov    rcx,rbx
   140003638:	call   0x1400018a0
   14000363d:	test   eax,eax
   14000363f:	jns    0x14000364d
   140003641:	mov    rcx,rbx
   140003644:	call   QWORD PTR [rip+0x47a76]        # 0x14004b0c0
   14000364a:	mov    rbx,r15
   14000364d:	mov    rax,rbx
   140003650:	mov    rbx,QWORD PTR [rsp+0x40]
   140003655:	mov    rbp,QWORD PTR [rsp+0x48]
   14000365a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000365f:	add    rsp,0x20
   140003663:	pop    r15
   140003665:	pop    r14
   140003667:	pop    rdi
   140003668:	ret    
   140003669:	int3   
   14000366a:	int3   
   14000366b:	int3   
   14000366c:	mov    QWORD PTR [rsp+0x8],rbx
   140003671:	mov    QWORD PTR [rsp+0x10],rsi
   140003676:	push   rdi
   140003677:	sub    rsp,0x20
   14000367b:	xor    esi,esi
   14000367d:	mov    rdi,rcx
   140003680:	test   rcx,rcx
   140003683:	jne    0x14000368c
   140003685:	xor    eax,eax
   140003687:	jmp    0x140003713
   14000368c:	or     rbx,0xffffffffffffffff
   140003690:	inc    rbx
   140003693:	cmp    WORD PTR [rcx+rbx*2],si
   140003697:	jne    0x140003690
   140003699:	inc    rbx
   14000369c:	mov    ecx,0x40
   1400036a1:	lea    rdx,[rbx+rbx*1]
   1400036a5:	call   QWORD PTR [rip+0x47a5d]        # 0x14004b108
   1400036ab:	mov    rdx,rax
   1400036ae:	test   rax,rax
   1400036b1:	je     0x140003685
   1400036b3:	lea    rax,[rbx-0x1]
   1400036b7:	mov    r8d,0x7ffffffe
   1400036bd:	cmp    rax,r8
   1400036c0:	ja     0x140003704
   1400036c2:	sub    r8,rbx
   1400036c5:	mov    rcx,rdx
   1400036c8:	sub    rdi,rdx
   1400036cb:	mov    r9d,esi
   1400036ce:	lea    rax,[r8+rbx*1]
   1400036d2:	test   rax,rax
   1400036d5:	je     0x1400036ed
   1400036d7:	movzx  eax,WORD PTR [rdi+rcx*1]
   1400036db:	test   ax,ax
   1400036de:	je     0x1400036ed
   1400036e0:	mov    WORD PTR [rcx],ax
   1400036e3:	add    rcx,0x2
   1400036e7:	sub    rbx,0x1
   1400036eb:	jne    0x1400036ce
   1400036ed:	test   rbx,rbx
   1400036f0:	jne    0x1400036fc
   1400036f2:	sub    rcx,0x2
   1400036f6:	mov    r9d,0x8007007a
   1400036fc:	mov    WORD PTR [rcx],si
   1400036ff:	test   r9d,r9d
   140003702:	jns    0x140003710
   140003704:	mov    rcx,rdx
   140003707:	call   QWORD PTR [rip+0x479b3]        # 0x14004b0c0
   14000370d:	mov    rdx,rsi
   140003710:	mov    rax,rdx
   140003713:	mov    rbx,QWORD PTR [rsp+0x30]
   140003718:	mov    rsi,QWORD PTR [rsp+0x38]
   14000371d:	add    rsp,0x20
   140003721:	pop    rdi
   140003722:	ret    
   140003723:	int3   
   140003724:	mov    QWORD PTR [rsp+0x8],rbx
   140003729:	mov    QWORD PTR [rsp+0x10],rbp
   14000372e:	mov    QWORD PTR [rsp+0x18],rsi
   140003733:	push   rdi
   140003734:	sub    rsp,0x20
   140003738:	xor    ebp,ebp
   14000373a:	mov    rdi,rdx
   14000373d:	mov    rsi,rcx
   140003740:	test   rcx,rcx
   140003743:	je     0x1400037eb
   140003749:	test   rdx,rdx
   14000374c:	js     0x1400037eb
   140003752:	or     rbx,0xffffffffffffffff
   140003756:	inc    rbx
   140003759:	cmp    WORD PTR [rcx+rbx*2],bp
   14000375d:	jne    0x140003756
   14000375f:	cmp    rdi,rbx
   140003762:	mov    ecx,0x40
   140003767:	cmovb  rbx,rdi
   14000376b:	inc    rbx
   14000376e:	lea    rdx,[rbx+rbx*1]
   140003772:	call   QWORD PTR [rip+0x47990]        # 0x14004b108
   140003778:	mov    rdx,rax
   14000377b:	test   rax,rax
   14000377e:	je     0x1400037eb
   140003780:	lea    rax,[rbx-0x1]
   140003784:	mov    ecx,0x7ffffffe
   140003789:	cmp    rax,rcx
   14000378c:	ja     0x1400037da
   14000378e:	cmp    rdi,rcx
   140003791:	jbe    0x140003798
   140003793:	mov    WORD PTR [rdx],bp
   140003796:	jmp    0x1400037da
   140003798:	sub    rdi,rbx
   14000379b:	mov    rcx,rdx
   14000379e:	sub    rsi,rdx
   1400037a1:	mov    r8d,ebp
   1400037a4:	lea    rax,[rdi+rbx*1]
   1400037a8:	test   rax,rax
   1400037ab:	je     0x1400037c3
   1400037ad:	movzx  eax,WORD PTR [rsi+rcx*1]
   1400037b1:	test   ax,ax
   1400037b4:	je     0x1400037c3
   1400037b6:	mov    WORD PTR [rcx],ax
   1400037b9:	add    rcx,0x2
   1400037bd:	sub    rbx,0x1
   1400037c1:	jne    0x1400037a4
   1400037c3:	test   rbx,rbx
   1400037c6:	jne    0x1400037d2
   1400037c8:	sub    rcx,0x2
   1400037cc:	mov    r8d,0x8007007a
   1400037d2:	mov    WORD PTR [rcx],bp
   1400037d5:	test   r8d,r8d
   1400037d8:	jns    0x1400037e6
   1400037da:	mov    rcx,rdx
   1400037dd:	call   QWORD PTR [rip+0x478dd]        # 0x14004b0c0
   1400037e3:	mov    rdx,rbp
   1400037e6:	mov    rax,rdx
   1400037e9:	jmp    0x1400037ed
   1400037eb:	xor    eax,eax
   1400037ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037f2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400037f7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037fc:	add    rsp,0x20
   140003800:	pop    rdi
   140003801:	ret    
   140003802:	int3   
   140003803:	int3   
   140003804:	mov    rax,rsp
   140003807:	mov    QWORD PTR [rax+0x8],rbx
   14000380b:	mov    QWORD PTR [rax+0x10],rbp
   14000380f:	mov    QWORD PTR [rax+0x18],rsi
   140003813:	mov    QWORD PTR [rax+0x20],rdi
   140003817:	push   r14
   140003819:	sub    rsp,0x40
   14000381d:	and    DWORD PTR [rax-0x14],0x0
   140003821:	mov    rbp,rcx
   140003824:	mov    rcx,QWORD PTR [rip+0x73bd5]        # 0x140077400
   14000382b:	xor    edi,edi
   14000382d:	and    DWORD PTR [rax-0x18],0x0
   140003831:	mov    rbx,r9
   140003834:	mov    r14,r8
   140003837:	mov    rsi,rdx
   14000383a:	test   rcx,rcx
   14000383d:	jne    0x140003860
   14000383f:	xor    edx,edx
   140003841:	lea    rcx,[rip+0x5a668]        # 0x14005deb0
   140003848:	call   0x140001974
   14000384d:	mov    QWORD PTR [rip+0x73bac],rax        # 0x140077400
   140003854:	mov    rcx,rax
   140003857:	test   rax,rax
   14000385a:	je     0x1400038e2
   140003860:	mov    rax,QWORD PTR [rip+0x73c41]        # 0x1400774a8
   140003867:	test   rax,rax
   14000386a:	jne    0x140003885
   14000386c:	lea    rdx,[rip+0x5ad35]        # 0x14005e5a8
   140003873:	call   QWORD PTR [rip+0x4784f]        # 0x14004b0c8
   140003879:	mov    QWORD PTR [rip+0x73c28],rax        # 0x1400774a8
   140003880:	test   rax,rax
   140003883:	je     0x1400038e2
   140003885:	lea    rcx,[rsp+0x30]
   14000388a:	xor    r8d,r8d
   14000388d:	mov    QWORD PTR [rsp+0x28],rcx
   140003892:	lea    r9,[rsp+0x34]
   140003897:	and    QWORD PTR [rsp+0x20],rdi
   14000389c:	mov    rcx,rbp
   14000389f:	mov    rdx,rsi
   1400038a2:	call   rax
   1400038a4:	test   eax,eax
   1400038a6:	jne    0x140003920
   1400038a8:	mov    ecx,DWORD PTR [rsp+0x30]
   1400038ac:	test   ecx,ecx
   1400038ae:	je     0x140003920
   1400038b0:	mov    eax,DWORD PTR [rsp+0x34]
   1400038b4:	test   eax,eax
   1400038b6:	je     0x1400038cc
   1400038b8:	cmp    eax,0x2
   1400038bb:	jbe    0x1400038c7
   1400038bd:	cmp    eax,0x7
   1400038c0:	jne    0x1400038cc
   1400038c2:	lea    edi,[rax-0x3]
   1400038c5:	jmp    0x1400038cc
   1400038c7:	mov    edi,0x2
   1400038cc:	lea    edx,[rdi+rcx*1]
   1400038cf:	mov    ecx,0x40
   1400038d4:	call   QWORD PTR [rip+0x4782e]        # 0x14004b108
   1400038da:	mov    QWORD PTR [rbx],rax
   1400038dd:	test   rax,rax
   1400038e0:	jne    0x1400038ea
   1400038e2:	call   QWORD PTR [rip+0x477f8]        # 0x14004b0e0
   1400038e8:	jmp    0x140003920
   1400038ea:	lea    rcx,[rsp+0x30]
   1400038ef:	mov    r9,r14
   1400038f2:	mov    QWORD PTR [rsp+0x28],rcx
   1400038f7:	xor    r8d,r8d
   1400038fa:	mov    rcx,rbp
   1400038fd:	mov    QWORD PTR [rsp+0x20],rax
   140003902:	mov    rdx,rsi
   140003905:	call   QWORD PTR [rip+0x73b9d]        # 0x1400774a8
   14000390b:	mov    edi,eax
   14000390d:	test   eax,eax
   14000390f:	je     0x14000391e
   140003911:	mov    rcx,QWORD PTR [rbx]
   140003914:	call   QWORD PTR [rip+0x477a6]        # 0x14004b0c0
   14000391a:	and    QWORD PTR [rbx],0x0
   14000391e:	mov    eax,edi
   140003920:	mov    rbx,QWORD PTR [rsp+0x50]
   140003925:	mov    rbp,QWORD PTR [rsp+0x58]
   14000392a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000392f:	mov    rdi,QWORD PTR [rsp+0x68]
   140003934:	add    rsp,0x40
   140003938:	pop    r14
   14000393a:	ret    
   14000393b:	int3   
   14000393c:	mov    QWORD PTR [rsp+0x8],rbx
   140003941:	mov    QWORD PTR [rsp+0x18],r8
   140003946:	push   rdi
   140003947:	sub    rsp,0x30
   14000394b:	and    QWORD PTR [rsp+0x50],0x0
   140003951:	mov    rdi,r9
   140003954:	mov    rax,QWORD PTR [rip+0x73aa5]        # 0x140077400
   14000395b:	test   rax,rax
   14000395e:	jne    0x14000397a
   140003960:	xor    edx,edx
   140003962:	lea    rcx,[rip+0x5a547]        # 0x14005deb0
   140003969:	call   0x140001974
   14000396e:	mov    QWORD PTR [rip+0x73a8b],rax        # 0x140077400
   140003975:	test   rax,rax
   140003978:	je     0x1400039d2
   14000397a:	mov    r10,QWORD PTR [rip+0x73b1f]        # 0x1400774a0
   140003981:	test   r10,r10
   140003984:	jne    0x1400039ac
   140003986:	lea    rdx,[rip+0x5a7cb]        # 0x14005e158
   14000398d:	mov    rcx,rax
   140003990:	call   QWORD PTR [rip+0x47732]        # 0x14004b0c8
   140003996:	mov    QWORD PTR [rip+0x73b03],rax        # 0x1400774a0
   14000399d:	mov    r10,rax
   1400039a0:	test   rax,rax
   1400039a3:	je     0x1400039d2
   1400039a5:	mov    rax,QWORD PTR [rip+0x73a54]        # 0x140077400
   1400039ac:	cmp    QWORD PTR [rip+0x73b0c],0x0        # 0x1400774c0
   1400039b4:	jne    0x1400039e1
   1400039b6:	lea    rdx,[rip+0x5a7bb]        # 0x14005e178
   1400039bd:	mov    rcx,rax
   1400039c0:	call   QWORD PTR [rip+0x47702]        # 0x14004b0c8
   1400039c6:	mov    QWORD PTR [rip+0x73af3],rax        # 0x1400774c0
   1400039cd:	test   rax,rax
   1400039d0:	jne    0x1400039da
   1400039d2:	call   QWORD PTR [rip+0x47708]        # 0x14004b0e0
   1400039d8:	jmp    0x140003a33
   1400039da:	mov    r10,QWORD PTR [rip+0x73abf]        # 0x1400774a0
   1400039e1:	lea    rax,[rsp+0x50]
   1400039e6:	mov    r9d,0x1
   1400039ec:	xor    r8d,r8d
   1400039ef:	mov    QWORD PTR [rsp+0x20],rax
   1400039f4:	lea    rdx,[rip+0x5abf5]        # 0x14005e5f0
   1400039fb:	mov    rcx,0xffffffff80000002
   140003a02:	call   r10
   140003a05:	mov    ebx,eax
   140003a07:	test   eax,eax
   140003a09:	jne    0x140003a31
   140003a0b:	mov    r9,QWORD PTR [rsp+0x60]
   140003a10:	lea    rdx,[rip+0x5aba9]        # 0x14005e5c0
   140003a17:	mov    rcx,QWORD PTR [rsp+0x50]
   140003a1c:	mov    r8,rdi
   140003a1f:	call   0x140003804
   140003a24:	mov    rcx,QWORD PTR [rsp+0x50]
   140003a29:	mov    ebx,eax
   140003a2b:	call   QWORD PTR [rip+0x73a8f]        # 0x1400774c0
   140003a31:	mov    eax,ebx
   140003a33:	mov    rbx,QWORD PTR [rsp+0x40]
   140003a38:	add    rsp,0x30
   140003a3c:	pop    rdi
   140003a3d:	ret    
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	mov    r11,rsp
   140003a43:	mov    QWORD PTR [r11+0x18],rbx
   140003a47:	mov    QWORD PTR [r11+0x20],rbp
   140003a4b:	push   rsi
   140003a4c:	push   rdi
   140003a4d:	push   r14
   140003a4f:	sub    rsp,0x30
   140003a53:	mov    eax,DWORD PTR [rip+0x73a13]        # 0x14007746c
   140003a59:	xor    ebx,ebx
   140003a5b:	mov    r14d,ecx
   140003a5e:	test   eax,eax
   140003a60:	jne    0x140003aec
   140003a66:	lea    rax,[r11+0x10]
   140003a6a:	mov    DWORD PTR [rsp+0x50],ebx
   140003a6e:	lea    r9,[r11+0x8]
   140003a72:	mov    QWORD PTR [r11-0x28],rax
   140003a76:	mov    QWORD PTR [r11+0x10],rbx
   140003a7a:	call   0x14000393c
   140003a7f:	mov    rdi,QWORD PTR [rsp+0x58]
   140003a84:	test   eax,eax
   140003a86:	jne    0x140003add
   140003a88:	cmp    DWORD PTR [rsp+0x50],0x1
   140003a8d:	jne    0x140003add
   140003a8f:	mov    rsi,rdi
   140003a92:	or     rax,0xffffffffffffffff
   140003a96:	inc    rax
   140003a99:	cmp    WORD PTR [rdi+rax*2],bx
   140003a9d:	jne    0x140003a96
   140003a9f:	lea    rbp,[rdi+rax*2]
   140003aa3:	cmp    rdi,rbp
   140003aa6:	jae    0x140003add
   140003aa8:	movzx  ecx,WORD PTR [rsi]
   140003aab:	call   0x14002c2d8
   140003ab0:	test   eax,eax
   140003ab2:	je     0x140003ad7
   140003ab4:	mov    eax,DWORD PTR [rip+0x739b2]        # 0x14007746c
   140003aba:	lea    ecx,[rax+rax*4]
   140003abd:	movzx  eax,WORD PTR [rsi]
   140003ac0:	lea    ecx,[rcx-0x18]
   140003ac3:	add    rsi,0x2
   140003ac7:	lea    ecx,[rax+rcx*2]
   140003aca:	mov    DWORD PTR [rip+0x7399c],ecx        # 0x14007746c
   140003ad0:	cmp    rsi,rbp
   140003ad3:	jb     0x140003aa8
   140003ad5:	jmp    0x140003add
   140003ad7:	mov    DWORD PTR [rip+0x7398f],ebx        # 0x14007746c
   140003add:	mov    rcx,rdi
   140003ae0:	call   QWORD PTR [rip+0x475da]        # 0x14004b0c0
   140003ae6:	mov    eax,DWORD PTR [rip+0x73980]        # 0x14007746c
   140003aec:	mov    rbp,QWORD PTR [rsp+0x68]
   140003af1:	cmp    eax,r14d
   140003af4:	setae  bl
   140003af7:	mov    eax,ebx
   140003af9:	mov    rbx,QWORD PTR [rsp+0x60]
   140003afe:	add    rsp,0x30
   140003b02:	pop    r14
   140003b04:	pop    rdi
   140003b05:	pop    rsi
   140003b06:	ret    
   140003b07:	int3   
   140003b08:	mov    QWORD PTR [rsp+0x8],rbx
   140003b0d:	mov    QWORD PTR [rsp+0x20],rsi
   140003b12:	push   rbp
   140003b13:	push   rdi
   140003b14:	push   r12
   140003b16:	push   r14
   140003b18:	push   r15
   140003b1a:	mov    rbp,rsp
   140003b1d:	sub    rsp,0x80
   140003b24:	mov    rax,QWORD PTR [rip+0x6d525]        # 0x140071050
   140003b2b:	xor    rax,rsp
   140003b2e:	mov    QWORD PTR [rbp-0x8],rax
   140003b32:	xor    eax,eax
   140003b34:	xor    r14d,r14d
   140003b37:	and    DWORD PTR [rbp-0x24],eax
   140003b3a:	xor    ebx,ebx
   140003b3c:	and    DWORD PTR [rbp-0x44],r14d
   140003b40:	mov    r15,r8
   140003b43:	mov    QWORD PTR [rbp-0x40],rax
   140003b47:	mov    r12,rdx
   140003b4a:	lea    esi,[r14+0x20]
   140003b4e:	mov    QWORD PTR [rbp-0x38],rax
   140003b52:	mov    QWORD PTR [rbp-0x30],rax
   140003b56:	mov    QWORD PTR [rbp-0x20],rax
   140003b5a:	mov    QWORD PTR [rbp-0x18],rax
   140003b5e:	mov    QWORD PTR [rbp-0x10],rax
   140003b62:	mov    rax,QWORD PTR [rip+0x73907]        # 0x140077470
   140003b69:	mov    DWORD PTR [rbp-0x48],esi
   140003b6c:	mov    DWORD PTR [rbp-0x28],esi
   140003b6f:	test   rax,rax
   140003b72:	jne    0x140003b92
   140003b74:	xor    edx,edx
   140003b76:	lea    rcx,[rip+0x5a983]        # 0x14005e500
   140003b7d:	call   0x140001974
   140003b82:	mov    QWORD PTR [rip+0x738e7],rax        # 0x140077470
   140003b89:	test   rax,rax
   140003b8c:	je     0x140003c60
   140003b92:	cmp    QWORD PTR [rip+0x7387f],rbx        # 0x140077418
   140003b99:	jne    0x140003bc2
   140003b9b:	lea    rdx,[rip+0x5aaae]        # 0x14005e650
   140003ba2:	mov    rcx,rax
   140003ba5:	call   QWORD PTR [rip+0x4751d]        # 0x14004b0c8
   140003bab:	mov    QWORD PTR [rip+0x73866],rax        # 0x140077418
   140003bb2:	test   rax,rax
   140003bb5:	je     0x140003c60
   140003bbb:	mov    rax,QWORD PTR [rip+0x738ae]        # 0x140077470
   140003bc2:	cmp    QWORD PTR [rip+0x73897],rbx        # 0x140077460
   140003bc9:	jne    0x140003bee
   140003bcb:	lea    rdx,[rip+0x5aa96]        # 0x14005e668
   140003bd2:	mov    rcx,rax
   140003bd5:	call   QWORD PTR [rip+0x474ed]        # 0x14004b0c8
   140003bdb:	mov    QWORD PTR [rip+0x7387e],rax        # 0x140077460
   140003be2:	test   rax,rax
   140003be5:	je     0x140003c60
   140003be7:	mov    rax,QWORD PTR [rip+0x73882]        # 0x140077470
   140003bee:	cmp    QWORD PTR [rip+0x738a3],rbx        # 0x140077498
   140003bf5:	jne    0x140003c1a
   140003bf7:	lea    rdx,[rip+0x5aa8a]        # 0x14005e688
   140003bfe:	mov    rcx,rax
   140003c01:	call   QWORD PTR [rip+0x474c1]        # 0x14004b0c8
   140003c07:	mov    QWORD PTR [rip+0x7388a],rax        # 0x140077498
   140003c0e:	test   rax,rax
   140003c11:	je     0x140003c60
   140003c13:	mov    rax,QWORD PTR [rip+0x73856]        # 0x140077470
   140003c1a:	cmp    QWORD PTR [rip+0x737ef],rbx        # 0x140077410
   140003c21:	jne    0x140003c3f
   140003c23:	lea    rdx,[rip+0x5a91e]        # 0x14005e548
   140003c2a:	mov    rcx,rax
   140003c2d:	call   QWORD PTR [rip+0x47495]        # 0x14004b0c8
   140003c33:	mov    QWORD PTR [rip+0x737d6],rax        # 0x140077410
   140003c3a:	test   rax,rax
   140003c3d:	je     0x140003c60
   140003c3f:	mov    r9d,0x12
   140003c45:	lea    rcx,[rip+0x5aad4]        # 0x14005e720
   140003c4c:	xor    r8d,r8d
   140003c4f:	xor    edx,edx
   140003c51:	call   QWORD PTR [rip+0x737c1]        # 0x140077418
   140003c57:	mov    rdi,rax
   140003c5a:	cmp    rax,0xffffffffffffffff
   140003c5e:	jne    0x140003c67
   140003c60:	xor    eax,eax
   140003c62:	jmp    0x140003d87
   140003c67:	mov    r8,rsi
   140003c6a:	lea    rcx,[rbp-0x48]
   140003c6e:	xor    edx,edx
   140003c70:	call   0x14002a910
   140003c75:	mov    DWORD PTR [rbp-0x48],esi
   140003c78:	lea    rax,[rbp-0x48]
   140003c7c:	mov    r9d,r14d
   140003c7f:	lea    r8,[rip+0x5aa9a]        # 0x14005e720
   140003c86:	mov    QWORD PTR [rsp+0x20],rax
   140003c8b:	xor    edx,edx
   140003c8d:	mov    rcx,rdi
   140003c90:	call   QWORD PTR [rip+0x737ca]        # 0x140077460
   140003c96:	test   eax,eax
   140003c98:	je     0x140003d61
   140003c9e:	and    QWORD PTR [rsp+0x28],0x0
   140003ca4:	lea    rax,[rbp-0x50]
   140003ca8:	and    DWORD PTR [rbp-0x50],0x0
   140003cac:	lea    rdx,[rbp-0x48]
   140003cb0:	xor    r9d,r9d
   140003cb3:	mov    QWORD PTR [rsp+0x20],rax
   140003cb8:	xor    r8d,r8d
   140003cbb:	mov    rcx,rdi
   140003cbe:	call   QWORD PTR [rip+0x737d4]        # 0x140077498
   140003cc4:	mov    eax,DWORD PTR [rbp-0x50]
   140003cc7:	test   eax,eax
   140003cc9:	je     0x140003d56
   140003ccf:	mov    edx,eax
   140003cd1:	mov    ecx,0x40
   140003cd6:	call   QWORD PTR [rip+0x4742c]        # 0x14004b108
   140003cdc:	mov    rsi,rax
   140003cdf:	test   rax,rax
   140003ce2:	je     0x140003d56
   140003ce4:	xor    eax,eax
   140003ce6:	lea    rcx,[rbp-0x28]
   140003cea:	mov    QWORD PTR [rsi],rax
   140003ced:	xor    edx,edx
   140003cef:	mov    DWORD PTR [rsi],0x8
   140003cf5:	lea    r8d,[rax+0x20]
   140003cf9:	call   0x14002a910
   140003cfe:	mov    r9d,DWORD PTR [rbp-0x50]
   140003d02:	lea    rax,[rbp-0x28]
   140003d06:	mov    QWORD PTR [rsp+0x28],rax
   140003d0b:	lea    rdx,[rbp-0x48]
   140003d0f:	and    QWORD PTR [rsp+0x20],0x0
   140003d15:	mov    r8,rsi
   140003d18:	mov    rcx,rdi
   140003d1b:	mov    DWORD PTR [rbp-0x28],0x20
   140003d22:	call   QWORD PTR [rip+0x73770]        # 0x140077498
   140003d28:	test   eax,eax
   140003d2a:	je     0x140003d4d
   140003d2c:	lea    rcx,[rsi+0x4]
   140003d30:	call   0x14002c1b0
   140003d35:	lea    rdx,[rip+0x5a974]        # 0x14005e6b0
   140003d3c:	lea    rcx,[rsi+0x4]
   140003d40:	call   0x140028c54
   140003d45:	xor    ebx,ebx
   140003d47:	test   rax,rax
   140003d4a:	setne  bl
   140003d4d:	mov    rcx,rsi
   140003d50:	call   QWORD PTR [rip+0x4736a]        # 0x14004b0c0
   140003d56:	inc    r14d
   140003d59:	test   ebx,ebx
   140003d5b:	je     0x140003c78
   140003d61:	test   ebx,ebx
   140003d63:	je     0x140003d7c
   140003d65:	movups xmm0,XMMWORD PTR [rbp-0x28]
   140003d69:	mov    QWORD PTR [r12],rdi
   140003d6d:	movups xmm1,XMMWORD PTR [rbp-0x18]
   140003d71:	movups XMMWORD PTR [r15],xmm0
   140003d75:	movups XMMWORD PTR [r15+0x10],xmm1
   140003d7a:	jmp    0x140003d85
   140003d7c:	mov    rcx,rdi
   140003d7f:	call   QWORD PTR [rip+0x7368b]        # 0x140077410
   140003d85:	mov    eax,ebx
   140003d87:	mov    rcx,QWORD PTR [rbp-0x8]
   140003d8b:	xor    rcx,rsp
   140003d8e:	call   0x140025df0
   140003d93:	lea    r11,[rsp+0x80]
   140003d9b:	mov    rbx,QWORD PTR [r11+0x30]
   140003d9f:	mov    rsi,QWORD PTR [r11+0x48]
   140003da3:	mov    rsp,r11
   140003da6:	pop    r15
   140003da8:	pop    r14
   140003daa:	pop    r12
   140003dac:	pop    rdi
   140003dad:	pop    rbp
   140003dae:	ret    
   140003daf:	int3   
   140003db0:	mov    QWORD PTR [rsp+0x8],rbx
   140003db5:	mov    QWORD PTR [rsp+0x10],rbp
   140003dba:	mov    QWORD PTR [rsp+0x18],rsi
   140003dbf:	push   rdi
   140003dc0:	sub    rsp,0x20
   140003dc4:	xor    ebp,ebp
   140003dc6:	mov    rdi,rcx
   140003dc9:	test   rcx,rcx
   140003dcc:	jne    0x140003dd5
   140003dce:	xor    eax,eax
   140003dd0:	jmp    0x140003eb7
   140003dd5:	or     r10,0xffffffffffffffff
   140003dd9:	mov    r11,r10
   140003ddc:	inc    r11
   140003ddf:	cmp    WORD PTR [rcx+r11*2],bp
   140003de4:	jne    0x140003ddc
   140003de6:	call   0x1400033e8
   140003deb:	inc    r10
   140003dee:	cmp    WORD PTR [rax+r10*2],bp
   140003df3:	jne    0x140003deb
   140003df5:	test   r10,r10
   140003df8:	je     0x140003e1b
   140003dfa:	mov    rcx,rdi
   140003dfd:	cmp    r10,0x1
   140003e01:	je     0x140003e10
   140003e03:	call   0x14000366c
   140003e08:	mov    rbx,rax
   140003e0b:	jmp    0x140003eb4
   140003e10:	lea    rdx,[r11-0x1]
   140003e14:	call   0x140003724
   140003e19:	jmp    0x140003e08
   140003e1b:	lea    rsi,[r11*2+0xa]
   140003e23:	mov    ecx,0x40
   140003e28:	mov    rdx,rsi
   140003e2b:	call   QWORD PTR [rip+0x472d7]        # 0x14004b108
   140003e31:	mov    rbx,rax
   140003e34:	test   rax,rax
   140003e37:	je     0x140003eb4
   140003e39:	mov    rcx,rsi
   140003e3c:	mov    edx,0x7ffffffe
   140003e41:	shr    rcx,1
   140003e44:	lea    rax,[rcx-0x1]
   140003e48:	cmp    rax,rdx
   140003e4b:	ja     0x140003ea8
   140003e4d:	sub    rdx,rcx
   140003e50:	mov    r8,rbx
   140003e53:	sub    rdi,rbx
   140003e56:	mov    r9d,ebp
   140003e59:	lea    rax,[rdx+rcx*1]
   140003e5d:	test   rax,rax
   140003e60:	je     0x140003e7a
   140003e62:	movzx  eax,WORD PTR [rdi+r8*1]
   140003e67:	test   ax,ax
   140003e6a:	je     0x140003e7a
   140003e6c:	mov    WORD PTR [r8],ax
   140003e70:	add    r8,0x2
   140003e74:	sub    rcx,0x1
   140003e78:	jne    0x140003e59
   140003e7a:	test   rcx,rcx
   140003e7d:	jne    0x140003e89
   140003e7f:	sub    r8,0x2
   140003e83:	mov    r9d,0x8007007a
   140003e89:	mov    WORD PTR [r8],bp
   140003e8d:	test   r9d,r9d
   140003e90:	js     0x140003ea8
   140003e92:	lea    r8,[rip+0x5a3af]        # 0x14005e248
   140003e99:	mov    rdx,rsi
   140003e9c:	mov    rcx,rbx
   140003e9f:	call   0x1400018a0
   140003ea4:	test   eax,eax
   140003ea6:	jns    0x140003eb4
   140003ea8:	mov    rcx,rbx
   140003eab:	call   QWORD PTR [rip+0x4720f]        # 0x14004b0c0
   140003eb1:	mov    rbx,rbp
   140003eb4:	mov    rax,rbx
   140003eb7:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ebc:	mov    rbp,QWORD PTR [rsp+0x38]
   140003ec1:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ec6:	add    rsp,0x20
   140003eca:	pop    rdi
   140003ecb:	ret    
   140003ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140003ed1:	mov    QWORD PTR [rsp+0x10],rbp
   140003ed6:	mov    QWORD PTR [rsp+0x20],rsi
   140003edb:	push   rdi
   140003edc:	push   r14
   140003ede:	push   r15
   140003ee0:	sub    rsp,0x20
   140003ee4:	mov    rax,QWORD PTR [rip+0x73515]        # 0x140077400
   140003eeb:	xor    esi,esi
   140003eed:	xor    ebx,ebx
   140003eef:	xor    ebp,ebp
   140003ef1:	mov    r14,rdx
   140003ef4:	mov    r15,rcx
   140003ef7:	test   rax,rax
   140003efa:	jne    0x140003f1a
   140003efc:	xor    edx,edx
   140003efe:	lea    rcx,[rip+0x59fab]        # 0x14005deb0
   140003f05:	call   0x140001974
   140003f0a:	mov    QWORD PTR [rip+0x734ef],rax        # 0x140077400
   140003f11:	test   rax,rax
   140003f14:	je     0x140003fc7
   140003f1a:	cmp    QWORD PTR [rip+0x734d7],rbx        # 0x1400773f8
   140003f21:	jne    0x140003f4a
   140003f23:	lea    rdx,[rip+0x5a79e]        # 0x14005e6c8
   140003f2a:	mov    rcx,rax
   140003f2d:	call   QWORD PTR [rip+0x47195]        # 0x14004b0c8
   140003f33:	mov    QWORD PTR [rip+0x734be],rax        # 0x1400773f8
   140003f3a:	test   rax,rax
   140003f3d:	je     0x140003fc7
   140003f43:	mov    rax,QWORD PTR [rip+0x734b6]        # 0x140077400
   140003f4a:	cmp    QWORD PTR [rip+0x734d7],rbx        # 0x140077428
   140003f51:	jne    0x140003f76
   140003f53:	lea    rdx,[rip+0x5a77e]        # 0x14005e6d8
   140003f5a:	mov    rcx,rax
   140003f5d:	call   QWORD PTR [rip+0x47165]        # 0x14004b0c8
   140003f63:	mov    QWORD PTR [rip+0x734be],rax        # 0x140077428
   140003f6a:	test   rax,rax
   140003f6d:	je     0x140003fc7
   140003f6f:	mov    rax,QWORD PTR [rip+0x7348a]        # 0x140077400
   140003f76:	cmp    QWORD PTR [rip+0x7353b],rbx        # 0x1400774b8
   140003f7d:	jne    0x140003fa2
   140003f7f:	lea    rdx,[rip+0x5a762]        # 0x14005e6e8
   140003f86:	mov    rcx,rax
   140003f89:	call   QWORD PTR [rip+0x47139]        # 0x14004b0c8
   140003f8f:	mov    QWORD PTR [rip+0x73522],rax        # 0x1400774b8
   140003f96:	test   rax,rax
   140003f99:	je     0x140003fc7
   140003f9b:	mov    rax,QWORD PTR [rip+0x7345e]        # 0x140077400
   140003fa2:	cmp    QWORD PTR [rip+0x734a7],rbx        # 0x140077450
   140003fa9:	jne    0x140003fce
   140003fab:	lea    rdx,[rip+0x5a74e]        # 0x14005e700
   140003fb2:	mov    rcx,rax
   140003fb5:	call   QWORD PTR [rip+0x4710d]        # 0x14004b0c8
   140003fbb:	mov    QWORD PTR [rip+0x7348e],rax        # 0x140077450
   140003fc2:	test   rax,rax
   140003fc5:	jne    0x140003fce
   140003fc7:	xor    eax,eax
   140003fc9:	jmp    0x14000409b
   140003fce:	and    DWORD PTR [rsp+0x50],ebx
   140003fd2:	xor    edx,edx
   140003fd4:	xor    ecx,ecx
   140003fd6:	mov    r8d,0x80000000
   140003fdc:	call   QWORD PTR [rip+0x73416]        # 0x1400773f8
   140003fe2:	mov    rdi,rax
   140003fe5:	test   rax,rax
   140003fe8:	je     0x140004073
   140003fee:	mov    r8d,0x80000000
   140003ff4:	mov    rdx,r14
   140003ff7:	mov    rcx,rax
   140003ffa:	call   QWORD PTR [rip+0x73428]        # 0x140077428
   140004000:	mov    rsi,rax
   140004003:	test   rax,rax
   140004006:	je     0x140004073
   140004008:	lea    r9,[rsp+0x50]
   14000400d:	xor    r8d,r8d
   140004010:	xor    edx,edx
   140004012:	mov    rcx,rax
   140004015:	call   QWORD PTR [rip+0x7349d]        # 0x1400774b8
   14000401b:	mov    eax,DWORD PTR [rsp+0x50]
   14000401f:	test   eax,eax
   140004021:	je     0x140004073
   140004023:	mov    edx,eax
   140004025:	mov    ecx,0x40
   14000402a:	call   QWORD PTR [rip+0x470d8]        # 0x14004b108
   140004030:	mov    rbx,rax
   140004033:	test   rax,rax
   140004036:	je     0x140004073
   140004038:	mov    r8d,DWORD PTR [rsp+0x50]
   14000403d:	lea    r9,[rsp+0x50]
   140004042:	mov    rdx,rax
   140004045:	mov    rcx,rsi
   140004048:	call   QWORD PTR [rip+0x7346a]        # 0x1400774b8
   14000404e:	test   eax,eax
   140004050:	je     0x140004073
   140004052:	cmp    DWORD PTR [rbx],0x1
   140004055:	jne    0x140004073
   140004057:	mov    rcx,QWORD PTR [rbx+0x10]
   14000405b:	mov    rdx,r15
   14000405e:	call   0x140003430
   140004063:	test   eax,eax
   140004065:	je     0x140004073
   140004067:	mov    rcx,QWORD PTR [rbx+0x10]
   14000406b:	call   0x14000366c
   140004070:	mov    rbp,rax
   140004073:	mov    rcx,rbx
   140004076:	call   QWORD PTR [rip+0x47044]        # 0x14004b0c0
   14000407c:	test   rsi,rsi
   14000407f:	je     0x14000408a
   140004081:	mov    rcx,rsi
   140004084:	call   QWORD PTR [rip+0x733c6]        # 0x140077450
   14000408a:	test   rdi,rdi
   14000408d:	je     0x140004098
   14000408f:	mov    rcx,rdi
   140004092:	call   QWORD PTR [rip+0x733b8]        # 0x140077450
   140004098:	mov    rax,rbp
   14000409b:	mov    rbx,QWORD PTR [rsp+0x40]
   1400040a0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400040a5:	mov    rsi,QWORD PTR [rsp+0x58]
   1400040aa:	add    rsp,0x20
   1400040ae:	pop    r15
   1400040b0:	pop    r14
   1400040b2:	pop    rdi
   1400040b3:	ret    
   1400040b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400040b9:	mov    QWORD PTR [rsp+0x18],rsi
   1400040be:	push   rbp
   1400040bf:	push   rdi
   1400040c0:	push   r12
   1400040c2:	push   r13
   1400040c4:	push   r14
   1400040c6:	lea    rbp,[rsp-0x37]
   1400040cb:	sub    rsp,0x90
   1400040d2:	mov    rax,QWORD PTR [rip+0x6cf77]        # 0x140071050
   1400040d9:	xor    rax,rsp
   1400040dc:	mov    QWORD PTR [rbp+0x27],rax
   1400040e0:	xor    eax,eax
   1400040e2:	mov    QWORD PTR [rbp-0x9],0x20
   1400040ea:	xor    r13d,r13d
   1400040ed:	mov    QWORD PTR [rbp-0x1],rax
   1400040f1:	mov    QWORD PTR [rbp+0x7],rax
   1400040f5:	mov    r12,rcx
   1400040f8:	mov    QWORD PTR [rbp+0xf],rax
   1400040fc:	mov    edi,r13d
   1400040ff:	mov    rax,QWORD PTR [rip+0x7336a]        # 0x140077470
   140004106:	mov    QWORD PTR [rbp-0x11],r13
   14000410a:	test   rax,rax
   14000410d:	jne    0x140004129
   14000410f:	xor    edx,edx
   140004111:	lea    rcx,[rip+0x5a3e8]        # 0x14005e500
   140004118:	call   0x140001974
   14000411d:	mov    QWORD PTR [rip+0x7334c],rax        # 0x140077470
   140004124:	test   rax,rax
   140004127:	je     0x14000417a
   140004129:	cmp    QWORD PTR [rip+0x732b0],r13        # 0x1400773e0
   140004130:	jne    0x140004155
   140004132:	lea    rdx,[rip+0x5a3e7]        # 0x14005e520
   140004139:	mov    rcx,rax
   14000413c:	call   QWORD PTR [rip+0x46f86]        # 0x14004b0c8
   140004142:	mov    QWORD PTR [rip+0x73297],rax        # 0x1400773e0
   140004149:	test   rax,rax
   14000414c:	je     0x14000417a
   14000414e:	mov    rax,QWORD PTR [rip+0x7331b]        # 0x140077470
   140004155:	cmp    QWORD PTR [rip+0x732b4],r13        # 0x140077410
   14000415c:	jne    0x140004181
   14000415e:	lea    rdx,[rip+0x5a3e3]        # 0x14005e548
   140004165:	mov    rcx,rax
   140004168:	call   QWORD PTR [rip+0x46f5a]        # 0x14004b0c8
   14000416e:	mov    QWORD PTR [rip+0x7329b],rax        # 0x140077410
   140004175:	test   rax,rax
   140004178:	jne    0x140004181
   14000417a:	xor    eax,eax
   14000417c:	jmp    0x1400042d3
   140004181:	lea    r8,[rbp-0x9]
   140004185:	lea    rdx,[rbp-0x11]
   140004189:	call   0x140003b08
   14000418e:	test   eax,eax
   140004190:	je     0x1400042d0
   140004196:	mov    DWORD PTR [rbp+0x17],0x4
   14000419d:	mov    r14d,r13d
   1400041a0:	mov    DWORD PTR [rbp+0x1b],0x11
   1400041a7:	mov    DWORD PTR [rbp+0x1f],0x12
   1400041ae:	cmp    r14d,0x3
   1400041b2:	jae    0x1400042c6
   1400041b8:	mov    rcx,QWORD PTR [rbp-0x11]
   1400041bc:	lea    r9,[rbp-0x19]
   1400041c0:	mov    eax,r14d
   1400041c3:	lea    rdx,[rbp-0x9]
   1400041c7:	mov    DWORD PTR [rbp-0x19],r13d
   1400041cb:	mov    ebx,r13d
   1400041ce:	mov    DWORD PTR [rbp-0x15],r13d
   1400041d2:	mov    esi,DWORD PTR [rbp+rax*4+0x17]
   1400041d6:	lea    rax,[rbp-0x15]
   1400041da:	mov    QWORD PTR [rsp+0x30],rax
   1400041df:	mov    r8d,esi
   1400041e2:	mov    DWORD PTR [rsp+0x28],r13d
   1400041e7:	mov    QWORD PTR [rsp+0x20],r13
   1400041ec:	call   QWORD PTR [rip+0x731ee]        # 0x1400773e0
   1400041f2:	mov    ecx,DWORD PTR [rbp-0x15]
   1400041f5:	test   ecx,ecx
   1400041f7:	je     0x1400042ba
   1400041fd:	mov    eax,DWORD PTR [rbp-0x19]
   140004200:	test   eax,eax
   140004202:	je     0x140004218
   140004204:	cmp    eax,0x2
   140004207:	jbe    0x140004213
   140004209:	cmp    eax,0x7
   14000420c:	jne    0x140004218
   14000420e:	lea    ebx,[rax-0x3]
   140004211:	jmp    0x140004218
   140004213:	mov    ebx,0x2
   140004218:	lea    edx,[rbx+rcx*1]
   14000421b:	mov    ecx,0x40
   140004220:	call   QWORD PTR [rip+0x46ee2]        # 0x14004b108
   140004226:	mov    rbx,rax
   140004229:	test   rax,rax
   14000422c:	je     0x1400042ba
   140004232:	mov    eax,DWORD PTR [rbp-0x15]
   140004235:	lea    r9,[rbp-0x19]
   140004239:	mov    rcx,QWORD PTR [rbp-0x11]
   14000423d:	lea    rdx,[rbp-0x9]
   140004241:	mov    QWORD PTR [rsp+0x30],r13
   140004246:	mov    r8d,esi
   140004249:	mov    DWORD PTR [rsp+0x28],eax
   14000424d:	mov    QWORD PTR [rsp+0x20],rbx
   140004252:	call   QWORD PTR [rip+0x73188]        # 0x1400773e0
   140004258:	test   eax,eax
   14000425a:	je     0x1400042b1
   14000425c:	mov    eax,DWORD PTR [rbp-0x19]
   14000425f:	mov    rsi,rbx
   140004262:	sub    eax,0x1
   140004265:	je     0x1400042a3
   140004267:	cmp    eax,0x6
   14000426a:	jne    0x1400042b1
   14000426c:	cmp    r13w,WORD PTR [rbx]
   140004270:	je     0x1400042b1
   140004272:	mov    rdx,rbx
   140004275:	mov    rcx,r12
   140004278:	call   0x140003ecc
   14000427d:	mov    rdi,rax
   140004280:	test   rax,rax
   140004283:	jne    0x1400042b1
   140004285:	or     rax,0xffffffffffffffff
   140004289:	inc    rax
   14000428c:	cmp    WORD PTR [rsi+rax*2],r13w
   140004291:	jne    0x140004289
   140004293:	lea    rsi,[rsi+rax*2]
   140004297:	add    rsi,0x2
   14000429b:	cmp    r13w,WORD PTR [rsi]
   14000429f:	jne    0x140004272
   1400042a1:	jmp    0x1400042b1
   1400042a3:	mov    rdx,rbx
   1400042a6:	mov    rcx,r12
   1400042a9:	call   0x140003ecc
   1400042ae:	mov    rdi,rax
   1400042b1:	mov    rcx,rbx
   1400042b4:	call   QWORD PTR [rip+0x46e06]        # 0x14004b0c0
   1400042ba:	inc    r14d
   1400042bd:	test   rdi,rdi
   1400042c0:	je     0x1400041ae
   1400042c6:	mov    rcx,QWORD PTR [rbp-0x11]
   1400042ca:	call   QWORD PTR [rip+0x73140]        # 0x140077410
   1400042d0:	mov    rax,rdi
   1400042d3:	mov    rcx,QWORD PTR [rbp+0x27]
   1400042d7:	xor    rcx,rsp
   1400042da:	call   0x140025df0
   1400042df:	lea    r11,[rsp+0x90]
   1400042e7:	mov    rbx,QWORD PTR [r11+0x38]
   1400042eb:	mov    rsi,QWORD PTR [r11+0x40]
   1400042ef:	mov    rsp,r11
   1400042f2:	pop    r14
   1400042f4:	pop    r13
   1400042f6:	pop    r12
   1400042f8:	pop    rdi
   1400042f9:	pop    rbp
   1400042fa:	ret    
   1400042fb:	int3   
   1400042fc:	mov    rax,rsp
   1400042ff:	mov    QWORD PTR [rax+0x8],rbx
   140004303:	mov    QWORD PTR [rax+0x10],rdx
   140004307:	push   rbp
   140004308:	push   rsi
   140004309:	push   rdi
   14000430a:	push   r14
   14000430c:	push   r15
   14000430e:	sub    rsp,0x40
   140004312:	xor    r15d,r15d
   140004315:	mov    r14,r9
   140004318:	mov    QWORD PTR [rax+0x20],r15
   14000431c:	mov    rbx,r8
   14000431f:	mov    rax,QWORD PTR [rip+0x730da]        # 0x140077400
   140004326:	mov    rbp,rcx
   140004329:	mov    esi,r15d
   14000432c:	test   rax,rax
   14000432f:	jne    0x14000434f
   140004331:	xor    edx,edx
   140004333:	lea    rcx,[rip+0x59b76]        # 0x14005deb0
   14000433a:	call   0x140001974
   14000433f:	mov    QWORD PTR [rip+0x730ba],rax        # 0x140077400
   140004346:	test   rax,rax
   140004349:	je     0x1400043d4
   14000434f:	mov    r10,QWORD PTR [rip+0x7314a]        # 0x1400774a0
   140004356:	test   r10,r10
   140004359:	jne    0x140004381
   14000435b:	lea    rdx,[rip+0x59df6]        # 0x14005e158
   140004362:	mov    rcx,rax
   140004365:	call   QWORD PTR [rip+0x46d5d]        # 0x14004b0c8
   14000436b:	mov    QWORD PTR [rip+0x7312e],rax        # 0x1400774a0
   140004372:	mov    r10,rax
   140004375:	test   rax,rax
   140004378:	je     0x1400043d4
   14000437a:	mov    rax,QWORD PTR [rip+0x7307f]        # 0x140077400
   140004381:	cmp    QWORD PTR [rip+0x73138],r15        # 0x1400774c0
   140004388:	jne    0x1400043ad
   14000438a:	lea    rdx,[rip+0x59de7]        # 0x14005e178
   140004391:	mov    rcx,rax
   140004394:	call   QWORD PTR [rip+0x46d2e]        # 0x14004b0c8
   14000439a:	mov    QWORD PTR [rip+0x7311f],rax        # 0x1400774c0
   1400043a1:	test   rax,rax
   1400043a4:	je     0x1400043d4
   1400043a6:	mov    r10,QWORD PTR [rip+0x730f3]        # 0x1400774a0
   1400043ad:	lea    rax,[rsp+0x88]
   1400043b5:	mov    r9d,0x1
   1400043bb:	xor    r8d,r8d
   1400043be:	mov    QWORD PTR [rsp+0x20],rax
   1400043c3:	mov    rdx,rbx
   1400043c6:	mov    rcx,0xffffffff80000002
   1400043cd:	call   r10
   1400043d0:	test   eax,eax
   1400043d2:	je     0x1400043db
   1400043d4:	xor    eax,eax
   1400043d6:	jmp    0x1400044ac
   1400043db:	mov    rdx,QWORD PTR [r14]
   1400043de:	test   rdx,rdx
   1400043e1:	je     0x14000449b
   1400043e7:	mov    rcx,QWORD PTR [rsp+0x88]
   1400043ef:	lea    r9,[rsp+0x30]
   1400043f4:	lea    r8,[rsp+0x78]
   1400043f9:	mov    QWORD PTR [rsp+0x30],r15
   1400043fe:	mov    DWORD PTR [rsp+0x78],r15d
   140004403:	call   0x140003804
   140004408:	mov    rdi,QWORD PTR [rsp+0x30]
   14000440d:	test   eax,eax
   14000440f:	jne    0x140004485
   140004411:	mov    eax,DWORD PTR [rsp+0x78]
   140004415:	mov    rbx,rdi
   140004418:	sub    eax,0x1
   14000441b:	je     0x14000446b
   14000441d:	cmp    eax,0x6
   140004420:	je     0x14000442f
   140004422:	mov    ecx,0xd
   140004427:	call   QWORD PTR [rip+0x46ceb]        # 0x14004b118
   14000442d:	jmp    0x140004485
   14000442f:	cmp    r15w,WORD PTR [rdi]
   140004433:	je     0x140004460
   140004435:	mov    rdx,rbp
   140004438:	mov    rcx,rbx
   14000443b:	call   0x140003430
   140004440:	test   eax,eax
   140004442:	jne    0x140004460
   140004444:	or     rax,0xffffffffffffffff
   140004448:	inc    rax
   14000444b:	cmp    WORD PTR [rbx+rax*2],r15w
   140004450:	jne    0x140004448
   140004452:	lea    rbx,[rbx+rax*2]
   140004456:	add    rbx,0x2
   14000445a:	cmp    r15w,WORD PTR [rbx]
   14000445e:	jne    0x140004435
   140004460:	cmp    r15w,WORD PTR [rbx]
   140004464:	je     0x140004485
   140004466:	mov    rcx,rbx
   140004469:	jmp    0x14000447d
   14000446b:	mov    rdx,rbp
   14000446e:	mov    rcx,rdi
   140004471:	call   0x140003430
   140004476:	test   eax,eax
   140004478:	je     0x140004485
   14000447a:	mov    rcx,rdi
   14000447d:	call   0x14000366c
   140004482:	mov    rsi,rax
   140004485:	mov    rcx,rdi
   140004488:	call   QWORD PTR [rip+0x46c32]        # 0x14004b0c0
   14000448e:	add    r14,0x8
   140004492:	test   rsi,rsi
   140004495:	je     0x1400043db
   14000449b:	mov    rcx,QWORD PTR [rsp+0x88]
   1400044a3:	call   QWORD PTR [rip+0x73017]        # 0x1400774c0
   1400044a9:	mov    rax,rsi
   1400044ac:	mov    rbx,QWORD PTR [rsp+0x70]
   1400044b1:	add    rsp,0x40
   1400044b5:	pop    r15
   1400044b7:	pop    r14
   1400044b9:	pop    rdi
   1400044ba:	pop    rsi
   1400044bb:	pop    rbp
   1400044bc:	ret    
   1400044bd:	int3   
   1400044be:	int3   
   1400044bf:	int3   
   1400044c0:	mov    rax,rsp
   1400044c3:	mov    QWORD PTR [rax+0x8],rbx
   1400044c7:	mov    QWORD PTR [rax+0x10],rdx
   1400044cb:	push   rbp
   1400044cc:	push   rsi
   1400044cd:	push   rdi
   1400044ce:	push   r14
   1400044d0:	push   r15
   1400044d2:	sub    rsp,0x40
   1400044d6:	and    QWORD PTR [rax+0x18],0x0
   1400044db:	xor    edi,edi
   1400044dd:	mov    rax,QWORD PTR [rip+0x72f1c]        # 0x140077400
   1400044e4:	mov    rsi,r8
   1400044e7:	mov    r15,rcx
   1400044ea:	test   rax,rax
   1400044ed:	jne    0x140004509
   1400044ef:	xor    edx,edx
   1400044f1:	lea    rcx,[rip+0x599b8]        # 0x14005deb0
   1400044f8:	call   0x140001974
   1400044fd:	mov    QWORD PTR [rip+0x72efc],rax        # 0x140077400
   140004504:	test   rax,rax
   140004507:	je     0x140004586
   140004509:	cmp    QWORD PTR [rip+0x72f90],rdi        # 0x1400774a0
   140004510:	jne    0x140004535
   140004512:	lea    rdx,[rip+0x59c3f]        # 0x14005e158
   140004519:	mov    rcx,rax
   14000451c:	call   QWORD PTR [rip+0x46ba6]        # 0x14004b0c8
   140004522:	mov    QWORD PTR [rip+0x72f77],rax        # 0x1400774a0
   140004529:	test   rax,rax
   14000452c:	je     0x140004586
   14000452e:	mov    rax,QWORD PTR [rip+0x72ecb]        # 0x140077400
   140004535:	cmp    QWORD PTR [rip+0x72f0c],rdi        # 0x140077448
   14000453c:	jne    0x140004561
   14000453e:	lea    rdx,[rip+0x59c23]        # 0x14005e168
   140004545:	mov    rcx,rax
   140004548:	call   QWORD PTR [rip+0x46b7a]        # 0x14004b0c8
   14000454e:	mov    QWORD PTR [rip+0x72ef3],rax        # 0x140077448
   140004555:	test   rax,rax
   140004558:	je     0x140004586
   14000455a:	mov    rax,QWORD PTR [rip+0x72e9f]        # 0x140077400
   140004561:	cmp    QWORD PTR [rip+0x72f58],rdi        # 0x1400774c0
   140004568:	jne    0x14000458d
   14000456a:	lea    rdx,[rip+0x59c07]        # 0x14005e178
   140004571:	mov    rcx,rax
   140004574:	call   QWORD PTR [rip+0x46b4e]        # 0x14004b0c8
   14000457a:	mov    QWORD PTR [rip+0x72f3f],rax        # 0x1400774c0
   140004581:	test   rax,rax
   140004584:	jne    0x14000458d
   140004586:	xor    eax,eax
   140004588:	jmp    0x140004680
   14000458d:	mov    rdx,QWORD PTR [rsi]
   140004590:	test   rdx,rdx
   140004593:	je     0x14000467d
   140004599:	lea    rax,[rsp+0x80]
   1400045a1:	mov    r9d,0x20019
   1400045a7:	xor    r8d,r8d
   1400045aa:	mov    QWORD PTR [rsp+0x20],rax
   1400045af:	mov    rcx,0xffffffff80000002
   1400045b6:	call   QWORD PTR [rip+0x72ee4]        # 0x1400774a0
   1400045bc:	test   eax,eax
   1400045be:	jne    0x140004670
   1400045c4:	mov    edx,0x10000
   1400045c9:	lea    ecx,[rax+0x40]
   1400045cc:	call   QWORD PTR [rip+0x46b36]        # 0x14004b108
   1400045d2:	mov    rbx,rax
   1400045d5:	test   rax,rax
   1400045d8:	je     0x140004662
   1400045de:	xor    ebp,ebp
   1400045e0:	xor    edx,edx
   1400045e2:	mov    DWORD PTR [rsp+0x78],0x7fff
   1400045ea:	mov    r8d,0x8000
   1400045f0:	mov    rcx,rbx
   1400045f3:	call   0x14002a910
   1400045f8:	and    QWORD PTR [rsp+0x38],0x0
   1400045fe:	lea    r9,[rsp+0x78]
   140004603:	and    QWORD PTR [rsp+0x30],0x0
   140004609:	mov    r8,rbx
   14000460c:	and    QWORD PTR [rsp+0x28],0x0
   140004612:	mov    edx,ebp
   140004614:	mov    rcx,QWORD PTR [rsp+0x80]
   14000461c:	and    QWORD PTR [rsp+0x20],0x0
   140004622:	call   QWORD PTR [rip+0x72e20]        # 0x140077448
   140004628:	inc    ebp
   14000462a:	mov    r14d,eax
   14000462d:	test   eax,eax
   14000462f:	jne    0x14000464b
   140004631:	mov    rdx,r15
   140004634:	mov    rcx,rbx
   140004637:	call   0x140003430
   14000463c:	test   eax,eax
   14000463e:	je     0x14000464b
   140004640:	mov    rcx,rbx
   140004643:	call   0x14000366c
   140004648:	mov    rdi,rax
   14000464b:	test   rdi,rdi
   14000464e:	jne    0x140004659
   140004650:	cmp    r14d,0x103
   140004657:	jne    0x1400045e0
   140004659:	mov    rcx,rbx
   14000465c:	call   QWORD PTR [rip+0x46a5e]        # 0x14004b0c0
   140004662:	mov    rcx,QWORD PTR [rsp+0x80]
   14000466a:	call   QWORD PTR [rip+0x72e50]        # 0x1400774c0
   140004670:	add    rsi,0x8
   140004674:	test   rdi,rdi
   140004677:	je     0x14000458d
   14000467d:	mov    rax,rdi
   140004680:	mov    rbx,QWORD PTR [rsp+0x70]
   140004685:	add    rsp,0x40
   140004689:	pop    r15
   14000468b:	pop    r14
   14000468d:	pop    rdi
   14000468e:	pop    rsi
   14000468f:	pop    rbp
   140004690:	ret    
   140004691:	int3   
   140004692:	int3   
   140004693:	int3   
   140004694:	lea    rax,[rip+0x72f7d]        # 0x140077618
   14000469b:	ret    
   14000469c:	mov    QWORD PTR [rsp+0x18],r8
   1400046a1:	mov    QWORD PTR [rsp+0x20],r9
   1400046a6:	push   rbx
   1400046a7:	push   rbp
   1400046a8:	push   rsi
   1400046a9:	push   rdi
   1400046aa:	sub    rsp,0x38
   1400046ae:	mov    rsi,r8
   1400046b1:	lea    rbp,[rsp+0x78]
   1400046b6:	mov    rbx,rdx
   1400046b9:	mov    rdi,rcx
   1400046bc:	call   0x140004694
   1400046c1:	mov    QWORD PTR [rsp+0x28],rbp
   1400046c6:	mov    r9,rsi
   1400046c9:	and    QWORD PTR [rsp+0x20],0x0
   1400046cf:	mov    r8,rbx
   1400046d2:	mov    rdx,rdi
   1400046d5:	mov    rcx,QWORD PTR [rax]
   1400046d8:	call   0x1400301f4
   1400046dd:	or     ecx,0xffffffff
   1400046e0:	test   eax,eax
   1400046e2:	cmovs  eax,ecx
   1400046e5:	add    rsp,0x38
   1400046e9:	pop    rdi
   1400046ea:	pop    rsi
   1400046eb:	pop    rbp
   1400046ec:	pop    rbx
   1400046ed:	ret    
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	rex push rbx
   1400046f2:	sub    rsp,0x20
   1400046f6:	mov    rbx,rcx
   1400046f9:	mov    rax,rdx
   1400046fc:	lea    rcx,[rip+0x47045]        # 0x14004b748
   140004703:	mov    QWORD PTR [rbx],rcx
   140004706:	lea    rdx,[rbx+0x8]
   14000470a:	xor    ecx,ecx
   14000470c:	mov    QWORD PTR [rdx],rcx
   14000470f:	mov    QWORD PTR [rdx+0x8],rcx
   140004713:	lea    rcx,[rax+0x8]
   140004717:	call   0x140028f04
   14000471c:	mov    rax,rbx
   14000471f:	add    rsp,0x20
   140004723:	pop    rbx
   140004724:	ret    
   140004725:	int3   
   140004726:	int3   
   140004727:	int3   
   140004728:	lea    rax,[rip+0x47019]        # 0x14004b748
   14000472f:	mov    QWORD PTR [rcx],rax
   140004732:	add    rcx,0x8
   140004736:	jmp    0x140028f94
   14000473b:	int3   
   14000473c:	cmp    QWORD PTR [rcx+0x8],0x0
   140004741:	lea    rax,[rip+0x5d528]        # 0x140061c70
   140004748:	cmovne rax,QWORD PTR [rcx+0x8]
   14000474d:	ret    
   14000474e:	int3   
   14000474f:	int3   
   140004750:	mov    QWORD PTR [rsp+0x8],rbx
   140004755:	push   rdi
   140004756:	sub    rsp,0x20
   14000475a:	lea    rax,[rip+0x46fe7]        # 0x14004b748
   140004761:	mov    rdi,rcx
   140004764:	mov    QWORD PTR [rcx],rax
   140004767:	mov    ebx,edx
   140004769:	add    rcx,0x8
   14000476d:	call   0x140028f94
   140004772:	test   bl,0x1
   140004775:	je     0x140004784
   140004777:	mov    edx,0x18
   14000477c:	mov    rcx,rdi
   14000477f:	call   0x140026804
   140004784:	mov    rax,rdi
   140004787:	mov    rbx,QWORD PTR [rsp+0x30]
   14000478c:	add    rsp,0x20
   140004790:	pop    rdi
   140004791:	ret    
   140004792:	int3   
   140004793:	int3   
   140004794:	ret    0x0
   140004797:	int3   
   140004798:	sub    rsp,0x28
   14000479c:	mov    r9,rdx
   14000479f:	test   rcx,rcx
   1400047a2:	jne    0x1400047a8
   1400047a4:	xor    eax,eax
   1400047a6:	jmp    0x1400047f2
   1400047a8:	xor    edx,edx
   1400047aa:	or     rax,0xffffffffffffffff
   1400047ae:	div    r9
   1400047b1:	cmp    rax,rcx
   1400047b4:	jb     0x1400047f7
   1400047b6:	imul   rcx,r9
   1400047ba:	test   r8b,r8b
   1400047bd:	je     0x1400047e7
   1400047bf:	cmp    rcx,0x1000
   1400047c6:	jb     0x1400047e7
   1400047c8:	lea    rax,[rcx+0x27]
   1400047cc:	cmp    rax,rcx
   1400047cf:	jbe    0x1400047fd
   1400047d1:	mov    rcx,rax
   1400047d4:	call   0x140026118
   1400047d9:	lea    rcx,[rax+0x27]
   1400047dd:	and    rcx,0xffffffffffffffe0
   1400047e1:	mov    QWORD PTR [rcx-0x8],rax
   1400047e5:	jmp    0x1400047ef
   1400047e7:	call   0x140026118
   1400047ec:	mov    rcx,rax
   1400047ef:	mov    rax,rcx
   1400047f2:	add    rsp,0x28
   1400047f6:	ret    
   1400047f7:	call   0x140027a0c
   1400047fc:	int3   
   1400047fd:	call   0x140027a0c
   140004802:	int3   
   140004803:	int3   
   140004804:	sub    rsp,0x28
   140004808:	mov    r9,rdx
   14000480b:	or     rax,0xffffffffffffffff
   14000480f:	xor    edx,edx
   140004811:	div    r8
   140004814:	cmp    r9,rax
   140004817:	ja     0x14000484f
   140004819:	imul   r9,r8
   14000481d:	cmp    r9,0x1000
   140004824:	jb     0x140004846
   140004826:	test   cl,0x1f
   140004829:	jne    0x140004855
   14000482b:	mov    rax,QWORD PTR [rcx-0x8]
   14000482f:	cmp    rax,rcx
   140004832:	jae    0x14000485b
   140004834:	sub    rcx,rax
   140004837:	cmp    rcx,0x8
   14000483b:	jb     0x140004861
   14000483d:	cmp    rcx,0x27
   140004841:	ja     0x140004867
   140004843:	mov    rcx,rax
   140004846:	add    rsp,0x28
   14000484a:	jmp    0x1400263fc
   14000484f:	call   0x1400307f0
   140004854:	int3   
   140004855:	call   0x1400307f0
   14000485a:	int3   
   14000485b:	call   0x1400307f0
   140004860:	int3   
   140004861:	call   0x1400307f0
   140004866:	int3   
   140004867:	call   0x1400307f0
   14000486c:	int3   
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	mov    QWORD PTR [rsp+0x8],rcx
   140004875:	push   rdi
   140004876:	sub    rsp,0x50
   14000487a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004883:	mov    QWORD PTR [rsp+0x68],rbx
   140004888:	mov    rdi,rdx
   14000488b:	mov    rbx,rcx
   14000488e:	xor    edx,edx
   140004890:	call   0x140027310
   140004895:	nop
   140004896:	xor    eax,eax
   140004898:	mov    QWORD PTR [rbx+0x8],rax
   14000489c:	mov    BYTE PTR [rbx+0x10],al
   14000489f:	mov    QWORD PTR [rbx+0x18],rax
   1400048a3:	mov    BYTE PTR [rbx+0x20],al
   1400048a6:	mov    QWORD PTR [rbx+0x28],rax
   1400048aa:	mov    WORD PTR [rbx+0x30],ax
   1400048ae:	mov    QWORD PTR [rbx+0x38],rax
   1400048b2:	mov    WORD PTR [rbx+0x40],ax
   1400048b6:	mov    QWORD PTR [rbx+0x48],rax
   1400048ba:	mov    BYTE PTR [rbx+0x50],al
   1400048bd:	mov    QWORD PTR [rbx+0x58],rax
   1400048c1:	mov    BYTE PTR [rbx+0x60],al
   1400048c4:	test   rdi,rdi
   1400048c7:	jne    0x14000491f
   1400048c9:	lea    rax,[rip+0x46e78]        # 0x14004b748
   1400048d0:	mov    QWORD PTR [rsp+0x38],rax
   1400048d5:	xor    eax,eax
   1400048d7:	mov    QWORD PTR [rsp+0x40],rax
   1400048dc:	mov    QWORD PTR [rsp+0x48],rax
   1400048e1:	lea    rax,[rip+0x5d3b0]        # 0x140061c98
   1400048e8:	mov    QWORD PTR [rsp+0x28],rax
   1400048ed:	mov    BYTE PTR [rsp+0x30],0x1
   1400048f2:	lea    rdx,[rsp+0x40]
   1400048f7:	lea    rcx,[rsp+0x28]
   1400048fc:	call   0x140028f04
   140004901:	lea    rax,[rip+0x46ea0]        # 0x14004b7a8
   140004908:	mov    QWORD PTR [rsp+0x38],rax
   14000490d:	lea    rdx,[rip+0x6b53c]        # 0x14006fe50
   140004914:	lea    rcx,[rsp+0x38]
   140004919:	call   0x14002ab88
   14000491e:	int3   
   14000491f:	mov    rdx,rdi
   140004922:	mov    rcx,rbx
   140004925:	call   0x1400276d8
   14000492a:	nop
   14000492b:	mov    rax,rbx
   14000492e:	mov    rbx,QWORD PTR [rsp+0x68]
   140004933:	add    rsp,0x50
   140004937:	pop    rdi
   140004938:	ret    
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	rex push rbx
   14000493e:	sub    rsp,0x30
   140004942:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000494b:	mov    rbx,rcx
   14000494e:	call   0x140027744
   140004953:	nop
   140004954:	mov    rcx,QWORD PTR [rbx+0x58]
   140004958:	test   rcx,rcx
   14000495b:	je     0x140004963
   14000495d:	call   0x1400304c4
   140004962:	nop
   140004963:	and    QWORD PTR [rbx+0x58],0x0
   140004968:	mov    rcx,QWORD PTR [rbx+0x48]
   14000496c:	test   rcx,rcx
   14000496f:	je     0x140004977
   140004971:	call   0x1400304c4
   140004976:	nop
   140004977:	and    QWORD PTR [rbx+0x48],0x0
   14000497c:	mov    rcx,QWORD PTR [rbx+0x38]
   140004980:	test   rcx,rcx
   140004983:	je     0x14000498b
   140004985:	call   0x1400304c4
   14000498a:	nop
   14000498b:	and    QWORD PTR [rbx+0x38],0x0
   140004990:	mov    rcx,QWORD PTR [rbx+0x28]
   140004994:	test   rcx,rcx
   140004997:	je     0x14000499f
   140004999:	call   0x1400304c4
   14000499e:	nop
   14000499f:	and    QWORD PTR [rbx+0x28],0x0
   1400049a4:	mov    rcx,QWORD PTR [rbx+0x18]
   1400049a8:	test   rcx,rcx
   1400049ab:	je     0x1400049b3
   1400049ad:	call   0x1400304c4
   1400049b2:	nop
   1400049b3:	and    QWORD PTR [rbx+0x18],0x0
   1400049b8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400049bc:	test   rcx,rcx
   1400049bf:	je     0x1400049c7
   1400049c1:	call   0x1400304c4
   1400049c6:	nop
   1400049c7:	and    QWORD PTR [rbx+0x8],0x0
   1400049cc:	mov    rcx,rbx
   1400049cf:	add    rsp,0x30
   1400049d3:	pop    rbx
   1400049d4:	jmp    0x140027390
   1400049d9:	int3   
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	rex push rbx
   1400049de:	sub    rsp,0x20
   1400049e2:	mov    rbx,rcx
   1400049e5:	mov    rax,rdx
   1400049e8:	lea    rcx,[rip+0x46d59]        # 0x14004b748
   1400049ef:	mov    QWORD PTR [rbx],rcx
   1400049f2:	lea    rdx,[rbx+0x8]
   1400049f6:	xor    ecx,ecx
   1400049f8:	mov    QWORD PTR [rdx],rcx
   1400049fb:	mov    QWORD PTR [rdx+0x8],rcx
   1400049ff:	lea    rcx,[rax+0x8]
   140004a03:	call   0x140028f04
   140004a08:	lea    rax,[rip+0x46d99]        # 0x14004b7a8
   140004a0f:	mov    QWORD PTR [rbx],rax
   140004a12:	mov    rax,rbx
   140004a15:	add    rsp,0x20
   140004a19:	pop    rbx
   140004a1a:	ret    
   140004a1b:	int3   
   140004a1c:	rex push rbx
   140004a1e:	sub    rsp,0x20
   140004a22:	lea    rax,[rip+0x46d97]        # 0x14004b7c0
   140004a29:	mov    rbx,rcx
   140004a2c:	mov    QWORD PTR [rcx],rax
   140004a2f:	test   dl,0x1
   140004a32:	je     0x140004a3e
   140004a34:	mov    edx,0x8
   140004a39:	call   0x140026804
   140004a3e:	mov    rax,rbx
   140004a41:	add    rsp,0x20
   140004a45:	pop    rbx
   140004a46:	ret    
   140004a47:	int3   
   140004a48:	lock inc DWORD PTR [rcx+0x8]
   140004a4c:	ret    
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	lock add DWORD PTR [rcx+0x8],0xffffffff
   140004a55:	mov    eax,0x0
   140004a5a:	cmove  rax,rcx
   140004a5e:	ret    
   140004a5f:	int3   
   140004a60:	lea    rax,[rip+0x46d59]        # 0x14004b7c0
   140004a67:	mov    QWORD PTR [rcx],rax
   140004a6a:	ret    
   140004a6b:	int3   
   140004a6c:	sub    rsp,0x38
   140004a70:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004a79:	mov    rcx,QWORD PTR [rcx+0x8]
   140004a7d:	test   rcx,rcx
   140004a80:	je     0x140004a9d
   140004a82:	mov    rax,QWORD PTR [rcx]
   140004a85:	call   QWORD PTR [rax+0x10]
   140004a88:	nop
   140004a89:	test   rax,rax
   140004a8c:	je     0x140004a9d
   140004a8e:	mov    r8,QWORD PTR [rax]
   140004a91:	mov    edx,0x1
   140004a96:	mov    rcx,rax
   140004a99:	call   QWORD PTR [r8]
   140004a9c:	nop
   140004a9d:	add    rsp,0x38
   140004aa1:	ret    
   140004aa2:	int3   
   140004aa3:	int3   
   140004aa4:	mov    r11,rsp
   140004aa7:	mov    QWORD PTR [r11+0x10],rbx
   140004aab:	mov    QWORD PTR [r11+0x18],rbp
   140004aaf:	push   rsi
   140004ab0:	push   rdi
   140004ab1:	push   r12
   140004ab3:	push   r14
   140004ab5:	push   r15
   140004ab7:	sub    rsp,0x40
   140004abb:	xor    eax,eax
   140004abd:	or     rdi,0xffffffffffffffff
   140004ac1:	mov    QWORD PTR [r11+0x20],rax
   140004ac5:	xor    r12d,r12d
   140004ac8:	mov    r15,r8
   140004acb:	mov    rbp,rcx
   140004ace:	inc    rdi
   140004ad1:	cmp    BYTE PTR [rdi+rcx*1],r12b
   140004ad5:	jne    0x140004ace
   140004ad7:	add    rdi,0x1
   140004adb:	mov    rbx,r12
   140004ade:	mov    rsi,rdi
   140004ae1:	mov    r14,rcx
   140004ae4:	je     0x140004b14
   140004ae6:	lea    r9,[rsp+0x88]
   140004aee:	mov    QWORD PTR [rsp+0x20],r15
   140004af3:	mov    r8,rsi
   140004af6:	lea    rcx,[rsp+0x70]
   140004afb:	mov    rdx,r14
   140004afe:	call   0x1400270f0
   140004b03:	test   eax,eax
   140004b05:	jle    0x140004b14
   140004b07:	cdqe   
   140004b09:	inc    rbx
   140004b0c:	add    r14,rax
   140004b0f:	sub    rsi,rax
   140004b12:	jne    0x140004ae6
   140004b14:	inc    rbx
   140004b17:	mov    edx,0x2
   140004b1c:	mov    rcx,rbx
   140004b1f:	call   0x14002c75c
   140004b24:	mov    r14,rax
   140004b27:	test   rax,rax
   140004b2a:	je     0x140004b86
   140004b2c:	mov    rsi,rax
   140004b2f:	xor    eax,eax
   140004b31:	mov    QWORD PTR [rsp+0x30],rax
   140004b36:	test   rbx,rbx
   140004b39:	je     0x140004b66
   140004b3b:	lea    r9,[rsp+0x30]
   140004b40:	mov    QWORD PTR [rsp+0x20],r15
   140004b45:	mov    r8,rdi
   140004b48:	mov    rdx,rbp
   140004b4b:	mov    rcx,rsi
   140004b4e:	call   0x1400270f0
   140004b53:	test   eax,eax
   140004b55:	jle    0x140004b66
   140004b57:	cdqe   
   140004b59:	add    rsi,0x2
   140004b5d:	add    rbp,rax
   140004b60:	sub    rbx,0x1
   140004b64:	jne    0x140004b3b
   140004b66:	lea    r11,[rsp+0x40]
   140004b6b:	mov    WORD PTR [rsi],r12w
   140004b6f:	mov    rbx,QWORD PTR [r11+0x38]
   140004b73:	mov    rax,r14
   140004b76:	mov    rbp,QWORD PTR [r11+0x40]
   140004b7a:	mov    rsp,r11
   140004b7d:	pop    r15
   140004b7f:	pop    r14
   140004b81:	pop    r12
   140004b83:	pop    rdi
   140004b84:	pop    rsi
   140004b85:	ret    
   140004b86:	call   0x140027a0c
   140004b8b:	int3   
   140004b8c:	mov    rax,rsp
   140004b8f:	push   rdi
   140004b90:	sub    rsp,0xe0
   140004b97:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140004ba0:	mov    QWORD PTR [rax+0x10],rbx
   140004ba4:	mov    QWORD PTR [rax+0x18],rsi
   140004ba8:	mov    rsi,rdx
   140004bab:	mov    rdi,rcx
   140004bae:	and    DWORD PTR [rsp+0xf0],0x0
   140004bb6:	test   rcx,rcx
   140004bb9:	je     0x140004c64
   140004bbf:	cmp    QWORD PTR [rcx],0x0
   140004bc3:	jne    0x140004c64
   140004bc9:	mov    ecx,0x60
   140004bce:	call   0x140026118
   140004bd3:	mov    rbx,rax
   140004bd6:	mov    QWORD PTR [rsp+0xf0],rax
   140004bde:	mov    rcx,QWORD PTR [rsi+0x8]
   140004be2:	test   rcx,rcx
   140004be5:	jne    0x140004bf0
   140004be7:	lea    rdx,[rip+0x5d0c7]        # 0x140061cb5
   140004bee:	jmp    0x140004bfd
   140004bf0:	mov    rdx,QWORD PTR [rcx+0x28]
   140004bf4:	test   rdx,rdx
   140004bf7:	jne    0x140004bfd
   140004bf9:	lea    rdx,[rcx+0x30]
   140004bfd:	lea    rcx,[rsp+0x78]
   140004c02:	call   0x140004870
   140004c07:	and    DWORD PTR [rbx+0x8],0x0
   140004c0b:	lea    rax,[rip+0x46bce]        # 0x14004b7e0
   140004c12:	mov    QWORD PTR [rbx],rax
   140004c15:	lea    rcx,[rsp+0x28]
   140004c1a:	call   0x140027ce0
   140004c1f:	movups xmm0,XMMWORD PTR [rax]
   140004c22:	movups XMMWORD PTR [rbx+0x10],xmm0
   140004c26:	movups xmm1,XMMWORD PTR [rax+0x10]
   140004c2a:	movups XMMWORD PTR [rbx+0x20],xmm1
   140004c2e:	lea    rcx,[rsp+0x48]
   140004c33:	call   0x140027ec8
   140004c38:	movups xmm0,XMMWORD PTR [rax]
   140004c3b:	movups XMMWORD PTR [rbx+0x30],xmm0
   140004c3f:	movups xmm1,XMMWORD PTR [rax+0x10]
   140004c43:	movups XMMWORD PTR [rbx+0x40],xmm1
   140004c47:	movsd  xmm0,QWORD PTR [rax+0x20]
   140004c4c:	movsd  QWORD PTR [rbx+0x50],xmm0
   140004c51:	mov    eax,DWORD PTR [rax+0x28]
   140004c54:	mov    DWORD PTR [rbx+0x58],eax
   140004c57:	mov    QWORD PTR [rdi],rbx
   140004c5a:	lea    rcx,[rsp+0x78]
   140004c5f:	call   0x14000493c
   140004c64:	mov    eax,0x2
   140004c69:	lea    r11,[rsp+0xe0]
   140004c71:	mov    rbx,QWORD PTR [r11+0x18]
   140004c75:	mov    rsi,QWORD PTR [r11+0x20]
   140004c79:	mov    rsp,r11
   140004c7c:	pop    rdi
   140004c7d:	ret    
   140004c7e:	int3   
   140004c7f:	int3   
   140004c80:	rex push rbx
   140004c82:	sub    rsp,0x20
   140004c86:	movzx  ebx,dx
   140004c89:	lea    rdx,[rcx+0x10]
   140004c8d:	movzx  ecx,r8w
   140004c91:	call   0x140027c08
   140004c96:	test   bx,ax
   140004c99:	setne  al
   140004c9c:	add    rsp,0x20
   140004ca0:	pop    rbx
   140004ca1:	ret    
   140004ca2:	int3   
   140004ca3:	int3   
   140004ca4:	mov    rax,r9
   140004ca7:	mov    r10,r8
   140004caa:	mov    r11,rdx
   140004cad:	lea    r9,[rcx+0x10]
   140004cb1:	mov    r8,rax
   140004cb4:	mov    rdx,r10
   140004cb7:	mov    rcx,r11
   140004cba:	jmp    0x140027c3c
   140004cbf:	int3   
   140004cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140004cc5:	mov    QWORD PTR [rsp+0x10],rbp
   140004cca:	mov    QWORD PTR [rsp+0x18],rsi
   140004ccf:	push   rdi
   140004cd0:	sub    rsp,0x20
   140004cd4:	mov    rdi,r9
   140004cd7:	mov    rbx,r8
   140004cda:	movzx  ebp,dx
   140004cdd:	mov    rsi,rcx
   140004ce0:	cmp    r8,r9
   140004ce3:	je     0x140004d02
   140004ce5:	mov    rax,QWORD PTR [rsi]
   140004ce8:	movzx  edx,bp
   140004ceb:	movzx  r8d,WORD PTR [rbx]
   140004cef:	mov    rcx,rsi
   140004cf2:	call   QWORD PTR [rax+0x20]
   140004cf5:	test   al,al
   140004cf7:	jne    0x140004d02
   140004cf9:	add    rbx,0x2
   140004cfd:	cmp    rbx,rdi
   140004d00:	jne    0x140004ce5
   140004d02:	mov    rbp,QWORD PTR [rsp+0x38]
   140004d07:	mov    rax,rbx
   140004d0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d0f:	mov    rsi,QWORD PTR [rsp+0x40]
   140004d14:	add    rsp,0x20
   140004d18:	pop    rdi
   140004d19:	ret    
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	mov    QWORD PTR [rsp+0x8],rbx
   140004d21:	mov    QWORD PTR [rsp+0x10],rbp
   140004d26:	mov    QWORD PTR [rsp+0x18],rsi
   140004d2b:	push   rdi
   140004d2c:	sub    rsp,0x20
   140004d30:	mov    rdi,r9
   140004d33:	mov    rbx,r8
   140004d36:	movzx  ebp,dx
   140004d39:	mov    rsi,rcx
   140004d3c:	cmp    r8,r9
   140004d3f:	je     0x140004d5e
   140004d41:	mov    rax,QWORD PTR [rsi]
   140004d44:	movzx  edx,bp
   140004d47:	movzx  r8d,WORD PTR [rbx]
   140004d4b:	mov    rcx,rsi
   140004d4e:	call   QWORD PTR [rax+0x20]
   140004d51:	test   al,al
   140004d53:	je     0x140004d5e
   140004d55:	add    rbx,0x2
   140004d59:	cmp    rbx,rdi
   140004d5c:	jne    0x140004d41
   140004d5e:	mov    rbp,QWORD PTR [rsp+0x38]
   140004d63:	mov    rax,rbx
   140004d66:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d6b:	mov    rsi,QWORD PTR [rsp+0x40]
   140004d70:	add    rsp,0x20
   140004d74:	pop    rdi
   140004d75:	ret    
   140004d76:	int3   
   140004d77:	int3   
   140004d78:	movzx  eax,dx
   140004d7b:	lea    rdx,[rcx+0x10]
   140004d7f:	movzx  ecx,ax
   140004d82:	jmp    0x140027c6c
   140004d87:	int3   
   140004d88:	mov    QWORD PTR [rsp+0x8],rbx
   140004d8d:	mov    QWORD PTR [rsp+0x10],rbp
   140004d92:	mov    QWORD PTR [rsp+0x18],rsi
   140004d97:	push   rdi
   140004d98:	sub    rsp,0x20
   140004d9c:	xor    esi,esi
   140004d9e:	mov    rdi,r8
   140004da1:	sub    rdi,rdx
   140004da4:	mov    rbx,rdx
   140004da7:	inc    rdi
   140004daa:	shr    rdi,1
   140004dad:	cmp    rdx,r8
   140004db0:	cmova  rdi,rsi
   140004db4:	test   rdi,rdi
   140004db7:	je     0x140004dd7
   140004db9:	lea    rbp,[rcx+0x10]
   140004dbd:	movzx  ecx,WORD PTR [rbx]
   140004dc0:	mov    rdx,rbp
   140004dc3:	call   0x140027c6c
   140004dc8:	mov    WORD PTR [rbx],ax
   140004dcb:	inc    rsi
   140004dce:	add    rbx,0x2
   140004dd2:	cmp    rsi,rdi
   140004dd5:	jne    0x140004dbd
   140004dd7:	mov    rbp,QWORD PTR [rsp+0x38]
   140004ddc:	mov    rax,rbx
   140004ddf:	mov    rbx,QWORD PTR [rsp+0x30]
   140004de4:	mov    rsi,QWORD PTR [rsp+0x40]
   140004de9:	add    rsp,0x20
   140004ded:	pop    rdi
   140004dee:	ret    
   140004def:	int3   
   140004df0:	movzx  eax,dx
   140004df3:	lea    rdx,[rcx+0x10]
   140004df7:	movzx  ecx,ax
   140004dfa:	jmp    0x140027fd4
   140004dff:	int3   
   140004e00:	mov    QWORD PTR [rsp+0x8],rbx
   140004e05:	mov    QWORD PTR [rsp+0x10],rbp
   140004e0a:	mov    QWORD PTR [rsp+0x18],rsi
   140004e0f:	push   rdi
   140004e10:	sub    rsp,0x20
   140004e14:	xor    esi,esi
   140004e16:	mov    rdi,r8
   140004e19:	sub    rdi,rdx
   140004e1c:	mov    rbx,rdx
   140004e1f:	inc    rdi
   140004e22:	shr    rdi,1
   140004e25:	cmp    rdx,r8
   140004e28:	cmova  rdi,rsi
   140004e2c:	test   rdi,rdi
   140004e2f:	je     0x140004e4f
   140004e31:	lea    rbp,[rcx+0x10]
   140004e35:	movzx  ecx,WORD PTR [rbx]
   140004e38:	mov    rdx,rbp
   140004e3b:	call   0x140027fd4
   140004e40:	mov    WORD PTR [rbx],ax
   140004e43:	inc    rsi
   140004e46:	add    rbx,0x2
   140004e4a:	cmp    rsi,rdi
   140004e4d:	jne    0x140004e35
   140004e4f:	mov    rbp,QWORD PTR [rsp+0x38]
   140004e54:	mov    rax,rbx
   140004e57:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e5c:	mov    rsi,QWORD PTR [rsp+0x40]
   140004e61:	add    rsp,0x20
   140004e65:	pop    rdi
   140004e66:	ret    
   140004e67:	int3   
   140004e68:	mov    r11,rsp
   140004e6b:	sub    rsp,0x38
   140004e6f:	xor    eax,eax
   140004e71:	mov    BYTE PTR [rsp+0x48],dl
   140004e75:	mov    QWORD PTR [r11+0x18],rax
   140004e79:	lea    r9,[r11+0x18]
   140004e7d:	lea    rax,[rcx+0x30]
   140004e81:	mov    r8d,0x1
   140004e87:	lea    rcx,[r11+0x8]
   140004e8b:	mov    QWORD PTR [r11-0x18],rax
   140004e8f:	lea    rdx,[r11+0x10]
   140004e93:	call   0x1400270f0
   140004e98:	movzx  ecx,WORD PTR [rsp+0x40]
   140004e9d:	test   eax,eax
   140004e9f:	mov    edx,0xffff
   140004ea4:	cmovs  cx,dx
   140004ea8:	movzx  eax,cx
   140004eab:	add    rsp,0x38
   140004eaf:	ret    
   140004eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140004eb5:	push   rbp
   140004eb6:	push   rsi
   140004eb7:	push   rdi
   140004eb8:	push   r14
   140004eba:	push   r15
   140004ebc:	sub    rsp,0x40
   140004ec0:	xor    r15d,r15d
   140004ec3:	mov    rdi,r8
   140004ec6:	sub    rdi,rdx
   140004ec9:	mov    r14,r9
   140004ecc:	cmp    rdx,r8
   140004ecf:	mov    rbx,rdx
   140004ed2:	mov    ebp,r15d
   140004ed5:	cmova  rdi,r15
   140004ed9:	test   rdi,rdi
   140004edc:	je     0x140004f35
   140004ede:	lea    rsi,[rcx+0x30]
   140004ee2:	mov    al,BYTE PTR [rbx]
   140004ee4:	lea    r9,[rsp+0x30]
   140004ee9:	mov    BYTE PTR [rsp+0x78],al
   140004eed:	lea    rdx,[rsp+0x78]
   140004ef2:	xor    eax,eax
   140004ef4:	mov    QWORD PTR [rsp+0x20],rsi
   140004ef9:	lea    rcx,[rsp+0x80]
   140004f01:	mov    QWORD PTR [rsp+0x30],rax
   140004f06:	lea    r8d,[rax+0x1]
   140004f0a:	call   0x1400270f0
   140004f0f:	movzx  ecx,WORD PTR [rsp+0x80]
   140004f17:	test   eax,eax
   140004f19:	mov    edx,0xffff
   140004f1e:	cmovs  cx,dx
   140004f22:	inc    rbx
   140004f25:	inc    rbp
   140004f28:	mov    WORD PTR [r14],cx
   140004f2c:	lea    r14,[r14+0x2]
   140004f30:	cmp    rbp,rdi
   140004f33:	jne    0x140004ee2
   140004f35:	mov    rax,rbx
   140004f38:	mov    rbx,QWORD PTR [rsp+0x70]
   140004f3d:	add    rsp,0x40
   140004f41:	pop    r15
   140004f43:	pop    r14
   140004f45:	pop    rdi
   140004f46:	pop    rsi
   140004f47:	pop    rbp
   140004f48:	ret    
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	rex push rbx
   140004f4e:	sub    rsp,0x40
   140004f52:	mov    rax,QWORD PTR [rip+0x6c0f7]        # 0x140071050
   140004f59:	xor    rax,rsp
   140004f5c:	mov    QWORD PTR [rsp+0x30],rax
   140004f61:	movzx  ebx,r8b
   140004f65:	lea    r9,[rcx+0x30]
   140004f69:	xor    eax,eax
   140004f6b:	lea    r8,[rsp+0x20]
   140004f70:	lea    rcx,[rsp+0x28]
   140004f75:	mov    QWORD PTR [rsp+0x20],rax
   140004f7a:	call   0x140027f58
   140004f7f:	movzx  edx,BYTE PTR [rsp+0x28]
   140004f84:	cmp    eax,0x1
   140004f87:	cmovne edx,ebx
   140004f8a:	mov    al,dl
   140004f8c:	mov    rcx,QWORD PTR [rsp+0x30]
   140004f91:	xor    rcx,rsp
   140004f94:	call   0x140025df0
   140004f99:	add    rsp,0x40
   140004f9d:	pop    rbx
   140004f9e:	ret    
   140004f9f:	int3   
   140004fa0:	mov    QWORD PTR [rsp+0x18],rbx
   140004fa5:	push   rbp
   140004fa6:	push   rsi
   140004fa7:	push   rdi
   140004fa8:	push   r14
   140004faa:	push   r15
   140004fac:	sub    rsp,0x40
   140004fb0:	mov    rax,QWORD PTR [rip+0x6c099]        # 0x140071050
   140004fb7:	xor    rax,rsp
   140004fba:	mov    QWORD PTR [rsp+0x30],rax
   140004fbf:	mov    r14,QWORD PTR [rsp+0x90]
   140004fc7:	xor    esi,esi
   140004fc9:	mov    rdi,r8
   140004fcc:	mov    r15b,r9b
   140004fcf:	sub    rdi,rdx
   140004fd2:	mov    rbx,rdx
   140004fd5:	inc    rdi
   140004fd8:	shr    rdi,1
   140004fdb:	cmp    rdx,r8
   140004fde:	cmova  rdi,rsi
   140004fe2:	test   rdi,rdi
   140004fe5:	je     0x140005028
   140004fe7:	lea    rbp,[rcx+0x30]
   140004feb:	movzx  edx,WORD PTR [rbx]
   140004fee:	lea    r8,[rsp+0x20]
   140004ff3:	xor    eax,eax
   140004ff5:	lea    rcx,[rsp+0x28]
   140004ffa:	mov    r9,rbp
   140004ffd:	mov    QWORD PTR [rsp+0x20],rax
   140005002:	call   0x140027f58
   140005007:	movzx  edx,BYTE PTR [rsp+0x28]
   14000500c:	cmp    eax,0x1
   14000500f:	movzx  ecx,r15b
   140005013:	cmovne edx,ecx
   140005016:	add    rbx,0x2
   14000501a:	mov    BYTE PTR [r14],dl
   14000501d:	inc    rsi
   140005020:	inc    r14
   140005023:	cmp    rsi,rdi
   140005026:	jne    0x140004feb
   140005028:	mov    rax,rbx
   14000502b:	mov    rcx,QWORD PTR [rsp+0x30]
   140005030:	xor    rcx,rsp
   140005033:	call   0x140025df0
   140005038:	mov    rbx,QWORD PTR [rsp+0x80]
   140005040:	add    rsp,0x40
   140005044:	pop    r15
   140005046:	pop    r14
   140005048:	pop    rdi
   140005049:	pop    rsi
   14000504a:	pop    rbp
   14000504b:	ret    
   14000504c:	mov    QWORD PTR [rsp+0x8],rbx
   140005051:	push   rdi
   140005052:	sub    rsp,0x20
   140005056:	cmp    DWORD PTR [rcx+0x20],0x0
   14000505a:	lea    rax,[rip+0x4677f]        # 0x14004b7e0
   140005061:	mov    QWORD PTR [rcx],rax
   140005064:	mov    edi,edx
   140005066:	mov    rbx,rcx
   140005069:	je     0x140005074
   14000506b:	mov    rcx,QWORD PTR [rcx+0x18]
   14000506f:	call   0x1400304c4
   140005074:	mov    rcx,QWORD PTR [rbx+0x28]
   140005078:	call   0x1400304c4
   14000507d:	lea    rax,[rip+0x4673c]        # 0x14004b7c0
   140005084:	mov    QWORD PTR [rbx],rax
   140005087:	test   dil,0x1
   14000508b:	je     0x14000509a
   14000508d:	mov    edx,0x60
   140005092:	mov    rcx,rbx
   140005095:	call   0x140026804
   14000509a:	mov    rax,rbx
   14000509d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050a2:	add    rsp,0x20
   1400050a6:	pop    rdi
   1400050a7:	ret    
   1400050a8:	rex push rbx
   1400050aa:	sub    rsp,0x20
   1400050ae:	lea    rax,[rip+0x467ab]        # 0x14004b860
   1400050b5:	mov    rbx,rcx
   1400050b8:	mov    QWORD PTR [rcx],rax
   1400050bb:	test   dl,0x1
   1400050be:	je     0x1400050ca
   1400050c0:	mov    edx,0x10
   1400050c5:	call   0x140026804
   1400050ca:	mov    rax,rbx
   1400050cd:	add    rsp,0x20
   1400050d1:	pop    rbx
   1400050d2:	ret    
   1400050d3:	int3   
   1400050d4:	rex push rbx
   1400050d6:	sub    rsp,0x30
   1400050da:	mov    r8d,DWORD PTR [rcx]
   1400050dd:	mov    rbx,rdx
   1400050e0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400050e4:	and    DWORD PTR [rsp+0x20],0x0
   1400050e9:	mov    rax,QWORD PTR [rcx]
   1400050ec:	call   QWORD PTR [rax+0x10]
   1400050ef:	mov    rax,rbx
   1400050f2:	add    rsp,0x30
   1400050f6:	pop    rbx
   1400050f7:	ret    
   1400050f8:	mov    DWORD PTR [rdx],r8d
   1400050fb:	mov    rax,rdx
   1400050fe:	mov    QWORD PTR [rdx+0x8],rcx
   140005102:	ret    
   140005103:	int3   
   140005104:	rex push rbx
   140005106:	sub    rsp,0x30
   14000510a:	mov    rax,QWORD PTR [rcx]
   14000510d:	mov    rbx,r8
   140005110:	mov    r8d,edx
   140005113:	lea    rdx,[rsp+0x20]
   140005118:	call   QWORD PTR [rax+0x18]
   14000511b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000511f:	mov    r9,QWORD PTR [rax+0x8]
   140005123:	mov    rdx,QWORD PTR [rcx+0x8]
   140005127:	cmp    QWORD PTR [r9+0x8],rdx
   14000512b:	jne    0x140005137
   14000512d:	mov    ecx,DWORD PTR [rbx]
   14000512f:	cmp    DWORD PTR [rax],ecx
   140005131:	jne    0x140005137
   140005133:	mov    al,0x1
   140005135:	jmp    0x140005139
   140005137:	xor    al,al
   140005139:	add    rsp,0x30
   14000513d:	pop    rbx
   14000513e:	ret    
   14000513f:	int3   
   140005140:	mov    rax,QWORD PTR [rdx+0x8]
   140005144:	mov    r9,QWORD PTR [rax+0x8]
   140005148:	cmp    QWORD PTR [rcx+0x8],r9
   14000514c:	jne    0x140005159
   14000514e:	cmp    DWORD PTR [rdx],r8d
   140005151:	jne    0x140005159
   140005153:	mov    eax,0x1
   140005158:	ret    
   140005159:	xor    eax,eax
   14000515b:	ret    
   14000515c:	rex push rbx
   14000515e:	push   rsi
   14000515f:	push   rdi
   140005160:	sub    rsp,0x60
   140005164:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000516d:	mov    rax,QWORD PTR [rip+0x6bedc]        # 0x140071050
   140005174:	xor    rax,rsp
   140005177:	mov    QWORD PTR [rsp+0x58],rax
   14000517c:	mov    rbx,r8
   14000517f:	mov    rsi,rdx
   140005182:	mov    rdi,rcx
   140005185:	mov    QWORD PTR [rsp+0x30],rbx
   14000518a:	and    DWORD PTR [rsp+0x20],0x0
   14000518f:	cmp    QWORD PTR [r8+0x10],0x0
   140005194:	je     0x1400051ab
   140005196:	mov    r8d,0x2
   14000519c:	lea    rdx,[rip+0x5cb15]        # 0x140061cb8
   1400051a3:	mov    rcx,rbx
   1400051a6:	call   0x14000bbbc
   1400051ab:	lea    rdx,[rsp+0x38]
   1400051b0:	mov    rcx,rsi
   1400051b3:	call   0x1400050d4
   1400051b8:	nop
   1400051b9:	or     r9,0xffffffffffffffff
   1400051bd:	xor    r8d,r8d
   1400051c0:	mov    rdx,rax
   1400051c3:	mov    rcx,rbx
   1400051c6:	call   0x14000bcf4
   1400051cb:	nop
   1400051cc:	mov    rdx,QWORD PTR [rsp+0x50]
   1400051d1:	cmp    rdx,0x10
   1400051d5:	jb     0x1400051ea
   1400051d7:	inc    rdx
   1400051da:	mov    r8d,0x1
   1400051e0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400051e5:	call   0x140004804
   1400051ea:	mov    esi,0xf
   1400051ef:	mov    QWORD PTR [rdi+0x18],rsi
   1400051f3:	and    QWORD PTR [rdi+0x10],0x0
   1400051f8:	cmp    rsi,0x10
   1400051fc:	jb     0x140005203
   1400051fe:	mov    rax,QWORD PTR [rdi]
   140005201:	jmp    0x140005206
   140005203:	mov    rax,rdi
   140005206:	mov    BYTE PTR [rax],0x0
   140005209:	mov    rdx,rbx
   14000520c:	mov    rcx,rdi
   14000520f:	call   0x14000be10
   140005214:	nop
   140005215:	mov    rdx,QWORD PTR [rbx+0x18]
   140005219:	cmp    rdx,0x10
   14000521d:	jb     0x140005230
   14000521f:	inc    rdx
   140005222:	mov    r8d,0x1
   140005228:	mov    rcx,QWORD PTR [rbx]
   14000522b:	call   0x140004804
   140005230:	mov    QWORD PTR [rbx+0x18],rsi
   140005234:	and    QWORD PTR [rbx+0x10],0x0
   140005239:	cmp    rsi,0x10
   14000523d:	jb     0x140005242
   14000523f:	mov    rbx,QWORD PTR [rbx]
   140005242:	mov    BYTE PTR [rbx],0x0
   140005245:	mov    rax,rdi
   140005248:	mov    rcx,QWORD PTR [rsp+0x58]
   14000524d:	xor    rcx,rsp
   140005250:	call   0x140025df0
   140005255:	add    rsp,0x60
   140005259:	pop    rdi
   14000525a:	pop    rsi
   14000525b:	pop    rbx
   14000525c:	ret    
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	rex push rbp
   140005262:	push   rbx
   140005263:	push   rdi
   140005264:	mov    rbp,rsp
   140005267:	sub    rsp,0x80
   14000526e:	mov    rax,QWORD PTR [rip+0x6bddb]        # 0x140071050
   140005275:	xor    rax,rsp
   140005278:	mov    QWORD PTR [rbp-0x10],rax
   14000527c:	and    QWORD PTR [rbp-0x40],0x0
   140005281:	mov    rax,r8
   140005284:	mov    rdi,rdx
   140005287:	mov    QWORD PTR [rbp-0x38],0xf
   14000528f:	mov    rbx,rcx
   140005292:	mov    BYTE PTR [rbp-0x50],0x0
   140005296:	mov    rdx,rax
   140005299:	lea    rcx,[rbp-0x50]
   14000529d:	or     r9,0xffffffffffffffff
   1400052a1:	xor    r8d,r8d
   1400052a4:	call   0x14000ba94
   1400052a9:	movups xmm0,XMMWORD PTR [rdi]
   1400052ac:	lea    r8,[rbp-0x50]
   1400052b0:	lea    rdx,[rbp-0x60]
   1400052b4:	lea    rcx,[rbp-0x30]
   1400052b8:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   1400052bd:	call   0x14000515c
   1400052c2:	cmp    QWORD PTR [rax+0x18],0x10
   1400052c7:	jb     0x1400052cc
   1400052c9:	mov    rax,QWORD PTR [rax]
   1400052cc:	lea    rdx,[rbx+0x8]
   1400052d0:	mov    QWORD PTR [rbp-0x60],rax
   1400052d4:	lea    rcx,[rip+0x4646d]        # 0x14004b748
   1400052db:	mov    BYTE PTR [rbp-0x58],0x1
   1400052df:	mov    QWORD PTR [rbx],rcx
   1400052e2:	xor    ecx,ecx
   1400052e4:	mov    QWORD PTR [rdx],rcx
   1400052e7:	mov    QWORD PTR [rdx+0x8],rcx
   1400052eb:	lea    rcx,[rbp-0x60]
   1400052ef:	call   0x140028f04
   1400052f4:	mov    rdx,QWORD PTR [rbp-0x18]
   1400052f8:	lea    rax,[rip+0x464a9]        # 0x14004b7a8
   1400052ff:	mov    QWORD PTR [rbx],rax
   140005302:	cmp    rdx,0x10
   140005306:	jb     0x14000531a
   140005308:	mov    rcx,QWORD PTR [rbp-0x30]
   14000530c:	inc    rdx
   14000530f:	mov    r8d,0x1
   140005315:	call   0x140004804
   14000531a:	lea    rax,[rip+0x46577]        # 0x14004b898
   140005321:	mov    QWORD PTR [rbx],rax
   140005324:	mov    rax,rbx
   140005327:	movups xmm0,XMMWORD PTR [rdi]
   14000532a:	movdqu XMMWORD PTR [rbx+0x18],xmm0
   14000532f:	mov    rcx,QWORD PTR [rbp-0x10]
   140005333:	xor    rcx,rsp
   140005336:	call   0x140025df0
   14000533b:	add    rsp,0x80
   140005342:	pop    rdi
   140005343:	pop    rbx
   140005344:	pop    rbp
   140005345:	ret    
   140005346:	int3   
   140005347:	int3   
   140005348:	mov    QWORD PTR [rsp+0x8],rbx
   14000534d:	push   rdi
   14000534e:	sub    rsp,0x20
   140005352:	lea    rax,[rip+0x463ef]        # 0x14004b748
   140005359:	mov    rdi,rcx
   14000535c:	mov    QWORD PTR [rcx],rax
   14000535f:	mov    ebx,edx
   140005361:	add    rcx,0x8
   140005365:	call   0x140028f94
   14000536a:	test   bl,0x1
   14000536d:	je     0x14000537c
   14000536f:	mov    edx,0x28
   140005374:	mov    rcx,rdi
   140005377:	call   0x140026804
   14000537c:	mov    rax,rdi
   14000537f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005384:	add    rsp,0x20
   140005388:	pop    rdi
   140005389:	ret    
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	mov    r11,rsp
   14000538f:	push   rdi
   140005390:	sub    rsp,0x70
   140005394:	mov    QWORD PTR [r11-0x58],0xfffffffffffffffe
   14000539c:	mov    QWORD PTR [r11+0x20],rbx
   1400053a0:	mov    rax,QWORD PTR [rip+0x6bca9]        # 0x140071050
   1400053a7:	xor    rax,rsp
   1400053aa:	mov    QWORD PTR [rsp+0x60],rax
   1400053af:	mov    r9,r8
   1400053b2:	mov    rdi,rdx
   1400053b5:	mov    rbx,rcx
   1400053b8:	mov    QWORD PTR [r11-0x20],0xf
   1400053c0:	xor    r8d,r8d
   1400053c3:	mov    QWORD PTR [r11-0x28],r8
   1400053c7:	mov    BYTE PTR [r11-0x38],r8b
   1400053cb:	cmp    BYTE PTR [r9],r8b
   1400053ce:	je     0x1400053e0
   1400053d0:	or     rax,0xffffffffffffffff
   1400053d4:	inc    rax
   1400053d7:	cmp    BYTE PTR [r9+rax*1],r8b
   1400053db:	jne    0x1400053d4
   1400053dd:	mov    r8,rax
   1400053e0:	mov    rdx,r9
   1400053e3:	lea    rcx,[rsp+0x40]
   1400053e8:	call   0x14000b994
   1400053ed:	nop
   1400053ee:	movups xmm0,XMMWORD PTR [rdi]
   1400053f1:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400053f7:	lea    r8,[rsp+0x40]
   1400053fc:	lea    rdx,[rsp+0x30]
   140005401:	mov    rcx,rbx
   140005404:	call   0x140005260
   140005409:	nop
   14000540a:	mov    rdx,QWORD PTR [rsp+0x58]
   14000540f:	cmp    rdx,0x10
   140005413:	jb     0x140005428
   140005415:	inc    rdx
   140005418:	mov    r8d,0x1
   14000541e:	mov    rcx,QWORD PTR [rsp+0x40]
   140005423:	call   0x140004804
   140005428:	lea    rax,[rip+0x46481]        # 0x14004b8b0
   14000542f:	mov    QWORD PTR [rbx],rax
   140005432:	mov    rax,rbx
   140005435:	mov    rcx,QWORD PTR [rsp+0x60]
   14000543a:	xor    rcx,rsp
   14000543d:	call   0x140025df0
   140005442:	mov    rbx,QWORD PTR [rsp+0x98]
   14000544a:	add    rsp,0x70
   14000544e:	pop    rdi
   14000544f:	ret    
   140005450:	mov    QWORD PTR [rsp+0x8],rbx
   140005455:	push   rdi
   140005456:	sub    rsp,0x30
   14000545a:	xor    ebx,ebx
   14000545c:	mov    ecx,r8d
   14000545f:	mov    DWORD PTR [rsp+0x20],ebx
   140005463:	mov    rdi,rdx
   140005466:	call   0x140027be0
   14000546b:	mov    QWORD PTR [rdi+0x18],0xf
   140005473:	mov    rdx,rax
   140005476:	mov    QWORD PTR [rdi+0x10],rbx
   14000547a:	mov    BYTE PTR [rdi],bl
   14000547c:	cmp    BYTE PTR [rax],bl
   14000547e:	je     0x14000548f
   140005480:	or     rax,0xffffffffffffffff
   140005484:	inc    rax
   140005487:	cmp    BYTE PTR [rdx+rax*1],bl
   14000548a:	jne    0x140005484
   14000548c:	mov    rbx,rax
   14000548f:	mov    r8,rbx
   140005492:	mov    rcx,rdi
   140005495:	call   0x14000b994
   14000549a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000549f:	mov    rax,rdi
   1400054a2:	add    rsp,0x30
   1400054a6:	pop    rdi
   1400054a7:	ret    
   1400054a8:	lea    rax,[rip+0x5c811]        # 0x140061cc0
   1400054af:	ret    
   1400054b0:	rex push rbx
   1400054b2:	sub    rsp,0x30
   1400054b6:	xor    eax,eax
   1400054b8:	mov    rbx,rdx
   1400054bb:	mov    DWORD PTR [rsp+0x20],eax
   1400054bf:	cmp    r8d,0x1
   1400054c3:	jne    0x1400054e8
   1400054c5:	mov    QWORD PTR [rdx+0x18],0xf
   1400054cd:	lea    r8d,[rax+0x15]
   1400054d1:	mov    QWORD PTR [rdx+0x10],rax
   1400054d5:	mov    rcx,rbx
   1400054d8:	mov    BYTE PTR [rdx],al
   1400054da:	lea    rdx,[rip+0x5c7ef]        # 0x140061cd0
   1400054e1:	call   0x14000b994
   1400054e6:	jmp    0x1400054ed
   1400054e8:	call   0x140005450
   1400054ed:	mov    rax,rbx
   1400054f0:	add    rsp,0x30
   1400054f4:	pop    rbx
   1400054f5:	ret    
   1400054f6:	int3   
   1400054f7:	int3   
   1400054f8:	rex push rbp
   1400054fa:	mov    rbp,rsp
   1400054fd:	sub    rsp,0x60
   140005501:	mov    eax,DWORD PTR [rcx+0x14]
   140005504:	and    edx,0x17
   140005507:	mov    DWORD PTR [rcx+0x10],edx
   14000550a:	and    eax,edx
   14000550c:	je     0x140005527
   14000550e:	test   r8b,r8b
   140005511:	jne    0x14000552d
   140005513:	mov    DWORD PTR [rbp-0x40],0x1
   14000551a:	test   al,0x4
   14000551c:	jne    0x140005537
   14000551e:	test   al,0x2
   140005520:	jne    0x140005579
   140005522:	jmp    0x1400055bb
   140005527:	add    rsp,0x60
   14000552b:	pop    rbp
   14000552c:	ret    
   14000552d:	xor    edx,edx
   14000552f:	xor    ecx,ecx
   140005531:	call   0x14002ab88
   140005536:	int3   
   140005537:	call   0x14000d030
   14000553c:	mov    QWORD PTR [rbp-0x38],rax
   140005540:	lea    r8,[rip+0x5c7a1]        # 0x140061ce8
   140005547:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14000554b:	lea    rdx,[rbp-0x40]
   14000554f:	lea    rcx,[rbp-0x30]
   140005553:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140005558:	call   0x14000538c
   14000555d:	lea    rax,[rip+0x4639c]        # 0x14004b900
   140005564:	lea    rdx,[rip+0x6aa65]        # 0x14006ffd0
   14000556b:	mov    QWORD PTR [rbp-0x30],rax
   14000556f:	lea    rcx,[rbp-0x30]
   140005573:	call   0x14002ab88
   140005578:	int3   
   140005579:	call   0x14000d030
   14000557e:	mov    QWORD PTR [rbp-0x38],rax
   140005582:	lea    r8,[rip+0x5c777]        # 0x140061d00
   140005589:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14000558d:	lea    rdx,[rbp-0x40]
   140005591:	lea    rcx,[rbp-0x30]
   140005595:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   14000559a:	call   0x14000538c
   14000559f:	lea    rax,[rip+0x4635a]        # 0x14004b900
   1400055a6:	lea    rdx,[rip+0x6aa23]        # 0x14006ffd0
   1400055ad:	mov    QWORD PTR [rbp-0x30],rax
   1400055b1:	lea    rcx,[rbp-0x30]
   1400055b5:	call   0x14002ab88
   1400055ba:	int3   
   1400055bb:	call   0x14000d030
   1400055c0:	mov    QWORD PTR [rbp-0x38],rax
   1400055c4:	lea    r8,[rip+0x5c74d]        # 0x140061d18
   1400055cb:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   1400055cf:	lea    rdx,[rbp-0x40]
   1400055d3:	lea    rcx,[rbp-0x30]
   1400055d7:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   1400055dc:	call   0x14000538c
   1400055e1:	lea    rax,[rip+0x46318]        # 0x14004b900
   1400055e8:	lea    rdx,[rip+0x6a9e1]        # 0x14006ffd0
   1400055ef:	mov    QWORD PTR [rbp-0x30],rax
   1400055f3:	lea    rcx,[rbp-0x30]
   1400055f7:	call   0x14002ab88
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	rex push rbx
   140005602:	sub    rsp,0x30
   140005606:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000560f:	mov    rbx,rdx
   140005612:	mov    rax,QWORD PTR [rcx+0x40]
   140005616:	mov    rcx,QWORD PTR [rax+0x8]
   14000561a:	mov    QWORD PTR [rdx+0x8],rcx
   14000561e:	mov    rax,QWORD PTR [rcx]
   140005621:	call   QWORD PTR [rax+0x8]
   140005624:	nop
   140005625:	mov    rax,rbx
   140005628:	add    rsp,0x30
   14000562c:	pop    rbx
   14000562d:	ret    
   14000562e:	int3   
   14000562f:	int3   
   140005630:	rex push rdi
   140005632:	sub    rsp,0x30
   140005636:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000563f:	mov    QWORD PTR [rsp+0x40],rbx
   140005644:	mov    rdi,rcx
   140005647:	xor    eax,eax
   140005649:	mov    QWORD PTR [rcx+0x40],rax
   14000564d:	mov    QWORD PTR [rcx+0x8],rax
   140005651:	mov    DWORD PTR [rcx+0x14],eax
   140005654:	mov    DWORD PTR [rcx+0x18],0x201
   14000565b:	mov    QWORD PTR [rcx+0x20],0x6
   140005663:	mov    QWORD PTR [rcx+0x28],rax
   140005667:	mov    QWORD PTR [rcx+0x30],rax
   14000566b:	mov    QWORD PTR [rcx+0x38],rax
   14000566f:	xor    r8d,r8d
   140005672:	xor    edx,edx
   140005674:	call   0x1400054f8
   140005679:	mov    ecx,0x10
   14000567e:	call   0x140026118
   140005683:	mov    rbx,rax
   140005686:	mov    cl,0x1
   140005688:	call   0x140027574
   14000568d:	mov    QWORD PTR [rbx+0x8],rax
   140005691:	mov    QWORD PTR [rdi+0x40],rbx
   140005695:	mov    rbx,QWORD PTR [rsp+0x40]
   14000569a:	add    rsp,0x30
   14000569e:	pop    rdi
   14000569f:	ret    
   1400056a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400056a5:	push   rdi
   1400056a6:	sub    rsp,0x20
   1400056aa:	mov    rbx,rdx
   1400056ad:	lea    rax,[rip+0x46094]        # 0x14004b748
   1400056b4:	mov    QWORD PTR [rcx],rax
   1400056b7:	lea    rdx,[rcx+0x8]
   1400056bb:	xor    eax,eax
   1400056bd:	mov    rdi,rcx
   1400056c0:	mov    QWORD PTR [rdx],rax
   1400056c3:	lea    rcx,[rbx+0x8]
   1400056c7:	mov    QWORD PTR [rdx+0x8],rax
   1400056cb:	call   0x140028f04
   1400056d0:	lea    rax,[rip+0x461c1]        # 0x14004b898
   1400056d7:	mov    QWORD PTR [rdi],rax
   1400056da:	lea    rax,[rip+0x4621f]        # 0x14004b900
   1400056e1:	movups xmm0,XMMWORD PTR [rbx+0x18]
   1400056e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056ea:	mov    QWORD PTR [rdi],rax
   1400056ed:	mov    rax,rdi
   1400056f0:	movdqu XMMWORD PTR [rdi+0x18],xmm0
   1400056f5:	add    rsp,0x20
   1400056f9:	pop    rdi
   1400056fa:	ret    
   1400056fb:	int3   
   1400056fc:	mov    QWORD PTR [rsp+0x8],rbx
   140005701:	push   rdi
   140005702:	sub    rsp,0x20
   140005706:	mov    rbx,rdx
   140005709:	lea    rax,[rip+0x46038]        # 0x14004b748
   140005710:	mov    QWORD PTR [rcx],rax
   140005713:	lea    rdx,[rcx+0x8]
   140005717:	xor    eax,eax
   140005719:	mov    rdi,rcx
   14000571c:	mov    QWORD PTR [rdx],rax
   14000571f:	lea    rcx,[rbx+0x8]
   140005723:	mov    QWORD PTR [rdx+0x8],rax
   140005727:	call   0x140028f04
   14000572c:	lea    rax,[rip+0x46165]        # 0x14004b898
   140005733:	mov    QWORD PTR [rdi],rax
   140005736:	lea    rax,[rip+0x46173]        # 0x14004b8b0
   14000573d:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140005741:	mov    rbx,QWORD PTR [rsp+0x30]
   140005746:	mov    QWORD PTR [rdi],rax
   140005749:	mov    rax,rdi
   14000574c:	movdqu XMMWORD PTR [rdi+0x18],xmm0
   140005751:	add    rsp,0x20
   140005755:	pop    rdi
   140005756:	ret    
   140005757:	int3   
   140005758:	mov    QWORD PTR [rsp+0x8],rbx
   14000575d:	push   rdi
   14000575e:	sub    rsp,0x20
   140005762:	mov    rbx,rdx
   140005765:	lea    rax,[rip+0x45fdc]        # 0x14004b748
   14000576c:	mov    QWORD PTR [rcx],rax
   14000576f:	lea    rdx,[rcx+0x8]
   140005773:	xor    eax,eax
   140005775:	mov    rdi,rcx
   140005778:	mov    QWORD PTR [rdx],rax
   14000577b:	lea    rcx,[rbx+0x8]
   14000577f:	mov    QWORD PTR [rdx+0x8],rax
   140005783:	call   0x140028f04
   140005788:	lea    rax,[rip+0x46109]        # 0x14004b898
   14000578f:	mov    QWORD PTR [rdi],rax
   140005792:	mov    rax,rdi
   140005795:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140005799:	mov    rbx,QWORD PTR [rsp+0x30]
   14000579e:	movdqu XMMWORD PTR [rdi+0x18],xmm0
   1400057a3:	add    rsp,0x20
   1400057a7:	pop    rdi
   1400057a8:	ret    
   1400057a9:	int3   
   1400057aa:	int3   
   1400057ab:	int3   
   1400057ac:	rex push rdi
   1400057ae:	sub    rsp,0x30
   1400057b2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400057bb:	mov    QWORD PTR [rsp+0x40],rbx
   1400057c0:	mov    ebx,edx
   1400057c2:	mov    rdi,rcx
   1400057c5:	lea    rax,[rip+0x4614c]        # 0x14004b918
   1400057cc:	mov    QWORD PTR [rcx],rax
   1400057cf:	call   0x140027b0c
   1400057d4:	nop
   1400057d5:	test   bl,0x1
   1400057d8:	je     0x1400057e8
   1400057da:	mov    edx,0x48
   1400057df:	mov    rcx,rdi
   1400057e2:	call   0x140026804
   1400057e7:	nop
   1400057e8:	mov    rax,rdi
   1400057eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400057f0:	add    rsp,0x30
   1400057f4:	pop    rdi
   1400057f5:	ret    
   1400057f6:	int3   
   1400057f7:	int3   
   1400057f8:	rex push rbx
   1400057fa:	sub    rsp,0x20
   1400057fe:	lea    rbx,[rcx+0xa0]
   140005805:	mov    rcx,rbx
   140005808:	call   0x140005828
   14000580d:	lea    rax,[rip+0x45f34]        # 0x14004b748
   140005814:	lea    rcx,[rbx+0x8]
   140005818:	mov    QWORD PTR [rbx],rax
   14000581b:	add    rsp,0x20
   14000581f:	pop    rbx
   140005820:	jmp    0x140028f94
   140005825:	int3   
   140005826:	int3   
   140005827:	int3   
   140005828:	mov    QWORD PTR [rsp+0x8],rbx
   14000582d:	push   rdi
   14000582e:	sub    rsp,0x20
   140005832:	lea    rbx,[rcx-0x28]
   140005836:	mov    rdi,rcx
   140005839:	mov    rdx,QWORD PTR [rbx+0x18]
   14000583d:	cmp    rdx,0x10
   140005841:	jb     0x140005854
   140005843:	mov    rcx,QWORD PTR [rbx]
   140005846:	inc    rdx
   140005849:	mov    r8d,0x1
   14000584f:	call   0x140004804
   140005854:	mov    QWORD PTR [rbx+0x18],0xf
   14000585c:	and    QWORD PTR [rbx+0x10],0x0
   140005861:	cmp    QWORD PTR [rbx+0x18],0x10
   140005866:	jb     0x14000586b
   140005868:	mov    rbx,QWORD PTR [rbx]
   14000586b:	lea    rcx,[rdi-0x48]
   14000586f:	mov    BYTE PTR [rbx],0x0
   140005872:	xor    r8d,r8d
   140005875:	mov    dl,0x1
   140005877:	call   0x14000b6b0
   14000587c:	lea    rcx,[rdi-0x68]
   140005880:	xor    r8d,r8d
   140005883:	mov    dl,0x1
   140005885:	call   0x14000b6b0
   14000588a:	lea    rcx,[rdi-0x88]
   140005891:	xor    r8d,r8d
   140005894:	mov    dl,0x1
   140005896:	mov    rbx,QWORD PTR [rsp+0x30]
   14000589b:	add    rsp,0x20
   14000589f:	pop    rdi
   1400058a0:	jmp    0x14000b6b0
   1400058a5:	int3   
   1400058a6:	int3   
   1400058a7:	int3   
   1400058a8:	int3   
   1400058a9:	int3   
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	rex push rbx
   1400058b2:	sub    rsp,0x20
   1400058b6:	mov    rbx,rcx
   1400058b9:	add    rcx,0xa0
   1400058c0:	call   0x140005828
   1400058c5:	lea    rax,[rip+0x45e7c]        # 0x14004b748
   1400058cc:	lea    rcx,[rbx+0xb0]
   1400058d3:	mov    QWORD PTR [rbx+0xa8],rax
   1400058da:	add    rsp,0x20
   1400058de:	pop    rbx
   1400058df:	jmp    0x140028f94
   1400058e4:	mov    rax,rsp
   1400058e7:	mov    QWORD PTR [rax+0x8],rcx
   1400058eb:	push   rdi
   1400058ec:	sub    rsp,0x30
   1400058f0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400058f8:	mov    QWORD PTR [rax+0x10],rbx
   1400058fc:	mov    rdi,rdx
   1400058ff:	mov    rbx,rcx
   140005902:	and    DWORD PTR [rax+0x18],0x0
   140005906:	test   r8d,r8d
   140005909:	je     0x14000595e
   14000590b:	lea    rax,[rip+0x5e96e]        # 0x140064280
   140005912:	mov    QWORD PTR [rcx+0x8],rax
   140005916:	test   rdx,rdx
   140005919:	jne    0x14000591f
   14000591b:	xor    ecx,ecx
   14000591d:	jmp    0x14000592e
   14000591f:	mov    rax,QWORD PTR [rdx+0x8]
   140005923:	movsxd rcx,DWORD PTR [rax+0x4]
   140005927:	add    rcx,0x8
   14000592b:	add    rcx,rdi
   14000592e:	lea    rax,[rip+0x45e13]        # 0x14004b748
   140005935:	mov    QWORD PTR [rbx+0xa8],rax
   14000593c:	lea    rdx,[rbx+0xb0]
   140005943:	xor    eax,eax
   140005945:	mov    QWORD PTR [rdx],rax
   140005948:	mov    QWORD PTR [rdx+0x8],rax
   14000594c:	add    rcx,0x8
   140005950:	call   0x140028f04
   140005955:	nop
   140005956:	mov    DWORD PTR [rsp+0x50],0x1
   14000595e:	xor    r8d,r8d
   140005961:	mov    rdx,rdi
   140005964:	mov    rcx,rbx
   140005967:	call   0x140020494
   14000596c:	lea    rax,[rip+0x462bd]        # 0x14004bc30
   140005973:	mov    QWORD PTR [rbx],rax
   140005976:	mov    rax,QWORD PTR [rbx+0x8]
   14000597a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000597e:	lea    rax,[rip+0x462bb]        # 0x14004bc40
   140005985:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   14000598a:	mov    rax,QWORD PTR [rbx+0x8]
   14000598e:	movsxd rcx,DWORD PTR [rax+0x4]
   140005992:	and    DWORD PTR [rcx+rbx*1+0x4],0x0
   140005997:	mov    eax,DWORD PTR [rdi+0x98]
   14000599d:	mov    DWORD PTR [rbx+0x98],eax
   1400059a3:	mov    rax,rbx
   1400059a6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400059ab:	add    rsp,0x30
   1400059af:	pop    rdi
   1400059b0:	ret    
   1400059b1:	int3   
   1400059b2:	int3   
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400059c5:	push   rdi
   1400059c6:	sub    rsp,0x20
   1400059ca:	lea    rdi,[rcx-0xa8]
   1400059d1:	mov    ebx,edx
   1400059d3:	lea    rcx,[rdi+0xa0]
   1400059da:	call   0x140005828
   1400059df:	lea    rax,[rip+0x45d62]        # 0x14004b748
   1400059e6:	lea    rcx,[rdi+0xb0]
   1400059ed:	mov    QWORD PTR [rdi+0xa8],rax
   1400059f4:	call   0x140028f94
   1400059f9:	test   bl,0x1
   1400059fc:	je     0x140005a0b
   1400059fe:	mov    edx,0xc0
   140005a03:	mov    rcx,rdi
   140005a06:	call   0x140026804
   140005a0b:	mov    rax,rdi
   140005a0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a13:	add    rsp,0x20
   140005a17:	pop    rdi
   140005a18:	ret    
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	mov    QWORD PTR [rsp+0x8],rbx
   140005a21:	mov    QWORD PTR [rsp+0x10],rdi
   140005a26:	lea    r11,[rip+0x5e323]        # 0x140063d50
   140005a2d:	mov    r9,rdx
   140005a30:	mov    ebx,ecx
   140005a32:	cmp    ecx,0x2710
   140005a38:	jae    0x140005a8b
   140005a3a:	mov    eax,0x51eb851f
   140005a3f:	mul    ebx
   140005a41:	shr    edx,0x5
   140005a44:	imul   eax,edx,0x64
   140005a47:	lea    ecx,[rdx+rdx*1]
   140005a4a:	mov    edx,ebx
   140005a4c:	sub    edx,eax
   140005a4e:	add    edx,edx
   140005a50:	cmp    ebx,0x3e8
   140005a56:	jb     0x140005a62
   140005a58:	mov    al,BYTE PTR [rcx+r11*1]
   140005a5c:	mov    BYTE PTR [r9],al
   140005a5f:	inc    r9
   140005a62:	cmp    ebx,0x64
   140005a65:	jb     0x140005a74
   140005a67:	lea    eax,[rcx+0x1]
   140005a6a:	mov    al,BYTE PTR [rax+r11*1]
   140005a6e:	mov    BYTE PTR [r9],al
   140005a71:	inc    r9
   140005a74:	cmp    ebx,0xa
   140005a77:	jb     0x140005a83
   140005a79:	mov    al,BYTE PTR [rdx+r11*1]
   140005a7d:	mov    BYTE PTR [r9],al
   140005a80:	inc    r9
   140005a83:	lea    eax,[rdx+0x1]
   140005a86:	jmp    0x140005c0f
   140005a8b:	cmp    ebx,0x5f5e100
   140005a91:	jae    0x140005b4c
   140005a97:	mov    eax,0xd1b71759
   140005a9c:	mov    r10d,ebx
   140005a9f:	mul    ebx
   140005aa1:	mov    r8d,edx
   140005aa4:	shr    r8d,0xd
   140005aa8:	imul   eax,r8d,0x2710
   140005aaf:	sub    r10d,eax
   140005ab2:	mov    eax,0x51eb851f
   140005ab7:	mul    r8d
   140005aba:	shr    edx,0x5
   140005abd:	imul   eax,edx,0x64
   140005ac0:	lea    ecx,[rdx+rdx*1]
   140005ac3:	sub    r8d,eax
   140005ac6:	mov    eax,0x51eb851f
   140005acb:	mul    r10d
   140005ace:	add    r8d,r8d
   140005ad1:	shr    edx,0x5
   140005ad4:	imul   eax,edx,0x64
   140005ad7:	lea    edi,[rdx+rdx*1]
   140005ada:	sub    r10d,eax
   140005add:	add    r10d,r10d
   140005ae0:	cmp    ebx,0x989680
   140005ae6:	jb     0x140005af2
   140005ae8:	mov    al,BYTE PTR [rcx+r11*1]
   140005aec:	mov    BYTE PTR [r9],al
   140005aef:	inc    r9
   140005af2:	cmp    ebx,0xf4240
   140005af8:	jb     0x140005b07
   140005afa:	lea    eax,[rcx+0x1]
   140005afd:	mov    al,BYTE PTR [rax+r11*1]
   140005b01:	mov    BYTE PTR [r9],al
   140005b04:	inc    r9
   140005b07:	cmp    ebx,0x186a0
   140005b0d:	jb     0x140005b19
   140005b0f:	mov    al,BYTE PTR [r8+r11*1]
   140005b13:	mov    BYTE PTR [r9],al
   140005b16:	inc    r9
   140005b19:	lea    eax,[r8+0x1]
   140005b1d:	mov    al,BYTE PTR [rax+r11*1]
   140005b21:	mov    BYTE PTR [r9],al
   140005b24:	mov    al,BYTE PTR [rdi+r11*1]
   140005b28:	mov    BYTE PTR [r9+0x1],al
   140005b2c:	lea    eax,[rdi+0x1]
   140005b2f:	mov    al,BYTE PTR [rax+r11*1]
   140005b33:	mov    BYTE PTR [r9+0x2],al
   140005b37:	mov    al,BYTE PTR [r10+r11*1]
   140005b3b:	mov    BYTE PTR [r9+0x3],al
   140005b3f:	add    r9,0x4
   140005b43:	lea    eax,[r10+0x1]
   140005b47:	jmp    0x140005c0f
   140005b4c:	mov    eax,0x55e63b89
   140005b51:	mul    ebx
   140005b53:	shr    edx,0x19
   140005b56:	imul   eax,edx,0xfa0a1f00
   140005b5c:	add    ebx,eax
   140005b5e:	cmp    edx,0xa
   140005b61:	jb     0x140005b7c
   140005b63:	lea    ecx,[rdx+rdx*1]
   140005b66:	mov    al,BYTE PTR [rcx+r11*1]
   140005b6a:	mov    BYTE PTR [r9],al
   140005b6d:	inc    r9
   140005b70:	lea    eax,[rcx+0x1]
   140005b73:	mov    al,BYTE PTR [rax+r11*1]
   140005b77:	mov    BYTE PTR [r9],al
   140005b7a:	jmp    0x140005b82
   140005b7c:	add    dl,0x30
   140005b7f:	mov    BYTE PTR [r9],dl
   140005b82:	mov    eax,0xd1b71759
   140005b87:	mul    ebx
   140005b89:	mov    r10d,edx
   140005b8c:	shr    r10d,0xd
   140005b90:	imul   eax,r10d,0x2710
   140005b97:	sub    ebx,eax
   140005b99:	mov    eax,0x51eb851f
   140005b9e:	mul    r10d
   140005ba1:	shr    edx,0x5
   140005ba4:	imul   eax,edx,0x64
   140005ba7:	lea    ecx,[rdx+rdx*1]
   140005baa:	sub    r10d,eax
   140005bad:	mov    eax,0x51eb851f
   140005bb2:	mul    ebx
   140005bb4:	add    r10d,r10d
   140005bb7:	shr    edx,0x5
   140005bba:	imul   eax,edx,0x64
   140005bbd:	lea    r8d,[rdx+rdx*1]
   140005bc1:	sub    ebx,eax
   140005bc3:	mov    al,BYTE PTR [rcx+r11*1]
   140005bc7:	mov    BYTE PTR [r9+0x1],al
   140005bcb:	add    ebx,ebx
   140005bcd:	lea    eax,[rcx+0x1]
   140005bd0:	mov    al,BYTE PTR [rax+r11*1]
   140005bd4:	mov    BYTE PTR [r9+0x2],al
   140005bd8:	mov    al,BYTE PTR [r10+r11*1]
   140005bdc:	mov    BYTE PTR [r9+0x3],al
   140005be0:	lea    eax,[r10+0x1]
   140005be4:	mov    al,BYTE PTR [rax+r11*1]
   140005be8:	mov    BYTE PTR [r9+0x4],al
   140005bec:	mov    al,BYTE PTR [r8+r11*1]
   140005bf0:	mov    BYTE PTR [r9+0x5],al
   140005bf4:	lea    eax,[r8+0x1]
   140005bf8:	mov    al,BYTE PTR [rax+r11*1]
   140005bfc:	mov    BYTE PTR [r9+0x6],al
   140005c00:	mov    al,BYTE PTR [rbx+r11*1]
   140005c04:	mov    BYTE PTR [r9+0x7],al
   140005c08:	add    r9,0x8
   140005c0c:	lea    eax,[rbx+0x1]
   140005c0f:	mov    al,BYTE PTR [rax+r11*1]
   140005c13:	mov    rbx,QWORD PTR [rsp+0x8]
   140005c18:	mov    rdi,QWORD PTR [rsp+0x10]
   140005c1d:	mov    BYTE PTR [r9],al
   140005c20:	lea    rax,[r9+0x1]
   140005c24:	ret    
   140005c25:	int3   
   140005c26:	int3   
   140005c27:	int3   
   140005c28:	mov    rax,rsp
   140005c2b:	mov    QWORD PTR [rax+0x8],rbx
   140005c2f:	mov    QWORD PTR [rax+0x10],rbp
   140005c33:	mov    QWORD PTR [rax+0x18],rsi
   140005c37:	mov    QWORD PTR [rax+0x20],rdi
   140005c3b:	push   r13
   140005c3d:	push   r15
   140005c3f:	mov    rbx,rdx
   140005c42:	mov    r8,rcx
   140005c45:	cmp    rcx,0x5f5e100
   140005c4c:	jae    0x140005d64
   140005c52:	lea    rbp,[rip+0x5e0f7]        # 0x140063d50
   140005c59:	cmp    r8d,0x2710
   140005c60:	jae    0x140005cb2
   140005c62:	mov    eax,0x51eb851f
   140005c67:	mul    r8d
   140005c6a:	shr    edx,0x5
   140005c6d:	imul   eax,edx,0x64
   140005c70:	lea    ecx,[rdx+rdx*1]
   140005c73:	mov    edx,r8d
   140005c76:	sub    edx,eax
   140005c78:	add    edx,edx
   140005c7a:	cmp    r8d,0x3e8
   140005c81:	jb     0x140005c8b
   140005c83:	mov    al,BYTE PTR [rcx+rbp*1]
   140005c86:	mov    BYTE PTR [rbx],al
   140005c88:	inc    rbx
   140005c8b:	cmp    r8d,0x64
   140005c8f:	jb     0x140005c9c
   140005c91:	lea    eax,[rcx+0x1]
   140005c94:	mov    al,BYTE PTR [rax+rbp*1]
   140005c97:	mov    BYTE PTR [rbx],al
   140005c99:	inc    rbx
   140005c9c:	cmp    r8d,0xa
   140005ca0:	jb     0x140005caa
   140005ca2:	mov    al,BYTE PTR [rdx+rbp*1]
   140005ca5:	mov    BYTE PTR [rbx],al
   140005ca7:	inc    rbx
   140005caa:	lea    eax,[rdx+0x1]
   140005cad:	jmp    0x1400060c3
   140005cb2:	mov    r10d,0x51eb851f
   140005cb8:	mov    eax,0xd1b71759
   140005cbd:	mul    r8d
   140005cc0:	mov    r11d,r8d
   140005cc3:	mov    r9d,edx
   140005cc6:	shr    r9d,0xd
   140005cca:	imul   eax,r9d,0x2710
   140005cd1:	sub    r11d,eax
   140005cd4:	mov    eax,r10d
   140005cd7:	mul    r9d
   140005cda:	shr    edx,0x5
   140005cdd:	imul   eax,edx,0x64
   140005ce0:	lea    ecx,[rdx+rdx*1]
   140005ce3:	sub    r9d,eax
   140005ce6:	mov    eax,r10d
   140005ce9:	mul    r11d
   140005cec:	add    r9d,r9d
   140005cef:	shr    edx,0x5
   140005cf2:	imul   eax,edx,0x64
   140005cf5:	lea    r10d,[rdx+rdx*1]
   140005cf9:	sub    r11d,eax
   140005cfc:	add    r11d,r11d
   140005cff:	cmp    r8,0x989680
   140005d06:	jb     0x140005d10
   140005d08:	mov    al,BYTE PTR [rcx+rbp*1]
   140005d0b:	mov    BYTE PTR [rbx],al
   140005d0d:	inc    rbx
   140005d10:	cmp    r8,0xf4240
   140005d17:	jb     0x140005d24
   140005d19:	lea    eax,[rcx+0x1]
   140005d1c:	mov    al,BYTE PTR [rax+rbp*1]
   140005d1f:	mov    BYTE PTR [rbx],al
   140005d21:	inc    rbx
   140005d24:	cmp    r8,0x186a0
   140005d2b:	jb     0x140005d36
   140005d2d:	mov    al,BYTE PTR [r9+rbp*1]
   140005d31:	mov    BYTE PTR [rbx],al
   140005d33:	inc    rbx
   140005d36:	lea    eax,[r9+0x1]
   140005d3a:	mov    al,BYTE PTR [rax+rbp*1]
   140005d3d:	mov    BYTE PTR [rbx],al
   140005d3f:	mov    al,BYTE PTR [r10+rbp*1]
   140005d43:	mov    BYTE PTR [rbx+0x1],al
   140005d46:	lea    eax,[r10+0x1]
   140005d4a:	mov    al,BYTE PTR [rax+rbp*1]
   140005d4d:	mov    BYTE PTR [rbx+0x2],al
   140005d50:	mov    al,BYTE PTR [r11+rbp*1]
   140005d54:	mov    BYTE PTR [rbx+0x3],al
   140005d57:	add    rbx,0x4
   140005d5b:	lea    eax,[r11+0x1]
   140005d5f:	jmp    0x1400060c3
   140005d64:	movabs rcx,0x2386f26fc10000
   140005d6e:	mov    r10d,0x51eb851f
   140005d74:	cmp    r8,rcx
   140005d77:	jae    0x140005f14
   140005d7d:	movabs rax,0xabcc77118461cefd
   140005d87:	lea    rbp,[rip+0x5dfc2]        # 0x140063d50
   140005d8e:	mul    r8
   140005d91:	mov    r11d,r8d
   140005d94:	mov    r9,rdx
   140005d97:	shr    r9,0x1a
   140005d9b:	imul   eax,r9d,0x5f5e100
   140005da2:	sub    r11d,eax
   140005da5:	mov    eax,0xd1b71759
   140005daa:	mul    r9d
   140005dad:	mov    edi,edx
   140005daf:	shr    edi,0xd
   140005db2:	imul   eax,edi,0x2710
   140005db8:	sub    r9d,eax
   140005dbb:	mov    eax,r10d
   140005dbe:	mul    edi
   140005dc0:	shr    edx,0x5
   140005dc3:	imul   eax,edx,0x64
   140005dc6:	lea    ecx,[rdx+rdx*1]
   140005dc9:	sub    edi,eax
   140005dcb:	mov    eax,r10d
   140005dce:	mul    r9d
   140005dd1:	add    edi,edi
   140005dd3:	shr    edx,0x5
   140005dd6:	imul   eax,edx,0x64
   140005dd9:	lea    r15d,[rdx+rdx*1]
   140005ddd:	sub    r9d,eax
   140005de0:	mov    eax,0xd1b71759
   140005de5:	mul    r11d
   140005de8:	add    r9d,r9d
   140005deb:	mov    esi,edx
   140005ded:	shr    esi,0xd
   140005df0:	imul   eax,esi,0x2710
   140005df6:	sub    r11d,eax
   140005df9:	mov    eax,r10d
   140005dfc:	mul    esi
   140005dfe:	shr    edx,0x5
   140005e01:	imul   eax,edx,0x64
   140005e04:	lea    r13d,[rdx+rdx*1]
   140005e08:	sub    esi,eax
   140005e0a:	mov    eax,r10d
   140005e0d:	mul    r11d
   140005e10:	add    esi,esi
   140005e12:	shr    edx,0x5
   140005e15:	imul   eax,edx,0x64
   140005e18:	lea    r10d,[rdx+rdx*1]
   140005e1c:	sub    r11d,eax
   140005e1f:	movabs rax,0x38d7ea4c68000
   140005e29:	add    r11d,r11d
   140005e2c:	cmp    r8,rax
   140005e2f:	jb     0x140005e39
   140005e31:	mov    al,BYTE PTR [rcx+rbp*1]
   140005e34:	mov    BYTE PTR [rbx],al
   140005e36:	inc    rbx
   140005e39:	movabs rax,0x5af3107a4000
   140005e43:	cmp    r8,rax
   140005e46:	jb     0x140005e53
   140005e48:	lea    eax,[rcx+0x1]
   140005e4b:	mov    al,BYTE PTR [rax+rbp*1]
   140005e4e:	mov    BYTE PTR [rbx],al
   140005e50:	inc    rbx
   140005e53:	movabs rax,0x9184e72a000
   140005e5d:	cmp    r8,rax
   140005e60:	jb     0x140005e6a
   140005e62:	mov    al,BYTE PTR [rdi+rbp*1]
   140005e65:	mov    BYTE PTR [rbx],al
   140005e67:	inc    rbx
   140005e6a:	movabs rax,0xe8d4a51000
   140005e74:	cmp    r8,rax
   140005e77:	jb     0x140005e84
   140005e79:	lea    eax,[rdi+0x1]
   140005e7c:	mov    al,BYTE PTR [rax+rbp*1]
   140005e7f:	mov    BYTE PTR [rbx],al
   140005e81:	inc    rbx
   140005e84:	movabs rax,0x174876e800
   140005e8e:	cmp    r8,rax
   140005e91:	jb     0x140005e9c
   140005e93:	mov    al,BYTE PTR [r15+rbp*1]
   140005e97:	mov    BYTE PTR [rbx],al
   140005e99:	inc    rbx
   140005e9c:	movabs rax,0x2540be400
   140005ea6:	cmp    r8,rax
   140005ea9:	jb     0x140005eb7
   140005eab:	lea    eax,[r15+0x1]
   140005eaf:	mov    al,BYTE PTR [rax+rbp*1]
   140005eb2:	mov    BYTE PTR [rbx],al
   140005eb4:	inc    rbx
   140005eb7:	cmp    r8,0x3b9aca00
   140005ebe:	jb     0x140005ec9
   140005ec0:	mov    al,BYTE PTR [r9+rbp*1]
   140005ec4:	mov    BYTE PTR [rbx],al
   140005ec6:	inc    rbx
   140005ec9:	lea    eax,[r9+0x1]
   140005ecd:	mov    al,BYTE PTR [rax+rbp*1]
   140005ed0:	mov    BYTE PTR [rbx],al
   140005ed2:	mov    al,BYTE PTR [r13+rbp*1+0x0]
   140005ed7:	mov    BYTE PTR [rbx+0x1],al
   140005eda:	lea    eax,[r13+0x1]
   140005ede:	mov    al,BYTE PTR [rax+rbp*1]
   140005ee1:	mov    BYTE PTR [rbx+0x2],al
   140005ee4:	mov    al,BYTE PTR [rsi+rbp*1]
   140005ee7:	mov    BYTE PTR [rbx+0x3],al
   140005eea:	lea    eax,[rsi+0x1]
   140005eed:	mov    al,BYTE PTR [rax+rbp*1]
   140005ef0:	mov    BYTE PTR [rbx+0x4],al
   140005ef3:	mov    al,BYTE PTR [r10+rbp*1]
   140005ef7:	mov    BYTE PTR [rbx+0x5],al
   140005efa:	lea    eax,[r10+0x1]
   140005efe:	mov    al,BYTE PTR [rax+rbp*1]
   140005f01:	mov    BYTE PTR [rbx+0x6],al
   140005f04:	mov    al,BYTE PTR [r11+rbp*1]
   140005f08:	mov    BYTE PTR [rbx+0x7],al
   140005f0b:	add    rbx,0x8
   140005f0f:	jmp    0x140005d5b
   140005f14:	xor    edx,edx
   140005f16:	lea    rbp,[rip+0x5de33]        # 0x140063d50
   140005f1d:	mov    rax,r8
   140005f20:	div    rcx
   140005f23:	mov    r15,rdx
   140005f26:	mov    r8,rax
   140005f29:	cmp    eax,0xa
   140005f2c:	jae    0x140005f37
   140005f2e:	add    r8b,0x30
   140005f32:	mov    BYTE PTR [rbx],r8b
   140005f35:	jmp    0x140005fa8
   140005f37:	cmp    r8d,0x64
   140005f3b:	jae    0x140005f4d
   140005f3d:	lea    ecx,[rax+rax*1]
   140005f40:	mov    al,BYTE PTR [rcx+rbp*1]
   140005f43:	mov    BYTE PTR [rbx],al
   140005f45:	inc    rbx
   140005f48:	lea    eax,[rcx+0x1]
   140005f4b:	jmp    0x140005fa3
   140005f4d:	mov    eax,r10d
   140005f50:	mul    r8d
   140005f53:	shr    edx,0x5
   140005f56:	cmp    r8d,0x3e8
   140005f5d:	jae    0x140005f7a
   140005f5f:	lea    eax,[rdx+0x30]
   140005f62:	mov    BYTE PTR [rbx],al
   140005f64:	imul   eax,edx,0x64
   140005f67:	sub    r8d,eax
   140005f6a:	add    r8d,r8d
   140005f6d:	mov    al,BYTE PTR [r8+rbp*1]
   140005f71:	mov    BYTE PTR [rbx+0x1],al
   140005f74:	add    rbx,0x2
   140005f78:	jmp    0x140005f9f
   140005f7a:	imul   eax,edx,0x64
   140005f7d:	lea    ecx,[rdx+rdx*1]
   140005f80:	sub    r8d,eax
   140005f83:	mov    al,BYTE PTR [rcx+rbp*1]
   140005f86:	mov    BYTE PTR [rbx],al
   140005f88:	add    r8d,r8d
   140005f8b:	lea    eax,[rcx+0x1]
   140005f8e:	mov    al,BYTE PTR [rax+rbp*1]
   140005f91:	mov    BYTE PTR [rbx+0x1],al
   140005f94:	mov    al,BYTE PTR [r8+rbp*1]
   140005f98:	mov    BYTE PTR [rbx+0x2],al
   140005f9b:	add    rbx,0x3
   140005f9f:	lea    eax,[r8+0x1]
   140005fa3:	mov    al,BYTE PTR [rax+rbp*1]
   140005fa6:	mov    BYTE PTR [rbx],al
   140005fa8:	movabs rax,0xabcc77118461cefd
   140005fb2:	mul    r15
   140005fb5:	mov    rsi,rdx
   140005fb8:	shr    rsi,0x1a
   140005fbc:	imul   eax,esi,0x5f5e100
   140005fc2:	sub    r15d,eax
   140005fc5:	mov    eax,0xd1b71759
   140005fca:	mul    esi
   140005fcc:	mov    r11d,edx
   140005fcf:	shr    r11d,0xd
   140005fd3:	imul   eax,r11d,0x2710
   140005fda:	sub    esi,eax
   140005fdc:	mov    eax,r10d
   140005fdf:	mul    r11d
   140005fe2:	shr    edx,0x5
   140005fe5:	imul   eax,edx,0x64
   140005fe8:	lea    ecx,[rdx+rdx*1]
   140005feb:	sub    r11d,eax
   140005fee:	mov    eax,r10d
   140005ff1:	mul    esi
   140005ff3:	add    r11d,r11d
   140005ff6:	shr    edx,0x5
   140005ff9:	imul   eax,edx,0x64
   140005ffc:	lea    r8d,[rdx+rdx*1]
   140006000:	sub    esi,eax
   140006002:	mov    eax,0xd1b71759
   140006007:	mul    r15d
   14000600a:	add    esi,esi
   14000600c:	mov    edi,edx
   14000600e:	shr    edi,0xd
   140006011:	imul   eax,edi,0x2710
   140006017:	sub    r15d,eax
   14000601a:	mov    eax,r10d
   14000601d:	mul    edi
   14000601f:	shr    edx,0x5
   140006022:	imul   eax,edx,0x64
   140006025:	lea    r9d,[rdx+rdx*1]
   140006029:	sub    edi,eax
   14000602b:	mov    eax,r10d
   14000602e:	mul    r15d
   140006031:	add    edi,edi
   140006033:	shr    edx,0x5
   140006036:	imul   eax,edx,0x64
   140006039:	lea    r10d,[rdx+rdx*1]
   14000603d:	sub    r15d,eax
   140006040:	mov    al,BYTE PTR [rcx+rbp*1]
   140006043:	mov    BYTE PTR [rbx+0x1],al
   140006046:	add    r15d,r15d
   140006049:	lea    eax,[rcx+0x1]
   14000604c:	mov    al,BYTE PTR [rax+rbp*1]
   14000604f:	mov    BYTE PTR [rbx+0x2],al
   140006052:	mov    al,BYTE PTR [r11+rbp*1]
   140006056:	mov    BYTE PTR [rbx+0x3],al
   140006059:	lea    eax,[r11+0x1]
   14000605d:	mov    al,BYTE PTR [rax+rbp*1]
   140006060:	mov    BYTE PTR [rbx+0x4],al
   140006063:	mov    al,BYTE PTR [r8+rbp*1]
   140006067:	mov    BYTE PTR [rbx+0x5],al
   14000606a:	lea    eax,[r8+0x1]
   14000606e:	mov    al,BYTE PTR [rax+rbp*1]
   140006071:	mov    BYTE PTR [rbx+0x6],al
   140006074:	mov    al,BYTE PTR [rsi+rbp*1]
   140006077:	mov    BYTE PTR [rbx+0x7],al
   14000607a:	lea    eax,[rsi+0x1]
   14000607d:	mov    al,BYTE PTR [rax+rbp*1]
   140006080:	mov    BYTE PTR [rbx+0x8],al
   140006083:	mov    al,BYTE PTR [r9+rbp*1]
   140006087:	mov    BYTE PTR [rbx+0x9],al
   14000608a:	lea    eax,[r9+0x1]
   14000608e:	mov    al,BYTE PTR [rax+rbp*1]
   140006091:	mov    BYTE PTR [rbx+0xa],al
   140006094:	mov    al,BYTE PTR [rdi+rbp*1]
   140006097:	mov    BYTE PTR [rbx+0xb],al
   14000609a:	lea    eax,[rdi+0x1]
   14000609d:	mov    al,BYTE PTR [rax+rbp*1]
   1400060a0:	mov    BYTE PTR [rbx+0xc],al
   1400060a3:	mov    al,BYTE PTR [r10+rbp*1]
   1400060a7:	mov    BYTE PTR [rbx+0xd],al
   1400060aa:	lea    eax,[r10+0x1]
   1400060ae:	mov    al,BYTE PTR [rax+rbp*1]
   1400060b1:	mov    BYTE PTR [rbx+0xe],al
   1400060b4:	mov    al,BYTE PTR [r15+rbp*1]
   1400060b8:	mov    BYTE PTR [rbx+0xf],al
   1400060bb:	add    rbx,0x10
   1400060bf:	lea    eax,[r15+0x1]
   1400060c3:	mov    al,BYTE PTR [rax+rbp*1]
   1400060c6:	mov    rbp,QWORD PTR [rsp+0x20]
   1400060cb:	mov    rsi,QWORD PTR [rsp+0x28]
   1400060d0:	mov    rdi,QWORD PTR [rsp+0x30]
   1400060d5:	mov    BYTE PTR [rbx],al
   1400060d7:	lea    rax,[rbx+0x1]
   1400060db:	mov    rbx,QWORD PTR [rsp+0x18]
   1400060e0:	pop    r15
   1400060e2:	pop    r13
   1400060e4:	ret    
   1400060e5:	int3   
   1400060e6:	int3   
   1400060e7:	int3   
   1400060e8:	mov    rax,rsp
   1400060eb:	mov    QWORD PTR [rax+0x8],rbx
   1400060ef:	mov    QWORD PTR [rax+0x10],rbp
   1400060f3:	mov    QWORD PTR [rax+0x18],rsi
   1400060f7:	mov    QWORD PTR [rax+0x20],rdi
   1400060fb:	push   r12
   1400060fd:	push   r14
   1400060ff:	push   r15
   140006101:	mov    r15d,DWORD PTR [rdx+0x8]
   140006105:	mov    r10,rcx
   140006108:	mov    rdi,QWORD PTR [rdx]
   14000610b:	mov    ecx,r15d
   14000610e:	neg    ecx
   140006110:	neg    r15d
   140006113:	mov    rbp,r9
   140006116:	mov    rsi,r8
   140006119:	mov    r9,QWORD PTR [rdx]
   14000611c:	mov    r8d,0x1
   140006122:	sub    rdi,QWORD PTR [r10]
   140006125:	mov    r14d,r8d
   140006128:	shl    r14,cl
   14000612b:	mov    ecx,r15d
   14000612e:	shr    r9,cl
   140006131:	lea    r12,[r14-0x1]
   140006135:	mov    r11,r12
   140006138:	and    r11,QWORD PTR [rdx]
   14000613b:	cmp    r9d,0xa
   14000613f:	jae    0x140006146
   140006141:	mov    r10d,r8d
   140006144:	jmp    0x1400061b7
   140006146:	cmp    r9d,0x64
   14000614a:	jae    0x140006154
   14000614c:	mov    r10d,0x2
   140006152:	jmp    0x1400061b7
   140006154:	cmp    r9d,0x3e8
   14000615b:	jae    0x140006165
   14000615d:	mov    r10d,0x3
   140006163:	jmp    0x1400061b7
   140006165:	cmp    r9d,0x2710
   14000616c:	jae    0x140006176
   14000616e:	mov    r10d,0x4
   140006174:	jmp    0x1400061b7
   140006176:	cmp    r9d,0x186a0
   14000617d:	jae    0x140006187
   14000617f:	mov    r10d,0x5
   140006185:	jmp    0x1400061b7
   140006187:	cmp    r9d,0xf4240
   14000618e:	jae    0x140006198
   140006190:	mov    r10d,0x6
   140006196:	jmp    0x1400061b7
   140006198:	cmp    r9d,0x989680
   14000619f:	jae    0x1400061a9
   1400061a1:	mov    r10d,0x7
   1400061a7:	jmp    0x1400061b7
   1400061a9:	cmp    r9d,0x5f5e100
   1400061b0:	sbb    r10d,r10d
   1400061b3:	add    r10d,0x9
   1400061b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400061bc:	and    DWORD PTR [rbx],0x0
   1400061bf:	xor    r8d,r8d
   1400061c2:	mov    ecx,r10d
   1400061c5:	sub    ecx,0x1
   1400061c8:	je     0x1400062dc
   1400061ce:	sub    ecx,0x1
   1400061d1:	je     0x1400062c4
   1400061d7:	sub    ecx,0x1
   1400061da:	je     0x1400062ac
   1400061e0:	sub    ecx,0x1
   1400061e3:	je     0x140006291
   1400061e9:	sub    ecx,0x1
   1400061ec:	je     0x140006279
   1400061f2:	sub    ecx,0x1
   1400061f5:	je     0x140006258
   1400061f7:	sub    ecx,0x1
   1400061fa:	je     0x140006240
   1400061fc:	sub    ecx,0x1
   1400061ff:	je     0x140006228
   140006201:	cmp    ecx,0x1
   140006204:	jne    0x1400062e7
   14000620a:	mov    eax,0x55e63b89
   14000620f:	mul    r9d
   140006212:	mov    r8d,edx
   140006215:	shr    r8d,0x19
   140006219:	imul   eax,r8d,0xfa0a1f00
   140006220:	add    r9d,eax
   140006223:	jmp    0x1400062e2
   140006228:	mov    eax,0x6b5fca6b
   14000622d:	mul    r9d
   140006230:	mov    r8d,edx
   140006233:	shr    r8d,0x16
   140006237:	imul   eax,r8d,0xff676980
   14000623e:	jmp    0x140006220
   140006240:	mov    eax,0x431bde83
   140006245:	mul    r9d
   140006248:	mov    r8d,edx
   14000624b:	shr    r8d,0x12
   14000624f:	imul   eax,r8d,0xfff0bdc0
   140006256:	jmp    0x140006220
   140006258:	mov    eax,0x4f8b588f
   14000625d:	mov    r8d,r9d
   140006260:	mul    r9d
   140006263:	sub    r8d,edx
   140006266:	shr    r8d,1
   140006269:	add    r8d,edx
   14000626c:	shr    r8d,0x10
   140006270:	imul   eax,r8d,0xfffe7960
   140006277:	jmp    0x140006220
   140006279:	mov    eax,0xd1b71759
   14000627e:	mul    r9d
   140006281:	mov    r8d,edx
   140006284:	shr    r8d,0xd
   140006288:	imul   eax,r8d,0xffffd8f0
   14000628f:	jmp    0x140006220
   140006291:	mov    eax,0x10624dd3
   140006296:	mul    r9d
   140006299:	mov    r8d,edx
   14000629c:	shr    r8d,0x6
   1400062a0:	imul   eax,r8d,0xfffffc18
   1400062a7:	jmp    0x140006220
   1400062ac:	mov    eax,0x51eb851f
   1400062b1:	mul    r9d
   1400062b4:	mov    r8d,edx
   1400062b7:	shr    r8d,0x5
   1400062bb:	imul   eax,r8d,0xffffff9c
   1400062bf:	jmp    0x140006220
   1400062c4:	mov    eax,0xcccccccd
   1400062c9:	mul    r9d
   1400062cc:	mov    r8d,edx
   1400062cf:	shr    r8d,0x3
   1400062d3:	imul   eax,r8d,0xfffffff6
   1400062d7:	jmp    0x140006220
   1400062dc:	mov    r8d,r9d
   1400062df:	xor    r9d,r9d
   1400062e2:	test   r8d,r8d
   1400062e5:	jne    0x1400062ec
   1400062e7:	cmp    DWORD PTR [rbx],0x0
   1400062ea:	je     0x1400062fc
   1400062ec:	movsxd rcx,DWORD PTR [rbx]
   1400062ef:	add    r8b,0x30
   1400062f3:	lea    eax,[rcx+0x1]
   1400062f6:	mov    BYTE PTR [rcx+rbp*1],r8b
   1400062fa:	mov    DWORD PTR [rbx],eax
   1400062fc:	mov    edx,r9d
   1400062ff:	mov    ecx,r15d
   140006302:	shl    rdx,cl
   140006305:	dec    r10d
   140006308:	add    rdx,r11
   14000630b:	cmp    rdx,rsi
   14000630e:	jbe    0x1400063bc
   140006314:	test   r10d,r10d
   140006317:	jg     0x1400061bf
   14000631d:	lea    r11,[r11+r11*4]
   140006321:	mov    ecx,r15d
   140006324:	add    r11,r11
   140006327:	lea    rsi,[rsi+rsi*4]
   14000632b:	mov    rdx,r11
   14000632e:	add    rsi,rsi
   140006331:	shr    rdx,cl
   140006334:	test   dl,dl
   140006336:	jne    0x14000633d
   140006338:	cmp    DWORD PTR [rbx],0x0
   14000633b:	je     0x14000634b
   14000633d:	movsxd rcx,DWORD PTR [rbx]
   140006340:	add    dl,0x30
   140006343:	lea    eax,[rcx+0x1]
   140006346:	mov    BYTE PTR [rcx+rbp*1],dl
   140006349:	mov    DWORD PTR [rbx],eax
   14000634b:	and    r11,r12
   14000634e:	dec    r10d
   140006351:	cmp    r11,rsi
   140006354:	jae    0x14000631d
   140006356:	mov    rax,QWORD PTR [rsp+0x48]
   14000635b:	lea    rcx,[rip+0x5cb26]        # 0x140062e88
   140006362:	add    DWORD PTR [rax],r10d
   140006365:	movsxd rax,r10d
   140006368:	shl    rax,0x2
   14000636c:	sub    rcx,rax
   14000636f:	mov    edx,DWORD PTR [rcx]
   140006371:	imul   rdx,rdi
   140006375:	cmp    r11,rdx
   140006378:	jae    0x140006415
   14000637e:	movsxd r9,DWORD PTR [rbx]
   140006381:	mov    rax,rsi
   140006384:	sub    rax,r11
   140006387:	cmp    rax,r14
   14000638a:	jb     0x140006415
   140006390:	lea    r8,[r11+r14*1]
   140006394:	cmp    r8,rdx
   140006397:	jb     0x1400063ad
   140006399:	mov    rcx,r11
   14000639c:	mov    rax,rdx
   14000639f:	sub    rcx,rdx
   1400063a2:	sub    rax,r11
   1400063a5:	add    rcx,r14
   1400063a8:	cmp    rax,rcx
   1400063ab:	jbe    0x140006415
   1400063ad:	dec    BYTE PTR [r9+rbp*1-0x1]
   1400063b2:	mov    r11,r8
   1400063b5:	cmp    r8,rdx
   1400063b8:	jb     0x140006381
   1400063ba:	jmp    0x140006415
   1400063bc:	mov    rax,QWORD PTR [rsp+0x48]
   1400063c1:	lea    rcx,[rip+0x5cac0]        # 0x140062e88
   1400063c8:	add    DWORD PTR [rax],r10d
   1400063cb:	movsxd rax,r10d
   1400063ce:	mov    r8d,DWORD PTR [rcx+rax*4]
   1400063d2:	mov    ecx,r15d
   1400063d5:	shl    r8,cl
   1400063d8:	cmp    rdx,rdi
   1400063db:	jae    0x140006415
   1400063dd:	movsxd r10,DWORD PTR [rbx]
   1400063e0:	mov    rax,rsi
   1400063e3:	sub    rax,rdx
   1400063e6:	cmp    rax,r8
   1400063e9:	jb     0x140006415
   1400063eb:	lea    r9,[rdx+r8*1]
   1400063ef:	cmp    r9,rdi
   1400063f2:	jb     0x140006408
   1400063f4:	mov    rcx,rdx
   1400063f7:	mov    rax,rdi
   1400063fa:	sub    rcx,rdi
   1400063fd:	sub    rax,rdx
   140006400:	add    rcx,r8
   140006403:	cmp    rax,rcx
   140006406:	jbe    0x140006415
   140006408:	dec    BYTE PTR [r10+rbp*1-0x1]
   14000640d:	mov    rdx,r9
   140006410:	cmp    r9,rdi
   140006413:	jb     0x1400063e0
   140006415:	mov    rbx,QWORD PTR [rsp+0x20]
   14000641a:	mov    rbp,QWORD PTR [rsp+0x28]
   14000641f:	mov    rsi,QWORD PTR [rsp+0x30]
   140006424:	mov    rdi,QWORD PTR [rsp+0x38]
   140006429:	pop    r15
   14000642b:	pop    r14
   14000642d:	pop    r12
   14000642f:	ret    
   140006430:	mov    QWORD PTR [rsp+0x10],rbx
   140006435:	mov    QWORD PTR [rsp+0x18],rsi
   14000643a:	push   rbp
   14000643b:	push   rdi
   14000643c:	push   r12
   14000643e:	push   r14
   140006440:	push   r15
   140006442:	mov    rbp,rsp
   140006445:	sub    rsp,0x50
   140006449:	movsd  QWORD PTR [rbp+0x30],xmm0
   14000644e:	movabs rcx,0xfffffffffffff
   140006458:	mov    r10,QWORD PTR [rbp+0x30]
   14000645c:	mov    r14,r9
   14000645f:	mov    rax,r10
   140006462:	mov    r15,r8
   140006465:	shr    rax,0x34
   140006469:	and    r10,rcx
   14000646c:	mov    r12,rdx
   14000646f:	movabs rbx,0x10000000000000
   140006479:	and    eax,0x7ff
   14000647e:	je     0x14000648c
   140006480:	add    r10,rbx
   140006483:	lea    r11d,[rax-0x433]
   14000648a:	jmp    0x140006492
   14000648c:	mov    r11d,0xfffffbce
   140006492:	lea    rax,[r10*2+0x1]
   14000649a:	movabs rdx,0x20000000000000
   1400064a4:	mov    QWORD PTR [rbp-0x20],rax
   1400064a8:	lea    ecx,[r11-0x1]
   1400064ac:	mov    DWORD PTR [rbp-0x18],ecx
   1400064af:	movaps xmm0,XMMWORD PTR [rbp-0x20]
   1400064b3:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   1400064b8:	mov    r8d,DWORD PTR [rbp-0x18]
   1400064bc:	mov    r9,QWORD PTR [rbp-0x20]
   1400064c0:	test   rdx,rax
   1400064c3:	jne    0x1400064d0
   1400064c5:	add    r9,r9
   1400064c8:	dec    r8d
   1400064cb:	test   rdx,r9
   1400064ce:	je     0x1400064c5
   1400064d0:	shl    r9,0xa
   1400064d4:	sub    r8d,0xa
   1400064d8:	cmp    r10,rbx
   1400064db:	jne    0x1400064f4
   1400064dd:	movabs rax,0x3fffffffffffff
   1400064e7:	mov    QWORD PTR [rbp-0x20],rax
   1400064eb:	lea    eax,[r11-0x2]
   1400064ef:	mov    DWORD PTR [rbp-0x18],eax
   1400064f2:	jmp    0x140006503
   1400064f4:	lea    rax,[r10*2-0x1]
   1400064fc:	mov    DWORD PTR [rbp-0x18],ecx
   1400064ff:	mov    QWORD PTR [rbp-0x20],rax
   140006503:	lea    rax,[rbp-0x20]
   140006507:	movups xmm1,XMMWORD PTR [rax]
   14000650a:	mov    eax,0xffffffc3
   14000650f:	sub    eax,r8d
   140006512:	movdqa xmm0,xmm1
   140006516:	movq   rbx,xmm1
   14000651b:	psrldq xmm0,0x8
   140006520:	movd   ecx,xmm0
   140006524:	movd   xmm1,eax
   140006528:	cvtdq2pd xmm1,xmm1
   14000652c:	sub    ecx,r8d
   14000652f:	shl    rbx,cl
   140006532:	mulsd  xmm1,QWORD PTR [rip+0x5df8e]        # 0x1400644c8
   14000653a:	addsd  xmm1,QWORD PTR [rip+0x5df96]        # 0x1400644d8
   140006542:	cvttsd2si edx,xmm1
   140006546:	movd   xmm0,edx
   14000654a:	cvtdq2pd xmm0,xmm0
   14000654e:	subsd  xmm1,xmm0
   140006552:	comisd xmm1,QWORD PTR [rip+0x5df66]        # 0x1400644c0
   14000655a:	jbe    0x14000655e
   14000655c:	inc    edx
   14000655e:	sar    edx,0x3
   140006561:	mov    ecx,0x15c
   140006566:	inc    edx
   140006568:	mov    eax,edx
   14000656a:	shl    eax,0x3
   14000656d:	sub    ecx,eax
   14000656f:	mov    DWORD PTR [r14],ecx
   140006572:	lea    rcx,[rip+0xffffffffffff9a87]        # 0x140000000
   140006579:	mov    rdi,QWORD PTR [rcx+rdx*8+0x630e0]
   140006581:	movsx  esi,WORD PTR [rcx+rdx*2+0x62ec0]
   140006589:	mov    rax,rdi
   14000658c:	bsr    rdx,r10
   140006590:	mov    ecx,0x3f
   140006595:	sub    ecx,edx
   140006597:	shl    r10,cl
   14000659a:	lea    ecx,[rdx-0x3f]
   14000659d:	mul    r10
   1400065a0:	add    ecx,r11d
   1400065a3:	test   rax,rax
   1400065a6:	jns    0x1400065ab
   1400065a8:	inc    rdx
   1400065ab:	lea    eax,[rsi+0x40]
   1400065ae:	mov    QWORD PTR [rbp-0x10],rdx
   1400065b2:	add    eax,ecx
   1400065b4:	mov    DWORD PTR [rbp-0x8],eax
   1400065b7:	mov    rax,rdi
   1400065ba:	mul    r9
   1400065bd:	mov    r9,rdx
   1400065c0:	test   rax,rax
   1400065c3:	jns    0x1400065c8
   1400065c5:	inc    r9
   1400065c8:	mov    rax,rdi
   1400065cb:	lea    ecx,[r8+0x40]
   1400065cf:	add    ecx,esi
   1400065d1:	mul    rbx
   1400065d4:	mov    DWORD PTR [rbp-0x18],ecx
   1400065d7:	test   rax,rax
   1400065da:	jns    0x1400065df
   1400065dc:	inc    rdx
   1400065df:	lea    r8,[r9-0x1]
   1400065e3:	mov    QWORD PTR [rsp+0x28],r14
   1400065e8:	mov    QWORD PTR [rbp-0x20],r8
   1400065ec:	lea    rcx,[rbp-0x10]
   1400065f0:	sub    r8,rdx
   1400065f3:	mov    QWORD PTR [rsp+0x20],r15
   1400065f8:	dec    r8
   1400065fb:	lea    rdx,[rbp-0x20]
   1400065ff:	mov    r9,r12
   140006602:	call   0x1400060e8
   140006607:	lea    r11,[rsp+0x50]
   14000660c:	mov    rbx,QWORD PTR [r11+0x38]
   140006610:	mov    rsi,QWORD PTR [r11+0x40]
   140006614:	mov    rsp,r11
   140006617:	pop    r15
   140006619:	pop    r14
   14000661b:	pop    r12
   14000661d:	pop    rdi
   14000661e:	pop    rbp
   14000661f:	ret    
   140006620:	mov    rax,rsp
   140006623:	mov    QWORD PTR [rax+0x8],rbx
   140006627:	mov    QWORD PTR [rax+0x10],rbp
   14000662b:	mov    QWORD PTR [rax+0x18],rsi
   14000662f:	mov    QWORD PTR [rax+0x20],rdi
   140006633:	push   r14
   140006635:	sub    rsp,0x20
   140006639:	movsxd r14,edx
   14000663c:	mov    rsi,rcx
   14000663f:	lea    ebp,[r14+r8*1]
   140006643:	cmp    r14d,ebp
   140006646:	jg     0x14000667d
   140006648:	cmp    ebp,0x15
   14000664b:	jg     0x14000667d
   14000664d:	cmp    r14d,ebp
   140006650:	jge    0x14000665f
   140006652:	movsxd r8,r8d
   140006655:	add    rcx,r14
   140006658:	mov    dl,0x30
   14000665a:	call   0x14002a910
   14000665f:	movsxd rax,ebp
   140006662:	mov    BYTE PTR [rax+rsi*1],0x2e
   140006666:	lea    eax,[rbp+0x1]
   140006669:	movsxd rcx,eax
   14000666c:	lea    eax,[rbp+0x2]
   14000666f:	mov    BYTE PTR [rcx+rsi*1],0x30
   140006673:	cdqe   
   140006675:	add    rax,rsi
   140006678:	jmp    0x14000681f
   14000667d:	lea    edi,[rbp-0x1]
   140006680:	cmp    edi,0x14
   140006683:	ja     0x1400066ad
   140006685:	mov    eax,r14d
   140006688:	movsxd rbx,ebp
   14000668b:	sub    eax,ebp
   14000668d:	add    rbx,rsi
   140006690:	movsxd r8,eax
   140006693:	mov    rdx,rbx
   140006696:	lea    eax,[rbp+0x1]
   140006699:	movsxd rcx,eax
   14000669c:	add    rcx,rsi
   14000669f:	call   0x140028fd0
   1400066a4:	lea    eax,[r14+0x1]
   1400066a8:	mov    BYTE PTR [rbx],0x2e
   1400066ab:	jmp    0x140006673
   1400066ad:	lea    eax,[rbp+0x5]
   1400066b0:	cmp    eax,0x5
   1400066b3:	ja     0x1400066ee
   1400066b5:	mov    ebx,0x2
   1400066ba:	mov    r8,r14
   1400066bd:	sub    ebx,ebp
   1400066bf:	mov    rdx,rsi
   1400066c2:	movsxd rcx,ebx
   1400066c5:	add    rcx,rsi
   1400066c8:	call   0x140028fd0
   1400066cd:	mov    WORD PTR [rsi],0x2e30
   1400066d2:	cmp    ebx,0x2
   1400066d5:	jle    0x1400066e8
   1400066d7:	lea    eax,[rbx-0x2]
   1400066da:	mov    dl,0x30
   1400066dc:	movsxd r8,eax
   1400066df:	lea    rcx,[rsi+0x2]
   1400066e3:	call   0x14002a910
   1400066e8:	lea    eax,[rbx+r14*1]
   1400066ec:	jmp    0x140006673
   1400066ee:	cmp    r14d,0x1
   1400066f2:	jne    0x140006779
   1400066f8:	add    rsi,0x2
   1400066fc:	mov    BYTE PTR [rcx+0x1],0x65
   140006700:	test   edi,edi
   140006702:	jns    0x14000670c
   140006704:	mov    BYTE PTR [rsi],0x2d
   140006707:	inc    rsi
   14000670a:	neg    edi
   14000670c:	cmp    edi,0x64
   14000670f:	jl     0x140006746
   140006711:	mov    eax,0x51eb851f
   140006716:	imul   edi
   140006718:	sar    edx,0x5
   14000671b:	mov    eax,edx
   14000671d:	shr    eax,0x1f
   140006720:	add    edx,eax
   140006722:	lea    eax,[rdx+0x30]
   140006725:	mov    BYTE PTR [rsi],al
   140006727:	imul   eax,edx,0x64
   14000672a:	sub    edi,eax
   14000672c:	lea    rax,[rip+0x5d61d]        # 0x140063d50
   140006733:	add    edi,edi
   140006735:	movsxd rcx,edi
   140006738:	add    rcx,rax
   14000673b:	mov    al,BYTE PTR [rcx]
   14000673d:	mov    BYTE PTR [rsi+0x1],al
   140006740:	add    rsi,0x2
   140006744:	jmp    0x140006762
   140006746:	cmp    edi,0xa
   140006749:	jl     0x140006769
   14000674b:	lea    eax,[rdi+rdi*1]
   14000674e:	movsxd rcx,eax
   140006751:	lea    rax,[rip+0x5d5f8]        # 0x140063d50
   140006758:	add    rcx,rax
   14000675b:	mov    al,BYTE PTR [rcx]
   14000675d:	mov    BYTE PTR [rsi],al
   14000675f:	inc    rsi
   140006762:	mov    al,BYTE PTR [rcx+0x1]
   140006765:	mov    BYTE PTR [rsi],al
   140006767:	jmp    0x140006770
   140006769:	add    dil,0x30
   14000676d:	mov    BYTE PTR [rsi],dil
   140006770:	lea    rax,[rsi+0x1]
   140006774:	jmp    0x14000681f
   140006779:	lea    eax,[r14-0x1]
   14000677d:	add    rcx,0x2
   140006781:	movsxd r8,eax
   140006784:	lea    rdx,[rsi+0x1]
   140006788:	call   0x140028fd0
   14000678d:	lea    eax,[r14+0x1]
   140006791:	mov    BYTE PTR [rsi+0x1],0x2e
   140006795:	movsxd rcx,eax
   140006798:	lea    eax,[r14+0x2]
   14000679c:	movsxd r8,eax
   14000679f:	add    r8,rsi
   1400067a2:	mov    BYTE PTR [rcx+rsi*1],0x65
   1400067a6:	test   edi,edi
   1400067a8:	jns    0x1400067b3
   1400067aa:	mov    BYTE PTR [r8],0x2d
   1400067ae:	inc    r8
   1400067b1:	neg    edi
   1400067b3:	cmp    edi,0x64
   1400067b6:	jl     0x1400067ef
   1400067b8:	mov    eax,0x51eb851f
   1400067bd:	imul   edi
   1400067bf:	sar    edx,0x5
   1400067c2:	mov    eax,edx
   1400067c4:	shr    eax,0x1f
   1400067c7:	add    edx,eax
   1400067c9:	lea    eax,[rdx+0x30]
   1400067cc:	mov    BYTE PTR [r8],al
   1400067cf:	imul   eax,edx,0x64
   1400067d2:	sub    edi,eax
   1400067d4:	lea    rax,[rip+0x5d575]        # 0x140063d50
   1400067db:	add    edi,edi
   1400067dd:	movsxd rcx,edi
   1400067e0:	add    rcx,rax
   1400067e3:	mov    al,BYTE PTR [rcx]
   1400067e5:	mov    BYTE PTR [r8+0x1],al
   1400067e9:	add    r8,0x2
   1400067ed:	jmp    0x14000680c
   1400067ef:	cmp    edi,0xa
   1400067f2:	jl     0x140006814
   1400067f4:	lea    eax,[rdi+rdi*1]
   1400067f7:	movsxd rcx,eax
   1400067fa:	lea    rax,[rip+0x5d54f]        # 0x140063d50
   140006801:	add    rcx,rax
   140006804:	mov    al,BYTE PTR [rcx]
   140006806:	mov    BYTE PTR [r8],al
   140006809:	inc    r8
   14000680c:	mov    al,BYTE PTR [rcx+0x1]
   14000680f:	mov    BYTE PTR [r8],al
   140006812:	jmp    0x14000681b
   140006814:	add    dil,0x30
   140006818:	mov    BYTE PTR [r8],dil
   14000681b:	lea    rax,[r8+0x1]
   14000681f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006824:	mov    rbp,QWORD PTR [rsp+0x38]
   140006829:	mov    rsi,QWORD PTR [rsp+0x40]
   14000682e:	mov    rdi,QWORD PTR [rsp+0x48]
   140006833:	add    rsp,0x20
   140006837:	pop    r14
   140006839:	ret    
   14000683a:	int3   
   14000683b:	int3   
   14000683c:	rex push rdi
   14000683e:	sub    rsp,0x30
   140006842:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000684b:	mov    QWORD PTR [rsp+0x40],rsi
   140006850:	mov    rdi,rcx
   140006853:	xor    esi,esi
   140006855:	mov    DWORD PTR [rsp+0x20],esi
   140006859:	lea    rcx,[rsp+0x48]
   14000685e:	call   0x140012aa0
   140006863:	nop
   140006864:	mov    QWORD PTR [rdi+0x18],0x7
   14000686c:	mov    QWORD PTR [rdi+0x10],rsi
   140006870:	cmp    QWORD PTR [rsp+0x48],rsi
   140006875:	je     0x1400068be
   140006877:	cmp    QWORD PTR [rdi+0x18],0x8
   14000687c:	jb     0x140006883
   14000687e:	mov    rax,QWORD PTR [rdi]
   140006881:	jmp    0x140006886
   140006883:	mov    rax,rdi
   140006886:	mov    WORD PTR [rax],si
   140006889:	or     r9,0xffffffffffffffff
   14000688d:	xor    r8d,r8d
   140006890:	mov    rdx,QWORD PTR [rsp+0x48]
   140006895:	mov    rcx,rdi
   140006898:	call   0x14000b850
   14000689d:	nop
   14000689e:	xor    r8d,r8d
   1400068a1:	mov    dl,0x1
   1400068a3:	mov    rcx,QWORD PTR [rsp+0x48]
   1400068a8:	call   0x14000b6b0
   1400068ad:	mov    edx,0x20
   1400068b2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400068b7:	call   0x140026804
   1400068bc:	jmp    0x1400068e6
   1400068be:	cmp    QWORD PTR [rdi+0x18],0x8
   1400068c3:	jb     0x1400068ca
   1400068c5:	mov    rax,QWORD PTR [rdi]
   1400068c8:	jmp    0x1400068cd
   1400068ca:	mov    rax,rdi
   1400068cd:	mov    WORD PTR [rax],si
   1400068d0:	mov    r8d,0x20
   1400068d6:	lea    rdx,[rip+0x5b453]        # 0x140061d30
   1400068dd:	mov    rcx,rdi
   1400068e0:	call   0x14000b730
   1400068e5:	nop
   1400068e6:	mov    rax,rdi
   1400068e9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400068ee:	add    rsp,0x30
   1400068f2:	pop    rdi
   1400068f3:	ret    
   1400068f4:	mov    rax,rsp
   1400068f7:	push   rbp
   1400068f8:	push   rsi
   1400068f9:	push   rdi
   1400068fa:	lea    rbp,[rax-0x68]
   1400068fe:	sub    rsp,0x150
   140006905:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14000690d:	mov    QWORD PTR [rax+0x18],rbx
   140006911:	mov    rax,QWORD PTR [rip+0x6a738]        # 0x140071050
   140006918:	xor    rax,rsp
   14000691b:	mov    QWORD PTR [rbp+0x48],rax
   14000691f:	mov    rdi,rdx
   140006922:	mov    rsi,rcx
   140006925:	and    DWORD PTR [rsp+0x30],0x0
   14000692a:	lea    rcx,[rbp-0x40]
   14000692e:	call   0x14000a76c
   140006933:	nop
   140006934:	call   0x140004794
   140006939:	xor    eax,eax
   14000693b:	mov    QWORD PTR [rbp-0x40],rax
   14000693f:	mov    QWORD PTR [rbp-0x38],rax
   140006943:	mov    DWORD PTR [rbp-0x30],0x3
   14000694a:	mov    rbx,QWORD PTR [rbp-0x28]
   14000694e:	mov    r8,rbx
   140006951:	mov    rdx,rdi
   140006954:	lea    rcx,[rbp+0x30]
   140006958:	call   0x14000a630
   14000695d:	nop
   14000695e:	lea    rcx,[rip+0x5b40f]        # 0x140061d74
   140006965:	mov    QWORD PTR [rsp+0x20],rcx
   14000696a:	mov    DWORD PTR [rsp+0x28],0x6
   140006972:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140006977:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000697d:	mov    r9,rbx
   140006980:	mov    r8,rax
   140006983:	lea    rdx,[rsp+0x20]
   140006988:	lea    rcx,[rbp-0x40]
   14000698c:	call   0x14000a438
   140006991:	nop
   140006992:	xorps  xmm0,xmm0
   140006995:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   14000699b:	xorps  xmm1,xmm1
   14000699e:	movdqu XMMWORD PTR [rsp+0x48],xmm1
   1400069a4:	and    QWORD PTR [rsp+0x58],0x0
   1400069aa:	mov    QWORD PTR [rsp+0x60],0x100
   1400069b3:	lea    rax,[rsp+0x38]
   1400069b8:	mov    QWORD PTR [rsp+0x70],rax
   1400069bd:	and    QWORD PTR [rsp+0x78],0x0
   1400069c3:	movdqa XMMWORD PTR [rbp-0x80],xmm0
   1400069c8:	movdqa XMMWORD PTR [rbp-0x70],xmm1
   1400069cd:	mov    QWORD PTR [rbp-0x60],0x200
   1400069d5:	mov    BYTE PTR [rbp-0x58],0x0
   1400069d9:	lea    rdx,[rsp+0x70]
   1400069de:	lea    rcx,[rbp-0x40]
   1400069e2:	call   0x14000d16c
   1400069e7:	mov    ebx,0x1
   1400069ec:	mov    edx,ebx
   1400069ee:	lea    rcx,[rsp+0x38]
   1400069f3:	call   0x14000d0a4
   1400069f8:	mov    BYTE PTR [rax],0x0
   1400069fb:	sub    QWORD PTR [rsp+0x50],rbx
   140006a00:	mov    rdx,QWORD PTR [rsp+0x48]
   140006a05:	mov    rcx,rsi
   140006a08:	call   0x14001895c
   140006a0d:	nop
   140006a0e:	mov    rcx,QWORD PTR [rbp-0x78]
   140006a12:	call   0x1400304c4
   140006a17:	mov    edx,ebx
   140006a19:	mov    rcx,QWORD PTR [rbp-0x80]
   140006a1d:	call   0x140026804
   140006a22:	nop
   140006a23:	mov    rcx,QWORD PTR [rsp+0x48]
   140006a28:	call   0x1400304c4
   140006a2d:	mov    edx,ebx
   140006a2f:	mov    rcx,QWORD PTR [rsp+0x40]
   140006a34:	call   0x140026804
   140006a39:	nop
   140006a3a:	lea    rcx,[rbp-0x40]
   140006a3e:	call   0x14000a6c8
   140006a43:	mov    rax,rsi
   140006a46:	mov    rcx,QWORD PTR [rbp+0x48]
   140006a4a:	xor    rcx,rsp
   140006a4d:	call   0x140025df0
   140006a52:	mov    rbx,QWORD PTR [rsp+0x180]
   140006a5a:	add    rsp,0x150
   140006a61:	pop    rdi
   140006a62:	pop    rsi
   140006a63:	pop    rbp
   140006a64:	ret    
   140006a65:	int3   
   140006a66:	int3   
   140006a67:	int3   
   140006a68:	rex push rbx
   140006a6a:	sub    rsp,0x20
   140006a6e:	mov    rbx,rcx
   140006a71:	mov    rcx,QWORD PTR [rcx+0x10]
   140006a75:	call   0x1400304c4
   140006a7a:	mov    rcx,QWORD PTR [rbx+0x8]
   140006a7e:	mov    edx,0x1
   140006a83:	add    rsp,0x20
   140006a87:	pop    rbx
   140006a88:	jmp    0x140026804
   140006a8d:	int3   
   140006a8e:	int3   
   140006a8f:	int3   
   140006a90:	rex push rbx
   140006a92:	sub    rsp,0x20
   140006a96:	mov    rbx,rcx
   140006a99:	mov    rcx,QWORD PTR [rcx+0x18]
   140006a9d:	call   0x1400304c4
   140006aa2:	mov    rcx,QWORD PTR [rbx+0x10]
   140006aa6:	mov    edx,0x1
   140006aab:	add    rsp,0x20
   140006aaf:	pop    rbx
   140006ab0:	jmp    0x140026804
   140006ab5:	int3   
   140006ab6:	int3   
   140006ab7:	int3   
   140006ab8:	mov    r11,rsp
   140006abb:	push   rdi
   140006abc:	sub    rsp,0xa0
   140006ac3:	mov    QWORD PTR [r11-0x80],0xfffffffffffffffe
   140006acb:	mov    QWORD PTR [r11+0x18],rbx
   140006acf:	mov    rax,QWORD PTR [rip+0x6a57a]        # 0x140071050
   140006ad6:	xor    rax,rsp
   140006ad9:	mov    QWORD PTR [rsp+0x90],rax
   140006ae1:	mov    rdi,rcx
   140006ae4:	and    DWORD PTR [rsp+0x20],0x0
   140006ae9:	lea    rcx,[r11-0x38]
   140006aed:	call   0x1400068f4
   140006af2:	mov    rbx,rax
   140006af5:	lea    rcx,[rsp+0x50]
   140006afa:	call   0x14000683c
   140006aff:	nop
   140006b00:	lea    r8,[rip+0x5b279]        # 0x140061d80
   140006b07:	mov    rdx,rax
   140006b0a:	lea    rcx,[rsp+0x30]
   140006b0f:	call   0x14000d824
   140006b14:	nop
   140006b15:	mov    r8,rbx
   140006b18:	mov    rdx,rax
   140006b1b:	mov    rcx,rdi
   140006b1e:	call   0x14000d8e0
   140006b23:	nop
   140006b24:	xor    r8d,r8d
   140006b27:	mov    dl,0x1
   140006b29:	lea    rcx,[rsp+0x30]
   140006b2e:	call   0x14000b6b0
   140006b33:	nop
   140006b34:	xor    r8d,r8d
   140006b37:	mov    dl,0x1
   140006b39:	lea    rcx,[rsp+0x50]
   140006b3e:	call   0x14000b6b0
   140006b43:	nop
   140006b44:	xor    r8d,r8d
   140006b47:	mov    dl,0x1
   140006b49:	lea    rcx,[rsp+0x70]
   140006b4e:	call   0x14000b6b0
   140006b53:	mov    rax,rdi
   140006b56:	mov    rcx,QWORD PTR [rsp+0x90]
   140006b5e:	xor    rcx,rsp
   140006b61:	call   0x140025df0
   140006b66:	mov    rbx,QWORD PTR [rsp+0xc0]
   140006b6e:	add    rsp,0xa0
   140006b75:	pop    rdi
   140006b76:	ret    
   140006b77:	int3   
   140006b78:	mov    r11,rsp
   140006b7b:	push   rdi
   140006b7c:	sub    rsp,0xa0
   140006b83:	mov    QWORD PTR [r11-0x80],0xfffffffffffffffe
   140006b8b:	mov    QWORD PTR [r11+0x18],rbx
   140006b8f:	mov    rax,QWORD PTR [rip+0x6a4ba]        # 0x140071050
   140006b96:	xor    rax,rsp
   140006b99:	mov    QWORD PTR [rsp+0x90],rax
   140006ba1:	mov    rdi,rcx
   140006ba4:	and    DWORD PTR [rsp+0x20],0x0
   140006ba9:	lea    rcx,[r11-0x38]
   140006bad:	call   0x1400068f4
   140006bb2:	mov    rbx,rax
   140006bb5:	lea    rcx,[rsp+0x50]
   140006bba:	call   0x14000683c
   140006bbf:	nop
   140006bc0:	lea    r8,[rip+0x5b1f1]        # 0x140061db8
   140006bc7:	mov    rdx,rax
   140006bca:	lea    rcx,[rsp+0x30]
   140006bcf:	call   0x14000d824
   140006bd4:	nop
   140006bd5:	mov    r8,rbx
   140006bd8:	mov    rdx,rax
   140006bdb:	mov    rcx,rdi
   140006bde:	call   0x14000d8e0
   140006be3:	nop
   140006be4:	xor    r8d,r8d
   140006be7:	mov    dl,0x1
   140006be9:	lea    rcx,[rsp+0x30]
   140006bee:	call   0x14000b6b0
   140006bf3:	nop
   140006bf4:	xor    r8d,r8d
   140006bf7:	mov    dl,0x1
   140006bf9:	lea    rcx,[rsp+0x50]
   140006bfe:	call   0x14000b6b0
   140006c03:	nop
   140006c04:	xor    r8d,r8d
   140006c07:	mov    dl,0x1
   140006c09:	lea    rcx,[rsp+0x70]
   140006c0e:	call   0x14000b6b0
   140006c13:	mov    rax,rdi
   140006c16:	mov    rcx,QWORD PTR [rsp+0x90]
   140006c1e:	xor    rcx,rsp
   140006c21:	call   0x140025df0
   140006c26:	mov    rbx,QWORD PTR [rsp+0xc0]
   140006c2e:	add    rsp,0xa0
   140006c35:	pop    rdi
   140006c36:	ret    
   140006c37:	int3   
   140006c38:	mov    rax,rsp
   140006c3b:	push   rbp
   140006c3c:	lea    rbp,[rsp-0x80]
   140006c41:	sub    rsp,0x180
   140006c48:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140006c51:	mov    QWORD PTR [rax+0x8],rbx
   140006c55:	mov    QWORD PTR [rax+0x10],rdi
   140006c59:	mov    QWORD PTR [rax+0x18],r14
   140006c5d:	mov    rax,QWORD PTR [rip+0x6a3ec]        # 0x140071050
   140006c64:	xor    rax,rsp
   140006c67:	mov    QWORD PTR [rbp+0x78],rax
   140006c6b:	mov    rdi,rcx
   140006c6e:	mov    ebx,0x3
   140006c73:	lea    rcx,[rsp+0x20]
   140006c78:	call   0x14001299c
   140006c7d:	mov    rcx,QWORD PTR [rsp+0x20]
   140006c82:	xor    r14d,r14d
   140006c85:	test   rcx,rcx
   140006c88:	je     0x140006c95
   140006c8a:	mov    ebx,DWORD PTR [rcx]
   140006c8c:	lea    edx,[r14+0x4]
   140006c90:	call   0x140026804
   140006c95:	lea    rcx,[rbp+0x38]
   140006c99:	call   0x140012388
   140006c9e:	nop
   140006c9f:	lea    r8,[rip+0x5b142]        # 0x140061de8
   140006ca6:	lea    rdx,[rbp+0x38]
   140006caa:	lea    rcx,[rbp+0x18]
   140006cae:	call   0x14000d720
   140006cb3:	nop
   140006cb4:	lea    rcx,[rbp+0x18]
   140006cb8:	cmp    QWORD PTR [rbp+0x30],0x8
   140006cbd:	cmovae rcx,QWORD PTR [rbp+0x18]
   140006cc2:	call   0x1400198b0
   140006cc7:	lea    rdx,[rbp+0x18]
   140006ccb:	cmp    QWORD PTR [rbp+0x30],0x8
   140006cd0:	cmovae rdx,QWORD PTR [rbp+0x18]
   140006cd5:	lea    rcx,[rbp+0x38]
   140006cd9:	cmp    QWORD PTR [rbp+0x50],0x8
   140006cde:	cmovae rcx,QWORD PTR [rbp+0x38]
   140006ce3:	call   0x1400198c4
   140006ce8:	mov    ecx,ebx
   140006cea:	call   0x14001a2e8
   140006cef:	mov    ecx,0x10
   140006cf4:	call   0x140026118
   140006cf9:	mov    QWORD PTR [rsp+0x20],rax
   140006cfe:	lea    rdx,[rbp+0x38]
   140006d02:	mov    rcx,rax
   140006d05:	call   0x140019f9c
   140006d0a:	mov    rbx,rax
   140006d0d:	mov    QWORD PTR [rsp+0x20],rax
   140006d12:	mov    rcx,rax
   140006d15:	call   0x14001a1cc
   140006d1a:	test   al,al
   140006d1c:	cmovne rbx,r14
   140006d20:	mov    QWORD PTR [rsp+0x20],rbx
   140006d25:	mov    edx,0x2
   140006d2a:	lea    r8d,[rdx-0x1]
   140006d2e:	lea    rcx,[rsp+0x30]
   140006d33:	call   0x14000be9c
   140006d38:	nop
   140006d39:	lea    rdx,[rip+0x5b0b8]        # 0x140061df8
   140006d40:	lea    rcx,[rsp+0x30]
   140006d45:	call   0x140010488
   140006d4a:	lea    rdx,[rip+0x5b0bf]        # 0x140061e10
   140006d51:	lea    rcx,[rsp+0x30]
   140006d56:	call   0x1400101bc
   140006d5b:	lea    rdx,[rip+0x5b0ce]        # 0x140061e30
   140006d62:	lea    rcx,[rsp+0x30]
   140006d67:	call   0x140010488
   140006d6c:	lea    rdx,[rip+0x5b0d5]        # 0x140061e48
   140006d73:	lea    rcx,[rsp+0x30]
   140006d78:	call   0x1400101bc
   140006d7d:	lea    rdx,[rbp+0x58]
   140006d81:	lea    rcx,[rsp+0x30]
   140006d86:	call   0x14000a950
   140006d8b:	nop
   140006d8c:	lea    rdx,[rbp+0x58]
   140006d90:	mov    ecx,0x3
   140006d95:	call   0x14001a654
   140006d9a:	nop
   140006d9b:	xor    r8d,r8d
   140006d9e:	mov    dl,0x1
   140006da0:	lea    rcx,[rbp+0x58]
   140006da4:	call   0x14000b6b0
   140006da9:	nop
   140006daa:	lea    rcx,[rbp-0x48]
   140006dae:	call   0x14000a9dc
   140006db3:	nop
   140006db4:	lea    rax,[rip+0x44b5d]        # 0x14004b918
   140006dbb:	mov    QWORD PTR [rbp-0x48],rax
   140006dbf:	lea    rcx,[rbp-0x48]
   140006dc3:	call   0x140027b0c
   140006dc8:	nop
   140006dc9:	test   rbx,rbx
   140006dcc:	je     0x140006ddc
   140006dce:	mov    rax,QWORD PTR [rbx]
   140006dd1:	mov    edx,0x1
   140006dd6:	mov    rcx,rbx
   140006dd9:	call   QWORD PTR [rax]
   140006ddb:	nop
   140006ddc:	xor    r8d,r8d
   140006ddf:	mov    dl,0x1
   140006de1:	lea    rcx,[rbp+0x18]
   140006de5:	call   0x14000b6b0
   140006dea:	nop
   140006deb:	xor    r8d,r8d
   140006dee:	mov    dl,0x1
   140006df0:	lea    rcx,[rbp+0x38]
   140006df4:	call   0x14000b6b0
   140006df9:	mov    rax,rdi
   140006dfc:	mov    rcx,QWORD PTR [rbp+0x78]
   140006e00:	xor    rcx,rsp
   140006e03:	call   0x140025df0
   140006e08:	lea    r11,[rsp+0x180]
   140006e10:	mov    rbx,QWORD PTR [r11+0x10]
   140006e14:	mov    rdi,QWORD PTR [r11+0x18]
   140006e18:	mov    r14,QWORD PTR [r11+0x20]
   140006e1c:	mov    rsp,r11
   140006e1f:	pop    rbp
   140006e20:	ret    
   140006e21:	int3   
   140006e22:	int3   
   140006e23:	int3   
   140006e24:	sub    rsp,0x38
   140006e28:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006e31:	lea    rdx,[rip+0x5b020]        # 0x140061e58
   140006e38:	mov    ecx,0x3
   140006e3d:	call   0x14001a664
   140006e42:	nop
   140006e43:	call   0x14001a238
   140006e48:	nop
   140006e49:	add    rsp,0x38
   140006e4d:	ret    
   140006e4e:	int3   
   140006e4f:	int3   
   140006e50:	rex push rbx
   140006e52:	sub    rsp,0x30
   140006e56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006e5f:	lea    rbx,[rcx+0x88]
   140006e66:	mov    rcx,rbx
   140006e69:	call   0x14000a9dc
   140006e6e:	nop
   140006e6f:	lea    rax,[rip+0x44aa2]        # 0x14004b918
   140006e76:	mov    QWORD PTR [rbx],rax
   140006e79:	mov    rcx,rbx
   140006e7c:	call   0x140027b0c
   140006e81:	nop
   140006e82:	add    rsp,0x30
   140006e86:	pop    rbx
   140006e87:	ret    
   140006e88:	add    rcx,0x8
   140006e8c:	jmp    0x14000a98c
   140006e91:	int3   
   140006e92:	int3   
   140006e93:	int3   
   140006e94:	rex push rbx
   140006e96:	sub    rsp,0x290
   140006e9d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006ea6:	mov    rax,QWORD PTR [rip+0x6a1a3]        # 0x140071050
   140006ead:	xor    rax,rsp
   140006eb0:	mov    QWORD PTR [rsp+0x280],rax
   140006eb8:	xor    edx,edx
   140006eba:	mov    r8d,0x208
   140006ec0:	lea    rcx,[rsp+0x70]
   140006ec5:	call   0x14002a910
   140006eca:	mov    edx,0x104
   140006ecf:	lea    rcx,[rsp+0x70]
   140006ed4:	call   QWORD PTR [rip+0x4420e]        # 0x14004b0e8
   140006eda:	test   eax,eax
   140006edc:	jne    0x140006ef1
   140006ede:	lea    rdx,[rip+0x5b01b]        # 0x140061f00
   140006ee5:	lea    ecx,[rax+0x1]
   140006ee8:	call   0x14001a664
   140006eed:	xor    al,al
   140006eef:	jmp    0x140006f45
   140006ef1:	lea    rdx,[rsp+0x70]
   140006ef6:	lea    rcx,[rsp+0x28]
   140006efb:	call   0x140024e94
   140006f00:	nop
   140006f01:	lea    rdx,[rip+0x5b068]        # 0x140061f70
   140006f08:	lea    rcx,[rsp+0x48]
   140006f0d:	call   0x140024e94
   140006f12:	nop
   140006f13:	lea    rdx,[rsp+0x48]
   140006f18:	lea    rcx,[rsp+0x28]
   140006f1d:	call   0x140024f74
   140006f22:	nop
   140006f23:	lea    rcx,[rsp+0x48]
   140006f28:	call   0x14000a98c
   140006f2d:	lea    rcx,[rsp+0x28]
   140006f32:	call   0x140024a24
   140006f37:	mov    bl,al
   140006f39:	lea    rcx,[rsp+0x28]
   140006f3e:	call   0x14000a98c
   140006f43:	mov    al,bl
   140006f45:	mov    rcx,QWORD PTR [rsp+0x280]
   140006f4d:	xor    rcx,rsp
   140006f50:	call   0x140025df0
   140006f55:	add    rsp,0x290
   140006f5c:	pop    rbx
   140006f5d:	ret    
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	mov    rax,rsp
   140006f63:	push   rbp
   140006f64:	push   rsi
   140006f65:	push   rdi
   140006f66:	push   r12
   140006f68:	push   r13
   140006f6a:	push   r14
   140006f6c:	push   r15
   140006f6e:	mov    rbp,rsp
   140006f71:	sub    rsp,0x80
   140006f78:	mov    QWORD PTR [rbp-0x58],0xfffffffffffffffe
   140006f80:	mov    QWORD PTR [rax+0x20],rbx
   140006f84:	mov    rax,QWORD PTR [rip+0x6a0c5]        # 0x140071050
   140006f8b:	xor    rax,rsp
   140006f8e:	mov    QWORD PTR [rbp-0x10],rax
   140006f92:	mov    r14,r8
   140006f95:	mov    r15,rdx
   140006f98:	mov    rsi,rcx
   140006f9b:	xor    r12d,r12d
   140006f9e:	mov    DWORD PTR [rbp-0x60],r12d
   140006fa2:	lea    r13d,[r12+0x7]
   140006fa7:	mov    QWORD PTR [rbp-0x18],r13
   140006fab:	mov    QWORD PTR [rbp-0x20],r12
   140006faf:	mov    WORD PTR [rbp-0x30],r12w
   140006fb4:	lea    r8d,[r12+0x9]
   140006fb9:	lea    rdx,[rip+0x5afd0]        # 0x140061f90
   140006fc0:	lea    rcx,[rbp-0x30]
   140006fc4:	call   0x14000b730
   140006fc9:	nop
   140006fca:	mov    QWORD PTR [rbp-0x38],r13
   140006fce:	mov    QWORD PTR [rbp-0x40],r12
   140006fd2:	mov    WORD PTR [rbp-0x50],r12w
   140006fd7:	lea    r8d,[r12+0x2f]
   140006fdc:	lea    rdx,[rip+0x5afcd]        # 0x140061fb0
   140006fe3:	lea    rcx,[rbp-0x50]
   140006fe7:	call   0x14000b730
   140006fec:	nop
   140006fed:	mov    r9d,0x100
   140006ff3:	lea    r8,[rbp-0x60]
   140006ff7:	lea    rdx,[rbp-0x30]
   140006ffb:	lea    rcx,[rbp-0x50]
   140006fff:	call   0x14001fb4c
   140007004:	mov    bl,al
   140007006:	xor    r8d,r8d
   140007009:	lea    edi,[r12+0x1]
   14000700e:	mov    dl,dil
   140007011:	lea    rcx,[rbp-0x50]
   140007015:	call   0x14000b6b0
   14000701a:	nop
   14000701b:	xor    r8d,r8d
   14000701e:	mov    dl,dil
   140007021:	lea    rcx,[rbp-0x30]
   140007025:	call   0x14000b6b0
   14000702a:	test   bl,bl
   14000702c:	je     0x140007036
   14000702e:	cmp    DWORD PTR [rbp-0x60],r12d
   140007032:	mov    eax,edi
   140007034:	jne    0x140007039
   140007036:	mov    eax,r12d
   140007039:	mov    BYTE PTR [rsi],al
   14000703b:	test   al,al
   14000703d:	jne    0x140007046
   14000703f:	call   0x140006e94
   140007044:	mov    BYTE PTR [rsi],al
   140007046:	mov    QWORD PTR [rbp-0x38],r13
   14000704a:	mov    QWORD PTR [rbp-0x40],r12
   14000704e:	mov    WORD PTR [rbp-0x50],r12w
   140007053:	mov    esi,0x9
   140007058:	mov    r8d,esi
   14000705b:	lea    rdx,[rip+0x5af2e]        # 0x140061f90
   140007062:	lea    rcx,[rbp-0x50]
   140007066:	call   0x14000b730
   14000706b:	nop
   14000706c:	mov    QWORD PTR [rbp-0x18],r13
   140007070:	mov    QWORD PTR [rbp-0x20],r12
   140007074:	mov    WORD PTR [rbp-0x30],r12w
   140007079:	lea    r8d,[rsi+0x27]
   14000707d:	lea    rdx,[rip+0x5af8c]        # 0x140062010
   140007084:	lea    rcx,[rbp-0x30]
   140007088:	call   0x14000b730
   14000708d:	nop
   14000708e:	mov    r9d,0x100
   140007094:	lea    r8,[rbp-0x60]
   140007098:	lea    rdx,[rbp-0x50]
   14000709c:	lea    rcx,[rbp-0x30]
   1400070a0:	call   0x14001fb4c
   1400070a5:	mov    bl,al
   1400070a7:	xor    r8d,r8d
   1400070aa:	mov    dl,dil
   1400070ad:	lea    rcx,[rbp-0x30]
   1400070b1:	call   0x14000b6b0
   1400070b6:	nop
   1400070b7:	xor    r8d,r8d
   1400070ba:	mov    dl,dil
   1400070bd:	lea    rcx,[rbp-0x50]
   1400070c1:	call   0x14000b6b0
   1400070c6:	test   bl,bl
   1400070c8:	je     0x1400070d2
   1400070ca:	cmp    DWORD PTR [rbp-0x60],r12d
   1400070ce:	mov    eax,edi
   1400070d0:	jne    0x1400070d5
   1400070d2:	mov    eax,r12d
   1400070d5:	mov    BYTE PTR [r15],al
   1400070d8:	mov    QWORD PTR [rbp-0x38],r13
   1400070dc:	mov    QWORD PTR [rbp-0x40],r12
   1400070e0:	mov    WORD PTR [rbp-0x50],r12w
   1400070e5:	mov    r8,rsi
   1400070e8:	lea    rdx,[rip+0x5aea1]        # 0x140061f90
   1400070ef:	lea    rcx,[rbp-0x50]
   1400070f3:	call   0x14000b730
   1400070f8:	nop
   1400070f9:	mov    QWORD PTR [rbp-0x18],r13
   1400070fd:	mov    QWORD PTR [rbp-0x20],r12
   140007101:	mov    WORD PTR [rbp-0x30],r12w
   140007106:	mov    r8d,0x34
   14000710c:	lea    rdx,[rip+0x5af6d]        # 0x140062080
   140007113:	lea    rcx,[rbp-0x30]
   140007117:	call   0x14000b730
   14000711c:	nop
   14000711d:	mov    r9d,0x100
   140007123:	lea    r8,[rbp-0x60]
   140007127:	lea    rdx,[rbp-0x50]
   14000712b:	lea    rcx,[rbp-0x30]
   14000712f:	call   0x14001fb4c
   140007134:	mov    bl,al
   140007136:	xor    r8d,r8d
   140007139:	mov    dl,dil
   14000713c:	lea    rcx,[rbp-0x30]
   140007140:	call   0x14000b6b0
   140007145:	nop
   140007146:	xor    r8d,r8d
   140007149:	mov    dl,dil
   14000714c:	lea    rcx,[rbp-0x50]
   140007150:	call   0x14000b6b0
   140007155:	test   bl,bl
   140007157:	je     0x14000715f
   140007159:	cmp    DWORD PTR [rbp-0x60],r12d
   14000715d:	jne    0x140007162
   14000715f:	mov    edi,r12d
   140007162:	mov    BYTE PTR [r14],dil
   140007165:	mov    rcx,QWORD PTR [rbp-0x10]
   140007169:	xor    rcx,rsp
   14000716c:	call   0x140025df0
   140007171:	mov    rbx,QWORD PTR [rsp+0xd8]
   140007179:	add    rsp,0x80
   140007180:	pop    r15
   140007182:	pop    r14
   140007184:	pop    r13
   140007186:	pop    r12
   140007188:	pop    rdi
   140007189:	pop    rsi
   14000718a:	pop    rbp
   14000718b:	ret    
   14000718c:	mov    rax,rsp
   14000718f:	push   rbp
   140007190:	push   rdi
   140007191:	push   r14
   140007193:	lea    rbp,[rax-0x68]
   140007197:	sub    rsp,0x150
   14000719e:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   1400071a6:	mov    QWORD PTR [rax+0x18],rbx
   1400071aa:	mov    QWORD PTR [rax+0x20],rsi
   1400071ae:	mov    rax,QWORD PTR [rip+0x69e9b]        # 0x140071050
   1400071b5:	xor    rax,rsp
   1400071b8:	mov    QWORD PTR [rbp+0x40],rax
   1400071bc:	mov    r14,rdx
   1400071bf:	mov    rdi,rcx
   1400071c2:	xor    ebx,ebx
   1400071c4:	mov    DWORD PTR [rsp+0x30],ebx
   1400071c8:	lea    rcx,[rbp-0x30]
   1400071cc:	call   0x14000a76c
   1400071d1:	nop
   1400071d2:	call   0x140004794
   1400071d7:	xor    eax,eax
   1400071d9:	mov    QWORD PTR [rbp-0x30],rax
   1400071dd:	mov    QWORD PTR [rbp-0x28],rax
   1400071e1:	mov    DWORD PTR [rbp-0x20],0x3
   1400071e8:	mov    rsi,QWORD PTR [rbp-0x18]
   1400071ec:	lea    rdx,[r14+0x40]
   1400071f0:	mov    r8,rsi
   1400071f3:	lea    rcx,[rbp-0x48]
   1400071f7:	call   0x14000a630
   1400071fc:	nop
   1400071fd:	lea    rcx,[rip+0x5aee8]        # 0x1400620ec
   140007204:	mov    QWORD PTR [rsp+0x20],rcx
   140007209:	mov    DWORD PTR [rsp+0x28],0x3
   140007211:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140007216:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000721c:	mov    r9,rsi
   14000721f:	mov    r8,rax
   140007222:	lea    rdx,[rsp+0x20]
   140007227:	lea    rcx,[rbp-0x30]
   14000722b:	call   0x14000a438
   140007230:	nop
   140007231:	lea    rdx,[r14+0x68]
   140007235:	mov    r8,rsi
   140007238:	lea    rcx,[rbp-0x48]
   14000723c:	call   0x14000a630
   140007241:	nop
   140007242:	lea    rcx,[rip+0x5ab2b]        # 0x140061d74
   140007249:	mov    QWORD PTR [rsp+0x20],rcx
   14000724e:	mov    DWORD PTR [rsp+0x28],0x6
   140007256:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000725b:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007261:	mov    r9,rsi
   140007264:	mov    r8,rax
   140007267:	lea    rdx,[rsp+0x20]
   14000726c:	lea    rcx,[rbp-0x30]
   140007270:	call   0x14000a438
   140007275:	nop
   140007276:	mov    rcx,QWORD PTR [r14+0x60]
   14000727a:	xor    eax,eax
   14000727c:	mov    QWORD PTR [rbp-0x40],rax
   140007280:	mov    eax,0x2206
   140007285:	mov    QWORD PTR [rbp-0x48],rcx
   140007289:	mov    edx,0x3206
   14000728e:	test   rcx,rcx
   140007291:	cmovns eax,edx
   140007294:	mov    DWORD PTR [rbp-0x38],eax
   140007297:	movabs rdx,0xffffffff00000000
   1400072a1:	test   rdx,rcx
   1400072a4:	jne    0x1400072ad
   1400072a6:	bts    eax,0xb
   1400072aa:	mov    DWORD PTR [rbp-0x38],eax
   1400072ad:	test   rcx,0xffffffff80000000
   1400072b4:	jne    0x1400072bd
   1400072b6:	bts    eax,0xa
   1400072ba:	mov    DWORD PTR [rbp-0x38],eax
   1400072bd:	lea    rax,[rip+0x5ae2c]        # 0x1400620f0
   1400072c4:	mov    QWORD PTR [rsp+0x20],rax
   1400072c9:	mov    DWORD PTR [rsp+0x28],0x4
   1400072d1:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400072d6:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400072dc:	mov    r9,rsi
   1400072df:	lea    r8,[rbp-0x48]
   1400072e3:	lea    rdx,[rsp+0x20]
   1400072e8:	lea    rcx,[rbp-0x30]
   1400072ec:	call   0x14000a438
   1400072f1:	nop
   1400072f2:	lea    rdx,[r14+0x20]
   1400072f6:	mov    r8,rsi
   1400072f9:	lea    rcx,[rbp-0x48]
   1400072fd:	call   0x14000a630
   140007302:	nop
   140007303:	lea    rcx,[rip+0x5adee]        # 0x1400620f8
   14000730a:	mov    QWORD PTR [rsp+0x20],rcx
   14000730f:	mov    DWORD PTR [rsp+0x28],0x3
   140007317:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000731c:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007322:	mov    r9,rsi
   140007325:	mov    r8,rax
   140007328:	lea    rdx,[rsp+0x20]
   14000732d:	lea    rcx,[rbp-0x30]
   140007331:	call   0x14000a438
   140007336:	nop
   140007337:	mov    r8,rsi
   14000733a:	mov    rdx,r14
   14000733d:	lea    rcx,[rbp-0x48]
   140007341:	call   0x14000a630
   140007346:	nop
   140007347:	lea    rcx,[rip+0x5adb2]        # 0x140062100
   14000734e:	mov    QWORD PTR [rsp+0x20],rcx
   140007353:	mov    DWORD PTR [rsp+0x28],0x7
   14000735b:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140007360:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140007366:	mov    r9,rsi
   140007369:	mov    r8,rax
   14000736c:	lea    rdx,[rsp+0x20]
   140007371:	lea    rcx,[rbp-0x30]
   140007375:	call   0x14000a438
   14000737a:	nop
   14000737b:	xorps  xmm0,xmm0
   14000737e:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   140007384:	xorps  xmm1,xmm1
   140007387:	movdqu XMMWORD PTR [rsp+0x48],xmm1
   14000738d:	mov    QWORD PTR [rsp+0x58],rbx
   140007392:	mov    QWORD PTR [rsp+0x60],0x100
   14000739b:	lea    rax,[rsp+0x38]
   1400073a0:	mov    QWORD PTR [rsp+0x70],rax
   1400073a5:	mov    QWORD PTR [rsp+0x78],rbx
   1400073aa:	movdqa XMMWORD PTR [rbp-0x80],xmm0
   1400073af:	movdqa XMMWORD PTR [rbp-0x70],xmm1
   1400073b4:	mov    QWORD PTR [rbp-0x60],0x200
   1400073bc:	mov    BYTE PTR [rbp-0x58],bl
   1400073bf:	lea    rdx,[rsp+0x70]
   1400073c4:	lea    rcx,[rbp-0x30]
   1400073c8:	call   0x14000d16c
   1400073cd:	mov    esi,0x1
   1400073d2:	mov    edx,esi
   1400073d4:	lea    rcx,[rsp+0x38]
   1400073d9:	call   0x14000d0a4
   1400073de:	mov    BYTE PTR [rax],bl
   1400073e0:	sub    QWORD PTR [rsp+0x50],rsi
   1400073e5:	mov    rdx,QWORD PTR [rsp+0x48]
   1400073ea:	mov    QWORD PTR [rdi+0x18],0xf
   1400073f2:	mov    QWORD PTR [rdi+0x10],rbx
   1400073f6:	cmp    QWORD PTR [rdi+0x18],0x10
   1400073fb:	jb     0x140007402
   1400073fd:	mov    rax,QWORD PTR [rdi]
   140007400:	jmp    0x140007405
   140007402:	mov    rax,rdi
   140007405:	mov    BYTE PTR [rax],bl
   140007407:	cmp    BYTE PTR [rdx],bl
   140007409:	je     0x14000741a
   14000740b:	or     rax,0xffffffffffffffff
   14000740f:	inc    rax
   140007412:	cmp    BYTE PTR [rdx+rax*1],bl
   140007415:	jne    0x14000740f
   140007417:	mov    rbx,rax
   14000741a:	mov    r8,rbx
   14000741d:	mov    rcx,rdi
   140007420:	call   0x14000b994
   140007425:	nop
   140007426:	mov    rcx,QWORD PTR [rbp-0x78]
   14000742a:	call   0x1400304c4
   14000742f:	mov    rdx,rsi
   140007432:	mov    rcx,QWORD PTR [rbp-0x80]
   140007436:	call   0x140026804
   14000743b:	nop
   14000743c:	mov    rcx,QWORD PTR [rsp+0x48]
   140007441:	call   0x1400304c4
   140007446:	mov    rdx,rsi
   140007449:	mov    rcx,QWORD PTR [rsp+0x40]
   14000744e:	call   0x140026804
   140007453:	nop
   140007454:	lea    rcx,[rbp-0x30]
   140007458:	call   0x14000a6c8
   14000745d:	mov    rax,rdi
   140007460:	mov    rcx,QWORD PTR [rbp+0x40]
   140007464:	xor    rcx,rsp
   140007467:	call   0x140025df0
   14000746c:	lea    r11,[rsp+0x150]
   140007474:	mov    rbx,QWORD PTR [r11+0x30]
   140007478:	mov    rsi,QWORD PTR [r11+0x38]
   14000747c:	mov    rsp,r11
   14000747f:	pop    r14
   140007481:	pop    rdi
   140007482:	pop    rbp
   140007483:	ret    
   140007484:	mov    rax,rsp
   140007487:	push   rbp
   140007488:	push   r12
   14000748a:	push   r13
   14000748c:	push   r14
   14000748e:	push   r15
   140007490:	lea    rbp,[rax-0x228]
   140007497:	sub    rsp,0x300
   14000749e:	mov    QWORD PTR [rbp-0x70],0xfffffffffffffffe
   1400074a6:	mov    QWORD PTR [rax+0x10],rbx
   1400074aa:	mov    QWORD PTR [rax+0x18],rsi
   1400074ae:	mov    QWORD PTR [rax+0x20],rdi
   1400074b2:	mov    rax,QWORD PTR [rip+0x69b97]        # 0x140071050
   1400074b9:	xor    rax,rsp
   1400074bc:	mov    QWORD PTR [rbp+0x1f0],rax
   1400074c3:	mov    rsi,rdx
   1400074c6:	mov    rdi,rcx
   1400074c9:	mov    QWORD PTR [rbp-0x60],rcx
   1400074cd:	xor    ebx,ebx
   1400074cf:	mov    DWORD PTR [rsp+0x30],ebx
   1400074d3:	lea    rcx,[rbp+0xc0]
   1400074da:	call   0x14000a76c
   1400074df:	nop
   1400074e0:	cmp    QWORD PTR [rsi+0x18],0x10
   1400074e5:	jb     0x1400074ea
   1400074e7:	mov    rsi,QWORD PTR [rsi]
   1400074ea:	mov    QWORD PTR [rsp+0x38],rsi
   1400074ef:	mov    QWORD PTR [rsp+0x40],rsi
   1400074f4:	call   0x140004794
   1400074f9:	xor    eax,eax
   1400074fb:	mov    QWORD PTR [rbp+0xc0],rax
   140007502:	mov    QWORD PTR [rbp+0xc8],rax
   140007509:	mov    DWORD PTR [rbp+0xd0],ebx
   14000750f:	mov    rax,QWORD PTR [rbp+0xe8]
   140007516:	mov    QWORD PTR [rsp+0x50],rax
   14000751b:	mov    QWORD PTR [rsp+0x58],rbx
   140007520:	xorps  xmm0,xmm0
   140007523:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140007529:	mov    QWORD PTR [rsp+0x70],rbx
   14000752e:	mov    QWORD PTR [rsp+0x78],0x100
   140007537:	mov    DWORD PTR [rbp-0x80],ebx
   14000753a:	mov    QWORD PTR [rbp-0x78],rbx
   14000753e:	lea    rax,[rbp+0xc0]
   140007545:	mov    QWORD PTR [rbp-0x50],rax
   140007549:	lea    r9,[rbp+0xc0]
   140007550:	lea    r8,[rsp+0x38]
   140007555:	lea    rdx,[rbp+0xa0]
   14000755c:	lea    rcx,[rsp+0x50]
   140007561:	call   0x140011050
   140007566:	movups xmm0,XMMWORD PTR [rax]
   140007569:	movups XMMWORD PTR [rbp+0x118],xmm0
   140007570:	movd   eax,xmm0
   140007574:	test   eax,eax
   140007576:	jne    0x1400075a1
   140007578:	mov    rcx,QWORD PTR [rbp+0x100]
   14000757f:	sub    rcx,0x18
   140007583:	mov    QWORD PTR [rbp+0x100],rcx
   14000758a:	movups xmm0,XMMWORD PTR [rcx]
   14000758d:	movdqu XMMWORD PTR [rbp+0xc0],xmm0
   140007595:	mov    eax,DWORD PTR [rcx+0x10]
   140007598:	mov    DWORD PTR [rbp+0xd0],eax
   14000759e:	mov    DWORD PTR [rcx+0x10],ebx
   1400075a1:	mov    rcx,QWORD PTR [rbp+0xf8]
   1400075a8:	mov    QWORD PTR [rbp+0x100],rcx
   1400075af:	call   0x1400263fc
   1400075b4:	mov    QWORD PTR [rbp+0xf8],rbx
   1400075bb:	xorps  xmm0,xmm0
   1400075be:	movdqa XMMWORD PTR [rbp+0x100],xmm0
   1400075c6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400075cb:	call   0x1400263fc
   1400075d0:	mov    r13d,0x1
   1400075d6:	mov    edx,r13d
   1400075d9:	mov    rcx,QWORD PTR [rsp+0x58]
   1400075de:	call   0x140026804
   1400075e3:	nop
   1400075e4:	mov    esi,DWORD PTR [rbp+0x118]
   1400075ea:	test   esi,esi
   1400075ec:	je     0x14000768b
   1400075f2:	mov    rbx,QWORD PTR [rbp+0x120]
   1400075f9:	mov    r8d,r13d
   1400075fc:	lea    edx,[r13+0x1]
   140007600:	lea    rcx,[rbp-0x48]
   140007604:	call   0x14000be9c
   140007609:	nop
   14000760a:	lea    rdx,[rip+0x5aaf7]        # 0x140062108
   140007611:	lea    rcx,[rbp-0x48]
   140007615:	call   0x140010488
   14000761a:	mov    edx,esi
   14000761c:	lea    rcx,[rbp-0x48]
   140007620:	call   0x14000e638
   140007625:	lea    rdx,[rip+0x5ab04]        # 0x140062130
   14000762c:	lea    rcx,[rbp-0x48]
   140007630:	call   0x140010488
   140007635:	mov    rdx,rbx
   140007638:	lea    rcx,[rbp-0x48]
   14000763c:	call   0x14000e364
   140007641:	lea    rdx,[rbp+0xa0]
   140007648:	lea    rcx,[rbp-0x48]
   14000764c:	call   0x14000a950
   140007651:	nop
   140007652:	mov    DWORD PTR [rsp+0x20],r13d
   140007657:	mov    r9d,0xc7
   14000765d:	lea    r8,[rip+0x5a81c]        # 0x140061e80
   140007664:	lea    rdx,[rbp+0xa0]
   14000766b:	lea    rcx,[rbp+0x130]
   140007672:	call   0x140020734
   140007677:	lea    rdx,[rip+0x688ca]        # 0x14006ff48
   14000767e:	lea    rcx,[rbp+0x130]
   140007685:	call   0x14002ab88
   14000768a:	nop
   14000768b:	mov    ecx,0xf
   140007690:	mov    QWORD PTR [rdi+0x18],rcx
   140007694:	mov    QWORD PTR [rdi+0x10],rbx
   140007698:	cmp    QWORD PTR [rdi+0x18],0x10
   14000769d:	jb     0x1400076a4
   14000769f:	mov    rax,QWORD PTR [rdi]
   1400076a2:	jmp    0x1400076a7
   1400076a4:	mov    rax,rdi
   1400076a7:	mov    BYTE PTR [rax],bl
   1400076a9:	lea    rsi,[rdi+0x20]
   1400076ad:	mov    QWORD PTR [rsi+0x18],rcx
   1400076b1:	mov    QWORD PTR [rsi+0x10],rbx
   1400076b5:	cmp    QWORD PTR [rsi+0x18],0x10
   1400076ba:	jb     0x1400076c1
   1400076bc:	mov    rax,QWORD PTR [rsi]
   1400076bf:	jmp    0x1400076c4
   1400076c1:	mov    rax,rsi
   1400076c4:	mov    BYTE PTR [rax],bl
   1400076c6:	lea    r15,[rdi+0x40]
   1400076ca:	mov    QWORD PTR [r15+0x18],rcx
   1400076ce:	mov    QWORD PTR [r15+0x10],rbx
   1400076d2:	cmp    QWORD PTR [r15+0x18],0x10
   1400076d7:	jb     0x1400076de
   1400076d9:	mov    rax,QWORD PTR [r15]
   1400076dc:	jmp    0x1400076e1
   1400076de:	mov    rax,r15
   1400076e1:	mov    BYTE PTR [rax],bl
   1400076e3:	lea    r12,[rdi+0x68]
   1400076e7:	mov    QWORD PTR [r12+0x18],rcx
   1400076ec:	mov    QWORD PTR [r12+0x10],rbx
   1400076f1:	cmp    QWORD PTR [r12+0x18],0x10
   1400076f7:	jb     0x1400076ff
   1400076f9:	mov    rax,QWORD PTR [r12]
   1400076fd:	jmp    0x140007702
   1400076ff:	mov    rax,r12
   140007702:	mov    BYTE PTR [rax],bl
   140007704:	mov    DWORD PTR [rsp+0x30],r13d
   140007709:	lea    rdx,[rip+0x5a9f0]        # 0x140062100
   140007710:	lea    rcx,[rbp+0xc0]
   140007717:	call   0x14000a5ac
   14000771c:	test   al,al
   14000771e:	je     0x140007c50
   140007724:	lea    rdx,[rip+0x5a9d5]        # 0x140062100
   14000772b:	lea    rcx,[rbp+0xc0]
   140007732:	call   0x14000d95c
   140007737:	mov    rdx,rax
   14000773a:	mov    eax,DWORD PTR [rax+0x10]
   14000773d:	shr    eax,0x14
   140007740:	test   r13b,al
   140007743:	jne    0x1400077b1
   140007745:	mov    QWORD PTR [rbp+0xb8],0x7
   140007750:	mov    QWORD PTR [rbp+0xb0],rbx
   140007757:	mov    WORD PTR [rbp+0xa0],bx
   14000775e:	mov    r8d,0x2a
   140007764:	lea    rdx,[rip+0x5a9e5]        # 0x140062150
   14000776b:	lea    rcx,[rbp+0xa0]
   140007772:	call   0x14000b730
   140007777:	nop
   140007778:	mov    DWORD PTR [rsp+0x20],r13d
   14000777d:	mov    r9d,0xd1
   140007783:	lea    r8,[rip+0x5a6f6]        # 0x140061e80
   14000778a:	lea    rdx,[rbp+0xa0]
   140007791:	lea    rcx,[rbp+0x130]
   140007798:	call   0x140020734
   14000779d:	lea    rdx,[rip+0x687a4]        # 0x14006ff48
   1400077a4:	lea    rcx,[rbp+0x130]
   1400077ab:	call   0x14002ab88
   1400077b0:	nop
   1400077b1:	test   DWORD PTR [rdx+0x10],0x400000
   1400077b8:	jne    0x1400077bd
   1400077ba:	mov    rdx,QWORD PTR [rdx]
   1400077bd:	or     r14,0xffffffffffffffff
   1400077c1:	cmp    BYTE PTR [rdx],bl
   1400077c3:	jne    0x1400077ca
   1400077c5:	mov    r8,rbx
   1400077c8:	jmp    0x1400077d6
   1400077ca:	mov    r8,r14
   1400077cd:	inc    r8
   1400077d0:	cmp    BYTE PTR [rdx+r8*1],bl
   1400077d4:	jne    0x1400077cd
   1400077d6:	mov    rcx,rdi
   1400077d9:	call   0x14000b994
   1400077de:	lea    rdx,[rip+0x5a913]        # 0x1400620f8
   1400077e5:	lea    rcx,[rbp+0xc0]
   1400077ec:	call   0x14000a5ac
   1400077f1:	test   al,al
   1400077f3:	je     0x140007be4
   1400077f9:	lea    rdx,[rip+0x5a8f8]        # 0x1400620f8
   140007800:	lea    rcx,[rbp+0xc0]
   140007807:	call   0x14000d95c
   14000780c:	mov    rdx,rax
   14000780f:	mov    eax,DWORD PTR [rax+0x10]
   140007812:	shr    eax,0x14
   140007815:	test   r13b,al
   140007818:	jne    0x140007886
   14000781a:	mov    QWORD PTR [rbp+0xb8],0x7
   140007825:	mov    QWORD PTR [rbp+0xb0],rbx
   14000782c:	mov    WORD PTR [rbp+0xa0],bx
   140007833:	mov    r8d,0x26
   140007839:	lea    rdx,[rip+0x5a9b0]        # 0x1400621f0
   140007840:	lea    rcx,[rbp+0xa0]
   140007847:	call   0x14000b730
   14000784c:	nop
   14000784d:	mov    DWORD PTR [rsp+0x20],r13d
   140007852:	mov    r9d,0xdf
   140007858:	lea    r8,[rip+0x5a621]        # 0x140061e80
   14000785f:	lea    rdx,[rbp+0xa0]
   140007866:	lea    rcx,[rbp+0x130]
   14000786d:	call   0x140020734
   140007872:	lea    rdx,[rip+0x686cf]        # 0x14006ff48
   140007879:	lea    rcx,[rbp+0x130]
   140007880:	call   0x14002ab88
   140007885:	nop
   140007886:	test   DWORD PTR [rdx+0x10],0x400000
   14000788d:	jne    0x140007892
   14000788f:	mov    rdx,QWORD PTR [rdx]
   140007892:	cmp    BYTE PTR [rdx],bl
   140007894:	jne    0x14000789b
   140007896:	mov    r8,rbx
   140007899:	jmp    0x1400078a7
   14000789b:	mov    r8,r14
   14000789e:	inc    r8
   1400078a1:	cmp    BYTE PTR [rdx+r8*1],bl
   1400078a5:	jne    0x14000789e
   1400078a7:	mov    rcx,rsi
   1400078aa:	call   0x14000b994
   1400078af:	lea    rdx,[rip+0x5a836]        # 0x1400620ec
   1400078b6:	lea    rcx,[rbp+0xc0]
   1400078bd:	call   0x14000a5ac
   1400078c2:	test   al,al
   1400078c4:	je     0x140007b78
   1400078ca:	lea    rdx,[rip+0x5a81b]        # 0x1400620ec
   1400078d1:	lea    rcx,[rbp+0xc0]
   1400078d8:	call   0x14000d95c
   1400078dd:	mov    rdx,rax
   1400078e0:	mov    eax,DWORD PTR [rax+0x10]
   1400078e3:	shr    eax,0x14
   1400078e6:	test   r13b,al
   1400078e9:	jne    0x140007957
   1400078eb:	mov    QWORD PTR [rbp+0xb8],0x7
   1400078f6:	mov    QWORD PTR [rbp+0xb0],rbx
   1400078fd:	mov    WORD PTR [rbp+0xa0],bx
   140007904:	mov    r8d,0x26
   14000790a:	lea    rdx,[rip+0x5a96f]        # 0x140062280
   140007911:	lea    rcx,[rbp+0xa0]
   140007918:	call   0x14000b730
   14000791d:	nop
   14000791e:	mov    DWORD PTR [rsp+0x20],r13d
   140007923:	mov    r9d,0xed
   140007929:	lea    r8,[rip+0x5a550]        # 0x140061e80
   140007930:	lea    rdx,[rbp+0xa0]
   140007937:	lea    rcx,[rbp+0x130]
   14000793e:	call   0x140020734
   140007943:	lea    rdx,[rip+0x685fe]        # 0x14006ff48
   14000794a:	lea    rcx,[rbp+0x130]
   140007951:	call   0x14002ab88
   140007956:	nop
   140007957:	mov    esi,0x400000
   14000795c:	test   DWORD PTR [rdx+0x10],esi
   14000795f:	jne    0x140007964
   140007961:	mov    rdx,QWORD PTR [rdx]
   140007964:	cmp    BYTE PTR [rdx],bl
   140007966:	jne    0x14000796d
   140007968:	mov    r8,rbx
   14000796b:	jmp    0x140007979
   14000796d:	mov    r8,r14
   140007970:	inc    r8
   140007973:	cmp    BYTE PTR [rdx+r8*1],bl
   140007977:	jne    0x140007970
   140007979:	mov    rcx,r15
   14000797c:	call   0x14000b994
   140007981:	lea    rdx,[rip+0x5a768]        # 0x1400620f0
   140007988:	lea    rcx,[rbp+0xc0]
   14000798f:	call   0x14000a5ac
   140007994:	test   al,al
   140007996:	je     0x140007b0c
   14000799c:	lea    rdx,[rip+0x5a74d]        # 0x1400620f0
   1400079a3:	lea    rcx,[rbp+0xc0]
   1400079aa:	call   0x14000d95c
   1400079af:	mov    ecx,DWORD PTR [rax+0x10]
   1400079b2:	shr    ecx,0xb
   1400079b5:	test   r13b,cl
   1400079b8:	jne    0x140007a26
   1400079ba:	mov    QWORD PTR [rbp+0xb8],0x7
   1400079c5:	mov    QWORD PTR [rbp+0xb0],rbx
   1400079cc:	mov    WORD PTR [rbp+0xa0],bx
   1400079d3:	mov    r8d,0x32
   1400079d9:	lea    rdx,[rip+0x5a930]        # 0x140062310
   1400079e0:	lea    rcx,[rbp+0xa0]
   1400079e7:	call   0x14000b730
   1400079ec:	nop
   1400079ed:	mov    DWORD PTR [rsp+0x20],r13d
   1400079f2:	mov    r9d,0xfb
   1400079f8:	lea    r8,[rip+0x5a481]        # 0x140061e80
   1400079ff:	lea    rdx,[rbp+0xa0]
   140007a06:	lea    rcx,[rbp+0x130]
   140007a0d:	call   0x140020734
   140007a12:	lea    rdx,[rip+0x6852f]        # 0x14006ff48
   140007a19:	lea    rcx,[rbp+0x130]
   140007a20:	call   0x14002ab88
   140007a25:	nop
   140007a26:	mov    eax,DWORD PTR [rax]
   140007a28:	mov    QWORD PTR [rdi+0x60],rax
   140007a2c:	lea    rdx,[rip+0x5a341]        # 0x140061d74
   140007a33:	lea    rcx,[rbp+0xc0]
   140007a3a:	call   0x14000a5ac
   140007a3f:	test   al,al
   140007a41:	je     0x140007af8
   140007a47:	lea    rdx,[rip+0x5a326]        # 0x140061d74
   140007a4e:	lea    rcx,[rbp+0xc0]
   140007a55:	call   0x14000d95c
   140007a5a:	mov    rdx,rax
   140007a5d:	mov    eax,DWORD PTR [rax+0x10]
   140007a60:	shr    eax,0x14
   140007a63:	test   r13b,al
   140007a66:	jne    0x140007ad4
   140007a68:	mov    QWORD PTR [rbp+0xb8],0x7
   140007a73:	mov    QWORD PTR [rbp+0xb0],rbx
   140007a7a:	mov    WORD PTR [rbp+0xa0],bx
   140007a81:	mov    r8d,0x29
   140007a87:	lea    rdx,[rip+0x5a922]        # 0x1400623b0
   140007a8e:	lea    rcx,[rbp+0xa0]
   140007a95:	call   0x14000b730
   140007a9a:	nop
   140007a9b:	mov    DWORD PTR [rsp+0x20],r13d
   140007aa0:	mov    r9d,0x109
   140007aa6:	lea    r8,[rip+0x5a3d3]        # 0x140061e80
   140007aad:	lea    rdx,[rbp+0xa0]
   140007ab4:	lea    rcx,[rbp+0x130]
   140007abb:	call   0x140020734
   140007ac0:	lea    rdx,[rip+0x68481]        # 0x14006ff48
   140007ac7:	lea    rcx,[rbp+0x130]
   140007ace:	call   0x14002ab88
   140007ad3:	nop
   140007ad4:	test   DWORD PTR [rdx+0x10],esi
   140007ad7:	jne    0x140007adc
   140007ad9:	mov    rdx,QWORD PTR [rdx]
   140007adc:	cmp    BYTE PTR [rdx],bl
   140007ade:	je     0x140007aec
   140007ae0:	inc    r14
   140007ae3:	cmp    BYTE PTR [rdx+r14*1],bl
   140007ae7:	jne    0x140007ae0
   140007ae9:	mov    rbx,r14
   140007aec:	mov    r8,rbx
   140007aef:	mov    rcx,r12
   140007af2:	call   0x14000b994
   140007af7:	nop
   140007af8:	lea    rcx,[rbp+0xc0]
   140007aff:	call   0x14000a6c8
   140007b04:	mov    rax,rdi
   140007b07:	jmp    0x140007cbc
   140007b0c:	mov    QWORD PTR [rbp+0xb8],0x7
   140007b17:	mov    QWORD PTR [rbp+0xb0],rbx
   140007b1e:	mov    WORD PTR [rbp+0xa0],bx
   140007b25:	mov    r8d,0x19
   140007b2b:	lea    rdx,[rip+0x5a846]        # 0x140062378
   140007b32:	lea    rcx,[rbp+0xa0]
   140007b39:	call   0x14000b730
   140007b3e:	nop
   140007b3f:	mov    DWORD PTR [rsp+0x20],r13d
   140007b44:	mov    r9d,0x101
   140007b4a:	lea    r8,[rip+0x5a32f]        # 0x140061e80
   140007b51:	lea    rdx,[rbp+0xa0]
   140007b58:	lea    rcx,[rbp+0x130]
   140007b5f:	call   0x140020734
   140007b64:	lea    rdx,[rip+0x683dd]        # 0x14006ff48
   140007b6b:	lea    rcx,[rbp+0x130]
   140007b72:	call   0x14002ab88
   140007b77:	nop
   140007b78:	mov    QWORD PTR [rbp+0xb8],0x7
   140007b83:	mov    QWORD PTR [rbp+0xb0],rbx
   140007b8a:	mov    WORD PTR [rbp+0xa0],bx
   140007b91:	mov    r8d,0x18
   140007b97:	lea    rdx,[rip+0x5a732]        # 0x1400622d0
   140007b9e:	lea    rcx,[rbp+0xa0]
   140007ba5:	call   0x14000b730
   140007baa:	nop
   140007bab:	mov    DWORD PTR [rsp+0x20],r13d
   140007bb0:	mov    r9d,0xf3
   140007bb6:	lea    r8,[rip+0x5a2c3]        # 0x140061e80
   140007bbd:	lea    rdx,[rbp+0xa0]
   140007bc4:	lea    rcx,[rbp+0x130]
   140007bcb:	call   0x140020734
   140007bd0:	lea    rdx,[rip+0x68371]        # 0x14006ff48
   140007bd7:	lea    rcx,[rbp+0x130]
   140007bde:	call   0x14002ab88
   140007be3:	nop
   140007be4:	mov    QWORD PTR [rbp+0xb8],0x7
   140007bef:	mov    QWORD PTR [rbp+0xb0],rbx
   140007bf6:	mov    WORD PTR [rbp+0xa0],bx
   140007bfd:	mov    r8d,0x18
   140007c03:	lea    rdx,[rip+0x5a636]        # 0x140062240
   140007c0a:	lea    rcx,[rbp+0xa0]
   140007c11:	call   0x14000b730
   140007c16:	nop
   140007c17:	mov    DWORD PTR [rsp+0x20],r13d
   140007c1c:	mov    r9d,0xe5
   140007c22:	lea    r8,[rip+0x5a257]        # 0x140061e80
   140007c29:	lea    rdx,[rbp+0xa0]
   140007c30:	lea    rcx,[rbp+0x130]
   140007c37:	call   0x140020734
   140007c3c:	lea    rdx,[rip+0x68305]        # 0x14006ff48
   140007c43:	lea    rcx,[rbp+0x130]
   140007c4a:	call   0x14002ab88
   140007c4f:	nop
   140007c50:	mov    QWORD PTR [rbp+0xb8],0x7
   140007c5b:	mov    QWORD PTR [rbp+0xb0],rbx
   140007c62:	mov    WORD PTR [rbp+0xa0],bx
   140007c69:	mov    r8d,0x1c
   140007c6f:	lea    rdx,[rip+0x5a532]        # 0x1400621a8
   140007c76:	lea    rcx,[rbp+0xa0]
   140007c7d:	call   0x14000b730
   140007c82:	nop
   140007c83:	mov    DWORD PTR [rsp+0x20],r13d
   140007c88:	mov    r9d,0xd7
   140007c8e:	lea    r8,[rip+0x5a1eb]        # 0x140061e80
   140007c95:	lea    rdx,[rbp+0xa0]
   140007c9c:	lea    rcx,[rbp+0x130]
   140007ca3:	call   0x140020734
   140007ca8:	lea    rdx,[rip+0x68299]        # 0x14006ff48
   140007caf:	lea    rcx,[rbp+0x130]
   140007cb6:	call   0x14002ab88
   140007cbb:	nop
   140007cbc:	mov    rcx,QWORD PTR [rbp+0x1f0]
   140007cc3:	xor    rcx,rsp
   140007cc6:	call   0x140025df0
   140007ccb:	lea    r11,[rsp+0x300]
   140007cd3:	mov    rbx,QWORD PTR [r11+0x38]
   140007cd7:	mov    rsi,QWORD PTR [r11+0x40]
   140007cdb:	mov    rdi,QWORD PTR [r11+0x48]
   140007cdf:	mov    rsp,r11
   140007ce2:	pop    r15
   140007ce4:	pop    r14
   140007ce6:	pop    r13
   140007ce8:	pop    r12
   140007cea:	pop    rbp
   140007ceb:	ret    
   140007cec:	int3   
   140007ced:	int3   
   140007cee:	int3   
   140007cef:	int3   
   140007cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140007cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140007cfa:	mov    QWORD PTR [rsp+0x18],rdi
   140007cff:	push   r14
   140007d01:	sub    rsp,0x20
   140007d05:	lea    rdi,[rcx+0x68]
   140007d09:	mov    rbx,rcx
   140007d0c:	mov    rdx,QWORD PTR [rdi+0x18]
   140007d10:	mov    r14d,0x1
   140007d16:	cmp    rdx,0x10
   140007d1a:	jb     0x140007d2a
   140007d1c:	mov    rcx,QWORD PTR [rdi]
   140007d1f:	inc    rdx
   140007d22:	mov    r8d,r14d
   140007d25:	call   0x140004804
   140007d2a:	mov    ebp,0xf
   140007d2f:	mov    QWORD PTR [rdi+0x18],rbp
   140007d33:	and    QWORD PTR [rdi+0x10],0x0
   140007d38:	cmp    rbp,0x10
   140007d3c:	jb     0x140007d41
   140007d3e:	mov    rdi,QWORD PTR [rdi]
   140007d41:	mov    BYTE PTR [rdi],0x0
   140007d44:	lea    rdi,[rbx+0x40]
   140007d48:	mov    rdx,QWORD PTR [rdi+0x18]
   140007d4c:	cmp    rdx,0x10
   140007d50:	jb     0x140007d60
   140007d52:	mov    rcx,QWORD PTR [rdi]
   140007d55:	inc    rdx
   140007d58:	mov    r8,r14
   140007d5b:	call   0x140004804
   140007d60:	mov    QWORD PTR [rdi+0x18],rbp
   140007d64:	and    QWORD PTR [rdi+0x10],0x0
   140007d69:	cmp    rbp,0x10
   140007d6d:	jb     0x140007d72
   140007d6f:	mov    rdi,QWORD PTR [rdi]
   140007d72:	mov    BYTE PTR [rdi],0x0
   140007d75:	lea    rdi,[rbx+0x20]
   140007d79:	mov    rdx,QWORD PTR [rdi+0x18]
   140007d7d:	cmp    rdx,0x10
   140007d81:	jb     0x140007d91
   140007d83:	mov    rcx,QWORD PTR [rdi]
   140007d86:	inc    rdx
   140007d89:	mov    r8,r14
   140007d8c:	call   0x140004804
   140007d91:	mov    QWORD PTR [rdi+0x18],rbp
   140007d95:	and    QWORD PTR [rdi+0x10],0x0
   140007d9a:	cmp    rbp,0x10
   140007d9e:	jb     0x140007da3
   140007da0:	mov    rdi,QWORD PTR [rdi]
   140007da3:	mov    BYTE PTR [rdi],0x0
   140007da6:	mov    rdx,QWORD PTR [rbx+0x18]
   140007daa:	cmp    rdx,0x10
   140007dae:	jb     0x140007dbe
   140007db0:	mov    rcx,QWORD PTR [rbx]
   140007db3:	inc    rdx
   140007db6:	mov    r8,r14
   140007db9:	call   0x140004804
   140007dbe:	mov    QWORD PTR [rbx+0x18],rbp
   140007dc2:	and    QWORD PTR [rbx+0x10],0x0
   140007dc7:	cmp    rbp,0x10
   140007dcb:	jb     0x140007dd0
   140007dcd:	mov    rbx,QWORD PTR [rbx]
   140007dd0:	mov    rbp,QWORD PTR [rsp+0x38]
   140007dd5:	mov    rdi,QWORD PTR [rsp+0x40]
   140007dda:	mov    BYTE PTR [rbx],0x0
   140007ddd:	mov    rbx,QWORD PTR [rsp+0x30]
   140007de2:	add    rsp,0x20
   140007de6:	pop    r14
   140007de8:	ret    
   140007de9:	int3   
   140007dea:	int3   
   140007deb:	int3   
   140007dec:	mov    QWORD PTR [rsp+0x8],rbx
   140007df1:	mov    QWORD PTR [rsp+0x10],rsi
   140007df6:	push   rdi
   140007df7:	sub    rsp,0x20
   140007dfb:	and    QWORD PTR [rcx+0x10],0x0
   140007e00:	mov    esi,0xf
   140007e05:	mov    QWORD PTR [rcx+0x18],rsi
   140007e09:	mov    rbx,rdx
   140007e0c:	mov    BYTE PTR [rcx],0x0
   140007e0f:	mov    rdi,rcx
   140007e12:	call   0x14000be10
   140007e17:	lea    rcx,[rdi+0x20]
   140007e1b:	and    QWORD PTR [rcx+0x10],0x0
   140007e20:	lea    rdx,[rbx+0x20]
   140007e24:	mov    QWORD PTR [rcx+0x18],rsi
   140007e28:	mov    BYTE PTR [rcx],0x0
   140007e2b:	call   0x14000be10
   140007e30:	lea    rcx,[rdi+0x40]
   140007e34:	and    QWORD PTR [rcx+0x10],0x0
   140007e39:	lea    rdx,[rbx+0x40]
   140007e3d:	mov    QWORD PTR [rcx+0x18],rsi
   140007e41:	mov    BYTE PTR [rcx],0x0
   140007e44:	call   0x14000be10
   140007e49:	mov    rax,QWORD PTR [rbx+0x60]
   140007e4d:	lea    rcx,[rdi+0x68]
   140007e51:	mov    QWORD PTR [rdi+0x60],rax
   140007e55:	lea    rdx,[rbx+0x68]
   140007e59:	and    QWORD PTR [rcx+0x10],0x0
   140007e5e:	mov    QWORD PTR [rcx+0x18],rsi
   140007e62:	mov    BYTE PTR [rcx],0x0
   140007e65:	call   0x14000be10
   140007e6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e6f:	mov    rax,rdi
   140007e72:	mov    rsi,QWORD PTR [rsp+0x38]
   140007e77:	add    rsp,0x20
   140007e7b:	pop    rdi
   140007e7c:	ret    
   140007e7d:	int3   
   140007e7e:	int3   
   140007e7f:	int3   
   140007e80:	mov    rax,rsp
   140007e83:	push   rdi
   140007e84:	sub    rsp,0x130
   140007e8b:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140007e94:	mov    QWORD PTR [rax+0x18],rsi
   140007e98:	mov    rax,QWORD PTR [rip+0x691b1]        # 0x140071050
   140007e9f:	xor    rax,rsp
   140007ea2:	mov    QWORD PTR [rsp+0x120],rax
   140007eaa:	mov    rdi,rcx
   140007ead:	mov    QWORD PTR [rsp+0x38],rcx
   140007eb2:	and    DWORD PTR [rsp+0x58],0x0
   140007eb7:	lea    rcx,[rsp+0x40]
   140007ebc:	call   0x140019a5c
   140007ec1:	nop
   140007ec2:	mov    esi,0x1
   140007ec7:	mov    edx,esi
   140007ec9:	lea    rcx,[rsp+0x40]
   140007ece:	call   0x140019c74
   140007ed3:	test   al,al
   140007ed5:	jne    0x140007eed
   140007ed7:	and    QWORD PTR [rdi],0x0
   140007edb:	lea    rcx,[rsp+0x40]
   140007ee0:	call   0x140019af4
   140007ee5:	mov    rax,rdi
   140007ee8:	jmp    0x140008047
   140007eed:	xorps  xmm0,xmm0
   140007ef0:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140007ef6:	and    QWORD PTR [rsp+0x30],0x0
   140007efc:	lea    rdx,[rsp+0x20]
   140007f01:	lea    rcx,[rsp+0x40]
   140007f06:	call   0x14001a9c0
   140007f0b:	test   al,al
   140007f0d:	jne    0x140007f3e
   140007f0f:	and    QWORD PTR [rdi],0x0
   140007f13:	mov    rcx,QWORD PTR [rsp+0x20]
   140007f18:	test   rcx,rcx
   140007f1b:	je     0x140007edb
   140007f1d:	mov    rdx,QWORD PTR [rsp+0x30]
   140007f22:	sub    rdx,rcx
   140007f25:	mov    r8,rsi
   140007f28:	call   0x140004804
   140007f2d:	xorps  xmm0,xmm0
   140007f30:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140007f36:	and    QWORD PTR [rsp+0x30],0x0
   140007f3c:	jmp    0x140007edb
   140007f3e:	mov    QWORD PTR [rsp+0x80],0xf
   140007f4a:	and    QWORD PTR [rsp+0x78],0x0
   140007f50:	mov    BYTE PTR [rsp+0x68],0x0
   140007f55:	mov    rdx,QWORD PTR [rsp+0x20]
   140007f5a:	mov    r8,QWORD PTR [rsp+0x28]
   140007f5f:	cmp    rdx,r8
   140007f62:	je     0x140007f72
   140007f64:	sub    r8,rdx
   140007f67:	lea    rcx,[rsp+0x68]
   140007f6c:	call   0x14000b994
   140007f71:	nop
   140007f72:	lea    rdx,[rsp+0x68]
   140007f77:	lea    rcx,[rsp+0x90]
   140007f7f:	call   0x140007484
   140007f84:	nop
   140007f85:	mov    rdx,rax
   140007f88:	mov    rcx,rdi
   140007f8b:	call   0x14000da48
   140007f90:	nop
   140007f91:	lea    rcx,[rsp+0x90]
   140007f99:	call   0x140007cf0
   140007f9e:	nop
   140007f9f:	mov    rdx,QWORD PTR [rsp+0x80]
   140007fa7:	cmp    rdx,0x10
   140007fab:	jb     0x140007fbd
   140007fad:	inc    rdx
   140007fb0:	mov    r8,rsi
   140007fb3:	mov    rcx,QWORD PTR [rsp+0x68]
   140007fb8:	call   0x140004804
   140007fbd:	mov    QWORD PTR [rsp+0x80],0xf
   140007fc9:	and    QWORD PTR [rsp+0x78],0x0
   140007fcf:	mov    BYTE PTR [rsp+0x68],0x0
   140007fd4:	mov    rcx,QWORD PTR [rsp+0x20]
   140007fd9:	test   rcx,rcx
   140007fdc:	je     0x140007ffd
   140007fde:	mov    rdx,QWORD PTR [rsp+0x30]
   140007fe3:	sub    rdx,rcx
   140007fe6:	mov    r8,rsi
   140007fe9:	call   0x140004804
   140007fee:	xorps  xmm0,xmm0
   140007ff1:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140007ff7:	and    QWORD PTR [rsp+0x30],0x0
   140007ffd:	lea    rcx,[rsp+0x40]
   140008002:	call   0x140019af4
   140008007:	mov    rax,rdi
   14000800a:	jmp    0x140008047
   14000800c:	mov    rcx,QWORD PTR [rsp+0x20]
   140008011:	test   rcx,rcx
   140008014:	je     0x140008038
   140008016:	mov    rdx,QWORD PTR [rsp+0x30]
   14000801b:	sub    rdx,rcx
   14000801e:	mov    r8d,0x1
   140008024:	call   0x140004804
   140008029:	xorps  xmm0,xmm0
   14000802c:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   140008032:	and    QWORD PTR [rsp+0x30],0x0
   140008038:	lea    rcx,[rsp+0x40]
   14000803d:	call   0x140019af4
   140008042:	mov    rax,QWORD PTR [rsp+0x38]
   140008047:	mov    rcx,QWORD PTR [rsp+0x120]
   14000804f:	xor    rcx,rsp
   140008052:	call   0x140025df0
   140008057:	mov    rsi,QWORD PTR [rsp+0x150]
   14000805f:	add    rsp,0x130
   140008066:	pop    rdi
   140008067:	ret    
   140008068:	mov    rax,rsp
   14000806b:	push   rbp
   14000806c:	push   rsi
   14000806d:	push   rdi
   14000806e:	push   r14
   140008070:	push   r15
   140008072:	lea    rbp,[rax-0x138]
   140008079:	sub    rsp,0x210
   140008080:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140008089:	mov    QWORD PTR [rax+0x18],rbx
   14000808d:	mov    rax,QWORD PTR [rip+0x68fbc]        # 0x140071050
   140008094:	xor    rax,rsp
   140008097:	mov    QWORD PTR [rbp+0x100],rax
   14000809e:	mov    rbx,rdx
   1400080a1:	mov    rdi,rcx
   1400080a4:	xor    esi,esi
   1400080a6:	mov    DWORD PTR [rsp+0x38],esi
   1400080aa:	lea    r14d,[rsi+0x1]
   1400080ae:	mov    r8d,r14d
   1400080b1:	lea    edx,[rsi+0x2]
   1400080b4:	lea    rcx,[rbp+0x10]
   1400080b8:	call   0x14000be9c
   1400080bd:	nop
   1400080be:	lea    rdx,[rip+0x5a343]        # 0x140062408
   1400080c5:	lea    rcx,[rbp+0x10]
   1400080c9:	call   0x140010488
   1400080ce:	mov    rdx,rbx
   1400080d1:	lea    rcx,[rbp+0x10]
   1400080d5:	call   0x1400106b0
   1400080da:	lea    rdx,[rsp+0x50]
   1400080df:	lea    rcx,[rbp+0x10]
   1400080e3:	call   0x14000a950
   1400080e8:	nop
   1400080e9:	lea    rdx,[rsp+0x50]
   1400080ee:	lea    ecx,[rsi+0x3]
   1400080f1:	call   0x14001a654
   1400080f6:	nop
   1400080f7:	xor    r8d,r8d
   1400080fa:	mov    dl,r14b
   1400080fd:	lea    rcx,[rsp+0x50]
   140008102:	call   0x14000b6b0
   140008107:	nop
   140008108:	lea    rcx,[rbp+0x98]
   14000810f:	call   0x14000a9dc
   140008114:	nop
   140008115:	lea    rax,[rip+0x437fc]        # 0x14004b918
   14000811c:	mov    QWORD PTR [rbp+0x98],rax
   140008123:	lea    rcx,[rbp+0x98]
   14000812a:	call   0x140027b0c
   14000812f:	nop
   140008130:	lea    rcx,[rbp-0x70]
   140008134:	call   0x14001bd30
   140008139:	nop
   14000813a:	lea    rax,[rbp-0x70]
   14000813e:	cmp    rax,rbx
   140008141:	je     0x140008156
   140008143:	or     r9,0xffffffffffffffff
   140008147:	xor    r8d,r8d
   14000814a:	mov    rdx,rbx
   14000814d:	lea    rcx,[rbp-0x70]
   140008151:	call   0x14000b850
   140008156:	mov    r8d,0x19
   14000815c:	lea    rdx,[rip+0x5a2cd]        # 0x140062430
   140008163:	lea    rcx,[rbp-0x50]
   140008167:	call   0x14000b730
   14000816c:	mov    DWORD PTR [rbp-0x30],r14d
   140008170:	mov    r15d,0x7
   140008176:	mov    QWORD PTR [rsp+0x68],r15
   14000817b:	mov    QWORD PTR [rsp+0x60],rsi
   140008180:	mov    WORD PTR [rsp+0x50],si
   140008185:	lea    r8d,[r15-0x2]
   140008189:	lea    rdx,[rip+0x5a2d8]        # 0x140062468
   140008190:	lea    rcx,[rsp+0x50]
   140008195:	call   0x14000b730
   14000819a:	nop
   14000819b:	mov    QWORD PTR [rbp-0x78],r15
   14000819f:	mov    QWORD PTR [rbp-0x80],rsi
   1400081a3:	mov    WORD PTR [rsp+0x70],si
   1400081a8:	lea    r8d,[r15+0x3]
   1400081ac:	lea    rdx,[rip+0x5a2c5]        # 0x140062478
   1400081b3:	lea    rcx,[rsp+0x70]
   1400081b8:	call   0x14000b730
   1400081bd:	nop
   1400081be:	lea    r8,[rsp+0x50]
   1400081c3:	lea    rdx,[rsp+0x70]
   1400081c8:	lea    rcx,[rbp-0x28]
   1400081cc:	call   0x14001b618
   1400081d1:	nop
   1400081d2:	xor    r8d,r8d
   1400081d5:	mov    dl,r14b
   1400081d8:	lea    rcx,[rsp+0x70]
   1400081dd:	call   0x14000b6b0
   1400081e2:	nop
   1400081e3:	xor    r8d,r8d
   1400081e6:	mov    dl,r14b
   1400081e9:	lea    rcx,[rsp+0x50]
   1400081ee:	call   0x14000b6b0
   1400081f3:	xor    r8d,r8d
   1400081f6:	lea    rdx,[rbp-0x70]
   1400081fa:	lea    rcx,[rsp+0x30]
   1400081ff:	call   0x14001d39c
   140008204:	nop
   140008205:	mov    r8d,r14d
   140008208:	lea    edx,[r15-0x5]
   14000820c:	lea    rcx,[rbp+0x10]
   140008210:	call   0x14000be9c
   140008215:	nop
   140008216:	mov    rbx,QWORD PTR [rsp+0x30]
   14000821b:	lea    rdx,[rip+0x5a26e]        # 0x140062490
   140008222:	lea    rcx,[rbp+0x10]
   140008226:	call   0x140010488
   14000822b:	mov    edx,DWORD PTR [rbx]
   14000822d:	lea    rcx,[rbp+0x10]
   140008231:	call   0x14000e4d0
   140008236:	lea    rdx,[rsp+0x50]
   14000823b:	lea    rcx,[rbp+0x10]
   14000823f:	call   0x14000a950
   140008244:	nop
   140008245:	lea    rdx,[rsp+0x50]
   14000824a:	lea    ecx,[r15-0x4]
   14000824e:	call   0x14001a654
   140008253:	nop
   140008254:	xor    r8d,r8d
   140008257:	mov    dl,r14b
   14000825a:	lea    rcx,[rsp+0x50]
   14000825f:	call   0x14000b6b0
   140008264:	nop
   140008265:	lea    rcx,[rbp+0x98]
   14000826c:	call   0x14000a9dc
   140008271:	nop
   140008272:	lea    rax,[rip+0x4369f]        # 0x14004b918
   140008279:	mov    QWORD PTR [rbp+0x98],rax
   140008280:	lea    rcx,[rbp+0x98]
   140008287:	call   0x140027b0c
   14000828c:	nop
   14000828d:	mov    rdx,QWORD PTR [rsp+0x30]
   140008292:	mov    eax,DWORD PTR [rdx]
   140008294:	sub    eax,0xc8
   140008299:	cmp    eax,0x64
   14000829c:	jb     0x1400082f4
   14000829e:	mov    QWORD PTR [rsp+0x68],r15
   1400082a3:	mov    QWORD PTR [rsp+0x60],rsi
   1400082a8:	mov    WORD PTR [rsp+0x50],si
   1400082ad:	lea    r8d,[r15+0x17]
   1400082b1:	lea    rdx,[rip+0x5a208]        # 0x1400624c0
   1400082b8:	lea    rcx,[rsp+0x50]
   1400082bd:	call   0x14000b730
   1400082c2:	nop
   1400082c3:	mov    DWORD PTR [rsp+0x20],r14d
   1400082c8:	mov    r9d,0x13a
   1400082ce:	lea    r8,[rip+0x59bab]        # 0x140061e80
   1400082d5:	lea    rdx,[rsp+0x50]
   1400082da:	lea    rcx,[rbp+0x10]
   1400082de:	call   0x140020734
   1400082e3:	lea    rdx,[rip+0x67c5e]        # 0x14006ff48
   1400082ea:	lea    rcx,[rbp+0x10]
   1400082ee:	call   0x14002ab88
   1400082f3:	nop
   1400082f4:	add    rdx,0x18
   1400082f8:	mov    rcx,rdi
   1400082fb:	call   0x14000a894
   140008300:	nop
   140008301:	mov    rbx,QWORD PTR [rsp+0x30]
   140008306:	test   rbx,rbx
   140008309:	je     0x140008321
   14000830b:	mov    rcx,rbx
   14000830e:	call   0x14000bff0
   140008313:	mov    edx,0x30
   140008318:	mov    rcx,rbx
   14000831b:	call   0x140026804
   140008320:	nop
   140008321:	mov    rcx,QWORD PTR [rbp-0x18]
   140008325:	test   rcx,rcx
   140008328:	je     0x140008345
   14000832a:	mov    rdx,QWORD PTR [rbp-0x8]
   14000832e:	sub    rdx,rcx
   140008331:	mov    r8,r14
   140008334:	call   0x140004804
   140008339:	mov    QWORD PTR [rbp-0x18],rsi
   14000833d:	xorps  xmm0,xmm0
   140008340:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   140008345:	mov    r8,QWORD PTR [rbp-0x28]
   140008349:	mov    r9,r8
   14000834c:	mov    r8,QWORD PTR [r8]
   14000834f:	lea    rdx,[rsp+0x48]
   140008354:	lea    rcx,[rbp-0x28]
   140008358:	call   0x14000c18c
   14000835d:	mov    r8d,0x60
   140008363:	mov    rdx,r14
   140008366:	mov    rcx,QWORD PTR [rbp-0x28]
   14000836a:	call   0x140004804
   14000836f:	xor    r8d,r8d
   140008372:	mov    dl,r14b
   140008375:	lea    rcx,[rbp-0x50]
   140008379:	call   0x14000b6b0
   14000837e:	xor    r8d,r8d
   140008381:	mov    dl,r14b
   140008384:	lea    rcx,[rbp-0x70]
   140008388:	call   0x14000b6b0
   14000838d:	mov    rax,rdi
   140008390:	mov    rcx,QWORD PTR [rbp+0x100]
   140008397:	xor    rcx,rsp
   14000839a:	call   0x140025df0
   14000839f:	mov    rbx,QWORD PTR [rsp+0x250]
   1400083a7:	add    rsp,0x210
   1400083ae:	pop    r15
   1400083b0:	pop    r14
   1400083b2:	pop    rdi
   1400083b3:	pop    rsi
   1400083b4:	pop    rbp
   1400083b5:	ret    
   1400083b6:	int3   
   1400083b7:	int3   
   1400083b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400083bd:	push   rdi
   1400083be:	sub    rsp,0x20
   1400083c2:	mov    rdi,rcx
   1400083c5:	xor    ebx,ebx
   1400083c7:	mov    rcx,QWORD PTR [rcx+0x58]
   1400083cb:	test   rcx,rcx
   1400083ce:	je     0x1400083ec
   1400083d0:	mov    rdx,QWORD PTR [rdi+0x68]
   1400083d4:	lea    r8d,[rbx+0x1]
   1400083d8:	sub    rdx,rcx
   1400083db:	call   0x140004804
   1400083e0:	mov    QWORD PTR [rdi+0x58],rbx
   1400083e4:	mov    QWORD PTR [rdi+0x60],rbx
   1400083e8:	mov    QWORD PTR [rdi+0x68],rbx
   1400083ec:	lea    rbx,[rdi+0x48]
   1400083f0:	mov    r8,QWORD PTR [rbx]
   1400083f3:	lea    rdx,[rsp+0x30]
   1400083f8:	mov    r9,r8
   1400083fb:	mov    rcx,rbx
   1400083fe:	mov    r8,QWORD PTR [r8]
   140008401:	call   0x14000c18c
   140008406:	mov    rcx,QWORD PTR [rbx]
   140008409:	mov    edx,0x1
   14000840e:	lea    r8d,[rdx+0x5f]
   140008412:	call   0x140004804
   140008417:	lea    rcx,[rdi+0x20]
   14000841b:	xor    r8d,r8d
   14000841e:	mov    dl,0x1
   140008420:	call   0x14000b6b0
   140008425:	xor    r8d,r8d
   140008428:	mov    dl,0x1
   14000842a:	mov    rcx,rdi
   14000842d:	mov    rbx,QWORD PTR [rsp+0x38]
   140008432:	add    rsp,0x20
   140008436:	pop    rdi
   140008437:	jmp    0x14000b6b0
   14000843c:	rex push rbx
   14000843e:	sub    rsp,0x20
   140008442:	mov    r8,QWORD PTR [rcx]
   140008445:	lea    rdx,[rsp+0x30]
   14000844a:	mov    r9,r8
   14000844d:	mov    rbx,rcx
   140008450:	mov    r8,QWORD PTR [r8]
   140008453:	call   0x14000c18c
   140008458:	mov    rcx,QWORD PTR [rbx]
   14000845b:	mov    edx,0x1
   140008460:	lea    r8d,[rdx+0x5f]
   140008464:	add    rsp,0x20
   140008468:	pop    rbx
   140008469:	jmp    0x140004804
   14000846e:	int3   
   14000846f:	int3   
   140008470:	rex push rbx
   140008472:	push   rsi
   140008473:	push   rdi
   140008474:	push   r12
   140008476:	push   r13
   140008478:	push   r14
   14000847a:	push   r15
   14000847c:	sub    rsp,0xa40
   140008483:	mov    QWORD PTR [rsp+0xe8],0xfffffffffffffffe
   14000848f:	mov    rax,QWORD PTR [rip+0x68bba]        # 0x140071050
   140008496:	xor    rax,rsp
   140008499:	mov    QWORD PTR [rsp+0xa30],rax
   1400084a1:	mov    r13,r9
   1400084a4:	mov    QWORD PTR [rsp+0x60],r9
   1400084a9:	mov    r14,r8
   1400084ac:	mov    rbx,rdx
   1400084af:	mov    r12,rcx
   1400084b2:	mov    QWORD PTR [rsp+0x38],rcx
   1400084b7:	mov    QWORD PTR [rsp+0x98],r8
   1400084bf:	mov    QWORD PTR [rsp+0x50],r9
   1400084c4:	lea    rcx,[rsp+0x208]
   1400084cc:	call   0x140024e3c
   1400084d1:	nop
   1400084d2:	lea    rdx,[rsp+0x208]
   1400084da:	lea    rcx,[rsp+0x320]
   1400084e2:	call   0x14002534c
   1400084e7:	nop
   1400084e8:	lea    rcx,[rsp+0x208]
   1400084f0:	call   0x14000a98c
   1400084f5:	lea    rcx,[rsp+0x320]
   1400084fd:	call   0x140025678
   140008502:	xor    esi,esi
   140008504:	test   al,al
   140008506:	je     0x140008515
   140008508:	lea    rcx,[rsp+0x320]
   140008510:	call   0x140025430
   140008515:	lea    rcx,[rsp+0x320]
   14000851d:	call   0x140025670
   140008522:	test   al,al
   140008524:	jne    0x1400085de
   14000852a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000852f:	jb     0x140008536
   140008531:	mov    rcx,QWORD PTR [rbx]
   140008534:	jmp    0x140008539
   140008536:	mov    rcx,rbx
   140008539:	xor    edx,edx
   14000853b:	call   QWORD PTR [rip+0x42b47]        # 0x14004b088
   140008541:	test   eax,eax
   140008543:	jne    0x1400085de
   140008549:	call   QWORD PTR [rip+0x42b91]        # 0x14004b0e0
   14000854f:	mov    ebx,eax
   140008551:	mov    QWORD PTR [rsp+0x200],0x7
   14000855d:	mov    QWORD PTR [rsp+0x1f8],rsi
   140008565:	mov    WORD PTR [rsp+0x1e8],si
   14000856d:	mov    r8d,0x16
   140008573:	lea    rdx,[rip+0x59f86]        # 0x140062500
   14000857a:	lea    rcx,[rsp+0x1e8]
   140008582:	call   0x14000b730
   140008587:	nop
   140008588:	movzx  r8d,bx
   14000858c:	or     r8d,0x80070000
   140008593:	test   ebx,ebx
   140008595:	cmovle r8d,ebx
   140008599:	mov    r14d,0x1
   14000859f:	mov    DWORD PTR [rsp+0x28],r14d
   1400085a4:	mov    QWORD PTR [rsp+0x20],0x151
   1400085ad:	lea    r9,[rip+0x598cc]        # 0x140061e80
   1400085b4:	lea    rdx,[rsp+0x1e8]
   1400085bc:	lea    rcx,[rsp+0x970]
   1400085c4:	call   0x14001ec04
   1400085c9:	lea    rdx,[rip+0x67838]        # 0x14006fe08
   1400085d0:	lea    rcx,[rsp+0x970]
   1400085d8:	call   0x14002ab88
   1400085dd:	nop
   1400085de:	lea    rcx,[rsp+0x328]
   1400085e6:	call   0x14000a98c
   1400085eb:	lea    r8,[rip+0x59f3e]        # 0x140062530
   1400085f2:	mov    rdx,rbx
   1400085f5:	lea    rcx,[rsp+0x268]
   1400085fd:	call   0x14000d720
   140008602:	nop
   140008603:	lea    r8,[rip+0x59f46]        # 0x140062550
   14000860a:	mov    rdx,rbx
   14000860d:	lea    rcx,[rsp+0x248]
   140008615:	call   0x14000d720
   14000861a:	nop
   14000861b:	lea    rdx,[rsp+0x268]
   140008623:	lea    rcx,[rsp+0x40]
   140008628:	call   0x140007e80
   14000862d:	nop
   14000862e:	mov    rbx,QWORD PTR [rsp+0x40]
   140008633:	test   rbx,rbx
   140008636:	je     0x1400086ce
   14000863c:	lea    rcx,[rbx+0x68]
   140008640:	cmp    QWORD PTR [r12+0x18],0x10
   140008646:	jb     0x14000864e
   140008648:	mov    rdx,QWORD PTR [r12]
   14000864c:	jmp    0x140008651
   14000864e:	mov    rdx,r12
   140008651:	lea    r15,[rcx+0x10]
   140008655:	cmp    QWORD PTR [rcx+0x18],0x10
   14000865a:	jb     0x14000865f
   14000865c:	mov    rcx,QWORD PTR [rcx]
   14000865f:	mov    rdi,QWORD PTR [r12+0x10]
   140008664:	mov    r8,rdi
   140008667:	cmp    QWORD PTR [r15],rdi
   14000866a:	cmovb  r8,QWORD PTR [r15]
   14000866e:	test   r8,r8
   140008671:	je     0x14000867c
   140008673:	call   0x14002aac0
   140008678:	test   eax,eax
   14000867a:	jne    0x1400086ce
   14000867c:	cmp    QWORD PTR [r15],rdi
   14000867f:	jb     0x1400086ce
   140008681:	ja     0x1400086ce
   140008683:	mov    eax,esi
   140008685:	test   eax,eax
   140008687:	jne    0x1400086ce
   140008689:	mov    rcx,QWORD PTR [r13+0x38]
   14000868d:	test   rcx,rcx
   140008690:	jne    0x140008697
   140008692:	call   0x140027a2c
   140008697:	mov    rax,QWORD PTR [rcx]
   14000869a:	lea    rdx,[rsp+0x248]
   1400086a2:	call   QWORD PTR [rax+0x10]
   1400086a5:	nop
   1400086a6:	jmp    0x1400087c5
   1400086ab:	xor    esi,esi
   1400086ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400086b2:	mov    r12,QWORD PTR [rsp+0x38]
   1400086b7:	mov    r14,QWORD PTR [rsp+0x98]
   1400086bf:	mov    rax,QWORD PTR [rsp+0x50]
   1400086c4:	mov    QWORD PTR [rsp+0x60],rax
   1400086c9:	jmp    0x1400087c5
   1400086ce:	mov    rdi,rbx
   1400086d1:	mov    rbx,rsi
   1400086d4:	mov    QWORD PTR [rsp+0x40],rbx
   1400086d9:	test   rdi,rdi
   1400086dc:	je     0x1400086f3
   1400086de:	mov    rcx,rdi
   1400086e1:	call   0x140007cf0
   1400086e6:	mov    edx,0x88
   1400086eb:	mov    rcx,rdi
   1400086ee:	call   0x140026804
   1400086f3:	lea    rdx,[rsp+0x268]
   1400086fb:	lea    rcx,[rsp+0x208]
   140008703:	call   0x140024e3c
   140008708:	nop
   140008709:	lea    rcx,[rsp+0x208]
   140008711:	call   0x140024a24
   140008716:	mov    dil,al
   140008719:	lea    rcx,[rsp+0x208]
   140008721:	call   0x14000a98c
   140008726:	test   dil,dil
   140008729:	je     0x14000875c
   14000872b:	lea    rdx,[rsp+0x268]
   140008733:	lea    rcx,[rsp+0x208]
   14000873b:	call   0x140024e3c
   140008740:	nop
   140008741:	lea    rcx,[rsp+0x208]
   140008749:	call   0x140024778
   14000874e:	nop
   14000874f:	lea    rcx,[rsp+0x208]
   140008757:	call   0x14000a98c
   14000875c:	lea    rdx,[rsp+0x248]
   140008764:	lea    rcx,[rsp+0x208]
   14000876c:	call   0x140024e3c
   140008771:	nop
   140008772:	lea    rcx,[rsp+0x208]
   14000877a:	call   0x140024a24
   14000877f:	mov    dil,al
   140008782:	lea    rcx,[rsp+0x208]
   14000878a:	call   0x14000a98c
   14000878f:	test   dil,dil
   140008792:	je     0x1400087c5
   140008794:	lea    rdx,[rsp+0x248]
   14000879c:	lea    rcx,[rsp+0x208]
   1400087a4:	call   0x140024e3c
   1400087a9:	nop
   1400087aa:	lea    rcx,[rsp+0x208]
   1400087b2:	call   0x140024778
   1400087b7:	nop
   1400087b8:	lea    rcx,[rsp+0x208]
   1400087c0:	call   0x14000a98c
   1400087c5:	mov    rdx,r14
   1400087c8:	lea    rcx,[rsp+0xa0]
   1400087d0:	call   0x140008068
   1400087d5:	nop
   1400087d6:	mov    r13d,0xf
   1400087dc:	mov    QWORD PTR [rsp+0x240],r13
   1400087e4:	mov    QWORD PTR [rsp+0x238],rsi
   1400087ec:	mov    BYTE PTR [rsp+0x228],sil
   1400087f4:	mov    r15,QWORD PTR [rsp+0xa0]
   1400087fc:	mov    r8,QWORD PTR [rsp+0xa8]
   140008804:	cmp    r15,r8
   140008807:	je     0x14000881d
   140008809:	sub    r8,r15
   14000880c:	mov    rdx,r15
   14000880f:	lea    rcx,[rsp+0x228]
   140008817:	call   0x14000b994
   14000881c:	nop
   14000881d:	lea    rdx,[rsp+0x228]
   140008825:	lea    rcx,[rsp+0x1e8]
   14000882d:	call   0x140018930
   140008832:	mov    rdi,rax
   140008835:	mov    r14d,0x1
   14000883b:	mov    r8d,r14d
   14000883e:	lea    edx,[r14+0x1]
   140008842:	lea    rcx,[rsp+0x100]
   14000884a:	call   0x14000be9c
   14000884f:	nop
   140008850:	lea    rdx,[rip+0x59d51]        # 0x1400625a8
   140008857:	lea    rcx,[rsp+0x100]
   14000885f:	call   0x140010488
   140008864:	mov    rdx,rdi
   140008867:	lea    rcx,[rsp+0x100]
   14000886f:	call   0x1400106b0
   140008874:	lea    rdx,[rsp+0x208]
   14000887c:	lea    rcx,[rsp+0x100]
   140008884:	call   0x14000a950
   140008889:	nop
   14000888a:	lea    rdx,[rsp+0x208]
   140008892:	lea    ecx,[r14+0x2]
   140008896:	call   0x14001a654
   14000889b:	nop
   14000889c:	xor    r8d,r8d
   14000889f:	mov    dl,r14b
   1400088a2:	lea    rcx,[rsp+0x208]
   1400088aa:	call   0x14000b6b0
   1400088af:	nop
   1400088b0:	lea    rcx,[rsp+0x188]
   1400088b8:	call   0x14000a9dc
   1400088bd:	nop
   1400088be:	lea    rax,[rip+0x43053]        # 0x14004b918
   1400088c5:	mov    QWORD PTR [rsp+0x188],rax
   1400088cd:	lea    rcx,[rsp+0x188]
   1400088d5:	call   0x140027b0c
   1400088da:	nop
   1400088db:	xor    r8d,r8d
   1400088de:	mov    dl,r14b
   1400088e1:	lea    rcx,[rsp+0x1e8]
   1400088e9:	call   0x14000b6b0
   1400088ee:	lea    rdx,[rsp+0x228]
   1400088f6:	lea    rcx,[rsp+0x290]
   1400088fe:	call   0x140007484
   140008903:	nop
   140008904:	lea    rdx,[rip+0x59ccd]        # 0x1400625d8
   14000890b:	lea    ecx,[r14+0x2]
   14000890f:	call   0x14001a664
   140008914:	lea    rax,[rsp+0x2f8]
   14000891c:	cmp    rax,r12
   14000891f:	je     0x140008938
   140008921:	or     r9,0xffffffffffffffff
   140008925:	xor    r8d,r8d
   140008928:	mov    rdx,r12
   14000892b:	lea    rcx,[rsp+0x2f8]
   140008933:	call   0x14000ba94
   140008938:	test   rbx,rbx
   14000893b:	je     0x140008add
   140008941:	lea    rdx,[rsp+0x290]
   140008949:	cmp    QWORD PTR [rsp+0x2a8],0x10
   140008952:	cmovae rdx,QWORD PTR [rsp+0x290]
   14000895b:	cmp    QWORD PTR [rbx+0x18],0x10
   140008960:	jb     0x140008967
   140008962:	mov    rcx,QWORD PTR [rbx]
   140008965:	jmp    0x14000896a
   140008967:	mov    rcx,rbx
   14000896a:	mov    rdi,QWORD PTR [rbx+0x10]
   14000896e:	mov    r12,QWORD PTR [rsp+0x2a0]
   140008976:	mov    r8,r12
   140008979:	cmp    rdi,r12
   14000897c:	cmovb  r8,rdi
   140008980:	test   r8,r8
   140008983:	je     0x140008992
   140008985:	call   0x14002aac0
   14000898a:	test   eax,eax
   14000898c:	jne    0x140008add
   140008992:	cmp    rdi,r12
   140008995:	jb     0x140008add
   14000899b:	ja     0x140008add
   1400089a1:	mov    eax,esi
   1400089a3:	test   eax,eax
   1400089a5:	jne    0x140008add
   1400089ab:	lea    rdx,[rsp+0x290]
   1400089b3:	lea    rcx,[rsp+0x1e8]
   1400089bb:	call   0x140018930
   1400089c0:	mov    rdi,rax
   1400089c3:	mov    r8d,r14d
   1400089c6:	lea    edx,[rsi+0x2]
   1400089c9:	lea    rcx,[rsp+0x100]
   1400089d1:	call   0x14000be9c
   1400089d6:	nop
   1400089d7:	lea    rdx,[rip+0x59c22]        # 0x140062600
   1400089de:	lea    rcx,[rsp+0x100]
   1400089e6:	call   0x140010488
   1400089eb:	mov    rdx,rdi
   1400089ee:	lea    rcx,[rsp+0x100]
   1400089f6:	call   0x1400106b0
   1400089fb:	lea    rdx,[rsp+0x208]
   140008a03:	lea    rcx,[rsp+0x100]
   140008a0b:	call   0x14000a950
   140008a10:	nop
   140008a11:	lea    rdx,[rsp+0x208]
   140008a19:	lea    ecx,[rsi+0x3]
   140008a1c:	call   0x14001a654
   140008a21:	nop
   140008a22:	xor    r8d,r8d
   140008a25:	mov    dl,r14b
   140008a28:	lea    rcx,[rsp+0x208]
   140008a30:	call   0x14000b6b0
   140008a35:	nop
   140008a36:	lea    rcx,[rsp+0x188]
   140008a3e:	call   0x14000a9dc
   140008a43:	nop
   140008a44:	lea    rax,[rip+0x42ecd]        # 0x14004b918
   140008a4b:	mov    QWORD PTR [rsp+0x188],rax
   140008a53:	lea    rcx,[rsp+0x188]
   140008a5b:	call   0x140027b0c
   140008a60:	nop
   140008a61:	xor    r8d,r8d
   140008a64:	mov    dl,r14b
   140008a67:	lea    rcx,[rsp+0x1e8]
   140008a6f:	call   0x14000b6b0
   140008a74:	nop
   140008a75:	lea    rcx,[rsp+0x290]
   140008a7d:	call   0x140007cf0
   140008a82:	nop
   140008a83:	mov    rdx,QWORD PTR [rsp+0x240]
   140008a8b:	cmp    rdx,0x10
   140008a8f:	jb     0x140008aa4
   140008a91:	inc    rdx
   140008a94:	mov    r8,r14
   140008a97:	mov    rcx,QWORD PTR [rsp+0x228]
   140008a9f:	call   0x140004804
   140008aa4:	mov    QWORD PTR [rsp+0x240],r13
   140008aac:	mov    QWORD PTR [rsp+0x238],rsi
   140008ab4:	mov    BYTE PTR [rsp+0x228],sil
   140008abc:	test   r15,r15
   140008abf:	je     0x140008ad8
   140008ac1:	mov    rdx,QWORD PTR [rsp+0xb0]
   140008ac9:	sub    rdx,r15
   140008acc:	mov    r8,r14
   140008acf:	mov    rcx,r15
   140008ad2:	call   0x140004804
   140008ad7:	nop
   140008ad8:	jmp    0x1400091df
   140008add:	lea    rdx,[rsp+0x2b0]
   140008ae5:	lea    rcx,[rsp+0x208]
   140008aed:	call   0x140018930
   140008af2:	nop
   140008af3:	mov    rdx,rax
   140008af6:	lea    rcx,[rsp+0x80]
   140008afe:	call   0x140008068
   140008b03:	nop
   140008b04:	xor    r8d,r8d
   140008b07:	mov    dl,r14b
   140008b0a:	lea    rcx,[rsp+0x208]
   140008b12:	call   0x14000b6b0
   140008b17:	lea    rdx,[rip+0x59b4a]        # 0x140062668
   140008b1e:	mov    ecx,0x3
   140008b23:	call   0x14001a664
   140008b28:	mov    rax,QWORD PTR [rsp+0x88]
   140008b30:	sub    rax,QWORD PTR [rsp+0x80]
   140008b38:	cmp    rax,QWORD PTR [rsp+0x2f0]
   140008b40:	je     0x140008bb5
   140008b42:	mov    QWORD PTR [rsp+0x200],0x7
   140008b4e:	mov    QWORD PTR [rsp+0x1f8],rsi
   140008b56:	mov    WORD PTR [rsp+0x1e8],si
   140008b5e:	mov    r8d,0x2b
   140008b64:	lea    rdx,[rip+0x59b35]        # 0x1400626a0
   140008b6b:	lea    rcx,[rsp+0x1e8]
   140008b73:	call   0x14000b730
   140008b78:	nop
   140008b79:	mov    DWORD PTR [rsp+0x20],r14d
   140008b7e:	mov    r9d,0x187
   140008b84:	lea    r8,[rip+0x592f5]        # 0x140061e80
   140008b8b:	lea    rdx,[rsp+0x1e8]
   140008b93:	lea    rcx,[rsp+0x370]
   140008b9b:	call   0x140020734
   140008ba0:	lea    rdx,[rip+0x673a1]        # 0x14006ff48
   140008ba7:	lea    rcx,[rsp+0x370]
   140008baf:	call   0x14002ab88
   140008bb4:	nop
   140008bb5:	xor    edx,edx
   140008bb7:	lea    rcx,[rsp+0x38]
   140008bbc:	call   0x14002125c
   140008bc1:	nop
   140008bc2:	lea    rdx,[rsp+0x80]
   140008bca:	lea    rcx,[rsp+0x38]
   140008bcf:	call   0x140022a30
   140008bd4:	test   al,al
   140008bd6:	jne    0x140008c4b
   140008bd8:	mov    QWORD PTR [rsp+0x200],0x7
   140008be4:	mov    QWORD PTR [rsp+0x1f8],rsi
   140008bec:	mov    WORD PTR [rsp+0x1e8],si
   140008bf4:	mov    r8d,0x32
   140008bfa:	lea    rdx,[rip+0x59aff]        # 0x140062700
   140008c01:	lea    rcx,[rsp+0x1e8]
   140008c09:	call   0x14000b730
   140008c0e:	nop
   140008c0f:	mov    DWORD PTR [rsp+0x20],r14d
   140008c14:	mov    r9d,0x18e
   140008c1a:	lea    r8,[rip+0x5925f]        # 0x140061e80
   140008c21:	lea    rdx,[rsp+0x1e8]
   140008c29:	lea    rcx,[rsp+0x430]
   140008c31:	call   0x140020734
   140008c36:	lea    rdx,[rip+0x6730b]        # 0x14006ff48
   140008c3d:	lea    rcx,[rsp+0x430]
   140008c45:	call   0x14002ab88
   140008c4a:	nop
   140008c4b:	lea    rdx,[rsp+0x208]
   140008c53:	lea    rcx,[rsp+0x38]
   140008c58:	call   0x140024004
   140008c5d:	lea    rdx,[rsp+0x2d0]
   140008c65:	cmp    QWORD PTR [rsp+0x2e8],0x10
   140008c6e:	cmovae rdx,QWORD PTR [rsp+0x2d0]
   140008c77:	lea    rcx,[rax+0x10]
   140008c7b:	mov    QWORD PTR [rsp+0x50],rcx
   140008c80:	cmp    QWORD PTR [rax+0x18],0x10
   140008c85:	jb     0x140008c8a
   140008c87:	mov    rax,QWORD PTR [rax]
   140008c8a:	mov    r12,QWORD PTR [rsp+0x2e0]
   140008c92:	mov    r8,r12
   140008c95:	cmp    QWORD PTR [rcx],r12
   140008c98:	cmovb  r8,QWORD PTR [rcx]
   140008c9c:	test   r8,r8
   140008c9f:	je     0x140008cb4
   140008ca1:	mov    rcx,rax
   140008ca4:	call   0x14002aac0
   140008ca9:	mov    edi,eax
   140008cab:	test   eax,eax
   140008cad:	jne    0x140008cc7
   140008caf:	mov    rcx,QWORD PTR [rsp+0x50]
   140008cb4:	cmp    QWORD PTR [rcx],r12
   140008cb7:	jae    0x140008cbe
   140008cb9:	or     edi,0xffffffff
   140008cbc:	jmp    0x140008cc7
   140008cbe:	mov    edi,esi
   140008cc0:	cmp    QWORD PTR [rcx],r12
   140008cc3:	seta   dil
   140008cc7:	mov    rdx,QWORD PTR [rsp+0x220]
   140008ccf:	cmp    rdx,0x10
   140008cd3:	jb     0x140008ce8
   140008cd5:	inc    rdx
   140008cd8:	mov    r8,r14
   140008cdb:	mov    rcx,QWORD PTR [rsp+0x208]
   140008ce3:	call   0x140004804
   140008ce8:	test   edi,edi
   140008cea:	je     0x140008d5f
   140008cec:	mov    QWORD PTR [rsp+0x200],0x7
   140008cf8:	mov    QWORD PTR [rsp+0x1f8],rsi
   140008d00:	mov    WORD PTR [rsp+0x1e8],si
   140008d08:	mov    r8d,0x2f
   140008d0e:	lea    rdx,[rip+0x59a5b]        # 0x140062770
   140008d15:	lea    rcx,[rsp+0x1e8]
   140008d1d:	call   0x14000b730
   140008d22:	nop
   140008d23:	mov    DWORD PTR [rsp+0x20],r14d
   140008d28:	mov    r9d,0x193
   140008d2e:	lea    r8,[rip+0x5914b]        # 0x140061e80
   140008d35:	lea    rdx,[rsp+0x1e8]
   140008d3d:	lea    rcx,[rsp+0x4f0]
   140008d45:	call   0x140020734
   140008d4a:	lea    rdx,[rip+0x671f7]        # 0x14006ff48
   140008d51:	lea    rcx,[rsp+0x4f0]
   140008d59:	call   0x14002ab88
   140008d5e:	nop
   140008d5f:	lea    rcx,[rsp+0x38]
   140008d64:	call   0x14002160c
   140008d69:	xorps  xmm0,xmm0
   140008d6c:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   140008d72:	mov    QWORD PTR [rsp+0x78],rsi
   140008d77:	lea    rdx,[rsp+0x68]
   140008d7c:	lea    rcx,[rsp+0x80]
   140008d84:	call   0x1400201e4
   140008d89:	test   al,al
   140008d8b:	jne    0x140008e00
   140008d8d:	mov    QWORD PTR [rsp+0x200],0x7
   140008d99:	mov    QWORD PTR [rsp+0x1f8],rsi
   140008da1:	mov    WORD PTR [rsp+0x1e8],si
   140008da9:	mov    r8d,0x2c
   140008daf:	lea    rdx,[rip+0x59a1a]        # 0x1400627d0
   140008db6:	lea    rcx,[rsp+0x1e8]
   140008dbe:	call   0x14000b730
   140008dc3:	nop
   140008dc4:	mov    DWORD PTR [rsp+0x20],r14d
   140008dc9:	mov    r9d,0x19a
   140008dcf:	lea    r8,[rip+0x590aa]        # 0x140061e80
   140008dd6:	lea    rdx,[rsp+0x1e8]
   140008dde:	lea    rcx,[rsp+0x5b0]
   140008de6:	call   0x140020734
   140008deb:	lea    rdx,[rip+0x67156]        # 0x14006ff48
   140008df2:	lea    rcx,[rsp+0x5b0]
   140008dfa:	call   0x14002ab88
   140008dff:	nop
   140008e00:	lea    rdx,[rsp+0x268]
   140008e08:	lea    rcx,[rsp+0xd0]
   140008e10:	call   0x140019a5c
   140008e15:	nop
   140008e16:	mov    edi,0xa
   140008e1b:	mov    edx,edi
   140008e1d:	lea    rcx,[rsp+0xd0]
   140008e25:	call   0x140019c74
   140008e2a:	test   al,al
   140008e2c:	jne    0x140008e9f
   140008e2e:	mov    QWORD PTR [rsp+0x200],0x7
   140008e3a:	mov    QWORD PTR [rsp+0x1f8],rsi
   140008e42:	mov    WORD PTR [rsp+0x1e8],si
   140008e4a:	lea    r8d,[rdi+0x1c]
   140008e4e:	lea    rdx,[rip+0x599db]        # 0x140062830
   140008e55:	lea    rcx,[rsp+0x1e8]
   140008e5d:	call   0x14000b730
   140008e62:	nop
   140008e63:	mov    DWORD PTR [rsp+0x20],r14d
   140008e68:	mov    r9d,0x1a0
   140008e6e:	lea    r8,[rip+0x5900b]        # 0x140061e80
   140008e75:	lea    rdx,[rsp+0x1e8]
   140008e7d:	lea    rcx,[rsp+0x670]
   140008e85:	call   0x140020734
   140008e8a:	lea    rdx,[rip+0x670b7]        # 0x14006ff48
   140008e91:	lea    rcx,[rsp+0x670]
   140008e99:	call   0x14002ab88
   140008e9e:	nop
   140008e9f:	lea    rdx,[rsp+0x248]
   140008ea7:	lea    rcx,[rsp+0xb8]
   140008eaf:	call   0x140019a5c
   140008eb4:	nop
   140008eb5:	mov    edx,edi
   140008eb7:	lea    rcx,[rsp+0xb8]
   140008ebf:	call   0x140019c74
   140008ec4:	lea    rcx,[rsp+0x1e8]
   140008ecc:	test   al,al
   140008ece:	jne    0x140008f3b
   140008ed0:	mov    QWORD PTR [rsp+0x200],0x7
   140008edc:	mov    QWORD PTR [rsp+0x1f8],rsi
   140008ee4:	mov    WORD PTR [rsp+0x1e8],si
   140008eec:	mov    r8d,0x2c
   140008ef2:	lea    rdx,[rip+0x59987]        # 0x140062880
   140008ef9:	call   0x14000b730
   140008efe:	nop
   140008eff:	mov    DWORD PTR [rsp+0x20],r14d
   140008f04:	mov    r9d,0x1a5
   140008f0a:	lea    r8,[rip+0x58f6f]        # 0x140061e80
   140008f11:	lea    rdx,[rsp+0x1e8]
   140008f19:	lea    rcx,[rsp+0x730]
   140008f21:	call   0x140020734
   140008f26:	lea    rdx,[rip+0x6701b]        # 0x14006ff48
   140008f2d:	lea    rcx,[rsp+0x730]
   140008f35:	call   0x14002ab88
   140008f3a:	nop
   140008f3b:	mov    BYTE PTR [rsp+0x30],sil
   140008f40:	lea    rdx,[rsp+0x290]
   140008f48:	call   0x14000718c
   140008f4d:	nop
   140008f4e:	lea    rdx,[rsp+0x1e8]
   140008f56:	cmp    QWORD PTR [rsp+0x200],0x10
   140008f5f:	cmovae rdx,QWORD PTR [rsp+0x1e8]
   140008f68:	lea    r9,[rsp+0x30]
   140008f6d:	mov    r8,QWORD PTR [rsp+0x1f8]
   140008f75:	lea    rcx,[rsp+0xd0]
   140008f7d:	call   0x14001aad4
   140008f82:	cmp    BYTE PTR [rsp+0x30],sil
   140008f87:	je     0x140008ffc
   140008f89:	mov    QWORD PTR [rsp+0x220],0x7
   140008f95:	mov    QWORD PTR [rsp+0x218],rsi
   140008f9d:	mov    WORD PTR [rsp+0x208],si
   140008fa5:	mov    r8d,0x1e
   140008fab:	lea    rdx,[rip+0x5992e]        # 0x1400628e0
   140008fb2:	lea    rcx,[rsp+0x208]
   140008fba:	call   0x14000b730
   140008fbf:	nop
   140008fc0:	mov    DWORD PTR [rsp+0x20],r14d
   140008fc5:	mov    r9d,0x1ae
   140008fcb:	lea    r8,[rip+0x58eae]        # 0x140061e80
   140008fd2:	lea    rdx,[rsp+0x208]
   140008fda:	lea    rcx,[rsp+0x7f0]
   140008fe2:	call   0x140020734
   140008fe7:	lea    rdx,[rip+0x66f5a]        # 0x14006ff48
   140008fee:	lea    rcx,[rsp+0x7f0]
   140008ff6:	call   0x14002ab88
   140008ffb:	nop
   140008ffc:	mov    rdx,QWORD PTR [rsp+0x200]
   140009004:	cmp    rdx,0x10
   140009008:	jb     0x14000901d
   14000900a:	inc    rdx
   14000900d:	mov    r8,r14
   140009010:	mov    rcx,QWORD PTR [rsp+0x1e8]
   140009018:	call   0x140004804
   14000901d:	mov    r8,QWORD PTR [rsp+0x70]
   140009022:	mov    rdx,QWORD PTR [rsp+0x68]
   140009027:	sub    r8,rdx
   14000902a:	lea    r9,[rsp+0x30]
   14000902f:	lea    rcx,[rsp+0xb8]
   140009037:	call   0x14001aad4
   14000903c:	cmp    BYTE PTR [rsp+0x30],sil
   140009041:	je     0x1400090b6
   140009043:	mov    QWORD PTR [rsp+0x220],0x7
   14000904f:	mov    QWORD PTR [rsp+0x218],rsi
   140009057:	mov    WORD PTR [rsp+0x208],si
   14000905f:	mov    r8d,0x24
   140009065:	lea    rdx,[rip+0x598b4]        # 0x140062920
   14000906c:	lea    rcx,[rsp+0x208]
   140009074:	call   0x14000b730
   140009079:	nop
   14000907a:	mov    DWORD PTR [rsp+0x20],r14d
   14000907f:	mov    r9d,0x1b4
   140009085:	lea    r8,[rip+0x58df4]        # 0x140061e80
   14000908c:	lea    rdx,[rsp+0x208]
   140009094:	lea    rcx,[rsp+0x8b0]
   14000909c:	call   0x140020734
   1400090a1:	lea    rdx,[rip+0x66ea0]        # 0x14006ff48
   1400090a8:	lea    rcx,[rsp+0x8b0]
   1400090b0:	call   0x14002ab88
   1400090b5:	nop
   1400090b6:	lea    rcx,[rsp+0xb8]
   1400090be:	call   0x140019be4
   1400090c3:	nop
   1400090c4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400090c9:	mov    rcx,QWORD PTR [rcx+0x38]
   1400090cd:	test   rcx,rcx
   1400090d0:	jne    0x1400090d7
   1400090d2:	call   0x140027a2c
   1400090d7:	mov    rax,QWORD PTR [rcx]
   1400090da:	lea    rdx,[rsp+0x248]
   1400090e2:	call   QWORD PTR [rax+0x10]
   1400090e5:	nop
   1400090e6:	jmp    0x1400090ff
   1400090e8:	xor    esi,esi
   1400090ea:	lea    r14d,[rsi+0x1]
   1400090ee:	lea    r13d,[rsi+0xf]
   1400090f2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400090f7:	mov    r15,QWORD PTR [rsp+0xa0]
   1400090ff:	lea    rcx,[rsp+0xb8]
   140009107:	call   0x140019af4
   14000910c:	nop
   14000910d:	lea    rcx,[rsp+0xd0]
   140009115:	call   0x140019af4
   14000911a:	nop
   14000911b:	mov    rcx,QWORD PTR [rsp+0x68]
   140009120:	test   rcx,rcx
   140009123:	je     0x140009143
   140009125:	mov    rdx,QWORD PTR [rsp+0x78]
   14000912a:	sub    rdx,rcx
   14000912d:	mov    r8,r14
   140009130:	call   0x140004804
   140009135:	xorps  xmm0,xmm0
   140009138:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   14000913e:	mov    QWORD PTR [rsp+0x78],rsi
   140009143:	mov    rcx,QWORD PTR [rsp+0x80]
   14000914b:	test   rcx,rcx
   14000914e:	je     0x140009177
   140009150:	mov    rdx,QWORD PTR [rsp+0x90]
   140009158:	sub    rdx,rcx
   14000915b:	mov    r8,r14
   14000915e:	call   0x140004804
   140009163:	xorps  xmm0,xmm0
   140009166:	movdqu XMMWORD PTR [rsp+0x80],xmm0
   14000916f:	mov    QWORD PTR [rsp+0x90],rsi
   140009177:	lea    rcx,[rsp+0x290]
   14000917f:	call   0x140007cf0
   140009184:	nop
   140009185:	mov    rdx,QWORD PTR [rsp+0x240]
   14000918d:	cmp    rdx,0x10
   140009191:	jb     0x1400091a6
   140009193:	inc    rdx
   140009196:	mov    r8,r14
   140009199:	mov    rcx,QWORD PTR [rsp+0x228]
   1400091a1:	call   0x140004804
   1400091a6:	mov    QWORD PTR [rsp+0x240],r13
   1400091ae:	mov    QWORD PTR [rsp+0x238],rsi
   1400091b6:	mov    BYTE PTR [rsp+0x228],sil
   1400091be:	test   r15,r15
   1400091c1:	je     0x1400091da
   1400091c3:	mov    rdx,QWORD PTR [rsp+0xb0]
   1400091cb:	sub    rdx,r15
   1400091ce:	mov    r8,r14
   1400091d1:	mov    rcx,r15
   1400091d4:	call   0x140004804
   1400091d9:	nop
   1400091da:	test   rbx,rbx
   1400091dd:	je     0x1400091f5
   1400091df:	mov    rcx,rbx
   1400091e2:	call   0x140007cf0
   1400091e7:	mov    edx,0x88
   1400091ec:	mov    rcx,rbx
   1400091ef:	call   0x140026804
   1400091f4:	nop
   1400091f5:	xor    r8d,r8d
   1400091f8:	mov    dl,r14b
   1400091fb:	lea    rcx,[rsp+0x248]
   140009203:	call   0x14000b6b0
   140009208:	nop
   140009209:	xor    r8d,r8d
   14000920c:	mov    dl,r14b
   14000920f:	lea    rcx,[rsp+0x268]
   140009217:	call   0x14000b6b0
   14000921c:	mov    rcx,QWORD PTR [rsp+0xa30]
   140009224:	xor    rcx,rsp
   140009227:	call   0x140025df0
   14000922c:	add    rsp,0xa40
   140009233:	pop    r15
   140009235:	pop    r14
   140009237:	pop    r13
   140009239:	pop    r12
   14000923b:	pop    rdi
   14000923c:	pop    rsi
   14000923d:	pop    rbx
   14000923e:	ret    
   14000923f:	int3   
   140009240:	mov    rax,rsp
   140009243:	push   rbp
   140009244:	lea    rbp,[rax-0x298]
   14000924b:	sub    rsp,0x390
   140009252:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000925b:	mov    QWORD PTR [rax+0x10],rbx
   14000925f:	mov    QWORD PTR [rax+0x18],rsi
   140009263:	mov    QWORD PTR [rax+0x20],rdi
   140009267:	mov    rax,QWORD PTR [rip+0x67de2]        # 0x140071050
   14000926e:	xor    rax,rsp
   140009271:	mov    QWORD PTR [rbp+0x280],rax
   140009278:	mov    rbx,rcx
   14000927b:	mov    esi,0x1
   140009280:	mov    r8d,esi
   140009283:	lea    edx,[rsi+0x1]
   140009286:	lea    rcx,[rbp-0x80]
   14000928a:	call   0x14000be9c
   14000928f:	nop
   140009290:	lea    rdx,[rip+0x596d9]        # 0x140062970
   140009297:	lea    rcx,[rbp-0x80]
   14000929b:	call   0x140010488
   1400092a0:	mov    rdx,rbx
   1400092a3:	lea    rcx,[rbp-0x80]
   1400092a7:	call   0x1400106b0
   1400092ac:	lea    rdx,[rsp+0x38]
   1400092b1:	lea    rcx,[rbp-0x80]
   1400092b5:	call   0x14000a950
   1400092ba:	nop
   1400092bb:	lea    rdx,[rsp+0x38]
   1400092c0:	lea    ecx,[rsi+0x2]
   1400092c3:	call   0x14001a654
   1400092c8:	nop
   1400092c9:	xor    r8d,r8d
   1400092cc:	mov    dl,sil
   1400092cf:	lea    rcx,[rsp+0x38]
   1400092d4:	call   0x14000b6b0
   1400092d9:	nop
   1400092da:	lea    rcx,[rbp+0x8]
   1400092de:	call   0x14000a9dc
   1400092e3:	nop
   1400092e4:	lea    rax,[rip+0x4262d]        # 0x14004b918
   1400092eb:	mov    QWORD PTR [rbp+0x8],rax
   1400092ef:	lea    rcx,[rbp+0x8]
   1400092f3:	call   0x140027b0c
   1400092f8:	nop
   1400092f9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400092fe:	jb     0x140009303
   140009300:	mov    rbx,QWORD PTR [rbx]
   140009303:	mov    rdx,rbx
   140009306:	lea    rcx,[rsp+0x58]
   14000930b:	call   0x140018be0
   140009310:	nop
   140009311:	xor    edx,edx
   140009313:	mov    r8d,0x208
   140009319:	lea    rcx,[rbp+0x70]
   14000931d:	call   0x14002a910
   140009322:	mov    edx,0x104
   140009327:	lea    rcx,[rbp+0x70]
   14000932b:	call   QWORD PTR [rip+0x41db7]        # 0x14004b0e8
   140009331:	xor    edi,edi
   140009333:	test   eax,eax
   140009335:	jne    0x140009390
   140009337:	mov    QWORD PTR [rsp+0x50],0x7
   140009340:	mov    QWORD PTR [rsp+0x48],rdi
   140009345:	mov    WORD PTR [rsp+0x38],di
   14000934a:	lea    r8d,[rdi+0x19]
   14000934e:	lea    rdx,[rip+0x5965b]        # 0x1400629b0
   140009355:	lea    rcx,[rsp+0x38]
   14000935a:	call   0x14000b730
   14000935f:	nop
   140009360:	mov    DWORD PTR [rsp+0x20],esi
   140009364:	mov    r9d,0x1cb
   14000936a:	lea    r8,[rip+0x58b0f]        # 0x140061e80
   140009371:	lea    rdx,[rsp+0x38]
   140009376:	lea    rcx,[rbp-0x80]
   14000937a:	call   0x140020734
   14000937f:	lea    rdx,[rip+0x66bc2]        # 0x14006ff48
   140009386:	lea    rcx,[rbp-0x80]
   14000938a:	call   0x14002ab88
   14000938f:	nop
   140009390:	lea    r8,[rip+0x59651]        # 0x1400629e8
   140009397:	lea    rdx,[rbp+0x70]
   14000939b:	lea    rcx,[rbp+0x70]
   14000939f:	call   QWORD PTR [rip+0x42023]        # 0x14004b3c8
   1400093a5:	test   rax,rax
   1400093a8:	jne    0x140009403
   1400093aa:	mov    QWORD PTR [rsp+0x50],0x7
   1400093b3:	mov    QWORD PTR [rsp+0x48],rdi
   1400093b8:	mov    WORD PTR [rsp+0x38],di
   1400093bd:	lea    r8d,[rax+0x12]
   1400093c1:	lea    rdx,[rip+0x59638]        # 0x140062a00
   1400093c8:	lea    rcx,[rsp+0x38]
   1400093cd:	call   0x14000b730
   1400093d2:	nop
   1400093d3:	mov    DWORD PTR [rsp+0x20],esi
   1400093d7:	mov    r9d,0x1cf
   1400093dd:	lea    r8,[rip+0x58a9c]        # 0x140061e80
   1400093e4:	lea    rdx,[rsp+0x38]
   1400093e9:	lea    rcx,[rbp-0x80]
   1400093ed:	call   0x140020734
   1400093f2:	lea    rdx,[rip+0x66b4f]        # 0x14006ff48
   1400093f9:	lea    rcx,[rbp-0x80]
   1400093fd:	call   0x14002ab88
   140009402:	nop
   140009403:	lea    rcx,[rbp+0x70]
   140009407:	call   QWORD PTR [rip+0x41c53]        # 0x14004b060
   14000940d:	mov    rbx,rax
   140009410:	test   rax,rax
   140009413:	jne    0x14000946e
   140009415:	mov    QWORD PTR [rsp+0x50],0x7
   14000941e:	mov    QWORD PTR [rsp+0x48],rdi
   140009423:	mov    WORD PTR [rsp+0x38],di
   140009428:	lea    r8d,[rax+0x12]
   14000942c:	lea    rdx,[rip+0x595f5]        # 0x140062a28
   140009433:	lea    rcx,[rsp+0x38]
   140009438:	call   0x14000b730
   14000943d:	nop
   14000943e:	mov    DWORD PTR [rsp+0x20],esi
   140009442:	mov    r9d,0x1d5
   140009448:	lea    r8,[rip+0x58a31]        # 0x140061e80
   14000944f:	lea    rdx,[rsp+0x38]
   140009454:	lea    rcx,[rbp-0x80]
   140009458:	call   0x140020734
   14000945d:	lea    rdx,[rip+0x66ae4]        # 0x14006ff48
   140009464:	lea    rcx,[rbp-0x80]
   140009468:	call   0x14002ab88
   14000946d:	nop
   14000946e:	lea    rdx,[rip+0x595db]        # 0x140062a50
   140009475:	mov    rcx,rbx
   140009478:	call   QWORD PTR [rip+0x41c4a]        # 0x14004b0c8
   14000947e:	test   rax,rax
   140009481:	jne    0x1400094e7
   140009483:	mov    rcx,rbx
   140009486:	call   QWORD PTR [rip+0x41c14]        # 0x14004b0a0
   14000948c:	mov    QWORD PTR [rsp+0x50],0x7
   140009495:	mov    QWORD PTR [rsp+0x48],rdi
   14000949a:	mov    WORD PTR [rsp+0x38],di
   14000949f:	mov    r8d,0x15
   1400094a5:	lea    rdx,[rip+0x595bc]        # 0x140062a68
   1400094ac:	lea    rcx,[rsp+0x38]
   1400094b1:	call   0x14000b730
   1400094b6:	nop
   1400094b7:	mov    DWORD PTR [rsp+0x20],esi
   1400094bb:	mov    r9d,0x1dd
   1400094c1:	lea    r8,[rip+0x589b8]        # 0x140061e80
   1400094c8:	lea    rdx,[rsp+0x38]
   1400094cd:	lea    rcx,[rbp-0x80]
   1400094d1:	call   0x140020734
   1400094d6:	lea    rdx,[rip+0x66a6b]        # 0x14006ff48
   1400094dd:	lea    rcx,[rbp-0x80]
   1400094e1:	call   0x14002ab88
   1400094e6:	nop
   1400094e7:	lea    r8,[rsp+0x58]
   1400094ec:	cmp    QWORD PTR [rsp+0x70],0x10
   1400094f2:	cmovae r8,QWORD PTR [rsp+0x58]
   1400094f8:	xor    r9d,r9d
   1400094fb:	xor    edx,edx
   1400094fd:	xor    ecx,ecx
   1400094ff:	call   rax
   140009501:	mov    rcx,rbx
   140009504:	call   QWORD PTR [rip+0x41b96]        # 0x14004b0a0
   14000950a:	nop
   14000950b:	mov    rdx,QWORD PTR [rsp+0x70]
   140009510:	cmp    rdx,0x10
   140009514:	jb     0x140009526
   140009516:	inc    rdx
   140009519:	mov    r8,rsi
   14000951c:	mov    rcx,QWORD PTR [rsp+0x58]
   140009521:	call   0x140004804
   140009526:	mov    rcx,QWORD PTR [rbp+0x280]
   14000952d:	xor    rcx,rsp
   140009530:	call   0x140025df0
   140009535:	lea    r11,[rsp+0x390]
   14000953d:	mov    rbx,QWORD PTR [r11+0x18]
   140009541:	mov    rsi,QWORD PTR [r11+0x20]
   140009545:	mov    rdi,QWORD PTR [r11+0x28]
   140009549:	mov    rsp,r11
   14000954c:	pop    rbp
   14000954d:	ret    
   14000954e:	int3   
   14000954f:	int3   
   140009550:	mov    rax,rsp
   140009553:	push   rbp
   140009554:	push   r14
   140009556:	push   r15
   140009558:	lea    rbp,[rax-0x288]
   14000955f:	sub    rsp,0x370
   140009566:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000956f:	mov    QWORD PTR [rax+0x10],rbx
   140009573:	mov    QWORD PTR [rax+0x18],rdi
   140009577:	mov    QWORD PTR [rax+0x20],r12
   14000957b:	mov    rax,QWORD PTR [rip+0x67ace]        # 0x140071050
   140009582:	xor    rax,rsp
   140009585:	mov    QWORD PTR [rbp+0x260],rax
   14000958c:	mov    rbx,rcx
   14000958f:	mov    r15d,0x1
   140009595:	mov    r8d,r15d
   140009598:	lea    r12d,[r15+0x1]
   14000959c:	mov    edx,r12d
   14000959f:	lea    rcx,[rbp+0x150]
   1400095a6:	call   0x14000be9c
   1400095ab:	nop
   1400095ac:	lea    rdx,[rip+0x594e5]        # 0x140062a98
   1400095b3:	lea    rcx,[rbp+0x150]
   1400095ba:	call   0x140010488
   1400095bf:	mov    rdx,rbx
   1400095c2:	lea    rcx,[rbp+0x150]
   1400095c9:	call   0x1400106b0
   1400095ce:	lea    rdx,[rbp+0xd0]
   1400095d5:	lea    rcx,[rbp+0x150]
   1400095dc:	call   0x14000a950
   1400095e1:	nop
   1400095e2:	lea    rdx,[rbp+0xd0]
   1400095e9:	lea    ecx,[r15+0x2]
   1400095ed:	call   0x14001a654
   1400095f2:	nop
   1400095f3:	xor    r8d,r8d
   1400095f6:	mov    dl,r15b
   1400095f9:	lea    rcx,[rbp+0xd0]
   140009600:	call   0x14000b6b0
   140009605:	nop
   140009606:	lea    rcx,[rbp+0x1d8]
   14000960d:	call   0x14000a9dc
   140009612:	nop
   140009613:	lea    rax,[rip+0x422fe]        # 0x14004b918
   14000961a:	mov    QWORD PTR [rbp+0x1d8],rax
   140009621:	lea    rcx,[rbp+0x1d8]
   140009628:	call   0x140027b0c
   14000962d:	nop
   14000962e:	lea    rcx,[rbp+0x110]
   140009635:	call   0x1400123f4
   14000963a:	nop
   14000963b:	mov    r8,rax
   14000963e:	lea    rcx,[rbp+0x240]
   140009645:	call   0x14000da84
   14000964a:	nop
   14000964b:	lea    r8,[rip+0x5947e]        # 0x140062ad0
   140009652:	mov    rdx,rax
   140009655:	lea    rcx,[rbp+0x130]
   14000965c:	call   0x14000d824
   140009661:	nop
   140009662:	mov    r8,rbx
   140009665:	mov    rdx,rax
   140009668:	lea    rcx,[rbp+0xf0]
   14000966f:	call   0x14000d88c
   140009674:	nop
   140009675:	xor    r8d,r8d
   140009678:	mov    dl,r15b
   14000967b:	lea    rcx,[rbp+0x130]
   140009682:	call   0x14000b6b0
   140009687:	nop
   140009688:	xor    r8d,r8d
   14000968b:	mov    dl,r15b
   14000968e:	lea    rcx,[rbp+0x240]
   140009695:	call   0x14000b6b0
   14000969a:	nop
   14000969b:	xor    r8d,r8d
   14000969e:	mov    dl,r15b
   1400096a1:	lea    rcx,[rbp+0x110]
   1400096a8:	call   0x14000b6b0
   1400096ad:	xor    r14d,r14d
   1400096b0:	mov    WORD PTR [rsp+0x50],r14w
   1400096b6:	xorps  xmm0,xmm0
   1400096b9:	movdqu XMMWORD PTR [rbp+0xd0],xmm0
   1400096c1:	mov    QWORD PTR [rbp+0xe0],r14
   1400096c8:	mov    rdx,QWORD PTR [rbp+0x100]
   1400096cf:	inc    rdx
   1400096d2:	lea    r8,[rsp+0x50]
   1400096d7:	lea    rcx,[rbp+0xd0]
   1400096de:	call   0x14000b60c
   1400096e3:	nop
   1400096e4:	lea    rcx,[rbp+0xf0]
   1400096eb:	cmp    QWORD PTR [rbp+0x108],0x8
   1400096f3:	cmovae rcx,QWORD PTR [rbp+0xf0]
   1400096fb:	mov    rax,QWORD PTR [rbp+0x100]
   140009702:	lea    r8,[rcx+rax*2]
   140009706:	lea    rdx,[rbp+0xf0]
   14000970d:	cmovae rdx,QWORD PTR [rbp+0xf0]
   140009715:	sub    r8,rdx
   140009718:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000971f:	call   0x140028fd0
   140009724:	lea    ebx,[r15+0x67]
   140009728:	mov    r8d,ebx
   14000972b:	xor    edx,edx
   14000972d:	lea    rcx,[rbp+0x60]
   140009731:	call   0x14002a910
   140009736:	mov    DWORD PTR [rbp+0x60],ebx
   140009739:	xor    ecx,ecx
   14000973b:	call   QWORD PTR [rip+0x419d7]        # 0x14004b118
   140009741:	mov    rdx,QWORD PTR [rbp+0xd0]
   140009748:	call   0x140001b00
   14000974d:	test   eax,eax
   14000974f:	je     0x140009969
   140009755:	lea    rax,[rsp+0x58]
   14000975a:	mov    QWORD PTR [rsp+0x48],rax
   14000975f:	lea    rax,[rbp+0x60]
   140009763:	mov    QWORD PTR [rsp+0x40],rax
   140009768:	mov    QWORD PTR [rsp+0x38],r14
   14000976d:	mov    QWORD PTR [rsp+0x30],r14
   140009772:	mov    DWORD PTR [rsp+0x28],r14d
   140009777:	mov    DWORD PTR [rsp+0x20],r14d
   14000977c:	xor    r9d,r9d
   14000977f:	xor    r8d,r8d
   140009782:	mov    rdx,QWORD PTR [rbp+0xd0]
   140009789:	xor    ecx,ecx
   14000978b:	call   QWORD PTR [rip+0x4191f]        # 0x14004b0b0
   140009791:	test   eax,eax
   140009793:	je     0x140009969
   140009799:	mov    rcx,QWORD PTR [rsp+0x60]
   14000979e:	call   QWORD PTR [rip+0x4192c]        # 0x14004b0d0
   1400097a4:	or     edx,0xffffffff
   1400097a7:	mov    rcx,QWORD PTR [rsp+0x58]
   1400097ac:	call   QWORD PTR [rip+0x418ce]        # 0x14004b080
   1400097b2:	mov    DWORD PTR [rsp+0x54],r14d
   1400097b7:	lea    rdx,[rsp+0x54]
   1400097bc:	mov    rcx,QWORD PTR [rsp+0x58]
   1400097c1:	call   QWORD PTR [rip+0x41889]        # 0x14004b050
   1400097c7:	mov    ebx,eax
   1400097c9:	call   QWORD PTR [rip+0x41911]        # 0x14004b0e0
   1400097cf:	mov    edi,eax
   1400097d1:	mov    rcx,QWORD PTR [rsp+0x58]
   1400097d6:	call   QWORD PTR [rip+0x418f4]        # 0x14004b0d0
   1400097dc:	mov    r8d,r15d
   1400097df:	mov    edx,r12d
   1400097e2:	test   ebx,ebx
   1400097e4:	jne    0x140009871
   1400097ea:	lea    rcx,[rsp+0x78]
   1400097ef:	call   0x14000be9c
   1400097f4:	nop
   1400097f5:	lea    rdx,[rip+0x59344]        # 0x140062b40
   1400097fc:	lea    rcx,[rsp+0x78]
   140009801:	call   0x140010488
   140009806:	mov    edx,edi
   140009808:	lea    rcx,[rsp+0x78]
   14000980d:	call   0x14000e4d0
   140009812:	lea    rdx,[rbp+0x110]
   140009819:	lea    rcx,[rsp+0x78]
   14000981e:	call   0x14000a950
   140009823:	nop
   140009824:	movzx  r8d,di
   140009828:	or     r8d,0x80070000
   14000982f:	test   edi,edi
   140009831:	cmovle r8d,edi
   140009835:	mov    DWORD PTR [rsp+0x28],r15d
   14000983a:	mov    QWORD PTR [rsp+0x20],0x21d
   140009843:	lea    r9,[rip+0x58636]        # 0x140061e80
   14000984a:	lea    rdx,[rbp+0x110]
   140009851:	lea    rcx,[rbp+0x150]
   140009858:	call   0x14001ec04
   14000985d:	lea    rdx,[rip+0x665a4]        # 0x14006fe08
   140009864:	lea    rcx,[rbp+0x150]
   14000986b:	call   0x14002ab88
   140009870:	nop
   140009871:	lea    rcx,[rbp+0x150]
   140009878:	call   0x14000be9c
   14000987d:	nop
   14000987e:	lea    rdx,[rip+0x592fb]        # 0x140062b80
   140009885:	lea    rcx,[rbp+0x150]
   14000988c:	call   0x140010488
   140009891:	lea    rdx,[rbp+0xf0]
   140009898:	lea    rcx,[rbp+0x150]
   14000989f:	call   0x1400106b0
   1400098a4:	lea    rdx,[rip+0x592ed]        # 0x140062b98
   1400098ab:	lea    rcx,[rbp+0x150]
   1400098b2:	call   0x140010488
   1400098b7:	mov    edx,DWORD PTR [rsp+0x54]
   1400098bb:	lea    rcx,[rbp+0x150]
   1400098c2:	call   0x14000e4d0
   1400098c7:	lea    rdx,[rbp+0x130]
   1400098ce:	lea    rcx,[rbp+0x150]
   1400098d5:	call   0x14000a950
   1400098da:	nop
   1400098db:	lea    rdx,[rbp+0x130]
   1400098e2:	mov    ecx,0x3
   1400098e7:	call   0x14001a654
   1400098ec:	nop
   1400098ed:	xor    r8d,r8d
   1400098f0:	mov    dl,r15b
   1400098f3:	lea    rcx,[rbp+0x130]
   1400098fa:	call   0x14000b6b0
   1400098ff:	nop
   140009900:	lea    rcx,[rbp+0x1d8]
   140009907:	call   0x14000a9dc
   14000990c:	nop
   14000990d:	lea    rax,[rip+0x42004]        # 0x14004b918
   140009914:	mov    QWORD PTR [rbp+0x1d8],rax
   14000991b:	lea    rcx,[rbp+0x1d8]
   140009922:	call   0x140027b0c
   140009927:	nop
   140009928:	cmp    QWORD PTR [rbp+0xd0],r14
   14000992f:	je     0x140009952
   140009931:	mov    rdx,QWORD PTR [rbp+0xe0]
   140009938:	sub    rdx,QWORD PTR [rbp+0xd0]
   14000993f:	sar    rdx,1
   140009942:	mov    r8,r12
   140009945:	mov    rcx,QWORD PTR [rbp+0xd0]
   14000994c:	call   0x140004804
   140009951:	nop
   140009952:	xor    r8d,r8d
   140009955:	mov    dl,r15b
   140009958:	lea    rcx,[rbp+0xf0]
   14000995f:	call   0x14000b6b0
   140009964:	jmp    0x140009a20
   140009969:	call   QWORD PTR [rip+0x41771]        # 0x14004b0e0
   14000996f:	mov    ebx,eax
   140009971:	mov    r8d,r15d
   140009974:	mov    edx,r12d
   140009977:	lea    rcx,[rsp+0x78]
   14000997c:	call   0x14000be9c
   140009981:	nop
   140009982:	lea    rdx,[rip+0x5915f]        # 0x140062ae8
   140009989:	lea    rcx,[rsp+0x78]
   14000998e:	call   0x140010488
   140009993:	lea    rdx,[rbp+0xf0]
   14000999a:	lea    rcx,[rsp+0x78]
   14000999f:	call   0x1400106b0
   1400099a4:	lea    rdx,[rip+0x5916d]        # 0x140062b18
   1400099ab:	lea    rcx,[rsp+0x78]
   1400099b0:	call   0x140010488
   1400099b5:	mov    edx,ebx
   1400099b7:	lea    rcx,[rsp+0x78]
   1400099bc:	call   0x14000e4d0
   1400099c1:	lea    rdx,[rbp+0x110]
   1400099c8:	lea    rcx,[rsp+0x78]
   1400099cd:	call   0x14000a950
   1400099d2:	nop
   1400099d3:	movzx  r8d,bx
   1400099d7:	or     r8d,0x80070000
   1400099de:	test   ebx,ebx
   1400099e0:	cmovle r8d,ebx
   1400099e4:	mov    DWORD PTR [rsp+0x28],r15d
   1400099e9:	mov    QWORD PTR [rsp+0x20],0x20d
   1400099f2:	lea    r9,[rip+0x58487]        # 0x140061e80
   1400099f9:	lea    rdx,[rbp+0x110]
   140009a00:	lea    rcx,[rbp+0x150]
   140009a07:	call   0x14001ec04
   140009a0c:	lea    rdx,[rip+0x663f5]        # 0x14006fe08
   140009a13:	lea    rcx,[rbp+0x150]
   140009a1a:	call   0x14002ab88
   140009a1f:	nop
   140009a20:	mov    rcx,QWORD PTR [rbp+0x260]
   140009a27:	xor    rcx,rsp
   140009a2a:	call   0x140025df0
   140009a2f:	lea    r11,[rsp+0x370]
   140009a37:	mov    rbx,QWORD PTR [r11+0x28]
   140009a3b:	mov    rdi,QWORD PTR [r11+0x30]
   140009a3f:	mov    r12,QWORD PTR [r11+0x38]
   140009a43:	mov    rsp,r11
   140009a46:	pop    r15
   140009a48:	pop    r14
   140009a4a:	pop    rbp
   140009a4b:	ret    
   140009a4c:	mov    r11,rsp
   140009a4f:	push   r13
   140009a51:	push   r14
   140009a53:	push   r15
   140009a55:	sub    rsp,0x4f0
   140009a5c:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140009a65:	mov    QWORD PTR [r11+0x8],rbx
   140009a69:	mov    QWORD PTR [r11+0x10],rdi
   140009a6d:	mov    QWORD PTR [r11+0x18],r12
   140009a71:	mov    rax,QWORD PTR [rip+0x675d8]        # 0x140071050
   140009a78:	xor    rax,rsp
   140009a7b:	mov    QWORD PTR [rsp+0x4e8],rax
   140009a83:	lea    rcx,[r11-0x398]
   140009a8a:	call   0x140012318
   140009a8f:	nop
   140009a90:	mov    rdx,rax
   140009a93:	lea    rcx,[rsp+0x190]
   140009a9b:	call   0x140024e3c
   140009aa0:	nop
   140009aa1:	lea    rdx,[rsp+0x190]
   140009aa9:	lea    rcx,[rsp+0x1b0]
   140009ab1:	call   0x14002534c
   140009ab6:	nop
   140009ab7:	lea    rcx,[rsp+0x190]
   140009abf:	call   0x14000a98c
   140009ac4:	nop
   140009ac5:	xor    r8d,r8d
   140009ac8:	mov    dl,0x1
   140009aca:	lea    rcx,[rsp+0x170]
   140009ad2:	call   0x14000b6b0
   140009ad7:	lea    rcx,[rsp+0x1b0]
   140009adf:	call   0x140025670
   140009ae4:	xor    edi,edi
   140009ae6:	test   al,al
   140009ae8:	jne    0x140009bda
   140009aee:	lea    rcx,[rsp+0x1b0]
   140009af6:	call   0x140025678
   140009afb:	test   al,al
   140009afd:	je     0x140009b0c
   140009aff:	lea    rcx,[rsp+0x1b0]
   140009b07:	call   0x140025430
   140009b0c:	lea    rdx,[rsp+0x200]
   140009b14:	lea    rcx,[rsp+0x1b0]
   140009b1c:	call   0x14002564c
   140009b21:	nop
   140009b22:	lea    rdx,[rsp+0x150]
   140009b2a:	mov    rcx,rax
   140009b2d:	call   0x140025030
   140009b32:	nop
   140009b33:	mov    rcx,rax
   140009b36:	call   0x1400196c4
   140009b3b:	test   al,al
   140009b3d:	sete   bl
   140009b40:	xor    r8d,r8d
   140009b43:	mov    dl,0x1
   140009b45:	lea    rcx,[rsp+0x150]
   140009b4d:	call   0x14000b6b0
   140009b52:	nop
   140009b53:	lea    rcx,[rsp+0x200]
   140009b5b:	call   0x14000a98c
   140009b60:	test   bl,bl
   140009b62:	je     0x140009bda
   140009b64:	mov    QWORD PTR [rsp+0x168],0x7
   140009b70:	mov    QWORD PTR [rsp+0x160],rdi
   140009b78:	mov    WORD PTR [rsp+0x150],di
   140009b80:	mov    r8d,0x1f
   140009b86:	lea    rdx,[rip+0x58333]        # 0x140061ec0
   140009b8d:	lea    rcx,[rsp+0x150]
   140009b95:	call   0x14000b730
   140009b9a:	nop
   140009b9b:	mov    DWORD PTR [rsp+0x20],0x1
   140009ba3:	mov    r9d,0x69
   140009ba9:	lea    r8,[rip+0x582d0]        # 0x140061e80
   140009bb0:	lea    rdx,[rsp+0x150]
   140009bb8:	lea    rcx,[rsp+0x260]
   140009bc0:	call   0x140020734
   140009bc5:	lea    rdx,[rip+0x6637c]        # 0x14006ff48
   140009bcc:	lea    rcx,[rsp+0x260]
   140009bd4:	call   0x14002ab88
   140009bd9:	nop
   140009bda:	lea    rcx,[rsp+0x1b8]
   140009be2:	call   0x14000a98c
   140009be7:	lea    rcx,[rsp+0x33]
   140009bec:	call   0x140006c38
   140009bf1:	nop
   140009bf2:	mov    BYTE PTR [rsp+0x30],dil
   140009bf7:	mov    BYTE PTR [rsp+0x31],dil
   140009bfc:	mov    BYTE PTR [rsp+0x32],dil
   140009c01:	lea    r8,[rsp+0x32]
   140009c06:	lea    rdx,[rsp+0x31]
   140009c0b:	lea    rcx,[rsp+0x30]
   140009c10:	call   0x140006f60
   140009c15:	cmp    BYTE PTR [rsp+0x30],dil
   140009c1a:	jne    0x140009c5a
   140009c1c:	cmp    BYTE PTR [rsp+0x31],dil
   140009c21:	jne    0x140009c5a
   140009c23:	cmp    BYTE PTR [rsp+0x32],dil
   140009c28:	jne    0x140009c5a
   140009c2a:	lea    rdx,[rip+0x58f9f]        # 0x140062bd0
   140009c31:	mov    ecx,0x3
   140009c36:	call   0x14001a664
   140009c3b:	nop
   140009c3c:	lea    rdx,[rip+0x58215]        # 0x140061e58
   140009c43:	mov    ecx,0x3
   140009c48:	call   0x14001a664
   140009c4d:	call   0x14001a238
   140009c52:	nop
   140009c53:	xor    eax,eax
   140009c55:	jmp    0x14000a342
   140009c5a:	lea    r12,[rip+0x6d997]        # 0x1400775f8
   140009c61:	mov    QWORD PTR [rsp+0x48],r12
   140009c66:	mov    rcx,r12
   140009c69:	call   0x140025ca8
   140009c6e:	nop
   140009c6f:	mov    DWORD PTR [rsp+0x38],edi
   140009c73:	lea    rcx,[rip+0x6d972]        # 0x1400775ec
   140009c7a:	lea    rax,[rsp+0x38]
   140009c7f:	cmp    DWORD PTR [rip+0x6d967],edi        # 0x1400775ec
   140009c85:	cmovg  rax,rcx
   140009c89:	mov    ecx,DWORD PTR [rax]
   140009c8b:	mov    DWORD PTR [rip+0x6d95b],ecx        # 0x1400775ec
   140009c91:	test   ecx,ecx
   140009c93:	jne    0x140009d0a
   140009c95:	call   0x140001310
   140009c9a:	mov    ebx,eax
   140009c9c:	test   eax,eax
   140009c9e:	je     0x140009d04
   140009ca0:	mov    QWORD PTR [rsp+0x1a8],0x7
   140009cac:	mov    QWORD PTR [rsp+0x1a0],rdi
   140009cb4:	mov    WORD PTR [rsp+0x190],di
   140009cbc:	mov    r8d,0x10
   140009cc2:	lea    rdx,[rip+0x5a52f]        # 0x1400641f8
   140009cc9:	lea    rcx,[rsp+0x190]
   140009cd1:	call   0x14000b730
   140009cd6:	nop
   140009cd7:	mov    r8d,ebx
   140009cda:	lea    rdx,[rsp+0x190]
   140009ce2:	lea    rcx,[rsp+0x3e0]
   140009cea:	call   0x140012ea0
   140009cef:	lea    rdx,[rip+0x6638a]        # 0x140070080
   140009cf6:	lea    rcx,[rsp+0x3e0]
   140009cfe:	call   0x14002ab88
   140009d03:	nop
   140009d04:	mov    ecx,DWORD PTR [rip+0x6d8e2]        # 0x1400775ec
   140009d0a:	inc    ecx
   140009d0c:	mov    DWORD PTR [rip+0x6d8da],ecx        # 0x1400775ec
   140009d12:	mov    rcx,r12
   140009d15:	call   0x140025cb4
   140009d1a:	nop
   140009d1b:	mov    DWORD PTR [rsp+0x34],edi
   140009d1f:	xor    edx,edx
   140009d21:	lea    r8d,[rdx+0x40]
   140009d25:	lea    rcx,[rsp+0x4a0]
   140009d2d:	call   0x14002a910
   140009d32:	lea    rdx,[rsp+0x4a0]
   140009d3a:	lea    rcx,[rsp+0x34]
   140009d3f:	call   0x140001240
   140009d44:	test   eax,eax
   140009d46:	je     0x140009dbe
   140009d48:	mov    QWORD PTR [rsp+0x168],0x7
   140009d54:	mov    QWORD PTR [rsp+0x160],rdi
   140009d5c:	mov    WORD PTR [rsp+0x150],di
   140009d64:	mov    r8d,0x23
   140009d6a:	lea    rdx,[rip+0x58e9f]        # 0x140062c10
   140009d71:	lea    rcx,[rsp+0x150]
   140009d79:	call   0x14000b730
   140009d7e:	nop
   140009d7f:	mov    DWORD PTR [rsp+0x20],0x1
   140009d87:	mov    r9d,0x247
   140009d8d:	lea    r8,[rip+0x580ec]        # 0x140061e80
   140009d94:	lea    rdx,[rsp+0x150]
   140009d9c:	lea    rcx,[rsp+0x320]
   140009da4:	call   0x140020734
   140009da9:	lea    rdx,[rip+0x66198]        # 0x14006ff48
   140009db0:	lea    rcx,[rsp+0x320]
   140009db8:	call   0x14002ab88
   140009dbd:	nop
   140009dbe:	cmp    BYTE PTR [rsp+0x30],dil
   140009dc3:	je     0x140009ffa
   140009dc9:	lea    rdx,[rip+0x58e88]        # 0x140062c58
   140009dd0:	mov    ecx,0x3
   140009dd5:	call   0x14001a664
   140009dda:	nop
   140009ddb:	mov    QWORD PTR [rsp+0x1e8],rdi
   140009de3:	lea    rax,[rip+0xfffffffffffff456]        # 0x140009240
   140009dea:	lea    r15,[rip+0x592bf]        # 0x1400630b0
   140009df1:	test   rax,rax
   140009df4:	je     0x140009e16
   140009df6:	mov    QWORD PTR [rsp+0x1b0],r15
   140009dfe:	mov    QWORD PTR [rsp+0x1b8],rax
   140009e06:	lea    rax,[rsp+0x1b0]
   140009e0e:	mov    QWORD PTR [rsp+0x1e8],rax
   140009e16:	mov    r14d,0xf
   140009e1c:	mov    QWORD PTR [rsp+0x168],r14
   140009e24:	mov    QWORD PTR [rsp+0x160],rdi
   140009e2c:	mov    BYTE PTR [rsp+0x150],dil
   140009e34:	or     rbx,0xffffffffffffffff
   140009e38:	cmp    BYTE PTR [rsp+0x4a0],dil
   140009e40:	jne    0x140009e47
   140009e42:	mov    r8,rdi
   140009e45:	jmp    0x140009e5b
   140009e47:	lea    rax,[rsp+0x4a0]
   140009e4f:	mov    r8,rbx
   140009e52:	inc    r8
   140009e55:	cmp    BYTE PTR [rax+r8*1],dil
   140009e59:	jne    0x140009e52
   140009e5b:	lea    rdx,[rsp+0x4a0]
   140009e63:	lea    rcx,[rsp+0x150]
   140009e6b:	call   0x14000b994
   140009e70:	nop
   140009e71:	mov    QWORD PTR [rsp+0x188],r14
   140009e79:	mov    QWORD PTR [rsp+0x180],rdi
   140009e81:	mov    BYTE PTR [rsp+0x170],dil
   140009e89:	cmp    BYTE PTR [rsp+0x4a0],dil
   140009e91:	jne    0x140009e98
   140009e93:	mov    r8,rdi
   140009e96:	jmp    0x140009eac
   140009e98:	lea    rax,[rsp+0x4a0]
   140009ea0:	mov    r8,rbx
   140009ea3:	inc    r8
   140009ea6:	cmp    BYTE PTR [rax+r8*1],dil
   140009eaa:	jne    0x140009ea3
   140009eac:	lea    rdx,[rsp+0x4a0]
   140009eb4:	lea    rcx,[rsp+0x170]
   140009ebc:	call   0x14000b994
   140009ec1:	nop
   140009ec2:	lea    rdx,[rsp+0x150]
   140009eca:	lea    rcx,[rsp+0x240]
   140009ed2:	call   0x140006ab8
   140009ed7:	mov    r13,rax
   140009eda:	lea    rcx,[rsp+0x220]
   140009ee2:	call   0x140012318
   140009ee7:	nop
   140009ee8:	lea    r8,[rip+0x58da9]        # 0x140062c98
   140009eef:	mov    rdx,rax
   140009ef2:	lea    rcx,[rsp+0x200]
   140009efa:	call   0x14000d824
   140009eff:	nop
   140009f00:	lea    r9,[rsp+0x1b0]
   140009f08:	mov    r8,r13
   140009f0b:	mov    rdx,rax
   140009f0e:	lea    rcx,[rsp+0x170]
   140009f16:	call   0x140008470
   140009f1b:	nop
   140009f1c:	xor    r8d,r8d
   140009f1f:	mov    dl,0x1
   140009f21:	lea    rcx,[rsp+0x200]
   140009f29:	call   0x14000b6b0
   140009f2e:	nop
   140009f2f:	xor    r8d,r8d
   140009f32:	mov    dl,0x1
   140009f34:	lea    rcx,[rsp+0x220]
   140009f3c:	call   0x14000b6b0
   140009f41:	nop
   140009f42:	xor    r8d,r8d
   140009f45:	mov    dl,0x1
   140009f47:	lea    rcx,[rsp+0x240]
   140009f4f:	call   0x14000b6b0
   140009f54:	nop
   140009f55:	mov    rdx,QWORD PTR [rsp+0x188]
   140009f5d:	cmp    rdx,0x10
   140009f61:	jb     0x140009f79
   140009f63:	inc    rdx
   140009f66:	mov    r8d,0x1
   140009f6c:	mov    rcx,QWORD PTR [rsp+0x170]
   140009f74:	call   0x140004804
   140009f79:	mov    QWORD PTR [rsp+0x188],r14
   140009f81:	mov    QWORD PTR [rsp+0x180],rdi
   140009f89:	mov    BYTE PTR [rsp+0x170],dil
   140009f91:	mov    rdx,QWORD PTR [rsp+0x168]
   140009f99:	cmp    rdx,0x10
   140009f9d:	jb     0x140009fb5
   140009f9f:	inc    rdx
   140009fa2:	mov    r8d,0x1
   140009fa8:	mov    rcx,QWORD PTR [rsp+0x150]
   140009fb0:	call   0x140004804
   140009fb5:	mov    QWORD PTR [rsp+0x168],r14
   140009fbd:	mov    QWORD PTR [rsp+0x160],rdi
   140009fc5:	mov    BYTE PTR [rsp+0x150],dil
   140009fcd:	mov    rcx,QWORD PTR [rsp+0x1e8]
   140009fd5:	test   rcx,rcx
   140009fd8:	je     0x140009fef
   140009fda:	mov    rax,QWORD PTR [rcx]
   140009fdd:	lea    rdx,[rsp+0x1b0]
   140009fe5:	cmp    rcx,rdx
   140009fe8:	setne  dl
   140009feb:	call   QWORD PTR [rax+0x20]
   140009fee:	nop
   140009fef:	jmp    0x14000a009
   140009ff1:	xor    edi,edi
   140009ff3:	lea    r12,[rip+0x6d5fe]        # 0x1400775f8
   140009ffa:	or     rbx,0xffffffffffffffff
   140009ffe:	lea    r14d,[rbx+0x10]
   14000a002:	lea    r15,[rip+0x590a7]        # 0x1400630b0
   14000a009:	cmp    BYTE PTR [rsp+0x31],dil
   14000a00e:	jne    0x14000a01b
   14000a010:	cmp    BYTE PTR [rsp+0x32],dil
   14000a015:	je     0x14000a255
   14000a01b:	mov    ecx,0x3
   14000a020:	cmp    DWORD PTR [rsp+0x34],0x87ca
   14000a028:	jb     0x14000a249
   14000a02e:	lea    rdx,[rip+0x58cc3]        # 0x140062cf8
   14000a035:	call   0x14001a664
   14000a03a:	nop
   14000a03b:	mov    QWORD PTR [rsp+0x1e8],rdi
   14000a043:	lea    rax,[rip+0xfffffffffffff506]        # 0x140009550
   14000a04a:	test   rax,rax
   14000a04d:	je     0x14000a06f
   14000a04f:	mov    QWORD PTR [rsp+0x1b0],r15
   14000a057:	mov    QWORD PTR [rsp+0x1b8],rax
   14000a05f:	lea    rax,[rsp+0x1b0]
   14000a067:	mov    QWORD PTR [rsp+0x1e8],rax
   14000a06f:	mov    QWORD PTR [rsp+0x188],r14
   14000a077:	mov    QWORD PTR [rsp+0x180],rdi
   14000a07f:	mov    BYTE PTR [rsp+0x170],dil
   14000a087:	cmp    BYTE PTR [rsp+0x4a0],dil
   14000a08f:	jne    0x14000a096
   14000a091:	mov    r8,rdi
   14000a094:	jmp    0x14000a0aa
   14000a096:	lea    rax,[rsp+0x4a0]
   14000a09e:	mov    r8,rbx
   14000a0a1:	inc    r8
   14000a0a4:	cmp    BYTE PTR [rax+r8*1],dil
   14000a0a8:	jne    0x14000a0a1
   14000a0aa:	lea    rdx,[rsp+0x4a0]
   14000a0b2:	lea    rcx,[rsp+0x170]
   14000a0ba:	call   0x14000b994
   14000a0bf:	nop
   14000a0c0:	mov    QWORD PTR [rsp+0x168],r14
   14000a0c8:	mov    QWORD PTR [rsp+0x160],rdi
   14000a0d0:	mov    BYTE PTR [rsp+0x150],dil
   14000a0d8:	cmp    BYTE PTR [rsp+0x4a0],dil
   14000a0e0:	jne    0x14000a0e7
   14000a0e2:	mov    rbx,rdi
   14000a0e5:	jmp    0x14000a0f8
   14000a0e7:	lea    rax,[rsp+0x4a0]
   14000a0ef:	inc    rbx
   14000a0f2:	cmp    BYTE PTR [rax+rbx*1],dil
   14000a0f6:	jne    0x14000a0ef
   14000a0f8:	mov    r8,rbx
   14000a0fb:	lea    rdx,[rsp+0x4a0]
   14000a103:	lea    rcx,[rsp+0x150]
   14000a10b:	call   0x14000b994
   14000a110:	nop
   14000a111:	lea    rdx,[rsp+0x170]
   14000a119:	lea    rcx,[rsp+0x200]
   14000a121:	call   0x140006b78
   14000a126:	mov    rbx,rax
   14000a129:	lea    rcx,[rsp+0x220]
   14000a131:	call   0x140012318
   14000a136:	nop
   14000a137:	lea    r8,[rip+0x58bf2]        # 0x140062d30
   14000a13e:	mov    rdx,rax
   14000a141:	lea    rcx,[rsp+0x240]
   14000a149:	call   0x14000d824
   14000a14e:	nop
   14000a14f:	lea    r9,[rsp+0x1b0]
   14000a157:	mov    r8,rbx
   14000a15a:	mov    rdx,rax
   14000a15d:	lea    rcx,[rsp+0x150]
   14000a165:	call   0x140008470
   14000a16a:	nop
   14000a16b:	xor    r8d,r8d
   14000a16e:	mov    dl,0x1
   14000a170:	lea    rcx,[rsp+0x240]
   14000a178:	call   0x14000b6b0
   14000a17d:	nop
   14000a17e:	xor    r8d,r8d
   14000a181:	mov    dl,0x1
   14000a183:	lea    rcx,[rsp+0x220]
   14000a18b:	call   0x14000b6b0
   14000a190:	nop
   14000a191:	xor    r8d,r8d
   14000a194:	mov    dl,0x1
   14000a196:	lea    rcx,[rsp+0x200]
   14000a19e:	call   0x14000b6b0
   14000a1a3:	nop
   14000a1a4:	mov    rdx,QWORD PTR [rsp+0x168]
   14000a1ac:	cmp    rdx,0x10
   14000a1b0:	jb     0x14000a1c8
   14000a1b2:	inc    rdx
   14000a1b5:	mov    r8d,0x1
   14000a1bb:	mov    rcx,QWORD PTR [rsp+0x150]
   14000a1c3:	call   0x140004804
   14000a1c8:	mov    QWORD PTR [rsp+0x168],r14
   14000a1d0:	mov    QWORD PTR [rsp+0x160],rdi
   14000a1d8:	mov    BYTE PTR [rsp+0x150],dil
   14000a1e0:	mov    rdx,QWORD PTR [rsp+0x188]
   14000a1e8:	cmp    rdx,0x10
   14000a1ec:	jb     0x14000a204
   14000a1ee:	inc    rdx
   14000a1f1:	mov    r8d,0x1
   14000a1f7:	mov    rcx,QWORD PTR [rsp+0x170]
   14000a1ff:	call   0x140004804
   14000a204:	mov    QWORD PTR [rsp+0x188],r14
   14000a20c:	mov    QWORD PTR [rsp+0x180],rdi
   14000a214:	mov    BYTE PTR [rsp+0x170],dil
   14000a21c:	mov    rcx,QWORD PTR [rsp+0x1e8]
   14000a224:	test   rcx,rcx
   14000a227:	je     0x14000a23e
   14000a229:	mov    rax,QWORD PTR [rcx]
   14000a22c:	lea    rdx,[rsp+0x1b0]
   14000a234:	cmp    rcx,rdx
   14000a237:	setne  dl
   14000a23a:	call   QWORD PTR [rax+0x20]
   14000a23d:	nop
   14000a23e:	jmp    0x14000a255
   14000a240:	lea    r12,[rip+0x6d3b1]        # 0x1400775f8
   14000a247:	jmp    0x14000a255
   14000a249:	lea    rdx,[rip+0x58b20]        # 0x140062d70
   14000a250:	call   0x14001a664
   14000a255:	lea    rdx,[rip+0x58b74]        # 0x140062dd0
   14000a25c:	mov    ecx,0x3
   14000a261:	call   0x14001a664
   14000a266:	nop
   14000a267:	mov    rcx,r12
   14000a26a:	call   0x140025ca8
   14000a26f:	sub    DWORD PTR [rip+0x6d376],0x1        # 0x1400775ec
   14000a276:	jne    0x14000a319
   14000a27c:	call   0x1400013f0
   14000a281:	mov    ebx,eax
   14000a283:	test   eax,eax
   14000a285:	je     0x14000a319
   14000a28b:	mov    edx,0x2
   14000a290:	lea    r8d,[rdx-0x1]
   14000a294:	lea    rcx,[rsp+0x68]
   14000a299:	call   0x14000be9c
   14000a29e:	lea    rdx,[rip+0x59f7b]        # 0x140064220
   14000a2a5:	lea    rcx,[rsp+0x68]
   14000a2aa:	call   0x140010488
   14000a2af:	mov    edx,ebx
   14000a2b1:	lea    rcx,[rsp+0x68]
   14000a2b6:	call   0x14000e638
   14000a2bb:	lea    rdx,[rsp+0x190]
   14000a2c3:	lea    rcx,[rsp+0x68]
   14000a2c8:	call   0x14000a950
   14000a2cd:	lea    rdx,[rsp+0x190]
   14000a2d5:	xor    ecx,ecx
   14000a2d7:	call   0x14001a654
   14000a2dc:	xor    r8d,r8d
   14000a2df:	mov    dl,0x1
   14000a2e1:	lea    rcx,[rsp+0x190]
   14000a2e9:	call   0x14000b6b0
   14000a2ee:	lea    rcx,[rsp+0xf0]
   14000a2f6:	call   0x14000a9dc
   14000a2fb:	nop
   14000a2fc:	lea    rax,[rip+0x41615]        # 0x14004b918
   14000a303:	mov    QWORD PTR [rsp+0xf0],rax
   14000a30b:	lea    rcx,[rsp+0xf0]
   14000a313:	call   0x140027b0c
   14000a318:	nop
   14000a319:	mov    rcx,r12
   14000a31c:	call   0x140025cb4
   14000a321:	nop
   14000a322:	lea    rdx,[rip+0x57b2f]        # 0x140061e58
   14000a329:	mov    ecx,0x3
   14000a32e:	call   0x14001a664
   14000a333:	call   0x14001a238
   14000a338:	nop
   14000a339:	xor    eax,eax
   14000a33b:	jmp    0x14000a342
   14000a33d:	mov    eax,0x1
   14000a342:	mov    rcx,QWORD PTR [rsp+0x4e8]
   14000a34a:	xor    rcx,rsp
   14000a34d:	call   0x140025df0
   14000a352:	lea    r11,[rsp+0x4f0]
   14000a35a:	mov    rbx,QWORD PTR [r11+0x20]
   14000a35e:	mov    rdi,QWORD PTR [r11+0x28]
   14000a362:	mov    r12,QWORD PTR [r11+0x30]
   14000a366:	mov    rsp,r11
   14000a369:	pop    r15
   14000a36b:	pop    r14
   14000a36d:	pop    r13
   14000a36f:	ret    
   14000a370:	int3   
   14000a371:	int3   
   14000a372:	int3   
   14000a373:	int3   
   14000a374:	rex push rbx
   14000a376:	sub    rsp,0x20
   14000a37a:	mov    rbx,rcx
   14000a37d:	mov    rcx,QWORD PTR [rcx]
   14000a380:	test   rcx,rcx
   14000a383:	je     0x14000a3a8
   14000a385:	mov    rdx,QWORD PTR [rbx+0x10]
   14000a389:	mov    r8d,0x2
   14000a38f:	sub    rdx,rcx
   14000a392:	sar    rdx,1
   14000a395:	call   0x140004804
   14000a39a:	and    QWORD PTR [rbx],0x0
   14000a39e:	and    QWORD PTR [rbx+0x8],0x0
   14000a3a3:	and    QWORD PTR [rbx+0x10],0x0
   14000a3a8:	add    rsp,0x20
   14000a3ac:	pop    rbx
   14000a3ad:	ret    
   14000a3ae:	int3   
   14000a3af:	int3   
   14000a3b0:	rex push rbx
   14000a3b2:	sub    rsp,0x30
   14000a3b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a3bf:	mov    rbx,rcx
   14000a3c2:	mov    rcx,QWORD PTR [rcx+0x38]
   14000a3c6:	test   rcx,rcx
   14000a3c9:	je     0x14000a3dd
   14000a3cb:	mov    rax,QWORD PTR [rcx]
   14000a3ce:	cmp    rcx,rbx
   14000a3d1:	setne  dl
   14000a3d4:	call   QWORD PTR [rax+0x20]
   14000a3d7:	nop
   14000a3d8:	and    QWORD PTR [rbx+0x38],0x0
   14000a3dd:	add    rsp,0x30
   14000a3e1:	pop    rbx
   14000a3e2:	ret    
   14000a3e3:	int3   
   14000a3e4:	rex push rbx
   14000a3e6:	sub    rsp,0x20
   14000a3ea:	mov    rbx,QWORD PTR [rcx]
   14000a3ed:	test   rbx,rbx
   14000a3f0:	je     0x14000a407
   14000a3f2:	mov    rcx,rbx
   14000a3f5:	call   0x140007cf0
   14000a3fa:	mov    edx,0x88
   14000a3ff:	mov    rcx,rbx
   14000a402:	call   0x140026804
   14000a407:	add    rsp,0x20
   14000a40b:	pop    rbx
   14000a40c:	ret    
   14000a40d:	int3   
   14000a40e:	int3   
   14000a40f:	int3   
   14000a410:	sub    rsp,0x38
   14000a414:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a41d:	mov    rcx,QWORD PTR [rcx]
   14000a420:	test   rcx,rcx
   14000a423:	je     0x14000a430
   14000a425:	mov    rax,QWORD PTR [rcx]
   14000a428:	mov    edx,0x1
   14000a42d:	call   QWORD PTR [rax]
   14000a42f:	nop
   14000a430:	add    rsp,0x38
   14000a434:	ret    
   14000a435:	int3   
   14000a436:	int3   
   14000a437:	int3   
   14000a438:	mov    r11,rsp
   14000a43b:	push   r14
   14000a43d:	sub    rsp,0x40
   14000a441:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   14000a449:	mov    QWORD PTR [r11+0x8],rbx
   14000a44d:	mov    QWORD PTR [r11+0x10],rbp
   14000a451:	mov    QWORD PTR [r11+0x18],rsi
   14000a455:	mov    QWORD PTR [r11+0x20],rdi
   14000a459:	mov    r14,r8
   14000a45c:	mov    rdi,rcx
   14000a45f:	xor    eax,eax
   14000a461:	mov    QWORD PTR [r11-0x18],rax
   14000a465:	movups xmm0,XMMWORD PTR [rdx]
   14000a468:	mov    DWORD PTR [rsp+0x38],0x100005
   14000a470:	movq   QWORD PTR [rsp+0x28],xmm0
   14000a476:	psrldq xmm0,0x8
   14000a47b:	movd   DWORD PTR [rsp+0x30],xmm0
   14000a481:	mov    ecx,DWORD PTR [rcx+0xc]
   14000a484:	cmp    DWORD PTR [rdi+0x8],ecx
   14000a487:	jb     0x14000a548
   14000a48d:	test   ecx,ecx
   14000a48f:	jne    0x14000a4ad
   14000a491:	mov    DWORD PTR [rdi+0xc],0x10
   14000a498:	mov    edx,0x300
   14000a49d:	mov    rcx,r9
   14000a4a0:	call   0x14000c0e8
   14000a4a5:	mov    QWORD PTR [rdi],rax
   14000a4a8:	jmp    0x14000a548
   14000a4ad:	lea    eax,[rcx+0x1]
   14000a4b0:	shr    eax,1
   14000a4b2:	add    eax,ecx
   14000a4b4:	mov    DWORD PTR [rdi+0xc],eax
   14000a4b7:	lea    rdx,[rax+rax*2]
   14000a4bb:	shl    rdx,0x4
   14000a4bf:	lea    rsi,[rcx+rcx*2]
   14000a4c3:	shl    rsi,0x4
   14000a4c7:	mov    rbx,QWORD PTR [rdi]
   14000a4ca:	test   rbx,rbx
   14000a4cd:	jne    0x14000a4dc
   14000a4cf:	mov    rcx,r9
   14000a4d2:	call   0x14000c0e8
   14000a4d7:	mov    rbx,rax
   14000a4da:	jmp    0x14000a545
   14000a4dc:	test   rdx,rdx
   14000a4df:	jne    0x14000a4e5
   14000a4e1:	xor    ebx,ebx
   14000a4e3:	jmp    0x14000a545
   14000a4e5:	cmp    rsi,rdx
   14000a4e8:	jae    0x14000a545
   14000a4ea:	mov    rcx,QWORD PTR [r9]
   14000a4ed:	mov    r8,QWORD PTR [rcx+0x8]
   14000a4f1:	mov    rax,r8
   14000a4f4:	sub    rax,rsi
   14000a4f7:	add    rax,0x18
   14000a4fb:	add    rax,rcx
   14000a4fe:	cmp    rbx,rax
   14000a501:	jne    0x14000a524
   14000a503:	mov    rax,rdx
   14000a506:	sub    rax,rsi
   14000a509:	add    rax,0x7
   14000a50d:	mov    r10d,0xfffffff8
   14000a513:	and    rax,r10
   14000a516:	add    r8,rax
   14000a519:	cmp    r8,QWORD PTR [rcx]
   14000a51c:	ja     0x14000a524
   14000a51e:	mov    QWORD PTR [rcx+0x8],r8
   14000a522:	jmp    0x14000a545
   14000a524:	mov    rcx,r9
   14000a527:	call   0x14000c0e8
   14000a52c:	mov    rbp,rax
   14000a52f:	test   rsi,rsi
   14000a532:	je     0x14000a542
   14000a534:	mov    r8,rsi
   14000a537:	mov    rdx,rbx
   14000a53a:	mov    rcx,rax
   14000a53d:	call   0x140028fd0
   14000a542:	mov    rbx,rbp
   14000a545:	mov    QWORD PTR [rdi],rbx
   14000a548:	mov    eax,DWORD PTR [rdi+0x8]
   14000a54b:	lea    rcx,[rax+rax*2]
   14000a54f:	shl    rcx,0x4
   14000a553:	add    rcx,QWORD PTR [rdi]
   14000a556:	movups xmm0,XMMWORD PTR [rsp+0x28]
   14000a55b:	movdqu XMMWORD PTR [rcx],xmm0
   14000a55f:	mov    DWORD PTR [rcx+0x10],0x100005
   14000a566:	mov    eax,DWORD PTR [rdi+0x8]
   14000a569:	lea    rdx,[rax+rax*2]
   14000a56d:	add    rdx,rdx
   14000a570:	mov    rcx,QWORD PTR [rdi]
   14000a573:	movups xmm0,XMMWORD PTR [r14]
   14000a577:	movdqu XMMWORD PTR [rcx+rdx*8+0x18],xmm0
   14000a57d:	mov    eax,DWORD PTR [r14+0x10]
   14000a581:	mov    DWORD PTR [rcx+rdx*8+0x28],eax
   14000a585:	and    DWORD PTR [r14+0x10],0x0
   14000a58a:	inc    DWORD PTR [rdi+0x8]
   14000a58d:	mov    rax,rdi
   14000a590:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a595:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a59a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a59f:	mov    rdi,QWORD PTR [rsp+0x68]
   14000a5a4:	add    rsp,0x40
   14000a5a8:	pop    r14
   14000a5aa:	ret    
   14000a5ab:	int3   
   14000a5ac:	mov    QWORD PTR [rsp+0x10],rbx
   14000a5b1:	push   rdi
   14000a5b2:	sub    rsp,0x50
   14000a5b6:	mov    rax,QWORD PTR [rip+0x66a93]        # 0x140071050
   14000a5bd:	xor    rax,rsp
   14000a5c0:	mov    QWORD PTR [rsp+0x40],rax
   14000a5c5:	mov    eax,DWORD PTR [rcx+0x8]
   14000a5c8:	xor    edi,edi
   14000a5ca:	mov    r8,rdx
   14000a5cd:	lea    rbx,[rax+rax*2]
   14000a5d1:	shl    rbx,0x4
   14000a5d5:	add    rbx,QWORD PTR [rcx]
   14000a5d8:	cmp    BYTE PTR [rdx],dil
   14000a5db:	je     0x14000a5e5
   14000a5dd:	inc    r8
   14000a5e0:	cmp    BYTE PTR [r8],dil
   14000a5e3:	jne    0x14000a5dd
   14000a5e5:	sub    r8d,edx
   14000a5e8:	mov    QWORD PTR [rsp+0x28],rdx
   14000a5ed:	xor    eax,eax
   14000a5ef:	mov    DWORD PTR [rsp+0x38],0x100005
   14000a5f7:	mov    QWORD PTR [rsp+0x30],rax
   14000a5fc:	lea    rdx,[rsp+0x20]
   14000a601:	mov    DWORD PTR [rsp+0x30],r8d
   14000a606:	lea    r8,[rsp+0x28]
   14000a60b:	call   0x14000dad4
   14000a610:	cmp    QWORD PTR [rsp+0x20],rbx
   14000a615:	setne  al
   14000a618:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a61d:	xor    rcx,rsp
   14000a620:	call   0x140025df0
   14000a625:	mov    rbx,QWORD PTR [rsp+0x68]
   14000a62a:	add    rsp,0x50
   14000a62e:	pop    rdi
   14000a62f:	ret    
   14000a630:	mov    QWORD PTR [rsp+0x8],rbx
   14000a635:	mov    QWORD PTR [rsp+0x10],rbp
   14000a63a:	mov    QWORD PTR [rsp+0x18],rsi
   14000a63f:	push   rdi
   14000a640:	sub    rsp,0x20
   14000a644:	xor    eax,eax
   14000a646:	mov    rsi,rdx
   14000a649:	mov    QWORD PTR [rcx],rax
   14000a64c:	mov    rdi,rcx
   14000a64f:	mov    QWORD PTR [rcx+0x8],rax
   14000a653:	and    DWORD PTR [rcx+0x10],eax
   14000a656:	cmp    QWORD PTR [rdx+0x18],0x10
   14000a65b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000a65f:	jb     0x14000a664
   14000a661:	mov    rsi,QWORD PTR [rdx]
   14000a664:	mov    eax,0xf
   14000a669:	cmp    ebx,eax
   14000a66b:	ja     0x14000a67e
   14000a66d:	sub    al,bl
   14000a66f:	mov    DWORD PTR [rcx+0x10],0x700005
   14000a676:	mov    BYTE PTR [rcx+0xf],al
   14000a679:	mov    rbp,rdi
   14000a67c:	jmp    0x14000a699
   14000a67e:	mov    DWORD PTR [rcx+0x10],0x300005
   14000a685:	lea    edx,[rbx+0x1]
   14000a688:	mov    DWORD PTR [rcx+0x8],ebx
   14000a68b:	mov    rcx,r8
   14000a68e:	call   0x14000c0e8
   14000a693:	mov    rbp,rax
   14000a696:	mov    QWORD PTR [rdi],rax
   14000a699:	mov    ebx,ebx
   14000a69b:	mov    rdx,rsi
   14000a69e:	mov    r8d,ebx
   14000a6a1:	mov    rcx,rbp
   14000a6a4:	call   0x140028fd0
   14000a6a9:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a6ae:	mov    rax,rdi
   14000a6b1:	mov    BYTE PTR [rbx+rbp*1],0x0
   14000a6b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6ba:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a6bf:	add    rsp,0x20
   14000a6c3:	pop    rdi
   14000a6c4:	ret    
   14000a6c5:	int3   
   14000a6c6:	int3   
   14000a6c7:	int3   
   14000a6c8:	rex push rdi
   14000a6ca:	sub    rsp,0x30
   14000a6ce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a6d7:	mov    QWORD PTR [rsp+0x40],rbx
   14000a6dc:	mov    QWORD PTR [rsp+0x48],rsi
   14000a6e1:	mov    rsi,rcx
   14000a6e4:	mov    rdi,QWORD PTR [rcx+0x20]
   14000a6e8:	test   rdi,rdi
   14000a6eb:	je     0x14000a741
   14000a6ed:	cmp    QWORD PTR [rdi],0x0
   14000a6f1:	je     0x14000a724
   14000a6f3:	mov    rbx,QWORD PTR [rdi]
   14000a6f6:	cmp    rbx,QWORD PTR [rdi+0x10]
   14000a6fa:	je     0x14000a711
   14000a6fc:	mov    rbx,QWORD PTR [rbx+0x10]
   14000a700:	mov    rcx,QWORD PTR [rdi]
   14000a703:	call   0x1400263fc
   14000a708:	nop
   14000a709:	mov    QWORD PTR [rdi],rbx
   14000a70c:	test   rbx,rbx
   14000a70f:	jne    0x14000a6f3
   14000a711:	mov    rax,QWORD PTR [rdi]
   14000a714:	test   rax,rax
   14000a717:	je     0x14000a724
   14000a719:	cmp    rax,QWORD PTR [rdi+0x10]
   14000a71d:	jne    0x14000a724
   14000a71f:	and    QWORD PTR [rax+0x8],0x0
   14000a724:	mov    edx,0x1
   14000a729:	mov    rcx,QWORD PTR [rdi+0x20]
   14000a72d:	call   0x140026804
   14000a732:	nop
   14000a733:	mov    edx,0x28
   14000a738:	mov    rcx,rdi
   14000a73b:	call   0x140026804
   14000a740:	nop
   14000a741:	mov    rcx,QWORD PTR [rsi+0x38]
   14000a745:	call   0x1400263fc
   14000a74a:	nop
   14000a74b:	mov    edx,0x1
   14000a750:	mov    rcx,QWORD PTR [rsi+0x30]
   14000a754:	call   0x140026804
   14000a759:	nop
   14000a75a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a75f:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a764:	add    rsp,0x30
   14000a768:	pop    rdi
   14000a769:	ret    
   14000a76a:	int3   
   14000a76b:	int3   
   14000a76c:	mov    QWORD PTR [rsp+0x8],rcx
   14000a771:	push   rdi
   14000a772:	sub    rsp,0x30
   14000a776:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a77f:	mov    QWORD PTR [rsp+0x48],rbx
   14000a784:	mov    rbx,rcx
   14000a787:	xor    eax,eax
   14000a789:	mov    QWORD PTR [rcx],rax
   14000a78c:	mov    QWORD PTR [rcx+0x8],rax
   14000a790:	xor    edi,edi
   14000a792:	mov    DWORD PTR [rcx+0x10],edi
   14000a795:	mov    QWORD PTR [rcx+0x18],rdi
   14000a799:	mov    QWORD PTR [rcx+0x20],rdi
   14000a79d:	mov    QWORD PTR [rcx+0x28],rdi
   14000a7a1:	mov    QWORD PTR [rcx+0x30],rdi
   14000a7a5:	mov    QWORD PTR [rcx+0x38],rdi
   14000a7a9:	mov    QWORD PTR [rcx+0x40],rdi
   14000a7ad:	mov    QWORD PTR [rcx+0x48],rdi
   14000a7b1:	mov    QWORD PTR [rcx+0x50],0x400
   14000a7b9:	mov    DWORD PTR [rcx+0x58],edi
   14000a7bc:	mov    QWORD PTR [rcx+0x60],rdi
   14000a7c0:	cmp    QWORD PTR [rcx+0x18],rdi
   14000a7c4:	jne    0x14000a7f2
   14000a7c6:	lea    ecx,[rax+0x28]
   14000a7c9:	call   0x140026118
   14000a7ce:	mov    QWORD PTR [rsp+0x58],rax
   14000a7d3:	mov    QWORD PTR [rax],rdi
   14000a7d6:	mov    QWORD PTR [rax+0x8],0x10000
   14000a7de:	mov    QWORD PTR [rax+0x10],rdi
   14000a7e2:	mov    QWORD PTR [rax+0x18],rdi
   14000a7e6:	mov    QWORD PTR [rax+0x20],rdi
   14000a7ea:	mov    QWORD PTR [rbx+0x18],rax
   14000a7ee:	mov    QWORD PTR [rbx+0x20],rax
   14000a7f2:	mov    rax,rbx
   14000a7f5:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a7fa:	add    rsp,0x30
   14000a7fe:	pop    rdi
   14000a7ff:	ret    
   14000a800:	rex push rbx
   14000a802:	sub    rsp,0x20
   14000a806:	mov    rbx,QWORD PTR [rcx]
   14000a809:	test   rbx,rbx
   14000a80c:	je     0x14000a823
   14000a80e:	mov    rcx,rbx
   14000a811:	call   0x14000bff0
   14000a816:	mov    edx,0x30
   14000a81b:	mov    rcx,rbx
   14000a81e:	call   0x140026804
   14000a823:	add    rsp,0x20
   14000a827:	pop    rbx
   14000a828:	ret    
   14000a829:	int3   
   14000a82a:	int3   
   14000a82b:	int3   
   14000a82c:	rex push rbx
   14000a82e:	sub    rsp,0x20
   14000a832:	mov    rbx,QWORD PTR [rcx]
   14000a835:	test   rbx,rbx
   14000a838:	je     0x14000a854
   14000a83a:	xor    r8d,r8d
   14000a83d:	mov    dl,0x1
   14000a83f:	mov    rcx,rbx
   14000a842:	call   0x14000b6b0
   14000a847:	mov    edx,0x20
   14000a84c:	mov    rcx,rbx
   14000a84f:	call   0x140026804
   14000a854:	add    rsp,0x20
   14000a858:	pop    rbx
   14000a859:	ret    
   14000a85a:	int3   
   14000a85b:	int3   
   14000a85c:	rex push rbx
   14000a85e:	sub    rsp,0x20
   14000a862:	mov    rbx,rcx
   14000a865:	mov    rcx,QWORD PTR [rcx]
   14000a868:	test   rcx,rcx
   14000a86b:	je     0x14000a88d
   14000a86d:	mov    rdx,QWORD PTR [rbx+0x10]
   14000a871:	mov    r8d,0x1
   14000a877:	sub    rdx,rcx
   14000a87a:	call   0x140004804
   14000a87f:	and    QWORD PTR [rbx],0x0
   14000a883:	and    QWORD PTR [rbx+0x8],0x0
   14000a888:	and    QWORD PTR [rbx+0x10],0x0
   14000a88d:	add    rsp,0x20
   14000a891:	pop    rbx
   14000a892:	ret    
   14000a893:	int3   
   14000a894:	mov    QWORD PTR [rsp+0x8],rbx
   14000a899:	mov    QWORD PTR [rsp+0x10],rsi
   14000a89e:	mov    QWORD PTR [rsp+0x18],rdi
   14000a8a3:	push   r14
   14000a8a5:	sub    rsp,0x20
   14000a8a9:	xor    eax,eax
   14000a8ab:	mov    r14,rdx
   14000a8ae:	mov    QWORD PTR [rcx],rax
   14000a8b1:	mov    rsi,rcx
   14000a8b4:	mov    QWORD PTR [rcx+0x8],rax
   14000a8b8:	mov    QWORD PTR [rcx+0x10],rax
   14000a8bc:	mov    rbx,QWORD PTR [rdx+0x8]
   14000a8c0:	sub    rbx,QWORD PTR [rdx]
   14000a8c3:	mov    QWORD PTR [rcx],rax
   14000a8c6:	mov    QWORD PTR [rcx+0x8],rax
   14000a8ca:	mov    QWORD PTR [rcx+0x10],rax
   14000a8ce:	je     0x14000a931
   14000a8d0:	cmp    rbx,0x1000
   14000a8d7:	jb     0x14000a8f5
   14000a8d9:	lea    rcx,[rbx+0x27]
   14000a8dd:	cmp    rcx,rbx
   14000a8e0:	jbe    0x14000a94a
   14000a8e2:	call   0x140026118
   14000a8e7:	lea    rcx,[rax+0x27]
   14000a8eb:	and    rcx,0xffffffffffffffe0
   14000a8ef:	mov    QWORD PTR [rcx-0x8],rax
   14000a8f3:	jmp    0x14000a900
   14000a8f5:	mov    rcx,rbx
   14000a8f8:	call   0x140026118
   14000a8fd:	mov    rcx,rax
   14000a900:	mov    QWORD PTR [rsi],rcx
   14000a903:	mov    QWORD PTR [rsi+0x8],rcx
   14000a907:	mov    rcx,QWORD PTR [rsi]
   14000a90a:	add    rcx,rbx
   14000a90d:	mov    QWORD PTR [rsi+0x10],rcx
   14000a911:	mov    rdi,QWORD PTR [r14+0x8]
   14000a915:	sub    rdi,QWORD PTR [r14]
   14000a918:	mov    rbx,QWORD PTR [rsi]
   14000a91b:	mov    r8,rdi
   14000a91e:	mov    rdx,QWORD PTR [r14]
   14000a921:	mov    rcx,rbx
   14000a924:	call   0x140028fd0
   14000a929:	lea    rax,[rdi+rbx*1]
   14000a92d:	mov    QWORD PTR [rsi+0x8],rax
   14000a931:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a936:	mov    rax,rsi
   14000a939:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a93e:	mov    rdi,QWORD PTR [rsp+0x40]
   14000a943:	add    rsp,0x20
   14000a947:	pop    r14
   14000a949:	ret    
   14000a94a:	call   0x140027a0c
   14000a94f:	int3   
   14000a950:	rex push rbx
   14000a952:	sub    rsp,0x30
   14000a956:	and    DWORD PTR [rsp+0x20],0x0
   14000a95b:	mov    rbx,rdx
   14000a95e:	call   0x14000be7c
   14000a963:	mov    rax,rbx
   14000a966:	add    rsp,0x30
   14000a96a:	pop    rbx
   14000a96b:	ret    
   14000a96c:	rex push rbx
   14000a96e:	sub    rsp,0x20
   14000a972:	mov    rbx,rcx
   14000a975:	mov    rcx,QWORD PTR [rcx]
   14000a978:	test   rcx,rcx
   14000a97b:	je     0x14000a982
   14000a97d:	call   0x1400304c4
   14000a982:	and    QWORD PTR [rbx],0x0
   14000a986:	add    rsp,0x20
   14000a98a:	pop    rbx
   14000a98b:	ret    
   14000a98c:	xor    r8d,r8d
   14000a98f:	mov    dl,0x1
   14000a991:	jmp    0x14000b6b0
   14000a996:	int3   
   14000a997:	int3   
   14000a998:	rex push rbx
   14000a99a:	sub    rsp,0x20
   14000a99e:	mov    rdx,QWORD PTR [rcx+0x18]
   14000a9a2:	mov    rbx,rcx
   14000a9a5:	cmp    rdx,0x10
   14000a9a9:	jb     0x14000a9bc
   14000a9ab:	mov    rcx,QWORD PTR [rcx]
   14000a9ae:	inc    rdx
   14000a9b1:	mov    r8d,0x1
   14000a9b7:	call   0x140004804
   14000a9bc:	mov    QWORD PTR [rbx+0x18],0xf
   14000a9c4:	and    QWORD PTR [rbx+0x10],0x0
   14000a9c9:	cmp    QWORD PTR [rbx+0x18],0x10
   14000a9ce:	jb     0x14000a9d3
   14000a9d0:	mov    rbx,QWORD PTR [rbx]
   14000a9d3:	mov    BYTE PTR [rbx],0x0
   14000a9d6:	add    rsp,0x20
   14000a9da:	pop    rbx
   14000a9db:	ret    
   14000a9dc:	rex push rbx
   14000a9de:	sub    rsp,0x20
   14000a9e2:	mov    rax,QWORD PTR [rcx-0x88]
   14000a9e9:	mov    rbx,rcx
   14000a9ec:	movsxd rdx,DWORD PTR [rax+0x4]
   14000a9f0:	lea    rax,[rip+0x410e1]        # 0x14004bad8
   14000a9f7:	mov    QWORD PTR [rdx+rcx*1-0x88],rax
   14000a9ff:	mov    rax,QWORD PTR [rcx-0x88]
   14000aa06:	movsxd rdx,DWORD PTR [rax+0x4]
   14000aa0a:	lea    r8d,[rdx-0x88]
   14000aa11:	mov    DWORD PTR [rdx+rcx*1-0x8c],r8d
   14000aa19:	add    rcx,0xffffffffffffff80
   14000aa1d:	call   0x14000b0c4
   14000aa22:	mov    rax,QWORD PTR [rbx-0x88]
   14000aa29:	movsxd rcx,DWORD PTR [rax+0x4]
   14000aa2d:	lea    rax,[rip+0x40f94]        # 0x14004b9c8
   14000aa34:	mov    QWORD PTR [rcx+rbx*1-0x88],rax
   14000aa3c:	mov    rax,QWORD PTR [rbx-0x88]
   14000aa43:	movsxd rcx,DWORD PTR [rax+0x4]
   14000aa47:	lea    edx,[rcx-0x10]
   14000aa4a:	mov    DWORD PTR [rcx+rbx*1-0x8c],edx
   14000aa51:	add    rsp,0x20
   14000aa55:	pop    rbx
   14000aa56:	ret    
   14000aa57:	int3   
   14000aa58:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa5d:	mov    QWORD PTR [rsp+0x10],rdi
   14000aa62:	mov    rdi,QWORD PTR [rcx+0x40]
   14000aa66:	mov    rbx,rdx
   14000aa69:	mov    r10,QWORD PTR [r8+0x8]
   14000aa6d:	mov    r11,rcx
   14000aa70:	add    r10,QWORD PTR [r8]
   14000aa73:	mov    rax,QWORD PTR [rdi]
   14000aa76:	test   rax,rax
   14000aa79:	je     0x14000aa85
   14000aa7b:	cmp    QWORD PTR [rcx+0x68],rax
   14000aa7f:	jae    0x14000aa85
   14000aa81:	mov    QWORD PTR [rcx+0x68],rax
   14000aa85:	mov    rcx,QWORD PTR [rip+0x4421c]        # 0x14004eca8
   14000aa8c:	cmp    r10,rcx
   14000aa8f:	je     0x14000ab68
   14000aa95:	test   r9b,0x1
   14000aa99:	je     0x14000ab20
   14000aa9f:	mov    rax,QWORD PTR [r11+0x38]
   14000aaa3:	mov    r8,QWORD PTR [rax]
   14000aaa6:	test   r8,r8
   14000aaa9:	je     0x14000ab20
   14000aaab:	test   r10,r10
   14000aaae:	js     0x14000ab65
   14000aab4:	mov    rax,QWORD PTR [r11+0x18]
   14000aab8:	mov    rdx,QWORD PTR [rax]
   14000aabb:	mov    rax,QWORD PTR [r11+0x68]
   14000aabf:	sub    rax,rdx
   14000aac2:	sar    rax,1
   14000aac5:	cmp    r10,rax
   14000aac8:	jg     0x14000ab65
   14000aace:	mov    rax,QWORD PTR [r11+0x50]
   14000aad2:	sub    rdx,r8
   14000aad5:	sar    rdx,1
   14000aad8:	add    edx,r10d
   14000aadb:	sub    DWORD PTR [rax],edx
   14000aadd:	mov    rcx,QWORD PTR [r11+0x38]
   14000aae1:	movsxd rax,edx
   14000aae4:	add    rax,rax
   14000aae7:	add    QWORD PTR [rcx],rax
   14000aaea:	test   r9b,0x2
   14000aaee:	je     0x14000ab68
   14000aaf0:	mov    r9,QWORD PTR [r11+0x40]
   14000aaf4:	mov    r8,QWORD PTR [r9]
   14000aaf7:	test   r8,r8
   14000aafa:	je     0x14000ab68
   14000aafc:	mov    rax,QWORD PTR [r11+0x38]
   14000ab00:	mov    rdx,QWORD PTR [rax]
   14000ab03:	mov    rax,QWORD PTR [r11+0x58]
   14000ab07:	movsxd rcx,DWORD PTR [rax]
   14000ab0a:	mov    QWORD PTR [r9],rdx
   14000ab0d:	mov    rax,QWORD PTR [r11+0x58]
   14000ab11:	lea    r8,[r8+rcx*2]
   14000ab15:	sub    r8,rdx
   14000ab18:	sar    r8,1
   14000ab1b:	mov    DWORD PTR [rax],r8d
   14000ab1e:	jmp    0x14000ab68
   14000ab20:	test   r9b,0x2
   14000ab24:	je     0x14000ab65
   14000ab26:	cmp    QWORD PTR [rdi],0x0
   14000ab2a:	je     0x14000ab65
   14000ab2c:	test   r10,r10
   14000ab2f:	js     0x14000ab65
   14000ab31:	mov    rax,QWORD PTR [r11+0x18]
   14000ab35:	mov    rdx,QWORD PTR [rax]
   14000ab38:	mov    rax,QWORD PTR [r11+0x68]
   14000ab3c:	sub    rax,rdx
   14000ab3f:	sar    rax,1
   14000ab42:	cmp    r10,rax
   14000ab45:	jg     0x14000ab65
   14000ab47:	sub    rdx,QWORD PTR [rdi]
   14000ab4a:	mov    rax,QWORD PTR [r11+0x58]
   14000ab4e:	sar    rdx,1
   14000ab51:	add    edx,r10d
   14000ab54:	sub    DWORD PTR [rax],edx
   14000ab56:	mov    rcx,QWORD PTR [r11+0x40]
   14000ab5a:	movsxd rax,edx
   14000ab5d:	add    rax,rax
   14000ab60:	add    QWORD PTR [rcx],rax
   14000ab63:	jmp    0x14000ab68
   14000ab65:	mov    r10,rcx
   14000ab68:	and    QWORD PTR [rbx+0x8],0x0
   14000ab6d:	xor    eax,eax
   14000ab6f:	mov    rdi,QWORD PTR [rsp+0x10]
   14000ab74:	mov    QWORD PTR [rbx],r10
   14000ab77:	mov    QWORD PTR [rbx+0x10],rax
   14000ab7b:	mov    rax,rbx
   14000ab7e:	mov    rbx,QWORD PTR [rsp+0x8]
   14000ab83:	ret    
   14000ab84:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab89:	mov    QWORD PTR [rsp+0x10],rsi
   14000ab8e:	mov    QWORD PTR [rsp+0x18],rdi
   14000ab93:	mov    rdi,QWORD PTR [rcx+0x40]
   14000ab97:	mov    r10,r8
   14000ab9a:	mov    rbx,rdx
   14000ab9d:	mov    r11,rcx
   14000aba0:	mov    rax,QWORD PTR [rdi]
   14000aba3:	test   rax,rax
   14000aba6:	je     0x14000abb2
   14000aba8:	cmp    QWORD PTR [rcx+0x68],rax
   14000abac:	jae    0x14000abb2
   14000abae:	mov    QWORD PTR [rcx+0x68],rax
   14000abb2:	mov    r8d,DWORD PTR [rsp+0x28]
   14000abb7:	test   r8b,0x1
   14000abbb:	je     0x14000ac8e
   14000abc1:	mov    rax,QWORD PTR [rcx+0x38]
   14000abc5:	mov    rsi,QWORD PTR [rax]
   14000abc8:	test   rsi,rsi
   14000abcb:	je     0x14000ac8e
   14000abd1:	mov    rdi,QWORD PTR [rip+0x440d0]        # 0x14004eca8
   14000abd8:	cmp    r9d,0x2
   14000abdc:	jne    0x14000abe8
   14000abde:	mov    rax,QWORD PTR [rcx+0x18]
   14000abe2:	mov    rcx,QWORD PTR [rcx+0x68]
   14000abe6:	jmp    0x14000abfb
   14000abe8:	cmp    r9d,0x1
   14000abec:	jne    0x14000ac06
   14000abee:	test   r8b,0x2
   14000abf2:	jne    0x14000ac0b
   14000abf4:	mov    rax,QWORD PTR [rcx+0x18]
   14000abf8:	mov    rcx,rsi
   14000abfb:	sub    rcx,QWORD PTR [rax]
   14000abfe:	sar    rcx,1
   14000ac01:	add    r10,rcx
   14000ac04:	jmp    0x14000ac0e
   14000ac06:	test   r9d,r9d
   14000ac09:	je     0x14000ac0e
   14000ac0b:	mov    r10,rdi
   14000ac0e:	test   r10,r10
   14000ac11:	js     0x14000ac86
   14000ac13:	mov    rax,QWORD PTR [r11+0x18]
   14000ac17:	mov    rdx,QWORD PTR [rax]
   14000ac1a:	mov    rax,QWORD PTR [r11+0x68]
   14000ac1e:	sub    rax,rdx
   14000ac21:	sar    rax,1
   14000ac24:	cmp    r10,rax
   14000ac27:	jg     0x14000ac86
   14000ac29:	mov    rax,QWORD PTR [r11+0x50]
   14000ac2d:	sub    rdx,rsi
   14000ac30:	sar    rdx,1
   14000ac33:	add    edx,r10d
   14000ac36:	sub    DWORD PTR [rax],edx
   14000ac38:	mov    rcx,QWORD PTR [r11+0x38]
   14000ac3c:	movsxd rax,edx
   14000ac3f:	add    rax,rax
   14000ac42:	add    QWORD PTR [rcx],rax
   14000ac45:	test   r8b,0x2
   14000ac49:	je     0x14000ad19
   14000ac4f:	mov    r9,QWORD PTR [r11+0x40]
   14000ac53:	mov    r8,QWORD PTR [r9]
   14000ac56:	test   r8,r8
   14000ac59:	je     0x14000ad19
   14000ac5f:	mov    rax,QWORD PTR [r11+0x38]
   14000ac63:	mov    rdx,QWORD PTR [rax]
   14000ac66:	mov    rax,QWORD PTR [r11+0x58]
   14000ac6a:	movsxd rcx,DWORD PTR [rax]
   14000ac6d:	mov    QWORD PTR [r9],rdx
   14000ac70:	mov    rax,QWORD PTR [r11+0x58]
   14000ac74:	lea    r8,[r8+rcx*2]
   14000ac78:	sub    r8,rdx
   14000ac7b:	sar    r8,1
   14000ac7e:	mov    DWORD PTR [rax],r8d
   14000ac81:	jmp    0x14000ad19
   14000ac86:	mov    r10,rdi
   14000ac89:	jmp    0x14000ad19
   14000ac8e:	test   r8b,0x2
   14000ac92:	je     0x14000ad0e
   14000ac94:	cmp    QWORD PTR [rdi],0x0
   14000ac98:	je     0x14000ad0e
   14000ac9a:	mov    r8,QWORD PTR [rip+0x44007]        # 0x14004eca8
   14000aca1:	cmp    r9d,0x2
   14000aca5:	jne    0x14000acb1
   14000aca7:	mov    rax,QWORD PTR [rcx+0x18]
   14000acab:	mov    rcx,QWORD PTR [rcx+0x68]
   14000acaf:	jmp    0x14000acbe
   14000acb1:	cmp    r9d,0x1
   14000acb5:	jne    0x14000acc9
   14000acb7:	mov    rax,QWORD PTR [rcx+0x18]
   14000acbb:	mov    rcx,QWORD PTR [rdi]
   14000acbe:	sub    rcx,QWORD PTR [rax]
   14000acc1:	sar    rcx,1
   14000acc4:	add    r10,rcx
   14000acc7:	jmp    0x14000acd0
   14000acc9:	test   r9d,r9d
   14000accc:	cmovne r10,r8
   14000acd0:	test   r10,r10
   14000acd3:	js     0x14000ad09
   14000acd5:	mov    rax,QWORD PTR [r11+0x18]
   14000acd9:	mov    rdx,QWORD PTR [rax]
   14000acdc:	mov    rax,QWORD PTR [r11+0x68]
   14000ace0:	sub    rax,rdx
   14000ace3:	sar    rax,1
   14000ace6:	cmp    r10,rax
   14000ace9:	jg     0x14000ad09
   14000aceb:	sub    rdx,QWORD PTR [rdi]
   14000acee:	mov    rax,QWORD PTR [r11+0x58]
   14000acf2:	sar    rdx,1
   14000acf5:	add    edx,r10d
   14000acf8:	sub    DWORD PTR [rax],edx
   14000acfa:	mov    rcx,QWORD PTR [r11+0x40]
   14000acfe:	movsxd rax,edx
   14000ad01:	add    rax,rax
   14000ad04:	add    QWORD PTR [rcx],rax
   14000ad07:	jmp    0x14000ad19
   14000ad09:	mov    r10,r8
   14000ad0c:	jmp    0x14000ad19
   14000ad0e:	test   r10,r10
   14000ad11:	cmovne r10,QWORD PTR [rip+0x43f8f]        # 0x14004eca8
   14000ad19:	and    QWORD PTR [rbx+0x8],0x0
   14000ad1e:	xor    eax,eax
   14000ad20:	mov    rsi,QWORD PTR [rsp+0x10]
   14000ad25:	mov    rdi,QWORD PTR [rsp+0x18]
   14000ad2a:	mov    QWORD PTR [rbx],r10
   14000ad2d:	mov    QWORD PTR [rbx+0x10],rax
   14000ad31:	mov    rax,rbx
   14000ad34:	mov    rbx,QWORD PTR [rsp+0x8]
   14000ad39:	ret    
   14000ad3a:	int3   
   14000ad3b:	int3   
   14000ad3c:	mov    r10,QWORD PTR [rcx+0x38]
   14000ad40:	mov    r8,rcx
   14000ad43:	mov    r9,QWORD PTR [r10]
   14000ad46:	test   r9,r9
   14000ad49:	je     0x14000ada0
   14000ad4b:	mov    r11,QWORD PTR [rcx+0x50]
   14000ad4f:	movsxd rcx,DWORD PTR [r11]
   14000ad52:	lea    rdx,[r9+rcx*2]
   14000ad56:	cmp    r9,rdx
   14000ad59:	jae    0x14000ad60
   14000ad5b:	movzx  eax,WORD PTR [r9]
   14000ad5f:	ret    
   14000ad60:	test   BYTE PTR [r8+0x70],0x4
   14000ad65:	jne    0x14000ada0
   14000ad67:	mov    rax,QWORD PTR [r8+0x40]
   14000ad6b:	mov    rcx,QWORD PTR [rax]
   14000ad6e:	test   rcx,rcx
   14000ad71:	je     0x14000ada0
   14000ad73:	cmp    rcx,r9
   14000ad76:	ja     0x14000ad7e
   14000ad78:	cmp    QWORD PTR [r8+0x68],r9
   14000ad7c:	jbe    0x14000ada0
   14000ad7e:	cmp    QWORD PTR [r8+0x68],rcx
   14000ad82:	jae    0x14000ad88
   14000ad84:	mov    QWORD PTR [r8+0x68],rcx
   14000ad88:	mov    rax,QWORD PTR [r8+0x68]
   14000ad8c:	sub    rax,QWORD PTR [r10]
   14000ad8f:	sar    rax,1
   14000ad92:	mov    DWORD PTR [r11],eax
   14000ad95:	mov    rax,QWORD PTR [r8+0x38]
   14000ad99:	mov    rcx,QWORD PTR [rax]
   14000ad9c:	movzx  eax,WORD PTR [rcx]
   14000ad9f:	ret    
   14000ada0:	mov    eax,0xffff
   14000ada5:	ret    
   14000ada6:	int3   
   14000ada7:	int3   
   14000ada8:	mov    rax,QWORD PTR [rcx+0x38]
   14000adac:	xor    r10d,r10d
   14000adaf:	mov    r9d,0xffff
   14000adb5:	mov    r8,QWORD PTR [rax]
   14000adb8:	test   r8,r8
   14000adbb:	je     0x14000ae00
   14000adbd:	mov    rax,QWORD PTR [rcx+0x18]
   14000adc1:	cmp    r8,QWORD PTR [rax]
   14000adc4:	jbe    0x14000ae00
   14000adc6:	cmp    r9w,dx
   14000adca:	je     0x14000add9
   14000adcc:	cmp    dx,WORD PTR [r8-0x2]
   14000add1:	je     0x14000add9
   14000add3:	test   BYTE PTR [rcx+0x70],0x2
   14000add7:	jne    0x14000ae00
   14000add9:	mov    rax,QWORD PTR [rcx+0x50]
   14000addd:	inc    DWORD PTR [rax]
   14000addf:	mov    rax,QWORD PTR [rcx+0x38]
   14000ade3:	add    QWORD PTR [rax],0xfffffffffffffffe
   14000ade7:	cmp    dx,r9w
   14000adeb:	je     0x14000adf7
   14000aded:	mov    rax,QWORD PTR [rcx+0x38]
   14000adf1:	mov    rcx,QWORD PTR [rax]
   14000adf4:	mov    WORD PTR [rcx],dx
   14000adf7:	cmove  dx,r10w
   14000adfc:	movzx  eax,dx
   14000adff:	ret    
   14000ae00:	movzx  eax,r9w
   14000ae04:	ret    
   14000ae05:	int3   
   14000ae06:	int3   
   14000ae07:	int3   
   14000ae08:	mov    rax,rsp
   14000ae0b:	mov    QWORD PTR [rax+0x8],rbx
   14000ae0f:	mov    QWORD PTR [rax+0x10],rbp
   14000ae13:	mov    QWORD PTR [rax+0x18],rsi
   14000ae17:	mov    QWORD PTR [rax+0x20],rdi
   14000ae1b:	push   r12
   14000ae1d:	push   r14
   14000ae1f:	push   r15
   14000ae21:	sub    rsp,0x20
   14000ae25:	test   BYTE PTR [rcx+0x70],0x2
   14000ae29:	movzx  ebp,dx
   14000ae2c:	mov    rbx,rcx
   14000ae2f:	je     0x14000ae3b
   14000ae31:	mov    eax,0xffff
   14000ae36:	jmp    0x14000b098
   14000ae3b:	mov    r8d,0xffff
   14000ae41:	xor    esi,esi
   14000ae43:	cmp    r8w,bp
   14000ae47:	jne    0x14000ae51
   14000ae49:	movzx  eax,si
   14000ae4c:	jmp    0x14000b098
   14000ae51:	test   BYTE PTR [rcx+0x70],0x8
   14000ae55:	je     0x14000ae86
   14000ae57:	mov    r10,QWORD PTR [rcx+0x40]
   14000ae5b:	mov    rdx,QWORD PTR [r10]
   14000ae5e:	test   rdx,rdx
   14000ae61:	je     0x14000ae86
   14000ae63:	mov    r9,QWORD PTR [rcx+0x68]
   14000ae67:	cmp    rdx,r9
   14000ae6a:	jae    0x14000ae86
   14000ae6c:	mov    rax,QWORD PTR [rcx+0x58]
   14000ae70:	movsxd rcx,DWORD PTR [rax]
   14000ae73:	mov    QWORD PTR [r10],r9
   14000ae76:	mov    rax,QWORD PTR [rbx+0x58]
   14000ae7a:	lea    rdx,[rdx+rcx*2]
   14000ae7e:	sub    rdx,r9
   14000ae81:	sar    rdx,1
   14000ae84:	mov    DWORD PTR [rax],edx
   14000ae86:	mov    rax,QWORD PTR [rbx+0x40]
   14000ae8a:	mov    rdx,QWORD PTR [rax]
   14000ae8d:	test   rdx,rdx
   14000ae90:	je     0x14000aeb3
   14000ae92:	mov    r9,QWORD PTR [rbx+0x58]
   14000ae96:	movsxd r10,DWORD PTR [r9]
   14000ae99:	lea    rcx,[rdx+r10*2]
   14000ae9d:	cmp    rdx,rcx
   14000aea0:	jae    0x14000aeae
   14000aea2:	lea    eax,[r10-0x1]
   14000aea6:	mov    DWORD PTR [r9],eax
   14000aea9:	jmp    0x14000b084
   14000aeae:	test   rdx,rdx
   14000aeb1:	jne    0x14000aeb8
   14000aeb3:	mov    r14,rsi
   14000aeb6:	jmp    0x14000aecf
   14000aeb8:	mov    rax,QWORD PTR [rbx+0x58]
   14000aebc:	movsxd r14,DWORD PTR [rax]
   14000aebf:	mov    rax,QWORD PTR [rbx+0x18]
   14000aec3:	add    r14,r14
   14000aec6:	sub    r14,QWORD PTR [rax]
   14000aec9:	add    r14,rdx
   14000aecc:	sar    r14,1
   14000aecf:	mov    rcx,r14
   14000aed2:	mov    eax,0x20
   14000aed7:	shr    rcx,1
   14000aeda:	cmp    rcx,rax
   14000aedd:	jb     0x14000aee7
   14000aedf:	mov    rax,rcx
   14000aee2:	test   rcx,rcx
   14000aee5:	je     0x14000aef9
   14000aee7:	mov    ecx,0x7fffffff
   14000aeec:	sub    rcx,rax
   14000aeef:	cmp    rcx,r14
   14000aef2:	jae    0x14000aef9
   14000aef4:	shr    rax,1
   14000aef7:	jne    0x14000aee7
   14000aef9:	test   rax,rax
   14000aefc:	jne    0x14000af07
   14000aefe:	movzx  eax,r8w
   14000af02:	jmp    0x14000b098
   14000af07:	lea    r15,[rax+r14*1]
   14000af0b:	test   r15,r15
   14000af0e:	jne    0x14000af15
   14000af10:	mov    rdi,rsi
   14000af13:	jmp    0x14000af60
   14000af15:	movabs rax,0x7fffffffffffffff
   14000af1f:	cmp    r15,rax
   14000af22:	ja     0x14000b0b7
   14000af28:	lea    rcx,[r15+r15*1]
   14000af2c:	cmp    rcx,0x1000
   14000af33:	jb     0x14000af58
   14000af35:	lea    rax,[rcx+0x27]
   14000af39:	cmp    rax,rcx
   14000af3c:	jbe    0x14000b0bd
   14000af42:	mov    rcx,rax
   14000af45:	call   0x140026118
   14000af4a:	lea    rdi,[rax+0x27]
   14000af4e:	and    rdi,0xffffffffffffffe0
   14000af52:	mov    QWORD PTR [rdi-0x8],rax
   14000af56:	jmp    0x14000af60
   14000af58:	call   0x140026118
   14000af5d:	mov    rdi,rax
   14000af60:	mov    rcx,QWORD PTR [rbx+0x18]
   14000af64:	mov    r12,QWORD PTR [rcx]
   14000af67:	test   r14,r14
   14000af6a:	je     0x14000af80
   14000af6c:	lea    r8,[r14+r14*1]
   14000af70:	mov    rdx,r12
   14000af73:	mov    rcx,rdi
   14000af76:	call   0x140028fd0
   14000af7b:	test   r14,r14
   14000af7e:	jne    0x14000afbc
   14000af80:	mov    rax,QWORD PTR [rbx+0x20]
   14000af84:	mov    QWORD PTR [rbx+0x68],rdi
   14000af88:	mov    QWORD PTR [rax],rdi
   14000af8b:	mov    rax,QWORD PTR [rbx+0x40]
   14000af8f:	mov    QWORD PTR [rax],rdi
   14000af92:	mov    rax,QWORD PTR [rbx+0x58]
   14000af96:	mov    DWORD PTR [rax],r15d
   14000af99:	mov    rax,QWORD PTR [rbx+0x18]
   14000af9d:	test   BYTE PTR [rbx+0x70],0x4
   14000afa1:	mov    QWORD PTR [rax],rdi
   14000afa4:	mov    rax,QWORD PTR [rbx+0x38]
   14000afa8:	jne    0x14000b01e
   14000afaa:	mov    QWORD PTR [rax],rdi
   14000afad:	mov    rax,QWORD PTR [rbx+0x50]
   14000afb1:	mov    DWORD PTR [rax],0x1
   14000afb7:	jmp    0x14000b063
   14000afbc:	mov    rax,QWORD PTR [rbx+0x68]
   14000afc0:	sub    rax,r12
   14000afc3:	sar    rax,1
   14000afc6:	lea    rax,[rdi+rax*2]
   14000afca:	mov    QWORD PTR [rbx+0x68],rax
   14000afce:	mov    rax,QWORD PTR [rbx+0x40]
   14000afd2:	mov    rcx,QWORD PTR [rax]
   14000afd5:	sub    rcx,r12
   14000afd8:	sar    rcx,1
   14000afdb:	lea    rdx,[rdi+rcx*2]
   14000afdf:	mov    rcx,QWORD PTR [rbx+0x20]
   14000afe3:	mov    rax,QWORD PTR [rcx]
   14000afe6:	sub    rax,r12
   14000afe9:	sar    rax,1
   14000afec:	lea    rax,[rdi+rax*2]
   14000aff0:	mov    QWORD PTR [rcx],rax
   14000aff3:	lea    rcx,[r15+r15*1]
   14000aff7:	mov    rax,QWORD PTR [rbx+0x40]
   14000affb:	sub    rcx,rdx
   14000affe:	add    rcx,rdi
   14000b001:	sar    rcx,1
   14000b004:	mov    QWORD PTR [rax],rdx
   14000b007:	mov    rax,QWORD PTR [rbx+0x58]
   14000b00b:	mov    DWORD PTR [rax],ecx
   14000b00d:	test   BYTE PTR [rbx+0x70],0x4
   14000b011:	je     0x14000b02c
   14000b013:	mov    rax,QWORD PTR [rbx+0x18]
   14000b017:	mov    QWORD PTR [rax],rdi
   14000b01a:	mov    rax,QWORD PTR [rbx+0x38]
   14000b01e:	mov    QWORD PTR [rax],rsi
   14000b021:	mov    rax,QWORD PTR [rbx+0x50]
   14000b025:	sar    rdi,1
   14000b028:	mov    DWORD PTR [rax],edi
   14000b02a:	jmp    0x14000b063
   14000b02c:	mov    rax,QWORD PTR [rbx+0x40]
   14000b030:	mov    r10,QWORD PTR [rax]
   14000b033:	mov    rax,QWORD PTR [rbx+0x38]
   14000b037:	mov    rcx,QWORD PTR [rax]
   14000b03a:	mov    rax,QWORD PTR [rbx+0x18]
   14000b03e:	sub    rcx,r12
   14000b041:	sar    rcx,1
   14000b044:	mov    QWORD PTR [rax],rdi
   14000b047:	mov    rax,QWORD PTR [rbx+0x38]
   14000b04b:	lea    r9,[rdi+rcx*2]
   14000b04f:	sub    r10,r9
   14000b052:	add    r10,0x2
   14000b056:	sar    r10,1
   14000b059:	mov    QWORD PTR [rax],r9
   14000b05c:	mov    rax,QWORD PTR [rbx+0x50]
   14000b060:	mov    DWORD PTR [rax],r10d
   14000b063:	test   BYTE PTR [rbx+0x70],0x1
   14000b067:	je     0x14000b07a
   14000b069:	mov    r8d,0x2
   14000b06f:	mov    rdx,r14
   14000b072:	mov    rcx,r12
   14000b075:	call   0x140004804
   14000b07a:	mov    rax,QWORD PTR [rbx+0x58]
   14000b07e:	or     DWORD PTR [rbx+0x70],0x1
   14000b082:	dec    DWORD PTR [rax]
   14000b084:	mov    rcx,QWORD PTR [rbx+0x40]
   14000b088:	mov    rdx,QWORD PTR [rcx]
   14000b08b:	lea    rax,[rdx+0x2]
   14000b08f:	mov    QWORD PTR [rcx],rax
   14000b092:	movzx  eax,bp
   14000b095:	mov    WORD PTR [rdx],bp
   14000b098:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b09d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b0a2:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b0a7:	mov    rdi,QWORD PTR [rsp+0x58]
   14000b0ac:	add    rsp,0x20
   14000b0b0:	pop    r15
   14000b0b2:	pop    r14
   14000b0b4:	pop    r12
   14000b0b6:	ret    
   14000b0b7:	call   0x140027a0c
   14000b0bc:	int3   
   14000b0bd:	call   0x140027a0c
   14000b0c2:	int3   
   14000b0c3:	int3   
   14000b0c4:	rex push rbx
   14000b0c6:	sub    rsp,0x30
   14000b0ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b0d3:	mov    rbx,rcx
   14000b0d6:	lea    rax,[rip+0x4097b]        # 0x14004ba58
   14000b0dd:	mov    QWORD PTR [rcx],rax
   14000b0e0:	call   0x14000bf64
   14000b0e5:	nop
   14000b0e6:	lea    rax,[rip+0x408eb]        # 0x14004b9d8
   14000b0ed:	mov    QWORD PTR [rbx],rax
   14000b0f0:	mov    rbx,QWORD PTR [rbx+0x60]
   14000b0f4:	test   rbx,rbx
   14000b0f7:	je     0x14000b12b
   14000b0f9:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b0fd:	test   rcx,rcx
   14000b100:	je     0x14000b11d
   14000b102:	mov    rax,QWORD PTR [rcx]
   14000b105:	call   QWORD PTR [rax+0x10]
   14000b108:	nop
   14000b109:	test   rax,rax
   14000b10c:	je     0x14000b11d
   14000b10e:	mov    r8,QWORD PTR [rax]
   14000b111:	mov    edx,0x1
   14000b116:	mov    rcx,rax
   14000b119:	call   QWORD PTR [r8]
   14000b11c:	nop
   14000b11d:	mov    edx,0x10
   14000b122:	mov    rcx,rbx
   14000b125:	call   0x140026804
   14000b12a:	nop
   14000b12b:	add    rsp,0x30
   14000b12f:	pop    rbx
   14000b130:	ret    
   14000b131:	int3   
   14000b132:	int3   
   14000b133:	int3   
   14000b134:	mov    rax,QWORD PTR [rcx-0x10]
   14000b138:	movsxd rdx,DWORD PTR [rax+0x4]
   14000b13c:	lea    rax,[rip+0x40885]        # 0x14004b9c8
   14000b143:	mov    QWORD PTR [rdx+rcx*1-0x10],rax
   14000b148:	mov    rax,QWORD PTR [rcx-0x10]
   14000b14c:	movsxd rdx,DWORD PTR [rax+0x4]
   14000b150:	lea    r8d,[rdx-0x10]
   14000b154:	mov    DWORD PTR [rdx+rcx*1-0x14],r8d
   14000b159:	ret    
   14000b15a:	int3   
   14000b15b:	int3   
   14000b15c:	xor    eax,eax
   14000b15e:	ret    
   14000b15f:	int3   
   14000b160:	mov    rax,rcx
   14000b163:	ret    
   14000b164:	mov    rax,QWORD PTR [rip+0x43b3d]        # 0x14004eca8
   14000b16b:	and    QWORD PTR [rdx+0x8],0x0
   14000b170:	mov    QWORD PTR [rdx],rax
   14000b173:	xor    eax,eax
   14000b175:	mov    QWORD PTR [rdx+0x10],rax
   14000b179:	mov    rax,rdx
   14000b17c:	ret    
   14000b17d:	int3   
   14000b17e:	int3   
   14000b17f:	int3   
   14000b180:	mov    rax,rsp
   14000b183:	mov    QWORD PTR [rax+0x8],rbx
   14000b187:	mov    QWORD PTR [rax+0x10],rsi
   14000b18b:	mov    QWORD PTR [rax+0x18],rdi
   14000b18f:	mov    QWORD PTR [rax+0x20],r14
   14000b193:	push   r15
   14000b195:	sub    rsp,0x20
   14000b199:	xor    esi,esi
   14000b19b:	mov    rdi,r8
   14000b19e:	mov    r15,rdx
   14000b1a1:	mov    r14,rcx
   14000b1a4:	test   r8,r8
   14000b1a7:	jle    0x14000b22d
   14000b1ad:	mov    rax,QWORD PTR [r14+0x40]
   14000b1b1:	mov    r9,QWORD PTR [rax]
   14000b1b4:	test   r9,r9
   14000b1b7:	je     0x14000b1c1
   14000b1b9:	mov    rax,QWORD PTR [r14+0x58]
   14000b1bd:	mov    ecx,DWORD PTR [rax]
   14000b1bf:	jmp    0x14000b1c3
   14000b1c1:	xor    ecx,ecx
   14000b1c3:	movsxd rbx,ecx
   14000b1c6:	test   ecx,ecx
   14000b1c8:	jle    0x14000b203
   14000b1ca:	cmp    rdi,rbx
   14000b1cd:	cmovl  rbx,rdi
   14000b1d1:	test   rbx,rbx
   14000b1d4:	je     0x14000b1e5
   14000b1d6:	lea    r8,[rbx+rbx*1]
   14000b1da:	mov    rdx,r15
   14000b1dd:	mov    rcx,r9
   14000b1e0:	call   0x140028fd0
   14000b1e5:	mov    rax,QWORD PTR [r14+0x58]
   14000b1e9:	add    rsi,rbx
   14000b1ec:	sub    rdi,rbx
   14000b1ef:	sub    DWORD PTR [rax],ebx
   14000b1f1:	mov    rcx,QWORD PTR [r14+0x40]
   14000b1f5:	movsxd rax,ebx
   14000b1f8:	add    rax,rax
   14000b1fb:	add    QWORD PTR [rcx],rax
   14000b1fe:	add    rbx,rbx
   14000b201:	jmp    0x14000b225
   14000b203:	mov    rax,QWORD PTR [r14]
   14000b206:	mov    rcx,r14
   14000b209:	movzx  edx,WORD PTR [r15]
   14000b20d:	call   QWORD PTR [rax+0x18]
   14000b210:	mov    ecx,0xffff
   14000b215:	cmp    cx,ax
   14000b218:	je     0x14000b22d
   14000b21a:	inc    rsi
   14000b21d:	mov    ebx,0x2
   14000b222:	dec    rdi
   14000b225:	add    r15,rbx
   14000b228:	test   rdi,rdi
   14000b22b:	jg     0x14000b1ad
   14000b22d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b232:	mov    rax,rsi
   14000b235:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b23a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b23f:	mov    r14,QWORD PTR [rsp+0x48]
   14000b244:	add    rsp,0x20
   14000b248:	pop    r15
   14000b24a:	ret    
   14000b24b:	int3   
   14000b24c:	mov    rax,rsp
   14000b24f:	mov    QWORD PTR [rax+0x8],rbx
   14000b253:	mov    QWORD PTR [rax+0x10],rsi
   14000b257:	mov    QWORD PTR [rax+0x18],rdi
   14000b25b:	mov    QWORD PTR [rax+0x20],r14
   14000b25f:	push   r15
   14000b261:	sub    rsp,0x20
   14000b265:	xor    esi,esi
   14000b267:	mov    rdi,r8
   14000b26a:	mov    r15,rdx
   14000b26d:	mov    r14,rcx
   14000b270:	test   r8,r8
   14000b273:	jle    0x14000b2f2
   14000b275:	mov    rax,QWORD PTR [r14+0x38]
   14000b279:	mov    rdx,QWORD PTR [rax]
   14000b27c:	test   rdx,rdx
   14000b27f:	je     0x14000b289
   14000b281:	mov    rax,QWORD PTR [r14+0x50]
   14000b285:	mov    ecx,DWORD PTR [rax]
   14000b287:	jmp    0x14000b28b
   14000b289:	xor    ecx,ecx
   14000b28b:	movsxd rbx,ecx
   14000b28e:	test   ecx,ecx
   14000b290:	jle    0x14000b2c8
   14000b292:	cmp    rdi,rbx
   14000b295:	cmovl  rbx,rdi
   14000b299:	test   rbx,rbx
   14000b29c:	je     0x14000b2aa
   14000b29e:	lea    r8,[rbx+rbx*1]
   14000b2a2:	mov    rcx,r15
   14000b2a5:	call   0x140028fd0
   14000b2aa:	mov    rax,QWORD PTR [r14+0x50]
   14000b2ae:	add    rsi,rbx
   14000b2b1:	sub    rdi,rbx
   14000b2b4:	sub    DWORD PTR [rax],ebx
   14000b2b6:	mov    rcx,QWORD PTR [r14+0x38]
   14000b2ba:	movsxd rax,ebx
   14000b2bd:	add    rax,rax
   14000b2c0:	add    QWORD PTR [rcx],rax
   14000b2c3:	add    rbx,rbx
   14000b2c6:	jmp    0x14000b2ea
   14000b2c8:	mov    rax,QWORD PTR [r14]
   14000b2cb:	mov    rcx,r14
   14000b2ce:	call   QWORD PTR [rax+0x38]
   14000b2d1:	mov    ecx,0xffff
   14000b2d6:	cmp    cx,ax
   14000b2d9:	je     0x14000b2f2
   14000b2db:	inc    rsi
   14000b2de:	mov    WORD PTR [r15],ax
   14000b2e2:	dec    rdi
   14000b2e5:	mov    ebx,0x2
   14000b2ea:	add    r15,rbx
   14000b2ed:	test   rdi,rdi
   14000b2f0:	jg     0x14000b275
   14000b2f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2f7:	mov    rax,rsi
   14000b2fa:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b2ff:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b304:	mov    r14,QWORD PTR [rsp+0x48]
   14000b309:	add    rsp,0x20
   14000b30d:	pop    r15
   14000b30f:	ret    
   14000b310:	rex push rbx
   14000b312:	sub    rsp,0x20
   14000b316:	mov    rax,QWORD PTR [rcx]
   14000b319:	mov    rbx,rcx
   14000b31c:	call   QWORD PTR [rax+0x30]
   14000b31f:	mov    edx,0xffff
   14000b324:	cmp    dx,ax
   14000b327:	je     0x14000b340
   14000b329:	mov    rax,QWORD PTR [rbx+0x50]
   14000b32d:	dec    DWORD PTR [rax]
   14000b32f:	mov    rcx,QWORD PTR [rbx+0x38]
   14000b333:	mov    rdx,QWORD PTR [rcx]
   14000b336:	lea    rax,[rdx+0x2]
   14000b33a:	mov    QWORD PTR [rcx],rax
   14000b33d:	movzx  edx,WORD PTR [rdx]
   14000b340:	movzx  eax,dx
   14000b343:	add    rsp,0x20
   14000b347:	pop    rbx
   14000b348:	ret    
   14000b349:	int3   
   14000b34a:	int3   
   14000b34b:	int3   
   14000b34c:	mov    eax,0xffff
   14000b351:	ret    
   14000b352:	int3   
   14000b353:	int3   
   14000b354:	rex push rbx
   14000b356:	sub    rsp,0x30
   14000b35a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b363:	lea    rax,[rip+0x4066e]        # 0x14004b9d8
   14000b36a:	mov    QWORD PTR [rcx],rax
   14000b36d:	mov    rbx,QWORD PTR [rcx+0x60]
   14000b371:	test   rbx,rbx
   14000b374:	je     0x14000b3a8
   14000b376:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b37a:	test   rcx,rcx
   14000b37d:	je     0x14000b39a
   14000b37f:	mov    rax,QWORD PTR [rcx]
   14000b382:	call   QWORD PTR [rax+0x10]
   14000b385:	nop
   14000b386:	test   rax,rax
   14000b389:	je     0x14000b39a
   14000b38b:	mov    r8,QWORD PTR [rax]
   14000b38e:	mov    edx,0x1
   14000b393:	mov    rcx,rax
   14000b396:	call   QWORD PTR [r8]
   14000b399:	nop
   14000b39a:	mov    edx,0x10
   14000b39f:	mov    rcx,rbx
   14000b3a2:	call   0x140026804
   14000b3a7:	nop
   14000b3a8:	add    rsp,0x30
   14000b3ac:	pop    rbx
   14000b3ad:	ret    
   14000b3ae:	int3   
   14000b3af:	int3   
   14000b3b0:	sub    rsp,0x38
   14000b3b4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b3bd:	lea    rax,[rip+0x40554]        # 0x14004b918
   14000b3c4:	mov    QWORD PTR [rcx],rax
   14000b3c7:	call   0x140027b0c
   14000b3cc:	nop
   14000b3cd:	add    rsp,0x38
   14000b3d1:	ret    
   14000b3d2:	int3   
   14000b3d3:	int3   
   14000b3d4:	rex push rdi
   14000b3d6:	sub    rsp,0x30
   14000b3da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b3e3:	mov    QWORD PTR [rsp+0x40],rbx
   14000b3e8:	mov    ebx,edx
   14000b3ea:	lea    rdi,[rcx-0x88]
   14000b3f1:	call   0x14000a9dc
   14000b3f6:	nop
   14000b3f7:	lea    rcx,[rdi+0x88]
   14000b3fe:	lea    rax,[rip+0x40513]        # 0x14004b918
   14000b405:	mov    QWORD PTR [rcx],rax
   14000b408:	call   0x140027b0c
   14000b40d:	nop
   14000b40e:	test   bl,0x1
   14000b411:	je     0x14000b421
   14000b413:	mov    edx,0xe8
   14000b418:	mov    rcx,rdi
   14000b41b:	call   0x140026804
   14000b420:	nop
   14000b421:	mov    rax,rdi
   14000b424:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b429:	add    rsp,0x30
   14000b42d:	pop    rdi
   14000b42e:	ret    
   14000b42f:	int3   
   14000b430:	mov    QWORD PTR [rsp+0x8],rbx
   14000b435:	push   rdi
   14000b436:	sub    rsp,0x20
   14000b43a:	mov    ebx,edx
   14000b43c:	mov    rdi,rcx
   14000b43f:	call   0x14000b0c4
   14000b444:	test   bl,0x1
   14000b447:	je     0x14000b456
   14000b449:	mov    edx,0x78
   14000b44e:	mov    rcx,rdi
   14000b451:	call   0x140026804
   14000b456:	mov    rax,rdi
   14000b459:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b45e:	add    rsp,0x20
   14000b462:	pop    rdi
   14000b463:	ret    
   14000b464:	rex push rdi
   14000b466:	sub    rsp,0x30
   14000b46a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b473:	mov    QWORD PTR [rsp+0x40],rbx
   14000b478:	mov    ebx,edx
   14000b47a:	lea    rdi,[rcx-0x10]
   14000b47e:	mov    rax,QWORD PTR [rdi]
   14000b481:	movsxd r8,DWORD PTR [rax+0x4]
   14000b485:	lea    rax,[rip+0x4053c]        # 0x14004b9c8
   14000b48c:	mov    QWORD PTR [r8+rcx*1-0x10],rax
   14000b491:	mov    rax,QWORD PTR [rdi]
   14000b494:	movsxd r8,DWORD PTR [rax+0x4]
   14000b498:	lea    r9d,[r8-0x10]
   14000b49c:	mov    DWORD PTR [r8+rcx*1-0x14],r9d
   14000b4a1:	lea    rax,[rip+0x40470]        # 0x14004b918
   14000b4a8:	mov    QWORD PTR [rcx],rax
   14000b4ab:	call   0x140027b0c
   14000b4b0:	nop
   14000b4b1:	test   bl,0x1
   14000b4b4:	je     0x14000b4c4
   14000b4b6:	mov    edx,0x70
   14000b4bb:	mov    rcx,rdi
   14000b4be:	call   0x140026804
   14000b4c3:	nop
   14000b4c4:	mov    rax,rdi
   14000b4c7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b4cc:	add    rsp,0x30
   14000b4d0:	pop    rdi
   14000b4d1:	ret    
   14000b4d2:	int3   
   14000b4d3:	int3   
   14000b4d4:	rex push rdi
   14000b4d6:	sub    rsp,0x30
   14000b4da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b4e3:	mov    QWORD PTR [rsp+0x40],rbx
   14000b4e8:	mov    QWORD PTR [rsp+0x48],rsi
   14000b4ed:	mov    esi,edx
   14000b4ef:	mov    rbx,rcx
   14000b4f2:	lea    rax,[rip+0x404df]        # 0x14004b9d8
   14000b4f9:	mov    QWORD PTR [rcx],rax
   14000b4fc:	mov    rdi,QWORD PTR [rcx+0x60]
   14000b500:	test   rdi,rdi
   14000b503:	je     0x14000b537
   14000b505:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b509:	test   rcx,rcx
   14000b50c:	je     0x14000b529
   14000b50e:	mov    rax,QWORD PTR [rcx]
   14000b511:	call   QWORD PTR [rax+0x10]
   14000b514:	nop
   14000b515:	test   rax,rax
   14000b518:	je     0x14000b529
   14000b51a:	mov    r8,QWORD PTR [rax]
   14000b51d:	mov    edx,0x1
   14000b522:	mov    rcx,rax
   14000b525:	call   QWORD PTR [r8]
   14000b528:	nop
   14000b529:	mov    edx,0x10
   14000b52e:	mov    rcx,rdi
   14000b531:	call   0x140026804
   14000b536:	nop
   14000b537:	test   sil,0x1
   14000b53b:	je     0x14000b54b
   14000b53d:	mov    edx,0x68
   14000b542:	mov    rcx,rbx
   14000b545:	call   0x140026804
   14000b54a:	nop
   14000b54b:	mov    rax,rbx
   14000b54e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b553:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b558:	add    rsp,0x30
   14000b55c:	pop    rdi
   14000b55d:	ret    
   14000b55e:	int3   
   14000b55f:	int3   
   14000b560:	rex push rdi
   14000b562:	sub    rsp,0x30
   14000b566:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b56f:	mov    QWORD PTR [rsp+0x40],rbx
   14000b574:	mov    edi,edx
   14000b576:	mov    rbx,rcx
   14000b579:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b57d:	test   rcx,rcx
   14000b580:	je     0x14000b59d
   14000b582:	mov    rax,QWORD PTR [rcx]
   14000b585:	call   QWORD PTR [rax+0x10]
   14000b588:	nop
   14000b589:	test   rax,rax
   14000b58c:	je     0x14000b59d
   14000b58e:	mov    r8,QWORD PTR [rax]
   14000b591:	mov    edx,0x1
   14000b596:	mov    rcx,rax
   14000b599:	call   QWORD PTR [r8]
   14000b59c:	nop
   14000b59d:	test   dil,0x1
   14000b5a1:	je     0x14000b5b1
   14000b5a3:	mov    edx,0x10
   14000b5a8:	mov    rcx,rbx
   14000b5ab:	call   0x140026804
   14000b5b0:	nop
   14000b5b1:	mov    rax,rbx
   14000b5b4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b5b9:	add    rsp,0x30
   14000b5bd:	pop    rdi
   14000b5be:	ret    
   14000b5bf:	int3   
   14000b5c0:	rex push rdi
   14000b5c2:	sub    rsp,0x30
   14000b5c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b5cf:	mov    QWORD PTR [rsp+0x40],rbx
   14000b5d4:	mov    ebx,edx
   14000b5d6:	mov    rdi,rcx
   14000b5d9:	lea    rax,[rip+0x40338]        # 0x14004b918
   14000b5e0:	mov    QWORD PTR [rcx],rax
   14000b5e3:	call   0x140027b0c
   14000b5e8:	nop
   14000b5e9:	test   bl,0x1
   14000b5ec:	je     0x14000b5fc
   14000b5ee:	mov    edx,0x60
   14000b5f3:	mov    rcx,rdi
   14000b5f6:	call   0x140026804
   14000b5fb:	nop
   14000b5fc:	mov    rax,rdi
   14000b5ff:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b604:	add    rsp,0x30
   14000b608:	pop    rdi
   14000b609:	ret    
   14000b60a:	int3   
   14000b60b:	int3   
   14000b60c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b611:	mov    QWORD PTR [rsp+0x10],rbp
   14000b616:	mov    QWORD PTR [rsp+0x18],rsi
   14000b61b:	push   rdi
   14000b61c:	sub    rsp,0x30
   14000b620:	mov    rbp,r8
   14000b623:	mov    rsi,rdx
   14000b626:	mov    rdi,rcx
   14000b629:	call   0x14000c054
   14000b62e:	test   al,al
   14000b630:	je     0x14000b656
   14000b632:	mov    rbx,QWORD PTR [rdi]
   14000b635:	mov    r9,rdi
   14000b638:	mov    al,BYTE PTR [rsp+0x58]
   14000b63c:	mov    rcx,rbx
   14000b63f:	mov    r8,rbp
   14000b642:	mov    BYTE PTR [rsp+0x20],al
   14000b646:	mov    rdx,rsi
   14000b649:	call   0x1400108d0
   14000b64e:	lea    rax,[rbx+rsi*2]
   14000b652:	mov    QWORD PTR [rdi+0x8],rax
   14000b656:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b65b:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b660:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b665:	add    rsp,0x30
   14000b669:	pop    rdi
   14000b66a:	ret    
   14000b66b:	int3   
   14000b66c:	rex push rbx
   14000b66e:	sub    rsp,0x30
   14000b672:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000b67b:	mov    rbx,rcx
   14000b67e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b682:	call   0x1400263fc
   14000b687:	nop
   14000b688:	mov    edx,0x1
   14000b68d:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b691:	add    rsp,0x30
   14000b695:	pop    rbx
   14000b696:	jmp    0x140026804
   14000b69b:	int3   
   14000b69c:	mov    rcx,QWORD PTR [rcx]
   14000b69f:	mov    edx,0x1
   14000b6a4:	lea    r8d,[rdx+0x5f]
   14000b6a8:	jmp    0x140004804
   14000b6ad:	int3   
   14000b6ae:	int3   
   14000b6af:	int3   
   14000b6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b6b5:	mov    QWORD PTR [rsp+0x10],rbp
   14000b6ba:	mov    QWORD PTR [rsp+0x18],rsi
   14000b6bf:	push   rdi
   14000b6c0:	sub    rsp,0x20
   14000b6c4:	xor    ebp,ebp
   14000b6c6:	mov    rdi,r8
   14000b6c9:	mov    rbx,rcx
   14000b6cc:	test   dl,dl
   14000b6ce:	je     0x14000b6ff
   14000b6d0:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b6d5:	jb     0x14000b6ff
   14000b6d7:	mov    rsi,QWORD PTR [rcx]
   14000b6da:	test   r8,r8
   14000b6dd:	je     0x14000b6ea
   14000b6df:	add    r8,r8
   14000b6e2:	mov    rdx,rsi
   14000b6e5:	call   0x140028fd0
   14000b6ea:	mov    rdx,QWORD PTR [rbx+0x18]
   14000b6ee:	mov    r8d,0x2
   14000b6f4:	inc    rdx
   14000b6f7:	mov    rcx,rsi
   14000b6fa:	call   0x140004804
   14000b6ff:	mov    QWORD PTR [rbx+0x18],0x7
   14000b707:	cmp    QWORD PTR [rbx+0x18],0x8
   14000b70c:	mov    QWORD PTR [rbx+0x10],rdi
   14000b710:	jb     0x14000b715
   14000b712:	mov    rbx,QWORD PTR [rbx]
   14000b715:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b71a:	mov    WORD PTR [rbx+rdi*2],bp
   14000b71e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b723:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b728:	add    rsp,0x20
   14000b72c:	pop    rdi
   14000b72d:	ret    
   14000b72e:	int3   
   14000b72f:	int3   
   14000b730:	mov    QWORD PTR [rsp+0x8],rbx
   14000b735:	mov    QWORD PTR [rsp+0x10],rbp
   14000b73a:	mov    QWORD PTR [rsp+0x18],rsi
   14000b73f:	push   rdi
   14000b740:	sub    rsp,0x20
   14000b744:	xor    ebp,ebp
   14000b746:	mov    rdi,r8
   14000b749:	mov    rsi,rdx
   14000b74c:	mov    rbx,rcx
   14000b74f:	test   rdx,rdx
   14000b752:	je     0x14000b7aa
   14000b754:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b759:	jb     0x14000b760
   14000b75b:	mov    rax,QWORD PTR [rcx]
   14000b75e:	jmp    0x14000b763
   14000b760:	mov    rax,rbx
   14000b763:	cmp    rsi,rax
   14000b766:	jb     0x14000b7aa
   14000b768:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b76d:	jb     0x14000b772
   14000b76f:	mov    rcx,QWORD PTR [rcx]
   14000b772:	mov    rax,QWORD PTR [rbx+0x10]
   14000b776:	lea    rcx,[rcx+rax*2]
   14000b77a:	cmp    rcx,rsi
   14000b77d:	jbe    0x14000b7aa
   14000b77f:	cmp    QWORD PTR [rbx+0x18],0x8
   14000b784:	jb     0x14000b78b
   14000b786:	mov    rax,QWORD PTR [rbx]
   14000b789:	jmp    0x14000b78e
   14000b78b:	mov    rax,rbx
   14000b78e:	sub    rsi,rax
   14000b791:	mov    r9,rdi
   14000b794:	sar    rsi,1
   14000b797:	mov    rdx,rbx
   14000b79a:	mov    r8,rsi
   14000b79d:	mov    rcx,rbx
   14000b7a0:	call   0x14000b850
   14000b7a5:	jmp    0x14000b82e
   14000b7aa:	movabs rax,0x7ffffffffffffffe
   14000b7b4:	cmp    rdi,rax
   14000b7b7:	ja     0x14000b843
   14000b7bd:	cmp    QWORD PTR [rbx+0x18],rdi
   14000b7c1:	jae    0x14000b7d4
   14000b7c3:	mov    r8,QWORD PTR [rbx+0x10]
   14000b7c7:	mov    rdx,rdi
   14000b7ca:	mov    rcx,rbx
   14000b7cd:	call   0x14000cb48
   14000b7d2:	jmp    0x14000b7ef
   14000b7d4:	test   rdi,rdi
   14000b7d7:	jne    0x14000b7f4
   14000b7d9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000b7de:	mov    QWORD PTR [rbx+0x10],rbp
   14000b7e2:	jb     0x14000b7e9
   14000b7e4:	mov    rax,QWORD PTR [rbx]
   14000b7e7:	jmp    0x14000b7ec
   14000b7e9:	mov    rax,rbx
   14000b7ec:	mov    WORD PTR [rax],bp
   14000b7ef:	test   rdi,rdi
   14000b7f2:	je     0x14000b82b
   14000b7f4:	cmp    QWORD PTR [rbx+0x18],0x8
   14000b7f9:	jb     0x14000b800
   14000b7fb:	mov    rcx,QWORD PTR [rbx]
   14000b7fe:	jmp    0x14000b803
   14000b800:	mov    rcx,rbx
   14000b803:	test   rdi,rdi
   14000b806:	je     0x14000b814
   14000b808:	lea    r8,[rdi+rdi*1]
   14000b80c:	mov    rdx,rsi
   14000b80f:	call   0x140028fd0
   14000b814:	cmp    QWORD PTR [rbx+0x18],0x8
   14000b819:	mov    QWORD PTR [rbx+0x10],rdi
   14000b81d:	jb     0x14000b824
   14000b81f:	mov    rax,QWORD PTR [rbx]
   14000b822:	jmp    0x14000b827
   14000b824:	mov    rax,rbx
   14000b827:	mov    WORD PTR [rax+rdi*2],bp
   14000b82b:	mov    rax,rbx
   14000b82e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b833:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b838:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b83d:	add    rsp,0x20
   14000b841:	pop    rdi
   14000b842:	ret    
   14000b843:	lea    rcx,[rip+0x575f6]        # 0x140062e40
   14000b84a:	call   0x140027a4c
   14000b84f:	int3   
   14000b850:	mov    rax,rsp
   14000b853:	mov    QWORD PTR [rax+0x8],rbx
   14000b857:	mov    QWORD PTR [rax+0x10],rsi
   14000b85b:	mov    QWORD PTR [rax+0x18],rdi
   14000b85f:	mov    QWORD PTR [rax+0x20],r14
   14000b863:	push   r15
   14000b865:	sub    rsp,0x20
   14000b869:	mov    rax,QWORD PTR [rdx+0x10]
   14000b86d:	mov    rdi,r9
   14000b870:	mov    r15,r8
   14000b873:	mov    r14,rdx
   14000b876:	mov    rbx,rcx
   14000b879:	cmp    rax,r8
   14000b87c:	jb     0x14000b96b
   14000b882:	sub    rax,r8
   14000b885:	cmp    r9,rax
   14000b888:	cmova  rdi,rax
   14000b88c:	cmp    rcx,rdx
   14000b88f:	jne    0x14000b8c2
   14000b891:	lea    rax,[r8+rdi*1]
   14000b895:	cmp    QWORD PTR [rcx+0x10],rax
   14000b899:	jb     0x14000b978
   14000b89f:	mov    QWORD PTR [rcx+0x10],rax
   14000b8a3:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b8a8:	jb     0x14000b8ad
   14000b8aa:	mov    rcx,QWORD PTR [rcx]
   14000b8ad:	xor    esi,esi
   14000b8af:	xor    edx,edx
   14000b8b1:	mov    WORD PTR [rcx+rax*2],si
   14000b8b5:	mov    rcx,rbx
   14000b8b8:	call   0x14000c2e8
   14000b8bd:	jmp    0x14000b94d
   14000b8c2:	movabs rax,0x7ffffffffffffffe
   14000b8cc:	cmp    rdi,rax
   14000b8cf:	ja     0x14000b985
   14000b8d5:	xor    esi,esi
   14000b8d7:	cmp    QWORD PTR [rcx+0x18],rdi
   14000b8db:	jae    0x14000b8eb
   14000b8dd:	mov    r8,QWORD PTR [rcx+0x10]
   14000b8e1:	mov    rdx,rdi
   14000b8e4:	call   0x14000cb48
   14000b8e9:	jmp    0x14000b906
   14000b8eb:	test   rdi,rdi
   14000b8ee:	jne    0x14000b90b
   14000b8f0:	cmp    QWORD PTR [rcx+0x18],0x8
   14000b8f5:	mov    QWORD PTR [rcx+0x10],rsi
   14000b8f9:	jb     0x14000b900
   14000b8fb:	mov    rax,QWORD PTR [rcx]
   14000b8fe:	jmp    0x14000b903
   14000b900:	mov    rax,rbx
   14000b903:	mov    WORD PTR [rax],si
   14000b906:	test   rdi,rdi
   14000b909:	je     0x14000b94d
   14000b90b:	cmp    QWORD PTR [r14+0x18],0x8
   14000b910:	jb     0x14000b915
   14000b912:	mov    r14,QWORD PTR [r14]
   14000b915:	cmp    QWORD PTR [rbx+0x18],0x8
   14000b91a:	jb     0x14000b921
   14000b91c:	mov    rcx,QWORD PTR [rbx]
   14000b91f:	jmp    0x14000b924
   14000b921:	mov    rcx,rbx
   14000b924:	test   rdi,rdi
   14000b927:	je     0x14000b936
   14000b929:	lea    r8,[rdi+rdi*1]
   14000b92d:	lea    rdx,[r14+r15*2]
   14000b931:	call   0x140028fd0
   14000b936:	cmp    QWORD PTR [rbx+0x18],0x8
   14000b93b:	mov    QWORD PTR [rbx+0x10],rdi
   14000b93f:	jb     0x14000b946
   14000b941:	mov    rax,QWORD PTR [rbx]
   14000b944:	jmp    0x14000b949
   14000b946:	mov    rax,rbx
   14000b949:	mov    WORD PTR [rax+rdi*2],si
   14000b94d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b952:	mov    rax,rbx
   14000b955:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b95a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b95f:	mov    r14,QWORD PTR [rsp+0x48]
   14000b964:	add    rsp,0x20
   14000b968:	pop    r15
   14000b96a:	ret    
   14000b96b:	lea    rcx,[rip+0x574de]        # 0x140062e50
   14000b972:	call   0x140027a70
   14000b977:	int3   
   14000b978:	lea    rcx,[rip+0x574d1]        # 0x140062e50
   14000b97f:	call   0x140027a70
   14000b984:	int3   
   14000b985:	lea    rcx,[rip+0x574b4]        # 0x140062e40
   14000b98c:	call   0x140027a4c
   14000b991:	int3   
   14000b992:	int3   
   14000b993:	int3   
   14000b994:	mov    QWORD PTR [rsp+0x8],rbx
   14000b999:	mov    QWORD PTR [rsp+0x10],rsi
   14000b99e:	push   rdi
   14000b99f:	sub    rsp,0x20
   14000b9a3:	mov    rdi,r8
   14000b9a6:	mov    rsi,rdx
   14000b9a9:	mov    rbx,rcx
   14000b9ac:	test   rdx,rdx
   14000b9af:	je     0x14000b9fd
   14000b9b1:	cmp    QWORD PTR [rcx+0x18],0x10
   14000b9b6:	jb     0x14000b9bd
   14000b9b8:	mov    rax,QWORD PTR [rcx]
   14000b9bb:	jmp    0x14000b9c0
   14000b9bd:	mov    rax,rbx
   14000b9c0:	cmp    rsi,rax
   14000b9c3:	jb     0x14000b9fd
   14000b9c5:	cmp    QWORD PTR [rcx+0x18],0x10
   14000b9ca:	jb     0x14000b9cf
   14000b9cc:	mov    rcx,QWORD PTR [rcx]
   14000b9cf:	add    rcx,QWORD PTR [rbx+0x10]
   14000b9d3:	cmp    rcx,rsi
   14000b9d6:	jbe    0x14000b9fd
   14000b9d8:	cmp    QWORD PTR [rbx+0x18],0x10
   14000b9dd:	jb     0x14000b9e4
   14000b9df:	mov    rax,QWORD PTR [rbx]
   14000b9e2:	jmp    0x14000b9e7
   14000b9e4:	mov    rax,rbx
   14000b9e7:	sub    rsi,rax
   14000b9ea:	mov    r9,rdi
   14000b9ed:	mov    r8,rsi
   14000b9f0:	mov    rdx,rbx
   14000b9f3:	mov    rcx,rbx
   14000b9f6:	call   0x14000ba94
   14000b9fb:	jmp    0x14000ba77
   14000b9fd:	cmp    rdi,0xfffffffffffffffe
   14000ba01:	ja     0x14000ba87
   14000ba07:	cmp    QWORD PTR [rbx+0x18],rdi
   14000ba0b:	jae    0x14000ba1e
   14000ba0d:	mov    r8,QWORD PTR [rbx+0x10]
   14000ba11:	mov    rdx,rdi
   14000ba14:	mov    rcx,rbx
   14000ba17:	call   0x14000cc90
   14000ba1c:	jmp    0x14000ba39
   14000ba1e:	test   rdi,rdi
   14000ba21:	jne    0x14000ba3e
   14000ba23:	and    QWORD PTR [rbx+0x10],rdi
   14000ba27:	cmp    QWORD PTR [rbx+0x18],0x10
   14000ba2c:	jb     0x14000ba33
   14000ba2e:	mov    rax,QWORD PTR [rbx]
   14000ba31:	jmp    0x14000ba36
   14000ba33:	mov    rax,rbx
   14000ba36:	mov    BYTE PTR [rax],0x0
   14000ba39:	test   rdi,rdi
   14000ba3c:	je     0x14000ba74
   14000ba3e:	cmp    QWORD PTR [rbx+0x18],0x10
   14000ba43:	jb     0x14000ba4a
   14000ba45:	mov    rcx,QWORD PTR [rbx]
   14000ba48:	jmp    0x14000ba4d
   14000ba4a:	mov    rcx,rbx
   14000ba4d:	test   rdi,rdi
   14000ba50:	je     0x14000ba5d
   14000ba52:	mov    r8,rdi
   14000ba55:	mov    rdx,rsi
   14000ba58:	call   0x140028fd0
   14000ba5d:	cmp    QWORD PTR [rbx+0x18],0x10
   14000ba62:	mov    QWORD PTR [rbx+0x10],rdi
   14000ba66:	jb     0x14000ba6d
   14000ba68:	mov    rax,QWORD PTR [rbx]
   14000ba6b:	jmp    0x14000ba70
   14000ba6d:	mov    rax,rbx
   14000ba70:	mov    BYTE PTR [rax+rdi*1],0x0
   14000ba74:	mov    rax,rbx
   14000ba77:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ba7c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ba81:	add    rsp,0x20
   14000ba85:	pop    rdi
   14000ba86:	ret    
   14000ba87:	lea    rcx,[rip+0x573b2]        # 0x140062e40
   14000ba8e:	call   0x140027a4c
   14000ba93:	int3   
   14000ba94:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba99:	mov    QWORD PTR [rsp+0x10],rsi
   14000ba9e:	mov    QWORD PTR [rsp+0x18],rdi
   14000baa3:	push   r14
   14000baa5:	sub    rsp,0x20
   14000baa9:	mov    rax,QWORD PTR [rdx+0x10]
   14000baad:	mov    rdi,r9
   14000bab0:	mov    r14,r8
   14000bab3:	mov    rsi,rdx
   14000bab6:	mov    rbx,rcx
   14000bab9:	cmp    rax,r8
   14000babc:	jb     0x14000bb95
   14000bac2:	sub    rax,r8
   14000bac5:	cmp    r9,rax
   14000bac8:	cmova  rdi,rax
   14000bacc:	cmp    rcx,rdx
   14000bacf:	jne    0x14000bafd
   14000bad1:	lea    rax,[r8+rdi*1]
   14000bad5:	cmp    QWORD PTR [rcx+0x10],rax
   14000bad9:	jb     0x14000bba2
   14000badf:	mov    QWORD PTR [rcx+0x10],rax
   14000bae3:	cmp    QWORD PTR [rcx+0x18],0x10
   14000bae8:	jb     0x14000baed
   14000baea:	mov    rcx,QWORD PTR [rcx]
   14000baed:	mov    BYTE PTR [rcx+rax*1],0x0
   14000baf1:	xor    edx,edx
   14000baf3:	mov    rcx,rbx
   14000baf6:	call   0x14000c398
   14000bafb:	jmp    0x14000bb7c
   14000bafd:	cmp    rdi,0xfffffffffffffffe
   14000bb01:	ja     0x14000bbaf
   14000bb07:	cmp    QWORD PTR [rcx+0x18],rdi
   14000bb0b:	jae    0x14000bb1b
   14000bb0d:	mov    r8,QWORD PTR [rcx+0x10]
   14000bb11:	mov    rdx,rdi
   14000bb14:	call   0x14000cc90
   14000bb19:	jmp    0x14000bb36
   14000bb1b:	test   rdi,rdi
   14000bb1e:	jne    0x14000bb3b
   14000bb20:	and    QWORD PTR [rcx+0x10],rdi
   14000bb24:	cmp    QWORD PTR [rcx+0x18],0x10
   14000bb29:	jb     0x14000bb30
   14000bb2b:	mov    rax,QWORD PTR [rcx]
   14000bb2e:	jmp    0x14000bb33
   14000bb30:	mov    rax,rbx
   14000bb33:	mov    BYTE PTR [rax],0x0
   14000bb36:	test   rdi,rdi
   14000bb39:	je     0x14000bb7c
   14000bb3b:	cmp    QWORD PTR [rsi+0x18],0x10
   14000bb40:	jb     0x14000bb45
   14000bb42:	mov    rsi,QWORD PTR [rsi]
   14000bb45:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bb4a:	jb     0x14000bb51
   14000bb4c:	mov    rcx,QWORD PTR [rbx]
   14000bb4f:	jmp    0x14000bb54
   14000bb51:	mov    rcx,rbx
   14000bb54:	test   rdi,rdi
   14000bb57:	je     0x14000bb65
   14000bb59:	lea    rdx,[rsi+r14*1]
   14000bb5d:	mov    r8,rdi
   14000bb60:	call   0x140028fd0
   14000bb65:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bb6a:	mov    QWORD PTR [rbx+0x10],rdi
   14000bb6e:	jb     0x14000bb75
   14000bb70:	mov    rax,QWORD PTR [rbx]
   14000bb73:	jmp    0x14000bb78
   14000bb75:	mov    rax,rbx
   14000bb78:	mov    BYTE PTR [rax+rdi*1],0x0
   14000bb7c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bb81:	mov    rax,rbx
   14000bb84:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb89:	mov    rdi,QWORD PTR [rsp+0x40]
   14000bb8e:	add    rsp,0x20
   14000bb92:	pop    r14
   14000bb94:	ret    
   14000bb95:	lea    rcx,[rip+0x572b4]        # 0x140062e50
   14000bb9c:	call   0x140027a70
   14000bba1:	int3   
   14000bba2:	lea    rcx,[rip+0x572a7]        # 0x140062e50
   14000bba9:	call   0x140027a70
   14000bbae:	int3   
   14000bbaf:	lea    rcx,[rip+0x5728a]        # 0x140062e40
   14000bbb6:	call   0x140027a4c
   14000bbbb:	int3   
   14000bbbc:	mov    QWORD PTR [rsp+0x8],rbx
   14000bbc1:	mov    QWORD PTR [rsp+0x10],rbp
   14000bbc6:	mov    QWORD PTR [rsp+0x18],rsi
   14000bbcb:	push   rdi
   14000bbcc:	sub    rsp,0x20
   14000bbd0:	mov    rbp,r8
   14000bbd3:	mov    rsi,rdx
   14000bbd6:	mov    rbx,rcx
   14000bbd9:	test   rdx,rdx
   14000bbdc:	je     0x14000bc2d
   14000bbde:	cmp    QWORD PTR [rcx+0x18],0x10
   14000bbe3:	jb     0x14000bbea
   14000bbe5:	mov    rax,QWORD PTR [rcx]
   14000bbe8:	jmp    0x14000bbed
   14000bbea:	mov    rax,rbx
   14000bbed:	cmp    rsi,rax
   14000bbf0:	jb     0x14000bc2d
   14000bbf2:	cmp    QWORD PTR [rcx+0x18],0x10
   14000bbf7:	jb     0x14000bbfc
   14000bbf9:	mov    rcx,QWORD PTR [rcx]
   14000bbfc:	add    rcx,QWORD PTR [rbx+0x10]
   14000bc00:	cmp    rcx,rsi
   14000bc03:	jbe    0x14000bc2d
   14000bc05:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bc0a:	jb     0x14000bc11
   14000bc0c:	mov    rax,QWORD PTR [rbx]
   14000bc0f:	jmp    0x14000bc14
   14000bc11:	mov    rax,rbx
   14000bc14:	sub    rsi,rax
   14000bc17:	mov    r9,rbp
   14000bc1a:	mov    r8,rsi
   14000bc1d:	mov    rdx,rbx
   14000bc20:	mov    rcx,rbx
   14000bc23:	call   0x14000bcf4
   14000bc28:	jmp    0x14000bcc3
   14000bc2d:	mov    r8,QWORD PTR [rbx+0x10]
   14000bc31:	mov    rax,r8
   14000bc34:	not    rax
   14000bc37:	cmp    rax,rbp
   14000bc3a:	jbe    0x14000bcd8
   14000bc40:	lea    rdi,[r8+rbp*1]
   14000bc44:	test   rbp,rbp
   14000bc47:	je     0x14000bcc0
   14000bc49:	cmp    rdi,0xfffffffffffffffe
   14000bc4d:	ja     0x14000bce5
   14000bc53:	cmp    QWORD PTR [rbx+0x18],rdi
   14000bc57:	jae    0x14000bc66
   14000bc59:	mov    rdx,rdi
   14000bc5c:	mov    rcx,rbx
   14000bc5f:	call   0x14000cc90
   14000bc64:	jmp    0x14000bc81
   14000bc66:	test   rdi,rdi
   14000bc69:	jne    0x14000bc86
   14000bc6b:	and    QWORD PTR [rbx+0x10],rdi
   14000bc6f:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bc74:	jb     0x14000bc7b
   14000bc76:	mov    rax,QWORD PTR [rbx]
   14000bc79:	jmp    0x14000bc7e
   14000bc7b:	mov    rax,rbx
   14000bc7e:	mov    BYTE PTR [rax],0x0
   14000bc81:	test   rdi,rdi
   14000bc84:	je     0x14000bcc0
   14000bc86:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bc8b:	jb     0x14000bc92
   14000bc8d:	mov    rcx,QWORD PTR [rbx]
   14000bc90:	jmp    0x14000bc95
   14000bc92:	mov    rcx,rbx
   14000bc95:	test   rbp,rbp
   14000bc98:	je     0x14000bca9
   14000bc9a:	add    rcx,QWORD PTR [rbx+0x10]
   14000bc9e:	mov    r8,rbp
   14000bca1:	mov    rdx,rsi
   14000bca4:	call   0x140028fd0
   14000bca9:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bcae:	mov    QWORD PTR [rbx+0x10],rdi
   14000bcb2:	jb     0x14000bcb9
   14000bcb4:	mov    rax,QWORD PTR [rbx]
   14000bcb7:	jmp    0x14000bcbc
   14000bcb9:	mov    rax,rbx
   14000bcbc:	mov    BYTE PTR [rax+rdi*1],0x0
   14000bcc0:	mov    rax,rbx
   14000bcc3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bcc8:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bccd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bcd2:	add    rsp,0x20
   14000bcd6:	pop    rdi
   14000bcd7:	ret    
   14000bcd8:	lea    rcx,[rip+0x57161]        # 0x140062e40
   14000bcdf:	call   0x140027a4c
   14000bce4:	int3   
   14000bce5:	lea    rcx,[rip+0x57154]        # 0x140062e40
   14000bcec:	call   0x140027a4c
   14000bcf1:	int3   
   14000bcf2:	int3   
   14000bcf3:	int3   
   14000bcf4:	mov    rax,rsp
   14000bcf7:	mov    QWORD PTR [rax+0x8],rbx
   14000bcfb:	mov    QWORD PTR [rax+0x10],rbp
   14000bcff:	mov    QWORD PTR [rax+0x18],rsi
   14000bd03:	mov    QWORD PTR [rax+0x20],rdi
   14000bd07:	push   r14
   14000bd09:	sub    rsp,0x20
   14000bd0d:	mov    rax,QWORD PTR [rdx+0x10]
   14000bd11:	mov    rsi,r9
   14000bd14:	mov    rbp,r8
   14000bd17:	mov    r14,rdx
   14000bd1a:	mov    rbx,rcx
   14000bd1d:	cmp    rax,r8
   14000bd20:	jb     0x14000bde9
   14000bd26:	sub    rax,r8
   14000bd29:	mov    r8,QWORD PTR [rcx+0x10]
   14000bd2d:	cmp    r9,rax
   14000bd30:	cmova  rsi,rax
   14000bd34:	mov    rax,r8
   14000bd37:	not    rax
   14000bd3a:	cmp    rax,rsi
   14000bd3d:	jbe    0x14000bdf6
   14000bd43:	lea    rdi,[r8+rsi*1]
   14000bd47:	test   rsi,rsi
   14000bd4a:	je     0x14000bdcb
   14000bd4c:	cmp    rdi,0xfffffffffffffffe
   14000bd50:	ja     0x14000be03
   14000bd56:	cmp    QWORD PTR [rcx+0x18],rdi
   14000bd5a:	jae    0x14000bd66
   14000bd5c:	mov    rdx,rdi
   14000bd5f:	call   0x14000cc90
   14000bd64:	jmp    0x14000bd81
   14000bd66:	test   rdi,rdi
   14000bd69:	jne    0x14000bd86
   14000bd6b:	and    QWORD PTR [rcx+0x10],rdi
   14000bd6f:	cmp    QWORD PTR [rcx+0x18],0x10
   14000bd74:	jb     0x14000bd7b
   14000bd76:	mov    rax,QWORD PTR [rcx]
   14000bd79:	jmp    0x14000bd7e
   14000bd7b:	mov    rax,rbx
   14000bd7e:	mov    BYTE PTR [rax],0x0
   14000bd81:	test   rdi,rdi
   14000bd84:	je     0x14000bdcb
   14000bd86:	cmp    QWORD PTR [r14+0x18],0x10
   14000bd8b:	jb     0x14000bd90
   14000bd8d:	mov    r14,QWORD PTR [r14]
   14000bd90:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bd95:	jb     0x14000bd9c
   14000bd97:	mov    rcx,QWORD PTR [rbx]
   14000bd9a:	jmp    0x14000bd9f
   14000bd9c:	mov    rcx,rbx
   14000bd9f:	test   rsi,rsi
   14000bda2:	je     0x14000bdb4
   14000bda4:	add    rcx,QWORD PTR [rbx+0x10]
   14000bda8:	lea    rdx,[r14+rbp*1]
   14000bdac:	mov    r8,rsi
   14000bdaf:	call   0x140028fd0
   14000bdb4:	cmp    QWORD PTR [rbx+0x18],0x10
   14000bdb9:	mov    QWORD PTR [rbx+0x10],rdi
   14000bdbd:	jb     0x14000bdc4
   14000bdbf:	mov    rax,QWORD PTR [rbx]
   14000bdc2:	jmp    0x14000bdc7
   14000bdc4:	mov    rax,rbx
   14000bdc7:	mov    BYTE PTR [rax+rdi*1],0x0
   14000bdcb:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bdd0:	mov    rax,rbx
   14000bdd3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bdd8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bddd:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bde2:	add    rsp,0x20
   14000bde6:	pop    r14
   14000bde8:	ret    
   14000bde9:	lea    rcx,[rip+0x57060]        # 0x140062e50
   14000bdf0:	call   0x140027a70
   14000bdf5:	int3   
   14000bdf6:	lea    rcx,[rip+0x57043]        # 0x140062e40
   14000bdfd:	call   0x140027a4c
   14000be02:	int3   
   14000be03:	lea    rcx,[rip+0x57036]        # 0x140062e40
   14000be0a:	call   0x140027a4c
   14000be0f:	int3   
   14000be10:	mov    QWORD PTR [rsp+0x8],rbx
   14000be15:	push   rdi
   14000be16:	sub    rsp,0x20
   14000be1a:	cmp    QWORD PTR [rdx+0x18],0x10
   14000be1f:	mov    rbx,rdx
   14000be22:	mov    rdi,rcx
   14000be25:	jae    0x14000be38
   14000be27:	mov    r8,QWORD PTR [rdx+0x10]
   14000be2b:	add    r8,0x1
   14000be2f:	je     0x14000be47
   14000be31:	call   0x140028fd0
   14000be36:	jmp    0x14000be47
   14000be38:	test   rdi,rdi
   14000be3b:	je     0x14000be43
   14000be3d:	mov    rax,QWORD PTR [rdx]
   14000be40:	mov    QWORD PTR [rcx],rax
   14000be43:	and    QWORD PTR [rdx],0x0
   14000be47:	mov    rax,QWORD PTR [rbx+0x10]
   14000be4b:	mov    QWORD PTR [rdi+0x10],rax
   14000be4f:	mov    rax,QWORD PTR [rbx+0x18]
   14000be53:	mov    QWORD PTR [rdi+0x18],rax
   14000be57:	mov    QWORD PTR [rbx+0x18],0xf
   14000be5f:	and    QWORD PTR [rbx+0x10],0x0
   14000be64:	cmp    QWORD PTR [rbx+0x18],0x10
   14000be69:	jb     0x14000be6e
   14000be6b:	mov    rbx,QWORD PTR [rbx]
   14000be6e:	mov    BYTE PTR [rbx],0x0
   14000be71:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be76:	add    rsp,0x20
   14000be7a:	pop    rdi
   14000be7b:	ret    
   14000be7c:	rex push rbx
   14000be7e:	sub    rsp,0x30
   14000be82:	and    DWORD PTR [rsp+0x20],0x0
   14000be87:	add    rcx,0x8
   14000be8b:	mov    rbx,rdx
   14000be8e:	call   0x14000c534
   14000be93:	mov    rax,rbx
   14000be96:	add    rsp,0x30
   14000be9a:	pop    rbx
   14000be9b:	ret    
   14000be9c:	mov    rax,rsp
   14000be9f:	mov    QWORD PTR [rax+0x8],rcx
   14000bea3:	push   rdi
   14000bea4:	sub    rsp,0x30
   14000bea8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000beb0:	mov    QWORD PTR [rax+0x18],rbx
   14000beb4:	mov    QWORD PTR [rax+0x20],rsi
   14000beb8:	mov    esi,edx
   14000beba:	mov    rdi,rcx
   14000bebd:	and    DWORD PTR [rax+0x10],0x0
   14000bec1:	test   r8d,r8d
   14000bec4:	je     0x14000bee6
   14000bec6:	lea    rax,[rip+0x57e7b]        # 0x140063d48
   14000becd:	mov    QWORD PTR [rcx],rax
   14000bed0:	lea    rax,[rip+0x3fae1]        # 0x14004b9b8
   14000bed7:	mov    QWORD PTR [rcx+0x88],rax
   14000bede:	mov    DWORD PTR [rsp+0x48],0x1
   14000bee6:	mov    rax,QWORD PTR [rcx]
   14000bee9:	movsxd rcx,DWORD PTR [rax+0x4]
   14000beed:	lea    rax,[rip+0x3fad4]        # 0x14004b9c8
   14000bef4:	mov    QWORD PTR [rcx+rdi*1],rax
   14000bef8:	mov    rax,QWORD PTR [rdi]
   14000befb:	movsxd rcx,DWORD PTR [rax+0x4]
   14000beff:	lea    edx,[rcx-0x10]
   14000bf02:	mov    DWORD PTR [rcx+rdi*1-0x4],edx
   14000bf06:	mov    rax,QWORD PTR [rdi]
   14000bf09:	movsxd rcx,DWORD PTR [rax+0x4]
   14000bf0d:	add    rcx,rdi
   14000bf10:	xor    r8d,r8d
   14000bf13:	lea    rdx,[rdi+0x8]
   14000bf17:	call   0x14000ce80
   14000bf1c:	nop
   14000bf1d:	mov    rax,QWORD PTR [rdi]
   14000bf20:	movsxd rdx,DWORD PTR [rax+0x4]
   14000bf24:	lea    rax,[rip+0x3fbad]        # 0x14004bad8
   14000bf2b:	mov    QWORD PTR [rdx+rdi*1],rax
   14000bf2f:	mov    rax,QWORD PTR [rdi]
   14000bf32:	movsxd rdx,DWORD PTR [rax+0x4]
   14000bf36:	lea    r8d,[rdx-0x88]
   14000bf3d:	mov    DWORD PTR [rdx+rdi*1-0x4],r8d
   14000bf42:	or     esi,0x2
   14000bf45:	mov    edx,esi
   14000bf47:	lea    rcx,[rdi+0x8]
   14000bf4b:	call   0x14000c618
   14000bf50:	nop
   14000bf51:	mov    rax,rdi
   14000bf54:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bf59:	mov    rsi,QWORD PTR [rsp+0x58]
   14000bf5e:	add    rsp,0x30
   14000bf62:	pop    rdi
   14000bf63:	ret    
   14000bf64:	rex push rbx
   14000bf66:	sub    rsp,0x20
   14000bf6a:	test   BYTE PTR [rcx+0x70],0x1
   14000bf6e:	mov    rbx,rcx
   14000bf71:	je     0x14000bfb2
   14000bf73:	mov    rax,QWORD PTR [rcx+0x40]
   14000bf77:	mov    rcx,QWORD PTR [rax]
   14000bf7a:	test   rcx,rcx
   14000bf7d:	je     0x14000bf88
   14000bf7f:	mov    rax,QWORD PTR [rbx+0x58]
   14000bf83:	movsxd rdx,DWORD PTR [rax]
   14000bf86:	jmp    0x14000bf96
   14000bf88:	mov    rax,QWORD PTR [rbx+0x50]
   14000bf8c:	movsxd rdx,DWORD PTR [rax]
   14000bf8f:	mov    rax,QWORD PTR [rbx+0x38]
   14000bf93:	mov    rcx,QWORD PTR [rax]
   14000bf96:	mov    rax,QWORD PTR [rbx+0x18]
   14000bf9a:	lea    rdx,[rcx+rdx*2]
   14000bf9e:	mov    r8d,0x2
   14000bfa4:	sub    rdx,QWORD PTR [rax]
   14000bfa7:	mov    rcx,QWORD PTR [rax]
   14000bfaa:	sar    rdx,1
   14000bfad:	call   0x140004804
   14000bfb2:	mov    rax,QWORD PTR [rbx+0x18]
   14000bfb6:	and    QWORD PTR [rax],0x0
   14000bfba:	mov    rax,QWORD PTR [rbx+0x38]
   14000bfbe:	and    QWORD PTR [rax],0x0
   14000bfc2:	mov    rax,QWORD PTR [rbx+0x50]
   14000bfc6:	and    DWORD PTR [rax],0x0
   14000bfc9:	mov    rax,QWORD PTR [rbx+0x20]
   14000bfcd:	and    QWORD PTR [rax],0x0
   14000bfd1:	mov    rax,QWORD PTR [rbx+0x40]
   14000bfd5:	and    QWORD PTR [rax],0x0
   14000bfd9:	mov    rax,QWORD PTR [rbx+0x58]
   14000bfdd:	and    DWORD PTR [rax],0x0
   14000bfe0:	and    QWORD PTR [rbx+0x68],0x0
   14000bfe5:	and    DWORD PTR [rbx+0x70],0xfffffffe
   14000bfe9:	add    rsp,0x20
   14000bfed:	pop    rbx
   14000bfee:	ret    
   14000bfef:	int3   
   14000bff0:	rex push rbx
   14000bff2:	sub    rsp,0x20
   14000bff6:	mov    rbx,rcx
   14000bff9:	mov    rcx,QWORD PTR [rcx+0x18]
   14000bffd:	test   rcx,rcx
   14000c000:	je     0x14000c023
   14000c002:	mov    rdx,QWORD PTR [rbx+0x28]
   14000c006:	mov    r8d,0x1
   14000c00c:	sub    rdx,rcx
   14000c00f:	call   0x140004804
   14000c014:	and    QWORD PTR [rbx+0x18],0x0
   14000c019:	and    QWORD PTR [rbx+0x20],0x0
   14000c01e:	and    QWORD PTR [rbx+0x28],0x0
   14000c023:	mov    r8,QWORD PTR [rbx+0x8]
   14000c027:	lea    rdx,[rsp+0x30]
   14000c02c:	mov    r9,r8
   14000c02f:	lea    rcx,[rbx+0x8]
   14000c033:	mov    r8,QWORD PTR [r8]
   14000c036:	call   0x14000c18c
   14000c03b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c03f:	mov    edx,0x1
   14000c044:	lea    r8d,[rdx+0x5f]
   14000c048:	add    rsp,0x20
   14000c04c:	pop    rbx
   14000c04d:	jmp    0x140004804
   14000c052:	int3   
   14000c053:	int3   
   14000c054:	mov    QWORD PTR [rsp+0x8],rbx
   14000c059:	push   rdi
   14000c05a:	sub    rsp,0x20
   14000c05e:	xor    eax,eax
   14000c060:	mov    rbx,rcx
   14000c063:	mov    QWORD PTR [rcx],rax
   14000c066:	mov    QWORD PTR [rcx+0x8],rax
   14000c06a:	mov    QWORD PTR [rcx+0x10],rax
   14000c06e:	test   rdx,rdx
   14000c071:	je     0x14000c0ca
   14000c073:	movabs rax,0x7fffffffffffffff
   14000c07d:	cmp    rdx,rax
   14000c080:	ja     0x14000c0d5
   14000c082:	lea    rdi,[rdx+rdx*1]
   14000c086:	cmp    rdi,0x1000
   14000c08d:	jb     0x14000c0ab
   14000c08f:	lea    rcx,[rdi+0x27]
   14000c093:	cmp    rcx,rdi
   14000c096:	jbe    0x14000c0e2
   14000c098:	call   0x140026118
   14000c09d:	lea    rcx,[rax+0x27]
   14000c0a1:	and    rcx,0xffffffffffffffe0
   14000c0a5:	mov    QWORD PTR [rcx-0x8],rax
   14000c0a9:	jmp    0x14000c0b6
   14000c0ab:	mov    rcx,rdi
   14000c0ae:	call   0x140026118
   14000c0b3:	mov    rcx,rax
   14000c0b6:	mov    QWORD PTR [rbx],rcx
   14000c0b9:	mov    QWORD PTR [rbx+0x8],rcx
   14000c0bd:	mov    rax,QWORD PTR [rbx]
   14000c0c0:	lea    rcx,[rdi+rax*1]
   14000c0c4:	mov    al,0x1
   14000c0c6:	mov    QWORD PTR [rbx+0x10],rcx
   14000c0ca:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0cf:	add    rsp,0x20
   14000c0d3:	pop    rdi
   14000c0d4:	ret    
   14000c0d5:	lea    rcx,[rip+0x56d4c]        # 0x140062e28
   14000c0dc:	call   0x140027a4c
   14000c0e1:	int3   
   14000c0e2:	call   0x140027a0c
   14000c0e7:	int3   
   14000c0e8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c0ed:	mov    QWORD PTR [rsp+0x10],rsi
   14000c0f2:	push   rdi
   14000c0f3:	sub    rsp,0x20
   14000c0f7:	mov    rbx,rcx
   14000c0fa:	test   rdx,rdx
   14000c0fd:	jne    0x14000c103
   14000c0ff:	xor    eax,eax
   14000c101:	jmp    0x14000c17c
   14000c103:	lea    rdi,[rdx+0x7]
   14000c107:	mov    eax,0xfffffff8
   14000c10c:	mov    rdx,QWORD PTR [rcx]
   14000c10f:	and    rdi,rax
   14000c112:	test   rdx,rdx
   14000c115:	je     0x14000c123
   14000c117:	mov    rcx,QWORD PTR [rdx+0x8]
   14000c11b:	add    rcx,rdi
   14000c11e:	cmp    rcx,QWORD PTR [rdx]
   14000c121:	jbe    0x14000c167
   14000c123:	cmp    QWORD PTR [rbx+0x8],rdi
   14000c127:	mov    rsi,rdi
   14000c12a:	cmova  rsi,QWORD PTR [rbx+0x8]
   14000c12f:	cmp    QWORD PTR [rbx+0x18],0x0
   14000c134:	jne    0x14000c148
   14000c136:	mov    ecx,0x1
   14000c13b:	call   0x140026118
   14000c140:	mov    QWORD PTR [rbx+0x18],rax
   14000c144:	mov    QWORD PTR [rbx+0x20],rax
   14000c148:	mov    rcx,QWORD PTR [rbx+0x18]
   14000c14c:	lea    rdx,[rsi+0x18]
   14000c150:	call   0x140025784
   14000c155:	and    QWORD PTR [rax+0x8],0x0
   14000c15a:	mov    QWORD PTR [rax],rsi
   14000c15d:	mov    rcx,QWORD PTR [rbx]
   14000c160:	mov    QWORD PTR [rax+0x10],rcx
   14000c164:	mov    QWORD PTR [rbx],rax
   14000c167:	mov    rdx,QWORD PTR [rbx]
   14000c16a:	mov    rcx,QWORD PTR [rdx+0x8]
   14000c16e:	lea    rax,[rdx+0x18]
   14000c172:	add    rax,rcx
   14000c175:	add    rcx,rdi
   14000c178:	mov    QWORD PTR [rdx+0x8],rcx
   14000c17c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c181:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c186:	add    rsp,0x20
   14000c18a:	pop    rdi
   14000c18b:	ret    
   14000c18c:	mov    rax,rsp
   14000c18f:	mov    QWORD PTR [rax+0x20],r9
   14000c193:	mov    QWORD PTR [rax+0x18],r8
   14000c197:	push   rdi
   14000c198:	sub    rsp,0x30
   14000c19c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000c1a4:	mov    QWORD PTR [rax+0x10],rsi
   14000c1a8:	mov    rsi,rdx
   14000c1ab:	mov    rdi,rcx
   14000c1ae:	mov    rdx,QWORD PTR [rcx]
   14000c1b1:	cmp    r8,QWORD PTR [rdx]
   14000c1b4:	jne    0x14000c1e8
   14000c1b6:	cmp    r9,rdx
   14000c1b9:	jne    0x14000c1e8
   14000c1bb:	mov    rdx,QWORD PTR [rdx+0x8]
   14000c1bf:	call   0x14000cf34
   14000c1c4:	mov    rax,QWORD PTR [rdi]
   14000c1c7:	mov    QWORD PTR [rax+0x8],rax
   14000c1cb:	mov    rax,QWORD PTR [rdi]
   14000c1ce:	mov    QWORD PTR [rax],rax
   14000c1d1:	mov    rax,QWORD PTR [rdi]
   14000c1d4:	mov    QWORD PTR [rax+0x10],rax
   14000c1d8:	and    QWORD PTR [rdi+0x8],0x0
   14000c1dd:	mov    rax,QWORD PTR [rdi]
   14000c1e0:	mov    rcx,QWORD PTR [rax]
   14000c1e3:	mov    QWORD PTR [rsi],rcx
   14000c1e6:	jmp    0x14000c256
   14000c1e8:	cmp    r8,r9
   14000c1eb:	je     0x14000c253
   14000c1ed:	mov    rax,r8
   14000c1f0:	cmp    BYTE PTR [r8+0x19],0x0
   14000c1f5:	jne    0x14000c237
   14000c1f7:	mov    rcx,QWORD PTR [r8+0x10]
   14000c1fb:	cmp    BYTE PTR [rcx+0x19],0x0
   14000c1ff:	jne    0x14000c214
   14000c201:	mov    rdx,QWORD PTR [rcx]
   14000c204:	jmp    0x14000c20c
   14000c206:	mov    rcx,rdx
   14000c209:	mov    rdx,QWORD PTR [rdx]
   14000c20c:	cmp    BYTE PTR [rdx+0x19],0x0
   14000c210:	je     0x14000c206
   14000c212:	jmp    0x14000c232
   14000c214:	mov    rcx,QWORD PTR [r8+0x8]
   14000c218:	jmp    0x14000c22c
   14000c21a:	cmp    r8,QWORD PTR [rcx+0x10]
   14000c21e:	jne    0x14000c232
   14000c220:	mov    r8,rcx
   14000c223:	mov    QWORD PTR [rsp+0x50],rcx
   14000c228:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c22c:	cmp    BYTE PTR [rcx+0x19],0x0
   14000c230:	je     0x14000c21a
   14000c232:	mov    QWORD PTR [rsp+0x50],rcx
   14000c237:	mov    r8,rax
   14000c23a:	lea    rdx,[rsp+0x40]
   14000c23f:	mov    rcx,rdi
   14000c242:	call   0x14000c68c
   14000c247:	mov    r8,QWORD PTR [rsp+0x50]
   14000c24c:	cmp    r8,QWORD PTR [rsp+0x58]
   14000c251:	jne    0x14000c1ed
   14000c253:	mov    QWORD PTR [rsi],r8
   14000c256:	mov    rax,rsi
   14000c259:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c25e:	add    rsp,0x30
   14000c262:	pop    rdi
   14000c263:	ret    
   14000c264:	mov    QWORD PTR [rsp+0x8],rbx
   14000c269:	push   rdi
   14000c26a:	sub    rsp,0x20
   14000c26e:	movabs rax,0x7ffffffffffffffe
   14000c278:	mov    rbx,rdx
   14000c27b:	cmp    rdx,rax
   14000c27e:	ja     0x14000c2d9
   14000c280:	xor    edi,edi
   14000c282:	cmp    QWORD PTR [rcx+0x18],rdx
   14000c286:	jae    0x14000c293
   14000c288:	mov    r8,QWORD PTR [rcx+0x10]
   14000c28c:	call   0x14000cb48
   14000c291:	jmp    0x14000c2c8
   14000c293:	test   r8b,r8b
   14000c296:	je     0x14000c2b2
   14000c298:	cmp    rbx,0x8
   14000c29c:	jae    0x14000c2b2
   14000c29e:	mov    r8,QWORD PTR [rcx+0x10]
   14000c2a2:	mov    dl,0x1
   14000c2a4:	cmp    rbx,r8
   14000c2a7:	cmovb  r8,rbx
   14000c2ab:	call   0x14000b6b0
   14000c2b0:	jmp    0x14000c2c8
   14000c2b2:	test   rbx,rbx
   14000c2b5:	jne    0x14000c2cb
   14000c2b7:	cmp    QWORD PTR [rcx+0x18],0x8
   14000c2bc:	mov    QWORD PTR [rcx+0x10],rdi
   14000c2c0:	jb     0x14000c2c5
   14000c2c2:	mov    rcx,QWORD PTR [rcx]
   14000c2c5:	mov    WORD PTR [rcx],di
   14000c2c8:	test   rbx,rbx
   14000c2cb:	setne  al
   14000c2ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c2d3:	add    rsp,0x20
   14000c2d7:	pop    rdi
   14000c2d8:	ret    
   14000c2d9:	lea    rcx,[rip+0x56b60]        # 0x140062e40
   14000c2e0:	call   0x140027a4c
   14000c2e5:	int3   
   14000c2e6:	int3   
   14000c2e7:	int3   
   14000c2e8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c2ed:	mov    QWORD PTR [rsp+0x10],rsi
   14000c2f2:	push   rdi
   14000c2f3:	sub    rsp,0x20
   14000c2f7:	mov    rdi,QWORD PTR [rcx+0x10]
   14000c2fb:	mov    r9,r8
   14000c2fe:	mov    rbx,rcx
   14000c301:	cmp    rdi,rdx
   14000c304:	jb     0x14000c38b
   14000c30a:	mov    rax,rdi
   14000c30d:	sub    rax,rdx
   14000c310:	cmp    rax,r8
   14000c313:	ja     0x14000c330
   14000c315:	mov    QWORD PTR [rcx+0x10],rdx
   14000c319:	cmp    QWORD PTR [rcx+0x18],0x8
   14000c31e:	jb     0x14000c325
   14000c320:	mov    rax,QWORD PTR [rcx]
   14000c323:	jmp    0x14000c328
   14000c325:	mov    rax,rbx
   14000c328:	xor    esi,esi
   14000c32a:	mov    WORD PTR [rax+rdx*2],si
   14000c32e:	jmp    0x14000c378
   14000c330:	xor    esi,esi
   14000c332:	test   r9,r9
   14000c335:	je     0x14000c378
   14000c337:	cmp    QWORD PTR [rcx+0x18],0x8
   14000c33c:	jb     0x14000c343
   14000c33e:	mov    rax,QWORD PTR [rcx]
   14000c341:	jmp    0x14000c346
   14000c343:	mov    rax,rbx
   14000c346:	sub    rdi,r9
   14000c349:	lea    rcx,[rax+rdx*2]
   14000c34d:	mov    r8,rdi
   14000c350:	sub    r8,rdx
   14000c353:	je     0x14000c361
   14000c355:	add    r8,r8
   14000c358:	lea    rdx,[rcx+r9*2]
   14000c35c:	call   0x140028fd0
   14000c361:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c366:	mov    QWORD PTR [rbx+0x10],rdi
   14000c36a:	jb     0x14000c371
   14000c36c:	mov    rax,QWORD PTR [rbx]
   14000c36f:	jmp    0x14000c374
   14000c371:	mov    rax,rbx
   14000c374:	mov    WORD PTR [rax+rdi*2],si
   14000c378:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c37d:	mov    rax,rbx
   14000c380:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c385:	add    rsp,0x20
   14000c389:	pop    rdi
   14000c38a:	ret    
   14000c38b:	lea    rcx,[rip+0x56abe]        # 0x140062e50
   14000c392:	call   0x140027a70
   14000c397:	int3   
   14000c398:	mov    QWORD PTR [rsp+0x8],rbx
   14000c39d:	push   rdi
   14000c39e:	sub    rsp,0x20
   14000c3a2:	mov    rdi,QWORD PTR [rcx+0x10]
   14000c3a6:	mov    rbx,rcx
   14000c3a9:	cmp    rdi,rdx
   14000c3ac:	jb     0x14000c426
   14000c3ae:	mov    rax,rdi
   14000c3b1:	sub    rax,rdx
   14000c3b4:	cmp    rax,r8
   14000c3b7:	ja     0x14000c3d2
   14000c3b9:	mov    QWORD PTR [rcx+0x10],rdx
   14000c3bd:	cmp    QWORD PTR [rcx+0x18],0x10
   14000c3c2:	jb     0x14000c3c9
   14000c3c4:	mov    rax,QWORD PTR [rcx]
   14000c3c7:	jmp    0x14000c3cc
   14000c3c9:	mov    rax,rbx
   14000c3cc:	mov    BYTE PTR [rax+rdx*1],0x0
   14000c3d0:	jmp    0x14000c418
   14000c3d2:	test   r8,r8
   14000c3d5:	je     0x14000c418
   14000c3d7:	cmp    QWORD PTR [rcx+0x18],0x10
   14000c3dc:	jb     0x14000c3e3
   14000c3de:	mov    rax,QWORD PTR [rcx]
   14000c3e1:	jmp    0x14000c3e6
   14000c3e3:	mov    rax,rbx
   14000c3e6:	sub    rdi,r8
   14000c3e9:	lea    rcx,[rax+rdx*1]
   14000c3ed:	mov    rax,rdi
   14000c3f0:	sub    rax,rdx
   14000c3f3:	je     0x14000c401
   14000c3f5:	lea    rdx,[rcx+r8*1]
   14000c3f9:	mov    r8,rax
   14000c3fc:	call   0x140028fd0
   14000c401:	cmp    QWORD PTR [rbx+0x18],0x10
   14000c406:	mov    QWORD PTR [rbx+0x10],rdi
   14000c40a:	jb     0x14000c411
   14000c40c:	mov    rax,QWORD PTR [rbx]
   14000c40f:	jmp    0x14000c414
   14000c411:	mov    rax,rbx
   14000c414:	mov    BYTE PTR [rax+rdi*1],0x0
   14000c418:	mov    rax,rbx
   14000c41b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c420:	add    rsp,0x20
   14000c424:	pop    rdi
   14000c425:	ret    
   14000c426:	lea    rcx,[rip+0x56a23]        # 0x140062e50
   14000c42d:	call   0x140027a70
   14000c432:	int3   
   14000c433:	int3   
   14000c434:	mov    QWORD PTR [rsp+0x8],rbx
   14000c439:	mov    QWORD PTR [rsp+0x10],rbp
   14000c43e:	mov    QWORD PTR [rsp+0x18],rsi
   14000c443:	push   rdi
   14000c444:	sub    rsp,0x20
   14000c448:	mov    bpl,r8b
   14000c44b:	mov    rsi,rdx
   14000c44e:	mov    r8,QWORD PTR [rcx+0x10]
   14000c452:	mov    rbx,rcx
   14000c455:	mov    rax,r8
   14000c458:	not    rax
   14000c45b:	cmp    rax,rdx
   14000c45e:	jbe    0x14000c517
   14000c464:	lea    rdi,[r8+rdx*1]
   14000c468:	test   rdx,rdx
   14000c46b:	je     0x14000c4ff
   14000c471:	cmp    rdi,0xfffffffffffffffe
   14000c475:	ja     0x14000c524
   14000c47b:	cmp    QWORD PTR [rcx+0x18],rdi
   14000c47f:	jae    0x14000c48b
   14000c481:	mov    rdx,rdi
   14000c484:	call   0x14000cc90
   14000c489:	jmp    0x14000c4a6
   14000c48b:	test   rdi,rdi
   14000c48e:	jne    0x14000c4ab
   14000c490:	and    QWORD PTR [rcx+0x10],rdi
   14000c494:	cmp    QWORD PTR [rcx+0x18],0x10
   14000c499:	jb     0x14000c4a0
   14000c49b:	mov    rax,QWORD PTR [rcx]
   14000c49e:	jmp    0x14000c4a3
   14000c4a0:	mov    rax,rbx
   14000c4a3:	mov    BYTE PTR [rax],0x0
   14000c4a6:	test   rdi,rdi
   14000c4a9:	je     0x14000c4ff
   14000c4ab:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c4af:	cmp    rsi,0x1
   14000c4b3:	jne    0x14000c4ca
   14000c4b5:	cmp    QWORD PTR [rbx+0x18],0x10
   14000c4ba:	jb     0x14000c4c1
   14000c4bc:	mov    rax,QWORD PTR [rbx]
   14000c4bf:	jmp    0x14000c4c4
   14000c4c1:	mov    rax,rbx
   14000c4c4:	mov    BYTE PTR [rax+rcx*1],bpl
   14000c4c8:	jmp    0x14000c4e8
   14000c4ca:	cmp    QWORD PTR [rbx+0x18],0x10
   14000c4cf:	jb     0x14000c4d6
   14000c4d1:	mov    rax,QWORD PTR [rbx]
   14000c4d4:	jmp    0x14000c4d9
   14000c4d6:	mov    rax,rbx
   14000c4d9:	movsx  edx,bpl
   14000c4dd:	add    rcx,rax
   14000c4e0:	mov    r8,rsi
   14000c4e3:	call   0x14002a910
   14000c4e8:	cmp    QWORD PTR [rbx+0x18],0x10
   14000c4ed:	mov    QWORD PTR [rbx+0x10],rdi
   14000c4f1:	jb     0x14000c4f8
   14000c4f3:	mov    rax,QWORD PTR [rbx]
   14000c4f6:	jmp    0x14000c4fb
   14000c4f8:	mov    rax,rbx
   14000c4fb:	mov    BYTE PTR [rax+rdi*1],0x0
   14000c4ff:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c504:	mov    rax,rbx
   14000c507:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c50c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c511:	add    rsp,0x20
   14000c515:	pop    rdi
   14000c516:	ret    
   14000c517:	lea    rcx,[rip+0x56922]        # 0x140062e40
   14000c51e:	call   0x140027a4c
   14000c523:	int3   
   14000c524:	lea    rcx,[rip+0x56915]        # 0x140062e40
   14000c52b:	call   0x140027a4c
   14000c530:	int3   
   14000c531:	int3   
   14000c532:	int3   
   14000c533:	int3   
   14000c534:	mov    QWORD PTR [rsp+0x18],rbx
   14000c539:	push   rbp
   14000c53a:	push   rsi
   14000c53b:	push   rdi
   14000c53c:	mov    rbp,rsp
   14000c53f:	sub    rsp,0x50
   14000c543:	mov    rax,QWORD PTR [rip+0x64b06]        # 0x140071050
   14000c54a:	xor    rax,rsp
   14000c54d:	mov    QWORD PTR [rbp-0x8],rax
   14000c551:	xor    esi,esi
   14000c553:	mov    rbx,rdx
   14000c556:	test   BYTE PTR [rcx+0x70],0x2
   14000c55a:	mov    rdx,rcx
   14000c55d:	mov    DWORD PTR [rbp-0x30],esi
   14000c560:	jne    0x14000c59f
   14000c562:	mov    rax,QWORD PTR [rcx+0x40]
   14000c566:	cmp    QWORD PTR [rax],rsi
   14000c569:	je     0x14000c59f
   14000c56b:	mov    r8,QWORD PTR [rcx+0x68]
   14000c56f:	cmp    r8,QWORD PTR [rax]
   14000c572:	cmovb  r8,QWORD PTR [rax]
   14000c576:	mov    rax,QWORD PTR [rcx+0x20]
   14000c57a:	mov    rdx,QWORD PTR [rax]
   14000c57d:	lea    rcx,[rbp-0x28]
   14000c581:	sub    r8,rdx
   14000c584:	mov    QWORD PTR [rbp-0x18],rsi
   14000c588:	mov    edi,0x7
   14000c58d:	sar    r8,1
   14000c590:	mov    QWORD PTR [rbp-0x10],rdi
   14000c594:	mov    WORD PTR [rbp-0x28],si
   14000c598:	call   0x14000b730
   14000c59d:	jmp    0x14000c5d3
   14000c59f:	test   BYTE PTR [rcx+0x70],0x4
   14000c5a3:	jne    0x14000c5c2
   14000c5a5:	mov    rax,QWORD PTR [rcx+0x38]
   14000c5a9:	mov    r8,QWORD PTR [rax]
   14000c5ac:	test   r8,r8
   14000c5af:	je     0x14000c5c2
   14000c5b1:	mov    rax,QWORD PTR [rcx+0x50]
   14000c5b5:	movsxd rcx,DWORD PTR [rax]
   14000c5b8:	mov    rax,QWORD PTR [rdx+0x18]
   14000c5bc:	lea    r8,[r8+rcx*2]
   14000c5c0:	jmp    0x14000c57a
   14000c5c2:	mov    edi,0x7
   14000c5c7:	mov    QWORD PTR [rbp-0x18],rsi
   14000c5cb:	mov    QWORD PTR [rbp-0x10],rdi
   14000c5cf:	mov    WORD PTR [rbp-0x28],si
   14000c5d3:	mov    QWORD PTR [rbx+0x18],rdi
   14000c5d7:	lea    rdx,[rbp-0x28]
   14000c5db:	mov    QWORD PTR [rbx+0x10],rsi
   14000c5df:	mov    rcx,rbx
   14000c5e2:	mov    WORD PTR [rbx],si
   14000c5e5:	call   0x14000cfb4
   14000c5ea:	xor    r8d,r8d
   14000c5ed:	lea    rcx,[rbp-0x28]
   14000c5f1:	mov    dl,0x1
   14000c5f3:	call   0x14000b6b0
   14000c5f8:	mov    rax,rbx
   14000c5fb:	mov    rcx,QWORD PTR [rbp-0x8]
   14000c5ff:	xor    rcx,rsp
   14000c602:	call   0x140025df0
   14000c607:	mov    rbx,QWORD PTR [rsp+0x80]
   14000c60f:	add    rsp,0x50
   14000c613:	pop    rdi
   14000c614:	pop    rsi
   14000c615:	pop    rbp
   14000c616:	ret    
   14000c617:	int3   
   14000c618:	rex push rdi
   14000c61a:	sub    rsp,0x30
   14000c61e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c627:	mov    QWORD PTR [rsp+0x48],rbx
   14000c62c:	mov    ebx,edx
   14000c62e:	mov    rdi,rcx
   14000c631:	call   0x14000cddc
   14000c636:	nop
   14000c637:	lea    rax,[rip+0x3f41a]        # 0x14004ba58
   14000c63e:	mov    QWORD PTR [rdi],rax
   14000c641:	mov    r8d,ebx
   14000c644:	shl    r8d,0x2
   14000c648:	not    r8d
   14000c64b:	and    r8d,0x4
   14000c64f:	mov    eax,ebx
   14000c651:	mov    edx,r8d
   14000c654:	or     edx,0x2
   14000c657:	and    al,0x2
   14000c659:	cmovne edx,r8d
   14000c65d:	mov    eax,ebx
   14000c65f:	mov    ecx,edx
   14000c661:	or     ecx,0x8
   14000c664:	and    al,0x8
   14000c666:	cmove  ecx,edx
   14000c669:	and    QWORD PTR [rdi+0x68],0x0
   14000c66e:	mov    eax,ecx
   14000c670:	or     eax,0x10
   14000c673:	and    bl,0x4
   14000c676:	cmove  eax,ecx
   14000c679:	mov    DWORD PTR [rdi+0x70],eax
   14000c67c:	mov    rax,rdi
   14000c67f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c684:	add    rsp,0x30
   14000c688:	pop    rdi
   14000c689:	ret    
   14000c68a:	int3   
   14000c68b:	int3   
   14000c68c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c691:	mov    QWORD PTR [rsp+0x10],rbp
   14000c696:	mov    QWORD PTR [rsp+0x18],r8
   14000c69b:	push   rsi
   14000c69c:	push   rdi
   14000c69d:	push   r14
   14000c69f:	sub    rsp,0x20
   14000c6a3:	xor    ebp,ebp
   14000c6a5:	mov    r14,rdx
   14000c6a8:	mov    rsi,rcx
   14000c6ab:	mov    rdi,r8
   14000c6ae:	cmp    BYTE PTR [r8+0x19],bpl
   14000c6b2:	jne    0x14000c6f7
   14000c6b4:	mov    rax,QWORD PTR [r8+0x10]
   14000c6b8:	cmp    BYTE PTR [rax+0x19],bpl
   14000c6bc:	jne    0x14000c6d1
   14000c6be:	mov    r8,rax
   14000c6c1:	mov    rax,QWORD PTR [rax]
   14000c6c4:	cmp    BYTE PTR [rax+0x19],bpl
   14000c6c8:	je     0x14000c6be
   14000c6ca:	mov    QWORD PTR [rsp+0x50],r8
   14000c6cf:	jmp    0x14000c6f7
   14000c6d1:	mov    rax,QWORD PTR [r8+0x8]
   14000c6d5:	jmp    0x14000c6e9
   14000c6d7:	cmp    r8,QWORD PTR [rax+0x10]
   14000c6db:	jne    0x14000c6ef
   14000c6dd:	mov    r8,rax
   14000c6e0:	mov    QWORD PTR [rsp+0x50],rax
   14000c6e5:	mov    rax,QWORD PTR [rax+0x8]
   14000c6e9:	cmp    BYTE PTR [rax+0x19],bpl
   14000c6ed:	je     0x14000c6d7
   14000c6ef:	mov    r8,rax
   14000c6f2:	mov    QWORD PTR [rsp+0x50],rax
   14000c6f7:	mov    rcx,QWORD PTR [rdi]
   14000c6fa:	cmp    BYTE PTR [rcx+0x19],bpl
   14000c6fe:	je     0x14000c706
   14000c700:	mov    r9,QWORD PTR [rdi+0x10]
   14000c704:	jmp    0x14000c722
   14000c706:	mov    rax,QWORD PTR [rdi+0x10]
   14000c70a:	cmp    BYTE PTR [rax+0x19],bpl
   14000c70e:	je     0x14000c715
   14000c710:	mov    r9,rcx
   14000c713:	jmp    0x14000c722
   14000c715:	mov    r9,QWORD PTR [r8+0x10]
   14000c719:	cmp    r8,rdi
   14000c71c:	jne    0x14000c7ab
   14000c722:	mov    rdx,QWORD PTR [rdi+0x8]
   14000c726:	cmp    BYTE PTR [r9+0x19],bpl
   14000c72a:	jne    0x14000c730
   14000c72c:	mov    QWORD PTR [r9+0x8],rdx
   14000c730:	mov    rax,QWORD PTR [rsi]
   14000c733:	cmp    QWORD PTR [rax+0x8],rdi
   14000c737:	jne    0x14000c73f
   14000c739:	mov    QWORD PTR [rax+0x8],r9
   14000c73d:	jmp    0x14000c74d
   14000c73f:	cmp    QWORD PTR [rdx],rdi
   14000c742:	jne    0x14000c749
   14000c744:	mov    QWORD PTR [rdx],r9
   14000c747:	jmp    0x14000c74d
   14000c749:	mov    QWORD PTR [rdx+0x10],r9
   14000c74d:	mov    r8,QWORD PTR [rsi]
   14000c750:	cmp    QWORD PTR [r8],rdi
   14000c753:	jne    0x14000c777
   14000c755:	cmp    BYTE PTR [r9+0x19],bpl
   14000c759:	je     0x14000c760
   14000c75b:	mov    rax,rdx
   14000c75e:	jmp    0x14000c774
   14000c760:	mov    rcx,QWORD PTR [r9]
   14000c763:	mov    rax,r9
   14000c766:	jmp    0x14000c76e
   14000c768:	mov    rax,rcx
   14000c76b:	mov    rcx,QWORD PTR [rcx]
   14000c76e:	cmp    BYTE PTR [rcx+0x19],bpl
   14000c772:	je     0x14000c768
   14000c774:	mov    QWORD PTR [r8],rax
   14000c777:	mov    r8,QWORD PTR [rsi]
   14000c77a:	cmp    QWORD PTR [r8+0x10],rdi
   14000c77e:	jne    0x14000c818
   14000c784:	cmp    BYTE PTR [r9+0x19],bpl
   14000c788:	je     0x14000c78f
   14000c78a:	mov    rax,rdx
   14000c78d:	jmp    0x14000c7a5
   14000c78f:	mov    rcx,QWORD PTR [r9+0x10]
   14000c793:	mov    rax,r9
   14000c796:	jmp    0x14000c79f
   14000c798:	mov    rax,rcx
   14000c79b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c79f:	cmp    BYTE PTR [rcx+0x19],bpl
   14000c7a3:	je     0x14000c798
   14000c7a5:	mov    QWORD PTR [r8+0x10],rax
   14000c7a9:	jmp    0x14000c818
   14000c7ab:	mov    QWORD PTR [rcx+0x8],r8
   14000c7af:	mov    rax,QWORD PTR [rdi]
   14000c7b2:	mov    QWORD PTR [r8],rax
   14000c7b5:	cmp    r8,QWORD PTR [rdi+0x10]
   14000c7b9:	jne    0x14000c7c0
   14000c7bb:	mov    rdx,r8
   14000c7be:	jmp    0x14000c7e1
   14000c7c0:	mov    rdx,QWORD PTR [r8+0x8]
   14000c7c4:	cmp    BYTE PTR [r9+0x19],bpl
   14000c7c8:	jne    0x14000c7ce
   14000c7ca:	mov    QWORD PTR [r9+0x8],rdx
   14000c7ce:	mov    QWORD PTR [rdx],r9
   14000c7d1:	mov    rax,QWORD PTR [rdi+0x10]
   14000c7d5:	mov    QWORD PTR [r8+0x10],rax
   14000c7d9:	mov    rax,QWORD PTR [rdi+0x10]
   14000c7dd:	mov    QWORD PTR [rax+0x8],r8
   14000c7e1:	mov    rax,QWORD PTR [rsi]
   14000c7e4:	cmp    QWORD PTR [rax+0x8],rdi
   14000c7e8:	jne    0x14000c7f0
   14000c7ea:	mov    QWORD PTR [rax+0x8],r8
   14000c7ee:	jmp    0x14000c802
   14000c7f0:	mov    rax,QWORD PTR [rdi+0x8]
   14000c7f4:	cmp    QWORD PTR [rax],rdi
   14000c7f7:	jne    0x14000c7fe
   14000c7f9:	mov    QWORD PTR [rax],r8
   14000c7fc:	jmp    0x14000c802
   14000c7fe:	mov    QWORD PTR [rax+0x10],r8
   14000c802:	mov    rax,QWORD PTR [rdi+0x8]
   14000c806:	mov    QWORD PTR [r8+0x8],rax
   14000c80a:	mov    al,BYTE PTR [rdi+0x18]
   14000c80d:	mov    cl,BYTE PTR [r8+0x18]
   14000c811:	mov    BYTE PTR [r8+0x18],al
   14000c815:	mov    BYTE PTR [rdi+0x18],cl
   14000c818:	cmp    BYTE PTR [rdi+0x18],0x1
   14000c81c:	jne    0x14000caea
   14000c822:	mov    rax,QWORD PTR [rsi]
   14000c825:	cmp    r9,QWORD PTR [rax+0x8]
   14000c829:	je     0x14000cae5
   14000c82f:	cmp    BYTE PTR [r9+0x18],0x1
   14000c834:	mov    r10,rdx
   14000c837:	mov    r11,rdx
   14000c83a:	mov    r8,rdx
   14000c83d:	jne    0x14000cae5
   14000c843:	mov    rcx,QWORD PTR [rdx]
   14000c846:	cmp    r9,rcx
   14000c849:	jne    0x14000c91d
   14000c84f:	mov    rcx,QWORD PTR [rdx+0x10]
   14000c853:	cmp    BYTE PTR [rcx+0x18],bpl
   14000c857:	jne    0x14000c8ad
   14000c859:	mov    BYTE PTR [rcx+0x18],0x1
   14000c85d:	mov    rcx,QWORD PTR [rdx+0x10]
   14000c861:	mov    BYTE PTR [rdx+0x18],bpl
   14000c865:	mov    rax,QWORD PTR [rcx]
   14000c868:	mov    QWORD PTR [rdx+0x10],rax
   14000c86c:	mov    rax,QWORD PTR [rcx]
   14000c86f:	cmp    BYTE PTR [rax+0x19],bpl
   14000c873:	jne    0x14000c879
   14000c875:	mov    QWORD PTR [rax+0x8],rdx
   14000c879:	mov    rax,QWORD PTR [rdx+0x8]
   14000c87d:	mov    QWORD PTR [rcx+0x8],rax
   14000c881:	mov    rax,QWORD PTR [rsi]
   14000c884:	cmp    rdx,QWORD PTR [rax+0x8]
   14000c888:	jne    0x14000c890
   14000c88a:	mov    QWORD PTR [rax+0x8],rcx
   14000c88e:	jmp    0x14000c8a2
   14000c890:	mov    rax,QWORD PTR [rdx+0x8]
   14000c894:	cmp    rdx,QWORD PTR [rax]
   14000c897:	jne    0x14000c89e
   14000c899:	mov    QWORD PTR [rax],rcx
   14000c89c:	jmp    0x14000c8a2
   14000c89e:	mov    QWORD PTR [rax+0x10],rcx
   14000c8a2:	mov    QWORD PTR [rcx],rdx
   14000c8a5:	mov    QWORD PTR [rdx+0x8],rcx
   14000c8a9:	mov    rcx,QWORD PTR [rdx+0x10]
   14000c8ad:	cmp    BYTE PTR [rcx+0x19],bpl
   14000c8b1:	jne    0x14000c99d
   14000c8b7:	mov    rax,QWORD PTR [rcx]
   14000c8ba:	cmp    BYTE PTR [rax+0x18],0x1
   14000c8be:	jne    0x14000c8ce
   14000c8c0:	mov    rax,QWORD PTR [rcx+0x10]
   14000c8c4:	cmp    BYTE PTR [rax+0x18],0x1
   14000c8c8:	je     0x14000c999
   14000c8ce:	mov    rax,QWORD PTR [rcx+0x10]
   14000c8d2:	cmp    BYTE PTR [rax+0x18],0x1
   14000c8d6:	jne    0x14000c9cf
   14000c8dc:	mov    rax,QWORD PTR [rcx]
   14000c8df:	mov    BYTE PTR [rax+0x18],0x1
   14000c8e3:	mov    r8,QWORD PTR [rcx]
   14000c8e6:	mov    BYTE PTR [rcx+0x18],bpl
   14000c8ea:	mov    rax,QWORD PTR [r8+0x10]
   14000c8ee:	mov    QWORD PTR [rcx],rax
   14000c8f1:	mov    rax,QWORD PTR [r8+0x10]
   14000c8f5:	cmp    BYTE PTR [rax+0x19],bpl
   14000c8f9:	jne    0x14000c8ff
   14000c8fb:	mov    QWORD PTR [rax+0x8],rcx
   14000c8ff:	mov    rax,QWORD PTR [rcx+0x8]
   14000c903:	mov    QWORD PTR [r8+0x8],rax
   14000c907:	mov    rax,QWORD PTR [rsi]
   14000c90a:	cmp    rcx,QWORD PTR [rax+0x8]
   14000c90e:	jne    0x14000c9b0
   14000c914:	mov    QWORD PTR [rax+0x8],r8
   14000c918:	jmp    0x14000c9c3
   14000c91d:	cmp    BYTE PTR [rcx+0x18],bpl
   14000c921:	jne    0x14000c978
   14000c923:	mov    BYTE PTR [rcx+0x18],0x1
   14000c927:	mov    rcx,QWORD PTR [rdx]
   14000c92a:	mov    BYTE PTR [rdx+0x18],bpl
   14000c92e:	mov    rax,QWORD PTR [rcx+0x10]
   14000c932:	mov    QWORD PTR [rdx],rax
   14000c935:	mov    rax,QWORD PTR [rcx+0x10]
   14000c939:	cmp    BYTE PTR [rax+0x19],bpl
   14000c93d:	jne    0x14000c943
   14000c93f:	mov    QWORD PTR [rax+0x8],rdx
   14000c943:	mov    rax,QWORD PTR [rdx+0x8]
   14000c947:	mov    QWORD PTR [rcx+0x8],rax
   14000c94b:	mov    rax,QWORD PTR [rsi]
   14000c94e:	cmp    rdx,QWORD PTR [rax+0x8]
   14000c952:	jne    0x14000c95a
   14000c954:	mov    QWORD PTR [rax+0x8],rcx
   14000c958:	jmp    0x14000c96d
   14000c95a:	mov    rax,QWORD PTR [rdx+0x8]
   14000c95e:	cmp    rdx,QWORD PTR [rax+0x10]
   14000c962:	jne    0x14000c96a
   14000c964:	mov    QWORD PTR [rax+0x10],rcx
   14000c968:	jmp    0x14000c96d
   14000c96a:	mov    QWORD PTR [rax],rcx
   14000c96d:	mov    QWORD PTR [rcx+0x10],rdx
   14000c971:	mov    QWORD PTR [rdx+0x8],rcx
   14000c975:	mov    rcx,QWORD PTR [rdx]
   14000c978:	cmp    BYTE PTR [rcx+0x19],bpl
   14000c97c:	jne    0x14000c99d
   14000c97e:	mov    rax,QWORD PTR [rcx+0x10]
   14000c982:	cmp    BYTE PTR [rax+0x18],0x1
   14000c986:	jne    0x14000ca2a
   14000c98c:	mov    rax,QWORD PTR [rcx]
   14000c98f:	cmp    BYTE PTR [rax+0x18],0x1
   14000c993:	jne    0x14000ca2a
   14000c999:	mov    BYTE PTR [rcx+0x18],bpl
   14000c99d:	mov    rax,QWORD PTR [rsi]
   14000c9a0:	mov    r9,r11
   14000c9a3:	mov    rdx,QWORD PTR [rdx+0x8]
   14000c9a7:	cmp    r10,QWORD PTR [rax+0x8]
   14000c9ab:	jmp    0x14000c829
   14000c9b0:	mov    rax,QWORD PTR [rcx+0x8]
   14000c9b4:	cmp    rcx,QWORD PTR [rax+0x10]
   14000c9b8:	jne    0x14000c9c0
   14000c9ba:	mov    QWORD PTR [rax+0x10],r8
   14000c9be:	jmp    0x14000c9c3
   14000c9c0:	mov    QWORD PTR [rax],r8
   14000c9c3:	mov    QWORD PTR [r8+0x10],rcx
   14000c9c7:	mov    QWORD PTR [rcx+0x8],r8
   14000c9cb:	mov    rcx,QWORD PTR [rdx+0x10]
   14000c9cf:	mov    al,BYTE PTR [rdx+0x18]
   14000c9d2:	mov    BYTE PTR [rcx+0x18],al
   14000c9d5:	mov    BYTE PTR [rdx+0x18],0x1
   14000c9d9:	mov    rax,QWORD PTR [rcx+0x10]
   14000c9dd:	mov    BYTE PTR [rax+0x18],0x1
   14000c9e1:	mov    rcx,QWORD PTR [rdx+0x10]
   14000c9e5:	mov    rax,QWORD PTR [rcx]
   14000c9e8:	mov    QWORD PTR [rdx+0x10],rax
   14000c9ec:	mov    rax,QWORD PTR [rcx]
   14000c9ef:	cmp    BYTE PTR [rax+0x19],bpl
   14000c9f3:	jne    0x14000c9f9
   14000c9f5:	mov    QWORD PTR [rax+0x8],rdx
   14000c9f9:	mov    rax,QWORD PTR [rdx+0x8]
   14000c9fd:	mov    QWORD PTR [rcx+0x8],rax
   14000ca01:	mov    rax,QWORD PTR [rsi]
   14000ca04:	cmp    rdx,QWORD PTR [rax+0x8]
   14000ca08:	jne    0x14000ca10
   14000ca0a:	mov    QWORD PTR [rax+0x8],rcx
   14000ca0e:	jmp    0x14000ca22
   14000ca10:	mov    rax,QWORD PTR [rdx+0x8]
   14000ca14:	cmp    rdx,QWORD PTR [rax]
   14000ca17:	jne    0x14000ca1e
   14000ca19:	mov    QWORD PTR [rax],rcx
   14000ca1c:	jmp    0x14000ca22
   14000ca1e:	mov    QWORD PTR [rax+0x10],rcx
   14000ca22:	mov    QWORD PTR [rcx],rdx
   14000ca25:	jmp    0x14000cae1
   14000ca2a:	mov    rax,QWORD PTR [rcx]
   14000ca2d:	cmp    BYTE PTR [rax+0x18],0x1
   14000ca31:	jne    0x14000ca8a
   14000ca33:	mov    rax,QWORD PTR [rcx+0x10]
   14000ca37:	mov    BYTE PTR [rax+0x18],0x1
   14000ca3b:	mov    r8,QWORD PTR [rcx+0x10]
   14000ca3f:	mov    BYTE PTR [rcx+0x18],bpl
   14000ca43:	mov    rax,QWORD PTR [r8]
   14000ca46:	mov    QWORD PTR [rcx+0x10],rax
   14000ca4a:	mov    rax,QWORD PTR [r8]
   14000ca4d:	cmp    BYTE PTR [rax+0x19],bpl
   14000ca51:	jne    0x14000ca57
   14000ca53:	mov    QWORD PTR [rax+0x8],rcx
   14000ca57:	mov    rax,QWORD PTR [rcx+0x8]
   14000ca5b:	mov    QWORD PTR [r8+0x8],rax
   14000ca5f:	mov    rax,QWORD PTR [rsi]
   14000ca62:	cmp    rcx,QWORD PTR [rax+0x8]
   14000ca66:	jne    0x14000ca6e
   14000ca68:	mov    QWORD PTR [rax+0x8],r8
   14000ca6c:	jmp    0x14000ca80
   14000ca6e:	mov    rax,QWORD PTR [rcx+0x8]
   14000ca72:	cmp    rcx,QWORD PTR [rax]
   14000ca75:	jne    0x14000ca7c
   14000ca77:	mov    QWORD PTR [rax],r8
   14000ca7a:	jmp    0x14000ca80
   14000ca7c:	mov    QWORD PTR [rax+0x10],r8
   14000ca80:	mov    QWORD PTR [r8],rcx
   14000ca83:	mov    QWORD PTR [rcx+0x8],r8
   14000ca87:	mov    rcx,QWORD PTR [rdx]
   14000ca8a:	mov    al,BYTE PTR [rdx+0x18]
   14000ca8d:	mov    BYTE PTR [rcx+0x18],al
   14000ca90:	mov    BYTE PTR [rdx+0x18],0x1
   14000ca94:	mov    rax,QWORD PTR [rcx]
   14000ca97:	mov    BYTE PTR [rax+0x18],0x1
   14000ca9b:	mov    rcx,QWORD PTR [rdx]
   14000ca9e:	mov    rax,QWORD PTR [rcx+0x10]
   14000caa2:	mov    QWORD PTR [rdx],rax
   14000caa5:	mov    rax,QWORD PTR [rcx+0x10]
   14000caa9:	cmp    BYTE PTR [rax+0x19],bpl
   14000caad:	jne    0x14000cab3
   14000caaf:	mov    QWORD PTR [rax+0x8],rdx
   14000cab3:	mov    rax,QWORD PTR [rdx+0x8]
   14000cab7:	mov    QWORD PTR [rcx+0x8],rax
   14000cabb:	mov    rax,QWORD PTR [rsi]
   14000cabe:	cmp    rdx,QWORD PTR [rax+0x8]
   14000cac2:	jne    0x14000caca
   14000cac4:	mov    QWORD PTR [rax+0x8],rcx
   14000cac8:	jmp    0x14000cadd
   14000caca:	mov    rax,QWORD PTR [rdx+0x8]
   14000cace:	cmp    rdx,QWORD PTR [rax+0x10]
   14000cad2:	jne    0x14000cada
   14000cad4:	mov    QWORD PTR [rax+0x10],rcx
   14000cad8:	jmp    0x14000cadd
   14000cada:	mov    QWORD PTR [rax],rcx
   14000cadd:	mov    QWORD PTR [rcx+0x10],rdx
   14000cae1:	mov    QWORD PTR [rdx+0x8],rcx
   14000cae5:	mov    BYTE PTR [r9+0x18],0x1
   14000caea:	lea    rcx,[rdi+0x40]
   14000caee:	xor    r8d,r8d
   14000caf1:	mov    dl,0x1
   14000caf3:	call   0x14000b6b0
   14000caf8:	xor    r8d,r8d
   14000cafb:	lea    rcx,[rdi+0x20]
   14000caff:	mov    dl,0x1
   14000cb01:	call   0x14000b6b0
   14000cb06:	mov    edx,0x1
   14000cb0b:	mov    rcx,rdi
   14000cb0e:	lea    r8d,[rdx+0x5f]
   14000cb12:	call   0x140004804
   14000cb17:	mov    rax,QWORD PTR [rsi+0x8]
   14000cb1b:	test   rax,rax
   14000cb1e:	je     0x14000cb27
   14000cb20:	dec    rax
   14000cb23:	mov    QWORD PTR [rsi+0x8],rax
   14000cb27:	mov    rax,QWORD PTR [rsp+0x50]
   14000cb2c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cb31:	mov    rbp,QWORD PTR [rsp+0x48]
   14000cb36:	mov    QWORD PTR [r14],rax
   14000cb39:	mov    rax,r14
   14000cb3c:	add    rsp,0x20
   14000cb40:	pop    r14
   14000cb42:	pop    rdi
   14000cb43:	pop    rsi
   14000cb44:	ret    
   14000cb45:	int3   
   14000cb46:	int3   
   14000cb47:	int3   
   14000cb48:	mov    rax,rsp
   14000cb4b:	mov    QWORD PTR [rax+0x18],r8
   14000cb4f:	mov    QWORD PTR [rax+0x10],rdx
   14000cb53:	mov    QWORD PTR [rax+0x8],rcx
   14000cb57:	push   rbx
   14000cb58:	push   rsi
   14000cb59:	push   rdi
   14000cb5a:	push   r14
   14000cb5c:	push   r15
   14000cb5e:	sub    rsp,0x30
   14000cb62:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000cb6a:	mov    r15,r8
   14000cb6d:	mov    rbx,rcx
   14000cb70:	mov    rdi,rdx
   14000cb73:	or     rdi,0x7
   14000cb77:	movabs r9,0x7ffffffffffffffe
   14000cb81:	cmp    rdi,r9
   14000cb84:	jbe    0x14000cb8b
   14000cb86:	mov    rdi,rdx
   14000cb89:	jmp    0x14000cbbc
   14000cb8b:	mov    r8,QWORD PTR [rcx+0x18]
   14000cb8f:	mov    rcx,r8
   14000cb92:	shr    rcx,1
   14000cb95:	movabs rax,0xaaaaaaaaaaaaaaab
   14000cb9f:	mul    rdi
   14000cba2:	shr    rdx,1
   14000cba5:	cmp    rcx,rdx
   14000cba8:	jbe    0x14000cbbc
   14000cbaa:	mov    rax,r9
   14000cbad:	sub    rax,rcx
   14000cbb0:	cmp    r8,rax
   14000cbb3:	lea    rdi,[rcx+r8*1]
   14000cbb7:	jbe    0x14000cbbc
   14000cbb9:	mov    rdi,r9
   14000cbbc:	lea    rcx,[rdi+0x1]
   14000cbc0:	xor    r14d,r14d
   14000cbc3:	test   rcx,rcx
   14000cbc6:	jne    0x14000cbcd
   14000cbc8:	mov    esi,r14d
   14000cbcb:	jmp    0x14000cc19
   14000cbcd:	movabs rax,0x7fffffffffffffff
   14000cbd7:	cmp    rcx,rax
   14000cbda:	jbe    0x14000cbe1
   14000cbdc:	call   0x140027a0c
   14000cbe1:	add    rcx,rcx
   14000cbe4:	cmp    rcx,0x1000
   14000cbeb:	jb     0x14000cc11
   14000cbed:	lea    rax,[rcx+0x27]
   14000cbf1:	cmp    rax,rcx
   14000cbf4:	ja     0x14000cbfb
   14000cbf6:	call   0x140027a0c
   14000cbfb:	mov    rcx,rax
   14000cbfe:	call   0x140026118
   14000cc03:	lea    rsi,[rax+0x27]
   14000cc07:	and    rsi,0xffffffffffffffe0
   14000cc0b:	mov    QWORD PTR [rsi-0x8],rax
   14000cc0f:	jmp    0x14000cc19
   14000cc11:	call   0x140026118
   14000cc16:	mov    rsi,rax
   14000cc19:	jmp    0x14000cc32
   14000cc1b:	xor    r14d,r14d
   14000cc1e:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cc23:	mov    r15,QWORD PTR [rsp+0x70]
   14000cc28:	mov    rdi,QWORD PTR [rsp+0x68]
   14000cc2d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cc32:	test   r15,r15
   14000cc35:	je     0x14000cc57
   14000cc37:	cmp    QWORD PTR [rbx+0x18],0x8
   14000cc3c:	jb     0x14000cc43
   14000cc3e:	mov    rdx,QWORD PTR [rbx]
   14000cc41:	jmp    0x14000cc46
   14000cc43:	mov    rdx,rbx
   14000cc46:	test   r15,r15
   14000cc49:	je     0x14000cc57
   14000cc4b:	lea    r8,[r15+r15*1]
   14000cc4f:	mov    rcx,rsi
   14000cc52:	call   0x140028fd0
   14000cc57:	xor    r8d,r8d
   14000cc5a:	mov    dl,0x1
   14000cc5c:	mov    rcx,rbx
   14000cc5f:	call   0x14000b6b0
   14000cc64:	test   rbx,rbx
   14000cc67:	je     0x14000cc6c
   14000cc69:	mov    QWORD PTR [rbx],rsi
   14000cc6c:	mov    QWORD PTR [rbx+0x18],rdi
   14000cc70:	mov    QWORD PTR [rbx+0x10],r15
   14000cc74:	cmp    QWORD PTR [rbx+0x18],0x8
   14000cc79:	jb     0x14000cc7e
   14000cc7b:	mov    rbx,QWORD PTR [rbx]
   14000cc7e:	mov    WORD PTR [rbx+r15*2],r14w
   14000cc83:	add    rsp,0x30
   14000cc87:	pop    r15
   14000cc89:	pop    r14
   14000cc8b:	pop    rdi
   14000cc8c:	pop    rsi
   14000cc8d:	pop    rbx
   14000cc8e:	ret    
   14000cc8f:	int3   
   14000cc90:	mov    rax,rsp
   14000cc93:	mov    QWORD PTR [rax+0x18],r8
   14000cc97:	mov    QWORD PTR [rax+0x10],rdx
   14000cc9b:	mov    QWORD PTR [rax+0x8],rcx
   14000cc9f:	push   rbx
   14000cca0:	push   rsi
   14000cca1:	push   rdi
   14000cca2:	push   r14
   14000cca4:	sub    rsp,0x38
   14000cca8:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000ccb0:	mov    r14,r8
   14000ccb3:	mov    rbx,rcx
   14000ccb6:	mov    rdi,rdx
   14000ccb9:	or     rdi,0xf
   14000ccbd:	mov    r9,0xfffffffffffffffe
   14000ccc4:	cmp    rdi,r9
   14000ccc7:	jbe    0x14000ccce
   14000ccc9:	mov    rdi,rdx
   14000cccc:	jmp    0x14000ccff
   14000ccce:	mov    r8,QWORD PTR [rcx+0x18]
   14000ccd2:	mov    rcx,r8
   14000ccd5:	shr    rcx,1
   14000ccd8:	movabs rax,0xaaaaaaaaaaaaaaab
   14000cce2:	mul    rdi
   14000cce5:	shr    rdx,1
   14000cce8:	cmp    rcx,rdx
   14000cceb:	jbe    0x14000ccff
   14000cced:	mov    rax,r9
   14000ccf0:	sub    rax,rcx
   14000ccf3:	cmp    r8,rax
   14000ccf6:	lea    rdi,[rcx+r8*1]
   14000ccfa:	jbe    0x14000ccff
   14000ccfc:	mov    rdi,r9
   14000ccff:	lea    rcx,[rdi+0x1]
   14000cd03:	test   rcx,rcx
   14000cd06:	jne    0x14000cd0c
   14000cd08:	xor    esi,esi
   14000cd0a:	jmp    0x14000cd41
   14000cd0c:	cmp    rcx,0x1000
   14000cd13:	jb     0x14000cd39
   14000cd15:	lea    rax,[rcx+0x27]
   14000cd19:	cmp    rax,rcx
   14000cd1c:	ja     0x14000cd23
   14000cd1e:	call   0x140027a0c
   14000cd23:	mov    rcx,rax
   14000cd26:	call   0x140026118
   14000cd2b:	lea    rsi,[rax+0x27]
   14000cd2f:	and    rsi,0xffffffffffffffe0
   14000cd33:	mov    QWORD PTR [rsi-0x8],rax
   14000cd37:	jmp    0x14000cd41
   14000cd39:	call   0x140026118
   14000cd3e:	mov    rsi,rax
   14000cd41:	jmp    0x14000cd57
   14000cd43:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cd48:	mov    r14,QWORD PTR [rsp+0x70]
   14000cd4d:	mov    rdi,QWORD PTR [rsp+0x68]
   14000cd52:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cd57:	test   r14,r14
   14000cd5a:	je     0x14000cd7b
   14000cd5c:	cmp    QWORD PTR [rbx+0x18],0x10
   14000cd61:	jb     0x14000cd68
   14000cd63:	mov    rdx,QWORD PTR [rbx]
   14000cd66:	jmp    0x14000cd6b
   14000cd68:	mov    rdx,rbx
   14000cd6b:	test   r14,r14
   14000cd6e:	je     0x14000cd7b
   14000cd70:	mov    r8,r14
   14000cd73:	mov    rcx,rsi
   14000cd76:	call   0x140028fd0
   14000cd7b:	mov    rdx,QWORD PTR [rbx+0x18]
   14000cd7f:	cmp    rdx,0x10
   14000cd83:	jb     0x14000cd96
   14000cd85:	inc    rdx
   14000cd88:	mov    r8d,0x1
   14000cd8e:	mov    rcx,QWORD PTR [rbx]
   14000cd91:	call   0x140004804
   14000cd96:	mov    QWORD PTR [rbx+0x18],0xf
   14000cd9e:	and    QWORD PTR [rbx+0x10],0x0
   14000cda3:	cmp    QWORD PTR [rbx+0x18],0x10
   14000cda8:	jb     0x14000cdaf
   14000cdaa:	mov    rax,QWORD PTR [rbx]
   14000cdad:	jmp    0x14000cdb2
   14000cdaf:	mov    rax,rbx
   14000cdb2:	mov    BYTE PTR [rax],0x0
   14000cdb5:	mov    QWORD PTR [rbx],rsi
   14000cdb8:	mov    QWORD PTR [rbx+0x18],rdi
   14000cdbc:	mov    QWORD PTR [rbx+0x10],r14
   14000cdc0:	cmp    QWORD PTR [rbx+0x18],0x10
   14000cdc5:	jb     0x14000cdca
   14000cdc7:	mov    rbx,rsi
   14000cdca:	mov    BYTE PTR [rbx+r14*1],0x0
   14000cdcf:	add    rsp,0x38
   14000cdd3:	pop    r14
   14000cdd5:	pop    rdi
   14000cdd6:	pop    rsi
   14000cdd7:	pop    rbx
   14000cdd8:	ret    
   14000cdd9:	int3   
   14000cdda:	int3   
   14000cddb:	int3   
   14000cddc:	rex push rdi
   14000cdde:	sub    rsp,0x30
   14000cde2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cdeb:	mov    QWORD PTR [rsp+0x40],rbx
   14000cdf0:	mov    rdi,rcx
   14000cdf3:	lea    rax,[rip+0x3ebde]        # 0x14004b9d8
   14000cdfa:	mov    QWORD PTR [rcx],rax
   14000cdfd:	mov    ecx,0x10
   14000ce02:	call   0x140026118
   14000ce07:	mov    rbx,rax
   14000ce0a:	mov    cl,0x1
   14000ce0c:	call   0x140027574
   14000ce11:	mov    QWORD PTR [rbx+0x8],rax
   14000ce15:	mov    QWORD PTR [rdi+0x60],rbx
   14000ce19:	lea    rax,[rdi+0x8]
   14000ce1d:	mov    QWORD PTR [rdi+0x18],rax
   14000ce21:	lea    rcx,[rdi+0x10]
   14000ce25:	mov    QWORD PTR [rdi+0x20],rcx
   14000ce29:	lea    rax,[rdi+0x28]
   14000ce2d:	mov    QWORD PTR [rdi+0x38],rax
   14000ce31:	lea    rax,[rdi+0x30]
   14000ce35:	mov    QWORD PTR [rdi+0x40],rax
   14000ce39:	lea    rax,[rdi+0x48]
   14000ce3d:	mov    QWORD PTR [rdi+0x50],rax
   14000ce41:	lea    rax,[rdi+0x4c]
   14000ce45:	mov    QWORD PTR [rdi+0x58],rax
   14000ce49:	xor    edx,edx
   14000ce4b:	mov    QWORD PTR [rcx],rdx
   14000ce4e:	mov    rax,QWORD PTR [rdi+0x40]
   14000ce52:	mov    QWORD PTR [rax],rdx
   14000ce55:	mov    rax,QWORD PTR [rdi+0x58]
   14000ce59:	mov    DWORD PTR [rax],edx
   14000ce5b:	mov    rax,QWORD PTR [rdi+0x18]
   14000ce5f:	mov    QWORD PTR [rax],rdx
   14000ce62:	mov    rax,QWORD PTR [rdi+0x38]
   14000ce66:	mov    QWORD PTR [rax],rdx
   14000ce69:	mov    rax,QWORD PTR [rdi+0x50]
   14000ce6d:	mov    DWORD PTR [rax],edx
   14000ce6f:	mov    rax,rdi
   14000ce72:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ce77:	add    rsp,0x30
   14000ce7b:	pop    rdi
   14000ce7c:	ret    
   14000ce7d:	int3   
   14000ce7e:	int3   
   14000ce7f:	int3   
   14000ce80:	rex push rdi
   14000ce82:	sub    rsp,0x40
   14000ce86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ce8f:	mov    QWORD PTR [rsp+0x50],rbx
   14000ce94:	mov    QWORD PTR [rsp+0x58],rsi
   14000ce99:	mov    sil,r8b
   14000ce9c:	mov    rbx,rdx
   14000ce9f:	mov    rdi,rcx
   14000cea2:	call   0x140005630
   14000cea7:	mov    QWORD PTR [rdi+0x48],rbx
   14000ceab:	and    QWORD PTR [rdi+0x50],0x0
   14000ceb0:	lea    rdx,[rsp+0x28]
   14000ceb5:	mov    rcx,rdi
   14000ceb8:	call   0x140005600
   14000cebd:	nop
   14000cebe:	mov    rcx,rax
   14000cec1:	call   0x14000dba0
   14000cec6:	mov    rbx,rax
   14000cec9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cece:	test   rcx,rcx
   14000ced1:	je     0x14000ceed
   14000ced3:	mov    rdx,QWORD PTR [rcx]
   14000ced6:	call   QWORD PTR [rdx+0x10]
   14000ced9:	test   rax,rax
   14000cedc:	je     0x14000ceed
   14000cede:	mov    r8,QWORD PTR [rax]
   14000cee1:	mov    edx,0x1
   14000cee6:	mov    rcx,rax
   14000cee9:	call   QWORD PTR [r8]
   14000ceec:	nop
   14000ceed:	mov    rax,QWORD PTR [rbx]
   14000cef0:	mov    dl,0x20
   14000cef2:	mov    rcx,rbx
   14000cef5:	call   QWORD PTR [rax+0x60]
   14000cef8:	mov    WORD PTR [rdi+0x58],ax
   14000cefc:	cmp    QWORD PTR [rdi+0x48],0x0
   14000cf01:	jne    0x14000cf14
   14000cf03:	mov    edx,DWORD PTR [rdi+0x10]
   14000cf06:	or     edx,0x4
   14000cf09:	xor    r8d,r8d
   14000cf0c:	mov    rcx,rdi
   14000cf0f:	call   0x1400054f8
   14000cf14:	test   sil,sil
   14000cf17:	je     0x14000cf21
   14000cf19:	mov    rcx,rdi
   14000cf1c:	call   0x140027a9c
   14000cf21:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cf26:	mov    rsi,QWORD PTR [rsp+0x58]
   14000cf2b:	add    rsp,0x40
   14000cf2f:	pop    rdi
   14000cf30:	ret    
   14000cf31:	int3   
   14000cf32:	int3   
   14000cf33:	int3   
   14000cf34:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf39:	mov    QWORD PTR [rsp+0x10],rbp
   14000cf3e:	mov    QWORD PTR [rsp+0x18],rsi
   14000cf43:	push   rdi
   14000cf44:	sub    rsp,0x20
   14000cf48:	cmp    BYTE PTR [rdx+0x19],0x0
   14000cf4c:	mov    rdi,rdx
   14000cf4f:	mov    rbp,rcx
   14000cf52:	mov    rsi,rdx
   14000cf55:	jne    0x14000cf9c
   14000cf57:	mov    rdx,QWORD PTR [rsi+0x10]
   14000cf5b:	mov    rcx,rbp
   14000cf5e:	call   0x14000cf34
   14000cf63:	mov    rsi,QWORD PTR [rsi]
   14000cf66:	lea    rcx,[rdi+0x40]
   14000cf6a:	xor    r8d,r8d
   14000cf6d:	mov    dl,0x1
   14000cf6f:	call   0x14000b6b0
   14000cf74:	xor    r8d,r8d
   14000cf77:	lea    rcx,[rdi+0x20]
   14000cf7b:	mov    dl,0x1
   14000cf7d:	call   0x14000b6b0
   14000cf82:	mov    edx,0x1
   14000cf87:	mov    rcx,rdi
   14000cf8a:	lea    r8d,[rdx+0x5f]
   14000cf8e:	call   0x140004804
   14000cf93:	cmp    BYTE PTR [rsi+0x19],0x0
   14000cf97:	mov    rdi,rsi
   14000cf9a:	je     0x14000cf57
   14000cf9c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cfa1:	mov    rbp,QWORD PTR [rsp+0x38]
   14000cfa6:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cfab:	add    rsp,0x20
   14000cfaf:	pop    rdi
   14000cfb0:	ret    
   14000cfb1:	int3   
   14000cfb2:	int3   
   14000cfb3:	int3   
   14000cfb4:	mov    QWORD PTR [rsp+0x8],rbx
   14000cfb9:	mov    QWORD PTR [rsp+0x10],rsi
   14000cfbe:	push   rdi
   14000cfbf:	sub    rsp,0x20
   14000cfc3:	xor    esi,esi
   14000cfc5:	mov    rbx,rdx
   14000cfc8:	cmp    QWORD PTR [rdx+0x18],0x8
   14000cfcd:	mov    rdi,rcx
   14000cfd0:	jae    0x14000cfe6
   14000cfd2:	mov    r8,QWORD PTR [rdx+0x10]
   14000cfd6:	add    r8,0x1
   14000cfda:	je     0x14000cff4
   14000cfdc:	add    r8,r8
   14000cfdf:	call   0x140028fd0
   14000cfe4:	jmp    0x14000cff4
   14000cfe6:	test   rdi,rdi
   14000cfe9:	je     0x14000cff1
   14000cfeb:	mov    rax,QWORD PTR [rdx]
   14000cfee:	mov    QWORD PTR [rcx],rax
   14000cff1:	mov    QWORD PTR [rdx],rsi
   14000cff4:	mov    rax,QWORD PTR [rbx+0x10]
   14000cff8:	mov    QWORD PTR [rdi+0x10],rax
   14000cffc:	mov    rax,QWORD PTR [rbx+0x18]
   14000d000:	mov    QWORD PTR [rdi+0x18],rax
   14000d004:	mov    QWORD PTR [rbx+0x18],0x7
   14000d00c:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d011:	mov    QWORD PTR [rbx+0x10],rsi
   14000d015:	jb     0x14000d01a
   14000d017:	mov    rbx,QWORD PTR [rbx]
   14000d01a:	mov    WORD PTR [rbx],si
   14000d01d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d022:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d027:	add    rsp,0x20
   14000d02b:	pop    rdi
   14000d02c:	ret    
   14000d02d:	int3   
   14000d02e:	int3   
   14000d02f:	int3   
   14000d030:	sub    rsp,0x28
   14000d034:	mov    rax,QWORD PTR gs:0x58
   14000d03d:	mov    edx,0x4
   14000d042:	mov    rcx,QWORD PTR [rax]
   14000d045:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000d048:	cmp    DWORD PTR [rip+0x6a5c2],eax        # 0x140077610
   14000d04e:	jle    0x14000d096
   14000d050:	lea    rcx,[rip+0x6a5b9]        # 0x140077610
   14000d057:	call   0x140025fbc
   14000d05c:	cmp    DWORD PTR [rip+0x6a5ad],0xffffffff        # 0x140077610
   14000d063:	jne    0x14000d096
   14000d065:	lea    rax,[rip+0x3e85c]        # 0x14004b8c8
   14000d06c:	mov    QWORD PTR [rip+0x6a591],0x5        # 0x140077608
   14000d077:	lea    rcx,[rip+0x3d892]        # 0x14004a910
   14000d07e:	mov    QWORD PTR [rip+0x6a57b],rax        # 0x140077600
   14000d085:	call   0x1400263e4
   14000d08a:	lea    rcx,[rip+0x6a57f]        # 0x140077610
   14000d091:	call   0x140025f5c
   14000d096:	lea    rax,[rip+0x6a563]        # 0x140077600
   14000d09d:	add    rsp,0x28
   14000d0a1:	ret    
   14000d0a2:	int3   
   14000d0a3:	int3   
   14000d0a4:	mov    rax,rsp
   14000d0a7:	mov    QWORD PTR [rax+0x8],rbx
   14000d0ab:	mov    QWORD PTR [rax+0x10],rsi
   14000d0af:	mov    QWORD PTR [rax+0x18],rdi
   14000d0b3:	mov    QWORD PTR [rax+0x20],r14
   14000d0b7:	push   r15
   14000d0b9:	sub    rsp,0x20
   14000d0bd:	mov    rbx,rcx
   14000d0c0:	mov    r14,rdx
   14000d0c3:	mov    rcx,QWORD PTR [rcx+0x20]
   14000d0c7:	mov    r8,QWORD PTR [rbx+0x18]
   14000d0cb:	add    r8,rdx
   14000d0ce:	cmp    r8,rcx
   14000d0d1:	jb     0x14000d145
   14000d0d3:	xor    edi,edi
   14000d0d5:	cmp    QWORD PTR [rbx+0x10],rdi
   14000d0d9:	jne    0x14000d0f5
   14000d0db:	cmp    QWORD PTR [rbx],rdi
   14000d0de:	jne    0x14000d0ef
   14000d0e0:	lea    ecx,[rdi+0x1]
   14000d0e3:	call   0x140026118
   14000d0e8:	mov    QWORD PTR [rbx],rax
   14000d0eb:	mov    QWORD PTR [rbx+0x8],rax
   14000d0ef:	mov    rcx,QWORD PTR [rbx+0x28]
   14000d0f3:	jmp    0x14000d103
   14000d0f5:	sub    rcx,QWORD PTR [rbx+0x10]
   14000d0f9:	lea    rax,[rcx+0x1]
   14000d0fd:	shr    rax,1
   14000d100:	add    rcx,rax
   14000d103:	mov    r15,QWORD PTR [rbx+0x18]
   14000d107:	sub    r15,QWORD PTR [rbx+0x10]
   14000d10b:	lea    rsi,[r15+r14*1]
   14000d10f:	cmp    rcx,rsi
   14000d112:	cmovae rsi,rcx
   14000d116:	mov    rcx,QWORD PTR [rbx+0x10]
   14000d11a:	test   rsi,rsi
   14000d11d:	jne    0x14000d126
   14000d11f:	call   0x1400304c4
   14000d124:	jmp    0x14000d131
   14000d126:	mov    rdx,rsi
   14000d129:	call   0x14002c764
   14000d12e:	mov    rdi,rax
   14000d131:	lea    rcx,[rdi+r15*1]
   14000d135:	mov    QWORD PTR [rbx+0x10],rdi
   14000d139:	lea    rax,[rsi+rdi*1]
   14000d13d:	mov    QWORD PTR [rbx+0x18],rcx
   14000d141:	mov    QWORD PTR [rbx+0x20],rax
   14000d145:	mov    rax,QWORD PTR [rbx+0x18]
   14000d149:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d14e:	mov    rdi,QWORD PTR [rsp+0x40]
   14000d153:	lea    rcx,[rax+r14*1]
   14000d157:	mov    r14,QWORD PTR [rsp+0x48]
   14000d15c:	mov    QWORD PTR [rbx+0x18],rcx
   14000d160:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d165:	add    rsp,0x20
   14000d169:	pop    r15
   14000d16b:	ret    
   14000d16c:	mov    QWORD PTR [rsp+0x10],rbx
   14000d171:	mov    QWORD PTR [rsp+0x18],rbp
   14000d176:	mov    QWORD PTR [rsp+0x20],rsi
   14000d17b:	push   rdi
   14000d17c:	sub    rsp,0x20
   14000d180:	mov    rsi,rdx
   14000d183:	xor    r8d,r8d
   14000d186:	mov    edx,DWORD PTR [rcx+0x10]
   14000d189:	mov    rbp,rcx
   14000d18c:	movzx  ecx,dl
   14000d18f:	test   dl,dl
   14000d191:	je     0x14000d681
   14000d197:	sub    ecx,0x1
   14000d19a:	je     0x14000d672
   14000d1a0:	sub    ecx,0x1
   14000d1a3:	je     0x14000d66b
   14000d1a9:	sub    ecx,0x1
   14000d1ac:	je     0x14000d543
   14000d1b2:	sub    ecx,0x1
   14000d1b5:	je     0x14000d457
   14000d1bb:	cmp    ecx,0x1
   14000d1be:	je     0x14000d424
   14000d1c4:	mov    eax,edx
   14000d1c6:	lea    edi,[r8+0x1]
   14000d1ca:	shr    eax,0xa
   14000d1cd:	test   dil,al
   14000d1d0:	je     0x14000d26a
   14000d1d6:	mov    rax,QWORD PTR [rsi+0x20]
   14000d1da:	mov    ebp,DWORD PTR [rbp+0x0]
   14000d1dd:	cmp    rax,QWORD PTR [rsi+0x18]
   14000d1e1:	je     0x14000d22a
   14000d1e3:	mov    rbx,rax
   14000d1e6:	sub    rbx,0x10
   14000d1ea:	mov    QWORD PTR [rsp+0x30],rbx
   14000d1ef:	mov    rax,QWORD PTR [rbx]
   14000d1f2:	test   rax,rax
   14000d1f5:	je     0x14000d225
   14000d1f7:	mov    edx,edi
   14000d1f9:	mov    rcx,QWORD PTR [rsi]
   14000d1fc:	cmp    BYTE PTR [rbx+0x8],r8b
   14000d200:	je     0x14000d20c
   14000d202:	call   0x14000d0a4
   14000d207:	mov    BYTE PTR [rax],0x2c
   14000d20a:	jmp    0x14000d225
   14000d20c:	and    al,dil
   14000d20f:	neg    al
   14000d211:	sbb    bl,bl
   14000d213:	and    bl,0xe
   14000d216:	add    bl,0x2c
   14000d219:	call   0x14000d0a4
   14000d21e:	mov    BYTE PTR [rax],bl
   14000d220:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d225:	add    QWORD PTR [rbx],rdi
   14000d228:	jmp    0x14000d22e
   14000d22a:	mov    BYTE PTR [rsi+0x38],dil
   14000d22e:	mov    rcx,QWORD PTR [rsi]
   14000d231:	mov    edx,0xb
   14000d236:	call   0x14000d0a4
   14000d23b:	mov    rbx,rax
   14000d23e:	mov    rdx,rax
   14000d241:	test   ebp,ebp
   14000d243:	jns    0x14000d250
   14000d245:	not    ebp
   14000d247:	mov    BYTE PTR [rax],0x2d
   14000d24a:	add    ebp,edi
   14000d24c:	lea    rdx,[rax+0x1]
   14000d250:	mov    ecx,ebp
   14000d252:	call   0x140005a1c
   14000d257:	sub    rax,rbx
   14000d25a:	sub    rax,0xb
   14000d25e:	mov    rcx,QWORD PTR [rsi]
   14000d261:	add    QWORD PTR [rcx+0x18],rax
   14000d265:	jmp    0x14000d707
   14000d26a:	mov    eax,edx
   14000d26c:	shr    eax,0xb
   14000d26f:	test   dil,al
   14000d272:	je     0x14000d2ed
   14000d274:	mov    eax,DWORD PTR [rbp+0x0]
   14000d277:	mov    DWORD PTR [rsp+0x30],eax
   14000d27b:	mov    rax,QWORD PTR [rsi+0x20]
   14000d27f:	cmp    rax,QWORD PTR [rsi+0x18]
   14000d283:	je     0x14000d2c1
   14000d285:	mov    rbp,rax
   14000d288:	mov    rax,QWORD PTR [rax-0x10]
   14000d28c:	test   rax,rax
   14000d28f:	je     0x14000d2bb
   14000d291:	mov    rdx,rdi
   14000d294:	mov    rcx,QWORD PTR [rsi]
   14000d297:	cmp    BYTE PTR [rbp-0x8],r8b
   14000d29b:	je     0x14000d2a7
   14000d29d:	call   0x14000d0a4
   14000d2a2:	mov    BYTE PTR [rax],0x2c
   14000d2a5:	jmp    0x14000d2bb
   14000d2a7:	and    al,dil
   14000d2aa:	neg    al
   14000d2ac:	sbb    bl,bl
   14000d2ae:	and    bl,0xe
   14000d2b1:	add    bl,0x2c
   14000d2b4:	call   0x14000d0a4
   14000d2b9:	mov    BYTE PTR [rax],bl
   14000d2bb:	add    QWORD PTR [rbp-0x10],rdi
   14000d2bf:	jmp    0x14000d2c5
   14000d2c1:	mov    BYTE PTR [rsi+0x38],dil
   14000d2c5:	mov    rcx,QWORD PTR [rsi]
   14000d2c8:	mov    edx,0xa
   14000d2cd:	call   0x14000d0a4
   14000d2d2:	mov    ecx,DWORD PTR [rsp+0x30]
   14000d2d6:	mov    rdx,rax
   14000d2d9:	mov    rbx,rax
   14000d2dc:	call   0x140005a1c
   14000d2e1:	sub    rax,rbx
   14000d2e4:	sub    rax,0xa
   14000d2e8:	jmp    0x14000d25e
   14000d2ed:	mov    eax,edx
   14000d2ef:	shr    eax,0xc
   14000d2f2:	test   dil,al
   14000d2f5:	je     0x14000d38e
   14000d2fb:	mov    rax,QWORD PTR [rsi+0x20]
   14000d2ff:	mov    rbp,QWORD PTR [rbp+0x0]
   14000d303:	cmp    rax,QWORD PTR [rsi+0x18]
   14000d307:	je     0x14000d351
   14000d309:	mov    rbx,rax
   14000d30c:	sub    rbx,0x10
   14000d310:	mov    QWORD PTR [rsp+0x30],rbx
   14000d315:	mov    rax,QWORD PTR [rbx]
   14000d318:	test   rax,rax
   14000d31b:	je     0x14000d34c
   14000d31d:	mov    rdx,rdi
   14000d320:	mov    rcx,QWORD PTR [rsi]
   14000d323:	cmp    BYTE PTR [rbx+0x8],r8b
   14000d327:	je     0x14000d333
   14000d329:	call   0x14000d0a4
   14000d32e:	mov    BYTE PTR [rax],0x2c
   14000d331:	jmp    0x14000d34c
   14000d333:	and    al,dil
   14000d336:	neg    al
   14000d338:	sbb    bl,bl
   14000d33a:	and    bl,0xe
   14000d33d:	add    bl,0x2c
   14000d340:	call   0x14000d0a4
   14000d345:	mov    BYTE PTR [rax],bl
   14000d347:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d34c:	add    QWORD PTR [rbx],rdi
   14000d34f:	jmp    0x14000d355
   14000d351:	mov    BYTE PTR [rsi+0x38],dil
   14000d355:	mov    rcx,QWORD PTR [rsi]
   14000d358:	mov    edx,0x15
   14000d35d:	call   0x14000d0a4
   14000d362:	mov    rbx,rax
   14000d365:	mov    rdx,rax
   14000d368:	test   rbp,rbp
   14000d36b:	jns    0x14000d37a
   14000d36d:	not    rbp
   14000d370:	mov    BYTE PTR [rax],0x2d
   14000d373:	add    rbp,rdi
   14000d376:	lea    rdx,[rax+0x1]
   14000d37a:	mov    rcx,rbp
   14000d37d:	call   0x140005c28
   14000d382:	sub    rax,rbx
   14000d385:	sub    rax,0x15
   14000d389:	jmp    0x14000d25e
   14000d38e:	shr    edx,0xd
   14000d391:	test   dil,dl
   14000d394:	je     0x14000d412
   14000d396:	mov    rax,QWORD PTR [rbp+0x0]
   14000d39a:	mov    QWORD PTR [rsp+0x30],rax
   14000d39f:	mov    rax,QWORD PTR [rsi+0x20]
   14000d3a3:	cmp    rax,QWORD PTR [rsi+0x18]
   14000d3a7:	je     0x14000d3e5
   14000d3a9:	mov    rbp,rax
   14000d3ac:	mov    rax,QWORD PTR [rax-0x10]
   14000d3b0:	test   rax,rax
   14000d3b3:	je     0x14000d3df
   14000d3b5:	mov    rdx,rdi
   14000d3b8:	mov    rcx,QWORD PTR [rsi]
   14000d3bb:	cmp    BYTE PTR [rbp-0x8],r8b
   14000d3bf:	je     0x14000d3cb
   14000d3c1:	call   0x14000d0a4
   14000d3c6:	mov    BYTE PTR [rax],0x2c
   14000d3c9:	jmp    0x14000d3df
   14000d3cb:	and    al,dil
   14000d3ce:	neg    al
   14000d3d0:	sbb    bl,bl
   14000d3d2:	and    bl,0xe
   14000d3d5:	add    bl,0x2c
   14000d3d8:	call   0x14000d0a4
   14000d3dd:	mov    BYTE PTR [rax],bl
   14000d3df:	add    QWORD PTR [rbp-0x10],rdi
   14000d3e3:	jmp    0x14000d3e9
   14000d3e5:	mov    BYTE PTR [rsi+0x38],dil
   14000d3e9:	mov    rcx,QWORD PTR [rsi]
   14000d3ec:	mov    edx,0x14
   14000d3f1:	call   0x14000d0a4
   14000d3f6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d3fb:	mov    rdx,rax
   14000d3fe:	mov    rbx,rax
   14000d401:	call   0x140005c28
   14000d406:	sub    rax,rbx
   14000d409:	sub    rax,0x14
   14000d40d:	jmp    0x14000d25e
   14000d412:	movsd  xmm1,QWORD PTR [rbp+0x0]
   14000d417:	mov    rcx,rsi
   14000d41a:	call   0x14000de78
   14000d41f:	jmp    0x14000d70a
   14000d424:	and    edx,0x400000
   14000d42a:	je     0x14000d439
   14000d42c:	movsx  eax,BYTE PTR [rbp+0xf]
   14000d430:	mov    ecx,0xf
   14000d435:	sub    ecx,eax
   14000d437:	jmp    0x14000d43c
   14000d439:	mov    ecx,DWORD PTR [rbp+0x8]
   14000d43c:	test   edx,edx
   14000d43e:	jne    0x14000d444
   14000d440:	mov    rbp,QWORD PTR [rbp+0x0]
   14000d444:	mov    r8d,ecx
   14000d447:	mov    rdx,rbp
   14000d44a:	mov    rcx,rsi
   14000d44d:	call   0x14000dd14
   14000d452:	jmp    0x14000d70a
   14000d457:	lea    rbx,[rsi+0x8]
   14000d45b:	mov    edi,0x1
   14000d460:	mov    rax,QWORD PTR [rbx+0x18]
   14000d464:	cmp    rax,QWORD PTR [rbx+0x10]
   14000d468:	je     0x14000d4b6
   14000d46a:	mov    rbx,QWORD PTR [rsi+0x20]
   14000d46e:	sub    rbx,0x10
   14000d472:	mov    QWORD PTR [rsp+0x30],rbx
   14000d477:	mov    rax,QWORD PTR [rbx]
   14000d47a:	test   rax,rax
   14000d47d:	je     0x14000d4ad
   14000d47f:	mov    edx,edi
   14000d481:	mov    rcx,QWORD PTR [rsi]
   14000d484:	cmp    BYTE PTR [rbx+0x8],r8b
   14000d488:	je     0x14000d494
   14000d48a:	call   0x14000d0a4
   14000d48f:	mov    BYTE PTR [rax],0x2c
   14000d492:	jmp    0x14000d4ad
   14000d494:	and    al,dil
   14000d497:	neg    al
   14000d499:	sbb    bl,bl
   14000d49b:	and    bl,0xe
   14000d49e:	add    bl,0x2c
   14000d4a1:	call   0x14000d0a4
   14000d4a6:	mov    BYTE PTR [rax],bl
   14000d4a8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d4ad:	add    QWORD PTR [rbx],rdi
   14000d4b0:	lea    rbx,[rsi+0x8]
   14000d4b4:	jmp    0x14000d4ba
   14000d4b6:	mov    BYTE PTR [rsi+0x38],dil
   14000d4ba:	mov    rcx,rbx
   14000d4bd:	call   0x1400108ec
   14000d4c2:	mov    QWORD PTR [rsp+0x30],rax
   14000d4c7:	test   rax,rax
   14000d4ca:	je     0x14000d4d4
   14000d4cc:	and    QWORD PTR [rax],0x0
   14000d4d0:	mov    BYTE PTR [rax+0x8],dil
   14000d4d4:	mov    rcx,QWORD PTR [rsi]
   14000d4d7:	mov    rdx,rdi
   14000d4da:	call   0x14000d0a4
   14000d4df:	mov    BYTE PTR [rax],0x5b
   14000d4e2:	mov    eax,DWORD PTR [rbp+0x8]
   14000d4e5:	mov    r8,QWORD PTR [rbp+0x0]
   14000d4e9:	lea    rcx,[rax+rax*2]
   14000d4ed:	lea    rax,[r8+rcx*8]
   14000d4f1:	cmp    r8,rax
   14000d4f4:	jmp    0x14000d524
   14000d4f6:	mov    rdx,rsi
   14000d4f9:	mov    rcx,r8
   14000d4fc:	call   0x14000d16c
   14000d501:	test   al,al
   14000d503:	je     0x14000d664
   14000d509:	mov    eax,DWORD PTR [rbp+0x8]
   14000d50c:	mov    r8,QWORD PTR [rsp+0x30]
   14000d511:	add    r8,0x18
   14000d515:	lea    rcx,[rax+rax*2]
   14000d519:	mov    rax,QWORD PTR [rbp+0x0]
   14000d51d:	lea    rcx,[rax+rcx*8]
   14000d521:	cmp    r8,rcx
   14000d524:	mov    QWORD PTR [rsp+0x30],r8
   14000d529:	jne    0x14000d4f6
   14000d52b:	add    QWORD PTR [rbx+0x18],0xfffffffffffffff0
   14000d530:	mov    rdx,rdi
   14000d533:	mov    rcx,QWORD PTR [rsi]
   14000d536:	call   0x14000d0a4
   14000d53b:	mov    BYTE PTR [rax],0x5d
   14000d53e:	jmp    0x14000d707
   14000d543:	lea    rcx,[rsi+0x8]
   14000d547:	mov    edi,0x1
   14000d54c:	mov    rax,QWORD PTR [rcx+0x18]
   14000d550:	cmp    rax,QWORD PTR [rcx+0x10]
   14000d554:	je     0x14000d5a2
   14000d556:	mov    rbx,QWORD PTR [rsi+0x20]
   14000d55a:	sub    rbx,0x10
   14000d55e:	mov    QWORD PTR [rsp+0x30],rbx
   14000d563:	mov    rax,QWORD PTR [rbx]
   14000d566:	test   rax,rax
   14000d569:	je     0x14000d59d
   14000d56b:	mov    edx,edi
   14000d56d:	mov    rcx,QWORD PTR [rsi]
   14000d570:	cmp    BYTE PTR [rbx+0x8],r8b
   14000d574:	je     0x14000d580
   14000d576:	call   0x14000d0a4
   14000d57b:	mov    BYTE PTR [rax],0x2c
   14000d57e:	jmp    0x14000d599
   14000d580:	and    al,dil
   14000d583:	neg    al
   14000d585:	sbb    bl,bl
   14000d587:	and    bl,0xe
   14000d58a:	add    bl,0x2c
   14000d58d:	call   0x14000d0a4
   14000d592:	mov    BYTE PTR [rax],bl
   14000d594:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d599:	lea    rcx,[rsi+0x8]
   14000d59d:	add    QWORD PTR [rbx],rdi
   14000d5a0:	jmp    0x14000d5a6
   14000d5a2:	mov    BYTE PTR [rsi+0x38],dil
   14000d5a6:	call   0x1400108ec
   14000d5ab:	mov    QWORD PTR [rsp+0x30],rax
   14000d5b0:	test   rax,rax
   14000d5b3:	je     0x14000d5bd
   14000d5b5:	and    QWORD PTR [rax],0x0
   14000d5b9:	mov    BYTE PTR [rax+0x8],0x0
   14000d5bd:	mov    rcx,QWORD PTR [rsi]
   14000d5c0:	mov    rdx,rdi
   14000d5c3:	call   0x14000d0a4
   14000d5c8:	mov    BYTE PTR [rax],0x7b
   14000d5cb:	mov    rax,QWORD PTR [rbp+0x0]
   14000d5cf:	mov    ecx,DWORD PTR [rbp+0x8]
   14000d5d2:	lea    rdx,[rcx+rcx*2]
   14000d5d6:	shl    rdx,0x4
   14000d5da:	add    rdx,rax
   14000d5dd:	cmp    rax,rdx
   14000d5e0:	je     0x14000d64c
   14000d5e2:	lea    rbx,[rax+0x10]
   14000d5e6:	mov    ecx,0xf
   14000d5eb:	mov    edx,DWORD PTR [rbx]
   14000d5ed:	and    edx,0x400000
   14000d5f3:	je     0x14000d5fd
   14000d5f5:	movsx  eax,BYTE PTR [rbx-0x1]
   14000d5f9:	sub    ecx,eax
   14000d5fb:	jmp    0x14000d600
   14000d5fd:	mov    ecx,DWORD PTR [rbx-0x8]
   14000d600:	test   edx,edx
   14000d602:	lea    rdx,[rbx-0x10]
   14000d606:	jne    0x14000d60c
   14000d608:	mov    rdx,QWORD PTR [rbx-0x10]
   14000d60c:	mov    r8d,ecx
   14000d60f:	mov    rcx,rsi
   14000d612:	call   0x14000dd14
   14000d617:	test   al,al
   14000d619:	je     0x14000d664
   14000d61b:	lea    rcx,[rbx+0x8]
   14000d61f:	mov    rdx,rsi
   14000d622:	call   0x14000d16c
   14000d627:	test   al,al
   14000d629:	je     0x14000d664
   14000d62b:	mov    eax,DWORD PTR [rbp+0x8]
   14000d62e:	add    rbx,0x30
   14000d632:	lea    rcx,[rax+rax*2]
   14000d636:	shl    rcx,0x4
   14000d63a:	lea    rax,[rbx-0x10]
   14000d63e:	add    rcx,QWORD PTR [rbp+0x0]
   14000d642:	cmp    rax,rcx
   14000d645:	mov    ecx,0xf
   14000d64a:	jne    0x14000d5eb
   14000d64c:	add    QWORD PTR [rsi+0x20],0xfffffffffffffff0
   14000d651:	mov    rdx,rdi
   14000d654:	mov    rcx,QWORD PTR [rsi]
   14000d657:	call   0x14000d0a4
   14000d65c:	mov    BYTE PTR [rax],0x7d
   14000d65f:	jmp    0x14000d707
   14000d664:	xor    al,al
   14000d666:	jmp    0x14000d70a
   14000d66b:	mov    edx,0x1
   14000d670:	jmp    0x14000d674
   14000d672:	xor    edx,edx
   14000d674:	mov    rcx,rsi
   14000d677:	call   0x14000df90
   14000d67c:	jmp    0x14000d70a
   14000d681:	mov    rax,QWORD PTR [rsi+0x20]
   14000d685:	mov    edi,0x1
   14000d68a:	cmp    rax,QWORD PTR [rsi+0x18]
   14000d68e:	je     0x14000d6cb
   14000d690:	mov    rbp,rax
   14000d693:	mov    rax,QWORD PTR [rax-0x10]
   14000d697:	test   rax,rax
   14000d69a:	je     0x14000d6c5
   14000d69c:	mov    edx,edi
   14000d69e:	mov    rcx,QWORD PTR [rsi]
   14000d6a1:	cmp    BYTE PTR [rbp-0x8],r8b
   14000d6a5:	je     0x14000d6b1
   14000d6a7:	call   0x14000d0a4
   14000d6ac:	mov    BYTE PTR [rax],0x2c
   14000d6af:	jmp    0x14000d6c5
   14000d6b1:	and    al,dil
   14000d6b4:	neg    al
   14000d6b6:	sbb    bl,bl
   14000d6b8:	and    bl,0xe
   14000d6bb:	add    bl,0x2c
   14000d6be:	call   0x14000d0a4
   14000d6c3:	mov    BYTE PTR [rax],bl
   14000d6c5:	add    QWORD PTR [rbp-0x10],rdi
   14000d6c9:	jmp    0x14000d6cf
   14000d6cb:	mov    BYTE PTR [rsi+0x38],dil
   14000d6cf:	mov    rcx,QWORD PTR [rsi]
   14000d6d2:	mov    rdx,rdi
   14000d6d5:	call   0x14000d0a4
   14000d6da:	mov    rdx,rdi
   14000d6dd:	mov    BYTE PTR [rax],0x6e
   14000d6e0:	mov    rcx,QWORD PTR [rsi]
   14000d6e3:	call   0x14000d0a4
   14000d6e8:	mov    rdx,rdi
   14000d6eb:	mov    BYTE PTR [rax],0x75
   14000d6ee:	mov    rcx,QWORD PTR [rsi]
   14000d6f1:	call   0x14000d0a4
   14000d6f6:	mov    rdx,rdi
   14000d6f9:	mov    BYTE PTR [rax],0x6c
   14000d6fc:	mov    rcx,QWORD PTR [rsi]
   14000d6ff:	call   0x14000d0a4
   14000d704:	mov    BYTE PTR [rax],0x6c
   14000d707:	mov    al,dil
   14000d70a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d70f:	mov    rbp,QWORD PTR [rsp+0x40]
   14000d714:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d719:	add    rsp,0x20
   14000d71d:	pop    rdi
   14000d71e:	ret    
   14000d71f:	int3   
   14000d720:	mov    rax,rsp
   14000d723:	mov    QWORD PTR [rax+0x8],rcx
   14000d727:	push   rdi
   14000d728:	push   r14
   14000d72a:	push   r15
   14000d72c:	sub    rsp,0x30
   14000d730:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14000d738:	mov    QWORD PTR [rax+0x10],rbx
   14000d73c:	mov    QWORD PTR [rax+0x18],rbp
   14000d740:	mov    QWORD PTR [rax+0x20],rsi
   14000d744:	mov    rbp,r8
   14000d747:	mov    r15,rdx
   14000d74a:	mov    rbx,rcx
   14000d74d:	xor    edi,edi
   14000d74f:	mov    DWORD PTR [rax-0x28],edi
   14000d752:	mov    QWORD PTR [rcx+0x18],0x7
   14000d75a:	mov    QWORD PTR [rcx+0x10],rdi
   14000d75e:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d763:	jb     0x14000d76a
   14000d765:	mov    rax,QWORD PTR [rcx]
   14000d768:	jmp    0x14000d76d
   14000d76a:	mov    rax,rbx
   14000d76d:	mov    WORD PTR [rax],di
   14000d770:	mov    DWORD PTR [rsp+0x20],0x1
   14000d778:	mov    rcx,QWORD PTR [rdx+0x10]
   14000d77c:	or     rsi,0xffffffffffffffff
   14000d780:	cmp    WORD PTR [r8],di
   14000d784:	jne    0x14000d78b
   14000d786:	mov    rax,rdi
   14000d789:	jmp    0x14000d798
   14000d78b:	mov    rax,rsi
   14000d78e:	inc    rax
   14000d791:	cmp    WORD PTR [r8+rax*2],di
   14000d796:	jne    0x14000d78e
   14000d798:	lea    rdx,[rax+rcx*1]
   14000d79c:	mov    r14,QWORD PTR [rbx+0x10]
   14000d7a0:	cmp    r14,rdx
   14000d7a3:	ja     0x14000d7d2
   14000d7a5:	cmp    QWORD PTR [rbx+0x18],rdx
   14000d7a9:	je     0x14000d7d2
   14000d7ab:	mov    r8b,0x1
   14000d7ae:	mov    rcx,rbx
   14000d7b1:	call   0x14000c264
   14000d7b6:	test   al,al
   14000d7b8:	je     0x14000d7d2
   14000d7ba:	mov    QWORD PTR [rbx+0x10],r14
   14000d7be:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d7c3:	jb     0x14000d7ca
   14000d7c5:	mov    rax,QWORD PTR [rbx]
   14000d7c8:	jmp    0x14000d7cd
   14000d7ca:	mov    rax,rbx
   14000d7cd:	mov    WORD PTR [rax+r14*2],di
   14000d7d2:	mov    r9,rsi
   14000d7d5:	xor    r8d,r8d
   14000d7d8:	mov    rdx,r15
   14000d7db:	mov    rcx,rbx
   14000d7de:	call   0x14000f3bc
   14000d7e3:	cmp    WORD PTR [rbp+0x0],di
   14000d7e7:	je     0x14000d7f6
   14000d7e9:	inc    rsi
   14000d7ec:	cmp    WORD PTR [rbp+rsi*2+0x0],di
   14000d7f1:	jne    0x14000d7e9
   14000d7f3:	mov    rdi,rsi
   14000d7f6:	mov    r8,rdi
   14000d7f9:	mov    rdx,rbp
   14000d7fc:	mov    rcx,rbx
   14000d7ff:	call   0x14000f260
   14000d804:	mov    rax,rbx
   14000d807:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d80c:	mov    rbp,QWORD PTR [rsp+0x60]
   14000d811:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d816:	add    rsp,0x30
   14000d81a:	pop    r15
   14000d81c:	pop    r14
   14000d81e:	pop    rdi
   14000d81f:	ret    
   14000d820:	int3   
   14000d821:	int3   
   14000d822:	int3   
   14000d823:	int3   
   14000d824:	mov    QWORD PTR [rsp+0x8],rbx
   14000d829:	push   rdi
   14000d82a:	sub    rsp,0x30
   14000d82e:	xor    edi,edi
   14000d830:	mov    rax,r8
   14000d833:	mov    r9,rdx
   14000d836:	mov    rbx,rcx
   14000d839:	mov    DWORD PTR [rsp+0x20],edi
   14000d83d:	cmp    WORD PTR [r8],di
   14000d841:	jne    0x14000d848
   14000d843:	mov    r8d,edi
   14000d846:	jmp    0x14000d856
   14000d848:	or     r8,0xffffffffffffffff
   14000d84c:	inc    r8
   14000d84f:	cmp    WORD PTR [rax+r8*2],di
   14000d854:	jne    0x14000d84c
   14000d856:	mov    rdx,rax
   14000d859:	mov    rcx,r9
   14000d85c:	call   0x14000f260
   14000d861:	mov    QWORD PTR [rbx+0x18],0x7
   14000d869:	mov    rdx,rax
   14000d86c:	mov    QWORD PTR [rbx+0x10],rdi
   14000d870:	mov    rcx,rbx
   14000d873:	mov    WORD PTR [rbx],di
   14000d876:	call   0x14000cfb4
   14000d87b:	mov    rax,rbx
   14000d87e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d883:	add    rsp,0x30
   14000d887:	pop    rdi
   14000d888:	ret    
   14000d889:	int3   
   14000d88a:	int3   
   14000d88b:	int3   
   14000d88c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d891:	push   rdi
   14000d892:	sub    rsp,0x30
   14000d896:	mov    rax,r8
   14000d899:	mov    r10,rdx
   14000d89c:	mov    rbx,rcx
   14000d89f:	xor    edi,edi
   14000d8a1:	mov    rdx,rax
   14000d8a4:	mov    DWORD PTR [rsp+0x20],edi
   14000d8a8:	mov    rcx,r10
   14000d8ab:	or     r9,0xffffffffffffffff
   14000d8af:	xor    r8d,r8d
   14000d8b2:	call   0x14000f3bc
   14000d8b7:	mov    QWORD PTR [rbx+0x18],0x7
   14000d8bf:	mov    rdx,rax
   14000d8c2:	mov    QWORD PTR [rbx+0x10],rdi
   14000d8c6:	mov    rcx,rbx
   14000d8c9:	mov    WORD PTR [rbx],di
   14000d8cc:	call   0x14000cfb4
   14000d8d1:	mov    rax,rbx
   14000d8d4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d8d9:	add    rsp,0x30
   14000d8dd:	pop    rdi
   14000d8de:	ret    
   14000d8df:	int3   
   14000d8e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d8e5:	push   rdi
   14000d8e6:	sub    rsp,0x30
   14000d8ea:	mov    rax,QWORD PTR [rdx+0x18]
   14000d8ee:	xor    edi,edi
   14000d8f0:	sub    rax,QWORD PTR [rdx+0x10]
   14000d8f4:	mov    r10,r8
   14000d8f7:	mov    r11,rdx
   14000d8fa:	mov    rbx,rcx
   14000d8fd:	mov    DWORD PTR [rsp+0x20],edi
   14000d901:	cmp    QWORD PTR [r8+0x10],rax
   14000d905:	jbe    0x14000d922
   14000d907:	mov    rax,QWORD PTR [r8+0x18]
   14000d90b:	sub    rax,QWORD PTR [r8+0x10]
   14000d90f:	cmp    rax,QWORD PTR [rdx+0x10]
   14000d913:	jb     0x14000d922
   14000d915:	mov    r8,rdx
   14000d918:	mov    rcx,r10
   14000d91b:	call   0x14000e1f0
   14000d920:	jmp    0x14000d934
   14000d922:	or     r9,0xffffffffffffffff
   14000d926:	xor    r8d,r8d
   14000d929:	mov    rdx,r10
   14000d92c:	mov    rcx,r11
   14000d92f:	call   0x14000f3bc
   14000d934:	mov    QWORD PTR [rbx+0x18],0x7
   14000d93c:	mov    rdx,rax
   14000d93f:	mov    QWORD PTR [rbx+0x10],rdi
   14000d943:	mov    rcx,rbx
   14000d946:	mov    WORD PTR [rbx],di
   14000d949:	call   0x14000cfb4
   14000d94e:	mov    rax,rbx
   14000d951:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d956:	add    rsp,0x30
   14000d95a:	pop    rdi
   14000d95b:	ret    
   14000d95c:	rex push rbx
   14000d95e:	sub    rsp,0x50
   14000d962:	mov    rax,QWORD PTR [rip+0x636e7]        # 0x140071050
   14000d969:	xor    rax,rsp
   14000d96c:	mov    QWORD PTR [rsp+0x40],rax
   14000d971:	cmp    BYTE PTR [rdx],0x0
   14000d974:	mov    rbx,rcx
   14000d977:	mov    rax,rdx
   14000d97a:	je     0x14000d984
   14000d97c:	inc    rax
   14000d97f:	cmp    BYTE PTR [rax],0x0
   14000d982:	jne    0x14000d97c
   14000d984:	xor    ecx,ecx
   14000d986:	mov    QWORD PTR [rsp+0x28],rdx
   14000d98b:	mov    QWORD PTR [rsp+0x30],rcx
   14000d990:	lea    r8,[rsp+0x28]
   14000d995:	sub    eax,edx
   14000d997:	mov    DWORD PTR [rsp+0x38],0x100005
   14000d99f:	mov    rcx,rbx
   14000d9a2:	mov    DWORD PTR [rsp+0x30],eax
   14000d9a6:	lea    rdx,[rsp+0x20]
   14000d9ab:	call   0x14000dad4
   14000d9b0:	mov    eax,DWORD PTR [rbx+0x8]
   14000d9b3:	mov    rcx,QWORD PTR [rsp+0x20]
   14000d9b8:	lea    rax,[rax+rax*2]
   14000d9bc:	shl    rax,0x4
   14000d9c0:	add    rax,QWORD PTR [rbx]
   14000d9c3:	cmp    rcx,rax
   14000d9c6:	je     0x14000d9ce
   14000d9c8:	lea    rax,[rcx+0x18]
   14000d9cc:	jmp    0x14000da34
   14000d9ce:	mov    rax,QWORD PTR gs:0x58
   14000d9d7:	mov    edx,0x4
   14000d9dc:	mov    rcx,QWORD PTR [rax]
   14000d9df:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000d9e2:	cmp    DWORD PTR [rip+0x69c68],eax        # 0x140077650
   14000d9e8:	jle    0x14000da2d
   14000d9ea:	lea    rcx,[rip+0x69c5f]        # 0x140077650
   14000d9f1:	call   0x140025fbc
   14000d9f6:	cmp    DWORD PTR [rip+0x69c53],0xffffffff        # 0x140077650
   14000d9fd:	jne    0x14000da2d
   14000d9ff:	xor    eax,eax
   14000da01:	lea    rcx,[rip+0x3cf0c]        # 0x14004a914
   14000da08:	and    DWORD PTR [rip+0x69c3a],eax        # 0x140077648
   14000da0e:	mov    QWORD PTR [rip+0x69c23],rax        # 0x140077638
   14000da15:	mov    QWORD PTR [rip+0x69c24],rax        # 0x140077640
   14000da1c:	call   0x1400263e4
   14000da21:	lea    rcx,[rip+0x69c28]        # 0x140077650
   14000da28:	call   0x140025f5c
   14000da2d:	lea    rax,[rip+0x69c04]        # 0x140077638
   14000da34:	mov    rcx,QWORD PTR [rsp+0x40]
   14000da39:	xor    rcx,rsp
   14000da3c:	call   0x140025df0
   14000da41:	add    rsp,0x50
   14000da45:	pop    rbx
   14000da46:	ret    
   14000da47:	int3   
   14000da48:	mov    QWORD PTR [rsp+0x8],rbx
   14000da4d:	push   rdi
   14000da4e:	sub    rsp,0x30
   14000da52:	and    DWORD PTR [rsp+0x20],0x0
   14000da57:	mov    rdi,rcx
   14000da5a:	mov    ecx,0x88
   14000da5f:	mov    rbx,rdx
   14000da62:	call   0x140026118
   14000da67:	mov    rdx,rbx
   14000da6a:	mov    rcx,rax
   14000da6d:	call   0x140007dec
   14000da72:	mov    rbx,QWORD PTR [rsp+0x40]
   14000da77:	mov    QWORD PTR [rdi],rax
   14000da7a:	mov    rax,rdi
   14000da7d:	add    rsp,0x30
   14000da81:	pop    rdi
   14000da82:	ret    
   14000da83:	int3   
   14000da84:	mov    QWORD PTR [rsp+0x8],rbx
   14000da89:	push   rdi
   14000da8a:	sub    rsp,0x30
   14000da8e:	xor    edi,edi
   14000da90:	mov    rax,r8
   14000da93:	mov    rbx,rcx
   14000da96:	mov    DWORD PTR [rsp+0x20],edi
   14000da9a:	xor    edx,edx
   14000da9c:	mov    rcx,rax
   14000da9f:	lea    r9d,[rdi+0x22]
   14000daa3:	lea    r8d,[rdi+0x1]
   14000daa7:	call   0x14000e088
   14000daac:	mov    QWORD PTR [rbx+0x18],0x7
   14000dab4:	mov    rdx,rax
   14000dab7:	mov    QWORD PTR [rbx+0x10],rdi
   14000dabb:	mov    rcx,rbx
   14000dabe:	mov    WORD PTR [rbx],di
   14000dac1:	call   0x14000cfb4
   14000dac6:	mov    rax,rbx
   14000dac9:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dace:	add    rsp,0x30
   14000dad2:	pop    rdi
   14000dad3:	ret    
   14000dad4:	mov    rax,rsp
   14000dad7:	mov    QWORD PTR [rax+0x8],rbx
   14000dadb:	mov    QWORD PTR [rax+0x10],rbp
   14000dadf:	mov    QWORD PTR [rax+0x18],rsi
   14000dae3:	mov    QWORD PTR [rax+0x20],rdi
   14000dae7:	push   r14
   14000dae9:	sub    rsp,0x20
   14000daed:	mov    r9,QWORD PTR [rcx]
   14000daf0:	mov    r14,r8
   14000daf3:	mov    eax,DWORD PTR [rcx+0x8]
   14000daf6:	mov    rsi,rdx
   14000daf9:	mov    QWORD PTR [rdx],r9
   14000dafc:	lea    rbx,[rax+rax*2]
   14000db00:	shl    rbx,0x4
   14000db04:	add    rbx,r9
   14000db07:	cmp    r9,rbx
   14000db0a:	je     0x14000db7f
   14000db0c:	mov    ebp,DWORD PTR [r8+0x10]
   14000db10:	and    ebp,0x400000
   14000db16:	mov    rdi,QWORD PTR [rsi]
   14000db19:	test   ebp,ebp
   14000db1b:	je     0x14000db2d
   14000db1d:	movsx  eax,BYTE PTR [r14+0xf]
   14000db22:	mov    r8d,0xf
   14000db28:	sub    r8d,eax
   14000db2b:	jmp    0x14000db31
   14000db2d:	mov    r8d,DWORD PTR [r14+0x8]
   14000db31:	mov    edx,DWORD PTR [rdi+0x10]
   14000db34:	and    edx,0x400000
   14000db3a:	je     0x14000db49
   14000db3c:	movsx  eax,BYTE PTR [rdi+0xf]
   14000db40:	mov    ecx,0xf
   14000db45:	sub    ecx,eax
   14000db47:	jmp    0x14000db4c
   14000db49:	mov    ecx,DWORD PTR [rdi+0x8]
   14000db4c:	cmp    r8d,ecx
   14000db4f:	jne    0x14000db73
   14000db51:	mov    rcx,r14
   14000db54:	test   ebp,ebp
   14000db56:	jne    0x14000db5b
   14000db58:	mov    rcx,QWORD PTR [r14]
   14000db5b:	test   edx,edx
   14000db5d:	mov    rdx,rdi
   14000db60:	jne    0x14000db65
   14000db62:	mov    rdx,QWORD PTR [rdi]
   14000db65:	cmp    rcx,rdx
   14000db68:	je     0x14000db7f
   14000db6a:	call   0x14002aac0
   14000db6f:	test   eax,eax
   14000db71:	je     0x14000db7f
   14000db73:	lea    rax,[rdi+0x30]
   14000db77:	mov    QWORD PTR [rsi],rax
   14000db7a:	cmp    rax,rbx
   14000db7d:	jne    0x14000db16
   14000db7f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db84:	mov    rax,rsi
   14000db87:	mov    rsi,QWORD PTR [rsp+0x40]
   14000db8c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000db91:	mov    rdi,QWORD PTR [rsp+0x48]
   14000db96:	add    rsp,0x20
   14000db9a:	pop    r14
   14000db9c:	ret    
   14000db9d:	int3   
   14000db9e:	int3   
   14000db9f:	int3   
   14000dba0:	rex push rbp
   14000dba2:	push   rbx
   14000dba3:	push   rsi
   14000dba4:	push   rdi
   14000dba5:	push   r14
   14000dba7:	mov    rbp,rsp
   14000dbaa:	sub    rsp,0x40
   14000dbae:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14000dbb6:	mov    r14,rcx
   14000dbb9:	xor    edx,edx
   14000dbbb:	lea    rcx,[rbp+0x38]
   14000dbbf:	call   0x140027310
   14000dbc4:	nop
   14000dbc5:	mov    rsi,QWORD PTR [rip+0x69a5c]        # 0x140077628
   14000dbcc:	mov    QWORD PTR [rbp+0x40],rsi
   14000dbd0:	mov    rdi,QWORD PTR [rip+0x687e9]        # 0x1400763c0
   14000dbd7:	test   rdi,rdi
   14000dbda:	jne    0x14000dc17
   14000dbdc:	xor    edx,edx
   14000dbde:	lea    rcx,[rbp+0x30]
   14000dbe2:	call   0x140027310
   14000dbe7:	cmp    QWORD PTR [rip+0x687d2],rdi        # 0x1400763c0
   14000dbee:	jne    0x14000dc07
   14000dbf0:	mov    eax,DWORD PTR [rip+0x687b2]        # 0x1400763a8
   14000dbf6:	inc    eax
   14000dbf8:	mov    DWORD PTR [rip+0x687aa],eax        # 0x1400763a8
   14000dbfe:	cdqe   
   14000dc00:	mov    QWORD PTR [rip+0x687b9],rax        # 0x1400763c0
   14000dc07:	lea    rcx,[rbp+0x30]
   14000dc0b:	call   0x140027390
   14000dc10:	mov    rdi,QWORD PTR [rip+0x687a9]        # 0x1400763c0
   14000dc17:	mov    rcx,QWORD PTR [r14+0x8]
   14000dc1b:	cmp    rdi,QWORD PTR [rcx+0x18]
   14000dc1f:	jae    0x14000dc2b
   14000dc21:	mov    rax,QWORD PTR [rcx+0x10]
   14000dc25:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000dc29:	jmp    0x14000dc2d
   14000dc2b:	xor    ebx,ebx
   14000dc2d:	test   rbx,rbx
   14000dc30:	jne    0x14000dcbd
   14000dc36:	cmp    BYTE PTR [rcx+0x24],bl
   14000dc39:	je     0x14000dc52
   14000dc3b:	call   0x14002756c
   14000dc40:	cmp    rdi,QWORD PTR [rax+0x18]
   14000dc44:	jae    0x14000dc50
   14000dc46:	mov    rax,QWORD PTR [rax+0x10]
   14000dc4a:	mov    rbx,QWORD PTR [rax+rdi*8]
   14000dc4e:	jmp    0x14000dc52
   14000dc50:	xor    ebx,ebx
   14000dc52:	test   rbx,rbx
   14000dc55:	jne    0x14000dcbd
   14000dc57:	test   rsi,rsi
   14000dc5a:	je     0x14000dc61
   14000dc5c:	mov    rbx,rsi
   14000dc5f:	jmp    0x14000dcbd
   14000dc61:	mov    rdx,r14
   14000dc64:	lea    rcx,[rbp+0x40]
   14000dc68:	call   0x140004b8c
   14000dc6d:	cmp    rax,0xffffffffffffffff
   14000dc71:	jne    0x14000dca0
   14000dc73:	xor    eax,eax
   14000dc75:	mov    QWORD PTR [rbp-0x8],rax
   14000dc79:	lea    rax,[rip+0x54008]        # 0x140061c88
   14000dc80:	mov    QWORD PTR [rbp-0x10],rax
   14000dc84:	lea    rax,[rip+0x3dad5]        # 0x14004b760
   14000dc8b:	mov    QWORD PTR [rbp-0x18],rax
   14000dc8f:	lea    rdx,[rip+0x62242]        # 0x14006fed8
   14000dc96:	lea    rcx,[rbp-0x18]
   14000dc9a:	call   0x14002ab88
   14000dc9f:	int3   
   14000dca0:	mov    rbx,QWORD PTR [rbp+0x40]
   14000dca4:	mov    QWORD PTR [rip+0x6997d],rbx        # 0x140077628
   14000dcab:	mov    rdx,QWORD PTR [rbx]
   14000dcae:	mov    rcx,rbx
   14000dcb1:	call   QWORD PTR [rdx+0x8]
   14000dcb4:	mov    rcx,rbx
   14000dcb7:	call   0x140027534
   14000dcbc:	nop
   14000dcbd:	lea    rcx,[rbp+0x38]
   14000dcc1:	call   0x140027390
   14000dcc6:	mov    rax,rbx
   14000dcc9:	add    rsp,0x40
   14000dccd:	pop    r14
   14000dccf:	pop    rdi
   14000dcd0:	pop    rsi
   14000dcd1:	pop    rbx
   14000dcd2:	pop    rbp
   14000dcd3:	ret    
   14000dcd4:	rex push rbx
   14000dcd6:	sub    rsp,0x20
   14000dcda:	mov    rbx,rcx
   14000dcdd:	mov    rax,rdx
   14000dce0:	lea    rcx,[rip+0x3da61]        # 0x14004b748
   14000dce7:	mov    QWORD PTR [rbx],rcx
   14000dcea:	lea    rdx,[rbx+0x8]
   14000dcee:	xor    ecx,ecx
   14000dcf0:	mov    QWORD PTR [rdx],rcx
   14000dcf3:	mov    QWORD PTR [rdx+0x8],rcx
   14000dcf7:	lea    rcx,[rax+0x8]
   14000dcfb:	call   0x140028f04
   14000dd00:	lea    rax,[rip+0x3da59]        # 0x14004b760
   14000dd07:	mov    QWORD PTR [rbx],rax
   14000dd0a:	mov    rax,rbx
   14000dd0d:	add    rsp,0x20
   14000dd11:	pop    rbx
   14000dd12:	ret    
   14000dd13:	int3   
   14000dd14:	mov    QWORD PTR [rsp+0x8],rbx
   14000dd19:	mov    QWORD PTR [rsp+0x10],rbp
   14000dd1e:	mov    QWORD PTR [rsp+0x18],rsi
   14000dd23:	push   rdi
   14000dd24:	push   r12
   14000dd26:	push   r13
   14000dd28:	push   r14
   14000dd2a:	push   r15
   14000dd2c:	sub    rsp,0x20
   14000dd30:	mov    rax,QWORD PTR [rcx+0x20]
   14000dd34:	mov    r15,rdx
   14000dd37:	mov    rsi,rcx
   14000dd3a:	mov    ebp,r8d
   14000dd3d:	mov    edi,0x1
   14000dd42:	cmp    rax,QWORD PTR [rcx+0x18]
   14000dd46:	je     0x14000dd84
   14000dd48:	mov    r14,rax
   14000dd4b:	mov    rax,QWORD PTR [rax-0x10]
   14000dd4f:	test   rax,rax
   14000dd52:	je     0x14000dd7e
   14000dd54:	cmp    BYTE PTR [r14-0x8],0x0
   14000dd59:	mov    edx,edi
   14000dd5b:	mov    rcx,QWORD PTR [rcx]
   14000dd5e:	je     0x14000dd6a
   14000dd60:	call   0x14000d0a4
   14000dd65:	mov    BYTE PTR [rax],0x2c
   14000dd68:	jmp    0x14000dd7e
   14000dd6a:	and    al,dil
   14000dd6d:	neg    al
   14000dd6f:	sbb    bl,bl
   14000dd71:	and    bl,0xe
   14000dd74:	add    bl,0x2c
   14000dd77:	call   0x14000d0a4
   14000dd7c:	mov    BYTE PTR [rax],bl
   14000dd7e:	add    QWORD PTR [r14-0x10],rdi
   14000dd82:	jmp    0x14000dd88
   14000dd84:	mov    BYTE PTR [rcx+0x38],dil
   14000dd88:	mov    rcx,QWORD PTR [rsi]
   14000dd8b:	mov    rdx,rdi
   14000dd8e:	call   0x14000d0a4
   14000dd93:	mov    r12,rbp
   14000dd96:	mov    BYTE PTR [rax],0x22
   14000dd99:	test   ebp,ebp
   14000dd9b:	je     0x14000de4a
   14000dda1:	xor    ebp,ebp
   14000dda3:	lea    r13,[rip+0xffffffffffff2256]        # 0x140000000
   14000ddaa:	movzx  ebx,BYTE PTR [r15]
   14000ddae:	add    rbp,rdi
   14000ddb1:	mov    rcx,QWORD PTR [rsi]
   14000ddb4:	add    r15,rdi
   14000ddb7:	mov    r14d,ebx
   14000ddba:	mov    rdx,rdi
   14000ddbd:	cmp    BYTE PTR [rbx+r13*1+0x62f70],0x0
   14000ddc6:	je     0x14000de3a
   14000ddc8:	call   0x14000d0a4
   14000ddcd:	mov    bl,BYTE PTR [rbx+r13*1+0x62f70]
   14000ddd5:	mov    rdx,rdi
   14000ddd8:	mov    BYTE PTR [rax],0x5c
   14000dddb:	mov    rcx,QWORD PTR [rsi]
   14000ddde:	call   0x14000d0a4
   14000dde3:	cmp    BYTE PTR [r14+r13*1+0x62f70],0x75
   14000ddec:	mov    BYTE PTR [rax],bl
   14000ddee:	jne    0x14000de41
   14000ddf0:	mov    rcx,QWORD PTR [rsi]
   14000ddf3:	mov    rdx,rdi
   14000ddf6:	call   0x14000d0a4
   14000ddfb:	mov    rdx,rdi
   14000ddfe:	mov    BYTE PTR [rax],0x30
   14000de01:	mov    rcx,QWORD PTR [rsi]
   14000de04:	call   0x14000d0a4
   14000de09:	mov    rdx,rdi
   14000de0c:	mov    BYTE PTR [rax],0x30
   14000de0f:	mov    eax,r14d
   14000de12:	mov    rcx,QWORD PTR [rsi]
   14000de15:	shr    rax,0x4
   14000de19:	mov    bl,BYTE PTR [rax+r13*1+0x62eb0]
   14000de21:	call   0x14000d0a4
   14000de26:	and    r14d,0xf
   14000de2a:	mov    rdx,rdi
   14000de2d:	mov    BYTE PTR [rax],bl
   14000de2f:	mov    bl,BYTE PTR [r14+r13*1+0x62eb0]
   14000de37:	mov    rcx,QWORD PTR [rsi]
   14000de3a:	call   0x14000d0a4
   14000de3f:	mov    BYTE PTR [rax],bl
   14000de41:	cmp    rbp,r12
   14000de44:	jb     0x14000ddaa
   14000de4a:	mov    rcx,QWORD PTR [rsi]
   14000de4d:	mov    rdx,rdi
   14000de50:	call   0x14000d0a4
   14000de55:	mov    rbx,QWORD PTR [rsp+0x50]
   14000de5a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000de5f:	mov    rsi,QWORD PTR [rsp+0x60]
   14000de64:	mov    BYTE PTR [rax],0x22
   14000de67:	mov    al,dil
   14000de6a:	add    rsp,0x20
   14000de6e:	pop    r15
   14000de70:	pop    r14
   14000de72:	pop    r13
   14000de74:	pop    r12
   14000de76:	pop    rdi
   14000de77:	ret    
   14000de78:	mov    QWORD PTR [rsp+0x18],rbx
   14000de7d:	mov    QWORD PTR [rsp+0x20],rsi
   14000de82:	push   rdi
   14000de83:	sub    rsp,0x30
   14000de87:	mov    rax,QWORD PTR [rcx+0x20]
   14000de8b:	mov    rdi,rcx
   14000de8e:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000de93:	movaps xmm6,xmm1
   14000de96:	cmp    rax,QWORD PTR [rcx+0x18]
   14000de9a:	je     0x14000ded9
   14000de9c:	mov    rsi,rax
   14000de9f:	mov    rax,QWORD PTR [rax-0x10]
   14000dea3:	test   rax,rax
   14000dea6:	je     0x14000ded3
   14000dea8:	cmp    BYTE PTR [rsi-0x8],0x0
   14000deac:	mov    edx,0x1
   14000deb1:	mov    rcx,QWORD PTR [rcx]
   14000deb4:	je     0x14000dec0
   14000deb6:	call   0x14000d0a4
   14000debb:	mov    BYTE PTR [rax],0x2c
   14000debe:	jmp    0x14000ded3
   14000dec0:	and    al,0x1
   14000dec2:	neg    al
   14000dec4:	sbb    bl,bl
   14000dec6:	and    bl,0xe
   14000dec9:	add    bl,0x2c
   14000decc:	call   0x14000d0a4
   14000ded1:	mov    BYTE PTR [rax],bl
   14000ded3:	inc    QWORD PTR [rsi-0x10]
   14000ded7:	jmp    0x14000dedd
   14000ded9:	mov    BYTE PTR [rcx+0x38],0x1
   14000dedd:	mov    rcx,QWORD PTR [rdi]
   14000dee0:	mov    edx,0x19
   14000dee5:	call   0x14000d0a4
   14000deea:	mov    rsi,rax
   14000deed:	movsd  QWORD PTR [rsp+0x40],xmm6
   14000def3:	mov    rbx,rax
   14000def6:	movabs rax,0x7fffffffffffffff
   14000df00:	test   QWORD PTR [rsp+0x40],rax
   14000df05:	jne    0x14000df2e
   14000df07:	movabs rax,0x8000000000000000
   14000df11:	test   QWORD PTR [rsp+0x40],rax
   14000df16:	je     0x14000df1f
   14000df18:	mov    BYTE PTR [rbx],0x2d
   14000df1b:	lea    rbx,[rbx+0x1]
   14000df1f:	mov    WORD PTR [rbx],0x2e30
   14000df24:	lea    rax,[rbx+0x3]
   14000df28:	mov    BYTE PTR [rbx+0x2],0x30
   14000df2c:	jmp    0x14000df6b
   14000df2e:	xorps  xmm1,xmm1
   14000df31:	comisd xmm1,xmm6
   14000df35:	jbe    0x14000df45
   14000df37:	xorps  xmm6,XMMWORD PTR [rip+0x565d2]        # 0x140064510
   14000df3e:	lea    rbx,[rsi+0x1]
   14000df42:	mov    BYTE PTR [rsi],0x2d
   14000df45:	lea    r9,[rsp+0x40]
   14000df4a:	mov    rdx,rbx
   14000df4d:	lea    r8,[rsp+0x48]
   14000df52:	movaps xmm0,xmm6
   14000df55:	call   0x140006430
   14000df5a:	mov    r8d,DWORD PTR [rsp+0x40]
   14000df5f:	mov    rcx,rbx
   14000df62:	mov    edx,DWORD PTR [rsp+0x48]
   14000df66:	call   0x140006620
   14000df6b:	mov    rcx,QWORD PTR [rdi]
   14000df6e:	sub    rax,rsi
   14000df71:	mov    rbx,QWORD PTR [rsp+0x50]
   14000df76:	sub    rax,0x19
   14000df7a:	mov    rsi,QWORD PTR [rsp+0x58]
   14000df7f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000df84:	add    QWORD PTR [rcx+0x18],rax
   14000df88:	mov    al,0x1
   14000df8a:	add    rsp,0x30
   14000df8e:	pop    rdi
   14000df8f:	ret    
   14000df90:	mov    rax,rsp
   14000df93:	mov    QWORD PTR [rax+0x8],rbx
   14000df97:	mov    QWORD PTR [rax+0x10],rbp
   14000df9b:	mov    QWORD PTR [rax+0x18],rsi
   14000df9f:	mov    QWORD PTR [rax+0x20],rdi
   14000dfa3:	push   r14
   14000dfa5:	sub    rsp,0x20
   14000dfa9:	mov    rax,QWORD PTR [rcx+0x20]
   14000dfad:	mov    bpl,dl
   14000dfb0:	mov    rsi,rcx
   14000dfb3:	mov    edi,0x1
   14000dfb8:	cmp    rax,QWORD PTR [rcx+0x18]
   14000dfbc:	je     0x14000dffa
   14000dfbe:	mov    r14,rax
   14000dfc1:	mov    rax,QWORD PTR [rax-0x10]
   14000dfc5:	test   rax,rax
   14000dfc8:	je     0x14000dff4
   14000dfca:	cmp    BYTE PTR [r14-0x8],0x0
   14000dfcf:	mov    edx,edi
   14000dfd1:	mov    rcx,QWORD PTR [rcx]
   14000dfd4:	je     0x14000dfe0
   14000dfd6:	call   0x14000d0a4
   14000dfdb:	mov    BYTE PTR [rax],0x2c
   14000dfde:	jmp    0x14000dff4
   14000dfe0:	and    al,dil
   14000dfe3:	neg    al
   14000dfe5:	sbb    bl,bl
   14000dfe7:	and    bl,0xe
   14000dfea:	add    bl,0x2c
   14000dfed:	call   0x14000d0a4
   14000dff2:	mov    BYTE PTR [rax],bl
   14000dff4:	add    QWORD PTR [r14-0x10],rdi
   14000dff8:	jmp    0x14000dffe
   14000dffa:	mov    BYTE PTR [rcx+0x38],dil
   14000dffe:	mov    rcx,QWORD PTR [rsi]
   14000e001:	mov    rdx,rdi
   14000e004:	call   0x14000d0a4
   14000e009:	mov    rdx,rdi
   14000e00c:	test   bpl,bpl
   14000e00f:	je     0x14000e02f
   14000e011:	mov    BYTE PTR [rax],0x74
   14000e014:	mov    rcx,QWORD PTR [rsi]
   14000e017:	call   0x14000d0a4
   14000e01c:	mov    rdx,rdi
   14000e01f:	mov    BYTE PTR [rax],0x72
   14000e022:	mov    rcx,QWORD PTR [rsi]
   14000e025:	call   0x14000d0a4
   14000e02a:	mov    BYTE PTR [rax],0x75
   14000e02d:	jmp    0x14000e059
   14000e02f:	mov    BYTE PTR [rax],0x66
   14000e032:	mov    rcx,QWORD PTR [rsi]
   14000e035:	call   0x14000d0a4
   14000e03a:	mov    rdx,rdi
   14000e03d:	mov    BYTE PTR [rax],0x61
   14000e040:	mov    rcx,QWORD PTR [rsi]
   14000e043:	call   0x14000d0a4
   14000e048:	mov    rdx,rdi
   14000e04b:	mov    BYTE PTR [rax],0x6c
   14000e04e:	mov    rcx,QWORD PTR [rsi]
   14000e051:	call   0x14000d0a4
   14000e056:	mov    BYTE PTR [rax],0x73
   14000e059:	mov    rcx,QWORD PTR [rsi]
   14000e05c:	mov    rdx,rdi
   14000e05f:	call   0x14000d0a4
   14000e064:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e069:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e06e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e073:	mov    BYTE PTR [rax],0x65
   14000e076:	mov    al,dil
   14000e079:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e07e:	add    rsp,0x20
   14000e082:	pop    r14
   14000e084:	ret    
   14000e085:	int3   
   14000e086:	int3   
   14000e087:	int3   
   14000e088:	mov    QWORD PTR [rsp+0x8],rbx
   14000e08d:	mov    QWORD PTR [rsp+0x10],rbp
   14000e092:	mov    QWORD PTR [rsp+0x18],rsi
   14000e097:	push   rdi
   14000e098:	push   r14
   14000e09a:	push   r15
   14000e09c:	sub    rsp,0x20
   14000e0a0:	mov    rbp,r8
   14000e0a3:	movzx  r14d,r9w
   14000e0a7:	mov    r8,QWORD PTR [rcx+0x10]
   14000e0ab:	mov    rdi,rdx
   14000e0ae:	mov    rbx,rcx
   14000e0b1:	cmp    r8,rdx
   14000e0b4:	jb     0x14000e1c9
   14000e0ba:	mov    rax,r8
   14000e0bd:	not    rax
   14000e0c0:	cmp    rax,rbp
   14000e0c3:	jbe    0x14000e1d6
   14000e0c9:	xor    r15d,r15d
   14000e0cc:	lea    rsi,[r8+rbp*1]
   14000e0d0:	test   rbp,rbp
   14000e0d3:	je     0x14000e1ad
   14000e0d9:	movabs rax,0x7ffffffffffffffe
   14000e0e3:	cmp    rsi,rax
   14000e0e6:	ja     0x14000e1e3
   14000e0ec:	cmp    QWORD PTR [rcx+0x18],rsi
   14000e0f0:	jae    0x14000e0fc
   14000e0f2:	mov    rdx,rsi
   14000e0f5:	call   0x14000cb48
   14000e0fa:	jmp    0x14000e118
   14000e0fc:	test   rsi,rsi
   14000e0ff:	jne    0x14000e121
   14000e101:	mov    QWORD PTR [rcx+0x10],r15
   14000e105:	cmp    QWORD PTR [rcx+0x18],0x8
   14000e10a:	jb     0x14000e111
   14000e10c:	mov    rax,QWORD PTR [rcx]
   14000e10f:	jmp    0x14000e114
   14000e111:	mov    rax,rbx
   14000e114:	mov    WORD PTR [rax],r15w
   14000e118:	test   rsi,rsi
   14000e11b:	je     0x14000e1ad
   14000e121:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e126:	jb     0x14000e12d
   14000e128:	mov    rax,QWORD PTR [rbx]
   14000e12b:	jmp    0x14000e130
   14000e12d:	mov    rax,rbx
   14000e130:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e135:	jb     0x14000e13c
   14000e137:	mov    rcx,QWORD PTR [rbx]
   14000e13a:	jmp    0x14000e13f
   14000e13c:	mov    rcx,rbx
   14000e13f:	mov    r8,QWORD PTR [rbx+0x10]
   14000e143:	sub    r8,rdi
   14000e146:	je     0x14000e15c
   14000e148:	lea    rdx,[rax+rdi*2]
   14000e14c:	add    r8,r8
   14000e14f:	lea    rax,[rdi+rbp*1]
   14000e153:	lea    rcx,[rcx+rax*2]
   14000e157:	call   0x140028fd0
   14000e15c:	cmp    rbp,0x1
   14000e160:	jne    0x14000e178
   14000e162:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e167:	jb     0x14000e16e
   14000e169:	mov    rax,QWORD PTR [rbx]
   14000e16c:	jmp    0x14000e171
   14000e16e:	mov    rax,rbx
   14000e171:	mov    WORD PTR [rax+rdi*2],r14w
   14000e176:	jmp    0x14000e195
   14000e178:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e17d:	jb     0x14000e184
   14000e17f:	mov    rax,QWORD PTR [rbx]
   14000e182:	jmp    0x14000e187
   14000e184:	mov    rax,rbx
   14000e187:	lea    rdi,[rax+rdi*2]
   14000e18b:	mov    rcx,rbp
   14000e18e:	movzx  eax,r14w
   14000e192:	rep stos WORD PTR es:[rdi],ax
   14000e195:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e19a:	mov    QWORD PTR [rbx+0x10],rsi
   14000e19e:	jb     0x14000e1a5
   14000e1a0:	mov    rax,QWORD PTR [rbx]
   14000e1a3:	jmp    0x14000e1a8
   14000e1a5:	mov    rax,rbx
   14000e1a8:	mov    WORD PTR [rax+rsi*2],r15w
   14000e1ad:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e1b2:	mov    rax,rbx
   14000e1b5:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e1ba:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e1bf:	add    rsp,0x20
   14000e1c3:	pop    r15
   14000e1c5:	pop    r14
   14000e1c7:	pop    rdi
   14000e1c8:	ret    
   14000e1c9:	lea    rcx,[rip+0x54c80]        # 0x140062e50
   14000e1d0:	call   0x140027a70
   14000e1d5:	int3   
   14000e1d6:	lea    rcx,[rip+0x54c63]        # 0x140062e40
   14000e1dd:	call   0x140027a4c
   14000e1e2:	int3   
   14000e1e3:	lea    rcx,[rip+0x54c56]        # 0x140062e40
   14000e1ea:	call   0x140027a4c
   14000e1ef:	int3   
   14000e1f0:	mov    rax,rsp
   14000e1f3:	mov    QWORD PTR [rax+0x8],rbx
   14000e1f7:	mov    QWORD PTR [rax+0x10],rbp
   14000e1fb:	mov    QWORD PTR [rax+0x18],rsi
   14000e1ff:	mov    QWORD PTR [rax+0x20],rdi
   14000e203:	push   r14
   14000e205:	sub    rsp,0x20
   14000e209:	or     rsi,0xffffffffffffffff
   14000e20d:	mov    r14,r8
   14000e210:	cmp    QWORD PTR [r8+0x10],rsi
   14000e214:	mov    rbx,rcx
   14000e217:	cmovb  rsi,QWORD PTR [r8+0x10]
   14000e21c:	mov    r8,QWORD PTR [rcx+0x10]
   14000e220:	mov    rax,r8
   14000e223:	not    rax
   14000e226:	cmp    rax,rsi
   14000e229:	jbe    0x14000e34a
   14000e22f:	xor    ebp,ebp
   14000e231:	lea    rdi,[r8+rsi*1]
   14000e235:	test   rsi,rsi
   14000e238:	je     0x14000e32c
   14000e23e:	movabs rax,0x7ffffffffffffffe
   14000e248:	cmp    rdi,rax
   14000e24b:	ja     0x14000e357
   14000e251:	cmp    QWORD PTR [rcx+0x18],rdi
   14000e255:	jae    0x14000e261
   14000e257:	mov    rdx,rdi
   14000e25a:	call   0x14000cb48
   14000e25f:	jmp    0x14000e27c
   14000e261:	test   rdi,rdi
   14000e264:	jne    0x14000e285
   14000e266:	mov    QWORD PTR [rcx+0x10],rbp
   14000e26a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000e26f:	jb     0x14000e276
   14000e271:	mov    rax,QWORD PTR [rcx]
   14000e274:	jmp    0x14000e279
   14000e276:	mov    rax,rbx
   14000e279:	mov    WORD PTR [rax],bp
   14000e27c:	test   rdi,rdi
   14000e27f:	je     0x14000e32c
   14000e285:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e28a:	jb     0x14000e291
   14000e28c:	mov    rdx,QWORD PTR [rbx]
   14000e28f:	jmp    0x14000e294
   14000e291:	mov    rdx,rbx
   14000e294:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e299:	jb     0x14000e2a0
   14000e29b:	mov    rax,QWORD PTR [rbx]
   14000e29e:	jmp    0x14000e2a3
   14000e2a0:	mov    rax,rbx
   14000e2a3:	mov    r8,QWORD PTR [rbx+0x10]
   14000e2a7:	test   r8,r8
   14000e2aa:	je     0x14000e2b8
   14000e2ac:	add    r8,r8
   14000e2af:	lea    rcx,[rax+rsi*2]
   14000e2b3:	call   0x140028fd0
   14000e2b8:	cmp    rbx,r14
   14000e2bb:	jne    0x14000e2eb
   14000e2bd:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e2c2:	jb     0x14000e2c9
   14000e2c4:	mov    rdx,QWORD PTR [rbx]
   14000e2c7:	jmp    0x14000e2cc
   14000e2c9:	mov    rdx,rbx
   14000e2cc:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e2d1:	jb     0x14000e2d8
   14000e2d3:	mov    rcx,QWORD PTR [rbx]
   14000e2d6:	jmp    0x14000e2db
   14000e2d8:	mov    rcx,rbx
   14000e2db:	test   rsi,rsi
   14000e2de:	je     0x14000e315
   14000e2e0:	lea    r8,[rsi+rsi*1]
   14000e2e4:	call   0x140028fd0
   14000e2e9:	jmp    0x14000e315
   14000e2eb:	cmp    QWORD PTR [r14+0x18],0x8
   14000e2f0:	jb     0x14000e2f5
   14000e2f2:	mov    r14,QWORD PTR [r14]
   14000e2f5:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e2fa:	jb     0x14000e301
   14000e2fc:	mov    rcx,QWORD PTR [rbx]
   14000e2ff:	jmp    0x14000e304
   14000e301:	mov    rcx,rbx
   14000e304:	test   rsi,rsi
   14000e307:	je     0x14000e315
   14000e309:	lea    r8,[rsi+rsi*1]
   14000e30d:	mov    rdx,r14
   14000e310:	call   0x140028fd0
   14000e315:	cmp    QWORD PTR [rbx+0x18],0x8
   14000e31a:	mov    QWORD PTR [rbx+0x10],rdi
   14000e31e:	jb     0x14000e325
   14000e320:	mov    rax,QWORD PTR [rbx]
   14000e323:	jmp    0x14000e328
   14000e325:	mov    rax,rbx
   14000e328:	mov    WORD PTR [rax+rdi*2],bp
   14000e32c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e331:	mov    rax,rbx
   14000e334:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e339:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e33e:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e343:	add    rsp,0x20
   14000e347:	pop    r14
   14000e349:	ret    
   14000e34a:	lea    rcx,[rip+0x54aef]        # 0x140062e40
   14000e351:	call   0x140027a4c
   14000e356:	int3   
   14000e357:	lea    rcx,[rip+0x54ae2]        # 0x140062e40
   14000e35e:	call   0x140027a4c
   14000e363:	int3   
   14000e364:	mov    rax,rsp
   14000e367:	mov    QWORD PTR [rax+0x8],rcx
   14000e36b:	push   rsi
   14000e36c:	push   rdi
   14000e36d:	push   r14
   14000e36f:	sub    rsp,0x80
   14000e376:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   14000e37e:	mov    QWORD PTR [rax+0x10],rbx
   14000e382:	mov    rsi,rdx
   14000e385:	mov    rdi,rcx
   14000e388:	xor    ebx,ebx
   14000e38a:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e391:	mov    rdx,rcx
   14000e394:	lea    rcx,[rax-0x60]
   14000e398:	call   0x14000e7e8
   14000e39d:	nop
   14000e39e:	cmp    BYTE PTR [rsp+0x40],bl
   14000e3a2:	je     0x14000e455
   14000e3a8:	mov    rax,QWORD PTR [rdi]
   14000e3ab:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e3af:	add    rcx,rdi
   14000e3b2:	lea    rdx,[rsp+0x60]
   14000e3b7:	call   0x140005600
   14000e3bc:	nop
   14000e3bd:	mov    rcx,rax
   14000e3c0:	call   0x1400109b0
   14000e3c5:	mov    r14,rax
   14000e3c8:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e3cd:	test   rcx,rcx
   14000e3d0:	je     0x14000e3ea
   14000e3d2:	mov    rdx,QWORD PTR [rcx]
   14000e3d5:	call   QWORD PTR [rdx+0x10]
   14000e3d8:	test   rax,rax
   14000e3db:	je     0x14000e3ea
   14000e3dd:	mov    r8,QWORD PTR [rax]
   14000e3e0:	lea    edx,[rbx+0x1]
   14000e3e3:	mov    rcx,rax
   14000e3e6:	call   QWORD PTR [r8]
   14000e3e9:	nop
   14000e3ea:	mov    rax,QWORD PTR [rdi]
   14000e3ed:	movsxd r9,DWORD PTR [rax+0x4]
   14000e3f1:	add    r9,rdi
   14000e3f4:	mov    rax,QWORD PTR [r9+0x48]
   14000e3f8:	mov    BYTE PTR [rsp+0x50],0x0
   14000e3fd:	mov    QWORD PTR [rsp+0x58],rax
   14000e402:	movzx  eax,WORD PTR [r9+0x58]
   14000e407:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000e40c:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14000e412:	mov    r10,QWORD PTR [r14]
   14000e415:	mov    QWORD PTR [rsp+0x28],rsi
   14000e41a:	mov    WORD PTR [rsp+0x20],ax
   14000e41f:	lea    r8,[rsp+0x50]
   14000e424:	lea    rdx,[rsp+0x70]
   14000e429:	mov    rcx,r14
   14000e42c:	call   QWORD PTR [r10+0x30]
   14000e430:	mov    ecx,0x4
   14000e435:	cmp    BYTE PTR [rsp+0x70],0x0
   14000e43a:	cmovne ebx,ecx
   14000e43d:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e444:	jmp    0x14000e45a
   14000e446:	mov    rdi,QWORD PTR [rsp+0xa0]
   14000e44e:	mov    ebx,DWORD PTR [rsp+0xb0]
   14000e455:	mov    ecx,0x4
   14000e45a:	mov    rax,QWORD PTR [rdi]
   14000e45d:	movsxd r9,DWORD PTR [rax+0x4]
   14000e461:	add    r9,rdi
   14000e464:	test   ebx,ebx
   14000e466:	je     0x14000e486
   14000e468:	mov    edx,DWORD PTR [r9+0x10]
   14000e46c:	or     edx,ebx
   14000e46e:	mov    eax,edx
   14000e470:	or     eax,ecx
   14000e472:	cmp    QWORD PTR [r9+0x48],0x0
   14000e477:	cmove  edx,eax
   14000e47a:	xor    r8d,r8d
   14000e47d:	mov    rcx,r9
   14000e480:	call   0x1400054f8
   14000e485:	nop
   14000e486:	call   0x140027894
   14000e48b:	test   al,al
   14000e48d:	jne    0x14000e49a
   14000e48f:	mov    rcx,QWORD PTR [rsp+0x38]
   14000e494:	call   0x140010068
   14000e499:	nop
   14000e49a:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e49f:	mov    rax,QWORD PTR [rdx]
   14000e4a2:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e4a6:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000e4ab:	test   rcx,rcx
   14000e4ae:	je     0x14000e4b7
   14000e4b0:	mov    rax,QWORD PTR [rcx]
   14000e4b3:	call   QWORD PTR [rax+0x10]
   14000e4b6:	nop
   14000e4b7:	mov    rax,rdi
   14000e4ba:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000e4c2:	add    rsp,0x80
   14000e4c9:	pop    r14
   14000e4cb:	pop    rdi
   14000e4cc:	pop    rsi
   14000e4cd:	ret    
   14000e4ce:	int3   
   14000e4cf:	int3   
   14000e4d0:	mov    rax,rsp
   14000e4d3:	mov    QWORD PTR [rax+0x8],rcx
   14000e4d7:	push   rsi
   14000e4d8:	push   rdi
   14000e4d9:	push   r14
   14000e4db:	sub    rsp,0x80
   14000e4e2:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   14000e4ea:	mov    QWORD PTR [rax+0x10],rbx
   14000e4ee:	mov    esi,edx
   14000e4f0:	mov    rdi,rcx
   14000e4f3:	xor    ebx,ebx
   14000e4f5:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e4fc:	mov    rdx,rcx
   14000e4ff:	lea    rcx,[rax-0x60]
   14000e503:	call   0x14000e7e8
   14000e508:	nop
   14000e509:	cmp    BYTE PTR [rsp+0x40],bl
   14000e50d:	je     0x14000e5bf
   14000e513:	mov    rax,QWORD PTR [rdi]
   14000e516:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e51a:	add    rcx,rdi
   14000e51d:	lea    rdx,[rsp+0x60]
   14000e522:	call   0x140005600
   14000e527:	nop
   14000e528:	mov    rcx,rax
   14000e52b:	call   0x1400109b0
   14000e530:	mov    r14,rax
   14000e533:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e538:	test   rcx,rcx
   14000e53b:	je     0x14000e555
   14000e53d:	mov    rdx,QWORD PTR [rcx]
   14000e540:	call   QWORD PTR [rdx+0x10]
   14000e543:	test   rax,rax
   14000e546:	je     0x14000e555
   14000e548:	mov    r8,QWORD PTR [rax]
   14000e54b:	lea    edx,[rbx+0x1]
   14000e54e:	mov    rcx,rax
   14000e551:	call   QWORD PTR [r8]
   14000e554:	nop
   14000e555:	mov    rax,QWORD PTR [rdi]
   14000e558:	movsxd r9,DWORD PTR [rax+0x4]
   14000e55c:	add    r9,rdi
   14000e55f:	mov    rax,QWORD PTR [r9+0x48]
   14000e563:	mov    BYTE PTR [rsp+0x50],0x0
   14000e568:	mov    QWORD PTR [rsp+0x58],rax
   14000e56d:	movzx  eax,WORD PTR [r9+0x58]
   14000e572:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000e577:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14000e57d:	mov    r10,QWORD PTR [r14]
   14000e580:	mov    DWORD PTR [rsp+0x28],esi
   14000e584:	mov    WORD PTR [rsp+0x20],ax
   14000e589:	lea    r8,[rsp+0x50]
   14000e58e:	lea    rdx,[rsp+0x70]
   14000e593:	mov    rcx,r14
   14000e596:	call   QWORD PTR [r10+0x40]
   14000e59a:	mov    ecx,0x4
   14000e59f:	cmp    BYTE PTR [rsp+0x70],0x0
   14000e5a4:	cmovne ebx,ecx
   14000e5a7:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e5ae:	jmp    0x14000e5c4
   14000e5b0:	mov    rdi,QWORD PTR [rsp+0xa0]
   14000e5b8:	mov    ebx,DWORD PTR [rsp+0xb0]
   14000e5bf:	mov    ecx,0x4
   14000e5c4:	mov    rax,QWORD PTR [rdi]
   14000e5c7:	movsxd r9,DWORD PTR [rax+0x4]
   14000e5cb:	add    r9,rdi
   14000e5ce:	test   ebx,ebx
   14000e5d0:	je     0x14000e5f0
   14000e5d2:	mov    edx,DWORD PTR [r9+0x10]
   14000e5d6:	or     edx,ebx
   14000e5d8:	mov    eax,edx
   14000e5da:	or     eax,ecx
   14000e5dc:	cmp    QWORD PTR [r9+0x48],0x0
   14000e5e1:	cmove  edx,eax
   14000e5e4:	xor    r8d,r8d
   14000e5e7:	mov    rcx,r9
   14000e5ea:	call   0x1400054f8
   14000e5ef:	nop
   14000e5f0:	call   0x140027894
   14000e5f5:	test   al,al
   14000e5f7:	jne    0x14000e604
   14000e5f9:	mov    rcx,QWORD PTR [rsp+0x38]
   14000e5fe:	call   0x140010068
   14000e603:	nop
   14000e604:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e609:	mov    rax,QWORD PTR [rdx]
   14000e60c:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e610:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000e615:	test   rcx,rcx
   14000e618:	je     0x14000e621
   14000e61a:	mov    rax,QWORD PTR [rcx]
   14000e61d:	call   QWORD PTR [rax+0x10]
   14000e620:	nop
   14000e621:	mov    rax,rdi
   14000e624:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000e62c:	add    rsp,0x80
   14000e633:	pop    r14
   14000e635:	pop    rdi
   14000e636:	pop    rsi
   14000e637:	ret    
   14000e638:	mov    rax,rsp
   14000e63b:	mov    QWORD PTR [rax+0x8],rcx
   14000e63f:	push   rsi
   14000e640:	push   rdi
   14000e641:	push   r14
   14000e643:	sub    rsp,0x80
   14000e64a:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   14000e652:	mov    QWORD PTR [rax+0x10],rbx
   14000e656:	mov    esi,edx
   14000e658:	mov    rdi,rcx
   14000e65b:	xor    ebx,ebx
   14000e65d:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e664:	mov    rdx,rcx
   14000e667:	lea    rcx,[rax-0x60]
   14000e66b:	call   0x14000e7e8
   14000e670:	nop
   14000e671:	cmp    BYTE PTR [rsp+0x40],bl
   14000e675:	je     0x14000e727
   14000e67b:	mov    rax,QWORD PTR [rdi]
   14000e67e:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e682:	add    rcx,rdi
   14000e685:	lea    rdx,[rsp+0x60]
   14000e68a:	call   0x140005600
   14000e68f:	nop
   14000e690:	mov    rcx,rax
   14000e693:	call   0x1400109b0
   14000e698:	mov    r14,rax
   14000e69b:	mov    rcx,QWORD PTR [rsp+0x68]
   14000e6a0:	test   rcx,rcx
   14000e6a3:	je     0x14000e6bd
   14000e6a5:	mov    rdx,QWORD PTR [rcx]
   14000e6a8:	call   QWORD PTR [rdx+0x10]
   14000e6ab:	test   rax,rax
   14000e6ae:	je     0x14000e6bd
   14000e6b0:	mov    r8,QWORD PTR [rax]
   14000e6b3:	lea    edx,[rbx+0x1]
   14000e6b6:	mov    rcx,rax
   14000e6b9:	call   QWORD PTR [r8]
   14000e6bc:	nop
   14000e6bd:	mov    rax,QWORD PTR [rdi]
   14000e6c0:	movsxd r9,DWORD PTR [rax+0x4]
   14000e6c4:	add    r9,rdi
   14000e6c7:	mov    rax,QWORD PTR [r9+0x48]
   14000e6cb:	mov    BYTE PTR [rsp+0x50],0x0
   14000e6d0:	mov    QWORD PTR [rsp+0x58],rax
   14000e6d5:	movzx  eax,WORD PTR [r9+0x58]
   14000e6da:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000e6df:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14000e6e5:	mov    r10,QWORD PTR [r14]
   14000e6e8:	mov    DWORD PTR [rsp+0x28],esi
   14000e6ec:	mov    WORD PTR [rsp+0x20],ax
   14000e6f1:	lea    r8,[rsp+0x50]
   14000e6f6:	lea    rdx,[rsp+0x70]
   14000e6fb:	mov    rcx,r14
   14000e6fe:	call   QWORD PTR [r10+0x48]
   14000e702:	mov    ecx,0x4
   14000e707:	cmp    BYTE PTR [rsp+0x70],0x0
   14000e70c:	cmovne ebx,ecx
   14000e70f:	mov    DWORD PTR [rsp+0xb0],ebx
   14000e716:	jmp    0x14000e72c
   14000e718:	mov    rdi,QWORD PTR [rsp+0xa0]
   14000e720:	mov    ebx,DWORD PTR [rsp+0xb0]
   14000e727:	mov    ecx,0x4
   14000e72c:	mov    rax,QWORD PTR [rdi]
   14000e72f:	movsxd r9,DWORD PTR [rax+0x4]
   14000e733:	add    r9,rdi
   14000e736:	test   ebx,ebx
   14000e738:	je     0x14000e758
   14000e73a:	mov    edx,DWORD PTR [r9+0x10]
   14000e73e:	or     edx,ebx
   14000e740:	mov    eax,edx
   14000e742:	or     eax,ecx
   14000e744:	cmp    QWORD PTR [r9+0x48],0x0
   14000e749:	cmove  edx,eax
   14000e74c:	xor    r8d,r8d
   14000e74f:	mov    rcx,r9
   14000e752:	call   0x1400054f8
   14000e757:	nop
   14000e758:	call   0x140027894
   14000e75d:	test   al,al
   14000e75f:	jne    0x14000e76c
   14000e761:	mov    rcx,QWORD PTR [rsp+0x38]
   14000e766:	call   0x140010068
   14000e76b:	nop
   14000e76c:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e771:	mov    rax,QWORD PTR [rdx]
   14000e774:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e778:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000e77d:	test   rcx,rcx
   14000e780:	je     0x14000e789
   14000e782:	mov    rax,QWORD PTR [rcx]
   14000e785:	call   QWORD PTR [rax+0x10]
   14000e788:	nop
   14000e789:	mov    rax,rdi
   14000e78c:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000e794:	add    rsp,0x80
   14000e79b:	pop    r14
   14000e79d:	pop    rdi
   14000e79e:	pop    rsi
   14000e79f:	ret    
   14000e7a0:	rex push rbx
   14000e7a2:	sub    rsp,0x30
   14000e7a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e7af:	mov    rbx,rcx
   14000e7b2:	call   0x140027894
   14000e7b7:	nop
   14000e7b8:	test   al,al
   14000e7ba:	jne    0x14000e7c5
   14000e7bc:	mov    rcx,QWORD PTR [rbx]
   14000e7bf:	call   0x140010068
   14000e7c4:	nop
   14000e7c5:	mov    rdx,QWORD PTR [rbx]
   14000e7c8:	mov    rax,QWORD PTR [rdx]
   14000e7cb:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e7cf:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000e7d4:	test   rcx,rcx
   14000e7d7:	je     0x14000e7e0
   14000e7d9:	mov    rax,QWORD PTR [rcx]
   14000e7dc:	call   QWORD PTR [rax+0x10]
   14000e7df:	nop
   14000e7e0:	add    rsp,0x30
   14000e7e4:	pop    rbx
   14000e7e5:	ret    
   14000e7e6:	int3   
   14000e7e7:	int3   
   14000e7e8:	mov    QWORD PTR [rsp+0x8],rcx
   14000e7ed:	push   rdi
   14000e7ee:	sub    rsp,0x30
   14000e7f2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e7fb:	mov    QWORD PTR [rsp+0x48],rbx
   14000e800:	mov    rbx,rdx
   14000e803:	mov    rdi,rcx
   14000e806:	mov    QWORD PTR [rcx],rdx
   14000e809:	mov    rax,QWORD PTR [rdx]
   14000e80c:	movsxd r8,DWORD PTR [rax+0x4]
   14000e810:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   14000e815:	test   rcx,rcx
   14000e818:	je     0x14000e821
   14000e81a:	mov    rax,QWORD PTR [rcx]
   14000e81d:	call   QWORD PTR [rax+0x8]
   14000e820:	nop
   14000e821:	mov    rax,QWORD PTR [rbx]
   14000e824:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e828:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   14000e82d:	jne    0x14000e843
   14000e82f:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   14000e834:	test   rcx,rcx
   14000e837:	je     0x14000e843
   14000e839:	cmp    rcx,rbx
   14000e83c:	je     0x14000e843
   14000e83e:	call   0x14000ffb4
   14000e843:	mov    rax,QWORD PTR [rbx]
   14000e846:	movsxd rcx,DWORD PTR [rax+0x4]
   14000e84a:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   14000e84f:	sete   al
   14000e852:	mov    BYTE PTR [rdi+0x8],al
   14000e855:	mov    rax,rdi
   14000e858:	mov    rbx,QWORD PTR [rsp+0x48]
   14000e85d:	add    rsp,0x30
   14000e861:	pop    rdi
   14000e862:	ret    
   14000e863:	int3   
   14000e864:	rex push rbx
   14000e866:	push   rsi
   14000e867:	push   rdi
   14000e868:	sub    rsp,0xa0
   14000e86f:	mov    rax,QWORD PTR [rip+0x627da]        # 0x140071050
   14000e876:	xor    rax,rsp
   14000e879:	mov    QWORD PTR [rsp+0x90],rax
   14000e881:	movups xmm0,XMMWORD PTR [r8]
   14000e885:	mov    rdi,r9
   14000e888:	lea    r8,[rip+0x545d9]        # 0x140062e68
   14000e88f:	mov    r9,QWORD PTR [rsp+0xe8]
   14000e897:	mov    rsi,rdx
   14000e89a:	mov    rbx,rcx
   14000e89d:	mov    edx,0x40
   14000e8a2:	lea    rcx,[rsp+0x50]
   14000e8a7:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000e8ad:	call   0x14000469c
   14000e8b2:	movsxd rcx,eax
   14000e8b5:	lea    r8,[rsp+0x40]
   14000e8ba:	mov    QWORD PTR [rsp+0x30],rcx
   14000e8bf:	lea    rax,[rsp+0x50]
   14000e8c4:	movzx  ecx,WORD PTR [rsp+0xe0]
   14000e8cc:	mov    r9,rdi
   14000e8cf:	mov    QWORD PTR [rsp+0x28],rax
   14000e8d4:	mov    rdx,rsi
   14000e8d7:	mov    WORD PTR [rsp+0x20],cx
   14000e8dc:	mov    rcx,rbx
   14000e8df:	call   0x14000f684
   14000e8e4:	mov    rax,rsi
   14000e8e7:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e8ef:	xor    rcx,rsp
   14000e8f2:	call   0x140025df0
   14000e8f7:	add    rsp,0xa0
   14000e8fe:	pop    rdi
   14000e8ff:	pop    rsi
   14000e900:	pop    rbx
   14000e901:	ret    
   14000e902:	int3   
   14000e903:	int3   
   14000e904:	mov    rax,rsp
   14000e907:	push   rbp
   14000e908:	push   rbx
   14000e909:	push   rsi
   14000e90a:	push   rdi
   14000e90b:	push   r12
   14000e90d:	push   r13
   14000e90f:	push   r14
   14000e911:	push   r15
   14000e913:	lea    rbp,[rax-0x4f]
   14000e917:	sub    rsp,0xa8
   14000e91e:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14000e926:	movaps XMMWORD PTR [rax-0x58],xmm6
   14000e92a:	mov    rax,QWORD PTR [rip+0x6271f]        # 0x140071050
   14000e931:	xor    rax,rsp
   14000e934:	mov    QWORD PTR [rbp-0x11],rax
   14000e938:	mov    r14,r9
   14000e93b:	mov    r13,r8
   14000e93e:	mov    r15,rdx
   14000e941:	mov    r12,rcx
   14000e944:	mov    r9d,0xf
   14000e94a:	mov    QWORD PTR [rbp-0x21],r9
   14000e94e:	xor    ecx,ecx
   14000e950:	mov    QWORD PTR [rbp-0x29],rcx
   14000e954:	mov    BYTE PTR [rbp-0x39],cl
   14000e957:	mov    eax,DWORD PTR [r14+0x18]
   14000e95b:	and    eax,0x3000
   14000e960:	mov    rsi,QWORD PTR [r14+0x20]
   14000e964:	mov    r8d,0x2000
   14000e96a:	test   rsi,rsi
   14000e96d:	jg     0x14000e977
   14000e96f:	cmp    eax,r8d
   14000e972:	je     0x14000e977
   14000e974:	lea    esi,[rcx+0x6]
   14000e977:	mov    rdx,rsi
   14000e97a:	movsd  xmm6,QWORD PTR [rbp+0x7f]
   14000e97f:	cmp    eax,r8d
   14000e982:	jne    0x14000e9d1
   14000e984:	movaps xmm0,xmm6
   14000e987:	andps  xmm0,XMMWORD PTR [rip+0x55b72]        # 0x140064500
   14000e98e:	comisd xmm0,QWORD PTR [rip+0x55b4a]        # 0x1400644e0
   14000e996:	jbe    0x14000e9d1
   14000e998:	lea    rdx,[rbp-0x59]
   14000e99c:	movaps xmm0,xmm6
   14000e99f:	call   0x1400304cc
   14000e9a4:	mov    eax,DWORD PTR [rbp-0x59]
   14000e9a7:	cdq    
   14000e9a8:	xor    eax,edx
   14000e9aa:	sub    eax,edx
   14000e9ac:	imul   ecx,eax,0x7597
   14000e9b2:	mov    eax,0x14f8b589
   14000e9b7:	imul   ecx
   14000e9b9:	sar    edx,0xd
   14000e9bc:	mov    eax,edx
   14000e9be:	shr    eax,0x1f
   14000e9c1:	add    edx,eax
   14000e9c3:	movsxd rdx,edx
   14000e9c6:	add    rdx,rsi
   14000e9c9:	mov    r9,QWORD PTR [rbp-0x21]
   14000e9cd:	mov    rcx,QWORD PTR [rbp-0x29]
   14000e9d1:	add    rdx,0x32
   14000e9d5:	cmp    rdx,rcx
   14000e9d8:	ja     0x14000e9f1
   14000e9da:	mov    QWORD PTR [rbp-0x29],rdx
   14000e9de:	lea    rax,[rbp-0x39]
   14000e9e2:	cmp    r9,0x10
   14000e9e6:	cmovae rax,QWORD PTR [rbp-0x39]
   14000e9eb:	mov    BYTE PTR [rax+rdx*1],0x0
   14000e9ef:	jmp    0x14000ea00
   14000e9f1:	sub    rdx,rcx
   14000e9f4:	xor    r8d,r8d
   14000e9f7:	lea    rcx,[rbp-0x39]
   14000e9fb:	call   0x14000c434
   14000ea00:	mov    rbx,QWORD PTR [rbp-0x29]
   14000ea04:	lea    rdi,[rbp-0x39]
   14000ea08:	cmp    QWORD PTR [rbp-0x21],0x10
   14000ea0d:	cmovae rdi,QWORD PTR [rbp-0x39]
   14000ea12:	mov    r9d,DWORD PTR [r14+0x18]
   14000ea16:	mov    r8b,0x4c
   14000ea19:	lea    rdx,[rbp-0x19]
   14000ea1d:	mov    rcx,r12
   14000ea20:	call   0x14000ff18
   14000ea25:	mov    r8,rax
   14000ea28:	movsd  QWORD PTR [rsp+0x20],xmm6
   14000ea2e:	mov    r9d,esi
   14000ea31:	mov    rdx,rbx
   14000ea34:	mov    rcx,rdi
   14000ea37:	call   0x14000469c
   14000ea3c:	movups xmm0,XMMWORD PTR [r13+0x0]
   14000ea41:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   14000ea46:	lea    rdx,[rbp-0x39]
   14000ea4a:	cmp    QWORD PTR [rbp-0x21],0x10
   14000ea4f:	cmovae rdx,QWORD PTR [rbp-0x39]
   14000ea54:	cdqe   
   14000ea56:	mov    QWORD PTR [rsp+0x30],rax
   14000ea5b:	mov    QWORD PTR [rsp+0x28],rdx
   14000ea60:	movzx  eax,WORD PTR [rbp+0x77]
   14000ea64:	mov    WORD PTR [rsp+0x20],ax
   14000ea69:	mov    r9,r14
   14000ea6c:	lea    r8,[rbp-0x49]
   14000ea70:	mov    rdx,r15
   14000ea73:	mov    rcx,r12
   14000ea76:	call   0x14000fadc
   14000ea7b:	nop
   14000ea7c:	mov    rdx,QWORD PTR [rbp-0x21]
   14000ea80:	cmp    rdx,0x10
   14000ea84:	jb     0x14000ea98
   14000ea86:	inc    rdx
   14000ea89:	mov    r8d,0x1
   14000ea8f:	mov    rcx,QWORD PTR [rbp-0x39]
   14000ea93:	call   0x140004804
   14000ea98:	mov    rax,r15
   14000ea9b:	mov    rcx,QWORD PTR [rbp-0x11]
   14000ea9f:	xor    rcx,rsp
   14000eaa2:	call   0x140025df0
   14000eaa7:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14000eaaf:	add    rsp,0xa8
   14000eab6:	pop    r15
   14000eab8:	pop    r14
   14000eaba:	pop    r13
   14000eabc:	pop    r12
   14000eabe:	pop    rdi
   14000eabf:	pop    rsi
   14000eac0:	pop    rbx
   14000eac1:	pop    rbp
   14000eac2:	ret    
   14000eac3:	int3   
   14000eac4:	mov    rax,rsp
   14000eac7:	push   rbp
   14000eac8:	push   rbx
   14000eac9:	push   rsi
   14000eaca:	push   rdi
   14000eacb:	push   r12
   14000eacd:	push   r13
   14000eacf:	push   r14
   14000ead1:	push   r15
   14000ead3:	lea    rbp,[rax-0x4f]
   14000ead7:	sub    rsp,0xa8
   14000eade:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14000eae6:	movaps XMMWORD PTR [rax-0x58],xmm6
   14000eaea:	mov    rax,QWORD PTR [rip+0x6255f]        # 0x140071050
   14000eaf1:	xor    rax,rsp
   14000eaf4:	mov    QWORD PTR [rbp-0x11],rax
   14000eaf8:	mov    r14,r9
   14000eafb:	mov    r13,r8
   14000eafe:	mov    r15,rdx
   14000eb01:	mov    r12,rcx
   14000eb04:	mov    r9d,0xf
   14000eb0a:	mov    QWORD PTR [rbp-0x21],r9
   14000eb0e:	xor    ecx,ecx
   14000eb10:	mov    QWORD PTR [rbp-0x29],rcx
   14000eb14:	mov    BYTE PTR [rbp-0x39],cl
   14000eb17:	mov    eax,DWORD PTR [r14+0x18]
   14000eb1b:	and    eax,0x3000
   14000eb20:	mov    rsi,QWORD PTR [r14+0x20]
   14000eb24:	mov    r8d,0x2000
   14000eb2a:	test   rsi,rsi
   14000eb2d:	jg     0x14000eb37
   14000eb2f:	cmp    eax,r8d
   14000eb32:	je     0x14000eb37
   14000eb34:	lea    esi,[rcx+0x6]
   14000eb37:	mov    rdx,rsi
   14000eb3a:	movsd  xmm6,QWORD PTR [rbp+0x7f]
   14000eb3f:	cmp    eax,r8d
   14000eb42:	jne    0x14000eb91
   14000eb44:	movaps xmm0,xmm6
   14000eb47:	andps  xmm0,XMMWORD PTR [rip+0x559b2]        # 0x140064500
   14000eb4e:	comisd xmm0,QWORD PTR [rip+0x5598a]        # 0x1400644e0
   14000eb56:	jbe    0x14000eb91
   14000eb58:	lea    rdx,[rbp-0x59]
   14000eb5c:	movaps xmm0,xmm6
   14000eb5f:	call   0x1400304cc
   14000eb64:	mov    eax,DWORD PTR [rbp-0x59]
   14000eb67:	cdq    
   14000eb68:	xor    eax,edx
   14000eb6a:	sub    eax,edx
   14000eb6c:	imul   ecx,eax,0x7597
   14000eb72:	mov    eax,0x14f8b589
   14000eb77:	imul   ecx
   14000eb79:	sar    edx,0xd
   14000eb7c:	mov    eax,edx
   14000eb7e:	shr    eax,0x1f
   14000eb81:	add    edx,eax
   14000eb83:	movsxd rdx,edx
   14000eb86:	add    rdx,rsi
   14000eb89:	mov    r9,QWORD PTR [rbp-0x21]
   14000eb8d:	mov    rcx,QWORD PTR [rbp-0x29]
   14000eb91:	add    rdx,0x32
   14000eb95:	cmp    rdx,rcx
   14000eb98:	ja     0x14000ebb1
   14000eb9a:	mov    QWORD PTR [rbp-0x29],rdx
   14000eb9e:	lea    rax,[rbp-0x39]
   14000eba2:	cmp    r9,0x10
   14000eba6:	cmovae rax,QWORD PTR [rbp-0x39]
   14000ebab:	mov    BYTE PTR [rax+rdx*1],0x0
   14000ebaf:	jmp    0x14000ebc0
   14000ebb1:	sub    rdx,rcx
   14000ebb4:	xor    r8d,r8d
   14000ebb7:	lea    rcx,[rbp-0x39]
   14000ebbb:	call   0x14000c434
   14000ebc0:	mov    rbx,QWORD PTR [rbp-0x29]
   14000ebc4:	lea    rdi,[rbp-0x39]
   14000ebc8:	cmp    QWORD PTR [rbp-0x21],0x10
   14000ebcd:	cmovae rdi,QWORD PTR [rbp-0x39]
   14000ebd2:	mov    r9d,DWORD PTR [r14+0x18]
   14000ebd6:	xor    r8d,r8d
   14000ebd9:	lea    rdx,[rbp-0x19]
   14000ebdd:	mov    rcx,r12
   14000ebe0:	call   0x14000ff18
   14000ebe5:	mov    r8,rax
   14000ebe8:	movsd  QWORD PTR [rsp+0x20],xmm6
   14000ebee:	mov    r9d,esi
   14000ebf1:	mov    rdx,rbx
   14000ebf4:	mov    rcx,rdi
   14000ebf7:	call   0x14000469c
   14000ebfc:	movups xmm0,XMMWORD PTR [r13+0x0]
   14000ec01:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   14000ec06:	lea    rdx,[rbp-0x39]
   14000ec0a:	cmp    QWORD PTR [rbp-0x21],0x10
   14000ec0f:	cmovae rdx,QWORD PTR [rbp-0x39]
   14000ec14:	cdqe   
   14000ec16:	mov    QWORD PTR [rsp+0x30],rax
   14000ec1b:	mov    QWORD PTR [rsp+0x28],rdx
   14000ec20:	movzx  eax,WORD PTR [rbp+0x77]
   14000ec24:	mov    WORD PTR [rsp+0x20],ax
   14000ec29:	mov    r9,r14
   14000ec2c:	lea    r8,[rbp-0x49]
   14000ec30:	mov    rdx,r15
   14000ec33:	mov    rcx,r12
   14000ec36:	call   0x14000fadc
   14000ec3b:	nop
   14000ec3c:	mov    rdx,QWORD PTR [rbp-0x21]
   14000ec40:	cmp    rdx,0x10
   14000ec44:	jb     0x14000ec58
   14000ec46:	inc    rdx
   14000ec49:	mov    r8d,0x1
   14000ec4f:	mov    rcx,QWORD PTR [rbp-0x39]
   14000ec53:	call   0x140004804
   14000ec58:	mov    rax,r15
   14000ec5b:	mov    rcx,QWORD PTR [rbp-0x11]
   14000ec5f:	xor    rcx,rsp
   14000ec62:	call   0x140025df0
   14000ec67:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14000ec6f:	add    rsp,0xa8
   14000ec76:	pop    r15
   14000ec78:	pop    r14
   14000ec7a:	pop    r13
   14000ec7c:	pop    r12
   14000ec7e:	pop    rdi
   14000ec7f:	pop    rsi
   14000ec80:	pop    rbx
   14000ec81:	pop    rbp
   14000ec82:	ret    
   14000ec83:	int3   
   14000ec84:	rex push rbx
   14000ec86:	push   rsi
   14000ec87:	push   rdi
   14000ec88:	sub    rsp,0xb0
   14000ec8f:	mov    rax,QWORD PTR [rip+0x623ba]        # 0x140071050
   14000ec96:	xor    rax,rsp
   14000ec99:	mov    QWORD PTR [rsp+0xa0],rax
   14000eca1:	movups xmm0,XMMWORD PTR [r8]
   14000eca5:	mov    rdi,r9
   14000eca8:	lea    r8,[rip+0x541bd]        # 0x140062e6c
   14000ecaf:	mov    r9d,DWORD PTR [r9+0x18]
   14000ecb3:	mov    rsi,rdx
   14000ecb6:	lea    rdx,[rsp+0x50]
   14000ecbb:	mov    rbx,rcx
   14000ecbe:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000ecc4:	call   0x14000fa64
   14000ecc9:	mov    r9,QWORD PTR [rsp+0xf8]
   14000ecd1:	lea    rcx,[rsp+0x60]
   14000ecd6:	mov    r8,rax
   14000ecd9:	mov    edx,0x40
   14000ecde:	call   0x14000469c
   14000ece3:	movsxd rdx,eax
   14000ece6:	lea    r8,[rsp+0x40]
   14000eceb:	mov    QWORD PTR [rsp+0x30],rdx
   14000ecf0:	lea    rax,[rsp+0x60]
   14000ecf5:	movzx  edx,WORD PTR [rsp+0xf0]
   14000ecfd:	mov    r9,rdi
   14000ed00:	mov    QWORD PTR [rsp+0x28],rax
   14000ed05:	mov    rcx,rbx
   14000ed08:	mov    WORD PTR [rsp+0x20],dx
   14000ed0d:	mov    rdx,rsi
   14000ed10:	call   0x14000f684
   14000ed15:	mov    rax,rsi
   14000ed18:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000ed20:	xor    rcx,rsp
   14000ed23:	call   0x140025df0
   14000ed28:	add    rsp,0xb0
   14000ed2f:	pop    rdi
   14000ed30:	pop    rsi
   14000ed31:	pop    rbx
   14000ed32:	ret    
   14000ed33:	int3   
   14000ed34:	rex push rbx
   14000ed36:	push   rsi
   14000ed37:	push   rdi
   14000ed38:	sub    rsp,0xb0
   14000ed3f:	mov    rax,QWORD PTR [rip+0x6230a]        # 0x140071050
   14000ed46:	xor    rax,rsp
   14000ed49:	mov    QWORD PTR [rsp+0xa0],rax
   14000ed51:	movups xmm0,XMMWORD PTR [r8]
   14000ed55:	mov    rdi,r9
   14000ed58:	lea    r8,[rip+0x54111]        # 0x140062e70
   14000ed5f:	mov    r9d,DWORD PTR [r9+0x18]
   14000ed63:	mov    rsi,rdx
   14000ed66:	lea    rdx,[rsp+0x50]
   14000ed6b:	mov    rbx,rcx
   14000ed6e:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000ed74:	call   0x14000fa64
   14000ed79:	mov    r9,QWORD PTR [rsp+0xf8]
   14000ed81:	lea    rcx,[rsp+0x60]
   14000ed86:	mov    r8,rax
   14000ed89:	mov    edx,0x40
   14000ed8e:	call   0x14000469c
   14000ed93:	movsxd rdx,eax
   14000ed96:	lea    r8,[rsp+0x40]
   14000ed9b:	mov    QWORD PTR [rsp+0x30],rdx
   14000eda0:	lea    rax,[rsp+0x60]
   14000eda5:	movzx  edx,WORD PTR [rsp+0xf0]
   14000edad:	mov    r9,rdi
   14000edb0:	mov    QWORD PTR [rsp+0x28],rax
   14000edb5:	mov    rcx,rbx
   14000edb8:	mov    WORD PTR [rsp+0x20],dx
   14000edbd:	mov    rdx,rsi
   14000edc0:	call   0x14000f684
   14000edc5:	mov    rax,rsi
   14000edc8:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000edd0:	xor    rcx,rsp
   14000edd3:	call   0x140025df0
   14000edd8:	add    rsp,0xb0
   14000eddf:	pop    rdi
   14000ede0:	pop    rsi
   14000ede1:	pop    rbx
   14000ede2:	ret    
   14000ede3:	int3   
   14000ede4:	rex push rbx
   14000ede6:	push   rsi
   14000ede7:	push   rdi
   14000ede8:	sub    rsp,0xb0
   14000edef:	mov    rax,QWORD PTR [rip+0x6225a]        # 0x140071050
   14000edf6:	xor    rax,rsp
   14000edf9:	mov    QWORD PTR [rsp+0xa0],rax
   14000ee01:	movups xmm0,XMMWORD PTR [r8]
   14000ee05:	mov    rdi,r9
   14000ee08:	lea    r8,[rip+0x54065]        # 0x140062e74
   14000ee0f:	mov    r9d,DWORD PTR [r9+0x18]
   14000ee13:	mov    rsi,rdx
   14000ee16:	lea    rdx,[rsp+0x50]
   14000ee1b:	mov    rbx,rcx
   14000ee1e:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000ee24:	call   0x14000fa64
   14000ee29:	mov    r9d,DWORD PTR [rsp+0xf8]
   14000ee31:	lea    rcx,[rsp+0x60]
   14000ee36:	mov    r8,rax
   14000ee39:	mov    edx,0x40
   14000ee3e:	call   0x14000469c
   14000ee43:	movsxd rdx,eax
   14000ee46:	lea    r8,[rsp+0x40]
   14000ee4b:	mov    QWORD PTR [rsp+0x30],rdx
   14000ee50:	lea    rax,[rsp+0x60]
   14000ee55:	movzx  edx,WORD PTR [rsp+0xf0]
   14000ee5d:	mov    r9,rdi
   14000ee60:	mov    QWORD PTR [rsp+0x28],rax
   14000ee65:	mov    rcx,rbx
   14000ee68:	mov    WORD PTR [rsp+0x20],dx
   14000ee6d:	mov    rdx,rsi
   14000ee70:	call   0x14000f684
   14000ee75:	mov    rax,rsi
   14000ee78:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000ee80:	xor    rcx,rsp
   14000ee83:	call   0x140025df0
   14000ee88:	add    rsp,0xb0
   14000ee8f:	pop    rdi
   14000ee90:	pop    rsi
   14000ee91:	pop    rbx
   14000ee92:	ret    
   14000ee93:	int3   
   14000ee94:	rex push rbx
   14000ee96:	push   rsi
   14000ee97:	push   rdi
   14000ee98:	sub    rsp,0xb0
   14000ee9f:	mov    rax,QWORD PTR [rip+0x621aa]        # 0x140071050
   14000eea6:	xor    rax,rsp
   14000eea9:	mov    QWORD PTR [rsp+0xa0],rax
   14000eeb1:	movups xmm0,XMMWORD PTR [r8]
   14000eeb5:	mov    rdi,r9
   14000eeb8:	lea    r8,[rip+0x53fb9]        # 0x140062e78
   14000eebf:	mov    r9d,DWORD PTR [r9+0x18]
   14000eec3:	mov    rsi,rdx
   14000eec6:	lea    rdx,[rsp+0x50]
   14000eecb:	mov    rbx,rcx
   14000eece:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000eed4:	call   0x14000fa64
   14000eed9:	mov    r9d,DWORD PTR [rsp+0xf8]
   14000eee1:	lea    rcx,[rsp+0x60]
   14000eee6:	mov    r8,rax
   14000eee9:	mov    edx,0x40
   14000eeee:	call   0x14000469c
   14000eef3:	movsxd rdx,eax
   14000eef6:	lea    r8,[rsp+0x40]
   14000eefb:	mov    QWORD PTR [rsp+0x30],rdx
   14000ef00:	lea    rax,[rsp+0x60]
   14000ef05:	movzx  edx,WORD PTR [rsp+0xf0]
   14000ef0d:	mov    r9,rdi
   14000ef10:	mov    QWORD PTR [rsp+0x28],rax
   14000ef15:	mov    rcx,rbx
   14000ef18:	mov    WORD PTR [rsp+0x20],dx
   14000ef1d:	mov    rdx,rsi
   14000ef20:	call   0x14000f684
   14000ef25:	mov    rax,rsi
   14000ef28:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000ef30:	xor    rcx,rsp
   14000ef33:	call   0x140025df0
   14000ef38:	add    rsp,0xb0
   14000ef3f:	pop    rdi
   14000ef40:	pop    rsi
   14000ef41:	pop    rbx
   14000ef42:	ret    
   14000ef43:	int3   
   14000ef44:	rex push rbp
   14000ef46:	push   rbx
   14000ef47:	push   rsi
   14000ef48:	push   rdi
   14000ef49:	push   r12
   14000ef4b:	push   r13
   14000ef4d:	push   r14
   14000ef4f:	push   r15
   14000ef51:	lea    rbp,[rsp-0xf]
   14000ef56:	sub    rsp,0x98
   14000ef5d:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   14000ef65:	mov    rax,QWORD PTR [rip+0x620e4]        # 0x140071050
   14000ef6c:	xor    rax,rsp
   14000ef6f:	mov    QWORD PTR [rbp-0x1],rax
   14000ef73:	mov    r15,r9
   14000ef76:	mov    r14,r8
   14000ef79:	mov    r12,rdx
   14000ef7c:	movzx  r13d,WORD PTR [rbp+0x77]
   14000ef81:	test   DWORD PTR [r9+0x18],0x4000
   14000ef89:	jne    0x14000efb5
   14000ef8b:	movups xmm0,XMMWORD PTR [r8]
   14000ef8f:	movdqu XMMWORD PTR [rbp-0x59],xmm0
   14000ef94:	mov    r10,QWORD PTR [rcx]
   14000ef97:	movzx  edx,BYTE PTR [rbp+0x7f]
   14000ef9b:	mov    DWORD PTR [rsp+0x28],edx
   14000ef9f:	mov    WORD PTR [rsp+0x20],r13w
   14000efa5:	lea    r8,[rbp-0x59]
   14000efa9:	mov    rdx,r12
   14000efac:	call   QWORD PTR [r10+0x48]
   14000efb0:	jmp    0x14000f144
   14000efb5:	lea    rdx,[rbp-0x59]
   14000efb9:	mov    rcx,r15
   14000efbc:	call   0x140005600
   14000efc1:	nop
   14000efc2:	mov    rcx,rax
   14000efc5:	call   0x140010ae4
   14000efca:	mov    rbx,rax
   14000efcd:	mov    rcx,QWORD PTR [rbp-0x51]
   14000efd1:	xor    esi,esi
   14000efd3:	test   rcx,rcx
   14000efd6:	je     0x14000eff0
   14000efd8:	mov    rdx,QWORD PTR [rcx]
   14000efdb:	call   QWORD PTR [rdx+0x10]
   14000efde:	test   rax,rax
   14000efe1:	je     0x14000eff0
   14000efe3:	mov    r8,QWORD PTR [rax]
   14000efe6:	lea    edx,[rsi+0x1]
   14000efe9:	mov    rcx,rax
   14000efec:	call   QWORD PTR [r8]
   14000efef:	nop
   14000eff0:	mov    QWORD PTR [rbp-0x29],0x7
   14000eff8:	mov    QWORD PTR [rbp-0x31],rsi
   14000effc:	mov    WORD PTR [rbp-0x41],si
   14000f000:	lea    rdx,[rbp-0x21]
   14000f004:	mov    rcx,rbx
   14000f007:	cmp    BYTE PTR [rbp+0x7f],sil
   14000f00b:	je     0x14000f03b
   14000f00d:	call   0x14000f614
   14000f012:	mov    rbx,rax
   14000f015:	lea    rax,[rbp-0x41]
   14000f019:	cmp    rax,rbx
   14000f01c:	je     0x14000f039
   14000f01e:	xor    r8d,r8d
   14000f021:	mov    dl,0x1
   14000f023:	lea    rcx,[rbp-0x41]
   14000f027:	call   0x14000b6b0
   14000f02c:	mov    rdx,rbx
   14000f02f:	lea    rcx,[rbp-0x41]
   14000f033:	call   0x14000cfb4
   14000f038:	nop
   14000f039:	jmp    0x14000f067
   14000f03b:	call   0x14000f634
   14000f040:	mov    rbx,rax
   14000f043:	lea    rax,[rbp-0x41]
   14000f047:	cmp    rax,rbx
   14000f04a:	je     0x14000f067
   14000f04c:	xor    r8d,r8d
   14000f04f:	mov    dl,0x1
   14000f051:	lea    rcx,[rbp-0x41]
   14000f055:	call   0x14000b6b0
   14000f05a:	mov    rdx,rbx
   14000f05d:	lea    rcx,[rbp-0x41]
   14000f061:	call   0x14000cfb4
   14000f066:	nop
   14000f067:	xor    r8d,r8d
   14000f06a:	mov    dl,0x1
   14000f06c:	lea    rcx,[rbp-0x21]
   14000f070:	call   0x14000b6b0
   14000f075:	mov    rbx,QWORD PTR [r15+0x28]
   14000f079:	mov    rdi,QWORD PTR [rbp-0x31]
   14000f07d:	test   rbx,rbx
   14000f080:	jle    0x14000f08c
   14000f082:	cmp    rbx,rdi
   14000f085:	jbe    0x14000f08c
   14000f087:	sub    rbx,rdi
   14000f08a:	jmp    0x14000f08f
   14000f08c:	mov    rbx,rsi
   14000f08f:	mov    eax,DWORD PTR [r15+0x18]
   14000f093:	and    eax,0x1c0
   14000f098:	cmp    eax,0x40
   14000f09b:	je     0x14000f0cd
   14000f09d:	movups xmm0,XMMWORD PTR [r14]
   14000f0a1:	movaps XMMWORD PTR [rbp-0x59],xmm0
   14000f0a5:	test   rbx,rbx
   14000f0a8:	je     0x14000f0c5
   14000f0aa:	movzx  edx,r13w
   14000f0ae:	lea    rcx,[rbp-0x59]
   14000f0b2:	call   0x14001014c
   14000f0b7:	sub    rbx,0x1
   14000f0bb:	jne    0x14000f0aa
   14000f0bd:	mov    rdi,QWORD PTR [rbp-0x31]
   14000f0c1:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14000f0c5:	movdqu XMMWORD PTR [r14],xmm0
   14000f0ca:	mov    rbx,rsi
   14000f0cd:	movups xmm0,XMMWORD PTR [r14]
   14000f0d1:	movaps XMMWORD PTR [rbp-0x59],xmm0
   14000f0d5:	lea    rsi,[rbp-0x41]
   14000f0d9:	cmp    QWORD PTR [rbp-0x29],0x8
   14000f0de:	cmovae rsi,QWORD PTR [rbp-0x41]
   14000f0e3:	test   rdi,rdi
   14000f0e6:	je     0x14000f102
   14000f0e8:	movzx  edx,WORD PTR [rsi]
   14000f0eb:	lea    rcx,[rbp-0x59]
   14000f0ef:	call   0x14001014c
   14000f0f4:	lea    rsi,[rsi+0x2]
   14000f0f8:	sub    rdi,0x1
   14000f0fc:	jne    0x14000f0e8
   14000f0fe:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14000f102:	movdqu XMMWORD PTR [r14],xmm0
   14000f107:	and    QWORD PTR [r15+0x28],0x0
   14000f10c:	movups xmm0,XMMWORD PTR [r14]
   14000f110:	movaps XMMWORD PTR [rbp-0x59],xmm0
   14000f114:	test   rbx,rbx
   14000f117:	je     0x14000f130
   14000f119:	movzx  edx,r13w
   14000f11d:	lea    rcx,[rbp-0x59]
   14000f121:	call   0x14001014c
   14000f126:	sub    rbx,0x1
   14000f12a:	jne    0x14000f119
   14000f12c:	movaps xmm0,XMMWORD PTR [rbp-0x59]
   14000f130:	movdqu XMMWORD PTR [r12],xmm0
   14000f136:	xor    r8d,r8d
   14000f139:	mov    dl,0x1
   14000f13b:	lea    rcx,[rbp-0x41]
   14000f13f:	call   0x14000b6b0
   14000f144:	mov    rax,r12
   14000f147:	mov    rcx,QWORD PTR [rbp-0x1]
   14000f14b:	xor    rcx,rsp
   14000f14e:	call   0x140025df0
   14000f153:	add    rsp,0x98
   14000f15a:	pop    r15
   14000f15c:	pop    r14
   14000f15e:	pop    r13
   14000f160:	pop    r12
   14000f162:	pop    rdi
   14000f163:	pop    rsi
   14000f164:	pop    rbx
   14000f165:	pop    rbp
   14000f166:	ret    
   14000f167:	int3   
   14000f168:	mov    rax,rsp
   14000f16b:	mov    QWORD PTR [rax+0x8],rbx
   14000f16f:	mov    QWORD PTR [rax+0x10],rbp
   14000f173:	mov    QWORD PTR [rax+0x18],rsi
   14000f177:	mov    QWORD PTR [rax+0x20],rdi
   14000f17b:	push   r14
   14000f17d:	sub    rsp,0x20
   14000f181:	movzx  ebp,r8w
   14000f185:	mov    rsi,rdx
   14000f188:	mov    rbx,rcx
   14000f18b:	cmp    rdx,0xffffffffffffffff
   14000f18f:	je     0x14000f245
   14000f195:	movabs rax,0x7ffffffffffffffe
   14000f19f:	cmp    rdx,rax
   14000f1a2:	ja     0x14000f252
   14000f1a8:	xor    r14d,r14d
   14000f1ab:	cmp    QWORD PTR [rcx+0x18],rdx
   14000f1af:	jae    0x14000f1bc
   14000f1b1:	mov    r8,QWORD PTR [rcx+0x10]
   14000f1b5:	call   0x14000cb48
   14000f1ba:	jmp    0x14000f1d8
   14000f1bc:	test   rsi,rsi
   14000f1bf:	jne    0x14000f1dd
   14000f1c1:	cmp    QWORD PTR [rcx+0x18],0x8
   14000f1c6:	mov    QWORD PTR [rcx+0x10],r14
   14000f1ca:	jb     0x14000f1d1
   14000f1cc:	mov    rax,QWORD PTR [rcx]
   14000f1cf:	jmp    0x14000f1d4
   14000f1d1:	mov    rax,rbx
   14000f1d4:	mov    WORD PTR [rax],r14w
   14000f1d8:	test   rsi,rsi
   14000f1db:	je     0x14000f227
   14000f1dd:	cmp    rsi,0x1
   14000f1e1:	jne    0x14000f1f7
   14000f1e3:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f1e8:	jb     0x14000f1ef
   14000f1ea:	mov    rax,QWORD PTR [rbx]
   14000f1ed:	jmp    0x14000f1f2
   14000f1ef:	mov    rax,rbx
   14000f1f2:	mov    WORD PTR [rax],bp
   14000f1f5:	jmp    0x14000f20f
   14000f1f7:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f1fc:	jb     0x14000f203
   14000f1fe:	mov    rdi,QWORD PTR [rbx]
   14000f201:	jmp    0x14000f206
   14000f203:	mov    rdi,rbx
   14000f206:	movzx  eax,bp
   14000f209:	mov    rcx,rsi
   14000f20c:	rep stos WORD PTR es:[rdi],ax
   14000f20f:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f214:	mov    QWORD PTR [rbx+0x10],rsi
   14000f218:	jb     0x14000f21f
   14000f21a:	mov    rax,QWORD PTR [rbx]
   14000f21d:	jmp    0x14000f222
   14000f21f:	mov    rax,rbx
   14000f222:	mov    WORD PTR [rax+rsi*2],r14w
   14000f227:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f22c:	mov    rax,rbx
   14000f22f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f234:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f239:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f23e:	add    rsp,0x20
   14000f242:	pop    r14
   14000f244:	ret    
   14000f245:	lea    rcx,[rip+0x53bf4]        # 0x140062e40
   14000f24c:	call   0x140027a4c
   14000f251:	int3   
   14000f252:	lea    rcx,[rip+0x53be7]        # 0x140062e40
   14000f259:	call   0x140027a4c
   14000f25e:	int3   
   14000f25f:	int3   
   14000f260:	mov    rax,rsp
   14000f263:	mov    QWORD PTR [rax+0x8],rbx
   14000f267:	mov    QWORD PTR [rax+0x10],rbp
   14000f26b:	mov    QWORD PTR [rax+0x18],rsi
   14000f26f:	mov    QWORD PTR [rax+0x20],rdi
   14000f273:	push   r14
   14000f275:	sub    rsp,0x20
   14000f279:	xor    ebp,ebp
   14000f27b:	mov    r14,r8
   14000f27e:	mov    rsi,rdx
   14000f281:	mov    rbx,rcx
   14000f284:	test   rdx,rdx
   14000f287:	je     0x14000f2df
   14000f289:	cmp    QWORD PTR [rcx+0x18],0x8
   14000f28e:	jb     0x14000f295
   14000f290:	mov    rax,QWORD PTR [rcx]
   14000f293:	jmp    0x14000f298
   14000f295:	mov    rax,rbx
   14000f298:	cmp    rsi,rax
   14000f29b:	jb     0x14000f2df
   14000f29d:	cmp    QWORD PTR [rcx+0x18],0x8
   14000f2a2:	jb     0x14000f2a7
   14000f2a4:	mov    rcx,QWORD PTR [rcx]
   14000f2a7:	mov    rax,QWORD PTR [rbx+0x10]
   14000f2ab:	lea    rcx,[rcx+rax*2]
   14000f2af:	cmp    rcx,rsi
   14000f2b2:	jbe    0x14000f2df
   14000f2b4:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f2b9:	jb     0x14000f2c0
   14000f2bb:	mov    rax,QWORD PTR [rbx]
   14000f2be:	jmp    0x14000f2c3
   14000f2c0:	mov    rax,rbx
   14000f2c3:	sub    rsi,rax
   14000f2c6:	mov    r9,r14
   14000f2c9:	sar    rsi,1
   14000f2cc:	mov    rdx,rbx
   14000f2cf:	mov    r8,rsi
   14000f2d2:	mov    rcx,rbx
   14000f2d5:	call   0x14000f3bc
   14000f2da:	jmp    0x14000f387
   14000f2df:	mov    r8,QWORD PTR [rbx+0x10]
   14000f2e3:	mov    rax,r8
   14000f2e6:	not    rax
   14000f2e9:	cmp    rax,r14
   14000f2ec:	jbe    0x14000f3a2
   14000f2f2:	lea    rdi,[r8+r14*1]
   14000f2f6:	test   r14,r14
   14000f2f9:	je     0x14000f384
   14000f2ff:	movabs rax,0x7ffffffffffffffe
   14000f309:	cmp    rdi,rax
   14000f30c:	ja     0x14000f3af
   14000f312:	cmp    QWORD PTR [rbx+0x18],rdi
   14000f316:	jae    0x14000f325
   14000f318:	mov    rdx,rdi
   14000f31b:	mov    rcx,rbx
   14000f31e:	call   0x14000cb48
   14000f323:	jmp    0x14000f340
   14000f325:	test   rdi,rdi
   14000f328:	jne    0x14000f345
   14000f32a:	mov    QWORD PTR [rbx+0x10],rbp
   14000f32e:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f333:	jb     0x14000f33a
   14000f335:	mov    rax,QWORD PTR [rbx]
   14000f338:	jmp    0x14000f33d
   14000f33a:	mov    rax,rbx
   14000f33d:	mov    WORD PTR [rax],bp
   14000f340:	test   rdi,rdi
   14000f343:	je     0x14000f384
   14000f345:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f34a:	jb     0x14000f351
   14000f34c:	mov    rcx,QWORD PTR [rbx]
   14000f34f:	jmp    0x14000f354
   14000f351:	mov    rcx,rbx
   14000f354:	test   r14,r14
   14000f357:	je     0x14000f36d
   14000f359:	mov    rax,QWORD PTR [rbx+0x10]
   14000f35d:	lea    r8,[r14+r14*1]
   14000f361:	mov    rdx,rsi
   14000f364:	lea    rcx,[rcx+rax*2]
   14000f368:	call   0x140028fd0
   14000f36d:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f372:	mov    QWORD PTR [rbx+0x10],rdi
   14000f376:	jb     0x14000f37d
   14000f378:	mov    rax,QWORD PTR [rbx]
   14000f37b:	jmp    0x14000f380
   14000f37d:	mov    rax,rbx
   14000f380:	mov    WORD PTR [rax+rdi*2],bp
   14000f384:	mov    rax,rbx
   14000f387:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f38c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f391:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f396:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f39b:	add    rsp,0x20
   14000f39f:	pop    r14
   14000f3a1:	ret    
   14000f3a2:	lea    rcx,[rip+0x53a97]        # 0x140062e40
   14000f3a9:	call   0x140027a4c
   14000f3ae:	int3   
   14000f3af:	lea    rcx,[rip+0x53a8a]        # 0x140062e40
   14000f3b6:	call   0x140027a4c
   14000f3bb:	int3   
   14000f3bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000f3c1:	mov    QWORD PTR [rsp+0x10],rbp
   14000f3c6:	mov    QWORD PTR [rsp+0x18],rsi
   14000f3cb:	push   rdi
   14000f3cc:	push   r14
   14000f3ce:	push   r15
   14000f3d0:	sub    rsp,0x20
   14000f3d4:	mov    rax,QWORD PTR [rdx+0x10]
   14000f3d8:	mov    rsi,r9
   14000f3db:	mov    rbp,r8
   14000f3de:	mov    r14,rdx
   14000f3e1:	mov    rbx,rcx
   14000f3e4:	cmp    rax,r8
   14000f3e7:	jb     0x14000f4c5
   14000f3ed:	sub    rax,r8
   14000f3f0:	mov    r8,QWORD PTR [rcx+0x10]
   14000f3f4:	cmp    r9,rax
   14000f3f7:	cmova  rsi,rax
   14000f3fb:	mov    rax,r8
   14000f3fe:	not    rax
   14000f401:	cmp    rax,rsi
   14000f404:	jbe    0x14000f4d2
   14000f40a:	xor    r15d,r15d
   14000f40d:	lea    rdi,[r8+rsi*1]
   14000f411:	test   rsi,rsi
   14000f414:	je     0x14000f4a9
   14000f41a:	movabs rax,0x7ffffffffffffffe
   14000f424:	cmp    rdi,rax
   14000f427:	ja     0x14000f4df
   14000f42d:	cmp    QWORD PTR [rcx+0x18],rdi
   14000f431:	jae    0x14000f43d
   14000f433:	mov    rdx,rdi
   14000f436:	call   0x14000cb48
   14000f43b:	jmp    0x14000f459
   14000f43d:	test   rdi,rdi
   14000f440:	jne    0x14000f45e
   14000f442:	mov    QWORD PTR [rcx+0x10],r15
   14000f446:	cmp    QWORD PTR [rcx+0x18],0x8
   14000f44b:	jb     0x14000f452
   14000f44d:	mov    rax,QWORD PTR [rcx]
   14000f450:	jmp    0x14000f455
   14000f452:	mov    rax,rbx
   14000f455:	mov    WORD PTR [rax],r15w
   14000f459:	test   rdi,rdi
   14000f45c:	je     0x14000f4a9
   14000f45e:	cmp    QWORD PTR [r14+0x18],0x8
   14000f463:	jb     0x14000f468
   14000f465:	mov    r14,QWORD PTR [r14]
   14000f468:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f46d:	jb     0x14000f474
   14000f46f:	mov    rcx,QWORD PTR [rbx]
   14000f472:	jmp    0x14000f477
   14000f474:	mov    rcx,rbx
   14000f477:	test   rsi,rsi
   14000f47a:	je     0x14000f491
   14000f47c:	mov    rax,QWORD PTR [rbx+0x10]
   14000f480:	lea    r8,[rsi+rsi*1]
   14000f484:	lea    rdx,[r14+rbp*2]
   14000f488:	lea    rcx,[rcx+rax*2]
   14000f48c:	call   0x140028fd0
   14000f491:	cmp    QWORD PTR [rbx+0x18],0x8
   14000f496:	mov    QWORD PTR [rbx+0x10],rdi
   14000f49a:	jb     0x14000f4a1
   14000f49c:	mov    rax,QWORD PTR [rbx]
   14000f49f:	jmp    0x14000f4a4
   14000f4a1:	mov    rax,rbx
   14000f4a4:	mov    WORD PTR [rax+rdi*2],r15w
   14000f4a9:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f4ae:	mov    rax,rbx
   14000f4b1:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f4b6:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f4bb:	add    rsp,0x20
   14000f4bf:	pop    r15
   14000f4c1:	pop    r14
   14000f4c3:	pop    rdi
   14000f4c4:	ret    
   14000f4c5:	lea    rcx,[rip+0x53984]        # 0x140062e50
   14000f4cc:	call   0x140027a70
   14000f4d1:	int3   
   14000f4d2:	lea    rcx,[rip+0x53967]        # 0x140062e40
   14000f4d9:	call   0x140027a4c
   14000f4de:	int3   
   14000f4df:	lea    rcx,[rip+0x5395a]        # 0x140062e40
   14000f4e6:	call   0x140027a4c
   14000f4eb:	int3   
   14000f4ec:	rex push rbx
   14000f4ee:	sub    rsp,0x20
   14000f4f2:	lea    rax,[rip+0x3c2c7]        # 0x14004b7c0
   14000f4f9:	mov    rbx,rcx
   14000f4fc:	mov    QWORD PTR [rcx],rax
   14000f4ff:	test   dl,0x1
   14000f502:	je     0x14000f50e
   14000f504:	mov    edx,0x10
   14000f509:	call   0x140026804
   14000f50e:	mov    rax,rbx
   14000f511:	add    rsp,0x20
   14000f515:	pop    rbx
   14000f516:	ret    
   14000f517:	int3   
   14000f518:	rex push rbx
   14000f51a:	sub    rsp,0x30
   14000f51e:	mov    rbx,rdx
   14000f521:	xor    r8d,r8d
   14000f524:	mov    rdx,QWORD PTR [rcx+0x28]
   14000f528:	mov    DWORD PTR [rsp+0x20],r8d
   14000f52d:	mov    QWORD PTR [rbx+0x18],0x7
   14000f535:	mov    QWORD PTR [rbx+0x10],r8
   14000f539:	mov    WORD PTR [rbx],r8w
   14000f53d:	cmp    WORD PTR [rdx],r8w
   14000f541:	je     0x14000f554
   14000f543:	or     rax,0xffffffffffffffff
   14000f547:	inc    rax
   14000f54a:	cmp    WORD PTR [rdx+rax*2],r8w
   14000f54f:	jne    0x14000f547
   14000f551:	mov    r8,rax
   14000f554:	mov    rcx,rbx
   14000f557:	call   0x14000b730
   14000f55c:	mov    rax,rbx
   14000f55f:	add    rsp,0x30
   14000f563:	pop    rbx
   14000f564:	ret    
   14000f565:	int3   
   14000f566:	int3   
   14000f567:	int3   
   14000f568:	rex push rbx
   14000f56a:	sub    rsp,0x30
   14000f56e:	mov    rbx,rdx
   14000f571:	xor    r8d,r8d
   14000f574:	mov    rdx,QWORD PTR [rcx+0x20]
   14000f578:	mov    DWORD PTR [rsp+0x20],r8d
   14000f57d:	mov    QWORD PTR [rbx+0x18],0x7
   14000f585:	mov    QWORD PTR [rbx+0x10],r8
   14000f589:	mov    WORD PTR [rbx],r8w
   14000f58d:	cmp    WORD PTR [rdx],r8w
   14000f591:	je     0x14000f5a4
   14000f593:	or     rax,0xffffffffffffffff
   14000f597:	inc    rax
   14000f59a:	cmp    WORD PTR [rdx+rax*2],r8w
   14000f59f:	jne    0x14000f597
   14000f5a1:	mov    r8,rax
   14000f5a4:	mov    rcx,rbx
   14000f5a7:	call   0x14000b730
   14000f5ac:	mov    rax,rbx
   14000f5af:	add    rsp,0x30
   14000f5b3:	pop    rbx
   14000f5b4:	ret    
   14000f5b5:	int3   
   14000f5b6:	int3   
   14000f5b7:	int3   
   14000f5b8:	rex push rbx
   14000f5ba:	sub    rsp,0x30
   14000f5be:	mov    rbx,rdx
   14000f5c1:	xor    r8d,r8d
   14000f5c4:	mov    rdx,QWORD PTR [rcx+0x10]
   14000f5c8:	mov    DWORD PTR [rsp+0x20],r8d
   14000f5cd:	mov    QWORD PTR [rbx+0x18],0xf
   14000f5d5:	mov    QWORD PTR [rbx+0x10],r8
   14000f5d9:	mov    BYTE PTR [rbx],r8b
   14000f5dc:	cmp    BYTE PTR [rdx],r8b
   14000f5df:	je     0x14000f5f1
   14000f5e1:	or     rax,0xffffffffffffffff
   14000f5e5:	inc    rax
   14000f5e8:	cmp    BYTE PTR [rdx+rax*1],r8b
   14000f5ec:	jne    0x14000f5e5
   14000f5ee:	mov    r8,rax
   14000f5f1:	mov    rcx,rbx
   14000f5f4:	call   0x14000b994
   14000f5f9:	mov    rax,rbx
   14000f5fc:	add    rsp,0x30
   14000f600:	pop    rbx
   14000f601:	ret    
   14000f602:	int3   
   14000f603:	int3   
   14000f604:	movzx  eax,WORD PTR [rcx+0x1a]
   14000f608:	ret    
   14000f609:	int3   
   14000f60a:	int3   
   14000f60b:	int3   
   14000f60c:	movzx  eax,WORD PTR [rcx+0x18]
   14000f610:	ret    
   14000f611:	int3   
   14000f612:	int3   
   14000f613:	int3   
   14000f614:	rex push rbx
   14000f616:	sub    rsp,0x30
   14000f61a:	mov    rax,QWORD PTR [rcx]
   14000f61d:	mov    rbx,rdx
   14000f620:	and    DWORD PTR [rsp+0x20],0x0
   14000f625:	call   QWORD PTR [rax+0x38]
   14000f628:	mov    rax,rbx
   14000f62b:	add    rsp,0x30
   14000f62f:	pop    rbx
   14000f630:	ret    
   14000f631:	int3   
   14000f632:	int3   
   14000f633:	int3   
   14000f634:	rex push rbx
   14000f636:	sub    rsp,0x30
   14000f63a:	mov    rax,QWORD PTR [rcx]
   14000f63d:	mov    rbx,rdx
   14000f640:	and    DWORD PTR [rsp+0x20],0x0
   14000f645:	call   QWORD PTR [rax+0x30]
   14000f648:	mov    rax,rbx
   14000f64b:	add    rsp,0x30
   14000f64f:	pop    rbx
   14000f650:	ret    
   14000f651:	int3   
   14000f652:	int3   
   14000f653:	int3   
   14000f654:	sub    rsp,0x38
   14000f658:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000f661:	mov    rdx,QWORD PTR [rcx]
   14000f664:	mov    rax,QWORD PTR [rdx]
   14000f667:	movsxd rcx,DWORD PTR [rax+0x4]
   14000f66b:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000f670:	test   rcx,rcx
   14000f673:	je     0x14000f67c
   14000f675:	mov    rax,QWORD PTR [rcx]
   14000f678:	call   QWORD PTR [rax+0x10]
   14000f67b:	nop
   14000f67c:	add    rsp,0x38
   14000f680:	ret    
   14000f681:	int3   
   14000f682:	int3   
   14000f683:	int3   
   14000f684:	mov    rax,rsp
   14000f687:	push   rbp
   14000f688:	push   rsi
   14000f689:	push   rdi
   14000f68a:	push   r12
   14000f68c:	push   r13
   14000f68e:	push   r14
   14000f690:	push   r15
   14000f692:	lea    rbp,[rax-0x47]
   14000f696:	sub    rsp,0xa0
   14000f69d:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14000f6a5:	mov    QWORD PTR [rax+0x8],rbx
   14000f6a9:	mov    rax,QWORD PTR [rip+0x619a0]        # 0x140071050
   14000f6b0:	xor    rax,rsp
   14000f6b3:	mov    QWORD PTR [rbp+0x7],rax
   14000f6b7:	mov    r13,r9
   14000f6ba:	mov    QWORD PTR [rbp-0x51],r9
   14000f6be:	mov    rsi,r8
   14000f6c1:	mov    QWORD PTR [rbp-0x49],rdx
   14000f6c5:	movzx  r12d,WORD PTR [rbp+0x6f]
   14000f6ca:	mov    WORD PTR [rbp-0x71],r12w
   14000f6cf:	mov    rbx,QWORD PTR [rbp+0x77]
   14000f6d3:	mov    r14,QWORD PTR [rbp+0x7f]
   14000f6d7:	xor    ecx,ecx
   14000f6d9:	test   r14,r14
   14000f6dc:	je     0x14000f6e9
   14000f6de:	mov    al,BYTE PTR [rbx]
   14000f6e0:	sub    al,0x2b
   14000f6e2:	test   al,0xfd
   14000f6e4:	lea    edi,[rcx+0x1]
   14000f6e7:	je     0x14000f6ec
   14000f6e9:	mov    rdi,rcx
   14000f6ec:	mov    eax,DWORD PTR [r9+0x18]
   14000f6f0:	and    eax,0xe00
   14000f6f5:	cmp    eax,0x800
   14000f6fa:	jne    0x14000f717
   14000f6fc:	lea    rcx,[rdi+0x2]
   14000f700:	cmp    rcx,r14
   14000f703:	ja     0x14000f717
   14000f705:	cmp    BYTE PTR [rbx+rdi*1],0x30
   14000f709:	jne    0x14000f717
   14000f70b:	mov    al,BYTE PTR [rbx+rdi*1+0x1]
   14000f70f:	sub    al,0x58
   14000f711:	test   al,0xdf
   14000f713:	cmove  rdi,rcx
   14000f717:	lea    rdx,[rbp-0x61]
   14000f71b:	mov    rcx,r13
   14000f71e:	call   0x140005600
   14000f723:	nop
   14000f724:	mov    rcx,rax
   14000f727:	call   0x14000dba0
   14000f72c:	mov    r15,rax
   14000f72f:	mov    rcx,QWORD PTR [rbp-0x59]
   14000f733:	xor    eax,eax
   14000f735:	test   rcx,rcx
   14000f738:	je     0x14000f755
   14000f73a:	mov    rax,QWORD PTR [rcx]
   14000f73d:	call   QWORD PTR [rax+0x10]
   14000f740:	test   rax,rax
   14000f743:	je     0x14000f753
   14000f745:	mov    r8,QWORD PTR [rax]
   14000f748:	mov    edx,0x1
   14000f74d:	mov    rcx,rax
   14000f750:	call   QWORD PTR [r8]
   14000f753:	xor    eax,eax
   14000f755:	mov    QWORD PTR [rbp-0x21],0x7
   14000f75d:	mov    QWORD PTR [rbp-0x29],rax
   14000f761:	mov    WORD PTR [rbp-0x39],ax
   14000f765:	xor    r8d,r8d
   14000f768:	mov    rdx,r14
   14000f76b:	lea    rcx,[rbp-0x39]
   14000f76f:	call   0x14000f168
   14000f774:	nop
   14000f775:	lea    r9,[rbp-0x39]
   14000f779:	cmp    QWORD PTR [rbp-0x21],0x8
   14000f77e:	cmovae r9,QWORD PTR [rbp-0x39]
   14000f783:	mov    rax,QWORD PTR [r15]
   14000f786:	lea    r8,[r14+rbx*1]
   14000f78a:	mov    rdx,rbx
   14000f78d:	mov    rcx,r15
   14000f790:	call   QWORD PTR [rax+0x58]
   14000f793:	lea    rdx,[rbp-0x61]
   14000f797:	mov    rcx,r13
   14000f79a:	call   0x140005600
   14000f79f:	nop
   14000f7a0:	mov    rcx,rax
   14000f7a3:	call   0x140010ae4
   14000f7a8:	mov    r15,rax
   14000f7ab:	mov    rcx,QWORD PTR [rbp-0x59]
   14000f7af:	test   rcx,rcx
   14000f7b2:	je     0x14000f7ce
   14000f7b4:	mov    rax,QWORD PTR [rcx]
   14000f7b7:	call   QWORD PTR [rax+0x10]
   14000f7ba:	test   rax,rax
   14000f7bd:	je     0x14000f7ce
   14000f7bf:	mov    r8,QWORD PTR [rax]
   14000f7c2:	mov    edx,0x1
   14000f7c7:	mov    rcx,rax
   14000f7ca:	call   QWORD PTR [r8]
   14000f7cd:	nop
   14000f7ce:	lea    rdx,[rbp-0x19]
   14000f7d2:	mov    rcx,r15
   14000f7d5:	call   0x14001012c
   14000f7da:	nop
   14000f7db:	lea    rbx,[rbp-0x19]
   14000f7df:	cmp    QWORD PTR [rbp-0x1],0x10
   14000f7e4:	cmovae rbx,QWORD PTR [rbp-0x19]
   14000f7e9:	mov    al,BYTE PTR [rbx]
   14000f7eb:	dec    al
   14000f7ed:	cmp    al,0x7d
   14000f7ef:	ja     0x14000f84b
   14000f7f1:	mov    rax,QWORD PTR [r15]
   14000f7f4:	mov    rcx,r15
   14000f7f7:	call   QWORD PTR [rax+0x20]
   14000f7fa:	movzx  r15d,ax
   14000f7fe:	cmp    BYTE PTR [rbx],0x7f
   14000f801:	je     0x14000f84b
   14000f803:	xor    r12d,r12d
   14000f806:	cmp    BYTE PTR [rbx],r12b
   14000f809:	jle    0x14000f846
   14000f80b:	movsx  rcx,BYTE PTR [rbx]
   14000f80f:	mov    rax,r14
   14000f812:	sub    rax,rdi
   14000f815:	cmp    rcx,rax
   14000f818:	jae    0x14000f846
   14000f81a:	sub    r14,rcx
   14000f81d:	movzx  r9d,r15w
   14000f821:	mov    r8d,0x1
   14000f827:	mov    rdx,r14
   14000f82a:	lea    rcx,[rbp-0x39]
   14000f82e:	call   0x14000e088
   14000f833:	lea    rax,[rbx+0x1]
   14000f837:	cmp    BYTE PTR [rax],r12b
   14000f83a:	cmovle rax,rbx
   14000f83e:	mov    rbx,rax
   14000f841:	cmp    BYTE PTR [rax],0x7f
   14000f844:	jne    0x14000f806
   14000f846:	movzx  r12d,WORD PTR [rbp-0x71]
   14000f84b:	mov    r15,QWORD PTR [rbp-0x29]
   14000f84f:	mov    rbx,QWORD PTR [r13+0x28]
   14000f853:	xor    ecx,ecx
   14000f855:	test   rbx,rbx
   14000f858:	jle    0x14000f864
   14000f85a:	cmp    rbx,r15
   14000f85d:	jbe    0x14000f864
   14000f85f:	sub    rbx,r15
   14000f862:	jmp    0x14000f867
   14000f864:	mov    rbx,rcx
   14000f867:	mov    eax,DWORD PTR [r13+0x18]
   14000f86b:	and    eax,0x1c0
   14000f870:	movups xmm0,XMMWORD PTR [rsi]
   14000f873:	movaps XMMWORD PTR [rbp-0x61],xmm0
   14000f877:	cmp    eax,0x40
   14000f87a:	je     0x14000f94d
   14000f880:	cmp    eax,0x100
   14000f885:	je     0x14000f8e6
   14000f887:	test   rbx,rbx
   14000f88a:	je     0x14000f8a5
   14000f88c:	movzx  edx,r12w
   14000f890:	lea    rcx,[rbp-0x61]
   14000f894:	call   0x14001014c
   14000f899:	sub    rbx,0x1
   14000f89d:	jne    0x14000f88c
   14000f89f:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   14000f8a3:	xor    ecx,ecx
   14000f8a5:	movdqu XMMWORD PTR [rsi],xmm0
   14000f8a9:	mov    rbx,rcx
   14000f8ac:	movaps XMMWORD PTR [rbp-0x61],xmm0
   14000f8b0:	lea    r14,[rbp-0x39]
   14000f8b4:	cmp    QWORD PTR [rbp-0x21],0x8
   14000f8b9:	cmovae r14,QWORD PTR [rbp-0x39]
   14000f8be:	mov    r12,rdi
   14000f8c1:	test   rdi,rdi
   14000f8c4:	je     0x14000f982
   14000f8ca:	movzx  edx,WORD PTR [r14]
   14000f8ce:	lea    rcx,[rbp-0x61]
   14000f8d2:	call   0x14001014c
   14000f8d7:	add    r14,0x2
   14000f8db:	sub    r12,0x1
   14000f8df:	jne    0x14000f8ca
   14000f8e1:	jmp    0x14000f97a
   14000f8e6:	lea    r14,[rbp-0x39]
   14000f8ea:	cmp    QWORD PTR [rbp-0x21],0x8
   14000f8ef:	cmovae r14,QWORD PTR [rbp-0x39]
   14000f8f4:	mov    r12,rdi
   14000f8f7:	test   rdi,rdi
   14000f8fa:	je     0x14000f91d
   14000f8fc:	movzx  edx,WORD PTR [r14]
   14000f900:	lea    rcx,[rbp-0x61]
   14000f904:	call   0x14001014c
   14000f909:	add    r14,0x2
   14000f90d:	sub    r12,0x1
   14000f911:	jne    0x14000f8fc
   14000f913:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   14000f917:	mov    r13,QWORD PTR [rbp-0x51]
   14000f91b:	xor    ecx,ecx
   14000f91d:	movdqu XMMWORD PTR [rsi],xmm0
   14000f921:	movaps XMMWORD PTR [rbp-0x61],xmm0
   14000f925:	movzx  r14d,WORD PTR [rbp-0x71]
   14000f92a:	test   rbx,rbx
   14000f92d:	je     0x14000f948
   14000f92f:	movzx  edx,r14w
   14000f933:	lea    rcx,[rbp-0x61]
   14000f937:	call   0x14001014c
   14000f93c:	sub    rbx,0x1
   14000f940:	jne    0x14000f92f
   14000f942:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   14000f946:	xor    ecx,ecx
   14000f948:	mov    rbx,rcx
   14000f94b:	jmp    0x14000f987
   14000f94d:	lea    r14,[rbp-0x39]
   14000f951:	cmp    QWORD PTR [rbp-0x21],0x8
   14000f956:	cmovae r14,QWORD PTR [rbp-0x39]
   14000f95b:	mov    r12,rdi
   14000f95e:	test   rdi,rdi
   14000f961:	je     0x14000f982
   14000f963:	movzx  edx,WORD PTR [r14]
   14000f967:	lea    rcx,[rbp-0x61]
   14000f96b:	call   0x14001014c
   14000f970:	add    r14,0x2
   14000f974:	sub    r12,0x1
   14000f978:	jne    0x14000f963
   14000f97a:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   14000f97e:	mov    r13,QWORD PTR [rbp-0x51]
   14000f982:	movzx  r14d,WORD PTR [rbp-0x71]
   14000f987:	movdqu XMMWORD PTR [rsi],xmm0
   14000f98b:	movaps XMMWORD PTR [rbp-0x61],xmm0
   14000f98f:	lea    rax,[rbp-0x39]
   14000f993:	cmp    QWORD PTR [rbp-0x21],0x8
   14000f998:	cmovae rax,QWORD PTR [rbp-0x39]
   14000f99d:	sub    r15,rdi
   14000f9a0:	lea    rdi,[rax+rdi*2]
   14000f9a4:	je     0x14000f9c8
   14000f9a6:	xor    r14d,r14d
   14000f9a9:	movzx  edx,WORD PTR [rdi]
   14000f9ac:	lea    rcx,[rbp-0x61]
   14000f9b0:	call   0x14001014c
   14000f9b5:	lea    rdi,[rdi+0x2]
   14000f9b9:	sub    r15,0x1
   14000f9bd:	jne    0x14000f9a9
   14000f9bf:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   14000f9c3:	movzx  r14d,WORD PTR [rbp-0x71]
   14000f9c8:	movdqu XMMWORD PTR [rsi],xmm0
   14000f9cc:	xor    edi,edi
   14000f9ce:	mov    QWORD PTR [r13+0x28],rdi
   14000f9d2:	movups xmm0,XMMWORD PTR [rsi]
   14000f9d5:	movaps XMMWORD PTR [rbp-0x61],xmm0
   14000f9d9:	test   rbx,rbx
   14000f9dc:	je     0x14000f9f5
   14000f9de:	movzx  edx,r14w
   14000f9e2:	lea    rcx,[rbp-0x61]
   14000f9e6:	call   0x14001014c
   14000f9eb:	sub    rbx,0x1
   14000f9ef:	jne    0x14000f9de
   14000f9f1:	movaps xmm0,XMMWORD PTR [rbp-0x61]
   14000f9f5:	mov    rbx,QWORD PTR [rbp-0x49]
   14000f9f9:	movdqu XMMWORD PTR [rbx],xmm0
   14000f9fd:	mov    rdx,QWORD PTR [rbp-0x1]
   14000fa01:	cmp    rdx,0x10
   14000fa05:	jb     0x14000fa19
   14000fa07:	inc    rdx
   14000fa0a:	mov    r8d,0x1
   14000fa10:	mov    rcx,QWORD PTR [rbp-0x19]
   14000fa14:	call   0x140004804
   14000fa19:	mov    QWORD PTR [rbp-0x1],0xf
   14000fa21:	mov    QWORD PTR [rbp-0x9],rdi
   14000fa25:	mov    BYTE PTR [rbp-0x19],dil
   14000fa29:	xor    r8d,r8d
   14000fa2c:	mov    dl,0x1
   14000fa2e:	lea    rcx,[rbp-0x39]
   14000fa32:	call   0x14000b6b0
   14000fa37:	mov    rax,rbx
   14000fa3a:	mov    rcx,QWORD PTR [rbp+0x7]
   14000fa3e:	xor    rcx,rsp
   14000fa41:	call   0x140025df0
   14000fa46:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000fa4e:	add    rsp,0xa0
   14000fa55:	pop    r15
   14000fa57:	pop    r14
   14000fa59:	pop    r13
   14000fa5b:	pop    r12
   14000fa5d:	pop    rdi
   14000fa5e:	pop    rsi
   14000fa5f:	pop    rbp
   14000fa60:	ret    
   14000fa61:	int3   
   14000fa62:	int3   
   14000fa63:	int3   
   14000fa64:	mov    BYTE PTR [rdx],0x25
   14000fa67:	lea    rax,[rdx+0x1]
   14000fa6b:	test   r9b,0x20
   14000fa6f:	je     0x14000fa77
   14000fa71:	mov    BYTE PTR [rax],0x2b
   14000fa74:	inc    rax
   14000fa77:	test   r9b,0x8
   14000fa7b:	je     0x14000fa83
   14000fa7d:	mov    BYTE PTR [rax],0x23
   14000fa80:	inc    rax
   14000fa83:	mov    cl,BYTE PTR [r8]
   14000fa86:	cmp    cl,0x4c
   14000fa89:	je     0x14000fa8f
   14000fa8b:	mov    BYTE PTR [rax],cl
   14000fa8d:	jmp    0x14000fa9b
   14000fa8f:	mov    WORD PTR [rax],0x3649
   14000fa94:	add    rax,0x2
   14000fa98:	mov    BYTE PTR [rax],0x34
   14000fa9b:	mov    ecx,r9d
   14000fa9e:	and    ecx,0xe00
   14000faa4:	cmp    ecx,0x400
   14000faaa:	jne    0x14000fab1
   14000faac:	mov    r9b,0x6f
   14000faaf:	jmp    0x14000face
   14000fab1:	cmp    ecx,0x800
   14000fab7:	je     0x14000fabf
   14000fab9:	mov    r9b,BYTE PTR [r8+0x1]
   14000fabd:	jmp    0x14000face
   14000fabf:	shl    r9b,0x3
   14000fac3:	not    r9b
   14000fac6:	and    r9b,0x20
   14000faca:	or     r9b,0x58
   14000face:	mov    BYTE PTR [rax+0x1],r9b
   14000fad2:	mov    BYTE PTR [rax+0x2],0x0
   14000fad6:	mov    rax,rdx
   14000fad9:	ret    
   14000fada:	int3   
   14000fadb:	int3   
   14000fadc:	mov    rax,rsp
   14000fadf:	push   rbp
   14000fae0:	push   rsi
   14000fae1:	push   rdi
   14000fae2:	push   r12
   14000fae4:	push   r13
   14000fae6:	push   r14
   14000fae8:	push   r15
   14000faea:	lea    rbp,[rax-0x47]
   14000faee:	sub    rsp,0xb0
   14000faf5:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14000fafd:	mov    QWORD PTR [rax+0x8],rbx
   14000fb01:	mov    rax,QWORD PTR [rip+0x61548]        # 0x140071050
   14000fb08:	xor    rax,rsp
   14000fb0b:	mov    QWORD PTR [rbp+0x7],rax
   14000fb0f:	mov    r13,r9
   14000fb12:	mov    QWORD PTR [rbp-0x61],r9
   14000fb16:	mov    rsi,r8
   14000fb19:	mov    QWORD PTR [rbp-0x59],rdx
   14000fb1d:	movzx  eax,WORD PTR [rbp+0x6f]
   14000fb21:	mov    WORD PTR [rsp+0x20],ax
   14000fb26:	mov    rbx,QWORD PTR [rbp+0x77]
   14000fb2a:	mov    r15,QWORD PTR [rbp+0x7f]
   14000fb2e:	xor    ecx,ecx
   14000fb30:	test   r15,r15
   14000fb33:	je     0x14000fb40
   14000fb35:	mov    al,BYTE PTR [rbx]
   14000fb37:	sub    al,0x2b
   14000fb39:	test   al,0xfd
   14000fb3b:	lea    edi,[rcx+0x1]
   14000fb3e:	je     0x14000fb43
   14000fb40:	mov    rdi,rcx
   14000fb43:	mov    eax,DWORD PTR [r9+0x18]
   14000fb47:	mov    ecx,0x3000
   14000fb4c:	and    eax,ecx
   14000fb4e:	cmp    eax,ecx
   14000fb50:	je     0x14000fb5b
   14000fb52:	lea    rdx,[rip+0x53323]        # 0x140062e7c
   14000fb59:	jmp    0x14000fb7d
   14000fb5b:	lea    rdx,[rip+0x5331e]        # 0x140062e80
   14000fb62:	lea    rcx,[rdi+0x2]
   14000fb66:	cmp    rcx,r15
   14000fb69:	ja     0x14000fb7d
   14000fb6b:	cmp    BYTE PTR [rbx+rdi*1],0x30
   14000fb6f:	jne    0x14000fb7d
   14000fb71:	mov    al,BYTE PTR [rbx+rdi*1+0x1]
   14000fb75:	sub    al,0x58
   14000fb77:	test   al,0xdf
   14000fb79:	cmove  rdi,rcx
   14000fb7d:	mov    rcx,rbx
   14000fb80:	call   0x14002c76c
   14000fb85:	mov    QWORD PTR [rbp-0x71],rax
   14000fb89:	mov    eax,0x2e
   14000fb8e:	mov    WORD PTR [rbp-0x7d],ax
   14000fb92:	call   0x140030490
   14000fb97:	mov    rcx,QWORD PTR [rax]
   14000fb9a:	mov    al,BYTE PTR [rcx]
   14000fb9c:	mov    BYTE PTR [rbp-0x7d],al
   14000fb9f:	lea    rdx,[rbp-0x7d]
   14000fba3:	mov    rcx,rbx
   14000fba6:	call   0x14002c76c
   14000fbab:	mov    r14,rax
   14000fbae:	lea    rdx,[rbp-0x51]
   14000fbb2:	mov    rcx,r13
   14000fbb5:	call   0x140005600
   14000fbba:	nop
   14000fbbb:	mov    rcx,rax
   14000fbbe:	call   0x14000dba0
   14000fbc3:	mov    r12,rax
   14000fbc6:	mov    rcx,QWORD PTR [rbp-0x49]
   14000fbca:	test   rcx,rcx
   14000fbcd:	je     0x14000fbe8
   14000fbcf:	mov    rax,QWORD PTR [rcx]
   14000fbd2:	call   QWORD PTR [rax+0x10]
   14000fbd5:	mov    rcx,rax
   14000fbd8:	test   rax,rax
   14000fbdb:	je     0x14000fbe8
   14000fbdd:	mov    rax,QWORD PTR [rax]
   14000fbe0:	mov    edx,0x1
   14000fbe5:	call   QWORD PTR [rax]
   14000fbe7:	nop
   14000fbe8:	mov    QWORD PTR [rbp-0x21],0x7
   14000fbf0:	xor    ecx,ecx
   14000fbf2:	mov    QWORD PTR [rbp-0x29],rcx
   14000fbf6:	mov    WORD PTR [rbp-0x39],cx
   14000fbfa:	xor    r8d,r8d
   14000fbfd:	mov    rdx,r15
   14000fc00:	lea    rcx,[rbp-0x39]
   14000fc04:	call   0x14000f168
   14000fc09:	nop
   14000fc0a:	lea    r9,[rbp-0x39]
   14000fc0e:	cmp    QWORD PTR [rbp-0x21],0x8
   14000fc13:	cmovae r9,QWORD PTR [rbp-0x39]
   14000fc18:	mov    rax,QWORD PTR [r12]
   14000fc1c:	lea    r8,[r15+rbx*1]
   14000fc20:	mov    rdx,rbx
   14000fc23:	mov    rcx,r12
   14000fc26:	call   QWORD PTR [rax+0x58]
   14000fc29:	lea    rdx,[rbp-0x51]
   14000fc2d:	mov    rcx,r13
   14000fc30:	call   0x140005600
   14000fc35:	nop
   14000fc36:	mov    rcx,rax
   14000fc39:	call   0x140010ae4
   14000fc3e:	mov    rbx,rax
   14000fc41:	mov    rcx,QWORD PTR [rbp-0x49]
   14000fc45:	xor    r12d,r12d
   14000fc48:	test   rcx,rcx
   14000fc4b:	je     0x14000fc66
   14000fc4d:	mov    rax,QWORD PTR [rcx]
   14000fc50:	call   QWORD PTR [rax+0x10]
   14000fc53:	mov    rcx,rax
   14000fc56:	test   rax,rax
   14000fc59:	je     0x14000fc66
   14000fc5b:	mov    rax,QWORD PTR [rax]
   14000fc5e:	lea    edx,[r12+0x1]
   14000fc63:	call   QWORD PTR [rax]
   14000fc65:	nop
   14000fc66:	lea    rdx,[rbp-0x19]
   14000fc6a:	mov    rcx,rbx
   14000fc6d:	call   0x14001012c
   14000fc72:	nop
   14000fc73:	mov    rax,QWORD PTR [rbx]
   14000fc76:	mov    rcx,rbx
   14000fc79:	call   QWORD PTR [rax+0x20]
   14000fc7c:	movzx  r12d,ax
   14000fc80:	cmp    r14,r15
   14000fc83:	je     0x14000fca7
   14000fc85:	mov    rax,QWORD PTR [rbx]
   14000fc88:	mov    rcx,rbx
   14000fc8b:	call   QWORD PTR [rax+0x18]
   14000fc8e:	movzx  ecx,ax
   14000fc91:	lea    rax,[rbp-0x39]
   14000fc95:	cmp    QWORD PTR [rbp-0x21],0x8
   14000fc9a:	cmovae rax,QWORD PTR [rbp-0x39]
   14000fc9f:	mov    WORD PTR [rax+r14*2],cx
   14000fca4:	cmp    r14,r15
   14000fca7:	cmove  r14,QWORD PTR [rbp-0x71]
   14000fcac:	lea    rbx,[rbp-0x19]
   14000fcb0:	cmp    QWORD PTR [rbp-0x1],0x10
   14000fcb5:	cmovae rbx,QWORD PTR [rbp-0x19]
   14000fcba:	cmp    BYTE PTR [rbx],0x7f
   14000fcbd:	je     0x14000fd02
   14000fcbf:	xor    r15d,r15d
   14000fcc2:	cmp    BYTE PTR [rbx],r15b
   14000fcc5:	jle    0x14000fd02
   14000fcc7:	movsx  rcx,BYTE PTR [rbx]
   14000fccb:	mov    rax,r14
   14000fcce:	sub    rax,rdi
   14000fcd1:	cmp    rcx,rax
   14000fcd4:	jae    0x14000fd02
   14000fcd6:	sub    r14,rcx
   14000fcd9:	movzx  r9d,r12w
   14000fcdd:	mov    r8d,0x1
   14000fce3:	mov    rdx,r14
   14000fce6:	lea    rcx,[rbp-0x39]
   14000fcea:	call   0x14000e088
   14000fcef:	lea    rax,[rbx+0x1]
   14000fcf3:	cmp    BYTE PTR [rax],r15b
   14000fcf6:	cmovle rax,rbx
   14000fcfa:	mov    rbx,rax
   14000fcfd:	cmp    BYTE PTR [rax],0x7f
   14000fd00:	jne    0x14000fcc2
   14000fd02:	mov    r14,QWORD PTR [rbp-0x29]
   14000fd06:	mov    rbx,QWORD PTR [r13+0x28]
   14000fd0a:	xor    ecx,ecx
   14000fd0c:	test   rbx,rbx
   14000fd0f:	jle    0x14000fd1b
   14000fd11:	cmp    rbx,r14
   14000fd14:	jbe    0x14000fd1b
   14000fd16:	sub    rbx,r14
   14000fd19:	jmp    0x14000fd1e
   14000fd1b:	mov    rbx,rcx
   14000fd1e:	mov    eax,DWORD PTR [r13+0x18]
   14000fd22:	and    eax,0x1c0
   14000fd27:	movups xmm0,XMMWORD PTR [rsi]
   14000fd2a:	movaps XMMWORD PTR [rbp-0x71],xmm0
   14000fd2e:	cmp    eax,0x40
   14000fd31:	je     0x14000fe0b
   14000fd37:	cmp    eax,0x100
   14000fd3c:	je     0x14000fda3
   14000fd3e:	test   rbx,rbx
   14000fd41:	je     0x14000fd62
   14000fd43:	movzx  r15d,WORD PTR [rsp+0x20]
   14000fd49:	movzx  edx,r15w
   14000fd4d:	lea    rcx,[rbp-0x71]
   14000fd51:	call   0x14001014c
   14000fd56:	sub    rbx,0x1
   14000fd5a:	jne    0x14000fd49
   14000fd5c:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   14000fd60:	xor    ecx,ecx
   14000fd62:	movdqu XMMWORD PTR [rsi],xmm0
   14000fd66:	mov    rbx,rcx
   14000fd69:	movaps XMMWORD PTR [rbp-0x71],xmm0
   14000fd6d:	lea    r15,[rbp-0x39]
   14000fd71:	cmp    QWORD PTR [rbp-0x21],0x8
   14000fd76:	cmovae r15,QWORD PTR [rbp-0x39]
   14000fd7b:	mov    r12,rdi
   14000fd7e:	test   rdi,rdi
   14000fd81:	je     0x14000fe40
   14000fd87:	movzx  edx,WORD PTR [r15]
   14000fd8b:	lea    rcx,[rbp-0x71]
   14000fd8f:	call   0x14001014c
   14000fd94:	lea    r15,[r15+0x2]
   14000fd98:	sub    r12,0x1
   14000fd9c:	jne    0x14000fd87
   14000fd9e:	jmp    0x14000fe38
   14000fda3:	lea    r15,[rbp-0x39]
   14000fda7:	cmp    QWORD PTR [rbp-0x21],0x8
   14000fdac:	cmovae r15,QWORD PTR [rbp-0x39]
   14000fdb1:	mov    r12,rdi
   14000fdb4:	test   rdi,rdi
   14000fdb7:	je     0x14000fdda
   14000fdb9:	movzx  edx,WORD PTR [r15]
   14000fdbd:	lea    rcx,[rbp-0x71]
   14000fdc1:	call   0x14001014c
   14000fdc6:	add    r15,0x2
   14000fdca:	sub    r12,0x1
   14000fdce:	jne    0x14000fdb9
   14000fdd0:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   14000fdd4:	mov    r13,QWORD PTR [rbp-0x61]
   14000fdd8:	xor    ecx,ecx
   14000fdda:	movdqu XMMWORD PTR [rsi],xmm0
   14000fdde:	movaps XMMWORD PTR [rbp-0x71],xmm0
   14000fde2:	test   rbx,rbx
   14000fde5:	je     0x14000fe06
   14000fde7:	movzx  r15d,WORD PTR [rsp+0x20]
   14000fded:	movzx  edx,r15w
   14000fdf1:	lea    rcx,[rbp-0x71]
   14000fdf5:	call   0x14001014c
   14000fdfa:	sub    rbx,0x1
   14000fdfe:	jne    0x14000fded
   14000fe00:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   14000fe04:	xor    ecx,ecx
   14000fe06:	mov    rbx,rcx
   14000fe09:	jmp    0x14000fe40
   14000fe0b:	lea    r15,[rbp-0x39]
   14000fe0f:	cmp    QWORD PTR [rbp-0x21],0x8
   14000fe14:	cmovae r15,QWORD PTR [rbp-0x39]
   14000fe19:	mov    r12,rdi
   14000fe1c:	test   rdi,rdi
   14000fe1f:	je     0x14000fe40
   14000fe21:	movzx  edx,WORD PTR [r15]
   14000fe25:	lea    rcx,[rbp-0x71]
   14000fe29:	call   0x14001014c
   14000fe2e:	lea    r15,[r15+0x2]
   14000fe32:	sub    r12,0x1
   14000fe36:	jne    0x14000fe21
   14000fe38:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   14000fe3c:	mov    r13,QWORD PTR [rbp-0x61]
   14000fe40:	movdqu XMMWORD PTR [rsi],xmm0
   14000fe44:	movaps XMMWORD PTR [rbp-0x71],xmm0
   14000fe48:	lea    rax,[rbp-0x39]
   14000fe4c:	cmp    QWORD PTR [rbp-0x21],0x8
   14000fe51:	cmovae rax,QWORD PTR [rbp-0x39]
   14000fe56:	sub    r14,rdi
   14000fe59:	lea    rdi,[rax+rdi*2]
   14000fe5d:	je     0x14000fe7d
   14000fe5f:	movzx  edx,WORD PTR [rdi]
   14000fe62:	lea    rcx,[rbp-0x71]
   14000fe66:	call   0x14001014c
   14000fe6b:	lea    rdi,[rdi+0x2]
   14000fe6f:	sub    r14,0x1
   14000fe73:	jne    0x14000fe5f
   14000fe75:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   14000fe79:	mov    r13,QWORD PTR [rbp-0x61]
   14000fe7d:	movdqu XMMWORD PTR [rsi],xmm0
   14000fe81:	xor    edi,edi
   14000fe83:	mov    QWORD PTR [r13+0x28],rdi
   14000fe87:	movups xmm0,XMMWORD PTR [rsi]
   14000fe8a:	movaps XMMWORD PTR [rbp-0x71],xmm0
   14000fe8e:	test   rbx,rbx
   14000fe91:	je     0x14000feab
   14000fe93:	movzx  edx,WORD PTR [rsp+0x20]
   14000fe98:	lea    rcx,[rbp-0x71]
   14000fe9c:	call   0x14001014c
   14000fea1:	sub    rbx,0x1
   14000fea5:	jne    0x14000fe93
   14000fea7:	movaps xmm0,XMMWORD PTR [rbp-0x71]
   14000feab:	mov    rbx,QWORD PTR [rbp-0x59]
   14000feaf:	movdqu XMMWORD PTR [rbx],xmm0
   14000feb3:	mov    rdx,QWORD PTR [rbp-0x1]
   14000feb7:	cmp    rdx,0x10
   14000febb:	jb     0x14000fecf
   14000febd:	inc    rdx
   14000fec0:	mov    r8d,0x1
   14000fec6:	mov    rcx,QWORD PTR [rbp-0x19]
   14000feca:	call   0x140004804
   14000fecf:	mov    QWORD PTR [rbp-0x1],0xf
   14000fed7:	mov    QWORD PTR [rbp-0x9],rdi
   14000fedb:	mov    BYTE PTR [rbp-0x19],dil
   14000fedf:	xor    r8d,r8d
   14000fee2:	mov    dl,0x1
   14000fee4:	lea    rcx,[rbp-0x39]
   14000fee8:	call   0x14000b6b0
   14000feed:	mov    rax,rbx
   14000fef0:	mov    rcx,QWORD PTR [rbp+0x7]
   14000fef4:	xor    rcx,rsp
   14000fef7:	call   0x140025df0
   14000fefc:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000ff04:	add    rsp,0xb0
   14000ff0b:	pop    r15
   14000ff0d:	pop    r14
   14000ff0f:	pop    r13
   14000ff11:	pop    r12
   14000ff13:	pop    rdi
   14000ff14:	pop    rsi
   14000ff15:	pop    rbp
   14000ff16:	ret    
   14000ff17:	int3   
   14000ff18:	mov    BYTE PTR [rdx],0x25
   14000ff1b:	mov    r11,rdx
   14000ff1e:	lea    r10,[rdx+0x1]
   14000ff22:	test   r9b,0x20
   14000ff26:	je     0x14000ff2f
   14000ff28:	mov    BYTE PTR [r10],0x2b
   14000ff2c:	inc    r10
   14000ff2f:	test   r9b,0x10
   14000ff33:	je     0x14000ff3c
   14000ff35:	mov    BYTE PTR [r10],0x23
   14000ff39:	inc    r10
   14000ff3c:	mov    WORD PTR [r10],0x2a2e
   14000ff42:	add    r10,0x2
   14000ff46:	test   r8b,r8b
   14000ff49:	je     0x14000ff51
   14000ff4b:	mov    BYTE PTR [r10],r8b
   14000ff4e:	inc    r10
   14000ff51:	mov    edx,r9d
   14000ff54:	mov    r8d,0x3000
   14000ff5a:	and    edx,r8d
   14000ff5d:	test   r9b,0x4
   14000ff61:	je     0x14000ff7b
   14000ff63:	mov    eax,0x47
   14000ff68:	cmp    edx,0x1000
   14000ff6e:	lea    ecx,[rax-0x2]
   14000ff71:	cmove  eax,ecx
   14000ff74:	mov    ecx,0x41
   14000ff79:	jmp    0x14000ff91
   14000ff7b:	mov    eax,0x67
   14000ff80:	cmp    edx,0x1000
   14000ff86:	lea    ecx,[rax-0x2]
   14000ff89:	cmove  eax,ecx
   14000ff8c:	mov    ecx,0x61
   14000ff91:	cmp    edx,r8d
   14000ff94:	cmove  eax,ecx
   14000ff97:	cmp    edx,0x2000
   14000ff9d:	movzx  ecx,al
   14000ffa0:	mov    eax,0x66
   14000ffa5:	cmove  ecx,eax
   14000ffa8:	mov    rax,r11
   14000ffab:	mov    BYTE PTR [r10],cl
   14000ffae:	mov    BYTE PTR [r10+0x1],0x0
   14000ffb3:	ret    
   14000ffb4:	rex push rbx
   14000ffb6:	sub    rsp,0x40
   14000ffba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ffc3:	mov    rbx,rcx
   14000ffc6:	mov    rax,QWORD PTR [rcx]
   14000ffc9:	movsxd rdx,DWORD PTR [rax+0x4]
   14000ffcd:	cmp    QWORD PTR [rdx+rcx*1+0x48],0x0
   14000ffd3:	je     0x14001005c
   14000ffd9:	mov    rdx,rcx
   14000ffdc:	lea    rcx,[rsp+0x28]
   14000ffe1:	call   0x14000e7e8
   14000ffe6:	nop
   14000ffe7:	cmp    BYTE PTR [rsp+0x30],0x0
   14000ffec:	je     0x14001002b
   14000ffee:	mov    rax,QWORD PTR [rbx]
   14000fff1:	movsxd rcx,DWORD PTR [rax+0x4]
   14000fff5:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   14000fffa:	mov    rax,QWORD PTR [rcx]
   14000fffd:	call   QWORD PTR [rax+0x68]
   140010000:	cmp    eax,0xffffffff
   140010003:	jne    0x14001002b
   140010005:	mov    rax,QWORD PTR [rbx]
   140010008:	movsxd rcx,DWORD PTR [rax+0x4]
   14001000c:	add    rcx,rbx
   14001000f:	mov    edx,DWORD PTR [rcx+0x10]
   140010012:	mov    eax,edx
   140010014:	or     eax,0x4
   140010017:	cmp    QWORD PTR [rcx+0x48],0x0
   14001001c:	cmove  edx,eax
   14001001f:	or     edx,0x4
   140010022:	xor    r8d,r8d
   140010025:	call   0x1400054f8
   14001002a:	nop
   14001002b:	call   0x140027894
   140010030:	test   al,al
   140010032:	jne    0x14001003f
   140010034:	mov    rcx,QWORD PTR [rsp+0x28]
   140010039:	call   0x140010068
   14001003e:	nop
   14001003f:	mov    rdx,QWORD PTR [rsp+0x28]
   140010044:	mov    rax,QWORD PTR [rdx]
   140010047:	movsxd rcx,DWORD PTR [rax+0x4]
   14001004b:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140010050:	test   rcx,rcx
   140010053:	je     0x14001005c
   140010055:	mov    rax,QWORD PTR [rcx]
   140010058:	call   QWORD PTR [rax+0x10]
   14001005b:	nop
   14001005c:	mov    rax,rbx
   14001005f:	add    rsp,0x40
   140010063:	pop    rbx
   140010064:	ret    
   140010065:	int3   
   140010066:	int3   
   140010067:	int3   
   140010068:	rex push rbx
   14001006a:	sub    rsp,0x30
   14001006e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010077:	mov    rbx,rcx
   14001007a:	mov    rax,QWORD PTR [rcx]
   14001007d:	movsxd rcx,DWORD PTR [rax+0x4]
   140010081:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140010086:	jne    0x1400100c5
   140010088:	test   BYTE PTR [rcx+rbx*1+0x18],0x2
   14001008d:	je     0x1400100c5
   14001008f:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   140010094:	mov    rax,QWORD PTR [rcx]
   140010097:	call   QWORD PTR [rax+0x68]
   14001009a:	cmp    eax,0xffffffff
   14001009d:	jne    0x1400100c5
   14001009f:	mov    rax,QWORD PTR [rbx]
   1400100a2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400100a6:	add    rcx,rbx
   1400100a9:	mov    edx,DWORD PTR [rcx+0x10]
   1400100ac:	mov    eax,edx
   1400100ae:	or     eax,0x4
   1400100b1:	cmp    QWORD PTR [rcx+0x48],0x0
   1400100b6:	cmove  edx,eax
   1400100b9:	or     edx,0x4
   1400100bc:	xor    r8d,r8d
   1400100bf:	call   0x1400054f8
   1400100c4:	nop
   1400100c5:	add    rsp,0x30
   1400100c9:	pop    rbx
   1400100ca:	ret    
   1400100cb:	int3   
   1400100cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400100d1:	push   rdi
   1400100d2:	sub    rsp,0x20
   1400100d6:	lea    rax,[rip+0x3ba6b]        # 0x14004bb48
   1400100dd:	mov    rdi,rcx
   1400100e0:	mov    QWORD PTR [rcx],rax
   1400100e3:	mov    ebx,edx
   1400100e5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400100e9:	call   0x1400304c4
   1400100ee:	mov    rcx,QWORD PTR [rdi+0x20]
   1400100f2:	call   0x1400304c4
   1400100f7:	mov    rcx,QWORD PTR [rdi+0x28]
   1400100fb:	call   0x1400304c4
   140010100:	lea    rax,[rip+0x3b6b9]        # 0x14004b7c0
   140010107:	mov    QWORD PTR [rdi],rax
   14001010a:	test   bl,0x1
   14001010d:	je     0x14001011c
   14001010f:	mov    edx,0x30
   140010114:	mov    rcx,rdi
   140010117:	call   0x140026804
   14001011c:	mov    rax,rdi
   14001011f:	mov    rbx,QWORD PTR [rsp+0x30]
   140010124:	add    rsp,0x20
   140010128:	pop    rdi
   140010129:	ret    
   14001012a:	int3   
   14001012b:	int3   
   14001012c:	rex push rbx
   14001012e:	sub    rsp,0x30
   140010132:	mov    rax,QWORD PTR [rcx]
   140010135:	mov    rbx,rdx
   140010138:	and    DWORD PTR [rsp+0x20],0x0
   14001013d:	call   QWORD PTR [rax+0x28]
   140010140:	mov    rax,rbx
   140010143:	add    rsp,0x30
   140010147:	pop    rbx
   140010148:	ret    
   140010149:	int3   
   14001014a:	int3   
   14001014b:	int3   
   14001014c:	rex push rbx
   14001014e:	sub    rsp,0x20
   140010152:	mov    rbx,rcx
   140010155:	movzx  r8d,dx
   140010159:	mov    rcx,QWORD PTR [rcx+0x8]
   14001015d:	test   rcx,rcx
   140010160:	je     0x1400101ad
   140010162:	mov    rax,QWORD PTR [rcx+0x40]
   140010166:	cmp    QWORD PTR [rax],0x0
   14001016a:	je     0x140010174
   14001016c:	mov    rax,QWORD PTR [rcx+0x58]
   140010170:	mov    edx,DWORD PTR [rax]
   140010172:	jmp    0x140010176
   140010174:	xor    edx,edx
   140010176:	test   edx,edx
   140010178:	jle    0x140010194
   14001017a:	mov    rax,QWORD PTR [rcx+0x58]
   14001017e:	dec    DWORD PTR [rax]
   140010180:	mov    rcx,QWORD PTR [rcx+0x40]
   140010184:	mov    rdx,QWORD PTR [rcx]
   140010187:	lea    rax,[rdx+0x2]
   14001018b:	mov    QWORD PTR [rcx],rax
   14001018e:	mov    WORD PTR [rdx],r8w
   140010192:	jmp    0x1400101a2
   140010194:	mov    rax,QWORD PTR [rcx]
   140010197:	movzx  edx,r8w
   14001019b:	call   QWORD PTR [rax+0x18]
   14001019e:	movzx  r8d,ax
   1400101a2:	mov    eax,0xffff
   1400101a7:	cmp    ax,r8w
   1400101ab:	jne    0x1400101b0
   1400101ad:	mov    BYTE PTR [rbx],0x1
   1400101b0:	mov    rax,rbx
   1400101b3:	add    rsp,0x20
   1400101b7:	pop    rbx
   1400101b8:	ret    
   1400101b9:	int3   
   1400101ba:	int3   
   1400101bb:	int3   
   1400101bc:	mov    QWORD PTR [rsp+0x8],rcx
   1400101c1:	push   rbx
   1400101c2:	push   rsi
   1400101c3:	push   rdi
   1400101c4:	push   r12
   1400101c6:	push   r13
   1400101c8:	push   r14
   1400101ca:	push   r15
   1400101cc:	sub    rsp,0x50
   1400101d0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400101d9:	mov    r13,rdx
   1400101dc:	mov    rdi,rcx
   1400101df:	xor    ebx,ebx
   1400101e1:	mov    esi,ebx
   1400101e3:	mov    DWORD PTR [rsp+0xa0],ebx
   1400101ea:	or     r15,0xffffffffffffffff
   1400101ee:	inc    r15
   1400101f1:	cmp    BYTE PTR [r15+rdx*1],bl
   1400101f5:	jne    0x1400101ee
   1400101f7:	mov    rax,QWORD PTR [rcx]
   1400101fa:	movsxd rcx,DWORD PTR [rax+0x4]
   1400101fe:	mov    r14,QWORD PTR [rcx+rdi*1+0x28]
   140010203:	test   r14,r14
   140010206:	jle    0x140010212
   140010208:	cmp    r14,r15
   14001020b:	jle    0x140010212
   14001020d:	sub    r14,r15
   140010210:	jmp    0x140010215
   140010212:	mov    r14,rbx
   140010215:	mov    rdx,rdi
   140010218:	lea    rcx,[rsp+0x28]
   14001021d:	call   0x14000e7e8
   140010222:	nop
   140010223:	cmp    BYTE PTR [rsp+0x30],bl
   140010227:	jne    0x140010233
   140010229:	mov    esi,0x4
   14001022e:	jmp    0x14001041a
   140010233:	mov    rax,QWORD PTR [rdi]
   140010236:	movsxd rcx,DWORD PTR [rax+0x4]
   14001023a:	add    rcx,rdi
   14001023d:	lea    rdx,[rsp+0x38]
   140010242:	call   0x140005600
   140010247:	nop
   140010248:	mov    rcx,rax
   14001024b:	call   0x14000dba0
   140010250:	mov    QWORD PTR [rsp+0xa8],rax
   140010258:	mov    rcx,QWORD PTR [rsp+0x40]
   14001025d:	test   rcx,rcx
   140010260:	je     0x14001027c
   140010262:	mov    rdx,QWORD PTR [rcx]
   140010265:	call   QWORD PTR [rdx+0x10]
   140010268:	test   rax,rax
   14001026b:	je     0x14001027c
   14001026d:	mov    r8,QWORD PTR [rax]
   140010270:	mov    edx,0x1
   140010275:	mov    rcx,rax
   140010278:	call   QWORD PTR [r8]
   14001027b:	nop
   14001027c:	mov    rax,QWORD PTR [rdi]
   14001027f:	movsxd rcx,DWORD PTR [rax+0x4]
   140010283:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140010287:	and    eax,0x1c0
   14001028c:	mov    r12d,0xffff
   140010292:	cmp    eax,0x40
   140010295:	je     0x140010302
   140010297:	test   r14,r14
   14001029a:	jle    0x140010302
   14001029c:	mov    rax,QWORD PTR [rdi]
   14001029f:	movsxd rcx,DWORD PTR [rax+0x4]
   1400102a3:	movzx  r8d,WORD PTR [rcx+rdi*1+0x58]
   1400102a9:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400102ae:	mov    rax,QWORD PTR [rcx+0x40]
   1400102b2:	cmp    QWORD PTR [rax],rbx
   1400102b5:	je     0x1400102bf
   1400102b7:	mov    rax,QWORD PTR [rcx+0x58]
   1400102bb:	mov    edx,DWORD PTR [rax]
   1400102bd:	jmp    0x1400102c1
   1400102bf:	mov    edx,ebx
   1400102c1:	test   edx,edx
   1400102c3:	jle    0x1400102df
   1400102c5:	mov    rax,QWORD PTR [rcx+0x58]
   1400102c9:	dec    DWORD PTR [rax]
   1400102cb:	mov    rcx,QWORD PTR [rcx+0x40]
   1400102cf:	mov    rdx,QWORD PTR [rcx]
   1400102d2:	lea    rax,[rdx+0x2]
   1400102d6:	mov    QWORD PTR [rcx],rax
   1400102d9:	mov    WORD PTR [rdx],r8w
   1400102dd:	jmp    0x1400102ed
   1400102df:	mov    rax,QWORD PTR [rcx]
   1400102e2:	movzx  edx,r8w
   1400102e6:	call   QWORD PTR [rax+0x18]
   1400102e9:	movzx  r8d,ax
   1400102ed:	cmp    r12w,r8w
   1400102f1:	jne    0x1400102fd
   1400102f3:	mov    esi,0x4
   1400102f8:	jmp    0x140010382
   1400102fd:	dec    r14
   140010300:	jmp    0x140010297
   140010302:	test   esi,esi
   140010304:	jne    0x1400103fb
   14001030a:	test   r15,r15
   14001030d:	jle    0x14001038e
   14001030f:	mov    rcx,QWORD PTR [rsp+0xa8]
   140010317:	mov    rax,QWORD PTR [rcx]
   14001031a:	mov    dl,BYTE PTR [r13+0x0]
   14001031e:	call   QWORD PTR [rax+0x60]
   140010321:	movzx  r8d,ax
   140010325:	mov    rax,QWORD PTR [rdi]
   140010328:	movsxd rcx,DWORD PTR [rax+0x4]
   14001032c:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140010331:	mov    rax,QWORD PTR [rcx+0x40]
   140010335:	cmp    QWORD PTR [rax],rbx
   140010338:	je     0x140010342
   14001033a:	mov    rax,QWORD PTR [rcx+0x58]
   14001033e:	mov    edx,DWORD PTR [rax]
   140010340:	jmp    0x140010344
   140010342:	mov    edx,ebx
   140010344:	test   edx,edx
   140010346:	jle    0x140010362
   140010348:	mov    rax,QWORD PTR [rcx+0x58]
   14001034c:	dec    DWORD PTR [rax]
   14001034e:	mov    rcx,QWORD PTR [rcx+0x40]
   140010352:	mov    rdx,QWORD PTR [rcx]
   140010355:	lea    rax,[rdx+0x2]
   140010359:	mov    QWORD PTR [rcx],rax
   14001035c:	mov    WORD PTR [rdx],r8w
   140010360:	jmp    0x140010370
   140010362:	mov    rax,QWORD PTR [rcx]
   140010365:	movzx  edx,r8w
   140010369:	call   QWORD PTR [rax+0x18]
   14001036c:	movzx  r8d,ax
   140010370:	dec    r15
   140010373:	inc    r13
   140010376:	mov    esi,0x4
   14001037b:	cmp    r12w,r8w
   14001037f:	cmovne esi,ebx
   140010382:	mov    DWORD PTR [rsp+0xa0],esi
   140010389:	jmp    0x140010302
   14001038e:	test   r14,r14
   140010391:	jle    0x1400103fb
   140010393:	mov    rax,QWORD PTR [rdi]
   140010396:	movsxd rcx,DWORD PTR [rax+0x4]
   14001039a:	movzx  r8d,WORD PTR [rcx+rdi*1+0x58]
   1400103a0:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400103a5:	mov    rax,QWORD PTR [rcx+0x40]
   1400103a9:	cmp    QWORD PTR [rax],rbx
   1400103ac:	je     0x1400103b6
   1400103ae:	mov    rax,QWORD PTR [rcx+0x58]
   1400103b2:	mov    edx,DWORD PTR [rax]
   1400103b4:	jmp    0x1400103b8
   1400103b6:	mov    edx,ebx
   1400103b8:	test   edx,edx
   1400103ba:	jle    0x1400103d6
   1400103bc:	mov    rax,QWORD PTR [rcx+0x58]
   1400103c0:	dec    DWORD PTR [rax]
   1400103c2:	mov    rcx,QWORD PTR [rcx+0x40]
   1400103c6:	mov    rdx,QWORD PTR [rcx]
   1400103c9:	lea    rax,[rdx+0x2]
   1400103cd:	mov    QWORD PTR [rcx],rax
   1400103d0:	mov    WORD PTR [rdx],r8w
   1400103d4:	jmp    0x1400103e4
   1400103d6:	mov    rax,QWORD PTR [rcx]
   1400103d9:	movzx  edx,r8w
   1400103dd:	call   QWORD PTR [rax+0x18]
   1400103e0:	movzx  r8d,ax
   1400103e4:	cmp    r12w,r8w
   1400103e8:	jne    0x1400103f6
   1400103ea:	or     esi,0x4
   1400103ed:	mov    DWORD PTR [rsp+0xa0],esi
   1400103f4:	jmp    0x1400103fb
   1400103f6:	dec    r14
   1400103f9:	jmp    0x14001038e
   1400103fb:	mov    rax,QWORD PTR [rdi]
   1400103fe:	movsxd rcx,DWORD PTR [rax+0x4]
   140010402:	mov    QWORD PTR [rcx+rdi*1+0x28],rbx
   140010407:	jmp    0x14001041a
   140010409:	xor    ebx,ebx
   14001040b:	mov    rdi,QWORD PTR [rsp+0x90]
   140010413:	mov    esi,DWORD PTR [rsp+0xa0]
   14001041a:	mov    rax,QWORD PTR [rdi]
   14001041d:	movsxd rcx,DWORD PTR [rax+0x4]
   140010421:	add    rcx,rdi
   140010424:	test   esi,esi
   140010426:	je     0x140010442
   140010428:	mov    edx,DWORD PTR [rcx+0x10]
   14001042b:	or     edx,esi
   14001042d:	mov    eax,edx
   14001042f:	or     eax,0x4
   140010432:	cmp    QWORD PTR [rcx+0x48],rbx
   140010436:	cmove  edx,eax
   140010439:	xor    r8d,r8d
   14001043c:	call   0x1400054f8
   140010441:	nop
   140010442:	call   0x140027894
   140010447:	test   al,al
   140010449:	jne    0x140010456
   14001044b:	mov    rcx,QWORD PTR [rsp+0x28]
   140010450:	call   0x140010068
   140010455:	nop
   140010456:	mov    rdx,QWORD PTR [rsp+0x28]
   14001045b:	mov    rax,QWORD PTR [rdx]
   14001045e:	movsxd rcx,DWORD PTR [rax+0x4]
   140010462:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140010467:	test   rcx,rcx
   14001046a:	je     0x140010473
   14001046c:	mov    rax,QWORD PTR [rcx]
   14001046f:	call   QWORD PTR [rax+0x10]
   140010472:	nop
   140010473:	mov    rax,rdi
   140010476:	add    rsp,0x50
   14001047a:	pop    r15
   14001047c:	pop    r14
   14001047e:	pop    r13
   140010480:	pop    r12
   140010482:	pop    rdi
   140010483:	pop    rsi
   140010484:	pop    rbx
   140010485:	ret    
   140010486:	int3   
   140010487:	int3   
   140010488:	mov    rax,rsp
   14001048b:	mov    QWORD PTR [rax+0x8],rcx
   14001048f:	push   rdi
   140010490:	push   r12
   140010492:	push   r13
   140010494:	push   r14
   140010496:	push   r15
   140010498:	sub    rsp,0x40
   14001049c:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400104a4:	mov    QWORD PTR [rax+0x18],rbx
   1400104a8:	mov    QWORD PTR [rax+0x20],rsi
   1400104ac:	mov    r12,rdx
   1400104af:	mov    rdi,rcx
   1400104b2:	xor    ebx,ebx
   1400104b4:	mov    esi,ebx
   1400104b6:	mov    DWORD PTR [rsp+0x78],ebx
   1400104ba:	cmp    WORD PTR [rdx],bx
   1400104bd:	jne    0x1400104c4
   1400104bf:	mov    r15d,ebx
   1400104c2:	jmp    0x1400104d2
   1400104c4:	or     r15,0xffffffffffffffff
   1400104c8:	inc    r15
   1400104cb:	cmp    WORD PTR [rdx+r15*2],bx
   1400104d0:	jne    0x1400104c8
   1400104d2:	mov    rax,QWORD PTR [rcx]
   1400104d5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400104d9:	mov    r14,QWORD PTR [rcx+rdi*1+0x28]
   1400104de:	test   r14,r14
   1400104e1:	jle    0x1400104ed
   1400104e3:	cmp    r14,r15
   1400104e6:	jle    0x1400104ed
   1400104e8:	sub    r14,r15
   1400104eb:	jmp    0x1400104f0
   1400104ed:	mov    r14,rbx
   1400104f0:	mov    rdx,rdi
   1400104f3:	lea    rcx,[rsp+0x28]
   1400104f8:	call   0x14000e7e8
   1400104fd:	nop
   1400104fe:	cmp    BYTE PTR [rsp+0x30],bl
   140010502:	jne    0x14001050e
   140010504:	mov    esi,0x4
   140010509:	jmp    0x140010639
   14001050e:	mov    rax,QWORD PTR [rdi]
   140010511:	movsxd rcx,DWORD PTR [rax+0x4]
   140010515:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140010519:	and    eax,0x1c0
   14001051e:	mov    r13d,0xffff
   140010524:	cmp    eax,0x40
   140010527:	je     0x140010592
   140010529:	test   r14,r14
   14001052c:	jle    0x14001058a
   14001052e:	mov    rax,QWORD PTR [rdi]
   140010531:	movsxd rcx,DWORD PTR [rax+0x4]
   140010535:	movzx  r8d,WORD PTR [rcx+rdi*1+0x58]
   14001053b:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   140010540:	mov    rax,QWORD PTR [rcx+0x40]
   140010544:	cmp    QWORD PTR [rax],rbx
   140010547:	je     0x140010551
   140010549:	mov    rax,QWORD PTR [rcx+0x58]
   14001054d:	mov    edx,DWORD PTR [rax]
   14001054f:	jmp    0x140010553
   140010551:	mov    edx,ebx
   140010553:	test   edx,edx
   140010555:	jle    0x140010571
   140010557:	mov    rax,QWORD PTR [rcx+0x58]
   14001055b:	dec    DWORD PTR [rax]
   14001055d:	mov    rcx,QWORD PTR [rcx+0x40]
   140010561:	mov    rdx,QWORD PTR [rcx]
   140010564:	lea    rax,[rdx+0x2]
   140010568:	mov    QWORD PTR [rcx],rax
   14001056b:	mov    WORD PTR [rdx],r8w
   14001056f:	jmp    0x14001057f
   140010571:	mov    rax,QWORD PTR [rcx]
   140010574:	movzx  edx,r8w
   140010578:	call   QWORD PTR [rax+0x18]
   14001057b:	movzx  r8d,ax
   14001057f:	cmp    r13w,r8w
   140010583:	je     0x1400105af
   140010585:	dec    r14
   140010588:	jmp    0x140010529
   14001058a:	test   esi,esi
   14001058c:	jne    0x140010620
   140010592:	mov    rax,QWORD PTR [rdi]
   140010595:	movsxd rcx,DWORD PTR [rax+0x4]
   140010599:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   14001059e:	mov    rax,QWORD PTR [rcx]
   1400105a1:	mov    r8,r15
   1400105a4:	mov    rdx,r12
   1400105a7:	call   QWORD PTR [rax+0x48]
   1400105aa:	cmp    rax,r15
   1400105ad:	je     0x1400105b6
   1400105af:	mov    esi,0x4
   1400105b4:	jmp    0x140010615
   1400105b6:	test   r14,r14
   1400105b9:	jle    0x140010620
   1400105bb:	mov    rax,QWORD PTR [rdi]
   1400105be:	movsxd rcx,DWORD PTR [rax+0x4]
   1400105c2:	movzx  r8d,WORD PTR [rcx+rdi*1+0x58]
   1400105c8:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400105cd:	mov    rax,QWORD PTR [rcx+0x40]
   1400105d1:	cmp    QWORD PTR [rax],rbx
   1400105d4:	je     0x1400105de
   1400105d6:	mov    rax,QWORD PTR [rcx+0x58]
   1400105da:	mov    edx,DWORD PTR [rax]
   1400105dc:	jmp    0x1400105e0
   1400105de:	mov    edx,ebx
   1400105e0:	test   edx,edx
   1400105e2:	jle    0x1400105fe
   1400105e4:	mov    rax,QWORD PTR [rcx+0x58]
   1400105e8:	dec    DWORD PTR [rax]
   1400105ea:	mov    rcx,QWORD PTR [rcx+0x40]
   1400105ee:	mov    rdx,QWORD PTR [rcx]
   1400105f1:	lea    rax,[rdx+0x2]
   1400105f5:	mov    QWORD PTR [rcx],rax
   1400105f8:	mov    WORD PTR [rdx],r8w
   1400105fc:	jmp    0x14001060c
   1400105fe:	mov    rax,QWORD PTR [rcx]
   140010601:	movzx  edx,r8w
   140010605:	call   QWORD PTR [rax+0x18]
   140010608:	movzx  r8d,ax
   14001060c:	cmp    r13w,r8w
   140010610:	jne    0x14001061b
   140010612:	or     esi,0x4
   140010615:	mov    DWORD PTR [rsp+0x78],esi
   140010619:	jmp    0x140010620
   14001061b:	dec    r14
   14001061e:	jmp    0x1400105b6
   140010620:	mov    rax,QWORD PTR [rdi]
   140010623:	movsxd rcx,DWORD PTR [rax+0x4]
   140010627:	mov    QWORD PTR [rcx+rdi*1+0x28],rbx
   14001062c:	jmp    0x140010639
   14001062e:	xor    ebx,ebx
   140010630:	mov    rdi,QWORD PTR [rsp+0x70]
   140010635:	mov    esi,DWORD PTR [rsp+0x78]
   140010639:	mov    rax,QWORD PTR [rdi]
   14001063c:	movsxd rcx,DWORD PTR [rax+0x4]
   140010640:	add    rcx,rdi
   140010643:	test   esi,esi
   140010645:	je     0x140010661
   140010647:	mov    edx,DWORD PTR [rcx+0x10]
   14001064a:	or     edx,esi
   14001064c:	mov    eax,edx
   14001064e:	or     eax,0x4
   140010651:	cmp    QWORD PTR [rcx+0x48],rbx
   140010655:	cmove  edx,eax
   140010658:	xor    r8d,r8d
   14001065b:	call   0x1400054f8
   140010660:	nop
   140010661:	call   0x140027894
   140010666:	test   al,al
   140010668:	jne    0x140010675
   14001066a:	mov    rcx,QWORD PTR [rsp+0x28]
   14001066f:	call   0x140010068
   140010674:	nop
   140010675:	mov    rdx,QWORD PTR [rsp+0x28]
   14001067a:	mov    rax,QWORD PTR [rdx]
   14001067d:	movsxd rcx,DWORD PTR [rax+0x4]
   140010681:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140010686:	test   rcx,rcx
   140010689:	je     0x140010692
   14001068b:	mov    rax,QWORD PTR [rcx]
   14001068e:	call   QWORD PTR [rax+0x10]
   140010691:	nop
   140010692:	mov    rax,rdi
   140010695:	lea    r11,[rsp+0x40]
   14001069a:	mov    rbx,QWORD PTR [r11+0x40]
   14001069e:	mov    rsi,QWORD PTR [r11+0x48]
   1400106a2:	mov    rsp,r11
   1400106a5:	pop    r15
   1400106a7:	pop    r14
   1400106a9:	pop    r13
   1400106ab:	pop    r12
   1400106ad:	pop    rdi
   1400106ae:	ret    
   1400106af:	int3   
   1400106b0:	mov    rax,rsp
   1400106b3:	mov    QWORD PTR [rax+0x8],rcx
   1400106b7:	push   rdi
   1400106b8:	push   r12
   1400106ba:	push   r13
   1400106bc:	push   r14
   1400106be:	push   r15
   1400106c0:	sub    rsp,0x40
   1400106c4:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   1400106cc:	mov    QWORD PTR [rax+0x18],rsi
   1400106d0:	mov    r15,rdx
   1400106d3:	mov    rdi,rcx
   1400106d6:	xor    esi,esi
   1400106d8:	mov    DWORD PTR [rsp+0x78],esi
   1400106dc:	mov    r12,QWORD PTR [rdx+0x10]
   1400106e0:	mov    rax,QWORD PTR [rcx]
   1400106e3:	movsxd r8,DWORD PTR [rax+0x4]
   1400106e7:	mov    r14,QWORD PTR [r8+rcx*1+0x28]
   1400106ec:	test   r14,r14
   1400106ef:	jle    0x1400106fb
   1400106f1:	cmp    r14,r12
   1400106f4:	jbe    0x1400106fb
   1400106f6:	sub    r14,r12
   1400106f9:	jmp    0x1400106fe
   1400106fb:	xor    r14d,r14d
   1400106fe:	mov    rdx,rdi
   140010701:	lea    rcx,[rsp+0x28]
   140010706:	call   0x14000e7e8
   14001070b:	nop
   14001070c:	cmp    BYTE PTR [rsp+0x30],0x0
   140010711:	jne    0x14001071d
   140010713:	mov    esi,0x4
   140010718:	jmp    0x14001085a
   14001071d:	mov    rax,QWORD PTR [rdi]
   140010720:	movsxd rcx,DWORD PTR [rax+0x4]
   140010724:	mov    eax,DWORD PTR [rcx+rdi*1+0x18]
   140010728:	and    eax,0x1c0
   14001072d:	mov    r13d,0xffff
   140010733:	cmp    eax,0x40
   140010736:	je     0x1400107a9
   140010738:	test   r14,r14
   14001073b:	je     0x1400107a5
   14001073d:	mov    rax,QWORD PTR [rdi]
   140010740:	movsxd rcx,DWORD PTR [rax+0x4]
   140010744:	movzx  r8d,WORD PTR [rcx+rdi*1+0x58]
   14001074a:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   14001074f:	mov    rax,QWORD PTR [rcx+0x40]
   140010753:	cmp    QWORD PTR [rax],0x0
   140010757:	je     0x140010761
   140010759:	mov    rax,QWORD PTR [rcx+0x58]
   14001075d:	mov    edx,DWORD PTR [rax]
   14001075f:	jmp    0x140010763
   140010761:	xor    edx,edx
   140010763:	test   edx,edx
   140010765:	jle    0x140010781
   140010767:	mov    rax,QWORD PTR [rcx+0x58]
   14001076b:	dec    DWORD PTR [rax]
   14001076d:	mov    rcx,QWORD PTR [rcx+0x40]
   140010771:	mov    rdx,QWORD PTR [rcx]
   140010774:	lea    rax,[rdx+0x2]
   140010778:	mov    QWORD PTR [rcx],rax
   14001077b:	mov    WORD PTR [rdx],r8w
   14001077f:	jmp    0x14001078f
   140010781:	mov    rax,QWORD PTR [rcx]
   140010784:	movzx  edx,r8w
   140010788:	call   QWORD PTR [rax+0x18]
   14001078b:	movzx  r8d,ax
   14001078f:	cmp    r13w,r8w
   140010793:	jne    0x1400107a0
   140010795:	mov    esi,0x4
   14001079a:	mov    DWORD PTR [rsp+0x78],esi
   14001079e:	jmp    0x1400107d7
   1400107a0:	dec    r14
   1400107a3:	jmp    0x140010738
   1400107a5:	test   esi,esi
   1400107a7:	jne    0x1400107d7
   1400107a9:	cmp    QWORD PTR [r15+0x18],0x8
   1400107ae:	jb     0x1400107b3
   1400107b0:	mov    r15,QWORD PTR [r15]
   1400107b3:	mov    rax,QWORD PTR [rdi]
   1400107b6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400107ba:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400107bf:	mov    rax,QWORD PTR [rcx]
   1400107c2:	mov    r8,r12
   1400107c5:	mov    rdx,r15
   1400107c8:	call   QWORD PTR [rax+0x48]
   1400107cb:	cmp    rax,r12
   1400107ce:	je     0x1400107d7
   1400107d0:	mov    esi,0x4
   1400107d5:	jmp    0x140010837
   1400107d7:	test   r14,r14
   1400107da:	je     0x140010842
   1400107dc:	mov    rax,QWORD PTR [rdi]
   1400107df:	movsxd rcx,DWORD PTR [rax+0x4]
   1400107e3:	movzx  r8d,WORD PTR [rcx+rdi*1+0x58]
   1400107e9:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400107ee:	mov    rax,QWORD PTR [rcx+0x40]
   1400107f2:	cmp    QWORD PTR [rax],0x0
   1400107f6:	je     0x140010800
   1400107f8:	mov    rax,QWORD PTR [rcx+0x58]
   1400107fc:	mov    edx,DWORD PTR [rax]
   1400107fe:	jmp    0x140010802
   140010800:	xor    edx,edx
   140010802:	test   edx,edx
   140010804:	jle    0x140010820
   140010806:	mov    rax,QWORD PTR [rcx+0x58]
   14001080a:	dec    DWORD PTR [rax]
   14001080c:	mov    rcx,QWORD PTR [rcx+0x40]
   140010810:	mov    rdx,QWORD PTR [rcx]
   140010813:	lea    rax,[rdx+0x2]
   140010817:	mov    QWORD PTR [rcx],rax
   14001081a:	mov    WORD PTR [rdx],r8w
   14001081e:	jmp    0x14001082e
   140010820:	mov    rax,QWORD PTR [rcx]
   140010823:	movzx  edx,r8w
   140010827:	call   QWORD PTR [rax+0x18]
   14001082a:	movzx  r8d,ax
   14001082e:	cmp    r13w,r8w
   140010832:	jne    0x14001083d
   140010834:	or     esi,0x4
   140010837:	mov    DWORD PTR [rsp+0x78],esi
   14001083b:	jmp    0x140010842
   14001083d:	dec    r14
   140010840:	jmp    0x1400107d7
   140010842:	mov    rax,QWORD PTR [rdi]
   140010845:	movsxd rcx,DWORD PTR [rax+0x4]
   140010849:	and    QWORD PTR [rcx+rdi*1+0x28],0x0
   14001084f:	jmp    0x14001085a
   140010851:	mov    rdi,QWORD PTR [rsp+0x70]
   140010856:	mov    esi,DWORD PTR [rsp+0x78]
   14001085a:	mov    rax,QWORD PTR [rdi]
   14001085d:	movsxd rcx,DWORD PTR [rax+0x4]
   140010861:	add    rcx,rdi
   140010864:	test   esi,esi
   140010866:	je     0x140010883
   140010868:	mov    edx,DWORD PTR [rcx+0x10]
   14001086b:	or     edx,esi
   14001086d:	mov    eax,edx
   14001086f:	or     eax,0x4
   140010872:	cmp    QWORD PTR [rcx+0x48],0x0
   140010877:	cmove  edx,eax
   14001087a:	xor    r8d,r8d
   14001087d:	call   0x1400054f8
   140010882:	nop
   140010883:	call   0x140027894
   140010888:	test   al,al
   14001088a:	jne    0x140010897
   14001088c:	mov    rcx,QWORD PTR [rsp+0x28]
   140010891:	call   0x140010068
   140010896:	nop
   140010897:	mov    rdx,QWORD PTR [rsp+0x28]
   14001089c:	mov    rax,QWORD PTR [rdx]
   14001089f:	movsxd rcx,DWORD PTR [rax+0x4]
   1400108a3:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   1400108a8:	test   rcx,rcx
   1400108ab:	je     0x1400108b4
   1400108ad:	mov    rax,QWORD PTR [rcx]
   1400108b0:	call   QWORD PTR [rax+0x10]
   1400108b3:	nop
   1400108b4:	mov    rax,rdi
   1400108b7:	mov    rsi,QWORD PTR [rsp+0x80]
   1400108bf:	add    rsp,0x40
   1400108c3:	pop    r15
   1400108c5:	pop    r14
   1400108c7:	pop    r13
   1400108c9:	pop    r12
   1400108cb:	pop    rdi
   1400108cc:	ret    
   1400108cd:	int3   
   1400108ce:	int3   
   1400108cf:	int3   
   1400108d0:	test   rdx,rdx
   1400108d3:	je     0x1400108eb
   1400108d5:	test   rcx,rcx
   1400108d8:	je     0x1400108e1
   1400108da:	movzx  eax,WORD PTR [r8]
   1400108de:	mov    WORD PTR [rcx],ax
   1400108e1:	add    rcx,0x2
   1400108e5:	sub    rdx,0x1
   1400108e9:	jne    0x1400108d5
   1400108eb:	ret    
   1400108ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400108f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400108f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400108fb:	push   rdi
   1400108fc:	sub    rsp,0x20
   140010900:	mov    rbx,rcx
   140010903:	mov    rcx,QWORD PTR [rcx+0x20]
   140010907:	mov    rax,QWORD PTR [rbx+0x18]
   14001090b:	add    rax,0x10
   14001090f:	cmp    rax,rcx
   140010912:	jb     0x14001098e
   140010914:	xor    edi,edi
   140010916:	cmp    QWORD PTR [rbx+0x10],rdi
   14001091a:	jne    0x140010936
   14001091c:	cmp    QWORD PTR [rbx],rdi
   14001091f:	jne    0x140010930
   140010921:	lea    ecx,[rdi+0x1]
   140010924:	call   0x140026118
   140010929:	mov    QWORD PTR [rbx],rax
   14001092c:	mov    QWORD PTR [rbx+0x8],rax
   140010930:	mov    rcx,QWORD PTR [rbx+0x28]
   140010934:	jmp    0x140010944
   140010936:	sub    rcx,QWORD PTR [rbx+0x10]
   14001093a:	lea    rax,[rcx+0x1]
   14001093e:	shr    rax,1
   140010941:	add    rcx,rax
   140010944:	mov    rax,QWORD PTR [rbx+0x10]
   140010948:	mov    rbp,QWORD PTR [rbx+0x18]
   14001094c:	mov    rsi,rbp
   14001094f:	sub    rsi,rax
   140010952:	add    rsi,0x10
   140010956:	cmp    rcx,rsi
   140010959:	cmovae rsi,rcx
   14001095d:	sub    rbp,rax
   140010960:	mov    rcx,rax
   140010963:	test   rsi,rsi
   140010966:	jne    0x14001096f
   140010968:	call   0x1400304c4
   14001096d:	jmp    0x14001097a
   14001096f:	mov    rdx,rsi
   140010972:	call   0x14002c764
   140010977:	mov    rdi,rax
   14001097a:	lea    rcx,[rdi+rbp*1]
   14001097e:	mov    QWORD PTR [rbx+0x10],rdi
   140010982:	lea    rax,[rsi+rdi*1]
   140010986:	mov    QWORD PTR [rbx+0x18],rcx
   14001098a:	mov    QWORD PTR [rbx+0x20],rax
   14001098e:	mov    rax,QWORD PTR [rbx+0x18]
   140010992:	mov    rbp,QWORD PTR [rsp+0x38]
   140010997:	mov    rsi,QWORD PTR [rsp+0x40]
   14001099c:	lea    rcx,[rax+0x10]
   1400109a0:	mov    QWORD PTR [rbx+0x18],rcx
   1400109a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400109a9:	add    rsp,0x20
   1400109ad:	pop    rdi
   1400109ae:	ret    
   1400109af:	int3   
   1400109b0:	rex push rbp
   1400109b2:	push   rbx
   1400109b3:	push   rsi
   1400109b4:	push   rdi
   1400109b5:	push   r14
   1400109b7:	mov    rbp,rsp
   1400109ba:	sub    rsp,0x40
   1400109be:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400109c6:	mov    r14,rcx
   1400109c9:	xor    edx,edx
   1400109cb:	lea    rcx,[rbp+0x38]
   1400109cf:	call   0x140027310
   1400109d4:	nop
   1400109d5:	mov    rsi,QWORD PTR [rip+0x66c54]        # 0x140077630
   1400109dc:	mov    QWORD PTR [rbp+0x40],rsi
   1400109e0:	mov    rdi,QWORD PTR [rip+0x66c79]        # 0x140077660
   1400109e7:	test   rdi,rdi
   1400109ea:	jne    0x140010a27
   1400109ec:	xor    edx,edx
   1400109ee:	lea    rcx,[rbp+0x30]
   1400109f2:	call   0x140027310
   1400109f7:	cmp    QWORD PTR [rip+0x66c62],rdi        # 0x140077660
   1400109fe:	jne    0x140010a17
   140010a00:	mov    eax,DWORD PTR [rip+0x659a2]        # 0x1400763a8
   140010a06:	inc    eax
   140010a08:	mov    DWORD PTR [rip+0x6599a],eax        # 0x1400763a8
   140010a0e:	cdqe   
   140010a10:	mov    QWORD PTR [rip+0x66c49],rax        # 0x140077660
   140010a17:	lea    rcx,[rbp+0x30]
   140010a1b:	call   0x140027390
   140010a20:	mov    rdi,QWORD PTR [rip+0x66c39]        # 0x140077660
   140010a27:	mov    rcx,QWORD PTR [r14+0x8]
   140010a2b:	cmp    rdi,QWORD PTR [rcx+0x18]
   140010a2f:	jae    0x140010a3b
   140010a31:	mov    rax,QWORD PTR [rcx+0x10]
   140010a35:	mov    rbx,QWORD PTR [rax+rdi*8]
   140010a39:	jmp    0x140010a3d
   140010a3b:	xor    ebx,ebx
   140010a3d:	test   rbx,rbx
   140010a40:	jne    0x140010acd
   140010a46:	cmp    BYTE PTR [rcx+0x24],bl
   140010a49:	je     0x140010a62
   140010a4b:	call   0x14002756c
   140010a50:	cmp    rdi,QWORD PTR [rax+0x18]
   140010a54:	jae    0x140010a60
   140010a56:	mov    rax,QWORD PTR [rax+0x10]
   140010a5a:	mov    rbx,QWORD PTR [rax+rdi*8]
   140010a5e:	jmp    0x140010a62
   140010a60:	xor    ebx,ebx
   140010a62:	test   rbx,rbx
   140010a65:	jne    0x140010acd
   140010a67:	test   rsi,rsi
   140010a6a:	je     0x140010a71
   140010a6c:	mov    rbx,rsi
   140010a6f:	jmp    0x140010acd
   140010a71:	mov    rdx,r14
   140010a74:	lea    rcx,[rbp+0x40]
   140010a78:	call   0x140010cd8
   140010a7d:	cmp    rax,0xffffffffffffffff
   140010a81:	jne    0x140010ab0
   140010a83:	xor    eax,eax
   140010a85:	mov    QWORD PTR [rbp-0x8],rax
   140010a89:	lea    rax,[rip+0x511f8]        # 0x140061c88
   140010a90:	mov    QWORD PTR [rbp-0x10],rax
   140010a94:	lea    rax,[rip+0x3acc5]        # 0x14004b760
   140010a9b:	mov    QWORD PTR [rbp-0x18],rax
   140010a9f:	lea    rdx,[rip+0x5f432]        # 0x14006fed8
   140010aa6:	lea    rcx,[rbp-0x18]
   140010aaa:	call   0x14002ab88
   140010aaf:	int3   
   140010ab0:	mov    rbx,QWORD PTR [rbp+0x40]
   140010ab4:	mov    QWORD PTR [rip+0x66b75],rbx        # 0x140077630
   140010abb:	mov    rdx,QWORD PTR [rbx]
   140010abe:	mov    rcx,rbx
   140010ac1:	call   QWORD PTR [rdx+0x8]
   140010ac4:	mov    rcx,rbx
   140010ac7:	call   0x140027534
   140010acc:	nop
   140010acd:	lea    rcx,[rbp+0x38]
   140010ad1:	call   0x140027390
   140010ad6:	mov    rax,rbx
   140010ad9:	add    rsp,0x40
   140010add:	pop    r14
   140010adf:	pop    rdi
   140010ae0:	pop    rsi
   140010ae1:	pop    rbx
   140010ae2:	pop    rbp
   140010ae3:	ret    
   140010ae4:	rex push rbp
   140010ae6:	push   rbx
   140010ae7:	push   rsi
   140010ae8:	push   rdi
   140010ae9:	push   r14
   140010aeb:	mov    rbp,rsp
   140010aee:	sub    rsp,0x40
   140010af2:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140010afa:	mov    r14,rcx
   140010afd:	xor    edx,edx
   140010aff:	lea    rcx,[rbp+0x38]
   140010b03:	call   0x140027310
   140010b08:	nop
   140010b09:	mov    rsi,QWORD PTR [rip+0x66b10]        # 0x140077620
   140010b10:	mov    QWORD PTR [rbp+0x40],rsi
   140010b14:	mov    rdi,QWORD PTR [rip+0x66b3d]        # 0x140077658
   140010b1b:	test   rdi,rdi
   140010b1e:	jne    0x140010b5b
   140010b20:	xor    edx,edx
   140010b22:	lea    rcx,[rbp+0x30]
   140010b26:	call   0x140027310
   140010b2b:	cmp    QWORD PTR [rip+0x66b26],rdi        # 0x140077658
   140010b32:	jne    0x140010b4b
   140010b34:	mov    eax,DWORD PTR [rip+0x6586e]        # 0x1400763a8
   140010b3a:	inc    eax
   140010b3c:	mov    DWORD PTR [rip+0x65866],eax        # 0x1400763a8
   140010b42:	cdqe   
   140010b44:	mov    QWORD PTR [rip+0x66b0d],rax        # 0x140077658
   140010b4b:	lea    rcx,[rbp+0x30]
   140010b4f:	call   0x140027390
   140010b54:	mov    rdi,QWORD PTR [rip+0x66afd]        # 0x140077658
   140010b5b:	mov    rcx,QWORD PTR [r14+0x8]
   140010b5f:	cmp    rdi,QWORD PTR [rcx+0x18]
   140010b63:	jae    0x140010b6f
   140010b65:	mov    rax,QWORD PTR [rcx+0x10]
   140010b69:	mov    rbx,QWORD PTR [rax+rdi*8]
   140010b6d:	jmp    0x140010b71
   140010b6f:	xor    ebx,ebx
   140010b71:	test   rbx,rbx
   140010b74:	jne    0x140010c01
   140010b7a:	cmp    BYTE PTR [rcx+0x24],bl
   140010b7d:	je     0x140010b96
   140010b7f:	call   0x14002756c
   140010b84:	cmp    rdi,QWORD PTR [rax+0x18]
   140010b88:	jae    0x140010b94
   140010b8a:	mov    rax,QWORD PTR [rax+0x10]
   140010b8e:	mov    rbx,QWORD PTR [rax+rdi*8]
   140010b92:	jmp    0x140010b96
   140010b94:	xor    ebx,ebx
   140010b96:	test   rbx,rbx
   140010b99:	jne    0x140010c01
   140010b9b:	test   rsi,rsi
   140010b9e:	je     0x140010ba5
   140010ba0:	mov    rbx,rsi
   140010ba3:	jmp    0x140010c01
   140010ba5:	mov    rdx,r14
   140010ba8:	lea    rcx,[rbp+0x40]
   140010bac:	call   0x140010c18
   140010bb1:	cmp    rax,0xffffffffffffffff
   140010bb5:	jne    0x140010be4
   140010bb7:	xor    eax,eax
   140010bb9:	mov    QWORD PTR [rbp-0x8],rax
   140010bbd:	lea    rax,[rip+0x510c4]        # 0x140061c88
   140010bc4:	mov    QWORD PTR [rbp-0x10],rax
   140010bc8:	lea    rax,[rip+0x3ab91]        # 0x14004b760
   140010bcf:	mov    QWORD PTR [rbp-0x18],rax
   140010bd3:	lea    rdx,[rip+0x5f2fe]        # 0x14006fed8
   140010bda:	lea    rcx,[rbp-0x18]
   140010bde:	call   0x14002ab88
   140010be3:	int3   
   140010be4:	mov    rbx,QWORD PTR [rbp+0x40]
   140010be8:	mov    QWORD PTR [rip+0x66a31],rbx        # 0x140077620
   140010bef:	mov    rdx,QWORD PTR [rbx]
   140010bf2:	mov    rcx,rbx
   140010bf5:	call   QWORD PTR [rdx+0x8]
   140010bf8:	mov    rcx,rbx
   140010bfb:	call   0x140027534
   140010c00:	nop
   140010c01:	lea    rcx,[rbp+0x38]
   140010c05:	call   0x140027390
   140010c0a:	mov    rax,rbx
   140010c0d:	add    rsp,0x40
   140010c11:	pop    r14
   140010c13:	pop    rdi
   140010c14:	pop    rsi
   140010c15:	pop    rbx
   140010c16:	pop    rbp
   140010c17:	ret    
   140010c18:	mov    rax,rsp
   140010c1b:	push   rdi
   140010c1c:	sub    rsp,0x90
   140010c23:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140010c2b:	mov    QWORD PTR [rax+0x10],rbx
   140010c2f:	mov    QWORD PTR [rax+0x20],rsi
   140010c33:	mov    rsi,rdx
   140010c36:	mov    rbx,rcx
   140010c39:	and    DWORD PTR [rax+0x8],0x0
   140010c3d:	test   rcx,rcx
   140010c40:	je     0x140010cbc
   140010c42:	cmp    QWORD PTR [rcx],0x0
   140010c46:	jne    0x140010cbc
   140010c48:	mov    ecx,0x30
   140010c4d:	call   0x140026118
   140010c52:	mov    rdi,rax
   140010c55:	mov    QWORD PTR [rsp+0xb0],rax
   140010c5d:	mov    rcx,QWORD PTR [rsi+0x8]
   140010c61:	test   rcx,rcx
   140010c64:	jne    0x140010c6f
   140010c66:	lea    rdx,[rip+0x51048]        # 0x140061cb5
   140010c6d:	jmp    0x140010c7c
   140010c6f:	mov    rdx,QWORD PTR [rcx+0x28]
   140010c73:	test   rdx,rdx
   140010c76:	jne    0x140010c7c
   140010c78:	lea    rdx,[rcx+0x30]
   140010c7c:	lea    rcx,[rsp+0x28]
   140010c81:	call   0x140004870
   140010c86:	nop
   140010c87:	mov    DWORD PTR [rsp+0xa0],0x1
   140010c92:	and    DWORD PTR [rdi+0x8],0x0
   140010c96:	lea    rcx,[rip+0x3aeab]        # 0x14004bb48
   140010c9d:	mov    QWORD PTR [rdi],rcx
   140010ca0:	mov    r8b,0x1
   140010ca3:	mov    rdx,rax
   140010ca6:	mov    rcx,rdi
   140010ca9:	call   0x140010d80
   140010cae:	nop
   140010caf:	mov    QWORD PTR [rbx],rdi
   140010cb2:	lea    rcx,[rsp+0x28]
   140010cb7:	call   0x14000493c
   140010cbc:	mov    eax,0x4
   140010cc1:	lea    r11,[rsp+0x90]
   140010cc9:	mov    rbx,QWORD PTR [r11+0x18]
   140010ccd:	mov    rsi,QWORD PTR [r11+0x28]
   140010cd1:	mov    rsp,r11
   140010cd4:	pop    rdi
   140010cd5:	ret    
   140010cd6:	int3   
   140010cd7:	int3   
   140010cd8:	mov    rax,rsp
   140010cdb:	push   rdi
   140010cdc:	sub    rsp,0x90
   140010ce3:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140010ceb:	mov    QWORD PTR [rax+0x10],rbx
   140010cef:	mov    QWORD PTR [rax+0x18],rsi
   140010cf3:	mov    rsi,rdx
   140010cf6:	mov    rbx,rcx
   140010cf9:	and    DWORD PTR [rsp+0xa0],0x0
   140010d01:	test   rcx,rcx
   140010d04:	je     0x140010d65
   140010d06:	cmp    QWORD PTR [rcx],0x0
   140010d0a:	jne    0x140010d65
   140010d0c:	mov    ecx,0x10
   140010d11:	call   0x140026118
   140010d16:	mov    rdi,rax
   140010d19:	mov    QWORD PTR [rsp+0xa0],rax
   140010d21:	mov    rcx,QWORD PTR [rsi+0x8]
   140010d25:	test   rcx,rcx
   140010d28:	jne    0x140010d33
   140010d2a:	lea    rdx,[rip+0x50f84]        # 0x140061cb5
   140010d31:	jmp    0x140010d40
   140010d33:	mov    rdx,QWORD PTR [rcx+0x28]
   140010d37:	test   rdx,rdx
   140010d3a:	jne    0x140010d40
   140010d3c:	lea    rdx,[rcx+0x30]
   140010d40:	lea    rcx,[rsp+0x28]
   140010d45:	call   0x140004870
   140010d4a:	and    DWORD PTR [rdi+0x8],0x0
   140010d4e:	lea    rax,[rip+0x3ad93]        # 0x14004bae8
   140010d55:	mov    QWORD PTR [rdi],rax
   140010d58:	mov    QWORD PTR [rbx],rdi
   140010d5b:	lea    rcx,[rsp+0x28]
   140010d60:	call   0x14000493c
   140010d65:	mov    eax,0x4
   140010d6a:	lea    r11,[rsp+0x90]
   140010d72:	mov    rbx,QWORD PTR [r11+0x18]
   140010d76:	mov    rsi,QWORD PTR [r11+0x20]
   140010d7a:	mov    rsp,r11
   140010d7d:	pop    rdi
   140010d7e:	ret    
   140010d7f:	int3   
   140010d80:	mov    rax,rsp
   140010d83:	push   rdi
   140010d84:	push   r12
   140010d86:	push   r13
   140010d88:	push   r14
   140010d8a:	push   r15
   140010d8c:	sub    rsp,0xc0
   140010d93:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140010d9c:	mov    QWORD PTR [rax+0x10],rbx
   140010da0:	mov    QWORD PTR [rax+0x18],rsi
   140010da4:	mov    rax,QWORD PTR [rip+0x602a5]        # 0x140071050
   140010dab:	xor    rax,rsp
   140010dae:	mov    QWORD PTR [rsp+0xb0],rax
   140010db6:	mov    r15b,r8b
   140010db9:	mov    rsi,rcx
   140010dbc:	mov    QWORD PTR [rsp+0x40],rcx
   140010dc1:	call   0x140030490
   140010dc6:	mov    r14,rax
   140010dc9:	lea    rcx,[rsp+0x50]
   140010dce:	call   0x140027ec8
   140010dd3:	movups xmm0,XMMWORD PTR [rax]
   140010dd6:	movups XMMWORD PTR [rsp+0x80],xmm0
   140010dde:	movups xmm1,XMMWORD PTR [rax+0x10]
   140010de2:	movups XMMWORD PTR [rsp+0x90],xmm1
   140010dea:	movsd  xmm0,QWORD PTR [rax+0x20]
   140010def:	movsd  QWORD PTR [rsp+0xa0],xmm0
   140010df8:	mov    ecx,DWORD PTR [rax+0x28]
   140010dfb:	mov    DWORD PTR [rsp+0xa8],ecx
   140010e02:	xor    r12d,r12d
   140010e05:	mov    QWORD PTR [rsi+0x10],r12
   140010e09:	mov    QWORD PTR [rsi+0x20],r12
   140010e0d:	mov    QWORD PTR [rsi+0x28],r12
   140010e11:	test   r15b,r15b
   140010e14:	lea    rdi,[rip+0x50e9a]        # 0x140061cb5
   140010e1b:	jne    0x140010e21
   140010e1d:	mov    rdi,QWORD PTR [r14+0x10]
   140010e21:	lea    rcx,[rsp+0x50]
   140010e26:	call   0x140027ec8
   140010e2b:	or     rbx,0xffffffffffffffff
   140010e2f:	inc    rbx
   140010e32:	cmp    BYTE PTR [rdi+rbx*1],r12b
   140010e36:	jne    0x140010e2f
   140010e38:	mov    r13d,0x1
   140010e3e:	add    rbx,r13
   140010e41:	mov    edx,r13d
   140010e44:	mov    rcx,rbx
   140010e47:	call   0x14002c75c
   140010e4c:	mov    rdx,rax
   140010e4f:	test   rax,rax
   140010e52:	jne    0x140010e59
   140010e54:	call   0x140027a0c
   140010e59:	test   rbx,rbx
   140010e5c:	je     0x140010e71
   140010e5e:	mov    rcx,rdx
   140010e61:	sub    rcx,rdi
   140010e64:	mov    al,BYTE PTR [rdi]
   140010e66:	mov    BYTE PTR [rcx+rdi*1],al
   140010e69:	add    rdi,r13
   140010e6c:	sub    rbx,r13
   140010e6f:	jne    0x140010e64
   140010e71:	mov    QWORD PTR [rsi+0x10],rdx
   140010e75:	lea    r8,[rsp+0x80]
   140010e7d:	xor    edx,edx
   140010e7f:	lea    rcx,[rip+0x50e22]        # 0x140061ca8
   140010e86:	call   0x140004aa4
   140010e8b:	mov    QWORD PTR [rsi+0x20],rax
   140010e8f:	lea    r8,[rsp+0x80]
   140010e97:	xor    edx,edx
   140010e99:	lea    rcx,[rip+0x50e10]        # 0x140061cb0
   140010ea0:	call   0x140004aa4
   140010ea5:	mov    QWORD PTR [rsi+0x28],rax
   140010ea9:	test   r15b,r15b
   140010eac:	je     0x140010f32
   140010eb2:	mov    BYTE PTR [rsp+0x30],0x2e
   140010eb7:	mov    WORD PTR [rsp+0x38],r12w
   140010ebd:	xor    eax,eax
   140010ebf:	mov    QWORD PTR [rsp+0x40],rax
   140010ec4:	lea    rax,[rsp+0x80]
   140010ecc:	mov    QWORD PTR [rsp+0x20],rax
   140010ed1:	lea    r9,[rsp+0x40]
   140010ed6:	mov    r8,r13
   140010ed9:	lea    rdx,[rsp+0x30]
   140010ede:	lea    rcx,[rsp+0x38]
   140010ee3:	call   0x1400270f0
   140010ee8:	movzx  eax,WORD PTR [rsp+0x38]
   140010eed:	mov    WORD PTR [rsi+0x18],ax
   140010ef1:	mov    BYTE PTR [rsp+0x30],0x2c
   140010ef6:	mov    WORD PTR [rsp+0x38],r12w
   140010efc:	xor    eax,eax
   140010efe:	mov    QWORD PTR [rsp+0x40],rax
   140010f03:	lea    rax,[rsp+0x80]
   140010f0b:	mov    QWORD PTR [rsp+0x20],rax
   140010f10:	lea    r9,[rsp+0x40]
   140010f15:	mov    r8,r13
   140010f18:	lea    rdx,[rsp+0x30]
   140010f1d:	lea    rcx,[rsp+0x38]
   140010f22:	call   0x1400270f0
   140010f27:	movzx  eax,WORD PTR [rsp+0x38]
   140010f2c:	mov    WORD PTR [rsi+0x1a],ax
   140010f30:	jmp    0x140010f48
   140010f32:	mov    rax,QWORD PTR [r14+0x58]
   140010f36:	movzx  ecx,WORD PTR [rax]
   140010f39:	mov    WORD PTR [rsi+0x18],cx
   140010f3d:	mov    rax,QWORD PTR [r14+0x60]
   140010f41:	movzx  ecx,WORD PTR [rax]
   140010f44:	mov    WORD PTR [rsi+0x1a],cx
   140010f48:	mov    rcx,QWORD PTR [rsp+0xb0]
   140010f50:	xor    rcx,rsp
   140010f53:	call   0x140025df0
   140010f58:	lea    r11,[rsp+0xc0]
   140010f60:	mov    rbx,QWORD PTR [r11+0x38]
   140010f64:	mov    rsi,QWORD PTR [r11+0x40]
   140010f68:	mov    rsp,r11
   140010f6b:	pop    r15
   140010f6d:	pop    r14
   140010f6f:	pop    r13
   140010f71:	pop    r12
   140010f73:	pop    rdi
   140010f74:	ret    
   140010f75:	int3   
   140010f76:	int3   
   140010f77:	int3   
   140010f78:	rex push rbx
   140010f7a:	sub    rsp,0x30
   140010f7e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010f87:	mov    rbx,rcx
   140010f8a:	mov    rcx,QWORD PTR [rcx+0x10]
   140010f8e:	call   0x1400263fc
   140010f93:	nop
   140010f94:	mov    edx,0x1
   140010f99:	mov    rcx,QWORD PTR [rbx+0x8]
   140010f9d:	call   0x140026804
   140010fa2:	nop
   140010fa3:	add    rsp,0x30
   140010fa7:	pop    rbx
   140010fa8:	ret    
   140010fa9:	int3   
   140010faa:	int3   
   140010fab:	int3   
   140010fac:	sub    rsp,0x28
   140010fb0:	lea    rax,[rip+0x520c1]        # 0x140063078
   140010fb7:	mov    QWORD PTR [rcx],rax
   140010fba:	test   dl,dl
   140010fbc:	je     0x140010fcc
   140010fbe:	mov    edx,0x1
   140010fc3:	lea    r8d,[rdx+0xf]
   140010fc7:	call   0x140004804
   140010fcc:	add    rsp,0x28
   140010fd0:	ret    
   140010fd1:	int3   
   140010fd2:	int3   
   140010fd3:	int3   
   140010fd4:	lea    rax,[rcx+0x8]
   140010fd8:	ret    
   140010fd9:	int3   
   140010fda:	int3   
   140010fdb:	int3   
   140010fdc:	lea    rax,[rip+0x6168d]        # 0x140072670
   140010fe3:	ret    
   140010fe4:	mov    rax,rcx
   140010fe7:	mov    rcx,rdx
   140010fea:	rex.W jmp QWORD PTR [rax+0x8]
   140010fee:	int3   
   140010fef:	int3   
   140010ff0:	test   rdx,rdx
   140010ff3:	je     0x140011007
   140010ff5:	lea    rax,[rip+0x520b4]        # 0x1400630b0
   140010ffc:	mov    QWORD PTR [rdx],rax
   140010fff:	mov    rax,QWORD PTR [rcx+0x8]
   140011003:	mov    QWORD PTR [rdx+0x8],rax
   140011007:	mov    rax,rdx
   14001100a:	ret    
   14001100b:	int3   
   14001100c:	rex push rdi
   14001100e:	sub    rsp,0x30
   140011012:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001101b:	mov    QWORD PTR [rsp+0x40],rbx
   140011020:	mov    rbx,QWORD PTR [rcx]
   140011023:	mov    rax,QWORD PTR [rbx+0x38]
   140011027:	mov    QWORD PTR [rbx+0x40],rax
   14001102b:	mov    rdx,rax
   14001102e:	mov    rcx,rax
   140011031:	call   0x1400263fc
   140011036:	nop
   140011037:	xor    eax,eax
   140011039:	mov    QWORD PTR [rbx+0x38],rax
   14001103d:	mov    QWORD PTR [rbx+0x40],rax
   140011041:	mov    QWORD PTR [rbx+0x48],rax
   140011045:	mov    rbx,QWORD PTR [rsp+0x40]
   14001104a:	add    rsp,0x30
   14001104e:	pop    rdi
   14001104f:	ret    
   140011050:	mov    rax,rsp
   140011053:	push   rdi
   140011054:	sub    rsp,0x30
   140011058:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140011060:	mov    QWORD PTR [rax+0x10],rbx
   140011064:	mov    QWORD PTR [rax+0x18],rsi
   140011068:	mov    rsi,r8
   14001106b:	mov    rdi,rdx
   14001106e:	mov    rbx,rcx
   140011071:	and    DWORD PTR [rcx+0x30],0x0
   140011075:	and    QWORD PTR [rcx+0x38],0x0
   14001107a:	mov    QWORD PTR [rax+0x8],rcx
   14001107e:	mov    rcx,r8
   140011081:	call   0x140011100
   140011086:	mov    rcx,QWORD PTR [rcx]
   140011089:	cmp    BYTE PTR [rcx],0x0
   14001108c:	jne    0x14001109b
   14001108e:	sub    rcx,QWORD PTR [rsi+0x8]
   140011092:	mov    DWORD PTR [rbx+0x30],0x1
   140011099:	jmp    0x1400110ca
   14001109b:	mov    r8,r9
   14001109e:	mov    rdx,rsi
   1400110a1:	mov    rcx,rbx
   1400110a4:	call   0x140011140
   1400110a9:	cmp    DWORD PTR [rbx+0x30],0x0
   1400110ad:	jne    0x1400110ce
   1400110af:	mov    rcx,rsi
   1400110b2:	call   0x140011100
   1400110b7:	mov    rcx,QWORD PTR [rsi]
   1400110ba:	cmp    BYTE PTR [rcx],0x0
   1400110bd:	je     0x1400110ce
   1400110bf:	sub    rcx,QWORD PTR [rsi+0x8]
   1400110c3:	mov    DWORD PTR [rbx+0x30],0x2
   1400110ca:	mov    QWORD PTR [rbx+0x38],rcx
   1400110ce:	movups xmm0,XMMWORD PTR [rbx+0x30]
   1400110d2:	movdqu XMMWORD PTR [rdi],xmm0
   1400110d6:	mov    rax,QWORD PTR [rbx+0x10]
   1400110da:	mov    QWORD PTR [rbx+0x18],rax
   1400110de:	mov    rax,rdi
   1400110e1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400110e6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400110eb:	add    rsp,0x30
   1400110ef:	pop    rdi
   1400110f0:	ret    
   1400110f1:	int3   
   1400110f2:	int3   
   1400110f3:	int3   
   1400110f4:	mov    rdx,QWORD PTR [rcx]
   1400110f7:	mov    rax,QWORD PTR [rdx+0x10]
   1400110fb:	mov    QWORD PTR [rdx+0x18],rax
   1400110ff:	ret    
   140011100:	sub    rsp,0x28
   140011104:	movups xmm0,XMMWORD PTR [rcx]
   140011107:	movdqu XMMWORD PTR [rsp],xmm0
   14001110c:	mov    rdx,QWORD PTR [rsp]
   140011110:	cmp    BYTE PTR [rdx],0x20
   140011113:	ja     0x14001112e
   140011115:	movsx  rax,BYTE PTR [rdx]
   140011119:	movabs r8,0x100002600
   140011123:	bt     r8,rax
   140011127:	jae    0x14001112e
   140011129:	inc    rdx
   14001112c:	jmp    0x140011110
   14001112e:	mov    QWORD PTR [rsp],rdx
   140011132:	movups xmm0,XMMWORD PTR [rsp]
   140011136:	movdqu XMMWORD PTR [rcx],xmm0
   14001113a:	add    rsp,0x28
   14001113e:	ret    
   14001113f:	int3   
   140011140:	sub    rsp,0x28
   140011144:	mov    rax,QWORD PTR [rdx]
   140011147:	mov    r10,rcx
   14001114a:	cmp    BYTE PTR [rax],0x22
   14001114d:	je     0x1400112d4
   140011153:	cmp    BYTE PTR [rax],0x5b
   140011156:	je     0x1400112cb
   14001115c:	cmp    BYTE PTR [rax],0x66
   14001115f:	je     0x140011265
   140011165:	cmp    BYTE PTR [rax],0x6e
   140011168:	je     0x1400111f2
   14001116e:	cmp    BYTE PTR [rax],0x74
   140011171:	je     0x14001118a
   140011173:	cmp    BYTE PTR [rax],0x7b
   140011176:	je     0x140011181
   140011178:	add    rsp,0x28
   14001117c:	jmp    0x140011678
   140011181:	add    rsp,0x28
   140011185:	jmp    0x140011398
   14001118a:	inc    rax
   14001118d:	mov    QWORD PTR [rdx],rax
   140011190:	mov    cl,BYTE PTR [rax]
   140011192:	lea    r9,[rax+0x1]
   140011196:	mov    QWORD PTR [rdx],r9
   140011199:	cmp    cl,0x72
   14001119c:	jne    0x14001124a
   1400111a2:	mov    al,BYTE PTR [r9]
   1400111a5:	inc    r9
   1400111a8:	mov    QWORD PTR [rdx],r9
   1400111ab:	cmp    al,0x75
   1400111ad:	jne    0x14001124a
   1400111b3:	mov    cl,BYTE PTR [r9]
   1400111b6:	lea    rax,[r9+0x1]
   1400111ba:	mov    QWORD PTR [rdx],rax
   1400111bd:	cmp    cl,0x65
   1400111c0:	jne    0x14001124a
   1400111c6:	lea    rcx,[r8+0x28]
   1400111ca:	call   0x14001205c
   1400111cf:	mov    QWORD PTR [rsp+0x38],rax
   1400111d4:	test   rax,rax
   1400111d7:	je     0x1400112dc
   1400111dd:	xor    ecx,ecx
   1400111df:	mov    QWORD PTR [rax],rcx
   1400111e2:	mov    QWORD PTR [rax+0x8],rcx
   1400111e6:	mov    DWORD PTR [rax+0x10],0x102
   1400111ed:	add    rsp,0x28
   1400111f1:	ret    
   1400111f2:	inc    rax
   1400111f5:	mov    QWORD PTR [rdx],rax
   1400111f8:	mov    cl,BYTE PTR [rax]
   1400111fa:	lea    r9,[rax+0x1]
   1400111fe:	mov    QWORD PTR [rdx],r9
   140011201:	cmp    cl,0x75
   140011204:	jne    0x14001124a
   140011206:	mov    al,BYTE PTR [r9]
   140011209:	inc    r9
   14001120c:	mov    QWORD PTR [rdx],r9
   14001120f:	cmp    al,0x6c
   140011211:	jne    0x14001124a
   140011213:	mov    cl,BYTE PTR [r9]
   140011216:	lea    rax,[r9+0x1]
   14001121a:	mov    QWORD PTR [rdx],rax
   14001121d:	cmp    cl,0x6c
   140011220:	jne    0x14001124a
   140011222:	lea    rcx,[r8+0x28]
   140011226:	call   0x14001205c
   14001122b:	mov    QWORD PTR [rsp+0x38],rax
   140011230:	test   rax,rax
   140011233:	je     0x1400112dc
   140011239:	xor    ecx,ecx
   14001123b:	mov    QWORD PTR [rax],rcx
   14001123e:	mov    QWORD PTR [rax+0x8],rcx
   140011242:	and    DWORD PTR [rax+0x10],ecx
   140011245:	add    rsp,0x28
   140011249:	ret    
   14001124a:	mov    rax,QWORD PTR [rdx]
   14001124d:	sub    rax,QWORD PTR [rdx+0x8]
   140011251:	dec    rax
   140011254:	mov    DWORD PTR [r10+0x30],0x3
   14001125c:	mov    QWORD PTR [r10+0x38],rax
   140011260:	add    rsp,0x28
   140011264:	ret    
   140011265:	inc    rax
   140011268:	mov    QWORD PTR [rdx],rax
   14001126b:	mov    cl,BYTE PTR [rax]
   14001126d:	lea    r9,[rax+0x1]
   140011271:	mov    QWORD PTR [rdx],r9
   140011274:	cmp    cl,0x61
   140011277:	jne    0x14001124a
   140011279:	mov    al,BYTE PTR [r9]
   14001127c:	lea    rcx,[r9+0x1]
   140011280:	mov    QWORD PTR [rdx],rcx
   140011283:	cmp    al,0x6c
   140011285:	jne    0x14001124a
   140011287:	mov    al,BYTE PTR [rcx]
   140011289:	lea    r9,[rcx+0x1]
   14001128d:	mov    QWORD PTR [rdx],r9
   140011290:	cmp    al,0x73
   140011292:	jne    0x14001124a
   140011294:	mov    cl,BYTE PTR [r9]
   140011297:	lea    rax,[r9+0x1]
   14001129b:	mov    QWORD PTR [rdx],rax
   14001129e:	cmp    cl,0x65
   1400112a1:	jne    0x14001124a
   1400112a3:	lea    rcx,[r8+0x28]
   1400112a7:	call   0x14001205c
   1400112ac:	mov    QWORD PTR [rsp+0x38],rax
   1400112b1:	test   rax,rax
   1400112b4:	je     0x1400112dc
   1400112b6:	xor    ecx,ecx
   1400112b8:	mov    QWORD PTR [rax],rcx
   1400112bb:	mov    QWORD PTR [rax+0x8],rcx
   1400112bf:	mov    DWORD PTR [rax+0x10],0x101
   1400112c6:	add    rsp,0x28
   1400112ca:	ret    
   1400112cb:	add    rsp,0x28
   1400112cf:	jmp    0x14001153c
   1400112d4:	xor    r9d,r9d
   1400112d7:	call   0x1400112f0
   1400112dc:	add    rsp,0x28
   1400112e0:	ret    
   1400112e1:	int3   
   1400112e2:	int3   
   1400112e3:	int3   
   1400112e4:	mov    rax,QWORD PTR [rcx+0x10]
   1400112e8:	movups xmm0,XMMWORD PTR [rcx]
   1400112eb:	movdqu XMMWORD PTR [rax],xmm0
   1400112ef:	ret    
   1400112f0:	rex push rbp
   1400112f2:	mov    rbp,rsp
   1400112f5:	sub    rsp,0x50
   1400112f9:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140011301:	mov    QWORD PTR [rsp+0x60],rbx
   140011306:	mov    QWORD PTR [rsp+0x68],rsi
   14001130b:	mov    QWORD PTR [rsp+0x70],rdi
   140011310:	mov    sil,r9b
   140011313:	mov    rdi,r8
   140011316:	mov    rbx,rcx
   140011319:	movups xmm0,XMMWORD PTR [rdx]
   14001131c:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140011321:	mov    QWORD PTR [rbp-0x8],rdx
   140011325:	mov    QWORD PTR [rbp-0x28],rcx
   140011329:	and    DWORD PTR [rbp-0x20],0x0
   14001132d:	lea    r8,[rbp-0x28]
   140011331:	lea    rdx,[rbp-0x18]
   140011335:	call   0x140011db0
   14001133a:	cmp    DWORD PTR [rbx+0x30],0x0
   14001133e:	jne    0x140011374
   140011340:	mov    eax,DWORD PTR [rbp-0x20]
   140011343:	lea    r8d,[rax-0x1]
   140011347:	mov    ecx,eax
   140011349:	mov    rax,QWORD PTR [rbp-0x28]
   14001134d:	sub    QWORD PTR [rax+0x18],rcx
   140011351:	mov    rdx,QWORD PTR [rax+0x18]
   140011355:	mov    rcx,rdi
   140011358:	call   0x140011d04
   14001135d:	test   al,al
   14001135f:	jne    0x140011374
   140011361:	mov    rax,QWORD PTR [rbp-0x18]
   140011365:	sub    rax,QWORD PTR [rbp-0x10]
   140011369:	mov    DWORD PTR [rbx+0x30],0x10
   140011370:	mov    QWORD PTR [rbx+0x38],rax
   140011374:	movups xmm0,XMMWORD PTR [rbp-0x18]
   140011378:	mov    rax,QWORD PTR [rbp-0x8]
   14001137c:	movdqu XMMWORD PTR [rax],xmm0
   140011380:	mov    rbx,QWORD PTR [rsp+0x60]
   140011385:	mov    rsi,QWORD PTR [rsp+0x68]
   14001138a:	mov    rdi,QWORD PTR [rsp+0x70]
   14001138f:	add    rsp,0x50
   140011393:	pop    rbp
   140011394:	ret    
   140011395:	int3   
   140011396:	int3   
   140011397:	int3   
   140011398:	mov    QWORD PTR [rsp+0x8],rbx
   14001139d:	mov    QWORD PTR [rsp+0x18],rbp
   1400113a2:	push   rsi
   1400113a3:	push   rdi
   1400113a4:	push   r14
   1400113a6:	sub    rsp,0x20
   1400113aa:	inc    QWORD PTR [rdx]
   1400113ad:	mov    rdi,rcx
   1400113b0:	lea    rcx,[r8+0x28]
   1400113b4:	mov    rbp,r8
   1400113b7:	mov    rbx,rdx
   1400113ba:	call   0x14001205c
   1400113bf:	mov    QWORD PTR [rsp+0x48],rax
   1400113c4:	test   rax,rax
   1400113c7:	je     0x1400113d9
   1400113c9:	xor    ecx,ecx
   1400113cb:	mov    QWORD PTR [rax],rcx
   1400113ce:	mov    QWORD PTR [rax+0x8],rcx
   1400113d2:	mov    DWORD PTR [rax+0x10],0x3
   1400113d9:	mov    rcx,rbx
   1400113dc:	call   0x140011100
   1400113e1:	mov    rax,QWORD PTR [rbx]
   1400113e4:	cmp    BYTE PTR [rax],0x7d
   1400113e7:	jne    0x14001140c
   1400113e9:	inc    rax
   1400113ec:	mov    QWORD PTR [rbx],rax
   1400113ef:	mov    rax,QWORD PTR [rbp+0x40]
   1400113f3:	and    QWORD PTR [rax-0x18],0x0
   1400113f8:	and    DWORD PTR [rax-0xc],0x0
   1400113fc:	and    DWORD PTR [rax-0x10],0x0
   140011400:	mov    DWORD PTR [rax-0x8],0x3
   140011407:	jmp    0x140011529
   14001140c:	xor    esi,esi
   14001140e:	mov    rax,QWORD PTR [rbx]
   140011411:	cmp    BYTE PTR [rax],0x22
   140011414:	je     0x14001142f
   140011416:	sub    rax,QWORD PTR [rbx+0x8]
   14001141a:	mov    QWORD PTR [rdi+0x38],rax
   14001141e:	mov    DWORD PTR [rdi+0x30],0x4
   140011425:	cmp    DWORD PTR [rdi+0x30],0x0
   140011429:	jne    0x140011529
   14001142f:	mov    r9b,0x1
   140011432:	mov    r8,rbp
   140011435:	mov    rdx,rbx
   140011438:	mov    rcx,rdi
   14001143b:	call   0x1400112f0
   140011440:	cmp    DWORD PTR [rdi+0x30],0x0
   140011444:	jne    0x140011529
   14001144a:	mov    rcx,rbx
   14001144d:	call   0x140011100
   140011452:	mov    rcx,QWORD PTR [rbx]
   140011455:	mov    al,BYTE PTR [rcx]
   140011457:	inc    rcx
   14001145a:	mov    QWORD PTR [rbx],rcx
   14001145d:	cmp    al,0x3a
   14001145f:	je     0x14001147a
   140011461:	sub    rcx,QWORD PTR [rbx+0x8]
   140011465:	mov    QWORD PTR [rdi+0x38],rcx
   140011469:	mov    DWORD PTR [rdi+0x30],0x5
   140011470:	cmp    DWORD PTR [rdi+0x30],0x0
   140011474:	jne    0x140011529
   14001147a:	mov    rcx,rbx
   14001147d:	call   0x140011100
   140011482:	mov    r8,rbp
   140011485:	mov    rdx,rbx
   140011488:	mov    rcx,rdi
   14001148b:	call   0x140011140
   140011490:	cmp    DWORD PTR [rdi+0x30],0x0
   140011494:	jne    0x140011529
   14001149a:	mov    rcx,rbx
   14001149d:	call   0x140011100
   1400114a2:	mov    rax,QWORD PTR [rbx]
   1400114a5:	inc    esi
   1400114a7:	mov    cl,BYTE PTR [rax]
   1400114a9:	inc    rax
   1400114ac:	mov    QWORD PTR [rbx],rax
   1400114af:	cmp    cl,0x2c
   1400114b2:	je     0x1400114d3
   1400114b4:	cmp    cl,0x7d
   1400114b7:	je     0x1400114e0
   1400114b9:	sub    rax,QWORD PTR [rbx+0x8]
   1400114bd:	mov    QWORD PTR [rdi+0x38],rax
   1400114c1:	mov    DWORD PTR [rdi+0x30],0x6
   1400114c8:	cmp    DWORD PTR [rdi+0x30],0x0
   1400114cc:	jne    0x140011529
   1400114ce:	jmp    0x14001140e
   1400114d3:	mov    rcx,rbx
   1400114d6:	call   0x140011100
   1400114db:	jmp    0x14001140e
   1400114e0:	lea    rdi,[rsi+rsi*2]
   1400114e4:	shl    rdi,0x4
   1400114e8:	sub    QWORD PTR [rbp+0x40],rdi
   1400114ec:	mov    r14,QWORD PTR [rbp+0x40]
   1400114f0:	mov    rcx,QWORD PTR [rbp+0x18]
   1400114f4:	mov    rbx,r14
   1400114f7:	mov    DWORD PTR [rbx-0x8],0x3
   1400114fe:	test   esi,esi
   140011500:	je     0x14001151e
   140011502:	mov    rdx,rdi
   140011505:	call   0x14000c0e8
   14001150a:	mov    r8,rdi
   14001150d:	mov    QWORD PTR [rbx-0x18],rax
   140011511:	mov    rdx,r14
   140011514:	mov    rcx,rax
   140011517:	call   0x140028fd0
   14001151c:	jmp    0x140011523
   14001151e:	and    QWORD PTR [rbx-0x18],0x0
   140011523:	mov    DWORD PTR [rbx-0xc],esi
   140011526:	mov    DWORD PTR [rbx-0x10],esi
   140011529:	mov    rbx,QWORD PTR [rsp+0x40]
   14001152e:	mov    rbp,QWORD PTR [rsp+0x50]
   140011533:	add    rsp,0x20
   140011537:	pop    r14
   140011539:	pop    rdi
   14001153a:	pop    rsi
   14001153b:	ret    
   14001153c:	mov    QWORD PTR [rsp+0x8],rbx
   140011541:	mov    QWORD PTR [rsp+0x18],rbp
   140011546:	push   rsi
   140011547:	push   rdi
   140011548:	push   r14
   14001154a:	sub    rsp,0x20
   14001154e:	inc    QWORD PTR [rdx]
   140011551:	mov    rsi,rcx
   140011554:	lea    rcx,[r8+0x28]
   140011558:	mov    rbp,r8
   14001155b:	mov    rbx,rdx
   14001155e:	call   0x14001205c
   140011563:	mov    QWORD PTR [rsp+0x48],rax
   140011568:	test   rax,rax
   14001156b:	je     0x14001157d
   14001156d:	xor    ecx,ecx
   14001156f:	mov    QWORD PTR [rax],rcx
   140011572:	mov    QWORD PTR [rax+0x8],rcx
   140011576:	mov    DWORD PTR [rax+0x10],0x4
   14001157d:	mov    rcx,rbx
   140011580:	call   0x140011100
   140011585:	mov    rax,QWORD PTR [rbx]
   140011588:	cmp    BYTE PTR [rax],0x5d
   14001158b:	jne    0x1400115b0
   14001158d:	inc    rax
   140011590:	mov    QWORD PTR [rbx],rax
   140011593:	mov    rax,QWORD PTR [rbp+0x40]
   140011597:	and    QWORD PTR [rax-0x18],0x0
   14001159c:	and    DWORD PTR [rax-0xc],0x0
   1400115a0:	and    DWORD PTR [rax-0x10],0x0
   1400115a4:	mov    DWORD PTR [rax-0x8],0x4
   1400115ab:	jmp    0x140011662
   1400115b0:	mov    r8,rbp
   1400115b3:	mov    rdx,rbx
   1400115b6:	mov    rcx,rsi
   1400115b9:	xor    edi,edi
   1400115bb:	call   0x140011140
   1400115c0:	cmp    DWORD PTR [rsi+0x30],edi
   1400115c3:	jne    0x140011662
   1400115c9:	mov    rcx,rbx
   1400115cc:	inc    edi
   1400115ce:	call   0x140011100
   1400115d3:	mov    rcx,QWORD PTR [rbx]
   1400115d6:	mov    al,BYTE PTR [rcx]
   1400115d8:	inc    rcx
   1400115db:	mov    QWORD PTR [rbx],rcx
   1400115de:	cmp    al,0x2c
   1400115e0:	je     0x1400115fd
   1400115e2:	cmp    al,0x5d
   1400115e4:	je     0x140011619
   1400115e6:	sub    rcx,QWORD PTR [rbx+0x8]
   1400115ea:	mov    QWORD PTR [rsi+0x38],rcx
   1400115ee:	mov    DWORD PTR [rsi+0x30],0x7
   1400115f5:	cmp    DWORD PTR [rsi+0x30],0x0
   1400115f9:	jne    0x140011662
   1400115fb:	jmp    0x140011605
   1400115fd:	mov    rcx,rbx
   140011600:	call   0x140011100
   140011605:	mov    r8,rbp
   140011608:	mov    rdx,rbx
   14001160b:	mov    rcx,rsi
   14001160e:	call   0x140011140
   140011613:	cmp    DWORD PTR [rsi+0x30],0x0
   140011617:	jmp    0x1400115c3
   140011619:	lea    rsi,[rdi+rdi*2]
   14001161d:	shl    rsi,0x3
   140011621:	sub    QWORD PTR [rbp+0x40],rsi
   140011625:	mov    r14,QWORD PTR [rbp+0x40]
   140011629:	mov    rcx,QWORD PTR [rbp+0x18]
   14001162d:	mov    rbx,r14
   140011630:	mov    DWORD PTR [rbx-0x8],0x4
   140011637:	test   edi,edi
   140011639:	je     0x140011657
   14001163b:	mov    rdx,rsi
   14001163e:	call   0x14000c0e8
   140011643:	mov    r8,rsi
   140011646:	mov    QWORD PTR [rbx-0x18],rax
   14001164a:	mov    rdx,r14
   14001164d:	mov    rcx,rax
   140011650:	call   0x140028fd0
   140011655:	jmp    0x14001165c
   140011657:	and    QWORD PTR [rbx-0x18],0x0
   14001165c:	mov    DWORD PTR [rbx-0xc],edi
   14001165f:	mov    DWORD PTR [rbx-0x10],edi
   140011662:	mov    rbx,QWORD PTR [rsp+0x40]
   140011667:	mov    rbp,QWORD PTR [rsp+0x50]
   14001166c:	add    rsp,0x20
   140011670:	pop    r14
   140011672:	pop    rdi
   140011673:	pop    rsi
   140011674:	ret    
   140011675:	int3   
   140011676:	int3   
   140011677:	int3   
   140011678:	mov    rax,rsp
   14001167b:	push   rbp
   14001167c:	push   rdi
   14001167d:	push   r13
   14001167f:	push   r14
   140011681:	push   r15
   140011683:	mov    rbp,rsp
   140011686:	sub    rsp,0x50
   14001168a:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140011692:	mov    QWORD PTR [rax+0x8],rbx
   140011696:	mov    QWORD PTR [rax+0x18],rsi
   14001169a:	movaps XMMWORD PTR [rax-0x38],xmm6
   14001169e:	mov    r13,r8
   1400116a1:	mov    r14,rdx
   1400116a4:	mov    r11,rcx
   1400116a7:	movups xmm0,XMMWORD PTR [rdx]
   1400116aa:	movups XMMWORD PTR [rbp-0x28],xmm0
   1400116ae:	mov    QWORD PTR [rbp-0x18],rdx
   1400116b2:	xor    r15b,r15b
   1400116b5:	movq   r9,xmm0
   1400116ba:	mov    QWORD PTR [rbp-0x28],r9
   1400116be:	mov    esi,0x1
   1400116c3:	cmp    BYTE PTR [r9],0x2d
   1400116c7:	jne    0x1400116d3
   1400116c9:	mov    r15b,sil
   1400116cc:	add    r9,rsi
   1400116cf:	mov    QWORD PTR [rbp-0x28],r9
   1400116d3:	xor    edi,edi
   1400116d5:	xor    ebx,ebx
   1400116d7:	xor    r8b,r8b
   1400116da:	mov    BYTE PTR [rbp+0x38],r8b
   1400116de:	xor    edx,edx
   1400116e0:	mov    al,BYTE PTR [r9]
   1400116e3:	cmp    al,0x30
   1400116e5:	jne    0x1400116f3
   1400116e7:	add    r9,rsi
   1400116ea:	mov    QWORD PTR [rbp-0x28],r9
   1400116ee:	jmp    0x1400117ad
   1400116f3:	cmp    al,0x31
   1400116f5:	jl     0x140011792
   1400116fb:	cmp    al,0x39
   1400116fd:	jg     0x140011792
   140011703:	add    r9,rsi
   140011706:	mov    QWORD PTR [rbp-0x28],r9
   14001170a:	movsx  edi,al
   14001170d:	sub    edi,0x30
   140011710:	mov    al,BYTE PTR [r9]
   140011713:	test   r15b,r15b
   140011716:	je     0x140011750
   140011718:	cmp    al,0x30
   14001171a:	jl     0x1400117ad
   140011720:	cmp    al,0x39
   140011722:	jg     0x1400117ad
   140011728:	cmp    edi,0xccccccc
   14001172e:	jb     0x140011736
   140011730:	jne    0x140011787
   140011732:	cmp    al,0x38
   140011734:	jg     0x140011787
   140011736:	add    r9,rsi
   140011739:	mov    QWORD PTR [rbp-0x28],r9
   14001173d:	lea    ecx,[rdi+rdi*4]
   140011740:	movsx  eax,al
   140011743:	lea    edi,[rcx-0x18]
   140011746:	lea    edi,[rax+rdi*2]
   140011749:	add    edx,esi
   14001174b:	mov    al,BYTE PTR [r9]
   14001174e:	jmp    0x140011718
   140011750:	cmp    al,0x30
   140011752:	jl     0x1400117ad
   140011754:	mov    r10d,0x19999999
   14001175a:	cmp    al,0x39
   14001175c:	jg     0x1400117ad
   14001175e:	cmp    edi,r10d
   140011761:	jb     0x140011769
   140011763:	jne    0x140011787
   140011765:	cmp    al,0x35
   140011767:	jg     0x140011787
   140011769:	add    r9,rsi
   14001176c:	mov    QWORD PTR [rbp-0x28],r9
   140011770:	lea    ecx,[rdi+rdi*4]
   140011773:	movsx  eax,al
   140011776:	lea    edi,[rcx-0x18]
   140011779:	lea    edi,[rax+rdi*2]
   14001177c:	add    edx,esi
   14001177e:	mov    al,BYTE PTR [r9]
   140011781:	cmp    al,0x30
   140011783:	jl     0x1400117ad
   140011785:	jmp    0x14001175a
   140011787:	mov    ebx,edi
   140011789:	mov    r8b,sil
   14001178c:	mov    BYTE PTR [rbp+0x38],sil
   140011790:	jmp    0x1400117ad
   140011792:	mov    rax,r9
   140011795:	sub    rax,QWORD PTR [rbp-0x20]
   140011799:	mov    DWORD PTR [rcx+0x30],0x3
   1400117a0:	mov    QWORD PTR [rcx+0x38],rax
   1400117a4:	cmp    DWORD PTR [rcx+0x30],edx
   1400117a7:	jne    0x140011cdc
   1400117ad:	xor    r10b,r10b
   1400117b0:	xorps  xmm6,xmm6
   1400117b3:	movsd  xmm2,QWORD PTR [rip+0x52d2d]        # 0x1400644e8
   1400117bb:	test   r8b,r8b
   1400117be:	je     0x14001185e
   1400117c4:	mov    al,BYTE PTR [r9]
   1400117c7:	test   r15b,r15b
   1400117ca:	je     0x14001180d
   1400117cc:	cmp    al,0x30
   1400117ce:	jl     0x14001185e
   1400117d4:	movabs rcx,0xccccccccccccccc
   1400117de:	cmp    al,0x39
   1400117e0:	jg     0x14001185e
   1400117e2:	cmp    rbx,rcx
   1400117e5:	jb     0x1400117ed
   1400117e7:	jne    0x14001184a
   1400117e9:	cmp    al,0x38
   1400117eb:	jg     0x14001184a
   1400117ed:	add    r9,rsi
   1400117f0:	mov    QWORD PTR [rbp-0x28],r9
   1400117f4:	movsx  rcx,al
   1400117f8:	sub    rcx,0x30
   1400117fc:	mov    ecx,ecx
   1400117fe:	lea    rax,[rbx+rbx*4]
   140011802:	lea    rbx,[rcx+rax*2]
   140011806:	add    edx,esi
   140011808:	mov    al,BYTE PTR [r9]
   14001180b:	jmp    0x1400117cc
   14001180d:	cmp    al,0x30
   14001180f:	jl     0x14001185e
   140011811:	movabs rcx,0x1999999999999999
   14001181b:	cmp    al,0x39
   14001181d:	jg     0x14001185e
   14001181f:	cmp    rbx,rcx
   140011822:	jb     0x14001182a
   140011824:	jne    0x14001184a
   140011826:	cmp    al,0x35
   140011828:	jg     0x14001184a
   14001182a:	add    r9,rsi
   14001182d:	mov    QWORD PTR [rbp-0x28],r9
   140011831:	movsx  rcx,al
   140011835:	sub    rcx,0x30
   140011839:	mov    ecx,ecx
   14001183b:	lea    rax,[rbx+rbx*4]
   14001183f:	lea    rbx,[rcx+rax*2]
   140011843:	add    edx,esi
   140011845:	mov    al,BYTE PTR [r9]
   140011848:	jmp    0x14001180d
   14001184a:	xorps  xmm6,xmm6
   14001184d:	test   rbx,rbx
   140011850:	cvtsi2sd xmm6,rbx
   140011855:	jns    0x14001185b
   140011857:	addsd  xmm6,xmm2
   14001185b:	mov    r10b,sil
   14001185e:	movsd  xmm1,QWORD PTR [rip+0x52c6a]        # 0x1400644d0
   140011866:	test   r10b,r10b
   140011869:	je     0x1400118ca
   14001186b:	mov    al,BYTE PTR [r9]
   14001186e:	cmp    al,0x30
   140011870:	jl     0x1400118ca
   140011872:	mov    rcx,QWORD PTR [rbp-0x20]
   140011876:	neg    rcx
   140011879:	cmp    al,0x39
   14001187b:	jg     0x1400118ca
   14001187d:	comisd xmm6,QWORD PTR [rip+0x52c6b]        # 0x1400644f0
   140011885:	jb     0x1400118a2
   140011887:	mov    DWORD PTR [r11+0x30],0xd
   14001188f:	lea    rax,[r9+rcx*1]
   140011893:	mov    QWORD PTR [r11+0x38],rax
   140011897:	cmp    DWORD PTR [r11+0x30],0x0
   14001189c:	jne    0x140011cdc
   1400118a2:	movsx  eax,BYTE PTR [r9]
   1400118a6:	add    r9,rsi
   1400118a9:	mov    QWORD PTR [rbp-0x28],r9
   1400118ad:	sub    eax,0x30
   1400118b0:	movd   xmm0,eax
   1400118b4:	cvtdq2pd xmm0,xmm0
   1400118b8:	mulsd  xmm6,xmm1
   1400118bc:	addsd  xmm0,xmm6
   1400118c0:	movaps xmm6,xmm0
   1400118c3:	mov    al,BYTE PTR [r9]
   1400118c6:	cmp    al,0x30
   1400118c8:	jge    0x140011879
   1400118ca:	xor    esi,esi
   1400118cc:	cmp    BYTE PTR [r9],0x2e
   1400118d0:	jne    0x1400119b3
   1400118d6:	inc    r9
   1400118d9:	mov    QWORD PTR [rbp-0x28],r9
   1400118dd:	cmp    BYTE PTR [r9],0x30
   1400118e1:	jl     0x1400118e9
   1400118e3:	cmp    BYTE PTR [r9],0x39
   1400118e7:	jle    0x140011906
   1400118e9:	mov    rax,r9
   1400118ec:	sub    rax,QWORD PTR [rbp-0x20]
   1400118f0:	mov    DWORD PTR [r11+0x30],0xe
   1400118f8:	mov    QWORD PTR [r11+0x38],rax
   1400118fc:	cmp    DWORD PTR [r11+0x30],esi
   140011900:	jne    0x140011cdc
   140011906:	test   r10b,r10b
   140011909:	jne    0x1400119ac
   14001190f:	mov    eax,edi
   140011911:	test   r8b,r8b
   140011914:	cmovne rax,rbx
   140011918:	mov    rbx,rax
   14001191b:	jmp    0x140011957
   14001191d:	cmp    cl,0x39
   140011920:	jg     0x14001195f
   140011922:	movabs rax,0x1fffffffffffff
   14001192c:	cmp    rbx,rax
   14001192f:	ja     0x14001195f
   140011931:	inc    r9
   140011934:	mov    QWORD PTR [rbp-0x28],r9
   140011938:	movsx  rcx,cl
   14001193c:	sub    rcx,0x30
   140011940:	mov    ecx,ecx
   140011942:	lea    rax,[rbx+rbx*4]
   140011946:	lea    rbx,[rcx+rax*2]
   14001194a:	dec    esi
   14001194c:	lea    eax,[rdx+0x1]
   14001194f:	test   rbx,rbx
   140011952:	cmove  eax,edx
   140011955:	mov    edx,eax
   140011957:	mov    cl,BYTE PTR [r9]
   14001195a:	cmp    cl,0x30
   14001195d:	jge    0x14001191d
   14001195f:	xorps  xmm6,xmm6
   140011962:	cvtsi2sd xmm6,rbx
   140011967:	test   rbx,rbx
   14001196a:	jns    0x140011970
   14001196c:	addsd  xmm6,xmm2
   140011970:	mov    r10b,0x1
   140011973:	jmp    0x1400119ac
   140011975:	cmp    al,0x39
   140011977:	jg     0x1400119b3
   140011979:	inc    r9
   14001197c:	mov    QWORD PTR [rbp-0x28],r9
   140011980:	cmp    edx,0x11
   140011983:	jge    0x1400119ac
   140011985:	movsx  eax,al
   140011988:	sub    eax,0x30
   14001198b:	movd   xmm0,eax
   14001198f:	cvtdq2pd xmm0,xmm0
   140011993:	mulsd  xmm6,xmm1
   140011997:	addsd  xmm0,xmm6
   14001199b:	movaps xmm6,xmm0
   14001199e:	dec    esi
   1400119a0:	comisd xmm0,QWORD PTR [rip+0x52b18]        # 0x1400644c0
   1400119a8:	jbe    0x1400119ac
   1400119aa:	inc    edx
   1400119ac:	mov    al,BYTE PTR [r9]
   1400119af:	cmp    al,0x30
   1400119b1:	jge    0x140011975
   1400119b3:	xor    ecx,ecx
   1400119b5:	cmp    BYTE PTR [r9],0x65
   1400119b9:	je     0x1400119c5
   1400119bb:	cmp    BYTE PTR [r9],0x45
   1400119bf:	jne    0x140011ae7
   1400119c5:	test   r10b,r10b
   1400119c8:	jne    0x1400119e7
   1400119ca:	mov    eax,edi
   1400119cc:	test   r8b,r8b
   1400119cf:	cmovne rax,rbx
   1400119d3:	xorps  xmm6,xmm6
   1400119d6:	cvtsi2sd xmm6,rax
   1400119db:	test   rax,rax
   1400119de:	jns    0x1400119e4
   1400119e0:	addsd  xmm6,xmm2
   1400119e4:	mov    r10b,0x1
   1400119e7:	inc    r9
   1400119ea:	mov    QWORD PTR [rbp-0x28],r9
   1400119ee:	xor    dl,dl
   1400119f0:	cmp    BYTE PTR [r9],0x2b
   1400119f4:	je     0x1400119fe
   1400119f6:	cmp    BYTE PTR [r9],0x2d
   1400119fa:	jne    0x140011a05
   1400119fc:	mov    dl,0x1
   1400119fe:	inc    r9
   140011a01:	mov    QWORD PTR [rbp-0x28],r9
   140011a05:	mov    al,BYTE PTR [r9]
   140011a08:	cmp    al,0x30
   140011a0a:	jl     0x140011ac1
   140011a10:	cmp    al,0x39
   140011a12:	jg     0x140011ac1
   140011a18:	inc    r9
   140011a1b:	mov    QWORD PTR [rbp-0x28],r9
   140011a1f:	movsx  ecx,al
   140011a22:	sub    ecx,0x30
   140011a25:	mov    al,BYTE PTR [r9]
   140011a28:	test   dl,dl
   140011a2a:	je     0x140011a6e
   140011a2c:	jmp    0x140011a68
   140011a2e:	cmp    al,0x39
   140011a30:	jg     0x140011adb
   140011a36:	inc    r9
   140011a39:	mov    QWORD PTR [rbp-0x28],r9
   140011a3d:	lea    ecx,[rcx+rcx*4]
   140011a40:	movsx  eax,al
   140011a43:	lea    ecx,[rcx-0x18]
   140011a46:	lea    ecx,[rax+rcx*2]
   140011a49:	cmp    ecx,0xccccccc
   140011a4f:	jl     0x140011a65
   140011a51:	jmp    0x140011a5e
   140011a53:	cmp    al,0x39
   140011a55:	jg     0x140011a65
   140011a57:	inc    r9
   140011a5a:	mov    QWORD PTR [rbp-0x28],r9
   140011a5e:	mov    al,BYTE PTR [r9]
   140011a61:	cmp    al,0x30
   140011a63:	jge    0x140011a53
   140011a65:	mov    al,BYTE PTR [r9]
   140011a68:	cmp    al,0x30
   140011a6a:	jge    0x140011a2e
   140011a6c:	jmp    0x140011adb
   140011a6e:	mov    r8d,0x134
   140011a74:	sub    r8d,esi
   140011a77:	cmp    al,0x30
   140011a79:	jl     0x140011ae3
   140011a7b:	mov    rdx,r9
   140011a7e:	sub    rdx,QWORD PTR [rbp-0x20]
   140011a82:	cmp    al,0x39
   140011a84:	jg     0x140011ae3
   140011a86:	inc    r9
   140011a89:	mov    QWORD PTR [rbp-0x28],r9
   140011a8d:	inc    rdx
   140011a90:	lea    ecx,[rcx+rcx*4]
   140011a93:	movsx  eax,al
   140011a96:	lea    ecx,[rcx-0x18]
   140011a99:	lea    ecx,[rax+rcx*2]
   140011a9c:	cmp    ecx,r8d
   140011a9f:	jle    0x140011ab8
   140011aa1:	mov    DWORD PTR [r11+0x30],0xd
   140011aa9:	mov    QWORD PTR [r11+0x38],rdx
   140011aad:	cmp    DWORD PTR [r11+0x30],0x0
   140011ab2:	jne    0x140011cdc
   140011ab8:	mov    al,BYTE PTR [r9]
   140011abb:	cmp    al,0x30
   140011abd:	jl     0x140011ae3
   140011abf:	jmp    0x140011a82
   140011ac1:	sub    r9,QWORD PTR [rbp-0x20]
   140011ac5:	mov    DWORD PTR [r11+0x30],0xf
   140011acd:	mov    QWORD PTR [r11+0x38],r9
   140011ad1:	cmp    DWORD PTR [r11+0x30],ecx
   140011ad5:	jne    0x140011cdc
   140011adb:	test   dl,dl
   140011add:	je     0x140011ae7
   140011adf:	neg    ecx
   140011ae1:	jmp    0x140011ae7
   140011ae3:	mov    r8b,BYTE PTR [rbp+0x38]
   140011ae7:	test   r10b,r10b
   140011aea:	je     0x140011b84
   140011af0:	lea    eax,[rcx+rsi*1]
   140011af3:	mov    ecx,0xfffffecc
   140011af8:	cmp    eax,ecx
   140011afa:	jge    0x140011b26
   140011afc:	divsd  xmm6,QWORD PTR [rip+0x529f4]        # 0x1400644f8
   140011b04:	add    eax,0x134
   140011b09:	cmp    eax,ecx
   140011b0b:	jge    0x140011b12
   140011b0d:	xorps  xmm6,xmm6
   140011b10:	jmp    0x140011b4c
   140011b12:	lea    rcx,[rip+0x51887]        # 0x1400633a0
   140011b19:	test   eax,eax
   140011b1b:	cdqe   
   140011b1d:	js     0x140011b41
   140011b1f:	mulsd  xmm6,QWORD PTR [rcx+rax*8]
   140011b24:	jmp    0x140011b4c
   140011b26:	lea    rcx,[rip+0x51873]        # 0x1400633a0
   140011b2d:	test   eax,eax
   140011b2f:	cdqe   
   140011b31:	js     0x140011b41
   140011b33:	movsd  xmm0,QWORD PTR [rcx+rax*8]
   140011b38:	mulsd  xmm0,xmm6
   140011b3c:	movaps xmm6,xmm0
   140011b3f:	jmp    0x140011b4c
   140011b41:	shl    rax,0x3
   140011b45:	sub    rcx,rax
   140011b48:	divsd  xmm6,QWORD PTR [rcx]
   140011b4c:	test   r15b,r15b
   140011b4f:	je     0x140011b58
   140011b51:	xorps  xmm6,XMMWORD PTR [rip+0x529b8]        # 0x140064510
   140011b58:	lea    rcx,[r13+0x28]
   140011b5c:	call   0x14001205c
   140011b61:	mov    QWORD PTR [rbp+0x38],rax
   140011b65:	test   rax,rax
   140011b68:	je     0x140011cdc
   140011b6e:	xor    ecx,ecx
   140011b70:	mov    QWORD PTR [rax+0x8],rcx
   140011b74:	mov    DWORD PTR [rax+0x10],0x4206
   140011b7b:	movsd  QWORD PTR [rax],xmm6
   140011b7f:	jmp    0x140011cdc
   140011b84:	lea    rcx,[r13+0x28]
   140011b88:	test   r8b,r8b
   140011b8b:	je     0x140011c76
   140011b91:	test   r15b,r15b
   140011b94:	je     0x140011c1f
   140011b9a:	not    rbx
   140011b9d:	inc    rbx
   140011ba0:	call   0x14001205c
   140011ba5:	mov    rcx,rax
   140011ba8:	mov    QWORD PTR [rbp+0x38],rax
   140011bac:	test   rax,rax
   140011baf:	je     0x140011cdc
   140011bb5:	xor    eax,eax
   140011bb7:	mov    QWORD PTR [rcx+0x8],rax
   140011bbb:	mov    DWORD PTR [rcx+0x10],0x1206
   140011bc2:	mov    QWORD PTR [rcx],rbx
   140011bc5:	test   rbx,rbx
   140011bc8:	js     0x140011c06
   140011bca:	mov    edx,0x3206
   140011bcf:	mov    DWORD PTR [rcx+0x10],edx
   140011bd2:	movabs rdx,0xffffffff00000000
   140011bdc:	test   rdx,rbx
   140011bdf:	mov    eax,DWORD PTR [rcx+0x10]
   140011be2:	mov    r8d,0x3a06
   140011be8:	cmove  eax,r8d
   140011bec:	mov    DWORD PTR [rcx+0x10],eax
   140011bef:	test   rbx,0xffffffff80000000
   140011bf6:	jne    0x140011cdc
   140011bfc:	bts    DWORD PTR [rcx+0x10],0xa
   140011c01:	jmp    0x140011cdc
   140011c06:	cmp    rbx,0xffffffff80000000
   140011c0d:	jl     0x140011cdc
   140011c13:	mov    DWORD PTR [rcx+0x10],0x1606
   140011c1a:	jmp    0x140011cdc
   140011c1f:	call   0x14001205c
   140011c24:	mov    QWORD PTR [rbp+0x38],rax
   140011c28:	test   rax,rax
   140011c2b:	je     0x140011cdc
   140011c31:	xor    ecx,ecx
   140011c33:	mov    QWORD PTR [rax+0x8],rcx
   140011c37:	mov    DWORD PTR [rax+0x10],0x2206
   140011c3e:	mov    QWORD PTR [rax],rbx
   140011c41:	mov    ecx,DWORD PTR [rax+0x10]
   140011c44:	mov    edx,0x3206
   140011c49:	test   rbx,rbx
   140011c4c:	cmovns ecx,edx
   140011c4f:	mov    DWORD PTR [rax+0x10],ecx
   140011c52:	movabs rdx,0xffffffff00000000
   140011c5c:	test   rdx,rbx
   140011c5f:	jne    0x140011c66
   140011c61:	bts    DWORD PTR [rax+0x10],0xb
   140011c66:	test   rbx,0xffffffff80000000
   140011c6d:	jne    0x140011cdc
   140011c6f:	bts    DWORD PTR [rax+0x10],0xa
   140011c74:	jmp    0x140011cdc
   140011c76:	test   r15b,r15b
   140011c79:	je     0x140011cae
   140011c7b:	not    edi
   140011c7d:	inc    edi
   140011c7f:	call   0x14001205c
   140011c84:	mov    QWORD PTR [rbp+0x38],rax
   140011c88:	test   rax,rax
   140011c8b:	je     0x140011cdc
   140011c8d:	xor    ecx,ecx
   140011c8f:	mov    QWORD PTR [rax+0x8],rcx
   140011c93:	mov    DWORD PTR [rax+0x10],0x1606
   140011c9a:	movsxd rcx,edi
   140011c9d:	mov    QWORD PTR [rax],rcx
   140011ca0:	test   edi,edi
   140011ca2:	js     0x140011cdc
   140011ca4:	mov    ecx,0x3e06
   140011ca9:	mov    DWORD PTR [rax+0x10],ecx
   140011cac:	jmp    0x140011cdc
   140011cae:	call   0x14001205c
   140011cb3:	mov    rdx,rax
   140011cb6:	mov    QWORD PTR [rbp+0x38],rax
   140011cba:	test   rax,rax
   140011cbd:	je     0x140011cdc
   140011cbf:	xor    eax,eax
   140011cc1:	mov    QWORD PTR [rdx+0x8],rax
   140011cc5:	mov    eax,0x3a06
   140011cca:	mov    ecx,edi
   140011ccc:	mov    QWORD PTR [rdx],rcx
   140011ccf:	mov    ecx,0x3e06
   140011cd4:	test   edi,edi
   140011cd6:	cmovns eax,ecx
   140011cd9:	mov    DWORD PTR [rdx+0x10],eax
   140011cdc:	movups xmm0,XMMWORD PTR [rbp-0x28]
   140011ce0:	movdqu XMMWORD PTR [r14],xmm0
   140011ce5:	lea    r11,[rsp+0x50]
   140011cea:	mov    rbx,QWORD PTR [r11+0x30]
   140011cee:	mov    rsi,QWORD PTR [r11+0x40]
   140011cf2:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140011cf7:	mov    rsp,r11
   140011cfa:	pop    r15
   140011cfc:	pop    r14
   140011cfe:	pop    r13
   140011d00:	pop    rdi
   140011d01:	pop    rbp
   140011d02:	ret    
   140011d03:	int3   
   140011d04:	mov    rax,rsp
   140011d07:	push   rdi
   140011d08:	sub    rsp,0x40
   140011d0c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140011d14:	mov    QWORD PTR [rax+0x8],rbx
   140011d18:	mov    QWORD PTR [rax+0x10],rbp
   140011d1c:	mov    QWORD PTR [rax+0x18],rsi
   140011d20:	mov    edi,r8d
   140011d23:	mov    rbp,rdx
   140011d26:	mov    rsi,rcx
   140011d29:	add    rcx,0x28
   140011d2d:	call   0x14001205c
   140011d32:	mov    rbx,rax
   140011d35:	mov    QWORD PTR [rsp+0x28],rax
   140011d3a:	mov    QWORD PTR [rsp+0x30],rax
   140011d3f:	test   rax,rax
   140011d42:	je     0x140011d99
   140011d44:	mov    rcx,QWORD PTR [rsi+0x18]
   140011d48:	xor    eax,eax
   140011d4a:	mov    QWORD PTR [rbx],rax
   140011d4d:	mov    QWORD PTR [rbx+0x8],rax
   140011d51:	and    DWORD PTR [rbx+0x10],eax
   140011d54:	mov    eax,0xf
   140011d59:	cmp    edi,eax
   140011d5b:	ja     0x140011d6f
   140011d5d:	mov    DWORD PTR [rbx+0x10],0x700005
   140011d64:	sub    al,dil
   140011d67:	mov    BYTE PTR [rbx+0xf],al
   140011d6a:	mov    rsi,rbx
   140011d6d:	jmp    0x140011d87
   140011d6f:	mov    DWORD PTR [rbx+0x10],0x300005
   140011d76:	mov    DWORD PTR [rbx+0x8],edi
   140011d79:	lea    edx,[rdi+0x1]
   140011d7c:	call   0x14000c0e8
   140011d81:	mov    rsi,rax
   140011d84:	mov    QWORD PTR [rbx],rax
   140011d87:	mov    r8,rdi
   140011d8a:	mov    rdx,rbp
   140011d8d:	mov    rcx,rsi
   140011d90:	call   0x140028fd0
   140011d95:	mov    BYTE PTR [rdi+rsi*1],0x0
   140011d99:	mov    al,0x1
   140011d9b:	mov    rbx,QWORD PTR [rsp+0x50]
   140011da0:	mov    rbp,QWORD PTR [rsp+0x58]
   140011da5:	mov    rsi,QWORD PTR [rsp+0x60]
   140011daa:	add    rsp,0x40
   140011dae:	pop    rdi
   140011daf:	ret    
   140011db0:	mov    QWORD PTR [rsp+0x8],rbx
   140011db5:	mov    QWORD PTR [rsp+0x10],rbp
   140011dba:	mov    QWORD PTR [rsp+0x18],rsi
   140011dbf:	push   rdi
   140011dc0:	sub    rsp,0x20
   140011dc4:	inc    QWORD PTR [rdx]
   140011dc7:	mov    rbp,r8
   140011dca:	mov    rdi,rdx
   140011dcd:	mov    rsi,rcx
   140011dd0:	mov    rax,QWORD PTR [rdi]
   140011dd3:	mov    dl,BYTE PTR [rax]
   140011dd5:	cmp    dl,0x5c
   140011dd8:	jne    0x140011fed
   140011dde:	inc    rax
   140011de1:	lea    rdx,[rip+0x52038]        # 0x140063e20
   140011de8:	mov    QWORD PTR [rdi],rax
   140011deb:	movzx  r8d,BYTE PTR [rax]
   140011def:	lea    rcx,[rax+0x1]
   140011df3:	mov    QWORD PTR [rdi],rcx
   140011df6:	mov    dl,BYTE PTR [r8+rdx*1]
   140011dfa:	test   dl,dl
   140011dfc:	jne    0x14001202b
   140011e02:	cmp    r8b,0x75
   140011e06:	jne    0x140011fd9
   140011e0c:	xor    ebx,ebx
   140011e0e:	xor    r8d,r8d
   140011e11:	mov    rax,QWORD PTR [rdi]
   140011e14:	shl    ebx,0x4
   140011e17:	movsx  ecx,BYTE PTR [rax]
   140011e1a:	lea    rdx,[rax+0x1]
   140011e1e:	add    ebx,ecx
   140011e20:	mov    QWORD PTR [rdi],rdx
   140011e23:	lea    eax,[rcx-0x30]
   140011e26:	cmp    al,0x9
   140011e28:	ja     0x140011e2f
   140011e2a:	add    ebx,0xffffffd0
   140011e2d:	jmp    0x140011e60
   140011e2f:	lea    eax,[rcx-0x41]
   140011e32:	cmp    al,0x5
   140011e34:	ja     0x140011e3b
   140011e36:	add    ebx,0xffffffc9
   140011e39:	jmp    0x140011e60
   140011e3b:	sub    cl,0x61
   140011e3e:	cmp    cl,0x5
   140011e41:	ja     0x140011e48
   140011e43:	add    ebx,0xffffffa9
   140011e46:	jmp    0x140011e60
   140011e48:	sub    rdx,QWORD PTR [rdi+0x8]
   140011e4c:	dec    rdx
   140011e4f:	mov    DWORD PTR [rsi+0x30],0x8
   140011e56:	mov    QWORD PTR [rsi+0x38],rdx
   140011e5a:	cmp    DWORD PTR [rsi+0x30],0x0
   140011e5e:	jne    0x140011e6b
   140011e60:	inc    r8d
   140011e63:	cmp    r8d,0x4
   140011e67:	jl     0x140011e11
   140011e69:	jmp    0x140011e6d
   140011e6b:	xor    ebx,ebx
   140011e6d:	cmp    DWORD PTR [rsi+0x30],0x0
   140011e71:	jne    0x140012045
   140011e77:	lea    r10d,[rbx-0xd800]
   140011e7e:	cmp    r10d,0x3ff
   140011e85:	ja     0x140011f74
   140011e8b:	mov    rax,QWORD PTR [rdi]
   140011e8e:	mov    cl,BYTE PTR [rax]
   140011e90:	inc    rax
   140011e93:	mov    QWORD PTR [rdi],rax
   140011e96:	cmp    cl,0x5c
   140011e99:	jne    0x140011ea8
   140011e9b:	mov    cl,BYTE PTR [rax]
   140011e9d:	inc    rax
   140011ea0:	mov    QWORD PTR [rdi],rax
   140011ea3:	cmp    cl,0x75
   140011ea6:	je     0x140011ec8
   140011ea8:	mov    rax,QWORD PTR [rdi]
   140011eab:	sub    rax,QWORD PTR [rdi+0x8]
   140011eaf:	sub    rax,0x2
   140011eb3:	mov    DWORD PTR [rsi+0x30],0x9
   140011eba:	mov    QWORD PTR [rsi+0x38],rax
   140011ebe:	cmp    DWORD PTR [rsi+0x30],0x0
   140011ec2:	jne    0x140012045
   140011ec8:	xor    ecx,ecx
   140011eca:	xor    r9d,r9d
   140011ecd:	mov    rax,QWORD PTR [rdi]
   140011ed0:	shl    ecx,0x4
   140011ed3:	movsx  edx,BYTE PTR [rax]
   140011ed6:	lea    r8,[rax+0x1]
   140011eda:	add    ecx,edx
   140011edc:	mov    QWORD PTR [rdi],r8
   140011edf:	lea    eax,[rdx-0x30]
   140011ee2:	cmp    al,0x9
   140011ee4:	ja     0x140011eeb
   140011ee6:	add    ecx,0xffffffd0
   140011ee9:	jmp    0x140011f1c
   140011eeb:	lea    eax,[rdx-0x41]
   140011eee:	cmp    al,0x5
   140011ef0:	ja     0x140011ef7
   140011ef2:	add    ecx,0xffffffc9
   140011ef5:	jmp    0x140011f1c
   140011ef7:	sub    dl,0x61
   140011efa:	cmp    dl,0x5
   140011efd:	ja     0x140011f04
   140011eff:	add    ecx,0xffffffa9
   140011f02:	jmp    0x140011f1c
   140011f04:	sub    r8,QWORD PTR [rdi+0x8]
   140011f08:	dec    r8
   140011f0b:	mov    DWORD PTR [rsi+0x30],0x8
   140011f12:	mov    QWORD PTR [rsi+0x38],r8
   140011f16:	cmp    DWORD PTR [rsi+0x30],0x0
   140011f1a:	jne    0x140011f27
   140011f1c:	inc    r9d
   140011f1f:	cmp    r9d,0x4
   140011f23:	jl     0x140011ecd
   140011f25:	jmp    0x140011f29
   140011f27:	xor    ecx,ecx
   140011f29:	cmp    DWORD PTR [rsi+0x30],0x0
   140011f2d:	jne    0x140012045
   140011f33:	lea    eax,[rcx-0xdc00]
   140011f39:	cmp    eax,0x3ff
   140011f3e:	jbe    0x140011f60
   140011f40:	mov    rax,QWORD PTR [rdi]
   140011f43:	sub    rax,QWORD PTR [rdi+0x8]
   140011f47:	sub    rax,0x2
   140011f4b:	mov    DWORD PTR [rsi+0x30],0x9
   140011f52:	mov    QWORD PTR [rsi+0x38],rax
   140011f56:	cmp    DWORD PTR [rsi+0x30],0x0
   140011f5a:	jne    0x140012045
   140011f60:	mov    ebx,r10d
   140011f63:	lea    eax,[rcx-0xdc00]
   140011f69:	shl    ebx,0xa
   140011f6c:	or     ebx,eax
   140011f6e:	add    ebx,0x10000
   140011f74:	cmp    ebx,0x7f
   140011f77:	jbe    0x140011fd5
   140011f79:	mov    edx,ebx
   140011f7b:	cmp    ebx,0x7ff
   140011f81:	ja     0x140011f8b
   140011f83:	shr    edx,0x6
   140011f86:	or     dl,0xc0
   140011f89:	jmp    0x140011fc7
   140011f8b:	mov    rcx,rbp
   140011f8e:	cmp    ebx,0xffff
   140011f94:	ja     0x140011f9e
   140011f96:	shr    edx,0xc
   140011f99:	or     dl,0xe0
   140011f9c:	jmp    0x140011fb7
   140011f9e:	shr    edx,0x12
   140011fa1:	or     dl,0xf0
   140011fa4:	call   0x140012110
   140011fa9:	mov    edx,ebx
   140011fab:	mov    rcx,rbp
   140011fae:	shr    edx,0xc
   140011fb1:	and    dl,0x3f
   140011fb4:	or     dl,0x80
   140011fb7:	call   0x140012110
   140011fbc:	mov    edx,ebx
   140011fbe:	shr    edx,0x6
   140011fc1:	and    dl,0x3f
   140011fc4:	or     dl,0x80
   140011fc7:	mov    rcx,rbp
   140011fca:	call   0x140012110
   140011fcf:	and    bl,0x3f
   140011fd2:	or     bl,0x80
   140011fd5:	mov    dl,bl
   140011fd7:	jmp    0x14001202b
   140011fd9:	sub    rcx,QWORD PTR [rdi+0x8]
   140011fdd:	dec    rcx
   140011fe0:	mov    DWORD PTR [rsi+0x30],0xa
   140011fe7:	mov    QWORD PTR [rsi+0x38],rcx
   140011feb:	jmp    0x14001201a
   140011fed:	cmp    dl,0x22
   140011ff0:	je     0x140012038
   140011ff2:	test   dl,dl
   140011ff4:	jne    0x140012003
   140011ff6:	sub    rax,QWORD PTR [rdi+0x8]
   140011ffa:	mov    DWORD PTR [rsi+0x30],0xb
   140012001:	jmp    0x140012013
   140012003:	cmp    dl,0x20
   140012006:	jae    0x140012025
   140012008:	sub    rax,QWORD PTR [rdi+0x8]
   14001200c:	mov    DWORD PTR [rsi+0x30],0xa
   140012013:	dec    rax
   140012016:	mov    QWORD PTR [rsi+0x38],rax
   14001201a:	cmp    DWORD PTR [rsi+0x30],0x0
   14001201e:	jne    0x140012045
   140012020:	jmp    0x140011dd0
   140012025:	inc    rax
   140012028:	mov    QWORD PTR [rdi],rax
   14001202b:	mov    rcx,rbp
   14001202e:	call   0x140012110
   140012033:	jmp    0x140011dd0
   140012038:	inc    QWORD PTR [rdi]
   14001203b:	xor    edx,edx
   14001203d:	mov    rcx,rbp
   140012040:	call   0x140012110
   140012045:	mov    rbx,QWORD PTR [rsp+0x30]
   14001204a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001204f:	mov    rsi,QWORD PTR [rsp+0x40]
   140012054:	add    rsp,0x20
   140012058:	pop    rdi
   140012059:	ret    
   14001205a:	int3   
   14001205b:	int3   
   14001205c:	mov    QWORD PTR [rsp+0x8],rbx
   140012061:	mov    QWORD PTR [rsp+0x10],rsi
   140012066:	push   rdi
   140012067:	sub    rsp,0x20
   14001206b:	mov    rsi,rcx
   14001206e:	mov    rcx,QWORD PTR [rcx+0x20]
   140012072:	mov    rax,QWORD PTR [rsi+0x18]
   140012076:	add    rax,0x18
   14001207a:	cmp    rax,rcx
   14001207d:	jb     0x1400120f2
   14001207f:	cmp    QWORD PTR [rsi+0x10],0x0
   140012084:	jne    0x1400120a3
   140012086:	cmp    QWORD PTR [rsi],0x0
   14001208a:	jne    0x14001209d
   14001208c:	mov    ecx,0x1
   140012091:	call   0x140026118
   140012096:	mov    QWORD PTR [rsi],rax
   140012099:	mov    QWORD PTR [rsi+0x8],rax
   14001209d:	mov    rcx,QWORD PTR [rsi+0x28]
   1400120a1:	jmp    0x1400120b1
   1400120a3:	sub    rcx,QWORD PTR [rsi+0x10]
   1400120a7:	lea    rax,[rcx+0x1]
   1400120ab:	shr    rax,1
   1400120ae:	add    rcx,rax
   1400120b1:	mov    rdx,QWORD PTR [rsi+0x10]
   1400120b5:	mov    rbx,QWORD PTR [rsi+0x18]
   1400120b9:	mov    r8,QWORD PTR [rsi+0x20]
   1400120bd:	mov    rdi,rbx
   1400120c0:	sub    rdi,rdx
   1400120c3:	add    rdi,0x18
   1400120c7:	cmp    rcx,rdi
   1400120ca:	cmovae rdi,rcx
   1400120ce:	mov    rcx,QWORD PTR [rsi]
   1400120d1:	mov    r9,rdi
   1400120d4:	sub    r8,rdx
   1400120d7:	sub    rbx,rdx
   1400120da:	call   0x1400257d4
   1400120df:	mov    QWORD PTR [rsi+0x10],rax
   1400120e3:	lea    rcx,[rax+rbx*1]
   1400120e7:	add    rax,rdi
   1400120ea:	mov    QWORD PTR [rsi+0x20],rax
   1400120ee:	mov    QWORD PTR [rsi+0x18],rcx
   1400120f2:	mov    rax,QWORD PTR [rsi+0x18]
   1400120f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400120fb:	lea    rcx,[rax+0x18]
   1400120ff:	mov    QWORD PTR [rsi+0x18],rcx
   140012103:	mov    rsi,QWORD PTR [rsp+0x38]
   140012108:	add    rsp,0x20
   14001210c:	pop    rdi
   14001210d:	ret    
   14001210e:	int3   
   14001210f:	int3   
   140012110:	mov    rax,rsp
   140012113:	mov    QWORD PTR [rax+0x8],rbx
   140012117:	mov    QWORD PTR [rax+0x10],rbp
   14001211b:	mov    QWORD PTR [rax+0x18],rsi
   14001211f:	mov    QWORD PTR [rax+0x20],rdi
   140012123:	push   r14
   140012125:	sub    rsp,0x20
   140012129:	mov    rsi,QWORD PTR [rcx]
   14001212c:	mov    bpl,dl
   14001212f:	mov    r14,rcx
   140012132:	mov    rax,QWORD PTR [rsi+0x18]
   140012136:	mov    r8,QWORD PTR [rsi+0x20]
   14001213a:	inc    rax
   14001213d:	cmp    rax,r8
   140012140:	jb     0x1400121af
   140012142:	cmp    QWORD PTR [rsi+0x10],0x0
   140012147:	jne    0x140012166
   140012149:	cmp    QWORD PTR [rsi],0x0
   14001214d:	jne    0x140012160
   14001214f:	mov    ecx,0x1
   140012154:	call   0x140026118
   140012159:	mov    QWORD PTR [rsi],rax
   14001215c:	mov    QWORD PTR [rsi+0x8],rax
   140012160:	mov    r8,QWORD PTR [rsi+0x28]
   140012164:	jmp    0x140012174
   140012166:	sub    r8,QWORD PTR [rsi+0x10]
   14001216a:	lea    rax,[r8+0x1]
   14001216e:	shr    rax,1
   140012171:	add    r8,rax
   140012174:	mov    rdx,QWORD PTR [rsi+0x10]
   140012178:	mov    rdi,QWORD PTR [rsi+0x18]
   14001217c:	mov    rcx,QWORD PTR [rsi]
   14001217f:	sub    rdi,rdx
   140012182:	lea    rbx,[rdi+0x1]
   140012186:	cmp    r8,rbx
   140012189:	cmovae rbx,r8
   14001218d:	mov    r8,QWORD PTR [rsi+0x20]
   140012191:	sub    r8,rdx
   140012194:	mov    r9,rbx
   140012197:	call   0x1400257d4
   14001219c:	mov    QWORD PTR [rsi+0x10],rax
   1400121a0:	lea    rcx,[rax+rdi*1]
   1400121a4:	add    rax,rbx
   1400121a7:	mov    QWORD PTR [rsi+0x20],rax
   1400121ab:	mov    QWORD PTR [rsi+0x18],rcx
   1400121af:	mov    rcx,QWORD PTR [rsi+0x18]
   1400121b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400121b8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400121bd:	lea    rax,[rcx+0x1]
   1400121c1:	mov    QWORD PTR [rsi+0x18],rax
   1400121c5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400121ca:	mov    BYTE PTR [rcx],bpl
   1400121cd:	inc    DWORD PTR [r14+0x8]
   1400121d1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400121d6:	add    rsp,0x20
   1400121da:	pop    r14
   1400121dc:	ret    
   1400121dd:	int3   
   1400121de:	int3   
   1400121df:	int3   
   1400121e0:	movsxd rax,DWORD PTR [rcx-0x4]
   1400121e4:	sub    rcx,rax
   1400121e7:	jmp    0x14000b3d4
   1400121ec:	movsxd rax,DWORD PTR [rcx-0x4]
   1400121f0:	sub    rcx,rax
   1400121f3:	jmp    0x14000b464
   1400121f8:	movsxd rax,DWORD PTR [rcx-0x4]
   1400121fc:	sub    rcx,rax
   1400121ff:	jmp    0x1400059c0
   140012204:	movsxd rax,DWORD PTR [rcx-0x4]
   140012208:	sub    rcx,rax
   14001220b:	sub    rcx,0x8
   14001220f:	jmp    0x140020c08
   140012214:	mov    QWORD PTR [rsp+0x18],rbx
   140012219:	mov    QWORD PTR [rsp+0x20],rsi
   14001221e:	push   rdi
   14001221f:	sub    rsp,0x320
   140012226:	mov    rax,QWORD PTR [rip+0x5ee23]        # 0x140071050
   14001222d:	xor    rax,rsp
   140012230:	mov    QWORD PTR [rsp+0x310],rax
   140012238:	mov    ebx,edx
   14001223a:	mov    rsi,rcx
   14001223d:	xor    edi,edi
   14001223f:	lea    rcx,[rsp+0x100]
   140012247:	xor    edx,edx
   140012249:	mov    DWORD PTR [rsp+0x30],edi
   14001224d:	mov    r8d,0x20a
   140012253:	call   0x14002a910
   140012258:	lea    rax,[rsp+0x100]
   140012260:	xor    r9d,r9d
   140012263:	xor    r8d,r8d
   140012266:	mov    QWORD PTR [rsp+0x20],rax
   14001226b:	mov    edx,ebx
   14001226d:	xor    ecx,ecx
   14001226f:	call   QWORD PTR [rip+0x39143]        # 0x14004b3b8
   140012275:	test   eax,eax
   140012277:	js     0x1400122e5
   140012279:	mov    QWORD PTR [rsi+0x18],0x7
   140012281:	mov    QWORD PTR [rsi+0x10],rdi
   140012285:	mov    WORD PTR [rsi],di
   140012288:	cmp    WORD PTR [rsp+0x100],di
   140012290:	je     0x1400122aa
   140012292:	lea    rax,[rsp+0x100]
   14001229a:	or     rcx,0xffffffffffffffff
   14001229e:	inc    rcx
   1400122a1:	cmp    WORD PTR [rax+rcx*2],di
   1400122a5:	jne    0x14001229e
   1400122a7:	mov    rdi,rcx
   1400122aa:	mov    r8,rdi
   1400122ad:	lea    rdx,[rsp+0x100]
   1400122b5:	mov    rcx,rsi
   1400122b8:	call   0x14000b730
   1400122bd:	mov    rax,rsi
   1400122c0:	mov    rcx,QWORD PTR [rsp+0x310]
   1400122c8:	xor    rcx,rsp
   1400122cb:	call   0x140025df0
   1400122d0:	lea    r11,[rsp+0x320]
   1400122d8:	mov    rbx,QWORD PTR [r11+0x20]
   1400122dc:	mov    rsi,QWORD PTR [r11+0x28]
   1400122e0:	mov    rsp,r11
   1400122e3:	pop    rdi
   1400122e4:	ret    
   1400122e5:	mov    r9d,0x1a
   1400122eb:	mov    DWORD PTR [rsp+0x20],0x1
   1400122f3:	lea    r8,[rip+0x51c26]        # 0x140063f20
   1400122fa:	mov    edx,eax
   1400122fc:	lea    rcx,[rsp+0x40]
   140012301:	call   0x14001ecc0
   140012306:	lea    rdx,[rip+0x5dafb]        # 0x14006fe08
   14001230d:	lea    rcx,[rsp+0x40]
   140012312:	call   0x14002ab88
   140012317:	int3   
   140012318:	rex push rbx
   14001231a:	sub    rsp,0x60
   14001231e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140012327:	mov    rax,QWORD PTR [rip+0x5ed22]        # 0x140071050
   14001232e:	xor    rax,rsp
   140012331:	mov    QWORD PTR [rsp+0x50],rax
   140012336:	mov    rbx,rcx
   140012339:	and    DWORD PTR [rsp+0x20],0x0
   14001233e:	mov    edx,0x1c
   140012343:	lea    rcx,[rsp+0x30]
   140012348:	call   0x140012214
   14001234d:	nop
   14001234e:	lea    r8,[rip+0x51bfb]        # 0x140063f50
   140012355:	mov    rdx,rax
   140012358:	mov    rcx,rbx
   14001235b:	call   0x14000d824
   140012360:	nop
   140012361:	xor    r8d,r8d
   140012364:	mov    dl,0x1
   140012366:	lea    rcx,[rsp+0x30]
   14001236b:	call   0x14000b6b0
   140012370:	mov    rax,rbx
   140012373:	mov    rcx,QWORD PTR [rsp+0x50]
   140012378:	xor    rcx,rsp
   14001237b:	call   0x140025df0
   140012380:	add    rsp,0x60
   140012384:	pop    rbx
   140012385:	ret    
   140012386:	int3   
   140012387:	int3   
   140012388:	rex push rbx
   14001238a:	sub    rsp,0x60
   14001238e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140012397:	mov    rax,QWORD PTR [rip+0x5ecb2]        # 0x140071050
   14001239e:	xor    rax,rsp
   1400123a1:	mov    QWORD PTR [rsp+0x50],rax
   1400123a6:	mov    rbx,rcx
   1400123a9:	and    DWORD PTR [rsp+0x20],0x0
   1400123ae:	lea    rcx,[rsp+0x30]
   1400123b3:	call   0x140012318
   1400123b8:	nop
   1400123b9:	lea    r8,[rip+0x51be0]        # 0x140063fa0
   1400123c0:	mov    rdx,rax
   1400123c3:	mov    rcx,rbx
   1400123c6:	call   0x14000d824
   1400123cb:	nop
   1400123cc:	xor    r8d,r8d
   1400123cf:	mov    dl,0x1
   1400123d1:	lea    rcx,[rsp+0x30]
   1400123d6:	call   0x14000b6b0
   1400123db:	mov    rax,rbx
   1400123de:	mov    rcx,QWORD PTR [rsp+0x50]
   1400123e3:	xor    rcx,rsp
   1400123e6:	call   0x140025df0
   1400123eb:	add    rsp,0x60
   1400123ef:	pop    rbx
   1400123f0:	ret    
   1400123f1:	int3   
   1400123f2:	int3   
   1400123f3:	int3   
   1400123f4:	mov    rax,rsp
   1400123f7:	push   rbp
   1400123f8:	lea    rbp,[rax-0xc8]
   1400123ff:	sub    rsp,0x1c0
   140012406:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001240f:	mov    QWORD PTR [rax+0x10],rbx
   140012413:	mov    QWORD PTR [rax+0x18],rdi
   140012417:	mov    rax,QWORD PTR [rip+0x5ec32]        # 0x140071050
   14001241e:	xor    rax,rsp
   140012421:	mov    QWORD PTR [rbp+0xb0],rax
   140012428:	mov    rbx,rcx
   14001242b:	xor    edi,edi
   14001242d:	mov    DWORD PTR [rsp+0x30],edi
   140012431:	lea    edx,[rdi+0x2a]
   140012434:	lea    rcx,[rbp-0x30]
   140012438:	call   0x140012214
   14001243d:	nop
   14001243e:	mov    rdx,rax
   140012441:	lea    rcx,[rsp+0x60]
   140012446:	call   0x140024e3c
   14001244b:	nop
   14001244c:	xor    r8d,r8d
   14001244f:	mov    dl,0x1
   140012451:	lea    rcx,[rbp-0x30]
   140012455:	call   0x14000b6b0
   14001245a:	lea    rdx,[rip+0x51b6f]        # 0x140063fd0
   140012461:	lea    rcx,[rsp+0x40]
   140012466:	call   0x140024e94
   14001246b:	nop
   14001246c:	lea    rdx,[rsp+0x40]
   140012471:	lea    rcx,[rsp+0x60]
   140012476:	call   0x140024f74
   14001247b:	nop
   14001247c:	lea    rcx,[rsp+0x40]
   140012481:	call   0x14000a98c
   140012486:	lea    rdx,[rsp+0x60]
   14001248b:	lea    rcx,[rbp-0x80]
   14001248f:	call   0x14002534c
   140012494:	nop
   140012495:	lea    rcx,[rbp-0x80]
   140012499:	call   0x140025678
   14001249e:	test   al,al
   1400124a0:	je     0x1400124cc
   1400124a2:	mov    rdx,rbx
   1400124a5:	lea    rcx,[rsp+0x60]
   1400124aa:	call   0x140025030
   1400124af:	nop
   1400124b0:	lea    rcx,[rbp-0x78]
   1400124b4:	call   0x14000a98c
   1400124b9:	nop
   1400124ba:	lea    rcx,[rsp+0x60]
   1400124bf:	call   0x14000a98c
   1400124c4:	mov    rax,rbx
   1400124c7:	jmp    0x140012629
   1400124cc:	lea    rcx,[rbp-0x78]
   1400124d0:	call   0x14000a98c
   1400124d5:	lea    rcx,[rip+0x51b44]        # 0x140064020
   1400124dc:	call   0x14003096c
   1400124e1:	lea    rcx,[rsp+0x40]
   1400124e6:	test   rax,rax
   1400124e9:	jne    0x140012543
   1400124eb:	mov    QWORD PTR [rsp+0x58],0x7
   1400124f4:	mov    QWORD PTR [rsp+0x50],rdi
   1400124f9:	mov    WORD PTR [rsp+0x40],di
   1400124fe:	lea    r8d,[rax+0x26]
   140012502:	lea    rdx,[rip+0x51b37]        # 0x140064040
   140012509:	call   0x14000b730
   14001250e:	nop
   14001250f:	mov    DWORD PTR [rsp+0x20],0x1
   140012517:	mov    r9d,0x99
   14001251d:	lea    r8,[rip+0x519fc]        # 0x140063f20
   140012524:	lea    rdx,[rsp+0x40]
   140012529:	lea    rcx,[rbp-0x10]
   14001252d:	call   0x140020734
   140012532:	lea    rdx,[rip+0x5da0f]        # 0x14006ff48
   140012539:	lea    rcx,[rbp-0x10]
   14001253d:	call   0x14002ab88
   140012542:	nop
   140012543:	mov    rdx,rax
   140012546:	call   0x140024e94
   14001254b:	nop
   14001254c:	lea    rdx,[rsp+0x40]
   140012551:	lea    rcx,[rsp+0x60]
   140012556:	call   0x140024f30
   14001255b:	nop
   14001255c:	lea    rcx,[rsp+0x40]
   140012561:	call   0x14000a98c
   140012566:	lea    rdx,[rip+0x51a63]        # 0x140063fd0
   14001256d:	lea    rcx,[rsp+0x40]
   140012572:	call   0x140024e94
   140012577:	nop
   140012578:	lea    rdx,[rsp+0x40]
   14001257d:	lea    rcx,[rsp+0x60]
   140012582:	call   0x140024f74
   140012587:	nop
   140012588:	lea    rcx,[rsp+0x40]
   14001258d:	call   0x14000a98c
   140012592:	lea    rdx,[rsp+0x60]
   140012597:	lea    rcx,[rbp-0x80]
   14001259b:	call   0x14002534c
   1400125a0:	nop
   1400125a1:	lea    rcx,[rbp-0x80]
   1400125a5:	call   0x140025678
   1400125aa:	test   al,al
   1400125ac:	je     0x1400125c1
   1400125ae:	mov    rdx,rbx
   1400125b1:	lea    rcx,[rsp+0x60]
   1400125b6:	call   0x140025030
   1400125bb:	nop
   1400125bc:	jmp    0x1400124b0
   1400125c1:	lea    rcx,[rbp-0x78]
   1400125c5:	call   0x14000a98c
   1400125ca:	mov    QWORD PTR [rsp+0x58],0x7
   1400125d3:	mov    QWORD PTR [rsp+0x50],rdi
   1400125d8:	mov    WORD PTR [rsp+0x40],di
   1400125dd:	mov    r8d,0x1b
   1400125e3:	lea    rdx,[rip+0x51aa6]        # 0x140064090
   1400125ea:	lea    rcx,[rsp+0x40]
   1400125ef:	call   0x14000b730
   1400125f4:	nop
   1400125f5:	mov    DWORD PTR [rsp+0x20],0x1
   1400125fd:	mov    r9d,0xa5
   140012603:	lea    r8,[rip+0x51916]        # 0x140063f20
   14001260a:	lea    rdx,[rsp+0x40]
   14001260f:	lea    rcx,[rbp-0x10]
   140012613:	call   0x140020734
   140012618:	lea    rdx,[rip+0x5d929]        # 0x14006ff48
   14001261f:	lea    rcx,[rbp-0x10]
   140012623:	call   0x14002ab88
   140012628:	nop
   140012629:	mov    rcx,QWORD PTR [rbp+0xb0]
   140012630:	xor    rcx,rsp
   140012633:	call   0x140025df0
   140012638:	lea    r11,[rsp+0x1c0]
   140012640:	mov    rbx,QWORD PTR [r11+0x18]
   140012644:	mov    rdi,QWORD PTR [r11+0x20]
   140012648:	mov    rsp,r11
   14001264b:	pop    rbp
   14001264c:	ret    
   14001264d:	int3   
   14001264e:	int3   
   14001264f:	int3   
   140012650:	rex push rbx
   140012652:	sub    rsp,0x20
   140012656:	mov    rbx,rcx
   140012659:	mov    rcx,QWORD PTR [rcx+0x48]
   14001265d:	test   rcx,rcx
   140012660:	je     0x140012683
   140012662:	mov    rdx,QWORD PTR [rbx+0x58]
   140012666:	mov    r8d,0x1
   14001266c:	sub    rdx,rcx
   14001266f:	call   0x140004804
   140012674:	and    QWORD PTR [rbx+0x48],0x0
   140012679:	and    QWORD PTR [rbx+0x50],0x0
   14001267e:	and    QWORD PTR [rbx+0x58],0x0
   140012683:	lea    rcx,[rbx+0x30]
   140012687:	call   0x140012730
   14001268c:	lea    rcx,[rbx+0x10]
   140012690:	xor    r8d,r8d
   140012693:	mov    dl,0x1
   140012695:	add    rsp,0x20
   140012699:	pop    rbx
   14001269a:	jmp    0x14000b6b0
   14001269f:	int3   
   1400126a0:	jmp    0x140012730
   1400126a5:	int3   
   1400126a6:	int3   
   1400126a7:	int3   
   1400126a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400126ad:	push   rdi
   1400126ae:	sub    rsp,0x20
   1400126b2:	mov    rax,QWORD PTR [rcx+0x8]
   1400126b6:	mov    rdi,rdx
   1400126b9:	mov    rbx,rcx
   1400126bc:	cmp    rdx,rax
   1400126bf:	jae    0x1400126ed
   1400126c1:	cmp    QWORD PTR [rcx],rdx
   1400126c4:	ja     0x1400126ed
   1400126c6:	sub    rdi,QWORD PTR [rcx]
   1400126c9:	cmp    rax,QWORD PTR [rcx+0x10]
   1400126cd:	jne    0x1400126d9
   1400126cf:	mov    edx,0x1
   1400126d4:	call   0x1400127a0
   1400126d9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400126dd:	xor    eax,eax
   1400126df:	test   rcx,rcx
   1400126e2:	je     0x14001271f
   1400126e4:	and    rdi,0xffffffffffffffe0
   1400126e8:	add    rdi,QWORD PTR [rbx]
   1400126eb:	jmp    0x140012708
   1400126ed:	cmp    rax,QWORD PTR [rcx+0x10]
   1400126f1:	jne    0x1400126fd
   1400126f3:	mov    edx,0x1
   1400126f8:	call   0x1400127a0
   1400126fd:	mov    rcx,QWORD PTR [rbx+0x8]
   140012701:	xor    eax,eax
   140012703:	test   rcx,rcx
   140012706:	je     0x14001271f
   140012708:	mov    QWORD PTR [rcx+0x18],0x7
   140012710:	mov    rdx,rdi
   140012713:	mov    QWORD PTR [rcx+0x10],rax
   140012717:	mov    WORD PTR [rcx],ax
   14001271a:	call   0x14000cfb4
   14001271f:	add    QWORD PTR [rbx+0x8],0x20
   140012724:	mov    rbx,QWORD PTR [rsp+0x30]
   140012729:	add    rsp,0x20
   14001272d:	pop    rdi
   14001272e:	ret    
   14001272f:	int3   
   140012730:	mov    QWORD PTR [rsp+0x8],rbx
   140012735:	mov    QWORD PTR [rsp+0x10],rsi
   14001273a:	push   rdi
   14001273b:	sub    rsp,0x20
   14001273f:	mov    rbx,QWORD PTR [rcx]
   140012742:	mov    rdi,rcx
   140012745:	test   rbx,rbx
   140012748:	je     0x14001278d
   14001274a:	mov    rsi,QWORD PTR [rcx+0x8]
   14001274e:	jmp    0x140012761
   140012750:	xor    r8d,r8d
   140012753:	mov    dl,0x1
   140012755:	mov    rcx,rbx
   140012758:	call   0x14000b6b0
   14001275d:	add    rbx,0x20
   140012761:	cmp    rbx,rsi
   140012764:	jne    0x140012750
   140012766:	mov    rdx,QWORD PTR [rdi+0x10]
   14001276a:	mov    r8d,0x20
   140012770:	sub    rdx,QWORD PTR [rdi]
   140012773:	mov    rcx,QWORD PTR [rdi]
   140012776:	sar    rdx,0x5
   14001277a:	call   0x140004804
   14001277f:	and    QWORD PTR [rdi],0x0
   140012783:	and    QWORD PTR [rdi+0x8],0x0
   140012788:	and    QWORD PTR [rdi+0x10],0x0
   14001278d:	mov    rbx,QWORD PTR [rsp+0x30]
   140012792:	mov    rsi,QWORD PTR [rsp+0x38]
   140012797:	add    rsp,0x20
   14001279b:	pop    rdi
   14001279c:	ret    
   14001279d:	int3   
   14001279e:	int3   
   14001279f:	int3   
   1400127a0:	sub    rsp,0x28
   1400127a4:	mov    r10,QWORD PTR [rcx+0x10]
   1400127a8:	mov    r9,rcx
   1400127ab:	mov    r8,QWORD PTR [rcx+0x8]
   1400127af:	mov    rax,r10
   1400127b2:	sub    rax,r8
   1400127b5:	sar    rax,0x5
   1400127b9:	cmp    rax,rdx
   1400127bc:	jae    0x140012808
   1400127be:	sub    r8,QWORD PTR [rcx]
   1400127c1:	movabs r11,0x7ffffffffffffff
   1400127cb:	sar    r8,0x5
   1400127cf:	mov    rax,r11
   1400127d2:	sub    rax,r8
   1400127d5:	cmp    rax,rdx
   1400127d8:	jb     0x14001280d
   1400127da:	sub    r10,QWORD PTR [rcx]
   1400127dd:	add    rdx,r8
   1400127e0:	sar    r10,0x5
   1400127e4:	xor    ecx,ecx
   1400127e6:	mov    rax,r10
   1400127e9:	shr    rax,1
   1400127ec:	sub    r11,rax
   1400127ef:	add    rax,r10
   1400127f2:	cmp    r11,r10
   1400127f5:	cmovae rcx,rax
   1400127f9:	cmp    rcx,rdx
   1400127fc:	cmovae rdx,rcx
   140012800:	mov    rcx,r9
   140012803:	call   0x14001281c
   140012808:	add    rsp,0x28
   14001280c:	ret    
   14001280d:	lea    rcx,[rip+0x50614]        # 0x140062e28
   140012814:	call   0x140027a4c
   140012819:	int3   
   14001281a:	int3   
   14001281b:	int3   
   14001281c:	mov    QWORD PTR [rsp+0x10],rbx
   140012821:	mov    QWORD PTR [rsp+0x18],rbp
   140012826:	mov    QWORD PTR [rsp+0x20],rsi
   14001282b:	push   rdi
   14001282c:	push   r14
   14001282e:	push   r15
   140012830:	sub    rsp,0x30
   140012834:	mov    rbx,rdx
   140012837:	mov    r14,rcx
   14001283a:	test   rdx,rdx
   14001283d:	jne    0x140012843
   14001283f:	xor    edi,edi
   140012841:	jmp    0x140012891
   140012843:	movabs rax,0x7ffffffffffffff
   14001284d:	cmp    rbx,rax
   140012850:	ja     0x140012926
   140012856:	mov    rcx,rbx
   140012859:	shl    rcx,0x5
   14001285d:	cmp    rcx,0x1000
   140012864:	jb     0x140012889
   140012866:	lea    rax,[rcx+0x27]
   14001286a:	cmp    rax,rcx
   14001286d:	jbe    0x14001292c
   140012873:	mov    rcx,rax
   140012876:	call   0x140026118
   14001287b:	lea    rdi,[rax+0x27]
   14001287f:	and    rdi,0xffffffffffffffe0
   140012883:	mov    QWORD PTR [rdi-0x8],rax
   140012887:	jmp    0x140012891
   140012889:	call   0x140026118
   14001288e:	mov    rdi,rax
   140012891:	mov    cl,BYTE PTR [rsp+0x50]
   140012895:	xor    eax,eax
   140012897:	mov    rdx,QWORD PTR [r14+0x8]
   14001289b:	mov    r9,r14
   14001289e:	mov    BYTE PTR [rsp+0x28],cl
   1400128a2:	mov    r8,rdi
   1400128a5:	mov    rcx,QWORD PTR [r14]
   1400128a8:	mov    BYTE PTR [rsp+0x20],al
   1400128ac:	call   0x140012934
   1400128b1:	mov    rbp,QWORD PTR [r14]
   1400128b4:	mov    r15,QWORD PTR [r14+0x8]
   1400128b8:	mov    rsi,r15
   1400128bb:	sub    rsi,rbp
   1400128be:	test   rbp,rbp
   1400128c1:	je     0x1400128f4
   1400128c3:	jmp    0x1400128d6
   1400128c5:	xor    r8d,r8d
   1400128c8:	mov    dl,0x1
   1400128ca:	mov    rcx,rbp
   1400128cd:	call   0x14000b6b0
   1400128d2:	add    rbp,0x20
   1400128d6:	cmp    rbp,r15
   1400128d9:	jne    0x1400128c5
   1400128db:	mov    rdx,QWORD PTR [r14+0x10]
   1400128df:	mov    r8d,0x20
   1400128e5:	sub    rdx,QWORD PTR [r14]
   1400128e8:	mov    rcx,QWORD PTR [r14]
   1400128eb:	sar    rdx,0x5
   1400128ef:	call   0x140004804
   1400128f4:	mov    rbp,QWORD PTR [rsp+0x60]
   1400128f9:	and    rsi,0xffffffffffffffe0
   1400128fd:	shl    rbx,0x5
   140012901:	add    rbx,rdi
   140012904:	mov    QWORD PTR [r14+0x10],rbx
   140012908:	add    rsi,rdi
   14001290b:	mov    rbx,QWORD PTR [rsp+0x58]
   140012910:	mov    QWORD PTR [r14+0x8],rsi
   140012914:	mov    rsi,QWORD PTR [rsp+0x68]
   140012919:	mov    QWORD PTR [r14],rdi
   14001291c:	add    rsp,0x30
   140012920:	pop    r15
   140012922:	pop    r14
   140012924:	pop    rdi
   140012925:	ret    
   140012926:	call   0x140027a0c
   14001292b:	int3   
   14001292c:	call   0x140027a0c
   140012931:	int3   
   140012932:	int3   
   140012933:	int3   
   140012934:	mov    QWORD PTR [rsp+0x8],rbx
   140012939:	mov    QWORD PTR [rsp+0x10],rbp
   14001293e:	mov    QWORD PTR [rsp+0x18],rsi
   140012943:	push   rdi
   140012944:	sub    rsp,0x20
   140012948:	mov    rbx,r8
   14001294b:	mov    rsi,rdx
   14001294e:	mov    rdi,rcx
   140012951:	cmp    rcx,rdx
   140012954:	je     0x140012984
   140012956:	xor    ebp,ebp
   140012958:	test   rbx,rbx
   14001295b:	je     0x140012977
   14001295d:	mov    QWORD PTR [rbx+0x18],0x7
   140012965:	mov    rdx,rdi
   140012968:	mov    QWORD PTR [rbx+0x10],rbp
   14001296c:	mov    rcx,rbx
   14001296f:	mov    WORD PTR [rbx],bp
   140012972:	call   0x14000cfb4
   140012977:	add    rbx,0x20
   14001297b:	add    rdi,0x20
   14001297f:	cmp    rdi,rsi
   140012982:	jne    0x140012958
   140012984:	mov    rbp,QWORD PTR [rsp+0x38]
   140012989:	mov    rax,rbx
   14001298c:	mov    rbx,QWORD PTR [rsp+0x30]
   140012991:	mov    rsi,QWORD PTR [rsp+0x40]
   140012996:	add    rsp,0x20
   14001299a:	pop    rdi
   14001299b:	ret    
   14001299c:	mov    rax,rsp
   14001299f:	push   rbp
   1400129a0:	mov    rbp,rsp
   1400129a3:	sub    rsp,0x80
   1400129aa:	mov    QWORD PTR [rbp-0x58],0xfffffffffffffffe
   1400129b2:	mov    QWORD PTR [rax+0x10],rbx
   1400129b6:	mov    QWORD PTR [rax+0x18],rsi
   1400129ba:	mov    QWORD PTR [rax+0x20],rdi
   1400129be:	mov    rax,QWORD PTR [rip+0x5e68b]        # 0x140071050
   1400129c5:	xor    rax,rsp
   1400129c8:	mov    QWORD PTR [rbp-0x10],rax
   1400129cc:	mov    rdi,rcx
   1400129cf:	xor    esi,esi
   1400129d1:	mov    DWORD PTR [rbp-0x5c],esi
   1400129d4:	mov    DWORD PTR [rbp-0x60],esi
   1400129d7:	lea    ebx,[rsi+0x7]
   1400129da:	mov    QWORD PTR [rbp-0x18],rbx
   1400129de:	mov    QWORD PTR [rbp-0x20],rsi
   1400129e2:	mov    WORD PTR [rbp-0x30],si
   1400129e6:	lea    r8d,[rsi+0x8]
   1400129ea:	lea    rdx,[rip+0x516d7]        # 0x1400640c8
   1400129f1:	lea    rcx,[rbp-0x30]
   1400129f5:	call   0x14000b730
   1400129fa:	nop
   1400129fb:	mov    QWORD PTR [rbp-0x38],rbx
   1400129ff:	mov    QWORD PTR [rbp-0x40],rsi
   140012a03:	mov    WORD PTR [rbp-0x50],si
   140012a07:	lea    r8d,[rsi+0x31]
   140012a0b:	lea    rdx,[rip+0x516ce]        # 0x1400640e0
   140012a12:	lea    rcx,[rbp-0x50]
   140012a16:	call   0x14000b730
   140012a1b:	nop
   140012a1c:	mov    r9d,0x200
   140012a22:	lea    r8,[rbp-0x60]
   140012a26:	lea    rdx,[rbp-0x30]
   140012a2a:	lea    rcx,[rbp-0x50]
   140012a2e:	call   0x14001fb4c
   140012a33:	mov    bl,al
   140012a35:	xor    r8d,r8d
   140012a38:	mov    dl,0x1
   140012a3a:	lea    rcx,[rbp-0x50]
   140012a3e:	call   0x14000b6b0
   140012a43:	nop
   140012a44:	xor    r8d,r8d
   140012a47:	mov    dl,0x1
   140012a49:	lea    rcx,[rbp-0x30]
   140012a4d:	call   0x14000b6b0
   140012a52:	test   bl,bl
   140012a54:	je     0x140012a73
   140012a56:	mov    edx,DWORD PTR [rbp-0x60]
   140012a59:	lea    ecx,[rsi+0x4]
   140012a5c:	cmp    edx,ecx
   140012a5e:	cmova  edx,ecx
   140012a61:	mov    DWORD PTR [rbp-0x60],edx
   140012a64:	call   0x140026118
   140012a69:	mov    ecx,DWORD PTR [rbp-0x60]
   140012a6c:	mov    DWORD PTR [rax],ecx
   140012a6e:	mov    QWORD PTR [rdi],rax
   140012a71:	jmp    0x140012a76
   140012a73:	mov    QWORD PTR [rdi],rsi
   140012a76:	mov    rax,rdi
   140012a79:	mov    rcx,QWORD PTR [rbp-0x10]
   140012a7d:	xor    rcx,rsp
   140012a80:	call   0x140025df0
   140012a85:	lea    r11,[rsp+0x80]
   140012a8d:	mov    rbx,QWORD PTR [r11+0x18]
   140012a91:	mov    rsi,QWORD PTR [r11+0x20]
   140012a95:	mov    rdi,QWORD PTR [r11+0x28]
   140012a99:	mov    rsp,r11
   140012a9c:	pop    rbp
   140012a9d:	ret    
   140012a9e:	int3   
   140012a9f:	int3   
   140012aa0:	mov    rax,rsp
   140012aa3:	push   rbp
   140012aa4:	push   rdi
   140012aa5:	push   r14
   140012aa7:	lea    rbp,[rax-0x5f]
   140012aab:	sub    rsp,0xa0
   140012ab2:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   140012aba:	mov    QWORD PTR [rax+0x10],rbx
   140012abe:	mov    QWORD PTR [rax+0x18],rsi
   140012ac2:	mov    rax,QWORD PTR [rip+0x5e587]        # 0x140071050
   140012ac9:	xor    rax,rsp
   140012acc:	mov    QWORD PTR [rbp+0x37],rax
   140012ad0:	mov    rdi,rcx
   140012ad3:	xor    esi,esi
   140012ad5:	mov    DWORD PTR [rbp-0x39],esi
   140012ad8:	lea    r14d,[rsi+0x7]
   140012adc:	mov    QWORD PTR [rbp-0x11],r14
   140012ae0:	mov    QWORD PTR [rbp-0x19],rsi
   140012ae4:	mov    WORD PTR [rbp-0x29],si
   140012ae8:	mov    QWORD PTR [rbp+0x2f],r14
   140012aec:	mov    QWORD PTR [rbp+0x27],rsi
   140012af0:	mov    WORD PTR [rbp+0x17],si
   140012af4:	lea    r8d,[rsi+0xb]
   140012af8:	lea    rdx,[rip+0x51649]        # 0x140064148
   140012aff:	lea    rcx,[rbp+0x17]
   140012b03:	call   0x14000b730
   140012b08:	nop
   140012b09:	mov    QWORD PTR [rbp+0xf],r14
   140012b0d:	mov    QWORD PTR [rbp+0x7],rsi
   140012b11:	mov    WORD PTR [rbp-0x9],si
   140012b15:	lea    r8d,[rsi+0x33]
   140012b19:	lea    rdx,[rip+0x51640]        # 0x140064160
   140012b20:	lea    rcx,[rbp-0x9]
   140012b24:	call   0x14000b730
   140012b29:	nop
   140012b2a:	mov    r9d,0x200
   140012b30:	lea    r8,[rbp-0x29]
   140012b34:	lea    rdx,[rbp+0x17]
   140012b38:	lea    rcx,[rbp-0x9]
   140012b3c:	call   0x14001fc8c
   140012b41:	mov    bl,al
   140012b43:	xor    r8d,r8d
   140012b46:	mov    dl,0x1
   140012b48:	lea    rcx,[rbp-0x9]
   140012b4c:	call   0x14000b6b0
   140012b51:	nop
   140012b52:	xor    r8d,r8d
   140012b55:	mov    dl,0x1
   140012b57:	lea    rcx,[rbp+0x17]
   140012b5b:	call   0x14000b6b0
   140012b60:	test   bl,bl
   140012b62:	je     0x140012b9a
   140012b64:	cmp    QWORD PTR [rbp-0x19],rsi
   140012b68:	je     0x140012b9a
   140012b6a:	lea    ecx,[rsi+0x20]
   140012b6d:	call   0x140026118
   140012b72:	mov    rbx,rax
   140012b75:	mov    QWORD PTR [rax+0x18],r14
   140012b79:	mov    QWORD PTR [rax+0x10],rsi
   140012b7d:	cmp    r14,0x8
   140012b81:	jb     0x140012b86
   140012b83:	mov    rax,QWORD PTR [rax]
   140012b86:	mov    WORD PTR [rax],si
   140012b89:	lea    rdx,[rbp-0x29]
   140012b8d:	mov    rcx,rbx
   140012b90:	call   0x14000cfb4
   140012b95:	mov    QWORD PTR [rdi],rbx
   140012b98:	jmp    0x140012b9d
   140012b9a:	mov    QWORD PTR [rdi],rsi
   140012b9d:	xor    r8d,r8d
   140012ba0:	mov    dl,0x1
   140012ba2:	lea    rcx,[rbp-0x29]
   140012ba6:	call   0x14000b6b0
   140012bab:	mov    rax,rdi
   140012bae:	mov    rcx,QWORD PTR [rbp+0x37]
   140012bb2:	xor    rcx,rsp
   140012bb5:	call   0x140025df0
   140012bba:	lea    r11,[rsp+0xa0]
   140012bc2:	mov    rbx,QWORD PTR [r11+0x28]
   140012bc6:	mov    rsi,QWORD PTR [r11+0x30]
   140012bca:	mov    rsp,r11
   140012bcd:	pop    r14
   140012bcf:	pop    rdi
   140012bd0:	pop    rbp
   140012bd1:	ret    
   140012bd2:	int3   
   140012bd3:	int3   
   140012bd4:	int3   
   140012bd5:	int3   
   140012bd6:	int3   
   140012bd7:	int3   
   140012bd8:	int3   
   140012bd9:	int3   
   140012bda:	int3   
   140012bdb:	int3   
   140012bdc:	int3   
   140012bdd:	int3   
   140012bde:	int3   
   140012bdf:	int3   
   140012be0:	mov    QWORD PTR [rsp+0x8],rcx
   140012be5:	push   rdi
   140012be6:	sub    rsp,0x30
   140012bea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012bf3:	mov    QWORD PTR [rsp+0x48],rbx
   140012bf8:	mov    rdi,rdx
   140012bfb:	mov    rbx,rcx
   140012bfe:	mov    DWORD PTR [rsp+0x50],0x0
   140012c06:	test   r8d,r8d
   140012c09:	je     0x140012c5e
   140012c0b:	lea    rax,[rip+0x5166e]        # 0x140064280
   140012c12:	mov    QWORD PTR [rcx+0x8],rax
   140012c16:	test   rdx,rdx
   140012c19:	jne    0x140012c1f
   140012c1b:	xor    ecx,ecx
   140012c1d:	jmp    0x140012c2e
   140012c1f:	mov    rax,QWORD PTR [rdx+0x8]
   140012c23:	movsxd rcx,DWORD PTR [rax+0x4]
   140012c27:	add    rcx,0x8
   140012c2b:	add    rcx,rdi
   140012c2e:	lea    rax,[rip+0x38b13]        # 0x14004b748
   140012c35:	mov    QWORD PTR [rbx+0xa8],rax
   140012c3c:	lea    rdx,[rbx+0xb0]
   140012c43:	xor    eax,eax
   140012c45:	mov    QWORD PTR [rdx],rax
   140012c48:	mov    QWORD PTR [rdx+0x8],rax
   140012c4c:	add    rcx,0x8
   140012c50:	call   0x140028f04
   140012c55:	nop
   140012c56:	mov    DWORD PTR [rsp+0x50],0x1
   140012c5e:	xor    r8d,r8d
   140012c61:	mov    rdx,rdi
   140012c64:	mov    rcx,rbx
   140012c67:	call   0x140020494
   140012c6c:	lea    rax,[rip+0x515ed]        # 0x140064260
   140012c73:	mov    QWORD PTR [rbx],rax
   140012c76:	mov    rax,QWORD PTR [rbx+0x8]
   140012c7a:	movsxd rcx,DWORD PTR [rax+0x4]
   140012c7e:	lea    rax,[rip+0x515eb]        # 0x140064270
   140012c85:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   140012c8a:	mov    rax,QWORD PTR [rbx+0x8]
   140012c8e:	movsxd rcx,DWORD PTR [rax+0x4]
   140012c92:	mov    DWORD PTR [rcx+rbx*1+0x4],0x0
   140012c9a:	mov    eax,DWORD PTR [rdi+0x98]
   140012ca0:	mov    DWORD PTR [rbx+0x98],eax
   140012ca6:	mov    rax,rbx
   140012ca9:	mov    rbx,QWORD PTR [rsp+0x48]
   140012cae:	add    rsp,0x30
   140012cb2:	pop    rdi
   140012cb3:	ret    
   140012cb4:	int3   
   140012cb5:	int3   
   140012cb6:	int3   
   140012cb7:	int3   
   140012cb8:	int3   
   140012cb9:	int3   
   140012cba:	int3   
   140012cbb:	int3   
   140012cbc:	int3   
   140012cbd:	int3   
   140012cbe:	int3   
   140012cbf:	int3   
   140012cc0:	sub    rsp,0x38
   140012cc4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012ccd:	mov    rcx,QWORD PTR [rcx]
   140012cd0:	test   rcx,rcx
   140012cd3:	je     0x140012cdb
   140012cd5:	call   0x140025cb4
   140012cda:	nop
   140012cdb:	add    rsp,0x38
   140012cdf:	ret    
   140012ce0:	rex push rdi
   140012ce2:	sub    rsp,0x140
   140012ce9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012cf2:	mov    QWORD PTR [rsp+0x150],rbx
   140012cfa:	mov    rax,QWORD PTR [rip+0x5e34f]        # 0x140071050
   140012d01:	xor    rax,rsp
   140012d04:	mov    QWORD PTR [rsp+0x138],rax
   140012d0c:	lea    rdi,[rip+0x648e5]        # 0x1400775f8
   140012d13:	mov    QWORD PTR [rsp+0x28],rdi
   140012d18:	mov    rcx,rdi
   140012d1b:	call   0x140025ca8
   140012d20:	nop
   140012d21:	sub    DWORD PTR [rip+0x648c4],0x1        # 0x1400775ec
   140012d28:	jne    0x140012e55
   140012d2e:	call   0x1400013f0
   140012d33:	mov    ebx,eax
   140012d35:	test   eax,eax
   140012d37:	je     0x140012e55
   140012d3d:	mov    edx,0x2
   140012d42:	lea    r8d,[rdx-0x1]
   140012d46:	lea    rcx,[rsp+0x30]
   140012d4b:	call   0x14000be9c
   140012d50:	nop
   140012d51:	lea    rdx,[rip+0x514c8]        # 0x140064220
   140012d58:	lea    rcx,[rsp+0x30]
   140012d5d:	call   0x140010488
   140012d62:	mov    edx,ebx
   140012d64:	lea    rcx,[rsp+0x30]
   140012d69:	call   0x14000e638
   140012d6e:	lea    rdx,[rsp+0x118]
   140012d76:	lea    rcx,[rsp+0x30]
   140012d7b:	call   0x14000a950
   140012d80:	nop
   140012d81:	lea    rdx,[rsp+0x118]
   140012d89:	xor    ecx,ecx
   140012d8b:	call   0x14001a654
   140012d90:	nop
   140012d91:	mov    rax,QWORD PTR [rsp+0x130]
   140012d99:	cmp    rax,0x8
   140012d9d:	jb     0x140012e0c
   140012d9f:	inc    rax
   140012da2:	mov    rcx,QWORD PTR [rsp+0x118]
   140012daa:	movabs rdx,0x7fffffffffffffff
   140012db4:	cmp    rax,rdx
   140012db7:	jbe    0x140012dbf
   140012db9:	call   0x1400307f0
   140012dbe:	int3   
   140012dbf:	add    rax,rax
   140012dc2:	cmp    rax,0x1000
   140012dc8:	jb     0x140012e07
   140012dca:	test   BYTE PTR [rsp+0x118],0x1f
   140012dd2:	je     0x140012dda
   140012dd4:	call   0x1400307f0
   140012dd9:	int3   
   140012dda:	mov    rax,QWORD PTR [rcx-0x8]
   140012dde:	cmp    rax,rcx
   140012de1:	jb     0x140012de9
   140012de3:	call   0x1400307f0
   140012de8:	int3   
   140012de9:	sub    rcx,rax
   140012dec:	cmp    rcx,0x8
   140012df0:	jae    0x140012df8
   140012df2:	call   0x1400307f0
   140012df7:	int3   
   140012df8:	cmp    rcx,0x27
   140012dfc:	jbe    0x140012e04
   140012dfe:	call   0x1400307f0
   140012e03:	int3   
   140012e04:	mov    rcx,rax
   140012e07:	call   0x1400263fc
   140012e0c:	mov    QWORD PTR [rsp+0x130],0x7
   140012e18:	xor    eax,eax
   140012e1a:	mov    QWORD PTR [rsp+0x128],rax
   140012e22:	mov    WORD PTR [rsp+0x118],ax
   140012e2a:	lea    rcx,[rsp+0xb8]
   140012e32:	call   0x14000a9dc
   140012e37:	nop
   140012e38:	lea    rax,[rip+0x38ad9]        # 0x14004b918
   140012e3f:	mov    QWORD PTR [rsp+0xb8],rax
   140012e47:	lea    rcx,[rsp+0xb8]
   140012e4f:	call   0x140027b0c
   140012e54:	nop
   140012e55:	mov    rcx,rdi
   140012e58:	call   0x140025cb4
   140012e5d:	nop
   140012e5e:	mov    rcx,QWORD PTR [rsp+0x138]
   140012e66:	xor    rcx,rsp
   140012e69:	call   0x140025df0
   140012e6e:	mov    rbx,QWORD PTR [rsp+0x150]
   140012e76:	add    rsp,0x140
   140012e7d:	pop    rdi
   140012e7e:	ret    
   140012e7f:	int3   
   140012e80:	sub    rsp,0x38
   140012e84:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012e8d:	call   0x140012ce0
   140012e92:	nop
   140012e93:	add    rsp,0x38
   140012e97:	ret    
   140012e98:	int3   
   140012e99:	int3   
   140012e9a:	int3   
   140012e9b:	int3   
   140012e9c:	int3   
   140012e9d:	int3   
   140012e9e:	int3   
   140012e9f:	int3   
   140012ea0:	rex push rbp
   140012ea2:	push   rsi
   140012ea3:	push   rdi
   140012ea4:	sub    rsp,0x160
   140012eab:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140012eb4:	mov    QWORD PTR [rsp+0x198],rbx
   140012ebc:	mov    rax,QWORD PTR [rip+0x5e18d]        # 0x140071050
   140012ec3:	xor    rax,rsp
   140012ec6:	mov    QWORD PTR [rsp+0x158],rax
   140012ece:	mov    esi,r8d
   140012ed1:	mov    rbx,rdx
   140012ed4:	mov    rdi,rcx
   140012ed7:	mov    QWORD PTR [rsp+0x40],rcx
   140012edc:	xor    ebp,ebp
   140012ede:	mov    DWORD PTR [rsp+0x30],ebp
   140012ee2:	lea    rax,[rip+0x51397]        # 0x140064280
   140012ee9:	mov    QWORD PTR [rcx+0x8],rax
   140012eed:	lea    rax,[rip+0x38854]        # 0x14004b748
   140012ef4:	mov    QWORD PTR [rcx+0xa8],rax
   140012efb:	xor    eax,eax
   140012efd:	mov    QWORD PTR [rcx+0xb0],rax
   140012f04:	mov    QWORD PTR [rcx+0xb8],rax
   140012f0b:	mov    DWORD PTR [rsp+0x30],0x1
   140012f13:	lea    edx,[rbp+0x2]
   140012f16:	lea    r8d,[rbp+0x1]
   140012f1a:	lea    rcx,[rsp+0x50]
   140012f1f:	call   0x14000be9c
   140012f24:	nop
   140012f25:	mov    rdx,rbx
   140012f28:	lea    rcx,[rsp+0x50]
   140012f2d:	call   0x1400106b0
   140012f32:	lea    rdx,[rip+0x5134f]        # 0x140064288
   140012f39:	lea    rcx,[rsp+0x50]
   140012f3e:	call   0x140010488
   140012f43:	mov    edx,esi
   140012f45:	lea    rcx,[rsp+0x50]
   140012f4a:	call   0x14000e638
   140012f4f:	lea    rdx,[rsp+0x138]
   140012f57:	lea    rcx,[rsp+0x50]
   140012f5c:	call   0x14000a950
   140012f61:	nop
   140012f62:	mov    DWORD PTR [rsp+0x20],ebp
   140012f66:	lea    r9d,[rbp+0x33]
   140012f6a:	lea    r8,[rip+0x51257]        # 0x1400641c8
   140012f71:	lea    rdx,[rsp+0x138]
   140012f79:	mov    rcx,rdi
   140012f7c:	call   0x140020734
   140012f81:	nop
   140012f82:	mov    rax,QWORD PTR [rsp+0x150]
   140012f8a:	cmp    rax,0x8
   140012f8e:	jb     0x140012ffd
   140012f90:	inc    rax
   140012f93:	mov    rcx,QWORD PTR [rsp+0x138]
   140012f9b:	movabs rdx,0x7fffffffffffffff
   140012fa5:	cmp    rax,rdx
   140012fa8:	jbe    0x140012fb0
   140012faa:	call   0x1400307f0
   140012faf:	int3   
   140012fb0:	add    rax,rax
   140012fb3:	cmp    rax,0x1000
   140012fb9:	jb     0x140012ff8
   140012fbb:	test   BYTE PTR [rsp+0x138],0x1f
   140012fc3:	je     0x140012fcb
   140012fc5:	call   0x1400307f0
   140012fca:	int3   
   140012fcb:	mov    rax,QWORD PTR [rcx-0x8]
   140012fcf:	cmp    rax,rcx
   140012fd2:	jb     0x140012fda
   140012fd4:	call   0x1400307f0
   140012fd9:	int3   
   140012fda:	sub    rcx,rax
   140012fdd:	cmp    rcx,0x8
   140012fe1:	jae    0x140012fe9
   140012fe3:	call   0x1400307f0
   140012fe8:	int3   
   140012fe9:	cmp    rcx,0x27
   140012fed:	jbe    0x140012ff5
   140012fef:	call   0x1400307f0
   140012ff4:	int3   
   140012ff5:	mov    rcx,rax
   140012ff8:	call   0x1400263fc
   140012ffd:	mov    QWORD PTR [rsp+0x150],0x7
   140013009:	mov    QWORD PTR [rsp+0x148],rbp
   140013011:	mov    WORD PTR [rsp+0x138],bp
   140013019:	lea    rcx,[rsp+0xd8]
   140013021:	call   0x14000a9dc
   140013026:	nop
   140013027:	lea    rax,[rip+0x388ea]        # 0x14004b918
   14001302e:	mov    QWORD PTR [rsp+0xd8],rax
   140013036:	lea    rcx,[rsp+0xd8]
   14001303e:	call   0x140027b0c
   140013043:	nop
   140013044:	lea    rax,[rip+0x51215]        # 0x140064260
   14001304b:	mov    QWORD PTR [rdi],rax
   14001304e:	mov    rcx,QWORD PTR [rdi+0x8]
   140013052:	movsxd rdx,DWORD PTR [rcx+0x4]
   140013056:	lea    rax,[rip+0x51213]        # 0x140064270
   14001305d:	mov    QWORD PTR [rdx+rdi*1+0x8],rax
   140013062:	mov    rcx,QWORD PTR [rdi+0x8]
   140013066:	movsxd rdx,DWORD PTR [rcx+0x4]
   14001306a:	lea    r8d,[rdx-0xa0]
   140013071:	mov    DWORD PTR [rdx+rdi*1+0x4],r8d
   140013076:	mov    DWORD PTR [rdi+0x98],esi
   14001307c:	mov    rax,rdi
   14001307f:	mov    rcx,QWORD PTR [rsp+0x158]
   140013087:	xor    rcx,rsp
   14001308a:	call   0x140025df0
   14001308f:	mov    rbx,QWORD PTR [rsp+0x198]
   140013097:	add    rsp,0x160
   14001309e:	pop    rdi
   14001309f:	pop    rsi
   1400130a0:	pop    rbp
   1400130a1:	ret    
   1400130a2:	int3   
   1400130a3:	int3   
   1400130a4:	mov    r11d,DWORD PTR [rcx+0x74]
   1400130a8:	mov    r9,rcx
   1400130ab:	mov    rax,QWORD PTR [rcx+0x68]
   1400130af:	mov    r8d,DWORD PTR [rcx+0x44]
   1400130b3:	lea    r10,[rax+r11*2]
   1400130b7:	xor    eax,eax
   1400130b9:	lea    r10,[r10-0x2]
   1400130bd:	movzx  edx,WORD PTR [r10]
   1400130c1:	movzx  ecx,dx
   1400130c4:	sub    cx,r8w
   1400130c8:	cmp    edx,r8d
   1400130cb:	cmovae ax,cx
   1400130cf:	mov    WORD PTR [r10],ax
   1400130d3:	add    r11d,0xffffffff
   1400130d7:	jne    0x1400130b7
   1400130d9:	mov    rax,QWORD PTR [r9+0x60]
   1400130dd:	mov    r10d,r8d
   1400130e0:	lea    r9,[rax+r8*2]
   1400130e4:	xor    eax,eax
   1400130e6:	lea    r9,[r9-0x2]
   1400130ea:	movzx  edx,WORD PTR [r9]
   1400130ee:	movzx  ecx,dx
   1400130f1:	sub    cx,r8w
   1400130f5:	cmp    edx,r8d
   1400130f8:	cmovae ax,cx
   1400130fc:	mov    WORD PTR [r9],ax
   140013100:	add    r10d,0xffffffff
   140013104:	jne    0x1400130e4
   140013106:	ret    
   140013107:	int3   
   140013108:	mov    QWORD PTR [rsp+0x8],rbx
   14001310d:	mov    QWORD PTR [rsp+0x10],rbp
   140013112:	mov    QWORD PTR [rsp+0x18],rsi
   140013117:	push   rdi
   140013118:	sub    rsp,0x20
   14001311c:	mov    rdi,QWORD PTR [rcx+0x28]
   140013120:	mov    rsi,rcx
   140013123:	mov    rcx,rdi
   140013126:	call   0x1400177b8
   14001312b:	mov    ebp,DWORD PTR [rdi+0x28]
   14001312e:	cmp    ebp,DWORD PTR [rsi+0x18]
   140013131:	cmova  ebp,DWORD PTR [rsi+0x18]
   140013135:	test   ebp,ebp
   140013137:	je     0x140013166
   140013139:	mov    rdx,QWORD PTR [rdi+0x20]
   14001313d:	mov    rcx,QWORD PTR [rsi+0x10]
   140013141:	mov    r8d,ebp
   140013144:	mov    ebx,ebp
   140013146:	call   0x140028fd0
   14001314b:	add    QWORD PTR [rsi+0x10],rbx
   14001314f:	add    QWORD PTR [rdi+0x20],rbx
   140013153:	add    DWORD PTR [rsi+0x1c],ebp
   140013156:	sub    DWORD PTR [rsi+0x18],ebp
   140013159:	sub    DWORD PTR [rdi+0x28],ebp
   14001315c:	jne    0x140013166
   14001315e:	mov    rax,QWORD PTR [rdi+0x10]
   140013162:	mov    QWORD PTR [rdi+0x20],rax
   140013166:	mov    rbx,QWORD PTR [rsp+0x30]
   14001316b:	mov    rbp,QWORD PTR [rsp+0x38]
   140013170:	mov    rsi,QWORD PTR [rsp+0x40]
   140013175:	add    rsp,0x20
   140013179:	pop    rdi
   14001317a:	ret    
   14001317b:	int3   
   14001317c:	mov    rax,rsp
   14001317f:	mov    QWORD PTR [rax+0x8],rbx
   140013183:	mov    QWORD PTR [rax+0x10],rbp
   140013187:	mov    QWORD PTR [rax+0x18],rsi
   14001318b:	mov    QWORD PTR [rax+0x20],rdi
   14001318f:	push   r14
   140013191:	sub    rsp,0x20
   140013195:	mov    eax,DWORD PTR [rcx+0x8]
   140013198:	mov    r14,rdx
   14001319b:	cmp    eax,r8d
   14001319e:	mov    edi,eax
   1400131a0:	mov    rbx,rcx
   1400131a3:	cmova  edi,r8d
   1400131a7:	xor    esi,esi
   1400131a9:	test   edi,edi
   1400131ab:	jne    0x1400131b1
   1400131ad:	xor    eax,eax
   1400131af:	jmp    0x14001320a
   1400131b1:	mov    rdx,QWORD PTR [rcx]
   1400131b4:	sub    eax,edi
   1400131b6:	mov    DWORD PTR [rcx+0x8],eax
   1400131b9:	mov    rcx,r14
   1400131bc:	mov    r8d,edi
   1400131bf:	mov    ebp,edi
   1400131c1:	call   0x140028fd0
   1400131c6:	mov    rax,QWORD PTR [rbx+0x28]
   1400131ca:	mov    ecx,DWORD PTR [rax+0x2c]
   1400131cd:	cmp    ecx,0x1
   1400131d0:	jne    0x1400131e5
   1400131d2:	mov    ecx,DWORD PTR [rbx+0x4c]
   1400131d5:	mov    r8d,ebp
   1400131d8:	mov    rdx,r14
   1400131db:	call   0x14001789c
   1400131e0:	mov    DWORD PTR [rbx+0x4c],eax
   1400131e3:	jmp    0x140013202
   1400131e5:	cmp    ecx,0x2
   1400131e8:	jne    0x140013202
   1400131ea:	test   r14,r14
   1400131ed:	je     0x1400131ff
   1400131ef:	mov    ecx,DWORD PTR [rbx+0x4c]
   1400131f2:	mov    r8,rbp
   1400131f5:	mov    rdx,r14
   1400131f8:	call   0x140015cfc
   1400131fd:	mov    esi,eax
   1400131ff:	mov    DWORD PTR [rbx+0x4c],esi
   140013202:	add    QWORD PTR [rbx],rbp
   140013205:	mov    eax,edi
   140013207:	add    DWORD PTR [rbx+0xc],edi
   14001320a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001320f:	mov    rbp,QWORD PTR [rsp+0x38]
   140013214:	mov    rsi,QWORD PTR [rsp+0x40]
   140013219:	mov    rdi,QWORD PTR [rsp+0x48]
   14001321e:	add    rsp,0x20
   140013222:	pop    r14
   140013224:	ret    
   140013225:	int3   
   140013226:	int3   
   140013227:	int3   
   140013228:	mov    rax,rsp
   14001322b:	mov    QWORD PTR [rax+0x8],rbx
   14001322f:	mov    QWORD PTR [rax+0x10],rbp
   140013233:	mov    QWORD PTR [rax+0x18],rsi
   140013237:	mov    QWORD PTR [rax+0x20],rdi
   14001323b:	push   r12
   14001323d:	push   r13
   14001323f:	push   r14
   140013241:	push   r15
   140013243:	mov    ebx,DWORD PTR [rcx+0x94]
   140013249:	mov    r11,rcx
   14001324c:	mov    r13,QWORD PTR [rcx+0x50]
   140013250:	mov    esi,edx
   140013252:	mov    edi,DWORD PTR [rcx+0xa4]
   140013258:	movsxd r10,DWORD PTR [rcx+0xa0]
   14001325f:	mov    ebp,DWORD PTR [rcx+0xb8]
   140013265:	mov    ecx,DWORD PTR [rcx+0x44]
   140013268:	lea    r8,[rbx+r13*1]
   14001326c:	lea    eax,[rcx-0x106]
   140013272:	cmp    ebx,eax
   140013274:	jbe    0x140013280
   140013276:	sub    ebx,ecx
   140013278:	add    ebx,0x106
   14001327e:	jmp    0x140013282
   140013280:	xor    ebx,ebx
   140013282:	lea    eax,[r10-0x1]
   140013286:	mov    r12b,BYTE PTR [r10+r8*1]
   14001328a:	lea    r14,[r8+0x102]
   140013291:	movsxd rcx,eax
   140013294:	mov    r15b,BYTE PTR [rcx+r8*1]
   140013298:	cmp    r10d,DWORD PTR [r11+0xb4]
   14001329f:	jb     0x1400132a4
   1400132a1:	shr    edi,0x2
   1400132a4:	mov    r9d,DWORD PTR [r11+0x9c]
   1400132ab:	cmp    ebp,r9d
   1400132ae:	cmova  ebp,r9d
   1400132b2:	mov    edx,esi
   1400132b4:	add    rdx,r13
   1400132b7:	movsxd rax,r10d
   1400132ba:	cmp    BYTE PTR [rax+rdx*1],r12b
   1400132be:	jne    0x14001339d
   1400132c4:	lea    eax,[r10-0x1]
   1400132c8:	movsxd rcx,eax
   1400132cb:	cmp    BYTE PTR [rcx+rdx*1],r15b
   1400132cf:	jne    0x14001339d
   1400132d5:	mov    al,BYTE PTR [r8]
   1400132d8:	cmp    BYTE PTR [rdx],al
   1400132da:	jne    0x14001339d
   1400132e0:	mov    al,BYTE PTR [r8+0x1]
   1400132e4:	mov    ecx,0x1
   1400132e9:	add    rdx,rcx
   1400132ec:	cmp    BYTE PTR [rdx],al
   1400132ee:	jne    0x14001339d
   1400132f4:	add    r8,0x2
   1400132f8:	add    rdx,rcx
   1400132fb:	add    rdx,rcx
   1400132fe:	add    r8,rcx
   140013301:	mov    al,BYTE PTR [rdx]
   140013303:	cmp    BYTE PTR [r8],al
   140013306:	jne    0x140013368
   140013308:	add    rdx,rcx
   14001330b:	add    r8,rcx
   14001330e:	mov    al,BYTE PTR [rdx]
   140013310:	cmp    BYTE PTR [r8],al
   140013313:	jne    0x140013368
   140013315:	add    rdx,rcx
   140013318:	add    r8,rcx
   14001331b:	mov    al,BYTE PTR [rdx]
   14001331d:	cmp    BYTE PTR [r8],al
   140013320:	jne    0x140013368
   140013322:	add    rdx,rcx
   140013325:	add    r8,rcx
   140013328:	mov    al,BYTE PTR [rdx]
   14001332a:	cmp    BYTE PTR [r8],al
   14001332d:	jne    0x140013368
   14001332f:	add    rdx,rcx
   140013332:	add    r8,rcx
   140013335:	mov    al,BYTE PTR [rdx]
   140013337:	cmp    BYTE PTR [r8],al
   14001333a:	jne    0x140013368
   14001333c:	add    rdx,rcx
   14001333f:	add    r8,rcx
   140013342:	mov    al,BYTE PTR [rdx]
   140013344:	cmp    BYTE PTR [r8],al
   140013347:	jne    0x140013368
   140013349:	add    rdx,rcx
   14001334c:	add    r8,rcx
   14001334f:	mov    al,BYTE PTR [rdx]
   140013351:	cmp    BYTE PTR [r8],al
   140013354:	jne    0x140013368
   140013356:	add    rdx,rcx
   140013359:	add    r8,rcx
   14001335c:	mov    al,BYTE PTR [rdx]
   14001335e:	cmp    BYTE PTR [r8],al
   140013361:	jne    0x140013368
   140013363:	cmp    r8,r14
   140013366:	jb     0x1400132fb
   140013368:	sub    r8d,r14d
   14001336b:	add    r8d,0x102
   140013372:	movsxd rdx,r8d
   140013375:	lea    r8,[r14-0x102]
   14001337c:	cmp    edx,r10d
   14001337f:	jle    0x14001339d
   140013381:	mov    DWORD PTR [r11+0x98],esi
   140013388:	mov    r10d,edx
   14001338b:	cmp    edx,ebp
   14001338d:	jge    0x1400133bb
   14001338f:	mov    r12b,BYTE PTR [rdx+r8*1]
   140013393:	lea    eax,[rdx-0x1]
   140013396:	movsxd rcx,eax
   140013399:	mov    r15b,BYTE PTR [rcx+r8*1]
   14001339d:	mov    ecx,DWORD PTR [r11+0x4c]
   1400133a1:	mov    eax,esi
   1400133a3:	and    rcx,rax
   1400133a6:	mov    rax,QWORD PTR [r11+0x60]
   1400133aa:	movzx  esi,WORD PTR [rax+rcx*2]
   1400133ae:	cmp    esi,ebx
   1400133b0:	jbe    0x1400133bb
   1400133b2:	add    edi,0xffffffff
   1400133b5:	jne    0x1400132b2
   1400133bb:	mov    rbx,QWORD PTR [rsp+0x28]
   1400133c0:	cmp    r10d,r9d
   1400133c3:	mov    rbp,QWORD PTR [rsp+0x30]
   1400133c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400133cd:	cmovbe r9d,r10d
   1400133d1:	mov    rdi,QWORD PTR [rsp+0x40]
   1400133d6:	mov    eax,r9d
   1400133d9:	pop    r15
   1400133db:	pop    r14
   1400133dd:	pop    r13
   1400133df:	pop    r12
   1400133e1:	ret    
   1400133e2:	int3   
   1400133e3:	int3   
   1400133e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400133e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400133ee:	push   rdi
   1400133ef:	sub    rsp,0x20
   1400133f3:	mov    esi,DWORD PTR [rcx+0x44]
   1400133f6:	mov    rbx,rcx
   1400133f9:	mov    edx,DWORD PTR [rbx+0x94]
   1400133ff:	mov    edi,DWORD PTR [rbx+0x58]
   140013402:	sub    edi,DWORD PTR [rbx+0x9c]
   140013408:	mov    ecx,DWORD PTR [rbx+0x44]
   14001340b:	sub    edi,edx
   14001340d:	add    ecx,0xfffffefa
   140013413:	add    ecx,esi
   140013415:	cmp    edx,ecx
   140013417:	jb     0x140013448
   140013419:	mov    rcx,QWORD PTR [rbx+0x50]
   14001341d:	mov    r8d,esi
   140013420:	sub    r8d,edi
   140013423:	lea    rdx,[rcx+rsi*1]
   140013427:	call   0x140028fd0
   14001342c:	sub    DWORD PTR [rbx+0x98],esi
   140013432:	mov    rcx,rbx
   140013435:	sub    DWORD PTR [rbx+0x94],esi
   14001343b:	sub    DWORD PTR [rbx+0x84],esi
   140013441:	call   0x1400130a4
   140013446:	add    edi,esi
   140013448:	mov    rcx,QWORD PTR [rbx]
   14001344b:	cmp    DWORD PTR [rcx+0x8],0x0
   14001344f:	je     0x14001354c
   140013455:	mov    edx,DWORD PTR [rbx+0x9c]
   14001345b:	mov    r8d,edi
   14001345e:	mov    eax,DWORD PTR [rbx+0x94]
   140013464:	add    rdx,rax
   140013467:	add    rdx,QWORD PTR [rbx+0x50]
   14001346b:	call   0x14001317c
   140013470:	add    DWORD PTR [rbx+0x9c],eax
   140013476:	mov    eax,DWORD PTR [rbx+0x9c]
   14001347c:	mov    r9d,DWORD PTR [rbx+0x170c]
   140013483:	add    eax,r9d
   140013486:	cmp    eax,0x3
   140013489:	jb     0x140013533
   14001348f:	mov    r10d,DWORD PTR [rbx+0x94]
   140013496:	mov    rdx,QWORD PTR [rbx+0x50]
   14001349a:	sub    r10d,r9d
   14001349d:	mov    ecx,DWORD PTR [rbx+0x80]
   1400134a3:	movzx  r8d,BYTE PTR [r10+rdx*1]
   1400134a8:	lea    eax,[r10+0x1]
   1400134ac:	mov    DWORD PTR [rbx+0x70],r8d
   1400134b0:	movzx  eax,BYTE PTR [rax+rdx*1]
   1400134b4:	shl    r8d,cl
   1400134b7:	xor    eax,r8d
   1400134ba:	and    eax,DWORD PTR [rbx+0x7c]
   1400134bd:	mov    DWORD PTR [rbx+0x70],eax
   1400134c0:	test   r9d,r9d
   1400134c3:	je     0x140013533
   1400134c5:	lea    r11d,[r10+0x2]
   1400134c9:	mov    rax,QWORD PTR [rbx+0x50]
   1400134cd:	mov    ecx,DWORD PTR [rbx+0x80]
   1400134d3:	mov    rdx,QWORD PTR [rbx+0x68]
   1400134d7:	mov    r8d,DWORD PTR [rbx+0x4c]
   1400134db:	movzx  r9d,BYTE PTR [r11+rax*1]
   1400134e0:	inc    r11d
   1400134e3:	mov    eax,DWORD PTR [rbx+0x70]
   1400134e6:	shl    eax,cl
   1400134e8:	mov    rcx,QWORD PTR [rbx+0x60]
   1400134ec:	xor    r9d,eax
   1400134ef:	and    r9d,DWORD PTR [rbx+0x7c]
   1400134f3:	mov    eax,r10d
   1400134f6:	and    r8,rax
   1400134f9:	mov    DWORD PTR [rbx+0x70],r9d
   1400134fd:	movzx  eax,WORD PTR [rdx+r9*2]
   140013502:	mov    WORD PTR [rcx+r8*2],ax
   140013507:	mov    ecx,DWORD PTR [rbx+0x70]
   14001350a:	mov    rax,QWORD PTR [rbx+0x68]
   14001350e:	mov    WORD PTR [rax+rcx*2],r10w
   140013513:	inc    r10d
   140013516:	dec    DWORD PTR [rbx+0x170c]
   14001351c:	mov    ecx,DWORD PTR [rbx+0x9c]
   140013522:	mov    edx,DWORD PTR [rbx+0x170c]
   140013528:	add    ecx,edx
   14001352a:	cmp    ecx,0x3
   14001352d:	jb     0x140013533
   14001352f:	test   edx,edx
   140013531:	jne    0x1400134c9
   140013533:	cmp    DWORD PTR [rbx+0x9c],0x106
   14001353d:	jae    0x14001354c
   14001353f:	mov    rax,QWORD PTR [rbx]
   140013542:	cmp    DWORD PTR [rax+0x8],0x0
   140013546:	jne    0x1400133f9
   14001354c:	mov    ecx,DWORD PTR [rbx+0x1718]
   140013552:	mov    esi,DWORD PTR [rbx+0x58]
   140013555:	cmp    ecx,esi
   140013557:	jae    0x1400135be
   140013559:	mov    edi,DWORD PTR [rbx+0x9c]
   14001355f:	add    edi,DWORD PTR [rbx+0x94]
   140013565:	cmp    ecx,edi
   140013567:	jae    0x140013590
   140013569:	sub    esi,edi
   14001356b:	mov    ecx,edi
   14001356d:	mov    eax,0x102
   140013572:	cmp    esi,eax
   140013574:	cmova  esi,eax
   140013577:	add    rcx,QWORD PTR [rbx+0x50]
   14001357b:	mov    r8d,esi
   14001357e:	xor    edx,edx
   140013580:	call   0x14002a910
   140013585:	lea    eax,[rsi+rdi*1]
   140013588:	mov    DWORD PTR [rbx+0x1718],eax
   14001358e:	jmp    0x1400135be
   140013590:	lea    eax,[rdi+0x102]
   140013596:	cmp    ecx,eax
   140013598:	jae    0x1400135be
   14001359a:	sub    edi,ecx
   14001359c:	sub    esi,ecx
   14001359e:	mov    eax,0x102
   1400135a3:	add    edi,eax
   1400135a5:	cmp    edi,esi
   1400135a7:	cmova  edi,esi
   1400135aa:	add    rcx,QWORD PTR [rbx+0x50]
   1400135ae:	mov    r8d,edi
   1400135b1:	xor    edx,edx
   1400135b3:	call   0x14002a910
   1400135b8:	add    DWORD PTR [rbx+0x1718],edi
   1400135be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400135c3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400135c8:	add    rsp,0x20
   1400135cc:	pop    rdi
   1400135cd:	ret    
   1400135ce:	int3   
   1400135cf:	int3   
   1400135d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400135d5:	mov    QWORD PTR [rsp+0x18],rbp
   1400135da:	mov    QWORD PTR [rsp+0x20],rsi
   1400135df:	push   rdi
   1400135e0:	push   r12
   1400135e2:	push   r13
   1400135e4:	push   r14
   1400135e6:	push   r15
   1400135e8:	sub    rsp,0x20
   1400135ec:	mov    r13d,DWORD PTR [rcx+0x18]
   1400135f0:	mov    r15d,edx
   1400135f3:	mov    rax,QWORD PTR [rcx]
   1400135f6:	add    r13d,0xfffffffb
   1400135fa:	cmp    r13d,DWORD PTR [rcx+0x44]
   1400135fe:	mov    rdi,rcx
   140013601:	cmova  r13d,DWORD PTR [rcx+0x44]
   140013606:	xor    ebp,ebp
   140013608:	mov    r14d,DWORD PTR [rax+0x8]
   14001360c:	mov    DWORD PTR [rsp+0x50],r14d
   140013611:	mov    r14d,0xffff
   140013617:	mov    eax,DWORD PTR [rdi+0x1714]
   14001361d:	mov    rdx,QWORD PTR [rdi]
   140013620:	add    eax,0x2a
   140013623:	sar    eax,0x3
   140013626:	mov    ecx,DWORD PTR [rdx+0x18]
   140013629:	cmp    ecx,eax
   14001362b:	jb     0x140013760
   140013631:	mov    r12d,DWORD PTR [rdi+0x94]
   140013638:	sub    ecx,eax
   14001363a:	sub    r12d,DWORD PTR [rdi+0x84]
   140013641:	mov    esi,r14d
   140013644:	mov    edx,DWORD PTR [rdx+0x8]
   140013647:	add    edx,r12d
   14001364a:	cmp    edx,r14d
   14001364d:	cmovb  esi,edx
   140013650:	cmp    esi,ecx
   140013652:	cmova  esi,ecx
   140013655:	cmp    esi,r13d
   140013658:	jae    0x140013679
   14001365a:	test   esi,esi
   14001365c:	jne    0x140013668
   14001365e:	cmp    r15d,0x4
   140013662:	jne    0x140013760
   140013668:	test   r15d,r15d
   14001366b:	je     0x140013760
   140013671:	cmp    esi,edx
   140013673:	jne    0x140013760
   140013679:	cmp    r15d,0x4
   14001367d:	jne    0x140013689
   14001367f:	cmp    esi,edx
   140013681:	jne    0x140013689
   140013683:	lea    ebp,[r15-0x3]
   140013687:	jmp    0x14001368b
   140013689:	xor    ebp,ebp
   14001368b:	mov    r9d,ebp
   14001368e:	xor    r8d,r8d
   140013691:	xor    edx,edx
   140013693:	mov    rcx,rdi
   140013696:	call   0x140016f58
   14001369b:	mov    ecx,DWORD PTR [rdi+0x28]
   14001369e:	mov    edx,esi
   1400136a0:	mov    rax,QWORD PTR [rdi+0x10]
   1400136a4:	sub    ecx,0x4
   1400136a7:	shr    edx,0x8
   1400136aa:	mov    BYTE PTR [rcx+rax*1],sil
   1400136ae:	mov    ecx,DWORD PTR [rdi+0x28]
   1400136b1:	mov    rax,QWORD PTR [rdi+0x10]
   1400136b5:	sub    ecx,0x3
   1400136b8:	mov    BYTE PTR [rcx+rax*1],dl
   1400136bb:	mov    dl,sil
   1400136be:	mov    ecx,DWORD PTR [rdi+0x28]
   1400136c1:	not    dl
   1400136c3:	mov    rax,QWORD PTR [rdi+0x10]
   1400136c7:	sub    ecx,0x2
   1400136ca:	mov    BYTE PTR [rcx+rax*1],dl
   1400136cd:	mov    edx,esi
   1400136cf:	mov    ecx,DWORD PTR [rdi+0x28]
   1400136d2:	not    edx
   1400136d4:	mov    rax,QWORD PTR [rdi+0x10]
   1400136d8:	dec    ecx
   1400136da:	shr    edx,0x8
   1400136dd:	mov    BYTE PTR [rcx+rax*1],dl
   1400136e0:	mov    rcx,QWORD PTR [rdi]
   1400136e3:	call   0x140013108
   1400136e8:	test   r12d,r12d
   1400136eb:	je     0x140013730
   1400136ed:	mov    rcx,QWORD PTR [rdi]
   1400136f0:	cmp    r12d,esi
   1400136f3:	movsxd rdx,DWORD PTR [rdi+0x84]
   1400136fa:	cmova  r12d,esi
   1400136fe:	add    rdx,QWORD PTR [rdi+0x50]
   140013702:	mov    r8d,r12d
   140013705:	mov    rcx,QWORD PTR [rcx+0x10]
   140013709:	mov    ebx,r12d
   14001370c:	call   0x140028fd0
   140013711:	mov    rax,QWORD PTR [rdi]
   140013714:	add    QWORD PTR [rax+0x10],rbx
   140013718:	mov    rax,QWORD PTR [rdi]
   14001371b:	sub    DWORD PTR [rax+0x18],r12d
   14001371f:	mov    rax,QWORD PTR [rdi]
   140013722:	add    DWORD PTR [rax+0x1c],r12d
   140013726:	add    DWORD PTR [rdi+0x84],r12d
   14001372d:	sub    esi,r12d
   140013730:	test   esi,esi
   140013732:	je     0x140013758
   140013734:	mov    rcx,QWORD PTR [rdi]
   140013737:	mov    r8d,esi
   14001373a:	mov    rdx,QWORD PTR [rcx+0x10]
   14001373e:	call   0x14001317c
   140013743:	mov    rcx,QWORD PTR [rdi]
   140013746:	mov    eax,esi
   140013748:	add    QWORD PTR [rcx+0x10],rax
   14001374c:	mov    rax,QWORD PTR [rdi]
   14001374f:	sub    DWORD PTR [rax+0x18],esi
   140013752:	mov    rax,QWORD PTR [rdi]
   140013755:	add    DWORD PTR [rax+0x1c],esi
   140013758:	test   ebp,ebp
   14001375a:	je     0x140013617
   140013760:	mov    rax,QWORD PTR [rdi]
   140013763:	mov    r14d,DWORD PTR [rsp+0x50]
   140013768:	sub    r14d,DWORD PTR [rax+0x8]
   14001376c:	je     0x140013826
   140013772:	mov    edx,DWORD PTR [rdi+0x44]
   140013775:	cmp    r14d,edx
   140013778:	jb     0x1400137a1
   14001377a:	mov    rcx,QWORD PTR [rdi+0x50]
   14001377e:	mov    r8d,edx
   140013781:	mov    DWORD PTR [rdi+0x1708],0x2
   14001378b:	mov    rdx,QWORD PTR [rax]
   14001378e:	sub    rdx,r8
   140013791:	call   0x140028fd0
   140013796:	mov    eax,DWORD PTR [rdi+0x44]
   140013799:	mov    DWORD PTR [rdi+0x94],eax
   14001379f:	jmp    0x1400137fe
   1400137a1:	mov    eax,DWORD PTR [rdi+0x58]
   1400137a4:	mov    ecx,DWORD PTR [rdi+0x94]
   1400137aa:	sub    eax,ecx
   1400137ac:	cmp    eax,r14d
   1400137af:	ja     0x1400137dc
   1400137b1:	sub    ecx,edx
   1400137b3:	mov    r8d,ecx
   1400137b6:	mov    rcx,QWORD PTR [rdi+0x50]
   1400137ba:	add    rdx,rcx
   1400137bd:	mov    DWORD PTR [rdi+0x94],r8d
   1400137c4:	call   0x140028fd0
   1400137c9:	mov    eax,DWORD PTR [rdi+0x1708]
   1400137cf:	cmp    eax,0x2
   1400137d2:	jae    0x1400137dc
   1400137d4:	inc    eax
   1400137d6:	mov    DWORD PTR [rdi+0x1708],eax
   1400137dc:	mov    rax,QWORD PTR [rdi]
   1400137df:	mov    ecx,DWORD PTR [rdi+0x94]
   1400137e5:	add    rcx,QWORD PTR [rdi+0x50]
   1400137e9:	mov    r8d,r14d
   1400137ec:	mov    rdx,QWORD PTR [rax]
   1400137ef:	sub    rdx,r8
   1400137f2:	call   0x140028fd0
   1400137f7:	add    DWORD PTR [rdi+0x94],r14d
   1400137fe:	mov    ecx,DWORD PTR [rdi+0x170c]
   140013804:	mov    eax,DWORD PTR [rdi+0x94]
   14001380a:	mov    DWORD PTR [rdi+0x84],eax
   140013810:	mov    eax,DWORD PTR [rdi+0x44]
   140013813:	sub    eax,ecx
   140013815:	cmp    r14d,eax
   140013818:	cmova  r14d,eax
   14001381c:	lea    eax,[rcx+r14*1]
   140013820:	mov    DWORD PTR [rdi+0x170c],eax
   140013826:	mov    eax,DWORD PTR [rdi+0x94]
   14001382c:	cmp    DWORD PTR [rdi+0x1718],eax
   140013832:	jae    0x14001383a
   140013834:	mov    DWORD PTR [rdi+0x1718],eax
   14001383a:	test   ebp,ebp
   14001383c:	je     0x140013848
   14001383e:	mov    eax,0x3
   140013843:	jmp    0x14001399a
   140013848:	test   r15d,0xfffffffb
   14001384f:	je     0x14001386c
   140013851:	mov    rcx,QWORD PTR [rdi]
   140013854:	cmp    DWORD PTR [rcx+0x8],0x0
   140013858:	jne    0x14001386c
   14001385a:	cmp    eax,DWORD PTR [rdi+0x84]
   140013860:	jne    0x14001386c
   140013862:	mov    eax,0x1
   140013867:	jmp    0x14001399a
   14001386c:	mov    ebx,DWORD PTR [rdi+0x58]
   14001386f:	sub    ebx,eax
   140013871:	mov    rax,QWORD PTR [rdi]
   140013874:	dec    ebx
   140013876:	cmp    DWORD PTR [rax+0x8],ebx
   140013879:	jbe    0x1400138c0
   14001387b:	mov    eax,DWORD PTR [rdi+0x44]
   14001387e:	mov    ecx,DWORD PTR [rdi+0x84]
   140013884:	cmp    ecx,eax
   140013886:	jl     0x1400138c0
   140013888:	sub    DWORD PTR [rdi+0x94],eax
   14001388e:	sub    ecx,eax
   140013890:	mov    r8d,DWORD PTR [rdi+0x94]
   140013897:	mov    DWORD PTR [rdi+0x84],ecx
   14001389d:	mov    rcx,QWORD PTR [rdi+0x50]
   1400138a1:	lea    rdx,[rcx+rax*1]
   1400138a5:	call   0x140028fd0
   1400138aa:	mov    eax,DWORD PTR [rdi+0x1708]
   1400138b0:	cmp    eax,0x2
   1400138b3:	jae    0x1400138bd
   1400138b5:	inc    eax
   1400138b7:	mov    DWORD PTR [rdi+0x1708],eax
   1400138bd:	add    ebx,DWORD PTR [rdi+0x44]
   1400138c0:	mov    rcx,QWORD PTR [rdi]
   1400138c3:	cmp    ebx,DWORD PTR [rcx+0x8]
   1400138c6:	cmova  ebx,DWORD PTR [rcx+0x8]
   1400138ca:	test   ebx,ebx
   1400138cc:	je     0x1400138e6
   1400138ce:	mov    edx,DWORD PTR [rdi+0x94]
   1400138d4:	mov    r8d,ebx
   1400138d7:	add    rdx,QWORD PTR [rdi+0x50]
   1400138db:	call   0x14001317c
   1400138e0:	add    DWORD PTR [rdi+0x94],ebx
   1400138e6:	mov    eax,DWORD PTR [rdi+0x94]
   1400138ec:	cmp    DWORD PTR [rdi+0x1718],eax
   1400138f2:	jae    0x1400138fa
   1400138f4:	mov    DWORD PTR [rdi+0x1718],eax
   1400138fa:	mov    eax,DWORD PTR [rdi+0x1714]
   140013900:	mov    edx,DWORD PTR [rdi+0x18]
   140013903:	add    eax,0x2a
   140013906:	movsxd r8,DWORD PTR [rdi+0x84]
   14001390d:	mov    ecx,DWORD PTR [rdi+0x94]
   140013913:	sar    eax,0x3
   140013916:	sub    edx,eax
   140013918:	mov    eax,0xffff
   14001391d:	cmp    edx,eax
   14001391f:	cmova  edx,eax
   140013922:	cmp    edx,DWORD PTR [rdi+0x44]
   140013925:	mov    eax,edx
   140013927:	cmova  eax,DWORD PTR [rdi+0x44]
   14001392b:	sub    ecx,r8d
   14001392e:	cmp    ecx,eax
   140013930:	jae    0x14001394e
   140013932:	test   ecx,ecx
   140013934:	jne    0x14001393c
   140013936:	cmp    r15d,0x4
   14001393a:	jne    0x140013993
   14001393c:	test   r15d,r15d
   14001393f:	je     0x140013993
   140013941:	mov    rax,QWORD PTR [rdi]
   140013944:	cmp    DWORD PTR [rax+0x8],0x0
   140013948:	jne    0x140013993
   14001394a:	cmp    ecx,edx
   14001394c:	ja     0x140013993
   14001394e:	cmp    ecx,edx
   140013950:	mov    ebx,ecx
   140013952:	cmova  ebx,edx
   140013955:	cmp    r15d,0x4
   140013959:	jne    0x14001396e
   14001395b:	mov    rax,QWORD PTR [rdi]
   14001395e:	cmp    DWORD PTR [rax+0x8],0x0
   140013962:	jne    0x14001396e
   140013964:	cmp    ebx,ecx
   140013966:	jne    0x14001396e
   140013968:	lea    ebp,[r15-0x3]
   14001396c:	jmp    0x140013970
   14001396e:	xor    ebp,ebp
   140013970:	mov    rdx,r8
   140013973:	mov    r9d,ebp
   140013976:	add    rdx,QWORD PTR [rdi+0x50]
   14001397a:	mov    r8d,ebx
   14001397d:	mov    rcx,rdi
   140013980:	call   0x140016f58
   140013985:	mov    rcx,QWORD PTR [rdi]
   140013988:	add    DWORD PTR [rdi+0x84],ebx
   14001398e:	call   0x140013108
   140013993:	neg    ebp
   140013995:	sbb    eax,eax
   140013997:	and    eax,0x2
   14001399a:	mov    rbx,QWORD PTR [rsp+0x58]
   14001399f:	mov    rbp,QWORD PTR [rsp+0x60]
   1400139a4:	mov    rsi,QWORD PTR [rsp+0x68]
   1400139a9:	add    rsp,0x20
   1400139ad:	pop    r15
   1400139af:	pop    r14
   1400139b1:	pop    r13
   1400139b3:	pop    r12
   1400139b5:	pop    rdi
   1400139b6:	ret    
   1400139b7:	int3   
   1400139b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400139bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400139c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400139c7:	push   rdi
   1400139c8:	push   r12
   1400139ca:	push   r15
   1400139cc:	sub    rsp,0x20
   1400139d0:	xor    edi,edi
   1400139d2:	lea    r15,[rip+0xfffffffffffec627]        # 0x140000000
   1400139d9:	mov    esi,edx
   1400139db:	mov    rbx,rcx
   1400139de:	mov    r12d,0x100
   1400139e4:	lea    ebp,[rdi+0x1]
   1400139e7:	mov    eax,DWORD PTR [rbx+0x9c]
   1400139ed:	cmp    eax,0x106
   1400139f2:	jae    0x140013a19
   1400139f4:	mov    rcx,rbx
   1400139f7:	call   0x1400133e4
   1400139fc:	mov    eax,DWORD PTR [rbx+0x9c]
   140013a02:	cmp    eax,0x106
   140013a07:	jae    0x140013a11
   140013a09:	test   esi,esi
   140013a0b:	je     0x140013cd4
   140013a11:	test   eax,eax
   140013a13:	je     0x140013cef
   140013a19:	cmp    eax,0x3
   140013a1c:	jb     0x140013ab2
   140013a22:	mov    rax,QWORD PTR [rbx+0x50]
   140013a26:	mov    r9d,DWORD PTR [rbx+0x94]
   140013a2d:	mov    rdx,QWORD PTR [rbx+0x68]
   140013a31:	lea    ecx,[r9+0x2]
   140013a35:	movzx  r8d,BYTE PTR [rcx+rax*1]
   140013a3a:	mov    eax,DWORD PTR [rbx+0x70]
   140013a3d:	mov    ecx,DWORD PTR [rbx+0x80]
   140013a43:	shl    eax,cl
   140013a45:	mov    rcx,QWORD PTR [rbx+0x60]
   140013a49:	xor    r8d,eax
   140013a4c:	and    r8d,DWORD PTR [rbx+0x7c]
   140013a50:	mov    eax,DWORD PTR [rbx+0x4c]
   140013a53:	and    r9,rax
   140013a56:	mov    DWORD PTR [rbx+0x70],r8d
   140013a5a:	movzx  eax,WORD PTR [rdx+r8*2]
   140013a5f:	mov    WORD PTR [rcx+r9*2],ax
   140013a64:	mov    eax,DWORD PTR [rbx+0x4c]
   140013a67:	mov    ecx,DWORD PTR [rbx+0x94]
   140013a6d:	mov    r8d,DWORD PTR [rbx+0x70]
   140013a71:	and    rcx,rax
   140013a74:	mov    rax,QWORD PTR [rbx+0x60]
   140013a78:	movzx  edx,WORD PTR [rax+rcx*2]
   140013a7c:	mov    rcx,QWORD PTR [rbx+0x68]
   140013a80:	movzx  eax,WORD PTR [rbx+0x94]
   140013a87:	mov    WORD PTR [rcx+r8*2],ax
   140013a8c:	test   edx,edx
   140013a8e:	je     0x140013ab2
   140013a90:	mov    ecx,DWORD PTR [rbx+0x94]
   140013a96:	mov    eax,DWORD PTR [rbx+0x44]
   140013a99:	sub    ecx,edx
   140013a9b:	sub    eax,0x106
   140013aa0:	cmp    ecx,eax
   140013aa2:	ja     0x140013ab2
   140013aa4:	mov    rcx,rbx
   140013aa7:	call   0x140013228
   140013aac:	mov    DWORD PTR [rbx+0x88],eax
   140013ab2:	cmp    DWORD PTR [rbx+0x88],0x3
   140013ab9:	jb     0x140013c23
   140013abf:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140013ac5:	mov    rax,QWORD PTR [rbx+0x16f8]
   140013acc:	movzx  r8d,WORD PTR [rbx+0x94]
   140013ad4:	sub    r8w,WORD PTR [rbx+0x98]
   140013adc:	mov    dl,BYTE PTR [rbx+0x88]
   140013ae2:	mov    WORD PTR [rax+rcx*2],r8w
   140013ae7:	sub    dl,0x3
   140013aea:	mov    rax,QWORD PTR [rbx+0x16e8]
   140013af1:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140013af7:	mov    BYTE PTR [rcx+rax*1],dl
   140013afa:	mov    eax,0xffff
   140013aff:	add    DWORD PTR [rbx+0x16f4],ebp
   140013b05:	add    r8w,ax
   140013b09:	movzx  eax,dl
   140013b0c:	movzx  eax,BYTE PTR [rax+r15*1+0x610a0]
   140013b15:	add    WORD PTR [rbx+rax*4+0x4c0],bp
   140013b1d:	cmp    r8w,r12w
   140013b21:	jae    0x140013b29
   140013b23:	movzx  eax,r8w
   140013b27:	jmp    0x140013b33
   140013b29:	movzx  eax,r8w
   140013b2d:	shr    eax,0x7
   140013b30:	add    eax,r12d
   140013b33:	mov    cl,BYTE PTR [rax+r15*1+0x611a0]
   140013b3b:	mov    r10d,edi
   140013b3e:	movzx  eax,cl
   140013b41:	add    WORD PTR [rbx+rax*4+0x9b0],bp
   140013b49:	mov    eax,DWORD PTR [rbx+0x16f0]
   140013b4f:	sub    eax,ebp
   140013b51:	cmp    DWORD PTR [rbx+0x16f4],eax
   140013b57:	mov    eax,DWORD PTR [rbx+0x88]
   140013b5d:	sete   r10b
   140013b61:	sub    DWORD PTR [rbx+0x9c],eax
   140013b67:	cmp    eax,DWORD PTR [rbx+0xa8]
   140013b6d:	ja     0x140013be8
   140013b6f:	cmp    DWORD PTR [rbx+0x9c],0x3
   140013b76:	jb     0x140013be8
   140013b78:	dec    eax
   140013b7a:	mov    DWORD PTR [rbx+0x88],eax
   140013b80:	add    DWORD PTR [rbx+0x94],ebp
   140013b86:	mov    rax,QWORD PTR [rbx+0x50]
   140013b8a:	mov    r9d,DWORD PTR [rbx+0x94]
   140013b91:	mov    rdx,QWORD PTR [rbx+0x68]
   140013b95:	lea    ecx,[r9+0x2]
   140013b99:	movzx  r8d,BYTE PTR [rcx+rax*1]
   140013b9e:	mov    eax,DWORD PTR [rbx+0x70]
   140013ba1:	mov    ecx,DWORD PTR [rbx+0x80]
   140013ba7:	shl    eax,cl
   140013ba9:	mov    rcx,QWORD PTR [rbx+0x60]
   140013bad:	xor    r8d,eax
   140013bb0:	and    r8d,DWORD PTR [rbx+0x7c]
   140013bb4:	mov    eax,DWORD PTR [rbx+0x4c]
   140013bb7:	and    r9,rax
   140013bba:	mov    DWORD PTR [rbx+0x70],r8d
   140013bbe:	movzx  eax,WORD PTR [rdx+r8*2]
   140013bc3:	mov    WORD PTR [rcx+r9*2],ax
   140013bc8:	mov    edx,DWORD PTR [rbx+0x70]
   140013bcb:	mov    rcx,QWORD PTR [rbx+0x68]
   140013bcf:	movzx  eax,WORD PTR [rbx+0x94]
   140013bd6:	mov    WORD PTR [rcx+rdx*2],ax
   140013bda:	add    DWORD PTR [rbx+0x88],0xffffffff
   140013be1:	jne    0x140013b80
   140013be3:	jmp    0x140013c7b
   140013be8:	add    DWORD PTR [rbx+0x94],eax
   140013bee:	mov    eax,DWORD PTR [rbx+0x94]
   140013bf4:	mov    rdx,QWORD PTR [rbx+0x50]
   140013bf8:	mov    ecx,DWORD PTR [rbx+0x80]
   140013bfe:	mov    DWORD PTR [rbx+0x88],edi
   140013c04:	movzx  r8d,BYTE PTR [rax+rdx*1]
   140013c09:	mov    DWORD PTR [rbx+0x70],r8d
   140013c0d:	shl    r8d,cl
   140013c10:	inc    eax
   140013c12:	movzx  eax,BYTE PTR [rax+rdx*1]
   140013c16:	xor    r8d,eax
   140013c19:	and    r8d,DWORD PTR [rbx+0x7c]
   140013c1d:	mov    DWORD PTR [rbx+0x70],r8d
   140013c21:	jmp    0x140013c81
   140013c23:	mov    ecx,DWORD PTR [rbx+0x94]
   140013c29:	mov    r10d,edi
   140013c2c:	mov    rax,QWORD PTR [rbx+0x50]
   140013c30:	movzx  edx,BYTE PTR [rcx+rax*1]
   140013c34:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140013c3a:	mov    rax,QWORD PTR [rbx+0x16f8]
   140013c41:	mov    WORD PTR [rax+rcx*2],di
   140013c45:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140013c4b:	mov    rax,QWORD PTR [rbx+0x16e8]
   140013c52:	mov    BYTE PTR [rcx+rax*1],dl
   140013c55:	add    DWORD PTR [rbx+0x16f4],ebp
   140013c5b:	add    WORD PTR [rbx+rdx*4+0xbc],bp
   140013c63:	mov    eax,DWORD PTR [rbx+0x16f0]
   140013c69:	sub    eax,ebp
   140013c6b:	cmp    DWORD PTR [rbx+0x16f4],eax
   140013c71:	sete   r10b
   140013c75:	dec    DWORD PTR [rbx+0x9c]
   140013c7b:	add    DWORD PTR [rbx+0x94],ebp
   140013c81:	test   r10d,r10d
   140013c84:	je     0x1400139e7
   140013c8a:	mov    eax,DWORD PTR [rbx+0x84]
   140013c90:	test   eax,eax
   140013c92:	js     0x140013c9c
   140013c94:	mov    edx,eax
   140013c96:	add    rdx,QWORD PTR [rbx+0x50]
   140013c9a:	jmp    0x140013c9f
   140013c9c:	mov    rdx,rdi
   140013c9f:	mov    r8d,DWORD PTR [rbx+0x94]
   140013ca6:	xor    r9d,r9d
   140013ca9:	sub    r8d,eax
   140013cac:	mov    rcx,rbx
   140013caf:	call   0x140017054
   140013cb4:	mov    eax,DWORD PTR [rbx+0x94]
   140013cba:	mov    rcx,QWORD PTR [rbx]
   140013cbd:	mov    DWORD PTR [rbx+0x84],eax
   140013cc3:	call   0x140013108
   140013cc8:	mov    rax,QWORD PTR [rbx]
   140013ccb:	cmp    DWORD PTR [rax+0x18],edi
   140013cce:	jne    0x1400139e7
   140013cd4:	xor    eax,eax
   140013cd6:	mov    rbx,QWORD PTR [rsp+0x40]
   140013cdb:	mov    rbp,QWORD PTR [rsp+0x48]
   140013ce0:	mov    rsi,QWORD PTR [rsp+0x50]
   140013ce5:	add    rsp,0x20
   140013ce9:	pop    r15
   140013ceb:	pop    r12
   140013ced:	pop    rdi
   140013cee:	ret    
   140013cef:	mov    ecx,DWORD PTR [rbx+0x94]
   140013cf5:	mov    eax,0x2
   140013cfa:	cmp    ecx,eax
   140013cfc:	cmovb  eax,ecx
   140013cff:	mov    DWORD PTR [rbx+0x170c],eax
   140013d05:	cmp    esi,0x4
   140013d08:	jne    0x140013d52
   140013d0a:	mov    eax,DWORD PTR [rbx+0x84]
   140013d10:	test   eax,eax
   140013d12:	js     0x140013d1a
   140013d14:	mov    edi,eax
   140013d16:	add    rdi,QWORD PTR [rbx+0x50]
   140013d1a:	sub    ecx,eax
   140013d1c:	mov    r9d,ebp
   140013d1f:	mov    r8d,ecx
   140013d22:	mov    rdx,rdi
   140013d25:	mov    rcx,rbx
   140013d28:	call   0x140017054
   140013d2d:	mov    eax,DWORD PTR [rbx+0x94]
   140013d33:	mov    rcx,QWORD PTR [rbx]
   140013d36:	mov    DWORD PTR [rbx+0x84],eax
   140013d3c:	call   0x140013108
   140013d41:	mov    rax,QWORD PTR [rbx]
   140013d44:	mov    ecx,DWORD PTR [rax+0x18]
   140013d47:	neg    ecx
   140013d49:	sbb    eax,eax
   140013d4b:	neg    eax
   140013d4d:	add    eax,0x2
   140013d50:	jmp    0x140013cd6
   140013d52:	cmp    DWORD PTR [rbx+0x16f4],edi
   140013d58:	je     0x140013d9f
   140013d5a:	mov    eax,DWORD PTR [rbx+0x84]
   140013d60:	test   eax,eax
   140013d62:	js     0x140013d6c
   140013d64:	mov    edx,eax
   140013d66:	add    rdx,QWORD PTR [rbx+0x50]
   140013d6a:	jmp    0x140013d6f
   140013d6c:	mov    rdx,rdi
   140013d6f:	sub    ecx,eax
   140013d71:	xor    r9d,r9d
   140013d74:	mov    r8d,ecx
   140013d77:	mov    rcx,rbx
   140013d7a:	call   0x140017054
   140013d7f:	mov    eax,DWORD PTR [rbx+0x94]
   140013d85:	mov    rcx,QWORD PTR [rbx]
   140013d88:	mov    DWORD PTR [rbx+0x84],eax
   140013d8e:	call   0x140013108
   140013d93:	mov    rax,QWORD PTR [rbx]
   140013d96:	cmp    DWORD PTR [rax+0x18],edi
   140013d99:	je     0x140013cd4
   140013d9f:	mov    eax,ebp
   140013da1:	jmp    0x140013cd6
   140013da6:	int3   
   140013da7:	int3   
   140013da8:	mov    QWORD PTR [rsp+0x8],rbx
   140013dad:	mov    QWORD PTR [rsp+0x10],rbp
   140013db2:	mov    QWORD PTR [rsp+0x18],rsi
   140013db7:	push   rdi
   140013db8:	push   r14
   140013dba:	push   r15
   140013dbc:	sub    rsp,0x20
   140013dc0:	xor    edi,edi
   140013dc2:	mov    r14d,edx
   140013dc5:	mov    rbx,rcx
   140013dc8:	lea    r15d,[rdi+0x1]
   140013dcc:	lea    rsi,[rip+0xfffffffffffec22d]        # 0x140000000
   140013dd3:	mov    eax,DWORD PTR [rbx+0x9c]
   140013dd9:	cmp    eax,0x106
   140013dde:	jae    0x140013e06
   140013de0:	mov    rcx,rbx
   140013de3:	call   0x1400133e4
   140013de8:	mov    eax,DWORD PTR [rbx+0x9c]
   140013dee:	cmp    eax,0x106
   140013df3:	jae    0x140013dfe
   140013df5:	test   r14d,r14d
   140013df8:	je     0x1400140b9
   140013dfe:	test   eax,eax
   140013e00:	je     0x1400141a8
   140013e06:	mov    r8d,edi
   140013e09:	cmp    eax,0x3
   140013e0c:	jb     0x140013e77
   140013e0e:	mov    rax,QWORD PTR [rbx+0x50]
   140013e12:	mov    r9d,DWORD PTR [rbx+0x94]
   140013e19:	mov    rdx,QWORD PTR [rbx+0x68]
   140013e1d:	lea    ecx,[r9+0x2]
   140013e21:	movzx  r8d,BYTE PTR [rcx+rax*1]
   140013e26:	mov    eax,DWORD PTR [rbx+0x70]
   140013e29:	mov    ecx,DWORD PTR [rbx+0x80]
   140013e2f:	shl    eax,cl
   140013e31:	mov    rcx,QWORD PTR [rbx+0x60]
   140013e35:	xor    r8d,eax
   140013e38:	and    r8d,DWORD PTR [rbx+0x7c]
   140013e3c:	mov    eax,DWORD PTR [rbx+0x4c]
   140013e3f:	and    r9,rax
   140013e42:	mov    DWORD PTR [rbx+0x70],r8d
   140013e46:	movzx  eax,WORD PTR [rdx+r8*2]
   140013e4b:	mov    WORD PTR [rcx+r9*2],ax
   140013e50:	mov    eax,DWORD PTR [rbx+0x4c]
   140013e53:	mov    ecx,DWORD PTR [rbx+0x94]
   140013e59:	mov    edx,DWORD PTR [rbx+0x70]
   140013e5c:	and    rcx,rax
   140013e5f:	mov    rax,QWORD PTR [rbx+0x60]
   140013e63:	movzx  r8d,WORD PTR [rax+rcx*2]
   140013e68:	mov    rcx,QWORD PTR [rbx+0x68]
   140013e6c:	movzx  eax,WORD PTR [rbx+0x94]
   140013e73:	mov    WORD PTR [rcx+rdx*2],ax
   140013e77:	mov    ecx,DWORD PTR [rbx+0x88]
   140013e7d:	mov    eax,DWORD PTR [rbx+0x98]
   140013e83:	mov    DWORD PTR [rbx+0xa0],ecx
   140013e89:	mov    DWORD PTR [rbx+0x8c],eax
   140013e8f:	mov    DWORD PTR [rbx+0x88],0x2
   140013e99:	test   r8d,r8d
   140013e9c:	je     0x140013efc
   140013e9e:	cmp    ecx,DWORD PTR [rbx+0xa8]
   140013ea4:	jae    0x140013efc
   140013ea6:	mov    ecx,DWORD PTR [rbx+0x94]
   140013eac:	mov    eax,DWORD PTR [rbx+0x44]
   140013eaf:	sub    ecx,r8d
   140013eb2:	sub    eax,0x106
   140013eb7:	cmp    ecx,eax
   140013eb9:	ja     0x140013efc
   140013ebb:	mov    edx,r8d
   140013ebe:	mov    rcx,rbx
   140013ec1:	call   0x140013228
   140013ec6:	mov    DWORD PTR [rbx+0x88],eax
   140013ecc:	cmp    eax,0x5
   140013ecf:	ja     0x140013efc
   140013ed1:	cmp    DWORD PTR [rbx+0xb0],r15d
   140013ed8:	je     0x140013ef2
   140013eda:	cmp    eax,0x3
   140013edd:	jne    0x140013efc
   140013edf:	mov    eax,DWORD PTR [rbx+0x94]
   140013ee5:	sub    eax,DWORD PTR [rbx+0x98]
   140013eeb:	cmp    eax,0x1000
   140013ef0:	jbe    0x140013efc
   140013ef2:	mov    DWORD PTR [rbx+0x88],0x2
   140013efc:	mov    eax,DWORD PTR [rbx+0xa0]
   140013f02:	cmp    eax,0x3
   140013f05:	jb     0x1400140d4
   140013f0b:	cmp    DWORD PTR [rbx+0x88],eax
   140013f11:	ja     0x1400140d4
   140013f17:	mov    ecx,DWORD PTR [rbx+0x94]
   140013f1d:	mov    dl,al
   140013f1f:	mov    ebp,DWORD PTR [rbx+0x9c]
   140013f25:	add    ecx,0xfffffffd
   140013f28:	movzx  r8d,WORD PTR [rbx+0x94]
   140013f30:	add    ebp,ecx
   140013f32:	sub    r8w,WORD PTR [rbx+0x8c]
   140013f3a:	sub    dl,0x3
   140013f3d:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140013f43:	sub    r8w,r15w
   140013f47:	mov    rax,QWORD PTR [rbx+0x16f8]
   140013f4e:	mov    WORD PTR [rax+rcx*2],r8w
   140013f53:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140013f59:	mov    rax,QWORD PTR [rbx+0x16e8]
   140013f60:	mov    BYTE PTR [rcx+rax*1],dl
   140013f63:	mov    eax,0xffff
   140013f68:	add    DWORD PTR [rbx+0x16f4],r15d
   140013f6f:	add    r8w,ax
   140013f73:	movzx  eax,dl
   140013f76:	mov    ecx,0x100
   140013f7b:	movzx  eax,BYTE PTR [rax+rsi*1+0x610a0]
   140013f83:	add    WORD PTR [rbx+rax*4+0x4c0],r15w
   140013f8c:	cmp    r8w,cx
   140013f90:	jae    0x140013f98
   140013f92:	movzx  eax,r8w
   140013f96:	jmp    0x140013fa1
   140013f98:	movzx  eax,r8w
   140013f9c:	shr    eax,0x7
   140013f9f:	add    eax,ecx
   140013fa1:	mov    cl,BYTE PTR [rax+rsi*1+0x611a0]
   140013fa8:	movzx  eax,cl
   140013fab:	add    WORD PTR [rbx+rax*4+0x9b0],r15w
   140013fb4:	mov    eax,r15d
   140013fb7:	mov    ecx,DWORD PTR [rbx+0xa0]
   140013fbd:	sub    eax,ecx
   140013fbf:	mov    r10d,DWORD PTR [rbx+0x16f0]
   140013fc6:	mov    esi,DWORD PTR [rbx+0x16f4]
   140013fcc:	sub    r10d,r15d
   140013fcf:	add    DWORD PTR [rbx+0x9c],eax
   140013fd5:	lea    eax,[rcx-0x2]
   140013fd8:	mov    DWORD PTR [rbx+0xa0],eax
   140013fde:	add    DWORD PTR [rbx+0x94],r15d
   140013fe5:	mov    r11d,DWORD PTR [rbx+0x94]
   140013fec:	cmp    r11d,ebp
   140013fef:	ja     0x14001403f
   140013ff1:	mov    rax,QWORD PTR [rbx+0x50]
   140013ff5:	lea    ecx,[r11+0x2]
   140013ff9:	mov    rdx,QWORD PTR [rbx+0x68]
   140013ffd:	mov    r8d,DWORD PTR [rbx+0x4c]
   140014001:	movzx  r9d,BYTE PTR [rcx+rax*1]
   140014006:	mov    eax,DWORD PTR [rbx+0x70]
   140014009:	mov    ecx,DWORD PTR [rbx+0x80]
   14001400f:	shl    eax,cl
   140014011:	mov    rcx,QWORD PTR [rbx+0x60]
   140014015:	xor    r9d,eax
   140014018:	and    r9d,DWORD PTR [rbx+0x7c]
   14001401c:	mov    DWORD PTR [rbx+0x70],r9d
   140014020:	and    r8,r11
   140014023:	movzx  eax,WORD PTR [rdx+r9*2]
   140014028:	mov    WORD PTR [rcx+r8*2],ax
   14001402d:	mov    edx,DWORD PTR [rbx+0x70]
   140014030:	mov    rcx,QWORD PTR [rbx+0x68]
   140014034:	movzx  eax,WORD PTR [rbx+0x94]
   14001403b:	mov    WORD PTR [rcx+rdx*2],ax
   14001403f:	add    DWORD PTR [rbx+0xa0],0xffffffff
   140014046:	jne    0x140013fde
   140014048:	add    DWORD PTR [rbx+0x94],r15d
   14001404f:	mov    r8d,DWORD PTR [rbx+0x94]
   140014056:	cmp    esi,r10d
   140014059:	lea    rsi,[rip+0xfffffffffffebfa0]        # 0x140000000
   140014060:	mov    DWORD PTR [rbx+0x90],edi
   140014066:	mov    DWORD PTR [rbx+0x88],0x2
   140014070:	jne    0x140013dd3
   140014076:	mov    eax,DWORD PTR [rbx+0x84]
   14001407c:	test   eax,eax
   14001407e:	js     0x140014088
   140014080:	mov    edx,eax
   140014082:	add    rdx,QWORD PTR [rbx+0x50]
   140014086:	jmp    0x14001408b
   140014088:	mov    rdx,rdi
   14001408b:	sub    r8d,eax
   14001408e:	xor    r9d,r9d
   140014091:	mov    rcx,rbx
   140014094:	call   0x140017054
   140014099:	mov    eax,DWORD PTR [rbx+0x94]
   14001409f:	mov    rcx,QWORD PTR [rbx]
   1400140a2:	mov    DWORD PTR [rbx+0x84],eax
   1400140a8:	call   0x140013108
   1400140ad:	mov    rax,QWORD PTR [rbx]
   1400140b0:	cmp    DWORD PTR [rax+0x18],edi
   1400140b3:	jne    0x140013dcc
   1400140b9:	xor    eax,eax
   1400140bb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400140c0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400140c5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400140ca:	add    rsp,0x20
   1400140ce:	pop    r15
   1400140d0:	pop    r14
   1400140d2:	pop    rdi
   1400140d3:	ret    
   1400140d4:	cmp    DWORD PTR [rbx+0x90],edi
   1400140da:	je     0x14001418f
   1400140e0:	mov    ecx,DWORD PTR [rbx+0x94]
   1400140e6:	mov    rax,QWORD PTR [rbx+0x50]
   1400140ea:	sub    ecx,r15d
   1400140ed:	movzx  edx,BYTE PTR [rcx+rax*1]
   1400140f1:	mov    ecx,DWORD PTR [rbx+0x16f4]
   1400140f7:	mov    rax,QWORD PTR [rbx+0x16f8]
   1400140fe:	mov    WORD PTR [rax+rcx*2],di
   140014102:	mov    ecx,DWORD PTR [rbx+0x16f4]
   140014108:	mov    rax,QWORD PTR [rbx+0x16e8]
   14001410f:	mov    BYTE PTR [rcx+rax*1],dl
   140014112:	add    DWORD PTR [rbx+0x16f4],r15d
   140014119:	add    WORD PTR [rbx+rdx*4+0xbc],r15w
   140014122:	mov    eax,DWORD PTR [rbx+0x16f0]
   140014128:	sub    eax,r15d
   14001412b:	cmp    DWORD PTR [rbx+0x16f4],eax
   140014131:	jne    0x140014171
   140014133:	mov    eax,DWORD PTR [rbx+0x84]
   140014139:	test   eax,eax
   14001413b:	js     0x140014145
   14001413d:	mov    edx,eax
   14001413f:	add    rdx,QWORD PTR [rbx+0x50]
   140014143:	jmp    0x140014148
   140014145:	mov    rdx,rdi
   140014148:	mov    r8d,DWORD PTR [rbx+0x94]
   14001414f:	xor    r9d,r9d
   140014152:	sub    r8d,eax
   140014155:	mov    rcx,rbx
   140014158:	call   0x140017054
   14001415d:	mov    eax,DWORD PTR [rbx+0x94]
   140014163:	mov    rcx,QWORD PTR [rbx]
   140014166:	mov    DWORD PTR [rbx+0x84],eax
   14001416c:	call   0x140013108
   140014171:	mov    rax,QWORD PTR [rbx]
   140014174:	add    DWORD PTR [rbx+0x94],r15d
   14001417b:	dec    DWORD PTR [rbx+0x9c]
   140014181:	cmp    DWORD PTR [rax+0x18],edi
   140014184:	je     0x1400140b9
   14001418a:	jmp    0x140013dd3
   14001418f:	add    DWORD PTR [rbx+0x94],r15d
   140014196:	dec    DWORD PTR [rbx+0x9c]
   14001419c:	mov    DWORD PTR [rbx+0x90],r15d
   1400141a3:	jmp    0x140013dd3
   1400141a8:	cmp    DWORD PTR [rbx+0x90],edi
   1400141ae:	je     0x1400141f8
   1400141b0:	mov    ecx,DWORD PTR [rbx+0x94]
   1400141b6:	mov    rax,QWORD PTR [rbx+0x50]
   1400141ba:	sub    ecx,r15d
   1400141bd:	movzx  edx,BYTE PTR [rcx+rax*1]
   1400141c1:	mov    ecx,DWORD PTR [rbx+0x16f4]
   1400141c7:	mov    rax,QWORD PTR [rbx+0x16f8]
   1400141ce:	mov    WORD PTR [rax+rcx*2],di
   1400141d2:	mov    ecx,DWORD PTR [rbx+0x16f4]
   1400141d8:	mov    rax,QWORD PTR [rbx+0x16e8]
   1400141df:	mov    BYTE PTR [rcx+rax*1],dl
   1400141e2:	add    DWORD PTR [rbx+0x16f4],r15d
   1400141e9:	add    WORD PTR [rbx+rdx*4+0xbc],r15w
   1400141f2:	mov    DWORD PTR [rbx+0x90],edi
   1400141f8:	mov    ecx,DWORD PTR [rbx+0x94]
   1400141fe:	mov    eax,0x2
   140014203:	cmp    ecx,eax
   140014205:	cmovb  eax,ecx
   140014208:	mov    DWORD PTR [rbx+0x170c],eax
   14001420e:	cmp    r14d,0x4
   140014212:	jne    0x14001425f
   140014214:	mov    eax,DWORD PTR [rbx+0x84]
   14001421a:	test   eax,eax
   14001421c:	js     0x140014224
   14001421e:	mov    edi,eax
   140014220:	add    rdi,QWORD PTR [rbx+0x50]
   140014224:	sub    ecx,eax
   140014226:	mov    r9d,r15d
   140014229:	mov    r8d,ecx
   14001422c:	mov    rdx,rdi
   14001422f:	mov    rcx,rbx
   140014232:	call   0x140017054
   140014237:	mov    eax,DWORD PTR [rbx+0x94]
   14001423d:	mov    rcx,QWORD PTR [rbx]
   140014240:	mov    DWORD PTR [rbx+0x84],eax
   140014246:	call   0x140013108
   14001424b:	mov    rax,QWORD PTR [rbx]
   14001424e:	mov    ecx,DWORD PTR [rax+0x18]
   140014251:	neg    ecx
   140014253:	sbb    eax,eax
   140014255:	neg    eax
   140014257:	add    eax,0x2
   14001425a:	jmp    0x1400140bb
   14001425f:	cmp    DWORD PTR [rbx+0x16f4],edi
   140014265:	je     0x1400142ac
   140014267:	mov    eax,DWORD PTR [rbx+0x84]
   14001426d:	test   eax,eax
   14001426f:	js     0x140014279
   140014271:	mov    edx,eax
   140014273:	add    rdx,QWORD PTR [rbx+0x50]
   140014277:	jmp    0x14001427c
   140014279:	mov    rdx,rdi
   14001427c:	sub    ecx,eax
   14001427e:	xor    r9d,r9d
   140014281:	mov    r8d,ecx
   140014284:	mov    rcx,rbx
   140014287:	call   0x140017054
   14001428c:	mov    eax,DWORD PTR [rbx+0x94]
   140014292:	mov    rcx,QWORD PTR [rbx]
   140014295:	mov    DWORD PTR [rbx+0x84],eax
   14001429b:	call   0x140013108
   1400142a0:	mov    rax,QWORD PTR [rbx]
   1400142a3:	cmp    DWORD PTR [rax+0x18],edi
   1400142a6:	je     0x1400140b9
   1400142ac:	mov    eax,r15d
   1400142af:	jmp    0x1400140bb
   1400142b4:	test   rcx,rcx
   1400142b7:	je     0x1400142e5
   1400142b9:	cmp    QWORD PTR [rcx+0x30],0x0
   1400142be:	je     0x1400142e5
   1400142c0:	cmp    QWORD PTR [rcx+0x38],0x0
   1400142c5:	je     0x1400142e5
   1400142c7:	mov    rax,QWORD PTR [rcx+0x28]
   1400142cb:	test   rax,rax
   1400142ce:	je     0x1400142e5
   1400142d0:	cmp    QWORD PTR [rax],rcx
   1400142d3:	jne    0x1400142e5
   1400142d5:	mov    eax,DWORD PTR [rax+0x8]
   1400142d8:	sub    eax,0x3f34
   1400142dd:	cmp    eax,0x1f
   1400142e0:	ja     0x1400142e5
   1400142e2:	xor    eax,eax
   1400142e4:	ret    
   1400142e5:	mov    eax,0x1
   1400142ea:	ret    
   1400142eb:	int3   
   1400142ec:	sub    rsp,0x28
   1400142f0:	call   0x1400142b4
   1400142f5:	xor    edx,edx
   1400142f7:	test   eax,eax
   1400142f9:	je     0x140014303
   1400142fb:	lea    eax,[rdx-0x2]
   1400142fe:	jmp    0x140014383
   140014303:	mov    rax,QWORD PTR [rcx+0x28]
   140014307:	mov    QWORD PTR [rax+0x34],rdx
   14001430b:	mov    DWORD PTR [rax+0x3c],edx
   14001430e:	call   0x1400142b4
   140014313:	test   eax,eax
   140014315:	je     0x14001431e
   140014317:	mov    edx,0xfffffffe
   14001431c:	jmp    0x140014381
   14001431e:	mov    rax,QWORD PTR [rcx+0x28]
   140014322:	mov    DWORD PTR [rax+0x24],edx
   140014325:	mov    DWORD PTR [rcx+0x1c],edx
   140014328:	mov    DWORD PTR [rcx+0xc],edx
   14001432b:	mov    QWORD PTR [rcx+0x20],rdx
   14001432f:	mov    r8d,DWORD PTR [rax+0x10]
   140014333:	test   r8d,r8d
   140014336:	je     0x140014340
   140014338:	and    r8d,0x1
   14001433c:	mov    DWORD PTR [rcx+0x4c],r8d
   140014340:	or     DWORD PTR [rax+0x1be4],0xffffffff
   140014347:	lea    rcx,[rax+0x550]
   14001434e:	mov    QWORD PTR [rax+0x88],rcx
   140014355:	mov    QWORD PTR [rax+0x68],rcx
   140014359:	mov    QWORD PTR [rax+0x60],rcx
   14001435d:	mov    QWORD PTR [rax+0x8],0x3f34
   140014365:	mov    DWORD PTR [rax+0x14],edx
   140014368:	mov    DWORD PTR [rax+0x1c],0x8000
   14001436f:	mov    QWORD PTR [rax+0x28],rdx
   140014373:	mov    QWORD PTR [rax+0x48],rdx
   140014377:	mov    DWORD PTR [rax+0x1be0],0x1
   140014381:	mov    eax,edx
   140014383:	add    rsp,0x28
   140014387:	ret    
   140014388:	mov    rax,rsp
   14001438b:	mov    QWORD PTR [rax+0x8],rbx
   14001438f:	mov    QWORD PTR [rax+0x10],rbp
   140014393:	mov    QWORD PTR [rax+0x18],rsi
   140014397:	mov    QWORD PTR [rax+0x20],rdi
   14001439b:	push   r14
   14001439d:	sub    rsp,0x20
   1400143a1:	mov    edi,edx
   1400143a3:	mov    rbx,rcx
   1400143a6:	test   r8,r8
   1400143a9:	je     0x1400144b4
   1400143af:	cmp    BYTE PTR [r8],0x31
   1400143b3:	jne    0x1400144b4
   1400143b9:	cmp    r9d,0x58
   1400143bd:	jne    0x1400144b4
   1400143c3:	test   rcx,rcx
   1400143c6:	jne    0x1400143d0
   1400143c8:	lea    eax,[rcx-0x2]
   1400143cb:	jmp    0x1400144b9
   1400143d0:	and    QWORD PTR [rcx+0x20],0x0
   1400143d5:	cmp    QWORD PTR [rcx+0x30],0x0
   1400143da:	jne    0x1400143ec
   1400143dc:	and    QWORD PTR [rcx+0x40],0x0
   1400143e1:	lea    rax,[rip+0x34a0]        # 0x140017888
   1400143e8:	mov    QWORD PTR [rcx+0x30],rax
   1400143ec:	cmp    QWORD PTR [rcx+0x38],0x0
   1400143f1:	jne    0x1400143fe
   1400143f3:	lea    rax,[rip+0x349a]        # 0x140017894
   1400143fa:	mov    QWORD PTR [rcx+0x38],rax
   1400143fe:	mov    rcx,QWORD PTR [rcx+0x40]
   140014402:	mov    edx,0x1
   140014407:	mov    r8d,0x1bf0
   14001440d:	call   QWORD PTR [rbx+0x30]
   140014410:	mov    rsi,rax
   140014413:	test   rax,rax
   140014416:	jne    0x140014420
   140014418:	lea    eax,[rsi-0x4]
   14001441b:	jmp    0x1400144b9
   140014420:	mov    QWORD PTR [rbx+0x28],rsi
   140014424:	mov    rcx,rbx
   140014427:	and    QWORD PTR [rax+0x40],0x0
   14001442c:	mov    QWORD PTR [rax],rbx
   14001442f:	mov    DWORD PTR [rax+0x8],0x3f34
   140014436:	call   0x1400142b4
   14001443b:	test   eax,eax
   14001443d:	je     0x140014446
   14001443f:	mov    edi,0xfffffffe
   140014444:	jmp    0x1400144a1
   140014446:	mov    r14,QWORD PTR [rbx+0x28]
   14001444a:	test   edi,edi
   14001444c:	jns    0x140014454
   14001444e:	xor    ebp,ebp
   140014450:	neg    edi
   140014452:	jmp    0x140014464
   140014454:	mov    ebp,edi
   140014456:	sar    ebp,0x4
   140014459:	add    ebp,0x5
   14001445c:	cmp    edi,0x30
   14001445f:	jge    0x140014464
   140014461:	and    edi,0xf
   140014464:	test   edi,edi
   140014466:	je     0x140014470
   140014468:	lea    eax,[rdi-0x8]
   14001446b:	cmp    eax,0x7
   14001446e:	ja     0x14001443f
   140014470:	mov    rdx,QWORD PTR [r14+0x40]
   140014474:	test   rdx,rdx
   140014477:	je     0x14001448b
   140014479:	cmp    DWORD PTR [r14+0x30],edi
   14001447d:	je     0x14001448b
   14001447f:	mov    rcx,QWORD PTR [rbx+0x40]
   140014483:	call   QWORD PTR [rbx+0x38]
   140014486:	and    QWORD PTR [r14+0x40],0x0
   14001448b:	mov    rcx,rbx
   14001448e:	mov    DWORD PTR [r14+0x10],ebp
   140014492:	mov    DWORD PTR [r14+0x30],edi
   140014496:	call   0x1400142ec
   14001449b:	mov    edi,eax
   14001449d:	test   eax,eax
   14001449f:	je     0x1400144b0
   1400144a1:	mov    rcx,QWORD PTR [rbx+0x40]
   1400144a5:	mov    rdx,rsi
   1400144a8:	call   QWORD PTR [rbx+0x38]
   1400144ab:	and    QWORD PTR [rbx+0x28],0x0
   1400144b0:	mov    eax,edi
   1400144b2:	jmp    0x1400144b9
   1400144b4:	mov    eax,0xfffffffa
   1400144b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144be:	mov    rbp,QWORD PTR [rsp+0x38]
   1400144c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400144c8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400144cd:	add    rsp,0x20
   1400144d1:	pop    r14
   1400144d3:	ret    
   1400144d4:	mov    rax,rsp
   1400144d7:	mov    QWORD PTR [rax+0x8],rbx
   1400144db:	mov    QWORD PTR [rax+0x10],rbp
   1400144df:	mov    QWORD PTR [rax+0x18],rsi
   1400144e3:	mov    QWORD PTR [rax+0x20],rdi
   1400144e7:	push   r14
   1400144e9:	sub    rsp,0x20
   1400144ed:	mov    rbx,QWORD PTR [rcx+0x28]
   1400144f1:	xor    r14d,r14d
   1400144f4:	mov    ebp,r8d
   1400144f7:	mov    rsi,rdx
   1400144fa:	mov    rax,rcx
   1400144fd:	mov    edi,0x1
   140014502:	cmp    QWORD PTR [rbx+0x40],r14
   140014506:	jne    0x140014529
   140014508:	mov    ecx,DWORD PTR [rbx+0x30]
   14001450b:	mov    edx,edi
   14001450d:	shl    edx,cl
   14001450f:	mov    r8d,edi
   140014512:	mov    rcx,QWORD PTR [rax+0x40]
   140014516:	call   QWORD PTR [rax+0x30]
   140014519:	mov    QWORD PTR [rbx+0x40],rax
   14001451d:	test   rax,rax
   140014520:	jne    0x140014529
   140014522:	mov    eax,edi
   140014524:	jmp    0x1400145b4
   140014529:	cmp    DWORD PTR [rbx+0x34],r14d
   14001452d:	jne    0x14001453b
   14001452f:	mov    ecx,DWORD PTR [rbx+0x30]
   140014532:	shl    edi,cl
   140014534:	mov    DWORD PTR [rbx+0x34],edi
   140014537:	mov    QWORD PTR [rbx+0x38],r14
   14001453b:	mov    edi,DWORD PTR [rbx+0x34]
   14001453e:	cmp    ebp,edi
   140014540:	jb     0x14001455d
   140014542:	mov    rcx,QWORD PTR [rbx+0x40]
   140014546:	sub    rsi,rdi
   140014549:	mov    rdx,rsi
   14001454c:	mov    r8d,edi
   14001454f:	call   0x140028fd0
   140014554:	mov    DWORD PTR [rbx+0x3c],r14d
   140014558:	mov    eax,DWORD PTR [rbx+0x34]
   14001455b:	jmp    0x1400145af
   14001455d:	sub    edi,DWORD PTR [rbx+0x3c]
   140014560:	mov    rdx,rsi
   140014563:	mov    ecx,DWORD PTR [rbx+0x3c]
   140014566:	cmp    edi,ebp
   140014568:	cmova  edi,ebp
   14001456b:	add    rcx,QWORD PTR [rbx+0x40]
   14001456f:	mov    r8d,edi
   140014572:	sub    rdx,rbp
   140014575:	call   0x140028fd0
   14001457a:	sub    ebp,edi
   14001457c:	je     0x140014595
   14001457e:	mov    rcx,QWORD PTR [rbx+0x40]
   140014582:	mov    r8d,ebp
   140014585:	sub    rsi,r8
   140014588:	mov    rdx,rsi
   14001458b:	call   0x140028fd0
   140014590:	mov    DWORD PTR [rbx+0x3c],ebp
   140014593:	jmp    0x140014558
   140014595:	add    DWORD PTR [rbx+0x3c],edi
   140014598:	mov    eax,DWORD PTR [rbx+0x3c]
   14001459b:	cmp    eax,DWORD PTR [rbx+0x34]
   14001459e:	cmove  eax,r14d
   1400145a2:	mov    DWORD PTR [rbx+0x3c],eax
   1400145a5:	mov    eax,DWORD PTR [rbx+0x38]
   1400145a8:	cmp    eax,DWORD PTR [rbx+0x34]
   1400145ab:	jae    0x1400145b2
   1400145ad:	add    eax,edi
   1400145af:	mov    DWORD PTR [rbx+0x38],eax
   1400145b2:	xor    eax,eax
   1400145b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400145b9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400145be:	mov    rsi,QWORD PTR [rsp+0x40]
   1400145c3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400145c8:	add    rsp,0x20
   1400145cc:	pop    r14
   1400145ce:	ret    
   1400145cf:	int3   
   1400145d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400145d5:	mov    DWORD PTR [rsp+0x10],edx
   1400145d9:	push   rbp
   1400145da:	push   rsi
   1400145db:	push   rdi
   1400145dc:	push   r12
   1400145de:	push   r13
   1400145e0:	push   r14
   1400145e2:	push   r15
   1400145e4:	mov    rbp,rsp
   1400145e7:	sub    rsp,0x50
   1400145eb:	mov    ebx,edx
   1400145ed:	mov    r15,rcx
   1400145f0:	call   0x1400142b4
   1400145f5:	xor    ecx,ecx
   1400145f7:	test   eax,eax
   1400145f9:	jne    0x140015c00
   1400145ff:	cmp    QWORD PTR [r15+0x10],rcx
   140014603:	je     0x140015c00
   140014609:	cmp    QWORD PTR [r15],rcx
   14001460c:	jne    0x140014618
   14001460e:	cmp    DWORD PTR [r15+0x8],ecx
   140014612:	jne    0x140015c00
   140014618:	mov    rdi,QWORD PTR [r15+0x28]
   14001461c:	cmp    DWORD PTR [rdi+0x8],0x3f3f
   140014623:	jne    0x14001462c
   140014625:	mov    DWORD PTR [rdi+0x8],0x3f40
   14001462c:	mov    r8d,DWORD PTR [r15+0x18]
   140014630:	mov    edx,r8d
   140014633:	mov    eax,DWORD PTR [rdi+0x8]
   140014636:	mov    r9,QWORD PTR [r15+0x10]
   14001463a:	sub    eax,0x3f34
   14001463f:	mov    r10,QWORD PTR [r15]
   140014642:	mov    r13d,DWORD PTR [r15+0x8]
   140014646:	mov    r14d,DWORD PTR [rdi+0x48]
   14001464a:	mov    esi,DWORD PTR [rdi+0x4c]
   14001464d:	mov    QWORD PTR [rbp-0x8],r9
   140014651:	mov    DWORD PTR [rbp-0x20],r8d
   140014655:	mov    QWORD PTR [rbp-0x10],r10
   140014659:	mov    DWORD PTR [rbp-0x14],r13d
   14001465d:	mov    DWORD PTR [rbp+0x50],edx
   140014660:	mov    DWORD PTR [rbp+0x58],ecx
   140014663:	cmp    eax,0x1e
   140014666:	ja     0x140015c00
   14001466c:	cdqe   
   14001466e:	lea    rcx,[rip+0xfffffffffffeb98b]        # 0x140000000
   140014675:	lea    r11,[rdi+0x74]
   140014679:	lea    r12,[rdi+0x70]
   14001467d:	mov    ecx,DWORD PTR [rcx+rax*4+0x15c20]
   140014684:	lea    rax,[rip+0xfffffffffffeb975]        # 0x140000000
   14001468b:	add    rcx,rax
   14001468e:	jmp    rcx
   140014690:	xor    r12d,r12d
   140014693:	cmp    DWORD PTR [rdi+0x10],r12d
   140014697:	jne    0x1400146a5
   140014699:	mov    DWORD PTR [rdi+0x8],0x3f40
   1400146a0:	jmp    0x140014726
   1400146a5:	mov    r11d,0x10
   1400146ab:	jmp    0x1400146ce
   1400146ad:	test   r13d,r13d
   1400146b0:	je     0x140014e87
   1400146b6:	movzx  eax,BYTE PTR [r10]
   1400146ba:	mov    ecx,esi
   1400146bc:	shl    eax,cl
   1400146be:	inc    r10
   1400146c1:	add    r14d,eax
   1400146c4:	mov    QWORD PTR [rbp-0x10],r10
   1400146c8:	dec    r13d
   1400146cb:	add    esi,0x8
   1400146ce:	cmp    esi,r11d
   1400146d1:	jb     0x1400146ad
   1400146d3:	test   BYTE PTR [rdi+0x10],0x2
   1400146d7:	je     0x140014742
   1400146d9:	cmp    r14d,0x8b1f
   1400146e0:	jne    0x140014742
   1400146e2:	cmp    DWORD PTR [rdi+0x30],r12d
   1400146e6:	jne    0x1400146ef
   1400146e8:	mov    DWORD PTR [rdi+0x30],0xf
   1400146ef:	mov    r8d,0x2
   1400146f5:	mov    DWORD PTR [rdi+0x20],r12d
   1400146f9:	lea    rdx,[rbp-0x1c]
   1400146fd:	mov    WORD PTR [rbp-0x1c],0x8b1f
   140014703:	xor    ecx,ecx
   140014705:	call   0x140015cfc
   14001470a:	mov    DWORD PTR [rdi+0x20],eax
   14001470d:	mov    DWORD PTR [rdi+0x8],0x3f35
   140014714:	mov    esi,r12d
   140014717:	mov    r14d,r12d
   14001471a:	mov    r10,QWORD PTR [rbp-0x10]
   14001471e:	mov    r8d,DWORD PTR [rbp-0x20]
   140014722:	mov    r9,QWORD PTR [rbp-0x8]
   140014726:	mov    eax,DWORD PTR [rdi+0x8]
   140014729:	sub    eax,0x3f34
   14001472e:	cmp    eax,0x1e
   140014731:	ja     0x140015c00
   140014737:	mov    edx,DWORD PTR [rbp+0x50]
   14001473a:	mov    ebx,DWORD PTR [rbp+0x48]
   14001473d:	jmp    0x14001466c
   140014742:	mov    rax,QWORD PTR [rdi+0x28]
   140014746:	mov    DWORD PTR [rdi+0x18],r12d
   14001474a:	test   rax,rax
   14001474d:	je     0x140014753
   14001474f:	or     DWORD PTR [rax+0x40],0xffffffff
   140014753:	test   BYTE PTR [rdi+0x10],0x1
   140014757:	je     0x1400147fb
   14001475d:	movzx  ecx,r14b
   140014761:	mov    eax,r14d
   140014764:	shr    eax,0x8
   140014767:	shl    ecx,0x8
   14001476a:	add    ecx,eax
   14001476c:	mov    eax,0x8421085
   140014771:	mul    ecx
   140014773:	mov    eax,ecx
   140014775:	sub    eax,edx
   140014777:	shr    eax,1
   140014779:	add    eax,edx
   14001477b:	shr    eax,0x4
   14001477e:	imul   eax,eax,0x1f
   140014781:	cmp    ecx,eax
   140014783:	jne    0x1400147fb
   140014785:	mov    eax,r14d
   140014788:	and    al,0xf
   14001478a:	cmp    al,0x8
   14001478c:	je     0x140014797
   14001478e:	lea    rax,[rip+0x4fb33]        # 0x1400642c8
   140014795:	jmp    0x140014802
   140014797:	shr    r14d,0x4
   14001479b:	add    esi,0xfffffffc
   14001479e:	mov    ecx,r14d
   1400147a1:	and    ecx,0xf
   1400147a4:	add    ecx,0x8
   1400147a7:	cmp    DWORD PTR [rdi+0x30],r12d
   1400147ab:	jne    0x1400147b0
   1400147ad:	mov    DWORD PTR [rdi+0x30],ecx
   1400147b0:	cmp    ecx,0xf
   1400147b3:	ja     0x1400147f2
   1400147b5:	cmp    ecx,DWORD PTR [rdi+0x30]
   1400147b8:	ja     0x1400147f2
   1400147ba:	mov    eax,0x1
   1400147bf:	xor    r8d,r8d
   1400147c2:	shl    eax,cl
   1400147c4:	xor    edx,edx
   1400147c6:	xor    ecx,ecx
   1400147c8:	mov    DWORD PTR [rdi+0x1c],eax
   1400147cb:	call   0x14001789c
   1400147d0:	shr    r14d,0x8
   1400147d4:	not    r14d
   1400147d7:	mov    DWORD PTR [rdi+0x20],eax
   1400147da:	and    r14d,0x2
   1400147de:	mov    DWORD PTR [r15+0x4c],eax
   1400147e2:	or     r14d,0x3f3d
   1400147e9:	mov    DWORD PTR [rdi+0x8],r14d
   1400147ed:	jmp    0x140014714
   1400147f2:	lea    rax,[rip+0x4faef]        # 0x1400642e8
   1400147f9:	jmp    0x140014802
   1400147fb:	lea    rax,[rip+0x4faae]        # 0x1400642b0
   140014802:	mov    QWORD PTR [r15+0x20],rax
   140014806:	mov    DWORD PTR [rdi+0x8],0x3f51
   14001480d:	jmp    0x140014726
   140014812:	mov    r11d,0x10
   140014818:	xor    r12d,r12d
   14001481b:	cmp    esi,r11d
   14001481e:	jae    0x140014843
   140014820:	test   r13d,r13d
   140014823:	je     0x140014e87
   140014829:	movzx  eax,BYTE PTR [r10]
   14001482d:	mov    ecx,esi
   14001482f:	shl    eax,cl
   140014831:	inc    r10
   140014834:	add    r14d,eax
   140014837:	mov    QWORD PTR [rbp-0x10],r10
   14001483b:	dec    r13d
   14001483e:	add    esi,0x8
   140014841:	jmp    0x14001481b
   140014843:	mov    DWORD PTR [rdi+0x18],r14d
   140014847:	cmp    r14b,0x8
   14001484b:	jne    0x14001478e
   140014851:	test   r14d,0xe000
   140014858:	je     0x140014863
   14001485a:	lea    rax,[rip+0x4fa9f]        # 0x140064300
   140014861:	jmp    0x140014802
   140014863:	mov    rcx,QWORD PTR [rdi+0x28]
   140014867:	test   rcx,rcx
   14001486a:	je     0x140014877
   14001486c:	mov    eax,r14d
   14001486f:	shr    eax,0x8
   140014872:	and    eax,0x1
   140014875:	mov    DWORD PTR [rcx],eax
   140014877:	test   DWORD PTR [rdi+0x18],0x200
   14001487e:	je     0x1400148ab
   140014880:	test   BYTE PTR [rdi+0x10],0x4
   140014884:	je     0x1400148ab
   140014886:	mov    ecx,DWORD PTR [rdi+0x20]
   140014889:	lea    rdx,[rbp-0x1c]
   14001488d:	mov    BYTE PTR [rbp-0x1c],r14b
   140014891:	mov    r8d,0x2
   140014897:	shr    r14d,0x8
   14001489b:	mov    BYTE PTR [rbp-0x1b],r14b
   14001489f:	call   0x140015cfc
   1400148a4:	mov    r10,QWORD PTR [rbp-0x10]
   1400148a8:	mov    DWORD PTR [rdi+0x20],eax
   1400148ab:	mov    r14d,r12d
   1400148ae:	mov    DWORD PTR [rdi+0x8],0x3f36
   1400148b5:	mov    esi,r12d
   1400148b8:	jmp    0x1400148e0
   1400148ba:	xor    r12d,r12d
   1400148bd:	jmp    0x1400148e0
   1400148bf:	test   r13d,r13d
   1400148c2:	je     0x140014e87
   1400148c8:	movzx  eax,BYTE PTR [r10]
   1400148cc:	mov    ecx,esi
   1400148ce:	shl    eax,cl
   1400148d0:	inc    r10
   1400148d3:	add    r14d,eax
   1400148d6:	mov    QWORD PTR [rbp-0x10],r10
   1400148da:	dec    r13d
   1400148dd:	add    esi,0x8
   1400148e0:	cmp    esi,0x20
   1400148e3:	jb     0x1400148bf
   1400148e5:	mov    rax,QWORD PTR [rdi+0x28]
   1400148e9:	test   rax,rax
   1400148ec:	je     0x1400148f2
   1400148ee:	mov    DWORD PTR [rax+0x4],r14d
   1400148f2:	test   DWORD PTR [rdi+0x18],0x200
   1400148f9:	je     0x140014934
   1400148fb:	test   BYTE PTR [rdi+0x10],0x4
   1400148ff:	je     0x140014934
   140014901:	mov    ecx,DWORD PTR [rdi+0x20]
   140014904:	lea    rdx,[rbp-0x1c]
   140014908:	mov    eax,r14d
   14001490b:	mov    BYTE PTR [rbp-0x1c],r14b
   14001490f:	shr    eax,0x8
   140014912:	mov    r8d,0x4
   140014918:	mov    BYTE PTR [rbp-0x1b],al
   14001491b:	mov    eax,r14d
   14001491e:	shr    eax,0x10
   140014921:	shr    r14d,0x18
   140014925:	mov    BYTE PTR [rbp-0x1a],al
   140014928:	mov    BYTE PTR [rbp-0x19],r14b
   14001492c:	call   0x140015cfc
   140014931:	mov    DWORD PTR [rdi+0x20],eax
   140014934:	mov    r10,QWORD PTR [rbp-0x10]
   140014938:	mov    r14d,r12d
   14001493b:	mov    esi,r12d
   14001493e:	mov    DWORD PTR [rdi+0x8],0x3f37
   140014945:	jmp    0x14001494a
   140014947:	xor    r12d,r12d
   14001494a:	mov    ebx,0x10
   14001494f:	jmp    0x140014972
   140014951:	test   r13d,r13d
   140014954:	je     0x140014e87
   14001495a:	movzx  eax,BYTE PTR [r10]
   14001495e:	mov    ecx,esi
   140014960:	shl    eax,cl
   140014962:	inc    r10
   140014965:	add    r14d,eax
   140014968:	mov    QWORD PTR [rbp-0x10],r10
   14001496c:	dec    r13d
   14001496f:	add    esi,0x8
   140014972:	cmp    esi,ebx
   140014974:	jb     0x140014951
   140014976:	mov    rcx,QWORD PTR [rdi+0x28]
   14001497a:	test   rcx,rcx
   14001497d:	je     0x140014993
   14001497f:	movzx  eax,r14b
   140014983:	mov    DWORD PTR [rcx+0x8],eax
   140014986:	mov    ecx,r14d
   140014989:	mov    rax,QWORD PTR [rdi+0x28]
   14001498d:	shr    ecx,0x8
   140014990:	mov    DWORD PTR [rax+0xc],ecx
   140014993:	test   DWORD PTR [rdi+0x18],0x200
   14001499a:	je     0x1400149c3
   14001499c:	test   BYTE PTR [rdi+0x10],0x4
   1400149a0:	je     0x1400149c3
   1400149a2:	mov    ecx,DWORD PTR [rdi+0x20]
   1400149a5:	lea    rdx,[rbp-0x1c]
   1400149a9:	mov    BYTE PTR [rbp-0x1c],r14b
   1400149ad:	mov    r8d,0x2
   1400149b3:	shr    r14d,0x8
   1400149b7:	mov    BYTE PTR [rbp-0x1b],r14b
   1400149bb:	call   0x140015cfc
   1400149c0:	mov    DWORD PTR [rdi+0x20],eax
   1400149c3:	mov    r10,QWORD PTR [rbp-0x10]
   1400149c7:	mov    r14d,r12d
   1400149ca:	mov    esi,r12d
   1400149cd:	mov    DWORD PTR [rdi+0x8],0x3f38
   1400149d4:	jmp    0x1400149de
   1400149d6:	xor    r12d,r12d
   1400149d9:	lea    ebx,[r12+0x10]
   1400149de:	test   DWORD PTR [rdi+0x18],0x400
   1400149e5:	jne    0x140014a22
   1400149e7:	mov    rax,QWORD PTR [rdi+0x28]
   1400149eb:	test   rax,rax
   1400149ee:	je     0x1400149f4
   1400149f0:	mov    QWORD PTR [rax+0x10],r12
   1400149f4:	mov    r10,QWORD PTR [rbp-0x10]
   1400149f8:	mov    DWORD PTR [rdi+0x8],0x3f39
   1400149ff:	jmp    0x140014a72
   140014a01:	test   r13d,r13d
   140014a04:	je     0x140014e87
   140014a0a:	movzx  eax,BYTE PTR [r10]
   140014a0e:	mov    ecx,esi
   140014a10:	shl    eax,cl
   140014a12:	inc    r10
   140014a15:	add    r14d,eax
   140014a18:	mov    QWORD PTR [rbp-0x10],r10
   140014a1c:	dec    r13d
   140014a1f:	add    esi,0x8
   140014a22:	cmp    esi,ebx
   140014a24:	jb     0x140014a01
   140014a26:	mov    rax,QWORD PTR [rdi+0x28]
   140014a2a:	mov    DWORD PTR [rdi+0x50],r14d
   140014a2e:	test   rax,rax
   140014a31:	je     0x140014a37
   140014a33:	mov    DWORD PTR [rax+0x18],r14d
   140014a37:	test   DWORD PTR [rdi+0x18],0x200
   140014a3e:	je     0x140014a67
   140014a40:	test   BYTE PTR [rdi+0x10],0x4
   140014a44:	je     0x140014a67
   140014a46:	mov    ecx,DWORD PTR [rdi+0x20]
   140014a49:	lea    rdx,[rbp-0x1c]
   140014a4d:	mov    BYTE PTR [rbp-0x1c],r14b
   140014a51:	mov    r8d,0x2
   140014a57:	shr    r14d,0x8
   140014a5b:	mov    BYTE PTR [rbp-0x1b],r14b
   140014a5f:	call   0x140015cfc
   140014a64:	mov    DWORD PTR [rdi+0x20],eax
   140014a67:	mov    r14d,r12d
   140014a6a:	mov    esi,r12d
   140014a6d:	jmp    0x1400149f4
   140014a6f:	xor    r12d,r12d
   140014a72:	test   DWORD PTR [rdi+0x18],0x400
   140014a79:	je     0x140014b10
   140014a7f:	mov    ebx,DWORD PTR [rdi+0x50]
   140014a82:	cmp    ebx,r13d
   140014a85:	cmova  ebx,r13d
   140014a89:	test   ebx,ebx
   140014a8b:	je     0x140014b06
   140014a8d:	mov    rax,QWORD PTR [rdi+0x28]
   140014a91:	test   rax,rax
   140014a94:	je     0x140014ac5
   140014a96:	mov    r9,QWORD PTR [rax+0x10]
   140014a9a:	test   r9,r9
   140014a9d:	je     0x140014ac5
   140014a9f:	mov    edx,DWORD PTR [rax+0x18]
   140014aa2:	sub    edx,DWORD PTR [rdi+0x50]
   140014aa5:	mov    ecx,DWORD PTR [rax+0x1c]
   140014aa8:	lea    eax,[rbx+rdx*1]
   140014aab:	cmp    eax,ecx
   140014aad:	jbe    0x140014ab3
   140014aaf:	sub    ecx,edx
   140014ab1:	jmp    0x140014ab5
   140014ab3:	mov    ecx,ebx
   140014ab5:	mov    r8d,ecx
   140014ab8:	mov    ecx,edx
   140014aba:	mov    rdx,r10
   140014abd:	add    rcx,r9
   140014ac0:	call   0x140028fd0
   140014ac5:	test   DWORD PTR [rdi+0x18],0x200
   140014acc:	je     0x140014af3
   140014ace:	test   BYTE PTR [rdi+0x10],0x4
   140014ad2:	je     0x140014af3
   140014ad4:	mov    r10,QWORD PTR [rbp-0x10]
   140014ad8:	mov    r8d,ebx
   140014adb:	test   r10,r10
   140014ade:	jne    0x140014ae5
   140014ae0:	mov    eax,r12d
   140014ae3:	jmp    0x140014af0
   140014ae5:	mov    ecx,DWORD PTR [rdi+0x20]
   140014ae8:	mov    rdx,r10
   140014aeb:	call   0x140015cfc
   140014af0:	mov    DWORD PTR [rdi+0x20],eax
   140014af3:	mov    r10,QWORD PTR [rbp-0x10]
   140014af7:	sub    r13d,ebx
   140014afa:	mov    eax,ebx
   140014afc:	add    r10,rax
   140014aff:	sub    DWORD PTR [rdi+0x50],ebx
   140014b02:	mov    QWORD PTR [rbp-0x10],r10
   140014b06:	cmp    DWORD PTR [rdi+0x50],r12d
   140014b0a:	jne    0x140014e87
   140014b10:	mov    DWORD PTR [rdi+0x50],r12d
   140014b14:	mov    DWORD PTR [rdi+0x8],0x3f3a
   140014b1b:	jmp    0x140014b20
   140014b1d:	xor    r12d,r12d
   140014b20:	test   DWORD PTR [rdi+0x18],0x800
   140014b27:	je     0x140014bb8
   140014b2d:	test   r13d,r13d
   140014b30:	je     0x140014e87
   140014b36:	mov    ebx,r12d
   140014b39:	xor    r9d,r9d
   140014b3c:	mov    eax,ebx
   140014b3e:	inc    ebx
   140014b40:	movzx  r12d,BYTE PTR [rax+r10*1]
   140014b45:	mov    rax,QWORD PTR [rdi+0x28]
   140014b49:	test   rax,rax
   140014b4c:	je     0x140014b66
   140014b4e:	mov    rdx,QWORD PTR [rax+0x20]
   140014b52:	test   rdx,rdx
   140014b55:	je     0x140014b66
   140014b57:	mov    ecx,DWORD PTR [rdi+0x50]
   140014b5a:	cmp    ecx,DWORD PTR [rax+0x28]
   140014b5d:	jae    0x140014b66
   140014b5f:	mov    BYTE PTR [rcx+rdx*1],r12b
   140014b63:	inc    DWORD PTR [rdi+0x50]
   140014b66:	test   r12d,r12d
   140014b69:	je     0x140014b70
   140014b6b:	cmp    ebx,r13d
   140014b6e:	jb     0x140014b3c
   140014b70:	test   DWORD PTR [rdi+0x18],0x200
   140014b77:	je     0x140014b9e
   140014b79:	test   BYTE PTR [rdi+0x10],0x4
   140014b7d:	je     0x140014b9e
   140014b7f:	mov    r8d,ebx
   140014b82:	test   r10,r10
   140014b85:	jne    0x140014b8c
   140014b87:	mov    eax,r9d
   140014b8a:	jmp    0x140014b9b
   140014b8c:	mov    ecx,DWORD PTR [rdi+0x20]
   140014b8f:	mov    rdx,r10
   140014b92:	call   0x140015cfc
   140014b97:	mov    r10,QWORD PTR [rbp-0x10]
   140014b9b:	mov    DWORD PTR [rdi+0x20],eax
   140014b9e:	mov    eax,ebx
   140014ba0:	sub    r13d,ebx
   140014ba3:	add    r10,rax
   140014ba6:	mov    QWORD PTR [rbp-0x10],r10
   140014baa:	test   r12d,r12d
   140014bad:	jne    0x140014e8b
   140014bb3:	xor    r12d,r12d
   140014bb6:	jmp    0x140014bc5
   140014bb8:	mov    rax,QWORD PTR [rdi+0x28]
   140014bbc:	test   rax,rax
   140014bbf:	je     0x140014bc5
   140014bc1:	mov    QWORD PTR [rax+0x20],r12
   140014bc5:	mov    DWORD PTR [rdi+0x50],r12d
   140014bc9:	mov    DWORD PTR [rdi+0x8],0x3f3b
   140014bd0:	jmp    0x140014bd5
   140014bd2:	xor    r12d,r12d
   140014bd5:	test   DWORD PTR [rdi+0x18],0x1000
   140014bdc:	je     0x140014c6a
   140014be2:	test   r13d,r13d
   140014be5:	je     0x140014e87
   140014beb:	mov    ebx,r12d
   140014bee:	xor    r9d,r9d
   140014bf1:	mov    eax,ebx
   140014bf3:	inc    ebx
   140014bf5:	movzx  r12d,BYTE PTR [rax+r10*1]
   140014bfa:	mov    rax,QWORD PTR [rdi+0x28]
   140014bfe:	test   rax,rax
   140014c01:	je     0x140014c1b
   140014c03:	mov    rdx,QWORD PTR [rax+0x30]
   140014c07:	test   rdx,rdx
   140014c0a:	je     0x140014c1b
   140014c0c:	mov    ecx,DWORD PTR [rdi+0x50]
   140014c0f:	cmp    ecx,DWORD PTR [rax+0x38]
   140014c12:	jae    0x140014c1b
   140014c14:	mov    BYTE PTR [rcx+rdx*1],r12b
   140014c18:	inc    DWORD PTR [rdi+0x50]
   140014c1b:	test   r12d,r12d
   140014c1e:	je     0x140014c25
   140014c20:	cmp    ebx,r13d
   140014c23:	jb     0x140014bf1
   140014c25:	test   DWORD PTR [rdi+0x18],0x200
   140014c2c:	je     0x140014c53
   140014c2e:	test   BYTE PTR [rdi+0x10],0x4
   140014c32:	je     0x140014c53
   140014c34:	mov    r8d,ebx
   140014c37:	test   r10,r10
   140014c3a:	jne    0x140014c41
   140014c3c:	mov    eax,r9d
   140014c3f:	jmp    0x140014c50
   140014c41:	mov    ecx,DWORD PTR [rdi+0x20]
   140014c44:	mov    rdx,r10
   140014c47:	call   0x140015cfc
   140014c4c:	mov    r10,QWORD PTR [rbp-0x10]
   140014c50:	mov    DWORD PTR [rdi+0x20],eax
   140014c53:	mov    eax,ebx
   140014c55:	sub    r13d,ebx
   140014c58:	add    r10,rax
   140014c5b:	mov    QWORD PTR [rbp-0x10],r10
   140014c5f:	test   r12d,r12d
   140014c62:	jne    0x140014e8b
   140014c68:	jmp    0x140014c77
   140014c6a:	mov    rax,QWORD PTR [rdi+0x28]
   140014c6e:	test   rax,rax
   140014c71:	je     0x140014c77
   140014c73:	mov    QWORD PTR [rax+0x30],r12
   140014c77:	mov    r8d,DWORD PTR [rbp-0x20]
   140014c7b:	mov    r9,QWORD PTR [rbp-0x8]
   140014c7f:	mov    DWORD PTR [rdi+0x8],0x3f3c
   140014c86:	xor    r12d,r12d
   140014c89:	test   DWORD PTR [rdi+0x18],0x200
   140014c90:	je     0x140014ce0
   140014c92:	lea    r11d,[r12+0x10]
   140014c97:	cmp    esi,r11d
   140014c9a:	jae    0x140014cbf
   140014c9c:	test   r13d,r13d
   140014c9f:	je     0x140014e87
   140014ca5:	movzx  eax,BYTE PTR [r10]
   140014ca9:	mov    ecx,esi
   140014cab:	shl    eax,cl
   140014cad:	inc    r10
   140014cb0:	add    r14d,eax
   140014cb3:	mov    QWORD PTR [rbp-0x10],r10
   140014cb7:	dec    r13d
   140014cba:	add    esi,0x8
   140014cbd:	jmp    0x140014c97
   140014cbf:	test   BYTE PTR [rdi+0x10],0x4
   140014cc3:	je     0x140014cda
   140014cc5:	movzx  eax,WORD PTR [rdi+0x20]
   140014cc9:	cmp    r14d,eax
   140014ccc:	je     0x140014cda
   140014cce:	lea    rax,[rip+0x4f64b]        # 0x140064320
   140014cd5:	jmp    0x140014802
   140014cda:	mov    r14d,r12d
   140014cdd:	mov    esi,r12d
   140014ce0:	mov    rcx,QWORD PTR [rdi+0x28]
   140014ce4:	test   rcx,rcx
   140014ce7:	je     0x140014d00
   140014ce9:	mov    eax,DWORD PTR [rdi+0x18]
   140014cec:	sar    eax,0x9
   140014cef:	and    eax,0x1
   140014cf2:	mov    DWORD PTR [rcx+0x3c],eax
   140014cf5:	mov    rax,QWORD PTR [rdi+0x28]
   140014cf9:	mov    DWORD PTR [rax+0x40],0x1
   140014d00:	mov    DWORD PTR [rdi+0x20],r12d
   140014d04:	mov    DWORD PTR [r15+0x4c],r12d
   140014d08:	mov    DWORD PTR [rdi+0x8],0x3f3f
   140014d0f:	jmp    0x140014726
   140014d14:	test   r13d,r13d
   140014d17:	je     0x140014e87
   140014d1d:	movzx  eax,BYTE PTR [r10]
   140014d21:	mov    ecx,esi
   140014d23:	shl    eax,cl
   140014d25:	inc    r10
   140014d28:	add    r14d,eax
   140014d2b:	mov    QWORD PTR [rbp-0x10],r10
   140014d2f:	dec    r13d
   140014d32:	add    esi,0x8
   140014d35:	cmp    esi,0x20
   140014d38:	jb     0x140014d14
   140014d3a:	mov    eax,r14d
   140014d3d:	mov    ecx,r14d
   140014d40:	shl    eax,0x10
   140014d43:	mov    edx,0xff00
   140014d48:	and    ecx,edx
   140014d4a:	add    ecx,eax
   140014d4c:	mov    eax,r14d
   140014d4f:	shr    eax,0x8
   140014d52:	and    eax,edx
   140014d54:	shr    r14d,0x18
   140014d58:	shl    ecx,0x8
   140014d5b:	add    eax,ecx
   140014d5d:	add    eax,r14d
   140014d60:	mov    DWORD PTR [rdi+0x20],eax
   140014d63:	mov    DWORD PTR [r15+0x4c],eax
   140014d67:	xor    eax,eax
   140014d69:	mov    r14d,eax
   140014d6c:	mov    DWORD PTR [rdi+0x8],0x3f3e
   140014d73:	mov    esi,eax
   140014d75:	jmp    0x140014d79
   140014d77:	xor    eax,eax
   140014d79:	cmp    DWORD PTR [rdi+0x14],eax
   140014d7c:	je     0x140015adb
   140014d82:	xor    r8d,r8d
   140014d85:	xor    edx,edx
   140014d87:	xor    ecx,ecx
   140014d89:	call   0x14001789c
   140014d8e:	mov    r10,QWORD PTR [rbp-0x10]
   140014d92:	lea    r11,[rdi+0x74]
   140014d96:	mov    r8d,DWORD PTR [rbp-0x20]
   140014d9a:	mov    r9,QWORD PTR [rbp-0x8]
   140014d9e:	mov    DWORD PTR [rdi+0x20],eax
   140014da1:	mov    DWORD PTR [r15+0x4c],eax
   140014da5:	mov    DWORD PTR [rdi+0x8],0x3f3f
   140014dac:	lea    eax,[rbx-0x5]
   140014daf:	cmp    eax,0x1
   140014db2:	jbe    0x140014e87
   140014db8:	xor    edx,edx
   140014dba:	cmp    DWORD PTR [rdi+0xc],edx
   140014dbd:	je     0x140014df6
   140014dbf:	mov    ecx,esi
   140014dc1:	mov    DWORD PTR [rdi+0x8],0x3f4e
   140014dc8:	and    ecx,0x7
   140014dcb:	shr    r14d,cl
   140014dce:	sub    esi,ecx
   140014dd0:	jmp    0x140014726
   140014dd5:	test   r13d,r13d
   140014dd8:	je     0x140014e87
   140014dde:	movzx  eax,BYTE PTR [r10]
   140014de2:	mov    ecx,esi
   140014de4:	shl    eax,cl
   140014de6:	inc    r10
   140014de9:	add    r14d,eax
   140014dec:	mov    QWORD PTR [rbp-0x10],r10
   140014df0:	dec    r13d
   140014df3:	add    esi,0x8
   140014df6:	cmp    esi,0x3
   140014df9:	jb     0x140014dd5
   140014dfb:	mov    eax,r14d
   140014dfe:	dec    esi
   140014e00:	and    eax,0x1
   140014e03:	shr    r14d,1
   140014e06:	mov    DWORD PTR [rdi+0xc],eax
   140014e09:	mov    eax,r14d
   140014e0c:	and    eax,0x3
   140014e0f:	je     0x140014f0e
   140014e15:	sub    eax,0x1
   140014e18:	je     0x140014e4b
   140014e1a:	sub    eax,0x1
   140014e1d:	je     0x140014e3f
   140014e1f:	cmp    eax,0x1
   140014e22:	jne    0x140014f15
   140014e28:	lea    rax,[rip+0x4f509]        # 0x140064338
   140014e2f:	mov    QWORD PTR [r15+0x20],rax
   140014e33:	mov    DWORD PTR [rdi+0x8],0x3f51
   140014e3a:	jmp    0x140014f15
   140014e3f:	mov    DWORD PTR [rdi+0x8],0x3f44
   140014e46:	jmp    0x140014f15
   140014e4b:	mov    DWORD PTR [r12],0x9
   140014e53:	lea    rax,[rip+0x49996]        # 0x14005e7f0
   140014e5a:	mov    QWORD PTR [rdi+0x60],rax
   140014e5e:	lea    rax,[rip+0x4a18b]        # 0x14005eff0
   140014e65:	mov    QWORD PTR [rdi+0x68],rax
   140014e69:	mov    DWORD PTR [r11],0x5
   140014e70:	mov    DWORD PTR [rdi+0x8],0x3f47
   140014e77:	cmp    ebx,0x6
   140014e7a:	jne    0x140014f15
   140014e80:	shr    r14d,0x2
   140014e84:	add    esi,0xfffffffe
   140014e87:	mov    r10,QWORD PTR [rbp-0x10]
   140014e8b:	mov    r12d,DWORD PTR [rbp+0x58]
   140014e8f:	mov    ebx,DWORD PTR [rbp+0x50]
   140014e92:	mov    ecx,DWORD PTR [rbp+0x48]
   140014e95:	mov    rax,QWORD PTR [rbp-0x8]
   140014e99:	mov    QWORD PTR [r15+0x10],rax
   140014e9d:	mov    eax,DWORD PTR [rbp-0x20]
   140014ea0:	mov    DWORD PTR [r15+0x18],eax
   140014ea4:	mov    QWORD PTR [r15],r10
   140014ea7:	mov    DWORD PTR [r15+0x8],r13d
   140014eab:	mov    DWORD PTR [rdi+0x4c],esi
   140014eae:	xor    esi,esi
   140014eb0:	mov    DWORD PTR [rdi+0x48],r14d
   140014eb4:	cmp    DWORD PTR [rdi+0x34],esi
   140014eb7:	jne    0x140014ee2
   140014eb9:	cmp    ebx,DWORD PTR [r15+0x18]
   140014ebd:	je     0x140015b43
   140014ec3:	cmp    DWORD PTR [rdi+0x8],0x3f51
   140014eca:	jge    0x140015b43
   140014ed0:	cmp    DWORD PTR [rdi+0x8],0x3f4e
   140014ed7:	jl     0x140014ee2
   140014ed9:	cmp    ecx,0x4
   140014edc:	je     0x140015b43
   140014ee2:	mov    rdx,QWORD PTR [r15+0x10]
   140014ee6:	mov    r8d,ebx
   140014ee9:	sub    r8d,DWORD PTR [r15+0x18]
   140014eed:	mov    rcx,r15
   140014ef0:	call   0x1400144d4
   140014ef5:	test   eax,eax
   140014ef7:	je     0x140015b43
   140014efd:	mov    DWORD PTR [rdi+0x8],0x3f52
   140014f04:	mov    eax,0xfffffffc
   140014f09:	jmp    0x140015c05
   140014f0e:	mov    DWORD PTR [rdi+0x8],0x3f41
   140014f15:	shr    r14d,0x2
   140014f19:	add    esi,0xfffffffe
   140014f1c:	jmp    0x140014726
   140014f21:	mov    ecx,esi
   140014f23:	and    ecx,0x7
   140014f26:	shr    r14d,cl
   140014f29:	sub    esi,ecx
   140014f2b:	xor    r12d,r12d
   140014f2e:	cmp    esi,0x20
   140014f31:	jae    0x140014f56
   140014f33:	test   r13d,r13d
   140014f36:	je     0x140014e87
   140014f3c:	movzx  eax,BYTE PTR [r10]
   140014f40:	mov    ecx,esi
   140014f42:	shl    eax,cl
   140014f44:	inc    r10
   140014f47:	add    r14d,eax
   140014f4a:	mov    QWORD PTR [rbp-0x10],r10
   140014f4e:	dec    r13d
   140014f51:	add    esi,0x8
   140014f54:	jmp    0x140014f2e
   140014f56:	mov    eax,r14d
   140014f59:	movzx  ecx,r14w
   140014f5d:	not    eax
   140014f5f:	shr    eax,0x10
   140014f62:	cmp    ecx,eax
   140014f64:	je     0x140014f72
   140014f66:	lea    rax,[rip+0x4f3e3]        # 0x140064350
   140014f6d:	jmp    0x140014802
   140014f72:	mov    DWORD PTR [rdi+0x50],ecx
   140014f75:	mov    r14d,r12d
   140014f78:	mov    DWORD PTR [rdi+0x8],0x3f42
   140014f7f:	mov    esi,r12d
   140014f82:	cmp    ebx,0x6
   140014f85:	je     0x140014e87
   140014f8b:	mov    DWORD PTR [rdi+0x8],0x3f43
   140014f92:	mov    r12d,DWORD PTR [rdi+0x50]
   140014f96:	test   r12d,r12d
   140014f99:	je     0x140014d08
   140014f9f:	cmp    r12d,r13d
   140014fa2:	cmova  r12d,r13d
   140014fa6:	cmp    r12d,r8d
   140014fa9:	cmova  r12d,r8d
   140014fad:	test   r12d,r12d
   140014fb0:	je     0x140014e87
   140014fb6:	mov    r8d,r12d
   140014fb9:	mov    rdx,r10
   140014fbc:	mov    rcx,r9
   140014fbf:	mov    ebx,r12d
   140014fc2:	call   0x140028fd0
   140014fc7:	mov    r10,QWORD PTR [rbp-0x10]
   140014fcb:	sub    r13d,r12d
   140014fce:	mov    r8d,DWORD PTR [rbp-0x20]
   140014fd2:	add    r10,rbx
   140014fd5:	mov    r9,QWORD PTR [rbp-0x8]
   140014fd9:	sub    r8d,r12d
   140014fdc:	add    r9,rbx
   140014fdf:	mov    QWORD PTR [rbp-0x10],r10
   140014fe3:	sub    DWORD PTR [rdi+0x50],r12d
   140014fe7:	mov    DWORD PTR [rbp-0x20],r8d
   140014feb:	mov    QWORD PTR [rbp-0x8],r9
   140014fef:	jmp    0x140014726
   140014ff4:	xor    ebx,ebx
   140014ff6:	cmp    esi,0xe
   140014ff9:	jae    0x14001501e
   140014ffb:	test   r13d,r13d
   140014ffe:	je     0x140014e87
   140015004:	movzx  eax,BYTE PTR [r10]
   140015008:	mov    ecx,esi
   14001500a:	shl    eax,cl
   14001500c:	inc    r10
   14001500f:	add    r14d,eax
   140015012:	mov    QWORD PTR [rbp-0x10],r10
   140015016:	dec    r13d
   140015019:	add    esi,0x8
   14001501c:	jmp    0x140014ff6
   14001501e:	mov    ecx,r14d
   140015021:	add    esi,0xfffffff2
   140015024:	shr    r14d,0x5
   140015028:	and    ecx,0x1f
   14001502b:	mov    edx,r14d
   14001502e:	add    ecx,0x101
   140015034:	shr    r14d,0x5
   140015038:	and    edx,0x1f
   14001503b:	mov    eax,r14d
   14001503e:	mov    DWORD PTR [rdi+0x7c],ecx
   140015041:	and    eax,0xf
   140015044:	shr    r14d,0x4
   140015048:	add    eax,0x4
   14001504b:	inc    edx
   14001504d:	mov    DWORD PTR [rdi+0x80],edx
   140015053:	mov    DWORD PTR [rdi+0x78],eax
   140015056:	cmp    ecx,0x11e
   14001505c:	ja     0x140015072
   14001505e:	cmp    edx,0x1e
   140015061:	ja     0x140015072
   140015063:	mov    DWORD PTR [rdi+0x84],ebx
   140015069:	mov    DWORD PTR [rdi+0x8],0x3f45
   140015070:	jmp    0x140015080
   140015072:	lea    rax,[rip+0x4f2f7]        # 0x140064370
   140015079:	jmp    0x140014802
   14001507e:	xor    ebx,ebx
   140015080:	mov    eax,DWORD PTR [rdi+0x78]
   140015083:	lea    r8,[rip+0xfffffffffffeaf76]        # 0x140000000
   14001508a:	mov    edx,0x7
   14001508f:	cmp    DWORD PTR [rdi+0x84],eax
   140015095:	jae    0x140015114
   140015097:	jmp    0x1400150ba
   140015099:	test   r13d,r13d
   14001509c:	je     0x140014e87
   1400150a2:	movzx  eax,BYTE PTR [r10]
   1400150a6:	mov    ecx,esi
   1400150a8:	shl    eax,cl
   1400150aa:	inc    r10
   1400150ad:	add    r14d,eax
   1400150b0:	mov    QWORD PTR [rbp-0x10],r10
   1400150b4:	dec    r13d
   1400150b7:	add    esi,0x8
   1400150ba:	cmp    esi,0x3
   1400150bd:	jb     0x140015099
   1400150bf:	mov    eax,DWORD PTR [rdi+0x84]
   1400150c5:	movzx  ecx,r14w
   1400150c9:	and    cx,dx
   1400150cc:	shr    r14d,0x3
   1400150d0:	add    esi,0xfffffffd
   1400150d3:	movzx  eax,WORD PTR [r8+rax*2+0x5f070]
   1400150dc:	mov    WORD PTR [rdi+rax*2+0x90],cx
   1400150e4:	inc    DWORD PTR [rdi+0x84]
   1400150ea:	mov    eax,DWORD PTR [rdi+0x84]
   1400150f0:	cmp    eax,DWORD PTR [rdi+0x78]
   1400150f3:	jb     0x1400150ba
   1400150f5:	jmp    0x140015114
   1400150f7:	mov    eax,DWORD PTR [rdi+0x84]
   1400150fd:	movzx  eax,WORD PTR [r8+rax*2+0x5f070]
   140015106:	mov    WORD PTR [rdi+rax*2+0x90],bx
   14001510e:	inc    DWORD PTR [rdi+0x84]
   140015114:	cmp    DWORD PTR [rdi+0x84],0x13
   14001511b:	jb     0x1400150f7
   14001511d:	lea    rax,[rdi+0x550]
   140015124:	mov    DWORD PTR [r12],edx
   140015128:	lea    r9,[rdi+0x88]
   14001512f:	mov    QWORD PTR [rdi+0x60],rax
   140015133:	xor    ecx,ecx
   140015135:	mov    QWORD PTR [r9],rax
   140015138:	lea    rax,[rdi+0x310]
   14001513f:	mov    QWORD PTR [rsp+0x28],rax
   140015144:	lea    rdx,[rdi+0x90]
   14001514b:	mov    QWORD PTR [rsp+0x20],r12
   140015150:	lea    r8d,[rcx+0x13]
   140015154:	call   0x140017b80
   140015159:	mov    r10,QWORD PTR [rbp-0x10]
   14001515d:	mov    DWORD PTR [rbp+0x58],eax
   140015160:	test   eax,eax
   140015162:	je     0x14001517b
   140015164:	lea    rax,[rip+0x4f22d]        # 0x140064398
   14001516b:	mov    QWORD PTR [r15+0x20],rax
   14001516f:	mov    DWORD PTR [rdi+0x8],0x3f51
   140015176:	jmp    0x14001471e
   14001517b:	mov    DWORD PTR [rdi+0x84],ebx
   140015181:	mov    DWORD PTR [rdi+0x8],0x3f46
   140015188:	jmp    0x14001518c
   14001518a:	xor    ebx,ebx
   14001518c:	mov    eax,DWORD PTR [rdi+0x80]
   140015192:	add    eax,DWORD PTR [rdi+0x7c]
   140015195:	cmp    DWORD PTR [rdi+0x84],eax
   14001519b:	jae    0x1400153b3
   1400151a1:	mov    ecx,DWORD PTR [r12]
   1400151a5:	mov    eax,0x1
   1400151aa:	shl    eax,cl
   1400151ac:	lea    ecx,[rax-0x1]
   1400151af:	mov    eax,r14d
   1400151b2:	and    rcx,rax
   1400151b5:	mov    rax,QWORD PTR [rdi+0x60]
   1400151b9:	mov    eax,DWORD PTR [rax+rcx*4]
   1400151bc:	mov    ecx,eax
   1400151be:	shr    ecx,0x8
   1400151c1:	or     r11d,0xffffffff
   1400151c5:	movzx  ecx,cl
   1400151c8:	mov    DWORD PTR [rbp-0x18],eax
   1400151cb:	cmp    ecx,esi
   1400151cd:	jbe    0x140015212
   1400151cf:	test   r13d,r13d
   1400151d2:	je     0x140014e87
   1400151d8:	movzx  eax,BYTE PTR [r10]
   1400151dc:	mov    ecx,esi
   1400151de:	shl    eax,cl
   1400151e0:	inc    r10
   1400151e3:	mov    ecx,DWORD PTR [r12]
   1400151e7:	add    r14d,eax
   1400151ea:	mov    eax,0x1
   1400151ef:	mov    QWORD PTR [rbp-0x10],r10
   1400151f3:	shl    eax,cl
   1400151f5:	add    r13d,r11d
   1400151f8:	add    esi,0x8
   1400151fb:	lea    ecx,[rax-0x1]
   1400151fe:	mov    eax,r14d
   140015201:	and    rcx,rax
   140015204:	mov    rax,QWORD PTR [rdi+0x60]
   140015208:	mov    eax,DWORD PTR [rax+rcx*4]
   14001520b:	mov    ecx,eax
   14001520d:	shr    ecx,0x8
   140015210:	jmp    0x1400151c5
   140015212:	mov    edx,eax
   140015214:	mov    ecx,0x10
   140015219:	shr    edx,0x10
   14001521c:	cmp    dx,cx
   14001521f:	jae    0x14001524b
   140015221:	shr    eax,0x8
   140015224:	movzx  ecx,al
   140015227:	mov    eax,DWORD PTR [rdi+0x84]
   14001522d:	sub    esi,ecx
   14001522f:	shr    r14d,cl
   140015232:	mov    WORD PTR [rdi+rax*2+0x90],dx
   14001523a:	inc    DWORD PTR [rdi+0x84]
   140015240:	mov    ecx,DWORD PTR [rdi+0x84]
   140015246:	jmp    0x140015385
   14001524b:	jne    0x1400152b4
   14001524d:	shr    eax,0x8
   140015250:	movzx  edx,al
   140015253:	add    edx,0x2
   140015256:	jmp    0x140015279
   140015258:	test   r13d,r13d
   14001525b:	je     0x140014e87
   140015261:	movzx  eax,BYTE PTR [r10]
   140015265:	mov    ecx,esi
   140015267:	shl    eax,cl
   140015269:	inc    r10
   14001526c:	add    r14d,eax
   14001526f:	mov    QWORD PTR [rbp-0x10],r10
   140015273:	add    r13d,r11d
   140015276:	add    esi,0x8
   140015279:	cmp    esi,edx
   14001527b:	jb     0x140015258
   14001527d:	movzx  ecx,BYTE PTR [rbp-0x17]
   140015281:	mov    eax,DWORD PTR [rdi+0x84]
   140015287:	sub    esi,ecx
   140015289:	shr    r14d,cl
   14001528c:	test   eax,eax
   14001528e:	je     0x140015395
   140015294:	mov    edx,r14d
   140015297:	dec    eax
   140015299:	and    edx,0x3
   14001529c:	shr    r14d,0x2
   1400152a0:	add    edx,0x3
   1400152a3:	add    esi,0xfffffffe
   1400152a6:	movzx  r8d,WORD PTR [rdi+rax*2+0x90]
   1400152af:	jmp    0x140015350
   1400152b4:	cmp    WORD PTR [rbp-0x16],0x11
   1400152b9:	movzx  r9d,BYTE PTR [rbp-0x17]
   1400152be:	jne    0x140015305
   1400152c0:	lea    edx,[r9+0x3]
   1400152c4:	jmp    0x1400152e7
   1400152c6:	test   r13d,r13d
   1400152c9:	je     0x140014e87
   1400152cf:	movzx  eax,BYTE PTR [r10]
   1400152d3:	mov    ecx,esi
   1400152d5:	shl    eax,cl
   1400152d7:	inc    r10
   1400152da:	add    r14d,eax
   1400152dd:	mov    QWORD PTR [rbp-0x10],r10
   1400152e1:	add    r13d,r11d
   1400152e4:	add    esi,0x8
   1400152e7:	cmp    esi,edx
   1400152e9:	jb     0x1400152c6
   1400152eb:	mov    ecx,r9d
   1400152ee:	mov    eax,0xfffffffd
   1400152f3:	shr    r14d,cl
   1400152f6:	mov    edx,r14d
   1400152f9:	and    edx,0x7
   1400152fc:	add    edx,0x3
   1400152ff:	shr    r14d,0x3
   140015303:	jmp    0x140015348
   140015305:	lea    edx,[r9+0x7]
   140015309:	jmp    0x14001532c
   14001530b:	test   r13d,r13d
   14001530e:	je     0x140014e87
   140015314:	movzx  eax,BYTE PTR [r10]
   140015318:	mov    ecx,esi
   14001531a:	shl    eax,cl
   14001531c:	inc    r10
   14001531f:	add    r14d,eax
   140015322:	mov    QWORD PTR [rbp-0x10],r10
   140015326:	add    r13d,r11d
   140015329:	add    esi,0x8
   14001532c:	cmp    esi,edx
   14001532e:	jb     0x14001530b
   140015330:	mov    ecx,r9d
   140015333:	mov    eax,0xfffffff9
   140015338:	shr    r14d,cl
   14001533b:	mov    edx,r14d
   14001533e:	and    edx,0x7f
   140015341:	add    edx,0xb
   140015344:	shr    r14d,0x7
   140015348:	sub    eax,r9d
   14001534b:	mov    r8d,ebx
   14001534e:	add    esi,eax
   140015350:	mov    ecx,DWORD PTR [rdi+0x84]
   140015356:	mov    eax,DWORD PTR [rdi+0x80]
   14001535c:	add    ecx,edx
   14001535e:	add    eax,DWORD PTR [rdi+0x7c]
   140015361:	cmp    ecx,eax
   140015363:	ja     0x1400153a1
   140015365:	mov    eax,DWORD PTR [rdi+0x84]
   14001536b:	mov    WORD PTR [rdi+rax*2+0x90],r8w
   140015374:	inc    DWORD PTR [rdi+0x84]
   14001537a:	mov    ecx,DWORD PTR [rdi+0x84]
   140015380:	add    edx,r11d
   140015383:	jne    0x140015365
   140015385:	mov    eax,DWORD PTR [rdi+0x80]
   14001538b:	add    eax,DWORD PTR [rdi+0x7c]
   14001538e:	cmp    ecx,eax
   140015390:	jmp    0x14001519b
   140015395:	lea    rax,[rip+0x4f01c]        # 0x1400643b8
   14001539c:	jmp    0x14001516b
   1400153a1:	lea    rax,[rip+0x4f010]        # 0x1400643b8
   1400153a8:	mov    QWORD PTR [r15+0x20],rax
   1400153ac:	mov    DWORD PTR [rdi+0x8],0x3f51
   1400153b3:	cmp    DWORD PTR [rdi+0x8],0x3f51
   1400153ba:	je     0x14001471e
   1400153c0:	cmp    WORD PTR [rdi+0x290],bx
   1400153c7:	jne    0x1400153d5
   1400153c9:	lea    rax,[rip+0x4f008]        # 0x1400643d8
   1400153d0:	jmp    0x14001516b
   1400153d5:	mov    r8d,DWORD PTR [rdi+0x7c]
   1400153d9:	lea    rax,[rdi+0x550]
   1400153e0:	lea    rbx,[rdi+0x88]
   1400153e7:	mov    DWORD PTR [r12],0x9
   1400153ef:	mov    QWORD PTR [rbx],rax
   1400153f2:	lea    r12,[rdi+0x310]
   1400153f9:	mov    QWORD PTR [rdi+0x60],rax
   1400153fd:	lea    rdx,[rdi+0x90]
   140015404:	lea    rax,[rdi+0x70]
   140015408:	mov    QWORD PTR [rsp+0x28],r12
   14001540d:	mov    r9,rbx
   140015410:	mov    QWORD PTR [rsp+0x20],rax
   140015415:	mov    ecx,0x1
   14001541a:	call   0x140017b80
   14001541f:	mov    DWORD PTR [rbp+0x58],eax
   140015422:	test   eax,eax
   140015424:	je     0x14001543d
   140015426:	lea    rax,[rip+0x4efd3]        # 0x140064400
   14001542d:	mov    QWORD PTR [r15+0x20],rax
   140015431:	mov    DWORD PTR [rdi+0x8],0x3f51
   140015438:	jmp    0x14001471a
   14001543d:	mov    rax,QWORD PTR [rbx]
   140015440:	lea    rcx,[rdi+0x74]
   140015444:	mov    r8d,DWORD PTR [rdi+0x80]
   14001544b:	mov    r9,rbx
   14001544e:	mov    QWORD PTR [rdi+0x68],rax
   140015452:	mov    eax,DWORD PTR [rdi+0x7c]
   140015455:	add    rax,0x48
   140015459:	mov    DWORD PTR [rcx],0x6
   14001545f:	mov    QWORD PTR [rsp+0x28],r12
   140015464:	mov    QWORD PTR [rsp+0x20],rcx
   140015469:	mov    ecx,0x2
   14001546e:	lea    rdx,[rdi+rax*2]
   140015472:	call   0x140017b80
   140015477:	mov    DWORD PTR [rbp+0x58],eax
   14001547a:	test   eax,eax
   14001547c:	je     0x140015487
   14001547e:	lea    rax,[rip+0x4ef9b]        # 0x140064420
   140015485:	jmp    0x14001542d
   140015487:	mov    ecx,DWORD PTR [rbp+0x48]
   14001548a:	mov    r10,QWORD PTR [rbp-0x10]
   14001548e:	mov    DWORD PTR [rdi+0x8],0x3f47
   140015495:	cmp    ecx,0x6
   140015498:	je     0x140015b38
   14001549e:	mov    edx,DWORD PTR [rbp+0x50]
   1400154a1:	lea    r12,[rdi+0x70]
   1400154a5:	mov    r8d,DWORD PTR [rbp-0x20]
   1400154a9:	mov    r9,QWORD PTR [rbp-0x8]
   1400154ad:	mov    DWORD PTR [rdi+0x8],0x3f48
   1400154b4:	cmp    r13d,0x6
   1400154b8:	jb     0x14001551c
   1400154ba:	cmp    r8d,0x102
   1400154c1:	jb     0x14001551c
   1400154c3:	mov    QWORD PTR [r15+0x10],r9
   1400154c7:	mov    rcx,r15
   1400154ca:	mov    DWORD PTR [r15+0x18],r8d
   1400154ce:	mov    QWORD PTR [r15],r10
   1400154d1:	mov    DWORD PTR [r15+0x8],r13d
   1400154d5:	mov    DWORD PTR [rdi+0x48],r14d
   1400154d9:	mov    DWORD PTR [rdi+0x4c],esi
   1400154dc:	call   0x140018008
   1400154e1:	cmp    DWORD PTR [rdi+0x8],0x3f3f
   1400154e8:	mov    r9,QWORD PTR [r15+0x10]
   1400154ec:	mov    r10,QWORD PTR [r15]
   1400154ef:	mov    r8d,DWORD PTR [r15+0x18]
   1400154f3:	mov    r13d,DWORD PTR [r15+0x8]
   1400154f7:	mov    r14d,DWORD PTR [rdi+0x48]
   1400154fb:	mov    esi,DWORD PTR [rdi+0x4c]
   1400154fe:	mov    QWORD PTR [rbp-0x8],r9
   140015502:	mov    QWORD PTR [rbp-0x10],r10
   140015506:	mov    DWORD PTR [rbp-0x20],r8d
   14001550a:	jne    0x140014726
   140015510:	or     DWORD PTR [rdi+0x1be4],0xffffffff
   140015517:	jmp    0x140014726
   14001551c:	mov    ecx,DWORD PTR [r12]
   140015520:	xor    edx,edx
   140015522:	mov    r11,QWORD PTR [rdi+0x60]
   140015526:	mov    DWORD PTR [rdi+0x1be4],edx
   14001552c:	lea    ebx,[rdx+0x1]
   14001552f:	mov    eax,ebx
   140015531:	shl    eax,cl
   140015533:	sub    eax,ebx
   140015535:	mov    ecx,eax
   140015537:	mov    eax,r14d
   14001553a:	and    rcx,rax
   14001553d:	mov    eax,DWORD PTR [r11+rcx*4]
   140015541:	jmp    0x14001557d
   140015543:	test   r13d,r13d
   140015546:	je     0x140014e87
   14001554c:	movzx  eax,BYTE PTR [r10]
   140015550:	mov    ecx,esi
   140015552:	shl    eax,cl
   140015554:	add    r10,rbx
   140015557:	mov    ecx,DWORD PTR [r12]
   14001555b:	add    r14d,eax
   14001555e:	mov    eax,ebx
   140015560:	mov    QWORD PTR [rbp-0x10],r10
   140015564:	shl    eax,cl
   140015566:	dec    r13d
   140015569:	sub    eax,ebx
   14001556b:	add    esi,0x8
   14001556e:	mov    ecx,eax
   140015570:	mov    eax,r14d
   140015573:	and    rcx,rax
   140015576:	mov    rax,QWORD PTR [rdi+0x60]
   14001557a:	mov    eax,DWORD PTR [rax+rcx*4]
   14001557d:	mov    ecx,eax
   14001557f:	shr    ecx,0x8
   140015582:	movzx  ecx,cl
   140015585:	cmp    ecx,esi
   140015587:	ja     0x140015543
   140015589:	xor    r12d,r12d
   14001558c:	test   al,al
   14001558e:	je     0x140015654
   140015594:	test   al,0xf0
   140015596:	jne    0x140015654
   14001559c:	mov    r10d,eax
   14001559f:	movzx  ecx,al
   1400155a2:	shr    r10d,0x8
   1400155a6:	mov    r9d,ebx
   1400155a9:	movzx  r8d,r10b
   1400155ad:	mov    edx,eax
   1400155af:	add    ecx,r8d
   1400155b2:	mov    DWORD PTR [rbp-0x18],eax
   1400155b5:	shl    r9d,cl
   1400155b8:	mov    ecx,r8d
   1400155bb:	sub    r9d,ebx
   1400155be:	shr    eax,0x10
   1400155c1:	and    r9d,r14d
   1400155c4:	shr    r9d,cl
   1400155c7:	add    r9d,eax
   1400155ca:	mov    eax,DWORD PTR [r11+r9*4]
   1400155ce:	mov    ecx,eax
   1400155d0:	shr    ecx,0x8
   1400155d3:	movzx  r8d,cl
   1400155d7:	movzx  ecx,r10b
   1400155db:	add    r8d,ecx
   1400155de:	cmp    r8d,esi
   1400155e1:	jbe    0x140015645
   1400155e3:	mov    r10,QWORD PTR [rbp-0x10]
   1400155e7:	test   r13d,r13d
   1400155ea:	je     0x140014e8b
   1400155f0:	movzx  eax,BYTE PTR [r10]
   1400155f4:	mov    ecx,esi
   1400155f6:	movzx  r9d,BYTE PTR [rbp-0x17]
   1400155fb:	mov    r8d,ebx
   1400155fe:	shl    eax,cl
   140015600:	add    r10,rbx
   140015603:	add    r14d,eax
   140015606:	movzx  ecx,dl
   140015609:	movzx  eax,WORD PTR [rbp-0x16]
   14001560d:	add    ecx,r9d
   140015610:	shl    r8d,cl
   140015613:	dec    r13d
   140015616:	sub    r8d,ebx
   140015619:	mov    QWORD PTR [rbp-0x10],r10
   14001561d:	and    r8d,r14d
   140015620:	mov    ecx,r9d
   140015623:	shr    r8d,cl
   140015626:	add    esi,0x8
   140015629:	add    r8d,eax
   14001562c:	mov    rax,QWORD PTR [rdi+0x60]
   140015630:	mov    eax,DWORD PTR [rax+r8*4]
   140015634:	mov    ecx,eax
   140015636:	shr    ecx,0x8
   140015639:	movzx  r8d,cl
   14001563d:	add    r8d,r9d
   140015640:	cmp    r8d,esi
   140015643:	ja     0x1400155e7
   140015645:	movzx  ecx,BYTE PTR [rbp-0x17]
   140015649:	shr    r14d,cl
   14001564c:	sub    esi,ecx
   14001564e:	mov    DWORD PTR [rdi+0x1be4],ecx
   140015654:	mov    ecx,eax
   140015656:	shr    ecx,0x8
   140015659:	movzx  ecx,cl
   14001565c:	add    DWORD PTR [rdi+0x1be4],ecx
   140015662:	sub    esi,ecx
   140015664:	shr    r14d,cl
   140015667:	mov    ecx,eax
   140015669:	shr    ecx,0x10
   14001566c:	mov    DWORD PTR [rdi+0x50],ecx
   14001566f:	test   al,al
   140015671:	jne    0x14001567f
   140015673:	mov    DWORD PTR [rdi+0x8],0x3f4d
   14001567a:	jmp    0x14001471a
   14001567f:	test   al,0x20
   140015681:	je     0x140015696
   140015683:	or     DWORD PTR [rdi+0x1be4],0xffffffff
   14001568a:	mov    DWORD PTR [rdi+0x8],0x3f3f
   140015691:	jmp    0x14001471a
   140015696:	mov    r10,QWORD PTR [rbp-0x10]
   14001569a:	test   al,0x40
   14001569c:	je     0x1400156aa
   14001569e:	lea    rax,[rip+0x4ed93]        # 0x140064438
   1400156a5:	jmp    0x14001516b
   1400156aa:	movzx  ecx,al
   1400156ad:	and    ecx,0xf
   1400156b0:	mov    DWORD PTR [rdi+0x8],0x3f49
   1400156b7:	mov    DWORD PTR [rdi+0x58],ecx
   1400156ba:	jmp    0x1400156c4
   1400156bc:	xor    r12d,r12d
   1400156bf:	lea    ebx,[r12+0x1]
   1400156c4:	mov    edx,DWORD PTR [rdi+0x58]
   1400156c7:	test   edx,edx
   1400156c9:	je     0x14001570b
   1400156cb:	jmp    0x1400156ee
   1400156cd:	test   r13d,r13d
   1400156d0:	je     0x140014e87
   1400156d6:	movzx  eax,BYTE PTR [r10]
   1400156da:	mov    ecx,esi
   1400156dc:	shl    eax,cl
   1400156de:	add    r10,rbx
   1400156e1:	add    r14d,eax
   1400156e4:	mov    QWORD PTR [rbp-0x10],r10
   1400156e8:	dec    r13d
   1400156eb:	add    esi,0x8
   1400156ee:	cmp    esi,edx
   1400156f0:	jb     0x1400156cd
   1400156f2:	mov    ecx,edx
   1400156f4:	mov    eax,ebx
   1400156f6:	shl    eax,cl
   1400156f8:	sub    esi,edx
   1400156fa:	sub    eax,ebx
   1400156fc:	and    eax,r14d
   1400156ff:	shr    r14d,cl
   140015702:	add    DWORD PTR [rdi+0x50],eax
   140015705:	add    DWORD PTR [rdi+0x1be4],edx
   14001570b:	mov    eax,DWORD PTR [rdi+0x50]
   14001570e:	mov    DWORD PTR [rdi+0x1be8],eax
   140015714:	mov    DWORD PTR [rdi+0x8],0x3f4a
   14001571b:	jmp    0x140015725
   14001571d:	xor    r12d,r12d
   140015720:	lea    ebx,[r12+0x1]
   140015725:	mov    ecx,DWORD PTR [rdi+0x74]
   140015728:	mov    eax,ebx
   14001572a:	mov    r11,QWORD PTR [rdi+0x68]
   14001572e:	shl    eax,cl
   140015730:	sub    eax,ebx
   140015732:	mov    ecx,eax
   140015734:	mov    eax,r14d
   140015737:	and    rcx,rax
   14001573a:	mov    eax,DWORD PTR [r11+rcx*4]
   14001573e:	jmp    0x140015779
   140015740:	test   r13d,r13d
   140015743:	je     0x140014e87
   140015749:	movzx  eax,BYTE PTR [r10]
   14001574d:	mov    ecx,esi
   14001574f:	shl    eax,cl
   140015751:	add    r10,rbx
   140015754:	mov    ecx,DWORD PTR [rdi+0x74]
   140015757:	add    r14d,eax
   14001575a:	mov    eax,ebx
   14001575c:	mov    QWORD PTR [rbp-0x10],r10
   140015760:	shl    eax,cl
   140015762:	dec    r13d
   140015765:	sub    eax,ebx
   140015767:	add    esi,0x8
   14001576a:	mov    ecx,eax
   14001576c:	mov    eax,r14d
   14001576f:	and    rcx,rax
   140015772:	mov    rax,QWORD PTR [rdi+0x68]
   140015776:	mov    eax,DWORD PTR [rax+rcx*4]
   140015779:	mov    ecx,eax
   14001577b:	shr    ecx,0x8
   14001577e:	movzx  ecx,cl
   140015781:	cmp    ecx,esi
   140015783:	ja     0x140015740
   140015785:	test   al,0xf0
   140015787:	jne    0x140015845
   14001578d:	mov    r10d,eax
   140015790:	movzx  ecx,al
   140015793:	shr    r10d,0x8
   140015797:	mov    r9d,ebx
   14001579a:	movzx  r8d,r10b
   14001579e:	mov    edx,eax
   1400157a0:	add    ecx,r8d
   1400157a3:	mov    DWORD PTR [rbp-0x18],eax
   1400157a6:	shl    r9d,cl
   1400157a9:	mov    ecx,r8d
   1400157ac:	sub    r9d,ebx
   1400157af:	shr    eax,0x10
   1400157b2:	and    r9d,r14d
   1400157b5:	shr    r9d,cl
   1400157b8:	add    r9d,eax
   1400157bb:	mov    eax,DWORD PTR [r11+r9*4]
   1400157bf:	mov    ecx,eax
   1400157c1:	shr    ecx,0x8
   1400157c4:	movzx  r8d,cl
   1400157c8:	movzx  ecx,r10b
   1400157cc:	add    r8d,ecx
   1400157cf:	cmp    r8d,esi
   1400157d2:	jbe    0x140015836
   1400157d4:	mov    r10,QWORD PTR [rbp-0x10]
   1400157d8:	test   r13d,r13d
   1400157db:	je     0x140014e8b
   1400157e1:	movzx  eax,BYTE PTR [r10]
   1400157e5:	mov    ecx,esi
   1400157e7:	movzx  r9d,BYTE PTR [rbp-0x17]
   1400157ec:	mov    r8d,ebx
   1400157ef:	shl    eax,cl
   1400157f1:	add    r10,rbx
   1400157f4:	add    r14d,eax
   1400157f7:	movzx  ecx,dl
   1400157fa:	movzx  eax,WORD PTR [rbp-0x16]
   1400157fe:	add    ecx,r9d
   140015801:	shl    r8d,cl
   140015804:	dec    r13d
   140015807:	sub    r8d,ebx
   14001580a:	mov    QWORD PTR [rbp-0x10],r10
   14001580e:	and    r8d,r14d
   140015811:	mov    ecx,r9d
   140015814:	shr    r8d,cl
   140015817:	add    esi,0x8
   14001581a:	add    r8d,eax
   14001581d:	mov    rax,QWORD PTR [rdi+0x68]
   140015821:	mov    eax,DWORD PTR [rax+r8*4]
   140015825:	mov    ecx,eax
   140015827:	shr    ecx,0x8
   14001582a:	movzx  r8d,cl
   14001582e:	add    r8d,r9d
   140015831:	cmp    r8d,esi
   140015834:	ja     0x1400157d8
   140015836:	movzx  ecx,BYTE PTR [rbp-0x17]
   14001583a:	shr    r14d,cl
   14001583d:	sub    esi,ecx
   14001583f:	add    DWORD PTR [rdi+0x1be4],ecx
   140015845:	mov    r10,QWORD PTR [rbp-0x10]
   140015849:	mov    ecx,eax
   14001584b:	mov    r8d,DWORD PTR [rbp-0x20]
   14001584f:	mov    r9,QWORD PTR [rbp-0x8]
   140015853:	shr    ecx,0x8
   140015856:	movzx  ecx,cl
   140015859:	add    DWORD PTR [rdi+0x1be4],ecx
   14001585f:	sub    esi,ecx
   140015861:	shr    r14d,cl
   140015864:	test   al,0x40
   140015866:	je     0x140015874
   140015868:	lea    rax,[rip+0x4ebe9]        # 0x140064458
   14001586f:	jmp    0x140014802
   140015874:	mov    ecx,eax
   140015876:	mov    DWORD PTR [rdi+0x8],0x3f4b
   14001587d:	shr    ecx,0x10
   140015880:	mov    DWORD PTR [rdi+0x54],ecx
   140015883:	movzx  ecx,al
   140015886:	and    ecx,0xf
   140015889:	mov    DWORD PTR [rdi+0x58],ecx
   14001588c:	jmp    0x140015896
   14001588e:	xor    r12d,r12d
   140015891:	lea    ebx,[r12+0x1]
   140015896:	mov    edx,DWORD PTR [rdi+0x58]
   140015899:	test   edx,edx
   14001589b:	je     0x1400158dd
   14001589d:	jmp    0x1400158c0
   14001589f:	test   r13d,r13d
   1400158a2:	je     0x140014e87
   1400158a8:	movzx  eax,BYTE PTR [r10]
   1400158ac:	mov    ecx,esi
   1400158ae:	shl    eax,cl
   1400158b0:	add    r10,rbx
   1400158b3:	add    r14d,eax
   1400158b6:	mov    QWORD PTR [rbp-0x10],r10
   1400158ba:	dec    r13d
   1400158bd:	add    esi,0x8
   1400158c0:	cmp    esi,edx
   1400158c2:	jb     0x14001589f
   1400158c4:	mov    ecx,edx
   1400158c6:	mov    eax,ebx
   1400158c8:	shl    eax,cl
   1400158ca:	sub    esi,edx
   1400158cc:	sub    eax,ebx
   1400158ce:	and    eax,r14d
   1400158d1:	shr    r14d,cl
   1400158d4:	add    DWORD PTR [rdi+0x54],eax
   1400158d7:	add    DWORD PTR [rdi+0x1be4],edx
   1400158dd:	mov    edx,DWORD PTR [rbp+0x50]
   1400158e0:	mov    DWORD PTR [rdi+0x8],0x3f4c
   1400158e7:	jmp    0x1400158ec
   1400158e9:	xor    r12d,r12d
   1400158ec:	test   r8d,r8d
   1400158ef:	je     0x140014e87
   1400158f5:	mov    ecx,DWORD PTR [rdi+0x54]
   1400158f8:	mov    eax,edx
   1400158fa:	sub    eax,r8d
   1400158fd:	cmp    ecx,eax
   1400158ff:	jbe    0x14001593e
   140015901:	sub    ecx,eax
   140015903:	cmp    ecx,DWORD PTR [rdi+0x38]
   140015906:	jbe    0x14001591d
   140015908:	cmp    DWORD PTR [rdi+0x1be0],r12d
   14001590f:	je     0x14001591d
   140015911:	lea    rax,[rip+0x4eb58]        # 0x140064470
   140015918:	jmp    0x140014802
   14001591d:	mov    eax,DWORD PTR [rdi+0x3c]
   140015920:	cmp    ecx,eax
   140015922:	jbe    0x14001592d
   140015924:	mov    edx,DWORD PTR [rdi+0x34]
   140015927:	sub    ecx,eax
   140015929:	sub    edx,ecx
   14001592b:	jmp    0x140015931
   14001592d:	sub    eax,ecx
   14001592f:	mov    edx,eax
   140015931:	add    rdx,QWORD PTR [rdi+0x40]
   140015935:	mov    eax,DWORD PTR [rdi+0x50]
   140015938:	cmp    ecx,eax
   14001593a:	jbe    0x140015949
   14001593c:	jmp    0x140015947
   14001593e:	mov    eax,DWORD PTR [rdi+0x50]
   140015941:	mov    rdx,r9
   140015944:	sub    rdx,rcx
   140015947:	mov    ecx,eax
   140015949:	cmp    ecx,r8d
   14001594c:	mov    ebx,0x1
   140015951:	cmova  ecx,r8d
   140015955:	sub    r8d,ecx
   140015958:	sub    eax,ecx
   14001595a:	mov    DWORD PTR [rbp-0x20],r8d
   14001595e:	sub    rdx,r9
   140015961:	mov    DWORD PTR [rdi+0x50],eax
   140015964:	mov    al,BYTE PTR [rdx+r9*1]
   140015968:	mov    BYTE PTR [r9],al
   14001596b:	add    r9,rbx
   14001596e:	add    ecx,0xffffffff
   140015971:	jne    0x140015964
   140015973:	mov    QWORD PTR [rbp-0x8],r9
   140015977:	cmp    DWORD PTR [rdi+0x50],r12d
   14001597b:	jne    0x140014726
   140015981:	mov    DWORD PTR [rdi+0x8],0x3f48
   140015988:	jmp    0x140014726
   14001598d:	test   r8d,r8d
   140015990:	je     0x140014e87
   140015996:	mov    al,BYTE PTR [rdi+0x50]
   140015999:	mov    BYTE PTR [r9],al
   14001599c:	inc    r9
   14001599f:	dec    r8d
   1400159a2:	mov    QWORD PTR [rbp-0x8],r9
   1400159a6:	mov    DWORD PTR [rbp-0x20],r8d
   1400159aa:	jmp    0x140015981
   1400159ac:	xor    r12d,r12d
   1400159af:	cmp    DWORD PTR [rdi+0x10],r12d
   1400159b3:	jne    0x1400159e5
   1400159b5:	mov    ebx,DWORD PTR [rbp+0x50]
   1400159b8:	mov    DWORD PTR [rdi+0x8],0x3f4f
   1400159bf:	jmp    0x140015a99
   1400159c4:	test   r13d,r13d
   1400159c7:	je     0x140014e87
   1400159cd:	movzx  eax,BYTE PTR [r10]
   1400159d1:	mov    ecx,esi
   1400159d3:	shl    eax,cl
   1400159d5:	inc    r10
   1400159d8:	add    r14d,eax
   1400159db:	mov    QWORD PTR [rbp-0x10],r10
   1400159df:	dec    r13d
   1400159e2:	add    esi,0x8
   1400159e5:	cmp    esi,0x20
   1400159e8:	jb     0x1400159c4
   1400159ea:	sub    edx,r8d
   1400159ed:	add    DWORD PTR [r15+0x1c],edx
   1400159f1:	add    DWORD PTR [rdi+0x24],edx
   1400159f4:	test   BYTE PTR [rdi+0x10],0x4
   1400159f8:	je     0x140015a3c
   1400159fa:	test   edx,edx
   1400159fc:	je     0x140015a3c
   1400159fe:	mov    r8d,edx
   140015a01:	mov    rdx,r9
   140015a04:	cmp    DWORD PTR [rdi+0x18],r12d
   140015a08:	je     0x140015a1e
   140015a0a:	sub    rdx,r8
   140015a0d:	jne    0x140015a14
   140015a0f:	mov    eax,r12d
   140015a12:	jmp    0x140015a29
   140015a14:	mov    ecx,DWORD PTR [rdi+0x20]
   140015a17:	call   0x140015cfc
   140015a1c:	jmp    0x140015a29
   140015a1e:	mov    ecx,DWORD PTR [rdi+0x20]
   140015a21:	sub    rdx,r8
   140015a24:	call   0x14001789c
   140015a29:	mov    r10,QWORD PTR [rbp-0x10]
   140015a2d:	mov    r8d,DWORD PTR [rbp-0x20]
   140015a31:	mov    r9,QWORD PTR [rbp-0x8]
   140015a35:	mov    DWORD PTR [rdi+0x20],eax
   140015a38:	mov    DWORD PTR [r15+0x4c],eax
   140015a3c:	test   BYTE PTR [rdi+0x10],0x4
   140015a40:	mov    ebx,r8d
   140015a43:	mov    DWORD PTR [rbp+0x50],ebx
   140015a46:	je     0x140015a88
   140015a48:	mov    edx,0xff00
   140015a4d:	mov    ecx,r14d
   140015a50:	and    ecx,edx
   140015a52:	mov    eax,r14d
   140015a55:	shl    eax,0x10
   140015a58:	add    ecx,eax
   140015a5a:	mov    eax,r14d
   140015a5d:	shr    eax,0x8
   140015a60:	and    eax,edx
   140015a62:	shl    ecx,0x8
   140015a65:	add    ecx,eax
   140015a67:	mov    eax,r14d
   140015a6a:	shr    eax,0x18
   140015a6d:	add    ecx,eax
   140015a6f:	cmp    DWORD PTR [rdi+0x18],r12d
   140015a73:	cmovne ecx,r14d
   140015a77:	cmp    ecx,DWORD PTR [rdi+0x20]
   140015a7a:	je     0x140015a88
   140015a7c:	lea    rax,[rip+0x4ea0d]        # 0x140064490
   140015a83:	jmp    0x140014802
   140015a88:	mov    r14d,r12d
   140015a8b:	mov    esi,r12d
   140015a8e:	jmp    0x1400159b8
   140015a93:	mov    ebx,DWORD PTR [rbp+0x50]
   140015a96:	xor    r12d,r12d
   140015a99:	cmp    DWORD PTR [rdi+0x10],r12d
   140015a9d:	je     0x140015b01
   140015a9f:	cmp    DWORD PTR [rdi+0x18],r12d
   140015aa3:	je     0x140015b01
   140015aa5:	jmp    0x140015ac4
   140015aa7:	test   r13d,r13d
   140015aaa:	je     0x140015b2b
   140015aac:	movzx  eax,BYTE PTR [r10]
   140015ab0:	mov    ecx,esi
   140015ab2:	shl    eax,cl
   140015ab4:	inc    r10
   140015ab7:	add    r14d,eax
   140015aba:	mov    QWORD PTR [rbp-0x10],r10
   140015abe:	dec    r13d
   140015ac1:	add    esi,0x8
   140015ac4:	cmp    esi,0x20
   140015ac7:	jb     0x140015aa7
   140015ac9:	cmp    r14d,DWORD PTR [rdi+0x24]
   140015acd:	je     0x140015afb
   140015acf:	lea    rax,[rip+0x4e9d2]        # 0x1400644a8
   140015ad6:	jmp    0x140014802
   140015adb:	mov    QWORD PTR [r15+0x10],r9
   140015adf:	mov    eax,0x2
   140015ae4:	mov    DWORD PTR [r15+0x18],r8d
   140015ae8:	mov    QWORD PTR [r15],r10
   140015aeb:	mov    DWORD PTR [r15+0x8],r13d
   140015aef:	mov    DWORD PTR [rdi+0x48],r14d
   140015af3:	mov    DWORD PTR [rdi+0x4c],esi
   140015af6:	jmp    0x140015c05
   140015afb:	mov    r14d,r12d
   140015afe:	mov    esi,r12d
   140015b01:	mov    DWORD PTR [rdi+0x8],0x3f50
   140015b08:	jmp    0x140015b0d
   140015b0a:	mov    ebx,DWORD PTR [rbp+0x50]
   140015b0d:	mov    r10,QWORD PTR [rbp-0x10]
   140015b11:	mov    r12d,0x1
   140015b17:	jmp    0x140014e92
   140015b1c:	mov    r10,QWORD PTR [rbp-0x10]
   140015b20:	mov    r12d,0xfffffffd
   140015b26:	jmp    0x140014e8f
   140015b2b:	mov    r10,QWORD PTR [rbp-0x10]
   140015b2f:	mov    r12d,DWORD PTR [rbp+0x58]
   140015b33:	jmp    0x140014e92
   140015b38:	mov    ebx,DWORD PTR [rbp+0x50]
   140015b3b:	mov    r12d,eax
   140015b3e:	jmp    0x140014e95
   140015b43:	sub    ebx,DWORD PTR [r15+0x18]
   140015b47:	mov    r9d,DWORD PTR [rbp-0x14]
   140015b4b:	sub    r9d,DWORD PTR [r15+0x8]
   140015b4f:	add    DWORD PTR [r15+0xc],r9d
   140015b53:	add    DWORD PTR [r15+0x1c],ebx
   140015b57:	add    DWORD PTR [rdi+0x24],ebx
   140015b5a:	test   BYTE PTR [rdi+0x10],0x4
   140015b5e:	mov    DWORD PTR [rbp-0x14],r9d
   140015b62:	je     0x140015b9d
   140015b64:	test   ebx,ebx
   140015b66:	je     0x140015b9d
   140015b68:	mov    rdx,QWORD PTR [r15+0x10]
   140015b6c:	mov    r8d,ebx
   140015b6f:	cmp    DWORD PTR [rdi+0x18],esi
   140015b72:	je     0x140015b87
   140015b74:	sub    rdx,r8
   140015b77:	jne    0x140015b7d
   140015b79:	mov    eax,esi
   140015b7b:	jmp    0x140015b92
   140015b7d:	mov    ecx,DWORD PTR [rdi+0x20]
   140015b80:	call   0x140015cfc
   140015b85:	jmp    0x140015b92
   140015b87:	mov    ecx,DWORD PTR [rdi+0x20]
   140015b8a:	sub    rdx,r8
   140015b8d:	call   0x14001789c
   140015b92:	mov    r9d,DWORD PTR [rbp-0x14]
   140015b96:	mov    DWORD PTR [rdi+0x20],eax
   140015b99:	mov    DWORD PTR [r15+0x4c],eax
   140015b9d:	cmp    DWORD PTR [rdi+0x8],0x3f47
   140015ba4:	je     0x140015bb2
   140015ba6:	cmp    DWORD PTR [rdi+0x8],0x3f42
   140015bad:	mov    r8d,esi
   140015bb0:	jne    0x140015bb8
   140015bb2:	mov    r8d,0x100
   140015bb8:	mov    eax,DWORD PTR [rdi+0xc]
   140015bbb:	mov    edx,esi
   140015bbd:	neg    eax
   140015bbf:	mov    eax,0x80
   140015bc4:	sbb    ecx,ecx
   140015bc6:	and    ecx,0x40
   140015bc9:	cmp    DWORD PTR [rdi+0x8],0x3f3f
   140015bd0:	cmove  edx,eax
   140015bd3:	lea    eax,[r8+rcx*1]
   140015bd7:	add    edx,eax
   140015bd9:	add    edx,DWORD PTR [rdi+0x4c]
   140015bdc:	mov    DWORD PTR [r15+0x48],edx
   140015be0:	test   r9d,r9d
   140015be3:	jne    0x140015be9
   140015be5:	test   ebx,ebx
   140015be7:	je     0x140015bef
   140015be9:	cmp    DWORD PTR [rbp+0x48],0x4
   140015bed:	jne    0x140015bfb
   140015bef:	test   r12d,r12d
   140015bf2:	mov    eax,0xfffffffb
   140015bf7:	cmove  r12d,eax
   140015bfb:	mov    eax,r12d
   140015bfe:	jmp    0x140015c05
   140015c00:	mov    eax,0xfffffffe
   140015c05:	mov    rbx,QWORD PTR [rsp+0x90]
   140015c0d:	add    rsp,0x50
   140015c11:	pop    r15
   140015c13:	pop    r14
   140015c15:	pop    r13
   140015c17:	pop    r12
   140015c19:	pop    rdi
   140015c1a:	pop    rsi
   140015c1b:	pop    rbp
   140015c1c:	ret    
   140015c1d:	nop    DWORD PTR [rax]
   140015c20:	nop
   140015c21:	rex.RX add DWORD PTR [rax],r8d
   140015c24:	adc    cl,BYTE PTR [rax+0x1]
   140015c27:	add    BYTE PTR [rdx+0x47000148],bh
   140015c2d:	add    QWORD PTR [r8],rax
   140015c30:	(bad)  
   140015c31:	add    QWORD PTR [r8],rax
   140015c34:	outs   dx,DWORD PTR ds:[rsi]
   140015c35:	rex.WX add QWORD PTR [rax],rax
   140015c38:	sbb    eax,0xd200014b
   140015c3d:	rex.WXB add QWORD PTR [r8],rax
   140015c40:	xchg   BYTE PTR [rcx+rax*1+0x0],cl
   140015c44:	xor    eax,0x7700014d
   140015c49:	add    QWORD PTR [r8],r8
   140015c4c:	lods   al,BYTE PTR ds:[rsi]
   140015c4d:	add    QWORD PTR [r8],r8
   140015c50:	mov    eax,0x2100014d
   140015c55:	rex.WRXB add QWORD PTR [r8],r8
   140015c58:	mov    ecx,DWORD PTR [rdi+0x1]
   140015c5b:	add    BYTE PTR [rdx-0xbfffeb1],dl
   140015c61:	rex.WRXB add QWORD PTR [r8],r8
   140015c64:	jle    0x140015cb6
   140015c66:	add    DWORD PTR [rax],eax
   140015c68:	mov    dl,BYTE PTR [rcx+0x1]
   140015c6b:	add    BYTE PTR [rbp-0x4bfffeac],ch
   140015c71:	push   rsp
   140015c72:	add    DWORD PTR [rax],eax
   140015c74:	mov    esp,0x1d000156
   140015c79:	push   rdi
   140015c7a:	add    DWORD PTR [rax],eax
   140015c7c:	mov    ds,WORD PTR [rax+0x1]
   140015c7f:	add    cl,ch
   140015c81:	pop    rax
   140015c82:	add    DWORD PTR [rax],eax
   140015c84:	lea    ebx,[rcx+0x1]
   140015c87:	add    BYTE PTR [rcx+rbx*2+0x5a930001],ch
   140015c8e:	add    DWORD PTR [rax],eax
   140015c90:	or     bl,BYTE PTR [rbx+0x1]
   140015c93:	add    BYTE PTR [rbx+rbx*2],bl
   140015c96:	add    DWORD PTR [rax],eax
   140015c98:	add    al,0x4f
   140015c9a:	add    DWORD PTR [rax],eax
   140015c9c:	rex push rbx
   140015c9e:	sub    rsp,0x20
   140015ca2:	mov    rbx,rcx
   140015ca5:	call   0x1400142b4
   140015caa:	test   eax,eax
   140015cac:	je     0x140015cb5
   140015cae:	mov    eax,0xfffffffe
   140015cb3:	jmp    0x140015cdb
   140015cb5:	mov    rax,QWORD PTR [rcx+0x28]
   140015cb9:	mov    rdx,QWORD PTR [rax+0x40]
   140015cbd:	test   rdx,rdx
   140015cc0:	je     0x140015cc9
   140015cc2:	mov    rcx,QWORD PTR [rcx+0x40]
   140015cc6:	call   QWORD PTR [rbx+0x38]
   140015cc9:	mov    rdx,QWORD PTR [rbx+0x28]
   140015ccd:	mov    rcx,QWORD PTR [rbx+0x40]
   140015cd1:	call   QWORD PTR [rbx+0x38]
   140015cd4:	and    QWORD PTR [rbx+0x28],0x0
   140015cd9:	xor    eax,eax
   140015cdb:	add    rsp,0x20
   140015cdf:	pop    rbx
   140015ce0:	ret    
   140015ce1:	int3   
   140015ce2:	int3   
   140015ce3:	int3   
   140015ce4:	mov    eax,ecx
   140015ce6:	mov    edx,ecx
   140015ce8:	shr    eax,0xe
   140015ceb:	add    eax,ecx
   140015ced:	shr    edx,0x19
   140015cf0:	shr    ecx,0xc
   140015cf3:	add    eax,edx
   140015cf5:	add    ecx,0xd
   140015cf8:	add    eax,ecx
   140015cfa:	ret    
   140015cfb:	int3   
   140015cfc:	mov    QWORD PTR [rsp+0x8],rbx
   140015d01:	mov    QWORD PTR [rsp+0x10],rsi
   140015d06:	mov    QWORD PTR [rsp+0x18],rdi
   140015d0b:	lea    rsi,[rip+0x4938e]        # 0x14005f0a0
   140015d12:	mov    r10d,ecx
   140015d15:	not    r10d
   140015d18:	mov    r11,r8
   140015d1b:	mov    rbx,rdx
   140015d1e:	test   r8,r8
   140015d21:	je     0x140015d47
   140015d23:	test   bl,0x3
   140015d26:	je     0x140015d47
   140015d28:	movzx  ecx,BYTE PTR [rbx]
   140015d2b:	mov    eax,r10d
   140015d2e:	xor    rcx,rax
   140015d31:	inc    rbx
   140015d34:	shr    eax,0x8
   140015d37:	movzx  edx,cl
   140015d3a:	mov    r10d,DWORD PTR [rsi+rdx*4]
   140015d3e:	xor    r10d,eax
   140015d41:	sub    r11,0x1
   140015d45:	jne    0x140015d23
   140015d47:	cmp    r11,0x20
   140015d4b:	jb     0x140015f76
   140015d51:	mov    rdi,r11
   140015d54:	shr    rdi,0x5
   140015d58:	imul   rax,rdi,0xffffffffffffffe0
   140015d5c:	add    r11,rax
   140015d5f:	xor    r10d,DWORD PTR [rbx]
   140015d62:	mov    eax,r10d
   140015d65:	shr    rax,0x10
   140015d69:	movzx  edx,al
   140015d6c:	mov    eax,r10d
   140015d6f:	shr    rax,0x8
   140015d73:	movzx  ecx,al
   140015d76:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140015d7e:	mov    eax,r10d
   140015d81:	shr    rax,0x18
   140015d85:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140015d8d:	xor    r8d,DWORD PTR [rsi+rax*4]
   140015d91:	movzx  eax,r10b
   140015d95:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140015d9d:	xor    r8d,DWORD PTR [rbx+0x4]
   140015da1:	mov    r9d,r8d
   140015da4:	mov    eax,r8d
   140015da7:	shr    rax,0x10
   140015dab:	movzx  edx,al
   140015dae:	mov    eax,r8d
   140015db1:	shr    rax,0x8
   140015db5:	movzx  ecx,al
   140015db8:	mov    eax,r9d
   140015dbb:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140015dc3:	shr    rax,0x18
   140015dc7:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140015dcf:	xor    r8d,DWORD PTR [rsi+rax*4]
   140015dd3:	movzx  eax,r9b
   140015dd7:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140015ddf:	xor    r8d,DWORD PTR [rbx+0x8]
   140015de3:	mov    r9d,r8d
   140015de6:	mov    eax,r8d
   140015de9:	shr    rax,0x10
   140015ded:	movzx  edx,al
   140015df0:	mov    eax,r8d
   140015df3:	shr    rax,0x8
   140015df7:	movzx  ecx,al
   140015dfa:	mov    eax,r9d
   140015dfd:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140015e05:	shr    rax,0x18
   140015e09:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140015e11:	xor    r8d,DWORD PTR [rsi+rax*4]
   140015e15:	movzx  eax,r9b
   140015e19:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140015e21:	xor    r8d,DWORD PTR [rbx+0xc]
   140015e25:	mov    r9d,r8d
   140015e28:	mov    eax,r8d
   140015e2b:	shr    rax,0x10
   140015e2f:	movzx  edx,al
   140015e32:	mov    eax,r8d
   140015e35:	shr    rax,0x8
   140015e39:	movzx  ecx,al
   140015e3c:	mov    eax,r9d
   140015e3f:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140015e47:	shr    rax,0x18
   140015e4b:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140015e53:	xor    r8d,DWORD PTR [rsi+rax*4]
   140015e57:	movzx  eax,r9b
   140015e5b:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140015e63:	xor    r8d,DWORD PTR [rbx+0x10]
   140015e67:	mov    r9d,r8d
   140015e6a:	mov    eax,r8d
   140015e6d:	shr    rax,0x10
   140015e71:	movzx  edx,al
   140015e74:	mov    eax,r8d
   140015e77:	shr    rax,0x8
   140015e7b:	movzx  ecx,al
   140015e7e:	mov    eax,r9d
   140015e81:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140015e89:	shr    rax,0x18
   140015e8d:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140015e95:	xor    r8d,DWORD PTR [rsi+rax*4]
   140015e99:	movzx  eax,r9b
   140015e9d:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140015ea5:	xor    r8d,DWORD PTR [rbx+0x14]
   140015ea9:	mov    eax,r8d
   140015eac:	shr    rax,0x10
   140015eb0:	movzx  edx,al
   140015eb3:	mov    eax,r8d
   140015eb6:	shr    rax,0x8
   140015eba:	mov    r9d,r8d
   140015ebd:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140015ec5:	movzx  ecx,al
   140015ec8:	mov    eax,r9d
   140015ecb:	shr    rax,0x18
   140015ecf:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140015ed7:	xor    r8d,DWORD PTR [rsi+rax*4]
   140015edb:	movzx  eax,r9b
   140015edf:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140015ee7:	xor    r8d,DWORD PTR [rbx+0x18]
   140015eeb:	mov    r9d,r8d
   140015eee:	mov    eax,r8d
   140015ef1:	shr    rax,0x10
   140015ef5:	movzx  edx,al
   140015ef8:	mov    eax,r8d
   140015efb:	shr    rax,0x8
   140015eff:	movzx  ecx,al
   140015f02:	mov    eax,r9d
   140015f05:	mov    r8d,DWORD PTR [rsi+rdx*4+0x400]
   140015f0d:	shr    rax,0x18
   140015f11:	xor    r8d,DWORD PTR [rsi+rcx*4+0x800]
   140015f19:	xor    r8d,DWORD PTR [rsi+rax*4]
   140015f1d:	movzx  eax,r9b
   140015f21:	xor    r8d,DWORD PTR [rsi+rax*4+0xc00]
   140015f29:	xor    r8d,DWORD PTR [rbx+0x1c]
   140015f2d:	add    rbx,0x20
   140015f31:	mov    eax,r8d
   140015f34:	shr    rax,0x10
   140015f38:	movzx  edx,al
   140015f3b:	mov    eax,r8d
   140015f3e:	shr    rax,0x8
   140015f42:	movzx  ecx,al
   140015f45:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140015f4d:	mov    eax,r8d
   140015f50:	shr    rax,0x18
   140015f54:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140015f5c:	xor    r10d,DWORD PTR [rsi+rax*4]
   140015f60:	movzx  eax,r8b
   140015f64:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   140015f6c:	sub    rdi,0x1
   140015f70:	jne    0x140015d5f
   140015f76:	cmp    r11,0x4
   140015f7a:	jb     0x140015fd5
   140015f7c:	mov    r9,r11
   140015f7f:	shr    r9,0x2
   140015f83:	imul   rax,r9,0xfffffffffffffffc
   140015f87:	add    r11,rax
   140015f8a:	xor    r10d,DWORD PTR [rbx]
   140015f8d:	add    rbx,0x4
   140015f91:	mov    r8d,r10d
   140015f94:	mov    eax,r10d
   140015f97:	shr    rax,0x10
   140015f9b:	movzx  edx,al
   140015f9e:	mov    eax,r10d
   140015fa1:	shr    rax,0x8
   140015fa5:	movzx  ecx,al
   140015fa8:	mov    eax,r8d
   140015fab:	mov    r10d,DWORD PTR [rsi+rdx*4+0x400]
   140015fb3:	shr    rax,0x18
   140015fb7:	xor    r10d,DWORD PTR [rsi+rcx*4+0x800]
   140015fbf:	xor    r10d,DWORD PTR [rsi+rax*4]
   140015fc3:	movzx  eax,r8b
   140015fc7:	xor    r10d,DWORD PTR [rsi+rax*4+0xc00]
   140015fcf:	sub    r9,0x1
   140015fd3:	jne    0x140015f8a
   140015fd5:	test   r11,r11
   140015fd8:	je     0x140015ff9
   140015fda:	movzx  ecx,BYTE PTR [rbx]
   140015fdd:	mov    eax,r10d
   140015fe0:	xor    rcx,rax
   140015fe3:	inc    rbx
   140015fe6:	shr    eax,0x8
   140015fe9:	movzx  edx,cl
   140015fec:	mov    r10d,DWORD PTR [rsi+rdx*4]
   140015ff0:	xor    r10d,eax
   140015ff3:	sub    r11,0x1
   140015ff7:	jne    0x140015fda
   140015ff9:	mov    rbx,QWORD PTR [rsp+0x8]
   140015ffe:	not    r10d
   140016001:	mov    rsi,QWORD PTR [rsp+0x10]
   140016006:	mov    eax,r10d
   140016009:	mov    rdi,QWORD PTR [rsp+0x18]
   14001600e:	ret    
   14001600f:	int3   
   140016010:	xor    r8d,r8d
   140016013:	lea    rax,[rcx+0xbc]
   14001601a:	mov    edx,0x11e
   14001601f:	lea    r9d,[r8+0x1]
   140016023:	mov    WORD PTR [rax],r8w
   140016027:	lea    rax,[rax+0x4]
   14001602b:	sub    rdx,r9
   14001602e:	jne    0x140016023
   140016030:	lea    rax,[rcx+0x9b0]
   140016037:	mov    edx,0x1e
   14001603c:	mov    WORD PTR [rax],r8w
   140016040:	lea    rax,[rax+0x4]
   140016044:	sub    rdx,r9
   140016047:	jne    0x14001603c
   140016049:	lea    rax,[rcx+0xaa4]
   140016050:	mov    edx,0x13
   140016055:	mov    WORD PTR [rax],r8w
   140016059:	lea    rax,[rax+0x4]
   14001605d:	sub    rdx,r9
   140016060:	jne    0x140016055
   140016062:	mov    WORD PTR [rcx+0x4bc],r9w
   14001606a:	mov    QWORD PTR [rcx+0x1700],r8
   140016071:	mov    DWORD PTR [rcx+0x1708],r8d
   140016078:	mov    DWORD PTR [rcx+0x16f4],r8d
   14001607f:	ret    
   140016080:	mov    QWORD PTR [rsp+0x8],rbx
   140016085:	mov    QWORD PTR [rsp+0x10],rsi
   14001608a:	mov    QWORD PTR [rsp+0x18],rdi
   14001608f:	movsxd rax,r8d
   140016092:	lea    r9d,[r8+r8*1]
   140016096:	mov    rbx,rdx
   140016099:	movsxd r10,DWORD PTR [rcx+rax*4+0xba8]
   1400160a1:	jmp    0x14001611c
   1400160a3:	jge    0x1400160e0
   1400160a5:	lea    edx,[r9+0x1]
   1400160a9:	movsxd rax,edx
   1400160ac:	movsxd r11,DWORD PTR [rcx+rax*4+0xba8]
   1400160b4:	movsxd rax,r9d
   1400160b7:	movsxd rdi,DWORD PTR [rcx+rax*4+0xba8]
   1400160bf:	movzx  eax,WORD PTR [rbx+rdi*4]
   1400160c3:	cmp    WORD PTR [rbx+r11*4],ax
   1400160c8:	jb     0x1400160dd
   1400160ca:	jne    0x1400160e0
   1400160cc:	mov    al,BYTE PTR [rdi+rcx*1+0x14a4]
   1400160d3:	cmp    BYTE PTR [r11+rcx*1+0x14a4],al
   1400160db:	ja     0x1400160e0
   1400160dd:	mov    r9d,edx
   1400160e0:	movsxd rax,r9d
   1400160e3:	movsxd r11,DWORD PTR [rcx+rax*4+0xba8]
   1400160eb:	movzx  eax,WORD PTR [rbx+r11*4]
   1400160f0:	cmp    WORD PTR [rbx+r10*4],ax
   1400160f5:	jb     0x14001612b
   1400160f7:	jne    0x14001610b
   1400160f9:	mov    al,BYTE PTR [r11+rcx*1+0x14a4]
   140016101:	cmp    BYTE PTR [r10+rcx*1+0x14a4],al
   140016109:	jbe    0x14001612b
   14001610b:	movsxd rax,r8d
   14001610e:	mov    r8d,r9d
   140016111:	add    r9d,r9d
   140016114:	mov    DWORD PTR [rcx+rax*4+0xba8],r11d
   14001611c:	mov    eax,DWORD PTR [rcx+0x149c]
   140016122:	cmp    r9d,eax
   140016125:	jle    0x1400160a3
   14001612b:	mov    rbx,QWORD PTR [rsp+0x8]
   140016130:	mov    rsi,QWORD PTR [rsp+0x10]
   140016135:	mov    rdi,QWORD PTR [rsp+0x18]
   14001613a:	movsxd rax,r8d
   14001613d:	mov    DWORD PTR [rcx+rax*4+0xba8],r10d
   140016145:	ret    
   140016146:	int3   
   140016147:	int3   
   140016148:	mov    QWORD PTR [rsp+0x10],rbx
   14001614d:	mov    QWORD PTR [rsp+0x18],rbp
   140016152:	mov    QWORD PTR [rsp+0x20],rsi
   140016157:	push   rdi
   140016158:	push   r12
   14001615a:	push   r13
   14001615c:	push   r14
   14001615e:	push   r15
   140016160:	mov    rax,QWORD PTR [rdx+0x10]
   140016164:	lea    rdi,[rcx+0xb88]
   14001616b:	mov    esi,DWORD PTR [rdx+0x8]
   14001616e:	xor    r9d,r9d
   140016171:	mov    rbx,QWORD PTR [rdx]
   140016174:	mov    r8,rcx
   140016177:	mov    r10d,r9d
   14001617a:	mov    DWORD PTR [rsp+0x30],esi
   14001617e:	mov    r15,QWORD PTR [rax]
   140016181:	mov    r13,QWORD PTR [rax+0x8]
   140016185:	lea    ecx,[r9+0x10]
   140016189:	mov    r12d,DWORD PTR [rax+0x10]
   14001618d:	movsxd rdx,DWORD PTR [rax+0x18]
   140016191:	movzx  eax,r9w
   140016195:	rep stos WORD PTR es:[rdi],ax
   140016198:	movsxd rax,DWORD PTR [r8+0x14a0]
   14001619f:	movsxd rcx,DWORD PTR [r8+rax*4+0xba8]
   1400161a7:	mov    WORD PTR [rbx+rcx*4+0x2],r9w
   1400161ad:	mov    r9d,0x23d
   1400161b3:	mov    ebp,DWORD PTR [r8+0x14a0]
   1400161ba:	inc    ebp
   1400161bc:	movsxd rax,ebp
   1400161bf:	cmp    rax,r9
   1400161c2:	jge    0x140016330
   1400161c8:	lea    r14,[r8+0xba8]
   1400161cf:	sub    r9,rax
   1400161d2:	lea    r14,[r14+rax*4]
   1400161d6:	add    ebp,r9d
   1400161d9:	movsxd rdi,DWORD PTR [r14]
   1400161dc:	mov    r11,rdi
   1400161df:	movzx  eax,WORD PTR [rbx+rdi*4+0x2]
   1400161e4:	movzx  ecx,WORD PTR [rbx+rax*4+0x2]
   1400161e9:	mov    eax,0x1
   1400161ee:	add    ecx,eax
   1400161f0:	cmp    ecx,edx
   1400161f2:	jle    0x1400161f9
   1400161f4:	mov    ecx,edx
   1400161f6:	add    r10d,eax
   1400161f9:	mov    WORD PTR [rbx+rdi*4+0x2],cx
   1400161fe:	cmp    edi,esi
   140016200:	jg     0x140016252
   140016202:	mov    esi,0x1
   140016207:	movsxd rax,ecx
   14001620a:	add    WORD PTR [r8+rax*2+0xb88],si
   140016213:	xor    esi,esi
   140016215:	cmp    edi,r12d
   140016218:	jl     0x140016225
   14001621a:	sub    edi,r12d
   14001621d:	movsxd rax,edi
   140016220:	mov    esi,DWORD PTR [r13+rax*4+0x0]
   140016225:	movzx  edi,WORD PTR [rbx+r11*4]
   14001622a:	lea    eax,[rsi+rcx*1]
   14001622d:	imul   eax,edi
   140016230:	add    DWORD PTR [r8+0x1700],eax
   140016237:	test   r15,r15
   14001623a:	je     0x14001624e
   14001623c:	movzx  eax,WORD PTR [r15+r11*4+0x2]
   140016242:	add    eax,esi
   140016244:	imul   eax,edi
   140016247:	add    DWORD PTR [r8+0x1704],eax
   14001624e:	mov    esi,DWORD PTR [rsp+0x30]
   140016252:	add    r14,0x4
   140016256:	mov    r11d,0x1
   14001625c:	sub    r9,r11
   14001625f:	jne    0x1400161d9
   140016265:	xor    r14d,r14d
   140016268:	test   r10d,r10d
   14001626b:	je     0x140016330
   140016271:	lea    r9d,[rdx-0x1]
   140016275:	mov    r12d,0xffff
   14001627b:	lea    r15d,[r11+0x1]
   14001627f:	movsxd rcx,r9d
   140016282:	cmp    WORD PTR [r8+rcx*2+0xb88],r14w
   14001628b:	jne    0x14001629e
   14001628d:	sub    ecx,r11d
   140016290:	movsxd rax,ecx
   140016293:	cmp    WORD PTR [r8+rax*2+0xb88],r14w
   14001629c:	je     0x14001628d
   14001629e:	movsxd rax,ecx
   1400162a1:	sub    r10d,r15d
   1400162a4:	add    WORD PTR [r8+rax*2+0xb88],r12w
   1400162ad:	lea    eax,[rcx+0x1]
   1400162b0:	movsxd rcx,eax
   1400162b3:	add    WORD PTR [r8+rcx*2+0xb88],r15w
   1400162bc:	add    WORD PTR [r8+rdx*2+0xb88],r12w
   1400162c5:	test   r10d,r10d
   1400162c8:	jg     0x14001627f
   1400162ca:	test   edx,edx
   1400162cc:	je     0x140016330
   1400162ce:	movsxd r10,ebp
   1400162d1:	movsxd rax,edx
   1400162d4:	movzx  edi,WORD PTR [r8+rax*2+0xb88]
   1400162dd:	test   edi,edi
   1400162df:	je     0x14001632b
   1400162e1:	lea    r9,[r8+0xba8]
   1400162e8:	lea    r9,[r9+r10*4]
   1400162ec:	sub    r10,r11
   1400162ef:	lea    r9,[r9-0x4]
   1400162f3:	cmp    DWORD PTR [r9],esi
   1400162f6:	jg     0x140016327
   1400162f8:	movsxd r11,DWORD PTR [r9]
   1400162fb:	movzx  eax,WORD PTR [rbx+r11*4+0x2]
   140016301:	cmp    eax,edx
   140016303:	je     0x14001631e
   140016305:	mov    ecx,edx
   140016307:	sub    ecx,eax
   140016309:	movzx  eax,WORD PTR [rbx+r11*4]
   14001630e:	imul   ecx,eax
   140016311:	add    DWORD PTR [r8+0x1700],ecx
   140016318:	mov    WORD PTR [rbx+r11*4+0x2],dx
   14001631e:	mov    r11d,0x1
   140016324:	sub    edi,r11d
   140016327:	test   edi,edi
   140016329:	jne    0x1400162ec
   14001632b:	sub    edx,r11d
   14001632e:	jne    0x1400162d1
   140016330:	mov    rbx,QWORD PTR [rsp+0x38]
   140016335:	mov    rbp,QWORD PTR [rsp+0x40]
   14001633a:	mov    rsi,QWORD PTR [rsp+0x48]
   14001633f:	pop    r15
   140016341:	pop    r14
   140016343:	pop    r13
   140016345:	pop    r12
   140016347:	pop    rdi
   140016348:	ret    
   140016349:	int3   
   14001634a:	int3   
   14001634b:	int3   
   14001634c:	mov    QWORD PTR [rsp+0x18],rbx
   140016351:	push   rbp
   140016352:	push   rsi
   140016353:	push   rdi
   140016354:	push   r12
   140016356:	push   r13
   140016358:	push   r14
   14001635a:	push   r15
   14001635c:	sub    rsp,0x50
   140016360:	mov    rax,QWORD PTR [rip+0x5ace9]        # 0x140071050
   140016367:	xor    rax,rsp
   14001636a:	mov    QWORD PTR [rsp+0x40],rax
   14001636f:	mov    rax,QWORD PTR [rdx+0x10]
   140016373:	xor    r13d,r13d
   140016376:	mov    rsi,QWORD PTR [rdx]
   140016379:	or     ebp,0xffffffff
   14001637c:	mov    r15,rdx
   14001637f:	mov    rdi,rcx
   140016382:	mov    edx,r13d
   140016385:	movsxd r14,DWORD PTR [rax+0x14]
   140016389:	mov    r9,QWORD PTR [rax]
   14001638c:	lea    r12d,[rbp+0x2]
   140016390:	mov    DWORD PTR [rcx+0x149c],r13d
   140016397:	mov    DWORD PTR [rcx+0x14a0],0x23d
   1400163a1:	mov    ecx,r13d
   1400163a4:	test   r14d,r14d
   1400163a7:	jle    0x140016433
   1400163ad:	cmp    WORD PTR [rsi+rcx*4],r13w
   1400163b2:	je     0x1400163d5
   1400163b4:	add    DWORD PTR [rdi+0x149c],r12d
   1400163bb:	mov    ebp,edx
   1400163bd:	movsxd rax,DWORD PTR [rdi+0x149c]
   1400163c4:	mov    DWORD PTR [rdi+rax*4+0xba8],edx
   1400163cb:	mov    BYTE PTR [rcx+rdi*1+0x14a4],r13b
   1400163d3:	jmp    0x1400163db
   1400163d5:	mov    WORD PTR [rsi+rcx*4+0x2],r13w
   1400163db:	add    edx,r12d
   1400163de:	add    rcx,r12
   1400163e1:	cmp    rcx,r14
   1400163e4:	jl     0x1400163ad
   1400163e6:	jmp    0x140016433
   1400163e8:	cmp    ebp,0x2
   1400163eb:	jge    0x1400163f4
   1400163ed:	add    ebp,r12d
   1400163f0:	mov    ecx,ebp
   1400163f2:	jmp    0x1400163f7
   1400163f4:	mov    ecx,r13d
   1400163f7:	add    DWORD PTR [rdi+0x149c],r12d
   1400163fe:	movsxd rax,DWORD PTR [rdi+0x149c]
   140016405:	mov    DWORD PTR [rdi+rax*4+0xba8],ecx
   14001640c:	movsxd rax,ecx
   14001640f:	mov    WORD PTR [rsi+rax*4],r12w
   140016414:	mov    BYTE PTR [rax+rdi*1+0x14a4],r13b
   14001641c:	dec    DWORD PTR [rdi+0x1700]
   140016422:	test   r9,r9
   140016425:	je     0x140016433
   140016427:	movzx  eax,WORD PTR [r9+rax*4+0x2]
   14001642d:	sub    DWORD PTR [rdi+0x1704],eax
   140016433:	cmp    DWORD PTR [rdi+0x149c],0x2
   14001643a:	jl     0x1400163e8
   14001643c:	mov    DWORD PTR [r15+0x8],ebp
   140016440:	mov    eax,DWORD PTR [rdi+0x149c]
   140016446:	cdq    
   140016447:	sub    eax,edx
   140016449:	sar    eax,1
   14001644b:	mov    ebx,eax
   14001644d:	cmp    eax,r12d
   140016450:	jl     0x140016468
   140016452:	mov    r8d,ebx
   140016455:	mov    rdx,rsi
   140016458:	mov    rcx,rdi
   14001645b:	call   0x140016080
   140016460:	sub    ebx,r12d
   140016463:	cmp    ebx,r12d
   140016466:	jge    0x140016452
   140016468:	movsxd rax,DWORD PTR [rdi+0x149c]
   14001646f:	mov    r8d,r12d
   140016472:	movsxd rbx,DWORD PTR [rdi+0xbac]
   140016479:	mov    rdx,rsi
   14001647c:	mov    ecx,DWORD PTR [rdi+rax*4+0xba8]
   140016483:	mov    DWORD PTR [rdi+0xbac],ecx
   140016489:	mov    rcx,rdi
   14001648c:	dec    DWORD PTR [rdi+0x149c]
   140016492:	call   0x140016080
   140016497:	movsxd rcx,DWORD PTR [rdi+0xbac]
   14001649e:	dec    DWORD PTR [rdi+0x14a0]
   1400164a4:	movsxd rax,DWORD PTR [rdi+0x14a0]
   1400164ab:	movsxd r8,r14d
   1400164ae:	mov    DWORD PTR [rdi+rax*4+0xba8],ebx
   1400164b5:	dec    DWORD PTR [rdi+0x14a0]
   1400164bb:	movsxd rax,DWORD PTR [rdi+0x14a0]
   1400164c2:	mov    DWORD PTR [rdi+rax*4+0xba8],ecx
   1400164c9:	movzx  eax,WORD PTR [rsi+rcx*4]
   1400164cd:	add    ax,WORD PTR [rsi+rbx*4]
   1400164d1:	mov    WORD PTR [rsi+r8*4],ax
   1400164d6:	mov    al,BYTE PTR [rcx+rdi*1+0x14a4]
   1400164dd:	cmp    BYTE PTR [rbx+rdi*1+0x14a4],al
   1400164e4:	jb     0x1400164f0
   1400164e6:	movzx  eax,BYTE PTR [rbx+rdi*1+0x14a4]
   1400164ee:	jmp    0x1400164f8
   1400164f0:	movzx  eax,BYTE PTR [rcx+rdi*1+0x14a4]
   1400164f8:	add    al,r12b
   1400164fb:	mov    rdx,rsi
   1400164fe:	mov    BYTE PTR [r8+rdi*1+0x14a4],al
   140016506:	mov    r8d,r12d
   140016509:	mov    WORD PTR [rsi+rcx*4+0x2],r14w
   14001650f:	mov    rcx,rdi
   140016512:	mov    WORD PTR [rsi+rbx*4+0x2],r14w
   140016518:	mov    DWORD PTR [rdi+0xbac],r14d
   14001651f:	add    r14d,r12d
   140016522:	call   0x140016080
   140016527:	cmp    DWORD PTR [rdi+0x149c],0x2
   14001652e:	jge    0x140016468
   140016534:	dec    DWORD PTR [rdi+0x14a0]
   14001653a:	mov    rdx,r15
   14001653d:	movsxd rcx,DWORD PTR [rdi+0x14a0]
   140016544:	mov    eax,DWORD PTR [rdi+0xbac]
   14001654a:	mov    DWORD PTR [rdi+rcx*4+0xba8],eax
   140016551:	mov    rcx,rdi
   140016554:	call   0x140016148
   140016559:	lea    rax,[rsp+0x22]
   14001655e:	mov    r8d,r13d
   140016561:	sub    rdi,rax
   140016564:	mov    rdx,r12
   140016567:	lea    rax,[rdi+rdx*2]
   14001656b:	movzx  ecx,WORD PTR [rsp+rax*1+0xba8]
   140016573:	add    r8d,ecx
   140016576:	add    r8d,r8d
   140016579:	mov    WORD PTR [rsp+rdx*2+0x20],r8w
   14001657f:	add    rdx,r12
   140016582:	cmp    rdx,0xf
   140016586:	jle    0x140016567
   140016588:	movsxd r10,ebp
   14001658b:	mov    rdx,r13
   14001658e:	test   ebp,ebp
   140016590:	js     0x1400165d3
   140016592:	movzx  r8d,WORD PTR [rsi+rdx*4+0x2]
   140016598:	test   r8d,r8d
   14001659b:	je     0x1400165cb
   14001659d:	movzx  r9d,WORD PTR [rsp+r8*2+0x20]
   1400165a3:	mov    ecx,r13d
   1400165a6:	lea    eax,[r12+r9*1]
   1400165aa:	mov    WORD PTR [rsp+r8*2+0x20],ax
   1400165b0:	mov    eax,r9d
   1400165b3:	sub    r8d,r12d
   1400165b6:	and    eax,r12d
   1400165b9:	shr    r9d,1
   1400165bc:	or     ecx,eax
   1400165be:	add    ecx,ecx
   1400165c0:	test   r8d,r8d
   1400165c3:	jg     0x1400165b0
   1400165c5:	shr    ecx,1
   1400165c7:	mov    WORD PTR [rsi+rdx*4],cx
   1400165cb:	add    rdx,r12
   1400165ce:	cmp    rdx,r10
   1400165d1:	jle    0x140016592
   1400165d3:	mov    rcx,QWORD PTR [rsp+0x40]
   1400165d8:	xor    rcx,rsp
   1400165db:	call   0x140025df0
   1400165e0:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400165e8:	add    rsp,0x50
   1400165ec:	pop    r15
   1400165ee:	pop    r14
   1400165f0:	pop    r13
   1400165f2:	pop    r12
   1400165f4:	pop    rdi
   1400165f5:	pop    rsi
   1400165f6:	pop    rbp
   1400165f7:	ret    
   1400165f8:	mov    rax,rsp
   1400165fb:	mov    QWORD PTR [rax+0x8],rbx
   1400165ff:	mov    QWORD PTR [rax+0x10],rbp
   140016603:	mov    QWORD PTR [rax+0x18],rsi
   140016607:	mov    QWORD PTR [rax+0x20],rdi
   14001660b:	push   r12
   14001660d:	push   r13
   14001660f:	push   r14
   140016611:	push   r15
   140016613:	movzx  r10d,WORD PTR [rdx+0x2]
   140016618:	lea    eax,[r8+0x1]
   14001661c:	movsxd r9,eax
   14001661f:	or     ebp,0xffffffff
   140016622:	xor    r11d,r11d
   140016625:	mov    rbx,rdx
   140016628:	mov    eax,0xffff
   14001662d:	mov    WORD PTR [rdx+r9*4+0x2],ax
   140016633:	mov    eax,r10d
   140016636:	neg    eax
   140016638:	movsxd r9,r8d
   14001663b:	mov    eax,r10d
   14001663e:	sbb    r8d,r8d
   140016641:	and    r8d,0xffffff7d
   140016648:	add    r8d,0x8a
   14001664f:	neg    eax
   140016651:	sbb    edx,edx
   140016653:	neg    edx
   140016655:	add    edx,0x3
   140016658:	test   r9,r9
   14001665b:	js     0x140016711
   140016661:	add    rbx,0x6
   140016665:	lea    r14,[r9+0x1]
   140016669:	lea    r13d,[rbp+0x2]
   14001666d:	add    r11d,r13d
   140016670:	mov    r15d,r10d
   140016673:	mov    esi,r10d
   140016676:	mov    r12d,r10d
   140016679:	mov    edi,r10d
   14001667c:	mov    eax,r10d
   14001667f:	mov    r9d,r10d
   140016682:	movzx  r10d,WORD PTR [rbx]
   140016686:	cmp    r11d,r8d
   140016689:	jge    0x140016690
   14001668b:	cmp    eax,r10d
   14001668e:	je     0x140016704
   140016690:	cmp    r11d,edx
   140016693:	jge    0x1400166a0
   140016695:	add    WORD PTR [rcx+rsi*4+0xaa4],r11w
   14001669e:	jmp    0x1400166d4
   1400166a0:	test   edi,edi
   1400166a2:	je     0x1400166bc
   1400166a4:	cmp    r9d,ebp
   1400166a7:	je     0x1400166b2
   1400166a9:	add    WORD PTR [rcx+r15*4+0xaa4],r13w
   1400166b2:	add    WORD PTR [rcx+0xae4],r13w
   1400166ba:	jmp    0x1400166d4
   1400166bc:	cmp    r11d,0xa
   1400166c0:	jg     0x1400166cc
   1400166c2:	add    WORD PTR [rcx+0xae8],r13w
   1400166ca:	jmp    0x1400166d4
   1400166cc:	add    WORD PTR [rcx+0xaec],r13w
   1400166d4:	xor    r11d,r11d
   1400166d7:	mov    ebp,r9d
   1400166da:	test   r10d,r10d
   1400166dd:	jne    0x1400166eb
   1400166df:	lea    edx,[r11+0x3]
   1400166e3:	mov    r8d,0x8a
   1400166e9:	jmp    0x140016704
   1400166eb:	cmp    r12d,r10d
   1400166ee:	jne    0x1400166fb
   1400166f0:	mov    edx,0x3
   1400166f5:	lea    r8d,[rdx+0x3]
   1400166f9:	jmp    0x140016704
   1400166fb:	mov    edx,0x4
   140016700:	lea    r8d,[rdx+0x3]
   140016704:	add    rbx,0x4
   140016708:	sub    r14,r13
   14001670b:	jne    0x14001666d
   140016711:	mov    rbx,QWORD PTR [rsp+0x28]
   140016716:	mov    rbp,QWORD PTR [rsp+0x30]
   14001671b:	mov    rsi,QWORD PTR [rsp+0x38]
   140016720:	mov    rdi,QWORD PTR [rsp+0x40]
   140016725:	pop    r15
   140016727:	pop    r14
   140016729:	pop    r13
   14001672b:	pop    r12
   14001672d:	ret    
   14001672e:	int3   
   14001672f:	int3   
   140016730:	mov    QWORD PTR [rsp+0x8],rbx
   140016735:	mov    QWORD PTR [rsp+0x10],rbp
   14001673a:	mov    QWORD PTR [rsp+0x20],rsi
   14001673f:	push   rdi
   140016740:	push   r12
   140016742:	push   r13
   140016744:	push   r14
   140016746:	push   r15
   140016748:	movzx  r11d,WORD PTR [rdx+0x2]
   14001674d:	or     edi,0xffffffff
   140016750:	movsxd rbx,r8d
   140016753:	xor    r10d,r10d
   140016756:	mov    r9,rcx
   140016759:	mov    eax,r11d
   14001675c:	neg    eax
   14001675e:	mov    eax,r11d
   140016761:	sbb    r8d,r8d
   140016764:	and    r8d,0xffffff7d
   14001676b:	add    r8d,0x8a
   140016772:	neg    eax
   140016774:	sbb    ecx,ecx
   140016776:	neg    ecx
   140016778:	add    ecx,0x3
   14001677b:	test   rbx,rbx
   14001677e:	js     0x140016cc3
   140016784:	lea    r15,[rdx+0x6]
   140016788:	lea    r12,[rbx+0x1]
   14001678c:	inc    r10d
   14001678f:	mov    ebp,r11d
   140016792:	mov    r14d,r11d
   140016795:	mov    edx,r11d
   140016798:	mov    esi,r11d
   14001679b:	mov    eax,r11d
   14001679e:	mov    ebx,r11d
   1400167a1:	mov    r13d,r11d
   1400167a4:	movzx  r11d,WORD PTR [r15]
   1400167a8:	cmp    r10d,r8d
   1400167ab:	jge    0x1400167b6
   1400167ad:	cmp    eax,r11d
   1400167b0:	je     0x140016cb5
   1400167b6:	cmp    r10d,ecx
   1400167b9:	jge    0x140016871
   1400167bf:	mov    rdi,rbx
   1400167c2:	mov    esi,0x10
   1400167c7:	movzx  ebx,WORD PTR [r9+rdi*4+0xaa6]
   1400167d0:	mov    eax,esi
   1400167d2:	mov    ecx,DWORD PTR [r9+0x1714]
   1400167d9:	sub    eax,ebx
   1400167db:	cmp    ecx,eax
   1400167dd:	jle    0x140016844
   1400167df:	movzx  r8d,WORD PTR [r9+rdi*4+0xaa4]
   1400167e8:	mov    edx,DWORD PTR [r9+0x28]
   1400167ec:	movzx  eax,r8w
   1400167f0:	shl    ax,cl
   1400167f3:	or     WORD PTR [r9+0x1710],ax
   1400167fb:	mov    al,BYTE PTR [r9+0x1710]
   140016802:	mov    rcx,QWORD PTR [r9+0x10]
   140016806:	mov    BYTE PTR [rdx+rcx*1],al
   140016809:	inc    DWORD PTR [r9+0x28]
   14001680d:	mov    al,BYTE PTR [r9+0x1711]
   140016814:	mov    edx,DWORD PTR [r9+0x28]
   140016818:	mov    rcx,QWORD PTR [r9+0x10]
   14001681c:	mov    BYTE PTR [rdx+rcx*1],al
   14001681f:	mov    ecx,esi
   140016821:	sub    cl,BYTE PTR [r9+0x1714]
   140016828:	lea    eax,[rbx-0x10]
   14001682b:	inc    DWORD PTR [r9+0x28]
   14001682f:	shr    r8w,cl
   140016833:	add    DWORD PTR [r9+0x1714],eax
   14001683a:	mov    WORD PTR [r9+0x1710],r8w
   140016842:	jmp    0x140016862
   140016844:	movzx  eax,WORD PTR [r9+rdi*4+0xaa4]
   14001684d:	shl    ax,cl
   140016850:	or     WORD PTR [r9+0x1710],ax
   140016858:	lea    eax,[rcx+rbx*1]
   14001685b:	mov    DWORD PTR [r9+0x1714],eax
   140016862:	sub    r10d,0x1
   140016866:	jne    0x1400167c7
   14001686c:	jmp    0x140016c85
   140016871:	test   edx,edx
   140016873:	je     0x140016a39
   140016879:	cmp    r13d,edi
   14001687c:	je     0x140016927
   140016882:	movzx  ebx,WORD PTR [r9+rsi*4+0xaa6]
   14001688b:	mov    esi,0x10
   140016890:	mov    ecx,DWORD PTR [r9+0x1714]
   140016897:	mov    eax,esi
   140016899:	sub    eax,ebx
   14001689b:	cmp    ecx,eax
   14001689d:	jle    0x140016904
   14001689f:	movzx  r8d,WORD PTR [r9+r14*4+0xaa4]
   1400168a8:	mov    edx,DWORD PTR [r9+0x28]
   1400168ac:	movzx  eax,r8w
   1400168b0:	shl    ax,cl
   1400168b3:	or     WORD PTR [r9+0x1710],ax
   1400168bb:	mov    al,BYTE PTR [r9+0x1710]
   1400168c2:	mov    rcx,QWORD PTR [r9+0x10]
   1400168c6:	mov    BYTE PTR [rdx+rcx*1],al
   1400168c9:	inc    DWORD PTR [r9+0x28]
   1400168cd:	mov    al,BYTE PTR [r9+0x1711]
   1400168d4:	mov    edx,DWORD PTR [r9+0x28]
   1400168d8:	mov    rcx,QWORD PTR [r9+0x10]
   1400168dc:	mov    BYTE PTR [rdx+rcx*1],al
   1400168df:	mov    ecx,esi
   1400168e1:	sub    cl,BYTE PTR [r9+0x1714]
   1400168e8:	lea    eax,[rbx-0x10]
   1400168eb:	inc    DWORD PTR [r9+0x28]
   1400168ef:	shr    r8w,cl
   1400168f3:	add    DWORD PTR [r9+0x1714],eax
   1400168fa:	mov    WORD PTR [r9+0x1710],r8w
   140016902:	jmp    0x140016922
   140016904:	movzx  edx,WORD PTR [r9+rbp*4+0xaa4]
   14001690d:	lea    eax,[rcx+rbx*1]
   140016910:	shl    dx,cl
   140016913:	or     WORD PTR [r9+0x1710],dx
   14001691b:	mov    DWORD PTR [r9+0x1714],eax
   140016922:	dec    r10d
   140016925:	jmp    0x14001692c
   140016927:	mov    esi,0x10
   14001692c:	movzx  ebx,WORD PTR [r9+0xae6]
   140016934:	mov    eax,esi
   140016936:	mov    ecx,DWORD PTR [r9+0x1714]
   14001693d:	sub    eax,ebx
   14001693f:	cmp    ecx,eax
   140016941:	jle    0x1400169a7
   140016943:	movzx  r8d,WORD PTR [r9+0xae4]
   14001694b:	mov    edx,DWORD PTR [r9+0x28]
   14001694f:	movzx  eax,r8w
   140016953:	shl    ax,cl
   140016956:	or     WORD PTR [r9+0x1710],ax
   14001695e:	mov    al,BYTE PTR [r9+0x1710]
   140016965:	mov    rcx,QWORD PTR [r9+0x10]
   140016969:	mov    BYTE PTR [rdx+rcx*1],al
   14001696c:	inc    DWORD PTR [r9+0x28]
   140016970:	mov    al,BYTE PTR [r9+0x1711]
   140016977:	mov    edx,DWORD PTR [r9+0x28]
   14001697b:	mov    rcx,QWORD PTR [r9+0x10]
   14001697f:	mov    BYTE PTR [rdx+rcx*1],al
   140016982:	mov    ecx,esi
   140016984:	sub    cl,BYTE PTR [r9+0x1714]
   14001698b:	lea    eax,[rbx-0x10]
   14001698e:	inc    DWORD PTR [r9+0x28]
   140016992:	shr    r8w,cl
   140016996:	add    DWORD PTR [r9+0x1714],eax
   14001699d:	mov    WORD PTR [r9+0x1710],r8w
   1400169a5:	jmp    0x1400169c4
   1400169a7:	movzx  eax,WORD PTR [r9+0xae4]
   1400169af:	shl    ax,cl
   1400169b2:	or     WORD PTR [r9+0x1710],ax
   1400169ba:	lea    eax,[rcx+rbx*1]
   1400169bd:	mov    DWORD PTR [r9+0x1714],eax
   1400169c4:	mov    ecx,DWORD PTR [r9+0x1714]
   1400169cb:	cmp    ecx,0xe
   1400169ce:	jle    0x140016a31
   1400169d0:	mov    edx,DWORD PTR [r9+0x28]
   1400169d4:	lea    r8d,[r10-0x3]
   1400169d8:	movzx  eax,r8w
   1400169dc:	shl    ax,cl
   1400169df:	or     WORD PTR [r9+0x1710],ax
   1400169e7:	mov    al,BYTE PTR [r9+0x1710]
   1400169ee:	mov    rcx,QWORD PTR [r9+0x10]
   1400169f2:	mov    BYTE PTR [rdx+rcx*1],al
   1400169f5:	inc    DWORD PTR [r9+0x28]
   1400169f9:	mov    edx,DWORD PTR [r9+0x28]
   1400169fd:	mov    rcx,QWORD PTR [r9+0x10]
   140016a01:	mov    al,BYTE PTR [r9+0x1711]
   140016a08:	mov    BYTE PTR [rdx+rcx*1],al
   140016a0b:	mov    ecx,esi
   140016a0d:	sub    cl,BYTE PTR [r9+0x1714]
   140016a14:	inc    DWORD PTR [r9+0x28]
   140016a18:	shr    r8w,cl
   140016a1c:	add    DWORD PTR [r9+0x1714],0xfffffff2
   140016a24:	mov    WORD PTR [r9+0x1710],r8w
   140016a2c:	jmp    0x140016c85
   140016a31:	lea    eax,[rcx+0x2]
   140016a34:	jmp    0x140016b50
   140016a39:	mov    ecx,DWORD PTR [r9+0x1714]
   140016a40:	mov    esi,0x10
   140016a45:	mov    eax,esi
   140016a47:	cmp    r10d,0xa
   140016a4b:	jg     0x140016b71
   140016a51:	movzx  ebx,WORD PTR [r9+0xaea]
   140016a59:	sub    eax,ebx
   140016a5b:	cmp    ecx,eax
   140016a5d:	jle    0x140016ac3
   140016a5f:	movzx  r8d,WORD PTR [r9+0xae8]
   140016a67:	mov    edx,DWORD PTR [r9+0x28]
   140016a6b:	movzx  eax,r8w
   140016a6f:	shl    ax,cl
   140016a72:	or     WORD PTR [r9+0x1710],ax
   140016a7a:	mov    al,BYTE PTR [r9+0x1710]
   140016a81:	mov    rcx,QWORD PTR [r9+0x10]
   140016a85:	mov    BYTE PTR [rdx+rcx*1],al
   140016a88:	inc    DWORD PTR [r9+0x28]
   140016a8c:	mov    al,BYTE PTR [r9+0x1711]
   140016a93:	mov    edx,DWORD PTR [r9+0x28]
   140016a97:	mov    rcx,QWORD PTR [r9+0x10]
   140016a9b:	mov    BYTE PTR [rdx+rcx*1],al
   140016a9e:	mov    ecx,esi
   140016aa0:	sub    cl,BYTE PTR [r9+0x1714]
   140016aa7:	lea    eax,[rbx-0x10]
   140016aaa:	inc    DWORD PTR [r9+0x28]
   140016aae:	shr    r8w,cl
   140016ab2:	add    DWORD PTR [r9+0x1714],eax
   140016ab9:	mov    WORD PTR [r9+0x1710],r8w
   140016ac1:	jmp    0x140016ae0
   140016ac3:	movzx  eax,WORD PTR [r9+0xae8]
   140016acb:	shl    ax,cl
   140016ace:	or     WORD PTR [r9+0x1710],ax
   140016ad6:	lea    eax,[rcx+rbx*1]
   140016ad9:	mov    DWORD PTR [r9+0x1714],eax
   140016ae0:	mov    ecx,DWORD PTR [r9+0x1714]
   140016ae7:	cmp    ecx,0xd
   140016aea:	jle    0x140016b4d
   140016aec:	mov    edx,DWORD PTR [r9+0x28]
   140016af0:	lea    r8d,[r10-0x3]
   140016af4:	movzx  eax,r8w
   140016af8:	shl    ax,cl
   140016afb:	or     WORD PTR [r9+0x1710],ax
   140016b03:	mov    al,BYTE PTR [r9+0x1710]
   140016b0a:	mov    rcx,QWORD PTR [r9+0x10]
   140016b0e:	mov    BYTE PTR [rdx+rcx*1],al
   140016b11:	inc    DWORD PTR [r9+0x28]
   140016b15:	mov    edx,DWORD PTR [r9+0x28]
   140016b19:	mov    rcx,QWORD PTR [r9+0x10]
   140016b1d:	mov    al,BYTE PTR [r9+0x1711]
   140016b24:	mov    BYTE PTR [rdx+rcx*1],al
   140016b27:	mov    ecx,esi
   140016b29:	sub    cl,BYTE PTR [r9+0x1714]
   140016b30:	inc    DWORD PTR [r9+0x28]
   140016b34:	shr    r8w,cl
   140016b38:	add    DWORD PTR [r9+0x1714],0xfffffff3
   140016b40:	mov    WORD PTR [r9+0x1710],r8w
   140016b48:	jmp    0x140016c85
   140016b4d:	lea    eax,[rcx+0x3]
   140016b50:	mov    edx,0x3
   140016b55:	mov    DWORD PTR [r9+0x1714],eax
   140016b5c:	sub    r10w,dx
   140016b60:	shl    r10w,cl
   140016b64:	or     WORD PTR [r9+0x1710],r10w
   140016b6c:	jmp    0x140016c8a
   140016b71:	movzx  ebx,WORD PTR [r9+0xaee]
   140016b79:	sub    eax,ebx
   140016b7b:	cmp    ecx,eax
   140016b7d:	jle    0x140016be3
   140016b7f:	movzx  r8d,WORD PTR [r9+0xaec]
   140016b87:	mov    edx,DWORD PTR [r9+0x28]
   140016b8b:	movzx  eax,r8w
   140016b8f:	shl    ax,cl
   140016b92:	or     WORD PTR [r9+0x1710],ax
   140016b9a:	mov    al,BYTE PTR [r9+0x1710]
   140016ba1:	mov    rcx,QWORD PTR [r9+0x10]
   140016ba5:	mov    BYTE PTR [rdx+rcx*1],al
   140016ba8:	inc    DWORD PTR [r9+0x28]
   140016bac:	mov    al,BYTE PTR [r9+0x1711]
   140016bb3:	mov    edx,DWORD PTR [r9+0x28]
   140016bb7:	mov    rcx,QWORD PTR [r9+0x10]
   140016bbb:	mov    BYTE PTR [rdx+rcx*1],al
   140016bbe:	mov    ecx,esi
   140016bc0:	sub    cl,BYTE PTR [r9+0x1714]
   140016bc7:	lea    eax,[rbx-0x10]
   140016bca:	inc    DWORD PTR [r9+0x28]
   140016bce:	shr    r8w,cl
   140016bd2:	add    DWORD PTR [r9+0x1714],eax
   140016bd9:	mov    WORD PTR [r9+0x1710],r8w
   140016be1:	jmp    0x140016c00
   140016be3:	movzx  eax,WORD PTR [r9+0xaec]
   140016beb:	shl    ax,cl
   140016bee:	or     WORD PTR [r9+0x1710],ax
   140016bf6:	lea    eax,[rcx+rbx*1]
   140016bf9:	mov    DWORD PTR [r9+0x1714],eax
   140016c00:	mov    ecx,DWORD PTR [r9+0x1714]
   140016c07:	cmp    ecx,0x9
   140016c0a:	jle    0x140016c6a
   140016c0c:	mov    edx,DWORD PTR [r9+0x28]
   140016c10:	lea    r8d,[r10-0xb]
   140016c14:	movzx  eax,r8w
   140016c18:	shl    ax,cl
   140016c1b:	or     WORD PTR [r9+0x1710],ax
   140016c23:	mov    al,BYTE PTR [r9+0x1710]
   140016c2a:	mov    rcx,QWORD PTR [r9+0x10]
   140016c2e:	mov    BYTE PTR [rdx+rcx*1],al
   140016c31:	inc    DWORD PTR [r9+0x28]
   140016c35:	mov    edx,DWORD PTR [r9+0x28]
   140016c39:	mov    rcx,QWORD PTR [r9+0x10]
   140016c3d:	mov    al,BYTE PTR [r9+0x1711]
   140016c44:	mov    BYTE PTR [rdx+rcx*1],al
   140016c47:	mov    ecx,esi
   140016c49:	sub    cl,BYTE PTR [r9+0x1714]
   140016c50:	inc    DWORD PTR [r9+0x28]
   140016c54:	shr    r8w,cl
   140016c58:	add    DWORD PTR [r9+0x1714],0xfffffff7
   140016c60:	mov    WORD PTR [r9+0x1710],r8w
   140016c68:	jmp    0x140016c85
   140016c6a:	sub    r10w,0xb
   140016c6f:	lea    eax,[rcx+0x7]
   140016c72:	shl    r10w,cl
   140016c76:	or     WORD PTR [r9+0x1710],r10w
   140016c7e:	mov    DWORD PTR [r9+0x1714],eax
   140016c85:	mov    edx,0x3
   140016c8a:	xor    r10d,r10d
   140016c8d:	mov    edi,r13d
   140016c90:	test   r11d,r11d
   140016c93:	jne    0x140016c9d
   140016c95:	mov    r8d,0x8a
   140016c9b:	jmp    0x140016ca8
   140016c9d:	cmp    edi,r11d
   140016ca0:	jne    0x140016cac
   140016ca2:	mov    r8d,0x6
   140016ca8:	mov    ecx,edx
   140016caa:	jmp    0x140016cb5
   140016cac:	mov    ecx,0x4
   140016cb1:	lea    r8d,[rcx+0x3]
   140016cb5:	add    r15,0x4
   140016cb9:	sub    r12,0x1
   140016cbd:	jne    0x14001678c
   140016cc3:	mov    rbx,QWORD PTR [rsp+0x30]
   140016cc8:	mov    rbp,QWORD PTR [rsp+0x38]
   140016ccd:	mov    rsi,QWORD PTR [rsp+0x48]
   140016cd2:	pop    r15
   140016cd4:	pop    r14
   140016cd6:	pop    r13
   140016cd8:	pop    r12
   140016cda:	pop    rdi
   140016cdb:	ret    
   140016cdc:	mov    QWORD PTR [rsp+0x8],rbx
   140016ce1:	mov    QWORD PTR [rsp+0x10],rbp
   140016ce6:	mov    QWORD PTR [rsp+0x18],rsi
   140016ceb:	push   rdi
   140016cec:	sub    rsp,0x20
   140016cf0:	mov    rbx,rcx
   140016cf3:	mov    r11d,r9d
   140016cf6:	mov    ecx,DWORD PTR [rcx+0x1714]
   140016cfc:	mov    edi,r8d
   140016cff:	mov    esi,edx
   140016d01:	mov    ebp,0x1
   140016d06:	cmp    ecx,0xb
   140016d09:	jle    0x140016d64
   140016d0b:	lea    r10d,[rdx-0x101]
   140016d12:	mov    edx,DWORD PTR [rbx+0x28]
   140016d15:	movzx  eax,r10w
   140016d19:	shl    ax,cl
   140016d1c:	or     WORD PTR [rbx+0x1710],ax
   140016d23:	mov    al,BYTE PTR [rbx+0x1710]
   140016d29:	mov    rcx,QWORD PTR [rbx+0x10]
   140016d2d:	mov    BYTE PTR [rdx+rcx*1],al
   140016d30:	add    DWORD PTR [rbx+0x28],ebp
   140016d33:	mov    edx,DWORD PTR [rbx+0x28]
   140016d36:	mov    rcx,QWORD PTR [rbx+0x10]
   140016d3a:	mov    al,BYTE PTR [rbx+0x1711]
   140016d40:	mov    BYTE PTR [rdx+rcx*1],al
   140016d43:	lea    ecx,[rbp+0xf]
   140016d46:	sub    cl,BYTE PTR [rbx+0x1714]
   140016d4c:	add    DWORD PTR [rbx+0x28],ebp
   140016d4f:	shr    r10w,cl
   140016d53:	add    DWORD PTR [rbx+0x1714],0xfffffff5
   140016d5a:	mov    WORD PTR [rbx+0x1710],r10w
   140016d62:	jmp    0x140016d82
   140016d64:	movzx  eax,si
   140016d67:	mov    edx,0x101
   140016d6c:	sub    ax,dx
   140016d6f:	shl    ax,cl
   140016d72:	or     WORD PTR [rbx+0x1710],ax
   140016d79:	lea    eax,[rcx+0x5]
   140016d7c:	mov    DWORD PTR [rbx+0x1714],eax
   140016d82:	mov    ecx,DWORD PTR [rbx+0x1714]
   140016d88:	cmp    ecx,0xb
   140016d8b:	jle    0x140016de4
   140016d8d:	mov    edx,DWORD PTR [rbx+0x28]
   140016d90:	dec    r8d
   140016d93:	movzx  eax,r8w
   140016d97:	shl    ax,cl
   140016d9a:	or     WORD PTR [rbx+0x1710],ax
   140016da1:	mov    al,BYTE PTR [rbx+0x1710]
   140016da7:	mov    rcx,QWORD PTR [rbx+0x10]
   140016dab:	mov    BYTE PTR [rdx+rcx*1],al
   140016dae:	add    DWORD PTR [rbx+0x28],ebp
   140016db1:	mov    edx,DWORD PTR [rbx+0x28]
   140016db4:	mov    rcx,QWORD PTR [rbx+0x10]
   140016db8:	mov    al,BYTE PTR [rbx+0x1711]
   140016dbe:	mov    BYTE PTR [rdx+rcx*1],al
   140016dc1:	mov    ecx,0x10
   140016dc6:	sub    cl,BYTE PTR [rbx+0x1714]
   140016dcc:	add    DWORD PTR [rbx+0x28],ebp
   140016dcf:	shr    r8w,cl
   140016dd3:	add    DWORD PTR [rbx+0x1714],0xfffffff5
   140016dda:	mov    WORD PTR [rbx+0x1710],r8w
   140016de2:	jmp    0x140016dfd
   140016de4:	movzx  eax,di
   140016de7:	sub    ax,bp
   140016dea:	shl    ax,cl
   140016ded:	or     WORD PTR [rbx+0x1710],ax
   140016df4:	lea    eax,[rcx+0x5]
   140016df7:	mov    DWORD PTR [rbx+0x1714],eax
   140016dfd:	mov    ecx,DWORD PTR [rbx+0x1714]
   140016e03:	cmp    ecx,0xc
   140016e06:	jle    0x140016e60
   140016e08:	mov    edx,DWORD PTR [rbx+0x28]
   140016e0b:	lea    r8d,[r11-0x4]
   140016e0f:	movzx  eax,r8w
   140016e13:	shl    ax,cl
   140016e16:	or     WORD PTR [rbx+0x1710],ax
   140016e1d:	mov    al,BYTE PTR [rbx+0x1710]
   140016e23:	mov    rcx,QWORD PTR [rbx+0x10]
   140016e27:	mov    BYTE PTR [rdx+rcx*1],al
   140016e2a:	add    DWORD PTR [rbx+0x28],ebp
   140016e2d:	mov    edx,DWORD PTR [rbx+0x28]
   140016e30:	mov    rcx,QWORD PTR [rbx+0x10]
   140016e34:	mov    al,BYTE PTR [rbx+0x1711]
   140016e3a:	mov    BYTE PTR [rdx+rcx*1],al
   140016e3d:	mov    ecx,0x10
   140016e42:	sub    cl,BYTE PTR [rbx+0x1714]
   140016e48:	add    DWORD PTR [rbx+0x28],ebp
   140016e4b:	shr    r8w,cl
   140016e4f:	add    DWORD PTR [rbx+0x1714],0xfffffff4
   140016e56:	mov    WORD PTR [rbx+0x1710],r8w
   140016e5e:	jmp    0x140016e77
   140016e60:	lea    eax,[r11-0x4]
   140016e64:	shl    ax,cl
   140016e67:	or     WORD PTR [rbx+0x1710],ax
   140016e6e:	lea    eax,[rcx+0x4]
   140016e71:	mov    DWORD PTR [rbx+0x1714],eax
   140016e77:	test   r11d,r11d
   140016e7a:	jle    0x140016f1d
   140016e80:	lea    r9,[rip+0x4acc9]        # 0x140061b50
   140016e87:	mov    r10,r11
   140016e8a:	mov    ecx,DWORD PTR [rbx+0x1714]
   140016e90:	movzx  eax,BYTE PTR [r9]
   140016e94:	cmp    ecx,0xd
   140016e97:	jle    0x140016ef6
   140016e99:	movzx  r8d,WORD PTR [rbx+rax*4+0xaa6]
   140016ea2:	mov    edx,DWORD PTR [rbx+0x28]
   140016ea5:	movzx  eax,r8w
   140016ea9:	shl    ax,cl
   140016eac:	or     WORD PTR [rbx+0x1710],ax
   140016eb3:	mov    al,BYTE PTR [rbx+0x1710]
   140016eb9:	mov    rcx,QWORD PTR [rbx+0x10]
   140016ebd:	mov    BYTE PTR [rdx+rcx*1],al
   140016ec0:	add    DWORD PTR [rbx+0x28],ebp
   140016ec3:	mov    edx,DWORD PTR [rbx+0x28]
   140016ec6:	mov    rcx,QWORD PTR [rbx+0x10]
   140016eca:	mov    al,BYTE PTR [rbx+0x1711]
   140016ed0:	mov    BYTE PTR [rdx+rcx*1],al
   140016ed3:	mov    ecx,0x10
   140016ed8:	sub    cl,BYTE PTR [rbx+0x1714]
   140016ede:	add    DWORD PTR [rbx+0x28],ebp
   140016ee1:	shr    r8w,cl
   140016ee5:	add    DWORD PTR [rbx+0x1714],0xfffffff3
   140016eec:	mov    WORD PTR [rbx+0x1710],r8w
   140016ef4:	jmp    0x140016f11
   140016ef6:	movzx  edx,WORD PTR [rbx+rax*4+0xaa6]
   140016efe:	lea    eax,[rcx+0x3]
   140016f01:	shl    dx,cl
   140016f04:	or     WORD PTR [rbx+0x1710],dx
   140016f0b:	mov    DWORD PTR [rbx+0x1714],eax
   140016f11:	add    r9,rbp
   140016f14:	sub    r10,rbp
   140016f17:	jne    0x140016e8a
   140016f1d:	lea    r8d,[rsi-0x1]
   140016f21:	mov    rcx,rbx
   140016f24:	lea    rdx,[rbx+0xbc]
   140016f2b:	call   0x140016730
   140016f30:	lea    r8d,[rdi-0x1]
   140016f34:	mov    rcx,rbx
   140016f37:	lea    rdx,[rbx+0x9b0]
   140016f3e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016f43:	mov    rbp,QWORD PTR [rsp+0x38]
   140016f48:	mov    rsi,QWORD PTR [rsp+0x40]
   140016f4d:	add    rsp,0x20
   140016f51:	pop    rdi
   140016f52:	jmp    0x140016730
   140016f57:	int3   
   140016f58:	mov    QWORD PTR [rsp+0x8],rbx
   140016f5d:	push   rdi
   140016f5e:	sub    rsp,0x20
   140016f62:	mov    rbx,rcx
   140016f65:	mov    edi,r8d
   140016f68:	mov    ecx,DWORD PTR [rcx+0x1714]
   140016f6e:	mov    r11,rdx
   140016f71:	cmp    ecx,0xd
   140016f74:	jle    0x140016fca
   140016f76:	mov    edx,DWORD PTR [rbx+0x28]
   140016f79:	movzx  eax,r9w
   140016f7d:	shl    ax,cl
   140016f80:	or     WORD PTR [rbx+0x1710],ax
   140016f87:	mov    al,BYTE PTR [rbx+0x1710]
   140016f8d:	mov    rcx,QWORD PTR [rbx+0x10]
   140016f91:	mov    BYTE PTR [rdx+rcx*1],al
   140016f94:	inc    DWORD PTR [rbx+0x28]
   140016f97:	mov    edx,DWORD PTR [rbx+0x28]
   140016f9a:	mov    rcx,QWORD PTR [rbx+0x10]
   140016f9e:	mov    al,BYTE PTR [rbx+0x1711]
   140016fa4:	mov    BYTE PTR [rdx+rcx*1],al
   140016fa7:	mov    ecx,0x10
   140016fac:	sub    cl,BYTE PTR [rbx+0x1714]
   140016fb2:	inc    DWORD PTR [rbx+0x28]
   140016fb5:	shr    r9w,cl
   140016fb9:	add    DWORD PTR [rbx+0x1714],0xfffffff3
   140016fc0:	mov    WORD PTR [rbx+0x1710],r9w
   140016fc8:	jmp    0x140016fdf
   140016fca:	shl    r9w,cl
   140016fce:	lea    eax,[rcx+0x3]
   140016fd1:	or     WORD PTR [rbx+0x1710],r9w
   140016fd9:	mov    DWORD PTR [rbx+0x1714],eax
   140016fdf:	mov    rcx,rbx
   140016fe2:	call   0x140017830
   140016fe7:	mov    ecx,DWORD PTR [rbx+0x28]
   140016fea:	mov    r8,rdi
   140016fed:	mov    rax,QWORD PTR [rbx+0x10]
   140016ff1:	mov    BYTE PTR [rcx+rax*1],dil
   140016ff5:	movzx  ecx,di
   140016ff8:	inc    DWORD PTR [rbx+0x28]
   140016ffb:	mov    edx,DWORD PTR [rbx+0x28]
   140016ffe:	mov    rax,QWORD PTR [rbx+0x10]
   140017002:	shr    cx,0x8
   140017006:	mov    BYTE PTR [rdx+rax*1],cl
   140017009:	mov    cl,dil
   14001700c:	inc    DWORD PTR [rbx+0x28]
   14001700f:	not    cl
   140017011:	mov    edx,DWORD PTR [rbx+0x28]
   140017014:	mov    rax,QWORD PTR [rbx+0x10]
   140017018:	mov    BYTE PTR [rdx+rax*1],cl
   14001701b:	movzx  ecx,di
   14001701e:	inc    DWORD PTR [rbx+0x28]
   140017021:	not    cx
   140017024:	mov    edx,DWORD PTR [rbx+0x28]
   140017027:	mov    rax,QWORD PTR [rbx+0x10]
   14001702b:	shr    cx,0x8
   14001702f:	mov    BYTE PTR [rdx+rax*1],cl
   140017032:	mov    rdx,r11
   140017035:	inc    DWORD PTR [rbx+0x28]
   140017038:	mov    ecx,DWORD PTR [rbx+0x28]
   14001703b:	add    rcx,QWORD PTR [rbx+0x10]
   14001703f:	call   0x140028fd0
   140017044:	add    DWORD PTR [rbx+0x28],edi
   140017047:	mov    rbx,QWORD PTR [rsp+0x30]
   14001704c:	add    rsp,0x20
   140017050:	pop    rdi
   140017051:	ret    
   140017052:	int3   
   140017053:	int3   
   140017054:	mov    rax,rsp
   140017057:	mov    QWORD PTR [rax+0x8],rbx
   14001705b:	mov    QWORD PTR [rax+0x10],rbp
   14001705f:	mov    QWORD PTR [rax+0x18],rsi
   140017063:	mov    QWORD PTR [rax+0x20],rdi
   140017067:	push   r12
   140017069:	push   r13
   14001706b:	push   r14
   14001706d:	sub    rsp,0x20
   140017071:	xor    r14d,r14d
   140017074:	mov    edi,r9d
   140017077:	mov    esi,r8d
   14001707a:	mov    rbp,rdx
   14001707d:	mov    rbx,rcx
   140017080:	mov    r10d,r14d
   140017083:	lea    r13d,[r14+0x2]
   140017087:	lea    r12d,[r14+0x4]
   14001708b:	cmp    DWORD PTR [rcx+0xac],r14d
   140017092:	jle    0x1400171c6
   140017098:	mov    r8,QWORD PTR [rcx]
   14001709b:	cmp    DWORD PTR [r8+0x48],r13d
   14001709f:	jne    0x140017116
   1400170a1:	mov    ecx,0xf3ffc07f
   1400170a6:	lea    rax,[rbx+0xbc]
   1400170ad:	mov    edx,r14d
   1400170b0:	test   cl,0x1
   1400170b3:	je     0x1400170bb
   1400170b5:	cmp    WORD PTR [rax],r14w
   1400170b9:	jne    0x140017108
   1400170bb:	inc    rdx
   1400170be:	shr    ecx,1
   1400170c0:	add    rax,r12
   1400170c3:	cmp    rdx,0x1f
   1400170c7:	jle    0x1400170b0
   1400170c9:	cmp    WORD PTR [rbx+0xe0],r14w
   1400170d1:	jne    0x14001710d
   1400170d3:	cmp    WORD PTR [rbx+0xe4],r14w
   1400170db:	jne    0x14001710d
   1400170dd:	cmp    WORD PTR [rbx+0xf0],r14w
   1400170e5:	jne    0x14001710d
   1400170e7:	mov    ecx,0x20
   1400170ec:	lea    rax,[rbx+0x13c]
   1400170f3:	cmp    WORD PTR [rax],r14w
   1400170f7:	jne    0x14001710d
   1400170f9:	inc    rcx
   1400170fc:	add    rax,r12
   1400170ff:	cmp    rcx,0x100
   140017106:	jl     0x1400170f3
   140017108:	mov    eax,r14d
   14001710b:	jmp    0x140017112
   14001710d:	mov    eax,0x1
   140017112:	mov    DWORD PTR [r8+0x48],eax
   140017116:	lea    rdx,[rbx+0xb40]
   14001711d:	mov    rcx,rbx
   140017120:	call   0x14001634c
   140017125:	lea    rdx,[rbx+0xb58]
   14001712c:	mov    rcx,rbx
   14001712f:	call   0x14001634c
   140017134:	mov    r8d,DWORD PTR [rbx+0xb48]
   14001713b:	lea    rdx,[rbx+0xbc]
   140017142:	mov    rcx,rbx
   140017145:	call   0x1400165f8
   14001714a:	mov    r8d,DWORD PTR [rbx+0xb60]
   140017151:	lea    rdx,[rbx+0x9b0]
   140017158:	call   0x1400165f8
   14001715d:	lea    rdx,[rbx+0xb70]
   140017164:	call   0x14001634c
   140017169:	mov    r10d,0x12
   14001716f:	mov    ecx,r10d
   140017172:	lea    rax,[rip+0x4a9d7]        # 0x140061b50
   140017179:	movzx  eax,BYTE PTR [rcx+rax*1]
   14001717d:	cmp    WORD PTR [rbx+rax*4+0xaa6],r14w
   140017186:	jne    0x140017194
   140017188:	dec    r10d
   14001718b:	dec    rcx
   14001718e:	cmp    rcx,0x3
   140017192:	jge    0x140017172
   140017194:	mov    ecx,DWORD PTR [rbx+0x1704]
   14001719a:	lea    eax,[r10*2+0x11]
   1400171a2:	add    eax,r10d
   1400171a5:	add    ecx,0xa
   1400171a8:	add    DWORD PTR [rbx+0x1700],eax
   1400171ae:	mov    eax,DWORD PTR [rbx+0x1700]
   1400171b4:	add    eax,0xa
   1400171b7:	shr    ecx,0x3
   1400171ba:	shr    eax,0x3
   1400171bd:	mov    edx,ecx
   1400171bf:	cmp    ecx,eax
   1400171c1:	cmova  edx,eax
   1400171c4:	jmp    0x1400171cc
   1400171c6:	lea    ecx,[r8+0x5]
   1400171ca:	mov    edx,ecx
   1400171cc:	lea    eax,[rsi+0x4]
   1400171cf:	cmp    eax,edx
   1400171d1:	ja     0x1400171ee
   1400171d3:	test   rbp,rbp
   1400171d6:	je     0x1400171ee
   1400171d8:	mov    r9d,edi
   1400171db:	mov    r8d,esi
   1400171de:	mov    rdx,rbp
   1400171e1:	mov    rcx,rbx
   1400171e4:	call   0x140016f58
   1400171e9:	jmp    0x14001733e
   1400171ee:	cmp    DWORD PTR [rbx+0xb0],r12d
   1400171f5:	je     0x1400172ae
   1400171fb:	cmp    ecx,edx
   1400171fd:	je     0x1400172ae
   140017203:	mov    ecx,DWORD PTR [rbx+0x1714]
   140017209:	cmp    ecx,0xd
   14001720c:	jle    0x140017266
   14001720e:	mov    edx,DWORD PTR [rbx+0x28]
   140017211:	lea    r8d,[rdi+0x4]
   140017215:	movzx  eax,r8w
   140017219:	shl    ax,cl
   14001721c:	or     WORD PTR [rbx+0x1710],ax
   140017223:	mov    al,BYTE PTR [rbx+0x1710]
   140017229:	mov    rcx,QWORD PTR [rbx+0x10]
   14001722d:	mov    BYTE PTR [rdx+rcx*1],al
   140017230:	inc    DWORD PTR [rbx+0x28]
   140017233:	mov    edx,DWORD PTR [rbx+0x28]
   140017236:	mov    rcx,QWORD PTR [rbx+0x10]
   14001723a:	mov    al,BYTE PTR [rbx+0x1711]
   140017240:	mov    BYTE PTR [rdx+rcx*1],al
   140017243:	mov    ecx,0x10
   140017248:	sub    cl,BYTE PTR [rbx+0x1714]
   14001724e:	inc    DWORD PTR [rbx+0x28]
   140017251:	shr    r8w,cl
   140017255:	add    DWORD PTR [rbx+0x1714],0xfffffff3
   14001725c:	mov    WORD PTR [rbx+0x1710],r8w
   140017264:	jmp    0x14001727d
   140017266:	lea    eax,[r12+rdi*1]
   14001726a:	shl    ax,cl
   14001726d:	or     WORD PTR [rbx+0x1710],ax
   140017274:	lea    eax,[rcx+0x3]
   140017277:	mov    DWORD PTR [rbx+0x1714],eax
   14001727d:	mov    r8d,DWORD PTR [rbx+0xb60]
   140017284:	lea    r9d,[r10+0x1]
   140017288:	mov    edx,DWORD PTR [rbx+0xb48]
   14001728e:	inc    r8d
   140017291:	inc    edx
   140017293:	mov    rcx,rbx
   140017296:	call   0x140016cdc
   14001729b:	lea    r8,[rbx+0x9b0]
   1400172a2:	lea    rdx,[rbx+0xbc]
   1400172a9:	jmp    0x140017336
   1400172ae:	mov    ecx,DWORD PTR [rbx+0x1714]
   1400172b4:	cmp    ecx,0xd
   1400172b7:	jle    0x140017311
   1400172b9:	mov    edx,DWORD PTR [rbx+0x28]
   1400172bc:	lea    r8d,[rdi+0x2]
   1400172c0:	movzx  eax,r8w
   1400172c4:	shl    ax,cl
   1400172c7:	or     WORD PTR [rbx+0x1710],ax
   1400172ce:	mov    al,BYTE PTR [rbx+0x1710]
   1400172d4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400172d8:	mov    BYTE PTR [rdx+rcx*1],al
   1400172db:	inc    DWORD PTR [rbx+0x28]
   1400172de:	mov    edx,DWORD PTR [rbx+0x28]
   1400172e1:	mov    rcx,QWORD PTR [rbx+0x10]
   1400172e5:	mov    al,BYTE PTR [rbx+0x1711]
   1400172eb:	mov    BYTE PTR [rdx+rcx*1],al
   1400172ee:	mov    ecx,0x10
   1400172f3:	sub    cl,BYTE PTR [rbx+0x1714]
   1400172f9:	inc    DWORD PTR [rbx+0x28]
   1400172fc:	shr    r8w,cl
   140017300:	add    DWORD PTR [rbx+0x1714],0xfffffff3
   140017307:	mov    WORD PTR [rbx+0x1710],r8w
   14001730f:	jmp    0x140017328
   140017311:	lea    eax,[rdi+r13*1]
   140017315:	shl    ax,cl
   140017318:	or     WORD PTR [rbx+0x1710],ax
   14001731f:	lea    eax,[rcx+0x3]
   140017322:	mov    DWORD PTR [rbx+0x1714],eax
   140017328:	lea    r8,[rip+0x4a071]        # 0x1400613a0
   14001732f:	lea    rdx,[rip+0x4a37a]        # 0x1400616b0
   140017336:	mov    rcx,rbx
   140017339:	call   0x140017370
   14001733e:	mov    rcx,rbx
   140017341:	call   0x140016010
   140017346:	test   edi,edi
   140017348:	je     0x14001734f
   14001734a:	call   0x140017830
   14001734f:	mov    rbx,QWORD PTR [rsp+0x40]
   140017354:	mov    rbp,QWORD PTR [rsp+0x48]
   140017359:	mov    rsi,QWORD PTR [rsp+0x50]
   14001735e:	mov    rdi,QWORD PTR [rsp+0x58]
   140017363:	add    rsp,0x20
   140017367:	pop    r14
   140017369:	pop    r13
   14001736b:	pop    r12
   14001736d:	ret    
   14001736e:	int3   
   14001736f:	int3   
   140017370:	mov    rax,rsp
   140017373:	mov    QWORD PTR [rax+0x8],rbx
   140017377:	mov    QWORD PTR [rax+0x10],rbp
   14001737b:	mov    QWORD PTR [rax+0x18],rsi
   14001737f:	mov    QWORD PTR [rax+0x20],rdi
   140017383:	push   r12
   140017385:	push   r14
   140017387:	push   r15
   140017389:	xor    ebp,ebp
   14001738b:	mov    r15,r8
   14001738e:	mov    rdi,rdx
   140017391:	mov    r10,rcx
   140017394:	lea    r11d,[rbp+0x10]
   140017398:	cmp    DWORD PTR [rcx+0x16f4],ebp
   14001739e:	je     0x140017700
   1400173a4:	lea    r12,[rip+0xfffffffffffe8c55]        # 0x140000000
   1400173ab:	mov    rax,QWORD PTR [r10+0x16f8]
   1400173b2:	mov    ecx,DWORD PTR [r10+0x1714]
   1400173b9:	movzx  r9d,WORD PTR [rax+rbp*2]
   1400173be:	mov    rax,QWORD PTR [r10+0x16e8]
   1400173c5:	movzx  ebx,BYTE PTR [rbp+rax*1+0x0]
   1400173ca:	inc    ebp
   1400173cc:	test   r9d,r9d
   1400173cf:	jne    0x14001745f
   1400173d5:	movsxd rdx,ebx
   1400173d8:	mov    eax,r11d
   1400173db:	movzx  r9d,WORD PTR [rdi+rdx*4+0x2]
   1400173e1:	sub    eax,r9d
   1400173e4:	cmp    ecx,eax
   1400173e6:	jle    0x140017447
   1400173e8:	movzx  r8d,WORD PTR [rdi+rdx*4]
   1400173ed:	mov    edx,DWORD PTR [r10+0x28]
   1400173f1:	movzx  eax,r8w
   1400173f5:	shl    ax,cl
   1400173f8:	or     WORD PTR [r10+0x1710],ax
   140017400:	mov    al,BYTE PTR [r10+0x1710]
   140017407:	mov    rcx,QWORD PTR [r10+0x10]
   14001740b:	mov    BYTE PTR [rdx+rcx*1],al
   14001740e:	inc    DWORD PTR [r10+0x28]
   140017412:	mov    al,BYTE PTR [r10+0x1711]
   140017419:	mov    edx,DWORD PTR [r10+0x28]
   14001741d:	mov    rcx,QWORD PTR [r10+0x10]
   140017421:	mov    BYTE PTR [rdx+rcx*1],al
   140017424:	mov    ecx,r11d
   140017427:	sub    cl,BYTE PTR [r10+0x1714]
   14001742e:	lea    eax,[r9-0x10]
   140017432:	inc    DWORD PTR [r10+0x28]
   140017436:	shr    r8w,cl
   14001743a:	mov    WORD PTR [r10+0x1710],r8w
   140017442:	jmp    0x1400176d3
   140017447:	movzx  eax,WORD PTR [rdi+rdx*4]
   14001744b:	shl    ax,cl
   14001744e:	or     WORD PTR [r10+0x1710],ax
   140017456:	lea    eax,[rcx+r9*1]
   14001745a:	jmp    0x1400176ec
   14001745f:	movzx  r14d,BYTE PTR [rbx+r12*1+0x610a0]
   140017468:	lea    eax,[r14+0x101]
   14001746f:	movzx  esi,WORD PTR [rdi+rax*4+0x2]
   140017474:	mov    edx,eax
   140017476:	mov    eax,r11d
   140017479:	sub    eax,esi
   14001747b:	cmp    ecx,eax
   14001747d:	jle    0x1400174e1
   14001747f:	movzx  r8d,WORD PTR [rdi+rdx*4]
   140017484:	mov    edx,DWORD PTR [r10+0x28]
   140017488:	movzx  eax,r8w
   14001748c:	shl    ax,cl
   14001748f:	or     WORD PTR [r10+0x1710],ax
   140017497:	mov    al,BYTE PTR [r10+0x1710]
   14001749e:	mov    rcx,QWORD PTR [r10+0x10]
   1400174a2:	mov    BYTE PTR [rdx+rcx*1],al
   1400174a5:	inc    DWORD PTR [r10+0x28]
   1400174a9:	mov    al,BYTE PTR [r10+0x1711]
   1400174b0:	mov    edx,DWORD PTR [r10+0x28]
   1400174b4:	mov    rcx,QWORD PTR [r10+0x10]
   1400174b8:	mov    BYTE PTR [rdx+rcx*1],al
   1400174bb:	mov    ecx,r11d
   1400174be:	sub    cl,BYTE PTR [r10+0x1714]
   1400174c5:	lea    eax,[rsi-0x10]
   1400174c8:	inc    DWORD PTR [r10+0x28]
   1400174cc:	shr    r8w,cl
   1400174d0:	add    DWORD PTR [r10+0x1714],eax
   1400174d7:	mov    WORD PTR [r10+0x1710],r8w
   1400174df:	jmp    0x1400174fa
   1400174e1:	movzx  eax,WORD PTR [rdi+rdx*4]
   1400174e5:	shl    ax,cl
   1400174e8:	or     WORD PTR [r10+0x1710],ax
   1400174f0:	lea    eax,[rcx+rsi*1]
   1400174f3:	mov    DWORD PTR [r10+0x1714],eax
   1400174fa:	mov    r8d,DWORD PTR [r12+r14*4+0x61470]
   140017502:	test   r8d,r8d
   140017505:	je     0x140017596
   14001750b:	sub    ebx,DWORD PTR [r12+r14*4+0x61570]
   140017513:	mov    eax,r11d
   140017516:	mov    ecx,DWORD PTR [r10+0x1714]
   14001751d:	sub    eax,r8d
   140017520:	cmp    ecx,eax
   140017522:	jle    0x140017580
   140017524:	mov    edx,DWORD PTR [r10+0x28]
   140017528:	movzx  eax,bx
   14001752b:	shl    ax,cl
   14001752e:	or     WORD PTR [r10+0x1710],ax
   140017536:	mov    al,BYTE PTR [r10+0x1710]
   14001753d:	mov    rcx,QWORD PTR [r10+0x10]
   140017541:	mov    BYTE PTR [rdx+rcx*1],al
   140017544:	inc    DWORD PTR [r10+0x28]
   140017548:	mov    al,BYTE PTR [r10+0x1711]
   14001754f:	mov    edx,DWORD PTR [r10+0x28]
   140017553:	mov    rcx,QWORD PTR [r10+0x10]
   140017557:	mov    BYTE PTR [rdx+rcx*1],al
   14001755a:	mov    ecx,r11d
   14001755d:	sub    cl,BYTE PTR [r10+0x1714]
   140017564:	lea    eax,[r8-0x10]
   140017568:	inc    DWORD PTR [r10+0x28]
   14001756c:	shr    bx,cl
   14001756f:	add    DWORD PTR [r10+0x1714],eax
   140017576:	mov    WORD PTR [r10+0x1710],bx
   14001757e:	jmp    0x140017596
   140017580:	shl    bx,cl
   140017583:	lea    eax,[rcx+r8*1]
   140017587:	or     WORD PTR [r10+0x1710],bx
   14001758f:	mov    DWORD PTR [r10+0x1714],eax
   140017596:	dec    r9d
   140017599:	cmp    r9d,0x100
   1400175a0:	jae    0x1400175ac
   1400175a2:	mov    cl,BYTE PTR [r9+r12*1+0x611a0]
   1400175aa:	jmp    0x1400175bf
   1400175ac:	mov    eax,r9d
   1400175af:	shr    eax,0x7
   1400175b2:	add    eax,0x100
   1400175b7:	mov    cl,BYTE PTR [rax+r12*1+0x611a0]
   1400175bf:	movzx  ebx,cl
   1400175c2:	mov    eax,r11d
   1400175c5:	mov    ecx,DWORD PTR [r10+0x1714]
   1400175cc:	movzx  esi,WORD PTR [r15+rbx*4+0x2]
   1400175d2:	sub    eax,esi
   1400175d4:	cmp    ecx,eax
   1400175d6:	jle    0x14001763a
   1400175d8:	movzx  r8d,WORD PTR [r15+rbx*4]
   1400175dd:	mov    edx,DWORD PTR [r10+0x28]
   1400175e1:	movzx  eax,r8w
   1400175e5:	shl    ax,cl
   1400175e8:	or     WORD PTR [r10+0x1710],ax
   1400175f0:	mov    al,BYTE PTR [r10+0x1710]
   1400175f7:	mov    rcx,QWORD PTR [r10+0x10]
   1400175fb:	mov    BYTE PTR [rdx+rcx*1],al
   1400175fe:	inc    DWORD PTR [r10+0x28]
   140017602:	mov    al,BYTE PTR [r10+0x1711]
   140017609:	mov    edx,DWORD PTR [r10+0x28]
   14001760d:	mov    rcx,QWORD PTR [r10+0x10]
   140017611:	mov    BYTE PTR [rdx+rcx*1],al
   140017614:	mov    ecx,r11d
   140017617:	sub    cl,BYTE PTR [r10+0x1714]
   14001761e:	lea    eax,[rsi-0x10]
   140017621:	inc    DWORD PTR [r10+0x28]
   140017625:	shr    r8w,cl
   140017629:	add    DWORD PTR [r10+0x1714],eax
   140017630:	mov    WORD PTR [r10+0x1710],r8w
   140017638:	jmp    0x140017654
   14001763a:	movzx  eax,WORD PTR [r15+rbx*4]
   14001763f:	shl    ax,cl
   140017642:	or     WORD PTR [r10+0x1710],ax
   14001764a:	lea    eax,[rcx+rsi*1]
   14001764d:	mov    DWORD PTR [r10+0x1714],eax
   140017654:	mov    r8d,DWORD PTR [r12+rbx*4+0x61630]
   14001765c:	test   r8d,r8d
   14001765f:	je     0x1400176f3
   140017665:	sub    r9d,DWORD PTR [r12+rbx*4+0x614f0]
   14001766d:	mov    eax,r11d
   140017670:	mov    ecx,DWORD PTR [r10+0x1714]
   140017677:	sub    eax,r8d
   14001767a:	cmp    ecx,eax
   14001767c:	jle    0x1400176dc
   14001767e:	mov    edx,DWORD PTR [r10+0x28]
   140017682:	movzx  eax,r9w
   140017686:	shl    ax,cl
   140017689:	or     WORD PTR [r10+0x1710],ax
   140017691:	mov    al,BYTE PTR [r10+0x1710]
   140017698:	mov    rcx,QWORD PTR [r10+0x10]
   14001769c:	mov    BYTE PTR [rdx+rcx*1],al
   14001769f:	inc    DWORD PTR [r10+0x28]
   1400176a3:	mov    al,BYTE PTR [r10+0x1711]
   1400176aa:	mov    edx,DWORD PTR [r10+0x28]
   1400176ae:	mov    rcx,QWORD PTR [r10+0x10]
   1400176b2:	mov    BYTE PTR [rdx+rcx*1],al
   1400176b5:	mov    ecx,r11d
   1400176b8:	sub    cl,BYTE PTR [r10+0x1714]
   1400176bf:	lea    eax,[r8-0x10]
   1400176c3:	inc    DWORD PTR [r10+0x28]
   1400176c7:	shr    r9w,cl
   1400176cb:	mov    WORD PTR [r10+0x1710],r9w
   1400176d3:	add    DWORD PTR [r10+0x1714],eax
   1400176da:	jmp    0x1400176f3
   1400176dc:	shl    r9w,cl
   1400176e0:	lea    eax,[rcx+r8*1]
   1400176e4:	or     WORD PTR [r10+0x1710],r9w
   1400176ec:	mov    DWORD PTR [r10+0x1714],eax
   1400176f3:	cmp    ebp,DWORD PTR [r10+0x16f4]
   1400176fa:	jb     0x1400173ab
   140017700:	movzx  ebx,WORD PTR [rdi+0x402]
   140017707:	mov    eax,r11d
   14001770a:	mov    ecx,DWORD PTR [r10+0x1714]
   140017711:	sub    eax,ebx
   140017713:	cmp    ecx,eax
   140017715:	jle    0x14001777e
   140017717:	movzx  r9d,WORD PTR [rdi+0x400]
   14001771f:	mov    r8d,DWORD PTR [r10+0x28]
   140017723:	movzx  eax,r9w
   140017727:	mov    rdx,QWORD PTR [r10+0x10]
   14001772b:	shl    ax,cl
   14001772e:	or     WORD PTR [r10+0x1710],ax
   140017736:	mov    al,BYTE PTR [r10+0x1710]
   14001773d:	mov    BYTE PTR [r8+rdx*1],al
   140017741:	inc    DWORD PTR [r10+0x28]
   140017745:	mov    al,BYTE PTR [r10+0x1711]
   14001774c:	mov    r8d,DWORD PTR [r10+0x28]
   140017750:	mov    rdx,QWORD PTR [r10+0x10]
   140017754:	mov    BYTE PTR [r8+rdx*1],al
   140017758:	lea    eax,[rbx-0x10]
   14001775b:	sub    r11b,BYTE PTR [r10+0x1714]
   140017762:	inc    DWORD PTR [r10+0x28]
   140017766:	mov    cl,r11b
   140017769:	shr    r9w,cl
   14001776d:	add    DWORD PTR [r10+0x1714],eax
   140017774:	mov    WORD PTR [r10+0x1710],r9w
   14001777c:	jmp    0x14001779a
   14001777e:	movzx  eax,WORD PTR [rdi+0x400]
   140017785:	shl    ax,cl
   140017788:	or     WORD PTR [r10+0x1710],ax
   140017790:	lea    eax,[rcx+rbx*1]
   140017793:	mov    DWORD PTR [r10+0x1714],eax
   14001779a:	mov    rbx,QWORD PTR [rsp+0x20]
   14001779f:	mov    rbp,QWORD PTR [rsp+0x28]
   1400177a4:	mov    rsi,QWORD PTR [rsp+0x30]
   1400177a9:	mov    rdi,QWORD PTR [rsp+0x38]
   1400177ae:	pop    r15
   1400177b0:	pop    r14
   1400177b2:	pop    r12
   1400177b4:	ret    
   1400177b5:	int3   
   1400177b6:	int3   
   1400177b7:	int3   
   1400177b8:	mov    eax,DWORD PTR [rcx+0x1714]
   1400177be:	mov    r9,rcx
   1400177c1:	cmp    eax,0x10
   1400177c4:	jne    0x1400177fb
   1400177c6:	mov    r8d,DWORD PTR [rcx+0x28]
   1400177ca:	mov    al,BYTE PTR [rcx+0x1710]
   1400177d0:	mov    rdx,QWORD PTR [rcx+0x10]
   1400177d4:	mov    BYTE PTR [r8+rdx*1],al
   1400177d8:	inc    DWORD PTR [rcx+0x28]
   1400177db:	mov    edx,DWORD PTR [rcx+0x28]
   1400177de:	mov    al,BYTE PTR [r9+0x1711]
   1400177e5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400177e9:	mov    BYTE PTR [rdx+rcx*1],al
   1400177ec:	inc    DWORD PTR [r9+0x28]
   1400177f0:	xor    eax,eax
   1400177f2:	mov    DWORD PTR [r9+0x1714],eax
   1400177f9:	jmp    0x140017825
   1400177fb:	cmp    eax,0x8
   1400177fe:	jl     0x14001782d
   140017800:	mov    edx,DWORD PTR [rcx+0x28]
   140017803:	mov    al,BYTE PTR [r9+0x1710]
   14001780a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001780e:	mov    BYTE PTR [rdx+rcx*1],al
   140017811:	inc    DWORD PTR [r9+0x28]
   140017815:	add    DWORD PTR [r9+0x1714],0xfffffff8
   14001781d:	movzx  eax,BYTE PTR [r9+0x1711]
   140017825:	mov    WORD PTR [r9+0x1710],ax
   14001782d:	ret    
   14001782e:	int3   
   14001782f:	int3   
   140017830:	mov    eax,DWORD PTR [rcx+0x1714]
   140017836:	xor    r10d,r10d
   140017839:	mov    r9,rcx
   14001783c:	cmp    eax,0x8
   14001783f:	jle    0x14001785e
   140017841:	mov    r8d,DWORD PTR [rcx+0x28]
   140017845:	mov    al,BYTE PTR [rcx+0x1710]
   14001784b:	mov    rdx,QWORD PTR [rcx+0x10]
   14001784f:	mov    BYTE PTR [r8+rdx*1],al
   140017853:	inc    DWORD PTR [rcx+0x28]
   140017856:	mov    al,BYTE PTR [rcx+0x1711]
   14001785c:	jmp    0x140017869
   14001785e:	test   eax,eax
   140017860:	jle    0x140017877
   140017862:	mov    al,BYTE PTR [r9+0x1710]
   140017869:	mov    edx,DWORD PTR [rcx+0x28]
   14001786c:	mov    rcx,QWORD PTR [rcx+0x10]
   140017870:	mov    BYTE PTR [rdx+rcx*1],al
   140017873:	inc    DWORD PTR [r9+0x28]
   140017877:	mov    WORD PTR [r9+0x1710],r10w
   14001787f:	mov    DWORD PTR [r9+0x1714],r10d
   140017886:	ret    
   140017887:	int3   
   140017888:	imul   edx,r8d
   14001788c:	mov    ecx,edx
   14001788e:	jmp    0x140032ff4
   140017893:	int3   
   140017894:	mov    rcx,rdx
   140017897:	jmp    0x1400304c4
   14001789c:	mov    r10d,ecx
   14001789f:	movzx  r9d,cx
   1400178a3:	shr    r10d,0x10
   1400178a7:	mov    r11,rdx
   1400178aa:	cmp    r8,0x1
   1400178ae:	jne    0x1400178e0
   1400178b0:	movzx  eax,BYTE PTR [rdx]
   1400178b3:	mov    edx,0xfff1
   1400178b8:	add    r9d,eax
   1400178bb:	cmp    r9d,edx
   1400178be:	lea    ecx,[r9-0xfff1]
   1400178c5:	cmovb  ecx,r9d
   1400178c9:	add    r10d,ecx
   1400178cc:	cmp    r10d,edx
   1400178cf:	lea    eax,[r10-0xfff1]
   1400178d6:	cmovb  eax,r10d
   1400178da:	shl    eax,0x10
   1400178dd:	or     eax,ecx
   1400178df:	ret    
   1400178e0:	test   rdx,rdx
   1400178e3:	jne    0x1400178e9
   1400178e5:	lea    eax,[rdx+0x1]
   1400178e8:	ret    
   1400178e9:	cmp    r8,0x10
   1400178ed:	jae    0x14001792d
   1400178ef:	test   r8,r8
   1400178f2:	je     0x140017907
   1400178f4:	movzx  eax,BYTE PTR [r11]
   1400178f8:	inc    r11
   1400178fb:	add    r9d,eax
   1400178fe:	add    r10d,r9d
   140017901:	sub    r8,0x1
   140017905:	jne    0x1400178f4
   140017907:	mov    edx,0xfff1
   14001790c:	lea    ecx,[r9-0xfff1]
   140017913:	cmp    r9d,edx
   140017916:	mov    eax,0x80078071
   14001791b:	cmovb  ecx,r9d
   14001791f:	mul    r10d
   140017922:	shr    edx,0xf
   140017925:	imul   eax,edx,0xf
   140017928:	add    eax,r10d
   14001792b:	jmp    0x1400178da
   14001792d:	cmp    r8,0x15b0
   140017934:	jb     0x140017a54
   14001793a:	mov    rcx,r8
   14001793d:	movabs rax,0x79baa6bb6398b6f7
   140017947:	mul    r8
   14001794a:	sub    rcx,rdx
   14001794d:	shr    rcx,1
   140017950:	add    rcx,rdx
   140017953:	shr    rcx,0xc
   140017957:	imul   rax,rcx,0xffffffffffffea50
   14001795e:	add    r8,rax
   140017961:	mov    edx,0x15b
   140017966:	movzx  eax,BYTE PTR [r11]
   14001796a:	add    r9d,eax
   14001796d:	movzx  eax,BYTE PTR [r11+0x1]
   140017972:	add    r10d,r9d
   140017975:	add    r9d,eax
   140017978:	movzx  eax,BYTE PTR [r11+0x2]
   14001797d:	add    r10d,r9d
   140017980:	add    r9d,eax
   140017983:	movzx  eax,BYTE PTR [r11+0x3]
   140017988:	add    r10d,r9d
   14001798b:	add    r9d,eax
   14001798e:	movzx  eax,BYTE PTR [r11+0x4]
   140017993:	add    r10d,r9d
   140017996:	add    r9d,eax
   140017999:	movzx  eax,BYTE PTR [r11+0x5]
   14001799e:	add    r10d,r9d
   1400179a1:	add    r9d,eax
   1400179a4:	movzx  eax,BYTE PTR [r11+0x6]
   1400179a9:	add    r10d,r9d
   1400179ac:	add    r9d,eax
   1400179af:	movzx  eax,BYTE PTR [r11+0x7]
   1400179b4:	add    r10d,r9d
   1400179b7:	add    r9d,eax
   1400179ba:	movzx  eax,BYTE PTR [r11+0x8]
   1400179bf:	add    r10d,r9d
   1400179c2:	add    r9d,eax
   1400179c5:	movzx  eax,BYTE PTR [r11+0x9]
   1400179ca:	add    r10d,r9d
   1400179cd:	add    r9d,eax
   1400179d0:	movzx  eax,BYTE PTR [r11+0xa]
   1400179d5:	add    r10d,r9d
   1400179d8:	add    r9d,eax
   1400179db:	movzx  eax,BYTE PTR [r11+0xb]
   1400179e0:	add    r10d,r9d
   1400179e3:	add    r9d,eax
   1400179e6:	movzx  eax,BYTE PTR [r11+0xc]
   1400179eb:	add    r10d,r9d
   1400179ee:	add    r9d,eax
   1400179f1:	movzx  eax,BYTE PTR [r11+0xd]
   1400179f6:	add    r10d,r9d
   1400179f9:	add    r9d,eax
   1400179fc:	movzx  eax,BYTE PTR [r11+0xe]
   140017a01:	add    r10d,r9d
   140017a04:	add    r9d,eax
   140017a07:	movzx  eax,BYTE PTR [r11+0xf]
   140017a0c:	add    r10d,r9d
   140017a0f:	add    r11,0x10
   140017a13:	add    r9d,eax
   140017a16:	add    r10d,r9d
   140017a19:	add    edx,0xffffffff
   140017a1c:	jne    0x140017966
   140017a22:	mov    eax,0x80078071
   140017a27:	mul    r9d
   140017a2a:	shr    edx,0xf
   140017a2d:	imul   eax,edx,0xffff000f
   140017a33:	add    r9d,eax
   140017a36:	mov    eax,0x80078071
   140017a3b:	mul    r10d
   140017a3e:	shr    edx,0xf
   140017a41:	imul   eax,edx,0xffff000f
   140017a47:	add    r10d,eax
   140017a4a:	sub    rcx,0x1
   140017a4e:	jne    0x140017961
   140017a54:	test   r8,r8
   140017a57:	je     0x140017b72
   140017a5d:	cmp    r8,0x10
   140017a61:	jb     0x140017b32
   140017a67:	mov    rcx,r8
   140017a6a:	shr    rcx,0x4
   140017a6e:	imul   rax,rcx,0xfffffffffffffff0
   140017a72:	add    r8,rax
   140017a75:	movzx  eax,BYTE PTR [r11]
   140017a79:	add    r9d,eax
   140017a7c:	movzx  eax,BYTE PTR [r11+0x1]
   140017a81:	add    r10d,r9d
   140017a84:	add    r9d,eax
   140017a87:	movzx  eax,BYTE PTR [r11+0x2]
   140017a8c:	add    r10d,r9d
   140017a8f:	add    r9d,eax
   140017a92:	movzx  eax,BYTE PTR [r11+0x3]
   140017a97:	add    r10d,r9d
   140017a9a:	add    r9d,eax
   140017a9d:	movzx  eax,BYTE PTR [r11+0x4]
   140017aa2:	add    r10d,r9d
   140017aa5:	add    r9d,eax
   140017aa8:	movzx  eax,BYTE PTR [r11+0x5]
   140017aad:	add    r10d,r9d
   140017ab0:	add    r9d,eax
   140017ab3:	movzx  eax,BYTE PTR [r11+0x6]
   140017ab8:	add    r10d,r9d
   140017abb:	add    r9d,eax
   140017abe:	movzx  eax,BYTE PTR [r11+0x7]
   140017ac3:	add    r10d,r9d
   140017ac6:	add    r9d,eax
   140017ac9:	movzx  eax,BYTE PTR [r11+0x8]
   140017ace:	add    r10d,r9d
   140017ad1:	add    r9d,eax
   140017ad4:	movzx  eax,BYTE PTR [r11+0x9]
   140017ad9:	add    r10d,r9d
   140017adc:	add    r9d,eax
   140017adf:	movzx  eax,BYTE PTR [r11+0xa]
   140017ae4:	add    r10d,r9d
   140017ae7:	add    r9d,eax
   140017aea:	movzx  eax,BYTE PTR [r11+0xb]
   140017aef:	add    r10d,r9d
   140017af2:	add    r9d,eax
   140017af5:	movzx  eax,BYTE PTR [r11+0xc]
   140017afa:	add    r10d,r9d
   140017afd:	add    r9d,eax
   140017b00:	movzx  eax,BYTE PTR [r11+0xd]
   140017b05:	add    r10d,r9d
   140017b08:	add    r9d,eax
   140017b0b:	movzx  eax,BYTE PTR [r11+0xe]
   140017b10:	add    r10d,r9d
   140017b13:	add    r9d,eax
   140017b16:	movzx  eax,BYTE PTR [r11+0xf]
   140017b1b:	add    r10d,r9d
   140017b1e:	add    r11,0x10
   140017b22:	add    r9d,eax
   140017b25:	add    r10d,r9d
   140017b28:	sub    rcx,0x1
   140017b2c:	jne    0x140017a75
   140017b32:	test   r8,r8
   140017b35:	je     0x140017b4a
   140017b37:	movzx  eax,BYTE PTR [r11]
   140017b3b:	inc    r11
   140017b3e:	add    r9d,eax
   140017b41:	add    r10d,r9d
   140017b44:	sub    r8,0x1
   140017b48:	jne    0x140017b37
   140017b4a:	mov    eax,0x80078071
   140017b4f:	mul    r9d
   140017b52:	mov    eax,0x80078071
   140017b57:	shr    edx,0xf
   140017b5a:	imul   ecx,edx,0xffff000f
   140017b60:	mul    r10d
   140017b63:	add    r9d,ecx
   140017b66:	shr    edx,0xf
   140017b69:	imul   ecx,edx,0xffff000f
   140017b6f:	add    r10d,ecx
   140017b72:	shl    r10d,0x10
   140017b76:	or     r10d,r9d
   140017b79:	mov    eax,r10d
   140017b7c:	ret    
   140017b7d:	int3   
   140017b7e:	int3   
   140017b7f:	int3   
   140017b80:	mov    QWORD PTR [rsp+0x8],rbx
   140017b85:	push   rbp
   140017b86:	push   rsi
   140017b87:	push   rdi
   140017b88:	push   r12
   140017b8a:	push   r13
   140017b8c:	push   r14
   140017b8e:	push   r15
   140017b90:	lea    rbp,[rsp-0x17]
   140017b95:	sub    rsp,0xd0
   140017b9c:	mov    rax,QWORD PTR [rip+0x594ad]        # 0x140071050
   140017ba3:	xor    rax,rsp
   140017ba6:	mov    QWORD PTR [rbp+0x7],rax
   140017baa:	mov    r14,QWORD PTR [rbp+0x7f]
   140017bae:	mov    r15,rdx
   140017bb1:	mov    QWORD PTR [rbp-0x49],rdx
   140017bb5:	mov    r12,r9
   140017bb8:	xor    edx,edx
   140017bba:	mov    r11d,r8d
   140017bbd:	mov    r8,QWORD PTR [rbp+0x77]
   140017bc1:	mov    edi,ecx
   140017bc3:	mov    QWORD PTR [rbp-0x51],r9
   140017bc7:	mov    r10d,edx
   140017bca:	mov    DWORD PTR [rbp-0x69],ecx
   140017bcd:	lea    r13d,[rdx+0x1]
   140017bd1:	mov    QWORD PTR [rbp-0x41],r8
   140017bd5:	mov    QWORD PTR [rbp-0x59],r14
   140017bd9:	mov    eax,r10d
   140017bdc:	add    rax,rax
   140017bdf:	cmp    rax,0x20
   140017be3:	jae    0x140018002
   140017be9:	add    r10d,r13d
   140017bec:	mov    WORD PTR [rbp+rax*1-0x39],dx
   140017bf1:	cmp    r10d,0xf
   140017bf5:	jbe    0x140017bd9
   140017bf7:	mov    esi,0x2
   140017bfc:	test   r11d,r11d
   140017bff:	je     0x140017c18
   140017c01:	mov    rcx,r15
   140017c04:	mov    rdx,r11
   140017c07:	movzx  eax,WORD PTR [rcx]
   140017c0a:	add    rcx,rsi
   140017c0d:	add    WORD PTR [rbp+rax*2-0x39],r13w
   140017c13:	sub    rdx,r13
   140017c16:	jne    0x140017c07
   140017c18:	mov    ebx,DWORD PTR [r8]
   140017c1b:	or     ecx,0xffffffff
   140017c1e:	mov    DWORD PTR [rsp+0x30],ecx
   140017c22:	mov    r9d,0xf
   140017c28:	mov    eax,r9d
   140017c2b:	cmp    WORD PTR [rbp+rax*2-0x39],dx
   140017c30:	jne    0x140017c3a
   140017c32:	add    r9d,ecx
   140017c35:	cmp    r9d,r13d
   140017c38:	jae    0x140017c28
   140017c3a:	cmp    ebx,r9d
   140017c3d:	cmova  ebx,r9d
   140017c41:	test   r9d,r9d
   140017c44:	jne    0x140017c8e
   140017c46:	mov    DWORD PTR [rsp+0x20],0x140
   140017c4e:	mov    eax,DWORD PTR [rsp+0x20]
   140017c52:	mov    rcx,QWORD PTR [r12]
   140017c56:	mov    DWORD PTR [rcx],eax
   140017c58:	add    QWORD PTR [r12],0x4
   140017c5d:	sub    rsi,r13
   140017c60:	jne    0x140017c52
   140017c62:	mov    DWORD PTR [r8],r13d
   140017c65:	xor    eax,eax
   140017c67:	mov    rcx,QWORD PTR [rbp+0x7]
   140017c6b:	xor    rcx,rsp
   140017c6e:	call   0x140025df0
   140017c73:	mov    rbx,QWORD PTR [rsp+0x110]
   140017c7b:	add    rsp,0xd0
   140017c82:	pop    r15
   140017c84:	pop    r14
   140017c86:	pop    r13
   140017c88:	pop    r12
   140017c8a:	pop    rdi
   140017c8b:	pop    rsi
   140017c8c:	pop    rbp
   140017c8d:	ret    
   140017c8e:	mov    r8d,r13d
   140017c91:	cmp    r9d,r13d
   140017c94:	jbe    0x140017caa
   140017c96:	lea    rax,[rbp-0x37]
   140017c9a:	cmp    WORD PTR [rax],dx
   140017c9d:	jne    0x140017caa
   140017c9f:	add    r8d,r13d
   140017ca2:	add    rax,rsi
   140017ca5:	cmp    r8d,r9d
   140017ca8:	jb     0x140017c9a
   140017caa:	cmp    ebx,r8d
   140017cad:	mov    edx,r13d
   140017cb0:	mov    r10d,r13d
   140017cb3:	cmovb  ebx,r8d
   140017cb7:	mov    eax,r10d
   140017cba:	add    edx,edx
   140017cbc:	movzx  ecx,WORD PTR [rbp+rax*2-0x39]
   140017cc1:	sub    edx,ecx
   140017cc3:	js     0x140017ffa
   140017cc9:	add    r10d,r13d
   140017ccc:	cmp    r10d,0xf
   140017cd0:	jbe    0x140017cb7
   140017cd2:	xor    r10d,r10d
   140017cd5:	test   edx,edx
   140017cd7:	jle    0x140017cea
   140017cd9:	test   edi,edi
   140017cdb:	je     0x140017ffa
   140017ce1:	cmp    r9d,r13d
   140017ce4:	jne    0x140017ffa
   140017cea:	mov    WORD PTR [rbp-0x17],r10w
   140017cef:	mov    rcx,r10
   140017cf2:	mov    edx,0xe
   140017cf7:	movzx  eax,WORD PTR [rbp+rcx*1-0x37]
   140017cfc:	add    ax,WORD PTR [rbp+rcx*1-0x17]
   140017d01:	mov    WORD PTR [rbp+rcx*1-0x15],ax
   140017d06:	add    rcx,rsi
   140017d09:	sub    rdx,r13
   140017d0c:	jne    0x140017cf7
   140017d0e:	test   r11d,r11d
   140017d11:	je     0x140017d42
   140017d13:	mov    rdx,r15
   140017d16:	xor    r15d,r15d
   140017d19:	cmp    WORD PTR [rdx],r15w
   140017d1d:	je     0x140017d35
   140017d1f:	movzx  eax,WORD PTR [rdx]
   140017d22:	movzx  ecx,WORD PTR [rbp+rax*2-0x19]
   140017d27:	mov    WORD PTR [r14+rcx*2],r10w
   140017d2c:	movzx  eax,WORD PTR [rdx]
   140017d2f:	add    WORD PTR [rbp+rax*2-0x19],r13w
   140017d35:	add    r10d,r13d
   140017d38:	add    rdx,rsi
   140017d3b:	cmp    r10d,r11d
   140017d3e:	jb     0x140017d19
   140017d40:	jmp    0x140017d45
   140017d42:	xor    r15d,r15d
   140017d45:	test   edi,edi
   140017d47:	je     0x140017d88
   140017d49:	cmp    edi,r13d
   140017d4c:	je     0x140017d6a
   140017d4e:	lea    r10,[rip+0x49edb]        # 0x140061c30
   140017d55:	mov    edx,r15d
   140017d58:	lea    rax,[rip+0x49e11]        # 0x140061b70
   140017d5f:	mov    QWORD PTR [rsp+0x38],r10
   140017d64:	mov    QWORD PTR [rbp-0x61],rax
   140017d68:	jmp    0x140017d99
   140017d6a:	lea    r10,[rip+0x49e7f]        # 0x140061bf0
   140017d71:	mov    edx,0x101
   140017d76:	lea    rax,[rip+0x49e33]        # 0x140061bb0
   140017d7d:	mov    QWORD PTR [rsp+0x38],r10
   140017d82:	mov    QWORD PTR [rbp-0x61],rax
   140017d86:	jmp    0x140017d99
   140017d88:	mov    QWORD PTR [rbp-0x61],r14
   140017d8c:	mov    r10,r14
   140017d8f:	mov    QWORD PTR [rsp+0x38],r14
   140017d94:	mov    edx,0x14
   140017d99:	mov    rax,QWORD PTR [r12]
   140017d9d:	mov    ecx,ebx
   140017d9f:	shl    r13d,cl
   140017da2:	mov    r11d,r15d
   140017da5:	mov    QWORD PTR [rbp-0x79],rax
   140017da9:	mov    r14d,r13d
   140017dac:	mov    DWORD PTR [rsp+0x24],edx
   140017db0:	mov    DWORD PTR [rsp+0x28],r15d
   140017db5:	mov    DWORD PTR [rsp+0x2c],r15d
   140017dba:	lea    eax,[r13-0x1]
   140017dbe:	mov    DWORD PTR [rbp-0x71],eax
   140017dc1:	cmp    edi,0x1
   140017dc4:	jne    0x140017dcf
   140017dc6:	cmp    r13d,0x354
   140017dcd:	ja     0x140017ddc
   140017dcf:	cmp    edi,esi
   140017dd1:	jne    0x140017de6
   140017dd3:	cmp    r13d,0x250
   140017dda:	jbe    0x140017de6
   140017ddc:	mov    eax,0x1
   140017de1:	jmp    0x140017c67
   140017de6:	mov    ecx,r15d
   140017de9:	jmp    0x140017fb8
   140017dee:	mov    r15d,DWORD PTR [rsp+0x2c]
   140017df3:	mov    al,r8b
   140017df6:	sub    al,r15b
   140017df9:	mov    BYTE PTR [rsp+0x21],al
   140017dfd:	mov    eax,ecx
   140017dff:	mov    rcx,QWORD PTR [rbp-0x59]
   140017e03:	movzx  ecx,WORD PTR [rcx+rax*2]
   140017e07:	lea    eax,[rcx+0x1]
   140017e0a:	cmp    eax,edx
   140017e0c:	jae    0x140017e1a
   140017e0e:	mov    BYTE PTR [rsp+0x20],dil
   140017e13:	mov    WORD PTR [rsp+0x22],cx
   140017e18:	jmp    0x140017e41
   140017e1a:	cmp    ecx,edx
   140017e1c:	jb     0x140017e37
   140017e1e:	mov    rax,QWORD PTR [rbp-0x61]
   140017e22:	sub    ecx,edx
   140017e24:	mov    al,BYTE PTR [rax+rcx*2]
   140017e27:	mov    BYTE PTR [rsp+0x20],al
   140017e2b:	movzx  eax,WORD PTR [r10+rcx*2]
   140017e30:	mov    WORD PTR [rsp+0x22],ax
   140017e35:	jmp    0x140017e41
   140017e37:	mov    BYTE PTR [rsp+0x20],0x60
   140017e3c:	mov    WORD PTR [rsp+0x22],di
   140017e41:	mov    eax,DWORD PTR [rsp+0x20]
   140017e45:	mov    ecx,r8d
   140017e48:	mov    r12,QWORD PTR [rbp-0x79]
   140017e4c:	sub    ecx,r15d
   140017e4f:	mov    edi,0x1
   140017e54:	mov    edx,r11d
   140017e57:	shl    edi,cl
   140017e59:	mov    r10d,r13d
   140017e5c:	mov    ecx,r15d
   140017e5f:	shr    edx,cl
   140017e61:	add    edx,r13d
   140017e64:	sub    edx,edi
   140017e66:	mov    DWORD PTR [r12+rdx*4],eax
   140017e6a:	sub    r10d,edi
   140017e6d:	jne    0x140017e64
   140017e6f:	mov    r12,QWORD PTR [rbp-0x51]
   140017e73:	lea    ecx,[r8-0x1]
   140017e77:	lea    edx,[r10+0x1]
   140017e7b:	shl    edx,cl
   140017e7d:	jmp    0x140017e81
   140017e7f:	shr    edx,1
   140017e81:	test   r11d,edx
   140017e84:	jne    0x140017e7f
   140017e86:	xor    edi,edi
   140017e88:	test   edx,edx
   140017e8a:	je     0x140017e97
   140017e8c:	lea    eax,[rdx-0x1]
   140017e8f:	and    r11d,eax
   140017e92:	add    r11d,edx
   140017e95:	jmp    0x140017e9a
   140017e97:	mov    r11d,edi
   140017e9a:	mov    ecx,DWORD PTR [rsp+0x28]
   140017e9e:	mov    edx,0xffff
   140017ea3:	inc    ecx
   140017ea5:	mov    eax,r8d
   140017ea8:	mov    DWORD PTR [rsp+0x28],ecx
   140017eac:	add    WORD PTR [rbp+rax*2-0x39],dx
   140017eb1:	jne    0x140017ed3
   140017eb3:	cmp    r8d,r9d
   140017eb6:	je     0x140017fbf
   140017ebc:	mov    eax,ecx
   140017ebe:	mov    rcx,QWORD PTR [rbp-0x59]
   140017ec2:	movzx  ecx,WORD PTR [rcx+rax*2]
   140017ec6:	mov    rax,QWORD PTR [rbp-0x49]
   140017eca:	movzx  r8d,WORD PTR [rax+rcx*2]
   140017ecf:	mov    ecx,DWORD PTR [rsp+0x28]
   140017ed3:	mov    edx,DWORD PTR [rsp+0x24]
   140017ed7:	mov    r10,QWORD PTR [rsp+0x38]
   140017edc:	cmp    r8d,ebx
   140017edf:	jbe    0x140017df3
   140017ee5:	mov    r15d,DWORD PTR [rbp-0x71]
   140017ee9:	and    r15d,r11d
   140017eec:	cmp    r15d,DWORD PTR [rsp+0x30]
   140017ef1:	je     0x140017dee
   140017ef7:	mov    r10d,DWORD PTR [rsp+0x2c]
   140017efc:	mov    edi,r8d
   140017eff:	mov    rcx,QWORD PTR [rbp-0x79]
   140017f03:	test   r10d,r10d
   140017f06:	mov    edx,0x1
   140017f0b:	cmove  r10d,ebx
   140017f0f:	sub    edi,r10d
   140017f12:	mov    DWORD PTR [rsp+0x2c],r10d
   140017f17:	lea    rcx,[rcx+r13*4]
   140017f1b:	add    r10d,edi
   140017f1e:	mov    QWORD PTR [rbp-0x79],rcx
   140017f22:	mov    ecx,edi
   140017f24:	shl    edx,cl
   140017f26:	cmp    r10d,r9d
   140017f29:	jae    0x140017f47
   140017f2b:	movzx  ecx,WORD PTR [rbp+r10*2-0x39]
   140017f31:	sub    edx,ecx
   140017f33:	test   edx,edx
   140017f35:	jle    0x140017f43
   140017f37:	inc    edi
   140017f39:	inc    r10d
   140017f3c:	add    edx,edx
   140017f3e:	cmp    r10d,r9d
   140017f41:	jb     0x140017f2b
   140017f43:	mov    r12,QWORD PTR [rbp-0x51]
   140017f47:	mov    eax,DWORD PTR [rbp-0x69]
   140017f4a:	mov    ecx,edi
   140017f4c:	mov    r13d,0x1
   140017f52:	shl    r13d,cl
   140017f55:	add    r14d,r13d
   140017f58:	cmp    eax,0x1
   140017f5b:	jne    0x140017f6a
   140017f5d:	cmp    r14d,0x354
   140017f64:	ja     0x140017ddc
   140017f6a:	cmp    eax,esi
   140017f6c:	jne    0x140017f7b
   140017f6e:	cmp    r14d,0x250
   140017f75:	ja     0x140017ddc
   140017f7b:	mov    rax,QWORD PTR [r12]
   140017f7f:	mov    edx,DWORD PTR [rsp+0x24]
   140017f83:	mov    r10,QWORD PTR [rsp+0x38]
   140017f88:	mov    DWORD PTR [rsp+0x30],r15d
   140017f8d:	mov    BYTE PTR [rax+r15*4],dil
   140017f91:	mov    rax,QWORD PTR [r12]
   140017f95:	mov    BYTE PTR [rax+r15*4+0x1],bl
   140017f9a:	mov    rcx,QWORD PTR [r12]
   140017f9e:	mov    rax,QWORD PTR [rbp-0x79]
   140017fa2:	sub    rax,rcx
   140017fa5:	sar    rax,0x2
   140017fa9:	mov    WORD PTR [rcx+r15*4+0x2],ax
   140017faf:	mov    r15d,DWORD PTR [rsp+0x2c]
   140017fb4:	mov    ecx,DWORD PTR [rsp+0x28]
   140017fb8:	xor    edi,edi
   140017fba:	jmp    0x140017df3
   140017fbf:	test   r11d,r11d
   140017fc2:	je     0x140017fe4
   140017fc4:	mov    rdx,QWORD PTR [rbp-0x79]
   140017fc8:	sub    r8b,r15b
   140017fcb:	mov    ecx,r11d
   140017fce:	mov    BYTE PTR [rsp+0x20],0x40
   140017fd3:	mov    BYTE PTR [rsp+0x21],r8b
   140017fd8:	mov    WORD PTR [rsp+0x22],di
   140017fdd:	mov    eax,DWORD PTR [rsp+0x20]
   140017fe1:	mov    DWORD PTR [rdx+rcx*4],eax
   140017fe4:	mov    eax,r14d
   140017fe7:	shl    rax,0x2
   140017feb:	add    QWORD PTR [r12],rax
   140017fef:	mov    rax,QWORD PTR [rbp-0x41]
   140017ff3:	mov    DWORD PTR [rax],ebx
   140017ff5:	jmp    0x140017c65
   140017ffa:	or     eax,0xffffffff
   140017ffd:	jmp    0x140017c67
   140018002:	call   0x140026914
   140018007:	int3   
   140018008:	rex push rbx
   14001800a:	push   rbp
   14001800b:	push   rsi
   14001800c:	push   rdi
   14001800d:	push   r12
   14001800f:	push   r13
   140018011:	push   r14
   140018013:	push   r15
   140018015:	sub    rsp,0x28
   140018019:	mov    rbp,QWORD PTR [rcx+0x28]
   14001801d:	mov    eax,edx
   14001801f:	mov    edx,DWORD PTR [rcx+0x18]
   140018022:	mov    r14,rcx
   140018025:	mov    r12d,DWORD PTR [rcx+0x8]
   140018029:	sub    eax,edx
   14001802b:	mov    r9,QWORD PTR [rcx+0x10]
   14001802f:	sub    r12d,0x5
   140018033:	mov    rbx,QWORD PTR [rcx]
   140018036:	mov    esi,0x1
   14001803b:	mov    r11,QWORD PTR [rbp+0x60]
   14001803f:	lea    r13d,[rdx-0x101]
   140018046:	mov    r8d,DWORD PTR [rbp+0x34]
   14001804a:	mov    rcx,r9
   14001804d:	mov    r15d,DWORD PTR [rbp+0x3c]
   140018051:	sub    rcx,rax
   140018054:	mov    eax,DWORD PTR [rbp+0x38]
   140018057:	mov    edx,0x1
   14001805c:	mov    edi,DWORD PTR [rbp+0x48]
   14001805f:	add    r12,rbx
   140018062:	mov    r10d,DWORD PTR [rbp+0x4c]
   140018066:	add    r13,r9
   140018069:	mov    QWORD PTR [rsp+0x18],rcx
   14001806e:	mov    ecx,DWORD PTR [rbp+0x70]
   140018071:	shl    edx,cl
   140018073:	mov    ecx,DWORD PTR [rbp+0x74]
   140018076:	dec    edx
   140018078:	mov    DWORD PTR [rsp+0x80],eax
   14001807f:	mov    rax,QWORD PTR [rbp+0x40]
   140018083:	shl    esi,cl
   140018085:	mov    QWORD PTR [rsp],rax
   140018089:	dec    esi
   14001808b:	mov    rax,QWORD PTR [rbp+0x68]
   14001808f:	mov    DWORD PTR [rsp+0x78],esi
   140018093:	mov    DWORD PTR [rsp+0x70],r8d
   140018098:	mov    QWORD PTR [rsp+0x10],r11
   14001809d:	mov    QWORD PTR [rsp+0x8],rax
   1400180a2:	mov    DWORD PTR [rsp+0x88],edx
   1400180a9:	cmp    r10d,0xf
   1400180ad:	jae    0x1400180cd
   1400180af:	movzx  eax,BYTE PTR [rbx]
   1400180b2:	mov    ecx,r10d
   1400180b5:	shl    eax,cl
   1400180b7:	lea    ecx,[r10+0x8]
   1400180bb:	add    edi,eax
   1400180bd:	movzx  eax,BYTE PTR [rbx+0x1]
   1400180c1:	shl    eax,cl
   1400180c3:	add    rbx,0x2
   1400180c7:	add    edi,eax
   1400180c9:	add    r10d,0x10
   1400180cd:	mov    ecx,edx
   1400180cf:	mov    eax,edi
   1400180d1:	and    rcx,rax
   1400180d4:	mov    r11d,DWORD PTR [r11+rcx*4]
   1400180d8:	jmp    0x140018105
   1400180da:	test   dl,0x10
   1400180dd:	jne    0x140018128
   1400180df:	test   dl,0x40
   1400180e2:	jne    0x1400183bb
   1400180e8:	mov    ecx,edx
   1400180ea:	shr    r11d,0x10
   1400180ee:	mov    eax,0x1
   1400180f3:	shl    eax,cl
   1400180f5:	mov    rcx,QWORD PTR [rsp+0x10]
   1400180fa:	dec    eax
   1400180fc:	and    eax,edi
   1400180fe:	add    eax,r11d
   140018101:	mov    r11d,DWORD PTR [rcx+rax*4]
   140018105:	mov    eax,r11d
   140018108:	movzx  edx,r11b
   14001810c:	shr    eax,0x8
   14001810f:	movzx  ecx,al
   140018112:	shr    edi,cl
   140018114:	sub    r10d,ecx
   140018117:	test   r11b,r11b
   14001811a:	jne    0x1400180da
   14001811c:	shr    r11d,0x10
   140018120:	mov    BYTE PTR [r9],r11b
   140018123:	jmp    0x140018392
   140018128:	shr    r11d,0x10
   14001812c:	and    edx,0xf
   14001812f:	je     0x14001815c
   140018131:	cmp    r10d,edx
   140018134:	jae    0x140018147
   140018136:	movzx  eax,BYTE PTR [rbx]
   140018139:	mov    ecx,r10d
   14001813c:	shl    eax,cl
   14001813e:	inc    rbx
   140018141:	add    edi,eax
   140018143:	add    r10d,0x8
   140018147:	mov    ecx,edx
   140018149:	mov    eax,0x1
   14001814e:	shl    eax,cl
   140018150:	dec    eax
   140018152:	and    eax,edi
   140018154:	shr    edi,cl
   140018156:	add    r11d,eax
   140018159:	sub    r10d,edx
   14001815c:	cmp    r10d,0xf
   140018160:	jae    0x140018180
   140018162:	movzx  eax,BYTE PTR [rbx]
   140018165:	mov    ecx,r10d
   140018168:	shl    eax,cl
   14001816a:	lea    ecx,[r10+0x8]
   14001816e:	add    edi,eax
   140018170:	movzx  eax,BYTE PTR [rbx+0x1]
   140018174:	shl    eax,cl
   140018176:	add    rbx,0x2
   14001817a:	add    edi,eax
   14001817c:	add    r10d,0x10
   140018180:	mov    ecx,esi
   140018182:	mov    eax,edi
   140018184:	and    rcx,rax
   140018187:	mov    rax,QWORD PTR [rsp+0x8]
   14001818c:	mov    esi,DWORD PTR [rax+rcx*4]
   14001818f:	jmp    0x1400181b4
   140018191:	test   dl,0x40
   140018194:	jne    0x1400183d2
   14001819a:	mov    ecx,edx
   14001819c:	shr    esi,0x10
   14001819f:	mov    eax,0x1
   1400181a4:	shl    eax,cl
   1400181a6:	mov    rcx,QWORD PTR [rsp+0x8]
   1400181ab:	dec    eax
   1400181ad:	and    eax,edi
   1400181af:	add    eax,esi
   1400181b1:	mov    esi,DWORD PTR [rcx+rax*4]
   1400181b4:	mov    eax,esi
   1400181b6:	movzx  edx,sil
   1400181ba:	shr    eax,0x8
   1400181bd:	movzx  ecx,al
   1400181c0:	shr    edi,cl
   1400181c2:	sub    r10d,ecx
   1400181c5:	test   dl,0x10
   1400181c8:	je     0x140018191
   1400181ca:	shr    esi,0x10
   1400181cd:	and    edx,0xf
   1400181d0:	cmp    r10d,edx
   1400181d3:	jae    0x1400181fc
   1400181d5:	movzx  eax,BYTE PTR [rbx]
   1400181d8:	mov    ecx,r10d
   1400181db:	shl    eax,cl
   1400181dd:	inc    rbx
   1400181e0:	add    edi,eax
   1400181e2:	add    r10d,0x8
   1400181e6:	cmp    r10d,edx
   1400181e9:	jae    0x1400181fc
   1400181eb:	movzx  eax,BYTE PTR [rbx]
   1400181ee:	mov    ecx,r10d
   1400181f1:	shl    eax,cl
   1400181f3:	inc    rbx
   1400181f6:	add    edi,eax
   1400181f8:	add    r10d,0x8
   1400181fc:	mov    ecx,edx
   1400181fe:	mov    eax,0x1
   140018203:	shl    eax,cl
   140018205:	sub    r10d,edx
   140018208:	dec    eax
   14001820a:	and    eax,edi
   14001820c:	shr    edi,cl
   14001820e:	add    esi,eax
   140018210:	mov    eax,r9d
   140018213:	sub    eax,DWORD PTR [rsp+0x18]
   140018217:	cmp    esi,eax
   140018219:	jbe    0x140018348
   14001821f:	mov    ecx,esi
   140018221:	sub    ecx,eax
   140018223:	cmp    ecx,DWORD PTR [rsp+0x80]
   14001822a:	jbe    0x140018239
   14001822c:	cmp    DWORD PTR [rbp+0x1be0],0x0
   140018233:	jne    0x1400183db
   140018239:	test   r15d,r15d
   14001823c:	jne    0x140018264
   14001823e:	sub    r8d,ecx
   140018241:	add    r8,QWORD PTR [rsp]
   140018245:	cmp    ecx,r11d
   140018248:	jae    0x1400182e1
   14001824e:	sub    r11d,ecx
   140018251:	mov    al,BYTE PTR [r8]
   140018254:	inc    r8
   140018257:	mov    BYTE PTR [r9],al
   14001825a:	inc    r9
   14001825d:	add    ecx,0xffffffff
   140018260:	jne    0x140018251
   140018262:	jmp    0x1400182d9
   140018264:	cmp    r15d,ecx
   140018267:	jae    0x1400182b6
   140018269:	mov    rdx,QWORD PTR [rsp]
   14001826d:	mov    eax,r15d
   140018270:	sub    eax,ecx
   140018272:	sub    ecx,r15d
   140018275:	add    r8d,eax
   140018278:	add    r8,rdx
   14001827b:	cmp    ecx,r11d
   14001827e:	jae    0x1400182e1
   140018280:	sub    r11d,ecx
   140018283:	sub    r8,r9
   140018286:	mov    al,BYTE PTR [r8+r9*1]
   14001828a:	mov    BYTE PTR [r9],al
   14001828d:	inc    r9
   140018290:	add    ecx,0xffffffff
   140018293:	jne    0x140018286
   140018295:	mov    r8,rdx
   140018298:	cmp    r15d,r11d
   14001829b:	jae    0x1400182e1
   14001829d:	mov    ecx,r15d
   1400182a0:	sub    r11d,r15d
   1400182a3:	mov    al,BYTE PTR [r8]
   1400182a6:	inc    r8
   1400182a9:	mov    BYTE PTR [r9],al
   1400182ac:	inc    r9
   1400182af:	add    ecx,0xffffffff
   1400182b2:	jne    0x1400182a3
   1400182b4:	jmp    0x1400182d9
   1400182b6:	mov    r8d,r15d
   1400182b9:	sub    r8d,ecx
   1400182bc:	add    r8,QWORD PTR [rsp]
   1400182c0:	cmp    ecx,r11d
   1400182c3:	jae    0x1400182e1
   1400182c5:	sub    r11d,ecx
   1400182c8:	mov    al,BYTE PTR [r8]
   1400182cb:	inc    r8
   1400182ce:	mov    BYTE PTR [r9],al
   1400182d1:	inc    r9
   1400182d4:	add    ecx,0xffffffff
   1400182d7:	jne    0x1400182c8
   1400182d9:	mov    eax,esi
   1400182db:	mov    r8,r9
   1400182de:	sub    r8,rax
   1400182e1:	cmp    r11d,0x2
   1400182e5:	jbe    0x14001831f
   1400182e7:	lea    ecx,[r11-0x3]
   1400182eb:	mov    eax,0xaaaaaaab
   1400182f0:	mul    ecx
   1400182f2:	shr    edx,1
   1400182f4:	lea    ecx,[rdx+0x1]
   1400182f7:	mov    al,BYTE PTR [r8]
   1400182fa:	add    r11d,0xfffffffd
   1400182fe:	mov    BYTE PTR [r9],al
   140018301:	mov    al,BYTE PTR [r8+0x1]
   140018305:	mov    BYTE PTR [r9+0x1],al
   140018309:	mov    al,BYTE PTR [r8+0x2]
   14001830d:	add    r8,0x3
   140018311:	mov    BYTE PTR [r9+0x2],al
   140018315:	add    r9,0x3
   140018319:	sub    rcx,0x1
   14001831d:	jne    0x1400182f7
   14001831f:	test   r11d,r11d
   140018322:	je     0x140018397
   140018324:	mov    al,BYTE PTR [r8]
   140018327:	mov    esi,DWORD PTR [rsp+0x78]
   14001832b:	mov    BYTE PTR [r9],al
   14001832e:	inc    r9
   140018331:	cmp    r11d,0x1
   140018335:	jbe    0x140018341
   140018337:	mov    al,BYTE PTR [r8+0x1]
   14001833b:	mov    BYTE PTR [r9],al
   14001833e:	inc    r9
   140018341:	mov    r8d,DWORD PTR [rsp+0x70]
   140018346:	jmp    0x1400183a0
   140018348:	mov    eax,esi
   14001834a:	mov    rcx,r9
   14001834d:	sub    rcx,rax
   140018350:	mov    al,BYTE PTR [rcx]
   140018352:	add    r11d,0xfffffffd
   140018356:	mov    BYTE PTR [r9],al
   140018359:	mov    al,BYTE PTR [rcx+0x1]
   14001835c:	lea    rcx,[rcx+0x3]
   140018360:	mov    BYTE PTR [r9+0x1],al
   140018364:	mov    al,BYTE PTR [rcx-0x1]
   140018367:	mov    BYTE PTR [r9+0x2],al
   14001836b:	add    r9,0x3
   14001836f:	cmp    r11d,0x2
   140018373:	ja     0x140018350
   140018375:	test   r11d,r11d
   140018378:	je     0x14001839c
   14001837a:	mov    al,BYTE PTR [rcx]
   14001837c:	mov    esi,DWORD PTR [rsp+0x78]
   140018380:	mov    BYTE PTR [r9],al
   140018383:	inc    r9
   140018386:	cmp    r11d,0x1
   14001838a:	jbe    0x1400183a0
   14001838c:	mov    al,BYTE PTR [rcx+0x1]
   14001838f:	mov    BYTE PTR [r9],al
   140018392:	inc    r9
   140018395:	jmp    0x1400183a0
   140018397:	mov    r8d,DWORD PTR [rsp+0x70]
   14001839c:	mov    esi,DWORD PTR [rsp+0x78]
   1400183a0:	cmp    rbx,r12
   1400183a3:	jae    0x1400183ed
   1400183a5:	cmp    r9,r13
   1400183a8:	jae    0x1400183ed
   1400183aa:	mov    edx,DWORD PTR [rsp+0x88]
   1400183b1:	mov    r11,QWORD PTR [rsp+0x10]
   1400183b6:	jmp    0x1400180a9
   1400183bb:	test   dl,0x20
   1400183be:	je     0x1400183c9
   1400183c0:	mov    DWORD PTR [rbp+0x8],0x3f3f
   1400183c7:	jmp    0x1400183ed
   1400183c9:	lea    rax,[rip+0x4c068]        # 0x140064438
   1400183d0:	jmp    0x1400183e2
   1400183d2:	lea    rax,[rip+0x4c07f]        # 0x140064458
   1400183d9:	jmp    0x1400183e2
   1400183db:	lea    rax,[rip+0x4c08e]        # 0x140064470
   1400183e2:	mov    QWORD PTR [r14+0x20],rax
   1400183e6:	mov    DWORD PTR [rbp+0x8],0x3f51
   1400183ed:	mov    ecx,r10d
   1400183f0:	mov    QWORD PTR [r14+0x10],r9
   1400183f4:	shr    ecx,0x3
   1400183f7:	sub    r13d,r9d
   1400183fa:	mov    eax,ecx
   1400183fc:	add    r13d,0x101
   140018403:	sub    rbx,rax
   140018406:	mov    DWORD PTR [r14+0x18],r13d
   14001840a:	mov    eax,ecx
   14001840c:	mov    QWORD PTR [r14],rbx
   14001840f:	shl    eax,0x3
   140018412:	sub    r12d,ebx
   140018415:	sub    r10d,eax
   140018418:	add    r12d,0x5
   14001841c:	mov    DWORD PTR [r14+0x8],r12d
   140018420:	mov    ecx,r10d
   140018423:	mov    eax,0x1
   140018428:	mov    DWORD PTR [rbp+0x4c],r10d
   14001842c:	shl    eax,cl
   14001842e:	dec    eax
   140018430:	and    eax,edi
   140018432:	mov    DWORD PTR [rbp+0x48],eax
   140018435:	add    rsp,0x28
   140018439:	pop    r15
   14001843b:	pop    r14
   14001843d:	pop    r13
   14001843f:	pop    r12
   140018441:	pop    rdi
   140018442:	pop    rsi
   140018443:	pop    rbp
   140018444:	pop    rbx
   140018445:	ret    
   140018446:	int3   
   140018447:	int3   
   140018448:	mov    rax,rsp
   14001844b:	mov    QWORD PTR [rax+0x8],rbx
   14001844f:	mov    QWORD PTR [rax+0x10],rbp
   140018453:	mov    QWORD PTR [rax+0x18],rsi
   140018457:	mov    QWORD PTR [rax+0x20],rdi
   14001845b:	push   r14
   14001845d:	sub    rsp,0x20
   140018461:	xor    esi,esi
   140018463:	mov    rbp,rdx
   140018466:	sub    rbp,rcx
   140018469:	mov    r14,r9
   14001846c:	inc    rbp
   14001846f:	mov    rbx,r8
   140018472:	shr    rbp,1
   140018475:	mov    rdi,rcx
   140018478:	cmp    rcx,rdx
   14001847b:	cmova  rbp,rsi
   14001847f:	test   rbp,rbp
   140018482:	je     0x14001849d
   140018484:	sub    rdi,rbx
   140018487:	movzx  ecx,WORD PTR [rdi+rbx*1]
   14001848b:	call   QWORD PTR [r14]
   14001848e:	mov    WORD PTR [rbx],ax
   140018491:	inc    rsi
   140018494:	add    rbx,0x2
   140018498:	cmp    rsi,rbp
   14001849b:	jne    0x140018487
   14001849d:	mov    rbp,QWORD PTR [rsp+0x38]
   1400184a2:	mov    rax,rbx
   1400184a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400184aa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400184af:	mov    rdi,QWORD PTR [rsp+0x48]
   1400184b4:	add    rsp,0x20
   1400184b8:	pop    r14
   1400184ba:	ret    
   1400184bb:	int3   
   1400184bc:	rex push rbx
   1400184be:	push   rbp
   1400184bf:	push   rsi
   1400184c0:	push   rdi
   1400184c1:	push   r12
   1400184c3:	push   r14
   1400184c5:	push   r15
   1400184c7:	sub    rsp,0x60
   1400184cb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400184d4:	mov    rax,QWORD PTR [rip+0x58b75]        # 0x140071050
   1400184db:	xor    rax,rsp
   1400184de:	mov    QWORD PTR [rsp+0x50],rax
   1400184e3:	mov    r12b,r9b
   1400184e6:	mov    rsi,r8
   1400184e9:	mov    rbx,rdx
   1400184ec:	mov    r15,rcx
   1400184ef:	mov    QWORD PTR [rsp+0x28],rdx
   1400184f4:	mov    rbp,QWORD PTR [r8+0x8]
   1400184f8:	mov    rdi,QWORD PTR [r8]
   1400184fb:	jmp    0x14001850e
   1400184fd:	xor    r8d,r8d
   140018500:	mov    dl,0x1
   140018502:	mov    rcx,rdi
   140018505:	call   0x14000b6b0
   14001850a:	add    rdi,0x20
   14001850e:	cmp    rdi,rbp
   140018511:	jne    0x1400184fd
   140018513:	mov    rax,QWORD PTR [rsi]
   140018516:	mov    QWORD PTR [rsi+0x8],rax
   14001851a:	xor    edi,edi
   14001851c:	mov    rbp,QWORD PTR [rsp+0xc0]
   140018524:	cmp    QWORD PTR [rbx+0x18],0x8
   140018529:	jb     0x140018530
   14001852b:	mov    rdx,QWORD PTR [rbx]
   14001852e:	jmp    0x140018533
   140018530:	mov    rdx,rbx
   140018533:	mov    r9,QWORD PTR [rbx+0x10]
   140018537:	mov    r8,rdi
   14001853a:	mov    rcx,r15
   14001853d:	call   0x140018f1c
   140018542:	mov    r14,rax
   140018545:	cmp    rax,0xffffffffffffffff
   140018549:	je     0x14001858d
   14001854b:	cmp    rdi,rax
   14001854e:	jne    0x140018555
   140018550:	test   r12b,r12b
   140018553:	je     0x140018587
   140018555:	mov    r9,r14
   140018558:	sub    r9,rdi
   14001855b:	mov    r8,rdi
   14001855e:	lea    rdx,[rsp+0x30]
   140018563:	mov    rcx,r15
   140018566:	call   0x140019244
   14001856b:	nop
   14001856c:	mov    rdx,rax
   14001856f:	mov    rcx,rsi
   140018572:	call   0x1400126a8
   140018577:	nop
   140018578:	xor    r8d,r8d
   14001857b:	mov    dl,0x1
   14001857d:	lea    rcx,[rsp+0x30]
   140018582:	call   0x14000b6b0
   140018587:	lea    rdi,[r14+rbp*1]
   14001858b:	jmp    0x140018524
   14001858d:	cmp    rdi,QWORD PTR [r15+0x10]
   140018591:	jne    0x140018598
   140018593:	test   r12b,r12b
   140018596:	je     0x1400185c9
   140018598:	or     r9,0xffffffffffffffff
   14001859c:	mov    r8,rdi
   14001859f:	lea    rdx,[rsp+0x30]
   1400185a4:	mov    rcx,r15
   1400185a7:	call   0x140019244
   1400185ac:	nop
   1400185ad:	mov    rdx,rax
   1400185b0:	mov    rcx,rsi
   1400185b3:	call   0x1400126a8
   1400185b8:	nop
   1400185b9:	xor    r8d,r8d
   1400185bc:	mov    dl,0x1
   1400185be:	lea    rcx,[rsp+0x30]
   1400185c3:	call   0x14000b6b0
   1400185c8:	nop
   1400185c9:	xor    r8d,r8d
   1400185cc:	mov    dl,0x1
   1400185ce:	mov    rcx,rbx
   1400185d1:	call   0x14000b6b0
   1400185d6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400185db:	xor    rcx,rsp
   1400185de:	call   0x140025df0
   1400185e3:	add    rsp,0x60
   1400185e7:	pop    r15
   1400185e9:	pop    r14
   1400185eb:	pop    r12
   1400185ed:	pop    rdi
   1400185ee:	pop    rsi
   1400185ef:	pop    rbp
   1400185f0:	pop    rbx
   1400185f1:	ret    
   1400185f2:	int3   
   1400185f3:	int3   
   1400185f4:	mov    rax,rsp
   1400185f7:	push   rbp
   1400185f8:	push   rsi
   1400185f9:	push   rdi
   1400185fa:	push   r14
   1400185fc:	push   r15
   1400185fe:	sub    rsp,0x60
   140018602:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   14001860a:	mov    QWORD PTR [rax+0x20],rbx
   14001860e:	mov    rax,QWORD PTR [rip+0x58a3b]        # 0x140071050
   140018615:	xor    rax,rsp
   140018618:	mov    QWORD PTR [rsp+0x50],rax
   14001861d:	mov    r15b,r9b
   140018620:	mov    r14,r8
   140018623:	movzx  ebp,dx
   140018626:	mov    rsi,rcx
   140018629:	mov    rdi,QWORD PTR [r8+0x8]
   14001862d:	mov    rbx,QWORD PTR [r8]
   140018630:	jmp    0x140018640
   140018632:	mov    dl,0x1
   140018634:	mov    rcx,rbx
   140018637:	call   0x14000b6b0
   14001863c:	add    rbx,0x20
   140018640:	xor    r8d,r8d
   140018643:	cmp    rbx,rdi
   140018646:	jne    0x140018632
   140018648:	mov    rax,QWORD PTR [r14]
   14001864b:	mov    QWORD PTR [r14+0x8],rax
   14001864f:	xor    ebx,ebx
   140018651:	mov    WORD PTR [rsp+0x20],bp
   140018656:	lea    r9d,[r8+0x1]
   14001865a:	lea    rdx,[rsp+0x20]
   14001865f:	mov    rcx,rsi
   140018662:	call   0x140018f1c
   140018667:	mov    rdi,rax
   14001866a:	cmp    rax,0xffffffffffffffff
   14001866e:	je     0x1400186dc
   140018670:	mov    WORD PTR [rsp+0x20],bp
   140018675:	mov    rbp,QWORD PTR [rsp+0xb0]
   14001867d:	cmp    rbx,rdi
   140018680:	jne    0x140018687
   140018682:	test   r15b,r15b
   140018685:	je     0x1400186b9
   140018687:	mov    r9,rdi
   14001868a:	sub    r9,rbx
   14001868d:	mov    r8,rbx
   140018690:	lea    rdx,[rsp+0x30]
   140018695:	mov    rcx,rsi
   140018698:	call   0x140019244
   14001869d:	nop
   14001869e:	mov    rdx,rax
   1400186a1:	mov    rcx,r14
   1400186a4:	call   0x1400126a8
   1400186a9:	nop
   1400186aa:	xor    r8d,r8d
   1400186ad:	mov    dl,0x1
   1400186af:	lea    rcx,[rsp+0x30]
   1400186b4:	call   0x14000b6b0
   1400186b9:	lea    rbx,[rdi+rbp*1]
   1400186bd:	mov    r9d,0x1
   1400186c3:	mov    r8,rbx
   1400186c6:	lea    rdx,[rsp+0x20]
   1400186cb:	mov    rcx,rsi
   1400186ce:	call   0x140018f1c
   1400186d3:	mov    rdi,rax
   1400186d6:	cmp    rax,0xffffffffffffffff
   1400186da:	jne    0x14001867d
   1400186dc:	cmp    rbx,QWORD PTR [rsi+0x10]
   1400186e0:	jne    0x1400186e7
   1400186e2:	test   r15b,r15b
   1400186e5:	je     0x140018717
   1400186e7:	or     r9,0xffffffffffffffff
   1400186eb:	mov    r8,rbx
   1400186ee:	lea    rdx,[rsp+0x30]
   1400186f3:	mov    rcx,rsi
   1400186f6:	call   0x140019244
   1400186fb:	nop
   1400186fc:	mov    rdx,rax
   1400186ff:	mov    rcx,r14
   140018702:	call   0x1400126a8
   140018707:	nop
   140018708:	xor    r8d,r8d
   14001870b:	mov    dl,0x1
   14001870d:	lea    rcx,[rsp+0x30]
   140018712:	call   0x14000b6b0
   140018717:	mov    rcx,QWORD PTR [rsp+0x50]
   14001871c:	xor    rcx,rsp
   14001871f:	call   0x140025df0
   140018724:	mov    rbx,QWORD PTR [rsp+0xa8]
   14001872c:	add    rsp,0x60
   140018730:	pop    r15
   140018732:	pop    r14
   140018734:	pop    rdi
   140018735:	pop    rsi
   140018736:	pop    rbp
   140018737:	ret    
   140018738:	mov    QWORD PTR [rsp+0x8],rbx
   14001873d:	mov    QWORD PTR [rsp+0x18],rbp
   140018742:	mov    QWORD PTR [rsp+0x20],rsi
   140018747:	push   rdi
   140018748:	sub    rsp,0x50
   14001874c:	mov    rbp,rcx
   14001874f:	mov    sil,r9b
   140018752:	xor    ecx,ecx
   140018754:	mov    rbx,r8
   140018757:	mov    rdi,rdx
   14001875a:	cmp    QWORD PTR [rdx+0x10],rcx
   14001875e:	jne    0x140018793
   140018760:	mov    rsi,QWORD PTR [r8+0x8]
   140018764:	mov    rdi,QWORD PTR [r8]
   140018767:	jmp    0x14001877a
   140018769:	xor    r8d,r8d
   14001876c:	mov    dl,0x1
   14001876e:	mov    rcx,rdi
   140018771:	call   0x14000b6b0
   140018776:	add    rdi,0x20
   14001877a:	cmp    rdi,rsi
   14001877d:	jne    0x140018769
   14001877f:	mov    rax,QWORD PTR [rbx]
   140018782:	mov    rdx,rbp
   140018785:	mov    rcx,rbx
   140018788:	mov    QWORD PTR [rbx+0x8],rax
   14001878c:	call   0x140019138
   140018791:	jmp    0x1400187d3
   140018793:	mov    QWORD PTR [rsp+0x40],rcx
   140018798:	or     r9,0xffffffffffffffff
   14001879c:	mov    WORD PTR [rsp+0x30],cx
   1400187a1:	xor    r8d,r8d
   1400187a4:	lea    rcx,[rsp+0x30]
   1400187a9:	mov    QWORD PTR [rsp+0x48],0x7
   1400187b2:	call   0x14000b850
   1400187b7:	mov    rax,QWORD PTR [rdi+0x10]
   1400187bb:	lea    rdx,[rsp+0x30]
   1400187c0:	mov    r9b,sil
   1400187c3:	mov    QWORD PTR [rsp+0x20],rax
   1400187c8:	mov    r8,rbx
   1400187cb:	mov    rcx,rbp
   1400187ce:	call   0x1400184bc
   1400187d3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400187d8:	mov    rbp,QWORD PTR [rsp+0x70]
   1400187dd:	mov    rsi,QWORD PTR [rsp+0x78]
   1400187e2:	add    rsp,0x50
   1400187e6:	pop    rdi
   1400187e7:	ret    
   1400187e8:	mov    QWORD PTR [rsp+0x8],rcx
   1400187ed:	push   rdi
   1400187ee:	sub    rsp,0x30
   1400187f2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400187fb:	mov    QWORD PTR [rsp+0x48],rbx
   140018800:	mov    rdi,rdx
   140018803:	mov    rbx,rcx
   140018806:	xor    eax,eax
   140018808:	mov    QWORD PTR [rcx],rax
   14001880b:	mov    QWORD PTR [rcx+0x8],rax
   14001880f:	mov    QWORD PTR [rcx+0x10],rax
   140018813:	test   rdx,rdx
   140018816:	je     0x140018849
   140018818:	mov    r8b,0x1
   14001881b:	lea    edx,[rax+0x1]
   14001881e:	mov    rcx,rdi
   140018821:	call   0x140004798
   140018826:	mov    QWORD PTR [rbx],rax
   140018829:	mov    QWORD PTR [rbx+0x8],rax
   14001882d:	mov    rax,QWORD PTR [rbx]
   140018830:	lea    rcx,[rdi+rax*1]
   140018834:	mov    QWORD PTR [rbx+0x10],rcx
   140018838:	mov    r8,rdi
   14001883b:	xor    edx,edx
   14001883d:	mov    rcx,rax
   140018840:	call   0x14002a910
   140018845:	add    QWORD PTR [rbx+0x8],rdi
   140018849:	mov    rax,rbx
   14001884c:	mov    rbx,QWORD PTR [rsp+0x48]
   140018851:	add    rsp,0x30
   140018855:	pop    rdi
   140018856:	ret    
   140018857:	int3   
   140018858:	mov    QWORD PTR [rsp+0x8],rcx
   14001885d:	push   rdi
   14001885e:	sub    rsp,0x30
   140018862:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001886b:	mov    QWORD PTR [rsp+0x48],rbx
   140018870:	mov    rbx,rdx
   140018873:	mov    rdi,rcx
   140018876:	and    QWORD PTR [rcx],0x0
   14001887a:	and    QWORD PTR [rcx+0x8],0x0
   14001887f:	and    QWORD PTR [rcx+0x10],0x0
   140018884:	call   0x14000c054
   140018889:	test   al,al
   14001888b:	je     0x1400188a1
   14001888d:	add    rbx,rbx
   140018890:	mov    r8,rbx
   140018893:	xor    edx,edx
   140018895:	mov    rcx,QWORD PTR [rdi]
   140018898:	call   0x14002a910
   14001889d:	add    QWORD PTR [rdi+0x8],rbx
   1400188a1:	mov    rax,rdi
   1400188a4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400188a9:	add    rsp,0x30
   1400188ad:	pop    rdi
   1400188ae:	ret    
   1400188af:	int3   
   1400188b0:	rex push rbx
   1400188b2:	sub    rsp,0x20
   1400188b6:	mov    rbx,rcx
   1400188b9:	mov    rax,rdx
   1400188bc:	lea    rcx,[rip+0x32e85]        # 0x14004b748
   1400188c3:	mov    QWORD PTR [rbx],rcx
   1400188c6:	lea    rdx,[rbx+0x8]
   1400188ca:	xor    ecx,ecx
   1400188cc:	mov    QWORD PTR [rdx],rcx
   1400188cf:	mov    QWORD PTR [rdx+0x8],rcx
   1400188d3:	lea    rcx,[rax+0x8]
   1400188d7:	call   0x140028f04
   1400188dc:	lea    rax,[rip+0x32ead]        # 0x14004b790
   1400188e3:	mov    QWORD PTR [rbx],rax
   1400188e6:	mov    rax,rbx
   1400188e9:	add    rsp,0x20
   1400188ed:	pop    rbx
   1400188ee:	ret    
   1400188ef:	int3   
   1400188f0:	rex push rbx
   1400188f2:	sub    rsp,0x20
   1400188f6:	mov    rbx,rcx
   1400188f9:	mov    rax,rdx
   1400188fc:	lea    rcx,[rip+0x32e45]        # 0x14004b748
   140018903:	mov    QWORD PTR [rbx],rcx
   140018906:	lea    rdx,[rbx+0x8]
   14001890a:	xor    ecx,ecx
   14001890c:	mov    QWORD PTR [rdx],rcx
   14001890f:	mov    QWORD PTR [rdx+0x8],rcx
   140018913:	lea    rcx,[rax+0x8]
   140018917:	call   0x140028f04
   14001891c:	lea    rax,[rip+0x32e55]        # 0x14004b778
   140018923:	mov    QWORD PTR [rbx],rax
   140018926:	mov    rax,rbx
   140018929:	add    rsp,0x20
   14001892d:	pop    rbx
   14001892e:	ret    
   14001892f:	int3   
   140018930:	rex push rbx
   140018932:	sub    rsp,0x30
   140018936:	and    DWORD PTR [rsp+0x20],0x0
   14001893b:	mov    rbx,rcx
   14001893e:	cmp    QWORD PTR [rdx+0x18],0x10
   140018943:	mov    r8,QWORD PTR [rdx+0x10]
   140018947:	jb     0x14001894c
   140018949:	mov    rdx,QWORD PTR [rdx]
   14001894c:	call   0x140018998
   140018951:	mov    rax,rbx
   140018954:	add    rsp,0x30
   140018958:	pop    rbx
   140018959:	ret    
   14001895a:	int3   
   14001895b:	int3   
   14001895c:	mov    QWORD PTR [rsp+0x8],rbx
   140018961:	push   rdi
   140018962:	sub    rsp,0x30
   140018966:	and    DWORD PTR [rsp+0x20],0x0
   14001896b:	mov    rdi,rcx
   14001896e:	mov    rcx,rdx
   140018971:	mov    rbx,rdx
   140018974:	call   0x140031140
   140018979:	mov    r8,rax
   14001897c:	mov    rdx,rbx
   14001897f:	mov    rcx,rdi
   140018982:	call   0x140018998
   140018987:	mov    rbx,QWORD PTR [rsp+0x40]
   14001898c:	mov    rax,rdi
   14001898f:	add    rsp,0x30
   140018993:	pop    rdi
   140018994:	ret    
   140018995:	int3   
   140018996:	int3   
   140018997:	int3   
   140018998:	mov    rax,rsp
   14001899b:	push   rbp
   14001899c:	push   r14
   14001899e:	push   r15
   1400189a0:	mov    rbp,rsp
   1400189a3:	sub    rsp,0x80
   1400189aa:	mov    QWORD PTR [rbp-0x48],0xfffffffffffffffe
   1400189b2:	mov    QWORD PTR [rax+0x8],rbx
   1400189b6:	mov    QWORD PTR [rax+0x18],rsi
   1400189ba:	mov    QWORD PTR [rax+0x20],rdi
   1400189be:	mov    r14,r8
   1400189c1:	mov    r15,rdx
   1400189c4:	mov    rbx,rcx
   1400189c7:	xor    edi,edi
   1400189c9:	mov    DWORD PTR [rbp-0x50],edi
   1400189cc:	test   rdx,rdx
   1400189cf:	jne    0x140018a1e
   1400189d1:	lea    rax,[rip+0x32d70]        # 0x14004b748
   1400189d8:	mov    QWORD PTR [rbp-0x30],rax
   1400189dc:	xor    eax,eax
   1400189de:	mov    QWORD PTR [rbp-0x28],rax
   1400189e2:	mov    QWORD PTR [rbp-0x20],rax
   1400189e6:	lea    rax,[rip+0x32fa3]        # 0x14004b990
   1400189ed:	mov    QWORD PTR [rbp-0x40],rax
   1400189f1:	mov    BYTE PTR [rbp-0x38],0x1
   1400189f5:	lea    rdx,[rbp-0x28]
   1400189f9:	lea    rcx,[rbp-0x40]
   1400189fd:	call   0x140028f04
   140018a02:	lea    rax,[rip+0x32d87]        # 0x14004b790
   140018a09:	mov    QWORD PTR [rbp-0x30],rax
   140018a0d:	lea    rdx,[rip+0x5700c]        # 0x14006fa20
   140018a14:	lea    rcx,[rbp-0x30]
   140018a18:	call   0x14002ab88
   140018a1d:	int3   
   140018a1e:	test   r14,r14
   140018a21:	jne    0x140018a46
   140018a23:	mov    QWORD PTR [rcx+0x18],0x7
   140018a2b:	mov    QWORD PTR [rcx+0x10],rdi
   140018a2f:	mov    WORD PTR [rcx],di
   140018a32:	lea    rdx,[rip+0x4545f]        # 0x14005de98
   140018a39:	xor    r8d,r8d
   140018a3c:	call   0x14000b730
   140018a41:	jmp    0x140018bbf
   140018a46:	mov    DWORD PTR [rsp+0x28],edi
   140018a4a:	mov    QWORD PTR [rsp+0x20],rdi
   140018a4f:	mov    r9d,r14d
   140018a52:	mov    r8,r15
   140018a55:	xor    edx,edx
   140018a57:	mov    ecx,0xfde9
   140018a5c:	call   QWORD PTR [rip+0x326c6]        # 0x14004b128
   140018a62:	mov    esi,eax
   140018a64:	test   eax,eax
   140018a66:	jne    0x140018ad6
   140018a68:	call   QWORD PTR [rip+0x32672]        # 0x14004b0e0
   140018a6e:	test   eax,eax
   140018a70:	je     0x140018abf
   140018a72:	lea    rax,[rip+0x32ccf]        # 0x14004b748
   140018a79:	mov    QWORD PTR [rbp-0x30],rax
   140018a7d:	xor    eax,eax
   140018a7f:	mov    QWORD PTR [rbp-0x28],rax
   140018a83:	mov    QWORD PTR [rbp-0x20],rax
   140018a87:	lea    rax,[rip+0x32ea2]        # 0x14004b930
   140018a8e:	mov    QWORD PTR [rbp-0x40],rax
   140018a92:	mov    BYTE PTR [rbp-0x38],0x1
   140018a96:	lea    rdx,[rbp-0x28]
   140018a9a:	lea    rcx,[rbp-0x40]
   140018a9e:	call   0x140028f04
   140018aa3:	lea    rax,[rip+0x32cfe]        # 0x14004b7a8
   140018aaa:	mov    QWORD PTR [rbp-0x30],rax
   140018aae:	lea    rdx,[rip+0x5739b]        # 0x14006fe50
   140018ab5:	lea    rcx,[rbp-0x30]
   140018ab9:	call   0x14002ab88
   140018abe:	int3   
   140018abf:	mov    QWORD PTR [rbx+0x18],0x7
   140018ac7:	mov    QWORD PTR [rbx+0x10],rdi
   140018acb:	mov    WORD PTR [rbx],di
   140018ace:	mov    rcx,rbx
   140018ad1:	jmp    0x140018a32
   140018ad6:	mov    WORD PTR [rbp+0x28],di
   140018ada:	xorps  xmm0,xmm0
   140018add:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140018ae2:	mov    QWORD PTR [rbp-0x8],rdi
   140018ae6:	inc    eax
   140018ae8:	movsxd rdx,eax
   140018aeb:	lea    r8,[rbp+0x28]
   140018aef:	lea    rcx,[rbp-0x18]
   140018af3:	call   0x14000b60c
   140018af8:	nop
   140018af9:	mov    DWORD PTR [rsp+0x28],esi
   140018afd:	mov    rsi,QWORD PTR [rbp-0x18]
   140018b01:	mov    QWORD PTR [rsp+0x20],rsi
   140018b06:	mov    r9d,r14d
   140018b09:	mov    r8,r15
   140018b0c:	xor    edx,edx
   140018b0e:	mov    ecx,0xfde9
   140018b13:	call   QWORD PTR [rip+0x3260f]        # 0x14004b128
   140018b19:	test   eax,eax
   140018b1b:	jne    0x140018b6a
   140018b1d:	lea    rax,[rip+0x32c24]        # 0x14004b748
   140018b24:	mov    QWORD PTR [rbp-0x30],rax
   140018b28:	xor    eax,eax
   140018b2a:	mov    QWORD PTR [rbp-0x28],rax
   140018b2e:	mov    QWORD PTR [rbp-0x20],rax
   140018b32:	lea    rax,[rip+0x32df7]        # 0x14004b930
   140018b39:	mov    QWORD PTR [rbp-0x40],rax
   140018b3d:	mov    BYTE PTR [rbp-0x38],0x1
   140018b41:	lea    rdx,[rbp-0x28]
   140018b45:	lea    rcx,[rbp-0x40]
   140018b49:	call   0x140028f04
   140018b4e:	lea    rax,[rip+0x32c53]        # 0x14004b7a8
   140018b55:	mov    QWORD PTR [rbp-0x30],rax
   140018b59:	lea    rdx,[rip+0x572f0]        # 0x14006fe50
   140018b60:	lea    rcx,[rbp-0x30]
   140018b64:	call   0x14002ab88
   140018b69:	int3   
   140018b6a:	mov    QWORD PTR [rbx+0x18],0x7
   140018b72:	mov    QWORD PTR [rbx+0x10],rdi
   140018b76:	cmp    QWORD PTR [rbx+0x18],0x8
   140018b7b:	jb     0x140018b82
   140018b7d:	mov    rax,QWORD PTR [rbx]
   140018b80:	jmp    0x140018b85
   140018b82:	mov    rax,rbx
   140018b85:	mov    WORD PTR [rax],di
   140018b88:	cmp    WORD PTR [rsi],di
   140018b8b:	je     0x140018b98
   140018b8d:	mov    rcx,rsi
   140018b90:	call   0x140031108
   140018b95:	mov    rdi,rax
   140018b98:	mov    r8,rdi
   140018b9b:	mov    rdx,rsi
   140018b9e:	mov    rcx,rbx
   140018ba1:	call   0x14000b730
   140018ba6:	nop
   140018ba7:	mov    rdx,QWORD PTR [rbp-0x8]
   140018bab:	sub    rdx,rsi
   140018bae:	sar    rdx,1
   140018bb1:	mov    r8d,0x2
   140018bb7:	mov    rcx,rsi
   140018bba:	call   0x140004804
   140018bbf:	mov    rax,rbx
   140018bc2:	lea    r11,[rsp+0x80]
   140018bca:	mov    rbx,QWORD PTR [r11+0x20]
   140018bce:	mov    rsi,QWORD PTR [r11+0x30]
   140018bd2:	mov    rdi,QWORD PTR [r11+0x38]
   140018bd6:	mov    rsp,r11
   140018bd9:	pop    r15
   140018bdb:	pop    r14
   140018bdd:	pop    rbp
   140018bde:	ret    
   140018bdf:	int3   
   140018be0:	mov    rax,rsp
   140018be3:	push   rbp
   140018be4:	lea    rbp,[rax-0x5f]
   140018be8:	sub    rsp,0x90
   140018bef:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   140018bf7:	mov    QWORD PTR [rax+0x8],rbx
   140018bfb:	mov    QWORD PTR [rax+0x10],rsi
   140018bff:	mov    QWORD PTR [rax+0x18],rdi
   140018c03:	mov    QWORD PTR [rax+0x20],r14
   140018c07:	mov    r14,rdx
   140018c0a:	mov    rdi,rcx
   140018c0d:	xor    ebx,ebx
   140018c0f:	mov    DWORD PTR [rbp+0x7],ebx
   140018c12:	test   rdx,rdx
   140018c15:	jne    0x140018c64
   140018c17:	lea    rax,[rip+0x32b2a]        # 0x14004b748
   140018c1e:	mov    QWORD PTR [rbp+0x27],rax
   140018c22:	xor    eax,eax
   140018c24:	mov    QWORD PTR [rbp+0x2f],rax
   140018c28:	mov    QWORD PTR [rbp+0x37],rax
   140018c2c:	lea    rax,[rip+0x32d1d]        # 0x14004b950
   140018c33:	mov    QWORD PTR [rbp+0x17],rax
   140018c37:	mov    BYTE PTR [rbp+0x1f],0x1
   140018c3b:	lea    rdx,[rbp+0x2f]
   140018c3f:	lea    rcx,[rbp+0x17]
   140018c43:	call   0x140028f04
   140018c48:	lea    rax,[rip+0x32b41]        # 0x14004b790
   140018c4f:	mov    QWORD PTR [rbp+0x27],rax
   140018c53:	lea    rdx,[rip+0x56dc6]        # 0x14006fa20
   140018c5a:	lea    rcx,[rbp+0x27]
   140018c5e:	call   0x14002ab88
   140018c63:	int3   
   140018c64:	mov    rcx,r14
   140018c67:	call   0x140031108
   140018c6c:	test   rax,rax
   140018c6f:	jne    0x140018c96
   140018c71:	mov    QWORD PTR [rdi+0x18],0xf
   140018c79:	mov    QWORD PTR [rdi+0x10],rbx
   140018c7d:	mov    BYTE PTR [rdi],bl
   140018c7f:	xor    r8d,r8d
   140018c82:	lea    rdx,[rip+0x4902c]        # 0x140061cb5
   140018c89:	mov    rcx,rdi
   140018c8c:	call   0x14000b994
   140018c91:	jmp    0x140018de5
   140018c96:	mov    QWORD PTR [rsp+0x38],rbx
   140018c9b:	mov    QWORD PTR [rsp+0x30],rbx
   140018ca0:	mov    DWORD PTR [rsp+0x28],ebx
   140018ca4:	mov    QWORD PTR [rsp+0x20],rbx
   140018ca9:	or     r9d,0xffffffff
   140018cad:	mov    r8,r14
   140018cb0:	xor    edx,edx
   140018cb2:	xor    ecx,ecx
   140018cb4:	call   QWORD PTR [rip+0x32476]        # 0x14004b130
   140018cba:	mov    esi,eax
   140018cbc:	test   eax,eax
   140018cbe:	jne    0x140018d0d
   140018cc0:	lea    rax,[rip+0x32a81]        # 0x14004b748
   140018cc7:	mov    QWORD PTR [rbp+0x27],rax
   140018ccb:	xor    eax,eax
   140018ccd:	mov    QWORD PTR [rbp+0x2f],rax
   140018cd1:	mov    QWORD PTR [rbp+0x37],rax
   140018cd5:	lea    rax,[rip+0x32c94]        # 0x14004b970
   140018cdc:	mov    QWORD PTR [rbp+0x17],rax
   140018ce0:	mov    BYTE PTR [rbp+0x1f],0x1
   140018ce4:	lea    rdx,[rbp+0x2f]
   140018ce8:	lea    rcx,[rbp+0x17]
   140018cec:	call   0x140028f04
   140018cf1:	lea    rax,[rip+0x32ab0]        # 0x14004b7a8
   140018cf8:	mov    QWORD PTR [rbp+0x27],rax
   140018cfc:	lea    rdx,[rip+0x5714d]        # 0x14006fe50
   140018d03:	lea    rcx,[rbp+0x27]
   140018d07:	call   0x14002ab88
   140018d0c:	int3   
   140018d0d:	inc    esi
   140018d0f:	movsxd rdx,esi
   140018d12:	lea    rcx,[rbp+0x3f]
   140018d16:	call   0x1400187e8
   140018d1b:	nop
   140018d1c:	mov    QWORD PTR [rsp+0x38],rbx
   140018d21:	mov    QWORD PTR [rsp+0x30],rbx
   140018d26:	mov    DWORD PTR [rsp+0x28],esi
   140018d2a:	mov    rsi,QWORD PTR [rbp+0x3f]
   140018d2e:	mov    QWORD PTR [rsp+0x20],rsi
   140018d33:	or     r9d,0xffffffff
   140018d37:	mov    r8,r14
   140018d3a:	xor    edx,edx
   140018d3c:	xor    ecx,ecx
   140018d3e:	call   QWORD PTR [rip+0x323ec]        # 0x14004b130
   140018d44:	test   eax,eax
   140018d46:	jne    0x140018d95
   140018d48:	lea    rax,[rip+0x329f9]        # 0x14004b748
   140018d4f:	mov    QWORD PTR [rbp+0x27],rax
   140018d53:	xor    eax,eax
   140018d55:	mov    QWORD PTR [rbp+0x2f],rax
   140018d59:	mov    QWORD PTR [rbp+0x37],rax
   140018d5d:	lea    rax,[rip+0x32c0c]        # 0x14004b970
   140018d64:	mov    QWORD PTR [rbp+0x17],rax
   140018d68:	mov    BYTE PTR [rbp+0x1f],0x1
   140018d6c:	lea    rdx,[rbp+0x2f]
   140018d70:	lea    rcx,[rbp+0x17]
   140018d74:	call   0x140028f04
   140018d79:	lea    rax,[rip+0x32a28]        # 0x14004b7a8
   140018d80:	mov    QWORD PTR [rbp+0x27],rax
   140018d84:	lea    rdx,[rip+0x570c5]        # 0x14006fe50
   140018d8b:	lea    rcx,[rbp+0x27]
   140018d8f:	call   0x14002ab88
   140018d94:	int3   
   140018d95:	mov    QWORD PTR [rdi+0x18],0xf
   140018d9d:	mov    QWORD PTR [rdi+0x10],rbx
   140018da1:	cmp    QWORD PTR [rdi+0x18],0x10
   140018da6:	jb     0x140018dad
   140018da8:	mov    rax,QWORD PTR [rdi]
   140018dab:	jmp    0x140018db0
   140018dad:	mov    rax,rdi
   140018db0:	mov    BYTE PTR [rax],bl
   140018db2:	cmp    BYTE PTR [rsi],bl
   140018db4:	je     0x140018dc1
   140018db6:	mov    rcx,rsi
   140018db9:	call   0x140031140
   140018dbe:	mov    rbx,rax
   140018dc1:	mov    r8,rbx
   140018dc4:	mov    rdx,rsi
   140018dc7:	mov    rcx,rdi
   140018dca:	call   0x14000b994
   140018dcf:	nop
   140018dd0:	mov    rdx,QWORD PTR [rbp+0x4f]
   140018dd4:	sub    rdx,rsi
   140018dd7:	mov    r8d,0x1
   140018ddd:	mov    rcx,rsi
   140018de0:	call   0x140004804
   140018de5:	mov    rax,rdi
   140018de8:	lea    r11,[rsp+0x90]
   140018df0:	mov    rbx,QWORD PTR [r11+0x10]
   140018df4:	mov    rsi,QWORD PTR [r11+0x18]
   140018df8:	mov    rdi,QWORD PTR [r11+0x20]
   140018dfc:	mov    r14,QWORD PTR [r11+0x28]
   140018e00:	mov    rsp,r11
   140018e03:	pop    rbp
   140018e04:	ret    
   140018e05:	int3   
   140018e06:	int3   
   140018e07:	int3   
   140018e08:	mov    QWORD PTR [rsp+0x8],rbx
   140018e0d:	mov    QWORD PTR [rsp+0x10],rbp
   140018e12:	mov    QWORD PTR [rsp+0x18],rsi
   140018e17:	push   rdi
   140018e18:	push   r14
   140018e1a:	push   r15
   140018e1c:	sub    rsp,0x20
   140018e20:	movzx  r14d,r8w
   140018e24:	mov    rbp,rdx
   140018e27:	mov    r8,QWORD PTR [rcx+0x10]
   140018e2b:	mov    rbx,rcx
   140018e2e:	mov    rax,r8
   140018e31:	not    rax
   140018e34:	cmp    rax,rdx
   140018e37:	jbe    0x140018f02
   140018e3d:	xor    r15d,r15d
   140018e40:	lea    rsi,[r8+rdx*1]
   140018e44:	test   rdx,rdx
   140018e47:	je     0x140018ee6
   140018e4d:	movabs rax,0x7ffffffffffffffe
   140018e57:	cmp    rsi,rax
   140018e5a:	ja     0x140018f0f
   140018e60:	cmp    QWORD PTR [rcx+0x18],rsi
   140018e64:	jae    0x140018e70
   140018e66:	mov    rdx,rsi
   140018e69:	call   0x14000cb48
   140018e6e:	jmp    0x140018e8c
   140018e70:	test   rsi,rsi
   140018e73:	jne    0x140018e91
   140018e75:	mov    QWORD PTR [rcx+0x10],r15
   140018e79:	cmp    QWORD PTR [rcx+0x18],0x8
   140018e7e:	jb     0x140018e85
   140018e80:	mov    rax,QWORD PTR [rcx]
   140018e83:	jmp    0x140018e88
   140018e85:	mov    rax,rbx
   140018e88:	mov    WORD PTR [rax],r15w
   140018e8c:	test   rsi,rsi
   140018e8f:	je     0x140018ee6
   140018e91:	mov    rcx,QWORD PTR [rbx+0x10]
   140018e95:	cmp    rbp,0x1
   140018e99:	jne    0x140018eb1
   140018e9b:	cmp    QWORD PTR [rbx+0x18],0x8
   140018ea0:	jb     0x140018ea7
   140018ea2:	mov    rax,QWORD PTR [rbx]
   140018ea5:	jmp    0x140018eaa
   140018ea7:	mov    rax,rbx
   140018eaa:	mov    WORD PTR [rax+rcx*2],r14w
   140018eaf:	jmp    0x140018ece
   140018eb1:	cmp    QWORD PTR [rbx+0x18],0x8
   140018eb6:	jb     0x140018ebd
   140018eb8:	mov    rax,QWORD PTR [rbx]
   140018ebb:	jmp    0x140018ec0
   140018ebd:	mov    rax,rbx
   140018ec0:	lea    rdi,[rax+rcx*2]
   140018ec4:	movzx  eax,r14w
   140018ec8:	mov    rcx,rbp
   140018ecb:	rep stos WORD PTR es:[rdi],ax
   140018ece:	cmp    QWORD PTR [rbx+0x18],0x8
   140018ed3:	mov    QWORD PTR [rbx+0x10],rsi
   140018ed7:	jb     0x140018ede
   140018ed9:	mov    rax,QWORD PTR [rbx]
   140018edc:	jmp    0x140018ee1
   140018ede:	mov    rax,rbx
   140018ee1:	mov    WORD PTR [rax+rsi*2],r15w
   140018ee6:	mov    rbp,QWORD PTR [rsp+0x48]
   140018eeb:	mov    rax,rbx
   140018eee:	mov    rbx,QWORD PTR [rsp+0x40]
   140018ef3:	mov    rsi,QWORD PTR [rsp+0x50]
   140018ef8:	add    rsp,0x20
   140018efc:	pop    r15
   140018efe:	pop    r14
   140018f00:	pop    rdi
   140018f01:	ret    
   140018f02:	lea    rcx,[rip+0x49f37]        # 0x140062e40
   140018f09:	call   0x140027a4c
   140018f0e:	int3   
   140018f0f:	lea    rcx,[rip+0x49f2a]        # 0x140062e40
   140018f16:	call   0x140027a4c
   140018f1b:	int3   
   140018f1c:	mov    QWORD PTR [rsp+0x8],rbx
   140018f21:	mov    QWORD PTR [rsp+0x10],rsi
   140018f26:	mov    QWORD PTR [rsp+0x18],rdi
   140018f2b:	mov    r11,r8
   140018f2e:	mov    rsi,rdx
   140018f31:	mov    r10,rcx
   140018f34:	test   r9,r9
   140018f37:	jne    0x140018f47
   140018f39:	cmp    r8,QWORD PTR [rcx+0x10]
   140018f3d:	ja     0x140018f47
   140018f3f:	mov    rax,r8
   140018f42:	jmp    0x140019008
   140018f47:	mov    r8,QWORD PTR [rcx+0x10]
   140018f4b:	cmp    r11,r8
   140018f4e:	jae    0x140019004
   140018f54:	sub    r8,r11
   140018f57:	cmp    r9,r8
   140018f5a:	ja     0x140019004
   140018f60:	mov    eax,0x1
   140018f65:	sub    rax,r9
   140018f68:	add    r8,rax
   140018f6b:	cmp    QWORD PTR [rcx+0x18],0x8
   140018f70:	jb     0x140018f77
   140018f72:	mov    rax,QWORD PTR [rcx]
   140018f75:	jmp    0x140018f7a
   140018f77:	mov    rax,r10
   140018f7a:	lea    rdi,[rax+r11*2]
   140018f7e:	test   r8,r8
   140018f81:	je     0x140018f9b
   140018f83:	movzx  ecx,WORD PTR [rsi]
   140018f86:	mov    rax,r8
   140018f89:	mov    rdx,rdi
   140018f8c:	cmp    WORD PTR [rdx],cx
   140018f8f:	je     0x140018f9d
   140018f91:	add    rdx,0x2
   140018f95:	sub    rax,0x1
   140018f99:	jne    0x140018f8c
   140018f9b:	xor    edx,edx
   140018f9d:	test   rdx,rdx
   140018fa0:	je     0x140019004
   140018fa2:	test   r9,r9
   140018fa5:	je     0x140018fef
   140018fa7:	mov    rbx,r9
   140018faa:	mov    rcx,rsi
   140018fad:	mov    r11,rdx
   140018fb0:	movzx  eax,WORD PTR [rcx]
   140018fb3:	cmp    WORD PTR [r11],ax
   140018fb7:	jne    0x140018fe6
   140018fb9:	add    r11,0x2
   140018fbd:	add    rcx,0x2
   140018fc1:	sub    rbx,0x1
   140018fc5:	jne    0x140018fb0
   140018fc7:	xor    eax,eax
   140018fc9:	test   eax,eax
   140018fcb:	je     0x140018fef
   140018fcd:	or     rax,0xffffffffffffffff
   140018fd1:	mov    rcx,rdx
   140018fd4:	sub    rcx,rdi
   140018fd7:	lea    rdi,[rdx+0x2]
   140018fdb:	sar    rcx,1
   140018fde:	sub    rax,rcx
   140018fe1:	add    r8,rax
   140018fe4:	jmp    0x140018f7e
   140018fe6:	sbb    eax,eax
   140018fe8:	and    eax,0xfffffffe
   140018feb:	inc    eax
   140018fed:	jmp    0x140018fc9
   140018fef:	cmp    QWORD PTR [r10+0x18],0x8
   140018ff4:	jb     0x140018ff9
   140018ff6:	mov    r10,QWORD PTR [r10]
   140018ff9:	sub    rdx,r10
   140018ffc:	sar    rdx,1
   140018fff:	mov    rax,rdx
   140019002:	jmp    0x140019008
   140019004:	or     rax,0xffffffffffffffff
   140019008:	mov    rbx,QWORD PTR [rsp+0x8]
   14001900d:	mov    rsi,QWORD PTR [rsp+0x10]
   140019012:	mov    rdi,QWORD PTR [rsp+0x18]
   140019017:	ret    
   140019018:	mov    QWORD PTR [rsp+0x8],rbx
   14001901d:	mov    QWORD PTR [rsp+0x10],rdi
   140019022:	mov    r10,QWORD PTR [rcx+0x10]
   140019026:	mov    rbx,r9
   140019029:	mov    rdi,rdx
   14001902c:	cmp    r8,r10
   14001902f:	jae    0x14001909a
   140019031:	cmp    QWORD PTR [rcx+0x18],0x8
   140019036:	jb     0x14001903d
   140019038:	mov    rax,QWORD PTR [rcx]
   14001903b:	jmp    0x140019040
   14001903d:	mov    rax,rcx
   140019040:	cmp    QWORD PTR [rcx+0x18],0x8
   140019045:	lea    r11,[rax+r10*2]
   140019049:	jb     0x140019050
   14001904b:	mov    rax,QWORD PTR [rcx]
   14001904e:	jmp    0x140019053
   140019050:	mov    rax,rcx
   140019053:	lea    rax,[rax+r8*2]
   140019057:	cmp    rax,r11
   14001905a:	jae    0x14001909a
   14001905c:	test   rbx,rbx
   14001905f:	je     0x140019088
   140019061:	movzx  r9d,WORD PTR [rax]
   140019065:	mov    r8,rbx
   140019068:	mov    rdx,rdi
   14001906b:	cmp    WORD PTR [rdx],r9w
   14001906f:	je     0x14001907d
   140019071:	add    rdx,0x2
   140019075:	sub    r8,0x1
   140019079:	jne    0x14001906b
   14001907b:	xor    edx,edx
   14001907d:	test   rdx,rdx
   140019080:	je     0x140019088
   140019082:	add    rax,0x2
   140019086:	jmp    0x140019057
   140019088:	cmp    QWORD PTR [rcx+0x18],0x8
   14001908d:	jb     0x140019092
   14001908f:	mov    rcx,QWORD PTR [rcx]
   140019092:	sub    rax,rcx
   140019095:	sar    rax,1
   140019098:	jmp    0x14001909e
   14001909a:	or     rax,0xffffffffffffffff
   14001909e:	mov    rbx,QWORD PTR [rsp+0x8]
   1400190a3:	mov    rdi,QWORD PTR [rsp+0x10]
   1400190a8:	ret    
   1400190a9:	int3   
   1400190aa:	int3   
   1400190ab:	int3   
   1400190ac:	mov    rax,QWORD PTR [rcx+0x10]
   1400190b0:	mov    r10,r9
   1400190b3:	mov    r11,rdx
   1400190b6:	test   rax,rax
   1400190b9:	je     0x140019128
   1400190bb:	cmp    r8,rax
   1400190be:	jb     0x1400190c4
   1400190c0:	lea    r8,[rax-0x1]
   1400190c4:	cmp    QWORD PTR [rcx+0x18],0x8
   1400190c9:	jb     0x1400190d0
   1400190cb:	mov    rax,QWORD PTR [rcx]
   1400190ce:	jmp    0x1400190d3
   1400190d0:	mov    rax,rcx
   1400190d3:	lea    rax,[rax+r8*2]
   1400190d7:	test   r10,r10
   1400190da:	je     0x140019117
   1400190dc:	movzx  r9d,WORD PTR [rax]
   1400190e0:	mov    r8,r10
   1400190e3:	mov    rdx,r11
   1400190e6:	cmp    WORD PTR [rdx],r9w
   1400190ea:	je     0x1400190f8
   1400190ec:	add    rdx,0x2
   1400190f0:	sub    r8,0x1
   1400190f4:	jne    0x1400190e6
   1400190f6:	xor    edx,edx
   1400190f8:	test   rdx,rdx
   1400190fb:	je     0x140019117
   1400190fd:	cmp    QWORD PTR [rcx+0x18],0x8
   140019102:	jb     0x140019109
   140019104:	mov    rdx,QWORD PTR [rcx]
   140019107:	jmp    0x14001910c
   140019109:	mov    rdx,rcx
   14001910c:	cmp    rax,rdx
   14001910f:	je     0x140019128
   140019111:	sub    rax,0x2
   140019115:	jmp    0x1400190d7
   140019117:	cmp    QWORD PTR [rcx+0x18],0x8
   14001911c:	jb     0x140019121
   14001911e:	mov    rcx,QWORD PTR [rcx]
   140019121:	sub    rax,rcx
   140019124:	sar    rax,1
   140019127:	ret    
   140019128:	or     rax,0xffffffffffffffff
   14001912c:	ret    
   14001912d:	int3   
   14001912e:	int3   
   14001912f:	int3   
   140019130:	jmp    0x140030f44
   140019135:	int3   
   140019136:	int3   
   140019137:	int3   
   140019138:	rex push rdi
   14001913a:	sub    rsp,0x30
   14001913e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019147:	mov    QWORD PTR [rsp+0x50],rbx
   14001914c:	mov    rdi,rdx
   14001914f:	mov    rbx,rcx
   140019152:	mov    rax,QWORD PTR [rcx+0x8]
   140019156:	cmp    rdx,rax
   140019159:	jae    0x1400191bf
   14001915b:	cmp    QWORD PTR [rcx],rdx
   14001915e:	ja     0x1400191bf
   140019160:	sub    rdi,QWORD PTR [rcx]
   140019163:	cmp    rax,QWORD PTR [rcx+0x10]
   140019167:	jne    0x140019173
   140019169:	mov    edx,0x1
   14001916e:	call   0x1400127a0
   140019173:	mov    rcx,QWORD PTR [rbx+0x8]
   140019177:	mov    QWORD PTR [rsp+0x40],rcx
   14001917c:	and    rdi,0xffffffffffffffe0
   140019180:	add    rdi,QWORD PTR [rbx]
   140019183:	mov    QWORD PTR [rsp+0x48],rcx
   140019188:	xor    eax,eax
   14001918a:	test   rcx,rcx
   14001918d:	je     0x1400191bd
   14001918f:	mov    QWORD PTR [rcx+0x18],0x7
   140019197:	mov    QWORD PTR [rcx+0x10],rax
   14001919b:	cmp    QWORD PTR [rcx+0x18],0x8
   1400191a0:	jb     0x1400191a7
   1400191a2:	mov    rdx,QWORD PTR [rcx]
   1400191a5:	jmp    0x1400191aa
   1400191a7:	mov    rdx,rcx
   1400191aa:	mov    WORD PTR [rdx],ax
   1400191ad:	or     r9,0xffffffffffffffff
   1400191b1:	xor    r8d,r8d
   1400191b4:	mov    rdx,rdi
   1400191b7:	call   0x14000b850
   1400191bc:	nop
   1400191bd:	jmp    0x140019212
   1400191bf:	cmp    rax,QWORD PTR [rcx+0x10]
   1400191c3:	jne    0x1400191cf
   1400191c5:	mov    edx,0x1
   1400191ca:	call   0x1400127a0
   1400191cf:	mov    rcx,QWORD PTR [rbx+0x8]
   1400191d3:	mov    QWORD PTR [rsp+0x40],rcx
   1400191d8:	mov    QWORD PTR [rsp+0x48],rcx
   1400191dd:	xor    eax,eax
   1400191df:	test   rcx,rcx
   1400191e2:	je     0x140019212
   1400191e4:	mov    QWORD PTR [rcx+0x18],0x7
   1400191ec:	mov    QWORD PTR [rcx+0x10],rax
   1400191f0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400191f5:	jb     0x1400191fc
   1400191f7:	mov    rdx,QWORD PTR [rcx]
   1400191fa:	jmp    0x1400191ff
   1400191fc:	mov    rdx,rcx
   1400191ff:	mov    WORD PTR [rdx],ax
   140019202:	or     r9,0xffffffffffffffff
   140019206:	xor    r8d,r8d
   140019209:	mov    rdx,rdi
   14001920c:	call   0x14000b850
   140019211:	nop
   140019212:	add    QWORD PTR [rbx+0x8],0x20
   140019217:	mov    rbx,QWORD PTR [rsp+0x50]
   14001921c:	add    rsp,0x30
   140019220:	pop    rdi
   140019221:	ret    
   140019222:	int3   
   140019223:	int3   
   140019224:	jmp    0x140018738
   140019229:	int3   
   14001922a:	int3   
   14001922b:	int3   
   14001922c:	sub    rsp,0x38
   140019230:	mov    QWORD PTR [rsp+0x20],0x1
   140019239:	call   0x1400185f4
   14001923e:	add    rsp,0x38
   140019242:	ret    
   140019243:	int3   
   140019244:	rex push rbx
   140019246:	sub    rsp,0x30
   14001924a:	xor    eax,eax
   14001924c:	mov    QWORD PTR [rdx+0x18],0x7
   140019254:	mov    QWORD PTR [rdx+0x10],rax
   140019258:	mov    rbx,rdx
   14001925b:	mov    WORD PTR [rdx],ax
   14001925e:	mov    rdx,rcx
   140019261:	mov    rcx,rbx
   140019264:	mov    DWORD PTR [rsp+0x20],eax
   140019268:	call   0x14000b850
   14001926d:	mov    rax,rbx
   140019270:	add    rsp,0x30
   140019274:	pop    rbx
   140019275:	ret    
   140019276:	int3   
   140019277:	int3   
   140019278:	mov    rax,rsp
   14001927b:	mov    QWORD PTR [rax+0x8],rcx
   14001927f:	push   rdi
   140019280:	sub    rsp,0x30
   140019284:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14001928c:	mov    QWORD PTR [rax+0x18],rbx
   140019290:	mov    rdi,rdx
   140019293:	mov    rbx,rcx
   140019296:	xor    ecx,ecx
   140019298:	mov    DWORD PTR [rax-0x18],ecx
   14001929b:	mov    QWORD PTR [rbx+0x18],0x7
   1400192a3:	mov    QWORD PTR [rbx+0x10],rcx
   1400192a7:	cmp    QWORD PTR [rbx+0x18],0x8
   1400192ac:	jb     0x1400192b3
   1400192ae:	mov    rax,QWORD PTR [rbx]
   1400192b1:	jmp    0x1400192b6
   1400192b3:	mov    rax,rbx
   1400192b6:	mov    WORD PTR [rax],cx
   1400192b9:	mov    DWORD PTR [rsp+0x20],0x1
   1400192c1:	mov    rdx,QWORD PTR [rdx+0x10]
   1400192c5:	cmp    rdx,QWORD PTR [rbx+0x10]
   1400192c9:	ja     0x1400192e4
   1400192cb:	mov    QWORD PTR [rbx+0x10],rdx
   1400192cf:	cmp    QWORD PTR [rbx+0x18],0x8
   1400192d4:	jb     0x1400192db
   1400192d6:	mov    rax,QWORD PTR [rbx]
   1400192d9:	jmp    0x1400192de
   1400192db:	mov    rax,rbx
   1400192de:	mov    WORD PTR [rax+rdx*2],cx
   1400192e2:	jmp    0x1400192f3
   1400192e4:	xor    r8d,r8d
   1400192e7:	sub    rdx,QWORD PTR [rbx+0x10]
   1400192eb:	mov    rcx,rbx
   1400192ee:	call   0x140018e08
   1400192f3:	cmp    QWORD PTR [rbx+0x18],0x8
   1400192f8:	jb     0x1400192ff
   1400192fa:	mov    r8,QWORD PTR [rbx]
   1400192fd:	jmp    0x140019302
   1400192ff:	mov    r8,rbx
   140019302:	cmp    QWORD PTR [rdi+0x18],0x8
   140019307:	jb     0x14001930e
   140019309:	mov    rcx,QWORD PTR [rdi]
   14001930c:	jmp    0x140019311
   14001930e:	mov    rcx,rdi
   140019311:	mov    rax,QWORD PTR [rdi+0x10]
   140019315:	lea    rdx,[rcx+rax*2]
   140019319:	cmp    QWORD PTR [rdi+0x18],0x8
   14001931e:	jb     0x140019323
   140019320:	mov    rdi,QWORD PTR [rdi]
   140019323:	lea    rax,[rip+0xfffffffffffffe06]        # 0x140019130
   14001932a:	mov    QWORD PTR [rsp+0x48],rax
   14001932f:	lea    r9,[rsp+0x48]
   140019334:	mov    rcx,rdi
   140019337:	call   0x140018448
   14001933c:	mov    rax,rbx
   14001933f:	mov    rbx,QWORD PTR [rsp+0x50]
   140019344:	add    rsp,0x30
   140019348:	pop    rdi
   140019349:	ret    
   14001934a:	int3   
   14001934b:	int3   
   14001934c:	rex push rbx
   14001934e:	push   rsi
   14001934f:	push   rdi
   140019350:	sub    rsp,0x50
   140019354:	mov    rax,QWORD PTR [rip+0x57cf5]        # 0x140071050
   14001935b:	xor    rax,rsp
   14001935e:	mov    QWORD PTR [rsp+0x48],rax
   140019363:	xor    ebx,ebx
   140019365:	mov    esi,r8d
   140019368:	mov    rdi,rdx
   14001936b:	cmp    QWORD PTR [rcx+0x10],rbx
   14001936f:	jne    0x14001937c
   140019371:	test   rdx,rdx
   140019374:	je     0x140019378
   140019376:	mov    BYTE PTR [rdx],bl
   140019378:	xor    eax,eax
   14001937a:	jmp    0x1400193e8
   14001937c:	test   rdi,rdi
   14001937f:	je     0x140019384
   140019381:	mov    BYTE PTR [rdx],0x1
   140019384:	mov    rdx,rcx
   140019387:	lea    r8,[rip+0x32592]        # 0x14004b920
   14001938e:	lea    rcx,[rsp+0x28]
   140019393:	call   0x140019550
   140019398:	cmp    QWORD PTR [rsp+0x40],0x8
   14001939e:	lea    rcx,[rsp+0x28]
   1400193a3:	mov    r8d,esi
   1400193a6:	mov    QWORD PTR [rsp+0x20],rbx
   1400193ab:	cmovae rcx,QWORD PTR [rsp+0x28]
   1400193b1:	lea    rdx,[rsp+0x20]
   1400193b6:	call   0x1400323b4
   1400193bb:	mov    rcx,QWORD PTR [rsp+0x20]
   1400193c0:	test   rcx,rcx
   1400193c3:	je     0x1400193d3
   1400193c5:	cmp    WORD PTR [rcx],bx
   1400193c8:	je     0x1400193d3
   1400193ca:	test   rdi,rdi
   1400193cd:	je     0x1400193d6
   1400193cf:	mov    BYTE PTR [rdi],bl
   1400193d1:	jmp    0x1400193d6
   1400193d3:	mov    rbx,rax
   1400193d6:	xor    r8d,r8d
   1400193d9:	lea    rcx,[rsp+0x28]
   1400193de:	mov    dl,0x1
   1400193e0:	call   0x14000b6b0
   1400193e5:	mov    rax,rbx
   1400193e8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400193ed:	xor    rcx,rsp
   1400193f0:	call   0x140025df0
   1400193f5:	add    rsp,0x50
   1400193f9:	pop    rdi
   1400193fa:	pop    rsi
   1400193fb:	pop    rbx
   1400193fc:	ret    
   1400193fd:	int3   
   1400193fe:	int3   
   1400193ff:	int3   
   140019400:	rex push rbx
   140019402:	sub    rsp,0x20
   140019406:	mov    rbx,rdx
   140019409:	call   0x14001934c
   14001940e:	mov    ecx,0xffffffff
   140019413:	cmp    rax,rcx
   140019416:	jbe    0x140019421
   140019418:	xor    eax,eax
   14001941a:	test   rbx,rbx
   14001941d:	je     0x140019421
   14001941f:	mov    BYTE PTR [rbx],al
   140019421:	add    rsp,0x20
   140019425:	pop    rbx
   140019426:	ret    
   140019427:	int3   
   140019428:	mov    QWORD PTR [rsp+0x8],rbx
   14001942d:	push   rdi
   14001942e:	sub    rsp,0x20
   140019432:	mov    rbx,rdx
   140019435:	mov    rdi,rcx
   140019438:	call   0x1400194c4
   14001943d:	mov    rdx,rbx
   140019440:	mov    rcx,rdi
   140019443:	mov    rbx,QWORD PTR [rsp+0x30]
   140019448:	add    rsp,0x20
   14001944c:	pop    rdi
   14001944d:	jmp    0x140019454
   140019452:	int3   
   140019453:	int3   
   140019454:	mov    QWORD PTR [rsp+0x8],rbx
   140019459:	mov    QWORD PTR [rsp+0x10],rsi
   14001945e:	push   rdi
   14001945f:	sub    rsp,0x20
   140019463:	xor    esi,esi
   140019465:	mov    rdi,rdx
   140019468:	mov    rbx,rcx
   14001946b:	cmp    WORD PTR [rdx],si
   14001946e:	jne    0x140019474
   140019470:	mov    eax,esi
   140019472:	jmp    0x14001947c
   140019474:	mov    rcx,rdi
   140019477:	call   0x140031108
   14001947c:	mov    r9,rax
   14001947f:	xor    r8d,r8d
   140019482:	mov    rdx,rdi
   140019485:	mov    rcx,rbx
   140019488:	call   0x140019018
   14001948d:	cmp    rax,0xffffffffffffffff
   140019491:	jne    0x1400194a6
   140019493:	cmp    QWORD PTR [rbx+0x18],0x8
   140019498:	mov    QWORD PTR [rbx+0x10],rsi
   14001949c:	jb     0x1400194a1
   14001949e:	mov    rbx,QWORD PTR [rbx]
   1400194a1:	mov    WORD PTR [rbx],si
   1400194a4:	jmp    0x1400194b3
   1400194a6:	mov    r8,rax
   1400194a9:	xor    edx,edx
   1400194ab:	mov    rcx,rbx
   1400194ae:	call   0x14000c2e8
   1400194b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400194b8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400194bd:	add    rsp,0x20
   1400194c1:	pop    rdi
   1400194c2:	ret    
   1400194c3:	int3   
   1400194c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400194c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400194ce:	push   rdi
   1400194cf:	sub    rsp,0x20
   1400194d3:	xor    esi,esi
   1400194d5:	mov    rdi,rdx
   1400194d8:	mov    rbx,rcx
   1400194db:	cmp    WORD PTR [rdx],si
   1400194de:	jne    0x1400194e4
   1400194e0:	mov    eax,esi
   1400194e2:	jmp    0x1400194ec
   1400194e4:	mov    rcx,rdi
   1400194e7:	call   0x140031108
   1400194ec:	mov    r9,rax
   1400194ef:	or     r8,0xffffffffffffffff
   1400194f3:	mov    rdx,rdi
   1400194f6:	mov    rcx,rbx
   1400194f9:	call   0x1400190ac
   1400194fe:	cmp    rax,0xffffffffffffffff
   140019502:	jne    0x140019517
   140019504:	cmp    QWORD PTR [rbx+0x18],0x8
   140019509:	mov    QWORD PTR [rbx+0x10],rsi
   14001950d:	jb     0x140019512
   14001950f:	mov    rbx,QWORD PTR [rbx]
   140019512:	mov    WORD PTR [rbx],si
   140019515:	jmp    0x140019532
   140019517:	inc    rax
   14001951a:	cmp    QWORD PTR [rbx+0x10],rax
   14001951e:	jb     0x140019542
   140019520:	mov    QWORD PTR [rbx+0x10],rax
   140019524:	cmp    QWORD PTR [rbx+0x18],0x8
   140019529:	jb     0x14001952e
   14001952b:	mov    rbx,QWORD PTR [rbx]
   14001952e:	mov    WORD PTR [rbx+rax*2],si
   140019532:	mov    rbx,QWORD PTR [rsp+0x30]
   140019537:	mov    rsi,QWORD PTR [rsp+0x38]
   14001953c:	add    rsp,0x20
   140019540:	pop    rdi
   140019541:	ret    
   140019542:	lea    rcx,[rip+0x49907]        # 0x140062e50
   140019549:	call   0x140027a70
   14001954e:	int3   
   14001954f:	int3   
   140019550:	mov    rax,rsp
   140019553:	mov    QWORD PTR [rax+0x8],rcx
   140019557:	push   rdi
   140019558:	sub    rsp,0x30
   14001955c:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140019564:	mov    QWORD PTR [rax+0x10],rbx
   140019568:	mov    rdi,r8
   14001956b:	mov    rbx,rcx
   14001956e:	xor    ecx,ecx
   140019570:	mov    DWORD PTR [rax-0x18],ecx
   140019573:	mov    QWORD PTR [rbx+0x18],0x7
   14001957b:	mov    QWORD PTR [rbx+0x10],rcx
   14001957f:	cmp    QWORD PTR [rbx+0x18],0x8
   140019584:	jb     0x14001958b
   140019586:	mov    rax,QWORD PTR [rbx]
   140019589:	jmp    0x14001958e
   14001958b:	mov    rax,rbx
   14001958e:	mov    WORD PTR [rax],cx
   140019591:	or     r9,0xffffffffffffffff
   140019595:	xor    r8d,r8d
   140019598:	mov    rcx,rbx
   14001959b:	call   0x14000b850
   1400195a0:	mov    DWORD PTR [rsp+0x20],0x1
   1400195a8:	mov    rdx,rdi
   1400195ab:	mov    rcx,rbx
   1400195ae:	call   0x140019428
   1400195b3:	mov    rax,rbx
   1400195b6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400195bb:	add    rsp,0x30
   1400195bf:	pop    rdi
   1400195c0:	ret    
   1400195c1:	int3   
   1400195c2:	int3   
   1400195c3:	int3   
   1400195c4:	lea    rax,[rip+0x5c4fd]        # 0x140075ac8
   1400195cb:	ret    
   1400195cc:	mov    rax,rsp
   1400195cf:	mov    QWORD PTR [rax+0x18],r8
   1400195d3:	mov    QWORD PTR [rax+0x10],rdx
   1400195d7:	mov    QWORD PTR [rax+0x8],rcx
   1400195db:	push   rbx
   1400195dc:	push   rsi
   1400195dd:	push   rdi
   1400195de:	sub    rsp,0x30
   1400195e2:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400195ea:	mov    rsi,rcx
   1400195ed:	sub    r8,rdx
   1400195f0:	sar    r8,1
   1400195f3:	mov    rdx,r8
   1400195f6:	call   0x14000c054
   1400195fb:	test   al,al
   1400195fd:	je     0x140019622
   1400195ff:	mov    rdi,QWORD PTR [rsi]
   140019602:	mov    rbx,QWORD PTR [rsp+0x60]
   140019607:	mov    rdx,QWORD PTR [rsp+0x58]
   14001960c:	sub    rbx,rdx
   14001960f:	mov    r8,rbx
   140019612:	mov    rcx,rdi
   140019615:	call   0x140028fd0
   14001961a:	lea    rax,[rbx+rdi*1]
   14001961e:	mov    QWORD PTR [rsi+0x8],rax
   140019622:	add    rsp,0x30
   140019626:	pop    rdi
   140019627:	pop    rsi
   140019628:	pop    rbx
   140019629:	ret    
   14001962a:	int3   
   14001962b:	int3   
   14001962c:	mov    QWORD PTR [rsp+0x8],rcx
   140019631:	push   rdi
   140019632:	sub    rsp,0x30
   140019636:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001963f:	mov    QWORD PTR [rsp+0x48],rbx
   140019644:	mov    rdi,rdx
   140019647:	mov    rbx,rcx
   14001964a:	xor    eax,eax
   14001964c:	mov    QWORD PTR [rcx],rax
   14001964f:	mov    QWORD PTR [rcx+0x8],rax
   140019653:	mov    QWORD PTR [rcx+0x10],rax
   140019657:	test   rdx,rdx
   14001965a:	je     0x14001968d
   14001965c:	mov    r8b,0x1
   14001965f:	lea    edx,[rax+0x1]
   140019662:	mov    rcx,rdi
   140019665:	call   0x140004798
   14001966a:	mov    QWORD PTR [rbx],rax
   14001966d:	mov    QWORD PTR [rbx+0x8],rax
   140019671:	mov    rax,QWORD PTR [rbx]
   140019674:	lea    rcx,[rdi+rax*1]
   140019678:	mov    QWORD PTR [rbx+0x10],rcx
   14001967c:	mov    r8,rdi
   14001967f:	xor    edx,edx
   140019681:	mov    rcx,rax
   140019684:	call   0x14002a910
   140019689:	add    QWORD PTR [rbx+0x8],rdi
   14001968d:	mov    rax,rbx
   140019690:	mov    rbx,QWORD PTR [rsp+0x48]
   140019695:	add    rsp,0x30
   140019699:	pop    rdi
   14001969a:	ret    
   14001969b:	int3   
   14001969c:	sub    rsp,0x28
   1400196a0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400196a5:	jb     0x1400196aa
   1400196a7:	mov    rcx,QWORD PTR [rcx]
   1400196aa:	call   QWORD PTR [rip+0x31a48]        # 0x14004b0f8
   1400196b0:	cmp    eax,0xffffffff
   1400196b3:	je     0x1400196bc
   1400196b5:	shr    eax,0x4
   1400196b8:	and    al,0x1
   1400196ba:	jmp    0x1400196be
   1400196bc:	xor    al,al
   1400196be:	add    rsp,0x28
   1400196c2:	ret    
   1400196c3:	int3   
   1400196c4:	mov    rax,rsp
   1400196c7:	push   rbp
   1400196c8:	mov    rbp,rsp
   1400196cb:	sub    rsp,0x80
   1400196d2:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   1400196da:	mov    QWORD PTR [rax+0x8],rbx
   1400196de:	mov    QWORD PTR [rax+0x10],rsi
   1400196e2:	mov    rax,QWORD PTR [rip+0x57967]        # 0x140071050
   1400196e9:	xor    rax,rsp
   1400196ec:	mov    QWORD PTR [rbp-0x8],rax
   1400196f0:	xor    esi,esi
   1400196f2:	cmp    QWORD PTR [rcx+0x10],rsi
   1400196f6:	jne    0x1400196ff
   1400196f8:	xor    al,al
   1400196fa:	jmp    0x14001988d
   1400196ff:	mov    DWORD PTR [rbp-0x5c],0x5c
   140019706:	mov    eax,DWORD PTR [rip+0x32544]        # 0x14004bc50
   14001970c:	mov    DWORD PTR [rbp-0x10],eax
   14001970f:	movzx  eax,WORD PTR [rip+0x3253e]        # 0x14004bc54
   140019716:	mov    WORD PTR [rbp-0xc],ax
   14001971a:	cmp    QWORD PTR [rcx+0x18],0x8
   14001971f:	jb     0x140019726
   140019721:	mov    rdx,QWORD PTR [rcx]
   140019724:	jmp    0x140019729
   140019726:	mov    rdx,rcx
   140019729:	mov    rax,QWORD PTR [rcx+0x10]
   14001972d:	lea    r8,[rdx+rax*2]
   140019731:	cmp    QWORD PTR [rcx+0x18],0x8
   140019736:	jb     0x14001973b
   140019738:	mov    rcx,QWORD PTR [rcx]
   14001973b:	xorps  xmm0,xmm0
   14001973e:	movdqu XMMWORD PTR [rbp-0x50],xmm0
   140019743:	mov    QWORD PTR [rbp-0x40],rsi
   140019747:	xor    eax,eax
   140019749:	mov    r9b,al
   14001974c:	mov    rdx,rcx
   14001974f:	lea    rcx,[rbp-0x50]
   140019753:	call   0x1400195cc
   140019758:	nop
   140019759:	mov    WORD PTR [rbp-0x60],si
   14001975d:	lea    rdx,[rbp-0x60]
   140019761:	lea    rcx,[rbp-0x50]
   140019765:	call   0x1400199e4
   14001976a:	mov    QWORD PTR [rbp-0x58],rsi
   14001976e:	lea    r8,[rbp-0x58]
   140019772:	lea    rdx,[rbp-0x10]
   140019776:	mov    rcx,QWORD PTR [rbp-0x50]
   14001977a:	call   0x140032988
   14001977f:	mov    rbx,rax
   140019782:	mov    QWORD PTR [rbp-0x18],0x7
   14001978a:	mov    QWORD PTR [rbp-0x20],rsi
   14001978e:	mov    WORD PTR [rbp-0x30],si
   140019792:	xor    r8d,r8d
   140019795:	lea    rdx,[rip+0x446fc]        # 0x14005de98
   14001979c:	lea    rcx,[rbp-0x30]
   1400197a0:	call   0x14000b730
   1400197a5:	nop
   1400197a6:	test   rbx,rbx
   1400197a9:	je     0x14001985a
   1400197af:	test   rbx,rbx
   1400197b2:	je     0x1400197d5
   1400197b4:	cmp    WORD PTR [rbx],si
   1400197b7:	jne    0x1400197be
   1400197b9:	mov    rax,rsi
   1400197bc:	jmp    0x1400197c6
   1400197be:	mov    rcx,rbx
   1400197c1:	call   0x140031108
   1400197c6:	mov    r8,rax
   1400197c9:	mov    rdx,rbx
   1400197cc:	lea    rcx,[rbp-0x30]
   1400197d0:	call   0x14000f260
   1400197d5:	cmp    QWORD PTR [rbp-0x20],rsi
   1400197d9:	jbe    0x140019817
   1400197db:	lea    rcx,[rbp-0x30]
   1400197df:	cmp    QWORD PTR [rbp-0x18],0x8
   1400197e4:	cmovae rcx,QWORD PTR [rbp-0x30]
   1400197e9:	call   QWORD PTR [rip+0x31909]        # 0x14004b0f8
   1400197ef:	lea    rcx,[rbp-0x30]
   1400197f3:	cmp    eax,0xffffffff
   1400197f6:	je     0x140019801
   1400197f8:	call   0x14001969c
   1400197fd:	test   al,al
   1400197ff:	jmp    0x140019815
   140019801:	cmp    QWORD PTR [rbp-0x18],0x8
   140019806:	cmovae rcx,QWORD PTR [rbp-0x30]
   14001980b:	xor    edx,edx
   14001980d:	call   QWORD PTR [rip+0x31875]        # 0x14004b088
   140019813:	test   eax,eax
   140019815:	je     0x140019855
   140019817:	cmp    WORD PTR [rbp-0x5c],si
   14001981b:	jne    0x140019822
   14001981d:	mov    rax,rsi
   140019820:	jmp    0x14001982b
   140019822:	lea    rcx,[rbp-0x5c]
   140019826:	call   0x140031108
   14001982b:	mov    r8,rax
   14001982e:	lea    rdx,[rbp-0x5c]
   140019832:	lea    rcx,[rbp-0x30]
   140019836:	call   0x14000f260
   14001983b:	lea    r8,[rbp-0x58]
   14001983f:	lea    rdx,[rbp-0x10]
   140019843:	xor    ecx,ecx
   140019845:	call   0x140032988
   14001984a:	mov    rbx,rax
   14001984d:	test   rax,rax
   140019850:	jmp    0x1400197a9
   140019855:	mov    bl,sil
   140019858:	jmp    0x14001985c
   14001985a:	mov    bl,0x1
   14001985c:	xor    r8d,r8d
   14001985f:	mov    dl,0x1
   140019861:	lea    rcx,[rbp-0x30]
   140019865:	call   0x14000b6b0
   14001986a:	nop
   14001986b:	cmp    QWORD PTR [rbp-0x50],rsi
   14001986f:	je     0x14001988b
   140019871:	mov    rdx,QWORD PTR [rbp-0x40]
   140019875:	sub    rdx,QWORD PTR [rbp-0x50]
   140019879:	sar    rdx,1
   14001987c:	mov    r8d,0x2
   140019882:	mov    rcx,QWORD PTR [rbp-0x50]
   140019886:	call   0x140004804
   14001988b:	mov    al,bl
   14001988d:	mov    rcx,QWORD PTR [rbp-0x8]
   140019891:	xor    rcx,rsp
   140019894:	call   0x140025df0
   140019899:	lea    r11,[rsp+0x80]
   1400198a1:	mov    rbx,QWORD PTR [r11+0x10]
   1400198a5:	mov    rsi,QWORD PTR [r11+0x18]
   1400198a9:	mov    rsp,r11
   1400198ac:	pop    rbp
   1400198ad:	ret    
   1400198ae:	int3   
   1400198af:	int3   
   1400198b0:	sub    rsp,0x28
   1400198b4:	call   QWORD PTR [rip+0x318a6]        # 0x14004b160
   1400198ba:	test   eax,eax
   1400198bc:	setne  al
   1400198bf:	add    rsp,0x28
   1400198c3:	ret    
   1400198c4:	sub    rsp,0x28
   1400198c8:	call   0x1400329c0
   1400198cd:	test   eax,eax
   1400198cf:	sete   al
   1400198d2:	add    rsp,0x28
   1400198d6:	ret    
   1400198d7:	int3   
   1400198d8:	mov    QWORD PTR [rsp+0x10],rdx
   1400198dd:	push   rsi
   1400198de:	push   rdi
   1400198df:	push   r14
   1400198e1:	sub    rsp,0x30
   1400198e5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400198ee:	mov    QWORD PTR [rsp+0x60],rbx
   1400198f3:	mov    r14,rdx
   1400198f6:	mov    rbx,rcx
   1400198f9:	mov    r8b,0x1
   1400198fc:	mov    edx,0x2
   140019901:	mov    rcx,r14
   140019904:	call   0x140004798
   140019909:	mov    rsi,rax
   14001990c:	mov    QWORD PTR [rsp+0x50],rax
   140019911:	mov    r8,QWORD PTR [rbx+0x8]
   140019915:	sub    r8,QWORD PTR [rbx]
   140019918:	mov    rdx,QWORD PTR [rbx]
   14001991b:	mov    rcx,rax
   14001991e:	call   0x140028fd0
   140019923:	nop
   140019924:	mov    rcx,QWORD PTR [rbx]
   140019927:	mov    rdi,QWORD PTR [rbx+0x8]
   14001992b:	sub    rdi,rcx
   14001992e:	sar    rdi,1
   140019931:	test   rcx,rcx
   140019934:	je     0x14001994b
   140019936:	mov    rdx,QWORD PTR [rbx+0x10]
   14001993a:	sub    rdx,rcx
   14001993d:	sar    rdx,1
   140019940:	mov    r8d,0x2
   140019946:	call   0x140004804
   14001994b:	lea    rax,[rsi+r14*2]
   14001994f:	mov    QWORD PTR [rbx+0x10],rax
   140019953:	lea    rax,[rsi+rdi*2]
   140019957:	mov    QWORD PTR [rbx+0x8],rax
   14001995b:	mov    QWORD PTR [rbx],rsi
   14001995e:	mov    rbx,QWORD PTR [rsp+0x60]
   140019963:	add    rsp,0x30
   140019967:	pop    r14
   140019969:	pop    rdi
   14001996a:	pop    rsi
   14001996b:	ret    
   14001996c:	sub    rsp,0x28
   140019970:	mov    r10,QWORD PTR [rcx+0x10]
   140019974:	mov    r9,rcx
   140019977:	mov    r8,QWORD PTR [rcx+0x8]
   14001997b:	mov    rax,r10
   14001997e:	sub    rax,r8
   140019981:	sar    rax,1
   140019984:	cmp    rax,rdx
   140019987:	jae    0x1400199d1
   140019989:	sub    r8,QWORD PTR [rcx]
   14001998c:	movabs r11,0x7fffffffffffffff
   140019996:	sar    r8,1
   140019999:	mov    rax,r11
   14001999c:	sub    rax,r8
   14001999f:	cmp    rax,rdx
   1400199a2:	jb     0x1400199d6
   1400199a4:	sub    r10,QWORD PTR [rcx]
   1400199a7:	add    rdx,r8
   1400199aa:	sar    r10,1
   1400199ad:	xor    ecx,ecx
   1400199af:	mov    rax,r10
   1400199b2:	shr    rax,1
   1400199b5:	sub    r11,rax
   1400199b8:	add    rax,r10
   1400199bb:	cmp    r11,r10
   1400199be:	cmovae rcx,rax
   1400199c2:	cmp    rcx,rdx
   1400199c5:	cmovae rdx,rcx
   1400199c9:	mov    rcx,r9
   1400199cc:	call   0x1400198d8
   1400199d1:	add    rsp,0x28
   1400199d5:	ret    
   1400199d6:	lea    rcx,[rip+0x4944b]        # 0x140062e28
   1400199dd:	call   0x140027a4c
   1400199e2:	int3   
   1400199e3:	int3   
   1400199e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400199e9:	push   rdi
   1400199ea:	sub    rsp,0x20
   1400199ee:	mov    rax,QWORD PTR [rcx+0x8]
   1400199f2:	mov    rdi,rdx
   1400199f5:	mov    rbx,rcx
   1400199f8:	cmp    rdx,rax
   1400199fb:	jae    0x140019a2d
   1400199fd:	cmp    QWORD PTR [rcx],rdx
   140019a00:	ja     0x140019a2d
   140019a02:	sub    rdi,QWORD PTR [rcx]
   140019a05:	sar    rdi,1
   140019a08:	cmp    rax,QWORD PTR [rcx+0x10]
   140019a0c:	jne    0x140019a18
   140019a0e:	mov    edx,0x1
   140019a13:	call   0x14001996c
   140019a18:	mov    rdx,QWORD PTR [rbx+0x8]
   140019a1c:	test   rdx,rdx
   140019a1f:	je     0x140019a4c
   140019a21:	mov    rax,QWORD PTR [rbx]
   140019a24:	movzx  ecx,WORD PTR [rax+rdi*2]
   140019a28:	mov    WORD PTR [rdx],cx
   140019a2b:	jmp    0x140019a4c
   140019a2d:	cmp    rax,QWORD PTR [rcx+0x10]
   140019a31:	jne    0x140019a3d
   140019a33:	mov    edx,0x1
   140019a38:	call   0x14001996c
   140019a3d:	mov    rcx,QWORD PTR [rbx+0x8]
   140019a41:	test   rcx,rcx
   140019a44:	je     0x140019a4c
   140019a46:	movzx  eax,WORD PTR [rdi]
   140019a49:	mov    WORD PTR [rcx],ax
   140019a4c:	add    QWORD PTR [rbx+0x8],0x2
   140019a51:	mov    rbx,QWORD PTR [rsp+0x30]
   140019a56:	add    rsp,0x20
   140019a5a:	pop    rdi
   140019a5b:	ret    
   140019a5c:	mov    QWORD PTR [rsp+0x8],rcx
   140019a61:	push   rdi
   140019a62:	sub    rsp,0x30
   140019a66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019a6f:	mov    QWORD PTR [rsp+0x50],rbx
   140019a74:	mov    rdi,rdx
   140019a77:	mov    rbx,rcx
   140019a7a:	call   0x14001a948
   140019a7f:	nop
   140019a80:	lea    rax,[rip+0x32289]        # 0x14004bd10
   140019a87:	mov    QWORD PTR [rbx],rax
   140019a8a:	mov    ecx,0x28
   140019a8f:	call   0x140026118
   140019a94:	mov    QWORD PTR [rsp+0x48],rax
   140019a99:	or     r9,0xffffffffffffffff
   140019a9d:	xor    edx,edx
   140019a9f:	test   rax,rax
   140019aa2:	je     0x140019ac8
   140019aa4:	mov    QWORD PTR [rax+0x18],0x7
   140019aac:	mov    QWORD PTR [rax+0x10],rdx
   140019ab0:	cmp    QWORD PTR [rax+0x18],0x8
   140019ab5:	jb     0x140019abc
   140019ab7:	mov    rcx,QWORD PTR [rax]
   140019aba:	jmp    0x140019abf
   140019abc:	mov    rcx,rax
   140019abf:	mov    WORD PTR [rcx],dx
   140019ac2:	mov    QWORD PTR [rax+0x20],r9
   140019ac6:	jmp    0x140019acb
   140019ac8:	mov    rax,rdx
   140019acb:	mov    QWORD PTR [rbx+0x10],rax
   140019acf:	cmp    rax,rdi
   140019ad2:	je     0x140019ae3
   140019ad4:	xor    r8d,r8d
   140019ad7:	mov    rdx,rdi
   140019ada:	mov    rcx,rax
   140019add:	call   0x14000b850
   140019ae2:	nop
   140019ae3:	mov    rax,rbx
   140019ae6:	mov    rbx,QWORD PTR [rsp+0x50]
   140019aeb:	add    rsp,0x30
   140019aef:	pop    rdi
   140019af0:	ret    
   140019af1:	int3   
   140019af2:	int3   
   140019af3:	int3   
   140019af4:	rex push rdi
   140019af6:	sub    rsp,0x30
   140019afa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019b03:	mov    QWORD PTR [rsp+0x40],rbx
   140019b08:	mov    rbx,rcx
   140019b0b:	lea    rax,[rip+0x321fe]        # 0x14004bd10
   140019b12:	mov    QWORD PTR [rcx],rax
   140019b15:	call   0x14001a99c
   140019b1a:	nop
   140019b1b:	test   al,al
   140019b1d:	je     0x140019b28
   140019b1f:	mov    rcx,rbx
   140019b22:	call   0x140019be4
   140019b27:	nop
   140019b28:	mov    rdi,QWORD PTR [rbx+0x10]
   140019b2c:	test   rdi,rdi
   140019b2f:	je     0x140019b4d
   140019b31:	xor    r8d,r8d
   140019b34:	mov    dl,0x1
   140019b36:	mov    rcx,rdi
   140019b39:	call   0x14000b6b0
   140019b3e:	nop
   140019b3f:	mov    edx,0x28
   140019b44:	mov    rcx,rdi
   140019b47:	call   0x140026804
   140019b4c:	nop
   140019b4d:	and    QWORD PTR [rbx+0x10],0x0
   140019b52:	mov    rcx,rbx
   140019b55:	mov    rbx,QWORD PTR [rsp+0x40]
   140019b5a:	add    rsp,0x30
   140019b5e:	pop    rdi
   140019b5f:	jmp    0x14001a95c
   140019b64:	mov    QWORD PTR [rsp+0x8],rbx
   140019b69:	push   rdi
   140019b6a:	sub    rsp,0x20
   140019b6e:	mov    ebx,edx
   140019b70:	mov    rdi,rcx
   140019b73:	call   0x140019af4
   140019b78:	test   bl,0x1
   140019b7b:	je     0x140019b8a
   140019b7d:	mov    edx,0x18
   140019b82:	mov    rcx,rdi
   140019b85:	call   0x140026804
   140019b8a:	mov    rax,rdi
   140019b8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140019b92:	add    rsp,0x20
   140019b96:	pop    rdi
   140019b97:	ret    
   140019b98:	mov    QWORD PTR [rsp+0x8],rbx
   140019b9d:	mov    QWORD PTR [rsp+0x10],rsi
   140019ba2:	push   rdi
   140019ba3:	sub    rsp,0x20
   140019ba7:	mov    rdi,rcx
   140019baa:	call   0x14001a99c
   140019baf:	test   al,al
   140019bb1:	jne    0x140019bb7
   140019bb3:	mov    al,0x1
   140019bb5:	jmp    0x140019bd2
   140019bb7:	mov    rdx,QWORD PTR [rdi]
   140019bba:	mov    rcx,rdi
   140019bbd:	call   QWORD PTR [rdx+0x38]
   140019bc0:	mov    rdx,QWORD PTR [rdi]
   140019bc3:	mov    rcx,rdi
   140019bc6:	mov    rbx,rax
   140019bc9:	call   QWORD PTR [rdx+0x20]
   140019bcc:	cmp    rax,rbx
   140019bcf:	sete   al
   140019bd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140019bd7:	mov    rsi,QWORD PTR [rsp+0x38]
   140019bdc:	add    rsp,0x20
   140019be0:	pop    rdi
   140019be1:	ret    
   140019be2:	int3   
   140019be3:	int3   
   140019be4:	rex push rbx
   140019be6:	sub    rsp,0x20
   140019bea:	mov    rbx,rcx
   140019bed:	call   0x14001a99c
   140019bf2:	test   al,al
   140019bf4:	je     0x140019c15
   140019bf6:	mov    rcx,QWORD PTR [rbx+0x10]
   140019bfa:	mov    rcx,QWORD PTR [rcx+0x20]
   140019bfe:	call   QWORD PTR [rip+0x314cc]        # 0x14004b0d0
   140019c04:	mov    rax,QWORD PTR [rbx+0x10]
   140019c08:	mov    rcx,rbx
   140019c0b:	or     QWORD PTR [rax+0x20],0xffffffffffffffff
   140019c10:	call   0x14001a994
   140019c15:	add    rsp,0x20
   140019c19:	pop    rbx
   140019c1a:	ret    
   140019c1b:	int3   
   140019c1c:	rex push rbx
   140019c1e:	sub    rsp,0x20
   140019c22:	mov    rbx,rcx
   140019c25:	call   0x14001a99c
   140019c2a:	test   al,al
   140019c2c:	jne    0x140019c32
   140019c2e:	xor    eax,eax
   140019c30:	jmp    0x140019c6b
   140019c32:	mov    rcx,QWORD PTR [rbx+0x10]
   140019c36:	lea    r8,[rsp+0x38]
   140019c3b:	and    DWORD PTR [rsp+0x40],0x0
   140019c40:	xor    eax,eax
   140019c42:	and    DWORD PTR [rsp+0x38],eax
   140019c46:	mov    DWORD PTR [rsp+0x44],eax
   140019c4a:	mov    rdx,QWORD PTR [rsp+0x40]
   140019c4f:	mov    DWORD PTR [rsp+0x3c],eax
   140019c53:	lea    r9d,[rax+0x1]
   140019c57:	mov    rcx,QWORD PTR [rcx+0x20]
   140019c5b:	call   QWORD PTR [rip+0x31527]        # 0x14004b188
   140019c61:	neg    eax
   140019c63:	sbb    rax,rax
   140019c66:	and    rax,QWORD PTR [rsp+0x38]
   140019c6b:	add    rsp,0x20
   140019c6f:	pop    rbx
   140019c70:	ret    
   140019c71:	int3   
   140019c72:	int3   
   140019c73:	int3   
   140019c74:	mov    QWORD PTR [rsp+0x8],rbx
   140019c79:	mov    QWORD PTR [rsp+0x10],rsi
   140019c7e:	push   rdi
   140019c7f:	sub    rsp,0x40
   140019c83:	mov    edi,edx
   140019c85:	mov    rbx,rcx
   140019c88:	test   dl,0x3
   140019c8b:	jne    0x140019c94
   140019c8d:	xor    al,al
   140019c8f:	jmp    0x140019d78
   140019c94:	call   0x14001a99c
   140019c99:	test   al,al
   140019c9b:	je     0x140019ca6
   140019c9d:	mov    rax,QWORD PTR [rbx]
   140019ca0:	mov    rcx,rbx
   140019ca3:	call   QWORD PTR [rax+0x10]
   140019ca6:	mov    r8d,edi
   140019ca9:	and    r8d,0x1
   140019cad:	mov    edx,r8d
   140019cb0:	mov    eax,r8d
   140019cb3:	shl    edx,0x1f
   140019cb6:	neg    eax
   140019cb8:	sbb    ecx,ecx
   140019cba:	and    ecx,0x3
   140019cbd:	test   dil,0x2
   140019cc1:	je     0x140019cd5
   140019cc3:	bts    edx,0x1e
   140019cc7:	mov    eax,edi
   140019cc9:	and    al,0x8
   140019ccb:	neg    al
   140019ccd:	sbb    ecx,ecx
   140019ccf:	and    ecx,0xfffffffe
   140019cd2:	add    ecx,0x4
   140019cd5:	mov    rax,QWORD PTR [rbx+0x10]
   140019cd9:	lea    r8d,[r8*2+0x1]
   140019ce1:	cmp    QWORD PTR [rax+0x18],0x8
   140019ce6:	jb     0x140019ceb
   140019ce8:	mov    rax,QWORD PTR [rax]
   140019ceb:	and    QWORD PTR [rsp+0x30],0x0
   140019cf1:	xor    r9d,r9d
   140019cf4:	mov    DWORD PTR [rsp+0x28],0x80
   140019cfc:	mov    DWORD PTR [rsp+0x20],ecx
   140019d00:	mov    rcx,rax
   140019d03:	call   QWORD PTR [rip+0x313f7]        # 0x14004b100
   140019d09:	mov    rsi,rax
   140019d0c:	cmp    rax,0xffffffffffffffff
   140019d10:	je     0x140019c8d
   140019d16:	mov    rax,QWORD PTR [rbx+0x10]
   140019d1a:	mov    edx,edi
   140019d1c:	mov    rcx,rbx
   140019d1f:	mov    QWORD PTR [rax+0x20],rsi
   140019d23:	call   0x14001a9b8
   140019d28:	test   al,al
   140019d2a:	jne    0x140019d43
   140019d2c:	mov    rcx,rsi
   140019d2f:	call   QWORD PTR [rip+0x3139b]        # 0x14004b0d0
   140019d35:	mov    rax,QWORD PTR [rbx+0x10]
   140019d39:	or     QWORD PTR [rax+0x20],0xffffffffffffffff
   140019d3e:	jmp    0x140019c8d
   140019d43:	test   dil,0x4
   140019d47:	je     0x140019d76
   140019d49:	mov    rcx,QWORD PTR [rbx+0x10]
   140019d4d:	xor    eax,eax
   140019d4f:	and    DWORD PTR [rsp+0x60],0x0
   140019d54:	xor    r8d,r8d
   140019d57:	mov    DWORD PTR [rsp+0x64],eax
   140019d5b:	mov    rdx,QWORD PTR [rsp+0x60]
   140019d60:	mov    rcx,QWORD PTR [rcx+0x20]
   140019d64:	lea    r9d,[rax+0x2]
   140019d68:	call   QWORD PTR [rip+0x3141a]        # 0x14004b188
   140019d6e:	test   eax,eax
   140019d70:	je     0x140019c8d
   140019d76:	mov    al,0x1
   140019d78:	mov    rbx,QWORD PTR [rsp+0x50]
   140019d7d:	mov    rsi,QWORD PTR [rsp+0x58]
   140019d82:	add    rsp,0x40
   140019d86:	pop    rdi
   140019d87:	ret    
   140019d88:	mov    QWORD PTR [rsp+0x8],rbx
   140019d8d:	mov    QWORD PTR [rsp+0x10],rbp
   140019d92:	mov    QWORD PTR [rsp+0x18],rsi
   140019d97:	push   rdi
   140019d98:	sub    rsp,0x30
   140019d9c:	mov    rdi,r9
   140019d9f:	mov    BYTE PTR [r9],0x1
   140019da3:	mov    rsi,r8
   140019da6:	mov    rbp,rdx
   140019da9:	mov    rbx,rcx
   140019dac:	call   0x14001a99c
   140019db1:	test   al,al
   140019db3:	jne    0x140019db9
   140019db5:	xor    eax,eax
   140019db7:	jmp    0x140019dfe
   140019db9:	mov    rcx,rbx
   140019dbc:	call   0x14001a9a4
   140019dc1:	test   al,al
   140019dc3:	je     0x140019db5
   140019dc5:	mov    eax,0xffffffff
   140019dca:	cmp    rsi,rax
   140019dcd:	ja     0x140019db5
   140019dcf:	mov    rcx,QWORD PTR [rbx+0x10]
   140019dd3:	lea    r9,[rsp+0x58]
   140019dd8:	and    DWORD PTR [rsp+0x58],0x0
   140019ddd:	mov    r8d,esi
   140019de0:	and    QWORD PTR [rsp+0x20],0x0
   140019de6:	mov    rdx,rbp
   140019de9:	mov    rcx,QWORD PTR [rcx+0x20]
   140019ded:	call   QWORD PTR [rip+0x31385]        # 0x14004b178
   140019df3:	test   eax,eax
   140019df5:	je     0x140019dfa
   140019df7:	mov    BYTE PTR [rdi],0x0
   140019dfa:	mov    eax,DWORD PTR [rsp+0x58]
   140019dfe:	mov    rbx,QWORD PTR [rsp+0x40]
   140019e03:	mov    rbp,QWORD PTR [rsp+0x48]
   140019e08:	mov    rsi,QWORD PTR [rsp+0x50]
   140019e0d:	add    rsp,0x30
   140019e11:	pop    rdi
   140019e12:	ret    
   140019e13:	int3   
   140019e14:	mov    QWORD PTR [rsp+0x8],rbx
   140019e19:	push   rdi
   140019e1a:	sub    rsp,0x20
   140019e1e:	mov    rdi,rdx
   140019e21:	mov    rbx,rcx
   140019e24:	call   0x14001a99c
   140019e29:	test   al,al
   140019e2b:	je     0x140019e49
   140019e2d:	mov    rcx,QWORD PTR [rbx+0x10]
   140019e31:	xor    r9d,r9d
   140019e34:	xor    r8d,r8d
   140019e37:	mov    rdx,rdi
   140019e3a:	mov    rcx,QWORD PTR [rcx+0x20]
   140019e3e:	call   QWORD PTR [rip+0x31344]        # 0x14004b188
   140019e44:	test   eax,eax
   140019e46:	setne  al
   140019e49:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e4e:	add    rsp,0x20
   140019e52:	pop    rdi
   140019e53:	ret    
   140019e54:	sub    rsp,0x58
   140019e58:	mov    rax,QWORD PTR [rip+0x571f1]        # 0x140071050
   140019e5f:	xor    rax,rsp
   140019e62:	mov    QWORD PTR [rsp+0x48],rax
   140019e67:	cmp    QWORD PTR [rcx+0x18],0x8
   140019e6c:	jb     0x140019e71
   140019e6e:	mov    rcx,QWORD PTR [rcx]
   140019e71:	lea    r8,[rsp+0x20]
   140019e76:	xor    edx,edx
   140019e78:	call   QWORD PTR [rip+0x312da]        # 0x14004b158
   140019e7e:	test   eax,eax
   140019e80:	jne    0x140019e86
   140019e82:	xor    eax,eax
   140019e84:	jmp    0x140019e95
   140019e86:	mov    eax,DWORD PTR [rsp+0x3c]
   140019e8a:	mov    ecx,DWORD PTR [rsp+0x40]
   140019e8e:	shl    rax,0x20
   140019e92:	add    rax,rcx
   140019e95:	mov    rcx,QWORD PTR [rsp+0x48]
   140019e9a:	xor    rcx,rsp
   140019e9d:	call   0x140025df0
   140019ea2:	add    rsp,0x58
   140019ea6:	ret    
   140019ea7:	int3   
   140019ea8:	rex push rbx
   140019eaa:	sub    rsp,0x60
   140019eae:	mov    rax,QWORD PTR [rip+0x5719b]        # 0x140071050
   140019eb5:	xor    rax,rsp
   140019eb8:	mov    QWORD PTR [rsp+0x58],rax
   140019ebd:	mov    rbx,rcx
   140019ec0:	call   0x14001a99c
   140019ec5:	mov    rcx,QWORD PTR [rbx+0x10]
   140019ec9:	test   al,al
   140019ecb:	je     0x140019ef5
   140019ecd:	mov    rcx,QWORD PTR [rcx+0x20]
   140019ed1:	lea    rdx,[rsp+0x20]
   140019ed6:	call   QWORD PTR [rip+0x3128c]        # 0x14004b168
   140019edc:	test   eax,eax
   140019ede:	jne    0x140019ee4
   140019ee0:	xor    eax,eax
   140019ee2:	jmp    0x140019efa
   140019ee4:	mov    eax,DWORD PTR [rsp+0x40]
   140019ee8:	mov    ecx,DWORD PTR [rsp+0x44]
   140019eec:	shl    rax,0x20
   140019ef0:	add    rax,rcx
   140019ef3:	jmp    0x140019efa
   140019ef5:	call   0x140019e54
   140019efa:	mov    rcx,QWORD PTR [rsp+0x58]
   140019eff:	xor    rcx,rsp
   140019f02:	call   0x140025df0
   140019f07:	add    rsp,0x60
   140019f0b:	pop    rbx
   140019f0c:	ret    
   140019f0d:	int3   
   140019f0e:	int3   
   140019f0f:	int3   
   140019f10:	mov    QWORD PTR [rsp+0x8],rbx
   140019f15:	mov    QWORD PTR [rsp+0x10],rbp
   140019f1a:	mov    QWORD PTR [rsp+0x18],rsi
   140019f1f:	push   rdi
   140019f20:	sub    rsp,0x30
   140019f24:	mov    rdi,r9
   140019f27:	mov    BYTE PTR [r9],0x1
   140019f2b:	mov    rsi,r8
   140019f2e:	mov    rbp,rdx
   140019f31:	mov    rbx,rcx
   140019f34:	call   0x14001a99c
   140019f39:	test   al,al
   140019f3b:	jne    0x140019f41
   140019f3d:	xor    eax,eax
   140019f3f:	jmp    0x140019f86
   140019f41:	mov    rcx,rbx
   140019f44:	call   0x14001a9ac
   140019f49:	test   al,al
   140019f4b:	je     0x140019f3d
   140019f4d:	mov    eax,0xffffffff
   140019f52:	cmp    rsi,rax
   140019f55:	ja     0x140019f3d
   140019f57:	mov    rcx,QWORD PTR [rbx+0x10]
   140019f5b:	lea    r9,[rsp+0x58]
   140019f60:	and    DWORD PTR [rsp+0x58],0x0
   140019f65:	mov    r8d,esi
   140019f68:	and    QWORD PTR [rsp+0x20],0x0
   140019f6e:	mov    rdx,rbp
   140019f71:	mov    rcx,QWORD PTR [rcx+0x20]
   140019f75:	call   QWORD PTR [rip+0x311f5]        # 0x14004b170
   140019f7b:	test   eax,eax
   140019f7d:	je     0x140019f82
   140019f7f:	mov    BYTE PTR [rdi],0x0
   140019f82:	mov    eax,DWORD PTR [rsp+0x58]
   140019f86:	mov    rbx,QWORD PTR [rsp+0x40]
   140019f8b:	mov    rbp,QWORD PTR [rsp+0x48]
   140019f90:	mov    rsi,QWORD PTR [rsp+0x50]
   140019f95:	add    rsp,0x30
   140019f99:	pop    rdi
   140019f9a:	ret    
   140019f9b:	int3   
   140019f9c:	mov    QWORD PTR [rsp+0x8],rcx
   140019fa1:	push   rbx
   140019fa2:	sub    rsp,0x30
   140019fa6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140019faf:	mov    rbx,rcx
   140019fb2:	lea    rax,[rip+0x31f07]        # 0x14004bec0
   140019fb9:	mov    QWORD PTR [rcx],rax
   140019fbc:	and    QWORD PTR [rcx+0x8],0x0
   140019fc1:	cmp    QWORD PTR [rdx+0x18],0x8
   140019fc6:	jb     0x140019fcb
   140019fc8:	mov    rdx,QWORD PTR [rdx]
   140019fcb:	call   0x14001a33c
   140019fd0:	nop
   140019fd1:	mov    rax,rbx
   140019fd4:	add    rsp,0x30
   140019fd8:	pop    rbx
   140019fd9:	ret    
   140019fda:	int3   
   140019fdb:	int3   
   140019fdc:	mov    QWORD PTR [rsp+0x8],rbx
   140019fe1:	push   rdi
   140019fe2:	sub    rsp,0x20
   140019fe6:	cmp    QWORD PTR [rcx+0x8],0x0
   140019feb:	lea    rax,[rip+0x31ece]        # 0x14004bec0
   140019ff2:	mov    QWORD PTR [rcx],rax
   140019ff5:	mov    rbx,rcx
   140019ff8:	je     0x14001a032
   140019ffa:	mov    ecx,0x1
   140019fff:	call   0x140032b10
   14001a004:	cmp    QWORD PTR [rbx+0x8],rax
   14001a008:	je     0x14001a032
   14001a00a:	mov    ecx,0x2
   14001a00f:	call   0x140032b10
   14001a014:	cmp    QWORD PTR [rbx+0x8],rax
   14001a018:	je     0x14001a032
   14001a01a:	mov    rdi,QWORD PTR [rbx+0x8]
   14001a01e:	xor    ecx,ecx
   14001a020:	call   0x140032b10
   14001a025:	cmp    rdi,rax
   14001a028:	je     0x14001a032
   14001a02a:	mov    rcx,rdi
   14001a02d:	call   0x140032694
   14001a032:	and    QWORD PTR [rbx+0x8],0x0
   14001a037:	lea    rax,[rip+0x31e6a]        # 0x14004bea8
   14001a03e:	mov    QWORD PTR [rbx],rax
   14001a041:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a046:	add    rsp,0x20
   14001a04a:	pop    rdi
   14001a04b:	ret    
   14001a04c:	lea    rax,[rip+0x31e55]        # 0x14004bea8
   14001a053:	mov    QWORD PTR [rcx],rax
   14001a056:	ret    
   14001a057:	int3   
   14001a058:	mov    QWORD PTR [rsp+0x8],rbx
   14001a05d:	push   rdi
   14001a05e:	sub    rsp,0x20
   14001a062:	mov    ebx,edx
   14001a064:	mov    rdi,rcx
   14001a067:	call   0x140019fdc
   14001a06c:	test   bl,0x1
   14001a06f:	je     0x14001a07e
   14001a071:	mov    edx,0x10
   14001a076:	mov    rcx,rdi
   14001a079:	call   0x140026804
   14001a07e:	mov    rax,rdi
   14001a081:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a086:	add    rsp,0x20
   14001a08a:	pop    rdi
   14001a08b:	ret    
   14001a08c:	rex push rbx
   14001a08e:	sub    rsp,0x20
   14001a092:	lea    rax,[rip+0x31e0f]        # 0x14004bea8
   14001a099:	mov    rbx,rcx
   14001a09c:	mov    QWORD PTR [rcx],rax
   14001a09f:	test   dl,0x1
   14001a0a2:	je     0x14001a0ae
   14001a0a4:	mov    edx,0x8
   14001a0a9:	call   0x140026804
   14001a0ae:	mov    rax,rbx
   14001a0b1:	add    rsp,0x20
   14001a0b5:	pop    rbx
   14001a0b6:	ret    
   14001a0b7:	int3   
   14001a0b8:	mov    QWORD PTR [rsp+0x10],rdx
   14001a0bd:	push   rsi
   14001a0be:	push   rdi
   14001a0bf:	push   r14
   14001a0c1:	sub    rsp,0x30
   14001a0c5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a0ce:	mov    QWORD PTR [rsp+0x60],rbx
   14001a0d3:	mov    r14,rdx
   14001a0d6:	mov    rbx,rcx
   14001a0d9:	mov    r8b,0x1
   14001a0dc:	mov    edx,0x8
   14001a0e1:	mov    rcx,r14
   14001a0e4:	call   0x140004798
   14001a0e9:	mov    rsi,rax
   14001a0ec:	mov    QWORD PTR [rsp+0x50],rax
   14001a0f1:	mov    r8,QWORD PTR [rbx+0x8]
   14001a0f5:	sub    r8,QWORD PTR [rbx]
   14001a0f8:	mov    rdx,QWORD PTR [rbx]
   14001a0fb:	mov    rcx,rax
   14001a0fe:	call   0x140028fd0
   14001a103:	nop
   14001a104:	mov    rcx,QWORD PTR [rbx]
   14001a107:	mov    rdi,QWORD PTR [rbx+0x8]
   14001a10b:	sub    rdi,rcx
   14001a10e:	sar    rdi,0x3
   14001a112:	test   rcx,rcx
   14001a115:	je     0x14001a12d
   14001a117:	mov    rdx,QWORD PTR [rbx+0x10]
   14001a11b:	sub    rdx,rcx
   14001a11e:	sar    rdx,0x3
   14001a122:	mov    r8d,0x8
   14001a128:	call   0x140004804
   14001a12d:	lea    rax,[rsi+r14*8]
   14001a131:	mov    QWORD PTR [rbx+0x10],rax
   14001a135:	lea    rax,[rsi+rdi*8]
   14001a139:	mov    QWORD PTR [rbx+0x8],rax
   14001a13d:	mov    QWORD PTR [rbx],rsi
   14001a140:	mov    rbx,QWORD PTR [rsp+0x60]
   14001a145:	add    rsp,0x30
   14001a149:	pop    r14
   14001a14b:	pop    rdi
   14001a14c:	pop    rsi
   14001a14d:	ret    
   14001a14e:	int3   
   14001a14f:	int3   
   14001a150:	sub    rsp,0x28
   14001a154:	mov    r10,QWORD PTR [rcx+0x10]
   14001a158:	mov    r9,rcx
   14001a15b:	mov    r8,QWORD PTR [rcx+0x8]
   14001a15f:	mov    rax,r10
   14001a162:	sub    rax,r8
   14001a165:	sar    rax,0x3
   14001a169:	cmp    rax,rdx
   14001a16c:	jae    0x14001a1b8
   14001a16e:	sub    r8,QWORD PTR [rcx]
   14001a171:	movabs r11,0x1fffffffffffffff
   14001a17b:	sar    r8,0x3
   14001a17f:	mov    rax,r11
   14001a182:	sub    rax,r8
   14001a185:	cmp    rax,rdx
   14001a188:	jb     0x14001a1bd
   14001a18a:	sub    r10,QWORD PTR [rcx]
   14001a18d:	add    rdx,r8
   14001a190:	sar    r10,0x3
   14001a194:	xor    ecx,ecx
   14001a196:	mov    rax,r10
   14001a199:	shr    rax,1
   14001a19c:	sub    r11,rax
   14001a19f:	add    rax,r10
   14001a1a2:	cmp    r11,r10
   14001a1a5:	cmovae rcx,rax
   14001a1a9:	cmp    rcx,rdx
   14001a1ac:	cmovae rdx,rcx
   14001a1b0:	mov    rcx,r9
   14001a1b3:	call   0x14001a0b8
   14001a1b8:	add    rsp,0x28
   14001a1bc:	ret    
   14001a1bd:	lea    rcx,[rip+0x48c64]        # 0x140062e28
   14001a1c4:	call   0x140027a4c
   14001a1c9:	int3   
   14001a1ca:	int3   
   14001a1cb:	int3   
   14001a1cc:	mov    QWORD PTR [rsp+0x8],rcx
   14001a1d1:	push   rbx
   14001a1d2:	sub    rsp,0x30
   14001a1d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a1df:	test   rcx,rcx
   14001a1e2:	je     0x14001a22d
   14001a1e4:	mov    rbx,QWORD PTR [rip+0x5b8ed]        # 0x140075ad8
   14001a1eb:	mov    QWORD PTR [rsp+0x48],rbx
   14001a1f0:	mov    rcx,rbx
   14001a1f3:	call   0x140025ca8
   14001a1f8:	nop
   14001a1f9:	lea    rdx,[rsp+0x40]
   14001a1fe:	lea    rcx,[rip+0x5b8db]        # 0x140075ae0
   14001a205:	call   0x14001a514
   14001a20a:	nop
   14001a20b:	test   rbx,rbx
   14001a20e:	je     0x14001a219
   14001a210:	mov    rcx,rbx
   14001a213:	call   0x140025cb4
   14001a218:	nop
   14001a219:	mov    al,0x1
   14001a21b:	jmp    0x14001a22f
   14001a21d:	mov    rcx,QWORD PTR [rsp+0x48]
   14001a222:	test   rcx,rcx
   14001a225:	je     0x14001a22d
   14001a227:	call   0x140025cb4
   14001a22c:	nop
   14001a22d:	xor    al,al
   14001a22f:	add    rsp,0x30
   14001a233:	pop    rbx
   14001a234:	ret    
   14001a235:	int3   
   14001a236:	int3   
   14001a237:	int3   
   14001a238:	rex push rdi
   14001a23a:	sub    rsp,0x30
   14001a23e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a247:	mov    QWORD PTR [rsp+0x48],rbx
   14001a24c:	mov    rbx,QWORD PTR [rip+0x5b885]        # 0x140075ad8
   14001a253:	mov    QWORD PTR [rsp+0x40],rbx
   14001a258:	mov    rcx,rbx
   14001a25b:	call   0x140025ca8
   14001a260:	nop
   14001a261:	lea    rdx,[rip+0x31c68]        # 0x14004bed0
   14001a268:	mov    ecx,0x3
   14001a26d:	call   0x14001a664
   14001a272:	xor    edi,edi
   14001a274:	mov    rdx,QWORD PTR [rip+0x5b86d]        # 0x140075ae8
   14001a27b:	mov    rax,rdx
   14001a27e:	mov    rcx,QWORD PTR [rip+0x5b85b]        # 0x140075ae0
   14001a285:	sub    rax,rcx
   14001a288:	sar    rax,0x3
   14001a28c:	test   rax,rax
   14001a28f:	je     0x14001a2c7
   14001a291:	mov    r8,QWORD PTR [rcx+rdi*8]
   14001a295:	test   r8,r8
   14001a298:	je     0x14001a2b5
   14001a29a:	mov    rax,QWORD PTR [r8]
   14001a29d:	mov    edx,0x1
   14001a2a2:	mov    rcx,r8
   14001a2a5:	call   QWORD PTR [rax]
   14001a2a7:	mov    rdx,QWORD PTR [rip+0x5b83a]        # 0x140075ae8
   14001a2ae:	mov    rcx,QWORD PTR [rip+0x5b82b]        # 0x140075ae0
   14001a2b5:	inc    rdi
   14001a2b8:	mov    rax,rdx
   14001a2bb:	sub    rax,rcx
   14001a2be:	sar    rax,0x3
   14001a2c2:	cmp    rdi,rax
   14001a2c5:	jb     0x14001a291
   14001a2c7:	mov    QWORD PTR [rip+0x5b81a],rcx        # 0x140075ae8
   14001a2ce:	test   rbx,rbx
   14001a2d1:	je     0x14001a2dc
   14001a2d3:	mov    rcx,rbx
   14001a2d6:	call   0x140025cb4
   14001a2db:	nop
   14001a2dc:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a2e1:	add    rsp,0x30
   14001a2e5:	pop    rdi
   14001a2e6:	ret    
   14001a2e7:	int3   
   14001a2e8:	rex push rdi
   14001a2ea:	sub    rsp,0x30
   14001a2ee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a2f7:	mov    QWORD PTR [rsp+0x40],rbx
   14001a2fc:	mov    edi,ecx
   14001a2fe:	mov    rbx,QWORD PTR [rip+0x5b7d3]        # 0x140075ad8
   14001a305:	mov    rcx,rbx
   14001a308:	call   0x140025ca8
   14001a30d:	mov    rax,QWORD PTR [rip+0x5b7cc]        # 0x140075ae0
   14001a314:	mov    QWORD PTR [rip+0x5b7cd],rax        # 0x140075ae8
   14001a31b:	mov    DWORD PTR [rip+0x5b7af],edi        # 0x140075ad0
   14001a321:	test   rbx,rbx
   14001a324:	je     0x14001a32f
   14001a326:	mov    rcx,rbx
   14001a329:	call   0x140025cb4
   14001a32e:	nop
   14001a32f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a334:	add    rsp,0x30
   14001a338:	pop    rdi
   14001a339:	ret    
   14001a33a:	int3   
   14001a33b:	int3   
   14001a33c:	test   rdx,rdx
   14001a33f:	je     0x14001a469
   14001a345:	mov    rax,rsp
   14001a348:	push   rbp
   14001a349:	push   rsi
   14001a34a:	push   rdi
   14001a34b:	lea    rbp,[rax-0x5f]
   14001a34f:	sub    rsp,0xa0
   14001a356:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   14001a35e:	mov    QWORD PTR [rax+0x18],rbx
   14001a362:	mov    rax,QWORD PTR [rip+0x56ce7]        # 0x140071050
   14001a369:	xor    rax,rsp
   14001a36c:	mov    QWORD PTR [rbp+0x37],rax
   14001a370:	mov    rdi,rdx
   14001a373:	mov    rsi,rcx
   14001a376:	xor    ebx,ebx
   14001a378:	lea    rdx,[rip+0x31c25]        # 0x14004bfa4
   14001a37f:	mov    rcx,rdi
   14001a382:	call   0x140032604
   14001a387:	mov    QWORD PTR [rsi+0x8],rax
   14001a38b:	test   rax,rax
   14001a38e:	jne    0x14001a44b
   14001a394:	mov    QWORD PTR [rbp+0xf],0x7
   14001a39c:	mov    QWORD PTR [rbp+0x7],rbx
   14001a3a0:	mov    WORD PTR [rbp-0x9],bx
   14001a3a4:	lea    rcx,[rip+0x31bfd]        # 0x14004bfa8
   14001a3ab:	call   0x140031108
   14001a3b0:	mov    r8,rax
   14001a3b3:	lea    rdx,[rip+0x31bee]        # 0x14004bfa8
   14001a3ba:	lea    rcx,[rbp-0x9]
   14001a3be:	call   0x14000b730
   14001a3c3:	nop
   14001a3c4:	cmp    WORD PTR [rdi],bx
   14001a3c7:	je     0x14001a3d4
   14001a3c9:	mov    rcx,rdi
   14001a3cc:	call   0x140031108
   14001a3d1:	mov    rbx,rax
   14001a3d4:	mov    r8,rbx
   14001a3d7:	mov    rdx,rdi
   14001a3da:	lea    rcx,[rbp-0x9]
   14001a3de:	call   0x14000f260
   14001a3e3:	lea    rdx,[rbp-0x9]
   14001a3e7:	cmp    QWORD PTR [rbp+0xf],0x8
   14001a3ec:	cmovae rdx,QWORD PTR [rbp-0x9]
   14001a3f1:	lea    rcx,[rbp+0x17]
   14001a3f5:	call   0x140018be0
   14001a3fa:	nop
   14001a3fb:	cmp    QWORD PTR [rax+0x18],0x10
   14001a400:	jb     0x14001a405
   14001a402:	mov    rax,QWORD PTR [rax]
   14001a405:	lea    rcx,[rip+0x3133c]        # 0x14004b748
   14001a40c:	mov    QWORD PTR [rbp-0x39],rcx
   14001a410:	xor    ecx,ecx
   14001a412:	mov    QWORD PTR [rbp-0x31],rcx
   14001a416:	mov    QWORD PTR [rbp-0x29],rcx
   14001a41a:	mov    QWORD PTR [rbp-0x21],rax
   14001a41e:	mov    BYTE PTR [rbp-0x19],0x1
   14001a422:	lea    rdx,[rbp-0x31]
   14001a426:	lea    rcx,[rbp-0x21]
   14001a42a:	call   0x140028f04
   14001a42f:	lea    rax,[rip+0x31372]        # 0x14004b7a8
   14001a436:	mov    QWORD PTR [rbp-0x39],rax
   14001a43a:	lea    rdx,[rip+0x55a0f]        # 0x14006fe50
   14001a441:	lea    rcx,[rbp-0x39]
   14001a445:	call   0x14002ab88
   14001a44a:	nop
   14001a44b:	mov    rcx,QWORD PTR [rbp+0x37]
   14001a44f:	xor    rcx,rsp
   14001a452:	call   0x140025df0
   14001a457:	mov    rbx,QWORD PTR [rsp+0xd0]
   14001a45f:	add    rsp,0xa0
   14001a466:	pop    rdi
   14001a467:	pop    rsi
   14001a468:	pop    rbp
   14001a469:	ret    
   14001a46a:	int3   
   14001a46b:	int3   
   14001a46c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a471:	mov    QWORD PTR [rsp+0x10],rbp
   14001a476:	mov    QWORD PTR [rsp+0x18],rsi
   14001a47b:	push   rdi
   14001a47c:	sub    rsp,0x20
   14001a480:	lea    rdi,[rcx+0x10]
   14001a484:	xor    ebp,ebp
   14001a486:	mov    rax,QWORD PTR [rdi]
   14001a489:	movzx  esi,dx
   14001a48c:	mov    rbx,rcx
   14001a48f:	cmp    rax,QWORD PTR [rcx+0x18]
   14001a493:	jne    0x14001a4d7
   14001a495:	inc    rax
   14001a498:	movabs rcx,0x7ffffffffffffffe
   14001a4a2:	cmp    rax,rcx
   14001a4a5:	ja     0x14001a507
   14001a4a7:	cmp    QWORD PTR [rbx+0x18],rax
   14001a4ab:	jae    0x14001a4bd
   14001a4ad:	mov    r8,QWORD PTR [rdi]
   14001a4b0:	mov    rdx,rax
   14001a4b3:	mov    rcx,rbx
   14001a4b6:	call   0x14000cb48
   14001a4bb:	jmp    0x14001a4d7
   14001a4bd:	test   rax,rax
   14001a4c0:	jne    0x14001a4d7
   14001a4c2:	cmp    QWORD PTR [rbx+0x18],0x8
   14001a4c7:	mov    QWORD PTR [rdi],rbp
   14001a4ca:	jb     0x14001a4d1
   14001a4cc:	mov    rax,QWORD PTR [rbx]
   14001a4cf:	jmp    0x14001a4d4
   14001a4d1:	mov    rax,rbx
   14001a4d4:	mov    WORD PTR [rax],bp
   14001a4d7:	cmp    QWORD PTR [rbx+0x18],0x8
   14001a4dc:	jb     0x14001a4e1
   14001a4de:	mov    rbx,QWORD PTR [rbx]
   14001a4e1:	mov    rax,QWORD PTR [rdi]
   14001a4e4:	mov    WORD PTR [rbx+rax*2],si
   14001a4e8:	inc    QWORD PTR [rdi]
   14001a4eb:	mov    rax,QWORD PTR [rdi]
   14001a4ee:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a4f3:	mov    WORD PTR [rbx+rax*2],bp
   14001a4f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a4fc:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a501:	add    rsp,0x20
   14001a505:	pop    rdi
   14001a506:	ret    
   14001a507:	lea    rcx,[rip+0x48932]        # 0x140062e40
   14001a50e:	call   0x140027a4c
   14001a513:	int3   
   14001a514:	mov    QWORD PTR [rsp+0x8],rbx
   14001a519:	push   rdi
   14001a51a:	sub    rsp,0x20
   14001a51e:	mov    rax,QWORD PTR [rcx+0x8]
   14001a522:	mov    rdi,rdx
   14001a525:	mov    rbx,rcx
   14001a528:	cmp    rdx,rax
   14001a52b:	jae    0x14001a55e
   14001a52d:	cmp    QWORD PTR [rcx],rdx
   14001a530:	ja     0x14001a55e
   14001a532:	sub    rdi,QWORD PTR [rcx]
   14001a535:	sar    rdi,0x3
   14001a539:	cmp    rax,QWORD PTR [rcx+0x10]
   14001a53d:	jne    0x14001a549
   14001a53f:	mov    edx,0x1
   14001a544:	call   0x14001a150
   14001a549:	mov    rdx,QWORD PTR [rbx+0x8]
   14001a54d:	test   rdx,rdx
   14001a550:	je     0x14001a57d
   14001a552:	mov    rax,QWORD PTR [rbx]
   14001a555:	mov    rcx,QWORD PTR [rax+rdi*8]
   14001a559:	mov    QWORD PTR [rdx],rcx
   14001a55c:	jmp    0x14001a57d
   14001a55e:	cmp    rax,QWORD PTR [rcx+0x10]
   14001a562:	jne    0x14001a56e
   14001a564:	mov    edx,0x1
   14001a569:	call   0x14001a150
   14001a56e:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a572:	test   rcx,rcx
   14001a575:	je     0x14001a57d
   14001a577:	mov    rax,QWORD PTR [rdi]
   14001a57a:	mov    QWORD PTR [rcx],rax
   14001a57d:	add    QWORD PTR [rbx+0x8],0x8
   14001a582:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a587:	add    rsp,0x20
   14001a58b:	pop    rdi
   14001a58c:	ret    
   14001a58d:	int3   
   14001a58e:	int3   
   14001a58f:	int3   
   14001a590:	mov    QWORD PTR [rsp+0x10],rbx
   14001a595:	mov    QWORD PTR [rsp+0x18],rsi
   14001a59a:	mov    QWORD PTR [rsp+0x8],rcx
   14001a59f:	push   rdi
   14001a5a0:	sub    rsp,0x20
   14001a5a4:	mov    rdi,r9
   14001a5a7:	mov    rsi,r8
   14001a5aa:	lea    rbx,[rcx+0x8]
   14001a5ae:	cmp    QWORD PTR [rbx],0x0
   14001a5b2:	je     0x14001a643
   14001a5b8:	mov    rcx,r9
   14001a5bb:	call   0x140031108
   14001a5c0:	cmp    WORD PTR [rdi+rax*2-0x2],0xa
   14001a5c6:	je     0x14001a5d4
   14001a5c8:	cmp    WORD PTR [rdi+rax*2-0x2],0xd
   14001a5ce:	je     0x14001a5d4
   14001a5d0:	xor    al,al
   14001a5d2:	jmp    0x14001a5d6
   14001a5d4:	mov    al,0x1
   14001a5d6:	lea    rcx,[rip+0x31a0b]        # 0x14004bfe8
   14001a5dd:	lea    rdx,[rip+0x31a14]        # 0x14004bff8
   14001a5e4:	test   al,al
   14001a5e6:	cmovne rdx,rcx
   14001a5ea:	mov    r9,rdi
   14001a5ed:	mov    r8,rsi
   14001a5f0:	mov    rcx,QWORD PTR [rbx]
   14001a5f3:	call   0x14001a904
   14001a5f8:	jmp    0x14001a63b
   14001a5fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a5ff:	add    rbx,0x8
   14001a603:	lea    rdx,[rip+0x319fe]        # 0x14004c008
   14001a60a:	mov    rcx,QWORD PTR [rbx]
   14001a60d:	call   0x14001a8c0
   14001a612:	mov    ecx,0x2
   14001a617:	call   0x140032b10
   14001a61c:	cmp    QWORD PTR [rbx],rax
   14001a61f:	je     0x14001a63b
   14001a621:	mov    ecx,0x2
   14001a626:	call   0x140032b10
   14001a62b:	mov    rcx,rax
   14001a62e:	lea    rdx,[rip+0x319d3]        # 0x14004c008
   14001a635:	call   0x14001a8c0
   14001a63a:	nop
   14001a63b:	mov    rcx,QWORD PTR [rbx]
   14001a63e:	call   0x1400328b4
   14001a643:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a648:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a64d:	add    rsp,0x20
   14001a651:	pop    rdi
   14001a652:	ret    
   14001a653:	int3   
   14001a654:	cmp    QWORD PTR [rdx+0x18],0x8
   14001a659:	jb     0x14001a65e
   14001a65b:	mov    rdx,QWORD PTR [rdx]
   14001a65e:	jmp    0x14001a664
   14001a663:	int3   
   14001a664:	test   rdx,rdx
   14001a667:	je     0x14001a867
   14001a66d:	mov    rax,rsp
   14001a670:	push   rdi
   14001a671:	push   r14
   14001a673:	push   r15
   14001a675:	sub    rsp,0xd0
   14001a67c:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   14001a684:	mov    QWORD PTR [rax+0x18],rbx
   14001a688:	mov    QWORD PTR [rax+0x20],rsi
   14001a68c:	mov    rax,QWORD PTR [rip+0x569bd]        # 0x140071050
   14001a693:	xor    rax,rsp
   14001a696:	mov    QWORD PTR [rsp+0xc0],rax
   14001a69e:	mov    r15,rdx
   14001a6a1:	mov    r14d,ecx
   14001a6a4:	mov    QWORD PTR [rsp+0x80],rdx
   14001a6ac:	xor    edi,edi
   14001a6ae:	mov    rbx,QWORD PTR [rip+0x5b423]        # 0x140075ad8
   14001a6b5:	test   rbx,rbx
   14001a6b8:	je     0x14001a83f
   14001a6be:	mov    QWORD PTR [rsp+0x78],rbx
   14001a6c3:	mov    rcx,rbx
   14001a6c6:	call   0x140025ca8
   14001a6cb:	nop
   14001a6cc:	mov    rax,QWORD PTR [rip+0x5b415]        # 0x140075ae8
   14001a6d3:	cmp    QWORD PTR [rip+0x5b406],rax        # 0x140075ae0
   14001a6da:	sete   al
   14001a6dd:	test   al,al
   14001a6df:	je     0x14001a6f4
   14001a6e1:	test   rbx,rbx
   14001a6e4:	je     0x14001a6ef
   14001a6e6:	mov    rcx,rbx
   14001a6e9:	call   0x140025cb4
   14001a6ee:	nop
   14001a6ef:	jmp    0x14001a83f
   14001a6f4:	mov    esi,edi
   14001a6f6:	test   r14d,r14d
   14001a6f9:	cmovns esi,r14d
   14001a6fd:	mov    eax,0x4
   14001a702:	cmp    esi,eax
   14001a704:	cmovg  esi,eax
   14001a707:	mov    DWORD PTR [rsp+0x60],esi
   14001a70b:	cmp    DWORD PTR [rip+0x5b3bf],esi        # 0x140075ad0
   14001a711:	jge    0x14001a726
   14001a713:	test   rbx,rbx
   14001a716:	je     0x14001a721
   14001a718:	mov    rcx,rbx
   14001a71b:	call   0x140025cb4
   14001a720:	nop
   14001a721:	jmp    0x14001a83f
   14001a726:	mov    DWORD PTR [rsp+0x50],edi
   14001a72a:	mov    QWORD PTR [rsp+0x56],rdi
   14001a72f:	mov    WORD PTR [rsp+0x5e],di
   14001a734:	mov    eax,0xffff
   14001a739:	mov    WORD PTR [rsp+0x54],ax
   14001a73e:	lea    rcx,[rsp+0x68]
   14001a743:	call   0x140025bd4
   14001a748:	lea    rcx,[rsp+0x68]
   14001a74d:	call   0x140025c08
   14001a752:	lea    rdx,[rsp+0x68]
   14001a757:	lea    rcx,[rsp+0x50]
   14001a75c:	call   0x140025830
   14001a761:	xor    edx,edx
   14001a763:	lea    r8d,[rdx+0x2a]
   14001a767:	lea    rcx,[rsp+0x90]
   14001a76f:	call   0x14002a910
   14001a774:	movsxd rcx,esi
   14001a777:	mov    rax,QWORD PTR [rip+0x568b2]        # 0x140071030
   14001a77e:	movzx  edx,WORD PTR [rax+rcx*2]
   14001a782:	movzx  eax,WORD PTR [rsp+0x5e]
   14001a787:	movzx  ecx,WORD PTR [rsp+0x5c]
   14001a78c:	movzx  r8d,WORD PTR [rsp+0x5a]
   14001a792:	movzx  r10d,WORD PTR [rsp+0x58]
   14001a798:	movzx  r11d,WORD PTR [rsp+0x56]
   14001a79e:	movzx  r9d,WORD PTR [rsp+0x52]
   14001a7a4:	mov    DWORD PTR [rsp+0x48],edx
   14001a7a8:	mov    DWORD PTR [rsp+0x40],eax
   14001a7ac:	mov    DWORD PTR [rsp+0x38],ecx
   14001a7b0:	mov    DWORD PTR [rsp+0x30],r8d
   14001a7b5:	mov    DWORD PTR [rsp+0x28],r10d
   14001a7ba:	mov    DWORD PTR [rsp+0x20],r11d
   14001a7bf:	lea    r8,[rip+0x3179a]        # 0x14004bf60
   14001a7c6:	mov    edx,0x14
   14001a7cb:	lea    rcx,[rsp+0x90]
   14001a7d3:	call   0x14001a868
   14001a7d8:	mov    r14,rdi
   14001a7db:	mov    QWORD PTR [rsp+0x70],r14
   14001a7e0:	mov    rax,QWORD PTR [rip+0x5b301]        # 0x140075ae8
   14001a7e7:	mov    rcx,QWORD PTR [rip+0x5b2f2]        # 0x140075ae0
   14001a7ee:	sub    rax,rcx
   14001a7f1:	sar    rax,0x3
   14001a7f5:	cmp    r14,rax
   14001a7f8:	jae    0x14001a831
   14001a7fa:	mov    rcx,QWORD PTR [rcx+r14*8]
   14001a7fe:	mov    rax,QWORD PTR [rcx]
   14001a801:	mov    r9,r15
   14001a804:	lea    r8,[rsp+0x90]
   14001a80c:	mov    edx,esi
   14001a80e:	call   QWORD PTR [rax+0x8]
   14001a811:	nop
   14001a812:	jmp    0x14001a82c
   14001a814:	xor    edi,edi
   14001a816:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a81b:	mov    r14,QWORD PTR [rsp+0x70]
   14001a820:	mov    r15,QWORD PTR [rsp+0x80]
   14001a828:	mov    esi,DWORD PTR [rsp+0x60]
   14001a82c:	inc    r14
   14001a82f:	jmp    0x14001a7db
   14001a831:	test   rbx,rbx
   14001a834:	je     0x14001a83f
   14001a836:	mov    rcx,rbx
   14001a839:	call   0x140025cb4
   14001a83e:	nop
   14001a83f:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001a847:	xor    rcx,rsp
   14001a84a:	call   0x140025df0
   14001a84f:	lea    r11,[rsp+0xd0]
   14001a857:	mov    rbx,QWORD PTR [r11+0x30]
   14001a85b:	mov    rsi,QWORD PTR [r11+0x38]
   14001a85f:	mov    rsp,r11
   14001a862:	pop    r15
   14001a864:	pop    r14
   14001a866:	pop    rdi
   14001a867:	ret    
   14001a868:	mov    QWORD PTR [rsp+0x18],r8
   14001a86d:	mov    QWORD PTR [rsp+0x20],r9
   14001a872:	push   rbx
   14001a873:	push   rbp
   14001a874:	push   rsi
   14001a875:	push   rdi
   14001a876:	sub    rsp,0x38
   14001a87a:	mov    rsi,r8
   14001a87d:	lea    rbp,[rsp+0x78]
   14001a882:	mov    rbx,rdx
   14001a885:	mov    rdi,rcx
   14001a888:	call   0x140004694
   14001a88d:	mov    QWORD PTR [rsp+0x28],rbp
   14001a892:	mov    r9,rsi
   14001a895:	and    QWORD PTR [rsp+0x20],0x0
   14001a89b:	mov    r8,rbx
   14001a89e:	mov    rdx,rdi
   14001a8a1:	mov    rcx,QWORD PTR [rax]
   14001a8a4:	or     rcx,0x1
   14001a8a8:	call   0x140030258
   14001a8ad:	or     ecx,0xffffffff
   14001a8b0:	test   eax,eax
   14001a8b2:	cmovs  eax,ecx
   14001a8b5:	add    rsp,0x38
   14001a8b9:	pop    rdi
   14001a8ba:	pop    rsi
   14001a8bb:	pop    rbp
   14001a8bc:	pop    rbx
   14001a8bd:	ret    
   14001a8be:	int3   
   14001a8bf:	int3   
   14001a8c0:	mov    rax,rsp
   14001a8c3:	mov    QWORD PTR [rax+0x10],rdx
   14001a8c7:	mov    QWORD PTR [rax+0x18],r8
   14001a8cb:	mov    QWORD PTR [rax+0x20],r9
   14001a8cf:	push   rbx
   14001a8d0:	push   rsi
   14001a8d1:	push   rdi
   14001a8d2:	sub    rsp,0x30
   14001a8d6:	mov    rdi,rdx
   14001a8d9:	lea    rsi,[rax+0x18]
   14001a8dd:	mov    rbx,rcx
   14001a8e0:	call   0x140004694
   14001a8e5:	xor    r9d,r9d
   14001a8e8:	mov    QWORD PTR [rsp+0x20],rsi
   14001a8ed:	mov    r8,rdi
   14001a8f0:	mov    rdx,rbx
   14001a8f3:	mov    rcx,QWORD PTR [rax]
   14001a8f6:	call   0x1400300dc
   14001a8fb:	add    rsp,0x30
   14001a8ff:	pop    rdi
   14001a900:	pop    rsi
   14001a901:	pop    rbx
   14001a902:	ret    
   14001a903:	int3   
   14001a904:	mov    rax,rsp
   14001a907:	mov    QWORD PTR [rax+0x10],rdx
   14001a90b:	mov    QWORD PTR [rax+0x18],r8
   14001a90f:	mov    QWORD PTR [rax+0x20],r9
   14001a913:	push   rbx
   14001a914:	push   rsi
   14001a915:	push   rdi
   14001a916:	sub    rsp,0x30
   14001a91a:	mov    rdi,rdx
   14001a91d:	lea    rsi,[rax+0x18]
   14001a921:	mov    rbx,rcx
   14001a924:	call   0x140004694
   14001a929:	xor    r9d,r9d
   14001a92c:	mov    QWORD PTR [rsp+0x20],rsi
   14001a931:	mov    r8,rdi
   14001a934:	mov    rdx,rbx
   14001a937:	mov    rcx,QWORD PTR [rax]
   14001a93a:	call   0x140030168
   14001a93f:	add    rsp,0x30
   14001a943:	pop    rdi
   14001a944:	pop    rsi
   14001a945:	pop    rbx
   14001a946:	ret    
   14001a947:	int3   
   14001a948:	and    DWORD PTR [rcx+0x8],0x0
   14001a94c:	lea    rax,[rip+0x31765]        # 0x14004c0b8
   14001a953:	mov    QWORD PTR [rcx],rax
   14001a956:	mov    rax,rcx
   14001a959:	ret    
   14001a95a:	int3   
   14001a95b:	int3   
   14001a95c:	lea    rax,[rip+0x31755]        # 0x14004c0b8
   14001a963:	mov    QWORD PTR [rcx],rax
   14001a966:	ret    
   14001a967:	int3   
   14001a968:	rex push rbx
   14001a96a:	sub    rsp,0x20
   14001a96e:	lea    rax,[rip+0x31743]        # 0x14004c0b8
   14001a975:	mov    rbx,rcx
   14001a978:	mov    QWORD PTR [rcx],rax
   14001a97b:	test   dl,0x1
   14001a97e:	je     0x14001a98a
   14001a980:	mov    edx,0x10
   14001a985:	call   0x140026804
   14001a98a:	mov    rax,rbx
   14001a98d:	add    rsp,0x20
   14001a991:	pop    rbx
   14001a992:	ret    
   14001a993:	int3   
   14001a994:	and    DWORD PTR [rcx+0x8],0x0
   14001a998:	ret    
   14001a999:	int3   
   14001a99a:	int3   
   14001a99b:	int3   
   14001a99c:	cmp    DWORD PTR [rcx+0x8],0x0
   14001a9a0:	setne  al
   14001a9a3:	ret    
   14001a9a4:	mov    eax,DWORD PTR [rcx+0x8]
   14001a9a7:	and    eax,0x1
   14001a9aa:	ret    
   14001a9ab:	int3   
   14001a9ac:	mov    eax,DWORD PTR [rcx+0x8]
   14001a9af:	shr    eax,1
   14001a9b1:	and    eax,0x1
   14001a9b4:	ret    
   14001a9b5:	int3   
   14001a9b6:	int3   
   14001a9b7:	int3   
   14001a9b8:	mov    DWORD PTR [rcx+0x8],edx
   14001a9bb:	mov    al,0x1
   14001a9bd:	ret    
   14001a9be:	int3   
   14001a9bf:	int3   
   14001a9c0:	mov    rax,rsp
   14001a9c3:	mov    QWORD PTR [rax+0x10],rdx
   14001a9c7:	push   rdi
   14001a9c8:	sub    rsp,0x30
   14001a9cc:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001a9d4:	mov    QWORD PTR [rax+0x18],rbx
   14001a9d8:	mov    QWORD PTR [rax+0x20],rsi
   14001a9dc:	mov    rbx,rdx
   14001a9df:	mov    rdi,rcx
   14001a9e2:	mov    rax,QWORD PTR [rdx]
   14001a9e5:	mov    QWORD PTR [rdx+0x8],rax
   14001a9e9:	cmp    DWORD PTR [rcx+0x8],0x0
   14001a9ed:	je     0x14001aabd
   14001a9f3:	mov    rax,QWORD PTR [rcx]
   14001a9f6:	call   QWORD PTR [rax+0x18]
   14001a9f9:	test   al,al
   14001a9fb:	je     0x14001aa66
   14001a9fd:	xor    esi,esi
   14001a9ff:	mov    BYTE PTR [rsp+0x40],sil
   14001aa04:	mov    rdx,QWORD PTR [rbx+0x8]
   14001aa08:	sub    rdx,QWORD PTR [rbx]
   14001aa0b:	add    rdx,0x4000
   14001aa12:	mov    rcx,rbx
   14001aa15:	call   0x14001abdc
   14001aa1a:	nop
   14001aa1b:	mov    BYTE PTR [rsp+0x40],0x0
   14001aa20:	mov    rcx,QWORD PTR [rbx]
   14001aa23:	mov    r8,QWORD PTR [rbx+0x8]
   14001aa27:	sub    r8,rcx
   14001aa2a:	mov    rax,QWORD PTR [rdi]
   14001aa2d:	sub    r8,rsi
   14001aa30:	lea    rdx,[rcx+rsi*1]
   14001aa34:	lea    r9,[rsp+0x40]
   14001aa39:	mov    rcx,rdi
   14001aa3c:	call   QWORD PTR [rax+0x40]
   14001aa3f:	cmp    BYTE PTR [rsp+0x40],0x0
   14001aa44:	je     0x14001aa4f
   14001aa46:	mov    rax,QWORD PTR [rbx]
   14001aa49:	mov    QWORD PTR [rbx+0x8],rax
   14001aa4d:	jmp    0x14001aabd
   14001aa4f:	add    rsi,rax
   14001aa52:	test   rax,rax
   14001aa55:	jne    0x14001aa04
   14001aa57:	mov    rdx,rsi
   14001aa5a:	mov    rcx,rbx
   14001aa5d:	call   0x14001abdc
   14001aa62:	jmp    0x14001aa80
   14001aa64:	jmp    0x14001aabd
   14001aa66:	mov    rax,QWORD PTR [rdi]
   14001aa69:	mov    rcx,rdi
   14001aa6c:	call   QWORD PTR [rax+0x38]
   14001aa6f:	mov    rsi,rax
   14001aa72:	mov    rax,QWORD PTR [rdi]
   14001aa75:	mov    rcx,rdi
   14001aa78:	call   QWORD PTR [rax+0x20]
   14001aa7b:	sub    rsi,rax
   14001aa7e:	jne    0x14001aa84
   14001aa80:	mov    al,0x1
   14001aa82:	jmp    0x14001aabf
   14001aa84:	mov    rdx,rsi
   14001aa87:	mov    rcx,rbx
   14001aa8a:	call   0x14001abdc
   14001aa8f:	nop
   14001aa90:	mov    BYTE PTR [rsp+0x48],0x0
   14001aa95:	mov    rax,QWORD PTR [rdi]
   14001aa98:	lea    r9,[rsp+0x48]
   14001aa9d:	mov    r8,rsi
   14001aaa0:	mov    rdx,QWORD PTR [rbx]
   14001aaa3:	mov    rcx,rdi
   14001aaa6:	call   QWORD PTR [rax+0x40]
   14001aaa9:	mov    rdx,rax
   14001aaac:	mov    rcx,rbx
   14001aaaf:	call   0x14001abdc
   14001aab4:	cmp    BYTE PTR [rsp+0x48],0x0
   14001aab9:	je     0x14001aa80
   14001aabb:	jmp    0x14001aa46
   14001aabd:	xor    al,al
   14001aabf:	mov    rbx,QWORD PTR [rsp+0x50]
   14001aac4:	mov    rsi,QWORD PTR [rsp+0x58]
   14001aac9:	add    rsp,0x30
   14001aacd:	pop    rdi
   14001aace:	ret    
   14001aacf:	int3   
   14001aad0:	xor    al,al
   14001aad2:	ret    
   14001aad3:	int3   
   14001aad4:	mov    rax,QWORD PTR [rcx]
   14001aad7:	rex.W jmp QWORD PTR [rax+0x48]
   14001aadb:	int3   
   14001aadc:	mov    QWORD PTR [rsp+0x10],rdx
   14001aae1:	push   rsi
   14001aae2:	push   rdi
   14001aae3:	push   r14
   14001aae5:	sub    rsp,0x30
   14001aae9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001aaf2:	mov    QWORD PTR [rsp+0x60],rbx
   14001aaf7:	mov    r14,rdx
   14001aafa:	mov    rbx,rcx
   14001aafd:	mov    r8b,0x1
   14001ab00:	mov    edx,0x1
   14001ab05:	mov    rcx,r14
   14001ab08:	call   0x140004798
   14001ab0d:	mov    rdi,rax
   14001ab10:	mov    QWORD PTR [rsp+0x50],rax
   14001ab15:	mov    r8,QWORD PTR [rbx+0x8]
   14001ab19:	sub    r8,QWORD PTR [rbx]
   14001ab1c:	mov    rdx,QWORD PTR [rbx]
   14001ab1f:	mov    rcx,rax
   14001ab22:	call   0x140028fd0
   14001ab27:	nop
   14001ab28:	mov    rcx,QWORD PTR [rbx]
   14001ab2b:	mov    rsi,QWORD PTR [rbx+0x8]
   14001ab2f:	sub    rsi,rcx
   14001ab32:	test   rcx,rcx
   14001ab35:	je     0x14001ab49
   14001ab37:	mov    rdx,QWORD PTR [rbx+0x10]
   14001ab3b:	sub    rdx,rcx
   14001ab3e:	mov    r8d,0x1
   14001ab44:	call   0x140004804
   14001ab49:	lea    rax,[rdi+r14*1]
   14001ab4d:	mov    QWORD PTR [rbx+0x10],rax
   14001ab51:	lea    rax,[rsi+rdi*1]
   14001ab55:	mov    QWORD PTR [rbx+0x8],rax
   14001ab59:	mov    QWORD PTR [rbx],rdi
   14001ab5c:	mov    rbx,QWORD PTR [rsp+0x60]
   14001ab61:	add    rsp,0x30
   14001ab65:	pop    r14
   14001ab67:	pop    rdi
   14001ab68:	pop    rsi
   14001ab69:	ret    
   14001ab6a:	int3   
   14001ab6b:	int3   
   14001ab6c:	sub    rsp,0x28
   14001ab70:	mov    r10,QWORD PTR [rcx+0x10]
   14001ab74:	mov    r8,rdx
   14001ab77:	mov    rdx,QWORD PTR [rcx+0x8]
   14001ab7b:	mov    rax,r10
   14001ab7e:	sub    rax,rdx
   14001ab81:	mov    r9,rcx
   14001ab84:	cmp    rax,r8
   14001ab87:	jae    0x14001abc8
   14001ab89:	mov    rax,QWORD PTR [rcx]
   14001ab8c:	sub    rax,rdx
   14001ab8f:	dec    rax
   14001ab92:	cmp    rax,r8
   14001ab95:	jb     0x14001abcd
   14001ab97:	sub    r10,QWORD PTR [rcx]
   14001ab9a:	sub    rdx,QWORD PTR [rcx]
   14001ab9d:	mov    rax,r10
   14001aba0:	add    rdx,r8
   14001aba3:	shr    rax,1
   14001aba6:	xor    r8d,r8d
   14001aba9:	mov    rcx,rax
   14001abac:	add    rax,r10
   14001abaf:	not    rcx
   14001abb2:	cmp    rcx,r10
   14001abb5:	mov    rcx,r9
   14001abb8:	cmovae r8,rax
   14001abbc:	cmp    r8,rdx
   14001abbf:	cmovae rdx,r8
   14001abc3:	call   0x14001aadc
   14001abc8:	add    rsp,0x28
   14001abcc:	ret    
   14001abcd:	lea    rcx,[rip+0x48254]        # 0x140062e28
   14001abd4:	call   0x140027a4c
   14001abd9:	int3   
   14001abda:	int3   
   14001abdb:	int3   
   14001abdc:	mov    QWORD PTR [rsp+0x8],rcx
   14001abe1:	push   rdi
   14001abe2:	sub    rsp,0x30
   14001abe6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001abef:	mov    QWORD PTR [rsp+0x48],rbx
   14001abf4:	mov    rdi,rdx
   14001abf7:	mov    rbx,rcx
   14001abfa:	mov    rcx,QWORD PTR [rcx]
   14001abfd:	mov    rax,QWORD PTR [rbx+0x8]
   14001ac01:	sub    rax,rcx
   14001ac04:	cmp    rdx,rax
   14001ac07:	jae    0x14001ac13
   14001ac09:	lea    rax,[rcx+rdx*1]
   14001ac0d:	mov    QWORD PTR [rbx+0x8],rax
   14001ac11:	jmp    0x14001ac4a
   14001ac13:	cmp    rax,rdi
   14001ac16:	jae    0x14001ac4a
   14001ac18:	sub    rdx,rax
   14001ac1b:	mov    rcx,rbx
   14001ac1e:	call   0x14001ab6c
   14001ac23:	nop
   14001ac24:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ac28:	mov    rax,rcx
   14001ac2b:	sub    rax,QWORD PTR [rbx]
   14001ac2e:	mov    r8,rdi
   14001ac31:	sub    r8,rax
   14001ac34:	xor    edx,edx
   14001ac36:	call   0x14002a910
   14001ac3b:	nop
   14001ac3c:	mov    rax,QWORD PTR [rbx]
   14001ac3f:	sub    rax,QWORD PTR [rbx+0x8]
   14001ac43:	add    rax,rdi
   14001ac46:	add    QWORD PTR [rbx+0x8],rax
   14001ac4a:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ac4f:	add    rsp,0x30
   14001ac53:	pop    rdi
   14001ac54:	ret    
   14001ac55:	int3   
   14001ac56:	int3   
   14001ac57:	int3   
   14001ac58:	mov    rax,rsp
   14001ac5b:	mov    QWORD PTR [rax+0x8],rcx
   14001ac5f:	push   rdi
   14001ac60:	sub    rsp,0x30
   14001ac64:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001ac6c:	mov    QWORD PTR [rax+0x10],rbx
   14001ac70:	mov    QWORD PTR [rax+0x18],rsi
   14001ac74:	mov    rdi,r8
   14001ac77:	mov    rbx,rcx
   14001ac7a:	xor    esi,esi
   14001ac7c:	mov    QWORD PTR [rcx+0x18],0x7
   14001ac84:	mov    QWORD PTR [rcx+0x10],rsi
   14001ac88:	cmp    QWORD PTR [rcx+0x18],0x8
   14001ac8d:	jb     0x14001ac94
   14001ac8f:	mov    rax,QWORD PTR [rcx]
   14001ac92:	jmp    0x14001ac97
   14001ac94:	mov    rax,rbx
   14001ac97:	mov    WORD PTR [rax],si
   14001ac9a:	call   0x14000cfb4
   14001ac9f:	nop
   14001aca0:	lea    rcx,[rbx+0x20]
   14001aca4:	mov    QWORD PTR [rcx+0x18],0x7
   14001acac:	mov    QWORD PTR [rcx+0x10],rsi
   14001acb0:	cmp    QWORD PTR [rcx+0x18],0x8
   14001acb5:	jb     0x14001acbc
   14001acb7:	mov    rax,QWORD PTR [rcx]
   14001acba:	jmp    0x14001acbf
   14001acbc:	mov    rax,rcx
   14001acbf:	mov    WORD PTR [rax],si
   14001acc2:	or     r9,0xffffffffffffffff
   14001acc6:	xor    r8d,r8d
   14001acc9:	mov    rdx,rdi
   14001accc:	call   0x14000b850
   14001acd1:	nop
   14001acd2:	mov    rax,rbx
   14001acd5:	mov    rbx,QWORD PTR [rsp+0x48]
   14001acda:	mov    rsi,QWORD PTR [rsp+0x50]
   14001acdf:	add    rsp,0x30
   14001ace3:	pop    rdi
   14001ace4:	ret    
   14001ace5:	int3   
   14001ace6:	int3   
   14001ace7:	int3   
   14001ace8:	cmp    QWORD PTR [rdx+0x18],0x8
   14001aced:	lea    r10,[rdx+0x10]
   14001acf1:	jb     0x14001acf6
   14001acf3:	mov    rdx,QWORD PTR [rdx]
   14001acf6:	cmp    QWORD PTR [rcx+0x18],0x8
   14001acfb:	lea    r9,[rcx+0x10]
   14001acff:	jb     0x14001ad04
   14001ad01:	mov    rcx,QWORD PTR [rcx]
   14001ad04:	mov    r9,QWORD PTR [r9]
   14001ad07:	mov    r8,QWORD PTR [r10]
   14001ad0a:	cmp    r9,r8
   14001ad0d:	cmovb  r8,r9
   14001ad11:	test   r8,r8
   14001ad14:	jmp    0x14001ad2a
   14001ad16:	movzx  eax,WORD PTR [rdx]
   14001ad19:	cmp    WORD PTR [rcx],ax
   14001ad1c:	jne    0x14001ad3c
   14001ad1e:	add    rcx,0x2
   14001ad22:	add    rdx,0x2
   14001ad26:	sub    r8,0x1
   14001ad2a:	jne    0x14001ad16
   14001ad2c:	xor    eax,eax
   14001ad2e:	test   eax,eax
   14001ad30:	jne    0x14001ad4f
   14001ad32:	cmp    r9,QWORD PTR [r10]
   14001ad35:	jae    0x14001ad45
   14001ad37:	or     eax,0xffffffff
   14001ad3a:	jmp    0x14001ad4d
   14001ad3c:	sbb    eax,eax
   14001ad3e:	and    eax,0xfffffffe
   14001ad41:	inc    eax
   14001ad43:	jmp    0x14001ad2e
   14001ad45:	xor    eax,eax
   14001ad47:	cmp    r9,QWORD PTR [r10]
   14001ad4a:	seta   al
   14001ad4d:	test   eax,eax
   14001ad4f:	sete   al
   14001ad52:	ret    
   14001ad53:	int3   
   14001ad54:	cmp    QWORD PTR [rdx+0x18],0x8
   14001ad59:	lea    r10,[rdx+0x10]
   14001ad5d:	jb     0x14001ad62
   14001ad5f:	mov    rdx,QWORD PTR [rdx]
   14001ad62:	cmp    QWORD PTR [rcx+0x18],0x8
   14001ad67:	lea    r9,[rcx+0x10]
   14001ad6b:	jb     0x14001ad70
   14001ad6d:	mov    rcx,QWORD PTR [rcx]
   14001ad70:	mov    r9,QWORD PTR [r9]
   14001ad73:	mov    r8,QWORD PTR [r10]
   14001ad76:	cmp    r9,r8
   14001ad79:	cmovb  r8,r9
   14001ad7d:	test   r8,r8
   14001ad80:	jmp    0x14001ad96
   14001ad82:	movzx  eax,WORD PTR [rdx]
   14001ad85:	cmp    WORD PTR [rcx],ax
   14001ad88:	jne    0x14001ada8
   14001ad8a:	add    rcx,0x2
   14001ad8e:	add    rdx,0x2
   14001ad92:	sub    r8,0x1
   14001ad96:	jne    0x14001ad82
   14001ad98:	xor    eax,eax
   14001ad9a:	test   eax,eax
   14001ad9c:	jne    0x14001adb9
   14001ad9e:	cmp    r9,QWORD PTR [r10]
   14001ada1:	jae    0x14001adb1
   14001ada3:	or     eax,0xffffffff
   14001ada6:	jmp    0x14001adb9
   14001ada8:	sbb    eax,eax
   14001adaa:	and    eax,0xfffffffe
   14001adad:	inc    eax
   14001adaf:	jmp    0x14001ad9a
   14001adb1:	xor    eax,eax
   14001adb3:	cmp    r9,QWORD PTR [r10]
   14001adb6:	seta   al
   14001adb9:	shr    eax,0x1f
   14001adbc:	ret    
   14001adbd:	int3   
   14001adbe:	int3   
   14001adbf:	int3   
   14001adc0:	mov    rax,rsp
   14001adc3:	push   r14
   14001adc5:	sub    rsp,0x30
   14001adc9:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001add1:	mov    QWORD PTR [rax+0x10],rbx
   14001add5:	mov    QWORD PTR [rax+0x18],rsi
   14001add9:	mov    QWORD PTR [rax+0x20],rdi
   14001addd:	mov    rsi,rdx
   14001ade0:	call   0x14001b6ec
   14001ade5:	mov    rdi,rax
   14001ade8:	mov    QWORD PTR [rsp+0x40],rax
   14001aded:	xor    r14d,r14d
   14001adf0:	mov    WORD PTR [rax+0x18],r14w
   14001adf5:	lea    rbx,[rax+0x20]
   14001adf9:	test   rbx,rbx
   14001adfc:	je     0x14001ae55
   14001adfe:	mov    QWORD PTR [rbx+0x18],0x7
   14001ae06:	mov    QWORD PTR [rbx+0x10],r14
   14001ae0a:	cmp    QWORD PTR [rbx+0x18],0x8
   14001ae0f:	jb     0x14001ae16
   14001ae11:	mov    rax,QWORD PTR [rbx]
   14001ae14:	jmp    0x14001ae19
   14001ae16:	mov    rax,rbx
   14001ae19:	mov    WORD PTR [rax],r14w
   14001ae1d:	mov    rdx,rsi
   14001ae20:	mov    rcx,rbx
   14001ae23:	call   0x14000cfb4
   14001ae28:	lea    rdx,[rsi+0x20]
   14001ae2c:	lea    rcx,[rbx+0x20]
   14001ae30:	mov    QWORD PTR [rcx+0x18],0x7
   14001ae38:	mov    QWORD PTR [rcx+0x10],r14
   14001ae3c:	cmp    QWORD PTR [rcx+0x18],0x8
   14001ae41:	jb     0x14001ae48
   14001ae43:	mov    rax,QWORD PTR [rcx]
   14001ae46:	jmp    0x14001ae4b
   14001ae48:	mov    rax,rcx
   14001ae4b:	mov    WORD PTR [rax],r14w
   14001ae4f:	call   0x14000cfb4
   14001ae54:	nop
   14001ae55:	mov    rax,rdi
   14001ae58:	mov    rbx,QWORD PTR [rsp+0x48]
   14001ae5d:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ae62:	mov    rdi,QWORD PTR [rsp+0x58]
   14001ae67:	add    rsp,0x30
   14001ae6b:	pop    r14
   14001ae6d:	ret    
   14001ae6e:	int3   
   14001ae6f:	int3   
   14001ae70:	mov    rax,rsp
   14001ae73:	mov    QWORD PTR [rax+0x8],rbx
   14001ae77:	mov    QWORD PTR [rax+0x10],rbp
   14001ae7b:	mov    QWORD PTR [rax+0x18],rsi
   14001ae7f:	mov    QWORD PTR [rax+0x20],rdi
   14001ae83:	push   r12
   14001ae85:	push   r14
   14001ae87:	push   r15
   14001ae89:	sub    rsp,0x20
   14001ae8d:	mov    rbp,QWORD PTR [rcx]
   14001ae90:	mov    r15,r8
   14001ae93:	mov    rsi,rdx
   14001ae96:	mov    rdi,rbp
   14001ae99:	lea    r12,[rbp+0x8]
   14001ae9d:	mov    rbx,QWORD PTR [r12]
   14001aea1:	jmp    0x14001aed7
   14001aea3:	mov    rdx,r15
   14001aea6:	lea    rcx,[rbx+0x20]
   14001aeaa:	call   0x14001ad54
   14001aeaf:	test   al,al
   14001aeb1:	je     0x14001aeb9
   14001aeb3:	mov    rbx,QWORD PTR [rbx+0x10]
   14001aeb7:	jmp    0x14001aed7
   14001aeb9:	cmp    BYTE PTR [rdi+0x19],0x0
   14001aebd:	je     0x14001aed1
   14001aebf:	lea    rdx,[rbx+0x20]
   14001aec3:	mov    rcx,r15
   14001aec6:	call   0x14001ad54
   14001aecb:	test   al,al
   14001aecd:	cmovne rdi,rbx
   14001aed1:	mov    rbp,rbx
   14001aed4:	mov    rbx,QWORD PTR [rbx]
   14001aed7:	cmp    BYTE PTR [rbx+0x19],0x0
   14001aedb:	je     0x14001aea3
   14001aedd:	cmp    BYTE PTR [rdi+0x19],0x0
   14001aee1:	mov    rax,rdi
   14001aee4:	cmovne rax,r12
   14001aee8:	mov    rbx,QWORD PTR [rax]
   14001aeeb:	jmp    0x14001af09
   14001aeed:	lea    rdx,[rbx+0x20]
   14001aef1:	mov    rcx,r15
   14001aef4:	call   0x14001ad54
   14001aef9:	test   al,al
   14001aefb:	je     0x14001af05
   14001aefd:	mov    rdi,rbx
   14001af00:	mov    rbx,QWORD PTR [rbx]
   14001af03:	jmp    0x14001af09
   14001af05:	mov    rbx,QWORD PTR [rbx+0x10]
   14001af09:	cmp    BYTE PTR [rbx+0x19],0x0
   14001af0d:	je     0x14001aeed
   14001af0f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001af14:	mov    rax,rsi
   14001af17:	mov    QWORD PTR [rsi],rbp
   14001af1a:	mov    rbp,QWORD PTR [rsp+0x48]
   14001af1f:	mov    QWORD PTR [rsi+0x8],rdi
   14001af23:	mov    rsi,QWORD PTR [rsp+0x50]
   14001af28:	mov    rdi,QWORD PTR [rsp+0x58]
   14001af2d:	add    rsp,0x20
   14001af31:	pop    r15
   14001af33:	pop    r14
   14001af35:	pop    r12
   14001af37:	ret    
   14001af38:	mov    QWORD PTR [rsp+0x8],rbx
   14001af3d:	push   rdi
   14001af3e:	sub    rsp,0x20
   14001af42:	mov    rax,QWORD PTR [rcx+0x8]
   14001af46:	mov    r10,rcx
   14001af49:	movabs rcx,0x2aaaaaaaaaaaaa9
   14001af53:	mov    r11b,r8b
   14001af56:	mov    rbx,rdx
   14001af59:	cmp    rax,rcx
   14001af5c:	jae    0x14001b19e
   14001af62:	mov    r8,QWORD PTR [rsp+0x58]
   14001af67:	inc    rax
   14001af6a:	mov    QWORD PTR [r10+0x8],rax
   14001af6e:	xor    edi,edi
   14001af70:	mov    QWORD PTR [r8+0x8],r9
   14001af74:	mov    rax,QWORD PTR [r10]
   14001af77:	cmp    r9,rax
   14001af7a:	jne    0x14001af8b
   14001af7c:	mov    QWORD PTR [rax+0x8],r8
   14001af80:	mov    rax,QWORD PTR [r10]
   14001af83:	mov    QWORD PTR [rax],r8
   14001af86:	mov    rax,QWORD PTR [r10]
   14001af89:	jmp    0x14001afad
   14001af8b:	test   r11b,r11b
   14001af8e:	je     0x14001afa0
   14001af90:	mov    QWORD PTR [r9],r8
   14001af93:	mov    rax,QWORD PTR [r10]
   14001af96:	cmp    r9,QWORD PTR [rax]
   14001af99:	jne    0x14001afb1
   14001af9b:	mov    QWORD PTR [rax],r8
   14001af9e:	jmp    0x14001afb1
   14001afa0:	mov    QWORD PTR [r9+0x10],r8
   14001afa4:	mov    rax,QWORD PTR [r10]
   14001afa7:	cmp    r9,QWORD PTR [rax+0x10]
   14001afab:	jne    0x14001afb1
   14001afad:	mov    QWORD PTR [rax+0x10],r8
   14001afb1:	mov    rax,QWORD PTR [r8+0x8]
   14001afb5:	mov    rdx,r8
   14001afb8:	jmp    0x14001b178
   14001afbd:	mov    rax,QWORD PTR [rdx+0x8]
   14001afc1:	mov    r9,QWORD PTR [rax+0x8]
   14001afc5:	mov    rcx,QWORD PTR [r9]
   14001afc8:	cmp    rax,rcx
   14001afcb:	jne    0x14001b097
   14001afd1:	mov    rcx,QWORD PTR [r9+0x10]
   14001afd5:	cmp    BYTE PTR [rcx+0x18],dil
   14001afd9:	je     0x14001b09d
   14001afdf:	cmp    rdx,QWORD PTR [rax+0x10]
   14001afe3:	jne    0x14001b030
   14001afe5:	mov    rcx,QWORD PTR [rax+0x10]
   14001afe9:	mov    rdx,rax
   14001afec:	mov    rax,QWORD PTR [rcx]
   14001afef:	mov    QWORD PTR [rdx+0x10],rax
   14001aff3:	mov    rax,QWORD PTR [rcx]
   14001aff6:	cmp    BYTE PTR [rax+0x19],dil
   14001affa:	jne    0x14001b000
   14001affc:	mov    QWORD PTR [rax+0x8],rdx
   14001b000:	mov    rax,QWORD PTR [rdx+0x8]
   14001b004:	mov    QWORD PTR [rcx+0x8],rax
   14001b008:	mov    rax,QWORD PTR [r10]
   14001b00b:	cmp    rdx,QWORD PTR [rax+0x8]
   14001b00f:	jne    0x14001b017
   14001b011:	mov    QWORD PTR [rax+0x8],rcx
   14001b015:	jmp    0x14001b029
   14001b017:	mov    rax,QWORD PTR [rdx+0x8]
   14001b01b:	cmp    rdx,QWORD PTR [rax]
   14001b01e:	jne    0x14001b025
   14001b020:	mov    QWORD PTR [rax],rcx
   14001b023:	jmp    0x14001b029
   14001b025:	mov    QWORD PTR [rax+0x10],rcx
   14001b029:	mov    QWORD PTR [rcx],rdx
   14001b02c:	mov    QWORD PTR [rdx+0x8],rcx
   14001b030:	mov    rax,QWORD PTR [rdx+0x8]
   14001b034:	mov    BYTE PTR [rax+0x18],0x1
   14001b038:	mov    rax,QWORD PTR [rdx+0x8]
   14001b03c:	mov    rcx,QWORD PTR [rax+0x8]
   14001b040:	mov    BYTE PTR [rcx+0x18],dil
   14001b044:	mov    rax,QWORD PTR [rdx+0x8]
   14001b048:	mov    rcx,QWORD PTR [rax+0x8]
   14001b04c:	mov    r9,QWORD PTR [rcx]
   14001b04f:	mov    rax,QWORD PTR [r9+0x10]
   14001b053:	mov    QWORD PTR [rcx],rax
   14001b056:	mov    rax,QWORD PTR [r9+0x10]
   14001b05a:	cmp    BYTE PTR [rax+0x19],dil
   14001b05e:	jne    0x14001b064
   14001b060:	mov    QWORD PTR [rax+0x8],rcx
   14001b064:	mov    rax,QWORD PTR [rcx+0x8]
   14001b068:	mov    QWORD PTR [r9+0x8],rax
   14001b06c:	mov    rax,QWORD PTR [r10]
   14001b06f:	cmp    rcx,QWORD PTR [rax+0x8]
   14001b073:	jne    0x14001b07b
   14001b075:	mov    QWORD PTR [rax+0x8],r9
   14001b079:	jmp    0x14001b08e
   14001b07b:	mov    rax,QWORD PTR [rcx+0x8]
   14001b07f:	cmp    rcx,QWORD PTR [rax+0x10]
   14001b083:	jne    0x14001b08b
   14001b085:	mov    QWORD PTR [rax+0x10],r9
   14001b089:	jmp    0x14001b08e
   14001b08b:	mov    QWORD PTR [rax],r9
   14001b08e:	mov    QWORD PTR [r9+0x10],rcx
   14001b092:	jmp    0x14001b170
   14001b097:	cmp    BYTE PTR [rcx+0x18],dil
   14001b09b:	jne    0x14001b0be
   14001b09d:	mov    BYTE PTR [rax+0x18],0x1
   14001b0a1:	mov    BYTE PTR [rcx+0x18],0x1
   14001b0a5:	mov    rax,QWORD PTR [rdx+0x8]
   14001b0a9:	mov    rcx,QWORD PTR [rax+0x8]
   14001b0ad:	mov    BYTE PTR [rcx+0x18],dil
   14001b0b1:	mov    rax,QWORD PTR [rdx+0x8]
   14001b0b5:	mov    rdx,QWORD PTR [rax+0x8]
   14001b0b9:	jmp    0x14001b174
   14001b0be:	cmp    rdx,QWORD PTR [rax]
   14001b0c1:	jne    0x14001b110
   14001b0c3:	mov    rcx,QWORD PTR [rax]
   14001b0c6:	mov    rdx,rax
   14001b0c9:	mov    rax,QWORD PTR [rcx+0x10]
   14001b0cd:	mov    QWORD PTR [rdx],rax
   14001b0d0:	mov    rax,QWORD PTR [rcx+0x10]
   14001b0d4:	cmp    BYTE PTR [rax+0x19],dil
   14001b0d8:	jne    0x14001b0de
   14001b0da:	mov    QWORD PTR [rax+0x8],rdx
   14001b0de:	mov    rax,QWORD PTR [rdx+0x8]
   14001b0e2:	mov    QWORD PTR [rcx+0x8],rax
   14001b0e6:	mov    rax,QWORD PTR [r10]
   14001b0e9:	cmp    rdx,QWORD PTR [rax+0x8]
   14001b0ed:	jne    0x14001b0f5
   14001b0ef:	mov    QWORD PTR [rax+0x8],rcx
   14001b0f3:	jmp    0x14001b108
   14001b0f5:	mov    rax,QWORD PTR [rdx+0x8]
   14001b0f9:	cmp    rdx,QWORD PTR [rax+0x10]
   14001b0fd:	jne    0x14001b105
   14001b0ff:	mov    QWORD PTR [rax+0x10],rcx
   14001b103:	jmp    0x14001b108
   14001b105:	mov    QWORD PTR [rax],rcx
   14001b108:	mov    QWORD PTR [rcx+0x10],rdx
   14001b10c:	mov    QWORD PTR [rdx+0x8],rcx
   14001b110:	mov    rax,QWORD PTR [rdx+0x8]
   14001b114:	mov    BYTE PTR [rax+0x18],0x1
   14001b118:	mov    rax,QWORD PTR [rdx+0x8]
   14001b11c:	mov    rcx,QWORD PTR [rax+0x8]
   14001b120:	mov    BYTE PTR [rcx+0x18],dil
   14001b124:	mov    rax,QWORD PTR [rdx+0x8]
   14001b128:	mov    rcx,QWORD PTR [rax+0x8]
   14001b12c:	mov    r9,QWORD PTR [rcx+0x10]
   14001b130:	mov    rax,QWORD PTR [r9]
   14001b133:	mov    QWORD PTR [rcx+0x10],rax
   14001b137:	mov    rax,QWORD PTR [r9]
   14001b13a:	cmp    BYTE PTR [rax+0x19],dil
   14001b13e:	jne    0x14001b144
   14001b140:	mov    QWORD PTR [rax+0x8],rcx
   14001b144:	mov    rax,QWORD PTR [rcx+0x8]
   14001b148:	mov    QWORD PTR [r9+0x8],rax
   14001b14c:	mov    rax,QWORD PTR [r10]
   14001b14f:	cmp    rcx,QWORD PTR [rax+0x8]
   14001b153:	jne    0x14001b15b
   14001b155:	mov    QWORD PTR [rax+0x8],r9
   14001b159:	jmp    0x14001b16d
   14001b15b:	mov    rax,QWORD PTR [rcx+0x8]
   14001b15f:	cmp    rcx,QWORD PTR [rax]
   14001b162:	jne    0x14001b169
   14001b164:	mov    QWORD PTR [rax],r9
   14001b167:	jmp    0x14001b16d
   14001b169:	mov    QWORD PTR [rax+0x10],r9
   14001b16d:	mov    QWORD PTR [r9],rcx
   14001b170:	mov    QWORD PTR [rcx+0x8],r9
   14001b174:	mov    rax,QWORD PTR [rdx+0x8]
   14001b178:	cmp    BYTE PTR [rax+0x18],dil
   14001b17c:	je     0x14001afbd
   14001b182:	mov    rax,QWORD PTR [r10]
   14001b185:	mov    QWORD PTR [rbx],r8
   14001b188:	mov    rcx,QWORD PTR [rax+0x8]
   14001b18c:	mov    rax,rbx
   14001b18f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b194:	mov    BYTE PTR [rcx+0x18],0x1
   14001b198:	add    rsp,0x20
   14001b19c:	pop    rdi
   14001b19d:	ret    
   14001b19e:	mov    rdi,QWORD PTR [rsp+0x58]
   14001b1a3:	xor    r8d,r8d
   14001b1a6:	mov    dl,0x1
   14001b1a8:	lea    rcx,[rdi+0x40]
   14001b1ac:	call   0x14000b6b0
   14001b1b1:	xor    r8d,r8d
   14001b1b4:	lea    rcx,[rdi+0x20]
   14001b1b8:	mov    dl,0x1
   14001b1ba:	call   0x14000b6b0
   14001b1bf:	mov    edx,0x1
   14001b1c4:	mov    rcx,rdi
   14001b1c7:	lea    r8d,[rdx+0x5f]
   14001b1cb:	call   0x140004804
   14001b1d0:	lea    rcx,[rip+0x31091]        # 0x14004c268
   14001b1d7:	call   0x140027a4c
   14001b1dc:	int3   
   14001b1dd:	int3   
   14001b1de:	int3   
   14001b1df:	int3   
   14001b1e0:	mov    rax,rsp
   14001b1e3:	push   r12
   14001b1e5:	push   r14
   14001b1e7:	push   r15
   14001b1e9:	sub    rsp,0x40
   14001b1ed:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001b1f5:	mov    QWORD PTR [rax+0x10],rbx
   14001b1f9:	mov    QWORD PTR [rax+0x18],rsi
   14001b1fd:	mov    QWORD PTR [rax+0x20],rdi
   14001b201:	mov    r14,r9
   14001b204:	mov    r12b,r8b
   14001b207:	mov    rdi,rdx
   14001b20a:	mov    r15,rcx
   14001b20d:	mov    rsi,QWORD PTR [rcx]
   14001b210:	mov    rbx,QWORD PTR [rsi+0x8]
   14001b214:	mov    r8b,0x1
   14001b217:	jmp    0x14001b252
   14001b219:	mov    rsi,rbx
   14001b21c:	test   r12b,r12b
   14001b21f:	je     0x14001b235
   14001b221:	lea    rcx,[rbx+0x20]
   14001b225:	mov    rdx,r14
   14001b228:	call   0x14001ad54
   14001b22d:	test   al,al
   14001b22f:	sete   r8b
   14001b233:	jmp    0x14001b244
   14001b235:	lea    rdx,[rbx+0x20]
   14001b239:	mov    rcx,r14
   14001b23c:	call   0x14001ad54
   14001b241:	mov    r8b,al
   14001b244:	test   r8b,r8b
   14001b247:	je     0x14001b24e
   14001b249:	mov    rbx,QWORD PTR [rbx]
   14001b24c:	jmp    0x14001b252
   14001b24e:	mov    rbx,QWORD PTR [rbx+0x10]
   14001b252:	cmp    BYTE PTR [rbx+0x19],0x0
   14001b256:	je     0x14001b219
   14001b258:	mov    rax,QWORD PTR [rsp+0x80]
   14001b260:	mov    QWORD PTR [rsp+0x28],rax
   14001b265:	mov    QWORD PTR [rsp+0x20],r14
   14001b26a:	mov    r9,rsi
   14001b26d:	lea    rdx,[rsp+0x60]
   14001b272:	mov    rcx,r15
   14001b275:	call   0x14001af38
   14001b27a:	mov    rax,QWORD PTR [rax]
   14001b27d:	mov    QWORD PTR [rdi],rax
   14001b280:	mov    BYTE PTR [rdi+0x8],0x1
   14001b284:	mov    rax,rdi
   14001b287:	mov    rbx,QWORD PTR [rsp+0x68]
   14001b28c:	mov    rsi,QWORD PTR [rsp+0x70]
   14001b291:	mov    rdi,QWORD PTR [rsp+0x78]
   14001b296:	add    rsp,0x40
   14001b29a:	pop    r15
   14001b29c:	pop    r14
   14001b29e:	pop    r12
   14001b2a0:	ret    
   14001b2a1:	int3   
   14001b2a2:	int3   
   14001b2a3:	int3   
   14001b2a4:	rex push rbx
   14001b2a6:	sub    rsp,0x30
   14001b2aa:	and    DWORD PTR [rsp+0x20],0x0
   14001b2af:	mov    rbx,rcx
   14001b2b2:	call   0x14001ac58
   14001b2b7:	mov    rax,rbx
   14001b2ba:	add    rsp,0x30
   14001b2be:	pop    rbx
   14001b2bf:	ret    
   14001b2c0:	rex push rbx
   14001b2c2:	sub    rsp,0x20
   14001b2c6:	mov    rbx,rcx
   14001b2c9:	xor    r8d,r8d
   14001b2cc:	add    rcx,0x20
   14001b2d0:	mov    dl,0x1
   14001b2d2:	call   0x14000b6b0
   14001b2d7:	xor    r8d,r8d
   14001b2da:	mov    dl,0x1
   14001b2dc:	mov    rcx,rbx
   14001b2df:	add    rsp,0x20
   14001b2e3:	pop    rbx
   14001b2e4:	jmp    0x14000b6b0
   14001b2e9:	int3   
   14001b2ea:	int3   
   14001b2eb:	int3   
   14001b2ec:	rex push rbx
   14001b2ee:	push   rsi
   14001b2ef:	push   rdi
   14001b2f0:	sub    rsp,0xc0
   14001b2f7:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001b300:	mov    rax,QWORD PTR [rip+0x55d49]        # 0x140071050
   14001b307:	xor    rax,rsp
   14001b30a:	mov    QWORD PTR [rsp+0xb0],rax
   14001b312:	mov    rdi,r8
   14001b315:	mov    rsi,rcx
   14001b318:	lea    rcx,[rsp+0x48]
   14001b31d:	call   0x140019278
   14001b322:	nop
   14001b323:	lea    r8,[rsp+0x48]
   14001b328:	lea    rdx,[rsp+0x30]
   14001b32d:	mov    rcx,rsi
   14001b330:	call   0x14001ae70
   14001b335:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b33a:	jmp    0x14001b389
   14001b33c:	lea    rcx,[rbx+0x40]
   14001b340:	mov    rdx,rdi
   14001b343:	call   0x14001ace8
   14001b348:	test   al,al
   14001b34a:	jne    0x14001b3ea
   14001b350:	cmp    BYTE PTR [rbx+0x19],al
   14001b353:	jne    0x14001b389
   14001b355:	mov    rax,QWORD PTR [rbx+0x10]
   14001b359:	cmp    BYTE PTR [rax+0x19],0x0
   14001b35d:	jne    0x14001b36d
   14001b35f:	mov    rbx,rax
   14001b362:	mov    rax,QWORD PTR [rax]
   14001b365:	cmp    BYTE PTR [rax+0x19],0x0
   14001b369:	je     0x14001b35f
   14001b36b:	jmp    0x14001b389
   14001b36d:	mov    rax,QWORD PTR [rbx+0x8]
   14001b371:	jmp    0x14001b380
   14001b373:	cmp    rbx,QWORD PTR [rax+0x10]
   14001b377:	jne    0x14001b386
   14001b379:	mov    rbx,rax
   14001b37c:	mov    rax,QWORD PTR [rax+0x8]
   14001b380:	cmp    BYTE PTR [rax+0x19],0x0
   14001b384:	je     0x14001b373
   14001b386:	mov    rbx,rax
   14001b389:	cmp    rbx,QWORD PTR [rsp+0x38]
   14001b38e:	jne    0x14001b33c
   14001b390:	mov    r8,rdi
   14001b393:	lea    rdx,[rsp+0x48]
   14001b398:	lea    rcx,[rsp+0x70]
   14001b39d:	call   0x14001b2a4
   14001b3a2:	nop
   14001b3a3:	mov    rdx,rax
   14001b3a6:	mov    rcx,rsi
   14001b3a9:	call   0x14001adc0
   14001b3ae:	lea    r9,[rax+0x20]
   14001b3b2:	mov    QWORD PTR [rsp+0x20],rax
   14001b3b7:	xor    r8d,r8d
   14001b3ba:	lea    rdx,[rsp+0x30]
   14001b3bf:	mov    rcx,rsi
   14001b3c2:	call   0x14001b1e0
   14001b3c7:	nop
   14001b3c8:	xor    r8d,r8d
   14001b3cb:	mov    dl,0x1
   14001b3cd:	lea    rcx,[rsp+0x90]
   14001b3d5:	call   0x14000b6b0
   14001b3da:	xor    r8d,r8d
   14001b3dd:	mov    dl,0x1
   14001b3df:	lea    rcx,[rsp+0x70]
   14001b3e4:	call   0x14000b6b0
   14001b3e9:	nop
   14001b3ea:	xor    r8d,r8d
   14001b3ed:	mov    dl,0x1
   14001b3ef:	lea    rcx,[rsp+0x48]
   14001b3f4:	call   0x14000b6b0
   14001b3f9:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001b401:	xor    rcx,rsp
   14001b404:	call   0x140025df0
   14001b409:	add    rsp,0xc0
   14001b410:	pop    rdi
   14001b411:	pop    rsi
   14001b412:	pop    rbx
   14001b413:	ret    
   14001b414:	mov    rax,QWORD PTR [rcx]
   14001b417:	mov    rcx,QWORD PTR [rax]
   14001b41a:	mov    rax,rdx
   14001b41d:	mov    QWORD PTR [rdx],rcx
   14001b420:	ret    
   14001b421:	int3   
   14001b422:	int3   
   14001b423:	int3   
   14001b424:	cmp    QWORD PTR [rcx+0x8],0x0
   14001b429:	sete   al
   14001b42c:	ret    
   14001b42d:	int3   
   14001b42e:	int3   
   14001b42f:	int3   
   14001b430:	mov    rax,QWORD PTR [rcx]
   14001b433:	mov    QWORD PTR [rdx],rax
   14001b436:	mov    rax,rdx
   14001b439:	ret    
   14001b43a:	int3   
   14001b43b:	int3   
   14001b43c:	mov    r11,rsp
   14001b43f:	push   rdi
   14001b440:	sub    rsp,0x70
   14001b444:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   14001b44c:	mov    QWORD PTR [r11+0x20],rbx
   14001b450:	mov    rax,QWORD PTR [rip+0x55bf9]        # 0x140071050
   14001b457:	xor    rax,rsp
   14001b45a:	mov    QWORD PTR [rsp+0x68],rax
   14001b45f:	mov    rdi,rdx
   14001b462:	mov    rbx,rcx
   14001b465:	mov    QWORD PTR [r11-0x38],rdx
   14001b469:	and    DWORD PTR [rsp+0x20],0x0
   14001b46e:	mov    rdx,r8
   14001b471:	lea    rcx,[r11-0x30]
   14001b475:	call   0x140019278
   14001b47a:	nop
   14001b47b:	and    QWORD PTR [rdi],0x0
   14001b47f:	and    QWORD PTR [rdi+0x8],0x0
   14001b484:	and    QWORD PTR [rdi+0x10],0x0
   14001b489:	mov    DWORD PTR [rsp+0x20],0x1
   14001b491:	lea    r8,[rsp+0x48]
   14001b496:	lea    rdx,[rsp+0x28]
   14001b49b:	mov    rcx,rbx
   14001b49e:	call   0x14001ae70
   14001b4a3:	mov    rbx,QWORD PTR [rsp+0x28]
   14001b4a8:	jmp    0x14001b4f0
   14001b4aa:	lea    rdx,[rbx+0x40]
   14001b4ae:	mov    rcx,rdi
   14001b4b1:	call   0x140019138
   14001b4b6:	cmp    BYTE PTR [rbx+0x19],0x0
   14001b4ba:	jne    0x14001b4f0
   14001b4bc:	mov    rax,QWORD PTR [rbx+0x10]
   14001b4c0:	cmp    BYTE PTR [rax+0x19],0x0
   14001b4c4:	jne    0x14001b4d4
   14001b4c6:	mov    rbx,rax
   14001b4c9:	mov    rax,QWORD PTR [rax]
   14001b4cc:	cmp    BYTE PTR [rax+0x19],0x0
   14001b4d0:	je     0x14001b4c6
   14001b4d2:	jmp    0x14001b4f0
   14001b4d4:	mov    rcx,QWORD PTR [rbx+0x8]
   14001b4d8:	jmp    0x14001b4e7
   14001b4da:	cmp    rbx,QWORD PTR [rcx+0x10]
   14001b4de:	jne    0x14001b4ed
   14001b4e0:	mov    rbx,rcx
   14001b4e3:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b4e7:	cmp    BYTE PTR [rcx+0x19],0x0
   14001b4eb:	je     0x14001b4da
   14001b4ed:	mov    rbx,rcx
   14001b4f0:	cmp    rbx,QWORD PTR [rsp+0x30]
   14001b4f5:	jne    0x14001b4aa
   14001b4f7:	xor    r8d,r8d
   14001b4fa:	mov    dl,0x1
   14001b4fc:	lea    rcx,[rsp+0x48]
   14001b501:	call   0x14000b6b0
   14001b506:	mov    rax,rdi
   14001b509:	mov    rcx,QWORD PTR [rsp+0x68]
   14001b50e:	xor    rcx,rsp
   14001b511:	call   0x140025df0
   14001b516:	mov    rbx,QWORD PTR [rsp+0x98]
   14001b51e:	add    rsp,0x70
   14001b522:	pop    rdi
   14001b523:	ret    
   14001b524:	int3   
   14001b525:	int3   
   14001b526:	int3   
   14001b527:	int3   
   14001b528:	mov    rax,rsp
   14001b52b:	push   rbp
   14001b52c:	push   rsi
   14001b52d:	push   rdi
   14001b52e:	mov    rbp,rsp
   14001b531:	sub    rsp,0x70
   14001b535:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14001b53d:	mov    QWORD PTR [rax+0x18],rbx
   14001b541:	mov    rax,QWORD PTR [rip+0x55b08]        # 0x140071050
   14001b548:	xor    rax,rsp
   14001b54b:	mov    QWORD PTR [rbp-0x8],rax
   14001b54f:	mov    rdi,rdx
   14001b552:	mov    rbx,rcx
   14001b555:	xor    esi,esi
   14001b557:	mov    DWORD PTR [rbp-0x4c],esi
   14001b55a:	mov    QWORD PTR [rbp-0x10],0x7
   14001b562:	mov    QWORD PTR [rbp-0x18],rsi
   14001b566:	mov    WORD PTR [rbp-0x28],si
   14001b56a:	lea    rcx,[rip+0x30cd7]        # 0x14004c248
   14001b571:	call   0x140031108
   14001b576:	mov    r8,rax
   14001b579:	lea    rdx,[rip+0x30cc8]        # 0x14004c248
   14001b580:	lea    rcx,[rbp-0x28]
   14001b584:	call   0x14000b730
   14001b589:	nop
   14001b58a:	lea    r8,[rbp-0x28]
   14001b58e:	lea    rdx,[rbp-0x48]
   14001b592:	mov    rcx,rbx
   14001b595:	call   0x14001b43c
   14001b59a:	nop
   14001b59b:	xor    r8d,r8d
   14001b59e:	mov    dl,0x1
   14001b5a0:	lea    rcx,[rbp-0x28]
   14001b5a4:	call   0x14000b6b0
   14001b5a9:	mov    rcx,QWORD PTR [rbp-0x48]
   14001b5ad:	cmp    rcx,QWORD PTR [rbp-0x40]
   14001b5b1:	sete   al
   14001b5b4:	test   al,al
   14001b5b6:	jne    0x14001b5ec
   14001b5b8:	mov    BYTE PTR [rbp-0x50],sil
   14001b5bc:	lea    r8d,[rsi+0xa]
   14001b5c0:	lea    rdx,[rbp-0x50]
   14001b5c4:	call   0x14001934c
   14001b5c9:	mov    rbx,rax
   14001b5cc:	cmp    BYTE PTR [rbp-0x50],sil
   14001b5d0:	je     0x14001b5ec
   14001b5d2:	lea    ecx,[rsi+0x8]
   14001b5d5:	call   0x140026118
   14001b5da:	test   rax,rax
   14001b5dd:	je     0x14001b5e4
   14001b5df:	mov    QWORD PTR [rax],rbx
   14001b5e2:	jmp    0x14001b5e7
   14001b5e4:	mov    rax,rsi
   14001b5e7:	mov    QWORD PTR [rdi],rax
   14001b5ea:	jmp    0x14001b5ef
   14001b5ec:	mov    QWORD PTR [rdi],rsi
   14001b5ef:	lea    rcx,[rbp-0x48]
   14001b5f3:	call   0x140012730
   14001b5f8:	mov    rax,rdi
   14001b5fb:	mov    rcx,QWORD PTR [rbp-0x8]
   14001b5ff:	xor    rcx,rsp
   14001b602:	call   0x140025df0
   14001b607:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001b60f:	add    rsp,0x70
   14001b613:	pop    rdi
   14001b614:	pop    rsi
   14001b615:	pop    rbp
   14001b616:	ret    
   14001b617:	int3   
   14001b618:	mov    r11,rsp
   14001b61b:	push   rdi
   14001b61c:	sub    rsp,0xc0
   14001b623:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001b62c:	mov    QWORD PTR [r11+0x20],rbx
   14001b630:	mov    rax,QWORD PTR [rip+0x55a19]        # 0x140071050
   14001b637:	xor    rax,rsp
   14001b63a:	mov    QWORD PTR [rsp+0xb0],rax
   14001b642:	mov    rbx,r8
   14001b645:	mov    rdi,rcx
   14001b648:	lea    rcx,[r11-0x80]
   14001b64c:	call   0x140019278
   14001b651:	nop
   14001b652:	lea    rdx,[rsp+0x48]
   14001b657:	mov    rcx,rdi
   14001b65a:	call   0x14001b748
   14001b65f:	mov    r8,rbx
   14001b662:	lea    rdx,[rsp+0x48]
   14001b667:	lea    rcx,[rsp+0x70]
   14001b66c:	call   0x14001b2a4
   14001b671:	nop
   14001b672:	mov    rdx,rax
   14001b675:	mov    rcx,rdi
   14001b678:	call   0x14001adc0
   14001b67d:	lea    r9,[rax+0x20]
   14001b681:	mov    QWORD PTR [rsp+0x20],rax
   14001b686:	xor    r8d,r8d
   14001b689:	lea    rdx,[rsp+0x38]
   14001b68e:	mov    rcx,rdi
   14001b691:	call   0x14001b1e0
   14001b696:	nop
   14001b697:	xor    r8d,r8d
   14001b69a:	mov    dl,0x1
   14001b69c:	lea    rcx,[rsp+0x90]
   14001b6a4:	call   0x14000b6b0
   14001b6a9:	xor    r8d,r8d
   14001b6ac:	mov    dl,0x1
   14001b6ae:	lea    rcx,[rsp+0x70]
   14001b6b3:	call   0x14000b6b0
   14001b6b8:	nop
   14001b6b9:	xor    r8d,r8d
   14001b6bc:	mov    dl,0x1
   14001b6be:	lea    rcx,[rsp+0x48]
   14001b6c3:	call   0x14000b6b0
   14001b6c8:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001b6d0:	xor    rcx,rsp
   14001b6d3:	call   0x140025df0
   14001b6d8:	mov    rbx,QWORD PTR [rsp+0xe8]
   14001b6e0:	add    rsp,0xc0
   14001b6e7:	pop    rdi
   14001b6e8:	ret    
   14001b6e9:	int3   
   14001b6ea:	int3   
   14001b6eb:	int3   
   14001b6ec:	rex push rbx
   14001b6ee:	sub    rsp,0x30
   14001b6f2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001b6fb:	mov    rbx,rcx
   14001b6fe:	mov    r8b,0x1
   14001b701:	mov    edx,0x60
   14001b706:	lea    ecx,[rdx-0x5f]
   14001b709:	call   0x140004798
   14001b70e:	mov    rdx,rax
   14001b711:	mov    QWORD PTR [rsp+0x40],rax
   14001b716:	test   rax,rax
   14001b719:	je     0x14001b721
   14001b71b:	mov    rcx,QWORD PTR [rbx]
   14001b71e:	mov    QWORD PTR [rax],rcx
   14001b721:	lea    rcx,[rax+0x8]
   14001b725:	test   rcx,rcx
   14001b728:	je     0x14001b730
   14001b72a:	mov    rax,QWORD PTR [rbx]
   14001b72d:	mov    QWORD PTR [rcx],rax
   14001b730:	lea    rcx,[rdx+0x10]
   14001b734:	test   rcx,rcx
   14001b737:	je     0x14001b73f
   14001b739:	mov    rax,QWORD PTR [rbx]
   14001b73c:	mov    QWORD PTR [rcx],rax
   14001b73f:	mov    rax,rdx
   14001b742:	add    rsp,0x30
   14001b746:	pop    rbx
   14001b747:	ret    
   14001b748:	mov    QWORD PTR [rsp+0x10],rbx
   14001b74d:	push   rdi
   14001b74e:	sub    rsp,0x30
   14001b752:	mov    r8,rdx
   14001b755:	mov    rdi,rcx
   14001b758:	lea    rdx,[rsp+0x20]
   14001b75d:	call   0x14001ae70
   14001b762:	mov    r8,QWORD PTR [rsp+0x20]
   14001b767:	xor    edx,edx
   14001b769:	mov    r9,QWORD PTR [rsp+0x28]
   14001b76e:	mov    rax,r8
   14001b771:	mov    ebx,edx
   14001b773:	cmp    r8,r9
   14001b776:	je     0x14001b7b6
   14001b778:	inc    rbx
   14001b77b:	cmp    BYTE PTR [rax+0x19],dl
   14001b77e:	jne    0x14001b7b1
   14001b780:	mov    rcx,QWORD PTR [rax+0x10]
   14001b784:	cmp    BYTE PTR [rcx+0x19],dl
   14001b787:	jne    0x14001b796
   14001b789:	mov    rax,rcx
   14001b78c:	mov    rcx,QWORD PTR [rcx]
   14001b78f:	cmp    BYTE PTR [rcx+0x19],dl
   14001b792:	je     0x14001b789
   14001b794:	jmp    0x14001b7b1
   14001b796:	mov    rcx,QWORD PTR [rax+0x8]
   14001b79a:	jmp    0x14001b7a9
   14001b79c:	cmp    rax,QWORD PTR [rcx+0x10]
   14001b7a0:	jne    0x14001b7ae
   14001b7a2:	mov    rax,rcx
   14001b7a5:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b7a9:	cmp    BYTE PTR [rcx+0x19],dl
   14001b7ac:	je     0x14001b79c
   14001b7ae:	mov    rax,rcx
   14001b7b1:	cmp    rax,r9
   14001b7b4:	jne    0x14001b778
   14001b7b6:	lea    rdx,[rsp+0x40]
   14001b7bb:	mov    rcx,rdi
   14001b7be:	call   0x14000c18c
   14001b7c3:	mov    rax,rbx
   14001b7c6:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b7cb:	add    rsp,0x30
   14001b7cf:	pop    rdi
   14001b7d0:	ret    
   14001b7d1:	int3   
   14001b7d2:	int3   
   14001b7d3:	int3   
   14001b7d4:	mov    rax,rsp
   14001b7d7:	mov    QWORD PTR [rax+0x18],r8
   14001b7db:	mov    QWORD PTR [rax+0x8],rcx
   14001b7df:	push   rdi
   14001b7e0:	sub    rsp,0x30
   14001b7e4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001b7ec:	mov    QWORD PTR [rax+0x10],rbx
   14001b7f0:	mov    rdi,rdx
   14001b7f3:	mov    rbx,rcx
   14001b7f6:	and    QWORD PTR [rcx],0x0
   14001b7fa:	and    QWORD PTR [rcx+0x8],0x0
   14001b7ff:	call   0x14001ddb0
   14001b804:	mov    QWORD PTR [rbx],rax
   14001b807:	mov    r8b,BYTE PTR [rsp+0x40]
   14001b80c:	mov    rdx,rdi
   14001b80f:	mov    rcx,rbx
   14001b812:	call   0x14001b964
   14001b817:	nop
   14001b818:	mov    rax,rbx
   14001b81b:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b820:	add    rsp,0x30
   14001b824:	pop    rdi
   14001b825:	ret    
   14001b826:	int3   
   14001b827:	int3   
   14001b828:	mov    rax,rsp
   14001b82b:	mov    QWORD PTR [rax+0x8],rcx
   14001b82f:	push   rsi
   14001b830:	push   rdi
   14001b831:	push   r14
   14001b833:	sub    rsp,0x30
   14001b837:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14001b83f:	mov    QWORD PTR [rax+0x10],rbx
   14001b843:	mov    QWORD PTR [rax+0x18],rbp
   14001b847:	mov    r14,r8
   14001b84a:	mov    rsi,rdx
   14001b84d:	mov    rbx,rcx
   14001b850:	xor    edi,edi
   14001b852:	mov    DWORD PTR [rax-0x28],edi
   14001b855:	mov    QWORD PTR [rcx+0x18],0x7
   14001b85d:	mov    QWORD PTR [rcx+0x10],rdi
   14001b861:	cmp    QWORD PTR [rcx+0x18],0x8
   14001b866:	jb     0x14001b86d
   14001b868:	mov    rax,QWORD PTR [rcx]
   14001b86b:	jmp    0x14001b870
   14001b86d:	mov    rax,rbx
   14001b870:	mov    WORD PTR [rax],di
   14001b873:	mov    DWORD PTR [rsp+0x20],0x1
   14001b87b:	cmp    WORD PTR [rdx],di
   14001b87e:	jne    0x14001b885
   14001b880:	mov    rax,rdi
   14001b883:	jmp    0x14001b88d
   14001b885:	mov    rcx,rsi
   14001b888:	call   0x140031108
   14001b88d:	mov    rdx,QWORD PTR [r14+0x10]
   14001b891:	add    rdx,rax
   14001b894:	mov    rbp,QWORD PTR [rbx+0x10]
   14001b898:	cmp    rbp,rdx
   14001b89b:	ja     0x14001b8c9
   14001b89d:	cmp    QWORD PTR [rbx+0x18],rdx
   14001b8a1:	je     0x14001b8c9
   14001b8a3:	mov    r8b,0x1
   14001b8a6:	mov    rcx,rbx
   14001b8a9:	call   0x14000c264
   14001b8ae:	test   al,al
   14001b8b0:	je     0x14001b8c9
   14001b8b2:	mov    QWORD PTR [rbx+0x10],rbp
   14001b8b6:	cmp    QWORD PTR [rbx+0x18],0x8
   14001b8bb:	jb     0x14001b8c2
   14001b8bd:	mov    rax,QWORD PTR [rbx]
   14001b8c0:	jmp    0x14001b8c5
   14001b8c2:	mov    rax,rbx
   14001b8c5:	mov    WORD PTR [rax+rbp*2],di
   14001b8c9:	cmp    WORD PTR [rsi],di
   14001b8cc:	je     0x14001b8d9
   14001b8ce:	mov    rcx,rsi
   14001b8d1:	call   0x140031108
   14001b8d6:	mov    rdi,rax
   14001b8d9:	mov    r8,rdi
   14001b8dc:	mov    rdx,rsi
   14001b8df:	mov    rcx,rbx
   14001b8e2:	call   0x14000f260
   14001b8e7:	or     r9,0xffffffffffffffff
   14001b8eb:	xor    r8d,r8d
   14001b8ee:	mov    rdx,r14
   14001b8f1:	mov    rcx,rbx
   14001b8f4:	call   0x14000f3bc
   14001b8f9:	mov    rax,rbx
   14001b8fc:	mov    rbx,QWORD PTR [rsp+0x58]
   14001b901:	mov    rbp,QWORD PTR [rsp+0x60]
   14001b906:	add    rsp,0x30
   14001b90a:	pop    r14
   14001b90c:	pop    rdi
   14001b90d:	pop    rsi
   14001b90e:	ret    
   14001b90f:	int3   
   14001b910:	rex push rdi
   14001b912:	sub    rsp,0x30
   14001b916:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001b91f:	mov    QWORD PTR [rsp+0x58],rbx
   14001b924:	mov    rdi,rdx
   14001b927:	call   0x14001b6ec
   14001b92c:	mov    rbx,rax
   14001b92f:	mov    QWORD PTR [rsp+0x40],rax
   14001b934:	and    WORD PTR [rax+0x18],0x0
   14001b939:	lea    rcx,[rax+0x20]
   14001b93d:	mov    QWORD PTR [rsp+0x48],rcx
   14001b942:	mov    QWORD PTR [rsp+0x50],rcx
   14001b947:	test   rcx,rcx
   14001b94a:	je     0x14001b955
   14001b94c:	mov    rdx,rdi
   14001b94f:	call   0x14001bc98
   14001b954:	nop
   14001b955:	mov    rax,rbx
   14001b958:	mov    rbx,QWORD PTR [rsp+0x58]
   14001b95d:	add    rsp,0x30
   14001b961:	pop    rdi
   14001b962:	ret    
   14001b963:	int3   
   14001b964:	mov    QWORD PTR [rsp+0x8],rbx
   14001b969:	mov    QWORD PTR [rsp+0x10],rsi
   14001b96e:	push   rdi
   14001b96f:	sub    rsp,0x20
   14001b973:	mov    rbx,QWORD PTR [rcx]
   14001b976:	mov    rdi,rdx
   14001b979:	mov    rdx,QWORD PTR [rdx]
   14001b97c:	mov    r9b,r8b
   14001b97f:	mov    r8,rbx
   14001b982:	mov    rsi,rcx
   14001b985:	mov    rdx,QWORD PTR [rdx+0x8]
   14001b989:	call   0x14001b9f8
   14001b98e:	mov    QWORD PTR [rbx+0x8],rax
   14001b992:	xor    r8d,r8d
   14001b995:	mov    rax,QWORD PTR [rdi+0x8]
   14001b999:	mov    QWORD PTR [rsi+0x8],rax
   14001b99d:	mov    rdx,QWORD PTR [rsi]
   14001b9a0:	mov    rcx,QWORD PTR [rdx+0x8]
   14001b9a4:	cmp    BYTE PTR [rcx+0x19],r8b
   14001b9a8:	jne    0x14001b9de
   14001b9aa:	mov    rax,QWORD PTR [rcx]
   14001b9ad:	jmp    0x14001b9b5
   14001b9af:	mov    rcx,rax
   14001b9b2:	mov    rax,QWORD PTR [rax]
   14001b9b5:	cmp    BYTE PTR [rax+0x19],r8b
   14001b9b9:	je     0x14001b9af
   14001b9bb:	mov    QWORD PTR [rdx],rcx
   14001b9be:	mov    rdx,QWORD PTR [rsi]
   14001b9c1:	mov    rax,QWORD PTR [rdx+0x8]
   14001b9c5:	mov    rcx,QWORD PTR [rax+0x10]
   14001b9c9:	jmp    0x14001b9d2
   14001b9cb:	mov    rax,rcx
   14001b9ce:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b9d2:	cmp    BYTE PTR [rcx+0x19],r8b
   14001b9d6:	je     0x14001b9cb
   14001b9d8:	mov    QWORD PTR [rdx+0x10],rax
   14001b9dc:	jmp    0x14001b9e8
   14001b9de:	mov    QWORD PTR [rdx],rdx
   14001b9e1:	mov    rax,QWORD PTR [rsi]
   14001b9e4:	mov    QWORD PTR [rax+0x10],rax
   14001b9e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b9ed:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b9f2:	add    rsp,0x20
   14001b9f6:	pop    rdi
   14001b9f7:	ret    
   14001b9f8:	mov    rax,rsp
   14001b9fb:	mov    BYTE PTR [rax+0x20],r9b
   14001b9ff:	mov    QWORD PTR [rax+0x18],r8
   14001ba03:	mov    QWORD PTR [rax+0x10],rdx
   14001ba07:	mov    QWORD PTR [rax+0x8],rcx
   14001ba0b:	push   rbx
   14001ba0c:	push   rsi
   14001ba0d:	push   rdi
   14001ba0e:	sub    rsp,0x30
   14001ba12:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14001ba1a:	mov    rsi,rcx
   14001ba1d:	mov    rdi,QWORD PTR [rcx]
   14001ba20:	cmp    BYTE PTR [rdx+0x19],0x0
   14001ba24:	jne    0x14001ba86
   14001ba26:	add    rdx,0x20
   14001ba2a:	call   0x14001b910
   14001ba2f:	mov    rbx,rax
   14001ba32:	mov    rax,QWORD PTR [rsp+0x60]
   14001ba37:	mov    QWORD PTR [rbx+0x8],rax
   14001ba3b:	mov    rcx,QWORD PTR [rsp+0x58]
   14001ba40:	mov    al,BYTE PTR [rcx+0x18]
   14001ba43:	mov    BYTE PTR [rbx+0x18],al
   14001ba46:	cmp    BYTE PTR [rdi+0x19],0x0
   14001ba4a:	cmovne rdi,rbx
   14001ba4e:	mov    QWORD PTR [rsp+0x20],rdi
   14001ba53:	mov    r9b,BYTE PTR [rsp+0x68]
   14001ba58:	mov    r8,rbx
   14001ba5b:	mov    rdx,QWORD PTR [rcx]
   14001ba5e:	mov    rcx,rsi
   14001ba61:	call   0x14001b9f8
   14001ba66:	mov    QWORD PTR [rbx],rax
   14001ba69:	mov    r9b,BYTE PTR [rsp+0x68]
   14001ba6e:	mov    r8,rbx
   14001ba71:	mov    rdx,QWORD PTR [rsp+0x58]
   14001ba76:	mov    rdx,QWORD PTR [rdx+0x10]
   14001ba7a:	mov    rcx,rsi
   14001ba7d:	call   0x14001b9f8
   14001ba82:	mov    QWORD PTR [rbx+0x10],rax
   14001ba86:	mov    rax,rdi
   14001ba89:	add    rsp,0x30
   14001ba8d:	pop    rdi
   14001ba8e:	pop    rsi
   14001ba8f:	pop    rbx
   14001ba90:	ret    
   14001ba91:	int3   
   14001ba92:	int3   
   14001ba93:	int3   
   14001ba94:	mov    rax,rsp
   14001ba97:	mov    QWORD PTR [rax+0x20],r9
   14001ba9b:	mov    QWORD PTR [rax+0x18],r8
   14001ba9f:	mov    QWORD PTR [rax+0x10],rdx
   14001baa3:	push   rsi
   14001baa4:	push   rdi
   14001baa5:	push   r12
   14001baa7:	push   r14
   14001baa9:	push   r15
   14001baab:	sub    rsp,0x40
   14001baaf:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001bab7:	mov    QWORD PTR [rax+0x8],rbx
   14001babb:	mov    r14,r9
   14001babe:	mov    rax,r8
   14001bac1:	mov    rsi,rcx
   14001bac4:	sub    r14,r8
   14001bac7:	je     0x14001bbf9
   14001bacd:	mov    r8,QWORD PTR [rcx+0x10]
   14001bad1:	mov    rcx,QWORD PTR [rcx+0x8]
   14001bad5:	mov    rdx,r8
   14001bad8:	sub    rdx,rcx
   14001badb:	cmp    rdx,r14
   14001bade:	jae    0x14001bbc9
   14001bae4:	sub    rcx,QWORD PTR [rsi]
   14001bae7:	mov    rax,rcx
   14001baea:	not    rax
   14001baed:	cmp    rax,r14
   14001baf0:	jae    0x14001baff
   14001baf2:	lea    rcx,[rip+0x4732f]        # 0x140062e28
   14001baf9:	call   0x140027a4c
   14001bafe:	int3   
   14001baff:	lea    r12,[rcx+r14*1]
   14001bb03:	sub    r8,QWORD PTR [rsi]
   14001bb06:	mov    rax,r8
   14001bb09:	shr    rax,1
   14001bb0c:	mov    rcx,rax
   14001bb0f:	not    rcx
   14001bb12:	add    rax,r8
   14001bb15:	xor    edx,edx
   14001bb17:	cmp    rcx,r8
   14001bb1a:	cmovae rdx,rax
   14001bb1e:	cmp    rdx,r12
   14001bb21:	cmovae r12,rdx
   14001bb25:	mov    QWORD PTR [rsp+0x20],r12
   14001bb2a:	mov    r8b,0x1
   14001bb2d:	mov    edx,0x1
   14001bb32:	mov    rcx,r12
   14001bb35:	call   0x140004798
   14001bb3a:	mov    r15,rax
   14001bb3d:	mov    QWORD PTR [rsp+0x28],rax
   14001bb42:	mov    rbx,QWORD PTR [rsp+0x78]
   14001bb47:	sub    rbx,QWORD PTR [rsi]
   14001bb4a:	mov    r8,rbx
   14001bb4d:	mov    rdx,QWORD PTR [rsi]
   14001bb50:	mov    rcx,rax
   14001bb53:	call   0x140028fd0
   14001bb58:	lea    rdi,[rbx+r15*1]
   14001bb5c:	mov    rbx,QWORD PTR [rsp+0x88]
   14001bb64:	mov    rdx,QWORD PTR [rsp+0x80]
   14001bb6c:	sub    rbx,rdx
   14001bb6f:	mov    r8,rbx
   14001bb72:	mov    rcx,rdi
   14001bb75:	call   0x140028fd0
   14001bb7a:	lea    rcx,[rbx+rdi*1]
   14001bb7e:	mov    r8,QWORD PTR [rsi+0x8]
   14001bb82:	mov    rdx,QWORD PTR [rsp+0x78]
   14001bb87:	sub    r8,rdx
   14001bb8a:	call   0x140028fd0
   14001bb8f:	nop
   14001bb90:	mov    rcx,QWORD PTR [rsi]
   14001bb93:	mov    rax,QWORD PTR [rsi+0x8]
   14001bb97:	sub    rax,rcx
   14001bb9a:	add    r14,rax
   14001bb9d:	test   rcx,rcx
   14001bba0:	je     0x14001bbb4
   14001bba2:	mov    rdx,QWORD PTR [rsi+0x10]
   14001bba6:	sub    rdx,rcx
   14001bba9:	mov    r8d,0x1
   14001bbaf:	call   0x140004804
   14001bbb4:	lea    rax,[r15+r12*1]
   14001bbb8:	mov    QWORD PTR [rsi+0x10],rax
   14001bbbc:	lea    rax,[r15+r14*1]
   14001bbc0:	mov    QWORD PTR [rsi+0x8],rax
   14001bbc4:	mov    QWORD PTR [rsi],r15
   14001bbc7:	jmp    0x14001bbf9
   14001bbc9:	mov    r8,r14
   14001bbcc:	mov    rdx,rax
   14001bbcf:	call   0x140028fd0
   14001bbd4:	mov    rdx,QWORD PTR [rsi+0x8]
   14001bbd8:	lea    r8,[rdx+r14*1]
   14001bbdc:	mov    rcx,QWORD PTR [rsp+0x78]
   14001bbe1:	cmp    rcx,rdx
   14001bbe4:	je     0x14001bbf5
   14001bbe6:	cmp    rdx,r8
   14001bbe9:	je     0x14001bbf5
   14001bbeb:	xor    eax,eax
   14001bbed:	mov    r9b,al
   14001bbf0:	call   0x14001bc0c
   14001bbf5:	add    QWORD PTR [rsi+0x8],r14
   14001bbf9:	mov    rbx,QWORD PTR [rsp+0x70]
   14001bbfe:	add    rsp,0x40
   14001bc02:	pop    r15
   14001bc04:	pop    r14
   14001bc06:	pop    r12
   14001bc08:	pop    rdi
   14001bc09:	pop    rsi
   14001bc0a:	ret    
   14001bc0b:	int3   
   14001bc0c:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc11:	mov    r9,rcx
   14001bc14:	mov    r11,r8
   14001bc17:	mov    rbx,rdx
   14001bc1a:	mov    rcx,rdx
   14001bc1d:	mov    r10,r9
   14001bc20:	cmp    r9,rdx
   14001bc23:	je     0x14001bc3f
   14001bc25:	dec    rcx
   14001bc28:	cmp    r10,rcx
   14001bc2b:	je     0x14001bc3f
   14001bc2d:	mov    dl,BYTE PTR [r10]
   14001bc30:	mov    al,BYTE PTR [rcx]
   14001bc32:	mov    BYTE PTR [r10],al
   14001bc35:	inc    r10
   14001bc38:	mov    BYTE PTR [rcx],dl
   14001bc3a:	cmp    r10,rcx
   14001bc3d:	jne    0x14001bc25
   14001bc3f:	mov    rdx,r11
   14001bc42:	mov    r8,rbx
   14001bc45:	cmp    rbx,r11
   14001bc48:	je     0x14001bc64
   14001bc4a:	dec    rdx
   14001bc4d:	cmp    r8,rdx
   14001bc50:	je     0x14001bc64
   14001bc52:	mov    cl,BYTE PTR [r8]
   14001bc55:	mov    al,BYTE PTR [rdx]
   14001bc57:	mov    BYTE PTR [r8],al
   14001bc5a:	inc    r8
   14001bc5d:	mov    BYTE PTR [rdx],cl
   14001bc5f:	cmp    r8,rdx
   14001bc62:	jne    0x14001bc4a
   14001bc64:	mov    rdx,r11
   14001bc67:	mov    r8,r9
   14001bc6a:	cmp    r9,r11
   14001bc6d:	je     0x14001bc89
   14001bc6f:	dec    rdx
   14001bc72:	cmp    r8,rdx
   14001bc75:	je     0x14001bc89
   14001bc77:	mov    cl,BYTE PTR [r8]
   14001bc7a:	mov    al,BYTE PTR [rdx]
   14001bc7c:	mov    BYTE PTR [r8],al
   14001bc7f:	inc    r8
   14001bc82:	mov    BYTE PTR [rdx],cl
   14001bc84:	cmp    r8,rdx
   14001bc87:	jne    0x14001bc6f
   14001bc89:	sub    r9,rbx
   14001bc8c:	mov    rbx,QWORD PTR [rsp+0x8]
   14001bc91:	lea    rax,[r11+r9*1]
   14001bc95:	ret    
   14001bc96:	int3   
   14001bc97:	int3   
   14001bc98:	mov    rax,rsp
   14001bc9b:	mov    QWORD PTR [rax+0x8],rcx
   14001bc9f:	push   rdi
   14001bca0:	sub    rsp,0x30
   14001bca4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001bcac:	mov    QWORD PTR [rax+0x10],rbx
   14001bcb0:	mov    QWORD PTR [rax+0x18],rsi
   14001bcb4:	mov    rdi,rdx
   14001bcb7:	mov    rbx,rcx
   14001bcba:	xor    esi,esi
   14001bcbc:	mov    QWORD PTR [rcx+0x18],0x7
   14001bcc4:	mov    QWORD PTR [rcx+0x10],rsi
   14001bcc8:	cmp    QWORD PTR [rcx+0x18],0x8
   14001bccd:	jb     0x14001bcd4
   14001bccf:	mov    rax,QWORD PTR [rcx]
   14001bcd2:	jmp    0x14001bcd7
   14001bcd4:	mov    rax,rbx
   14001bcd7:	mov    WORD PTR [rax],si
   14001bcda:	or     r9,0xffffffffffffffff
   14001bcde:	xor    r8d,r8d
   14001bce1:	call   0x14000b850
   14001bce6:	nop
   14001bce7:	lea    rdx,[rdi+0x20]
   14001bceb:	lea    rcx,[rbx+0x20]
   14001bcef:	mov    QWORD PTR [rcx+0x18],0x7
   14001bcf7:	mov    QWORD PTR [rcx+0x10],rsi
   14001bcfb:	cmp    QWORD PTR [rcx+0x18],0x8
   14001bd00:	jb     0x14001bd07
   14001bd02:	mov    rax,QWORD PTR [rcx]
   14001bd05:	jmp    0x14001bd0a
   14001bd07:	mov    rax,rcx
   14001bd0a:	mov    WORD PTR [rax],si
   14001bd0d:	or     r9,0xffffffffffffffff
   14001bd11:	xor    r8d,r8d
   14001bd14:	call   0x14000b850
   14001bd19:	nop
   14001bd1a:	mov    rax,rbx
   14001bd1d:	mov    rbx,QWORD PTR [rsp+0x48]
   14001bd22:	mov    rsi,QWORD PTR [rsp+0x50]
   14001bd27:	add    rsp,0x30
   14001bd2b:	pop    rdi
   14001bd2c:	ret    
   14001bd2d:	int3   
   14001bd2e:	int3   
   14001bd2f:	int3   
   14001bd30:	mov    rax,rsp
   14001bd33:	mov    QWORD PTR [rax+0x8],rcx
   14001bd37:	push   rdi
   14001bd38:	sub    rsp,0x30
   14001bd3c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001bd44:	mov    QWORD PTR [rax+0x18],rbx
   14001bd48:	mov    QWORD PTR [rax+0x20],rsi
   14001bd4c:	mov    rdi,rcx
   14001bd4f:	xor    esi,esi
   14001bd51:	mov    QWORD PTR [rcx+0x10],rsi
   14001bd55:	mov    QWORD PTR [rcx+0x18],rsi
   14001bd59:	lea    ecx,[rsi+0x7]
   14001bd5c:	mov    QWORD PTR [rdi+0x18],rcx
   14001bd60:	mov    QWORD PTR [rdi+0x10],rsi
   14001bd64:	cmp    QWORD PTR [rdi+0x18],0x8
   14001bd69:	jb     0x14001bd70
   14001bd6b:	mov    rax,QWORD PTR [rdi]
   14001bd6e:	jmp    0x14001bd73
   14001bd70:	mov    rax,rdi
   14001bd73:	mov    WORD PTR [rax],si
   14001bd76:	lea    rax,[rdi+0x20]
   14001bd7a:	mov    QWORD PTR [rax+0x18],rcx
   14001bd7e:	mov    QWORD PTR [rax+0x10],rsi
   14001bd82:	cmp    rcx,0x8
   14001bd86:	jb     0x14001bd8b
   14001bd88:	mov    rax,QWORD PTR [rax]
   14001bd8b:	mov    WORD PTR [rax],si
   14001bd8e:	mov    DWORD PTR [rdi+0x40],0x1
   14001bd95:	lea    rbx,[rdi+0x48]
   14001bd99:	mov    QWORD PTR [rsp+0x48],rbx
   14001bd9e:	mov    QWORD PTR [rbx],rsi
   14001bda1:	mov    QWORD PTR [rbx+0x8],rsi
   14001bda5:	mov    rcx,rbx
   14001bda8:	call   0x14001ddb0
   14001bdad:	mov    QWORD PTR [rbx],rax
   14001bdb0:	mov    QWORD PTR [rdi+0x58],rsi
   14001bdb4:	mov    QWORD PTR [rdi+0x60],rsi
   14001bdb8:	mov    QWORD PTR [rdi+0x68],rsi
   14001bdbc:	mov    QWORD PTR [rdi+0x70],rsi
   14001bdc0:	mov    QWORD PTR [rdi+0x78],rsi
   14001bdc4:	mov    rax,rdi
   14001bdc7:	mov    rbx,QWORD PTR [rsp+0x50]
   14001bdcc:	mov    rsi,QWORD PTR [rsp+0x58]
   14001bdd1:	add    rsp,0x30
   14001bdd5:	pop    rdi
   14001bdd6:	ret    
   14001bdd7:	int3   
   14001bdd8:	mov    rax,rsp
   14001bddb:	push   rbp
   14001bddc:	push   rsi
   14001bddd:	push   rdi
   14001bdde:	push   r12
   14001bde0:	push   r13
   14001bde2:	push   r14
   14001bde4:	push   r15
   14001bde6:	lea    rbp,[rax-0x228]
   14001bded:	sub    rsp,0x2f0
   14001bdf4:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14001bdfd:	mov    QWORD PTR [rax+0x20],rbx
   14001be01:	mov    rax,QWORD PTR [rip+0x55248]        # 0x140071050
   14001be08:	xor    rax,rsp
   14001be0b:	mov    QWORD PTR [rbp+0x1e0],rax
   14001be12:	mov    r12,r8
   14001be15:	mov    r15,rdx
   14001be18:	mov    r14,rcx
   14001be1b:	mov    QWORD PTR [rsp+0x58],rcx
   14001be20:	lea    rax,[rip+0x30c11]        # 0x14004ca38
   14001be27:	mov    QWORD PTR [rcx],rax
   14001be2a:	xor    edi,edi
   14001be2c:	mov    DWORD PTR [rcx+0x8],edi
   14001be2f:	lea    rbx,[rcx+0x10]
   14001be33:	mov    QWORD PTR [rsp+0x48],rbx
   14001be38:	mov    QWORD PTR [rbx],rdi
   14001be3b:	mov    QWORD PTR [rbx+0x8],rdi
   14001be3f:	mov    rcx,rbx
   14001be42:	call   0x14001ddb0
   14001be47:	mov    QWORD PTR [rbx],rax
   14001be4a:	mov    QWORD PTR [r14+0x20],rdi
   14001be4e:	mov    QWORD PTR [r14+0x28],rdi
   14001be52:	mov    QWORD PTR [r14+0x30],rdi
   14001be56:	mov    QWORD PTR [r14+0x38],rdi
   14001be5a:	mov    QWORD PTR [r14+0x40],rdi
   14001be5e:	lea    rcx,[r15+0x20]
   14001be62:	cmp    QWORD PTR [rcx+0x18],0x8
   14001be67:	jb     0x14001be6c
   14001be69:	mov    rcx,QWORD PTR [rcx]
   14001be6c:	mov    DWORD PTR [rsp+0x20],edi
   14001be70:	xor    r9d,r9d
   14001be73:	xor    r8d,r8d
   14001be76:	xor    edx,edx
   14001be78:	call   QWORD PTR [rip+0x2f5a2]        # 0x14004b420
   14001be7e:	mov    rbx,rax
   14001be81:	mov    rcx,QWORD PTR [r14+0x20]
   14001be85:	test   rcx,rcx
   14001be88:	je     0x14001be90
   14001be8a:	call   QWORD PTR [rip+0x2f588]        # 0x14004b418
   14001be90:	mov    QWORD PTR [r14+0x20],rbx
   14001be94:	mov    rcx,rbx
   14001be97:	test   rbx,rbx
   14001be9a:	jne    0x14001bf35
   14001bea0:	call   QWORD PTR [rip+0x2f23a]        # 0x14004b0e0
   14001bea6:	mov    ebx,eax
   14001bea8:	mov    edx,0x2
   14001bead:	lea    r8d,[rdx-0x1]
   14001beb1:	lea    rcx,[rsp+0x60]
   14001beb6:	call   0x14000be9c
   14001bebb:	nop
   14001bebc:	lea    rdx,[rip+0x30b85]        # 0x14004ca48
   14001bec3:	lea    rcx,[rsp+0x60]
   14001bec8:	call   0x140010488
   14001becd:	mov    edx,ebx
   14001becf:	lea    rcx,[rsp+0x60]
   14001bed4:	call   0x14000e4d0
   14001bed9:	lea    rdx,[rbp+0x48]
   14001bedd:	lea    rcx,[rsp+0x60]
   14001bee2:	call   0x14000a950
   14001bee7:	nop
   14001bee8:	movzx  r8d,bx
   14001beec:	or     r8d,0x80070000
   14001bef3:	test   ebx,ebx
   14001bef5:	cmovle r8d,ebx
   14001bef9:	mov    DWORD PTR [rsp+0x28],0x1
   14001bf01:	mov    QWORD PTR [rsp+0x20],0x13c
   14001bf0a:	lea    r9,[rip+0x307cf]        # 0x14004c6e0
   14001bf11:	lea    rdx,[rbp+0x48]
   14001bf15:	lea    rcx,[rbp+0xb0]
   14001bf1c:	call   0x14001c9c0
   14001bf21:	lea    rdx,[rip+0x53b88]        # 0x14006fab0
   14001bf28:	lea    rcx,[rbp+0xb0]
   14001bf2f:	call   0x14002ab88
   14001bf34:	nop
   14001bf35:	xor    r9d,r9d
   14001bf38:	mov    r8d,0x100ff
   14001bf3e:	lea    rdx,[rip+0x16cb]        # 0x14001d610
   14001bf45:	call   QWORD PTR [rip+0x2f4e5]        # 0x14004b430
   14001bf4b:	cmp    rax,0xffffffffffffffff
   14001bf4f:	jne    0x14001bfea
   14001bf55:	call   QWORD PTR [rip+0x2f185]        # 0x14004b0e0
   14001bf5b:	mov    ebx,eax
   14001bf5d:	mov    edx,0x2
   14001bf62:	lea    r8d,[rdx-0x1]
   14001bf66:	lea    rcx,[rsp+0x60]
   14001bf6b:	call   0x14000be9c
   14001bf70:	nop
   14001bf71:	lea    rdx,[rip+0x30b08]        # 0x14004ca80
   14001bf78:	lea    rcx,[rsp+0x60]
   14001bf7d:	call   0x140010488
   14001bf82:	mov    edx,ebx
   14001bf84:	lea    rcx,[rsp+0x60]
   14001bf89:	call   0x14000e4d0
   14001bf8e:	lea    rdx,[rbp+0x48]
   14001bf92:	lea    rcx,[rsp+0x60]
   14001bf97:	call   0x14000a950
   14001bf9c:	nop
   14001bf9d:	movzx  r8d,bx
   14001bfa1:	or     r8d,0x80070000
   14001bfa8:	test   ebx,ebx
   14001bfaa:	cmovle r8d,ebx
   14001bfae:	mov    DWORD PTR [rsp+0x28],0x1
   14001bfb6:	mov    QWORD PTR [rsp+0x20],0x151
   14001bfbf:	lea    r9,[rip+0x3071a]        # 0x14004c6e0
   14001bfc6:	lea    rdx,[rbp+0x48]
   14001bfca:	lea    rcx,[rbp+0xb0]
   14001bfd1:	call   0x14001c9c0
   14001bfd6:	lea    rdx,[rip+0x53ad3]        # 0x14006fab0
   14001bfdd:	lea    rcx,[rbp+0xb0]
   14001bfe4:	call   0x14002ab88
   14001bfe9:	nop
   14001bfea:	test   r12,r12
   14001bfed:	je     0x14001c022
   14001bfef:	xor    edx,edx
   14001bff1:	mov    rcx,r12
   14001bff4:	call   0x140025cc0
   14001bff9:	test   al,al
   14001bffb:	je     0x14001c022
   14001bffd:	mov    edx,0x1
   14001c002:	lea    rcx,[rbp+0xb0]
   14001c009:	call   0x140025cdc
   14001c00e:	lea    rdx,[rip+0x53b0b]        # 0x14006fb20
   14001c015:	lea    rcx,[rbp+0xb0]
   14001c01c:	call   0x14002ab88
   14001c021:	int3   
   14001c022:	mov    eax,0x7
   14001c027:	mov    QWORD PTR [rbp+0xa0],rax
   14001c02e:	mov    QWORD PTR [rbp+0x98],rdi
   14001c035:	mov    WORD PTR [rbp+0x88],di
   14001c03c:	mov    QWORD PTR [rbp+0x80],rax
   14001c043:	mov    QWORD PTR [rbp+0x78],rdi
   14001c047:	mov    WORD PTR [rbp+0x68],di
   14001c04b:	mov    WORD PTR [rsp+0x40],di
   14001c050:	mov    DWORD PTR [rsp+0x48],edi
   14001c054:	lea    rax,[rsp+0x48]
   14001c059:	mov    QWORD PTR [rsp+0x20],rax
   14001c05e:	lea    r9,[rsp+0x40]
   14001c063:	lea    r8,[rbp+0x68]
   14001c067:	lea    rdx,[rbp+0x88]
   14001c06e:	mov    rcx,r15
   14001c071:	call   0x14001e9e0
   14001c076:	test   r12,r12
   14001c079:	je     0x14001c0ae
   14001c07b:	xor    edx,edx
   14001c07d:	mov    rcx,r12
   14001c080:	call   0x140025cc0
   14001c085:	test   al,al
   14001c087:	je     0x14001c0ae
   14001c089:	mov    edx,0x1
   14001c08e:	lea    rcx,[rbp+0xb0]
   14001c095:	call   0x140025cdc
   14001c09a:	lea    rdx,[rip+0x53a7f]        # 0x14006fb20
   14001c0a1:	lea    rcx,[rbp+0xb0]
   14001c0a8:	call   0x14002ab88
   14001c0ad:	int3   
   14001c0ae:	lea    rdx,[rbp+0x88]
   14001c0b5:	cmp    QWORD PTR [rbp+0xa0],0x8
   14001c0bd:	cmovae rdx,QWORD PTR [rbp+0x88]
   14001c0c5:	xor    r9d,r9d
   14001c0c8:	movzx  r8d,WORD PTR [rsp+0x40]
   14001c0ce:	mov    rcx,QWORD PTR [r14+0x20]
   14001c0d2:	call   QWORD PTR [rip+0x2f338]        # 0x14004b410
   14001c0d8:	mov    rbx,rax
   14001c0db:	mov    rcx,QWORD PTR [r14+0x28]
   14001c0df:	test   rcx,rcx
   14001c0e2:	je     0x14001c0ea
   14001c0e4:	call   QWORD PTR [rip+0x2f32e]        # 0x14004b418
   14001c0ea:	mov    QWORD PTR [r14+0x28],rbx
   14001c0ee:	test   rbx,rbx
   14001c0f1:	jne    0x14001c18c
   14001c0f7:	call   QWORD PTR [rip+0x2efe3]        # 0x14004b0e0
   14001c0fd:	mov    ebx,eax
   14001c0ff:	mov    edx,0x2
   14001c104:	lea    r8d,[rdx-0x1]
   14001c108:	lea    rcx,[rsp+0x60]
   14001c10d:	call   0x14000be9c
   14001c112:	nop
   14001c113:	lea    rdx,[rip+0x309b6]        # 0x14004cad0
   14001c11a:	lea    rcx,[rsp+0x60]
   14001c11f:	call   0x140010488
   14001c124:	mov    edx,ebx
   14001c126:	lea    rcx,[rsp+0x60]
   14001c12b:	call   0x14000e4d0
   14001c130:	lea    rdx,[rbp+0x48]
   14001c134:	lea    rcx,[rsp+0x60]
   14001c139:	call   0x14000a950
   14001c13e:	nop
   14001c13f:	movzx  r8d,bx
   14001c143:	or     r8d,0x80070000
   14001c14a:	test   ebx,ebx
   14001c14c:	cmovle r8d,ebx
   14001c150:	mov    DWORD PTR [rsp+0x28],0x1
   14001c158:	mov    QWORD PTR [rsp+0x20],0x178
   14001c161:	lea    r9,[rip+0x30578]        # 0x14004c6e0
   14001c168:	lea    rdx,[rbp+0x48]
   14001c16c:	lea    rcx,[rbp+0xb0]
   14001c173:	call   0x14001c9c0
   14001c178:	lea    rdx,[rip+0x53931]        # 0x14006fab0
   14001c17f:	lea    rcx,[rbp+0xb0]
   14001c186:	call   0x14002ab88
   14001c18b:	nop
   14001c18c:	test   r12,r12
   14001c18f:	je     0x14001c1c4
   14001c191:	xor    edx,edx
   14001c193:	mov    rcx,r12
   14001c196:	call   0x140025cc0
   14001c19b:	test   al,al
   14001c19d:	je     0x14001c1c4
   14001c19f:	mov    edx,0x1
   14001c1a4:	lea    rcx,[rbp+0xb0]
   14001c1ab:	call   0x140025cdc
   14001c1b0:	lea    rdx,[rip+0x53969]        # 0x14006fb20
   14001c1b7:	lea    rcx,[rbp+0xb0]
   14001c1be:	call   0x14002ab88
   14001c1c3:	int3   
   14001c1c4:	lea    rsi,[rbp+0x68]
   14001c1c8:	cmp    QWORD PTR [rbp+0x80],0x8
   14001c1d0:	cmovae rsi,QWORD PTR [rbp+0x68]
   14001c1d5:	mov    rdi,QWORD PTR [r14+0x28]
   14001c1d9:	xor    ebx,ebx
   14001c1db:	mov    eax,0x800000
   14001c1e0:	lea    r13d,[rbx+0x2]
   14001c1e4:	cmp    DWORD PTR [rsp+0x48],r13d
   14001c1e9:	cmove  ebx,eax
   14001c1ec:	mov    ecx,DWORD PTR [r15+0x40]
   14001c1f0:	call   0x14001ced0
   14001c1f5:	mov    rdx,rax
   14001c1f8:	mov    DWORD PTR [rsp+0x30],ebx
   14001c1fc:	and    QWORD PTR [rsp+0x28],0x0
   14001c202:	and    QWORD PTR [rsp+0x20],0x0
   14001c208:	xor    r9d,r9d
   14001c20b:	mov    r8,rsi
   14001c20e:	mov    rcx,rdi
   14001c211:	call   QWORD PTR [rip+0x2f1d9]        # 0x14004b3f0
   14001c217:	mov    rbx,rax
   14001c21a:	mov    rcx,QWORD PTR [r14+0x30]
   14001c21e:	xor    edi,edi
   14001c220:	test   rcx,rcx
   14001c223:	je     0x14001c22b
   14001c225:	call   QWORD PTR [rip+0x2f1ed]        # 0x14004b418
   14001c22b:	mov    QWORD PTR [r14+0x30],rbx
   14001c22f:	mov    esi,0x4
   14001c234:	cmp    DWORD PTR [rsp+0x48],r13d
   14001c239:	jne    0x14001c30d
   14001c23f:	mov    DWORD PTR [rsp+0x48],0xa00
   14001c247:	call   0x1400258d4
   14001c24c:	mov    ecx,DWORD PTR [rsp+0x48]
   14001c250:	lea    edx,[rsi+0x7c]
   14001c253:	cmp    eax,0x7
   14001c256:	cmovl  ecx,edx
   14001c259:	mov    DWORD PTR [rsp+0x48],ecx
   14001c25d:	mov    r9d,esi
   14001c260:	lea    r8,[rsp+0x48]
   14001c265:	lea    edx,[rsi+0x50]
   14001c268:	mov    rcx,QWORD PTR [r14+0x20]
   14001c26c:	call   QWORD PTR [rip+0x2f18e]        # 0x14004b400
   14001c272:	test   eax,eax
   14001c274:	jne    0x14001c30d
   14001c27a:	call   QWORD PTR [rip+0x2ee60]        # 0x14004b0e0
   14001c280:	mov    ebx,eax
   14001c282:	lea    r8d,[rsi-0x3]
   14001c286:	mov    edx,r13d
   14001c289:	lea    rcx,[rsp+0x60]
   14001c28e:	call   0x14000be9c
   14001c293:	nop
   14001c294:	lea    rdx,[rip+0x304dd]        # 0x14004c778
   14001c29b:	lea    rcx,[rsp+0x60]
   14001c2a0:	call   0x140010488
   14001c2a5:	mov    edx,ebx
   14001c2a7:	lea    rcx,[rsp+0x60]
   14001c2ac:	call   0x14000e4d0
   14001c2b1:	lea    rdx,[rbp+0x48]
   14001c2b5:	lea    rcx,[rsp+0x60]
   14001c2ba:	call   0x14000a950
   14001c2bf:	nop
   14001c2c0:	movzx  r8d,bx
   14001c2c4:	or     r8d,0x80070000
   14001c2cb:	test   ebx,ebx
   14001c2cd:	cmovle r8d,ebx
   14001c2d1:	mov    DWORD PTR [rsp+0x28],0x1
   14001c2d9:	mov    QWORD PTR [rsp+0x20],0x1a0
   14001c2e2:	lea    r9,[rip+0x303f7]        # 0x14004c6e0
   14001c2e9:	lea    rdx,[rbp+0x48]
   14001c2ed:	lea    rcx,[rbp+0xb0]
   14001c2f4:	call   0x14001c9c0
   14001c2f9:	lea    rdx,[rip+0x537b0]        # 0x14006fab0
   14001c300:	lea    rcx,[rbp+0xb0]
   14001c307:	call   0x14002ab88
   14001c30c:	nop
   14001c30d:	mov    rcx,QWORD PTR [r14+0x30]
   14001c311:	test   rcx,rcx
   14001c314:	jne    0x14001c3af
   14001c31a:	call   QWORD PTR [rip+0x2edc0]        # 0x14004b0e0
   14001c320:	mov    ebx,eax
   14001c322:	mov    r8d,0x1
   14001c328:	mov    edx,r13d
   14001c32b:	lea    rcx,[rsp+0x60]
   14001c330:	call   0x14000be9c
   14001c335:	nop
   14001c336:	lea    rdx,[rip+0x307d3]        # 0x14004cb10
   14001c33d:	lea    rcx,[rsp+0x60]
   14001c342:	call   0x140010488
   14001c347:	mov    edx,ebx
   14001c349:	lea    rcx,[rsp+0x60]
   14001c34e:	call   0x14000e4d0
   14001c353:	lea    rdx,[rbp+0x48]
   14001c357:	lea    rcx,[rsp+0x60]
   14001c35c:	call   0x14000a950
   14001c361:	nop
   14001c362:	movzx  r8d,bx
   14001c366:	or     r8d,0x80070000
   14001c36d:	test   ebx,ebx
   14001c36f:	cmovle r8d,ebx
   14001c373:	mov    DWORD PTR [rsp+0x28],0x1
   14001c37b:	mov    QWORD PTR [rsp+0x20],0x1ab
   14001c384:	lea    r9,[rip+0x30355]        # 0x14004c6e0
   14001c38b:	lea    rdx,[rbp+0x48]
   14001c38f:	lea    rcx,[rbp+0xb0]
   14001c396:	call   0x14001c9c0
   14001c39b:	lea    rdx,[rip+0x5370e]        # 0x14006fab0
   14001c3a2:	lea    rcx,[rbp+0xb0]
   14001c3a9:	call   0x14002ab88
   14001c3ae:	nop
   14001c3af:	mov    r8d,DWORD PTR [r15+0x70]
   14001c3b3:	test   r8d,r8d
   14001c3b6:	je     0x14001c3c2
   14001c3b8:	mov    edx,0x3
   14001c3bd:	call   0x14001e804
   14001c3c2:	mov    r8d,DWORD PTR [r15+0x74]
   14001c3c6:	test   r8d,r8d
   14001c3c9:	je     0x14001c3d9
   14001c3cb:	mov    edx,0x5
   14001c3d0:	mov    rcx,QWORD PTR [r14+0x30]
   14001c3d4:	call   0x14001e804
   14001c3d9:	mov    r8d,DWORD PTR [r15+0x78]
   14001c3dd:	test   r8d,r8d
   14001c3e0:	je     0x14001c3f0
   14001c3e2:	mov    edx,0x6
   14001c3e7:	mov    rcx,QWORD PTR [r14+0x30]
   14001c3eb:	call   0x14001e804
   14001c3f0:	mov    r8d,DWORD PTR [r15+0x7c]
   14001c3f4:	test   r8d,r8d
   14001c3f7:	je     0x14001c407
   14001c3f9:	mov    edx,0x7
   14001c3fe:	mov    rcx,QWORD PTR [r14+0x30]
   14001c402:	call   0x14001e804
   14001c407:	lea    rdx,[r15+0x48]
   14001c40b:	mov    rcx,QWORD PTR [r14+0x30]
   14001c40f:	call   0x14001de04
   14001c414:	test   r12,r12
   14001c417:	je     0x14001c44c
   14001c419:	xor    edx,edx
   14001c41b:	mov    rcx,r12
   14001c41e:	call   0x140025cc0
   14001c423:	test   al,al
   14001c425:	je     0x14001c44c
   14001c427:	mov    edx,0x1
   14001c42c:	lea    rcx,[rbp+0xb0]
   14001c433:	call   0x140025cdc
   14001c438:	lea    rdx,[rip+0x536e1]        # 0x14006fb20
   14001c43f:	lea    rcx,[rbp+0xb0]
   14001c446:	call   0x14002ab88
   14001c44b:	int3   
   14001c44c:	mov    rax,QWORD PTR [r15+0x60]
   14001c450:	cmp    QWORD PTR [r15+0x58],rax
   14001c454:	jne    0x14001c45b
   14001c456:	mov    rdx,rdi
   14001c459:	jmp    0x14001c462
   14001c45b:	mov    rdx,rax
   14001c45e:	sub    rdx,QWORD PTR [r15+0x58]
   14001c462:	cmp    QWORD PTR [r15+0x58],rax
   14001c466:	jne    0x14001c46d
   14001c468:	mov    rcx,rdi
   14001c46b:	jmp    0x14001c474
   14001c46d:	mov    rcx,rax
   14001c470:	sub    rcx,QWORD PTR [r15+0x58]
   14001c474:	cmp    QWORD PTR [r15+0x58],rax
   14001c478:	mov    r9,rdi
   14001c47b:	je     0x14001c481
   14001c47d:	mov    r9,QWORD PTR [r15+0x58]
   14001c481:	mov    QWORD PTR [rsp+0x30],rdi
   14001c486:	mov    DWORD PTR [rsp+0x28],edx
   14001c48a:	mov    DWORD PTR [rsp+0x20],ecx
   14001c48e:	xor    r8d,r8d
   14001c491:	xor    edx,edx
   14001c493:	mov    rcx,QWORD PTR [r14+0x30]
   14001c497:	call   QWORD PTR [rip+0x2ef43]        # 0x14004b3e0
   14001c49d:	test   eax,eax
   14001c49f:	jne    0x14001c53a
   14001c4a5:	call   QWORD PTR [rip+0x2ec35]        # 0x14004b0e0
   14001c4ab:	mov    ebx,eax
   14001c4ad:	mov    r8d,0x1
   14001c4b3:	mov    edx,r13d
   14001c4b6:	lea    rcx,[rsp+0x60]
   14001c4bb:	call   0x14000be9c
   14001c4c0:	nop
   14001c4c1:	lea    rdx,[rip+0x30688]        # 0x14004cb50
   14001c4c8:	lea    rcx,[rsp+0x60]
   14001c4cd:	call   0x140010488
   14001c4d2:	mov    edx,ebx
   14001c4d4:	lea    rcx,[rsp+0x60]
   14001c4d9:	call   0x14000e4d0
   14001c4de:	lea    rdx,[rbp+0x48]
   14001c4e2:	lea    rcx,[rsp+0x60]
   14001c4e7:	call   0x14000a950
   14001c4ec:	nop
   14001c4ed:	movzx  r8d,bx
   14001c4f1:	or     r8d,0x80070000
   14001c4f8:	test   ebx,ebx
   14001c4fa:	cmovle r8d,ebx
   14001c4fe:	mov    DWORD PTR [rsp+0x28],0x1
   14001c506:	mov    QWORD PTR [rsp+0x20],0x1da
   14001c50f:	lea    r9,[rip+0x301ca]        # 0x14004c6e0
   14001c516:	lea    rdx,[rbp+0x48]
   14001c51a:	lea    rcx,[rbp+0xb0]
   14001c521:	call   0x14001c9c0
   14001c526:	lea    rdx,[rip+0x53583]        # 0x14006fab0
   14001c52d:	lea    rcx,[rbp+0xb0]
   14001c534:	call   0x14002ab88
   14001c539:	nop
   14001c53a:	test   r12,r12
   14001c53d:	je     0x14001c572
   14001c53f:	xor    edx,edx
   14001c541:	mov    rcx,r12
   14001c544:	call   0x140025cc0
   14001c549:	test   al,al
   14001c54b:	je     0x14001c572
   14001c54d:	mov    edx,0x1
   14001c552:	lea    rcx,[rbp+0xb0]
   14001c559:	call   0x140025cdc
   14001c55e:	lea    rdx,[rip+0x535bb]        # 0x14006fb20
   14001c565:	lea    rcx,[rbp+0xb0]
   14001c56c:	call   0x14002ab88
   14001c571:	int3   
   14001c572:	xor    edx,edx
   14001c574:	mov    rcx,QWORD PTR [r14+0x30]
   14001c578:	call   QWORD PTR [rip+0x2ee5a]        # 0x14004b3d8
   14001c57e:	test   eax,eax
   14001c580:	jne    0x14001c61b
   14001c586:	call   QWORD PTR [rip+0x2eb54]        # 0x14004b0e0
   14001c58c:	mov    ebx,eax
   14001c58e:	mov    r8d,0x1
   14001c594:	mov    edx,r13d
   14001c597:	lea    rcx,[rsp+0x60]
   14001c59c:	call   0x14000be9c
   14001c5a1:	nop
   14001c5a2:	lea    rdx,[rip+0x305e7]        # 0x14004cb90
   14001c5a9:	lea    rcx,[rsp+0x60]
   14001c5ae:	call   0x140010488
   14001c5b3:	mov    edx,ebx
   14001c5b5:	lea    rcx,[rsp+0x60]
   14001c5ba:	call   0x14000e4d0
   14001c5bf:	lea    rdx,[rbp+0x48]
   14001c5c3:	lea    rcx,[rsp+0x60]
   14001c5c8:	call   0x14000a950
   14001c5cd:	nop
   14001c5ce:	movzx  r8d,bx
   14001c5d2:	or     r8d,0x80070000
   14001c5d9:	test   ebx,ebx
   14001c5db:	cmovle r8d,ebx
   14001c5df:	mov    DWORD PTR [rsp+0x28],0x1
   14001c5e7:	mov    QWORD PTR [rsp+0x20],0x1ec
   14001c5f0:	lea    r9,[rip+0x300e9]        # 0x14004c6e0
   14001c5f7:	lea    rdx,[rbp+0x48]
   14001c5fb:	lea    rcx,[rbp+0xb0]
   14001c602:	call   0x14001c9c0
   14001c607:	lea    rdx,[rip+0x534a2]        # 0x14006fab0
   14001c60e:	lea    rcx,[rbp+0xb0]
   14001c615:	call   0x14002ab88
   14001c61a:	nop
   14001c61b:	mov    rdx,QWORD PTR [r14+0x30]
   14001c61f:	lea    rcx,[rbp+0x1c0]
   14001c626:	call   0x14001e1dc
   14001c62b:	nop
   14001c62c:	mov    rbx,QWORD PTR [r14+0x30]
   14001c630:	mov    r8d,0x1
   14001c636:	mov    edx,r13d
   14001c639:	lea    rcx,[rbp+0xb0]
   14001c640:	call   0x14000be9c
   14001c645:	nop
   14001c646:	lea    rdx,[rip+0x30203]        # 0x14004c850
   14001c64d:	lea    rcx,[rbp+0xb0]
   14001c654:	call   0x140010488
   14001c659:	mov    rax,QWORD PTR [rbp+0xb0]
   14001c660:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c664:	and    DWORD PTR [rbp+rcx*1+0xc8],0xfffff9ff
   14001c66f:	bts    DWORD PTR [rbp+rcx*1+0xc8],0xb
   14001c678:	mov    rdx,rbx
   14001c67b:	lea    rcx,[rbp+0xb0]
   14001c682:	call   0x14001cbf0
   14001c687:	lea    rdx,[rip+0x3054a]        # 0x14004cbd8
   14001c68e:	lea    rcx,[rbp+0xb0]
   14001c695:	call   0x140010488
   14001c69a:	lea    rdx,[rbp+0x1c0]
   14001c6a1:	lea    rcx,[rbp+0xb0]
   14001c6a8:	call   0x1400106b0
   14001c6ad:	lea    rdx,[rbp+0x48]
   14001c6b1:	lea    rcx,[rbp+0xb0]
   14001c6b8:	call   0x14000a950
   14001c6bd:	nop
   14001c6be:	lea    rdx,[rbp+0x48]
   14001c6c2:	mov    ecx,esi
   14001c6c4:	call   0x14001a654
   14001c6c9:	nop
   14001c6ca:	xor    r8d,r8d
   14001c6cd:	mov    dl,0x1
   14001c6cf:	lea    rcx,[rbp+0x48]
   14001c6d3:	call   0x14000b6b0
   14001c6d8:	nop
   14001c6d9:	lea    rcx,[rbp+0x138]
   14001c6e0:	call   0x14000a9dc
   14001c6e5:	nop
   14001c6e6:	lea    rax,[rip+0x2f22b]        # 0x14004b918
   14001c6ed:	mov    QWORD PTR [rbp+0x138],rax
   14001c6f4:	lea    rcx,[rbp+0x138]
   14001c6fb:	call   0x140027b0c
   14001c700:	nop
   14001c701:	mov    QWORD PTR [rbp+0x1b8],0x7
   14001c70c:	mov    QWORD PTR [rbp+0x1b0],rdi
   14001c713:	mov    WORD PTR [rbp+0x1a0],di
   14001c71a:	lea    r8,[r14+0x8]
   14001c71e:	lea    rdx,[r14+0x10]
   14001c722:	lea    rcx,[rbp+0x1c0]
   14001c729:	call   0x14001e434
   14001c72e:	lea    rdx,[rsp+0x48]
   14001c733:	lea    rcx,[r14+0x10]
   14001c737:	call   0x14001b528
   14001c73c:	mov    rcx,QWORD PTR [rsp+0x48]
   14001c741:	test   rcx,rcx
   14001c744:	je     0x14001c757
   14001c746:	mov    rax,QWORD PTR [rcx]
   14001c749:	mov    QWORD PTR [r14+0x40],rax
   14001c74d:	mov    edx,0x8
   14001c752:	call   0x140026804
   14001c757:	test   r12,r12
   14001c75a:	je     0x14001c78f
   14001c75c:	xor    edx,edx
   14001c75e:	mov    rcx,r12
   14001c761:	call   0x140025cc0
   14001c766:	test   al,al
   14001c768:	je     0x14001c78f
   14001c76a:	mov    edx,0x1
   14001c76f:	lea    rcx,[rbp+0xb0]
   14001c776:	call   0x140025cdc
   14001c77b:	lea    rdx,[rip+0x5339e]        # 0x14006fb20
   14001c782:	lea    rcx,[rbp+0xb0]
   14001c789:	call   0x14002ab88
   14001c78e:	nop
   14001c78f:	xor    r8d,r8d
   14001c792:	mov    dl,0x1
   14001c794:	lea    rcx,[rbp+0x1a0]
   14001c79b:	call   0x14000b6b0
   14001c7a0:	nop
   14001c7a1:	xor    r8d,r8d
   14001c7a4:	mov    dl,0x1
   14001c7a6:	lea    rcx,[rbp+0x1c0]
   14001c7ad:	call   0x14000b6b0
   14001c7b2:	nop
   14001c7b3:	xor    r8d,r8d
   14001c7b6:	mov    dl,0x1
   14001c7b8:	lea    rcx,[rbp+0x68]
   14001c7bc:	call   0x14000b6b0
   14001c7c1:	nop
   14001c7c2:	xor    r8d,r8d
   14001c7c5:	mov    dl,0x1
   14001c7c7:	lea    rcx,[rbp+0x88]
   14001c7ce:	call   0x14000b6b0
   14001c7d3:	nop
   14001c7d4:	mov    rax,r14
   14001c7d7:	mov    rcx,QWORD PTR [rbp+0x1e0]
   14001c7de:	xor    rcx,rsp
   14001c7e1:	call   0x140025df0
   14001c7e6:	mov    rbx,QWORD PTR [rsp+0x348]
   14001c7ee:	add    rsp,0x2f0
   14001c7f5:	pop    r15
   14001c7f7:	pop    r14
   14001c7f9:	pop    r13
   14001c7fb:	pop    r12
   14001c7fd:	pop    rdi
   14001c7fe:	pop    rsi
   14001c7ff:	pop    rbp
   14001c800:	ret    
   14001c801:	int3   
   14001c802:	int3   
   14001c803:	int3   
   14001c804:	mov    rax,rsp
   14001c807:	mov    QWORD PTR [rax+0x8],rcx
   14001c80b:	push   rdi
   14001c80c:	sub    rsp,0x30
   14001c810:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001c818:	mov    QWORD PTR [rax+0x10],rbx
   14001c81c:	mov    rdi,rdx
   14001c81f:	mov    rbx,rcx
   14001c822:	and    DWORD PTR [rax+0x18],0x0
   14001c826:	test   r8d,r8d
   14001c829:	je     0x14001c87e
   14001c82b:	lea    rax,[rip+0x2fea6]        # 0x14004c6d8
   14001c832:	mov    QWORD PTR [rcx+0x8],rax
   14001c836:	test   rdx,rdx
   14001c839:	jne    0x14001c83f
   14001c83b:	xor    ecx,ecx
   14001c83d:	jmp    0x14001c84e
   14001c83f:	mov    rax,QWORD PTR [rdx+0x8]
   14001c843:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c847:	add    rcx,0x8
   14001c84b:	add    rcx,rdi
   14001c84e:	lea    rax,[rip+0x2eef3]        # 0x14004b748
   14001c855:	mov    QWORD PTR [rbx+0xa0],rax
   14001c85c:	lea    rdx,[rbx+0xa8]
   14001c863:	xor    eax,eax
   14001c865:	mov    QWORD PTR [rdx],rax
   14001c868:	mov    QWORD PTR [rdx+0x8],rax
   14001c86c:	add    rcx,0x8
   14001c870:	call   0x140028f04
   14001c875:	nop
   14001c876:	mov    DWORD PTR [rsp+0x50],0x1
   14001c87e:	xor    r8d,r8d
   14001c881:	mov    rdx,rdi
   14001c884:	mov    rcx,rbx
   14001c887:	call   0x140020494
   14001c88c:	lea    rax,[rip+0x2fe25]        # 0x14004c6b8
   14001c893:	mov    QWORD PTR [rbx],rax
   14001c896:	mov    rax,QWORD PTR [rbx+0x8]
   14001c89a:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c89e:	lea    rax,[rip+0x2fe23]        # 0x14004c6c8
   14001c8a5:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   14001c8aa:	mov    rax,QWORD PTR [rbx+0x8]
   14001c8ae:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c8b2:	and    DWORD PTR [rcx+rbx*1+0x4],0x0
   14001c8b7:	mov    rax,rbx
   14001c8ba:	mov    rbx,QWORD PTR [rsp+0x48]
   14001c8bf:	add    rsp,0x30
   14001c8c3:	pop    rdi
   14001c8c4:	ret    
   14001c8c5:	int3   
   14001c8c6:	int3   
   14001c8c7:	int3   
   14001c8c8:	mov    rax,rsp
   14001c8cb:	mov    QWORD PTR [rax+0x8],rcx
   14001c8cf:	push   rdi
   14001c8d0:	sub    rsp,0x30
   14001c8d4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001c8dc:	mov    QWORD PTR [rax+0x10],rbx
   14001c8e0:	mov    rdi,rdx
   14001c8e3:	mov    rbx,rcx
   14001c8e6:	and    DWORD PTR [rax+0x18],0x0
   14001c8ea:	test   r8d,r8d
   14001c8ed:	je     0x14001c942
   14001c8ef:	lea    rax,[rip+0x2fdb2]        # 0x14004c6a8
   14001c8f6:	mov    QWORD PTR [rcx+0x8],rax
   14001c8fa:	test   rdx,rdx
   14001c8fd:	jne    0x14001c903
   14001c8ff:	xor    ecx,ecx
   14001c901:	jmp    0x14001c912
   14001c903:	mov    rax,QWORD PTR [rdx+0x8]
   14001c907:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c90b:	add    rcx,0x8
   14001c90f:	add    rcx,rdi
   14001c912:	lea    rax,[rip+0x2ee2f]        # 0x14004b748
   14001c919:	mov    QWORD PTR [rbx+0xa8],rax
   14001c920:	lea    rdx,[rbx+0xb0]
   14001c927:	xor    eax,eax
   14001c929:	mov    QWORD PTR [rdx],rax
   14001c92c:	mov    QWORD PTR [rdx+0x8],rax
   14001c930:	add    rcx,0x8
   14001c934:	call   0x140028f04
   14001c939:	nop
   14001c93a:	mov    DWORD PTR [rsp+0x50],0x1
   14001c942:	xor    r8d,r8d
   14001c945:	mov    rdx,rdi
   14001c948:	mov    rcx,rbx
   14001c94b:	call   0x140020494
   14001c950:	lea    rax,[rip+0x2f2d9]        # 0x14004bc30
   14001c957:	mov    QWORD PTR [rbx],rax
   14001c95a:	mov    rax,QWORD PTR [rbx+0x8]
   14001c95e:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c962:	lea    rax,[rip+0x2f2d7]        # 0x14004bc40
   14001c969:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   14001c96e:	mov    rax,QWORD PTR [rbx+0x8]
   14001c972:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c976:	and    DWORD PTR [rcx+rbx*1+0x4],0x0
   14001c97b:	mov    eax,DWORD PTR [rdi+0x98]
   14001c981:	mov    DWORD PTR [rbx+0x98],eax
   14001c987:	lea    rax,[rip+0x2fcfa]        # 0x14004c688
   14001c98e:	mov    QWORD PTR [rbx],rax
   14001c991:	mov    rax,QWORD PTR [rbx+0x8]
   14001c995:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c999:	lea    rax,[rip+0x2fcf8]        # 0x14004c698
   14001c9a0:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   14001c9a5:	mov    rax,QWORD PTR [rbx+0x8]
   14001c9a9:	movsxd rcx,DWORD PTR [rax+0x4]
   14001c9ad:	and    DWORD PTR [rcx+rbx*1+0x4],0x0
   14001c9b2:	mov    rax,rbx
   14001c9b5:	mov    rbx,QWORD PTR [rsp+0x48]
   14001c9ba:	add    rsp,0x30
   14001c9be:	pop    rdi
   14001c9bf:	ret    
   14001c9c0:	mov    QWORD PTR [rsp+0x8],rcx
   14001c9c5:	push   rbx
   14001c9c6:	sub    rsp,0x40
   14001c9ca:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001c9d3:	mov    rbx,rcx
   14001c9d6:	xor    ecx,ecx
   14001c9d8:	mov    DWORD PTR [rsp+0x30],ecx
   14001c9dc:	cmp    DWORD PTR [rsp+0x78],ecx
   14001c9e0:	je     0x14001ca13
   14001c9e2:	lea    rax,[rip+0x2fcbf]        # 0x14004c6a8
   14001c9e9:	mov    QWORD PTR [rbx+0x8],rax
   14001c9ed:	lea    rax,[rip+0x2ed54]        # 0x14004b748
   14001c9f4:	mov    QWORD PTR [rbx+0xa8],rax
   14001c9fb:	xor    eax,eax
   14001c9fd:	mov    QWORD PTR [rbx+0xb0],rax
   14001ca04:	mov    QWORD PTR [rbx+0xb8],rax
   14001ca0b:	mov    DWORD PTR [rsp+0x30],0x1
   14001ca13:	mov    DWORD PTR [rsp+0x28],ecx
   14001ca17:	mov    rax,QWORD PTR [rsp+0x70]
   14001ca1c:	mov    QWORD PTR [rsp+0x20],rax
   14001ca21:	mov    rcx,rbx
   14001ca24:	call   0x14001ec04
   14001ca29:	lea    rax,[rip+0x2fc58]        # 0x14004c688
   14001ca30:	mov    QWORD PTR [rbx],rax
   14001ca33:	mov    rax,QWORD PTR [rbx+0x8]
   14001ca37:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ca3b:	lea    rax,[rip+0x2fc56]        # 0x14004c698
   14001ca42:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   14001ca47:	mov    rax,QWORD PTR [rbx+0x8]
   14001ca4b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ca4f:	lea    edx,[rcx-0xa0]
   14001ca55:	mov    DWORD PTR [rcx+rbx*1+0x4],edx
   14001ca59:	mov    rax,rbx
   14001ca5c:	add    rsp,0x40
   14001ca60:	pop    rbx
   14001ca61:	ret    
   14001ca62:	int3   
   14001ca63:	int3   
   14001ca64:	sub    rsp,0x28
   14001ca68:	mov    rcx,QWORD PTR [rcx]
   14001ca6b:	test   rcx,rcx
   14001ca6e:	je     0x14001ca7a
   14001ca70:	mov    edx,0x1
   14001ca75:	call   0x14001cd68
   14001ca7a:	add    rsp,0x28
   14001ca7e:	ret    
   14001ca7f:	int3   
   14001ca80:	sub    rsp,0x28
   14001ca84:	mov    rcx,QWORD PTR [rcx]
   14001ca87:	test   rcx,rcx
   14001ca8a:	je     0x14001ca96
   14001ca8c:	mov    rax,QWORD PTR [rcx]
   14001ca8f:	mov    edx,0x1
   14001ca94:	call   QWORD PTR [rax]
   14001ca96:	add    rsp,0x28
   14001ca9a:	ret    
   14001ca9b:	int3   
   14001ca9c:	sub    rsp,0x28
   14001caa0:	mov    rcx,QWORD PTR [rcx]
   14001caa3:	test   rcx,rcx
   14001caa6:	je     0x14001cab2
   14001caa8:	mov    edx,0x8
   14001caad:	call   0x140026804
   14001cab2:	add    rsp,0x28
   14001cab6:	ret    
   14001cab7:	int3   
   14001cab8:	rex push rbx
   14001caba:	sub    rsp,0x20
   14001cabe:	mov    rbx,rcx
   14001cac1:	mov    rcx,QWORD PTR [rcx]
   14001cac4:	test   rcx,rcx
   14001cac7:	je     0x14001cacf
   14001cac9:	call   QWORD PTR [rip+0x2e949]        # 0x14004b418
   14001cacf:	and    QWORD PTR [rbx],0x0
   14001cad3:	add    rsp,0x20
   14001cad7:	pop    rbx
   14001cad8:	ret    
   14001cad9:	int3   
   14001cada:	int3   
   14001cadb:	int3   
   14001cadc:	rex push rdi
   14001cade:	sub    rsp,0x30
   14001cae2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001caeb:	mov    QWORD PTR [rsp+0x48],rbx
   14001caf0:	mov    rdi,rcx
   14001caf3:	mov    rcx,QWORD PTR [rcx+0x30]
   14001caf7:	xor    ebx,ebx
   14001caf9:	test   rcx,rcx
   14001cafc:	je     0x14001cb05
   14001cafe:	call   QWORD PTR [rip+0x2e914]        # 0x14004b418
   14001cb04:	nop
   14001cb05:	mov    QWORD PTR [rdi+0x30],rbx
   14001cb09:	mov    rcx,QWORD PTR [rdi+0x28]
   14001cb0d:	test   rcx,rcx
   14001cb10:	je     0x14001cb19
   14001cb12:	call   QWORD PTR [rip+0x2e900]        # 0x14004b418
   14001cb18:	nop
   14001cb19:	mov    QWORD PTR [rdi+0x28],rbx
   14001cb1d:	mov    rcx,QWORD PTR [rdi+0x20]
   14001cb21:	test   rcx,rcx
   14001cb24:	je     0x14001cb2d
   14001cb26:	call   QWORD PTR [rip+0x2e8ec]        # 0x14004b418
   14001cb2c:	nop
   14001cb2d:	mov    QWORD PTR [rdi+0x20],rbx
   14001cb31:	lea    rbx,[rdi+0x10]
   14001cb35:	mov    r8,QWORD PTR [rbx]
   14001cb38:	mov    r9,r8
   14001cb3b:	mov    r8,QWORD PTR [r8]
   14001cb3e:	lea    rdx,[rsp+0x40]
   14001cb43:	mov    rcx,rbx
   14001cb46:	call   0x14000c18c
   14001cb4b:	nop
   14001cb4c:	mov    edx,0x1
   14001cb51:	lea    r8d,[rdx+0x5f]
   14001cb55:	mov    rcx,QWORD PTR [rbx]
   14001cb58:	call   0x140004804
   14001cb5d:	nop
   14001cb5e:	lea    rax,[rip+0x2fb0b]        # 0x14004c670
   14001cb65:	mov    QWORD PTR [rdi],rax
   14001cb68:	mov    rbx,QWORD PTR [rsp+0x48]
   14001cb6d:	add    rsp,0x30
   14001cb71:	pop    rdi
   14001cb72:	ret    
   14001cb73:	int3   
   14001cb74:	lea    rax,[rip+0x2faf5]        # 0x14004c670
   14001cb7b:	mov    QWORD PTR [rcx],rax
   14001cb7e:	ret    
   14001cb7f:	int3   
   14001cb80:	rex push rdi
   14001cb82:	sub    rsp,0x30
   14001cb86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cb8f:	mov    QWORD PTR [rsp+0x40],rbx
   14001cb94:	mov    rdi,rdx
   14001cb97:	mov    rbx,rcx
   14001cb9a:	cmp    rcx,rdx
   14001cb9d:	je     0x14001cbe0
   14001cb9f:	mov    rdx,QWORD PTR [rcx]
   14001cba2:	mov    rdx,QWORD PTR [rdx+0x8]
   14001cba6:	call   0x14000cf34
   14001cbab:	mov    rax,QWORD PTR [rbx]
   14001cbae:	mov    QWORD PTR [rax+0x8],rax
   14001cbb2:	mov    rax,QWORD PTR [rbx]
   14001cbb5:	mov    QWORD PTR [rax],rax
   14001cbb8:	mov    rax,QWORD PTR [rbx]
   14001cbbb:	mov    QWORD PTR [rax+0x10],rax
   14001cbbf:	and    QWORD PTR [rbx+0x8],0x0
   14001cbc4:	mov    rcx,QWORD PTR [rbx]
   14001cbc7:	mov    rax,QWORD PTR [rdi]
   14001cbca:	mov    QWORD PTR [rbx],rax
   14001cbcd:	mov    QWORD PTR [rdi],rcx
   14001cbd0:	mov    rcx,QWORD PTR [rbx+0x8]
   14001cbd4:	mov    rax,QWORD PTR [rdi+0x8]
   14001cbd8:	mov    QWORD PTR [rbx+0x8],rax
   14001cbdc:	mov    QWORD PTR [rdi+0x8],rcx
   14001cbe0:	mov    rax,rbx
   14001cbe3:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cbe8:	add    rsp,0x30
   14001cbec:	pop    rdi
   14001cbed:	ret    
   14001cbee:	int3   
   14001cbef:	int3   
   14001cbf0:	mov    rax,rsp
   14001cbf3:	mov    QWORD PTR [rax+0x8],rcx
   14001cbf7:	push   rsi
   14001cbf8:	push   rdi
   14001cbf9:	push   r14
   14001cbfb:	sub    rsp,0x80
   14001cc02:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   14001cc0a:	mov    QWORD PTR [rax+0x10],rbx
   14001cc0e:	mov    rsi,rdx
   14001cc11:	mov    rdi,rcx
   14001cc14:	xor    ebx,ebx
   14001cc16:	mov    DWORD PTR [rsp+0xb0],ebx
   14001cc1d:	mov    rdx,rcx
   14001cc20:	lea    rcx,[rax-0x60]
   14001cc24:	call   0x14000e7e8
   14001cc29:	nop
   14001cc2a:	cmp    BYTE PTR [rsp+0x40],bl
   14001cc2e:	je     0x14001cce1
   14001cc34:	mov    rax,QWORD PTR [rdi]
   14001cc37:	movsxd rcx,DWORD PTR [rax+0x4]
   14001cc3b:	add    rcx,rdi
   14001cc3e:	lea    rdx,[rsp+0x60]
   14001cc43:	call   0x140005600
   14001cc48:	nop
   14001cc49:	mov    rcx,rax
   14001cc4c:	call   0x1400109b0
   14001cc51:	mov    r14,rax
   14001cc54:	mov    rcx,QWORD PTR [rsp+0x68]
   14001cc59:	test   rcx,rcx
   14001cc5c:	je     0x14001cc76
   14001cc5e:	mov    rdx,QWORD PTR [rcx]
   14001cc61:	call   QWORD PTR [rdx+0x10]
   14001cc64:	test   rax,rax
   14001cc67:	je     0x14001cc76
   14001cc69:	mov    r8,QWORD PTR [rax]
   14001cc6c:	lea    edx,[rbx+0x1]
   14001cc6f:	mov    rcx,rax
   14001cc72:	call   QWORD PTR [r8]
   14001cc75:	nop
   14001cc76:	mov    rax,QWORD PTR [rdi]
   14001cc79:	movsxd r9,DWORD PTR [rax+0x4]
   14001cc7d:	add    r9,rdi
   14001cc80:	mov    rax,QWORD PTR [r9+0x48]
   14001cc84:	mov    BYTE PTR [rsp+0x50],0x0
   14001cc89:	mov    QWORD PTR [rsp+0x58],rax
   14001cc8e:	movzx  eax,WORD PTR [r9+0x58]
   14001cc93:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001cc98:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14001cc9e:	mov    r10,QWORD PTR [r14]
   14001cca1:	mov    QWORD PTR [rsp+0x28],rsi
   14001cca6:	mov    WORD PTR [rsp+0x20],ax
   14001ccab:	lea    r8,[rsp+0x50]
   14001ccb0:	lea    rdx,[rsp+0x70]
   14001ccb5:	mov    rcx,r14
   14001ccb8:	call   QWORD PTR [r10+0x18]
   14001ccbc:	mov    ecx,0x4
   14001ccc1:	cmp    BYTE PTR [rsp+0x70],0x0
   14001ccc6:	cmovne ebx,ecx
   14001ccc9:	mov    DWORD PTR [rsp+0xb0],ebx
   14001ccd0:	jmp    0x14001cce6
   14001ccd2:	mov    rdi,QWORD PTR [rsp+0xa0]
   14001ccda:	mov    ebx,DWORD PTR [rsp+0xb0]
   14001cce1:	mov    ecx,0x4
   14001cce6:	mov    rax,QWORD PTR [rdi]
   14001cce9:	movsxd r9,DWORD PTR [rax+0x4]
   14001cced:	add    r9,rdi
   14001ccf0:	test   ebx,ebx
   14001ccf2:	je     0x14001cd12
   14001ccf4:	mov    edx,DWORD PTR [r9+0x10]
   14001ccf8:	or     edx,ebx
   14001ccfa:	mov    eax,edx
   14001ccfc:	or     eax,ecx
   14001ccfe:	cmp    QWORD PTR [r9+0x48],0x0
   14001cd03:	cmove  edx,eax
   14001cd06:	xor    r8d,r8d
   14001cd09:	mov    rcx,r9
   14001cd0c:	call   0x1400054f8
   14001cd11:	nop
   14001cd12:	call   0x140027894
   14001cd17:	test   al,al
   14001cd19:	jne    0x14001cd26
   14001cd1b:	mov    rcx,QWORD PTR [rsp+0x38]
   14001cd20:	call   0x140010068
   14001cd25:	nop
   14001cd26:	mov    rdx,QWORD PTR [rsp+0x38]
   14001cd2b:	mov    rax,QWORD PTR [rdx]
   14001cd2e:	movsxd rcx,DWORD PTR [rax+0x4]
   14001cd32:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14001cd37:	test   rcx,rcx
   14001cd3a:	je     0x14001cd43
   14001cd3c:	mov    rax,QWORD PTR [rcx]
   14001cd3f:	call   QWORD PTR [rax+0x10]
   14001cd42:	nop
   14001cd43:	mov    rax,rdi
   14001cd46:	mov    rbx,QWORD PTR [rsp+0xa8]
   14001cd4e:	add    rsp,0x80
   14001cd55:	pop    r14
   14001cd57:	pop    rdi
   14001cd58:	pop    rsi
   14001cd59:	ret    
   14001cd5a:	int3   
   14001cd5b:	int3   
   14001cd5c:	movsxd rax,DWORD PTR [rcx-0x4]
   14001cd60:	sub    rcx,rax
   14001cd63:	jmp    0x14001ce50
   14001cd68:	rex push rdi
   14001cd6a:	sub    rsp,0x30
   14001cd6e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001cd77:	mov    QWORD PTR [rsp+0x48],rbx
   14001cd7c:	mov    QWORD PTR [rsp+0x50],rsi
   14001cd81:	mov    esi,edx
   14001cd83:	mov    rdi,rcx
   14001cd86:	mov    rcx,QWORD PTR [rcx+0x18]
   14001cd8a:	test   rcx,rcx
   14001cd8d:	je     0x14001cd9a
   14001cd8f:	mov    rax,QWORD PTR [rcx]
   14001cd92:	mov    edx,0x1
   14001cd97:	call   QWORD PTR [rax]
   14001cd99:	nop
   14001cd9a:	lea    rbx,[rdi+0x8]
   14001cd9e:	mov    r8,QWORD PTR [rbx]
   14001cda1:	mov    r9,r8
   14001cda4:	mov    r8,QWORD PTR [r8]
   14001cda7:	lea    rdx,[rsp+0x40]
   14001cdac:	mov    rcx,rbx
   14001cdaf:	call   0x14000c18c
   14001cdb4:	nop
   14001cdb5:	mov    edx,0x1
   14001cdba:	lea    r8d,[rdx+0x5f]
   14001cdbe:	mov    rcx,QWORD PTR [rbx]
   14001cdc1:	call   0x140004804
   14001cdc6:	nop
   14001cdc7:	test   sil,0x1
   14001cdcb:	je     0x14001cddb
   14001cdcd:	mov    edx,0x20
   14001cdd2:	mov    rcx,rdi
   14001cdd5:	call   0x140026804
   14001cdda:	nop
   14001cddb:	mov    rax,rdi
   14001cdde:	mov    rbx,QWORD PTR [rsp+0x48]
   14001cde3:	mov    rsi,QWORD PTR [rsp+0x50]
   14001cde8:	add    rsp,0x30
   14001cdec:	pop    rdi
   14001cded:	ret    
   14001cdee:	int3   
   14001cdef:	int3   
   14001cdf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cdf5:	push   rdi
   14001cdf6:	sub    rsp,0x20
   14001cdfa:	mov    ebx,edx
   14001cdfc:	mov    rdi,rcx
   14001cdff:	call   0x14001cadc
   14001ce04:	test   bl,0x1
   14001ce07:	je     0x14001ce16
   14001ce09:	mov    edx,0x48
   14001ce0e:	mov    rcx,rdi
   14001ce11:	call   0x140026804
   14001ce16:	mov    rax,rdi
   14001ce19:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce1e:	add    rsp,0x20
   14001ce22:	pop    rdi
   14001ce23:	ret    
   14001ce24:	rex push rbx
   14001ce26:	sub    rsp,0x20
   14001ce2a:	lea    rax,[rip+0x2f83f]        # 0x14004c670
   14001ce31:	mov    rbx,rcx
   14001ce34:	mov    QWORD PTR [rcx],rax
   14001ce37:	test   dl,0x1
   14001ce3a:	je     0x14001ce46
   14001ce3c:	mov    edx,0x8
   14001ce41:	call   0x140026804
   14001ce46:	mov    rax,rbx
   14001ce49:	add    rsp,0x20
   14001ce4d:	pop    rbx
   14001ce4e:	ret    
   14001ce4f:	int3   
   14001ce50:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce55:	push   rdi
   14001ce56:	sub    rsp,0x20
   14001ce5a:	mov    ebx,edx
   14001ce5c:	lea    rdi,[rcx-0xa0]
   14001ce63:	call   0x140005828
   14001ce68:	lea    rax,[rip+0x2e8d9]        # 0x14004b748
   14001ce6f:	lea    rcx,[rdi+0xa8]
   14001ce76:	mov    QWORD PTR [rdi+0xa0],rax
   14001ce7d:	call   0x140028f94
   14001ce82:	test   bl,0x1
   14001ce85:	je     0x14001ce94
   14001ce87:	mov    edx,0xb8
   14001ce8c:	mov    rcx,rdi
   14001ce8f:	call   0x140026804
   14001ce94:	mov    rax,rdi
   14001ce97:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce9c:	add    rsp,0x20
   14001cea0:	pop    rdi
   14001cea1:	ret    
   14001cea2:	int3   
   14001cea3:	int3   
   14001cea4:	mov    QWORD PTR [rsp+0x10],rdx
   14001cea9:	push   rbx
   14001ceaa:	sub    rsp,0x30
   14001ceae:	and    DWORD PTR [rsp+0x20],0x0
   14001ceb3:	lea    r8,[rsp+0x48]
   14001ceb8:	mov    rbx,rdx
   14001cebb:	lea    rdx,[rcx+0x10]
   14001cebf:	mov    rcx,rbx
   14001cec2:	call   0x14001b7d4
   14001cec7:	mov    rax,rbx
   14001ceca:	add    rsp,0x30
   14001cece:	pop    rbx
   14001cecf:	ret    
   14001ced0:	sub    rsp,0x58
   14001ced4:	test   ecx,ecx
   14001ced6:	je     0x14001cee6
   14001ced8:	cmp    ecx,0x1
   14001cedb:	jne    0x14001cef2
   14001cedd:	lea    rax,[rip+0x2fb24]        # 0x14004ca08
   14001cee4:	jmp    0x14001ceed
   14001cee6:	lea    rax,[rip+0x2fb0b]        # 0x14004c9f8
   14001ceed:	add    rsp,0x58
   14001cef1:	ret    
   14001cef2:	lea    rax,[rip+0x2e84f]        # 0x14004b748
   14001cef9:	mov    BYTE PTR [rsp+0x28],0x1
   14001cefe:	mov    QWORD PTR [rsp+0x30],rax
   14001cf03:	lea    rdx,[rsp+0x38]
   14001cf08:	xor    eax,eax
   14001cf0a:	lea    rcx,[rsp+0x20]
   14001cf0f:	mov    QWORD PTR [rsp+0x38],rax
   14001cf14:	mov    QWORD PTR [rsp+0x40],rax
   14001cf19:	lea    rax,[rip+0x2faf0]        # 0x14004ca10
   14001cf20:	mov    QWORD PTR [rsp+0x20],rax
   14001cf25:	call   0x140028f04
   14001cf2a:	lea    rax,[rip+0x2e85f]        # 0x14004b790
   14001cf31:	lea    rdx,[rip+0x52ae8]        # 0x14006fa20
   14001cf38:	mov    QWORD PTR [rsp+0x30],rax
   14001cf3d:	lea    rcx,[rsp+0x30]
   14001cf42:	call   0x14002ab88
   14001cf47:	int3   
   14001cf48:	rex push rbp
   14001cf4a:	push   rbx
   14001cf4b:	push   rsi
   14001cf4c:	push   rdi
   14001cf4d:	push   r12
   14001cf4f:	push   r14
   14001cf51:	push   r15
   14001cf53:	lea    rbp,[rsp-0x160]
   14001cf5b:	sub    rsp,0x260
   14001cf62:	mov    QWORD PTR [rbp-0x80],0xfffffffffffffffe
   14001cf6a:	mov    rax,QWORD PTR [rip+0x540df]        # 0x140071050
   14001cf71:	xor    rax,rsp
   14001cf74:	mov    QWORD PTR [rbp+0x150],rax
   14001cf7b:	mov    r15,r9
   14001cf7e:	mov    rdi,r8
   14001cf81:	mov    rbx,rdx
   14001cf84:	mov    rsi,rcx
   14001cf87:	xor    r12d,r12d
   14001cf8a:	mov    DWORD PTR [rsp+0x78],r12d
   14001cf8f:	xorps  xmm0,xmm0
   14001cf92:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14001cf98:	mov    QWORD PTR [rsp+0x70],r12
   14001cf9d:	cmp    QWORD PTR [rcx+0x30],r12
   14001cfa1:	jne    0x14001cfb3
   14001cfa3:	mov    QWORD PTR [rdx],r12
   14001cfa6:	mov    QWORD PTR [rdx+0x8],r12
   14001cfaa:	mov    QWORD PTR [rdx+0x10],r12
   14001cfae:	jmp    0x14001d25a
   14001cfb3:	mov    eax,0xffffffff
   14001cfb8:	cmp    rdi,rax
   14001cfbb:	cmova  edi,eax
   14001cfbe:	mov    DWORD PTR [rsp+0x3c],edi
   14001cfc2:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   14001cfc8:	mov    QWORD PTR [rsp+0x58],r12
   14001cfcd:	mov    r14,QWORD PTR [rsp+0x48]
   14001cfd2:	mov    rax,QWORD PTR [rsi+0x40]
   14001cfd6:	test   rax,rax
   14001cfd9:	je     0x14001cfe5
   14001cfdb:	cmp    QWORD PTR [rsi+0x38],rax
   14001cfdf:	jae    0x14001d0c5
   14001cfe5:	test   edi,edi
   14001cfe7:	je     0x14001d224
   14001cfed:	test   r15,r15
   14001cff0:	je     0x14001d004
   14001cff2:	xor    edx,edx
   14001cff4:	mov    rcx,r15
   14001cff7:	call   0x140025cc0
   14001cffc:	test   al,al
   14001cffe:	jne    0x14001d0dd
   14001d004:	mov    DWORD PTR [rsp+0x34],r12d
   14001d009:	lea    rdx,[rsp+0x34]
   14001d00e:	mov    rcx,QWORD PTR [rsi+0x30]
   14001d012:	call   QWORD PTR [rip+0x2e3f0]        # 0x14004b408
   14001d018:	test   eax,eax
   14001d01a:	je     0x14001d193
   14001d020:	mov    ecx,DWORD PTR [rsp+0x34]
   14001d024:	test   ecx,ecx
   14001d026:	je     0x14001d0c5
   14001d02c:	lea    rax,[rsp+0x34]
   14001d031:	lea    rdx,[rsp+0x3c]
   14001d036:	cmp    ecx,edi
   14001d038:	cmovae rax,rdx
   14001d03c:	mov    eax,DWORD PTR [rax]
   14001d03e:	mov    DWORD PTR [rsp+0x34],eax
   14001d042:	mov    edx,eax
   14001d044:	lea    rcx,[rsp+0x48]
   14001d049:	call   0x14001abdc
   14001d04e:	mov    DWORD PTR [rsp+0x30],r12d
   14001d053:	lea    r9,[rsp+0x30]
   14001d058:	mov    r8d,DWORD PTR [rsp+0x34]
   14001d05d:	mov    rdx,QWORD PTR [rsp+0x48]
   14001d062:	mov    rcx,QWORD PTR [rsi+0x30]
   14001d066:	call   QWORD PTR [rip+0x2e3cc]        # 0x14004b438
   14001d06c:	test   eax,eax
   14001d06e:	je     0x14001d102
   14001d074:	mov    edx,DWORD PTR [rsp+0x30]
   14001d078:	lea    rcx,[rsp+0x48]
   14001d07d:	call   0x14001abdc
   14001d082:	mov    ecx,DWORD PTR [rsp+0x30]
   14001d086:	add    QWORD PTR [rsi+0x38],rcx
   14001d08a:	cmp    edi,ecx
   14001d08c:	jae    0x14001d098
   14001d08e:	mov    edi,r12d
   14001d091:	mov    DWORD PTR [rsp+0x3c],r12d
   14001d096:	jmp    0x14001d09e
   14001d098:	sub    edi,ecx
   14001d09a:	mov    DWORD PTR [rsp+0x3c],edi
   14001d09e:	xor    eax,eax
   14001d0a0:	mov    BYTE PTR [rsp+0x20],al
   14001d0a4:	mov    r9,QWORD PTR [rsp+0x50]
   14001d0a9:	mov    r14,QWORD PTR [rsp+0x48]
   14001d0ae:	mov    r8,r14
   14001d0b1:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d0b6:	lea    rcx,[rsp+0x60]
   14001d0bb:	call   0x14001ba94
   14001d0c0:	jmp    0x14001cfd2
   14001d0c5:	mov    rcx,QWORD PTR [rsi+0x30]
   14001d0c9:	test   rcx,rcx
   14001d0cc:	je     0x14001d0d4
   14001d0ce:	call   QWORD PTR [rip+0x2e344]        # 0x14004b418
   14001d0d4:	mov    QWORD PTR [rsi+0x30],r12
   14001d0d8:	jmp    0x14001d224
   14001d0dd:	mov    edx,0x1
   14001d0e2:	lea    rcx,[rbp+0x90]
   14001d0e9:	call   0x140025cdc
   14001d0ee:	lea    rdx,[rip+0x52a2b]        # 0x14006fb20
   14001d0f5:	lea    rcx,[rbp+0x90]
   14001d0fc:	call   0x14002ab88
   14001d101:	int3   
   14001d102:	call   QWORD PTR [rip+0x2dfd8]        # 0x14004b0e0
   14001d108:	mov    ebx,eax
   14001d10a:	mov    edx,0x2
   14001d10f:	lea    r8d,[rdx-0x1]
   14001d113:	lea    rcx,[rbp-0x78]
   14001d117:	call   0x14000be9c
   14001d11c:	nop
   14001d11d:	lea    rdx,[rip+0x2fb3c]        # 0x14004cc60
   14001d124:	lea    rcx,[rbp-0x78]
   14001d128:	call   0x140010488
   14001d12d:	mov    edx,ebx
   14001d12f:	lea    rcx,[rbp-0x78]
   14001d133:	call   0x14000e4d0
   14001d138:	lea    rdx,[rbp+0x70]
   14001d13c:	lea    rcx,[rbp-0x78]
   14001d140:	call   0x14000a950
   14001d145:	nop
   14001d146:	movzx  r8d,bx
   14001d14a:	or     r8d,0x80070000
   14001d151:	test   ebx,ebx
   14001d153:	cmovle r8d,ebx
   14001d157:	mov    DWORD PTR [rsp+0x28],0x1
   14001d15f:	mov    QWORD PTR [rsp+0x20],0x263
   14001d168:	lea    r9,[rip+0x2f571]        # 0x14004c6e0
   14001d16f:	lea    rdx,[rbp+0x70]
   14001d173:	lea    rcx,[rbp+0x90]
   14001d17a:	call   0x14001c9c0
   14001d17f:	lea    rdx,[rip+0x5292a]        # 0x14006fab0
   14001d186:	lea    rcx,[rbp+0x90]
   14001d18d:	call   0x14002ab88
   14001d192:	nop
   14001d193:	call   QWORD PTR [rip+0x2df47]        # 0x14004b0e0
   14001d199:	mov    ebx,eax
   14001d19b:	mov    edx,0x2
   14001d1a0:	lea    r8d,[rdx-0x1]
   14001d1a4:	lea    rcx,[rbp-0x78]
   14001d1a8:	call   0x14000be9c
   14001d1ad:	nop
   14001d1ae:	lea    rdx,[rip+0x2fa5b]        # 0x14004cc10
   14001d1b5:	lea    rcx,[rbp-0x78]
   14001d1b9:	call   0x140010488
   14001d1be:	mov    edx,ebx
   14001d1c0:	lea    rcx,[rbp-0x78]
   14001d1c4:	call   0x14000e4d0
   14001d1c9:	lea    rdx,[rbp+0x70]
   14001d1cd:	lea    rcx,[rbp-0x78]
   14001d1d1:	call   0x14000a950
   14001d1d6:	nop
   14001d1d7:	movzx  r8d,bx
   14001d1db:	or     r8d,0x80070000
   14001d1e2:	test   ebx,ebx
   14001d1e4:	cmovle r8d,ebx
   14001d1e8:	mov    DWORD PTR [rsp+0x28],0x1
   14001d1f0:	mov    QWORD PTR [rsp+0x20],0x245
   14001d1f9:	lea    r9,[rip+0x2f4e0]        # 0x14004c6e0
   14001d200:	lea    rdx,[rbp+0x70]
   14001d204:	lea    rcx,[rbp+0x90]
   14001d20b:	call   0x14001c9c0
   14001d210:	lea    rdx,[rip+0x52899]        # 0x14006fab0
   14001d217:	lea    rcx,[rbp+0x90]
   14001d21e:	call   0x14002ab88
   14001d223:	nop
   14001d224:	mov    rax,QWORD PTR [rsp+0x60]
   14001d229:	mov    QWORD PTR [rbx],rax
   14001d22c:	mov    rax,QWORD PTR [rsp+0x68]
   14001d231:	mov    QWORD PTR [rbx+0x8],rax
   14001d235:	mov    rax,QWORD PTR [rsp+0x70]
   14001d23a:	mov    QWORD PTR [rbx+0x10],rax
   14001d23e:	test   r14,r14
   14001d241:	je     0x14001d25a
   14001d243:	mov    rdx,QWORD PTR [rsp+0x58]
   14001d248:	sub    rdx,r14
   14001d24b:	mov    r8d,0x1
   14001d251:	mov    rcx,r14
   14001d254:	call   0x140004804
   14001d259:	nop
   14001d25a:	mov    rax,rbx
   14001d25d:	mov    rcx,QWORD PTR [rbp+0x150]
   14001d264:	xor    rcx,rsp
   14001d267:	call   0x140025df0
   14001d26c:	add    rsp,0x260
   14001d273:	pop    r15
   14001d275:	pop    r14
   14001d277:	pop    r12
   14001d279:	pop    rdi
   14001d27a:	pop    rsi
   14001d27b:	pop    rbx
   14001d27c:	pop    rbp
   14001d27d:	ret    
   14001d27e:	int3   
   14001d27f:	int3   
   14001d280:	mov    rax,rsp
   14001d283:	mov    QWORD PTR [rax+0x8],rcx
   14001d287:	push   rsi
   14001d288:	push   rdi
   14001d289:	push   r14
   14001d28b:	sub    rsp,0x50
   14001d28f:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14001d297:	mov    QWORD PTR [rax+0x10],rbx
   14001d29b:	mov    rbx,r8
   14001d29e:	mov    rdi,rdx
   14001d2a1:	mov    r14,rcx
   14001d2a4:	and    DWORD PTR [rax-0x48],0x0
   14001d2a8:	mov    ecx,0x48
   14001d2ad:	call   0x140026118
   14001d2b2:	mov    QWORD PTR [rsp+0x88],rax
   14001d2ba:	test   rax,rax
   14001d2bd:	je     0x14001d2d2
   14001d2bf:	mov    r8,rbx
   14001d2c2:	mov    rdx,rdi
   14001d2c5:	mov    rcx,rax
   14001d2c8:	call   0x14001bdd8
   14001d2cd:	mov    rsi,rax
   14001d2d0:	jmp    0x14001d2d4
   14001d2d2:	xor    esi,esi
   14001d2d4:	mov    QWORD PTR [rsp+0x88],rsi
   14001d2dc:	mov    ecx,0x20
   14001d2e1:	call   0x140026118
   14001d2e6:	mov    rdi,rax
   14001d2e9:	mov    QWORD PTR [rsp+0x30],rax
   14001d2ee:	test   rax,rax
   14001d2f1:	je     0x14001d317
   14001d2f3:	lea    rbx,[rax+0x8]
   14001d2f7:	mov    QWORD PTR [rsp+0x40],rbx
   14001d2fc:	and    QWORD PTR [rbx],0x0
   14001d300:	and    QWORD PTR [rbx+0x8],0x0
   14001d305:	mov    rcx,rbx
   14001d308:	call   0x14001ddb0
   14001d30d:	mov    QWORD PTR [rbx],rax
   14001d310:	and    QWORD PTR [rdi+0x18],0x0
   14001d315:	jmp    0x14001d319
   14001d317:	xor    edi,edi
   14001d319:	mov    QWORD PTR [r14],rdi
   14001d31c:	mov    ebx,0x1
   14001d321:	mov    DWORD PTR [rsp+0x20],ebx
   14001d325:	mov    eax,DWORD PTR [rsi+0x8]
   14001d328:	mov    DWORD PTR [rdi],eax
   14001d32a:	lea    rdx,[rsp+0x30]
   14001d32f:	mov    rcx,rsi
   14001d332:	call   0x14001cea4
   14001d337:	mov    rcx,QWORD PTR [r14]
   14001d33a:	add    rcx,0x8
   14001d33e:	mov    rdx,rax
   14001d341:	call   0x14001cb80
   14001d346:	nop
   14001d347:	mov    r8,QWORD PTR [rsp+0x30]
   14001d34c:	mov    r9,r8
   14001d34f:	mov    r8,QWORD PTR [r8]
   14001d352:	lea    rdx,[rsp+0x40]
   14001d357:	lea    rcx,[rsp+0x30]
   14001d35c:	call   0x14000c18c
   14001d361:	lea    r8d,[rbx+0x5f]
   14001d365:	mov    edx,ebx
   14001d367:	mov    rcx,QWORD PTR [rsp+0x30]
   14001d36c:	call   0x140004804
   14001d371:	nop
   14001d372:	mov    rax,QWORD PTR [r14]
   14001d375:	mov    rcx,QWORD PTR [rax+0x18]
   14001d379:	mov    QWORD PTR [rax+0x18],rsi
   14001d37d:	test   rcx,rcx
   14001d380:	je     0x14001d38a
   14001d382:	mov    rax,QWORD PTR [rcx]
   14001d385:	mov    edx,ebx
   14001d387:	call   QWORD PTR [rax]
   14001d389:	nop
   14001d38a:	mov    rax,r14
   14001d38d:	mov    rbx,QWORD PTR [rsp+0x78]
   14001d392:	add    rsp,0x50
   14001d396:	pop    r14
   14001d398:	pop    rdi
   14001d399:	pop    rsi
   14001d39a:	ret    
   14001d39b:	int3   
   14001d39c:	rex push rbp
   14001d39e:	push   rbx
   14001d39f:	push   rsi
   14001d3a0:	push   rdi
   14001d3a1:	push   r15
   14001d3a3:	lea    rbp,[rsp-0x70]
   14001d3a8:	sub    rsp,0x170
   14001d3af:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   14001d3b7:	mov    rax,QWORD PTR [rip+0x53c92]        # 0x140071050
   14001d3be:	xor    rax,rsp
   14001d3c1:	mov    QWORD PTR [rbp+0x60],rax
   14001d3c5:	mov    rdi,r8
   14001d3c8:	mov    rsi,rcx
   14001d3cb:	mov    QWORD PTR [rbp-0x70],rcx
   14001d3cf:	and    DWORD PTR [rsp+0x40],0x0
   14001d3d4:	lea    rcx,[rsp+0x38]
   14001d3d9:	call   0x14001d280
   14001d3de:	nop
   14001d3df:	xorps  xmm0,xmm0
   14001d3e2:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   14001d3e8:	and    QWORD PTR [rsp+0x60],0x0
   14001d3ee:	mov    ebx,0x19000
   14001d3f3:	mov    rcx,QWORD PTR [rsp+0x38]
   14001d3f8:	add    rcx,0x8
   14001d3fc:	lea    rdx,[rsp+0x48]
   14001d401:	call   0x14001b528
   14001d406:	nop
   14001d407:	mov    rcx,QWORD PTR [rsp+0x48]
   14001d40c:	test   rcx,rcx
   14001d40f:	je     0x14001d42b
   14001d411:	mov    rbx,QWORD PTR [rcx]
   14001d414:	test   rbx,rbx
   14001d417:	je     0x14001d42b
   14001d419:	mov    rdx,rbx
   14001d41c:	lea    rcx,[rsp+0x50]
   14001d421:	call   0x14001aadc
   14001d426:	mov    rcx,QWORD PTR [rsp+0x48]
   14001d42b:	test   rcx,rcx
   14001d42e:	je     0x14001d43a
   14001d430:	mov    edx,0x8
   14001d435:	call   0x140026804
   14001d43a:	mov    r15d,0x1
   14001d440:	test   rdi,rdi
   14001d443:	je     0x14001d453
   14001d445:	xor    edx,edx
   14001d447:	mov    rcx,rdi
   14001d44a:	call   0x140025cc0
   14001d44f:	test   al,al
   14001d451:	jne    0x14001d4b6
   14001d453:	mov    rax,QWORD PTR [rsp+0x38]
   14001d458:	mov    rcx,QWORD PTR [rax+0x18]
   14001d45c:	mov    rax,QWORD PTR [rcx]
   14001d45f:	mov    r9,rdi
   14001d462:	mov    r8,rbx
   14001d465:	lea    rdx,[rsp+0x70]
   14001d46a:	call   QWORD PTR [rax+0x8]
   14001d46d:	nop
   14001d46e:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d473:	mov    r9,QWORD PTR [rsp+0x78]
   14001d478:	cmp    rcx,r9
   14001d47b:	sete   al
   14001d47e:	test   al,al
   14001d480:	jne    0x14001d4d3
   14001d482:	xor    eax,eax
   14001d484:	mov    BYTE PTR [rsp+0x20],al
   14001d488:	mov    r8,rcx
   14001d48b:	mov    rdx,QWORD PTR [rsp+0x58]
   14001d490:	lea    rcx,[rsp+0x50]
   14001d495:	call   0x14001ba94
   14001d49a:	nop
   14001d49b:	mov    rcx,QWORD PTR [rsp+0x70]
   14001d4a0:	test   rcx,rcx
   14001d4a3:	je     0x14001d440
   14001d4a5:	mov    rdx,QWORD PTR [rbp-0x80]
   14001d4a9:	sub    rdx,rcx
   14001d4ac:	mov    r8,r15
   14001d4af:	call   0x140004804
   14001d4b4:	jmp    0x14001d440
   14001d4b6:	mov    edx,r15d
   14001d4b9:	lea    rcx,[rbp-0x60]
   14001d4bd:	call   0x140025cdc
   14001d4c2:	lea    rdx,[rip+0x52657]        # 0x14006fb20
   14001d4c9:	lea    rcx,[rbp-0x60]
   14001d4cd:	call   0x14002ab88
   14001d4d2:	int3   
   14001d4d3:	test   rcx,rcx
   14001d4d6:	je     0x14001d4e7
   14001d4d8:	mov    rdx,QWORD PTR [rbp-0x80]
   14001d4dc:	sub    rdx,rcx
   14001d4df:	mov    r8,r15
   14001d4e2:	call   0x140004804
   14001d4e7:	mov    ecx,0x30
   14001d4ec:	call   0x140026118
   14001d4f1:	mov    rdi,rax
   14001d4f4:	mov    QWORD PTR [rsp+0x48],rax
   14001d4f9:	test   rax,rax
   14001d4fc:	je     0x14001d52c
   14001d4fe:	lea    rbx,[rax+0x8]
   14001d502:	mov    QWORD PTR [rsp+0x68],rbx
   14001d507:	and    QWORD PTR [rbx],0x0
   14001d50b:	and    QWORD PTR [rbx+0x8],0x0
   14001d510:	mov    rcx,rbx
   14001d513:	call   0x14001ddb0
   14001d518:	mov    QWORD PTR [rbx],rax
   14001d51b:	and    QWORD PTR [rdi+0x18],0x0
   14001d520:	and    QWORD PTR [rdi+0x20],0x0
   14001d525:	and    QWORD PTR [rdi+0x28],0x0
   14001d52a:	jmp    0x14001d52e
   14001d52c:	xor    edi,edi
   14001d52e:	mov    QWORD PTR [rsi],rdi
   14001d531:	mov    DWORD PTR [rsp+0x40],r15d
   14001d536:	mov    rax,QWORD PTR [rsp+0x38]
   14001d53b:	mov    ecx,DWORD PTR [rax]
   14001d53d:	mov    DWORD PTR [rdi],ecx
   14001d53f:	mov    rbx,QWORD PTR [rsi]
   14001d542:	add    rbx,0x8
   14001d546:	mov    rdi,QWORD PTR [rsp+0x38]
   14001d54b:	add    rdi,0x8
   14001d54f:	cmp    rbx,rdi
   14001d552:	je     0x14001d58c
   14001d554:	mov    rdx,QWORD PTR [rbx]
   14001d557:	mov    rdx,QWORD PTR [rdx+0x8]
   14001d55b:	mov    rcx,rbx
   14001d55e:	call   0x14000cf34
   14001d563:	mov    rax,QWORD PTR [rbx]
   14001d566:	mov    QWORD PTR [rax+0x8],rax
   14001d56a:	mov    rax,QWORD PTR [rbx]
   14001d56d:	mov    QWORD PTR [rax],rax
   14001d570:	mov    rax,QWORD PTR [rbx]
   14001d573:	mov    QWORD PTR [rax+0x10],rax
   14001d577:	and    QWORD PTR [rbx+0x8],0x0
   14001d57c:	mov    r8b,BYTE PTR [rsp+0x30]
   14001d581:	mov    rdx,rdi
   14001d584:	mov    rcx,rbx
   14001d587:	call   0x14001b964
   14001d58c:	mov    rcx,QWORD PTR [rsi]
   14001d58f:	add    rcx,0x18
   14001d593:	lea    rax,[rsp+0x50]
   14001d598:	cmp    rcx,rax
   14001d59b:	je     0x14001d5c0
   14001d59d:	mov    r9,QWORD PTR [rcx]
   14001d5a0:	mov    rax,QWORD PTR [rsp+0x50]
   14001d5a5:	mov    QWORD PTR [rcx],rax
   14001d5a8:	mov    rax,QWORD PTR [rsp+0x58]
   14001d5ad:	mov    QWORD PTR [rcx+0x8],rax
   14001d5b1:	mov    rdx,QWORD PTR [rcx+0x10]
   14001d5b5:	mov    rax,QWORD PTR [rsp+0x60]
   14001d5ba:	mov    QWORD PTR [rcx+0x10],rax
   14001d5be:	jmp    0x14001d5ca
   14001d5c0:	mov    rdx,QWORD PTR [rsp+0x60]
   14001d5c5:	mov    r9,QWORD PTR [rsp+0x50]
   14001d5ca:	test   r9,r9
   14001d5cd:	je     0x14001d5de
   14001d5cf:	sub    rdx,r9
   14001d5d2:	mov    r8,r15
   14001d5d5:	mov    rcx,r9
   14001d5d8:	call   0x140004804
   14001d5dd:	nop
   14001d5de:	mov    rcx,QWORD PTR [rsp+0x38]
   14001d5e3:	test   rcx,rcx
   14001d5e6:	je     0x14001d5f0
   14001d5e8:	mov    edx,r15d
   14001d5eb:	call   0x14001cd68
   14001d5f0:	mov    rax,rsi
   14001d5f3:	mov    rcx,QWORD PTR [rbp+0x60]
   14001d5f7:	xor    rcx,rsp
   14001d5fa:	call   0x140025df0
   14001d5ff:	add    rsp,0x170
   14001d606:	pop    r15
   14001d608:	pop    rdi
   14001d609:	pop    rsi
   14001d60a:	pop    rbx
   14001d60b:	pop    rbp
   14001d60c:	ret    
   14001d60d:	int3   
   14001d60e:	int3   
   14001d60f:	int3   
   14001d610:	mov    r11,rsp
   14001d613:	push   r14
   14001d615:	sub    rsp,0x160
   14001d61c:	mov    QWORD PTR [r11-0x60],0xfffffffffffffffe
   14001d624:	mov    QWORD PTR [r11+0x10],rbx
   14001d628:	mov    QWORD PTR [r11+0x18],rsi
   14001d62c:	mov    rax,QWORD PTR [rip+0x53a1d]        # 0x140071050
   14001d633:	xor    rax,rsp
   14001d636:	mov    QWORD PTR [rsp+0x150],rax
   14001d63e:	mov    rbx,r9
   14001d641:	mov    rsi,rcx
   14001d644:	sub    r8d,0x1
   14001d648:	je     0x14001dcbf
   14001d64e:	sub    r8d,0x1
   14001d652:	je     0x14001dbef
   14001d658:	sub    r8d,0x2
   14001d65c:	je     0x14001db1f
   14001d662:	sub    r8d,0x4
   14001d666:	je     0x14001da4f
   14001d66c:	sub    r8d,0x18
   14001d670:	je     0x14001d98c
   14001d676:	sub    r8d,0xa0
   14001d67d:	je     0x14001d8c9
   14001d683:	cmp    r8d,0xff40
   14001d68a:	jne    0x14001dd8a
   14001d690:	mov    QWORD PTR [r11-0x20],0x7
   14001d698:	xor    r14d,r14d
   14001d69b:	mov    QWORD PTR [r11-0x28],r14
   14001d69f:	mov    WORD PTR [r11-0x38],r14w
   14001d6a4:	lea    rcx,[rip+0x2f5f5]        # 0x14004cca0
   14001d6ab:	call   0x140031108
   14001d6b0:	mov    r8,rax
   14001d6b3:	lea    rdx,[rip+0x2f5e6]        # 0x14004cca0
   14001d6ba:	lea    rcx,[rsp+0x130]
   14001d6c2:	call   0x14000b730
   14001d6c7:	nop
   14001d6c8:	mov    ebx,DWORD PTR [rbx]
   14001d6ca:	test   bl,0x1
   14001d6cd:	je     0x14001d6f2
   14001d6cf:	lea    rcx,[rip+0x2f64a]        # 0x14004cd20
   14001d6d6:	call   0x140031108
   14001d6db:	mov    r8,rax
   14001d6de:	lea    rdx,[rip+0x2f63b]        # 0x14004cd20
   14001d6e5:	lea    rcx,[rsp+0x130]
   14001d6ed:	call   0x14000f260
   14001d6f2:	test   bl,0x2
   14001d6f5:	je     0x14001d71a
   14001d6f7:	lea    rcx,[rip+0x2f692]        # 0x14004cd90
   14001d6fe:	call   0x140031108
   14001d703:	mov    r8,rax
   14001d706:	lea    rdx,[rip+0x2f683]        # 0x14004cd90
   14001d70d:	lea    rcx,[rsp+0x130]
   14001d715:	call   0x14000f260
   14001d71a:	test   bl,0x4
   14001d71d:	je     0x14001d742
   14001d71f:	lea    rcx,[rip+0x2f6da]        # 0x14004ce00
   14001d726:	call   0x140031108
   14001d72b:	mov    r8,rax
   14001d72e:	lea    rdx,[rip+0x2f6cb]        # 0x14004ce00
   14001d735:	lea    rcx,[rsp+0x130]
   14001d73d:	call   0x14000f260
   14001d742:	test   bl,0x8
   14001d745:	je     0x14001d76a
   14001d747:	lea    rcx,[rip+0x2f722]        # 0x14004ce70
   14001d74e:	call   0x140031108
   14001d753:	mov    r8,rax
   14001d756:	lea    rdx,[rip+0x2f713]        # 0x14004ce70
   14001d75d:	lea    rcx,[rsp+0x130]
   14001d765:	call   0x14000f260
   14001d76a:	test   bl,0x10
   14001d76d:	je     0x14001d792
   14001d76f:	lea    rcx,[rip+0x2f76a]        # 0x14004cee0
   14001d776:	call   0x140031108
   14001d77b:	mov    r8,rax
   14001d77e:	lea    rdx,[rip+0x2f75b]        # 0x14004cee0
   14001d785:	lea    rcx,[rsp+0x130]
   14001d78d:	call   0x14000f260
   14001d792:	test   bl,0x20
   14001d795:	je     0x14001d7ba
   14001d797:	lea    rcx,[rip+0x2f7b2]        # 0x14004cf50
   14001d79e:	call   0x140031108
   14001d7a3:	mov    r8,rax
   14001d7a6:	lea    rdx,[rip+0x2f7a3]        # 0x14004cf50
   14001d7ad:	lea    rcx,[rsp+0x130]
   14001d7b5:	call   0x14000f260
   14001d7ba:	test   ebx,ebx
   14001d7bc:	jns    0x14001d7e1
   14001d7be:	lea    rcx,[rip+0x2f7fb]        # 0x14004cfc0
   14001d7c5:	call   0x140031108
   14001d7ca:	mov    r8,rax
   14001d7cd:	lea    rdx,[rip+0x2f7ec]        # 0x14004cfc0
   14001d7d4:	lea    rcx,[rsp+0x130]
   14001d7dc:	call   0x14000f260
   14001d7e1:	mov    edx,0x2
   14001d7e6:	lea    r8d,[rdx-0x1]
   14001d7ea:	lea    rcx,[rsp+0x20]
   14001d7ef:	call   0x14000be9c
   14001d7f4:	nop
   14001d7f5:	lea    rdx,[rip+0x2f054]        # 0x14004c850
   14001d7fc:	lea    rcx,[rsp+0x20]
   14001d801:	call   0x140010488
   14001d806:	mov    rax,QWORD PTR [rsp+0x20]
   14001d80b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001d80f:	and    DWORD PTR [rsp+rcx*1+0x38],0xfffff9ff
   14001d817:	bts    DWORD PTR [rsp+rcx*1+0x38],0xb
   14001d81d:	mov    rdx,rsi
   14001d820:	lea    rcx,[rsp+0x20]
   14001d825:	call   0x14001cbf0
   14001d82a:	lea    rdx,[rip+0x2e7ff]        # 0x14004c030
   14001d831:	lea    rcx,[rsp+0x20]
   14001d836:	call   0x140010488
   14001d83b:	lea    rdx,[rsp+0x130]
   14001d843:	lea    rcx,[rsp+0x20]
   14001d848:	call   0x1400106b0
   14001d84d:	lea    rdx,[rsp+0x110]
   14001d855:	lea    rcx,[rsp+0x20]
   14001d85a:	call   0x14000a950
   14001d85f:	nop
   14001d860:	lea    rdx,[rsp+0x110]
   14001d868:	mov    ecx,0x1
   14001d86d:	call   0x14001a654
   14001d872:	nop
   14001d873:	xor    r8d,r8d
   14001d876:	mov    dl,0x1
   14001d878:	lea    rcx,[rsp+0x110]
   14001d880:	call   0x14000b6b0
   14001d885:	nop
   14001d886:	lea    rcx,[rsp+0xa8]
   14001d88e:	call   0x14000a9dc
   14001d893:	nop
   14001d894:	lea    rax,[rip+0x2e07d]        # 0x14004b918
   14001d89b:	mov    QWORD PTR [rsp+0xa8],rax
   14001d8a3:	lea    rcx,[rsp+0xa8]
   14001d8ab:	call   0x140027b0c
   14001d8b0:	nop
   14001d8b1:	xor    r8d,r8d
   14001d8b4:	mov    dl,0x1
   14001d8b6:	lea    rcx,[rsp+0x130]
   14001d8be:	call   0x14000b6b0
   14001d8c3:	nop
   14001d8c4:	jmp    0x14001dd8a
   14001d8c9:	mov    edx,0x2
   14001d8ce:	lea    r8d,[rdx-0x1]
   14001d8d2:	lea    rcx,[rsp+0x20]
   14001d8d7:	call   0x14000be9c
   14001d8dc:	nop
   14001d8dd:	lea    rdx,[rip+0x2ef6c]        # 0x14004c850
   14001d8e4:	lea    rcx,[rsp+0x20]
   14001d8e9:	call   0x140010488
   14001d8ee:	mov    rax,QWORD PTR [rsp+0x20]
   14001d8f3:	movsxd rdx,DWORD PTR [rax+0x4]
   14001d8f7:	and    DWORD PTR [rsp+rdx*1+0x38],0xfffff9ff
   14001d8ff:	bts    DWORD PTR [rsp+rdx*1+0x38],0xb
   14001d905:	mov    rdx,rsi
   14001d908:	lea    rcx,[rsp+0x20]
   14001d90d:	call   0x14001cbf0
   14001d912:	lea    rdx,[rip+0x2f7f7]        # 0x14004d110
   14001d919:	lea    rcx,[rsp+0x20]
   14001d91e:	call   0x140010488
   14001d923:	lea    rdx,[rsp+0x110]
   14001d92b:	lea    rcx,[rsp+0x20]
   14001d930:	call   0x14000a950
   14001d935:	nop
   14001d936:	lea    rdx,[rsp+0x110]
   14001d93e:	mov    ecx,0x4
   14001d943:	call   0x14001a654
   14001d948:	nop
   14001d949:	xor    r8d,r8d
   14001d94c:	mov    dl,0x1
   14001d94e:	lea    rcx,[rsp+0x110]
   14001d956:	call   0x14000b6b0
   14001d95b:	nop
   14001d95c:	lea    rcx,[rsp+0xa8]
   14001d964:	call   0x14000a9dc
   14001d969:	nop
   14001d96a:	lea    rax,[rip+0x2dfa7]        # 0x14004b918
   14001d971:	mov    QWORD PTR [rsp+0xa8],rax
   14001d979:	lea    rcx,[rsp+0xa8]
   14001d981:	call   0x140027b0c
   14001d986:	nop
   14001d987:	jmp    0x14001dd8a
   14001d98c:	mov    edx,0x2
   14001d991:	lea    r8d,[rdx-0x1]
   14001d995:	lea    rcx,[rsp+0x20]
   14001d99a:	call   0x14000be9c
   14001d99f:	nop
   14001d9a0:	lea    rdx,[rip+0x2eea9]        # 0x14004c850
   14001d9a7:	lea    rcx,[rsp+0x20]
   14001d9ac:	call   0x140010488
   14001d9b1:	mov    rax,QWORD PTR [rsp+0x20]
   14001d9b6:	movsxd rcx,DWORD PTR [rax+0x4]
   14001d9ba:	and    DWORD PTR [rsp+rcx*1+0x38],0xfffff9ff
   14001d9c2:	bts    DWORD PTR [rsp+rcx*1+0x38],0xb
   14001d9c8:	mov    rdx,rsi
   14001d9cb:	lea    rcx,[rsp+0x20]
   14001d9d0:	call   0x14001cbf0
   14001d9d5:	lea    rdx,[rip+0x2f714]        # 0x14004d0f0
   14001d9dc:	lea    rcx,[rsp+0x20]
   14001d9e1:	call   0x140010488
   14001d9e6:	lea    rdx,[rsp+0x110]
   14001d9ee:	lea    rcx,[rsp+0x20]
   14001d9f3:	call   0x14000a950
   14001d9f8:	nop
   14001d9f9:	lea    rdx,[rsp+0x110]
   14001da01:	mov    ecx,0x4
   14001da06:	call   0x14001a654
   14001da0b:	nop
   14001da0c:	xor    r8d,r8d
   14001da0f:	mov    dl,0x1
   14001da11:	lea    rcx,[rsp+0x110]
   14001da19:	call   0x14000b6b0
   14001da1e:	nop
   14001da1f:	lea    rcx,[rsp+0xa8]
   14001da27:	call   0x14000a9dc
   14001da2c:	nop
   14001da2d:	lea    rax,[rip+0x2dee4]        # 0x14004b918
   14001da34:	mov    QWORD PTR [rsp+0xa8],rax
   14001da3c:	lea    rcx,[rsp+0xa8]
   14001da44:	call   0x140027b0c
   14001da49:	nop
   14001da4a:	jmp    0x14001dd8a
   14001da4f:	mov    edx,0x2
   14001da54:	lea    r8d,[rdx-0x1]
   14001da58:	lea    rcx,[rsp+0x20]
   14001da5d:	call   0x14000be9c
   14001da62:	nop
   14001da63:	lea    rdx,[rip+0x2ede6]        # 0x14004c850
   14001da6a:	lea    rcx,[rsp+0x20]
   14001da6f:	call   0x140010488
   14001da74:	mov    rax,QWORD PTR [rsp+0x20]
   14001da79:	movsxd rcx,DWORD PTR [rax+0x4]
   14001da7d:	and    DWORD PTR [rsp+rcx*1+0x38],0xfffff9ff
   14001da85:	bts    DWORD PTR [rsp+rcx*1+0x38],0xb
   14001da8b:	mov    rdx,rsi
   14001da8e:	lea    rcx,[rsp+0x20]
   14001da93:	call   0x14001cbf0
   14001da98:	lea    rdx,[rip+0x2f621]        # 0x14004d0c0
   14001da9f:	lea    rcx,[rsp+0x20]
   14001daa4:	call   0x140010488
   14001daa9:	mov    rdx,rbx
   14001daac:	lea    rcx,[rsp+0x20]
   14001dab1:	call   0x140010488
   14001dab6:	lea    rdx,[rsp+0x110]
   14001dabe:	lea    rcx,[rsp+0x20]
   14001dac3:	call   0x14000a950
   14001dac8:	nop
   14001dac9:	lea    rdx,[rsp+0x110]
   14001dad1:	mov    ecx,0x4
   14001dad6:	call   0x14001a654
   14001dadb:	nop
   14001dadc:	xor    r8d,r8d
   14001dadf:	mov    dl,0x1
   14001dae1:	lea    rcx,[rsp+0x110]
   14001dae9:	call   0x14000b6b0
   14001daee:	nop
   14001daef:	lea    rcx,[rsp+0xa8]
   14001daf7:	call   0x14000a9dc
   14001dafc:	nop
   14001dafd:	lea    rax,[rip+0x2de14]        # 0x14004b918
   14001db04:	mov    QWORD PTR [rsp+0xa8],rax
   14001db0c:	lea    rcx,[rsp+0xa8]
   14001db14:	call   0x140027b0c
   14001db19:	nop
   14001db1a:	jmp    0x14001dd8a
   14001db1f:	mov    edx,0x2
   14001db24:	lea    r8d,[rdx-0x1]
   14001db28:	lea    rcx,[rsp+0x20]
   14001db2d:	call   0x14000be9c
   14001db32:	nop
   14001db33:	lea    rdx,[rip+0x2ed16]        # 0x14004c850
   14001db3a:	lea    rcx,[rsp+0x20]
   14001db3f:	call   0x140010488
   14001db44:	mov    rax,QWORD PTR [rsp+0x20]
   14001db49:	movsxd rcx,DWORD PTR [rax+0x4]
   14001db4d:	and    DWORD PTR [rsp+rcx*1+0x38],0xfffff9ff
   14001db55:	bts    DWORD PTR [rsp+rcx*1+0x38],0xb
   14001db5b:	mov    rdx,rsi
   14001db5e:	lea    rcx,[rsp+0x20]
   14001db63:	call   0x14001cbf0
   14001db68:	lea    rdx,[rip+0x2f521]        # 0x14004d090
   14001db6f:	lea    rcx,[rsp+0x20]
   14001db74:	call   0x140010488
   14001db79:	mov    rdx,rbx
   14001db7c:	lea    rcx,[rsp+0x20]
   14001db81:	call   0x140010488
   14001db86:	lea    rdx,[rsp+0x110]
   14001db8e:	lea    rcx,[rsp+0x20]
   14001db93:	call   0x14000a950
   14001db98:	nop
   14001db99:	lea    rdx,[rsp+0x110]
   14001dba1:	mov    ecx,0x4
   14001dba6:	call   0x14001a654
   14001dbab:	nop
   14001dbac:	xor    r8d,r8d
   14001dbaf:	mov    dl,0x1
   14001dbb1:	lea    rcx,[rsp+0x110]
   14001dbb9:	call   0x14000b6b0
   14001dbbe:	nop
   14001dbbf:	lea    rcx,[rsp+0xa8]
   14001dbc7:	call   0x14000a9dc
   14001dbcc:	nop
   14001dbcd:	lea    rax,[rip+0x2dd44]        # 0x14004b918
   14001dbd4:	mov    QWORD PTR [rsp+0xa8],rax
   14001dbdc:	lea    rcx,[rsp+0xa8]
   14001dbe4:	call   0x140027b0c
   14001dbe9:	nop
   14001dbea:	jmp    0x14001dd8a
   14001dbef:	mov    edx,0x2
   14001dbf4:	lea    r8d,[rdx-0x1]
   14001dbf8:	lea    rcx,[rsp+0x20]
   14001dbfd:	call   0x14000be9c
   14001dc02:	nop
   14001dc03:	lea    rdx,[rip+0x2ec46]        # 0x14004c850
   14001dc0a:	lea    rcx,[rsp+0x20]
   14001dc0f:	call   0x140010488
   14001dc14:	mov    rax,QWORD PTR [rsp+0x20]
   14001dc19:	movsxd rcx,DWORD PTR [rax+0x4]
   14001dc1d:	and    DWORD PTR [rsp+rcx*1+0x38],0xfffff9ff
   14001dc25:	bts    DWORD PTR [rsp+rcx*1+0x38],0xb
   14001dc2b:	mov    rdx,rsi
   14001dc2e:	lea    rcx,[rsp+0x20]
   14001dc33:	call   0x14001cbf0
   14001dc38:	lea    rdx,[rip+0x2f429]        # 0x14004d068
   14001dc3f:	lea    rcx,[rsp+0x20]
   14001dc44:	call   0x140010488
   14001dc49:	mov    rdx,rbx
   14001dc4c:	lea    rcx,[rsp+0x20]
   14001dc51:	call   0x140010488
   14001dc56:	lea    rdx,[rsp+0x110]
   14001dc5e:	lea    rcx,[rsp+0x20]
   14001dc63:	call   0x14000a950
   14001dc68:	nop
   14001dc69:	lea    rdx,[rsp+0x110]
   14001dc71:	mov    ecx,0x4
   14001dc76:	call   0x14001a654
   14001dc7b:	nop
   14001dc7c:	xor    r8d,r8d
   14001dc7f:	mov    dl,0x1
   14001dc81:	lea    rcx,[rsp+0x110]
   14001dc89:	call   0x14000b6b0
   14001dc8e:	nop
   14001dc8f:	lea    rcx,[rsp+0xa8]
   14001dc97:	call   0x14000a9dc
   14001dc9c:	nop
   14001dc9d:	lea    rax,[rip+0x2dc74]        # 0x14004b918
   14001dca4:	mov    QWORD PTR [rsp+0xa8],rax
   14001dcac:	lea    rcx,[rsp+0xa8]
   14001dcb4:	call   0x140027b0c
   14001dcb9:	nop
   14001dcba:	jmp    0x14001dd8a
   14001dcbf:	mov    edx,0x2
   14001dcc4:	lea    r8d,[rdx-0x1]
   14001dcc8:	lea    rcx,[rsp+0x20]
   14001dccd:	call   0x14000be9c
   14001dcd2:	nop
   14001dcd3:	lea    rdx,[rip+0x2eb76]        # 0x14004c850
   14001dcda:	lea    rcx,[rsp+0x20]
   14001dcdf:	call   0x140010488
   14001dce4:	mov    rax,QWORD PTR [rsp+0x20]
   14001dce9:	movsxd rcx,DWORD PTR [rax+0x4]
   14001dced:	and    DWORD PTR [rsp+rcx*1+0x38],0xfffff9ff
   14001dcf5:	bts    DWORD PTR [rsp+rcx*1+0x38],0xb
   14001dcfb:	mov    rdx,rsi
   14001dcfe:	lea    rcx,[rsp+0x20]
   14001dd03:	call   0x14001cbf0
   14001dd08:	lea    rdx,[rip+0x2f331]        # 0x14004d040
   14001dd0f:	lea    rcx,[rsp+0x20]
   14001dd14:	call   0x140010488
   14001dd19:	mov    rdx,rbx
   14001dd1c:	lea    rcx,[rsp+0x20]
   14001dd21:	call   0x140010488
   14001dd26:	lea    rdx,[rsp+0x110]
   14001dd2e:	lea    rcx,[rsp+0x20]
   14001dd33:	call   0x14000a950
   14001dd38:	nop
   14001dd39:	lea    rdx,[rsp+0x110]
   14001dd41:	mov    ecx,0x4
   14001dd46:	call   0x14001a654
   14001dd4b:	nop
   14001dd4c:	xor    r8d,r8d
   14001dd4f:	mov    dl,0x1
   14001dd51:	lea    rcx,[rsp+0x110]
   14001dd59:	call   0x14000b6b0
   14001dd5e:	nop
   14001dd5f:	lea    rcx,[rsp+0xa8]
   14001dd67:	call   0x14000a9dc
   14001dd6c:	nop
   14001dd6d:	lea    rax,[rip+0x2dba4]        # 0x14004b918
   14001dd74:	mov    QWORD PTR [rsp+0xa8],rax
   14001dd7c:	lea    rcx,[rsp+0xa8]
   14001dd84:	call   0x140027b0c
   14001dd89:	nop
   14001dd8a:	mov    rcx,QWORD PTR [rsp+0x150]
   14001dd92:	xor    rcx,rsp
   14001dd95:	call   0x140025df0
   14001dd9a:	lea    r11,[rsp+0x160]
   14001dda2:	mov    rbx,QWORD PTR [r11+0x18]
   14001dda6:	mov    rsi,QWORD PTR [r11+0x20]
   14001ddaa:	mov    rsp,r11
   14001ddad:	pop    r14
   14001ddaf:	ret    
   14001ddb0:	mov    QWORD PTR [rsp+0x8],rcx
   14001ddb5:	sub    rsp,0x38
   14001ddb9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001ddc2:	mov    r8b,0x1
   14001ddc5:	mov    edx,0x60
   14001ddca:	lea    ecx,[rdx-0x5f]
   14001ddcd:	call   0x140004798
   14001ddd2:	mov    QWORD PTR [rsp+0x40],rax
   14001ddd7:	test   rax,rax
   14001ddda:	je     0x14001dddf
   14001dddc:	mov    QWORD PTR [rax],rax
   14001dddf:	lea    rcx,[rax+0x8]
   14001dde3:	test   rcx,rcx
   14001dde6:	je     0x14001ddeb
   14001dde8:	mov    QWORD PTR [rcx],rax
   14001ddeb:	lea    rcx,[rax+0x10]
   14001ddef:	test   rcx,rcx
   14001ddf2:	je     0x14001ddf7
   14001ddf4:	mov    QWORD PTR [rcx],rax
   14001ddf7:	mov    WORD PTR [rax+0x18],0x101
   14001ddfd:	add    rsp,0x38
   14001de01:	ret    
   14001de02:	int3   
   14001de03:	int3   
   14001de04:	mov    rax,rsp
   14001de07:	push   rbp
   14001de08:	push   rsi
   14001de09:	push   rdi
   14001de0a:	lea    rbp,[rax-0x1c8]
   14001de11:	sub    rsp,0x2b0
   14001de18:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14001de21:	mov    QWORD PTR [rax+0x18],rbx
   14001de25:	mov    rax,QWORD PTR [rip+0x53224]        # 0x140071050
   14001de2c:	xor    rax,rsp
   14001de2f:	mov    QWORD PTR [rbp+0x1a0],rax
   14001de36:	mov    rbx,rdx
   14001de39:	mov    rdi,rcx
   14001de3c:	mov    rcx,rdx
   14001de3f:	call   0x14001b424
   14001de44:	xor    esi,esi
   14001de46:	test   al,al
   14001de48:	jne    0x14001e12c
   14001de4e:	mov    QWORD PTR [rbp+0x48],0x7
   14001de56:	mov    QWORD PTR [rbp+0x40],rsi
   14001de5a:	mov    WORD PTR [rbp+0x30],si
   14001de5e:	lea    rdx,[rsp+0x30]
   14001de63:	mov    rcx,rbx
   14001de66:	call   0x14001b414
   14001de6b:	jmp    0x14001df40
   14001de70:	lea    rdx,[rcx+0x20]
   14001de74:	lea    r8,[rip+0x2e1b5]        # 0x14004c030
   14001de7b:	lea    rcx,[rbp+0x70]
   14001de7f:	call   0x14000d720
   14001de84:	nop
   14001de85:	mov    r8,QWORD PTR [rsp+0x30]
   14001de8a:	add    r8,0x40
   14001de8e:	mov    rdx,rax
   14001de91:	lea    rcx,[rbp+0x180]
   14001de98:	call   0x14000d88c
   14001de9d:	nop
   14001de9e:	lea    r8,[rip+0x2e99f]        # 0x14004c844
   14001dea5:	mov    rdx,rax
   14001dea8:	lea    rcx,[rbp+0x50]
   14001deac:	call   0x14000d824
   14001deb1:	nop
   14001deb2:	or     r9,0xffffffffffffffff
   14001deb6:	xor    r8d,r8d
   14001deb9:	mov    rdx,rax
   14001debc:	lea    rcx,[rbp+0x30]
   14001dec0:	call   0x14000f3bc
   14001dec5:	nop
   14001dec6:	xor    r8d,r8d
   14001dec9:	mov    dl,0x1
   14001decb:	lea    rcx,[rbp+0x50]
   14001decf:	call   0x14000b6b0
   14001ded4:	nop
   14001ded5:	xor    r8d,r8d
   14001ded8:	mov    dl,0x1
   14001deda:	lea    rcx,[rbp+0x180]
   14001dee1:	call   0x14000b6b0
   14001dee6:	nop
   14001dee7:	xor    r8d,r8d
   14001deea:	mov    dl,0x1
   14001deec:	lea    rcx,[rbp+0x70]
   14001def0:	call   0x14000b6b0
   14001def5:	mov    rax,QWORD PTR [rsp+0x30]
   14001defa:	cmp    BYTE PTR [rax+0x19],sil
   14001defe:	jne    0x14001df40
   14001df00:	mov    rcx,QWORD PTR [rax+0x10]
   14001df04:	cmp    BYTE PTR [rcx+0x19],sil
   14001df08:	jne    0x14001df1d
   14001df0a:	mov    rax,QWORD PTR [rcx]
   14001df0d:	jmp    0x14001df15
   14001df0f:	mov    rcx,rax
   14001df12:	mov    rax,QWORD PTR [rax]
   14001df15:	cmp    BYTE PTR [rax+0x19],sil
   14001df19:	je     0x14001df0f
   14001df1b:	jmp    0x14001df3b
   14001df1d:	mov    rcx,QWORD PTR [rax+0x8]
   14001df21:	jmp    0x14001df35
   14001df23:	cmp    rax,QWORD PTR [rcx+0x10]
   14001df27:	jne    0x14001df3b
   14001df29:	mov    rax,rcx
   14001df2c:	mov    QWORD PTR [rsp+0x30],rcx
   14001df31:	mov    rcx,QWORD PTR [rcx+0x8]
   14001df35:	cmp    BYTE PTR [rcx+0x19],sil
   14001df39:	je     0x14001df23
   14001df3b:	mov    QWORD PTR [rsp+0x30],rcx
   14001df40:	lea    rdx,[rsp+0x38]
   14001df45:	mov    rcx,rbx
   14001df48:	call   0x14001b430
   14001df4d:	mov    rcx,QWORD PTR [rsp+0x30]
   14001df52:	cmp    rcx,QWORD PTR [rax]
   14001df55:	jne    0x14001de70
   14001df5b:	mov    rax,QWORD PTR [rbp+0x40]
   14001df5f:	lea    rdx,[rax-0x2]
   14001df63:	cmp    rdx,rax
   14001df66:	ja     0x14001df80
   14001df68:	mov    QWORD PTR [rbp+0x40],rdx
   14001df6c:	lea    rax,[rbp+0x30]
   14001df70:	cmp    QWORD PTR [rbp+0x48],0x8
   14001df75:	cmovae rax,QWORD PTR [rbp+0x30]
   14001df7a:	mov    WORD PTR [rax+rdx*2],si
   14001df7e:	jmp    0x14001df8f
   14001df80:	xor    r8d,r8d
   14001df83:	sub    rdx,rax
   14001df86:	lea    rcx,[rbp+0x30]
   14001df8a:	call   0x140018e08
   14001df8f:	mov    edx,0x2
   14001df94:	lea    r8d,[rdx-0x1]
   14001df98:	lea    rcx,[rbp+0x90]
   14001df9f:	call   0x14000be9c
   14001dfa4:	nop
   14001dfa5:	lea    rdx,[rip+0x2e8a4]        # 0x14004c850
   14001dfac:	lea    rcx,[rbp+0x90]
   14001dfb3:	call   0x140010488
   14001dfb8:	mov    rax,QWORD PTR [rbp+0x90]
   14001dfbf:	movsxd rcx,DWORD PTR [rax+0x4]
   14001dfc3:	and    DWORD PTR [rbp+rcx*1+0xa8],0xfffff9ff
   14001dfce:	bts    DWORD PTR [rbp+rcx*1+0xa8],0xb
   14001dfd7:	mov    rdx,rdi
   14001dfda:	lea    rcx,[rbp+0x90]
   14001dfe1:	call   0x14001cbf0
   14001dfe6:	lea    rdx,[rip+0x2e883]        # 0x14004c870
   14001dfed:	lea    rcx,[rbp+0x90]
   14001dff4:	call   0x140010488
   14001dff9:	lea    rdx,[rbp+0x30]
   14001dffd:	lea    rcx,[rbp+0x90]
   14001e004:	call   0x1400106b0
   14001e009:	lea    rdx,[rbp+0x50]
   14001e00d:	lea    rcx,[rbp+0x90]
   14001e014:	call   0x14000a950
   14001e019:	nop
   14001e01a:	lea    rdx,[rbp+0x50]
   14001e01e:	mov    ecx,0x4
   14001e023:	call   0x14001a654
   14001e028:	nop
   14001e029:	xor    r8d,r8d
   14001e02c:	mov    dl,0x1
   14001e02e:	lea    rcx,[rbp+0x50]
   14001e032:	call   0x14000b6b0
   14001e037:	nop
   14001e038:	lea    rcx,[rbp+0x118]
   14001e03f:	call   0x14000a9dc
   14001e044:	nop
   14001e045:	lea    rax,[rip+0x2d8cc]        # 0x14004b918
   14001e04c:	mov    QWORD PTR [rbp+0x118],rax
   14001e053:	lea    rcx,[rbp+0x118]
   14001e05a:	call   0x140027b0c
   14001e05f:	nop
   14001e060:	lea    rdx,[rbp+0x30]
   14001e064:	cmp    QWORD PTR [rbp+0x48],0x8
   14001e069:	cmovae rdx,QWORD PTR [rbp+0x30]
   14001e06e:	mov    r9d,0x20000000
   14001e074:	or     r8d,0xffffffff
   14001e078:	mov    rcx,rdi
   14001e07b:	call   QWORD PTR [rip+0x2d367]        # 0x14004b3e8
   14001e081:	test   eax,eax
   14001e083:	jne    0x14001e11e
   14001e089:	call   QWORD PTR [rip+0x2d051]        # 0x14004b0e0
   14001e08f:	mov    ebx,eax
   14001e091:	mov    edx,0x2
   14001e096:	lea    r8d,[rdx-0x1]
   14001e09a:	lea    rcx,[rsp+0x48]
   14001e09f:	call   0x14000be9c
   14001e0a4:	nop
   14001e0a5:	lea    rdx,[rip+0x2e7f4]        # 0x14004c8a0
   14001e0ac:	lea    rcx,[rsp+0x48]
   14001e0b1:	call   0x140010488
   14001e0b6:	mov    edx,ebx
   14001e0b8:	lea    rcx,[rsp+0x48]
   14001e0bd:	call   0x14000e4d0
   14001e0c2:	lea    rdx,[rbp+0x70]
   14001e0c6:	lea    rcx,[rsp+0x48]
   14001e0cb:	call   0x14000a950
   14001e0d0:	nop
   14001e0d1:	movzx  r8d,bx
   14001e0d5:	or     r8d,0x80070000
   14001e0dc:	test   ebx,ebx
   14001e0de:	cmovle r8d,ebx
   14001e0e2:	mov    DWORD PTR [rsp+0x28],0x1
   14001e0ea:	mov    QWORD PTR [rsp+0x20],0xd9
   14001e0f3:	lea    r9,[rip+0x2e5e6]        # 0x14004c6e0
   14001e0fa:	lea    rdx,[rbp+0x70]
   14001e0fe:	lea    rcx,[rbp+0x90]
   14001e105:	call   0x14001c9c0
   14001e10a:	lea    rdx,[rip+0x5199f]        # 0x14006fab0
   14001e111:	lea    rcx,[rbp+0x90]
   14001e118:	call   0x14002ab88
   14001e11d:	nop
   14001e11e:	xor    r8d,r8d
   14001e121:	mov    dl,0x1
   14001e123:	lea    rcx,[rbp+0x30]
   14001e127:	call   0x14000b6b0
   14001e12c:	mov    rcx,QWORD PTR [rbp+0x1a0]
   14001e133:	xor    rcx,rsp
   14001e136:	call   0x140025df0
   14001e13b:	mov    rbx,QWORD PTR [rsp+0x2e0]
   14001e143:	add    rsp,0x2b0
   14001e14a:	pop    rdi
   14001e14b:	pop    rsi
   14001e14c:	pop    rbp
   14001e14d:	ret    
   14001e14e:	int3   
   14001e14f:	int3   
   14001e150:	mov    QWORD PTR [rsp+0x8],rbx
   14001e155:	mov    r10,r9
   14001e158:	mov    rbx,rdx
   14001e15b:	test   r9,r9
   14001e15e:	je     0x14001e1d2
   14001e160:	mov    rax,QWORD PTR [rcx+0x10]
   14001e164:	cmp    r8,rax
   14001e167:	jae    0x14001e1d2
   14001e169:	cmp    QWORD PTR [rcx+0x18],0x8
   14001e16e:	jb     0x14001e175
   14001e170:	mov    rdx,QWORD PTR [rcx]
   14001e173:	jmp    0x14001e178
   14001e175:	mov    rdx,rcx
   14001e178:	cmp    QWORD PTR [rcx+0x18],0x8
   14001e17d:	lea    r11,[rdx+rax*2]
   14001e181:	jb     0x14001e188
   14001e183:	mov    rax,QWORD PTR [rcx]
   14001e186:	jmp    0x14001e18b
   14001e188:	mov    rax,rcx
   14001e18b:	lea    rax,[rax+r8*2]
   14001e18f:	cmp    rax,r11
   14001e192:	jae    0x14001e1d2
   14001e194:	test   r10,r10
   14001e197:	je     0x14001e1ba
   14001e199:	movzx  r9d,WORD PTR [rax]
   14001e19d:	mov    r8,r10
   14001e1a0:	mov    rdx,rbx
   14001e1a3:	cmp    WORD PTR [rdx],r9w
   14001e1a7:	je     0x14001e1b5
   14001e1a9:	add    rdx,0x2
   14001e1ad:	sub    r8,0x1
   14001e1b1:	jne    0x14001e1a3
   14001e1b3:	xor    edx,edx
   14001e1b5:	test   rdx,rdx
   14001e1b8:	jne    0x14001e1c0
   14001e1ba:	add    rax,0x2
   14001e1be:	jmp    0x14001e18f
   14001e1c0:	cmp    QWORD PTR [rcx+0x18],0x8
   14001e1c5:	jb     0x14001e1ca
   14001e1c7:	mov    rcx,QWORD PTR [rcx]
   14001e1ca:	sub    rax,rcx
   14001e1cd:	sar    rax,1
   14001e1d0:	jmp    0x14001e1d6
   14001e1d2:	or     rax,0xffffffffffffffff
   14001e1d6:	mov    rbx,QWORD PTR [rsp+0x8]
   14001e1db:	ret    
   14001e1dc:	mov    rax,rsp
   14001e1df:	push   rbp
   14001e1e0:	push   rsi
   14001e1e1:	push   rdi
   14001e1e2:	push   r14
   14001e1e4:	push   r15
   14001e1e6:	lea    rbp,[rax-0x168]
   14001e1ed:	sub    rsp,0x240
   14001e1f4:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001e1fd:	mov    QWORD PTR [rax+0x18],rbx
   14001e201:	mov    rax,QWORD PTR [rip+0x52e48]        # 0x140071050
   14001e208:	xor    rax,rsp
   14001e20b:	mov    QWORD PTR [rbp+0x130],rax
   14001e212:	mov    r14,rdx
   14001e215:	mov    rdi,rcx
   14001e218:	xor    r15d,r15d
   14001e21b:	mov    DWORD PTR [rsp+0x34],r15d
   14001e220:	mov    DWORD PTR [rsp+0x30],r15d
   14001e225:	mov    QWORD PTR [rsp+0x28],r15
   14001e22a:	lea    rax,[rsp+0x30]
   14001e22f:	mov    QWORD PTR [rsp+0x20],rax
   14001e234:	xor    r9d,r9d
   14001e237:	xor    r8d,r8d
   14001e23a:	lea    edx,[r15+0x16]
   14001e23e:	mov    rcx,r14
   14001e241:	call   QWORD PTR [rip+0x2d1b1]        # 0x14004b3f8
   14001e247:	mov    ebx,eax
   14001e249:	call   QWORD PTR [rip+0x2ce91]        # 0x14004b0e0
   14001e24f:	mov    esi,eax
   14001e251:	test   ebx,ebx
   14001e253:	jne    0x14001e2e5
   14001e259:	cmp    eax,0x7a
   14001e25c:	je     0x14001e2e5
   14001e262:	lea    edi,[rbx+0x1]
   14001e265:	mov    r8d,edi
   14001e268:	lea    edx,[rbx+0x2]
   14001e26b:	lea    rcx,[rsp+0x40]
   14001e270:	call   0x14000be9c
   14001e275:	nop
   14001e276:	lea    rdx,[rip+0x2e583]        # 0x14004c800
   14001e27d:	lea    rcx,[rsp+0x40]
   14001e282:	call   0x140010488
   14001e287:	mov    edx,esi
   14001e289:	lea    rcx,[rsp+0x40]
   14001e28e:	call   0x14000e4d0
   14001e293:	lea    rdx,[rbp+0x28]
   14001e297:	lea    rcx,[rsp+0x40]
   14001e29c:	call   0x14000a950
   14001e2a1:	nop
   14001e2a2:	movzx  r8d,si
   14001e2a6:	or     r8d,0x80070000
   14001e2ad:	test   esi,esi
   14001e2af:	cmovle r8d,esi
   14001e2b3:	mov    DWORD PTR [rsp+0x28],edi
   14001e2b7:	mov    QWORD PTR [rsp+0x20],0x9a
   14001e2c0:	lea    r9,[rip+0x2e419]        # 0x14004c6e0
   14001e2c7:	lea    rdx,[rbp+0x28]
   14001e2cb:	lea    rcx,[rbp+0x70]
   14001e2cf:	call   0x14001c9c0
   14001e2d4:	lea    rdx,[rip+0x517d5]        # 0x14006fab0
   14001e2db:	lea    rcx,[rbp+0x70]
   14001e2df:	call   0x14002ab88
   14001e2e4:	nop
   14001e2e5:	mov    edx,DWORD PTR [rsp+0x30]
   14001e2e9:	shr    rdx,1
   14001e2ec:	lea    rcx,[rbp+0x28]
   14001e2f0:	call   0x140018858
   14001e2f5:	nop
   14001e2f6:	mov    QWORD PTR [rsp+0x28],r15
   14001e2fb:	lea    rax,[rsp+0x30]
   14001e300:	mov    QWORD PTR [rsp+0x20],rax
   14001e305:	mov    rbx,QWORD PTR [rbp+0x28]
   14001e309:	mov    r9,rbx
   14001e30c:	xor    r8d,r8d
   14001e30f:	lea    edx,[r8+0x16]
   14001e313:	mov    rcx,r14
   14001e316:	call   QWORD PTR [rip+0x2d0dc]        # 0x14004b3f8
   14001e31c:	test   eax,eax
   14001e31e:	jne    0x14001e3b1
   14001e324:	call   QWORD PTR [rip+0x2cdb6]        # 0x14004b0e0
   14001e32a:	mov    ebx,eax
   14001e32c:	mov    edi,0x1
   14001e331:	mov    r8d,edi
   14001e334:	lea    edx,[rdi+0x1]
   14001e337:	lea    rcx,[rsp+0x40]
   14001e33c:	call   0x14000be9c
   14001e341:	nop
   14001e342:	lea    rdx,[rip+0x2e4b7]        # 0x14004c800
   14001e349:	lea    rcx,[rsp+0x40]
   14001e34e:	call   0x140010488
   14001e353:	mov    edx,ebx
   14001e355:	lea    rcx,[rsp+0x40]
   14001e35a:	call   0x14000e4d0
   14001e35f:	lea    rdx,[rbp+0x48]
   14001e363:	lea    rcx,[rsp+0x40]
   14001e368:	call   0x14000a950
   14001e36d:	nop
   14001e36e:	movzx  r8d,bx
   14001e372:	or     r8d,0x80070000
   14001e379:	test   ebx,ebx
   14001e37b:	cmovle r8d,ebx
   14001e37f:	mov    DWORD PTR [rsp+0x28],edi
   14001e383:	mov    QWORD PTR [rsp+0x20],0xab
   14001e38c:	lea    r9,[rip+0x2e34d]        # 0x14004c6e0
   14001e393:	lea    rdx,[rbp+0x48]
   14001e397:	lea    rcx,[rbp+0x70]
   14001e39b:	call   0x14001c9c0
   14001e3a0:	lea    rdx,[rip+0x51709]        # 0x14006fab0
   14001e3a7:	lea    rcx,[rbp+0x70]
   14001e3ab:	call   0x14002ab88
   14001e3b0:	nop
   14001e3b1:	mov    QWORD PTR [rdi+0x18],0x7
   14001e3b9:	mov    QWORD PTR [rdi+0x10],r15
   14001e3bd:	cmp    QWORD PTR [rdi+0x18],0x8
   14001e3c2:	jb     0x14001e3c9
   14001e3c4:	mov    rax,QWORD PTR [rdi]
   14001e3c7:	jmp    0x14001e3cc
   14001e3c9:	mov    rax,rdi
   14001e3cc:	mov    WORD PTR [rax],r15w
   14001e3d0:	mov    r8,QWORD PTR [rbp+0x30]
   14001e3d4:	cmp    rbx,r8
   14001e3d7:	je     0x14001e3eb
   14001e3d9:	sub    r8,rbx
   14001e3dc:	sar    r8,1
   14001e3df:	mov    rdx,rbx
   14001e3e2:	mov    rcx,rdi
   14001e3e5:	call   0x14000b730
   14001e3ea:	nop
   14001e3eb:	test   rbx,rbx
   14001e3ee:	je     0x14001e408
   14001e3f0:	mov    rdx,QWORD PTR [rbp+0x38]
   14001e3f4:	sub    rdx,rbx
   14001e3f7:	sar    rdx,1
   14001e3fa:	mov    r8d,0x2
   14001e400:	mov    rcx,rbx
   14001e403:	call   0x140004804
   14001e408:	mov    rax,rdi
   14001e40b:	mov    rcx,QWORD PTR [rbp+0x130]
   14001e412:	xor    rcx,rsp
   14001e415:	call   0x140025df0
   14001e41a:	mov    rbx,QWORD PTR [rsp+0x280]
   14001e422:	add    rsp,0x240
   14001e429:	pop    r15
   14001e42b:	pop    r14
   14001e42d:	pop    rdi
   14001e42e:	pop    rsi
   14001e42f:	pop    rbp
   14001e430:	ret    
   14001e431:	int3   
   14001e432:	int3   
   14001e433:	int3   
   14001e434:	mov    rax,rsp
   14001e437:	push   rbp
   14001e438:	push   rsi
   14001e439:	push   rdi
   14001e43a:	push   r14
   14001e43c:	push   r15
   14001e43e:	lea    rbp,[rax-0xd8]
   14001e445:	sub    rsp,0x1b0
   14001e44c:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001e455:	mov    QWORD PTR [rax+0x20],rbx
   14001e459:	mov    rax,QWORD PTR [rip+0x52bf0]        # 0x140071050
   14001e460:	xor    rax,rsp
   14001e463:	mov    QWORD PTR [rbp+0xa0],rax
   14001e46a:	mov    rdi,r8
   14001e46d:	mov    r14,rdx
   14001e470:	mov    rbx,rcx
   14001e473:	xor    esi,esi
   14001e475:	mov    DWORD PTR [r8],esi
   14001e478:	mov    QWORD PTR [rsp+0x60],rsi
   14001e47d:	mov    QWORD PTR [rsp+0x68],rsi
   14001e482:	lea    rcx,[rsp+0x60]
   14001e487:	call   0x14001ddb0
   14001e48c:	mov    QWORD PTR [rsp+0x60],rax
   14001e491:	lea    rdx,[rsp+0x60]
   14001e496:	mov    rcx,r14
   14001e499:	call   0x14001cb80
   14001e49e:	nop
   14001e49f:	mov    r8,QWORD PTR [rsp+0x60]
   14001e4a4:	mov    r9,r8
   14001e4a7:	mov    r8,QWORD PTR [r8]
   14001e4aa:	lea    rdx,[rsp+0x50]
   14001e4af:	lea    rcx,[rsp+0x60]
   14001e4b4:	call   0x14000c18c
   14001e4b9:	lea    r8d,[rsi+0x60]
   14001e4bd:	lea    r15d,[rsi+0x1]
   14001e4c1:	mov    edx,r15d
   14001e4c4:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e4c9:	call   0x140004804
   14001e4ce:	nop
   14001e4cf:	xorps  xmm0,xmm0
   14001e4d2:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   14001e4d8:	mov    QWORD PTR [rsp+0x48],rsi
   14001e4dd:	mov    QWORD PTR [rsp+0x78],0x7
   14001e4e6:	mov    QWORD PTR [rsp+0x70],rsi
   14001e4eb:	mov    WORD PTR [rsp+0x60],si
   14001e4f0:	lea    rcx,[rip+0x2e34d]        # 0x14004c844
   14001e4f7:	call   0x140031108
   14001e4fc:	mov    r8,rax
   14001e4ff:	lea    rdx,[rip+0x2e33e]        # 0x14004c844
   14001e506:	lea    rcx,[rsp+0x60]
   14001e50b:	call   0x14000b730
   14001e510:	nop
   14001e511:	xor    r9d,r9d
   14001e514:	lea    r8,[rsp+0x38]
   14001e519:	lea    rdx,[rsp+0x60]
   14001e51e:	mov    rcx,rbx
   14001e521:	call   0x140019224
   14001e526:	nop
   14001e527:	xor    r8d,r8d
   14001e52a:	mov    dl,r15b
   14001e52d:	lea    rcx,[rsp+0x60]
   14001e532:	call   0x14000b6b0
   14001e537:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e53c:	cmp    rcx,QWORD PTR [rsp+0x40]
   14001e541:	sete   al
   14001e544:	test   al,al
   14001e546:	je     0x14001e5ad
   14001e548:	mov    QWORD PTR [rsp+0x78],0x7
   14001e551:	mov    QWORD PTR [rsp+0x70],rsi
   14001e556:	mov    WORD PTR [rsp+0x60],si
   14001e55b:	lea    rcx,[rip+0x2e38e]        # 0x14004c8f0
   14001e562:	call   0x140031108
   14001e567:	mov    r8,rax
   14001e56a:	lea    rdx,[rip+0x2e37f]        # 0x14004c8f0
   14001e571:	lea    rcx,[rsp+0x60]
   14001e576:	call   0x14000b730
   14001e57b:	nop
   14001e57c:	mov    DWORD PTR [rsp+0x20],r15d
   14001e581:	mov    r9d,0xe9
   14001e587:	lea    r8,[rip+0x2e152]        # 0x14004c6e0
   14001e58e:	lea    rdx,[rsp+0x60]
   14001e593:	lea    rcx,[rbp-0x60]
   14001e597:	call   0x140020734
   14001e59c:	lea    rdx,[rip+0x519a5]        # 0x14006ff48
   14001e5a3:	lea    rcx,[rbp-0x60]
   14001e5a7:	call   0x14002ab88
   14001e5ac:	nop
   14001e5ad:	lea    rdx,[rip+0x2d36c]        # 0x14004b920
   14001e5b4:	call   0x140019428
   14001e5b9:	xorps  xmm0,xmm0
   14001e5bc:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14001e5c2:	mov    QWORD PTR [rsp+0x70],rsi
   14001e5c7:	mov    edx,0x20
   14001e5cc:	xor    r9d,r9d
   14001e5cf:	lea    r8,[rsp+0x60]
   14001e5d4:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e5d9:	call   0x14001922c
   14001e5de:	mov    rax,QWORD PTR [rsp+0x68]
   14001e5e3:	mov    rcx,QWORD PTR [rsp+0x60]
   14001e5e8:	sub    rax,rcx
   14001e5eb:	sar    rax,0x5
   14001e5ef:	cmp    rax,0x2
   14001e5f3:	jae    0x14001e63a
   14001e5f5:	mov    r8,QWORD PTR [rsp+0x38]
   14001e5fa:	lea    rdx,[rip+0x2e31f]        # 0x14004c920
   14001e601:	lea    rcx,[rbp-0x80]
   14001e605:	call   0x14001b828
   14001e60a:	nop
   14001e60b:	mov    DWORD PTR [rsp+0x20],r15d
   14001e610:	mov    r9d,0xf3
   14001e616:	lea    r8,[rip+0x2e0c3]        # 0x14004c6e0
   14001e61d:	mov    rdx,rax
   14001e620:	lea    rcx,[rbp-0x60]
   14001e624:	call   0x140020734
   14001e629:	lea    rdx,[rip+0x51918]        # 0x14006ff48
   14001e630:	lea    rcx,[rbp-0x60]
   14001e634:	call   0x14002ab88
   14001e639:	nop
   14001e63a:	mov    BYTE PTR [rsp+0x30],sil
   14001e63f:	add    rcx,0x20
   14001e643:	mov    r8d,0xa
   14001e649:	lea    rdx,[rsp+0x30]
   14001e64e:	call   0x140019400
   14001e653:	mov    DWORD PTR [rdi],eax
   14001e655:	cmp    BYTE PTR [rsp+0x30],sil
   14001e65a:	jne    0x14001e6ce
   14001e65c:	mov    r8,QWORD PTR [rsp+0x60]
   14001e661:	add    r8,0x20
   14001e665:	lea    rdx,[rip+0x2e344]        # 0x14004c9b0
   14001e66c:	lea    rcx,[rbp-0x80]
   14001e670:	call   0x14001b828
   14001e675:	nop
   14001e676:	lea    r8,[rip+0x2e2eb]        # 0x14004c968
   14001e67d:	mov    rdx,rax
   14001e680:	lea    rcx,[rbp+0x60]
   14001e684:	call   0x14000d824
   14001e689:	nop
   14001e68a:	mov    r8,QWORD PTR [rsp+0x38]
   14001e68f:	mov    rdx,rax
   14001e692:	lea    rcx,[rbp+0x80]
   14001e699:	call   0x14000d88c
   14001e69e:	nop
   14001e69f:	mov    DWORD PTR [rsp+0x20],r15d
   14001e6a4:	mov    r9d,0xfb
   14001e6aa:	lea    r8,[rip+0x2e02f]        # 0x14004c6e0
   14001e6b1:	mov    rdx,rax
   14001e6b4:	lea    rcx,[rbp-0x60]
   14001e6b8:	call   0x140020734
   14001e6bd:	lea    rdx,[rip+0x51884]        # 0x14006ff48
   14001e6c4:	lea    rcx,[rbp-0x60]
   14001e6c8:	call   0x14002ab88
   14001e6cd:	nop
   14001e6ce:	lea    rcx,[rsp+0x60]
   14001e6d3:	call   0x140012730
   14001e6d8:	mov    rsi,r15
   14001e6db:	mov    rax,QWORD PTR [rsp+0x40]
   14001e6e0:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e6e5:	sub    rax,rcx
   14001e6e8:	sar    rax,0x5
   14001e6ec:	cmp    r15,rax
   14001e6ef:	jae    0x14001e7d2
   14001e6f5:	mov    edi,0x20
   14001e6fa:	add    rcx,rdi
   14001e6fd:	lea    rdx,[rip+0x2d21c]        # 0x14004b920
   14001e704:	call   0x140019428
   14001e709:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e70e:	add    rbx,rdi
   14001e711:	lea    rcx,[rip+0x2e2d8]        # 0x14004c9f0
   14001e718:	call   0x140031108
   14001e71d:	mov    r9,rax
   14001e720:	xor    r8d,r8d
   14001e723:	lea    rdx,[rip+0x2e2c6]        # 0x14004c9f0
   14001e72a:	mov    rcx,rbx
   14001e72d:	call   0x14001e150
   14001e732:	mov    rbx,rax
   14001e735:	cmp    rax,0xffffffffffffffff
   14001e739:	je     0x14001e7b1
   14001e73b:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e740:	add    rcx,rdi
   14001e743:	mov    r9,rax
   14001e746:	xor    r8d,r8d
   14001e749:	lea    rdx,[rbp-0x80]
   14001e74d:	call   0x140019244
   14001e752:	nop
   14001e753:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e758:	add    rcx,rdi
   14001e75b:	lea    r8,[rbx+0x1]
   14001e75f:	or     r9,0xffffffffffffffff
   14001e763:	lea    rdx,[rsp+0x60]
   14001e768:	call   0x140019244
   14001e76d:	nop
   14001e76e:	lea    rdx,[rip+0x2d1ab]        # 0x14004b920
   14001e775:	lea    rcx,[rsp+0x60]
   14001e77a:	call   0x140019454
   14001e77f:	lea    r8,[rsp+0x60]
   14001e784:	lea    rdx,[rbp-0x80]
   14001e788:	mov    rcx,r14
   14001e78b:	call   0x14001b2ec
   14001e790:	nop
   14001e791:	xor    r8d,r8d
   14001e794:	mov    dl,r15b
   14001e797:	lea    rcx,[rsp+0x60]
   14001e79c:	call   0x14000b6b0
   14001e7a1:	nop
   14001e7a2:	xor    r8d,r8d
   14001e7a5:	mov    dl,r15b
   14001e7a8:	lea    rcx,[rbp-0x80]
   14001e7ac:	call   0x14000b6b0
   14001e7b1:	add    rsi,r15
   14001e7b4:	add    rdi,0x20
   14001e7b8:	mov    rax,QWORD PTR [rsp+0x40]
   14001e7bd:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e7c2:	sub    rax,rcx
   14001e7c5:	sar    rax,0x5
   14001e7c9:	cmp    rsi,rax
   14001e7cc:	jb     0x14001e6fa
   14001e7d2:	lea    rcx,[rsp+0x38]
   14001e7d7:	call   0x140012730
   14001e7dc:	mov    rcx,QWORD PTR [rbp+0xa0]
   14001e7e3:	xor    rcx,rsp
   14001e7e6:	call   0x140025df0
   14001e7eb:	mov    rbx,QWORD PTR [rsp+0x1f8]
   14001e7f3:	add    rsp,0x1b0
   14001e7fa:	pop    r15
   14001e7fc:	pop    r14
   14001e7fe:	pop    rdi
   14001e7ff:	pop    rsi
   14001e800:	pop    rbp
   14001e801:	ret    
   14001e802:	int3   
   14001e803:	int3   
   14001e804:	rex push rbp
   14001e806:	push   rbx
   14001e807:	push   rdi
   14001e808:	lea    rbp,[rsp-0x130]
   14001e810:	sub    rsp,0x230
   14001e817:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001e820:	mov    rax,QWORD PTR [rip+0x52829]        # 0x140071050
   14001e827:	xor    rax,rsp
   14001e82a:	mov    QWORD PTR [rbp+0x128],rax
   14001e831:	mov    ebx,edx
   14001e833:	mov    rdi,rcx
   14001e836:	mov    DWORD PTR [rsp+0x30],r8d
   14001e83b:	test   rcx,rcx
   14001e83e:	setne  cl
   14001e841:	mov    r9d,0x65
   14001e847:	lea    r8,[rip+0x2de92]        # 0x14004c6e0
   14001e84e:	lea    rdx,[rip+0x2defb]        # 0x14004c750
   14001e855:	call   0x1400209ec
   14001e85a:	cmp    DWORD PTR [rsp+0x30],0x0
   14001e85f:	setne  cl
   14001e862:	mov    r9d,0x66
   14001e868:	lea    r8,[rip+0x2de71]        # 0x14004c6e0
   14001e86f:	lea    rdx,[rip+0x2deda]        # 0x14004c750
   14001e876:	call   0x1400209ec
   14001e87b:	mov    DWORD PTR [rbp+0x110],0x3
   14001e885:	mov    DWORD PTR [rbp+0x114],0x6
   14001e88f:	mov    DWORD PTR [rbp+0x118],0x7
   14001e899:	mov    DWORD PTR [rbp+0x11c],0x2
   14001e8a3:	mov    DWORD PTR [rbp+0x120],0x5
   14001e8ad:	xor    eax,eax
   14001e8af:	cmp    ebx,DWORD PTR [rbp+rax*4+0x110]
   14001e8b6:	je     0x14001e917
   14001e8b8:	inc    rax
   14001e8bb:	cmp    rax,0x5
   14001e8bf:	jb     0x14001e8af
   14001e8c1:	lea    rax,[rip+0x2ce80]        # 0x14004b748
   14001e8c8:	mov    QWORD PTR [rbp+0x28],rax
   14001e8cc:	xor    eax,eax
   14001e8ce:	mov    QWORD PTR [rbp+0x30],rax
   14001e8d2:	mov    QWORD PTR [rbp+0x38],rax
   14001e8d6:	lea    rax,[rip+0x2dedb]        # 0x14004c7b8
   14001e8dd:	mov    QWORD PTR [rbp+0x110],rax
   14001e8e4:	mov    BYTE PTR [rbp+0x118],0x1
   14001e8eb:	lea    rdx,[rbp+0x30]
   14001e8ef:	lea    rcx,[rbp+0x110]
   14001e8f6:	call   0x140028f04
   14001e8fb:	lea    rax,[rip+0x2ce8e]        # 0x14004b790
   14001e902:	mov    QWORD PTR [rbp+0x28],rax
   14001e906:	lea    rdx,[rip+0x51113]        # 0x14006fa20
   14001e90d:	lea    rcx,[rbp+0x28]
   14001e911:	call   0x14002ab88
   14001e916:	int3   
   14001e917:	mov    r9d,0x4
   14001e91d:	lea    r8,[rsp+0x30]
   14001e922:	mov    edx,ebx
   14001e924:	mov    rcx,rdi
   14001e927:	call   QWORD PTR [rip+0x2cad3]        # 0x14004b400
   14001e92d:	test   eax,eax
   14001e92f:	jne    0x14001e9c4
   14001e935:	call   QWORD PTR [rip+0x2c7a5]        # 0x14004b0e0
   14001e93b:	mov    ebx,eax
   14001e93d:	mov    edx,0x2
   14001e942:	lea    r8d,[rdx-0x1]
   14001e946:	lea    rcx,[rsp+0x40]
   14001e94b:	call   0x14000be9c
   14001e950:	nop
   14001e951:	lea    rdx,[rip+0x2de20]        # 0x14004c778
   14001e958:	lea    rcx,[rsp+0x40]
   14001e95d:	call   0x140010488
   14001e962:	mov    edx,ebx
   14001e964:	lea    rcx,[rsp+0x40]
   14001e969:	call   0x14000e4d0
   14001e96e:	lea    rdx,[rbp+0x28]
   14001e972:	lea    rcx,[rsp+0x40]
   14001e977:	call   0x14000a950
   14001e97c:	nop
   14001e97d:	movzx  r8d,bx
   14001e981:	or     r8d,0x80070000
   14001e988:	test   ebx,ebx
   14001e98a:	cmovle r8d,ebx
   14001e98e:	mov    DWORD PTR [rsp+0x28],0x1
   14001e996:	mov    QWORD PTR [rsp+0x20],0x7c
   14001e99f:	lea    r9,[rip+0x2dd3a]        # 0x14004c6e0
   14001e9a6:	lea    rdx,[rbp+0x28]
   14001e9aa:	lea    rcx,[rbp+0x50]
   14001e9ae:	call   0x14001c9c0
   14001e9b3:	lea    rdx,[rip+0x510f6]        # 0x14006fab0
   14001e9ba:	lea    rcx,[rbp+0x50]
   14001e9be:	call   0x14002ab88
   14001e9c3:	nop
   14001e9c4:	mov    rcx,QWORD PTR [rbp+0x128]
   14001e9cb:	xor    rcx,rsp
   14001e9ce:	call   0x140025df0
   14001e9d3:	add    rsp,0x230
   14001e9da:	pop    rdi
   14001e9db:	pop    rbx
   14001e9dc:	pop    rbp
   14001e9dd:	ret    
   14001e9de:	int3   
   14001e9df:	int3   
   14001e9e0:	rex push rbp
   14001e9e2:	push   rbx
   14001e9e3:	push   rsi
   14001e9e4:	push   rdi
   14001e9e5:	push   r12
   14001e9e7:	push   r13
   14001e9e9:	push   r14
   14001e9eb:	push   r15
   14001e9ed:	lea    rbp,[rsp-0x198]
   14001e9f5:	sub    rsp,0x298
   14001e9fc:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001ea05:	mov    rax,QWORD PTR [rip+0x52644]        # 0x140071050
   14001ea0c:	xor    rax,rsp
   14001ea0f:	mov    QWORD PTR [rbp+0x180],rax
   14001ea16:	mov    r15,r9
   14001ea19:	mov    rbx,r8
   14001ea1c:	mov    rsi,rdx
   14001ea1f:	mov    rdi,rcx
   14001ea22:	mov    r12,QWORD PTR [rbp+0x200]
   14001ea29:	mov    r14d,0x68
   14001ea2f:	mov    r8d,r14d
   14001ea32:	xor    edx,edx
   14001ea34:	lea    rcx,[rsp+0x40]
   14001ea39:	call   0x14002a910
   14001ea3e:	mov    DWORD PTR [rsp+0x40],r14d
   14001ea43:	lea    r13d,[r14-0x67]
   14001ea47:	mov    DWORD PTR [rsp+0x50],r13d
   14001ea4c:	mov    DWORD PTR [rsp+0x60],r13d
   14001ea51:	mov    DWORD PTR [rbp-0x70],r13d
   14001ea55:	mov    DWORD PTR [rbp-0x60],r13d
   14001ea59:	mov    rax,QWORD PTR [rdi+0x10]
   14001ea5d:	cmp    QWORD PTR [rdi+0x18],0x8
   14001ea62:	jb     0x14001ea67
   14001ea64:	mov    rdi,QWORD PTR [rdi]
   14001ea67:	lea    r9,[rsp+0x40]
   14001ea6c:	xor    r8d,r8d
   14001ea6f:	mov    edx,eax
   14001ea71:	mov    rcx,rdi
   14001ea74:	call   QWORD PTR [rip+0x2c9ae]        # 0x14004b428
   14001ea7a:	xor    edi,edi
   14001ea7c:	test   eax,eax
   14001ea7e:	jne    0x14001eb15
   14001ea84:	call   QWORD PTR [rip+0x2c656]        # 0x14004b0e0
   14001ea8a:	mov    ebx,eax
   14001ea8c:	mov    r8d,r13d
   14001ea8f:	lea    edx,[rdi+0x2]
   14001ea92:	lea    rcx,[rbp-0x50]
   14001ea96:	call   0x14000be9c
   14001ea9b:	nop
   14001ea9c:	lea    rdx,[rip+0x2dc6d]        # 0x14004c710
   14001eaa3:	lea    rcx,[rbp-0x50]
   14001eaa7:	call   0x140010488
   14001eaac:	mov    edx,ebx
   14001eaae:	lea    rcx,[rbp-0x50]
   14001eab2:	call   0x14000e4d0
   14001eab7:	lea    rdx,[rbp+0x98]
   14001eabe:	lea    rcx,[rbp-0x50]
   14001eac2:	call   0x14000a950
   14001eac7:	nop
   14001eac8:	movzx  r8d,bx
   14001eacc:	or     r8d,0x80070000
   14001ead3:	test   ebx,ebx
   14001ead5:	cmovle r8d,ebx
   14001ead9:	mov    DWORD PTR [rsp+0x28],r13d
   14001eade:	mov    QWORD PTR [rsp+0x20],0x55
   14001eae7:	lea    r9,[rip+0x2dbf2]        # 0x14004c6e0
   14001eaee:	lea    rdx,[rbp+0x98]
   14001eaf5:	lea    rcx,[rbp+0xc0]
   14001eafc:	call   0x14001c9c0
   14001eb01:	lea    rdx,[rip+0x50fa8]        # 0x14006fab0
   14001eb08:	lea    rcx,[rbp+0xc0]
   14001eb0f:	call   0x14002ab88
   14001eb14:	nop
   14001eb15:	mov    r14,QWORD PTR [rbp-0x78]
   14001eb19:	cmp    WORD PTR [r14],di
   14001eb1d:	jne    0x14001eb24
   14001eb1f:	mov    rax,rdi
   14001eb22:	jmp    0x14001eb2c
   14001eb24:	mov    rcx,r14
   14001eb27:	call   0x140031108
   14001eb2c:	mov    r8,rax
   14001eb2f:	mov    rdx,r14
   14001eb32:	mov    rcx,rbx
   14001eb35:	call   0x14000b730
   14001eb3a:	mov    r14,QWORD PTR [rsp+0x58]
   14001eb3f:	cmp    WORD PTR [r14],di
   14001eb43:	je     0x14001eb50
   14001eb45:	mov    rcx,r14
   14001eb48:	call   0x140031108
   14001eb4d:	mov    rdi,rax
   14001eb50:	mov    r8,rdi
   14001eb53:	mov    rdx,r14
   14001eb56:	mov    rcx,rsi
   14001eb59:	call   0x14000b730
   14001eb5e:	mov    r9,QWORD PTR [rbx+0x10]
   14001eb62:	cmp    QWORD PTR [rbx+0x18],0x8
   14001eb67:	jb     0x14001eb6c
   14001eb69:	mov    rbx,QWORD PTR [rbx]
   14001eb6c:	xor    r8d,r8d
   14001eb6f:	mov    rdx,rbx
   14001eb72:	mov    rcx,rsi
   14001eb75:	call   0x140018f1c
   14001eb7a:	mov    r9,rax
   14001eb7d:	xor    r8d,r8d
   14001eb80:	lea    rdx,[rbp+0x98]
   14001eb87:	mov    rcx,rsi
   14001eb8a:	call   0x140019244
   14001eb8f:	mov    rbx,rax
   14001eb92:	cmp    rsi,rax
   14001eb95:	je     0x14001ebb1
   14001eb97:	xor    r8d,r8d
   14001eb9a:	mov    dl,r13b
   14001eb9d:	mov    rcx,rsi
   14001eba0:	call   0x14000b6b0
   14001eba5:	mov    rdx,rbx
   14001eba8:	mov    rcx,rsi
   14001ebab:	call   0x14000cfb4
   14001ebb0:	nop
   14001ebb1:	xor    r8d,r8d
   14001ebb4:	mov    dl,r13b
   14001ebb7:	lea    rcx,[rbp+0x98]
   14001ebbe:	call   0x14000b6b0
   14001ebc3:	movzx  eax,WORD PTR [rsp+0x64]
   14001ebc8:	mov    WORD PTR [r15],ax
   14001ebcc:	mov    eax,DWORD PTR [rsp+0x54]
   14001ebd0:	mov    DWORD PTR [r12],eax
   14001ebd4:	mov    rcx,QWORD PTR [rbp+0x180]
   14001ebdb:	xor    rcx,rsp
   14001ebde:	call   0x140025df0
   14001ebe3:	add    rsp,0x298
   14001ebea:	pop    r15
   14001ebec:	pop    r14
   14001ebee:	pop    r13
   14001ebf0:	pop    r12
   14001ebf2:	pop    rdi
   14001ebf3:	pop    rsi
   14001ebf4:	pop    rbx
   14001ebf5:	pop    rbp
   14001ebf6:	ret    
   14001ebf7:	int3   
   14001ebf8:	movsxd rax,DWORD PTR [rcx-0x4]
   14001ebfc:	sub    rcx,rax
   14001ebff:	jmp    0x140020c08
   14001ec04:	mov    r11,rsp
   14001ec07:	mov    QWORD PTR [r11+0x8],rcx
   14001ec0b:	push   rdi
   14001ec0c:	sub    rsp,0x40
   14001ec10:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   14001ec18:	mov    QWORD PTR [r11+0x10],rbx
   14001ec1c:	mov    rax,r9
   14001ec1f:	mov    edi,r8d
   14001ec22:	mov    rbx,rcx
   14001ec25:	xor    r8d,r8d
   14001ec28:	mov    DWORD PTR [r11+0x18],r8d
   14001ec2c:	cmp    DWORD PTR [rsp+0x78],r8d
   14001ec31:	je     0x14001ec64
   14001ec33:	lea    rcx,[rip+0x45646]        # 0x140064280
   14001ec3a:	mov    QWORD PTR [rbx+0x8],rcx
   14001ec3e:	lea    rcx,[rip+0x2cb03]        # 0x14004b748
   14001ec45:	mov    QWORD PTR [rbx+0xa8],rcx
   14001ec4c:	xor    ecx,ecx
   14001ec4e:	mov    QWORD PTR [rbx+0xb0],rcx
   14001ec55:	mov    QWORD PTR [rbx+0xb8],rcx
   14001ec5c:	mov    DWORD PTR [rsp+0x60],0x1
   14001ec64:	mov    DWORD PTR [rsp+0x20],r8d
   14001ec69:	mov    r9,QWORD PTR [rsp+0x70]
   14001ec6e:	mov    r8,rax
   14001ec71:	mov    rcx,rbx
   14001ec74:	call   0x140020734
   14001ec79:	lea    rax,[rip+0x2cfb0]        # 0x14004bc30
   14001ec80:	mov    QWORD PTR [rbx],rax
   14001ec83:	mov    rax,QWORD PTR [rbx+0x8]
   14001ec87:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ec8b:	lea    rax,[rip+0x2cfae]        # 0x14004bc40
   14001ec92:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   14001ec97:	mov    rax,QWORD PTR [rbx+0x8]
   14001ec9b:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ec9f:	lea    edx,[rcx-0xa0]
   14001eca5:	mov    DWORD PTR [rcx+rbx*1+0x4],edx
   14001eca9:	mov    DWORD PTR [rbx+0x98],edi
   14001ecaf:	mov    rax,rbx
   14001ecb2:	mov    rbx,QWORD PTR [rsp+0x58]
   14001ecb7:	add    rsp,0x40
   14001ecbb:	pop    rdi
   14001ecbc:	ret    
   14001ecbd:	int3   
   14001ecbe:	int3   
   14001ecbf:	int3   
   14001ecc0:	rex push rbx
   14001ecc2:	push   rbp
   14001ecc3:	push   rsi
   14001ecc4:	push   rdi
   14001ecc5:	sub    rsp,0x78
   14001ecc9:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14001ecd2:	mov    rax,QWORD PTR [rip+0x52377]        # 0x140071050
   14001ecd9:	xor    rax,rsp
   14001ecdc:	mov    QWORD PTR [rsp+0x68],rax
   14001ece1:	mov    rbp,r9
   14001ece4:	mov    rsi,r8
   14001ece7:	mov    edi,edx
   14001ece9:	mov    rbx,rcx
   14001ecec:	mov    QWORD PTR [rsp+0x40],rcx
   14001ecf1:	and    DWORD PTR [rsp+0x30],0x0
   14001ecf6:	cmp    DWORD PTR [rsp+0xc0],0x0
   14001ecfe:	je     0x14001ed31
   14001ed00:	lea    rax,[rip+0x45579]        # 0x140064280
   14001ed07:	mov    QWORD PTR [rcx+0x8],rax
   14001ed0b:	lea    rax,[rip+0x2ca36]        # 0x14004b748
   14001ed12:	mov    QWORD PTR [rcx+0xa8],rax
   14001ed19:	xor    eax,eax
   14001ed1b:	mov    QWORD PTR [rcx+0xb0],rax
   14001ed22:	mov    QWORD PTR [rcx+0xb8],rax
   14001ed29:	mov    DWORD PTR [rsp+0x30],0x1
   14001ed31:	mov    r8d,edi
   14001ed34:	lea    rdx,[rsp+0x48]
   14001ed39:	call   0x14001ef20
   14001ed3e:	nop
   14001ed3f:	and    DWORD PTR [rsp+0x20],0x0
   14001ed44:	mov    r9,rbp
   14001ed47:	mov    r8,rsi
   14001ed4a:	mov    rdx,rax
   14001ed4d:	mov    rcx,rbx
   14001ed50:	call   0x140020734
   14001ed55:	nop
   14001ed56:	xor    r8d,r8d
   14001ed59:	mov    dl,0x1
   14001ed5b:	lea    rcx,[rsp+0x48]
   14001ed60:	call   0x14000b6b0
   14001ed65:	lea    rax,[rip+0x2cec4]        # 0x14004bc30
   14001ed6c:	mov    QWORD PTR [rbx],rax
   14001ed6f:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ed73:	movsxd rdx,DWORD PTR [rcx+0x4]
   14001ed77:	lea    rax,[rip+0x2cec2]        # 0x14004bc40
   14001ed7e:	mov    QWORD PTR [rdx+rbx*1+0x8],rax
   14001ed83:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ed87:	movsxd rdx,DWORD PTR [rcx+0x4]
   14001ed8b:	lea    r8d,[rdx-0xa0]
   14001ed92:	mov    DWORD PTR [rdx+rbx*1+0x4],r8d
   14001ed97:	mov    DWORD PTR [rbx+0x98],edi
   14001ed9d:	mov    rax,rbx
   14001eda0:	mov    rcx,QWORD PTR [rsp+0x68]
   14001eda5:	xor    rcx,rsp
   14001eda8:	call   0x140025df0
   14001edad:	add    rsp,0x78
   14001edb1:	pop    rdi
   14001edb2:	pop    rsi
   14001edb3:	pop    rbp
   14001edb4:	pop    rbx
   14001edb5:	ret    
   14001edb6:	int3   
   14001edb7:	int3   
   14001edb8:	mov    rax,rsp
   14001edbb:	mov    QWORD PTR [rax+0x8],rcx
   14001edbf:	push   rsi
   14001edc0:	push   rdi
   14001edc1:	push   r14
   14001edc3:	sub    rsp,0x80
   14001edca:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   14001edd2:	mov    QWORD PTR [rax+0x10],rbx
   14001edd6:	mov    esi,edx
   14001edd8:	mov    rdi,rcx
   14001eddb:	xor    ebx,ebx
   14001eddd:	mov    DWORD PTR [rsp+0xb0],ebx
   14001ede4:	mov    rdx,rcx
   14001ede7:	lea    rcx,[rax-0x60]
   14001edeb:	call   0x14000e7e8
   14001edf0:	nop
   14001edf1:	cmp    BYTE PTR [rsp+0x40],bl
   14001edf5:	je     0x14001eea7
   14001edfb:	mov    rax,QWORD PTR [rdi]
   14001edfe:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ee02:	add    rcx,rdi
   14001ee05:	lea    rdx,[rsp+0x60]
   14001ee0a:	call   0x140005600
   14001ee0f:	nop
   14001ee10:	mov    rcx,rax
   14001ee13:	call   0x1400109b0
   14001ee18:	mov    r14,rax
   14001ee1b:	mov    rcx,QWORD PTR [rsp+0x68]
   14001ee20:	test   rcx,rcx
   14001ee23:	je     0x14001ee3d
   14001ee25:	mov    rdx,QWORD PTR [rcx]
   14001ee28:	call   QWORD PTR [rdx+0x10]
   14001ee2b:	test   rax,rax
   14001ee2e:	je     0x14001ee3d
   14001ee30:	mov    r8,QWORD PTR [rax]
   14001ee33:	lea    edx,[rbx+0x1]
   14001ee36:	mov    rcx,rax
   14001ee39:	call   QWORD PTR [r8]
   14001ee3c:	nop
   14001ee3d:	mov    rax,QWORD PTR [rdi]
   14001ee40:	movsxd r9,DWORD PTR [rax+0x4]
   14001ee44:	add    r9,rdi
   14001ee47:	mov    rax,QWORD PTR [r9+0x48]
   14001ee4b:	mov    BYTE PTR [rsp+0x50],0x0
   14001ee50:	mov    QWORD PTR [rsp+0x58],rax
   14001ee55:	movzx  eax,WORD PTR [r9+0x58]
   14001ee5a:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14001ee5f:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14001ee65:	mov    r10,QWORD PTR [r14]
   14001ee68:	mov    DWORD PTR [rsp+0x28],esi
   14001ee6c:	mov    WORD PTR [rsp+0x20],ax
   14001ee71:	lea    r8,[rsp+0x50]
   14001ee76:	lea    rdx,[rsp+0x70]
   14001ee7b:	mov    rcx,r14
   14001ee7e:	call   QWORD PTR [r10+0x48]
   14001ee82:	mov    ecx,0x4
   14001ee87:	cmp    BYTE PTR [rsp+0x70],0x0
   14001ee8c:	cmovne ebx,ecx
   14001ee8f:	mov    DWORD PTR [rsp+0xb0],ebx
   14001ee96:	jmp    0x14001eeac
   14001ee98:	mov    rdi,QWORD PTR [rsp+0xa0]
   14001eea0:	mov    ebx,DWORD PTR [rsp+0xb0]
   14001eea7:	mov    ecx,0x4
   14001eeac:	mov    rax,QWORD PTR [rdi]
   14001eeaf:	movsxd r9,DWORD PTR [rax+0x4]
   14001eeb3:	add    r9,rdi
   14001eeb6:	test   ebx,ebx
   14001eeb8:	je     0x14001eed8
   14001eeba:	mov    edx,DWORD PTR [r9+0x10]
   14001eebe:	or     edx,ebx
   14001eec0:	mov    eax,edx
   14001eec2:	or     eax,ecx
   14001eec4:	cmp    QWORD PTR [r9+0x48],0x0
   14001eec9:	cmove  edx,eax
   14001eecc:	xor    r8d,r8d
   14001eecf:	mov    rcx,r9
   14001eed2:	call   0x1400054f8
   14001eed7:	nop
   14001eed8:	call   0x140027894
   14001eedd:	test   al,al
   14001eedf:	jne    0x14001eeec
   14001eee1:	mov    rcx,QWORD PTR [rsp+0x38]
   14001eee6:	call   0x140010068
   14001eeeb:	nop
   14001eeec:	mov    rdx,QWORD PTR [rsp+0x38]
   14001eef1:	mov    rax,QWORD PTR [rdx]
   14001eef4:	movsxd rcx,DWORD PTR [rax+0x4]
   14001eef8:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14001eefd:	test   rcx,rcx
   14001ef00:	je     0x14001ef09
   14001ef02:	mov    rax,QWORD PTR [rcx]
   14001ef05:	call   QWORD PTR [rax+0x10]
   14001ef08:	nop
   14001ef09:	mov    rax,rdi
   14001ef0c:	mov    rbx,QWORD PTR [rsp+0xa8]
   14001ef14:	add    rsp,0x80
   14001ef1b:	pop    r14
   14001ef1d:	pop    rdi
   14001ef1e:	pop    rsi
   14001ef1f:	ret    
   14001ef20:	mov    rax,rsp
   14001ef23:	push   rbp
   14001ef24:	lea    rbp,[rax-0x38]
   14001ef28:	sub    rsp,0x130
   14001ef2f:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001ef38:	mov    QWORD PTR [rax+0x8],rbx
   14001ef3c:	mov    QWORD PTR [rax+0x10],rdi
   14001ef40:	mov    ebx,r8d
   14001ef43:	mov    rdi,rdx
   14001ef46:	and    DWORD PTR [rsp+0x20],0x0
   14001ef4b:	mov    edx,0x2
   14001ef50:	lea    r8d,[rdx-0x1]
   14001ef54:	lea    rcx,[rsp+0x30]
   14001ef59:	call   0x14000be9c
   14001ef5e:	nop
   14001ef5f:	lea    rdx,[rip+0x2e272]        # 0x14004d1d8
   14001ef66:	lea    rcx,[rsp+0x30]
   14001ef6b:	call   0x140010488
   14001ef70:	mov    rax,QWORD PTR [rsp+0x30]
   14001ef75:	movsxd rcx,DWORD PTR [rax+0x4]
   14001ef79:	and    DWORD PTR [rsp+rcx*1+0x48],0xfffff9ff
   14001ef81:	bts    DWORD PTR [rsp+rcx*1+0x48],0xb
   14001ef87:	mov    edx,0x8
   14001ef8c:	lea    rcx,[rbp+0x20]
   14001ef90:	call   0x14002804c
   14001ef95:	mov    rcx,QWORD PTR [rsp+0x30]
   14001ef9a:	movsxd rdx,DWORD PTR [rcx+0x4]
   14001ef9e:	lea    rcx,[rsp+0x30]
   14001efa3:	add    rcx,rdx
   14001efa6:	mov    rdx,QWORD PTR [rax+0x8]
   14001efaa:	call   QWORD PTR [rax]
   14001efac:	mov    rax,QWORD PTR [rsp+0x30]
   14001efb1:	movsxd rcx,DWORD PTR [rax+0x4]
   14001efb5:	mov    eax,0x30
   14001efba:	mov    WORD PTR [rbp+rcx*1-0x78],ax
   14001efbf:	mov    rax,QWORD PTR [rsp+0x30]
   14001efc4:	movsxd rcx,DWORD PTR [rax+0x4]
   14001efc8:	or     DWORD PTR [rsp+rcx*1+0x48],0x4
   14001efcd:	mov    edx,ebx
   14001efcf:	lea    rcx,[rsp+0x30]
   14001efd4:	call   0x14001edb8
   14001efd9:	mov    rdx,rdi
   14001efdc:	lea    rcx,[rsp+0x30]
   14001efe1:	call   0x14000a950
   14001efe6:	nop
   14001efe7:	lea    rcx,[rbp-0x48]
   14001efeb:	call   0x14000a9dc
   14001eff0:	nop
   14001eff1:	lea    rax,[rip+0x2c920]        # 0x14004b918
   14001eff8:	mov    QWORD PTR [rbp-0x48],rax
   14001effc:	lea    rcx,[rbp-0x48]
   14001f000:	call   0x140027b0c
   14001f005:	nop
   14001f006:	mov    rax,rdi
   14001f009:	lea    r11,[rsp+0x130]
   14001f011:	mov    rbx,QWORD PTR [r11+0x10]
   14001f015:	mov    rdi,QWORD PTR [r11+0x18]
   14001f019:	mov    rsp,r11
   14001f01c:	pop    rbp
   14001f01d:	ret    
   14001f01e:	int3   
   14001f01f:	int3   
   14001f020:	rex push rbx
   14001f022:	sub    rsp,0x20
   14001f026:	test   rdx,rdx
   14001f029:	mov    QWORD PTR [rcx],rdx
   14001f02c:	mov    rbx,rcx
   14001f02f:	lea    r8,[rip+0x2e44a]        # 0x14004d480
   14001f036:	setne  cl
   14001f039:	lea    rdx,[rip+0x2d710]        # 0x14004c750
   14001f040:	mov    r9d,0x144
   14001f046:	call   0x1400209ec
   14001f04b:	mov    rax,rbx
   14001f04e:	add    rsp,0x20
   14001f052:	pop    rbx
   14001f053:	ret    
   14001f054:	rex push rbx
   14001f056:	sub    rsp,0x20
   14001f05a:	mov    rbx,rcx
   14001f05d:	mov    rcx,QWORD PTR [rcx]
   14001f060:	test   rcx,rcx
   14001f063:	je     0x14001f06f
   14001f065:	call   QWORD PTR [rip+0x2bfd5]        # 0x14004b040
   14001f06b:	and    QWORD PTR [rbx],0x0
   14001f06f:	add    rsp,0x20
   14001f073:	pop    rbx
   14001f074:	ret    
   14001f075:	int3   
   14001f076:	int3   
   14001f077:	int3   
   14001f078:	mov    rax,rsp
   14001f07b:	push   rbp
   14001f07c:	push   rsi
   14001f07d:	push   rdi
   14001f07e:	push   r12
   14001f080:	push   r13
   14001f082:	push   r14
   14001f084:	push   r15
   14001f086:	lea    rbp,[rax-0x188]
   14001f08d:	sub    rsp,0x250
   14001f094:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   14001f09d:	mov    QWORD PTR [rax+0x20],rbx
   14001f0a1:	mov    rax,QWORD PTR [rip+0x51fa8]        # 0x140071050
   14001f0a8:	xor    rax,rsp
   14001f0ab:	mov    QWORD PTR [rbp+0x140],rax
   14001f0b2:	mov    rbx,r8
   14001f0b5:	mov    r15,rdx
   14001f0b8:	mov    rdi,rcx
   14001f0bb:	mov    QWORD PTR [rsp+0x68],rdx
   14001f0c0:	xor    r13d,r13d
   14001f0c3:	mov    DWORD PTR [rsp+0x58],r13d
   14001f0c8:	cmp    QWORD PTR [rcx],r13
   14001f0cb:	setne  cl
   14001f0ce:	mov    r9d,0x278
   14001f0d4:	lea    r12,[rip+0x2e3a5]        # 0x14004d480
   14001f0db:	mov    r8,r12
   14001f0de:	lea    rdx,[rip+0x2e453]        # 0x14004d538
   14001f0e5:	call   0x140020948
   14001f0ea:	mov    DWORD PTR [rsp+0x34],r13d
   14001f0ef:	mov    DWORD PTR [rsp+0x38],r13d
   14001f0f4:	cmp    QWORD PTR [rbx+0x18],0x8
   14001f0f9:	jb     0x14001f100
   14001f0fb:	mov    rdx,QWORD PTR [rbx]
   14001f0fe:	jmp    0x14001f103
   14001f100:	mov    rdx,rbx
   14001f103:	lea    rax,[rsp+0x38]
   14001f108:	mov    QWORD PTR [rsp+0x28],rax
   14001f10d:	mov    QWORD PTR [rsp+0x20],r13
   14001f112:	lea    r9,[rsp+0x34]
   14001f117:	xor    r8d,r8d
   14001f11a:	mov    rcx,QWORD PTR [rdi]
   14001f11d:	call   QWORD PTR [rip+0x2bee5]        # 0x14004b008
   14001f123:	mov    esi,eax
   14001f125:	test   eax,eax
   14001f127:	je     0x14001f1b7
   14001f12d:	mov    r14d,0x1
   14001f133:	mov    r8d,r14d
   14001f136:	lea    edx,[r14+0x1]
   14001f13a:	lea    rcx,[rsp+0x70]
   14001f13f:	call   0x14000be9c
   14001f144:	nop
   14001f145:	lea    rdx,[rip+0x2e40c]        # 0x14004d558
   14001f14c:	lea    rcx,[rsp+0x70]
   14001f151:	call   0x140010488
   14001f156:	mov    edx,esi
   14001f158:	lea    rcx,[rsp+0x70]
   14001f15d:	call   0x14001edb8
   14001f162:	lea    rdx,[rbp+0x58]
   14001f166:	lea    rcx,[rsp+0x70]
   14001f16b:	call   0x14000a950
   14001f170:	nop
   14001f171:	movzx  r8d,si
   14001f175:	or     r8d,0x80070000
   14001f17c:	test   esi,esi
   14001f17e:	cmovle r8d,esi
   14001f182:	mov    DWORD PTR [rsp+0x28],r14d
   14001f187:	mov    QWORD PTR [rsp+0x20],0x28b
   14001f190:	mov    r9,r12
   14001f193:	lea    rdx,[rbp+0x58]
   14001f197:	lea    rcx,[rbp+0x80]
   14001f19e:	call   0x14001ec04
   14001f1a3:	lea    rdx,[rip+0x50c5e]        # 0x14006fe08
   14001f1aa:	lea    rcx,[rbp+0x80]
   14001f1b1:	call   0x14002ab88
   14001f1b6:	nop
   14001f1b7:	mov    edx,DWORD PTR [rsp+0x38]
   14001f1bb:	lea    rcx,[rsp+0x40]
   14001f1c0:	call   0x14001962c
   14001f1c5:	nop
   14001f1c6:	mov    eax,DWORD PTR [rsp+0x38]
   14001f1ca:	test   eax,eax
   14001f1cc:	je     0x14001f29c
   14001f1d2:	cmp    QWORD PTR [rbx+0x18],0x8
   14001f1d7:	jb     0x14001f1dc
   14001f1d9:	mov    rbx,QWORD PTR [rbx]
   14001f1dc:	lea    rax,[rsp+0x38]
   14001f1e1:	mov    QWORD PTR [rsp+0x28],rax
   14001f1e6:	mov    rax,QWORD PTR [rsp+0x40]
   14001f1eb:	mov    QWORD PTR [rsp+0x20],rax
   14001f1f0:	lea    r9,[rsp+0x34]
   14001f1f5:	xor    r8d,r8d
   14001f1f8:	mov    rdx,rbx
   14001f1fb:	mov    rcx,QWORD PTR [rdi]
   14001f1fe:	call   QWORD PTR [rip+0x2be04]        # 0x14004b008
   14001f204:	mov    ebx,eax
   14001f206:	test   eax,eax
   14001f208:	je     0x14001f298
   14001f20e:	mov    r14d,0x1
   14001f214:	mov    r8d,r14d
   14001f217:	lea    edx,[r14+0x1]
   14001f21b:	lea    rcx,[rsp+0x70]
   14001f220:	call   0x14000be9c
   14001f225:	nop
   14001f226:	lea    rdx,[rip+0x2e32b]        # 0x14004d558
   14001f22d:	lea    rcx,[rsp+0x70]
   14001f232:	call   0x140010488
   14001f237:	mov    edx,ebx
   14001f239:	lea    rcx,[rsp+0x70]
   14001f23e:	call   0x14001edb8
   14001f243:	lea    rdx,[rbp+0x58]
   14001f247:	lea    rcx,[rsp+0x70]
   14001f24c:	call   0x14000a950
   14001f251:	nop
   14001f252:	movzx  r8d,bx
   14001f256:	or     r8d,0x80070000
   14001f25d:	test   ebx,ebx
   14001f25f:	cmovle r8d,ebx
   14001f263:	mov    DWORD PTR [rsp+0x28],r14d
   14001f268:	mov    QWORD PTR [rsp+0x20],0x29f
   14001f271:	mov    r9,r12
   14001f274:	lea    rdx,[rbp+0x58]
   14001f278:	lea    rcx,[rbp+0x80]
   14001f27f:	call   0x14001ec04
   14001f284:	lea    rdx,[rip+0x50b7d]        # 0x14006fe08
   14001f28b:	lea    rcx,[rbp+0x80]
   14001f292:	call   0x14002ab88
   14001f297:	nop
   14001f298:	mov    eax,DWORD PTR [rsp+0x38]
   14001f29c:	mov    edx,eax
   14001f29e:	lea    rcx,[rsp+0x40]
   14001f2a3:	call   0x14001fde0
   14001f2a8:	mov    eax,DWORD PTR [rsp+0x34]
   14001f2ac:	mov    DWORD PTR [r15],eax
   14001f2af:	lea    rsi,[r15+0x4]
   14001f2b3:	mov    DWORD PTR [rsi],r13d
   14001f2b6:	lea    rcx,[r15+0x8]
   14001f2ba:	mov    QWORD PTR [rcx],r13
   14001f2bd:	lea    rdi,[r15+0x10]
   14001f2c1:	mov    QWORD PTR [rdi+0x18],0x7
   14001f2c9:	mov    QWORD PTR [rdi+0x10],r13
   14001f2cd:	cmp    QWORD PTR [rdi+0x18],0x8
   14001f2d2:	jb     0x14001f2d9
   14001f2d4:	mov    rax,QWORD PTR [rdi]
   14001f2d7:	jmp    0x14001f2dc
   14001f2d9:	mov    rax,rdi
   14001f2dc:	mov    WORD PTR [rax],r13w
   14001f2e0:	mov    QWORD PTR [r15+0x30],r13
   14001f2e4:	mov    QWORD PTR [r15+0x38],r13
   14001f2e8:	mov    QWORD PTR [r15+0x40],r13
   14001f2ec:	lea    rdx,[r15+0x48]
   14001f2f0:	mov    QWORD PTR [rdx],r13
   14001f2f3:	mov    QWORD PTR [rdx+0x8],r13
   14001f2f7:	mov    QWORD PTR [rdx+0x10],r13
   14001f2fb:	mov    r14d,0x1
   14001f301:	mov    DWORD PTR [rsp+0x58],r14d
   14001f306:	mov    eax,DWORD PTR [rsp+0x34]
   14001f30a:	cmp    eax,0x6
   14001f30d:	ja     0x14001f532
   14001f313:	je     0x14001f443
   14001f319:	test   eax,eax
   14001f31b:	je     0x14001f443
   14001f321:	cmp    eax,0x2
   14001f324:	jbe    0x14001f44d
   14001f32a:	cmp    eax,0x3
   14001f32d:	je     0x14001f412
   14001f333:	add    eax,0xfffffffc
   14001f336:	cmp    eax,r14d
   14001f339:	ja     0x14001f613
   14001f33f:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f344:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f349:	sub    rdi,rbx
   14001f34c:	lea    r8d,[r14+0x3]
   14001f350:	cmp    rdi,r8
   14001f353:	je     0x14001f3ca
   14001f355:	mov    r8d,r14d
   14001f358:	lea    edx,[r14+0x1]
   14001f35c:	lea    rcx,[rsp+0x70]
   14001f361:	call   0x14000be9c
   14001f366:	nop
   14001f367:	lea    rdx,[rip+0x2e22a]        # 0x14004d598
   14001f36e:	lea    rcx,[rsp+0x70]
   14001f373:	call   0x140010488
   14001f378:	mov    rdx,rdi
   14001f37b:	lea    rcx,[rsp+0x70]
   14001f380:	call   0x14000e364
   14001f385:	lea    rdx,[rbp+0x58]
   14001f389:	lea    rcx,[rsp+0x70]
   14001f38e:	call   0x14000a950
   14001f393:	nop
   14001f394:	mov    DWORD PTR [rsp+0x20],r14d
   14001f399:	mov    r9d,0x305
   14001f39f:	lea    r8,[rip+0x2e0da]        # 0x14004d480
   14001f3a6:	lea    rdx,[rbp+0x58]
   14001f3aa:	lea    rcx,[rbp+0x80]
   14001f3b1:	call   0x140020734
   14001f3b6:	lea    rdx,[rip+0x50b8b]        # 0x14006ff48
   14001f3bd:	lea    rcx,[rbp+0x80]
   14001f3c4:	call   0x14002ab88
   14001f3c9:	nop
   14001f3ca:	test   rsi,rsi
   14001f3cd:	je     0x14001f3e8
   14001f3cf:	mov    rcx,rsi
   14001f3d2:	test   rbx,rbx
   14001f3d5:	je     0x14001f3e1
   14001f3d7:	mov    rdx,rbx
   14001f3da:	call   0x140028fd0
   14001f3df:	jmp    0x14001f3f8
   14001f3e1:	xor    edx,edx
   14001f3e3:	call   0x14002a910
   14001f3e8:	call   0x140032c50
   14001f3ed:	mov    DWORD PTR [rax],0x16
   14001f3f3:	call   0x1400307d0
   14001f3f8:	cmp    DWORD PTR [rsp+0x34],0x5
   14001f3fd:	jne    0x14001f79a
   14001f403:	mov    ecx,DWORD PTR [rsi]
   14001f405:	call   QWORD PTR [rip+0x2c03d]        # 0x14004b448
   14001f40b:	mov    DWORD PTR [rsi],eax
   14001f40d:	jmp    0x14001f79a
   14001f412:	lea    rax,[rsp+0x40]
   14001f417:	cmp    rdx,rax
   14001f41a:	je     0x14001f443
   14001f41c:	mov    rbx,r13
   14001f41f:	mov    rax,QWORD PTR [rsp+0x40]
   14001f424:	mov    QWORD PTR [rdx],rax
   14001f427:	mov    rax,QWORD PTR [rsp+0x48]
   14001f42c:	mov    QWORD PTR [rdx+0x8],rax
   14001f430:	mov    rax,QWORD PTR [rsp+0x50]
   14001f435:	mov    QWORD PTR [rdx+0x10],rax
   14001f439:	mov    QWORD PTR [rsp+0x50],r13
   14001f43e:	jmp    0x14001f79a
   14001f443:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f448:	jmp    0x14001f79a
   14001f44d:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f452:	mov    rdx,rsi
   14001f455:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f45a:	sub    rdx,rbx
   14001f45d:	test   r14b,dl
   14001f460:	je     0x14001f47f
   14001f462:	mov    rax,rdx
   14001f465:	and    rax,r14
   14001f468:	sub    rdx,rax
   14001f46b:	lea    rcx,[rsp+0x40]
   14001f470:	call   0x14001fde0
   14001f475:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f47a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f47f:	cmp    rbx,rsi
   14001f482:	sete   al
   14001f485:	test   al,al
   14001f487:	jne    0x14001f79a
   14001f48d:	mov    rax,rsi
   14001f490:	sub    rax,rbx
   14001f493:	lea    rcx,[rax-0x1]
   14001f497:	cmp    rax,rcx
   14001f49a:	ja     0x14001f4a9
   14001f49c:	lea    rcx,[rip+0x2e18d]        # 0x14004d630
   14001f4a3:	call   0x140027a70
   14001f4a8:	int3   
   14001f4a9:	cmp    BYTE PTR [rcx+rbx*1],r13b
   14001f4ad:	jne    0x14001f4d6
   14001f4af:	lea    rcx,[rax-0x2]
   14001f4b3:	cmp    rax,rcx
   14001f4b6:	ja     0x14001f4c5
   14001f4b8:	lea    rcx,[rip+0x2e171]        # 0x14004d630
   14001f4bf:	call   0x140027a70
   14001f4c4:	int3   
   14001f4c5:	cmp    BYTE PTR [rcx+rbx*1],r13b
   14001f4c9:	jne    0x14001f4d6
   14001f4cb:	sub    rsi,r14
   14001f4ce:	sub    rsi,r14
   14001f4d1:	mov    QWORD PTR [rsp+0x48],rsi
   14001f4d6:	sub    rsi,rbx
   14001f4d9:	mov    rdx,rsi
   14001f4dc:	shr    rdx,1
   14001f4df:	cmp    rdx,QWORD PTR [rdi+0x10]
   14001f4e3:	ja     0x14001f4ff
   14001f4e5:	mov    QWORD PTR [rdi+0x10],rdx
   14001f4e9:	cmp    QWORD PTR [rdi+0x18],0x8
   14001f4ee:	jb     0x14001f4f5
   14001f4f0:	mov    rax,QWORD PTR [rdi]
   14001f4f3:	jmp    0x14001f4f8
   14001f4f5:	mov    rax,rdi
   14001f4f8:	mov    WORD PTR [rax+rdx*2],r13w
   14001f4fd:	jmp    0x14001f50e
   14001f4ff:	xor    r8d,r8d
   14001f502:	sub    rdx,QWORD PTR [rdi+0x10]
   14001f506:	mov    rcx,rdi
   14001f509:	call   0x140018e08
   14001f50e:	mov    rdx,QWORD PTR [r15+0x20]
   14001f512:	cmp    QWORD PTR [rdi+0x18],0x8
   14001f517:	jb     0x14001f51c
   14001f519:	mov    rdi,QWORD PTR [rdi]
   14001f51c:	add    rdx,rdx
   14001f51f:	mov    r9,rsi
   14001f522:	mov    r8,rbx
   14001f525:	mov    rcx,rdi
   14001f528:	call   0x14002015c
   14001f52d:	jmp    0x14001f79a
   14001f532:	cmp    eax,0x7
   14001f535:	je     0x14001f68a
   14001f53b:	jbe    0x14001f613
   14001f541:	cmp    eax,0xa
   14001f544:	jbe    0x14001f443
   14001f54a:	cmp    eax,0xb
   14001f54d:	jne    0x14001f613
   14001f553:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f558:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f55d:	sub    rdi,rbx
   14001f560:	cmp    rdi,0x8
   14001f564:	je     0x14001f5da
   14001f566:	mov    r8d,r14d
   14001f569:	lea    edx,[rax-0x9]
   14001f56c:	lea    rcx,[rsp+0x70]
   14001f571:	call   0x14000be9c
   14001f576:	nop
   14001f577:	lea    rdx,[rip+0x2e04a]        # 0x14004d5c8
   14001f57e:	lea    rcx,[rsp+0x70]
   14001f583:	call   0x140010488
   14001f588:	mov    rdx,rdi
   14001f58b:	lea    rcx,[rsp+0x70]
   14001f590:	call   0x14000e364
   14001f595:	lea    rdx,[rbp+0x58]
   14001f599:	lea    rcx,[rsp+0x70]
   14001f59e:	call   0x14000a950
   14001f5a3:	nop
   14001f5a4:	mov    DWORD PTR [rsp+0x20],r14d
   14001f5a9:	mov    r9d,0x311
   14001f5af:	lea    r8,[rip+0x2deca]        # 0x14004d480
   14001f5b6:	lea    rdx,[rbp+0x58]
   14001f5ba:	lea    rcx,[rbp+0x80]
   14001f5c1:	call   0x140020734
   14001f5c6:	lea    rdx,[rip+0x5097b]        # 0x14006ff48
   14001f5cd:	lea    rcx,[rbp+0x80]
   14001f5d4:	call   0x14002ab88
   14001f5d9:	nop
   14001f5da:	test   rcx,rcx
   14001f5dd:	je     0x14001f5fe
   14001f5df:	mov    r8d,0x8
   14001f5e5:	test   rbx,rbx
   14001f5e8:	je     0x14001f5f7
   14001f5ea:	mov    rdx,rbx
   14001f5ed:	call   0x140028fd0
   14001f5f2:	jmp    0x14001f79a
   14001f5f7:	xor    edx,edx
   14001f5f9:	call   0x14002a910
   14001f5fe:	call   0x140032c50
   14001f603:	mov    DWORD PTR [rax],0x16
   14001f609:	call   0x1400307d0
   14001f60e:	jmp    0x14001f79a
   14001f613:	mov    r8d,r14d
   14001f616:	mov    edx,0x2
   14001f61b:	lea    rcx,[rsp+0x70]
   14001f620:	call   0x14000be9c
   14001f625:	nop
   14001f626:	lea    rdx,[rip+0x2dfcb]        # 0x14004d5f8
   14001f62d:	lea    rcx,[rsp+0x70]
   14001f632:	call   0x140010488
   14001f637:	mov    edx,DWORD PTR [rsp+0x34]
   14001f63b:	lea    rcx,[rsp+0x70]
   14001f640:	call   0x14000e4d0
   14001f645:	lea    rdx,[rbp+0x58]
   14001f649:	lea    rcx,[rsp+0x70]
   14001f64e:	call   0x14000a950
   14001f653:	nop
   14001f654:	mov    DWORD PTR [rsp+0x20],r14d
   14001f659:	mov    r9d,0x316
   14001f65f:	lea    r8,[rip+0x2de1a]        # 0x14004d480
   14001f666:	lea    rdx,[rbp+0x58]
   14001f66a:	lea    rcx,[rbp+0x80]
   14001f671:	call   0x140020734
   14001f676:	lea    rdx,[rip+0x508cb]        # 0x14006ff48
   14001f67d:	lea    rcx,[rbp+0x80]
   14001f684:	call   0x14002ab88
   14001f689:	nop
   14001f68a:	mov    rax,QWORD PTR [rsp+0x48]
   14001f68f:	mov    rdx,rax
   14001f692:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f697:	sub    rdx,rbx
   14001f69a:	test   r14b,dl
   14001f69d:	je     0x14001f6bc
   14001f69f:	mov    rax,rdx
   14001f6a2:	and    rax,r14
   14001f6a5:	sub    rdx,rax
   14001f6a8:	lea    rcx,[rsp+0x40]
   14001f6ad:	call   0x14001fde0
   14001f6b2:	mov    rax,QWORD PTR [rsp+0x48]
   14001f6b7:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f6bc:	cmp    rbx,rax
   14001f6bf:	sete   al
   14001f6c2:	test   al,al
   14001f6c4:	jne    0x14001f79a
   14001f6ca:	mov    BYTE PTR [rsp+0x30],r13b
   14001f6cf:	lea    rdx,[rsp+0x30]
   14001f6d4:	lea    rcx,[rsp+0x40]
   14001f6d9:	call   0x14001fadc
   14001f6de:	mov    BYTE PTR [rsp+0x30],r13b
   14001f6e3:	lea    rdx,[rsp+0x30]
   14001f6e8:	lea    rcx,[rsp+0x40]
   14001f6ed:	call   0x14001fadc
   14001f6f2:	mov    BYTE PTR [rsp+0x30],r13b
   14001f6f7:	lea    rdx,[rsp+0x30]
   14001f6fc:	lea    rcx,[rsp+0x40]
   14001f701:	call   0x14001fadc
   14001f706:	mov    BYTE PTR [rsp+0x30],r13b
   14001f70b:	lea    rdx,[rsp+0x30]
   14001f710:	lea    rcx,[rsp+0x40]
   14001f715:	call   0x14001fadc
   14001f71a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f71f:	mov    rdi,rbx
   14001f722:	cmp    WORD PTR [rbx],r13w
   14001f726:	je     0x14001f79a
   14001f728:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f72d:	sub    rsi,rbx
   14001f730:	mov    QWORD PTR [rbp+0x70],0x7
   14001f738:	mov    QWORD PTR [rbp+0x68],r13
   14001f73c:	mov    WORD PTR [rbp+0x58],r13w
   14001f741:	cmp    WORD PTR [rdi],r13w
   14001f745:	jne    0x14001f74c
   14001f747:	mov    rax,r13
   14001f74a:	jmp    0x14001f754
   14001f74c:	mov    rcx,rdi
   14001f74f:	call   0x140031108
   14001f754:	mov    r8,rax
   14001f757:	mov    rdx,rdi
   14001f75a:	lea    rcx,[rbp+0x58]
   14001f75e:	call   0x14000b730
   14001f763:	nop
   14001f764:	lea    rdx,[rbp+0x58]
   14001f768:	lea    rcx,[r15+0x30]
   14001f76c:	call   0x1400126a8
   14001f771:	nop
   14001f772:	xor    r8d,r8d
   14001f775:	mov    dl,r14b
   14001f778:	lea    rcx,[rbp+0x58]
   14001f77c:	call   0x14000b6b0
   14001f781:	mov    rdx,rsi
   14001f784:	mov    rcx,rdi
   14001f787:	call   0x140032e04
   14001f78c:	lea    rdi,[rdi+rax*2]
   14001f790:	add    rdi,0x2
   14001f794:	cmp    WORD PTR [rdi],r13w
   14001f798:	jne    0x14001f730
   14001f79a:	test   rbx,rbx
   14001f79d:	je     0x14001f7b2
   14001f79f:	mov    rdx,QWORD PTR [rsp+0x50]
   14001f7a4:	sub    rdx,rbx
   14001f7a7:	mov    r8,r14
   14001f7aa:	mov    rcx,rbx
   14001f7ad:	call   0x140004804
   14001f7b2:	mov    rax,r15
   14001f7b5:	mov    rcx,QWORD PTR [rbp+0x140]
   14001f7bc:	xor    rcx,rsp
   14001f7bf:	call   0x140025df0
   14001f7c4:	mov    rbx,QWORD PTR [rsp+0x2a8]
   14001f7cc:	add    rsp,0x250
   14001f7d3:	pop    r15
   14001f7d5:	pop    r14
   14001f7d7:	pop    r13
   14001f7d9:	pop    r12
   14001f7db:	pop    rdi
   14001f7dc:	pop    rsi
   14001f7dd:	pop    rbp
   14001f7de:	ret    
   14001f7df:	int3   
   14001f7e0:	rex push rbp
   14001f7e2:	push   rbx
   14001f7e3:	push   rsi
   14001f7e4:	push   rdi
   14001f7e5:	push   r14
   14001f7e7:	lea    rbp,[rsp-0x150]
   14001f7ef:	sub    rsp,0x250
   14001f7f6:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   14001f7ff:	mov    rax,QWORD PTR [rip+0x5184a]        # 0x140071050
   14001f806:	xor    rax,rsp
   14001f809:	mov    QWORD PTR [rbp+0x140],rax
   14001f810:	mov    esi,r8d
   14001f813:	mov    rdi,rdx
   14001f816:	mov    rbx,rcx
   14001f819:	xor    r14d,r14d
   14001f81c:	mov    DWORD PTR [rsp+0x40],r14d
   14001f821:	mov    QWORD PTR [rsp+0x30],r14
   14001f826:	mov    QWORD PTR [rbp+0x50],0x7
   14001f82e:	mov    QWORD PTR [rbp+0x48],r14
   14001f832:	mov    WORD PTR [rbp+0x38],r14w
   14001f837:	lea    r8,[rbp+0x38]
   14001f83b:	lea    rdx,[rsp+0x30]
   14001f840:	mov    rcx,rdi
   14001f843:	call   0x14001fe5c
   14001f848:	test   al,al
   14001f84a:	jne    0x14001f8da
   14001f850:	lea    edx,[r14+0x2]
   14001f854:	lea    r8d,[r14+0x1]
   14001f858:	lea    rcx,[rsp+0x50]
   14001f85d:	call   0x14000be9c
   14001f862:	nop
   14001f863:	lea    rdx,[rip+0x2dc4e]        # 0x14004d4b8
   14001f86a:	lea    rcx,[rsp+0x50]
   14001f86f:	call   0x140010488
   14001f874:	mov    rdx,rdi
   14001f877:	lea    rcx,[rsp+0x50]
   14001f87c:	call   0x1400106b0
   14001f881:	lea    rdx,[rip+0x2dc6c]        # 0x14004d4f4
   14001f888:	lea    rcx,[rsp+0x50]
   14001f88d:	call   0x140010488
   14001f892:	lea    rdx,[rbp+0x58]
   14001f896:	lea    rcx,[rsp+0x50]
   14001f89b:	call   0x14000a950
   14001f8a0:	nop
   14001f8a1:	mov    DWORD PTR [rsp+0x20],0x1
   14001f8a9:	mov    r9d,0x197
   14001f8af:	lea    r8,[rip+0x2dbca]        # 0x14004d480
   14001f8b6:	lea    rdx,[rbp+0x58]
   14001f8ba:	lea    rcx,[rbp+0x80]
   14001f8c1:	call   0x140020734
   14001f8c6:	lea    rdx,[rip+0x5067b]        # 0x14006ff48
   14001f8cd:	lea    rcx,[rbp+0x80]
   14001f8d4:	call   0x14002ab88
   14001f8d9:	nop
   14001f8da:	mov    QWORD PTR [rsp+0x38],r14
   14001f8df:	lea    rdx,[rbp+0x38]
   14001f8e3:	cmp    QWORD PTR [rbp+0x50],0x8
   14001f8e8:	cmovae rdx,QWORD PTR [rbp+0x38]
   14001f8ed:	lea    rax,[rsp+0x38]
   14001f8f2:	mov    QWORD PTR [rsp+0x20],rax
   14001f8f7:	mov    r9d,esi
   14001f8fa:	xor    r8d,r8d
   14001f8fd:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f902:	call   QWORD PTR [rip+0x2b6f8]        # 0x14004b000
   14001f908:	mov    edi,eax
   14001f90a:	test   eax,eax
   14001f90c:	je     0x14001f99f
   14001f912:	mov    edx,0x2
   14001f917:	lea    r8d,[rdx-0x1]
   14001f91b:	lea    rcx,[rsp+0x50]
   14001f920:	call   0x14000be9c
   14001f925:	nop
   14001f926:	lea    rdx,[rip+0x2dbd3]        # 0x14004d500
   14001f92d:	lea    rcx,[rsp+0x50]
   14001f932:	call   0x140010488
   14001f937:	mov    edx,edi
   14001f939:	lea    rcx,[rsp+0x50]
   14001f93e:	call   0x14001edb8
   14001f943:	lea    rdx,[rbp+0x58]
   14001f947:	lea    rcx,[rsp+0x50]
   14001f94c:	call   0x14000a950
   14001f951:	nop
   14001f952:	movzx  r8d,di
   14001f956:	or     r8d,0x80070000
   14001f95d:	test   edi,edi
   14001f95f:	cmovle r8d,edi
   14001f963:	mov    DWORD PTR [rsp+0x28],0x1
   14001f96b:	mov    QWORD PTR [rsp+0x20],0x1a7
   14001f974:	lea    r9,[rip+0x2db05]        # 0x14004d480
   14001f97b:	lea    rdx,[rbp+0x58]
   14001f97f:	lea    rcx,[rbp+0x80]
   14001f986:	call   0x14001ec04
   14001f98b:	lea    rdx,[rip+0x50476]        # 0x14006fe08
   14001f992:	lea    rcx,[rbp+0x80]
   14001f999:	call   0x14002ab88
   14001f99e:	nop
   14001f99f:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f9a4:	mov    rcx,rbx
   14001f9a7:	call   0x14001f020
   14001f9ac:	nop
   14001f9ad:	xor    r8d,r8d
   14001f9b0:	mov    dl,0x1
   14001f9b2:	lea    rcx,[rbp+0x38]
   14001f9b6:	call   0x14000b6b0
   14001f9bb:	mov    rax,rbx
   14001f9be:	mov    rcx,QWORD PTR [rbp+0x140]
   14001f9c5:	xor    rcx,rsp
   14001f9c8:	call   0x140025df0
   14001f9cd:	add    rsp,0x250
   14001f9d4:	pop    r14
   14001f9d6:	pop    rdi
   14001f9d7:	pop    rsi
   14001f9d8:	pop    rbx
   14001f9d9:	pop    rbp
   14001f9da:	ret    
   14001f9db:	int3   
   14001f9dc:	mov    QWORD PTR [rsp+0x10],rdx
   14001f9e1:	push   rsi
   14001f9e2:	push   rdi
   14001f9e3:	push   r14
   14001f9e5:	sub    rsp,0x30
   14001f9e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001f9f2:	mov    QWORD PTR [rsp+0x60],rbx
   14001f9f7:	mov    r14,rdx
   14001f9fa:	mov    rbx,rcx
   14001f9fd:	mov    r8b,0x1
   14001fa00:	mov    edx,0x1
   14001fa05:	mov    rcx,r14
   14001fa08:	call   0x140004798
   14001fa0d:	mov    rdi,rax
   14001fa10:	mov    QWORD PTR [rsp+0x50],rax
   14001fa15:	mov    r8,QWORD PTR [rbx+0x8]
   14001fa19:	sub    r8,QWORD PTR [rbx]
   14001fa1c:	mov    rdx,QWORD PTR [rbx]
   14001fa1f:	mov    rcx,rax
   14001fa22:	call   0x140028fd0
   14001fa27:	nop
   14001fa28:	mov    rcx,QWORD PTR [rbx]
   14001fa2b:	mov    rsi,QWORD PTR [rbx+0x8]
   14001fa2f:	sub    rsi,rcx
   14001fa32:	test   rcx,rcx
   14001fa35:	je     0x14001fa49
   14001fa37:	mov    rdx,QWORD PTR [rbx+0x10]
   14001fa3b:	sub    rdx,rcx
   14001fa3e:	mov    r8d,0x1
   14001fa44:	call   0x140004804
   14001fa49:	lea    rax,[rdi+r14*1]
   14001fa4d:	mov    QWORD PTR [rbx+0x10],rax
   14001fa51:	lea    rax,[rsi+rdi*1]
   14001fa55:	mov    QWORD PTR [rbx+0x8],rax
   14001fa59:	mov    QWORD PTR [rbx],rdi
   14001fa5c:	mov    rbx,QWORD PTR [rsp+0x60]
   14001fa61:	add    rsp,0x30
   14001fa65:	pop    r14
   14001fa67:	pop    rdi
   14001fa68:	pop    rsi
   14001fa69:	ret    
   14001fa6a:	int3   
   14001fa6b:	int3   
   14001fa6c:	sub    rsp,0x28
   14001fa70:	mov    r10,QWORD PTR [rcx+0x10]
   14001fa74:	mov    r8,rdx
   14001fa77:	mov    rdx,QWORD PTR [rcx+0x8]
   14001fa7b:	mov    rax,r10
   14001fa7e:	sub    rax,rdx
   14001fa81:	mov    r9,rcx
   14001fa84:	cmp    rax,r8
   14001fa87:	jae    0x14001fac8
   14001fa89:	mov    rax,QWORD PTR [rcx]
   14001fa8c:	sub    rax,rdx
   14001fa8f:	dec    rax
   14001fa92:	cmp    rax,r8
   14001fa95:	jb     0x14001facd
   14001fa97:	sub    r10,QWORD PTR [rcx]
   14001fa9a:	sub    rdx,QWORD PTR [rcx]
   14001fa9d:	mov    rax,r10
   14001faa0:	add    rdx,r8
   14001faa3:	shr    rax,1
   14001faa6:	xor    r8d,r8d
   14001faa9:	mov    rcx,rax
   14001faac:	add    rax,r10
   14001faaf:	not    rcx
   14001fab2:	cmp    rcx,r10
   14001fab5:	mov    rcx,r9
   14001fab8:	cmovae r8,rax
   14001fabc:	cmp    r8,rdx
   14001fabf:	cmovae rdx,r8
   14001fac3:	call   0x14001f9dc
   14001fac8:	add    rsp,0x28
   14001facc:	ret    
   14001facd:	lea    rcx,[rip+0x43354]        # 0x140062e28
   14001fad4:	call   0x140027a4c
   14001fad9:	int3   
   14001fada:	int3   
   14001fadb:	int3   
   14001fadc:	mov    QWORD PTR [rsp+0x8],rbx
   14001fae1:	push   rdi
   14001fae2:	sub    rsp,0x20
   14001fae6:	mov    rax,QWORD PTR [rcx+0x8]
   14001faea:	mov    rdi,rdx
   14001faed:	mov    rbx,rcx
   14001faf0:	cmp    rdx,rax
   14001faf3:	jae    0x14001fb20
   14001faf5:	cmp    QWORD PTR [rcx],rdx
   14001faf8:	ja     0x14001fb20
   14001fafa:	sub    rdi,QWORD PTR [rcx]
   14001fafd:	cmp    rax,QWORD PTR [rcx+0x10]
   14001fb01:	jne    0x14001fb0d
   14001fb03:	mov    edx,0x1
   14001fb08:	call   0x14001fa6c
   14001fb0d:	mov    rdx,QWORD PTR [rbx+0x8]
   14001fb11:	test   rdx,rdx
   14001fb14:	je     0x14001fb3d
   14001fb16:	mov    rax,QWORD PTR [rbx]
   14001fb19:	mov    cl,BYTE PTR [rdi+rax*1]
   14001fb1c:	mov    BYTE PTR [rdx],cl
   14001fb1e:	jmp    0x14001fb3d
   14001fb20:	cmp    rax,QWORD PTR [rcx+0x10]
   14001fb24:	jne    0x14001fb30
   14001fb26:	mov    edx,0x1
   14001fb2b:	call   0x14001fa6c
   14001fb30:	mov    rcx,QWORD PTR [rbx+0x8]
   14001fb34:	test   rcx,rcx
   14001fb37:	je     0x14001fb3d
   14001fb39:	mov    al,BYTE PTR [rdi]
   14001fb3b:	mov    BYTE PTR [rcx],al
   14001fb3d:	inc    QWORD PTR [rbx+0x8]
   14001fb41:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fb46:	add    rsp,0x20
   14001fb4a:	pop    rdi
   14001fb4b:	ret    
   14001fb4c:	rex push rbx
   14001fb4e:	push   rdi
   14001fb4f:	sub    rsp,0xa8
   14001fb56:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001fb5f:	mov    rax,QWORD PTR [rip+0x514ea]        # 0x140071050
   14001fb66:	xor    rax,rsp
   14001fb69:	mov    QWORD PTR [rsp+0x90],rax
   14001fb71:	mov    rbx,r8
   14001fb74:	mov    rdi,rdx
   14001fb77:	cmp    QWORD PTR [rcx+0x10],0x0
   14001fb7c:	je     0x14001fc6c
   14001fb82:	cmp    QWORD PTR [rdx+0x10],0x0
   14001fb87:	je     0x14001fc6c
   14001fb8d:	test   rbx,rbx
   14001fb90:	je     0x14001fc6c
   14001fb96:	or     r9d,0x1
   14001fb9a:	mov    r8d,r9d
   14001fb9d:	mov    rdx,rcx
   14001fba0:	lea    rcx,[rsp+0x20]
   14001fba5:	call   0x14001f7e0
   14001fbaa:	nop
   14001fbab:	mov    r8,rdi
   14001fbae:	lea    rdx,[rsp+0x30]
   14001fbb3:	mov    rcx,rax
   14001fbb6:	call   0x14001f078
   14001fbbb:	nop
   14001fbbc:	lea    rcx,[rsp+0x20]
   14001fbc1:	call   0x14001f054
   14001fbc6:	mov    rcx,QWORD PTR [rsp+0x78]
   14001fbcb:	cmp    DWORD PTR [rsp+0x30],0x4
   14001fbd0:	je     0x14001fc1c
   14001fbd2:	test   rcx,rcx
   14001fbd5:	je     0x14001fbff
   14001fbd7:	mov    rdx,QWORD PTR [rsp+0x88]
   14001fbdf:	sub    rdx,rcx
   14001fbe2:	mov    r8d,0x1
   14001fbe8:	call   0x140004804
   14001fbed:	and    QWORD PTR [rsp+0x78],0x0
   14001fbf3:	xorps  xmm0,xmm0
   14001fbf6:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001fbff:	lea    rcx,[rsp+0x60]
   14001fc04:	call   0x140012730
   14001fc09:	xor    r8d,r8d
   14001fc0c:	mov    dl,0x1
   14001fc0e:	lea    rcx,[rsp+0x40]
   14001fc13:	call   0x14000b6b0
   14001fc18:	xor    al,al
   14001fc1a:	jmp    0x14001fc6e
   14001fc1c:	mov    eax,DWORD PTR [rsp+0x34]
   14001fc20:	mov    DWORD PTR [rbx],eax
   14001fc22:	test   rcx,rcx
   14001fc25:	je     0x14001fc4f
   14001fc27:	mov    rdx,QWORD PTR [rsp+0x88]
   14001fc2f:	sub    rdx,rcx
   14001fc32:	mov    r8d,0x1
   14001fc38:	call   0x140004804
   14001fc3d:	and    QWORD PTR [rsp+0x78],0x0
   14001fc43:	xorps  xmm0,xmm0
   14001fc46:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001fc4f:	lea    rcx,[rsp+0x60]
   14001fc54:	call   0x140012730
   14001fc59:	xor    r8d,r8d
   14001fc5c:	mov    dl,0x1
   14001fc5e:	lea    rcx,[rsp+0x40]
   14001fc63:	call   0x14000b6b0
   14001fc68:	mov    al,0x1
   14001fc6a:	jmp    0x14001fc6e
   14001fc6c:	xor    al,al
   14001fc6e:	mov    rcx,QWORD PTR [rsp+0x90]
   14001fc76:	xor    rcx,rsp
   14001fc79:	call   0x140025df0
   14001fc7e:	add    rsp,0xa8
   14001fc85:	pop    rdi
   14001fc86:	pop    rbx
   14001fc87:	ret    
   14001fc88:	int3   
   14001fc89:	int3   
   14001fc8a:	int3   
   14001fc8b:	int3   
   14001fc8c:	rex push rbx
   14001fc8e:	push   rdi
   14001fc8f:	sub    rsp,0xa8
   14001fc96:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001fc9f:	mov    rax,QWORD PTR [rip+0x513aa]        # 0x140071050
   14001fca6:	xor    rax,rsp
   14001fca9:	mov    QWORD PTR [rsp+0x90],rax
   14001fcb1:	mov    rbx,r8
   14001fcb4:	mov    rdi,rdx
   14001fcb7:	cmp    QWORD PTR [rcx+0x10],0x0
   14001fcbc:	je     0x14001fdc1
   14001fcc2:	cmp    QWORD PTR [rdx+0x10],0x0
   14001fcc7:	je     0x14001fdc1
   14001fccd:	or     r9d,0x1
   14001fcd1:	mov    r8d,r9d
   14001fcd4:	mov    rdx,rcx
   14001fcd7:	lea    rcx,[rsp+0x20]
   14001fcdc:	call   0x14001f7e0
   14001fce1:	nop
   14001fce2:	mov    r8,rdi
   14001fce5:	lea    rdx,[rsp+0x30]
   14001fcea:	mov    rcx,rax
   14001fced:	call   0x14001f078
   14001fcf2:	nop
   14001fcf3:	lea    rcx,[rsp+0x20]
   14001fcf8:	call   0x14001f054
   14001fcfd:	cmp    DWORD PTR [rsp+0x30],0x1
   14001fd02:	je     0x14001fd53
   14001fd04:	mov    rcx,QWORD PTR [rsp+0x78]
   14001fd09:	test   rcx,rcx
   14001fd0c:	je     0x14001fd36
   14001fd0e:	mov    rdx,QWORD PTR [rsp+0x88]
   14001fd16:	sub    rdx,rcx
   14001fd19:	mov    r8d,0x1
   14001fd1f:	call   0x140004804
   14001fd24:	and    QWORD PTR [rsp+0x78],0x0
   14001fd2a:	xorps  xmm0,xmm0
   14001fd2d:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001fd36:	lea    rcx,[rsp+0x60]
   14001fd3b:	call   0x140012730
   14001fd40:	xor    r8d,r8d
   14001fd43:	mov    dl,0x1
   14001fd45:	lea    rcx,[rsp+0x40]
   14001fd4a:	call   0x14000b6b0
   14001fd4f:	xor    al,al
   14001fd51:	jmp    0x14001fdc3
   14001fd53:	lea    rax,[rsp+0x40]
   14001fd58:	cmp    rbx,rax
   14001fd5b:	je     0x14001fd72
   14001fd5d:	or     r9,0xffffffffffffffff
   14001fd61:	xor    r8d,r8d
   14001fd64:	lea    rdx,[rsp+0x40]
   14001fd69:	mov    rcx,rbx
   14001fd6c:	call   0x14000b850
   14001fd71:	nop
   14001fd72:	mov    rcx,QWORD PTR [rsp+0x78]
   14001fd77:	test   rcx,rcx
   14001fd7a:	je     0x14001fda4
   14001fd7c:	mov    rdx,QWORD PTR [rsp+0x88]
   14001fd84:	sub    rdx,rcx
   14001fd87:	mov    r8d,0x1
   14001fd8d:	call   0x140004804
   14001fd92:	and    QWORD PTR [rsp+0x78],0x0
   14001fd98:	xorps  xmm0,xmm0
   14001fd9b:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14001fda4:	lea    rcx,[rsp+0x60]
   14001fda9:	call   0x140012730
   14001fdae:	xor    r8d,r8d
   14001fdb1:	mov    dl,0x1
   14001fdb3:	lea    rcx,[rsp+0x40]
   14001fdb8:	call   0x14000b6b0
   14001fdbd:	mov    al,0x1
   14001fdbf:	jmp    0x14001fdc3
   14001fdc1:	xor    al,al
   14001fdc3:	mov    rcx,QWORD PTR [rsp+0x90]
   14001fdcb:	xor    rcx,rsp
   14001fdce:	call   0x140025df0
   14001fdd3:	add    rsp,0xa8
   14001fdda:	pop    rdi
   14001fddb:	pop    rbx
   14001fddc:	ret    
   14001fddd:	int3   
   14001fdde:	int3   
   14001fddf:	int3   
   14001fde0:	mov    QWORD PTR [rsp+0x8],rcx
   14001fde5:	push   rdi
   14001fde6:	sub    rsp,0x30
   14001fdea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fdf3:	mov    QWORD PTR [rsp+0x48],rbx
   14001fdf8:	mov    rdi,rdx
   14001fdfb:	mov    rbx,rcx
   14001fdfe:	mov    rcx,QWORD PTR [rcx]
   14001fe01:	mov    rax,QWORD PTR [rbx+0x8]
   14001fe05:	sub    rax,rcx
   14001fe08:	cmp    rdx,rax
   14001fe0b:	jae    0x14001fe17
   14001fe0d:	lea    rax,[rcx+rdx*1]
   14001fe11:	mov    QWORD PTR [rbx+0x8],rax
   14001fe15:	jmp    0x14001fe4e
   14001fe17:	cmp    rax,rdi
   14001fe1a:	jae    0x14001fe4e
   14001fe1c:	sub    rdx,rax
   14001fe1f:	mov    rcx,rbx
   14001fe22:	call   0x14001fa6c
   14001fe27:	nop
   14001fe28:	mov    rcx,QWORD PTR [rbx+0x8]
   14001fe2c:	mov    rax,rcx
   14001fe2f:	sub    rax,QWORD PTR [rbx]
   14001fe32:	mov    r8,rdi
   14001fe35:	sub    r8,rax
   14001fe38:	xor    edx,edx
   14001fe3a:	call   0x14002a910
   14001fe3f:	nop
   14001fe40:	mov    rax,QWORD PTR [rbx]
   14001fe43:	sub    rax,QWORD PTR [rbx+0x8]
   14001fe47:	add    rax,rdi
   14001fe4a:	add    QWORD PTR [rbx+0x8],rax
   14001fe4e:	mov    rbx,QWORD PTR [rsp+0x48]
   14001fe53:	add    rsp,0x30
   14001fe57:	pop    rdi
   14001fe58:	ret    
   14001fe59:	int3   
   14001fe5a:	int3   
   14001fe5b:	int3   
   14001fe5c:	sub    rsp,0x38
   14001fe60:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fe69:	test   rdx,rdx
   14001fe6c:	je     0x14001fe7c
   14001fe6e:	cmp    QWORD PTR [rcx+0x10],0x0
   14001fe73:	je     0x14001fe7c
   14001fe75:	call   0x14001fe88
   14001fe7a:	jmp    0x14001fe82
   14001fe7c:	xor    al,al
   14001fe7e:	jmp    0x14001fe82
   14001fe80:	xor    al,al
   14001fe82:	add    rsp,0x38
   14001fe86:	ret    
   14001fe87:	int3   
   14001fe88:	rex push rbx
   14001fe8a:	push   rbp
   14001fe8b:	push   rsi
   14001fe8c:	push   rdi
   14001fe8d:	push   r14
   14001fe8f:	sub    rsp,0x80
   14001fe96:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001fe9f:	mov    rax,QWORD PTR [rip+0x511aa]        # 0x140071050
   14001fea6:	xor    rax,rsp
   14001fea9:	mov    QWORD PTR [rsp+0x70],rax
   14001feae:	mov    rdi,r8
   14001feb1:	mov    r14,rdx
   14001feb4:	mov    rsi,rcx
   14001feb7:	mov    ecx,DWORD PTR [rip+0x55df7]        # 0x140075cb4
   14001febd:	mov    rax,QWORD PTR gs:0x58
   14001fec6:	mov    edx,0x4
   14001fecb:	mov    rcx,QWORD PTR [rax+rcx*8]
   14001fecf:	mov    eax,DWORD PTR [rdx+rcx*1]
   14001fed2:	cmp    DWORD PTR [rip+0x55d18],eax        # 0x140075bf0
   14001fed8:	jle    0x14002005b
   14001fede:	lea    rcx,[rip+0x55d0b]        # 0x140075bf0
   14001fee5:	call   0x140025fbc
   14001feea:	cmp    DWORD PTR [rip+0x55cff],0xffffffff        # 0x140075bf0
   14001fef1:	jne    0x14002005b
   14001fef7:	lea    rax,[rip+0x2d442]        # 0x14004d340
   14001fefe:	mov    QWORD PTR [rip+0x55bfb],rax        # 0x140075b00
   14001ff05:	mov    rcx,0xffffffff80000002
   14001ff0c:	mov    QWORD PTR [rip+0x55bf5],rcx        # 0x140075b08
   14001ff13:	lea    rax,[rip+0x2d44e]        # 0x14004d368
   14001ff1a:	mov    QWORD PTR [rip+0x55bef],rax        # 0x140075b10
   14001ff21:	mov    QWORD PTR [rip+0x55bf0],rcx        # 0x140075b18
   14001ff28:	lea    rax,[rip+0x2d449]        # 0x14004d378
   14001ff2f:	mov    QWORD PTR [rip+0x55bea],rax        # 0x140075b20
   14001ff36:	mov    QWORD PTR [rip+0x55beb],rcx        # 0x140075b28
   14001ff3d:	lea    rax,[rip+0x2d444]        # 0x14004d388
   14001ff44:	mov    QWORD PTR [rip+0x55be5],rax        # 0x140075b30
   14001ff4b:	mov    rcx,0xffffffff80000001
   14001ff52:	mov    QWORD PTR [rip+0x55bdf],rcx        # 0x140075b38
   14001ff59:	lea    rax,[rip+0x2d450]        # 0x14004d3b0
   14001ff60:	mov    QWORD PTR [rip+0x55bd9],rax        # 0x140075b40
   14001ff67:	mov    QWORD PTR [rip+0x55bda],rcx        # 0x140075b48
   14001ff6e:	lea    rax,[rip+0x2d44b]        # 0x14004d3c0
   14001ff75:	mov    QWORD PTR [rip+0x55bd4],rax        # 0x140075b50
   14001ff7c:	mov    QWORD PTR [rip+0x55bd5],rcx        # 0x140075b58
   14001ff83:	lea    rax,[rip+0x2d446]        # 0x14004d3d0
   14001ff8a:	mov    QWORD PTR [rip+0x55bcf],rax        # 0x140075b60
   14001ff91:	mov    rcx,0xffffffff80000003
   14001ff98:	mov    QWORD PTR [rip+0x55bc9],rcx        # 0x140075b68
   14001ff9f:	lea    rax,[rip+0x2d442]        # 0x14004d3e8
   14001ffa6:	mov    QWORD PTR [rip+0x55bc3],rax        # 0x140075b70
   14001ffad:	mov    QWORD PTR [rip+0x55bc4],rcx        # 0x140075b78
   14001ffb4:	lea    rax,[rip+0x2d435]        # 0x14004d3f0
   14001ffbb:	mov    QWORD PTR [rip+0x55bbe],rax        # 0x140075b80
   14001ffc2:	mov    QWORD PTR [rip+0x55bbf],rcx        # 0x140075b88
   14001ffc9:	lea    rax,[rip+0x2d430]        # 0x14004d400
   14001ffd0:	mov    QWORD PTR [rip+0x55bb9],rax        # 0x140075b90
   14001ffd7:	lea    rdx,[rcx-0x3]
   14001ffdb:	mov    QWORD PTR [rip+0x55bb6],rdx        # 0x140075b98
   14001ffe2:	lea    rax,[rip+0x2d42f]        # 0x14004d418
   14001ffe9:	mov    QWORD PTR [rip+0x55bb0],rax        # 0x140075ba0
   14001fff0:	mov    QWORD PTR [rip+0x55bb1],rdx        # 0x140075ba8
   14001fff7:	lea    rax,[rip+0x2d42a]        # 0x14004d428
   14001fffe:	mov    QWORD PTR [rip+0x55bab],rax        # 0x140075bb0
   140020005:	mov    QWORD PTR [rip+0x55bac],rdx        # 0x140075bb8
   14002000c:	lea    rax,[rip+0x2d425]        # 0x14004d438
   140020013:	mov    QWORD PTR [rip+0x55ba6],rax        # 0x140075bc0
   14002001a:	lea    rdx,[rcx+0x2]
   14002001e:	mov    QWORD PTR [rip+0x55ba3],rdx        # 0x140075bc8
   140020025:	lea    rax,[rip+0x2d434]        # 0x14004d460
   14002002c:	mov    QWORD PTR [rip+0x55b9d],rax        # 0x140075bd0
   140020033:	mov    QWORD PTR [rip+0x55b9e],rdx        # 0x140075bd8
   14002003a:	lea    rax,[rip+0x2d42f]        # 0x14004d470
   140020041:	mov    QWORD PTR [rip+0x55b98],rax        # 0x140075be0
   140020048:	mov    QWORD PTR [rip+0x55b99],rdx        # 0x140075be8
   14002004f:	lea    rcx,[rip+0x55b9a]        # 0x140075bf0
   140020056:	call   0x140025f5c
   14002005b:	mov    eax,0x5c
   140020060:	mov    WORD PTR [rsp+0x20],ax
   140020065:	lea    r9d,[rax-0x5b]
   140020069:	xor    r8d,r8d
   14002006c:	lea    rdx,[rsp+0x20]
   140020071:	mov    rcx,rsi
   140020074:	call   0x140018f1c
   140020079:	mov    rbx,rax
   14002007c:	cmp    rax,0xffffffffffffffff
   140020080:	jne    0x140020089
   140020082:	xor    al,al
   140020084:	jmp    0x140020140
   140020089:	lea    r8,[rax+0x1]
   14002008d:	or     r9,0xffffffffffffffff
   140020091:	lea    rdx,[rsp+0x50]
   140020096:	mov    rcx,rsi
   140020099:	call   0x140019244
   14002009e:	mov    rbp,rax
   1400200a1:	cmp    rdi,rax
   1400200a4:	je     0x1400200bf
   1400200a6:	xor    r8d,r8d
   1400200a9:	mov    dl,0x1
   1400200ab:	mov    rcx,rdi
   1400200ae:	call   0x14000b6b0
   1400200b3:	mov    rdx,rbp
   1400200b6:	mov    rcx,rdi
   1400200b9:	call   0x14000cfb4
   1400200be:	nop
   1400200bf:	xor    r8d,r8d
   1400200c2:	mov    dl,0x1
   1400200c4:	lea    rcx,[rsp+0x50]
   1400200c9:	call   0x14000b6b0
   1400200ce:	mov    r9,rbx
   1400200d1:	xor    r8d,r8d
   1400200d4:	lea    rdx,[rsp+0x30]
   1400200d9:	mov    rcx,rsi
   1400200dc:	call   0x140019244
   1400200e1:	xor    ebx,ebx
   1400200e3:	cmp    QWORD PTR [rsp+0x40],rbx
   1400200e8:	je     0x14002012f
   1400200ea:	mov    edi,ebx
   1400200ec:	lea    rbp,[rip+0x55a0d]        # 0x140075b00
   1400200f3:	mov    rsi,rbp
   1400200f6:	lea    rdx,[rsp+0x30]
   1400200fb:	cmp    QWORD PTR [rsp+0x48],0x8
   140020101:	cmovae rdx,QWORD PTR [rsp+0x30]
   140020107:	mov    rcx,QWORD PTR [rsi]
   14002010a:	call   0x140032c70
   14002010f:	test   eax,eax
   140020111:	je     0x140020122
   140020113:	inc    rdi
   140020116:	add    rsi,0x10
   14002011a:	cmp    rdi,0xf
   14002011e:	jb     0x1400200f6
   140020120:	jmp    0x14002012f
   140020122:	add    rdi,rdi
   140020125:	mov    rax,QWORD PTR [rbp+rdi*8+0x8]
   14002012a:	mov    QWORD PTR [r14],rax
   14002012d:	mov    bl,0x1
   14002012f:	xor    r8d,r8d
   140020132:	mov    dl,0x1
   140020134:	lea    rcx,[rsp+0x30]
   140020139:	call   0x14000b6b0
   14002013e:	mov    al,bl
   140020140:	mov    rcx,QWORD PTR [rsp+0x70]
   140020145:	xor    rcx,rsp
   140020148:	call   0x140025df0
   14002014d:	add    rsp,0x80
   140020154:	pop    r14
   140020156:	pop    rdi
   140020157:	pop    rsi
   140020158:	pop    rbp
   140020159:	pop    rbx
   14002015a:	ret    
   14002015b:	int3   
   14002015c:	mov    QWORD PTR [rsp+0x8],rbx
   140020161:	mov    QWORD PTR [rsp+0x10],rsi
   140020166:	push   rdi
   140020167:	sub    rsp,0x20
   14002016b:	mov    rbx,r9
   14002016e:	mov    rsi,r8
   140020171:	mov    rdi,rdx
   140020174:	test   r9,r9
   140020177:	jne    0x14002017d
   140020179:	xor    eax,eax
   14002017b:	jmp    0x1400201d3
   14002017d:	test   rcx,rcx
   140020180:	jne    0x140020197
   140020182:	call   0x140032c50
   140020187:	mov    ebx,0x16
   14002018c:	mov    DWORD PTR [rax],ebx
   14002018e:	call   0x1400307d0
   140020193:	mov    eax,ebx
   140020195:	jmp    0x1400201d3
   140020197:	test   rsi,rsi
   14002019a:	je     0x1400201ae
   14002019c:	cmp    rdi,rbx
   14002019f:	jb     0x1400201ae
   1400201a1:	mov    r8,rbx
   1400201a4:	mov    rdx,rsi
   1400201a7:	call   0x140028fd0
   1400201ac:	jmp    0x140020179
   1400201ae:	mov    r8,rdi
   1400201b1:	xor    edx,edx
   1400201b3:	call   0x14002a910
   1400201b8:	test   rsi,rsi
   1400201bb:	je     0x140020182
   1400201bd:	cmp    rdi,rbx
   1400201c0:	jae    0x1400201ce
   1400201c2:	call   0x140032c50
   1400201c7:	mov    ebx,0x22
   1400201cc:	jmp    0x14002018c
   1400201ce:	mov    eax,0x16
   1400201d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400201d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400201dd:	add    rsp,0x20
   1400201e1:	pop    rdi
   1400201e2:	ret    
   1400201e3:	int3   
   1400201e4:	mov    rax,QWORD PTR [rcx+0x8]
   1400201e8:	cmp    QWORD PTR [rcx],rax
   1400201eb:	jne    0x1400201f0
   1400201ed:	xor    al,al
   1400201ef:	ret    
   1400201f0:	sub    rax,QWORD PTR [rcx]
   1400201f3:	mov    r8d,0xffffffff
   1400201f9:	cmp    rax,r8
   1400201fc:	ja     0x1400201ed
   1400201fe:	mov    rcx,QWORD PTR [rcx]
   140020201:	mov    r8,rdx
   140020204:	mov    edx,eax
   140020206:	jmp    0x14002020c
   14002020b:	int3   
   14002020c:	mov    rax,rsp
   14002020f:	push   r12
   140020211:	push   r14
   140020213:	push   r15
   140020215:	sub    rsp,0x90
   14002021c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020225:	mov    QWORD PTR [rax+0x8],rbx
   140020229:	mov    QWORD PTR [rax+0x10],rsi
   14002022d:	mov    QWORD PTR [rax+0x18],rdi
   140020231:	mov    r14,r8
   140020234:	mov    r15d,edx
   140020237:	mov    rbx,rcx
   14002023a:	test   rcx,rcx
   14002023d:	je     0x1400203ad
   140020243:	test   edx,edx
   140020245:	je     0x1400203ad
   14002024b:	mov    edx,r15d
   14002024e:	call   0x1400203d0
   140020253:	test   al,al
   140020255:	jne    0x140020263
   140020257:	lea    rdx,[rip+0x2d422]        # 0x14004d680
   14002025e:	jmp    0x1400203a3
   140020263:	cmp    BYTE PTR [rbx],0x1f
   140020266:	jne    0x14002039c
   14002026c:	cmp    BYTE PTR [rbx+0x1],0x8b
   140020270:	jne    0x14002039c
   140020276:	cmp    BYTE PTR [rbx+0x2],0x8
   14002027a:	jne    0x14002039c
   140020280:	mov    rax,r15
   140020283:	mov    r12d,DWORD PTR [r15+rbx*1-0x4]
   140020288:	test   r12d,r12d
   14002028b:	jne    0x140020299
   14002028d:	lea    rdx,[rip+0x2d45c]        # 0x14004d6f0
   140020294:	jmp    0x1400203a3
   140020299:	mov    rdx,r12
   14002029c:	mov    rcx,r14
   14002029f:	call   0x14001fde0
   1400202a4:	nop
   1400202a5:	movzx  esi,BYTE PTR [rbx+0x3]
   1400202a9:	test   sil,0xe0
   1400202ad:	je     0x1400202c0
   1400202af:	lea    rdx,[rip+0x2d47a]        # 0x14004d730
   1400202b6:	mov    ecx,0x2
   1400202bb:	call   0x14001a664
   1400202c0:	mov    edi,0xa
   1400202c5:	test   sil,0x4
   1400202c9:	je     0x1400202db
   1400202cb:	movzx  ecx,BYTE PTR [rbx+0xb]
   1400202cf:	shl    ecx,0x8
   1400202d2:	movzx  edi,BYTE PTR [rbx+0xa]
   1400202d6:	add    edi,0xc
   1400202d9:	add    edi,ecx
   1400202db:	test   sil,0x8
   1400202df:	je     0x1400202eb
   1400202e1:	mov    eax,edi
   1400202e3:	inc    edi
   1400202e5:	cmp    BYTE PTR [rax+rbx*1],0x0
   1400202e9:	jne    0x1400202e1
   1400202eb:	test   sil,0x10
   1400202ef:	je     0x1400202fb
   1400202f1:	mov    eax,edi
   1400202f3:	inc    edi
   1400202f5:	cmp    BYTE PTR [rax+rbx*1],0x0
   1400202f9:	jne    0x1400202f1
   1400202fb:	and    esi,0x2
   1400202fe:	and    QWORD PTR [rsp+0x60],0x0
   140020304:	and    QWORD PTR [rsp+0x68],0x0
   14002030a:	and    QWORD PTR [rsp+0x70],0x0
   140020310:	and    DWORD PTR [rsp+0x38],0x0
   140020315:	and    QWORD PTR [rsp+0x30],0x0
   14002031b:	mov    r9d,0x58
   140020321:	lea    r8,[rip+0x43f7c]        # 0x1400642a4
   140020328:	lea    edx,[r9-0x67]
   14002032c:	lea    rcx,[rsp+0x30]
   140020331:	call   0x140014388
   140020336:	test   eax,eax
   140020338:	jne    0x1400203ad
   14002033a:	mov    DWORD PTR [rsp+0x38],r15d
   14002033f:	lea    eax,[rdi+0x2]
   140020342:	test   esi,esi
   140020344:	cmove  eax,edi
   140020347:	add    rax,rbx
   14002034a:	mov    QWORD PTR [rsp+0x30],rax
   14002034f:	mov    DWORD PTR [rsp+0x48],r12d
   140020354:	mov    rax,QWORD PTR [r14]
   140020357:	mov    QWORD PTR [rsp+0x40],rax
   14002035c:	mov    edx,0x4
   140020361:	lea    rcx,[rsp+0x30]
   140020366:	call   0x1400145d0
   14002036b:	lea    rcx,[rsp+0x30]
   140020370:	cmp    eax,0x1
   140020373:	je     0x14002037c
   140020375:	call   0x140015c9c
   14002037a:	jmp    0x1400203ad
   14002037c:	call   0x140015c9c
   140020381:	test   eax,eax
   140020383:	je     0x14002038e
   140020385:	lea    rdx,[rip+0x2d3d4]        # 0x14004d760
   14002038c:	jmp    0x1400203a3
   14002038e:	mov    rax,QWORD PTR [r14+0x8]
   140020392:	cmp    QWORD PTR [r14],rax
   140020395:	setne  al
   140020398:	jmp    0x1400203af
   14002039a:	jmp    0x1400203ad
   14002039c:	lea    rdx,[rip+0x2d325]        # 0x14004d6c8
   1400203a3:	mov    ecx,0x2
   1400203a8:	call   0x14001a664
   1400203ad:	xor    al,al
   1400203af:	lea    r11,[rsp+0x90]
   1400203b7:	mov    rbx,QWORD PTR [r11+0x20]
   1400203bb:	mov    rsi,QWORD PTR [r11+0x28]
   1400203bf:	mov    rdi,QWORD PTR [r11+0x30]
   1400203c3:	mov    rsp,r11
   1400203c6:	pop    r15
   1400203c8:	pop    r14
   1400203ca:	pop    r12
   1400203cc:	ret    
   1400203cd:	int3   
   1400203ce:	int3   
   1400203cf:	int3   
   1400203d0:	rex push rbx
   1400203d2:	sub    rsp,0x20
   1400203d6:	xor    r10d,r10d
   1400203d9:	mov    ebx,edx
   1400203db:	mov    r8,rcx
   1400203de:	test   rcx,rcx
   1400203e1:	je     0x14002048b
   1400203e7:	test   edx,edx
   1400203e9:	je     0x14002048b
   1400203ef:	cmp    ebx,0x12
   1400203f2:	jb     0x14002048b
   1400203f8:	cmp    BYTE PTR [rcx],0x1f
   1400203fb:	jne    0x14002048b
   140020401:	cmp    BYTE PTR [rcx+0x1],0x8b
   140020405:	jne    0x14002048b
   14002040b:	cmp    BYTE PTR [rcx+0x2],0x8
   14002040f:	jne    0x14002048b
   140020411:	test   BYTE PTR [rcx+0x3],0x4
   140020415:	movzx  r9d,r10w
   140020419:	je     0x14002042e
   14002041b:	movzx  r9d,WORD PTR [rcx+0xa]
   140020420:	lea    eax,[rbx-0x8]
   140020423:	mov    ecx,eax
   140020425:	lea    rdx,[r9+0xc]
   140020429:	cmp    rdx,rcx
   14002042c:	ja     0x14002048b
   14002042e:	movzx  ecx,r9w
   140020432:	add    ecx,0xc
   140020435:	test   BYTE PTR [r8+0x3],0x8
   14002043a:	je     0x140020457
   14002043c:	mov    eax,ecx
   14002043e:	cmp    BYTE PTR [rcx+r8*1],r10b
   140020442:	je     0x140020455
   140020444:	lea    edx,[rbx-0x8]
   140020447:	inc    ecx
   140020449:	cmp    ecx,edx
   14002044b:	ja     0x14002048b
   14002044d:	mov    eax,ecx
   14002044f:	cmp    BYTE PTR [rcx+r8*1],r10b
   140020453:	jne    0x140020447
   140020455:	inc    ecx
   140020457:	test   BYTE PTR [r8+0x3],0x10
   14002045c:	je     0x140020477
   14002045e:	mov    eax,ecx
   140020460:	cmp    BYTE PTR [rcx+r8*1],r10b
   140020464:	je     0x140020477
   140020466:	lea    edx,[rbx-0x8]
   140020469:	inc    ecx
   14002046b:	cmp    ecx,edx
   14002046d:	ja     0x14002048b
   14002046f:	mov    eax,ecx
   140020471:	cmp    BYTE PTR [rcx+r8*1],r10b
   140020475:	jne    0x140020469
   140020477:	mov    ecx,DWORD PTR [rbx+r8*1-0x4]
   14002047c:	call   0x140015ce4
   140020481:	add    eax,0x12
   140020484:	cmp    eax,ebx
   140020486:	setae  al
   140020489:	jmp    0x14002048d
   14002048b:	xor    al,al
   14002048d:	add    rsp,0x20
   140020491:	pop    rbx
   140020492:	ret    
   140020493:	int3   
   140020494:	mov    rax,rsp
   140020497:	mov    QWORD PTR [rax+0x8],rcx
   14002049b:	push   rsi
   14002049c:	push   rdi
   14002049d:	push   r14
   14002049f:	sub    rsp,0x30
   1400204a3:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400204ab:	mov    QWORD PTR [rax+0x10],rbx
   1400204af:	mov    QWORD PTR [rax+0x20],rbp
   1400204b3:	mov    rdi,rdx
   1400204b6:	mov    rbx,rcx
   1400204b9:	xor    esi,esi
   1400204bb:	mov    DWORD PTR [rax+0x18],esi
   1400204be:	test   r8d,r8d
   1400204c1:	je     0x1400204f4
   1400204c3:	lea    rax,[rip+0x2d3fe]        # 0x14004d8c8
   1400204ca:	mov    QWORD PTR [rcx+0x8],rax
   1400204ce:	lea    rax,[rip+0x2b273]        # 0x14004b748
   1400204d5:	mov    QWORD PTR [rcx+0xa0],rax
   1400204dc:	xor    eax,eax
   1400204de:	mov    QWORD PTR [rcx+0xa8],rax
   1400204e5:	mov    QWORD PTR [rcx+0xb0],rax
   1400204ec:	mov    DWORD PTR [rsp+0x60],0x1
   1400204f4:	lea    rax,[rip+0x2d3ad]        # 0x14004d8a8
   1400204fb:	mov    QWORD PTR [rcx],rax
   1400204fe:	mov    rax,QWORD PTR [rcx+0x8]
   140020502:	movsxd rcx,DWORD PTR [rax+0x4]
   140020506:	lea    rax,[rip+0x2d3ab]        # 0x14004d8b8
   14002050d:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   140020512:	mov    rax,QWORD PTR [rbx+0x8]
   140020516:	movsxd rcx,DWORD PTR [rax+0x4]
   14002051a:	lea    edx,[rcx-0x98]
   140020520:	mov    DWORD PTR [rcx+rbx*1+0x4],edx
   140020524:	mov    rax,QWORD PTR [rdi+0x10]
   140020528:	mov    QWORD PTR [rbx+0x10],rax
   14002052c:	lea    rdx,[rdi+0x18]
   140020530:	lea    rcx,[rbx+0x18]
   140020534:	mov    r14d,0x7
   14002053a:	mov    QWORD PTR [rcx+0x18],r14
   14002053e:	mov    QWORD PTR [rcx+0x10],rsi
   140020542:	cmp    r14,0x8
   140020546:	jb     0x14002054d
   140020548:	mov    rax,QWORD PTR [rcx]
   14002054b:	jmp    0x140020550
   14002054d:	mov    rax,rcx
   140020550:	mov    WORD PTR [rax],si
   140020553:	or     rbp,0xffffffffffffffff
   140020557:	mov    r9,rbp
   14002055a:	xor    r8d,r8d
   14002055d:	call   0x14000b850
   140020562:	nop
   140020563:	lea    rdx,[rdi+0x38]
   140020567:	lea    rcx,[rbx+0x38]
   14002056b:	mov    QWORD PTR [rcx+0x18],r14
   14002056f:	mov    QWORD PTR [rcx+0x10],rsi
   140020573:	cmp    r14,0x8
   140020577:	jb     0x14002057e
   140020579:	mov    rax,QWORD PTR [rcx]
   14002057c:	jmp    0x140020581
   14002057e:	mov    rax,rcx
   140020581:	mov    WORD PTR [rax],si
   140020584:	mov    r9,rbp
   140020587:	xor    r8d,r8d
   14002058a:	call   0x14000b850
   14002058f:	nop
   140020590:	lea    rdx,[rdi+0x58]
   140020594:	lea    rcx,[rbx+0x58]
   140020598:	mov    QWORD PTR [rcx+0x18],r14
   14002059c:	mov    QWORD PTR [rcx+0x10],rsi
   1400205a0:	cmp    r14,0x8
   1400205a4:	jb     0x1400205ab
   1400205a6:	mov    rax,QWORD PTR [rcx]
   1400205a9:	jmp    0x1400205ae
   1400205ab:	mov    rax,rcx
   1400205ae:	mov    WORD PTR [rax],si
   1400205b1:	mov    r9,rbp
   1400205b4:	xor    r8d,r8d
   1400205b7:	call   0x14000b850
   1400205bc:	nop
   1400205bd:	lea    rdx,[rdi+0x78]
   1400205c1:	lea    rcx,[rbx+0x78]
   1400205c5:	mov    QWORD PTR [rcx+0x18],0xf
   1400205cd:	mov    QWORD PTR [rcx+0x10],rsi
   1400205d1:	cmp    QWORD PTR [rcx+0x18],0x10
   1400205d6:	jb     0x1400205dd
   1400205d8:	mov    rax,QWORD PTR [rcx]
   1400205db:	jmp    0x1400205e0
   1400205dd:	mov    rax,rcx
   1400205e0:	mov    BYTE PTR [rax],sil
   1400205e3:	mov    r9,rbp
   1400205e6:	xor    r8d,r8d
   1400205e9:	call   0x14000ba94
   1400205ee:	nop
   1400205ef:	mov    rax,rbx
   1400205f2:	mov    rbx,QWORD PTR [rsp+0x58]
   1400205f7:	mov    rbp,QWORD PTR [rsp+0x68]
   1400205fc:	add    rsp,0x30
   140020600:	pop    r14
   140020602:	pop    rdi
   140020603:	pop    rsi
   140020604:	ret    
   140020605:	int3   
   140020606:	int3   
   140020607:	int3   
   140020608:	mov    rax,rsp
   14002060b:	mov    QWORD PTR [rax+0x8],rcx
   14002060f:	push   rdi
   140020610:	sub    rsp,0x30
   140020614:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002061c:	mov    QWORD PTR [rax+0x10],rbx
   140020620:	mov    QWORD PTR [rax+0x20],rsi
   140020624:	mov    r10,rdx
   140020627:	mov    rbx,rcx
   14002062a:	xor    edi,edi
   14002062c:	mov    DWORD PTR [rax+0x18],edi
   14002062f:	test   r8d,r8d
   140020632:	je     0x140020665
   140020634:	lea    rax,[rip+0x2d28d]        # 0x14004d8c8
   14002063b:	mov    QWORD PTR [rcx+0x8],rax
   14002063f:	lea    rax,[rip+0x2b102]        # 0x14004b748
   140020646:	mov    QWORD PTR [rcx+0xa0],rax
   14002064d:	xor    eax,eax
   14002064f:	mov    QWORD PTR [rcx+0xa8],rax
   140020656:	mov    QWORD PTR [rcx+0xb0],rax
   14002065d:	mov    DWORD PTR [rsp+0x50],0x1
   140020665:	lea    rax,[rip+0x2d23c]        # 0x14004d8a8
   14002066c:	mov    QWORD PTR [rcx],rax
   14002066f:	mov    rax,QWORD PTR [rcx+0x8]
   140020673:	movsxd rcx,DWORD PTR [rax+0x4]
   140020677:	lea    rax,[rip+0x2d23a]        # 0x14004d8b8
   14002067e:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   140020683:	mov    rax,QWORD PTR [rbx+0x8]
   140020687:	movsxd rcx,DWORD PTR [rax+0x4]
   14002068b:	lea    edx,[rcx-0x98]
   140020691:	mov    DWORD PTR [rcx+rbx*1+0x4],edx
   140020695:	mov    QWORD PTR [rbx+0x10],rdi
   140020699:	lea    rax,[rbx+0x18]
   14002069d:	mov    esi,0x7
   1400206a2:	mov    QWORD PTR [rax+0x18],rsi
   1400206a6:	mov    QWORD PTR [rax+0x10],rdi
   1400206aa:	cmp    rsi,0x8
   1400206ae:	jb     0x1400206b3
   1400206b0:	mov    rax,QWORD PTR [rax]
   1400206b3:	mov    WORD PTR [rax],di
   1400206b6:	lea    rcx,[rbx+0x38]
   1400206ba:	mov    QWORD PTR [rcx+0x18],rsi
   1400206be:	mov    QWORD PTR [rcx+0x10],rdi
   1400206c2:	cmp    rsi,0x8
   1400206c6:	jb     0x1400206cd
   1400206c8:	mov    rax,QWORD PTR [rcx]
   1400206cb:	jmp    0x1400206d0
   1400206cd:	mov    rax,rcx
   1400206d0:	mov    WORD PTR [rax],di
   1400206d3:	or     r9,0xffffffffffffffff
   1400206d7:	xor    r8d,r8d
   1400206da:	mov    rdx,r10
   1400206dd:	call   0x14000b850
   1400206e2:	nop
   1400206e3:	lea    rax,[rbx+0x58]
   1400206e7:	mov    QWORD PTR [rax+0x18],rsi
   1400206eb:	mov    QWORD PTR [rax+0x10],rdi
   1400206ef:	cmp    rsi,0x8
   1400206f3:	jb     0x1400206f8
   1400206f5:	mov    rax,QWORD PTR [rax]
   1400206f8:	mov    WORD PTR [rax],di
   1400206fb:	lea    rax,[rbx+0x78]
   1400206ff:	mov    QWORD PTR [rax+0x18],0xf
   140020707:	mov    QWORD PTR [rax+0x10],rdi
   14002070b:	cmp    QWORD PTR [rax+0x18],0x10
   140020710:	jb     0x140020715
   140020712:	mov    rax,QWORD PTR [rax]
   140020715:	mov    BYTE PTR [rax],dil
   140020718:	mov    rcx,rbx
   14002071b:	call   0x140020a90
   140020720:	nop
   140020721:	mov    rax,rbx
   140020724:	mov    rbx,QWORD PTR [rsp+0x48]
   140020729:	mov    rsi,QWORD PTR [rsp+0x58]
   14002072e:	add    rsp,0x30
   140020732:	pop    rdi
   140020733:	ret    
   140020734:	mov    rax,rsp
   140020737:	mov    QWORD PTR [rax+0x8],rcx
   14002073b:	push   rbp
   14002073c:	push   rsi
   14002073d:	push   rdi
   14002073e:	push   r14
   140020740:	push   r15
   140020742:	sub    rsp,0x30
   140020746:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14002074e:	mov    QWORD PTR [rax+0x18],rbx
   140020752:	mov    rsi,r8
   140020755:	mov    rbp,rdx
   140020758:	mov    rbx,rcx
   14002075b:	xor    r14d,r14d
   14002075e:	mov    DWORD PTR [rax+0x10],r14d
   140020762:	cmp    DWORD PTR [rsp+0x80],r14d
   14002076a:	je     0x14002079d
   14002076c:	lea    rax,[rip+0x2d155]        # 0x14004d8c8
   140020773:	mov    QWORD PTR [rcx+0x8],rax
   140020777:	lea    rax,[rip+0x2afca]        # 0x14004b748
   14002077e:	mov    QWORD PTR [rcx+0xa0],rax
   140020785:	xor    eax,eax
   140020787:	mov    QWORD PTR [rcx+0xa8],rax
   14002078e:	mov    QWORD PTR [rcx+0xb0],rax
   140020795:	mov    DWORD PTR [rsp+0x68],0x1
   14002079d:	lea    rax,[rip+0x2d104]        # 0x14004d8a8
   1400207a4:	mov    QWORD PTR [rcx],rax
   1400207a7:	mov    rax,QWORD PTR [rcx+0x8]
   1400207ab:	movsxd rcx,DWORD PTR [rax+0x4]
   1400207af:	lea    rax,[rip+0x2d102]        # 0x14004d8b8
   1400207b6:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
   1400207bb:	mov    rax,QWORD PTR [rbx+0x8]
   1400207bf:	movsxd rcx,DWORD PTR [rax+0x4]
   1400207c3:	lea    edx,[rcx-0x98]
   1400207c9:	mov    DWORD PTR [rcx+rbx*1+0x4],edx
   1400207cd:	mov    QWORD PTR [rbx+0x10],r9
   1400207d1:	lea    rdi,[rbx+0x18]
   1400207d5:	mov    r15d,0x7
   1400207db:	mov    QWORD PTR [rdi+0x18],r15
   1400207df:	mov    QWORD PTR [rdi+0x10],r14
   1400207e3:	cmp    r15,0x8
   1400207e7:	jb     0x1400207ee
   1400207e9:	mov    rax,QWORD PTR [rdi]
   1400207ec:	jmp    0x1400207f1
   1400207ee:	mov    rax,rdi
   1400207f1:	mov    WORD PTR [rax],r14w
   1400207f5:	cmp    WORD PTR [r8],r14w
   1400207f9:	jne    0x140020800
   1400207fb:	mov    rax,r14
   1400207fe:	jmp    0x140020808
   140020800:	mov    rcx,rsi
   140020803:	call   0x140031108
   140020808:	mov    r8,rax
   14002080b:	mov    rdx,rsi
   14002080e:	mov    rcx,rdi
   140020811:	call   0x14000b730
   140020816:	nop
   140020817:	lea    rcx,[rbx+0x38]
   14002081b:	mov    QWORD PTR [rcx+0x18],r15
   14002081f:	mov    QWORD PTR [rcx+0x10],r14
   140020823:	cmp    r15,0x8
   140020827:	jb     0x14002082e
   140020829:	mov    rax,QWORD PTR [rcx]
   14002082c:	jmp    0x140020831
   14002082e:	mov    rax,rcx
   140020831:	mov    WORD PTR [rax],r14w
   140020835:	or     r9,0xffffffffffffffff
   140020839:	xor    r8d,r8d
   14002083c:	mov    rdx,rbp
   14002083f:	call   0x14000b850
   140020844:	nop
   140020845:	lea    rax,[rbx+0x58]
   140020849:	mov    QWORD PTR [rax+0x18],r15
   14002084d:	mov    QWORD PTR [rax+0x10],r14
   140020851:	cmp    r15,0x8
   140020855:	jb     0x14002085a
   140020857:	mov    rax,QWORD PTR [rax]
   14002085a:	mov    WORD PTR [rax],r14w
   14002085e:	lea    rax,[rbx+0x78]
   140020862:	mov    QWORD PTR [rax+0x18],0xf
   14002086a:	mov    QWORD PTR [rax+0x10],r14
   14002086e:	cmp    QWORD PTR [rax+0x18],0x10
   140020873:	jb     0x140020878
   140020875:	mov    rax,QWORD PTR [rax]
   140020878:	mov    BYTE PTR [rax],r14b
   14002087b:	mov    rcx,rbx
   14002087e:	call   0x140020a90
   140020883:	nop
   140020884:	mov    rax,rbx
   140020887:	mov    rbx,QWORD PTR [rsp+0x70]
   14002088c:	add    rsp,0x30
   140020890:	pop    r15
   140020892:	pop    r14
   140020894:	pop    rdi
   140020895:	pop    rsi
   140020896:	pop    rbp
   140020897:	ret    
   140020898:	rex push rdi
   14002089a:	sub    rsp,0x30
   14002089e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400208a7:	mov    QWORD PTR [rsp+0x40],rbx
   1400208ac:	mov    rdi,rdx
   1400208af:	mov    rbx,rcx
   1400208b2:	cmp    rcx,rdx
   1400208b5:	je     0x1400208fe
   1400208b7:	mov    rdx,QWORD PTR [rcx+0x18]
   1400208bb:	cmp    rdx,0x10
   1400208bf:	jb     0x1400208d3
   1400208c1:	inc    rdx
   1400208c4:	mov    r8d,0x1
   1400208ca:	mov    rcx,QWORD PTR [rcx]
   1400208cd:	call   0x140004804
   1400208d2:	nop
   1400208d3:	mov    QWORD PTR [rbx+0x18],0xf
   1400208db:	and    QWORD PTR [rbx+0x10],0x0
   1400208e0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400208e5:	jb     0x1400208ec
   1400208e7:	mov    rax,QWORD PTR [rbx]
   1400208ea:	jmp    0x1400208ef
   1400208ec:	mov    rax,rbx
   1400208ef:	mov    BYTE PTR [rax],0x0
   1400208f2:	mov    rdx,rdi
   1400208f5:	mov    rcx,rbx
   1400208f8:	call   0x14000be10
   1400208fd:	nop
   1400208fe:	mov    rax,rbx
   140020901:	mov    rbx,QWORD PTR [rsp+0x40]
   140020906:	add    rsp,0x30
   14002090a:	pop    rdi
   14002090b:	ret    
   14002090c:	rex push rbx
   14002090e:	sub    rsp,0x30
   140020912:	mov    rbx,rdx
   140020915:	xor    eax,eax
   140020917:	lea    rdx,[rcx+0x58]
   14002091b:	mov    DWORD PTR [rsp+0x20],eax
   14002091f:	or     r9,0xffffffffffffffff
   140020923:	xor    r8d,r8d
   140020926:	mov    rcx,rbx
   140020929:	mov    QWORD PTR [rbx+0x18],0x7
   140020931:	mov    QWORD PTR [rbx+0x10],rax
   140020935:	mov    WORD PTR [rbx],ax
   140020938:	call   0x14000b850
   14002093d:	mov    rax,rbx
   140020940:	add    rsp,0x30
   140020944:	pop    rbx
   140020945:	ret    
   140020946:	int3   
   140020947:	int3   
   140020948:	test   cl,cl
   14002094a:	jne    0x1400209e9
   140020950:	mov    rax,rsp
   140020953:	push   rdi
   140020954:	sub    rsp,0x130
   14002095b:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140020964:	mov    QWORD PTR [rax+0x8],rbx
   140020968:	mov    QWORD PTR [rax+0x20],rsi
   14002096c:	mov    rax,QWORD PTR [rip+0x506dd]        # 0x140071050
   140020973:	xor    rax,rsp
   140020976:	mov    QWORD PTR [rsp+0x120],rax
   14002097e:	mov    rdi,r9
   140020981:	mov    rsi,r8
   140020984:	mov    rbx,rdx
   140020987:	xor    eax,eax
   140020989:	mov    QWORD PTR [rsp+0x50],0x7
   140020992:	mov    QWORD PTR [rsp+0x48],rax
   140020997:	mov    WORD PTR [rsp+0x38],ax
   14002099c:	cmp    WORD PTR [rdx],ax
   14002099f:	je     0x1400209a9
   1400209a1:	mov    rcx,rdx
   1400209a4:	call   0x140031108
   1400209a9:	mov    r8,rax
   1400209ac:	mov    rdx,rbx
   1400209af:	lea    rcx,[rsp+0x38]
   1400209b4:	call   0x14000b730
   1400209b9:	nop
   1400209ba:	mov    DWORD PTR [rsp+0x20],0x1
   1400209c2:	mov    r9,rdi
   1400209c5:	mov    r8,rsi
   1400209c8:	lea    rdx,[rsp+0x38]
   1400209cd:	lea    rcx,[rsp+0x60]
   1400209d2:	call   0x140020734
   1400209d7:	lea    rdx,[rip+0x4f56a]        # 0x14006ff48
   1400209de:	lea    rcx,[rsp+0x60]
   1400209e3:	call   0x14002ab88
   1400209e8:	nop
   1400209e9:	ret    
   1400209ea:	int3   
   1400209eb:	int3   
   1400209ec:	test   cl,cl
   1400209ee:	jne    0x140020a8d
   1400209f4:	mov    rax,rsp
   1400209f7:	push   rdi
   1400209f8:	sub    rsp,0x130
   1400209ff:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140020a08:	mov    QWORD PTR [rax+0x8],rbx
   140020a0c:	mov    QWORD PTR [rax+0x20],rsi
   140020a10:	mov    rax,QWORD PTR [rip+0x50639]        # 0x140071050
   140020a17:	xor    rax,rsp
   140020a1a:	mov    QWORD PTR [rsp+0x120],rax
   140020a22:	mov    rdi,r9
   140020a25:	mov    rsi,r8
   140020a28:	mov    rbx,rdx
   140020a2b:	xor    eax,eax
   140020a2d:	mov    QWORD PTR [rsp+0x50],0x7
   140020a36:	mov    QWORD PTR [rsp+0x48],rax
   140020a3b:	mov    WORD PTR [rsp+0x38],ax
   140020a40:	cmp    WORD PTR [rdx],ax
   140020a43:	je     0x140020a4d
   140020a45:	mov    rcx,rdx
   140020a48:	call   0x140031108
   140020a4d:	mov    r8,rax
   140020a50:	mov    rdx,rbx
   140020a53:	lea    rcx,[rsp+0x38]
   140020a58:	call   0x14000b730
   140020a5d:	nop
   140020a5e:	mov    DWORD PTR [rsp+0x20],0x1
   140020a66:	mov    r9,rdi
   140020a69:	mov    r8,rsi
   140020a6c:	lea    rdx,[rsp+0x38]
   140020a71:	lea    rcx,[rsp+0x60]
   140020a76:	call   0x140020734
   140020a7b:	lea    rdx,[rip+0x4f4c6]        # 0x14006ff48
   140020a82:	lea    rcx,[rsp+0x60]
   140020a87:	call   0x14002ab88
   140020a8c:	nop
   140020a8d:	ret    
   140020a8e:	int3   
   140020a8f:	int3   
   140020a90:	mov    rax,rsp
   140020a93:	push   rbp
   140020a94:	lea    rbp,[rax-0x48]
   140020a98:	sub    rsp,0x140
   140020a9f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020aa8:	mov    QWORD PTR [rax+0x10],rbx
   140020aac:	mov    QWORD PTR [rax+0x18],rsi
   140020ab0:	mov    QWORD PTR [rax+0x20],rdi
   140020ab4:	mov    rax,QWORD PTR [rip+0x50595]        # 0x140071050
   140020abb:	xor    rax,rsp
   140020abe:	mov    QWORD PTR [rbp+0x30],rax
   140020ac2:	mov    rdi,rcx
   140020ac5:	lea    rdx,[rcx+0x38]
   140020ac9:	lea    rbx,[rcx+0x58]
   140020acd:	or     rsi,0xffffffffffffffff
   140020ad1:	cmp    rbx,rdx
   140020ad4:	je     0x140020ae4
   140020ad6:	mov    r9,rsi
   140020ad9:	xor    r8d,r8d
   140020adc:	mov    rcx,rbx
   140020adf:	call   0x14000b850
   140020ae4:	cmp    QWORD PTR [rdi+0x28],0x0
   140020ae9:	je     0x140020ba5
   140020aef:	lea    rcx,[rip+0x2cdda]        # 0x14004d8d0
   140020af6:	call   0x140031108
   140020afb:	mov    r8,rax
   140020afe:	lea    rdx,[rip+0x2cdcb]        # 0x14004d8d0
   140020b05:	mov    rcx,rbx
   140020b08:	call   0x14000f260
   140020b0d:	lea    rdx,[rdi+0x18]
   140020b11:	mov    r9,rsi
   140020b14:	xor    r8d,r8d
   140020b17:	mov    rcx,rbx
   140020b1a:	call   0x14000f3bc
   140020b1f:	cmp    QWORD PTR [rdi+0x10],0x0
   140020b24:	je     0x140020ba5
   140020b26:	mov    edx,0x3a
   140020b2b:	mov    rcx,rbx
   140020b2e:	call   0x14001a46c
   140020b33:	mov    edx,0x2
   140020b38:	lea    r8d,[rdx-0x1]
   140020b3c:	lea    rcx,[rsp+0x28]
   140020b41:	call   0x14000be9c
   140020b46:	nop
   140020b47:	mov    rdx,QWORD PTR [rdi+0x10]
   140020b4b:	lea    rcx,[rsp+0x28]
   140020b50:	call   0x14000e364
   140020b55:	lea    rdx,[rbp+0x10]
   140020b59:	lea    rcx,[rsp+0x28]
   140020b5e:	call   0x14000a950
   140020b63:	nop
   140020b64:	mov    r9,rsi
   140020b67:	xor    r8d,r8d
   140020b6a:	lea    rdx,[rbp+0x10]
   140020b6e:	mov    rcx,rbx
   140020b71:	call   0x14000f3bc
   140020b76:	nop
   140020b77:	xor    r8d,r8d
   140020b7a:	mov    dl,0x1
   140020b7c:	lea    rcx,[rbp+0x10]
   140020b80:	call   0x14000b6b0
   140020b85:	nop
   140020b86:	lea    rcx,[rbp-0x50]
   140020b8a:	call   0x14000a9dc
   140020b8f:	nop
   140020b90:	lea    rax,[rip+0x2ad81]        # 0x14004b918
   140020b97:	mov    QWORD PTR [rbp-0x50],rax
   140020b9b:	lea    rcx,[rbp-0x50]
   140020b9f:	call   0x140027b0c
   140020ba4:	nop
   140020ba5:	cmp    QWORD PTR [rbx+0x18],0x8
   140020baa:	jb     0x140020baf
   140020bac:	mov    rbx,QWORD PTR [rbx]
   140020baf:	mov    rdx,rbx
   140020bb2:	lea    rcx,[rbp+0x10]
   140020bb6:	call   0x140018be0
   140020bbb:	lea    rcx,[rdi+0x78]
   140020bbf:	mov    rdx,rax
   140020bc2:	call   0x140020898
   140020bc7:	mov    rdx,QWORD PTR [rbp+0x28]
   140020bcb:	cmp    rdx,0x10
   140020bcf:	jb     0x140020be3
   140020bd1:	inc    rdx
   140020bd4:	mov    r8d,0x1
   140020bda:	mov    rcx,QWORD PTR [rbp+0x10]
   140020bde:	call   0x140004804
   140020be3:	mov    rcx,QWORD PTR [rbp+0x30]
   140020be7:	xor    rcx,rsp
   140020bea:	call   0x140025df0
   140020bef:	lea    r11,[rsp+0x140]
   140020bf7:	mov    rbx,QWORD PTR [r11+0x18]
   140020bfb:	mov    rsi,QWORD PTR [r11+0x20]
   140020bff:	mov    rdi,QWORD PTR [r11+0x28]
   140020c03:	mov    rsp,r11
   140020c06:	pop    rbp
   140020c07:	ret    
   140020c08:	lea    rax,[rcx-0x28]
   140020c0c:	cmp    QWORD PTR [rax+0x18],0x10
   140020c11:	jb     0x140020c16
   140020c13:	mov    rax,QWORD PTR [rax]
   140020c16:	ret    
   140020c17:	int3   
   140020c18:	rex push rbp
   140020c1a:	push   rbx
   140020c1b:	push   rsi
   140020c1c:	push   rdi
   140020c1d:	push   r14
   140020c1f:	mov    rbp,rsp
   140020c22:	sub    rsp,0x40
   140020c26:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140020c2e:	mov    r14,rcx
   140020c31:	xor    edx,edx
   140020c33:	lea    rcx,[rbp+0x38]
   140020c37:	call   0x140027310
   140020c3c:	nop
   140020c3d:	mov    rsi,QWORD PTR [rip+0x54fc4]        # 0x140075c08
   140020c44:	mov    QWORD PTR [rbp+0x40],rsi
   140020c48:	mov    rdi,QWORD PTR [rip+0x55779]        # 0x1400763c8
   140020c4f:	test   rdi,rdi
   140020c52:	jne    0x140020c8f
   140020c54:	xor    edx,edx
   140020c56:	lea    rcx,[rbp+0x30]
   140020c5a:	call   0x140027310
   140020c5f:	cmp    QWORD PTR [rip+0x55762],rdi        # 0x1400763c8
   140020c66:	jne    0x140020c7f
   140020c68:	mov    eax,DWORD PTR [rip+0x5573a]        # 0x1400763a8
   140020c6e:	inc    eax
   140020c70:	mov    DWORD PTR [rip+0x55732],eax        # 0x1400763a8
   140020c76:	cdqe   
   140020c78:	mov    QWORD PTR [rip+0x55749],rax        # 0x1400763c8
   140020c7f:	lea    rcx,[rbp+0x30]
   140020c83:	call   0x140027390
   140020c88:	mov    rdi,QWORD PTR [rip+0x55739]        # 0x1400763c8
   140020c8f:	mov    rcx,QWORD PTR [r14+0x8]
   140020c93:	cmp    rdi,QWORD PTR [rcx+0x18]
   140020c97:	jae    0x140020ca3
   140020c99:	mov    rax,QWORD PTR [rcx+0x10]
   140020c9d:	mov    rbx,QWORD PTR [rax+rdi*8]
   140020ca1:	jmp    0x140020ca5
   140020ca3:	xor    ebx,ebx
   140020ca5:	test   rbx,rbx
   140020ca8:	jne    0x140020d35
   140020cae:	cmp    BYTE PTR [rcx+0x24],bl
   140020cb1:	je     0x140020cca
   140020cb3:	call   0x14002756c
   140020cb8:	cmp    rdi,QWORD PTR [rax+0x18]
   140020cbc:	jae    0x140020cc8
   140020cbe:	mov    rax,QWORD PTR [rax+0x10]
   140020cc2:	mov    rbx,QWORD PTR [rax+rdi*8]
   140020cc6:	jmp    0x140020cca
   140020cc8:	xor    ebx,ebx
   140020cca:	test   rbx,rbx
   140020ccd:	jne    0x140020d35
   140020ccf:	test   rsi,rsi
   140020cd2:	je     0x140020cd9
   140020cd4:	mov    rbx,rsi
   140020cd7:	jmp    0x140020d35
   140020cd9:	mov    rdx,r14
   140020cdc:	lea    rcx,[rbp+0x40]
   140020ce0:	call   0x140022088
   140020ce5:	cmp    rax,0xffffffffffffffff
   140020ce9:	jne    0x140020d18
   140020ceb:	xor    eax,eax
   140020ced:	mov    QWORD PTR [rbp-0x8],rax
   140020cf1:	lea    rax,[rip+0x40f90]        # 0x140061c88
   140020cf8:	mov    QWORD PTR [rbp-0x10],rax
   140020cfc:	lea    rax,[rip+0x2aa5d]        # 0x14004b760
   140020d03:	mov    QWORD PTR [rbp-0x18],rax
   140020d07:	lea    rdx,[rip+0x4f1ca]        # 0x14006fed8
   140020d0e:	lea    rcx,[rbp-0x18]
   140020d12:	call   0x14002ab88
   140020d17:	int3   
   140020d18:	mov    rbx,QWORD PTR [rbp+0x40]
   140020d1c:	mov    QWORD PTR [rip+0x54ee5],rbx        # 0x140075c08
   140020d23:	mov    rdx,QWORD PTR [rbx]
   140020d26:	mov    rcx,rbx
   140020d29:	call   QWORD PTR [rdx+0x8]
   140020d2c:	mov    rcx,rbx
   140020d2f:	call   0x140027534
   140020d34:	nop
   140020d35:	lea    rcx,[rbp+0x38]
   140020d39:	call   0x140027390
   140020d3e:	mov    rax,rbx
   140020d41:	add    rsp,0x40
   140020d45:	pop    r14
   140020d47:	pop    rdi
   140020d48:	pop    rsi
   140020d49:	pop    rbx
   140020d4a:	pop    rbp
   140020d4b:	ret    
   140020d4c:	rex push rbp
   140020d4e:	push   rbx
   140020d4f:	push   rsi
   140020d50:	push   rdi
   140020d51:	push   r14
   140020d53:	mov    rbp,rsp
   140020d56:	sub    rsp,0x40
   140020d5a:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140020d62:	mov    r14,rcx
   140020d65:	xor    edx,edx
   140020d67:	lea    rcx,[rbp+0x38]
   140020d6b:	call   0x140027310
   140020d70:	nop
   140020d71:	mov    rsi,QWORD PTR [rip+0x54e98]        # 0x140075c10
   140020d78:	mov    QWORD PTR [rbp+0x40],rsi
   140020d7c:	mov    rdi,QWORD PTR [rip+0x54e75]        # 0x140075bf8
   140020d83:	test   rdi,rdi
   140020d86:	jne    0x140020dc3
   140020d88:	xor    edx,edx
   140020d8a:	lea    rcx,[rbp+0x30]
   140020d8e:	call   0x140027310
   140020d93:	cmp    QWORD PTR [rip+0x54e5e],rdi        # 0x140075bf8
   140020d9a:	jne    0x140020db3
   140020d9c:	mov    eax,DWORD PTR [rip+0x55606]        # 0x1400763a8
   140020da2:	inc    eax
   140020da4:	mov    DWORD PTR [rip+0x555fe],eax        # 0x1400763a8
   140020daa:	cdqe   
   140020dac:	mov    QWORD PTR [rip+0x54e45],rax        # 0x140075bf8
   140020db3:	lea    rcx,[rbp+0x30]
   140020db7:	call   0x140027390
   140020dbc:	mov    rdi,QWORD PTR [rip+0x54e35]        # 0x140075bf8
   140020dc3:	mov    rcx,QWORD PTR [r14+0x8]
   140020dc7:	cmp    rdi,QWORD PTR [rcx+0x18]
   140020dcb:	jae    0x140020dd7
   140020dcd:	mov    rax,QWORD PTR [rcx+0x10]
   140020dd1:	mov    rbx,QWORD PTR [rax+rdi*8]
   140020dd5:	jmp    0x140020dd9
   140020dd7:	xor    ebx,ebx
   140020dd9:	test   rbx,rbx
   140020ddc:	jne    0x140020e69
   140020de2:	cmp    BYTE PTR [rcx+0x24],bl
   140020de5:	je     0x140020dfe
   140020de7:	call   0x14002756c
   140020dec:	cmp    rdi,QWORD PTR [rax+0x18]
   140020df0:	jae    0x140020dfc
   140020df2:	mov    rax,QWORD PTR [rax+0x10]
   140020df6:	mov    rbx,QWORD PTR [rax+rdi*8]
   140020dfa:	jmp    0x140020dfe
   140020dfc:	xor    ebx,ebx
   140020dfe:	test   rbx,rbx
   140020e01:	jne    0x140020e69
   140020e03:	test   rsi,rsi
   140020e06:	je     0x140020e0d
   140020e08:	mov    rbx,rsi
   140020e0b:	jmp    0x140020e69
   140020e0d:	mov    rdx,r14
   140020e10:	lea    rcx,[rbp+0x40]
   140020e14:	call   0x14002216c
   140020e19:	cmp    rax,0xffffffffffffffff
   140020e1d:	jne    0x140020e4c
   140020e1f:	xor    eax,eax
   140020e21:	mov    QWORD PTR [rbp-0x8],rax
   140020e25:	lea    rax,[rip+0x40e5c]        # 0x140061c88
   140020e2c:	mov    QWORD PTR [rbp-0x10],rax
   140020e30:	lea    rax,[rip+0x2a929]        # 0x14004b760
   140020e37:	mov    QWORD PTR [rbp-0x18],rax
   140020e3b:	lea    rdx,[rip+0x4f096]        # 0x14006fed8
   140020e42:	lea    rcx,[rbp-0x18]
   140020e46:	call   0x14002ab88
   140020e4b:	int3   
   140020e4c:	mov    rbx,QWORD PTR [rbp+0x40]
   140020e50:	mov    QWORD PTR [rip+0x54db9],rbx        # 0x140075c10
   140020e57:	mov    rdx,QWORD PTR [rbx]
   140020e5a:	mov    rcx,rbx
   140020e5d:	call   QWORD PTR [rdx+0x8]
   140020e60:	mov    rcx,rbx
   140020e63:	call   0x140027534
   140020e68:	nop
   140020e69:	lea    rcx,[rbp+0x38]
   140020e6d:	call   0x140027390
   140020e72:	mov    rax,rbx
   140020e75:	add    rsp,0x40
   140020e79:	pop    r14
   140020e7b:	pop    rdi
   140020e7c:	pop    rsi
   140020e7d:	pop    rbx
   140020e7e:	pop    rbp
   140020e7f:	ret    
   140020e80:	rex push rbp
   140020e82:	push   rbx
   140020e83:	push   rsi
   140020e84:	push   rdi
   140020e85:	push   r14
   140020e87:	mov    rbp,rsp
   140020e8a:	sub    rsp,0x40
   140020e8e:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140020e96:	mov    r14,rcx
   140020e99:	xor    edx,edx
   140020e9b:	lea    rcx,[rbp+0x38]
   140020e9f:	call   0x140027310
   140020ea4:	nop
   140020ea5:	mov    rsi,QWORD PTR [rip+0x54d6c]        # 0x140075c18
   140020eac:	mov    QWORD PTR [rbp+0x40],rsi
   140020eb0:	mov    rdi,QWORD PTR [rip+0x54d49]        # 0x140075c00
   140020eb7:	test   rdi,rdi
   140020eba:	jne    0x140020ef7
   140020ebc:	xor    edx,edx
   140020ebe:	lea    rcx,[rbp+0x30]
   140020ec2:	call   0x140027310
   140020ec7:	cmp    QWORD PTR [rip+0x54d32],rdi        # 0x140075c00
   140020ece:	jne    0x140020ee7
   140020ed0:	mov    eax,DWORD PTR [rip+0x554d2]        # 0x1400763a8
   140020ed6:	inc    eax
   140020ed8:	mov    DWORD PTR [rip+0x554ca],eax        # 0x1400763a8
   140020ede:	cdqe   
   140020ee0:	mov    QWORD PTR [rip+0x54d19],rax        # 0x140075c00
   140020ee7:	lea    rcx,[rbp+0x30]
   140020eeb:	call   0x140027390
   140020ef0:	mov    rdi,QWORD PTR [rip+0x54d09]        # 0x140075c00
   140020ef7:	mov    rcx,QWORD PTR [r14+0x8]
   140020efb:	cmp    rdi,QWORD PTR [rcx+0x18]
   140020eff:	jae    0x140020f0b
   140020f01:	mov    rax,QWORD PTR [rcx+0x10]
   140020f05:	mov    rbx,QWORD PTR [rax+rdi*8]
   140020f09:	jmp    0x140020f0d
   140020f0b:	xor    ebx,ebx
   140020f0d:	test   rbx,rbx
   140020f10:	jne    0x140020f9d
   140020f16:	cmp    BYTE PTR [rcx+0x24],bl
   140020f19:	je     0x140020f32
   140020f1b:	call   0x14002756c
   140020f20:	cmp    rdi,QWORD PTR [rax+0x18]
   140020f24:	jae    0x140020f30
   140020f26:	mov    rax,QWORD PTR [rax+0x10]
   140020f2a:	mov    rbx,QWORD PTR [rax+rdi*8]
   140020f2e:	jmp    0x140020f32
   140020f30:	xor    ebx,ebx
   140020f32:	test   rbx,rbx
   140020f35:	jne    0x140020f9d
   140020f37:	test   rsi,rsi
   140020f3a:	je     0x140020f41
   140020f3c:	mov    rbx,rsi
   140020f3f:	jmp    0x140020f9d
   140020f41:	mov    rdx,r14
   140020f44:	lea    rcx,[rbp+0x40]
   140020f48:	call   0x140022230
   140020f4d:	cmp    rax,0xffffffffffffffff
   140020f51:	jne    0x140020f80
   140020f53:	xor    eax,eax
   140020f55:	mov    QWORD PTR [rbp-0x8],rax
   140020f59:	lea    rax,[rip+0x40d28]        # 0x140061c88
   140020f60:	mov    QWORD PTR [rbp-0x10],rax
   140020f64:	lea    rax,[rip+0x2a7f5]        # 0x14004b760
   140020f6b:	mov    QWORD PTR [rbp-0x18],rax
   140020f6f:	lea    rdx,[rip+0x4ef62]        # 0x14006fed8
   140020f76:	lea    rcx,[rbp-0x18]
   140020f7a:	call   0x14002ab88
   140020f7f:	int3   
   140020f80:	mov    rbx,QWORD PTR [rbp+0x40]
   140020f84:	mov    QWORD PTR [rip+0x54c8d],rbx        # 0x140075c18
   140020f8b:	mov    rdx,QWORD PTR [rbx]
   140020f8e:	mov    rcx,rbx
   140020f91:	call   QWORD PTR [rdx+0x8]
   140020f94:	mov    rcx,rbx
   140020f97:	call   0x140027534
   140020f9c:	nop
   140020f9d:	lea    rcx,[rbp+0x38]
   140020fa1:	call   0x140027390
   140020fa6:	mov    rax,rbx
   140020fa9:	add    rsp,0x40
   140020fad:	pop    r14
   140020faf:	pop    rdi
   140020fb0:	pop    rsi
   140020fb1:	pop    rbx
   140020fb2:	pop    rbp
   140020fb3:	ret    
   140020fb4:	mov    QWORD PTR [rsp+0x8],rcx
   140020fb9:	push   rbx
   140020fba:	sub    rsp,0x30
   140020fbe:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140020fc7:	mov    r9,rdx
   140020fca:	mov    rbx,rcx
   140020fcd:	and    DWORD PTR [rsp+0x50],0x0
   140020fd2:	test   r8d,r8d
   140020fd5:	je     0x140020fff
   140020fd7:	lea    rax,[rip+0x2d04a]        # 0x14004e028
   140020fde:	mov    QWORD PTR [rcx],rax
   140020fe1:	lea    rax,[rip+0x2d048]        # 0x14004e030
   140020fe8:	mov    QWORD PTR [rcx+0x10],rax
   140020fec:	lea    rax,[rip+0x2cffd]        # 0x14004dff0
   140020ff3:	mov    QWORD PTR [rcx+0x20],rax
   140020ff7:	mov    DWORD PTR [rsp+0x50],0x1
   140020fff:	mov    rax,QWORD PTR [rcx]
   140021002:	movsxd rcx,DWORD PTR [rax+0x4]
   140021006:	lea    rax,[rip+0x2cff3]        # 0x14004e000
   14002100d:	mov    QWORD PTR [rcx+rbx*1],rax
   140021011:	mov    rax,QWORD PTR [rbx]
   140021014:	movsxd rcx,DWORD PTR [rax+0x4]
   140021018:	lea    edx,[rcx-0x18]
   14002101b:	mov    DWORD PTR [rcx+rbx*1-0x4],edx
   14002101f:	and    QWORD PTR [rbx+0x8],0x0
   140021024:	mov    rax,QWORD PTR [rbx]
   140021027:	movsxd rcx,DWORD PTR [rax+0x4]
   14002102b:	add    rcx,rbx
   14002102e:	xor    r8d,r8d
   140021031:	mov    rdx,r9
   140021034:	call   0x140023890
   140021039:	nop
   14002103a:	lea    r8,[rbx+0x10]
   14002103e:	mov    QWORD PTR [rsp+0x40],r8
   140021043:	mov    rax,QWORD PTR [r8]
   140021046:	movsxd rcx,DWORD PTR [rax+0x4]
   14002104a:	lea    rax,[rip+0x2cfbf]        # 0x14004e010
   140021051:	mov    QWORD PTR [rcx+r8*1],rax
   140021055:	mov    rax,QWORD PTR [r8]
   140021058:	movsxd rcx,DWORD PTR [rax+0x4]
   14002105c:	lea    edx,[rcx-0x10]
   14002105f:	mov    DWORD PTR [rcx+r8*1-0x4],edx
   140021064:	mov    rax,QWORD PTR [rbx]
   140021067:	movsxd rcx,DWORD PTR [rax+0x4]
   14002106b:	lea    rax,[rip+0x2cfae]        # 0x14004e020
   140021072:	mov    QWORD PTR [rcx+rbx*1],rax
   140021076:	mov    rax,QWORD PTR [rbx]
   140021079:	movsxd rcx,DWORD PTR [rax+0x4]
   14002107d:	lea    edx,[rcx-0x20]
   140021080:	mov    DWORD PTR [rcx+rbx*1-0x4],edx
   140021084:	mov    rax,rbx
   140021087:	add    rsp,0x30
   14002108b:	pop    rbx
   14002108c:	ret    
   14002108d:	int3   
   14002108e:	int3   
   14002108f:	int3   
   140021090:	rex push rdi
   140021092:	sub    rsp,0x30
   140021096:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002109f:	mov    QWORD PTR [rsp+0x40],rbx
   1400210a4:	mov    rbx,rcx
   1400210a7:	lea    rax,[rip+0x2cf92]        # 0x14004e040
   1400210ae:	mov    QWORD PTR [rcx],rax
   1400210b1:	mov    ecx,0x10
   1400210b6:	call   0x140026118
   1400210bb:	mov    rdi,rax
   1400210be:	test   rax,rax
   1400210c1:	je     0x1400210d0
   1400210c3:	mov    cl,0x1
   1400210c5:	call   0x140027574
   1400210ca:	mov    QWORD PTR [rdi+0x8],rax
   1400210ce:	jmp    0x1400210d2
   1400210d0:	xor    edi,edi
   1400210d2:	mov    QWORD PTR [rbx+0x60],rdi
   1400210d6:	lea    rax,[rbx+0x8]
   1400210da:	mov    QWORD PTR [rbx+0x18],rax
   1400210de:	lea    rcx,[rbx+0x10]
   1400210e2:	mov    QWORD PTR [rbx+0x20],rcx
   1400210e6:	lea    rax,[rbx+0x28]
   1400210ea:	mov    QWORD PTR [rbx+0x38],rax
   1400210ee:	lea    rax,[rbx+0x30]
   1400210f2:	mov    QWORD PTR [rbx+0x40],rax
   1400210f6:	lea    rax,[rbx+0x48]
   1400210fa:	mov    QWORD PTR [rbx+0x50],rax
   1400210fe:	lea    rax,[rbx+0x4c]
   140021102:	mov    QWORD PTR [rbx+0x58],rax
   140021106:	and    QWORD PTR [rcx],0x0
   14002110a:	mov    rax,QWORD PTR [rbx+0x40]
   14002110e:	and    QWORD PTR [rax],0x0
   140021112:	mov    rax,QWORD PTR [rbx+0x58]
   140021116:	and    DWORD PTR [rax],0x0
   140021119:	mov    rax,QWORD PTR [rbx+0x18]
   14002111d:	and    QWORD PTR [rax],0x0
   140021121:	mov    rax,QWORD PTR [rbx+0x38]
   140021125:	and    QWORD PTR [rax],0x0
   140021129:	mov    rax,QWORD PTR [rbx+0x50]
   14002112d:	and    DWORD PTR [rax],0x0
   140021130:	mov    rax,rbx
   140021133:	mov    rbx,QWORD PTR [rsp+0x40]
   140021138:	add    rsp,0x30
   14002113c:	pop    rdi
   14002113d:	ret    
   14002113e:	int3   
   14002113f:	int3   
   140021140:	rex push rdi
   140021142:	sub    rsp,0x30
   140021146:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002114f:	mov    QWORD PTR [rsp+0x48],rbx
   140021154:	mov    ebx,edx
   140021156:	mov    rdi,rcx
   140021159:	call   0x140021090
   14002115e:	nop
   14002115f:	lea    rax,[rip+0x2cf5a]        # 0x14004e0c0
   140021166:	mov    QWORD PTR [rdi],rax
   140021169:	mov    r8d,ebx
   14002116c:	shl    r8d,0x2
   140021170:	not    r8d
   140021173:	and    r8d,0x4
   140021177:	mov    eax,ebx
   140021179:	mov    edx,r8d
   14002117c:	or     edx,0x2
   14002117f:	and    al,0x2
   140021181:	cmovne edx,r8d
   140021185:	mov    eax,ebx
   140021187:	mov    ecx,edx
   140021189:	or     ecx,0x8
   14002118c:	and    al,0x8
   14002118e:	cmove  ecx,edx
   140021191:	and    QWORD PTR [rdi+0x68],0x0
   140021196:	mov    eax,ecx
   140021198:	or     eax,0x10
   14002119b:	and    bl,0x4
   14002119e:	cmove  eax,ecx
   1400211a1:	mov    DWORD PTR [rdi+0x70],eax
   1400211a4:	mov    rax,rdi
   1400211a7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400211ac:	add    rsp,0x30
   1400211b0:	pop    rdi
   1400211b1:	ret    
   1400211b2:	int3   
   1400211b3:	int3   
   1400211b4:	mov    rax,rsp
   1400211b7:	mov    QWORD PTR [rax+0x8],rcx
   1400211bb:	push   rdi
   1400211bc:	sub    rsp,0x30
   1400211c0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400211c8:	mov    QWORD PTR [rax+0x10],rbx
   1400211cc:	mov    QWORD PTR [rax+0x20],rsi
   1400211d0:	mov    esi,edx
   1400211d2:	mov    rdi,rcx
   1400211d5:	and    DWORD PTR [rax+0x18],0x0
   1400211d9:	test   r8d,r8d
   1400211dc:	je     0x140021209
   1400211de:	lea    rax,[rip+0x2cf63]        # 0x14004e148
   1400211e5:	mov    QWORD PTR [rcx],rax
   1400211e8:	lea    rax,[rip+0x2cf61]        # 0x14004e150
   1400211ef:	mov    QWORD PTR [rcx+0x10],rax
   1400211f3:	lea    rax,[rip+0x2cdf6]        # 0x14004dff0
   1400211fa:	mov    QWORD PTR [rcx+0x98],rax
   140021201:	mov    DWORD PTR [rsp+0x50],0x1
   140021209:	xor    r8d,r8d
   14002120c:	lea    rdx,[rcx+0x18]
   140021210:	call   0x140020fb4
   140021215:	nop
   140021216:	mov    rax,QWORD PTR [rdi]
   140021219:	movsxd rdx,DWORD PTR [rax+0x4]
   14002121d:	lea    rax,[rip+0x2cf1c]        # 0x14004e140
   140021224:	mov    QWORD PTR [rdx+rdi*1],rax
   140021228:	mov    rax,QWORD PTR [rdi]
   14002122b:	movsxd rdx,DWORD PTR [rax+0x4]
   14002122f:	lea    r8d,[rdx-0x98]
   140021236:	mov    DWORD PTR [rdx+rdi*1-0x4],r8d
   14002123b:	mov    edx,esi
   14002123d:	lea    rcx,[rdi+0x18]
   140021241:	call   0x140021140
   140021246:	nop
   140021247:	mov    rax,rdi
   14002124a:	mov    rbx,QWORD PTR [rsp+0x48]
   14002124f:	mov    rsi,QWORD PTR [rsp+0x58]
   140021254:	add    rsp,0x30
   140021258:	pop    rdi
   140021259:	ret    
   14002125a:	int3   
   14002125b:	int3   
   14002125c:	rex push rdi
   14002125e:	sub    rsp,0x30
   140021262:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002126b:	mov    QWORD PTR [rsp+0x48],rbx
   140021270:	mov    edi,edx
   140021272:	mov    rbx,rcx
   140021275:	mov    ecx,0x18
   14002127a:	call   0x140026118
   14002127f:	mov    rcx,rax
   140021282:	mov    QWORD PTR [rsp+0x40],rax
   140021287:	xor    eax,eax
   140021289:	test   rcx,rcx
   14002128c:	je     0x140021296
   14002128e:	mov    edx,edi
   140021290:	call   0x1400212a8
   140021295:	nop
   140021296:	mov    QWORD PTR [rbx],rax
   140021299:	mov    rax,rbx
   14002129c:	mov    rbx,QWORD PTR [rsp+0x48]
   1400212a1:	add    rsp,0x30
   1400212a5:	pop    rdi
   1400212a6:	ret    
   1400212a7:	int3   
   1400212a8:	rex push rbx
   1400212aa:	sub    rsp,0x50
   1400212ae:	and    QWORD PTR [rcx],0x0
   1400212b2:	mov    rbx,rcx
   1400212b5:	and    QWORD PTR [rcx+0x8],0x0
   1400212ba:	mov    DWORD PTR [rcx+0x10],edx
   1400212bd:	call   0x140023e64
   1400212c2:	test   al,al
   1400212c4:	je     0x1400212cf
   1400212c6:	mov    rax,rbx
   1400212c9:	add    rsp,0x50
   1400212cd:	pop    rbx
   1400212ce:	ret    
   1400212cf:	lea    rax,[rip+0x2a472]        # 0x14004b748
   1400212d6:	mov    BYTE PTR [rsp+0x28],0x1
   1400212db:	mov    QWORD PTR [rsp+0x30],rax
   1400212e0:	lea    rdx,[rsp+0x38]
   1400212e5:	xor    eax,eax
   1400212e7:	lea    rcx,[rsp+0x20]
   1400212ec:	mov    QWORD PTR [rsp+0x38],rax
   1400212f1:	mov    QWORD PTR [rsp+0x40],rax
   1400212f6:	lea    rax,[rip+0x2cc33]        # 0x14004df30
   1400212fd:	mov    QWORD PTR [rsp+0x20],rax
   140021302:	call   0x140028f04
   140021307:	lea    rax,[rip+0x2a49a]        # 0x14004b7a8
   14002130e:	lea    rdx,[rip+0x4eb3b]        # 0x14006fe50
   140021315:	mov    QWORD PTR [rsp+0x30],rax
   14002131a:	lea    rcx,[rsp+0x30]
   14002131f:	call   0x14002ab88
   140021324:	int3   
   140021325:	int3   
   140021326:	int3   
   140021327:	int3   
   140021328:	mov    QWORD PTR [rsp+0x8],rcx
   14002132d:	push   rdi
   14002132e:	sub    rsp,0x30
   140021332:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002133b:	mov    QWORD PTR [rsp+0x48],rbx
   140021340:	mov    rbx,rdx
   140021343:	mov    rdi,rcx
   140021346:	mov    QWORD PTR [rcx],rdx
   140021349:	mov    rax,QWORD PTR [rdx]
   14002134c:	movsxd r8,DWORD PTR [rax+0x4]
   140021350:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140021355:	test   rcx,rcx
   140021358:	je     0x140021361
   14002135a:	mov    rax,QWORD PTR [rcx]
   14002135d:	call   QWORD PTR [rax+0x8]
   140021360:	nop
   140021361:	mov    rax,QWORD PTR [rbx]
   140021364:	movsxd rcx,DWORD PTR [rax+0x4]
   140021368:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   14002136d:	jne    0x140021383
   14002136f:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   140021374:	test   rcx,rcx
   140021377:	je     0x140021383
   140021379:	cmp    rcx,rbx
   14002137c:	je     0x140021383
   14002137e:	call   0x1400237dc
   140021383:	mov    rax,QWORD PTR [rbx]
   140021386:	movsxd rcx,DWORD PTR [rax+0x4]
   14002138a:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   14002138f:	sete   al
   140021392:	mov    BYTE PTR [rdi+0x8],al
   140021395:	mov    rax,rdi
   140021398:	mov    rbx,QWORD PTR [rsp+0x48]
   14002139d:	add    rsp,0x30
   1400213a1:	pop    rdi
   1400213a2:	ret    
   1400213a3:	int3   
   1400213a4:	sub    rsp,0x38
   1400213a8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400213b1:	lea    rax,[rip+0x2a560]        # 0x14004b918
   1400213b8:	mov    QWORD PTR [rcx],rax
   1400213bb:	call   0x140027b0c
   1400213c0:	nop
   1400213c1:	add    rsp,0x38
   1400213c5:	ret    
   1400213c6:	int3   
   1400213c7:	int3   
   1400213c8:	mov    rax,QWORD PTR [rcx-0x20]
   1400213cc:	mov    r9,rcx
   1400213cf:	movsxd rdx,DWORD PTR [rax+0x4]
   1400213d3:	lea    rax,[rip+0x2cc46]        # 0x14004e020
   1400213da:	mov    QWORD PTR [rdx+rcx*1-0x20],rax
   1400213df:	mov    rax,QWORD PTR [rcx-0x20]
   1400213e3:	movsxd rdx,DWORD PTR [rax+0x4]
   1400213e7:	lea    r8d,[rdx-0x20]
   1400213eb:	mov    DWORD PTR [rdx+rcx*1-0x24],r8d
   1400213f0:	mov    rax,QWORD PTR [rcx-0x10]
   1400213f4:	movsxd rdx,DWORD PTR [rax+0x4]
   1400213f8:	lea    rax,[rip+0x2cc11]        # 0x14004e010
   1400213ff:	mov    QWORD PTR [rdx+rcx*1-0x10],rax
   140021404:	mov    rax,QWORD PTR [rcx-0x10]
   140021408:	movsxd rcx,DWORD PTR [rax+0x4]
   14002140c:	lea    edx,[rcx-0x10]
   14002140f:	mov    DWORD PTR [rcx+r9*1-0x14],edx
   140021414:	mov    rax,QWORD PTR [r9-0x20]
   140021418:	movsxd rcx,DWORD PTR [rax+0x4]
   14002141c:	lea    rax,[rip+0x2cbdd]        # 0x14004e000
   140021423:	mov    QWORD PTR [rcx+r9*1-0x20],rax
   140021428:	mov    rax,QWORD PTR [r9-0x20]
   14002142c:	movsxd rcx,DWORD PTR [rax+0x4]
   140021430:	lea    edx,[rcx-0x18]
   140021433:	mov    DWORD PTR [rcx+r9*1-0x24],edx
   140021438:	ret    
   140021439:	int3   
   14002143a:	int3   
   14002143b:	int3   
   14002143c:	mov    rax,QWORD PTR [rcx-0x18]
   140021440:	movsxd rdx,DWORD PTR [rax+0x4]
   140021444:	lea    rax,[rip+0x2cbb5]        # 0x14004e000
   14002144b:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   140021450:	mov    rax,QWORD PTR [rcx-0x18]
   140021454:	movsxd rdx,DWORD PTR [rax+0x4]
   140021458:	lea    r8d,[rdx-0x18]
   14002145c:	mov    DWORD PTR [rdx+rcx*1-0x1c],r8d
   140021461:	ret    
   140021462:	int3   
   140021463:	int3   
   140021464:	rex push rbx
   140021466:	sub    rsp,0x30
   14002146a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021473:	lea    rax,[rip+0x2cbc6]        # 0x14004e040
   14002147a:	mov    QWORD PTR [rcx],rax
   14002147d:	mov    rbx,QWORD PTR [rcx+0x60]
   140021481:	test   rbx,rbx
   140021484:	je     0x1400214b8
   140021486:	mov    rcx,QWORD PTR [rbx+0x8]
   14002148a:	test   rcx,rcx
   14002148d:	je     0x1400214aa
   14002148f:	mov    rax,QWORD PTR [rcx]
   140021492:	call   QWORD PTR [rax+0x10]
   140021495:	nop
   140021496:	test   rax,rax
   140021499:	je     0x1400214aa
   14002149b:	mov    r8,QWORD PTR [rax]
   14002149e:	mov    edx,0x1
   1400214a3:	mov    rcx,rax
   1400214a6:	call   QWORD PTR [r8]
   1400214a9:	nop
   1400214aa:	mov    edx,0x10
   1400214af:	mov    rcx,rbx
   1400214b2:	call   0x140026804
   1400214b7:	nop
   1400214b8:	add    rsp,0x30
   1400214bc:	pop    rbx
   1400214bd:	ret    
   1400214be:	int3   
   1400214bf:	int3   
   1400214c0:	rex push rbx
   1400214c2:	sub    rsp,0x30
   1400214c6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400214cf:	mov    rbx,rcx
   1400214d2:	lea    rax,[rip+0x2cbe7]        # 0x14004e0c0
   1400214d9:	mov    QWORD PTR [rcx],rax
   1400214dc:	call   0x1400229a8
   1400214e1:	nop
   1400214e2:	lea    rax,[rip+0x2cb57]        # 0x14004e040
   1400214e9:	mov    QWORD PTR [rbx],rax
   1400214ec:	mov    rbx,QWORD PTR [rbx+0x60]
   1400214f0:	test   rbx,rbx
   1400214f3:	je     0x140021527
   1400214f5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400214f9:	test   rcx,rcx
   1400214fc:	je     0x140021519
   1400214fe:	mov    rax,QWORD PTR [rcx]
   140021501:	call   QWORD PTR [rax+0x10]
   140021504:	nop
   140021505:	test   rax,rax
   140021508:	je     0x140021519
   14002150a:	mov    r8,QWORD PTR [rax]
   14002150d:	mov    edx,0x1
   140021512:	mov    rcx,rax
   140021515:	call   QWORD PTR [r8]
   140021518:	nop
   140021519:	mov    edx,0x10
   14002151e:	mov    rcx,rbx
   140021521:	call   0x140026804
   140021526:	nop
   140021527:	add    rsp,0x30
   14002152b:	pop    rbx
   14002152c:	ret    
   14002152d:	int3   
   14002152e:	int3   
   14002152f:	int3   
   140021530:	rex push rbx
   140021532:	sub    rsp,0x20
   140021536:	mov    rax,QWORD PTR [rcx-0x98]
   14002153d:	mov    rbx,rcx
   140021540:	movsxd rdx,DWORD PTR [rax+0x4]
   140021544:	lea    rax,[rip+0x2cbf5]        # 0x14004e140
   14002154b:	mov    QWORD PTR [rdx+rcx*1-0x98],rax
   140021553:	mov    rax,QWORD PTR [rcx-0x98]
   14002155a:	movsxd rdx,DWORD PTR [rax+0x4]
   14002155e:	lea    r8d,[rdx-0x98]
   140021565:	mov    DWORD PTR [rdx+rcx*1-0x9c],r8d
   14002156d:	add    rcx,0xffffffffffffff80
   140021571:	call   0x1400214c0
   140021576:	mov    rax,QWORD PTR [rbx-0x98]
   14002157d:	movsxd rcx,DWORD PTR [rax+0x4]
   140021581:	lea    rax,[rip+0x2ca98]        # 0x14004e020
   140021588:	mov    QWORD PTR [rcx+rbx*1-0x98],rax
   140021590:	mov    rax,QWORD PTR [rbx-0x98]
   140021597:	movsxd rcx,DWORD PTR [rax+0x4]
   14002159b:	lea    edx,[rcx-0x20]
   14002159e:	mov    DWORD PTR [rcx+rbx*1-0x9c],edx
   1400215a5:	mov    rax,QWORD PTR [rbx-0x88]
   1400215ac:	movsxd rcx,DWORD PTR [rax+0x4]
   1400215b0:	lea    rax,[rip+0x2ca59]        # 0x14004e010
   1400215b7:	mov    QWORD PTR [rcx+rbx*1-0x88],rax
   1400215bf:	mov    rax,QWORD PTR [rbx-0x88]
   1400215c6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400215ca:	lea    edx,[rcx-0x10]
   1400215cd:	mov    DWORD PTR [rcx+rbx*1-0x8c],edx
   1400215d4:	mov    rax,QWORD PTR [rbx-0x98]
   1400215db:	movsxd rcx,DWORD PTR [rax+0x4]
   1400215df:	lea    rax,[rip+0x2ca1a]        # 0x14004e000
   1400215e6:	mov    QWORD PTR [rcx+rbx*1-0x98],rax
   1400215ee:	mov    rax,QWORD PTR [rbx-0x98]
   1400215f5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400215f9:	lea    edx,[rcx-0x18]
   1400215fc:	mov    DWORD PTR [rcx+rbx*1-0x9c],edx
   140021603:	add    rsp,0x20
   140021607:	pop    rbx
   140021608:	ret    
   140021609:	int3   
   14002160a:	int3   
   14002160b:	int3   
   14002160c:	rex push rbx
   14002160e:	sub    rsp,0x20
   140021612:	mov    rbx,QWORD PTR [rcx]
   140021615:	test   rbx,rbx
   140021618:	je     0x14002164f
   14002161a:	mov    rcx,QWORD PTR [rbx+0x8]
   14002161e:	test   rcx,rcx
   140021621:	je     0x14002162e
   140021623:	call   QWORD PTR [rip+0x29a0f]        # 0x14004b038
   140021629:	and    QWORD PTR [rbx+0x8],0x0
   14002162e:	mov    rcx,QWORD PTR [rbx]
   140021631:	test   rcx,rcx
   140021634:	je     0x140021642
   140021636:	xor    edx,edx
   140021638:	call   QWORD PTR [rip+0x299da]        # 0x14004b018
   14002163e:	and    QWORD PTR [rbx],0x0
   140021642:	mov    edx,0x18
   140021647:	mov    rcx,rbx
   14002164a:	call   0x140026804
   14002164f:	add    rsp,0x20
   140021653:	pop    rbx
   140021654:	ret    
   140021655:	int3   
   140021656:	int3   
   140021657:	int3   
   140021658:	sub    rsp,0x38
   14002165c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021665:	mov    rdx,QWORD PTR [rcx]
   140021668:	mov    rax,QWORD PTR [rdx]
   14002166b:	movsxd rcx,DWORD PTR [rax+0x4]
   14002166f:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140021674:	test   rcx,rcx
   140021677:	je     0x140021680
   140021679:	mov    rax,QWORD PTR [rcx]
   14002167c:	call   QWORD PTR [rax+0x10]
   14002167f:	nop
   140021680:	add    rsp,0x38
   140021684:	ret    
   140021685:	int3   
   140021686:	int3   
   140021687:	int3   
   140021688:	rex push rbx
   14002168a:	sub    rsp,0x30
   14002168e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021697:	mov    rbx,rcx
   14002169a:	call   0x140027894
   14002169f:	nop
   1400216a0:	test   al,al
   1400216a2:	jne    0x1400216ad
   1400216a4:	mov    rcx,QWORD PTR [rbx]
   1400216a7:	call   0x140022804
   1400216ac:	nop
   1400216ad:	mov    rdx,QWORD PTR [rbx]
   1400216b0:	mov    rax,QWORD PTR [rdx]
   1400216b3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400216b7:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   1400216bc:	test   rcx,rcx
   1400216bf:	je     0x1400216c8
   1400216c1:	mov    rax,QWORD PTR [rcx]
   1400216c4:	call   QWORD PTR [rax+0x10]
   1400216c7:	nop
   1400216c8:	add    rsp,0x30
   1400216cc:	pop    rbx
   1400216cd:	ret    
   1400216ce:	int3   
   1400216cf:	int3   
   1400216d0:	mov    rax,rsp
   1400216d3:	mov    QWORD PTR [rax+0x8],rcx
   1400216d7:	push   rsi
   1400216d8:	push   rdi
   1400216d9:	push   r14
   1400216db:	sub    rsp,0x80
   1400216e2:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   1400216ea:	mov    QWORD PTR [rax+0x10],rbx
   1400216ee:	mov    esi,edx
   1400216f0:	mov    rdi,rcx
   1400216f3:	xor    ebx,ebx
   1400216f5:	mov    DWORD PTR [rsp+0xb0],ebx
   1400216fc:	mov    rdx,rcx
   1400216ff:	lea    rcx,[rax-0x60]
   140021703:	call   0x140021328
   140021708:	nop
   140021709:	cmp    BYTE PTR [rsp+0x40],bl
   14002170d:	je     0x1400217bd
   140021713:	mov    rax,QWORD PTR [rdi]
   140021716:	movsxd rcx,DWORD PTR [rax+0x4]
   14002171a:	add    rcx,rdi
   14002171d:	lea    rdx,[rsp+0x60]
   140021722:	call   0x140005600
   140021727:	nop
   140021728:	mov    rcx,rax
   14002172b:	call   0x140020d4c
   140021730:	mov    r14,rax
   140021733:	mov    rcx,QWORD PTR [rsp+0x68]
   140021738:	test   rcx,rcx
   14002173b:	je     0x140021755
   14002173d:	mov    rdx,QWORD PTR [rcx]
   140021740:	call   QWORD PTR [rdx+0x10]
   140021743:	test   rax,rax
   140021746:	je     0x140021755
   140021748:	mov    r8,QWORD PTR [rax]
   14002174b:	lea    edx,[rbx+0x1]
   14002174e:	mov    rcx,rax
   140021751:	call   QWORD PTR [r8]
   140021754:	nop
   140021755:	mov    rax,QWORD PTR [rdi]
   140021758:	movsxd r9,DWORD PTR [rax+0x4]
   14002175c:	add    r9,rdi
   14002175f:	mov    rax,QWORD PTR [r9+0x48]
   140021763:	mov    BYTE PTR [rsp+0x50],0x0
   140021768:	mov    QWORD PTR [rsp+0x58],rax
   14002176d:	mov    al,BYTE PTR [r9+0x58]
   140021771:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140021776:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14002177c:	mov    r10,QWORD PTR [r14]
   14002177f:	mov    DWORD PTR [rsp+0x28],esi
   140021783:	mov    BYTE PTR [rsp+0x20],al
   140021787:	lea    r8,[rsp+0x50]
   14002178c:	lea    rdx,[rsp+0x70]
   140021791:	mov    rcx,r14
   140021794:	call   QWORD PTR [r10+0x48]
   140021798:	mov    ecx,0x4
   14002179d:	cmp    BYTE PTR [rsp+0x70],0x0
   1400217a2:	cmovne ebx,ecx
   1400217a5:	mov    DWORD PTR [rsp+0xb0],ebx
   1400217ac:	jmp    0x1400217c2
   1400217ae:	mov    rdi,QWORD PTR [rsp+0xa0]
   1400217b6:	mov    ebx,DWORD PTR [rsp+0xb0]
   1400217bd:	mov    ecx,0x4
   1400217c2:	mov    rax,QWORD PTR [rdi]
   1400217c5:	movsxd r9,DWORD PTR [rax+0x4]
   1400217c9:	add    r9,rdi
   1400217cc:	test   ebx,ebx
   1400217ce:	je     0x1400217ee
   1400217d0:	mov    edx,DWORD PTR [r9+0x10]
   1400217d4:	or     edx,ebx
   1400217d6:	mov    eax,edx
   1400217d8:	or     eax,ecx
   1400217da:	cmp    QWORD PTR [r9+0x48],0x0
   1400217df:	cmove  edx,eax
   1400217e2:	xor    r8d,r8d
   1400217e5:	mov    rcx,r9
   1400217e8:	call   0x1400054f8
   1400217ed:	nop
   1400217ee:	call   0x140027894
   1400217f3:	test   al,al
   1400217f5:	jne    0x140021802
   1400217f7:	mov    rcx,QWORD PTR [rsp+0x38]
   1400217fc:	call   0x140022804
   140021801:	nop
   140021802:	mov    rdx,QWORD PTR [rsp+0x38]
   140021807:	mov    rax,QWORD PTR [rdx]
   14002180a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002180e:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140021813:	test   rcx,rcx
   140021816:	je     0x14002181f
   140021818:	mov    rax,QWORD PTR [rcx]
   14002181b:	call   QWORD PTR [rax+0x10]
   14002181e:	nop
   14002181f:	mov    rax,rdi
   140021822:	mov    rbx,QWORD PTR [rsp+0xa8]
   14002182a:	add    rsp,0x80
   140021831:	pop    r14
   140021833:	pop    rdi
   140021834:	pop    rsi
   140021835:	ret    
   140021836:	int3   
   140021837:	int3   
   140021838:	sub    rsp,0x38
   14002183c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021845:	lea    r9,[rcx+0x20]
   140021849:	mov    rax,QWORD PTR [r9-0x20]
   14002184d:	movsxd rcx,DWORD PTR [rax+0x4]
   140021851:	lea    rax,[rip+0x2c7c8]        # 0x14004e020
   140021858:	mov    QWORD PTR [rcx+r9*1-0x20],rax
   14002185d:	mov    rax,QWORD PTR [r9-0x20]
   140021861:	movsxd rcx,DWORD PTR [rax+0x4]
   140021865:	lea    edx,[rcx-0x20]
   140021868:	mov    DWORD PTR [rcx+r9*1-0x24],edx
   14002186d:	mov    rax,QWORD PTR [r9-0x10]
   140021871:	movsxd rcx,DWORD PTR [rax+0x4]
   140021875:	lea    rax,[rip+0x2c794]        # 0x14004e010
   14002187c:	mov    QWORD PTR [rcx+r9*1-0x10],rax
   140021881:	mov    rax,QWORD PTR [r9-0x10]
   140021885:	movsxd rcx,DWORD PTR [rax+0x4]
   140021889:	lea    edx,[rcx-0x10]
   14002188c:	mov    DWORD PTR [rcx+r9*1-0x14],edx
   140021891:	mov    rax,QWORD PTR [r9-0x20]
   140021895:	movsxd rdx,DWORD PTR [rax+0x4]
   140021899:	lea    rax,[rip+0x2c760]        # 0x14004e000
   1400218a0:	mov    QWORD PTR [rdx+r9*1-0x20],rax
   1400218a5:	mov    rax,QWORD PTR [r9-0x20]
   1400218a9:	movsxd rdx,DWORD PTR [rax+0x4]
   1400218ad:	lea    r8d,[rdx-0x18]
   1400218b1:	mov    DWORD PTR [rdx+r9*1-0x24],r8d
   1400218b6:	lea    rax,[rip+0x2a05b]        # 0x14004b918
   1400218bd:	mov    QWORD PTR [r9],rax
   1400218c0:	mov    rcx,r9
   1400218c3:	call   0x140027b0c
   1400218c8:	nop
   1400218c9:	add    rsp,0x38
   1400218cd:	ret    
   1400218ce:	int3   
   1400218cf:	int3   
   1400218d0:	rex push rbx
   1400218d2:	sub    rsp,0x30
   1400218d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400218df:	lea    rbx,[rcx+0x98]
   1400218e6:	mov    rcx,rbx
   1400218e9:	call   0x140021530
   1400218ee:	nop
   1400218ef:	lea    rax,[rip+0x2a022]        # 0x14004b918
   1400218f6:	mov    QWORD PTR [rbx],rax
   1400218f9:	mov    rcx,rbx
   1400218fc:	call   0x140027b0c
   140021901:	nop
   140021902:	add    rsp,0x30
   140021906:	pop    rbx
   140021907:	ret    
   140021908:	movsxd rax,DWORD PTR [rcx-0x4]
   14002190c:	sub    rcx,rax
   14002190f:	jmp    0x140021984
   140021914:	movsxd rax,DWORD PTR [rcx-0x4]
   140021918:	sub    rcx,rax
   14002191b:	jmp    0x1400219bc
   140021920:	movsxd rax,DWORD PTR [rcx-0x4]
   140021924:	sub    rcx,rax
   140021927:	jmp    0x140021a2c
   14002192c:	movsxd rax,DWORD PTR [rcx-0x4]
   140021930:	sub    rcx,rax
   140021933:	jmp    0x140021b5c
   140021938:	rex push rdi
   14002193a:	sub    rsp,0x30
   14002193e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021947:	mov    QWORD PTR [rsp+0x40],rbx
   14002194c:	mov    ebx,edx
   14002194e:	mov    rdi,rcx
   140021951:	lea    rax,[rip+0x29fc0]        # 0x14004b918
   140021958:	mov    QWORD PTR [rcx],rax
   14002195b:	call   0x140027b0c
   140021960:	nop
   140021961:	test   bl,0x1
   140021964:	je     0x140021974
   140021966:	mov    edx,0x60
   14002196b:	mov    rcx,rdi
   14002196e:	call   0x140026804
   140021973:	nop
   140021974:	mov    rax,rdi
   140021977:	mov    rbx,QWORD PTR [rsp+0x40]
   14002197c:	add    rsp,0x30
   140021980:	pop    rdi
   140021981:	ret    
   140021982:	int3   
   140021983:	int3   
   140021984:	mov    QWORD PTR [rsp+0x8],rbx
   140021989:	push   rdi
   14002198a:	sub    rsp,0x20
   14002198e:	lea    rdi,[rcx-0x20]
   140021992:	mov    ebx,edx
   140021994:	mov    rcx,rdi
   140021997:	call   0x140021838
   14002199c:	test   bl,0x1
   14002199f:	je     0x1400219ae
   1400219a1:	mov    edx,0x80
   1400219a6:	mov    rcx,rdi
   1400219a9:	call   0x140026804
   1400219ae:	mov    rax,rdi
   1400219b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400219b6:	add    rsp,0x20
   1400219ba:	pop    rdi
   1400219bb:	ret    
   1400219bc:	rex push rdi
   1400219be:	sub    rsp,0x30
   1400219c2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400219cb:	mov    QWORD PTR [rsp+0x40],rbx
   1400219d0:	mov    ebx,edx
   1400219d2:	lea    rdi,[rcx-0x18]
   1400219d6:	mov    rax,QWORD PTR [rdi]
   1400219d9:	movsxd r8,DWORD PTR [rax+0x4]
   1400219dd:	lea    rax,[rip+0x2c61c]        # 0x14004e000
   1400219e4:	mov    QWORD PTR [r8+rcx*1-0x18],rax
   1400219e9:	mov    rax,QWORD PTR [rdi]
   1400219ec:	movsxd r8,DWORD PTR [rax+0x4]
   1400219f0:	lea    r9d,[r8-0x18]
   1400219f4:	mov    DWORD PTR [r8+rcx*1-0x1c],r9d
   1400219f9:	lea    rax,[rip+0x29f18]        # 0x14004b918
   140021a00:	mov    QWORD PTR [rcx],rax
   140021a03:	call   0x140027b0c
   140021a08:	nop
   140021a09:	test   bl,0x1
   140021a0c:	je     0x140021a1c
   140021a0e:	mov    edx,0x78
   140021a13:	mov    rcx,rdi
   140021a16:	call   0x140026804
   140021a1b:	nop
   140021a1c:	mov    rax,rdi
   140021a1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140021a24:	add    rsp,0x30
   140021a28:	pop    rdi
   140021a29:	ret    
   140021a2a:	int3   
   140021a2b:	int3   
   140021a2c:	rex push rdi
   140021a2e:	sub    rsp,0x30
   140021a32:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021a3b:	mov    QWORD PTR [rsp+0x40],rbx
   140021a40:	mov    ebx,edx
   140021a42:	lea    rdi,[rcx-0x10]
   140021a46:	mov    rax,QWORD PTR [rdi]
   140021a49:	movsxd r8,DWORD PTR [rax+0x4]
   140021a4d:	lea    rax,[rip+0x2c5bc]        # 0x14004e010
   140021a54:	mov    QWORD PTR [r8+rcx*1-0x10],rax
   140021a59:	mov    rax,QWORD PTR [rdi]
   140021a5c:	movsxd r8,DWORD PTR [rax+0x4]
   140021a60:	lea    r9d,[r8-0x10]
   140021a64:	mov    DWORD PTR [r8+rcx*1-0x14],r9d
   140021a69:	lea    rax,[rip+0x29ea8]        # 0x14004b918
   140021a70:	mov    QWORD PTR [rcx],rax
   140021a73:	call   0x140027b0c
   140021a78:	nop
   140021a79:	test   bl,0x1
   140021a7c:	je     0x140021a8c
   140021a7e:	mov    edx,0x70
   140021a83:	mov    rcx,rdi
   140021a86:	call   0x140026804
   140021a8b:	nop
   140021a8c:	mov    rax,rdi
   140021a8f:	mov    rbx,QWORD PTR [rsp+0x40]
   140021a94:	add    rsp,0x30
   140021a98:	pop    rdi
   140021a99:	ret    
   140021a9a:	int3   
   140021a9b:	int3   
   140021a9c:	rex push rdi
   140021a9e:	sub    rsp,0x30
   140021aa2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021aab:	mov    QWORD PTR [rsp+0x40],rbx
   140021ab0:	mov    QWORD PTR [rsp+0x48],rsi
   140021ab5:	mov    esi,edx
   140021ab7:	mov    rbx,rcx
   140021aba:	lea    rax,[rip+0x2c57f]        # 0x14004e040
   140021ac1:	mov    QWORD PTR [rcx],rax
   140021ac4:	mov    rdi,QWORD PTR [rcx+0x60]
   140021ac8:	test   rdi,rdi
   140021acb:	je     0x140021aff
   140021acd:	mov    rcx,QWORD PTR [rdi+0x8]
   140021ad1:	test   rcx,rcx
   140021ad4:	je     0x140021af1
   140021ad6:	mov    rax,QWORD PTR [rcx]
   140021ad9:	call   QWORD PTR [rax+0x10]
   140021adc:	nop
   140021add:	test   rax,rax
   140021ae0:	je     0x140021af1
   140021ae2:	mov    r8,QWORD PTR [rax]
   140021ae5:	mov    edx,0x1
   140021aea:	mov    rcx,rax
   140021aed:	call   QWORD PTR [r8]
   140021af0:	nop
   140021af1:	mov    edx,0x10
   140021af6:	mov    rcx,rdi
   140021af9:	call   0x140026804
   140021afe:	nop
   140021aff:	test   sil,0x1
   140021b03:	je     0x140021b13
   140021b05:	mov    edx,0x68
   140021b0a:	mov    rcx,rbx
   140021b0d:	call   0x140026804
   140021b12:	nop
   140021b13:	mov    rax,rbx
   140021b16:	mov    rbx,QWORD PTR [rsp+0x40]
   140021b1b:	mov    rsi,QWORD PTR [rsp+0x48]
   140021b20:	add    rsp,0x30
   140021b24:	pop    rdi
   140021b25:	ret    
   140021b26:	int3   
   140021b27:	int3   
   140021b28:	mov    QWORD PTR [rsp+0x8],rbx
   140021b2d:	push   rdi
   140021b2e:	sub    rsp,0x20
   140021b32:	mov    ebx,edx
   140021b34:	mov    rdi,rcx
   140021b37:	call   0x1400214c0
   140021b3c:	test   bl,0x1
   140021b3f:	je     0x140021b4e
   140021b41:	mov    edx,0x78
   140021b46:	mov    rcx,rdi
   140021b49:	call   0x140026804
   140021b4e:	mov    rax,rdi
   140021b51:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b56:	add    rsp,0x20
   140021b5a:	pop    rdi
   140021b5b:	ret    
   140021b5c:	rex push rdi
   140021b5e:	sub    rsp,0x30
   140021b62:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140021b6b:	mov    QWORD PTR [rsp+0x40],rbx
   140021b70:	mov    ebx,edx
   140021b72:	lea    rdi,[rcx-0x98]
   140021b79:	call   0x140021530
   140021b7e:	nop
   140021b7f:	lea    rcx,[rdi+0x98]
   140021b86:	lea    rax,[rip+0x29d8b]        # 0x14004b918
   140021b8d:	mov    QWORD PTR [rcx],rax
   140021b90:	call   0x140027b0c
   140021b95:	nop
   140021b96:	test   bl,0x1
   140021b99:	je     0x140021ba9
   140021b9b:	mov    edx,0xf8
   140021ba0:	mov    rcx,rdi
   140021ba3:	call   0x140026804
   140021ba8:	nop
   140021ba9:	mov    rax,rdi
   140021bac:	mov    rbx,QWORD PTR [rsp+0x40]
   140021bb1:	add    rsp,0x30
   140021bb5:	pop    rdi
   140021bb6:	ret    
   140021bb7:	int3   
   140021bb8:	mov    QWORD PTR [rsp+0x8],rbx
   140021bbd:	push   rdi
   140021bbe:	sub    rsp,0x20
   140021bc2:	lea    rax,[rip+0x2c30f]        # 0x14004ded8
   140021bc9:	mov    edi,edx
   140021bcb:	mov    QWORD PTR [rcx],rax
   140021bce:	mov    rbx,rcx
   140021bd1:	mov    eax,DWORD PTR [rcx+0x20]
   140021bd4:	test   eax,eax
   140021bd6:	jle    0x140021be3
   140021bd8:	mov    rcx,QWORD PTR [rcx+0x18]
   140021bdc:	call   0x1400304c4
   140021be1:	jmp    0x140021bee
   140021be3:	jns    0x140021bee
   140021be5:	mov    rcx,QWORD PTR [rcx+0x18]
   140021be9:	call   0x140026804
   140021bee:	mov    rcx,QWORD PTR [rbx+0x28]
   140021bf2:	call   0x1400304c4
   140021bf7:	lea    rax,[rip+0x29bc2]        # 0x14004b7c0
   140021bfe:	mov    QWORD PTR [rbx],rax
   140021c01:	test   dil,0x1
   140021c05:	je     0x140021c14
   140021c07:	mov    edx,0x30
   140021c0c:	mov    rcx,rbx
   140021c0f:	call   0x140026804
   140021c14:	mov    rax,rbx
   140021c17:	mov    rbx,QWORD PTR [rsp+0x30]
   140021c1c:	add    rsp,0x20
   140021c20:	pop    rdi
   140021c21:	ret    
   140021c22:	int3   
   140021c23:	int3   
   140021c24:	mov    QWORD PTR [rsp+0x8],rbx
   140021c29:	push   rdi
   140021c2a:	sub    rsp,0x20
   140021c2e:	lea    rax,[rip+0x2c58b]        # 0x14004e1c0
   140021c35:	mov    rdi,rcx
   140021c38:	mov    QWORD PTR [rcx],rax
   140021c3b:	mov    ebx,edx
   140021c3d:	mov    rcx,QWORD PTR [rcx+0x10]
   140021c41:	call   0x1400304c4
   140021c46:	mov    rcx,QWORD PTR [rdi+0x20]
   140021c4a:	call   0x1400304c4
   140021c4f:	mov    rcx,QWORD PTR [rdi+0x28]
   140021c53:	call   0x1400304c4
   140021c58:	lea    rax,[rip+0x29b61]        # 0x14004b7c0
   140021c5f:	mov    QWORD PTR [rdi],rax
   140021c62:	test   bl,0x1
   140021c65:	je     0x140021c74
   140021c67:	mov    edx,0x30
   140021c6c:	mov    rcx,rdi
   140021c6f:	call   0x140026804
   140021c74:	mov    rax,rdi
   140021c77:	mov    rbx,QWORD PTR [rsp+0x30]
   140021c7c:	add    rsp,0x20
   140021c80:	pop    rdi
   140021c81:	ret    
   140021c82:	int3   
   140021c83:	int3   
   140021c84:	mov    rax,rsp
   140021c87:	push   rbp
   140021c88:	push   rsi
   140021c89:	push   rdi
   140021c8a:	push   r12
   140021c8c:	push   r13
   140021c8e:	push   r14
   140021c90:	push   r15
   140021c92:	lea    rbp,[rax-0x47]
   140021c96:	sub    rsp,0xd0
   140021c9d:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   140021ca5:	mov    QWORD PTR [rax+0x8],rbx
   140021ca9:	mov    rax,QWORD PTR [rip+0x4f3a0]        # 0x140071050
   140021cb0:	xor    rax,rsp
   140021cb3:	mov    QWORD PTR [rbp-0x1],rax
   140021cb7:	mov    r13,r9
   140021cba:	mov    r15,r8
   140021cbd:	mov    QWORD PTR [rbp-0x51],rdx
   140021cc1:	mov    r12,rcx
   140021cc4:	mov    QWORD PTR [rbp-0x71],rcx
   140021cc8:	mov    al,BYTE PTR [rbp+0x6f]
   140021ccb:	mov    BYTE PTR [rsp+0x30],al
   140021ccf:	mov    rdi,QWORD PTR [rbp+0x77]
   140021cd3:	mov    r14,QWORD PTR [rbp+0x7f]
   140021cd7:	test   r14,r14
   140021cda:	je     0x140021ceb
   140021cdc:	mov    al,BYTE PTR [rdi]
   140021cde:	sub    al,0x2b
   140021ce0:	test   al,0xfd
   140021ce2:	jne    0x140021ceb
   140021ce4:	mov    ebx,0x1
   140021ce9:	jmp    0x140021ced
   140021ceb:	xor    ebx,ebx
   140021ced:	mov    eax,DWORD PTR [r9+0x18]
   140021cf1:	mov    ecx,0x3000
   140021cf6:	and    eax,ecx
   140021cf8:	cmp    eax,ecx
   140021cfa:	je     0x140021d05
   140021cfc:	lea    rdx,[rip+0x41179]        # 0x140062e7c
   140021d03:	jmp    0x140021d27
   140021d05:	lea    rdx,[rip+0x41174]        # 0x140062e80
   140021d0c:	lea    rcx,[rbx+0x2]
   140021d10:	cmp    rcx,r14
   140021d13:	ja     0x140021d27
   140021d15:	cmp    BYTE PTR [rdi+rbx*1],0x30
   140021d19:	jne    0x140021d27
   140021d1b:	mov    al,BYTE PTR [rdi+rbx*1+0x1]
   140021d1f:	sub    al,0x58
   140021d21:	test   al,0xdf
   140021d23:	cmove  rbx,rcx
   140021d27:	mov    rcx,rdi
   140021d2a:	call   0x14002c76c
   140021d2f:	mov    QWORD PTR [rbp-0x59],rax
   140021d33:	mov    eax,0x2e
   140021d38:	mov    WORD PTR [rsp+0x34],ax
   140021d3d:	call   0x140030490
   140021d42:	mov    rcx,QWORD PTR [rax]
   140021d45:	mov    al,BYTE PTR [rcx]
   140021d47:	mov    BYTE PTR [rsp+0x34],al
   140021d4b:	lea    rdx,[rsp+0x34]
   140021d50:	mov    rcx,rdi
   140021d53:	call   0x14002c76c
   140021d58:	mov    rsi,rax
   140021d5b:	lea    rdx,[rsp+0x40]
   140021d60:	mov    rcx,r13
   140021d63:	call   0x140005600
   140021d68:	nop
   140021d69:	mov    rcx,rax
   140021d6c:	call   0x140020c18
   140021d71:	mov    QWORD PTR [rbp-0x61],rax
   140021d75:	mov    rcx,QWORD PTR [rbp-0x79]
   140021d79:	test   rcx,rcx
   140021d7c:	je     0x140021d97
   140021d7e:	mov    rax,QWORD PTR [rcx]
   140021d81:	call   QWORD PTR [rax+0x10]
   140021d84:	mov    rcx,rax
   140021d87:	test   rax,rax
   140021d8a:	je     0x140021d97
   140021d8c:	mov    rax,QWORD PTR [rax]
   140021d8f:	mov    edx,0x1
   140021d94:	call   QWORD PTR [rax]
   140021d96:	nop
   140021d97:	mov    QWORD PTR [rbp-0x29],0xf
   140021d9f:	and    QWORD PTR [rbp-0x31],0x0
   140021da4:	mov    BYTE PTR [rbp-0x41],0x0
   140021da8:	xor    r8d,r8d
   140021dab:	mov    rdx,r14
   140021dae:	lea    rcx,[rbp-0x41]
   140021db2:	call   0x140022c38
   140021db7:	nop
   140021db8:	lea    r9,[rbp-0x41]
   140021dbc:	cmp    QWORD PTR [rbp-0x29],0x10
   140021dc1:	cmovae r9,QWORD PTR [rbp-0x41]
   140021dc6:	mov    rcx,QWORD PTR [rbp-0x61]
   140021dca:	mov    rax,QWORD PTR [rcx]
   140021dcd:	lea    r8,[r14+rdi*1]
   140021dd1:	mov    rdx,rdi
   140021dd4:	call   QWORD PTR [rax+0x38]
   140021dd7:	lea    rdx,[rsp+0x40]
   140021ddc:	mov    rcx,r13
   140021ddf:	call   0x140005600
   140021de4:	nop
   140021de5:	mov    rcx,rax
   140021de8:	call   0x140020e80
   140021ded:	mov    rdi,rax
   140021df0:	mov    rcx,QWORD PTR [rbp-0x79]
   140021df4:	test   rcx,rcx
   140021df7:	je     0x140021e12
   140021df9:	mov    rax,QWORD PTR [rcx]
   140021dfc:	call   QWORD PTR [rax+0x10]
   140021dff:	mov    rcx,rax
   140021e02:	test   rax,rax
   140021e05:	je     0x140021e12
   140021e07:	mov    rax,QWORD PTR [rax]
   140021e0a:	mov    edx,0x1
   140021e0f:	call   QWORD PTR [rax]
   140021e11:	nop
   140021e12:	lea    rdx,[rbp-0x21]
   140021e16:	mov    rcx,rdi
   140021e19:	call   0x14001012c
   140021e1e:	nop
   140021e1f:	mov    rax,QWORD PTR [rdi]
   140021e22:	mov    rcx,rdi
   140021e25:	call   QWORD PTR [rax+0x20]
   140021e28:	mov    BYTE PTR [rsp+0x31],al
   140021e2c:	cmp    rsi,r14
   140021e2f:	je     0x140021e50
   140021e31:	mov    rax,QWORD PTR [rdi]
   140021e34:	mov    rcx,rdi
   140021e37:	call   QWORD PTR [rax+0x18]
   140021e3a:	mov    cl,al
   140021e3c:	lea    rax,[rbp-0x41]
   140021e40:	cmp    QWORD PTR [rbp-0x29],0x10
   140021e45:	cmovae rax,QWORD PTR [rbp-0x41]
   140021e4a:	mov    BYTE PTR [rax+rsi*1],cl
   140021e4d:	cmp    rsi,r14
   140021e50:	cmove  rsi,QWORD PTR [rbp-0x59]
   140021e55:	lea    rdi,[rbp-0x21]
   140021e59:	cmp    QWORD PTR [rbp-0x9],0x10
   140021e5e:	cmovae rdi,QWORD PTR [rbp-0x21]
   140021e63:	cmp    BYTE PTR [rdi],0x7f
   140021e66:	je     0x140021eb0
   140021e68:	mov    r12b,BYTE PTR [rsp+0x31]
   140021e6d:	cmp    BYTE PTR [rdi],0x0
   140021e70:	jle    0x140021eac
   140021e72:	movsx  rcx,BYTE PTR [rdi]
   140021e76:	mov    rax,rsi
   140021e79:	sub    rax,rbx
   140021e7c:	cmp    rcx,rax
   140021e7f:	jae    0x140021eac
   140021e81:	sub    rsi,rcx
   140021e84:	mov    r9b,r12b
   140021e87:	mov    r8d,0x1
   140021e8d:	mov    rdx,rsi
   140021e90:	lea    rcx,[rbp-0x41]
   140021e94:	call   0x140023940
   140021e99:	lea    rax,[rdi+0x1]
   140021e9d:	cmp    BYTE PTR [rax],0x0
   140021ea0:	cmovle rax,rdi
   140021ea4:	mov    rdi,rax
   140021ea7:	cmp    BYTE PTR [rax],0x7f
   140021eaa:	jne    0x140021e6d
   140021eac:	mov    r12,QWORD PTR [rbp-0x71]
   140021eb0:	mov    rsi,QWORD PTR [rbp-0x31]
   140021eb4:	mov    rdi,QWORD PTR [r13+0x28]
   140021eb8:	test   rdi,rdi
   140021ebb:	jle    0x140021ec7
   140021ebd:	cmp    rdi,rsi
   140021ec0:	jbe    0x140021ec7
   140021ec2:	sub    rdi,rsi
   140021ec5:	jmp    0x140021ec9
   140021ec7:	xor    edi,edi
   140021ec9:	mov    eax,DWORD PTR [r13+0x18]
   140021ecd:	and    eax,0x1c0
   140021ed2:	movups xmm0,XMMWORD PTR [r15]
   140021ed6:	lea    r8,[rsp+0x40]
   140021edb:	lea    rdx,[rbp-0x71]
   140021edf:	mov    rcx,r12
   140021ee2:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140021ee8:	cmp    eax,0x40
   140021eeb:	je     0x140021f8e
   140021ef1:	cmp    eax,0x100
   140021ef6:	je     0x140021f43
   140021ef8:	mov    QWORD PTR [rsp+0x20],rdi
   140021efd:	mov    r14b,BYTE PTR [rsp+0x30]
   140021f02:	mov    r9b,r14b
   140021f05:	call   0x14002290c
   140021f0a:	movups xmm0,XMMWORD PTR [rax]
   140021f0d:	movdqu XMMWORD PTR [r15],xmm0
   140021f12:	xor    edi,edi
   140021f14:	movups xmm1,XMMWORD PTR [rax]
   140021f17:	movdqu XMMWORD PTR [rsp+0x40],xmm1
   140021f1d:	lea    r9,[rbp-0x41]
   140021f21:	cmp    QWORD PTR [rbp-0x29],0x10
   140021f26:	cmovae r9,QWORD PTR [rbp-0x41]
   140021f2b:	mov    QWORD PTR [rsp+0x20],rbx
   140021f30:	lea    r8,[rsp+0x40]
   140021f35:	lea    rdx,[rbp-0x71]
   140021f39:	mov    rcx,r12
   140021f3c:	call   0x140022868
   140021f41:	jmp    0x140021fab
   140021f43:	lea    r9,[rbp-0x41]
   140021f47:	cmp    QWORD PTR [rbp-0x29],0x10
   140021f4c:	cmovae r9,QWORD PTR [rbp-0x41]
   140021f51:	mov    QWORD PTR [rsp+0x20],rbx
   140021f56:	call   0x140022868
   140021f5b:	movups xmm0,XMMWORD PTR [rax]
   140021f5e:	movdqu XMMWORD PTR [r15],xmm0
   140021f63:	movups xmm1,XMMWORD PTR [rax]
   140021f66:	movdqu XMMWORD PTR [rsp+0x40],xmm1
   140021f6c:	mov    QWORD PTR [rsp+0x20],rdi
   140021f71:	mov    r14b,BYTE PTR [rsp+0x30]
   140021f76:	mov    r9b,r14b
   140021f79:	lea    r8,[rsp+0x40]
   140021f7e:	lea    rdx,[rbp-0x71]
   140021f82:	mov    rcx,r12
   140021f85:	call   0x14002290c
   140021f8a:	xor    edi,edi
   140021f8c:	jmp    0x140021fab
   140021f8e:	lea    r9,[rbp-0x41]
   140021f92:	cmp    QWORD PTR [rbp-0x29],0x10
   140021f97:	cmovae r9,QWORD PTR [rbp-0x41]
   140021f9c:	mov    QWORD PTR [rsp+0x20],rbx
   140021fa1:	call   0x140022868
   140021fa6:	mov    r14b,BYTE PTR [rsp+0x30]
   140021fab:	movups xmm0,XMMWORD PTR [rax]
   140021fae:	movdqu XMMWORD PTR [r15],xmm0
   140021fb3:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140021fb9:	lea    r9,[rbp-0x41]
   140021fbd:	cmp    QWORD PTR [rbp-0x29],0x10
   140021fc2:	cmovae r9,QWORD PTR [rbp-0x41]
   140021fc7:	sub    rsi,rbx
   140021fca:	add    r9,rbx
   140021fcd:	mov    QWORD PTR [rsp+0x20],rsi
   140021fd2:	lea    r8,[rsp+0x40]
   140021fd7:	lea    rdx,[rbp-0x71]
   140021fdb:	mov    rcx,r12
   140021fde:	call   0x140022868
   140021fe3:	movups xmm0,XMMWORD PTR [rax]
   140021fe6:	movdqu XMMWORD PTR [r15],xmm0
   140021feb:	xor    esi,esi
   140021fed:	mov    QWORD PTR [r13+0x28],rsi
   140021ff1:	movups xmm1,XMMWORD PTR [r15]
   140021ff5:	movdqu XMMWORD PTR [rsp+0x40],xmm1
   140021ffb:	mov    QWORD PTR [rsp+0x20],rdi
   140022000:	mov    r9b,r14b
   140022003:	lea    r8,[rsp+0x40]
   140022008:	mov    rbx,QWORD PTR [rbp-0x51]
   14002200c:	mov    rdx,rbx
   14002200f:	mov    rcx,r12
   140022012:	call   0x14002290c
   140022017:	nop
   140022018:	mov    rdx,QWORD PTR [rbp-0x9]
   14002201c:	cmp    rdx,0x10
   140022020:	jb     0x140022032
   140022022:	inc    rdx
   140022025:	lea    r8d,[rsi+0x1]
   140022029:	mov    rcx,QWORD PTR [rbp-0x21]
   14002202d:	call   0x140004804
   140022032:	mov    QWORD PTR [rbp-0x9],0xf
   14002203a:	mov    QWORD PTR [rbp-0x11],rsi
   14002203e:	mov    BYTE PTR [rbp-0x21],sil
   140022042:	mov    rdx,QWORD PTR [rbp-0x29]
   140022046:	cmp    rdx,0x10
   14002204a:	jb     0x14002205e
   14002204c:	inc    rdx
   14002204f:	mov    r8d,0x1
   140022055:	mov    rcx,QWORD PTR [rbp-0x41]
   140022059:	call   0x140004804
   14002205e:	mov    rax,rbx
   140022061:	mov    rcx,QWORD PTR [rbp-0x1]
   140022065:	xor    rcx,rsp
   140022068:	call   0x140025df0
   14002206d:	mov    rbx,QWORD PTR [rsp+0x110]
   140022075:	add    rsp,0xd0
   14002207c:	pop    r15
   14002207e:	pop    r14
   140022080:	pop    r13
   140022082:	pop    r12
   140022084:	pop    rdi
   140022085:	pop    rsi
   140022086:	pop    rbp
   140022087:	ret    
   140022088:	mov    rax,rsp
   14002208b:	push   rdi
   14002208c:	sub    rsp,0xb0
   140022093:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002209c:	mov    QWORD PTR [rax+0x10],rbx
   1400220a0:	mov    QWORD PTR [rax+0x18],rbp
   1400220a4:	mov    QWORD PTR [rax+0x20],rsi
   1400220a8:	mov    rbp,rdx
   1400220ab:	mov    rdi,rcx
   1400220ae:	xor    esi,esi
   1400220b0:	mov    DWORD PTR [rsp+0xc0],esi
   1400220b7:	test   rcx,rcx
   1400220ba:	je     0x14002214d
   1400220c0:	cmp    QWORD PTR [rcx],rsi
   1400220c3:	jne    0x14002214d
   1400220c9:	lea    ecx,[rsi+0x30]
   1400220cc:	call   0x140026118
   1400220d1:	mov    rbx,rax
   1400220d4:	mov    QWORD PTR [rsp+0xc0],rax
   1400220dc:	test   rax,rax
   1400220df:	je     0x140022138
   1400220e1:	mov    rax,QWORD PTR [rbp+0x8]
   1400220e5:	test   rax,rax
   1400220e8:	jne    0x1400220f3
   1400220ea:	lea    rdx,[rip+0x3fbc4]        # 0x140061cb5
   1400220f1:	jmp    0x140022100
   1400220f3:	mov    rdx,QWORD PTR [rax+0x28]
   1400220f7:	test   rdx,rdx
   1400220fa:	jne    0x140022100
   1400220fc:	lea    rdx,[rax+0x30]
   140022100:	lea    rcx,[rsp+0x48]
   140022105:	call   0x140004870
   14002210a:	mov    esi,0x1
   14002210f:	and    DWORD PTR [rbx+0x8],0x0
   140022113:	lea    rax,[rip+0x2bdbe]        # 0x14004ded8
   14002211a:	mov    QWORD PTR [rbx],rax
   14002211d:	lea    rcx,[rsp+0x28]
   140022122:	call   0x140027ce0
   140022127:	movups xmm0,XMMWORD PTR [rax]
   14002212a:	movups XMMWORD PTR [rbx+0x10],xmm0
   14002212e:	movups xmm1,XMMWORD PTR [rax+0x10]
   140022132:	movups XMMWORD PTR [rbx+0x20],xmm1
   140022136:	jmp    0x14002213a
   140022138:	xor    ebx,ebx
   14002213a:	mov    QWORD PTR [rdi],rbx
   14002213d:	test   sil,0x1
   140022141:	je     0x14002214d
   140022143:	lea    rcx,[rsp+0x48]
   140022148:	call   0x14000493c
   14002214d:	mov    eax,0x2
   140022152:	lea    r11,[rsp+0xb0]
   14002215a:	mov    rbx,QWORD PTR [r11+0x18]
   14002215e:	mov    rbp,QWORD PTR [r11+0x20]
   140022162:	mov    rsi,QWORD PTR [r11+0x28]
   140022166:	mov    rsp,r11
   140022169:	pop    rdi
   14002216a:	ret    
   14002216b:	int3   
   14002216c:	mov    rax,rsp
   14002216f:	push   rdi
   140022170:	sub    rsp,0x90
   140022177:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   14002217f:	mov    QWORD PTR [rax+0x10],rbx
   140022183:	mov    QWORD PTR [rax+0x18],rbp
   140022187:	mov    QWORD PTR [rax+0x20],rsi
   14002218b:	mov    rbp,rdx
   14002218e:	mov    rdi,rcx
   140022191:	xor    esi,esi
   140022193:	mov    DWORD PTR [rsp+0xa0],esi
   14002219a:	test   rcx,rcx
   14002219d:	je     0x14002220f
   14002219f:	cmp    QWORD PTR [rcx],rsi
   1400221a2:	jne    0x14002220f
   1400221a4:	lea    ecx,[rsi+0x10]
   1400221a7:	call   0x140026118
   1400221ac:	mov    rbx,rax
   1400221af:	mov    QWORD PTR [rsp+0xa0],rax
   1400221b7:	test   rax,rax
   1400221ba:	je     0x1400221fa
   1400221bc:	mov    rax,QWORD PTR [rbp+0x8]
   1400221c0:	test   rax,rax
   1400221c3:	jne    0x1400221ce
   1400221c5:	lea    rdx,[rip+0x3fae9]        # 0x140061cb5
   1400221cc:	jmp    0x1400221db
   1400221ce:	mov    rdx,QWORD PTR [rax+0x28]
   1400221d2:	test   rdx,rdx
   1400221d5:	jne    0x1400221db
   1400221d7:	lea    rdx,[rax+0x30]
   1400221db:	lea    rcx,[rsp+0x28]
   1400221e0:	call   0x140004870
   1400221e5:	mov    esi,0x1
   1400221ea:	and    DWORD PTR [rbx+0x8],0x0
   1400221ee:	lea    rax,[rip+0x2bf6b]        # 0x14004e160
   1400221f5:	mov    QWORD PTR [rbx],rax
   1400221f8:	jmp    0x1400221fc
   1400221fa:	xor    ebx,ebx
   1400221fc:	mov    QWORD PTR [rdi],rbx
   1400221ff:	test   sil,0x1
   140022203:	je     0x14002220f
   140022205:	lea    rcx,[rsp+0x28]
   14002220a:	call   0x14000493c
   14002220f:	mov    eax,0x4
   140022214:	lea    r11,[rsp+0x90]
   14002221c:	mov    rbx,QWORD PTR [r11+0x18]
   140022220:	mov    rbp,QWORD PTR [r11+0x20]
   140022224:	mov    rsi,QWORD PTR [r11+0x28]
   140022228:	mov    rsp,r11
   14002222b:	pop    rdi
   14002222c:	ret    
   14002222d:	int3   
   14002222e:	int3   
   14002222f:	int3   
   140022230:	mov    rax,rsp
   140022233:	push   rbp
   140022234:	push   rsi
   140022235:	push   rdi
   140022236:	sub    rsp,0x90
   14002223d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022246:	mov    QWORD PTR [rax+0x10],rbx
   14002224a:	mov    rbp,rdx
   14002224d:	mov    rdi,rcx
   140022250:	xor    esi,esi
   140022252:	mov    DWORD PTR [rax+0x8],esi
   140022255:	test   rcx,rcx
   140022258:	je     0x1400222e9
   14002225e:	cmp    QWORD PTR [rcx],rsi
   140022261:	jne    0x1400222e9
   140022267:	lea    ecx,[rsi+0x30]
   14002226a:	call   0x140026118
   14002226f:	mov    rbx,rax
   140022272:	mov    QWORD PTR [rsp+0xc0],rax
   14002227a:	test   rax,rax
   14002227d:	je     0x1400222d4
   14002227f:	mov    rax,QWORD PTR [rbp+0x8]
   140022283:	test   rax,rax
   140022286:	jne    0x140022291
   140022288:	lea    rdx,[rip+0x3fa26]        # 0x140061cb5
   14002228f:	jmp    0x14002229e
   140022291:	mov    rdx,QWORD PTR [rax+0x28]
   140022295:	test   rdx,rdx
   140022298:	jne    0x14002229e
   14002229a:	lea    rdx,[rax+0x30]
   14002229e:	lea    rcx,[rsp+0x28]
   1400222a3:	call   0x140004870
   1400222a8:	nop
   1400222a9:	mov    esi,0x1
   1400222ae:	mov    DWORD PTR [rsp+0xb0],esi
   1400222b5:	and    DWORD PTR [rbx+0x8],0x0
   1400222b9:	lea    rcx,[rip+0x2bf00]        # 0x14004e1c0
   1400222c0:	mov    QWORD PTR [rbx],rcx
   1400222c3:	mov    r8b,sil
   1400222c6:	mov    rdx,rax
   1400222c9:	mov    rcx,rbx
   1400222cc:	call   0x140022304
   1400222d1:	nop
   1400222d2:	jmp    0x1400222d6
   1400222d4:	xor    ebx,ebx
   1400222d6:	mov    QWORD PTR [rdi],rbx
   1400222d9:	test   sil,0x1
   1400222dd:	je     0x1400222e9
   1400222df:	lea    rcx,[rsp+0x28]
   1400222e4:	call   0x14000493c
   1400222e9:	mov    eax,0x4
   1400222ee:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400222f6:	add    rsp,0x90
   1400222fd:	pop    rdi
   1400222fe:	pop    rsi
   1400222ff:	pop    rbp
   140022300:	ret    
   140022301:	int3   
   140022302:	int3   
   140022303:	int3   
   140022304:	mov    rax,rsp
   140022307:	mov    QWORD PTR [rax+0x8],rcx
   14002230b:	push   r13
   14002230d:	push   r14
   14002230f:	push   r15
   140022311:	sub    rsp,0x60
   140022315:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14002231d:	mov    QWORD PTR [rax+0x10],rbx
   140022321:	mov    QWORD PTR [rax+0x18],rsi
   140022325:	mov    QWORD PTR [rax+0x20],rdi
   140022329:	mov    r15b,r8b
   14002232c:	mov    rbx,rcx
   14002232f:	call   0x140030490
   140022334:	mov    r14,rax
   140022337:	lea    rcx,[rsp+0x28]
   14002233c:	call   0x140027ec8
   140022341:	and    QWORD PTR [rbx+0x10],0x0
   140022346:	and    QWORD PTR [rbx+0x20],0x0
   14002234b:	and    QWORD PTR [rbx+0x28],0x0
   140022350:	test   r15b,r15b
   140022353:	lea    rdi,[rip+0x3f95b]        # 0x140061cb5
   14002235a:	jne    0x140022360
   14002235c:	mov    rdi,QWORD PTR [r14+0x10]
   140022360:	lea    rcx,[rsp+0x28]
   140022365:	call   0x140027ec8
   14002236a:	mov    rcx,rdi
   14002236d:	call   0x140031140
   140022372:	mov    r13d,0x1
   140022378:	lea    rsi,[rax+r13*1]
   14002237c:	mov    edx,r13d
   14002237f:	mov    rcx,rsi
   140022382:	call   0x14002c75c
   140022387:	mov    rdx,rax
   14002238a:	test   rax,rax
   14002238d:	jne    0x140022394
   14002238f:	call   0x140027a0c
   140022394:	test   rsi,rsi
   140022397:	je     0x1400223ac
   140022399:	mov    rcx,rdx
   14002239c:	sub    rcx,rdi
   14002239f:	mov    al,BYTE PTR [rdi]
   1400223a1:	mov    BYTE PTR [rcx+rdi*1],al
   1400223a4:	add    rdi,r13
   1400223a7:	sub    rsi,r13
   1400223aa:	jne    0x14002239f
   1400223ac:	mov    QWORD PTR [rbx+0x10],rdx
   1400223b0:	lea    rdi,[rip+0x3f8f1]        # 0x140061ca8
   1400223b7:	mov    rcx,rdi
   1400223ba:	call   0x140031140
   1400223bf:	lea    rsi,[rax+r13*1]
   1400223c3:	mov    rdx,r13
   1400223c6:	mov    rcx,rsi
   1400223c9:	call   0x14002c75c
   1400223ce:	mov    rdx,rax
   1400223d1:	test   rax,rax
   1400223d4:	jne    0x1400223db
   1400223d6:	call   0x140027a0c
   1400223db:	test   rsi,rsi
   1400223de:	je     0x1400223f3
   1400223e0:	mov    rcx,rdx
   1400223e3:	sub    rcx,rdi
   1400223e6:	mov    al,BYTE PTR [rdi]
   1400223e8:	mov    BYTE PTR [rcx+rdi*1],al
   1400223eb:	add    rdi,r13
   1400223ee:	sub    rsi,r13
   1400223f1:	jne    0x1400223e6
   1400223f3:	mov    QWORD PTR [rbx+0x20],rdx
   1400223f7:	lea    rsi,[rip+0x3f8b2]        # 0x140061cb0
   1400223fe:	mov    rcx,rsi
   140022401:	call   0x140031140
   140022406:	lea    rdi,[rax+r13*1]
   14002240a:	mov    rdx,r13
   14002240d:	mov    rcx,rdi
   140022410:	call   0x14002c75c
   140022415:	mov    rdx,rax
   140022418:	test   rax,rax
   14002241b:	jne    0x140022422
   14002241d:	call   0x140027a0c
   140022422:	test   rdi,rdi
   140022425:	je     0x14002243a
   140022427:	mov    rcx,rdx
   14002242a:	sub    rcx,rsi
   14002242d:	mov    al,BYTE PTR [rsi]
   14002242f:	mov    BYTE PTR [rcx+rsi*1],al
   140022432:	add    rsi,r13
   140022435:	sub    rdi,r13
   140022438:	jne    0x14002242d
   14002243a:	mov    QWORD PTR [rbx+0x28],rdx
   14002243e:	test   r15b,r15b
   140022441:	je     0x14002244b
   140022443:	mov    WORD PTR [rbx+0x18],0x2c2e
   140022449:	jmp    0x14002245c
   14002244b:	mov    rax,QWORD PTR [r14]
   14002244e:	mov    cl,BYTE PTR [rax]
   140022450:	mov    BYTE PTR [rbx+0x18],cl
   140022453:	mov    rax,QWORD PTR [r14+0x8]
   140022457:	mov    cl,BYTE PTR [rax]
   140022459:	mov    BYTE PTR [rbx+0x19],cl
   14002245c:	lea    r11,[rsp+0x60]
   140022461:	mov    rbx,QWORD PTR [r11+0x28]
   140022465:	mov    rsi,QWORD PTR [r11+0x30]
   140022469:	mov    rdi,QWORD PTR [r11+0x38]
   14002246d:	mov    rsp,r11
   140022470:	pop    r15
   140022472:	pop    r14
   140022474:	pop    r13
   140022476:	ret    
   140022477:	int3   
   140022478:	mov    rax,rsp
   14002247b:	push   rbp
   14002247c:	push   rsi
   14002247d:	push   rdi
   14002247e:	push   r12
   140022480:	push   r13
   140022482:	push   r14
   140022484:	push   r15
   140022486:	lea    rbp,[rax-0x47]
   14002248a:	sub    rsp,0xc0
   140022491:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   140022499:	mov    QWORD PTR [rax+0x8],rbx
   14002249d:	mov    rax,QWORD PTR [rip+0x4ebac]        # 0x140071050
   1400224a4:	xor    rax,rsp
   1400224a7:	mov    QWORD PTR [rbp-0x1],rax
   1400224ab:	mov    r14,r9
   1400224ae:	mov    r12,r8
   1400224b1:	mov    QWORD PTR [rbp-0x51],rdx
   1400224b5:	mov    r13,rcx
   1400224b8:	mov    al,BYTE PTR [rbp+0x6f]
   1400224bb:	mov    BYTE PTR [rsp+0x30],al
   1400224bf:	mov    rdi,QWORD PTR [rbp+0x77]
   1400224c3:	mov    rsi,QWORD PTR [rbp+0x7f]
   1400224c7:	test   rsi,rsi
   1400224ca:	je     0x1400224db
   1400224cc:	mov    al,BYTE PTR [rdi]
   1400224ce:	sub    al,0x2b
   1400224d0:	test   al,0xfd
   1400224d2:	jne    0x1400224db
   1400224d4:	mov    ebx,0x1
   1400224d9:	jmp    0x1400224dd
   1400224db:	xor    ebx,ebx
   1400224dd:	mov    eax,DWORD PTR [r9+0x18]
   1400224e1:	and    eax,0xe00
   1400224e6:	cmp    eax,0x800
   1400224eb:	jne    0x140022508
   1400224ed:	lea    rcx,[rbx+0x2]
   1400224f1:	cmp    rcx,rsi
   1400224f4:	ja     0x140022508
   1400224f6:	cmp    BYTE PTR [rdi+rbx*1],0x30
   1400224fa:	jne    0x140022508
   1400224fc:	mov    al,BYTE PTR [rdi+rbx*1+0x1]
   140022500:	sub    al,0x58
   140022502:	test   al,0xdf
   140022504:	cmove  rbx,rcx
   140022508:	lea    rdx,[rbp-0x71]
   14002250c:	mov    rcx,r14
   14002250f:	call   0x140005600
   140022514:	nop
   140022515:	mov    rcx,rax
   140022518:	call   0x140020c18
   14002251d:	mov    r15,rax
   140022520:	mov    rcx,QWORD PTR [rbp-0x69]
   140022524:	test   rcx,rcx
   140022527:	je     0x140022543
   140022529:	mov    rax,QWORD PTR [rcx]
   14002252c:	call   QWORD PTR [rax+0x10]
   14002252f:	test   rax,rax
   140022532:	je     0x140022543
   140022534:	mov    r8,QWORD PTR [rax]
   140022537:	mov    edx,0x1
   14002253c:	mov    rcx,rax
   14002253f:	call   QWORD PTR [r8]
   140022542:	nop
   140022543:	mov    QWORD PTR [rbp-0x29],0xf
   14002254b:	and    QWORD PTR [rbp-0x31],0x0
   140022550:	mov    BYTE PTR [rbp-0x41],0x0
   140022554:	xor    r8d,r8d
   140022557:	mov    rdx,rsi
   14002255a:	lea    rcx,[rbp-0x41]
   14002255e:	call   0x140022c38
   140022563:	nop
   140022564:	lea    r9,[rbp-0x41]
   140022568:	cmp    QWORD PTR [rbp-0x29],0x10
   14002256d:	cmovae r9,QWORD PTR [rbp-0x41]
   140022572:	mov    rax,QWORD PTR [r15]
   140022575:	lea    r8,[rsi+rdi*1]
   140022579:	mov    rdx,rdi
   14002257c:	mov    rcx,r15
   14002257f:	call   QWORD PTR [rax+0x38]
   140022582:	lea    rdx,[rbp-0x71]
   140022586:	mov    rcx,r14
   140022589:	call   0x140005600
   14002258e:	nop
   14002258f:	mov    rcx,rax
   140022592:	call   0x140020e80
   140022597:	mov    r15,rax
   14002259a:	mov    rcx,QWORD PTR [rbp-0x69]
   14002259e:	test   rcx,rcx
   1400225a1:	je     0x1400225bd
   1400225a3:	mov    rax,QWORD PTR [rcx]
   1400225a6:	call   QWORD PTR [rax+0x10]
   1400225a9:	test   rax,rax
   1400225ac:	je     0x1400225bd
   1400225ae:	mov    r8,QWORD PTR [rax]
   1400225b1:	mov    edx,0x1
   1400225b6:	mov    rcx,rax
   1400225b9:	call   QWORD PTR [r8]
   1400225bc:	nop
   1400225bd:	lea    rdx,[rbp-0x21]
   1400225c1:	mov    rcx,r15
   1400225c4:	call   0x14001012c
   1400225c9:	nop
   1400225ca:	lea    rdi,[rbp-0x21]
   1400225ce:	cmp    QWORD PTR [rbp-0x9],0x10
   1400225d3:	cmovae rdi,QWORD PTR [rbp-0x21]
   1400225d8:	mov    al,BYTE PTR [rdi]
   1400225da:	dec    al
   1400225dc:	cmp    al,0x7d
   1400225de:	ja     0x140022630
   1400225e0:	mov    rax,QWORD PTR [r15]
   1400225e3:	mov    rcx,r15
   1400225e6:	call   QWORD PTR [rax+0x20]
   1400225e9:	mov    r15b,al
   1400225ec:	cmp    BYTE PTR [rdi],0x7f
   1400225ef:	je     0x140022630
   1400225f1:	cmp    BYTE PTR [rdi],0x0
   1400225f4:	jle    0x140022630
   1400225f6:	movsx  rcx,BYTE PTR [rdi]
   1400225fa:	mov    rax,rsi
   1400225fd:	sub    rax,rbx
   140022600:	cmp    rcx,rax
   140022603:	jae    0x140022630
   140022605:	sub    rsi,rcx
   140022608:	mov    r9b,r15b
   14002260b:	mov    r8d,0x1
   140022611:	mov    rdx,rsi
   140022614:	lea    rcx,[rbp-0x41]
   140022618:	call   0x140023940
   14002261d:	lea    rax,[rdi+0x1]
   140022621:	cmp    BYTE PTR [rax],0x0
   140022624:	cmovle rax,rdi
   140022628:	mov    rdi,rax
   14002262b:	cmp    BYTE PTR [rax],0x7f
   14002262e:	jne    0x1400225f1
   140022630:	mov    rsi,QWORD PTR [rbp-0x31]
   140022634:	mov    rdi,QWORD PTR [r14+0x28]
   140022638:	test   rdi,rdi
   14002263b:	jle    0x140022647
   14002263d:	cmp    rdi,rsi
   140022640:	jbe    0x140022647
   140022642:	sub    rdi,rsi
   140022645:	jmp    0x140022649
   140022647:	xor    edi,edi
   140022649:	mov    eax,DWORD PTR [r14+0x18]
   14002264d:	and    eax,0x1c0
   140022652:	movups xmm0,XMMWORD PTR [r12]
   140022657:	lea    r8,[rbp-0x71]
   14002265b:	lea    rdx,[rbp-0x61]
   14002265f:	mov    rcx,r13
   140022662:	movdqu XMMWORD PTR [rbp-0x71],xmm0
   140022667:	cmp    eax,0x40
   14002266a:	je     0x14002270b
   140022670:	cmp    eax,0x100
   140022675:	je     0x1400226c1
   140022677:	mov    QWORD PTR [rsp+0x20],rdi
   14002267c:	mov    r15b,BYTE PTR [rsp+0x30]
   140022681:	mov    r9b,r15b
   140022684:	call   0x14002290c
   140022689:	movups xmm0,XMMWORD PTR [rax]
   14002268c:	movdqu XMMWORD PTR [r12],xmm0
   140022692:	xor    edi,edi
   140022694:	movups xmm1,XMMWORD PTR [rax]
   140022697:	movdqu XMMWORD PTR [rbp-0x71],xmm1
   14002269c:	lea    r9,[rbp-0x41]
   1400226a0:	cmp    QWORD PTR [rbp-0x29],0x10
   1400226a5:	cmovae r9,QWORD PTR [rbp-0x41]
   1400226aa:	mov    QWORD PTR [rsp+0x20],rbx
   1400226af:	lea    r8,[rbp-0x71]
   1400226b3:	lea    rdx,[rbp-0x61]
   1400226b7:	mov    rcx,r13
   1400226ba:	call   0x140022868
   1400226bf:	jmp    0x140022728
   1400226c1:	lea    r9,[rbp-0x41]
   1400226c5:	cmp    QWORD PTR [rbp-0x29],0x10
   1400226ca:	cmovae r9,QWORD PTR [rbp-0x41]
   1400226cf:	mov    QWORD PTR [rsp+0x20],rbx
   1400226d4:	call   0x140022868
   1400226d9:	movups xmm0,XMMWORD PTR [rax]
   1400226dc:	movdqu XMMWORD PTR [r12],xmm0
   1400226e2:	movups xmm1,XMMWORD PTR [rax]
   1400226e5:	movdqu XMMWORD PTR [rbp-0x71],xmm1
   1400226ea:	mov    QWORD PTR [rsp+0x20],rdi
   1400226ef:	mov    r15b,BYTE PTR [rsp+0x30]
   1400226f4:	mov    r9b,r15b
   1400226f7:	lea    r8,[rbp-0x71]
   1400226fb:	lea    rdx,[rbp-0x61]
   1400226ff:	mov    rcx,r13
   140022702:	call   0x14002290c
   140022707:	xor    edi,edi
   140022709:	jmp    0x140022728
   14002270b:	lea    r9,[rbp-0x41]
   14002270f:	cmp    QWORD PTR [rbp-0x29],0x10
   140022714:	cmovae r9,QWORD PTR [rbp-0x41]
   140022719:	mov    QWORD PTR [rsp+0x20],rbx
   14002271e:	call   0x140022868
   140022723:	mov    r15b,BYTE PTR [rsp+0x30]
   140022728:	movups xmm0,XMMWORD PTR [rax]
   14002272b:	movdqu XMMWORD PTR [r12],xmm0
   140022731:	movdqu XMMWORD PTR [rbp-0x71],xmm0
   140022736:	lea    r9,[rbp-0x41]
   14002273a:	cmp    QWORD PTR [rbp-0x29],0x10
   14002273f:	cmovae r9,QWORD PTR [rbp-0x41]
   140022744:	sub    rsi,rbx
   140022747:	add    r9,rbx
   14002274a:	mov    QWORD PTR [rsp+0x20],rsi
   14002274f:	lea    r8,[rbp-0x71]
   140022753:	lea    rdx,[rbp-0x61]
   140022757:	mov    rcx,r13
   14002275a:	call   0x140022868
   14002275f:	movups xmm0,XMMWORD PTR [rax]
   140022762:	movdqu XMMWORD PTR [r12],xmm0
   140022768:	xor    esi,esi
   14002276a:	mov    QWORD PTR [r14+0x28],rsi
   14002276e:	movups xmm1,XMMWORD PTR [r12]
   140022773:	movdqu XMMWORD PTR [rbp-0x71],xmm1
   140022778:	mov    QWORD PTR [rsp+0x20],rdi
   14002277d:	mov    r9b,r15b
   140022780:	lea    r8,[rbp-0x71]
   140022784:	mov    rbx,QWORD PTR [rbp-0x51]
   140022788:	mov    rdx,rbx
   14002278b:	mov    rcx,r13
   14002278e:	call   0x14002290c
   140022793:	nop
   140022794:	mov    rdx,QWORD PTR [rbp-0x9]
   140022798:	cmp    rdx,0x10
   14002279c:	jb     0x1400227ae
   14002279e:	inc    rdx
   1400227a1:	lea    r8d,[rsi+0x1]
   1400227a5:	mov    rcx,QWORD PTR [rbp-0x21]
   1400227a9:	call   0x140004804
   1400227ae:	mov    QWORD PTR [rbp-0x9],0xf
   1400227b6:	mov    QWORD PTR [rbp-0x11],rsi
   1400227ba:	mov    BYTE PTR [rbp-0x21],sil
   1400227be:	mov    rdx,QWORD PTR [rbp-0x29]
   1400227c2:	cmp    rdx,0x10
   1400227c6:	jb     0x1400227da
   1400227c8:	inc    rdx
   1400227cb:	mov    r8d,0x1
   1400227d1:	mov    rcx,QWORD PTR [rbp-0x41]
   1400227d5:	call   0x140004804
   1400227da:	mov    rax,rbx
   1400227dd:	mov    rcx,QWORD PTR [rbp-0x1]
   1400227e1:	xor    rcx,rsp
   1400227e4:	call   0x140025df0
   1400227e9:	mov    rbx,QWORD PTR [rsp+0x100]
   1400227f1:	add    rsp,0xc0
   1400227f8:	pop    r15
   1400227fa:	pop    r14
   1400227fc:	pop    r13
   1400227fe:	pop    r12
   140022800:	pop    rdi
   140022801:	pop    rsi
   140022802:	pop    rbp
   140022803:	ret    
   140022804:	rex push rbx
   140022806:	sub    rsp,0x30
   14002280a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022813:	mov    rbx,rcx
   140022816:	mov    rax,QWORD PTR [rcx]
   140022819:	movsxd rcx,DWORD PTR [rax+0x4]
   14002281d:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140022822:	jne    0x140022861
   140022824:	test   BYTE PTR [rcx+rbx*1+0x18],0x2
   140022829:	je     0x140022861
   14002282b:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   140022830:	mov    rax,QWORD PTR [rcx]
   140022833:	call   QWORD PTR [rax+0x68]
   140022836:	cmp    eax,0xffffffff
   140022839:	jne    0x140022861
   14002283b:	mov    rax,QWORD PTR [rbx]
   14002283e:	movsxd rcx,DWORD PTR [rax+0x4]
   140022842:	add    rcx,rbx
   140022845:	mov    edx,DWORD PTR [rcx+0x10]
   140022848:	mov    eax,edx
   14002284a:	or     eax,0x4
   14002284d:	cmp    QWORD PTR [rcx+0x48],0x0
   140022852:	cmove  edx,eax
   140022855:	or     edx,0x4
   140022858:	xor    r8d,r8d
   14002285b:	call   0x1400054f8
   140022860:	nop
   140022861:	add    rsp,0x30
   140022865:	pop    rbx
   140022866:	ret    
   140022867:	int3   
   140022868:	mov    QWORD PTR [rsp+0x8],rbx
   14002286d:	mov    QWORD PTR [rsp+0x10],rbp
   140022872:	mov    QWORD PTR [rsp+0x18],rsi
   140022877:	push   rdi
   140022878:	sub    rsp,0x20
   14002287c:	mov    rbx,QWORD PTR [rsp+0x50]
   140022881:	mov    rsi,r9
   140022884:	mov    rdi,r8
   140022887:	mov    rbp,rdx
   14002288a:	test   rbx,rbx
   14002288d:	je     0x1400228eb
   14002288f:	mov    rcx,QWORD PTR [rdi+0x8]
   140022893:	test   rcx,rcx
   140022896:	je     0x1400228df
   140022898:	mov    rax,QWORD PTR [rcx+0x40]
   14002289c:	mov    r8b,BYTE PTR [rsi]
   14002289f:	cmp    QWORD PTR [rax],0x0
   1400228a3:	je     0x1400228ad
   1400228a5:	mov    rax,QWORD PTR [rcx+0x58]
   1400228a9:	mov    edx,DWORD PTR [rax]
   1400228ab:	jmp    0x1400228af
   1400228ad:	xor    edx,edx
   1400228af:	test   edx,edx
   1400228b1:	jle    0x1400228d0
   1400228b3:	mov    rax,QWORD PTR [rcx+0x58]
   1400228b7:	dec    DWORD PTR [rax]
   1400228b9:	mov    rcx,QWORD PTR [rcx+0x40]
   1400228bd:	mov    rdx,QWORD PTR [rcx]
   1400228c0:	lea    rax,[rdx+0x1]
   1400228c4:	mov    QWORD PTR [rcx],rax
   1400228c7:	mov    BYTE PTR [rdx],r8b
   1400228ca:	movzx  eax,r8b
   1400228ce:	jmp    0x1400228da
   1400228d0:	mov    rax,QWORD PTR [rcx]
   1400228d3:	movzx  edx,r8b
   1400228d7:	call   QWORD PTR [rax+0x18]
   1400228da:	cmp    eax,0xffffffff
   1400228dd:	jne    0x1400228e2
   1400228df:	mov    BYTE PTR [rdi],0x1
   1400228e2:	inc    rsi
   1400228e5:	sub    rbx,0x1
   1400228e9:	jne    0x14002288f
   1400228eb:	movups xmm0,XMMWORD PTR [rdi]
   1400228ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400228f3:	mov    rax,rbp
   1400228f6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400228fb:	movdqu XMMWORD PTR [rbp+0x0],xmm0
   140022900:	mov    rbp,QWORD PTR [rsp+0x38]
   140022905:	add    rsp,0x20
   140022909:	pop    rdi
   14002290a:	ret    
   14002290b:	int3   
   14002290c:	mov    QWORD PTR [rsp+0x8],rbx
   140022911:	mov    QWORD PTR [rsp+0x10],rbp
   140022916:	mov    QWORD PTR [rsp+0x18],rsi
   14002291b:	push   rdi
   14002291c:	sub    rsp,0x20
   140022920:	mov    rdi,QWORD PTR [rsp+0x50]
   140022925:	mov    bpl,r9b
   140022928:	mov    rbx,r8
   14002292b:	mov    rsi,rdx
   14002292e:	test   rdi,rdi
   140022931:	je     0x140022989
   140022933:	mov    rcx,QWORD PTR [rbx+0x8]
   140022937:	test   rcx,rcx
   14002293a:	je     0x140022980
   14002293c:	mov    rax,QWORD PTR [rcx+0x40]
   140022940:	cmp    QWORD PTR [rax],0x0
   140022944:	je     0x14002294e
   140022946:	mov    rax,QWORD PTR [rcx+0x58]
   14002294a:	mov    edx,DWORD PTR [rax]
   14002294c:	jmp    0x140022950
   14002294e:	xor    edx,edx
   140022950:	test   edx,edx
   140022952:	jle    0x140022971
   140022954:	mov    rax,QWORD PTR [rcx+0x58]
   140022958:	dec    DWORD PTR [rax]
   14002295a:	mov    rcx,QWORD PTR [rcx+0x40]
   14002295e:	mov    rdx,QWORD PTR [rcx]
   140022961:	lea    rax,[rdx+0x1]
   140022965:	mov    QWORD PTR [rcx],rax
   140022968:	mov    BYTE PTR [rdx],bpl
   14002296b:	movzx  eax,bpl
   14002296f:	jmp    0x14002297b
   140022971:	mov    rax,QWORD PTR [rcx]
   140022974:	movzx  edx,bpl
   140022978:	call   QWORD PTR [rax+0x18]
   14002297b:	cmp    eax,0xffffffff
   14002297e:	jne    0x140022983
   140022980:	mov    BYTE PTR [rbx],0x1
   140022983:	sub    rdi,0x1
   140022987:	jne    0x140022933
   140022989:	movups xmm0,XMMWORD PTR [rbx]
   14002298c:	mov    rbx,QWORD PTR [rsp+0x30]
   140022991:	mov    rax,rsi
   140022994:	mov    rbp,QWORD PTR [rsp+0x38]
   140022999:	movdqu XMMWORD PTR [rsi],xmm0
   14002299d:	mov    rsi,QWORD PTR [rsp+0x40]
   1400229a2:	add    rsp,0x20
   1400229a6:	pop    rdi
   1400229a7:	ret    
   1400229a8:	rex push rbx
   1400229aa:	sub    rsp,0x20
   1400229ae:	mov    r8d,0x1
   1400229b4:	mov    rbx,rcx
   1400229b7:	test   BYTE PTR [rcx+0x70],r8b
   1400229bb:	je     0x1400229f2
   1400229bd:	mov    rax,QWORD PTR [rcx+0x40]
   1400229c1:	mov    rcx,QWORD PTR [rax]
   1400229c4:	test   rcx,rcx
   1400229c7:	je     0x1400229d5
   1400229c9:	mov    rax,QWORD PTR [rbx+0x58]
   1400229cd:	movsxd rdx,DWORD PTR [rax]
   1400229d0:	add    rdx,rcx
   1400229d3:	jmp    0x1400229e3
   1400229d5:	mov    rax,QWORD PTR [rbx+0x50]
   1400229d9:	movsxd rdx,DWORD PTR [rax]
   1400229dc:	mov    rax,QWORD PTR [rbx+0x38]
   1400229e0:	add    rdx,QWORD PTR [rax]
   1400229e3:	mov    rax,QWORD PTR [rbx+0x18]
   1400229e7:	sub    rdx,QWORD PTR [rax]
   1400229ea:	mov    rcx,QWORD PTR [rax]
   1400229ed:	call   0x140004804
   1400229f2:	mov    rax,QWORD PTR [rbx+0x18]
   1400229f6:	and    QWORD PTR [rax],0x0
   1400229fa:	mov    rax,QWORD PTR [rbx+0x38]
   1400229fe:	and    QWORD PTR [rax],0x0
   140022a02:	mov    rax,QWORD PTR [rbx+0x50]
   140022a06:	and    DWORD PTR [rax],0x0
   140022a09:	mov    rax,QWORD PTR [rbx+0x20]
   140022a0d:	and    QWORD PTR [rax],0x0
   140022a11:	mov    rax,QWORD PTR [rbx+0x40]
   140022a15:	and    QWORD PTR [rax],0x0
   140022a19:	mov    rax,QWORD PTR [rbx+0x58]
   140022a1d:	and    DWORD PTR [rax],0x0
   140022a20:	and    QWORD PTR [rbx+0x68],0x0
   140022a25:	and    DWORD PTR [rbx+0x70],0xfffffffe
   140022a29:	add    rsp,0x20
   140022a2d:	pop    rbx
   140022a2e:	ret    
   140022a2f:	int3   
   140022a30:	rex push rbx
   140022a32:	sub    rsp,0x20
   140022a36:	mov    rax,QWORD PTR [rcx]
   140022a39:	xor    ebx,ebx
   140022a3b:	mov    r8,QWORD PTR [rdx+0x8]
   140022a3f:	sub    r8,QWORD PTR [rdx]
   140022a42:	mov    rcx,QWORD PTR [rax+0x8]
   140022a46:	test   rcx,rcx
   140022a49:	je     0x140022a66
   140022a4b:	mov    eax,0xffffffff
   140022a50:	cmp    r8,rax
   140022a53:	ja     0x140022a66
   140022a55:	mov    rdx,QWORD PTR [rdx]
   140022a58:	xor    r9d,r9d
   140022a5b:	call   QWORD PTR [rip+0x285cf]        # 0x14004b030
   140022a61:	test   eax,eax
   140022a63:	setne  bl
   140022a66:	mov    al,bl
   140022a68:	add    rsp,0x20
   140022a6c:	pop    rbx
   140022a6d:	ret    
   140022a6e:	int3   
   140022a6f:	int3   
   140022a70:	mov    rax,rsp
   140022a73:	push   rbp
   140022a74:	lea    rbp,[rax-0x48]
   140022a78:	sub    rsp,0x140
   140022a7f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022a88:	mov    QWORD PTR [rax+0x8],rbx
   140022a8c:	mov    rax,QWORD PTR [rip+0x4e5bd]        # 0x140071050
   140022a93:	xor    rax,rsp
   140022a96:	mov    QWORD PTR [rbp+0x30],rax
   140022a9a:	mov    edx,DWORD PTR [rcx+0x10]
   140022a9d:	test   edx,edx
   140022a9f:	je     0x140022ba1
   140022aa5:	cmp    edx,0x1
   140022aa8:	je     0x140022b9a
   140022aae:	mov    edx,0x2
   140022ab3:	lea    r8d,[rdx-0x1]
   140022ab7:	lea    rcx,[rsp+0x28]
   140022abc:	call   0x14000be9c
   140022ac1:	nop
   140022ac2:	lea    rdx,[rip+0x2b48f]        # 0x14004df58
   140022ac9:	lea    rcx,[rsp+0x28]
   140022ace:	call   0x140010488
   140022ad3:	lea    rdx,[rip+0x2b496]        # 0x14004df70
   140022ada:	lea    rcx,[rsp+0x28]
   140022adf:	call   0x140010488
   140022ae4:	lea    rdx,[rip+0x2b4bd]        # 0x14004dfa8
   140022aeb:	lea    rcx,[rsp+0x28]
   140022af0:	call   0x140010488
   140022af5:	mov    edx,0x7f
   140022afa:	lea    rcx,[rsp+0x28]
   140022aff:	call   0x14000e638
   140022b04:	lea    rdx,[rip+0x29525]        # 0x14004c030
   140022b0b:	lea    rcx,[rsp+0x28]
   140022b10:	call   0x140010488
   140022b15:	lea    rdx,[rip+0x2b49c]        # 0x14004dfb8
   140022b1c:	lea    rcx,[rsp+0x28]
   140022b21:	call   0x140010488
   140022b26:	lea    rdx,[rbp+0x10]
   140022b2a:	lea    rcx,[rsp+0x28]
   140022b2f:	call   0x14000a950
   140022b34:	nop
   140022b35:	lea    rcx,[rbp-0x50]
   140022b39:	call   0x14000a9dc
   140022b3e:	nop
   140022b3f:	lea    rax,[rip+0x28dd2]        # 0x14004b918
   140022b46:	mov    QWORD PTR [rbp-0x50],rax
   140022b4a:	lea    rcx,[rbp-0x50]
   140022b4e:	call   0x140027b0c
   140022b53:	nop
   140022b54:	lea    rdx,[rbp+0x10]
   140022b58:	xor    ecx,ecx
   140022b5a:	call   0x14001a654
   140022b5f:	lea    rbx,[rbp+0x10]
   140022b63:	cmp    QWORD PTR [rbp+0x28],0x8
   140022b68:	cmovae rbx,QWORD PTR [rbp+0x10]
   140022b6d:	mov    ecx,0x2
   140022b72:	call   0x140032b10
   140022b77:	mov    rcx,rax
   140022b7a:	mov    r8,rbx
   140022b7d:	lea    rdx,[rip+0x2b45c]        # 0x14004dfe0
   140022b84:	call   0x14001a904
   140022b89:	nop
   140022b8a:	xor    r8d,r8d
   140022b8d:	mov    dl,0x1
   140022b8f:	lea    rcx,[rbp+0x10]
   140022b93:	call   0x14000b6b0
   140022b98:	jmp    0x140022ba1
   140022b9a:	mov    eax,0x800c
   140022b9f:	jmp    0x140022ba6
   140022ba1:	mov    eax,0x8003
   140022ba6:	mov    rcx,QWORD PTR [rbp+0x30]
   140022baa:	xor    rcx,rsp
   140022bad:	call   0x140025df0
   140022bb2:	mov    rbx,QWORD PTR [rsp+0x150]
   140022bba:	add    rsp,0x140
   140022bc1:	pop    rbp
   140022bc2:	ret    
   140022bc3:	int3   
   140022bc4:	rex push rdi
   140022bc6:	sub    rsp,0x30
   140022bca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022bd3:	mov    QWORD PTR [rsp+0x40],rbx
   140022bd8:	mov    rdi,rdx
   140022bdb:	mov    rbx,rcx
   140022bde:	cmp    rcx,rdx
   140022be1:	je     0x140022c2a
   140022be3:	mov    rdx,QWORD PTR [rcx+0x18]
   140022be7:	cmp    rdx,0x10
   140022beb:	jb     0x140022bff
   140022bed:	inc    rdx
   140022bf0:	mov    r8d,0x1
   140022bf6:	mov    rcx,QWORD PTR [rcx]
   140022bf9:	call   0x140004804
   140022bfe:	nop
   140022bff:	mov    QWORD PTR [rbx+0x18],0xf
   140022c07:	and    QWORD PTR [rbx+0x10],0x0
   140022c0c:	cmp    QWORD PTR [rbx+0x18],0x10
   140022c11:	jb     0x140022c18
   140022c13:	mov    rax,QWORD PTR [rbx]
   140022c16:	jmp    0x140022c1b
   140022c18:	mov    rax,rbx
   140022c1b:	mov    BYTE PTR [rax],0x0
   140022c1e:	mov    rdx,rdi
   140022c21:	mov    rcx,rbx
   140022c24:	call   0x14000be10
   140022c29:	nop
   140022c2a:	mov    rax,rbx
   140022c2d:	mov    rbx,QWORD PTR [rsp+0x40]
   140022c32:	add    rsp,0x30
   140022c36:	pop    rdi
   140022c37:	ret    
   140022c38:	mov    QWORD PTR [rsp+0x8],rbx
   140022c3d:	mov    QWORD PTR [rsp+0x10],rsi
   140022c42:	push   rdi
   140022c43:	sub    rsp,0x20
   140022c47:	mov    sil,r8b
   140022c4a:	mov    rdi,rdx
   140022c4d:	mov    rbx,rcx
   140022c50:	cmp    rdx,0xffffffffffffffff
   140022c54:	je     0x140022cf4
   140022c5a:	cmp    rdx,0xfffffffffffffffe
   140022c5e:	ja     0x140022d01
   140022c64:	cmp    QWORD PTR [rcx+0x18],rdx
   140022c68:	jae    0x140022c75
   140022c6a:	mov    r8,QWORD PTR [rcx+0x10]
   140022c6e:	call   0x14000cc90
   140022c73:	jmp    0x140022c90
   140022c75:	test   rdi,rdi
   140022c78:	jne    0x140022c95
   140022c7a:	and    QWORD PTR [rcx+0x10],rdi
   140022c7e:	cmp    QWORD PTR [rcx+0x18],0x10
   140022c83:	jb     0x140022c8a
   140022c85:	mov    rax,QWORD PTR [rcx]
   140022c88:	jmp    0x140022c8d
   140022c8a:	mov    rax,rbx
   140022c8d:	mov    BYTE PTR [rax],0x0
   140022c90:	test   rdi,rdi
   140022c93:	je     0x140022ce1
   140022c95:	cmp    rdi,0x1
   140022c99:	jne    0x140022caf
   140022c9b:	cmp    QWORD PTR [rbx+0x18],0x10
   140022ca0:	jb     0x140022ca7
   140022ca2:	mov    rax,QWORD PTR [rbx]
   140022ca5:	jmp    0x140022caa
   140022ca7:	mov    rax,rbx
   140022caa:	mov    BYTE PTR [rax],sil
   140022cad:	jmp    0x140022cca
   140022caf:	cmp    QWORD PTR [rbx+0x18],0x10
   140022cb4:	jb     0x140022cbb
   140022cb6:	mov    rcx,QWORD PTR [rbx]
   140022cb9:	jmp    0x140022cbe
   140022cbb:	mov    rcx,rbx
   140022cbe:	movsx  edx,sil
   140022cc2:	mov    r8,rdi
   140022cc5:	call   0x14002a910
   140022cca:	cmp    QWORD PTR [rbx+0x18],0x10
   140022ccf:	mov    QWORD PTR [rbx+0x10],rdi
   140022cd3:	jb     0x140022cda
   140022cd5:	mov    rax,QWORD PTR [rbx]
   140022cd8:	jmp    0x140022cdd
   140022cda:	mov    rax,rbx
   140022cdd:	mov    BYTE PTR [rax+rdi*1],0x0
   140022ce1:	mov    rsi,QWORD PTR [rsp+0x38]
   140022ce6:	mov    rax,rbx
   140022ce9:	mov    rbx,QWORD PTR [rsp+0x30]
   140022cee:	add    rsp,0x20
   140022cf2:	pop    rdi
   140022cf3:	ret    
   140022cf4:	lea    rcx,[rip+0x40145]        # 0x140062e40
   140022cfb:	call   0x140027a4c
   140022d00:	int3   
   140022d01:	lea    rcx,[rip+0x40138]        # 0x140062e40
   140022d08:	call   0x140027a4c
   140022d0d:	int3   
   140022d0e:	int3   
   140022d0f:	int3   
   140022d10:	mov    al,BYTE PTR [rcx+0x18]
   140022d13:	ret    
   140022d14:	mov    QWORD PTR [rsp+0x8],rbx
   140022d19:	push   rdi
   140022d1a:	sub    rsp,0x30
   140022d1e:	mov    rdi,QWORD PTR [rcx+0x20]
   140022d22:	xor    eax,eax
   140022d24:	mov    QWORD PTR [rdx+0x18],0xf
   140022d2c:	mov    rbx,rdx
   140022d2f:	mov    QWORD PTR [rdx+0x10],rax
   140022d33:	mov    BYTE PTR [rdx],al
   140022d35:	mov    DWORD PTR [rsp+0x20],eax
   140022d39:	cmp    BYTE PTR [rdi],al
   140022d3b:	je     0x140022d45
   140022d3d:	mov    rcx,rdi
   140022d40:	call   0x140031140
   140022d45:	mov    r8,rax
   140022d48:	mov    rdx,rdi
   140022d4b:	mov    rcx,rbx
   140022d4e:	call   0x14000b994
   140022d53:	mov    rax,rbx
   140022d56:	mov    rbx,QWORD PTR [rsp+0x40]
   140022d5b:	add    rsp,0x30
   140022d5f:	pop    rdi
   140022d60:	ret    
   140022d61:	int3   
   140022d62:	int3   
   140022d63:	int3   
   140022d64:	mov    QWORD PTR [rsp+0x8],rbx
   140022d69:	push   rdi
   140022d6a:	sub    rsp,0x30
   140022d6e:	mov    rdi,QWORD PTR [rcx+0x10]
   140022d72:	xor    eax,eax
   140022d74:	mov    QWORD PTR [rdx+0x18],0xf
   140022d7c:	mov    rbx,rdx
   140022d7f:	mov    QWORD PTR [rdx+0x10],rax
   140022d83:	mov    BYTE PTR [rdx],al
   140022d85:	mov    DWORD PTR [rsp+0x20],eax
   140022d89:	cmp    BYTE PTR [rdi],al
   140022d8b:	je     0x140022d95
   140022d8d:	mov    rcx,rdi
   140022d90:	call   0x140031140
   140022d95:	mov    r8,rax
   140022d98:	mov    rdx,rdi
   140022d9b:	mov    rcx,rbx
   140022d9e:	call   0x14000b994
   140022da3:	mov    rax,rbx
   140022da6:	mov    rbx,QWORD PTR [rsp+0x40]
   140022dab:	add    rsp,0x30
   140022daf:	pop    rdi
   140022db0:	ret    
   140022db1:	int3   
   140022db2:	int3   
   140022db3:	int3   
   140022db4:	mov    al,dl
   140022db6:	ret    
   140022db7:	int3   
   140022db8:	rex push rbx
   140022dba:	sub    rsp,0x20
   140022dbe:	mov    rcx,QWORD PTR [rsp+0x50]
   140022dc3:	mov    rbx,r8
   140022dc6:	sub    r8,rdx
   140022dc9:	call   0x140028fd0
   140022dce:	mov    rax,rbx
   140022dd1:	add    rsp,0x20
   140022dd5:	pop    rbx
   140022dd6:	ret    
   140022dd7:	int3   
   140022dd8:	rex push rbx
   140022dda:	push   rsi
   140022ddb:	push   rdi
   140022ddc:	sub    rsp,0xb0
   140022de3:	mov    rax,QWORD PTR [rip+0x4e266]        # 0x140071050
   140022dea:	xor    rax,rsp
   140022ded:	mov    QWORD PTR [rsp+0xa0],rax
   140022df5:	movups xmm0,XMMWORD PTR [r8]
   140022df9:	mov    rdi,r9
   140022dfc:	lea    r8,[rip+0x40075]        # 0x140062e78
   140022e03:	mov    r9d,DWORD PTR [r9+0x18]
   140022e07:	mov    rsi,rdx
   140022e0a:	lea    rdx,[rsp+0x50]
   140022e0f:	mov    rbx,rcx
   140022e12:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140022e18:	call   0x14000fa64
   140022e1d:	mov    r9d,DWORD PTR [rsp+0xf8]
   140022e25:	lea    rcx,[rsp+0x60]
   140022e2a:	mov    r8,rax
   140022e2d:	mov    edx,0x40
   140022e32:	call   0x14000469c
   140022e37:	movsxd rdx,eax
   140022e3a:	lea    r8,[rsp+0x40]
   140022e3f:	mov    QWORD PTR [rsp+0x30],rdx
   140022e44:	lea    rax,[rsp+0x60]
   140022e49:	mov    dl,BYTE PTR [rsp+0xf0]
   140022e50:	mov    r9,rdi
   140022e53:	mov    QWORD PTR [rsp+0x28],rax
   140022e58:	mov    rcx,rbx
   140022e5b:	mov    BYTE PTR [rsp+0x20],dl
   140022e5f:	mov    rdx,rsi
   140022e62:	call   0x140022478
   140022e67:	mov    rax,rsi
   140022e6a:	mov    rcx,QWORD PTR [rsp+0xa0]
   140022e72:	xor    rcx,rsp
   140022e75:	call   0x140025df0
   140022e7a:	add    rsp,0xb0
   140022e81:	pop    rdi
   140022e82:	pop    rsi
   140022e83:	pop    rbx
   140022e84:	ret    
   140022e85:	int3   
   140022e86:	int3   
   140022e87:	int3   
   140022e88:	rex push rbx
   140022e8a:	push   rsi
   140022e8b:	push   rdi
   140022e8c:	sub    rsp,0xb0
   140022e93:	mov    rax,QWORD PTR [rip+0x4e1b6]        # 0x140071050
   140022e9a:	xor    rax,rsp
   140022e9d:	mov    QWORD PTR [rsp+0xa0],rax
   140022ea5:	movups xmm0,XMMWORD PTR [r8]
   140022ea9:	mov    rdi,r9
   140022eac:	lea    r8,[rip+0x3ffc1]        # 0x140062e74
   140022eb3:	mov    r9d,DWORD PTR [r9+0x18]
   140022eb7:	mov    rsi,rdx
   140022eba:	lea    rdx,[rsp+0x50]
   140022ebf:	mov    rbx,rcx
   140022ec2:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140022ec8:	call   0x14000fa64
   140022ecd:	mov    r9d,DWORD PTR [rsp+0xf8]
   140022ed5:	lea    rcx,[rsp+0x60]
   140022eda:	mov    r8,rax
   140022edd:	mov    edx,0x40
   140022ee2:	call   0x14000469c
   140022ee7:	movsxd rdx,eax
   140022eea:	lea    r8,[rsp+0x40]
   140022eef:	mov    QWORD PTR [rsp+0x30],rdx
   140022ef4:	lea    rax,[rsp+0x60]
   140022ef9:	mov    dl,BYTE PTR [rsp+0xf0]
   140022f00:	mov    r9,rdi
   140022f03:	mov    QWORD PTR [rsp+0x28],rax
   140022f08:	mov    rcx,rbx
   140022f0b:	mov    BYTE PTR [rsp+0x20],dl
   140022f0f:	mov    rdx,rsi
   140022f12:	call   0x140022478
   140022f17:	mov    rax,rsi
   140022f1a:	mov    rcx,QWORD PTR [rsp+0xa0]
   140022f22:	xor    rcx,rsp
   140022f25:	call   0x140025df0
   140022f2a:	add    rsp,0xb0
   140022f31:	pop    rdi
   140022f32:	pop    rsi
   140022f33:	pop    rbx
   140022f34:	ret    
   140022f35:	int3   
   140022f36:	int3   
   140022f37:	int3   
   140022f38:	mov    rax,rsp
   140022f3b:	push   rbp
   140022f3c:	push   rbx
   140022f3d:	push   rsi
   140022f3e:	push   rdi
   140022f3f:	push   r12
   140022f41:	push   r13
   140022f43:	push   r14
   140022f45:	push   r15
   140022f47:	lea    rbp,[rax-0x4f]
   140022f4b:	sub    rsp,0xa8
   140022f52:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   140022f5a:	movaps XMMWORD PTR [rax-0x58],xmm6
   140022f5e:	mov    rax,QWORD PTR [rip+0x4e0eb]        # 0x140071050
   140022f65:	xor    rax,rsp
   140022f68:	mov    QWORD PTR [rbp-0x11],rax
   140022f6c:	mov    r14,r9
   140022f6f:	mov    r13,r8
   140022f72:	mov    r15,rdx
   140022f75:	mov    r12,rcx
   140022f78:	mov    QWORD PTR [rbp-0x21],0xf
   140022f80:	xor    eax,eax
   140022f82:	mov    QWORD PTR [rbp-0x29],rax
   140022f86:	mov    BYTE PTR [rbp-0x39],al
   140022f89:	mov    ecx,DWORD PTR [r9+0x18]
   140022f8d:	and    ecx,0x3000
   140022f93:	mov    rsi,QWORD PTR [r9+0x20]
   140022f97:	mov    edx,0x2000
   140022f9c:	test   rsi,rsi
   140022f9f:	jg     0x140022fa8
   140022fa1:	cmp    ecx,edx
   140022fa3:	je     0x140022fa8
   140022fa5:	lea    esi,[rax+0x6]
   140022fa8:	mov    rbx,rsi
   140022fab:	movsd  xmm6,QWORD PTR [rbp+0x7f]
   140022fb0:	cmp    ecx,edx
   140022fb2:	jne    0x140022ffb
   140022fb4:	movaps xmm0,xmm6
   140022fb7:	call   0x14003244c
   140022fbc:	comisd xmm0,QWORD PTR [rip+0x4151c]        # 0x1400644e0
   140022fc4:	jbe    0x140022ff7
   140022fc6:	lea    rdx,[rbp-0x59]
   140022fca:	movaps xmm0,xmm6
   140022fcd:	call   0x1400304cc
   140022fd2:	mov    ecx,DWORD PTR [rbp-0x59]
   140022fd5:	call   0x140032444
   140022fda:	imul   ecx,eax,0x7597
   140022fe0:	mov    eax,0x14f8b589
   140022fe5:	imul   ecx
   140022fe7:	sar    edx,0xd
   140022fea:	mov    eax,edx
   140022fec:	shr    eax,0x1f
   140022fef:	add    edx,eax
   140022ff1:	movsxd rbx,edx
   140022ff4:	add    rbx,rsi
   140022ff7:	mov    rax,QWORD PTR [rbp-0x29]
   140022ffb:	lea    rdx,[rbx+0x32]
   140022fff:	cmp    rdx,rax
   140023002:	ja     0x14002301c
   140023004:	mov    QWORD PTR [rbp-0x29],rdx
   140023008:	lea    rax,[rbp-0x39]
   14002300c:	cmp    QWORD PTR [rbp-0x21],0x10
   140023011:	cmovae rax,QWORD PTR [rbp-0x39]
   140023016:	mov    BYTE PTR [rax+rdx*1],0x0
   14002301a:	jmp    0x14002302b
   14002301c:	sub    rdx,rax
   14002301f:	xor    r8d,r8d
   140023022:	lea    rcx,[rbp-0x39]
   140023026:	call   0x14000c434
   14002302b:	mov    rbx,QWORD PTR [rbp-0x29]
   14002302f:	lea    rdi,[rbp-0x39]
   140023033:	cmp    QWORD PTR [rbp-0x21],0x10
   140023038:	cmovae rdi,QWORD PTR [rbp-0x39]
   14002303d:	mov    r9d,DWORD PTR [r14+0x18]
   140023041:	xor    r8d,r8d
   140023044:	lea    rdx,[rbp-0x19]
   140023048:	mov    rcx,r12
   14002304b:	call   0x14000ff18
   140023050:	mov    r8,rax
   140023053:	movsd  QWORD PTR [rsp+0x20],xmm6
   140023059:	mov    r9d,esi
   14002305c:	mov    rdx,rbx
   14002305f:	mov    rcx,rdi
   140023062:	call   0x14000469c
   140023067:	movups xmm0,XMMWORD PTR [r13+0x0]
   14002306c:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   140023071:	lea    rdx,[rbp-0x39]
   140023075:	cmp    QWORD PTR [rbp-0x21],0x10
   14002307a:	cmovae rdx,QWORD PTR [rbp-0x39]
   14002307f:	cdqe   
   140023081:	mov    QWORD PTR [rsp+0x30],rax
   140023086:	mov    QWORD PTR [rsp+0x28],rdx
   14002308b:	mov    al,BYTE PTR [rbp+0x77]
   14002308e:	mov    BYTE PTR [rsp+0x20],al
   140023092:	mov    r9,r14
   140023095:	lea    r8,[rbp-0x49]
   140023099:	mov    rdx,r15
   14002309c:	mov    rcx,r12
   14002309f:	call   0x140021c84
   1400230a4:	nop
   1400230a5:	mov    rdx,QWORD PTR [rbp-0x21]
   1400230a9:	cmp    rdx,0x10
   1400230ad:	jb     0x1400230c1
   1400230af:	inc    rdx
   1400230b2:	mov    r8d,0x1
   1400230b8:	mov    rcx,QWORD PTR [rbp-0x39]
   1400230bc:	call   0x140004804
   1400230c1:	mov    rax,r15
   1400230c4:	mov    rcx,QWORD PTR [rbp-0x11]
   1400230c8:	xor    rcx,rsp
   1400230cb:	call   0x140025df0
   1400230d0:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   1400230d8:	add    rsp,0xa8
   1400230df:	pop    r15
   1400230e1:	pop    r14
   1400230e3:	pop    r13
   1400230e5:	pop    r12
   1400230e7:	pop    rdi
   1400230e8:	pop    rsi
   1400230e9:	pop    rbx
   1400230ea:	pop    rbp
   1400230eb:	ret    
   1400230ec:	mov    rax,rsp
   1400230ef:	push   rbp
   1400230f0:	push   rbx
   1400230f1:	push   rsi
   1400230f2:	push   rdi
   1400230f3:	push   r12
   1400230f5:	push   r13
   1400230f7:	push   r14
   1400230f9:	push   r15
   1400230fb:	lea    rbp,[rax-0x4f]
   1400230ff:	sub    rsp,0xa8
   140023106:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14002310e:	movaps XMMWORD PTR [rax-0x58],xmm6
   140023112:	mov    rax,QWORD PTR [rip+0x4df37]        # 0x140071050
   140023119:	xor    rax,rsp
   14002311c:	mov    QWORD PTR [rbp-0x11],rax
   140023120:	mov    r14,r9
   140023123:	mov    r13,r8
   140023126:	mov    r15,rdx
   140023129:	mov    r12,rcx
   14002312c:	mov    QWORD PTR [rbp-0x21],0xf
   140023134:	xor    eax,eax
   140023136:	mov    QWORD PTR [rbp-0x29],rax
   14002313a:	mov    BYTE PTR [rbp-0x39],al
   14002313d:	mov    ecx,DWORD PTR [r9+0x18]
   140023141:	and    ecx,0x3000
   140023147:	mov    rsi,QWORD PTR [r9+0x20]
   14002314b:	mov    edx,0x2000
   140023150:	test   rsi,rsi
   140023153:	jg     0x14002315c
   140023155:	cmp    ecx,edx
   140023157:	je     0x14002315c
   140023159:	lea    esi,[rax+0x6]
   14002315c:	mov    rbx,rsi
   14002315f:	movsd  xmm6,QWORD PTR [rbp+0x7f]
   140023164:	cmp    ecx,edx
   140023166:	jne    0x1400231af
   140023168:	movaps xmm0,xmm6
   14002316b:	call   0x14003244c
   140023170:	comisd xmm0,QWORD PTR [rip+0x41368]        # 0x1400644e0
   140023178:	jbe    0x1400231ab
   14002317a:	lea    rdx,[rbp-0x59]
   14002317e:	movaps xmm0,xmm6
   140023181:	call   0x1400304cc
   140023186:	mov    ecx,DWORD PTR [rbp-0x59]
   140023189:	call   0x140032444
   14002318e:	imul   ecx,eax,0x7597
   140023194:	mov    eax,0x14f8b589
   140023199:	imul   ecx
   14002319b:	sar    edx,0xd
   14002319e:	mov    eax,edx
   1400231a0:	shr    eax,0x1f
   1400231a3:	add    edx,eax
   1400231a5:	movsxd rbx,edx
   1400231a8:	add    rbx,rsi
   1400231ab:	mov    rax,QWORD PTR [rbp-0x29]
   1400231af:	lea    rdx,[rbx+0x32]
   1400231b3:	cmp    rdx,rax
   1400231b6:	ja     0x1400231d0
   1400231b8:	mov    QWORD PTR [rbp-0x29],rdx
   1400231bc:	lea    rax,[rbp-0x39]
   1400231c0:	cmp    QWORD PTR [rbp-0x21],0x10
   1400231c5:	cmovae rax,QWORD PTR [rbp-0x39]
   1400231ca:	mov    BYTE PTR [rax+rdx*1],0x0
   1400231ce:	jmp    0x1400231df
   1400231d0:	sub    rdx,rax
   1400231d3:	xor    r8d,r8d
   1400231d6:	lea    rcx,[rbp-0x39]
   1400231da:	call   0x14000c434
   1400231df:	mov    rbx,QWORD PTR [rbp-0x29]
   1400231e3:	lea    rdi,[rbp-0x39]
   1400231e7:	cmp    QWORD PTR [rbp-0x21],0x10
   1400231ec:	cmovae rdi,QWORD PTR [rbp-0x39]
   1400231f1:	mov    r9d,DWORD PTR [r14+0x18]
   1400231f5:	mov    r8b,0x4c
   1400231f8:	lea    rdx,[rbp-0x19]
   1400231fc:	mov    rcx,r12
   1400231ff:	call   0x14000ff18
   140023204:	mov    r8,rax
   140023207:	movsd  QWORD PTR [rsp+0x20],xmm6
   14002320d:	mov    r9d,esi
   140023210:	mov    rdx,rbx
   140023213:	mov    rcx,rdi
   140023216:	call   0x14000469c
   14002321b:	movups xmm0,XMMWORD PTR [r13+0x0]
   140023220:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   140023225:	lea    rdx,[rbp-0x39]
   140023229:	cmp    QWORD PTR [rbp-0x21],0x10
   14002322e:	cmovae rdx,QWORD PTR [rbp-0x39]
   140023233:	cdqe   
   140023235:	mov    QWORD PTR [rsp+0x30],rax
   14002323a:	mov    QWORD PTR [rsp+0x28],rdx
   14002323f:	mov    al,BYTE PTR [rbp+0x77]
   140023242:	mov    BYTE PTR [rsp+0x20],al
   140023246:	mov    r9,r14
   140023249:	lea    r8,[rbp-0x49]
   14002324d:	mov    rdx,r15
   140023250:	mov    rcx,r12
   140023253:	call   0x140021c84
   140023258:	nop
   140023259:	mov    rdx,QWORD PTR [rbp-0x21]
   14002325d:	cmp    rdx,0x10
   140023261:	jb     0x140023275
   140023263:	inc    rdx
   140023266:	mov    r8d,0x1
   14002326c:	mov    rcx,QWORD PTR [rbp-0x39]
   140023270:	call   0x140004804
   140023275:	mov    rax,r15
   140023278:	mov    rcx,QWORD PTR [rbp-0x11]
   14002327c:	xor    rcx,rsp
   14002327f:	call   0x140025df0
   140023284:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14002328c:	add    rsp,0xa8
   140023293:	pop    r15
   140023295:	pop    r14
   140023297:	pop    r13
   140023299:	pop    r12
   14002329b:	pop    rdi
   14002329c:	pop    rsi
   14002329d:	pop    rbx
   14002329e:	pop    rbp
   14002329f:	ret    
   1400232a0:	rex push rbx
   1400232a2:	push   rsi
   1400232a3:	push   rdi
   1400232a4:	sub    rsp,0xa0
   1400232ab:	mov    rax,QWORD PTR [rip+0x4dd9e]        # 0x140071050
   1400232b2:	xor    rax,rsp
   1400232b5:	mov    QWORD PTR [rsp+0x90],rax
   1400232bd:	movups xmm0,XMMWORD PTR [r8]
   1400232c1:	mov    rdi,r9
   1400232c4:	lea    r8,[rip+0x3fb9d]        # 0x140062e68
   1400232cb:	mov    r9,QWORD PTR [rsp+0xe8]
   1400232d3:	mov    rsi,rdx
   1400232d6:	mov    rbx,rcx
   1400232d9:	mov    edx,0x40
   1400232de:	lea    rcx,[rsp+0x50]
   1400232e3:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   1400232e9:	call   0x14000469c
   1400232ee:	movsxd rdx,eax
   1400232f1:	lea    r8,[rsp+0x40]
   1400232f6:	mov    QWORD PTR [rsp+0x30],rdx
   1400232fb:	lea    rax,[rsp+0x50]
   140023300:	mov    dl,BYTE PTR [rsp+0xe0]
   140023307:	mov    r9,rdi
   14002330a:	mov    QWORD PTR [rsp+0x28],rax
   14002330f:	mov    rcx,rbx
   140023312:	mov    BYTE PTR [rsp+0x20],dl
   140023316:	mov    rdx,rsi
   140023319:	call   0x140022478
   14002331e:	mov    rax,rsi
   140023321:	mov    rcx,QWORD PTR [rsp+0x90]
   140023329:	xor    rcx,rsp
   14002332c:	call   0x140025df0
   140023331:	add    rsp,0xa0
   140023338:	pop    rdi
   140023339:	pop    rsi
   14002333a:	pop    rbx
   14002333b:	ret    
   14002333c:	rex push rbx
   14002333e:	push   rsi
   14002333f:	push   rdi
   140023340:	sub    rsp,0xb0
   140023347:	mov    rax,QWORD PTR [rip+0x4dd02]        # 0x140071050
   14002334e:	xor    rax,rsp
   140023351:	mov    QWORD PTR [rsp+0xa0],rax
   140023359:	movups xmm0,XMMWORD PTR [r8]
   14002335d:	mov    rdi,r9
   140023360:	lea    r8,[rip+0x3fb09]        # 0x140062e70
   140023367:	mov    r9d,DWORD PTR [r9+0x18]
   14002336b:	mov    rsi,rdx
   14002336e:	lea    rdx,[rsp+0x50]
   140023373:	mov    rbx,rcx
   140023376:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14002337c:	call   0x14000fa64
   140023381:	mov    r9,QWORD PTR [rsp+0xf8]
   140023389:	lea    rcx,[rsp+0x60]
   14002338e:	mov    r8,rax
   140023391:	mov    edx,0x40
   140023396:	call   0x14000469c
   14002339b:	movsxd rdx,eax
   14002339e:	lea    r8,[rsp+0x40]
   1400233a3:	mov    QWORD PTR [rsp+0x30],rdx
   1400233a8:	lea    rax,[rsp+0x60]
   1400233ad:	mov    dl,BYTE PTR [rsp+0xf0]
   1400233b4:	mov    r9,rdi
   1400233b7:	mov    QWORD PTR [rsp+0x28],rax
   1400233bc:	mov    rcx,rbx
   1400233bf:	mov    BYTE PTR [rsp+0x20],dl
   1400233c3:	mov    rdx,rsi
   1400233c6:	call   0x140022478
   1400233cb:	mov    rax,rsi
   1400233ce:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400233d6:	xor    rcx,rsp
   1400233d9:	call   0x140025df0
   1400233de:	add    rsp,0xb0
   1400233e5:	pop    rdi
   1400233e6:	pop    rsi
   1400233e7:	pop    rbx
   1400233e8:	ret    
   1400233e9:	int3   
   1400233ea:	int3   
   1400233eb:	int3   
   1400233ec:	rex push rbx
   1400233ee:	push   rsi
   1400233ef:	push   rdi
   1400233f0:	sub    rsp,0xb0
   1400233f7:	mov    rax,QWORD PTR [rip+0x4dc52]        # 0x140071050
   1400233fe:	xor    rax,rsp
   140023401:	mov    QWORD PTR [rsp+0xa0],rax
   140023409:	movups xmm0,XMMWORD PTR [r8]
   14002340d:	mov    rdi,r9
   140023410:	lea    r8,[rip+0x3fa55]        # 0x140062e6c
   140023417:	mov    r9d,DWORD PTR [r9+0x18]
   14002341b:	mov    rsi,rdx
   14002341e:	lea    rdx,[rsp+0x50]
   140023423:	mov    rbx,rcx
   140023426:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14002342c:	call   0x14000fa64
   140023431:	mov    r9,QWORD PTR [rsp+0xf8]
   140023439:	lea    rcx,[rsp+0x60]
   14002343e:	mov    r8,rax
   140023441:	mov    edx,0x40
   140023446:	call   0x14000469c
   14002344b:	movsxd rdx,eax
   14002344e:	lea    r8,[rsp+0x40]
   140023453:	mov    QWORD PTR [rsp+0x30],rdx
   140023458:	lea    rax,[rsp+0x60]
   14002345d:	mov    dl,BYTE PTR [rsp+0xf0]
   140023464:	mov    r9,rdi
   140023467:	mov    QWORD PTR [rsp+0x28],rax
   14002346c:	mov    rcx,rbx
   14002346f:	mov    BYTE PTR [rsp+0x20],dl
   140023473:	mov    rdx,rsi
   140023476:	call   0x140022478
   14002347b:	mov    rax,rsi
   14002347e:	mov    rcx,QWORD PTR [rsp+0xa0]
   140023486:	xor    rcx,rsp
   140023489:	call   0x140025df0
   14002348e:	add    rsp,0xb0
   140023495:	pop    rdi
   140023496:	pop    rsi
   140023497:	pop    rbx
   140023498:	ret    
   140023499:	int3   
   14002349a:	int3   
   14002349b:	int3   
   14002349c:	rex push rbp
   14002349e:	push   rbx
   14002349f:	push   rsi
   1400234a0:	push   rdi
   1400234a1:	push   r12
   1400234a3:	push   r14
   1400234a5:	push   r15
   1400234a7:	lea    rbp,[rsp-0x17]
   1400234ac:	sub    rsp,0x90
   1400234b3:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   1400234bb:	mov    rax,QWORD PTR [rip+0x4db8e]        # 0x140071050
   1400234c2:	xor    rax,rsp
   1400234c5:	mov    QWORD PTR [rbp+0xf],rax
   1400234c9:	mov    rdi,r9
   1400234cc:	mov    r15,r8
   1400234cf:	mov    rsi,rdx
   1400234d2:	mov    r14,rcx
   1400234d5:	mov    r12b,BYTE PTR [rbp+0x77]
   1400234d9:	test   DWORD PTR [r9+0x18],0x4000
   1400234e1:	jne    0x14002350c
   1400234e3:	movups xmm0,XMMWORD PTR [r8]
   1400234e7:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   1400234ec:	mov    r10,QWORD PTR [rcx]
   1400234ef:	movzx  edx,BYTE PTR [rbp+0x7f]
   1400234f3:	mov    DWORD PTR [rsp+0x28],edx
   1400234f7:	mov    BYTE PTR [rsp+0x20],r12b
   1400234fc:	lea    r8,[rbp-0x49]
   140023500:	mov    rdx,rsi
   140023503:	call   QWORD PTR [r10+0x48]
   140023507:	jmp    0x140023664
   14002350c:	lea    rdx,[rbp-0x49]
   140023510:	mov    rcx,rdi
   140023513:	call   0x140005600
   140023518:	nop
   140023519:	mov    rcx,rax
   14002351c:	call   0x140020e80
   140023521:	mov    rbx,rax
   140023524:	mov    rcx,QWORD PTR [rbp-0x41]
   140023528:	test   rcx,rcx
   14002352b:	je     0x140023547
   14002352d:	mov    rdx,QWORD PTR [rcx]
   140023530:	call   QWORD PTR [rdx+0x10]
   140023533:	test   rax,rax
   140023536:	je     0x140023547
   140023538:	mov    r8,QWORD PTR [rax]
   14002353b:	mov    edx,0x1
   140023540:	mov    rcx,rax
   140023543:	call   QWORD PTR [r8]
   140023546:	nop
   140023547:	mov    QWORD PTR [rbp-0x19],0xf
   14002354f:	and    QWORD PTR [rbp-0x21],0x0
   140023554:	mov    BYTE PTR [rbp-0x31],0x0
   140023558:	lea    rdx,[rbp-0x11]
   14002355c:	mov    rcx,rbx
   14002355f:	cmp    BYTE PTR [rbp+0x7f],0x0
   140023563:	je     0x14002356c
   140023565:	call   0x14000f614
   14002356a:	jmp    0x140023571
   14002356c:	call   0x14000f634
   140023571:	mov    rdx,rax
   140023574:	lea    rcx,[rbp-0x31]
   140023578:	call   0x140022bc4
   14002357d:	mov    rdx,QWORD PTR [rbp+0x7]
   140023581:	cmp    rdx,0x10
   140023585:	jb     0x140023599
   140023587:	mov    r8d,0x1
   14002358d:	inc    rdx
   140023590:	mov    rcx,QWORD PTR [rbp-0x11]
   140023594:	call   0x140004804
   140023599:	mov    rbx,QWORD PTR [rdi+0x28]
   14002359d:	mov    rcx,QWORD PTR [rbp-0x21]
   1400235a1:	test   rbx,rbx
   1400235a4:	jle    0x1400235b0
   1400235a6:	cmp    rbx,rcx
   1400235a9:	jbe    0x1400235b0
   1400235ab:	sub    rbx,rcx
   1400235ae:	jmp    0x1400235b2
   1400235b0:	xor    ebx,ebx
   1400235b2:	mov    eax,DWORD PTR [rdi+0x18]
   1400235b5:	and    eax,0x1c0
   1400235ba:	cmp    eax,0x40
   1400235bd:	je     0x1400235ee
   1400235bf:	movups xmm0,XMMWORD PTR [r15]
   1400235c3:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   1400235c8:	mov    QWORD PTR [rsp+0x20],rbx
   1400235cd:	mov    r9b,r12b
   1400235d0:	lea    r8,[rbp-0x49]
   1400235d4:	lea    rdx,[rbp-0x11]
   1400235d8:	mov    rcx,r14
   1400235db:	call   0x14002290c
   1400235e0:	movups xmm0,XMMWORD PTR [rax]
   1400235e3:	movdqu XMMWORD PTR [r15],xmm0
   1400235e8:	xor    ebx,ebx
   1400235ea:	mov    rcx,QWORD PTR [rbp-0x21]
   1400235ee:	movups xmm0,XMMWORD PTR [r15]
   1400235f2:	movdqu XMMWORD PTR [rbp-0x49],xmm0
   1400235f7:	lea    r9,[rbp-0x31]
   1400235fb:	cmp    QWORD PTR [rbp-0x19],0x10
   140023600:	cmovae r9,QWORD PTR [rbp-0x31]
   140023605:	mov    QWORD PTR [rsp+0x20],rcx
   14002360a:	lea    r8,[rbp-0x49]
   14002360e:	lea    rdx,[rbp-0x11]
   140023612:	mov    rcx,r14
   140023615:	call   0x140022868
   14002361a:	movups xmm0,XMMWORD PTR [rax]
   14002361d:	movdqu XMMWORD PTR [r15],xmm0
   140023622:	and    QWORD PTR [rdi+0x28],0x0
   140023627:	movups xmm1,XMMWORD PTR [r15]
   14002362b:	movdqu XMMWORD PTR [rbp-0x49],xmm1
   140023630:	mov    QWORD PTR [rsp+0x20],rbx
   140023635:	mov    r9b,r12b
   140023638:	lea    r8,[rbp-0x49]
   14002363c:	mov    rdx,rsi
   14002363f:	mov    rcx,r14
   140023642:	call   0x14002290c
   140023647:	nop
   140023648:	mov    rdx,QWORD PTR [rbp-0x19]
   14002364c:	cmp    rdx,0x10
   140023650:	jb     0x140023664
   140023652:	inc    rdx
   140023655:	mov    r8d,0x1
   14002365b:	mov    rcx,QWORD PTR [rbp-0x31]
   14002365f:	call   0x140004804
   140023664:	mov    rax,rsi
   140023667:	mov    rcx,QWORD PTR [rbp+0xf]
   14002366b:	xor    rcx,rsp
   14002366e:	call   0x140025df0
   140023673:	add    rsp,0x90
   14002367a:	pop    r15
   14002367c:	pop    r14
   14002367e:	pop    r12
   140023680:	pop    rdi
   140023681:	pop    rsi
   140023682:	pop    rbx
   140023683:	pop    rbp
   140023684:	ret    
   140023685:	int3   
   140023686:	int3   
   140023687:	int3   
   140023688:	mov    al,BYTE PTR [rcx+0x19]
   14002368b:	ret    
   14002368c:	movzx  eax,dl
   14002368f:	lea    rdx,[rcx+0x10]
   140023693:	mov    ecx,eax
   140023695:	jmp    0x140027da0
   14002369a:	int3   
   14002369b:	int3   
   14002369c:	mov    QWORD PTR [rsp+0x8],rbx
   1400236a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400236a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400236ab:	push   rdi
   1400236ac:	sub    rsp,0x20
   1400236b0:	xor    edi,edi
   1400236b2:	mov    rsi,r8
   1400236b5:	sub    rsi,rdx
   1400236b8:	mov    rbx,rdx
   1400236bb:	cmp    rdx,r8
   1400236be:	cmova  rsi,rdi
   1400236c2:	test   rsi,rsi
   1400236c5:	je     0x1400236e3
   1400236c7:	lea    rbp,[rcx+0x10]
   1400236cb:	movzx  ecx,BYTE PTR [rbx]
   1400236ce:	mov    rdx,rbp
   1400236d1:	call   0x140027da0
   1400236d6:	mov    BYTE PTR [rbx],al
   1400236d8:	inc    rdi
   1400236db:	inc    rbx
   1400236de:	cmp    rdi,rsi
   1400236e1:	jne    0x1400236cb
   1400236e3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400236e8:	mov    rax,rbx
   1400236eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400236f0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400236f5:	add    rsp,0x20
   1400236f9:	pop    rdi
   1400236fa:	ret    
   1400236fb:	int3   
   1400236fc:	movzx  eax,dl
   1400236ff:	lea    rdx,[rcx+0x10]
   140023703:	mov    ecx,eax
   140023705:	jmp    0x140028068
   14002370a:	int3   
   14002370b:	int3   
   14002370c:	mov    QWORD PTR [rsp+0x8],rbx
   140023711:	mov    QWORD PTR [rsp+0x10],rbp
   140023716:	mov    QWORD PTR [rsp+0x18],rsi
   14002371b:	push   rdi
   14002371c:	sub    rsp,0x20
   140023720:	xor    edi,edi
   140023722:	mov    rsi,r8
   140023725:	sub    rsi,rdx
   140023728:	mov    rbx,rdx
   14002372b:	cmp    rdx,r8
   14002372e:	cmova  rsi,rdi
   140023732:	test   rsi,rsi
   140023735:	je     0x140023753
   140023737:	lea    rbp,[rcx+0x10]
   14002373b:	movzx  ecx,BYTE PTR [rbx]
   14002373e:	mov    rdx,rbp
   140023741:	call   0x140028068
   140023746:	mov    BYTE PTR [rbx],al
   140023748:	inc    rdi
   14002374b:	inc    rbx
   14002374e:	cmp    rdi,rsi
   140023751:	jne    0x14002373b
   140023753:	mov    rbp,QWORD PTR [rsp+0x38]
   140023758:	mov    rax,rbx
   14002375b:	mov    rbx,QWORD PTR [rsp+0x30]
   140023760:	mov    rsi,QWORD PTR [rsp+0x40]
   140023765:	add    rsp,0x20
   140023769:	pop    rdi
   14002376a:	ret    
   14002376b:	int3   
   14002376c:	mov    QWORD PTR [rsp+0x8],rbx
   140023771:	push   rdi
   140023772:	sub    rsp,0x30
   140023776:	mov    rdi,QWORD PTR [rcx+0x28]
   14002377a:	xor    eax,eax
   14002377c:	mov    QWORD PTR [rdx+0x18],0xf
   140023784:	mov    rbx,rdx
   140023787:	mov    QWORD PTR [rdx+0x10],rax
   14002378b:	mov    BYTE PTR [rdx],al
   14002378d:	mov    DWORD PTR [rsp+0x20],eax
   140023791:	cmp    BYTE PTR [rdi],al
   140023793:	je     0x14002379d
   140023795:	mov    rcx,rdi
   140023798:	call   0x140031140
   14002379d:	mov    r8,rax
   1400237a0:	mov    rdx,rdi
   1400237a3:	mov    rcx,rbx
   1400237a6:	call   0x14000b994
   1400237ab:	mov    rax,rbx
   1400237ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400237b3:	add    rsp,0x30
   1400237b7:	pop    rdi
   1400237b8:	ret    
   1400237b9:	int3   
   1400237ba:	int3   
   1400237bb:	int3   
   1400237bc:	rex push rbx
   1400237be:	sub    rsp,0x20
   1400237c2:	mov    rbx,r8
   1400237c5:	mov    rcx,r9
   1400237c8:	sub    r8,rdx
   1400237cb:	call   0x140028fd0
   1400237d0:	mov    rax,rbx
   1400237d3:	add    rsp,0x20
   1400237d7:	pop    rbx
   1400237d8:	ret    
   1400237d9:	int3   
   1400237da:	int3   
   1400237db:	int3   
   1400237dc:	rex push rbx
   1400237de:	sub    rsp,0x40
   1400237e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400237eb:	mov    rbx,rcx
   1400237ee:	mov    rax,QWORD PTR [rcx]
   1400237f1:	movsxd rdx,DWORD PTR [rax+0x4]
   1400237f5:	cmp    QWORD PTR [rdx+rcx*1+0x48],0x0
   1400237fb:	je     0x140023884
   140023801:	mov    rdx,rcx
   140023804:	lea    rcx,[rsp+0x28]
   140023809:	call   0x140021328
   14002380e:	nop
   14002380f:	cmp    BYTE PTR [rsp+0x30],0x0
   140023814:	je     0x140023853
   140023816:	mov    rax,QWORD PTR [rbx]
   140023819:	movsxd rcx,DWORD PTR [rax+0x4]
   14002381d:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   140023822:	mov    rax,QWORD PTR [rcx]
   140023825:	call   QWORD PTR [rax+0x68]
   140023828:	cmp    eax,0xffffffff
   14002382b:	jne    0x140023853
   14002382d:	mov    rax,QWORD PTR [rbx]
   140023830:	movsxd rcx,DWORD PTR [rax+0x4]
   140023834:	add    rcx,rbx
   140023837:	mov    edx,DWORD PTR [rcx+0x10]
   14002383a:	mov    eax,edx
   14002383c:	or     eax,0x4
   14002383f:	cmp    QWORD PTR [rcx+0x48],0x0
   140023844:	cmove  edx,eax
   140023847:	or     edx,0x4
   14002384a:	xor    r8d,r8d
   14002384d:	call   0x1400054f8
   140023852:	nop
   140023853:	call   0x140027894
   140023858:	test   al,al
   14002385a:	jne    0x140023867
   14002385c:	mov    rcx,QWORD PTR [rsp+0x28]
   140023861:	call   0x140022804
   140023866:	nop
   140023867:	mov    rdx,QWORD PTR [rsp+0x28]
   14002386c:	mov    rax,QWORD PTR [rdx]
   14002386f:	movsxd rcx,DWORD PTR [rax+0x4]
   140023873:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140023878:	test   rcx,rcx
   14002387b:	je     0x140023884
   14002387d:	mov    rax,QWORD PTR [rcx]
   140023880:	call   QWORD PTR [rax+0x10]
   140023883:	nop
   140023884:	mov    rax,rbx
   140023887:	add    rsp,0x40
   14002388b:	pop    rbx
   14002388c:	ret    
   14002388d:	int3   
   14002388e:	int3   
   14002388f:	int3   
   140023890:	rex push rdi
   140023892:	sub    rsp,0x40
   140023896:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002389f:	mov    QWORD PTR [rsp+0x50],rbx
   1400238a4:	mov    QWORD PTR [rsp+0x58],rsi
   1400238a9:	mov    sil,r8b
   1400238ac:	mov    rbx,rdx
   1400238af:	mov    rdi,rcx
   1400238b2:	call   0x140005630
   1400238b7:	mov    QWORD PTR [rdi+0x48],rbx
   1400238bb:	and    QWORD PTR [rdi+0x50],0x0
   1400238c0:	lea    rdx,[rsp+0x28]
   1400238c5:	mov    rcx,rdi
   1400238c8:	call   0x140005600
   1400238cd:	nop
   1400238ce:	mov    rcx,rax
   1400238d1:	call   0x140020c18
   1400238d6:	mov    rbx,rax
   1400238d9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400238de:	test   rcx,rcx
   1400238e1:	je     0x1400238fd
   1400238e3:	mov    rdx,QWORD PTR [rcx]
   1400238e6:	call   QWORD PTR [rdx+0x10]
   1400238e9:	test   rax,rax
   1400238ec:	je     0x1400238fd
   1400238ee:	mov    r8,QWORD PTR [rax]
   1400238f1:	mov    edx,0x1
   1400238f6:	mov    rcx,rax
   1400238f9:	call   QWORD PTR [r8]
   1400238fc:	nop
   1400238fd:	mov    rax,QWORD PTR [rbx]
   140023900:	mov    dl,0x20
   140023902:	mov    rcx,rbx
   140023905:	call   QWORD PTR [rax+0x40]
   140023908:	mov    BYTE PTR [rdi+0x58],al
   14002390b:	cmp    QWORD PTR [rdi+0x48],0x0
   140023910:	jne    0x140023923
   140023912:	mov    edx,DWORD PTR [rdi+0x10]
   140023915:	or     edx,0x4
   140023918:	xor    r8d,r8d
   14002391b:	mov    rcx,rdi
   14002391e:	call   0x1400054f8
   140023923:	test   sil,sil
   140023926:	je     0x140023930
   140023928:	mov    rcx,rdi
   14002392b:	call   0x140027a9c
   140023930:	mov    rbx,QWORD PTR [rsp+0x50]
   140023935:	mov    rsi,QWORD PTR [rsp+0x58]
   14002393a:	add    rsp,0x40
   14002393e:	pop    rdi
   14002393f:	ret    
   140023940:	mov    rax,rsp
   140023943:	mov    QWORD PTR [rax+0x8],rbx
   140023947:	mov    QWORD PTR [rax+0x10],rbp
   14002394b:	mov    QWORD PTR [rax+0x18],rsi
   14002394f:	mov    QWORD PTR [rax+0x20],rdi
   140023953:	push   r14
   140023955:	sub    rsp,0x20
   140023959:	mov    rsi,r8
   14002395c:	mov    r14b,r9b
   14002395f:	mov    r8,QWORD PTR [rcx+0x10]
   140023963:	mov    rbp,rdx
   140023966:	mov    rbx,rcx
   140023969:	cmp    r8,rdx
   14002396c:	jb     0x140023a72
   140023972:	mov    rax,r8
   140023975:	not    rax
   140023978:	cmp    rax,rsi
   14002397b:	jbe    0x140023a7f
   140023981:	lea    rdi,[r8+rsi*1]
   140023985:	test   rsi,rsi
   140023988:	je     0x140023a54
   14002398e:	cmp    rdi,0xfffffffffffffffe
   140023992:	ja     0x140023a8c
   140023998:	cmp    QWORD PTR [rcx+0x18],rdi
   14002399c:	jae    0x1400239a8
   14002399e:	mov    rdx,rdi
   1400239a1:	call   0x14000cc90
   1400239a6:	jmp    0x1400239c3
   1400239a8:	test   rdi,rdi
   1400239ab:	jne    0x1400239cc
   1400239ad:	and    QWORD PTR [rcx+0x10],rdi
   1400239b1:	cmp    QWORD PTR [rcx+0x18],0x10
   1400239b6:	jb     0x1400239bd
   1400239b8:	mov    rax,QWORD PTR [rcx]
   1400239bb:	jmp    0x1400239c0
   1400239bd:	mov    rax,rbx
   1400239c0:	mov    BYTE PTR [rax],0x0
   1400239c3:	test   rdi,rdi
   1400239c6:	je     0x140023a54
   1400239cc:	cmp    QWORD PTR [rbx+0x18],0x10
   1400239d1:	jb     0x1400239d8
   1400239d3:	mov    rcx,QWORD PTR [rbx]
   1400239d6:	jmp    0x1400239db
   1400239d8:	mov    rcx,rbx
   1400239db:	cmp    QWORD PTR [rbx+0x18],0x10
   1400239e0:	jb     0x1400239e7
   1400239e2:	mov    rax,QWORD PTR [rbx]
   1400239e5:	jmp    0x1400239ea
   1400239e7:	mov    rax,rbx
   1400239ea:	mov    r8,QWORD PTR [rbx+0x10]
   1400239ee:	sub    r8,rbp
   1400239f1:	je     0x140023a03
   1400239f3:	lea    rdx,[rcx+rbp*1]
   1400239f7:	lea    rcx,[rax+rbp*1]
   1400239fb:	add    rcx,rsi
   1400239fe:	call   0x140028fd0
   140023a03:	cmp    rsi,0x1
   140023a07:	jne    0x140023a1e
   140023a09:	cmp    QWORD PTR [rbx+0x18],0x10
   140023a0e:	jb     0x140023a15
   140023a10:	mov    rax,QWORD PTR [rbx]
   140023a13:	jmp    0x140023a18
   140023a15:	mov    rax,rbx
   140023a18:	mov    BYTE PTR [rax+rbp*1],r14b
   140023a1c:	jmp    0x140023a3d
   140023a1e:	cmp    QWORD PTR [rbx+0x18],0x10
   140023a23:	jb     0x140023a2a
   140023a25:	mov    rax,QWORD PTR [rbx]
   140023a28:	jmp    0x140023a2d
   140023a2a:	mov    rax,rbx
   140023a2d:	movsx  edx,r14b
   140023a31:	lea    rcx,[rax+rbp*1]
   140023a35:	mov    r8,rsi
   140023a38:	call   0x14002a910
   140023a3d:	cmp    QWORD PTR [rbx+0x18],0x10
   140023a42:	mov    QWORD PTR [rbx+0x10],rdi
   140023a46:	jb     0x140023a4d
   140023a48:	mov    rax,QWORD PTR [rbx]
   140023a4b:	jmp    0x140023a50
   140023a4d:	mov    rax,rbx
   140023a50:	mov    BYTE PTR [rax+rdi*1],0x0
   140023a54:	mov    rbp,QWORD PTR [rsp+0x38]
   140023a59:	mov    rax,rbx
   140023a5c:	mov    rbx,QWORD PTR [rsp+0x30]
   140023a61:	mov    rsi,QWORD PTR [rsp+0x40]
   140023a66:	mov    rdi,QWORD PTR [rsp+0x48]
   140023a6b:	add    rsp,0x20
   140023a6f:	pop    r14
   140023a71:	ret    
   140023a72:	lea    rcx,[rip+0x3f3d7]        # 0x140062e50
   140023a79:	call   0x140027a70
   140023a7e:	int3   
   140023a7f:	lea    rcx,[rip+0x3f3ba]        # 0x140062e40
   140023a86:	call   0x140027a4c
   140023a8b:	int3   
   140023a8c:	lea    rcx,[rip+0x3f3ad]        # 0x140062e40
   140023a93:	call   0x140027a4c
   140023a98:	int3   
   140023a99:	int3   
   140023a9a:	int3   
   140023a9b:	int3   
   140023a9c:	mov    rax,rsp
   140023a9f:	mov    QWORD PTR [rax+0x8],rbx
   140023aa3:	mov    QWORD PTR [rax+0x10],rbp
   140023aa7:	mov    QWORD PTR [rax+0x18],rsi
   140023aab:	mov    QWORD PTR [rax+0x20],rdi
   140023aaf:	push   r13
   140023ab1:	push   r14
   140023ab3:	push   r15
   140023ab5:	sub    rsp,0x20
   140023ab9:	test   BYTE PTR [rcx+0x70],0x2
   140023abd:	mov    ebp,edx
   140023abf:	mov    rbx,rcx
   140023ac2:	je     0x140023acc
   140023ac4:	or     eax,0xffffffff
   140023ac7:	jmp    0x140023ca2
   140023acc:	cmp    ebp,0xffffffff
   140023acf:	jne    0x140023ad8
   140023ad1:	xor    eax,eax
   140023ad3:	jmp    0x140023ca2
   140023ad8:	test   BYTE PTR [rcx+0x70],0x8
   140023adc:	je     0x140023b06
   140023ade:	mov    r8,QWORD PTR [rcx+0x40]
   140023ae2:	cmp    QWORD PTR [r8],0x0
   140023ae6:	je     0x140023b06
   140023ae8:	mov    rdx,QWORD PTR [rcx+0x68]
   140023aec:	cmp    QWORD PTR [r8],rdx
   140023aef:	jae    0x140023b06
   140023af1:	mov    rax,QWORD PTR [rcx+0x58]
   140023af5:	movsxd rcx,DWORD PTR [rax]
   140023af8:	add    rcx,QWORD PTR [r8]
   140023afb:	mov    QWORD PTR [r8],rdx
   140023afe:	sub    ecx,edx
   140023b00:	mov    rax,QWORD PTR [rbx+0x58]
   140023b04:	mov    DWORD PTR [rax],ecx
   140023b06:	mov    rax,QWORD PTR [rbx+0x40]
   140023b0a:	mov    rcx,QWORD PTR [rax]
   140023b0d:	test   rcx,rcx
   140023b10:	je     0x140023b32
   140023b12:	mov    rdx,QWORD PTR [rbx+0x58]
   140023b16:	movsxd r8,DWORD PTR [rdx]
   140023b19:	lea    rax,[rcx+r8*1]
   140023b1d:	cmp    rcx,rax
   140023b20:	jae    0x140023b2d
   140023b22:	lea    eax,[r8-0x1]
   140023b26:	mov    DWORD PTR [rdx],eax
   140023b28:	jmp    0x140023c8f
   140023b2d:	test   rcx,rcx
   140023b30:	jne    0x140023b36
   140023b32:	xor    edi,edi
   140023b34:	jmp    0x140023b47
   140023b36:	mov    rax,QWORD PTR [rbx+0x58]
   140023b3a:	movsxd rdi,DWORD PTR [rax]
   140023b3d:	mov    rax,QWORD PTR [rbx+0x18]
   140023b41:	sub    rdi,QWORD PTR [rax]
   140023b44:	add    rdi,rcx
   140023b47:	mov    rax,rdi
   140023b4a:	mov    ecx,0x20
   140023b4f:	shr    rax,1
   140023b52:	cmp    rax,rcx
   140023b55:	jb     0x140023b5f
   140023b57:	mov    rcx,rax
   140023b5a:	test   rax,rax
   140023b5d:	je     0x140023b71
   140023b5f:	mov    eax,0x7fffffff
   140023b64:	sub    rax,rcx
   140023b67:	cmp    rax,rdi
   140023b6a:	jae    0x140023b71
   140023b6c:	shr    rcx,1
   140023b6f:	jne    0x140023b5f
   140023b71:	test   rcx,rcx
   140023b74:	je     0x140023ac4
   140023b7a:	lea    r15,[rcx+rdi*1]
   140023b7e:	mov    r13d,0x1
   140023b84:	mov    r8b,r13b
   140023b87:	mov    edx,r13d
   140023b8a:	mov    rcx,r15
   140023b8d:	call   0x140004798
   140023b92:	mov    rcx,QWORD PTR [rbx+0x18]
   140023b96:	mov    rsi,rax
   140023b99:	mov    r14,QWORD PTR [rcx]
   140023b9c:	test   rdi,rdi
   140023b9f:	je     0x140023bb4
   140023ba1:	mov    r8,rdi
   140023ba4:	mov    rdx,r14
   140023ba7:	mov    rcx,rax
   140023baa:	call   0x140028fd0
   140023baf:	test   rdi,rdi
   140023bb2:	jne    0x140023bed
   140023bb4:	mov    rax,QWORD PTR [rbx+0x20]
   140023bb8:	mov    QWORD PTR [rbx+0x68],rsi
   140023bbc:	mov    QWORD PTR [rax],rsi
   140023bbf:	mov    rax,QWORD PTR [rbx+0x40]
   140023bc3:	mov    QWORD PTR [rax],rsi
   140023bc6:	mov    rax,QWORD PTR [rbx+0x58]
   140023bca:	mov    DWORD PTR [rax],r15d
   140023bcd:	mov    rax,QWORD PTR [rbx+0x18]
   140023bd1:	test   BYTE PTR [rbx+0x70],0x4
   140023bd5:	mov    QWORD PTR [rax],rsi
   140023bd8:	mov    rax,QWORD PTR [rbx+0x38]
   140023bdc:	jne    0x140023c36
   140023bde:	mov    QWORD PTR [rax],rsi
   140023be1:	mov    rax,QWORD PTR [rbx+0x50]
   140023be5:	mov    DWORD PTR [rax],r13d
   140023be8:	jmp    0x140023c71
   140023bed:	mov    rcx,QWORD PTR [rbx+0x20]
   140023bf1:	mov    rax,rsi
   140023bf4:	sub    rax,r14
   140023bf7:	add    QWORD PTR [rbx+0x68],rax
   140023bfb:	mov    rax,QWORD PTR [rbx+0x40]
   140023bff:	mov    rdx,QWORD PTR [rax]
   140023c02:	mov    rax,rsi
   140023c05:	sub    rax,r14
   140023c08:	sub    rdx,r14
   140023c0b:	add    QWORD PTR [rcx],rax
   140023c0e:	add    rdx,rsi
   140023c11:	mov    rax,QWORD PTR [rbx+0x40]
   140023c15:	mov    ecx,esi
   140023c17:	sub    ecx,edx
   140023c19:	add    ecx,r15d
   140023c1c:	mov    QWORD PTR [rax],rdx
   140023c1f:	mov    rax,QWORD PTR [rbx+0x58]
   140023c23:	mov    DWORD PTR [rax],ecx
   140023c25:	test   BYTE PTR [rbx+0x70],0x4
   140023c29:	je     0x140023c42
   140023c2b:	mov    rax,QWORD PTR [rbx+0x18]
   140023c2f:	mov    QWORD PTR [rax],rsi
   140023c32:	mov    rax,QWORD PTR [rbx+0x38]
   140023c36:	and    QWORD PTR [rax],0x0
   140023c3a:	mov    rax,QWORD PTR [rbx+0x50]
   140023c3e:	mov    DWORD PTR [rax],esi
   140023c40:	jmp    0x140023c71
   140023c42:	mov    rax,QWORD PTR [rbx+0x40]
   140023c46:	mov    r9,QWORD PTR [rax]
   140023c49:	mov    rax,QWORD PTR [rbx+0x38]
   140023c4d:	mov    r8,QWORD PTR [rax]
   140023c50:	mov    rax,QWORD PTR [rbx+0x18]
   140023c54:	sub    r8,r14
   140023c57:	add    r8,rsi
   140023c5a:	sub    r9d,r8d
   140023c5d:	add    r9d,r13d
   140023c60:	mov    QWORD PTR [rax],rsi
   140023c63:	mov    rax,QWORD PTR [rbx+0x38]
   140023c67:	mov    QWORD PTR [rax],r8
   140023c6a:	mov    rax,QWORD PTR [rbx+0x50]
   140023c6e:	mov    DWORD PTR [rax],r9d
   140023c71:	test   BYTE PTR [rbx+0x70],r13b
   140023c75:	je     0x140023c85
   140023c77:	mov    r8,r13
   140023c7a:	mov    rdx,rdi
   140023c7d:	mov    rcx,r14
   140023c80:	call   0x140004804
   140023c85:	mov    rax,QWORD PTR [rbx+0x58]
   140023c89:	or     DWORD PTR [rbx+0x70],r13d
   140023c8d:	dec    DWORD PTR [rax]
   140023c8f:	mov    rcx,QWORD PTR [rbx+0x40]
   140023c93:	mov    rdx,QWORD PTR [rcx]
   140023c96:	lea    rax,[rdx+0x1]
   140023c9a:	mov    QWORD PTR [rcx],rax
   140023c9d:	mov    eax,ebp
   140023c9f:	mov    BYTE PTR [rdx],bpl
   140023ca2:	mov    rbx,QWORD PTR [rsp+0x40]
   140023ca7:	mov    rbp,QWORD PTR [rsp+0x48]
   140023cac:	mov    rsi,QWORD PTR [rsp+0x50]
   140023cb1:	mov    rdi,QWORD PTR [rsp+0x58]
   140023cb6:	add    rsp,0x20
   140023cba:	pop    r15
   140023cbc:	pop    r14
   140023cbe:	pop    r13
   140023cc0:	ret    
   140023cc1:	int3   
   140023cc2:	int3   
   140023cc3:	int3   
   140023cc4:	mov    rax,QWORD PTR [rcx+0x38]
   140023cc8:	mov    r8,QWORD PTR [rax]
   140023ccb:	test   r8,r8
   140023cce:	je     0x140023d0c
   140023cd0:	mov    rax,QWORD PTR [rcx+0x18]
   140023cd4:	cmp    r8,QWORD PTR [rax]
   140023cd7:	jbe    0x140023d0c
   140023cd9:	cmp    edx,0xffffffff
   140023cdc:	je     0x140023cea
   140023cde:	cmp    dl,BYTE PTR [r8-0x1]
   140023ce2:	je     0x140023cea
   140023ce4:	test   BYTE PTR [rcx+0x70],0x2
   140023ce8:	jne    0x140023d0c
   140023cea:	mov    rax,QWORD PTR [rcx+0x50]
   140023cee:	inc    DWORD PTR [rax]
   140023cf0:	mov    rax,QWORD PTR [rcx+0x38]
   140023cf4:	dec    QWORD PTR [rax]
   140023cf7:	cmp    edx,0xffffffff
   140023cfa:	je     0x140023d07
   140023cfc:	mov    rax,QWORD PTR [rcx+0x38]
   140023d00:	mov    rcx,QWORD PTR [rax]
   140023d03:	mov    BYTE PTR [rcx],dl
   140023d05:	jmp    0x140023d09
   140023d07:	xor    edx,edx
   140023d09:	mov    eax,edx
   140023d0b:	ret    
   140023d0c:	or     eax,0xffffffff
   140023d0f:	ret    
   140023d10:	mov    rax,rsp
   140023d13:	push   rbp
   140023d14:	lea    rbp,[rax-0x48]
   140023d18:	sub    rsp,0x140
   140023d1f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023d28:	mov    QWORD PTR [rax+0x8],rbx
   140023d2c:	mov    rax,QWORD PTR [rip+0x4d31d]        # 0x140071050
   140023d33:	xor    rax,rsp
   140023d36:	mov    QWORD PTR [rbp+0x30],rax
   140023d3a:	mov    edx,DWORD PTR [rcx+0x10]
   140023d3d:	test   edx,edx
   140023d3f:	je     0x140023e41
   140023d45:	cmp    edx,0x1
   140023d48:	je     0x140023e3a
   140023d4e:	mov    edx,0x2
   140023d53:	lea    r8d,[rdx-0x1]
   140023d57:	lea    rcx,[rsp+0x28]
   140023d5c:	call   0x14000be9c
   140023d61:	nop
   140023d62:	lea    rdx,[rip+0x2a1ef]        # 0x14004df58
   140023d69:	lea    rcx,[rsp+0x28]
   140023d6e:	call   0x140010488
   140023d73:	lea    rdx,[rip+0x2a1f6]        # 0x14004df70
   140023d7a:	lea    rcx,[rsp+0x28]
   140023d7f:	call   0x140010488
   140023d84:	lea    rdx,[rip+0x2a21d]        # 0x14004dfa8
   140023d8b:	lea    rcx,[rsp+0x28]
   140023d90:	call   0x140010488
   140023d95:	mov    edx,0x73
   140023d9a:	lea    rcx,[rsp+0x28]
   140023d9f:	call   0x14000e638
   140023da4:	lea    rdx,[rip+0x28285]        # 0x14004c030
   140023dab:	lea    rcx,[rsp+0x28]
   140023db0:	call   0x140010488
   140023db5:	lea    rdx,[rip+0x2a1fc]        # 0x14004dfb8
   140023dbc:	lea    rcx,[rsp+0x28]
   140023dc1:	call   0x140010488
   140023dc6:	lea    rdx,[rbp+0x10]
   140023dca:	lea    rcx,[rsp+0x28]
   140023dcf:	call   0x14000a950
   140023dd4:	nop
   140023dd5:	lea    rcx,[rbp-0x50]
   140023dd9:	call   0x14000a9dc
   140023dde:	nop
   140023ddf:	lea    rax,[rip+0x27b32]        # 0x14004b918
   140023de6:	mov    QWORD PTR [rbp-0x50],rax
   140023dea:	lea    rcx,[rbp-0x50]
   140023dee:	call   0x140027b0c
   140023df3:	nop
   140023df4:	lea    rdx,[rbp+0x10]
   140023df8:	xor    ecx,ecx
   140023dfa:	call   0x14001a654
   140023dff:	lea    rbx,[rbp+0x10]
   140023e03:	cmp    QWORD PTR [rbp+0x28],0x8
   140023e08:	cmovae rbx,QWORD PTR [rbp+0x10]
   140023e0d:	mov    ecx,0x2
   140023e12:	call   0x140032b10
   140023e17:	mov    rcx,rax
   140023e1a:	mov    r8,rbx
   140023e1d:	lea    rdx,[rip+0x2a1bc]        # 0x14004dfe0
   140023e24:	call   0x14001a904
   140023e29:	nop
   140023e2a:	xor    r8d,r8d
   140023e2d:	mov    dl,0x1
   140023e2f:	lea    rcx,[rbp+0x10]
   140023e33:	call   0x14000b6b0
   140023e38:	jmp    0x140023e41
   140023e3a:	mov    eax,0x18
   140023e3f:	jmp    0x140023e46
   140023e41:	mov    eax,0x1
   140023e46:	mov    rcx,QWORD PTR [rbp+0x30]
   140023e4a:	xor    rcx,rsp
   140023e4d:	call   0x140025df0
   140023e52:	mov    rbx,QWORD PTR [rsp+0x150]
   140023e5a:	add    rsp,0x140
   140023e61:	pop    rbp
   140023e62:	ret    
   140023e63:	int3   
   140023e64:	mov    QWORD PTR [rsp+0x8],rbx
   140023e69:	push   rdi
   140023e6a:	sub    rsp,0x30
   140023e6e:	lea    rdi,[rcx+0x8]
   140023e72:	mov    rbx,rcx
   140023e75:	mov    rcx,QWORD PTR [rdi]
   140023e78:	test   rcx,rcx
   140023e7b:	je     0x140023e87
   140023e7d:	call   QWORD PTR [rip+0x271b5]        # 0x14004b038
   140023e83:	and    QWORD PTR [rdi],0x0
   140023e87:	mov    rcx,QWORD PTR [rbx]
   140023e8a:	test   rcx,rcx
   140023e8d:	je     0x140023e9b
   140023e8f:	xor    edx,edx
   140023e91:	call   QWORD PTR [rip+0x27181]        # 0x14004b018
   140023e97:	and    QWORD PTR [rbx],0x0
   140023e9b:	mov    rcx,rbx
   140023e9e:	call   0x140023d10
   140023ea3:	mov    r9d,eax
   140023ea6:	mov    DWORD PTR [rsp+0x20],0xf0000060
   140023eae:	xor    r8d,r8d
   140023eb1:	xor    edx,edx
   140023eb3:	mov    rcx,rbx
   140023eb6:	call   QWORD PTR [rip+0x27154]        # 0x14004b010
   140023ebc:	test   eax,eax
   140023ebe:	jne    0x140023eea
   140023ec0:	mov    rcx,QWORD PTR [rdi]
   140023ec3:	test   rcx,rcx
   140023ec6:	je     0x140023ed2
   140023ec8:	call   QWORD PTR [rip+0x2716a]        # 0x14004b038
   140023ece:	and    QWORD PTR [rdi],0x0
   140023ed2:	mov    rcx,QWORD PTR [rbx]
   140023ed5:	test   rcx,rcx
   140023ed8:	je     0x140023ee6
   140023eda:	xor    edx,edx
   140023edc:	call   QWORD PTR [rip+0x27136]        # 0x14004b018
   140023ee2:	and    QWORD PTR [rbx],0x0
   140023ee6:	xor    al,al
   140023ee8:	jmp    0x140023f0e
   140023eea:	mov    rcx,rbx
   140023eed:	call   0x140022a70
   140023ef2:	mov    rcx,QWORD PTR [rbx]
   140023ef5:	mov    edx,eax
   140023ef7:	xor    r9d,r9d
   140023efa:	mov    QWORD PTR [rsp+0x20],rdi
   140023eff:	xor    r8d,r8d
   140023f02:	call   QWORD PTR [rip+0x27120]        # 0x14004b028
   140023f08:	test   eax,eax
   140023f0a:	je     0x140023ec0
   140023f0c:	mov    al,0x1
   140023f0e:	mov    rbx,QWORD PTR [rsp+0x40]
   140023f13:	add    rsp,0x30
   140023f17:	pop    rdi
   140023f18:	ret    
   140023f19:	int3   
   140023f1a:	int3   
   140023f1b:	int3   
   140023f1c:	mov    QWORD PTR [rsp+0x10],rbx
   140023f21:	push   rbp
   140023f22:	push   rsi
   140023f23:	push   rdi
   140023f24:	sub    rsp,0x50
   140023f28:	xor    ebp,ebp
   140023f2a:	mov    rsi,rcx
   140023f2d:	mov    rcx,QWORD PTR [rcx+0x8]
   140023f31:	mov    rbx,rdx
   140023f34:	mov    DWORD PTR [rsp+0x30],ebp
   140023f38:	test   rcx,rcx
   140023f3b:	jne    0x140023f4d
   140023f3d:	mov    QWORD PTR [rdx],rbp
   140023f40:	mov    QWORD PTR [rdx+0x8],rbp
   140023f44:	mov    QWORD PTR [rdx+0x10],rbp
   140023f48:	jmp    0x140023ff2
   140023f4d:	mov    edx,0x4
   140023f52:	mov    DWORD PTR [rsp+0x70],ebp
   140023f56:	lea    r9,[rsp+0x80]
   140023f5e:	mov    DWORD PTR [rsp+0x80],edx
   140023f65:	lea    r8,[rsp+0x70]
   140023f6a:	mov    DWORD PTR [rsp+0x20],ebp
   140023f6e:	call   QWORD PTR [rip+0x270ac]        # 0x14004b020
   140023f74:	test   eax,eax
   140023f76:	jne    0x140023f85
   140023f78:	mov    QWORD PTR [rbx],rbp
   140023f7b:	mov    QWORD PTR [rbx+0x8],rbp
   140023f7f:	mov    QWORD PTR [rbx+0x10],rbp
   140023f83:	jmp    0x140023ff2
   140023f85:	mov    edx,DWORD PTR [rsp+0x70]
   140023f89:	lea    rcx,[rsp+0x38]
   140023f8e:	call   0x14001962c
   140023f93:	mov    rdi,QWORD PTR [rsp+0x38]
   140023f98:	lea    r9,[rsp+0x70]
   140023f9d:	mov    rcx,QWORD PTR [rsi+0x8]
   140023fa1:	mov    r8,rdi
   140023fa4:	mov    edx,0x2
   140023fa9:	mov    DWORD PTR [rsp+0x20],ebp
   140023fad:	call   QWORD PTR [rip+0x2706d]        # 0x14004b020
   140023fb3:	test   eax,eax
   140023fb5:	jne    0x140023fdd
   140023fb7:	mov    QWORD PTR [rbx],rbp
   140023fba:	mov    QWORD PTR [rbx+0x8],rbp
   140023fbe:	mov    QWORD PTR [rbx+0x10],rbp
   140023fc2:	test   rdi,rdi
   140023fc5:	je     0x140023ff2
   140023fc7:	mov    rdx,QWORD PTR [rsp+0x48]
   140023fcc:	lea    r8d,[rax+0x1]
   140023fd0:	sub    rdx,rdi
   140023fd3:	mov    rcx,rdi
   140023fd6:	call   0x140004804
   140023fdb:	jmp    0x140023ff2
   140023fdd:	mov    rax,QWORD PTR [rsp+0x40]
   140023fe2:	mov    QWORD PTR [rbx+0x8],rax
   140023fe6:	mov    rax,QWORD PTR [rsp+0x48]
   140023feb:	mov    QWORD PTR [rbx+0x10],rax
   140023fef:	mov    QWORD PTR [rbx],rdi
   140023ff2:	mov    rax,rbx
   140023ff5:	mov    rbx,QWORD PTR [rsp+0x78]
   140023ffa:	add    rsp,0x50
   140023ffe:	pop    rdi
   140023fff:	pop    rsi
   140024000:	pop    rbp
   140024001:	ret    
   140024002:	int3   
   140024003:	int3   
   140024004:	mov    rax,rsp
   140024007:	push   rbp
   140024008:	lea    rbp,[rax-0x68]
   14002400c:	sub    rsp,0x160
   140024013:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14002401c:	mov    QWORD PTR [rax+0x8],rbx
   140024020:	mov    QWORD PTR [rax+0x10],rsi
   140024024:	mov    QWORD PTR [rax+0x18],rdi
   140024028:	mov    QWORD PTR [rax+0x20],r14
   14002402c:	mov    rdi,rdx
   14002402f:	and    DWORD PTR [rsp+0x20],0x0
   140024034:	lea    rdx,[rsp+0x28]
   140024039:	mov    rcx,QWORD PTR [rcx]
   14002403c:	call   0x140023f1c
   140024041:	nop
   140024042:	mov    edx,0x3
   140024047:	lea    r8d,[rdx-0x2]
   14002404b:	lea    rcx,[rsp+0x60]
   140024050:	call   0x1400211b4
   140024055:	nop
   140024056:	xor    r14d,r14d
   140024059:	mov    rsi,QWORD PTR [rsp+0x30]
   14002405e:	mov    rbx,QWORD PTR [rsp+0x28]
   140024063:	sub    rsi,rbx
   140024066:	je     0x1400240ca
   140024068:	mov    rax,QWORD PTR [rsp+0x70]
   14002406d:	movsxd rcx,DWORD PTR [rax+0x4]
   140024071:	and    DWORD PTR [rbp+rcx*1-0x78],0xfffff9ff
   140024079:	bts    DWORD PTR [rbp+rcx*1-0x78],0xb
   14002407f:	mov    edx,0x2
   140024084:	lea    rcx,[rsp+0x48]
   140024089:	call   0x14002804c
   14002408e:	mov    rcx,QWORD PTR [rsp+0x70]
   140024093:	movsxd rdx,DWORD PTR [rcx+0x4]
   140024097:	lea    rcx,[rsp+0x70]
   14002409c:	add    rcx,rdx
   14002409f:	mov    rdx,QWORD PTR [rax+0x8]
   1400240a3:	call   QWORD PTR [rax]
   1400240a5:	mov    rax,QWORD PTR [rsp+0x70]
   1400240aa:	movsxd rcx,DWORD PTR [rax+0x4]
   1400240ae:	mov    BYTE PTR [rbp+rcx*1-0x38],0x30
   1400240b3:	movzx  edx,BYTE PTR [rbx+r14*1]
   1400240b8:	lea    rcx,[rsp+0x70]
   1400240bd:	call   0x1400216d0
   1400240c2:	inc    r14
   1400240c5:	cmp    r14,rsi
   1400240c8:	jb     0x140024068
   1400240ca:	mov    rdx,rdi
   1400240cd:	lea    rcx,[rsp+0x60]
   1400240d2:	call   0x1400244a4
   1400240d7:	nop
   1400240d8:	lea    rcx,[rbp-0x8]
   1400240dc:	call   0x140021530
   1400240e1:	nop
   1400240e2:	lea    rax,[rip+0x2782f]        # 0x14004b918
   1400240e9:	mov    QWORD PTR [rbp-0x8],rax
   1400240ed:	lea    rcx,[rbp-0x8]
   1400240f1:	call   0x140027b0c
   1400240f6:	nop
   1400240f7:	test   rbx,rbx
   1400240fa:	je     0x140024112
   1400240fc:	mov    rdx,QWORD PTR [rsp+0x38]
   140024101:	sub    rdx,rbx
   140024104:	mov    r8d,0x1
   14002410a:	mov    rcx,rbx
   14002410d:	call   0x140004804
   140024112:	mov    rax,rdi
   140024115:	lea    r11,[rsp+0x160]
   14002411d:	mov    rbx,QWORD PTR [r11+0x10]
   140024121:	mov    rsi,QWORD PTR [r11+0x18]
   140024125:	mov    rdi,QWORD PTR [r11+0x20]
   140024129:	mov    r14,QWORD PTR [r11+0x28]
   14002412d:	mov    rsp,r11
   140024130:	pop    rbp
   140024131:	ret    
   140024132:	int3   
   140024133:	int3   
   140024134:	mov    QWORD PTR [rsp+0x8],rsi
   140024139:	mov    QWORD PTR [rsp+0x10],rdi
   14002413e:	mov    rdi,QWORD PTR [rcx+0x40]
   140024142:	mov    r11,rdx
   140024145:	mov    r10,rcx
   140024148:	mov    rax,QWORD PTR [rdi]
   14002414b:	test   rax,rax
   14002414e:	je     0x14002415a
   140024150:	cmp    QWORD PTR [rcx+0x68],rax
   140024154:	jae    0x14002415a
   140024156:	mov    QWORD PTR [rcx+0x68],rax
   14002415a:	test   BYTE PTR [rsp+0x28],0x1
   14002415f:	je     0x140024214
   140024165:	mov    rsi,QWORD PTR [rcx+0x38]
   140024169:	mov    rcx,QWORD PTR [rsi]
   14002416c:	test   rcx,rcx
   14002416f:	je     0x140024214
   140024175:	mov    rdx,QWORD PTR [rip+0x2ab2c]        # 0x14004eca8
   14002417c:	cmp    r9d,0x2
   140024180:	jne    0x140024188
   140024182:	mov    rcx,QWORD PTR [r10+0x68]
   140024186:	jmp    0x140024195
   140024188:	cmp    r9d,0x1
   14002418c:	jne    0x1400241a1
   14002418e:	test   BYTE PTR [rsp+0x28],0x2
   140024193:	jne    0x1400241a6
   140024195:	mov    rax,QWORD PTR [r10+0x18]
   140024199:	sub    rcx,QWORD PTR [rax]
   14002419c:	add    r8,rcx
   14002419f:	jmp    0x1400241a9
   1400241a1:	test   r9d,r9d
   1400241a4:	je     0x1400241a9
   1400241a6:	mov    r8,rdx
   1400241a9:	test   r8,r8
   1400241ac:	js     0x14002427d
   1400241b2:	mov    rcx,QWORD PTR [r10+0x18]
   1400241b6:	mov    rax,QWORD PTR [r10+0x68]
   1400241ba:	sub    rax,QWORD PTR [rcx]
   1400241bd:	cmp    r8,rax
   1400241c0:	jg     0x14002427d
   1400241c6:	mov    edx,DWORD PTR [rcx]
   1400241c8:	sub    edx,DWORD PTR [rsi]
   1400241ca:	mov    rax,QWORD PTR [r10+0x50]
   1400241ce:	add    edx,r8d
   1400241d1:	sub    DWORD PTR [rax],edx
   1400241d3:	mov    rcx,QWORD PTR [r10+0x38]
   1400241d7:	movsxd rax,edx
   1400241da:	add    QWORD PTR [rcx],rax
   1400241dd:	test   BYTE PTR [rsp+0x28],0x2
   1400241e2:	je     0x14002428d
   1400241e8:	mov    r9,QWORD PTR [r10+0x40]
   1400241ec:	cmp    QWORD PTR [r9],0x0
   1400241f0:	je     0x14002428d
   1400241f6:	mov    rax,QWORD PTR [r10+0x38]
   1400241fa:	mov    rdx,QWORD PTR [rax]
   1400241fd:	mov    rax,QWORD PTR [r10+0x58]
   140024201:	movsxd rcx,DWORD PTR [rax]
   140024204:	add    rcx,QWORD PTR [r9]
   140024207:	mov    QWORD PTR [r9],rdx
   14002420a:	sub    ecx,edx
   14002420c:	mov    rax,QWORD PTR [r10+0x58]
   140024210:	mov    DWORD PTR [rax],ecx
   140024212:	jmp    0x14002428d
   140024214:	test   BYTE PTR [rsp+0x28],0x2
   140024219:	je     0x140024282
   14002421b:	mov    rcx,QWORD PTR [rdi]
   14002421e:	test   rcx,rcx
   140024221:	je     0x140024282
   140024223:	mov    rdx,QWORD PTR [rip+0x2aa7e]        # 0x14004eca8
   14002422a:	cmp    r9d,0x2
   14002422e:	jne    0x140024236
   140024230:	mov    rcx,QWORD PTR [r10+0x68]
   140024234:	jmp    0x14002423c
   140024236:	cmp    r9d,0x1
   14002423a:	jne    0x140024248
   14002423c:	mov    rax,QWORD PTR [r10+0x18]
   140024240:	sub    rcx,QWORD PTR [rax]
   140024243:	add    r8,rcx
   140024246:	jmp    0x14002424f
   140024248:	test   r9d,r9d
   14002424b:	cmovne r8,rdx
   14002424f:	test   r8,r8
   140024252:	js     0x14002427d
   140024254:	mov    rcx,QWORD PTR [r10+0x18]
   140024258:	mov    rax,QWORD PTR [r10+0x68]
   14002425c:	sub    rax,QWORD PTR [rcx]
   14002425f:	cmp    r8,rax
   140024262:	jg     0x14002427d
   140024264:	mov    edx,DWORD PTR [rcx]
   140024266:	mov    rax,QWORD PTR [r10+0x58]
   14002426a:	sub    edx,DWORD PTR [rdi]
   14002426c:	add    edx,r8d
   14002426f:	sub    DWORD PTR [rax],edx
   140024271:	mov    rcx,QWORD PTR [r10+0x40]
   140024275:	movsxd rax,edx
   140024278:	add    QWORD PTR [rcx],rax
   14002427b:	jmp    0x14002428d
   14002427d:	mov    r8,rdx
   140024280:	jmp    0x14002428d
   140024282:	test   r8,r8
   140024285:	cmovne r8,QWORD PTR [rip+0x2aa1b]        # 0x14004eca8
   14002428d:	and    QWORD PTR [r11+0x8],0x0
   140024292:	xor    eax,eax
   140024294:	mov    rsi,QWORD PTR [rsp+0x8]
   140024299:	mov    rdi,QWORD PTR [rsp+0x10]
   14002429e:	mov    QWORD PTR [r11],r8
   1400242a1:	mov    QWORD PTR [r11+0x10],rax
   1400242a5:	mov    rax,r11
   1400242a8:	ret    
   1400242a9:	int3   
   1400242aa:	int3   
   1400242ab:	int3   
   1400242ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400242b1:	mov    QWORD PTR [rsp+0x10],rdi
   1400242b6:	mov    rdi,QWORD PTR [rcx+0x40]
   1400242ba:	mov    rbx,rdx
   1400242bd:	mov    r10,QWORD PTR [r8+0x8]
   1400242c1:	mov    r11,rcx
   1400242c4:	add    r10,QWORD PTR [r8]
   1400242c7:	mov    rax,QWORD PTR [rdi]
   1400242ca:	test   rax,rax
   1400242cd:	je     0x1400242d9
   1400242cf:	cmp    QWORD PTR [rcx+0x68],rax
   1400242d3:	jae    0x1400242d9
   1400242d5:	mov    QWORD PTR [rcx+0x68],rax
   1400242d9:	mov    rcx,QWORD PTR [rip+0x2a9c8]        # 0x14004eca8
   1400242e0:	cmp    r10,rcx
   1400242e3:	je     0x14002439a
   1400242e9:	test   r9b,0x1
   1400242ed:	je     0x14002435c
   1400242ef:	mov    r8,QWORD PTR [r11+0x38]
   1400242f3:	cmp    QWORD PTR [r8],0x0
   1400242f7:	je     0x14002435c
   1400242f9:	test   r10,r10
   1400242fc:	js     0x140024397
   140024302:	mov    rdi,QWORD PTR [r11+0x18]
   140024306:	mov    rax,QWORD PTR [r11+0x68]
   14002430a:	sub    rax,QWORD PTR [rdi]
   14002430d:	cmp    r10,rax
   140024310:	jg     0x140024397
   140024316:	mov    rax,QWORD PTR [r11+0x50]
   14002431a:	mov    edx,r10d
   14002431d:	sub    edx,DWORD PTR [r8]
   140024320:	add    edx,DWORD PTR [rdi]
   140024322:	sub    DWORD PTR [rax],edx
   140024324:	mov    rcx,QWORD PTR [r11+0x38]
   140024328:	movsxd rax,edx
   14002432b:	add    QWORD PTR [rcx],rax
   14002432e:	test   r9b,0x2
   140024332:	je     0x14002439a
   140024334:	mov    r8,QWORD PTR [r11+0x40]
   140024338:	cmp    QWORD PTR [r8],0x0
   14002433c:	je     0x14002439a
   14002433e:	mov    rax,QWORD PTR [r11+0x38]
   140024342:	mov    rdx,QWORD PTR [rax]
   140024345:	mov    rax,QWORD PTR [r11+0x58]
   140024349:	movsxd rcx,DWORD PTR [rax]
   14002434c:	add    rcx,QWORD PTR [r8]
   14002434f:	mov    QWORD PTR [r8],rdx
   140024352:	sub    ecx,edx
   140024354:	mov    rax,QWORD PTR [r11+0x58]
   140024358:	mov    DWORD PTR [rax],ecx
   14002435a:	jmp    0x14002439a
   14002435c:	test   r9b,0x2
   140024360:	je     0x140024397
   140024362:	cmp    QWORD PTR [rdi],0x0
   140024366:	je     0x140024397
   140024368:	test   r10,r10
   14002436b:	js     0x140024397
   14002436d:	mov    r8,QWORD PTR [r11+0x18]
   140024371:	mov    rax,QWORD PTR [r11+0x68]
   140024375:	sub    rax,QWORD PTR [r8]
   140024378:	cmp    r10,rax
   14002437b:	jg     0x140024397
   14002437d:	mov    rax,QWORD PTR [r11+0x58]
   140024381:	mov    edx,r10d
   140024384:	sub    edx,DWORD PTR [rdi]
   140024386:	add    edx,DWORD PTR [r8]
   140024389:	sub    DWORD PTR [rax],edx
   14002438b:	mov    rcx,QWORD PTR [r11+0x40]
   14002438f:	movsxd rax,edx
   140024392:	add    QWORD PTR [rcx],rax
   140024395:	jmp    0x14002439a
   140024397:	mov    r10,rcx
   14002439a:	and    QWORD PTR [rbx+0x8],0x0
   14002439f:	xor    eax,eax
   1400243a1:	mov    rdi,QWORD PTR [rsp+0x10]
   1400243a6:	mov    QWORD PTR [rbx],r10
   1400243a9:	mov    QWORD PTR [rbx+0x10],rax
   1400243ad:	mov    rax,rbx
   1400243b0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400243b5:	ret    
   1400243b6:	int3   
   1400243b7:	int3   
   1400243b8:	mov    QWORD PTR [rsp+0x18],rbx
   1400243bd:	push   rbp
   1400243be:	push   rsi
   1400243bf:	push   rdi
   1400243c0:	mov    rbp,rsp
   1400243c3:	sub    rsp,0x50
   1400243c7:	mov    rax,QWORD PTR [rip+0x4cc82]        # 0x140071050
   1400243ce:	xor    rax,rsp
   1400243d1:	mov    QWORD PTR [rbp-0x8],rax
   1400243d5:	xor    esi,esi
   1400243d7:	mov    rbx,rdx
   1400243da:	test   BYTE PTR [rcx+0x70],0x2
   1400243de:	mov    DWORD PTR [rbp-0x30],esi
   1400243e1:	jne    0x14002441d
   1400243e3:	mov    rax,QWORD PTR [rcx+0x40]
   1400243e7:	cmp    QWORD PTR [rax],rsi
   1400243ea:	je     0x14002441d
   1400243ec:	mov    r8,QWORD PTR [rcx+0x68]
   1400243f0:	cmp    r8,QWORD PTR [rax]
   1400243f3:	cmovb  r8,QWORD PTR [rax]
   1400243f7:	mov    rax,QWORD PTR [rcx+0x20]
   1400243fb:	mov    rdx,QWORD PTR [rax]
   1400243fe:	lea    rcx,[rbp-0x28]
   140024402:	mov    edi,0xf
   140024407:	mov    QWORD PTR [rbp-0x18],rsi
   14002440b:	sub    r8,rdx
   14002440e:	mov    QWORD PTR [rbp-0x10],rdi
   140024412:	mov    BYTE PTR [rbp-0x28],sil
   140024416:	call   0x14000b994
   14002441b:	jmp    0x140024450
   14002441d:	test   BYTE PTR [rcx+0x70],0x4
   140024421:	jne    0x14002443f
   140024423:	mov    rax,QWORD PTR [rcx+0x38]
   140024427:	mov    rdx,QWORD PTR [rax]
   14002442a:	test   rdx,rdx
   14002442d:	je     0x14002443f
   14002442f:	mov    rax,QWORD PTR [rcx+0x50]
   140024433:	movsxd r8,DWORD PTR [rax]
   140024436:	mov    rax,QWORD PTR [rcx+0x18]
   14002443a:	add    r8,rdx
   14002443d:	jmp    0x1400243fb
   14002443f:	mov    edi,0xf
   140024444:	mov    QWORD PTR [rbp-0x18],rsi
   140024448:	mov    QWORD PTR [rbp-0x10],rdi
   14002444c:	mov    BYTE PTR [rbp-0x28],sil
   140024450:	mov    QWORD PTR [rbx+0x18],rdi
   140024454:	lea    rdx,[rbp-0x28]
   140024458:	mov    QWORD PTR [rbx+0x10],rsi
   14002445c:	mov    rcx,rbx
   14002445f:	mov    BYTE PTR [rbx],sil
   140024462:	call   0x14000be10
   140024467:	mov    rdx,QWORD PTR [rbp-0x10]
   14002446b:	cmp    rdx,0x10
   14002446f:	jb     0x140024483
   140024471:	mov    rcx,QWORD PTR [rbp-0x28]
   140024475:	mov    r8d,0x1
   14002447b:	inc    rdx
   14002447e:	call   0x140004804
   140024483:	mov    rax,rbx
   140024486:	mov    rcx,QWORD PTR [rbp-0x8]
   14002448a:	xor    rcx,rsp
   14002448d:	call   0x140025df0
   140024492:	mov    rbx,QWORD PTR [rsp+0x80]
   14002449a:	add    rsp,0x50
   14002449e:	pop    rdi
   14002449f:	pop    rsi
   1400244a0:	pop    rbp
   1400244a1:	ret    
   1400244a2:	int3   
   1400244a3:	int3   
   1400244a4:	rex push rbx
   1400244a6:	sub    rsp,0x30
   1400244aa:	and    DWORD PTR [rsp+0x20],0x0
   1400244af:	add    rcx,0x18
   1400244b3:	mov    rbx,rdx
   1400244b6:	call   0x1400243b8
   1400244bb:	mov    rax,rbx
   1400244be:	add    rsp,0x30
   1400244c2:	pop    rbx
   1400244c3:	ret    
   1400244c4:	rex push rbx
   1400244c6:	sub    rsp,0x20
   1400244ca:	mov    rax,QWORD PTR [rcx]
   1400244cd:	mov    rbx,rcx
   1400244d0:	call   QWORD PTR [rax+0x30]
   1400244d3:	or     edx,0xffffffff
   1400244d6:	cmp    eax,edx
   1400244d8:	je     0x1400244f1
   1400244da:	mov    rax,QWORD PTR [rbx+0x50]
   1400244de:	add    DWORD PTR [rax],edx
   1400244e0:	mov    rcx,QWORD PTR [rbx+0x38]
   1400244e4:	mov    rdx,QWORD PTR [rcx]
   1400244e7:	lea    rax,[rdx+0x1]
   1400244eb:	mov    QWORD PTR [rcx],rax
   1400244ee:	movzx  edx,BYTE PTR [rdx]
   1400244f1:	mov    eax,edx
   1400244f3:	add    rsp,0x20
   1400244f7:	pop    rbx
   1400244f8:	ret    
   1400244f9:	int3   
   1400244fa:	int3   
   1400244fb:	int3   
   1400244fc:	or     eax,0xffffffff
   1400244ff:	ret    
   140024500:	mov    r9,QWORD PTR [rcx+0x38]
   140024504:	mov    rdx,QWORD PTR [r9]
   140024507:	test   rdx,rdx
   14002450a:	je     0x14002455b
   14002450c:	mov    r10,QWORD PTR [rcx+0x50]
   140024510:	movsxd rax,DWORD PTR [r10]
   140024513:	add    rax,rdx
   140024516:	cmp    rdx,rax
   140024519:	jae    0x14002451f
   14002451b:	movzx  eax,BYTE PTR [rdx]
   14002451e:	ret    
   14002451f:	test   BYTE PTR [rcx+0x70],0x4
   140024523:	jne    0x14002455b
   140024525:	mov    rax,QWORD PTR [rcx+0x40]
   140024529:	mov    r8,QWORD PTR [rax]
   14002452c:	test   r8,r8
   14002452f:	je     0x14002455b
   140024531:	cmp    r8,rdx
   140024534:	ja     0x14002453c
   140024536:	cmp    QWORD PTR [rcx+0x68],rdx
   14002453a:	jbe    0x14002455b
   14002453c:	cmp    QWORD PTR [rcx+0x68],r8
   140024540:	jae    0x140024546
   140024542:	mov    QWORD PTR [rcx+0x68],r8
   140024546:	mov    rax,QWORD PTR [rcx+0x68]
   14002454a:	sub    eax,DWORD PTR [r9]
   14002454d:	mov    DWORD PTR [r10],eax
   140024550:	mov    rax,QWORD PTR [rcx+0x38]
   140024554:	mov    rcx,QWORD PTR [rax]
   140024557:	movzx  eax,BYTE PTR [rcx]
   14002455a:	ret    
   14002455b:	or     eax,0xffffffff
   14002455e:	ret    
   14002455f:	int3   
   140024560:	mov    rax,rsp
   140024563:	mov    QWORD PTR [rax+0x8],rbx
   140024567:	mov    QWORD PTR [rax+0x10],rsi
   14002456b:	mov    QWORD PTR [rax+0x18],rdi
   14002456f:	mov    QWORD PTR [rax+0x20],r14
   140024573:	push   r15
   140024575:	sub    rsp,0x20
   140024579:	xor    esi,esi
   14002457b:	mov    rdi,r8
   14002457e:	mov    r14,rdx
   140024581:	mov    r15,rcx
   140024584:	test   r8,r8
   140024587:	jle    0x1400245f7
   140024589:	mov    rax,QWORD PTR [r15+0x38]
   14002458d:	mov    rdx,QWORD PTR [rax]
   140024590:	test   rdx,rdx
   140024593:	je     0x14002459d
   140024595:	mov    rax,QWORD PTR [r15+0x50]
   140024599:	mov    ecx,DWORD PTR [rax]
   14002459b:	jmp    0x14002459f
   14002459d:	xor    ecx,ecx
   14002459f:	movsxd rbx,ecx
   1400245a2:	test   ecx,ecx
   1400245a4:	jle    0x1400245d8
   1400245a6:	cmp    rdi,rbx
   1400245a9:	cmovl  rbx,rdi
   1400245ad:	test   rbx,rbx
   1400245b0:	je     0x1400245bd
   1400245b2:	mov    r8,rbx
   1400245b5:	mov    rcx,r14
   1400245b8:	call   0x140028fd0
   1400245bd:	mov    rax,QWORD PTR [r15+0x50]
   1400245c1:	add    r14,rbx
   1400245c4:	add    rsi,rbx
   1400245c7:	sub    rdi,rbx
   1400245ca:	sub    DWORD PTR [rax],ebx
   1400245cc:	mov    rcx,QWORD PTR [r15+0x38]
   1400245d0:	movsxd rax,ebx
   1400245d3:	add    QWORD PTR [rcx],rax
   1400245d6:	jmp    0x1400245f2
   1400245d8:	mov    rax,QWORD PTR [r15]
   1400245db:	mov    rcx,r15
   1400245de:	call   QWORD PTR [rax+0x38]
   1400245e1:	cmp    eax,0xffffffff
   1400245e4:	je     0x1400245f7
   1400245e6:	mov    BYTE PTR [r14],al
   1400245e9:	inc    rsi
   1400245ec:	inc    r14
   1400245ef:	dec    rdi
   1400245f2:	test   rdi,rdi
   1400245f5:	jg     0x140024589
   1400245f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400245fc:	mov    rax,rsi
   1400245ff:	mov    rsi,QWORD PTR [rsp+0x38]
   140024604:	mov    rdi,QWORD PTR [rsp+0x40]
   140024609:	mov    r14,QWORD PTR [rsp+0x48]
   14002460e:	add    rsp,0x20
   140024612:	pop    r15
   140024614:	ret    
   140024615:	int3   
   140024616:	int3   
   140024617:	int3   
   140024618:	mov    rax,rsp
   14002461b:	mov    QWORD PTR [rax+0x8],rbx
   14002461f:	mov    QWORD PTR [rax+0x10],rbp
   140024623:	mov    QWORD PTR [rax+0x18],rsi
   140024627:	mov    QWORD PTR [rax+0x20],rdi
   14002462b:	push   r14
   14002462d:	sub    rsp,0x20
   140024631:	xor    esi,esi
   140024633:	mov    rdi,r8
   140024636:	mov    rbp,rdx
   140024639:	mov    r14,rcx
   14002463c:	test   r8,r8
   14002463f:	jle    0x1400246b3
   140024641:	mov    rax,QWORD PTR [r14+0x40]
   140024645:	mov    r9,QWORD PTR [rax]
   140024648:	test   r9,r9
   14002464b:	je     0x140024655
   14002464d:	mov    rax,QWORD PTR [r14+0x58]
   140024651:	mov    ecx,DWORD PTR [rax]
   140024653:	jmp    0x140024657
   140024655:	xor    ecx,ecx
   140024657:	movsxd rbx,ecx
   14002465a:	test   ecx,ecx
   14002465c:	jle    0x140024693
   14002465e:	cmp    rdi,rbx
   140024661:	cmovl  rbx,rdi
   140024665:	test   rbx,rbx
   140024668:	je     0x140024678
   14002466a:	mov    r8,rbx
   14002466d:	mov    rdx,rbp
   140024670:	mov    rcx,r9
   140024673:	call   0x140028fd0
   140024678:	mov    rax,QWORD PTR [r14+0x58]
   14002467c:	add    rbp,rbx
   14002467f:	add    rsi,rbx
   140024682:	sub    rdi,rbx
   140024685:	sub    DWORD PTR [rax],ebx
   140024687:	mov    rcx,QWORD PTR [r14+0x40]
   14002468b:	movsxd rax,ebx
   14002468e:	add    QWORD PTR [rcx],rax
   140024691:	jmp    0x1400246ae
   140024693:	mov    rax,QWORD PTR [r14]
   140024696:	mov    rcx,r14
   140024699:	movzx  edx,BYTE PTR [rbp+0x0]
   14002469d:	call   QWORD PTR [rax+0x18]
   1400246a0:	cmp    eax,0xffffffff
   1400246a3:	je     0x1400246b3
   1400246a5:	inc    rbp
   1400246a8:	inc    rsi
   1400246ab:	dec    rdi
   1400246ae:	test   rdi,rdi
   1400246b1:	jg     0x140024641
   1400246b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400246b8:	mov    rax,rsi
   1400246bb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400246c0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400246c5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400246ca:	add    rsp,0x20
   1400246ce:	pop    r14
   1400246d0:	ret    
   1400246d1:	int3   
   1400246d2:	int3   
   1400246d3:	int3   
   1400246d4:	mov    QWORD PTR [rsp+0x18],r8
   1400246d9:	push   rbx
   1400246da:	push   rsi
   1400246db:	push   rdi
   1400246dc:	sub    rsp,0x30
   1400246e0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400246e9:	mov    rbx,r8
   1400246ec:	mov    rsi,rdx
   1400246ef:	mov    rdi,rcx
   1400246f2:	mov    QWORD PTR [rsp+0x50],rbx
   1400246f7:	cmp    rdi,rsi
   1400246fa:	je     0x14002473c
   1400246fc:	mov    QWORD PTR [rsp+0x58],rbx
   140024701:	test   rbx,rbx
   140024704:	je     0x14002472d
   140024706:	mov    eax,DWORD PTR [rdi]
   140024708:	mov    DWORD PTR [rbx],eax
   14002470a:	lea    rdx,[rdi+0x8]
   14002470e:	lea    rcx,[rbx+0x8]
   140024712:	call   0x140024de4
   140024717:	movups xmm0,XMMWORD PTR [rdi+0x28]
   14002471b:	movups XMMWORD PTR [rbx+0x28],xmm0
   14002471f:	movups xmm1,XMMWORD PTR [rdi+0x38]
   140024723:	movups XMMWORD PTR [rbx+0x38],xmm1
   140024727:	mov    eax,DWORD PTR [rdi+0x48]
   14002472a:	mov    DWORD PTR [rbx+0x48],eax
   14002472d:	add    rbx,0x50
   140024731:	mov    QWORD PTR [rsp+0x60],rbx
   140024736:	add    rdi,0x50
   14002473a:	jmp    0x1400246f7
   14002473c:	mov    rax,rbx
   14002473f:	add    rsp,0x30
   140024743:	pop    rdi
   140024744:	pop    rsi
   140024745:	pop    rbx
   140024746:	ret    
   140024747:	int3   
   140024748:	rex push rbx
   14002474a:	sub    rsp,0x20
   14002474e:	mov    rbx,rcx
   140024751:	mov    rcx,QWORD PTR [rcx]
   140024754:	lea    rax,[rcx-0x1]
   140024758:	cmp    rax,0xfffffffffffffffd
   14002475c:	ja     0x140024764
   14002475e:	call   QWORD PTR [rip+0x26a2c]        # 0x14004b190
   140024764:	and    QWORD PTR [rbx],0x0
   140024768:	add    rsp,0x20
   14002476c:	pop    rbx
   14002476d:	ret    
   14002476e:	int3   
   14002476f:	int3   
   140024770:	jmp    0x140024c54
   140024775:	int3   
   140024776:	int3   
   140024777:	int3   
   140024778:	sub    rsp,0x98
   14002477f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024788:	mov    rax,QWORD PTR [rip+0x4c8c1]        # 0x140071050
   14002478f:	xor    rax,rsp
   140024792:	mov    QWORD PTR [rsp+0x80],rax
   14002479a:	mov    rdx,rcx
   14002479d:	lea    rcx,[rsp+0x30]
   1400247a2:	call   0x14002534c
   1400247a7:	nop
   1400247a8:	lea    rcx,[rsp+0x30]
   1400247ad:	call   0x140025644
   1400247b2:	test   al,al
   1400247b4:	je     0x1400247c1
   1400247b6:	lea    rcx,[rsp+0x30]
   1400247bb:	call   0x140025430
   1400247c0:	nop
   1400247c1:	lea    rcx,[rsp+0x38]
   1400247c6:	call   0x14000a98c
   1400247cb:	mov    rcx,QWORD PTR [rsp+0x80]
   1400247d3:	xor    rcx,rsp
   1400247d6:	call   0x140025df0
   1400247db:	add    rsp,0x98
   1400247e2:	ret    
   1400247e3:	int3   
   1400247e4:	rex push rbp
   1400247e6:	push   rbx
   1400247e7:	push   rsi
   1400247e8:	push   rdi
   1400247e9:	push   r14
   1400247eb:	lea    rbp,[rsp-0x360]
   1400247f3:	sub    rsp,0x460
   1400247fa:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140024803:	mov    rax,QWORD PTR [rip+0x4c846]        # 0x140071050
   14002480a:	xor    rax,rsp
   14002480d:	mov    QWORD PTR [rbp+0x350],rax
   140024814:	mov    rbx,r8
   140024817:	mov    rsi,rdx
   14002481a:	mov    rdi,rcx
   14002481d:	mov    QWORD PTR [rsp+0x40],rcx
   140024822:	xor    r14d,r14d
   140024825:	mov    DWORD PTR [rsp+0x30],r14d
   14002482a:	lea    rcx,[rbp-0x70]
   14002482e:	call   0x140024e0c
   140024833:	nop
   140024834:	mov    rdx,rbx
   140024837:	lea    rcx,[rsp+0x50]
   14002483c:	call   0x140024e3c
   140024841:	nop
   140024842:	lea    rdx,[rsp+0x50]
   140024847:	lea    rcx,[rbp-0x70]
   14002484b:	call   0x140024f74
   140024850:	nop
   140024851:	lea    rcx,[rsp+0x50]
   140024856:	call   0x14000a98c
   14002485b:	lea    rdx,[rbp-0x30]
   14002485f:	lea    rcx,[rbp-0x70]
   140024863:	call   0x140025030
   140024868:	cmp    QWORD PTR [rax+0x18],0x8
   14002486d:	jb     0x140024872
   14002486f:	mov    rax,QWORD PTR [rax]
   140024872:	lea    rdx,[rbp+0x40]
   140024876:	mov    rcx,rax
   140024879:	call   QWORD PTR [rip+0x26919]        # 0x14004b198
   14002487f:	mov    rbx,rax
   140024882:	xor    r8d,r8d
   140024885:	mov    dl,0x1
   140024887:	lea    rcx,[rbp-0x30]
   14002488b:	call   0x14000b6b0
   140024890:	cmp    rbx,0xffffffffffffffff
   140024894:	jne    0x1400248dd
   140024896:	call   QWORD PTR [rip+0x26844]        # 0x14004b0e0
   14002489c:	movzx  edx,ax
   14002489f:	or     edx,0x80070000
   1400248a5:	test   eax,eax
   1400248a7:	cmovle edx,eax
   1400248aa:	mov    DWORD PTR [rsp+0x20],0x1
   1400248b2:	lea    r9d,[rbx+0x21]
   1400248b6:	lea    r8,[rip+0x29a33]        # 0x14004e2f0
   1400248bd:	lea    rcx,[rbp+0x290]
   1400248c4:	call   0x14001ecc0
   1400248c9:	lea    rdx,[rip+0x4b538]        # 0x14006fe08
   1400248d0:	lea    rcx,[rbp+0x290]
   1400248d7:	call   0x14002ab88
   1400248dc:	int3   
   1400248dd:	mov    QWORD PTR [rsp+0x48],rbx
   1400248e2:	mov    QWORD PTR [rdi],r14
   1400248e5:	mov    QWORD PTR [rdi+0x8],r14
   1400248e9:	mov    QWORD PTR [rdi+0x10],r14
   1400248ed:	mov    DWORD PTR [rsp+0x30],0x1
   1400248f5:	lea    rdx,[rip+0x29a1c]        # 0x14004e318
   1400248fc:	lea    rcx,[rbp+0x6c]
   140024900:	call   0x140032c70
   140024905:	test   eax,eax
   140024907:	je     0x1400249d6
   14002490d:	lea    rdx,[rip+0x29a08]        # 0x14004e31c
   140024914:	lea    rcx,[rbp+0x6c]
   140024918:	call   0x140032c70
   14002491d:	test   eax,eax
   14002491f:	je     0x1400249d6
   140024925:	mov    rdx,rsi
   140024928:	lea    rcx,[rsp+0x50]
   14002492d:	call   0x140024e0c
   140024932:	nop
   140024933:	mov    QWORD PTR [rbp-0x78],0x7
   14002493b:	mov    QWORD PTR [rbp-0x80],r14
   14002493f:	mov    WORD PTR [rsp+0x70],r14w
   140024945:	cmp    WORD PTR [rbp+0x6c],r14w
   14002494a:	jne    0x140024951
   14002494c:	mov    rax,r14
   14002494f:	jmp    0x14002495a
   140024951:	lea    rcx,[rbp+0x6c]
   140024955:	call   0x140031108
   14002495a:	mov    r8,rax
   14002495d:	lea    rdx,[rbp+0x6c]
   140024961:	lea    rcx,[rsp+0x70]
   140024966:	call   0x14000b730
   14002496b:	nop
   14002496c:	lea    rdx,[rsp+0x70]
   140024971:	lea    rcx,[rbp-0x50]
   140024975:	call   0x140024e3c
   14002497a:	nop
   14002497b:	lea    rdx,[rbp-0x50]
   14002497f:	lea    rcx,[rsp+0x50]
   140024984:	call   0x140024f74
   140024989:	nop
   14002498a:	lea    rcx,[rbp-0x50]
   14002498e:	call   0x14000a98c
   140024993:	nop
   140024994:	xor    r8d,r8d
   140024997:	mov    dl,0x1
   140024999:	lea    rcx,[rsp+0x70]
   14002499e:	call   0x14000b6b0
   1400249a3:	lea    r8,[rbp+0x40]
   1400249a7:	lea    rdx,[rsp+0x50]
   1400249ac:	lea    rcx,[rbp-0x10]
   1400249b0:	call   0x140025390
   1400249b5:	nop
   1400249b6:	mov    rdx,rax
   1400249b9:	mov    rcx,rdi
   1400249bc:	call   0x140024cd4
   1400249c1:	nop
   1400249c2:	lea    rcx,[rbp-0x8]
   1400249c6:	call   0x14000a98c
   1400249cb:	nop
   1400249cc:	lea    rcx,[rsp+0x50]
   1400249d1:	call   0x14000a98c
   1400249d6:	lea    rdx,[rbp+0x40]
   1400249da:	mov    rcx,rbx
   1400249dd:	call   QWORD PTR [rip+0x267bd]        # 0x14004b1a0
   1400249e3:	test   eax,eax
   1400249e5:	jne    0x1400248f5
   1400249eb:	test   rbx,rbx
   1400249ee:	je     0x1400249fa
   1400249f0:	mov    rcx,rbx
   1400249f3:	call   QWORD PTR [rip+0x26797]        # 0x14004b190
   1400249f9:	nop
   1400249fa:	lea    rcx,[rbp-0x70]
   1400249fe:	call   0x14000a98c
   140024a03:	mov    rax,rdi
   140024a06:	mov    rcx,QWORD PTR [rbp+0x350]
   140024a0d:	xor    rcx,rsp
   140024a10:	call   0x140025df0
   140024a15:	add    rsp,0x460
   140024a1c:	pop    r14
   140024a1e:	pop    rdi
   140024a1f:	pop    rsi
   140024a20:	pop    rbx
   140024a21:	pop    rbp
   140024a22:	ret    
   140024a23:	int3   
   140024a24:	rex push rbx
   140024a26:	sub    rsp,0x90
   140024a2d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024a36:	mov    rax,QWORD PTR [rip+0x4c613]        # 0x140071050
   140024a3d:	xor    rax,rsp
   140024a40:	mov    QWORD PTR [rsp+0x80],rax
   140024a48:	mov    rdx,rcx
   140024a4b:	lea    rcx,[rsp+0x30]
   140024a50:	call   0x14002534c
   140024a55:	nop
   140024a56:	lea    rcx,[rsp+0x30]
   140024a5b:	call   0x140025644
   140024a60:	mov    bl,al
   140024a62:	lea    rcx,[rsp+0x38]
   140024a67:	call   0x14000a98c
   140024a6c:	mov    al,bl
   140024a6e:	mov    rcx,QWORD PTR [rsp+0x80]
   140024a76:	xor    rcx,rsp
   140024a79:	call   0x140025df0
   140024a7e:	add    rsp,0x90
   140024a85:	pop    rbx
   140024a86:	ret    
   140024a87:	int3   
   140024a88:	mov    rax,rsp
   140024a8b:	mov    QWORD PTR [rax+0x10],rdx
   140024a8f:	push   rsi
   140024a90:	push   rdi
   140024a91:	push   r12
   140024a93:	push   r14
   140024a95:	push   r15
   140024a97:	sub    rsp,0x40
   140024a9b:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140024aa3:	mov    QWORD PTR [rax+0x18],rbx
   140024aa7:	mov    r15,rdx
   140024aaa:	mov    rbx,rcx
   140024aad:	mov    r8b,0x1
   140024ab0:	mov    edx,0x50
   140024ab5:	mov    rcx,r15
   140024ab8:	call   0x140004798
   140024abd:	mov    rsi,rax
   140024ac0:	mov    QWORD PTR [rsp+0x70],rax
   140024ac5:	xor    eax,eax
   140024ac7:	mov    r8b,BYTE PTR [rsp+0x70]
   140024acc:	mov    BYTE PTR [rsp+0x28],r8b
   140024ad1:	mov    BYTE PTR [rsp+0x20],al
   140024ad5:	mov    r9,rbx
   140024ad8:	mov    r8,rsi
   140024adb:	mov    rdx,QWORD PTR [rbx+0x8]
   140024adf:	mov    rcx,QWORD PTR [rbx]
   140024ae2:	call   0x1400246d4
   140024ae7:	nop
   140024ae8:	mov    r12,QWORD PTR [rbx+0x8]
   140024aec:	mov    rdi,QWORD PTR [rbx]
   140024aef:	mov    rcx,r12
   140024af2:	sub    rcx,rdi
   140024af5:	movabs rax,0x6666666666666667
   140024aff:	imul   rcx
   140024b02:	mov    r14,rdx
   140024b05:	sar    r14,0x5
   140024b09:	mov    rax,r14
   140024b0c:	shr    rax,0x3f
   140024b10:	add    r14,rax
   140024b13:	test   rdi,rdi
   140024b16:	je     0x140024b5c
   140024b18:	jmp    0x140024b27
   140024b1a:	lea    rcx,[rdi+0x8]
   140024b1e:	call   0x14000a98c
   140024b23:	add    rdi,0x50
   140024b27:	cmp    rdi,r12
   140024b2a:	jne    0x140024b1a
   140024b2c:	mov    rdx,QWORD PTR [rbx+0x10]
   140024b30:	sub    rdx,QWORD PTR [rbx]
   140024b33:	movabs rax,0x6666666666666667
   140024b3d:	imul   rdx
   140024b40:	sar    rdx,0x5
   140024b44:	mov    rax,rdx
   140024b47:	shr    rax,0x3f
   140024b4b:	add    rdx,rax
   140024b4e:	mov    r8d,0x50
   140024b54:	mov    rcx,QWORD PTR [rbx]
   140024b57:	call   0x140004804
   140024b5c:	lea    rax,[r15+r15*4]
   140024b60:	shl    rax,0x4
   140024b64:	add    rax,rsi
   140024b67:	mov    QWORD PTR [rbx+0x10],rax
   140024b6b:	lea    rax,[r14+r14*4]
   140024b6f:	shl    rax,0x4
   140024b73:	add    rax,rsi
   140024b76:	mov    QWORD PTR [rbx+0x8],rax
   140024b7a:	mov    QWORD PTR [rbx],rsi
   140024b7d:	mov    rbx,QWORD PTR [rsp+0x80]
   140024b85:	add    rsp,0x40
   140024b89:	pop    r15
   140024b8b:	pop    r14
   140024b8d:	pop    r12
   140024b8f:	pop    rdi
   140024b90:	pop    rsi
   140024b91:	ret    
   140024b92:	int3   
   140024b93:	int3   
   140024b94:	rex push rbx
   140024b96:	sub    rsp,0x20
   140024b9a:	mov    r11,rdx
   140024b9d:	mov    r10,rcx
   140024ba0:	mov    rcx,QWORD PTR [rcx+0x10]
   140024ba4:	movabs rbx,0x6666666666666667
   140024bae:	mov    r8,rcx
   140024bb1:	mov    rax,rbx
   140024bb4:	mov    r9,QWORD PTR [r10+0x8]
   140024bb8:	sub    r8,r9
   140024bbb:	imul   r8
   140024bbe:	sar    rdx,0x5
   140024bc2:	mov    rax,rdx
   140024bc5:	shr    rax,0x3f
   140024bc9:	add    rdx,rax
   140024bcc:	cmp    rdx,r11
   140024bcf:	jae    0x140024c3f
   140024bd1:	sub    r9,QWORD PTR [r10]
   140024bd4:	mov    rax,rbx
   140024bd7:	imul   r9
   140024bda:	movabs r9,0x333333333333333
   140024be4:	sar    rdx,0x5
   140024be8:	mov    rax,rdx
   140024beb:	shr    rax,0x3f
   140024bef:	add    rdx,rax
   140024bf2:	mov    rax,r9
   140024bf5:	sub    rax,rdx
   140024bf8:	cmp    rax,r11
   140024bfb:	jb     0x140024c45
   140024bfd:	sub    rcx,QWORD PTR [r10]
   140024c00:	lea    r8,[rdx+r11*1]
   140024c04:	mov    rax,rbx
   140024c07:	imul   rcx
   140024c0a:	xor    ecx,ecx
   140024c0c:	sar    rdx,0x5
   140024c10:	mov    rax,rdx
   140024c13:	shr    rax,0x3f
   140024c17:	add    rdx,rax
   140024c1a:	mov    rax,rdx
   140024c1d:	shr    rax,1
   140024c20:	sub    r9,rax
   140024c23:	add    rax,rdx
   140024c26:	cmp    r9,rdx
   140024c29:	cmovae rcx,rax
   140024c2d:	cmp    rcx,r8
   140024c30:	cmovae r8,rcx
   140024c34:	mov    rcx,r10
   140024c37:	mov    rdx,r8
   140024c3a:	call   0x140024a88
   140024c3f:	add    rsp,0x20
   140024c43:	pop    rbx
   140024c44:	ret    
   140024c45:	lea    rcx,[rip+0x3e1dc]        # 0x140062e28
   140024c4c:	call   0x140027a4c
   140024c51:	int3   
   140024c52:	int3   
   140024c53:	int3   
   140024c54:	mov    QWORD PTR [rsp+0x8],rbx
   140024c59:	mov    QWORD PTR [rsp+0x10],rsi
   140024c5e:	push   rdi
   140024c5f:	sub    rsp,0x20
   140024c63:	mov    rbx,QWORD PTR [rcx]
   140024c66:	mov    rdi,rcx
   140024c69:	test   rbx,rbx
   140024c6c:	je     0x140024cc4
   140024c6e:	mov    rsi,QWORD PTR [rcx+0x8]
   140024c72:	jmp    0x140024c81
   140024c74:	lea    rcx,[rbx+0x8]
   140024c78:	call   0x14000a98c
   140024c7d:	add    rbx,0x50
   140024c81:	cmp    rbx,rsi
   140024c84:	jne    0x140024c74
   140024c86:	mov    rdx,QWORD PTR [rdi+0x10]
   140024c8a:	movabs rax,0x6666666666666667
   140024c94:	sub    rdx,QWORD PTR [rdi]
   140024c97:	mov    r8d,0x50
   140024c9d:	mov    rcx,QWORD PTR [rdi]
   140024ca0:	imul   rdx
   140024ca3:	sar    rdx,0x5
   140024ca7:	mov    rax,rdx
   140024caa:	shr    rax,0x3f
   140024cae:	add    rdx,rax
   140024cb1:	call   0x140004804
   140024cb6:	and    QWORD PTR [rdi],0x0
   140024cba:	and    QWORD PTR [rdi+0x8],0x0
   140024cbf:	and    QWORD PTR [rdi+0x10],0x0
   140024cc4:	mov    rbx,QWORD PTR [rsp+0x30]
   140024cc9:	mov    rsi,QWORD PTR [rsp+0x38]
   140024cce:	add    rsp,0x20
   140024cd2:	pop    rdi
   140024cd3:	ret    
   140024cd4:	rex push rdi
   140024cd6:	sub    rsp,0x30
   140024cda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024ce3:	mov    QWORD PTR [rsp+0x50],rbx
   140024ce8:	mov    QWORD PTR [rsp+0x58],rsi
   140024ced:	mov    rsi,rdx
   140024cf0:	mov    rbx,rcx
   140024cf3:	mov    rcx,QWORD PTR [rcx+0x8]
   140024cf7:	cmp    rdx,rcx
   140024cfa:	jae    0x140024d80
   140024d00:	cmp    QWORD PTR [rbx],rdx
   140024d03:	ja     0x140024d80
   140024d05:	sub    rsi,QWORD PTR [rbx]
   140024d08:	movabs rax,0x6666666666666667
   140024d12:	imul   rsi
   140024d15:	mov    rdi,rdx
   140024d18:	sar    rdi,0x5
   140024d1c:	mov    rax,rdi
   140024d1f:	shr    rax,0x3f
   140024d23:	add    rdi,rax
   140024d26:	cmp    rcx,QWORD PTR [rbx+0x10]
   140024d2a:	jne    0x140024d39
   140024d2c:	mov    edx,0x1
   140024d31:	mov    rcx,rbx
   140024d34:	call   0x140024b94
   140024d39:	lea    rdi,[rdi+rdi*4]
   140024d3d:	shl    rdi,0x4
   140024d41:	add    rdi,QWORD PTR [rbx]
   140024d44:	mov    rsi,QWORD PTR [rbx+0x8]
   140024d48:	mov    QWORD PTR [rsp+0x40],rsi
   140024d4d:	mov    QWORD PTR [rsp+0x48],rsi
   140024d52:	test   rsi,rsi
   140024d55:	je     0x140024d7e
   140024d57:	mov    eax,DWORD PTR [rdi]
   140024d59:	mov    DWORD PTR [rsi],eax
   140024d5b:	lea    rdx,[rdi+0x8]
   140024d5f:	lea    rcx,[rsi+0x8]
   140024d63:	call   0x140024de4
   140024d68:	movups xmm0,XMMWORD PTR [rdi+0x28]
   140024d6c:	movups XMMWORD PTR [rsi+0x28],xmm0
   140024d70:	movups xmm1,XMMWORD PTR [rdi+0x38]
   140024d74:	movups XMMWORD PTR [rsi+0x38],xmm1
   140024d78:	mov    eax,DWORD PTR [rdi+0x48]
   140024d7b:	mov    DWORD PTR [rsi+0x48],eax
   140024d7e:	jmp    0x140024dcd
   140024d80:	cmp    rcx,QWORD PTR [rbx+0x10]
   140024d84:	jne    0x140024d93
   140024d86:	mov    edx,0x1
   140024d8b:	mov    rcx,rbx
   140024d8e:	call   0x140024b94
   140024d93:	mov    rdi,QWORD PTR [rbx+0x8]
   140024d97:	mov    QWORD PTR [rsp+0x40],rdi
   140024d9c:	mov    QWORD PTR [rsp+0x48],rdi
   140024da1:	test   rdi,rdi
   140024da4:	je     0x140024dcd
   140024da6:	mov    eax,DWORD PTR [rsi]
   140024da8:	mov    DWORD PTR [rdi],eax
   140024daa:	lea    rdx,[rsi+0x8]
   140024dae:	lea    rcx,[rdi+0x8]
   140024db2:	call   0x140024de4
   140024db7:	movups xmm0,XMMWORD PTR [rsi+0x28]
   140024dbb:	movups XMMWORD PTR [rdi+0x28],xmm0
   140024dbf:	movups xmm1,XMMWORD PTR [rsi+0x38]
   140024dc3:	movups XMMWORD PTR [rdi+0x38],xmm1
   140024dc7:	mov    eax,DWORD PTR [rsi+0x48]
   140024dca:	mov    DWORD PTR [rdi+0x48],eax
   140024dcd:	add    QWORD PTR [rbx+0x8],0x50
   140024dd2:	mov    rbx,QWORD PTR [rsp+0x50]
   140024dd7:	mov    rsi,QWORD PTR [rsp+0x58]
   140024ddc:	add    rsp,0x30
   140024de0:	pop    rdi
   140024de1:	ret    
   140024de2:	int3   
   140024de3:	int3   
   140024de4:	rex push rbx
   140024de6:	sub    rsp,0x20
   140024dea:	xor    eax,eax
   140024dec:	mov    QWORD PTR [rcx+0x18],0x7
   140024df4:	mov    QWORD PTR [rcx+0x10],rax
   140024df8:	mov    rbx,rcx
   140024dfb:	mov    WORD PTR [rcx],ax
   140024dfe:	call   0x14000cfb4
   140024e03:	mov    rax,rbx
   140024e06:	add    rsp,0x20
   140024e0a:	pop    rbx
   140024e0b:	ret    
   140024e0c:	rex push rbx
   140024e0e:	sub    rsp,0x20
   140024e12:	xor    eax,eax
   140024e14:	mov    QWORD PTR [rcx+0x18],0x7
   140024e1c:	mov    QWORD PTR [rcx+0x10],rax
   140024e20:	or     r9,0xffffffffffffffff
   140024e24:	xor    r8d,r8d
   140024e27:	mov    WORD PTR [rcx],ax
   140024e2a:	mov    rbx,rcx
   140024e2d:	call   0x14000b850
   140024e32:	mov    rax,rbx
   140024e35:	add    rsp,0x20
   140024e39:	pop    rbx
   140024e3a:	ret    
   140024e3b:	int3   
   140024e3c:	mov    QWORD PTR [rsp+0x8],rcx
   140024e41:	push   rbx
   140024e42:	sub    rsp,0x30
   140024e46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024e4f:	mov    rbx,rcx
   140024e52:	xor    ecx,ecx
   140024e54:	mov    QWORD PTR [rbx+0x18],0x7
   140024e5c:	mov    QWORD PTR [rbx+0x10],rcx
   140024e60:	cmp    QWORD PTR [rbx+0x18],0x8
   140024e65:	jb     0x140024e6c
   140024e67:	mov    rax,QWORD PTR [rbx]
   140024e6a:	jmp    0x140024e6f
   140024e6c:	mov    rax,rbx
   140024e6f:	mov    WORD PTR [rax],cx
   140024e72:	or     r9,0xffffffffffffffff
   140024e76:	xor    r8d,r8d
   140024e79:	mov    rcx,rbx
   140024e7c:	call   0x14000b850
   140024e81:	nop
   140024e82:	mov    rcx,rbx
   140024e85:	call   0x140025078
   140024e8a:	nop
   140024e8b:	mov    rax,rbx
   140024e8e:	add    rsp,0x30
   140024e92:	pop    rbx
   140024e93:	ret    
   140024e94:	mov    rax,rsp
   140024e97:	mov    QWORD PTR [rax+0x8],rcx
   140024e9b:	push   rdi
   140024e9c:	sub    rsp,0x30
   140024ea0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140024ea8:	mov    QWORD PTR [rax+0x10],rbx
   140024eac:	mov    QWORD PTR [rax+0x18],rsi
   140024eb0:	mov    rsi,rdx
   140024eb3:	mov    rbx,rcx
   140024eb6:	xor    edi,edi
   140024eb8:	mov    QWORD PTR [rcx+0x18],0x7
   140024ec0:	mov    QWORD PTR [rcx+0x10],rdi
   140024ec4:	cmp    QWORD PTR [rcx+0x18],0x8
   140024ec9:	jb     0x140024ed0
   140024ecb:	mov    rax,QWORD PTR [rcx]
   140024ece:	jmp    0x140024ed3
   140024ed0:	mov    rax,rbx
   140024ed3:	mov    WORD PTR [rax],di
   140024ed6:	test   rsi,rsi
   140024ed9:	setne  cl
   140024edc:	mov    r9d,0x67
   140024ee2:	lea    r8,[rip+0x294bf]        # 0x14004e3a8
   140024ee9:	lea    rdx,[rip+0x27860]        # 0x14004c750
   140024ef0:	call   0x1400209ec
   140024ef5:	cmp    WORD PTR [rsi],di
   140024ef8:	je     0x140024f05
   140024efa:	mov    rcx,rsi
   140024efd:	call   0x140031108
   140024f02:	mov    rdi,rax
   140024f05:	mov    r8,rdi
   140024f08:	mov    rdx,rsi
   140024f0b:	mov    rcx,rbx
   140024f0e:	call   0x14000b730
   140024f13:	mov    rcx,rbx
   140024f16:	call   0x140025078
   140024f1b:	nop
   140024f1c:	mov    rax,rbx
   140024f1f:	mov    rbx,QWORD PTR [rsp+0x48]
   140024f24:	mov    rsi,QWORD PTR [rsp+0x50]
   140024f29:	add    rsp,0x30
   140024f2d:	pop    rdi
   140024f2e:	ret    
   140024f2f:	int3   
   140024f30:	rex push rdi
   140024f32:	sub    rsp,0x30
   140024f36:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140024f3f:	mov    QWORD PTR [rsp+0x40],rbx
   140024f44:	mov    rdi,rdx
   140024f47:	mov    rbx,rcx
   140024f4a:	cmp    rcx,rdx
   140024f4d:	je     0x140024f65
   140024f4f:	xor    r8d,r8d
   140024f52:	mov    dl,0x1
   140024f54:	call   0x14000b6b0
   140024f59:	mov    rdx,rdi
   140024f5c:	mov    rcx,rbx
   140024f5f:	call   0x14000cfb4
   140024f64:	nop
   140024f65:	mov    rax,rbx
   140024f68:	mov    rbx,QWORD PTR [rsp+0x40]
   140024f6d:	add    rsp,0x30
   140024f71:	pop    rdi
   140024f72:	ret    
   140024f73:	int3   
   140024f74:	mov    QWORD PTR [rsp+0x8],rbx
   140024f79:	mov    QWORD PTR [rsp+0x10],rbp
   140024f7e:	mov    QWORD PTR [rsp+0x18],rsi
   140024f83:	push   rdi
   140024f84:	sub    rsp,0x20
   140024f88:	mov    rbx,rcx
   140024f8b:	mov    rsi,rdx
   140024f8e:	mov    rcx,rdx
   140024f91:	call   0x140025264
   140024f96:	mov    cl,al
   140024f98:	lea    r8,[rip+0x29409]        # 0x14004e3a8
   140024f9f:	mov    r9d,0x88
   140024fa5:	lea    rdx,[rip+0x277a4]        # 0x14004c750
   140024fac:	call   0x1400209ec
   140024fb1:	mov    rdi,QWORD PTR [rbx+0x10]
   140024fb5:	xor    ebp,ebp
   140024fb7:	lea    rdx,[rdi+0x1]
   140024fbb:	add    rdx,QWORD PTR [rsi+0x10]
   140024fbf:	cmp    rdi,rdx
   140024fc2:	ja     0x140024ff0
   140024fc4:	cmp    QWORD PTR [rbx+0x18],rdx
   140024fc8:	je     0x140024ff0
   140024fca:	mov    r8b,0x1
   140024fcd:	mov    rcx,rbx
   140024fd0:	call   0x14000c264
   140024fd5:	test   al,al
   140024fd7:	je     0x140024ff0
   140024fd9:	cmp    QWORD PTR [rbx+0x18],0x8
   140024fde:	mov    QWORD PTR [rbx+0x10],rdi
   140024fe2:	jb     0x140024fe9
   140024fe4:	mov    rax,QWORD PTR [rbx]
   140024fe7:	jmp    0x140024fec
   140024fe9:	mov    rax,rbx
   140024fec:	mov    WORD PTR [rax+rdi*2],bp
   140024ff0:	cmp    QWORD PTR [rbx+0x10],rbp
   140024ff4:	je     0x140025003
   140024ff6:	mov    edx,0x5c
   140024ffb:	mov    rcx,rbx
   140024ffe:	call   0x14001a46c
   140025003:	or     r9,0xffffffffffffffff
   140025007:	xor    r8d,r8d
   14002500a:	mov    rdx,rsi
   14002500d:	mov    rcx,rbx
   140025010:	call   0x14000f3bc
   140025015:	mov    rbp,QWORD PTR [rsp+0x38]
   14002501a:	mov    rax,rbx
   14002501d:	mov    rbx,QWORD PTR [rsp+0x30]
   140025022:	mov    rsi,QWORD PTR [rsp+0x40]
   140025027:	add    rsp,0x20
   14002502b:	pop    rdi
   14002502c:	ret    
   14002502d:	int3   
   14002502e:	int3   
   14002502f:	int3   
   140025030:	rex push rbx
   140025032:	sub    rsp,0x30
   140025036:	xor    eax,eax
   140025038:	mov    QWORD PTR [rdx+0x18],0x7
   140025040:	mov    QWORD PTR [rdx+0x10],rax
   140025044:	mov    rbx,rdx
   140025047:	mov    WORD PTR [rdx],ax
   14002504a:	or     r9,0xffffffffffffffff
   14002504e:	mov    rdx,rcx
   140025051:	mov    DWORD PTR [rsp+0x20],eax
   140025055:	mov    rcx,rbx
   140025058:	xor    r8d,r8d
   14002505b:	call   0x14000b850
   140025060:	mov    rax,rbx
   140025063:	add    rsp,0x30
   140025067:	pop    rbx
   140025068:	ret    
   140025069:	int3   
   14002506a:	int3   
   14002506b:	int3   
   14002506c:	cmp    QWORD PTR [rcx+0x10],0x0
   140025071:	sete   al
   140025074:	ret    
   140025075:	int3   
   140025076:	int3   
   140025077:	int3   
   140025078:	mov    QWORD PTR [rsp+0x10],rbx
   14002507d:	mov    QWORD PTR [rsp+0x18],rsi
   140025082:	push   rdi
   140025083:	sub    rsp,0x50
   140025087:	mov    rax,QWORD PTR [rip+0x4bfc2]        # 0x140071050
   14002508e:	xor    rax,rsp
   140025091:	mov    QWORD PTR [rsp+0x40],rax
   140025096:	mov    rdi,rcx
   140025099:	call   0x1400252f4
   14002509e:	mov    rax,QWORD PTR [rdi+0x10]
   1400250a2:	xor    esi,esi
   1400250a4:	test   rax,rax
   1400250a7:	je     0x1400250e4
   1400250a9:	cmp    QWORD PTR [rdi+0x18],0x8
   1400250ae:	jb     0x1400250b5
   1400250b0:	mov    rcx,QWORD PTR [rdi]
   1400250b3:	jmp    0x1400250b8
   1400250b5:	mov    rcx,rdi
   1400250b8:	cmp    WORD PTR [rcx+rax*2-0x2],0x5c
   1400250be:	jne    0x1400250e4
   1400250c0:	lea    rcx,[rax-0x1]
   1400250c4:	cmp    rax,rcx
   1400250c7:	jb     0x1400251ca
   1400250cd:	mov    QWORD PTR [rdi+0x10],rcx
   1400250d1:	cmp    QWORD PTR [rdi+0x18],0x8
   1400250d6:	jb     0x1400250dd
   1400250d8:	mov    rax,QWORD PTR [rdi]
   1400250db:	jmp    0x1400250e0
   1400250dd:	mov    rax,rdi
   1400250e0:	mov    WORD PTR [rax+rcx*2],si
   1400250e4:	cmp    QWORD PTR [rdi+0x10],rsi
   1400250e8:	je     0x140025172
   1400250ee:	cmp    QWORD PTR [rdi+0x18],0x8
   1400250f3:	jb     0x1400250fa
   1400250f5:	mov    rax,QWORD PTR [rdi]
   1400250f8:	jmp    0x1400250fd
   1400250fa:	mov    rax,rdi
   1400250fd:	cmp    WORD PTR [rax],0x5c
   140025101:	jne    0x140025172
   140025103:	lea    rcx,[rsp+0x20]
   140025108:	call   0x1400251d8
   14002510d:	cmp    QWORD PTR [rax+0x18],0x8
   140025112:	mov    r9,QWORD PTR [rax+0x10]
   140025116:	jb     0x14002511b
   140025118:	mov    rax,QWORD PTR [rax]
   14002511b:	xor    r8d,r8d
   14002511e:	mov    rdx,rax
   140025121:	mov    rcx,rdi
   140025124:	call   0x140018f1c
   140025129:	xor    r8d,r8d
   14002512c:	lea    rcx,[rsp+0x20]
   140025131:	mov    dl,0x1
   140025133:	mov    rbx,rax
   140025136:	call   0x14000b6b0
   14002513b:	test   rbx,rbx
   14002513e:	je     0x140025172
   140025140:	cmp    QWORD PTR [rdi+0x18],0x8
   140025145:	jb     0x14002514c
   140025147:	mov    rdx,QWORD PTR [rdi]
   14002514a:	jmp    0x14002514f
   14002514c:	mov    rdx,rdi
   14002514f:	cmp    QWORD PTR [rdi+0x18],0x8
   140025154:	jb     0x14002515b
   140025156:	mov    rax,QWORD PTR [rdi]
   140025159:	jmp    0x14002515e
   14002515b:	mov    rax,rdi
   14002515e:	sub    rdx,rax
   140025161:	mov    r8d,0x1
   140025167:	sar    rdx,1
   14002516a:	mov    rcx,rdi
   14002516d:	call   0x14000c2e8
   140025172:	lea    rcx,[rsp+0x20]
   140025177:	call   0x1400251d8
   14002517c:	mov    rdx,rax
   14002517f:	mov    rcx,rdi
   140025182:	call   0x14001ace8
   140025187:	xor    r8d,r8d
   14002518a:	lea    rcx,[rsp+0x20]
   14002518f:	mov    dl,0x1
   140025191:	mov    bl,al
   140025193:	call   0x14000b6b0
   140025198:	test   bl,bl
   14002519a:	je     0x1400251ad
   14002519c:	cmp    QWORD PTR [rdi+0x18],0x8
   1400251a1:	mov    QWORD PTR [rdi+0x10],rsi
   1400251a5:	jb     0x1400251aa
   1400251a7:	mov    rdi,QWORD PTR [rdi]
   1400251aa:	mov    WORD PTR [rdi],si
   1400251ad:	mov    rcx,QWORD PTR [rsp+0x40]
   1400251b2:	xor    rcx,rsp
   1400251b5:	call   0x140025df0
   1400251ba:	mov    rbx,QWORD PTR [rsp+0x68]
   1400251bf:	mov    rsi,QWORD PTR [rsp+0x70]
   1400251c4:	add    rsp,0x50
   1400251c8:	pop    rdi
   1400251c9:	ret    
   1400251ca:	lea    rcx,[rip+0x3dc7f]        # 0x140062e50
   1400251d1:	call   0x140027a70
   1400251d6:	int3   
   1400251d7:	int3   
   1400251d8:	rex push rbx
   1400251da:	sub    rsp,0x30
   1400251de:	xor    eax,eax
   1400251e0:	mov    QWORD PTR [rcx+0x18],0x7
   1400251e8:	mov    QWORD PTR [rcx+0x10],rax
   1400251ec:	mov    rbx,rcx
   1400251ef:	mov    WORD PTR [rcx],ax
   1400251f2:	lea    rcx,[rip+0x291a7]        # 0x14004e3a0
   1400251f9:	mov    DWORD PTR [rsp+0x20],eax
   1400251fd:	call   0x140031108
   140025202:	mov    r8,rax
   140025205:	lea    rdx,[rip+0x29194]        # 0x14004e3a0
   14002520c:	mov    rcx,rbx
   14002520f:	call   0x14000b730
   140025214:	mov    rax,rbx
   140025217:	add    rsp,0x30
   14002521b:	pop    rbx
   14002521c:	ret    
   14002521d:	int3   
   14002521e:	int3   
   14002521f:	int3   
   140025220:	rex push rbx
   140025222:	sub    rsp,0x20
   140025226:	cmp    QWORD PTR [rcx+0x10],0x0
   14002522b:	mov    rbx,rcx
   14002522e:	jne    0x140025234
   140025230:	xor    al,al
   140025232:	jmp    0x14002525b
   140025234:	call   0x140025288
   140025239:	test   al,al
   14002523b:	mov    eax,0x1
   140025240:	jne    0x14002525b
   140025242:	cmp    QWORD PTR [rbx+0x10],rax
   140025246:	jbe    0x140025259
   140025248:	cmp    QWORD PTR [rbx+0x18],0x8
   14002524d:	jb     0x140025252
   14002524f:	mov    rbx,QWORD PTR [rbx]
   140025252:	cmp    WORD PTR [rbx+0x2],0x3a
   140025257:	je     0x14002525b
   140025259:	xor    eax,eax
   14002525b:	add    rsp,0x20
   14002525f:	pop    rbx
   140025260:	ret    
   140025261:	int3   
   140025262:	int3   
   140025263:	int3   
   140025264:	rex push rbx
   140025266:	sub    rsp,0x20
   14002526a:	xor    ebx,ebx
   14002526c:	cmp    QWORD PTR [rcx+0x10],rbx
   140025270:	jne    0x140025276
   140025272:	xor    al,al
   140025274:	jmp    0x140025280
   140025276:	call   0x140025220
   14002527b:	test   al,al
   14002527d:	sete   al
   140025280:	add    rsp,0x20
   140025284:	pop    rbx
   140025285:	ret    
   140025286:	int3   
   140025287:	int3   
   140025288:	rex push rbx
   14002528a:	sub    rsp,0x50
   14002528e:	mov    rax,QWORD PTR [rip+0x4bdbb]        # 0x140071050
   140025295:	xor    rax,rsp
   140025298:	mov    QWORD PTR [rsp+0x40],rax
   14002529d:	mov    rbx,rcx
   1400252a0:	lea    rcx,[rsp+0x20]
   1400252a5:	call   0x1400251d8
   1400252aa:	cmp    QWORD PTR [rax+0x18],0x8
   1400252af:	mov    r9,QWORD PTR [rax+0x10]
   1400252b3:	jb     0x1400252b8
   1400252b5:	mov    rax,QWORD PTR [rax]
   1400252b8:	xor    r8d,r8d
   1400252bb:	mov    rdx,rax
   1400252be:	mov    rcx,rbx
   1400252c1:	call   0x140018f1c
   1400252c6:	xor    r8d,r8d
   1400252c9:	lea    rcx,[rsp+0x20]
   1400252ce:	mov    dl,0x1
   1400252d0:	mov    rbx,rax
   1400252d3:	call   0x14000b6b0
   1400252d8:	test   rbx,rbx
   1400252db:	sete   al
   1400252de:	mov    rcx,QWORD PTR [rsp+0x40]
   1400252e3:	xor    rcx,rsp
   1400252e6:	call   0x140025df0
   1400252eb:	add    rsp,0x50
   1400252ef:	pop    rbx
   1400252f0:	ret    
   1400252f1:	int3   
   1400252f2:	int3   
   1400252f3:	int3   
   1400252f4:	cmp    QWORD PTR [rcx+0x18],0x8
   1400252f9:	jb     0x140025300
   1400252fb:	mov    rdx,QWORD PTR [rcx]
   1400252fe:	jmp    0x140025303
   140025300:	mov    rdx,rcx
   140025303:	cmp    QWORD PTR [rcx+0x18],0x8
   140025308:	mov    rax,QWORD PTR [rcx+0x10]
   14002530c:	lea    rax,[rdx+rax*2]
   140025310:	jb     0x140025315
   140025312:	mov    rcx,QWORD PTR [rcx]
   140025315:	xor    edx,edx
   140025317:	mov    r8,rax
   14002531a:	sub    r8,rcx
   14002531d:	inc    r8
   140025320:	shr    r8,1
   140025323:	cmp    rcx,rax
   140025326:	cmova  r8,rdx
   14002532a:	test   r8,r8
   14002532d:	je     0x140025349
   14002532f:	cmp    WORD PTR [rcx],0x2f
   140025333:	jne    0x14002533d
   140025335:	mov    eax,0x5c
   14002533a:	mov    WORD PTR [rcx],ax
   14002533d:	add    rcx,0x2
   140025341:	inc    rdx
   140025344:	cmp    rdx,r8
   140025347:	jne    0x14002532f
   140025349:	ret    
   14002534a:	int3   
   14002534b:	int3   
   14002534c:	mov    QWORD PTR [rsp+0x8],rcx
   140025351:	push   rbx
   140025352:	sub    rsp,0x30
   140025356:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002535f:	mov    rbx,rcx
   140025362:	and    DWORD PTR [rcx],0x0
   140025365:	add    rcx,0x8
   140025369:	call   0x140024e0c
   14002536e:	nop
   14002536f:	lea    rcx,[rbx+0x28]
   140025373:	xor    edx,edx
   140025375:	lea    r8d,[rdx+0x24]
   140025379:	call   0x14002a910
   14002537e:	mov    rcx,rbx
   140025381:	call   0x140025680
   140025386:	nop
   140025387:	mov    rax,rbx
   14002538a:	add    rsp,0x30
   14002538e:	pop    rbx
   14002538f:	ret    
   140025390:	mov    rax,rsp
   140025393:	mov    QWORD PTR [rax+0x8],rcx
   140025397:	push   rdi
   140025398:	sub    rsp,0x30
   14002539c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400253a4:	mov    QWORD PTR [rax+0x10],rbx
   1400253a8:	mov    QWORD PTR [rax+0x18],rsi
   1400253ac:	mov    rdi,r8
   1400253af:	mov    rbx,rdx
   1400253b2:	mov    rsi,rcx
   1400253b5:	add    rcx,0x8
   1400253b9:	call   0x140024e0c
   1400253be:	nop
   1400253bf:	mov    rcx,rbx
   1400253c2:	call   0x14002506c
   1400253c7:	test   al,al
   1400253c9:	sete   cl
   1400253cc:	mov    r9d,0x14
   1400253d2:	lea    r8,[rip+0x29077]        # 0x14004e450
   1400253d9:	lea    rdx,[rip+0x27370]        # 0x14004c750
   1400253e0:	call   0x1400209ec
   1400253e5:	mov    eax,DWORD PTR [rdi]
   1400253e7:	mov    DWORD PTR [rsi+0x28],eax
   1400253ea:	mov    rax,QWORD PTR [rdi+0x4]
   1400253ee:	mov    QWORD PTR [rsi+0x2c],rax
   1400253f2:	mov    rax,QWORD PTR [rdi+0xc]
   1400253f6:	mov    QWORD PTR [rsi+0x34],rax
   1400253fa:	mov    rax,QWORD PTR [rdi+0x14]
   1400253fe:	mov    QWORD PTR [rsi+0x3c],rax
   140025402:	mov    eax,DWORD PTR [rdi+0x1c]
   140025405:	mov    DWORD PTR [rsi+0x44],eax
   140025408:	mov    eax,DWORD PTR [rdi+0x20]
   14002540b:	mov    DWORD PTR [rsi+0x48],eax
   14002540e:	mov    al,BYTE PTR [rsi+0x28]
   140025411:	and    al,0x10
   140025413:	neg    al
   140025415:	sbb    ecx,ecx
   140025417:	neg    ecx
   140025419:	inc    ecx
   14002541b:	mov    DWORD PTR [rsi],ecx
   14002541d:	mov    rax,rsi
   140025420:	mov    rbx,QWORD PTR [rsp+0x48]
   140025425:	mov    rsi,QWORD PTR [rsp+0x50]
   14002542a:	add    rsp,0x30
   14002542e:	pop    rdi
   14002542f:	ret    
   140025430:	mov    rax,rsp
   140025433:	push   rbp
   140025434:	lea    rbp,[rax-0x68]
   140025438:	sub    rsp,0x160
   14002543f:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140025448:	mov    QWORD PTR [rax+0x10],rbx
   14002544c:	mov    QWORD PTR [rax+0x18],rsi
   140025450:	mov    QWORD PTR [rax+0x20],rdi
   140025454:	mov    rax,QWORD PTR [rip+0x4bbf5]        # 0x140071050
   14002545b:	xor    rax,rsp
   14002545e:	mov    QWORD PTR [rbp+0x50],rax
   140025462:	mov    rdi,rcx
   140025465:	xor    esi,esi
   140025467:	cmp    DWORD PTR [rcx],esi
   140025469:	setne  cl
   14002546c:	lea    r9d,[rsi+0x3e]
   140025470:	lea    r8,[rip+0x28fd9]        # 0x14004e450
   140025477:	lea    rdx,[rip+0x280ba]        # 0x14004d538
   14002547e:	call   0x140020948
   140025483:	mov    ecx,DWORD PTR [rdi]
   140025485:	sub    ecx,0x1
   140025488:	je     0x140025590
   14002548e:	cmp    ecx,0x1
   140025491:	jne    0x14002560c
   140025497:	mov    QWORD PTR [rsp+0x68],0x7
   1400254a0:	mov    QWORD PTR [rsp+0x60],rsi
   1400254a5:	mov    WORD PTR [rsp+0x50],si
   1400254aa:	lea    rcx,[rip+0x28fd3]        # 0x14004e484
   1400254b1:	call   0x140031108
   1400254b6:	mov    r8,rax
   1400254b9:	lea    rdx,[rip+0x28fc4]        # 0x14004e484
   1400254c0:	lea    rcx,[rsp+0x50]
   1400254c5:	call   0x14000b730
   1400254ca:	nop
   1400254cb:	lea    r8,[rsp+0x50]
   1400254d0:	lea    rdx,[rdi+0x8]
   1400254d4:	lea    rcx,[rsp+0x30]
   1400254d9:	call   0x1400247e4
   1400254de:	nop
   1400254df:	xor    r8d,r8d
   1400254e2:	mov    dl,0x1
   1400254e4:	lea    rcx,[rsp+0x50]
   1400254e9:	call   0x14000b6b0
   1400254ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400254f3:	jmp    0x140025501
   1400254f5:	mov    rcx,rbx
   1400254f8:	call   0x140025430
   1400254fd:	add    rbx,0x50
   140025501:	cmp    rbx,QWORD PTR [rsp+0x38]
   140025506:	jne    0x1400254f5
   140025508:	lea    rdx,[rsp+0x70]
   14002550d:	lea    rcx,[rdi+0x8]
   140025511:	call   0x140025030
   140025516:	cmp    QWORD PTR [rax+0x18],0x8
   14002551b:	jb     0x140025520
   14002551d:	mov    rax,QWORD PTR [rax]
   140025520:	mov    rcx,rax
   140025523:	call   QWORD PTR [rip+0x25c27]        # 0x14004b150
   140025529:	xor    esi,esi
   14002552b:	test   eax,eax
   14002552d:	sete   bl
   140025530:	xor    r8d,r8d
   140025533:	mov    dl,0x1
   140025535:	lea    rcx,[rsp+0x70]
   14002553a:	call   0x14000b6b0
   14002553f:	test   bl,bl
   140025541:	je     0x140025584
   140025543:	call   QWORD PTR [rip+0x25b97]        # 0x14004b0e0
   140025549:	movzx  edx,ax
   14002554c:	or     edx,0x80070000
   140025552:	test   eax,eax
   140025554:	cmovle edx,eax
   140025557:	mov    DWORD PTR [rsp+0x20],0x1
   14002555f:	lea    r9d,[rsi+0x54]
   140025563:	lea    r8,[rip+0x28ee6]        # 0x14004e450
   14002556a:	lea    rcx,[rbp-0x70]
   14002556e:	call   0x14001ecc0
   140025573:	lea    rdx,[rip+0x4a88e]        # 0x14006fe08
   14002557a:	lea    rcx,[rbp-0x70]
   14002557e:	call   0x14002ab88
   140025583:	nop
   140025584:	lea    rcx,[rsp+0x30]
   140025589:	call   0x140024c54
   14002558e:	jmp    0x14002560c
   140025590:	lea    rcx,[rdi+0x8]
   140025594:	lea    rdx,[rsp+0x70]
   140025599:	call   0x140025030
   14002559e:	cmp    QWORD PTR [rax+0x18],0x8
   1400255a3:	jb     0x1400255a8
   1400255a5:	mov    rax,QWORD PTR [rax]
   1400255a8:	mov    rcx,rax
   1400255ab:	call   QWORD PTR [rip+0x25baf]        # 0x14004b160
   1400255b1:	test   eax,eax
   1400255b3:	sete   bl
   1400255b6:	xor    r8d,r8d
   1400255b9:	mov    dl,0x1
   1400255bb:	lea    rcx,[rsp+0x70]
   1400255c0:	call   0x14000b6b0
   1400255c5:	test   bl,bl
   1400255c7:	je     0x14002560c
   1400255c9:	call   QWORD PTR [rip+0x25b11]        # 0x14004b0e0
   1400255cf:	movzx  edx,ax
   1400255d2:	or     edx,0x80070000
   1400255d8:	test   eax,eax
   1400255da:	cmovle edx,eax
   1400255dd:	mov    DWORD PTR [rsp+0x20],0x1
   1400255e5:	mov    r9d,0x46
   1400255eb:	lea    r8,[rip+0x28e5e]        # 0x14004e450
   1400255f2:	lea    rcx,[rbp-0x70]
   1400255f6:	call   0x14001ecc0
   1400255fb:	lea    rdx,[rip+0x4a806]        # 0x14006fe08
   140025602:	lea    rcx,[rbp-0x70]
   140025606:	call   0x14002ab88
   14002560b:	int3   
   14002560c:	mov    DWORD PTR [rdi],esi
   14002560e:	lea    rcx,[rdi+0x28]
   140025612:	xor    edx,edx
   140025614:	lea    r8d,[rdx+0x24]
   140025618:	call   0x14002a910
   14002561d:	mov    rcx,QWORD PTR [rbp+0x50]
   140025621:	xor    rcx,rsp
   140025624:	call   0x140025df0
   140025629:	lea    r11,[rsp+0x160]
   140025631:	mov    rbx,QWORD PTR [r11+0x18]
   140025635:	mov    rsi,QWORD PTR [r11+0x20]
   140025639:	mov    rdi,QWORD PTR [r11+0x28]
   14002563d:	mov    rsp,r11
   140025640:	pop    rbp
   140025641:	ret    
   140025642:	int3   
   140025643:	int3   
   140025644:	cmp    DWORD PTR [rcx],0x0
   140025647:	setne  al
   14002564a:	ret    
   14002564b:	int3   
   14002564c:	rex push rbx
   14002564e:	sub    rsp,0x30
   140025652:	and    DWORD PTR [rsp+0x20],0x0
   140025657:	mov    rbx,rdx
   14002565a:	lea    rdx,[rcx+0x8]
   14002565e:	mov    rcx,rbx
   140025661:	call   0x140024e0c
   140025666:	mov    rax,rbx
   140025669:	add    rsp,0x30
   14002566d:	pop    rbx
   14002566e:	ret    
   14002566f:	int3   
   140025670:	cmp    DWORD PTR [rcx],0x2
   140025673:	sete   al
   140025676:	ret    
   140025677:	int3   
   140025678:	cmp    DWORD PTR [rcx],0x1
   14002567b:	sete   al
   14002567e:	ret    
   14002567f:	int3   
   140025680:	mov    QWORD PTR [rsp+0x10],rbx
   140025685:	mov    QWORD PTR [rsp+0x18],rsi
   14002568a:	push   rdi
   14002568b:	sub    rsp,0x50
   14002568f:	mov    rax,QWORD PTR [rip+0x4b9ba]        # 0x140071050
   140025696:	xor    rax,rsp
   140025699:	mov    QWORD PTR [rsp+0x40],rax
   14002569e:	mov    rdi,rcx
   1400256a1:	add    rcx,0x8
   1400256a5:	call   0x14002506c
   1400256aa:	test   al,al
   1400256ac:	lea    r8,[rip+0x28d9d]        # 0x14004e450
   1400256b3:	mov    r9d,0x28
   1400256b9:	lea    rdx,[rip+0x27e78]        # 0x14004d538
   1400256c0:	sete   cl
   1400256c3:	call   0x140020948
   1400256c8:	lea    rdx,[rsp+0x20]
   1400256cd:	lea    rcx,[rdi+0x8]
   1400256d1:	call   0x140025030
   1400256d6:	cmp    QWORD PTR [rax+0x18],0x8
   1400256db:	jb     0x1400256e0
   1400256dd:	mov    rax,QWORD PTR [rax]
   1400256e0:	lea    rsi,[rdi+0x28]
   1400256e4:	xor    edx,edx
   1400256e6:	mov    r8,rsi
   1400256e9:	mov    rcx,rax
   1400256ec:	call   QWORD PTR [rip+0x25a66]        # 0x14004b158
   1400256f2:	xor    r8d,r8d
   1400256f5:	lea    rcx,[rsp+0x20]
   1400256fa:	mov    dl,0x1
   1400256fc:	mov    ebx,eax
   1400256fe:	call   0x14000b6b0
   140025703:	test   ebx,ebx
   140025705:	jne    0x140025719
   140025707:	and    DWORD PTR [rdi],ebx
   140025709:	lea    r8d,[rbx+0x24]
   14002570d:	xor    edx,edx
   14002570f:	mov    rcx,rsi
   140025712:	call   0x14002a910
   140025717:	jmp    0x140025727
   140025719:	mov    al,BYTE PTR [rsi]
   14002571b:	and    al,0x10
   14002571d:	neg    al
   14002571f:	sbb    ecx,ecx
   140025721:	neg    ecx
   140025723:	inc    ecx
   140025725:	mov    DWORD PTR [rdi],ecx
   140025727:	mov    rcx,QWORD PTR [rsp+0x40]
   14002572c:	xor    rcx,rsp
   14002572f:	call   0x140025df0
   140025734:	mov    rbx,QWORD PTR [rsp+0x68]
   140025739:	mov    rsi,QWORD PTR [rsp+0x70]
   14002573e:	add    rsp,0x50
   140025742:	pop    rdi
   140025743:	ret    
   140025744:	rex push rbx
   140025746:	sub    rsp,0x20
   14002574a:	mov    rbx,rcx
   14002574d:	mov    rax,rdx
   140025750:	lea    rcx,[rip+0x25ff1]        # 0x14004b748
   140025757:	mov    QWORD PTR [rbx],rcx
   14002575a:	lea    rdx,[rbx+0x8]
   14002575e:	xor    ecx,ecx
   140025760:	mov    QWORD PTR [rdx],rcx
   140025763:	mov    QWORD PTR [rdx+0x8],rcx
   140025767:	lea    rcx,[rax+0x8]
   14002576b:	call   0x140028f04
   140025770:	lea    rax,[rip+0x28d19]        # 0x14004e490
   140025777:	mov    QWORD PTR [rbx],rax
   14002577a:	mov    rax,rbx
   14002577d:	add    rsp,0x20
   140025781:	pop    rbx
   140025782:	ret    
   140025783:	int3   
   140025784:	sub    rsp,0x48
   140025788:	test   rdx,rdx
   14002578b:	je     0x140025797
   14002578d:	mov    rcx,rdx
   140025790:	call   0x140032ff4
   140025795:	jmp    0x140025799
   140025797:	xor    eax,eax
   140025799:	test   rax,rax
   14002579c:	je     0x1400257a3
   14002579e:	add    rsp,0x48
   1400257a2:	ret    
   1400257a3:	mov    QWORD PTR [rsp+0x30],rax
   1400257a8:	lea    rdx,[rip+0x4a3d9]        # 0x14006fb88
   1400257af:	lea    rax,[rip+0x28cea]        # 0x14004e4a0
   1400257b6:	mov    QWORD PTR [rsp+0x28],rax
   1400257bb:	lea    rcx,[rsp+0x20]
   1400257c0:	lea    rax,[rip+0x28cc9]        # 0x14004e490
   1400257c7:	mov    QWORD PTR [rsp+0x20],rax
   1400257cc:	call   0x14002ab88
   1400257d1:	int3   
   1400257d2:	int3   
   1400257d3:	int3   
   1400257d4:	sub    rsp,0x48
   1400257d8:	mov    rax,rdx
   1400257db:	mov    rcx,rdx
   1400257de:	test   r9,r9
   1400257e1:	jne    0x1400257ea
   1400257e3:	call   0x1400304c4
   1400257e8:	jmp    0x1400257fc
   1400257ea:	mov    rdx,r9
   1400257ed:	call   0x14002c764
   1400257f2:	test   rax,rax
   1400257f5:	je     0x1400257fc
   1400257f7:	add    rsp,0x48
   1400257fb:	ret    
   1400257fc:	xor    eax,eax
   1400257fe:	lea    rdx,[rip+0x4a383]        # 0x14006fb88
   140025805:	mov    QWORD PTR [rsp+0x30],rax
   14002580a:	lea    rcx,[rsp+0x20]
   14002580f:	lea    rax,[rip+0x28c8a]        # 0x14004e4a0
   140025816:	mov    QWORD PTR [rsp+0x28],rax
   14002581b:	lea    rax,[rip+0x28c6e]        # 0x14004e490
   140025822:	mov    QWORD PTR [rsp+0x20],rax
   140025827:	call   0x14002ab88
   14002582c:	int3   
   14002582d:	int3   
   14002582e:	int3   
   14002582f:	int3   
   140025830:	mov    QWORD PTR [rsp+0x10],rbx
   140025835:	push   rbp
   140025836:	mov    rbp,rsp
   140025839:	sub    rsp,0x40
   14002583d:	mov    rax,QWORD PTR [rip+0x4b80c]        # 0x140071050
   140025844:	xor    rax,rsp
   140025847:	mov    QWORD PTR [rbp-0x8],rax
   14002584b:	mov    rax,QWORD PTR [rdx]
   14002584e:	mov    rbx,rcx
   140025851:	mov    DWORD PTR [rbp-0x20],eax
   140025854:	lea    rdx,[rbp-0x18]
   140025858:	shr    rax,0x20
   14002585c:	lea    rcx,[rbp-0x20]
   140025860:	mov    DWORD PTR [rbp-0x1c],eax
   140025863:	call   QWORD PTR [rip+0x25957]        # 0x14004b1c0
   140025869:	test   eax,eax
   14002586b:	jne    0x14002587c
   14002586d:	xor    edx,edx
   14002586f:	lea    r8d,[rax+0x10]
   140025873:	lea    rcx,[rbp-0x18]
   140025877:	call   0x14002a910
   14002587c:	movzx  eax,WORD PTR [rbp-0x18]
   140025880:	mov    WORD PTR [rbx],ax
   140025883:	movzx  eax,WORD PTR [rbp-0x16]
   140025887:	mov    WORD PTR [rbx+0x2],ax
   14002588b:	movzx  eax,WORD PTR [rbp-0x14]
   14002588f:	mov    WORD PTR [rbx+0x4],ax
   140025893:	movzx  eax,WORD PTR [rbp-0x12]
   140025897:	mov    WORD PTR [rbx+0x6],ax
   14002589b:	movzx  eax,WORD PTR [rbp-0x10]
   14002589f:	mov    WORD PTR [rbx+0x8],ax
   1400258a3:	movzx  eax,WORD PTR [rbp-0xe]
   1400258a7:	mov    WORD PTR [rbx+0xa],ax
   1400258ab:	movzx  eax,WORD PTR [rbp-0xc]
   1400258af:	mov    WORD PTR [rbx+0xc],ax
   1400258b3:	movzx  eax,WORD PTR [rbp-0xa]
   1400258b7:	mov    WORD PTR [rbx+0xe],ax
   1400258bb:	mov    rcx,QWORD PTR [rbp-0x8]
   1400258bf:	xor    rcx,rsp
   1400258c2:	call   0x140025df0
   1400258c7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400258cc:	add    rsp,0x40
   1400258d0:	pop    rbp
   1400258d1:	ret    
   1400258d2:	int3   
   1400258d3:	int3   
   1400258d4:	mov    rax,rsp
   1400258d7:	push   rbp
   1400258d8:	lea    rbp,[rax-0x198]
   1400258df:	sub    rsp,0x290
   1400258e6:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   1400258ef:	mov    QWORD PTR [rax+0x8],rbx
   1400258f3:	mov    rax,QWORD PTR [rip+0x4b756]        # 0x140071050
   1400258fa:	xor    rax,rsp
   1400258fd:	mov    QWORD PTR [rbp+0x180],rax
   140025904:	mov    ebx,0x114
   140025909:	mov    r8d,ebx
   14002590c:	xor    edx,edx
   14002590e:	lea    rcx,[rbp+0x60]
   140025912:	call   0x14002a910
   140025917:	mov    DWORD PTR [rbp+0x60],ebx
   14002591a:	lea    rcx,[rbp+0x60]
   14002591e:	call   QWORD PTR [rip+0x258a4]        # 0x14004b1c8
   140025924:	test   eax,eax
   140025926:	jne    0x1400259b3
   14002592c:	call   QWORD PTR [rip+0x257ae]        # 0x14004b0e0
   140025932:	mov    ebx,eax
   140025934:	mov    edx,0x2
   140025939:	lea    r8d,[rdx-0x1]
   14002593d:	lea    rcx,[rsp+0x58]
   140025942:	call   0x14000be9c
   140025947:	nop
   140025948:	lea    rdx,[rip+0x28b89]        # 0x14004e4d8
   14002594f:	lea    rcx,[rsp+0x58]
   140025954:	call   0x140010488
   140025959:	mov    edx,ebx
   14002595b:	lea    rcx,[rsp+0x58]
   140025960:	call   0x14000e4d0
   140025965:	lea    rdx,[rbp+0x40]
   140025969:	lea    rcx,[rsp+0x58]
   14002596e:	call   0x14000a950
   140025973:	nop
   140025974:	lea    rdx,[rbp+0x40]
   140025978:	xor    ecx,ecx
   14002597a:	call   0x14001a654
   14002597f:	nop
   140025980:	xor    r8d,r8d
   140025983:	mov    dl,0x1
   140025985:	lea    rcx,[rbp+0x40]
   140025989:	call   0x14000b6b0
   14002598e:	nop
   14002598f:	lea    rcx,[rbp-0x20]
   140025993:	call   0x14000a9dc
   140025998:	nop
   140025999:	lea    rax,[rip+0x25f78]        # 0x14004b918
   1400259a0:	mov    QWORD PTR [rbp-0x20],rax
   1400259a4:	lea    rcx,[rbp-0x20]
   1400259a8:	call   0x140027b0c
   1400259ad:	nop
   1400259ae:	jmp    0x140025bb0
   1400259b3:	xor    edx,edx
   1400259b5:	lea    r8d,[rdx+0x30]
   1400259b9:	lea    rcx,[rsp+0x20]
   1400259be:	call   0x14002a910
   1400259c3:	lea    rcx,[rsp+0x20]
   1400259c8:	call   QWORD PTR [rip+0x257e2]        # 0x14004b1b0
   1400259ce:	mov    edx,0x2
   1400259d3:	mov    eax,DWORD PTR [rbp+0x64]
   1400259d6:	cmp    eax,0x4
   1400259d9:	jne    0x1400259ec
   1400259db:	cmp    DWORD PTR [rbp+0x70],0x1
   1400259df:	jne    0x140025b1a
   1400259e5:	xor    eax,eax
   1400259e7:	jmp    0x140025bb3
   1400259ec:	cmp    eax,0x5
   1400259ef:	jne    0x140025a36
   1400259f1:	mov    eax,DWORD PTR [rbp+0x68]
   1400259f4:	test   eax,eax
   1400259f6:	jne    0x140025a02
   1400259f8:	mov    eax,0x1
   1400259fd:	jmp    0x140025bb3
   140025a02:	cmp    eax,0x1
   140025a05:	jne    0x140025a0e
   140025a07:	mov    eax,edx
   140025a09:	jmp    0x140025bb3
   140025a0e:	cmp    eax,edx
   140025a10:	jne    0x140025b1a
   140025a16:	mov    eax,0x9
   140025a1b:	cmp    WORD PTR [rsp+0x20],ax
   140025a20:	je     0x140025a2c
   140025a22:	lea    ecx,[rax-0x3]
   140025a25:	cmp    WORD PTR [rsp+0x20],cx
   140025a2a:	jne    0x140025a07
   140025a2c:	mov    eax,0x3
   140025a31:	jmp    0x140025bb3
   140025a36:	mov    ecx,0x6
   140025a3b:	cmp    eax,ecx
   140025a3d:	jne    0x140025ae8
   140025a43:	mov    r8d,DWORD PTR [rbp+0x68]
   140025a47:	test   r8d,r8d
   140025a4a:	jne    0x140025a6c
   140025a4c:	lea    eax,[rcx+0x3]
   140025a4f:	cmp    WORD PTR [rsp+0x20],ax
   140025a54:	je     0x140025a65
   140025a56:	cmp    WORD PTR [rsp+0x20],cx
   140025a5b:	je     0x140025a65
   140025a5d:	lea    eax,[rcx-0x1]
   140025a60:	jmp    0x140025bb3
   140025a65:	mov    eax,ecx
   140025a67:	jmp    0x140025bb3
   140025a6c:	cmp    r8d,0x1
   140025a70:	jne    0x140025a97
   140025a72:	lea    eax,[r8+0x8]
   140025a76:	cmp    WORD PTR [rsp+0x20],ax
   140025a7b:	je     0x140025a8d
   140025a7d:	cmp    WORD PTR [rsp+0x20],cx
   140025a82:	je     0x140025a8d
   140025a84:	lea    eax,[r8+0x6]
   140025a88:	jmp    0x140025bb3
   140025a8d:	mov    eax,0x8
   140025a92:	jmp    0x140025bb3
   140025a97:	cmp    r8d,edx
   140025a9a:	jne    0x140025abd
   140025a9c:	mov    eax,0x9
   140025aa1:	cmp    WORD PTR [rsp+0x20],ax
   140025aa6:	je     0x140025ab3
   140025aa8:	cmp    WORD PTR [rsp+0x20],cx
   140025aad:	jne    0x140025bb3
   140025ab3:	mov    eax,0xa
   140025ab8:	jmp    0x140025bb3
   140025abd:	cmp    r8d,0x3
   140025ac1:	jne    0x140025b1a
   140025ac3:	lea    eax,[r8+0x6]
   140025ac7:	cmp    WORD PTR [rsp+0x20],ax
   140025acc:	je     0x140025ade
   140025ace:	cmp    WORD PTR [rsp+0x20],cx
   140025ad3:	je     0x140025ade
   140025ad5:	lea    eax,[r8+0x8]
   140025ad9:	jmp    0x140025bb3
   140025ade:	mov    eax,0xc
   140025ae3:	jmp    0x140025bb3
   140025ae8:	cmp    eax,0xa
   140025aeb:	jne    0x140025b1a
   140025aed:	cmp    DWORD PTR [rbp+0x68],0x0
   140025af1:	jne    0x140025b1a
   140025af3:	mov    eax,0x9
   140025af8:	cmp    WORD PTR [rsp+0x20],ax
   140025afd:	je     0x140025b10
   140025aff:	cmp    WORD PTR [rsp+0x20],cx
   140025b04:	je     0x140025b10
   140025b06:	mov    eax,0xd
   140025b0b:	jmp    0x140025bb3
   140025b10:	mov    eax,0xe
   140025b15:	jmp    0x140025bb3
   140025b1a:	mov    r8d,0x1
   140025b20:	lea    rcx,[rsp+0x58]
   140025b25:	call   0x14000be9c
   140025b2a:	nop
   140025b2b:	lea    rdx,[rip+0x289de]        # 0x14004e510
   140025b32:	lea    rcx,[rsp+0x58]
   140025b37:	call   0x140010488
   140025b3c:	mov    edx,DWORD PTR [rbp+0x64]
   140025b3f:	lea    rcx,[rsp+0x58]
   140025b44:	call   0x14000e4d0
   140025b49:	lea    rdx,[rip+0x289f0]        # 0x14004e540
   140025b50:	lea    rcx,[rsp+0x58]
   140025b55:	call   0x140010488
   140025b5a:	mov    edx,DWORD PTR [rbp+0x68]
   140025b5d:	lea    rcx,[rsp+0x58]
   140025b62:	call   0x14000e4d0
   140025b67:	lea    rdx,[rbp+0x40]
   140025b6b:	lea    rcx,[rsp+0x58]
   140025b70:	call   0x14000a950
   140025b75:	nop
   140025b76:	lea    rdx,[rbp+0x40]
   140025b7a:	xor    ecx,ecx
   140025b7c:	call   0x14001a654
   140025b81:	nop
   140025b82:	xor    r8d,r8d
   140025b85:	mov    dl,0x1
   140025b87:	lea    rcx,[rbp+0x40]
   140025b8b:	call   0x14000b6b0
   140025b90:	nop
   140025b91:	lea    rcx,[rbp-0x20]
   140025b95:	call   0x14000a9dc
   140025b9a:	nop
   140025b9b:	lea    rax,[rip+0x25d76]        # 0x14004b918
   140025ba2:	mov    QWORD PTR [rbp-0x20],rax
   140025ba6:	lea    rcx,[rbp-0x20]
   140025baa:	call   0x140027b0c
   140025baf:	nop
   140025bb0:	or     eax,0xffffffff
   140025bb3:	mov    rcx,QWORD PTR [rbp+0x180]
   140025bba:	xor    rcx,rsp
   140025bbd:	call   0x140025df0
   140025bc2:	mov    rbx,QWORD PTR [rsp+0x2a0]
   140025bca:	add    rsp,0x290
   140025bd1:	pop    rbp
   140025bd2:	ret    
   140025bd3:	int3   
   140025bd4:	rex push rbx
   140025bd6:	sub    rsp,0x20
   140025bda:	mov    rbx,rcx
   140025bdd:	lea    rcx,[rsp+0x30]
   140025be2:	call   QWORD PTR [rip+0x255c0]        # 0x14004b1a8
   140025be8:	mov    eax,DWORD PTR [rsp+0x30]
   140025bec:	mov    DWORD PTR [rsp+0x38],eax
   140025bf0:	mov    eax,DWORD PTR [rsp+0x34]
   140025bf4:	mov    DWORD PTR [rsp+0x3c],eax
   140025bf8:	mov    rax,QWORD PTR [rsp+0x38]
   140025bfd:	mov    QWORD PTR [rbx],rax
   140025c00:	add    rsp,0x20
   140025c04:	pop    rbx
   140025c05:	ret    
   140025c06:	int3   
   140025c07:	int3   
   140025c08:	rex push rbx
   140025c0a:	sub    rsp,0x20
   140025c0e:	mov    rax,QWORD PTR [rcx]
   140025c11:	lea    rdx,[rsp+0x38]
   140025c16:	mov    DWORD PTR [rsp+0x30],eax
   140025c1a:	mov    rbx,rcx
   140025c1d:	shr    rax,0x20
   140025c21:	lea    rcx,[rsp+0x30]
   140025c26:	mov    DWORD PTR [rsp+0x34],eax
   140025c2a:	call   QWORD PTR [rip+0x25588]        # 0x14004b1b8
   140025c30:	test   eax,eax
   140025c32:	je     0x140025c4e
   140025c34:	mov    eax,DWORD PTR [rsp+0x38]
   140025c38:	mov    DWORD PTR [rsp+0x30],eax
   140025c3c:	mov    eax,DWORD PTR [rsp+0x3c]
   140025c40:	mov    DWORD PTR [rsp+0x34],eax
   140025c44:	mov    rax,QWORD PTR [rsp+0x30]
   140025c49:	mov    QWORD PTR [rbx],rax
   140025c4c:	mov    al,0x1
   140025c4e:	add    rsp,0x20
   140025c52:	pop    rbx
   140025c53:	ret    
   140025c54:	rex push rbx
   140025c56:	sub    rsp,0x20
   140025c5a:	mov    rbx,rcx
   140025c5d:	mov    ecx,0x28
   140025c62:	call   0x140026118
   140025c67:	mov    rcx,rax
   140025c6a:	mov    QWORD PTR [rbx],rax
   140025c6d:	call   QWORD PTR [rip+0x253fd]        # 0x14004b070
   140025c73:	mov    rax,rbx
   140025c76:	add    rsp,0x20
   140025c7a:	pop    rbx
   140025c7b:	ret    
   140025c7c:	rex push rbx
   140025c7e:	sub    rsp,0x20
   140025c82:	mov    rbx,rcx
   140025c85:	mov    rcx,QWORD PTR [rcx]
   140025c88:	call   QWORD PTR [rip+0x253ca]        # 0x14004b058
   140025c8e:	mov    rcx,QWORD PTR [rbx]
   140025c91:	mov    edx,0x28
   140025c96:	call   0x140026804
   140025c9b:	and    QWORD PTR [rbx],0x0
   140025c9f:	add    rsp,0x20
   140025ca3:	pop    rbx
   140025ca4:	ret    
   140025ca5:	int3   
   140025ca6:	int3   
   140025ca7:	int3   
   140025ca8:	mov    rcx,QWORD PTR [rcx]
   140025cab:	rex.W jmp QWORD PTR [rip+0x2546e]        # 0x14004b120
   140025cb2:	int3   
   140025cb3:	int3   
   140025cb4:	mov    rcx,QWORD PTR [rcx]
   140025cb7:	rex.W jmp QWORD PTR [rip+0x253aa]        # 0x14004b068
   140025cbe:	int3   
   140025cbf:	int3   
   140025cc0:	sub    rsp,0x28
   140025cc4:	mov    rcx,QWORD PTR [rcx]
   140025cc7:	mov    rcx,QWORD PTR [rcx]
   140025cca:	call   QWORD PTR [rip+0x253b0]        # 0x14004b080
   140025cd0:	test   eax,eax
   140025cd2:	sete   al
   140025cd5:	add    rsp,0x28
   140025cd9:	ret    
   140025cda:	int3   
   140025cdb:	int3   
   140025cdc:	rex push rbx
   140025cde:	sub    rsp,0x60
   140025ce2:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140025ceb:	mov    rax,QWORD PTR [rip+0x4b35e]        # 0x140071050
   140025cf2:	xor    rax,rsp
   140025cf5:	mov    QWORD PTR [rsp+0x58],rax
   140025cfa:	mov    rbx,rcx
   140025cfd:	mov    QWORD PTR [rsp+0x30],rcx
   140025d02:	xor    ecx,ecx
   140025d04:	mov    DWORD PTR [rsp+0x20],ecx
   140025d08:	test   edx,edx
   140025d0a:	je     0x140025d3d
   140025d0c:	lea    rax,[rip+0x269c5]        # 0x14004c6d8
   140025d13:	mov    QWORD PTR [rbx+0x8],rax
   140025d17:	lea    rax,[rip+0x25a2a]        # 0x14004b748
   140025d1e:	mov    QWORD PTR [rbx+0xa0],rax
   140025d25:	xor    eax,eax
   140025d27:	mov    QWORD PTR [rbx+0xa8],rax
   140025d2e:	mov    QWORD PTR [rbx+0xb0],rax
   140025d35:	mov    DWORD PTR [rsp+0x20],0x1
   140025d3d:	mov    QWORD PTR [rsp+0x50],0x7
   140025d46:	mov    QWORD PTR [rsp+0x48],rcx
   140025d4b:	mov    WORD PTR [rsp+0x38],cx
   140025d50:	lea    rcx,[rip+0x28ce9]        # 0x14004ea40
   140025d57:	call   0x140031108
   140025d5c:	mov    r8,rax
   140025d5f:	lea    rdx,[rip+0x28cda]        # 0x14004ea40
   140025d66:	lea    rcx,[rsp+0x38]
   140025d6b:	call   0x14000b730
   140025d70:	nop
   140025d71:	xor    r8d,r8d
   140025d74:	lea    rdx,[rsp+0x38]
   140025d79:	mov    rcx,rbx
   140025d7c:	call   0x140020608
   140025d81:	nop
   140025d82:	xor    r8d,r8d
   140025d85:	mov    dl,0x1
   140025d87:	lea    rcx,[rsp+0x38]
   140025d8c:	call   0x14000b6b0
   140025d91:	lea    rax,[rip+0x26920]        # 0x14004c6b8
   140025d98:	mov    QWORD PTR [rbx],rax
   140025d9b:	mov    rcx,QWORD PTR [rbx+0x8]
   140025d9f:	movsxd rdx,DWORD PTR [rcx+0x4]
   140025da3:	lea    rax,[rip+0x2691e]        # 0x14004c6c8
   140025daa:	mov    QWORD PTR [rdx+rbx*1+0x8],rax
   140025daf:	mov    rcx,QWORD PTR [rbx+0x8]
   140025db3:	movsxd rdx,DWORD PTR [rcx+0x4]
   140025db7:	lea    r8d,[rdx-0x98]
   140025dbe:	mov    DWORD PTR [rdx+rbx*1+0x4],r8d
   140025dc3:	mov    rax,rbx
   140025dc6:	mov    rcx,QWORD PTR [rsp+0x58]
   140025dcb:	xor    rcx,rsp
   140025dce:	call   0x140025df0
   140025dd3:	add    rsp,0x60
   140025dd7:	pop    rbx
   140025dd8:	ret    
   140025dd9:	int3   
   140025dda:	int3   
   140025ddb:	int3   
   140025ddc:	int3   
   140025ddd:	int3   
   140025dde:	int3   
   140025ddf:	int3   
   140025de0:	int3   
   140025de1:	int3   
   140025de2:	int3   
   140025de3:	int3   
   140025de4:	int3   
   140025de5:	int3   
   140025de6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025df0:	cmp    rcx,QWORD PTR [rip+0x4b259]        # 0x140071050
   140025df7:	bnd jne 0x140025e0c
   140025dfa:	rol    rcx,0x10
   140025dfe:	test   cx,0xffff
   140025e03:	bnd jne 0x140025e08
   140025e06:	bnd ret 
   140025e08:	ror    rcx,0x10
   140025e0c:	jmp    0x140026840
   140025e11:	int3   
   140025e12:	int3   
   140025e13:	int3   
   140025e14:	mov    QWORD PTR [rsp+0x8],rbx
   140025e19:	mov    QWORD PTR [rsp+0x10],rsi
   140025e1e:	push   rdi
   140025e1f:	sub    rsp,0x20
   140025e23:	xor    r8d,r8d
   140025e26:	lea    rcx,[rip+0x4fdfb]        # 0x140075c28
   140025e2d:	mov    edx,0xfa0
   140025e32:	call   0x14002b838
   140025e37:	lea    rcx,[rip+0x28c4a]        # 0x14004ea88
   140025e3e:	call   QWORD PTR [rip+0x25264]        # 0x14004b0a8
   140025e44:	mov    rbx,rax
   140025e47:	test   rax,rax
   140025e4a:	je     0x140025f1c
   140025e50:	lea    rdx,[rip+0x28c51]        # 0x14004eaa8
   140025e57:	mov    rcx,rax
   140025e5a:	call   QWORD PTR [rip+0x25268]        # 0x14004b0c8
   140025e60:	lea    rdx,[rip+0x28c61]        # 0x14004eac8
   140025e67:	mov    rcx,rbx
   140025e6a:	mov    rsi,rax
   140025e6d:	call   QWORD PTR [rip+0x25255]        # 0x14004b0c8
   140025e73:	lea    rdx,[rip+0x28c6e]        # 0x14004eae8
   140025e7a:	mov    rcx,rbx
   140025e7d:	mov    rdi,rax
   140025e80:	call   QWORD PTR [rip+0x25242]        # 0x14004b0c8
   140025e86:	mov    rbx,rax
   140025e89:	test   rsi,rsi
   140025e8c:	je     0x140025efc
   140025e8e:	test   rdi,rdi
   140025e91:	je     0x140025efc
   140025e93:	test   rax,rax
   140025e96:	je     0x140025efc
   140025e98:	and    QWORD PTR [rip+0x4fdb8],0x0        # 0x140075c58
   140025ea0:	mov    rcx,rsi
   140025ea3:	call   0x140026cd0
   140025ea8:	lea    rcx,[rip+0x4fda1]        # 0x140075c50
   140025eaf:	call   rsi
   140025eb1:	mov    rdx,QWORD PTR [rip+0x4b198]        # 0x140071050
   140025eb8:	mov    ecx,0x40
   140025ebd:	mov    eax,edx
   140025ebf:	and    eax,0x3f
   140025ec2:	sub    ecx,eax
   140025ec4:	ror    rdi,cl
   140025ec7:	xor    rdi,rdx
   140025eca:	ror    rbx,cl
   140025ecd:	xor    rbx,rdx
   140025ed0:	mov    QWORD PTR [rip+0x4fd89],rdi        # 0x140075c60
   140025ed7:	mov    QWORD PTR [rip+0x4fd8a],rbx        # 0x140075c68
   140025ede:	lea    rcx,[rip+0x4f]        # 0x140025f34
   140025ee5:	call   0x1400263e4
   140025eea:	mov    rbx,QWORD PTR [rsp+0x30]
   140025eef:	xor    eax,eax
   140025ef1:	mov    rsi,QWORD PTR [rsp+0x38]
   140025ef6:	add    rsp,0x20
   140025efa:	pop    rdi
   140025efb:	ret    
   140025efc:	xor    r9d,r9d
   140025eff:	xor    r8d,r8d
   140025f02:	xor    ecx,ecx
   140025f04:	lea    edx,[r9+0x1]
   140025f08:	call   QWORD PTR [rip+0x252d2]        # 0x14004b1e0
   140025f0e:	mov    QWORD PTR [rip+0x4fd43],rax        # 0x140075c58
   140025f15:	test   rax,rax
   140025f18:	jne    0x140025ede
   140025f1a:	jmp    0x140025f27
   140025f1c:	mov    ecx,0x7
   140025f21:	call   0x140026ab0
   140025f26:	int3   
   140025f27:	mov    ecx,0x7
   140025f2c:	call   0x140026ab0
   140025f31:	int3   
   140025f32:	int3   
   140025f33:	int3   
   140025f34:	sub    rsp,0x28
   140025f38:	lea    rcx,[rip+0x4fce9]        # 0x140075c28
   140025f3f:	call   QWORD PTR [rip+0x25113]        # 0x14004b058
   140025f45:	mov    rcx,QWORD PTR [rip+0x4fd0c]        # 0x140075c58
   140025f4c:	test   rcx,rcx
   140025f4f:	je     0x140025f57
   140025f51:	call   QWORD PTR [rip+0x25179]        # 0x14004b0d0
   140025f57:	add    rsp,0x28
   140025f5b:	ret    
   140025f5c:	rex push rbx
   140025f5e:	sub    rsp,0x20
   140025f62:	mov    rbx,rcx
   140025f65:	lea    rcx,[rip+0x4fcbc]        # 0x140075c28
   140025f6c:	call   QWORD PTR [rip+0x251ae]        # 0x14004b120
   140025f72:	mov    eax,DWORD PTR [rip+0x4b0c8]        # 0x140071040
   140025f78:	lea    rcx,[rip+0x4fca9]        # 0x140075c28
   140025f7f:	mov    edx,DWORD PTR [rip+0x4fd2f]        # 0x140075cb4
   140025f85:	inc    eax
   140025f87:	mov    DWORD PTR [rip+0x4b0b3],eax        # 0x140071040
   140025f8d:	mov    DWORD PTR [rbx],eax
   140025f8f:	mov    rax,QWORD PTR gs:0x58
   140025f98:	mov    r9d,0x4
   140025f9e:	mov    r8,QWORD PTR [rax+rdx*8]
   140025fa2:	mov    eax,DWORD PTR [rip+0x4b098]        # 0x140071040
   140025fa8:	mov    DWORD PTR [r9+r8*1],eax
   140025fac:	call   QWORD PTR [rip+0x250b6]        # 0x14004b068
   140025fb2:	add    rsp,0x20
   140025fb6:	pop    rbx
   140025fb7:	jmp    0x140026024
   140025fbc:	rex push rbx
   140025fbe:	sub    rsp,0x20
   140025fc2:	mov    rbx,rcx
   140025fc5:	lea    rcx,[rip+0x4fc5c]        # 0x140075c28
   140025fcc:	call   QWORD PTR [rip+0x2514e]        # 0x14004b120
   140025fd2:	cmp    DWORD PTR [rbx],0x0
   140025fd5:	jne    0x140025fe8
   140025fd7:	or     DWORD PTR [rbx],0xffffffff
   140025fda:	jmp    0x140026010
   140025fdc:	mov    ecx,0x64
   140025fe1:	call   0x140026080
   140025fe6:	jmp    0x140025fd2
   140025fe8:	cmp    DWORD PTR [rbx],0xffffffff
   140025feb:	je     0x140025fdc
   140025fed:	mov    rax,QWORD PTR gs:0x58
   140025ff6:	mov    ecx,DWORD PTR [rip+0x4fcb8]        # 0x140075cb4
   140025ffc:	mov    r8d,0x4
   140026002:	mov    rdx,QWORD PTR [rax+rcx*8]
   140026006:	mov    eax,DWORD PTR [rip+0x4b034]        # 0x140071040
   14002600c:	mov    DWORD PTR [r8+rdx*1],eax
   140026010:	lea    rcx,[rip+0x4fc11]        # 0x140075c28
   140026017:	add    rsp,0x20
   14002601b:	pop    rbx
   14002601c:	rex.W jmp QWORD PTR [rip+0x25045]        # 0x14004b068
   140026023:	int3   
   140026024:	rex push rbx
   140026026:	sub    rsp,0x20
   14002602a:	mov    rcx,QWORD PTR [rip+0x4fc27]        # 0x140075c58
   140026031:	test   rcx,rcx
   140026034:	jne    0x140026066
   140026036:	mov    rbx,QWORD PTR [rip+0x4b013]        # 0x140071050
   14002603d:	mov    ecx,ebx
   14002603f:	xor    rbx,QWORD PTR [rip+0x4fc22]        # 0x140075c68
   140026046:	and    ecx,0x3f
   140026049:	ror    rbx,cl
   14002604c:	mov    rcx,rbx
   14002604f:	call   0x140026cd0
   140026054:	lea    rcx,[rip+0x4fbf5]        # 0x140075c50
   14002605b:	mov    rax,rbx
   14002605e:	add    rsp,0x20
   140026062:	pop    rbx
   140026063:	rex.W jmp rax
   140026066:	call   QWORD PTR [rip+0x25164]        # 0x14004b1d0
   14002606c:	mov    rcx,QWORD PTR [rip+0x4fbe5]        # 0x140075c58
   140026073:	add    rsp,0x20
   140026077:	pop    rbx
   140026078:	rex.W jmp QWORD PTR [rip+0x25159]        # 0x14004b1d8
   14002607f:	int3   
   140026080:	mov    QWORD PTR [rsp+0x8],rbx
   140026085:	mov    QWORD PTR [rsp+0x10],rsi
   14002608a:	push   rdi
   14002608b:	sub    rsp,0x20
   14002608f:	xor    edi,edi
   140026091:	mov    esi,ecx
   140026093:	cmp    QWORD PTR [rip+0x4fbbe],rdi        # 0x140075c58
   14002609a:	jne    0x1400260d4
   14002609c:	mov    rbx,QWORD PTR [rip+0x4afad]        # 0x140071050
   1400260a3:	mov    ecx,ebx
   1400260a5:	xor    rbx,QWORD PTR [rip+0x4fbb4]        # 0x140075c60
   1400260ac:	and    ecx,0x3f
   1400260af:	ror    rbx,cl
   1400260b2:	mov    rcx,rbx
   1400260b5:	call   0x140026cd0
   1400260ba:	mov    r8d,esi
   1400260bd:	lea    rdx,[rip+0x4fb64]        # 0x140075c28
   1400260c4:	lea    rcx,[rip+0x4fb85]        # 0x140075c50
   1400260cb:	call   rbx
   1400260cd:	test   eax,eax
   1400260cf:	setne  al
   1400260d2:	jmp    0x140026107
   1400260d4:	lea    rcx,[rip+0x4fb4d]        # 0x140075c28
   1400260db:	call   QWORD PTR [rip+0x24f87]        # 0x14004b068
   1400260e1:	mov    rcx,QWORD PTR [rip+0x4fb70]        # 0x140075c58
   1400260e8:	xor    r8d,r8d
   1400260eb:	mov    edx,esi
   1400260ed:	call   QWORD PTR [rip+0x250f5]        # 0x14004b1e8
   1400260f3:	lea    rcx,[rip+0x4fb2e]        # 0x140075c28
   1400260fa:	mov    ebx,eax
   1400260fc:	call   QWORD PTR [rip+0x2501e]        # 0x14004b120
   140026102:	test   ebx,ebx
   140026104:	sete   al
   140026107:	mov    rbx,QWORD PTR [rsp+0x30]
   14002610c:	mov    rsi,QWORD PTR [rsp+0x38]
   140026111:	add    rsp,0x20
   140026115:	pop    rdi
   140026116:	ret    
   140026117:	int3   
   140026118:	rex push rbx
   14002611a:	sub    rsp,0x20
   14002611e:	mov    rbx,rcx
   140026121:	jmp    0x140026144
   140026123:	mov    rcx,rbx
   140026126:	call   0x140033098
   14002612b:	test   eax,eax
   14002612d:	jne    0x140026141
   14002612f:	cmp    rbx,0xffffffffffffffff
   140026133:	jne    0x14002613c
   140026135:	call   0x140026d58
   14002613a:	jmp    0x140026141
   14002613c:	call   0x140027a0c
   140026141:	mov    rcx,rbx
   140026144:	call   0x140032ff4
   140026149:	test   rax,rax
   14002614c:	je     0x140026123
   14002614e:	add    rsp,0x20
   140026152:	pop    rbx
   140026153:	ret    
   140026154:	sub    rsp,0x28
   140026158:	call   0x140026f48
   14002615d:	test   eax,eax
   14002615f:	je     0x140026182
   140026161:	mov    rax,QWORD PTR gs:0x30
   14002616a:	mov    rcx,QWORD PTR [rax+0x8]
   14002616e:	jmp    0x140026175
   140026170:	cmp    rcx,rax
   140026173:	je     0x140026189
   140026175:	xor    eax,eax
   140026177:	lock cmpxchg QWORD PTR [rip+0x4faf8],rcx        # 0x140075c78
   140026180:	jne    0x140026170
   140026182:	xor    al,al
   140026184:	add    rsp,0x28
   140026188:	ret    
   140026189:	mov    al,0x1
   14002618b:	jmp    0x140026184
   14002618d:	int3   
   14002618e:	int3   
   14002618f:	int3   
   140026190:	rex push rbx
   140026192:	sub    rsp,0x20
   140026196:	movzx  eax,BYTE PTR [rip+0x4fb13]        # 0x140075cb0
   14002619d:	test   ecx,ecx
   14002619f:	mov    ebx,0x1
   1400261a4:	cmove  eax,ebx
   1400261a7:	mov    BYTE PTR [rip+0x4fb03],al        # 0x140075cb0
   1400261ad:	call   0x140026d78
   1400261b2:	call   0x14002b93c
   1400261b7:	test   al,al
   1400261b9:	jne    0x1400261bf
   1400261bb:	xor    al,al
   1400261bd:	jmp    0x1400261d3
   1400261bf:	call   0x14003433c
   1400261c4:	test   al,al
   1400261c6:	jne    0x1400261d1
   1400261c8:	xor    ecx,ecx
   1400261ca:	call   0x14002b970
   1400261cf:	jmp    0x1400261bb
   1400261d1:	mov    al,bl
   1400261d3:	add    rsp,0x20
   1400261d7:	pop    rbx
   1400261d8:	ret    
   1400261d9:	int3   
   1400261da:	int3   
   1400261db:	int3   
   1400261dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400261e1:	push   rbp
   1400261e2:	mov    rbp,rsp
   1400261e5:	sub    rsp,0x40
   1400261e9:	mov    ebx,ecx
   1400261eb:	cmp    ecx,0x1
   1400261ee:	ja     0x14002629a
   1400261f4:	call   0x140026f48
   1400261f9:	test   eax,eax
   1400261fb:	je     0x140026228
   1400261fd:	test   ebx,ebx
   1400261ff:	jne    0x140026228
   140026201:	lea    rcx,[rip+0x4fa78]        # 0x140075c80
   140026208:	call   0x14003417c
   14002620d:	test   eax,eax
   14002620f:	je     0x140026215
   140026211:	xor    al,al
   140026213:	jmp    0x14002628f
   140026215:	lea    rcx,[rip+0x4fa7c]        # 0x140075c98
   14002621c:	call   0x14003417c
   140026221:	test   eax,eax
   140026223:	sete   al
   140026226:	jmp    0x14002628f
   140026228:	mov    rdx,QWORD PTR [rip+0x4ae21]        # 0x140071050
   14002622f:	or     r8,0xffffffffffffffff
   140026233:	mov    eax,edx
   140026235:	mov    ecx,0x40
   14002623a:	and    eax,0x3f
   14002623d:	sub    ecx,eax
   14002623f:	mov    al,0x1
   140026241:	ror    r8,cl
   140026244:	xor    r8,rdx
   140026247:	mov    QWORD PTR [rbp-0x20],r8
   14002624b:	mov    QWORD PTR [rbp-0x18],r8
   14002624f:	movups xmm0,XMMWORD PTR [rbp-0x20]
   140026253:	mov    QWORD PTR [rbp-0x10],r8
   140026257:	movsd  xmm1,QWORD PTR [rbp-0x10]
   14002625c:	movups XMMWORD PTR [rip+0x4fa1d],xmm0        # 0x140075c80
   140026263:	mov    QWORD PTR [rbp-0x20],r8
   140026267:	mov    QWORD PTR [rbp-0x18],r8
   14002626b:	movups xmm0,XMMWORD PTR [rbp-0x20]
   14002626f:	mov    QWORD PTR [rbp-0x10],r8
   140026273:	movsd  QWORD PTR [rip+0x4fa15],xmm1        # 0x140075c90
   14002627b:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140026280:	movups XMMWORD PTR [rip+0x4fa11],xmm0        # 0x140075c98
   140026287:	movsd  QWORD PTR [rip+0x4fa19],xmm1        # 0x140075ca8
   14002628f:	mov    rbx,QWORD PTR [rsp+0x50]
   140026294:	add    rsp,0x40
   140026298:	pop    rbp
   140026299:	ret    
   14002629a:	mov    ecx,0x5
   14002629f:	call   0x140026ab0
   1400262a4:	int3   
   1400262a5:	int3   
   1400262a6:	int3   
   1400262a7:	int3   
   1400262a8:	sub    rsp,0x18
   1400262ac:	mov    r8,rcx
   1400262af:	mov    eax,0x5a4d
   1400262b4:	cmp    WORD PTR [rip+0xfffffffffffd9d45],ax        # 0x140000000
   1400262bb:	jne    0x140026336
   1400262bd:	movsxd rax,DWORD PTR [rip+0xfffffffffffd9d78]        # 0x14000003c
   1400262c4:	lea    rdx,[rip+0xfffffffffffd9d35]        # 0x140000000
   1400262cb:	lea    rcx,[rax+rdx*1]
   1400262cf:	cmp    DWORD PTR [rcx],0x4550
   1400262d5:	jne    0x140026336
   1400262d7:	mov    eax,0x20b
   1400262dc:	cmp    WORD PTR [rcx+0x18],ax
   1400262e0:	jne    0x140026336
   1400262e2:	sub    r8,rdx
   1400262e5:	movzx  eax,WORD PTR [rcx+0x14]
   1400262e9:	lea    rdx,[rcx+0x18]
   1400262ed:	add    rdx,rax
   1400262f0:	movzx  eax,WORD PTR [rcx+0x6]
   1400262f4:	lea    rcx,[rax+rax*4]
   1400262f8:	lea    r9,[rdx+rcx*8]
   1400262fc:	mov    QWORD PTR [rsp],rdx
   140026300:	cmp    rdx,r9
   140026303:	je     0x14002631d
   140026305:	mov    ecx,DWORD PTR [rdx+0xc]
   140026308:	cmp    r8,rcx
   14002630b:	jb     0x140026317
   14002630d:	mov    eax,DWORD PTR [rdx+0x8]
   140026310:	add    eax,ecx
   140026312:	cmp    r8,rax
   140026315:	jb     0x14002631f
   140026317:	add    rdx,0x28
   14002631b:	jmp    0x1400262fc
   14002631d:	xor    edx,edx
   14002631f:	test   rdx,rdx
   140026322:	jne    0x140026328
   140026324:	xor    al,al
   140026326:	jmp    0x14002633c
   140026328:	cmp    DWORD PTR [rdx+0x24],0x0
   14002632c:	jge    0x140026332
   14002632e:	xor    al,al
   140026330:	jmp    0x14002633c
   140026332:	mov    al,0x1
   140026334:	jmp    0x14002633c
   140026336:	xor    al,al
   140026338:	jmp    0x14002633c
   14002633a:	xor    al,al
   14002633c:	add    rsp,0x18
   140026340:	ret    
   140026341:	int3   
   140026342:	int3   
   140026343:	int3   
   140026344:	rex push rbx
   140026346:	sub    rsp,0x20
   14002634a:	mov    bl,cl
   14002634c:	call   0x140026f48
   140026351:	xor    edx,edx
   140026353:	test   eax,eax
   140026355:	je     0x140026362
   140026357:	test   bl,bl
   140026359:	jne    0x140026362
   14002635b:	xchg   QWORD PTR [rip+0x4f916],rdx        # 0x140075c78
   140026362:	add    rsp,0x20
   140026366:	pop    rbx
   140026367:	ret    
   140026368:	rex push rbx
   14002636a:	sub    rsp,0x20
   14002636e:	cmp    BYTE PTR [rip+0x4f93b],0x0        # 0x140075cb0
   140026375:	mov    bl,cl
   140026377:	je     0x14002637d
   140026379:	test   dl,dl
   14002637b:	jne    0x14002638b
   14002637d:	mov    cl,bl
   14002637f:	call   0x140034350
   140026384:	mov    cl,bl
   140026386:	call   0x14002b970
   14002638b:	mov    al,0x1
   14002638d:	add    rsp,0x20
   140026391:	pop    rbx
   140026392:	ret    
   140026393:	int3   
   140026394:	rex push rbx
   140026396:	sub    rsp,0x20
   14002639a:	mov    rdx,QWORD PTR [rip+0x4acaf]        # 0x140071050
   1400263a1:	mov    rbx,rcx
   1400263a4:	mov    ecx,edx
   1400263a6:	xor    rdx,QWORD PTR [rip+0x4f8d3]        # 0x140075c80
   1400263ad:	and    ecx,0x3f
   1400263b0:	ror    rdx,cl
   1400263b3:	cmp    rdx,0xffffffffffffffff
   1400263b7:	jne    0x1400263c3
   1400263b9:	mov    rcx,rbx
   1400263bc:	call   0x140034130
   1400263c1:	jmp    0x1400263d2
   1400263c3:	mov    rdx,rbx
   1400263c6:	lea    rcx,[rip+0x4f8b3]        # 0x140075c80
   1400263cd:	call   0x1400341bc
   1400263d2:	xor    ecx,ecx
   1400263d4:	test   eax,eax
   1400263d6:	cmove  rcx,rbx
   1400263da:	mov    rax,rcx
   1400263dd:	add    rsp,0x20
   1400263e1:	pop    rbx
   1400263e2:	ret    
   1400263e3:	int3   
   1400263e4:	sub    rsp,0x28
   1400263e8:	call   0x140026394
   1400263ed:	neg    rax
   1400263f0:	sbb    eax,eax
   1400263f2:	neg    eax
   1400263f4:	dec    eax
   1400263f6:	add    rsp,0x28
   1400263fa:	ret    
   1400263fb:	int3   
   1400263fc:	jmp    0x1400304c4
   140026401:	int3   
   140026402:	int3   
   140026403:	int3   
   140026404:	rex push rbx
   140026406:	sub    rsp,0x20
   14002640a:	lea    rax,[rip+0x286ff]        # 0x14004eb10
   140026411:	mov    rbx,rcx
   140026414:	mov    QWORD PTR [rcx],rax
   140026417:	test   dl,0x1
   14002641a:	je     0x140026426
   14002641c:	mov    edx,0x18
   140026421:	call   0x140026804
   140026426:	mov    rax,rbx
   140026429:	add    rsp,0x20
   14002642d:	pop    rbx
   14002642e:	ret    
   14002642f:	int3   
   140026430:	rex push rbx
   140026432:	sub    rsp,0x20
   140026436:	mov    ecx,0x2
   14002643b:	call   0x14003436c
   140026440:	call   0x140027000
   140026445:	mov    ecx,eax
   140026447:	call   0x140034570
   14002644c:	call   0x1400359cc
   140026451:	mov    rbx,rax
   140026454:	call   0x14000b15c
   140026459:	mov    ecx,0x1
   14002645e:	mov    DWORD PTR [rbx],eax
   140026460:	call   0x1400261dc
   140026465:	test   al,al
   140026467:	je     0x1400264d5
   140026469:	call   0x140027050
   14002646e:	lea    rcx,[rip+0xc27]        # 0x14002709c
   140026475:	call   0x1400263e4
   14002647a:	call   0x140026f40
   14002647f:	mov    ecx,eax
   140026481:	call   0x140033770
   140026486:	test   eax,eax
   140026488:	jne    0x1400264e0
   14002648a:	call   0x140027008
   14002648f:	call   0x140027034
   140026494:	test   eax,eax
   140026496:	je     0x1400264a4
   140026498:	lea    rcx,[rip+0xfffffffffffe4cbd]        # 0x14000b15c
   14002649f:	call   0x1400343e4
   1400264a4:	call   0x140004794
   1400264a9:	call   0x140004794
   1400264ae:	call   0x14000b15c
   1400264b3:	mov    ecx,eax
   1400264b5:	call   0x140034bbc
   1400264ba:	call   0x14003424c
   1400264bf:	test   al,al
   1400264c1:	je     0x1400264c8
   1400264c3:	call   0x140033d70
   1400264c8:	call   0x14000b15c
   1400264cd:	xor    eax,eax
   1400264cf:	add    rsp,0x20
   1400264d3:	pop    rbx
   1400264d4:	ret    
   1400264d5:	mov    ecx,0x7
   1400264da:	call   0x140026ab0
   1400264df:	int3   
   1400264e0:	mov    ecx,0x7
   1400264e5:	call   0x140026ab0
   1400264ea:	int3   
   1400264eb:	int3   
   1400264ec:	sub    rsp,0x28
   1400264f0:	call   0x140027018
   1400264f5:	xor    eax,eax
   1400264f7:	add    rsp,0x28
   1400264fb:	ret    
   1400264fc:	sub    rsp,0x28
   140026500:	call   0x140026c88
   140026505:	call   0x14000b15c
   14002650a:	mov    ecx,eax
   14002650c:	add    rsp,0x28
   140026510:	jmp    0x1400359a0
   140026515:	int3   
   140026516:	int3   
   140026517:	int3   
   140026518:	mov    QWORD PTR [rsp+0x8],rbx
   14002651d:	push   rdi
   14002651e:	sub    rsp,0x30
   140026522:	mov    ecx,0x1
   140026527:	call   0x140026190
   14002652c:	test   al,al
   14002652e:	jne    0x14002653b
   140026530:	mov    ecx,0x7
   140026535:	call   0x140026ab0
   14002653a:	int3   
   14002653b:	xor    dil,dil
   14002653e:	mov    BYTE PTR [rsp+0x20],dil
   140026543:	call   0x140026154
   140026548:	mov    bl,al
   14002654a:	mov    ecx,DWORD PTR [rip+0x4f720]        # 0x140075c70
   140026550:	cmp    ecx,0x1
   140026553:	jne    0x14002655f
   140026555:	mov    ecx,0x7
   14002655a:	call   0x140026ab0
   14002655f:	test   ecx,ecx
   140026561:	jne    0x1400265ad
   140026563:	mov    DWORD PTR [rip+0x4f703],0x1        # 0x140075c70
   14002656d:	lea    rdx,[rip+0x24f9c]        # 0x14004b510
   140026574:	lea    rcx,[rip+0x24f4d]        # 0x14004b4c8
   14002657b:	call   0x1400344f4
   140026580:	test   eax,eax
   140026582:	je     0x14002658e
   140026584:	mov    eax,0xff
   140026589:	jmp    0x140026679
   14002658e:	lea    rdx,[rip+0x24f2b]        # 0x14004b4c0
   140026595:	lea    rcx,[rip+0x24ecc]        # 0x14004b468
   14002659c:	call   0x14003447c
   1400265a1:	mov    DWORD PTR [rip+0x4f6c5],0x2        # 0x140075c70
   1400265ab:	jmp    0x1400265b5
   1400265ad:	mov    dil,0x1
   1400265b0:	mov    BYTE PTR [rsp+0x20],dil
   1400265b5:	mov    cl,bl
   1400265b7:	call   0x140026344
   1400265bc:	call   0x140027040
   1400265c1:	mov    rbx,rax
   1400265c4:	cmp    QWORD PTR [rax],0x0
   1400265c8:	je     0x1400265ec
   1400265ca:	mov    rcx,rax
   1400265cd:	call   0x1400262a8
   1400265d2:	test   al,al
   1400265d4:	je     0x1400265ec
   1400265d6:	mov    rbx,QWORD PTR [rbx]
   1400265d9:	mov    rcx,rbx
   1400265dc:	call   0x140026cd0
   1400265e1:	xor    r8d,r8d
   1400265e4:	lea    edx,[r8+0x2]
   1400265e8:	xor    ecx,ecx
   1400265ea:	call   rbx
   1400265ec:	call   0x140027048
   1400265f1:	mov    rbx,rax
   1400265f4:	cmp    QWORD PTR [rax],0x0
   1400265f8:	je     0x14002660e
   1400265fa:	mov    rcx,rax
   1400265fd:	call   0x1400262a8
   140026602:	test   al,al
   140026604:	je     0x14002660e
   140026606:	mov    rcx,QWORD PTR [rbx]
   140026609:	call   0x140033500
   14002660e:	call   0x140026bf8
   140026613:	movzx  ebx,ax
   140026616:	call   0x14003440c
   14002661b:	mov    r8,rax
   14002661e:	mov    r9d,ebx
   140026621:	xor    edx,edx
   140026623:	lea    rcx,[rip+0xfffffffffffd99d6]        # 0x140000000
   14002662a:	call   0x140009a4c
   14002662f:	mov    ebx,eax
   140026631:	call   0x140026c34
   140026636:	test   al,al
   140026638:	jne    0x140026641
   14002663a:	mov    ecx,ebx
   14002663c:	call   0x140033544
   140026641:	test   dil,dil
   140026644:	jne    0x14002664b
   140026646:	call   0x1400334e4
   14002664b:	xor    edx,edx
   14002664d:	mov    cl,0x1
   14002664f:	call   0x140026368
   140026654:	mov    eax,ebx
   140026656:	jmp    0x140026679
   140026658:	mov    ebx,eax
   14002665a:	call   0x140026c34
   14002665f:	test   al,al
   140026661:	jne    0x14002666b
   140026663:	mov    ecx,ebx
   140026665:	call   0x1400334f4
   14002666a:	int3   
   14002666b:	cmp    BYTE PTR [rsp+0x20],0x0
   140026670:	jne    0x140026677
   140026672:	call   0x1400334d4
   140026677:	mov    eax,ebx
   140026679:	mov    rbx,QWORD PTR [rsp+0x40]
   14002667e:	add    rsp,0x30
   140026682:	pop    rdi
   140026683:	ret    
   140026684:	sub    rsp,0x28
   140026688:	call   0x140026f54
   14002668d:	add    rsp,0x28
   140026691:	jmp    0x140026518
   140026696:	int3   
   140026697:	int3   
   140026698:	sub    rsp,0x28
   14002669c:	mov    r8,QWORD PTR [r9+0x38]
   1400266a0:	mov    rcx,rdx
   1400266a3:	mov    rdx,r9
   1400266a6:	call   0x1400266b8
   1400266ab:	mov    eax,0x1
   1400266b0:	add    rsp,0x28
   1400266b4:	ret    
   1400266b5:	int3   
   1400266b6:	int3   
   1400266b7:	int3   
   1400266b8:	rex push rbx
   1400266ba:	mov    r11d,DWORD PTR [r8]
   1400266bd:	mov    rbx,rdx
   1400266c0:	and    r11d,0xfffffff8
   1400266c4:	mov    r9,rcx
   1400266c7:	test   BYTE PTR [r8],0x4
   1400266cb:	mov    r10,rcx
   1400266ce:	je     0x1400266e3
   1400266d0:	mov    eax,DWORD PTR [r8+0x8]
   1400266d4:	movsxd r10,DWORD PTR [r8+0x4]
   1400266d8:	neg    eax
   1400266da:	add    r10,rcx
   1400266dd:	movsxd rcx,eax
   1400266e0:	and    r10,rcx
   1400266e3:	movsxd rax,r11d
   1400266e6:	mov    rdx,QWORD PTR [rax+r10*1]
   1400266ea:	mov    rax,QWORD PTR [rbx+0x10]
   1400266ee:	mov    ecx,DWORD PTR [rax+0x8]
   1400266f1:	add    rcx,QWORD PTR [rbx+0x8]
   1400266f5:	test   BYTE PTR [rcx+0x3],0xf
   1400266f9:	je     0x140026705
   1400266fb:	movzx  eax,BYTE PTR [rcx+0x3]
   1400266ff:	and    eax,0xfffffff0
   140026702:	add    r9,rax
   140026705:	xor    r9,rdx
   140026708:	mov    rcx,r9
   14002670b:	pop    rbx
   14002670c:	jmp    0x140025df0
   140026711:	int3   
   140026712:	int3   
   140026713:	int3   
   140026714:	mov    rax,rsp
   140026717:	mov    QWORD PTR [rax+0x8],rbx
   14002671b:	mov    QWORD PTR [rax+0x10],rbp
   14002671f:	mov    QWORD PTR [rax+0x18],rsi
   140026723:	mov    QWORD PTR [rax+0x20],rdi
   140026727:	push   r14
   140026729:	sub    rsp,0x20
   14002672d:	mov    rbx,QWORD PTR [r9+0x38]
   140026731:	mov    rsi,rdx
   140026734:	mov    r14,r8
   140026737:	mov    rbp,rcx
   14002673a:	mov    rdx,r9
   14002673d:	mov    rcx,rsi
   140026740:	mov    rdi,r9
   140026743:	lea    r8,[rbx+0x4]
   140026747:	call   0x1400266b8
   14002674c:	mov    eax,DWORD PTR [rbp+0x4]
   14002674f:	and    al,0x66
   140026751:	neg    al
   140026753:	mov    eax,0x1
   140026758:	sbb    r8d,r8d
   14002675b:	neg    r8d
   14002675e:	add    r8d,eax
   140026761:	test   DWORD PTR [rbx+0x4],r8d
   140026765:	je     0x140026778
   140026767:	mov    r9,rdi
   14002676a:	mov    r8,r14
   14002676d:	mov    rdx,rsi
   140026770:	mov    rcx,rbp
   140026773:	call   0x14002b290
   140026778:	mov    rbx,QWORD PTR [rsp+0x30]
   14002677d:	mov    rbp,QWORD PTR [rsp+0x38]
   140026782:	mov    rsi,QWORD PTR [rsp+0x40]
   140026787:	mov    rdi,QWORD PTR [rsp+0x48]
   14002678c:	add    rsp,0x20
   140026790:	pop    r14
   140026792:	ret    
   140026793:	int3   
   140026794:	int3   
   140026795:	int3   
   140026796:	int3   
   140026797:	int3   
   140026798:	int3   
   140026799:	int3   
   14002679a:	int3   
   14002679b:	int3   
   14002679c:	int3   
   14002679d:	int3   
   14002679e:	int3   
   14002679f:	int3   
   1400267a0:	int3   
   1400267a1:	int3   
   1400267a2:	int3   
   1400267a3:	int3   
   1400267a4:	int3   
   1400267a5:	int3   
   1400267a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400267b0:	sub    rsp,0x10
   1400267b4:	mov    QWORD PTR [rsp],r10
   1400267b8:	mov    QWORD PTR [rsp+0x8],r11
   1400267bd:	xor    r11,r11
   1400267c0:	lea    r10,[rsp+0x18]
   1400267c5:	sub    r10,rax
   1400267c8:	cmovb  r10,r11
   1400267cc:	mov    r11,QWORD PTR gs:0x10
   1400267d5:	cmp    r10,r11
   1400267d8:	bnd jae 0x1400267f2
   1400267db:	and    r10w,0xf000
   1400267e1:	lea    r11,[r11-0x1000]
   1400267e8:	mov    BYTE PTR [r11],0x0
   1400267ec:	cmp    r10,r11
   1400267ef:	bnd jne 0x1400267e1
   1400267f2:	mov    r10,QWORD PTR [rsp]
   1400267f6:	mov    r11,QWORD PTR [rsp+0x8]
   1400267fb:	add    rsp,0x10
   1400267ff:	bnd ret 
   140026801:	int3   
   140026802:	int3   
   140026803:	int3   
   140026804:	jmp    0x1400263fc
   140026809:	int3   
   14002680a:	int3   
   14002680b:	int3   
   14002680c:	rex push rbx
   14002680e:	sub    rsp,0x20
   140026812:	mov    rbx,rcx
   140026815:	xor    ecx,ecx
   140026817:	call   QWORD PTR [rip+0x249f3]        # 0x14004b210
   14002681d:	mov    rcx,rbx
   140026820:	call   QWORD PTR [rip+0x249e2]        # 0x14004b208
   140026826:	call   QWORD PTR [rip+0x2490c]        # 0x14004b138
   14002682c:	mov    rcx,rax
   14002682f:	mov    edx,0xc0000409
   140026834:	add    rsp,0x20
   140026838:	pop    rbx
   140026839:	rex.W jmp QWORD PTR [rip+0x249d8]        # 0x14004b218
   140026840:	mov    QWORD PTR [rsp+0x8],rcx
   140026845:	sub    rsp,0x38
   140026849:	mov    ecx,0x17
   14002684e:	call   0x140047be6
   140026853:	test   eax,eax
   140026855:	je     0x14002685e
   140026857:	mov    ecx,0x2
   14002685c:	int    0x29
   14002685e:	lea    rcx,[rip+0x4f4fb]        # 0x140075d60
   140026865:	call   0x140026a34
   14002686a:	mov    rax,QWORD PTR [rsp+0x38]
   14002686f:	mov    QWORD PTR [rip+0x4f5e2],rax        # 0x140075e58
   140026876:	lea    rax,[rsp+0x38]
   14002687b:	add    rax,0x8
   14002687f:	mov    QWORD PTR [rip+0x4f572],rax        # 0x140075df8
   140026886:	mov    rax,QWORD PTR [rip+0x4f5cb]        # 0x140075e58
   14002688d:	mov    QWORD PTR [rip+0x4f43c],rax        # 0x140075cd0
   140026894:	mov    rax,QWORD PTR [rsp+0x40]
   140026899:	mov    QWORD PTR [rip+0x4f540],rax        # 0x140075de0
   1400268a0:	mov    DWORD PTR [rip+0x4f416],0xc0000409        # 0x140075cc0
   1400268aa:	mov    DWORD PTR [rip+0x4f410],0x1        # 0x140075cc4
   1400268b4:	mov    DWORD PTR [rip+0x4f41a],0x1        # 0x140075cd8
   1400268be:	mov    eax,0x8
   1400268c3:	imul   rax,rax,0x0
   1400268c7:	lea    rcx,[rip+0x4f412]        # 0x140075ce0
   1400268ce:	mov    QWORD PTR [rcx+rax*1],0x2
   1400268d6:	mov    eax,0x8
   1400268db:	imul   rax,rax,0x0
   1400268df:	mov    rcx,QWORD PTR [rip+0x4a76a]        # 0x140071050
   1400268e6:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   1400268eb:	mov    eax,0x8
   1400268f0:	imul   rax,rax,0x1
   1400268f4:	mov    rcx,QWORD PTR [rip+0x4a75d]        # 0x140071058
   1400268fb:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140026900:	lea    rcx,[rip+0x28211]        # 0x14004eb18
   140026907:	call   0x14002680c
   14002690c:	add    rsp,0x38
   140026910:	ret    
   140026911:	int3   
   140026912:	int3   
   140026913:	int3   
   140026914:	sub    rsp,0x28
   140026918:	mov    ecx,0x8
   14002691d:	call   0x140026928
   140026922:	add    rsp,0x28
   140026926:	ret    
   140026927:	int3   
   140026928:	mov    DWORD PTR [rsp+0x8],ecx
   14002692c:	sub    rsp,0x28
   140026930:	mov    ecx,0x17
   140026935:	call   0x140047be6
   14002693a:	test   eax,eax
   14002693c:	je     0x140026946
   14002693e:	mov    eax,DWORD PTR [rsp+0x30]
   140026942:	mov    ecx,eax
   140026944:	int    0x29
   140026946:	lea    rcx,[rip+0x4f413]        # 0x140075d60
   14002694d:	call   0x1400269c4
   140026952:	mov    rax,QWORD PTR [rsp+0x28]
   140026957:	mov    QWORD PTR [rip+0x4f4fa],rax        # 0x140075e58
   14002695e:	lea    rax,[rsp+0x28]
   140026963:	add    rax,0x8
   140026967:	mov    QWORD PTR [rip+0x4f48a],rax        # 0x140075df8
   14002696e:	mov    rax,QWORD PTR [rip+0x4f4e3]        # 0x140075e58
   140026975:	mov    QWORD PTR [rip+0x4f354],rax        # 0x140075cd0
   14002697c:	mov    DWORD PTR [rip+0x4f33a],0xc0000409        # 0x140075cc0
   140026986:	mov    DWORD PTR [rip+0x4f334],0x1        # 0x140075cc4
   140026990:	mov    DWORD PTR [rip+0x4f33e],0x1        # 0x140075cd8
   14002699a:	mov    eax,0x8
   14002699f:	imul   rax,rax,0x0
   1400269a3:	lea    rcx,[rip+0x4f336]        # 0x140075ce0
   1400269aa:	mov    edx,DWORD PTR [rsp+0x30]
   1400269ae:	mov    QWORD PTR [rcx+rax*1],rdx
   1400269b2:	lea    rcx,[rip+0x2815f]        # 0x14004eb18
   1400269b9:	call   0x14002680c
   1400269be:	add    rsp,0x28
   1400269c2:	ret    
   1400269c3:	int3   
   1400269c4:	mov    QWORD PTR [rsp+0x20],rbx
   1400269c9:	push   rdi
   1400269ca:	sub    rsp,0x40
   1400269ce:	mov    rbx,rcx
   1400269d1:	call   QWORD PTR [rip+0x24819]        # 0x14004b1f0
   1400269d7:	mov    rdi,QWORD PTR [rbx+0xf8]
   1400269de:	lea    rdx,[rsp+0x50]
   1400269e3:	mov    rcx,rdi
   1400269e6:	xor    r8d,r8d
   1400269e9:	call   QWORD PTR [rip+0x249b9]        # 0x14004b3a8
   1400269ef:	test   rax,rax
   1400269f2:	je     0x140026a26
   1400269f4:	and    QWORD PTR [rsp+0x38],0x0
   1400269fa:	lea    rcx,[rsp+0x58]
   1400269ff:	mov    rdx,QWORD PTR [rsp+0x50]
   140026a04:	mov    r9,rax
   140026a07:	mov    QWORD PTR [rsp+0x30],rcx
   140026a0c:	mov    r8,rdi
   140026a0f:	lea    rcx,[rsp+0x60]
   140026a14:	mov    QWORD PTR [rsp+0x28],rcx
   140026a19:	xor    ecx,ecx
   140026a1b:	mov    QWORD PTR [rsp+0x20],rbx
   140026a20:	call   QWORD PTR [rip+0x247da]        # 0x14004b200
   140026a26:	mov    rbx,QWORD PTR [rsp+0x68]
   140026a2b:	add    rsp,0x40
   140026a2f:	pop    rdi
   140026a30:	ret    
   140026a31:	int3   
   140026a32:	int3   
   140026a33:	int3   
   140026a34:	rex push rbx
   140026a36:	push   rsi
   140026a37:	push   rdi
   140026a38:	sub    rsp,0x40
   140026a3c:	mov    rbx,rcx
   140026a3f:	call   QWORD PTR [rip+0x247ab]        # 0x14004b1f0
   140026a45:	mov    rsi,QWORD PTR [rbx+0xf8]
   140026a4c:	xor    edi,edi
   140026a4e:	xor    r8d,r8d
   140026a51:	lea    rdx,[rsp+0x60]
   140026a56:	mov    rcx,rsi
   140026a59:	call   QWORD PTR [rip+0x24949]        # 0x14004b3a8
   140026a5f:	test   rax,rax
   140026a62:	je     0x140026a9d
   140026a64:	and    QWORD PTR [rsp+0x38],0x0
   140026a6a:	lea    rcx,[rsp+0x68]
   140026a6f:	mov    rdx,QWORD PTR [rsp+0x60]
   140026a74:	mov    r9,rax
   140026a77:	mov    QWORD PTR [rsp+0x30],rcx
   140026a7c:	mov    r8,rsi
   140026a7f:	lea    rcx,[rsp+0x70]
   140026a84:	mov    QWORD PTR [rsp+0x28],rcx
   140026a89:	xor    ecx,ecx
   140026a8b:	mov    QWORD PTR [rsp+0x20],rbx
   140026a90:	call   QWORD PTR [rip+0x2476a]        # 0x14004b200
   140026a96:	inc    edi
   140026a98:	cmp    edi,0x2
   140026a9b:	jl     0x140026a4e
   140026a9d:	add    rsp,0x40
   140026aa1:	pop    rdi
   140026aa2:	pop    rsi
   140026aa3:	pop    rbx
   140026aa4:	ret    
   140026aa5:	int3   
   140026aa6:	int3   
   140026aa7:	int3   
   140026aa8:	and    DWORD PTR [rip+0x4f781],0x0        # 0x140076230
   140026aaf:	ret    
   140026ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140026ab5:	push   rbp
   140026ab6:	lea    rbp,[rsp-0x4c0]
   140026abe:	sub    rsp,0x5c0
   140026ac5:	mov    ebx,ecx
   140026ac7:	mov    ecx,0x17
   140026acc:	call   0x140047be6
   140026ad1:	test   eax,eax
   140026ad3:	je     0x140026ad9
   140026ad5:	mov    ecx,ebx
   140026ad7:	int    0x29
   140026ad9:	and    DWORD PTR [rip+0x4f750],0x0        # 0x140076230
   140026ae0:	lea    rcx,[rbp-0x10]
   140026ae4:	xor    edx,edx
   140026ae6:	mov    r8d,0x4d0
   140026aec:	call   0x14002a910
   140026af1:	lea    rcx,[rbp-0x10]
   140026af5:	call   QWORD PTR [rip+0x246f5]        # 0x14004b1f0
   140026afb:	mov    rbx,QWORD PTR [rbp+0xe8]
   140026b02:	lea    rdx,[rbp+0x4d8]
   140026b09:	mov    rcx,rbx
   140026b0c:	xor    r8d,r8d
   140026b0f:	call   QWORD PTR [rip+0x24893]        # 0x14004b3a8
   140026b15:	test   rax,rax
   140026b18:	je     0x140026b56
   140026b1a:	and    QWORD PTR [rsp+0x38],0x0
   140026b20:	lea    rcx,[rbp+0x4e0]
   140026b27:	mov    rdx,QWORD PTR [rbp+0x4d8]
   140026b2e:	mov    r9,rax
   140026b31:	mov    QWORD PTR [rsp+0x30],rcx
   140026b36:	mov    r8,rbx
   140026b39:	lea    rcx,[rbp+0x4e8]
   140026b40:	mov    QWORD PTR [rsp+0x28],rcx
   140026b45:	lea    rcx,[rbp-0x10]
   140026b49:	mov    QWORD PTR [rsp+0x20],rcx
   140026b4e:	xor    ecx,ecx
   140026b50:	call   QWORD PTR [rip+0x246aa]        # 0x14004b200
   140026b56:	mov    rax,QWORD PTR [rbp+0x4c8]
   140026b5d:	lea    rcx,[rsp+0x50]
   140026b62:	mov    QWORD PTR [rbp+0xe8],rax
   140026b69:	xor    edx,edx
   140026b6b:	lea    rax,[rbp+0x4c8]
   140026b72:	mov    r8d,0x98
   140026b78:	add    rax,0x8
   140026b7c:	mov    QWORD PTR [rbp+0x88],rax
   140026b83:	call   0x14002a910
   140026b88:	mov    rax,QWORD PTR [rbp+0x4c8]
   140026b8f:	mov    QWORD PTR [rsp+0x60],rax
   140026b94:	mov    DWORD PTR [rsp+0x50],0x40000015
   140026b9c:	mov    DWORD PTR [rsp+0x54],0x1
   140026ba4:	call   QWORD PTR [rip+0x2467e]        # 0x14004b228
   140026baa:	cmp    eax,0x1
   140026bad:	lea    rax,[rsp+0x50]
   140026bb2:	mov    QWORD PTR [rsp+0x40],rax
   140026bb7:	lea    rax,[rbp-0x10]
   140026bbb:	sete   bl
   140026bbe:	mov    QWORD PTR [rsp+0x48],rax
   140026bc3:	xor    ecx,ecx
   140026bc5:	call   QWORD PTR [rip+0x24645]        # 0x14004b210
   140026bcb:	lea    rcx,[rsp+0x40]
   140026bd0:	call   QWORD PTR [rip+0x24632]        # 0x14004b208
   140026bd6:	test   eax,eax
   140026bd8:	jne    0x140026be4
   140026bda:	neg    bl
   140026bdc:	sbb    eax,eax
   140026bde:	and    DWORD PTR [rip+0x4f64c],eax        # 0x140076230
   140026be4:	mov    rbx,QWORD PTR [rsp+0x5d0]
   140026bec:	add    rsp,0x5c0
   140026bf3:	pop    rbp
   140026bf4:	ret    
   140026bf5:	int3   
   140026bf6:	int3   
   140026bf7:	int3   
   140026bf8:	sub    rsp,0x98
   140026bff:	xor    edx,edx
   140026c01:	lea    rcx,[rsp+0x20]
   140026c06:	lea    r8d,[rdx+0x68]
   140026c0a:	call   0x14002a910
   140026c0f:	lea    rcx,[rsp+0x20]
   140026c14:	call   QWORD PTR [rip+0x24616]        # 0x14004b230
   140026c1a:	test   BYTE PTR [rsp+0x5c],0x1
   140026c1f:	mov    eax,0xa
   140026c24:	movzx  ecx,WORD PTR [rsp+0x60]
   140026c29:	cmovne eax,ecx
   140026c2c:	add    rsp,0x98
   140026c33:	ret    
   140026c34:	sub    rsp,0x28
   140026c38:	xor    ecx,ecx
   140026c3a:	call   QWORD PTR [rip+0x24468]        # 0x14004b0a8
   140026c40:	mov    rcx,rax
   140026c43:	test   rax,rax
   140026c46:	jne    0x140026c4c
   140026c48:	xor    al,al
   140026c4a:	jmp    0x140026c83
   140026c4c:	mov    eax,0x5a4d
   140026c51:	cmp    WORD PTR [rcx],ax
   140026c54:	jne    0x140026c48
   140026c56:	movsxd rax,DWORD PTR [rcx+0x3c]
   140026c5a:	add    rax,rcx
   140026c5d:	cmp    DWORD PTR [rax],0x4550
   140026c63:	jne    0x140026c48
   140026c65:	mov    ecx,0x20b
   140026c6a:	cmp    WORD PTR [rax+0x18],cx
   140026c6e:	jne    0x140026c48
   140026c70:	cmp    DWORD PTR [rax+0x84],0xe
   140026c77:	jbe    0x140026c48
   140026c79:	cmp    DWORD PTR [rax+0xf8],0x0
   140026c80:	setne  al
   140026c83:	add    rsp,0x28
   140026c87:	ret    
   140026c88:	lea    rcx,[rip+0x9]        # 0x140026c98
   140026c8f:	rex.W jmp QWORD PTR [rip+0x2457a]        # 0x14004b210
   140026c96:	int3   
   140026c97:	int3   
   140026c98:	sub    rsp,0x28
   140026c9c:	mov    rax,QWORD PTR [rcx]
   140026c9f:	cmp    DWORD PTR [rax],0xe06d7363
   140026ca5:	jne    0x140026cc3
   140026ca7:	cmp    DWORD PTR [rax+0x18],0x4
   140026cab:	jne    0x140026cc3
   140026cad:	mov    ecx,DWORD PTR [rax+0x20]
   140026cb0:	lea    eax,[rcx-0x19930520]
   140026cb6:	cmp    eax,0x2
   140026cb9:	jbe    0x140026cca
   140026cbb:	cmp    ecx,0x1994000
   140026cc1:	je     0x140026cca
   140026cc3:	xor    eax,eax
   140026cc5:	add    rsp,0x28
   140026cc9:	ret    
   140026cca:	call   0x1400359d4
   140026ccf:	int3   
   140026cd0:	rex.W jmp QWORD PTR [rip+0x24781]        # 0x14004b458
   140026cd7:	int3   
   140026cd8:	xor    eax,eax
   140026cda:	mov    QWORD PTR [rcx+0x10],rax
   140026cde:	lea    rax,[rip+0x277bb]        # 0x14004e4a0
   140026ce5:	mov    QWORD PTR [rcx+0x8],rax
   140026ce9:	lea    rax,[rip+0x277a0]        # 0x14004e490
   140026cf0:	mov    QWORD PTR [rcx],rax
   140026cf3:	mov    rax,rcx
   140026cf6:	ret    
   140026cf7:	int3   
   140026cf8:	rex push rbx
   140026cfa:	sub    rsp,0x20
   140026cfe:	mov    rbx,rcx
   140026d01:	mov    rax,rdx
   140026d04:	lea    rcx,[rip+0x24a3d]        # 0x14004b748
   140026d0b:	mov    QWORD PTR [rbx],rcx
   140026d0e:	lea    rdx,[rbx+0x8]
   140026d12:	xor    ecx,ecx
   140026d14:	mov    QWORD PTR [rdx],rcx
   140026d17:	mov    QWORD PTR [rdx+0x8],rcx
   140026d1b:	lea    rcx,[rax+0x8]
   140026d1f:	call   0x140028f04
   140026d24:	lea    rax,[rip+0x27e05]        # 0x14004eb30
   140026d2b:	mov    QWORD PTR [rbx],rax
   140026d2e:	mov    rax,rbx
   140026d31:	add    rsp,0x20
   140026d35:	pop    rbx
   140026d36:	ret    
   140026d37:	int3   
   140026d38:	xor    eax,eax
   140026d3a:	mov    QWORD PTR [rcx+0x10],rax
   140026d3e:	lea    rax,[rip+0x27dfb]        # 0x14004eb40
   140026d45:	mov    QWORD PTR [rcx+0x8],rax
   140026d49:	lea    rax,[rip+0x27de0]        # 0x14004eb30
   140026d50:	mov    QWORD PTR [rcx],rax
   140026d53:	mov    rax,rcx
   140026d56:	ret    
   140026d57:	int3   
   140026d58:	sub    rsp,0x48
   140026d5c:	lea    rcx,[rsp+0x20]
   140026d61:	call   0x140026d38
   140026d66:	lea    rdx,[rip+0x48e7b]        # 0x14006fbe8
   140026d6d:	lea    rcx,[rsp+0x20]
   140026d72:	call   0x14002ab88
   140026d77:	int3   
   140026d78:	mov    QWORD PTR [rsp+0x10],rbx
   140026d7d:	mov    QWORD PTR [rsp+0x18],rdi
   140026d82:	push   rbp
   140026d83:	mov    rbp,rsp
   140026d86:	sub    rsp,0x20
   140026d8a:	and    DWORD PTR [rbp-0x18],0x0
   140026d8e:	xor    ecx,ecx
   140026d90:	xor    eax,eax
   140026d92:	mov    DWORD PTR [rip+0x4a2c8],0x2        # 0x140071064
   140026d9c:	cpuid  
   140026d9e:	mov    r8d,ecx
   140026da1:	mov    DWORD PTR [rip+0x4a2b5],0x1        # 0x140071060
   140026dab:	xor    ecx,0x444d4163
   140026db1:	mov    r9d,edx
   140026db4:	mov    r10d,edx
   140026db7:	xor    r9d,0x69746e65
   140026dbe:	xor    r10d,0x49656e69
   140026dc5:	xor    r8d,0x6c65746e
   140026dcc:	or     r10d,r8d
   140026dcf:	mov    r11d,ebx
   140026dd2:	mov    r8d,DWORD PTR [rip+0x4f45b]        # 0x140076234
   140026dd9:	xor    r11d,0x68747541
   140026de0:	or     r11d,r9d
   140026de3:	mov    edx,ebx
   140026de5:	or     r11d,ecx
   140026de8:	xor    edx,0x756e6547
   140026dee:	xor    ecx,ecx
   140026df0:	mov    edi,eax
   140026df2:	or     r10d,edx
   140026df5:	mov    eax,0x1
   140026dfa:	cpuid  
   140026dfc:	mov    DWORD PTR [rbp-0x10],eax
   140026dff:	mov    r9d,ecx
   140026e02:	mov    DWORD PTR [rbp-0x8],r9d
   140026e06:	mov    ecx,eax
   140026e08:	mov    DWORD PTR [rbp-0xc],ebx
   140026e0b:	mov    DWORD PTR [rbp-0x4],edx
   140026e0e:	test   r10d,r10d
   140026e11:	jne    0x140026e65
   140026e13:	or     QWORD PTR [rip+0x4a24d],0xffffffffffffffff        # 0x140071068
   140026e1b:	or     r8d,0x4
   140026e1f:	and    eax,0xfff3ff0
   140026e24:	mov    DWORD PTR [rip+0x4f409],r8d        # 0x140076234
   140026e2b:	cmp    eax,0x106c0
   140026e30:	je     0x140026e5a
   140026e32:	cmp    eax,0x20660
   140026e37:	je     0x140026e5a
   140026e39:	cmp    eax,0x20670
   140026e3e:	je     0x140026e5a
   140026e40:	add    eax,0xfffcf9b0
   140026e45:	cmp    eax,0x20
   140026e48:	ja     0x140026e65
   140026e4a:	movabs rbx,0x100010001
   140026e54:	bt     rbx,rax
   140026e58:	jae    0x140026e65
   140026e5a:	or     r8d,0x1
   140026e5e:	mov    DWORD PTR [rip+0x4f3cf],r8d        # 0x140076234
   140026e65:	test   r11d,r11d
   140026e68:	jne    0x140026e83
   140026e6a:	and    ecx,0xff00f00
   140026e70:	cmp    ecx,0x600f00
   140026e76:	jb     0x140026e83
   140026e78:	or     r8d,0x4
   140026e7c:	mov    DWORD PTR [rip+0x4f3b1],r8d        # 0x140076234
   140026e83:	mov    eax,0x7
   140026e88:	mov    DWORD PTR [rbp-0x20],edx
   140026e8b:	mov    DWORD PTR [rbp-0x1c],r9d
   140026e8f:	cmp    edi,eax
   140026e91:	jl     0x140026eb7
   140026e93:	xor    ecx,ecx
   140026e95:	cpuid  
   140026e97:	mov    DWORD PTR [rbp-0x10],eax
   140026e9a:	mov    DWORD PTR [rbp-0xc],ebx
   140026e9d:	mov    DWORD PTR [rbp-0x8],ecx
   140026ea0:	mov    DWORD PTR [rbp-0x4],edx
   140026ea3:	mov    DWORD PTR [rbp-0x18],ebx
   140026ea6:	bt     ebx,0x9
   140026eaa:	jae    0x140026eb7
   140026eac:	or     r8d,0x2
   140026eb0:	mov    DWORD PTR [rip+0x4f37d],r8d        # 0x140076234
   140026eb7:	bt     r9d,0x14
   140026ebc:	jae    0x140026f2c
   140026ebe:	mov    DWORD PTR [rip+0x4a198],0x2        # 0x140071060
   140026ec8:	mov    DWORD PTR [rip+0x4a192],0x6        # 0x140071064
   140026ed2:	bt     r9d,0x1b
   140026ed7:	jae    0x140026f2c
   140026ed9:	bt     r9d,0x1c
   140026ede:	jae    0x140026f2c
   140026ee0:	xor    ecx,ecx
   140026ee2:	xgetbv 
   140026ee5:	shl    rdx,0x20
   140026ee9:	or     rdx,rax
   140026eec:	mov    QWORD PTR [rbp+0x10],rdx
   140026ef0:	mov    rax,QWORD PTR [rbp+0x10]
   140026ef4:	and    al,0x6
   140026ef6:	cmp    al,0x6
   140026ef8:	jne    0x140026f2c
   140026efa:	mov    eax,DWORD PTR [rip+0x4a164]        # 0x140071064
   140026f00:	or     eax,0x8
   140026f03:	mov    DWORD PTR [rip+0x4a153],0x3        # 0x140071060
   140026f0d:	test   BYTE PTR [rbp-0x18],0x20
   140026f11:	mov    DWORD PTR [rip+0x4a14d],eax        # 0x140071064
   140026f17:	je     0x140026f2c
   140026f19:	or     eax,0x20
   140026f1c:	mov    DWORD PTR [rip+0x4a13a],0x5        # 0x140071060
   140026f26:	mov    DWORD PTR [rip+0x4a138],eax        # 0x140071064
   140026f2c:	mov    rbx,QWORD PTR [rsp+0x38]
   140026f31:	xor    eax,eax
   140026f33:	mov    rdi,QWORD PTR [rsp+0x40]
   140026f38:	add    rsp,0x20
   140026f3c:	pop    rbp
   140026f3d:	ret    
   140026f3e:	int3   
   140026f3f:	int3   
   140026f40:	mov    eax,0x1
   140026f45:	ret    
   140026f46:	int3   
   140026f47:	int3   
   140026f48:	xor    eax,eax
   140026f4a:	cmp    DWORD PTR [rip+0x50728],eax        # 0x140077678
   140026f50:	setne  al
   140026f53:	ret    
   140026f54:	mov    QWORD PTR [rsp+0x20],rbx
   140026f59:	push   rbp
   140026f5a:	mov    rbp,rsp
   140026f5d:	sub    rsp,0x20
   140026f61:	and    QWORD PTR [rbp+0x18],0x0
   140026f66:	movabs rbx,0x2b992ddfa232
   140026f70:	mov    rax,QWORD PTR [rip+0x4a0d9]        # 0x140071050
   140026f77:	cmp    rax,rbx
   140026f7a:	jne    0x140026feb
   140026f7c:	lea    rcx,[rbp+0x18]
   140026f80:	call   QWORD PTR [rip+0x24222]        # 0x14004b1a8
   140026f86:	mov    rax,QWORD PTR [rbp+0x18]
   140026f8a:	mov    QWORD PTR [rbp+0x10],rax
   140026f8e:	call   QWORD PTR [rip+0x242b4]        # 0x14004b248
   140026f94:	mov    eax,eax
   140026f96:	xor    QWORD PTR [rbp+0x10],rax
   140026f9a:	call   QWORD PTR [rip+0x242a0]        # 0x14004b240
   140026fa0:	mov    eax,eax
   140026fa2:	lea    rcx,[rbp+0x20]
   140026fa6:	xor    QWORD PTR [rbp+0x10],rax
   140026faa:	call   QWORD PTR [rip+0x24288]        # 0x14004b238
   140026fb0:	mov    eax,DWORD PTR [rbp+0x20]
   140026fb3:	lea    rcx,[rbp+0x10]
   140026fb7:	shl    rax,0x20
   140026fbb:	xor    rax,QWORD PTR [rbp+0x20]
   140026fbf:	xor    rax,QWORD PTR [rbp+0x10]
   140026fc3:	xor    rax,rcx
   140026fc6:	movabs rcx,0xffffffffffff
   140026fd0:	and    rax,rcx
   140026fd3:	movabs rcx,0x2b992ddfa233
   140026fdd:	cmp    rax,rbx
   140026fe0:	cmove  rax,rcx
   140026fe4:	mov    QWORD PTR [rip+0x4a065],rax        # 0x140071050
   140026feb:	mov    rbx,QWORD PTR [rsp+0x48]
   140026ff0:	not    rax
   140026ff3:	mov    QWORD PTR [rip+0x4a05e],rax        # 0x140071058
   140026ffa:	add    rsp,0x20
   140026ffe:	pop    rbp
   140026fff:	ret    
   140027000:	mov    eax,0x4000
   140027005:	ret    
   140027006:	int3   
   140027007:	int3   
   140027008:	lea    rcx,[rip+0x4f231]        # 0x140076240
   14002700f:	rex.W jmp QWORD PTR [rip+0x2423a]        # 0x14004b250
   140027016:	int3   
   140027017:	int3   
   140027018:	sub    rsp,0x28
   14002701c:	call   0x140004694
   140027021:	or     QWORD PTR [rax],0x4
   140027025:	call   0x1400195c4
   14002702a:	or     QWORD PTR [rax],0x2
   14002702e:	add    rsp,0x28
   140027032:	ret    
   140027033:	int3   
   140027034:	xor    eax,eax
   140027036:	cmp    DWORD PTR [rip+0x4a034],eax        # 0x140071070
   14002703c:	sete   al
   14002703f:	ret    
   140027040:	lea    rax,[rip+0x50629]        # 0x140077670
   140027047:	ret    
   140027048:	lea    rax,[rip+0x50619]        # 0x140077668
   14002704f:	ret    
   140027050:	mov    QWORD PTR [rsp+0x8],rbx
   140027055:	mov    QWORD PTR [rsp+0x10],rsi
   14002705a:	push   rdi
   14002705b:	sub    rsp,0x20
   14002705f:	lea    rbx,[rip+0x40752]        # 0x1400677b8
   140027066:	lea    rsi,[rip+0x4074b]        # 0x1400677b8
   14002706d:	jmp    0x140027085
   14002706f:	mov    rdi,QWORD PTR [rbx]
   140027072:	test   rdi,rdi
   140027075:	je     0x140027081
   140027077:	mov    rcx,rdi
   14002707a:	call   0x140026cd0
   14002707f:	call   rdi
   140027081:	add    rbx,0x8
   140027085:	cmp    rbx,rsi
   140027088:	jb     0x14002706f
   14002708a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002708f:	mov    rsi,QWORD PTR [rsp+0x38]
   140027094:	add    rsp,0x20
   140027098:	pop    rdi
   140027099:	ret    
   14002709a:	int3   
   14002709b:	int3   
   14002709c:	mov    QWORD PTR [rsp+0x8],rbx
   1400270a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400270a6:	push   rdi
   1400270a7:	sub    rsp,0x20
   1400270ab:	lea    rbx,[rip+0x40716]        # 0x1400677c8
   1400270b2:	lea    rsi,[rip+0x4070f]        # 0x1400677c8
   1400270b9:	jmp    0x1400270d1
   1400270bb:	mov    rdi,QWORD PTR [rbx]
   1400270be:	test   rdi,rdi
   1400270c1:	je     0x1400270cd
   1400270c3:	mov    rcx,rdi
   1400270c6:	call   0x140026cd0
   1400270cb:	call   rdi
   1400270cd:	add    rbx,0x8
   1400270d1:	cmp    rbx,rsi
   1400270d4:	jb     0x1400270bb
   1400270d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400270db:	mov    rsi,QWORD PTR [rsp+0x38]
   1400270e0:	add    rsp,0x20
   1400270e4:	pop    rdi
   1400270e5:	ret    
   1400270e6:	int3   
   1400270e7:	int3   
   1400270e8:	int3   
   1400270e9:	int3   
   1400270ea:	int3   
   1400270eb:	int3   
   1400270ec:	int3   
   1400270ed:	int3   
   1400270ee:	int3   
   1400270ef:	int3   
   1400270f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400270f5:	push   rbp
   1400270f6:	push   rsi
   1400270f7:	push   rdi
   1400270f8:	push   r14
   1400270fa:	push   r15
   1400270fc:	sub    rsp,0xa0
   140027103:	mov    rax,QWORD PTR [rip+0x49f46]        # 0x140071050
   14002710a:	xor    rax,rsp
   14002710d:	mov    QWORD PTR [rsp+0x90],rax
   140027115:	mov    rbx,QWORD PTR [rsp+0xf0]
   14002711d:	xor    r15d,r15d
   140027120:	mov    rsi,r9
   140027123:	mov    rbp,r8
   140027126:	mov    r14,rdx
   140027129:	mov    rdi,rcx
   14002712c:	test   rdx,rdx
   14002712f:	je     0x140027144
   140027131:	test   r8,r8
   140027134:	je     0x140027144
   140027136:	cmp    BYTE PTR [rdx],r15b
   140027139:	jne    0x14002716d
   14002713b:	test   rcx,rcx
   14002713e:	je     0x140027144
   140027140:	mov    WORD PTR [rcx],r15w
   140027144:	xor    eax,eax
   140027146:	mov    rcx,QWORD PTR [rsp+0x90]
   14002714e:	xor    rcx,rsp
   140027151:	call   0x140025df0
   140027156:	mov    rbx,QWORD PTR [rsp+0xe0]
   14002715e:	add    rsp,0xa0
   140027165:	pop    r15
   140027167:	pop    r14
   140027169:	pop    rdi
   14002716a:	pop    rsi
   14002716b:	pop    rbp
   14002716c:	ret    
   14002716d:	test   rbx,rbx
   140027170:	jne    0x1400271aa
   140027172:	lea    rcx,[rsp+0x30]
   140027177:	call   0x140027ec8
   14002717c:	lea    rbx,[rsp+0x60]
   140027181:	movups xmm0,XMMWORD PTR [rax]
   140027184:	movups xmm1,XMMWORD PTR [rax+0x10]
   140027188:	movups XMMWORD PTR [rsp+0x60],xmm0
   14002718d:	movsd  xmm0,QWORD PTR [rax+0x20]
   140027192:	mov    eax,DWORD PTR [rax+0x28]
   140027195:	movsd  QWORD PTR [rsp+0x80],xmm0
   14002719e:	mov    DWORD PTR [rsp+0x88],eax
   1400271a5:	movups XMMWORD PTR [rsp+0x70],xmm1
   1400271aa:	cmp    DWORD PTR [rbx+0x8],r15d
   1400271ae:	je     0x1400271c3
   1400271b0:	test   rdi,rdi
   1400271b3:	je     0x1400271bc
   1400271b5:	movzx  eax,BYTE PTR [r14]
   1400271b9:	mov    WORD PTR [rdi],ax
   1400271bc:	mov    eax,0x1
   1400271c1:	jmp    0x140027146
   1400271c3:	cmp    DWORD PTR [rsi],r15d
   1400271c6:	je     0x140027220
   1400271c8:	mov    al,BYTE PTR [r14]
   1400271cb:	mov    BYTE PTR [rsi+0x1],al
   1400271ce:	cmp    DWORD PTR [rbx+0x4],0x1
   1400271d2:	jbe    0x14002720a
   1400271d4:	mov    ecx,DWORD PTR [rbx]
   1400271d6:	mov    eax,r15d
   1400271d9:	mov    r9d,0x2
   1400271df:	test   rdi,rdi
   1400271e2:	mov    r8,rsi
   1400271e5:	setne  al
   1400271e8:	mov    DWORD PTR [rsp+0x28],eax
   1400271ec:	lea    edx,[r9+0x7]
   1400271f0:	mov    QWORD PTR [rsp+0x20],rdi
   1400271f5:	call   QWORD PTR [rip+0x23f2d]        # 0x14004b128
   1400271fb:	test   eax,eax
   1400271fd:	je     0x14002720a
   1400271ff:	mov    DWORD PTR [rsi],r15d
   140027202:	mov    eax,DWORD PTR [rbx+0x4]
   140027205:	jmp    0x140027146
   14002720a:	mov    DWORD PTR [rsi],r15d
   14002720d:	call   0x140032c50
   140027212:	mov    DWORD PTR [rax],0x2a
   140027218:	or     eax,0xffffffff
   14002721b:	jmp    0x140027146
   140027220:	movzx  r8d,BYTE PTR [r14]
   140027224:	mov    edx,0x1
   140027229:	mov    eax,r8d
   14002722c:	mov    ecx,r8d
   14002722f:	and    ecx,0x7
   140027232:	shr    rax,0x3
   140027236:	shl    edx,cl
   140027238:	test   BYTE PTR [rax+rbx*1+0xc],dl
   14002723c:	je     0x140027290
   14002723e:	mov    ecx,DWORD PTR [rbx+0x4]
   140027241:	cmp    rbp,rcx
   140027244:	jae    0x140027253
   140027246:	mov    BYTE PTR [rsi],r8b
   140027249:	mov    eax,0xfffffffe
   14002724e:	jmp    0x140027146
   140027253:	cmp    ecx,0x1
   140027256:	jbe    0x140027281
   140027258:	mov    eax,r15d
   14002725b:	mov    r9d,ecx
   14002725e:	mov    ecx,DWORD PTR [rbx]
   140027260:	test   rdi,rdi
   140027263:	mov    r8,r14
   140027266:	mov    edx,0x9
   14002726b:	setne  al
   14002726e:	mov    DWORD PTR [rsp+0x28],eax
   140027272:	mov    QWORD PTR [rsp+0x20],rdi
   140027277:	call   QWORD PTR [rip+0x23eab]        # 0x14004b128
   14002727d:	test   eax,eax
   14002727f:	jne    0x140027202
   140027281:	cmp    BYTE PTR [r14+0x1],r15b
   140027285:	jne    0x140027202
   14002728b:	jmp    0x14002720a
   140027290:	mov    ecx,DWORD PTR [rbx]
   140027292:	mov    eax,r15d
   140027295:	mov    r9d,0x1
   14002729b:	test   rdi,rdi
   14002729e:	mov    r8,r14
   1400272a1:	setne  al
   1400272a4:	mov    DWORD PTR [rsp+0x28],eax
   1400272a8:	lea    edx,[r9+0x8]
   1400272ac:	mov    QWORD PTR [rsp+0x20],rdi
   1400272b1:	call   QWORD PTR [rip+0x23e71]        # 0x14004b128
   1400272b7:	test   eax,eax
   1400272b9:	jne    0x1400271bc
   1400272bf:	jmp    0x14002720d
   1400272c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400272c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400272ce:	push   rdi
   1400272cf:	sub    rsp,0x20
   1400272d3:	mov    rsi,rcx
   1400272d6:	lock inc DWORD PTR [rip+0x49da3]        # 0x140071080
   1400272dd:	jne    0x1400272fd
   1400272df:	lea    rbx,[rip+0x4ef7a]        # 0x140076260
   1400272e6:	mov    edi,0x8
   1400272eb:	mov    rcx,rbx
   1400272ee:	call   0x1400281a8
   1400272f3:	add    rbx,0x28
   1400272f7:	sub    rdi,0x1
   1400272fb:	jne    0x1400272eb
   1400272fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140027302:	mov    rax,rsi
   140027305:	mov    rsi,QWORD PTR [rsp+0x38]
   14002730a:	add    rsp,0x20
   14002730e:	pop    rdi
   14002730f:	ret    
   140027310:	rex push rbx
   140027312:	sub    rsp,0x20
   140027316:	mov    DWORD PTR [rcx],edx
   140027318:	mov    rbx,rcx
   14002731b:	test   edx,edx
   14002731d:	jne    0x140027326
   14002731f:	call   0x140035ab4
   140027324:	jmp    0x140027342
   140027326:	cmp    edx,0x8
   140027329:	jge    0x140027342
   14002732b:	movsxd rax,edx
   14002732e:	lea    rcx,[rax+rax*4]
   140027332:	lea    rax,[rip+0x4ef27]        # 0x140076260
   140027339:	lea    rcx,[rax+rcx*8]
   14002733d:	call   0x1400281b8
   140027342:	mov    rax,rbx
   140027345:	add    rsp,0x20
   140027349:	pop    rbx
   14002734a:	ret    
   14002734b:	int3   
   14002734c:	mov    QWORD PTR [rsp+0x8],rbx
   140027351:	push   rdi
   140027352:	sub    rsp,0x20
   140027356:	or     eax,0xffffffff
   140027359:	lock xadd DWORD PTR [rip+0x49d1f],eax        # 0x140071080
   140027361:	cmp    eax,0x1
   140027364:	jns    0x140027384
   140027366:	lea    rbx,[rip+0x4eef3]        # 0x140076260
   14002736d:	mov    edi,0x8
   140027372:	mov    rcx,rbx
   140027375:	call   0x1400281a0
   14002737a:	add    rbx,0x28
   14002737e:	sub    rdi,0x1
   140027382:	jne    0x140027372
   140027384:	mov    rbx,QWORD PTR [rsp+0x30]
   140027389:	add    rsp,0x20
   14002738d:	pop    rdi
   14002738e:	ret    
   14002738f:	int3   
   140027390:	sub    rsp,0x28
   140027394:	movsxd rax,DWORD PTR [rcx]
   140027397:	test   eax,eax
   140027399:	jne    0x1400273a4
   14002739b:	add    rsp,0x28
   14002739f:	jmp    0x140035ac4
   1400273a4:	cmp    eax,0x8
   1400273a7:	jge    0x1400273bd
   1400273a9:	lea    rcx,[rax+rax*4]
   1400273ad:	lea    rax,[rip+0x4eeac]        # 0x140076260
   1400273b4:	lea    rcx,[rax+rcx*8]
   1400273b8:	call   0x1400281c0
   1400273bd:	add    rsp,0x28
   1400273c1:	ret    
   1400273c2:	int3   
   1400273c3:	int3   
   1400273c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400273c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400273ce:	push   rdi
   1400273cf:	sub    rsp,0x20
   1400273d3:	mov    rsi,rcx
   1400273d6:	mov    rdi,rdx
   1400273d9:	mov    rcx,QWORD PTR [rcx]
   1400273dc:	cmp    rcx,rdx
   1400273df:	je     0x140027427
   1400273e1:	test   rcx,rcx
   1400273e4:	je     0x1400273eb
   1400273e6:	call   0x1400304c4
   1400273eb:	and    QWORD PTR [rsi],0x0
   1400273ef:	test   rdi,rdi
   1400273f2:	je     0x140027427
   1400273f4:	cmp    BYTE PTR [rdi],0x0
   1400273f7:	mov    rbx,rdi
   1400273fa:	je     0x140027404
   1400273fc:	inc    rbx
   1400273ff:	cmp    BYTE PTR [rbx],0x0
   140027402:	jne    0x1400273fc
   140027404:	sub    rbx,rdi
   140027407:	lea    rcx,[rbx+0x1]
   14002740b:	call   0x140032ff4
   140027410:	mov    QWORD PTR [rsi],rax
   140027413:	test   rax,rax
   140027416:	je     0x140027427
   140027418:	lea    r8,[rbx+0x1]
   14002741c:	mov    rdx,rdi
   14002741f:	mov    rcx,rax
   140027422:	call   0x140028fd0
   140027427:	mov    rbx,QWORD PTR [rsp+0x30]
   14002742c:	mov    rax,rsi
   14002742f:	mov    rsi,QWORD PTR [rsp+0x38]
   140027434:	add    rsp,0x20
   140027438:	pop    rdi
   140027439:	ret    
   14002743a:	int3   
   14002743b:	int3   
   14002743c:	mov    rax,rsp
   14002743f:	push   rdi
   140027440:	sub    rsp,0x30
   140027444:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14002744c:	mov    QWORD PTR [rax+0x8],rbx
   140027450:	mov    QWORD PTR [rax+0x10],rbp
   140027454:	mov    QWORD PTR [rax+0x18],rsi
   140027458:	mov    ebp,edx
   14002745a:	mov    rsi,rcx
   14002745d:	mov    rdi,QWORD PTR [rcx+0x8]
   140027461:	mov    rax,QWORD PTR [rdi]
   140027464:	mov    rbx,QWORD PTR [rax+0x10]
   140027468:	mov    rcx,rbx
   14002746b:	call   0x140026cd0
   140027470:	nop
   140027471:	mov    rcx,rdi
   140027474:	call   rbx
   140027476:	nop
   140027477:	mov    rdi,rax
   14002747a:	test   rax,rax
   14002747d:	je     0x140027499
   14002747f:	mov    rcx,QWORD PTR [rax]
   140027482:	mov    rbx,QWORD PTR [rcx]
   140027485:	mov    rcx,rbx
   140027488:	call   0x140026cd0
   14002748d:	nop
   14002748e:	mov    edx,0x1
   140027493:	mov    rcx,rdi
   140027496:	call   rbx
   140027498:	nop
   140027499:	test   bpl,0x1
   14002749d:	je     0x1400274ad
   14002749f:	mov    edx,0x10
   1400274a4:	mov    rcx,rsi
   1400274a7:	call   0x140026804
   1400274ac:	nop
   1400274ad:	mov    rax,rsi
   1400274b0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400274b5:	mov    rbp,QWORD PTR [rsp+0x48]
   1400274ba:	mov    rsi,QWORD PTR [rsp+0x50]
   1400274bf:	add    rsp,0x30
   1400274c3:	pop    rdi
   1400274c4:	ret    
   1400274c5:	int3   
   1400274c6:	int3   
   1400274c7:	int3   
   1400274c8:	rex push rdi
   1400274ca:	sub    rsp,0x30
   1400274ce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400274d7:	mov    QWORD PTR [rsp+0x40],rbx
   1400274dc:	mov    edi,edx
   1400274de:	mov    rbx,rcx
   1400274e1:	lea    rax,[rip+0x27740]        # 0x14004ec28
   1400274e8:	mov    QWORD PTR [rcx],rax
   1400274eb:	call   0x140027630
   1400274f0:	nop
   1400274f1:	mov    rcx,QWORD PTR [rbx+0x28]
   1400274f5:	test   rcx,rcx
   1400274f8:	je     0x140027500
   1400274fa:	call   0x1400304c4
   1400274ff:	nop
   140027500:	and    QWORD PTR [rbx+0x28],0x0
   140027505:	lea    rax,[rip+0x242b4]        # 0x14004b7c0
   14002750c:	mov    QWORD PTR [rbx],rax
   14002750f:	test   dil,0x1
   140027513:	je     0x140027523
   140027515:	mov    edx,0x38
   14002751a:	mov    rcx,rbx
   14002751d:	call   0x140026804
   140027522:	nop
   140027523:	mov    rax,rbx
   140027526:	mov    rbx,QWORD PTR [rsp+0x40]
   14002752b:	add    rsp,0x30
   14002752f:	pop    rdi
   140027530:	ret    
   140027531:	int3   
   140027532:	int3   
   140027533:	int3   
   140027534:	rex push rbx
   140027536:	sub    rsp,0x20
   14002753a:	mov    rbx,rcx
   14002753d:	mov    ecx,0x10
   140027542:	call   0x140026118
   140027547:	mov    QWORD PTR [rsp+0x38],rax
   14002754c:	test   rax,rax
   14002754f:	je     0x14002755f
   140027551:	mov    rdx,QWORD PTR [rip+0x4ee48]        # 0x1400763a0
   140027558:	mov    QWORD PTR [rax],rdx
   14002755b:	mov    QWORD PTR [rax+0x8],rbx
   14002755f:	mov    QWORD PTR [rip+0x4ee3a],rax        # 0x1400763a0
   140027566:	add    rsp,0x20
   14002756a:	pop    rbx
   14002756b:	ret    
   14002756c:	mov    rax,QWORD PTR [rip+0x4ee45]        # 0x1400763b8
   140027573:	ret    
   140027574:	mov    rax,rsp
   140027577:	push   rdi
   140027578:	sub    rsp,0x30
   14002757c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140027584:	mov    QWORD PTR [rax+0x18],rbx
   140027588:	mov    QWORD PTR [rax+0x20],rsi
   14002758c:	mov    sil,cl
   14002758f:	xor    edx,edx
   140027591:	lea    rcx,[rax+0x8]
   140027595:	call   0x140027310
   14002759a:	nop
   14002759b:	mov    rdi,QWORD PTR [rip+0x4ee16]        # 0x1400763b8
   1400275a2:	test   rdi,rdi
   1400275a5:	jne    0x1400275f9
   1400275a7:	xor    ecx,ecx
   1400275a9:	call   0x140027768
   1400275ae:	mov    rdi,rax
   1400275b1:	mov    rcx,rax
   1400275b4:	call   0x1400277d8
   1400275b9:	mov    DWORD PTR [rdi+0x20],0x3f
   1400275c0:	lea    rcx,[rdi+0x28]
   1400275c4:	lea    rdx,[rip+0x273b9]        # 0x14004e984
   1400275cb:	call   0x1400273c4
   1400275d0:	mov    QWORD PTR [rip+0x4edd9],rdi        # 0x1400763b0
   1400275d7:	mov    rcx,QWORD PTR [rdi]
   1400275da:	mov    rbx,QWORD PTR [rcx+0x8]
   1400275de:	mov    rcx,rbx
   1400275e1:	call   0x140026cd0
   1400275e6:	mov    rcx,rdi
   1400275e9:	call   rbx
   1400275eb:	mov    rax,QWORD PTR [rip+0x4edbe]        # 0x1400763b0
   1400275f2:	mov    QWORD PTR [rip+0x4edef],rax        # 0x1400763e8
   1400275f9:	test   sil,sil
   1400275fc:	je     0x140027613
   1400275fe:	mov    rax,QWORD PTR [rdi]
   140027601:	mov    rbx,QWORD PTR [rax+0x8]
   140027605:	mov    rcx,rbx
   140027608:	call   0x140026cd0
   14002760d:	mov    rcx,rdi
   140027610:	call   rbx
   140027612:	nop
   140027613:	lea    rcx,[rsp+0x40]
   140027618:	call   0x140027390
   14002761d:	mov    rax,rdi
   140027620:	mov    rbx,QWORD PTR [rsp+0x50]
   140027625:	mov    rsi,QWORD PTR [rsp+0x58]
   14002762a:	add    rsp,0x30
   14002762e:	pop    rdi
   14002762f:	ret    
   140027630:	mov    rax,rsp
   140027633:	push   r14
   140027635:	sub    rsp,0x30
   140027639:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140027641:	mov    QWORD PTR [rax+0x10],rbx
   140027645:	mov    QWORD PTR [rax+0x18],rsi
   140027649:	mov    QWORD PTR [rax+0x20],rdi
   14002764d:	mov    rsi,rcx
   140027650:	xor    edx,edx
   140027652:	lea    rcx,[rax+0x8]
   140027656:	call   0x140027310
   14002765b:	nop
   14002765c:	mov    rdi,QWORD PTR [rsi+0x18]
   140027660:	jmp    0x1400276a6
   140027662:	dec    rdi
   140027665:	mov    rax,QWORD PTR [rsi+0x10]
   140027669:	mov    r14,QWORD PTR [rax+rdi*8]
   14002766d:	test   r14,r14
   140027670:	je     0x1400276a6
   140027672:	mov    rax,QWORD PTR [r14]
   140027675:	mov    rbx,QWORD PTR [rax+0x10]
   140027679:	mov    rcx,rbx
   14002767c:	call   0x140026cd0
   140027681:	mov    rcx,r14
   140027684:	call   rbx
   140027686:	mov    r14,rax
   140027689:	test   rax,rax
   14002768c:	je     0x1400276a6
   14002768e:	mov    rcx,QWORD PTR [rax]
   140027691:	mov    rbx,QWORD PTR [rcx]
   140027694:	mov    rcx,rbx
   140027697:	call   0x140026cd0
   14002769c:	mov    edx,0x1
   1400276a1:	mov    rcx,r14
   1400276a4:	call   rbx
   1400276a6:	test   rdi,rdi
   1400276a9:	jne    0x140027662
   1400276ab:	mov    rcx,QWORD PTR [rsi+0x10]
   1400276af:	call   0x1400304c4
   1400276b4:	nop
   1400276b5:	lea    rcx,[rsp+0x40]
   1400276ba:	call   0x140027390
   1400276bf:	mov    rbx,QWORD PTR [rsp+0x48]
   1400276c4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400276c9:	mov    rdi,QWORD PTR [rsp+0x58]
   1400276ce:	add    rsp,0x30
   1400276d2:	pop    r14
   1400276d4:	ret    
   1400276d5:	int3   
   1400276d6:	int3   
   1400276d7:	int3   
   1400276d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400276dd:	push   rdi
   1400276de:	sub    rsp,0x20
   1400276e2:	mov    rbx,rdx
   1400276e5:	mov    rdi,rcx
   1400276e8:	xor    edx,edx
   1400276ea:	xor    ecx,ecx
   1400276ec:	call   0x140035bbc
   1400276f1:	test   rax,rax
   1400276f4:	lea    rcx,[rip+0x3a5ba]        # 0x140061cb5
   1400276fb:	cmove  rax,rcx
   1400276ff:	lea    rcx,[rdi+0x48]
   140027703:	mov    rdx,rax
   140027706:	call   0x1400273c4
   14002770b:	test   rbx,rbx
   14002770e:	je     0x14002771d
   140027710:	mov    rdx,rbx
   140027713:	xor    ecx,ecx
   140027715:	call   0x140035bbc
   14002771a:	mov    rbx,rax
   14002771d:	test   rbx,rbx
   140027720:	lea    rax,[rip+0x27519]        # 0x14004ec40
   140027727:	lea    rcx,[rdi+0x58]
   14002772b:	cmove  rbx,rax
   14002772f:	mov    rdx,rbx
   140027732:	mov    rbx,QWORD PTR [rsp+0x30]
   140027737:	add    rsp,0x20
   14002773b:	pop    rdi
   14002773c:	jmp    0x1400273c4
   140027741:	int3   
   140027742:	int3   
   140027743:	int3   
   140027744:	sub    rsp,0x28
   140027748:	cmp    QWORD PTR [rcx+0x48],0x0
   14002774d:	je     0x140027763
   14002774f:	mov    rdx,QWORD PTR [rcx+0x48]
   140027753:	test   rdx,rdx
   140027756:	jne    0x14002775c
   140027758:	lea    rdx,[rcx+0x50]
   14002775c:	xor    ecx,ecx
   14002775e:	call   0x140035bbc
   140027763:	add    rsp,0x28
   140027767:	ret    
   140027768:	mov    QWORD PTR [rsp+0x8],rbx
   14002776d:	push   rdi
   14002776e:	sub    rsp,0x20
   140027772:	mov    dil,cl
   140027775:	mov    ecx,0x38
   14002777a:	call   0x140026118
   14002777f:	xor    edx,edx
   140027781:	mov    QWORD PTR [rsp+0x38],rax
   140027786:	mov    rbx,rax
   140027789:	test   rax,rax
   14002778c:	je     0x1400277c6
   14002778e:	mov    DWORD PTR [rax+0x8],0x1
   140027795:	lea    rcx,[rbx+0x28]
   140027799:	mov    QWORD PTR [rbx+0x10],rdx
   14002779d:	lea    rax,[rip+0x27484]        # 0x14004ec28
   1400277a4:	mov    QWORD PTR [rbx+0x18],rdx
   1400277a8:	mov    DWORD PTR [rbx+0x20],edx
   1400277ab:	mov    QWORD PTR [rbx],rax
   1400277ae:	mov    BYTE PTR [rbx+0x24],dil
   1400277b2:	mov    QWORD PTR [rcx],rdx
   1400277b5:	mov    BYTE PTR [rcx+0x8],dl
   1400277b8:	lea    rdx,[rip+0x27481]        # 0x14004ec40
   1400277bf:	call   0x1400273c4
   1400277c4:	jmp    0x1400277c9
   1400277c6:	mov    rbx,rdx
   1400277c9:	mov    rax,rbx
   1400277cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400277d1:	add    rsp,0x20
   1400277d5:	pop    rdi
   1400277d6:	ret    
   1400277d7:	int3   
   1400277d8:	rex push rbx
   1400277da:	sub    rsp,0x20
   1400277de:	cmp    BYTE PTR [rip+0x4ec14],0x0        # 0x1400763f9
   1400277e5:	mov    rbx,rcx
   1400277e8:	jne    0x1400277fd
   1400277ea:	lea    rcx,[rip+0x6f]        # 0x140027860
   1400277f1:	mov    BYTE PTR [rip+0x4ec01],0x1        # 0x1400763f9
   1400277f8:	call   0x1400281c8
   1400277fd:	mov    QWORD PTR [rip+0x4ebb4],rbx        # 0x1400763b8
   140027804:	add    rsp,0x20
   140027808:	pop    rbx
   140027809:	ret    
   14002780a:	int3   
   14002780b:	int3   
   14002780c:	mov    QWORD PTR [rsp+0x8],rbx
   140027811:	push   rdi
   140027812:	sub    rsp,0x20
   140027816:	mov    rdi,QWORD PTR [rcx]
   140027819:	test   rdi,rdi
   14002781c:	je     0x140027852
   14002781e:	mov    rax,QWORD PTR [rdi]
   140027821:	mov    rbx,QWORD PTR [rax+0x10]
   140027825:	mov    rcx,rbx
   140027828:	call   0x140026cd0
   14002782d:	mov    rcx,rdi
   140027830:	call   rbx
   140027832:	mov    rdi,rax
   140027835:	test   rax,rax
   140027838:	je     0x140027852
   14002783a:	mov    rcx,QWORD PTR [rax]
   14002783d:	mov    rbx,QWORD PTR [rcx]
   140027840:	mov    rcx,rbx
   140027843:	call   0x140026cd0
   140027848:	mov    edx,0x1
   14002784d:	mov    rcx,rdi
   140027850:	call   rbx
   140027852:	mov    rbx,QWORD PTR [rsp+0x30]
   140027857:	add    rsp,0x20
   14002785b:	pop    rdi
   14002785c:	ret    
   14002785d:	int3   
   14002785e:	int3   
   14002785f:	int3   
   140027860:	sub    rsp,0x28
   140027864:	xor    edx,edx
   140027866:	lea    rcx,[rsp+0x30]
   14002786b:	call   0x140027310
   140027870:	lea    rcx,[rip+0x4eb41]        # 0x1400763b8
   140027877:	call   0x14002780c
   14002787c:	and    QWORD PTR [rip+0x4eb34],0x0        # 0x1400763b8
   140027884:	lea    rcx,[rsp+0x30]
   140027889:	call   0x140027390
   14002788e:	add    rsp,0x28
   140027892:	ret    
   140027893:	int3   
   140027894:	jmp    0x14002a8e0
   140027899:	int3   
   14002789a:	int3   
   14002789b:	int3   
   14002789c:	rex push rbx
   14002789e:	sub    rsp,0x20
   1400278a2:	mov    rbx,rcx
   1400278a5:	mov    rax,rdx
   1400278a8:	lea    rcx,[rip+0x23e99]        # 0x14004b748
   1400278af:	mov    QWORD PTR [rbx],rcx
   1400278b2:	lea    rdx,[rbx+0x8]
   1400278b6:	xor    ecx,ecx
   1400278b8:	mov    QWORD PTR [rdx],rcx
   1400278bb:	mov    QWORD PTR [rdx+0x8],rcx
   1400278bf:	lea    rcx,[rax+0x8]
   1400278c3:	call   0x140028f04
   1400278c8:	lea    rax,[rip+0x273b1]        # 0x14004ec80
   1400278cf:	mov    QWORD PTR [rbx],rax
   1400278d2:	mov    rax,rbx
   1400278d5:	add    rsp,0x20
   1400278d9:	pop    rbx
   1400278da:	ret    
   1400278db:	int3   
   1400278dc:	xor    eax,eax
   1400278de:	mov    QWORD PTR [rcx+0x8],rax
   1400278e2:	mov    QWORD PTR [rcx+0x10],rax
   1400278e6:	lea    rax,[rip+0x27393]        # 0x14004ec80
   1400278ed:	mov    QWORD PTR [rcx],rax
   1400278f0:	mov    rax,rcx
   1400278f3:	ret    
   1400278f4:	rex push rbx
   1400278f6:	sub    rsp,0x20
   1400278fa:	mov    rbx,rcx
   1400278fd:	mov    rax,rdx
   140027900:	lea    rcx,[rip+0x23e41]        # 0x14004b748
   140027907:	mov    QWORD PTR [rbx],rcx
   14002790a:	lea    rdx,[rbx+0x8]
   14002790e:	xor    ecx,ecx
   140027910:	mov    QWORD PTR [rdx],rcx
   140027913:	mov    QWORD PTR [rdx+0x8],rcx
   140027917:	lea    rcx,[rax+0x8]
   14002791b:	call   0x140028f04
   140027920:	lea    rax,[rip+0x27329]        # 0x14004ec50
   140027927:	mov    QWORD PTR [rbx],rax
   14002792a:	mov    rax,rbx
   14002792d:	add    rsp,0x20
   140027931:	pop    rbx
   140027932:	ret    
   140027933:	int3   
   140027934:	rex push rbx
   140027936:	sub    rsp,0x30
   14002793a:	mov    rbx,rcx
   14002793d:	mov    BYTE PTR [rsp+0x28],0x1
   140027942:	mov    rax,rdx
   140027945:	lea    rcx,[rip+0x23dfc]        # 0x14004b748
   14002794c:	mov    QWORD PTR [rsp+0x20],rax
   140027951:	mov    QWORD PTR [rbx],rcx
   140027954:	lea    rdx,[rbx+0x8]
   140027958:	xor    ecx,ecx
   14002795a:	mov    QWORD PTR [rdx],rcx
   14002795d:	mov    QWORD PTR [rdx+0x8],rcx
   140027961:	lea    rcx,[rsp+0x20]
   140027966:	call   0x140028f04
   14002796b:	lea    rax,[rip+0x272de]        # 0x14004ec50
   140027972:	mov    QWORD PTR [rbx],rax
   140027975:	mov    rax,rbx
   140027978:	add    rsp,0x30
   14002797c:	pop    rbx
   14002797d:	ret    
   14002797e:	int3   
   14002797f:	int3   
   140027980:	rex push rbx
   140027982:	sub    rsp,0x20
   140027986:	mov    rbx,rcx
   140027989:	mov    rax,rdx
   14002798c:	lea    rcx,[rip+0x23db5]        # 0x14004b748
   140027993:	mov    QWORD PTR [rbx],rcx
   140027996:	lea    rdx,[rbx+0x8]
   14002799a:	xor    ecx,ecx
   14002799c:	mov    QWORD PTR [rdx],rcx
   14002799f:	mov    QWORD PTR [rdx+0x8],rcx
   1400279a3:	lea    rcx,[rax+0x8]
   1400279a7:	call   0x140028f04
   1400279ac:	lea    rax,[rip+0x272b5]        # 0x14004ec68
   1400279b3:	mov    QWORD PTR [rbx],rax
   1400279b6:	mov    rax,rbx
   1400279b9:	add    rsp,0x20
   1400279bd:	pop    rbx
   1400279be:	ret    
   1400279bf:	int3   
   1400279c0:	rex push rbx
   1400279c2:	sub    rsp,0x30
   1400279c6:	mov    rbx,rcx
   1400279c9:	mov    BYTE PTR [rsp+0x28],0x1
   1400279ce:	mov    rax,rdx
   1400279d1:	lea    rcx,[rip+0x23d70]        # 0x14004b748
   1400279d8:	mov    QWORD PTR [rsp+0x20],rax
   1400279dd:	mov    QWORD PTR [rbx],rcx
   1400279e0:	lea    rdx,[rbx+0x8]
   1400279e4:	xor    ecx,ecx
   1400279e6:	mov    QWORD PTR [rdx],rcx
   1400279e9:	mov    QWORD PTR [rdx+0x8],rcx
   1400279ed:	lea    rcx,[rsp+0x20]
   1400279f2:	call   0x140028f04
   1400279f7:	lea    rax,[rip+0x2726a]        # 0x14004ec68
   1400279fe:	mov    QWORD PTR [rbx],rax
   140027a01:	mov    rax,rbx
   140027a04:	add    rsp,0x30
   140027a08:	pop    rbx
   140027a09:	ret    
   140027a0a:	int3   
   140027a0b:	int3   
   140027a0c:	sub    rsp,0x48
   140027a10:	lea    rcx,[rsp+0x20]
   140027a15:	call   0x140026cd8
   140027a1a:	lea    rdx,[rip+0x48167]        # 0x14006fb88
   140027a21:	lea    rcx,[rsp+0x20]
   140027a26:	call   0x14002ab88
   140027a2b:	int3   
   140027a2c:	sub    rsp,0x48
   140027a30:	lea    rcx,[rsp+0x20]
   140027a35:	call   0x1400278dc
   140027a3a:	lea    rdx,[rip+0x482df]        # 0x14006fd20
   140027a41:	lea    rcx,[rsp+0x20]
   140027a46:	call   0x14002ab88
   140027a4b:	int3   
   140027a4c:	sub    rsp,0x48
   140027a50:	mov    rdx,rcx
   140027a53:	lea    rcx,[rsp+0x20]
   140027a58:	call   0x140027934
   140027a5d:	lea    rdx,[rip+0x481ec]        # 0x14006fc50
   140027a64:	lea    rcx,[rsp+0x20]
   140027a69:	call   0x14002ab88
   140027a6e:	int3   
   140027a6f:	int3   
   140027a70:	sub    rsp,0x48
   140027a74:	mov    rdx,rcx
   140027a77:	lea    rcx,[rsp+0x20]
   140027a7c:	call   0x1400279c0
   140027a81:	lea    rdx,[rip+0x48230]        # 0x14006fcb8
   140027a88:	lea    rcx,[rsp+0x20]
   140027a8d:	call   0x14002ab88
   140027a92:	int3   
   140027a93:	int3   
   140027a94:	lea    rax,[rip+0x271f5]        # 0x14004ec90
   140027a9b:	ret    
   140027a9c:	rex push rbx
   140027a9e:	sub    rsp,0x20
   140027aa2:	mov    rbx,rcx
   140027aa5:	mov    edx,0x2
   140027aaa:	lea    rcx,[rsp+0x30]
   140027aaf:	call   0x140027310
   140027ab4:	lea    rdx,[rip+0xfffffffffffd8545]        # 0x140000000
   140027abb:	mov    QWORD PTR [rbx+0x8],0x1
   140027ac3:	mov    rcx,QWORD PTR [rbx+0x8]
   140027ac7:	mov    rax,QWORD PTR [rdx+rcx*8+0x76400]
   140027acf:	test   rax,rax
   140027ad2:	je     0x140027ae7
   140027ad4:	cmp    rax,rbx
   140027ad7:	je     0x140027ae7
   140027ad9:	lea    rax,[rcx+0x1]
   140027add:	mov    QWORD PTR [rbx+0x8],rax
   140027ae1:	cmp    rax,0x8
   140027ae5:	jb     0x140027ac3
   140027ae7:	mov    rax,QWORD PTR [rbx+0x8]
   140027aeb:	lea    rcx,[rsp+0x30]
   140027af0:	inc    BYTE PTR [rax+rdx*1+0x76450]
   140027af7:	mov    QWORD PTR [rdx+rax*8+0x76400],rbx
   140027aff:	call   0x140027390
   140027b04:	add    rsp,0x20
   140027b08:	pop    rbx
   140027b09:	ret    
   140027b0a:	int3   
   140027b0b:	int3   
   140027b0c:	rex push rbx
   140027b0e:	sub    rsp,0x20
   140027b12:	mov    rax,QWORD PTR [rcx+0x8]
   140027b16:	mov    rbx,rcx
   140027b19:	test   rax,rax
   140027b1c:	je     0x140027b2e
   140027b1e:	lea    rcx,[rip+0x4e92b]        # 0x140076450
   140027b25:	dec    BYTE PTR [rax+rcx*1]
   140027b28:	cmp    BYTE PTR [rax+rcx*1],0x0
   140027b2c:	jg     0x140027b49
   140027b2e:	mov    rcx,rbx
   140027b31:	call   0x140027b50
   140027b36:	mov    rcx,QWORD PTR [rbx+0x40]
   140027b3a:	test   rcx,rcx
   140027b3d:	je     0x140027b49
   140027b3f:	mov    edx,0x1
   140027b44:	call   0x14000b560
   140027b49:	add    rsp,0x20
   140027b4d:	pop    rbx
   140027b4e:	ret    
   140027b4f:	int3   
   140027b50:	mov    QWORD PTR [rsp+0x8],rbx
   140027b55:	mov    QWORD PTR [rsp+0x10],rsi
   140027b5a:	push   rdi
   140027b5b:	sub    rsp,0x20
   140027b5f:	mov    rsi,QWORD PTR [rcx+0x38]
   140027b63:	mov    rdi,rcx
   140027b66:	jmp    0x140027b82
   140027b68:	mov    rbx,QWORD PTR [rsi+0x10]
   140027b6c:	mov    rcx,rbx
   140027b6f:	call   0x140026cd0
   140027b74:	mov    r8d,DWORD PTR [rsi+0x8]
   140027b78:	mov    rdx,rdi
   140027b7b:	xor    ecx,ecx
   140027b7d:	call   rbx
   140027b7f:	mov    rsi,QWORD PTR [rsi]
   140027b82:	test   rsi,rsi
   140027b85:	jne    0x140027b68
   140027b87:	mov    rcx,QWORD PTR [rdi+0x30]
   140027b8b:	mov    esi,0x18
   140027b90:	test   rcx,rcx
   140027b93:	je     0x140027ba8
   140027b95:	mov    rbx,QWORD PTR [rcx]
   140027b98:	mov    rdx,rsi
   140027b9b:	call   0x140026804
   140027ba0:	mov    rcx,rbx
   140027ba3:	test   rbx,rbx
   140027ba6:	jne    0x140027b95
   140027ba8:	and    QWORD PTR [rdi+0x30],0x0
   140027bad:	mov    rcx,QWORD PTR [rdi+0x38]
   140027bb1:	test   rcx,rcx
   140027bb4:	je     0x140027bc9
   140027bb6:	mov    rbx,QWORD PTR [rcx]
   140027bb9:	mov    rdx,rsi
   140027bbc:	call   0x140026804
   140027bc1:	mov    rcx,rbx
   140027bc4:	test   rbx,rbx
   140027bc7:	jne    0x140027bb6
   140027bc9:	and    QWORD PTR [rdi+0x38],0x0
   140027bce:	mov    rbx,QWORD PTR [rsp+0x30]
   140027bd3:	mov    rsi,QWORD PTR [rsp+0x38]
   140027bd8:	add    rsp,0x20
   140027bdc:	pop    rdi
   140027bdd:	ret    
   140027bde:	int3   
   140027bdf:	int3   
   140027be0:	lea    rax,[rip+0x27319]        # 0x14004ef00
   140027be7:	cmp    DWORD PTR [rax],ecx
   140027be9:	je     0x140027c03
   140027beb:	add    rax,0x10
   140027bef:	lea    rdx,[rip+0x277ea]        # 0x14004f3e0
   140027bf6:	cmp    rax,rdx
   140027bf9:	jne    0x140027be7
   140027bfb:	lea    rax,[rip+0x27e8e]        # 0x14004fa90
   140027c02:	ret    
   140027c03:	mov    rax,QWORD PTR [rax+0x8]
   140027c07:	ret    
   140027c08:	mov    WORD PTR [rsp+0x8],cx
   140027c0d:	sub    rsp,0x28
   140027c11:	mov    ecx,0x1
   140027c16:	lea    r9,[rsp+0x40]
   140027c1b:	mov    r8d,ecx
   140027c1e:	lea    rdx,[rsp+0x30]
   140027c23:	call   QWORD PTR [rip+0x2362f]        # 0x14004b258
   140027c29:	movsx  edx,WORD PTR [rsp+0x40]
   140027c2e:	neg    eax
   140027c30:	sbb    ecx,ecx
   140027c32:	and    ecx,edx
   140027c34:	movzx  eax,cx
   140027c37:	add    rsp,0x28
   140027c3b:	ret    
   140027c3c:	rex push rbx
   140027c3e:	sub    rsp,0x20
   140027c42:	mov    rax,rdx
   140027c45:	mov    rbx,rdx
   140027c48:	sub    rax,rcx
   140027c4b:	mov    r9,r8
   140027c4e:	sar    rax,1
   140027c51:	mov    rdx,rcx
   140027c54:	mov    r8d,eax
   140027c57:	mov    ecx,0x1
   140027c5c:	call   QWORD PTR [rip+0x235f6]        # 0x14004b258
   140027c62:	mov    rax,rbx
   140027c65:	add    rsp,0x20
   140027c69:	pop    rbx
   140027c6a:	ret    
   140027c6b:	int3   
   140027c6c:	mov    WORD PTR [rsp+0x8],cx
   140027c71:	sub    rsp,0x38
   140027c75:	mov    rax,rdx
   140027c78:	mov    WORD PTR [rsp+0x50],cx
   140027c7d:	mov    edx,0xffff
   140027c82:	cmp    cx,dx
   140027c85:	je     0x140027cd7
   140027c87:	cmp    QWORD PTR [rax+0x18],0x0
   140027c8c:	mov    edx,0x100
   140027c91:	jne    0x140027ca7
   140027c93:	cmp    cx,dx
   140027c96:	jae    0x140027ca7
   140027c98:	lea    eax,[rcx-0x41]
   140027c9b:	cmp    ax,0x19
   140027c9f:	ja     0x140027cd7
   140027ca1:	add    cx,0x20
   140027ca5:	jmp    0x140027cd7
   140027ca7:	mov    r9d,0x1
   140027cad:	lea    rcx,[rsp+0x50]
   140027cb2:	mov    DWORD PTR [rsp+0x28],r9d
   140027cb7:	lea    r8,[rsp+0x40]
   140027cbc:	mov    QWORD PTR [rsp+0x20],rcx
   140027cc1:	mov    rcx,QWORD PTR [rax+0x18]
   140027cc5:	call   0x140028208
   140027cca:	movzx  ecx,WORD PTR [rsp+0x50]
   140027ccf:	test   eax,eax
   140027cd1:	cmove  cx,WORD PTR [rsp+0x40]
   140027cd7:	movzx  eax,cx
   140027cda:	add    rsp,0x38
   140027cde:	ret    
   140027cdf:	int3   
   140027ce0:	rex push rbx
   140027ce2:	sub    rsp,0x20
   140027ce6:	mov    rbx,rcx
   140027ce9:	call   0x140035eb4
   140027cee:	mov    edx,0x2
   140027cf3:	mov    DWORD PTR [rbx],eax
   140027cf5:	mov    ecx,0x100
   140027cfa:	call   0x140035d88
   140027cff:	mov    QWORD PTR [rbx+0x8],rax
   140027d03:	test   rax,rax
   140027d06:	je     0x140027d6d
   140027d08:	call   0x140035e00
   140027d0d:	mov    rcx,QWORD PTR [rbx+0x8]
   140027d11:	mov    edx,0x4
   140027d16:	lea    r8d,[rdx+0x7c]
   140027d1a:	movups xmm0,XMMWORD PTR [rax]
   140027d1d:	movups XMMWORD PTR [rcx],xmm0
   140027d20:	movups xmm1,XMMWORD PTR [rax+0x10]
   140027d24:	movups XMMWORD PTR [rcx+0x10],xmm1
   140027d28:	movups xmm0,XMMWORD PTR [rax+0x20]
   140027d2c:	movups XMMWORD PTR [rcx+0x20],xmm0
   140027d30:	movups xmm1,XMMWORD PTR [rax+0x30]
   140027d34:	movups XMMWORD PTR [rcx+0x30],xmm1
   140027d38:	movups xmm0,XMMWORD PTR [rax+0x40]
   140027d3c:	movups XMMWORD PTR [rcx+0x40],xmm0
   140027d40:	movups xmm1,XMMWORD PTR [rax+0x50]
   140027d44:	movups XMMWORD PTR [rcx+0x50],xmm1
   140027d48:	movups xmm0,XMMWORD PTR [rax+0x60]
   140027d4c:	movups XMMWORD PTR [rcx+0x60],xmm0
   140027d50:	add    rcx,r8
   140027d53:	movups xmm1,XMMWORD PTR [rax+0x70]
   140027d57:	add    rax,r8
   140027d5a:	movups XMMWORD PTR [rcx-0x10],xmm1
   140027d5e:	sub    rdx,0x1
   140027d62:	jne    0x140027d1a
   140027d64:	mov    DWORD PTR [rbx+0x10],0x1
   140027d6b:	jmp    0x140027d7a
   140027d6d:	call   0x140035e00
   140027d72:	and    DWORD PTR [rbx+0x10],0x0
   140027d76:	mov    QWORD PTR [rbx+0x8],rax
   140027d7a:	call   0x140035ee4
   140027d7f:	mov    rcx,QWORD PTR [rax+0x8]
   140027d83:	mov    QWORD PTR [rbx+0x18],rcx
   140027d87:	test   rcx,rcx
   140027d8a:	je     0x140027d95
   140027d8c:	call   0x140035e30
   140027d91:	mov    QWORD PTR [rbx+0x18],rax
   140027d95:	mov    rax,rbx
   140027d98:	add    rsp,0x20
   140027d9c:	pop    rbx
   140027d9d:	ret    
   140027d9e:	int3   
   140027d9f:	int3   
   140027da0:	mov    QWORD PTR [rsp+0x8],rbx
   140027da5:	push   rbp
   140027da6:	push   rsi
   140027da7:	push   rdi
   140027da8:	sub    rsp,0x40
   140027dac:	movsxd rbx,ecx
   140027daf:	mov    rdi,rdx
   140027db2:	test   rdx,rdx
   140027db5:	jne    0x140027dc9
   140027db7:	call   0x140035ee4
   140027dbc:	mov    rsi,QWORD PTR [rax+0x10]
   140027dc0:	call   0x140035eb4
   140027dc5:	mov    ebp,eax
   140027dc7:	jmp    0x140027dcf
   140027dc9:	mov    rsi,QWORD PTR [rdx+0x18]
   140027dcd:	mov    ebp,DWORD PTR [rdx]
   140027dcf:	test   rsi,rsi
   140027dd2:	jne    0x140027de6
   140027dd4:	lea    eax,[rbx-0x41]
   140027dd7:	cmp    eax,0x19
   140027dda:	ja     0x140027ddf
   140027ddc:	add    ebx,0x20
   140027ddf:	mov    eax,ebx
   140027de1:	jmp    0x140027eb8
   140027de6:	cmp    ebx,0x100
   140027dec:	jae    0x140027e0a
   140027dee:	test   rdi,rdi
   140027df1:	jne    0x140027e00
   140027df3:	mov    ecx,ebx
   140027df5:	call   0x14002c3c0
   140027dfa:	test   eax,eax
   140027dfc:	jne    0x140027e0f
   140027dfe:	jmp    0x140027ddf
   140027e00:	mov    rax,QWORD PTR [rdi+0x8]
   140027e04:	test   BYTE PTR [rax+rbx*2],0x1
   140027e08:	je     0x140027ddf
   140027e0a:	test   rdi,rdi
   140027e0d:	jne    0x140027e28
   140027e0f:	call   0x140035e00
   140027e14:	mov    ecx,ebx
   140027e16:	sar    ecx,0x8
   140027e19:	movzx  ecx,cl
   140027e1c:	movzx  edx,WORD PTR [rax+rcx*2]
   140027e20:	and    edx,0x8000
   140027e26:	jmp    0x140027e3f
   140027e28:	mov    eax,ebx
   140027e2a:	sar    rax,0x8
   140027e2e:	movzx  ecx,al
   140027e31:	mov    rax,QWORD PTR [rdi+0x8]
   140027e35:	movsx  edx,WORD PTR [rax+rcx*2]
   140027e39:	shr    edx,0xf
   140027e3c:	and    edx,0x1
   140027e3f:	test   edx,edx
   140027e41:	je     0x140027e5d
   140027e43:	mov    eax,ebx
   140027e45:	mov    BYTE PTR [rsp+0x69],bl
   140027e49:	sar    eax,0x8
   140027e4c:	mov    r9d,0x2
   140027e52:	mov    BYTE PTR [rsp+0x68],al
   140027e56:	mov    BYTE PTR [rsp+0x6a],0x0
   140027e5b:	jmp    0x140027e6c
   140027e5d:	mov    BYTE PTR [rsp+0x68],bl
   140027e61:	mov    r9d,0x1
   140027e67:	mov    BYTE PTR [rsp+0x69],0x0
   140027e6c:	mov    DWORD PTR [rsp+0x38],0x1
   140027e74:	lea    rax,[rsp+0x70]
   140027e79:	mov    DWORD PTR [rsp+0x30],ebp
   140027e7d:	lea    r8,[rsp+0x68]
   140027e82:	mov    DWORD PTR [rsp+0x28],0x3
   140027e8a:	mov    edx,0x100
   140027e8f:	mov    rcx,rsi
   140027e92:	mov    QWORD PTR [rsp+0x20],rax
   140027e97:	call   0x140028264
   140027e9c:	test   eax,eax
   140027e9e:	je     0x140027ddf
   140027ea4:	cmp    eax,0x1
   140027ea7:	movzx  eax,BYTE PTR [rsp+0x70]
   140027eac:	je     0x140027eb8
   140027eae:	movzx  ecx,BYTE PTR [rsp+0x71]
   140027eb3:	shl    eax,0x8
   140027eb6:	or     eax,ecx
   140027eb8:	mov    rbx,QWORD PTR [rsp+0x60]
   140027ebd:	add    rsp,0x40
   140027ec1:	pop    rdi
   140027ec2:	pop    rsi
   140027ec3:	pop    rbp
   140027ec4:	ret    
   140027ec5:	int3   
   140027ec6:	int3   
   140027ec7:	int3   
   140027ec8:	mov    QWORD PTR [rsp+0x8],rbx
   140027ecd:	mov    QWORD PTR [rsp+0x10],rsi
   140027ed2:	push   rdi
   140027ed3:	sub    rsp,0x20
   140027ed7:	and    DWORD PTR [rcx],0x0
   140027eda:	xor    edx,edx
   140027edc:	mov    rdi,rcx
   140027edf:	add    rcx,0x4
   140027ee3:	lea    r8d,[rdx+0x28]
   140027ee7:	call   0x14002a910
   140027eec:	call   0x140035eb4
   140027ef1:	mov    DWORD PTR [rdi],eax
   140027ef3:	call   0x140035f18
   140027ef8:	mov    DWORD PTR [rdi+0x4],eax
   140027efb:	call   0x140035ee4
   140027f00:	xor    ecx,ecx
   140027f02:	cmp    QWORD PTR [rax+0x10],rcx
   140027f06:	sete   cl
   140027f09:	mov    DWORD PTR [rdi+0x8],ecx
   140027f0c:	test   ecx,ecx
   140027f0e:	jne    0x140027f44
   140027f10:	xor    ebx,ebx
   140027f12:	xor    esi,esi
   140027f14:	mov    ecx,ebx
   140027f16:	call   0x140036594
   140027f1b:	test   eax,eax
   140027f1d:	je     0x140027f37
   140027f1f:	mov    rdx,rsi
   140027f22:	mov    eax,ebx
   140027f24:	sar    rdx,0x3
   140027f28:	and    eax,0x7
   140027f2b:	movzx  ecx,BYTE PTR [rdx+rdi*1+0xc]
   140027f30:	bts    ecx,eax
   140027f33:	mov    BYTE PTR [rdx+rdi*1+0xc],cl
   140027f37:	inc    ebx
   140027f39:	inc    rsi
   140027f3c:	cmp    ebx,0x100
   140027f42:	jl     0x140027f14
   140027f44:	mov    rbx,QWORD PTR [rsp+0x30]
   140027f49:	mov    rax,rdi
   140027f4c:	mov    rsi,QWORD PTR [rsp+0x38]
   140027f51:	add    rsp,0x20
   140027f55:	pop    rdi
   140027f56:	ret    
   140027f57:	int3   
   140027f58:	sub    rsp,0x58
   140027f5c:	cmp    DWORD PTR [r9+0x8],0x0
   140027f61:	mov    r10,r9
   140027f64:	mov    WORD PTR [rsp+0x40],dx
   140027f69:	je     0x140027f7e
   140027f6b:	mov    eax,0xff
   140027f70:	cmp    dx,ax
   140027f73:	ja     0x140027fc1
   140027f75:	mov    BYTE PTR [rcx],dl
   140027f77:	mov    eax,0x1
   140027f7c:	jmp    0x140027fcf
   140027f7e:	and    DWORD PTR [rsp+0x48],0x0
   140027f83:	lea    rax,[rsp+0x48]
   140027f88:	mov    QWORD PTR [rsp+0x38],rax
   140027f8d:	lea    r8,[rsp+0x40]
   140027f92:	mov    eax,DWORD PTR [r9+0x4]
   140027f96:	xor    edx,edx
   140027f98:	and    QWORD PTR [rsp+0x30],0x0
   140027f9e:	mov    r9d,0x1
   140027fa4:	mov    DWORD PTR [rsp+0x28],eax
   140027fa8:	mov    QWORD PTR [rsp+0x20],rcx
   140027fad:	mov    ecx,DWORD PTR [r10]
   140027fb0:	call   QWORD PTR [rip+0x2317a]        # 0x14004b130
   140027fb6:	test   eax,eax
   140027fb8:	je     0x140027fc1
   140027fba:	cmp    DWORD PTR [rsp+0x48],0x0
   140027fbf:	je     0x140027fcf
   140027fc1:	call   0x140032c50
   140027fc6:	mov    DWORD PTR [rax],0x2a
   140027fcc:	or     eax,0xffffffff
   140027fcf:	add    rsp,0x58
   140027fd3:	ret    
   140027fd4:	mov    WORD PTR [rsp+0x8],cx
   140027fd9:	sub    rsp,0x38
   140027fdd:	mov    rax,rdx
   140027fe0:	mov    WORD PTR [rsp+0x50],cx
   140027fe5:	mov    edx,0xffff
   140027fea:	cmp    cx,dx
   140027fed:	je     0x140028044
   140027fef:	cmp    QWORD PTR [rax+0x18],0x0
   140027ff4:	jne    0x14002800f
   140027ff6:	mov    edx,0x100
   140027ffb:	cmp    cx,dx
   140027ffe:	jae    0x14002800f
   140028000:	lea    eax,[rcx-0x61]
   140028003:	cmp    ax,0x19
   140028007:	ja     0x140028044
   140028009:	sub    cx,0x20
   14002800d:	jmp    0x140028044
   14002800f:	mov    r9d,0x1
   140028015:	lea    rcx,[rsp+0x50]
   14002801a:	mov    DWORD PTR [rsp+0x28],r9d
   14002801f:	lea    r8,[rsp+0x40]
   140028024:	mov    QWORD PTR [rsp+0x20],rcx
   140028029:	mov    edx,0x200
   14002802e:	mov    rcx,QWORD PTR [rax+0x18]
   140028032:	call   0x140028208
   140028037:	movzx  ecx,WORD PTR [rsp+0x50]
   14002803c:	test   eax,eax
   14002803e:	cmove  cx,WORD PTR [rsp+0x40]
   140028044:	movzx  eax,cx
   140028047:	add    rsp,0x38
   14002804b:	ret    
   14002804c:	lea    rax,[rip+0xd]        # 0x140028060
   140028053:	mov    QWORD PTR [rcx+0x8],rdx
   140028057:	mov    QWORD PTR [rcx],rax
   14002805a:	mov    rax,rcx
   14002805d:	ret    
   14002805e:	int3   
   14002805f:	int3   
   140028060:	mov    QWORD PTR [rcx+0x28],rdx
   140028064:	ret    
   140028065:	int3   
   140028066:	int3   
   140028067:	int3   
   140028068:	mov    QWORD PTR [rsp+0x8],rbx
   14002806d:	mov    QWORD PTR [rsp+0x20],rbp
   140028072:	push   rsi
   140028073:	push   rdi
   140028074:	push   r14
   140028076:	sub    rsp,0x40
   14002807a:	movsxd rbx,ecx
   14002807d:	mov    rdi,rdx
   140028080:	test   rdx,rdx
   140028083:	jne    0x140028098
   140028085:	call   0x140035ee4
   14002808a:	mov    rsi,QWORD PTR [rax+0x10]
   14002808e:	call   0x140035eb4
   140028093:	mov    r14d,eax
   140028096:	jmp    0x14002809f
   140028098:	mov    rsi,QWORD PTR [rdx+0x18]
   14002809c:	mov    r14d,DWORD PTR [rdx]
   14002809f:	test   rsi,rsi
   1400280a2:	jne    0x1400280b6
   1400280a4:	lea    eax,[rbx-0x61]
   1400280a7:	cmp    eax,0x19
   1400280aa:	ja     0x1400280af
   1400280ac:	sub    ebx,0x20
   1400280af:	mov    eax,ebx
   1400280b1:	jmp    0x14002818a
   1400280b6:	mov    ebp,0x2
   1400280bb:	cmp    ebx,0x100
   1400280c1:	jae    0x1400280df
   1400280c3:	test   rdi,rdi
   1400280c6:	jne    0x1400280d5
   1400280c8:	mov    ecx,ebx
   1400280ca:	call   0x14002c34c
   1400280cf:	test   eax,eax
   1400280d1:	jne    0x1400280e4
   1400280d3:	jmp    0x1400280af
   1400280d5:	mov    rax,QWORD PTR [rdi+0x8]
   1400280d9:	test   BYTE PTR [rax+rbx*2],bpl
   1400280dd:	je     0x1400280af
   1400280df:	test   rdi,rdi
   1400280e2:	jne    0x1400280fd
   1400280e4:	call   0x140035e00
   1400280e9:	mov    ecx,ebx
   1400280eb:	sar    ecx,0x8
   1400280ee:	movzx  ecx,cl
   1400280f1:	movzx  edx,WORD PTR [rax+rcx*2]
   1400280f5:	and    edx,0x8000
   1400280fb:	jmp    0x140028114
   1400280fd:	mov    eax,ebx
   1400280ff:	sar    rax,0x8
   140028103:	movzx  ecx,al
   140028106:	mov    rax,QWORD PTR [rdi+0x8]
   14002810a:	movsx  edx,WORD PTR [rax+rcx*2]
   14002810e:	shr    edx,0xf
   140028111:	and    edx,0x1
   140028114:	test   edx,edx
   140028116:	je     0x14002812c
   140028118:	mov    eax,ebx
   14002811a:	mov    BYTE PTR [rsp+0x69],bl
   14002811e:	sar    eax,0x8
   140028121:	mov    BYTE PTR [rsp+0x68],al
   140028125:	mov    BYTE PTR [rsp+0x6a],0x0
   14002812a:	jmp    0x14002813a
   14002812c:	mov    BYTE PTR [rsp+0x68],bl
   140028130:	mov    ebp,0x1
   140028135:	mov    BYTE PTR [rsp+0x69],0x0
   14002813a:	mov    DWORD PTR [rsp+0x38],0x1
   140028142:	lea    rax,[rsp+0x70]
   140028147:	mov    DWORD PTR [rsp+0x30],r14d
   14002814c:	lea    r8,[rsp+0x68]
   140028151:	mov    DWORD PTR [rsp+0x28],0x3
   140028159:	mov    r9d,ebp
   14002815c:	mov    edx,0x200
   140028161:	mov    QWORD PTR [rsp+0x20],rax
   140028166:	mov    rcx,rsi
   140028169:	call   0x140028264
   14002816e:	test   eax,eax
   140028170:	je     0x1400280af
   140028176:	cmp    eax,0x1
   140028179:	movzx  eax,BYTE PTR [rsp+0x70]
   14002817e:	je     0x14002818a
   140028180:	movzx  ecx,BYTE PTR [rsp+0x71]
   140028185:	shl    eax,0x8
   140028188:	or     eax,ecx
   14002818a:	mov    rbx,QWORD PTR [rsp+0x60]
   14002818f:	mov    rbp,QWORD PTR [rsp+0x78]
   140028194:	add    rsp,0x40
   140028198:	pop    r14
   14002819a:	pop    rdi
   14002819b:	pop    rsi
   14002819c:	ret    
   14002819d:	int3   
   14002819e:	int3   
   14002819f:	int3   
   1400281a0:	rex.W jmp QWORD PTR [rip+0x22eb1]        # 0x14004b058
   1400281a7:	int3   
   1400281a8:	xor    r8d,r8d
   1400281ab:	mov    edx,0xfa0
   1400281b0:	jmp    0x140028a20
   1400281b5:	int3   
   1400281b6:	int3   
   1400281b7:	int3   
   1400281b8:	rex.W jmp QWORD PTR [rip+0x22f61]        # 0x14004b120
   1400281bf:	int3   
   1400281c0:	rex.W jmp QWORD PTR [rip+0x22ea1]        # 0x14004b068
   1400281c7:	int3   
   1400281c8:	sub    rsp,0x28
   1400281cc:	mov    rax,QWORD PTR [rip+0x48ebd]        # 0x140071090
   1400281d3:	test   rax,rax
   1400281d6:	je     0x1400281ff
   1400281d8:	dec    rax
   1400281db:	mov    QWORD PTR [rip+0x48eae],rax        # 0x140071090
   1400281e2:	call   QWORD PTR [rip+0x23078]        # 0x14004b260
   1400281e8:	mov    rcx,QWORD PTR [rip+0x48ea1]        # 0x140071090
   1400281ef:	lea    rdx,[rip+0x4e2aa]        # 0x1400764a0
   1400281f6:	mov    QWORD PTR [rdx+rcx*8],rax
   1400281fa:	add    rsp,0x28
   1400281fe:	ret    
   1400281ff:	call   0x1400365a8
   140028204:	int3   
   140028205:	int3   
   140028206:	int3   
   140028207:	int3   
   140028208:	mov    QWORD PTR [rsp+0x8],rbx
   14002820d:	mov    QWORD PTR [rsp+0x10],rbp
   140028212:	mov    QWORD PTR [rsp+0x18],rsi
   140028217:	push   rdi
   140028218:	sub    rsp,0x30
   14002821c:	movsxd rbx,r9d
   14002821f:	mov    rdi,r8
   140028222:	mov    esi,edx
   140028224:	mov    rbp,rcx
   140028227:	test   r9d,r9d
   14002822a:	jle    0x140028240
   14002822c:	mov    rdx,rbx
   14002822f:	mov    rcx,r8
   140028232:	call   0x140032e04
   140028237:	cmp    eax,ebx
   140028239:	lea    ebx,[rax+0x1]
   14002823c:	jl     0x140028240
   14002823e:	mov    ebx,eax
   140028240:	mov    r9d,ebx
   140028243:	mov    r8,rdi
   140028246:	mov    edx,esi
   140028248:	mov    rcx,rbp
   14002824b:	mov    rbx,QWORD PTR [rsp+0x40]
   140028250:	mov    rbp,QWORD PTR [rsp+0x48]
   140028255:	mov    rsi,QWORD PTR [rsp+0x50]
   14002825a:	add    rsp,0x30
   14002825e:	pop    rdi
   14002825f:	jmp    0x140028b40
   140028264:	rex push rbp
   140028266:	push   r14
   140028268:	push   r15
   14002826a:	sub    rsp,0x50
   14002826e:	lea    rbp,[rsp+0x40]
   140028273:	mov    QWORD PTR [rbp+0x30],rbx
   140028277:	mov    QWORD PTR [rbp+0x38],rsi
   14002827b:	mov    QWORD PTR [rbp+0x40],rdi
   14002827f:	mov    QWORD PTR [rbp+0x48],r13
   140028283:	mov    rax,QWORD PTR [rip+0x48dc6]        # 0x140071050
   14002828a:	xor    rax,rbp
   14002828d:	mov    QWORD PTR [rbp+0x0],rax
   140028291:	movsxd rbx,r9d
   140028294:	mov    rdi,r8
   140028297:	mov    r15d,edx
   14002829a:	mov    r13,rcx
   14002829d:	test   r9d,r9d
   1400282a0:	jle    0x1400282b6
   1400282a2:	mov    rdx,rbx
   1400282a5:	mov    rcx,r8
   1400282a8:	call   0x140038c58
   1400282ad:	cmp    eax,ebx
   1400282af:	lea    ebx,[rax+0x1]
   1400282b2:	jl     0x1400282b6
   1400282b4:	mov    ebx,eax
   1400282b6:	neg    DWORD PTR [rbp+0x68]
   1400282b9:	mov    r9d,ebx
   1400282bc:	mov    ecx,DWORD PTR [rbp+0x60]
   1400282bf:	mov    r8,rdi
   1400282c2:	sbb    edx,edx
   1400282c4:	and    DWORD PTR [rsp+0x28],0x0
   1400282c9:	and    QWORD PTR [rsp+0x20],0x0
   1400282cf:	and    edx,0x8
   1400282d2:	inc    edx
   1400282d4:	call   QWORD PTR [rip+0x22e4e]        # 0x14004b128
   1400282da:	movsxd r14,eax
   1400282dd:	test   eax,eax
   1400282df:	je     0x14002852a
   1400282e5:	mov    rcx,r14
   1400282e8:	movabs r8,0xffffffffffffff0
   1400282f2:	add    rcx,rcx
   1400282f5:	lea    rdx,[rcx+0x10]
   1400282f9:	cmp    rcx,rdx
   1400282fc:	sbb    rax,rax
   1400282ff:	test   rdx,rax
   140028302:	je     0x140028372
   140028304:	cmp    rcx,rdx
   140028307:	sbb    rax,rax
   14002830a:	and    rax,rdx
   14002830d:	cmp    rax,0x400
   140028313:	lea    rax,[rcx+0x10]
   140028317:	ja     0x140028350
   140028319:	cmp    rcx,rax
   14002831c:	sbb    rcx,rcx
   14002831f:	and    rcx,rax
   140028322:	lea    rax,[rcx+0xf]
   140028326:	cmp    rax,rcx
   140028329:	ja     0x14002832e
   14002832b:	mov    rax,r8
   14002832e:	and    rax,0xfffffffffffffff0
   140028332:	call   0x1400267b0
   140028337:	sub    rsp,rax
   14002833a:	lea    rsi,[rsp+0x40]
   14002833f:	test   rsi,rsi
   140028342:	je     0x140028510
   140028348:	mov    DWORD PTR [rsi],0xcccc
   14002834e:	jmp    0x14002836c
   140028350:	cmp    rcx,rax
   140028353:	sbb    rcx,rcx
   140028356:	and    rcx,rax
   140028359:	call   0x140036600
   14002835e:	mov    rsi,rax
   140028361:	test   rax,rax
   140028364:	je     0x140028374
   140028366:	mov    DWORD PTR [rax],0xdddd
   14002836c:	add    rsi,0x10
   140028370:	jmp    0x140028374
   140028372:	xor    esi,esi
   140028374:	test   rsi,rsi
   140028377:	je     0x140028510
   14002837d:	mov    ecx,DWORD PTR [rbp+0x60]
   140028380:	mov    r9d,ebx
   140028383:	mov    DWORD PTR [rsp+0x28],r14d
   140028388:	mov    r8,rdi
   14002838b:	mov    edx,0x1
   140028390:	mov    QWORD PTR [rsp+0x20],rsi
   140028395:	call   QWORD PTR [rip+0x22d8d]        # 0x14004b128
   14002839b:	test   eax,eax
   14002839d:	je     0x140028510
   1400283a3:	and    DWORD PTR [rsp+0x28],0x0
   1400283a8:	mov    r9d,r14d
   1400283ab:	and    QWORD PTR [rsp+0x20],0x0
   1400283b1:	mov    r8,rsi
   1400283b4:	mov    edx,r15d
   1400283b7:	mov    rcx,r13
   1400283ba:	call   0x140028b40
   1400283bf:	movsxd rbx,eax
   1400283c2:	test   eax,eax
   1400283c4:	je     0x140028510
   1400283ca:	mov    r8d,0x400
   1400283d0:	test   r8d,r15d
   1400283d3:	je     0x14002840b
   1400283d5:	mov    eax,DWORD PTR [rbp+0x58]
   1400283d8:	test   eax,eax
   1400283da:	je     0x140028512
   1400283e0:	cmp    ebx,eax
   1400283e2:	jg     0x140028512
   1400283e8:	mov    DWORD PTR [rsp+0x28],eax
   1400283ec:	mov    r9d,r14d
   1400283ef:	mov    rax,QWORD PTR [rbp+0x50]
   1400283f3:	mov    r8,rsi
   1400283f6:	mov    edx,r15d
   1400283f9:	mov    QWORD PTR [rsp+0x20],rax
   1400283fe:	mov    rcx,r13
   140028401:	call   0x140028b40
   140028406:	jmp    0x140028512
   14002840b:	mov    rcx,rbx
   14002840e:	add    rcx,rcx
   140028411:	lea    rdx,[rcx+0x10]
   140028415:	cmp    rcx,rdx
   140028418:	sbb    rax,rax
   14002841b:	test   rdx,rax
   14002841e:	je     0x140028492
   140028420:	cmp    rcx,rdx
   140028423:	sbb    rax,rax
   140028426:	and    rax,rdx
   140028429:	cmp    rax,r8
   14002842c:	lea    rax,[rcx+0x10]
   140028430:	ja     0x140028470
   140028432:	cmp    rcx,rax
   140028435:	sbb    rcx,rcx
   140028438:	and    rcx,rax
   14002843b:	lea    rax,[rcx+0xf]
   14002843f:	cmp    rax,rcx
   140028442:	ja     0x14002844e
   140028444:	movabs rax,0xffffffffffffff0
   14002844e:	and    rax,0xfffffffffffffff0
   140028452:	call   0x1400267b0
   140028457:	sub    rsp,rax
   14002845a:	lea    rdi,[rsp+0x40]
   14002845f:	test   rdi,rdi
   140028462:	je     0x140028512
   140028468:	mov    DWORD PTR [rdi],0xcccc
   14002846e:	jmp    0x14002848c
   140028470:	cmp    rcx,rax
   140028473:	sbb    rcx,rcx
   140028476:	and    rcx,rax
   140028479:	call   0x140036600
   14002847e:	mov    rdi,rax
   140028481:	test   rax,rax
   140028484:	je     0x140028494
   140028486:	mov    DWORD PTR [rax],0xdddd
   14002848c:	add    rdi,0x10
   140028490:	jmp    0x140028494
   140028492:	xor    edi,edi
   140028494:	test   rdi,rdi
   140028497:	je     0x140028512
   140028499:	mov    DWORD PTR [rsp+0x28],ebx
   14002849d:	mov    r9d,r14d
   1400284a0:	mov    r8,rsi
   1400284a3:	mov    QWORD PTR [rsp+0x20],rdi
   1400284a8:	mov    edx,r15d
   1400284ab:	mov    rcx,r13
   1400284ae:	call   0x140028b40
   1400284b3:	test   eax,eax
   1400284b5:	je     0x1400284f8
   1400284b7:	and    QWORD PTR [rsp+0x38],0x0
   1400284bd:	xor    edx,edx
   1400284bf:	and    QWORD PTR [rsp+0x30],rdx
   1400284c4:	mov    r9d,ebx
   1400284c7:	mov    eax,DWORD PTR [rbp+0x58]
   1400284ca:	mov    r8,rdi
   1400284cd:	mov    ecx,DWORD PTR [rbp+0x60]
   1400284d0:	test   eax,eax
   1400284d2:	jne    0x1400284df
   1400284d4:	and    DWORD PTR [rsp+0x28],edx
   1400284d8:	and    QWORD PTR [rsp+0x20],rdx
   1400284dd:	jmp    0x1400284ec
   1400284df:	mov    DWORD PTR [rsp+0x28],eax
   1400284e3:	mov    rax,QWORD PTR [rbp+0x50]
   1400284e7:	mov    QWORD PTR [rsp+0x20],rax
   1400284ec:	call   QWORD PTR [rip+0x22c3e]        # 0x14004b130
   1400284f2:	mov    ebx,eax
   1400284f4:	test   eax,eax
   1400284f6:	jne    0x1400284fd
   1400284f8:	test   rdi,rdi
   1400284fb:	je     0x140028512
   1400284fd:	lea    rcx,[rdi-0x10]
   140028501:	cmp    DWORD PTR [rcx],0xdddd
   140028507:	jne    0x140028512
   140028509:	call   0x140038c70
   14002850e:	jmp    0x140028512
   140028510:	xor    ebx,ebx
   140028512:	test   rsi,rsi
   140028515:	je     0x140028528
   140028517:	lea    rcx,[rsi-0x10]
   14002851b:	cmp    DWORD PTR [rcx],0xdddd
   140028521:	jne    0x140028528
   140028523:	call   0x140038c70
   140028528:	mov    eax,ebx
   14002852a:	mov    rcx,QWORD PTR [rbp+0x0]
   14002852e:	xor    rcx,rbp
   140028531:	call   0x140025df0
   140028536:	mov    rbx,QWORD PTR [rbp+0x30]
   14002853a:	mov    rsi,QWORD PTR [rbp+0x38]
   14002853e:	mov    rdi,QWORD PTR [rbp+0x40]
   140028542:	mov    r13,QWORD PTR [rbp+0x48]
   140028546:	lea    rsp,[rbp+0x10]
   14002854a:	pop    r15
   14002854c:	pop    r14
   14002854e:	pop    rbp
   14002854f:	ret    
   140028550:	rex push rbx
   140028552:	sub    rsp,0x20
   140028556:	lea    rcx,[rip+0x2652b]        # 0x14004ea88
   14002855d:	call   QWORD PTR [rip+0x22b45]        # 0x14004b0a8
   140028563:	mov    rcx,rax
   140028566:	lea    rdx,[rip+0x2755b]        # 0x14004fac8
   14002856d:	mov    rbx,rax
   140028570:	call   QWORD PTR [rip+0x22b52]        # 0x14004b0c8
   140028576:	xor    rax,QWORD PTR [rip+0x48ad3]        # 0x140071050
   14002857d:	lea    rdx,[rip+0x27554]        # 0x14004fad8
   140028584:	mov    rcx,rbx
   140028587:	mov    QWORD PTR [rip+0x4df82],rax        # 0x140076510
   14002858e:	call   QWORD PTR [rip+0x22b34]        # 0x14004b0c8
   140028594:	xor    rax,QWORD PTR [rip+0x48ab5]        # 0x140071050
   14002859b:	lea    rdx,[rip+0x2753e]        # 0x14004fae0
   1400285a2:	mov    rcx,rbx
   1400285a5:	mov    QWORD PTR [rip+0x4df6c],rax        # 0x140076518
   1400285ac:	call   QWORD PTR [rip+0x22b16]        # 0x14004b0c8
   1400285b2:	xor    rax,QWORD PTR [rip+0x48a97]        # 0x140071050
   1400285b9:	lea    rdx,[rip+0x27530]        # 0x14004faf0
   1400285c0:	mov    rcx,rbx
   1400285c3:	mov    QWORD PTR [rip+0x4df56],rax        # 0x140076520
   1400285ca:	call   QWORD PTR [rip+0x22af8]        # 0x14004b0c8
   1400285d0:	xor    rax,QWORD PTR [rip+0x48a79]        # 0x140071050
   1400285d7:	lea    rdx,[rip+0x27522]        # 0x14004fb00
   1400285de:	mov    rcx,rbx
   1400285e1:	mov    QWORD PTR [rip+0x4df40],rax        # 0x140076528
   1400285e8:	call   QWORD PTR [rip+0x22ada]        # 0x14004b0c8
   1400285ee:	xor    rax,QWORD PTR [rip+0x48a5b]        # 0x140071050
   1400285f5:	lea    rdx,[rip+0x27524]        # 0x14004fb20
   1400285fc:	mov    rcx,rbx
   1400285ff:	mov    QWORD PTR [rip+0x4df2a],rax        # 0x140076530
   140028606:	call   QWORD PTR [rip+0x22abc]        # 0x14004b0c8
   14002860c:	xor    rax,QWORD PTR [rip+0x48a3d]        # 0x140071050
   140028613:	lea    rdx,[rip+0x2751e]        # 0x14004fb38
   14002861a:	mov    rcx,rbx
   14002861d:	mov    QWORD PTR [rip+0x4df14],rax        # 0x140076538
   140028624:	call   QWORD PTR [rip+0x22a9e]        # 0x14004b0c8
   14002862a:	xor    rax,QWORD PTR [rip+0x48a1f]        # 0x140071050
   140028631:	lea    rdx,[rip+0x27510]        # 0x14004fb48
   140028638:	mov    rcx,rbx
   14002863b:	mov    QWORD PTR [rip+0x4defe],rax        # 0x140076540
   140028642:	call   QWORD PTR [rip+0x22a80]        # 0x14004b0c8
   140028648:	xor    rax,QWORD PTR [rip+0x48a01]        # 0x140071050
   14002864f:	lea    rdx,[rip+0x2750a]        # 0x14004fb60
   140028656:	mov    rcx,rbx
   140028659:	mov    QWORD PTR [rip+0x4dee8],rax        # 0x140076548
   140028660:	call   QWORD PTR [rip+0x22a62]        # 0x14004b0c8
   140028666:	xor    rax,QWORD PTR [rip+0x489e3]        # 0x140071050
   14002866d:	lea    rdx,[rip+0x27504]        # 0x14004fb78
   140028674:	mov    rcx,rbx
   140028677:	mov    QWORD PTR [rip+0x4ded2],rax        # 0x140076550
   14002867e:	call   QWORD PTR [rip+0x22a44]        # 0x14004b0c8
   140028684:	xor    rax,QWORD PTR [rip+0x489c5]        # 0x140071050
   14002868b:	lea    rdx,[rip+0x274fe]        # 0x14004fb90
   140028692:	mov    rcx,rbx
   140028695:	mov    QWORD PTR [rip+0x4debc],rax        # 0x140076558
   14002869c:	call   QWORD PTR [rip+0x22a26]        # 0x14004b0c8
   1400286a2:	xor    rax,QWORD PTR [rip+0x489a7]        # 0x140071050
   1400286a9:	lea    rdx,[rip+0x274f8]        # 0x14004fba8
   1400286b0:	mov    rcx,rbx
   1400286b3:	mov    QWORD PTR [rip+0x4dea6],rax        # 0x140076560
   1400286ba:	call   QWORD PTR [rip+0x22a08]        # 0x14004b0c8
   1400286c0:	xor    rax,QWORD PTR [rip+0x48989]        # 0x140071050
   1400286c7:	lea    rdx,[rip+0x274fa]        # 0x14004fbc8
   1400286ce:	mov    rcx,rbx
   1400286d1:	mov    QWORD PTR [rip+0x4de90],rax        # 0x140076568
   1400286d8:	call   QWORD PTR [rip+0x229ea]        # 0x14004b0c8
   1400286de:	xor    rax,QWORD PTR [rip+0x4896b]        # 0x140071050
   1400286e5:	lea    rdx,[rip+0x274f4]        # 0x14004fbe0
   1400286ec:	mov    rcx,rbx
   1400286ef:	mov    QWORD PTR [rip+0x4de7a],rax        # 0x140076570
   1400286f6:	call   QWORD PTR [rip+0x229cc]        # 0x14004b0c8
   1400286fc:	xor    rax,QWORD PTR [rip+0x4894d]        # 0x140071050
   140028703:	lea    rdx,[rip+0x274ee]        # 0x14004fbf8
   14002870a:	mov    rcx,rbx
   14002870d:	mov    QWORD PTR [rip+0x4de64],rax        # 0x140076578
   140028714:	call   QWORD PTR [rip+0x229ae]        # 0x14004b0c8
   14002871a:	xor    rax,QWORD PTR [rip+0x4892f]        # 0x140071050
   140028721:	lea    rdx,[rip+0x274e8]        # 0x14004fc10
   140028728:	mov    rcx,rbx
   14002872b:	mov    QWORD PTR [rip+0x4de4e],rax        # 0x140076580
   140028732:	call   QWORD PTR [rip+0x22990]        # 0x14004b0c8
   140028738:	xor    rax,QWORD PTR [rip+0x48911]        # 0x140071050
   14002873f:	lea    rdx,[rip+0x274e2]        # 0x14004fc28
   140028746:	mov    rcx,rbx
   140028749:	mov    QWORD PTR [rip+0x4de38],rax        # 0x140076588
   140028750:	call   QWORD PTR [rip+0x22972]        # 0x14004b0c8
   140028756:	xor    rax,QWORD PTR [rip+0x488f3]        # 0x140071050
   14002875d:	lea    rdx,[rip+0x274e4]        # 0x14004fc48
   140028764:	mov    rcx,rbx
   140028767:	mov    QWORD PTR [rip+0x4de22],rax        # 0x140076590
   14002876e:	call   QWORD PTR [rip+0x22954]        # 0x14004b0c8
   140028774:	xor    rax,QWORD PTR [rip+0x488d5]        # 0x140071050
   14002877b:	lea    rdx,[rip+0x274e6]        # 0x14004fc68
   140028782:	mov    rcx,rbx
   140028785:	mov    QWORD PTR [rip+0x4de0c],rax        # 0x140076598
   14002878c:	call   QWORD PTR [rip+0x22936]        # 0x14004b0c8
   140028792:	xor    rax,QWORD PTR [rip+0x488b7]        # 0x140071050
   140028799:	lea    rdx,[rip+0x274e8]        # 0x14004fc88
   1400287a0:	mov    rcx,rbx
   1400287a3:	mov    QWORD PTR [rip+0x4ddf6],rax        # 0x1400765a0
   1400287aa:	call   QWORD PTR [rip+0x22918]        # 0x14004b0c8
   1400287b0:	xor    rax,QWORD PTR [rip+0x48899]        # 0x140071050
   1400287b7:	lea    rdx,[rip+0x274e2]        # 0x14004fca0
   1400287be:	mov    rcx,rbx
   1400287c1:	mov    QWORD PTR [rip+0x4dde0],rax        # 0x1400765a8
   1400287c8:	call   QWORD PTR [rip+0x228fa]        # 0x14004b0c8
   1400287ce:	xor    rax,QWORD PTR [rip+0x4887b]        # 0x140071050
   1400287d5:	lea    rdx,[rip+0x274dc]        # 0x14004fcb8
   1400287dc:	mov    rcx,rbx
   1400287df:	mov    QWORD PTR [rip+0x4ddca],rax        # 0x1400765b0
   1400287e6:	call   QWORD PTR [rip+0x228dc]        # 0x14004b0c8
   1400287ec:	xor    rax,QWORD PTR [rip+0x4885d]        # 0x140071050
   1400287f3:	lea    rdx,[rip+0x274ce]        # 0x14004fcc8
   1400287fa:	mov    rcx,rbx
   1400287fd:	mov    QWORD PTR [rip+0x4ddb4],rax        # 0x1400765b8
   140028804:	call   QWORD PTR [rip+0x228be]        # 0x14004b0c8
   14002880a:	xor    rax,QWORD PTR [rip+0x4883f]        # 0x140071050
   140028811:	lea    rdx,[rip+0x274d0]        # 0x14004fce8
   140028818:	mov    rcx,rbx
   14002881b:	mov    QWORD PTR [rip+0x4dd9e],rax        # 0x1400765c0
   140028822:	call   QWORD PTR [rip+0x228a0]        # 0x14004b0c8
   140028828:	xor    rax,QWORD PTR [rip+0x48821]        # 0x140071050
   14002882f:	lea    rdx,[rip+0x274d2]        # 0x14004fd08
   140028836:	mov    rcx,rbx
   140028839:	mov    QWORD PTR [rip+0x4dd88],rax        # 0x1400765c8
   140028840:	call   QWORD PTR [rip+0x22882]        # 0x14004b0c8
   140028846:	xor    rax,QWORD PTR [rip+0x48803]        # 0x140071050
   14002884d:	lea    rdx,[rip+0x26254]        # 0x14004eaa8
   140028854:	mov    rcx,rbx
   140028857:	mov    QWORD PTR [rip+0x4dd72],rax        # 0x1400765d0
   14002885e:	call   QWORD PTR [rip+0x22864]        # 0x14004b0c8
   140028864:	xor    rax,QWORD PTR [rip+0x487e5]        # 0x140071050
   14002886b:	lea    rdx,[rip+0x274b6]        # 0x14004fd28
   140028872:	mov    rcx,rbx
   140028875:	mov    QWORD PTR [rip+0x4dd5c],rax        # 0x1400765d8
   14002887c:	call   QWORD PTR [rip+0x22846]        # 0x14004b0c8
   140028882:	xor    rax,QWORD PTR [rip+0x487c7]        # 0x140071050
   140028889:	lea    rdx,[rip+0x26258]        # 0x14004eae8
   140028890:	mov    rcx,rbx
   140028893:	mov    QWORD PTR [rip+0x4dd46],rax        # 0x1400765e0
   14002889a:	call   QWORD PTR [rip+0x22828]        # 0x14004b0c8
   1400288a0:	xor    rax,QWORD PTR [rip+0x487a9]        # 0x140071050
   1400288a7:	lea    rdx,[rip+0x2621a]        # 0x14004eac8
   1400288ae:	mov    rcx,rbx
   1400288b1:	mov    QWORD PTR [rip+0x4dd30],rax        # 0x1400765e8
   1400288b8:	call   QWORD PTR [rip+0x2280a]        # 0x14004b0c8
   1400288be:	xor    rax,QWORD PTR [rip+0x4878b]        # 0x140071050
   1400288c5:	lea    rdx,[rip+0x27474]        # 0x14004fd40
   1400288cc:	mov    rcx,rbx
   1400288cf:	mov    QWORD PTR [rip+0x4dd1a],rax        # 0x1400765f0
   1400288d6:	call   QWORD PTR [rip+0x227ec]        # 0x14004b0c8
   1400288dc:	xor    rax,QWORD PTR [rip+0x4876d]        # 0x140071050
   1400288e3:	lea    rdx,[rip+0x2746e]        # 0x14004fd58
   1400288ea:	mov    rcx,rbx
   1400288ed:	mov    QWORD PTR [rip+0x4dd04],rax        # 0x1400765f8
   1400288f4:	call   QWORD PTR [rip+0x227ce]        # 0x14004b0c8
   1400288fa:	xor    rax,QWORD PTR [rip+0x4874f]        # 0x140071050
   140028901:	lea    rdx,[rip+0x27468]        # 0x14004fd70
   140028908:	mov    rcx,rbx
   14002890b:	mov    QWORD PTR [rip+0x4dcee],rax        # 0x140076600
   140028912:	call   QWORD PTR [rip+0x227b0]        # 0x14004b0c8
   140028918:	xor    rax,QWORD PTR [rip+0x48731]        # 0x140071050
   14002891f:	lea    rdx,[rip+0x2746a]        # 0x14004fd90
   140028926:	mov    QWORD PTR [rip+0x4dcdb],rax        # 0x140076608
   14002892d:	mov    rcx,rbx
   140028930:	call   QWORD PTR [rip+0x22792]        # 0x14004b0c8
   140028936:	xor    rax,QWORD PTR [rip+0x48713]        # 0x140071050
   14002893d:	lea    rdx,[rip+0x27464]        # 0x14004fda8
   140028944:	mov    rcx,rbx
   140028947:	mov    QWORD PTR [rip+0x4dcc2],rax        # 0x140076610
   14002894e:	call   QWORD PTR [rip+0x22774]        # 0x14004b0c8
   140028954:	xor    rax,QWORD PTR [rip+0x486f5]        # 0x140071050
   14002895b:	lea    rdx,[rip+0x27466]        # 0x14004fdc8
   140028962:	mov    rcx,rbx
   140028965:	mov    QWORD PTR [rip+0x4dcac],rax        # 0x140076618
   14002896c:	call   QWORD PTR [rip+0x22756]        # 0x14004b0c8
   140028972:	xor    rax,QWORD PTR [rip+0x486d7]        # 0x140071050
   140028979:	lea    rdx,[rip+0x27460]        # 0x14004fde0
   140028980:	mov    rcx,rbx
   140028983:	mov    QWORD PTR [rip+0x4dc96],rax        # 0x140076620
   14002898a:	call   QWORD PTR [rip+0x22738]        # 0x14004b0c8
   140028990:	xor    rax,QWORD PTR [rip+0x486b9]        # 0x140071050
   140028997:	lea    rdx,[rip+0x2745a]        # 0x14004fdf8
   14002899e:	mov    rcx,rbx
   1400289a1:	mov    QWORD PTR [rip+0x4dc80],rax        # 0x140076628
   1400289a8:	call   QWORD PTR [rip+0x2271a]        # 0x14004b0c8
   1400289ae:	xor    rax,QWORD PTR [rip+0x4869b]        # 0x140071050
   1400289b5:	lea    rdx,[rip+0x27454]        # 0x14004fe10
   1400289bc:	mov    rcx,rbx
   1400289bf:	mov    QWORD PTR [rip+0x4dc6a],rax        # 0x140076630
   1400289c6:	call   QWORD PTR [rip+0x226fc]        # 0x14004b0c8
   1400289cc:	xor    rax,QWORD PTR [rip+0x4867d]        # 0x140071050
   1400289d3:	lea    rdx,[rip+0x27446]        # 0x14004fe20
   1400289da:	mov    rcx,rbx
   1400289dd:	mov    QWORD PTR [rip+0x4dc54],rax        # 0x140076638
   1400289e4:	call   QWORD PTR [rip+0x226de]        # 0x14004b0c8
   1400289ea:	xor    rax,QWORD PTR [rip+0x4865f]        # 0x140071050
   1400289f1:	lea    rdx,[rip+0x27438]        # 0x14004fe30
   1400289f8:	mov    rcx,rbx
   1400289fb:	mov    QWORD PTR [rip+0x4dc3e],rax        # 0x140076640
   140028a02:	call   QWORD PTR [rip+0x226c0]        # 0x14004b0c8
   140028a08:	xor    rax,QWORD PTR [rip+0x48641]        # 0x140071050
   140028a0f:	mov    QWORD PTR [rip+0x4dc32],rax        # 0x140076648
   140028a16:	xor    eax,eax
   140028a18:	add    rsp,0x20
   140028a1c:	pop    rbx
   140028a1d:	ret    
   140028a1e:	int3   
   140028a1f:	int3   
   140028a20:	mov    QWORD PTR [rsp+0x8],rbx
   140028a25:	mov    QWORD PTR [rsp+0x10],rbp
   140028a2a:	mov    QWORD PTR [rsp+0x18],rsi
   140028a2f:	push   rdi
   140028a30:	sub    rsp,0x20
   140028a34:	mov    rbx,QWORD PTR [rip+0x4daf5]        # 0x140076530
   140028a3b:	mov    ebp,r8d
   140028a3e:	xor    rbx,QWORD PTR [rip+0x4860b]        # 0x140071050
   140028a45:	mov    edi,edx
   140028a47:	mov    rsi,rcx
   140028a4a:	je     0x140028a60
   140028a4c:	mov    rcx,rbx
   140028a4f:	call   0x140026cd0
   140028a54:	mov    r8d,ebp
   140028a57:	mov    edx,edi
   140028a59:	mov    rcx,rsi
   140028a5c:	call   rbx
   140028a5e:	jmp    0x140028a6b
   140028a60:	call   QWORD PTR [rip+0x2280a]        # 0x14004b270
   140028a66:	mov    eax,0x1
   140028a6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140028a70:	mov    rbp,QWORD PTR [rsp+0x38]
   140028a75:	mov    rsi,QWORD PTR [rsp+0x40]
   140028a7a:	add    rsp,0x20
   140028a7e:	pop    rdi
   140028a7f:	ret    
   140028a80:	mov    rax,rsp
   140028a83:	mov    QWORD PTR [rax+0x8],rbx
   140028a87:	mov    QWORD PTR [rax+0x10],rbp
   140028a8b:	mov    QWORD PTR [rax+0x18],rsi
   140028a8f:	mov    QWORD PTR [rax+0x20],rdi
   140028a93:	push   r14
   140028a95:	sub    rsp,0x20
   140028a99:	mov    rbp,rcx
   140028a9c:	lea    r14,[rip+0x288bd]        # 0x140051360
   140028aa3:	xor    edi,edi
   140028aa5:	mov    esi,0xe3
   140028aaa:	lea    eax,[rsi+rdi*1]
   140028aad:	mov    r8d,0x55
   140028ab3:	cdq    
   140028ab4:	mov    rcx,rbp
   140028ab7:	sub    eax,edx
   140028ab9:	sar    eax,1
   140028abb:	movsxd rbx,eax
   140028abe:	mov    rdx,rbx
   140028ac1:	add    rdx,rdx
   140028ac4:	mov    rdx,QWORD PTR [r14+rdx*8]
   140028ac8:	call   0x140028bfc
   140028acd:	test   eax,eax
   140028acf:	je     0x140028ae4
   140028ad1:	jns    0x140028ad8
   140028ad3:	lea    esi,[rbx-0x1]
   140028ad6:	jmp    0x140028adb
   140028ad8:	lea    edi,[rbx+0x1]
   140028adb:	cmp    edi,esi
   140028add:	jle    0x140028aaa
   140028adf:	or     eax,0xffffffff
   140028ae2:	jmp    0x140028aef
   140028ae4:	mov    rax,rbx
   140028ae7:	add    rax,rax
   140028aea:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   140028aef:	mov    rbx,QWORD PTR [rsp+0x30]
   140028af4:	mov    rbp,QWORD PTR [rsp+0x38]
   140028af9:	mov    rsi,QWORD PTR [rsp+0x40]
   140028afe:	mov    rdi,QWORD PTR [rsp+0x48]
   140028b03:	add    rsp,0x20
   140028b07:	pop    r14
   140028b09:	ret    
   140028b0a:	int3   
   140028b0b:	int3   
   140028b0c:	sub    rsp,0x28
   140028b10:	test   rcx,rcx
   140028b13:	je     0x140028b36
   140028b15:	call   0x140028a80
   140028b1a:	test   eax,eax
   140028b1c:	js     0x140028b36
   140028b1e:	cmp    eax,0xe4
   140028b23:	jae    0x140028b36
   140028b25:	cdqe   
   140028b27:	lea    rcx,[rip+0x279f2]        # 0x140050520
   140028b2e:	add    rax,rax
   140028b31:	mov    eax,DWORD PTR [rcx+rax*8]
   140028b34:	jmp    0x140028b38
   140028b36:	xor    eax,eax
   140028b38:	add    rsp,0x28
   140028b3c:	ret    
   140028b3d:	int3   
   140028b3e:	int3   
   140028b3f:	int3   
   140028b40:	mov    rax,rsp
   140028b43:	mov    QWORD PTR [rax+0x8],rbx
   140028b47:	mov    QWORD PTR [rax+0x10],rbp
   140028b4b:	mov    QWORD PTR [rax+0x18],rsi
   140028b4f:	mov    QWORD PTR [rax+0x20],rdi
   140028b53:	push   r14
   140028b55:	sub    rsp,0x50
   140028b59:	mov    rbx,QWORD PTR [rip+0x4dae8]        # 0x140076648
   140028b60:	mov    edi,r9d
   140028b63:	xor    rbx,QWORD PTR [rip+0x484e6]        # 0x140071050
   140028b6a:	mov    rsi,r8
   140028b6d:	mov    ebp,edx
   140028b6f:	mov    r14,rcx
   140028b72:	je     0x140028bb4
   140028b74:	mov    rcx,rbx
   140028b77:	call   0x140026cd0
   140028b7c:	xor    eax,eax
   140028b7e:	mov    r9d,edi
   140028b81:	mov    QWORD PTR [rsp+0x40],rax
   140028b86:	mov    r8,rsi
   140028b89:	mov    QWORD PTR [rsp+0x38],rax
   140028b8e:	mov    edx,ebp
   140028b90:	mov    QWORD PTR [rsp+0x30],rax
   140028b95:	mov    rcx,r14
   140028b98:	mov    eax,DWORD PTR [rsp+0x88]
   140028b9f:	mov    DWORD PTR [rsp+0x28],eax
   140028ba3:	mov    rax,QWORD PTR [rsp+0x80]
   140028bab:	mov    QWORD PTR [rsp+0x20],rax
   140028bb0:	call   rbx
   140028bb2:	jmp    0x140028be1
   140028bb4:	call   0x140028b0c
   140028bb9:	mov    ecx,eax
   140028bbb:	mov    r9d,edi
   140028bbe:	mov    eax,DWORD PTR [rsp+0x88]
   140028bc5:	mov    r8,rsi
   140028bc8:	mov    DWORD PTR [rsp+0x28],eax
   140028bcc:	mov    edx,ebp
   140028bce:	mov    rax,QWORD PTR [rsp+0x80]
   140028bd6:	mov    QWORD PTR [rsp+0x20],rax
   140028bdb:	call   QWORD PTR [rip+0x226bf]        # 0x14004b2a0
   140028be1:	mov    rbx,QWORD PTR [rsp+0x60]
   140028be6:	mov    rbp,QWORD PTR [rsp+0x68]
   140028beb:	mov    rsi,QWORD PTR [rsp+0x70]
   140028bf0:	mov    rdi,QWORD PTR [rsp+0x78]
   140028bf5:	add    rsp,0x50
   140028bf9:	pop    r14
   140028bfb:	ret    
   140028bfc:	xor    r9d,r9d
   140028bff:	mov    r10,rdx
   140028c02:	mov    r11,rcx
   140028c05:	test   r8,r8
   140028c08:	je     0x140028c4e
   140028c0a:	sub    r11,rdx
   140028c0d:	movzx  ecx,WORD PTR [r11+r10*1]
   140028c12:	lea    eax,[rcx-0x41]
   140028c15:	cmp    ax,0x19
   140028c19:	ja     0x140028c1f
   140028c1b:	add    cx,0x20
   140028c1f:	movzx  edx,WORD PTR [r10]
   140028c23:	lea    eax,[rdx-0x41]
   140028c26:	cmp    ax,0x19
   140028c2a:	ja     0x140028c30
   140028c2c:	add    dx,0x20
   140028c30:	add    r10,0x2
   140028c34:	sub    r8,0x1
   140028c38:	je     0x140028c44
   140028c3a:	test   cx,cx
   140028c3d:	je     0x140028c44
   140028c3f:	cmp    cx,dx
   140028c42:	je     0x140028c0d
   140028c44:	movzx  eax,dx
   140028c47:	movzx  r9d,cx
   140028c4b:	sub    r9d,eax
   140028c4e:	mov    eax,r9d
   140028c51:	ret    
   140028c52:	int3   
   140028c53:	int3   
   140028c54:	mov    QWORD PTR [rsp+0x8],rbx
   140028c59:	mov    QWORD PTR [rsp+0x10],rsi
   140028c5e:	push   rdi
   140028c5f:	sub    rsp,0x10
   140028c63:	movzx  edi,WORD PTR [rdx]
   140028c66:	xor    esi,esi
   140028c68:	mov    rbx,rdx
   140028c6b:	mov    r8,rcx
   140028c6e:	cmp    si,di
   140028c71:	jne    0x140028c7b
   140028c73:	mov    rax,rcx
   140028c76:	jmp    0x140028e41
   140028c7b:	cmp    DWORD PTR [rip+0x483de],0x2        # 0x140071060
   140028c82:	mov    r10d,0xfff
   140028c88:	lea    r11d,[r10-0xf]
   140028c8c:	jge    0x140028d6b
   140028c92:	movzx  eax,di
   140028c95:	xorps  xmm2,xmm2
   140028c98:	movd   xmm0,eax
   140028c9c:	pshuflw xmm1,xmm0,0x0
   140028ca1:	pshufd xmm3,xmm1,0x0
   140028ca6:	mov    rax,r8
   140028ca9:	and    rax,r10
   140028cac:	cmp    rax,r11
   140028caf:	ja     0x140028cde
   140028cb1:	movdqu xmm0,XMMWORD PTR [r8]
   140028cb6:	movdqa xmm1,xmm0
   140028cba:	pcmpeqw xmm0,xmm3
   140028cbe:	pcmpeqw xmm1,xmm2
   140028cc2:	por    xmm1,xmm0
   140028cc6:	pmovmskb eax,xmm1
   140028cca:	test   eax,eax
   140028ccc:	jne    0x140028cd4
   140028cce:	add    r8,0x10
   140028cd2:	jmp    0x140028ca6
   140028cd4:	bsf    ecx,eax
   140028cd7:	shr    rcx,1
   140028cda:	lea    r8,[r8+rcx*2]
   140028cde:	cmp    si,WORD PTR [r8]
   140028ce2:	je     0x140028e3f
   140028ce8:	cmp    di,WORD PTR [r8]
   140028cec:	jne    0x140028d62
   140028cee:	mov    rdx,r8
   140028cf1:	mov    r9,rbx
   140028cf4:	mov    rax,r9
   140028cf7:	and    rax,r10
   140028cfa:	cmp    rax,r11
   140028cfd:	ja     0x140028d46
   140028cff:	mov    rax,rdx
   140028d02:	and    rax,r10
   140028d05:	cmp    rax,r11
   140028d08:	ja     0x140028d46
   140028d0a:	movdqu xmm1,XMMWORD PTR [r9]
   140028d0f:	movdqu xmm0,XMMWORD PTR [rdx]
   140028d13:	pcmpeqw xmm0,xmm1
   140028d17:	pcmpeqw xmm1,xmm2
   140028d1b:	pcmpeqw xmm0,xmm2
   140028d1f:	por    xmm0,xmm1
   140028d23:	pmovmskb eax,xmm0
   140028d27:	test   eax,eax
   140028d29:	jne    0x140028d35
   140028d2b:	add    rdx,0x10
   140028d2f:	add    r9,0x10
   140028d33:	jmp    0x140028cf4
   140028d35:	bsf    eax,eax
   140028d38:	mov    ecx,eax
   140028d3a:	shr    rcx,1
   140028d3d:	add    rcx,rcx
   140028d40:	add    rdx,rcx
   140028d43:	add    r9,rcx
   140028d46:	movzx  eax,WORD PTR [r9]
   140028d4a:	cmp    si,ax
   140028d4d:	je     0x140028e3a
   140028d53:	cmp    WORD PTR [rdx],ax
   140028d56:	jne    0x140028d62
   140028d58:	add    rdx,0x2
   140028d5c:	add    r9,0x2
   140028d60:	jmp    0x140028cf4
   140028d62:	add    r8,0x2
   140028d66:	jmp    0x140028ca6
   140028d6b:	mov    rax,rbx
   140028d6e:	and    rax,r10
   140028d71:	cmp    rax,r11
   140028d74:	ja     0x140028d7c
   140028d76:	movdqu xmm0,XMMWORD PTR [rdx]
   140028d7a:	jmp    0x140028daa
   140028d7c:	xorps  xmm0,xmm0
   140028d7f:	mov    rcx,rbx
   140028d82:	movzx  edx,di
   140028d85:	mov    r9d,0x8
   140028d8b:	movzx  eax,dx
   140028d8e:	psrldq xmm0,0x2
   140028d93:	pinsrw xmm0,eax,0x7
   140028d98:	cmp    si,dx
   140028d9b:	je     0x140028da4
   140028d9d:	add    rcx,0x2
   140028da1:	movzx  edx,WORD PTR [rcx]
   140028da4:	sub    r9,0x1
   140028da8:	jne    0x140028d8b
   140028daa:	mov    rax,r8
   140028dad:	and    rax,r10
   140028db0:	cmp    rax,r11
   140028db3:	ja     0x140028e10
   140028db5:	movdqu xmm1,XMMWORD PTR [r8]
   140028dba:	pcmpistri xmm0,xmm1,0xd
   140028dc0:	jbe    0x140028dc8
   140028dc2:	add    r8,0x10
   140028dc6:	jmp    0x140028daa
   140028dc8:	jae    0x140028e3f
   140028dca:	pcmpistri xmm0,xmm1,0xd
   140028dd0:	movsxd rax,ecx
   140028dd3:	lea    r8,[r8+rax*2]
   140028dd7:	mov    rdx,r8
   140028dda:	mov    r9,rbx
   140028ddd:	mov    rax,rdx
   140028de0:	and    rax,r10
   140028de3:	cmp    rax,r11
   140028de6:	ja     0x140028e22
   140028de8:	mov    rax,r9
   140028deb:	and    rax,r10
   140028dee:	cmp    rax,r11
   140028df1:	ja     0x140028e22
   140028df3:	movdqu xmm1,XMMWORD PTR [rdx]
   140028df7:	movdqu xmm2,XMMWORD PTR [r9]
   140028dfc:	pcmpistri xmm2,xmm1,0xd
   140028e02:	jno    0x140028e1c
   140028e04:	js     0x140028e3a
   140028e06:	add    rdx,0x10
   140028e0a:	add    r9,0x10
   140028e0e:	jmp    0x140028ddd
   140028e10:	cmp    si,WORD PTR [r8]
   140028e14:	je     0x140028e3f
   140028e16:	cmp    WORD PTR [r8],di
   140028e1a:	je     0x140028dd7
   140028e1c:	add    r8,0x2
   140028e20:	jmp    0x140028daa
   140028e22:	movzx  eax,WORD PTR [r9]
   140028e26:	cmp    si,ax
   140028e29:	je     0x140028e3a
   140028e2b:	cmp    WORD PTR [rdx],ax
   140028e2e:	jne    0x140028e1c
   140028e30:	add    rdx,0x2
   140028e34:	add    r9,0x2
   140028e38:	jmp    0x140028ddd
   140028e3a:	mov    rax,r8
   140028e3d:	jmp    0x140028e41
   140028e3f:	xor    eax,eax
   140028e41:	mov    rbx,QWORD PTR [rsp+0x20]
   140028e46:	mov    rsi,QWORD PTR [rsp+0x28]
   140028e4b:	add    rsp,0x10
   140028e4f:	pop    rdi
   140028e50:	ret    
   140028e51:	int3   
   140028e52:	int3   
   140028e53:	int3   
   140028e54:	mov    r8,rcx
   140028e57:	movzx  r9d,dx
   140028e5b:	xor    ecx,ecx
   140028e5d:	cmp    DWORD PTR [rip+0x481fc],0x2        # 0x140071060
   140028e64:	jge    0x140028e91
   140028e66:	mov    rdx,r8
   140028e69:	movzx  eax,WORD PTR [r8]
   140028e6d:	add    r8,0x2
   140028e71:	test   ax,ax
   140028e74:	jne    0x140028e69
   140028e76:	sub    r8,0x2
   140028e7a:	cmp    r8,rdx
   140028e7d:	je     0x140028e85
   140028e7f:	cmp    WORD PTR [r8],r9w
   140028e83:	jne    0x140028e76
   140028e85:	cmp    WORD PTR [r8],r9w
   140028e89:	cmove  rcx,r8
   140028e8d:	mov    rax,rcx
   140028e90:	ret    
   140028e91:	mov    rdx,rcx
   140028e94:	jmp    0x140028ea8
   140028e96:	cmp    WORD PTR [r8],r9w
   140028e9a:	cmove  rdx,r8
   140028e9e:	cmp    WORD PTR [r8],cx
   140028ea2:	je     0x140028efe
   140028ea4:	add    r8,0x2
   140028ea8:	lea    eax,[r8+0x1]
   140028eac:	test   al,0xe
   140028eae:	jne    0x140028e96
   140028eb0:	cmp    cx,r9w
   140028eb4:	jne    0x140028eda
   140028eb6:	mov    eax,0xffff0001
   140028ebb:	movd   xmm1,eax
   140028ebf:	jmp    0x140028ec5
   140028ec1:	add    r8,0x10
   140028ec5:	movdqu xmm0,XMMWORD PTR [r8]
   140028eca:	pcmpistri xmm1,xmm0,0x15
   140028ed0:	jne    0x140028ec1
   140028ed2:	movsxd rax,ecx
   140028ed5:	lea    rax,[r8+rax*2]
   140028ed9:	ret    
   140028eda:	movzx  eax,r9w
   140028ede:	movd   xmm1,eax
   140028ee2:	movdqu xmm0,XMMWORD PTR [r8]
   140028ee7:	pcmpistri xmm1,xmm0,0x41
   140028eed:	jae    0x140028ef6
   140028eef:	movsxd rax,ecx
   140028ef2:	lea    rdx,[r8+rax*2]
   140028ef6:	je     0x140028efe
   140028ef8:	add    r8,0x10
   140028efc:	jmp    0x140028ee2
   140028efe:	mov    rax,rdx
   140028f01:	ret    
   140028f02:	int3   
   140028f03:	int3   
   140028f04:	mov    QWORD PTR [rsp+0x8],rbx
   140028f09:	mov    QWORD PTR [rsp+0x10],rsi
   140028f0e:	mov    QWORD PTR [rsp+0x18],rdi
   140028f13:	push   r14
   140028f15:	sub    rsp,0x20
   140028f19:	cmp    BYTE PTR [rcx+0x8],0x0
   140028f1d:	mov    r14,rdx
   140028f20:	mov    rsi,rcx
   140028f23:	je     0x140028f71
   140028f25:	mov    rax,QWORD PTR [rcx]
   140028f28:	test   rax,rax
   140028f2b:	je     0x140028f71
   140028f2d:	or     rdi,0xffffffffffffffff
   140028f31:	inc    rdi
   140028f34:	cmp    BYTE PTR [rax+rdi*1],0x0
   140028f38:	jne    0x140028f31
   140028f3a:	lea    rcx,[rdi+0x1]
   140028f3e:	call   0x140032ff4
   140028f43:	mov    rbx,rax
   140028f46:	test   rax,rax
   140028f49:	je     0x140028f67
   140028f4b:	mov    r8,QWORD PTR [rsi]
   140028f4e:	lea    rdx,[rdi+0x1]
   140028f52:	mov    rcx,rax
   140028f55:	call   0x140038d18
   140028f5a:	mov    rax,rbx
   140028f5d:	mov    BYTE PTR [r14+0x8],0x1
   140028f62:	mov    QWORD PTR [r14],rax
   140028f65:	xor    ebx,ebx
   140028f67:	mov    rcx,rbx
   140028f6a:	call   0x1400304c4
   140028f6f:	jmp    0x140028f7b
   140028f71:	mov    rax,QWORD PTR [rcx]
   140028f74:	mov    QWORD PTR [rdx],rax
   140028f77:	mov    BYTE PTR [rdx+0x8],0x0
   140028f7b:	mov    rbx,QWORD PTR [rsp+0x30]
   140028f80:	mov    rsi,QWORD PTR [rsp+0x38]
   140028f85:	mov    rdi,QWORD PTR [rsp+0x40]
   140028f8a:	add    rsp,0x20
   140028f8e:	pop    r14
   140028f90:	ret    
   140028f91:	int3   
   140028f92:	int3   
   140028f93:	int3   
   140028f94:	rex push rbx
   140028f96:	sub    rsp,0x20
   140028f9a:	cmp    BYTE PTR [rcx+0x8],0x0
   140028f9e:	mov    rbx,rcx
   140028fa1:	je     0x140028fab
   140028fa3:	mov    rcx,QWORD PTR [rcx]
   140028fa6:	call   0x1400304c4
   140028fab:	mov    BYTE PTR [rbx+0x8],0x0
   140028faf:	and    QWORD PTR [rbx],0x0
   140028fb3:	add    rsp,0x20
   140028fb7:	pop    rbx
   140028fb8:	ret    
   140028fb9:	int3   
   140028fba:	int3   
   140028fbb:	int3   
   140028fbc:	int3   
   140028fbd:	int3   
   140028fbe:	int3   
   140028fbf:	int3   
   140028fc0:	int3   
   140028fc1:	int3   
   140028fc2:	int3   
   140028fc3:	int3   
   140028fc4:	int3   
   140028fc5:	int3   
   140028fc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140028fd0:	mov    r11,rcx
   140028fd3:	mov    r10,rdx
   140028fd6:	cmp    r8,0x10
   140028fda:	jbe    0x140029050
   140028fe0:	cmp    r8,0x20
   140028fe4:	jbe    0x140029030
   140028fe6:	sub    rdx,rcx
   140028fe9:	jae    0x140028ffa
   140028feb:	mov    rax,r10
   140028fee:	add    rax,r8
   140028ff1:	cmp    rcx,rax
   140028ff4:	jl     0x140029330
   140028ffa:	cmp    r8,0x80
   140029001:	jbe    0x140029270
   140029007:	bt     DWORD PTR [rip+0x4d225],0x1        # 0x140076234
   14002900f:	jae    0x1400291c0
   140029015:	mov    rax,r11
   140029018:	mov    r11,rdi
   14002901b:	mov    rdi,rcx
   14002901e:	mov    rcx,r8
   140029021:	mov    r8,rsi
   140029024:	mov    rsi,r10
   140029027:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140029029:	mov    rsi,r8
   14002902c:	mov    rdi,r11
   14002902f:	ret    
   140029030:	movups xmm0,XMMWORD PTR [rdx]
   140029033:	movups xmm1,XMMWORD PTR [r8+rdx*1-0x10]
   140029039:	movups XMMWORD PTR [rcx],xmm0
   14002903c:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm1
   140029042:	mov    rax,rcx
   140029045:	ret    
   140029046:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029050:	mov    rax,rcx
   140029053:	lea    r9,[rip+0xfffffffffffd6fa6]        # 0x140000000
   14002905a:	mov    ecx,DWORD PTR [r9+r8*4+0x29067]
   140029062:	add    rcx,r9
   140029065:	jmp    rcx
   140029067:	mov    al,0x90
   140029069:	add    al,BYTE PTR [rax]
   14002906b:	iret   
   14002906c:	nop
   14002906d:	add    al,BYTE PTR [rax]
   14002906f:	mov    cl,0x90
   140029071:	add    al,BYTE PTR [rax]
   140029073:	mov    edi,0xfb000290
   140029078:	nop
   140029079:	add    al,BYTE PTR [rax]
   14002907b:	add    BYTE PTR [rcx-0x6eeffffe],dl
   140029081:	add    al,BYTE PTR [rax]
   140029083:	and    BYTE PTR [rcx-0x6f47fffe],dl
   140029089:	add    al,BYTE PTR [rax]
   14002908b:	push   rax
   14002908c:	xchg   ecx,eax
   14002908d:	add    al,BYTE PTR [rax]
   14002908f:	(bad)  
   140029090:	xchg   ecx,eax
   140029091:	add    al,BYTE PTR [rax]
   140029093:	loopne 0x140029025
   140029095:	add    al,BYTE PTR [rax]
   140029097:	jo     0x14002902a
   140029099:	add    al,BYTE PTR [rax]
   14002909b:	cmp    BYTE PTR [rcx-0x6e7ffffe],dl
   1400290a1:	add    al,BYTE PTR [rax]
   1400290a3:	movabs al,ds:0xf000290d5000291
   1400290ac:	(bad)  
   1400290ad:	add    BYTE PTR [rax],r8b
   1400290b0:	ret    
   1400290b1:	movzx  ecx,WORD PTR [rdx]
   1400290b4:	mov    WORD PTR [rax],cx
   1400290b7:	ret    
   1400290b8:	mov    rcx,QWORD PTR [rdx]
   1400290bb:	mov    QWORD PTR [rax],rcx
   1400290be:	ret    
   1400290bf:	movzx  ecx,WORD PTR [rdx]
   1400290c2:	movzx  r8d,BYTE PTR [rdx+0x2]
   1400290c7:	mov    WORD PTR [rax],cx
   1400290ca:	mov    BYTE PTR [rax+0x2],r8b
   1400290ce:	ret    
   1400290cf:	movzx  ecx,BYTE PTR [rdx]
   1400290d2:	mov    BYTE PTR [rax],cl
   1400290d4:	ret    
   1400290d5:	movdqu xmm0,XMMWORD PTR [rdx]
   1400290d9:	movdqu XMMWORD PTR [rax],xmm0
   1400290dd:	ret    
   1400290de:	xchg   ax,ax
   1400290e0:	mov    r8,QWORD PTR [rdx]
   1400290e3:	movzx  ecx,WORD PTR [rdx+0x8]
   1400290e7:	movzx  r9d,BYTE PTR [rdx+0xa]
   1400290ec:	mov    QWORD PTR [rax],r8
   1400290ef:	mov    WORD PTR [rax+0x8],cx
   1400290f3:	mov    BYTE PTR [rax+0xa],r9b
   1400290f7:	mov    rcx,r11
   1400290fa:	ret    
   1400290fb:	mov    ecx,DWORD PTR [rdx]
   1400290fd:	mov    DWORD PTR [rax],ecx
   1400290ff:	ret    
   140029100:	mov    ecx,DWORD PTR [rdx]
   140029102:	movzx  r8d,BYTE PTR [rdx+0x4]
   140029107:	mov    DWORD PTR [rax],ecx
   140029109:	mov    BYTE PTR [rax+0x4],r8b
   14002910d:	ret    
   14002910e:	xchg   ax,ax
   140029110:	mov    ecx,DWORD PTR [rdx]
   140029112:	movzx  r8d,WORD PTR [rdx+0x4]
   140029117:	mov    DWORD PTR [rax],ecx
   140029119:	mov    WORD PTR [rax+0x4],r8w
   14002911e:	ret    
   14002911f:	nop
   140029120:	mov    ecx,DWORD PTR [rdx]
   140029122:	movzx  r8d,WORD PTR [rdx+0x4]
   140029127:	movzx  r9d,BYTE PTR [rdx+0x6]
   14002912c:	mov    DWORD PTR [rax],ecx
   14002912e:	mov    WORD PTR [rax+0x4],r8w
   140029133:	mov    BYTE PTR [rax+0x6],r9b
   140029137:	ret    
   140029138:	mov    r8,QWORD PTR [rdx]
   14002913b:	mov    ecx,DWORD PTR [rdx+0x8]
   14002913e:	movzx  r9d,BYTE PTR [rdx+0xc]
   140029143:	mov    QWORD PTR [rax],r8
   140029146:	mov    DWORD PTR [rax+0x8],ecx
   140029149:	mov    BYTE PTR [rax+0xc],r9b
   14002914d:	ret    
   14002914e:	xchg   ax,ax
   140029150:	mov    r8,QWORD PTR [rdx]
   140029153:	movzx  ecx,BYTE PTR [rdx+0x8]
   140029157:	mov    QWORD PTR [rax],r8
   14002915a:	mov    BYTE PTR [rax+0x8],cl
   14002915d:	ret    
   14002915e:	xchg   ax,ax
   140029160:	mov    r8,QWORD PTR [rdx]
   140029163:	movzx  ecx,WORD PTR [rdx+0x8]
   140029167:	mov    QWORD PTR [rax],r8
   14002916a:	mov    WORD PTR [rax+0x8],cx
   14002916e:	ret    
   14002916f:	nop
   140029170:	mov    r8,QWORD PTR [rdx]
   140029173:	mov    ecx,DWORD PTR [rdx+0x8]
   140029176:	mov    QWORD PTR [rax],r8
   140029179:	mov    DWORD PTR [rax+0x8],ecx
   14002917c:	ret    
   14002917d:	nop    DWORD PTR [rax]
   140029180:	mov    r8,QWORD PTR [rdx]
   140029183:	mov    ecx,DWORD PTR [rdx+0x8]
   140029186:	movzx  r9d,WORD PTR [rdx+0xc]
   14002918b:	mov    QWORD PTR [rax],r8
   14002918e:	mov    DWORD PTR [rax+0x8],ecx
   140029191:	mov    WORD PTR [rax+0xc],r9w
   140029196:	ret    
   140029197:	nop    WORD PTR [rax+rax*1+0x0]
   1400291a0:	mov    r8,QWORD PTR [rdx]
   1400291a3:	mov    ecx,DWORD PTR [rdx+0x8]
   1400291a6:	movzx  r9d,WORD PTR [rdx+0xc]
   1400291ab:	movzx  r10d,BYTE PTR [rdx+0xe]
   1400291b0:	mov    QWORD PTR [rax],r8
   1400291b3:	mov    DWORD PTR [rax+0x8],ecx
   1400291b6:	mov    WORD PTR [rax+0xc],r9w
   1400291bb:	mov    BYTE PTR [rax+0xe],r10b
   1400291bf:	ret    
   1400291c0:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400291c4:	add    r8,rcx
   1400291c7:	add    rcx,0x10
   1400291cb:	test   r11b,0xf
   1400291cf:	je     0x1400291e4
   1400291d1:	movaps xmm1,xmm0
   1400291d4:	and    rcx,0xfffffffffffffff0
   1400291d8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400291dc:	add    rcx,0x10
   1400291e0:	movups XMMWORD PTR [r11],xmm1
   1400291e4:	sub    r8,rcx
   1400291e7:	mov    r9,r8
   1400291ea:	shr    r9,0x7
   1400291ee:	je     0x14002927c
   1400291f4:	movaps XMMWORD PTR [rcx-0x10],xmm0
   1400291f8:	cmp    r9,QWORD PTR [rip+0x47e69]        # 0x140071068
   1400291ff:	jbe    0x140029218
   140029201:	jmp    0x1400292c8
   140029206:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029210:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140029214:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140029218:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14002921c:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140029221:	add    rcx,0x80
   140029228:	movaps XMMWORD PTR [rcx-0x80],xmm0
   14002922c:	movaps XMMWORD PTR [rcx-0x70],xmm1
   140029230:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   140029235:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   14002923a:	dec    r9
   14002923d:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140029241:	movaps XMMWORD PTR [rcx-0x50],xmm1
   140029245:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   14002924a:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   14002924f:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140029253:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140029257:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   14002925c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140029261:	jne    0x140029210
   140029263:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140029267:	and    r8,0x7f
   14002926b:	movaps xmm0,xmm1
   14002926e:	jmp    0x14002927c
   140029270:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140029274:	add    rcx,0x10
   140029278:	sub    r8,0x10
   14002927c:	mov    r9,r8
   14002927f:	shr    r9,0x4
   140029283:	je     0x1400292a1
   140029285:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140029290:	movups XMMWORD PTR [rcx-0x10],xmm0
   140029294:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140029298:	add    rcx,0x10
   14002929c:	dec    r9
   14002929f:	jne    0x140029290
   1400292a1:	and    r8,0xf
   1400292a5:	je     0x1400292b4
   1400292a7:	lea    rax,[r8+rcx*1]
   1400292ab:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   1400292b0:	movups XMMWORD PTR [rax-0x10],xmm1
   1400292b4:	movups XMMWORD PTR [rcx-0x10],xmm0
   1400292b8:	mov    rax,r11
   1400292bb:	ret    
   1400292bc:	nop    DWORD PTR [rax+0x0]
   1400292c0:	movntps XMMWORD PTR [rcx-0x20],xmm0
   1400292c4:	movntps XMMWORD PTR [rcx-0x10],xmm1
   1400292c8:	prefetchnta BYTE PTR [rdx+rcx*1+0x200]
   1400292d0:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400292d4:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400292d9:	add    rcx,0x80
   1400292e0:	movntps XMMWORD PTR [rcx-0x80],xmm0
   1400292e4:	movntps XMMWORD PTR [rcx-0x70],xmm1
   1400292e8:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400292ed:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400292f2:	dec    r9
   1400292f5:	movntps XMMWORD PTR [rcx-0x60],xmm0
   1400292f9:	movntps XMMWORD PTR [rcx-0x50],xmm1
   1400292fd:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   140029302:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   140029307:	prefetchnta BYTE PTR [rdx+rcx*1+0x240]
   14002930f:	movntps XMMWORD PTR [rcx-0x40],xmm0
   140029313:	movntps XMMWORD PTR [rcx-0x30],xmm1
   140029317:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   14002931c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140029321:	jne    0x1400292c0
   140029323:	sfence 
   140029326:	jmp    0x140029263
   14002932b:	nop    DWORD PTR [rax+rax*1+0x0]
   140029330:	add    rcx,r8
   140029333:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140029338:	sub    rcx,0x10
   14002933c:	sub    r8,0x10
   140029340:	test   cl,0xf
   140029343:	je     0x14002935c
   140029345:	mov    rax,rcx
   140029348:	and    rcx,0xfffffffffffffff0
   14002934c:	movups xmm1,xmm0
   14002934f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140029353:	movups XMMWORD PTR [rax],xmm1
   140029356:	mov    r8,rcx
   140029359:	sub    r8,r11
   14002935c:	mov    r9,r8
   14002935f:	shr    r9,0x7
   140029363:	je     0x1400293cd
   140029365:	movaps XMMWORD PTR [rcx],xmm0
   140029368:	jmp    0x140029377
   14002936a:	nop    WORD PTR [rax+rax*1+0x0]
   140029370:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140029374:	movaps XMMWORD PTR [rcx],xmm1
   140029377:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14002937c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140029381:	sub    rcx,0x80
   140029388:	movaps XMMWORD PTR [rcx+0x70],xmm0
   14002938c:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140029390:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140029395:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   14002939a:	dec    r9
   14002939d:	movaps XMMWORD PTR [rcx+0x50],xmm0
   1400293a1:	movaps XMMWORD PTR [rcx+0x40],xmm1
   1400293a5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   1400293aa:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   1400293af:	movaps XMMWORD PTR [rcx+0x30],xmm0
   1400293b3:	movaps XMMWORD PTR [rcx+0x20],xmm1
   1400293b7:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   1400293bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   1400293c0:	jne    0x140029370
   1400293c2:	movaps XMMWORD PTR [rcx+0x10],xmm0
   1400293c6:	and    r8,0x7f
   1400293ca:	movaps xmm0,xmm1
   1400293cd:	mov    r9,r8
   1400293d0:	shr    r9,0x4
   1400293d4:	je     0x1400293f0
   1400293d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400293e0:	movups XMMWORD PTR [rcx],xmm0
   1400293e3:	sub    rcx,0x10
   1400293e7:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400293eb:	dec    r9
   1400293ee:	jne    0x1400293e0
   1400293f0:	and    r8,0xf
   1400293f4:	je     0x1400293fe
   1400293f6:	movups xmm1,XMMWORD PTR [r10]
   1400293fa:	movups XMMWORD PTR [r11],xmm1
   1400293fe:	movups XMMWORD PTR [rcx],xmm0
   140029401:	mov    rax,r11
   140029404:	ret    
   140029405:	int3   
   140029406:	int3   
   140029407:	int3   
   140029408:	rex push rbx
   14002940a:	sub    rsp,0x20
   14002940e:	xor    edx,edx
   140029410:	xor    eax,eax
   140029412:	lock cmpxchg QWORD PTR [rip+0x4d38d],rdx        # 0x1400767a8
   14002941b:	mov    rbx,QWORD PTR [rip+0x47c2e]        # 0x140071050
   140029422:	mov    ecx,ebx
   140029424:	xor    rbx,rax
   140029427:	and    ecx,0x3f
   14002942a:	ror    rbx,cl
   14002942d:	test   rbx,rbx
   140029430:	je     0x14002943c
   140029432:	mov    rcx,rbx
   140029435:	call   0x140026cd0
   14002943a:	call   rbx
   14002943c:	call   0x1400365a8
   140029441:	int3   
   140029442:	int3   
   140029443:	int3   
   140029444:	test   rcx,rcx
   140029447:	je     0x1400294c8
   140029449:	mov    QWORD PTR [rsp+0x8],rbx
   14002944e:	mov    BYTE PTR [rsp+0x10],dl
   140029452:	push   rdi
   140029453:	sub    rsp,0x20
   140029457:	cmp    DWORD PTR [rcx],0xe06d7363
   14002945d:	jne    0x1400294be
   14002945f:	cmp    DWORD PTR [rcx+0x18],0x4
   140029463:	jne    0x1400294be
   140029465:	mov    eax,DWORD PTR [rcx+0x20]
   140029468:	sub    eax,0x19930520
   14002946d:	cmp    eax,0x2
   140029470:	ja     0x1400294be
   140029472:	mov    rax,QWORD PTR [rcx+0x30]
   140029476:	test   rax,rax
   140029479:	je     0x1400294be
   14002947b:	movsxd rdx,DWORD PTR [rax+0x4]
   14002947f:	test   edx,edx
   140029481:	je     0x140029499
   140029483:	add    rdx,QWORD PTR [rcx+0x38]
   140029487:	mov    rcx,QWORD PTR [rcx+0x28]
   14002948b:	call   0x140029e88
   140029490:	nop
   140029491:	jmp    0x1400294be
   140029493:	call   0x1400359d4
   140029498:	nop
   140029499:	test   BYTE PTR [rax],0x10
   14002949c:	je     0x1400294be
   14002949e:	mov    rax,QWORD PTR [rcx+0x28]
   1400294a2:	mov    rdi,QWORD PTR [rax]
   1400294a5:	test   rdi,rdi
   1400294a8:	je     0x1400294be
   1400294aa:	mov    rax,QWORD PTR [rdi]
   1400294ad:	mov    rbx,QWORD PTR [rax+0x10]
   1400294b1:	mov    rcx,rbx
   1400294b4:	call   0x140026cd0
   1400294b9:	mov    rcx,rdi
   1400294bc:	call   rbx
   1400294be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400294c3:	add    rsp,0x20
   1400294c7:	pop    rdi
   1400294c8:	ret    
   1400294c9:	int3   
   1400294ca:	int3   
   1400294cb:	int3   
   1400294cc:	rex push rbx
   1400294ce:	sub    rsp,0x20
   1400294d2:	mov    rbx,rcx
   1400294d5:	mov    rax,rdx
   1400294d8:	lea    rcx,[rip+0x22269]        # 0x14004b748
   1400294df:	mov    QWORD PTR [rbx],rcx
   1400294e2:	lea    rdx,[rbx+0x8]
   1400294e6:	xor    ecx,ecx
   1400294e8:	mov    QWORD PTR [rdx],rcx
   1400294eb:	mov    QWORD PTR [rdx+0x8],rcx
   1400294ef:	lea    rcx,[rax+0x8]
   1400294f3:	call   0x140028f04
   1400294f8:	lea    rax,[rip+0x29d41]        # 0x140053240
   1400294ff:	mov    QWORD PTR [rbx],rax
   140029502:	mov    rax,rbx
   140029505:	add    rsp,0x20
   140029509:	pop    rbx
   14002950a:	ret    
   14002950b:	int3   
   14002950c:	xor    eax,eax
   14002950e:	mov    QWORD PTR [rcx+0x10],rax
   140029512:	lea    rax,[rip+0x29d37]        # 0x140053250
   140029519:	mov    QWORD PTR [rcx+0x8],rax
   14002951d:	lea    rax,[rip+0x29d1c]        # 0x140053240
   140029524:	mov    QWORD PTR [rcx],rax
   140029527:	mov    rax,rcx
   14002952a:	ret    
   14002952b:	int3   
   14002952c:	mov    rax,rsp
   14002952f:	mov    QWORD PTR [rax+0x8],rbx
   140029533:	mov    QWORD PTR [rax+0x18],rbp
   140029537:	push   rsi
   140029538:	push   rdi
   140029539:	push   r12
   14002953b:	push   r14
   14002953d:	push   r15
   14002953f:	sub    rsp,0x50
   140029543:	mov    r15,QWORD PTR [rsp+0xa0]
   14002954b:	mov    rbp,r9
   14002954e:	mov    r14,rdx
   140029551:	lea    r9,[rax+0x10]
   140029555:	mov    r12,r8
   140029558:	mov    rbx,rcx
   14002955b:	mov    r8,r15
   14002955e:	mov    rdx,rbp
   140029561:	mov    rcx,r14
   140029564:	call   0x14002acd4
   140029569:	mov    r9,QWORD PTR [rsp+0xb0]
   140029571:	mov    rdi,rax
   140029574:	mov    rsi,QWORD PTR [rsp+0xa8]
   14002957c:	test   r9,r9
   14002957f:	je     0x14002958f
   140029581:	mov    r8,rsi
   140029584:	mov    rdx,rax
   140029587:	mov    rcx,rbx
   14002958a:	call   0x140029ecc
   14002958f:	call   0x14002b0e4
   140029594:	movsxd rcx,DWORD PTR [rsi+0xc]
   140029598:	mov    r9,rdi
   14002959b:	add    rax,rcx
   14002959e:	mov    r8,r12
   1400295a1:	mov    cl,BYTE PTR [rsp+0xd8]
   1400295a8:	mov    BYTE PTR [rsp+0x40],cl
   1400295ac:	mov    rcx,QWORD PTR [rsp+0xb8]
   1400295b4:	mov    QWORD PTR [rsp+0x38],rbp
   1400295b9:	mov    QWORD PTR [rsp+0x30],r15
   1400295be:	mov    edx,DWORD PTR [rcx]
   1400295c0:	mov    rcx,r14
   1400295c3:	mov    DWORD PTR [rsp+0x28],edx
   1400295c7:	mov    rdx,rbx
   1400295ca:	mov    QWORD PTR [rsp+0x20],rax
   1400295cf:	call   0x14002b16c
   1400295d4:	lea    r11,[rsp+0x50]
   1400295d9:	mov    rbx,QWORD PTR [r11+0x30]
   1400295dd:	mov    rbp,QWORD PTR [r11+0x40]
   1400295e1:	mov    rsp,r11
   1400295e4:	pop    r15
   1400295e6:	pop    r14
   1400295e8:	pop    r12
   1400295ea:	pop    rdi
   1400295eb:	pop    rsi
   1400295ec:	ret    
   1400295ed:	int3   
   1400295ee:	int3   
   1400295ef:	int3   
   1400295f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400295f5:	push   rdi
   1400295f6:	sub    rsp,0x20
   1400295fa:	mov    r9,QWORD PTR [rcx]
   1400295fd:	mov    rbx,r8
   140029600:	and    DWORD PTR [r8],0x0
   140029604:	mov    r8d,0xe06d7363
   14002960a:	cmp    DWORD PTR [r9],r8d
   14002960d:	jne    0x140029669
   14002960f:	cmp    DWORD PTR [r9+0x18],0x4
   140029614:	mov    edi,0x1
   140029619:	mov    r10d,0x19930520
   14002961f:	jne    0x14002963c
   140029621:	mov    eax,DWORD PTR [r9+0x20]
   140029625:	sub    eax,r10d
   140029628:	cmp    eax,0x2
   14002962b:	ja     0x14002963c
   14002962d:	mov    rax,QWORD PTR [rdx+0x28]
   140029631:	cmp    QWORD PTR [r9+0x28],rax
   140029635:	mov    ecx,DWORD PTR [rbx]
   140029637:	cmove  ecx,edi
   14002963a:	mov    DWORD PTR [rbx],ecx
   14002963c:	cmp    DWORD PTR [r9],r8d
   14002963f:	jne    0x140029669
   140029641:	cmp    DWORD PTR [r9+0x18],0x4
   140029646:	jne    0x140029669
   140029648:	mov    ecx,DWORD PTR [r9+0x20]
   14002964c:	sub    ecx,r10d
   14002964f:	cmp    ecx,0x2
   140029652:	ja     0x140029669
   140029654:	cmp    QWORD PTR [r9+0x30],0x0
   140029659:	jne    0x140029669
   14002965b:	call   0x14002b9fc
   140029660:	mov    DWORD PTR [rax+0x40],edi
   140029663:	mov    eax,edi
   140029665:	mov    DWORD PTR [rbx],edi
   140029667:	jmp    0x14002966b
   140029669:	xor    eax,eax
   14002966b:	mov    rbx,QWORD PTR [rsp+0x30]
   140029670:	add    rsp,0x20
   140029674:	pop    rdi
   140029675:	ret    
   140029676:	int3   
   140029677:	int3   
   140029678:	mov    rax,rsp
   14002967b:	mov    QWORD PTR [rax+0x8],rbx
   14002967f:	mov    QWORD PTR [rax+0x10],rsi
   140029683:	mov    QWORD PTR [rax+0x20],rdi
   140029687:	mov    QWORD PTR [rax+0x18],r8
   14002968b:	push   rbp
   14002968c:	push   r12
   14002968e:	push   r13
   140029690:	push   r14
   140029692:	push   r15
   140029694:	lea    rbp,[rax-0x3f]
   140029698:	sub    rsp,0xb0
   14002969f:	mov    rbx,QWORD PTR [rbp+0x67]
   1400296a3:	mov    r13,rdx
   1400296a6:	mov    rdi,rcx
   1400296a9:	xor    r12d,r12d
   1400296ac:	mov    rcx,rbx
   1400296af:	mov    BYTE PTR [rbp-0x39],r12b
   1400296b3:	mov    rdx,r9
   1400296b6:	mov    BYTE PTR [rbp-0x38],r12b
   1400296ba:	mov    r15,r9
   1400296bd:	mov    r14,r8
   1400296c0:	call   0x14002bbd0
   1400296c5:	lea    r9,[rbp-0x11]
   1400296c9:	mov    r8,rbx
   1400296cc:	mov    rdx,r15
   1400296cf:	mov    rcx,r13
   1400296d2:	mov    esi,eax
   1400296d4:	call   0x14002acd4
   1400296d9:	mov    r8,rbx
   1400296dc:	mov    rdx,r15
   1400296df:	mov    rcx,r13
   1400296e2:	call   0x14002bb5c
   1400296e7:	mov    r8,rbx
   1400296ea:	mov    rdx,r15
   1400296ed:	cmp    esi,eax
   1400296ef:	jle    0x140029710
   1400296f1:	mov    r9d,esi
   1400296f4:	lea    rcx,[rbp-0x11]
   1400296f8:	call   0x14002bb88
   1400296fd:	mov    r9d,esi
   140029700:	mov    r8,rbx
   140029703:	mov    rdx,r15
   140029706:	mov    rcx,r13
   140029709:	call   0x14002bb94
   14002970e:	jmp    0x14002971a
   140029710:	mov    rcx,r13
   140029713:	call   0x14002bb5c
   140029718:	mov    esi,eax
   14002971a:	cmp    esi,0xffffffff
   14002971d:	jl     0x140029b40
   140029723:	cmp    esi,DWORD PTR [rbx+0x4]
   140029726:	jge    0x140029b40
   14002972c:	cmp    DWORD PTR [rdi],0xe06d7363
   140029732:	jne    0x140029a9b
   140029738:	cmp    DWORD PTR [rdi+0x18],0x4
   14002973c:	jne    0x14002985a
   140029742:	mov    eax,DWORD PTR [rdi+0x20]
   140029745:	sub    eax,0x19930520
   14002974a:	cmp    eax,0x2
   14002974d:	ja     0x14002985a
   140029753:	cmp    QWORD PTR [rdi+0x30],r12
   140029757:	jne    0x14002985a
   14002975d:	call   0x14002b9fc
   140029762:	cmp    QWORD PTR [rax+0x20],r12
   140029766:	je     0x140029ad7
   14002976c:	call   0x14002b9fc
   140029771:	mov    rdi,QWORD PTR [rax+0x20]
   140029775:	call   0x14002b9fc
   14002977a:	mov    rcx,QWORD PTR [rdi+0x38]
   14002977e:	mov    BYTE PTR [rbp-0x39],0x1
   140029782:	mov    r14,QWORD PTR [rax+0x28]
   140029786:	mov    QWORD PTR [rbp+0x57],r14
   14002978a:	call   0x14002b154
   14002978f:	test   rdi,rdi
   140029792:	je     0x140029b28
   140029798:	cmp    DWORD PTR [rdi],0xe06d7363
   14002979e:	jne    0x1400297bd
   1400297a0:	cmp    DWORD PTR [rdi+0x18],0x4
   1400297a4:	jne    0x1400297bd
   1400297a6:	mov    eax,DWORD PTR [rdi+0x20]
   1400297a9:	sub    eax,0x19930520
   1400297ae:	cmp    eax,0x2
   1400297b1:	ja     0x1400297bd
   1400297b3:	cmp    QWORD PTR [rdi+0x30],r12
   1400297b7:	je     0x140029af8
   1400297bd:	call   0x14002b9fc
   1400297c2:	cmp    QWORD PTR [rax+0x38],r12
   1400297c6:	je     0x14002985a
   1400297cc:	call   0x14002b9fc
   1400297d1:	mov    r14,QWORD PTR [rax+0x38]
   1400297d5:	call   0x14002b9fc
   1400297da:	mov    rdx,r14
   1400297dd:	mov    rcx,rdi
   1400297e0:	mov    QWORD PTR [rax+0x38],r12
   1400297e4:	call   0x140029db4
   1400297e9:	test   al,al
   1400297eb:	jne    0x140029856
   1400297ed:	mov    r15d,r12d
   1400297f0:	cmp    DWORD PTR [r14],r12d
   1400297f3:	jle    0x140029afe
   1400297f9:	mov    rsi,r12
   1400297fc:	call   0x14002b0e4
   140029801:	movsxd rcx,DWORD PTR [r14+0x4]
   140029805:	add    rax,rsi
   140029808:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14002980d:	je     0x14002982a
   14002980f:	call   0x14002b0e4
   140029814:	movsxd rcx,DWORD PTR [r14+0x4]
   140029818:	add    rax,rsi
   14002981b:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140029820:	call   0x14002b0e4
   140029825:	add    rax,rbx
   140029828:	jmp    0x14002982d
   14002982a:	mov    rax,r12
   14002982d:	lea    rcx,[rax+0x8]
   140029831:	lea    rdx,[rip+0x48998]        # 0x1400721d0
   140029838:	call   0x14002b990
   14002983d:	test   eax,eax
   14002983f:	je     0x140029b04
   140029845:	inc    r15d
   140029848:	add    rsi,0x14
   14002984c:	cmp    r15d,DWORD PTR [r14]
   14002984f:	jl     0x1400297fc
   140029851:	jmp    0x140029afe
   140029856:	mov    r14,QWORD PTR [rbp+0x57]
   14002985a:	cmp    DWORD PTR [rdi],0xe06d7363
   140029860:	jne    0x140029a9b
   140029866:	cmp    DWORD PTR [rdi+0x18],0x4
   14002986a:	jne    0x140029a9b
   140029870:	mov    eax,DWORD PTR [rdi+0x20]
   140029873:	sub    eax,0x19930520
   140029878:	cmp    eax,0x2
   14002987b:	ja     0x140029a9b
   140029881:	cmp    DWORD PTR [rbx+0xc],r12d
   140029885:	jbe    0x1400299d9
   14002988b:	mov    r8d,DWORD PTR [rbp+0x77]
   14002988f:	lea    rax,[rbp-0x29]
   140029893:	mov    QWORD PTR [rsp+0x30],r15
   140029898:	mov    r9d,esi
   14002989b:	mov    QWORD PTR [rsp+0x28],rax
   1400298a0:	mov    rdx,rbx
   1400298a3:	lea    rax,[rbp-0x35]
   1400298a7:	mov    rcx,r13
   1400298aa:	mov    QWORD PTR [rsp+0x20],rax
   1400298af:	call   0x14002ada0
   1400298b4:	mov    ecx,DWORD PTR [rbp-0x35]
   1400298b7:	mov    edx,DWORD PTR [rbp-0x29]
   1400298ba:	cmp    ecx,edx
   1400298bc:	jae    0x1400299d9
   1400298c2:	lea    r14,[rax+0x10]
   1400298c6:	cmp    DWORD PTR [r14-0x10],esi
   1400298ca:	jg     0x1400299bb
   1400298d0:	cmp    esi,DWORD PTR [r14-0xc]
   1400298d4:	jg     0x1400299bb
   1400298da:	call   0x14002b0e4
   1400298df:	movsxd r12,DWORD PTR [r14]
   1400298e2:	add    r12,rax
   1400298e5:	mov    eax,DWORD PTR [r14-0x4]
   1400298e9:	mov    DWORD PTR [rbp-0x2d],eax
   1400298ec:	test   eax,eax
   1400298ee:	jle    0x1400299b5
   1400298f4:	call   0x14002b0f8
   1400298f9:	mov    rcx,QWORD PTR [rdi+0x30]
   1400298fd:	add    rax,0x4
   140029901:	movsxd rdx,DWORD PTR [rcx+0xc]
   140029905:	add    rax,rdx
   140029908:	mov    QWORD PTR [rbp-0x21],rax
   14002990c:	call   0x14002b0f8
   140029911:	mov    rcx,QWORD PTR [rdi+0x30]
   140029915:	movsxd rdx,DWORD PTR [rcx+0xc]
   140029919:	mov    ecx,DWORD PTR [rax+rdx*1]
   14002991c:	mov    DWORD PTR [rbp-0x31],ecx
   14002991f:	test   ecx,ecx
   140029921:	jle    0x14002995a
   140029923:	call   0x14002b0f8
   140029928:	mov    rcx,QWORD PTR [rbp-0x21]
   14002992c:	mov    r8,QWORD PTR [rdi+0x30]
   140029930:	movsxd rcx,DWORD PTR [rcx]
   140029933:	add    rax,rcx
   140029936:	mov    rcx,r12
   140029939:	mov    rdx,rax
   14002993c:	mov    QWORD PTR [rbp-0x19],rax
   140029940:	call   0x14002a794
   140029945:	test   eax,eax
   140029947:	jne    0x140029965
   140029949:	mov    eax,DWORD PTR [rbp-0x31]
   14002994c:	add    QWORD PTR [rbp-0x21],0x4
   140029951:	dec    eax
   140029953:	mov    DWORD PTR [rbp-0x31],eax
   140029956:	test   eax,eax
   140029958:	jg     0x140029923
   14002995a:	mov    eax,DWORD PTR [rbp-0x2d]
   14002995d:	dec    eax
   14002995f:	add    r12,0x14
   140029963:	jmp    0x1400298e9
   140029965:	mov    al,BYTE PTR [rbp+0x6f]
   140029968:	mov    r9,r15
   14002996b:	mov    r8,QWORD PTR [rbp+0x57]
   14002996f:	mov    rdx,r13
   140029972:	mov    BYTE PTR [rsp+0x58],al
   140029976:	mov    rcx,rdi
   140029979:	mov    al,BYTE PTR [rbp-0x39]
   14002997c:	mov    BYTE PTR [rsp+0x50],al
   140029980:	mov    rax,QWORD PTR [rbp+0x7f]
   140029984:	mov    QWORD PTR [rsp+0x48],rax
   140029989:	mov    eax,DWORD PTR [rbp+0x77]
   14002998c:	mov    DWORD PTR [rsp+0x40],eax
   140029990:	lea    rax,[r14-0x10]
   140029994:	mov    QWORD PTR [rsp+0x38],rax
   140029999:	mov    rax,QWORD PTR [rbp-0x19]
   14002999d:	mov    QWORD PTR [rsp+0x30],rax
   1400299a2:	mov    QWORD PTR [rsp+0x28],r12
   1400299a7:	mov    QWORD PTR [rsp+0x20],rbx
   1400299ac:	mov    BYTE PTR [rbp-0x38],0x1
   1400299b0:	call   0x14002952c
   1400299b5:	mov    edx,DWORD PTR [rbp-0x29]
   1400299b8:	mov    ecx,DWORD PTR [rbp-0x35]
   1400299bb:	inc    ecx
   1400299bd:	add    r14,0x14
   1400299c1:	mov    DWORD PTR [rbp-0x35],ecx
   1400299c4:	cmp    ecx,edx
   1400299c6:	jb     0x1400298c6
   1400299cc:	xor    r12d,r12d
   1400299cf:	cmp    BYTE PTR [rbp-0x38],r12b
   1400299d3:	jne    0x140029a8b
   1400299d9:	mov    eax,DWORD PTR [rbx]
   1400299db:	and    eax,0x1fffffff
   1400299e0:	cmp    eax,0x19930521
   1400299e5:	jb     0x140029a8b
   1400299eb:	cmp    DWORD PTR [rbx+0x20],r12d
   1400299ef:	je     0x1400299ff
   1400299f1:	call   0x14002b0e4
   1400299f6:	movsxd rcx,DWORD PTR [rbx+0x20]
   1400299fa:	add    rax,rcx
   1400299fd:	jmp    0x140029a02
   1400299ff:	mov    rax,r12
   140029a02:	test   rax,rax
   140029a05:	jne    0x140029a1c
   140029a07:	test   BYTE PTR [rbx+0x24],0x4
   140029a0b:	je     0x140029a8b
   140029a0d:	mov    rdx,rbx
   140029a10:	mov    rcx,r15
   140029a13:	call   0x14002ac60
   140029a18:	test   eax,eax
   140029a1a:	jne    0x140029a8b
   140029a1c:	test   BYTE PTR [rbx+0x24],0x4
   140029a20:	jne    0x140029b2e
   140029a26:	cmp    DWORD PTR [rbx+0x20],r12d
   140029a2a:	je     0x140029a3d
   140029a2c:	call   0x14002b0e4
   140029a31:	mov    rdx,rax
   140029a34:	movsxd rax,DWORD PTR [rbx+0x20]
   140029a38:	add    rdx,rax
   140029a3b:	jmp    0x140029a40
   140029a3d:	mov    rdx,r12
   140029a40:	mov    rcx,rdi
   140029a43:	call   0x140029db4
   140029a48:	test   al,al
   140029a4a:	jne    0x140029a8b
   140029a4c:	lea    r9,[rbp-0x19]
   140029a50:	mov    r8,rbx
   140029a53:	mov    rdx,r15
   140029a56:	mov    rcx,r13
   140029a59:	call   0x14002acd4
   140029a5e:	mov    cl,BYTE PTR [rbp+0x6f]
   140029a61:	mov    r9,rax
   140029a64:	mov    r8,QWORD PTR [rbp+0x57]
   140029a68:	mov    rdx,rdi
   140029a6b:	mov    BYTE PTR [rsp+0x40],cl
   140029a6f:	mov    rcx,r13
   140029a72:	mov    QWORD PTR [rsp+0x38],r15
   140029a77:	mov    QWORD PTR [rsp+0x30],rbx
   140029a7c:	or     DWORD PTR [rsp+0x28],0xffffffff
   140029a81:	mov    QWORD PTR [rsp+0x20],r12
   140029a86:	call   0x14002b16c
   140029a8b:	call   0x14002b9fc
   140029a90:	cmp    QWORD PTR [rax+0x38],r12
   140029a94:	je     0x140029ad7
   140029a96:	jmp    0x140029b34
   140029a9b:	cmp    DWORD PTR [rbx+0xc],r12d
   140029a9f:	jbe    0x140029a8b
   140029aa1:	cmp    BYTE PTR [rbp+0x6f],r12b
   140029aa5:	jne    0x140029b3a
   140029aab:	mov    rax,QWORD PTR [rbp+0x7f]
   140029aaf:	mov    r9,r15
   140029ab2:	mov    QWORD PTR [rsp+0x38],rax
   140029ab7:	mov    r8,r14
   140029aba:	mov    eax,DWORD PTR [rbp+0x77]
   140029abd:	mov    rdx,r13
   140029ac0:	mov    DWORD PTR [rsp+0x30],eax
   140029ac4:	mov    rcx,rdi
   140029ac7:	mov    DWORD PTR [rsp+0x28],esi
   140029acb:	mov    QWORD PTR [rsp+0x20],rbx
   140029ad0:	call   0x140029b48
   140029ad5:	jmp    0x140029a8b
   140029ad7:	lea    r11,[rsp+0xb0]
   140029adf:	mov    rbx,QWORD PTR [r11+0x30]
   140029ae3:	mov    rsi,QWORD PTR [r11+0x38]
   140029ae7:	mov    rdi,QWORD PTR [r11+0x48]
   140029aeb:	mov    rsp,r11
   140029aee:	pop    r15
   140029af0:	pop    r14
   140029af2:	pop    r13
   140029af4:	pop    r12
   140029af6:	pop    rbp
   140029af7:	ret    
   140029af8:	call   0x1400359d4
   140029afd:	int3   
   140029afe:	call   0x1400359d4
   140029b03:	int3   
   140029b04:	mov    dl,0x1
   140029b06:	mov    rcx,rdi
   140029b09:	call   0x140029444
   140029b0e:	lea    rcx,[rbp-0x9]
   140029b12:	call   0x14002950c
   140029b17:	lea    rdx,[rip+0x46262]        # 0x14006fd80
   140029b1e:	lea    rcx,[rbp-0x9]
   140029b22:	call   0x14002ab88
   140029b27:	int3   
   140029b28:	call   0x1400359d4
   140029b2d:	int3   
   140029b2e:	call   0x1400359d4
   140029b33:	int3   
   140029b34:	call   0x1400359d4
   140029b39:	int3   
   140029b3a:	call   0x1400359d4
   140029b3f:	int3   
   140029b40:	call   0x1400359d4
   140029b45:	int3   
   140029b46:	int3   
   140029b47:	int3   
   140029b48:	mov    QWORD PTR [rsp+0x10],rbx
   140029b4d:	mov    QWORD PTR [rsp+0x18],r8
   140029b52:	push   rbp
   140029b53:	push   rsi
   140029b54:	push   rdi
   140029b55:	push   r12
   140029b57:	push   r13
   140029b59:	push   r14
   140029b5b:	push   r15
   140029b5d:	sub    rsp,0x70
   140029b61:	cmp    DWORD PTR [rcx],0x80000003
   140029b67:	mov    r15,r9
   140029b6a:	mov    rdi,r8
   140029b6d:	mov    r12,rdx
   140029b70:	mov    rsi,rcx
   140029b73:	je     0x140029d94
   140029b79:	call   0x14002b9fc
   140029b7e:	mov    r13d,DWORD PTR [rsp+0xe0]
   140029b86:	mov    rbp,QWORD PTR [rsp+0xd0]
   140029b8e:	cmp    QWORD PTR [rax+0x10],0x0
   140029b93:	je     0x140029beb
   140029b95:	xor    ecx,ecx
   140029b97:	call   QWORD PTR [rip+0x216c3]        # 0x14004b260
   140029b9d:	mov    rbx,rax
   140029ba0:	call   0x14002b9fc
   140029ba5:	cmp    QWORD PTR [rax+0x10],rbx
   140029ba9:	je     0x140029beb
   140029bab:	cmp    DWORD PTR [rsi],0xe0434f4d
   140029bb1:	je     0x140029beb
   140029bb3:	cmp    DWORD PTR [rsi],0xe0434352
   140029bb9:	je     0x140029beb
   140029bbb:	mov    rax,QWORD PTR [rsp+0xe8]
   140029bc3:	mov    r9,r15
   140029bc6:	mov    QWORD PTR [rsp+0x30],rax
   140029bcb:	mov    r8,rdi
   140029bce:	mov    DWORD PTR [rsp+0x28],r13d
   140029bd3:	mov    rdx,r12
   140029bd6:	mov    rcx,rsi
   140029bd9:	mov    QWORD PTR [rsp+0x20],rbp
   140029bde:	call   0x14002aff8
   140029be3:	test   eax,eax
   140029be5:	jne    0x140029d94
   140029beb:	cmp    DWORD PTR [rbp+0xc],0x0
   140029bef:	je     0x140029dac
   140029bf5:	mov    r14d,DWORD PTR [rsp+0xd8]
   140029bfd:	lea    rax,[rsp+0x60]
   140029c02:	mov    QWORD PTR [rsp+0x30],r15
   140029c07:	mov    r9d,r14d
   140029c0a:	mov    QWORD PTR [rsp+0x28],rax
   140029c0f:	mov    r8d,r13d
   140029c12:	lea    rax,[rsp+0xb0]
   140029c1a:	mov    rdx,rbp
   140029c1d:	mov    rcx,r12
   140029c20:	mov    QWORD PTR [rsp+0x20],rax
   140029c25:	call   0x14002ada0
   140029c2a:	mov    ecx,DWORD PTR [rsp+0xb0]
   140029c31:	cmp    ecx,DWORD PTR [rsp+0x60]
   140029c35:	jae    0x140029d94
   140029c3b:	lea    rdi,[rax+0xc]
   140029c3f:	cmp    r14d,DWORD PTR [rdi-0xc]
   140029c43:	jl     0x140029d7d
   140029c49:	cmp    r14d,DWORD PTR [rdi-0x8]
   140029c4d:	jg     0x140029d7d
   140029c53:	call   0x14002b0e4
   140029c58:	mov    ecx,DWORD PTR [rdi]
   140029c5a:	dec    ecx
   140029c5c:	movsxd rcx,ecx
   140029c5f:	lea    rdx,[rcx+rcx*4]
   140029c63:	lea    rcx,[rax+rdx*4]
   140029c67:	movsxd rax,DWORD PTR [rdi+0x4]
   140029c6b:	cmp    DWORD PTR [rax+rcx*1+0x4],0x0
   140029c70:	je     0x140029c99
   140029c72:	call   0x14002b0e4
   140029c77:	mov    ecx,DWORD PTR [rdi]
   140029c79:	dec    ecx
   140029c7b:	movsxd rcx,ecx
   140029c7e:	lea    rdx,[rcx+rcx*4]
   140029c82:	lea    rcx,[rax+rdx*4]
   140029c86:	movsxd rax,DWORD PTR [rdi+0x4]
   140029c8a:	movsxd rbx,DWORD PTR [rax+rcx*1+0x4]
   140029c8f:	call   0x14002b0e4
   140029c94:	add    rax,rbx
   140029c97:	jmp    0x140029c9b
   140029c99:	xor    eax,eax
   140029c9b:	test   rax,rax
   140029c9e:	je     0x140029cf2
   140029ca0:	call   0x14002b0e4
   140029ca5:	mov    ecx,DWORD PTR [rdi]
   140029ca7:	dec    ecx
   140029ca9:	movsxd rcx,ecx
   140029cac:	lea    rdx,[rcx+rcx*4]
   140029cb0:	lea    rcx,[rax+rdx*4]
   140029cb4:	movsxd rax,DWORD PTR [rdi+0x4]
   140029cb8:	cmp    DWORD PTR [rax+rcx*1+0x4],0x0
   140029cbd:	je     0x140029ce6
   140029cbf:	call   0x14002b0e4
   140029cc4:	mov    ecx,DWORD PTR [rdi]
   140029cc6:	dec    ecx
   140029cc8:	movsxd rcx,ecx
   140029ccb:	lea    rdx,[rcx+rcx*4]
   140029ccf:	lea    rcx,[rax+rdx*4]
   140029cd3:	movsxd rax,DWORD PTR [rdi+0x4]
   140029cd7:	movsxd rbx,DWORD PTR [rax+rcx*1+0x4]
   140029cdc:	call   0x14002b0e4
   140029ce1:	add    rax,rbx
   140029ce4:	jmp    0x140029ce8
   140029ce6:	xor    eax,eax
   140029ce8:	cmp    BYTE PTR [rax+0x10],0x0
   140029cec:	jne    0x140029d76
   140029cf2:	call   0x14002b0e4
   140029cf7:	mov    ecx,DWORD PTR [rdi]
   140029cf9:	dec    ecx
   140029cfb:	movsxd rcx,ecx
   140029cfe:	lea    rdx,[rcx+rcx*4]
   140029d02:	lea    rcx,[rax+rdx*4]
   140029d06:	movsxd rax,DWORD PTR [rdi+0x4]
   140029d0a:	test   BYTE PTR [rax+rcx*1],0x40
   140029d0e:	jne    0x140029d76
   140029d10:	call   0x14002b0e4
   140029d15:	mov    ecx,DWORD PTR [rdi]
   140029d17:	mov    r9,r15
   140029d1a:	mov    r8,QWORD PTR [rsp+0xc0]
   140029d22:	dec    ecx
   140029d24:	mov    BYTE PTR [rsp+0x58],0x0
   140029d29:	mov    BYTE PTR [rsp+0x50],0x1
   140029d2e:	movsxd rcx,ecx
   140029d31:	lea    rdx,[rcx+rcx*4]
   140029d35:	movsxd rcx,DWORD PTR [rdi+0x4]
   140029d39:	lea    rax,[rax+rdx*4]
   140029d3d:	mov    rdx,r12
   140029d40:	add    rcx,rax
   140029d43:	mov    rax,QWORD PTR [rsp+0xe8]
   140029d4b:	mov    QWORD PTR [rsp+0x48],rax
   140029d50:	lea    rax,[rdi-0xc]
   140029d54:	mov    DWORD PTR [rsp+0x40],r13d
   140029d59:	mov    QWORD PTR [rsp+0x38],rax
   140029d5e:	and    QWORD PTR [rsp+0x30],0x0
   140029d64:	mov    QWORD PTR [rsp+0x28],rcx
   140029d69:	mov    rcx,rsi
   140029d6c:	mov    QWORD PTR [rsp+0x20],rbp
   140029d71:	call   0x14002952c
   140029d76:	mov    ecx,DWORD PTR [rsp+0xb0]
   140029d7d:	inc    ecx
   140029d7f:	add    rdi,0x14
   140029d83:	mov    DWORD PTR [rsp+0xb0],ecx
   140029d8a:	cmp    ecx,DWORD PTR [rsp+0x60]
   140029d8e:	jb     0x140029c3f
   140029d94:	mov    rbx,QWORD PTR [rsp+0xb8]
   140029d9c:	add    rsp,0x70
   140029da0:	pop    r15
   140029da2:	pop    r14
   140029da4:	pop    r13
   140029da6:	pop    r12
   140029da8:	pop    rdi
   140029da9:	pop    rsi
   140029daa:	pop    rbp
   140029dab:	ret    
   140029dac:	call   0x1400359d4
   140029db1:	int3   
   140029db2:	int3   
   140029db3:	int3   
   140029db4:	mov    QWORD PTR [rsp+0x8],rbx
   140029db9:	mov    QWORD PTR [rsp+0x10],rbp
   140029dbe:	mov    QWORD PTR [rsp+0x18],rsi
   140029dc3:	push   rdi
   140029dc4:	push   r12
   140029dc6:	push   r13
   140029dc8:	push   r14
   140029dca:	push   r15
   140029dcc:	sub    rsp,0x20
   140029dd0:	mov    rsi,rdx
   140029dd3:	mov    r13,rcx
   140029dd6:	test   rdx,rdx
   140029dd9:	je     0x140029e80
   140029ddf:	xor    r14b,r14b
   140029de2:	xor    edi,edi
   140029de4:	cmp    DWORD PTR [rdx],edi
   140029de6:	jle    0x140029e60
   140029de8:	call   0x14002b0f8
   140029ded:	mov    rdx,rax
   140029df0:	mov    rax,QWORD PTR [r13+0x30]
   140029df4:	movsxd r15,DWORD PTR [rax+0xc]
   140029df8:	add    r15,0x4
   140029dfc:	add    r15,rdx
   140029dff:	call   0x14002b0f8
   140029e04:	mov    rdx,rax
   140029e07:	mov    rax,QWORD PTR [r13+0x30]
   140029e0b:	movsxd rcx,DWORD PTR [rax+0xc]
   140029e0f:	mov    ebp,DWORD PTR [rdx+rcx*1]
   140029e12:	test   ebp,ebp
   140029e14:	jle    0x140029e5a
   140029e16:	movsxd rax,edi
   140029e19:	lea    r12,[rax+rax*4]
   140029e1d:	call   0x14002b0f8
   140029e22:	mov    rbx,rax
   140029e25:	movsxd rax,DWORD PTR [r15]
   140029e28:	add    rbx,rax
   140029e2b:	call   0x14002b0e4
   140029e30:	movsxd rcx,DWORD PTR [rsi+0x4]
   140029e34:	mov    rdx,rbx
   140029e37:	mov    r8,QWORD PTR [r13+0x30]
   140029e3b:	lea    rax,[rax+r12*4]
   140029e3f:	add    rcx,rax
   140029e42:	call   0x14002a794
   140029e47:	test   eax,eax
   140029e49:	jne    0x140029e57
   140029e4b:	dec    ebp
   140029e4d:	add    r15,0x4
   140029e51:	test   ebp,ebp
   140029e53:	jg     0x140029e1d
   140029e55:	jmp    0x140029e5a
   140029e57:	mov    r14b,0x1
   140029e5a:	inc    edi
   140029e5c:	cmp    edi,DWORD PTR [rsi]
   140029e5e:	jl     0x140029de8
   140029e60:	mov    rbx,QWORD PTR [rsp+0x50]
   140029e65:	mov    al,r14b
   140029e68:	mov    rbp,QWORD PTR [rsp+0x58]
   140029e6d:	mov    rsi,QWORD PTR [rsp+0x60]
   140029e72:	add    rsp,0x20
   140029e76:	pop    r15
   140029e78:	pop    r14
   140029e7a:	pop    r13
   140029e7c:	pop    r12
   140029e7e:	pop    rdi
   140029e7f:	ret    
   140029e80:	call   0x1400359d4
   140029e85:	int3   
   140029e86:	int3   
   140029e87:	int3   
   140029e88:	rex.W jmp rdx
   140029e8b:	int3   
   140029e8c:	mov    rax,rdx
   140029e8f:	mov    rdx,r8
   140029e92:	rex.W jmp rax
   140029e95:	int3   
   140029e96:	int3   
   140029e97:	int3   
   140029e98:	mov    rax,r8
   140029e9b:	mov    r10,rdx
   140029e9e:	mov    rdx,rax
   140029ea1:	mov    r8d,r9d
   140029ea4:	rex.WB jmp r10
   140029ea7:	int3   
   140029ea8:	movsxd rax,DWORD PTR [rdx]
   140029eab:	add    rax,rcx
   140029eae:	cmp    DWORD PTR [rdx+0x4],0x0
   140029eb2:	jl     0x140029eca
   140029eb4:	movsxd r9,DWORD PTR [rdx+0x4]
   140029eb8:	movsxd rdx,DWORD PTR [rdx+0x8]
   140029ebc:	mov    rcx,QWORD PTR [r9+rcx*1]
   140029ec0:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140029ec4:	add    r8,r9
   140029ec7:	add    rax,r8
   140029eca:	ret    
   140029ecb:	int3   
   140029ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140029ed1:	mov    QWORD PTR [rsp+0x10],rsi
   140029ed6:	mov    QWORD PTR [rsp+0x18],rdi
   140029edb:	push   r14
   140029edd:	sub    rsp,0x20
   140029ee1:	mov    rdi,r9
   140029ee4:	mov    r14,rcx
   140029ee7:	xor    ebx,ebx
   140029ee9:	cmp    DWORD PTR [r8],ebx
   140029eec:	jge    0x140029ef3
   140029eee:	mov    rsi,rdx
   140029ef1:	jmp    0x140029efa
   140029ef3:	movsxd rsi,DWORD PTR [r8+0x8]
   140029ef7:	add    rsi,QWORD PTR [rdx]
   140029efa:	call   0x140029f90
   140029eff:	sub    eax,0x1
   140029f02:	je     0x140029f40
   140029f04:	cmp    eax,0x1
   140029f07:	jne    0x140029f6f
   140029f09:	cmp    DWORD PTR [rdi+0x18],ebx
   140029f0c:	je     0x140029f1d
   140029f0e:	call   0x14002b0f8
   140029f13:	mov    rbx,rax
   140029f16:	movsxd rax,DWORD PTR [rdi+0x18]
   140029f1a:	add    rbx,rax
   140029f1d:	lea    rdx,[rdi+0x8]
   140029f21:	mov    rcx,QWORD PTR [r14+0x28]
   140029f25:	call   0x140029ea8
   140029f2a:	mov    r8,rax
   140029f2d:	mov    r9d,0x1
   140029f33:	mov    rdx,rbx
   140029f36:	mov    rcx,rsi
   140029f39:	call   0x140029e98
   140029f3e:	jmp    0x140029f6f
   140029f40:	cmp    DWORD PTR [rdi+0x18],ebx
   140029f43:	je     0x140029f54
   140029f45:	call   0x14002b0f8
   140029f4a:	mov    rbx,rax
   140029f4d:	movsxd rax,DWORD PTR [rdi+0x18]
   140029f51:	add    rbx,rax
   140029f54:	lea    rdx,[rdi+0x8]
   140029f58:	mov    rcx,QWORD PTR [r14+0x28]
   140029f5c:	call   0x140029ea8
   140029f61:	mov    r8,rax
   140029f64:	mov    rdx,rbx
   140029f67:	mov    rcx,rsi
   140029f6a:	call   0x140029e8c
   140029f6f:	jmp    0x140029f77
   140029f71:	call   0x1400359d4
   140029f76:	nop
   140029f77:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f7c:	mov    rsi,QWORD PTR [rsp+0x38]
   140029f81:	mov    rdi,QWORD PTR [rsp+0x40]
   140029f86:	add    rsp,0x20
   140029f8a:	pop    r14
   140029f8c:	ret    
   140029f8d:	int3   
   140029f8e:	int3   
   140029f8f:	int3   
   140029f90:	mov    QWORD PTR [rsp+0x8],rbx
   140029f95:	mov    QWORD PTR [rsp+0x10],rsi
   140029f9a:	mov    QWORD PTR [rsp+0x18],rdi
   140029f9f:	push   r13
   140029fa1:	push   r14
   140029fa3:	push   r15
   140029fa5:	sub    rsp,0x30
   140029fa9:	mov    r14,r9
   140029fac:	mov    rbx,r8
   140029faf:	mov    rsi,rdx
   140029fb2:	mov    r13,rcx
   140029fb5:	xor    edi,edi
   140029fb7:	mov    r15d,DWORD PTR [r8+0x4]
   140029fbb:	test   r15d,r15d
   140029fbe:	je     0x140029fce
   140029fc0:	movsxd r15,r15d
   140029fc3:	call   0x14002b0e4
   140029fc8:	lea    rdx,[r15+rax*1]
   140029fcc:	jmp    0x140029fd1
   140029fce:	mov    rdx,rdi
   140029fd1:	test   rdx,rdx
   140029fd4:	je     0x14002a154
   140029fda:	test   r15d,r15d
   140029fdd:	je     0x140029ff0
   140029fdf:	call   0x14002b0e4
   140029fe4:	mov    rcx,rax
   140029fe7:	movsxd rax,DWORD PTR [rbx+0x4]
   140029feb:	add    rcx,rax
   140029fee:	jmp    0x140029ff3
   140029ff0:	mov    rcx,rdi
   140029ff3:	cmp    BYTE PTR [rcx+0x10],dil
   140029ff7:	je     0x14002a154
   140029ffd:	cmp    DWORD PTR [rbx+0x8],edi
   14002a000:	jne    0x14002a00a
   14002a002:	cmp    DWORD PTR [rbx],edi
   14002a004:	jge    0x14002a154
   14002a00a:	mov    ecx,DWORD PTR [rbx]
   14002a00c:	test   ecx,ecx
   14002a00e:	js     0x14002a01a
   14002a010:	movsxd rax,DWORD PTR [rbx+0x8]
   14002a014:	add    rax,QWORD PTR [rsi]
   14002a017:	mov    rsi,rax
   14002a01a:	test   cl,cl
   14002a01c:	jns    0x14002a051
   14002a01e:	test   BYTE PTR [r14],0x10
   14002a022:	je     0x14002a051
   14002a024:	mov    rbx,QWORD PTR [rip+0x4c705]        # 0x140076730
   14002a02b:	test   rbx,rbx
   14002a02e:	je     0x14002a051
   14002a030:	mov    rcx,rbx
   14002a033:	call   0x140026cd0
   14002a038:	call   rbx
   14002a03a:	test   rax,rax
   14002a03d:	je     0x14002a04c
   14002a03f:	test   rsi,rsi
   14002a042:	je     0x14002a04c
   14002a044:	mov    QWORD PTR [rsi],rax
   14002a047:	mov    rcx,rax
   14002a04a:	jmp    0x14002a0a5
   14002a04c:	call   0x1400359d4
   14002a051:	test   cl,0x8
   14002a054:	je     0x14002a06e
   14002a056:	mov    rcx,QWORD PTR [r13+0x28]
   14002a05a:	test   rcx,rcx
   14002a05d:	je     0x14002a069
   14002a05f:	test   rsi,rsi
   14002a062:	je     0x14002a069
   14002a064:	mov    QWORD PTR [rsi],rcx
   14002a067:	jmp    0x14002a0a5
   14002a069:	call   0x1400359d4
   14002a06e:	test   BYTE PTR [r14],0x1
   14002a072:	je     0x14002a0bb
   14002a074:	mov    rdx,QWORD PTR [r13+0x28]
   14002a078:	test   rdx,rdx
   14002a07b:	je     0x14002a0b6
   14002a07d:	test   rsi,rsi
   14002a080:	je     0x14002a0b6
   14002a082:	movsxd r8,DWORD PTR [r14+0x14]
   14002a086:	mov    rcx,rsi
   14002a089:	call   0x140028fd0
   14002a08e:	cmp    DWORD PTR [r14+0x14],0x8
   14002a093:	jne    0x14002a144
   14002a099:	cmp    QWORD PTR [rsi],rdi
   14002a09c:	je     0x14002a144
   14002a0a2:	mov    rcx,QWORD PTR [rsi]
   14002a0a5:	lea    rdx,[r14+0x8]
   14002a0a9:	call   0x140029ea8
   14002a0ae:	mov    QWORD PTR [rsi],rax
   14002a0b1:	jmp    0x14002a144
   14002a0b6:	call   0x1400359d4
   14002a0bb:	mov    ebx,DWORD PTR [r14+0x18]
   14002a0bf:	test   ebx,ebx
   14002a0c1:	je     0x14002a0d1
   14002a0c3:	movsxd rbx,ebx
   14002a0c6:	call   0x14002b0f8
   14002a0cb:	lea    rcx,[rbx+rax*1]
   14002a0cf:	jmp    0x14002a0d4
   14002a0d1:	mov    rcx,rdi
   14002a0d4:	test   rcx,rcx
   14002a0d7:	jne    0x14002a109
   14002a0d9:	mov    rcx,QWORD PTR [r13+0x28]
   14002a0dd:	test   rcx,rcx
   14002a0e0:	je     0x14002a104
   14002a0e2:	test   rsi,rsi
   14002a0e5:	je     0x14002a104
   14002a0e7:	movsxd rbx,DWORD PTR [r14+0x14]
   14002a0eb:	lea    rdx,[r14+0x8]
   14002a0ef:	call   0x140029ea8
   14002a0f4:	mov    rdx,rax
   14002a0f7:	mov    r8,rbx
   14002a0fa:	mov    rcx,rsi
   14002a0fd:	call   0x140028fd0
   14002a102:	jmp    0x14002a144
   14002a104:	call   0x1400359d4
   14002a109:	cmp    QWORD PTR [r13+0x28],rdi
   14002a10d:	je     0x14002a148
   14002a10f:	test   rsi,rsi
   14002a112:	je     0x14002a148
   14002a114:	test   ebx,ebx
   14002a116:	je     0x14002a129
   14002a118:	call   0x14002b0f8
   14002a11d:	mov    rcx,rax
   14002a120:	movsxd rax,DWORD PTR [r14+0x18]
   14002a124:	add    rcx,rax
   14002a127:	jmp    0x14002a12c
   14002a129:	mov    rcx,rdi
   14002a12c:	test   rcx,rcx
   14002a12f:	je     0x14002a148
   14002a131:	mov    al,BYTE PTR [r14]
   14002a134:	and    al,0x4
   14002a136:	neg    al
   14002a138:	sbb    ecx,ecx
   14002a13a:	neg    ecx
   14002a13c:	inc    ecx
   14002a13e:	mov    edi,ecx
   14002a140:	mov    DWORD PTR [rsp+0x20],ecx
   14002a144:	mov    eax,edi
   14002a146:	jmp    0x14002a156
   14002a148:	call   0x1400359d4
   14002a14d:	nop
   14002a14e:	call   0x1400359d4
   14002a153:	nop
   14002a154:	xor    eax,eax
   14002a156:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a15b:	mov    rsi,QWORD PTR [rsp+0x58]
   14002a160:	mov    rdi,QWORD PTR [rsp+0x60]
   14002a165:	add    rsp,0x30
   14002a169:	pop    r15
   14002a16b:	pop    r14
   14002a16d:	pop    r13
   14002a16f:	ret    
   14002a170:	rex push rbx
   14002a172:	push   rsi
   14002a173:	push   rdi
   14002a174:	push   r12
   14002a176:	push   r13
   14002a178:	push   r14
   14002a17a:	push   r15
   14002a17c:	sub    rsp,0x70
   14002a180:	mov    rdi,rcx
   14002a183:	xor    r15d,r15d
   14002a186:	mov    DWORD PTR [rsp+0x20],r15d
   14002a18b:	and    DWORD PTR [rsp+0xb0],r15d
   14002a193:	and    QWORD PTR [rsp+0x28],r15
   14002a198:	and    QWORD PTR [rsp+0xc8],r15
   14002a1a0:	call   0x14002b9fc
   14002a1a5:	mov    r13,QWORD PTR [rax+0x28]
   14002a1a9:	mov    QWORD PTR [rsp+0x40],r13
   14002a1ae:	call   0x14002b9fc
   14002a1b3:	mov    rax,QWORD PTR [rax+0x20]
   14002a1b7:	mov    QWORD PTR [rsp+0xc0],rax
   14002a1bf:	mov    rsi,QWORD PTR [rdi+0x50]
   14002a1c3:	mov    QWORD PTR [rsp+0xb8],rsi
   14002a1cb:	mov    rax,QWORD PTR [rdi+0x48]
   14002a1cf:	mov    QWORD PTR [rsp+0x30],rax
   14002a1d4:	mov    rbx,QWORD PTR [rdi+0x40]
   14002a1d8:	mov    rax,QWORD PTR [rdi+0x30]
   14002a1dc:	mov    QWORD PTR [rsp+0x48],rax
   14002a1e1:	mov    r14,QWORD PTR [rdi+0x28]
   14002a1e5:	mov    QWORD PTR [rsp+0x50],r14
   14002a1ea:	mov    rcx,rbx
   14002a1ed:	call   0x140004794
   14002a1f2:	call   0x14002b9fc
   14002a1f7:	mov    QWORD PTR [rax+0x20],rsi
   14002a1fb:	call   0x14002b9fc
   14002a200:	mov    QWORD PTR [rax+0x28],rbx
   14002a204:	call   0x14002b9fc
   14002a209:	mov    rdx,QWORD PTR [rax+0x20]
   14002a20d:	mov    rdx,QWORD PTR [rdx+0x28]
   14002a211:	lea    rcx,[rsp+0x60]
   14002a216:	call   0x14002b050
   14002a21b:	mov    r12,rax
   14002a21e:	mov    QWORD PTR [rsp+0x38],rax
   14002a223:	cmp    QWORD PTR [rdi+0x58],r15
   14002a227:	je     0x14002a245
   14002a229:	mov    DWORD PTR [rsp+0xb0],0x1
   14002a234:	call   0x14002b9fc
   14002a239:	mov    rcx,QWORD PTR [rax+0x70]
   14002a23d:	mov    QWORD PTR [rsp+0xc8],rcx
   14002a245:	mov    r8d,0x100
   14002a24b:	mov    rdx,r14
   14002a24e:	mov    rcx,QWORD PTR [rsp+0x48]
   14002a253:	call   0x14002bc60
   14002a258:	mov    rbx,rax
   14002a25b:	mov    QWORD PTR [rsp+0x28],rax
   14002a260:	mov    rdi,QWORD PTR [rsp+0xc0]
   14002a268:	jmp    0x14002a2e2
   14002a26a:	mov    DWORD PTR [rsp+0x20],0x1
   14002a272:	call   0x14002b9fc
   14002a277:	and    DWORD PTR [rax+0x40],0x0
   14002a27b:	mov    rsi,QWORD PTR [rsp+0xb8]
   14002a283:	cmp    DWORD PTR [rsp+0xb0],0x0
   14002a28b:	je     0x14002a2ae
   14002a28d:	mov    dl,0x1
   14002a28f:	mov    rcx,rsi
   14002a292:	call   0x140029444
   14002a297:	mov    rax,QWORD PTR [rsp+0xc8]
   14002a29f:	lea    r9,[rax+0x20]
   14002a2a3:	mov    r8d,DWORD PTR [rax+0x18]
   14002a2a7:	mov    edx,DWORD PTR [rax+0x4]
   14002a2aa:	mov    ecx,DWORD PTR [rax]
   14002a2ac:	jmp    0x14002a2bb
   14002a2ae:	lea    r9,[rsi+0x20]
   14002a2b2:	mov    r8d,DWORD PTR [rsi+0x18]
   14002a2b6:	mov    edx,DWORD PTR [rsi+0x4]
   14002a2b9:	mov    ecx,DWORD PTR [rsi]
   14002a2bb:	call   QWORD PTR [rip+0x20fff]        # 0x14004b2c0
   14002a2c1:	mov    r15d,DWORD PTR [rsp+0x20]
   14002a2c6:	mov    rbx,QWORD PTR [rsp+0x28]
   14002a2cb:	mov    r13,QWORD PTR [rsp+0x40]
   14002a2d0:	mov    rdi,QWORD PTR [rsp+0xc0]
   14002a2d8:	mov    r14,QWORD PTR [rsp+0x50]
   14002a2dd:	mov    r12,QWORD PTR [rsp+0x38]
   14002a2e2:	mov    rcx,r12
   14002a2e5:	call   0x14002b08c
   14002a2ea:	test   r15d,r15d
   14002a2ed:	jne    0x14002a321
   14002a2ef:	cmp    DWORD PTR [rsi],0xe06d7363
   14002a2f5:	jne    0x14002a321
   14002a2f7:	cmp    DWORD PTR [rsi+0x18],0x4
   14002a2fb:	jne    0x14002a321
   14002a2fd:	mov    eax,DWORD PTR [rsi+0x20]
   14002a300:	sub    eax,0x19930520
   14002a305:	cmp    eax,0x2
   14002a308:	ja     0x14002a321
   14002a30a:	mov    rcx,QWORD PTR [rsi+0x28]
   14002a30e:	call   0x14002b10c
   14002a313:	test   eax,eax
   14002a315:	je     0x14002a321
   14002a317:	mov    dl,0x1
   14002a319:	mov    rcx,rsi
   14002a31c:	call   0x140029444
   14002a321:	call   0x14002b9fc
   14002a326:	mov    QWORD PTR [rax+0x20],rdi
   14002a32a:	call   0x14002b9fc
   14002a32f:	mov    QWORD PTR [rax+0x28],r13
   14002a333:	mov    rax,QWORD PTR [rsp+0x30]
   14002a338:	movsxd rcx,DWORD PTR [rax+0x1c]
   14002a33c:	mov    rax,QWORD PTR [r14]
   14002a33f:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14002a347:	mov    rax,rbx
   14002a34a:	add    rsp,0x70
   14002a34e:	pop    r15
   14002a350:	pop    r14
   14002a352:	pop    r13
   14002a354:	pop    r12
   14002a356:	pop    rdi
   14002a357:	pop    rsi
   14002a358:	pop    rbx
   14002a359:	ret    
   14002a35a:	int3   
   14002a35b:	int3   
   14002a35c:	sub    rsp,0x28
   14002a360:	mov    rax,QWORD PTR [rcx]
   14002a363:	cmp    DWORD PTR [rax],0xe0434352
   14002a369:	je     0x14002a37d
   14002a36b:	cmp    DWORD PTR [rax],0xe0434f4d
   14002a371:	je     0x14002a37d
   14002a373:	cmp    DWORD PTR [rax],0xe06d7363
   14002a379:	jne    0x14002a390
   14002a37b:	jmp    0x14002a397
   14002a37d:	call   0x14002b9fc
   14002a382:	cmp    DWORD PTR [rax+0x30],0x0
   14002a386:	jle    0x14002a390
   14002a388:	call   0x14002b9fc
   14002a38d:	dec    DWORD PTR [rax+0x30]
   14002a390:	xor    eax,eax
   14002a392:	add    rsp,0x28
   14002a396:	ret    
   14002a397:	call   0x14002b9fc
   14002a39c:	and    DWORD PTR [rax+0x30],0x0
   14002a3a0:	call   0x1400359d4
   14002a3a5:	int3   
   14002a3a6:	int3   
   14002a3a7:	int3   
   14002a3a8:	mov    rax,rsp
   14002a3ab:	mov    DWORD PTR [rax+0x20],r9d
   14002a3af:	mov    QWORD PTR [rax+0x18],r8
   14002a3b3:	mov    QWORD PTR [rax+0x10],rdx
   14002a3b7:	mov    QWORD PTR [rax+0x8],rcx
   14002a3bb:	push   rbx
   14002a3bc:	push   rsi
   14002a3bd:	push   rdi
   14002a3be:	push   r12
   14002a3c0:	push   r13
   14002a3c2:	push   r14
   14002a3c4:	push   r15
   14002a3c6:	sub    rsp,0x30
   14002a3ca:	mov    r12d,r9d
   14002a3cd:	mov    rsi,r8
   14002a3d0:	mov    r13,rdx
   14002a3d3:	mov    r15,rcx
   14002a3d6:	call   0x14002b0e4
   14002a3db:	mov    QWORD PTR [rsp+0x28],rax
   14002a3e0:	mov    r8,rsi
   14002a3e3:	mov    rdx,r13
   14002a3e6:	mov    rcx,r15
   14002a3e9:	call   0x14002bb34
   14002a3ee:	mov    edi,eax
   14002a3f0:	call   0x14002b9fc
   14002a3f5:	inc    DWORD PTR [rax+0x30]
   14002a3f8:	cmp    edi,0xffffffff
   14002a3fb:	je     0x14002a4f7
   14002a401:	cmp    edi,r12d
   14002a404:	jle    0x14002a4f7
   14002a40a:	cmp    edi,0xffffffff
   14002a40d:	jle    0x14002a4f1
   14002a413:	cmp    edi,DWORD PTR [rsi+0x4]
   14002a416:	jge    0x14002a4f1
   14002a41c:	movsxd r14,edi
   14002a41f:	call   0x14002b0e4
   14002a424:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002a428:	lea    rax,[rax+r14*8]
   14002a42c:	mov    edi,DWORD PTR [rcx+rax*1]
   14002a42f:	mov    DWORD PTR [rsp+0x20],edi
   14002a433:	call   0x14002b0e4
   14002a438:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002a43c:	lea    rax,[rax+r14*8]
   14002a440:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14002a445:	je     0x14002a463
   14002a447:	call   0x14002b0e4
   14002a44c:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002a450:	lea    rax,[rax+r14*8]
   14002a454:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14002a459:	call   0x14002b0e4
   14002a45e:	add    rax,rbx
   14002a461:	jmp    0x14002a465
   14002a463:	xor    eax,eax
   14002a465:	test   rax,rax
   14002a468:	je     0x14002a4c8
   14002a46a:	mov    r9d,edi
   14002a46d:	mov    r8,rsi
   14002a470:	mov    rdx,r13
   14002a473:	mov    rcx,r15
   14002a476:	call   0x14002bb88
   14002a47b:	call   0x14002b0e4
   14002a480:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002a484:	lea    rax,[rax+r14*8]
   14002a488:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14002a48d:	je     0x14002a4ab
   14002a48f:	call   0x14002b0e4
   14002a494:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002a498:	lea    rax,[rax+r14*8]
   14002a49c:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14002a4a1:	call   0x14002b0e4
   14002a4a6:	add    rax,rbx
   14002a4a9:	jmp    0x14002a4ad
   14002a4ab:	xor    eax,eax
   14002a4ad:	mov    r8d,0x103
   14002a4b3:	mov    rdx,r15
   14002a4b6:	mov    rcx,rax
   14002a4b9:	call   0x14002bc60
   14002a4be:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a4c3:	call   0x14002b13c
   14002a4c8:	jmp    0x14002a4e8
   14002a4ca:	mov    r12d,DWORD PTR [rsp+0x88]
   14002a4d2:	mov    rsi,QWORD PTR [rsp+0x80]
   14002a4da:	mov    r13,QWORD PTR [rsp+0x78]
   14002a4df:	mov    r15,QWORD PTR [rsp+0x70]
   14002a4e4:	mov    edi,DWORD PTR [rsp+0x20]
   14002a4e8:	mov    DWORD PTR [rsp+0x24],edi
   14002a4ec:	jmp    0x14002a3f8
   14002a4f1:	call   0x1400359d4
   14002a4f6:	nop
   14002a4f7:	call   0x14002b9fc
   14002a4fc:	cmp    DWORD PTR [rax+0x30],0x0
   14002a500:	jle    0x14002a50a
   14002a502:	call   0x14002b9fc
   14002a507:	dec    DWORD PTR [rax+0x30]
   14002a50a:	cmp    edi,0xffffffff
   14002a50d:	je     0x14002a51a
   14002a50f:	cmp    edi,r12d
   14002a512:	jle    0x14002a51a
   14002a514:	call   0x1400359d4
   14002a519:	int3   
   14002a51a:	mov    r9d,edi
   14002a51d:	mov    r8,rsi
   14002a520:	mov    rdx,r13
   14002a523:	mov    rcx,r15
   14002a526:	call   0x14002bb88
   14002a52b:	add    rsp,0x30
   14002a52f:	pop    r15
   14002a531:	pop    r14
   14002a533:	pop    r13
   14002a535:	pop    r12
   14002a537:	pop    rdi
   14002a538:	pop    rsi
   14002a539:	pop    rbx
   14002a53a:	ret    
   14002a53b:	int3   
   14002a53c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a541:	mov    QWORD PTR [rsp+0x10],rbp
   14002a546:	mov    QWORD PTR [rsp+0x18],rsi
   14002a54b:	push   rdi
   14002a54c:	push   r12
   14002a54e:	push   r13
   14002a550:	push   r14
   14002a552:	push   r15
   14002a554:	sub    rsp,0x40
   14002a558:	mov    rsi,rcx
   14002a55b:	mov    r14,r9
   14002a55e:	mov    rcx,r8
   14002a561:	mov    r13,r8
   14002a564:	mov    r15,rdx
   14002a567:	call   0x140004794
   14002a56c:	call   0x14002b9fc
   14002a571:	mov    rdi,QWORD PTR [rsp+0x90]
   14002a579:	xor    ebx,ebx
   14002a57b:	mov    ebp,0x1fffffff
   14002a580:	mov    edx,0x19930522
   14002a585:	mov    r8d,0x80000029
   14002a58b:	mov    r9d,0x80000026
   14002a591:	mov    r12d,0x1
   14002a597:	cmp    DWORD PTR [rax+0x40],ebx
   14002a59a:	jne    0x14002a5d0
   14002a59c:	cmp    DWORD PTR [rsi],0xe06d7363
   14002a5a2:	je     0x14002a5d0
   14002a5a4:	cmp    DWORD PTR [rsi],r8d
   14002a5a7:	jne    0x14002a5b9
   14002a5a9:	cmp    DWORD PTR [rsi+0x18],0xf
   14002a5ad:	jne    0x14002a5b9
   14002a5af:	cmp    QWORD PTR [rsi+0x60],0x19930520
   14002a5b7:	je     0x14002a5d0
   14002a5b9:	cmp    DWORD PTR [rsi],r9d
   14002a5bc:	je     0x14002a5d0
   14002a5be:	mov    ecx,DWORD PTR [rdi]
   14002a5c0:	and    ecx,ebp
   14002a5c2:	cmp    ecx,edx
   14002a5c4:	jb     0x14002a5d0
   14002a5c6:	test   BYTE PTR [rdi+0x24],r12b
   14002a5ca:	jne    0x14002a765
   14002a5d0:	mov    eax,DWORD PTR [rsi+0x4]
   14002a5d3:	test   al,0x66
   14002a5d5:	je     0x14002a66f
   14002a5db:	cmp    DWORD PTR [rdi+0x4],ebx
   14002a5de:	je     0x14002a765
   14002a5e4:	cmp    DWORD PTR [rsp+0x98],ebx
   14002a5eb:	jne    0x14002a765
   14002a5f1:	and    eax,0x20
   14002a5f4:	je     0x14002a635
   14002a5f6:	cmp    DWORD PTR [rsi],r9d
   14002a5f9:	jne    0x14002a635
   14002a5fb:	mov    r8,QWORD PTR [r13+0xf8]
   14002a602:	mov    rdx,r14
   14002a605:	mov    rcx,rdi
   14002a608:	call   0x14002bbd8
   14002a60d:	cmp    eax,0xffffffff
   14002a610:	jl     0x14002a786
   14002a616:	cmp    eax,DWORD PTR [rdi+0x4]
   14002a619:	jge    0x14002a786
   14002a61f:	mov    r9d,eax
   14002a622:	mov    rcx,r15
   14002a625:	mov    rdx,r14
   14002a628:	mov    r8,rdi
   14002a62b:	call   0x14002a3a8
   14002a630:	jmp    0x14002a765
   14002a635:	test   eax,eax
   14002a637:	je     0x14002a65c
   14002a639:	cmp    DWORD PTR [rsi],r8d
   14002a63c:	jne    0x14002a65c
   14002a63e:	mov    r9d,DWORD PTR [rsi+0x38]
   14002a642:	cmp    r9d,0xffffffff
   14002a646:	jl     0x14002a78c
   14002a64c:	cmp    r9d,DWORD PTR [rdi+0x4]
   14002a650:	jge    0x14002a78c
   14002a656:	mov    rcx,QWORD PTR [rsi+0x28]
   14002a65a:	jmp    0x14002a625
   14002a65c:	mov    r8,rdi
   14002a65f:	mov    rdx,r14
   14002a662:	mov    rcx,r15
   14002a665:	call   0x14002aecc
   14002a66a:	jmp    0x14002a765
   14002a66f:	cmp    DWORD PTR [rdi+0xc],ebx
   14002a672:	jne    0x14002a6b5
   14002a674:	mov    eax,DWORD PTR [rdi]
   14002a676:	and    eax,ebp
   14002a678:	cmp    eax,0x19930521
   14002a67d:	jb     0x14002a69f
   14002a67f:	cmp    DWORD PTR [rdi+0x20],ebx
   14002a682:	je     0x14002a697
   14002a684:	call   0x14002b0e4
   14002a689:	movsxd rcx,DWORD PTR [rdi+0x20]
   14002a68d:	mov    edx,0x19930522
   14002a692:	add    rax,rcx
   14002a695:	jmp    0x14002a69a
   14002a697:	mov    rax,rbx
   14002a69a:	test   rax,rax
   14002a69d:	jne    0x14002a6b5
   14002a69f:	mov    eax,DWORD PTR [rdi]
   14002a6a1:	and    eax,ebp
   14002a6a3:	cmp    eax,edx
   14002a6a5:	jb     0x14002a765
   14002a6ab:	test   BYTE PTR [rdi+0x24],0x4
   14002a6af:	je     0x14002a765
   14002a6b5:	cmp    DWORD PTR [rsi],0xe06d7363
   14002a6bb:	jne    0x14002a72c
   14002a6bd:	cmp    DWORD PTR [rsi+0x18],0x3
   14002a6c1:	jb     0x14002a72c
   14002a6c3:	cmp    DWORD PTR [rsi+0x20],edx
   14002a6c6:	jbe    0x14002a72c
   14002a6c8:	mov    rax,QWORD PTR [rsi+0x30]
   14002a6cc:	cmp    DWORD PTR [rax+0x8],ebx
   14002a6cf:	je     0x14002a6e3
   14002a6d1:	call   0x14002b0f8
   14002a6d6:	mov    rcx,QWORD PTR [rsi+0x30]
   14002a6da:	movsxd rbp,DWORD PTR [rcx+0x8]
   14002a6de:	add    rbp,rax
   14002a6e1:	jmp    0x14002a6e6
   14002a6e3:	mov    rbp,rbx
   14002a6e6:	test   rbp,rbp
   14002a6e9:	je     0x14002a72c
   14002a6eb:	movzx  ebx,BYTE PTR [rsp+0xa8]
   14002a6f3:	mov    rcx,rbp
   14002a6f6:	call   0x140026cd0
   14002a6fb:	mov    rax,QWORD PTR [rsp+0xa0]
   14002a703:	mov    r9,r14
   14002a706:	mov    DWORD PTR [rsp+0x38],ebx
   14002a70a:	mov    r8,r13
   14002a70d:	mov    QWORD PTR [rsp+0x30],rax
   14002a712:	mov    rdx,r15
   14002a715:	mov    eax,DWORD PTR [rsp+0x98]
   14002a71c:	mov    rcx,rsi
   14002a71f:	mov    DWORD PTR [rsp+0x28],eax
   14002a723:	mov    QWORD PTR [rsp+0x20],rdi
   14002a728:	call   rbp
   14002a72a:	jmp    0x14002a768
   14002a72c:	mov    rax,QWORD PTR [rsp+0xa0]
   14002a734:	mov    r9,r14
   14002a737:	mov    QWORD PTR [rsp+0x38],rax
   14002a73c:	mov    r8,r13
   14002a73f:	mov    eax,DWORD PTR [rsp+0x98]
   14002a746:	mov    rdx,r15
   14002a749:	mov    DWORD PTR [rsp+0x30],eax
   14002a74d:	mov    rcx,rsi
   14002a750:	mov    al,BYTE PTR [rsp+0xa8]
   14002a757:	mov    BYTE PTR [rsp+0x28],al
   14002a75b:	mov    QWORD PTR [rsp+0x20],rdi
   14002a760:	call   0x140029678
   14002a765:	mov    eax,r12d
   14002a768:	lea    r11,[rsp+0x40]
   14002a76d:	mov    rbx,QWORD PTR [r11+0x30]
   14002a771:	mov    rbp,QWORD PTR [r11+0x38]
   14002a775:	mov    rsi,QWORD PTR [r11+0x40]
   14002a779:	mov    rsp,r11
   14002a77c:	pop    r15
   14002a77e:	pop    r14
   14002a780:	pop    r13
   14002a782:	pop    r12
   14002a784:	pop    rdi
   14002a785:	ret    
   14002a786:	call   0x1400359d4
   14002a78b:	int3   
   14002a78c:	call   0x1400359d4
   14002a791:	int3   
   14002a792:	int3   
   14002a793:	int3   
   14002a794:	mov    rax,rsp
   14002a797:	mov    QWORD PTR [rax+0x8],rbx
   14002a79b:	mov    QWORD PTR [rax+0x10],rbp
   14002a79f:	mov    QWORD PTR [rax+0x18],rsi
   14002a7a3:	mov    QWORD PTR [rax+0x20],rdi
   14002a7a7:	push   r14
   14002a7a9:	sub    rsp,0x20
   14002a7ad:	mov    esi,DWORD PTR [rcx+0x4]
   14002a7b0:	xor    ebx,ebx
   14002a7b2:	mov    r14,r8
   14002a7b5:	mov    rbp,rdx
   14002a7b8:	mov    rdi,rcx
   14002a7bb:	test   esi,esi
   14002a7bd:	je     0x14002a7cd
   14002a7bf:	movsxd rsi,esi
   14002a7c2:	call   0x14002b0e4
   14002a7c7:	lea    rcx,[rsi+rax*1]
   14002a7cb:	jmp    0x14002a7d0
   14002a7cd:	mov    rcx,rbx
   14002a7d0:	test   rcx,rcx
   14002a7d3:	je     0x14002a8b2
   14002a7d9:	test   esi,esi
   14002a7db:	je     0x14002a7ec
   14002a7dd:	movsxd rsi,DWORD PTR [rdi+0x4]
   14002a7e1:	call   0x14002b0e4
   14002a7e6:	lea    rcx,[rsi+rax*1]
   14002a7ea:	jmp    0x14002a7ef
   14002a7ec:	mov    rcx,rbx
   14002a7ef:	cmp    BYTE PTR [rcx+0x10],bl
   14002a7f2:	je     0x14002a8b2
   14002a7f8:	test   BYTE PTR [rdi],0x80
   14002a7fb:	je     0x14002a807
   14002a7fd:	test   BYTE PTR [rbp+0x0],0x10
   14002a801:	jne    0x14002a8b2
   14002a807:	test   esi,esi
   14002a809:	je     0x14002a81c
   14002a80b:	call   0x14002b0e4
   14002a810:	mov    rsi,rax
   14002a813:	movsxd rax,DWORD PTR [rdi+0x4]
   14002a817:	add    rsi,rax
   14002a81a:	jmp    0x14002a81f
   14002a81c:	mov    rsi,rbx
   14002a81f:	call   0x14002b0f8
   14002a824:	mov    rcx,rax
   14002a827:	movsxd rax,DWORD PTR [rbp+0x4]
   14002a82b:	add    rcx,rax
   14002a82e:	cmp    rsi,rcx
   14002a831:	je     0x14002a87e
   14002a833:	cmp    DWORD PTR [rdi+0x4],ebx
   14002a836:	je     0x14002a849
   14002a838:	call   0x14002b0e4
   14002a83d:	mov    rsi,rax
   14002a840:	movsxd rax,DWORD PTR [rdi+0x4]
   14002a844:	add    rsi,rax
   14002a847:	jmp    0x14002a84c
   14002a849:	mov    rsi,rbx
   14002a84c:	call   0x14002b0f8
   14002a851:	movsxd r8,DWORD PTR [rbp+0x4]
   14002a855:	add    r8,0x10
   14002a859:	add    r8,rax
   14002a85c:	lea    rax,[rsi+0x10]
   14002a860:	sub    r8,rax
   14002a863:	movzx  ecx,BYTE PTR [rax]
   14002a866:	movzx  edx,BYTE PTR [rax+r8*1]
   14002a86b:	sub    ecx,edx
   14002a86d:	jne    0x14002a876
   14002a86f:	inc    rax
   14002a872:	test   edx,edx
   14002a874:	jne    0x14002a863
   14002a876:	test   ecx,ecx
   14002a878:	je     0x14002a87e
   14002a87a:	xor    eax,eax
   14002a87c:	jmp    0x14002a8b7
   14002a87e:	mov    al,0x2
   14002a880:	test   BYTE PTR [rbp+0x0],al
   14002a883:	je     0x14002a88a
   14002a885:	test   BYTE PTR [rdi],0x8
   14002a888:	je     0x14002a8ae
   14002a88a:	test   BYTE PTR [r14],0x1
   14002a88e:	je     0x14002a895
   14002a890:	test   BYTE PTR [rdi],0x1
   14002a893:	je     0x14002a8ae
   14002a895:	test   BYTE PTR [r14],0x4
   14002a899:	je     0x14002a8a0
   14002a89b:	test   BYTE PTR [rdi],0x4
   14002a89e:	je     0x14002a8ae
   14002a8a0:	test   BYTE PTR [r14],al
   14002a8a3:	je     0x14002a8a9
   14002a8a5:	test   BYTE PTR [rdi],al
   14002a8a7:	je     0x14002a8ae
   14002a8a9:	mov    ebx,0x1
   14002a8ae:	mov    eax,ebx
   14002a8b0:	jmp    0x14002a8b7
   14002a8b2:	mov    eax,0x1
   14002a8b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a8bc:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a8c1:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a8c6:	mov    rdi,QWORD PTR [rsp+0x48]
   14002a8cb:	add    rsp,0x20
   14002a8cf:	pop    r14
   14002a8d1:	ret    
   14002a8d2:	int3   
   14002a8d3:	int3   
   14002a8d4:	sub    rsp,0x28
   14002a8d8:	call   0x1400359d4
   14002a8dd:	int3   
   14002a8de:	int3   
   14002a8df:	int3   
   14002a8e0:	sub    rsp,0x28
   14002a8e4:	call   0x14002b9fc
   14002a8e9:	cmp    DWORD PTR [rax+0x30],0x0
   14002a8ed:	setne  al
   14002a8f0:	add    rsp,0x28
   14002a8f4:	ret    
   14002a8f5:	int3   
   14002a8f6:	int3   
   14002a8f7:	int3   
   14002a8f8:	int3   
   14002a8f9:	int3   
   14002a8fa:	int3   
   14002a8fb:	int3   
   14002a8fc:	int3   
   14002a8fd:	int3   
   14002a8fe:	int3   
   14002a8ff:	int3   
   14002a900:	int3   
   14002a901:	int3   
   14002a902:	int3   
   14002a903:	int3   
   14002a904:	int3   
   14002a905:	int3   
   14002a906:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002a910:	mov    r11,rcx
   14002a913:	movzx  edx,dl
   14002a916:	movabs r9,0x101010101010101
   14002a920:	imul   r9,rdx
   14002a924:	cmp    r8,0x10
   14002a928:	jbe    0x14002aa30
   14002a92e:	movq   xmm0,r9
   14002a933:	punpcklbw xmm0,xmm0
   14002a937:	cmp    r8,0x80
   14002a93e:	jbe    0x14002a9c0
   14002a944:	bt     DWORD PTR [rip+0x4b8e8],0x1        # 0x140076234
   14002a94c:	jae    0x14002a970
   14002a94e:	mov    eax,edx
   14002a950:	mov    rdx,rdi
   14002a953:	mov    rdi,rcx
   14002a956:	mov    rcx,r8
   14002a959:	rep stos BYTE PTR es:[rdi],al
   14002a95b:	mov    rdi,rdx
   14002a95e:	mov    rax,r11
   14002a961:	ret    
   14002a962:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002a970:	movups XMMWORD PTR [rcx],xmm0
   14002a973:	add    r8,rcx
   14002a976:	add    rcx,0x10
   14002a97a:	and    rcx,0xfffffffffffffff0
   14002a97e:	sub    r8,rcx
   14002a981:	mov    r9,r8
   14002a984:	shr    r9,0x7
   14002a988:	je     0x14002a9c0
   14002a98a:	nop    WORD PTR [rax+rax*1+0x0]
   14002a990:	movaps XMMWORD PTR [rcx],xmm0
   14002a993:	movaps XMMWORD PTR [rcx+0x10],xmm0
   14002a997:	add    rcx,0x80
   14002a99e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   14002a9a2:	movaps XMMWORD PTR [rcx-0x50],xmm0
   14002a9a6:	dec    r9
   14002a9a9:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14002a9ad:	movaps XMMWORD PTR [rcx-0x30],xmm0
   14002a9b1:	movaps XMMWORD PTR [rcx-0x20],xmm0
   14002a9b5:	movapd XMMWORD PTR [rcx-0x10],xmm0
   14002a9ba:	jne    0x14002a990
   14002a9bc:	and    r8,0x7f
   14002a9c0:	mov    r9,r8
   14002a9c3:	shr    r9,0x4
   14002a9c7:	je     0x14002a9dc
   14002a9c9:	nop    DWORD PTR [rax+0x0]
   14002a9d0:	movups XMMWORD PTR [rcx],xmm0
   14002a9d3:	add    rcx,0x10
   14002a9d7:	dec    r9
   14002a9da:	jne    0x14002a9d0
   14002a9dc:	and    r8,0xf
   14002a9e0:	je     0x14002a9e8
   14002a9e2:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   14002a9e8:	mov    rax,r11
   14002a9eb:	ret    
   14002a9ec:	pop    rsi
   14002a9ed:	stos   BYTE PTR es:[rdi],al
   14002a9ee:	add    al,BYTE PTR [rax]
   14002a9f0:	pop    rbx
   14002a9f1:	stos   BYTE PTR es:[rdi],al
   14002a9f2:	add    al,BYTE PTR [rax]
   14002a9f4:	xchg   DWORD PTR [rdx-0x55a8fffe],ebp
   14002a9fa:	add    al,BYTE PTR [rax]
   14002a9fc:	fs stos BYTE PTR es:[rdi],al
   14002a9fe:	add    al,BYTE PTR [rax]
   14002aa00:	je     0x14002a9ac
   14002aa02:	add    al,BYTE PTR [rax]
   14002aa04:	test   BYTE PTR [rdx-0x55abfffe],ch
   14002aa0a:	add    al,BYTE PTR [rax]
   14002aa0c:	mov    WORD PTR [rdx-0x5597fffe],gs
   14002aa12:	add    al,BYTE PTR [rax]
   14002aa14:	movabs al,ds:0x600002aa900002aa
   14002aa1d:	stos   BYTE PTR es:[rdi],al
   14002aa1e:	add    al,BYTE PTR [rax]
   14002aa20:	jo     0x14002a9cc
   14002aa22:	add    al,BYTE PTR [rax]
   14002aa24:	sub    BYTE PTR [rdx-0x55affffe],0x2
   14002aa2b:	add    BYTE PTR [rax+0x490002aa],ch
   14002aa31:	mov    edx,ecx
   14002aa33:	lea    r9,[rip+0xfffffffffffd55c6]        # 0x140000000
   14002aa3a:	mov    eax,DWORD PTR [r9+r8*4+0x2a9ec]
   14002aa42:	add    r9,rax
   14002aa45:	add    rcx,r8
   14002aa48:	mov    rax,r11
   14002aa4b:	jmp    r9
   14002aa4e:	xchg   ax,ax
   14002aa50:	mov    QWORD PTR [rcx-0xf],rdx
   14002aa54:	mov    DWORD PTR [rcx-0x7],edx
   14002aa57:	mov    WORD PTR [rcx-0x3],dx
   14002aa5b:	mov    BYTE PTR [rcx-0x1],dl
   14002aa5e:	ret    
   14002aa5f:	nop
   14002aa60:	mov    QWORD PTR [rcx-0xc],rdx
   14002aa64:	mov    DWORD PTR [rcx-0x4],edx
   14002aa67:	ret    
   14002aa68:	mov    QWORD PTR [rcx-0x9],rdx
   14002aa6c:	mov    BYTE PTR [rcx-0x1],dl
   14002aa6f:	ret    
   14002aa70:	mov    QWORD PTR [rcx-0xd],rdx
   14002aa74:	mov    DWORD PTR [rcx-0x5],edx
   14002aa77:	mov    BYTE PTR [rcx-0x1],dl
   14002aa7a:	ret    
   14002aa7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002aa80:	mov    QWORD PTR [rcx-0xe],rdx
   14002aa84:	mov    DWORD PTR [rcx-0x6],edx
   14002aa87:	mov    WORD PTR [rcx-0x2],dx
   14002aa8b:	ret    
   14002aa8c:	mov    QWORD PTR [rax],rdx
   14002aa8f:	ret    
   14002aa90:	mov    QWORD PTR [rax],rdx
   14002aa93:	mov    WORD PTR [rax+0x8],dx
   14002aa97:	mov    BYTE PTR [rax+0xa],dl
   14002aa9a:	ret    
   14002aa9b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002aaa0:	mov    QWORD PTR [rax],rdx
   14002aaa3:	mov    WORD PTR [rax+0x8],dx
   14002aaa7:	ret    
   14002aaa8:	mov    QWORD PTR [rax],rdx
   14002aaab:	mov    QWORD PTR [rax+0x8],rdx
   14002aaaf:	ret    
   14002aab0:	int3   
   14002aab1:	int3   
   14002aab2:	int3   
   14002aab3:	int3   
   14002aab4:	int3   
   14002aab5:	int3   
   14002aab6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002aac0:	sub    rdx,rcx
   14002aac3:	cmp    r8,0x8
   14002aac7:	jb     0x14002aaeb
   14002aac9:	test   cl,0x7
   14002aacc:	je     0x14002aae2
   14002aace:	xchg   ax,ax
   14002aad0:	mov    al,BYTE PTR [rcx]
   14002aad2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002aad5:	jne    0x14002ab03
   14002aad7:	inc    rcx
   14002aada:	dec    r8
   14002aadd:	test   cl,0x7
   14002aae0:	jne    0x14002aad0
   14002aae2:	mov    r9,r8
   14002aae5:	shr    r9,0x3
   14002aae9:	jne    0x14002ab0a
   14002aaeb:	test   r8,r8
   14002aaee:	je     0x14002aaff
   14002aaf0:	mov    al,BYTE PTR [rcx]
   14002aaf2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14002aaf5:	jne    0x14002ab03
   14002aaf7:	inc    rcx
   14002aafa:	dec    r8
   14002aafd:	jne    0x14002aaf0
   14002aaff:	xor    rax,rax
   14002ab02:	ret    
   14002ab03:	sbb    eax,eax
   14002ab05:	sbb    eax,0xffffffff
   14002ab08:	ret    
   14002ab09:	nop
   14002ab0a:	shr    r9,0x2
   14002ab0e:	je     0x14002ab47
   14002ab10:	mov    rax,QWORD PTR [rcx]
   14002ab13:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002ab17:	jne    0x14002ab74
   14002ab19:	mov    rax,QWORD PTR [rcx+0x8]
   14002ab1d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14002ab22:	jne    0x14002ab70
   14002ab24:	mov    rax,QWORD PTR [rcx+0x10]
   14002ab28:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14002ab2d:	jne    0x14002ab6c
   14002ab2f:	mov    rax,QWORD PTR [rcx+0x18]
   14002ab33:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14002ab38:	jne    0x14002ab68
   14002ab3a:	add    rcx,0x20
   14002ab3e:	dec    r9
   14002ab41:	jne    0x14002ab10
   14002ab43:	and    r8,0x1f
   14002ab47:	mov    r9,r8
   14002ab4a:	shr    r9,0x3
   14002ab4e:	je     0x14002aaeb
   14002ab50:	mov    rax,QWORD PTR [rcx]
   14002ab53:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14002ab57:	jne    0x14002ab74
   14002ab59:	add    rcx,0x8
   14002ab5d:	dec    r9
   14002ab60:	jne    0x14002ab50
   14002ab62:	and    r8,0x7
   14002ab66:	jmp    0x14002aaeb
   14002ab68:	add    rcx,0x8
   14002ab6c:	add    rcx,0x8
   14002ab70:	add    rcx,0x8
   14002ab74:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14002ab78:	bswap  rax
   14002ab7b:	bswap  rcx
   14002ab7e:	cmp    rax,rcx
   14002ab81:	sbb    eax,eax
   14002ab83:	sbb    eax,0xffffffff
   14002ab86:	ret    
   14002ab87:	int3   
   14002ab88:	mov    QWORD PTR [rsp+0x10],rbx
   14002ab8d:	mov    QWORD PTR [rsp+0x18],rsi
   14002ab92:	push   rbp
   14002ab93:	push   rdi
   14002ab94:	push   r14
   14002ab96:	mov    rbp,rsp
   14002ab99:	sub    rsp,0x60
   14002ab9d:	movaps xmm0,XMMWORD PTR [rip+0x286bc]        # 0x140053260
   14002aba4:	mov    rsi,rdx
   14002aba7:	movaps xmm1,XMMWORD PTR [rip+0x286c2]        # 0x140053270
   14002abae:	mov    r14,rcx
   14002abb1:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14002abb5:	movaps xmm0,XMMWORD PTR [rip+0x286c4]        # 0x140053280
   14002abbc:	movaps XMMWORD PTR [rbp-0x30],xmm1
   14002abc0:	movaps xmm1,XMMWORD PTR [rip+0x286c9]        # 0x140053290
   14002abc7:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14002abcb:	movaps XMMWORD PTR [rbp-0x10],xmm1
   14002abcf:	test   rdx,rdx
   14002abd2:	je     0x14002abf6
   14002abd4:	test   BYTE PTR [rdx],0x10
   14002abd7:	je     0x14002abf6
   14002abd9:	mov    rdi,QWORD PTR [rcx]
   14002abdc:	mov    rax,QWORD PTR [rdi-0x8]
   14002abe0:	mov    rbx,QWORD PTR [rax+0x40]
   14002abe4:	mov    rsi,QWORD PTR [rax+0x30]
   14002abe8:	mov    rcx,rbx
   14002abeb:	call   0x140026cd0
   14002abf0:	lea    rcx,[rdi-0x8]
   14002abf4:	call   rbx
   14002abf6:	lea    rdx,[rbp+0x20]
   14002abfa:	mov    QWORD PTR [rbp-0x18],r14
   14002abfe:	mov    rcx,rsi
   14002ac01:	mov    QWORD PTR [rbp-0x10],rsi
   14002ac05:	call   QWORD PTR [rip+0x206ad]        # 0x14004b2b8
   14002ac0b:	mov    QWORD PTR [rbp+0x20],rax
   14002ac0f:	mov    rdx,rax
   14002ac12:	mov    QWORD PTR [rbp-0x8],rax
   14002ac16:	test   rsi,rsi
   14002ac19:	je     0x14002ac36
   14002ac1b:	test   BYTE PTR [rsi],0x8
   14002ac1e:	mov    ecx,0x1994000
   14002ac23:	je     0x14002ac2a
   14002ac25:	mov    DWORD PTR [rbp-0x20],ecx
   14002ac28:	jmp    0x14002ac36
   14002ac2a:	mov    eax,DWORD PTR [rbp-0x20]
   14002ac2d:	test   rdx,rdx
   14002ac30:	cmove  eax,ecx
   14002ac33:	mov    DWORD PTR [rbp-0x20],eax
   14002ac36:	mov    r8d,DWORD PTR [rbp-0x28]
   14002ac3a:	lea    r9,[rbp-0x20]
   14002ac3e:	mov    edx,DWORD PTR [rbp-0x3c]
   14002ac41:	mov    ecx,DWORD PTR [rbp-0x40]
   14002ac44:	call   QWORD PTR [rip+0x20676]        # 0x14004b2c0
   14002ac4a:	lea    r11,[rsp+0x60]
   14002ac4f:	mov    rbx,QWORD PTR [r11+0x28]
   14002ac53:	mov    rsi,QWORD PTR [r11+0x30]
   14002ac57:	mov    rsp,r11
   14002ac5a:	pop    r14
   14002ac5c:	pop    rdi
   14002ac5d:	pop    rbp
   14002ac5e:	ret    
   14002ac5f:	int3   
   14002ac60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ac65:	mov    QWORD PTR [rsp+0x10],rbp
   14002ac6a:	mov    QWORD PTR [rsp+0x18],rsi
   14002ac6f:	push   rdi
   14002ac70:	sub    rsp,0x20
   14002ac74:	mov    rsi,rdx
   14002ac77:	mov    rdx,rcx
   14002ac7a:	mov    rcx,rsi
   14002ac7d:	call   0x14002bbd0
   14002ac82:	mov    edi,DWORD PTR [rsi+0xc]
   14002ac85:	mov    ebp,eax
   14002ac87:	xor    ebx,ebx
   14002ac89:	jmp    0x14002acaf
   14002ac8b:	dec    edi
   14002ac8d:	call   0x14002b9fc
   14002ac92:	lea    rdx,[rdi+rdi*4]
   14002ac96:	mov    rax,QWORD PTR [rax+0x60]
   14002ac9a:	lea    rcx,[rax+rdx*4]
   14002ac9e:	movsxd rax,DWORD PTR [rsi+0x10]
   14002aca2:	add    rax,rcx
   14002aca5:	cmp    ebp,DWORD PTR [rax+0x4]
   14002aca8:	jle    0x14002acaf
   14002acaa:	cmp    ebp,DWORD PTR [rax+0x8]
   14002acad:	jle    0x14002acb6
   14002acaf:	test   edi,edi
   14002acb1:	jne    0x14002ac8b
   14002acb3:	mov    rax,rbx
   14002acb6:	mov    rbp,QWORD PTR [rsp+0x38]
   14002acbb:	test   rax,rax
   14002acbe:	mov    rsi,QWORD PTR [rsp+0x40]
   14002acc3:	setne  bl
   14002acc6:	mov    eax,ebx
   14002acc8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002accd:	add    rsp,0x20
   14002acd1:	pop    rdi
   14002acd2:	ret    
   14002acd3:	int3   
   14002acd4:	mov    QWORD PTR [rsp+0x10],rbx
   14002acd9:	mov    QWORD PTR [rsp+0x18],rbp
   14002acde:	push   rsi
   14002acdf:	push   rdi
   14002ace0:	push   r12
   14002ace2:	push   r14
   14002ace4:	push   r15
   14002ace6:	sub    rsp,0x20
   14002acea:	mov    edi,DWORD PTR [r8+0xc]
   14002acee:	mov    r12,rcx
   14002acf1:	mov    rcx,r8
   14002acf4:	mov    rsi,r9
   14002acf7:	mov    r14,r8
   14002acfa:	mov    r15,rdx
   14002acfd:	call   0x14002bbd0
   14002ad02:	mov    r10,QWORD PTR [r12]
   14002ad06:	mov    ebp,eax
   14002ad08:	mov    QWORD PTR [rsi],r10
   14002ad0b:	test   edi,edi
   14002ad0d:	je     0x14002ad83
   14002ad0f:	movsxd rax,DWORD PTR [r14+0x10]
   14002ad13:	dec    edi
   14002ad15:	lea    rdx,[rdi+rdi*4]
   14002ad19:	lea    rbx,[rax+rdx*4]
   14002ad1d:	add    rbx,QWORD PTR [r15+0x8]
   14002ad21:	cmp    ebp,DWORD PTR [rbx+0x4]
   14002ad24:	jle    0x14002ad0b
   14002ad26:	cmp    ebp,DWORD PTR [rbx+0x8]
   14002ad29:	jg     0x14002ad0b
   14002ad2b:	mov    rcx,QWORD PTR [r15]
   14002ad2e:	lea    rdx,[rsp+0x50]
   14002ad33:	xor    r8d,r8d
   14002ad36:	call   QWORD PTR [rip+0x2066c]        # 0x14004b3a8
   14002ad3c:	movsxd r8,DWORD PTR [rbx+0x10]
   14002ad40:	xor    ecx,ecx
   14002ad42:	add    r8,QWORD PTR [rsp+0x50]
   14002ad47:	mov    r9d,DWORD PTR [rbx+0xc]
   14002ad4b:	mov    r10d,DWORD PTR [rax]
   14002ad4e:	test   r9d,r9d
   14002ad51:	je     0x14002ad6a
   14002ad53:	lea    rdx,[r8+0xc]
   14002ad57:	movsxd rax,DWORD PTR [rdx]
   14002ad5a:	cmp    rax,r10
   14002ad5d:	je     0x14002ad6a
   14002ad5f:	inc    ecx
   14002ad61:	add    rdx,0x14
   14002ad65:	cmp    ecx,r9d
   14002ad68:	jb     0x14002ad57
   14002ad6a:	cmp    ecx,r9d
   14002ad6d:	jae    0x14002ad0b
   14002ad6f:	mov    rax,QWORD PTR [r12]
   14002ad73:	lea    rcx,[rcx+rcx*4]
   14002ad77:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   14002ad7c:	mov    rcx,QWORD PTR [rcx+rax*1]
   14002ad80:	mov    QWORD PTR [rsi],rcx
   14002ad83:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ad88:	mov    rax,rsi
   14002ad8b:	mov    rbp,QWORD PTR [rsp+0x60]
   14002ad90:	add    rsp,0x20
   14002ad94:	pop    r15
   14002ad96:	pop    r14
   14002ad98:	pop    r12
   14002ad9a:	pop    rdi
   14002ad9b:	pop    rsi
   14002ad9c:	ret    
   14002ad9d:	int3   
   14002ad9e:	int3   
   14002ad9f:	int3   
   14002ada0:	mov    rax,rsp
   14002ada3:	mov    QWORD PTR [rax+0x8],rbx
   14002ada7:	mov    QWORD PTR [rax+0x10],rbp
   14002adab:	mov    QWORD PTR [rax+0x18],rsi
   14002adaf:	mov    QWORD PTR [rax+0x20],rdi
   14002adb3:	push   r12
   14002adb5:	push   r14
   14002adb7:	push   r15
   14002adb9:	sub    rsp,0x20
   14002adbd:	mov    esi,DWORD PTR [rdx+0xc]
   14002adc0:	mov    rdi,rdx
   14002adc3:	mov    rbp,QWORD PTR [rsp+0x70]
   14002adc8:	mov    rcx,rdi
   14002adcb:	mov    rdx,rbp
   14002adce:	mov    r12d,r9d
   14002add1:	xor    ebx,ebx
   14002add3:	call   0x14002bbd0
   14002add8:	mov    r11d,eax
   14002addb:	test   esi,esi
   14002addd:	je     0x14002aec3
   14002ade3:	mov    r10,QWORD PTR [rsp+0x68]
   14002ade8:	mov    edx,esi
   14002adea:	mov    r8,QWORD PTR [rsp+0x60]
   14002adef:	or     DWORD PTR [r10],0xffffffff
   14002adf3:	or     DWORD PTR [r8],0xffffffff
   14002adf7:	mov    r14,QWORD PTR [rbp+0x8]
   14002adfb:	movsxd r15,DWORD PTR [rdi+0x10]
   14002adff:	lea    r9d,[rdx-0x1]
   14002ae03:	lea    rcx,[r9+r9*4]
   14002ae07:	lea    rax,[r14+rcx*4]
   14002ae0b:	cmp    r11d,DWORD PTR [rax+r15*1+0x4]
   14002ae10:	jle    0x14002ae19
   14002ae12:	cmp    r11d,DWORD PTR [rax+r15*1+0x8]
   14002ae17:	jle    0x14002ae21
   14002ae19:	mov    edx,r9d
   14002ae1c:	test   r9d,r9d
   14002ae1f:	jne    0x14002adff
   14002ae21:	test   edx,edx
   14002ae23:	je     0x14002ae33
   14002ae25:	lea    eax,[rdx-0x1]
   14002ae28:	lea    rax,[rax+rax*4]
   14002ae2c:	lea    rbx,[r15+rax*4]
   14002ae30:	add    rbx,r14
   14002ae33:	xor    edx,edx
   14002ae35:	test   esi,esi
   14002ae37:	je     0x14002aeb7
   14002ae39:	xor    r9d,r9d
   14002ae3c:	movsxd rcx,DWORD PTR [rdi+0x10]
   14002ae40:	add    rcx,QWORD PTR [rbp+0x8]
   14002ae44:	add    rcx,r9
   14002ae47:	test   rbx,rbx
   14002ae4a:	je     0x14002ae5b
   14002ae4c:	mov    eax,DWORD PTR [rbx+0x4]
   14002ae4f:	cmp    DWORD PTR [rcx],eax
   14002ae51:	jle    0x14002ae75
   14002ae53:	mov    eax,DWORD PTR [rbx+0x8]
   14002ae56:	cmp    DWORD PTR [rcx+0x4],eax
   14002ae59:	jg     0x14002ae75
   14002ae5b:	cmp    r12d,DWORD PTR [rcx]
   14002ae5e:	jl     0x14002ae75
   14002ae60:	cmp    r12d,DWORD PTR [rcx+0x4]
   14002ae64:	jg     0x14002ae75
   14002ae66:	cmp    DWORD PTR [r8],0xffffffff
   14002ae6a:	jne    0x14002ae6f
   14002ae6c:	mov    DWORD PTR [r8],edx
   14002ae6f:	lea    eax,[rdx+0x1]
   14002ae72:	mov    DWORD PTR [r10],eax
   14002ae75:	inc    edx
   14002ae77:	add    r9,0x14
   14002ae7b:	cmp    edx,esi
   14002ae7d:	jb     0x14002ae3c
   14002ae7f:	cmp    DWORD PTR [r8],0xffffffff
   14002ae83:	je     0x14002aeb7
   14002ae85:	mov    eax,DWORD PTR [r8]
   14002ae88:	lea    rcx,[rax+rax*4]
   14002ae8c:	movsxd rax,DWORD PTR [rdi+0x10]
   14002ae90:	lea    rax,[rax+rcx*4]
   14002ae94:	add    rax,QWORD PTR [rbp+0x8]
   14002ae98:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ae9d:	mov    rbp,QWORD PTR [rsp+0x48]
   14002aea2:	mov    rsi,QWORD PTR [rsp+0x50]
   14002aea7:	mov    rdi,QWORD PTR [rsp+0x58]
   14002aeac:	add    rsp,0x20
   14002aeb0:	pop    r15
   14002aeb2:	pop    r14
   14002aeb4:	pop    r12
   14002aeb6:	ret    
   14002aeb7:	and    DWORD PTR [r8],0x0
   14002aebb:	and    DWORD PTR [r10],0x0
   14002aebf:	xor    eax,eax
   14002aec1:	jmp    0x14002ae98
   14002aec3:	call   0x1400359d4
   14002aec8:	int3   
   14002aec9:	int3   
   14002aeca:	int3   
   14002aecb:	int3   
   14002aecc:	mov    QWORD PTR [rsp+0x8],rbx
   14002aed1:	mov    QWORD PTR [rsp+0x10],rbp
   14002aed6:	push   rsi
   14002aed7:	push   rdi
   14002aed8:	push   r14
   14002aeda:	sub    rsp,0x20
   14002aede:	lea    r9,[rsp+0x50]
   14002aee3:	mov    rdi,r8
   14002aee6:	mov    rbp,rdx
   14002aee9:	call   0x14002acd4
   14002aeee:	mov    rdx,rbp
   14002aef1:	mov    rcx,rdi
   14002aef4:	mov    r14,rax
   14002aef7:	call   0x14002bbd0
   14002aefc:	mov    ebx,DWORD PTR [rdi+0xc]
   14002aeff:	mov    esi,eax
   14002af01:	jmp    0x14002af27
   14002af03:	dec    ebx
   14002af05:	call   0x14002b9fc
   14002af0a:	lea    rdx,[rbx+rbx*4]
   14002af0e:	mov    rax,QWORD PTR [rax+0x60]
   14002af12:	lea    rcx,[rax+rdx*4]
   14002af16:	movsxd rax,DWORD PTR [rdi+0x10]
   14002af1a:	add    rax,rcx
   14002af1d:	cmp    esi,DWORD PTR [rax+0x4]
   14002af20:	jle    0x14002af27
   14002af22:	cmp    esi,DWORD PTR [rax+0x8]
   14002af25:	jle    0x14002af2d
   14002af27:	test   ebx,ebx
   14002af29:	jne    0x14002af03
   14002af2b:	xor    eax,eax
   14002af2d:	test   rax,rax
   14002af30:	jne    0x14002af38
   14002af32:	or     r9d,0xffffffff
   14002af36:	jmp    0x14002af3c
   14002af38:	mov    r9d,DWORD PTR [rax+0x4]
   14002af3c:	mov    r8,rdi
   14002af3f:	mov    rdx,rbp
   14002af42:	mov    rcx,r14
   14002af45:	call   0x14002a3a8
   14002af4a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002af4f:	mov    rbp,QWORD PTR [rsp+0x48]
   14002af54:	add    rsp,0x20
   14002af58:	pop    r14
   14002af5a:	pop    rdi
   14002af5b:	pop    rsi
   14002af5c:	ret    
   14002af5d:	int3   
   14002af5e:	int3   
   14002af5f:	int3   
   14002af60:	mov    QWORD PTR [rsp+0x8],rbx
   14002af65:	mov    QWORD PTR [rsp+0x10],rbp
   14002af6a:	mov    QWORD PTR [rsp+0x18],rsi
   14002af6f:	push   rdi
   14002af70:	sub    rsp,0x40
   14002af74:	mov    rsi,r9
   14002af77:	mov    rbp,r8
   14002af7a:	mov    rbx,rdx
   14002af7d:	mov    rdi,rcx
   14002af80:	call   0x14002b9fc
   14002af85:	mov    QWORD PTR [rax+0x70],rbx
   14002af89:	mov    rbx,QWORD PTR [rdi]
   14002af8c:	call   0x14002b9fc
   14002af91:	mov    rdx,QWORD PTR [rbx+0x38]
   14002af95:	mov    r8,rsi
   14002af98:	mov    rcx,QWORD PTR [rsp+0x78]
   14002af9d:	xor    ebx,ebx
   14002af9f:	mov    r9,QWORD PTR [rsp+0x70]
   14002afa4:	mov    DWORD PTR [rsp+0x38],0x1
   14002afac:	mov    QWORD PTR [rax+0x68],rdx
   14002afb0:	mov    rdx,rbp
   14002afb3:	mov    QWORD PTR [rsp+0x30],rbx
   14002afb8:	mov    DWORD PTR [rsp+0x28],ebx
   14002afbc:	mov    QWORD PTR [rsp+0x20],rcx
   14002afc1:	mov    rcx,QWORD PTR [rdi]
   14002afc4:	call   0x14002a53c
   14002afc9:	call   0x14002b9fc
   14002afce:	mov    rcx,QWORD PTR [rsp+0x80]
   14002afd6:	mov    rbp,QWORD PTR [rsp+0x58]
   14002afdb:	mov    rsi,QWORD PTR [rsp+0x60]
   14002afe0:	mov    QWORD PTR [rax+0x70],rbx
   14002afe4:	lea    eax,[rbx+0x1]
   14002afe7:	mov    rbx,QWORD PTR [rsp+0x50]
   14002afec:	mov    DWORD PTR [rcx],0x1
   14002aff2:	add    rsp,0x40
   14002aff6:	pop    rdi
   14002aff7:	ret    
   14002aff8:	mov    rax,rsp
   14002affb:	mov    QWORD PTR [rax+0x20],r9
   14002afff:	mov    QWORD PTR [rax+0x18],r8
   14002b003:	mov    QWORD PTR [rax+0x10],rdx
   14002b007:	mov    QWORD PTR [rax+0x8],rcx
   14002b00b:	push   rbx
   14002b00c:	push   rdi
   14002b00d:	sub    rsp,0x68
   14002b011:	mov    rdi,rcx
   14002b014:	and    DWORD PTR [rax-0x38],0x0
   14002b018:	mov    QWORD PTR [rax-0x30],rcx
   14002b01c:	mov    QWORD PTR [rax-0x28],r8
   14002b020:	call   0x14002b9fc
   14002b025:	mov    rbx,QWORD PTR [rax+0x10]
   14002b029:	mov    rcx,rbx
   14002b02c:	call   0x140026cd0
   14002b031:	lea    rdx,[rsp+0x48]
   14002b036:	mov    ecx,DWORD PTR [rdi]
   14002b038:	call   rbx
   14002b03a:	mov    DWORD PTR [rsp+0x40],0x0
   14002b042:	jmp    0x14002b044
   14002b044:	mov    eax,DWORD PTR [rsp+0x40]
   14002b048:	add    rsp,0x68
   14002b04c:	pop    rdi
   14002b04d:	pop    rbx
   14002b04e:	ret    
   14002b04f:	int3   
   14002b050:	rex push rbx
   14002b052:	sub    rsp,0x20
   14002b056:	mov    rbx,rcx
   14002b059:	mov    QWORD PTR [rcx],rdx
   14002b05c:	call   0x14002b9fc
   14002b061:	cmp    rbx,QWORD PTR [rax+0x58]
   14002b065:	jae    0x14002b072
   14002b067:	call   0x14002b9fc
   14002b06c:	mov    rcx,QWORD PTR [rax+0x58]
   14002b070:	jmp    0x14002b074
   14002b072:	xor    ecx,ecx
   14002b074:	mov    QWORD PTR [rbx+0x8],rcx
   14002b078:	call   0x14002b9fc
   14002b07d:	mov    QWORD PTR [rax+0x58],rbx
   14002b081:	mov    rax,rbx
   14002b084:	add    rsp,0x20
   14002b088:	pop    rbx
   14002b089:	ret    
   14002b08a:	int3   
   14002b08b:	int3   
   14002b08c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b091:	push   rdi
   14002b092:	sub    rsp,0x20
   14002b096:	mov    rdi,rcx
   14002b099:	call   0x14002b9fc
   14002b09e:	cmp    rdi,QWORD PTR [rax+0x58]
   14002b0a2:	jne    0x14002b0dd
   14002b0a4:	call   0x14002b9fc
   14002b0a9:	mov    rbx,QWORD PTR [rax+0x58]
   14002b0ad:	jmp    0x14002b0b8
   14002b0af:	cmp    rdi,rbx
   14002b0b2:	je     0x14002b0bf
   14002b0b4:	mov    rbx,QWORD PTR [rbx+0x8]
   14002b0b8:	test   rbx,rbx
   14002b0bb:	jne    0x14002b0af
   14002b0bd:	jmp    0x14002b0d7
   14002b0bf:	call   0x14002b9fc
   14002b0c4:	mov    rcx,QWORD PTR [rbx+0x8]
   14002b0c8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b0cd:	mov    QWORD PTR [rax+0x58],rcx
   14002b0d1:	add    rsp,0x20
   14002b0d5:	pop    rdi
   14002b0d6:	ret    
   14002b0d7:	call   0x1400359d4
   14002b0dc:	int3   
   14002b0dd:	call   0x1400359d4
   14002b0e2:	int3   
   14002b0e3:	int3   
   14002b0e4:	sub    rsp,0x28
   14002b0e8:	call   0x14002b9fc
   14002b0ed:	mov    rax,QWORD PTR [rax+0x60]
   14002b0f1:	add    rsp,0x28
   14002b0f5:	ret    
   14002b0f6:	int3   
   14002b0f7:	int3   
   14002b0f8:	sub    rsp,0x28
   14002b0fc:	call   0x14002b9fc
   14002b101:	mov    rax,QWORD PTR [rax+0x68]
   14002b105:	add    rsp,0x28
   14002b109:	ret    
   14002b10a:	int3   
   14002b10b:	int3   
   14002b10c:	rex push rbx
   14002b10e:	sub    rsp,0x20
   14002b112:	mov    rbx,rcx
   14002b115:	call   0x14002b9fc
   14002b11a:	mov    rdx,QWORD PTR [rax+0x58]
   14002b11e:	jmp    0x14002b129
   14002b120:	cmp    QWORD PTR [rdx],rbx
   14002b123:	je     0x14002b137
   14002b125:	mov    rdx,QWORD PTR [rdx+0x8]
   14002b129:	test   rdx,rdx
   14002b12c:	jne    0x14002b120
   14002b12e:	lea    eax,[rdx+0x1]
   14002b131:	add    rsp,0x20
   14002b135:	pop    rbx
   14002b136:	ret    
   14002b137:	xor    eax,eax
   14002b139:	jmp    0x14002b131
   14002b13b:	int3   
   14002b13c:	rex push rbx
   14002b13e:	sub    rsp,0x20
   14002b142:	mov    rbx,rcx
   14002b145:	call   0x14002b9fc
   14002b14a:	mov    QWORD PTR [rax+0x60],rbx
   14002b14e:	add    rsp,0x20
   14002b152:	pop    rbx
   14002b153:	ret    
   14002b154:	rex push rbx
   14002b156:	sub    rsp,0x20
   14002b15a:	mov    rbx,rcx
   14002b15d:	call   0x14002b9fc
   14002b162:	mov    QWORD PTR [rax+0x68],rbx
   14002b166:	add    rsp,0x20
   14002b16a:	pop    rbx
   14002b16b:	ret    
   14002b16c:	rex push rbp
   14002b16e:	lea    rbp,[rsp-0x4b0]
   14002b176:	sub    rsp,0x5b0
   14002b17d:	mov    rax,QWORD PTR [rip+0x45ecc]        # 0x140071050
   14002b184:	xor    rax,rsp
   14002b187:	mov    QWORD PTR [rbp+0x4a0],rax
   14002b18e:	mov    r10,QWORD PTR [rbp+0x4f8]
   14002b195:	lea    rax,[rip+0x28104]        # 0x1400532a0
   14002b19c:	movups xmm0,XMMWORD PTR [rax]
   14002b19f:	mov    r11,rcx
   14002b1a2:	lea    rcx,[rsp+0x30]
   14002b1a7:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002b1ab:	movups XMMWORD PTR [rcx],xmm0
   14002b1ae:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002b1b2:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002b1b6:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002b1ba:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002b1be:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002b1c2:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002b1c6:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002b1ca:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002b1ce:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002b1d2:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002b1d6:	movups xmm1,XMMWORD PTR [rax+0x80]
   14002b1dd:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002b1e1:	movups xmm0,XMMWORD PTR [rax+0x70]
   14002b1e5:	mov    rax,QWORD PTR [rax+0x90]
   14002b1ec:	movups XMMWORD PTR [rcx+0x70],xmm0
   14002b1f0:	movups XMMWORD PTR [rcx+0x80],xmm1
   14002b1f7:	mov    QWORD PTR [rcx+0x90],rax
   14002b1fe:	lea    rax,[rip+0xffffffffffffef6b]        # 0x14002a170
   14002b205:	mov    rcx,QWORD PTR [r11]
   14002b208:	mov    QWORD PTR [rsp+0x50],rax
   14002b20d:	mov    rax,QWORD PTR [rbp+0x4e0]
   14002b214:	mov    QWORD PTR [rsp+0x60],rax
   14002b219:	movsxd rax,DWORD PTR [rbp+0x4e8]
   14002b220:	mov    QWORD PTR [rsp+0x68],rax
   14002b225:	mov    rax,QWORD PTR [rbp+0x4f0]
   14002b22c:	mov    QWORD PTR [rsp+0x78],rax
   14002b231:	movzx  eax,BYTE PTR [rbp+0x500]
   14002b238:	mov    QWORD PTR [rbp-0x78],rax
   14002b23c:	mov    rax,QWORD PTR [r10+0x40]
   14002b240:	mov    QWORD PTR [rsp+0x28],rax
   14002b245:	lea    rax,[rbp-0x30]
   14002b249:	mov    QWORD PTR [rsp+0x58],r9
   14002b24e:	xor    r9d,r9d
   14002b251:	mov    QWORD PTR [rsp+0x70],r8
   14002b256:	lea    r8,[rsp+0x30]
   14002b25b:	mov    QWORD PTR [rbp-0x80],rdx
   14002b25f:	mov    rdx,QWORD PTR [r10]
   14002b262:	mov    QWORD PTR [rsp+0x20],rax
   14002b267:	mov    QWORD PTR [rbp-0x70],0x19930520
   14002b26f:	call   QWORD PTR [rip+0x20053]        # 0x14004b2c8
   14002b275:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14002b27c:	xor    rcx,rsp
   14002b27f:	call   0x140025df0
   14002b284:	add    rsp,0x5b0
   14002b28b:	pop    rbp
   14002b28c:	ret    
   14002b28d:	int3   
   14002b28e:	int3   
   14002b28f:	int3   
   14002b290:	mov    QWORD PTR [rsp+0x10],rbx
   14002b295:	mov    QWORD PTR [rsp+0x18],rsi
   14002b29a:	push   rdi
   14002b29b:	sub    rsp,0x40
   14002b29f:	mov    rbx,r9
   14002b2a2:	mov    QWORD PTR [rsp+0x50],rdx
   14002b2a7:	mov    rdi,r8
   14002b2aa:	mov    rsi,rcx
   14002b2ad:	call   0x14002b9fc
   14002b2b2:	mov    rdx,QWORD PTR [rbx+0x8]
   14002b2b6:	mov    QWORD PTR [rax+0x60],rdx
   14002b2ba:	call   0x14002b9fc
   14002b2bf:	mov    rdx,QWORD PTR [rsi+0x38]
   14002b2c3:	mov    QWORD PTR [rax+0x68],rdx
   14002b2c7:	call   0x14002b9fc
   14002b2cc:	mov    rcx,QWORD PTR [rbx+0x38]
   14002b2d0:	mov    r9,rbx
   14002b2d3:	mov    r8,rdi
   14002b2d6:	mov    edx,DWORD PTR [rcx]
   14002b2d8:	mov    rcx,rsi
   14002b2db:	add    rdx,QWORD PTR [rax+0x60]
   14002b2df:	xor    eax,eax
   14002b2e1:	mov    DWORD PTR [rsp+0x38],eax
   14002b2e5:	mov    QWORD PTR [rsp+0x30],rax
   14002b2ea:	mov    DWORD PTR [rsp+0x28],eax
   14002b2ee:	mov    QWORD PTR [rsp+0x20],rdx
   14002b2f3:	lea    rdx,[rsp+0x50]
   14002b2f8:	call   0x14002a53c
   14002b2fd:	mov    rbx,QWORD PTR [rsp+0x58]
   14002b302:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b307:	add    rsp,0x40
   14002b30b:	pop    rdi
   14002b30c:	ret    
   14002b30d:	int3   
   14002b30e:	int3   
   14002b30f:	int3   
   14002b310:	mov    QWORD PTR [rsp+0x8],rbx
   14002b315:	mov    QWORD PTR [rsp+0x10],rbp
   14002b31a:	mov    QWORD PTR [rsp+0x18],rsi
   14002b31f:	push   rdi
   14002b320:	push   r12
   14002b322:	push   r13
   14002b324:	push   r14
   14002b326:	push   r15
   14002b328:	sub    rsp,0x40
   14002b32c:	mov    r12,QWORD PTR [r9+0x8]
   14002b330:	mov    rbp,rcx
   14002b333:	mov    r15,QWORD PTR [r9]
   14002b336:	mov    rcx,r8
   14002b339:	mov    rbx,QWORD PTR [r9+0x38]
   14002b33d:	sub    r15,r12
   14002b340:	mov    r14,r9
   14002b343:	mov    rdi,r8
   14002b346:	mov    r13,rdx
   14002b349:	call   0x140004794
   14002b34e:	test   BYTE PTR [rbp+0x4],0x66
   14002b352:	jne    0x14002b438
   14002b358:	mov    esi,DWORD PTR [r14+0x48]
   14002b35c:	mov    QWORD PTR [rsp+0x30],rbp
   14002b361:	mov    QWORD PTR [rsp+0x38],rdi
   14002b366:	cmp    esi,DWORD PTR [rbx]
   14002b368:	jae    0x14002b4e8
   14002b36e:	mov    edi,esi
   14002b370:	add    rdi,rdi
   14002b373:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14002b377:	cmp    r15,rax
   14002b37a:	jb     0x14002b42a
   14002b380:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   14002b384:	cmp    r15,rax
   14002b387:	jae    0x14002b42a
   14002b38d:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   14002b392:	je     0x14002b42a
   14002b398:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   14002b39d:	je     0x14002b3b6
   14002b39f:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   14002b3a3:	lea    rcx,[rsp+0x30]
   14002b3a8:	add    rax,r12
   14002b3ab:	mov    rdx,r13
   14002b3ae:	call   rax
   14002b3b0:	test   eax,eax
   14002b3b2:	js     0x14002b431
   14002b3b4:	jle    0x14002b42a
   14002b3b6:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14002b3bd:	jne    0x14002b3e7
   14002b3bf:	cmp    QWORD PTR [rip+0x27e69],0x0        # 0x140053230
   14002b3c7:	je     0x14002b3e7
   14002b3c9:	lea    rcx,[rip+0x27e60]        # 0x140053230
   14002b3d0:	call   0x140047c50
   14002b3d5:	test   eax,eax
   14002b3d7:	je     0x14002b3e7
   14002b3d9:	mov    edx,0x1
   14002b3de:	mov    rcx,rbp
   14002b3e1:	call   QWORD PTR [rip+0x27e49]        # 0x140053230
   14002b3e7:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   14002b3eb:	mov    r8d,0x1
   14002b3f1:	add    rcx,r12
   14002b3f4:	mov    rdx,r13
   14002b3f7:	call   0x14002bce0
   14002b3fc:	mov    rax,QWORD PTR [r14+0x40]
   14002b400:	mov    r8,rbp
   14002b403:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   14002b407:	mov    rcx,r13
   14002b40a:	mov    r9d,DWORD PTR [rbp+0x0]
   14002b40e:	add    rdx,r12
   14002b411:	mov    QWORD PTR [rsp+0x28],rax
   14002b416:	mov    rax,QWORD PTR [r14+0x28]
   14002b41a:	mov    QWORD PTR [rsp+0x20],rax
   14002b41f:	call   QWORD PTR [rip+0x1fea3]        # 0x14004b2c8
   14002b425:	call   0x14002bd10
   14002b42a:	inc    esi
   14002b42c:	jmp    0x14002b366
   14002b431:	xor    eax,eax
   14002b433:	jmp    0x14002b4ed
   14002b438:	mov    rsi,QWORD PTR [r14+0x20]
   14002b43c:	mov    edi,DWORD PTR [r14+0x48]
   14002b440:	sub    rsi,r12
   14002b443:	jmp    0x14002b4de
   14002b448:	mov    ecx,edi
   14002b44a:	add    rcx,rcx
   14002b44d:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   14002b451:	cmp    r15,rax
   14002b454:	jb     0x14002b4dc
   14002b45a:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   14002b45e:	cmp    r15,rax
   14002b461:	jae    0x14002b4dc
   14002b463:	mov    r10d,DWORD PTR [rbp+0x4]
   14002b467:	and    r10d,0x20
   14002b46b:	je     0x14002b4b1
   14002b46d:	xor    r9d,r9d
   14002b470:	test   edx,edx
   14002b472:	je     0x14002b4ac
   14002b474:	mov    r8d,r9d
   14002b477:	add    r8,r8
   14002b47a:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14002b47f:	cmp    rsi,rax
   14002b482:	jb     0x14002b4a4
   14002b484:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   14002b489:	cmp    rsi,rax
   14002b48c:	jae    0x14002b4a4
   14002b48e:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14002b492:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   14002b497:	jne    0x14002b4a4
   14002b499:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   14002b49d:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   14002b4a2:	je     0x14002b4ac
   14002b4a4:	inc    r9d
   14002b4a7:	cmp    r9d,edx
   14002b4aa:	jb     0x14002b474
   14002b4ac:	cmp    r9d,edx
   14002b4af:	jne    0x14002b4e8
   14002b4b1:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14002b4b5:	test   eax,eax
   14002b4b7:	je     0x14002b4c5
   14002b4b9:	cmp    rsi,rax
   14002b4bc:	jne    0x14002b4dc
   14002b4be:	test   r10d,r10d
   14002b4c1:	jne    0x14002b4e8
   14002b4c3:	jmp    0x14002b4dc
   14002b4c5:	lea    eax,[rdi+0x1]
   14002b4c8:	mov    rdx,r13
   14002b4cb:	mov    DWORD PTR [r14+0x48],eax
   14002b4cf:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   14002b4d4:	mov    cl,0x1
   14002b4d6:	add    r8,r12
   14002b4d9:	call   r8
   14002b4dc:	inc    edi
   14002b4de:	mov    edx,DWORD PTR [rbx]
   14002b4e0:	cmp    edi,edx
   14002b4e2:	jb     0x14002b448
   14002b4e8:	mov    eax,0x1
   14002b4ed:	lea    r11,[rsp+0x40]
   14002b4f2:	mov    rbx,QWORD PTR [r11+0x30]
   14002b4f6:	mov    rbp,QWORD PTR [r11+0x38]
   14002b4fa:	mov    rsi,QWORD PTR [r11+0x40]
   14002b4fe:	mov    rsp,r11
   14002b501:	pop    r15
   14002b503:	pop    r14
   14002b505:	pop    r13
   14002b507:	pop    r12
   14002b509:	pop    rdi
   14002b50a:	ret    
   14002b50b:	int3   
   14002b50c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b511:	mov    QWORD PTR [rsp+0x10],rbp
   14002b516:	mov    QWORD PTR [rsp+0x18],rsi
   14002b51b:	push   rdi
   14002b51c:	push   r12
   14002b51e:	push   r13
   14002b520:	push   r14
   14002b522:	push   r15
   14002b524:	sub    rsp,0x20
   14002b528:	xor    r15d,r15d
   14002b52b:	mov    r14d,ecx
   14002b52e:	mov    r12,r9
   14002b531:	xor    eax,eax
   14002b533:	mov    rbp,r8
   14002b536:	lea    r9,[rip+0xfffffffffffd4ac3]        # 0x140000000
   14002b53d:	mov    r13,rdx
   14002b540:	lock cmpxchg QWORD PTR [r9+r14*8+0x76760],r15
   14002b54a:	mov    r8,QWORD PTR [rip+0x45aff]        # 0x140071050
   14002b551:	or     rdi,0xffffffffffffffff
   14002b555:	mov    ecx,r8d
   14002b558:	mov    rdx,r8
   14002b55b:	and    ecx,0x3f
   14002b55e:	xor    rdx,rax
   14002b561:	ror    rdx,cl
   14002b564:	cmp    rdx,rdi
   14002b567:	je     0x14002b6b5
   14002b56d:	test   rdx,rdx
   14002b570:	je     0x14002b57a
   14002b572:	mov    rax,rdx
   14002b575:	jmp    0x14002b6b7
   14002b57a:	cmp    rbp,r12
   14002b57d:	je     0x14002b641
   14002b583:	mov    esi,DWORD PTR [rbp+0x0]
   14002b586:	xor    eax,eax
   14002b588:	lock cmpxchg QWORD PTR [r9+rsi*8+0x76740],r15
   14002b592:	mov    rbx,rax
   14002b595:	je     0x14002b5a5
   14002b597:	cmp    rax,rdi
   14002b59a:	je     0x14002b62d
   14002b5a0:	jmp    0x14002b628
   14002b5a5:	mov    r15,QWORD PTR [r9+rsi*8+0x53338]
   14002b5ad:	xor    edx,edx
   14002b5af:	mov    rcx,r15
   14002b5b2:	mov    r8d,0x800
   14002b5b8:	call   QWORD PTR [rip+0x1fad2]        # 0x14004b090
   14002b5be:	mov    rbx,rax
   14002b5c1:	test   rax,rax
   14002b5c4:	je     0x14002b5cb
   14002b5c6:	xor    r15d,r15d
   14002b5c9:	jmp    0x14002b5ef
   14002b5cb:	call   QWORD PTR [rip+0x1fb0f]        # 0x14004b0e0
   14002b5d1:	cmp    eax,0x57
   14002b5d4:	jne    0x14002b5e9
   14002b5d6:	xor    r8d,r8d
   14002b5d9:	xor    edx,edx
   14002b5db:	mov    rcx,r15
   14002b5de:	call   QWORD PTR [rip+0x1faac]        # 0x14004b090
   14002b5e4:	mov    rbx,rax
   14002b5e7:	jmp    0x14002b5c6
   14002b5e9:	xor    r15d,r15d
   14002b5ec:	mov    ebx,r15d
   14002b5ef:	lea    r9,[rip+0xfffffffffffd4a0a]        # 0x140000000
   14002b5f6:	test   rbx,rbx
   14002b5f9:	jne    0x14002b608
   14002b5fb:	mov    rax,rdi
   14002b5fe:	xchg   QWORD PTR [r9+rsi*8+0x76740],rax
   14002b606:	jmp    0x14002b62d
   14002b608:	mov    rax,rbx
   14002b60b:	xchg   QWORD PTR [r9+rsi*8+0x76740],rax
   14002b613:	test   rax,rax
   14002b616:	je     0x14002b628
   14002b618:	mov    rcx,rbx
   14002b61b:	call   QWORD PTR [rip+0x1fa7f]        # 0x14004b0a0
   14002b621:	lea    r9,[rip+0xfffffffffffd49d8]        # 0x140000000
   14002b628:	test   rbx,rbx
   14002b62b:	jne    0x14002b68a
   14002b62d:	add    rbp,0x4
   14002b631:	cmp    rbp,r12
   14002b634:	jne    0x14002b583
   14002b63a:	mov    r8,QWORD PTR [rip+0x45a0f]        # 0x140071050
   14002b641:	mov    rbx,r15
   14002b644:	test   rbx,rbx
   14002b647:	je     0x14002b693
   14002b649:	mov    rdx,r13
   14002b64c:	mov    rcx,rbx
   14002b64f:	call   QWORD PTR [rip+0x1fa73]        # 0x14004b0c8
   14002b655:	mov    r8,QWORD PTR [rip+0x459f4]        # 0x140071050
   14002b65c:	test   rax,rax
   14002b65f:	je     0x14002b693
   14002b661:	mov    ecx,r8d
   14002b664:	mov    edx,0x40
   14002b669:	and    ecx,0x3f
   14002b66c:	sub    edx,ecx
   14002b66e:	mov    cl,dl
   14002b670:	mov    rdx,rax
   14002b673:	ror    rdx,cl
   14002b676:	lea    rcx,[rip+0xfffffffffffd4983]        # 0x140000000
   14002b67d:	xor    rdx,r8
   14002b680:	xchg   QWORD PTR [rcx+r14*8+0x76760],rdx
   14002b688:	jmp    0x14002b6b7
   14002b68a:	mov    r8,QWORD PTR [rip+0x459bf]        # 0x140071050
   14002b691:	jmp    0x14002b644
   14002b693:	mov    ecx,0x40
   14002b698:	mov    eax,r8d
   14002b69b:	and    eax,0x3f
   14002b69e:	sub    ecx,eax
   14002b6a0:	ror    rdi,cl
   14002b6a3:	lea    rcx,[rip+0xfffffffffffd4956]        # 0x140000000
   14002b6aa:	xor    rdi,r8
   14002b6ad:	xchg   QWORD PTR [rcx+r14*8+0x76760],rdi
   14002b6b5:	xor    eax,eax
   14002b6b7:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b6bc:	mov    rbp,QWORD PTR [rsp+0x58]
   14002b6c1:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b6c6:	add    rsp,0x20
   14002b6ca:	pop    r15
   14002b6cc:	pop    r14
   14002b6ce:	pop    r13
   14002b6d0:	pop    r12
   14002b6d2:	pop    rdi
   14002b6d3:	ret    
   14002b6d4:	mov    QWORD PTR [rsp+0x8],rbx
   14002b6d9:	push   rdi
   14002b6da:	sub    rsp,0x20
   14002b6de:	mov    rdi,rcx
   14002b6e1:	lea    r9,[rip+0x27d28]        # 0x140053410
   14002b6e8:	mov    ecx,0x4
   14002b6ed:	lea    r8,[rip+0x27d14]        # 0x140053408
   14002b6f4:	lea    rdx,[rip+0x243cd]        # 0x14004fac8
   14002b6fb:	call   0x14002b50c
   14002b700:	mov    rbx,rax
   14002b703:	test   rax,rax
   14002b706:	je     0x14002b717
   14002b708:	mov    rcx,rax
   14002b70b:	call   0x140026cd0
   14002b710:	mov    rcx,rdi
   14002b713:	call   rbx
   14002b715:	jmp    0x14002b71d
   14002b717:	call   QWORD PTR [rip+0x1fb5b]        # 0x14004b278
   14002b71d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b722:	add    rsp,0x20
   14002b726:	pop    rdi
   14002b727:	ret    
   14002b728:	mov    QWORD PTR [rsp+0x8],rbx
   14002b72d:	push   rdi
   14002b72e:	sub    rsp,0x20
   14002b732:	mov    ebx,ecx
   14002b734:	lea    r9,[rip+0x27cdd]        # 0x140053418
   14002b73b:	mov    ecx,0x5
   14002b740:	lea    r8,[rip+0x27cc9]        # 0x140053410
   14002b747:	lea    rdx,[rip+0x2438a]        # 0x14004fad8
   14002b74e:	call   0x14002b50c
   14002b753:	mov    rdi,rax
   14002b756:	test   rax,rax
   14002b759:	je     0x14002b769
   14002b75b:	mov    rcx,rax
   14002b75e:	call   0x140026cd0
   14002b763:	mov    ecx,ebx
   14002b765:	call   rdi
   14002b767:	jmp    0x14002b771
   14002b769:	mov    ecx,ebx
   14002b76b:	call   QWORD PTR [rip+0x1fb1f]        # 0x14004b290
   14002b771:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b776:	add    rsp,0x20
   14002b77a:	pop    rdi
   14002b77b:	ret    
   14002b77c:	mov    QWORD PTR [rsp+0x8],rbx
   14002b781:	push   rdi
   14002b782:	sub    rsp,0x20
   14002b786:	mov    ebx,ecx
   14002b788:	lea    r9,[rip+0x27c91]        # 0x140053420
   14002b78f:	mov    ecx,0x6
   14002b794:	lea    r8,[rip+0x27c7d]        # 0x140053418
   14002b79b:	lea    rdx,[rip+0x2433e]        # 0x14004fae0
   14002b7a2:	call   0x14002b50c
   14002b7a7:	mov    rdi,rax
   14002b7aa:	test   rax,rax
   14002b7ad:	je     0x14002b7bd
   14002b7af:	mov    rcx,rax
   14002b7b2:	call   0x140026cd0
   14002b7b7:	mov    ecx,ebx
   14002b7b9:	call   rdi
   14002b7bb:	jmp    0x14002b7c5
   14002b7bd:	mov    ecx,ebx
   14002b7bf:	call   QWORD PTR [rip+0x1fabb]        # 0x14004b280
   14002b7c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b7ca:	add    rsp,0x20
   14002b7ce:	pop    rdi
   14002b7cf:	ret    
   14002b7d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b7d5:	mov    QWORD PTR [rsp+0x10],rsi
   14002b7da:	push   rdi
   14002b7db:	sub    rsp,0x20
   14002b7df:	mov    rbx,rdx
   14002b7e2:	lea    r9,[rip+0x27c3f]        # 0x140053428
   14002b7e9:	mov    edi,ecx
   14002b7eb:	lea    rdx,[rip+0x242fe]        # 0x14004faf0
   14002b7f2:	mov    ecx,0x7
   14002b7f7:	lea    r8,[rip+0x27c22]        # 0x140053420
   14002b7fe:	call   0x14002b50c
   14002b803:	mov    rsi,rax
   14002b806:	test   rax,rax
   14002b809:	je     0x14002b81c
   14002b80b:	mov    rcx,rax
   14002b80e:	call   0x140026cd0
   14002b813:	mov    rdx,rbx
   14002b816:	mov    ecx,edi
   14002b818:	call   rsi
   14002b81a:	jmp    0x14002b827
   14002b81c:	mov    rdx,rbx
   14002b81f:	mov    ecx,edi
   14002b821:	call   QWORD PTR [rip+0x1fa61]        # 0x14004b288
   14002b827:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b82c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b831:	add    rsp,0x20
   14002b835:	pop    rdi
   14002b836:	ret    
   14002b837:	int3   
   14002b838:	mov    QWORD PTR [rsp+0x8],rbx
   14002b83d:	mov    QWORD PTR [rsp+0x10],rbp
   14002b842:	mov    QWORD PTR [rsp+0x18],rsi
   14002b847:	push   rdi
   14002b848:	sub    rsp,0x20
   14002b84c:	mov    ebp,r8d
   14002b84f:	lea    r9,[rip+0x27bda]        # 0x140053430
   14002b856:	mov    ebx,edx
   14002b858:	lea    r8,[rip+0x27bc9]        # 0x140053428
   14002b85f:	mov    rdi,rcx
   14002b862:	lea    rdx,[rip+0x24297]        # 0x14004fb00
   14002b869:	mov    ecx,0x8
   14002b86e:	call   0x14002b50c
   14002b873:	mov    rsi,rax
   14002b876:	test   rax,rax
   14002b879:	je     0x14002b88f
   14002b87b:	mov    rcx,rax
   14002b87e:	call   0x140026cd0
   14002b883:	mov    r8d,ebp
   14002b886:	mov    edx,ebx
   14002b888:	mov    rcx,rdi
   14002b88b:	call   rsi
   14002b88d:	jmp    0x14002b89a
   14002b88f:	mov    edx,ebx
   14002b891:	mov    rcx,rdi
   14002b894:	call   QWORD PTR [rip+0x1f9d6]        # 0x14004b270
   14002b89a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b89f:	mov    rbp,QWORD PTR [rsp+0x38]
   14002b8a4:	mov    rsi,QWORD PTR [rsp+0x40]
   14002b8a9:	add    rsp,0x20
   14002b8ad:	pop    rdi
   14002b8ae:	ret    
   14002b8af:	int3   
   14002b8b0:	mov    rdx,QWORD PTR [rip+0x45799]        # 0x140071050
   14002b8b7:	xor    r8d,r8d
   14002b8ba:	mov    eax,edx
   14002b8bc:	mov    ecx,0x40
   14002b8c1:	and    eax,0x3f
   14002b8c4:	mov    r9d,r8d
   14002b8c7:	sub    ecx,eax
   14002b8c9:	lea    rax,[rip+0x4ae90]        # 0x140076760
   14002b8d0:	ror    r9,cl
   14002b8d3:	lea    rcx,[rip+0x4aece]        # 0x1400767a8
   14002b8da:	xor    r9,rdx
   14002b8dd:	cmp    rcx,rax
   14002b8e0:	sbb    rcx,rcx
   14002b8e3:	not    rcx
   14002b8e6:	and    ecx,0x9
   14002b8e9:	inc    r8
   14002b8ec:	mov    QWORD PTR [rax],r9
   14002b8ef:	lea    rax,[rax+0x8]
   14002b8f3:	cmp    r8,rcx
   14002b8f6:	jne    0x14002b8e9
   14002b8f8:	ret    
   14002b8f9:	int3   
   14002b8fa:	int3   
   14002b8fb:	int3   
   14002b8fc:	test   cl,cl
   14002b8fe:	jne    0x14002b939
   14002b900:	push   rbx
   14002b901:	sub    rsp,0x20
   14002b905:	lea    rbx,[rip+0x4ae34]        # 0x140076740
   14002b90c:	mov    rcx,QWORD PTR [rbx]
   14002b90f:	test   rcx,rcx
   14002b912:	je     0x14002b924
   14002b914:	cmp    rcx,0xffffffffffffffff
   14002b918:	je     0x14002b920
   14002b91a:	call   QWORD PTR [rip+0x1f780]        # 0x14004b0a0
   14002b920:	and    QWORD PTR [rbx],0x0
   14002b924:	add    rbx,0x8
   14002b928:	lea    rax,[rip+0x4ae31]        # 0x140076760
   14002b92f:	cmp    rbx,rax
   14002b932:	jne    0x14002b90c
   14002b934:	add    rsp,0x20
   14002b938:	pop    rbx
   14002b939:	ret    
   14002b93a:	int3   
   14002b93b:	int3   
   14002b93c:	sub    rsp,0x28
   14002b940:	call   0x14002b9b8
   14002b945:	call   0x14002b8b0
   14002b94a:	call   0x14002bd14
   14002b94f:	test   al,al
   14002b951:	jne    0x14002b957
   14002b953:	xor    al,al
   14002b955:	jmp    0x14002b969
   14002b957:	call   0x14002bad0
   14002b95c:	test   al,al
   14002b95e:	jne    0x14002b967
   14002b960:	call   0x14002bd5c
   14002b965:	jmp    0x14002b953
   14002b967:	mov    al,0x1
   14002b969:	add    rsp,0x28
   14002b96d:	ret    
   14002b96e:	int3   
   14002b96f:	int3   
   14002b970:	sub    rsp,0x28
   14002b974:	test   cl,cl
   14002b976:	jne    0x14002b989
   14002b978:	call   0x14002bb10
   14002b97d:	call   0x14002bd5c
   14002b982:	xor    ecx,ecx
   14002b984:	call   0x14002b8fc
   14002b989:	mov    al,0x1
   14002b98b:	add    rsp,0x28
   14002b98f:	ret    
   14002b990:	cmp    rcx,rdx
   14002b993:	je     0x14002b9ae
   14002b995:	add    rdx,0x9
   14002b999:	lea    rax,[rcx+0x9]
   14002b99d:	sub    rdx,rax
   14002b9a0:	mov    cl,BYTE PTR [rax]
   14002b9a2:	cmp    cl,BYTE PTR [rax+rdx*1]
   14002b9a5:	jne    0x14002b9b1
   14002b9a7:	inc    rax
   14002b9aa:	test   cl,cl
   14002b9ac:	jne    0x14002b9a0
   14002b9ae:	xor    eax,eax
   14002b9b0:	ret    
   14002b9b1:	sbb    eax,eax
   14002b9b3:	or     eax,0x1
   14002b9b6:	ret    
   14002b9b7:	int3   
   14002b9b8:	mov    rdx,QWORD PTR [rip+0x45691]        # 0x140071050
   14002b9bf:	mov    ecx,0x40
   14002b9c4:	mov    eax,edx
   14002b9c6:	and    eax,0x3f
   14002b9c9:	sub    ecx,eax
   14002b9cb:	xor    eax,eax
   14002b9cd:	ror    rax,cl
   14002b9d0:	xor    rax,rdx
   14002b9d3:	mov    QWORD PTR [rip+0x4adce],rax        # 0x1400767a8
   14002b9da:	ret    
   14002b9db:	int3   
   14002b9dc:	sub    rsp,0x28
   14002b9e0:	test   rcx,rcx
   14002b9e3:	je     0x14002b9f6
   14002b9e5:	lea    rax,[rip+0x4adc4]        # 0x1400767b0
   14002b9ec:	cmp    rcx,rax
   14002b9ef:	je     0x14002b9f6
   14002b9f1:	call   0x140038c70
   14002b9f6:	add    rsp,0x28
   14002b9fa:	ret    
   14002b9fb:	int3   
   14002b9fc:	sub    rsp,0x28
   14002ba00:	call   0x14002ba18
   14002ba05:	test   rax,rax
   14002ba08:	je     0x14002ba0f
   14002ba0a:	add    rsp,0x28
   14002ba0e:	ret    
   14002ba0f:	call   0x1400365a8
   14002ba14:	int3   
   14002ba15:	int3   
   14002ba16:	int3   
   14002ba17:	int3   
   14002ba18:	mov    QWORD PTR [rsp+0x8],rbx
   14002ba1d:	mov    QWORD PTR [rsp+0x10],rsi
   14002ba22:	push   rdi
   14002ba23:	sub    rsp,0x20
   14002ba27:	cmp    DWORD PTR [rip+0x456d2],0xffffffff        # 0x140071100
   14002ba2e:	jne    0x14002ba37
   14002ba30:	xor    eax,eax
   14002ba32:	jmp    0x14002bac0
   14002ba37:	call   QWORD PTR [rip+0x1f6a3]        # 0x14004b0e0
   14002ba3d:	mov    ecx,DWORD PTR [rip+0x456bd]        # 0x140071100
   14002ba43:	mov    edi,eax
   14002ba45:	call   0x14002b77c
   14002ba4a:	or     rdx,0xffffffffffffffff
   14002ba4e:	xor    esi,esi
   14002ba50:	cmp    rax,rdx
   14002ba53:	je     0x14002bab5
   14002ba55:	test   rax,rax
   14002ba58:	je     0x14002ba5f
   14002ba5a:	mov    rsi,rax
   14002ba5d:	jmp    0x14002bab5
   14002ba5f:	mov    ecx,DWORD PTR [rip+0x4569b]        # 0x140071100
   14002ba65:	call   0x14002b7d0
   14002ba6a:	test   eax,eax
   14002ba6c:	je     0x14002bab5
   14002ba6e:	mov    edx,0x78
   14002ba73:	lea    ecx,[rdx-0x77]
   14002ba76:	call   0x140035d88
   14002ba7b:	mov    ecx,DWORD PTR [rip+0x4567f]        # 0x140071100
   14002ba81:	mov    rbx,rax
   14002ba84:	test   rax,rax
   14002ba87:	je     0x14002ba9b
   14002ba89:	mov    rdx,rax
   14002ba8c:	call   0x14002b7d0
   14002ba91:	test   eax,eax
   14002ba93:	jne    0x14002baa4
   14002ba95:	mov    ecx,DWORD PTR [rip+0x45665]        # 0x140071100
   14002ba9b:	xor    edx,edx
   14002ba9d:	call   0x14002b7d0
   14002baa2:	jmp    0x14002baad
   14002baa4:	mov    rcx,rbx
   14002baa7:	mov    rbx,rsi
   14002baaa:	mov    rsi,rcx
   14002baad:	mov    rcx,rbx
   14002bab0:	call   0x140038c70
   14002bab5:	mov    ecx,edi
   14002bab7:	call   QWORD PTR [rip+0x1f65b]        # 0x14004b118
   14002babd:	mov    rax,rsi
   14002bac0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bac5:	mov    rsi,QWORD PTR [rsp+0x38]
   14002baca:	add    rsp,0x20
   14002bace:	pop    rdi
   14002bacf:	ret    
   14002bad0:	sub    rsp,0x28
   14002bad4:	lea    rcx,[rip+0xffffffffffffff01]        # 0x14002b9dc
   14002badb:	call   0x14002b6d4
   14002bae0:	mov    DWORD PTR [rip+0x4561a],eax        # 0x140071100
   14002bae6:	cmp    eax,0xffffffff
   14002bae9:	jne    0x14002baef
   14002baeb:	xor    al,al
   14002baed:	jmp    0x14002bb0a
   14002baef:	lea    rdx,[rip+0x4acba]        # 0x1400767b0
   14002baf6:	mov    ecx,eax
   14002baf8:	call   0x14002b7d0
   14002bafd:	test   eax,eax
   14002baff:	jne    0x14002bb08
   14002bb01:	call   0x14002bb10
   14002bb06:	jmp    0x14002baeb
   14002bb08:	mov    al,0x1
   14002bb0a:	add    rsp,0x28
   14002bb0e:	ret    
   14002bb0f:	int3   
   14002bb10:	sub    rsp,0x28
   14002bb14:	mov    ecx,DWORD PTR [rip+0x455e6]        # 0x140071100
   14002bb1a:	cmp    ecx,0xffffffff
   14002bb1d:	je     0x14002bb2b
   14002bb1f:	call   0x14002b728
   14002bb24:	or     DWORD PTR [rip+0x455d5],0xffffffff        # 0x140071100
   14002bb2b:	mov    al,0x1
   14002bb2d:	add    rsp,0x28
   14002bb31:	ret    
   14002bb32:	int3   
   14002bb33:	int3   
   14002bb34:	sub    rsp,0x28
   14002bb38:	movsxd r9,DWORD PTR [r8+0x1c]
   14002bb3c:	mov    r10,r8
   14002bb3f:	mov    rax,QWORD PTR [rcx]
   14002bb42:	mov    eax,DWORD PTR [r9+rax*1]
   14002bb46:	cmp    eax,0xfffffffe
   14002bb49:	jne    0x14002bb56
   14002bb4b:	mov    r8,QWORD PTR [rdx]
   14002bb4e:	mov    rcx,r10
   14002bb51:	call   0x14002bbd8
   14002bb56:	add    rsp,0x28
   14002bb5a:	ret    
   14002bb5b:	int3   
   14002bb5c:	rex push rbx
   14002bb5e:	sub    rsp,0x20
   14002bb62:	lea    r9,[rsp+0x40]
   14002bb67:	mov    rbx,r8
   14002bb6a:	call   0x14002acd4
   14002bb6f:	mov    rcx,QWORD PTR [rax]
   14002bb72:	movsxd rax,DWORD PTR [rbx+0x1c]
   14002bb76:	mov    QWORD PTR [rsp+0x40],rcx
   14002bb7b:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14002bb7f:	add    rsp,0x20
   14002bb83:	pop    rbx
   14002bb84:	ret    
   14002bb85:	int3   
   14002bb86:	int3   
   14002bb87:	int3   
   14002bb88:	movsxd rdx,DWORD PTR [r8+0x1c]
   14002bb8c:	mov    rax,QWORD PTR [rcx]
   14002bb8f:	mov    DWORD PTR [rdx+rax*1],r9d
   14002bb93:	ret    
   14002bb94:	mov    QWORD PTR [rsp+0x8],rbx
   14002bb99:	push   rdi
   14002bb9a:	sub    rsp,0x20
   14002bb9e:	mov    edi,r9d
   14002bba1:	mov    rbx,r8
   14002bba4:	lea    r9,[rsp+0x40]
   14002bba9:	call   0x14002acd4
   14002bbae:	mov    rcx,QWORD PTR [rax]
   14002bbb1:	movsxd rax,DWORD PTR [rbx+0x1c]
   14002bbb5:	mov    QWORD PTR [rsp+0x40],rcx
   14002bbba:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14002bbbe:	jle    0x14002bbc4
   14002bbc0:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14002bbc4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bbc9:	add    rsp,0x20
   14002bbcd:	pop    rdi
   14002bbce:	ret    
   14002bbcf:	int3   
   14002bbd0:	mov    r8,QWORD PTR [rdx]
   14002bbd3:	jmp    0x14002bbd8
   14002bbd8:	rex push rbx
   14002bbda:	sub    rsp,0x20
   14002bbde:	mov    rbx,r8
   14002bbe1:	test   rcx,rcx
   14002bbe4:	je     0x14002bc3e
   14002bbe6:	movsxd r10,DWORD PTR [rcx+0x18]
   14002bbea:	mov    r9,QWORD PTR [rdx+0x8]
   14002bbee:	mov    r11d,DWORD PTR [rcx+0x14]
   14002bbf2:	lea    rax,[r9+r10*1]
   14002bbf6:	test   rax,rax
   14002bbf9:	je     0x14002bc38
   14002bbfb:	xor    r8d,r8d
   14002bbfe:	test   r11d,r11d
   14002bc01:	je     0x14002bc33
   14002bc03:	lea    rcx,[r10+r8*8]
   14002bc07:	movsxd rdx,DWORD PTR [rcx+r9*1]
   14002bc0b:	add    rdx,r9
   14002bc0e:	cmp    rbx,rdx
   14002bc11:	jl     0x14002bc1b
   14002bc13:	inc    r8d
   14002bc16:	cmp    r8d,r11d
   14002bc19:	jb     0x14002bc03
   14002bc1b:	test   r8d,r8d
   14002bc1e:	je     0x14002bc33
   14002bc20:	lea    ecx,[r8-0x1]
   14002bc24:	lea    rax,[r9+rcx*8]
   14002bc28:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   14002bc2d:	add    rsp,0x20
   14002bc31:	pop    rbx
   14002bc32:	ret    
   14002bc33:	or     eax,0xffffffff
   14002bc36:	jmp    0x14002bc2d
   14002bc38:	call   0x1400359d4
   14002bc3d:	int3   
   14002bc3e:	call   0x1400359d4
   14002bc43:	int3   
   14002bc44:	int3   
   14002bc45:	int3   
   14002bc46:	int3   
   14002bc47:	int3   
   14002bc48:	int3   
   14002bc49:	int3   
   14002bc4a:	int3   
   14002bc4b:	int3   
   14002bc4c:	int3   
   14002bc4d:	int3   
   14002bc4e:	int3   
   14002bc4f:	int3   
   14002bc50:	int3   
   14002bc51:	int3   
   14002bc52:	int3   
   14002bc53:	int3   
   14002bc54:	int3   
   14002bc55:	int3   
   14002bc56:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002bc60:	sub    rsp,0x28
   14002bc64:	mov    QWORD PTR [rsp+0x30],rcx
   14002bc69:	mov    QWORD PTR [rsp+0x38],rdx
   14002bc6e:	mov    DWORD PTR [rsp+0x40],r8d
   14002bc73:	mov    rdx,QWORD PTR [rdx]
   14002bc76:	mov    rax,rcx
   14002bc79:	call   0x14002bce0
   14002bc7e:	call   rax
   14002bc80:	call   0x14002bd10
   14002bc85:	mov    rcx,rax
   14002bc88:	mov    rdx,QWORD PTR [rsp+0x38]
   14002bc8d:	mov    rdx,QWORD PTR [rdx]
   14002bc90:	mov    r8d,0x2
   14002bc96:	call   0x14002bce0
   14002bc9b:	add    rsp,0x28
   14002bc9f:	ret    
   14002bca0:	int3   
   14002bca1:	int3   
   14002bca2:	int3   
   14002bca3:	int3   
   14002bca4:	int3   
   14002bca5:	int3   
   14002bca6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002bcb0:	sub    rsp,0x4d8
   14002bcb7:	xor    r8,r8
   14002bcba:	xor    r9,r9
   14002bcbd:	mov    QWORD PTR [rsp+0x20],rsp
   14002bcc2:	mov    QWORD PTR [rsp+0x28],r8
   14002bcc7:	call   0x140047bec
   14002bccc:	add    rsp,0x4d8
   14002bcd3:	ret    
   14002bcd4:	int3   
   14002bcd5:	int3   
   14002bcd6:	int3   
   14002bcd7:	int3   
   14002bcd8:	int3   
   14002bcd9:	int3   
   14002bcda:	nop    WORD PTR [rax+rax*1+0x0]
   14002bce0:	mov    QWORD PTR [rsp+0x8],rcx
   14002bce5:	mov    QWORD PTR [rsp+0x18],rdx
   14002bcea:	mov    DWORD PTR [rsp+0x10],r8d
   14002bcef:	mov    r9,0x19930520
   14002bcf6:	jmp    0x14002bd00
   14002bcf8:	int3   
   14002bcf9:	int3   
   14002bcfa:	int3   
   14002bcfb:	int3   
   14002bcfc:	int3   
   14002bcfd:	int3   
   14002bcfe:	xchg   ax,ax
   14002bd00:	ret    
   14002bd01:	int3   
   14002bd02:	int3   
   14002bd03:	int3   
   14002bd04:	int3   
   14002bd05:	int3   
   14002bd06:	int3   
   14002bd07:	nop    WORD PTR [rax+rax*1+0x0]
   14002bd10:	ret    
   14002bd11:	int3   
   14002bd12:	int3   
   14002bd13:	int3   
   14002bd14:	rex push rbx
   14002bd16:	sub    rsp,0x20
   14002bd1a:	xor    ebx,ebx
   14002bd1c:	lea    rdx,[rip+0x4ab05]        # 0x140076828
   14002bd23:	xor    r8d,r8d
   14002bd26:	lea    rcx,[rbx+rbx*4]
   14002bd2a:	lea    rcx,[rdx+rcx*8]
   14002bd2e:	mov    edx,0xfa0
   14002bd33:	call   0x14002b838
   14002bd38:	test   eax,eax
   14002bd3a:	je     0x14002bd4d
   14002bd3c:	inc    DWORD PTR [rip+0x4ab0e]        # 0x140076850
   14002bd42:	inc    ebx
   14002bd44:	cmp    ebx,0x1
   14002bd47:	jb     0x14002bd1c
   14002bd49:	mov    al,0x1
   14002bd4b:	jmp    0x14002bd54
   14002bd4d:	call   0x14002bd5c
   14002bd52:	xor    al,al
   14002bd54:	add    rsp,0x20
   14002bd58:	pop    rbx
   14002bd59:	ret    
   14002bd5a:	int3   
   14002bd5b:	int3   
   14002bd5c:	rex push rbx
   14002bd5e:	sub    rsp,0x20
   14002bd62:	mov    ebx,DWORD PTR [rip+0x4aae8]        # 0x140076850
   14002bd68:	jmp    0x14002bd87
   14002bd6a:	lea    rax,[rip+0x4aab7]        # 0x140076828
   14002bd71:	dec    ebx
   14002bd73:	lea    rcx,[rbx+rbx*4]
   14002bd77:	lea    rcx,[rax+rcx*8]
   14002bd7b:	call   QWORD PTR [rip+0x1f2d7]        # 0x14004b058
   14002bd81:	dec    DWORD PTR [rip+0x4aac9]        # 0x140076850
   14002bd87:	test   ebx,ebx
   14002bd89:	jne    0x14002bd6a
   14002bd8b:	mov    al,0x1
   14002bd8d:	add    rsp,0x20
   14002bd91:	pop    rbx
   14002bd92:	ret    
   14002bd93:	int3   
   14002bd94:	mov    QWORD PTR [rsp+0x8],rbx
   14002bd99:	push   rdi
   14002bd9a:	sub    rsp,0x20
   14002bd9e:	mov    BYTE PTR [rcx+0x18],0x0
   14002bda2:	mov    rdi,rcx
   14002bda5:	test   rdx,rdx
   14002bda8:	je     0x14002bdaf
   14002bdaa:	movups xmm0,XMMWORD PTR [rdx]
   14002bdad:	jmp    0x14002bdc0
   14002bdaf:	mov    eax,DWORD PTR [rip+0x4acc7]        # 0x140076a7c
   14002bdb5:	test   eax,eax
   14002bdb7:	jne    0x14002bdc7
   14002bdb9:	movups xmm0,XMMWORD PTR [rip+0x45698]        # 0x140071458
   14002bdc0:	movdqu XMMWORD PTR [rcx+0x8],xmm0
   14002bdc5:	jmp    0x14002be16
   14002bdc7:	call   0x140039130
   14002bdcc:	mov    QWORD PTR [rdi],rax
   14002bdcf:	lea    rdx,[rdi+0x8]
   14002bdd3:	mov    rcx,QWORD PTR [rax+0x90]
   14002bdda:	mov    QWORD PTR [rdx],rcx
   14002bddd:	mov    rcx,QWORD PTR [rax+0x88]
   14002bde4:	mov    QWORD PTR [rdi+0x10],rcx
   14002bde8:	mov    rcx,rax
   14002bdeb:	call   0x1400392c4
   14002bdf0:	mov    rcx,QWORD PTR [rdi]
   14002bdf3:	lea    rdx,[rdi+0x10]
   14002bdf7:	call   0x1400392f8
   14002bdfc:	mov    rcx,QWORD PTR [rdi]
   14002bdff:	mov    eax,DWORD PTR [rcx+0x3a8]
   14002be05:	test   al,0x2
   14002be07:	jne    0x14002be16
   14002be09:	or     eax,0x2
   14002be0c:	mov    DWORD PTR [rcx+0x3a8],eax
   14002be12:	mov    BYTE PTR [rdi+0x18],0x1
   14002be16:	mov    rax,rdi
   14002be19:	mov    rbx,QWORD PTR [rsp+0x30]
   14002be1e:	add    rsp,0x20
   14002be22:	pop    rdi
   14002be23:	ret    
   14002be24:	sub    rsp,0x28
   14002be28:	mov    eax,DWORD PTR [rip+0x4ac4e]        # 0x140076a7c
   14002be2e:	mov    r9,rdx
   14002be31:	mov    r10,rcx
   14002be34:	xor    r8d,r8d
   14002be37:	test   eax,eax
   14002be39:	jne    0x14002bea0
   14002be3b:	test   rcx,rcx
   14002be3e:	jne    0x14002be5a
   14002be40:	call   0x140032c50
   14002be45:	mov    DWORD PTR [rax],0x16
   14002be4b:	call   0x1400307d0
   14002be50:	mov    eax,0x7fffffff
   14002be55:	add    rsp,0x28
   14002be59:	ret    
   14002be5a:	test   rdx,rdx
   14002be5d:	je     0x14002be40
   14002be5f:	sub    r10,rdx
   14002be62:	movzx  edx,WORD PTR [r10+r9*1]
   14002be67:	lea    eax,[rdx-0x41]
   14002be6a:	cmp    ax,0x19
   14002be6e:	ja     0x14002be74
   14002be70:	add    dx,0x20
   14002be74:	movzx  ecx,WORD PTR [r9]
   14002be78:	lea    eax,[rcx-0x41]
   14002be7b:	cmp    ax,0x19
   14002be7f:	ja     0x14002be85
   14002be81:	add    cx,0x20
   14002be85:	add    r9,0x2
   14002be89:	test   dx,dx
   14002be8c:	je     0x14002be93
   14002be8e:	cmp    dx,cx
   14002be91:	je     0x14002be62
   14002be93:	movzx  ecx,cx
   14002be96:	movzx  eax,dx
   14002be99:	sub    eax,ecx
   14002be9b:	add    rsp,0x28
   14002be9f:	ret    
   14002bea0:	add    rsp,0x28
   14002bea4:	jmp    0x14002beac
   14002bea9:	int3   
   14002beaa:	int3   
   14002beab:	int3   
   14002beac:	mov    rax,rsp
   14002beaf:	mov    QWORD PTR [rax+0x8],rbx
   14002beb3:	mov    QWORD PTR [rax+0x10],rbp
   14002beb7:	mov    QWORD PTR [rax+0x18],rsi
   14002bebb:	push   rdi
   14002bebc:	sub    rsp,0x40
   14002bec0:	mov    rdi,rdx
   14002bec3:	mov    rsi,rcx
   14002bec6:	mov    rdx,r8
   14002bec9:	lea    rcx,[rax-0x28]
   14002becd:	call   0x14002bd94
   14002bed2:	xor    ebp,ebp
   14002bed4:	test   rsi,rsi
   14002bed7:	je     0x14002bede
   14002bed9:	test   rdi,rdi
   14002bedc:	jne    0x14002bef5
   14002bede:	call   0x140032c50
   14002bee3:	mov    DWORD PTR [rax],0x16
   14002bee9:	call   0x1400307d0
   14002beee:	mov    eax,0x7fffffff
   14002bef3:	jmp    0x14002bf71
   14002bef5:	mov    rax,QWORD PTR [rsp+0x28]
   14002befa:	cmp    QWORD PTR [rax+0x138],rbp
   14002bf01:	jne    0x14002bf37
   14002bf03:	sub    rsi,rdi
   14002bf06:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002bf0a:	lea    eax,[rbx-0x41]
   14002bf0d:	cmp    ax,0x19
   14002bf11:	ja     0x14002bf17
   14002bf13:	add    bx,0x20
   14002bf17:	movzx  ecx,WORD PTR [rdi]
   14002bf1a:	lea    eax,[rcx-0x41]
   14002bf1d:	cmp    ax,0x19
   14002bf21:	ja     0x14002bf27
   14002bf23:	add    cx,0x20
   14002bf27:	add    rdi,0x2
   14002bf2b:	test   bx,bx
   14002bf2e:	je     0x14002bf69
   14002bf30:	cmp    bx,cx
   14002bf33:	je     0x14002bf06
   14002bf35:	jmp    0x14002bf69
   14002bf37:	movzx  ecx,WORD PTR [rsi]
   14002bf3a:	lea    rdx,[rsp+0x28]
   14002bf3f:	call   0x140030e80
   14002bf44:	movzx  ecx,WORD PTR [rdi]
   14002bf47:	lea    rdx,[rsp+0x28]
   14002bf4c:	movzx  ebx,ax
   14002bf4f:	lea    rsi,[rsi+0x2]
   14002bf53:	call   0x140030e80
   14002bf58:	lea    rdi,[rdi+0x2]
   14002bf5c:	movzx  ecx,ax
   14002bf5f:	test   bx,bx
   14002bf62:	je     0x14002bf69
   14002bf64:	cmp    bx,ax
   14002bf67:	je     0x14002bf37
   14002bf69:	movzx  ecx,cx
   14002bf6c:	movzx  eax,bx
   14002bf6f:	sub    eax,ecx
   14002bf71:	cmp    BYTE PTR [rsp+0x38],bpl
   14002bf76:	je     0x14002bf84
   14002bf78:	mov    rcx,QWORD PTR [rsp+0x20]
   14002bf7d:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002bf84:	mov    rbx,QWORD PTR [rsp+0x50]
   14002bf89:	mov    rbp,QWORD PTR [rsp+0x58]
   14002bf8e:	mov    rsi,QWORD PTR [rsp+0x60]
   14002bf93:	add    rsp,0x40
   14002bf97:	pop    rdi
   14002bf98:	ret    
   14002bf99:	int3   
   14002bf9a:	int3   
   14002bf9b:	int3   
   14002bf9c:	rex push rbp
   14002bf9e:	push   r14
   14002bfa0:	push   r15
   14002bfa2:	sub    rsp,0x40
   14002bfa6:	lea    rbp,[rsp+0x30]
   14002bfab:	mov    QWORD PTR [rbp+0x30],rbx
   14002bfaf:	mov    QWORD PTR [rbp+0x38],rsi
   14002bfb3:	mov    QWORD PTR [rbp+0x40],rdi
   14002bfb7:	mov    QWORD PTR [rbp+0x48],r12
   14002bfbb:	mov    rax,QWORD PTR [rip+0x4508e]        # 0x140071050
   14002bfc2:	xor    rax,rbp
   14002bfc5:	mov    QWORD PTR [rbp+0x0],rax
   14002bfc9:	xor    r12d,r12d
   14002bfcc:	mov    r15,r8
   14002bfcf:	mov    rsi,rdx
   14002bfd2:	mov    rbx,rcx
   14002bfd5:	test   rcx,rcx
   14002bfd8:	jne    0x14002bff0
   14002bfda:	call   0x140032c50
   14002bfdf:	mov    ebx,0x16
   14002bfe4:	mov    DWORD PTR [rax],ebx
   14002bfe6:	call   0x1400307d0
   14002bfeb:	jmp    0x14002c188
   14002bff0:	call   0x140032e04
   14002bff5:	cmp    rax,rsi
   14002bff8:	jb     0x14002c000
   14002bffa:	mov    WORD PTR [rbx],r12w
   14002bffe:	jmp    0x14002bfda
   14002c000:	mov    rax,QWORD PTR [r15]
   14002c003:	mov    rcx,QWORD PTR [rax+0x138]
   14002c00a:	test   rcx,rcx
   14002c00d:	je     0x14002c060
   14002c00f:	mov    DWORD PTR [rsp+0x28],r12d
   14002c014:	or     r9d,0xffffffff
   14002c018:	mov    r8,rbx
   14002c01b:	mov    QWORD PTR [rsp+0x20],r12
   14002c020:	mov    edx,0x200
   14002c025:	call   0x14003932c
   14002c02a:	movsxd r14,eax
   14002c02d:	test   eax,eax
   14002c02f:	jne    0x14002c06d
   14002c031:	call   0x140032c50
   14002c036:	mov    ebx,0x2a
   14002c03b:	mov    DWORD PTR [rax],ebx
   14002c03d:	call   0x140032c50
   14002c042:	mov    eax,DWORD PTR [rax]
   14002c044:	jmp    0x14002c18a
   14002c049:	movzx  ecx,WORD PTR [rbx]
   14002c04c:	lea    eax,[rcx-0x61]
   14002c04f:	cmp    ax,0x19
   14002c053:	ja     0x14002c05c
   14002c055:	sub    cx,0x20
   14002c059:	mov    WORD PTR [rbx],cx
   14002c05c:	add    rbx,0x2
   14002c060:	cmp    WORD PTR [rbx],r12w
   14002c064:	jne    0x14002c049
   14002c066:	xor    eax,eax
   14002c068:	jmp    0x14002c18a
   14002c06d:	mov    rdx,r14
   14002c070:	cmp    rsi,r14
   14002c073:	jae    0x14002c088
   14002c075:	mov    WORD PTR [rbx],r12w
   14002c079:	call   0x140032c50
   14002c07e:	mov    ebx,0x22
   14002c083:	jmp    0x14002bfe4
   14002c088:	add    rdx,rdx
   14002c08b:	lea    rcx,[rdx+0x10]
   14002c08f:	cmp    rdx,rcx
   14002c092:	sbb    rax,rax
   14002c095:	test   rcx,rax
   14002c098:	je     0x14002c10f
   14002c09a:	lea    rcx,[rdx+0x10]
   14002c09e:	cmp    rdx,rcx
   14002c0a1:	sbb    rax,rax
   14002c0a4:	and    rax,rcx
   14002c0a7:	cmp    rax,0x400
   14002c0ad:	lea    rax,[rdx+0x10]
   14002c0b1:	ja     0x14002c0ed
   14002c0b3:	cmp    rdx,rax
   14002c0b6:	sbb    rcx,rcx
   14002c0b9:	and    rcx,rax
   14002c0bc:	lea    rax,[rcx+0xf]
   14002c0c0:	cmp    rax,rcx
   14002c0c3:	ja     0x14002c0cf
   14002c0c5:	movabs rax,0xffffffffffffff0
   14002c0cf:	and    rax,0xfffffffffffffff0
   14002c0d3:	call   0x1400267b0
   14002c0d8:	sub    rsp,rax
   14002c0db:	lea    rdi,[rsp+0x30]
   14002c0e0:	test   rdi,rdi
   14002c0e3:	je     0x14002c117
   14002c0e5:	mov    DWORD PTR [rdi],0xcccc
   14002c0eb:	jmp    0x14002c109
   14002c0ed:	cmp    rdx,rax
   14002c0f0:	sbb    rcx,rcx
   14002c0f3:	and    rcx,rax
   14002c0f6:	call   0x140036600
   14002c0fb:	mov    rdi,rax
   14002c0fe:	test   rax,rax
   14002c101:	je     0x14002c112
   14002c103:	mov    DWORD PTR [rax],0xdddd
   14002c109:	add    rdi,0x10
   14002c10d:	jmp    0x14002c112
   14002c10f:	mov    rdi,r12
   14002c112:	test   rdi,rdi
   14002c115:	jne    0x14002c12b
   14002c117:	call   0x140032c50
   14002c11c:	mov    DWORD PTR [rax],0xc
   14002c122:	call   0x140032c50
   14002c127:	mov    ebx,DWORD PTR [rax]
   14002c129:	jmp    0x14002c172
   14002c12b:	mov    rcx,QWORD PTR [r15]
   14002c12e:	or     r9d,0xffffffff
   14002c132:	mov    DWORD PTR [rsp+0x28],r14d
   14002c137:	mov    r8,rbx
   14002c13a:	mov    edx,0x200
   14002c13f:	mov    QWORD PTR [rsp+0x20],rdi
   14002c144:	mov    rcx,QWORD PTR [rcx+0x138]
   14002c14b:	call   0x14003932c
   14002c150:	test   eax,eax
   14002c152:	je     0x14002c166
   14002c154:	mov    r8,rdi
   14002c157:	mov    rdx,rsi
   14002c15a:	mov    rcx,rbx
   14002c15d:	call   0x140038cb0
   14002c162:	mov    ebx,eax
   14002c164:	jmp    0x14002c172
   14002c166:	call   0x140032c50
   14002c16b:	mov    ebx,0x2a
   14002c170:	mov    DWORD PTR [rax],ebx
   14002c172:	test   rdi,rdi
   14002c175:	je     0x14002c188
   14002c177:	lea    rcx,[rdi-0x10]
   14002c17b:	cmp    DWORD PTR [rcx],0xdddd
   14002c181:	jne    0x14002c188
   14002c183:	call   0x140038c70
   14002c188:	mov    eax,ebx
   14002c18a:	mov    rcx,QWORD PTR [rbp+0x0]
   14002c18e:	xor    rcx,rbp
   14002c191:	call   0x140025df0
   14002c196:	mov    rbx,QWORD PTR [rbp+0x30]
   14002c19a:	mov    rsi,QWORD PTR [rbp+0x38]
   14002c19e:	mov    rdi,QWORD PTR [rbp+0x40]
   14002c1a2:	mov    r12,QWORD PTR [rbp+0x48]
   14002c1a6:	lea    rsp,[rbp+0x10]
   14002c1aa:	pop    r15
   14002c1ac:	pop    r14
   14002c1ae:	pop    rbp
   14002c1af:	ret    
   14002c1b0:	rex push rbx
   14002c1b2:	sub    rsp,0x20
   14002c1b6:	mov    rbx,rcx
   14002c1b9:	mov    eax,DWORD PTR [rip+0x4a8bd]        # 0x140076a7c
   14002c1bf:	xor    r8d,r8d
   14002c1c2:	test   eax,eax
   14002c1c4:	jne    0x14002c1fe
   14002c1c6:	test   rcx,rcx
   14002c1c9:	jne    0x14002c1f6
   14002c1cb:	call   0x140032c50
   14002c1d0:	mov    DWORD PTR [rax],0x16
   14002c1d6:	call   0x1400307d0
   14002c1db:	xor    eax,eax
   14002c1dd:	jmp    0x14002c20a
   14002c1df:	movzx  edx,WORD PTR [rcx]
   14002c1e2:	lea    eax,[rdx-0x61]
   14002c1e5:	cmp    ax,0x19
   14002c1e9:	ja     0x14002c1f2
   14002c1eb:	sub    dx,0x20
   14002c1ef:	mov    WORD PTR [rcx],dx
   14002c1f2:	add    rcx,0x2
   14002c1f6:	cmp    WORD PTR [rcx],r8w
   14002c1fa:	jne    0x14002c1df
   14002c1fc:	jmp    0x14002c207
   14002c1fe:	or     rdx,0xffffffffffffffff
   14002c202:	call   0x14002c210
   14002c207:	mov    rax,rbx
   14002c20a:	add    rsp,0x20
   14002c20e:	pop    rbx
   14002c20f:	ret    
   14002c210:	mov    QWORD PTR [rsp+0x8],rbx
   14002c215:	push   rdi
   14002c216:	sub    rsp,0x40
   14002c21a:	mov    rbx,rdx
   14002c21d:	mov    rdi,rcx
   14002c220:	mov    rdx,r8
   14002c223:	lea    rcx,[rsp+0x20]
   14002c228:	call   0x14002bd94
   14002c22d:	lea    r8,[rsp+0x28]
   14002c232:	mov    rdx,rbx
   14002c235:	mov    rcx,rdi
   14002c238:	call   0x14002bf9c
   14002c23d:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c242:	je     0x14002c250
   14002c244:	mov    rcx,QWORD PTR [rsp+0x20]
   14002c249:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002c250:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c255:	add    rsp,0x40
   14002c259:	pop    rdi
   14002c25a:	ret    
   14002c25b:	int3   
   14002c25c:	rex push rbx
   14002c25e:	sub    rsp,0x40
   14002c262:	movsxd rbx,ecx
   14002c265:	mov    eax,DWORD PTR [rip+0x4a811]        # 0x140076a7c
   14002c26b:	test   eax,eax
   14002c26d:	je     0x14002c2bd
   14002c26f:	xor    edx,edx
   14002c271:	lea    rcx,[rsp+0x20]
   14002c276:	call   0x14002bd94
   14002c27b:	mov    rax,QWORD PTR [rsp+0x28]
   14002c280:	cmp    DWORD PTR [rax+0x8],0x1
   14002c284:	jle    0x14002c29b
   14002c286:	lea    r8,[rsp+0x28]
   14002c28b:	mov    edx,0x103
   14002c290:	mov    ecx,ebx
   14002c292:	call   0x1400393b4
   14002c297:	mov    edx,eax
   14002c299:	jmp    0x14002c2a8
   14002c29b:	mov    rax,QWORD PTR [rax]
   14002c29e:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c2a2:	and    edx,0x103
   14002c2a8:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c2ad:	je     0x14002c2ce
   14002c2af:	mov    rax,QWORD PTR [rsp+0x20]
   14002c2b4:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002c2bb:	jmp    0x14002c2ce
   14002c2bd:	mov    rax,QWORD PTR [rip+0x4503c]        # 0x140071300
   14002c2c4:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c2c8:	and    edx,0x103
   14002c2ce:	mov    eax,edx
   14002c2d0:	add    rsp,0x40
   14002c2d4:	pop    rbx
   14002c2d5:	ret    
   14002c2d6:	int3   
   14002c2d7:	int3   
   14002c2d8:	rex push rbx
   14002c2da:	sub    rsp,0x40
   14002c2de:	movsxd rbx,ecx
   14002c2e1:	mov    eax,DWORD PTR [rip+0x4a795]        # 0x140076a7c
   14002c2e7:	test   eax,eax
   14002c2e9:	je     0x14002c336
   14002c2eb:	xor    edx,edx
   14002c2ed:	lea    rcx,[rsp+0x20]
   14002c2f2:	call   0x14002bd94
   14002c2f7:	mov    rax,QWORD PTR [rsp+0x28]
   14002c2fc:	cmp    DWORD PTR [rax+0x8],0x1
   14002c300:	jle    0x14002c317
   14002c302:	lea    r8,[rsp+0x28]
   14002c307:	mov    edx,0x4
   14002c30c:	mov    ecx,ebx
   14002c30e:	call   0x1400393b4
   14002c313:	mov    edx,eax
   14002c315:	jmp    0x14002c321
   14002c317:	mov    rax,QWORD PTR [rax]
   14002c31a:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c31e:	and    edx,0x4
   14002c321:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c326:	je     0x14002c344
   14002c328:	mov    rax,QWORD PTR [rsp+0x20]
   14002c32d:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002c334:	jmp    0x14002c344
   14002c336:	mov    rax,QWORD PTR [rip+0x44fc3]        # 0x140071300
   14002c33d:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c341:	and    edx,0x4
   14002c344:	mov    eax,edx
   14002c346:	add    rsp,0x40
   14002c34a:	pop    rbx
   14002c34b:	ret    
   14002c34c:	rex push rbx
   14002c34e:	sub    rsp,0x40
   14002c352:	movsxd rbx,ecx
   14002c355:	mov    eax,DWORD PTR [rip+0x4a721]        # 0x140076a7c
   14002c35b:	test   eax,eax
   14002c35d:	je     0x14002c3aa
   14002c35f:	xor    edx,edx
   14002c361:	lea    rcx,[rsp+0x20]
   14002c366:	call   0x14002bd94
   14002c36b:	mov    rax,QWORD PTR [rsp+0x28]
   14002c370:	cmp    DWORD PTR [rax+0x8],0x1
   14002c374:	jle    0x14002c38b
   14002c376:	lea    r8,[rsp+0x28]
   14002c37b:	mov    edx,0x2
   14002c380:	mov    ecx,ebx
   14002c382:	call   0x1400393b4
   14002c387:	mov    edx,eax
   14002c389:	jmp    0x14002c395
   14002c38b:	mov    rax,QWORD PTR [rax]
   14002c38e:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c392:	and    edx,0x2
   14002c395:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c39a:	je     0x14002c3b8
   14002c39c:	mov    rax,QWORD PTR [rsp+0x20]
   14002c3a1:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002c3a8:	jmp    0x14002c3b8
   14002c3aa:	mov    rax,QWORD PTR [rip+0x44f4f]        # 0x140071300
   14002c3b1:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c3b5:	and    edx,0x2
   14002c3b8:	mov    eax,edx
   14002c3ba:	add    rsp,0x40
   14002c3be:	pop    rbx
   14002c3bf:	ret    
   14002c3c0:	rex push rbx
   14002c3c2:	sub    rsp,0x40
   14002c3c6:	movsxd rbx,ecx
   14002c3c9:	mov    eax,DWORD PTR [rip+0x4a6ad]        # 0x140076a7c
   14002c3cf:	test   eax,eax
   14002c3d1:	je     0x14002c41e
   14002c3d3:	xor    edx,edx
   14002c3d5:	lea    rcx,[rsp+0x20]
   14002c3da:	call   0x14002bd94
   14002c3df:	mov    rax,QWORD PTR [rsp+0x28]
   14002c3e4:	cmp    DWORD PTR [rax+0x8],0x1
   14002c3e8:	jle    0x14002c3ff
   14002c3ea:	lea    r8,[rsp+0x28]
   14002c3ef:	mov    edx,0x1
   14002c3f4:	mov    ecx,ebx
   14002c3f6:	call   0x1400393b4
   14002c3fb:	mov    edx,eax
   14002c3fd:	jmp    0x14002c409
   14002c3ff:	mov    rax,QWORD PTR [rax]
   14002c402:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c406:	and    edx,0x1
   14002c409:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c40e:	je     0x14002c42c
   14002c410:	mov    rax,QWORD PTR [rsp+0x20]
   14002c415:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002c41c:	jmp    0x14002c42c
   14002c41e:	mov    rax,QWORD PTR [rip+0x44edb]        # 0x140071300
   14002c425:	movzx  edx,WORD PTR [rax+rbx*2]
   14002c429:	and    edx,0x1
   14002c42c:	mov    eax,edx
   14002c42e:	add    rsp,0x40
   14002c432:	pop    rbx
   14002c433:	ret    
   14002c434:	mov    QWORD PTR [rsp+0x8],rbx
   14002c439:	push   rdi
   14002c43a:	sub    rsp,0x20
   14002c43e:	mov    rax,r8
   14002c441:	mov    rbx,rdx
   14002c444:	mov    rdi,rcx
   14002c447:	test   r8,r8
   14002c44a:	jne    0x14002c455
   14002c44c:	call   0x140039130
   14002c451:	add    rax,0x40
   14002c455:	mov    r8,rax
   14002c458:	mov    rdx,rbx
   14002c45b:	mov    rcx,rdi
   14002c45e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c463:	add    rsp,0x20
   14002c467:	pop    rdi
   14002c468:	jmp    0x1400328f8
   14002c46d:	int3   
   14002c46e:	int3   
   14002c46f:	int3   
   14002c470:	mov    r9,rcx
   14002c473:	movzx  r8d,BYTE PTR [r9]
   14002c477:	inc    r9
   14002c47a:	lea    eax,[r8-0x41]
   14002c47e:	cmp    eax,0x19
   14002c481:	ja     0x14002c487
   14002c483:	add    r8d,0x20
   14002c487:	movzx  ecx,BYTE PTR [rdx]
   14002c48a:	inc    rdx
   14002c48d:	lea    eax,[rcx-0x41]
   14002c490:	cmp    eax,0x19
   14002c493:	ja     0x14002c498
   14002c495:	add    ecx,0x20
   14002c498:	test   r8d,r8d
   14002c49b:	je     0x14002c4a2
   14002c49d:	cmp    r8d,ecx
   14002c4a0:	je     0x14002c473
   14002c4a2:	sub    r8d,ecx
   14002c4a5:	mov    eax,r8d
   14002c4a8:	ret    
   14002c4a9:	int3   
   14002c4aa:	int3   
   14002c4ab:	int3   
   14002c4ac:	sub    rsp,0x28
   14002c4b0:	mov    eax,DWORD PTR [rip+0x4a5c6]        # 0x140076a7c
   14002c4b6:	test   eax,eax
   14002c4b8:	jne    0x14002c4e7
   14002c4ba:	test   rcx,rcx
   14002c4bd:	jne    0x14002c4d9
   14002c4bf:	call   0x140032c50
   14002c4c4:	mov    DWORD PTR [rax],0x16
   14002c4ca:	call   0x1400307d0
   14002c4cf:	mov    eax,0x7fffffff
   14002c4d4:	add    rsp,0x28
   14002c4d8:	ret    
   14002c4d9:	test   rdx,rdx
   14002c4dc:	je     0x14002c4bf
   14002c4de:	add    rsp,0x28
   14002c4e2:	jmp    0x14002c470
   14002c4e7:	xor    r8d,r8d
   14002c4ea:	add    rsp,0x28
   14002c4ee:	jmp    0x14002c4f4
   14002c4f3:	int3   
   14002c4f4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c4f9:	mov    QWORD PTR [rsp+0x10],rsi
   14002c4fe:	push   rdi
   14002c4ff:	sub    rsp,0x40
   14002c503:	mov    rdi,rdx
   14002c506:	mov    rsi,rcx
   14002c509:	mov    rdx,r8
   14002c50c:	lea    rcx,[rsp+0x20]
   14002c511:	call   0x14002bd94
   14002c516:	test   rsi,rsi
   14002c519:	je     0x14002c520
   14002c51b:	test   rdi,rdi
   14002c51e:	jne    0x14002c537
   14002c520:	call   0x140032c50
   14002c525:	mov    DWORD PTR [rax],0x16
   14002c52b:	call   0x1400307d0
   14002c530:	mov    ebx,0x7fffffff
   14002c535:	jmp    0x14002c582
   14002c537:	mov    rax,QWORD PTR [rsp+0x28]
   14002c53c:	cmp    QWORD PTR [rax+0x138],0x0
   14002c544:	jne    0x14002c555
   14002c546:	mov    rdx,rdi
   14002c549:	mov    rcx,rsi
   14002c54c:	call   0x14002c470
   14002c551:	mov    ebx,eax
   14002c553:	jmp    0x14002c582
   14002c555:	sub    rsi,rdi
   14002c558:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   14002c55c:	lea    rdx,[rsp+0x28]
   14002c561:	call   0x140030f9c
   14002c566:	movzx  ecx,BYTE PTR [rdi]
   14002c569:	lea    rdx,[rsp+0x28]
   14002c56e:	mov    ebx,eax
   14002c570:	call   0x140030f9c
   14002c575:	inc    rdi
   14002c578:	test   ebx,ebx
   14002c57a:	je     0x14002c580
   14002c57c:	cmp    ebx,eax
   14002c57e:	je     0x14002c558
   14002c580:	sub    ebx,eax
   14002c582:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c587:	je     0x14002c595
   14002c589:	mov    rcx,QWORD PTR [rsp+0x20]
   14002c58e:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002c595:	mov    rsi,QWORD PTR [rsp+0x58]
   14002c59a:	mov    eax,ebx
   14002c59c:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c5a1:	add    rsp,0x40
   14002c5a5:	pop    rdi
   14002c5a6:	ret    
   14002c5a7:	int3   
   14002c5a8:	sub    rsp,0x28
   14002c5ac:	mov    eax,DWORD PTR [rip+0x4a4ca]        # 0x140076a7c
   14002c5b2:	mov    r11,r8
   14002c5b5:	mov    r10,rcx
   14002c5b8:	xor    r9d,r9d
   14002c5bb:	test   eax,eax
   14002c5bd:	jne    0x14002c638
   14002c5bf:	test   r8,r8
   14002c5c2:	je     0x14002c630
   14002c5c4:	test   rcx,rcx
   14002c5c7:	jne    0x14002c5e3
   14002c5c9:	call   0x140032c50
   14002c5ce:	mov    DWORD PTR [rax],0x16
   14002c5d4:	call   0x1400307d0
   14002c5d9:	mov    eax,0x7fffffff
   14002c5de:	add    rsp,0x28
   14002c5e2:	ret    
   14002c5e3:	test   rdx,rdx
   14002c5e6:	je     0x14002c5c9
   14002c5e8:	sub    r10,rdx
   14002c5eb:	movzx  ecx,WORD PTR [r10+rdx*1]
   14002c5f0:	lea    eax,[rcx-0x41]
   14002c5f3:	cmp    ax,0x19
   14002c5f7:	ja     0x14002c5fd
   14002c5f9:	add    cx,0x20
   14002c5fd:	movzx  r8d,WORD PTR [rdx]
   14002c601:	lea    eax,[r8-0x41]
   14002c605:	cmp    ax,0x19
   14002c609:	ja     0x14002c610
   14002c60b:	add    r8w,0x20
   14002c610:	add    rdx,0x2
   14002c614:	sub    r11,0x1
   14002c618:	je     0x14002c625
   14002c61a:	test   cx,cx
   14002c61d:	je     0x14002c625
   14002c61f:	cmp    cx,r8w
   14002c623:	je     0x14002c5eb
   14002c625:	movzx  eax,r8w
   14002c629:	movzx  r9d,cx
   14002c62d:	sub    r9d,eax
   14002c630:	mov    eax,r9d
   14002c633:	add    rsp,0x28
   14002c637:	ret    
   14002c638:	add    rsp,0x28
   14002c63c:	jmp    0x14002c644
   14002c641:	int3   
   14002c642:	int3   
   14002c643:	int3   
   14002c644:	mov    rax,rsp
   14002c647:	mov    QWORD PTR [rax+0x8],rbx
   14002c64b:	mov    QWORD PTR [rax+0x10],rbp
   14002c64f:	mov    QWORD PTR [rax+0x18],rsi
   14002c653:	mov    QWORD PTR [rax+0x20],rdi
   14002c657:	push   r14
   14002c659:	sub    rsp,0x40
   14002c65d:	xor    r14d,r14d
   14002c660:	mov    rbp,r8
   14002c663:	mov    rdi,rdx
   14002c666:	mov    rsi,rcx
   14002c669:	mov    eax,r14d
   14002c66c:	test   r8,r8
   14002c66f:	je     0x14002c741
   14002c675:	test   rcx,rcx
   14002c678:	jne    0x14002c694
   14002c67a:	call   0x140032c50
   14002c67f:	mov    DWORD PTR [rax],0x16
   14002c685:	call   0x1400307d0
   14002c68a:	mov    eax,0x7fffffff
   14002c68f:	jmp    0x14002c741
   14002c694:	test   rdx,rdx
   14002c697:	je     0x14002c67a
   14002c699:	mov    rdx,r9
   14002c69c:	lea    rcx,[rsp+0x20]
   14002c6a1:	call   0x14002bd94
   14002c6a6:	mov    rax,QWORD PTR [rsp+0x28]
   14002c6ab:	cmp    QWORD PTR [rax+0x138],r14
   14002c6b2:	jne    0x14002c6ee
   14002c6b4:	sub    rsi,rdi
   14002c6b7:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002c6bb:	lea    eax,[rbx-0x41]
   14002c6be:	cmp    ax,0x19
   14002c6c2:	ja     0x14002c6c8
   14002c6c4:	add    bx,0x20
   14002c6c8:	movzx  ecx,WORD PTR [rdi]
   14002c6cb:	lea    eax,[rcx-0x41]
   14002c6ce:	cmp    ax,0x19
   14002c6d2:	ja     0x14002c6d8
   14002c6d4:	add    cx,0x20
   14002c6d8:	add    rdi,0x2
   14002c6dc:	sub    rbp,0x1
   14002c6e0:	je     0x14002c726
   14002c6e2:	test   bx,bx
   14002c6e5:	je     0x14002c726
   14002c6e7:	cmp    bx,cx
   14002c6ea:	je     0x14002c6b7
   14002c6ec:	jmp    0x14002c726
   14002c6ee:	movzx  ecx,WORD PTR [rsi]
   14002c6f1:	lea    rdx,[rsp+0x28]
   14002c6f6:	call   0x140030e80
   14002c6fb:	movzx  ecx,WORD PTR [rdi]
   14002c6fe:	lea    rdx,[rsp+0x28]
   14002c703:	movzx  ebx,ax
   14002c706:	call   0x140030e80
   14002c70b:	lea    rsi,[rsi+0x2]
   14002c70f:	movzx  ecx,ax
   14002c712:	lea    rdi,[rdi+0x2]
   14002c716:	sub    rbp,0x1
   14002c71a:	je     0x14002c726
   14002c71c:	test   bx,bx
   14002c71f:	je     0x14002c726
   14002c721:	cmp    bx,ax
   14002c724:	je     0x14002c6ee
   14002c726:	movzx  ecx,cx
   14002c729:	movzx  eax,bx
   14002c72c:	sub    eax,ecx
   14002c72e:	cmp    BYTE PTR [rsp+0x38],r14b
   14002c733:	je     0x14002c741
   14002c735:	mov    rcx,QWORD PTR [rsp+0x20]
   14002c73a:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002c741:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c746:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c74b:	mov    rsi,QWORD PTR [rsp+0x60]
   14002c750:	mov    rdi,QWORD PTR [rsp+0x68]
   14002c755:	add    rsp,0x40
   14002c759:	pop    r14
   14002c75b:	ret    
   14002c75c:	jmp    0x140035d88
   14002c761:	int3   
   14002c762:	int3   
   14002c763:	int3   
   14002c764:	jmp    0x140036660
   14002c769:	int3   
   14002c76a:	int3   
   14002c76b:	int3   
   14002c76c:	sub    rsp,0x58
   14002c770:	mov    rax,QWORD PTR [rip+0x448d9]        # 0x140071050
   14002c777:	xor    rax,rsp
   14002c77a:	mov    QWORD PTR [rsp+0x40],rax
   14002c77f:	xor    r9d,r9d
   14002c782:	mov    r8,rdx
   14002c785:	mov    eax,r9d
   14002c788:	mov    r10,rcx
   14002c78b:	cmp    rax,0x20
   14002c78f:	lea    r11d,[r9+0x1]
   14002c793:	jae    0x14002c806
   14002c795:	mov    BYTE PTR [rsp+rax*1+0x20],r9b
   14002c79a:	add    rax,r11
   14002c79d:	cmp    rax,0x20
   14002c7a1:	jl     0x14002c793
   14002c7a3:	mov    al,BYTE PTR [rdx]
   14002c7a5:	jmp    0x14002c7c6
   14002c7a7:	movzx  edx,al
   14002c7aa:	shr    rdx,0x3
   14002c7ae:	movzx  eax,al
   14002c7b1:	and    eax,0x7
   14002c7b4:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
   14002c7b9:	bts    ecx,eax
   14002c7bc:	add    r8,r11
   14002c7bf:	mov    BYTE PTR [rsp+rdx*1+0x20],cl
   14002c7c3:	mov    al,BYTE PTR [r8]
   14002c7c6:	test   al,al
   14002c7c8:	jne    0x14002c7a7
   14002c7ca:	or     BYTE PTR [rsp+0x20],r11b
   14002c7cf:	jmp    0x14002c7d7
   14002c7d1:	add    r9d,r11d
   14002c7d4:	add    r10,r11
   14002c7d7:	movzx  r8d,BYTE PTR [r10]
   14002c7db:	mov    edx,r11d
   14002c7de:	mov    ecx,r8d
   14002c7e1:	shr    r8,0x3
   14002c7e5:	and    ecx,0x7
   14002c7e8:	shl    edx,cl
   14002c7ea:	test   BYTE PTR [rsp+r8*1+0x20],dl
   14002c7ef:	je     0x14002c7d1
   14002c7f1:	movsxd rax,r9d
   14002c7f4:	mov    rcx,QWORD PTR [rsp+0x40]
   14002c7f9:	xor    rcx,rsp
   14002c7fc:	call   0x140025df0
   14002c801:	add    rsp,0x58
   14002c805:	ret    
   14002c806:	call   0x140026914
   14002c80b:	int3   
   14002c80c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c811:	mov    QWORD PTR [rsp+0x20],r9
   14002c816:	push   rdi
   14002c817:	sub    rsp,0x20
   14002c81b:	mov    rbx,r9
   14002c81e:	mov    rdi,r8
   14002c821:	mov    rcx,QWORD PTR [rdx]
   14002c824:	call   0x140032b80
   14002c829:	nop
   14002c82a:	mov    rcx,rdi
   14002c82d:	call   0x14002d058
   14002c832:	mov    edi,eax
   14002c834:	mov    rcx,QWORD PTR [rbx]
   14002c837:	call   0x140032b8c
   14002c83c:	mov    eax,edi
   14002c83e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c843:	add    rsp,0x20
   14002c847:	pop    rdi
   14002c848:	ret    
   14002c849:	int3   
   14002c84a:	int3   
   14002c84b:	int3   
   14002c84c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c851:	mov    QWORD PTR [rsp+0x20],r9
   14002c856:	push   rdi
   14002c857:	sub    rsp,0x20
   14002c85b:	mov    rbx,r9
   14002c85e:	mov    rdi,r8
   14002c861:	mov    rcx,QWORD PTR [rdx]
   14002c864:	call   0x140032b80
   14002c869:	nop
   14002c86a:	mov    rcx,rdi
   14002c86d:	call   0x14002cf68
   14002c872:	mov    edi,eax
   14002c874:	mov    rcx,QWORD PTR [rbx]
   14002c877:	call   0x140032b8c
   14002c87c:	mov    eax,edi
   14002c87e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c883:	add    rsp,0x20
   14002c887:	pop    rdi
   14002c888:	ret    
   14002c889:	int3   
   14002c88a:	int3   
   14002c88b:	int3   
   14002c88c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c891:	push   rbp
   14002c892:	push   rsi
   14002c893:	push   rdi
   14002c894:	push   r14
   14002c896:	push   r15
   14002c898:	lea    rbp,[rsp-0x410]
   14002c8a0:	sub    rsp,0x510
   14002c8a7:	mov    rax,QWORD PTR [rip+0x447a2]        # 0x140071050
   14002c8ae:	xor    rax,rsp
   14002c8b1:	mov    QWORD PTR [rbp+0x400],rax
   14002c8b8:	mov    rbx,r9
   14002c8bb:	mov    rdi,r8
   14002c8be:	mov    rsi,rdx
   14002c8c1:	mov    r15,rcx
   14002c8c4:	test   r9,r9
   14002c8c7:	jne    0x14002c8e1
   14002c8c9:	call   0x140032c50
   14002c8ce:	mov    DWORD PTR [rax],0x16
   14002c8d4:	call   0x1400307d0
   14002c8d9:	or     eax,0xffffffff
   14002c8dc:	jmp    0x14002c9eb
   14002c8e1:	test   r8,r8
   14002c8e4:	je     0x14002c8eb
   14002c8e6:	test   rdx,rdx
   14002c8e9:	je     0x14002c8c9
   14002c8eb:	mov    rdx,QWORD PTR [rbp+0x460]
   14002c8f2:	lea    rcx,[rsp+0x58]
   14002c8f7:	call   0x14002bd94
   14002c8fc:	xor    edx,edx
   14002c8fe:	lea    rcx,[rsp+0x30]
   14002c903:	lea    r8d,[rdx+0x20]
   14002c907:	call   0x14002a910
   14002c90c:	and    QWORD PTR [rsp+0x40],0x0
   14002c912:	mov    r14,r15
   14002c915:	mov    QWORD PTR [rsp+0x30],rsi
   14002c91a:	mov    QWORD PTR [rsp+0x38],rdi
   14002c91f:	and    r14d,0x2
   14002c923:	jne    0x14002c92f
   14002c925:	mov    BYTE PTR [rsp+0x48],r14b
   14002c92a:	test   rsi,rsi
   14002c92d:	jne    0x14002c934
   14002c92f:	mov    BYTE PTR [rsp+0x48],0x1
   14002c934:	lea    rax,[rsp+0x30]
   14002c939:	mov    r9,rbx
   14002c93c:	mov    QWORD PTR [rsp+0x50],rax
   14002c941:	lea    rdx,[rsp+0x50]
   14002c946:	mov    rax,QWORD PTR [rbp+0x468]
   14002c94d:	lea    rcx,[rbp-0x80]
   14002c951:	mov    QWORD PTR [rsp+0x28],rax
   14002c956:	mov    r8,r15
   14002c959:	lea    rax,[rsp+0x60]
   14002c95e:	mov    QWORD PTR [rsp+0x20],rax
   14002c963:	call   0x14002ce6c
   14002c968:	lea    rcx,[rbp-0x80]
   14002c96c:	call   0x14002d4cc
   14002c971:	movsxd rbx,eax
   14002c974:	test   rsi,rsi
   14002c977:	je     0x14002c9c2
   14002c979:	test   r15b,0x1
   14002c97d:	je     0x14002c9a1
   14002c97f:	test   rdi,rdi
   14002c982:	jne    0x14002c98c
   14002c984:	test   eax,eax
   14002c986:	jne    0x14002ca16
   14002c98c:	mov    rax,QWORD PTR [rsp+0x40]
   14002c991:	cmp    rax,rdi
   14002c994:	jne    0x14002c9be
   14002c996:	test   ebx,ebx
   14002c998:	js     0x14002c9c2
   14002c99a:	cmp    rbx,rdi
   14002c99d:	jbe    0x14002c9c2
   14002c99f:	jmp    0x14002ca16
   14002c9a1:	test   r14,r14
   14002c9a4:	je     0x14002ca11
   14002c9a6:	test   rdi,rdi
   14002c9a9:	je     0x14002c9c2
   14002c9ab:	test   eax,eax
   14002c9ad:	jns    0x14002c9b4
   14002c9af:	mov    BYTE PTR [rsi],0x0
   14002c9b2:	jmp    0x14002c9c2
   14002c9b4:	mov    rax,QWORD PTR [rsp+0x40]
   14002c9b9:	cmp    rax,rdi
   14002c9bc:	je     0x14002ca2a
   14002c9be:	mov    BYTE PTR [rsi+rax*1],0x0
   14002c9c2:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14002c9c9:	call   0x140038c70
   14002c9ce:	and    QWORD PTR [rbp+0x3e0],0x0
   14002c9d6:	cmp    BYTE PTR [rsp+0x70],0x0
   14002c9db:	je     0x14002c9e9
   14002c9dd:	mov    rcx,QWORD PTR [rsp+0x58]
   14002c9e2:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002c9e9:	mov    eax,ebx
   14002c9eb:	mov    rcx,QWORD PTR [rbp+0x400]
   14002c9f2:	xor    rcx,rsp
   14002c9f5:	call   0x140025df0
   14002c9fa:	mov    rbx,QWORD PTR [rsp+0x540]
   14002ca02:	add    rsp,0x510
   14002ca09:	pop    r15
   14002ca0b:	pop    r14
   14002ca0d:	pop    rdi
   14002ca0e:	pop    rsi
   14002ca0f:	pop    rbp
   14002ca10:	ret    
   14002ca11:	test   rdi,rdi
   14002ca14:	jne    0x14002ca1b
   14002ca16:	or     ebx,0xffffffff
   14002ca19:	jmp    0x14002c9c2
   14002ca1b:	mov    rax,QWORD PTR [rsp+0x40]
   14002ca20:	cmp    rax,rdi
   14002ca23:	jne    0x14002c9be
   14002ca25:	mov    ebx,0xfffffffe
   14002ca2a:	mov    BYTE PTR [rsi+rdi*1-0x1],0x0
   14002ca2f:	jmp    0x14002c9c2
   14002ca31:	int3   
   14002ca32:	int3   
   14002ca33:	int3   
   14002ca34:	mov    QWORD PTR [rsp+0x8],rbx
   14002ca39:	mov    QWORD PTR [rsp+0x10],rbp
   14002ca3e:	mov    QWORD PTR [rsp+0x18],rsi
   14002ca43:	push   rdi
   14002ca44:	sub    rsp,0x20
   14002ca48:	or     rax,0xffffffffffffffff
   14002ca4c:	mov    rsi,rdx
   14002ca4f:	xor    edx,edx
   14002ca51:	mov    rbp,rcx
   14002ca54:	div    rsi
   14002ca57:	and    rax,0xfffffffffffffffe
   14002ca5b:	cmp    rax,0x2
   14002ca5f:	jae    0x14002ca70
   14002ca61:	call   0x140032c50
   14002ca66:	mov    DWORD PTR [rax],0xc
   14002ca6c:	xor    al,al
   14002ca6e:	jmp    0x14002cacb
   14002ca70:	add    rsi,rsi
   14002ca73:	xor    edi,edi
   14002ca75:	cmp    QWORD PTR [rcx+0x408],rdi
   14002ca7c:	jne    0x14002ca8b
   14002ca7e:	cmp    rsi,0x400
   14002ca85:	ja     0x14002ca8b
   14002ca87:	mov    al,0x1
   14002ca89:	jmp    0x14002cacb
   14002ca8b:	cmp    rsi,QWORD PTR [rcx+0x400]
   14002ca92:	jbe    0x14002ca87
   14002ca94:	mov    rcx,rsi
   14002ca97:	call   0x140036600
   14002ca9c:	mov    rbx,rax
   14002ca9f:	test   rax,rax
   14002caa2:	je     0x14002cac1
   14002caa4:	mov    rcx,QWORD PTR [rbp+0x408]
   14002caab:	call   0x140038c70
   14002cab0:	mov    QWORD PTR [rbp+0x408],rbx
   14002cab7:	mov    dil,0x1
   14002caba:	mov    QWORD PTR [rbp+0x400],rsi
   14002cac1:	xor    ecx,ecx
   14002cac3:	call   0x140038c70
   14002cac8:	mov    al,dil
   14002cacb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cad0:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cad5:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cada:	add    rsp,0x20
   14002cade:	pop    rdi
   14002cadf:	ret    
   14002cae0:	mov    ecx,r8d
   14002cae3:	sub    ecx,0x2
   14002cae6:	je     0x14002cb0c
   14002cae8:	sub    ecx,0x1
   14002caeb:	je     0x14002cb09
   14002caed:	cmp    ecx,0x9
   14002caf0:	je     0x14002cb09
   14002caf2:	cmp    r8d,0xd
   14002caf6:	je     0x14002cb0c
   14002caf8:	sub    dl,0x63
   14002cafb:	test   dl,0xef
   14002cafe:	sete   cl
   14002cb01:	xor    eax,eax
   14002cb03:	test   cl,cl
   14002cb05:	sete   al
   14002cb08:	ret    
   14002cb09:	mov    al,0x1
   14002cb0b:	ret    
   14002cb0c:	xor    al,al
   14002cb0e:	ret    
   14002cb0f:	int3   
   14002cb10:	mov    r9d,r8d
   14002cb13:	mov    r10,rcx
   14002cb16:	sub    r9d,0x2
   14002cb1a:	je     0x14002cb51
   14002cb1c:	sub    r9d,0x1
   14002cb20:	je     0x14002cb4e
   14002cb22:	cmp    r9d,0x9
   14002cb26:	je     0x14002cb4e
   14002cb28:	cmp    r8d,0xd
   14002cb2c:	je     0x14002cb4e
   14002cb2e:	shr    r10b,0x2
   14002cb32:	sub    dx,0x63
   14002cb36:	and    r10b,0x1
   14002cb3a:	mov    eax,0xffef
   14002cb3f:	test   ax,dx
   14002cb42:	sete   cl
   14002cb45:	xor    eax,eax
   14002cb47:	cmp    r10b,cl
   14002cb4a:	sete   al
   14002cb4d:	ret    
   14002cb4e:	mov    al,0x1
   14002cb50:	ret    
   14002cb51:	xor    al,al
   14002cb53:	ret    
   14002cb54:	mov    QWORD PTR [rsp+0x8],rbx
   14002cb59:	lea    rax,[rcx+0x58]
   14002cb5d:	mov    r10,rcx
   14002cb60:	mov    rcx,QWORD PTR [rax+0x408]
   14002cb67:	mov    ebx,r8d
   14002cb6a:	test   rcx,rcx
   14002cb6d:	mov    r11d,edx
   14002cb70:	cmove  rcx,rax
   14002cb74:	cmp    QWORD PTR [rax+0x408],0x0
   14002cb7c:	jne    0x14002cb85
   14002cb7e:	mov    eax,0x200
   14002cb83:	jmp    0x14002cb8f
   14002cb85:	mov    rax,QWORD PTR [rax+0x400]
   14002cb8c:	shr    rax,1
   14002cb8f:	lea    r8,[rcx-0x1]
   14002cb93:	add    r8,rax
   14002cb96:	mov    QWORD PTR [r10+0x48],r8
   14002cb9a:	mov    eax,DWORD PTR [r10+0x38]
   14002cb9e:	test   eax,eax
   14002cba0:	jg     0x14002cba7
   14002cba2:	test   r11d,r11d
   14002cba5:	je     0x14002cbdd
   14002cba7:	dec    eax
   14002cba9:	xor    edx,edx
   14002cbab:	mov    DWORD PTR [r10+0x38],eax
   14002cbaf:	mov    eax,r11d
   14002cbb2:	div    ebx
   14002cbb4:	add    dl,0x30
   14002cbb7:	mov    r11d,eax
   14002cbba:	cmp    dl,0x39
   14002cbbd:	jle    0x14002cbd1
   14002cbbf:	mov    al,r9b
   14002cbc2:	neg    al
   14002cbc4:	sbb    cl,cl
   14002cbc6:	and    cl,0xe0
   14002cbc9:	add    cl,0x61
   14002cbcc:	sub    cl,0x3a
   14002cbcf:	add    dl,cl
   14002cbd1:	mov    rax,QWORD PTR [r10+0x48]
   14002cbd5:	mov    BYTE PTR [rax],dl
   14002cbd7:	dec    QWORD PTR [r10+0x48]
   14002cbdb:	jmp    0x14002cb9a
   14002cbdd:	sub    r8d,DWORD PTR [r10+0x48]
   14002cbe1:	inc    QWORD PTR [r10+0x48]
   14002cbe5:	mov    rbx,QWORD PTR [rsp+0x8]
   14002cbea:	mov    DWORD PTR [r10+0x50],r8d
   14002cbee:	ret    
   14002cbef:	int3   
   14002cbf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cbf5:	lea    rax,[rcx+0x58]
   14002cbf9:	mov    ebx,r8d
   14002cbfc:	mov    r10,rcx
   14002cbff:	mov    r11,rdx
   14002cc02:	mov    rcx,QWORD PTR [rax+0x408]
   14002cc09:	test   rcx,rcx
   14002cc0c:	cmove  rcx,rax
   14002cc10:	cmp    QWORD PTR [rax+0x408],0x0
   14002cc18:	jne    0x14002cc21
   14002cc1a:	mov    eax,0x200
   14002cc1f:	jmp    0x14002cc2b
   14002cc21:	mov    rax,QWORD PTR [rax+0x400]
   14002cc28:	shr    rax,1
   14002cc2b:	lea    r8,[rcx-0x1]
   14002cc2f:	add    r8,rax
   14002cc32:	mov    QWORD PTR [r10+0x48],r8
   14002cc36:	mov    eax,DWORD PTR [r10+0x38]
   14002cc3a:	test   eax,eax
   14002cc3c:	jg     0x14002cc43
   14002cc3e:	test   r11,r11
   14002cc41:	je     0x14002cc7a
   14002cc43:	dec    eax
   14002cc45:	xor    edx,edx
   14002cc47:	mov    DWORD PTR [r10+0x38],eax
   14002cc4b:	mov    rax,r11
   14002cc4e:	div    rbx
   14002cc51:	add    dl,0x30
   14002cc54:	mov    r11,rax
   14002cc57:	cmp    dl,0x39
   14002cc5a:	jle    0x14002cc6e
   14002cc5c:	mov    al,r9b
   14002cc5f:	neg    al
   14002cc61:	sbb    cl,cl
   14002cc63:	and    cl,0xe0
   14002cc66:	add    cl,0x61
   14002cc69:	sub    cl,0x3a
   14002cc6c:	add    dl,cl
   14002cc6e:	mov    rax,QWORD PTR [r10+0x48]
   14002cc72:	mov    BYTE PTR [rax],dl
   14002cc74:	dec    QWORD PTR [r10+0x48]
   14002cc78:	jmp    0x14002cc36
   14002cc7a:	sub    r8d,DWORD PTR [r10+0x48]
   14002cc7e:	inc    QWORD PTR [r10+0x48]
   14002cc82:	mov    rbx,QWORD PTR [rsp+0x8]
   14002cc87:	mov    DWORD PTR [r10+0x50],r8d
   14002cc8b:	ret    
   14002cc8c:	test   r8d,r8d
   14002cc8f:	jle    0x14002cd0f
   14002cc91:	mov    rax,rsp
   14002cc94:	mov    QWORD PTR [rax+0x8],rbx
   14002cc98:	mov    QWORD PTR [rax+0x10],rbp
   14002cc9c:	mov    QWORD PTR [rax+0x18],rsi
   14002cca0:	mov    QWORD PTR [rax+0x20],rdi
   14002cca4:	push   r14
   14002cca6:	sub    rsp,0x20
   14002ccaa:	mov    rbx,r9
   14002ccad:	mov    ebp,r8d
   14002ccb0:	mov    r14b,dl
   14002ccb3:	mov    rsi,rcx
   14002ccb6:	xor    edi,edi
   14002ccb8:	mov    rax,QWORD PTR [rsi]
   14002ccbb:	mov    ecx,DWORD PTR [rax+0x14]
   14002ccbe:	shr    ecx,0xc
   14002ccc1:	test   cl,0x1
   14002ccc4:	je     0x14002ccd0
   14002ccc6:	mov    rax,QWORD PTR [rsi]
   14002ccc9:	cmp    QWORD PTR [rax+0x8],0x0
   14002ccce:	je     0x14002cce1
   14002ccd0:	mov    rdx,QWORD PTR [rsi]
   14002ccd3:	movsx  ecx,r14b
   14002ccd7:	call   0x14003a5cc
   14002ccdc:	cmp    eax,0xffffffff
   14002ccdf:	je     0x14002ccf2
   14002cce1:	inc    DWORD PTR [rbx]
   14002cce3:	mov    eax,DWORD PTR [rbx]
   14002cce5:	cmp    eax,0xffffffff
   14002cce8:	je     0x14002ccf5
   14002ccea:	inc    edi
   14002ccec:	cmp    edi,ebp
   14002ccee:	jge    0x14002ccf5
   14002ccf0:	jmp    0x14002ccb8
   14002ccf2:	or     DWORD PTR [rbx],0xffffffff
   14002ccf5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ccfa:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ccff:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cd04:	mov    rdi,QWORD PTR [rsp+0x48]
   14002cd09:	add    rsp,0x20
   14002cd0d:	pop    r14
   14002cd0f:	ret    
   14002cd10:	test   r8d,r8d
   14002cd13:	jle    0x14002cd9d
   14002cd19:	mov    rax,rsp
   14002cd1c:	mov    QWORD PTR [rax+0x8],rbx
   14002cd20:	mov    QWORD PTR [rax+0x10],rbp
   14002cd24:	mov    QWORD PTR [rax+0x18],rsi
   14002cd28:	mov    QWORD PTR [rax+0x20],rdi
   14002cd2c:	push   r14
   14002cd2e:	sub    rsp,0x20
   14002cd32:	mov    rbx,r9
   14002cd35:	movsx  r14d,dl
   14002cd39:	mov    ebp,r8d
   14002cd3c:	mov    rsi,rcx
   14002cd3f:	xor    edi,edi
   14002cd41:	mov    rax,QWORD PTR [rsi]
   14002cd44:	mov    ecx,DWORD PTR [rax+0x14]
   14002cd47:	shr    ecx,0xc
   14002cd4a:	test   cl,0x1
   14002cd4d:	je     0x14002cd59
   14002cd4f:	mov    rax,QWORD PTR [rsi]
   14002cd52:	cmp    QWORD PTR [rax+0x8],0x0
   14002cd57:	je     0x14002cd6f
   14002cd59:	mov    rdx,QWORD PTR [rsi]
   14002cd5c:	movzx  ecx,r14w
   14002cd60:	call   0x14003a428
   14002cd65:	mov    ecx,0xffff
   14002cd6a:	cmp    ax,cx
   14002cd6d:	je     0x14002cd80
   14002cd6f:	inc    DWORD PTR [rbx]
   14002cd71:	mov    eax,DWORD PTR [rbx]
   14002cd73:	cmp    eax,0xffffffff
   14002cd76:	je     0x14002cd83
   14002cd78:	inc    edi
   14002cd7a:	cmp    edi,ebp
   14002cd7c:	jge    0x14002cd83
   14002cd7e:	jmp    0x14002cd41
   14002cd80:	or     DWORD PTR [rbx],0xffffffff
   14002cd83:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cd88:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cd8d:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cd92:	mov    rdi,QWORD PTR [rsp+0x48]
   14002cd97:	add    rsp,0x20
   14002cd9b:	pop    r14
   14002cd9d:	ret    
   14002cd9e:	int3   
   14002cd9f:	int3   
   14002cda0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cda5:	xor    r11d,r11d
   14002cda8:	mov    rbx,rcx
   14002cdab:	test   r8d,r8d
   14002cdae:	jle    0x14002cdf5
   14002cdb0:	mov    r10,QWORD PTR [rbx]
   14002cdb3:	mov    rax,QWORD PTR [r10+0x8]
   14002cdb7:	cmp    QWORD PTR [r10+0x10],rax
   14002cdbb:	jne    0x14002cdcf
   14002cdbd:	cmp    BYTE PTR [r10+0x18],0x0
   14002cdc2:	je     0x14002cdc9
   14002cdc4:	inc    DWORD PTR [r9]
   14002cdc7:	jmp    0x14002cde7
   14002cdc9:	or     DWORD PTR [r9],0xffffffff
   14002cdcd:	jmp    0x14002cde7
   14002cdcf:	inc    DWORD PTR [r9]
   14002cdd2:	mov    rax,QWORD PTR [rbx]
   14002cdd5:	inc    QWORD PTR [rax+0x10]
   14002cdd9:	mov    rax,QWORD PTR [rbx]
   14002cddc:	mov    rcx,QWORD PTR [rax]
   14002cddf:	mov    BYTE PTR [rcx],dl
   14002cde1:	mov    rax,QWORD PTR [rbx]
   14002cde4:	inc    QWORD PTR [rax]
   14002cde7:	cmp    DWORD PTR [r9],0xffffffff
   14002cdeb:	je     0x14002cdf5
   14002cded:	inc    r11d
   14002cdf0:	cmp    r11d,r8d
   14002cdf3:	jl     0x14002cdb0
   14002cdf5:	mov    rbx,QWORD PTR [rsp+0x8]
   14002cdfa:	ret    
   14002cdfb:	int3   
   14002cdfc:	test   r8d,r8d
   14002cdff:	jle    0x14002ce69
   14002ce01:	mov    QWORD PTR [rsp+0x8],rbx
   14002ce06:	mov    QWORD PTR [rsp+0x10],rdi
   14002ce0b:	mov    dil,dl
   14002ce0e:	mov    rbx,rcx
   14002ce11:	xor    r11d,r11d
   14002ce14:	mov    r10,QWORD PTR [rbx]
   14002ce17:	mov    rax,QWORD PTR [r10+0x8]
   14002ce1b:	cmp    QWORD PTR [r10+0x10],rax
   14002ce1f:	jne    0x14002ce33
   14002ce21:	cmp    BYTE PTR [r10+0x18],0x0
   14002ce26:	je     0x14002ce2d
   14002ce28:	inc    DWORD PTR [r9]
   14002ce2b:	jmp    0x14002ce51
   14002ce2d:	or     DWORD PTR [r9],0xffffffff
   14002ce31:	jmp    0x14002ce51
   14002ce33:	inc    DWORD PTR [r9]
   14002ce36:	mov    rax,QWORD PTR [rbx]
   14002ce39:	movsx  edx,dil
   14002ce3d:	inc    QWORD PTR [rax+0x10]
   14002ce41:	mov    rax,QWORD PTR [rbx]
   14002ce44:	mov    rcx,QWORD PTR [rax]
   14002ce47:	mov    WORD PTR [rcx],dx
   14002ce4a:	mov    rax,QWORD PTR [rbx]
   14002ce4d:	add    QWORD PTR [rax],0x2
   14002ce51:	cmp    DWORD PTR [r9],0xffffffff
   14002ce55:	je     0x14002ce5f
   14002ce57:	inc    r11d
   14002ce5a:	cmp    r11d,r8d
   14002ce5d:	jl     0x14002ce14
   14002ce5f:	mov    rbx,QWORD PTR [rsp+0x8]
   14002ce64:	mov    rdi,QWORD PTR [rsp+0x10]
   14002ce69:	ret    
   14002ce6a:	int3   
   14002ce6b:	int3   
   14002ce6c:	rex push rbx
   14002ce6e:	sub    rsp,0x20
   14002ce72:	mov    rbx,rcx
   14002ce75:	xor    ecx,ecx
   14002ce77:	mov    QWORD PTR [rbx],rcx
   14002ce7a:	mov    QWORD PTR [rbx+0x8],rcx
   14002ce7e:	mov    QWORD PTR [rbx+0x18],rcx
   14002ce82:	mov    QWORD PTR [rbx+0x20],rcx
   14002ce86:	mov    QWORD PTR [rbx+0x10],rcx
   14002ce8a:	mov    QWORD PTR [rbx+0x28],rcx
   14002ce8e:	mov    QWORD PTR [rbx+0x30],rcx
   14002ce92:	mov    DWORD PTR [rbx+0x38],ecx
   14002ce95:	mov    WORD PTR [rbx+0x40],cx
   14002ce99:	mov    DWORD PTR [rbx+0x50],ecx
   14002ce9c:	mov    BYTE PTR [rbx+0x54],cl
   14002ce9f:	mov    QWORD PTR [rbx+0x458],rcx
   14002cea6:	mov    QWORD PTR [rbx+0x460],rcx
   14002cead:	mov    rax,QWORD PTR [rdx]
   14002ceb0:	mov    QWORD PTR [rbx+0x468],rax
   14002ceb7:	mov    rax,QWORD PTR [rsp+0x50]
   14002cebc:	mov    QWORD PTR [rbx+0x8],rax
   14002cec0:	mov    rax,QWORD PTR [rsp+0x58]
   14002cec5:	mov    QWORD PTR [rbx+0x20],rax
   14002cec9:	mov    QWORD PTR [rbx],r8
   14002cecc:	mov    QWORD PTR [rbx+0x18],r9
   14002ced0:	mov    DWORD PTR [rbx+0x470],ecx
   14002ced6:	call   0x140032c50
   14002cedb:	mov    QWORD PTR [rbx+0x10],rax
   14002cedf:	mov    rax,rbx
   14002cee2:	add    rsp,0x20
   14002cee6:	pop    rbx
   14002cee7:	ret    
   14002cee8:	rex push rbx
   14002ceea:	sub    rsp,0x20
   14002ceee:	mov    rbx,rcx
   14002cef1:	xor    ecx,ecx
   14002cef3:	mov    QWORD PTR [rbx],rcx
   14002cef6:	mov    QWORD PTR [rbx+0x8],rcx
   14002cefa:	mov    QWORD PTR [rbx+0x18],rcx
   14002cefe:	mov    QWORD PTR [rbx+0x20],rcx
   14002cf02:	mov    QWORD PTR [rbx+0x10],rcx
   14002cf06:	mov    QWORD PTR [rbx+0x28],rcx
   14002cf0a:	mov    QWORD PTR [rbx+0x30],rcx
   14002cf0e:	mov    DWORD PTR [rbx+0x38],ecx
   14002cf11:	mov    BYTE PTR [rbx+0x40],cl
   14002cf14:	mov    WORD PTR [rbx+0x42],cx
   14002cf18:	mov    DWORD PTR [rbx+0x50],ecx
   14002cf1b:	mov    BYTE PTR [rbx+0x54],cl
   14002cf1e:	mov    QWORD PTR [rbx+0x458],rcx
   14002cf25:	mov    QWORD PTR [rbx+0x460],rcx
   14002cf2c:	mov    rax,QWORD PTR [rdx]
   14002cf2f:	mov    QWORD PTR [rbx+0x468],rax
   14002cf36:	mov    rax,QWORD PTR [rsp+0x50]
   14002cf3b:	mov    QWORD PTR [rbx+0x8],rax
   14002cf3f:	mov    rax,QWORD PTR [rsp+0x58]
   14002cf44:	mov    QWORD PTR [rbx+0x20],rax
   14002cf48:	mov    QWORD PTR [rbx],r8
   14002cf4b:	mov    QWORD PTR [rbx+0x18],r9
   14002cf4f:	mov    DWORD PTR [rbx+0x470],ecx
   14002cf55:	call   0x140032c50
   14002cf5a:	mov    QWORD PTR [rbx+0x10],rax
   14002cf5e:	mov    rax,rbx
   14002cf61:	add    rsp,0x20
   14002cf65:	pop    rbx
   14002cf66:	ret    
   14002cf67:	int3   
   14002cf68:	mov    QWORD PTR [rsp+0x10],rbx
   14002cf6d:	mov    QWORD PTR [rsp+0x18],rsi
   14002cf72:	push   rdi
   14002cf73:	sub    rsp,0x4f0
   14002cf7a:	mov    rax,QWORD PTR [rip+0x440cf]        # 0x140071050
   14002cf81:	xor    rax,rsp
   14002cf84:	mov    QWORD PTR [rsp+0x4e0],rax
   14002cf8c:	mov    rax,QWORD PTR [rcx]
   14002cf8f:	mov    rbx,rcx
   14002cf92:	mov    rdi,QWORD PTR [rax]
   14002cf95:	mov    rcx,rdi
   14002cf98:	call   0x14003a5fc
   14002cf9d:	mov    rdx,QWORD PTR [rbx+0x8]
   14002cfa1:	lea    rcx,[rsp+0x38]
   14002cfa6:	mov    sil,al
   14002cfa9:	mov    rdx,QWORD PTR [rdx]
   14002cfac:	call   0x14002bd94
   14002cfb1:	mov    rdx,QWORD PTR [rbx]
   14002cfb4:	lea    rax,[rsp+0x40]
   14002cfb9:	mov    rcx,QWORD PTR [rbx+0x20]
   14002cfbd:	mov    r9,QWORD PTR [rbx+0x18]
   14002cfc1:	mov    r8,QWORD PTR [rdx]
   14002cfc4:	lea    rdx,[rsp+0x30]
   14002cfc9:	mov    rcx,QWORD PTR [rcx]
   14002cfcc:	mov    r9,QWORD PTR [r9]
   14002cfcf:	mov    QWORD PTR [rsp+0x30],r8
   14002cfd4:	mov    r8,QWORD PTR [rbx+0x10]
   14002cfd8:	mov    QWORD PTR [rsp+0x28],rcx
   14002cfdd:	lea    rcx,[rsp+0x60]
   14002cfe2:	mov    QWORD PTR [rsp+0x20],rax
   14002cfe7:	mov    r8,QWORD PTR [r8]
   14002cfea:	call   0x14002ce6c
   14002cfef:	lea    rcx,[rsp+0x60]
   14002cff4:	call   0x14002d2bc
   14002cff9:	mov    rcx,QWORD PTR [rsp+0x4c0]
   14002d001:	mov    ebx,eax
   14002d003:	call   0x140038c70
   14002d008:	and    QWORD PTR [rsp+0x4c0],0x0
   14002d011:	cmp    BYTE PTR [rsp+0x50],0x0
   14002d016:	je     0x14002d024
   14002d018:	mov    rcx,QWORD PTR [rsp+0x38]
   14002d01d:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002d024:	mov    rdx,rdi
   14002d027:	mov    cl,sil
   14002d02a:	call   0x14003a6cc
   14002d02f:	mov    eax,ebx
   14002d031:	mov    rcx,QWORD PTR [rsp+0x4e0]
   14002d039:	xor    rcx,rsp
   14002d03c:	call   0x140025df0
   14002d041:	lea    r11,[rsp+0x4f0]
   14002d049:	mov    rbx,QWORD PTR [r11+0x18]
   14002d04d:	mov    rsi,QWORD PTR [r11+0x20]
   14002d051:	mov    rsp,r11
   14002d054:	pop    rdi
   14002d055:	ret    
   14002d056:	int3   
   14002d057:	int3   
   14002d058:	mov    QWORD PTR [rsp+0x10],rbx
   14002d05d:	mov    QWORD PTR [rsp+0x18],rsi
   14002d062:	push   rdi
   14002d063:	sub    rsp,0x4f0
   14002d06a:	mov    rax,QWORD PTR [rip+0x43fdf]        # 0x140071050
   14002d071:	xor    rax,rsp
   14002d074:	mov    QWORD PTR [rsp+0x4e0],rax
   14002d07c:	mov    rax,QWORD PTR [rcx]
   14002d07f:	mov    rbx,rcx
   14002d082:	mov    rdi,QWORD PTR [rax]
   14002d085:	mov    rcx,rdi
   14002d088:	call   0x14003a5fc
   14002d08d:	mov    rdx,QWORD PTR [rbx+0x8]
   14002d091:	lea    rcx,[rsp+0x38]
   14002d096:	mov    sil,al
   14002d099:	mov    rdx,QWORD PTR [rdx]
   14002d09c:	call   0x14002bd94
   14002d0a1:	mov    rdx,QWORD PTR [rbx]
   14002d0a4:	lea    rax,[rsp+0x40]
   14002d0a9:	mov    rcx,QWORD PTR [rbx+0x20]
   14002d0ad:	mov    r9,QWORD PTR [rbx+0x18]
   14002d0b1:	mov    r8,QWORD PTR [rdx]
   14002d0b4:	lea    rdx,[rsp+0x30]
   14002d0b9:	mov    rcx,QWORD PTR [rcx]
   14002d0bc:	mov    r9,QWORD PTR [r9]
   14002d0bf:	mov    QWORD PTR [rsp+0x30],r8
   14002d0c4:	mov    r8,QWORD PTR [rbx+0x10]
   14002d0c8:	mov    QWORD PTR [rsp+0x28],rcx
   14002d0cd:	lea    rcx,[rsp+0x60]
   14002d0d2:	mov    QWORD PTR [rsp+0x20],rax
   14002d0d7:	mov    r8,QWORD PTR [r8]
   14002d0da:	call   0x14002cee8
   14002d0df:	lea    rcx,[rsp+0x60]
   14002d0e4:	call   0x14002d6e0
   14002d0e9:	mov    rcx,QWORD PTR [rsp+0x4c0]
   14002d0f1:	mov    ebx,eax
   14002d0f3:	call   0x140038c70
   14002d0f8:	and    QWORD PTR [rsp+0x4c0],0x0
   14002d101:	cmp    BYTE PTR [rsp+0x50],0x0
   14002d106:	je     0x14002d114
   14002d108:	mov    rcx,QWORD PTR [rsp+0x38]
   14002d10d:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002d114:	mov    rdx,rdi
   14002d117:	mov    cl,sil
   14002d11a:	call   0x14003a6cc
   14002d11f:	mov    eax,ebx
   14002d121:	mov    rcx,QWORD PTR [rsp+0x4e0]
   14002d129:	xor    rcx,rsp
   14002d12c:	call   0x140025df0
   14002d131:	lea    r11,[rsp+0x4f0]
   14002d139:	mov    rbx,QWORD PTR [r11+0x18]
   14002d13d:	mov    rsi,QWORD PTR [r11+0x20]
   14002d141:	mov    rsp,r11
   14002d144:	pop    rdi
   14002d145:	ret    
   14002d146:	int3   
   14002d147:	int3   
   14002d148:	mov    QWORD PTR [rsp+0x8],rbx
   14002d14d:	push   rdi
   14002d14e:	sub    rsp,0x20
   14002d152:	mov    rbx,rcx
   14002d155:	mov    rdi,rdx
   14002d158:	movsx  ecx,BYTE PTR [rcx]
   14002d15b:	call   0x1400310dc
   14002d160:	cmp    eax,0x65
   14002d163:	je     0x14002d174
   14002d165:	inc    rbx
   14002d168:	movzx  ecx,BYTE PTR [rbx]
   14002d16b:	call   0x14002c2d8
   14002d170:	test   eax,eax
   14002d172:	jne    0x14002d165
   14002d174:	movsx  ecx,BYTE PTR [rbx]
   14002d177:	call   0x1400310dc
   14002d17c:	cmp    eax,0x78
   14002d17f:	jne    0x14002d185
   14002d181:	add    rbx,0x2
   14002d185:	mov    rax,QWORD PTR [rdi]
   14002d188:	mov    dl,BYTE PTR [rbx]
   14002d18a:	mov    rcx,QWORD PTR [rax+0xf8]
   14002d191:	mov    rax,QWORD PTR [rcx]
   14002d194:	mov    cl,BYTE PTR [rax]
   14002d196:	mov    BYTE PTR [rbx],cl
   14002d198:	inc    rbx
   14002d19b:	mov    al,BYTE PTR [rbx]
   14002d19d:	mov    BYTE PTR [rbx],dl
   14002d19f:	mov    dl,al
   14002d1a1:	mov    al,BYTE PTR [rbx]
   14002d1a3:	inc    rbx
   14002d1a6:	test   al,al
   14002d1a8:	jne    0x14002d19b
   14002d1aa:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d1af:	add    rsp,0x20
   14002d1b3:	pop    rdi
   14002d1b4:	ret    
   14002d1b5:	int3   
   14002d1b6:	int3   
   14002d1b7:	int3   
   14002d1b8:	mov    rax,rsp
   14002d1bb:	mov    QWORD PTR [rax+0x10],rbx
   14002d1bf:	mov    QWORD PTR [rax+0x18],rbp
   14002d1c3:	push   rsi
   14002d1c4:	push   rdi
   14002d1c5:	push   r14
   14002d1c7:	sub    rsp,0x20
   14002d1cb:	mov    rsi,QWORD PTR [rcx+0x10]
   14002d1cf:	mov    rdi,rcx
   14002d1d2:	mov    ebp,0x1
   14002d1d7:	mov    rbx,rdx
   14002d1da:	lea    rdx,[rax+0x8]
   14002d1de:	mov    r14d,DWORD PTR [rsi]
   14002d1e1:	and    DWORD PTR [rsi],0x0
   14002d1e4:	lea    r8d,[rbp+0x9]
   14002d1e8:	mov    rcx,QWORD PTR [rcx+0x18]
   14002d1ec:	and    QWORD PTR [rax+0x8],0x0
   14002d1f1:	sub    rcx,rbp
   14002d1f4:	call   0x1400323e4
   14002d1f9:	mov    DWORD PTR [rbx],eax
   14002d1fb:	mov    rax,QWORD PTR [rdi+0x10]
   14002d1ff:	cmp    DWORD PTR [rax],0x22
   14002d202:	je     0x14002d215
   14002d204:	mov    rax,QWORD PTR [rsp+0x40]
   14002d209:	cmp    rax,QWORD PTR [rdi+0x18]
   14002d20d:	jb     0x14002d215
   14002d20f:	mov    QWORD PTR [rdi+0x18],rax
   14002d213:	jmp    0x14002d218
   14002d215:	xor    bpl,bpl
   14002d218:	cmp    DWORD PTR [rsi],0x0
   14002d21b:	jne    0x14002d225
   14002d21d:	test   r14d,r14d
   14002d220:	je     0x14002d225
   14002d222:	mov    DWORD PTR [rsi],r14d
   14002d225:	mov    rbx,QWORD PTR [rsp+0x48]
   14002d22a:	mov    al,bpl
   14002d22d:	mov    rbp,QWORD PTR [rsp+0x50]
   14002d232:	add    rsp,0x20
   14002d236:	pop    r14
   14002d238:	pop    rdi
   14002d239:	pop    rsi
   14002d23a:	ret    
   14002d23b:	int3   
   14002d23c:	mov    rax,rsp
   14002d23f:	mov    QWORD PTR [rax+0x10],rbx
   14002d243:	mov    QWORD PTR [rax+0x18],rbp
   14002d247:	mov    QWORD PTR [rax+0x20],rsi
   14002d24b:	push   rdi
   14002d24c:	sub    rsp,0x20
   14002d250:	mov    rsi,QWORD PTR [rcx+0x10]
   14002d254:	mov    rdi,rcx
   14002d257:	mov    rbx,rdx
   14002d25a:	mov    r8d,0xa
   14002d260:	lea    rdx,[rax+0x8]
   14002d264:	mov    ebp,DWORD PTR [rsi]
   14002d266:	and    DWORD PTR [rsi],0x0
   14002d269:	mov    rcx,QWORD PTR [rcx+0x18]
   14002d26d:	and    QWORD PTR [rax+0x8],0x0
   14002d272:	sub    rcx,0x2
   14002d276:	call   0x140032414
   14002d27b:	mov    DWORD PTR [rbx],eax
   14002d27d:	mov    rax,QWORD PTR [rdi+0x10]
   14002d281:	cmp    DWORD PTR [rax],0x22
   14002d284:	je     0x14002d299
   14002d286:	mov    rax,QWORD PTR [rsp+0x30]
   14002d28b:	cmp    rax,QWORD PTR [rdi+0x18]
   14002d28f:	jb     0x14002d299
   14002d291:	mov    QWORD PTR [rdi+0x18],rax
   14002d295:	mov    al,0x1
   14002d297:	jmp    0x14002d29b
   14002d299:	xor    al,al
   14002d29b:	cmp    DWORD PTR [rsi],0x0
   14002d29e:	jne    0x14002d2a6
   14002d2a0:	test   ebp,ebp
   14002d2a2:	je     0x14002d2a6
   14002d2a4:	mov    DWORD PTR [rsi],ebp
   14002d2a6:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d2ab:	mov    rbp,QWORD PTR [rsp+0x40]
   14002d2b0:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d2b5:	add    rsp,0x20
   14002d2b9:	pop    rdi
   14002d2ba:	ret    
   14002d2bb:	int3   
   14002d2bc:	mov    QWORD PTR [rsp+0x8],rbx
   14002d2c1:	mov    QWORD PTR [rsp+0x10],rbp
   14002d2c6:	push   rdi
   14002d2c7:	sub    rsp,0x20
   14002d2cb:	mov    rbx,rcx
   14002d2ce:	mov    rcx,QWORD PTR [rcx+0x468]
   14002d2d5:	test   rcx,rcx
   14002d2d8:	jne    0x14002d2ec
   14002d2da:	call   0x140032c50
   14002d2df:	mov    DWORD PTR [rax],0x16
   14002d2e5:	call   0x1400307d0
   14002d2ea:	jmp    0x14002d2f5
   14002d2ec:	call   0x14002f944
   14002d2f1:	test   al,al
   14002d2f3:	jne    0x14002d2fd
   14002d2f5:	or     eax,0xffffffff
   14002d2f8:	jmp    0x14002d4a7
   14002d2fd:	cmp    QWORD PTR [rbx+0x18],0x0
   14002d302:	je     0x14002d2da
   14002d304:	inc    DWORD PTR [rbx+0x470]
   14002d30a:	cmp    DWORD PTR [rbx+0x470],0x2
   14002d311:	je     0x14002d4a4
   14002d317:	or     edi,0xffffffff
   14002d31a:	lea    rbp,[rip+0x26a7f]        # 0x140053da0
   14002d321:	and    DWORD PTR [rbx+0x50],0x0
   14002d325:	and    DWORD PTR [rbx+0x2c],0x0
   14002d329:	jmp    0x14002d47c
   14002d32e:	inc    QWORD PTR [rbx+0x18]
   14002d332:	cmp    DWORD PTR [rbx+0x28],0x0
   14002d336:	jl     0x14002d491
   14002d33c:	mov    al,BYTE PTR [rbx+0x41]
   14002d33f:	mov    edx,DWORD PTR [rbx+0x2c]
   14002d342:	sub    al,0x20
   14002d344:	cmp    al,0x5a
   14002d346:	ja     0x14002d357
   14002d348:	movsx  rax,BYTE PTR [rbx+0x41]
   14002d34d:	movzx  ecx,BYTE PTR [rax+rbp*1-0x20]
   14002d352:	and    ecx,0xf
   14002d355:	jmp    0x14002d359
   14002d357:	xor    ecx,ecx
   14002d359:	lea    eax,[rdx+rcx*8]
   14002d35c:	movzx  eax,BYTE PTR [rax+rbp*1]
   14002d360:	shr    eax,0x4
   14002d363:	mov    DWORD PTR [rbx+0x2c],eax
   14002d366:	cmp    eax,0x8
   14002d369:	je     0x14002d4b7
   14002d36f:	test   eax,eax
   14002d371:	je     0x14002d470
   14002d377:	sub    eax,0x1
   14002d37a:	je     0x14002d457
   14002d380:	sub    eax,0x1
   14002d383:	je     0x14002d422
   14002d389:	sub    eax,0x1
   14002d38c:	je     0x14002d3f6
   14002d38e:	sub    eax,0x1
   14002d391:	je     0x14002d3ed
   14002d393:	sub    eax,0x1
   14002d396:	je     0x14002d3c0
   14002d398:	sub    eax,0x1
   14002d39b:	je     0x14002d3b3
   14002d39d:	cmp    eax,0x1
   14002d3a0:	jne    0x14002d4c7
   14002d3a6:	mov    rcx,rbx
   14002d3a9:	call   0x14002e424
   14002d3ae:	jmp    0x14002d478
   14002d3b3:	mov    rcx,rbx
   14002d3b6:	call   0x14002dde4
   14002d3bb:	jmp    0x14002d478
   14002d3c0:	cmp    BYTE PTR [rbx+0x41],0x2a
   14002d3c4:	je     0x14002d3d7
   14002d3c6:	lea    rdx,[rbx+0x38]
   14002d3ca:	mov    rcx,rbx
   14002d3cd:	call   0x14002d1b8
   14002d3d2:	jmp    0x14002d478
   14002d3d7:	add    QWORD PTR [rbx+0x20],0x8
   14002d3dc:	mov    rax,QWORD PTR [rbx+0x20]
   14002d3e0:	mov    ecx,DWORD PTR [rax-0x8]
   14002d3e3:	test   ecx,ecx
   14002d3e5:	cmovs  ecx,edi
   14002d3e8:	mov    DWORD PTR [rbx+0x38],ecx
   14002d3eb:	jmp    0x14002d41e
   14002d3ed:	and    DWORD PTR [rbx+0x38],0x0
   14002d3f1:	jmp    0x14002d47c
   14002d3f6:	cmp    BYTE PTR [rbx+0x41],0x2a
   14002d3fa:	je     0x14002d402
   14002d3fc:	lea    rdx,[rbx+0x34]
   14002d400:	jmp    0x14002d3ca
   14002d402:	add    QWORD PTR [rbx+0x20],0x8
   14002d407:	mov    rax,QWORD PTR [rbx+0x20]
   14002d40b:	mov    ecx,DWORD PTR [rax-0x8]
   14002d40e:	mov    DWORD PTR [rbx+0x34],ecx
   14002d411:	test   ecx,ecx
   14002d413:	jns    0x14002d41e
   14002d415:	or     DWORD PTR [rbx+0x30],0x4
   14002d419:	neg    ecx
   14002d41b:	mov    DWORD PTR [rbx+0x34],ecx
   14002d41e:	mov    al,0x1
   14002d420:	jmp    0x14002d478
   14002d422:	mov    al,BYTE PTR [rbx+0x41]
   14002d425:	cmp    al,0x20
   14002d427:	je     0x14002d451
   14002d429:	cmp    al,0x23
   14002d42b:	je     0x14002d44b
   14002d42d:	cmp    al,0x2b
   14002d42f:	je     0x14002d445
   14002d431:	cmp    al,0x2d
   14002d433:	je     0x14002d43f
   14002d435:	cmp    al,0x30
   14002d437:	jne    0x14002d47c
   14002d439:	or     DWORD PTR [rbx+0x30],0x8
   14002d43d:	jmp    0x14002d47c
   14002d43f:	or     DWORD PTR [rbx+0x30],0x4
   14002d443:	jmp    0x14002d47c
   14002d445:	or     DWORD PTR [rbx+0x30],0x1
   14002d449:	jmp    0x14002d47c
   14002d44b:	or     DWORD PTR [rbx+0x30],0x20
   14002d44f:	jmp    0x14002d47c
   14002d451:	or     DWORD PTR [rbx+0x30],0x2
   14002d455:	jmp    0x14002d47c
   14002d457:	and    DWORD PTR [rbx+0x34],0x0
   14002d45b:	and    DWORD PTR [rbx+0x30],0x0
   14002d45f:	and    DWORD PTR [rbx+0x3c],0x0
   14002d463:	mov    BYTE PTR [rbx+0x40],0x0
   14002d467:	mov    DWORD PTR [rbx+0x38],edi
   14002d46a:	mov    BYTE PTR [rbx+0x54],0x0
   14002d46e:	jmp    0x14002d47c
   14002d470:	mov    rcx,rbx
   14002d473:	call   0x14002dbd4
   14002d478:	test   al,al
   14002d47a:	je     0x14002d4c7
   14002d47c:	mov    rax,QWORD PTR [rbx+0x18]
   14002d480:	mov    cl,BYTE PTR [rax]
   14002d482:	mov    BYTE PTR [rbx+0x41],cl
   14002d485:	test   cl,cl
   14002d487:	jne    0x14002d32e
   14002d48d:	inc    QWORD PTR [rbx+0x18]
   14002d491:	inc    DWORD PTR [rbx+0x470]
   14002d497:	cmp    DWORD PTR [rbx+0x470],0x2
   14002d49e:	jne    0x14002d321
   14002d4a4:	mov    eax,DWORD PTR [rbx+0x28]
   14002d4a7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d4ac:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d4b1:	add    rsp,0x20
   14002d4b5:	pop    rdi
   14002d4b6:	ret    
   14002d4b7:	call   0x140032c50
   14002d4bc:	mov    DWORD PTR [rax],0x16
   14002d4c2:	call   0x1400307d0
   14002d4c7:	mov    eax,edi
   14002d4c9:	jmp    0x14002d4a7
   14002d4cb:	int3   
   14002d4cc:	mov    QWORD PTR [rsp+0x8],rbx
   14002d4d1:	mov    QWORD PTR [rsp+0x10],rbp
   14002d4d6:	mov    QWORD PTR [rsp+0x18],rsi
   14002d4db:	push   rdi
   14002d4dc:	sub    rsp,0x20
   14002d4e0:	xor    esi,esi
   14002d4e2:	mov    rbx,rcx
   14002d4e5:	cmp    QWORD PTR [rcx+0x468],rsi
   14002d4ec:	jne    0x14002d506
   14002d4ee:	call   0x140032c50
   14002d4f3:	mov    DWORD PTR [rax],0x16
   14002d4f9:	call   0x1400307d0
   14002d4fe:	or     eax,0xffffffff
   14002d501:	jmp    0x14002d6b5
   14002d506:	cmp    QWORD PTR [rcx+0x18],rsi
   14002d50a:	je     0x14002d4ee
   14002d50c:	inc    DWORD PTR [rcx+0x470]
   14002d512:	cmp    DWORD PTR [rcx+0x470],0x2
   14002d519:	je     0x14002d6b2
   14002d51f:	or     edi,0xffffffff
   14002d522:	lea    rbp,[rip+0x268d7]        # 0x140053e00
   14002d529:	mov    DWORD PTR [rbx+0x50],esi
   14002d52c:	mov    DWORD PTR [rbx+0x2c],esi
   14002d52f:	jmp    0x14002d67f
   14002d534:	inc    QWORD PTR [rbx+0x18]
   14002d538:	cmp    DWORD PTR [rbx+0x28],esi
   14002d53b:	jl     0x14002d694
   14002d541:	mov    al,BYTE PTR [rbx+0x41]
   14002d544:	mov    edx,DWORD PTR [rbx+0x2c]
   14002d547:	sub    al,0x20
   14002d549:	cmp    al,0x5a
   14002d54b:	ja     0x14002d55c
   14002d54d:	movsx  rax,BYTE PTR [rbx+0x41]
   14002d552:	movzx  ecx,BYTE PTR [rax+rbp*1-0x20]
   14002d557:	and    ecx,0xf
   14002d55a:	jmp    0x14002d55e
   14002d55c:	mov    ecx,esi
   14002d55e:	lea    eax,[rdx+rcx*8]
   14002d561:	add    ecx,eax
   14002d563:	mov    eax,ecx
   14002d565:	movzx  ecx,BYTE PTR [rcx+rbp*1]
   14002d569:	shr    ecx,0x4
   14002d56c:	mov    DWORD PTR [rbx+0x2c],ecx
   14002d56f:	cmp    ecx,0x8
   14002d572:	je     0x14002d6ca
   14002d578:	test   ecx,ecx
   14002d57a:	je     0x14002d673
   14002d580:	sub    ecx,0x1
   14002d583:	je     0x14002d65f
   14002d589:	sub    ecx,0x1
   14002d58c:	je     0x14002d62a
   14002d592:	sub    ecx,0x1
   14002d595:	je     0x14002d5fe
   14002d597:	sub    ecx,0x1
   14002d59a:	je     0x14002d5f6
   14002d59c:	sub    ecx,0x1
   14002d59f:	je     0x14002d5c9
   14002d5a1:	sub    ecx,0x1
   14002d5a4:	je     0x14002d5bc
   14002d5a6:	cmp    ecx,0x1
   14002d5a9:	jne    0x14002d6da
   14002d5af:	mov    rcx,rbx
   14002d5b2:	call   0x14002e6a0
   14002d5b7:	jmp    0x14002d67b
   14002d5bc:	mov    rcx,rbx
   14002d5bf:	call   0x14002df60
   14002d5c4:	jmp    0x14002d67b
   14002d5c9:	cmp    BYTE PTR [rbx+0x41],0x2a
   14002d5cd:	je     0x14002d5e0
   14002d5cf:	lea    rdx,[rbx+0x38]
   14002d5d3:	mov    rcx,rbx
   14002d5d6:	call   0x14002d1b8
   14002d5db:	jmp    0x14002d67b
   14002d5e0:	add    QWORD PTR [rbx+0x20],0x8
   14002d5e5:	mov    rax,QWORD PTR [rbx+0x20]
   14002d5e9:	mov    ecx,DWORD PTR [rax-0x8]
   14002d5ec:	test   ecx,ecx
   14002d5ee:	cmovs  ecx,edi
   14002d5f1:	mov    DWORD PTR [rbx+0x38],ecx
   14002d5f4:	jmp    0x14002d626
   14002d5f6:	mov    DWORD PTR [rbx+0x38],esi
   14002d5f9:	jmp    0x14002d67f
   14002d5fe:	cmp    BYTE PTR [rbx+0x41],0x2a
   14002d602:	je     0x14002d60a
   14002d604:	lea    rdx,[rbx+0x34]
   14002d608:	jmp    0x14002d5d3
   14002d60a:	add    QWORD PTR [rbx+0x20],0x8
   14002d60f:	mov    rax,QWORD PTR [rbx+0x20]
   14002d613:	mov    ecx,DWORD PTR [rax-0x8]
   14002d616:	mov    DWORD PTR [rbx+0x34],ecx
   14002d619:	test   ecx,ecx
   14002d61b:	jns    0x14002d626
   14002d61d:	or     DWORD PTR [rbx+0x30],0x4
   14002d621:	neg    ecx
   14002d623:	mov    DWORD PTR [rbx+0x34],ecx
   14002d626:	mov    al,0x1
   14002d628:	jmp    0x14002d67b
   14002d62a:	mov    al,BYTE PTR [rbx+0x41]
   14002d62d:	cmp    al,0x20
   14002d62f:	je     0x14002d659
   14002d631:	cmp    al,0x23
   14002d633:	je     0x14002d653
   14002d635:	cmp    al,0x2b
   14002d637:	je     0x14002d64d
   14002d639:	cmp    al,0x2d
   14002d63b:	je     0x14002d647
   14002d63d:	cmp    al,0x30
   14002d63f:	jne    0x14002d67f
   14002d641:	or     DWORD PTR [rbx+0x30],0x8
   14002d645:	jmp    0x14002d67f
   14002d647:	or     DWORD PTR [rbx+0x30],0x4
   14002d64b:	jmp    0x14002d67f
   14002d64d:	or     DWORD PTR [rbx+0x30],0x1
   14002d651:	jmp    0x14002d67f
   14002d653:	or     DWORD PTR [rbx+0x30],0x20
   14002d657:	jmp    0x14002d67f
   14002d659:	or     DWORD PTR [rbx+0x30],0x2
   14002d65d:	jmp    0x14002d67f
   14002d65f:	mov    QWORD PTR [rbx+0x30],rsi
   14002d663:	mov    BYTE PTR [rbx+0x40],sil
   14002d667:	mov    DWORD PTR [rbx+0x38],edi
   14002d66a:	mov    DWORD PTR [rbx+0x3c],esi
   14002d66d:	mov    BYTE PTR [rbx+0x54],sil
   14002d671:	jmp    0x14002d67f
   14002d673:	mov    rcx,rbx
   14002d676:	call   0x14002dc44
   14002d67b:	test   al,al
   14002d67d:	je     0x14002d6da
   14002d67f:	mov    rax,QWORD PTR [rbx+0x18]
   14002d683:	mov    cl,BYTE PTR [rax]
   14002d685:	mov    BYTE PTR [rbx+0x41],cl
   14002d688:	test   cl,cl
   14002d68a:	jne    0x14002d534
   14002d690:	inc    QWORD PTR [rbx+0x18]
   14002d694:	cmp    DWORD PTR [rbx+0x2c],esi
   14002d697:	je     0x14002d69f
   14002d699:	cmp    DWORD PTR [rbx+0x2c],0x7
   14002d69d:	jne    0x14002d6ca
   14002d69f:	inc    DWORD PTR [rbx+0x470]
   14002d6a5:	cmp    DWORD PTR [rbx+0x470],0x2
   14002d6ac:	jne    0x14002d529
   14002d6b2:	mov    eax,DWORD PTR [rbx+0x28]
   14002d6b5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d6ba:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d6bf:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d6c4:	add    rsp,0x20
   14002d6c8:	pop    rdi
   14002d6c9:	ret    
   14002d6ca:	call   0x140032c50
   14002d6cf:	mov    DWORD PTR [rax],0x16
   14002d6d5:	call   0x1400307d0
   14002d6da:	mov    eax,edi
   14002d6dc:	jmp    0x14002d6b5
   14002d6de:	int3   
   14002d6df:	int3   
   14002d6e0:	mov    rax,rsp
   14002d6e3:	mov    QWORD PTR [rax+0x8],rbx
   14002d6e7:	mov    QWORD PTR [rax+0x10],rsi
   14002d6eb:	mov    QWORD PTR [rax+0x18],rdi
   14002d6ef:	mov    QWORD PTR [rax+0x20],r14
   14002d6f3:	push   r15
   14002d6f5:	sub    rsp,0x20
   14002d6f9:	xor    esi,esi
   14002d6fb:	mov    rbx,rcx
   14002d6fe:	cmp    QWORD PTR [rcx+0x468],rsi
   14002d705:	jne    0x14002d71f
   14002d707:	call   0x140032c50
   14002d70c:	mov    DWORD PTR [rax],0x16
   14002d712:	call   0x1400307d0
   14002d717:	or     eax,0xffffffff
   14002d71a:	jmp    0x14002d926
   14002d71f:	cmp    QWORD PTR [rcx+0x18],rsi
   14002d723:	je     0x14002d707
   14002d725:	inc    DWORD PTR [rcx+0x470]
   14002d72b:	cmp    DWORD PTR [rcx+0x470],0x2
   14002d732:	je     0x14002d923
   14002d738:	or     edi,0xffffffff
   14002d73b:	lea    r15,[rip+0x2665e]        # 0x140053da0
   14002d742:	lea    r14d,[rdi+0x21]
   14002d746:	mov    DWORD PTR [rbx+0x50],esi
   14002d749:	mov    DWORD PTR [rbx+0x2c],esi
   14002d74c:	jmp    0x14002d8f7
   14002d751:	add    QWORD PTR [rbx+0x18],0x2
   14002d756:	cmp    DWORD PTR [rbx+0x28],esi
   14002d759:	jl     0x14002d910
   14002d75f:	movzx  eax,WORD PTR [rbx+0x42]
   14002d763:	mov    edx,DWORD PTR [rbx+0x2c]
   14002d766:	sub    ax,r14w
   14002d76a:	cmp    ax,0x5a
   14002d76e:	ja     0x14002d77f
   14002d770:	movzx  eax,WORD PTR [rbx+0x42]
   14002d774:	movzx  ecx,BYTE PTR [rax+r15*1-0x20]
   14002d77a:	and    ecx,0xf
   14002d77d:	jmp    0x14002d781
   14002d77f:	mov    ecx,esi
   14002d781:	lea    eax,[rdx+rcx*8]
   14002d784:	movzx  eax,BYTE PTR [rax+r15*1]
   14002d789:	shr    eax,0x4
   14002d78c:	mov    DWORD PTR [rbx+0x2c],eax
   14002d78f:	cmp    eax,0x8
   14002d792:	je     0x14002d941
   14002d798:	test   eax,eax
   14002d79a:	je     0x14002d8a7
   14002d7a0:	sub    eax,0x1
   14002d7a3:	je     0x14002d893
   14002d7a9:	sub    eax,0x1
   14002d7ac:	je     0x14002d854
   14002d7b2:	sub    eax,0x1
   14002d7b5:	je     0x14002d822
   14002d7b7:	sub    eax,0x1
   14002d7ba:	je     0x14002d81a
   14002d7bc:	sub    eax,0x1
   14002d7bf:	je     0x14002d7e9
   14002d7c1:	sub    eax,0x1
   14002d7c4:	je     0x14002d7dc
   14002d7c6:	cmp    eax,0x1
   14002d7c9:	jne    0x14002d951
   14002d7cf:	mov    rcx,rbx
   14002d7d2:	call   0x14002e91c
   14002d7d7:	jmp    0x14002d8f3
   14002d7dc:	mov    rcx,rbx
   14002d7df:	call   0x14002e0dc
   14002d7e4:	jmp    0x14002d8f3
   14002d7e9:	cmp    WORD PTR [rbx+0x42],0x2a
   14002d7ee:	je     0x14002d801
   14002d7f0:	lea    rdx,[rbx+0x38]
   14002d7f4:	mov    rcx,rbx
   14002d7f7:	call   0x14002d23c
   14002d7fc:	jmp    0x14002d8f3
   14002d801:	add    QWORD PTR [rbx+0x20],0x8
   14002d806:	mov    rax,QWORD PTR [rbx+0x20]
   14002d80a:	mov    ecx,DWORD PTR [rax-0x8]
   14002d80d:	test   ecx,ecx
   14002d80f:	cmovs  ecx,edi
   14002d812:	mov    DWORD PTR [rbx+0x38],ecx
   14002d815:	jmp    0x14002d8f1
   14002d81a:	mov    DWORD PTR [rbx+0x38],esi
   14002d81d:	jmp    0x14002d8f7
   14002d822:	cmp    WORD PTR [rbx+0x42],0x2a
   14002d827:	je     0x14002d82f
   14002d829:	lea    rdx,[rbx+0x34]
   14002d82d:	jmp    0x14002d7f4
   14002d82f:	add    QWORD PTR [rbx+0x20],0x8
   14002d834:	mov    rax,QWORD PTR [rbx+0x20]
   14002d838:	mov    ecx,DWORD PTR [rax-0x8]
   14002d83b:	mov    DWORD PTR [rbx+0x34],ecx
   14002d83e:	test   ecx,ecx
   14002d840:	jns    0x14002d8f1
   14002d846:	or     DWORD PTR [rbx+0x30],0x4
   14002d84a:	neg    ecx
   14002d84c:	mov    DWORD PTR [rbx+0x34],ecx
   14002d84f:	jmp    0x14002d8f1
   14002d854:	movzx  eax,WORD PTR [rbx+0x42]
   14002d858:	cmp    eax,r14d
   14002d85b:	je     0x14002d88d
   14002d85d:	cmp    eax,0x23
   14002d860:	je     0x14002d887
   14002d862:	cmp    eax,0x2b
   14002d865:	je     0x14002d881
   14002d867:	cmp    eax,0x2d
   14002d86a:	je     0x14002d87b
   14002d86c:	cmp    eax,0x30
   14002d86f:	jne    0x14002d8f7
   14002d875:	or     DWORD PTR [rbx+0x30],0x8
   14002d879:	jmp    0x14002d8f7
   14002d87b:	or     DWORD PTR [rbx+0x30],0x4
   14002d87f:	jmp    0x14002d8f7
   14002d881:	or     DWORD PTR [rbx+0x30],0x1
   14002d885:	jmp    0x14002d8f7
   14002d887:	or     DWORD PTR [rbx+0x30],r14d
   14002d88b:	jmp    0x14002d8f7
   14002d88d:	or     DWORD PTR [rbx+0x30],0x2
   14002d891:	jmp    0x14002d8f7
   14002d893:	mov    QWORD PTR [rbx+0x30],rsi
   14002d897:	mov    BYTE PTR [rbx+0x40],sil
   14002d89b:	mov    DWORD PTR [rbx+0x38],edi
   14002d89e:	mov    DWORD PTR [rbx+0x3c],esi
   14002d8a1:	mov    BYTE PTR [rbx+0x54],sil
   14002d8a5:	jmp    0x14002d8f7
   14002d8a7:	movzx  r8d,WORD PTR [rbx+0x42]
   14002d8ac:	mov    BYTE PTR [rbx+0x54],0x1
   14002d8b0:	mov    rax,QWORD PTR [rbx+0x468]
   14002d8b7:	mov    ecx,DWORD PTR [rax+0x14]
   14002d8ba:	shr    ecx,0xc
   14002d8bd:	test   cl,0x1
   14002d8c0:	je     0x14002d8cf
   14002d8c2:	mov    rax,QWORD PTR [rbx+0x468]
   14002d8c9:	cmp    QWORD PTR [rax+0x8],rsi
   14002d8cd:	je     0x14002d8ee
   14002d8cf:	mov    rdx,QWORD PTR [rbx+0x468]
   14002d8d6:	movzx  ecx,r8w
   14002d8da:	call   0x14003a428
   14002d8df:	mov    ecx,0xffff
   14002d8e4:	cmp    ax,cx
   14002d8e7:	jne    0x14002d8ee
   14002d8e9:	mov    DWORD PTR [rbx+0x28],edi
   14002d8ec:	jmp    0x14002d8f1
   14002d8ee:	inc    DWORD PTR [rbx+0x28]
   14002d8f1:	mov    al,0x1
   14002d8f3:	test   al,al
   14002d8f5:	je     0x14002d951
   14002d8f7:	mov    rax,QWORD PTR [rbx+0x18]
   14002d8fb:	movzx  ecx,WORD PTR [rax]
   14002d8fe:	mov    WORD PTR [rbx+0x42],cx
   14002d902:	test   cx,cx
   14002d905:	jne    0x14002d751
   14002d90b:	add    QWORD PTR [rbx+0x18],0x2
   14002d910:	inc    DWORD PTR [rbx+0x470]
   14002d916:	cmp    DWORD PTR [rbx+0x470],0x2
   14002d91d:	jne    0x14002d746
   14002d923:	mov    eax,DWORD PTR [rbx+0x28]
   14002d926:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d92b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d930:	mov    rdi,QWORD PTR [rsp+0x40]
   14002d935:	mov    r14,QWORD PTR [rsp+0x48]
   14002d93a:	add    rsp,0x20
   14002d93e:	pop    r15
   14002d940:	ret    
   14002d941:	call   0x140032c50
   14002d946:	mov    DWORD PTR [rax],0x16
   14002d94c:	call   0x1400307d0
   14002d951:	mov    eax,edi
   14002d953:	jmp    0x14002d926
   14002d955:	int3   
   14002d956:	int3   
   14002d957:	int3   
   14002d958:	mov    rax,rsp
   14002d95b:	mov    QWORD PTR [rax+0x8],rbx
   14002d95f:	mov    QWORD PTR [rax+0x10],rbp
   14002d963:	mov    QWORD PTR [rax+0x18],rsi
   14002d967:	mov    QWORD PTR [rax+0x20],rdi
   14002d96b:	push   r14
   14002d96d:	sub    rsp,0x20
   14002d971:	xor    esi,esi
   14002d973:	mov    rbx,rcx
   14002d976:	cmp    QWORD PTR [rcx+0x468],rsi
   14002d97d:	jne    0x14002d997
   14002d97f:	call   0x140032c50
   14002d984:	mov    DWORD PTR [rax],0x16
   14002d98a:	call   0x1400307d0
   14002d98f:	or     eax,0xffffffff
   14002d992:	jmp    0x14002dba2
   14002d997:	cmp    QWORD PTR [rcx+0x18],rsi
   14002d99b:	je     0x14002d97f
   14002d99d:	inc    DWORD PTR [rcx+0x470]
   14002d9a3:	cmp    DWORD PTR [rcx+0x470],0x2
   14002d9aa:	je     0x14002db9f
   14002d9b0:	or     edi,0xffffffff
   14002d9b3:	lea    r14,[rip+0x263e6]        # 0x140053da0
   14002d9ba:	lea    ebp,[rdi+0x21]
   14002d9bd:	mov    DWORD PTR [rbx+0x50],esi
   14002d9c0:	mov    DWORD PTR [rbx+0x2c],esi
   14002d9c3:	jmp    0x14002db73
   14002d9c8:	add    QWORD PTR [rbx+0x18],0x2
   14002d9cd:	cmp    DWORD PTR [rbx+0x28],esi
   14002d9d0:	jl     0x14002db8c
   14002d9d6:	movzx  eax,WORD PTR [rbx+0x42]
   14002d9da:	mov    edx,DWORD PTR [rbx+0x2c]
   14002d9dd:	sub    ax,bp
   14002d9e0:	cmp    ax,0x5a
   14002d9e4:	ja     0x14002d9f5
   14002d9e6:	movzx  eax,WORD PTR [rbx+0x42]
   14002d9ea:	movzx  ecx,BYTE PTR [rax+r14*1-0x20]
   14002d9f0:	and    ecx,0xf
   14002d9f3:	jmp    0x14002d9f7
   14002d9f5:	mov    ecx,esi
   14002d9f7:	lea    eax,[rdx+rcx*8]
   14002d9fa:	movzx  eax,BYTE PTR [rax+r14*1]
   14002d9ff:	shr    eax,0x4
   14002da02:	mov    DWORD PTR [rbx+0x2c],eax
   14002da05:	cmp    eax,0x8
   14002da08:	je     0x14002dbbd
   14002da0e:	test   eax,eax
   14002da10:	je     0x14002db1e
   14002da16:	sub    eax,0x1
   14002da19:	je     0x14002db0a
   14002da1f:	sub    eax,0x1
   14002da22:	je     0x14002daca
   14002da28:	sub    eax,0x1
   14002da2b:	je     0x14002da98
   14002da2d:	sub    eax,0x1
   14002da30:	je     0x14002da90
   14002da32:	sub    eax,0x1
   14002da35:	je     0x14002da5f
   14002da37:	sub    eax,0x1
   14002da3a:	je     0x14002da52
   14002da3c:	cmp    eax,0x1
   14002da3f:	jne    0x14002dbcd
   14002da45:	mov    rcx,rbx
   14002da48:	call   0x14002ebe8
   14002da4d:	jmp    0x14002db6f
   14002da52:	mov    rcx,rbx
   14002da55:	call   0x14002e280
   14002da5a:	jmp    0x14002db6f
   14002da5f:	cmp    WORD PTR [rbx+0x42],0x2a
   14002da64:	je     0x14002da77
   14002da66:	lea    rdx,[rbx+0x38]
   14002da6a:	mov    rcx,rbx
   14002da6d:	call   0x14002d23c
   14002da72:	jmp    0x14002db6f
   14002da77:	add    QWORD PTR [rbx+0x20],0x8
   14002da7c:	mov    rax,QWORD PTR [rbx+0x20]
   14002da80:	mov    ecx,DWORD PTR [rax-0x8]
   14002da83:	test   ecx,ecx
   14002da85:	cmovs  ecx,edi
   14002da88:	mov    DWORD PTR [rbx+0x38],ecx
   14002da8b:	jmp    0x14002db6d
   14002da90:	mov    DWORD PTR [rbx+0x38],esi
   14002da93:	jmp    0x14002db73
   14002da98:	cmp    WORD PTR [rbx+0x42],0x2a
   14002da9d:	je     0x14002daa5
   14002da9f:	lea    rdx,[rbx+0x34]
   14002daa3:	jmp    0x14002da6a
   14002daa5:	add    QWORD PTR [rbx+0x20],0x8
   14002daaa:	mov    rax,QWORD PTR [rbx+0x20]
   14002daae:	mov    ecx,DWORD PTR [rax-0x8]
   14002dab1:	mov    DWORD PTR [rbx+0x34],ecx
   14002dab4:	test   ecx,ecx
   14002dab6:	jns    0x14002db6d
   14002dabc:	or     DWORD PTR [rbx+0x30],0x4
   14002dac0:	neg    ecx
   14002dac2:	mov    DWORD PTR [rbx+0x34],ecx
   14002dac5:	jmp    0x14002db6d
   14002daca:	movzx  eax,WORD PTR [rbx+0x42]
   14002dace:	cmp    eax,ebp
   14002dad0:	je     0x14002db04
   14002dad2:	cmp    eax,0x23
   14002dad5:	je     0x14002daff
   14002dad7:	cmp    eax,0x2b
   14002dada:	je     0x14002daf9
   14002dadc:	cmp    eax,0x2d
   14002dadf:	je     0x14002daf3
   14002dae1:	cmp    eax,0x30
   14002dae4:	jne    0x14002db73
   14002daea:	or     DWORD PTR [rbx+0x30],0x8
   14002daee:	jmp    0x14002db73
   14002daf3:	or     DWORD PTR [rbx+0x30],0x4
   14002daf7:	jmp    0x14002db73
   14002daf9:	or     DWORD PTR [rbx+0x30],0x1
   14002dafd:	jmp    0x14002db73
   14002daff:	or     DWORD PTR [rbx+0x30],ebp
   14002db02:	jmp    0x14002db73
   14002db04:	or     DWORD PTR [rbx+0x30],0x2
   14002db08:	jmp    0x14002db73
   14002db0a:	mov    QWORD PTR [rbx+0x30],rsi
   14002db0e:	mov    BYTE PTR [rbx+0x40],sil
   14002db12:	mov    DWORD PTR [rbx+0x38],edi
   14002db15:	mov    DWORD PTR [rbx+0x3c],esi
   14002db18:	mov    BYTE PTR [rbx+0x54],sil
   14002db1c:	jmp    0x14002db73
   14002db1e:	movzx  edx,WORD PTR [rbx+0x42]
   14002db22:	mov    BYTE PTR [rbx+0x54],0x1
   14002db26:	mov    rcx,QWORD PTR [rbx+0x468]
   14002db2d:	mov    rax,QWORD PTR [rcx+0x8]
   14002db31:	cmp    QWORD PTR [rcx+0x10],rax
   14002db35:	jne    0x14002db47
   14002db37:	cmp    BYTE PTR [rcx+0x18],sil
   14002db3b:	je     0x14002db42
   14002db3d:	inc    DWORD PTR [rbx+0x28]
   14002db40:	jmp    0x14002db6d
   14002db42:	mov    DWORD PTR [rbx+0x28],edi
   14002db45:	jmp    0x14002db6d
   14002db47:	inc    DWORD PTR [rbx+0x28]
   14002db4a:	mov    rax,QWORD PTR [rbx+0x468]
   14002db51:	inc    QWORD PTR [rax+0x10]
   14002db55:	mov    rax,QWORD PTR [rbx+0x468]
   14002db5c:	mov    rcx,QWORD PTR [rax]
   14002db5f:	mov    WORD PTR [rcx],dx
   14002db62:	mov    rax,QWORD PTR [rbx+0x468]
   14002db69:	add    QWORD PTR [rax],0x2
   14002db6d:	mov    al,0x1
   14002db6f:	test   al,al
   14002db71:	je     0x14002dbcd
   14002db73:	mov    rax,QWORD PTR [rbx+0x18]
   14002db77:	movzx  ecx,WORD PTR [rax]
   14002db7a:	mov    WORD PTR [rbx+0x42],cx
   14002db7e:	test   cx,cx
   14002db81:	jne    0x14002d9c8
   14002db87:	add    QWORD PTR [rbx+0x18],0x2
   14002db8c:	inc    DWORD PTR [rbx+0x470]
   14002db92:	cmp    DWORD PTR [rbx+0x470],0x2
   14002db99:	jne    0x14002d9bd
   14002db9f:	mov    eax,DWORD PTR [rbx+0x28]
   14002dba2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dba7:	mov    rbp,QWORD PTR [rsp+0x38]
   14002dbac:	mov    rsi,QWORD PTR [rsp+0x40]
   14002dbb1:	mov    rdi,QWORD PTR [rsp+0x48]
   14002dbb6:	add    rsp,0x20
   14002dbba:	pop    r14
   14002dbbc:	ret    
   14002dbbd:	call   0x140032c50
   14002dbc2:	mov    DWORD PTR [rax],0x16
   14002dbc8:	call   0x1400307d0
   14002dbcd:	mov    eax,edi
   14002dbcf:	jmp    0x14002dba2
   14002dbd1:	int3   
   14002dbd2:	int3   
   14002dbd3:	int3   
   14002dbd4:	rex push rbx
   14002dbd6:	sub    rsp,0x20
   14002dbda:	xor    edx,edx
   14002dbdc:	mov    rbx,rcx
   14002dbdf:	call   0x14002dcb8
   14002dbe4:	test   al,al
   14002dbe6:	je     0x14002dc2b
   14002dbe8:	mov    rax,QWORD PTR [rbx+0x468]
   14002dbef:	mov    dl,BYTE PTR [rbx+0x41]
   14002dbf2:	mov    ecx,DWORD PTR [rax+0x14]
   14002dbf5:	shr    ecx,0xc
   14002dbf8:	test   cl,0x1
   14002dbfb:	je     0x14002dc0b
   14002dbfd:	mov    rax,QWORD PTR [rbx+0x468]
   14002dc04:	cmp    QWORD PTR [rax+0x8],0x0
   14002dc09:	je     0x14002dc24
   14002dc0b:	movsx  ecx,dl
   14002dc0e:	mov    rdx,QWORD PTR [rbx+0x468]
   14002dc15:	call   0x14003a5cc
   14002dc1a:	cmp    eax,0xffffffff
   14002dc1d:	jne    0x14002dc24
   14002dc1f:	or     DWORD PTR [rbx+0x28],eax
   14002dc22:	jmp    0x14002dc27
   14002dc24:	inc    DWORD PTR [rbx+0x28]
   14002dc27:	mov    al,0x1
   14002dc29:	jmp    0x14002dc3d
   14002dc2b:	call   0x140032c50
   14002dc30:	mov    DWORD PTR [rax],0x16
   14002dc36:	call   0x1400307d0
   14002dc3b:	xor    al,al
   14002dc3d:	add    rsp,0x20
   14002dc41:	pop    rbx
   14002dc42:	ret    
   14002dc43:	int3   
   14002dc44:	rex push rbx
   14002dc46:	sub    rsp,0x20
   14002dc4a:	xor    edx,edx
   14002dc4c:	mov    rbx,rcx
   14002dc4f:	call   0x14002dd4c
   14002dc54:	test   al,al
   14002dc56:	je     0x14002dca0
   14002dc58:	mov    rcx,QWORD PTR [rbx+0x468]
   14002dc5f:	mov    r8b,BYTE PTR [rbx+0x41]
   14002dc63:	mov    rax,QWORD PTR [rcx+0x8]
   14002dc67:	cmp    QWORD PTR [rcx+0x10],rax
   14002dc6b:	jne    0x14002dc7e
   14002dc6d:	cmp    BYTE PTR [rcx+0x18],0x0
   14002dc71:	je     0x14002dc78
   14002dc73:	inc    DWORD PTR [rbx+0x28]
   14002dc76:	jmp    0x14002dc9c
   14002dc78:	or     DWORD PTR [rbx+0x28],0xffffffff
   14002dc7c:	jmp    0x14002dc9c
   14002dc7e:	inc    DWORD PTR [rbx+0x28]
   14002dc81:	inc    QWORD PTR [rcx+0x10]
   14002dc85:	mov    rcx,QWORD PTR [rbx+0x468]
   14002dc8c:	mov    rdx,QWORD PTR [rcx]
   14002dc8f:	mov    BYTE PTR [rdx],r8b
   14002dc92:	mov    rcx,QWORD PTR [rbx+0x468]
   14002dc99:	inc    QWORD PTR [rcx]
   14002dc9c:	mov    al,0x1
   14002dc9e:	jmp    0x14002dcb2
   14002dca0:	call   0x140032c50
   14002dca5:	mov    DWORD PTR [rax],0x16
   14002dcab:	call   0x1400307d0
   14002dcb0:	xor    al,al
   14002dcb2:	add    rsp,0x20
   14002dcb6:	pop    rbx
   14002dcb7:	ret    
   14002dcb8:	rex push rbx
   14002dcba:	sub    rsp,0x20
   14002dcbe:	mov    rax,QWORD PTR [rcx+0x8]
   14002dcc2:	mov    rbx,rcx
   14002dcc5:	movzx  edx,BYTE PTR [rcx+0x41]
   14002dcc9:	mov    BYTE PTR [rcx+0x54],0x0
   14002dccd:	mov    ecx,0x8000
   14002dcd2:	mov    rax,QWORD PTR [rax]
   14002dcd5:	mov    rax,QWORD PTR [rax]
   14002dcd8:	test   WORD PTR [rax+rdx*2],cx
   14002dcdc:	je     0x14002dd42
   14002dcde:	mov    rax,QWORD PTR [rbx+0x468]
   14002dce5:	mov    ecx,DWORD PTR [rax+0x14]
   14002dce8:	shr    ecx,0xc
   14002dceb:	test   cl,0x1
   14002dcee:	je     0x14002dcfe
   14002dcf0:	mov    rax,QWORD PTR [rbx+0x468]
   14002dcf7:	cmp    QWORD PTR [rax+0x8],0x0
   14002dcfc:	je     0x14002dd17
   14002dcfe:	movsx  ecx,dl
   14002dd01:	mov    rdx,QWORD PTR [rbx+0x468]
   14002dd08:	call   0x14003a5cc
   14002dd0d:	cmp    eax,0xffffffff
   14002dd10:	jne    0x14002dd17
   14002dd12:	or     DWORD PTR [rbx+0x28],eax
   14002dd15:	jmp    0x14002dd1a
   14002dd17:	inc    DWORD PTR [rbx+0x28]
   14002dd1a:	mov    rax,QWORD PTR [rbx+0x18]
   14002dd1e:	mov    cl,BYTE PTR [rax]
   14002dd20:	inc    rax
   14002dd23:	mov    BYTE PTR [rbx+0x41],cl
   14002dd26:	mov    QWORD PTR [rbx+0x18],rax
   14002dd2a:	test   cl,cl
   14002dd2c:	jne    0x14002dd42
   14002dd2e:	call   0x140032c50
   14002dd33:	mov    DWORD PTR [rax],0x16
   14002dd39:	call   0x1400307d0
   14002dd3e:	xor    al,al
   14002dd40:	jmp    0x14002dd44
   14002dd42:	mov    al,0x1
   14002dd44:	add    rsp,0x20
   14002dd48:	pop    rbx
   14002dd49:	ret    
   14002dd4a:	int3   
   14002dd4b:	int3   
   14002dd4c:	sub    rsp,0x28
   14002dd50:	mov    rax,QWORD PTR [rcx+0x8]
   14002dd54:	mov    rdx,rcx
   14002dd57:	movzx  r8d,BYTE PTR [rcx+0x41]
   14002dd5c:	mov    BYTE PTR [rcx+0x54],0x0
   14002dd60:	mov    ecx,0x8000
   14002dd65:	mov    rax,QWORD PTR [rax]
   14002dd68:	mov    rax,QWORD PTR [rax]
   14002dd6b:	test   WORD PTR [rax+r8*2],cx
   14002dd70:	je     0x14002ddda
   14002dd72:	mov    rcx,QWORD PTR [rdx+0x468]
   14002dd79:	mov    rax,QWORD PTR [rcx+0x8]
   14002dd7d:	cmp    QWORD PTR [rcx+0x10],rax
   14002dd81:	jne    0x14002dd94
   14002dd83:	cmp    BYTE PTR [rcx+0x18],0x0
   14002dd87:	je     0x14002dd8e
   14002dd89:	inc    DWORD PTR [rdx+0x28]
   14002dd8c:	jmp    0x14002ddb2
   14002dd8e:	or     DWORD PTR [rdx+0x28],0xffffffff
   14002dd92:	jmp    0x14002ddb2
   14002dd94:	inc    DWORD PTR [rdx+0x28]
   14002dd97:	inc    QWORD PTR [rcx+0x10]
   14002dd9b:	mov    rax,QWORD PTR [rdx+0x468]
   14002dda2:	mov    rcx,QWORD PTR [rax]
   14002dda5:	mov    BYTE PTR [rcx],r8b
   14002dda8:	mov    rax,QWORD PTR [rdx+0x468]
   14002ddaf:	inc    QWORD PTR [rax]
   14002ddb2:	mov    rax,QWORD PTR [rdx+0x18]
   14002ddb6:	mov    cl,BYTE PTR [rax]
   14002ddb8:	inc    rax
   14002ddbb:	mov    BYTE PTR [rdx+0x41],cl
   14002ddbe:	mov    QWORD PTR [rdx+0x18],rax
   14002ddc2:	test   cl,cl
   14002ddc4:	jne    0x14002ddda
   14002ddc6:	call   0x140032c50
   14002ddcb:	mov    DWORD PTR [rax],0x16
   14002ddd1:	call   0x1400307d0
   14002ddd6:	xor    al,al
   14002ddd8:	jmp    0x14002dddc
   14002ddda:	mov    al,0x1
   14002dddc:	add    rsp,0x28
   14002dde0:	ret    
   14002dde1:	int3   
   14002dde2:	int3   
   14002dde3:	int3   
   14002dde4:	sub    rsp,0x28
   14002dde8:	mov    al,BYTE PTR [rcx+0x41]
   14002ddeb:	cmp    al,0x46
   14002dded:	jne    0x14002de08
   14002ddef:	test   BYTE PTR [rcx],0x8
   14002ddf2:	jne    0x14002df58
   14002ddf8:	mov    DWORD PTR [rcx+0x2c],0x7
   14002ddff:	add    rsp,0x28
   14002de03:	jmp    0x14002e424
   14002de08:	cmp    al,0x4e
   14002de0a:	jne    0x14002de33
   14002de0c:	test   BYTE PTR [rcx],0x8
   14002de0f:	jne    0x14002df58
   14002de15:	mov    DWORD PTR [rcx+0x2c],0x8
   14002de1c:	call   0x140032c50
   14002de21:	mov    DWORD PTR [rax],0x16
   14002de27:	call   0x1400307d0
   14002de2c:	xor    al,al
   14002de2e:	jmp    0x14002df5a
   14002de33:	cmp    DWORD PTR [rcx+0x3c],0x0
   14002de37:	jne    0x14002de1c
   14002de39:	cmp    al,0x49
   14002de3b:	je     0x14002defb
   14002de41:	cmp    al,0x4c
   14002de43:	je     0x14002def2
   14002de49:	cmp    al,0x54
   14002de4b:	je     0x14002dee9
   14002de51:	cmp    al,0x68
   14002de53:	je     0x14002dec7
   14002de55:	cmp    al,0x6a
   14002de57:	je     0x14002debb
   14002de59:	cmp    al,0x6c
   14002de5b:	je     0x14002de93
   14002de5d:	cmp    al,0x74
   14002de5f:	je     0x14002de87
   14002de61:	cmp    al,0x77
   14002de63:	je     0x14002de7b
   14002de65:	cmp    al,0x7a
   14002de67:	mov    al,0x1
   14002de69:	jne    0x14002df5a
   14002de6f:	mov    DWORD PTR [rcx+0x3c],0x6
   14002de76:	jmp    0x14002df5a
   14002de7b:	mov    DWORD PTR [rcx+0x3c],0xc
   14002de82:	jmp    0x14002df58
   14002de87:	mov    DWORD PTR [rcx+0x3c],0x7
   14002de8e:	jmp    0x14002df58
   14002de93:	mov    rax,QWORD PTR [rcx+0x18]
   14002de97:	cmp    BYTE PTR [rax],0x6c
   14002de9a:	jne    0x14002deaf
   14002de9c:	inc    rax
   14002de9f:	mov    DWORD PTR [rcx+0x3c],0x4
   14002dea6:	mov    QWORD PTR [rcx+0x18],rax
   14002deaa:	jmp    0x14002df58
   14002deaf:	mov    DWORD PTR [rcx+0x3c],0x3
   14002deb6:	jmp    0x14002df58
   14002debb:	mov    DWORD PTR [rcx+0x3c],0x5
   14002dec2:	jmp    0x14002df58
   14002dec7:	mov    rax,QWORD PTR [rcx+0x18]
   14002decb:	cmp    BYTE PTR [rax],0x68
   14002dece:	jne    0x14002dee0
   14002ded0:	inc    rax
   14002ded3:	mov    DWORD PTR [rcx+0x3c],0x1
   14002deda:	mov    QWORD PTR [rcx+0x18],rax
   14002dede:	jmp    0x14002df58
   14002dee0:	mov    DWORD PTR [rcx+0x3c],0x2
   14002dee7:	jmp    0x14002df58
   14002dee9:	mov    DWORD PTR [rcx+0x3c],0xd
   14002def0:	jmp    0x14002df58
   14002def2:	mov    DWORD PTR [rcx+0x3c],0x8
   14002def9:	jmp    0x14002df58
   14002defb:	mov    rdx,QWORD PTR [rcx+0x18]
   14002deff:	mov    al,BYTE PTR [rdx]
   14002df01:	cmp    al,0x33
   14002df03:	jne    0x14002df1c
   14002df05:	cmp    BYTE PTR [rdx+0x1],0x32
   14002df09:	jne    0x14002df1c
   14002df0b:	lea    rax,[rdx+0x2]
   14002df0f:	mov    DWORD PTR [rcx+0x3c],0xa
   14002df16:	mov    QWORD PTR [rcx+0x18],rax
   14002df1a:	jmp    0x14002df58
   14002df1c:	cmp    al,0x36
   14002df1e:	jne    0x14002df37
   14002df20:	cmp    BYTE PTR [rdx+0x1],0x34
   14002df24:	jne    0x14002df37
   14002df26:	lea    rax,[rdx+0x2]
   14002df2a:	mov    DWORD PTR [rcx+0x3c],0xb
   14002df31:	mov    QWORD PTR [rcx+0x18],rax
   14002df35:	jmp    0x14002df58
   14002df37:	sub    al,0x58
   14002df39:	cmp    al,0x20
   14002df3b:	ja     0x14002df58
   14002df3d:	movsx  rax,al
   14002df41:	movabs rdx,0x120821001
   14002df4b:	bt     rdx,rax
   14002df4f:	jae    0x14002df58
   14002df51:	mov    DWORD PTR [rcx+0x3c],0x9
   14002df58:	mov    al,0x1
   14002df5a:	add    rsp,0x28
   14002df5e:	ret    
   14002df5f:	int3   
   14002df60:	sub    rsp,0x28
   14002df64:	mov    al,BYTE PTR [rcx+0x41]
   14002df67:	cmp    al,0x46
   14002df69:	jne    0x14002df84
   14002df6b:	test   BYTE PTR [rcx],0x8
   14002df6e:	jne    0x14002e0d4
   14002df74:	mov    DWORD PTR [rcx+0x2c],0x7
   14002df7b:	add    rsp,0x28
   14002df7f:	jmp    0x14002e6a0
   14002df84:	cmp    al,0x4e
   14002df86:	jne    0x14002dfaf
   14002df88:	test   BYTE PTR [rcx],0x8
   14002df8b:	jne    0x14002e0d4
   14002df91:	mov    DWORD PTR [rcx+0x2c],0x8
   14002df98:	call   0x140032c50
   14002df9d:	mov    DWORD PTR [rax],0x16
   14002dfa3:	call   0x1400307d0
   14002dfa8:	xor    al,al
   14002dfaa:	jmp    0x14002e0d6
   14002dfaf:	cmp    DWORD PTR [rcx+0x3c],0x0
   14002dfb3:	jne    0x14002df98
   14002dfb5:	cmp    al,0x49
   14002dfb7:	je     0x14002e077
   14002dfbd:	cmp    al,0x4c
   14002dfbf:	je     0x14002e06e
   14002dfc5:	cmp    al,0x54
   14002dfc7:	je     0x14002e065
   14002dfcd:	cmp    al,0x68
   14002dfcf:	je     0x14002e043
   14002dfd1:	cmp    al,0x6a
   14002dfd3:	je     0x14002e037
   14002dfd5:	cmp    al,0x6c
   14002dfd7:	je     0x14002e00f
   14002dfd9:	cmp    al,0x74
   14002dfdb:	je     0x14002e003
   14002dfdd:	cmp    al,0x77
   14002dfdf:	je     0x14002dff7
   14002dfe1:	cmp    al,0x7a
   14002dfe3:	mov    al,0x1
   14002dfe5:	jne    0x14002e0d6
   14002dfeb:	mov    DWORD PTR [rcx+0x3c],0x6
   14002dff2:	jmp    0x14002e0d6
   14002dff7:	mov    DWORD PTR [rcx+0x3c],0xc
   14002dffe:	jmp    0x14002e0d4
   14002e003:	mov    DWORD PTR [rcx+0x3c],0x7
   14002e00a:	jmp    0x14002e0d4
   14002e00f:	mov    rax,QWORD PTR [rcx+0x18]
   14002e013:	cmp    BYTE PTR [rax],0x6c
   14002e016:	jne    0x14002e02b
   14002e018:	inc    rax
   14002e01b:	mov    DWORD PTR [rcx+0x3c],0x4
   14002e022:	mov    QWORD PTR [rcx+0x18],rax
   14002e026:	jmp    0x14002e0d4
   14002e02b:	mov    DWORD PTR [rcx+0x3c],0x3
   14002e032:	jmp    0x14002e0d4
   14002e037:	mov    DWORD PTR [rcx+0x3c],0x5
   14002e03e:	jmp    0x14002e0d4
   14002e043:	mov    rax,QWORD PTR [rcx+0x18]
   14002e047:	cmp    BYTE PTR [rax],0x68
   14002e04a:	jne    0x14002e05c
   14002e04c:	inc    rax
   14002e04f:	mov    DWORD PTR [rcx+0x3c],0x1
   14002e056:	mov    QWORD PTR [rcx+0x18],rax
   14002e05a:	jmp    0x14002e0d4
   14002e05c:	mov    DWORD PTR [rcx+0x3c],0x2
   14002e063:	jmp    0x14002e0d4
   14002e065:	mov    DWORD PTR [rcx+0x3c],0xd
   14002e06c:	jmp    0x14002e0d4
   14002e06e:	mov    DWORD PTR [rcx+0x3c],0x8
   14002e075:	jmp    0x14002e0d4
   14002e077:	mov    rdx,QWORD PTR [rcx+0x18]
   14002e07b:	mov    al,BYTE PTR [rdx]
   14002e07d:	cmp    al,0x33
   14002e07f:	jne    0x14002e098
   14002e081:	cmp    BYTE PTR [rdx+0x1],0x32
   14002e085:	jne    0x14002e098
   14002e087:	lea    rax,[rdx+0x2]
   14002e08b:	mov    DWORD PTR [rcx+0x3c],0xa
   14002e092:	mov    QWORD PTR [rcx+0x18],rax
   14002e096:	jmp    0x14002e0d4
   14002e098:	cmp    al,0x36
   14002e09a:	jne    0x14002e0b3
   14002e09c:	cmp    BYTE PTR [rdx+0x1],0x34
   14002e0a0:	jne    0x14002e0b3
   14002e0a2:	lea    rax,[rdx+0x2]
   14002e0a6:	mov    DWORD PTR [rcx+0x3c],0xb
   14002e0ad:	mov    QWORD PTR [rcx+0x18],rax
   14002e0b1:	jmp    0x14002e0d4
   14002e0b3:	sub    al,0x58
   14002e0b5:	cmp    al,0x20
   14002e0b7:	ja     0x14002e0d4
   14002e0b9:	movsx  rax,al
   14002e0bd:	movabs rdx,0x120821001
   14002e0c7:	bt     rdx,rax
   14002e0cb:	jae    0x14002e0d4
   14002e0cd:	mov    DWORD PTR [rcx+0x3c],0x9
   14002e0d4:	mov    al,0x1
   14002e0d6:	add    rsp,0x28
   14002e0da:	ret    
   14002e0db:	int3   
   14002e0dc:	sub    rsp,0x28
   14002e0e0:	cmp    WORD PTR [rcx+0x42],0x46
   14002e0e5:	jne    0x14002e100
   14002e0e7:	test   BYTE PTR [rcx],0x8
   14002e0ea:	jne    0x14002e277
   14002e0f0:	mov    DWORD PTR [rcx+0x2c],0x7
   14002e0f7:	add    rsp,0x28
   14002e0fb:	jmp    0x14002e91c
   14002e100:	cmp    WORD PTR [rcx+0x42],0x4e
   14002e105:	jne    0x14002e12e
   14002e107:	test   BYTE PTR [rcx],0x8
   14002e10a:	jne    0x14002e277
   14002e110:	mov    DWORD PTR [rcx+0x2c],0x8
   14002e117:	call   0x140032c50
   14002e11c:	mov    DWORD PTR [rax],0x16
   14002e122:	call   0x1400307d0
   14002e127:	xor    al,al
   14002e129:	jmp    0x14002e279
   14002e12e:	cmp    DWORD PTR [rcx+0x3c],0x0
   14002e132:	jne    0x14002e117
   14002e134:	movzx  eax,WORD PTR [rcx+0x42]
   14002e138:	cmp    eax,0x49
   14002e13b:	je     0x14002e210
   14002e141:	cmp    eax,0x4c
   14002e144:	je     0x14002e207
   14002e14a:	cmp    eax,0x54
   14002e14d:	je     0x14002e1fe
   14002e153:	mov    edx,0x68
   14002e158:	cmp    eax,edx
   14002e15a:	je     0x14002e1d8
   14002e15c:	cmp    eax,0x6a
   14002e15f:	je     0x14002e1cc
   14002e161:	mov    edx,0x6c
   14002e166:	cmp    eax,edx
   14002e168:	je     0x14002e1a3
   14002e16a:	cmp    eax,0x74
   14002e16d:	je     0x14002e197
   14002e16f:	cmp    eax,0x77
   14002e172:	je     0x14002e18b
   14002e174:	cmp    eax,0x7a
   14002e177:	mov    al,0x1
   14002e179:	jne    0x14002e279
   14002e17f:	mov    DWORD PTR [rcx+0x3c],0x6
   14002e186:	jmp    0x14002e279
   14002e18b:	mov    DWORD PTR [rcx+0x3c],0xc
   14002e192:	jmp    0x14002e277
   14002e197:	mov    DWORD PTR [rcx+0x3c],0x7
   14002e19e:	jmp    0x14002e277
   14002e1a3:	mov    rax,QWORD PTR [rcx+0x18]
   14002e1a7:	cmp    WORD PTR [rax],dx
   14002e1aa:	jne    0x14002e1c0
   14002e1ac:	add    rax,0x2
   14002e1b0:	mov    DWORD PTR [rcx+0x3c],0x4
   14002e1b7:	mov    QWORD PTR [rcx+0x18],rax
   14002e1bb:	jmp    0x14002e277
   14002e1c0:	mov    DWORD PTR [rcx+0x3c],0x3
   14002e1c7:	jmp    0x14002e277
   14002e1cc:	mov    DWORD PTR [rcx+0x3c],0x5
   14002e1d3:	jmp    0x14002e277
   14002e1d8:	mov    rax,QWORD PTR [rcx+0x18]
   14002e1dc:	cmp    WORD PTR [rax],dx
   14002e1df:	jne    0x14002e1f5
   14002e1e1:	add    rax,0x2
   14002e1e5:	mov    DWORD PTR [rcx+0x3c],0x1
   14002e1ec:	mov    QWORD PTR [rcx+0x18],rax
   14002e1f0:	jmp    0x14002e277
   14002e1f5:	mov    DWORD PTR [rcx+0x3c],0x2
   14002e1fc:	jmp    0x14002e277
   14002e1fe:	mov    DWORD PTR [rcx+0x3c],0xd
   14002e205:	jmp    0x14002e277
   14002e207:	mov    DWORD PTR [rcx+0x3c],0x8
   14002e20e:	jmp    0x14002e277
   14002e210:	mov    rdx,QWORD PTR [rcx+0x18]
   14002e214:	movzx  eax,WORD PTR [rdx]
   14002e217:	cmp    ax,0x33
   14002e21b:	jne    0x14002e235
   14002e21d:	cmp    WORD PTR [rdx+0x2],0x32
   14002e222:	jne    0x14002e235
   14002e224:	lea    rax,[rdx+0x4]
   14002e228:	mov    DWORD PTR [rcx+0x3c],0xa
   14002e22f:	mov    QWORD PTR [rcx+0x18],rax
   14002e233:	jmp    0x14002e277
   14002e235:	cmp    ax,0x36
   14002e239:	jne    0x14002e253
   14002e23b:	cmp    WORD PTR [rdx+0x2],0x34
   14002e240:	jne    0x14002e253
   14002e242:	lea    rax,[rdx+0x4]
   14002e246:	mov    DWORD PTR [rcx+0x3c],0xb
   14002e24d:	mov    QWORD PTR [rcx+0x18],rax
   14002e251:	jmp    0x14002e277
   14002e253:	sub    ax,0x58
   14002e257:	cmp    ax,0x20
   14002e25b:	ja     0x14002e277
   14002e25d:	movzx  eax,ax
   14002e260:	movabs rdx,0x120821001
   14002e26a:	bt     rdx,rax
   14002e26e:	jae    0x14002e277
   14002e270:	mov    DWORD PTR [rcx+0x3c],0x9
   14002e277:	mov    al,0x1
   14002e279:	add    rsp,0x28
   14002e27d:	ret    
   14002e27e:	int3   
   14002e27f:	int3   
   14002e280:	sub    rsp,0x28
   14002e284:	cmp    WORD PTR [rcx+0x42],0x46
   14002e289:	jne    0x14002e2a4
   14002e28b:	test   BYTE PTR [rcx],0x8
   14002e28e:	jne    0x14002e41b
   14002e294:	mov    DWORD PTR [rcx+0x2c],0x7
   14002e29b:	add    rsp,0x28
   14002e29f:	jmp    0x14002ebe8
   14002e2a4:	cmp    WORD PTR [rcx+0x42],0x4e
   14002e2a9:	jne    0x14002e2d2
   14002e2ab:	test   BYTE PTR [rcx],0x8
   14002e2ae:	jne    0x14002e41b
   14002e2b4:	mov    DWORD PTR [rcx+0x2c],0x8
   14002e2bb:	call   0x140032c50
   14002e2c0:	mov    DWORD PTR [rax],0x16
   14002e2c6:	call   0x1400307d0
   14002e2cb:	xor    al,al
   14002e2cd:	jmp    0x14002e41d
   14002e2d2:	cmp    DWORD PTR [rcx+0x3c],0x0
   14002e2d6:	jne    0x14002e2bb
   14002e2d8:	movzx  eax,WORD PTR [rcx+0x42]
   14002e2dc:	cmp    eax,0x49
   14002e2df:	je     0x14002e3b4
   14002e2e5:	cmp    eax,0x4c
   14002e2e8:	je     0x14002e3ab
   14002e2ee:	cmp    eax,0x54
   14002e2f1:	je     0x14002e3a2
   14002e2f7:	mov    edx,0x68
   14002e2fc:	cmp    eax,edx
   14002e2fe:	je     0x14002e37c
   14002e300:	cmp    eax,0x6a
   14002e303:	je     0x14002e370
   14002e305:	mov    edx,0x6c
   14002e30a:	cmp    eax,edx
   14002e30c:	je     0x14002e347
   14002e30e:	cmp    eax,0x74
   14002e311:	je     0x14002e33b
   14002e313:	cmp    eax,0x77
   14002e316:	je     0x14002e32f
   14002e318:	cmp    eax,0x7a
   14002e31b:	mov    al,0x1
   14002e31d:	jne    0x14002e41d
   14002e323:	mov    DWORD PTR [rcx+0x3c],0x6
   14002e32a:	jmp    0x14002e41d
   14002e32f:	mov    DWORD PTR [rcx+0x3c],0xc
   14002e336:	jmp    0x14002e41b
   14002e33b:	mov    DWORD PTR [rcx+0x3c],0x7
   14002e342:	jmp    0x14002e41b
   14002e347:	mov    rax,QWORD PTR [rcx+0x18]
   14002e34b:	cmp    WORD PTR [rax],dx
   14002e34e:	jne    0x14002e364
   14002e350:	add    rax,0x2
   14002e354:	mov    DWORD PTR [rcx+0x3c],0x4
   14002e35b:	mov    QWORD PTR [rcx+0x18],rax
   14002e35f:	jmp    0x14002e41b
   14002e364:	mov    DWORD PTR [rcx+0x3c],0x3
   14002e36b:	jmp    0x14002e41b
   14002e370:	mov    DWORD PTR [rcx+0x3c],0x5
   14002e377:	jmp    0x14002e41b
   14002e37c:	mov    rax,QWORD PTR [rcx+0x18]
   14002e380:	cmp    WORD PTR [rax],dx
   14002e383:	jne    0x14002e399
   14002e385:	add    rax,0x2
   14002e389:	mov    DWORD PTR [rcx+0x3c],0x1
   14002e390:	mov    QWORD PTR [rcx+0x18],rax
   14002e394:	jmp    0x14002e41b
   14002e399:	mov    DWORD PTR [rcx+0x3c],0x2
   14002e3a0:	jmp    0x14002e41b
   14002e3a2:	mov    DWORD PTR [rcx+0x3c],0xd
   14002e3a9:	jmp    0x14002e41b
   14002e3ab:	mov    DWORD PTR [rcx+0x3c],0x8
   14002e3b2:	jmp    0x14002e41b
   14002e3b4:	mov    rdx,QWORD PTR [rcx+0x18]
   14002e3b8:	movzx  eax,WORD PTR [rdx]
   14002e3bb:	cmp    ax,0x33
   14002e3bf:	jne    0x14002e3d9
   14002e3c1:	cmp    WORD PTR [rdx+0x2],0x32
   14002e3c6:	jne    0x14002e3d9
   14002e3c8:	lea    rax,[rdx+0x4]
   14002e3cc:	mov    DWORD PTR [rcx+0x3c],0xa
   14002e3d3:	mov    QWORD PTR [rcx+0x18],rax
   14002e3d7:	jmp    0x14002e41b
   14002e3d9:	cmp    ax,0x36
   14002e3dd:	jne    0x14002e3f7
   14002e3df:	cmp    WORD PTR [rdx+0x2],0x34
   14002e3e4:	jne    0x14002e3f7
   14002e3e6:	lea    rax,[rdx+0x4]
   14002e3ea:	mov    DWORD PTR [rcx+0x3c],0xb
   14002e3f1:	mov    QWORD PTR [rcx+0x18],rax
   14002e3f5:	jmp    0x14002e41b
   14002e3f7:	sub    ax,0x58
   14002e3fb:	cmp    ax,0x20
   14002e3ff:	ja     0x14002e41b
   14002e401:	movzx  eax,ax
   14002e404:	movabs rdx,0x120821001
   14002e40e:	bt     rdx,rax
   14002e412:	jae    0x14002e41b
   14002e414:	mov    DWORD PTR [rcx+0x3c],0x9
   14002e41b:	mov    al,0x1
   14002e41d:	add    rsp,0x28
   14002e421:	ret    
   14002e422:	int3   
   14002e423:	int3   
   14002e424:	mov    QWORD PTR [rsp+0x10],rbx
   14002e429:	mov    QWORD PTR [rsp+0x18],rbp
   14002e42e:	mov    QWORD PTR [rsp+0x20],rsi
   14002e433:	push   rdi
   14002e434:	push   r14
   14002e436:	push   r15
   14002e438:	sub    rsp,0x30
   14002e43c:	movsx  eax,BYTE PTR [rcx+0x41]
   14002e440:	mov    rbx,rcx
   14002e443:	mov    r15d,0x1
   14002e449:	cmp    eax,0x64
   14002e44c:	jg     0x14002e4ab
   14002e44e:	je     0x14002e51c
   14002e454:	cmp    eax,0x41
   14002e457:	je     0x14002e52f
   14002e45d:	cmp    eax,0x43
   14002e460:	je     0x14002e495
   14002e462:	cmp    eax,0x44
   14002e465:	jle    0x14002e538
   14002e46b:	cmp    eax,0x47
   14002e46e:	jle    0x14002e52f
   14002e474:	cmp    eax,0x53
   14002e477:	je     0x14002e4d8
   14002e479:	cmp    eax,0x58
   14002e47c:	je     0x14002e4ed
   14002e47e:	cmp    eax,0x5a
   14002e481:	je     0x14002e4a1
   14002e483:	cmp    eax,0x61
   14002e486:	je     0x14002e52f
   14002e48c:	cmp    eax,0x63
   14002e48f:	jne    0x14002e538
   14002e495:	xor    edx,edx
   14002e497:	call   0x14002f414
   14002e49c:	jmp    0x14002e534
   14002e4a1:	call   0x14002eeb4
   14002e4a6:	jmp    0x14002e534
   14002e4ab:	cmp    eax,0x67
   14002e4ae:	jle    0x14002e52f
   14002e4b0:	cmp    eax,0x69
   14002e4b3:	je     0x14002e51c
   14002e4b5:	cmp    eax,0x6e
   14002e4b8:	je     0x14002e515
   14002e4ba:	cmp    eax,0x6f
   14002e4bd:	je     0x14002e4f7
   14002e4bf:	cmp    eax,0x70
   14002e4c2:	je     0x14002e4df
   14002e4c4:	cmp    eax,0x73
   14002e4c7:	je     0x14002e4d8
   14002e4c9:	cmp    eax,0x75
   14002e4cc:	je     0x14002e520
   14002e4ce:	cmp    eax,0x78
   14002e4d1:	jne    0x14002e538
   14002e4d3:	lea    edx,[rax-0x68]
   14002e4d6:	jmp    0x14002e525
   14002e4d8:	call   0x14002f7ec
   14002e4dd:	jmp    0x14002e534
   14002e4df:	mov    DWORD PTR [rcx+0x38],0x10
   14002e4e6:	mov    DWORD PTR [rcx+0x3c],0xb
   14002e4ed:	mov    r8b,r15b
   14002e4f0:	mov    edx,0x10
   14002e4f5:	jmp    0x14002e528
   14002e4f7:	mov    ecx,DWORD PTR [rcx+0x30]
   14002e4fa:	mov    eax,ecx
   14002e4fc:	shr    eax,0x5
   14002e4ff:	test   r15b,al
   14002e502:	je     0x14002e50b
   14002e504:	bts    ecx,0x7
   14002e508:	mov    DWORD PTR [rbx+0x30],ecx
   14002e50b:	mov    edx,0x8
   14002e510:	mov    rcx,rbx
   14002e513:	jmp    0x14002e525
   14002e515:	call   0x14002f710
   14002e51a:	jmp    0x14002e534
   14002e51c:	or     DWORD PTR [rcx+0x30],0x10
   14002e520:	mov    edx,0xa
   14002e525:	xor    r8d,r8d
   14002e528:	call   0x14002f570
   14002e52d:	jmp    0x14002e534
   14002e52f:	call   0x14002efb4
   14002e534:	test   al,al
   14002e536:	jne    0x14002e53f
   14002e538:	xor    al,al
   14002e53a:	jmp    0x14002e684
   14002e53f:	cmp    BYTE PTR [rbx+0x40],0x0
   14002e543:	jne    0x14002e681
   14002e549:	mov    edx,DWORD PTR [rbx+0x30]
   14002e54c:	xor    eax,eax
   14002e54e:	mov    WORD PTR [rsp+0x50],ax
   14002e553:	xor    edi,edi
   14002e555:	mov    BYTE PTR [rsp+0x52],al
   14002e559:	mov    eax,edx
   14002e55b:	shr    eax,0x4
   14002e55e:	test   r15b,al
   14002e561:	je     0x14002e591
   14002e563:	mov    eax,edx
   14002e565:	shr    eax,0x6
   14002e568:	test   r15b,al
   14002e56b:	je     0x14002e574
   14002e56d:	mov    BYTE PTR [rsp+0x50],0x2d
   14002e572:	jmp    0x14002e58e
   14002e574:	test   r15b,dl
   14002e577:	je     0x14002e580
   14002e579:	mov    BYTE PTR [rsp+0x50],0x2b
   14002e57e:	jmp    0x14002e58e
   14002e580:	mov    eax,edx
   14002e582:	shr    eax,1
   14002e584:	test   r15b,al
   14002e587:	je     0x14002e591
   14002e589:	mov    BYTE PTR [rsp+0x50],0x20
   14002e58e:	mov    rdi,r15
   14002e591:	mov    cl,BYTE PTR [rbx+0x41]
   14002e594:	lea    eax,[rcx-0x58]
   14002e597:	test   al,0xdf
   14002e599:	jne    0x14002e5aa
   14002e59b:	mov    eax,edx
   14002e59d:	shr    eax,0x5
   14002e5a0:	test   r15b,al
   14002e5a3:	je     0x14002e5aa
   14002e5a5:	mov    r8b,r15b
   14002e5a8:	jmp    0x14002e5ad
   14002e5aa:	xor    r8b,r8b
   14002e5ad:	lea    eax,[rcx-0x41]
   14002e5b0:	test   al,0xdf
   14002e5b2:	sete   al
   14002e5b5:	test   r8b,r8b
   14002e5b8:	jne    0x14002e5be
   14002e5ba:	test   al,al
   14002e5bc:	je     0x14002e5e8
   14002e5be:	mov    BYTE PTR [rsp+rdi*1+0x50],0x30
   14002e5c3:	add    rdi,r15
   14002e5c6:	cmp    cl,0x58
   14002e5c9:	je     0x14002e5d4
   14002e5cb:	cmp    cl,0x41
   14002e5ce:	je     0x14002e5d4
   14002e5d0:	xor    al,al
   14002e5d2:	jmp    0x14002e5d7
   14002e5d4:	mov    al,r15b
   14002e5d7:	neg    al
   14002e5d9:	sbb    al,al
   14002e5db:	and    al,0xe0
   14002e5dd:	add    al,0x61
   14002e5df:	add    al,0x17
   14002e5e1:	mov    BYTE PTR [rsp+rdi*1+0x50],al
   14002e5e5:	add    rdi,r15
   14002e5e8:	mov    esi,DWORD PTR [rbx+0x34]
   14002e5eb:	sub    esi,DWORD PTR [rbx+0x50]
   14002e5ee:	sub    esi,edi
   14002e5f0:	test   dl,0xc
   14002e5f3:	jne    0x14002e60a
   14002e5f5:	lea    r9,[rbx+0x28]
   14002e5f9:	mov    r8d,esi
   14002e5fc:	lea    rcx,[rbx+0x468]
   14002e603:	mov    dl,0x20
   14002e605:	call   0x14002cc8c
   14002e60a:	mov    rax,QWORD PTR [rbx+0x10]
   14002e60e:	lea    rbp,[rbx+0x28]
   14002e612:	lea    r14,[rbx+0x468]
   14002e619:	mov    QWORD PTR [rsp+0x20],rax
   14002e61e:	mov    r9,rbp
   14002e621:	lea    rdx,[rsp+0x50]
   14002e626:	mov    rcx,r14
   14002e629:	mov    r8d,edi
   14002e62c:	call   0x14002fd5c
   14002e631:	mov    ecx,DWORD PTR [rbx+0x30]
   14002e634:	mov    eax,ecx
   14002e636:	shr    eax,0x3
   14002e639:	test   r15b,al
   14002e63c:	je     0x14002e656
   14002e63e:	shr    ecx,0x2
   14002e641:	test   r15b,cl
   14002e644:	jne    0x14002e656
   14002e646:	mov    r9,rbp
   14002e649:	mov    r8d,esi
   14002e64c:	mov    dl,0x30
   14002e64e:	mov    rcx,r14
   14002e651:	call   0x14002cc8c
   14002e656:	xor    edx,edx
   14002e658:	mov    rcx,rbx
   14002e65b:	call   0x14002f9d0
   14002e660:	cmp    DWORD PTR [rbp+0x0],0x0
   14002e664:	jl     0x14002e681
   14002e666:	mov    eax,DWORD PTR [rbx+0x30]
   14002e669:	shr    eax,0x2
   14002e66c:	test   r15b,al
   14002e66f:	je     0x14002e681
   14002e671:	mov    r9,rbp
   14002e674:	mov    r8d,esi
   14002e677:	mov    dl,0x20
   14002e679:	mov    rcx,r14
   14002e67c:	call   0x14002cc8c
   14002e681:	mov    al,r15b
   14002e684:	mov    rbx,QWORD PTR [rsp+0x58]
   14002e689:	mov    rbp,QWORD PTR [rsp+0x60]
   14002e68e:	mov    rsi,QWORD PTR [rsp+0x68]
   14002e693:	add    rsp,0x30
   14002e697:	pop    r15
   14002e699:	pop    r14
   14002e69b:	pop    rdi
   14002e69c:	ret    
   14002e69d:	int3   
   14002e69e:	int3   
   14002e69f:	int3   
   14002e6a0:	mov    QWORD PTR [rsp+0x10],rbx
   14002e6a5:	mov    QWORD PTR [rsp+0x18],rbp
   14002e6aa:	mov    QWORD PTR [rsp+0x20],rsi
   14002e6af:	push   rdi
   14002e6b0:	push   r14
   14002e6b2:	push   r15
   14002e6b4:	sub    rsp,0x30
   14002e6b8:	movsx  eax,BYTE PTR [rcx+0x41]
   14002e6bc:	mov    rbx,rcx
   14002e6bf:	mov    r15d,0x1
   14002e6c5:	cmp    eax,0x64
   14002e6c8:	jg     0x14002e727
   14002e6ca:	je     0x14002e798
   14002e6d0:	cmp    eax,0x41
   14002e6d3:	je     0x14002e7ab
   14002e6d9:	cmp    eax,0x43
   14002e6dc:	je     0x14002e711
   14002e6de:	cmp    eax,0x44
   14002e6e1:	jle    0x14002e7b4
   14002e6e7:	cmp    eax,0x47
   14002e6ea:	jle    0x14002e7ab
   14002e6f0:	cmp    eax,0x53
   14002e6f3:	je     0x14002e754
   14002e6f5:	cmp    eax,0x58
   14002e6f8:	je     0x14002e769
   14002e6fa:	cmp    eax,0x5a
   14002e6fd:	je     0x14002e71d
   14002e6ff:	cmp    eax,0x61
   14002e702:	je     0x14002e7ab
   14002e708:	cmp    eax,0x63
   14002e70b:	jne    0x14002e7b4
   14002e711:	xor    edx,edx
   14002e713:	call   0x14002f414
   14002e718:	jmp    0x14002e7b0
   14002e71d:	call   0x14002eeb4
   14002e722:	jmp    0x14002e7b0
   14002e727:	cmp    eax,0x67
   14002e72a:	jle    0x14002e7ab
   14002e72c:	cmp    eax,0x69
   14002e72f:	je     0x14002e798
   14002e731:	cmp    eax,0x6e
   14002e734:	je     0x14002e791
   14002e736:	cmp    eax,0x6f
   14002e739:	je     0x14002e773
   14002e73b:	cmp    eax,0x70
   14002e73e:	je     0x14002e75b
   14002e740:	cmp    eax,0x73
   14002e743:	je     0x14002e754
   14002e745:	cmp    eax,0x75
   14002e748:	je     0x14002e79c
   14002e74a:	cmp    eax,0x78
   14002e74d:	jne    0x14002e7b4
   14002e74f:	lea    edx,[rax-0x68]
   14002e752:	jmp    0x14002e7a1
   14002e754:	call   0x14002f7ec
   14002e759:	jmp    0x14002e7b0
   14002e75b:	mov    DWORD PTR [rcx+0x38],0x10
   14002e762:	mov    DWORD PTR [rcx+0x3c],0xb
   14002e769:	mov    r8b,r15b
   14002e76c:	mov    edx,0x10
   14002e771:	jmp    0x14002e7a4
   14002e773:	mov    ecx,DWORD PTR [rcx+0x30]
   14002e776:	mov    eax,ecx
   14002e778:	shr    eax,0x5
   14002e77b:	test   r15b,al
   14002e77e:	je     0x14002e787
   14002e780:	bts    ecx,0x7
   14002e784:	mov    DWORD PTR [rbx+0x30],ecx
   14002e787:	mov    edx,0x8
   14002e78c:	mov    rcx,rbx
   14002e78f:	jmp    0x14002e7a1
   14002e791:	call   0x14002f710
   14002e796:	jmp    0x14002e7b0
   14002e798:	or     DWORD PTR [rcx+0x30],0x10
   14002e79c:	mov    edx,0xa
   14002e7a1:	xor    r8d,r8d
   14002e7a4:	call   0x14002f570
   14002e7a9:	jmp    0x14002e7b0
   14002e7ab:	call   0x14002efb4
   14002e7b0:	test   al,al
   14002e7b2:	jne    0x14002e7bb
   14002e7b4:	xor    al,al
   14002e7b6:	jmp    0x14002e900
   14002e7bb:	cmp    BYTE PTR [rbx+0x40],0x0
   14002e7bf:	jne    0x14002e8fd
   14002e7c5:	mov    edx,DWORD PTR [rbx+0x30]
   14002e7c8:	xor    eax,eax
   14002e7ca:	mov    WORD PTR [rsp+0x50],ax
   14002e7cf:	xor    edi,edi
   14002e7d1:	mov    BYTE PTR [rsp+0x52],al
   14002e7d5:	mov    eax,edx
   14002e7d7:	shr    eax,0x4
   14002e7da:	test   r15b,al
   14002e7dd:	je     0x14002e80d
   14002e7df:	mov    eax,edx
   14002e7e1:	shr    eax,0x6
   14002e7e4:	test   r15b,al
   14002e7e7:	je     0x14002e7f0
   14002e7e9:	mov    BYTE PTR [rsp+0x50],0x2d
   14002e7ee:	jmp    0x14002e80a
   14002e7f0:	test   r15b,dl
   14002e7f3:	je     0x14002e7fc
   14002e7f5:	mov    BYTE PTR [rsp+0x50],0x2b
   14002e7fa:	jmp    0x14002e80a
   14002e7fc:	mov    eax,edx
   14002e7fe:	shr    eax,1
   14002e800:	test   r15b,al
   14002e803:	je     0x14002e80d
   14002e805:	mov    BYTE PTR [rsp+0x50],0x20
   14002e80a:	mov    rdi,r15
   14002e80d:	mov    cl,BYTE PTR [rbx+0x41]
   14002e810:	lea    eax,[rcx-0x58]
   14002e813:	test   al,0xdf
   14002e815:	jne    0x14002e826
   14002e817:	mov    eax,edx
   14002e819:	shr    eax,0x5
   14002e81c:	test   r15b,al
   14002e81f:	je     0x14002e826
   14002e821:	mov    r8b,r15b
   14002e824:	jmp    0x14002e829
   14002e826:	xor    r8b,r8b
   14002e829:	lea    eax,[rcx-0x41]
   14002e82c:	test   al,0xdf
   14002e82e:	sete   al
   14002e831:	test   r8b,r8b
   14002e834:	jne    0x14002e83a
   14002e836:	test   al,al
   14002e838:	je     0x14002e864
   14002e83a:	mov    BYTE PTR [rsp+rdi*1+0x50],0x30
   14002e83f:	add    rdi,r15
   14002e842:	cmp    cl,0x58
   14002e845:	je     0x14002e850
   14002e847:	cmp    cl,0x41
   14002e84a:	je     0x14002e850
   14002e84c:	xor    al,al
   14002e84e:	jmp    0x14002e853
   14002e850:	mov    al,r15b
   14002e853:	neg    al
   14002e855:	sbb    al,al
   14002e857:	and    al,0xe0
   14002e859:	add    al,0x61
   14002e85b:	add    al,0x17
   14002e85d:	mov    BYTE PTR [rsp+rdi*1+0x50],al
   14002e861:	add    rdi,r15
   14002e864:	mov    esi,DWORD PTR [rbx+0x34]
   14002e867:	sub    esi,DWORD PTR [rbx+0x50]
   14002e86a:	sub    esi,edi
   14002e86c:	test   dl,0xc
   14002e86f:	jne    0x14002e886
   14002e871:	lea    r9,[rbx+0x28]
   14002e875:	mov    r8d,esi
   14002e878:	lea    rcx,[rbx+0x468]
   14002e87f:	mov    dl,0x20
   14002e881:	call   0x14002cda0
   14002e886:	mov    rax,QWORD PTR [rbx+0x10]
   14002e88a:	lea    rbp,[rbx+0x28]
   14002e88e:	lea    r14,[rbx+0x468]
   14002e895:	mov    QWORD PTR [rsp+0x20],rax
   14002e89a:	mov    r9,rbp
   14002e89d:	lea    rdx,[rsp+0x50]
   14002e8a2:	mov    rcx,r14
   14002e8a5:	mov    r8d,edi
   14002e8a8:	call   0x14002ff60
   14002e8ad:	mov    ecx,DWORD PTR [rbx+0x30]
   14002e8b0:	mov    eax,ecx
   14002e8b2:	shr    eax,0x3
   14002e8b5:	test   r15b,al
   14002e8b8:	je     0x14002e8d2
   14002e8ba:	shr    ecx,0x2
   14002e8bd:	test   r15b,cl
   14002e8c0:	jne    0x14002e8d2
   14002e8c2:	mov    r9,rbp
   14002e8c5:	mov    r8d,esi
   14002e8c8:	mov    dl,0x30
   14002e8ca:	mov    rcx,r14
   14002e8cd:	call   0x14002cda0
   14002e8d2:	xor    edx,edx
   14002e8d4:	mov    rcx,rbx
   14002e8d7:	call   0x14002faa8
   14002e8dc:	cmp    DWORD PTR [rbp+0x0],0x0
   14002e8e0:	jl     0x14002e8fd
   14002e8e2:	mov    eax,DWORD PTR [rbx+0x30]
   14002e8e5:	shr    eax,0x2
   14002e8e8:	test   r15b,al
   14002e8eb:	je     0x14002e8fd
   14002e8ed:	mov    r9,rbp
   14002e8f0:	mov    r8d,esi
   14002e8f3:	mov    dl,0x20
   14002e8f5:	mov    rcx,r14
   14002e8f8:	call   0x14002cda0
   14002e8fd:	mov    al,r15b
   14002e900:	mov    rbx,QWORD PTR [rsp+0x58]
   14002e905:	mov    rbp,QWORD PTR [rsp+0x60]
   14002e90a:	mov    rsi,QWORD PTR [rsp+0x68]
   14002e90f:	add    rsp,0x30
   14002e913:	pop    r15
   14002e915:	pop    r14
   14002e917:	pop    rdi
   14002e918:	ret    
   14002e919:	int3   
   14002e91a:	int3   
   14002e91b:	int3   
   14002e91c:	mov    QWORD PTR [rsp+0x10],rbx
   14002e921:	mov    QWORD PTR [rsp+0x18],rbp
   14002e926:	mov    QWORD PTR [rsp+0x20],rsi
   14002e92b:	push   rdi
   14002e92c:	push   r12
   14002e92e:	push   r13
   14002e930:	push   r14
   14002e932:	push   r15
   14002e934:	sub    rsp,0x40
   14002e938:	mov    rax,QWORD PTR [rip+0x42711]        # 0x140071050
   14002e93f:	xor    rax,rsp
   14002e942:	mov    QWORD PTR [rsp+0x38],rax
   14002e947:	movzx  eax,WORD PTR [rcx+0x42]
   14002e94b:	mov    esi,0x58
   14002e950:	mov    rbx,rcx
   14002e953:	lea    ebp,[rsi-0x17]
   14002e956:	lea    r15d,[rsi-0x57]
   14002e95a:	cmp    eax,0x64
   14002e95d:	jg     0x14002e9ba
   14002e95f:	je     0x14002ea2b
   14002e965:	cmp    eax,ebp
   14002e967:	je     0x14002ea3e
   14002e96d:	cmp    eax,0x43
   14002e970:	je     0x14002e9a4
   14002e972:	cmp    eax,0x44
   14002e975:	jle    0x14002ea47
   14002e97b:	cmp    eax,0x47
   14002e97e:	jle    0x14002ea3e
   14002e984:	cmp    eax,0x53
   14002e987:	je     0x14002e9e7
   14002e989:	cmp    eax,esi
   14002e98b:	je     0x14002e9fc
   14002e98d:	cmp    eax,0x5a
   14002e990:	je     0x14002e9b0
   14002e992:	cmp    eax,0x61
   14002e995:	je     0x14002ea3e
   14002e99b:	cmp    eax,0x63
   14002e99e:	jne    0x14002ea47
   14002e9a4:	xor    edx,edx
   14002e9a6:	call   0x14002f4c8
   14002e9ab:	jmp    0x14002ea43
   14002e9b0:	call   0x14002ef34
   14002e9b5:	jmp    0x14002ea43
   14002e9ba:	cmp    eax,0x67
   14002e9bd:	jle    0x14002ea3e
   14002e9bf:	cmp    eax,0x69
   14002e9c2:	je     0x14002ea2b
   14002e9c4:	cmp    eax,0x6e
   14002e9c7:	je     0x14002ea24
   14002e9c9:	cmp    eax,0x6f
   14002e9cc:	je     0x14002ea06
   14002e9ce:	cmp    eax,0x70
   14002e9d1:	je     0x14002e9ee
   14002e9d3:	cmp    eax,0x73
   14002e9d6:	je     0x14002e9e7
   14002e9d8:	cmp    eax,0x75
   14002e9db:	je     0x14002ea2f
   14002e9dd:	cmp    eax,0x78
   14002e9e0:	jne    0x14002ea47
   14002e9e2:	lea    edx,[rax-0x68]
   14002e9e5:	jmp    0x14002ea34
   14002e9e7:	call   0x14002f87c
   14002e9ec:	jmp    0x14002ea43
   14002e9ee:	mov    DWORD PTR [rcx+0x38],0x10
   14002e9f5:	mov    DWORD PTR [rcx+0x3c],0xb
   14002e9fc:	mov    r8b,r15b
   14002e9ff:	mov    edx,0x10
   14002ea04:	jmp    0x14002ea37
   14002ea06:	mov    ecx,DWORD PTR [rcx+0x30]
   14002ea09:	mov    eax,ecx
   14002ea0b:	shr    eax,0x5
   14002ea0e:	test   r15b,al
   14002ea11:	je     0x14002ea1a
   14002ea13:	bts    ecx,0x7
   14002ea17:	mov    DWORD PTR [rbx+0x30],ecx
   14002ea1a:	mov    edx,0x8
   14002ea1f:	mov    rcx,rbx
   14002ea22:	jmp    0x14002ea34
   14002ea24:	call   0x14002f710
   14002ea29:	jmp    0x14002ea43
   14002ea2b:	or     DWORD PTR [rcx+0x30],0x10
   14002ea2f:	mov    edx,0xa
   14002ea34:	xor    r8d,r8d
   14002ea37:	call   0x14002f570
   14002ea3c:	jmp    0x14002ea43
   14002ea3e:	call   0x14002f1d0
   14002ea43:	test   al,al
   14002ea45:	jne    0x14002ea4e
   14002ea47:	xor    al,al
   14002ea49:	jmp    0x14002ebba
   14002ea4e:	cmp    BYTE PTR [rbx+0x40],0x0
   14002ea52:	jne    0x14002ebb7
   14002ea58:	mov    edx,DWORD PTR [rbx+0x30]
   14002ea5b:	xor    eax,eax
   14002ea5d:	mov    DWORD PTR [rsp+0x30],eax
   14002ea61:	xor    edi,edi
   14002ea63:	mov    WORD PTR [rsp+0x34],ax
   14002ea68:	mov    eax,edx
   14002ea6a:	shr    eax,0x4
   14002ea6d:	lea    r13d,[rdi+0x20]
   14002ea71:	test   r15b,al
   14002ea74:	je     0x14002eaa8
   14002ea76:	mov    eax,edx
   14002ea78:	shr    eax,0x6
   14002ea7b:	test   r15b,al
   14002ea7e:	je     0x14002ea8a
   14002ea80:	lea    eax,[rdi+0x2d]
   14002ea83:	mov    WORD PTR [rsp+0x30],ax
   14002ea88:	jmp    0x14002eaa5
   14002ea8a:	test   r15b,dl
   14002ea8d:	je     0x14002ea96
   14002ea8f:	mov    eax,0x2b
   14002ea94:	jmp    0x14002ea83
   14002ea96:	mov    eax,edx
   14002ea98:	shr    eax,1
   14002ea9a:	test   r15b,al
   14002ea9d:	je     0x14002eaa8
   14002ea9f:	mov    WORD PTR [rsp+0x30],r13w
   14002eaa5:	mov    rdi,r15
   14002eaa8:	movzx  ecx,WORD PTR [rbx+0x42]
   14002eaac:	mov    r9d,0xffdf
   14002eab2:	movzx  eax,cx
   14002eab5:	sub    ax,si
   14002eab8:	test   r9w,ax
   14002eabc:	jne    0x14002eacd
   14002eabe:	mov    eax,edx
   14002eac0:	shr    eax,0x5
   14002eac3:	test   r15b,al
   14002eac6:	je     0x14002eacd
   14002eac8:	mov    r8b,r15b
   14002eacb:	jmp    0x14002ead0
   14002eacd:	xor    r8b,r8b
   14002ead0:	movzx  eax,cx
   14002ead3:	mov    r12d,0x30
   14002ead9:	sub    ax,bp
   14002eadc:	test   r9w,ax
   14002eae0:	sete   al
   14002eae3:	test   r8b,r8b
   14002eae6:	jne    0x14002eaec
   14002eae8:	test   al,al
   14002eaea:	je     0x14002eb1b
   14002eaec:	mov    WORD PTR [rsp+rdi*2+0x30],r12w
   14002eaf2:	add    rdi,r15
   14002eaf5:	cmp    cx,si
   14002eaf8:	je     0x14002eb03
   14002eafa:	cmp    cx,bp
   14002eafd:	je     0x14002eb03
   14002eaff:	xor    al,al
   14002eb01:	jmp    0x14002eb06
   14002eb03:	mov    al,r15b
   14002eb06:	neg    al
   14002eb08:	sbb    al,al
   14002eb0a:	and    al,0xe0
   14002eb0c:	add    al,0x61
   14002eb0e:	add    al,0x17
   14002eb10:	movsx  eax,al
   14002eb13:	mov    WORD PTR [rsp+rdi*2+0x30],ax
   14002eb18:	add    rdi,r15
   14002eb1b:	mov    esi,DWORD PTR [rbx+0x34]
   14002eb1e:	sub    esi,DWORD PTR [rbx+0x50]
   14002eb21:	sub    esi,edi
   14002eb23:	test   dl,0xc
   14002eb26:	jne    0x14002eb3e
   14002eb28:	lea    r9,[rbx+0x28]
   14002eb2c:	mov    r8d,esi
   14002eb2f:	lea    rcx,[rbx+0x468]
   14002eb36:	mov    dl,r13b
   14002eb39:	call   0x14002cd10
   14002eb3e:	mov    rax,QWORD PTR [rbx+0x10]
   14002eb42:	lea    rbp,[rbx+0x28]
   14002eb46:	lea    r14,[rbx+0x468]
   14002eb4d:	mov    QWORD PTR [rsp+0x20],rax
   14002eb52:	mov    r9,rbp
   14002eb55:	lea    rdx,[rsp+0x30]
   14002eb5a:	mov    rcx,r14
   14002eb5d:	mov    r8d,edi
   14002eb60:	call   0x14002fe54
   14002eb65:	mov    ecx,DWORD PTR [rbx+0x30]
   14002eb68:	mov    eax,ecx
   14002eb6a:	shr    eax,0x3
   14002eb6d:	test   r15b,al
   14002eb70:	je     0x14002eb8b
   14002eb72:	shr    ecx,0x2
   14002eb75:	test   r15b,cl
   14002eb78:	jne    0x14002eb8b
   14002eb7a:	mov    r9,rbp
   14002eb7d:	mov    r8d,esi
   14002eb80:	mov    dl,r12b
   14002eb83:	mov    rcx,r14
   14002eb86:	call   0x14002cd10
   14002eb8b:	xor    edx,edx
   14002eb8d:	mov    rcx,rbx
   14002eb90:	call   0x14002fb80
   14002eb95:	cmp    DWORD PTR [rbp+0x0],0x0
   14002eb99:	jl     0x14002ebb7
   14002eb9b:	mov    eax,DWORD PTR [rbx+0x30]
   14002eb9e:	shr    eax,0x2
   14002eba1:	test   r15b,al
   14002eba4:	je     0x14002ebb7
   14002eba6:	mov    r9,rbp
   14002eba9:	mov    r8d,esi
   14002ebac:	mov    dl,r13b
   14002ebaf:	mov    rcx,r14
   14002ebb2:	call   0x14002cd10
   14002ebb7:	mov    al,r15b
   14002ebba:	mov    rcx,QWORD PTR [rsp+0x38]
   14002ebbf:	xor    rcx,rsp
   14002ebc2:	call   0x140025df0
   14002ebc7:	lea    r11,[rsp+0x40]
   14002ebcc:	mov    rbx,QWORD PTR [r11+0x38]
   14002ebd0:	mov    rbp,QWORD PTR [r11+0x40]
   14002ebd4:	mov    rsi,QWORD PTR [r11+0x48]
   14002ebd8:	mov    rsp,r11
   14002ebdb:	pop    r15
   14002ebdd:	pop    r14
   14002ebdf:	pop    r13
   14002ebe1:	pop    r12
   14002ebe3:	pop    rdi
   14002ebe4:	ret    
   14002ebe5:	int3   
   14002ebe6:	int3   
   14002ebe7:	int3   
   14002ebe8:	mov    QWORD PTR [rsp+0x10],rbx
   14002ebed:	mov    QWORD PTR [rsp+0x18],rbp
   14002ebf2:	mov    QWORD PTR [rsp+0x20],rsi
   14002ebf7:	push   rdi
   14002ebf8:	push   r12
   14002ebfa:	push   r13
   14002ebfc:	push   r14
   14002ebfe:	push   r15
   14002ec00:	sub    rsp,0x40
   14002ec04:	mov    rax,QWORD PTR [rip+0x42445]        # 0x140071050
   14002ec0b:	xor    rax,rsp
   14002ec0e:	mov    QWORD PTR [rsp+0x38],rax
   14002ec13:	movzx  eax,WORD PTR [rcx+0x42]
   14002ec17:	mov    esi,0x58
   14002ec1c:	mov    rbx,rcx
   14002ec1f:	lea    ebp,[rsi-0x17]
   14002ec22:	lea    r15d,[rsi-0x57]
   14002ec26:	cmp    eax,0x64
   14002ec29:	jg     0x14002ec86
   14002ec2b:	je     0x14002ecf7
   14002ec31:	cmp    eax,ebp
   14002ec33:	je     0x14002ed0a
   14002ec39:	cmp    eax,0x43
   14002ec3c:	je     0x14002ec70
   14002ec3e:	cmp    eax,0x44
   14002ec41:	jle    0x14002ed13
   14002ec47:	cmp    eax,0x47
   14002ec4a:	jle    0x14002ed0a
   14002ec50:	cmp    eax,0x53
   14002ec53:	je     0x14002ecb3
   14002ec55:	cmp    eax,esi
   14002ec57:	je     0x14002ecc8
   14002ec59:	cmp    eax,0x5a
   14002ec5c:	je     0x14002ec7c
   14002ec5e:	cmp    eax,0x61
   14002ec61:	je     0x14002ed0a
   14002ec67:	cmp    eax,0x63
   14002ec6a:	jne    0x14002ed13
   14002ec70:	xor    edx,edx
   14002ec72:	call   0x14002f4c8
   14002ec77:	jmp    0x14002ed0f
   14002ec7c:	call   0x14002ef34
   14002ec81:	jmp    0x14002ed0f
   14002ec86:	cmp    eax,0x67
   14002ec89:	jle    0x14002ed0a
   14002ec8b:	cmp    eax,0x69
   14002ec8e:	je     0x14002ecf7
   14002ec90:	cmp    eax,0x6e
   14002ec93:	je     0x14002ecf0
   14002ec95:	cmp    eax,0x6f
   14002ec98:	je     0x14002ecd2
   14002ec9a:	cmp    eax,0x70
   14002ec9d:	je     0x14002ecba
   14002ec9f:	cmp    eax,0x73
   14002eca2:	je     0x14002ecb3
   14002eca4:	cmp    eax,0x75
   14002eca7:	je     0x14002ecfb
   14002eca9:	cmp    eax,0x78
   14002ecac:	jne    0x14002ed13
   14002ecae:	lea    edx,[rax-0x68]
   14002ecb1:	jmp    0x14002ed00
   14002ecb3:	call   0x14002f87c
   14002ecb8:	jmp    0x14002ed0f
   14002ecba:	mov    DWORD PTR [rcx+0x38],0x10
   14002ecc1:	mov    DWORD PTR [rcx+0x3c],0xb
   14002ecc8:	mov    r8b,r15b
   14002eccb:	mov    edx,0x10
   14002ecd0:	jmp    0x14002ed03
   14002ecd2:	mov    ecx,DWORD PTR [rcx+0x30]
   14002ecd5:	mov    eax,ecx
   14002ecd7:	shr    eax,0x5
   14002ecda:	test   r15b,al
   14002ecdd:	je     0x14002ece6
   14002ecdf:	bts    ecx,0x7
   14002ece3:	mov    DWORD PTR [rbx+0x30],ecx
   14002ece6:	mov    edx,0x8
   14002eceb:	mov    rcx,rbx
   14002ecee:	jmp    0x14002ed00
   14002ecf0:	call   0x14002f710
   14002ecf5:	jmp    0x14002ed0f
   14002ecf7:	or     DWORD PTR [rcx+0x30],0x10
   14002ecfb:	mov    edx,0xa
   14002ed00:	xor    r8d,r8d
   14002ed03:	call   0x14002f570
   14002ed08:	jmp    0x14002ed0f
   14002ed0a:	call   0x14002f1d0
   14002ed0f:	test   al,al
   14002ed11:	jne    0x14002ed1a
   14002ed13:	xor    al,al
   14002ed15:	jmp    0x14002ee86
   14002ed1a:	cmp    BYTE PTR [rbx+0x40],0x0
   14002ed1e:	jne    0x14002ee83
   14002ed24:	mov    edx,DWORD PTR [rbx+0x30]
   14002ed27:	xor    eax,eax
   14002ed29:	mov    DWORD PTR [rsp+0x30],eax
   14002ed2d:	xor    edi,edi
   14002ed2f:	mov    WORD PTR [rsp+0x34],ax
   14002ed34:	mov    eax,edx
   14002ed36:	shr    eax,0x4
   14002ed39:	lea    r13d,[rdi+0x20]
   14002ed3d:	test   r15b,al
   14002ed40:	je     0x14002ed74
   14002ed42:	mov    eax,edx
   14002ed44:	shr    eax,0x6
   14002ed47:	test   r15b,al
   14002ed4a:	je     0x14002ed56
   14002ed4c:	lea    eax,[rdi+0x2d]
   14002ed4f:	mov    WORD PTR [rsp+0x30],ax
   14002ed54:	jmp    0x14002ed71
   14002ed56:	test   r15b,dl
   14002ed59:	je     0x14002ed62
   14002ed5b:	mov    eax,0x2b
   14002ed60:	jmp    0x14002ed4f
   14002ed62:	mov    eax,edx
   14002ed64:	shr    eax,1
   14002ed66:	test   r15b,al
   14002ed69:	je     0x14002ed74
   14002ed6b:	mov    WORD PTR [rsp+0x30],r13w
   14002ed71:	mov    rdi,r15
   14002ed74:	movzx  ecx,WORD PTR [rbx+0x42]
   14002ed78:	mov    r9d,0xffdf
   14002ed7e:	movzx  eax,cx
   14002ed81:	sub    ax,si
   14002ed84:	test   r9w,ax
   14002ed88:	jne    0x14002ed99
   14002ed8a:	mov    eax,edx
   14002ed8c:	shr    eax,0x5
   14002ed8f:	test   r15b,al
   14002ed92:	je     0x14002ed99
   14002ed94:	mov    r8b,r15b
   14002ed97:	jmp    0x14002ed9c
   14002ed99:	xor    r8b,r8b
   14002ed9c:	movzx  eax,cx
   14002ed9f:	mov    r12d,0x30
   14002eda5:	sub    ax,bp
   14002eda8:	test   r9w,ax
   14002edac:	sete   al
   14002edaf:	test   r8b,r8b
   14002edb2:	jne    0x14002edb8
   14002edb4:	test   al,al
   14002edb6:	je     0x14002ede7
   14002edb8:	mov    WORD PTR [rsp+rdi*2+0x30],r12w
   14002edbe:	add    rdi,r15
   14002edc1:	cmp    cx,si
   14002edc4:	je     0x14002edcf
   14002edc6:	cmp    cx,bp
   14002edc9:	je     0x14002edcf
   14002edcb:	xor    al,al
   14002edcd:	jmp    0x14002edd2
   14002edcf:	mov    al,r15b
   14002edd2:	neg    al
   14002edd4:	sbb    al,al
   14002edd6:	and    al,0xe0
   14002edd8:	add    al,0x61
   14002edda:	add    al,0x17
   14002eddc:	movsx  eax,al
   14002eddf:	mov    WORD PTR [rsp+rdi*2+0x30],ax
   14002ede4:	add    rdi,r15
   14002ede7:	mov    esi,DWORD PTR [rbx+0x34]
   14002edea:	sub    esi,DWORD PTR [rbx+0x50]
   14002eded:	sub    esi,edi
   14002edef:	test   dl,0xc
   14002edf2:	jne    0x14002ee0a
   14002edf4:	lea    r9,[rbx+0x28]
   14002edf8:	mov    r8d,esi
   14002edfb:	lea    rcx,[rbx+0x468]
   14002ee02:	mov    dl,r13b
   14002ee05:	call   0x14002cdfc
   14002ee0a:	mov    rax,QWORD PTR [rbx+0x10]
   14002ee0e:	lea    rbp,[rbx+0x28]
   14002ee12:	lea    r14,[rbx+0x468]
   14002ee19:	mov    QWORD PTR [rsp+0x20],rax
   14002ee1e:	mov    r9,rbp
   14002ee21:	lea    rdx,[rsp+0x30]
   14002ee26:	mov    rcx,r14
   14002ee29:	mov    r8d,edi
   14002ee2c:	call   0x14003001c
   14002ee31:	mov    ecx,DWORD PTR [rbx+0x30]
   14002ee34:	mov    eax,ecx
   14002ee36:	shr    eax,0x3
   14002ee39:	test   r15b,al
   14002ee3c:	je     0x14002ee57
   14002ee3e:	shr    ecx,0x2
   14002ee41:	test   r15b,cl
   14002ee44:	jne    0x14002ee57
   14002ee46:	mov    r9,rbp
   14002ee49:	mov    r8d,esi
   14002ee4c:	mov    dl,r12b
   14002ee4f:	mov    rcx,r14
   14002ee52:	call   0x14002cdfc
   14002ee57:	xor    edx,edx
   14002ee59:	mov    rcx,rbx
   14002ee5c:	call   0x14002fc6c
   14002ee61:	cmp    DWORD PTR [rbp+0x0],0x0
   14002ee65:	jl     0x14002ee83
   14002ee67:	mov    eax,DWORD PTR [rbx+0x30]
   14002ee6a:	shr    eax,0x2
   14002ee6d:	test   r15b,al
   14002ee70:	je     0x14002ee83
   14002ee72:	mov    r9,rbp
   14002ee75:	mov    r8d,esi
   14002ee78:	mov    dl,r13b
   14002ee7b:	mov    rcx,r14
   14002ee7e:	call   0x14002cdfc
   14002ee83:	mov    al,r15b
   14002ee86:	mov    rcx,QWORD PTR [rsp+0x38]
   14002ee8b:	xor    rcx,rsp
   14002ee8e:	call   0x140025df0
   14002ee93:	lea    r11,[rsp+0x40]
   14002ee98:	mov    rbx,QWORD PTR [r11+0x38]
   14002ee9c:	mov    rbp,QWORD PTR [r11+0x40]
   14002eea0:	mov    rsi,QWORD PTR [r11+0x48]
   14002eea4:	mov    rsp,r11
   14002eea7:	pop    r15
   14002eea9:	pop    r14
   14002eeab:	pop    r13
   14002eead:	pop    r12
   14002eeaf:	pop    rdi
   14002eeb0:	ret    
   14002eeb1:	int3   
   14002eeb2:	int3   
   14002eeb3:	int3   
   14002eeb4:	mov    QWORD PTR [rsp+0x8],rbx
   14002eeb9:	mov    QWORD PTR [rsp+0x10],rsi
   14002eebe:	push   rdi
   14002eebf:	sub    rsp,0x20
   14002eec3:	add    QWORD PTR [rcx+0x20],0x8
   14002eec8:	mov    rbx,rcx
   14002eecb:	mov    rax,QWORD PTR [rcx+0x20]
   14002eecf:	mov    rdi,QWORD PTR [rax-0x8]
   14002eed3:	test   rdi,rdi
   14002eed6:	je     0x14002ef0b
   14002eed8:	mov    rsi,QWORD PTR [rdi+0x8]
   14002eedc:	test   rsi,rsi
   14002eedf:	je     0x14002ef0b
   14002eee1:	mov    r8d,DWORD PTR [rcx+0x3c]
   14002eee5:	mov    dl,BYTE PTR [rcx+0x41]
   14002eee8:	mov    rcx,QWORD PTR [rcx]
   14002eeeb:	call   0x14002cae0
   14002eef0:	test   al,al
   14002eef2:	mov    QWORD PTR [rbx+0x48],rsi
   14002eef6:	movzx  eax,WORD PTR [rdi]
   14002eef9:	je     0x14002ef06
   14002eefb:	shr    eax,1
   14002eefd:	mov    DWORD PTR [rbx+0x50],eax
   14002ef00:	mov    BYTE PTR [rbx+0x54],0x1
   14002ef04:	jmp    0x14002ef21
   14002ef06:	mov    DWORD PTR [rbx+0x50],eax
   14002ef09:	jmp    0x14002ef1d
   14002ef0b:	lea    rcx,[rip+0x24f4a]        # 0x140053e5c
   14002ef12:	mov    DWORD PTR [rbx+0x50],0x6
   14002ef19:	mov    QWORD PTR [rbx+0x48],rcx
   14002ef1d:	mov    BYTE PTR [rbx+0x54],0x0
   14002ef21:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ef26:	mov    al,0x1
   14002ef28:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ef2d:	add    rsp,0x20
   14002ef31:	pop    rdi
   14002ef32:	ret    
   14002ef33:	int3   
   14002ef34:	mov    QWORD PTR [rsp+0x8],rbx
   14002ef39:	mov    QWORD PTR [rsp+0x10],rsi
   14002ef3e:	push   rdi
   14002ef3f:	sub    rsp,0x20
   14002ef43:	add    QWORD PTR [rcx+0x20],0x8
   14002ef48:	mov    rbx,rcx
   14002ef4b:	mov    rax,QWORD PTR [rcx+0x20]
   14002ef4f:	mov    rdi,QWORD PTR [rax-0x8]
   14002ef53:	test   rdi,rdi
   14002ef56:	je     0x14002ef8c
   14002ef58:	mov    rsi,QWORD PTR [rdi+0x8]
   14002ef5c:	test   rsi,rsi
   14002ef5f:	je     0x14002ef8c
   14002ef61:	mov    r8d,DWORD PTR [rcx+0x3c]
   14002ef65:	movzx  edx,WORD PTR [rcx+0x42]
   14002ef69:	mov    rcx,QWORD PTR [rcx]
   14002ef6c:	call   0x14002cb10
   14002ef71:	test   al,al
   14002ef73:	mov    QWORD PTR [rbx+0x48],rsi
   14002ef77:	movzx  eax,WORD PTR [rdi]
   14002ef7a:	je     0x14002ef87
   14002ef7c:	shr    eax,1
   14002ef7e:	mov    DWORD PTR [rbx+0x50],eax
   14002ef81:	mov    BYTE PTR [rbx+0x54],0x1
   14002ef85:	jmp    0x14002efa2
   14002ef87:	mov    DWORD PTR [rbx+0x50],eax
   14002ef8a:	jmp    0x14002ef9e
   14002ef8c:	lea    rcx,[rip+0x24ec9]        # 0x140053e5c
   14002ef93:	mov    DWORD PTR [rbx+0x50],0x6
   14002ef9a:	mov    QWORD PTR [rbx+0x48],rcx
   14002ef9e:	mov    BYTE PTR [rbx+0x54],0x0
   14002efa2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002efa7:	mov    al,0x1
   14002efa9:	mov    rsi,QWORD PTR [rsp+0x38]
   14002efae:	add    rsp,0x20
   14002efb2:	pop    rdi
   14002efb3:	ret    
   14002efb4:	mov    QWORD PTR [rsp+0x10],rbx
   14002efb9:	push   rdi
   14002efba:	sub    rsp,0x50
   14002efbe:	or     DWORD PTR [rcx+0x30],0x10
   14002efc2:	mov    rbx,rcx
   14002efc5:	mov    eax,DWORD PTR [rcx+0x38]
   14002efc8:	test   eax,eax
   14002efca:	jns    0x14002efe2
   14002efcc:	mov    al,BYTE PTR [rcx+0x41]
   14002efcf:	sub    al,0x41
   14002efd1:	and    al,0xdf
   14002efd3:	neg    al
   14002efd5:	sbb    eax,eax
   14002efd7:	and    eax,0xfffffff9
   14002efda:	add    eax,0xd
   14002efdd:	mov    DWORD PTR [rcx+0x38],eax
   14002efe0:	jmp    0x14002eff4
   14002efe2:	jne    0x14002eff4
   14002efe4:	mov    al,BYTE PTR [rcx+0x41]
   14002efe7:	sub    al,0x47
   14002efe9:	test   al,0xdf
   14002efeb:	jne    0x14002eff4
   14002efed:	mov    DWORD PTR [rcx+0x38],0x1
   14002eff4:	mov    eax,DWORD PTR [rcx+0x38]
   14002eff7:	lea    rdi,[rcx+0x58]
   14002effb:	add    eax,0x15d
   14002f000:	mov    rcx,rdi
   14002f003:	movsxd rdx,eax
   14002f006:	call   0x14002ca34
   14002f00b:	mov    r8d,0x200
   14002f011:	test   al,al
   14002f013:	jne    0x14002f036
   14002f015:	cmp    QWORD PTR [rdi+0x408],0x0
   14002f01d:	jne    0x14002f024
   14002f01f:	mov    eax,r8d
   14002f022:	jmp    0x14002f02e
   14002f024:	mov    rax,QWORD PTR [rdi+0x400]
   14002f02b:	shr    rax,1
   14002f02e:	add    eax,0xfffffea3
   14002f033:	mov    DWORD PTR [rbx+0x38],eax
   14002f036:	mov    rax,QWORD PTR [rdi+0x408]
   14002f03d:	test   rax,rax
   14002f040:	cmove  rax,rdi
   14002f044:	mov    QWORD PTR [rbx+0x48],rax
   14002f048:	xor    eax,eax
   14002f04a:	add    QWORD PTR [rbx+0x20],0x8
   14002f04f:	cmp    QWORD PTR [rdi+0x408],0x0
   14002f057:	mov    QWORD PTR [rsp+0x60],rax
   14002f05c:	mov    rax,QWORD PTR [rbx+0x20]
   14002f060:	movsd  xmm0,QWORD PTR [rax-0x8]
   14002f065:	movsd  QWORD PTR [rsp+0x60],xmm0
   14002f06b:	jne    0x14002f072
   14002f06d:	mov    r9,r8
   14002f070:	jmp    0x14002f07c
   14002f072:	mov    r9,QWORD PTR [rdi+0x400]
   14002f079:	shr    r9,1
   14002f07c:	mov    rcx,QWORD PTR [rdi+0x408]
   14002f083:	test   rcx,rcx
   14002f086:	jne    0x14002f091
   14002f088:	lea    r10,[rdi+0x200]
   14002f08f:	jmp    0x14002f09e
   14002f091:	mov    r10,QWORD PTR [rdi+0x400]
   14002f098:	shr    r10,1
   14002f09b:	add    r10,rcx
   14002f09e:	cmp    rcx,0x0
   14002f0a2:	je     0x14002f0ae
   14002f0a4:	mov    r8,QWORD PTR [rdi+0x400]
   14002f0ab:	shr    r8,1
   14002f0ae:	mov    rax,QWORD PTR [rbx+0x8]
   14002f0b2:	mov    rdx,rcx
   14002f0b5:	mov    QWORD PTR [rsp+0x40],rax
   14002f0ba:	test   rcx,rcx
   14002f0bd:	mov    rax,QWORD PTR [rbx]
   14002f0c0:	movsx  ecx,BYTE PTR [rbx+0x41]
   14002f0c4:	cmove  rdx,rdi
   14002f0c8:	mov    QWORD PTR [rsp+0x38],rax
   14002f0cd:	mov    eax,DWORD PTR [rbx+0x38]
   14002f0d0:	mov    DWORD PTR [rsp+0x30],eax
   14002f0d4:	mov    DWORD PTR [rsp+0x28],ecx
   14002f0d8:	lea    rcx,[rsp+0x60]
   14002f0dd:	mov    QWORD PTR [rsp+0x20],r9
   14002f0e2:	mov    r9,r10
   14002f0e5:	call   0x14003a1e4
   14002f0ea:	mov    eax,DWORD PTR [rbx+0x30]
   14002f0ed:	shr    eax,0x5
   14002f0f0:	test   al,0x1
   14002f0f2:	je     0x14002f107
   14002f0f4:	cmp    DWORD PTR [rbx+0x38],0x0
   14002f0f8:	jne    0x14002f107
   14002f0fa:	mov    rdx,QWORD PTR [rbx+0x8]
   14002f0fe:	mov    rcx,QWORD PTR [rbx+0x48]
   14002f102:	call   0x14002d148
   14002f107:	mov    al,BYTE PTR [rbx+0x41]
   14002f10a:	sub    al,0x47
   14002f10c:	test   al,0xdf
   14002f10e:	jne    0x14002f17d
   14002f110:	mov    eax,DWORD PTR [rbx+0x30]
   14002f113:	shr    eax,0x5
   14002f116:	test   al,0x1
   14002f118:	jne    0x14002f17d
   14002f11a:	mov    rax,QWORD PTR [rbx+0x8]
   14002f11e:	mov    rdx,QWORD PTR [rbx+0x48]
   14002f122:	mov    rcx,QWORD PTR [rax]
   14002f125:	mov    rax,QWORD PTR [rcx+0xf8]
   14002f12c:	mov    rcx,QWORD PTR [rax]
   14002f12f:	mov    r8b,BYTE PTR [rcx]
   14002f132:	jmp    0x14002f13c
   14002f134:	cmp    al,r8b
   14002f137:	je     0x14002f142
   14002f139:	inc    rdx
   14002f13c:	mov    al,BYTE PTR [rdx]
   14002f13e:	test   al,al
   14002f140:	jne    0x14002f134
   14002f142:	mov    al,BYTE PTR [rdx]
   14002f144:	inc    rdx
   14002f147:	test   al,al
   14002f149:	je     0x14002f17d
   14002f14b:	jmp    0x14002f156
   14002f14d:	sub    al,0x45
   14002f14f:	test   al,0xdf
   14002f151:	je     0x14002f15c
   14002f153:	inc    rdx
   14002f156:	mov    al,BYTE PTR [rdx]
   14002f158:	test   al,al
   14002f15a:	jne    0x14002f14d
   14002f15c:	mov    rcx,rdx
   14002f15f:	dec    rdx
   14002f162:	cmp    BYTE PTR [rdx],0x30
   14002f165:	je     0x14002f15f
   14002f167:	cmp    BYTE PTR [rdx],r8b
   14002f16a:	jne    0x14002f16f
   14002f16c:	dec    rdx
   14002f16f:	mov    al,BYTE PTR [rcx]
   14002f171:	inc    rdx
   14002f174:	inc    rcx
   14002f177:	mov    BYTE PTR [rdx],al
   14002f179:	test   al,al
   14002f17b:	jne    0x14002f16f
   14002f17d:	mov    rax,QWORD PTR [rbx+0x48]
   14002f181:	cmp    BYTE PTR [rax],0x2d
   14002f184:	jne    0x14002f191
   14002f186:	or     DWORD PTR [rbx+0x30],0x40
   14002f18a:	inc    rax
   14002f18d:	mov    QWORD PTR [rbx+0x48],rax
   14002f191:	mov    rdx,QWORD PTR [rbx+0x48]
   14002f195:	mov    al,BYTE PTR [rdx]
   14002f197:	sub    al,0x49
   14002f199:	cmp    al,0x25
   14002f19b:	ja     0x14002f1b1
   14002f19d:	movabs rcx,0x2100000021
   14002f1a7:	bt     rcx,rax
   14002f1ab:	jae    0x14002f1b1
   14002f1ad:	mov    BYTE PTR [rbx+0x41],0x73
   14002f1b1:	or     rcx,0xffffffffffffffff
   14002f1b5:	inc    rcx
   14002f1b8:	cmp    BYTE PTR [rdx+rcx*1],0x0
   14002f1bc:	jne    0x14002f1b5
   14002f1be:	mov    DWORD PTR [rbx+0x50],ecx
   14002f1c1:	mov    al,0x1
   14002f1c3:	mov    rbx,QWORD PTR [rsp+0x68]
   14002f1c8:	add    rsp,0x50
   14002f1cc:	pop    rdi
   14002f1cd:	ret    
   14002f1ce:	int3   
   14002f1cf:	int3   
   14002f1d0:	mov    QWORD PTR [rsp+0x10],rbx
   14002f1d5:	mov    QWORD PTR [rsp+0x18],rdi
   14002f1da:	push   r14
   14002f1dc:	sub    rsp,0x50
   14002f1e0:	or     DWORD PTR [rcx+0x30],0x10
   14002f1e4:	mov    rbx,rcx
   14002f1e7:	mov    eax,DWORD PTR [rcx+0x38]
   14002f1ea:	mov    r14d,0xffdf
   14002f1f0:	test   eax,eax
   14002f1f2:	jns    0x14002f210
   14002f1f4:	movzx  eax,WORD PTR [rcx+0x42]
   14002f1f8:	sub    ax,0x41
   14002f1fc:	and    ax,r14w
   14002f200:	neg    ax
   14002f203:	sbb    eax,eax
   14002f205:	and    eax,0xfffffff9
   14002f208:	add    eax,0xd
   14002f20b:	mov    DWORD PTR [rcx+0x38],eax
   14002f20e:	jmp    0x14002f227
   14002f210:	jne    0x14002f227
   14002f212:	movzx  eax,WORD PTR [rcx+0x42]
   14002f216:	sub    ax,0x47
   14002f21a:	test   r14w,ax
   14002f21e:	jne    0x14002f227
   14002f220:	mov    DWORD PTR [rcx+0x38],0x1
   14002f227:	mov    eax,DWORD PTR [rcx+0x38]
   14002f22a:	lea    rdi,[rcx+0x58]
   14002f22e:	add    eax,0x15d
   14002f233:	mov    rcx,rdi
   14002f236:	movsxd rdx,eax
   14002f239:	call   0x14002ca34
   14002f23e:	mov    r8d,0x200
   14002f244:	test   al,al
   14002f246:	jne    0x14002f269
   14002f248:	cmp    QWORD PTR [rdi+0x408],0x0
   14002f250:	jne    0x14002f257
   14002f252:	mov    eax,r8d
   14002f255:	jmp    0x14002f261
   14002f257:	mov    rax,QWORD PTR [rdi+0x400]
   14002f25e:	shr    rax,1
   14002f261:	add    eax,0xfffffea3
   14002f266:	mov    DWORD PTR [rbx+0x38],eax
   14002f269:	mov    rax,QWORD PTR [rdi+0x408]
   14002f270:	test   rax,rax
   14002f273:	cmove  rax,rdi
   14002f277:	mov    QWORD PTR [rbx+0x48],rax
   14002f27b:	xor    eax,eax
   14002f27d:	add    QWORD PTR [rbx+0x20],0x8
   14002f282:	cmp    QWORD PTR [rdi+0x408],0x0
   14002f28a:	mov    QWORD PTR [rsp+0x60],rax
   14002f28f:	mov    rax,QWORD PTR [rbx+0x20]
   14002f293:	movsd  xmm0,QWORD PTR [rax-0x8]
   14002f298:	movsd  QWORD PTR [rsp+0x60],xmm0
   14002f29e:	jne    0x14002f2a5
   14002f2a0:	mov    r9,r8
   14002f2a3:	jmp    0x14002f2af
   14002f2a5:	mov    r9,QWORD PTR [rdi+0x400]
   14002f2ac:	shr    r9,1
   14002f2af:	mov    rcx,QWORD PTR [rdi+0x408]
   14002f2b6:	test   rcx,rcx
   14002f2b9:	jne    0x14002f2c4
   14002f2bb:	lea    r10,[rdi+0x200]
   14002f2c2:	jmp    0x14002f2d1
   14002f2c4:	mov    r10,QWORD PTR [rdi+0x400]
   14002f2cb:	shr    r10,1
   14002f2ce:	add    r10,rcx
   14002f2d1:	cmp    rcx,0x0
   14002f2d5:	je     0x14002f2e1
   14002f2d7:	mov    r8,QWORD PTR [rdi+0x400]
   14002f2de:	shr    r8,1
   14002f2e1:	mov    rax,QWORD PTR [rbx+0x8]
   14002f2e5:	mov    rdx,rcx
   14002f2e8:	mov    QWORD PTR [rsp+0x40],rax
   14002f2ed:	test   rcx,rcx
   14002f2f0:	mov    rax,QWORD PTR [rbx]
   14002f2f3:	movsx  ecx,BYTE PTR [rbx+0x42]
   14002f2f7:	cmove  rdx,rdi
   14002f2fb:	mov    QWORD PTR [rsp+0x38],rax
   14002f300:	mov    eax,DWORD PTR [rbx+0x38]
   14002f303:	mov    DWORD PTR [rsp+0x30],eax
   14002f307:	mov    DWORD PTR [rsp+0x28],ecx
   14002f30b:	lea    rcx,[rsp+0x60]
   14002f310:	mov    QWORD PTR [rsp+0x20],r9
   14002f315:	mov    r9,r10
   14002f318:	call   0x14003a1e4
   14002f31d:	mov    eax,DWORD PTR [rbx+0x30]
   14002f320:	shr    eax,0x5
   14002f323:	test   al,0x1
   14002f325:	je     0x14002f33a
   14002f327:	cmp    DWORD PTR [rbx+0x38],0x0
   14002f32b:	jne    0x14002f33a
   14002f32d:	mov    rdx,QWORD PTR [rbx+0x8]
   14002f331:	mov    rcx,QWORD PTR [rbx+0x48]
   14002f335:	call   0x14002d148
   14002f33a:	movzx  eax,WORD PTR [rbx+0x42]
   14002f33e:	sub    ax,0x47
   14002f342:	test   r14w,ax
   14002f346:	jne    0x14002f3b5
   14002f348:	mov    eax,DWORD PTR [rbx+0x30]
   14002f34b:	shr    eax,0x5
   14002f34e:	test   al,0x1
   14002f350:	jne    0x14002f3b5
   14002f352:	mov    rax,QWORD PTR [rbx+0x8]
   14002f356:	mov    rdx,QWORD PTR [rbx+0x48]
   14002f35a:	mov    rcx,QWORD PTR [rax]
   14002f35d:	mov    rax,QWORD PTR [rcx+0xf8]
   14002f364:	mov    rcx,QWORD PTR [rax]
   14002f367:	mov    r8b,BYTE PTR [rcx]
   14002f36a:	jmp    0x14002f374
   14002f36c:	cmp    al,r8b
   14002f36f:	je     0x14002f37a
   14002f371:	inc    rdx
   14002f374:	mov    al,BYTE PTR [rdx]
   14002f376:	test   al,al
   14002f378:	jne    0x14002f36c
   14002f37a:	mov    al,BYTE PTR [rdx]
   14002f37c:	inc    rdx
   14002f37f:	test   al,al
   14002f381:	je     0x14002f3b5
   14002f383:	jmp    0x14002f38e
   14002f385:	sub    al,0x45
   14002f387:	test   al,0xdf
   14002f389:	je     0x14002f394
   14002f38b:	inc    rdx
   14002f38e:	mov    al,BYTE PTR [rdx]
   14002f390:	test   al,al
   14002f392:	jne    0x14002f385
   14002f394:	mov    rcx,rdx
   14002f397:	dec    rdx
   14002f39a:	cmp    BYTE PTR [rdx],0x30
   14002f39d:	je     0x14002f397
   14002f39f:	cmp    BYTE PTR [rdx],r8b
   14002f3a2:	jne    0x14002f3a7
   14002f3a4:	dec    rdx
   14002f3a7:	mov    al,BYTE PTR [rcx]
   14002f3a9:	inc    rdx
   14002f3ac:	inc    rcx
   14002f3af:	mov    BYTE PTR [rdx],al
   14002f3b1:	test   al,al
   14002f3b3:	jne    0x14002f3a7
   14002f3b5:	mov    rax,QWORD PTR [rbx+0x48]
   14002f3b9:	cmp    BYTE PTR [rax],0x2d
   14002f3bc:	jne    0x14002f3c9
   14002f3be:	or     DWORD PTR [rbx+0x30],0x40
   14002f3c2:	inc    rax
   14002f3c5:	mov    QWORD PTR [rbx+0x48],rax
   14002f3c9:	mov    rdx,QWORD PTR [rbx+0x48]
   14002f3cd:	mov    al,BYTE PTR [rdx]
   14002f3cf:	sub    al,0x49
   14002f3d1:	cmp    al,0x25
   14002f3d3:	ja     0x14002f3ee
   14002f3d5:	movabs rcx,0x2100000021
   14002f3df:	bt     rcx,rax
   14002f3e3:	jae    0x14002f3ee
   14002f3e5:	mov    eax,0x73
   14002f3ea:	mov    WORD PTR [rbx+0x42],ax
   14002f3ee:	or     rcx,0xffffffffffffffff
   14002f3f2:	inc    rcx
   14002f3f5:	cmp    BYTE PTR [rdx+rcx*1],0x0
   14002f3f9:	jne    0x14002f3f2
   14002f3fb:	mov    rdi,QWORD PTR [rsp+0x70]
   14002f400:	mov    al,0x1
   14002f402:	mov    DWORD PTR [rbx+0x50],ecx
   14002f405:	mov    rbx,QWORD PTR [rsp+0x68]
   14002f40a:	add    rsp,0x50
   14002f40e:	pop    r14
   14002f410:	ret    
   14002f411:	int3   
   14002f412:	int3   
   14002f413:	int3   
   14002f414:	mov    QWORD PTR [rsp+0x8],rbx
   14002f419:	push   rdi
   14002f41a:	sub    rsp,0x20
   14002f41e:	mov    r8d,DWORD PTR [rcx+0x3c]
   14002f422:	mov    rbx,rcx
   14002f425:	mov    dl,BYTE PTR [rcx+0x41]
   14002f428:	mov    rcx,QWORD PTR [rcx]
   14002f42b:	call   0x14002cae0
   14002f430:	lea    rdi,[rbx+0x58]
   14002f434:	test   al,al
   14002f436:	je     0x14002f483
   14002f438:	add    QWORD PTR [rbx+0x20],0x8
   14002f43d:	cmp    QWORD PTR [rdi+0x408],0x0
   14002f445:	mov    rax,QWORD PTR [rbx+0x20]
   14002f449:	jne    0x14002f453
   14002f44b:	mov    r8d,0x200
   14002f451:	jmp    0x14002f45d
   14002f453:	mov    r8,QWORD PTR [rdi+0x400]
   14002f45a:	shr    r8,1
   14002f45d:	mov    rdx,QWORD PTR [rdi+0x408]
   14002f464:	lea    rcx,[rbx+0x50]
   14002f468:	movzx  r9d,WORD PTR [rax-0x8]
   14002f46d:	test   rdx,rdx
   14002f470:	cmove  rdx,rdi
   14002f474:	call   0x140039798
   14002f479:	test   eax,eax
   14002f47b:	je     0x14002f4a7
   14002f47d:	mov    BYTE PTR [rbx+0x40],0x1
   14002f481:	jmp    0x14002f4a7
   14002f483:	mov    r8,QWORD PTR [rdi+0x408]
   14002f48a:	test   r8,r8
   14002f48d:	cmove  r8,rdi
   14002f491:	add    QWORD PTR [rbx+0x20],0x8
   14002f496:	mov    rcx,QWORD PTR [rbx+0x20]
   14002f49a:	mov    dl,BYTE PTR [rcx-0x8]
   14002f49d:	mov    BYTE PTR [r8],dl
   14002f4a0:	mov    DWORD PTR [rbx+0x50],0x1
   14002f4a7:	mov    rcx,QWORD PTR [rdi+0x408]
   14002f4ae:	mov    al,0x1
   14002f4b0:	test   rcx,rcx
   14002f4b3:	cmove  rcx,rdi
   14002f4b7:	mov    QWORD PTR [rbx+0x48],rcx
   14002f4bb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f4c0:	add    rsp,0x20
   14002f4c4:	pop    rdi
   14002f4c5:	ret    
   14002f4c6:	int3   
   14002f4c7:	int3   
   14002f4c8:	mov    QWORD PTR [rsp+0x10],rbx
   14002f4cd:	mov    QWORD PTR [rsp+0x18],rsi
   14002f4d2:	push   rdi
   14002f4d3:	sub    rsp,0x20
   14002f4d7:	mov    BYTE PTR [rcx+0x54],0x1
   14002f4db:	mov    rbx,rcx
   14002f4de:	add    QWORD PTR [rcx+0x20],0x8
   14002f4e3:	mov    rax,QWORD PTR [rcx+0x20]
   14002f4e7:	mov    r8d,DWORD PTR [rcx+0x3c]
   14002f4eb:	movzx  edx,WORD PTR [rcx+0x42]
   14002f4ef:	mov    rcx,QWORD PTR [rcx]
   14002f4f2:	movzx  esi,WORD PTR [rax-0x8]
   14002f4f6:	call   0x14002cb10
   14002f4fb:	lea    rdi,[rbx+0x58]
   14002f4ff:	mov    rcx,QWORD PTR [rdi+0x408]
   14002f506:	test   al,al
   14002f508:	jne    0x14002f539
   14002f50a:	mov    r9,QWORD PTR [rbx+0x8]
   14002f50e:	lea    rdx,[rsp+0x30]
   14002f513:	mov    BYTE PTR [rsp+0x30],sil
   14002f518:	test   rcx,rcx
   14002f51b:	mov    BYTE PTR [rsp+0x31],al
   14002f51f:	cmove  rcx,rdi
   14002f523:	mov    rax,QWORD PTR [r9]
   14002f526:	movsxd r8,DWORD PTR [rax+0x8]
   14002f52a:	call   0x1400394c4
   14002f52f:	test   eax,eax
   14002f531:	jns    0x14002f543
   14002f533:	mov    BYTE PTR [rbx+0x40],0x1
   14002f537:	jmp    0x14002f543
   14002f539:	test   rcx,rcx
   14002f53c:	cmove  rcx,rdi
   14002f540:	mov    WORD PTR [rcx],si
   14002f543:	mov    rcx,QWORD PTR [rdi+0x408]
   14002f54a:	mov    al,0x1
   14002f54c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002f551:	test   rcx,rcx
   14002f554:	mov    DWORD PTR [rbx+0x50],0x1
   14002f55b:	cmove  rcx,rdi
   14002f55f:	mov    QWORD PTR [rbx+0x48],rcx
   14002f563:	mov    rbx,QWORD PTR [rsp+0x38]
   14002f568:	add    rsp,0x20
   14002f56c:	pop    rdi
   14002f56d:	ret    
   14002f56e:	int3   
   14002f56f:	int3   
   14002f570:	rex push rbx
   14002f572:	sub    rsp,0x20
   14002f576:	mov    r11d,0x8
   14002f57c:	mov    rbx,rcx
   14002f57f:	mov    ecx,DWORD PTR [rcx+0x3c]
   14002f582:	mov    r9b,r8b
   14002f585:	mov    r10d,edx
   14002f588:	lea    r8d,[r11-0x4]
   14002f58c:	cmp    ecx,0x5
   14002f58f:	jg     0x14002f5f6
   14002f591:	je     0x14002f5ab
   14002f593:	test   ecx,ecx
   14002f595:	je     0x14002f5e3
   14002f597:	sub    ecx,0x1
   14002f59a:	je     0x14002f5ef
   14002f59c:	sub    ecx,0x1
   14002f59f:	je     0x14002f5e8
   14002f5a1:	sub    ecx,0x1
   14002f5a4:	je     0x14002f5e3
   14002f5a6:	cmp    ecx,0x1
   14002f5a9:	jne    0x14002f607
   14002f5ab:	mov    rdx,r11
   14002f5ae:	mov    rax,rdx
   14002f5b1:	sub    rax,0x1
   14002f5b5:	je     0x14002f65d
   14002f5bb:	sub    rax,0x1
   14002f5bf:	je     0x14002f63e
   14002f5c1:	sub    rax,0x2
   14002f5c5:	je     0x14002f621
   14002f5c7:	cmp    rax,r8
   14002f5ca:	je     0x14002f60b
   14002f5cc:	call   0x140032c50
   14002f5d1:	mov    DWORD PTR [rax],0x16
   14002f5d7:	call   0x1400307d0
   14002f5dc:	xor    al,al
   14002f5de:	jmp    0x14002f709
   14002f5e3:	mov    rdx,r8
   14002f5e6:	jmp    0x14002f5ae
   14002f5e8:	mov    edx,0x2
   14002f5ed:	jmp    0x14002f5ae
   14002f5ef:	mov    edx,0x1
   14002f5f4:	jmp    0x14002f5ae
   14002f5f6:	sub    ecx,0x6
   14002f5f9:	je     0x14002f5ab
   14002f5fb:	sub    ecx,0x1
   14002f5fe:	je     0x14002f5ab
   14002f600:	sub    ecx,0x2
   14002f603:	je     0x14002f5ab
   14002f605:	jmp    0x14002f5a1
   14002f607:	xor    edx,edx
   14002f609:	jmp    0x14002f5ae
   14002f60b:	mov    eax,DWORD PTR [rbx+0x30]
   14002f60e:	add    QWORD PTR [rbx+0x20],r11
   14002f612:	shr    eax,0x4
   14002f615:	test   al,0x1
   14002f617:	mov    rax,QWORD PTR [rbx+0x20]
   14002f61b:	mov    rcx,QWORD PTR [rax-0x8]
   14002f61f:	jmp    0x14002f67a
   14002f621:	mov    eax,DWORD PTR [rbx+0x30]
   14002f624:	add    QWORD PTR [rbx+0x20],r11
   14002f628:	shr    eax,0x4
   14002f62b:	test   al,0x1
   14002f62d:	mov    rax,QWORD PTR [rbx+0x20]
   14002f631:	je     0x14002f639
   14002f633:	movsxd rcx,DWORD PTR [rax-0x8]
   14002f637:	jmp    0x14002f67a
   14002f639:	mov    ecx,DWORD PTR [rax-0x8]
   14002f63c:	jmp    0x14002f67a
   14002f63e:	mov    eax,DWORD PTR [rbx+0x30]
   14002f641:	add    QWORD PTR [rbx+0x20],r11
   14002f645:	shr    eax,0x4
   14002f648:	test   al,0x1
   14002f64a:	mov    rax,QWORD PTR [rbx+0x20]
   14002f64e:	je     0x14002f657
   14002f650:	movsx  rcx,WORD PTR [rax-0x8]
   14002f655:	jmp    0x14002f67a
   14002f657:	movzx  ecx,WORD PTR [rax-0x8]
   14002f65b:	jmp    0x14002f67a
   14002f65d:	mov    eax,DWORD PTR [rbx+0x30]
   14002f660:	add    QWORD PTR [rbx+0x20],r11
   14002f664:	shr    eax,0x4
   14002f667:	test   al,0x1
   14002f669:	mov    rax,QWORD PTR [rbx+0x20]
   14002f66d:	je     0x14002f676
   14002f66f:	movsx  rcx,BYTE PTR [rax-0x8]
   14002f674:	jmp    0x14002f67a
   14002f676:	movzx  ecx,BYTE PTR [rax-0x8]
   14002f67a:	mov    r8d,DWORD PTR [rbx+0x30]
   14002f67e:	mov    eax,r8d
   14002f681:	shr    eax,0x4
   14002f684:	test   al,0x1
   14002f686:	je     0x14002f698
   14002f688:	test   rcx,rcx
   14002f68b:	jns    0x14002f698
   14002f68d:	neg    rcx
   14002f690:	or     r8d,0x40
   14002f694:	mov    DWORD PTR [rbx+0x30],r8d
   14002f698:	cmp    DWORD PTR [rbx+0x38],0x0
   14002f69c:	jge    0x14002f6a7
   14002f69e:	mov    DWORD PTR [rbx+0x38],0x1
   14002f6a5:	jmp    0x14002f6b8
   14002f6a7:	and    DWORD PTR [rbx+0x30],0xfffffff7
   14002f6ab:	mov    eax,0x200
   14002f6b0:	cmp    DWORD PTR [rbx+0x38],eax
   14002f6b3:	jle    0x14002f6b8
   14002f6b5:	mov    DWORD PTR [rbx+0x38],eax
   14002f6b8:	test   rcx,rcx
   14002f6bb:	jne    0x14002f6c1
   14002f6bd:	and    DWORD PTR [rbx+0x30],0xffffffdf
   14002f6c1:	mov    r8d,r10d
   14002f6c4:	cmp    rdx,r11
   14002f6c7:	jne    0x14002f6d6
   14002f6c9:	mov    rdx,rcx
   14002f6cc:	mov    rcx,rbx
   14002f6cf:	call   0x14002cbf0
   14002f6d4:	jmp    0x14002f6e0
   14002f6d6:	mov    edx,ecx
   14002f6d8:	mov    rcx,rbx
   14002f6db:	call   0x14002cb54
   14002f6e0:	mov    eax,DWORD PTR [rbx+0x30]
   14002f6e3:	shr    eax,0x7
   14002f6e6:	test   al,0x1
   14002f6e8:	je     0x14002f707
   14002f6ea:	cmp    DWORD PTR [rbx+0x50],0x0
   14002f6ee:	je     0x14002f6f9
   14002f6f0:	mov    rcx,QWORD PTR [rbx+0x48]
   14002f6f4:	cmp    BYTE PTR [rcx],0x30
   14002f6f7:	je     0x14002f707
   14002f6f9:	dec    QWORD PTR [rbx+0x48]
   14002f6fd:	mov    rcx,QWORD PTR [rbx+0x48]
   14002f701:	mov    BYTE PTR [rcx],0x30
   14002f704:	inc    DWORD PTR [rbx+0x50]
   14002f707:	mov    al,0x1
   14002f709:	add    rsp,0x20
   14002f70d:	pop    rbx
   14002f70e:	ret    
   14002f70f:	int3   
   14002f710:	mov    QWORD PTR [rsp+0x8],rbx
   14002f715:	mov    QWORD PTR [rsp+0x10],rsi
   14002f71a:	push   rdi
   14002f71b:	sub    rsp,0x20
   14002f71f:	mov    ebx,0x8
   14002f724:	mov    rdi,rcx
   14002f727:	add    QWORD PTR [rcx+0x20],rbx
   14002f72b:	mov    rax,QWORD PTR [rcx+0x20]
   14002f72f:	mov    rsi,QWORD PTR [rax-0x8]
   14002f733:	call   0x14003a5e4
   14002f738:	test   eax,eax
   14002f73a:	jne    0x14002f753
   14002f73c:	call   0x140032c50
   14002f741:	mov    DWORD PTR [rax],0x16
   14002f747:	call   0x1400307d0
   14002f74c:	xor    al,al
   14002f74e:	jmp    0x14002f7db
   14002f753:	mov    ecx,DWORD PTR [rdi+0x3c]
   14002f756:	mov    edx,0x4
   14002f75b:	cmp    ecx,0x5
   14002f75e:	jg     0x14002f78c
   14002f760:	je     0x14002f7a0
   14002f762:	test   ecx,ecx
   14002f764:	je     0x14002f79d
   14002f766:	sub    ecx,0x1
   14002f769:	je     0x14002f785
   14002f76b:	sub    ecx,0x1
   14002f76e:	je     0x14002f77e
   14002f770:	sub    ecx,0x1
   14002f773:	je     0x14002f79d
   14002f775:	cmp    ecx,0x1
   14002f778:	je     0x14002f7a0
   14002f77a:	xor    ebx,ebx
   14002f77c:	jmp    0x14002f7a0
   14002f77e:	mov    ebx,0x2
   14002f783:	jmp    0x14002f7a0
   14002f785:	mov    ebx,0x1
   14002f78a:	jmp    0x14002f7a0
   14002f78c:	sub    ecx,0x6
   14002f78f:	je     0x14002f7a0
   14002f791:	sub    ecx,0x1
   14002f794:	je     0x14002f7a0
   14002f796:	sub    ecx,0x2
   14002f799:	je     0x14002f7a0
   14002f79b:	jmp    0x14002f770
   14002f79d:	mov    rbx,rdx
   14002f7a0:	sub    rbx,0x1
   14002f7a4:	je     0x14002f7d0
   14002f7a6:	sub    rbx,0x1
   14002f7aa:	je     0x14002f7c7
   14002f7ac:	sub    rbx,0x2
   14002f7b0:	je     0x14002f7c0
   14002f7b2:	cmp    rbx,rdx
   14002f7b5:	jne    0x14002f73c
   14002f7b7:	movsxd rax,DWORD PTR [rdi+0x28]
   14002f7bb:	mov    QWORD PTR [rsi],rax
   14002f7be:	jmp    0x14002f7d5
   14002f7c0:	mov    eax,DWORD PTR [rdi+0x28]
   14002f7c3:	mov    DWORD PTR [rsi],eax
   14002f7c5:	jmp    0x14002f7d5
   14002f7c7:	movzx  eax,WORD PTR [rdi+0x28]
   14002f7cb:	mov    WORD PTR [rsi],ax
   14002f7ce:	jmp    0x14002f7d5
   14002f7d0:	mov    cl,BYTE PTR [rdi+0x28]
   14002f7d3:	mov    BYTE PTR [rsi],cl
   14002f7d5:	mov    BYTE PTR [rdi+0x40],0x1
   14002f7d9:	mov    al,0x1
   14002f7db:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f7e0:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f7e5:	add    rsp,0x20
   14002f7e9:	pop    rdi
   14002f7ea:	ret    
   14002f7eb:	int3   
   14002f7ec:	mov    QWORD PTR [rsp+0x8],rbx
   14002f7f1:	mov    QWORD PTR [rsp+0x10],rsi
   14002f7f6:	push   rdi
   14002f7f7:	sub    rsp,0x20
   14002f7fb:	add    QWORD PTR [rcx+0x20],0x8
   14002f800:	mov    rbx,rcx
   14002f803:	mov    rax,QWORD PTR [rcx+0x20]
   14002f807:	mov    esi,DWORD PTR [rcx+0x38]
   14002f80a:	cmp    esi,0xffffffff
   14002f80d:	mov    r8d,DWORD PTR [rcx+0x3c]
   14002f811:	mov    dl,BYTE PTR [rcx+0x41]
   14002f814:	mov    rdi,QWORD PTR [rax-0x8]
   14002f818:	mov    eax,0x7fffffff
   14002f81d:	mov    QWORD PTR [rcx+0x48],rdi
   14002f821:	cmove  esi,eax
   14002f824:	mov    rcx,QWORD PTR [rcx]
   14002f827:	call   0x14002cae0
   14002f82c:	movsxd rdx,esi
   14002f82f:	test   al,al
   14002f831:	je     0x14002f850
   14002f833:	test   rdi,rdi
   14002f836:	mov    BYTE PTR [rbx+0x54],0x1
   14002f83a:	lea    rcx,[rip+0x24627]        # 0x140053e68
   14002f841:	cmovne rcx,rdi
   14002f845:	mov    QWORD PTR [rbx+0x48],rcx
   14002f849:	call   0x140032e04
   14002f84e:	jmp    0x14002f867
   14002f850:	test   rdi,rdi
   14002f853:	lea    rcx,[rip+0x24602]        # 0x140053e5c
   14002f85a:	cmovne rcx,rdi
   14002f85e:	mov    QWORD PTR [rbx+0x48],rcx
   14002f862:	call   0x140032ca8
   14002f867:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f86c:	mov    DWORD PTR [rbx+0x50],eax
   14002f86f:	mov    al,0x1
   14002f871:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f876:	add    rsp,0x20
   14002f87a:	pop    rdi
   14002f87b:	ret    
   14002f87c:	mov    QWORD PTR [rsp+0x8],rbx
   14002f881:	mov    QWORD PTR [rsp+0x10],rsi
   14002f886:	push   rdi
   14002f887:	sub    rsp,0x20
   14002f88b:	add    QWORD PTR [rcx+0x20],0x8
   14002f890:	mov    rbx,rcx
   14002f893:	mov    rax,QWORD PTR [rcx+0x20]
   14002f897:	mov    edi,DWORD PTR [rcx+0x38]
   14002f89a:	cmp    edi,0xffffffff
   14002f89d:	mov    r8d,DWORD PTR [rcx+0x3c]
   14002f8a1:	movzx  edx,WORD PTR [rcx+0x42]
   14002f8a5:	mov    rsi,QWORD PTR [rax-0x8]
   14002f8a9:	mov    eax,0x7fffffff
   14002f8ae:	mov    QWORD PTR [rcx+0x48],rsi
   14002f8b2:	cmove  edi,eax
   14002f8b5:	mov    rcx,QWORD PTR [rcx]
   14002f8b8:	call   0x14002cb10
   14002f8bd:	test   al,al
   14002f8bf:	je     0x14002f8e4
   14002f8c1:	test   rsi,rsi
   14002f8c4:	movsxd rdx,edi
   14002f8c7:	lea    rcx,[rip+0x2459a]        # 0x140053e68
   14002f8ce:	mov    BYTE PTR [rbx+0x54],0x1
   14002f8d2:	cmovne rcx,rsi
   14002f8d6:	mov    QWORD PTR [rbx+0x48],rcx
   14002f8da:	call   0x140032e04
   14002f8df:	mov    DWORD PTR [rbx+0x50],eax
   14002f8e2:	jmp    0x14002f930
   14002f8e4:	test   rsi,rsi
   14002f8e7:	jne    0x14002f8f4
   14002f8e9:	lea    rax,[rip+0x2456c]        # 0x140053e5c
   14002f8f0:	mov    QWORD PTR [rbx+0x48],rax
   14002f8f4:	mov    r8,QWORD PTR [rbx+0x48]
   14002f8f8:	xor    r9d,r9d
   14002f8fb:	test   edi,edi
   14002f8fd:	jle    0x14002f92c
   14002f8ff:	cmp    BYTE PTR [r8],0x0
   14002f903:	je     0x14002f92c
   14002f905:	mov    rax,QWORD PTR [rbx+0x8]
   14002f909:	movzx  edx,BYTE PTR [r8]
   14002f90d:	mov    rcx,QWORD PTR [rax]
   14002f910:	mov    rax,QWORD PTR [rcx]
   14002f913:	mov    ecx,0x8000
   14002f918:	test   WORD PTR [rax+rdx*2],cx
   14002f91c:	je     0x14002f921
   14002f91e:	inc    r8
   14002f921:	inc    r8
   14002f924:	inc    r9d
   14002f927:	cmp    r9d,edi
   14002f92a:	jl     0x14002f8ff
   14002f92c:	mov    DWORD PTR [rbx+0x50],r9d
   14002f930:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f935:	mov    al,0x1
   14002f937:	mov    rsi,QWORD PTR [rsp+0x38]
   14002f93c:	add    rsp,0x20
   14002f940:	pop    rdi
   14002f941:	ret    
   14002f942:	int3   
   14002f943:	int3   
   14002f944:	sub    rsp,0x28
   14002f948:	mov    eax,DWORD PTR [rcx+0x14]
   14002f94b:	shr    eax,0xc
   14002f94e:	test   al,0x1
   14002f950:	jne    0x14002f9c9
   14002f952:	call   0x14003a5a4
   14002f957:	movsxd r8,eax
   14002f95a:	lea    rcx,[rip+0x41b0f]        # 0x140071470
   14002f961:	lea    r9,[rip+0x47358]        # 0x140076cc0
   14002f968:	lea    eax,[r8+0x2]
   14002f96c:	cmp    eax,0x1
   14002f96f:	jbe    0x14002f988
   14002f971:	mov    rdx,r8
   14002f974:	mov    rax,r8
   14002f977:	and    edx,0x3f
   14002f97a:	sar    rax,0x6
   14002f97e:	shl    rdx,0x6
   14002f982:	add    rdx,QWORD PTR [r9+rax*8]
   14002f986:	jmp    0x14002f98b
   14002f988:	mov    rdx,rcx
   14002f98b:	cmp    BYTE PTR [rdx+0x39],0x0
   14002f98f:	jne    0x14002f9b5
   14002f991:	lea    eax,[r8+0x2]
   14002f995:	cmp    eax,0x1
   14002f998:	jbe    0x14002f9af
   14002f99a:	mov    rcx,r8
   14002f99d:	mov    rax,r8
   14002f9a0:	and    ecx,0x3f
   14002f9a3:	sar    rax,0x6
   14002f9a7:	shl    rcx,0x6
   14002f9ab:	add    rcx,QWORD PTR [r9+rax*8]
   14002f9af:	test   BYTE PTR [rcx+0x3d],0x1
   14002f9b3:	je     0x14002f9c9
   14002f9b5:	call   0x140032c50
   14002f9ba:	mov    DWORD PTR [rax],0x16
   14002f9c0:	call   0x1400307d0
   14002f9c5:	xor    al,al
   14002f9c7:	jmp    0x14002f9cb
   14002f9c9:	mov    al,0x1
   14002f9cb:	add    rsp,0x28
   14002f9cf:	ret    
   14002f9d0:	mov    QWORD PTR [rsp+0x10],rbx
   14002f9d5:	mov    QWORD PTR [rsp+0x18],rsi
   14002f9da:	push   rdi
   14002f9db:	sub    rsp,0x50
   14002f9df:	mov    rax,QWORD PTR [rip+0x4166a]        # 0x140071050
   14002f9e6:	xor    rax,rsp
   14002f9e9:	mov    QWORD PTR [rsp+0x40],rax
   14002f9ee:	cmp    BYTE PTR [rcx+0x54],0x0
   14002f9f2:	mov    rbx,rcx
   14002f9f5:	je     0x14002fa65
   14002f9f7:	mov    eax,DWORD PTR [rcx+0x50]
   14002f9fa:	test   eax,eax
   14002f9fc:	jle    0x14002fa65
   14002f9fe:	mov    rsi,QWORD PTR [rcx+0x48]
   14002fa02:	xor    edi,edi
   14002fa04:	test   eax,eax
   14002fa06:	je     0x14002fa86
   14002fa08:	movzx  r9d,WORD PTR [rsi]
   14002fa0c:	lea    rdx,[rsp+0x34]
   14002fa11:	and    DWORD PTR [rsp+0x30],0x0
   14002fa16:	lea    rcx,[rsp+0x30]
   14002fa1b:	mov    r8d,0x6
   14002fa21:	lea    rsi,[rsi+0x2]
   14002fa25:	call   0x140039798
   14002fa2a:	test   eax,eax
   14002fa2c:	jne    0x14002fa5f
   14002fa2e:	mov    r8d,DWORD PTR [rsp+0x30]
   14002fa33:	test   r8d,r8d
   14002fa36:	je     0x14002fa5f
   14002fa38:	mov    rax,QWORD PTR [rbx+0x10]
   14002fa3c:	lea    r9,[rbx+0x28]
   14002fa40:	lea    rcx,[rbx+0x468]
   14002fa47:	mov    QWORD PTR [rsp+0x20],rax
   14002fa4c:	lea    rdx,[rsp+0x34]
   14002fa51:	call   0x14002fd5c
   14002fa56:	inc    edi
   14002fa58:	cmp    edi,DWORD PTR [rbx+0x50]
   14002fa5b:	jne    0x14002fa08
   14002fa5d:	jmp    0x14002fa86
   14002fa5f:	or     DWORD PTR [rbx+0x28],0xffffffff
   14002fa63:	jmp    0x14002fa86
   14002fa65:	mov    rax,QWORD PTR [rbx+0x10]
   14002fa69:	lea    r9,[rcx+0x28]
   14002fa6d:	mov    r8d,DWORD PTR [rbx+0x50]
   14002fa71:	add    rcx,0x468
   14002fa78:	mov    rdx,QWORD PTR [rbx+0x48]
   14002fa7c:	mov    QWORD PTR [rsp+0x20],rax
   14002fa81:	call   0x14002fd5c
   14002fa86:	mov    al,0x1
   14002fa88:	mov    rcx,QWORD PTR [rsp+0x40]
   14002fa8d:	xor    rcx,rsp
   14002fa90:	call   0x140025df0
   14002fa95:	mov    rbx,QWORD PTR [rsp+0x68]
   14002fa9a:	mov    rsi,QWORD PTR [rsp+0x70]
   14002fa9f:	add    rsp,0x50
   14002faa3:	pop    rdi
   14002faa4:	ret    
   14002faa5:	int3   
   14002faa6:	int3   
   14002faa7:	int3   
   14002faa8:	mov    QWORD PTR [rsp+0x10],rbx
   14002faad:	mov    QWORD PTR [rsp+0x18],rsi
   14002fab2:	push   rdi
   14002fab3:	sub    rsp,0x50
   14002fab7:	mov    rax,QWORD PTR [rip+0x41592]        # 0x140071050
   14002fabe:	xor    rax,rsp
   14002fac1:	mov    QWORD PTR [rsp+0x40],rax
   14002fac6:	cmp    BYTE PTR [rcx+0x54],0x0
   14002faca:	mov    rbx,rcx
   14002facd:	je     0x14002fb3d
   14002facf:	mov    eax,DWORD PTR [rcx+0x50]
   14002fad2:	test   eax,eax
   14002fad4:	jle    0x14002fb3d
   14002fad6:	mov    rsi,QWORD PTR [rcx+0x48]
   14002fada:	xor    edi,edi
   14002fadc:	test   eax,eax
   14002fade:	je     0x14002fb5e
   14002fae0:	movzx  r9d,WORD PTR [rsi]
   14002fae4:	lea    rdx,[rsp+0x34]
   14002fae9:	and    DWORD PTR [rsp+0x30],0x0
   14002faee:	lea    rcx,[rsp+0x30]
   14002faf3:	mov    r8d,0x6
   14002faf9:	lea    rsi,[rsi+0x2]
   14002fafd:	call   0x140039798
   14002fb02:	test   eax,eax
   14002fb04:	jne    0x14002fb37
   14002fb06:	mov    r8d,DWORD PTR [rsp+0x30]
   14002fb0b:	test   r8d,r8d
   14002fb0e:	je     0x14002fb37
   14002fb10:	mov    rax,QWORD PTR [rbx+0x10]
   14002fb14:	lea    r9,[rbx+0x28]
   14002fb18:	lea    rcx,[rbx+0x468]
   14002fb1f:	mov    QWORD PTR [rsp+0x20],rax
   14002fb24:	lea    rdx,[rsp+0x34]
   14002fb29:	call   0x14002ff60
   14002fb2e:	inc    edi
   14002fb30:	cmp    edi,DWORD PTR [rbx+0x50]
   14002fb33:	jne    0x14002fae0
   14002fb35:	jmp    0x14002fb5e
   14002fb37:	or     DWORD PTR [rbx+0x28],0xffffffff
   14002fb3b:	jmp    0x14002fb5e
   14002fb3d:	mov    rax,QWORD PTR [rbx+0x10]
   14002fb41:	lea    r9,[rcx+0x28]
   14002fb45:	mov    r8d,DWORD PTR [rbx+0x50]
   14002fb49:	add    rcx,0x468
   14002fb50:	mov    rdx,QWORD PTR [rbx+0x48]
   14002fb54:	mov    QWORD PTR [rsp+0x20],rax
   14002fb59:	call   0x14002ff60
   14002fb5e:	mov    al,0x1
   14002fb60:	mov    rcx,QWORD PTR [rsp+0x40]
   14002fb65:	xor    rcx,rsp
   14002fb68:	call   0x140025df0
   14002fb6d:	mov    rbx,QWORD PTR [rsp+0x68]
   14002fb72:	mov    rsi,QWORD PTR [rsp+0x70]
   14002fb77:	add    rsp,0x50
   14002fb7b:	pop    rdi
   14002fb7c:	ret    
   14002fb7d:	int3   
   14002fb7e:	int3   
   14002fb7f:	int3   
   14002fb80:	mov    QWORD PTR [rsp+0x10],rbx
   14002fb85:	mov    QWORD PTR [rsp+0x18],rbp
   14002fb8a:	push   rsi
   14002fb8b:	push   rdi
   14002fb8c:	push   r14
   14002fb8e:	sub    rsp,0x30
   14002fb92:	xor    r14d,r14d
   14002fb95:	mov    rbx,rcx
   14002fb98:	cmp    BYTE PTR [rcx+0x54],r14b
   14002fb9c:	jne    0x14002fc36
   14002fba2:	mov    eax,DWORD PTR [rcx+0x50]
   14002fba5:	test   eax,eax
   14002fba7:	jle    0x14002fc36
   14002fbad:	mov    rsi,QWORD PTR [rcx+0x48]
   14002fbb1:	mov    edi,r14d
   14002fbb4:	mov    r9,QWORD PTR [rbx+0x8]
   14002fbb8:	lea    rcx,[rsp+0x50]
   14002fbbd:	mov    WORD PTR [rsp+0x50],r14w
   14002fbc3:	mov    rdx,rsi
   14002fbc6:	mov    rax,QWORD PTR [r9]
   14002fbc9:	movsxd r8,DWORD PTR [rax+0x8]
   14002fbcd:	call   0x1400394c4
   14002fbd2:	movsxd rbp,eax
   14002fbd5:	test   eax,eax
   14002fbd7:	jle    0x14002fc30
   14002fbd9:	mov    rax,QWORD PTR [rbx+0x468]
   14002fbe0:	movzx  r8d,WORD PTR [rsp+0x50]
   14002fbe6:	mov    ecx,DWORD PTR [rax+0x14]
   14002fbe9:	shr    ecx,0xc
   14002fbec:	test   cl,0x1
   14002fbef:	je     0x14002fbfe
   14002fbf1:	mov    rax,QWORD PTR [rbx+0x468]
   14002fbf8:	cmp    QWORD PTR [rax+0x8],r14
   14002fbfc:	je     0x14002fc1e
   14002fbfe:	mov    rdx,QWORD PTR [rbx+0x468]
   14002fc05:	movzx  ecx,r8w
   14002fc09:	call   0x14003a428
   14002fc0e:	mov    ecx,0xffff
   14002fc13:	cmp    ax,cx
   14002fc16:	jne    0x14002fc1e
   14002fc18:	or     DWORD PTR [rbx+0x28],0xffffffff
   14002fc1c:	jmp    0x14002fc21
   14002fc1e:	inc    DWORD PTR [rbx+0x28]
   14002fc21:	add    rsi,rbp
   14002fc24:	inc    edi
   14002fc26:	mov    rax,rbp
   14002fc29:	cmp    edi,DWORD PTR [rbx+0x50]
   14002fc2c:	jne    0x14002fbb4
   14002fc2e:	jmp    0x14002fc57
   14002fc30:	or     DWORD PTR [rbx+0x28],0xffffffff
   14002fc34:	jmp    0x14002fc57
   14002fc36:	mov    rax,QWORD PTR [rbx+0x10]
   14002fc3a:	lea    r9,[rcx+0x28]
   14002fc3e:	mov    r8d,DWORD PTR [rbx+0x50]
   14002fc42:	add    rcx,0x468
   14002fc49:	mov    rdx,QWORD PTR [rbx+0x48]
   14002fc4d:	mov    QWORD PTR [rsp+0x20],rax
   14002fc52:	call   0x14002fe54
   14002fc57:	mov    rbx,QWORD PTR [rsp+0x58]
   14002fc5c:	mov    al,0x1
   14002fc5e:	mov    rbp,QWORD PTR [rsp+0x60]
   14002fc63:	add    rsp,0x30
   14002fc67:	pop    r14
   14002fc69:	pop    rdi
   14002fc6a:	pop    rsi
   14002fc6b:	ret    
   14002fc6c:	mov    QWORD PTR [rsp+0x10],rbx
   14002fc71:	mov    QWORD PTR [rsp+0x18],rbp
   14002fc76:	mov    QWORD PTR [rsp+0x20],rsi
   14002fc7b:	push   rdi
   14002fc7c:	sub    rsp,0x30
   14002fc80:	xor    ebp,ebp
   14002fc82:	mov    rbx,rcx
   14002fc85:	cmp    BYTE PTR [rcx+0x54],bpl
   14002fc89:	jne    0x14002fd21
   14002fc8f:	mov    eax,DWORD PTR [rcx+0x50]
   14002fc92:	test   eax,eax
   14002fc94:	jle    0x14002fd21
   14002fc9a:	mov    rsi,QWORD PTR [rcx+0x48]
   14002fc9e:	mov    edi,ebp
   14002fca0:	mov    r9,QWORD PTR [rbx+0x8]
   14002fca4:	lea    rcx,[rsp+0x40]
   14002fca9:	mov    WORD PTR [rsp+0x40],bp
   14002fcae:	mov    rdx,rsi
   14002fcb1:	mov    rax,QWORD PTR [r9]
   14002fcb4:	movsxd r8,DWORD PTR [rax+0x8]
   14002fcb8:	call   0x1400394c4
   14002fcbd:	movsxd rdx,eax
   14002fcc0:	test   eax,eax
   14002fcc2:	jle    0x14002fd1b
   14002fcc4:	mov    rcx,QWORD PTR [rbx+0x468]
   14002fccb:	movzx  r8d,WORD PTR [rsp+0x40]
   14002fcd1:	mov    rax,QWORD PTR [rcx+0x8]
   14002fcd5:	cmp    QWORD PTR [rcx+0x10],rax
   14002fcd9:	jne    0x14002fcec
   14002fcdb:	cmp    BYTE PTR [rcx+0x18],bpl
   14002fcdf:	je     0x14002fce6
   14002fce1:	inc    DWORD PTR [rbx+0x28]
   14002fce4:	jmp    0x14002fd0c
   14002fce6:	or     DWORD PTR [rbx+0x28],0xffffffff
   14002fcea:	jmp    0x14002fd0c
   14002fcec:	inc    DWORD PTR [rbx+0x28]
   14002fcef:	inc    QWORD PTR [rcx+0x10]
   14002fcf3:	mov    rax,QWORD PTR [rbx+0x468]
   14002fcfa:	mov    rcx,QWORD PTR [rax]
   14002fcfd:	mov    WORD PTR [rcx],r8w
   14002fd01:	mov    rax,QWORD PTR [rbx+0x468]
   14002fd08:	add    QWORD PTR [rax],0x2
   14002fd0c:	add    rsi,rdx
   14002fd0f:	inc    edi
   14002fd11:	mov    rax,rdx
   14002fd14:	cmp    edi,DWORD PTR [rbx+0x50]
   14002fd17:	jne    0x14002fca0
   14002fd19:	jmp    0x14002fd42
   14002fd1b:	or     DWORD PTR [rbx+0x28],0xffffffff
   14002fd1f:	jmp    0x14002fd42
   14002fd21:	mov    rax,QWORD PTR [rbx+0x10]
   14002fd25:	lea    r9,[rcx+0x28]
   14002fd29:	mov    r8d,DWORD PTR [rbx+0x50]
   14002fd2d:	add    rcx,0x468
   14002fd34:	mov    rdx,QWORD PTR [rbx+0x48]
   14002fd38:	mov    QWORD PTR [rsp+0x20],rax
   14002fd3d:	call   0x14003001c
   14002fd42:	mov    rbx,QWORD PTR [rsp+0x48]
   14002fd47:	mov    al,0x1
   14002fd49:	mov    rbp,QWORD PTR [rsp+0x50]
   14002fd4e:	mov    rsi,QWORD PTR [rsp+0x58]
   14002fd53:	add    rsp,0x30
   14002fd57:	pop    rdi
   14002fd58:	ret    
   14002fd59:	int3   
   14002fd5a:	int3   
   14002fd5b:	int3   
   14002fd5c:	mov    QWORD PTR [rsp+0x8],rbx
   14002fd61:	mov    QWORD PTR [rsp+0x10],rbp
   14002fd66:	mov    QWORD PTR [rsp+0x18],rsi
   14002fd6b:	push   rdi
   14002fd6c:	push   r14
   14002fd6e:	push   r15
   14002fd70:	sub    rsp,0x20
   14002fd74:	mov    rax,QWORD PTR [rcx]
   14002fd77:	mov    rbx,r9
   14002fd7a:	mov    r14,rdx
   14002fd7d:	mov    rsi,rcx
   14002fd80:	mov    r10d,DWORD PTR [rax+0x14]
   14002fd84:	shr    r10d,0xc
   14002fd88:	test   r10b,0x1
   14002fd8c:	je     0x14002fda0
   14002fd8e:	mov    rax,QWORD PTR [rcx]
   14002fd91:	cmp    QWORD PTR [rax+0x8],0x0
   14002fd96:	jne    0x14002fda0
   14002fd98:	add    DWORD PTR [r9],r8d
   14002fd9b:	jmp    0x14002fe38
   14002fda0:	mov    rdi,QWORD PTR [rsp+0x60]
   14002fda5:	movsxd rbp,r8d
   14002fda8:	add    rbp,rdx
   14002fdab:	mov    r15d,DWORD PTR [rdi]
   14002fdae:	and    DWORD PTR [rdi],0x0
   14002fdb1:	cmp    rdx,rbp
   14002fdb4:	je     0x14002fe2b
   14002fdb6:	mov    rax,QWORD PTR [rsi]
   14002fdb9:	mov    dl,BYTE PTR [r14]
   14002fdbc:	mov    ecx,DWORD PTR [rax+0x14]
   14002fdbf:	shr    ecx,0xc
   14002fdc2:	test   cl,0x1
   14002fdc5:	je     0x14002fdd1
   14002fdc7:	mov    rax,QWORD PTR [rsi]
   14002fdca:	cmp    QWORD PTR [rax+0x8],0x0
   14002fdcf:	je     0x14002fde5
   14002fdd1:	movsx  ecx,dl
   14002fdd4:	mov    rdx,QWORD PTR [rsi]
   14002fdd7:	call   0x14003a5cc
   14002fddc:	cmp    eax,0xffffffff
   14002fddf:	jne    0x14002fde5
   14002fde1:	or     DWORD PTR [rbx],eax
   14002fde3:	jmp    0x14002fdee
   14002fde5:	inc    DWORD PTR [rbx]
   14002fde7:	mov    eax,DWORD PTR [rbx]
   14002fde9:	cmp    eax,0xffffffff
   14002fdec:	jne    0x14002fe23
   14002fdee:	cmp    DWORD PTR [rdi],0x2a
   14002fdf1:	jne    0x14002fe2b
   14002fdf3:	mov    rax,QWORD PTR [rsi]
   14002fdf6:	mov    ecx,DWORD PTR [rax+0x14]
   14002fdf9:	shr    ecx,0xc
   14002fdfc:	test   cl,0x1
   14002fdff:	je     0x14002fe0b
   14002fe01:	mov    rax,QWORD PTR [rsi]
   14002fe04:	cmp    QWORD PTR [rax+0x8],0x0
   14002fe09:	je     0x14002fe21
   14002fe0b:	mov    rdx,QWORD PTR [rsi]
   14002fe0e:	mov    ecx,0x3f
   14002fe13:	call   0x14003a5cc
   14002fe18:	cmp    eax,0xffffffff
   14002fe1b:	jne    0x14002fe21
   14002fe1d:	or     DWORD PTR [rbx],eax
   14002fe1f:	jmp    0x14002fe23
   14002fe21:	inc    DWORD PTR [rbx]
   14002fe23:	inc    r14
   14002fe26:	cmp    r14,rbp
   14002fe29:	jne    0x14002fdb6
   14002fe2b:	cmp    DWORD PTR [rdi],0x0
   14002fe2e:	jne    0x14002fe38
   14002fe30:	test   r15d,r15d
   14002fe33:	je     0x14002fe38
   14002fe35:	mov    DWORD PTR [rdi],r15d
   14002fe38:	mov    rbx,QWORD PTR [rsp+0x40]
   14002fe3d:	mov    rbp,QWORD PTR [rsp+0x48]
   14002fe42:	mov    rsi,QWORD PTR [rsp+0x50]
   14002fe47:	add    rsp,0x20
   14002fe4b:	pop    r15
   14002fe4d:	pop    r14
   14002fe4f:	pop    rdi
   14002fe50:	ret    
   14002fe51:	int3   
   14002fe52:	int3   
   14002fe53:	int3   
   14002fe54:	mov    QWORD PTR [rsp+0x10],rbx
   14002fe59:	mov    QWORD PTR [rsp+0x18],rbp
   14002fe5e:	mov    QWORD PTR [rsp+0x20],rsi
   14002fe63:	push   rdi
   14002fe64:	push   r14
   14002fe66:	push   r15
   14002fe68:	sub    rsp,0x20
   14002fe6c:	mov    rax,QWORD PTR [rcx]
   14002fe6f:	mov    rbx,r9
   14002fe72:	mov    r14,rdx
   14002fe75:	mov    rsi,rcx
   14002fe78:	mov    r10d,DWORD PTR [rax+0x14]
   14002fe7c:	shr    r10d,0xc
   14002fe80:	test   r10b,0x1
   14002fe84:	je     0x14002fe98
   14002fe86:	mov    rax,QWORD PTR [rcx]
   14002fe89:	cmp    QWORD PTR [rax+0x8],0x0
   14002fe8e:	jne    0x14002fe98
   14002fe90:	add    DWORD PTR [r9],r8d
   14002fe93:	jmp    0x14002ff44
   14002fe98:	mov    rdi,QWORD PTR [rsp+0x60]
   14002fe9d:	movsxd rax,r8d
   14002fea0:	mov    ebp,DWORD PTR [rdi]
   14002fea2:	and    DWORD PTR [rdi],0x0
   14002fea5:	lea    r15,[rdx+rax*2]
   14002fea9:	mov    DWORD PTR [rsp+0x40],ebp
   14002fead:	cmp    rdx,r15
   14002feb0:	je     0x14002ff39
   14002feb6:	mov    ebp,0xffff
   14002febb:	mov    rax,QWORD PTR [rsi]
   14002febe:	movzx  r8d,WORD PTR [r14]
   14002fec2:	mov    ecx,DWORD PTR [rax+0x14]
   14002fec5:	shr    ecx,0xc
   14002fec8:	test   cl,0x1
   14002fecb:	je     0x14002fed7
   14002fecd:	mov    rax,QWORD PTR [rsi]
   14002fed0:	cmp    QWORD PTR [rax+0x8],0x0
   14002fed5:	je     0x14002feed
   14002fed7:	mov    rdx,QWORD PTR [rsi]
   14002feda:	movzx  ecx,r8w
   14002fede:	call   0x14003a428
   14002fee3:	cmp    ax,bp
   14002fee6:	jne    0x14002feed
   14002fee8:	or     DWORD PTR [rbx],0xffffffff
   14002feeb:	jmp    0x14002fef6
   14002feed:	inc    DWORD PTR [rbx]
   14002feef:	mov    eax,DWORD PTR [rbx]
   14002fef1:	cmp    eax,0xffffffff
   14002fef4:	jne    0x14002ff2c
   14002fef6:	cmp    DWORD PTR [rdi],0x2a
   14002fef9:	jne    0x14002ff35
   14002fefb:	mov    rax,QWORD PTR [rsi]
   14002fefe:	mov    ecx,DWORD PTR [rax+0x14]
   14002ff01:	shr    ecx,0xc
   14002ff04:	test   cl,0x1
   14002ff07:	je     0x14002ff13
   14002ff09:	mov    rax,QWORD PTR [rsi]
   14002ff0c:	cmp    QWORD PTR [rax+0x8],0x0
   14002ff11:	je     0x14002ff2a
   14002ff13:	mov    rdx,QWORD PTR [rsi]
   14002ff16:	mov    ecx,0x3f
   14002ff1b:	call   0x14003a428
   14002ff20:	cmp    ax,bp
   14002ff23:	jne    0x14002ff2a
   14002ff25:	or     DWORD PTR [rbx],0xffffffff
   14002ff28:	jmp    0x14002ff2c
   14002ff2a:	inc    DWORD PTR [rbx]
   14002ff2c:	add    r14,0x2
   14002ff30:	cmp    r14,r15
   14002ff33:	jne    0x14002febb
   14002ff35:	mov    ebp,DWORD PTR [rsp+0x40]
   14002ff39:	cmp    DWORD PTR [rdi],0x0
   14002ff3c:	jne    0x14002ff44
   14002ff3e:	test   ebp,ebp
   14002ff40:	je     0x14002ff44
   14002ff42:	mov    DWORD PTR [rdi],ebp
   14002ff44:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ff49:	mov    rbp,QWORD PTR [rsp+0x50]
   14002ff4e:	mov    rsi,QWORD PTR [rsp+0x58]
   14002ff53:	add    rsp,0x20
   14002ff57:	pop    r15
   14002ff59:	pop    r14
   14002ff5b:	pop    rdi
   14002ff5c:	ret    
   14002ff5d:	int3   
   14002ff5e:	int3   
   14002ff5f:	int3   
   14002ff60:	mov    rax,rsp
   14002ff63:	mov    QWORD PTR [rax+0x8],rbx
   14002ff67:	mov    QWORD PTR [rax+0x10],rbp
   14002ff6b:	mov    QWORD PTR [rax+0x18],rsi
   14002ff6f:	mov    QWORD PTR [rax+0x20],rdi
   14002ff73:	push   r12
   14002ff75:	push   r14
   14002ff77:	push   r15
   14002ff79:	sub    rsp,0x20
   14002ff7d:	mov    rdi,QWORD PTR [rsp+0x60]
   14002ff82:	mov    r15,rcx
   14002ff85:	mov    rbx,r9
   14002ff88:	movsxd rbp,r8d
   14002ff8b:	mov    r14d,DWORD PTR [rdi]
   14002ff8e:	and    DWORD PTR [rdi],0x0
   14002ff91:	mov    rcx,QWORD PTR [rcx]
   14002ff94:	mov    rax,QWORD PTR [rcx+0x8]
   14002ff98:	cmp    QWORD PTR [rcx+0x10],rax
   14002ff9c:	jne    0x14002ffaf
   14002ff9e:	cmp    BYTE PTR [rcx+0x18],0x0
   14002ffa2:	je     0x14002ffa9
   14002ffa4:	add    DWORD PTR [r9],ebp
   14002ffa7:	jmp    0x14002ffee
   14002ffa9:	or     DWORD PTR [r9],0xffffffff
   14002ffad:	jmp    0x14002ffee
   14002ffaf:	sub    rax,QWORD PTR [rcx+0x10]
   14002ffb3:	mov    rsi,rbp
   14002ffb6:	mov    rcx,QWORD PTR [rcx]
   14002ffb9:	cmp    rax,rbp
   14002ffbc:	cmovb  rsi,rax
   14002ffc0:	mov    r8,rsi
   14002ffc3:	call   0x140028fd0
   14002ffc8:	mov    rax,QWORD PTR [r15]
   14002ffcb:	add    QWORD PTR [rax],rsi
   14002ffce:	mov    rax,QWORD PTR [r15]
   14002ffd1:	add    QWORD PTR [rax+0x10],rsi
   14002ffd5:	mov    rax,QWORD PTR [r15]
   14002ffd8:	cmp    BYTE PTR [rax+0x18],0x0
   14002ffdc:	je     0x14002ffe2
   14002ffde:	add    DWORD PTR [rbx],ebp
   14002ffe0:	jmp    0x14002ffee
   14002ffe2:	cmp    rsi,rbp
   14002ffe5:	je     0x14002ffec
   14002ffe7:	or     DWORD PTR [rbx],0xffffffff
   14002ffea:	jmp    0x14002ffee
   14002ffec:	add    DWORD PTR [rbx],esi
   14002ffee:	cmp    DWORD PTR [rdi],0x0
   14002fff1:	jne    0x14002fffb
   14002fff3:	test   r14d,r14d
   14002fff6:	je     0x14002fffb
   14002fff8:	mov    DWORD PTR [rdi],r14d
   14002fffb:	mov    rbx,QWORD PTR [rsp+0x40]
   140030000:	mov    rbp,QWORD PTR [rsp+0x48]
   140030005:	mov    rsi,QWORD PTR [rsp+0x50]
   14003000a:	mov    rdi,QWORD PTR [rsp+0x58]
   14003000f:	add    rsp,0x20
   140030013:	pop    r15
   140030015:	pop    r14
   140030017:	pop    r12
   140030019:	ret    
   14003001a:	int3   
   14003001b:	int3   
   14003001c:	mov    QWORD PTR [rsp+0x8],rbx
   140030021:	mov    QWORD PTR [rsp+0x10],rbp
   140030026:	mov    QWORD PTR [rsp+0x18],rsi
   14003002b:	push   rdi
   14003002c:	push   r12
   14003002e:	push   r13
   140030030:	push   r14
   140030032:	push   r15
   140030034:	sub    rsp,0x20
   140030038:	mov    rsi,QWORD PTR [rsp+0x70]
   14003003d:	mov    r12,rcx
   140030040:	mov    rdi,r9
   140030043:	movsxd rbp,r8d
   140030046:	mov    r15d,DWORD PTR [rsi]
   140030049:	and    DWORD PTR [rsi],0x0
   14003004c:	mov    rcx,QWORD PTR [rcx]
   14003004f:	mov    rax,QWORD PTR [rcx+0x8]
   140030053:	cmp    QWORD PTR [rcx+0x10],rax
   140030057:	jne    0x14003006a
   140030059:	cmp    BYTE PTR [rcx+0x18],0x0
   14003005d:	je     0x140030064
   14003005f:	add    DWORD PTR [r9],ebp
   140030062:	jmp    0x1400300b1
   140030064:	or     DWORD PTR [r9],0xffffffff
   140030068:	jmp    0x1400300b1
   14003006a:	sub    rax,QWORD PTR [rcx+0x10]
   14003006e:	mov    r14,rbp
   140030071:	mov    rcx,QWORD PTR [rcx]
   140030074:	cmp    rax,rbp
   140030077:	cmovb  r14,rax
   14003007b:	lea    rbx,[r14+r14*1]
   14003007f:	mov    r8,rbx
   140030082:	call   0x140028fd0
   140030087:	mov    rax,QWORD PTR [r12]
   14003008b:	add    QWORD PTR [rax],rbx
   14003008e:	mov    rax,QWORD PTR [r12]
   140030092:	add    QWORD PTR [rax+0x10],r14
   140030096:	mov    rax,QWORD PTR [r12]
   14003009a:	cmp    BYTE PTR [rax+0x18],0x0
   14003009e:	je     0x1400300a4
   1400300a0:	add    DWORD PTR [rdi],ebp
   1400300a2:	jmp    0x1400300b1
   1400300a4:	cmp    r14,rbp
   1400300a7:	je     0x1400300ae
   1400300a9:	or     DWORD PTR [rdi],0xffffffff
   1400300ac:	jmp    0x1400300b1
   1400300ae:	add    DWORD PTR [rdi],r14d
   1400300b1:	cmp    DWORD PTR [rsi],0x0
   1400300b4:	jne    0x1400300be
   1400300b6:	test   r15d,r15d
   1400300b9:	je     0x1400300be
   1400300bb:	mov    DWORD PTR [rsi],r15d
   1400300be:	mov    rbx,QWORD PTR [rsp+0x50]
   1400300c3:	mov    rbp,QWORD PTR [rsp+0x58]
   1400300c8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400300cd:	add    rsp,0x20
   1400300d1:	pop    r15
   1400300d3:	pop    r14
   1400300d5:	pop    r13
   1400300d7:	pop    r12
   1400300d9:	pop    rdi
   1400300da:	ret    
   1400300db:	int3   
   1400300dc:	rex push rbp
   1400300de:	mov    rbp,rsp
   1400300e1:	sub    rsp,0x60
   1400300e5:	mov    rax,QWORD PTR [rbp+0x30]
   1400300e9:	mov    QWORD PTR [rbp-0x40],rax
   1400300ed:	mov    QWORD PTR [rbp+0x18],r9
   1400300f1:	mov    QWORD PTR [rbp+0x28],r8
   1400300f5:	mov    QWORD PTR [rbp+0x10],rdx
   1400300f9:	mov    QWORD PTR [rbp+0x20],rcx
   1400300fd:	test   rdx,rdx
   140030100:	jne    0x140030117
   140030102:	call   0x140032c50
   140030107:	mov    DWORD PTR [rax],0x16
   14003010d:	call   0x1400307d0
   140030112:	or     eax,0xffffffff
   140030115:	jmp    0x140030161
   140030117:	test   r8,r8
   14003011a:	je     0x140030102
   14003011c:	lea    rax,[rbp+0x10]
   140030120:	mov    QWORD PTR [rbp-0x38],rdx
   140030124:	mov    QWORD PTR [rbp-0x28],rax
   140030128:	lea    r9,[rbp-0x38]
   14003012c:	lea    rax,[rbp+0x18]
   140030130:	mov    QWORD PTR [rbp-0x30],rdx
   140030134:	mov    QWORD PTR [rbp-0x20],rax
   140030138:	lea    r8,[rbp-0x28]
   14003013c:	lea    rax,[rbp+0x20]
   140030140:	mov    QWORD PTR [rbp-0x18],rax
   140030144:	lea    rdx,[rbp-0x30]
   140030148:	lea    rax,[rbp+0x28]
   14003014c:	mov    QWORD PTR [rbp-0x10],rax
   140030150:	lea    rcx,[rbp+0x30]
   140030154:	lea    rax,[rbp-0x40]
   140030158:	mov    QWORD PTR [rbp-0x8],rax
   14003015c:	call   0x14002c84c
   140030161:	add    rsp,0x60
   140030165:	pop    rbp
   140030166:	ret    
   140030167:	int3   
   140030168:	rex push rbp
   14003016a:	mov    rbp,rsp
   14003016d:	sub    rsp,0x60
   140030171:	mov    rax,QWORD PTR [rbp+0x30]
   140030175:	mov    QWORD PTR [rbp-0x40],rax
   140030179:	mov    QWORD PTR [rbp+0x18],r9
   14003017d:	mov    QWORD PTR [rbp+0x28],r8
   140030181:	mov    QWORD PTR [rbp+0x10],rdx
   140030185:	mov    QWORD PTR [rbp+0x20],rcx
   140030189:	test   rdx,rdx
   14003018c:	jne    0x1400301a3
   14003018e:	call   0x140032c50
   140030193:	mov    DWORD PTR [rax],0x16
   140030199:	call   0x1400307d0
   14003019e:	or     eax,0xffffffff
   1400301a1:	jmp    0x1400301ed
   1400301a3:	test   r8,r8
   1400301a6:	je     0x14003018e
   1400301a8:	lea    rax,[rbp+0x10]
   1400301ac:	mov    QWORD PTR [rbp-0x38],rdx
   1400301b0:	mov    QWORD PTR [rbp-0x28],rax
   1400301b4:	lea    r9,[rbp-0x38]
   1400301b8:	lea    rax,[rbp+0x18]
   1400301bc:	mov    QWORD PTR [rbp-0x30],rdx
   1400301c0:	mov    QWORD PTR [rbp-0x20],rax
   1400301c4:	lea    r8,[rbp-0x28]
   1400301c8:	lea    rax,[rbp+0x20]
   1400301cc:	mov    QWORD PTR [rbp-0x18],rax
   1400301d0:	lea    rdx,[rbp-0x30]
   1400301d4:	lea    rax,[rbp+0x28]
   1400301d8:	mov    QWORD PTR [rbp-0x10],rax
   1400301dc:	lea    rcx,[rbp+0x30]
   1400301e0:	lea    rax,[rbp-0x40]
   1400301e4:	mov    QWORD PTR [rbp-0x8],rax
   1400301e8:	call   0x14002c80c
   1400301ed:	add    rsp,0x60
   1400301f1:	pop    rbp
   1400301f2:	ret    
   1400301f3:	int3   
   1400301f4:	rex push rbx
   1400301f6:	sub    rsp,0x30
   1400301fa:	mov    rbx,rdx
   1400301fd:	test   r9,r9
   140030200:	je     0x14003023e
   140030202:	test   rdx,rdx
   140030205:	je     0x14003023e
   140030207:	test   r8,r8
   14003020a:	je     0x14003023e
   14003020c:	mov    rax,QWORD PTR [rsp+0x68]
   140030211:	mov    QWORD PTR [rsp+0x28],rax
   140030216:	mov    rax,QWORD PTR [rsp+0x60]
   14003021b:	mov    QWORD PTR [rsp+0x20],rax
   140030220:	call   0x14002c88c
   140030225:	test   eax,eax
   140030227:	jns    0x14003022c
   140030229:	mov    BYTE PTR [rbx],0x0
   14003022c:	cmp    eax,0xfffffffe
   14003022f:	jne    0x140030251
   140030231:	call   0x140032c50
   140030236:	mov    DWORD PTR [rax],0x22
   14003023c:	jmp    0x140030249
   14003023e:	call   0x140032c50
   140030243:	mov    DWORD PTR [rax],0x16
   140030249:	call   0x1400307d0
   14003024e:	or     eax,0xffffffff
   140030251:	add    rsp,0x30
   140030255:	pop    rbx
   140030256:	ret    
   140030257:	int3   
   140030258:	mov    QWORD PTR [rsp+0x8],rbx
   14003025d:	mov    QWORD PTR [rsp+0x20],rsi
   140030262:	push   rbp
   140030263:	push   rdi
   140030264:	push   r12
   140030266:	push   r14
   140030268:	push   r15
   14003026a:	lea    rbp,[rsp-0x410]
   140030272:	sub    rsp,0x510
   140030279:	mov    rax,QWORD PTR [rip+0x40dd0]        # 0x140071050
   140030280:	xor    rax,rsp
   140030283:	mov    QWORD PTR [rbp+0x400],rax
   14003028a:	xor    r12d,r12d
   14003028d:	mov    rbx,r9
   140030290:	mov    rdi,r8
   140030293:	mov    rsi,rdx
   140030296:	mov    r15,rcx
   140030299:	test   r9,r9
   14003029c:	jne    0x1400302b6
   14003029e:	call   0x140032c50
   1400302a3:	mov    DWORD PTR [rax],0x16
   1400302a9:	call   0x1400307d0
   1400302ae:	or     ebx,0xffffffff
   1400302b1:	jmp    0x140030462
   1400302b6:	test   r8,r8
   1400302b9:	je     0x1400302c0
   1400302bb:	test   rdx,rdx
   1400302be:	je     0x14003029e
   1400302c0:	mov    rdx,QWORD PTR [rbp+0x460]
   1400302c7:	lea    rcx,[rsp+0x30]
   1400302cc:	call   0x14002bd94
   1400302d1:	xor    edx,edx
   1400302d3:	lea    rcx,[rsp+0x50]
   1400302d8:	lea    r8d,[rdx+0x20]
   1400302dc:	call   0x14002a910
   1400302e1:	mov    r14,r15
   1400302e4:	mov    QWORD PTR [rsp+0x50],rsi
   1400302e9:	mov    QWORD PTR [rsp+0x58],rdi
   1400302ee:	mov    QWORD PTR [rsp+0x60],r12
   1400302f3:	and    r14d,0x2
   1400302f7:	jne    0x140030303
   1400302f9:	mov    BYTE PTR [rsp+0x68],r12b
   1400302fe:	test   rsi,rsi
   140030301:	jne    0x140030308
   140030303:	mov    BYTE PTR [rsp+0x68],0x1
   140030308:	lea    rax,[rsp+0x50]
   14003030d:	mov    r9,rbx
   140030310:	mov    QWORD PTR [rsp+0x70],rax
   140030315:	lea    rdx,[rsp+0x70]
   14003031a:	mov    rax,QWORD PTR [rbp+0x468]
   140030321:	lea    rcx,[rbp-0x80]
   140030325:	mov    QWORD PTR [rsp+0x28],rax
   14003032a:	mov    r8,r15
   14003032d:	lea    rax,[rsp+0x38]
   140030332:	mov    QWORD PTR [rsp+0x20],rax
   140030337:	call   0x14002cee8
   14003033c:	lea    rcx,[rbp-0x80]
   140030340:	call   0x14002d958
   140030345:	movsxd rbx,eax
   140030348:	test   rsi,rsi
   14003034b:	jne    0x14003037c
   14003034d:	mov    rcx,QWORD PTR [rbp+0x3e0]
   140030354:	call   0x140038c70
   140030359:	mov    QWORD PTR [rbp+0x3e0],r12
   140030360:	cmp    BYTE PTR [rsp+0x48],r12b
   140030365:	je     0x140030462
   14003036b:	mov    rax,QWORD PTR [rsp+0x30]
   140030370:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140030377:	jmp    0x140030462
   14003037c:	test   r15b,0x1
   140030380:	je     0x1400303cf
   140030382:	test   rdi,rdi
   140030385:	jne    0x1400303ba
   140030387:	test   eax,eax
   140030389:	je     0x1400303ba
   14003038b:	mov    rcx,QWORD PTR [rbp+0x3e0]
   140030392:	call   0x140038c70
   140030397:	mov    QWORD PTR [rbp+0x3e0],r12
   14003039e:	cmp    BYTE PTR [rsp+0x48],r12b
   1400303a3:	je     0x1400302ae
   1400303a9:	mov    rax,QWORD PTR [rsp+0x30]
   1400303ae:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400303b5:	jmp    0x1400302ae
   1400303ba:	mov    rax,QWORD PTR [rsp+0x60]
   1400303bf:	cmp    rax,rdi
   1400303c2:	jne    0x140030437
   1400303c4:	test   ebx,ebx
   1400303c6:	js     0x14003043c
   1400303c8:	cmp    rbx,rdi
   1400303cb:	jbe    0x14003043c
   1400303cd:	jmp    0x14003038b
   1400303cf:	test   r14,r14
   1400303d2:	je     0x1400303f5
   1400303d4:	test   rdi,rdi
   1400303d7:	je     0x14003043c
   1400303d9:	test   eax,eax
   1400303db:	jns    0x1400303e3
   1400303dd:	mov    WORD PTR [rsi],r12w
   1400303e1:	jmp    0x14003043c
   1400303e3:	mov    rax,QWORD PTR [rsp+0x60]
   1400303e8:	cmp    rax,rdi
   1400303eb:	jne    0x140030437
   1400303ed:	mov    WORD PTR [rsi+rdi*2-0x2],r12w
   1400303f3:	jmp    0x14003043c
   1400303f5:	test   rdi,rdi
   1400303f8:	je     0x14003038b
   1400303fa:	mov    rax,QWORD PTR [rsp+0x60]
   1400303ff:	cmp    rax,rdi
   140030402:	jne    0x140030437
   140030404:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14003040b:	mov    WORD PTR [rsi+rdi*2-0x2],r12w
   140030411:	call   0x140038c70
   140030416:	mov    QWORD PTR [rbp+0x3e0],r12
   14003041d:	cmp    BYTE PTR [rsp+0x48],r12b
   140030422:	je     0x140030430
   140030424:	mov    rax,QWORD PTR [rsp+0x30]
   140030429:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140030430:	mov    ebx,0xfffffffe
   140030435:	jmp    0x140030462
   140030437:	mov    WORD PTR [rsi+rax*2],r12w
   14003043c:	mov    rcx,QWORD PTR [rbp+0x3e0]
   140030443:	call   0x140038c70
   140030448:	mov    QWORD PTR [rbp+0x3e0],r12
   14003044f:	cmp    BYTE PTR [rsp+0x48],r12b
   140030454:	je     0x140030462
   140030456:	mov    rcx,QWORD PTR [rsp+0x30]
   14003045b:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140030462:	mov    eax,ebx
   140030464:	mov    rcx,QWORD PTR [rbp+0x400]
   14003046b:	xor    rcx,rsp
   14003046e:	call   0x140025df0
   140030473:	lea    r11,[rsp+0x510]
   14003047b:	mov    rbx,QWORD PTR [r11+0x30]
   14003047f:	mov    rsi,QWORD PTR [r11+0x48]
   140030483:	mov    rsp,r11
   140030486:	pop    r15
   140030488:	pop    r14
   14003048a:	pop    r12
   14003048c:	pop    rdi
   14003048d:	pop    rbp
   14003048e:	ret    
   14003048f:	int3   
   140030490:	sub    rsp,0x28
   140030494:	call   0x140039130
   140030499:	lea    rdx,[rsp+0x30]
   14003049e:	mov    rcx,QWORD PTR [rax+0x90]
   1400304a5:	mov    QWORD PTR [rsp+0x30],rcx
   1400304aa:	mov    rcx,rax
   1400304ad:	call   0x1400392c4
   1400304b2:	mov    rax,QWORD PTR [rsp+0x30]
   1400304b7:	mov    rax,QWORD PTR [rax+0xf8]
   1400304be:	add    rsp,0x28
   1400304c2:	ret    
   1400304c3:	int3   
   1400304c4:	jmp    0x140038c70
   1400304c9:	int3   
   1400304ca:	int3   
   1400304cb:	int3   
   1400304cc:	mov    rax,rsp
   1400304cf:	mov    QWORD PTR [rax+0x10],rbx
   1400304d3:	mov    QWORD PTR [rax+0x18],rsi
   1400304d7:	movsd  QWORD PTR [rax+0x8],xmm0
   1400304dc:	push   rdi
   1400304dd:	sub    rsp,0x40
   1400304e1:	movaps XMMWORD PTR [rax-0x18],xmm6
   1400304e5:	movaps xmm6,xmm0
   1400304e8:	mov    rdi,rdx
   1400304eb:	test   rdx,rdx
   1400304ee:	jne    0x140030508
   1400304f0:	call   0x140032c50
   1400304f5:	mov    DWORD PTR [rax],0x16
   1400304fb:	call   0x1400307d0
   140030500:	xorps  xmm0,xmm0
   140030503:	jmp    0x1400305af
   140030508:	mov    esi,0xffc0
   14003050d:	mov    ecx,0x1f80
   140030512:	mov    edx,esi
   140030514:	call   0x14003b34c
   140030519:	movzx  ecx,WORD PTR [rsp+0x56]
   14003051e:	mov    rbx,rax
   140030521:	mov    eax,0x7ff0
   140030526:	and    cx,ax
   140030529:	cmp    cx,ax
   14003052c:	jne    0x14003056c
   14003052e:	or     DWORD PTR [rdi],0xffffffff
   140030531:	movaps xmm0,xmm6
   140030534:	call   0x14003b2b8
   140030539:	sub    eax,0x1
   14003053c:	je     0x1400305a1
   14003053e:	sub    eax,0x1
   140030541:	je     0x1400305a1
   140030543:	cmp    eax,0x1
   140030546:	je     0x1400305a1
   140030548:	movaps xmm3,xmm6
   14003054b:	mov    ecx,0x8
   140030550:	addsd  xmm3,QWORD PTR [rip+0x23920]        # 0x140053e78
   140030558:	mov    edx,0x17
   14003055d:	mov    QWORD PTR [rsp+0x20],rbx
   140030562:	movaps xmm2,xmm6
   140030565:	call   0x14003a9c8
   14003056a:	jmp    0x1400305af
   14003056c:	ucomisd xmm6,QWORD PTR [rip+0x33f4c]        # 0x1400644c0
   140030574:	jp     0x140030593
   140030576:	jne    0x140030593
   140030578:	movaps xmm0,xmm6
   14003057b:	call   0x14003a96c
   140030580:	test   eax,eax
   140030582:	je     0x140030593
   140030584:	and    DWORD PTR [rdi],0x0
   140030587:	movsd  xmm3,QWORD PTR [rip+0x238f1]        # 0x140053e80
   14003058f:	xor    ecx,ecx
   140030591:	jmp    0x140030558
   140030593:	mov    rdx,rdi
   140030596:	movaps xmm0,xmm6
   140030599:	call   0x14003b184
   14003059e:	movaps xmm6,xmm0
   1400305a1:	mov    rdx,rsi
   1400305a4:	mov    rcx,rbx
   1400305a7:	call   0x14003b34c
   1400305ac:	movaps xmm0,xmm6
   1400305af:	mov    rbx,QWORD PTR [rsp+0x58]
   1400305b4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400305b9:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   1400305be:	add    rsp,0x40
   1400305c2:	pop    rdi
   1400305c3:	ret    
   1400305c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400305c9:	mov    QWORD PTR [rsp+0x18],rsi
   1400305ce:	push   rbp
   1400305cf:	push   rdi
   1400305d0:	push   r14
   1400305d2:	lea    rbp,[rsp-0x4f0]
   1400305da:	sub    rsp,0x5f0
   1400305e1:	mov    rax,QWORD PTR [rip+0x40a68]        # 0x140071050
   1400305e8:	xor    rax,rsp
   1400305eb:	mov    QWORD PTR [rbp+0x4e0],rax
   1400305f2:	mov    edi,r8d
   1400305f5:	mov    esi,edx
   1400305f7:	mov    ebx,ecx
   1400305f9:	cmp    ecx,0xffffffff
   1400305fc:	je     0x140030603
   1400305fe:	call   0x140026aa8
   140030603:	xor    edx,edx
   140030605:	lea    rcx,[rsp+0x70]
   14003060a:	mov    r8d,0x98
   140030610:	call   0x14002a910
   140030615:	xor    edx,edx
   140030617:	lea    rcx,[rbp+0x10]
   14003061b:	mov    r8d,0x4d0
   140030621:	call   0x14002a910
   140030626:	lea    rax,[rsp+0x70]
   14003062b:	mov    QWORD PTR [rsp+0x48],rax
   140030630:	lea    rcx,[rbp+0x10]
   140030634:	lea    rax,[rbp+0x10]
   140030638:	mov    QWORD PTR [rsp+0x50],rax
   14003063d:	call   QWORD PTR [rip+0x1abad]        # 0x14004b1f0
   140030643:	mov    r14,QWORD PTR [rbp+0x108]
   14003064a:	lea    rdx,[rsp+0x40]
   14003064f:	mov    rcx,r14
   140030652:	xor    r8d,r8d
   140030655:	call   QWORD PTR [rip+0x1ad4d]        # 0x14004b3a8
   14003065b:	test   rax,rax
   14003065e:	je     0x140030696
   140030660:	and    QWORD PTR [rsp+0x38],0x0
   140030666:	lea    rcx,[rsp+0x60]
   14003066b:	mov    rdx,QWORD PTR [rsp+0x40]
   140030670:	mov    r9,rax
   140030673:	mov    QWORD PTR [rsp+0x30],rcx
   140030678:	mov    r8,r14
   14003067b:	lea    rcx,[rsp+0x58]
   140030680:	mov    QWORD PTR [rsp+0x28],rcx
   140030685:	lea    rcx,[rbp+0x10]
   140030689:	mov    QWORD PTR [rsp+0x20],rcx
   14003068e:	xor    ecx,ecx
   140030690:	call   QWORD PTR [rip+0x1ab6a]        # 0x14004b200
   140030696:	mov    rax,QWORD PTR [rbp+0x508]
   14003069d:	mov    QWORD PTR [rbp+0x108],rax
   1400306a4:	lea    rax,[rbp+0x508]
   1400306ab:	add    rax,0x8
   1400306af:	mov    DWORD PTR [rsp+0x70],esi
   1400306b3:	mov    QWORD PTR [rbp+0xa8],rax
   1400306ba:	mov    rax,QWORD PTR [rbp+0x508]
   1400306c1:	mov    QWORD PTR [rbp-0x80],rax
   1400306c5:	mov    DWORD PTR [rsp+0x74],edi
   1400306c9:	call   QWORD PTR [rip+0x1ab59]        # 0x14004b228
   1400306cf:	xor    ecx,ecx
   1400306d1:	mov    edi,eax
   1400306d3:	call   QWORD PTR [rip+0x1ab37]        # 0x14004b210
   1400306d9:	lea    rcx,[rsp+0x48]
   1400306de:	call   QWORD PTR [rip+0x1ab24]        # 0x14004b208
   1400306e4:	test   eax,eax
   1400306e6:	jne    0x1400306f8
   1400306e8:	test   edi,edi
   1400306ea:	jne    0x1400306f8
   1400306ec:	cmp    ebx,0xffffffff
   1400306ef:	je     0x1400306f8
   1400306f1:	mov    ecx,ebx
   1400306f3:	call   0x140026aa8
   1400306f8:	mov    rcx,QWORD PTR [rbp+0x4e0]
   1400306ff:	xor    rcx,rsp
   140030702:	call   0x140025df0
   140030707:	lea    r11,[rsp+0x5f0]
   14003070f:	mov    rbx,QWORD PTR [r11+0x28]
   140030713:	mov    rsi,QWORD PTR [r11+0x30]
   140030717:	mov    rsp,r11
   14003071a:	pop    r14
   14003071c:	pop    rdi
   14003071d:	pop    rbp
   14003071e:	ret    
   14003071f:	int3   
   140030720:	mov    QWORD PTR [rip+0x461a9],rcx        # 0x1400768d0
   140030727:	ret    
   140030728:	mov    rax,rsp
   14003072b:	mov    QWORD PTR [rax+0x8],rbx
   14003072f:	mov    QWORD PTR [rax+0x10],rbp
   140030733:	mov    QWORD PTR [rax+0x18],rsi
   140030737:	mov    QWORD PTR [rax+0x20],rdi
   14003073b:	push   r14
   14003073d:	sub    rsp,0x30
   140030741:	mov    edi,r9d
   140030744:	mov    rsi,r8
   140030747:	mov    rbp,rdx
   14003074a:	mov    r14,rcx
   14003074d:	call   0x1400391c4
   140030752:	test   rax,rax
   140030755:	je     0x140030798
   140030757:	mov    rbx,QWORD PTR [rax+0x3b8]
   14003075e:	test   rbx,rbx
   140030761:	je     0x140030798
   140030763:	mov    rcx,rbx
   140030766:	call   QWORD PTR [rip+0x1acec]        # 0x14004b458
   14003076c:	mov    r9d,edi
   14003076f:	mov    r8,rsi
   140030772:	mov    rdx,rbp
   140030775:	mov    rcx,r14
   140030778:	mov    rax,rbx
   14003077b:	mov    rbx,QWORD PTR [rsp+0x40]
   140030780:	mov    rbp,QWORD PTR [rsp+0x48]
   140030785:	mov    rsi,QWORD PTR [rsp+0x50]
   14003078a:	mov    rdi,QWORD PTR [rsp+0x58]
   14003078f:	add    rsp,0x30
   140030793:	pop    r14
   140030795:	rex.W jmp rax
   140030798:	mov    rbx,QWORD PTR [rip+0x408b1]        # 0x140071050
   14003079f:	mov    ecx,ebx
   1400307a1:	xor    rbx,QWORD PTR [rip+0x46128]        # 0x1400768d0
   1400307a8:	and    ecx,0x3f
   1400307ab:	ror    rbx,cl
   1400307ae:	test   rbx,rbx
   1400307b1:	jne    0x140030763
   1400307b3:	mov    rax,QWORD PTR [rsp+0x60]
   1400307b8:	mov    r9d,edi
   1400307bb:	mov    r8,rsi
   1400307be:	mov    QWORD PTR [rsp+0x20],rax
   1400307c3:	mov    rdx,rbp
   1400307c6:	mov    rcx,r14
   1400307c9:	call   0x140030820
   1400307ce:	int3   
   1400307cf:	int3   
   1400307d0:	sub    rsp,0x38
   1400307d4:	and    QWORD PTR [rsp+0x20],0x0
   1400307da:	xor    r9d,r9d
   1400307dd:	xor    r8d,r8d
   1400307e0:	xor    edx,edx
   1400307e2:	xor    ecx,ecx
   1400307e4:	call   0x140030728
   1400307e9:	add    rsp,0x38
   1400307ed:	ret    
   1400307ee:	int3   
   1400307ef:	int3   
   1400307f0:	sub    rsp,0x38
   1400307f4:	and    QWORD PTR [rsp+0x20],0x0
   1400307fa:	xor    r9d,r9d
   1400307fd:	xor    r8d,r8d
   140030800:	xor    edx,edx
   140030802:	xor    ecx,ecx
   140030804:	call   0x140030728
   140030809:	and    QWORD PTR [rsp+0x20],0x0
   14003080f:	xor    r9d,r9d
   140030812:	xor    r8d,r8d
   140030815:	xor    edx,edx
   140030817:	xor    ecx,ecx
   140030819:	call   0x140030820
   14003081e:	int3   
   14003081f:	int3   
   140030820:	sub    rsp,0x28
   140030824:	mov    ecx,0x17
   140030829:	call   0x140047be6
   14003082e:	test   eax,eax
   140030830:	je     0x140030839
   140030832:	mov    ecx,0x5
   140030837:	int    0x29
   140030839:	mov    r8d,0x1
   14003083f:	mov    edx,0xc0000417
   140030844:	lea    ecx,[r8+0x1]
   140030848:	call   0x1400305c4
   14003084d:	call   QWORD PTR [rip+0x1a8e5]        # 0x14004b138
   140030853:	mov    rcx,rax
   140030856:	mov    edx,0xc0000417
   14003085b:	add    rsp,0x28
   14003085f:	rex.W jmp QWORD PTR [rip+0x1a9b2]        # 0x14004b218
   140030866:	int3   
   140030867:	int3   
   140030868:	rex push rbx
   14003086a:	sub    rsp,0x20
   14003086e:	mov    rbx,rcx
   140030871:	xor    eax,eax
   140030873:	test   rcx,rcx
   140030876:	setne  al
   140030879:	test   eax,eax
   14003087b:	jne    0x140030891
   14003087d:	call   0x140032c50
   140030882:	mov    DWORD PTR [rax],0x16
   140030888:	call   0x1400307d0
   14003088d:	xor    eax,eax
   14003088f:	jmp    0x1400308cd
   140030891:	mov    edx,0x7fff
   140030896:	call   0x140032e04
   14003089b:	xor    ecx,ecx
   14003089d:	cmp    rax,0x7fff
   1400308a3:	setb   cl
   1400308a6:	test   ecx,ecx
   1400308a8:	je     0x14003087d
   1400308aa:	mov    ecx,0xb
   1400308af:	call   0x140035a44
   1400308b4:	nop
   1400308b5:	mov    rcx,rbx
   1400308b8:	call   0x1400308d4
   1400308bd:	mov    rbx,rax
   1400308c0:	mov    ecx,0xb
   1400308c5:	call   0x140035a98
   1400308ca:	mov    rax,rbx
   1400308cd:	add    rsp,0x20
   1400308d1:	pop    rbx
   1400308d2:	ret    
   1400308d3:	int3   
   1400308d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400308d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400308de:	mov    QWORD PTR [rsp+0x18],rsi
   1400308e3:	push   rdi
   1400308e4:	sub    rsp,0x20
   1400308e8:	mov    rsi,rcx
   1400308eb:	call   0x140033d30
   1400308f0:	xor    ebp,ebp
   1400308f2:	mov    rbx,rax
   1400308f5:	test   rax,rax
   1400308f8:	je     0x140030952
   1400308fa:	test   rsi,rsi
   1400308fd:	je     0x140030952
   1400308ff:	or     rdi,0xffffffffffffffff
   140030903:	inc    rdi
   140030906:	cmp    WORD PTR [rsi+rdi*2],bp
   14003090a:	jne    0x140030903
   14003090c:	cmp    QWORD PTR [rax],rbp
   14003090f:	je     0x140030952
   140030911:	mov    rcx,QWORD PTR [rbx]
   140030914:	or     rax,0xffffffffffffffff
   140030918:	inc    rax
   14003091b:	cmp    WORD PTR [rcx+rax*2],bp
   14003091f:	jne    0x140030918
   140030921:	cmp    rax,rdi
   140030924:	jbe    0x14003093c
   140030926:	cmp    WORD PTR [rcx+rdi*2],0x3d
   14003092b:	jne    0x14003093c
   14003092d:	mov    r8,rdi
   140030930:	mov    rdx,rsi
   140030933:	call   0x14003b3fc
   140030938:	test   eax,eax
   14003093a:	je     0x140030945
   14003093c:	add    rbx,0x8
   140030940:	cmp    QWORD PTR [rbx],rbp
   140030943:	jmp    0x14003090f
   140030945:	mov    rax,QWORD PTR [rbx]
   140030948:	lea    rax,[rax+rdi*2]
   14003094c:	add    rax,0x2
   140030950:	jmp    0x140030954
   140030952:	xor    eax,eax
   140030954:	mov    rbx,QWORD PTR [rsp+0x30]
   140030959:	mov    rbp,QWORD PTR [rsp+0x38]
   14003095e:	mov    rsi,QWORD PTR [rsp+0x40]
   140030963:	add    rsp,0x20
   140030967:	pop    rdi
   140030968:	ret    
   140030969:	int3   
   14003096a:	int3   
   14003096b:	int3   
   14003096c:	jmp    0x140030868
   140030971:	int3   
   140030972:	int3   
   140030973:	int3   
   140030974:	test   cl,0x4
   140030977:	je     0x14003097c
   140030979:	mov    al,0x1
   14003097b:	ret    
   14003097c:	test   cl,0x1
   14003097f:	je     0x1400309a8
   140030981:	and    ecx,0x2
   140030984:	je     0x140030995
   140030986:	movabs rax,0x8000000000000000
   140030990:	cmp    rdx,rax
   140030993:	ja     0x140030979
   140030995:	test   ecx,ecx
   140030997:	jne    0x1400309a8
   140030999:	movabs rax,0x7fffffffffffffff
   1400309a3:	cmp    rdx,rax
   1400309a6:	ja     0x140030979
   1400309a8:	xor    al,al
   1400309aa:	ret    
   1400309ab:	int3   
   1400309ac:	int3   
   1400309ad:	int3   
   1400309ae:	int3   
   1400309af:	int3   
   1400309b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400309b5:	push   rsi
   1400309b6:	push   rdi
   1400309b7:	sub    rsp,0x248
   1400309be:	mov    r9d,DWORD PTR [rcx]
   1400309c1:	mov    rdi,rdx
   1400309c4:	mov    rsi,rcx
   1400309c7:	test   r9d,r9d
   1400309ca:	jne    0x1400309d8
   1400309cc:	xor    eax,eax
   1400309ce:	add    rsp,0x248
   1400309d5:	pop    rdi
   1400309d6:	pop    rsi
   1400309d7:	ret    
   1400309d8:	mov    eax,DWORD PTR [rdx]
   1400309da:	test   eax,eax
   1400309dc:	je     0x1400309cc
   1400309de:	mov    QWORD PTR [rsp+0x240],rbx
   1400309e6:	dec    r9d
   1400309e9:	mov    QWORD PTR [rsp+0x238],rbp
   1400309f1:	mov    QWORD PTR [rsp+0x230],r12
   1400309f9:	mov    QWORD PTR [rsp+0x220],r14
   140030a01:	mov    QWORD PTR [rsp+0x218],r15
   140030a09:	sub    eax,0x1
   140030a0c:	jne    0x140030b04
   140030a12:	mov    r15d,DWORD PTR [rdx+0x4]
   140030a16:	xor    r14d,r14d
   140030a19:	cmp    r15d,0x1
   140030a1d:	jne    0x140030a47
   140030a1f:	mov    ebx,DWORD PTR [rcx+0x4]
   140030a22:	lea    r8,[rsp+0x44]
   140030a27:	add    rcx,0x4
   140030a2b:	mov    DWORD PTR [rsi],r14d
   140030a2e:	xor    r9d,r9d
   140030a31:	mov    DWORD PTR [rsp+0x40],r14d
   140030a36:	mov    edx,0x1cc
   140030a3b:	call   0x140044e5c
   140030a40:	mov    eax,ebx
   140030a42:	jmp    0x140030e4c
   140030a47:	test   r9d,r9d
   140030a4a:	jne    0x140030a85
   140030a4c:	mov    ebx,DWORD PTR [rcx+0x4]
   140030a4f:	lea    r8,[rsp+0x44]
   140030a54:	mov    DWORD PTR [rcx],r14d
   140030a57:	xor    r9d,r9d
   140030a5a:	add    rcx,0x4
   140030a5e:	mov    DWORD PTR [rsp+0x40],r14d
   140030a63:	mov    edx,0x1cc
   140030a68:	call   0x140044e5c
   140030a6d:	xor    edx,edx
   140030a6f:	mov    eax,ebx
   140030a71:	div    r15d
   140030a74:	test   edx,edx
   140030a76:	mov    DWORD PTR [rsi+0x4],edx
   140030a79:	setne  r14b
   140030a7d:	mov    DWORD PTR [rsi],r14d
   140030a80:	jmp    0x140030e4c
   140030a85:	mov    r12d,0xffffffff
   140030a8b:	mov    rdi,r14
   140030a8e:	mov    rbp,r14
   140030a91:	cmp    r9d,r12d
   140030a94:	je     0x140030ac5
   140030a96:	mov    rcx,r15
   140030a99:	nop    DWORD PTR [rax+0x0]
   140030aa0:	mov    eax,DWORD PTR [rsi+r9*4+0x4]
   140030aa5:	xor    edx,edx
   140030aa7:	shl    rbp,0x20
   140030aab:	add    r9d,r12d
   140030aae:	or     rax,rbp
   140030ab1:	shl    rdi,0x20
   140030ab5:	div    rcx
   140030ab8:	mov    eax,eax
   140030aba:	mov    rbp,rdx
   140030abd:	add    rdi,rax
   140030ac0:	cmp    r9d,r12d
   140030ac3:	jne    0x140030aa0
   140030ac5:	xor    r9d,r9d
   140030ac8:	mov    DWORD PTR [rsp+0x40],r14d
   140030acd:	lea    r8,[rsp+0x44]
   140030ad2:	mov    DWORD PTR [rsi],r14d
   140030ad5:	mov    edx,0x1cc
   140030ada:	lea    rcx,[rsi+0x4]
   140030ade:	call   0x140044e5c
   140030ae3:	mov    rcx,rbp
   140030ae6:	mov    DWORD PTR [rsi+0x4],ebp
   140030ae9:	shr    rcx,0x20
   140030aed:	mov    rax,rdi
   140030af0:	test   ecx,ecx
   140030af2:	mov    DWORD PTR [rsi+0x8],ecx
   140030af5:	setne  r14b
   140030af9:	inc    r14d
   140030afc:	mov    DWORD PTR [rsi],r14d
   140030aff:	jmp    0x140030e4c
   140030b04:	cmp    eax,r9d
   140030b07:	jbe    0x140030b10
   140030b09:	xor    eax,eax
   140030b0b:	jmp    0x140030e4c
   140030b10:	mov    r8d,r9d
   140030b13:	movsxd rdx,r9d
   140030b16:	sub    r8d,eax
   140030b19:	mov    QWORD PTR [rsp+0x228],r13
   140030b21:	movsxd rbx,r8d
   140030b24:	lea    r13d,[rax+0x1]
   140030b28:	mov    r10d,r9d
   140030b2b:	cmp    rdx,rbx
   140030b2e:	jl     0x140030b7c
   140030b30:	add    rcx,0x4
   140030b34:	lea    rax,[rbx*4+0x0]
   140030b3c:	mov    r11,rdi
   140030b3f:	sub    r11,rax
   140030b42:	sub    r11,rsi
   140030b45:	lea    rcx,[rcx+rdx*4]
   140030b49:	nop    DWORD PTR [rax+0x0]
   140030b50:	mov    eax,DWORD PTR [rcx]
   140030b52:	cmp    DWORD PTR [r11+rcx*1],eax
   140030b56:	jne    0x140030b69
   140030b58:	dec    r10d
   140030b5b:	dec    rdx
   140030b5e:	sub    rcx,0x4
   140030b62:	cmp    rdx,rbx
   140030b65:	jge    0x140030b50
   140030b67:	jmp    0x140030b7c
   140030b69:	movsxd rax,r10d
   140030b6c:	mov    rcx,rax
   140030b6f:	sub    rcx,rbx
   140030b72:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   140030b76:	cmp    DWORD PTR [rdi+rcx*4+0x4],eax
   140030b7a:	jae    0x140030b7f
   140030b7c:	inc    r8d
   140030b7f:	test   r8d,r8d
   140030b82:	jne    0x140030b8b
   140030b84:	xor    eax,eax
   140030b86:	jmp    0x140030e44
   140030b8b:	lea    eax,[r13-0x1]
   140030b8f:	mov    r11d,0x20
   140030b95:	mov    r10d,DWORD PTR [rdi+rax*4+0x4]
   140030b9a:	lea    eax,[r13-0x2]
   140030b9e:	mov    ebx,DWORD PTR [rdi+rax*4+0x4]
   140030ba2:	bsr    eax,r10d
   140030ba6:	mov    DWORD PTR [rsp+0x278],ebx
   140030bad:	je     0x140030bb8
   140030baf:	mov    edx,0x1f
   140030bb4:	sub    edx,eax
   140030bb6:	jmp    0x140030bbb
   140030bb8:	mov    edx,r11d
   140030bbb:	sub    r11d,edx
   140030bbe:	mov    DWORD PTR [rsp+0x270],edx
   140030bc5:	mov    DWORD PTR [rsp+0x20],r11d
   140030bca:	test   edx,edx
   140030bcc:	je     0x140030c0e
   140030bce:	mov    eax,r10d
   140030bd1:	mov    edx,ebx
   140030bd3:	mov    ecx,r11d
   140030bd6:	shr    edx,cl
   140030bd8:	mov    ecx,DWORD PTR [rsp+0x270]
   140030bdf:	mov    r10d,edx
   140030be2:	shl    eax,cl
   140030be4:	mov    edx,ecx
   140030be6:	shl    ebx,cl
   140030be8:	or     r10d,eax
   140030beb:	mov    DWORD PTR [rsp+0x278],ebx
   140030bf2:	cmp    r13d,0x2
   140030bf6:	jbe    0x140030c0e
   140030bf8:	lea    eax,[r13-0x3]
   140030bfc:	mov    ecx,r11d
   140030bff:	mov    eax,DWORD PTR [rdi+rax*4+0x4]
   140030c03:	shr    eax,cl
   140030c05:	or     ebx,eax
   140030c07:	mov    DWORD PTR [rsp+0x278],ebx
   140030c0e:	xor    r14d,r14d
   140030c11:	lea    ebx,[r8-0x1]
   140030c15:	mov    DWORD PTR [rsp+0x260],ebx
   140030c1c:	mov    r15d,r14d
   140030c1f:	test   ebx,ebx
   140030c21:	js     0x140030e06
   140030c27:	mov    eax,r11d
   140030c2a:	lea    edi,[rbx+r13*1]
   140030c2e:	mov    r11d,r10d
   140030c31:	mov    r12d,0xffffffff
   140030c37:	mov    QWORD PTR [rsp+0x30],r11
   140030c3c:	mov    QWORD PTR [rsp+0x38],rax
   140030c41:	cmp    edi,r9d
   140030c44:	ja     0x140030c4c
   140030c46:	mov    ebp,DWORD PTR [rsi+rdi*4+0x4]
   140030c4a:	jmp    0x140030c4f
   140030c4c:	mov    ebp,r14d
   140030c4f:	lea    eax,[rdi-0x1]
   140030c52:	mov    ecx,DWORD PTR [rsi+rax*4+0x4]
   140030c56:	lea    eax,[rdi-0x2]
   140030c59:	mov    r10d,DWORD PTR [rsi+rax*4+0x4]
   140030c5e:	mov    QWORD PTR [rsp+0x28],rcx
   140030c63:	mov    DWORD PTR [rsp+0x2c],ebp
   140030c67:	test   edx,edx
   140030c69:	je     0x140030c9d
   140030c6b:	mov    rcx,QWORD PTR [rsp+0x38]
   140030c70:	mov    r8d,r10d
   140030c73:	mov    rax,QWORD PTR [rsp+0x28]
   140030c78:	shr    r8,cl
   140030c7b:	mov    ecx,edx
   140030c7d:	shl    rax,cl
   140030c80:	or     r8,rax
   140030c83:	shl    r10d,cl
   140030c86:	cmp    edi,0x3
   140030c89:	jb     0x140030ca2
   140030c8b:	mov    ecx,DWORD PTR [rsp+0x20]
   140030c8f:	lea    eax,[rdi-0x3]
   140030c92:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   140030c96:	shr    eax,cl
   140030c98:	or     r10d,eax
   140030c9b:	jmp    0x140030ca2
   140030c9d:	mov    r8,QWORD PTR [rsp+0x28]
   140030ca2:	xor    edx,edx
   140030ca4:	mov    rax,r8
   140030ca7:	div    r11
   140030caa:	mov    ecx,edx
   140030cac:	mov    r8,rax
   140030caf:	cmp    rax,r12
   140030cb2:	jbe    0x140030ccb
   140030cb4:	movabs rax,0xffffffff00000001
   140030cbe:	add    rax,r8
   140030cc1:	mov    r8,r12
   140030cc4:	imul   rax,r11
   140030cc8:	add    rcx,rax
   140030ccb:	cmp    rcx,r12
   140030cce:	ja     0x140030d14
   140030cd0:	mov    rbx,QWORD PTR [rsp+0x30]
   140030cd5:	mov    r11d,r10d
   140030cd8:	mov    r10d,DWORD PTR [rsp+0x278]
   140030ce0:	mov    edx,r10d
   140030ce3:	imul   rdx,r8
   140030ce7:	neg    r10
   140030cea:	nop    WORD PTR [rax+rax*1+0x0]
   140030cf0:	mov    rax,rcx
   140030cf3:	shl    rax,0x20
   140030cf7:	or     rax,r11
   140030cfa:	cmp    rdx,rax
   140030cfd:	jbe    0x140030d0d
   140030cff:	dec    r8
   140030d02:	add    rdx,r10
   140030d05:	add    rcx,rbx
   140030d08:	cmp    rcx,r12
   140030d0b:	jbe    0x140030cf0
   140030d0d:	mov    ebx,DWORD PTR [rsp+0x260]
   140030d14:	test   r8,r8
   140030d17:	je     0x140030ddd
   140030d1d:	mov    rcx,r14
   140030d20:	test   r13d,r13d
   140030d23:	je     0x140030d7d
   140030d25:	mov    r9,QWORD PTR [rsp+0x268]
   140030d2d:	mov    edx,ebx
   140030d2f:	add    r9,0x4
   140030d33:	mov    ebx,r13d
   140030d36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140030d40:	mov    eax,DWORD PTR [r9]
   140030d43:	imul   rax,r8
   140030d47:	add    rcx,rax
   140030d4a:	mov    eax,edx
   140030d4c:	mov    r10d,ecx
   140030d4f:	shr    rcx,0x20
   140030d53:	lea    r11,[rsi+rax*4]
   140030d57:	mov    eax,DWORD PTR [rsi+rax*4+0x4]
   140030d5b:	cmp    eax,r10d
   140030d5e:	jae    0x140030d63
   140030d60:	inc    rcx
   140030d63:	sub    eax,r10d
   140030d66:	inc    edx
   140030d68:	add    r9,0x4
   140030d6c:	mov    DWORD PTR [r11+0x4],eax
   140030d70:	sub    rbx,0x1
   140030d74:	jne    0x140030d40
   140030d76:	mov    ebx,DWORD PTR [rsp+0x260]
   140030d7d:	mov    eax,ebp
   140030d7f:	cmp    rax,rcx
   140030d82:	jae    0x140030dd2
   140030d84:	mov    r9d,r14d
   140030d87:	test   r13d,r13d
   140030d8a:	je     0x140030dcf
   140030d8c:	mov    r11,QWORD PTR [rsp+0x268]
   140030d94:	mov    r10d,ebx
   140030d97:	add    r11,0x4
   140030d9b:	mov    ebx,r13d
   140030d9e:	xchg   ax,ax
   140030da0:	mov    eax,r10d
   140030da3:	lea    r11,[r11+0x4]
   140030da7:	mov    edx,DWORD PTR [rsi+rax*4+0x4]
   140030dab:	lea    rcx,[rsi+rax*4]
   140030daf:	mov    eax,DWORD PTR [r11-0x4]
   140030db3:	inc    r10d
   140030db6:	add    rdx,rax
   140030db9:	mov    eax,r9d
   140030dbc:	add    rdx,rax
   140030dbf:	mov    r9,rdx
   140030dc2:	mov    DWORD PTR [rcx+0x4],edx
   140030dc5:	shr    r9,0x20
   140030dc9:	sub    rbx,0x1
   140030dcd:	jne    0x140030da0
   140030dcf:	dec    r8
   140030dd2:	mov    ebx,DWORD PTR [rsp+0x260]
   140030dd9:	lea    r9d,[rdi-0x1]
   140030ddd:	mov    r11,QWORD PTR [rsp+0x30]
   140030de2:	dec    ebx
   140030de4:	mov    edx,DWORD PTR [rsp+0x270]
   140030deb:	dec    edi
   140030ded:	shl    r15,0x20
   140030df1:	mov    eax,r8d
   140030df4:	add    r15,rax
   140030df7:	mov    DWORD PTR [rsp+0x260],ebx
   140030dfe:	test   ebx,ebx
   140030e00:	jns    0x140030c41
   140030e06:	inc    r9d
   140030e09:	mov    ecx,r9d
   140030e0c:	cmp    r9d,DWORD PTR [rsi]
   140030e0f:	jae    0x140030e1e
   140030e11:	mov    eax,ecx
   140030e13:	inc    ecx
   140030e15:	mov    DWORD PTR [rsi+rax*4+0x4],r14d
   140030e1a:	cmp    ecx,DWORD PTR [rsi]
   140030e1c:	jb     0x140030e11
   140030e1e:	mov    DWORD PTR [rsi],r9d
   140030e21:	test   r9d,r9d
   140030e24:	je     0x140030e41
   140030e26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140030e30:	mov    edx,DWORD PTR [rsi]
   140030e32:	dec    edx
   140030e34:	cmp    DWORD PTR [rsi+rdx*4+0x4],r14d
   140030e39:	jne    0x140030e41
   140030e3b:	mov    DWORD PTR [rsi],edx
   140030e3d:	test   edx,edx
   140030e3f:	jne    0x140030e30
   140030e41:	mov    rax,r15
   140030e44:	mov    r13,QWORD PTR [rsp+0x228]
   140030e4c:	mov    r14,QWORD PTR [rsp+0x220]
   140030e54:	mov    r12,QWORD PTR [rsp+0x230]
   140030e5c:	mov    rbp,QWORD PTR [rsp+0x238]
   140030e64:	mov    rbx,QWORD PTR [rsp+0x240]
   140030e6c:	mov    r15,QWORD PTR [rsp+0x218]
   140030e74:	add    rsp,0x248
   140030e7b:	pop    rdi
   140030e7c:	pop    rsi
   140030e7d:	ret    
   140030e7e:	int3   
   140030e7f:	int3   
   140030e80:	mov    WORD PTR [rsp+0x8],cx
   140030e85:	push   rbp
   140030e86:	mov    rbp,rsp
   140030e89:	sub    rsp,0x50
   140030e8d:	mov    eax,0xffff
   140030e92:	cmp    cx,ax
   140030e95:	je     0x140030f3e
   140030e9b:	lea    rcx,[rbp-0x20]
   140030e9f:	call   0x14002bd94
   140030ea4:	mov    rax,QWORD PTR [rbp-0x18]
   140030ea8:	mov    r10,QWORD PTR [rax+0x138]
   140030eaf:	test   r10,r10
   140030eb2:	jne    0x140030ec7
   140030eb4:	movzx  edx,WORD PTR [rbp+0x10]
   140030eb8:	lea    eax,[rdx-0x41]
   140030ebb:	cmp    ax,0x19
   140030ebf:	ja     0x140030f2a
   140030ec1:	add    dx,0x20
   140030ec5:	jmp    0x140030f2a
   140030ec7:	movzx  ecx,WORD PTR [rbp+0x10]
   140030ecb:	mov    edx,0x100
   140030ed0:	cmp    cx,dx
   140030ed3:	jae    0x140030efe
   140030ed5:	mov    edx,0x1
   140030eda:	call   0x14003b5c4
   140030edf:	test   eax,eax
   140030ee1:	jne    0x140030ee9
   140030ee3:	movzx  edx,WORD PTR [rbp+0x10]
   140030ee7:	jmp    0x140030f2a
   140030ee9:	mov    rax,QWORD PTR [rbp-0x18]
   140030eed:	movzx  edx,WORD PTR [rbp+0x10]
   140030ef1:	mov    rcx,QWORD PTR [rax+0x110]
   140030ef8:	movzx  edx,BYTE PTR [rcx+rdx*1]
   140030efc:	jmp    0x140030f2a
   140030efe:	mov    r9d,0x1
   140030f04:	lea    rax,[rbp+0x20]
   140030f08:	mov    DWORD PTR [rsp+0x28],r9d
   140030f0d:	lea    r8,[rbp+0x10]
   140030f11:	mov    rcx,r10
   140030f14:	mov    QWORD PTR [rsp+0x20],rax
   140030f19:	call   0x14003932c
   140030f1e:	movzx  edx,WORD PTR [rbp+0x10]
   140030f22:	test   eax,eax
   140030f24:	je     0x140030f2a
   140030f26:	movzx  edx,WORD PTR [rbp+0x20]
   140030f2a:	cmp    BYTE PTR [rbp-0x8],0x0
   140030f2e:	je     0x140030f3b
   140030f30:	mov    rcx,QWORD PTR [rbp-0x20]
   140030f34:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140030f3b:	movzx  eax,dx
   140030f3e:	add    rsp,0x50
   140030f42:	pop    rbp
   140030f43:	ret    
   140030f44:	xor    edx,edx
   140030f46:	jmp    0x140030e80
   140030f4b:	int3   
   140030f4c:	mov    QWORD PTR [rsp+0x8],rbx
   140030f51:	push   rdi
   140030f52:	sub    rsp,0x20
   140030f56:	movsxd rdi,ecx
   140030f59:	test   rdx,rdx
   140030f5c:	je     0x140030f7d
   140030f5e:	mov    rax,QWORD PTR [rdx]
   140030f61:	cmp    DWORD PTR [rax+0x8],0x1
   140030f65:	jle    0x140030f78
   140030f67:	mov    r8,rdx
   140030f6a:	mov    ecx,edi
   140030f6c:	mov    edx,0x1
   140030f71:	call   0x1400393b4
   140030f76:	jmp    0x140030f89
   140030f78:	mov    rax,QWORD PTR [rax]
   140030f7b:	jmp    0x140030f82
   140030f7d:	call   0x140035e00
   140030f82:	movzx  eax,WORD PTR [rax+rdi*2]
   140030f86:	and    eax,0x1
   140030f89:	mov    rbx,QWORD PTR [rsp+0x30]
   140030f8e:	test   eax,eax
   140030f90:	setne  al
   140030f93:	add    rsp,0x20
   140030f97:	pop    rdi
   140030f98:	ret    
   140030f99:	int3   
   140030f9a:	int3   
   140030f9b:	int3   
   140030f9c:	mov    QWORD PTR [rsp+0x10],rbx
   140030fa1:	mov    QWORD PTR [rsp+0x20],rsi
   140030fa6:	push   rbp
   140030fa7:	mov    rbp,rsp
   140030faa:	sub    rsp,0x70
   140030fae:	movsxd rbx,ecx
   140030fb1:	lea    rcx,[rbp-0x20]
   140030fb5:	call   0x14002bd94
   140030fba:	cmp    ebx,0x100
   140030fc0:	jae    0x140030ffa
   140030fc2:	lea    rdx,[rbp-0x18]
   140030fc6:	mov    ecx,ebx
   140030fc8:	call   0x140030f4c
   140030fcd:	test   al,al
   140030fcf:	je     0x140030fe0
   140030fd1:	mov    rax,QWORD PTR [rbp-0x18]
   140030fd5:	mov    rcx,QWORD PTR [rax+0x110]
   140030fdc:	movzx  ebx,BYTE PTR [rcx+rbx*1]
   140030fe0:	cmp    BYTE PTR [rbp-0x8],0x0
   140030fe4:	je     0x1400310c6
   140030fea:	mov    rax,QWORD PTR [rbp-0x20]
   140030fee:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140030ff5:	jmp    0x1400310c6
   140030ffa:	xor    eax,eax
   140030ffc:	mov    WORD PTR [rbp+0x10],ax
   140031000:	mov    BYTE PTR [rbp+0x12],al
   140031003:	mov    rax,QWORD PTR [rbp-0x18]
   140031007:	cmp    DWORD PTR [rax+0x8],0x1
   14003100b:	jle    0x140031035
   14003100d:	mov    esi,ebx
   14003100f:	lea    rdx,[rbp-0x18]
   140031013:	sar    esi,0x8
   140031016:	movzx  ecx,sil
   14003101a:	call   0x14003b634
   14003101f:	test   eax,eax
   140031021:	je     0x140031035
   140031023:	mov    BYTE PTR [rbp+0x10],sil
   140031027:	mov    ecx,0x2
   14003102c:	mov    BYTE PTR [rbp+0x11],bl
   14003102f:	mov    BYTE PTR [rbp+0x12],0x0
   140031033:	jmp    0x14003104c
   140031035:	call   0x140032c50
   14003103a:	mov    ecx,0x1
   14003103f:	mov    DWORD PTR [rax],0x2a
   140031045:	mov    BYTE PTR [rbp+0x10],bl
   140031048:	mov    BYTE PTR [rbp+0x11],0x0
   14003104c:	mov    rdx,QWORD PTR [rbp-0x18]
   140031050:	lea    r9,[rbp+0x10]
   140031054:	xor    eax,eax
   140031056:	mov    DWORD PTR [rsp+0x40],0x1
   14003105e:	mov    WORD PTR [rbp+0x20],ax
   140031062:	mov    r8d,0x100
   140031068:	mov    BYTE PTR [rbp+0x22],al
   14003106b:	mov    eax,DWORD PTR [rdx+0xc]
   14003106e:	mov    rdx,QWORD PTR [rdx+0x138]
   140031075:	mov    DWORD PTR [rsp+0x38],eax
   140031079:	lea    rax,[rbp+0x20]
   14003107d:	mov    DWORD PTR [rsp+0x30],0x3
   140031085:	mov    QWORD PTR [rsp+0x28],rax
   14003108a:	mov    DWORD PTR [rsp+0x20],ecx
   14003108e:	lea    rcx,[rbp-0x18]
   140031092:	call   0x14003b9d0
   140031097:	test   eax,eax
   140031099:	je     0x140030fe0
   14003109f:	movzx  ebx,BYTE PTR [rbp+0x20]
   1400310a3:	cmp    eax,0x1
   1400310a6:	je     0x140030fe0
   1400310ac:	movzx  ecx,BYTE PTR [rbp+0x21]
   1400310b0:	shl    ebx,0x8
   1400310b3:	or     ebx,ecx
   1400310b5:	cmp    BYTE PTR [rbp-0x8],0x0
   1400310b9:	je     0x1400310c6
   1400310bb:	mov    rcx,QWORD PTR [rbp-0x20]
   1400310bf:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400310c6:	lea    r11,[rsp+0x70]
   1400310cb:	mov    eax,ebx
   1400310cd:	mov    rbx,QWORD PTR [r11+0x18]
   1400310d1:	mov    rsi,QWORD PTR [r11+0x28]
   1400310d5:	mov    rsp,r11
   1400310d8:	pop    rbp
   1400310d9:	ret    
   1400310da:	int3   
   1400310db:	int3   
   1400310dc:	sub    rsp,0x28
   1400310e0:	mov    eax,DWORD PTR [rip+0x45996]        # 0x140076a7c
   1400310e6:	test   eax,eax
   1400310e8:	je     0x1400310f5
   1400310ea:	xor    edx,edx
   1400310ec:	call   0x140030f9c
   1400310f1:	mov    ecx,eax
   1400310f3:	jmp    0x140031100
   1400310f5:	lea    eax,[rcx-0x41]
   1400310f8:	cmp    eax,0x19
   1400310fb:	ja     0x140031100
   1400310fd:	add    ecx,0x20
   140031100:	mov    eax,ecx
   140031102:	add    rsp,0x28
   140031106:	ret    
   140031107:	int3   
   140031108:	mov    rax,rcx
   14003110b:	movzx  edx,WORD PTR [rax]
   14003110e:	add    rax,0x2
   140031112:	test   dx,dx
   140031115:	jne    0x14003110b
   140031117:	sub    rax,rcx
   14003111a:	sar    rax,1
   14003111d:	dec    rax
   140031120:	ret    
   140031121:	int3   
   140031122:	int3   
   140031123:	int3   
   140031124:	int3   
   140031125:	int3   
   140031126:	int3   
   140031127:	int3   
   140031128:	int3   
   140031129:	int3   
   14003112a:	int3   
   14003112b:	int3   
   14003112c:	int3   
   14003112d:	int3   
   14003112e:	int3   
   14003112f:	int3   
   140031130:	int3   
   140031131:	int3   
   140031132:	int3   
   140031133:	int3   
   140031134:	int3   
   140031135:	int3   
   140031136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140031140:	mov    rax,rcx
   140031143:	neg    rcx
   140031146:	test   rax,0x7
   14003114c:	je     0x14003115d
   14003114e:	xchg   ax,ax
   140031150:	mov    dl,BYTE PTR [rax]
   140031152:	inc    rax
   140031155:	test   dl,dl
   140031157:	je     0x1400311b8
   140031159:	test   al,0x7
   14003115b:	jne    0x140031150
   14003115d:	movabs r8,0x7efefefefefefeff
   140031167:	movabs r11,0x8101010101010100
   140031171:	mov    rdx,QWORD PTR [rax]
   140031174:	mov    r9,r8
   140031177:	add    rax,0x8
   14003117b:	add    r9,rdx
   14003117e:	not    rdx
   140031181:	xor    rdx,r9
   140031184:	and    rdx,r11
   140031187:	je     0x140031171
   140031189:	mov    rdx,QWORD PTR [rax-0x8]
   14003118d:	test   dl,dl
   14003118f:	je     0x1400311e2
   140031191:	test   dh,dh
   140031193:	je     0x1400311dc
   140031195:	shr    rdx,0x10
   140031199:	test   dl,dl
   14003119b:	je     0x1400311d6
   14003119d:	test   dh,dh
   14003119f:	je     0x1400311d0
   1400311a1:	shr    rdx,0x10
   1400311a5:	test   dl,dl
   1400311a7:	je     0x1400311ca
   1400311a9:	test   dh,dh
   1400311ab:	je     0x1400311c4
   1400311ad:	shr    edx,0x10
   1400311b0:	test   dl,dl
   1400311b2:	je     0x1400311be
   1400311b4:	test   dh,dh
   1400311b6:	jne    0x140031171
   1400311b8:	lea    rax,[rcx+rax*1-0x1]
   1400311bd:	ret    
   1400311be:	lea    rax,[rcx+rax*1-0x2]
   1400311c3:	ret    
   1400311c4:	lea    rax,[rcx+rax*1-0x3]
   1400311c9:	ret    
   1400311ca:	lea    rax,[rcx+rax*1-0x4]
   1400311cf:	ret    
   1400311d0:	lea    rax,[rcx+rax*1-0x5]
   1400311d5:	ret    
   1400311d6:	lea    rax,[rcx+rax*1-0x6]
   1400311db:	ret    
   1400311dc:	lea    rax,[rcx+rax*1-0x7]
   1400311e1:	ret    
   1400311e2:	lea    rax,[rcx+rax*1-0x8]
   1400311e7:	ret    
   1400311e8:	test   cl,0x4
   1400311eb:	je     0x1400311f0
   1400311ed:	mov    al,0x1
   1400311ef:	ret    
   1400311f0:	test   cl,0x1
   1400311f3:	je     0x14003120e
   1400311f5:	and    ecx,0x2
   1400311f8:	je     0x140031202
   1400311fa:	cmp    edx,0x80000000
   140031200:	ja     0x1400311ed
   140031202:	test   ecx,ecx
   140031204:	jne    0x14003120e
   140031206:	cmp    edx,0x7fffffff
   14003120c:	ja     0x1400311ed
   14003120e:	xor    al,al
   140031210:	ret    
   140031211:	int3   
   140031212:	int3   
   140031213:	int3   
   140031214:	mov    QWORD PTR [rsp+0x8],rbx
   140031219:	mov    QWORD PTR [rsp+0x18],rsi
   14003121e:	mov    QWORD PTR [rsp+0x20],rdi
   140031223:	push   rbp
   140031224:	push   r12
   140031226:	push   r13
   140031228:	push   r14
   14003122a:	push   r15
   14003122c:	mov    rbp,rsp
   14003122f:	sub    rsp,0x40
   140031233:	cmp    QWORD PTR [rdx],0x0
   140031237:	mov    r12b,r9b
   14003123a:	mov    r15d,r8d
   14003123d:	mov    rbx,rdx
   140031240:	jne    0x140031268
   140031242:	call   0x140032c50
   140031247:	mov    DWORD PTR [rax],0x16
   14003124d:	call   0x1400307d0
   140031252:	mov    rcx,QWORD PTR [rbx+0x8]
   140031256:	test   rcx,rcx
   140031259:	je     0x140031261
   14003125b:	mov    rax,QWORD PTR [rbx]
   14003125e:	mov    QWORD PTR [rcx],rax
   140031261:	xor    eax,eax
   140031263:	jmp    0x140031509
   140031268:	test   r8d,r8d
   14003126b:	je     0x140031276
   14003126d:	lea    eax,[r8-0x2]
   140031271:	cmp    eax,0x22
   140031274:	ja     0x140031242
   140031276:	mov    rdx,rcx
   140031279:	lea    rcx,[rbp-0x20]
   14003127d:	call   0x14002bd94
   140031282:	mov    r13,QWORD PTR [rbx]
   140031285:	xor    esi,esi
   140031287:	mov    rdx,QWORD PTR [rbp-0x18]
   14003128b:	mov    QWORD PTR [rbp+0x38],r13
   14003128f:	mov    dil,BYTE PTR [r13+0x0]
   140031293:	lea    rax,[r13+0x1]
   140031297:	lea    r13d,[rsi+0x8]
   14003129b:	mov    QWORD PTR [rbx],rax
   14003129e:	cmp    DWORD PTR [rdx+0x8],0x1
   1400312a2:	movzx  eax,dil
   1400312a6:	jle    0x1400312bc
   1400312a8:	lea    r8,[rbp-0x18]
   1400312ac:	mov    edx,r13d
   1400312af:	mov    ecx,eax
   1400312b1:	call   0x1400393b4
   1400312b6:	mov    rdx,QWORD PTR [rbp-0x18]
   1400312ba:	jmp    0x1400312c9
   1400312bc:	mov    rcx,rax
   1400312bf:	mov    rax,QWORD PTR [rdx]
   1400312c2:	movzx  eax,WORD PTR [rax+rcx*2]
   1400312c6:	and    eax,r13d
   1400312c9:	test   eax,eax
   1400312cb:	je     0x1400312d8
   1400312cd:	mov    rax,QWORD PTR [rbx]
   1400312d0:	mov    dil,BYTE PTR [rax]
   1400312d3:	inc    rax
   1400312d6:	jmp    0x14003129b
   1400312d8:	xor    r14d,r14d
   1400312db:	test   r12b,r12b
   1400312de:	setne  r14b
   1400312e2:	cmp    dil,0x2d
   1400312e6:	jne    0x1400312ee
   1400312e8:	or     r14d,0x2
   1400312ec:	jmp    0x1400312f4
   1400312ee:	cmp    dil,0x2b
   1400312f2:	jne    0x140031300
   1400312f4:	mov    rax,QWORD PTR [rbx]
   1400312f7:	mov    dil,BYTE PTR [rax]
   1400312fa:	inc    rax
   1400312fd:	mov    QWORD PTR [rbx],rax
   140031300:	mov    r13,QWORD PTR [rbp+0x38]
   140031304:	or     r12d,0xffffffff
   140031308:	test   r15d,0xffffffef
   14003130f:	jne    0x140031395
   140031315:	lea    eax,[rdi-0x30]
   140031318:	cmp    al,0x9
   14003131a:	ja     0x140031325
   14003131c:	movsx  eax,dil
   140031320:	add    eax,0xffffffd0
   140031323:	jmp    0x140031348
   140031325:	lea    eax,[rdi-0x61]
   140031328:	cmp    al,0x19
   14003132a:	ja     0x140031335
   14003132c:	movsx  eax,dil
   140031330:	add    eax,0xffffffa9
   140031333:	jmp    0x140031348
   140031335:	lea    eax,[rdi-0x41]
   140031338:	cmp    al,0x19
   14003133a:	ja     0x140031345
   14003133c:	movsx  eax,dil
   140031340:	add    eax,0xffffffc9
   140031343:	jmp    0x140031348
   140031345:	mov    eax,r12d
   140031348:	mov    r9d,0x8
   14003134e:	test   eax,eax
   140031350:	je     0x14003135d
   140031352:	test   r15d,r15d
   140031355:	jne    0x14003139b
   140031357:	lea    r15d,[r9+0x2]
   14003135b:	jmp    0x14003139b
   14003135d:	mov    rax,QWORD PTR [rbx]
   140031360:	mov    dl,BYTE PTR [rax]
   140031362:	lea    rcx,[rax+0x1]
   140031366:	mov    QWORD PTR [rbx],rcx
   140031369:	lea    eax,[rdx-0x58]
   14003136c:	test   al,0xdf
   14003136e:	je     0x1400313b7
   140031370:	test   r15d,r15d
   140031373:	cmove  r15d,r9d
   140031377:	dec    rcx
   14003137a:	mov    QWORD PTR [rbx],rcx
   14003137d:	test   dl,dl
   14003137f:	je     0x14003139b
   140031381:	cmp    BYTE PTR [rcx],dl
   140031383:	je     0x14003139b
   140031385:	call   0x140032c50
   14003138a:	mov    DWORD PTR [rax],0x16
   140031390:	call   0x1400307d0
   140031395:	mov    r9d,0x8
   14003139b:	xor    edx,edx
   14003139d:	mov    eax,r12d
   1400313a0:	div    r15d
   1400313a3:	mov    r8d,eax
   1400313a6:	lea    ecx,[rdi-0x30]
   1400313a9:	cmp    cl,0x9
   1400313ac:	ja     0x1400313cf
   1400313ae:	movsx  ecx,dil
   1400313b2:	add    ecx,0xffffffd0
   1400313b5:	jmp    0x1400313f2
   1400313b7:	mov    dil,BYTE PTR [rcx]
   1400313ba:	mov    eax,0x10
   1400313bf:	test   r15d,r15d
   1400313c2:	cmove  r15d,eax
   1400313c6:	lea    rax,[rcx+0x1]
   1400313ca:	mov    QWORD PTR [rbx],rax
   1400313cd:	jmp    0x14003139b
   1400313cf:	lea    eax,[rdi-0x61]
   1400313d2:	cmp    al,0x19
   1400313d4:	ja     0x1400313df
   1400313d6:	movsx  ecx,dil
   1400313da:	add    ecx,0xffffffa9
   1400313dd:	jmp    0x1400313f2
   1400313df:	lea    eax,[rdi-0x41]
   1400313e2:	cmp    al,0x19
   1400313e4:	ja     0x1400313ef
   1400313e6:	movsx  ecx,dil
   1400313ea:	add    ecx,0xffffffc9
   1400313ed:	jmp    0x1400313f2
   1400313ef:	mov    ecx,r12d
   1400313f2:	cmp    ecx,r12d
   1400313f5:	je     0x140031424
   1400313f7:	cmp    ecx,r15d
   1400313fa:	jae    0x140031424
   1400313fc:	or     r14d,r9d
   1400313ff:	cmp    esi,r8d
   140031402:	jb     0x140031410
   140031404:	jne    0x14003140a
   140031406:	cmp    ecx,edx
   140031408:	jbe    0x140031410
   14003140a:	or     r14d,0x4
   14003140e:	jmp    0x140031416
   140031410:	imul   esi,r15d
   140031414:	add    esi,ecx
   140031416:	mov    rax,QWORD PTR [rbx]
   140031419:	mov    dil,BYTE PTR [rax]
   14003141c:	inc    rax
   14003141f:	mov    QWORD PTR [rbx],rax
   140031422:	jmp    0x1400313a6
   140031424:	dec    QWORD PTR [rbx]
   140031427:	mov    rax,QWORD PTR [rbx]
   14003142a:	test   dil,dil
   14003142d:	je     0x140031444
   14003142f:	cmp    BYTE PTR [rax],dil
   140031432:	je     0x140031444
   140031434:	call   0x140032c50
   140031439:	mov    DWORD PTR [rax],0x16
   14003143f:	call   0x1400307d0
   140031444:	test   r14b,0x8
   140031448:	jne    0x140031467
   14003144a:	cmp    BYTE PTR [rbp-0x8],0x0
   14003144e:	mov    QWORD PTR [rbx],r13
   140031451:	je     0x140031252
   140031457:	mov    rax,QWORD PTR [rbp-0x20]
   14003145b:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140031462:	jmp    0x140031252
   140031467:	mov    edx,esi
   140031469:	mov    ecx,r14d
   14003146c:	call   0x1400311e8
   140031471:	test   al,al
   140031473:	je     0x1400314df
   140031475:	call   0x140032c50
   14003147a:	mov    DWORD PTR [rax],0x22
   140031480:	test   r14b,0x1
   140031484:	jne    0x14003148b
   140031486:	mov    esi,r12d
   140031489:	jmp    0x1400314e7
   14003148b:	test   r14b,0x2
   14003148f:	je     0x1400314b8
   140031491:	cmp    BYTE PTR [rbp-0x8],0x0
   140031495:	je     0x1400314a2
   140031497:	mov    rax,QWORD PTR [rbp-0x20]
   14003149b:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400314a2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400314a6:	test   rcx,rcx
   1400314a9:	je     0x1400314b1
   1400314ab:	mov    rax,QWORD PTR [rbx]
   1400314ae:	mov    QWORD PTR [rcx],rax
   1400314b1:	mov    eax,0x80000000
   1400314b6:	jmp    0x140031509
   1400314b8:	cmp    BYTE PTR [rbp-0x8],0x0
   1400314bc:	je     0x1400314c9
   1400314be:	mov    rax,QWORD PTR [rbp-0x20]
   1400314c2:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400314c9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400314cd:	test   rcx,rcx
   1400314d0:	je     0x1400314d8
   1400314d2:	mov    rax,QWORD PTR [rbx]
   1400314d5:	mov    QWORD PTR [rcx],rax
   1400314d8:	mov    eax,0x7fffffff
   1400314dd:	jmp    0x140031509
   1400314df:	test   r14b,0x2
   1400314e3:	je     0x1400314e7
   1400314e5:	neg    esi
   1400314e7:	cmp    BYTE PTR [rbp-0x8],0x0
   1400314eb:	je     0x1400314f8
   1400314ed:	mov    rcx,QWORD PTR [rbp-0x20]
   1400314f1:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400314f8:	mov    rax,QWORD PTR [rbx+0x8]
   1400314fc:	test   rax,rax
   1400314ff:	je     0x140031507
   140031501:	mov    rcx,QWORD PTR [rbx]
   140031504:	mov    QWORD PTR [rax],rcx
   140031507:	mov    eax,esi
   140031509:	lea    r11,[rsp+0x40]
   14003150e:	mov    rbx,QWORD PTR [r11+0x30]
   140031512:	mov    rsi,QWORD PTR [r11+0x40]
   140031516:	mov    rdi,QWORD PTR [r11+0x48]
   14003151a:	mov    rsp,r11
   14003151d:	pop    r15
   14003151f:	pop    r14
   140031521:	pop    r13
   140031523:	pop    r12
   140031525:	pop    rbp
   140031526:	ret    
   140031527:	int3   
   140031528:	mov    QWORD PTR [rsp+0x8],rbx
   14003152d:	mov    QWORD PTR [rsp+0x18],rbp
   140031532:	mov    QWORD PTR [rsp+0x20],rsi
   140031537:	push   rdi
   140031538:	push   r12
   14003153a:	push   r13
   14003153c:	push   r14
   14003153e:	push   r15
   140031540:	sub    rsp,0x50
   140031544:	xor    r13d,r13d
   140031547:	mov    sil,r9b
   14003154a:	mov    r15d,r8d
   14003154d:	mov    rdi,rdx
   140031550:	cmp    QWORD PTR [rdx],r13
   140031553:	jne    0x14003157b
   140031555:	call   0x140032c50
   14003155a:	mov    DWORD PTR [rax],0x16
   140031560:	call   0x1400307d0
   140031565:	mov    rcx,QWORD PTR [rdi+0x8]
   140031569:	test   rcx,rcx
   14003156c:	je     0x140031574
   14003156e:	mov    rax,QWORD PTR [rdi]
   140031571:	mov    QWORD PTR [rcx],rax
   140031574:	xor    eax,eax
   140031576:	jmp    0x140031bde
   14003157b:	test   r8d,r8d
   14003157e:	je     0x140031589
   140031580:	lea    eax,[r8-0x2]
   140031584:	cmp    eax,0x22
   140031587:	ja     0x140031555
   140031589:	mov    rdx,rcx
   14003158c:	lea    rcx,[rsp+0x28]
   140031591:	call   0x14002bd94
   140031596:	mov    r12,QWORD PTR [rdi]
   140031599:	mov    r14d,r13d
   14003159c:	mov    QWORD PTR [rsp+0x20],r12
   1400315a1:	mov    ebp,0x8
   1400315a6:	movzx  ebx,WORD PTR [r12]
   1400315ab:	lea    rax,[r12+0x2]
   1400315b0:	jmp    0x1400315bc
   1400315b2:	mov    rax,QWORD PTR [rdi]
   1400315b5:	movzx  ebx,WORD PTR [rax]
   1400315b8:	add    rax,0x2
   1400315bc:	mov    edx,ebp
   1400315be:	mov    QWORD PTR [rdi],rax
   1400315c1:	movzx  ecx,bx
   1400315c4:	call   0x14003b5c4
   1400315c9:	test   eax,eax
   1400315cb:	jne    0x1400315b2
   1400315cd:	test   sil,sil
   1400315d0:	mov    ebp,r13d
   1400315d3:	setne  bpl
   1400315d7:	cmp    bx,0x2d
   1400315db:	jne    0x1400315e2
   1400315dd:	or     ebp,0x2
   1400315e0:	jmp    0x1400315e8
   1400315e2:	cmp    bx,0x2b
   1400315e6:	jne    0x1400315f5
   1400315e8:	mov    rax,QWORD PTR [rdi]
   1400315eb:	movzx  ebx,WORD PTR [rax]
   1400315ee:	add    rax,0x2
   1400315f2:	mov    QWORD PTR [rdi],rax
   1400315f5:	mov    esi,0x9e6
   1400315fa:	mov    DWORD PTR [rsp+0x88],0x66a
   140031605:	or     r9d,0xffffffff
   140031609:	mov    ecx,0x660
   14003160e:	mov    r10d,0x30
   140031614:	mov    r11d,0xff10
   14003161a:	mov    edx,0x6f0
   14003161f:	mov    eax,0xa66
   140031624:	lea    r8d,[rsi-0x80]
   140031628:	test   r15d,0xffffffef
   14003162f:	jne    0x1400318b4
   140031635:	cmp    bx,r10w
   140031639:	jb     0x140031809
   14003163f:	cmp    bx,0x3a
   140031643:	jae    0x140031650
   140031645:	movzx  eax,bx
   140031648:	sub    eax,r10d
   14003164b:	jmp    0x140031804
   140031650:	cmp    bx,r11w
   140031654:	jae    0x1400317ef
   14003165a:	cmp    bx,cx
   14003165d:	jb     0x140031809
   140031663:	cmp    bx,WORD PTR [rsp+0x88]
   14003166b:	jae    0x140031677
   14003166d:	movzx  eax,bx
   140031670:	sub    eax,ecx
   140031672:	jmp    0x140031804
   140031677:	cmp    bx,dx
   14003167a:	jb     0x140031809
   140031680:	mov    ecx,0x6fa
   140031685:	cmp    bx,cx
   140031688:	jae    0x140031694
   14003168a:	movzx  eax,bx
   14003168d:	sub    eax,edx
   14003168f:	jmp    0x140031804
   140031694:	cmp    bx,r8w
   140031698:	jb     0x140031809
   14003169e:	mov    ecx,0x970
   1400316a3:	cmp    bx,cx
   1400316a6:	jae    0x1400316b3
   1400316a8:	movzx  eax,bx
   1400316ab:	sub    eax,r8d
   1400316ae:	jmp    0x140031804
   1400316b3:	cmp    bx,si
   1400316b6:	jb     0x140031809
   1400316bc:	mov    ecx,0x9f0
   1400316c1:	cmp    bx,cx
   1400316c4:	jae    0x1400316d0
   1400316c6:	movzx  eax,bx
   1400316c9:	sub    eax,esi
   1400316cb:	jmp    0x140031804
   1400316d0:	cmp    bx,ax
   1400316d3:	jb     0x140031809
   1400316d9:	mov    eax,0xa70
   1400316de:	cmp    bx,ax
   1400316e1:	jae    0x1400316f0
   1400316e3:	movzx  eax,bx
   1400316e6:	sub    eax,0xa66
   1400316eb:	jmp    0x140031804
   1400316f0:	mov    ecx,0xae6
   1400316f5:	cmp    bx,cx
   1400316f8:	jb     0x140031809
   1400316fe:	lea    eax,[rcx+0xa]
   140031701:	cmp    bx,ax
   140031704:	jb     0x14003166d
   14003170a:	lea    ecx,[rax+0x76]
   14003170d:	cmp    bx,cx
   140031710:	jb     0x140031809
   140031716:	lea    eax,[rcx+0xa]
   140031719:	cmp    bx,ax
   14003171c:	jb     0x14003166d
   140031722:	mov    ecx,0xc66
   140031727:	cmp    bx,cx
   14003172a:	jb     0x140031809
   140031730:	lea    eax,[rcx+0xa]
   140031733:	cmp    bx,ax
   140031736:	jb     0x14003166d
   14003173c:	lea    ecx,[rax+0x76]
   14003173f:	cmp    bx,cx
   140031742:	jb     0x140031809
   140031748:	lea    eax,[rcx+0xa]
   14003174b:	cmp    bx,ax
   14003174e:	jb     0x14003166d
   140031754:	lea    ecx,[rax+0x76]
   140031757:	cmp    bx,cx
   14003175a:	jb     0x140031809
   140031760:	lea    eax,[rcx+0xa]
   140031763:	cmp    bx,ax
   140031766:	jb     0x14003166d
   14003176c:	mov    ecx,0xe50
   140031771:	cmp    bx,cx
   140031774:	jb     0x140031809
   14003177a:	lea    eax,[rcx+0xa]
   14003177d:	cmp    bx,ax
   140031780:	jb     0x14003166d
   140031786:	lea    ecx,[rax+0x76]
   140031789:	cmp    bx,cx
   14003178c:	jb     0x140031809
   14003178e:	lea    eax,[rcx+0xa]
   140031791:	cmp    bx,ax
   140031794:	jb     0x14003166d
   14003179a:	lea    ecx,[rax+0x46]
   14003179d:	cmp    bx,cx
   1400317a0:	jb     0x140031809
   1400317a2:	lea    eax,[rcx+0xa]
   1400317a5:	cmp    bx,ax
   1400317a8:	jb     0x14003166d
   1400317ae:	mov    ecx,0x1040
   1400317b3:	cmp    bx,cx
   1400317b6:	jb     0x140031809
   1400317b8:	lea    eax,[rcx+0xa]
   1400317bb:	cmp    bx,ax
   1400317be:	jb     0x14003166d
   1400317c4:	mov    ecx,0x17e0
   1400317c9:	cmp    bx,cx
   1400317cc:	jb     0x140031809
   1400317ce:	lea    eax,[rcx+0xa]
   1400317d1:	cmp    bx,ax
   1400317d4:	jb     0x14003166d
   1400317da:	lea    ecx,[rax+0x26]
   1400317dd:	cmp    bx,cx
   1400317e0:	jb     0x140031809
   1400317e2:	lea    eax,[rcx+0xa]
   1400317e5:	cmp    bx,ax
   1400317e8:	jae    0x140031809
   1400317ea:	jmp    0x14003166d
   1400317ef:	mov    eax,0xff1a
   1400317f4:	cmp    bx,ax
   1400317f7:	jae    0x140031801
   1400317f9:	movzx  eax,bx
   1400317fc:	sub    eax,r11d
   1400317ff:	jmp    0x140031804
   140031801:	or     eax,0xffffffff
   140031804:	cmp    eax,0xffffffff
   140031807:	jne    0x140031832
   140031809:	lea    eax,[rbx-0x41]
   14003180c:	cmp    ax,0x19
   140031810:	jbe    0x140031820
   140031812:	lea    eax,[rbx-0x61]
   140031815:	cmp    ax,0x19
   140031819:	jbe    0x140031820
   14003181b:	mov    eax,r9d
   14003181e:	jmp    0x140031832
   140031820:	lea    eax,[rbx-0x61]
   140031823:	cmp    ax,0x19
   140031827:	movzx  eax,bx
   14003182a:	ja     0x14003182f
   14003182c:	sub    eax,0x20
   14003182f:	add    eax,0xffffffc9
   140031832:	mov    esi,0x8
   140031837:	test   eax,eax
   140031839:	je     0x140031846
   14003183b:	test   r15d,r15d
   14003183e:	jne    0x1400318b9
   140031840:	lea    r15d,[rsi+0x2]
   140031844:	jmp    0x1400318b9
   140031846:	mov    rax,QWORD PTR [rdi]
   140031849:	mov    r8d,0xffdf
   14003184f:	movzx  edx,WORD PTR [rax]
   140031852:	lea    rcx,[rax+0x2]
   140031856:	mov    QWORD PTR [rdi],rcx
   140031859:	lea    eax,[rdx-0x58]
   14003185c:	test   r8w,ax
   140031860:	je     0x14003189c
   140031862:	test   r15d,r15d
   140031865:	cmove  r15d,esi
   140031869:	add    rcx,0xfffffffffffffffe
   14003186d:	mov    QWORD PTR [rdi],rcx
   140031870:	test   dx,dx
   140031873:	je     0x1400318b9
   140031875:	cmp    WORD PTR [rcx],dx
   140031878:	je     0x1400318b9
   14003187a:	call   0x140032c50
   14003187f:	mov    DWORD PTR [rax],0x16
   140031885:	call   0x1400307d0
   14003188a:	or     r9d,0xffffffff
   14003188e:	mov    r10d,0x30
   140031894:	mov    r11d,0xff10
   14003189a:	jmp    0x1400318b9
   14003189c:	movzx  ebx,WORD PTR [rcx]
   14003189f:	mov    eax,0x10
   1400318a4:	test   r15d,r15d
   1400318a7:	cmove  r15d,eax
   1400318ab:	lea    rax,[rcx+0x2]
   1400318af:	mov    QWORD PTR [rdi],rax
   1400318b2:	jmp    0x1400318b9
   1400318b4:	mov    esi,0x8
   1400318b9:	xor    edx,edx
   1400318bb:	mov    eax,r9d
   1400318be:	div    r15d
   1400318c1:	mov    r13d,0x660
   1400318c7:	mov    r12d,0x6f0
   1400318cd:	mov    r8d,eax
   1400318d0:	cmp    bx,r10w
   1400318d4:	jb     0x140031a88
   1400318da:	cmp    bx,0x3a
   1400318de:	jae    0x1400318eb
   1400318e0:	movzx  ecx,bx
   1400318e3:	sub    ecx,r10d
   1400318e6:	jmp    0x140031a83
   1400318eb:	cmp    bx,r11w
   1400318ef:	jae    0x140031a6e
   1400318f5:	cmp    bx,r13w
   1400318f9:	jb     0x140031a88
   1400318ff:	mov    eax,0x66a
   140031904:	cmp    bx,ax
   140031907:	jae    0x140031914
   140031909:	movzx  ecx,bx
   14003190c:	sub    ecx,r13d
   14003190f:	jmp    0x140031a83
   140031914:	cmp    bx,r12w
   140031918:	jb     0x140031a88
   14003191e:	mov    eax,0x6fa
   140031923:	cmp    bx,ax
   140031926:	jae    0x140031933
   140031928:	movzx  ecx,bx
   14003192b:	sub    ecx,r12d
   14003192e:	jmp    0x140031a83
   140031933:	mov    eax,0x966
   140031938:	cmp    bx,ax
   14003193b:	jb     0x140031a88
   140031941:	lea    ecx,[rax+0xa]
   140031944:	cmp    bx,cx
   140031947:	jae    0x140031953
   140031949:	movzx  ecx,bx
   14003194c:	sub    ecx,eax
   14003194e:	jmp    0x140031a83
   140031953:	mov    eax,0x9e6
   140031958:	cmp    bx,ax
   14003195b:	jb     0x140031a88
   140031961:	lea    ecx,[rax+0xa]
   140031964:	cmp    bx,cx
   140031967:	jb     0x140031949
   140031969:	lea    eax,[rcx+0x76]
   14003196c:	cmp    bx,ax
   14003196f:	jb     0x140031a88
   140031975:	lea    ecx,[rax+0xa]
   140031978:	cmp    bx,cx
   14003197b:	jb     0x140031949
   14003197d:	lea    eax,[rcx+0x76]
   140031980:	cmp    bx,ax
   140031983:	jb     0x140031a88
   140031989:	lea    ecx,[rax+0xa]
   14003198c:	cmp    bx,cx
   14003198f:	jb     0x140031949
   140031991:	lea    eax,[rcx+0x76]
   140031994:	cmp    bx,ax
   140031997:	jb     0x140031a88
   14003199d:	lea    ecx,[rax+0xa]
   1400319a0:	cmp    bx,cx
   1400319a3:	jb     0x140031949
   1400319a5:	mov    eax,0xc66
   1400319aa:	cmp    bx,ax
   1400319ad:	jb     0x140031a88
   1400319b3:	lea    ecx,[rax+0xa]
   1400319b6:	cmp    bx,cx
   1400319b9:	jb     0x140031949
   1400319bb:	lea    eax,[rcx+0x76]
   1400319be:	cmp    bx,ax
   1400319c1:	jb     0x140031a88
   1400319c7:	lea    ecx,[rax+0xa]
   1400319ca:	cmp    bx,cx
   1400319cd:	jb     0x140031949
   1400319d3:	lea    eax,[rcx+0x76]
   1400319d6:	cmp    bx,ax
   1400319d9:	jb     0x140031a88
   1400319df:	lea    ecx,[rax+0xa]
   1400319e2:	cmp    bx,cx
   1400319e5:	jb     0x140031949
   1400319eb:	mov    eax,0xe50
   1400319f0:	cmp    bx,ax
   1400319f3:	jb     0x140031a88
   1400319f9:	lea    ecx,[rax+0xa]
   1400319fc:	cmp    bx,cx
   1400319ff:	jb     0x140031949
   140031a05:	lea    eax,[rcx+0x76]
   140031a08:	cmp    bx,ax
   140031a0b:	jb     0x140031a88
   140031a0d:	lea    ecx,[rax+0xa]
   140031a10:	cmp    bx,cx
   140031a13:	jb     0x140031949
   140031a19:	lea    eax,[rcx+0x46]
   140031a1c:	cmp    bx,ax
   140031a1f:	jb     0x140031a88
   140031a21:	lea    ecx,[rax+0xa]
   140031a24:	cmp    bx,cx
   140031a27:	jb     0x140031949
   140031a2d:	mov    eax,0x1040
   140031a32:	cmp    bx,ax
   140031a35:	jb     0x140031a88
   140031a37:	lea    ecx,[rax+0xa]
   140031a3a:	cmp    bx,cx
   140031a3d:	jb     0x140031949
   140031a43:	mov    eax,0x17e0
   140031a48:	cmp    bx,ax
   140031a4b:	jb     0x140031a88
   140031a4d:	lea    ecx,[rax+0xa]
   140031a50:	cmp    bx,cx
   140031a53:	jb     0x140031949
   140031a59:	lea    eax,[rcx+0x26]
   140031a5c:	cmp    bx,ax
   140031a5f:	jb     0x140031a88
   140031a61:	lea    ecx,[rax+0xa]
   140031a64:	cmp    bx,cx
   140031a67:	jae    0x140031a88
   140031a69:	jmp    0x140031949
   140031a6e:	mov    eax,0xff1a
   140031a73:	cmp    bx,ax
   140031a76:	jae    0x140031a80
   140031a78:	movzx  ecx,bx
   140031a7b:	sub    ecx,r11d
   140031a7e:	jmp    0x140031a83
   140031a80:	or     ecx,0xffffffff
   140031a83:	cmp    ecx,0xffffffff
   140031a86:	jne    0x140031ab1
   140031a88:	lea    eax,[rbx-0x41]
   140031a8b:	cmp    ax,0x19
   140031a8f:	jbe    0x140031a9f
   140031a91:	lea    eax,[rbx-0x61]
   140031a94:	cmp    ax,0x19
   140031a98:	jbe    0x140031a9f
   140031a9a:	mov    ecx,r9d
   140031a9d:	jmp    0x140031ab1
   140031a9f:	lea    eax,[rbx-0x61]
   140031aa2:	movzx  ecx,bx
   140031aa5:	cmp    ax,0x19
   140031aa9:	ja     0x140031aae
   140031aab:	sub    ecx,0x20
   140031aae:	add    ecx,0xffffffc9
   140031ab1:	cmp    ecx,r9d
   140031ab4:	je     0x140031ae6
   140031ab6:	cmp    ecx,r15d
   140031ab9:	jae    0x140031ae6
   140031abb:	or     ebp,esi
   140031abd:	cmp    r14d,r8d
   140031ac0:	jb     0x140031acd
   140031ac2:	jne    0x140031ac8
   140031ac4:	cmp    ecx,edx
   140031ac6:	jbe    0x140031acd
   140031ac8:	or     ebp,0x4
   140031acb:	jmp    0x140031ad4
   140031acd:	imul   r14d,r15d
   140031ad1:	add    r14d,ecx
   140031ad4:	mov    rax,QWORD PTR [rdi]
   140031ad7:	movzx  ebx,WORD PTR [rax]
   140031ada:	add    rax,0x2
   140031ade:	mov    QWORD PTR [rdi],rax
   140031ae1:	jmp    0x1400318d0
   140031ae6:	add    QWORD PTR [rdi],0xfffffffffffffffe
   140031aea:	xor    r13d,r13d
   140031aed:	mov    rax,QWORD PTR [rdi]
   140031af0:	mov    r12,QWORD PTR [rsp+0x20]
   140031af5:	test   bx,bx
   140031af8:	je     0x140031b0f
   140031afa:	cmp    WORD PTR [rax],bx
   140031afd:	je     0x140031b0f
   140031aff:	call   0x140032c50
   140031b04:	mov    DWORD PTR [rax],0x16
   140031b0a:	call   0x1400307d0
   140031b0f:	test   sil,bpl
   140031b12:	jne    0x140031b33
   140031b14:	mov    QWORD PTR [rdi],r12
   140031b17:	cmp    BYTE PTR [rsp+0x40],r13b
   140031b1c:	je     0x140031565
   140031b22:	mov    rax,QWORD PTR [rsp+0x28]
   140031b27:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140031b2e:	jmp    0x140031565
   140031b33:	mov    edx,r14d
   140031b36:	mov    ecx,ebp
   140031b38:	call   0x1400311e8
   140031b3d:	test   al,al
   140031b3f:	je     0x140031bb0
   140031b41:	call   0x140032c50
   140031b46:	mov    DWORD PTR [rax],0x22
   140031b4c:	test   bpl,0x1
   140031b50:	jne    0x140031b58
   140031b52:	or     r14d,0xffffffff
   140031b56:	jmp    0x140031bb9
   140031b58:	test   bpl,0x2
   140031b5c:	je     0x140031b87
   140031b5e:	cmp    BYTE PTR [rsp+0x40],r13b
   140031b63:	je     0x140031b71
   140031b65:	mov    rax,QWORD PTR [rsp+0x28]
   140031b6a:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140031b71:	mov    rcx,QWORD PTR [rdi+0x8]
   140031b75:	test   rcx,rcx
   140031b78:	je     0x140031b80
   140031b7a:	mov    rax,QWORD PTR [rdi]
   140031b7d:	mov    QWORD PTR [rcx],rax
   140031b80:	mov    eax,0x80000000
   140031b85:	jmp    0x140031bde
   140031b87:	cmp    BYTE PTR [rsp+0x40],r13b
   140031b8c:	je     0x140031b9a
   140031b8e:	mov    rax,QWORD PTR [rsp+0x28]
   140031b93:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140031b9a:	mov    rcx,QWORD PTR [rdi+0x8]
   140031b9e:	test   rcx,rcx
   140031ba1:	je     0x140031ba9
   140031ba3:	mov    rax,QWORD PTR [rdi]
   140031ba6:	mov    QWORD PTR [rcx],rax
   140031ba9:	mov    eax,0x7fffffff
   140031bae:	jmp    0x140031bde
   140031bb0:	test   bpl,0x2
   140031bb4:	je     0x140031bb9
   140031bb6:	neg    r14d
   140031bb9:	cmp    BYTE PTR [rsp+0x40],r13b
   140031bbe:	je     0x140031bcc
   140031bc0:	mov    rcx,QWORD PTR [rsp+0x28]
   140031bc5:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140031bcc:	mov    rdx,QWORD PTR [rdi+0x8]
   140031bd0:	test   rdx,rdx
   140031bd3:	je     0x140031bdb
   140031bd5:	mov    rcx,QWORD PTR [rdi]
   140031bd8:	mov    QWORD PTR [rdx],rcx
   140031bdb:	mov    eax,r14d
   140031bde:	lea    r11,[rsp+0x50]
   140031be3:	mov    rbx,QWORD PTR [r11+0x30]
   140031be7:	mov    rbp,QWORD PTR [r11+0x40]
   140031beb:	mov    rsi,QWORD PTR [r11+0x48]
   140031bef:	mov    rsp,r11
   140031bf2:	pop    r15
   140031bf4:	pop    r14
   140031bf6:	pop    r13
   140031bf8:	pop    r12
   140031bfa:	pop    rdi
   140031bfb:	ret    
   140031bfc:	mov    QWORD PTR [rsp+0x8],rbx
   140031c01:	mov    QWORD PTR [rsp+0x18],rbp
   140031c06:	mov    QWORD PTR [rsp+0x20],rsi
   140031c0b:	push   rdi
   140031c0c:	push   r12
   140031c0e:	push   r13
   140031c10:	push   r14
   140031c12:	push   r15
   140031c14:	sub    rsp,0xa0
   140031c1b:	xor    r13d,r13d
   140031c1e:	mov    sil,r9b
   140031c21:	mov    r15d,r8d
   140031c24:	mov    rdi,rdx
   140031c27:	cmp    QWORD PTR [rdx],r13
   140031c2a:	jne    0x140031c52
   140031c2c:	call   0x140032c50
   140031c31:	mov    DWORD PTR [rax],0x16
   140031c37:	call   0x1400307d0
   140031c3c:	mov    rcx,QWORD PTR [rdi+0x8]
   140031c40:	test   rcx,rcx
   140031c43:	je     0x140031c4b
   140031c45:	mov    rax,QWORD PTR [rdi]
   140031c48:	mov    QWORD PTR [rcx],rax
   140031c4b:	xor    eax,eax
   140031c4d:	jmp    0x140032393
   140031c52:	test   r8d,r8d
   140031c55:	je     0x140031c60
   140031c57:	lea    eax,[r8-0x2]
   140031c5b:	cmp    eax,0x22
   140031c5e:	ja     0x140031c2c
   140031c60:	mov    rdx,rcx
   140031c63:	lea    rcx,[rsp+0x78]
   140031c68:	call   0x14002bd94
   140031c6d:	mov    r12,QWORD PTR [rdi]
   140031c70:	mov    r14,r13
   140031c73:	mov    QWORD PTR [rsp+0x98],r12
   140031c7b:	mov    ebp,0x8
   140031c80:	movzx  ebx,WORD PTR [r12]
   140031c85:	lea    rax,[r12+0x2]
   140031c8a:	jmp    0x140031c96
   140031c8c:	mov    rax,QWORD PTR [rdi]
   140031c8f:	movzx  ebx,WORD PTR [rax]
   140031c92:	add    rax,0x2
   140031c96:	mov    edx,ebp
   140031c98:	mov    QWORD PTR [rdi],rax
   140031c9b:	movzx  ecx,bx
   140031c9e:	call   0x14003b5c4
   140031ca3:	test   eax,eax
   140031ca5:	jne    0x140031c8c
   140031ca7:	test   sil,sil
   140031caa:	mov    ebp,r13d
   140031cad:	setne  bpl
   140031cb1:	cmp    bx,0x2d
   140031cb5:	jne    0x140031cbc
   140031cb7:	or     ebp,0x2
   140031cba:	jmp    0x140031cc2
   140031cbc:	cmp    bx,0x2b
   140031cc0:	jne    0x140031ccf
   140031cc2:	mov    rax,QWORD PTR [rdi]
   140031cc5:	movzx  ebx,WORD PTR [rax]
   140031cc8:	add    rax,0x2
   140031ccc:	mov    QWORD PTR [rdi],rax
   140031ccf:	mov    DWORD PTR [rsp+0x74],0x66a
   140031cd7:	mov    esi,0xa66
   140031cdc:	mov    DWORD PTR [rsp+0xd8],0xaf0
   140031ce7:	mov    ecx,0x30
   140031cec:	mov    DWORD PTR [rsp+0x50],0xb66
   140031cf4:	mov    edx,0x660
   140031cf9:	mov    DWORD PTR [rsp+0x28],0xb70
   140031d01:	mov    r11d,0xff10
   140031d07:	mov    DWORD PTR [rsp+0x68],0xc66
   140031d0f:	lea    r10d,[rsi-0x80]
   140031d13:	mov    DWORD PTR [rsp+0x30],0xc70
   140031d1b:	mov    eax,0xae6
   140031d20:	mov    DWORD PTR [rsp+0x58],0xce6
   140031d28:	mov    r8d,0x6f0
   140031d2e:	mov    DWORD PTR [rsp+0x38],0xcf0
   140031d36:	mov    r9d,0x966
   140031d3c:	mov    DWORD PTR [rsp+0x70],0xd66
   140031d44:	mov    DWORD PTR [rsp+0x40],0xd70
   140031d4c:	mov    DWORD PTR [rsp+0x60],0xe50
   140031d54:	mov    DWORD PTR [rsp+0x48],0xe5a
   140031d5c:	mov    DWORD PTR [rsp+0x6c],0xed0
   140031d64:	mov    DWORD PTR [rsp+0x20],0xeda
   140031d6c:	mov    DWORD PTR [rsp+0x24],0xf20
   140031d74:	mov    DWORD PTR [rsp+0x2c],0xf2a
   140031d7c:	mov    DWORD PTR [rsp+0x34],0x1040
   140031d84:	mov    DWORD PTR [rsp+0x3c],0x104a
   140031d8c:	mov    DWORD PTR [rsp+0x44],0x17e0
   140031d94:	mov    DWORD PTR [rsp+0x4c],0x17ea
   140031d9c:	mov    DWORD PTR [rsp+0x54],0x1810
   140031da4:	mov    DWORD PTR [rsp+0x5c],0x181a
   140031dac:	mov    DWORD PTR [rsp+0x64],0xff1a
   140031db4:	test   r15d,0xffffffef
   140031dbb:	jne    0x140032066
   140031dc1:	cmp    bx,cx
   140031dc4:	jb     0x140031f8c
   140031dca:	cmp    bx,0x3a
   140031dce:	jae    0x140031dda
   140031dd0:	movzx  eax,bx
   140031dd3:	sub    eax,ecx
   140031dd5:	jmp    0x140031f87
   140031dda:	cmp    bx,r11w
   140031dde:	jae    0x140031f75
   140031de4:	cmp    bx,dx
   140031de7:	jb     0x140031f8c
   140031ded:	cmp    bx,WORD PTR [rsp+0x74]
   140031df2:	jae    0x140031dfe
   140031df4:	movzx  eax,bx
   140031df7:	sub    eax,edx
   140031df9:	jmp    0x140031f87
   140031dfe:	cmp    bx,r8w
   140031e02:	jb     0x140031f8c
   140031e08:	mov    edx,0x6fa
   140031e0d:	cmp    bx,dx
   140031e10:	jae    0x140031e1d
   140031e12:	movzx  eax,bx
   140031e15:	sub    eax,r8d
   140031e18:	jmp    0x140031f87
   140031e1d:	cmp    bx,r9w
   140031e21:	jb     0x140031f8c
   140031e27:	mov    edx,0x970
   140031e2c:	cmp    bx,dx
   140031e2f:	jae    0x140031e3c
   140031e31:	movzx  eax,bx
   140031e34:	sub    eax,r9d
   140031e37:	jmp    0x140031f87
   140031e3c:	cmp    bx,r10w
   140031e40:	jb     0x140031f8c
   140031e46:	mov    edx,0x9f0
   140031e4b:	cmp    bx,dx
   140031e4e:	jae    0x140031e5b
   140031e50:	movzx  eax,bx
   140031e53:	sub    eax,r10d
   140031e56:	jmp    0x140031f87
   140031e5b:	cmp    bx,si
   140031e5e:	jb     0x140031f8c
   140031e64:	mov    edx,0xa70
   140031e69:	cmp    bx,dx
   140031e6c:	jae    0x140031e78
   140031e6e:	movzx  eax,bx
   140031e71:	sub    eax,esi
   140031e73:	jmp    0x140031f87
   140031e78:	cmp    bx,ax
   140031e7b:	jb     0x140031f8c
   140031e81:	cmp    bx,WORD PTR [rsp+0xd8]
   140031e89:	jae    0x140031e98
   140031e8b:	movzx  eax,bx
   140031e8e:	sub    eax,0xae6
   140031e93:	jmp    0x140031f87
   140031e98:	mov    edx,DWORD PTR [rsp+0x50]
   140031e9c:	cmp    bx,dx
   140031e9f:	jb     0x140031f8c
   140031ea5:	cmp    bx,WORD PTR [rsp+0x28]
   140031eaa:	jb     0x140031df4
   140031eb0:	mov    edx,DWORD PTR [rsp+0x68]
   140031eb4:	cmp    bx,dx
   140031eb7:	jb     0x140031f8c
   140031ebd:	cmp    bx,WORD PTR [rsp+0x30]
   140031ec2:	jb     0x140031df4
   140031ec8:	mov    edx,DWORD PTR [rsp+0x58]
   140031ecc:	cmp    bx,dx
   140031ecf:	jb     0x140031f8c
   140031ed5:	cmp    bx,WORD PTR [rsp+0x38]
   140031eda:	jb     0x140031df4
   140031ee0:	mov    edx,DWORD PTR [rsp+0x70]
   140031ee4:	cmp    bx,dx
   140031ee7:	jb     0x140031f8c
   140031eed:	cmp    bx,WORD PTR [rsp+0x40]
   140031ef2:	jb     0x140031df4
   140031ef8:	mov    edx,DWORD PTR [rsp+0x60]
   140031efc:	cmp    bx,dx
   140031eff:	jb     0x140031f8c
   140031f05:	cmp    bx,WORD PTR [rsp+0x48]
   140031f0a:	jb     0x140031df4
   140031f10:	mov    edx,DWORD PTR [rsp+0x6c]
   140031f14:	cmp    bx,dx
   140031f17:	jb     0x140031f8c
   140031f19:	cmp    bx,WORD PTR [rsp+0x20]
   140031f1e:	jb     0x140031df4
   140031f24:	mov    edx,DWORD PTR [rsp+0x24]
   140031f28:	cmp    bx,dx
   140031f2b:	jb     0x140031f8c
   140031f2d:	cmp    bx,WORD PTR [rsp+0x2c]
   140031f32:	jb     0x140031df4
   140031f38:	mov    edx,DWORD PTR [rsp+0x34]
   140031f3c:	cmp    bx,dx
   140031f3f:	jb     0x140031f8c
   140031f41:	cmp    bx,WORD PTR [rsp+0x3c]
   140031f46:	jb     0x140031df4
   140031f4c:	mov    edx,DWORD PTR [rsp+0x44]
   140031f50:	cmp    bx,dx
   140031f53:	jb     0x140031f8c
   140031f55:	cmp    bx,WORD PTR [rsp+0x4c]
   140031f5a:	jb     0x140031df4
   140031f60:	mov    edx,DWORD PTR [rsp+0x54]
   140031f64:	cmp    bx,dx
   140031f67:	jb     0x140031f8c
   140031f69:	cmp    bx,WORD PTR [rsp+0x5c]
   140031f6e:	jae    0x140031f8c
   140031f70:	jmp    0x140031df4
   140031f75:	cmp    bx,WORD PTR [rsp+0x64]
   140031f7a:	jae    0x140031f84
   140031f7c:	movzx  eax,bx
   140031f7f:	sub    eax,r11d
   140031f82:	jmp    0x140031f87
   140031f84:	or     eax,0xffffffff
   140031f87:	cmp    eax,0xffffffff
   140031f8a:	jne    0x140031fb5
   140031f8c:	lea    eax,[rbx-0x41]
   140031f8f:	cmp    ax,0x19
   140031f93:	jbe    0x140031fa3
   140031f95:	lea    eax,[rbx-0x61]
   140031f98:	cmp    ax,0x19
   140031f9c:	jbe    0x140031fa3
   140031f9e:	or     eax,0xffffffff
   140031fa1:	jmp    0x140031fb5
   140031fa3:	lea    eax,[rbx-0x61]
   140031fa6:	cmp    ax,0x19
   140031faa:	movzx  eax,bx
   140031fad:	ja     0x140031fb2
   140031faf:	sub    eax,0x20
   140031fb2:	add    eax,0xffffffc9
   140031fb5:	mov    esi,0x8
   140031fba:	test   eax,eax
   140031fbc:	je     0x140031fc9
   140031fbe:	test   r15d,r15d
   140031fc1:	jne    0x140032018
   140031fc3:	lea    r15d,[rsi+0x2]
   140031fc7:	jmp    0x140032018
   140031fc9:	mov    rax,QWORD PTR [rdi]
   140031fcc:	mov    r8d,0xffdf
   140031fd2:	movzx  edx,WORD PTR [rax]
   140031fd5:	lea    rcx,[rax+0x2]
   140031fd9:	mov    QWORD PTR [rdi],rcx
   140031fdc:	lea    eax,[rdx-0x58]
   140031fdf:	test   r8w,ax
   140031fe3:	je     0x14003204e
   140031fe5:	test   r15d,r15d
   140031fe8:	cmove  r15d,esi
   140031fec:	add    rcx,0xfffffffffffffffe
   140031ff0:	mov    QWORD PTR [rdi],rcx
   140031ff3:	test   dx,dx
   140031ff6:	je     0x140032013
   140031ff8:	cmp    WORD PTR [rcx],dx
   140031ffb:	je     0x140032013
   140031ffd:	call   0x140032c50
   140032002:	mov    DWORD PTR [rax],0x16
   140032008:	call   0x1400307d0
   14003200d:	mov    r11d,0xff10
   140032013:	mov    ecx,0x30
   140032018:	movsxd r10,r15d
   14003201b:	xor    edx,edx
   14003201d:	or     rax,0xffffffffffffffff
   140032021:	mov    r13d,0x660
   140032027:	div    r10
   14003202a:	mov    r12d,0x6f0
   140032030:	mov    r9,rax
   140032033:	cmp    bx,cx
   140032036:	jb     0x140032210
   14003203c:	cmp    bx,0x3a
   140032040:	jae    0x14003206d
   140032042:	movzx  r8d,bx
   140032046:	sub    r8d,ecx
   140032049:	jmp    0x14003220a
   14003204e:	movzx  ebx,WORD PTR [rcx]
   140032051:	mov    eax,0x10
   140032056:	test   r15d,r15d
   140032059:	cmove  r15d,eax
   14003205d:	lea    rax,[rcx+0x2]
   140032061:	mov    QWORD PTR [rdi],rax
   140032064:	jmp    0x140032013
   140032066:	mov    esi,0x8
   14003206b:	jmp    0x140032018
   14003206d:	cmp    bx,r11w
   140032071:	jae    0x1400321f6
   140032077:	cmp    bx,r13w
   14003207b:	jb     0x140032210
   140032081:	mov    eax,0x66a
   140032086:	cmp    bx,ax
   140032089:	jae    0x140032097
   14003208b:	movzx  r8d,bx
   14003208f:	sub    r8d,r13d
   140032092:	jmp    0x14003220a
   140032097:	cmp    bx,r12w
   14003209b:	jb     0x140032210
   1400320a1:	mov    eax,0x6fa
   1400320a6:	cmp    bx,ax
   1400320a9:	jae    0x1400320b7
   1400320ab:	movzx  r8d,bx
   1400320af:	sub    r8d,r12d
   1400320b2:	jmp    0x14003220a
   1400320b7:	mov    eax,0x966
   1400320bc:	cmp    bx,ax
   1400320bf:	jb     0x140032210
   1400320c5:	lea    r8d,[rax+0xa]
   1400320c9:	cmp    bx,r8w
   1400320cd:	jae    0x1400320db
   1400320cf:	movzx  r8d,bx
   1400320d3:	sub    r8d,eax
   1400320d6:	jmp    0x14003220a
   1400320db:	mov    eax,0x9e6
   1400320e0:	cmp    bx,ax
   1400320e3:	jb     0x140032210
   1400320e9:	lea    r8d,[rax+0xa]
   1400320ed:	cmp    bx,r8w
   1400320f1:	jb     0x1400320cf
   1400320f3:	lea    eax,[r8+0x76]
   1400320f7:	cmp    bx,ax
   1400320fa:	jb     0x140032210
   140032100:	lea    r8d,[rax+0xa]
   140032104:	cmp    bx,r8w
   140032108:	jb     0x1400320cf
   14003210a:	lea    eax,[r8+0x76]
   14003210e:	cmp    bx,ax
   140032111:	jb     0x140032210
   140032117:	cmp    bx,WORD PTR [rsp+0xd8]
   14003211f:	jb     0x1400320cf
   140032121:	mov    eax,DWORD PTR [rsp+0x50]
   140032125:	cmp    bx,ax
   140032128:	jb     0x140032210
   14003212e:	cmp    bx,WORD PTR [rsp+0x28]
   140032133:	jb     0x1400320cf
   140032135:	mov    eax,DWORD PTR [rsp+0x68]
   140032139:	cmp    bx,ax
   14003213c:	jb     0x140032210
   140032142:	cmp    bx,WORD PTR [rsp+0x30]
   140032147:	jb     0x1400320cf
   140032149:	mov    eax,DWORD PTR [rsp+0x58]
   14003214d:	cmp    bx,ax
   140032150:	jb     0x140032210
   140032156:	cmp    bx,WORD PTR [rsp+0x38]
   14003215b:	jb     0x1400320cf
   140032161:	mov    eax,DWORD PTR [rsp+0x70]
   140032165:	cmp    bx,ax
   140032168:	jb     0x140032210
   14003216e:	cmp    bx,WORD PTR [rsp+0x40]
   140032173:	jb     0x1400320cf
   140032179:	mov    eax,DWORD PTR [rsp+0x60]
   14003217d:	cmp    bx,ax
   140032180:	jb     0x140032210
   140032186:	cmp    bx,WORD PTR [rsp+0x48]
   14003218b:	jb     0x1400320cf
   140032191:	mov    eax,DWORD PTR [rsp+0x6c]
   140032195:	cmp    bx,ax
   140032198:	jb     0x140032210
   14003219a:	cmp    bx,WORD PTR [rsp+0x20]
   14003219f:	jb     0x1400320cf
   1400321a5:	mov    eax,DWORD PTR [rsp+0x24]
   1400321a9:	cmp    bx,ax
   1400321ac:	jb     0x140032210
   1400321ae:	cmp    bx,WORD PTR [rsp+0x2c]
   1400321b3:	jb     0x1400320cf
   1400321b9:	mov    eax,DWORD PTR [rsp+0x34]
   1400321bd:	cmp    bx,ax
   1400321c0:	jb     0x140032210
   1400321c2:	cmp    bx,WORD PTR [rsp+0x3c]
   1400321c7:	jb     0x1400320cf
   1400321cd:	mov    eax,DWORD PTR [rsp+0x44]
   1400321d1:	cmp    bx,ax
   1400321d4:	jb     0x140032210
   1400321d6:	cmp    bx,WORD PTR [rsp+0x4c]
   1400321db:	jb     0x1400320cf
   1400321e1:	mov    eax,DWORD PTR [rsp+0x54]
   1400321e5:	cmp    bx,ax
   1400321e8:	jb     0x140032210
   1400321ea:	cmp    bx,WORD PTR [rsp+0x5c]
   1400321ef:	jae    0x140032210
   1400321f1:	jmp    0x1400320cf
   1400321f6:	cmp    bx,WORD PTR [rsp+0x64]
   1400321fb:	jae    0x140032206
   1400321fd:	movzx  r8d,bx
   140032201:	sub    r8d,r11d
   140032204:	jmp    0x14003220a
   140032206:	or     r8d,0xffffffff
   14003220a:	cmp    r8d,0xffffffff
   14003220e:	jne    0x14003223d
   140032210:	lea    eax,[rbx-0x41]
   140032213:	cmp    ax,0x19
   140032217:	jbe    0x140032228
   140032219:	lea    eax,[rbx-0x61]
   14003221c:	cmp    ax,0x19
   140032220:	jbe    0x140032228
   140032222:	or     r8d,0xffffffff
   140032226:	jmp    0x14003223d
   140032228:	lea    eax,[rbx-0x61]
   14003222b:	movzx  r8d,bx
   14003222f:	cmp    ax,0x19
   140032233:	ja     0x140032239
   140032235:	sub    r8d,0x20
   140032239:	add    r8d,0xffffffc9
   14003223d:	cmp    r8d,0xffffffff
   140032241:	je     0x140032282
   140032243:	cmp    r8d,r15d
   140032246:	jae    0x140032282
   140032248:	or     ebp,esi
   14003224a:	cmp    r14,r9
   14003224d:	jb     0x14003225e
   14003224f:	jne    0x140032259
   140032251:	mov    eax,r8d
   140032254:	cmp    rax,rdx
   140032257:	jbe    0x14003225e
   140032259:	or     ebp,0x4
   14003225c:	jmp    0x140032270
   14003225e:	mov    rcx,r10
   140032261:	imul   rcx,r14
   140032265:	mov    r14d,r8d
   140032268:	add    r14,rcx
   14003226b:	mov    ecx,0x30
   140032270:	mov    rax,QWORD PTR [rdi]
   140032273:	movzx  ebx,WORD PTR [rax]
   140032276:	add    rax,0x2
   14003227a:	mov    QWORD PTR [rdi],rax
   14003227d:	jmp    0x140032033
   140032282:	add    QWORD PTR [rdi],0xfffffffffffffffe
   140032286:	xor    r13d,r13d
   140032289:	mov    rax,QWORD PTR [rdi]
   14003228c:	mov    r12,QWORD PTR [rsp+0x98]
   140032294:	test   bx,bx
   140032297:	je     0x1400322ae
   140032299:	cmp    WORD PTR [rax],bx
   14003229c:	je     0x1400322ae
   14003229e:	call   0x140032c50
   1400322a3:	mov    DWORD PTR [rax],0x16
   1400322a9:	call   0x1400307d0
   1400322ae:	test   sil,bpl
   1400322b1:	jne    0x1400322d5
   1400322b3:	mov    QWORD PTR [rdi],r12
   1400322b6:	cmp    BYTE PTR [rsp+0x90],r13b
   1400322be:	je     0x140031c3c
   1400322c4:	mov    rax,QWORD PTR [rsp+0x78]
   1400322c9:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400322d0:	jmp    0x140031c3c
   1400322d5:	mov    rdx,r14
   1400322d8:	mov    ecx,ebp
   1400322da:	call   0x140030974
   1400322df:	test   al,al
   1400322e1:	je     0x140032362
   1400322e3:	call   0x140032c50
   1400322e8:	mov    DWORD PTR [rax],0x22
   1400322ee:	test   bpl,0x1
   1400322f2:	jne    0x1400322fa
   1400322f4:	or     r14,0xffffffffffffffff
   1400322f8:	jmp    0x14003236b
   1400322fa:	test   bpl,0x2
   1400322fe:	je     0x140032331
   140032300:	cmp    BYTE PTR [rsp+0x90],r13b
   140032308:	je     0x140032316
   14003230a:	mov    rax,QWORD PTR [rsp+0x78]
   14003230f:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140032316:	mov    rcx,QWORD PTR [rdi+0x8]
   14003231a:	test   rcx,rcx
   14003231d:	je     0x140032325
   14003231f:	mov    rax,QWORD PTR [rdi]
   140032322:	mov    QWORD PTR [rcx],rax
   140032325:	movabs rax,0x8000000000000000
   14003232f:	jmp    0x140032393
   140032331:	cmp    BYTE PTR [rsp+0x90],r13b
   140032339:	je     0x140032347
   14003233b:	mov    rax,QWORD PTR [rsp+0x78]
   140032340:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140032347:	mov    rcx,QWORD PTR [rdi+0x8]
   14003234b:	test   rcx,rcx
   14003234e:	je     0x140032356
   140032350:	mov    rax,QWORD PTR [rdi]
   140032353:	mov    QWORD PTR [rcx],rax
   140032356:	movabs rax,0x7fffffffffffffff
   140032360:	jmp    0x140032393
   140032362:	test   bpl,0x2
   140032366:	je     0x14003236b
   140032368:	neg    r14
   14003236b:	cmp    BYTE PTR [rsp+0x90],r13b
   140032373:	je     0x140032381
   140032375:	mov    rcx,QWORD PTR [rsp+0x78]
   14003237a:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140032381:	mov    rdx,QWORD PTR [rdi+0x8]
   140032385:	test   rdx,rdx
   140032388:	je     0x140032390
   14003238a:	mov    rcx,QWORD PTR [rdi]
   14003238d:	mov    QWORD PTR [rdx],rcx
   140032390:	mov    rax,r14
   140032393:	lea    r11,[rsp+0xa0]
   14003239b:	mov    rbx,QWORD PTR [r11+0x30]
   14003239f:	mov    rbp,QWORD PTR [r11+0x40]
   1400323a3:	mov    rsi,QWORD PTR [r11+0x48]
   1400323a7:	mov    rsp,r11
   1400323aa:	pop    r15
   1400323ac:	pop    r14
   1400323ae:	pop    r13
   1400323b0:	pop    r12
   1400323b2:	pop    rdi
   1400323b3:	ret    
   1400323b4:	rex push rbx
   1400323b6:	sub    rsp,0x30
   1400323ba:	mov    ebx,r8d
   1400323bd:	mov    r8,rdx
   1400323c0:	mov    rdx,rcx
   1400323c3:	lea    rcx,[rsp+0x20]
   1400323c8:	call   0x140038d78
   1400323cd:	mov    rdx,rax
   1400323d0:	xor    r9d,r9d
   1400323d3:	mov    r8d,ebx
   1400323d6:	xor    ecx,ecx
   1400323d8:	call   0x140031bfc
   1400323dd:	add    rsp,0x30
   1400323e1:	pop    rbx
   1400323e2:	ret    
   1400323e3:	int3   
   1400323e4:	rex push rbx
   1400323e6:	sub    rsp,0x30
   1400323ea:	mov    ebx,r8d
   1400323ed:	mov    r8,rdx
   1400323f0:	mov    rdx,rcx
   1400323f3:	lea    rcx,[rsp+0x20]
   1400323f8:	call   0x140038d78
   1400323fd:	mov    rdx,rax
   140032400:	mov    r9b,0x1
   140032403:	mov    r8d,ebx
   140032406:	xor    ecx,ecx
   140032408:	call   0x140031214
   14003240d:	add    rsp,0x30
   140032411:	pop    rbx
   140032412:	ret    
   140032413:	int3   
   140032414:	rex push rbx
   140032416:	sub    rsp,0x30
   14003241a:	mov    ebx,r8d
   14003241d:	mov    r8,rdx
   140032420:	mov    rdx,rcx
   140032423:	lea    rcx,[rsp+0x20]
   140032428:	call   0x140038d78
   14003242d:	mov    rdx,rax
   140032430:	mov    r9b,0x1
   140032433:	mov    r8d,ebx
   140032436:	xor    ecx,ecx
   140032438:	call   0x140031528
   14003243d:	add    rsp,0x30
   140032441:	pop    rbx
   140032442:	ret    
   140032443:	int3   
   140032444:	mov    eax,ecx
   140032446:	cdq    
   140032447:	xor    eax,edx
   140032449:	sub    eax,edx
   14003244b:	ret    
   14003244c:	mov    QWORD PTR [rsp+0x18],rbx
   140032451:	movsd  QWORD PTR [rsp+0x8],xmm0
   140032457:	push   rdi
   140032458:	sub    rsp,0x30
   14003245c:	xorps  xmm1,xmm1
   14003245f:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140032464:	mov    edi,0xffc0
   140032469:	movsd  QWORD PTR [rsp+0x48],xmm1
   14003246f:	mov    edx,edi
   140032471:	mov    ecx,0x1f80
   140032476:	movaps xmm6,xmm0
   140032479:	call   0x14003b34c
   14003247e:	movzx  ecx,WORD PTR [rsp+0x46]
   140032483:	mov    rbx,rax
   140032486:	mov    eax,0x7ff0
   14003248b:	and    cx,ax
   14003248e:	cmp    cx,ax
   140032491:	jne    0x1400324eb
   140032493:	movaps xmm0,xmm6
   140032496:	call   0x14003b2b8
   14003249b:	sub    eax,0x1
   14003249e:	je     0x1400324db
   1400324a0:	sub    eax,0x1
   1400324a3:	je     0x1400324c7
   1400324a5:	cmp    eax,0x1
   1400324a8:	je     0x1400324e6
   1400324aa:	movabs rax,0x8000000000000
   1400324b4:	movsd  QWORD PTR [rsp+0x40],xmm6
   1400324ba:	or     QWORD PTR [rsp+0x40],rax
   1400324bf:	movsd  xmm0,QWORD PTR [rsp+0x40]
   1400324c5:	jmp    0x140032510
   1400324c7:	mov    rdx,rdi
   1400324ca:	mov    rcx,rbx
   1400324cd:	call   0x14003b34c
   1400324d2:	xorps  xmm6,XMMWORD PTR [rip+0x32037]        # 0x140064510
   1400324d9:	jmp    0x1400324e6
   1400324db:	mov    rdx,rdi
   1400324de:	mov    rcx,rbx
   1400324e1:	call   0x14003b34c
   1400324e6:	movaps xmm0,xmm6
   1400324e9:	jmp    0x140032510
   1400324eb:	mov    eax,DWORD PTR [rsp+0x44]
   1400324ef:	mov    rdx,rdi
   1400324f2:	btr    eax,0x1f
   1400324f6:	mov    rcx,rbx
   1400324f9:	mov    DWORD PTR [rsp+0x4c],eax
   1400324fd:	mov    eax,DWORD PTR [rsp+0x40]
   140032501:	mov    DWORD PTR [rsp+0x48],eax
   140032505:	call   0x14003b34c
   14003250a:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140032510:	mov    rbx,QWORD PTR [rsp+0x50]
   140032515:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14003251a:	add    rsp,0x30
   14003251e:	pop    rdi
   14003251f:	ret    
   140032520:	mov    QWORD PTR [rsp+0x10],rbx
   140032525:	mov    QWORD PTR [rsp+0x18],rsi
   14003252a:	mov    QWORD PTR [rsp+0x20],rdi
   14003252f:	push   r14
   140032531:	sub    rsp,0x30
   140032535:	mov    esi,r8d
   140032538:	mov    rbx,rdx
   14003253b:	mov    rdi,rcx
   14003253e:	xor    r14d,r14d
   140032541:	mov    eax,r14d
   140032544:	test   rcx,rcx
   140032547:	setne  al
   14003254a:	test   eax,eax
   14003254c:	jne    0x140032565
   14003254e:	call   0x140032c50
   140032553:	mov    DWORD PTR [rax],0x16
   140032559:	call   0x1400307d0
   14003255e:	xor    eax,eax
   140032560:	jmp    0x1400325eb
   140032565:	mov    eax,r14d
   140032568:	test   rdx,rdx
   14003256b:	setne  al
   14003256e:	test   eax,eax
   140032570:	je     0x14003254e
   140032572:	mov    eax,r14d
   140032575:	cmp    WORD PTR [rdx],r14w
   140032579:	setne  al
   14003257c:	test   eax,eax
   14003257e:	je     0x14003254e
   140032580:	cmp    WORD PTR [rcx],r14w
   140032584:	jne    0x140032593
   140032586:	call   0x140032c50
   14003258b:	mov    DWORD PTR [rax],0x16
   140032591:	jmp    0x14003255e
   140032593:	lea    rcx,[rsp+0x40]
   140032598:	call   0x14003ba68
   14003259d:	mov    r9,QWORD PTR [rsp+0x40]
   1400325a2:	test   r9,r9
   1400325a5:	jne    0x1400325b4
   1400325a7:	call   0x140032c50
   1400325ac:	mov    DWORD PTR [rax],0x18
   1400325b2:	jmp    0x14003255e
   1400325b4:	mov    QWORD PTR [rsp+0x20],r14
   1400325b9:	mov    r8d,esi
   1400325bc:	mov    rdx,rbx
   1400325bf:	mov    rcx,rdi
   1400325c2:	call   0x14003beb8
   1400325c7:	mov    rbx,rax
   1400325ca:	mov    QWORD PTR [rsp+0x20],rax
   1400325cf:	test   rax,rax
   1400325d2:	jne    0x1400325de
   1400325d4:	mov    rcx,QWORD PTR [rsp+0x40]
   1400325d9:	call   0x14003bac4
   1400325de:	mov    rcx,QWORD PTR [rsp+0x40]
   1400325e3:	call   0x140032b8c
   1400325e8:	mov    rax,rbx
   1400325eb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400325f0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400325f5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400325fa:	add    rsp,0x30
   1400325fe:	pop    r14
   140032600:	ret    
   140032601:	int3   
   140032602:	int3   
   140032603:	int3   
   140032604:	mov    r8d,0x40
   14003260a:	jmp    0x140032520
   14003260f:	int3   
   140032610:	mov    QWORD PTR [rsp+0x8],rbx
   140032615:	push   rdi
   140032616:	sub    rsp,0x20
   14003261a:	mov    rbx,rcx
   14003261d:	test   rcx,rcx
   140032620:	jne    0x140032637
   140032622:	call   0x140032c50
   140032627:	mov    DWORD PTR [rax],0x16
   14003262d:	call   0x1400307d0
   140032632:	or     eax,0xffffffff
   140032635:	jmp    0x140032688
   140032637:	or     edi,0xffffffff
   14003263a:	mov    eax,DWORD PTR [rcx+0x14]
   14003263d:	shr    eax,0xd
   140032640:	test   al,0x1
   140032642:	je     0x14003267e
   140032644:	call   0x140032700
   140032649:	mov    rcx,rbx
   14003264c:	mov    edi,eax
   14003264e:	call   0x14003c128
   140032653:	mov    rcx,rbx
   140032656:	call   0x14003a5a4
   14003265b:	mov    ecx,eax
   14003265d:	call   0x14003bfc8
   140032662:	test   eax,eax
   140032664:	jns    0x14003266b
   140032666:	or     edi,0xffffffff
   140032669:	jmp    0x14003267e
   14003266b:	mov    rcx,QWORD PTR [rbx+0x28]
   14003266f:	test   rcx,rcx
   140032672:	je     0x14003267e
   140032674:	call   0x140038c70
   140032679:	and    QWORD PTR [rbx+0x28],0x0
   14003267e:	mov    rcx,rbx
   140032681:	call   0x14003bac4
   140032686:	mov    eax,edi
   140032688:	mov    rbx,QWORD PTR [rsp+0x30]
   14003268d:	add    rsp,0x20
   140032691:	pop    rdi
   140032692:	ret    
   140032693:	int3   
   140032694:	mov    QWORD PTR [rsp+0x10],rbx
   140032699:	mov    QWORD PTR [rsp+0x8],rcx
   14003269e:	push   rdi
   14003269f:	sub    rsp,0x20
   1400326a3:	mov    rbx,rcx
   1400326a6:	xor    eax,eax
   1400326a8:	test   rcx,rcx
   1400326ab:	setne  al
   1400326ae:	test   eax,eax
   1400326b0:	jne    0x1400326c7
   1400326b2:	call   0x140032c50
   1400326b7:	mov    DWORD PTR [rax],0x16
   1400326bd:	call   0x1400307d0
   1400326c2:	or     eax,0xffffffff
   1400326c5:	jmp    0x1400326f2
   1400326c7:	mov    eax,DWORD PTR [rcx+0x14]
   1400326ca:	shr    eax,0xc
   1400326cd:	test   al,0x1
   1400326cf:	je     0x1400326d8
   1400326d1:	call   0x14003bac4
   1400326d6:	jmp    0x1400326c2
   1400326d8:	call   0x140032b80
   1400326dd:	nop
   1400326de:	mov    rcx,rbx
   1400326e1:	call   0x140032610
   1400326e6:	mov    edi,eax
   1400326e8:	mov    rcx,rbx
   1400326eb:	call   0x140032b8c
   1400326f0:	mov    eax,edi
   1400326f2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400326f7:	add    rsp,0x20
   1400326fb:	pop    rdi
   1400326fc:	ret    
   1400326fd:	int3   
   1400326fe:	int3   
   1400326ff:	int3   
   140032700:	mov    QWORD PTR [rsp+0x8],rbx
   140032705:	mov    QWORD PTR [rsp+0x10],rsi
   14003270a:	push   rdi
   14003270b:	sub    rsp,0x20
   14003270f:	mov    rbx,rcx
   140032712:	mov    eax,DWORD PTR [rcx+0x14]
   140032715:	and    al,0x3
   140032717:	cmp    al,0x2
   140032719:	jne    0x140032765
   14003271b:	mov    eax,DWORD PTR [rcx+0x14]
   14003271e:	test   al,0xc0
   140032720:	je     0x140032765
   140032722:	mov    edi,DWORD PTR [rcx]
   140032724:	sub    edi,DWORD PTR [rcx+0x8]
   140032727:	and    DWORD PTR [rcx+0x10],0x0
   14003272b:	mov    rsi,QWORD PTR [rcx+0x8]
   14003272f:	mov    QWORD PTR [rcx],rsi
   140032732:	test   edi,edi
   140032734:	jle    0x140032765
   140032736:	call   0x14003a5a4
   14003273b:	mov    ecx,eax
   14003273d:	mov    r8d,edi
   140032740:	mov    rdx,rsi
   140032743:	call   0x14003c828
   140032748:	cmp    edi,eax
   14003274a:	je     0x140032756
   14003274c:	lock or DWORD PTR [rbx+0x14],0x10
   140032751:	or     eax,0xffffffff
   140032754:	jmp    0x140032767
   140032756:	mov    eax,DWORD PTR [rbx+0x14]
   140032759:	shr    eax,0x2
   14003275c:	test   al,0x1
   14003275e:	je     0x140032765
   140032760:	lock and DWORD PTR [rbx+0x14],0xfffffffd
   140032765:	xor    eax,eax
   140032767:	mov    rbx,QWORD PTR [rsp+0x30]
   14003276c:	mov    rsi,QWORD PTR [rsp+0x38]
   140032771:	add    rsp,0x20
   140032775:	pop    rdi
   140032776:	ret    
   140032777:	int3   
   140032778:	rex push rbx
   14003277a:	sub    rsp,0x20
   14003277e:	mov    rbx,rcx
   140032781:	test   rcx,rcx
   140032784:	jne    0x140032790
   140032786:	add    rsp,0x20
   14003278a:	pop    rbx
   14003278b:	jmp    0x1400327d0
   140032790:	call   0x140032700
   140032795:	test   eax,eax
   140032797:	je     0x14003279e
   140032799:	or     eax,0xffffffff
   14003279c:	jmp    0x1400327bd
   14003279e:	mov    eax,DWORD PTR [rbx+0x14]
   1400327a1:	shr    eax,0xb
   1400327a4:	test   al,0x1
   1400327a6:	je     0x1400327bb
   1400327a8:	mov    rcx,rbx
   1400327ab:	call   0x14003a5a4
   1400327b0:	mov    ecx,eax
   1400327b2:	call   0x14003c1f4
   1400327b7:	test   eax,eax
   1400327b9:	jne    0x140032799
   1400327bb:	xor    eax,eax
   1400327bd:	add    rsp,0x20
   1400327c1:	pop    rbx
   1400327c2:	ret    
   1400327c3:	int3   
   1400327c4:	mov    ecx,0x1
   1400327c9:	jmp    0x1400327d0
   1400327ce:	int3   
   1400327cf:	int3   
   1400327d0:	mov    rax,rsp
   1400327d3:	mov    QWORD PTR [rax+0x8],rbx
   1400327d7:	mov    QWORD PTR [rax+0x18],rsi
   1400327db:	push   rdi
   1400327dc:	push   r14
   1400327de:	push   r15
   1400327e0:	sub    rsp,0x40
   1400327e4:	mov    esi,ecx
   1400327e6:	and    DWORD PTR [rax-0x34],0x0
   1400327ea:	and    DWORD PTR [rax-0x38],0x0
   1400327ee:	mov    ecx,0x8
   1400327f3:	call   0x140035a44
   1400327f8:	nop
   1400327f9:	mov    rdi,QWORD PTR [rip+0x440e0]        # 0x1400768e0
   140032800:	movsxd rax,DWORD PTR [rip+0x440d1]        # 0x1400768d8
   140032807:	lea    r14,[rdi+rax*8]
   14003280b:	or     r15d,0xffffffff
   14003280f:	mov    QWORD PTR [rsp+0x28],rdi
   140032814:	cmp    rdi,r14
   140032817:	je     0x14003288a
   140032819:	mov    rbx,QWORD PTR [rdi]
   14003281c:	mov    QWORD PTR [rsp+0x68],rbx
   140032821:	mov    QWORD PTR [rsp+0x30],rbx
   140032826:	test   rbx,rbx
   140032829:	jne    0x14003282d
   14003282b:	jmp    0x140032884
   14003282d:	mov    rcx,rbx
   140032830:	call   0x140032b80
   140032835:	nop
   140032836:	mov    eax,DWORD PTR [rbx+0x14]
   140032839:	shr    eax,0xd
   14003283c:	test   al,0x1
   14003283e:	je     0x14003287c
   140032840:	cmp    esi,0x1
   140032843:	jne    0x140032858
   140032845:	mov    rcx,rbx
   140032848:	call   0x140032778
   14003284d:	cmp    eax,r15d
   140032850:	je     0x14003287c
   140032852:	inc    DWORD PTR [rsp+0x24]
   140032856:	jmp    0x14003287c
   140032858:	test   esi,esi
   14003285a:	jne    0x14003287c
   14003285c:	mov    eax,DWORD PTR [rbx+0x14]
   14003285f:	shr    eax,1
   140032861:	test   al,0x1
   140032863:	je     0x14003287c
   140032865:	mov    rcx,rbx
   140032868:	call   0x140032778
   14003286d:	mov    edx,DWORD PTR [rsp+0x20]
   140032871:	cmp    eax,r15d
   140032874:	cmove  edx,r15d
   140032878:	mov    DWORD PTR [rsp+0x20],edx
   14003287c:	mov    rcx,rbx
   14003287f:	call   0x140032b8c
   140032884:	add    rdi,0x8
   140032888:	jmp    0x14003280f
   14003288a:	mov    ecx,0x8
   14003288f:	call   0x140035a98
   140032894:	mov    eax,DWORD PTR [rsp+0x20]
   140032898:	cmp    esi,0x1
   14003289b:	cmove  eax,DWORD PTR [rsp+0x24]
   1400328a0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400328a5:	mov    rsi,QWORD PTR [rsp+0x70]
   1400328aa:	add    rsp,0x40
   1400328ae:	pop    r15
   1400328b0:	pop    r14
   1400328b2:	pop    rdi
   1400328b3:	ret    
   1400328b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400328b9:	mov    QWORD PTR [rsp+0x8],rcx
   1400328be:	push   rdi
   1400328bf:	sub    rsp,0x20
   1400328c3:	mov    rbx,rcx
   1400328c6:	test   rcx,rcx
   1400328c9:	jne    0x1400328d2
   1400328cb:	call   0x1400327d0
   1400328d0:	jmp    0x1400328ec
   1400328d2:	call   0x140032b80
   1400328d7:	nop
   1400328d8:	mov    rcx,rbx
   1400328db:	call   0x140032778
   1400328e0:	mov    edi,eax
   1400328e2:	mov    rcx,rbx
   1400328e5:	call   0x140032b8c
   1400328ea:	mov    eax,edi
   1400328ec:	mov    rbx,QWORD PTR [rsp+0x38]
   1400328f1:	add    rsp,0x20
   1400328f5:	pop    rdi
   1400328f6:	ret    
   1400328f7:	int3   
   1400328f8:	xor    eax,eax
   1400328fa:	mov    r11,r8
   1400328fd:	mov    r10,rdx
   140032900:	test   rcx,rcx
   140032903:	jne    0x140032935
   140032905:	mov    rcx,QWORD PTR [r8]
   140032908:	jmp    0x140032935
   14003290a:	mov    r8,r10
   14003290d:	cmp    WORD PTR [r10],ax
   140032911:	je     0x14003292b
   140032913:	movzx  r9d,WORD PTR [r10]
   140032917:	cmp    r9w,dx
   14003291b:	je     0x14003292b
   14003291d:	add    r8,0x2
   140032921:	movzx  r9d,WORD PTR [r8]
   140032925:	test   r9w,r9w
   140032929:	jne    0x140032917
   14003292b:	cmp    WORD PTR [r8],ax
   14003292f:	je     0x14003293d
   140032931:	add    rcx,0x2
   140032935:	movzx  edx,WORD PTR [rcx]
   140032938:	test   dx,dx
   14003293b:	jne    0x14003290a
   14003293d:	mov    r9,rcx
   140032940:	jmp    0x14003296c
   140032942:	mov    rdx,r10
   140032945:	cmp    WORD PTR [r10],ax
   140032949:	je     0x140032963
   14003294b:	movzx  r8d,WORD PTR [r10]
   14003294f:	cmp    r8w,WORD PTR [rcx]
   140032953:	je     0x140032963
   140032955:	add    rdx,0x2
   140032959:	movzx  r8d,WORD PTR [rdx]
   14003295d:	test   r8w,r8w
   140032961:	jne    0x14003294f
   140032963:	cmp    WORD PTR [rdx],ax
   140032966:	jne    0x140032973
   140032968:	add    rcx,0x2
   14003296c:	cmp    WORD PTR [rcx],ax
   14003296f:	jne    0x140032942
   140032971:	jmp    0x14003297a
   140032973:	mov    WORD PTR [rcx],ax
   140032976:	add    rcx,0x2
   14003297a:	cmp    rcx,r9
   14003297d:	mov    QWORD PTR [r11],rcx
   140032980:	cmovne rax,r9
   140032984:	ret    
   140032985:	int3   
   140032986:	int3   
   140032987:	int3   
   140032988:	sub    rsp,0x28
   14003298c:	test   r8,r8
   14003298f:	jne    0x1400329a8
   140032991:	call   0x140032c50
   140032996:	mov    DWORD PTR [rax],0x16
   14003299c:	call   0x1400307d0
   1400329a1:	xor    eax,eax
   1400329a3:	add    rsp,0x28
   1400329a7:	ret    
   1400329a8:	test   rdx,rdx
   1400329ab:	je     0x140032991
   1400329ad:	test   rcx,rcx
   1400329b0:	jne    0x1400329b7
   1400329b2:	cmp    QWORD PTR [r8],rcx
   1400329b5:	je     0x140032991
   1400329b7:	add    rsp,0x28
   1400329bb:	jmp    0x1400328f8
   1400329c0:	sub    rsp,0x28
   1400329c4:	mov    r8d,0x2
   1400329ca:	call   QWORD PTR [rip+0x18900]        # 0x14004b2d0
   1400329d0:	test   eax,eax
   1400329d2:	jne    0x1400329e6
   1400329d4:	call   QWORD PTR [rip+0x18706]        # 0x14004b0e0
   1400329da:	mov    ecx,eax
   1400329dc:	call   0x140032be0
   1400329e1:	or     eax,0xffffffff
   1400329e4:	jmp    0x1400329e8
   1400329e6:	xor    eax,eax
   1400329e8:	add    rsp,0x28
   1400329ec:	ret    
   1400329ed:	int3   
   1400329ee:	int3   
   1400329ef:	int3   
   1400329f0:	mov    rax,rsp
   1400329f3:	mov    QWORD PTR [rax+0x8],rbx
   1400329f7:	mov    QWORD PTR [rax+0x10],rbp
   1400329fb:	mov    QWORD PTR [rax+0x18],rsi
   1400329ff:	mov    QWORD PTR [rax+0x20],rdi
   140032a03:	push   r14
   140032a05:	sub    rsp,0x20
   140032a09:	mov    eax,DWORD PTR [rip+0x43ec9]        # 0x1400768d8
   140032a0f:	xor    ebx,ebx
   140032a11:	mov    edi,0x3
   140032a16:	test   eax,eax
   140032a18:	jne    0x140032a21
   140032a1a:	mov    eax,0x200
   140032a1f:	jmp    0x140032a26
   140032a21:	cmp    eax,edi
   140032a23:	cmovl  eax,edi
   140032a26:	movsxd rcx,eax
   140032a29:	mov    edx,0x8
   140032a2e:	mov    DWORD PTR [rip+0x43ea4],eax        # 0x1400768d8
   140032a34:	call   0x140035d88
   140032a39:	xor    ecx,ecx
   140032a3b:	mov    QWORD PTR [rip+0x43e9e],rax        # 0x1400768e0
   140032a42:	call   0x140038c70
   140032a47:	cmp    QWORD PTR [rip+0x43e92],rbx        # 0x1400768e0
   140032a4e:	jne    0x140032a7f
   140032a50:	mov    edx,0x8
   140032a55:	mov    DWORD PTR [rip+0x43e7d],edi        # 0x1400768d8
   140032a5b:	mov    rcx,rdi
   140032a5e:	call   0x140035d88
   140032a63:	xor    ecx,ecx
   140032a65:	mov    QWORD PTR [rip+0x43e74],rax        # 0x1400768e0
   140032a6c:	call   0x140038c70
   140032a71:	cmp    QWORD PTR [rip+0x43e68],rbx        # 0x1400768e0
   140032a78:	jne    0x140032a7f
   140032a7a:	or     eax,0xffffffff
   140032a7d:	jmp    0x140032af4
   140032a7f:	mov    r14,rbx
   140032a82:	lea    rsi,[rip+0x3e74f]        # 0x1400711d8
   140032a89:	lea    rbp,[rip+0x3e730]        # 0x1400711c0
   140032a90:	lea    rcx,[rbp+0x30]
   140032a94:	xor    r8d,r8d
   140032a97:	mov    edx,0xfa0
   140032a9c:	call   0x14003d288
   140032aa1:	mov    rax,QWORD PTR [rip+0x43e38]        # 0x1400768e0
   140032aa8:	lea    rdx,[rip+0x44211]        # 0x140076cc0
   140032aaf:	mov    rcx,rbx
   140032ab2:	and    ecx,0x3f
   140032ab5:	shl    rcx,0x6
   140032ab9:	mov    QWORD PTR [r14+rax*1],rbp
   140032abd:	mov    rax,rbx
   140032ac0:	sar    rax,0x6
   140032ac4:	mov    rax,QWORD PTR [rdx+rax*8]
   140032ac8:	mov    rcx,QWORD PTR [rax+rcx*1+0x28]
   140032acd:	add    rcx,0x2
   140032ad1:	cmp    rcx,0x2
   140032ad5:	ja     0x140032add
   140032ad7:	mov    DWORD PTR [rsi],0xfffffffe
   140032add:	inc    rbx
   140032ae0:	add    rbp,0x58
   140032ae4:	add    r14,0x8
   140032ae8:	add    rsi,0x58
   140032aec:	sub    rdi,0x1
   140032af0:	jne    0x140032a90
   140032af2:	xor    eax,eax
   140032af4:	mov    rbx,QWORD PTR [rsp+0x30]
   140032af9:	mov    rbp,QWORD PTR [rsp+0x38]
   140032afe:	mov    rsi,QWORD PTR [rsp+0x40]
   140032b03:	mov    rdi,QWORD PTR [rsp+0x48]
   140032b08:	add    rsp,0x20
   140032b0c:	pop    r14
   140032b0e:	ret    
   140032b0f:	int3   
   140032b10:	mov    eax,ecx
   140032b12:	lea    rcx,[rip+0x3e6a7]        # 0x1400711c0
   140032b19:	imul   rax,rax,0x58
   140032b1d:	add    rax,rcx
   140032b20:	ret    
   140032b21:	int3   
   140032b22:	int3   
   140032b23:	int3   
   140032b24:	rex push rbx
   140032b26:	sub    rsp,0x20
   140032b2a:	call   0x1400327c4
   140032b2f:	call   0x14003d680
   140032b34:	xor    ebx,ebx
   140032b36:	mov    rcx,QWORD PTR [rip+0x43da3]        # 0x1400768e0
   140032b3d:	mov    rcx,QWORD PTR [rbx+rcx*1]
   140032b41:	call   0x14003c128
   140032b46:	mov    rax,QWORD PTR [rip+0x43d93]        # 0x1400768e0
   140032b4d:	mov    rcx,QWORD PTR [rbx+rax*1]
   140032b51:	add    rcx,0x30
   140032b55:	call   QWORD PTR [rip+0x184fd]        # 0x14004b058
   140032b5b:	add    rbx,0x8
   140032b5f:	cmp    rbx,0x18
   140032b63:	jne    0x140032b36
   140032b65:	mov    rcx,QWORD PTR [rip+0x43d74]        # 0x1400768e0
   140032b6c:	call   0x140038c70
   140032b71:	and    QWORD PTR [rip+0x43d67],0x0        # 0x1400768e0
   140032b79:	add    rsp,0x20
   140032b7d:	pop    rbx
   140032b7e:	ret    
   140032b7f:	int3   
   140032b80:	add    rcx,0x30
   140032b84:	rex.W jmp QWORD PTR [rip+0x18595]        # 0x14004b120
   140032b8b:	int3   
   140032b8c:	add    rcx,0x30
   140032b90:	rex.W jmp QWORD PTR [rip+0x184d1]        # 0x14004b068
   140032b97:	int3   
   140032b98:	xor    eax,eax
   140032b9a:	lea    r9,[rip+0x21cbf]        # 0x140054860
   140032ba1:	mov    rdx,r9
   140032ba4:	lea    r8d,[rax+0x8]
   140032ba8:	cmp    ecx,DWORD PTR [rdx]
   140032baa:	je     0x140032bd7
   140032bac:	inc    eax
   140032bae:	add    rdx,r8
   140032bb1:	cmp    eax,0x2d
   140032bb4:	jb     0x140032ba8
   140032bb6:	lea    eax,[rcx-0x13]
   140032bb9:	cmp    eax,0x11
   140032bbc:	ja     0x140032bc4
   140032bbe:	mov    eax,0xd
   140032bc3:	ret    
   140032bc4:	add    ecx,0xffffff44
   140032bca:	mov    eax,0x16
   140032bcf:	cmp    ecx,0xe
   140032bd2:	cmovbe eax,r8d
   140032bd6:	ret    
   140032bd7:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140032bdc:	ret    
   140032bdd:	int3   
   140032bde:	int3   
   140032bdf:	int3   
   140032be0:	mov    QWORD PTR [rsp+0x8],rbx
   140032be5:	push   rdi
   140032be6:	sub    rsp,0x20
   140032bea:	mov    edi,ecx
   140032bec:	call   0x1400391c4
   140032bf1:	test   rax,rax
   140032bf4:	jne    0x140032bff
   140032bf6:	lea    rax,[rip+0x3e6cf]        # 0x1400712cc
   140032bfd:	jmp    0x140032c03
   140032bff:	add    rax,0x24
   140032c03:	mov    DWORD PTR [rax],edi
   140032c05:	call   0x1400391c4
   140032c0a:	lea    rbx,[rip+0x3e6b7]        # 0x1400712c8
   140032c11:	test   rax,rax
   140032c14:	je     0x140032c1a
   140032c16:	lea    rbx,[rax+0x20]
   140032c1a:	mov    ecx,edi
   140032c1c:	call   0x140032b98
   140032c21:	mov    DWORD PTR [rbx],eax
   140032c23:	mov    rbx,QWORD PTR [rsp+0x30]
   140032c28:	add    rsp,0x20
   140032c2c:	pop    rdi
   140032c2d:	ret    
   140032c2e:	int3   
   140032c2f:	int3   
   140032c30:	sub    rsp,0x28
   140032c34:	call   0x1400391c4
   140032c39:	test   rax,rax
   140032c3c:	jne    0x140032c47
   140032c3e:	lea    rax,[rip+0x3e687]        # 0x1400712cc
   140032c45:	jmp    0x140032c4b
   140032c47:	add    rax,0x24
   140032c4b:	add    rsp,0x28
   140032c4f:	ret    
   140032c50:	sub    rsp,0x28
   140032c54:	call   0x1400391c4
   140032c59:	test   rax,rax
   140032c5c:	jne    0x140032c67
   140032c5e:	lea    rax,[rip+0x3e663]        # 0x1400712c8
   140032c65:	jmp    0x140032c6b
   140032c67:	add    rax,0x20
   140032c6b:	add    rsp,0x28
   140032c6f:	ret    
   140032c70:	movzx  r9d,WORD PTR [rdx]
   140032c74:	xor    eax,eax
   140032c76:	movzx  r8d,WORD PTR [rcx]
   140032c7a:	sub    r8d,r9d
   140032c7d:	jne    0x140032c9a
   140032c7f:	sub    rcx,rdx
   140032c82:	test   r9w,r9w
   140032c86:	je     0x140032c9a
   140032c88:	add    rdx,0x2
   140032c8c:	movzx  r9d,WORD PTR [rdx]
   140032c90:	movzx  r8d,WORD PTR [rcx+rdx*1]
   140032c95:	sub    r8d,r9d
   140032c98:	je     0x140032c82
   140032c9a:	test   r8d,r8d
   140032c9d:	jns    0x140032ca3
   140032c9f:	or     eax,0xffffffff
   140032ca2:	ret    
   140032ca3:	setg   al
   140032ca6:	ret    
   140032ca7:	int3   
   140032ca8:	rex push rbp
   140032caa:	sub    rsp,0x20
   140032cae:	lea    rbp,[rsp+0x20]
   140032cb3:	and    rbp,0xffffffffffffffe0
   140032cb7:	mov    eax,DWORD PTR [rip+0x3e3a3]        # 0x140071060
   140032cbd:	mov    r9,rcx
   140032cc0:	cmp    eax,0x5
   140032cc3:	jl     0x140032d55
   140032cc9:	mov    r8,rcx
   140032ccc:	mov    eax,0x20
   140032cd1:	and    r8d,0x1f
   140032cd5:	sub    rax,r8
   140032cd8:	neg    r8
   140032cdb:	sbb    r10,r10
   140032cde:	and    r10,rax
   140032ce1:	cmp    rdx,r10
   140032ce4:	cmovb  r10,rdx
   140032ce8:	lea    rax,[r10+rcx*1]
   140032cec:	jmp    0x140032cf6
   140032cee:	cmp    BYTE PTR [rcx],0x0
   140032cf1:	je     0x140032cfb
   140032cf3:	inc    rcx
   140032cf6:	cmp    rcx,rax
   140032cf9:	jne    0x140032cee
   140032cfb:	sub    rcx,r9
   140032cfe:	cmp    rcx,r10
   140032d01:	jne    0x140032df8
   140032d07:	mov    r8,rdx
   140032d0a:	add    rcx,r9
   140032d0d:	sub    r8,r10
   140032d10:	mov    rax,r8
   140032d13:	and    eax,0x1f
   140032d16:	sub    r8,rax
   140032d19:	add    r8,rcx
   140032d1c:	vxorps ymm2,ymm2,ymm2
   140032d20:	jmp    0x140032d32
   140032d22:	vpcmpeqb ymm1,ymm2,YMMWORD PTR [rcx]
   140032d26:	vpmovmskb eax,ymm1
   140032d2a:	test   eax,eax
   140032d2c:	jne    0x140032d37
   140032d2e:	add    rcx,0x20
   140032d32:	cmp    rcx,r8
   140032d35:	jne    0x140032d22
   140032d37:	lea    rax,[r9+rdx*1]
   140032d3b:	jmp    0x140032d45
   140032d3d:	cmp    BYTE PTR [rcx],0x0
   140032d40:	je     0x140032d4a
   140032d42:	inc    rcx
   140032d45:	cmp    rcx,rax
   140032d48:	jne    0x140032d3d
   140032d4a:	sub    rcx,r9
   140032d4d:	vzeroupper 
   140032d50:	jmp    0x140032df8
   140032d55:	cmp    eax,0x1
   140032d58:	jl     0x140032de2
   140032d5e:	and    ecx,0xf
   140032d61:	mov    eax,0x10
   140032d66:	sub    rax,rcx
   140032d69:	neg    rcx
   140032d6c:	mov    rcx,r9
   140032d6f:	sbb    r10,r10
   140032d72:	and    r10,rax
   140032d75:	cmp    rdx,r10
   140032d78:	cmovb  r10,rdx
   140032d7c:	lea    rax,[r10+r9*1]
   140032d80:	cmp    r9,rax
   140032d83:	je     0x140032d92
   140032d85:	cmp    BYTE PTR [rcx],0x0
   140032d88:	je     0x140032d92
   140032d8a:	inc    rcx
   140032d8d:	cmp    rcx,rax
   140032d90:	jne    0x140032d85
   140032d92:	sub    rcx,r9
   140032d95:	cmp    rcx,r10
   140032d98:	jne    0x140032df8
   140032d9a:	mov    r8,rdx
   140032d9d:	add    rcx,r9
   140032da0:	sub    r8,r10
   140032da3:	xorps  xmm1,xmm1
   140032da6:	mov    rax,r8
   140032da9:	and    eax,0xf
   140032dac:	sub    r8,rax
   140032daf:	add    r8,rcx
   140032db2:	jmp    0x140032dc8
   140032db4:	movdqa xmm0,xmm1
   140032db8:	pcmpeqb xmm0,XMMWORD PTR [rcx]
   140032dbc:	pmovmskb eax,xmm0
   140032dc0:	test   eax,eax
   140032dc2:	jne    0x140032dcd
   140032dc4:	add    rcx,0x10
   140032dc8:	cmp    rcx,r8
   140032dcb:	jne    0x140032db4
   140032dcd:	lea    rax,[r9+rdx*1]
   140032dd1:	jmp    0x140032ddb
   140032dd3:	cmp    BYTE PTR [rcx],0x0
   140032dd6:	je     0x140032df5
   140032dd8:	inc    rcx
   140032ddb:	cmp    rcx,rax
   140032dde:	jne    0x140032dd3
   140032de0:	jmp    0x140032df5
   140032de2:	lea    rax,[rcx+rdx*1]
   140032de6:	jmp    0x140032df0
   140032de8:	cmp    BYTE PTR [rcx],0x0
   140032deb:	je     0x140032df5
   140032ded:	inc    rcx
   140032df0:	cmp    rcx,rax
   140032df3:	jne    0x140032de8
   140032df5:	sub    rcx,r9
   140032df8:	mov    rax,rcx
   140032dfb:	add    rsp,0x20
   140032dff:	pop    rbp
   140032e00:	ret    
   140032e01:	int3   
   140032e02:	int3   
   140032e03:	int3   
   140032e04:	rex push rbp
   140032e06:	sub    rsp,0x20
   140032e0a:	lea    rbp,[rsp+0x20]
   140032e0f:	and    rbp,0xffffffffffffffe0
   140032e13:	mov    eax,DWORD PTR [rip+0x3e247]        # 0x140071060
   140032e19:	mov    r10,rdx
   140032e1c:	mov    r8,rcx
   140032e1f:	cmp    eax,0x5
   140032e22:	jl     0x140032ef8
   140032e28:	test   cl,0x1
   140032e2b:	je     0x140032e58
   140032e2d:	lea    rax,[rcx+rdx*2]
   140032e31:	mov    rdx,rcx
   140032e34:	cmp    rcx,rax
   140032e37:	je     0x140032fe5
   140032e3d:	xor    r9d,r9d
   140032e40:	cmp    WORD PTR [rdx],r9w
   140032e44:	je     0x140032fe5
   140032e4a:	add    rdx,0x2
   140032e4e:	cmp    rdx,rax
   140032e51:	jne    0x140032e40
   140032e53:	jmp    0x140032fe5
   140032e58:	and    ecx,0x1f
   140032e5b:	mov    eax,0x20
   140032e60:	sub    rax,rcx
   140032e63:	neg    rcx
   140032e66:	sbb    r11,r11
   140032e69:	and    r11,rax
   140032e6c:	shr    r11,1
   140032e6f:	cmp    rdx,r11
   140032e72:	cmovb  r11,rdx
   140032e76:	xor    r9d,r9d
   140032e79:	mov    rdx,r8
   140032e7c:	lea    rax,[r8+r11*2]
   140032e80:	cmp    r8,rax
   140032e83:	je     0x140032e94
   140032e85:	cmp    WORD PTR [rdx],r9w
   140032e89:	je     0x140032e94
   140032e8b:	add    rdx,0x2
   140032e8f:	cmp    rdx,rax
   140032e92:	jne    0x140032e85
   140032e94:	sub    rdx,r8
   140032e97:	sar    rdx,1
   140032e9a:	cmp    rdx,r11
   140032e9d:	jne    0x140032feb
   140032ea3:	mov    rcx,r10
   140032ea6:	lea    rdx,[r8+rdx*2]
   140032eaa:	sub    rcx,r11
   140032ead:	mov    rax,rcx
   140032eb0:	and    eax,0x1f
   140032eb3:	sub    rcx,rax
   140032eb6:	vxorps ymm2,ymm2,ymm2
   140032eba:	lea    r11,[rdx+rcx*2]
   140032ebe:	jmp    0x140032ed0
   140032ec0:	vpcmpeqw ymm1,ymm2,YMMWORD PTR [rdx]
   140032ec4:	vpmovmskb eax,ymm1
   140032ec8:	test   eax,eax
   140032eca:	jne    0x140032ed5
   140032ecc:	add    rdx,0x20
   140032ed0:	cmp    rdx,r11
   140032ed3:	jne    0x140032ec0
   140032ed5:	lea    rax,[r8+r10*2]
   140032ed9:	jmp    0x140032ee5
   140032edb:	cmp    WORD PTR [rdx],r9w
   140032edf:	je     0x140032eea
   140032ee1:	add    rdx,0x2
   140032ee5:	cmp    rdx,rax
   140032ee8:	jne    0x140032edb
   140032eea:	sub    rdx,r8
   140032eed:	sar    rdx,1
   140032ef0:	vzeroupper 
   140032ef3:	jmp    0x140032feb
   140032ef8:	cmp    eax,0x1
   140032efb:	jl     0x140032fc7
   140032f01:	test   cl,0x1
   140032f04:	je     0x140032f31
   140032f06:	lea    rax,[rcx+rdx*2]
   140032f0a:	mov    rdx,rcx
   140032f0d:	cmp    rcx,rax
   140032f10:	je     0x140032fe5
   140032f16:	xor    r9d,r9d
   140032f19:	cmp    WORD PTR [rdx],r9w
   140032f1d:	je     0x140032fe5
   140032f23:	add    rdx,0x2
   140032f27:	cmp    rdx,rax
   140032f2a:	jne    0x140032f19
   140032f2c:	jmp    0x140032fe5
   140032f31:	and    ecx,0xf
   140032f34:	mov    eax,0x10
   140032f39:	sub    rax,rcx
   140032f3c:	neg    rcx
   140032f3f:	sbb    r11,r11
   140032f42:	and    r11,rax
   140032f45:	shr    r11,1
   140032f48:	cmp    rdx,r11
   140032f4b:	cmovb  r11,rdx
   140032f4f:	xor    r9d,r9d
   140032f52:	mov    rdx,r8
   140032f55:	lea    rax,[r8+r11*2]
   140032f59:	cmp    r8,rax
   140032f5c:	je     0x140032f6d
   140032f5e:	cmp    WORD PTR [rdx],r9w
   140032f62:	je     0x140032f6d
   140032f64:	add    rdx,0x2
   140032f68:	cmp    rdx,rax
   140032f6b:	jne    0x140032f5e
   140032f6d:	sub    rdx,r8
   140032f70:	sar    rdx,1
   140032f73:	cmp    rdx,r11
   140032f76:	jne    0x140032feb
   140032f78:	mov    rcx,r10
   140032f7b:	lea    rdx,[r8+rdx*2]
   140032f7f:	sub    rcx,r11
   140032f82:	xorps  xmm1,xmm1
   140032f85:	mov    rax,rcx
   140032f88:	and    eax,0xf
   140032f8b:	sub    rcx,rax
   140032f8e:	lea    r11,[rdx+rcx*2]
   140032f92:	jmp    0x140032fa8
   140032f94:	movdqa xmm0,xmm1
   140032f98:	pcmpeqw xmm0,XMMWORD PTR [rdx]
   140032f9c:	pmovmskb eax,xmm0
   140032fa0:	test   eax,eax
   140032fa2:	jne    0x140032fad
   140032fa4:	add    rdx,0x10
   140032fa8:	cmp    rdx,r11
   140032fab:	jne    0x140032f94
   140032fad:	lea    rax,[r8+r10*2]
   140032fb1:	jmp    0x140032fbd
   140032fb3:	cmp    WORD PTR [rdx],r9w
   140032fb7:	je     0x140032fc2
   140032fb9:	add    rdx,0x2
   140032fbd:	cmp    rdx,rax
   140032fc0:	jne    0x140032fb3
   140032fc2:	sub    rdx,r8
   140032fc5:	jmp    0x140032fe8
   140032fc7:	lea    rax,[rcx+rdx*2]
   140032fcb:	mov    rdx,rcx
   140032fce:	cmp    rcx,rax
   140032fd1:	je     0x140032fe5
   140032fd3:	xor    r9d,r9d
   140032fd6:	cmp    WORD PTR [rdx],r9w
   140032fda:	je     0x140032fe5
   140032fdc:	add    rdx,0x2
   140032fe0:	cmp    rdx,rax
   140032fe3:	jne    0x140032fd6
   140032fe5:	sub    rdx,rcx
   140032fe8:	sar    rdx,1
   140032feb:	mov    rax,rdx
   140032fee:	add    rsp,0x20
   140032ff2:	pop    rbp
   140032ff3:	ret    
   140032ff4:	jmp    0x140036600
   140032ff9:	int3   
   140032ffa:	int3   
   140032ffb:	int3   
   140032ffc:	int3   
   140032ffd:	int3   
   140032ffe:	int3   
   140032fff:	int3   
   140033000:	int3   
   140033001:	int3   
   140033002:	int3   
   140033003:	int3   
   140033004:	int3   
   140033005:	int3   
   140033006:	data16 nop WORD PTR [rax+rax*1+0x0]
   140033010:	sub    rdx,rcx
   140033013:	test   r8,r8
   140033016:	je     0x140033082
   140033018:	test   ecx,0x7
   14003301e:	je     0x14003303d
   140033020:	movzx  eax,BYTE PTR [rcx]
   140033023:	cmp    al,BYTE PTR [rcx+rdx*1]
   140033026:	jne    0x140033085
   140033028:	inc    rcx
   14003302b:	dec    r8
   14003302e:	je     0x140033082
   140033030:	test   al,al
   140033032:	je     0x140033082
   140033034:	test   rcx,0x7
   14003303b:	jne    0x140033020
   14003303d:	movabs r11,0x8080808080808080
   140033047:	movabs r10,0xfefefefefefefeff
   140033051:	lea    eax,[rcx+rdx*1]
   140033054:	and    eax,0xfff
   140033059:	cmp    eax,0xff8
   14003305e:	ja     0x140033020
   140033060:	mov    rax,QWORD PTR [rcx]
   140033063:	cmp    rax,QWORD PTR [rcx+rdx*1]
   140033067:	jne    0x140033020
   140033069:	add    rcx,0x8
   14003306d:	sub    r8,0x8
   140033071:	jbe    0x140033082
   140033073:	lea    r9,[rax+r10*1]
   140033077:	not    rax
   14003307a:	and    rax,r9
   14003307d:	test   r11,rax
   140033080:	je     0x140033051
   140033082:	xor    eax,eax
   140033084:	ret    
   140033085:	sbb    rax,rax
   140033088:	or     rax,0x1
   14003308c:	ret    
   14003308d:	int3   
   14003308e:	int3   
   14003308f:	int3   
   140033090:	mov    QWORD PTR [rip+0x43859],rcx        # 0x1400768f0
   140033097:	ret    
   140033098:	mov    QWORD PTR [rsp+0x8],rbx
   14003309d:	push   rdi
   14003309e:	sub    rsp,0x20
   1400330a2:	mov    rdi,rcx
   1400330a5:	call   0x1400330d8
   1400330aa:	mov    rbx,rax
   1400330ad:	test   rax,rax
   1400330b0:	je     0x1400330cb
   1400330b2:	mov    rcx,rax
   1400330b5:	call   QWORD PTR [rip+0x1839d]        # 0x14004b458
   1400330bb:	mov    rcx,rdi
   1400330be:	call   rbx
   1400330c0:	test   eax,eax
   1400330c2:	je     0x1400330cb
   1400330c4:	mov    eax,0x1
   1400330c9:	jmp    0x1400330cd
   1400330cb:	xor    eax,eax
   1400330cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400330d2:	add    rsp,0x20
   1400330d6:	pop    rdi
   1400330d7:	ret    
   1400330d8:	rex push rbx
   1400330da:	sub    rsp,0x20
   1400330de:	xor    ecx,ecx
   1400330e0:	call   0x140035a44
   1400330e5:	nop
   1400330e6:	mov    rbx,QWORD PTR [rip+0x3df63]        # 0x140071050
   1400330ed:	mov    ecx,ebx
   1400330ef:	and    ecx,0x3f
   1400330f2:	xor    rbx,QWORD PTR [rip+0x437f7]        # 0x1400768f0
   1400330f9:	ror    rbx,cl
   1400330fc:	xor    ecx,ecx
   1400330fe:	call   0x140035a98
   140033103:	mov    rax,rbx
   140033106:	add    rsp,0x20
   14003310a:	pop    rbx
   14003310b:	ret    
   14003310c:	mov    QWORD PTR [rsp+0x8],rbx
   140033111:	mov    QWORD PTR [rsp+0x10],rbp
   140033116:	mov    QWORD PTR [rsp+0x18],rsi
   14003311b:	push   rdi
   14003311c:	sub    rsp,0x20
   140033120:	mov    rsi,rdx
   140033123:	mov    edi,ecx
   140033125:	call   0x1400391c4
   14003312a:	xor    r8d,r8d
   14003312d:	mov    rbx,rax
   140033130:	test   rax,rax
   140033133:	jne    0x14003313c
   140033135:	xor    eax,eax
   140033137:	jmp    0x140033284
   14003313c:	mov    rcx,QWORD PTR [rax]
   14003313f:	mov    rax,rcx
   140033142:	lea    rdx,[rcx+0xc0]
   140033149:	cmp    rcx,rdx
   14003314c:	je     0x14003315b
   14003314e:	cmp    DWORD PTR [rax],edi
   140033150:	je     0x14003315e
   140033152:	add    rax,0x10
   140033156:	cmp    rax,rdx
   140033159:	jne    0x14003314e
   14003315b:	mov    rax,r8
   14003315e:	test   rax,rax
   140033161:	je     0x140033135
   140033163:	mov    rdi,QWORD PTR [rax+0x8]
   140033167:	test   rdi,rdi
   14003316a:	je     0x140033135
   14003316c:	cmp    rdi,0x5
   140033170:	jne    0x14003317e
   140033172:	mov    QWORD PTR [rax+0x8],r8
   140033176:	lea    eax,[rdi-0x4]
   140033179:	jmp    0x140033284
   14003317e:	cmp    rdi,0x1
   140033182:	je     0x140033281
   140033188:	mov    rbp,QWORD PTR [rbx+0x8]
   14003318c:	mov    QWORD PTR [rbx+0x8],rsi
   140033190:	mov    esi,DWORD PTR [rax+0x4]
   140033193:	cmp    esi,0x8
   140033196:	jne    0x14003326c
   14003319c:	add    rcx,0x30
   1400331a0:	lea    rdx,[rcx+0x90]
   1400331a7:	jmp    0x1400331b1
   1400331a9:	mov    QWORD PTR [rcx+0x8],r8
   1400331ad:	add    rcx,0x10
   1400331b1:	cmp    rcx,rdx
   1400331b4:	jne    0x1400331a9
   1400331b6:	cmp    DWORD PTR [rax],0xc000008d
   1400331bc:	mov    esi,DWORD PTR [rbx+0x10]
   1400331bf:	je     0x14003324d
   1400331c5:	cmp    DWORD PTR [rax],0xc000008e
   1400331cb:	je     0x140033244
   1400331cd:	cmp    DWORD PTR [rax],0xc000008f
   1400331d3:	je     0x14003323b
   1400331d5:	cmp    DWORD PTR [rax],0xc0000090
   1400331db:	je     0x140033232
   1400331dd:	cmp    DWORD PTR [rax],0xc0000091
   1400331e3:	je     0x140033229
   1400331e5:	cmp    DWORD PTR [rax],0xc0000092
   1400331eb:	je     0x140033220
   1400331ed:	cmp    DWORD PTR [rax],0xc0000093
   1400331f3:	je     0x140033217
   1400331f5:	cmp    DWORD PTR [rax],0xc00002b4
   1400331fb:	je     0x14003320e
   1400331fd:	cmp    DWORD PTR [rax],0xc00002b5
   140033203:	jne    0x140033254
   140033205:	mov    DWORD PTR [rbx+0x10],0x8d
   14003320c:	jmp    0x140033254
   14003320e:	mov    DWORD PTR [rbx+0x10],0x8e
   140033215:	jmp    0x140033254
   140033217:	mov    DWORD PTR [rbx+0x10],0x85
   14003321e:	jmp    0x140033254
   140033220:	mov    DWORD PTR [rbx+0x10],0x8a
   140033227:	jmp    0x140033254
   140033229:	mov    DWORD PTR [rbx+0x10],0x84
   140033230:	jmp    0x140033254
   140033232:	mov    DWORD PTR [rbx+0x10],0x81
   140033239:	jmp    0x140033254
   14003323b:	mov    DWORD PTR [rbx+0x10],0x86
   140033242:	jmp    0x140033254
   140033244:	mov    DWORD PTR [rbx+0x10],0x83
   14003324b:	jmp    0x140033254
   14003324d:	mov    DWORD PTR [rbx+0x10],0x82
   140033254:	mov    rcx,rdi
   140033257:	call   QWORD PTR [rip+0x181fb]        # 0x14004b458
   14003325d:	mov    edx,DWORD PTR [rbx+0x10]
   140033260:	mov    ecx,0x8
   140033265:	call   rdi
   140033267:	mov    DWORD PTR [rbx+0x10],esi
   14003326a:	jmp    0x14003327d
   14003326c:	mov    rcx,rdi
   14003326f:	mov    QWORD PTR [rax+0x8],r8
   140033273:	call   QWORD PTR [rip+0x181df]        # 0x14004b458
   140033279:	mov    ecx,esi
   14003327b:	call   rdi
   14003327d:	mov    QWORD PTR [rbx+0x8],rbp
   140033281:	or     eax,0xffffffff
   140033284:	mov    rbx,QWORD PTR [rsp+0x30]
   140033289:	mov    rbp,QWORD PTR [rsp+0x38]
   14003328e:	mov    rsi,QWORD PTR [rsp+0x40]
   140033293:	add    rsp,0x20
   140033297:	pop    rdi
   140033298:	ret    
   140033299:	int3   
   14003329a:	int3   
   14003329b:	int3   
   14003329c:	xor    eax,eax
   14003329e:	cmp    ecx,0xe06d7363
   1400332a4:	sete   al
   1400332a7:	ret    
   1400332a8:	mov    rax,rsp
   1400332ab:	mov    QWORD PTR [rax+0x8],rbx
   1400332af:	mov    QWORD PTR [rax+0x10],rsi
   1400332b3:	mov    QWORD PTR [rax+0x18],rdi
   1400332b7:	mov    QWORD PTR [rax+0x20],r14
   1400332bb:	push   r15
   1400332bd:	sub    rsp,0x20
   1400332c1:	mov    esi,r8d
   1400332c4:	mov    ebx,edx
   1400332c6:	mov    r14d,ecx
   1400332c9:	test   r8d,r8d
   1400332cc:	jne    0x140033318
   1400332ce:	xor    ecx,ecx
   1400332d0:	call   QWORD PTR [rip+0x17dd2]        # 0x14004b0a8
   1400332d6:	test   rax,rax
   1400332d9:	je     0x140033318
   1400332db:	mov    ecx,0x5a4d
   1400332e0:	cmp    WORD PTR [rax],cx
   1400332e3:	jne    0x140033318
   1400332e5:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400332e9:	add    rcx,rax
   1400332ec:	cmp    DWORD PTR [rcx],0x4550
   1400332f2:	jne    0x140033318
   1400332f4:	mov    eax,0x20b
   1400332f9:	cmp    WORD PTR [rcx+0x18],ax
   1400332fd:	jne    0x140033318
   1400332ff:	cmp    DWORD PTR [rcx+0x84],0xe
   140033306:	jbe    0x140033318
   140033308:	cmp    DWORD PTR [rcx+0xf8],esi
   14003330e:	je     0x140033318
   140033310:	mov    ecx,r14d
   140033313:	call   0x140033460
   140033318:	mov    ecx,0x2
   14003331d:	call   0x140035a44
   140033322:	nop
   140033323:	cmp    BYTE PTR [rip+0x435de],0x0        # 0x140076908
   14003332a:	jne    0x1400333e2
   140033330:	mov    r15d,0x1
   140033336:	mov    eax,r15d
   140033339:	xchg   DWORD PTR [rip+0x435b9],eax        # 0x1400768f8
   14003333f:	test   ebx,ebx
   140033341:	jne    0x14003338b
   140033343:	mov    rdi,QWORD PTR [rip+0x3dd06]        # 0x140071050
   14003334a:	mov    edx,edi
   14003334c:	and    edx,0x3f
   14003334f:	lea    ecx,[rbx+0x40]
   140033352:	sub    ecx,edx
   140033354:	xor    eax,eax
   140033356:	ror    rax,cl
   140033359:	xor    rax,rdi
   14003335c:	mov    rcx,QWORD PTR [rip+0x4359d]        # 0x140076900
   140033363:	cmp    rcx,rax
   140033366:	je     0x140033382
   140033368:	xor    rdi,rcx
   14003336b:	mov    ecx,edx
   14003336d:	ror    rdi,cl
   140033370:	mov    rcx,rdi
   140033373:	call   QWORD PTR [rip+0x180df]        # 0x14004b458
   140033379:	xor    r8d,r8d
   14003337c:	xor    edx,edx
   14003337e:	xor    ecx,ecx
   140033380:	call   rdi
   140033382:	lea    rcx,[rip+0x436af]        # 0x140076a38
   140033389:	jmp    0x140033397
   14003338b:	cmp    ebx,r15d
   14003338e:	jne    0x14003339d
   140033390:	lea    rcx,[rip+0x436b9]        # 0x140076a50
   140033397:	call   0x140034140
   14003339c:	nop
   14003339d:	test   ebx,ebx
   14003339f:	jne    0x1400333b4
   1400333a1:	lea    rdx,[rip+0x181a0]        # 0x14004b548
   1400333a8:	lea    rcx,[rip+0x18179]        # 0x14004b528
   1400333af:	call   0x14003447c
   1400333b4:	lea    rdx,[rip+0x1819d]        # 0x14004b558
   1400333bb:	lea    rcx,[rip+0x1818e]        # 0x14004b550
   1400333c2:	call   0x14003447c
   1400333c7:	movzx  eax,BYTE PTR [rip+0x4353a]        # 0x140076908
   1400333ce:	test   esi,esi
   1400333d0:	cmove  eax,r15d
   1400333d4:	mov    BYTE PTR [rip+0x4352e],al        # 0x140076908
   1400333da:	jmp    0x1400333e2
   1400333dc:	call   0x1400359d4
   1400333e1:	nop
   1400333e2:	mov    ecx,0x2
   1400333e7:	call   0x140035a98
   1400333ec:	test   esi,esi
   1400333ee:	jne    0x1400333f9
   1400333f0:	mov    ecx,r14d
   1400333f3:	call   0x140033414
   1400333f8:	int3   
   1400333f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400333fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140033403:	mov    rdi,QWORD PTR [rsp+0x40]
   140033408:	mov    r14,QWORD PTR [rsp+0x48]
   14003340d:	add    rsp,0x20
   140033411:	pop    r15
   140033413:	ret    
   140033414:	rex push rbx
   140033416:	sub    rsp,0x20
   14003341a:	mov    ebx,ecx
   14003341c:	call   0x14003d5b4
   140033421:	test   al,al
   140033423:	je     0x14003344d
   140033425:	mov    rax,QWORD PTR gs:0x60
   14003342e:	mov    edx,DWORD PTR [rax+0xbc]
   140033434:	shr    edx,0x8
   140033437:	test   dl,0x1
   14003343a:	jne    0x14003344d
   14003343c:	call   QWORD PTR [rip+0x17cf6]        # 0x14004b138
   140033442:	mov    rcx,rax
   140033445:	mov    edx,ebx
   140033447:	call   QWORD PTR [rip+0x17dcb]        # 0x14004b218
   14003344d:	mov    ecx,ebx
   14003344f:	call   0x140033460
   140033454:	mov    ecx,ebx
   140033456:	call   QWORD PTR [rip+0x17e7c]        # 0x14004b2d8
   14003345c:	int3   
   14003345d:	int3   
   14003345e:	int3   
   14003345f:	int3   
   140033460:	mov    QWORD PTR [rsp+0x8],rbx
   140033465:	push   rdi
   140033466:	sub    rsp,0x20
   14003346a:	and    QWORD PTR [rsp+0x38],0x0
   140033470:	lea    r8,[rsp+0x38]
   140033475:	mov    edi,ecx
   140033477:	lea    rdx,[rip+0x2162a]        # 0x140054aa8
   14003347e:	xor    ecx,ecx
   140033480:	call   QWORD PTR [rip+0x17cba]        # 0x14004b140
   140033486:	test   eax,eax
   140033488:	je     0x1400334b1
   14003348a:	mov    rcx,QWORD PTR [rsp+0x38]
   14003348f:	lea    rdx,[rip+0x2162a]        # 0x140054ac0
   140033496:	call   QWORD PTR [rip+0x17c2c]        # 0x14004b0c8
   14003349c:	mov    rbx,rax
   14003349f:	test   rax,rax
   1400334a2:	je     0x1400334b1
   1400334a4:	mov    rcx,rax
   1400334a7:	call   QWORD PTR [rip+0x17fab]        # 0x14004b458
   1400334ad:	mov    ecx,edi
   1400334af:	call   rbx
   1400334b1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400334b6:	test   rcx,rcx
   1400334b9:	je     0x1400334c1
   1400334bb:	call   QWORD PTR [rip+0x17bdf]        # 0x14004b0a0
   1400334c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400334c6:	add    rsp,0x20
   1400334ca:	pop    rdi
   1400334cb:	ret    
   1400334cc:	mov    QWORD PTR [rip+0x4342d],rcx        # 0x140076900
   1400334d3:	ret    
   1400334d4:	mov    edx,0x2
   1400334d9:	xor    ecx,ecx
   1400334db:	lea    r8d,[rdx-0x1]
   1400334df:	jmp    0x1400332a8
   1400334e4:	xor    edx,edx
   1400334e6:	xor    ecx,ecx
   1400334e8:	lea    r8d,[rdx+0x1]
   1400334ec:	jmp    0x1400332a8
   1400334f1:	int3   
   1400334f2:	int3   
   1400334f3:	int3   
   1400334f4:	xor    r8d,r8d
   1400334f7:	lea    edx,[r8+0x2]
   1400334fb:	jmp    0x1400332a8
   140033500:	sub    rsp,0x28
   140033504:	mov    r8,QWORD PTR [rip+0x3db45]        # 0x140071050
   14003350b:	mov    rdx,rcx
   14003350e:	mov    eax,r8d
   140033511:	mov    ecx,0x40
   140033516:	and    eax,0x3f
   140033519:	sub    ecx,eax
   14003351b:	xor    eax,eax
   14003351d:	ror    rax,cl
   140033520:	xor    rax,r8
   140033523:	cmp    QWORD PTR [rip+0x433d6],rax        # 0x140076900
   14003352a:	jne    0x14003353e
   14003352c:	ror    rdx,cl
   14003352f:	xor    rdx,r8
   140033532:	mov    QWORD PTR [rip+0x433c7],rdx        # 0x140076900
   140033539:	add    rsp,0x28
   14003353d:	ret    
   14003353e:	call   0x1400359d4
   140033543:	int3   
   140033544:	xor    r8d,r8d
   140033547:	xor    edx,edx
   140033549:	jmp    0x1400332a8
   14003354e:	int3   
   14003354f:	int3   
   140033550:	mov    rax,rsp
   140033553:	mov    QWORD PTR [rax+0x8],rbx
   140033557:	mov    QWORD PTR [rax+0x10],rbp
   14003355b:	mov    QWORD PTR [rax+0x18],rsi
   14003355f:	mov    QWORD PTR [rax+0x20],rdi
   140033563:	push   r12
   140033565:	push   r14
   140033567:	push   r15
   140033569:	sub    rsp,0x20
   14003356d:	mov    r15,QWORD PTR [rsp+0x60]
   140033572:	mov    r12,r9
   140033575:	mov    rdi,r8
   140033578:	mov    r14,rdx
   14003357b:	mov    rbx,rcx
   14003357e:	and    QWORD PTR [r15],0x0
   140033582:	mov    QWORD PTR [r9],0x1
   140033589:	test   rdx,rdx
   14003358c:	je     0x140033595
   14003358e:	mov    QWORD PTR [rdx],r8
   140033591:	add    r14,0x8
   140033595:	xor    bpl,bpl
   140033598:	cmp    BYTE PTR [rbx],0x22
   14003359b:	jne    0x1400335ac
   14003359d:	test   bpl,bpl
   1400335a0:	mov    sil,0x22
   1400335a3:	sete   bpl
   1400335a7:	inc    rbx
   1400335aa:	jmp    0x1400335e3
   1400335ac:	inc    QWORD PTR [r15]
   1400335af:	test   rdi,rdi
   1400335b2:	je     0x1400335bb
   1400335b4:	mov    al,BYTE PTR [rbx]
   1400335b6:	mov    BYTE PTR [rdi],al
   1400335b8:	inc    rdi
   1400335bb:	movsx  esi,BYTE PTR [rbx]
   1400335be:	inc    rbx
   1400335c1:	mov    ecx,esi
   1400335c3:	call   0x140036594
   1400335c8:	test   eax,eax
   1400335ca:	je     0x1400335de
   1400335cc:	inc    QWORD PTR [r15]
   1400335cf:	test   rdi,rdi
   1400335d2:	je     0x1400335db
   1400335d4:	mov    al,BYTE PTR [rbx]
   1400335d6:	mov    BYTE PTR [rdi],al
   1400335d8:	inc    rdi
   1400335db:	inc    rbx
   1400335de:	test   sil,sil
   1400335e1:	je     0x1400335ff
   1400335e3:	test   bpl,bpl
   1400335e6:	jne    0x140033598
   1400335e8:	cmp    sil,0x20
   1400335ec:	je     0x1400335f4
   1400335ee:	cmp    sil,0x9
   1400335f2:	jne    0x140033598
   1400335f4:	test   rdi,rdi
   1400335f7:	je     0x140033602
   1400335f9:	mov    BYTE PTR [rdi-0x1],0x0
   1400335fd:	jmp    0x140033602
   1400335ff:	dec    rbx
   140033602:	xor    sil,sil
   140033605:	cmp    BYTE PTR [rbx],0x0
   140033608:	je     0x1400336e0
   14003360e:	cmp    BYTE PTR [rbx],0x20
   140033611:	je     0x140033618
   140033613:	cmp    BYTE PTR [rbx],0x9
   140033616:	jne    0x14003361d
   140033618:	inc    rbx
   14003361b:	jmp    0x14003360e
   14003361d:	cmp    BYTE PTR [rbx],0x0
   140033620:	je     0x1400336e0
   140033626:	test   r14,r14
   140033629:	je     0x140033632
   14003362b:	mov    QWORD PTR [r14],rdi
   14003362e:	add    r14,0x8
   140033632:	inc    QWORD PTR [r12]
   140033636:	mov    edx,0x1
   14003363b:	xor    eax,eax
   14003363d:	jmp    0x140033644
   14003363f:	inc    rbx
   140033642:	inc    eax
   140033644:	cmp    BYTE PTR [rbx],0x5c
   140033647:	je     0x14003363f
   140033649:	cmp    BYTE PTR [rbx],0x22
   14003364c:	jne    0x14003367f
   14003364e:	test   dl,al
   140033650:	jne    0x14003366b
   140033652:	test   sil,sil
   140033655:	je     0x140033662
   140033657:	cmp    BYTE PTR [rbx+0x1],0x22
   14003365b:	jne    0x140033662
   14003365d:	inc    rbx
   140033660:	jmp    0x14003366b
   140033662:	xor    edx,edx
   140033664:	test   sil,sil
   140033667:	sete   sil
   14003366b:	shr    eax,1
   14003366d:	jmp    0x14003367f
   14003366f:	dec    eax
   140033671:	test   rdi,rdi
   140033674:	je     0x14003367c
   140033676:	mov    BYTE PTR [rdi],0x5c
   140033679:	inc    rdi
   14003367c:	inc    QWORD PTR [r15]
   14003367f:	test   eax,eax
   140033681:	jne    0x14003366f
   140033683:	mov    al,BYTE PTR [rbx]
   140033685:	test   al,al
   140033687:	je     0x1400336cd
   140033689:	test   sil,sil
   14003368c:	jne    0x140033696
   14003368e:	cmp    al,0x20
   140033690:	je     0x1400336cd
   140033692:	cmp    al,0x9
   140033694:	je     0x1400336cd
   140033696:	test   edx,edx
   140033698:	je     0x1400336c5
   14003369a:	test   rdi,rdi
   14003369d:	je     0x1400336a4
   14003369f:	mov    BYTE PTR [rdi],al
   1400336a1:	inc    rdi
   1400336a4:	movsx  ecx,BYTE PTR [rbx]
   1400336a7:	call   0x140036594
   1400336ac:	test   eax,eax
   1400336ae:	je     0x1400336c2
   1400336b0:	inc    QWORD PTR [r15]
   1400336b3:	inc    rbx
   1400336b6:	test   rdi,rdi
   1400336b9:	je     0x1400336c2
   1400336bb:	mov    al,BYTE PTR [rbx]
   1400336bd:	mov    BYTE PTR [rdi],al
   1400336bf:	inc    rdi
   1400336c2:	inc    QWORD PTR [r15]
   1400336c5:	inc    rbx
   1400336c8:	jmp    0x140033636
   1400336cd:	test   rdi,rdi
   1400336d0:	je     0x1400336d8
   1400336d2:	mov    BYTE PTR [rdi],0x0
   1400336d5:	inc    rdi
   1400336d8:	inc    QWORD PTR [r15]
   1400336db:	jmp    0x140033605
   1400336e0:	test   r14,r14
   1400336e3:	je     0x1400336e9
   1400336e5:	and    QWORD PTR [r14],0x0
   1400336e9:	inc    QWORD PTR [r12]
   1400336ed:	mov    rbx,QWORD PTR [rsp+0x40]
   1400336f2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400336f7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400336fc:	mov    rdi,QWORD PTR [rsp+0x58]
   140033701:	add    rsp,0x20
   140033705:	pop    r15
   140033707:	pop    r14
   140033709:	pop    r12
   14003370b:	ret    
   14003370c:	rex push rbx
   14003370e:	sub    rsp,0x20
   140033712:	movabs rax,0x1fffffffffffffff
   14003371c:	mov    r9,rdx
   14003371f:	mov    r10,rcx
   140033722:	cmp    rcx,rax
   140033725:	jb     0x14003372b
   140033727:	xor    eax,eax
   140033729:	jmp    0x140033767
   14003372b:	or     rcx,0xffffffffffffffff
   14003372f:	xor    edx,edx
   140033731:	mov    rax,rcx
   140033734:	div    r8
   140033737:	cmp    r9,rax
   14003373a:	jae    0x140033727
   14003373c:	shl    r10,0x3
   140033740:	imul   r9,r8
   140033744:	sub    rcx,r10
   140033747:	cmp    rcx,r9
   14003374a:	jbe    0x140033727
   14003374c:	lea    rcx,[r9+r10*1]
   140033750:	mov    edx,0x1
   140033755:	call   0x140035d88
   14003375a:	xor    ecx,ecx
   14003375c:	mov    rbx,rax
   14003375f:	call   0x140038c70
   140033764:	mov    rax,rbx
   140033767:	add    rsp,0x20
   14003376b:	pop    rbx
   14003376c:	ret    
   14003376d:	int3   
   14003376e:	int3   
   14003376f:	int3   
   140033770:	mov    QWORD PTR [rsp+0x8],rbx
   140033775:	push   rbp
   140033776:	push   rsi
   140033777:	push   rdi
   140033778:	push   r14
   14003377a:	push   r15
   14003377c:	mov    rbp,rsp
   14003377f:	sub    rsp,0x30
   140033783:	lea    eax,[rcx-0x1]
   140033786:	mov    r14d,ecx
   140033789:	cmp    eax,0x1
   14003378c:	jbe    0x1400337a4
   14003378e:	call   0x140032c50
   140033793:	mov    edi,0x16
   140033798:	mov    DWORD PTR [rax],edi
   14003379a:	call   0x1400307d0
   14003379f:	jmp    0x1400338d3
   1400337a4:	call   0x14003ed74
   1400337a9:	lea    rbx,[rip+0x43160]        # 0x140076910
   1400337b0:	mov    r8d,0x104
   1400337b6:	mov    rdx,rbx
   1400337b9:	xor    ecx,ecx
   1400337bb:	call   QWORD PTR [rip+0x17b1f]        # 0x14004b2e0
   1400337c1:	mov    rsi,QWORD PTR [rip+0x43af0]        # 0x1400772b8
   1400337c8:	xor    edi,edi
   1400337ca:	mov    QWORD PTR [rip+0x43af7],rbx        # 0x1400772c8
   1400337d1:	test   rsi,rsi
   1400337d4:	je     0x1400337db
   1400337d6:	cmp    BYTE PTR [rsi],dil
   1400337d9:	jne    0x1400337de
   1400337db:	mov    rsi,rbx
   1400337de:	lea    rax,[rbp+0x48]
   1400337e2:	mov    QWORD PTR [rbp+0x40],rdi
   1400337e6:	lea    r9,[rbp+0x40]
   1400337ea:	mov    QWORD PTR [rsp+0x20],rax
   1400337ef:	xor    r8d,r8d
   1400337f2:	mov    QWORD PTR [rbp+0x48],rdi
   1400337f6:	xor    edx,edx
   1400337f8:	mov    rcx,rsi
   1400337fb:	call   0x140033550
   140033800:	mov    r15,QWORD PTR [rbp+0x40]
   140033804:	mov    r8d,0x1
   14003380a:	mov    rdx,QWORD PTR [rbp+0x48]
   14003380e:	mov    rcx,r15
   140033811:	call   0x14003370c
   140033816:	mov    rbx,rax
   140033819:	test   rax,rax
   14003381c:	jne    0x14003382f
   14003381e:	call   0x140032c50
   140033823:	lea    edi,[rbx+0xc]
   140033826:	mov    DWORD PTR [rax],edi
   140033828:	xor    ecx,ecx
   14003382a:	jmp    0x1400338ce
   14003382f:	lea    r8,[rax+r15*8]
   140033833:	mov    rdx,rbx
   140033836:	lea    rax,[rbp+0x48]
   14003383a:	mov    rcx,rsi
   14003383d:	lea    r9,[rbp+0x40]
   140033841:	mov    QWORD PTR [rsp+0x20],rax
   140033846:	call   0x140033550
   14003384b:	cmp    r14d,0x1
   14003384f:	jne    0x140033865
   140033851:	mov    eax,DWORD PTR [rbp+0x40]
   140033854:	dec    eax
   140033856:	mov    QWORD PTR [rip+0x43a4b],rbx        # 0x1400772a8
   14003385d:	mov    DWORD PTR [rip+0x43a41],eax        # 0x1400772a4
   140033863:	jmp    0x140033828
   140033865:	lea    rdx,[rbp+0x38]
   140033869:	mov    QWORD PTR [rbp+0x38],rdi
   14003386d:	mov    rcx,rbx
   140033870:	call   0x14003e670
   140033875:	mov    esi,eax
   140033877:	test   eax,eax
   140033879:	je     0x140033894
   14003387b:	mov    rcx,QWORD PTR [rbp+0x38]
   14003387f:	call   0x140038c70
   140033884:	mov    rcx,rbx
   140033887:	mov    QWORD PTR [rbp+0x38],rdi
   14003388b:	call   0x140038c70
   140033890:	mov    edi,esi
   140033892:	jmp    0x1400338d3
   140033894:	mov    rdx,QWORD PTR [rbp+0x38]
   140033898:	mov    rcx,rdi
   14003389b:	mov    rax,rdx
   14003389e:	cmp    QWORD PTR [rdx],rdi
   1400338a1:	je     0x1400338af
   1400338a3:	lea    rax,[rax+0x8]
   1400338a7:	inc    rcx
   1400338aa:	cmp    QWORD PTR [rax],rdi
   1400338ad:	jne    0x1400338a3
   1400338af:	mov    DWORD PTR [rip+0x439ef],ecx        # 0x1400772a4
   1400338b5:	xor    ecx,ecx
   1400338b7:	mov    QWORD PTR [rbp+0x38],rdi
   1400338bb:	mov    QWORD PTR [rip+0x439e6],rdx        # 0x1400772a8
   1400338c2:	call   0x140038c70
   1400338c7:	mov    rcx,rbx
   1400338ca:	mov    QWORD PTR [rbp+0x38],rdi
   1400338ce:	call   0x140038c70
   1400338d3:	mov    eax,edi
   1400338d5:	mov    rbx,QWORD PTR [rsp+0x60]
   1400338da:	add    rsp,0x30
   1400338de:	pop    r15
   1400338e0:	pop    r14
   1400338e2:	pop    rdi
   1400338e3:	pop    rsi
   1400338e4:	pop    rbp
   1400338e5:	ret    
   1400338e6:	int3   
   1400338e7:	int3   
   1400338e8:	rex push rbx
   1400338ea:	sub    rsp,0x20
   1400338ee:	mov    rax,QWORD PTR [rip+0x4312b]        # 0x140076a20
   1400338f5:	xor    ebx,ebx
   1400338f7:	test   rax,rax
   1400338fa:	jne    0x140033927
   1400338fc:	cmp    QWORD PTR [rip+0x43115],rbx        # 0x140076a18
   140033903:	jne    0x140033909
   140033905:	xor    eax,eax
   140033907:	jmp    0x140033927
   140033909:	call   0x14003399c
   14003390e:	test   eax,eax
   140033910:	jne    0x140033905
   140033912:	call   0x140033c48
   140033917:	mov    rcx,QWORD PTR [rip+0x43102]        # 0x140076a20
   14003391e:	test   eax,eax
   140033920:	cmovne rcx,rbx
   140033924:	mov    rax,rcx
   140033927:	add    rsp,0x20
   14003392b:	pop    rbx
   14003392c:	ret    
   14003392d:	int3   
   14003392e:	int3   
   14003392f:	int3   
   140033930:	mov    QWORD PTR [rsp+0x8],rbx
   140033935:	push   rdi
   140033936:	sub    rsp,0x20
   14003393a:	xor    edi,edi
   14003393c:	cmp    QWORD PTR [rip+0x430d5],rdi        # 0x140076a18
   140033943:	je     0x140033949
   140033945:	xor    eax,eax
   140033947:	jmp    0x140033991
   140033949:	call   0x14003ed74
   14003394e:	call   0x14003f12c
   140033953:	mov    rbx,rax
   140033956:	test   rax,rax
   140033959:	jne    0x140033960
   14003395b:	or     edi,0xffffffff
   14003395e:	jmp    0x140033987
   140033960:	mov    rcx,rax
   140033963:	call   0x140033a04
   140033968:	test   rax,rax
   14003396b:	jne    0x140033972
   14003396d:	or     edi,0xffffffff
   140033970:	jmp    0x140033980
   140033972:	mov    QWORD PTR [rip+0x430b7],rax        # 0x140076a30
   140033979:	mov    QWORD PTR [rip+0x43098],rax        # 0x140076a18
   140033980:	xor    ecx,ecx
   140033982:	call   0x140038c70
   140033987:	mov    rcx,rbx
   14003398a:	call   0x140038c70
   14003398f:	mov    eax,edi
   140033991:	mov    rbx,QWORD PTR [rsp+0x30]
   140033996:	add    rsp,0x20
   14003399a:	pop    rdi
   14003399b:	ret    
   14003399c:	mov    QWORD PTR [rsp+0x8],rbx
   1400339a1:	push   rdi
   1400339a2:	sub    rsp,0x20
   1400339a6:	xor    edi,edi
   1400339a8:	cmp    QWORD PTR [rip+0x43071],rdi        # 0x140076a20
   1400339af:	je     0x1400339b5
   1400339b1:	xor    eax,eax
   1400339b3:	jmp    0x1400339f8
   1400339b5:	call   0x14003f230
   1400339ba:	mov    rbx,rax
   1400339bd:	test   rax,rax
   1400339c0:	jne    0x1400339c7
   1400339c2:	or     edi,0xffffffff
   1400339c5:	jmp    0x1400339ee
   1400339c7:	mov    rcx,rax
   1400339ca:	call   0x140033b00
   1400339cf:	test   rax,rax
   1400339d2:	jne    0x1400339d9
   1400339d4:	or     edi,0xffffffff
   1400339d7:	jmp    0x1400339e7
   1400339d9:	mov    QWORD PTR [rip+0x43048],rax        # 0x140076a28
   1400339e0:	mov    QWORD PTR [rip+0x43039],rax        # 0x140076a20
   1400339e7:	xor    ecx,ecx
   1400339e9:	call   0x140038c70
   1400339ee:	mov    rcx,rbx
   1400339f1:	call   0x140038c70
   1400339f6:	mov    eax,edi
   1400339f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400339fd:	add    rsp,0x20
   140033a01:	pop    rdi
   140033a02:	ret    
   140033a03:	int3   
   140033a04:	mov    QWORD PTR [rsp+0x8],rbx
   140033a09:	mov    QWORD PTR [rsp+0x10],rbp
   140033a0e:	mov    QWORD PTR [rsp+0x18],rsi
   140033a13:	push   rdi
   140033a14:	push   r14
   140033a16:	push   r15
   140033a18:	sub    rsp,0x30
   140033a1c:	xor    esi,esi
   140033a1e:	mov    r14,rcx
   140033a21:	mov    edx,esi
   140033a23:	jmp    0x140033a3f
   140033a25:	cmp    al,0x3d
   140033a27:	je     0x140033a2c
   140033a29:	inc    rdx
   140033a2c:	or     rax,0xffffffffffffffff
   140033a30:	inc    rax
   140033a33:	cmp    BYTE PTR [rcx+rax*1],sil
   140033a37:	jne    0x140033a30
   140033a39:	inc    rcx
   140033a3c:	add    rcx,rax
   140033a3f:	mov    al,BYTE PTR [rcx]
   140033a41:	test   al,al
   140033a43:	jne    0x140033a25
   140033a45:	lea    rcx,[rdx+0x1]
   140033a49:	mov    edx,0x8
   140033a4e:	call   0x140035d88
   140033a53:	mov    rbx,rax
   140033a56:	test   rax,rax
   140033a59:	je     0x140033ac7
   140033a5b:	mov    r15,rax
   140033a5e:	cmp    BYTE PTR [r14],sil
   140033a61:	je     0x140033ac4
   140033a63:	or     rbp,0xffffffffffffffff
   140033a67:	inc    rbp
   140033a6a:	cmp    BYTE PTR [r14+rbp*1],sil
   140033a6e:	jne    0x140033a67
   140033a70:	inc    rbp
   140033a73:	cmp    BYTE PTR [r14],0x3d
   140033a77:	je     0x140033aae
   140033a79:	mov    edx,0x1
   140033a7e:	mov    rcx,rbp
   140033a81:	call   0x140035d88
   140033a86:	mov    rdi,rax
   140033a89:	test   rax,rax
   140033a8c:	je     0x140033ab3
   140033a8e:	mov    r8,r14
   140033a91:	mov    rdx,rbp
   140033a94:	mov    rcx,rax
   140033a97:	call   0x140038d18
   140033a9c:	xor    ecx,ecx
   140033a9e:	test   eax,eax
   140033aa0:	jne    0x140033aea
   140033aa2:	mov    QWORD PTR [r15],rdi
   140033aa5:	add    r15,0x8
   140033aa9:	call   0x140038c70
   140033aae:	add    r14,rbp
   140033ab1:	jmp    0x140033a5e
   140033ab3:	mov    rcx,rbx
   140033ab6:	call   0x140033c04
   140033abb:	xor    ecx,ecx
   140033abd:	call   0x140038c70
   140033ac2:	jmp    0x140033ac7
   140033ac4:	mov    rsi,rbx
   140033ac7:	xor    ecx,ecx
   140033ac9:	call   0x140038c70
   140033ace:	mov    rbx,QWORD PTR [rsp+0x50]
   140033ad3:	mov    rax,rsi
   140033ad6:	mov    rsi,QWORD PTR [rsp+0x60]
   140033adb:	mov    rbp,QWORD PTR [rsp+0x58]
   140033ae0:	add    rsp,0x30
   140033ae4:	pop    r15
   140033ae6:	pop    r14
   140033ae8:	pop    rdi
   140033ae9:	ret    
   140033aea:	xor    r9d,r9d
   140033aed:	mov    QWORD PTR [rsp+0x20],rsi
   140033af2:	xor    r8d,r8d
   140033af5:	xor    edx,edx
   140033af7:	call   0x140030820
   140033afc:	int3   
   140033afd:	int3   
   140033afe:	int3   
   140033aff:	int3   
   140033b00:	mov    QWORD PTR [rsp+0x8],rbx
   140033b05:	mov    QWORD PTR [rsp+0x10],rbp
   140033b0a:	mov    QWORD PTR [rsp+0x18],rsi
   140033b0f:	push   rdi
   140033b10:	push   r14
   140033b12:	push   r15
   140033b14:	sub    rsp,0x30
   140033b18:	xor    esi,esi
   140033b1a:	mov    r14,rcx
   140033b1d:	mov    edx,esi
   140033b1f:	jmp    0x140033b3f
   140033b21:	cmp    ax,0x3d
   140033b25:	je     0x140033b2a
   140033b27:	inc    rdx
   140033b2a:	or     rax,0xffffffffffffffff
   140033b2e:	inc    rax
   140033b31:	cmp    WORD PTR [rcx+rax*2],si
   140033b35:	jne    0x140033b2e
   140033b37:	lea    rcx,[rcx+rax*2]
   140033b3b:	add    rcx,0x2
   140033b3f:	movzx  eax,WORD PTR [rcx]
   140033b42:	test   ax,ax
   140033b45:	jne    0x140033b21
   140033b47:	lea    rcx,[rdx+0x1]
   140033b4b:	mov    edx,0x8
   140033b50:	call   0x140035d88
   140033b55:	mov    rbx,rax
   140033b58:	test   rax,rax
   140033b5b:	je     0x140033bcd
   140033b5d:	mov    r15,rax
   140033b60:	cmp    WORD PTR [r14],si
   140033b64:	je     0x140033bca
   140033b66:	or     rbp,0xffffffffffffffff
   140033b6a:	inc    rbp
   140033b6d:	cmp    WORD PTR [r14+rbp*2],si
   140033b72:	jne    0x140033b6a
   140033b74:	inc    rbp
   140033b77:	cmp    WORD PTR [r14],0x3d
   140033b7c:	je     0x140033bb3
   140033b7e:	mov    edx,0x2
   140033b83:	mov    rcx,rbp
   140033b86:	call   0x140035d88
   140033b8b:	mov    rdi,rax
   140033b8e:	test   rax,rax
   140033b91:	je     0x140033bb9
   140033b93:	mov    r8,r14
   140033b96:	mov    rdx,rbp
   140033b99:	mov    rcx,rax
   140033b9c:	call   0x140038cb0
   140033ba1:	xor    ecx,ecx
   140033ba3:	test   eax,eax
   140033ba5:	jne    0x140033bf0
   140033ba7:	mov    QWORD PTR [r15],rdi
   140033baa:	add    r15,0x8
   140033bae:	call   0x140038c70
   140033bb3:	lea    r14,[r14+rbp*2]
   140033bb7:	jmp    0x140033b60
   140033bb9:	mov    rcx,rbx
   140033bbc:	call   0x140033c04
   140033bc1:	xor    ecx,ecx
   140033bc3:	call   0x140038c70
   140033bc8:	jmp    0x140033bcd
   140033bca:	mov    rsi,rbx
   140033bcd:	xor    ecx,ecx
   140033bcf:	call   0x140038c70
   140033bd4:	mov    rbx,QWORD PTR [rsp+0x50]
   140033bd9:	mov    rax,rsi
   140033bdc:	mov    rsi,QWORD PTR [rsp+0x60]
   140033be1:	mov    rbp,QWORD PTR [rsp+0x58]
   140033be6:	add    rsp,0x30
   140033bea:	pop    r15
   140033bec:	pop    r14
   140033bee:	pop    rdi
   140033bef:	ret    
   140033bf0:	xor    r9d,r9d
   140033bf3:	mov    QWORD PTR [rsp+0x20],rsi
   140033bf8:	xor    r8d,r8d
   140033bfb:	xor    edx,edx
   140033bfd:	call   0x140030820
   140033c02:	int3   
   140033c03:	int3   
   140033c04:	test   rcx,rcx
   140033c07:	je     0x140033c44
   140033c09:	mov    QWORD PTR [rsp+0x8],rbx
   140033c0e:	push   rdi
   140033c0f:	sub    rsp,0x20
   140033c13:	mov    rax,QWORD PTR [rcx]
   140033c16:	mov    rbx,rcx
   140033c19:	mov    rdi,rcx
   140033c1c:	jmp    0x140033c2d
   140033c1e:	mov    rcx,rax
   140033c21:	call   0x140038c70
   140033c26:	lea    rdi,[rdi+0x8]
   140033c2a:	mov    rax,QWORD PTR [rdi]
   140033c2d:	test   rax,rax
   140033c30:	jne    0x140033c1e
   140033c32:	mov    rcx,rbx
   140033c35:	call   0x140038c70
   140033c3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140033c3f:	add    rsp,0x20
   140033c43:	pop    rdi
   140033c44:	ret    
   140033c45:	int3   
   140033c46:	int3   
   140033c47:	int3   
   140033c48:	mov    QWORD PTR [rsp+0x8],rbx
   140033c4d:	mov    QWORD PTR [rsp+0x10],rbp
   140033c52:	push   rsi
   140033c53:	sub    rsp,0x30
   140033c57:	mov    rsi,QWORD PTR [rip+0x42dba]        # 0x140076a18
   140033c5e:	test   rsi,rsi
   140033c61:	jne    0x140033cd3
   140033c63:	or     eax,0xffffffff
   140033c66:	jmp    0x140033cdb
   140033c68:	and    DWORD PTR [rsp+0x28],0x0
   140033c6d:	or     r9d,0xffffffff
   140033c71:	mov    r8,QWORD PTR [rsi]
   140033c74:	xor    edx,edx
   140033c76:	and    QWORD PTR [rsp+0x20],0x0
   140033c7c:	xor    ecx,ecx
   140033c7e:	call   QWORD PTR [rip+0x174a4]        # 0x14004b128
   140033c84:	movsxd rbp,eax
   140033c87:	test   eax,eax
   140033c89:	je     0x140033c63
   140033c8b:	mov    edx,0x2
   140033c90:	mov    rcx,rbp
   140033c93:	call   0x140035d88
   140033c98:	mov    rbx,rax
   140033c9b:	test   rax,rax
   140033c9e:	je     0x140033ceb
   140033ca0:	mov    r8,QWORD PTR [rsi]
   140033ca3:	or     r9d,0xffffffff
   140033ca7:	mov    DWORD PTR [rsp+0x28],ebp
   140033cab:	xor    edx,edx
   140033cad:	xor    ecx,ecx
   140033caf:	mov    QWORD PTR [rsp+0x20],rax
   140033cb4:	call   QWORD PTR [rip+0x1746e]        # 0x14004b128
   140033cba:	test   eax,eax
   140033cbc:	je     0x140033ceb
   140033cbe:	xor    edx,edx
   140033cc0:	mov    rcx,rbx
   140033cc3:	call   0x14003f6ac
   140033cc8:	xor    ecx,ecx
   140033cca:	call   0x140038c70
   140033ccf:	add    rsi,0x8
   140033cd3:	cmp    QWORD PTR [rsi],0x0
   140033cd7:	jne    0x140033c68
   140033cd9:	xor    eax,eax
   140033cdb:	mov    rbx,QWORD PTR [rsp+0x40]
   140033ce0:	mov    rbp,QWORD PTR [rsp+0x48]
   140033ce5:	add    rsp,0x30
   140033ce9:	pop    rsi
   140033cea:	ret    
   140033ceb:	mov    rcx,rbx
   140033cee:	call   0x140038c70
   140033cf3:	jmp    0x140033c63
   140033cf8:	sub    rsp,0x28
   140033cfc:	mov    rcx,QWORD PTR [rcx]
   140033cff:	cmp    rcx,QWORD PTR [rip+0x42d2a]        # 0x140076a30
   140033d06:	je     0x140033d0d
   140033d08:	call   0x140033c04
   140033d0d:	add    rsp,0x28
   140033d11:	ret    
   140033d12:	int3   
   140033d13:	int3   
   140033d14:	sub    rsp,0x28
   140033d18:	mov    rcx,QWORD PTR [rcx]
   140033d1b:	cmp    rcx,QWORD PTR [rip+0x42d06]        # 0x140076a28
   140033d22:	je     0x140033d29
   140033d24:	call   0x140033c04
   140033d29:	add    rsp,0x28
   140033d2d:	ret    
   140033d2e:	int3   
   140033d2f:	int3   
   140033d30:	jmp    0x1400338e8
   140033d35:	int3   
   140033d36:	int3   
   140033d37:	int3   
   140033d38:	sub    rsp,0x28
   140033d3c:	lea    rcx,[rip+0x42cd5]        # 0x140076a18
   140033d43:	call   0x140033cf8
   140033d48:	lea    rcx,[rip+0x42cd1]        # 0x140076a20
   140033d4f:	call   0x140033d14
   140033d54:	mov    rcx,QWORD PTR [rip+0x42cd5]        # 0x140076a30
   140033d5b:	call   0x140033c04
   140033d60:	mov    rcx,QWORD PTR [rip+0x42cc1]        # 0x140076a28
   140033d67:	add    rsp,0x28
   140033d6b:	jmp    0x140033c04
   140033d70:	jmp    0x140033930
   140033d75:	int3   
   140033d76:	int3   
   140033d77:	int3   
   140033d78:	mov    QWORD PTR [rsp+0x8],rbx
   140033d7d:	mov    QWORD PTR [rsp+0x20],r9
   140033d82:	push   rdi
   140033d83:	sub    rsp,0x20
   140033d87:	mov    rbx,r9
   140033d8a:	mov    rdi,r8
   140033d8d:	mov    ecx,DWORD PTR [rdx]
   140033d8f:	call   0x140035a44
   140033d94:	nop
   140033d95:	mov    rcx,rdi
   140033d98:	call   0x140033f54
   140033d9d:	mov    edi,eax
   140033d9f:	mov    ecx,DWORD PTR [rbx]
   140033da1:	call   0x140035a98
   140033da6:	mov    eax,edi
   140033da8:	mov    rbx,QWORD PTR [rsp+0x30]
   140033dad:	add    rsp,0x20
   140033db1:	pop    rdi
   140033db2:	ret    
   140033db3:	int3   
   140033db4:	mov    QWORD PTR [rsp+0x8],rbx
   140033db9:	mov    QWORD PTR [rsp+0x10],rsi
   140033dbe:	mov    QWORD PTR [rsp+0x20],r9
   140033dc3:	push   rdi
   140033dc4:	push   r12
   140033dc6:	push   r13
   140033dc8:	push   r14
   140033dca:	push   r15
   140033dcc:	sub    rsp,0x40
   140033dd0:	mov    rdi,r9
   140033dd3:	mov    r15,r8
   140033dd6:	mov    ecx,DWORD PTR [rdx]
   140033dd8:	call   0x140035a44
   140033ddd:	nop
   140033dde:	mov    rax,QWORD PTR [r15]
   140033de1:	mov    rdx,QWORD PTR [rax]
   140033de4:	test   rdx,rdx
   140033de7:	jne    0x140033df2
   140033de9:	or     rbx,0xffffffffffffffff
   140033ded:	jmp    0x140033f32
   140033df2:	mov    rsi,QWORD PTR [rip+0x3d257]        # 0x140071050
   140033df9:	mov    r8d,esi
   140033dfc:	and    r8d,0x3f
   140033e00:	mov    rdi,rsi
   140033e03:	xor    rdi,QWORD PTR [rdx]
   140033e06:	mov    ecx,r8d
   140033e09:	ror    rdi,cl
   140033e0c:	mov    QWORD PTR [rsp+0x30],rdi
   140033e11:	mov    rbx,rsi
   140033e14:	xor    rbx,QWORD PTR [rdx+0x8]
   140033e18:	ror    rbx,cl
   140033e1b:	mov    QWORD PTR [rsp+0x20],rbx
   140033e20:	lea    rax,[rdi-0x1]
   140033e24:	cmp    rax,0xfffffffffffffffd
   140033e28:	ja     0x140033f28
   140033e2e:	mov    r12,rdi
   140033e31:	mov    QWORD PTR [rsp+0x28],rdi
   140033e36:	mov    r14,rbx
   140033e39:	mov    QWORD PTR [rsp+0x38],rbx
   140033e3e:	mov    r13d,0x40
   140033e44:	mov    ecx,r13d
   140033e47:	sub    ecx,r8d
   140033e4a:	xor    eax,eax
   140033e4c:	ror    rax,cl
   140033e4f:	xor    rax,rsi
   140033e52:	sub    rbx,0x8
   140033e56:	mov    QWORD PTR [rsp+0x20],rbx
   140033e5b:	cmp    rbx,rdi
   140033e5e:	jb     0x140033e6c
   140033e60:	cmp    QWORD PTR [rbx],rax
   140033e63:	jne    0x140033e67
   140033e65:	jmp    0x140033e52
   140033e67:	cmp    rbx,rdi
   140033e6a:	jae    0x140033eb6
   140033e6c:	or     rbx,0xffffffffffffffff
   140033e70:	cmp    rdi,rbx
   140033e73:	je     0x140033e84
   140033e75:	mov    rcx,rdi
   140033e78:	call   0x140038c70
   140033e7d:	mov    rsi,QWORD PTR [rip+0x3d1cc]        # 0x140071050
   140033e84:	mov    eax,esi
   140033e86:	and    eax,0x3f
   140033e89:	sub    r13d,eax
   140033e8c:	mov    ecx,r13d
   140033e8f:	xor    edx,edx
   140033e91:	ror    rdx,cl
   140033e94:	xor    rdx,rsi
   140033e97:	mov    rax,QWORD PTR [r15]
   140033e9a:	mov    rcx,QWORD PTR [rax]
   140033e9d:	mov    QWORD PTR [rcx],rdx
   140033ea0:	mov    rax,QWORD PTR [r15]
   140033ea3:	mov    rcx,QWORD PTR [rax]
   140033ea6:	mov    QWORD PTR [rcx+0x8],rdx
   140033eaa:	mov    rax,QWORD PTR [r15]
   140033ead:	mov    rcx,QWORD PTR [rax]
   140033eb0:	mov    QWORD PTR [rcx+0x10],rdx
   140033eb4:	jmp    0x140033f28
   140033eb6:	mov    ecx,esi
   140033eb8:	and    ecx,0x3f
   140033ebb:	xor    rsi,QWORD PTR [rbx]
   140033ebe:	ror    rsi,cl
   140033ec1:	mov    QWORD PTR [rbx],rax
   140033ec4:	mov    rcx,rsi
   140033ec7:	call   QWORD PTR [rip+0x1758b]        # 0x14004b458
   140033ecd:	call   rsi
   140033ecf:	mov    rax,QWORD PTR [r15]
   140033ed2:	mov    rdx,QWORD PTR [rax]
   140033ed5:	mov    rsi,QWORD PTR [rip+0x3d174]        # 0x140071050
   140033edc:	mov    r8d,esi
   140033edf:	and    r8d,0x3f
   140033ee3:	mov    r9,rsi
   140033ee6:	xor    r9,QWORD PTR [rdx]
   140033ee9:	mov    ecx,r8d
   140033eec:	ror    r9,cl
   140033eef:	mov    rax,QWORD PTR [rdx+0x8]
   140033ef3:	xor    rax,rsi
   140033ef6:	ror    rax,cl
   140033ef9:	cmp    r9,r12
   140033efc:	jne    0x140033f03
   140033efe:	cmp    rax,r14
   140033f01:	je     0x140033f23
   140033f03:	mov    r12,r9
   140033f06:	mov    QWORD PTR [rsp+0x28],r9
   140033f0b:	mov    rdi,r9
   140033f0e:	mov    QWORD PTR [rsp+0x30],r9
   140033f13:	mov    r14,rax
   140033f16:	mov    QWORD PTR [rsp+0x38],rax
   140033f1b:	mov    rbx,rax
   140033f1e:	mov    QWORD PTR [rsp+0x20],rax
   140033f23:	jmp    0x140033e44
   140033f28:	mov    rdi,QWORD PTR [rsp+0x88]
   140033f30:	xor    ebx,ebx
   140033f32:	mov    ecx,DWORD PTR [rdi]
   140033f34:	call   0x140035a98
   140033f39:	mov    eax,ebx
   140033f3b:	mov    rbx,QWORD PTR [rsp+0x70]
   140033f40:	mov    rsi,QWORD PTR [rsp+0x78]
   140033f45:	add    rsp,0x40
   140033f49:	pop    r15
   140033f4b:	pop    r14
   140033f4d:	pop    r13
   140033f4f:	pop    r12
   140033f51:	pop    rdi
   140033f52:	ret    
   140033f53:	int3   
   140033f54:	mov    rax,rsp
   140033f57:	mov    QWORD PTR [rax+0x8],rbx
   140033f5b:	mov    QWORD PTR [rax+0x10],rbp
   140033f5f:	mov    QWORD PTR [rax+0x18],rsi
   140033f63:	mov    QWORD PTR [rax+0x20],rdi
   140033f67:	push   r12
   140033f69:	push   r14
   140033f6b:	push   r15
   140033f6d:	sub    rsp,0x20
   140033f71:	mov    rax,QWORD PTR [rcx]
   140033f74:	xor    esi,esi
   140033f76:	mov    r15,rcx
   140033f79:	mov    rbx,QWORD PTR [rax]
   140033f7c:	test   rbx,rbx
   140033f7f:	jne    0x140033f89
   140033f81:	or     eax,0xffffffff
   140033f84:	jmp    0x14003410f
   140033f89:	mov    r8,QWORD PTR [rip+0x3d0c0]        # 0x140071050
   140033f90:	mov    r12d,0x40
   140033f96:	mov    rbp,QWORD PTR [rbx]
   140033f99:	mov    ecx,r8d
   140033f9c:	mov    r9,QWORD PTR [rbx+0x8]
   140033fa0:	and    ecx,0x3f
   140033fa3:	mov    rbx,QWORD PTR [rbx+0x10]
   140033fa7:	xor    rbp,r8
   140033faa:	xor    r9,r8
   140033fad:	ror    rbp,cl
   140033fb0:	xor    rbx,r8
   140033fb3:	ror    r9,cl
   140033fb6:	ror    rbx,cl
   140033fb9:	cmp    r9,rbx
   140033fbc:	jne    0x140034089
   140033fc2:	sub    rbx,rbp
   140033fc5:	mov    eax,0x200
   140033fca:	sar    rbx,0x3
   140033fce:	cmp    rbx,rax
   140033fd1:	mov    rdi,rbx
   140033fd4:	cmova  rdi,rax
   140033fd8:	lea    eax,[r12-0x20]
   140033fdd:	add    rdi,rbx
   140033fe0:	cmove  rdi,rax
   140033fe4:	cmp    rdi,rbx
   140033fe7:	jb     0x140034008
   140033fe9:	lea    r8d,[r12-0x38]
   140033fee:	mov    rdx,rdi
   140033ff1:	mov    rcx,rbp
   140033ff4:	call   0x14003f6b4
   140033ff9:	xor    ecx,ecx
   140033ffb:	mov    r14,rax
   140033ffe:	call   0x140038c70
   140034003:	test   r14,r14
   140034006:	jne    0x140034030
   140034008:	lea    rdi,[rbx+0x4]
   14003400c:	mov    r8d,0x8
   140034012:	mov    rdx,rdi
   140034015:	mov    rcx,rbp
   140034018:	call   0x14003f6b4
   14003401d:	xor    ecx,ecx
   14003401f:	mov    r14,rax
   140034022:	call   0x140038c70
   140034027:	test   r14,r14
   14003402a:	je     0x140033f81
   140034030:	mov    r8,QWORD PTR [rip+0x3d019]        # 0x140071050
   140034037:	lea    r9,[r14+rbx*8]
   14003403b:	mov    eax,r8d
   14003403e:	lea    rbx,[r14+rdi*8]
   140034042:	and    eax,0x3f
   140034045:	mov    ecx,r12d
   140034048:	sub    ecx,eax
   14003404a:	mov    rdx,rsi
   14003404d:	ror    rdx,cl
   140034050:	mov    rax,rbx
   140034053:	sub    rax,r9
   140034056:	xor    rdx,r8
   140034059:	add    rax,0x7
   14003405d:	mov    rbp,r14
   140034060:	shr    rax,0x3
   140034064:	mov    rcx,r9
   140034067:	cmp    r9,rbx
   14003406a:	cmova  rax,rsi
   14003406e:	test   rax,rax
   140034071:	je     0x140034089
   140034073:	inc    rsi
   140034076:	mov    QWORD PTR [rcx],rdx
   140034079:	lea    rcx,[rcx+0x8]
   14003407d:	cmp    rsi,rax
   140034080:	jne    0x140034073
   140034082:	mov    r8,QWORD PTR [rip+0x3cfc7]        # 0x140071050
   140034089:	mov    eax,r8d
   14003408c:	mov    ecx,r12d
   14003408f:	and    eax,0x3f
   140034092:	sub    ecx,eax
   140034094:	mov    rax,QWORD PTR [r15+0x8]
   140034098:	mov    rdx,QWORD PTR [rax]
   14003409b:	mov    eax,r12d
   14003409e:	ror    rdx,cl
   1400340a1:	xor    rdx,r8
   1400340a4:	lea    r8,[r9+0x8]
   1400340a8:	mov    QWORD PTR [r9],rdx
   1400340ab:	mov    rdx,QWORD PTR [rip+0x3cf9e]        # 0x140071050
   1400340b2:	mov    ecx,edx
   1400340b4:	and    ecx,0x3f
   1400340b7:	sub    eax,ecx
   1400340b9:	mov    cl,al
   1400340bb:	mov    rax,QWORD PTR [r15]
   1400340be:	ror    rbp,cl
   1400340c1:	xor    rbp,rdx
   1400340c4:	mov    rcx,QWORD PTR [rax]
   1400340c7:	mov    QWORD PTR [rcx],rbp
   1400340ca:	mov    ecx,r12d
   1400340cd:	mov    rdx,QWORD PTR [rip+0x3cf7c]        # 0x140071050
   1400340d4:	mov    eax,edx
   1400340d6:	and    eax,0x3f
   1400340d9:	sub    ecx,eax
   1400340db:	mov    rax,QWORD PTR [r15]
   1400340de:	ror    r8,cl
   1400340e1:	xor    r8,rdx
   1400340e4:	mov    rdx,QWORD PTR [rax]
   1400340e7:	mov    QWORD PTR [rdx+0x8],r8
   1400340eb:	mov    rdx,QWORD PTR [rip+0x3cf5e]        # 0x140071050
   1400340f2:	mov    eax,edx
   1400340f4:	and    eax,0x3f
   1400340f7:	sub    r12d,eax
   1400340fa:	mov    rax,QWORD PTR [r15]
   1400340fd:	mov    cl,r12b
   140034100:	ror    rbx,cl
   140034103:	xor    rbx,rdx
   140034106:	mov    rcx,QWORD PTR [rax]
   140034109:	xor    eax,eax
   14003410b:	mov    QWORD PTR [rcx+0x10],rbx
   14003410f:	mov    rbx,QWORD PTR [rsp+0x40]
   140034114:	mov    rbp,QWORD PTR [rsp+0x48]
   140034119:	mov    rsi,QWORD PTR [rsp+0x50]
   14003411e:	mov    rdi,QWORD PTR [rsp+0x58]
   140034123:	add    rsp,0x20
   140034127:	pop    r15
   140034129:	pop    r14
   14003412b:	pop    r12
   14003412d:	ret    
   14003412e:	int3   
   14003412f:	int3   
   140034130:	mov    rdx,rcx
   140034133:	lea    rcx,[rip+0x428fe]        # 0x140076a38
   14003413a:	jmp    0x1400341bc
   14003413f:	int3   
   140034140:	mov    r11,rsp
   140034143:	mov    QWORD PTR [r11+0x8],rcx
   140034147:	sub    rsp,0x38
   14003414b:	lea    rax,[r11+0x8]
   14003414f:	mov    QWORD PTR [r11-0x18],rax
   140034153:	lea    r9,[r11+0x18]
   140034157:	mov    eax,0x2
   14003415c:	lea    r8,[r11-0x18]
   140034160:	lea    rdx,[r11+0x20]
   140034164:	mov    DWORD PTR [rsp+0x50],eax
   140034168:	lea    rcx,[r11+0x10]
   14003416c:	mov    DWORD PTR [rsp+0x58],eax
   140034170:	call   0x140033db4
   140034175:	add    rsp,0x38
   140034179:	ret    
   14003417a:	int3   
   14003417b:	int3   
   14003417c:	xor    r9d,r9d
   14003417f:	mov    r8,rcx
   140034182:	test   rcx,rcx
   140034185:	jne    0x14003418b
   140034187:	or     eax,0xffffffff
   14003418a:	ret    
   14003418b:	mov    rax,QWORD PTR [rcx+0x10]
   14003418f:	cmp    QWORD PTR [rcx],rax
   140034192:	jne    0x1400341b8
   140034194:	mov    rdx,QWORD PTR [rip+0x3ceb5]        # 0x140071050
   14003419b:	mov    ecx,0x40
   1400341a0:	mov    eax,edx
   1400341a2:	and    eax,0x3f
   1400341a5:	sub    ecx,eax
   1400341a7:	ror    r9,cl
   1400341aa:	xor    r9,rdx
   1400341ad:	mov    QWORD PTR [r8],r9
   1400341b0:	mov    QWORD PTR [r8+0x8],r9
   1400341b4:	mov    QWORD PTR [r8+0x10],r9
   1400341b8:	xor    eax,eax
   1400341ba:	ret    
   1400341bb:	int3   
   1400341bc:	mov    QWORD PTR [rsp+0x10],rdx
   1400341c1:	mov    QWORD PTR [rsp+0x8],rcx
   1400341c6:	push   rbp
   1400341c7:	mov    rbp,rsp
   1400341ca:	sub    rsp,0x40
   1400341ce:	lea    rax,[rbp+0x10]
   1400341d2:	mov    QWORD PTR [rbp-0x18],rax
   1400341d6:	lea    r9,[rbp+0x28]
   1400341da:	lea    rax,[rbp+0x18]
   1400341de:	mov    QWORD PTR [rbp-0x10],rax
   1400341e2:	lea    r8,[rbp-0x18]
   1400341e6:	mov    eax,0x2
   1400341eb:	lea    rdx,[rbp-0x20]
   1400341ef:	lea    rcx,[rbp+0x20]
   1400341f3:	mov    DWORD PTR [rbp+0x28],eax
   1400341f6:	mov    DWORD PTR [rbp-0x20],eax
   1400341f9:	call   0x140033d78
   1400341fe:	add    rsp,0x40
   140034202:	pop    rbp
   140034203:	ret    
   140034204:	lea    rax,[rip+0x3d0f5]        # 0x140071300
   14003420b:	mov    QWORD PTR [rip+0x42a8e],rax        # 0x140076ca0
   140034212:	mov    al,0x1
   140034214:	ret    
   140034215:	int3   
   140034216:	int3   
   140034217:	int3   
   140034218:	sub    rsp,0x28
   14003421c:	lea    rcx,[rip+0x42815]        # 0x140076a38
   140034223:	call   0x14003417c
   140034228:	lea    rcx,[rip+0x42821]        # 0x140076a50
   14003422f:	call   0x14003417c
   140034234:	mov    al,0x1
   140034236:	add    rsp,0x28
   14003423a:	ret    
   14003423b:	int3   
   14003423c:	sub    rsp,0x28
   140034240:	call   0x140033d38
   140034245:	mov    al,0x1
   140034247:	add    rsp,0x28
   14003424b:	ret    
   14003424c:	mov    al,0x1
   14003424e:	ret    
   14003424f:	int3   
   140034250:	rex push rbx
   140034252:	sub    rsp,0x20
   140034256:	mov    rdx,QWORD PTR [rip+0x3cdf3]        # 0x140071050
   14003425d:	mov    ecx,0x40
   140034262:	mov    eax,edx
   140034264:	xor    ebx,ebx
   140034266:	and    eax,0x3f
   140034269:	sub    ecx,eax
   14003426b:	ror    rbx,cl
   14003426e:	xor    rbx,rdx
   140034271:	mov    rcx,rbx
   140034274:	call   0x140030720
   140034279:	mov    rcx,rbx
   14003427c:	call   0x140033090
   140034281:	mov    rcx,rbx
   140034284:	call   0x14003f8d8
   140034289:	mov    rcx,rbx
   14003428c:	call   0x140034394
   140034291:	mov    rcx,rbx
   140034294:	call   0x1400334cc
   140034299:	mov    al,0x1
   14003429b:	add    rsp,0x20
   14003429f:	pop    rbx
   1400342a0:	ret    
   1400342a1:	int3   
   1400342a2:	int3   
   1400342a3:	int3   
   1400342a4:	xor    ecx,ecx
   1400342a6:	jmp    0x14002b970
   1400342ab:	int3   
   1400342ac:	rex push rbx
   1400342ae:	sub    rsp,0x20
   1400342b2:	mov    rcx,QWORD PTR [rip+0x3d52f]        # 0x1400717e8
   1400342b9:	or     eax,0xffffffff
   1400342bc:	lock xadd DWORD PTR [rcx],eax
   1400342c0:	cmp    eax,0x1
   1400342c3:	jne    0x1400342e4
   1400342c5:	mov    rcx,QWORD PTR [rip+0x3d51c]        # 0x1400717e8
   1400342cc:	lea    rbx,[rip+0x3d2ed]        # 0x1400715c0
   1400342d3:	cmp    rcx,rbx
   1400342d6:	je     0x1400342e4
   1400342d8:	call   0x140038c70
   1400342dd:	mov    QWORD PTR [rip+0x3d504],rbx        # 0x1400717e8
   1400342e4:	mov    rcx,QWORD PTR [rip+0x429c5]        # 0x140076cb0
   1400342eb:	call   0x140038c70
   1400342f0:	mov    rcx,QWORD PTR [rip+0x429c1]        # 0x140076cb8
   1400342f7:	xor    ebx,ebx
   1400342f9:	mov    QWORD PTR [rip+0x429b0],rbx        # 0x140076cb0
   140034300:	call   0x140038c70
   140034305:	mov    rcx,QWORD PTR [rip+0x42f9c]        # 0x1400772a8
   14003430c:	mov    QWORD PTR [rip+0x429a5],rbx        # 0x140076cb8
   140034313:	call   0x140038c70
   140034318:	mov    rcx,QWORD PTR [rip+0x42f91]        # 0x1400772b0
   14003431f:	mov    QWORD PTR [rip+0x42f82],rbx        # 0x1400772a8
   140034326:	call   0x140038c70
   14003432b:	mov    al,0x1
   14003432d:	mov    QWORD PTR [rip+0x42f7c],rbx        # 0x1400772b0
   140034334:	add    rsp,0x20
   140034338:	pop    rbx
   140034339:	ret    
   14003433a:	int3   
   14003433b:	int3   
   14003433c:	lea    rdx,[rip+0x2087d]        # 0x140054bc0
   140034343:	lea    rcx,[rip+0x20786]        # 0x140054ad0
   14003434a:	jmp    0x14003f77c
   14003434f:	int3   
   140034350:	lea    rdx,[rip+0x20869]        # 0x140054bc0
   140034357:	lea    rcx,[rip+0x20772]        # 0x140054ad0
   14003435e:	jmp    0x14003f810
   140034363:	int3   
   140034364:	mov    eax,DWORD PTR [rip+0x426fe]        # 0x140076a68
   14003436a:	ret    
   14003436b:	int3   
   14003436c:	mov    DWORD PTR [rip+0x426f6],ecx        # 0x140076a68
   140034372:	ret    
   140034373:	int3   
   140034374:	mov    rdx,QWORD PTR [rip+0x3ccd5]        # 0x140071050
   14003437b:	mov    ecx,edx
   14003437d:	xor    rdx,QWORD PTR [rip+0x426ec]        # 0x140076a70
   140034384:	and    ecx,0x3f
   140034387:	ror    rdx,cl
   14003438a:	test   rdx,rdx
   14003438d:	setne  al
   140034390:	ret    
   140034391:	int3   
   140034392:	int3   
   140034393:	int3   
   140034394:	mov    QWORD PTR [rip+0x426d5],rcx        # 0x140076a70
   14003439b:	ret    
   14003439c:	mov    QWORD PTR [rsp+0x8],rbx
   1400343a1:	push   rdi
   1400343a2:	sub    rsp,0x20
   1400343a6:	mov    rbx,QWORD PTR [rip+0x3cca3]        # 0x140071050
   1400343ad:	mov    rdi,rcx
   1400343b0:	mov    ecx,ebx
   1400343b2:	xor    rbx,QWORD PTR [rip+0x426b7]        # 0x140076a70
   1400343b9:	and    ecx,0x3f
   1400343bc:	ror    rbx,cl
   1400343bf:	test   rbx,rbx
   1400343c2:	jne    0x1400343c8
   1400343c4:	xor    eax,eax
   1400343c6:	jmp    0x1400343d6
   1400343c8:	mov    rcx,rbx
   1400343cb:	call   QWORD PTR [rip+0x17087]        # 0x14004b458
   1400343d1:	mov    rcx,rdi
   1400343d4:	call   rbx
   1400343d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400343db:	add    rsp,0x20
   1400343df:	pop    rdi
   1400343e0:	ret    
   1400343e1:	int3   
   1400343e2:	int3   
   1400343e3:	int3   
   1400343e4:	mov    r8,QWORD PTR [rip+0x3cc65]        # 0x140071050
   1400343eb:	mov    r9,rcx
   1400343ee:	mov    edx,r8d
   1400343f1:	mov    ecx,0x40
   1400343f6:	and    edx,0x3f
   1400343f9:	sub    ecx,edx
   1400343fb:	ror    r9,cl
   1400343fe:	xor    r9,r8
   140034401:	mov    QWORD PTR [rip+0x42668],r9        # 0x140076a70
   140034408:	ret    
   140034409:	int3   
   14003440a:	int3   
   14003440b:	int3   
   14003440c:	mov    QWORD PTR [rsp+0x8],rbx
   140034411:	push   rdi
   140034412:	sub    rsp,0x20
   140034416:	call   0x14003ed74
   14003441b:	mov    rax,QWORD PTR [rip+0x42e96]        # 0x1400772b8
   140034422:	lea    rbx,[rip+0x4264f]        # 0x140076a78
   140034429:	test   rax,rax
   14003442c:	cmovne rbx,rax
   140034430:	xor    dil,dil
   140034433:	mov    al,BYTE PTR [rbx]
   140034435:	cmp    al,0x20
   140034437:	jg     0x140034442
   140034439:	test   al,al
   14003443b:	je     0x14003446e
   14003443d:	test   dil,dil
   140034440:	je     0x140034468
   140034442:	cmp    al,0x22
   140034444:	jne    0x14003444d
   140034446:	test   dil,dil
   140034449:	sete   dil
   14003444d:	movsx  ecx,al
   140034450:	call   0x140036594
   140034455:	test   eax,eax
   140034457:	je     0x14003445c
   140034459:	inc    rbx
   14003445c:	inc    rbx
   14003445f:	jmp    0x140034433
   140034461:	cmp    al,0x20
   140034463:	jg     0x14003446e
   140034465:	inc    rbx
   140034468:	mov    al,BYTE PTR [rbx]
   14003446a:	test   al,al
   14003446c:	jne    0x140034461
   14003446e:	mov    rax,rbx
   140034471:	mov    rbx,QWORD PTR [rsp+0x30]
   140034476:	add    rsp,0x20
   14003447a:	pop    rdi
   14003447b:	ret    
   14003447c:	mov    rax,rsp
   14003447f:	mov    QWORD PTR [rax+0x8],rbx
   140034483:	mov    QWORD PTR [rax+0x10],rbp
   140034487:	mov    QWORD PTR [rax+0x18],rsi
   14003448b:	mov    QWORD PTR [rax+0x20],rdi
   14003448f:	push   r14
   140034491:	sub    rsp,0x20
   140034495:	xor    r14d,r14d
   140034498:	mov    rdi,rdx
   14003449b:	sub    rdi,rcx
   14003449e:	mov    rbx,rcx
   1400344a1:	add    rdi,0x7
   1400344a5:	mov    ebp,r14d
   1400344a8:	shr    rdi,0x3
   1400344ac:	cmp    rcx,rdx
   1400344af:	cmova  rdi,r14
   1400344b3:	test   rdi,rdi
   1400344b6:	je     0x1400344d7
   1400344b8:	mov    rsi,QWORD PTR [rbx]
   1400344bb:	test   rsi,rsi
   1400344be:	je     0x1400344cb
   1400344c0:	mov    rcx,rsi
   1400344c3:	call   QWORD PTR [rip+0x16f8f]        # 0x14004b458
   1400344c9:	call   rsi
   1400344cb:	add    rbx,0x8
   1400344cf:	inc    rbp
   1400344d2:	cmp    rbp,rdi
   1400344d5:	jne    0x1400344b8
   1400344d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400344dc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400344e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400344e6:	mov    rdi,QWORD PTR [rsp+0x48]
   1400344eb:	add    rsp,0x20
   1400344ef:	pop    r14
   1400344f1:	ret    
   1400344f2:	int3   
   1400344f3:	int3   
   1400344f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400344f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400344fe:	push   rdi
   1400344ff:	sub    rsp,0x20
   140034503:	mov    rsi,rdx
   140034506:	mov    rbx,rcx
   140034509:	cmp    rcx,rdx
   14003450c:	je     0x14003452e
   14003450e:	mov    rdi,QWORD PTR [rbx]
   140034511:	test   rdi,rdi
   140034514:	je     0x140034525
   140034516:	mov    rcx,rdi
   140034519:	call   QWORD PTR [rip+0x16f39]        # 0x14004b458
   14003451f:	call   rdi
   140034521:	test   eax,eax
   140034523:	jne    0x140034530
   140034525:	add    rbx,0x8
   140034529:	cmp    rbx,rsi
   14003452c:	jmp    0x14003450c
   14003452e:	xor    eax,eax
   140034530:	mov    rbx,QWORD PTR [rsp+0x30]
   140034535:	mov    rsi,QWORD PTR [rsp+0x38]
   14003453a:	add    rsp,0x20
   14003453e:	pop    rdi
   14003453f:	ret    
   140034540:	sub    rsp,0x28
   140034544:	test   rcx,rcx
   140034547:	jne    0x140034560
   140034549:	call   0x140032c50
   14003454e:	mov    DWORD PTR [rax],0x16
   140034554:	call   0x1400307d0
   140034559:	mov    eax,0x16
   14003455e:	jmp    0x14003456a
   140034560:	mov    eax,DWORD PTR [rip+0x42d92]        # 0x1400772f8
   140034566:	mov    DWORD PTR [rcx],eax
   140034568:	xor    eax,eax
   14003456a:	add    rsp,0x28
   14003456e:	ret    
   14003456f:	int3   
   140034570:	sub    rsp,0x28
   140034574:	lea    eax,[rcx-0x4000]
   14003457a:	test   eax,0xffff3fff
   14003457f:	jne    0x140034593
   140034581:	cmp    ecx,0xc000
   140034587:	je     0x140034593
   140034589:	xchg   DWORD PTR [rip+0x42d69],ecx        # 0x1400772f8
   14003458f:	xor    eax,eax
   140034591:	jmp    0x1400345a8
   140034593:	call   0x140032c50
   140034598:	mov    DWORD PTR [rax],0x16
   14003459e:	call   0x1400307d0
   1400345a3:	mov    eax,0x16
   1400345a8:	add    rsp,0x28
   1400345ac:	ret    
   1400345ad:	int3   
   1400345ae:	int3   
   1400345af:	int3   
   1400345b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400345b5:	mov    QWORD PTR [rsp+0x10],rdi
   1400345ba:	mov    QWORD PTR [rsp+0x18],r14
   1400345bf:	movsxd r8,ecx
   1400345c2:	lea    rdi,[rip+0x426f7]        # 0x140076cc0
   1400345c9:	mov    r10,r8
   1400345cc:	mov    r14d,0x40000
   1400345d2:	sar    r10,0x6
   1400345d6:	and    r8d,0x3f
   1400345da:	shl    r8,0x6
   1400345de:	mov    r9,QWORD PTR [rdi+r10*8]
   1400345e2:	movzx  ecx,BYTE PTR [r9+r8*1+0x38]
   1400345e8:	mov    r11b,BYTE PTR [r9+r8*1+0x39]
   1400345ed:	mov    ebx,ecx
   1400345ef:	and    ebx,0x80
   1400345f5:	cmp    edx,0x4000
   1400345fb:	je     0x140034649
   1400345fd:	cmp    edx,0x8000
   140034603:	je     0x14003463f
   140034605:	lea    eax,[rdx-0x10000]
   14003460b:	test   eax,0xfffeffff
   140034610:	je     0x14003462b
   140034612:	cmp    edx,r14d
   140034615:	jne    0x14003465b
   140034617:	or     cl,0x80
   14003461a:	mov    BYTE PTR [r9+r8*1+0x38],cl
   14003461f:	mov    rax,QWORD PTR [rdi+r10*8]
   140034623:	mov    BYTE PTR [rax+r8*1+0x39],0x1
   140034629:	jmp    0x14003465b
   14003462b:	or     cl,0x80
   14003462e:	mov    BYTE PTR [r9+r8*1+0x38],cl
   140034633:	mov    rax,QWORD PTR [rdi+r10*8]
   140034637:	mov    BYTE PTR [rax+r8*1+0x39],0x2
   14003463d:	jmp    0x14003465b
   14003463f:	and    cl,0x7f
   140034642:	mov    BYTE PTR [r9+r8*1+0x38],cl
   140034647:	jmp    0x14003465b
   140034649:	or     cl,0x80
   14003464c:	mov    BYTE PTR [r9+r8*1+0x38],cl
   140034651:	mov    rcx,QWORD PTR [rdi+r10*8]
   140034655:	mov    BYTE PTR [rcx+r8*1+0x39],0x0
   14003465b:	test   ebx,ebx
   14003465d:	jne    0x140034666
   14003465f:	mov    eax,0x8000
   140034664:	jmp    0x14003467f
   140034666:	test   r11b,r11b
   140034669:	jne    0x140034672
   14003466b:	mov    eax,0x4000
   140034670:	jmp    0x14003467f
   140034672:	cmp    r11b,0x1
   140034676:	mov    eax,0x10000
   14003467b:	cmove  eax,r14d
   14003467f:	mov    rbx,QWORD PTR [rsp+0x8]
   140034684:	mov    rdi,QWORD PTR [rsp+0x10]
   140034689:	mov    r14,QWORD PTR [rsp+0x18]
   14003468e:	ret    
   14003468f:	int3   
   140034690:	mov    QWORD PTR [rsp+0x20],r9
   140034695:	push   rbx
   140034696:	sub    rsp,0x20
   14003469a:	mov    rbx,r9
   14003469d:	mov    rcx,r8
   1400346a0:	call   0x1400347f8
   1400346a5:	nop
   1400346a6:	mov    rax,QWORD PTR [rbx]
   1400346a9:	mov    rcx,QWORD PTR [rax]
   1400346ac:	and    DWORD PTR [rcx+0x3a8],0xffffffef
   1400346b3:	add    rsp,0x20
   1400346b7:	pop    rbx
   1400346b8:	ret    
   1400346b9:	int3   
   1400346ba:	int3   
   1400346bb:	int3   
   1400346bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400346c1:	mov    QWORD PTR [rsp+0x20],r9
   1400346c6:	push   rdi
   1400346c7:	sub    rsp,0x20
   1400346cb:	mov    rdi,r9
   1400346ce:	mov    rbx,r8
   1400346d1:	mov    ecx,DWORD PTR [rdx]
   1400346d3:	call   0x140035a44
   1400346d8:	nop
   1400346d9:	mov    rax,QWORD PTR [rbx+0x8]
   1400346dd:	mov    rdx,QWORD PTR [rax]
   1400346e0:	mov    rcx,QWORD PTR [rbx]
   1400346e3:	mov    rdx,QWORD PTR [rdx+0x90]
   1400346ea:	mov    rcx,QWORD PTR [rcx]
   1400346ed:	call   0x140034c28
   1400346f2:	mov    r8,QWORD PTR [rbx+0x20]
   1400346f6:	mov    rax,QWORD PTR [rbx+0x18]
   1400346fa:	mov    rcx,QWORD PTR [rbx]
   1400346fd:	mov    r8,QWORD PTR [r8]
   140034700:	mov    edx,DWORD PTR [rax]
   140034702:	mov    rcx,QWORD PTR [rcx]
   140034705:	call   0x1400353d0
   14003470a:	mov    rcx,QWORD PTR [rbx+0x10]
   14003470e:	mov    QWORD PTR [rcx],rax
   140034711:	test   rax,rax
   140034714:	je     0x1400347cd
   14003471a:	mov    rax,QWORD PTR [rbx+0x20]
   14003471e:	mov    rcx,QWORD PTR [rax]
   140034721:	test   rcx,rcx
   140034724:	je     0x140034753
   140034726:	lea    r8,[rip+0x3cd3b]        # 0x140071468
   14003472d:	sub    r8,rcx
   140034730:	movzx  eax,WORD PTR [rcx]
   140034733:	movzx  edx,WORD PTR [rcx+r8*1]
   140034738:	sub    eax,edx
   14003473a:	jne    0x140034744
   14003473c:	add    rcx,0x2
   140034740:	test   edx,edx
   140034742:	jne    0x140034730
   140034744:	test   eax,eax
   140034746:	je     0x140034753
   140034748:	mov    eax,0x1
   14003474d:	xchg   DWORD PTR [rip+0x42329],eax        # 0x140076a7c
   140034753:	mov    rdx,QWORD PTR [rbx]
   140034756:	mov    rax,QWORD PTR [rbx+0x8]
   14003475a:	mov    rcx,QWORD PTR [rax]
   14003475d:	add    rcx,0x90
   140034764:	mov    rdx,QWORD PTR [rdx]
   140034767:	call   0x1400416d0
   14003476c:	mov    rcx,QWORD PTR [rbx]
   14003476f:	mov    rcx,QWORD PTR [rcx]
   140034772:	call   0x1400415b8
   140034777:	mov    rax,QWORD PTR [rbx+0x8]
   14003477b:	mov    rdx,QWORD PTR [rax]
   14003477e:	test   BYTE PTR [rdx+0x3a8],0x2
   140034785:	jne    0x1400347e4
   140034787:	test   BYTE PTR [rip+0x3d372],0x1        # 0x140071b00
   14003478e:	jne    0x1400347e4
   140034790:	mov    rdx,QWORD PTR [rdx+0x90]
   140034797:	lea    rcx,[rip+0x42502]        # 0x140076ca0
   14003479e:	call   0x1400416d0
   1400347a3:	mov    rax,QWORD PTR [rip+0x424f6]        # 0x140076ca0
   1400347aa:	mov    rcx,QWORD PTR [rax+0xf8]
   1400347b1:	mov    QWORD PTR [rip+0x3c9f0],rcx        # 0x1400711a8
   1400347b8:	mov    rcx,QWORD PTR [rax]
   1400347bb:	mov    QWORD PTR [rip+0x3cb16],rcx        # 0x1400712d8
   1400347c2:	mov    ecx,DWORD PTR [rax+0x8]
   1400347c5:	mov    DWORD PTR [rip+0x3cca1],ecx        # 0x14007146c
   1400347cb:	jmp    0x1400347e4
   1400347cd:	mov    rcx,QWORD PTR [rbx]
   1400347d0:	mov    rcx,QWORD PTR [rcx]
   1400347d3:	call   0x1400415b8
   1400347d8:	mov    rcx,QWORD PTR [rbx]
   1400347db:	mov    rcx,QWORD PTR [rcx]
   1400347de:	call   0x1400413b8
   1400347e3:	nop
   1400347e4:	mov    ecx,DWORD PTR [rdi]
   1400347e6:	call   0x140035a98
   1400347eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400347f0:	add    rsp,0x20
   1400347f4:	pop    rdi
   1400347f5:	ret    
   1400347f6:	int3   
   1400347f7:	int3   
   1400347f8:	mov    QWORD PTR [rsp+0x20],rbx
   1400347fd:	push   rdi
   1400347fe:	sub    rsp,0x50
   140034802:	mov    rdi,rcx
   140034805:	mov    edx,0x158
   14003480a:	mov    ecx,0x1
   14003480f:	call   0x140035d88
   140034814:	mov    rbx,rax
   140034817:	xor    ecx,ecx
   140034819:	mov    rax,QWORD PTR [rdi]
   14003481c:	mov    QWORD PTR [rax],rbx
   14003481f:	call   0x140038c70
   140034824:	test   rbx,rbx
   140034827:	je     0x14003487b
   140034829:	mov    rax,QWORD PTR [rdi]
   14003482c:	lea    r9,[rsp+0x68]
   140034831:	mov    QWORD PTR [rsp+0x20],rax
   140034836:	lea    r8,[rsp+0x20]
   14003483b:	mov    rax,QWORD PTR [rdi+0x8]
   14003483f:	lea    rdx,[rsp+0x70]
   140034844:	mov    QWORD PTR [rsp+0x28],rax
   140034849:	lea    rcx,[rsp+0x60]
   14003484e:	mov    rax,QWORD PTR [rdi+0x10]
   140034852:	mov    QWORD PTR [rsp+0x30],rax
   140034857:	mov    rax,QWORD PTR [rdi+0x18]
   14003485b:	mov    QWORD PTR [rsp+0x38],rax
   140034860:	mov    rax,QWORD PTR [rdi+0x20]
   140034864:	mov    QWORD PTR [rsp+0x40],rax
   140034869:	mov    eax,0x4
   14003486e:	mov    DWORD PTR [rsp+0x68],eax
   140034872:	mov    DWORD PTR [rsp+0x70],eax
   140034876:	call   0x1400346bc
   14003487b:	mov    rbx,QWORD PTR [rsp+0x78]
   140034880:	add    rsp,0x50
   140034884:	pop    rdi
   140034885:	ret    
   140034886:	int3   
   140034887:	int3   
   140034888:	mov    QWORD PTR [rsp+0x8],rbx
   14003488d:	mov    QWORD PTR [rsp+0x10],rsi
   140034892:	push   rdi
   140034893:	sub    rsp,0x30
   140034897:	mov    rdi,rcx
   14003489a:	test   rcx,rcx
   14003489d:	jne    0x1400348b1
   14003489f:	xor    eax,eax
   1400348a1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400348a6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400348ab:	add    rsp,0x30
   1400348af:	pop    rdi
   1400348b0:	ret    
   1400348b1:	mov    edx,0x55
   1400348b6:	call   0x140032e04
   1400348bb:	mov    rsi,rax
   1400348be:	cmp    rax,0x55
   1400348c2:	jae    0x14003489f
   1400348c4:	lea    rcx,[rax*2+0x2]
   1400348cc:	call   0x140036600
   1400348d1:	mov    rbx,rax
   1400348d4:	test   rax,rax
   1400348d7:	je     0x14003489f
   1400348d9:	lea    rdx,[rsi+0x1]
   1400348dd:	mov    r8,rdi
   1400348e0:	mov    r9,rdx
   1400348e3:	mov    rcx,rax
   1400348e6:	call   0x14003fc14
   1400348eb:	test   eax,eax
   1400348ed:	jne    0x1400348f4
   1400348ef:	mov    rax,rbx
   1400348f2:	jmp    0x1400348a1
   1400348f4:	and    QWORD PTR [rsp+0x20],0x0
   1400348fa:	xor    r9d,r9d
   1400348fd:	xor    r8d,r8d
   140034900:	xor    edx,edx
   140034902:	xor    ecx,ecx
   140034904:	call   0x140030820
   140034909:	int3   
   14003490a:	int3   
   14003490b:	int3   
   14003490c:	mov    eax,0x1
   140034911:	xchg   DWORD PTR [rip+0x42165],eax        # 0x140076a7c
   140034917:	ret    
   140034918:	rex push rdi
   14003491a:	sub    rsp,0x20
   14003491e:	lea    rdi,[rip+0x3c9db]        # 0x140071300
   140034925:	cmp    QWORD PTR [rip+0x42374],rdi        # 0x140076ca0
   14003492c:	je     0x140034959
   14003492e:	mov    ecx,0x4
   140034933:	call   0x140035a44
   140034938:	nop
   140034939:	mov    rdx,rdi
   14003493c:	lea    rcx,[rip+0x4235d]        # 0x140076ca0
   140034943:	call   0x1400416d0
   140034948:	mov    QWORD PTR [rip+0x42351],rax        # 0x140076ca0
   14003494f:	mov    ecx,0x4
   140034954:	call   0x140035a98
   140034959:	add    rsp,0x20
   14003495d:	pop    rdi
   14003495e:	ret    
   14003495f:	int3   
   140034960:	mov    QWORD PTR [rsp+0x8],rbx
   140034965:	mov    QWORD PTR [rsp+0x10],rbp
   14003496a:	mov    QWORD PTR [rsp+0x18],rsi
   14003496f:	push   rdi
   140034970:	sub    rsp,0x30
   140034974:	mov    rbx,r8
   140034977:	mov    rdi,rdx
   14003497a:	mov    rsi,rcx
   14003497d:	call   0x140038cb0
   140034982:	xor    ebp,ebp
   140034984:	test   eax,eax
   140034986:	jne    0x1400349ed
   140034988:	lea    rax,[rbx+0x80]
   14003498f:	cmp    WORD PTR [rax],bp
   140034992:	je     0x1400349af
   140034994:	lea    r9,[rip+0x203d5]        # 0x140054d70
   14003499b:	mov    QWORD PTR [rsp+0x20],rax
   1400349a0:	lea    r8d,[rbp+0x2]
   1400349a4:	mov    rdx,rdi
   1400349a7:	mov    rcx,rsi
   1400349aa:	call   0x1400350e4
   1400349af:	lea    rax,[rbx+0x100]
   1400349b6:	cmp    WORD PTR [rax],bp
   1400349b9:	je     0x1400349d8
   1400349bb:	lea    r9,[rip+0x19956]        # 0x14004e318
   1400349c2:	mov    QWORD PTR [rsp+0x20],rax
   1400349c7:	mov    r8d,0x2
   1400349cd:	mov    rdx,rdi
   1400349d0:	mov    rcx,rsi
   1400349d3:	call   0x1400350e4
   1400349d8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400349dd:	mov    rbp,QWORD PTR [rsp+0x48]
   1400349e2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400349e7:	add    rsp,0x30
   1400349eb:	pop    rdi
   1400349ec:	ret    
   1400349ed:	xor    r9d,r9d
   1400349f0:	mov    QWORD PTR [rsp+0x20],rbp
   1400349f5:	xor    r8d,r8d
   1400349f8:	xor    edx,edx
   1400349fa:	xor    ecx,ecx
   1400349fc:	call   0x140030820
   140034a01:	int3   
   140034a02:	int3   
   140034a03:	int3   
   140034a04:	mov    QWORD PTR [rsp+0x8],rbx
   140034a09:	mov    QWORD PTR [rsp+0x10],rbp
   140034a0e:	mov    QWORD PTR [rsp+0x18],rsi
   140034a13:	push   rdi
   140034a14:	push   r14
   140034a16:	push   r15
   140034a18:	sub    rsp,0x30
   140034a1c:	mov    rbx,rdx
   140034a1f:	mov    r8d,0x1ca
   140034a25:	xor    edx,edx
   140034a27:	mov    rsi,rcx
   140034a2a:	call   0x14002a910
   140034a2f:	xor    r15d,r15d
   140034a32:	cmp    WORD PTR [rbx],r15w
   140034a36:	jne    0x140034a3f
   140034a38:	xor    eax,eax
   140034a3a:	jmp    0x140034b4c
   140034a3f:	cmp    WORD PTR [rbx],0x2e
   140034a43:	jne    0x140034a76
   140034a45:	lea    r8,[rbx+0x2]
   140034a49:	cmp    WORD PTR [r8],r15w
   140034a4d:	je     0x140034a76
   140034a4f:	mov    edx,0x10
   140034a54:	lea    rcx,[rsi+0x100]
   140034a5b:	lea    r9d,[rdx-0x1]
   140034a5f:	call   0x14003fc14
   140034a64:	test   eax,eax
   140034a66:	jne    0x140034b65
   140034a6c:	mov    WORD PTR [rsi+0x11e],r15w
   140034a74:	jmp    0x140034a38
   140034a76:	mov    ebp,r15d
   140034a79:	lea    rdx,[rip+0x202e8]        # 0x140054d68
   140034a80:	mov    rcx,rbx
   140034a83:	call   0x1400410d4
   140034a88:	test   rax,rax
   140034a8b:	je     0x140034b49
   140034a91:	lea    r14,[rbx+rax*2]
   140034a95:	movzx  edi,WORD PTR [r14]
   140034a99:	test   ebp,ebp
   140034a9b:	jne    0x140034acb
   140034a9d:	cmp    rax,0x40
   140034aa1:	jae    0x140034b49
   140034aa7:	cmp    di,0x2e
   140034aab:	je     0x140034b49
   140034ab1:	mov    r9,rax
   140034ab4:	lea    edx,[rbp+0x40]
   140034ab7:	mov    r8,rbx
   140034aba:	mov    rcx,rsi
   140034abd:	call   0x14003fc14
   140034ac2:	test   eax,eax
   140034ac4:	je     0x140034b2b
   140034ac6:	jmp    0x140034b7a
   140034acb:	cmp    ebp,0x1
   140034ace:	jne    0x140034afa
   140034ad0:	cmp    rax,0x40
   140034ad4:	jae    0x140034b49
   140034ad6:	cmp    di,0x5f
   140034ada:	je     0x140034b49
   140034adc:	lea    rcx,[rsi+0x80]
   140034ae3:	mov    r9,rax
   140034ae6:	mov    r8,rbx
   140034ae9:	lea    edx,[rbp+0x3f]
   140034aec:	call   0x14003fc14
   140034af1:	test   eax,eax
   140034af3:	je     0x140034b2b
   140034af5:	jmp    0x140034b8f
   140034afa:	cmp    ebp,0x2
   140034afd:	jne    0x140034b49
   140034aff:	cmp    rax,0x10
   140034b03:	jae    0x140034b49
   140034b05:	test   di,di
   140034b08:	je     0x140034b10
   140034b0a:	cmp    di,0x2c
   140034b0e:	jne    0x140034b49
   140034b10:	lea    rcx,[rsi+0x100]
   140034b17:	mov    r9,rax
   140034b1a:	mov    r8,rbx
   140034b1d:	mov    edx,0x10
   140034b22:	call   0x14003fc14
   140034b27:	test   eax,eax
   140034b29:	jne    0x140034ba4
   140034b2b:	cmp    di,0x2c
   140034b2f:	je     0x140034a38
   140034b35:	test   di,di
   140034b38:	je     0x140034a38
   140034b3e:	lea    rbx,[r14+0x2]
   140034b42:	inc    ebp
   140034b44:	jmp    0x140034a79
   140034b49:	or     eax,0xffffffff
   140034b4c:	mov    rbx,QWORD PTR [rsp+0x50]
   140034b51:	mov    rbp,QWORD PTR [rsp+0x58]
   140034b56:	mov    rsi,QWORD PTR [rsp+0x60]
   140034b5b:	add    rsp,0x30
   140034b5f:	pop    r15
   140034b61:	pop    r14
   140034b63:	pop    rdi
   140034b64:	ret    
   140034b65:	xor    r9d,r9d
   140034b68:	mov    QWORD PTR [rsp+0x20],r15
   140034b6d:	xor    r8d,r8d
   140034b70:	xor    edx,edx
   140034b72:	xor    ecx,ecx
   140034b74:	call   0x140030820
   140034b79:	int3   
   140034b7a:	xor    r9d,r9d
   140034b7d:	mov    QWORD PTR [rsp+0x20],r15
   140034b82:	xor    r8d,r8d
   140034b85:	xor    edx,edx
   140034b87:	xor    ecx,ecx
   140034b89:	call   0x140030820
   140034b8e:	int3   
   140034b8f:	xor    r9d,r9d
   140034b92:	mov    QWORD PTR [rsp+0x20],r15
   140034b97:	xor    r8d,r8d
   140034b9a:	xor    edx,edx
   140034b9c:	xor    ecx,ecx
   140034b9e:	call   0x140030820
   140034ba3:	int3   
   140034ba4:	xor    r9d,r9d
   140034ba7:	mov    QWORD PTR [rsp+0x20],r15
   140034bac:	xor    r8d,r8d
   140034baf:	xor    edx,edx
   140034bb1:	xor    ecx,ecx
   140034bb3:	call   0x140030820
   140034bb8:	int3   
   140034bb9:	int3   
   140034bba:	int3   
   140034bbb:	int3   
   140034bbc:	rex push rbx
   140034bbe:	sub    rsp,0x20
   140034bc2:	mov    ebx,ecx
   140034bc4:	call   0x140039130
   140034bc9:	mov    r8d,DWORD PTR [rax+0x3a8]
   140034bd0:	mov    edx,r8d
   140034bd3:	and    dl,0x2
   140034bd6:	neg    dl
   140034bd8:	sbb    ecx,ecx
   140034bda:	cmp    ebx,0xffffffff
   140034bdd:	je     0x140034c15
   140034bdf:	test   ebx,ebx
   140034be1:	je     0x140034c1c
   140034be3:	cmp    ebx,0x1
   140034be6:	je     0x140034c08
   140034be8:	cmp    ebx,0x2
   140034beb:	je     0x140034c02
   140034bed:	call   0x140032c50
   140034bf2:	mov    DWORD PTR [rax],0x16
   140034bf8:	call   0x1400307d0
   140034bfd:	or     eax,0xffffffff
   140034c00:	jmp    0x140034c1f
   140034c02:	and    r8d,0xfffffffd
   140034c06:	jmp    0x140034c0c
   140034c08:	or     r8d,0x2
   140034c0c:	mov    DWORD PTR [rax+0x3a8],r8d
   140034c13:	jmp    0x140034c1c
   140034c15:	or     DWORD PTR [rip+0x3cee4],0xffffffff        # 0x140071b00
   140034c1c:	lea    eax,[rcx+0x2]
   140034c1f:	add    rsp,0x20
   140034c23:	pop    rbx
   140034c24:	ret    
   140034c25:	int3   
   140034c26:	int3   
   140034c27:	int3   
   140034c28:	sub    rsp,0x28
   140034c2c:	test   rdx,rdx
   140034c2f:	je     0x140034ce1
   140034c35:	test   rcx,rcx
   140034c38:	je     0x140034ce1
   140034c3e:	cmp    rcx,rdx
   140034c41:	je     0x140034ce1
   140034c47:	mov    eax,0x2
   140034c4c:	mov    r8,rcx
   140034c4f:	lea    r9d,[rax+0x7e]
   140034c53:	movups xmm0,XMMWORD PTR [rdx]
   140034c56:	movups XMMWORD PTR [r8],xmm0
   140034c5a:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140034c5e:	movups XMMWORD PTR [r8+0x10],xmm1
   140034c63:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140034c67:	movups XMMWORD PTR [r8+0x20],xmm0
   140034c6c:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140034c70:	movups XMMWORD PTR [r8+0x30],xmm1
   140034c75:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140034c79:	movups XMMWORD PTR [r8+0x40],xmm0
   140034c7e:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140034c82:	movups XMMWORD PTR [r8+0x50],xmm1
   140034c87:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140034c8b:	movups XMMWORD PTR [r8+0x60],xmm0
   140034c90:	add    r8,r9
   140034c93:	movups xmm1,XMMWORD PTR [rdx+0x70]
   140034c97:	add    rdx,r9
   140034c9a:	movups XMMWORD PTR [r8-0x10],xmm1
   140034c9f:	sub    rax,0x1
   140034ca3:	jne    0x140034c53
   140034ca5:	movups xmm0,XMMWORD PTR [rdx]
   140034ca8:	movups XMMWORD PTR [r8],xmm0
   140034cac:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140034cb0:	movups XMMWORD PTR [r8+0x10],xmm1
   140034cb5:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140034cb9:	movups XMMWORD PTR [r8+0x20],xmm0
   140034cbe:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140034cc2:	movups XMMWORD PTR [r8+0x30],xmm1
   140034cc7:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140034ccb:	movups XMMWORD PTR [r8+0x40],xmm0
   140034cd0:	mov    rax,QWORD PTR [rdx+0x50]
   140034cd4:	mov    QWORD PTR [r8+0x50],rax
   140034cd8:	and    DWORD PTR [rcx+0x10],0x0
   140034cdc:	call   0x14004132c
   140034ce1:	add    rsp,0x28
   140034ce5:	ret    
   140034ce6:	int3   
   140034ce7:	int3   
   140034ce8:	rex push rbp
   140034cea:	push   rbx
   140034ceb:	push   rsi
   140034cec:	push   rdi
   140034ced:	push   r12
   140034cef:	push   r13
   140034cf1:	push   r14
   140034cf3:	push   r15
   140034cf5:	lea    rbp,[rsp-0x148]
   140034cfd:	sub    rsp,0x248
   140034d04:	mov    rax,QWORD PTR [rip+0x3c345]        # 0x140071050
   140034d0b:	xor    rax,rsp
   140034d0e:	mov    QWORD PTR [rbp+0x130],rax
   140034d15:	mov    r14,QWORD PTR [rbp+0x1b8]
   140034d1c:	xor    esi,esi
   140034d1e:	mov    QWORD PTR [rsp+0x48],rdx
   140034d23:	mov    rbx,r8
   140034d26:	mov    QWORD PTR [rsp+0x58],rbx
   140034d2b:	mov    r12,r9
   140034d2e:	mov    r15,rdx
   140034d31:	mov    rdi,rcx
   140034d34:	test   rcx,rcx
   140034d37:	jne    0x140034d5e
   140034d39:	xor    eax,eax
   140034d3b:	mov    rcx,QWORD PTR [rbp+0x130]
   140034d42:	xor    rcx,rsp
   140034d45:	call   0x140025df0
   140034d4a:	add    rsp,0x248
   140034d51:	pop    r15
   140034d53:	pop    r14
   140034d55:	pop    r13
   140034d57:	pop    r12
   140034d59:	pop    rdi
   140034d5a:	pop    rsi
   140034d5b:	pop    rbx
   140034d5c:	pop    rbp
   140034d5d:	ret    
   140034d5e:	call   0x140039130
   140034d63:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140034d6a:	mov    r9d,0x55
   140034d70:	mov    DWORD PTR [rsp+0x30],esi
   140034d74:	lea    rcx,[rax+0xb8]
   140034d7b:	mov    QWORD PTR [rsp+0x38],rcx
   140034d80:	lea    r13,[rax+0x1c2]
   140034d87:	lea    rcx,[rax+0xbc]
   140034d8e:	add    rax,0x2f0
   140034d94:	mov    QWORD PTR [rsp+0x40],rcx
   140034d99:	mov    r8,rax
   140034d9c:	mov    rcx,r12
   140034d9f:	mov    QWORD PTR [rsp+0x50],rax
   140034da4:	call   0x14003fc14
   140034da9:	test   eax,eax
   140034dab:	jne    0x1400350cf
   140034db1:	cmp    WORD PTR [rdi],0x43
   140034db5:	jne    0x140034de7
   140034db7:	cmp    WORD PTR [rdi+0x2],si
   140034dbb:	jne    0x140034de7
   140034dbd:	lea    r8,[rip+0x1ff9c]        # 0x140054d60
   140034dc4:	mov    rdx,rbx
   140034dc7:	mov    rcx,r15
   140034dca:	call   0x140038cb0
   140034dcf:	test   eax,eax
   140034dd1:	jne    0x140035027
   140034dd7:	test   r14,r14
   140034dda:	je     0x140034ddf
   140034ddc:	mov    DWORD PTR [r14],esi
   140034ddf:	mov    rax,r15
   140034de2:	jmp    0x140034d3b
   140034de7:	or     rbx,0xffffffffffffffff
   140034deb:	mov    rsi,rbx
   140034dee:	xor    r9d,r9d
   140034df1:	inc    rsi
   140034df4:	cmp    WORD PTR [rdi+rsi*2],r9w
   140034df9:	jne    0x140034df1
   140034dfb:	cmp    rsi,0x83
   140034e02:	jae    0x140034e50
   140034e04:	mov    r8,rdi
   140034e07:	mov    rax,r13
   140034e0a:	sub    r8,r13
   140034e0d:	movzx  ecx,WORD PTR [rax]
   140034e10:	movzx  edx,WORD PTR [rax+r8*1]
   140034e15:	sub    ecx,edx
   140034e17:	jne    0x140034e21
   140034e19:	add    rax,0x2
   140034e1d:	test   edx,edx
   140034e1f:	jne    0x140034e0d
   140034e21:	test   ecx,ecx
   140034e23:	je     0x140034fcb
   140034e29:	mov    rax,QWORD PTR [rsp+0x40]
   140034e2e:	mov    r8,rdi
   140034e31:	sub    r8,rax
   140034e34:	movzx  ecx,WORD PTR [rax]
   140034e37:	movzx  edx,WORD PTR [rax+r8*1]
   140034e3c:	sub    ecx,edx
   140034e3e:	jne    0x140034e48
   140034e40:	add    rax,0x2
   140034e44:	test   edx,edx
   140034e46:	jne    0x140034e34
   140034e48:	test   ecx,ecx
   140034e4a:	je     0x140034fcb
   140034e50:	call   0x14003d54c
   140034e55:	xor    ecx,ecx
   140034e57:	mov    rdx,rdi
   140034e5a:	mov    r15d,ecx
   140034e5d:	test   al,al
   140034e5f:	lea    rcx,[rsp+0x60]
   140034e64:	sete   r15b
   140034e68:	call   0x140034a04
   140034e6d:	test   eax,eax
   140034e6f:	jne    0x140034eee
   140034e71:	test   r15d,r15d
   140034e74:	lea    r8,[rsp+0x60]
   140034e79:	mov    r15,QWORD PTR [rsp+0x38]
   140034e7e:	lea    rcx,[rsp+0x60]
   140034e83:	mov    rdx,r15
   140034e86:	je     0x140034e8f
   140034e88:	call   0x140042990
   140034e8d:	jmp    0x140034e94
   140034e8f:	call   0x140041fa4
   140034e94:	test   eax,eax
   140034e96:	je     0x140034ef3
   140034e98:	lea    r8,[rsp+0x60]
   140034e9d:	mov    edx,0x83
   140034ea2:	mov    rcx,r13
   140034ea5:	call   0x140034960
   140034eaa:	xor    r15d,r15d
   140034ead:	test   r12,r12
   140034eb0:	je     0x140034f91
   140034eb6:	lea    rax,[rbp+0x80]
   140034ebd:	inc    rbx
   140034ec0:	cmp    WORD PTR [rax+rbx*2],r15w
   140034ec5:	jne    0x140034ebd
   140034ec7:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140034ece:	lea    r9,[rbx+0x1]
   140034ed2:	lea    r8,[rbp+0x80]
   140034ed9:	mov    rcx,r12
   140034edc:	call   0x14003fc14
   140034ee1:	test   eax,eax
   140034ee3:	je     0x140034f91
   140034ee9:	jmp    0x14003503c
   140034eee:	mov    r15,QWORD PTR [rsp+0x38]
   140034ef3:	mov    rcx,rdi
   140034ef6:	call   0x14003d300
   140034efb:	test   eax,eax
   140034efd:	je     0x140034ff8
   140034f03:	mov    r9d,0x2
   140034f09:	lea    r8,[rsp+0x30]
   140034f0e:	mov    edx,0x20001004
   140034f13:	mov    rcx,rdi
   140034f16:	call   0x14003d17c
   140034f1b:	test   eax,eax
   140034f1d:	je     0x140034f27
   140034f1f:	mov    eax,DWORD PTR [rsp+0x30]
   140034f23:	test   eax,eax
   140034f25:	jne    0x140034f31
   140034f27:	call   QWORD PTR [rip+0x163c3]        # 0x14004b2f0
   140034f2d:	mov    DWORD PTR [rsp+0x30],eax
   140034f31:	movzx  eax,ax
   140034f34:	lea    rbx,[rsi+0x1]
   140034f38:	mov    r9,rbx
   140034f3b:	mov    DWORD PTR [r15],eax
   140034f3e:	mov    r8,rdi
   140034f41:	mov    edx,0x83
   140034f46:	mov    rcx,r13
   140034f49:	call   0x14003fc14
   140034f4e:	xor    r15d,r15d
   140034f51:	test   eax,eax
   140034f53:	jne    0x1400350a5
   140034f59:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140034f60:	mov    r9,rbx
   140034f63:	mov    r8,rdi
   140034f66:	mov    rcx,r12
   140034f69:	call   0x14003fc14
   140034f6e:	test   eax,eax
   140034f70:	jne    0x140035090
   140034f76:	mov    rcx,QWORD PTR [rsp+0x50]
   140034f7b:	lea    edx,[rax+0x55]
   140034f7e:	mov    r9,rbx
   140034f81:	mov    r8,rdi
   140034f84:	call   0x14003fc14
   140034f89:	test   eax,eax
   140034f8b:	jne    0x14003507b
   140034f91:	cmp    WORD PTR [rdi],r15w
   140034f95:	je     0x140034fbd
   140034f97:	mov    eax,0x83
   140034f9c:	cmp    rsi,rax
   140034f9f:	jae    0x140034fbd
   140034fa1:	mov    rcx,QWORD PTR [rsp+0x40]
   140034fa6:	lea    r9,[rsi+0x1]
   140034faa:	mov    r8,rdi
   140034fad:	mov    edx,eax
   140034faf:	call   0x14003fc14
   140034fb4:	test   eax,eax
   140034fb6:	je     0x140034fc6
   140034fb8:	jmp    0x140035051
   140034fbd:	mov    rax,QWORD PTR [rsp+0x40]
   140034fc2:	mov    WORD PTR [rax],r15w
   140034fc6:	mov    r15,QWORD PTR [rsp+0x48]
   140034fcb:	xor    ebx,ebx
   140034fcd:	test   r14,r14
   140034fd0:	je     0x140034fdc
   140034fd2:	mov    rax,QWORD PTR [rsp+0x38]
   140034fd7:	mov    ecx,DWORD PTR [rax]
   140034fd9:	mov    DWORD PTR [r14],ecx
   140034fdc:	mov    rdx,QWORD PTR [rsp+0x58]
   140034fe1:	mov    r8,r13
   140034fe4:	mov    rcx,r15
   140034fe7:	call   0x140038cb0
   140034fec:	test   eax,eax
   140034fee:	jne    0x140035066
   140034ff0:	mov    rax,r13
   140034ff3:	jmp    0x140034d3b
   140034ff8:	xor    edi,edi
   140034ffa:	inc    rbx
   140034ffd:	cmp    WORD PTR [r12+rbx*2],di
   140035002:	jne    0x140034ffa
   140035004:	mov    rcx,QWORD PTR [rsp+0x50]
   140035009:	lea    r9,[rbx+0x1]
   14003500d:	mov    r8,r12
   140035010:	mov    edx,0x55
   140035015:	call   0x14003fc14
   14003501a:	test   eax,eax
   14003501c:	je     0x140034d39
   140035022:	jmp    0x1400350ba
   140035027:	xor    r9d,r9d
   14003502a:	mov    QWORD PTR [rsp+0x20],rsi
   14003502f:	xor    r8d,r8d
   140035032:	xor    edx,edx
   140035034:	xor    ecx,ecx
   140035036:	call   0x140030820
   14003503b:	int3   
   14003503c:	xor    r9d,r9d
   14003503f:	mov    QWORD PTR [rsp+0x20],r15
   140035044:	xor    r8d,r8d
   140035047:	xor    edx,edx
   140035049:	xor    ecx,ecx
   14003504b:	call   0x140030820
   140035050:	int3   
   140035051:	xor    r9d,r9d
   140035054:	mov    QWORD PTR [rsp+0x20],r15
   140035059:	xor    r8d,r8d
   14003505c:	xor    edx,edx
   14003505e:	xor    ecx,ecx
   140035060:	call   0x140030820
   140035065:	int3   
   140035066:	xor    r9d,r9d
   140035069:	mov    QWORD PTR [rsp+0x20],rbx
   14003506e:	xor    r8d,r8d
   140035071:	xor    edx,edx
   140035073:	xor    ecx,ecx
   140035075:	call   0x140030820
   14003507a:	int3   
   14003507b:	xor    r9d,r9d
   14003507e:	mov    QWORD PTR [rsp+0x20],r15
   140035083:	xor    r8d,r8d
   140035086:	xor    edx,edx
   140035088:	xor    ecx,ecx
   14003508a:	call   0x140030820
   14003508f:	int3   
   140035090:	xor    r9d,r9d
   140035093:	mov    QWORD PTR [rsp+0x20],r15
   140035098:	xor    r8d,r8d
   14003509b:	xor    edx,edx
   14003509d:	xor    ecx,ecx
   14003509f:	call   0x140030820
   1400350a4:	int3   
   1400350a5:	xor    r9d,r9d
   1400350a8:	mov    QWORD PTR [rsp+0x20],r15
   1400350ad:	xor    r8d,r8d
   1400350b0:	xor    edx,edx
   1400350b2:	xor    ecx,ecx
   1400350b4:	call   0x140030820
   1400350b9:	int3   
   1400350ba:	xor    r9d,r9d
   1400350bd:	mov    QWORD PTR [rsp+0x20],rdi
   1400350c2:	xor    r8d,r8d
   1400350c5:	xor    edx,edx
   1400350c7:	xor    ecx,ecx
   1400350c9:	call   0x140030820
   1400350ce:	int3   
   1400350cf:	xor    r9d,r9d
   1400350d2:	mov    QWORD PTR [rsp+0x20],rsi
   1400350d7:	xor    r8d,r8d
   1400350da:	xor    edx,edx
   1400350dc:	xor    ecx,ecx
   1400350de:	call   0x140030820
   1400350e3:	int3   
   1400350e4:	test   r8d,r8d
   1400350e7:	jle    0x140035132
   1400350e9:	mov    DWORD PTR [rsp+0x18],r8d
   1400350ee:	mov    QWORD PTR [rsp+0x20],r9
   1400350f3:	push   rbx
   1400350f4:	push   rbp
   1400350f5:	push   rsi
   1400350f6:	push   rdi
   1400350f7:	sub    rsp,0x38
   1400350fb:	lea    rdi,[rsp+0x78]
   140035100:	xor    ebx,ebx
   140035102:	add    rdi,0xfffffffffffffff8
   140035106:	mov    rsi,rdx
   140035109:	mov    rbp,rcx
   14003510c:	lea    rdi,[rdi+0x8]
   140035110:	mov    rdx,rsi
   140035113:	mov    r8,QWORD PTR [rdi]
   140035116:	mov    rcx,rbp
   140035119:	call   0x14003fb94
   14003511e:	test   eax,eax
   140035120:	jne    0x140035133
   140035122:	inc    ebx
   140035124:	cmp    ebx,DWORD PTR [rsp+0x70]
   140035128:	jl     0x14003510c
   14003512a:	add    rsp,0x38
   14003512e:	pop    rdi
   14003512f:	pop    rsi
   140035130:	pop    rbp
   140035131:	pop    rbx
   140035132:	ret    
   140035133:	and    QWORD PTR [rsp+0x20],0x0
   140035139:	xor    r9d,r9d
   14003513c:	xor    r8d,r8d
   14003513f:	xor    edx,edx
   140035141:	xor    ecx,ecx
   140035143:	call   0x140030820
   140035148:	int3   
   140035149:	int3   
   14003514a:	int3   
   14003514b:	int3   
   14003514c:	mov    QWORD PTR [rsp+0x10],rdx
   140035151:	mov    DWORD PTR [rsp+0x8],ecx
   140035155:	push   rbp
   140035156:	mov    rbp,rsp
   140035159:	sub    rsp,0x60
   14003515d:	and    QWORD PTR [rbp-0x40],0x0
   140035162:	and    QWORD PTR [rbp-0x38],0x0
   140035167:	cmp    ecx,0x5
   14003516a:	jbe    0x140035180
   14003516c:	call   0x140032c50
   140035171:	mov    DWORD PTR [rax],0x16
   140035177:	call   0x1400307d0
   14003517c:	xor    eax,eax
   14003517e:	jmp    0x1400351e2
   140035180:	call   0x140039130
   140035185:	mov    QWORD PTR [rbp+0x28],rax
   140035189:	call   0x140041660
   14003518e:	mov    rax,QWORD PTR [rbp+0x28]
   140035192:	lea    r9,[rbp-0x30]
   140035196:	lea    r8,[rbp-0x28]
   14003519a:	lea    rdx,[rbp+0x20]
   14003519e:	lea    rcx,[rbp+0x20]
   1400351a2:	or     DWORD PTR [rax+0x3a8],0x10
   1400351a9:	lea    rax,[rbp+0x28]
   1400351ad:	mov    QWORD PTR [rbp-0x30],rax
   1400351b1:	lea    rax,[rbp-0x38]
   1400351b5:	mov    QWORD PTR [rbp-0x28],rax
   1400351b9:	lea    rax,[rbp+0x28]
   1400351bd:	mov    QWORD PTR [rbp-0x20],rax
   1400351c1:	lea    rax,[rbp-0x40]
   1400351c5:	mov    QWORD PTR [rbp-0x18],rax
   1400351c9:	lea    rax,[rbp+0x10]
   1400351cd:	mov    QWORD PTR [rbp-0x10],rax
   1400351d1:	lea    rax,[rbp+0x18]
   1400351d5:	mov    QWORD PTR [rbp-0x8],rax
   1400351d9:	call   0x140034690
   1400351de:	mov    rax,QWORD PTR [rbp-0x40]
   1400351e2:	add    rsp,0x60
   1400351e6:	pop    rbp
   1400351e7:	ret    
   1400351e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400351ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400351f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400351f7:	push   rdi
   1400351f8:	push   r12
   1400351fa:	push   r13
   1400351fc:	push   r14
   1400351fe:	push   r15
   140035200:	sub    rsp,0x30
   140035204:	mov    rbx,rcx
   140035207:	mov    edi,0x1
   14003520c:	mov    ecx,0x6a6
   140035211:	call   0x140036600
   140035216:	xor    r12d,r12d
   140035219:	mov    rsi,rax
   14003521c:	test   rax,rax
   14003521f:	jne    0x14003523e
   140035221:	mov    rbx,QWORD PTR [rsp+0x60]
   140035226:	mov    rbp,QWORD PTR [rsp+0x68]
   14003522b:	mov    rsi,QWORD PTR [rsp+0x70]
   140035230:	add    rsp,0x30
   140035234:	pop    r15
   140035236:	pop    r14
   140035238:	pop    r13
   14003523a:	pop    r12
   14003523c:	pop    rdi
   14003523d:	ret    
   14003523e:	lea    r14,[rax+0x4]
   140035242:	mov    r13d,0x351
   140035248:	mov    WORD PTR [r14],r12w
   14003524c:	mov    r8d,0x3
   140035252:	mov    DWORD PTR [rax],edi
   140035254:	mov    edx,r13d
   140035257:	mov    rax,QWORD PTR [rbx+0x48]
   14003525b:	mov    rcx,r14
   14003525e:	mov    r9,QWORD PTR [rip+0x1f973]        # 0x140054bd8
   140035265:	mov    QWORD PTR [rsp+0x28],rax
   14003526a:	lea    rax,[rip+0x1faeb]        # 0x140054d5c
   140035271:	mov    QWORD PTR [rsp+0x20],rax
   140035276:	call   0x1400350e4
   14003527b:	lea    rbp,[rip+0x1f956]        # 0x140054bd8
   140035282:	lea    r15,[rbx+0x48]
   140035286:	lea    r8,[rip+0x1facb]        # 0x140054d58
   14003528d:	mov    rdx,r13
   140035290:	mov    rcx,r14
   140035293:	call   0x14003fb94
   140035298:	test   eax,eax
   14003529a:	jne    0x1400353b8
   1400352a0:	mov    rax,QWORD PTR [r15]
   1400352a3:	lea    r9,[r15+0x20]
   1400352a7:	mov    rdx,QWORD PTR [r9]
   1400352aa:	sub    rdx,rax
   1400352ad:	movzx  r8d,WORD PTR [rax]
   1400352b1:	movzx  ecx,WORD PTR [rax+rdx*1]
   1400352b5:	sub    r8d,ecx
   1400352b8:	jne    0x1400352c2
   1400352ba:	add    rax,0x2
   1400352be:	test   ecx,ecx
   1400352c0:	jne    0x1400352ad
   1400352c2:	mov    rax,QWORD PTR [r9]
   1400352c5:	test   r8d,r8d
   1400352c8:	mov    QWORD PTR [rsp+0x28],rax
   1400352cd:	mov    r15,r9
   1400352d0:	cmovne edi,r12d
   1400352d4:	lea    rax,[rip+0x1fa81]        # 0x140054d5c
   1400352db:	add    rbp,0x18
   1400352df:	mov    QWORD PTR [rsp+0x20],rax
   1400352e4:	mov    r8d,0x3
   1400352ea:	mov    rdx,r13
   1400352ed:	mov    rcx,r14
   1400352f0:	mov    r9,QWORD PTR [rbp+0x0]
   1400352f4:	call   0x1400350e4
   1400352f9:	lea    rax,[rip+0x1f938]        # 0x140054c38
   140035300:	cmp    rbp,rax
   140035303:	jl     0x140035286
   140035305:	test   edi,edi
   140035307:	jne    0x14003535c
   140035309:	mov    rcx,QWORD PTR [rbx+0x38]
   14003530d:	or     edi,0xffffffff
   140035310:	test   rcx,rcx
   140035313:	je     0x140035328
   140035315:	mov    eax,edi
   140035317:	lock xadd DWORD PTR [rcx],eax
   14003531b:	add    eax,edi
   14003531d:	jne    0x140035328
   14003531f:	mov    rcx,QWORD PTR [rbx+0x38]
   140035323:	call   0x140038c70
   140035328:	mov    rdx,QWORD PTR [rbx+0x30]
   14003532c:	test   rdx,rdx
   14003532f:	je     0x140035344
   140035331:	mov    ecx,edi
   140035333:	lock xadd DWORD PTR [rdx],ecx
   140035337:	add    ecx,edi
   140035339:	jne    0x140035344
   14003533b:	mov    rcx,QWORD PTR [rbx+0x30]
   14003533f:	call   0x140038c70
   140035344:	mov    QWORD PTR [rbx+0x30],r12
   140035348:	mov    rax,r14
   14003534b:	mov    QWORD PTR [rbx+0x20],r12
   14003534f:	mov    QWORD PTR [rbx+0x38],rsi
   140035353:	mov    QWORD PTR [rbx+0x28],r14
   140035357:	jmp    0x140035221
   14003535c:	mov    rcx,rsi
   14003535f:	call   0x140038c70
   140035364:	mov    rcx,QWORD PTR [rbx+0x38]
   140035368:	or     edi,0xffffffff
   14003536b:	test   rcx,rcx
   14003536e:	je     0x140035383
   140035370:	mov    eax,edi
   140035372:	lock xadd DWORD PTR [rcx],eax
   140035376:	add    eax,edi
   140035378:	jne    0x140035383
   14003537a:	mov    rcx,QWORD PTR [rbx+0x38]
   14003537e:	call   0x140038c70
   140035383:	mov    rcx,QWORD PTR [rbx+0x30]
   140035387:	test   rcx,rcx
   14003538a:	je     0x14003539f
   14003538c:	mov    eax,edi
   14003538e:	lock xadd DWORD PTR [rcx],eax
   140035392:	add    eax,edi
   140035394:	jne    0x14003539f
   140035396:	mov    rcx,QWORD PTR [rbx+0x30]
   14003539a:	call   0x140038c70
   14003539f:	mov    rax,QWORD PTR [rbx+0x68]
   1400353a3:	mov    QWORD PTR [rbx+0x30],r12
   1400353a7:	mov    QWORD PTR [rbx+0x20],r12
   1400353ab:	mov    QWORD PTR [rbx+0x38],r12
   1400353af:	mov    QWORD PTR [rbx+0x28],r12
   1400353b3:	jmp    0x140035221
   1400353b8:	xor    r9d,r9d
   1400353bb:	mov    QWORD PTR [rsp+0x20],r12
   1400353c0:	xor    r8d,r8d
   1400353c3:	xor    edx,edx
   1400353c5:	xor    ecx,ecx
   1400353c7:	call   0x140030820
   1400353cc:	int3   
   1400353cd:	int3   
   1400353ce:	int3   
   1400353cf:	int3   
   1400353d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400353d5:	push   rbp
   1400353d6:	push   rsi
   1400353d7:	push   rdi
   1400353d8:	push   r12
   1400353da:	push   r13
   1400353dc:	push   r14
   1400353de:	push   r15
   1400353e0:	sub    rsp,0x200
   1400353e7:	mov    rax,QWORD PTR [rip+0x3bc62]        # 0x140071050
   1400353ee:	xor    rax,rsp
   1400353f1:	mov    QWORD PTR [rsp+0x1f0],rax
   1400353f9:	xor    r13d,r13d
   1400353fc:	mov    rbx,r8
   1400353ff:	mov    rdi,rcx
   140035402:	test   edx,edx
   140035404:	je     0x140035426
   140035406:	test   rbx,rbx
   140035409:	je     0x140035415
   14003540b:	call   0x140035658
   140035410:	jmp    0x140035574
   140035415:	movsxd rax,edx
   140035418:	shl    rax,0x5
   14003541c:	mov    rax,QWORD PTR [rax+rcx*1+0x28]
   140035421:	jmp    0x140035574
   140035426:	mov    ebp,0x1
   14003542b:	mov    esi,r13d
   14003542e:	test   rbx,rbx
   140035431:	je     0x14003556f
   140035437:	cmp    WORD PTR [r8],0x4c
   14003543c:	jne    0x1400355a3
   140035442:	cmp    WORD PTR [r8+0x2],0x43
   140035448:	jne    0x1400355a3
   14003544e:	cmp    WORD PTR [r8+0x4],0x5f
   140035454:	jne    0x1400355a3
   14003545a:	lea    rdx,[rip+0x1f8ef]        # 0x140054d50
   140035461:	mov    rcx,rbx
   140035464:	call   0x140041140
   140035469:	mov    r14,rax
   14003546c:	test   rax,rax
   14003546f:	je     0x14003559f
   140035475:	mov    rbp,rax
   140035478:	sub    rbp,rbx
   14003547b:	sar    rbp,1
   14003547e:	je     0x14003559f
   140035484:	cmp    WORD PTR [rax],0x3b
   140035488:	je     0x14003559f
   14003548e:	mov    r12d,0x1
   140035494:	lea    r15,[rip+0x1f73d]        # 0x140054bd8
   14003549b:	mov    rcx,QWORD PTR [r15]
   14003549e:	mov    r8,rbp
   1400354a1:	mov    rdx,rbx
   1400354a4:	call   0x140041114
   1400354a9:	test   eax,eax
   1400354ab:	jne    0x1400354c3
   1400354ad:	mov    rcx,QWORD PTR [r15]
   1400354b0:	or     rax,0xffffffffffffffff
   1400354b4:	inc    rax
   1400354b7:	cmp    WORD PTR [rcx+rax*2],r13w
   1400354bc:	jne    0x1400354b4
   1400354be:	cmp    rbp,rax
   1400354c1:	je     0x1400354d6
   1400354c3:	inc    r12d
   1400354c6:	lea    rax,[rip+0x1f76b]        # 0x140054c38
   1400354cd:	add    r15,0x18
   1400354d1:	cmp    r15,rax
   1400354d4:	jle    0x14003549b
   1400354d6:	add    r14,0x2
   1400354da:	lea    rdx,[rip+0x1f877]        # 0x140054d58
   1400354e1:	mov    rcx,r14
   1400354e4:	call   0x1400410d4
   1400354e9:	mov    rbx,rax
   1400354ec:	test   rax,rax
   1400354ef:	jne    0x1400354fc
   1400354f1:	cmp    WORD PTR [r14],0x3b
   1400354f6:	jne    0x14003559f
   1400354fc:	cmp    r12d,0x5
   140035500:	jg     0x14003554c
   140035502:	mov    r9,rax
   140035505:	lea    rcx,[rsp+0x30]
   14003550a:	mov    r8,r14
   14003550d:	mov    edx,0x83
   140035512:	call   0x14003fc14
   140035517:	test   eax,eax
   140035519:	jne    0x140035642
   14003551f:	lea    rax,[rbx+rbx*1]
   140035523:	cmp    rax,0x106
   140035529:	jae    0x14003563c
   14003552f:	lea    r8,[rsp+0x30]
   140035534:	mov    WORD PTR [rsp+rax*1+0x30],r13w
   14003553a:	mov    edx,r12d
   14003553d:	mov    rcx,rdi
   140035540:	call   0x140035658
   140035545:	test   rax,rax
   140035548:	je     0x14003554c
   14003554a:	inc    esi
   14003554c:	lea    rbx,[r14+rbx*2]
   140035550:	cmp    WORD PTR [rbx],r13w
   140035554:	je     0x140035564
   140035556:	add    rbx,0x2
   14003555a:	cmp    WORD PTR [rbx],r13w
   14003555e:	jne    0x14003545a
   140035564:	test   esi,esi
   140035566:	je     0x140035634
   14003556c:	mov    rcx,rdi
   14003556f:	call   0x1400351e8
   140035574:	mov    rcx,QWORD PTR [rsp+0x1f0]
   14003557c:	xor    rcx,rsp
   14003557f:	call   0x140025df0
   140035584:	mov    rbx,QWORD PTR [rsp+0x258]
   14003558c:	add    rsp,0x200
   140035593:	pop    r15
   140035595:	pop    r14
   140035597:	pop    r13
   140035599:	pop    r12
   14003559b:	pop    rdi
   14003559c:	pop    rsi
   14003559d:	pop    rbp
   14003559e:	ret    
   14003559f:	xor    eax,eax
   1400355a1:	jmp    0x140035574
   1400355a3:	mov    QWORD PTR [rsp+0x28],r13
   1400355a8:	lea    r9,[rsp+0x140]
   1400355b0:	mov    r8d,0x83
   1400355b6:	mov    QWORD PTR [rsp+0x20],0x55
   1400355bf:	lea    rdx,[rsp+0x30]
   1400355c4:	mov    rcx,rbx
   1400355c7:	call   0x140034ce8
   1400355cc:	test   rax,rax
   1400355cf:	je     0x140035574
   1400355d1:	mov    ebx,r13d
   1400355d4:	lea    r14,[rdi+0x28]
   1400355d8:	test   ebx,ebx
   1400355da:	je     0x14003561c
   1400355dc:	mov    rdx,QWORD PTR [r14]
   1400355df:	lea    rax,[rsp+0x30]
   1400355e4:	sub    rdx,rax
   1400355e7:	movzx  ecx,WORD PTR [rax]
   1400355ea:	movzx  r8d,WORD PTR [rax+rdx*1]
   1400355ef:	sub    ecx,r8d
   1400355f2:	jne    0x1400355fd
   1400355f4:	add    rax,0x2
   1400355f8:	test   r8d,r8d
   1400355fb:	jne    0x1400355e7
   1400355fd:	test   ecx,ecx
   1400355ff:	je     0x14003561a
   140035601:	lea    r8,[rsp+0x30]
   140035606:	mov    edx,ebx
   140035608:	mov    rcx,rdi
   14003560b:	call   0x140035658
   140035610:	test   rax,rax
   140035613:	jne    0x14003561a
   140035615:	mov    ebp,r13d
   140035618:	jmp    0x14003561c
   14003561a:	inc    esi
   14003561c:	inc    ebx
   14003561e:	add    r14,0x20
   140035622:	cmp    ebx,0x5
   140035625:	jle    0x1400355d8
   140035627:	test   ebp,ebp
   140035629:	jne    0x14003556c
   14003562f:	jmp    0x140035564
   140035634:	mov    rax,r13
   140035637:	jmp    0x140035574
   14003563c:	call   0x140026914
   140035641:	int3   
   140035642:	xor    r9d,r9d
   140035645:	mov    QWORD PTR [rsp+0x20],r13
   14003564a:	xor    r8d,r8d
   14003564d:	xor    edx,edx
   14003564f:	xor    ecx,ecx
   140035651:	call   0x140030820
   140035656:	int3   
   140035657:	int3   
   140035658:	mov    QWORD PTR [rsp+0x20],rbx
   14003565d:	push   rbp
   14003565e:	push   rsi
   14003565f:	push   rdi
   140035660:	push   r12
   140035662:	push   r13
   140035664:	push   r14
   140035666:	push   r15
   140035668:	lea    rbp,[rsp-0x230]
   140035670:	sub    rsp,0x330
   140035677:	mov    rax,QWORD PTR [rip+0x3b9d2]        # 0x140071050
   14003567e:	xor    rax,rsp
   140035681:	mov    QWORD PTR [rbp+0x220],rax
   140035688:	mov    rbx,r8
   14003568b:	movsxd r12,edx
   14003568e:	mov    rdi,rcx
   140035691:	call   0x140039130
   140035696:	lea    r9,[rbp+0x170]
   14003569d:	mov    r8d,0x83
   1400356a3:	lea    rdx,[rsp+0x60]
   1400356a8:	mov    rcx,rbx
   1400356ab:	lea    r15,[rax+0x2c8]
   1400356b2:	lea    rax,[rsp+0x40]
   1400356b7:	mov    QWORD PTR [rsp+0x28],rax
   1400356bc:	mov    QWORD PTR [rsp+0x20],0x55
   1400356c5:	call   0x140034ce8
   1400356ca:	xor    r10d,r10d
   1400356cd:	test   rax,rax
   1400356d0:	jne    0x1400356fe
   1400356d2:	xor    eax,eax
   1400356d4:	mov    rcx,QWORD PTR [rbp+0x220]
   1400356db:	xor    rcx,rsp
   1400356de:	call   0x140025df0
   1400356e3:	mov    rbx,QWORD PTR [rsp+0x388]
   1400356eb:	add    rsp,0x330
   1400356f2:	pop    r15
   1400356f4:	pop    r14
   1400356f6:	pop    r13
   1400356f8:	pop    r12
   1400356fa:	pop    rdi
   1400356fb:	pop    rsi
   1400356fc:	pop    rbp
   1400356fd:	ret    
   1400356fe:	mov    rsi,r12
   140035701:	lea    rcx,[rsp+0x60]
   140035706:	shl    rsi,0x5
   14003570a:	mov    rax,QWORD PTR [rsi+rdi*1+0x28]
   14003570f:	mov    r9,rax
   140035712:	sub    r9,rcx
   140035715:	movzx  edx,WORD PTR [rcx]
   140035718:	movzx  r8d,WORD PTR [rcx+r9*1]
   14003571d:	sub    edx,r8d
   140035720:	jne    0x14003572b
   140035722:	add    rcx,0x2
   140035726:	test   r8d,r8d
   140035729:	jne    0x140035715
   14003572b:	test   edx,edx
   14003572d:	je     0x1400356d4
   14003572f:	lea    rax,[rsp+0x60]
   140035734:	or     rbx,0xffffffffffffffff
   140035738:	inc    rbx
   14003573b:	cmp    WORD PTR [rax+rbx*2],r10w
   140035740:	jne    0x140035738
   140035742:	lea    rcx,[rbx*2+0x6]
   14003574a:	call   0x140036600
   14003574f:	mov    r13,rax
   140035752:	test   rax,rax
   140035755:	je     0x1400356d2
   14003575b:	mov    rcx,QWORD PTR [rsi+rdi*1+0x28]
   140035760:	lea    r8,[rsp+0x60]
   140035765:	mov    QWORD PTR [rsp+0x48],rcx
   14003576a:	lea    rdx,[rbx+0x1]
   14003576e:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140035776:	mov    QWORD PTR [rsp+0x50],rcx
   14003577b:	mov    ecx,DWORD PTR [rdi+0xc]
   14003577e:	mov    DWORD PTR [rsp+0x44],ecx
   140035782:	lea    rcx,[rax+0x4]
   140035786:	call   0x140038cb0
   14003578b:	xor    ebx,ebx
   14003578d:	test   eax,eax
   14003578f:	jne    0x140035981
   140035795:	cmp    WORD PTR [rsp+0x60],0x43
   14003579b:	lea    rax,[r13+0x4]
   14003579f:	mov    QWORD PTR [rsi+rdi*1+0x28],rax
   1400357a4:	jne    0x1400357b7
   1400357a6:	cmp    WORD PTR [rsp+0x62],bx
   1400357ab:	jne    0x1400357b7
   1400357ad:	mov    QWORD PTR [rdi+r12*8+0x128],rbx
   1400357b5:	jmp    0x1400357cb
   1400357b7:	lea    rcx,[rbp+0x170]
   1400357be:	call   0x140034888
   1400357c3:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   1400357cb:	cmp    r12d,0x2
   1400357cf:	jne    0x1400358a6
   1400357d5:	mov    eax,DWORD PTR [rsp+0x40]
   1400357d9:	mov    r8d,ebx
   1400357dc:	mov    DWORD PTR [rdi+0xc],eax
   1400357df:	mov    rdx,rbx
   1400357e2:	mov    rcx,QWORD PTR [r15+0x20]
   1400357e6:	mov    eax,DWORD PTR [r15+rdx*8]
   1400357ea:	cmp    DWORD PTR [rdi+0xc],eax
   1400357ed:	je     0x140035808
   1400357ef:	mov    rax,QWORD PTR [r15+rdx*8]
   1400357f3:	inc    r8d
   1400357f6:	mov    QWORD PTR [r15+rdx*8],rcx
   1400357fa:	inc    rdx
   1400357fd:	mov    rcx,rax
   140035800:	cmp    rdx,0x5
   140035804:	jl     0x1400357e6
   140035806:	jmp    0x14003581b
   140035808:	test   r8d,r8d
   14003580b:	je     0x14003581b
   14003580d:	movsxd rdx,r8d
   140035810:	mov    rax,QWORD PTR [r15+rdx*8]
   140035814:	mov    QWORD PTR [r15],rax
   140035817:	mov    QWORD PTR [r15+rdx*8],rcx
   14003581b:	cmp    r8d,0x5
   14003581f:	jne    0x14003589d
   140035821:	mov    eax,DWORD PTR [rdi+0xc]
   140035824:	lea    r9d,[r8+0x7a]
   140035828:	mov    DWORD PTR [rsp+0x30],0x1
   140035830:	lea    r8,[rip+0x1f499]        # 0x140054cd0
   140035837:	mov    DWORD PTR [rsp+0x28],eax
   14003583b:	lea    edx,[r9-0x7e]
   14003583f:	lea    rax,[rbp+0x70]
   140035843:	xor    ecx,ecx
   140035845:	mov    QWORD PTR [rsp+0x20],rax
   14003584a:	call   0x140041178
   14003584f:	test   eax,eax
   140035851:	je     0x140035893
   140035853:	mov    edx,ebx
   140035855:	lea    rcx,[rbp+0x70]
   140035859:	mov    eax,0x1ff
   14003585e:	inc    edx
   140035860:	and    WORD PTR [rcx],ax
   140035863:	lea    rcx,[rcx+0x2]
   140035867:	movsxd rax,edx
   14003586a:	cmp    rax,0x7f
   14003586e:	jb     0x140035859
   140035870:	mov    rdx,QWORD PTR [rip+0x3ba59]        # 0x1400712d0
   140035877:	lea    rcx,[rbp+0x70]
   14003587b:	mov    r8d,0xfe
   140035881:	call   0x14002aac0
   140035886:	mov    ecx,ebx
   140035888:	test   eax,eax
   14003588a:	sete   cl
   14003588d:	mov    DWORD PTR [r15+0x4],ecx
   140035891:	jmp    0x140035897
   140035893:	mov    DWORD PTR [r15+0x4],ebx
   140035897:	mov    eax,DWORD PTR [rdi+0xc]
   14003589a:	mov    DWORD PTR [r15],eax
   14003589d:	mov    eax,DWORD PTR [r15+0x4]
   1400358a1:	mov    DWORD PTR [rdi+0x1c],eax
   1400358a4:	jmp    0x1400358c2
   1400358a6:	cmp    r12d,0x1
   1400358aa:	jne    0x1400358b5
   1400358ac:	mov    eax,DWORD PTR [rsp+0x40]
   1400358b0:	mov    DWORD PTR [rdi+0x14],eax
   1400358b3:	jmp    0x1400358c2
   1400358b5:	cmp    r12d,0x5
   1400358b9:	jne    0x1400358c2
   1400358bb:	mov    eax,DWORD PTR [rsp+0x40]
   1400358bf:	mov    DWORD PTR [rdi+0x18],eax
   1400358c2:	lea    rax,[r12+r12*2]
   1400358c6:	lea    rbx,[rip+0x1f303]        # 0x140054bd0
   1400358cd:	mov    rbx,QWORD PTR [rbx+rax*8]
   1400358d1:	mov    rcx,rbx
   1400358d4:	call   QWORD PTR [rip+0x15b7e]        # 0x14004b458
   1400358da:	mov    rcx,rdi
   1400358dd:	call   rbx
   1400358df:	xor    ebx,ebx
   1400358e1:	test   eax,eax
   1400358e3:	je     0x14003591d
   1400358e5:	mov    rax,QWORD PTR [rsp+0x48]
   1400358ea:	mov    QWORD PTR [rsi+rdi*1+0x28],rax
   1400358ef:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   1400358f7:	call   0x140038c70
   1400358fc:	mov    rax,QWORD PTR [rsp+0x50]
   140035901:	mov    rcx,r13
   140035904:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   14003590c:	call   0x140038c70
   140035911:	mov    eax,DWORD PTR [rsp+0x44]
   140035915:	mov    DWORD PTR [rdi+0xc],eax
   140035918:	jmp    0x1400356d2
   14003591d:	lea    rcx,[rip+0x3bb44]        # 0x140071468
   140035924:	cmp    QWORD PTR [rsp+0x48],rcx
   140035929:	je     0x14003596a
   14003592b:	mov    rax,QWORD PTR [rsi+rdi*1+0x38]
   140035930:	or     ecx,0xffffffff
   140035933:	lock xadd DWORD PTR [rax],ecx
   140035937:	cmp    ecx,0x1
   14003593a:	jne    0x14003596a
   14003593c:	mov    rcx,QWORD PTR [rsi+rdi*1+0x38]
   140035941:	call   0x140038c70
   140035946:	mov    rcx,QWORD PTR [rsi+rdi*1+0x30]
   14003594b:	call   0x140038c70
   140035950:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140035958:	call   0x140038c70
   14003595d:	mov    QWORD PTR [rsi+rdi*1+0x28],rbx
   140035962:	mov    QWORD PTR [rdi+r12*8+0x128],rbx
   14003596a:	mov    DWORD PTR [r13+0x0],0x1
   140035972:	mov    rax,QWORD PTR [rsi+rdi*1+0x28]
   140035977:	mov    QWORD PTR [rsi+rdi*1+0x38],r13
   14003597c:	jmp    0x1400356d4
   140035981:	xor    r9d,r9d
   140035984:	mov    QWORD PTR [rsp+0x20],rbx
   140035989:	xor    r8d,r8d
   14003598c:	xor    edx,edx
   14003598e:	xor    ecx,ecx
   140035990:	call   0x140030820
   140035995:	int3   
   140035996:	int3   
   140035997:	int3   
   140035998:	mov    eax,DWORD PTR [rip+0x410e2]        # 0x140076a80
   14003599e:	ret    
   14003599f:	int3   
   1400359a0:	sub    rsp,0x28
   1400359a4:	cmp    ecx,0x1
   1400359a7:	jbe    0x1400359be
   1400359a9:	call   0x140032c50
   1400359ae:	mov    DWORD PTR [rax],0x16
   1400359b4:	call   0x1400307d0
   1400359b9:	or     eax,0xffffffff
   1400359bc:	jmp    0x1400359c6
   1400359be:	xchg   DWORD PTR [rip+0x410bc],ecx        # 0x140076a80
   1400359c4:	mov    eax,ecx
   1400359c6:	add    rsp,0x28
   1400359ca:	ret    
   1400359cb:	int3   
   1400359cc:	lea    rax,[rip+0x410b1]        # 0x140076a84
   1400359d3:	ret    
   1400359d4:	rex push rbx
   1400359d6:	sub    rsp,0x20
   1400359da:	call   0x140039130
   1400359df:	mov    rbx,QWORD PTR [rax+0x18]
   1400359e3:	test   rbx,rbx
   1400359e6:	je     0x1400359f5
   1400359e8:	mov    rcx,rbx
   1400359eb:	call   QWORD PTR [rip+0x15a67]        # 0x14004b458
   1400359f1:	call   rbx
   1400359f3:	jmp    0x1400359f5
   1400359f5:	call   0x1400365a8
   1400359fa:	nop
   1400359fb:	int3   
   1400359fc:	rex push rbx
   1400359fe:	sub    rsp,0x20
   140035a02:	xor    ebx,ebx
   140035a04:	lea    rdx,[rip+0x41085]        # 0x140076a90
   140035a0b:	xor    r8d,r8d
   140035a0e:	lea    rcx,[rbx+rbx*4]
   140035a12:	lea    rcx,[rdx+rcx*8]
   140035a16:	mov    edx,0xfa0
   140035a1b:	call   0x14003d288
   140035a20:	test   eax,eax
   140035a22:	je     0x140035a35
   140035a24:	inc    DWORD PTR [rip+0x4126e]        # 0x140076c98
   140035a2a:	inc    ebx
   140035a2c:	cmp    ebx,0xd
   140035a2f:	jb     0x140035a04
   140035a31:	mov    al,0x1
   140035a33:	jmp    0x140035a3e
   140035a35:	xor    ecx,ecx
   140035a37:	call   0x140035a60
   140035a3c:	xor    al,al
   140035a3e:	add    rsp,0x20
   140035a42:	pop    rbx
   140035a43:	ret    
   140035a44:	movsxd rax,ecx
   140035a47:	lea    rcx,[rax+rax*4]
   140035a4b:	lea    rax,[rip+0x4103e]        # 0x140076a90
   140035a52:	lea    rcx,[rax+rcx*8]
   140035a56:	rex.W jmp QWORD PTR [rip+0x156c3]        # 0x14004b120
   140035a5d:	int3   
   140035a5e:	int3   
   140035a5f:	int3   
   140035a60:	rex push rbx
   140035a62:	sub    rsp,0x20
   140035a66:	mov    ebx,DWORD PTR [rip+0x4122c]        # 0x140076c98
   140035a6c:	jmp    0x140035a8b
   140035a6e:	lea    rax,[rip+0x4101b]        # 0x140076a90
   140035a75:	dec    ebx
   140035a77:	lea    rcx,[rbx+rbx*4]
   140035a7b:	lea    rcx,[rax+rcx*8]
   140035a7f:	call   QWORD PTR [rip+0x155d3]        # 0x14004b058
   140035a85:	dec    DWORD PTR [rip+0x4120d]        # 0x140076c98
   140035a8b:	test   ebx,ebx
   140035a8d:	jne    0x140035a6e
   140035a8f:	mov    al,0x1
   140035a91:	add    rsp,0x20
   140035a95:	pop    rbx
   140035a96:	ret    
   140035a97:	int3   
   140035a98:	movsxd rax,ecx
   140035a9b:	lea    rcx,[rax+rax*4]
   140035a9f:	lea    rax,[rip+0x40fea]        # 0x140076a90
   140035aa6:	lea    rcx,[rax+rcx*8]
   140035aaa:	rex.W jmp QWORD PTR [rip+0x155b7]        # 0x14004b068
   140035ab1:	int3   
   140035ab2:	int3   
   140035ab3:	int3   
   140035ab4:	lea    rcx,[rip+0x41075]        # 0x140076b30
   140035abb:	rex.W jmp QWORD PTR [rip+0x1565e]        # 0x14004b120
   140035ac2:	int3   
   140035ac3:	int3   
   140035ac4:	lea    rcx,[rip+0x41065]        # 0x140076b30
   140035acb:	rex.W jmp QWORD PTR [rip+0x15596]        # 0x14004b068
   140035ad2:	int3   
   140035ad3:	int3   
   140035ad4:	mov    QWORD PTR [rsp+0x8],rbx
   140035ad9:	mov    QWORD PTR [rsp+0x18],rbp
   140035ade:	mov    QWORD PTR [rsp+0x20],rsi
   140035ae3:	push   rdi
   140035ae4:	sub    rsp,0x30
   140035ae8:	xor    edi,edi
   140035aea:	mov    rsi,rdx
   140035aed:	mov    ebp,ecx
   140035aef:	test   rdx,rdx
   140035af2:	jne    0x140035b0e
   140035af4:	call   0x14003514c
   140035af9:	mov    rbx,QWORD PTR [rsp+0x40]
   140035afe:	mov    rbp,QWORD PTR [rsp+0x50]
   140035b03:	mov    rsi,QWORD PTR [rsp+0x58]
   140035b08:	add    rsp,0x30
   140035b0c:	pop    rdi
   140035b0d:	ret    
   140035b0e:	mov    r9,rdx
   140035b11:	mov    QWORD PTR [rsp+0x20],0x7fffffff
   140035b1a:	xor    edx,edx
   140035b1c:	lea    rcx,[rsp+0x48]
   140035b21:	xor    r8d,r8d
   140035b24:	call   0x140042f2c
   140035b29:	cmp    eax,0x16
   140035b2c:	je     0x140035ba4
   140035b2e:	cmp    eax,0x22
   140035b31:	je     0x140035ba4
   140035b33:	mov    rcx,QWORD PTR [rsp+0x48]
   140035b38:	mov    edx,0x2
   140035b3d:	call   0x140035d88
   140035b42:	mov    rbx,rax
   140035b45:	test   rax,rax
   140035b48:	je     0x140035b7f
   140035b4a:	mov    r8,QWORD PTR [rsp+0x48]
   140035b4f:	mov    r9,rsi
   140035b52:	or     QWORD PTR [rsp+0x20],0xffffffffffffffff
   140035b58:	mov    rdx,rax
   140035b5b:	xor    ecx,ecx
   140035b5d:	call   0x140042f2c
   140035b62:	test   eax,eax
   140035b64:	je     0x140035b72
   140035b66:	cmp    eax,0x16
   140035b69:	je     0x140035b8f
   140035b6b:	cmp    eax,0x22
   140035b6e:	jne    0x140035b7f
   140035b70:	jmp    0x140035b8f
   140035b72:	mov    rdx,rbx
   140035b75:	mov    ecx,ebp
   140035b77:	call   0x14003514c
   140035b7c:	mov    rdi,rax
   140035b7f:	mov    rcx,rbx
   140035b82:	call   0x140038c70
   140035b87:	mov    rax,rdi
   140035b8a:	jmp    0x140035af9
   140035b8f:	xor    r9d,r9d
   140035b92:	mov    QWORD PTR [rsp+0x20],rdi
   140035b97:	xor    r8d,r8d
   140035b9a:	xor    edx,edx
   140035b9c:	xor    ecx,ecx
   140035b9e:	call   0x140030820
   140035ba3:	int3   
   140035ba4:	xor    r9d,r9d
   140035ba7:	mov    QWORD PTR [rsp+0x20],rdi
   140035bac:	xor    r8d,r8d
   140035baf:	xor    edx,edx
   140035bb1:	xor    ecx,ecx
   140035bb3:	call   0x140030820
   140035bb8:	int3   
   140035bb9:	int3   
   140035bba:	int3   
   140035bbb:	int3   
   140035bbc:	mov    QWORD PTR [rsp+0x8],rbx
   140035bc1:	mov    QWORD PTR [rsp+0x10],rsi
   140035bc6:	mov    QWORD PTR [rsp+0x20],rdi
   140035bcb:	push   r13
   140035bcd:	push   r14
   140035bcf:	push   r15
   140035bd1:	sub    rsp,0x40
   140035bd5:	movsxd r15,ecx
   140035bd8:	mov    ecx,r15d
   140035bdb:	call   0x140035ad4
   140035be0:	mov    rbx,rax
   140035be3:	test   rax,rax
   140035be6:	jne    0x140035bef
   140035be8:	xor    eax,eax
   140035bea:	jmp    0x140035d3e
   140035bef:	call   0x140039130
   140035bf4:	mov    r13,rax
   140035bf7:	mov    rcx,QWORD PTR [rax+0x90]
   140035bfe:	mov    QWORD PTR [rsp+0x30],rcx
   140035c03:	mov    rcx,QWORD PTR [rax+0x88]
   140035c0a:	mov    QWORD PTR [rsp+0x38],rcx
   140035c0f:	and    QWORD PTR [rsp+0x70],0x0
   140035c15:	lea    rax,[rsp+0x30]
   140035c1a:	mov    QWORD PTR [rsp+0x28],rax
   140035c1f:	and    QWORD PTR [rsp+0x20],0x0
   140035c25:	mov    r9,rbx
   140035c28:	xor    r8d,r8d
   140035c2b:	xor    edx,edx
   140035c2d:	lea    rcx,[rsp+0x70]
   140035c32:	call   0x140043280
   140035c37:	cmp    eax,0x16
   140035c3a:	je     0x140035d56
   140035c40:	cmp    eax,0x22
   140035c43:	je     0x140035d56
   140035c49:	test   eax,eax
   140035c4b:	jne    0x140035be8
   140035c4d:	mov    rcx,QWORD PTR [rsp+0x70]
   140035c52:	add    rcx,0x4
   140035c56:	call   0x140036600
   140035c5b:	mov    rsi,rax
   140035c5e:	test   rax,rax
   140035c61:	je     0x140035be8
   140035c63:	lea    r14,[rax+0x4]
   140035c67:	lea    rax,[rsp+0x30]
   140035c6c:	mov    QWORD PTR [rsp+0x28],rax
   140035c71:	or     QWORD PTR [rsp+0x20],0xffffffffffffffff
   140035c77:	mov    r9,rbx
   140035c7a:	mov    r8,QWORD PTR [rsp+0x70]
   140035c7f:	mov    rdx,r14
   140035c82:	xor    ecx,ecx
   140035c84:	call   0x140043280
   140035c89:	cmp    eax,0x16
   140035c8c:	je     0x140035d40
   140035c92:	cmp    eax,0x22
   140035c95:	je     0x140035d40
   140035c9b:	test   eax,eax
   140035c9d:	je     0x140035cac
   140035c9f:	mov    rcx,rsi
   140035ca2:	call   0x140038c70
   140035ca7:	jmp    0x140035be8
   140035cac:	mov    rdi,QWORD PTR [rsp+0x30]
   140035cb1:	mov    ecx,0x4
   140035cb6:	call   0x140035a44
   140035cbb:	nop
   140035cbc:	mov    rbx,r15
   140035cbf:	shl    rbx,0x5
   140035cc3:	mov    rcx,QWORD PTR [rbx+rdi*1+0x30]
   140035cc8:	test   rcx,rcx
   140035ccb:	je     0x140035ce9
   140035ccd:	or     eax,0xffffffff
   140035cd0:	lock xadd DWORD PTR [rcx],eax
   140035cd4:	sub    eax,0x1
   140035cd7:	jne    0x140035ce9
   140035cd9:	mov    rcx,QWORD PTR [rbx+rdi*1+0x30]
   140035cde:	call   0x140038c70
   140035ce3:	and    QWORD PTR [rbx+rdi*1+0x30],0x0
   140035ce9:	test   BYTE PTR [r13+0x3a8],0x2
   140035cf1:	jne    0x140035d22
   140035cf3:	test   BYTE PTR [rip+0x3be06],0x1        # 0x140071b00
   140035cfa:	jne    0x140035d22
   140035cfc:	mov    rcx,QWORD PTR [rbx+rdi*1+0x30]
   140035d01:	test   rcx,rcx
   140035d04:	je     0x140035d22
   140035d06:	or     eax,0xffffffff
   140035d09:	lock xadd DWORD PTR [rcx],eax
   140035d0d:	sub    eax,0x1
   140035d10:	jne    0x140035d22
   140035d12:	mov    rcx,QWORD PTR [rbx+rdi*1+0x30]
   140035d17:	call   0x140038c70
   140035d1c:	and    QWORD PTR [rbx+rdi*1+0x30],0x0
   140035d22:	mov    edx,DWORD PTR [rdi+0x10]
   140035d25:	mov    DWORD PTR [rsi],edx
   140035d27:	mov    QWORD PTR [rbx+rdi*1+0x30],rsi
   140035d2c:	mov    QWORD PTR [rbx+rdi*1+0x20],r14
   140035d31:	mov    ecx,0x4
   140035d36:	call   0x140035a98
   140035d3b:	mov    rax,r14
   140035d3e:	jmp    0x140035d6c
   140035d40:	and    QWORD PTR [rsp+0x20],0x0
   140035d46:	xor    r9d,r9d
   140035d49:	xor    r8d,r8d
   140035d4c:	xor    edx,edx
   140035d4e:	xor    ecx,ecx
   140035d50:	call   0x140030820
   140035d55:	int3   
   140035d56:	and    QWORD PTR [rsp+0x20],0x0
   140035d5c:	xor    r9d,r9d
   140035d5f:	xor    r8d,r8d
   140035d62:	xor    edx,edx
   140035d64:	xor    ecx,ecx
   140035d66:	call   0x140030820
   140035d6b:	int3   
   140035d6c:	mov    rbx,QWORD PTR [rsp+0x60]
   140035d71:	mov    rsi,QWORD PTR [rsp+0x68]
   140035d76:	mov    rdi,QWORD PTR [rsp+0x78]
   140035d7b:	add    rsp,0x40
   140035d7f:	pop    r15
   140035d81:	pop    r14
   140035d83:	pop    r13
   140035d85:	ret    
   140035d86:	int3   
   140035d87:	int3   
   140035d88:	rex push rbx
   140035d8a:	sub    rsp,0x20
   140035d8e:	mov    r8,rdx
   140035d91:	mov    rbx,rcx
   140035d94:	test   rcx,rcx
   140035d97:	je     0x140035da7
   140035d99:	xor    edx,edx
   140035d9b:	lea    rax,[rdx-0x20]
   140035d9f:	div    rbx
   140035da2:	cmp    rax,r8
   140035da5:	jb     0x140035dea
   140035da7:	imul   rbx,r8
   140035dab:	mov    eax,0x1
   140035db0:	test   rbx,rbx
   140035db3:	cmove  rbx,rax
   140035db7:	jmp    0x140035dce
   140035db9:	call   0x140035998
   140035dbe:	test   eax,eax
   140035dc0:	je     0x140035dea
   140035dc2:	mov    rcx,rbx
   140035dc5:	call   0x140033098
   140035dca:	test   eax,eax
   140035dcc:	je     0x140035dea
   140035dce:	mov    rcx,QWORD PTR [rip+0x414fb]        # 0x1400772d0
   140035dd5:	mov    r8,rbx
   140035dd8:	mov    edx,0x8
   140035ddd:	call   QWORD PTR [rip+0x15515]        # 0x14004b2f8
   140035de3:	test   rax,rax
   140035de6:	je     0x140035db9
   140035de8:	jmp    0x140035df7
   140035dea:	call   0x140032c50
   140035def:	mov    DWORD PTR [rax],0xc
   140035df5:	xor    eax,eax
   140035df7:	add    rsp,0x20
   140035dfb:	pop    rbx
   140035dfc:	ret    
   140035dfd:	int3   
   140035dfe:	int3   
   140035dff:	int3   
   140035e00:	sub    rsp,0x28
   140035e04:	call   0x140039130
   140035e09:	lea    rdx,[rsp+0x30]
   140035e0e:	mov    rcx,QWORD PTR [rax+0x90]
   140035e15:	mov    QWORD PTR [rsp+0x30],rcx
   140035e1a:	mov    rcx,rax
   140035e1d:	call   0x1400392c4
   140035e22:	mov    rax,QWORD PTR [rsp+0x30]
   140035e27:	mov    rax,QWORD PTR [rax]
   140035e2a:	add    rsp,0x28
   140035e2e:	ret    
   140035e2f:	int3   
   140035e30:	mov    QWORD PTR [rsp+0x8],rbx
   140035e35:	mov    QWORD PTR [rsp+0x10],rbp
   140035e3a:	mov    QWORD PTR [rsp+0x18],rsi
   140035e3f:	push   rdi
   140035e40:	sub    rsp,0x30
   140035e44:	xor    ebp,ebp
   140035e46:	mov    rdi,rcx
   140035e49:	test   rcx,rcx
   140035e4c:	jne    0x140035e65
   140035e4e:	xor    eax,eax
   140035e50:	mov    rbx,QWORD PTR [rsp+0x40]
   140035e55:	mov    rbp,QWORD PTR [rsp+0x48]
   140035e5a:	mov    rsi,QWORD PTR [rsp+0x50]
   140035e5f:	add    rsp,0x30
   140035e63:	pop    rdi
   140035e64:	ret    
   140035e65:	or     rbx,0xffffffffffffffff
   140035e69:	inc    rbx
   140035e6c:	cmp    WORD PTR [rcx+rbx*2],bp
   140035e70:	jne    0x140035e69
   140035e72:	inc    rbx
   140035e75:	lea    rcx,[rbx+rbx*1]
   140035e79:	call   0x140032ff4
   140035e7e:	mov    rsi,rax
   140035e81:	test   rax,rax
   140035e84:	je     0x140035e4e
   140035e86:	mov    r8,rdi
   140035e89:	mov    rdx,rbx
   140035e8c:	mov    rcx,rax
   140035e8f:	call   0x140038cb0
   140035e94:	test   eax,eax
   140035e96:	jne    0x140035e9d
   140035e98:	mov    rax,rsi
   140035e9b:	jmp    0x140035e50
   140035e9d:	xor    r9d,r9d
   140035ea0:	mov    QWORD PTR [rsp+0x20],rbp
   140035ea5:	xor    r8d,r8d
   140035ea8:	xor    edx,edx
   140035eaa:	xor    ecx,ecx
   140035eac:	call   0x140030820
   140035eb1:	int3   
   140035eb2:	int3   
   140035eb3:	int3   
   140035eb4:	sub    rsp,0x28
   140035eb8:	call   0x140039130
   140035ebd:	lea    rdx,[rsp+0x30]
   140035ec2:	mov    rcx,QWORD PTR [rax+0x90]
   140035ec9:	mov    QWORD PTR [rsp+0x30],rcx
   140035ece:	mov    rcx,rax
   140035ed1:	call   0x1400392c4
   140035ed6:	mov    rax,QWORD PTR [rsp+0x30]
   140035edb:	mov    eax,DWORD PTR [rax+0xc]
   140035ede:	add    rsp,0x28
   140035ee2:	ret    
   140035ee3:	int3   
   140035ee4:	sub    rsp,0x28
   140035ee8:	call   0x140039130
   140035eed:	lea    rdx,[rsp+0x30]
   140035ef2:	mov    rcx,QWORD PTR [rax+0x90]
   140035ef9:	mov    QWORD PTR [rsp+0x30],rcx
   140035efe:	mov    rcx,rax
   140035f01:	call   0x1400392c4
   140035f06:	mov    rax,QWORD PTR [rsp+0x30]
   140035f0b:	add    rax,0x128
   140035f11:	add    rsp,0x28
   140035f15:	ret    
   140035f16:	int3   
   140035f17:	int3   
   140035f18:	sub    rsp,0x28
   140035f1c:	call   0x140039130
   140035f21:	lea    rdx,[rsp+0x30]
   140035f26:	mov    rcx,QWORD PTR [rax+0x90]
   140035f2d:	mov    QWORD PTR [rsp+0x30],rcx
   140035f32:	mov    rcx,rax
   140035f35:	call   0x1400392c4
   140035f3a:	mov    rax,QWORD PTR [rsp+0x30]
   140035f3f:	mov    eax,DWORD PTR [rax+0x8]
   140035f42:	add    rsp,0x28
   140035f46:	ret    
   140035f47:	int3   
   140035f48:	mov    r11,rsp
   140035f4b:	mov    QWORD PTR [r11+0x10],rbx
   140035f4f:	mov    QWORD PTR [r11+0x18],rbp
   140035f53:	mov    QWORD PTR [r11+0x20],rsi
   140035f57:	push   rdi
   140035f58:	push   r12
   140035f5a:	push   r13
   140035f5c:	push   r14
   140035f5e:	push   r15
   140035f60:	sub    rsp,0xa0
   140035f67:	mov    rax,QWORD PTR [rip+0x3b0e2]        # 0x140071050
   140035f6e:	xor    rax,rsp
   140035f71:	mov    QWORD PTR [rsp+0x98],rax
   140035f79:	mov    r8,QWORD PTR [rcx+0x138]
   140035f80:	xor    ebx,ebx
   140035f82:	mov    QWORD PTR [r11-0x58],rcx
   140035f86:	mov    rdi,rcx
   140035f89:	mov    QWORD PTR [r11-0x50],rbx
   140035f8d:	mov    r15d,ebx
   140035f90:	mov    r14d,ebx
   140035f93:	mov    ebp,ebx
   140035f95:	mov    r13d,ebx
   140035f98:	test   r8,r8
   140035f9b:	je     0x14003649e
   140035fa1:	lea    r12,[rcx+0xc]
   140035fa5:	mov    QWORD PTR [rsp+0x58],rbx
   140035faa:	lea    esi,[rbx+0x1]
   140035fad:	cmp    DWORD PTR [r12],ebx
   140035fb1:	jne    0x140035fd1
   140035fb3:	xor    edx,edx
   140035fb5:	mov    QWORD PTR [rsp+0x20],r12
   140035fba:	mov    r9d,0x1004
   140035fc0:	lea    rcx,[r11-0x58]
   140035fc4:	call   0x14004350c
   140035fc9:	test   eax,eax
   140035fcb:	jne    0x14003646e
   140035fd1:	mov    edx,0x4
   140035fd6:	mov    rcx,rsi
   140035fd9:	call   0x140035d88
   140035fde:	xor    ecx,ecx
   140035fe0:	mov    QWORD PTR [rsp+0x58],rax
   140035fe5:	call   0x140038c70
   140035fea:	mov    ebp,0x180
   140035fef:	mov    edx,0x2
   140035ff4:	mov    ecx,ebp
   140035ff6:	call   0x140035d88
   140035ffb:	xor    ecx,ecx
   140035ffd:	mov    r15,rax
   140036000:	call   0x140038c70
   140036005:	mov    rdx,rsi
   140036008:	mov    ecx,ebp
   14003600a:	call   0x140035d88
   14003600f:	xor    ecx,ecx
   140036011:	mov    r14,rax
   140036014:	call   0x140038c70
   140036019:	mov    rdx,rsi
   14003601c:	mov    ecx,ebp
   14003601e:	call   0x140035d88
   140036023:	xor    ecx,ecx
   140036025:	mov    rbp,rax
   140036028:	call   0x140038c70
   14003602d:	mov    rdx,rsi
   140036030:	mov    ecx,0x101
   140036035:	call   0x140035d88
   14003603a:	xor    ecx,ecx
   14003603c:	mov    r13,rax
   14003603f:	call   0x140038c70
   140036044:	cmp    QWORD PTR [rsp+0x58],rbx
   140036049:	je     0x14003646e
   14003604f:	test   r15,r15
   140036052:	je     0x14003646e
   140036058:	test   r13,r13
   14003605b:	je     0x14003646e
   140036061:	test   r14,r14
   140036064:	je     0x14003646e
   14003606a:	test   rbp,rbp
   14003606d:	je     0x14003646e
   140036073:	mov    rcx,r13
   140036076:	mov    eax,ebx
   140036078:	mov    BYTE PTR [rcx],al
   14003607a:	add    rcx,rsi
   14003607d:	add    eax,esi
   14003607f:	cmp    eax,0x100
   140036084:	jl     0x140036078
   140036086:	mov    ecx,DWORD PTR [r12]
   14003608a:	lea    rdx,[rsp+0x80]
   140036092:	call   QWORD PTR [rip+0x15218]        # 0x14004b2b0
   140036098:	test   eax,eax
   14003609a:	je     0x14003646e
   1400360a0:	cmp    DWORD PTR [rsp+0x80],0x5
   1400360a8:	ja     0x14003646e
   1400360ae:	movzx  eax,WORD PTR [rsp+0x80]
   1400360b6:	lea    rcx,[r14+0x81]
   1400360bd:	mov    rdx,QWORD PTR [rdi+0x138]
   1400360c4:	lea    r9,[r13+0x1]
   1400360c8:	mov    DWORD PTR [rsp+0x40],ebx
   1400360cc:	mov    DWORD PTR [rsp+0x50],eax
   1400360d0:	mov    eax,DWORD PTR [r12]
   1400360d4:	mov    DWORD PTR [rsp+0x38],eax
   1400360d8:	mov    eax,0xff
   1400360dd:	mov    DWORD PTR [rsp+0x30],eax
   1400360e1:	mov    QWORD PTR [rsp+0x28],rcx
   1400360e6:	xor    ecx,ecx
   1400360e8:	mov    DWORD PTR [rsp+0x20],eax
   1400360ec:	lea    r8d,[rax+0x1]
   1400360f0:	call   0x14003b9d0
   1400360f5:	test   eax,eax
   1400360f7:	je     0x14003646e
   1400360fd:	mov    eax,DWORD PTR [r12]
   140036101:	lea    rcx,[rbp+0x81]
   140036108:	mov    rdx,QWORD PTR [rdi+0x138]
   14003610f:	lea    r9,[r13+0x1]
   140036113:	mov    DWORD PTR [rsp+0x40],ebx
   140036117:	mov    r8d,0x200
   14003611d:	mov    DWORD PTR [rsp+0x38],eax
   140036121:	mov    eax,0xff
   140036126:	mov    DWORD PTR [rsp+0x30],eax
   14003612a:	mov    QWORD PTR [rsp+0x28],rcx
   14003612f:	xor    ecx,ecx
   140036131:	mov    DWORD PTR [rsp+0x20],eax
   140036135:	call   0x14003b9d0
   14003613a:	test   eax,eax
   14003613c:	je     0x14003646e
   140036142:	cmp    DWORD PTR [rsp+0x50],esi
   140036146:	jle    0x14003617d
   140036148:	cmp    BYTE PTR [rsp+0x86],bl
   14003614f:	je     0x14003617d
   140036151:	lea    rcx,[rsp+0x87]
   140036159:	cmp    BYTE PTR [rcx],bl
   14003615b:	je     0x14003617d
   14003615d:	movzx  edx,BYTE PTR [rcx-0x1]
   140036161:	jmp    0x14003616d
   140036163:	movsxd rax,edx
   140036166:	add    edx,esi
   140036168:	mov    BYTE PTR [rax+r13*1],0x20
   14003616d:	movzx  eax,BYTE PTR [rcx]
   140036170:	cmp    edx,eax
   140036172:	jle    0x140036163
   140036174:	add    rcx,0x2
   140036178:	cmp    BYTE PTR [rcx-0x1],bl
   14003617b:	jne    0x140036159
   14003617d:	mov    eax,DWORD PTR [r12]
   140036181:	lea    rcx,[r15+0x100]
   140036188:	mov    DWORD PTR [rsp+0x30],ebx
   14003618c:	mov    r9d,0x100
   140036192:	mov    DWORD PTR [rsp+0x28],eax
   140036196:	mov    r8,r13
   140036199:	mov    QWORD PTR [rsp+0x60],rcx
   14003619e:	mov    edx,esi
   1400361a0:	mov    QWORD PTR [rsp+0x20],rcx
   1400361a5:	xor    ecx,ecx
   1400361a7:	call   0x140041178
   1400361ac:	test   eax,eax
   1400361ae:	je     0x14003646e
   1400361b4:	mov    r12d,DWORD PTR [rsp+0x50]
   1400361b9:	lea    rax,[r15+0xfe]
   1400361c0:	mov    WORD PTR [rax],bx
   1400361c3:	mov    BYTE PTR [r14+0x7f],bl
   1400361c7:	mov    BYTE PTR [rbp+0x7f],bl
   1400361ca:	mov    BYTE PTR [r14+0x80],bl
   1400361d1:	mov    BYTE PTR [rbp+0x80],bl
   1400361d7:	mov    QWORD PTR [rsp+0x68],rax
   1400361dc:	cmp    r12d,esi
   1400361df:	jle    0x140036220
   1400361e1:	cmp    BYTE PTR [rsp+0x86],bl
   1400361e8:	je     0x140036220
   1400361ea:	lea    rcx,[rsp+0x87]
   1400361f2:	cmp    BYTE PTR [rcx],bl
   1400361f4:	je     0x140036220
   1400361f6:	movzx  edx,BYTE PTR [rcx-0x1]
   1400361fa:	jmp    0x140036210
   1400361fc:	movsxd rax,edx
   1400361ff:	mov    r8d,0x8000
   140036205:	add    edx,esi
   140036207:	mov    WORD PTR [r15+rax*2+0x100],r8w
   140036210:	movzx  eax,BYTE PTR [rcx]
   140036213:	cmp    edx,eax
   140036215:	jle    0x1400361fc
   140036217:	add    rcx,0x2
   14003621b:	cmp    BYTE PTR [rcx-0x1],bl
   14003621e:	jne    0x1400361f2
   140036220:	lea    rcx,[r15+0x200]
   140036227:	mov    eax,0x80
   14003622c:	movups xmm0,XMMWORD PTR [rcx]
   14003622f:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140036233:	movups XMMWORD PTR [r15],xmm0
   140036237:	movups XMMWORD PTR [r15+0x10],xmm1
   14003623c:	movups xmm0,XMMWORD PTR [rcx+0x20]
   140036240:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140036244:	movups XMMWORD PTR [r15+0x20],xmm0
   140036249:	movups XMMWORD PTR [r15+0x30],xmm1
   14003624e:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140036252:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140036256:	movups XMMWORD PTR [r15+0x40],xmm0
   14003625b:	movups XMMWORD PTR [r15+0x50],xmm1
   140036260:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140036264:	movups XMMWORD PTR [r15+0x60],xmm0
   140036269:	add    r15,rax
   14003626c:	movups xmm0,XMMWORD PTR [rcx+0x70]
   140036270:	add    rcx,rax
   140036273:	movups XMMWORD PTR [r15-0x10],xmm0
   140036278:	movups xmm1,XMMWORD PTR [rcx]
   14003627b:	mov    rax,QWORD PTR [rcx+0x70]
   14003627f:	movups xmm0,XMMWORD PTR [rcx+0x10]
   140036283:	movups XMMWORD PTR [r15],xmm1
   140036287:	movups xmm1,XMMWORD PTR [rcx+0x20]
   14003628b:	movups XMMWORD PTR [r15+0x10],xmm0
   140036290:	movups xmm0,XMMWORD PTR [rcx+0x30]
   140036294:	movups XMMWORD PTR [r15+0x20],xmm1
   140036299:	movups xmm1,XMMWORD PTR [rcx+0x40]
   14003629d:	movups XMMWORD PTR [r15+0x30],xmm0
   1400362a2:	movups xmm0,XMMWORD PTR [rcx+0x50]
   1400362a6:	movups XMMWORD PTR [r15+0x40],xmm1
   1400362ab:	movups xmm1,XMMWORD PTR [rcx+0x60]
   1400362af:	movups XMMWORD PTR [r15+0x50],xmm0
   1400362b4:	movups XMMWORD PTR [r15+0x60],xmm1
   1400362b9:	mov    QWORD PTR [r15+0x70],rax
   1400362bd:	mov    eax,DWORD PTR [rcx+0x78]
   1400362c0:	mov    DWORD PTR [r15+0x78],eax
   1400362c4:	movzx  eax,WORD PTR [rcx+0x7c]
   1400362c8:	mov    WORD PTR [r15+0x7c],ax
   1400362cd:	mov    eax,DWORD PTR [r14+0x178]
   1400362d4:	movups xmm0,XMMWORD PTR [r14+0x100]
   1400362dc:	movups xmm1,XMMWORD PTR [r14+0x110]
   1400362e4:	movups XMMWORD PTR [r14],xmm0
   1400362e8:	movups xmm0,XMMWORD PTR [r14+0x120]
   1400362f0:	movups XMMWORD PTR [r14+0x10],xmm1
   1400362f5:	movups xmm1,XMMWORD PTR [r14+0x130]
   1400362fd:	movups XMMWORD PTR [r14+0x20],xmm0
   140036302:	movups xmm0,XMMWORD PTR [r14+0x140]
   14003630a:	movups XMMWORD PTR [r14+0x30],xmm1
   14003630f:	movups xmm1,XMMWORD PTR [r14+0x150]
   140036317:	movups XMMWORD PTR [r14+0x40],xmm0
   14003631c:	movups xmm0,XMMWORD PTR [r14+0x160]
   140036324:	movups XMMWORD PTR [r14+0x50],xmm1
   140036329:	movsd  xmm1,QWORD PTR [r14+0x170]
   140036332:	movups XMMWORD PTR [r14+0x60],xmm0
   140036337:	movsd  QWORD PTR [r14+0x70],xmm1
   14003633d:	mov    DWORD PTR [r14+0x78],eax
   140036341:	movzx  eax,WORD PTR [r14+0x17c]
   140036349:	mov    WORD PTR [r14+0x7c],ax
   14003634e:	mov    al,BYTE PTR [r14+0x17e]
   140036355:	mov    BYTE PTR [r14+0x7e],al
   140036359:	movups xmm0,XMMWORD PTR [rbp+0x100]
   140036360:	mov    eax,DWORD PTR [rbp+0x178]
   140036366:	movups xmm1,XMMWORD PTR [rbp+0x110]
   14003636d:	movups XMMWORD PTR [rbp+0x0],xmm0
   140036371:	movups xmm0,XMMWORD PTR [rbp+0x120]
   140036378:	movups XMMWORD PTR [rbp+0x10],xmm1
   14003637c:	movups xmm1,XMMWORD PTR [rbp+0x130]
   140036383:	movups XMMWORD PTR [rbp+0x20],xmm0
   140036387:	movups xmm0,XMMWORD PTR [rbp+0x140]
   14003638e:	movups XMMWORD PTR [rbp+0x30],xmm1
   140036392:	movups xmm1,XMMWORD PTR [rbp+0x150]
   140036399:	movups XMMWORD PTR [rbp+0x40],xmm0
   14003639d:	movups xmm0,XMMWORD PTR [rbp+0x160]
   1400363a4:	movups XMMWORD PTR [rbp+0x50],xmm1
   1400363a8:	movsd  xmm1,QWORD PTR [rbp+0x170]
   1400363b0:	movups XMMWORD PTR [rbp+0x60],xmm0
   1400363b4:	movsd  QWORD PTR [rbp+0x70],xmm1
   1400363b9:	mov    DWORD PTR [rbp+0x78],eax
   1400363bc:	movzx  eax,WORD PTR [rbp+0x17c]
   1400363c3:	mov    WORD PTR [rbp+0x7c],ax
   1400363c7:	mov    al,BYTE PTR [rbp+0x17e]
   1400363cd:	mov    BYTE PTR [rbp+0x7e],al
   1400363d0:	mov    rcx,QWORD PTR [rdi+0x100]
   1400363d7:	test   rcx,rcx
   1400363da:	je     0x14003642a
   1400363dc:	or     eax,0xffffffff
   1400363df:	lock xadd DWORD PTR [rcx],eax
   1400363e3:	cmp    eax,esi
   1400363e5:	jne    0x14003642a
   1400363e7:	mov    rcx,QWORD PTR [rdi+0x108]
   1400363ee:	sub    rcx,0xfe
   1400363f5:	call   0x140038c70
   1400363fa:	mov    rcx,QWORD PTR [rdi+0x110]
   140036401:	mov    r15d,0x80
   140036407:	sub    rcx,r15
   14003640a:	call   0x140038c70
   14003640f:	mov    rcx,QWORD PTR [rdi+0x118]
   140036416:	sub    rcx,r15
   140036419:	call   0x140038c70
   14003641e:	mov    rcx,QWORD PTR [rdi+0x100]
   140036425:	call   0x140038c70
   14003642a:	mov    rax,QWORD PTR [rsp+0x58]
   14003642f:	mov    DWORD PTR [rax],esi
   140036431:	mov    QWORD PTR [rdi+0x100],rax
   140036438:	mov    rax,QWORD PTR [rsp+0x60]
   14003643d:	mov    QWORD PTR [rdi],rax
   140036440:	mov    rax,QWORD PTR [rsp+0x68]
   140036445:	mov    QWORD PTR [rdi+0x108],rax
   14003644c:	lea    rax,[r14+0x80]
   140036453:	mov    QWORD PTR [rdi+0x110],rax
   14003645a:	lea    rax,[rbp+0x80]
   140036461:	mov    QWORD PTR [rdi+0x118],rax
   140036468:	mov    DWORD PTR [rdi+0x8],r12d
   14003646c:	jmp    0x140036492
   14003646e:	mov    rcx,QWORD PTR [rsp+0x58]
   140036473:	call   0x140038c70
   140036478:	mov    rcx,r15
   14003647b:	call   0x140038c70
   140036480:	mov    rcx,r14
   140036483:	call   0x140038c70
   140036488:	mov    rcx,rbp
   14003648b:	call   0x140038c70
   140036490:	mov    ebx,esi
   140036492:	mov    rcx,r13
   140036495:	call   0x140038c70
   14003649a:	mov    eax,ebx
   14003649c:	jmp    0x1400364eb
   14003649e:	mov    rax,QWORD PTR [rcx+0x100]
   1400364a5:	test   rax,rax
   1400364a8:	je     0x1400364ad
   1400364aa:	lock dec DWORD PTR [rax]
   1400364ad:	lea    rax,[rip+0x1e9cc]        # 0x140054e80
   1400364b4:	mov    QWORD PTR [rcx+0x100],rbx
   1400364bb:	mov    QWORD PTR [rcx],rax
   1400364be:	mov    esi,0x1
   1400364c3:	lea    rax,[rip+0x1ec36]        # 0x140055100
   1400364ca:	mov    QWORD PTR [rcx+0x108],rbx
   1400364d1:	mov    QWORD PTR [rcx+0x110],rax
   1400364d8:	lea    rax,[rip+0x1eda1]        # 0x140055280
   1400364df:	mov    QWORD PTR [rcx+0x118],rax
   1400364e6:	xor    eax,eax
   1400364e8:	mov    DWORD PTR [rcx+0x8],esi
   1400364eb:	mov    rcx,QWORD PTR [rsp+0x98]
   1400364f3:	xor    rcx,rsp
   1400364f6:	call   0x140025df0
   1400364fb:	lea    r11,[rsp+0xa0]
   140036503:	mov    rbx,QWORD PTR [r11+0x38]
   140036507:	mov    rbp,QWORD PTR [r11+0x40]
   14003650b:	mov    rsi,QWORD PTR [r11+0x48]
   14003650f:	mov    rsp,r11
   140036512:	pop    r15
   140036514:	pop    r14
   140036516:	pop    r13
   140036518:	pop    r12
   14003651a:	pop    rdi
   14003651b:	ret    
   14003651c:	mov    QWORD PTR [rsp+0x8],rbx
   140036521:	mov    QWORD PTR [rsp+0x10],rsi
   140036526:	push   rdi
   140036527:	sub    rsp,0x40
   14003652b:	mov    ebx,edx
   14003652d:	mov    edi,r9d
   140036530:	mov    rdx,rcx
   140036533:	mov    esi,r8d
   140036536:	lea    rcx,[rsp+0x20]
   14003653b:	call   0x14002bd94
   140036540:	mov    rax,QWORD PTR [rsp+0x30]
   140036545:	movzx  edx,bl
   140036548:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14003654d:	jne    0x140036569
   14003654f:	test   esi,esi
   140036551:	je     0x140036563
   140036553:	mov    rax,QWORD PTR [rsp+0x28]
   140036558:	mov    rcx,QWORD PTR [rax]
   14003655b:	movzx  eax,WORD PTR [rcx+rdx*2]
   14003655f:	and    eax,esi
   140036561:	jmp    0x140036565
   140036563:	xor    eax,eax
   140036565:	test   eax,eax
   140036567:	je     0x14003656e
   140036569:	mov    eax,0x1
   14003656e:	cmp    BYTE PTR [rsp+0x38],0x0
   140036573:	je     0x140036581
   140036575:	mov    rcx,QWORD PTR [rsp+0x20]
   14003657a:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140036581:	mov    rbx,QWORD PTR [rsp+0x50]
   140036586:	mov    rsi,QWORD PTR [rsp+0x58]
   14003658b:	add    rsp,0x40
   14003658f:	pop    rdi
   140036590:	ret    
   140036591:	int3   
   140036592:	int3   
   140036593:	int3   
   140036594:	mov    edx,ecx
   140036596:	mov    r9d,0x4
   14003659c:	xor    ecx,ecx
   14003659e:	xor    r8d,r8d
   1400365a1:	jmp    0x14003651c
   1400365a6:	int3   
   1400365a7:	int3   
   1400365a8:	sub    rsp,0x28
   1400365ac:	call   0x14003f8a8
   1400365b1:	test   rax,rax
   1400365b4:	je     0x1400365c0
   1400365b6:	mov    ecx,0x16
   1400365bb:	call   0x14003f8f8
   1400365c0:	test   BYTE PTR [rip+0x3ad21],0x2        # 0x1400712e8
   1400365c7:	je     0x1400365f2
   1400365c9:	mov    ecx,0x17
   1400365ce:	call   0x140047be6
   1400365d3:	test   eax,eax
   1400365d5:	je     0x1400365de
   1400365d7:	mov    ecx,0x7
   1400365dc:	int    0x29
   1400365de:	mov    r8d,0x1
   1400365e4:	mov    edx,0x40000015
   1400365e9:	lea    ecx,[r8+0x2]
   1400365ed:	call   0x1400305c4
   1400365f2:	mov    ecx,0x3
   1400365f7:	call   0x1400334f4
   1400365fc:	int3   
   1400365fd:	int3   
   1400365fe:	int3   
   1400365ff:	int3   
   140036600:	rex push rbx
   140036602:	sub    rsp,0x20
   140036606:	mov    rbx,rcx
   140036609:	cmp    rcx,0xffffffffffffffe0
   14003660d:	ja     0x14003664b
   14003660f:	test   rcx,rcx
   140036612:	mov    eax,0x1
   140036617:	cmove  rbx,rax
   14003661b:	jmp    0x140036632
   14003661d:	call   0x140035998
   140036622:	test   eax,eax
   140036624:	je     0x14003664b
   140036626:	mov    rcx,rbx
   140036629:	call   0x140033098
   14003662e:	test   eax,eax
   140036630:	je     0x14003664b
   140036632:	mov    rcx,QWORD PTR [rip+0x40c97]        # 0x1400772d0
   140036639:	mov    r8,rbx
   14003663c:	xor    edx,edx
   14003663e:	call   QWORD PTR [rip+0x14cb4]        # 0x14004b2f8
   140036644:	test   rax,rax
   140036647:	je     0x14003661d
   140036649:	jmp    0x140036658
   14003664b:	call   0x140032c50
   140036650:	mov    DWORD PTR [rax],0xc
   140036656:	xor    eax,eax
   140036658:	add    rsp,0x20
   14003665c:	pop    rbx
   14003665d:	ret    
   14003665e:	int3   
   14003665f:	int3   
   140036660:	mov    QWORD PTR [rsp+0x8],rbx
   140036665:	push   rdi
   140036666:	sub    rsp,0x20
   14003666a:	mov    rbx,rdx
   14003666d:	mov    rdi,rcx
   140036670:	test   rcx,rcx
   140036673:	jne    0x14003667f
   140036675:	mov    rcx,rdx
   140036678:	call   0x140036600
   14003667d:	jmp    0x1400366d7
   14003667f:	test   rdx,rdx
   140036682:	jne    0x14003668b
   140036684:	call   0x140038c70
   140036689:	jmp    0x1400366d5
   14003668b:	cmp    rdx,0xffffffffffffffe0
   14003668f:	ja     0x1400366ca
   140036691:	mov    r9,rdx
   140036694:	mov    r8,rcx
   140036697:	jmp    0x1400366b4
   140036699:	call   0x140035998
   14003669e:	test   eax,eax
   1400366a0:	je     0x1400366ca
   1400366a2:	mov    rcx,rbx
   1400366a5:	call   0x140033098
   1400366aa:	test   eax,eax
   1400366ac:	je     0x1400366ca
   1400366ae:	mov    r9,rbx
   1400366b1:	mov    r8,rdi
   1400366b4:	mov    rcx,QWORD PTR [rip+0x40c15]        # 0x1400772d0
   1400366bb:	xor    edx,edx
   1400366bd:	call   QWORD PTR [rip+0x14c3d]        # 0x14004b300
   1400366c3:	test   rax,rax
   1400366c6:	je     0x140036699
   1400366c8:	jmp    0x1400366d7
   1400366ca:	call   0x140032c50
   1400366cf:	mov    DWORD PTR [rax],0xc
   1400366d5:	xor    eax,eax
   1400366d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400366dc:	add    rsp,0x20
   1400366e0:	pop    rdi
   1400366e1:	ret    
   1400366e2:	int3   
   1400366e3:	int3   
   1400366e4:	int3   
   1400366e5:	int3   
   1400366e6:	int3   
   1400366e7:	int3   
   1400366e8:	int3   
   1400366e9:	int3   
   1400366ea:	int3   
   1400366eb:	int3   
   1400366ec:	int3   
   1400366ed:	int3   
   1400366ee:	int3   
   1400366ef:	int3   
   1400366f0:	sub    rsp,0xd8
   1400366f7:	movdqa XMMWORD PTR [rsp+0x90],xmm6
   140036700:	movdqa XMMWORD PTR [rsp+0xa0],xmm7
   140036709:	cmp    DWORD PTR [rip+0x40bf0],0x0        # 0x140077300
   140036710:	jne    0x140037331
   140036716:	data16 nop WORD PTR [rax+rax*1+0x0]
   140036720:	movsd  QWORD PTR [rsp+0x20],xmm0
   140036726:	movsd  QWORD PTR [rsp+0x30],xmm1
   14003672c:	mov    rdx,QWORD PTR [rsp+0x20]
   140036731:	mov    r8,QWORD PTR [rsp+0x30]
   140036736:	mov    r10,QWORD PTR [rip+0x1eecb]        # 0x140055608
   14003673d:	and    r10,r8
   140036740:	je     0x140036e90
   140036746:	cmp    r8,QWORD PTR [rip+0x1eeab]        # 0x1400555f8
   14003674d:	je     0x140036ee0
   140036753:	mov    r9,QWORD PTR [rip+0x1ee76]        # 0x1400555d0
   14003675a:	and    r9,rdx
   14003675d:	mov    rax,QWORD PTR [rip+0x1ee9c]        # 0x140055600
   140036764:	mov    QWORD PTR [rsp+0x50],rax
   140036769:	cmp    r9,QWORD PTR [rip+0x1ee60]        # 0x1400555d0
   140036770:	je     0x140036c60
   140036776:	cmp    rdx,QWORD PTR [rip+0x1ee7b]        # 0x1400555f8
   14003677d:	je     0x140036e50
   140036783:	cmp    rdx,QWORD PTR [rip+0x1ee76]        # 0x140055600
   14003678a:	je     0x140037010
   140036790:	mov    r9,QWORD PTR [rip+0x1ee49]        # 0x1400555e0
   140036797:	and    r9,rdx
   14003679a:	cmp    r9,QWORD PTR [rip+0x1ee3f]        # 0x1400555e0
   1400367a1:	je     0x1400370c0
   1400367a7:	mov    r10,QWORD PTR [rip+0x1ee32]        # 0x1400555e0
   1400367ae:	and    r10,r8
   1400367b1:	cmp    r10,QWORD PTR [rip+0x1ee08]        # 0x1400555c0
   1400367b8:	jg     0x140036fc0
   1400367be:	mov    r10,QWORD PTR [rip+0x1ee1b]        # 0x1400555e0
   1400367c5:	and    r10,r8
   1400367c8:	cmp    r10,QWORD PTR [rip+0x1edf9]        # 0x1400555c8
   1400367cf:	jl     0x140037140
   1400367d5:	xor    r8,r8
   1400367d8:	movdqa xmm3,xmm0
   1400367dc:	psrlq  xmm3,0x34
   1400367e1:	movq   r8,xmm0
   1400367e6:	psubq  xmm3,XMMWORD PTR [rip+0x1ef22]        # 0x140055710
   1400367ee:	movdqa xmm2,xmm0
   1400367f2:	cvtdq2pd xmm6,xmm3
   1400367f6:	pand   xmm2,XMMWORD PTR [rip+0x1ef02]        # 0x140055700
   1400367fe:	comisd xmm6,QWORD PTR [rip+0x1efea]        # 0x1400557f0
   140036806:	je     0x140036c20
   14003680c:	movsd  xmm7,xmm0
   140036810:	mov    r9,r8
   140036813:	and    r8,QWORD PTR [rip+0x1ee5e]        # 0x140055678
   14003681a:	and    r9,QWORD PTR [rip+0x1ee5f]        # 0x140055680
   140036821:	subsd  xmm7,QWORD PTR [rip+0x1ef37]        # 0x140055760
   140036829:	shl    r9,1
   14003682c:	add    r8,r9
   14003682f:	mov    QWORD PTR [rsp+0x80],r8
   140036837:	andpd  xmm7,XMMWORD PTR [rip+0x1efe1]        # 0x140055820
   14003683f:	movsd  xmm1,QWORD PTR [rsp+0x80]
   140036848:	shr    r8,0x2c
   14003684c:	por    xmm2,XMMWORD PTR [rip+0x1ef1c]        # 0x140055770
   140036854:	por    xmm1,XMMWORD PTR [rip+0x1ef14]        # 0x140055770
   14003685c:	lea    r9,[rip+0x1efcd]        # 0x140055830
   140036863:	lea    rdx,[rip+0x1f7d6]        # 0x140056040
   14003686a:	comisd xmm7,QWORD PTR [rip+0x1ef9e]        # 0x140055810
   140036872:	jb     0x140036d20
   140036878:	subsd  xmm1,xmm2
   14003687c:	movsd  xmm4,xmm1
   140036880:	mulsd  xmm1,QWORD PTR [r9+r8*8]
   140036886:	movsd  xmm5,xmm1
   14003688a:	mulsd  xmm4,QWORD PTR [rdx+r8*8]
   140036890:	movsd  xmm7,xmm4
   140036894:	addsd  xmm1,xmm4
   140036898:	movsd  xmm2,xmm1
   14003689c:	movsd  xmm0,xmm1
   1400368a0:	lea    r9,[rip+0x22879]        # 0x140059120
   1400368a7:	movsd  xmm3,QWORD PTR [rip+0x1ef21]        # 0x1400557d0
   1400368af:	movsd  xmm1,QWORD PTR [rip+0x1eee9]        # 0x1400557a0
   1400368b7:	mulsd  xmm3,xmm2
   1400368bb:	mulsd  xmm1,xmm2
   1400368bf:	mulsd  xmm0,xmm2
   1400368c3:	subsd  xmm5,xmm2
   1400368c7:	movsd  xmm4,xmm0
   1400368cb:	addsd  xmm3,QWORD PTR [rip+0x1eeed]        # 0x1400557c0
   1400368d3:	addsd  xmm1,QWORD PTR [rip+0x1eeb5]        # 0x140055790
   1400368db:	mulsd  xmm4,xmm0
   1400368df:	mulsd  xmm3,xmm2
   1400368e3:	mulsd  xmm1,xmm0
   1400368e7:	addsd  xmm3,QWORD PTR [rip+0x1eec1]        # 0x1400557b0
   1400368ef:	addsd  xmm7,xmm5
   1400368f3:	mulsd  xmm3,xmm4
   1400368f7:	addsd  xmm1,xmm3
   1400368fb:	addsd  xmm1,xmm7
   1400368ff:	movsd  xmm5,QWORD PTR [rip+0x1ee39]        # 0x140055740
   140036907:	lea    rdx,[rip+0x23022]        # 0x140059930
   14003690e:	mulsd  xmm5,xmm6
   140036912:	movsd  xmm0,QWORD PTR [r9+r8*8]
   140036918:	subsd  xmm5,xmm1
   14003691c:	movsd  xmm3,QWORD PTR [rdx+r8*8]
   140036922:	addsd  xmm3,xmm5
   140036926:	movsd  xmm1,xmm3
   14003692a:	subsd  xmm3,xmm2
   14003692e:	movsd  xmm7,QWORD PTR [rip+0x1edfa]        # 0x140055730
   140036936:	mulsd  xmm7,xmm6
   14003693a:	addsd  xmm0,xmm7
   14003693e:	movsd  xmm7,xmm0
   140036942:	addsd  xmm0,xmm3
   140036946:	movsd  xmm5,xmm0
   14003694a:	andpd  xmm0,XMMWORD PTR [rip+0x1ed3e]        # 0x140055690
   140036952:	mov    rax,QWORD PTR [rsp+0x30]
   140036957:	and    rax,QWORD PTR [rip+0x1ed32]        # 0x140055690
   14003695e:	addsd  xmm2,xmm3
   140036962:	subsd  xmm7,xmm5
   140036966:	subsd  xmm1,xmm2
   14003696a:	addsd  xmm7,xmm3
   14003696e:	subsd  xmm5,xmm0
   140036972:	mov    QWORD PTR [rsp+0x70],rax
   140036977:	movsd  xmm4,QWORD PTR [rsp+0x30]
   14003697d:	addsd  xmm7,xmm1
   140036981:	addsd  xmm7,xmm5
   140036985:	movsd  xmm2,QWORD PTR [rsp+0x70]
   14003698b:	subsd  xmm4,xmm2
   14003698f:	movsd  xmm3,xmm4
   140036993:	movsd  xmm5,xmm7
   140036997:	movsd  xmm6,xmm0
   14003699b:	mulsd  xmm3,xmm7
   14003699f:	mulsd  xmm4,xmm0
   1400369a3:	mulsd  xmm5,xmm2
   1400369a7:	mulsd  xmm6,xmm2
   1400369ab:	movsd  xmm1,xmm6
   1400369af:	addsd  xmm3,xmm4
   1400369b3:	addsd  xmm3,xmm5
   1400369b7:	addsd  xmm1,xmm3
   1400369bb:	movsd  xmm0,xmm1
   1400369bf:	subsd  xmm6,xmm1
   1400369c3:	addsd  xmm6,xmm3
   1400369c7:	movsd  xmm7,QWORD PTR [rip+0x1fef1]        # 0x1400568c0
   1400369cf:	movsd  QWORD PTR [rsp+0x40],xmm0
   1400369d5:	mulsd  xmm7,xmm0
   1400369d9:	mov    rdx,QWORD PTR [rsp+0x40]
   1400369de:	comisd xmm7,QWORD PTR [rip+0x1feba]        # 0x1400568a0
   1400369e6:	ja     0x140036c00
   1400369ec:	comisd xmm7,QWORD PTR [rip+0x1febc]        # 0x1400568b0
   1400369f4:	jb     0x140036be0
   1400369fa:	cvtpd2dq xmm4,xmm7
   1400369fe:	lea    r10,[rip+0x2373b]        # 0x14005a140
   140036a05:	lea    r11,[rip+0x23934]        # 0x14005a340
   140036a0c:	cvtdq2pd xmm1,xmm4
   140036a10:	movsd  xmm2,QWORD PTR [rip+0x1feb8]        # 0x1400568d0
   140036a18:	mulsd  xmm2,xmm1
   140036a1c:	movd   ecx,xmm4
   140036a20:	mov    rax,0x3f
   140036a27:	and    eax,ecx
   140036a29:	subsd  xmm0,xmm2
   140036a2d:	mulsd  xmm1,QWORD PTR [rip+0x1feab]        # 0x1400568e0
   140036a35:	movsd  xmm2,xmm0
   140036a39:	sub    ecx,eax
   140036a3b:	sar    ecx,0x6
   140036a3e:	addsd  xmm2,xmm1
   140036a42:	addsd  xmm2,xmm6
   140036a46:	movsd  xmm1,xmm2
   140036a4a:	movsd  xmm0,QWORD PTR [rip+0x1fede]        # 0x140056930
   140036a52:	movsd  xmm3,QWORD PTR [rip+0x1feb6]        # 0x140056910
   140036a5a:	movsd  xmm4,QWORD PTR [rip+0x1fe8e]        # 0x1400568f0
   140036a62:	mulsd  xmm1,xmm2
   140036a66:	mulsd  xmm0,xmm2
   140036a6a:	mulsd  xmm3,xmm2
   140036a6e:	mulsd  xmm4,xmm2
   140036a72:	movsd  xmm5,xmm1
   140036a76:	mulsd  xmm1,xmm2
   140036a7a:	addsd  xmm0,QWORD PTR [rip+0x1ecde]        # 0x140055760
   140036a82:	addsd  xmm3,QWORD PTR [rip+0x1fe96]        # 0x140056920
   140036a8a:	mulsd  xmm5,xmm1
   140036a8e:	addsd  xmm4,QWORD PTR [rip+0x1fe6a]        # 0x140056900
   140036a96:	mulsd  xmm0,xmm2
   140036a9a:	mulsd  xmm3,xmm1
   140036a9e:	mulsd  xmm4,xmm5
   140036aa2:	xor    r9d,r9d
   140036aa5:	addsd  xmm3,xmm4
   140036aa9:	addsd  xmm0,xmm3
   140036aad:	cmp    ecx,DWORD PTR [rip+0x1fd9d]        # 0x140056850
   140036ab3:	cmovle r9d,ecx
   140036ab7:	add    rcx,0x3ff
   140036abe:	shl    rcx,0x34
   140036ac2:	movsd  xmm5,QWORD PTR [r11+rax*8]
   140036ac8:	movsd  xmm1,QWORD PTR [r10+rax*8]
   140036ace:	mulsd  xmm5,xmm0
   140036ad2:	mulsd  xmm1,xmm0
   140036ad6:	addsd  xmm5,QWORD PTR [r11+rax*8]
   140036adc:	addsd  xmm1,xmm5
   140036ae0:	addsd  xmm1,QWORD PTR [r10+rax*8]
   140036ae6:	movsd  xmm0,xmm1
   140036aea:	cmp    rcx,QWORD PTR [rip+0x1ebef]        # 0x1400556e0
   140036af1:	je     0x140036b30
   140036af3:	mov    QWORD PTR [rsp+0x40],rcx
   140036af8:	test   r9d,r9d
   140036afb:	jne    0x140036b50
   140036afd:	mulsd  xmm0,QWORD PTR [rsp+0x40]
   140036b03:	orpd   xmm0,XMMWORD PTR [rsp+0x50]
   140036b09:	movdqa xmm7,XMMWORD PTR [rsp+0xa0]
   140036b12:	movdqa xmm6,XMMWORD PTR [rsp+0x90]
   140036b1b:	add    rsp,0xd8
   140036b22:	ret    
   140036b23:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036b30:	comisd xmm0,QWORD PTR [rip+0x1ec28]        # 0x140055760
   140036b38:	jae    0x140036c00
   140036b3e:	orpd   xmm0,XMMWORD PTR [rip+0x1fd1a]        # 0x140056860
   140036b46:	orpd   xmm0,XMMWORD PTR [rsp+0x50]
   140036b4c:	jmp    0x140036b09
   140036b4e:	xchg   ax,ax
   140036b50:	mov    ecx,r9d
   140036b53:	xor    r11d,r11d
   140036b56:	comisd xmm0,QWORD PTR [rip+0x1ec02]        # 0x140055760
   140036b5e:	cmovae r11d,ecx
   140036b62:	cmp    r11d,DWORD PTR [rip+0x1fce7]        # 0x140056850
   140036b69:	jne    0x140036b80
   140036b6b:	mulsd  xmm0,QWORD PTR [rsp+0x40]
   140036b71:	orpd   xmm0,XMMWORD PTR [rsp+0x50]
   140036b77:	jmp    0x140036b09
   140036b79:	nop    DWORD PTR [rax+0x0]
   140036b80:	xor    r8,r8
   140036b83:	mov    r9,0x1
   140036b8a:	cmp    rdx,QWORD PTR [rip+0x1fcff]        # 0x140056890
   140036b91:	jg     0x140036bc0
   140036b93:	add    ecx,0x432
   140036b99:	cmovs  rcx,r8
   140036b9d:	shl    r9,cl
   140036ba0:	mov    rcx,r9
   140036ba3:	mov    QWORD PTR [rsp+0x40],rcx
   140036ba8:	mulsd  xmm0,QWORD PTR [rsp+0x40]
   140036bae:	orpd   xmm0,XMMWORD PTR [rsp+0x50]
   140036bb4:	jmp    0x140037310
   140036bb9:	nop    DWORD PTR [rax+0x0]
   140036bc0:	movsd  xmm0,QWORD PTR [rip+0x1fcb8]        # 0x140056880
   140036bc8:	orpd   xmm0,XMMWORD PTR [rsp+0x50]
   140036bce:	jmp    0x140037310
   140036bd3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036be0:	mov    r11,QWORD PTR [rip+0x1fc89]        # 0x140056870
   140036be7:	or     r11,QWORD PTR [rsp+0x50]
   140036bec:	jmp    0x1400371e0
   140036bf1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036c00:	mov    r11,QWORD PTR [rip+0x1ead9]        # 0x1400556e0
   140036c07:	or     r11,QWORD PTR [rsp+0x50]
   140036c0c:	jmp    0x1400371e0
   140036c11:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140036c20:	por    xmm2,XMMWORD PTR [rip+0x1eb38]        # 0x140055760
   140036c28:	subsd  xmm2,QWORD PTR [rip+0x1eb30]        # 0x140055760
   140036c30:	movsd  xmm5,xmm2
   140036c34:	pand   xmm2,XMMWORD PTR [rip+0x1eac4]        # 0x140055700
   140036c3c:	movq   r8,xmm2
   140036c41:	psrlq  xmm5,0x34
   140036c46:	psubd  xmm5,XMMWORD PTR [rip+0x1ebb2]        # 0x140055800
   140036c4e:	cvtdq2pd xmm6,xmm5
   140036c52:	jmp    0x14003680c
   140036c57:	nop    WORD PTR [rax+rax*1+0x0]
   140036c60:	mov    r10,QWORD PTR [rip+0x1e979]        # 0x1400555e0
   140036c67:	and    r10,r8
   140036c6a:	cmp    r10,QWORD PTR [rip+0x1e94f]        # 0x1400555c0
   140036c71:	jg     0x140036fc0
   140036c77:	mov    r10,QWORD PTR [rip+0x1e98a]        # 0x140055608
   140036c7e:	and    r10,r8
   140036c81:	mov    r11,r10
   140036c84:	mov    rcx,QWORD PTR [rip+0x1e9bd]        # 0x140055648
   140036c8b:	shr    r10,cl
   140036c8e:	sub    r10,QWORD PTR [rip+0x1e9bb]        # 0x140055650
   140036c95:	js     0x140036f70
   140036c9b:	mov    rax,QWORD PTR [rip+0x1e966]        # 0x140055608
   140036ca2:	and    rax,rdx
   140036ca5:	mov    QWORD PTR [rsp+0x60],rax
   140036caa:	mov    rcx,r10
   140036cad:	cmp    r10,QWORD PTR [rip+0x1e9ac]        # 0x140055660
   140036cb4:	jg     0x140036ce4
   140036cb6:	mov    r9,QWORD PTR [rip+0x1e9ab]        # 0x140055668
   140036cbd:	shr    r9,cl
   140036cc0:	and    r9,r11
   140036cc3:	jne    0x140036f70
   140036cc9:	mov    r9,QWORD PTR [rip+0x1e9a0]        # 0x140055670
   140036cd0:	shr    r9,cl
   140036cd3:	and    r9,r11
   140036cd6:	je     0x140036ce4
   140036cd8:	mov    rax,QWORD PTR [rip+0x1e8f1]        # 0x1400555d0
   140036cdf:	mov    QWORD PTR [rsp+0x50],rax
   140036ce4:	cmp    rdx,QWORD PTR [rip+0x1e955]        # 0x140055640
   140036ceb:	je     0x140037010
   140036cf1:	cmp    rdx,QWORD PTR [rip+0x1e940]        # 0x140055638
   140036cf8:	je     0x140036f20
   140036cfe:	mov    r9,QWORD PTR [rip+0x1e8db]        # 0x1400555e0
   140036d05:	and    r9,rdx
   140036d08:	cmp    r9,QWORD PTR [rip+0x1e8d1]        # 0x1400555e0
   140036d0f:	je     0x1400370c0
   140036d15:	movsd  xmm0,QWORD PTR [rsp+0x60]
   140036d1b:	jmp    0x1400367d5
   140036d20:	movsd  xmm0,xmm1
   140036d24:	subsd  xmm1,xmm2
   140036d28:	movsd  xmm4,xmm1
   140036d2c:	movsd  xmm3,QWORD PTR [r9+r8*8]
   140036d32:	addsd  xmm3,QWORD PTR [rdx+r8*8]
   140036d38:	mulsd  xmm4,xmm3
   140036d3c:	andpd  xmm4,XMMWORD PTR [rip+0x1e94c]        # 0x140055690
   140036d44:	movsd  xmm5,xmm4
   140036d48:	mulsd  xmm4,xmm0
   140036d4c:	subsd  xmm1,xmm4
   140036d50:	mulsd  xmm1,xmm3
   140036d54:	movsd  xmm7,xmm1
   140036d58:	addsd  xmm1,xmm5
   140036d5c:	movsd  xmm2,xmm1
   140036d60:	movsd  xmm0,xmm1
   140036d64:	lea    r9,[rip+0x223b5]        # 0x140059120
   140036d6b:	movsd  xmm3,QWORD PTR [rip+0x1ea6d]        # 0x1400557e0
   140036d73:	movsd  xmm1,QWORD PTR [rip+0x1ea35]        # 0x1400557b0
   140036d7b:	mulsd  xmm3,xmm2
   140036d7f:	mulsd  xmm1,xmm2
   140036d83:	mulsd  xmm0,xmm2
   140036d87:	movsd  xmm4,xmm0
   140036d8b:	addsd  xmm3,QWORD PTR [rip+0x1ea3d]        # 0x1400557d0
   140036d93:	addsd  xmm1,QWORD PTR [rip+0x1ea05]        # 0x1400557a0
   140036d9b:	mulsd  xmm4,xmm0
   140036d9f:	mulsd  xmm3,xmm2
   140036da3:	mulsd  xmm1,xmm2
   140036da7:	addsd  xmm3,QWORD PTR [rip+0x1ea11]        # 0x1400557c0
   140036daf:	mulsd  xmm3,xmm2
   140036db3:	mulsd  xmm1,xmm0
   140036db7:	mulsd  xmm3,xmm4
   140036dbb:	movsd  xmm2,xmm5
   140036dbf:	movsd  xmm0,xmm7
   140036dc3:	mulsd  xmm0,xmm0
   140036dc7:	mulsd  xmm0,QWORD PTR [rip+0x1e9c1]        # 0x140055790
   140036dcf:	mulsd  xmm5,xmm7
   140036dd3:	addsd  xmm5,xmm0
   140036dd7:	addsd  xmm5,xmm7
   140036ddb:	movsd  xmm0,xmm2
   140036ddf:	movsd  xmm7,xmm2
   140036de3:	mulsd  xmm0,xmm0
   140036de7:	mulsd  xmm0,QWORD PTR [rip+0x1e9a1]        # 0x140055790
   140036def:	movsd  xmm4,xmm0
   140036df3:	addsd  xmm2,xmm0
   140036df7:	subsd  xmm7,xmm2
   140036dfb:	addsd  xmm7,xmm4
   140036dff:	addsd  xmm3,xmm7
   140036e03:	movsd  xmm4,QWORD PTR [rip+0x1e935]        # 0x140055740
   140036e0b:	addsd  xmm1,xmm3
   140036e0f:	mulsd  xmm4,xmm6
   140036e13:	lea    rdx,[rip+0x22b16]        # 0x140059930
   140036e1a:	addsd  xmm1,xmm5
   140036e1e:	addsd  xmm4,QWORD PTR [rdx+r8*8]
   140036e24:	subsd  xmm4,xmm1
   140036e28:	movsd  xmm3,xmm4
   140036e2c:	movsd  xmm1,xmm4
   140036e30:	subsd  xmm3,xmm2
   140036e34:	movsd  xmm0,QWORD PTR [r9+r8*8]
   140036e3a:	movsd  xmm7,QWORD PTR [rip+0x1e8ee]        # 0x140055730
   140036e42:	mulsd  xmm7,xmm6
   140036e46:	addsd  xmm0,xmm7
   140036e4a:	jmp    0x14003693e
   140036e4f:	nop
   140036e50:	xor    rax,rax
   140036e53:	mov    r11,r8
   140036e56:	mov    r9,QWORD PTR [rip+0x1e783]        # 0x1400555e0
   140036e5d:	or     r11,QWORD PTR [rip+0x1e7cc]        # 0x140055630
   140036e64:	and    r9,r8
   140036e67:	cmp    r9,QWORD PTR [rip+0x1e772]        # 0x1400555e0
   140036e6e:	cmove  rax,r8
   140036e72:	mov    r9,QWORD PTR [rip+0x1e797]        # 0x140055610
   140036e79:	and    r9,rax
   140036e7c:	je     0x140036e8b
   140036e7e:	and    r9,QWORD PTR [rip+0x1e7ab]        # 0x140055630
   140036e85:	je     0x140037280
   140036e8b:	jmp    0x140036b09
   140036e90:	xor    rax,rax
   140036e93:	mov    r11,rdx
   140036e96:	mov    r9,QWORD PTR [rip+0x1e743]        # 0x1400555e0
   140036e9d:	or     r11,QWORD PTR [rip+0x1e78c]        # 0x140055630
   140036ea4:	and    r9,rdx
   140036ea7:	cmp    r9,QWORD PTR [rip+0x1e732]        # 0x1400555e0
   140036eae:	cmove  rax,rdx
   140036eb2:	mov    r9,QWORD PTR [rip+0x1e757]        # 0x140055610
   140036eb9:	and    r9,rax
   140036ebc:	je     0x140036ecb
   140036ebe:	and    r9,QWORD PTR [rip+0x1e76b]        # 0x140055630
   140036ec5:	je     0x140037c80
   140036ecb:	movsd  xmm0,QWORD PTR [rip+0x1e88d]        # 0x140055760
   140036ed3:	jmp    0x140036b09
   140036ed8:	nop    DWORD PTR [rax+rax*1+0x0]
   140036ee0:	xor    rax,rax
   140036ee3:	mov    r11,rdx
   140036ee6:	mov    r9,QWORD PTR [rip+0x1e6f3]        # 0x1400555e0
   140036eed:	or     r11,QWORD PTR [rip+0x1e73c]        # 0x140055630
   140036ef4:	and    r9,rdx
   140036ef7:	cmp    r9,QWORD PTR [rip+0x1e6e2]        # 0x1400555e0
   140036efe:	cmove  rax,rdx
   140036f02:	mov    r9,QWORD PTR [rip+0x1e707]        # 0x140055610
   140036f09:	and    r9,rax
   140036f0c:	jne    0x140037230
   140036f12:	movq   xmm0,rdx
   140036f17:	jmp    0x140036b09
   140036f1c:	nop    DWORD PTR [rax+0x0]
   140036f20:	mov    rdx,QWORD PTR [rip+0x1e6d1]        # 0x1400555f8
   140036f27:	or     rdx,QWORD PTR [rsp+0x50]
   140036f2c:	xor    rax,rax
   140036f2f:	mov    r11,r8
   140036f32:	mov    r10,QWORD PTR [rip+0x1e6a7]        # 0x1400555e0
   140036f39:	or     r11,QWORD PTR [rip+0x1e6f0]        # 0x140055630
   140036f40:	and    r10,r8
   140036f43:	cmp    r10,QWORD PTR [rip+0x1e696]        # 0x1400555e0
   140036f4a:	cmove  rax,r8
   140036f4e:	mov    r10,QWORD PTR [rip+0x1e6bb]        # 0x140055610
   140036f55:	and    r10,rax
   140036f58:	jne    0x140037280
   140036f5e:	movq   xmm0,rdx
   140036f63:	jmp    0x140036b09
   140036f68:	nop    DWORD PTR [rax+rax*1+0x0]
   140036f70:	mov    r9,QWORD PTR [rip+0x1e669]        # 0x1400555e0
   140036f77:	and    r9,rdx
   140036f7a:	cmp    r9,QWORD PTR [rip+0x1e65f]        # 0x1400555e0
   140036f81:	je     0x1400370c0
   140036f87:	cmp    rdx,QWORD PTR [rip+0x1e6b2]        # 0x140055640
   140036f8e:	je     0x140037010
   140036f94:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140036f9a:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140036fa0:	movsd  xmm2,QWORD PTR [rip+0x1e678]        # 0x140055620
   140036fa8:	mov    r9d,DWORD PTR [rip+0x1e5f5]        # 0x1400555a4
   140036faf:	call   0x140043750
   140036fb4:	jmp    0x140036b09
   140036fb9:	nop    DWORD PTR [rax+0x0]
   140036fc0:	mov    r9,QWORD PTR [rip+0x1e619]        # 0x1400555e0
   140036fc7:	and    r9,rdx
   140036fca:	cmp    r9,QWORD PTR [rip+0x1e60f]        # 0x1400555e0
   140036fd1:	je     0x1400370c0
   140036fd7:	mov    r9,QWORD PTR [rip+0x1e62a]        # 0x140055608
   140036fde:	and    r9,rdx
   140036fe1:	je     0x140037010
   140036fe3:	cmp    rdx,QWORD PTR [rip+0x1e64e]        # 0x140055638
   140036fea:	je     0x140036f20
   140036ff0:	mov    r9,rdx
   140036ff3:	and    r9,QWORD PTR [rip+0x1e60e]        # 0x140055608
   140036ffa:	cmp    r9,QWORD PTR [rip+0x1e5f7]        # 0x1400555f8
   140037001:	jl     0x140037160
   140037007:	jmp    0x140037180
   14003700c:	nop    DWORD PTR [rax+0x0]
   140037010:	mov    r10,QWORD PTR [rip+0x1e5c9]        # 0x1400555e0
   140037017:	xor    rax,rax
   14003701a:	and    r10,r8
   14003701d:	cmp    r10,QWORD PTR [rip+0x1e5bc]        # 0x1400555e0
   140037024:	je     0x140037080
   140037026:	mov    r10,QWORD PTR [rip+0x1e5a3]        # 0x1400555d0
   14003702d:	and    r10,r8
   140037030:	cmovne rax,QWORD PTR [rip+0x1e5b8]        # 0x1400555f0
   140037038:	jne    0x140037050
   14003703a:	movq   xmm0,rax
   14003703f:	orpd   xmm0,XMMWORD PTR [rsp+0x50]
   140037045:	jmp    0x140036b09
   14003704a:	nop    WORD PTR [rax+rax*1+0x0]
   140037050:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140037056:	movsd  xmm1,QWORD PTR [rsp+0x30]
   14003705c:	movq   xmm2,rax
   140037061:	orpd   xmm2,XMMWORD PTR [rsp+0x50]
   140037067:	mov    r9d,DWORD PTR [rip+0x1e526]        # 0x140055594
   14003706e:	call   0x140043750
   140037073:	jmp    0x140036b09
   140037078:	nop    DWORD PTR [rax+rax*1+0x0]
   140037080:	mov    r11,r8
   140037083:	cmp    r8,QWORD PTR [rip+0x1e55e]        # 0x1400555e8
   14003708a:	cmove  rax,QWORD PTR [rip+0x1e55e]        # 0x1400555f0
   140037092:	je     0x140037050
   140037094:	or     r11,QWORD PTR [rip+0x1e595]        # 0x140055630
   14003709b:	mov    r10,QWORD PTR [rip+0x1e56e]        # 0x140055610
   1400370a2:	and    r10,r8
   1400370a5:	jne    0x140037280
   1400370ab:	movq   xmm0,rax
   1400370b0:	jmp    0x140036b09
   1400370b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400370c0:	xor    r11,r11
   1400370c3:	mov    r10,QWORD PTR [rip+0x1e506]        # 0x1400555d0
   1400370ca:	and    r10,r8
   1400370cd:	cmove  r11,QWORD PTR [rip+0x1e51b]        # 0x1400555f0
   1400370d5:	mov    rax,rdx
   1400370d8:	mov    r9,QWORD PTR [rip+0x1e531]        # 0x140055610
   1400370df:	or     rax,QWORD PTR [rip+0x1e54a]        # 0x140055630
   1400370e6:	and    r9,rdx
   1400370e9:	cmovne r11,rax
   1400370ed:	jne    0x140037230
   1400370f3:	xor    rax,rax
   1400370f6:	mov    r9,r8
   1400370f9:	mov    r10,QWORD PTR [rip+0x1e4e0]        # 0x1400555e0
   140037100:	or     r9,QWORD PTR [rip+0x1e529]        # 0x140055630
   140037107:	and    r10,r8
   14003710a:	cmp    r10,QWORD PTR [rip+0x1e4cf]        # 0x1400555e0
   140037111:	cmove  rax,r8
   140037115:	mov    r10,QWORD PTR [rip+0x1e4f4]        # 0x140055610
   14003711c:	and    r10,rax
   14003711f:	cmovne r11,r9
   140037123:	jne    0x140037280
   140037129:	movq   xmm0,r11
   14003712e:	orpd   xmm0,XMMWORD PTR [rsp+0x50]
   140037134:	jmp    0x140036b09
   140037139:	nop    DWORD PTR [rax+0x0]
   140037140:	movsd  xmm0,QWORD PTR [rip+0x1e4b0]        # 0x1400555f8
   140037148:	addsd  xmm0,xmm1
   14003714c:	jmp    0x140036b09
   140037151:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037160:	xor    r11,r11
   140037163:	mov    r10,QWORD PTR [rip+0x1e466]        # 0x1400555d0
   14003716a:	and    r10,r8
   14003716d:	cmovne r11,QWORD PTR [rip+0x1e47b]        # 0x1400555f0
   140037175:	jmp    0x1400371a0
   140037177:	nop    WORD PTR [rax+rax*1+0x0]
   140037180:	xor    r11,r11
   140037183:	mov    r10,QWORD PTR [rip+0x1e446]        # 0x1400555d0
   14003718a:	and    r10,r8
   14003718d:	cmove  r11,QWORD PTR [rip+0x1e45b]        # 0x1400555f0
   140037195:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400371a0:	xor    rax,rax
   1400371a3:	mov    r9,r8
   1400371a6:	mov    r10,QWORD PTR [rip+0x1e433]        # 0x1400555e0
   1400371ad:	or     r9,QWORD PTR [rip+0x1e47c]        # 0x140055630
   1400371b4:	and    r10,r8
   1400371b7:	cmp    r10,QWORD PTR [rip+0x1e422]        # 0x1400555e0
   1400371be:	cmove  rax,r8
   1400371c2:	mov    r10,QWORD PTR [rip+0x1e447]        # 0x140055610
   1400371c9:	and    r10,rax
   1400371cc:	cmovne r11,r9
   1400371d0:	jne    0x140037280
   1400371d6:	test   rax,rax
   1400371d9:	jne    0x140037220
   1400371db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400371e0:	mov    r9d,DWORD PTR [rip+0x1e3c1]        # 0x1400555a8
   1400371e7:	test   QWORD PTR [rip+0x1e41a],r11        # 0x140055608
   1400371ee:	cmovne r9d,DWORD PTR [rip+0x1e3ba]        # 0x1400555b0
   1400371f6:	movsd  xmm0,QWORD PTR [rsp+0x20]
   1400371fc:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140037202:	movq   xmm2,r11
   140037207:	call   0x140043750
   14003720c:	jmp    0x140036b09
   140037211:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037220:	movq   xmm0,r11
   140037225:	jmp    0x140036b09
   14003722a:	nop    WORD PTR [rax+rax*1+0x0]
   140037230:	xor    rax,rax
   140037233:	mov    r10,QWORD PTR [rip+0x1e3a6]        # 0x1400555e0
   14003723a:	and    r10,r8
   14003723d:	cmp    r10,QWORD PTR [rip+0x1e39c]        # 0x1400555e0
   140037244:	cmove  rax,r8
   140037248:	mov    r10,QWORD PTR [rip+0x1e3c1]        # 0x140055610
   14003724f:	and    r10,rax
   140037252:	jne    0x1400372b0
   140037254:	movsd  xmm0,QWORD PTR [rsp+0x20]
   14003725a:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140037260:	movq   xmm2,r11
   140037265:	mov    r9d,DWORD PTR [rip+0x1e32c]        # 0x140055598
   14003726c:	call   0x140043750
   140037271:	jmp    0x140036b09
   140037276:	data16 nop WORD PTR [rax+rax*1+0x0]
   140037280:	movsd  xmm0,QWORD PTR [rsp+0x20]
   140037286:	movsd  xmm1,QWORD PTR [rsp+0x30]
   14003728c:	movq   xmm2,r11
   140037291:	mov    r9d,DWORD PTR [rip+0x1e304]        # 0x14005559c
   140037298:	call   0x140043750
   14003729d:	jmp    0x140036b09
   1400372a2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400372b0:	mov    r9,r8
   1400372b3:	cmp    r11,QWORD PTR [rip+0x1e35e]        # 0x140055618
   1400372ba:	cmove  r11,r9
   1400372be:	je     0x1400372e7
   1400372c0:	cmp    r9,QWORD PTR [rip+0x1e351]        # 0x140055618
   1400372c7:	cmove  r9,r11
   1400372cb:	mov    r10,r9
   1400372ce:	and    r10,QWORD PTR [rip+0x1e2fb]        # 0x1400555d0
   1400372d5:	cmovne r9,r11
   1400372d9:	mov    r10,r11
   1400372dc:	and    r10,QWORD PTR [rip+0x1e2ed]        # 0x1400555d0
   1400372e3:	cmovne r11,r9
   1400372e7:	or     r11,QWORD PTR [rip+0x1e342]        # 0x140055630
   1400372ee:	movsd  xmm0,QWORD PTR [rsp+0x20]
   1400372f4:	movsd  xmm1,QWORD PTR [rsp+0x30]
   1400372fa:	movq   xmm2,r11
   1400372ff:	mov    r9d,DWORD PTR [rip+0x1e29a]        # 0x1400555a0
   140037306:	call   0x140043750
   14003730b:	jmp    0x140036b09
   140037310:	movsd  xmm2,xmm0
   140037314:	movsd  xmm0,QWORD PTR [rsp+0x20]
   14003731a:	movsd  xmm1,QWORD PTR [rsp+0x30]
   140037320:	mov    r9d,DWORD PTR [rip+0x1e285]        # 0x1400555ac
   140037327:	call   0x140043750
   14003732c:	jmp    0x140036b09
   140037331:	vmovsd QWORD PTR [rsp+0x20],xmm0
   140037337:	vmovsd QWORD PTR [rsp+0x30],xmm1
   14003733d:	mov    rdx,QWORD PTR [rsp+0x20]
   140037342:	mov    r8,QWORD PTR [rsp+0x30]
   140037347:	mov    r10,QWORD PTR [rip+0x1e2ba]        # 0x140055608
   14003734e:	and    r10,r8
   140037351:	je     0x1400378d0
   140037357:	cmp    r8,QWORD PTR [rip+0x1e29a]        # 0x1400555f8
   14003735e:	je     0x140037920
   140037364:	mov    r9,QWORD PTR [rip+0x1e265]        # 0x1400555d0
   14003736b:	and    r9,rdx
   14003736e:	cmp    r9,QWORD PTR [rip+0x1e25b]        # 0x1400555d0
   140037375:	mov    rax,QWORD PTR [rip+0x1e284]        # 0x140055600
   14003737c:	mov    QWORD PTR [rsp+0x50],rax
   140037381:	je     0x1400377d0
   140037387:	cmp    rdx,QWORD PTR [rip+0x1e26a]        # 0x1400555f8
   14003738e:	je     0x140037890
   140037394:	cmp    rdx,QWORD PTR [rip+0x1e265]        # 0x140055600
   14003739b:	je     0x140037a50
   1400373a1:	mov    r9,QWORD PTR [rip+0x1e238]        # 0x1400555e0
   1400373a8:	and    r9,rdx
   1400373ab:	cmp    r9,QWORD PTR [rip+0x1e22e]        # 0x1400555e0
   1400373b2:	je     0x140037b20
   1400373b8:	mov    r10,QWORD PTR [rip+0x1e221]        # 0x1400555e0
   1400373bf:	and    r10,r8
   1400373c2:	cmp    r10,QWORD PTR [rip+0x1e1f7]        # 0x1400555c0
   1400373c9:	jg     0x140037a00
   1400373cf:	mov    r10,QWORD PTR [rip+0x1e20a]        # 0x1400555e0
   1400373d6:	and    r10,r8
   1400373d9:	cmp    r10,QWORD PTR [rip+0x1e1e8]        # 0x1400555c8
   1400373e0:	jl     0x140037ba0
   1400373e6:	vpsrlq xmm3,xmm0,0x34
   1400373eb:	vmovq  r8,xmm0
   1400373f0:	vpsubq xmm3,xmm3,XMMWORD PTR [rip+0x1e318]        # 0x140055710
   1400373f8:	vcvtdq2pd xmm6,xmm3
   1400373fc:	vpand  xmm2,xmm0,XMMWORD PTR [rip+0x1e2fc]        # 0x140055700
   140037404:	vcomisd xmm6,QWORD PTR [rip+0x1e3e4]        # 0x1400557f0
   14003740c:	je     0x140037790
   140037412:	mov    r9,r8
   140037415:	and    r8,QWORD PTR [rip+0x1e25c]        # 0x140055678
   14003741c:	and    r9,QWORD PTR [rip+0x1e25d]        # 0x140055680
   140037423:	shl    r9,1
   140037426:	add    r8,r9
   140037429:	vmovq  xmm1,r8
   14003742e:	shr    r8,0x2c
   140037432:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0x1e336]        # 0x140055770
   14003743a:	vpor   xmm1,xmm1,XMMWORD PTR [rip+0x1e32e]        # 0x140055770
   140037442:	lea    r9,[rip+0x1e3e7]        # 0x140055830
   140037449:	lea    rdx,[rip+0x1ebf0]        # 0x140056040
   140037450:	vsubsd xmm4,xmm1,xmm2
   140037454:	vmulsd xmm1,xmm4,QWORD PTR [r9+r8*8]
   14003745a:	vmovapd xmm5,xmm1
   14003745e:	vmulsd xmm4,xmm4,QWORD PTR [rdx+r8*8]
   140037464:	vmovapd xmm7,xmm4
   140037468:	vaddsd xmm1,xmm1,xmm4
   14003746c:	vmovapd xmm2,xmm1
   140037470:	vmovapd xmm0,xmm1
   140037474:	lea    r9,[rip+0x21ca5]        # 0x140059120
   14003747b:	vsubsd xmm3,xmm5,xmm2
   14003747f:	vmovsd xmm1,QWORD PTR [rip+0x1e359]        # 0x1400557e0
   140037487:	vmulsd xmm0,xmm0,xmm0
   14003748b:	vaddsd xmm3,xmm3,xmm7
   14003748f:	vfmadd213sd xmm1,xmm2,QWORD PTR [rip+0x1e338]        # 0x1400557d0
   140037498:	vfmadd213sd xmm1,xmm2,QWORD PTR [rip+0x1e31f]        # 0x1400557c0
   1400374a1:	vfmadd213sd xmm1,xmm2,QWORD PTR [rip+0x1e306]        # 0x1400557b0
   1400374aa:	vfmadd213sd xmm1,xmm2,QWORD PTR [rip+0x1e2ed]        # 0x1400557a0
   1400374b3:	vfmadd213sd xmm1,xmm2,QWORD PTR [rip+0x1e2d4]        # 0x140055790
   1400374bc:	vfmadd213sd xmm1,xmm0,xmm3
   1400374c1:	vmovsd xmm5,QWORD PTR [rip+0x1e277]        # 0x140055740
   1400374c9:	lea    rdx,[rip+0x22460]        # 0x140059930
   1400374d0:	vfmsub213sd xmm5,xmm6,xmm1
   1400374d5:	vmovsd xmm0,QWORD PTR [r9+r8*8]
   1400374db:	vaddsd xmm3,xmm5,QWORD PTR [rdx+r8*8]
   1400374e1:	vmovapd xmm1,xmm3
   1400374e5:	vsubsd xmm3,xmm3,xmm2
   1400374e9:	vfmadd231sd xmm0,xmm6,QWORD PTR [rip+0x1e23e]        # 0x140055730
   1400374f2:	vmovapd xmm7,xmm0
   1400374f6:	vaddsd xmm0,xmm0,xmm3
   1400374fa:	vmovapd xmm5,xmm0
   1400374fe:	vandpd xmm0,xmm0,XMMWORD PTR [rip+0x1e18a]        # 0x140055690
   140037506:	mov    rax,QWORD PTR [rsp+0x30]
   14003750b:	and    rax,QWORD PTR [rip+0x1e17e]        # 0x140055690
   140037512:	vaddsd xmm2,xmm2,xmm3
   140037516:	vsubsd xmm7,xmm7,xmm5
   14003751a:	vsubsd xmm1,xmm1,xmm2
   14003751e:	vaddsd xmm7,xmm7,xmm3
   140037522:	vsubsd xmm5,xmm5,xmm0
   140037526:	mov    QWORD PTR [rsp+0x70],rax
   14003752b:	vmovsd xmm4,QWORD PTR [rsp+0x30]
   140037531:	vaddsd xmm7,xmm7,xmm1
   140037535:	vaddsd xmm7,xmm7,xmm5
   140037539:	vmovsd xmm2,QWORD PTR [rsp+0x70]
   14003753f:	vsubsd xmm4,xmm4,xmm2
   140037543:	vmulsd xmm3,xmm4,xmm7
   140037547:	vmulsd xmm4,xmm4,xmm0
   14003754b:	vmulsd xmm5,xmm7,xmm2
   14003754f:	vmulsd xmm6,xmm0,xmm2
   140037553:	vmovapd xmm1,xmm6
   140037557:	vaddsd xmm3,xmm3,xmm4
   14003755b:	vaddsd xmm3,xmm3,xmm5
   14003755f:	vaddsd xmm1,xmm1,xmm3
   140037563:	vmovapd xmm0,xmm1
   140037567:	vsubsd xmm6,xmm6,xmm1
   14003756b:	vaddsd xmm6,xmm6,xmm3
   14003756f:	vmovsd QWORD PTR [rsp+0x40],xmm0
   140037575:	vmulsd xmm7,xmm0,QWORD PTR [rip+0x1f343]        # 0x1400568c0
   14003757d:	mov    rdx,QWORD PTR [rsp+0x40]
   140037582:	vcomisd xmm7,QWORD PTR [rip+0x1f316]        # 0x1400568a0
   14003758a:	ja     0x140037770
   140037590:	vcomisd xmm7,QWORD PTR [rip+0x1f318]        # 0x1400568b0
   140037598:	jb     0x140037750
   14003759e:	vcvtpd2dq xmm4,xmm7
   1400375a2:	lea    r10,[rip+0x22b97]        # 0x14005a140
   1400375a9:	lea    r11,[rip+0x22d90]        # 0x14005a340
   1400375b0:	vcvtdq2pd xmm1,xmm4
   1400375b4:	vfnmadd231sd xmm0,xmm1,QWORD PTR [rip+0x1f313]        # 0x1400568d0
   1400375bd:	vmovd  ecx,xmm4
   1400375c1:	mov    rax,0x3f
   1400375c8:	and    eax,ecx
   1400375ca:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x1f30e]        # 0x1400568e0
   1400375d2:	vmovapd xmm2,xmm0
   1400375d6:	sub    ecx,eax
   1400375d8:	sar    ecx,0x6
   1400375db:	vaddsd xmm2,xmm2,xmm1
   1400375df:	vaddsd xmm2,xmm2,xmm6
   1400375e3:	vmovapd xmm1,xmm2
   1400375e7:	vmovsd xmm0,QWORD PTR [rip+0x1f301]        # 0x1400568f0
   1400375ef:	xor    r9d,r9d
   1400375f2:	vfmadd213sd xmm0,xmm2,QWORD PTR [rip+0x1f305]        # 0x140056900
   1400375fb:	cmp    ecx,DWORD PTR [rip+0x1f24f]        # 0x140056850
   140037601:	vfmadd213sd xmm0,xmm2,QWORD PTR [rip+0x1f306]        # 0x140056910
   14003760a:	cmovle r9d,ecx
   14003760e:	vfmadd213sd xmm0,xmm2,QWORD PTR [rip+0x1f309]        # 0x140056920
   140037617:	add    rcx,0x3ff
   14003761e:	vfmadd213sd xmm0,xmm2,QWORD PTR [rip+0x1f309]        # 0x140056930
   140037627:	shl    rcx,0x34
   14003762b:	vfmadd213sd xmm0,xmm2,QWORD PTR [rip+0x1e12c]        # 0x140055760
   140037634:	vmulsd xmm0,xmm0,xmm2
   140037638:	vmulsd xmm5,xmm0,QWORD PTR [r11+rax*8]
   14003763e:	vmulsd xmm1,xmm0,QWORD PTR [r10+rax*8]
   140037644:	cmp    rcx,QWORD PTR [rip+0x1e095]        # 0x1400556e0
   14003764b:	vaddsd xmm5,xmm5,QWORD PTR [r11+rax*8]
   140037651:	vaddsd xmm1,xmm1,xmm5
   140037655:	vaddsd xmm1,xmm1,QWORD PTR [r10+rax*8]
   14003765b:	vmovapd xmm0,xmm1
   14003765f:	je     0x1400376a0
   140037661:	test   r9d,r9d
   140037664:	mov    QWORD PTR [rsp+0x40],rcx
   140037669:	jne    0x1400376c0
   14003766b:	vmulsd xmm0,xmm0,QWORD PTR [rsp+0x40]
   140037671:	vorpd  xmm0,xmm0,XMMWORD PTR [rsp+0x50]
   140037677:	vmovdqa xmm7,XMMWORD PTR [rsp+0xa0]
   140037680:	vmovdqa xmm6,XMMWORD PTR [rsp+0x90]
   140037689:	add    rsp,0xd8
   140037690:	ret    
   140037691:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400376a0:	vcomisd xmm0,QWORD PTR [rip+0x1e0b8]        # 0x140055760
   1400376a8:	jae    0x140037770
   1400376ae:	vorpd  xmm0,xmm0,XMMWORD PTR [rip+0x1f1aa]        # 0x140056860
   1400376b6:	vorpd  xmm0,xmm0,XMMWORD PTR [rsp+0x50]
   1400376bc:	jmp    0x140037677
   1400376be:	xchg   ax,ax
   1400376c0:	mov    ecx,r9d
   1400376c3:	xor    r11d,r11d
   1400376c6:	vcomisd xmm0,QWORD PTR [rip+0x1e092]        # 0x140055760
   1400376ce:	cmovae r11d,ecx
   1400376d2:	cmp    r11d,DWORD PTR [rip+0x1f177]        # 0x140056850
   1400376d9:	jne    0x1400376f0
   1400376db:	vmulsd xmm0,xmm0,QWORD PTR [rsp+0x40]
   1400376e1:	vorpd  xmm0,xmm0,XMMWORD PTR [rsp+0x50]
   1400376e7:	jmp    0x140037677
   1400376e9:	nop    DWORD PTR [rax+0x0]
   1400376f0:	xor    r8,r8
   1400376f3:	cmp    rdx,QWORD PTR [rip+0x1f196]        # 0x140056890
   1400376fa:	mov    r9,0x1
   140037701:	jg     0x140037730
   140037703:	add    ecx,0x432
   140037709:	cmovs  rcx,r8
   14003770d:	shl    r9,cl
   140037710:	mov    rcx,r9
   140037713:	mov    QWORD PTR [rsp+0x40],rcx
   140037718:	vmulsd xmm0,xmm0,QWORD PTR [rsp+0x40]
   14003771e:	vorpd  xmm0,xmm0,XMMWORD PTR [rsp+0x50]
   140037724:	jmp    0x140037d60
   140037729:	nop    DWORD PTR [rax+0x0]
   140037730:	vmovsd xmm0,QWORD PTR [rip+0x1f148]        # 0x140056880
   140037738:	vorpd  xmm0,xmm0,XMMWORD PTR [rsp+0x50]
   14003773e:	jmp    0x140037d60
   140037743:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037750:	mov    r11,QWORD PTR [rip+0x1f119]        # 0x140056870
   140037757:	or     r11,QWORD PTR [rsp+0x50]
   14003775c:	jmp    0x140037c30
   140037761:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037770:	mov    r11,QWORD PTR [rip+0x1df69]        # 0x1400556e0
   140037777:	or     r11,QWORD PTR [rsp+0x50]
   14003777c:	jmp    0x140037c30
   140037781:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037790:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0x1dfc8]        # 0x140055760
   140037798:	vsubsd xmm2,xmm2,QWORD PTR [rip+0x1dfc0]        # 0x140055760
   1400377a0:	vmovapd xmm5,xmm2
   1400377a4:	vpand  xmm2,xmm2,XMMWORD PTR [rip+0x1df54]        # 0x140055700
   1400377ac:	vmovq  r8,xmm2
   1400377b1:	vpsrlq xmm5,xmm5,0x34
   1400377b6:	vpsubd xmm5,xmm5,XMMWORD PTR [rip+0x1e042]        # 0x140055800
   1400377be:	vcvtdq2pd xmm6,xmm5
   1400377c2:	jmp    0x140037412
   1400377c7:	nop    WORD PTR [rax+rax*1+0x0]
   1400377d0:	mov    r10,QWORD PTR [rip+0x1de09]        # 0x1400555e0
   1400377d7:	and    r10,r8
   1400377da:	cmp    r10,QWORD PTR [rip+0x1dddf]        # 0x1400555c0
   1400377e1:	jg     0x140037a00
   1400377e7:	mov    r10,QWORD PTR [rip+0x1de1a]        # 0x140055608
   1400377ee:	and    r10,r8
   1400377f1:	mov    r11,r10
   1400377f4:	mov    rcx,QWORD PTR [rip+0x1de4d]        # 0x140055648
   1400377fb:	shr    r10,cl
   1400377fe:	sub    r10,QWORD PTR [rip+0x1de4b]        # 0x140055650
   140037805:	js     0x1400379b0
   14003780b:	mov    rax,QWORD PTR [rip+0x1ddf6]        # 0x140055608
   140037812:	and    rax,rdx
   140037815:	mov    QWORD PTR [rsp+0x60],rax
   14003781a:	cmp    r10,QWORD PTR [rip+0x1de3f]        # 0x140055660
   140037821:	mov    rcx,r10
   140037824:	jg     0x140037854
   140037826:	mov    r9,QWORD PTR [rip+0x1de3b]        # 0x140055668
   14003782d:	shr    r9,cl
   140037830:	and    r9,r11
   140037833:	jne    0x1400379b0
   140037839:	mov    r9,QWORD PTR [rip+0x1de30]        # 0x140055670
   140037840:	shr    r9,cl
   140037843:	and    r9,r11
   140037846:	je     0x140037854
   140037848:	mov    rax,QWORD PTR [rip+0x1dd81]        # 0x1400555d0
   14003784f:	mov    QWORD PTR [rsp+0x50],rax
   140037854:	cmp    rdx,QWORD PTR [rip+0x1dde5]        # 0x140055640
   14003785b:	je     0x140037a50
   140037861:	cmp    rdx,QWORD PTR [rip+0x1ddd0]        # 0x140055638
   140037868:	je     0x140037960
   14003786e:	mov    r9,QWORD PTR [rip+0x1dd6b]        # 0x1400555e0
   140037875:	and    r9,rdx
   140037878:	cmp    r9,QWORD PTR [rip+0x1dd61]        # 0x1400555e0
   14003787f:	je     0x140037b20
   140037885:	vmovsd xmm0,QWORD PTR [rsp+0x60]
   14003788b:	jmp    0x1400373e6
   140037890:	xor    rax,rax
   140037893:	mov    r11,r8
   140037896:	mov    r9,QWORD PTR [rip+0x1dd43]        # 0x1400555e0
   14003789d:	or     r11,QWORD PTR [rip+0x1dd8c]        # 0x140055630
   1400378a4:	and    r9,r8
   1400378a7:	cmp    r9,QWORD PTR [rip+0x1dd32]        # 0x1400555e0
   1400378ae:	cmove  rax,r8
   1400378b2:	mov    r9,QWORD PTR [rip+0x1dd57]        # 0x140055610
   1400378b9:	and    r9,rax
   1400378bc:	je     0x1400378cb
   1400378be:	and    r9,QWORD PTR [rip+0x1dd6b]        # 0x140055630
   1400378c5:	je     0x140037cd0
   1400378cb:	jmp    0x140037677
   1400378d0:	xor    rax,rax
   1400378d3:	mov    r11,rdx
   1400378d6:	mov    r9,QWORD PTR [rip+0x1dd03]        # 0x1400555e0
   1400378dd:	or     r11,QWORD PTR [rip+0x1dd4c]        # 0x140055630
   1400378e4:	and    r9,rdx
   1400378e7:	cmp    r9,QWORD PTR [rip+0x1dcf2]        # 0x1400555e0
   1400378ee:	cmove  rax,rdx
   1400378f2:	mov    r9,QWORD PTR [rip+0x1dd17]        # 0x140055610
   1400378f9:	and    r9,rax
   1400378fc:	je     0x14003790b
   1400378fe:	and    r9,QWORD PTR [rip+0x1dd2b]        # 0x140055630
   140037905:	je     0x140037c80
   14003790b:	vmovsd xmm0,QWORD PTR [rip+0x1de4d]        # 0x140055760
   140037913:	jmp    0x140037677
   140037918:	nop    DWORD PTR [rax+rax*1+0x0]
   140037920:	xor    rax,rax
   140037923:	mov    r11,rdx
   140037926:	mov    r9,QWORD PTR [rip+0x1dcb3]        # 0x1400555e0
   14003792d:	or     r11,QWORD PTR [rip+0x1dcfc]        # 0x140055630
   140037934:	and    r9,rdx
   140037937:	cmp    r9,QWORD PTR [rip+0x1dca2]        # 0x1400555e0
   14003793e:	cmove  rax,rdx
   140037942:	mov    r9,QWORD PTR [rip+0x1dcc7]        # 0x140055610
   140037949:	and    r9,rax
   14003794c:	jne    0x140037c80
   140037952:	vmovq  xmm0,rdx
   140037957:	jmp    0x140037677
   14003795c:	nop    DWORD PTR [rax+0x0]
   140037960:	mov    rdx,QWORD PTR [rip+0x1dc91]        # 0x1400555f8
   140037967:	or     rdx,QWORD PTR [rsp+0x50]
   14003796c:	xor    rax,rax
   14003796f:	mov    r11,r8
   140037972:	mov    r10,QWORD PTR [rip+0x1dc67]        # 0x1400555e0
   140037979:	or     r11,QWORD PTR [rip+0x1dcb0]        # 0x140055630
   140037980:	and    r10,r8
   140037983:	cmp    r10,QWORD PTR [rip+0x1dc56]        # 0x1400555e0
   14003798a:	cmove  rax,r8
   14003798e:	mov    r10,QWORD PTR [rip+0x1dc7b]        # 0x140055610
   140037995:	and    r10,rax
   140037998:	jne    0x140037cd0
   14003799e:	vmovq  xmm0,rdx
   1400379a3:	jmp    0x140037677
   1400379a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400379b0:	mov    r9,QWORD PTR [rip+0x1dc29]        # 0x1400555e0
   1400379b7:	and    r9,rdx
   1400379ba:	cmp    r9,QWORD PTR [rip+0x1dc1f]        # 0x1400555e0
   1400379c1:	je     0x140037b20
   1400379c7:	cmp    rdx,QWORD PTR [rip+0x1dc72]        # 0x140055640
   1400379ce:	je     0x140037a50
   1400379d4:	vmovsd xmm0,QWORD PTR [rsp+0x20]
   1400379da:	vmovsd xmm1,QWORD PTR [rsp+0x30]
   1400379e0:	vmovsd xmm2,QWORD PTR [rip+0x1dc38]        # 0x140055620
   1400379e8:	mov    r9d,DWORD PTR [rip+0x1dbb5]        # 0x1400555a4
   1400379ef:	call   0x140043750
   1400379f4:	jmp    0x140037677
   1400379f9:	nop    DWORD PTR [rax+0x0]
   140037a00:	mov    r9,QWORD PTR [rip+0x1dbd9]        # 0x1400555e0
   140037a07:	and    r9,rdx
   140037a0a:	cmp    r9,QWORD PTR [rip+0x1dbcf]        # 0x1400555e0
   140037a11:	je     0x140037b20
   140037a17:	mov    r9,QWORD PTR [rip+0x1dbea]        # 0x140055608
   140037a1e:	and    r9,rdx
   140037a21:	je     0x140037a50
   140037a23:	cmp    rdx,QWORD PTR [rip+0x1dc0e]        # 0x140055638
   140037a2a:	je     0x140037960
   140037a30:	mov    r9,rdx
   140037a33:	and    r9,QWORD PTR [rip+0x1dbce]        # 0x140055608
   140037a3a:	cmp    r9,QWORD PTR [rip+0x1dbb7]        # 0x1400555f8
   140037a41:	jl     0x140037bb0
   140037a47:	jmp    0x140037bd0
   140037a4c:	nop    DWORD PTR [rax+0x0]
   140037a50:	mov    r10,QWORD PTR [rip+0x1db89]        # 0x1400555e0
   140037a57:	xor    rax,rax
   140037a5a:	and    r10,r8
   140037a5d:	cmp    r10,QWORD PTR [rip+0x1db7c]        # 0x1400555e0
   140037a64:	je     0x140037ac0
   140037a66:	mov    r10,QWORD PTR [rip+0x1db63]        # 0x1400555d0
   140037a6d:	and    r10,r8
   140037a70:	cmovne rax,QWORD PTR [rip+0x1db78]        # 0x1400555f0
   140037a78:	jne    0x140037a90
   140037a7a:	vmovq  xmm0,rax
   140037a7f:	vorpd  xmm0,xmm0,XMMWORD PTR [rsp+0x50]
   140037a85:	jmp    0x140037677
   140037a8a:	nop    WORD PTR [rax+rax*1+0x0]
   140037a90:	vmovsd xmm0,QWORD PTR [rsp+0x20]
   140037a96:	vmovsd xmm1,QWORD PTR [rsp+0x30]
   140037a9c:	vmovq  xmm2,rax
   140037aa1:	vorpd  xmm2,xmm2,XMMWORD PTR [rsp+0x50]
   140037aa7:	mov    r9d,DWORD PTR [rip+0x1dae6]        # 0x140055594
   140037aae:	call   0x140043750
   140037ab3:	jmp    0x140037677
   140037ab8:	nop    DWORD PTR [rax+rax*1+0x0]
   140037ac0:	mov    r11,r8
   140037ac3:	cmp    r8,QWORD PTR [rip+0x1db1e]        # 0x1400555e8
   140037aca:	je     0x140037b00
   140037acc:	cmp    r8,QWORD PTR [rip+0x1db1d]        # 0x1400555f0
   140037ad3:	je     0x140037b10
   140037ad5:	or     r11,QWORD PTR [rip+0x1db54]        # 0x140055630
   140037adc:	mov    r10,QWORD PTR [rip+0x1db2d]        # 0x140055610
   140037ae3:	and    r10,r8
   140037ae6:	jne    0x140037cd0
   140037aec:	vmovq  xmm0,rax
   140037af1:	jmp    0x140037677
   140037af6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140037b00:	vmovsd xmm0,QWORD PTR [rip+0x1dae8]        # 0x1400555f0
   140037b08:	jmp    0x140037677
   140037b0d:	nop    DWORD PTR [rax]
   140037b10:	vxorpd xmm0,xmm0,xmm0
   140037b14:	jmp    0x140037677
   140037b19:	nop    DWORD PTR [rax+0x0]
   140037b20:	xor    r11,r11
   140037b23:	mov    r10,QWORD PTR [rip+0x1daa6]        # 0x1400555d0
   140037b2a:	and    r10,r8
   140037b2d:	cmove  r11,QWORD PTR [rip+0x1dabb]        # 0x1400555f0
   140037b35:	mov    rax,rdx
   140037b38:	mov    r9,QWORD PTR [rip+0x1dad1]        # 0x140055610
   140037b3f:	or     rax,QWORD PTR [rip+0x1daea]        # 0x140055630
   140037b46:	and    r9,rdx
   140037b49:	cmovne r11,rax
   140037b4d:	jne    0x140037c80
   140037b53:	xor    rax,rax
   140037b56:	mov    r9,r8
   140037b59:	mov    r10,QWORD PTR [rip+0x1da80]        # 0x1400555e0
   140037b60:	or     r9,QWORD PTR [rip+0x1dac9]        # 0x140055630
   140037b67:	and    r10,r8
   140037b6a:	cmp    r10,QWORD PTR [rip+0x1da6f]        # 0x1400555e0
   140037b71:	cmove  rax,r8
   140037b75:	mov    r10,QWORD PTR [rip+0x1da94]        # 0x140055610
   140037b7c:	and    r10,rax
   140037b7f:	cmovne r11,r9
   140037b83:	jne    0x140037cd0
   140037b89:	vmovq  xmm0,r11
   140037b8e:	vorpd  xmm0,xmm0,XMMWORD PTR [rsp+0x50]
   140037b94:	jmp    0x140037677
   140037b99:	nop    DWORD PTR [rax+0x0]
   140037ba0:	vaddsd xmm0,xmm1,QWORD PTR [rip+0x1da50]        # 0x1400555f8
   140037ba8:	jmp    0x140037677
   140037bad:	nop    DWORD PTR [rax]
   140037bb0:	xor    r11,r11
   140037bb3:	mov    r10,QWORD PTR [rip+0x1da16]        # 0x1400555d0
   140037bba:	and    r10,r8
   140037bbd:	cmovne r11,QWORD PTR [rip+0x1da2b]        # 0x1400555f0
   140037bc5:	jmp    0x140037bf0
   140037bc7:	nop    WORD PTR [rax+rax*1+0x0]
   140037bd0:	xor    r11,r11
   140037bd3:	mov    r10,QWORD PTR [rip+0x1d9f6]        # 0x1400555d0
   140037bda:	and    r10,r8
   140037bdd:	cmove  r11,QWORD PTR [rip+0x1da0b]        # 0x1400555f0
   140037be5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037bf0:	xor    rax,rax
   140037bf3:	mov    r9,r8
   140037bf6:	mov    r10,QWORD PTR [rip+0x1d9e3]        # 0x1400555e0
   140037bfd:	or     r9,QWORD PTR [rip+0x1da2c]        # 0x140055630
   140037c04:	and    r10,r8
   140037c07:	cmp    r10,QWORD PTR [rip+0x1d9d2]        # 0x1400555e0
   140037c0e:	cmove  rax,r8
   140037c12:	mov    r10,QWORD PTR [rip+0x1d9f7]        # 0x140055610
   140037c19:	and    r10,rax
   140037c1c:	cmovne r11,r9
   140037c20:	jne    0x140037cd0
   140037c26:	test   rax,rax
   140037c29:	jne    0x140037c70
   140037c2b:	nop    DWORD PTR [rax+rax*1+0x0]
   140037c30:	mov    r9d,DWORD PTR [rip+0x1d971]        # 0x1400555a8
   140037c37:	test   QWORD PTR [rip+0x1d9ca],r11        # 0x140055608
   140037c3e:	cmovne r9d,DWORD PTR [rip+0x1d96a]        # 0x1400555b0
   140037c46:	vmovsd xmm0,QWORD PTR [rsp+0x20]
   140037c4c:	vmovsd xmm1,QWORD PTR [rsp+0x30]
   140037c52:	vmovq  xmm2,r11
   140037c57:	call   0x140043750
   140037c5c:	jmp    0x140037677
   140037c61:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037c70:	vmovq  xmm0,r11
   140037c75:	jmp    0x140037677
   140037c7a:	nop    WORD PTR [rax+rax*1+0x0]
   140037c80:	xor    rax,rax
   140037c83:	mov    r10,QWORD PTR [rip+0x1d956]        # 0x1400555e0
   140037c8a:	and    r10,r8
   140037c8d:	cmp    r10,QWORD PTR [rip+0x1d94c]        # 0x1400555e0
   140037c94:	cmove  rax,r8
   140037c98:	mov    r10,QWORD PTR [rip+0x1d971]        # 0x140055610
   140037c9f:	and    r10,rax
   140037ca2:	jne    0x140037d00
   140037ca4:	vmovsd xmm0,QWORD PTR [rsp+0x20]
   140037caa:	vmovsd xmm1,QWORD PTR [rsp+0x30]
   140037cb0:	vmovq  xmm2,r11
   140037cb5:	mov    r9d,DWORD PTR [rip+0x1d8dc]        # 0x140055598
   140037cbc:	call   0x140043750
   140037cc1:	jmp    0x140037677
   140037cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140037cd0:	vmovsd xmm0,QWORD PTR [rsp+0x20]
   140037cd6:	vmovsd xmm1,QWORD PTR [rsp+0x30]
   140037cdc:	vmovq  xmm2,r11
   140037ce1:	mov    r9d,DWORD PTR [rip+0x1d8b4]        # 0x14005559c
   140037ce8:	call   0x140043750
   140037ced:	jmp    0x140037677
   140037cf2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140037d00:	mov    r9,r8
   140037d03:	cmp    r11,QWORD PTR [rip+0x1d90e]        # 0x140055618
   140037d0a:	cmove  r11,r9
   140037d0e:	je     0x140037d37
   140037d10:	cmp    r9,QWORD PTR [rip+0x1d901]        # 0x140055618
   140037d17:	cmove  r9,r11
   140037d1b:	mov    r10,r9
   140037d1e:	and    r10,QWORD PTR [rip+0x1d8ab]        # 0x1400555d0
   140037d25:	cmovne r9,r11
   140037d29:	mov    r10,r11
   140037d2c:	and    r10,QWORD PTR [rip+0x1d89d]        # 0x1400555d0
   140037d33:	cmovne r11,r9
   140037d37:	or     r11,QWORD PTR [rip+0x1d8f2]        # 0x140055630
   140037d3e:	vmovsd xmm0,QWORD PTR [rsp+0x20]
   140037d44:	vmovsd xmm1,QWORD PTR [rsp+0x30]
   140037d4a:	vmovq  xmm2,r11
   140037d4f:	mov    r9d,DWORD PTR [rip+0x1d84a]        # 0x1400555a0
   140037d56:	call   0x140043750
   140037d5b:	jmp    0x140037677
   140037d60:	vmovapd xmm2,xmm0
   140037d64:	vmovsd xmm0,QWORD PTR [rsp+0x20]
   140037d6a:	vmovsd xmm1,QWORD PTR [rsp+0x30]
   140037d70:	mov    r9d,DWORD PTR [rip+0x1d835]        # 0x1400555ac
   140037d77:	call   0x140043750
   140037d7c:	jmp    0x140037677
   140037d81:	int3   
   140037d82:	int3   
   140037d83:	int3   
   140037d84:	int3   
   140037d85:	int3   
   140037d86:	int3   
   140037d87:	int3   
   140037d88:	int3   
   140037d89:	int3   
   140037d8a:	int3   
   140037d8b:	int3   
   140037d8c:	int3   
   140037d8d:	int3   
   140037d8e:	int3   
   140037d8f:	int3   
   140037d90:	sub    rsp,0x68
   140037d94:	movdqa XMMWORD PTR [rsp+0x20],xmm6
   140037d9a:	movdqa XMMWORD PTR [rsp+0x30],xmm7
   140037da0:	cmp    DWORD PTR [rip+0x3f559],0x0        # 0x140077300
   140037da7:	jne    0x1400384f6
   140037dad:	punpckldq xmm1,xmm0
   140037db1:	pxor   xmm5,xmm5
   140037db5:	movd   eax,xmm1
   140037db9:	movd   ecx,xmm0
   140037dbd:	mov    r9d,ecx
   140037dc0:	btr    eax,0x1f
   140037dc4:	btr    ecx,0x1f
   140037dc8:	cmp    eax,0x7f800000
   140037dcd:	jae    0x1400381a0
   140037dd3:	cmp    eax,0x3f800000
   140037dd8:	jle    0x140038250
   140037dde:	cmp    ecx,0x7f800000
   140037de4:	jae    0x1400380e0
   140037dea:	cvtps2pd xmm0,xmm1
   140037ded:	cmp    r9d,0x3f880000
   140037df4:	jl     0x140037f40
   140037dfa:	pshufd xmm2,xmm0,0xee
   140037dff:	pand   xmm2,XMMWORD PTR [rip+0x1ec19]        # 0x140056a20
   140037e07:	movq   rcx,xmm2
   140037e0c:	shr    rcx,0x2c
   140037e10:	adc    ecx,0x0
   140037e13:	mov    eax,ecx
   140037e15:	or     ecx,0x3fe00
   140037e1b:	shl    rcx,0x2c
   140037e1f:	movq   xmm1,rcx
   140037e24:	por    xmm2,XMMWORD PTR [rip+0x1ebd4]        # 0x140056a00
   140037e2c:	pshufd xmm3,xmm2,0xee
   140037e31:	psrlq  xmm3,0x34
   140037e36:	psubq  xmm3,XMMWORD PTR [rip+0x1ebd2]        # 0x140056a10
   140037e3e:	cvtdq2pd xmm3,xmm3
   140037e42:	lea    rcx,[rip+0x22907]        # 0x14005a750
   140037e49:	subsd  xmm1,xmm2
   140037e4d:	mulsd  xmm1,QWORD PTR [rcx+rax*8]
   140037e52:	movapd xmm2,xmm1
   140037e56:	movsd  xmm4,QWORD PTR [rip+0x1eb06]        # 0x140056964
   140037e5e:	mulsd  xmm4,xmm1
   140037e62:	mulsd  xmm1,xmm2
   140037e66:	addsd  xmm4,QWORD PTR [rip+0x1eb92]        # 0x140056a00
   140037e6e:	mulsd  xmm1,xmm4
   140037e72:	addsd  xmm1,xmm2
   140037e76:	mulsd  xmm3,QWORD PTR [rip+0x1eaee]        # 0x14005696c
   140037e7e:	lea    rcx,[rip+0x1ebab]        # 0x140056a30
   140037e85:	addsd  xmm3,QWORD PTR [rcx+rax*8]
   140037e8a:	subsd  xmm3,xmm1
   140037e8e:	mulsd  xmm0,xmm3
   140037e92:	ucomisd xmm0,QWORD PTR [rip+0x1eada]        # 0x140056974
   140037e9a:	ja     0x1400384a0
   140037ea0:	ucomisd xmm0,QWORD PTR [rip+0x1ead4]        # 0x14005697c
   140037ea8:	jbe    0x140038470
   140037eae:	movapd xmm3,xmm0
   140037eb2:	mulpd  xmm3,XMMWORD PTR [rip+0x1eb36]        # 0x1400569f0
   140037eba:	cvtpd2dq xmm4,xmm3
   140037ebe:	cvtdq2pd xmm2,xmm4
   140037ec2:	mulsd  xmm2,QWORD PTR [rip+0x1eaba]        # 0x140056984
   140037eca:	movd   ecx,xmm4
   140037ece:	subsd  xmm0,xmm2
   140037ed2:	movapd xmm1,xmm0
   140037ed6:	movsd  xmm3,QWORD PTR [rip+0x1eaae]        # 0x14005698c
   140037ede:	mulsd  xmm3,xmm0
   140037ee2:	mulsd  xmm0,xmm1
   140037ee6:	addsd  xmm3,QWORD PTR [rip+0x1eb12]        # 0x140056a00
   140037eee:	mulsd  xmm0,xmm3
   140037ef2:	addsd  xmm0,xmm1
   140037ef6:	mov    rax,0x3f
   140037efd:	and    eax,ecx
   140037eff:	lea    rcx,[rip+0x2264a]        # 0x14005a550
   140037f06:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
   140037f0b:	addsd  xmm0,QWORD PTR [rcx+rax*8]
   140037f10:	psrad  xmm4,0x6
   140037f15:	psllq  xmm4,0x34
   140037f1a:	paddq  xmm4,xmm0
   140037f1e:	cvtsd2ss xmm0,xmm4
   140037f22:	orps   xmm0,xmm5
   140037f25:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140037f2b:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140037f31:	add    rsp,0x68
   140037f35:	ret    
   140037f36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140037f40:	cmp    r9d,0x0
   140037f44:	jg     0x140037f95
   140037f46:	cmp    ecx,0x0
   140037f49:	je     0x140038030
   140037f4f:	and    eax,0x7f800000
   140037f54:	cmp    eax,0x4b000000
   140037f59:	jg     0x140037f95
   140037f5b:	stmxcsr DWORD PTR [rsp+0x40]
   140037f60:	mov    edx,DWORD PTR [rsp+0x40]
   140037f64:	or     edx,0x1f80
   140037f6a:	mov    DWORD PTR [rsp+0x50],edx
   140037f6e:	ldmxcsr DWORD PTR [rsp+0x50]
   140037f73:	cvtss2si edx,xmm1
   140037f77:	cvtsi2ss xmm2,edx
   140037f7b:	ldmxcsr DWORD PTR [rsp+0x40]
   140037f80:	ucomiss xmm2,xmm1
   140037f83:	jne    0x1400384d0
   140037f89:	rcr    edx,1
   140037f8b:	jae    0x140037f95
   140037f8d:	movss  xmm5,DWORD PTR [rip+0x1ea17]        # 0x1400569ac
   140037f95:	pshufd xmm3,xmm0,0xee
   140037f9a:	subsd  xmm3,QWORD PTR [rip+0x1e9fa]        # 0x14005699c
   140037fa2:	movq   rdx,xmm3
   140037fa7:	btr    rdx,0x3f
   140037fac:	cmp    rdx,QWORD PTR [rip+0x1e9e1]        # 0x140056994
   140037fb3:	jae    0x140037dfa
   140037fb9:	movapd xmm7,XMMWORD PTR [rip+0x1e9ff]        # 0x1400569c0
   140037fc1:	movapd xmm1,xmm3
   140037fc5:	movapd xmm6,xmm3
   140037fc9:	addsd  xmm1,QWORD PTR [rip+0x1e9d3]        # 0x1400569a4
   140037fd1:	divsd  xmm6,xmm1
   140037fd5:	movapd xmm2,xmm6
   140037fd9:	mulsd  xmm6,xmm3
   140037fdd:	addsd  xmm2,xmm2
   140037fe1:	movapd xmm1,xmm2
   140037fe5:	mulsd  xmm1,xmm2
   140037fe9:	pshufd xmm4,xmm1,0x44
   140037fee:	mulpd  xmm4,xmm7
   140037ff2:	mulsd  xmm2,xmm1
   140037ff6:	addpd  xmm4,XMMWORD PTR [rip+0x1e9d2]        # 0x1400569d0
   140037ffe:	mulsd  xmm1,xmm1
   140038002:	mulsd  xmm1,xmm2
   140038006:	unpcklpd xmm2,xmm1
   14003800a:	mulpd  xmm2,xmm4
   14003800e:	pshufd xmm1,xmm2,0xee
   140038013:	addsd  xmm2,xmm1
   140038017:	subsd  xmm2,xmm6
   14003801b:	addsd  xmm3,xmm2
   14003801f:	jmp    0x140037e8e
   140038024:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038030:	mov    r8d,eax
   140038033:	movd   edx,xmm1
   140038037:	mov    eax,0x0
   14003803c:	mov    r10d,0x0
   140038042:	mov    ecx,0x7f800000
   140038047:	cmp    edx,0x0
   14003804a:	cmovl  edx,ecx
   14003804d:	cmovl  r10d,ecx
   140038051:	cmovg  edx,eax
   140038054:	mov    ecx,0x80000000
   140038059:	and    r8d,0x7f800000
   140038060:	cmp    r8d,0x4b000000
   140038067:	cmovg  ecx,eax
   14003806a:	jg     0x1400380af
   14003806c:	stmxcsr DWORD PTR [rsp+0x40]
   140038071:	mov    r8d,DWORD PTR [rsp+0x40]
   140038076:	or     r8d,0x1f80
   14003807d:	mov    DWORD PTR [rsp+0x50],r8d
   140038082:	ldmxcsr DWORD PTR [rsp+0x50]
   140038087:	cvtss2si r8d,xmm1
   14003808c:	cvtsi2ss xmm2,r8d
   140038091:	ldmxcsr DWORD PTR [rsp+0x40]
   140038096:	ucomiss xmm2,xmm1
   140038099:	cmovne ecx,eax
   14003809c:	jne    0x1400380af
   14003809e:	rcr    r8d,1
   1400380a1:	cmovae ecx,eax
   1400380a4:	jae    0x1400380af
   1400380a6:	mov    ecx,r9d
   1400380a9:	and    ecx,0x80000000
   1400380af:	or     ecx,edx
   1400380b1:	movd   xmm0,ecx
   1400380b5:	cmp    r10d,0x0
   1400380b9:	je     0x1400380cb
   1400380bb:	mov    r9d,DWORD PTR [rip+0x1e882]        # 0x140056944
   1400380c2:	movdqa xmm2,xmm0
   1400380c6:	call   0x140043874
   1400380cb:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400380d1:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400380d7:	add    rsp,0x68
   1400380db:	ret    
   1400380dc:	nop    DWORD PTR [rax+0x0]
   1400380e0:	cmp    eax,0x0
   1400380e3:	je     0x140038330
   1400380e9:	movd   ecx,xmm0
   1400380ed:	movd   edx,xmm1
   1400380f1:	cmp    ecx,0x7f800000
   1400380f7:	je     0x140038110
   1400380f9:	cmp    ecx,0xff800000
   1400380ff:	je     0x140038120
   140038101:	jmp    0x1400383b0
   140038106:	data16 nop WORD PTR [rax+rax*1+0x0]
   140038110:	cmp    edx,0x0
   140038113:	jl     0x140038370
   140038119:	jmp    0x140038390
   14003811e:	xchg   ax,ax
   140038120:	mov    r8d,eax
   140038123:	mov    eax,0x0
   140038128:	mov    ecx,0x7f800000
   14003812d:	cmp    edx,0x0
   140038130:	cmovl  edx,eax
   140038133:	cmovg  edx,ecx
   140038136:	mov    ecx,0x80000000
   14003813b:	and    r8d,0x7f800000
   140038142:	cmp    r8d,0x4b000000
   140038149:	cmovg  ecx,eax
   14003814c:	jg     0x140038186
   14003814e:	stmxcsr DWORD PTR [rsp+0x40]
   140038153:	mov    r8d,DWORD PTR [rsp+0x40]
   140038158:	or     r8d,0x1f80
   14003815f:	mov    DWORD PTR [rsp+0x50],r8d
   140038164:	ldmxcsr DWORD PTR [rsp+0x50]
   140038169:	cvtss2si r8d,xmm1
   14003816e:	cvtsi2ss xmm2,r8d
   140038173:	ldmxcsr DWORD PTR [rsp+0x40]
   140038178:	ucomiss xmm2,xmm1
   14003817b:	cmovne ecx,eax
   14003817e:	jne    0x140038186
   140038180:	rcr    r8d,1
   140038183:	cmovae ecx,eax
   140038186:	or     ecx,edx
   140038188:	movd   xmm0,ecx
   14003818c:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038192:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038198:	add    rsp,0x68
   14003819c:	ret    
   14003819d:	nop    DWORD PTR [rax]
   1400381a0:	ja     0x140038230
   1400381a6:	cmp    ecx,0x7f800000
   1400381ac:	ja     0x1400383b0
   1400381b2:	cmp    ecx,0x3f800000
   1400381b8:	je     0x140038350
   1400381be:	movd   eax,xmm1
   1400381c2:	bt     eax,0x1f
   1400381c6:	jb     0x1400381e0
   1400381c8:	cmp    ecx,0x3f800000
   1400381ce:	jb     0x140038370
   1400381d4:	jmp    0x140038390
   1400381d9:	nop    DWORD PTR [rax+0x0]
   1400381e0:	mov    edx,0x1
   1400381e5:	mov    eax,0x0
   1400381ea:	mov    r8d,0x7f800000
   1400381f0:	cmp    ecx,0x0
   1400381f3:	je     0x140038390
   1400381f9:	cmovne edx,eax
   1400381fc:	cmp    ecx,0x3f800000
   140038202:	cmovb  eax,r8d
   140038206:	movd   xmm0,eax
   14003820a:	cmp    edx,0x0
   14003820d:	je     0x14003821f
   14003820f:	movdqa xmm2,xmm0
   140038213:	mov    r9d,DWORD PTR [rip+0x1e72a]        # 0x140056944
   14003821a:	call   0x140043874
   14003821f:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038225:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14003822b:	add    rsp,0x68
   14003822f:	ret    
   140038230:	cmp    ecx,0x7f800000
   140038236:	ja     0x140038410
   14003823c:	cmp    r9d,0x3f800000
   140038243:	je     0x140038300
   140038249:	jmp    0x1400383e0
   14003824e:	xchg   ax,ax
   140038250:	cmp    eax,0x0
   140038253:	je     0x1400382c0
   140038255:	movd   edx,xmm1
   140038259:	cmp    edx,0x3f800000
   14003825f:	jne    0x140037dde
   140038265:	movd   r9d,xmm0
   14003826a:	and    r9d,0x7fffffff
   140038271:	cmp    r9d,0x7f800000
   140038278:	ja     0x14003828b
   14003827a:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038280:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038286:	add    rsp,0x68
   14003828a:	ret    
   14003828b:	movd   edx,xmm0
   14003828f:	or     edx,0x400000
   140038295:	movd   xmm2,edx
   140038299:	mov    r9d,DWORD PTR [rip+0x1e6a8]        # 0x140056948
   1400382a0:	call   0x140043874
   1400382a5:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400382ab:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400382b1:	add    rsp,0x68
   1400382b5:	ret    
   1400382b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400382c0:	cmp    ecx,0x7f800000
   1400382c6:	jbe    0x140038330
   1400382c8:	cmp    ecx,0x7fc00000
   1400382ce:	jae    0x140038330
   1400382d0:	mov    edx,ecx
   1400382d2:	or     edx,0x400000
   1400382d8:	movd   xmm2,edx
   1400382dc:	mov    r9d,DWORD PTR [rip+0x1e665]        # 0x140056948
   1400382e3:	call   0x140043874
   1400382e8:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400382ee:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400382f4:	add    rsp,0x68
   1400382f8:	ret    
   1400382f9:	nop    DWORD PTR [rax+0x0]
   140038300:	cmp    eax,0x7fc00000
   140038305:	jae    0x140038330
   140038307:	mov    edx,0x3f800000
   14003830c:	movd   xmm2,edx
   140038310:	mov    r9d,DWORD PTR [rip+0x1e635]        # 0x14005694c
   140038317:	call   0x140043874
   14003831c:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038322:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038328:	add    rsp,0x68
   14003832c:	ret    
   14003832d:	nop    DWORD PTR [rax]
   140038330:	mov    edx,0x3f800000
   140038335:	movd   xmm0,edx
   140038339:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   14003833f:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038345:	add    rsp,0x68
   140038349:	ret    
   14003834a:	nop    WORD PTR [rax+rax*1+0x0]
   140038350:	mov    edx,0x3f800000
   140038355:	movd   xmm0,edx
   140038359:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   14003835f:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038365:	add    rsp,0x68
   140038369:	ret    
   14003836a:	nop    WORD PTR [rax+rax*1+0x0]
   140038370:	pxor   xmm0,xmm0
   140038374:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   14003837a:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038380:	add    rsp,0x68
   140038384:	ret    
   140038385:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038390:	mov    edx,0x7f800000
   140038395:	movd   xmm0,edx
   140038399:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   14003839f:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400383a5:	add    rsp,0x68
   1400383a9:	ret    
   1400383aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400383b0:	movd   ecx,xmm0
   1400383b4:	or     ecx,0x400000
   1400383ba:	movd   xmm2,ecx
   1400383be:	mov    r9d,DWORD PTR [rip+0x1e583]        # 0x140056948
   1400383c5:	call   0x140043874
   1400383ca:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400383d0:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400383d6:	add    rsp,0x68
   1400383da:	ret    
   1400383db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400383e0:	movd   eax,xmm1
   1400383e4:	or     eax,0x400000
   1400383e9:	movd   xmm2,eax
   1400383ed:	mov    r9d,DWORD PTR [rip+0x1e558]        # 0x14005694c
   1400383f4:	call   0x140043874
   1400383f9:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400383ff:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038405:	add    rsp,0x68
   140038409:	ret    
   14003840a:	nop    WORD PTR [rax+rax*1+0x0]
   140038410:	cmp    r9d,0xffc00000
   140038417:	je     0x140038444
   140038419:	movd   ecx,xmm0
   14003841d:	or     ecx,0x400000
   140038423:	movd   xmm2,ecx
   140038427:	mov    r9d,DWORD PTR [rip+0x1e522]        # 0x140056950
   14003842e:	call   0x140043874
   140038433:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038439:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14003843f:	add    rsp,0x68
   140038443:	ret    
   140038444:	movd   eax,xmm1
   140038448:	or     eax,0x400000
   14003844d:	movd   xmm2,eax
   140038451:	mov    r9d,DWORD PTR [rip+0x1e4f8]        # 0x140056950
   140038458:	call   0x140043874
   14003845d:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038463:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038469:	add    rsp,0x68
   14003846d:	ret    
   14003846e:	xchg   ax,ax
   140038470:	pxor   xmm2,xmm2
   140038474:	orps   xmm2,xmm5
   140038477:	mov    r9d,DWORD PTR [rip+0x1e4da]        # 0x140056958
   14003847e:	call   0x140043874
   140038483:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038489:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14003848f:	add    rsp,0x68
   140038493:	ret    
   140038494:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400384a0:	mov    edx,0x7f800000
   1400384a5:	movd   xmm2,edx
   1400384a9:	orps   xmm2,xmm5
   1400384ac:	mov    r9d,DWORD PTR [rip+0x1e4ad]        # 0x140056960
   1400384b3:	call   0x140043874
   1400384b8:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400384be:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400384c4:	add    rsp,0x68
   1400384c8:	ret    
   1400384c9:	nop    DWORD PTR [rax+0x0]
   1400384d0:	mov    edx,0xffc00000
   1400384d5:	movd   xmm2,edx
   1400384d9:	mov    r9d,DWORD PTR [rip+0x1e474]        # 0x140056954
   1400384e0:	call   0x140043874
   1400384e5:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400384eb:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400384f1:	add    rsp,0x68
   1400384f5:	ret    
   1400384f6:	vpunpckldq xmm1,xmm1,xmm0
   1400384fa:	vpxor  xmm5,xmm5,xmm5
   1400384fe:	vmovd  eax,xmm1
   140038502:	vmovd  ecx,xmm0
   140038506:	mov    r9d,ecx
   140038509:	and    eax,0x7fffffff
   14003850e:	and    ecx,0x7fffffff
   140038514:	cmp    eax,0x7f800000
   140038519:	jae    0x140038900
   14003851f:	cmp    eax,0x3f800000
   140038524:	jle    0x1400389a0
   14003852a:	cmp    ecx,0x7f800000
   140038530:	jae    0x140038840
   140038536:	vcvtps2pd xmm0,xmm1
   14003853a:	cmp    r9d,0x3f880000
   140038541:	jl     0x140038690
   140038547:	vpshufd xmm2,xmm0,0xee
   14003854c:	vpand  xmm2,xmm2,XMMWORD PTR [rip+0x1e4cc]        # 0x140056a20
   140038554:	vmovq  rcx,xmm2
   140038559:	shr    rcx,0x2c
   14003855d:	adc    ecx,0x0
   140038560:	mov    eax,ecx
   140038562:	or     ecx,0x3fe00
   140038568:	shl    rcx,0x2c
   14003856c:	vmovq  xmm1,rcx
   140038571:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0x1e487]        # 0x140056a00
   140038579:	vpshufd xmm3,xmm2,0xee
   14003857e:	vpsrlq xmm3,xmm3,0x34
   140038583:	vpsubq xmm3,xmm3,XMMWORD PTR [rip+0x1e485]        # 0x140056a10
   14003858b:	vcvtdq2pd xmm3,xmm3
   14003858f:	lea    rcx,[rip+0x221ba]        # 0x14005a750
   140038596:	vsubsd xmm1,xmm1,xmm2
   14003859a:	vmulsd xmm1,xmm1,QWORD PTR [rcx+rax*8]
   14003859f:	vmovapd xmm2,xmm1
   1400385a3:	vmovsd xmm4,QWORD PTR [rip+0x1e3b9]        # 0x140056964
   1400385ab:	vfmadd213sd xmm4,xmm1,QWORD PTR [rip+0x1e44c]        # 0x140056a00
   1400385b4:	vfmadd213sd xmm4,xmm1,QWORD PTR [rip+0x1e3df]        # 0x14005699c
   1400385bd:	vmulsd xmm1,xmm1,xmm4
   1400385c1:	vmulsd xmm3,xmm3,QWORD PTR [rip+0x1e3a3]        # 0x14005696c
   1400385c9:	lea    rcx,[rip+0x1e460]        # 0x140056a30
   1400385d0:	vaddsd xmm3,xmm3,QWORD PTR [rcx+rax*8]
   1400385d5:	vsubsd xmm3,xmm3,xmm1
   1400385d9:	vmulsd xmm0,xmm0,xmm3
   1400385dd:	vucomisd xmm0,QWORD PTR [rip+0x1e38f]        # 0x140056974
   1400385e5:	ja     0x140038c00
   1400385eb:	vucomisd xmm0,QWORD PTR [rip+0x1e389]        # 0x14005697c
   1400385f3:	jbe    0x140038bd0
   1400385f9:	vmulpd xmm3,xmm0,XMMWORD PTR [rip+0x1e3ef]        # 0x1400569f0
   140038601:	vcvtpd2dq xmm4,xmm3
   140038605:	vcvtdq2pd xmm2,xmm4
   140038609:	vmovd  ecx,xmm4
   14003860d:	vfnmadd231sd xmm0,xmm2,QWORD PTR [rip+0x1e36e]        # 0x140056984
   140038616:	vmovapd xmm1,xmm0
   14003861a:	vmovsd xmm3,QWORD PTR [rip+0x1e36a]        # 0x14005698c
   140038622:	vfmadd213sd xmm3,xmm0,QWORD PTR [rip+0x1e3d5]        # 0x140056a00
   14003862b:	vfmadd213sd xmm3,xmm0,QWORD PTR [rip+0x1e368]        # 0x14005699c
   140038634:	vmulsd xmm0,xmm0,xmm3
   140038638:	mov    rax,0x3f
   14003863f:	and    eax,ecx
   140038641:	lea    rcx,[rip+0x21f08]        # 0x14005a550
   140038648:	vmovsd xmm3,QWORD PTR [rcx+rax*8]
   14003864d:	vfmadd213sd xmm0,xmm3,xmm3
   140038652:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038660:	vpsrad xmm4,xmm4,0x6
   140038665:	vpsllq xmm4,xmm4,0x34
   14003866a:	vpaddq xmm4,xmm4,xmm0
   14003866e:	vcvtsd2ss xmm0,xmm0,xmm4
   140038672:	vorps  xmm0,xmm0,xmm5
   140038676:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   14003867c:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038682:	add    rsp,0x68
   140038686:	ret    
   140038687:	nop    WORD PTR [rax+rax*1+0x0]
   140038690:	cmp    r9d,0x0
   140038694:	jg     0x1400386e9
   140038696:	cmp    ecx,0x0
   140038699:	je     0x140038780
   14003869f:	and    eax,0x7f800000
   1400386a4:	cmp    eax,0x4b000000
   1400386a9:	jg     0x1400386e9
   1400386ab:	vstmxcsr DWORD PTR [rsp+0x40]
   1400386b1:	mov    edx,DWORD PTR [rsp+0x40]
   1400386b5:	or     edx,0x1f80
   1400386bb:	mov    DWORD PTR [rsp+0x50],edx
   1400386bf:	vldmxcsr DWORD PTR [rsp+0x50]
   1400386c5:	vcvtss2si edx,xmm1
   1400386c9:	vcvtsi2ss xmm2,xmm2,edx
   1400386cd:	vldmxcsr DWORD PTR [rsp+0x40]
   1400386d3:	vucomiss xmm2,xmm1
   1400386d7:	jne    0x140038c30
   1400386dd:	rcr    edx,1
   1400386df:	jae    0x1400386e9
   1400386e1:	vmovss xmm5,DWORD PTR [rip+0x1e2c3]        # 0x1400569ac
   1400386e9:	vpshufd xmm3,xmm0,0xee
   1400386ee:	vsubsd xmm3,xmm3,QWORD PTR [rip+0x1e2a6]        # 0x14005699c
   1400386f6:	vmovq  rdx,xmm3
   1400386fb:	btr    rdx,0x3f
   140038700:	cmp    rdx,QWORD PTR [rip+0x1e28d]        # 0x140056994
   140038707:	jae    0x140038547
   14003870d:	vpshufd xmm5,xmm5,0x44
   140038712:	vmovapd xmm1,xmm3
   140038716:	vmovsd xmm5,xmm5,xmm3
   14003871a:	vaddsd xmm1,xmm1,QWORD PTR [rip+0x1e282]        # 0x1400569a4
   140038722:	vdivsd xmm5,xmm5,xmm1
   140038726:	vmovapd xmm2,xmm5
   14003872a:	vmulsd xmm5,xmm5,xmm3
   14003872e:	vaddsd xmm2,xmm2,xmm2
   140038732:	vmovapd xmm1,xmm2
   140038736:	vmulsd xmm1,xmm1,xmm2
   14003873a:	vpshufd xmm4,xmm1,0x44
   14003873f:	vmulpd xmm4,xmm4,XMMWORD PTR [rip+0x1e279]        # 0x1400569c0
   140038747:	vmulsd xmm2,xmm2,xmm1
   14003874b:	vaddpd xmm4,xmm4,XMMWORD PTR [rip+0x1e27d]        # 0x1400569d0
   140038753:	vmulsd xmm1,xmm1,xmm1
   140038757:	vmulsd xmm1,xmm1,xmm2
   14003875b:	vunpcklpd xmm2,xmm2,xmm1
   14003875f:	vmulpd xmm2,xmm2,xmm4
   140038763:	vpshufd xmm1,xmm2,0xee
   140038768:	vaddsd xmm2,xmm1,xmm2
   14003876c:	vsubsd xmm2,xmm2,xmm5
   140038770:	vpshufd xmm5,xmm5,0xee
   140038775:	vaddsd xmm3,xmm3,xmm2
   140038779:	jmp    0x140037e8e
   14003877e:	xchg   ax,ax
   140038780:	mov    r8d,eax
   140038783:	vmovd  edx,xmm1
   140038787:	mov    eax,0x0
   14003878c:	mov    r10d,0x0
   140038792:	mov    ecx,0x7f800000
   140038797:	cmp    edx,0x0
   14003879a:	cmovl  edx,ecx
   14003879d:	cmovl  r10d,ecx
   1400387a1:	cmovg  edx,eax
   1400387a4:	mov    ecx,0x80000000
   1400387a9:	and    r8d,0x7f800000
   1400387b0:	cmp    r8d,0x4b000000
   1400387b7:	cmovg  ecx,eax
   1400387ba:	jg     0x140038802
   1400387bc:	vstmxcsr DWORD PTR [rsp+0x40]
   1400387c2:	mov    r8d,DWORD PTR [rsp+0x40]
   1400387c7:	or     r8d,0x1f80
   1400387ce:	mov    DWORD PTR [rsp+0x50],r8d
   1400387d3:	vldmxcsr DWORD PTR [rsp+0x50]
   1400387d9:	vcvtss2si r8d,xmm1
   1400387dd:	vcvtsi2ss xmm2,xmm2,r8d
   1400387e2:	vldmxcsr DWORD PTR [rsp+0x40]
   1400387e8:	vucomiss xmm2,xmm1
   1400387ec:	cmovne ecx,eax
   1400387ef:	jne    0x140038802
   1400387f1:	rcr    r8d,1
   1400387f4:	cmovae ecx,eax
   1400387f7:	jae    0x140038802
   1400387f9:	mov    ecx,r9d
   1400387fc:	and    ecx,0x80000000
   140038802:	or     ecx,edx
   140038804:	vmovd  xmm0,ecx
   140038808:	cmp    r10d,0x0
   14003880c:	je     0x1400380cb
   140038812:	mov    r9d,DWORD PTR [rip+0x1e12b]        # 0x140056944
   140038819:	vmovdqa xmm2,xmm0
   14003881d:	call   0x140043874
   140038822:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038828:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14003882e:	add    rsp,0x68
   140038832:	ret    
   140038833:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038840:	cmp    eax,0x0
   140038843:	je     0x140038a70
   140038849:	vmovd  ecx,xmm0
   14003884d:	vmovd  edx,xmm1
   140038851:	cmp    ecx,0x7f800000
   140038857:	je     0x140038870
   140038859:	cmp    ecx,0xff800000
   14003885f:	je     0x140038880
   140038861:	jmp    0x140038b10
   140038866:	data16 nop WORD PTR [rax+rax*1+0x0]
   140038870:	cmp    edx,0x0
   140038873:	jl     0x140038ab0
   140038879:	jmp    0x140038ad0
   14003887e:	xchg   ax,ax
   140038880:	mov    r8d,eax
   140038883:	mov    eax,0x0
   140038888:	mov    ecx,0x7f800000
   14003888d:	cmp    edx,0x0
   140038890:	cmovl  edx,eax
   140038893:	cmovg  edx,ecx
   140038896:	mov    ecx,0x80000000
   14003889b:	and    r8d,0x7f800000
   1400388a2:	cmp    r8d,0x4b000000
   1400388a9:	cmovg  ecx,eax
   1400388ac:	jg     0x1400388e9
   1400388ae:	vstmxcsr DWORD PTR [rsp+0x40]
   1400388b4:	mov    r8d,DWORD PTR [rsp+0x40]
   1400388b9:	or     r8d,0x1f80
   1400388c0:	mov    DWORD PTR [rsp+0x50],r8d
   1400388c5:	vldmxcsr DWORD PTR [rsp+0x50]
   1400388cb:	vcvtss2si r8d,xmm1
   1400388cf:	vcvtsi2ss xmm2,xmm2,r8d
   1400388d4:	vldmxcsr DWORD PTR [rsp+0x40]
   1400388da:	vucomiss xmm2,xmm1
   1400388de:	cmovne ecx,eax
   1400388e1:	jne    0x1400388e9
   1400388e3:	rcr    r8d,1
   1400388e6:	cmovae ecx,eax
   1400388e9:	or     ecx,edx
   1400388eb:	vmovd  xmm0,ecx
   1400388ef:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400388f5:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400388fb:	add    rsp,0x68
   1400388ff:	ret    
   140038900:	ja     0x140038970
   140038902:	cmp    ecx,0x7f800000
   140038908:	ja     0x140038b10
   14003890e:	cmp    ecx,0x3f800000
   140038914:	je     0x140038a90
   14003891a:	vmovd  eax,xmm1
   14003891e:	bt     eax,0x1f
   140038922:	jb     0x140038940
   140038924:	cmp    ecx,0x3f800000
   14003892a:	jb     0x140038ab0
   140038930:	jmp    0x140038ad0
   140038935:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038940:	mov    eax,0x0
   140038945:	mov    r8d,0x7f800000
   14003894b:	cmp    ecx,0x3f800000
   140038951:	cmovb  eax,r8d
   140038955:	vmovd  xmm0,eax
   140038959:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   14003895f:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038965:	add    rsp,0x68
   140038969:	ret    
   14003896a:	nop    WORD PTR [rax+rax*1+0x0]
   140038970:	cmp    ecx,0x7f800000
   140038976:	ja     0x140038b70
   14003897c:	cmp    r9d,0x3f800000
   140038983:	je     0x140038a40
   140038989:	vmovdqa xmm0,xmm1
   14003898d:	jmp    0x140038b40
   140038992:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400389a0:	cmp    eax,0x0
   1400389a3:	je     0x140038a00
   1400389a5:	vmovd  edx,xmm1
   1400389a9:	cmp    edx,0x3f800000
   1400389af:	jne    0x14003852a
   1400389b5:	cmp    ecx,0x7f800000
   1400389bb:	ja     0x1400389ce
   1400389bd:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400389c3:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400389c9:	add    rsp,0x68
   1400389cd:	ret    
   1400389ce:	vmovd  edx,xmm0
   1400389d2:	or     edx,0x400000
   1400389d8:	vmovd  xmm2,edx
   1400389dc:	mov    r9d,DWORD PTR [rip+0x1df65]        # 0x140056948
   1400389e3:	call   0x140043874
   1400389e8:	movdqa xmm7,XMMWORD PTR [rsp+0x30]
   1400389ee:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400389f4:	add    rsp,0x68
   1400389f8:	ret    
   1400389f9:	nop    DWORD PTR [rax+0x0]
   140038a00:	cmp    ecx,0x7f800000
   140038a06:	jbe    0x140038a70
   140038a08:	cmp    ecx,0x7fc00000
   140038a0e:	jae    0x140038a70
   140038a10:	mov    edx,ecx
   140038a12:	or     edx,0x400000
   140038a18:	vmovd  xmm2,edx
   140038a1c:	mov    r9d,DWORD PTR [rip+0x1df25]        # 0x140056948
   140038a23:	call   0x140043874
   140038a28:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038a2e:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038a34:	add    rsp,0x68
   140038a38:	ret    
   140038a39:	nop    DWORD PTR [rax+0x0]
   140038a40:	cmp    eax,0x7fc00000
   140038a45:	jae    0x140038a70
   140038a47:	mov    edx,0x3f800000
   140038a4c:	vmovd  xmm2,edx
   140038a50:	mov    r9d,DWORD PTR [rip+0x1def5]        # 0x14005694c
   140038a57:	call   0x140043874
   140038a5c:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038a62:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038a68:	add    rsp,0x68
   140038a6c:	ret    
   140038a6d:	nop    DWORD PTR [rax]
   140038a70:	mov    edx,0x3f800000
   140038a75:	vmovd  xmm0,edx
   140038a79:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038a7f:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038a85:	add    rsp,0x68
   140038a89:	ret    
   140038a8a:	nop    WORD PTR [rax+rax*1+0x0]
   140038a90:	mov    edx,0x3f800000
   140038a95:	vmovd  xmm0,edx
   140038a99:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038a9f:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038aa5:	add    rsp,0x68
   140038aa9:	ret    
   140038aaa:	nop    WORD PTR [rax+rax*1+0x0]
   140038ab0:	vpxor  xmm0,xmm0,xmm0
   140038ab4:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038aba:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038ac0:	add    rsp,0x68
   140038ac4:	ret    
   140038ac5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038ad0:	mov    edx,0x7f800000
   140038ad5:	vmovd  xmm0,edx
   140038ad9:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038adf:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038ae5:	add    rsp,0x68
   140038ae9:	ret    
   140038aea:	nop    WORD PTR [rax+rax*1+0x0]
   140038af0:	vaddss xmm0,xmm0,xmm0
   140038af4:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038afa:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038b00:	add    rsp,0x68
   140038b04:	ret    
   140038b05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038b10:	vmovd  ecx,xmm0
   140038b14:	or     ecx,0x400000
   140038b1a:	vmovd  xmm2,ecx
   140038b1e:	mov    r9d,DWORD PTR [rip+0x1de23]        # 0x140056948
   140038b25:	call   0x140043874
   140038b2a:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038b30:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038b36:	add    rsp,0x68
   140038b3a:	ret    
   140038b3b:	nop    DWORD PTR [rax+rax*1+0x0]
   140038b40:	vmovd  eax,xmm1
   140038b44:	or     eax,0x400000
   140038b49:	vmovd  xmm2,eax
   140038b4d:	mov    r9d,DWORD PTR [rip+0x1ddf8]        # 0x14005694c
   140038b54:	call   0x140043874
   140038b59:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038b5f:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038b65:	add    rsp,0x68
   140038b69:	ret    
   140038b6a:	nop    WORD PTR [rax+rax*1+0x0]
   140038b70:	cmp    r9d,0xffc00000
   140038b77:	je     0x140038ba4
   140038b79:	vmovd  ecx,xmm0
   140038b7d:	or     ecx,0x400000
   140038b83:	vmovd  xmm2,ecx
   140038b87:	mov    r9d,DWORD PTR [rip+0x1ddc2]        # 0x140056950
   140038b8e:	call   0x140043874
   140038b93:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038b99:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038b9f:	add    rsp,0x68
   140038ba3:	ret    
   140038ba4:	vmovd  eax,xmm1
   140038ba8:	or     eax,0x400000
   140038bad:	vmovd  xmm2,eax
   140038bb1:	mov    r9d,DWORD PTR [rip+0x1dd98]        # 0x140056950
   140038bb8:	call   0x140043874
   140038bbd:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038bc3:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038bc9:	add    rsp,0x68
   140038bcd:	ret    
   140038bce:	xchg   ax,ax
   140038bd0:	vpxor  xmm2,xmm2,xmm2
   140038bd4:	vorps  xmm2,xmm2,xmm5
   140038bd8:	mov    r9d,DWORD PTR [rip+0x1dd79]        # 0x140056958
   140038bdf:	call   0x140043874
   140038be4:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038bea:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038bf0:	add    rsp,0x68
   140038bf4:	ret    
   140038bf5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140038c00:	mov    edx,0x7f800000
   140038c05:	vmovd  xmm2,edx
   140038c09:	vorps  xmm2,xmm2,xmm5
   140038c0d:	mov    r9d,DWORD PTR [rip+0x1dd4c]        # 0x140056960
   140038c14:	call   0x140043874
   140038c19:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038c1f:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038c25:	add    rsp,0x68
   140038c29:	ret    
   140038c2a:	nop    WORD PTR [rax+rax*1+0x0]
   140038c30:	mov    edx,0xffc00000
   140038c35:	vmovd  xmm2,edx
   140038c39:	mov    r9d,DWORD PTR [rip+0x1dd14]        # 0x140056954
   140038c40:	call   0x140043874
   140038c45:	vmovdqa xmm7,XMMWORD PTR [rsp+0x30]
   140038c4b:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140038c51:	add    rsp,0x68
   140038c55:	ret    
   140038c56:	int3   
   140038c57:	int3   
   140038c58:	xor    eax,eax
   140038c5a:	cmp    BYTE PTR [rcx],al
   140038c5c:	je     0x140038c6c
   140038c5e:	cmp    rax,rdx
   140038c61:	je     0x140038c6c
   140038c63:	inc    rax
   140038c66:	cmp    BYTE PTR [rax+rcx*1],0x0
   140038c6a:	jne    0x140038c5e
   140038c6c:	ret    
   140038c6d:	int3   
   140038c6e:	int3   
   140038c6f:	int3   
   140038c70:	test   rcx,rcx
   140038c73:	je     0x140038cac
   140038c75:	push   rbx
   140038c76:	sub    rsp,0x20
   140038c7a:	mov    r8,rcx
   140038c7d:	xor    edx,edx
   140038c7f:	mov    rcx,QWORD PTR [rip+0x3e64a]        # 0x1400772d0
   140038c86:	call   QWORD PTR [rip+0x1267c]        # 0x14004b308
   140038c8c:	test   eax,eax
   140038c8e:	jne    0x140038ca7
   140038c90:	call   0x140032c50
   140038c95:	mov    rbx,rax
   140038c98:	call   QWORD PTR [rip+0x12442]        # 0x14004b0e0
   140038c9e:	mov    ecx,eax
   140038ca0:	call   0x140032b98
   140038ca5:	mov    DWORD PTR [rbx],eax
   140038ca7:	add    rsp,0x20
   140038cab:	pop    rbx
   140038cac:	ret    
   140038cad:	int3   
   140038cae:	int3   
   140038caf:	int3   
   140038cb0:	rex push rbx
   140038cb2:	sub    rsp,0x20
   140038cb6:	xor    ebx,ebx
   140038cb8:	test   rcx,rcx
   140038cbb:	je     0x140038cca
   140038cbd:	test   rdx,rdx
   140038cc0:	je     0x140038cca
   140038cc2:	test   r8,r8
   140038cc5:	jne    0x140038ce3
   140038cc7:	mov    WORD PTR [rcx],bx
   140038cca:	call   0x140032c50
   140038ccf:	mov    ebx,0x16
   140038cd4:	mov    DWORD PTR [rax],ebx
   140038cd6:	call   0x1400307d0
   140038cdb:	mov    eax,ebx
   140038cdd:	add    rsp,0x20
   140038ce1:	pop    rbx
   140038ce2:	ret    
   140038ce3:	mov    r9,rcx
   140038ce6:	sub    r8,rcx
   140038ce9:	movzx  eax,WORD PTR [r8+r9*1]
   140038cee:	mov    WORD PTR [r9],ax
   140038cf2:	lea    r9,[r9+0x2]
   140038cf6:	test   ax,ax
   140038cf9:	je     0x140038d01
   140038cfb:	sub    rdx,0x1
   140038cff:	jne    0x140038ce9
   140038d01:	test   rdx,rdx
   140038d04:	jne    0x140038cdb
   140038d06:	mov    WORD PTR [rcx],bx
   140038d09:	call   0x140032c50
   140038d0e:	mov    ebx,0x22
   140038d13:	jmp    0x140038cd4
   140038d15:	int3   
   140038d16:	int3   
   140038d17:	int3   
   140038d18:	rex push rbx
   140038d1a:	sub    rsp,0x20
   140038d1e:	xor    ebx,ebx
   140038d20:	test   rcx,rcx
   140038d23:	je     0x140038d31
   140038d25:	test   rdx,rdx
   140038d28:	je     0x140038d31
   140038d2a:	test   r8,r8
   140038d2d:	jne    0x140038d4a
   140038d2f:	mov    BYTE PTR [rcx],bl
   140038d31:	call   0x140032c50
   140038d36:	mov    ebx,0x16
   140038d3b:	mov    DWORD PTR [rax],ebx
   140038d3d:	call   0x1400307d0
   140038d42:	mov    eax,ebx
   140038d44:	add    rsp,0x20
   140038d48:	pop    rbx
   140038d49:	ret    
   140038d4a:	mov    r9,rcx
   140038d4d:	sub    r8,rcx
   140038d50:	mov    al,BYTE PTR [r8+r9*1]
   140038d54:	mov    BYTE PTR [r9],al
   140038d57:	inc    r9
   140038d5a:	test   al,al
   140038d5c:	je     0x140038d64
   140038d5e:	sub    rdx,0x1
   140038d62:	jne    0x140038d50
   140038d64:	test   rdx,rdx
   140038d67:	jne    0x140038d42
   140038d69:	mov    BYTE PTR [rcx],bl
   140038d6b:	call   0x140032c50
   140038d70:	mov    ebx,0x22
   140038d75:	jmp    0x140038d3b
   140038d77:	int3   
   140038d78:	mov    QWORD PTR [rcx],rdx
   140038d7b:	mov    QWORD PTR [rcx+0x8],r8
   140038d7f:	test   r8,r8
   140038d82:	je     0x140038d87
   140038d84:	mov    QWORD PTR [r8],rdx
   140038d87:	mov    rax,rcx
   140038d8a:	ret    
   140038d8b:	int3   
   140038d8c:	sub    rsp,0x38
   140038d90:	mov    rdx,rcx
   140038d93:	xor    r8d,r8d
   140038d96:	lea    rcx,[rsp+0x20]
   140038d9b:	call   0x140038d78
   140038da0:	xor    ecx,ecx
   140038da2:	mov    rdx,rax
   140038da5:	mov    r9b,0x1
   140038da8:	lea    r8d,[rcx+0xa]
   140038dac:	call   0x140031528
   140038db1:	add    rsp,0x38
   140038db5:	ret    
   140038db6:	int3   
   140038db7:	int3   
   140038db8:	mov    QWORD PTR [rsp+0x8],rbx
   140038dbd:	mov    QWORD PTR [rsp+0x20],r9
   140038dc2:	push   rdi
   140038dc3:	sub    rsp,0x20
   140038dc7:	mov    rbx,r9
   140038dca:	mov    rdi,r8
   140038dcd:	mov    ecx,DWORD PTR [rdx]
   140038dcf:	call   0x140035a44
   140038dd4:	nop
   140038dd5:	mov    rax,QWORD PTR [rdi]
   140038dd8:	mov    rcx,QWORD PTR [rax]
   140038ddb:	mov    rcx,QWORD PTR [rcx+0x88]
   140038de2:	test   rcx,rcx
   140038de5:	je     0x140038e05
   140038de7:	or     eax,0xffffffff
   140038dea:	lock xadd DWORD PTR [rcx],eax
   140038dee:	cmp    eax,0x1
   140038df1:	jne    0x140038e05
   140038df3:	lea    rax,[rip+0x387c6]        # 0x1400715c0
   140038dfa:	cmp    rcx,rax
   140038dfd:	je     0x140038e05
   140038dff:	call   0x140038c70
   140038e04:	nop
   140038e05:	mov    ecx,DWORD PTR [rbx]
   140038e07:	call   0x140035a98
   140038e0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140038e11:	add    rsp,0x20
   140038e15:	pop    rdi
   140038e16:	ret    
   140038e17:	int3   
   140038e18:	mov    QWORD PTR [rsp+0x8],rbx
   140038e1d:	mov    QWORD PTR [rsp+0x20],r9
   140038e22:	push   rdi
   140038e23:	sub    rsp,0x20
   140038e27:	mov    rbx,r9
   140038e2a:	mov    rdi,r8
   140038e2d:	mov    ecx,DWORD PTR [rdx]
   140038e2f:	call   0x140035a44
   140038e34:	nop
   140038e35:	mov    rax,QWORD PTR [rdi+0x8]
   140038e39:	mov    rdx,QWORD PTR [rax]
   140038e3c:	mov    rcx,QWORD PTR [rdi]
   140038e3f:	mov    rdx,QWORD PTR [rdx]
   140038e42:	mov    rcx,QWORD PTR [rcx]
   140038e45:	call   0x1400390c8
   140038e4a:	nop
   140038e4b:	mov    ecx,DWORD PTR [rbx]
   140038e4d:	call   0x140035a98
   140038e52:	mov    rbx,QWORD PTR [rsp+0x30]
   140038e57:	add    rsp,0x20
   140038e5b:	pop    rdi
   140038e5c:	ret    
   140038e5d:	int3   
   140038e5e:	int3   
   140038e5f:	int3   
   140038e60:	mov    QWORD PTR [rsp+0x8],rbx
   140038e65:	mov    QWORD PTR [rsp+0x20],r9
   140038e6a:	push   rdi
   140038e6b:	sub    rsp,0x20
   140038e6f:	mov    rbx,r9
   140038e72:	mov    rdi,r8
   140038e75:	mov    ecx,DWORD PTR [rdx]
   140038e77:	call   0x140035a44
   140038e7c:	nop
   140038e7d:	mov    rax,QWORD PTR [rdi]
   140038e80:	mov    rcx,QWORD PTR [rax]
   140038e83:	mov    rax,QWORD PTR [rcx+0x88]
   140038e8a:	lock inc DWORD PTR [rax]
   140038e8d:	mov    ecx,DWORD PTR [rbx]
   140038e8f:	call   0x140035a98
   140038e94:	mov    rbx,QWORD PTR [rsp+0x30]
   140038e99:	add    rsp,0x20
   140038e9d:	pop    rdi
   140038e9e:	ret    
   140038e9f:	int3   
   140038ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140038ea5:	mov    QWORD PTR [rsp+0x20],r9
   140038eaa:	push   rdi
   140038eab:	sub    rsp,0x20
   140038eaf:	mov    rbx,r9
   140038eb2:	mov    rdi,r8
   140038eb5:	mov    ecx,DWORD PTR [rdx]
   140038eb7:	call   0x140035a44
   140038ebc:	nop
   140038ebd:	mov    rcx,QWORD PTR [rdi]
   140038ec0:	xor    edx,edx
   140038ec2:	mov    rcx,QWORD PTR [rcx]
   140038ec5:	call   0x1400390c8
   140038eca:	nop
   140038ecb:	mov    ecx,DWORD PTR [rbx]
   140038ecd:	call   0x140035a98
   140038ed2:	mov    rbx,QWORD PTR [rsp+0x30]
   140038ed7:	add    rsp,0x20
   140038edb:	pop    rdi
   140038edc:	ret    
   140038edd:	int3   
   140038ede:	int3   
   140038edf:	int3   
   140038ee0:	rex push rbp
   140038ee2:	mov    rbp,rsp
   140038ee5:	sub    rsp,0x50
   140038ee9:	mov    QWORD PTR [rbp-0x28],rcx
   140038eed:	lea    rax,[rbp-0x28]
   140038ef1:	mov    QWORD PTR [rbp-0x18],rax
   140038ef5:	lea    r9,[rbp+0x20]
   140038ef9:	mov    edx,0x1
   140038efe:	lea    r8,[rbp-0x18]
   140038f02:	mov    eax,0x5
   140038f07:	mov    DWORD PTR [rbp+0x20],eax
   140038f0a:	mov    DWORD PTR [rbp+0x28],eax
   140038f0d:	lea    rax,[rbp-0x28]
   140038f11:	mov    QWORD PTR [rbp-0x10],rax
   140038f15:	lea    rax,[rbp-0x20]
   140038f19:	mov    QWORD PTR [rbp-0x8],rax
   140038f1d:	mov    eax,0x4
   140038f22:	mov    DWORD PTR [rbp-0x30],eax
   140038f25:	mov    DWORD PTR [rbp-0x2c],eax
   140038f28:	lea    rax,[rip+0x3dd71]        # 0x140076ca0
   140038f2f:	mov    QWORD PTR [rbp-0x20],rax
   140038f33:	mov    DWORD PTR [rcx+0x28],edx
   140038f36:	lea    rcx,[rip+0x1ba93]        # 0x1400549d0
   140038f3d:	mov    rax,QWORD PTR [rbp-0x28]
   140038f41:	mov    QWORD PTR [rax],rcx
   140038f44:	lea    rcx,[rip+0x38675]        # 0x1400715c0
   140038f4b:	mov    rax,QWORD PTR [rbp-0x28]
   140038f4f:	mov    DWORD PTR [rax+0x3a8],edx
   140038f55:	mov    rax,QWORD PTR [rbp-0x28]
   140038f59:	mov    QWORD PTR [rax+0x88],rcx
   140038f60:	lea    ecx,[rdx+0x42]
   140038f63:	mov    rax,QWORD PTR [rbp-0x28]
   140038f67:	lea    rdx,[rbp+0x28]
   140038f6b:	mov    WORD PTR [rax+0xbc],cx
   140038f72:	mov    rax,QWORD PTR [rbp-0x28]
   140038f76:	mov    WORD PTR [rax+0x1c2],cx
   140038f7d:	lea    rcx,[rbp+0x18]
   140038f81:	mov    rax,QWORD PTR [rbp-0x28]
   140038f85:	and    QWORD PTR [rax+0x3a0],0x0
   140038f8d:	call   0x140038e60
   140038f92:	lea    r9,[rbp-0x30]
   140038f96:	lea    r8,[rbp-0x10]
   140038f9a:	lea    rdx,[rbp-0x2c]
   140038f9e:	lea    rcx,[rbp+0x18]
   140038fa2:	call   0x140038e18
   140038fa7:	add    rsp,0x50
   140038fab:	pop    rbp
   140038fac:	ret    
   140038fad:	int3   
   140038fae:	int3   
   140038faf:	int3   
   140038fb0:	test   rcx,rcx
   140038fb3:	je     0x140038fcf
   140038fb5:	push   rbx
   140038fb6:	sub    rsp,0x20
   140038fba:	mov    rbx,rcx
   140038fbd:	call   0x140038fd0
   140038fc2:	mov    rcx,rbx
   140038fc5:	call   0x140038c70
   140038fca:	add    rsp,0x20
   140038fce:	pop    rbx
   140038fcf:	ret    
   140038fd0:	rex push rbp
   140038fd2:	mov    rbp,rsp
   140038fd5:	sub    rsp,0x40
   140038fd9:	lea    rax,[rbp-0x18]
   140038fdd:	mov    QWORD PTR [rbp-0x18],rcx
   140038fe1:	mov    QWORD PTR [rbp-0x10],rax
   140038fe5:	lea    rdx,[rip+0x1b9e4]        # 0x1400549d0
   140038fec:	mov    eax,0x5
   140038ff1:	mov    DWORD PTR [rbp+0x20],eax
   140038ff4:	mov    DWORD PTR [rbp+0x28],eax
   140038ff7:	lea    rax,[rbp-0x18]
   140038ffb:	mov    QWORD PTR [rbp-0x8],rax
   140038fff:	mov    eax,0x4
   140039004:	mov    DWORD PTR [rbp-0x20],eax
   140039007:	mov    DWORD PTR [rbp-0x1c],eax
   14003900a:	mov    rax,QWORD PTR [rcx]
   14003900d:	cmp    rax,rdx
   140039010:	je     0x14003901e
   140039012:	mov    rcx,rax
   140039015:	call   0x140038c70
   14003901a:	mov    rcx,QWORD PTR [rbp-0x18]
   14003901e:	mov    rcx,QWORD PTR [rcx+0x70]
   140039022:	call   0x140038c70
   140039027:	mov    rcx,QWORD PTR [rbp-0x18]
   14003902b:	mov    rcx,QWORD PTR [rcx+0x58]
   14003902f:	call   0x140038c70
   140039034:	mov    rcx,QWORD PTR [rbp-0x18]
   140039038:	mov    rcx,QWORD PTR [rcx+0x60]
   14003903c:	call   0x140038c70
   140039041:	mov    rcx,QWORD PTR [rbp-0x18]
   140039045:	mov    rcx,QWORD PTR [rcx+0x68]
   140039049:	call   0x140038c70
   14003904e:	mov    rcx,QWORD PTR [rbp-0x18]
   140039052:	mov    rcx,QWORD PTR [rcx+0x48]
   140039056:	call   0x140038c70
   14003905b:	mov    rcx,QWORD PTR [rbp-0x18]
   14003905f:	mov    rcx,QWORD PTR [rcx+0x50]
   140039063:	call   0x140038c70
   140039068:	mov    rcx,QWORD PTR [rbp-0x18]
   14003906c:	mov    rcx,QWORD PTR [rcx+0x78]
   140039070:	call   0x140038c70
   140039075:	mov    rcx,QWORD PTR [rbp-0x18]
   140039079:	mov    rcx,QWORD PTR [rcx+0x80]
   140039080:	call   0x140038c70
   140039085:	mov    rcx,QWORD PTR [rbp-0x18]
   140039089:	mov    rcx,QWORD PTR [rcx+0x3c0]
   140039090:	call   0x140038c70
   140039095:	lea    r9,[rbp+0x20]
   140039099:	lea    r8,[rbp-0x10]
   14003909d:	lea    rdx,[rbp+0x28]
   1400390a1:	lea    rcx,[rbp+0x18]
   1400390a5:	call   0x140038db8
   1400390aa:	lea    r9,[rbp-0x20]
   1400390ae:	lea    r8,[rbp-0x8]
   1400390b2:	lea    rdx,[rbp-0x1c]
   1400390b6:	lea    rcx,[rbp+0x18]
   1400390ba:	call   0x140038ea0
   1400390bf:	add    rsp,0x40
   1400390c3:	pop    rbp
   1400390c4:	ret    
   1400390c5:	int3   
   1400390c6:	int3   
   1400390c7:	int3   
   1400390c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400390cd:	push   rdi
   1400390ce:	sub    rsp,0x20
   1400390d2:	mov    rdi,rcx
   1400390d5:	mov    rbx,rdx
   1400390d8:	mov    rcx,QWORD PTR [rcx+0x90]
   1400390df:	test   rcx,rcx
   1400390e2:	je     0x140039110
   1400390e4:	call   0x1400415b8
   1400390e9:	mov    rcx,QWORD PTR [rdi+0x90]
   1400390f0:	cmp    rcx,QWORD PTR [rip+0x3dba9]        # 0x140076ca0
   1400390f7:	je     0x140039110
   1400390f9:	lea    rax,[rip+0x38200]        # 0x140071300
   140039100:	cmp    rcx,rax
   140039103:	je     0x140039110
   140039105:	cmp    DWORD PTR [rcx+0x10],0x0
   140039109:	jne    0x140039110
   14003910b:	call   0x1400413b8
   140039110:	mov    QWORD PTR [rdi+0x90],rbx
   140039117:	test   rbx,rbx
   14003911a:	je     0x140039124
   14003911c:	mov    rcx,rbx
   14003911f:	call   0x14004132c
   140039124:	mov    rbx,QWORD PTR [rsp+0x30]
   140039129:	add    rsp,0x20
   14003912d:	pop    rdi
   14003912e:	ret    
   14003912f:	int3   
   140039130:	mov    QWORD PTR [rsp+0x8],rbx
   140039135:	push   rdi
   140039136:	sub    rsp,0x20
   14003913a:	call   QWORD PTR [rip+0x11fa0]        # 0x14004b0e0
   140039140:	mov    ecx,DWORD PTR [rip+0x381aa]        # 0x1400712f0
   140039146:	mov    ebx,eax
   140039148:	cmp    ecx,0xffffffff
   14003914b:	je     0x14003915a
   14003914d:	call   0x14003d0bc
   140039152:	mov    rdi,rax
   140039155:	test   rax,rax
   140039158:	jne    0x14003919b
   14003915a:	mov    edx,0x3c8
   14003915f:	mov    ecx,0x1
   140039164:	call   0x140035d88
   140039169:	mov    rdi,rax
   14003916c:	test   rax,rax
   14003916f:	jne    0x14003917a
   140039171:	xor    ecx,ecx
   140039173:	call   0x140038c70
   140039178:	jmp    0x1400391b6
   14003917a:	mov    ecx,DWORD PTR [rip+0x38170]        # 0x1400712f0
   140039180:	mov    rdx,rax
   140039183:	call   0x14003d114
   140039188:	mov    rcx,rdi
   14003918b:	test   eax,eax
   14003918d:	je     0x140039173
   14003918f:	call   0x140038ee0
   140039194:	xor    ecx,ecx
   140039196:	call   0x140038c70
   14003919b:	test   rdi,rdi
   14003919e:	je     0x1400391b6
   1400391a0:	mov    ecx,ebx
   1400391a2:	call   QWORD PTR [rip+0x11f70]        # 0x14004b118
   1400391a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400391ad:	mov    rax,rdi
   1400391b0:	add    rsp,0x20
   1400391b4:	pop    rdi
   1400391b5:	ret    
   1400391b6:	mov    ecx,ebx
   1400391b8:	call   QWORD PTR [rip+0x11f5a]        # 0x14004b118
   1400391be:	call   0x1400365a8
   1400391c3:	int3   
   1400391c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400391c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400391ce:	push   rdi
   1400391cf:	sub    rsp,0x20
   1400391d3:	call   QWORD PTR [rip+0x11f07]        # 0x14004b0e0
   1400391d9:	mov    ecx,DWORD PTR [rip+0x38111]        # 0x1400712f0
   1400391df:	xor    esi,esi
   1400391e1:	mov    ebx,eax
   1400391e3:	cmp    ecx,0xffffffff
   1400391e6:	je     0x1400391f5
   1400391e8:	call   0x14003d0bc
   1400391ed:	mov    rdi,rax
   1400391f0:	test   rax,rax
   1400391f3:	jne    0x140039236
   1400391f5:	mov    edx,0x3c8
   1400391fa:	mov    ecx,0x1
   1400391ff:	call   0x140035d88
   140039204:	mov    rdi,rax
   140039207:	test   rax,rax
   14003920a:	jne    0x140039215
   14003920c:	xor    ecx,ecx
   14003920e:	call   0x140038c70
   140039213:	jmp    0x14003923b
   140039215:	mov    ecx,DWORD PTR [rip+0x380d5]        # 0x1400712f0
   14003921b:	mov    rdx,rax
   14003921e:	call   0x14003d114
   140039223:	mov    rcx,rdi
   140039226:	test   eax,eax
   140039228:	je     0x14003920e
   14003922a:	call   0x140038ee0
   14003922f:	xor    ecx,ecx
   140039231:	call   0x140038c70
   140039236:	test   rdi,rdi
   140039239:	jne    0x140039245
   14003923b:	mov    ecx,ebx
   14003923d:	call   QWORD PTR [rip+0x11ed5]        # 0x14004b118
   140039243:	jmp    0x140039250
   140039245:	mov    ecx,ebx
   140039247:	call   QWORD PTR [rip+0x11ecb]        # 0x14004b118
   14003924d:	mov    rsi,rdi
   140039250:	mov    rbx,QWORD PTR [rsp+0x30]
   140039255:	mov    rax,rsi
   140039258:	mov    rsi,QWORD PTR [rsp+0x38]
   14003925d:	add    rsp,0x20
   140039261:	pop    rdi
   140039262:	ret    
   140039263:	int3   
   140039264:	sub    rsp,0x28
   140039268:	lea    rcx,[rip+0xfffffffffffffd41]        # 0x140038fb0
   14003926f:	call   0x14003d00c
   140039274:	mov    DWORD PTR [rip+0x38076],eax        # 0x1400712f0
   14003927a:	cmp    eax,0xffffffff
   14003927d:	jne    0x140039283
   14003927f:	xor    al,al
   140039281:	jmp    0x140039298
   140039283:	call   0x1400391c4
   140039288:	test   rax,rax
   14003928b:	jne    0x140039296
   14003928d:	xor    ecx,ecx
   14003928f:	call   0x1400392a0
   140039294:	jmp    0x14003927f
   140039296:	mov    al,0x1
   140039298:	add    rsp,0x28
   14003929c:	ret    
   14003929d:	int3   
   14003929e:	int3   
   14003929f:	int3   
   1400392a0:	sub    rsp,0x28
   1400392a4:	mov    ecx,DWORD PTR [rip+0x38046]        # 0x1400712f0
   1400392aa:	cmp    ecx,0xffffffff
   1400392ad:	je     0x1400392bb
   1400392af:	call   0x14003d064
   1400392b4:	or     DWORD PTR [rip+0x38035],0xffffffff        # 0x1400712f0
   1400392bb:	mov    al,0x1
   1400392bd:	add    rsp,0x28
   1400392c1:	ret    
   1400392c2:	int3   
   1400392c3:	int3   
   1400392c4:	rex push rbx
   1400392c6:	sub    rsp,0x20
   1400392ca:	mov    rax,QWORD PTR [rip+0x3d9cf]        # 0x140076ca0
   1400392d1:	mov    rbx,rdx
   1400392d4:	cmp    QWORD PTR [rdx],rax
   1400392d7:	je     0x1400392ef
   1400392d9:	mov    eax,DWORD PTR [rcx+0x3a8]
   1400392df:	test   DWORD PTR [rip+0x3881b],eax        # 0x140071b00
   1400392e5:	jne    0x1400392ef
   1400392e7:	call   0x140041660
   1400392ec:	mov    QWORD PTR [rbx],rax
   1400392ef:	add    rsp,0x20
   1400392f3:	pop    rbx
   1400392f4:	ret    
   1400392f5:	int3   
   1400392f6:	int3   
   1400392f7:	int3   
   1400392f8:	rex push rbx
   1400392fa:	sub    rsp,0x20
   1400392fe:	mov    rax,QWORD PTR [rip+0x384e3]        # 0x1400717e8
   140039305:	mov    rbx,rdx
   140039308:	cmp    QWORD PTR [rdx],rax
   14003930b:	je     0x140039323
   14003930d:	mov    eax,DWORD PTR [rcx+0x3a8]
   140039313:	test   DWORD PTR [rip+0x387e7],eax        # 0x140071b00
   140039319:	jne    0x140039323
   14003931b:	call   0x14003ed9c
   140039320:	mov    QWORD PTR [rbx],rax
   140039323:	add    rsp,0x20
   140039327:	pop    rbx
   140039328:	ret    
   140039329:	int3   
   14003932a:	int3   
   14003932b:	int3   
   14003932c:	mov    QWORD PTR [rsp+0x8],rbx
   140039331:	mov    QWORD PTR [rsp+0x10],rbp
   140039336:	mov    QWORD PTR [rsp+0x18],rsi
   14003933b:	push   rdi
   14003933c:	sub    rsp,0x50
   140039340:	movsxd rbx,r9d
   140039343:	mov    rdi,r8
   140039346:	mov    esi,edx
   140039348:	mov    rbp,rcx
   14003934b:	test   r9d,r9d
   14003934e:	jle    0x140039364
   140039350:	mov    rdx,rbx
   140039353:	mov    rcx,r8
   140039356:	call   0x140032e04
   14003935b:	cmp    eax,ebx
   14003935d:	lea    ebx,[rax+0x1]
   140039360:	jl     0x140039364
   140039362:	mov    ebx,eax
   140039364:	and    QWORD PTR [rsp+0x40],0x0
   14003936a:	mov    r9d,ebx
   14003936d:	and    QWORD PTR [rsp+0x38],0x0
   140039373:	mov    r8,rdi
   140039376:	and    QWORD PTR [rsp+0x30],0x0
   14003937c:	mov    edx,esi
   14003937e:	mov    eax,DWORD PTR [rsp+0x88]
   140039385:	mov    rcx,rbp
   140039388:	mov    DWORD PTR [rsp+0x28],eax
   14003938c:	mov    rax,QWORD PTR [rsp+0x80]
   140039394:	mov    QWORD PTR [rsp+0x20],rax
   140039399:	call   0x14003d3f4
   14003939e:	mov    rbx,QWORD PTR [rsp+0x60]
   1400393a3:	mov    rbp,QWORD PTR [rsp+0x68]
   1400393a8:	mov    rsi,QWORD PTR [rsp+0x70]
   1400393ad:	add    rsp,0x50
   1400393b1:	pop    rdi
   1400393b2:	ret    
   1400393b3:	int3   
   1400393b4:	mov    QWORD PTR [rsp+0x10],rsi
   1400393b9:	mov    QWORD PTR [rsp+0x18],rdi
   1400393be:	mov    QWORD PTR [rsp+0x20],r14
   1400393c3:	push   rbp
   1400393c4:	mov    rbp,rsp
   1400393c7:	sub    rsp,0x80
   1400393ce:	mov    rax,QWORD PTR [rip+0x37c7b]        # 0x140071050
   1400393d5:	xor    rax,rsp
   1400393d8:	mov    QWORD PTR [rbp-0x10],rax
   1400393dc:	mov    r14d,edx
   1400393df:	movsxd rdi,ecx
   1400393e2:	mov    rdx,r8
   1400393e5:	lea    rcx,[rbp-0x38]
   1400393e9:	call   0x14002bd94
   1400393ee:	lea    eax,[rdi+0x1]
   1400393f1:	cmp    eax,0x100
   1400393f6:	ja     0x140039408
   1400393f8:	mov    rax,QWORD PTR [rbp-0x30]
   1400393fc:	mov    rcx,QWORD PTR [rax]
   1400393ff:	movzx  eax,WORD PTR [rcx+rdi*2]
   140039403:	jmp    0x14003948a
   140039408:	mov    esi,edi
   14003940a:	lea    rdx,[rbp-0x30]
   14003940e:	sar    esi,0x8
   140039411:	movzx  ecx,sil
   140039415:	call   0x14003b634
   14003941a:	mov    edx,0x1
   14003941f:	test   eax,eax
   140039421:	je     0x140039435
   140039423:	mov    BYTE PTR [rbp-0x40],sil
   140039427:	lea    r9d,[rdx+0x1]
   14003942b:	mov    BYTE PTR [rbp-0x3f],dil
   14003942f:	mov    BYTE PTR [rbp-0x3e],0x0
   140039433:	jmp    0x140039440
   140039435:	mov    BYTE PTR [rbp-0x40],dil
   140039439:	mov    r9d,edx
   14003943c:	mov    BYTE PTR [rbp-0x3f],0x0
   140039440:	xor    eax,eax
   140039442:	mov    DWORD PTR [rsp+0x30],edx
   140039446:	mov    DWORD PTR [rbp-0x18],eax
   140039449:	lea    r8,[rbp-0x40]
   14003944d:	mov    WORD PTR [rbp-0x14],ax
   140039451:	mov    rax,QWORD PTR [rbp-0x30]
   140039455:	mov    ecx,DWORD PTR [rax+0xc]
   140039458:	lea    rax,[rbp-0x18]
   14003945c:	mov    DWORD PTR [rsp+0x28],ecx
   140039460:	lea    rcx,[rbp-0x30]
   140039464:	mov    QWORD PTR [rsp+0x20],rax
   140039469:	call   0x140041178
   14003946e:	test   eax,eax
   140039470:	jne    0x140039486
   140039472:	cmp    BYTE PTR [rbp-0x20],al
   140039475:	je     0x140039482
   140039477:	mov    rax,QWORD PTR [rbp-0x38]
   14003947b:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140039482:	xor    eax,eax
   140039484:	jmp    0x14003949e
   140039486:	movzx  eax,WORD PTR [rbp-0x18]
   14003948a:	and    eax,r14d
   14003948d:	cmp    BYTE PTR [rbp-0x20],0x0
   140039491:	je     0x14003949e
   140039493:	mov    rcx,QWORD PTR [rbp-0x38]
   140039497:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14003949e:	mov    rcx,QWORD PTR [rbp-0x10]
   1400394a2:	xor    rcx,rsp
   1400394a5:	call   0x140025df0
   1400394aa:	lea    r11,[rsp+0x80]
   1400394b2:	mov    rsi,QWORD PTR [r11+0x18]
   1400394b6:	mov    rdi,QWORD PTR [r11+0x20]
   1400394ba:	mov    r14,QWORD PTR [r11+0x28]
   1400394be:	mov    rsp,r11
   1400394c1:	pop    rbp
   1400394c2:	ret    
   1400394c3:	int3   
   1400394c4:	mov    rax,rsp
   1400394c7:	mov    QWORD PTR [rax+0x8],rbx
   1400394cb:	mov    QWORD PTR [rax+0x10],rbp
   1400394cf:	mov    QWORD PTR [rax+0x18],rsi
   1400394d3:	mov    QWORD PTR [rax+0x20],rdi
   1400394d7:	push   r14
   1400394d9:	sub    rsp,0x50
   1400394dd:	xor    r14d,r14d
   1400394e0:	mov    rbp,r8
   1400394e3:	mov    rsi,rdx
   1400394e6:	mov    rdi,rcx
   1400394e9:	test   rdx,rdx
   1400394ec:	je     0x140039501
   1400394ee:	test   r8,r8
   1400394f1:	je     0x140039501
   1400394f3:	cmp    BYTE PTR [rdx],r14b
   1400394f6:	jne    0x14003951e
   1400394f8:	test   rcx,rcx
   1400394fb:	je     0x140039501
   1400394fd:	mov    WORD PTR [rcx],r14w
   140039501:	xor    eax,eax
   140039503:	mov    rbx,QWORD PTR [rsp+0x60]
   140039508:	mov    rbp,QWORD PTR [rsp+0x68]
   14003950d:	mov    rsi,QWORD PTR [rsp+0x70]
   140039512:	mov    rdi,QWORD PTR [rsp+0x78]
   140039517:	add    rsp,0x50
   14003951b:	pop    r14
   14003951d:	ret    
   14003951e:	mov    rdx,r9
   140039521:	lea    rcx,[rsp+0x30]
   140039526:	call   0x14002bd94
   14003952b:	mov    rax,QWORD PTR [rsp+0x38]
   140039530:	cmp    QWORD PTR [rax+0x138],r14
   140039537:	jne    0x14003954e
   140039539:	test   rdi,rdi
   14003953c:	je     0x140039544
   14003953e:	movzx  eax,BYTE PTR [rsi]
   140039541:	mov    WORD PTR [rdi],ax
   140039544:	mov    ebx,0x1
   140039549:	jmp    0x1400395f2
   14003954e:	movzx  ecx,BYTE PTR [rsi]
   140039551:	lea    rdx,[rsp+0x38]
   140039556:	call   0x14003b634
   14003955b:	mov    ebx,0x1
   140039560:	test   eax,eax
   140039562:	je     0x1400395b5
   140039564:	mov    rcx,QWORD PTR [rsp+0x38]
   140039569:	mov    r9d,DWORD PTR [rcx+0x8]
   14003956d:	cmp    r9d,ebx
   140039570:	jle    0x1400395a1
   140039572:	cmp    ebp,r9d
   140039575:	jl     0x1400395a1
   140039577:	mov    ecx,DWORD PTR [rcx+0xc]
   14003957a:	lea    edx,[rbx+0x8]
   14003957d:	mov    eax,r14d
   140039580:	test   rdi,rdi
   140039583:	mov    r8,rsi
   140039586:	setne  al
   140039589:	mov    DWORD PTR [rsp+0x28],eax
   14003958d:	mov    QWORD PTR [rsp+0x20],rdi
   140039592:	call   QWORD PTR [rip+0x11b90]        # 0x14004b128
   140039598:	mov    rcx,QWORD PTR [rsp+0x38]
   14003959d:	test   eax,eax
   14003959f:	jne    0x1400395b0
   1400395a1:	movsxd rax,DWORD PTR [rcx+0x8]
   1400395a5:	cmp    rbp,rax
   1400395a8:	jb     0x1400395e4
   1400395aa:	cmp    BYTE PTR [rsi+0x1],r14b
   1400395ae:	je     0x1400395e4
   1400395b0:	mov    ebx,DWORD PTR [rcx+0x8]
   1400395b3:	jmp    0x1400395f2
   1400395b5:	mov    eax,r14d
   1400395b8:	test   rdi,rdi
   1400395bb:	mov    r9d,ebx
   1400395be:	mov    r8,rsi
   1400395c1:	setne  al
   1400395c4:	mov    edx,0x9
   1400395c9:	mov    DWORD PTR [rsp+0x28],eax
   1400395cd:	mov    rax,QWORD PTR [rsp+0x38]
   1400395d2:	mov    QWORD PTR [rsp+0x20],rdi
   1400395d7:	mov    ecx,DWORD PTR [rax+0xc]
   1400395da:	call   QWORD PTR [rip+0x11b48]        # 0x14004b128
   1400395e0:	test   eax,eax
   1400395e2:	jne    0x1400395f2
   1400395e4:	call   0x140032c50
   1400395e9:	or     ebx,0xffffffff
   1400395ec:	mov    DWORD PTR [rax],0x2a
   1400395f2:	cmp    BYTE PTR [rsp+0x48],r14b
   1400395f7:	je     0x140039605
   1400395f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400395fe:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140039605:	mov    eax,ebx
   140039607:	jmp    0x140039503
   14003960c:	xor    r9d,r9d
   14003960f:	jmp    0x1400394c4
   140039614:	mov    QWORD PTR [rsp+0x8],rbx
   140039619:	mov    QWORD PTR [rsp+0x18],rsi
   14003961e:	mov    WORD PTR [rsp+0x20],r9w
   140039624:	push   rdi
   140039625:	sub    rsp,0x60
   140039629:	mov    rdi,r8
   14003962c:	mov    rsi,rdx
   14003962f:	mov    rbx,rcx
   140039632:	test   rdx,rdx
   140039635:	jne    0x14003964a
   140039637:	test   r8,r8
   14003963a:	je     0x14003964a
   14003963c:	test   rcx,rcx
   14003963f:	je     0x140039643
   140039641:	and    DWORD PTR [rcx],edx
   140039643:	xor    eax,eax
   140039645:	jmp    0x1400396d9
   14003964a:	test   rcx,rcx
   14003964d:	je     0x140039652
   14003964f:	or     DWORD PTR [rcx],0xffffffff
   140039652:	cmp    r8,0x7fffffff
   140039659:	jbe    0x14003966e
   14003965b:	call   0x140032c50
   140039660:	mov    ebx,0x16
   140039665:	mov    DWORD PTR [rax],ebx
   140039667:	call   0x1400307d0
   14003966c:	jmp    0x1400396d7
   14003966e:	mov    rdx,QWORD PTR [rsp+0x90]
   140039676:	lea    rcx,[rsp+0x40]
   14003967b:	call   0x14002bd94
   140039680:	mov    rax,QWORD PTR [rsp+0x48]
   140039685:	cmp    QWORD PTR [rax+0x138],0x0
   14003968d:	jne    0x140039708
   14003968f:	movzx  eax,WORD PTR [rsp+0x88]
   140039697:	mov    ecx,0xff
   14003969c:	cmp    ax,cx
   14003969f:	jbe    0x1400396eb
   1400396a1:	test   rsi,rsi
   1400396a4:	je     0x1400396b8
   1400396a6:	test   rdi,rdi
   1400396a9:	je     0x1400396b8
   1400396ab:	mov    r8,rdi
   1400396ae:	xor    edx,edx
   1400396b0:	mov    rcx,rsi
   1400396b3:	call   0x14002a910
   1400396b8:	call   0x140032c50
   1400396bd:	mov    ebx,0x2a
   1400396c2:	mov    DWORD PTR [rax],ebx
   1400396c4:	cmp    BYTE PTR [rsp+0x58],0x0
   1400396c9:	je     0x1400396d7
   1400396cb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400396d0:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   1400396d7:	mov    eax,ebx
   1400396d9:	lea    r11,[rsp+0x60]
   1400396de:	mov    rbx,QWORD PTR [r11+0x10]
   1400396e2:	mov    rsi,QWORD PTR [r11+0x20]
   1400396e6:	mov    rsp,r11
   1400396e9:	pop    rdi
   1400396ea:	ret    
   1400396eb:	test   rsi,rsi
   1400396ee:	je     0x1400396fb
   1400396f0:	test   rdi,rdi
   1400396f3:	je     0x140039782
   1400396f9:	mov    BYTE PTR [rsi],al
   1400396fb:	test   rbx,rbx
   1400396fe:	je     0x140039755
   140039700:	mov    DWORD PTR [rbx],0x1
   140039706:	jmp    0x140039755
   140039708:	and    DWORD PTR [rsp+0x78],0x0
   14003970d:	lea    rcx,[rsp+0x78]
   140039712:	mov    QWORD PTR [rsp+0x38],rcx
   140039717:	lea    r8,[rsp+0x88]
   14003971f:	and    QWORD PTR [rsp+0x30],0x0
   140039725:	mov    r9d,0x1
   14003972b:	mov    ecx,DWORD PTR [rax+0xc]
   14003972e:	xor    edx,edx
   140039730:	mov    DWORD PTR [rsp+0x28],edi
   140039734:	mov    QWORD PTR [rsp+0x20],rsi
   140039739:	call   QWORD PTR [rip+0x119f1]        # 0x14004b130
   14003973f:	test   eax,eax
   140039741:	je     0x14003975c
   140039743:	cmp    DWORD PTR [rsp+0x78],0x0
   140039748:	jne    0x1400396b8
   14003974e:	test   rbx,rbx
   140039751:	je     0x140039755
   140039753:	mov    DWORD PTR [rbx],eax
   140039755:	xor    ebx,ebx
   140039757:	jmp    0x1400396c4
   14003975c:	call   QWORD PTR [rip+0x1197e]        # 0x14004b0e0
   140039762:	cmp    eax,0x7a
   140039765:	jne    0x1400396b8
   14003976b:	test   rsi,rsi
   14003976e:	je     0x140039782
   140039770:	test   rdi,rdi
   140039773:	je     0x140039782
   140039775:	mov    r8,rdi
   140039778:	xor    edx,edx
   14003977a:	mov    rcx,rsi
   14003977d:	call   0x14002a910
   140039782:	call   0x140032c50
   140039787:	mov    ebx,0x22
   14003978c:	mov    DWORD PTR [rax],ebx
   14003978e:	call   0x1400307d0
   140039793:	jmp    0x1400396c4
   140039798:	sub    rsp,0x38
   14003979c:	and    QWORD PTR [rsp+0x20],0x0
   1400397a2:	call   0x140039614
   1400397a7:	add    rsp,0x38
   1400397ab:	ret    
   1400397ac:	mov    rdx,QWORD PTR [rcx]
   1400397af:	mov    ecx,0x7ff
   1400397b4:	mov    rax,rdx
   1400397b7:	shr    rax,0x34
   1400397bb:	and    rax,rcx
   1400397be:	cmp    rax,rcx
   1400397c1:	je     0x1400397c6
   1400397c3:	xor    eax,eax
   1400397c5:	ret    
   1400397c6:	movabs rcx,0xfffffffffffff
   1400397d0:	mov    rax,rdx
   1400397d3:	and    rax,rcx
   1400397d6:	jne    0x1400397de
   1400397d8:	mov    eax,0x1
   1400397dd:	ret    
   1400397de:	movabs rcx,0x8000000000000000
   1400397e8:	test   rcx,rdx
   1400397eb:	je     0x140039802
   1400397ed:	movabs rcx,0x8000000000000
   1400397f7:	cmp    rax,rcx
   1400397fa:	jne    0x140039802
   1400397fc:	mov    eax,0x4
   140039801:	ret    
   140039802:	shr    rdx,0x33
   140039806:	not    edx
   140039808:	and    edx,0x1
   14003980b:	or     edx,0x2
   14003980e:	mov    eax,edx
   140039810:	ret    
   140039811:	int3   
   140039812:	int3   
   140039813:	int3   
   140039814:	mov    rax,rsp
   140039817:	mov    QWORD PTR [rax+0x8],rbx
   14003981b:	mov    QWORD PTR [rax+0x10],rbp
   14003981f:	mov    QWORD PTR [rax+0x18],rsi
   140039823:	mov    QWORD PTR [rax+0x20],rdi
   140039827:	push   r12
   140039829:	push   r14
   14003982b:	push   r15
   14003982d:	sub    rsp,0x70
   140039831:	mov    ebx,DWORD PTR [rsp+0xb8]
   140039838:	xor    r12d,r12d
   14003983b:	mov    rdi,rdx
   14003983e:	mov    BYTE PTR [rdx],r12b
   140039841:	mov    rdx,QWORD PTR [rsp+0xd0]
   140039849:	mov    rsi,rcx
   14003984c:	test   ebx,ebx
   14003984e:	lea    rcx,[rax-0x38]
   140039852:	mov    r14,r9
   140039855:	mov    rbp,r8
   140039858:	cmovs  ebx,r12d
   14003985c:	call   0x14002bd94
   140039861:	lea    eax,[rbx+0xb]
   140039864:	movsxd rdx,eax
   140039867:	cmp    rbp,rdx
   14003986a:	ja     0x140039882
   14003986c:	call   0x140032c50
   140039871:	lea    ebx,[r12+0x22]
   140039876:	mov    DWORD PTR [rax],ebx
   140039878:	call   0x1400307d0
   14003987d:	jmp    0x140039b3d
   140039882:	mov    rax,QWORD PTR [rsi]
   140039885:	mov    ecx,0x7ff
   14003988a:	shr    rax,0x34
   14003988e:	and    rax,rcx
   140039891:	cmp    rax,rcx
   140039894:	jne    0x14003990d
   140039896:	mov    eax,DWORD PTR [rsp+0xc8]
   14003989d:	mov    r9,r14
   1400398a0:	mov    QWORD PTR [rsp+0x40],r12
   1400398a5:	mov    r8,rbp
   1400398a8:	mov    DWORD PTR [rsp+0x38],eax
   1400398ac:	mov    rdx,rdi
   1400398af:	mov    rax,QWORD PTR [rsp+0xb0]
   1400398b7:	mov    rcx,rsi
   1400398ba:	mov    BYTE PTR [rsp+0x30],r12b
   1400398bf:	mov    DWORD PTR [rsp+0x28],ebx
   1400398c3:	mov    QWORD PTR [rsp+0x20],rax
   1400398c8:	call   0x140039b74
   1400398cd:	mov    ebx,eax
   1400398cf:	test   eax,eax
   1400398d1:	je     0x1400398db
   1400398d3:	mov    BYTE PTR [rdi],r12b
   1400398d6:	jmp    0x140039b3d
   1400398db:	mov    edx,0x65
   1400398e0:	mov    rcx,rdi
   1400398e3:	call   0x140047cd0
   1400398e8:	test   rax,rax
   1400398eb:	je     0x140039b3a
   1400398f1:	mov    cl,BYTE PTR [rsp+0xc0]
   1400398f8:	neg    cl
   1400398fa:	sbb    dl,dl
   1400398fc:	and    dl,0xe0
   1400398ff:	add    dl,0x70
   140039902:	mov    BYTE PTR [rax],dl
   140039904:	mov    BYTE PTR [rax+0x3],r12b
   140039908:	jmp    0x140039b3a
   14003990d:	movabs rax,0x8000000000000000
   140039917:	test   QWORD PTR [rsi],rax
   14003991a:	je     0x140039922
   14003991c:	mov    BYTE PTR [rdi],0x2d
   14003991f:	inc    rdi
   140039922:	mov    r15b,BYTE PTR [rsp+0xc0]
   14003992a:	mov    ebp,0x3ff
   14003992f:	mov    al,r15b
   140039932:	mov    r10d,0x30
   140039938:	neg    al
   14003993a:	movabs r11,0xfffffffffffff
   140039944:	movabs rax,0x7ff0000000000000
   14003994e:	sbb    edx,edx
   140039950:	and    edx,0xffffffe0
   140039953:	sub    edx,0xffffffd9
   140039956:	test   QWORD PTR [rsi],rax
   140039959:	jne    0x140039975
   14003995b:	mov    BYTE PTR [rdi],r10b
   14003995e:	inc    rdi
   140039961:	mov    rax,QWORD PTR [rsi]
   140039964:	and    rax,r11
   140039967:	neg    rax
   14003996a:	sbb    rbp,rbp
   14003996d:	and    ebp,0x3fe
   140039973:	jmp    0x14003997b
   140039975:	mov    BYTE PTR [rdi],0x31
   140039978:	inc    rdi
   14003997b:	mov    r14,rdi
   14003997e:	inc    rdi
   140039981:	test   ebx,ebx
   140039983:	jne    0x14003998a
   140039985:	mov    BYTE PTR [r14],r12b
   140039988:	jmp    0x14003999e
   14003998a:	mov    rax,QWORD PTR [rsp+0x58]
   14003998f:	mov    rcx,QWORD PTR [rax+0xf8]
   140039996:	mov    rax,QWORD PTR [rcx]
   140039999:	mov    cl,BYTE PTR [rax]
   14003999b:	mov    BYTE PTR [r14],cl
   14003999e:	test   QWORD PTR [rsi],r11
   1400399a1:	jbe    0x140039a31
   1400399a7:	movzx  r8d,r10w
   1400399ab:	movabs r9,0xf000000000000
   1400399b5:	test   ebx,ebx
   1400399b7:	jle    0x1400399e7
   1400399b9:	mov    rax,QWORD PTR [rsi]
   1400399bc:	mov    cl,r8b
   1400399bf:	and    rax,r9
   1400399c2:	and    rax,r11
   1400399c5:	shr    rax,cl
   1400399c8:	add    ax,r10w
   1400399cc:	cmp    ax,0x39
   1400399d0:	jbe    0x1400399d5
   1400399d2:	add    ax,dx
   1400399d5:	mov    BYTE PTR [rdi],al
   1400399d7:	dec    ebx
   1400399d9:	inc    rdi
   1400399dc:	shr    r9,0x4
   1400399e0:	add    r8w,0xfffc
   1400399e5:	jns    0x1400399b5
   1400399e7:	test   r8w,r8w
   1400399eb:	js     0x140039a31
   1400399ed:	mov    rax,QWORD PTR [rsi]
   1400399f0:	mov    cl,r8b
   1400399f3:	and    rax,r9
   1400399f6:	and    rax,r11
   1400399f9:	shr    rax,cl
   1400399fc:	cmp    ax,0x8
   140039a00:	jbe    0x140039a31
   140039a02:	lea    rcx,[rdi-0x1]
   140039a06:	mov    al,BYTE PTR [rcx]
   140039a08:	sub    al,0x46
   140039a0a:	test   al,0xdf
   140039a0c:	jne    0x140039a16
   140039a0e:	mov    BYTE PTR [rcx],r10b
   140039a11:	dec    rcx
   140039a14:	jmp    0x140039a06
   140039a16:	cmp    rcx,r14
   140039a19:	je     0x140039a2e
   140039a1b:	mov    al,BYTE PTR [rcx]
   140039a1d:	cmp    al,0x39
   140039a1f:	jne    0x140039a28
   140039a21:	add    dl,0x3a
   140039a24:	mov    BYTE PTR [rcx],dl
   140039a26:	jmp    0x140039a31
   140039a28:	inc    al
   140039a2a:	mov    BYTE PTR [rcx],al
   140039a2c:	jmp    0x140039a31
   140039a2e:	inc    BYTE PTR [rcx-0x1]
   140039a31:	test   ebx,ebx
   140039a33:	jle    0x140039a4c
   140039a35:	mov    r8,rbx
   140039a38:	mov    dl,r10b
   140039a3b:	mov    rcx,rdi
   140039a3e:	call   0x14002a910
   140039a43:	add    rdi,rbx
   140039a46:	mov    r10d,0x30
   140039a4c:	cmp    BYTE PTR [r14],r12b
   140039a4f:	cmove  rdi,r14
   140039a53:	neg    r15b
   140039a56:	sbb    al,al
   140039a58:	and    al,0xe0
   140039a5a:	add    al,0x70
   140039a5c:	mov    BYTE PTR [rdi],al
   140039a5e:	mov    rcx,QWORD PTR [rsi]
   140039a61:	shr    rcx,0x34
   140039a65:	and    ecx,0x7ff
   140039a6b:	sub    rcx,rbp
   140039a6e:	js     0x140039a7a
   140039a70:	mov    BYTE PTR [rdi+0x1],0x2b
   140039a74:	add    rdi,0x2
   140039a78:	jmp    0x140039a85
   140039a7a:	mov    BYTE PTR [rdi+0x1],0x2d
   140039a7e:	add    rdi,0x2
   140039a82:	neg    rcx
   140039a85:	mov    BYTE PTR [rdi],r10b
   140039a88:	mov    r8,rdi
   140039a8b:	cmp    rcx,0x3e8
   140039a92:	jl     0x140039ac7
   140039a94:	movabs rax,0x20c49ba5e353f7cf
   140039a9e:	imul   rcx
   140039aa1:	sar    rdx,0x7
   140039aa5:	mov    rax,rdx
   140039aa8:	shr    rax,0x3f
   140039aac:	add    rdx,rax
   140039aaf:	lea    eax,[r10+rdx*1]
   140039ab3:	mov    BYTE PTR [rdi],al
   140039ab5:	inc    rdi
   140039ab8:	imul   rax,rdx,0xfffffffffffffc18
   140039abf:	add    rcx,rax
   140039ac2:	cmp    rdi,r8
   140039ac5:	jne    0x140039acd
   140039ac7:	cmp    rcx,0x64
   140039acb:	jl     0x140039afb
   140039acd:	movabs rax,0xa3d70a3d70a3d70b
   140039ad7:	imul   rcx
   140039ada:	add    rdx,rcx
   140039add:	sar    rdx,0x6
   140039ae1:	mov    rax,rdx
   140039ae4:	shr    rax,0x3f
   140039ae8:	add    rdx,rax
   140039aeb:	lea    eax,[r10+rdx*1]
   140039aef:	mov    BYTE PTR [rdi],al
   140039af1:	inc    rdi
   140039af4:	imul   rax,rdx,0xffffffffffffff9c
   140039af8:	add    rcx,rax
   140039afb:	cmp    rdi,r8
   140039afe:	jne    0x140039b06
   140039b00:	cmp    rcx,0xa
   140039b04:	jl     0x140039b31
   140039b06:	movabs rax,0x6666666666666667
   140039b10:	imul   rcx
   140039b13:	sar    rdx,0x2
   140039b17:	mov    rax,rdx
   140039b1a:	shr    rax,0x3f
   140039b1e:	add    rdx,rax
   140039b21:	lea    eax,[r10+rdx*1]
   140039b25:	mov    BYTE PTR [rdi],al
   140039b27:	inc    rdi
   140039b2a:	imul   rax,rdx,0xfffffffffffffff6
   140039b2e:	add    rcx,rax
   140039b31:	add    cl,r10b
   140039b34:	mov    BYTE PTR [rdi],cl
   140039b36:	mov    BYTE PTR [rdi+0x1],r12b
   140039b3a:	mov    ebx,r12d
   140039b3d:	cmp    BYTE PTR [rsp+0x68],r12b
   140039b42:	je     0x140039b50
   140039b44:	mov    rcx,QWORD PTR [rsp+0x50]
   140039b49:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140039b50:	lea    r11,[rsp+0x70]
   140039b55:	mov    eax,ebx
   140039b57:	mov    rbx,QWORD PTR [r11+0x20]
   140039b5b:	mov    rbp,QWORD PTR [r11+0x28]
   140039b5f:	mov    rsi,QWORD PTR [r11+0x30]
   140039b63:	mov    rdi,QWORD PTR [r11+0x38]
   140039b67:	mov    rsp,r11
   140039b6a:	pop    r15
   140039b6c:	pop    r14
   140039b6e:	pop    r12
   140039b70:	ret    
   140039b71:	int3   
   140039b72:	int3   
   140039b73:	int3   
   140039b74:	mov    r11,rsp
   140039b77:	mov    QWORD PTR [r11+0x8],rbx
   140039b7b:	mov    QWORD PTR [r11+0x10],rbp
   140039b7f:	mov    QWORD PTR [r11+0x18],rsi
   140039b83:	push   rdi
   140039b84:	sub    rsp,0x50
   140039b88:	mov    rax,QWORD PTR [rsp+0x80]
   140039b90:	mov    rsi,r8
   140039b93:	mov    ebp,DWORD PTR [rsp+0x88]
   140039b9a:	lea    r8,[r11-0x18]
   140039b9e:	mov    rcx,QWORD PTR [rcx]
   140039ba1:	mov    rdi,rdx
   140039ba4:	mov    QWORD PTR [r11-0x38],rax
   140039ba8:	lea    edx,[rbp+0x1]
   140039bab:	call   0x140043af0
   140039bb0:	xor    ecx,ecx
   140039bb2:	lea    r9,[rsp+0x40]
   140039bb7:	cmp    DWORD PTR [rsp+0x40],0x2d
   140039bbc:	lea    r8d,[rbp+0x1]
   140039bc0:	mov    rdx,rsi
   140039bc3:	sete   cl
   140039bc6:	xor    eax,eax
   140039bc8:	test   ebp,ebp
   140039bca:	setg   al
   140039bcd:	sub    rdx,rax
   140039bd0:	sub    rdx,rcx
   140039bd3:	cmp    rsi,0xffffffffffffffff
   140039bd7:	cmove  rdx,rsi
   140039bdb:	add    rcx,rax
   140039bde:	add    rcx,rdi
   140039be1:	call   0x140043a30
   140039be6:	test   eax,eax
   140039be8:	je     0x140039bef
   140039bea:	mov    BYTE PTR [rdi],0x0
   140039bed:	jmp    0x140039c2c
   140039bef:	mov    rax,QWORD PTR [rsp+0xa0]
   140039bf7:	mov    r8d,ebp
   140039bfa:	mov    r9b,BYTE PTR [rsp+0x90]
   140039c02:	mov    rdx,rsi
   140039c05:	mov    QWORD PTR [rsp+0x38],rax
   140039c0a:	mov    rcx,rdi
   140039c0d:	lea    rax,[rsp+0x40]
   140039c12:	mov    BYTE PTR [rsp+0x30],0x0
   140039c17:	mov    QWORD PTR [rsp+0x28],rax
   140039c1c:	mov    eax,DWORD PTR [rsp+0x98]
   140039c23:	mov    DWORD PTR [rsp+0x20],eax
   140039c27:	call   0x140039c44
   140039c2c:	mov    rbx,QWORD PTR [rsp+0x60]
   140039c31:	mov    rbp,QWORD PTR [rsp+0x68]
   140039c36:	mov    rsi,QWORD PTR [rsp+0x70]
   140039c3b:	add    rsp,0x50
   140039c3f:	pop    rdi
   140039c40:	ret    
   140039c41:	int3   
   140039c42:	int3   
   140039c43:	int3   
   140039c44:	mov    rax,rsp
   140039c47:	mov    QWORD PTR [rax+0x8],rbx
   140039c4b:	mov    QWORD PTR [rax+0x10],rbp
   140039c4f:	mov    QWORD PTR [rax+0x18],rsi
   140039c53:	mov    QWORD PTR [rax+0x20],rdi
   140039c57:	push   r15
   140039c59:	sub    rsp,0x50
   140039c5d:	xor    eax,eax
   140039c5f:	movsxd rbx,r8d
   140039c62:	test   r8d,r8d
   140039c65:	mov    r15b,r9b
   140039c68:	mov    rbp,rdx
   140039c6b:	mov    rdi,rcx
   140039c6e:	cmovg  eax,ebx
   140039c71:	add    eax,0x9
   140039c74:	cdqe   
   140039c76:	cmp    rdx,rax
   140039c79:	ja     0x140039ca9
   140039c7b:	call   0x140032c50
   140039c80:	mov    ebx,0x22
   140039c85:	mov    DWORD PTR [rax],ebx
   140039c87:	call   0x1400307d0
   140039c8c:	mov    eax,ebx
   140039c8e:	mov    rbx,QWORD PTR [rsp+0x60]
   140039c93:	mov    rbp,QWORD PTR [rsp+0x68]
   140039c98:	mov    rsi,QWORD PTR [rsp+0x70]
   140039c9d:	mov    rdi,QWORD PTR [rsp+0x78]
   140039ca2:	add    rsp,0x50
   140039ca6:	pop    r15
   140039ca8:	ret    
   140039ca9:	mov    rdx,QWORD PTR [rsp+0x98]
   140039cb1:	lea    rcx,[rsp+0x30]
   140039cb6:	call   0x14002bd94
   140039cbb:	cmp    BYTE PTR [rsp+0x90],0x0
   140039cc3:	mov    rsi,QWORD PTR [rsp+0x88]
   140039ccb:	je     0x140039cff
   140039ccd:	xor    edx,edx
   140039ccf:	cmp    DWORD PTR [rsi],0x2d
   140039cd2:	sete   dl
   140039cd5:	xor    eax,eax
   140039cd7:	add    rdx,rdi
   140039cda:	test   ebx,ebx
   140039cdc:	setg   al
   140039cdf:	test   eax,eax
   140039ce1:	je     0x140039cff
   140039ce3:	or     r8,0xffffffffffffffff
   140039ce7:	inc    r8
   140039cea:	cmp    BYTE PTR [rdx+r8*1],0x0
   140039cef:	jne    0x140039ce7
   140039cf1:	movsxd rcx,eax
   140039cf4:	inc    r8
   140039cf7:	add    rcx,rdx
   140039cfa:	call   0x140028fd0
   140039cff:	cmp    DWORD PTR [rsi],0x2d
   140039d02:	mov    rdx,rdi
   140039d05:	jne    0x140039d0e
   140039d07:	mov    BYTE PTR [rdi],0x2d
   140039d0a:	lea    rdx,[rdi+0x1]
   140039d0e:	test   ebx,ebx
   140039d10:	jle    0x140039d2d
   140039d12:	mov    al,BYTE PTR [rdx+0x1]
   140039d15:	mov    BYTE PTR [rdx],al
   140039d17:	inc    rdx
   140039d1a:	mov    rax,QWORD PTR [rsp+0x38]
   140039d1f:	mov    rcx,QWORD PTR [rax+0xf8]
   140039d26:	mov    rax,QWORD PTR [rcx]
   140039d29:	mov    cl,BYTE PTR [rax]
   140039d2b:	mov    BYTE PTR [rdx],cl
   140039d2d:	xor    ecx,ecx
   140039d2f:	lea    r8,[rip+0x1dade]        # 0x140057814
   140039d36:	cmp    BYTE PTR [rsp+0x90],cl
   140039d3d:	sete   cl
   140039d40:	add    rbx,rdx
   140039d43:	add    rbx,rcx
   140039d46:	sub    rdi,rbx
   140039d49:	mov    rcx,rbx
   140039d4c:	cmp    rbp,0xffffffffffffffff
   140039d50:	lea    rdx,[rdi+rbp*1]
   140039d54:	cmove  rdx,rbp
   140039d58:	call   0x140038d18
   140039d5d:	test   eax,eax
   140039d5f:	jne    0x140039e09
   140039d65:	lea    rcx,[rbx+0x2]
   140039d69:	test   r15b,r15b
   140039d6c:	je     0x140039d71
   140039d6e:	mov    BYTE PTR [rbx],0x45
   140039d71:	mov    rax,QWORD PTR [rsi+0x8]
   140039d75:	cmp    BYTE PTR [rax],0x30
   140039d78:	je     0x140039dd1
   140039d7a:	mov    r8d,DWORD PTR [rsi+0x4]
   140039d7e:	sub    r8d,0x1
   140039d82:	jns    0x140039d8b
   140039d84:	neg    r8d
   140039d87:	mov    BYTE PTR [rbx+0x1],0x2d
   140039d8b:	cmp    r8d,0x64
   140039d8f:	jl     0x140039dac
   140039d91:	mov    eax,0x51eb851f
   140039d96:	imul   r8d
   140039d99:	sar    edx,0x5
   140039d9c:	mov    eax,edx
   140039d9e:	shr    eax,0x1f
   140039da1:	add    edx,eax
   140039da3:	add    BYTE PTR [rbx+0x2],dl
   140039da6:	imul   eax,edx,0xffffff9c
   140039da9:	add    r8d,eax
   140039dac:	cmp    r8d,0xa
   140039db0:	jl     0x140039dcd
   140039db2:	mov    eax,0x66666667
   140039db7:	imul   r8d
   140039dba:	sar    edx,0x2
   140039dbd:	mov    eax,edx
   140039dbf:	shr    eax,0x1f
   140039dc2:	add    edx,eax
   140039dc4:	add    BYTE PTR [rbx+0x3],dl
   140039dc7:	imul   eax,edx,0xfffffff6
   140039dca:	add    r8d,eax
   140039dcd:	add    BYTE PTR [rbx+0x4],r8b
   140039dd1:	cmp    DWORD PTR [rsp+0x80],0x2
   140039dd9:	jne    0x140039def
   140039ddb:	cmp    BYTE PTR [rcx],0x30
   140039dde:	jne    0x140039def
   140039de0:	lea    rdx,[rcx+0x1]
   140039de4:	mov    r8d,0x3
   140039dea:	call   0x140028fd0
   140039def:	cmp    BYTE PTR [rsp+0x48],0x0
   140039df4:	je     0x140039e02
   140039df6:	mov    rax,QWORD PTR [rsp+0x30]
   140039dfb:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140039e02:	xor    eax,eax
   140039e04:	jmp    0x140039c8e
   140039e09:	and    QWORD PTR [rsp+0x20],0x0
   140039e0f:	xor    r9d,r9d
   140039e12:	xor    r8d,r8d
   140039e15:	xor    edx,edx
   140039e17:	xor    ecx,ecx
   140039e19:	call   0x140030820
   140039e1e:	int3   
   140039e1f:	int3   
   140039e20:	mov    rax,rsp
   140039e23:	mov    QWORD PTR [rax+0x8],rbx
   140039e27:	mov    QWORD PTR [rax+0x10],rbp
   140039e2b:	mov    QWORD PTR [rax+0x18],rsi
   140039e2f:	mov    QWORD PTR [rax+0x20],rdi
   140039e33:	push   r14
   140039e35:	sub    rsp,0x40
   140039e39:	mov    rdx,QWORD PTR [rsp+0x78]
   140039e3e:	mov    rbx,rcx
   140039e41:	lea    rcx,[rax-0x28]
   140039e45:	mov    r14,r9
   140039e48:	mov    edi,r8d
   140039e4b:	call   0x14002bd94
   140039e50:	mov    ecx,DWORD PTR [r14+0x4]
   140039e54:	dec    ecx
   140039e56:	cmp    BYTE PTR [rsp+0x70],0x0
   140039e5b:	je     0x140039e76
   140039e5d:	cmp    ecx,edi
   140039e5f:	jne    0x140039e76
   140039e61:	xor    eax,eax
   140039e63:	movsxd rcx,ecx
   140039e66:	cmp    DWORD PTR [r14],0x2d
   140039e6a:	sete   al
   140039e6d:	add    rax,rbx
   140039e70:	mov    WORD PTR [rcx+rax*1],0x30
   140039e76:	cmp    DWORD PTR [r14],0x2d
   140039e7a:	jne    0x140039e82
   140039e7c:	mov    BYTE PTR [rbx],0x2d
   140039e7f:	inc    rbx
   140039e82:	or     rsi,0xffffffffffffffff
   140039e86:	cmp    DWORD PTR [r14+0x4],0x0
   140039e8b:	jg     0x140039eb1
   140039e8d:	mov    r8,rsi
   140039e90:	inc    r8
   140039e93:	cmp    BYTE PTR [rbx+r8*1],0x0
   140039e98:	jne    0x140039e90
   140039e9a:	inc    r8
   140039e9d:	lea    rcx,[rbx+0x1]
   140039ea1:	mov    rdx,rbx
   140039ea4:	call   0x140028fd0
   140039ea9:	mov    BYTE PTR [rbx],0x30
   140039eac:	inc    rbx
   140039eaf:	jmp    0x140039eb8
   140039eb1:	movsxd rax,DWORD PTR [r14+0x4]
   140039eb5:	add    rbx,rax
   140039eb8:	test   edi,edi
   140039eba:	jle    0x140039f38
   140039ebc:	lea    rbp,[rbx+0x1]
   140039ec0:	mov    r8,rsi
   140039ec3:	inc    r8
   140039ec6:	cmp    BYTE PTR [rbx+r8*1],0x0
   140039ecb:	jne    0x140039ec3
   140039ecd:	inc    r8
   140039ed0:	mov    rdx,rbx
   140039ed3:	mov    rcx,rbp
   140039ed6:	call   0x140028fd0
   140039edb:	mov    rax,QWORD PTR [rsp+0x28]
   140039ee0:	mov    rcx,QWORD PTR [rax+0xf8]
   140039ee7:	mov    rax,QWORD PTR [rcx]
   140039eea:	mov    cl,BYTE PTR [rax]
   140039eec:	mov    BYTE PTR [rbx],cl
   140039eee:	mov    ecx,DWORD PTR [r14+0x4]
   140039ef2:	test   ecx,ecx
   140039ef4:	jns    0x140039f38
   140039ef6:	cmp    BYTE PTR [rsp+0x70],0x0
   140039efb:	jne    0x140039f05
   140039efd:	mov    eax,ecx
   140039eff:	neg    eax
   140039f01:	cmp    eax,edi
   140039f03:	jge    0x140039f09
   140039f05:	mov    edi,ecx
   140039f07:	neg    edi
   140039f09:	test   edi,edi
   140039f0b:	je     0x140039f28
   140039f0d:	inc    rsi
   140039f10:	cmp    BYTE PTR [rsi+rbp*1],0x0
   140039f14:	jne    0x140039f0d
   140039f16:	movsxd rcx,edi
   140039f19:	lea    r8,[rsi+0x1]
   140039f1d:	add    rcx,rbp
   140039f20:	mov    rdx,rbp
   140039f23:	call   0x140028fd0
   140039f28:	movsxd r8,edi
   140039f2b:	mov    edx,0x30
   140039f30:	mov    rcx,rbp
   140039f33:	call   0x14002a910
   140039f38:	cmp    BYTE PTR [rsp+0x38],0x0
   140039f3d:	je     0x140039f4b
   140039f3f:	mov    rax,QWORD PTR [rsp+0x20]
   140039f44:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140039f4b:	mov    rbx,QWORD PTR [rsp+0x50]
   140039f50:	xor    eax,eax
   140039f52:	mov    rbp,QWORD PTR [rsp+0x58]
   140039f57:	mov    rsi,QWORD PTR [rsp+0x60]
   140039f5c:	mov    rdi,QWORD PTR [rsp+0x68]
   140039f61:	add    rsp,0x40
   140039f65:	pop    r14
   140039f67:	ret    
   140039f68:	mov    r11,rsp
   140039f6b:	mov    QWORD PTR [r11+0x8],rbx
   140039f6f:	mov    QWORD PTR [r11+0x10],rbp
   140039f73:	mov    QWORD PTR [r11+0x18],rsi
   140039f77:	push   r14
   140039f79:	sub    rsp,0x50
   140039f7d:	mov    rcx,QWORD PTR [rcx]
   140039f80:	xor    eax,eax
   140039f82:	mov    QWORD PTR [r11-0x18],rax
   140039f86:	mov    rbp,r8
   140039f89:	mov    QWORD PTR [r11-0x10],rax
   140039f8d:	lea    r8,[r11-0x18]
   140039f91:	mov    rax,QWORD PTR [rsp+0x80]
   140039f99:	mov    rsi,rdx
   140039f9c:	mov    edx,DWORD PTR [rsp+0x88]
   140039fa3:	mov    QWORD PTR [r11-0x38],rax
   140039fa7:	call   0x140043af0
   140039fac:	mov    r14d,DWORD PTR [rsp+0x44]
   140039fb1:	lea    r9,[rsp+0x40]
   140039fb6:	mov    r8d,DWORD PTR [rsp+0x88]
   140039fbe:	xor    ecx,ecx
   140039fc0:	cmp    DWORD PTR [rsp+0x40],0x2d
   140039fc5:	mov    rdx,rbp
   140039fc8:	sete   cl
   140039fcb:	dec    r14d
   140039fce:	sub    rdx,rcx
   140039fd1:	cmp    rbp,0xffffffffffffffff
   140039fd5:	lea    rbx,[rcx+rsi*1]
   140039fd9:	cmove  rdx,rbp
   140039fdd:	mov    rcx,rbx
   140039fe0:	call   0x140043a30
   140039fe5:	test   eax,eax
   140039fe7:	je     0x140039ff1
   140039fe9:	mov    BYTE PTR [rsi],0x0
   140039fec:	jmp    0x14003a089
   140039ff1:	mov    eax,DWORD PTR [rsp+0x44]
   140039ff5:	dec    eax
   140039ff7:	cmp    r14d,eax
   140039ffa:	setl   cl
   140039ffd:	cmp    eax,0xfffffffc
   14003a000:	jl     0x14003a047
   14003a002:	cmp    eax,DWORD PTR [rsp+0x88]
   14003a009:	jge    0x14003a047
   14003a00b:	test   cl,cl
   14003a00d:	je     0x14003a01b
   14003a00f:	mov    al,BYTE PTR [rbx]
   14003a011:	inc    rbx
   14003a014:	test   al,al
   14003a016:	jne    0x14003a00f
   14003a018:	mov    BYTE PTR [rbx-0x2],al
   14003a01b:	mov    rax,QWORD PTR [rsp+0xa0]
   14003a023:	lea    r9,[rsp+0x40]
   14003a028:	mov    r8d,DWORD PTR [rsp+0x88]
   14003a030:	mov    rdx,rbp
   14003a033:	mov    QWORD PTR [rsp+0x28],rax
   14003a038:	mov    rcx,rsi
   14003a03b:	mov    BYTE PTR [rsp+0x20],0x1
   14003a040:	call   0x140039e20
   14003a045:	jmp    0x14003a089
   14003a047:	mov    rax,QWORD PTR [rsp+0xa0]
   14003a04f:	mov    rdx,rbp
   14003a052:	mov    r9b,BYTE PTR [rsp+0x90]
   14003a05a:	mov    rcx,rsi
   14003a05d:	mov    r8d,DWORD PTR [rsp+0x88]
   14003a065:	mov    QWORD PTR [rsp+0x38],rax
   14003a06a:	lea    rax,[rsp+0x40]
   14003a06f:	mov    BYTE PTR [rsp+0x30],0x1
   14003a074:	mov    QWORD PTR [rsp+0x28],rax
   14003a079:	mov    eax,DWORD PTR [rsp+0x98]
   14003a080:	mov    DWORD PTR [rsp+0x20],eax
   14003a084:	call   0x140039c44
   14003a089:	mov    rbx,QWORD PTR [rsp+0x60]
   14003a08e:	mov    rbp,QWORD PTR [rsp+0x68]
   14003a093:	mov    rsi,QWORD PTR [rsp+0x70]
   14003a098:	add    rsp,0x50
   14003a09c:	pop    r14
   14003a09e:	ret    
   14003a09f:	int3   
   14003a0a0:	rex push rbp
   14003a0a2:	lea    rbp,[rsp-0x4f]
   14003a0a7:	sub    rsp,0xc0
   14003a0ae:	mov    rax,QWORD PTR [rip+0x36f9b]        # 0x140071050
   14003a0b5:	xor    rax,rsp
   14003a0b8:	mov    QWORD PTR [rbp+0x3f],rax
   14003a0bc:	mov    r10,r9
   14003a0bf:	movzx  eax,dl
   14003a0c2:	add    rax,0x4
   14003a0c6:	mov    r9,r8
   14003a0c9:	cmp    r10,rax
   14003a0cc:	jae    0x14003a0ec
   14003a0ce:	mov    BYTE PTR [r8],0x0
   14003a0d2:	mov    eax,0xc
   14003a0d7:	mov    rcx,QWORD PTR [rbp+0x3f]
   14003a0db:	xor    rcx,rsp
   14003a0de:	call   0x140025df0
   14003a0e3:	add    rsp,0xc0
   14003a0ea:	pop    rbp
   14003a0eb:	ret    
   14003a0ec:	test   dl,dl
   14003a0ee:	je     0x14003a0fe
   14003a0f0:	inc    r9
   14003a0f3:	mov    BYTE PTR [r8],0x2d
   14003a0f7:	dec    r10
   14003a0fa:	mov    BYTE PTR [r9],0x0
   14003a0fe:	neg    BYTE PTR [rbp+0x7f]
   14003a101:	lea    rdx,[rip+0x1d6c4]        # 0x1400577cc
   14003a108:	lea    r8,[rip+0x1d6c1]        # 0x1400577d0
   14003a10f:	mov    QWORD PTR [rbp-0x21],rdx
   14003a113:	lea    rax,[rip+0x1d6aa]        # 0x1400577c4
   14003a11a:	mov    QWORD PTR [rbp-0x19],rdx
   14003a11e:	mov    QWORD PTR [rbp-0x41],rax
   14003a122:	mov    QWORD PTR [rbp-0x39],rax
   14003a126:	lea    rax,[rip+0x1d69b]        # 0x1400577c8
   14003a12d:	mov    QWORD PTR [rbp-0x31],rax
   14003a131:	mov    QWORD PTR [rbp-0x29],rax
   14003a135:	lea    rax,[rip+0x1d69c]        # 0x1400577d8
   14003a13c:	mov    QWORD PTR [rbp-0x1],rax
   14003a140:	lea    rax,[rip+0x1d6a1]        # 0x1400577e8
   14003a147:	mov    QWORD PTR [rbp+0xf],rax
   14003a14b:	lea    rax,[rip+0x1d6a6]        # 0x1400577f8
   14003a152:	mov    QWORD PTR [rbp+0x1f],rax
   14003a156:	lea    rax,[rip+0x1d6ab]        # 0x140057808
   14003a15d:	mov    QWORD PTR [rbp+0x2f],rax
   14003a161:	mov    QWORD PTR [rbp+0x7],rdx
   14003a165:	mov    QWORD PTR [rbp+0x27],rdx
   14003a169:	lea    edx,[rcx-0x1]
   14003a16c:	sbb    ecx,ecx
   14003a16e:	mov    QWORD PTR [rbp-0x11],r8
   14003a172:	shl    rdx,0x2
   14003a176:	not    ecx
   14003a178:	and    ecx,0x2
   14003a17b:	mov    QWORD PTR [rbp-0x9],r8
   14003a17f:	mov    eax,ecx
   14003a181:	add    rax,rdx
   14003a184:	mov    QWORD PTR [rbp+0x17],r8
   14003a188:	mov    QWORD PTR [rbp+0x37],r8
   14003a18c:	mov    r8,QWORD PTR [rbp+rax*8-0x41]
   14003a191:	or     rax,0xffffffffffffffff
   14003a195:	inc    rax
   14003a198:	cmp    BYTE PTR [r8+rax*1],0x0
   14003a19d:	jne    0x14003a195
   14003a19f:	cmp    r10,rax
   14003a1a2:	seta   al
   14003a1a5:	xor    r8d,r8d
   14003a1a8:	test   al,al
   14003a1aa:	sete   r8b
   14003a1ae:	add    r8d,ecx
   14003a1b1:	mov    rcx,r9
   14003a1b4:	add    r8,rdx
   14003a1b7:	mov    rdx,r10
   14003a1ba:	mov    r8,QWORD PTR [rbp+r8*8-0x41]
   14003a1bf:	call   0x140038d18
   14003a1c4:	test   eax,eax
   14003a1c6:	je     0x14003a0d7
   14003a1cc:	and    QWORD PTR [rsp+0x20],0x0
   14003a1d2:	xor    r9d,r9d
   14003a1d5:	xor    r8d,r8d
   14003a1d8:	xor    edx,edx
   14003a1da:	xor    ecx,ecx
   14003a1dc:	call   0x140030820
   14003a1e1:	int3   
   14003a1e2:	int3   
   14003a1e3:	int3   
   14003a1e4:	mov    QWORD PTR [rsp+0x8],rbx
   14003a1e9:	mov    QWORD PTR [rsp+0x10],rbp
   14003a1ee:	mov    QWORD PTR [rsp+0x18],rsi
   14003a1f3:	push   rdi
   14003a1f4:	push   r12
   14003a1f6:	push   r13
   14003a1f8:	push   r14
   14003a1fa:	push   r15
   14003a1fc:	sub    rsp,0x60
   14003a200:	mov    r13,r9
   14003a203:	mov    rbp,r8
   14003a206:	mov    rsi,rdx
   14003a209:	mov    r15,rcx
   14003a20c:	test   rdx,rdx
   14003a20f:	jne    0x14003a229
   14003a211:	call   0x140032c50
   14003a216:	mov    ebx,0x16
   14003a21b:	mov    DWORD PTR [rax],ebx
   14003a21d:	call   0x1400307d0
   14003a222:	mov    eax,ebx
   14003a224:	jmp    0x14003a407
   14003a229:	test   r8,r8
   14003a22c:	je     0x14003a211
   14003a22e:	test   r9,r9
   14003a231:	je     0x14003a211
   14003a233:	mov    r12,QWORD PTR [rsp+0xb0]
   14003a23b:	test   r12,r12
   14003a23e:	je     0x14003a211
   14003a240:	mov    ebx,DWORD PTR [rsp+0xb8]
   14003a247:	cmp    ebx,0x41
   14003a24a:	je     0x14003a259
   14003a24c:	lea    eax,[rbx-0x45]
   14003a24f:	cmp    eax,0x2
   14003a252:	jbe    0x14003a259
   14003a254:	xor    r14b,r14b
   14003a257:	jmp    0x14003a25c
   14003a259:	mov    r14b,0x1
   14003a25c:	mov    rdi,QWORD PTR [rsp+0xc8]
   14003a264:	test   dil,0x8
   14003a268:	jne    0x14003a294
   14003a26a:	call   0x1400397ac
   14003a26f:	test   eax,eax
   14003a271:	je     0x14003a294
   14003a273:	mov    rdx,QWORD PTR [r15]
   14003a276:	mov    r9,rbp
   14003a279:	shr    rdx,0x3f
   14003a27d:	mov    r8,rsi
   14003a280:	and    dl,0x1
   14003a283:	mov    BYTE PTR [rsp+0x20],r14b
   14003a288:	mov    ecx,eax
   14003a28a:	call   0x14003a0a0
   14003a28f:	jmp    0x14003a407
   14003a294:	shr    rdi,0x4
   14003a298:	and    edi,0x1
   14003a29b:	or     edi,0x2
   14003a29e:	sub    ebx,0x41
   14003a2a1:	je     0x14003a3d0
   14003a2a7:	sub    ebx,0x4
   14003a2aa:	je     0x14003a397
   14003a2b0:	sub    ebx,0x1
   14003a2b3:	je     0x14003a30d
   14003a2b5:	sub    ebx,0x1
   14003a2b8:	je     0x14003a2d1
   14003a2ba:	sub    ebx,0x1a
   14003a2bd:	je     0x14003a3d0
   14003a2c3:	sub    ebx,0x4
   14003a2c6:	je     0x14003a397
   14003a2cc:	cmp    ebx,0x1
   14003a2cf:	je     0x14003a30d
   14003a2d1:	mov    rax,QWORD PTR [rsp+0xd0]
   14003a2d9:	mov    r9,r13
   14003a2dc:	mov    QWORD PTR [rsp+0x40],rax
   14003a2e1:	mov    r8,rbp
   14003a2e4:	mov    eax,DWORD PTR [rsp+0xc0]
   14003a2eb:	mov    rdx,rsi
   14003a2ee:	mov    DWORD PTR [rsp+0x38],edi
   14003a2f2:	mov    rcx,r15
   14003a2f5:	mov    BYTE PTR [rsp+0x30],r14b
   14003a2fa:	mov    DWORD PTR [rsp+0x28],eax
   14003a2fe:	mov    QWORD PTR [rsp+0x20],r12
   14003a303:	call   0x140039f68
   14003a308:	jmp    0x14003a407
   14003a30d:	mov    ebx,DWORD PTR [rsp+0xc0]
   14003a314:	lea    r8,[rsp+0x50]
   14003a319:	mov    rcx,QWORD PTR [r15]
   14003a31c:	xor    eax,eax
   14003a31e:	mov    edx,ebx
   14003a320:	mov    QWORD PTR [rsp+0x50],rax
   14003a325:	mov    r9,r13
   14003a328:	mov    QWORD PTR [rsp+0x58],rax
   14003a32d:	mov    QWORD PTR [rsp+0x20],r12
   14003a332:	call   0x140043af0
   14003a337:	mov    r8d,DWORD PTR [rsp+0x54]
   14003a33c:	lea    r9,[rsp+0x50]
   14003a341:	xor    ecx,ecx
   14003a343:	mov    rdx,rbp
   14003a346:	cmp    DWORD PTR [rsp+0x50],0x2d
   14003a34b:	sete   cl
   14003a34e:	add    r8d,ebx
   14003a351:	sub    rdx,rcx
   14003a354:	cmp    rbp,0xffffffffffffffff
   14003a358:	cmove  rdx,rbp
   14003a35c:	add    rcx,rsi
   14003a35f:	call   0x140043a30
   14003a364:	test   eax,eax
   14003a366:	je     0x14003a370
   14003a368:	mov    BYTE PTR [rsi],0x0
   14003a36b:	jmp    0x14003a407
   14003a370:	mov    rax,QWORD PTR [rsp+0xd0]
   14003a378:	lea    r9,[rsp+0x50]
   14003a37d:	mov    QWORD PTR [rsp+0x28],rax
   14003a382:	mov    r8d,ebx
   14003a385:	mov    rdx,rbp
   14003a388:	mov    BYTE PTR [rsp+0x20],0x0
   14003a38d:	mov    rcx,rsi
   14003a390:	call   0x140039e20
   14003a395:	jmp    0x14003a407
   14003a397:	mov    rax,QWORD PTR [rsp+0xd0]
   14003a39f:	mov    r9,r13
   14003a3a2:	mov    QWORD PTR [rsp+0x40],rax
   14003a3a7:	mov    r8,rbp
   14003a3aa:	mov    eax,DWORD PTR [rsp+0xc0]
   14003a3b1:	mov    rdx,rsi
   14003a3b4:	mov    DWORD PTR [rsp+0x38],edi
   14003a3b8:	mov    rcx,r15
   14003a3bb:	mov    BYTE PTR [rsp+0x30],r14b
   14003a3c0:	mov    DWORD PTR [rsp+0x28],eax
   14003a3c4:	mov    QWORD PTR [rsp+0x20],r12
   14003a3c9:	call   0x140039b74
   14003a3ce:	jmp    0x14003a407
   14003a3d0:	mov    rax,QWORD PTR [rsp+0xd0]
   14003a3d8:	mov    r9,r13
   14003a3db:	mov    QWORD PTR [rsp+0x40],rax
   14003a3e0:	mov    r8,rbp
   14003a3e3:	mov    eax,DWORD PTR [rsp+0xc0]
   14003a3ea:	mov    rdx,rsi
   14003a3ed:	mov    DWORD PTR [rsp+0x38],edi
   14003a3f1:	mov    rcx,r15
   14003a3f4:	mov    BYTE PTR [rsp+0x30],r14b
   14003a3f9:	mov    DWORD PTR [rsp+0x28],eax
   14003a3fd:	mov    QWORD PTR [rsp+0x20],r12
   14003a402:	call   0x140039814
   14003a407:	lea    r11,[rsp+0x60]
   14003a40c:	mov    rbx,QWORD PTR [r11+0x30]
   14003a410:	mov    rbp,QWORD PTR [r11+0x38]
   14003a414:	mov    rsi,QWORD PTR [r11+0x40]
   14003a418:	mov    rsp,r11
   14003a41b:	pop    r15
   14003a41d:	pop    r14
   14003a41f:	pop    r13
   14003a421:	pop    r12
   14003a423:	pop    rdi
   14003a424:	ret    
   14003a425:	int3   
   14003a426:	int3   
   14003a427:	int3   
   14003a428:	mov    QWORD PTR [rsp+0x10],rbx
   14003a42d:	mov    QWORD PTR [rsp+0x18],rbp
   14003a432:	push   rsi
   14003a433:	push   rdi
   14003a434:	push   r14
   14003a436:	sub    rsp,0x40
   14003a43a:	mov    rax,QWORD PTR [rip+0x36c0f]        # 0x140071050
   14003a441:	xor    rax,rsp
   14003a444:	mov    QWORD PTR [rsp+0x30],rax
   14003a449:	mov    eax,DWORD PTR [rdx+0x14]
   14003a44c:	mov    rdi,rdx
   14003a44f:	movzx  esi,cx
   14003a452:	shr    eax,0xc
   14003a455:	test   al,0x1
   14003a457:	je     0x14003a472
   14003a459:	add    DWORD PTR [rdx+0x10],0xfffffffe
   14003a45d:	js     0x14003a56a
   14003a463:	mov    rax,QWORD PTR [rdx]
   14003a466:	mov    WORD PTR [rax],cx
   14003a469:	add    QWORD PTR [rdx],0x2
   14003a46d:	jmp    0x14003a57e
   14003a472:	mov    rcx,rdx
   14003a475:	call   0x14003a5a4
   14003a47a:	lea    rbp,[rip+0x36fef]        # 0x140071470
   14003a481:	lea    r14,[rip+0x3c838]        # 0x140076cc0
   14003a488:	cmp    eax,0xffffffff
   14003a48b:	je     0x14003a4be
   14003a48d:	mov    rcx,rdi
   14003a490:	call   0x14003a5a4
   14003a495:	cmp    eax,0xfffffffe
   14003a498:	je     0x14003a4be
   14003a49a:	mov    rcx,rdi
   14003a49d:	call   0x14003a5a4
   14003a4a2:	movsxd rbx,eax
   14003a4a5:	mov    rcx,rdi
   14003a4a8:	sar    rbx,0x6
   14003a4ac:	call   0x14003a5a4
   14003a4b1:	and    eax,0x3f
   14003a4b4:	shl    rax,0x6
   14003a4b8:	add    rax,QWORD PTR [r14+rbx*8]
   14003a4bc:	jmp    0x14003a4c1
   14003a4be:	mov    rax,rbp
   14003a4c1:	mov    al,BYTE PTR [rax+0x39]
   14003a4c4:	dec    al
   14003a4c6:	cmp    al,0x1
   14003a4c8:	jbe    0x14003a561
   14003a4ce:	mov    rcx,rdi
   14003a4d1:	call   0x14003a5a4
   14003a4d6:	cmp    eax,0xffffffff
   14003a4d9:	je     0x14003a50c
   14003a4db:	mov    rcx,rdi
   14003a4de:	call   0x14003a5a4
   14003a4e3:	cmp    eax,0xfffffffe
   14003a4e6:	je     0x14003a50c
   14003a4e8:	mov    rcx,rdi
   14003a4eb:	call   0x14003a5a4
   14003a4f0:	movsxd rbx,eax
   14003a4f3:	mov    rcx,rdi
   14003a4f6:	sar    rbx,0x6
   14003a4fa:	call   0x14003a5a4
   14003a4ff:	mov    ebp,eax
   14003a501:	and    ebp,0x3f
   14003a504:	shl    rbp,0x6
   14003a508:	add    rbp,QWORD PTR [r14+rbx*8]
   14003a50c:	test   BYTE PTR [rbp+0x38],0x80
   14003a510:	je     0x14003a561
   14003a512:	movzx  r9d,si
   14003a516:	lea    rdx,[rsp+0x24]
   14003a51b:	mov    r8d,0x5
   14003a521:	lea    rcx,[rsp+0x20]
   14003a526:	call   0x140039798
   14003a52b:	xor    ebx,ebx
   14003a52d:	test   eax,eax
   14003a52f:	je     0x14003a538
   14003a531:	mov    eax,0xffff
   14003a536:	jmp    0x14003a581
   14003a538:	cmp    DWORD PTR [rsp+0x20],ebx
   14003a53c:	jle    0x14003a57e
   14003a53e:	lea    rbp,[rsp+0x24]
   14003a543:	movsx  ecx,BYTE PTR [rbp+0x0]
   14003a547:	mov    rdx,rdi
   14003a54a:	call   0x14003a5cc
   14003a54f:	cmp    eax,0xffffffff
   14003a552:	je     0x14003a531
   14003a554:	inc    ebx
   14003a556:	inc    rbp
   14003a559:	cmp    ebx,DWORD PTR [rsp+0x20]
   14003a55d:	jl     0x14003a543
   14003a55f:	jmp    0x14003a57e
   14003a561:	add    DWORD PTR [rdi+0x10],0xfffffffe
   14003a565:	jns    0x14003a574
   14003a567:	mov    rdx,rdi
   14003a56a:	movzx  ecx,si
   14003a56d:	call   0x1400451dc
   14003a572:	jmp    0x14003a581
   14003a574:	mov    rax,QWORD PTR [rdi]
   14003a577:	mov    WORD PTR [rax],si
   14003a57a:	add    QWORD PTR [rdi],0x2
   14003a57e:	movzx  eax,si
   14003a581:	mov    rcx,QWORD PTR [rsp+0x30]
   14003a586:	xor    rcx,rsp
   14003a589:	call   0x140025df0
   14003a58e:	mov    rbx,QWORD PTR [rsp+0x68]
   14003a593:	mov    rbp,QWORD PTR [rsp+0x70]
   14003a598:	add    rsp,0x40
   14003a59c:	pop    r14
   14003a59e:	pop    rdi
   14003a59f:	pop    rsi
   14003a5a0:	ret    
   14003a5a1:	int3   
   14003a5a2:	int3   
   14003a5a3:	int3   
   14003a5a4:	sub    rsp,0x28
   14003a5a8:	test   rcx,rcx
   14003a5ab:	jne    0x14003a5c2
   14003a5ad:	call   0x140032c50
   14003a5b2:	mov    DWORD PTR [rax],0x16
   14003a5b8:	call   0x1400307d0
   14003a5bd:	or     eax,0xffffffff
   14003a5c0:	jmp    0x14003a5c5
   14003a5c2:	mov    eax,DWORD PTR [rcx+0x18]
   14003a5c5:	add    rsp,0x28
   14003a5c9:	ret    
   14003a5ca:	int3   
   14003a5cb:	int3   
   14003a5cc:	sub    DWORD PTR [rdx+0x10],0x1
   14003a5d0:	js     0x1400450f4
   14003a5d6:	mov    rax,QWORD PTR [rdx]
   14003a5d9:	mov    BYTE PTR [rax],cl
   14003a5db:	inc    QWORD PTR [rdx]
   14003a5de:	movzx  eax,cl
   14003a5e1:	ret    
   14003a5e2:	int3   
   14003a5e3:	int3   
   14003a5e4:	mov    rcx,QWORD PTR [rip+0x36a65]        # 0x140071050
   14003a5eb:	xor    eax,eax
   14003a5ed:	or     rcx,0x1
   14003a5f1:	cmp    QWORD PTR [rip+0x3c6b0],rcx        # 0x140076ca8
   14003a5f8:	sete   al
   14003a5fb:	ret    
   14003a5fc:	mov    QWORD PTR [rsp+0x8],rbx
   14003a601:	push   rdi
   14003a602:	sub    rsp,0x20
   14003a606:	mov    rbx,rcx
   14003a609:	call   0x14003a5a4
   14003a60e:	mov    ecx,eax
   14003a610:	call   0x1400452c8
   14003a615:	test   eax,eax
   14003a617:	je     0x14003a6be
   14003a61d:	mov    ecx,0x1
   14003a622:	call   0x140032b10
   14003a627:	cmp    rbx,rax
   14003a62a:	jne    0x14003a635
   14003a62c:	lea    rdi,[rip+0x3c67d]        # 0x140076cb0
   14003a633:	jmp    0x14003a64b
   14003a635:	mov    ecx,0x2
   14003a63a:	call   0x140032b10
   14003a63f:	cmp    rbx,rax
   14003a642:	jne    0x14003a6be
   14003a644:	lea    rdi,[rip+0x3c66d]        # 0x140076cb8
   14003a64b:	inc    DWORD PTR [rip+0x3c297]        # 0x1400768e8
   14003a651:	mov    eax,DWORD PTR [rbx+0x14]
   14003a654:	test   eax,0x4c0
   14003a659:	jne    0x14003a6be
   14003a65b:	lock or DWORD PTR [rbx+0x14],0x282
   14003a663:	mov    rax,QWORD PTR [rdi]
   14003a666:	test   rax,rax
   14003a669:	jne    0x14003a6a4
   14003a66b:	mov    ecx,0x1000
   14003a670:	call   0x140036600
   14003a675:	xor    ecx,ecx
   14003a677:	mov    QWORD PTR [rdi],rax
   14003a67a:	call   0x140038c70
   14003a67f:	mov    rax,QWORD PTR [rdi]
   14003a682:	test   rax,rax
   14003a685:	jne    0x14003a6a4
   14003a687:	lea    rcx,[rbx+0x1c]
   14003a68b:	mov    DWORD PTR [rbx+0x10],0x2
   14003a692:	mov    QWORD PTR [rbx+0x8],rcx
   14003a696:	mov    QWORD PTR [rbx],rcx
   14003a699:	mov    DWORD PTR [rbx+0x20],0x2
   14003a6a0:	mov    al,0x1
   14003a6a2:	jmp    0x14003a6c0
   14003a6a4:	mov    QWORD PTR [rbx+0x8],rax
   14003a6a8:	mov    rax,QWORD PTR [rdi]
   14003a6ab:	mov    QWORD PTR [rbx],rax
   14003a6ae:	mov    DWORD PTR [rbx+0x10],0x1000
   14003a6b5:	mov    DWORD PTR [rbx+0x20],0x1000
   14003a6bc:	jmp    0x14003a6a0
   14003a6be:	xor    al,al
   14003a6c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a6c5:	add    rsp,0x20
   14003a6c9:	pop    rdi
   14003a6ca:	ret    
   14003a6cb:	int3   
   14003a6cc:	test   cl,cl
   14003a6ce:	je     0x14003a704
   14003a6d0:	push   rbx
   14003a6d1:	sub    rsp,0x20
   14003a6d5:	mov    rbx,rdx
   14003a6d8:	mov    eax,DWORD PTR [rdx+0x14]
   14003a6db:	shr    eax,0x9
   14003a6de:	test   al,0x1
   14003a6e0:	je     0x14003a6ff
   14003a6e2:	mov    rcx,rdx
   14003a6e5:	call   0x140032700
   14003a6ea:	lock and DWORD PTR [rbx+0x14],0xfffffd7f
   14003a6f2:	and    DWORD PTR [rbx+0x20],0x0
   14003a6f6:	and    QWORD PTR [rbx+0x8],0x0
   14003a6fb:	and    QWORD PTR [rbx],0x0
   14003a6ff:	add    rsp,0x20
   14003a703:	pop    rbx
   14003a704:	ret    
   14003a705:	int3   
   14003a706:	int3   
   14003a707:	int3   
   14003a708:	mov    rax,rsp
   14003a70b:	mov    QWORD PTR [rax+0x8],rbx
   14003a70f:	mov    QWORD PTR [rax+0x10],rbp
   14003a713:	mov    QWORD PTR [rax+0x18],rsi
   14003a717:	mov    QWORD PTR [rax+0x20],rdi
   14003a71b:	push   r14
   14003a71d:	sub    rsp,0x90
   14003a724:	lea    rcx,[rax-0x78]
   14003a728:	call   QWORD PTR [rip+0x10b02]        # 0x14004b230
   14003a72e:	xor    r14d,r14d
   14003a731:	cmp    WORD PTR [rsp+0x62],r14w
   14003a737:	je     0x14003a7d5
   14003a73d:	mov    rax,QWORD PTR [rsp+0x68]
   14003a742:	test   rax,rax
   14003a745:	je     0x14003a7d5
   14003a74b:	movsxd rbx,DWORD PTR [rax]
   14003a74e:	lea    rsi,[rax+0x4]
   14003a752:	mov    edi,0x2000
   14003a757:	add    rbx,rsi
   14003a75a:	cmp    DWORD PTR [rax],edi
   14003a75c:	cmovl  edi,DWORD PTR [rax]
   14003a75f:	mov    ecx,edi
   14003a761:	call   0x14003fde0
   14003a766:	cmp    edi,DWORD PTR [rip+0x3c954]        # 0x1400770c0
   14003a76c:	cmovg  edi,DWORD PTR [rip+0x3c94d]        # 0x1400770c0
   14003a773:	test   edi,edi
   14003a775:	je     0x14003a7d5
   14003a777:	mov    ebp,r14d
   14003a77a:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14003a77e:	je     0x14003a7c5
   14003a780:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   14003a784:	je     0x14003a7c5
   14003a786:	test   BYTE PTR [rsi],0x1
   14003a789:	je     0x14003a7c5
   14003a78b:	test   BYTE PTR [rsi],0x8
   14003a78e:	jne    0x14003a79d
   14003a790:	mov    rcx,QWORD PTR [rbx]
   14003a793:	call   QWORD PTR [rip+0x10b77]        # 0x14004b310
   14003a799:	test   eax,eax
   14003a79b:	je     0x14003a7c5
   14003a79d:	mov    rcx,rbp
   14003a7a0:	lea    rdx,[rip+0x3c519]        # 0x140076cc0
   14003a7a7:	and    ecx,0x3f
   14003a7aa:	mov    rax,rbp
   14003a7ad:	sar    rax,0x6
   14003a7b1:	shl    rcx,0x6
   14003a7b5:	add    rcx,QWORD PTR [rdx+rax*8]
   14003a7b9:	mov    rax,QWORD PTR [rbx]
   14003a7bc:	mov    QWORD PTR [rcx+0x28],rax
   14003a7c0:	mov    al,BYTE PTR [rsi]
   14003a7c2:	mov    BYTE PTR [rcx+0x38],al
   14003a7c5:	inc    rbp
   14003a7c8:	inc    rsi
   14003a7cb:	add    rbx,0x8
   14003a7cf:	sub    rdi,0x1
   14003a7d3:	jne    0x14003a77a
   14003a7d5:	lea    r11,[rsp+0x90]
   14003a7dd:	mov    rbx,QWORD PTR [r11+0x10]
   14003a7e1:	mov    rbp,QWORD PTR [r11+0x18]
   14003a7e5:	mov    rsi,QWORD PTR [r11+0x20]
   14003a7e9:	mov    rdi,QWORD PTR [r11+0x28]
   14003a7ed:	mov    rsp,r11
   14003a7f0:	pop    r14
   14003a7f2:	ret    
   14003a7f3:	int3   
   14003a7f4:	mov    QWORD PTR [rsp+0x8],rbx
   14003a7f9:	mov    QWORD PTR [rsp+0x10],rsi
   14003a7fe:	mov    QWORD PTR [rsp+0x18],rdi
   14003a803:	push   r14
   14003a805:	sub    rsp,0x20
   14003a809:	xor    edi,edi
   14003a80b:	xor    r14d,r14d
   14003a80e:	movsxd rbx,edi
   14003a811:	lea    rcx,[rip+0x3c4a8]        # 0x140076cc0
   14003a818:	mov    rax,rbx
   14003a81b:	and    ebx,0x3f
   14003a81e:	sar    rax,0x6
   14003a822:	shl    rbx,0x6
   14003a826:	add    rbx,QWORD PTR [rcx+rax*8]
   14003a82a:	mov    rax,QWORD PTR [rbx+0x28]
   14003a82e:	add    rax,0x2
   14003a832:	cmp    rax,0x1
   14003a836:	jbe    0x14003a841
   14003a838:	or     BYTE PTR [rbx+0x38],0x80
   14003a83c:	jmp    0x14003a8ca
   14003a841:	mov    BYTE PTR [rbx+0x38],0x81
   14003a845:	mov    ecx,edi
   14003a847:	test   edi,edi
   14003a849:	je     0x14003a861
   14003a84b:	sub    ecx,0x1
   14003a84e:	je     0x14003a85a
   14003a850:	cmp    ecx,0x1
   14003a853:	mov    ecx,0xfffffff4
   14003a858:	jmp    0x14003a866
   14003a85a:	mov    ecx,0xfffffff5
   14003a85f:	jmp    0x14003a866
   14003a861:	mov    ecx,0xfffffff6
   14003a866:	call   QWORD PTR [rip+0x10a7c]        # 0x14004b2e8
   14003a86c:	mov    rsi,rax
   14003a86f:	lea    rcx,[rax+0x1]
   14003a873:	cmp    rcx,0x1
   14003a877:	jbe    0x14003a884
   14003a879:	mov    rcx,rax
   14003a87c:	call   QWORD PTR [rip+0x10a8e]        # 0x14004b310
   14003a882:	jmp    0x14003a886
   14003a884:	xor    eax,eax
   14003a886:	test   eax,eax
   14003a888:	je     0x14003a8a7
   14003a88a:	movzx  ecx,al
   14003a88d:	mov    QWORD PTR [rbx+0x28],rsi
   14003a891:	cmp    ecx,0x2
   14003a894:	jne    0x14003a89c
   14003a896:	or     BYTE PTR [rbx+0x38],0x40
   14003a89a:	jmp    0x14003a8ca
   14003a89c:	cmp    ecx,0x3
   14003a89f:	jne    0x14003a8ca
   14003a8a1:	or     BYTE PTR [rbx+0x38],0x8
   14003a8a5:	jmp    0x14003a8ca
   14003a8a7:	or     BYTE PTR [rbx+0x38],0x40
   14003a8ab:	mov    QWORD PTR [rbx+0x28],0xfffffffffffffffe
   14003a8b3:	mov    rax,QWORD PTR [rip+0x3c026]        # 0x1400768e0
   14003a8ba:	test   rax,rax
   14003a8bd:	je     0x14003a8ca
   14003a8bf:	mov    rax,QWORD PTR [r14+rax*1]
   14003a8c3:	mov    DWORD PTR [rax+0x18],0xfffffffe
   14003a8ca:	inc    edi
   14003a8cc:	add    r14,0x8
   14003a8d0:	cmp    edi,0x3
   14003a8d3:	jne    0x14003a80e
   14003a8d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a8de:	mov    rsi,QWORD PTR [rsp+0x38]
   14003a8e3:	mov    rdi,QWORD PTR [rsp+0x40]
   14003a8e8:	add    rsp,0x20
   14003a8ec:	pop    r14
   14003a8ee:	ret    
   14003a8ef:	int3   
   14003a8f0:	rex push rbx
   14003a8f2:	sub    rsp,0x20
   14003a8f6:	mov    ecx,0x7
   14003a8fb:	call   0x140035a44
   14003a900:	xor    ebx,ebx
   14003a902:	xor    ecx,ecx
   14003a904:	call   0x14003fde0
   14003a909:	test   eax,eax
   14003a90b:	jne    0x14003a919
   14003a90d:	call   0x14003a708
   14003a912:	call   0x14003a7f4
   14003a917:	mov    bl,0x1
   14003a919:	mov    ecx,0x7
   14003a91e:	call   0x140035a98
   14003a923:	mov    al,bl
   14003a925:	add    rsp,0x20
   14003a929:	pop    rbx
   14003a92a:	ret    
   14003a92b:	int3   
   14003a92c:	mov    QWORD PTR [rsp+0x8],rbx
   14003a931:	push   rdi
   14003a932:	sub    rsp,0x20
   14003a936:	xor    ebx,ebx
   14003a938:	lea    rdi,[rip+0x3c381]        # 0x140076cc0
   14003a93f:	mov    rcx,QWORD PTR [rbx+rdi*1]
   14003a943:	test   rcx,rcx
   14003a946:	je     0x14003a952
   14003a948:	call   0x14003fd90
   14003a94d:	and    QWORD PTR [rbx+rdi*1],0x0
   14003a952:	add    rbx,0x8
   14003a956:	cmp    rbx,0x400
   14003a95d:	jb     0x14003a938
   14003a95f:	mov    al,0x1
   14003a961:	mov    rbx,QWORD PTR [rsp+0x30]
   14003a966:	add    rsp,0x20
   14003a96a:	pop    rdi
   14003a96b:	ret    
   14003a96c:	movsd  QWORD PTR [rsp+0x8],xmm0
   14003a972:	mov    rax,QWORD PTR [rsp+0x8]
   14003a977:	shr    rax,0x30
   14003a97b:	and    eax,0x8000
   14003a980:	ret    
   14003a981:	int3   
   14003a982:	int3   
   14003a983:	int3   
   14003a984:	mov    eax,ecx
   14003a986:	test   cl,0x20
   14003a989:	je     0x14003a992
   14003a98b:	mov    ecx,0x5
   14003a990:	jmp    0x14003a9c4
   14003a992:	test   al,0x8
   14003a994:	je     0x14003a99d
   14003a996:	mov    ecx,0x1
   14003a99b:	jmp    0x14003a9c4
   14003a99d:	test   al,0x4
   14003a99f:	je     0x14003a9a8
   14003a9a1:	mov    ecx,0x2
   14003a9a6:	jmp    0x14003a9c4
   14003a9a8:	mov    ecx,0x1
   14003a9ad:	test   cl,al
   14003a9af:	je     0x14003a9b8
   14003a9b1:	mov    ecx,0x3
   14003a9b6:	jmp    0x14003a9c4
   14003a9b8:	movzx  eax,al
   14003a9bb:	mov    ecx,0x2
   14003a9c0:	and    ecx,eax
   14003a9c2:	add    ecx,ecx
   14003a9c4:	mov    eax,ecx
   14003a9c6:	ret    
   14003a9c7:	int3   
   14003a9c8:	mov    rax,rsp
   14003a9cb:	mov    QWORD PTR [rax+0x10],rbx
   14003a9cf:	push   rbp
   14003a9d0:	push   rsi
   14003a9d1:	push   rdi
   14003a9d2:	lea    rbp,[rax-0x57]
   14003a9d6:	sub    rsp,0xe0
   14003a9dd:	movaps XMMWORD PTR [rax-0x28],xmm6
   14003a9e1:	mov    rax,QWORD PTR [rip+0x36668]        # 0x140071050
   14003a9e8:	xor    rax,rsp
   14003a9eb:	mov    QWORD PTR [rbp+0x1f],rax
   14003a9ef:	mov    rdi,QWORD PTR [rbp+0x7f]
   14003a9f3:	mov    esi,edx
   14003a9f5:	mov    r8,rdi
   14003a9f8:	movsd  QWORD PTR [rbp-0x59],xmm2
   14003a9fd:	lea    rdx,[rbp-0x61]
   14003aa01:	movsd  QWORD PTR [rbp-0x61],xmm3
   14003aa06:	movaps xmm6,xmm2
   14003aa09:	mov    ebx,ecx
   14003aa0b:	call   0x14003aabc
   14003aa10:	test   eax,eax
   14003aa12:	jne    0x14003aa45
   14003aa14:	and    DWORD PTR [rsp+0x30],eax
   14003aa18:	lea    rdx,[rbp+0x7f]
   14003aa1c:	and    DWORD PTR [rbp-0x11],0xfffffffe
   14003aa20:	lea    rax,[rbp-0x61]
   14003aa24:	mov    QWORD PTR [rsp+0x28],rax
   14003aa29:	lea    rcx,[rbp-0x51]
   14003aa2d:	lea    rax,[rbp-0x59]
   14003aa31:	mov    r9d,esi
   14003aa34:	mov    r8d,ebx
   14003aa37:	mov    QWORD PTR [rsp+0x20],rax
   14003aa3c:	call   0x14003ad4c
   14003aa41:	mov    rdi,QWORD PTR [rbp+0x7f]
   14003aa45:	mov    ecx,ebx
   14003aa47:	call   0x14003a984
   14003aa4c:	mov    ebx,eax
   14003aa4e:	call   0x140034374
   14003aa53:	test   al,al
   14003aa55:	je     0x14003aa7c
   14003aa57:	test   ebx,ebx
   14003aa59:	je     0x14003aa7c
   14003aa5b:	movsd  xmm0,QWORD PTR [rbp-0x61]
   14003aa60:	xorps  xmm3,xmm3
   14003aa63:	mov    QWORD PTR [rsp+0x28],rdi
   14003aa68:	movaps xmm2,xmm6
   14003aa6b:	mov    edx,esi
   14003aa6d:	movsd  QWORD PTR [rsp+0x20],xmm0
   14003aa73:	mov    ecx,ebx
   14003aa75:	call   0x14003b0b0
   14003aa7a:	jmp    0x14003aa95
   14003aa7c:	mov    ecx,ebx
   14003aa7e:	call   0x14003b080
   14003aa83:	mov    edx,0xffc0
   14003aa88:	mov    rcx,rdi
   14003aa8b:	call   0x14003b34c
   14003aa90:	movsd  xmm0,QWORD PTR [rbp-0x61]
   14003aa95:	mov    rcx,QWORD PTR [rbp+0x1f]
   14003aa99:	xor    rcx,rsp
   14003aa9c:	call   0x140025df0
   14003aaa1:	lea    r11,[rsp+0xe0]
   14003aaa9:	mov    rbx,QWORD PTR [r11+0x28]
   14003aaad:	movaps xmm6,XMMWORD PTR [r11-0x10]
   14003aab2:	mov    rsp,r11
   14003aab5:	pop    rdi
   14003aab6:	pop    rsi
   14003aab7:	pop    rbp
   14003aab8:	ret    
   14003aab9:	int3   
   14003aaba:	int3   
   14003aabb:	int3   
   14003aabc:	mov    QWORD PTR [rsp+0x10],rbx
   14003aac1:	push   rbp
   14003aac2:	push   rsi
   14003aac3:	push   rdi
   14003aac4:	push   r12
   14003aac6:	push   r13
   14003aac8:	push   r14
   14003aaca:	push   r15
   14003aacc:	sub    rsp,0x30
   14003aad0:	xor    r14d,r14d
   14003aad3:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14003aad8:	mov    ebx,ecx
   14003aada:	mov    r15,r8
   14003aadd:	and    ebx,0x1f
   14003aae0:	mov    rsi,rdx
   14003aae3:	mov    r12d,ecx
   14003aae6:	lea    r13d,[r14+0x10]
   14003aaea:	test   cl,0x8
   14003aaed:	je     0x14003ab05
   14003aaef:	test   r15b,r15b
   14003aaf2:	jns    0x14003ab05
   14003aaf4:	lea    ecx,[r14+0x1]
   14003aaf8:	call   0x14003b3c8
   14003aafd:	and    ebx,0xfffffff7
   14003ab00:	jmp    0x14003ace5
   14003ab05:	mov    ecx,0x4
   14003ab0a:	test   cl,r12b
   14003ab0d:	je     0x14003ab23
   14003ab0f:	bt     r8,0x9
   14003ab14:	jae    0x14003ab23
   14003ab16:	call   0x14003b3c8
   14003ab1b:	and    ebx,0xfffffffb
   14003ab1e:	jmp    0x14003ace5
   14003ab23:	mov    edi,0x1
   14003ab28:	test   dil,r12b
   14003ab2b:	je     0x14003abe1
   14003ab31:	bt     r8,0xa
   14003ab36:	jae    0x14003abe1
   14003ab3c:	lea    ecx,[rdi+0x7]
   14003ab3f:	call   0x14003b3c8
   14003ab44:	mov    rax,r15
   14003ab47:	mov    ecx,0x6000
   14003ab4c:	and    rax,rcx
   14003ab4f:	je     0x14003abae
   14003ab51:	cmp    rax,0x2000
   14003ab57:	je     0x14003ab96
   14003ab59:	cmp    rax,0x4000
   14003ab5f:	je     0x14003ab7e
   14003ab61:	cmp    rax,rcx
   14003ab64:	jne    0x14003abd9
   14003ab66:	movsd  xmm0,QWORD PTR [rsi]
   14003ab6a:	comisd xmm0,QWORD PTR [rip+0x2994e]        # 0x1400644c0
   14003ab72:	movsd  xmm0,QWORD PTR [rip+0x1cf4e]        # 0x140057ac8
   14003ab7a:	ja     0x14003abd5
   14003ab7c:	jmp    0x14003abce
   14003ab7e:	movsd  xmm0,QWORD PTR [rsi]
   14003ab82:	comisd xmm0,QWORD PTR [rip+0x29936]        # 0x1400644c0
   14003ab8a:	ja     0x14003abbc
   14003ab8c:	movsd  xmm0,QWORD PTR [rip+0x1cf34]        # 0x140057ac8
   14003ab94:	jmp    0x14003abce
   14003ab96:	movsd  xmm0,QWORD PTR [rsi]
   14003ab9a:	comisd xmm0,QWORD PTR [rip+0x2991e]        # 0x1400644c0
   14003aba2:	jbe    0x14003abc6
   14003aba4:	movsd  xmm0,QWORD PTR [rip+0x1cf1c]        # 0x140057ac8
   14003abac:	jmp    0x14003abd5
   14003abae:	movsd  xmm0,QWORD PTR [rsi]
   14003abb2:	comisd xmm0,QWORD PTR [rip+0x29906]        # 0x1400644c0
   14003abba:	jbe    0x14003abc6
   14003abbc:	movsd  xmm0,QWORD PTR [rip+0x1cefc]        # 0x140057ac0
   14003abc4:	jmp    0x14003abd5
   14003abc6:	movsd  xmm0,QWORD PTR [rip+0x1cef2]        # 0x140057ac0
   14003abce:	xorps  xmm0,XMMWORD PTR [rip+0x2993b]        # 0x140064510
   14003abd5:	movsd  QWORD PTR [rsi],xmm0
   14003abd9:	and    ebx,0xfffffffe
   14003abdc:	jmp    0x14003ace5
   14003abe1:	test   r12b,0x2
   14003abe5:	je     0x14003ace5
   14003abeb:	bt     r8,0xb
   14003abf0:	jae    0x14003ace5
   14003abf6:	movsd  xmm0,QWORD PTR [rdx]
   14003abfa:	mov    al,r12b
   14003abfd:	and    al,r13b
   14003ac00:	mov    ebp,r14d
   14003ac03:	xorps  xmm6,xmm6
   14003ac06:	cmovne ebp,edi
   14003ac09:	ucomisd xmm0,xmm6
   14003ac0d:	jp     0x14003ac18
   14003ac0f:	jne    0x14003ac18
   14003ac11:	mov    ebp,edi
   14003ac13:	jmp    0x14003acd6
   14003ac18:	lea    rdx,[rsp+0x70]
   14003ac1d:	call   0x14003b184
   14003ac22:	mov    ecx,DWORD PTR [rsp+0x70]
   14003ac26:	add    ecx,0xfffffa00
   14003ac2c:	movsd  QWORD PTR [rsp+0x88],xmm0
   14003ac35:	cmp    ecx,0xfffffbce
   14003ac3b:	jge    0x14003ac48
   14003ac3d:	mulsd  xmm0,xmm6
   14003ac41:	mov    ebp,edi
   14003ac43:	jmp    0x14003acd2
   14003ac48:	mov    rax,QWORD PTR [rsp+0x88]
   14003ac50:	mov    r8d,r14d
   14003ac53:	comisd xmm6,xmm0
   14003ac57:	seta   r8b
   14003ac5b:	shr    rax,0x30
   14003ac5f:	and    ax,0xf
   14003ac63:	or     ax,r13w
   14003ac67:	mov    WORD PTR [rsp+0x8e],ax
   14003ac6f:	cmp    ecx,0xfffffc03
   14003ac75:	jge    0x14003acbd
   14003ac77:	mov    eax,DWORD PTR [rsp+0x88]
   14003ac7e:	mov    edx,0xfffffc03
   14003ac83:	sub    edx,ecx
   14003ac85:	mov    ecx,DWORD PTR [rsp+0x8c]
   14003ac8c:	test   dil,al
   14003ac8f:	je     0x14003ac96
   14003ac91:	test   ebp,ebp
   14003ac93:	cmove  ebp,edi
   14003ac96:	shr    eax,1
   14003ac98:	mov    DWORD PTR [rsp+0x88],eax
   14003ac9f:	test   dil,cl
   14003aca2:	je     0x14003acaf
   14003aca4:	bts    eax,0x1f
   14003aca8:	mov    DWORD PTR [rsp+0x88],eax
   14003acaf:	shr    ecx,1
   14003acb1:	sub    rdx,rdi
   14003acb4:	jne    0x14003ac8c
   14003acb6:	mov    DWORD PTR [rsp+0x8c],ecx
   14003acbd:	movsd  xmm0,QWORD PTR [rsp+0x88]
   14003acc6:	test   r8d,r8d
   14003acc9:	je     0x14003acd2
   14003accb:	xorps  xmm0,XMMWORD PTR [rip+0x2983e]        # 0x140064510
   14003acd2:	movsd  QWORD PTR [rsi],xmm0
   14003acd6:	test   ebp,ebp
   14003acd8:	je     0x14003ace2
   14003acda:	mov    rcx,r13
   14003acdd:	call   0x14003b3c8
   14003ace2:	and    ebx,0xfffffffd
   14003ace5:	test   r13b,r12b
   14003ace8:	je     0x14003acfe
   14003acea:	bt     r15,0xc
   14003acef:	jae    0x14003acfe
   14003acf1:	mov    ecx,0x20
   14003acf6:	call   0x14003b3c8
   14003acfb:	and    ebx,0xffffffef
   14003acfe:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14003ad03:	test   ebx,ebx
   14003ad05:	mov    rbx,QWORD PTR [rsp+0x78]
   14003ad0a:	sete   r14b
   14003ad0e:	mov    eax,r14d
   14003ad11:	add    rsp,0x30
   14003ad15:	pop    r15
   14003ad17:	pop    r14
   14003ad19:	pop    r13
   14003ad1b:	pop    r12
   14003ad1d:	pop    rdi
   14003ad1e:	pop    rsi
   14003ad1f:	pop    rbp
   14003ad20:	ret    
   14003ad21:	int3   
   14003ad22:	int3   
   14003ad23:	int3   
   14003ad24:	sub    rsp,0x48
   14003ad28:	and    DWORD PTR [rsp+0x30],0x0
   14003ad2d:	mov    rax,QWORD PTR [rsp+0x78]
   14003ad32:	mov    QWORD PTR [rsp+0x28],rax
   14003ad37:	mov    rax,QWORD PTR [rsp+0x70]
   14003ad3c:	mov    QWORD PTR [rsp+0x20],rax
   14003ad41:	call   0x14003ad4c
   14003ad46:	add    rsp,0x48
   14003ad4a:	ret    
   14003ad4b:	int3   
   14003ad4c:	mov    rax,rsp
   14003ad4f:	mov    QWORD PTR [rax+0x10],rbx
   14003ad53:	mov    QWORD PTR [rax+0x18],rsi
   14003ad57:	mov    QWORD PTR [rax+0x20],rdi
   14003ad5b:	mov    QWORD PTR [rax+0x8],rcx
   14003ad5f:	push   rbp
   14003ad60:	mov    rbp,rsp
   14003ad63:	sub    rsp,0x20
   14003ad67:	mov    rbx,rdx
   14003ad6a:	mov    esi,r9d
   14003ad6d:	xor    edx,edx
   14003ad6f:	mov    edi,0xc000000d
   14003ad74:	mov    DWORD PTR [rcx+0x4],edx
   14003ad77:	mov    rax,QWORD PTR [rbp+0x10]
   14003ad7b:	mov    DWORD PTR [rax+0x8],edx
   14003ad7e:	mov    rax,QWORD PTR [rbp+0x10]
   14003ad82:	mov    DWORD PTR [rax+0xc],edx
   14003ad85:	test   r8b,0x10
   14003ad89:	je     0x14003ad98
   14003ad8b:	mov    rax,QWORD PTR [rbp+0x10]
   14003ad8f:	mov    edi,0xc000008f
   14003ad94:	or     DWORD PTR [rax+0x4],0x1
   14003ad98:	test   r8b,0x2
   14003ad9c:	je     0x14003adab
   14003ad9e:	mov    rax,QWORD PTR [rbp+0x10]
   14003ada2:	mov    edi,0xc0000093
   14003ada7:	or     DWORD PTR [rax+0x4],0x2
   14003adab:	test   r8b,0x1
   14003adaf:	je     0x14003adbe
   14003adb1:	mov    rax,QWORD PTR [rbp+0x10]
   14003adb5:	mov    edi,0xc0000091
   14003adba:	or     DWORD PTR [rax+0x4],0x4
   14003adbe:	test   r8b,0x4
   14003adc2:	je     0x14003add1
   14003adc4:	mov    rax,QWORD PTR [rbp+0x10]
   14003adc8:	mov    edi,0xc000008e
   14003adcd:	or     DWORD PTR [rax+0x4],0x8
   14003add1:	test   r8b,0x8
   14003add5:	je     0x14003ade4
   14003add7:	mov    rax,QWORD PTR [rbp+0x10]
   14003addb:	mov    edi,0xc0000090
   14003ade0:	or     DWORD PTR [rax+0x4],0x10
   14003ade4:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ade8:	mov    rax,QWORD PTR [rbx]
   14003adeb:	shr    rax,0x7
   14003adef:	shl    eax,0x4
   14003adf2:	not    eax
   14003adf4:	xor    eax,DWORD PTR [rcx+0x8]
   14003adf7:	and    eax,0x10
   14003adfa:	xor    DWORD PTR [rcx+0x8],eax
   14003adfd:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ae01:	mov    rax,QWORD PTR [rbx]
   14003ae04:	shr    rax,0x9
   14003ae08:	shl    eax,0x3
   14003ae0b:	not    eax
   14003ae0d:	xor    eax,DWORD PTR [rcx+0x8]
   14003ae10:	and    eax,0x8
   14003ae13:	xor    DWORD PTR [rcx+0x8],eax
   14003ae16:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ae1a:	mov    rax,QWORD PTR [rbx]
   14003ae1d:	shr    rax,0xa
   14003ae21:	shl    eax,0x2
   14003ae24:	not    eax
   14003ae26:	xor    eax,DWORD PTR [rcx+0x8]
   14003ae29:	and    eax,0x4
   14003ae2c:	xor    DWORD PTR [rcx+0x8],eax
   14003ae2f:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ae33:	mov    rax,QWORD PTR [rbx]
   14003ae36:	shr    rax,0xb
   14003ae3a:	add    eax,eax
   14003ae3c:	not    eax
   14003ae3e:	xor    eax,DWORD PTR [rcx+0x8]
   14003ae41:	and    eax,0x2
   14003ae44:	xor    DWORD PTR [rcx+0x8],eax
   14003ae47:	mov    eax,DWORD PTR [rbx]
   14003ae49:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ae4d:	shr    rax,0xc
   14003ae51:	not    eax
   14003ae53:	xor    eax,DWORD PTR [rcx+0x8]
   14003ae56:	and    eax,0x1
   14003ae59:	xor    DWORD PTR [rcx+0x8],eax
   14003ae5c:	call   0x14003b3e8
   14003ae61:	mov    rdx,rax
   14003ae64:	test   al,0x1
   14003ae66:	je     0x14003ae70
   14003ae68:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ae6c:	or     DWORD PTR [rcx+0xc],0x10
   14003ae70:	test   al,0x4
   14003ae72:	je     0x14003ae7c
   14003ae74:	mov    rcx,QWORD PTR [rbp+0x10]
   14003ae78:	or     DWORD PTR [rcx+0xc],0x8
   14003ae7c:	test   al,0x8
   14003ae7e:	je     0x14003ae88
   14003ae80:	mov    rax,QWORD PTR [rbp+0x10]
   14003ae84:	or     DWORD PTR [rax+0xc],0x4
   14003ae88:	test   dl,0x10
   14003ae8b:	je     0x14003ae95
   14003ae8d:	mov    rax,QWORD PTR [rbp+0x10]
   14003ae91:	or     DWORD PTR [rax+0xc],0x2
   14003ae95:	test   dl,0x20
   14003ae98:	je     0x14003aea2
   14003ae9a:	mov    rax,QWORD PTR [rbp+0x10]
   14003ae9e:	or     DWORD PTR [rax+0xc],0x1
   14003aea2:	mov    eax,DWORD PTR [rbx]
   14003aea4:	mov    ecx,0x6000
   14003aea9:	and    rax,rcx
   14003aeac:	je     0x14003aeec
   14003aeae:	cmp    rax,0x2000
   14003aeb4:	je     0x14003aedc
   14003aeb6:	cmp    rax,0x4000
   14003aebc:	je     0x14003aecc
   14003aebe:	cmp    rax,rcx
   14003aec1:	jne    0x14003aef3
   14003aec3:	mov    rax,QWORD PTR [rbp+0x10]
   14003aec7:	or     DWORD PTR [rax],0x3
   14003aeca:	jmp    0x14003aef3
   14003aecc:	mov    rax,QWORD PTR [rbp+0x10]
   14003aed0:	and    DWORD PTR [rax],0xfffffffe
   14003aed3:	mov    rax,QWORD PTR [rbp+0x10]
   14003aed7:	or     DWORD PTR [rax],0x2
   14003aeda:	jmp    0x14003aef3
   14003aedc:	mov    rax,QWORD PTR [rbp+0x10]
   14003aee0:	and    DWORD PTR [rax],0xfffffffd
   14003aee3:	mov    rax,QWORD PTR [rbp+0x10]
   14003aee7:	or     DWORD PTR [rax],0x1
   14003aeea:	jmp    0x14003aef3
   14003aeec:	mov    rax,QWORD PTR [rbp+0x10]
   14003aef0:	and    DWORD PTR [rax],0xfffffffc
   14003aef3:	mov    rax,QWORD PTR [rbp+0x10]
   14003aef7:	and    esi,0xfff
   14003aefd:	shl    esi,0x5
   14003af00:	and    DWORD PTR [rax],0xfffe001f
   14003af06:	mov    rax,QWORD PTR [rbp+0x10]
   14003af0a:	or     DWORD PTR [rax],esi
   14003af0c:	mov    rax,QWORD PTR [rbp+0x10]
   14003af10:	mov    rsi,QWORD PTR [rbp+0x38]
   14003af14:	or     DWORD PTR [rax+0x20],0x1
   14003af18:	cmp    DWORD PTR [rbp+0x40],0x0
   14003af1c:	je     0x14003af51
   14003af1e:	mov    rax,QWORD PTR [rbp+0x10]
   14003af22:	mov    edx,0xffffffe1
   14003af27:	and    DWORD PTR [rax+0x20],edx
   14003af2a:	mov    rax,QWORD PTR [rbp+0x30]
   14003af2e:	mov    ecx,DWORD PTR [rax]
   14003af30:	mov    rax,QWORD PTR [rbp+0x10]
   14003af34:	mov    DWORD PTR [rax+0x10],ecx
   14003af37:	mov    rax,QWORD PTR [rbp+0x10]
   14003af3b:	or     DWORD PTR [rax+0x60],0x1
   14003af3f:	mov    rax,QWORD PTR [rbp+0x10]
   14003af43:	and    DWORD PTR [rax+0x60],edx
   14003af46:	mov    rax,QWORD PTR [rbp+0x10]
   14003af4a:	mov    ecx,DWORD PTR [rsi]
   14003af4c:	mov    DWORD PTR [rax+0x50],ecx
   14003af4f:	jmp    0x14003af99
   14003af51:	mov    rcx,QWORD PTR [rbp+0x10]
   14003af55:	mov    r8d,0xffffffe3
   14003af5b:	mov    eax,DWORD PTR [rcx+0x20]
   14003af5e:	and    eax,r8d
   14003af61:	or     eax,0x2
   14003af64:	mov    DWORD PTR [rcx+0x20],eax
   14003af67:	mov    rax,QWORD PTR [rbp+0x30]
   14003af6b:	mov    rcx,QWORD PTR [rax]
   14003af6e:	mov    rax,QWORD PTR [rbp+0x10]
   14003af72:	mov    QWORD PTR [rax+0x10],rcx
   14003af76:	mov    rax,QWORD PTR [rbp+0x10]
   14003af7a:	or     DWORD PTR [rax+0x60],0x1
   14003af7e:	mov    rdx,QWORD PTR [rbp+0x10]
   14003af82:	mov    eax,DWORD PTR [rdx+0x60]
   14003af85:	and    eax,r8d
   14003af88:	or     eax,0x2
   14003af8b:	mov    DWORD PTR [rdx+0x60],eax
   14003af8e:	mov    rax,QWORD PTR [rbp+0x10]
   14003af92:	mov    rdx,QWORD PTR [rsi]
   14003af95:	mov    QWORD PTR [rax+0x50],rdx
   14003af99:	call   0x14003b32c
   14003af9e:	xor    edx,edx
   14003afa0:	lea    r9,[rbp+0x10]
   14003afa4:	mov    ecx,edi
   14003afa6:	lea    r8d,[rdx+0x1]
   14003afaa:	call   QWORD PTR [rip+0x10310]        # 0x14004b2c0
   14003afb0:	mov    rcx,QWORD PTR [rbp+0x10]
   14003afb4:	test   BYTE PTR [rcx+0x8],0x10
   14003afb8:	je     0x14003afbf
   14003afba:	btr    QWORD PTR [rbx],0x7
   14003afbf:	test   BYTE PTR [rcx+0x8],0x8
   14003afc3:	je     0x14003afca
   14003afc5:	btr    QWORD PTR [rbx],0x9
   14003afca:	test   BYTE PTR [rcx+0x8],0x4
   14003afce:	je     0x14003afd5
   14003afd0:	btr    QWORD PTR [rbx],0xa
   14003afd5:	test   BYTE PTR [rcx+0x8],0x2
   14003afd9:	je     0x14003afe0
   14003afdb:	btr    QWORD PTR [rbx],0xb
   14003afe0:	test   BYTE PTR [rcx+0x8],0x1
   14003afe4:	je     0x14003afeb
   14003afe6:	btr    QWORD PTR [rbx],0xc
   14003afeb:	mov    eax,DWORD PTR [rcx]
   14003afed:	and    eax,0x3
   14003aff0:	je     0x14003b022
   14003aff2:	sub    eax,0x1
   14003aff5:	je     0x14003b016
   14003aff7:	sub    eax,0x1
   14003affa:	je     0x14003b00a
   14003affc:	cmp    eax,0x1
   14003afff:	jne    0x14003b029
   14003b001:	or     QWORD PTR [rbx],0x6000
   14003b008:	jmp    0x14003b029
   14003b00a:	btr    QWORD PTR [rbx],0xd
   14003b00f:	bts    QWORD PTR [rbx],0xe
   14003b014:	jmp    0x14003b029
   14003b016:	btr    QWORD PTR [rbx],0xe
   14003b01b:	bts    QWORD PTR [rbx],0xd
   14003b020:	jmp    0x14003b029
   14003b022:	and    QWORD PTR [rbx],0xffffffffffff9fff
   14003b029:	cmp    DWORD PTR [rbp+0x40],0x0
   14003b02d:	je     0x14003b036
   14003b02f:	mov    eax,DWORD PTR [rcx+0x50]
   14003b032:	mov    DWORD PTR [rsi],eax
   14003b034:	jmp    0x14003b03d
   14003b036:	mov    rax,QWORD PTR [rcx+0x50]
   14003b03a:	mov    QWORD PTR [rsi],rax
   14003b03d:	mov    rbx,QWORD PTR [rsp+0x38]
   14003b042:	mov    rsi,QWORD PTR [rsp+0x40]
   14003b047:	mov    rdi,QWORD PTR [rsp+0x48]
   14003b04c:	add    rsp,0x20
   14003b050:	pop    rbp
   14003b051:	ret    
   14003b052:	int3   
   14003b053:	int3   
   14003b054:	sub    rsp,0x48
   14003b058:	mov    rax,QWORD PTR [rsp+0x78]
   14003b05d:	mov    DWORD PTR [rsp+0x30],0x1
   14003b065:	mov    QWORD PTR [rsp+0x28],rax
   14003b06a:	mov    rax,QWORD PTR [rsp+0x70]
   14003b06f:	mov    QWORD PTR [rsp+0x20],rax
   14003b074:	call   0x14003ad4c
   14003b079:	add    rsp,0x48
   14003b07d:	ret    
   14003b07e:	int3   
   14003b07f:	int3   
   14003b080:	sub    rsp,0x28
   14003b084:	cmp    ecx,0x1
   14003b087:	je     0x14003b09e
   14003b089:	lea    eax,[rcx-0x2]
   14003b08c:	cmp    eax,0x1
   14003b08f:	ja     0x14003b0a9
   14003b091:	call   0x140032c50
   14003b096:	mov    DWORD PTR [rax],0x22
   14003b09c:	jmp    0x14003b0a9
   14003b09e:	call   0x140032c50
   14003b0a3:	mov    DWORD PTR [rax],0x21
   14003b0a9:	add    rsp,0x28
   14003b0ad:	ret    
   14003b0ae:	int3   
   14003b0af:	int3   
   14003b0b0:	movsd  QWORD PTR [rsp+0x20],xmm3
   14003b0b6:	movsd  QWORD PTR [rsp+0x18],xmm2
   14003b0bc:	push   rbx
   14003b0bd:	sub    rsp,0x50
   14003b0c1:	lea    r9,[rip+0x1c758]        # 0x140057820
   14003b0c8:	mov    ebx,ecx
   14003b0ca:	mov    rax,r9
   14003b0cd:	xor    r8d,r8d
   14003b0d0:	cmp    DWORD PTR [rax],edx
   14003b0d2:	je     0x14003b0eb
   14003b0d4:	inc    r8d
   14003b0d7:	lea    rcx,[rip+0x1c912]        # 0x1400579f0
   14003b0de:	add    rax,0x10
   14003b0e2:	cmp    rax,rcx
   14003b0e5:	jl     0x14003b0d0
   14003b0e7:	xor    eax,eax
   14003b0e9:	jmp    0x14003b0f6
   14003b0eb:	movsxd rax,r8d
   14003b0ee:	add    rax,rax
   14003b0f1:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   14003b0f6:	mov    rcx,QWORD PTR [rsp+0x88]
   14003b0fe:	mov    edx,0xffc0
   14003b103:	mov    QWORD PTR [rsp+0x28],rax
   14003b108:	test   rax,rax
   14003b10b:	je     0x14003b169
   14003b10d:	mov    eax,DWORD PTR [rsp+0x70]
   14003b111:	mov    DWORD PTR [rsp+0x30],eax
   14003b115:	mov    eax,DWORD PTR [rsp+0x74]
   14003b119:	mov    DWORD PTR [rsp+0x34],eax
   14003b11d:	mov    eax,DWORD PTR [rsp+0x78]
   14003b121:	mov    DWORD PTR [rsp+0x38],eax
   14003b125:	mov    eax,DWORD PTR [rsp+0x7c]
   14003b129:	mov    DWORD PTR [rsp+0x3c],eax
   14003b12d:	mov    eax,DWORD PTR [rsp+0x80]
   14003b134:	mov    DWORD PTR [rsp+0x40],eax
   14003b138:	mov    eax,DWORD PTR [rsp+0x84]
   14003b13f:	mov    DWORD PTR [rsp+0x44],eax
   14003b143:	mov    DWORD PTR [rsp+0x20],ebx
   14003b147:	call   0x14003b34c
   14003b14c:	lea    rcx,[rsp+0x20]
   14003b151:	call   0x14003439c
   14003b156:	test   eax,eax
   14003b158:	jne    0x14003b161
   14003b15a:	mov    ecx,ebx
   14003b15c:	call   0x14003b080
   14003b161:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14003b167:	jmp    0x14003b17e
   14003b169:	call   0x14003b34c
   14003b16e:	mov    ecx,ebx
   14003b170:	call   0x14003b080
   14003b175:	movsd  xmm0,QWORD PTR [rsp+0x80]
   14003b17e:	add    rsp,0x50
   14003b182:	pop    rbx
   14003b183:	ret    
   14003b184:	movaps xmm1,xmm0
   14003b187:	movsd  QWORD PTR [rsp+0x8],xmm0
   14003b18d:	xorps  xmm0,xmm0
   14003b190:	mov    r10,rdx
   14003b193:	ucomisd xmm1,xmm0
   14003b197:	jp     0x14003b1a2
   14003b199:	jne    0x14003b1a2
   14003b19b:	xor    ecx,ecx
   14003b19d:	jmp    0x14003b2b4
   14003b1a2:	mov    rax,QWORD PTR [rsp+0x8]
   14003b1a7:	mov    ecx,0x7ff0
   14003b1ac:	mov    r8,rax
   14003b1af:	shr    r8,0x30
   14003b1b3:	test   cx,r8w
   14003b1b7:	jne    0x14003b26a
   14003b1bd:	mov    edx,DWORD PTR [rsp+0x8]
   14003b1c1:	shr    rax,0x20
   14003b1c5:	test   eax,0xfffff
   14003b1ca:	jne    0x14003b1d4
   14003b1cc:	test   edx,edx
   14003b1ce:	je     0x14003b26a
   14003b1d4:	xor    r9d,r9d
   14003b1d7:	mov    ecx,0xfffffc03
   14003b1dc:	comisd xmm0,xmm1
   14003b1e0:	seta   r9b
   14003b1e4:	test   r8b,0x10
   14003b1e8:	jne    0x14003b20e
   14003b1ea:	mov    eax,DWORD PTR [rsp+0xc]
   14003b1ee:	add    eax,eax
   14003b1f0:	mov    DWORD PTR [rsp+0xc],eax
   14003b1f4:	test   edx,edx
   14003b1f6:	jns    0x14003b1ff
   14003b1f8:	or     eax,0x1
   14003b1fb:	mov    DWORD PTR [rsp+0xc],eax
   14003b1ff:	add    edx,edx
   14003b201:	dec    ecx
   14003b203:	test   BYTE PTR [rsp+0xe],0x10
   14003b208:	je     0x14003b1ee
   14003b20a:	mov    DWORD PTR [rsp+0x8],edx
   14003b20e:	movzx  eax,WORD PTR [rsp+0xe]
   14003b213:	mov    edx,0xffef
   14003b218:	and    ax,dx
   14003b21b:	mov    WORD PTR [rsp+0xe],ax
   14003b220:	test   r9d,r9d
   14003b223:	je     0x14003b232
   14003b225:	mov    edx,0x8000
   14003b22a:	or     ax,dx
   14003b22d:	mov    WORD PTR [rsp+0xe],ax
   14003b232:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14003b238:	mov    edx,0xbfef
   14003b23d:	movsd  QWORD PTR [rsp+0x10],xmm0
   14003b243:	mov    rax,QWORD PTR [rsp+0x10]
   14003b248:	shr    rax,0x30
   14003b24c:	and    ax,dx
   14003b24f:	movsd  QWORD PTR [rsp+0x8],xmm0
   14003b255:	mov    edx,0x3fe0
   14003b25a:	or     ax,dx
   14003b25d:	mov    WORD PTR [rsp+0xe],ax
   14003b262:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14003b268:	jmp    0x14003b2b4
   14003b26a:	mov    edx,0xbfef
   14003b26f:	movsd  QWORD PTR [rsp+0x10],xmm1
   14003b275:	mov    ecx,0x7ff
   14003b27a:	movsd  QWORD PTR [rsp+0x18],xmm1
   14003b280:	mov    rax,QWORD PTR [rsp+0x18]
   14003b285:	shr    rax,0x30
   14003b289:	and    ax,dx
   14003b28c:	mov    edx,0x3fe0
   14003b291:	or     ax,dx
   14003b294:	mov    WORD PTR [rsp+0x16],ax
   14003b299:	movzx  eax,WORD PTR [rsp+0xe]
   14003b29e:	movsd  xmm0,QWORD PTR [rsp+0x10]
   14003b2a4:	shr    ax,0x4
   14003b2a8:	and    ax,cx
   14003b2ab:	movsx  ecx,ax
   14003b2ae:	sub    ecx,0x3fe
   14003b2b4:	mov    DWORD PTR [r10],ecx
   14003b2b7:	ret    
   14003b2b8:	movsd  QWORD PTR [rsp+0x8],xmm0
   14003b2be:	mov    rax,QWORD PTR [rsp+0x8]
   14003b2c3:	mov    rcx,rax
   14003b2c6:	shr    rcx,0x20
   14003b2ca:	cmp    ecx,0x7ff00000
   14003b2d0:	jne    0x14003b2dc
   14003b2d2:	test   eax,eax
   14003b2d4:	jne    0x14003b2dc
   14003b2d6:	mov    eax,0x1
   14003b2db:	ret    
   14003b2dc:	cmp    ecx,0xfff00000
   14003b2e2:	jne    0x14003b2ee
   14003b2e4:	test   eax,eax
   14003b2e6:	jne    0x14003b2ee
   14003b2e8:	mov    eax,0x2
   14003b2ed:	ret    
   14003b2ee:	mov    r8d,0x7ff8
   14003b2f4:	mov    rdx,rax
   14003b2f7:	shr    rdx,0x30
   14003b2fb:	and    dx,r8w
   14003b2ff:	cmp    dx,r8w
   14003b303:	jne    0x14003b30b
   14003b305:	mov    eax,0x3
   14003b30a:	ret    
   14003b30b:	mov    r8d,0x7ff0
   14003b311:	cmp    dx,r8w
   14003b315:	jne    0x14003b329
   14003b317:	test   ecx,0x7ffff
   14003b31d:	jne    0x14003b323
   14003b31f:	test   eax,eax
   14003b321:	je     0x14003b329
   14003b323:	mov    eax,0x4
   14003b328:	ret    
   14003b329:	xor    eax,eax
   14003b32b:	ret    
   14003b32c:	rex push rbx
   14003b32e:	sub    rsp,0x20
   14003b332:	call   0x140045340
   14003b337:	mov    ebx,eax
   14003b339:	and    ebx,0x3f
   14003b33c:	call   0x14004535a
   14003b341:	mov    eax,ebx
   14003b343:	add    rsp,0x20
   14003b347:	pop    rbx
   14003b348:	ret    
   14003b349:	int3   
   14003b34a:	int3   
   14003b34b:	int3   
   14003b34c:	mov    QWORD PTR [rsp+0x18],rbx
   14003b351:	mov    QWORD PTR [rsp+0x20],rsi
   14003b356:	push   rdi
   14003b357:	sub    rsp,0x20
   14003b35b:	mov    rbx,rdx
   14003b35e:	mov    rdi,rcx
   14003b361:	call   0x140045340
   14003b366:	mov    esi,eax
   14003b368:	mov    DWORD PTR [rsp+0x38],eax
   14003b36c:	mov    ecx,ebx
   14003b36e:	not    ecx
   14003b370:	or     ecx,0xffff807f
   14003b376:	and    ecx,eax
   14003b378:	and    edi,ebx
   14003b37a:	or     ecx,edi
   14003b37c:	mov    DWORD PTR [rsp+0x30],ecx
   14003b380:	cmp    BYTE PTR [rip+0x36129],0x0        # 0x1400714b0
   14003b387:	je     0x14003b3ae
   14003b389:	test   cl,0x40
   14003b38c:	je     0x14003b3ae
   14003b38e:	call   0x140045350
   14003b393:	jmp    0x14003b3ac
   14003b395:	mov    BYTE PTR [rip+0x36114],0x0        # 0x1400714b0
   14003b39c:	mov    ecx,DWORD PTR [rsp+0x30]
   14003b3a0:	and    ecx,0xffffffbf
   14003b3a3:	call   0x140045350
   14003b3a8:	mov    esi,DWORD PTR [rsp+0x38]
   14003b3ac:	jmp    0x14003b3b6
   14003b3ae:	and    ecx,0xffffffbf
   14003b3b1:	call   0x140045350
   14003b3b6:	mov    eax,esi
   14003b3b8:	mov    rbx,QWORD PTR [rsp+0x40]
   14003b3bd:	mov    rsi,QWORD PTR [rsp+0x48]
   14003b3c2:	add    rsp,0x20
   14003b3c6:	pop    rdi
   14003b3c7:	ret    
   14003b3c8:	rex push rbx
   14003b3ca:	sub    rsp,0x20
   14003b3ce:	mov    rbx,rcx
   14003b3d1:	call   0x140045340
   14003b3d6:	and    ebx,0x3f
   14003b3d9:	or     eax,ebx
   14003b3db:	mov    ecx,eax
   14003b3dd:	add    rsp,0x20
   14003b3e1:	pop    rbx
   14003b3e2:	jmp    0x140045350
   14003b3e7:	int3   
   14003b3e8:	sub    rsp,0x28
   14003b3ec:	call   0x140045340
   14003b3f1:	and    eax,0x3f
   14003b3f4:	add    rsp,0x28
   14003b3f8:	ret    
   14003b3f9:	int3   
   14003b3fa:	int3   
   14003b3fb:	int3   
   14003b3fc:	sub    rsp,0x28
   14003b400:	mov    eax,DWORD PTR [rip+0x3b676]        # 0x140076a7c
   14003b406:	mov    r10,rdx
   14003b409:	mov    r11,rcx
   14003b40c:	xor    r9d,r9d
   14003b40f:	test   eax,eax
   14003b411:	jne    0x14003b487
   14003b413:	test   rcx,rcx
   14003b416:	jne    0x14003b432
   14003b418:	call   0x140032c50
   14003b41d:	mov    DWORD PTR [rax],0x16
   14003b423:	call   0x1400307d0
   14003b428:	mov    eax,0x7fffffff
   14003b42d:	add    rsp,0x28
   14003b431:	ret    
   14003b432:	test   rdx,rdx
   14003b435:	je     0x14003b418
   14003b437:	cmp    r8,0x7fffffff
   14003b43e:	ja     0x14003b418
   14003b440:	sub    r11,rdx
   14003b443:	movzx  edx,WORD PTR [r11+r10*1]
   14003b448:	lea    eax,[rdx-0x41]
   14003b44b:	cmp    ax,0x19
   14003b44f:	ja     0x14003b455
   14003b451:	add    dx,0x20
   14003b455:	movzx  ecx,WORD PTR [r10]
   14003b459:	lea    eax,[rcx-0x41]
   14003b45c:	cmp    ax,0x19
   14003b460:	ja     0x14003b466
   14003b462:	add    cx,0x20
   14003b466:	add    r10,0x2
   14003b46a:	sub    r8,0x1
   14003b46e:	je     0x14003b47a
   14003b470:	test   dx,dx
   14003b473:	je     0x14003b47a
   14003b475:	cmp    dx,cx
   14003b478:	je     0x14003b443
   14003b47a:	movzx  ecx,cx
   14003b47d:	movzx  eax,dx
   14003b480:	sub    eax,ecx
   14003b482:	add    rsp,0x28
   14003b486:	ret    
   14003b487:	add    rsp,0x28
   14003b48b:	jmp    0x14003b490
   14003b490:	mov    rax,rsp
   14003b493:	mov    QWORD PTR [rax+0x8],rbx
   14003b497:	mov    QWORD PTR [rax+0x10],rbp
   14003b49b:	mov    QWORD PTR [rax+0x18],rsi
   14003b49f:	mov    QWORD PTR [rax+0x20],rdi
   14003b4a3:	push   r14
   14003b4a5:	sub    rsp,0x50
   14003b4a9:	xor    ebp,ebp
   14003b4ab:	mov    rsi,r8
   14003b4ae:	mov    rdi,rdx
   14003b4b1:	mov    r14,rcx
   14003b4b4:	test   r8,r8
   14003b4b7:	jne    0x14003b4c0
   14003b4b9:	xor    eax,eax
   14003b4bb:	jmp    0x14003b5a6
   14003b4c0:	test   rcx,rcx
   14003b4c3:	jne    0x14003b4df
   14003b4c5:	call   0x140032c50
   14003b4ca:	mov    DWORD PTR [rax],0x16
   14003b4d0:	call   0x1400307d0
   14003b4d5:	mov    eax,0x7fffffff
   14003b4da:	jmp    0x14003b5a6
   14003b4df:	test   rdx,rdx
   14003b4e2:	je     0x14003b4c5
   14003b4e4:	mov    ebx,0x7fffffff
   14003b4e9:	cmp    r8,rbx
   14003b4ec:	jbe    0x14003b503
   14003b4ee:	call   0x140032c50
   14003b4f3:	mov    DWORD PTR [rax],0x16
   14003b4f9:	call   0x1400307d0
   14003b4fe:	jmp    0x14003b5a4
   14003b503:	mov    rdx,r9
   14003b506:	lea    rcx,[rsp+0x30]
   14003b50b:	call   0x14002bd94
   14003b510:	mov    rax,QWORD PTR [rsp+0x38]
   14003b515:	mov    rcx,QWORD PTR [rax+0x130]
   14003b51c:	test   rcx,rcx
   14003b51f:	jne    0x14003b564
   14003b521:	sub    r14,rdi
   14003b524:	movzx  ecx,WORD PTR [r14+rdi*1]
   14003b529:	lea    eax,[rcx-0x41]
   14003b52c:	cmp    ax,0x19
   14003b530:	ja     0x14003b536
   14003b532:	add    cx,0x20
   14003b536:	movzx  edx,WORD PTR [rdi]
   14003b539:	lea    eax,[rdx-0x41]
   14003b53c:	cmp    ax,0x19
   14003b540:	ja     0x14003b546
   14003b542:	add    dx,0x20
   14003b546:	add    rdi,0x2
   14003b54a:	sub    rsi,0x1
   14003b54e:	je     0x14003b55a
   14003b550:	test   cx,cx
   14003b553:	je     0x14003b55a
   14003b555:	cmp    cx,dx
   14003b558:	je     0x14003b524
   14003b55a:	movzx  eax,dx
   14003b55d:	movzx  ebx,cx
   14003b560:	sub    ebx,eax
   14003b562:	jmp    0x14003b591
   14003b564:	mov    DWORD PTR [rsp+0x28],esi
   14003b568:	mov    r9d,esi
   14003b56b:	mov    r8,r14
   14003b56e:	mov    QWORD PTR [rsp+0x20],rdi
   14003b573:	mov    edx,0x1001
   14003b578:	call   0x140045390
   14003b57d:	test   eax,eax
   14003b57f:	jne    0x14003b58e
   14003b581:	call   0x140032c50
   14003b586:	mov    DWORD PTR [rax],0x16
   14003b58c:	jmp    0x14003b591
   14003b58e:	lea    ebx,[rax-0x2]
   14003b591:	cmp    BYTE PTR [rsp+0x48],bpl
   14003b596:	je     0x14003b5a4
   14003b598:	mov    rax,QWORD PTR [rsp+0x30]
   14003b59d:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14003b5a4:	mov    eax,ebx
   14003b5a6:	mov    rbx,QWORD PTR [rsp+0x60]
   14003b5ab:	mov    rbp,QWORD PTR [rsp+0x68]
   14003b5b0:	mov    rsi,QWORD PTR [rsp+0x70]
   14003b5b5:	mov    rdi,QWORD PTR [rsp+0x78]
   14003b5ba:	add    rsp,0x50
   14003b5be:	pop    r14
   14003b5c0:	ret    
   14003b5c1:	int3   
   14003b5c2:	int3   
   14003b5c3:	int3   
   14003b5c4:	mov    QWORD PTR [rsp+0x10],rbx
   14003b5c9:	push   rdi
   14003b5ca:	sub    rsp,0x20
   14003b5ce:	mov    eax,0xffff
   14003b5d3:	movzx  ebx,dx
   14003b5d6:	cmp    cx,ax
   14003b5d9:	jne    0x14003b5df
   14003b5db:	xor    eax,eax
   14003b5dd:	jmp    0x14003b629
   14003b5df:	mov    eax,0x100
   14003b5e4:	cmp    cx,ax
   14003b5e7:	jae    0x14003b5f9
   14003b5e9:	mov    rax,QWORD PTR [rip+0x35cf0]        # 0x1400712e0
   14003b5f0:	movzx  ecx,cx
   14003b5f3:	movzx  eax,WORD PTR [rax+rcx*2]
   14003b5f7:	jmp    0x14003b624
   14003b5f9:	xor    edi,edi
   14003b5fb:	mov    WORD PTR [rsp+0x40],cx
   14003b600:	lea    r9,[rsp+0x30]
   14003b605:	mov    WORD PTR [rsp+0x30],di
   14003b60a:	lea    rdx,[rsp+0x40]
   14003b60f:	lea    ecx,[rdi+0x1]
   14003b612:	mov    r8d,ecx
   14003b615:	call   QWORD PTR [rip+0xfc3d]        # 0x14004b258
   14003b61b:	test   eax,eax
   14003b61d:	je     0x14003b5db
   14003b61f:	movzx  eax,WORD PTR [rsp+0x30]
   14003b624:	movzx  ecx,bx
   14003b627:	and    eax,ecx
   14003b629:	mov    rbx,QWORD PTR [rsp+0x38]
   14003b62e:	add    rsp,0x20
   14003b632:	pop    rdi
   14003b633:	ret    
   14003b634:	rex push rbx
   14003b636:	sub    rsp,0x40
   14003b63a:	mov    ebx,ecx
   14003b63c:	lea    rcx,[rsp+0x20]
   14003b641:	call   0x14002bd94
   14003b646:	mov    rax,QWORD PTR [rsp+0x28]
   14003b64b:	movzx  edx,bl
   14003b64e:	mov    rcx,QWORD PTR [rax]
   14003b651:	movzx  eax,WORD PTR [rcx+rdx*2]
   14003b655:	and    eax,0x8000
   14003b65a:	cmp    BYTE PTR [rsp+0x38],0x0
   14003b65f:	je     0x14003b66d
   14003b661:	mov    rcx,QWORD PTR [rsp+0x20]
   14003b666:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14003b66d:	add    rsp,0x40
   14003b671:	pop    rbx
   14003b672:	ret    
   14003b673:	int3   
   14003b674:	rex push rbp
   14003b676:	push   r12
   14003b678:	push   r13
   14003b67a:	push   r14
   14003b67c:	push   r15
   14003b67e:	sub    rsp,0x60
   14003b682:	lea    rbp,[rsp+0x50]
   14003b687:	mov    QWORD PTR [rbp+0x40],rbx
   14003b68b:	mov    QWORD PTR [rbp+0x48],rsi
   14003b68f:	mov    QWORD PTR [rbp+0x50],rdi
   14003b693:	mov    rax,QWORD PTR [rip+0x359b6]        # 0x140071050
   14003b69a:	xor    rax,rbp
   14003b69d:	mov    QWORD PTR [rbp+0x8],rax
   14003b6a1:	movsxd rbx,DWORD PTR [rbp+0x60]
   14003b6a5:	mov    r15,r9
   14003b6a8:	mov    QWORD PTR [rbp+0x0],rdx
   14003b6ac:	mov    r13d,r8d
   14003b6af:	mov    rdi,rcx
   14003b6b2:	test   ebx,ebx
   14003b6b4:	jle    0x14003b6ca
   14003b6b6:	mov    rdx,rbx
   14003b6b9:	mov    rcx,r9
   14003b6bc:	call   0x140038c58
   14003b6c1:	cmp    eax,ebx
   14003b6c3:	lea    ebx,[rax+0x1]
   14003b6c6:	jl     0x14003b6ca
   14003b6c8:	mov    ebx,eax
   14003b6ca:	mov    r14d,DWORD PTR [rbp+0x78]
   14003b6ce:	test   r14d,r14d
   14003b6d1:	jne    0x14003b6da
   14003b6d3:	mov    rax,QWORD PTR [rdi]
   14003b6d6:	mov    r14d,DWORD PTR [rax+0xc]
   14003b6da:	neg    DWORD PTR [rbp+0x80]
   14003b6e0:	mov    r9d,ebx
   14003b6e3:	mov    r8,r15
   14003b6e6:	mov    ecx,r14d
   14003b6e9:	sbb    edx,edx
   14003b6eb:	and    DWORD PTR [rsp+0x28],0x0
   14003b6f0:	and    QWORD PTR [rsp+0x20],0x0
   14003b6f6:	and    edx,0x8
   14003b6f9:	inc    edx
   14003b6fb:	call   QWORD PTR [rip+0xfa27]        # 0x14004b128
   14003b701:	movsxd r12,eax
   14003b704:	test   eax,eax
   14003b706:	je     0x14003b987
   14003b70c:	mov    rdx,r12
   14003b70f:	movabs r8,0xffffffffffffff0
   14003b719:	add    rdx,rdx
   14003b71c:	lea    rcx,[rdx+0x10]
   14003b720:	cmp    rdx,rcx
   14003b723:	sbb    rax,rax
   14003b726:	test   rcx,rax
   14003b729:	je     0x14003b79d
   14003b72b:	lea    rcx,[rdx+0x10]
   14003b72f:	cmp    rdx,rcx
   14003b732:	sbb    rax,rax
   14003b735:	and    rax,rcx
   14003b738:	cmp    rax,0x400
   14003b73e:	lea    rax,[rdx+0x10]
   14003b742:	ja     0x14003b77b
   14003b744:	cmp    rdx,rax
   14003b747:	sbb    rcx,rcx
   14003b74a:	and    rcx,rax
   14003b74d:	lea    rax,[rcx+0xf]
   14003b751:	cmp    rax,rcx
   14003b754:	ja     0x14003b759
   14003b756:	mov    rax,r8
   14003b759:	and    rax,0xfffffffffffffff0
   14003b75d:	call   0x1400267b0
   14003b762:	sub    rsp,rax
   14003b765:	lea    rsi,[rsp+0x50]
   14003b76a:	test   rsi,rsi
   14003b76d:	je     0x14003b96d
   14003b773:	mov    DWORD PTR [rsi],0xcccc
   14003b779:	jmp    0x14003b797
   14003b77b:	cmp    rdx,rax
   14003b77e:	sbb    rcx,rcx
   14003b781:	and    rcx,rax
   14003b784:	call   0x140036600
   14003b789:	mov    rsi,rax
   14003b78c:	test   rax,rax
   14003b78f:	je     0x14003b79f
   14003b791:	mov    DWORD PTR [rax],0xdddd
   14003b797:	add    rsi,0x10
   14003b79b:	jmp    0x14003b79f
   14003b79d:	xor    esi,esi
   14003b79f:	test   rsi,rsi
   14003b7a2:	je     0x14003b96d
   14003b7a8:	mov    DWORD PTR [rsp+0x28],r12d
   14003b7ad:	mov    r9d,ebx
   14003b7b0:	mov    r8,r15
   14003b7b3:	mov    QWORD PTR [rsp+0x20],rsi
   14003b7b8:	mov    edx,0x1
   14003b7bd:	mov    ecx,r14d
   14003b7c0:	call   QWORD PTR [rip+0xf962]        # 0x14004b128
   14003b7c6:	test   eax,eax
   14003b7c8:	je     0x14003b96d
   14003b7ce:	and    QWORD PTR [rsp+0x40],0x0
   14003b7d4:	mov    r9d,r12d
   14003b7d7:	and    QWORD PTR [rsp+0x38],0x0
   14003b7dd:	mov    r8,rsi
   14003b7e0:	and    QWORD PTR [rsp+0x30],0x0
   14003b7e6:	mov    edx,r13d
   14003b7e9:	mov    r15,QWORD PTR [rbp+0x0]
   14003b7ed:	and    DWORD PTR [rsp+0x28],0x0
   14003b7f2:	mov    rcx,r15
   14003b7f5:	and    QWORD PTR [rsp+0x20],0x0
   14003b7fb:	call   0x14003d3f4
   14003b800:	movsxd rdi,eax
   14003b803:	test   eax,eax
   14003b805:	je     0x14003b96d
   14003b80b:	mov    r8d,0x400
   14003b811:	test   r8d,r13d
   14003b814:	je     0x14003b868
   14003b816:	mov    eax,DWORD PTR [rbp+0x70]
   14003b819:	test   eax,eax
   14003b81b:	je     0x14003b96f
   14003b821:	cmp    edi,eax
   14003b823:	jg     0x14003b96d
   14003b829:	and    QWORD PTR [rsp+0x40],0x0
   14003b82f:	mov    r9d,r12d
   14003b832:	and    QWORD PTR [rsp+0x38],0x0
   14003b838:	mov    r8,rsi
   14003b83b:	and    QWORD PTR [rsp+0x30],0x0
   14003b841:	mov    edx,r13d
   14003b844:	mov    DWORD PTR [rsp+0x28],eax
   14003b848:	mov    rcx,r15
   14003b84b:	mov    rax,QWORD PTR [rbp+0x68]
   14003b84f:	mov    QWORD PTR [rsp+0x20],rax
   14003b854:	call   0x14003d3f4
   14003b859:	mov    edi,eax
   14003b85b:	test   eax,eax
   14003b85d:	jne    0x14003b96f
   14003b863:	jmp    0x14003b96d
   14003b868:	mov    rdx,rdi
   14003b86b:	add    rdx,rdx
   14003b86e:	lea    rcx,[rdx+0x10]
   14003b872:	cmp    rdx,rcx
   14003b875:	sbb    rax,rax
   14003b878:	test   rcx,rax
   14003b87b:	je     0x14003b8f3
   14003b87d:	lea    rcx,[rdx+0x10]
   14003b881:	cmp    rdx,rcx
   14003b884:	sbb    rax,rax
   14003b887:	and    rax,rcx
   14003b88a:	cmp    rax,r8
   14003b88d:	lea    rax,[rdx+0x10]
   14003b891:	ja     0x14003b8d1
   14003b893:	cmp    rdx,rax
   14003b896:	sbb    rcx,rcx
   14003b899:	and    rcx,rax
   14003b89c:	lea    rax,[rcx+0xf]
   14003b8a0:	cmp    rax,rcx
   14003b8a3:	ja     0x14003b8af
   14003b8a5:	movabs rax,0xffffffffffffff0
   14003b8af:	and    rax,0xfffffffffffffff0
   14003b8b3:	call   0x1400267b0
   14003b8b8:	sub    rsp,rax
   14003b8bb:	lea    rbx,[rsp+0x50]
   14003b8c0:	test   rbx,rbx
   14003b8c3:	je     0x14003b96d
   14003b8c9:	mov    DWORD PTR [rbx],0xcccc
   14003b8cf:	jmp    0x14003b8ed
   14003b8d1:	cmp    rdx,rax
   14003b8d4:	sbb    rcx,rcx
   14003b8d7:	and    rcx,rax
   14003b8da:	call   0x140036600
   14003b8df:	mov    rbx,rax
   14003b8e2:	test   rax,rax
   14003b8e5:	je     0x14003b8f5
   14003b8e7:	mov    DWORD PTR [rax],0xdddd
   14003b8ed:	add    rbx,0x10
   14003b8f1:	jmp    0x14003b8f5
   14003b8f3:	xor    ebx,ebx
   14003b8f5:	test   rbx,rbx
   14003b8f8:	je     0x14003b96d
   14003b8fa:	and    QWORD PTR [rsp+0x40],0x0
   14003b900:	mov    r9d,r12d
   14003b903:	and    QWORD PTR [rsp+0x38],0x0
   14003b909:	mov    r8,rsi
   14003b90c:	and    QWORD PTR [rsp+0x30],0x0
   14003b912:	mov    edx,r13d
   14003b915:	mov    DWORD PTR [rsp+0x28],edi
   14003b919:	mov    rcx,r15
   14003b91c:	mov    QWORD PTR [rsp+0x20],rbx
   14003b921:	call   0x14003d3f4
   14003b926:	test   eax,eax
   14003b928:	je     0x14003b95c
   14003b92a:	and    QWORD PTR [rsp+0x38],0x0
   14003b930:	xor    edx,edx
   14003b932:	and    QWORD PTR [rsp+0x30],rdx
   14003b937:	mov    r9d,edi
   14003b93a:	mov    eax,DWORD PTR [rbp+0x70]
   14003b93d:	mov    r8,rbx
   14003b940:	mov    ecx,r14d
   14003b943:	test   eax,eax
   14003b945:	jne    0x14003b9ad
   14003b947:	and    DWORD PTR [rsp+0x28],edx
   14003b94b:	and    QWORD PTR [rsp+0x20],rdx
   14003b950:	call   QWORD PTR [rip+0xf7da]        # 0x14004b130
   14003b956:	mov    edi,eax
   14003b958:	test   eax,eax
   14003b95a:	jne    0x14003b9bc
   14003b95c:	lea    rcx,[rbx-0x10]
   14003b960:	cmp    DWORD PTR [rcx],0xdddd
   14003b966:	jne    0x14003b96d
   14003b968:	call   0x140038c70
   14003b96d:	xor    edi,edi
   14003b96f:	test   rsi,rsi
   14003b972:	je     0x14003b985
   14003b974:	lea    rcx,[rsi-0x10]
   14003b978:	cmp    DWORD PTR [rcx],0xdddd
   14003b97e:	jne    0x14003b985
   14003b980:	call   0x140038c70
   14003b985:	mov    eax,edi
   14003b987:	mov    rcx,QWORD PTR [rbp+0x8]
   14003b98b:	xor    rcx,rbp
   14003b98e:	call   0x140025df0
   14003b993:	mov    rbx,QWORD PTR [rbp+0x40]
   14003b997:	mov    rsi,QWORD PTR [rbp+0x48]
   14003b99b:	mov    rdi,QWORD PTR [rbp+0x50]
   14003b99f:	lea    rsp,[rbp+0x10]
   14003b9a3:	pop    r15
   14003b9a5:	pop    r14
   14003b9a7:	pop    r13
   14003b9a9:	pop    r12
   14003b9ab:	pop    rbp
   14003b9ac:	ret    
   14003b9ad:	mov    DWORD PTR [rsp+0x28],eax
   14003b9b1:	mov    rax,QWORD PTR [rbp+0x68]
   14003b9b5:	mov    QWORD PTR [rsp+0x20],rax
   14003b9ba:	jmp    0x14003b950
   14003b9bc:	lea    rcx,[rbx-0x10]
   14003b9c0:	cmp    DWORD PTR [rcx],0xdddd
   14003b9c6:	jne    0x14003b96f
   14003b9c8:	call   0x140038c70
   14003b9cd:	jmp    0x14003b96f
   14003b9cf:	int3   
   14003b9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14003b9d5:	mov    QWORD PTR [rsp+0x10],rsi
   14003b9da:	push   rdi
   14003b9db:	sub    rsp,0x70
   14003b9df:	mov    rsi,rdx
   14003b9e2:	mov    rbx,r9
   14003b9e5:	mov    rdx,rcx
   14003b9e8:	mov    edi,r8d
   14003b9eb:	lea    rcx,[rsp+0x50]
   14003b9f0:	call   0x14002bd94
   14003b9f5:	mov    eax,DWORD PTR [rsp+0xc0]
   14003b9fc:	lea    rcx,[rsp+0x58]
   14003ba01:	mov    DWORD PTR [rsp+0x40],eax
   14003ba05:	mov    r9,rbx
   14003ba08:	mov    eax,DWORD PTR [rsp+0xb8]
   14003ba0f:	mov    r8d,edi
   14003ba12:	mov    DWORD PTR [rsp+0x38],eax
   14003ba16:	mov    rdx,rsi
   14003ba19:	mov    eax,DWORD PTR [rsp+0xb0]
   14003ba20:	mov    DWORD PTR [rsp+0x30],eax
   14003ba24:	mov    rax,QWORD PTR [rsp+0xa8]
   14003ba2c:	mov    QWORD PTR [rsp+0x28],rax
   14003ba31:	mov    eax,DWORD PTR [rsp+0xa0]
   14003ba38:	mov    DWORD PTR [rsp+0x20],eax
   14003ba3c:	call   0x14003b674
   14003ba41:	cmp    BYTE PTR [rsp+0x68],0x0
   14003ba46:	je     0x14003ba54
   14003ba48:	mov    rcx,QWORD PTR [rsp+0x50]
   14003ba4d:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14003ba54:	lea    r11,[rsp+0x70]
   14003ba59:	mov    rbx,QWORD PTR [r11+0x10]
   14003ba5d:	mov    rsi,QWORD PTR [r11+0x18]
   14003ba61:	mov    rsp,r11
   14003ba64:	pop    rdi
   14003ba65:	ret    
   14003ba66:	int3   
   14003ba67:	int3   
   14003ba68:	rex push rbx
   14003ba6a:	sub    rsp,0x20
   14003ba6e:	mov    rbx,rcx
   14003ba71:	and    QWORD PTR [rcx],0x0
   14003ba75:	mov    ecx,0x8
   14003ba7a:	call   0x140035a44
   14003ba7f:	nop
   14003ba80:	lea    rcx,[rsp+0x30]
   14003ba85:	call   0x14003bb08
   14003ba8a:	mov    rcx,QWORD PTR [rax]
   14003ba8d:	mov    QWORD PTR [rbx],rcx
   14003ba90:	test   rcx,rcx
   14003ba93:	je     0x14003baae
   14003ba95:	and    DWORD PTR [rcx+0x10],0x0
   14003ba99:	mov    rax,rcx
   14003ba9c:	and    QWORD PTR [rcx+0x28],0x0
   14003baa1:	and    QWORD PTR [rcx],0x0
   14003baa5:	and    QWORD PTR [rcx+0x8],0x0
   14003baaa:	or     DWORD PTR [rcx+0x18],0xffffffff
   14003baae:	mov    ecx,0x8
   14003bab3:	call   0x140035a98
   14003bab8:	mov    rax,rbx
   14003babb:	add    rsp,0x20
   14003babf:	pop    rbx
   14003bac0:	ret    
   14003bac1:	int3   
   14003bac2:	int3   
   14003bac3:	int3   
   14003bac4:	mov    QWORD PTR [rsp+0x8],rcx
   14003bac9:	mov    r11,rsp
   14003bacc:	xor    edx,edx
   14003bace:	mov    QWORD PTR [rcx],rdx
   14003bad1:	mov    rax,QWORD PTR [r11+0x8]
   14003bad5:	mov    QWORD PTR [rax+0x8],rdx
   14003bad9:	mov    rax,QWORD PTR [r11+0x8]
   14003badd:	mov    DWORD PTR [rax+0x10],edx
   14003bae0:	mov    rax,QWORD PTR [r11+0x8]
   14003bae4:	or     DWORD PTR [rax+0x18],0xffffffff
   14003bae8:	mov    rax,QWORD PTR [r11+0x8]
   14003baec:	mov    DWORD PTR [rax+0x1c],edx
   14003baef:	mov    rax,QWORD PTR [r11+0x8]
   14003baf3:	mov    DWORD PTR [rax+0x20],edx
   14003baf6:	mov    rax,QWORD PTR [r11+0x8]
   14003bafa:	mov    QWORD PTR [rax+0x28],rdx
   14003bafe:	mov    rax,QWORD PTR [r11+0x8]
   14003bb02:	xchg   DWORD PTR [rax+0x14],edx
   14003bb05:	ret    
   14003bb06:	int3   
   14003bb07:	int3   
   14003bb08:	mov    QWORD PTR [rsp+0x8],rbx
   14003bb0d:	mov    QWORD PTR [rsp+0x10],rbp
   14003bb12:	mov    QWORD PTR [rsp+0x18],rsi
   14003bb17:	push   rdi
   14003bb18:	sub    rsp,0x20
   14003bb1c:	mov    rdi,QWORD PTR [rip+0x3adbd]        # 0x1400768e0
   14003bb23:	mov    rsi,rcx
   14003bb26:	movsxd rbp,DWORD PTR [rip+0x3adab]        # 0x1400768d8
   14003bb2d:	add    rdi,0x18
   14003bb31:	add    rbp,0xfffffffffffffffd
   14003bb35:	lea    rbp,[rdi+rbp*8]
   14003bb39:	cmp    rdi,rbp
   14003bb3c:	je     0x14003bbd6
   14003bb42:	mov    rbx,QWORD PTR [rdi]
   14003bb45:	test   rbx,rbx
   14003bb48:	je     0x14003bb87
   14003bb4a:	mov    eax,DWORD PTR [rbx+0x14]
   14003bb4d:	shr    eax,0xd
   14003bb50:	test   al,0x1
   14003bb52:	jne    0x14003bb81
   14003bb54:	mov    rcx,rbx
   14003bb57:	call   0x140032b80
   14003bb5c:	prefetchw BYTE PTR [rbx+0x14]
   14003bb60:	mov    eax,DWORD PTR [rbx+0x14]
   14003bb63:	mov    ecx,eax
   14003bb65:	bts    ecx,0xd
   14003bb69:	lock cmpxchg DWORD PTR [rbx+0x14],ecx
   14003bb6e:	jne    0x14003bb63
   14003bb70:	shr    eax,0xd
   14003bb73:	not    al
   14003bb75:	test   al,0x1
   14003bb77:	jne    0x14003bbd1
   14003bb79:	mov    rcx,rbx
   14003bb7c:	call   0x140032b8c
   14003bb81:	add    rdi,0x8
   14003bb85:	jmp    0x14003bb39
   14003bb87:	mov    edx,0x58
   14003bb8c:	lea    ecx,[rdx-0x57]
   14003bb8f:	call   0x140035d88
   14003bb94:	xor    ecx,ecx
   14003bb96:	mov    QWORD PTR [rdi],rax
   14003bb99:	call   0x140038c70
   14003bb9e:	mov    rax,QWORD PTR [rdi]
   14003bba1:	test   rax,rax
   14003bba4:	je     0x14003bbd6
   14003bba6:	or     DWORD PTR [rax+0x18],0xffffffff
   14003bbaa:	xor    r8d,r8d
   14003bbad:	mov    rcx,QWORD PTR [rdi]
   14003bbb0:	mov    edx,0xfa0
   14003bbb5:	add    rcx,0x30
   14003bbb9:	call   0x14003d288
   14003bbbe:	mov    rbx,QWORD PTR [rdi]
   14003bbc1:	lock or DWORD PTR [rbx+0x14],0x2000
   14003bbc9:	mov    rcx,rbx
   14003bbcc:	call   0x140032b80
   14003bbd1:	mov    QWORD PTR [rsi],rbx
   14003bbd4:	jmp    0x14003bbda
   14003bbd6:	and    QWORD PTR [rsi],0x0
   14003bbda:	mov    rbx,QWORD PTR [rsp+0x30]
   14003bbdf:	mov    rax,rsi
   14003bbe2:	mov    rsi,QWORD PTR [rsp+0x40]
   14003bbe7:	mov    rbp,QWORD PTR [rsp+0x38]
   14003bbec:	add    rsp,0x20
   14003bbf0:	pop    rdi
   14003bbf1:	ret    
   14003bbf2:	int3   
   14003bbf3:	int3   
   14003bbf4:	mov    rax,rsp
   14003bbf7:	mov    QWORD PTR [rax+0x8],rbx
   14003bbfb:	mov    QWORD PTR [rax+0x10],rbp
   14003bbff:	mov    QWORD PTR [rax+0x18],rsi
   14003bc03:	push   rdi
   14003bc04:	sub    rsp,0x30
   14003bc08:	mov    rdi,rcx
   14003bc0b:	mov    rbx,rdx
   14003bc0e:	xor    ecx,ecx
   14003bc10:	mov    QWORD PTR [rax-0x18],rcx
   14003bc14:	movsd  xmm0,QWORD PTR [rax-0x18]
   14003bc19:	mov    eax,DWORD PTR [rip+0x3ae65]        # 0x140076a84
   14003bc1f:	movsd  QWORD PTR [rdi],xmm0
   14003bc23:	lea    ebp,[rcx+0x20]
   14003bc26:	mov    DWORD PTR [rdi+0x8],ecx
   14003bc29:	mov    DWORD PTR [rdi+0x4],eax
   14003bc2c:	cmp    WORD PTR [rdx],bp
   14003bc2f:	jne    0x14003bc3a
   14003bc31:	add    rbx,0x2
   14003bc35:	cmp    WORD PTR [rbx],bp
   14003bc38:	je     0x14003bc31
   14003bc3a:	movzx  eax,WORD PTR [rbx]
   14003bc3d:	xor    esi,esi
   14003bc3f:	cmp    eax,0x61
   14003bc42:	je     0x14003bc65
   14003bc44:	cmp    eax,0x72
   14003bc47:	je     0x14003bc5a
   14003bc49:	cmp    eax,0x77
   14003bc4c:	jne    0x14003be8d
   14003bc52:	mov    DWORD PTR [rdi],0x301
   14003bc58:	jmp    0x14003bc6b
   14003bc5a:	mov    DWORD PTR [rdi],esi
   14003bc5c:	mov    DWORD PTR [rdi+0x4],0x1
   14003bc63:	jmp    0x14003bc72
   14003bc65:	mov    DWORD PTR [rdi],0x109
   14003bc6b:	mov    DWORD PTR [rdi+0x4],0x2
   14003bc72:	add    rbx,0x2
   14003bc76:	mov    r8b,sil
   14003bc79:	mov    r11b,sil
   14003bc7c:	mov    r9b,sil
   14003bc7f:	mov    r10b,sil
   14003bc82:	mov    dl,0x1
   14003bc84:	cmp    WORD PTR [rbx],si
   14003bc87:	je     0x14003bdb2
   14003bc8d:	movzx  ecx,WORD PTR [rbx]
   14003bc90:	cmp    ecx,0x53
   14003bc93:	jg     0x14003bd30
   14003bc99:	je     0x14003bd21
   14003bc9f:	sub    ecx,ebp
   14003bca1:	je     0x14003bd9e
   14003bca7:	sub    ecx,0xb
   14003bcaa:	je     0x14003bcf5
   14003bcac:	sub    ecx,0x1
   14003bcaf:	je     0x14003bced
   14003bcb1:	sub    ecx,0x18
   14003bcb4:	je     0x14003bcdb
   14003bcb6:	sub    ecx,0xa
   14003bcb9:	je     0x14003bcd2
   14003bcbb:	cmp    ecx,0x4
   14003bcbe:	jne    0x14003be8d
   14003bcc4:	test   r9b,r9b
   14003bcc7:	jne    0x14003bd91
   14003bccd:	or     DWORD PTR [rdi],0x10
   14003bcd0:	jmp    0x14003bd28
   14003bcd2:	bts    DWORD PTR [rdi],0x7
   14003bcd6:	jmp    0x14003bd9c
   14003bcdb:	mov    eax,DWORD PTR [rdi]
   14003bcdd:	test   al,0x40
   14003bcdf:	jne    0x14003bd91
   14003bce5:	or     eax,0x40
   14003bce8:	jmp    0x14003bd9a
   14003bced:	mov    r10b,0x1
   14003bcf0:	jmp    0x14003bd91
   14003bcf5:	test   r11b,r11b
   14003bcf8:	jne    0x14003bd91
   14003bcfe:	mov    eax,DWORD PTR [rdi]
   14003bd00:	mov    r11b,0x1
   14003bd03:	test   al,0x2
   14003bd05:	jne    0x14003bd91
   14003bd0b:	and    eax,0xfffffffe
   14003bd0e:	or     eax,0x2
   14003bd11:	mov    DWORD PTR [rdi],eax
   14003bd13:	mov    eax,DWORD PTR [rdi+0x4]
   14003bd16:	and    eax,0xfffffffc
   14003bd19:	or     eax,0x4
   14003bd1c:	mov    DWORD PTR [rdi+0x4],eax
   14003bd1f:	jmp    0x14003bd9c
   14003bd21:	test   r9b,r9b
   14003bd24:	jne    0x14003bd91
   14003bd26:	or     DWORD PTR [rdi],ebp
   14003bd28:	mov    r9b,0x1
   14003bd2b:	mov    dl,r9b
   14003bd2e:	jmp    0x14003bd9e
   14003bd30:	sub    ecx,0x54
   14003bd33:	je     0x14003bd89
   14003bd35:	sub    ecx,0xe
   14003bd38:	je     0x14003bd7a
   14003bd3a:	sub    ecx,0x1
   14003bd3d:	je     0x14003bd68
   14003bd3f:	sub    ecx,0xb
   14003bd42:	je     0x14003bd5c
   14003bd44:	cmp    ecx,0x6
   14003bd47:	jne    0x14003be8d
   14003bd4d:	mov    eax,DWORD PTR [rdi]
   14003bd4f:	test   eax,0xc000
   14003bd54:	jne    0x14003bd91
   14003bd56:	bts    eax,0xe
   14003bd5a:	jmp    0x14003bd9a
   14003bd5c:	test   r8b,r8b
   14003bd5f:	jne    0x14003bd91
   14003bd61:	btr    DWORD PTR [rdi+0x4],0xb
   14003bd66:	jmp    0x14003bd72
   14003bd68:	test   r8b,r8b
   14003bd6b:	jne    0x14003bd91
   14003bd6d:	bts    DWORD PTR [rdi+0x4],0xb
   14003bd72:	mov    r8b,0x1
   14003bd75:	mov    dl,r8b
   14003bd78:	jmp    0x14003bd9e
   14003bd7a:	mov    eax,DWORD PTR [rdi]
   14003bd7c:	test   eax,0xc000
   14003bd81:	jne    0x14003bd91
   14003bd83:	bts    eax,0xf
   14003bd87:	jmp    0x14003bd9a
   14003bd89:	mov    eax,DWORD PTR [rdi]
   14003bd8b:	bt     eax,0xc
   14003bd8f:	jae    0x14003bd96
   14003bd91:	mov    dl,sil
   14003bd94:	jmp    0x14003bd9e
   14003bd96:	bts    eax,0xc
   14003bd9a:	mov    DWORD PTR [rdi],eax
   14003bd9c:	mov    dl,0x1
   14003bd9e:	test   dl,dl
   14003bda0:	mov    rax,rsi
   14003bda3:	setne  al
   14003bda6:	lea    rbx,[rbx+rax*2]
   14003bdaa:	test   dl,dl
   14003bdac:	jne    0x14003bc84
   14003bdb2:	test   r10b,r10b
   14003bdb5:	je     0x14003bdbb
   14003bdb7:	add    rbx,0x2
   14003bdbb:	cmp    WORD PTR [rbx],bp
   14003bdbe:	je     0x14003bdb7
   14003bdc0:	test   r10b,r10b
   14003bdc3:	jne    0x14003bdd7
   14003bdc5:	cmp    WORD PTR [rbx],si
   14003bdc8:	jne    0x14003be8d
   14003bdce:	mov    BYTE PTR [rdi+0x8],0x1
   14003bdd2:	jmp    0x14003be9d
   14003bdd7:	mov    r8d,0x3
   14003bddd:	lea    rdx,[rip+0x1bcec]        # 0x140057ad0
   14003bde4:	mov    rcx,rbx
   14003bde7:	call   0x140041114
   14003bdec:	test   eax,eax
   14003bdee:	jne    0x14003be8d
   14003bdf4:	add    rbx,0x6
   14003bdf8:	jmp    0x14003bdfe
   14003bdfa:	add    rbx,0x2
   14003bdfe:	cmp    WORD PTR [rbx],bp
   14003be01:	je     0x14003bdfa
   14003be03:	cmp    WORD PTR [rbx],0x3d
   14003be07:	jne    0x14003be8d
   14003be0d:	add    rbx,0x2
   14003be11:	cmp    WORD PTR [rbx],bp
   14003be14:	je     0x14003be0d
   14003be16:	mov    r8d,0x5
   14003be1c:	lea    rdx,[rip+0x1bcb5]        # 0x140057ad8
   14003be23:	mov    rcx,rbx
   14003be26:	call   0x14002c5a8
   14003be2b:	test   eax,eax
   14003be2d:	jne    0x14003be39
   14003be2f:	add    rbx,0xa
   14003be33:	bts    DWORD PTR [rdi],0x12
   14003be37:	jmp    0x14003be83
   14003be39:	mov    r8d,0x8
   14003be3f:	lea    rdx,[rip+0x1bca2]        # 0x140057ae8
   14003be46:	mov    rcx,rbx
   14003be49:	call   0x14002c5a8
   14003be4e:	test   eax,eax
   14003be50:	jne    0x14003be5c
   14003be52:	add    rbx,0x10
   14003be56:	bts    DWORD PTR [rdi],0x11
   14003be5a:	jmp    0x14003be83
   14003be5c:	mov    r8d,0x7
   14003be62:	lea    rdx,[rip+0x1bc8f]        # 0x140057af8
   14003be69:	mov    rcx,rbx
   14003be6c:	call   0x14002c5a8
   14003be71:	test   eax,eax
   14003be73:	jne    0x14003be8d
   14003be75:	add    rbx,0xe
   14003be79:	bts    DWORD PTR [rdi],0x10
   14003be7d:	jmp    0x14003be83
   14003be7f:	add    rbx,0x2
   14003be83:	cmp    WORD PTR [rbx],bp
   14003be86:	je     0x14003be7f
   14003be88:	jmp    0x14003bdc5
   14003be8d:	call   0x140032c50
   14003be92:	mov    DWORD PTR [rax],0x16
   14003be98:	call   0x1400307d0
   14003be9d:	mov    rbx,QWORD PTR [rsp+0x40]
   14003bea2:	mov    rax,rdi
   14003bea5:	mov    rbp,QWORD PTR [rsp+0x48]
   14003beaa:	mov    rsi,QWORD PTR [rsp+0x50]
   14003beaf:	add    rsp,0x30
   14003beb3:	pop    rdi
   14003beb4:	ret    
   14003beb5:	int3   
   14003beb6:	int3   
   14003beb7:	int3   
   14003beb8:	mov    rax,rsp
   14003bebb:	mov    QWORD PTR [rax+0x8],rbx
   14003bebf:	mov    QWORD PTR [rax+0x10],rbp
   14003bec3:	mov    QWORD PTR [rax+0x20],rsi
   14003bec7:	push   rdi
   14003bec8:	sub    rsp,0x50
   14003becc:	mov    rbp,rcx
   14003becf:	mov    rdi,r9
   14003bed2:	lea    rcx,[rax-0x18]
   14003bed6:	mov    esi,r8d
   14003bed9:	call   0x14003bbf4
   14003bede:	xor    ebx,ebx
   14003bee0:	movsd  xmm0,QWORD PTR [rax]
   14003bee4:	mov    eax,DWORD PTR [rax+0x8]
   14003bee7:	movsd  QWORD PTR [rsp+0x30],xmm0
   14003beed:	mov    DWORD PTR [rsp+0x38],eax
   14003bef1:	cmp    al,bl
   14003bef3:	je     0x14003bf3c
   14003bef5:	mov    r8d,DWORD PTR [rsp+0x30]
   14003befa:	lea    rcx,[rsp+0x70]
   14003beff:	mov    r9d,esi
   14003bf02:	mov    DWORD PTR [rsp+0x20],0x180
   14003bf0a:	mov    rdx,rbp
   14003bf0d:	call   0x140045f70
   14003bf12:	test   eax,eax
   14003bf14:	jne    0x14003bf3c
   14003bf16:	inc    DWORD PTR [rip+0x3a9cc]        # 0x1400768e8
   14003bf1c:	mov    eax,DWORD PTR [rsp+0x34]
   14003bf20:	lock or DWORD PTR [rdi+0x14],eax
   14003bf24:	mov    eax,DWORD PTR [rsp+0x70]
   14003bf28:	mov    DWORD PTR [rdi+0x10],ebx
   14003bf2b:	mov    QWORD PTR [rdi+0x28],rbx
   14003bf2f:	mov    QWORD PTR [rdi+0x8],rbx
   14003bf33:	mov    QWORD PTR [rdi],rbx
   14003bf36:	mov    rbx,rdi
   14003bf39:	mov    DWORD PTR [rdi+0x18],eax
   14003bf3c:	mov    rbp,QWORD PTR [rsp+0x68]
   14003bf41:	mov    rax,rbx
   14003bf44:	mov    rbx,QWORD PTR [rsp+0x60]
   14003bf49:	mov    rsi,QWORD PTR [rsp+0x78]
   14003bf4e:	add    rsp,0x50
   14003bf52:	pop    rdi
   14003bf53:	ret    
   14003bf54:	mov    QWORD PTR [rsp+0x8],rbx
   14003bf59:	mov    QWORD PTR [rsp+0x20],r9
   14003bf5e:	push   rdi
   14003bf5f:	sub    rsp,0x20
   14003bf63:	mov    rdi,r9
   14003bf66:	mov    rbx,r8
   14003bf69:	mov    ecx,DWORD PTR [rdx]
   14003bf6b:	call   0x14003fe98
   14003bf70:	nop
   14003bf71:	mov    rax,QWORD PTR [rbx]
   14003bf74:	movsxd rcx,DWORD PTR [rax]
   14003bf77:	mov    rdx,rcx
   14003bf7a:	mov    rax,rcx
   14003bf7d:	sar    rax,0x6
   14003bf81:	lea    r8,[rip+0x3ad38]        # 0x140076cc0
   14003bf88:	and    edx,0x3f
   14003bf8b:	shl    rdx,0x6
   14003bf8f:	mov    rax,QWORD PTR [r8+rax*8]
   14003bf93:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14003bf98:	je     0x14003bfa3
   14003bf9a:	call   0x14003c06c
   14003bf9f:	mov    ebx,eax
   14003bfa1:	jmp    0x14003bfb1
   14003bfa3:	call   0x140032c50
   14003bfa8:	mov    DWORD PTR [rax],0x9
   14003bfae:	or     ebx,0xffffffff
   14003bfb1:	mov    ecx,DWORD PTR [rdi]
   14003bfb3:	call   0x14003ff7c
   14003bfb8:	mov    eax,ebx
   14003bfba:	mov    rbx,QWORD PTR [rsp+0x30]
   14003bfbf:	add    rsp,0x20
   14003bfc3:	pop    rdi
   14003bfc4:	ret    
   14003bfc5:	int3   
   14003bfc6:	int3   
   14003bfc7:	int3   
   14003bfc8:	mov    DWORD PTR [rsp+0x8],ecx
   14003bfcc:	sub    rsp,0x38
   14003bfd0:	movsxd rdx,ecx
   14003bfd3:	cmp    edx,0xfffffffe
   14003bfd6:	jne    0x14003bfed
   14003bfd8:	call   0x140032c30
   14003bfdd:	and    DWORD PTR [rax],0x0
   14003bfe0:	call   0x140032c50
   14003bfe5:	mov    DWORD PTR [rax],0x9
   14003bfeb:	jmp    0x14003c061
   14003bfed:	test   ecx,ecx
   14003bfef:	js     0x14003c049
   14003bff1:	cmp    edx,DWORD PTR [rip+0x3b0c9]        # 0x1400770c0
   14003bff7:	jae    0x14003c049
   14003bff9:	mov    rcx,rdx
   14003bffc:	lea    r8,[rip+0x3acbd]        # 0x140076cc0
   14003c003:	and    ecx,0x3f
   14003c006:	mov    rax,rdx
   14003c009:	sar    rax,0x6
   14003c00d:	shl    rcx,0x6
   14003c011:	mov    rax,QWORD PTR [r8+rax*8]
   14003c015:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   14003c01a:	je     0x14003c049
   14003c01c:	lea    rax,[rsp+0x40]
   14003c021:	mov    DWORD PTR [rsp+0x50],edx
   14003c025:	mov    DWORD PTR [rsp+0x58],edx
   14003c029:	lea    r9,[rsp+0x50]
   14003c02e:	lea    rdx,[rsp+0x58]
   14003c033:	mov    QWORD PTR [rsp+0x20],rax
   14003c038:	lea    r8,[rsp+0x20]
   14003c03d:	lea    rcx,[rsp+0x48]
   14003c042:	call   0x14003bf54
   14003c047:	jmp    0x14003c064
   14003c049:	call   0x140032c30
   14003c04e:	and    DWORD PTR [rax],0x0
   14003c051:	call   0x140032c50
   14003c056:	mov    DWORD PTR [rax],0x9
   14003c05c:	call   0x1400307d0
   14003c061:	or     eax,0xffffffff
   14003c064:	add    rsp,0x38
   14003c068:	ret    
   14003c069:	int3   
   14003c06a:	int3   
   14003c06b:	int3   
   14003c06c:	mov    QWORD PTR [rsp+0x8],rbx
   14003c071:	push   rdi
   14003c072:	sub    rsp,0x20
   14003c076:	movsxd rdi,ecx
   14003c079:	mov    ecx,edi
   14003c07b:	call   0x14004018c
   14003c080:	cmp    rax,0xffffffffffffffff
   14003c084:	jne    0x14003c08a
   14003c086:	xor    ebx,ebx
   14003c088:	jmp    0x14003c0e1
   14003c08a:	mov    rax,QWORD PTR [rip+0x3ac2f]        # 0x140076cc0
   14003c091:	mov    ecx,0x2
   14003c096:	cmp    edi,0x1
   14003c099:	jne    0x14003c0a4
   14003c09b:	test   BYTE PTR [rax+0xb8],dil
   14003c0a2:	jne    0x14003c0ae
   14003c0a4:	cmp    edi,ecx
   14003c0a6:	jne    0x14003c0c5
   14003c0a8:	test   BYTE PTR [rax+0x78],0x1
   14003c0ac:	je     0x14003c0c5
   14003c0ae:	call   0x14004018c
   14003c0b3:	mov    ecx,0x1
   14003c0b8:	mov    rbx,rax
   14003c0bb:	call   0x14004018c
   14003c0c0:	cmp    rax,rbx
   14003c0c3:	je     0x14003c086
   14003c0c5:	mov    ecx,edi
   14003c0c7:	call   0x14004018c
   14003c0cc:	mov    rcx,rax
   14003c0cf:	call   QWORD PTR [rip+0xeffb]        # 0x14004b0d0
   14003c0d5:	test   eax,eax
   14003c0d7:	jne    0x14003c086
   14003c0d9:	call   QWORD PTR [rip+0xf001]        # 0x14004b0e0
   14003c0df:	mov    ebx,eax
   14003c0e1:	mov    ecx,edi
   14003c0e3:	call   0x1400400d0
   14003c0e8:	mov    rdx,rdi
   14003c0eb:	lea    r8,[rip+0x3abce]        # 0x140076cc0
   14003c0f2:	and    edx,0x3f
   14003c0f5:	mov    rcx,rdi
   14003c0f8:	sar    rcx,0x6
   14003c0fc:	shl    rdx,0x6
   14003c100:	mov    rcx,QWORD PTR [r8+rcx*8]
   14003c104:	mov    BYTE PTR [rcx+rdx*1+0x38],0x0
   14003c109:	test   ebx,ebx
   14003c10b:	je     0x14003c119
   14003c10d:	mov    ecx,ebx
   14003c10f:	call   0x140032be0
   14003c114:	or     eax,0xffffffff
   14003c117:	jmp    0x14003c11b
   14003c119:	xor    eax,eax
   14003c11b:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c120:	add    rsp,0x20
   14003c124:	pop    rdi
   14003c125:	ret    
   14003c126:	int3   
   14003c127:	int3   
   14003c128:	rex push rbx
   14003c12a:	sub    rsp,0x20
   14003c12e:	mov    rbx,rcx
   14003c131:	mov    eax,DWORD PTR [rcx+0x14]
   14003c134:	shr    eax,0xd
   14003c137:	test   al,0x1
   14003c139:	je     0x14003c162
   14003c13b:	mov    eax,DWORD PTR [rcx+0x14]
   14003c13e:	shr    eax,0x6
   14003c141:	test   al,0x1
   14003c143:	je     0x14003c162
   14003c145:	mov    rcx,QWORD PTR [rcx+0x8]
   14003c149:	call   0x140038c70
   14003c14e:	lock and DWORD PTR [rbx+0x14],0xfffffebf
   14003c156:	xor    eax,eax
   14003c158:	mov    QWORD PTR [rbx+0x8],rax
   14003c15c:	mov    QWORD PTR [rbx],rax
   14003c15f:	mov    DWORD PTR [rbx+0x10],eax
   14003c162:	add    rsp,0x20
   14003c166:	pop    rbx
   14003c167:	ret    
   14003c168:	mov    QWORD PTR [rsp+0x8],rbx
   14003c16d:	mov    QWORD PTR [rsp+0x20],r9
   14003c172:	push   rdi
   14003c173:	sub    rsp,0x20
   14003c177:	mov    rdi,r9
   14003c17a:	mov    rbx,r8
   14003c17d:	mov    ecx,DWORD PTR [rdx]
   14003c17f:	call   0x14003fe98
   14003c184:	nop
   14003c185:	mov    rax,QWORD PTR [rbx]
   14003c188:	movsxd rcx,DWORD PTR [rax]
   14003c18b:	mov    rdx,rcx
   14003c18e:	mov    rax,rcx
   14003c191:	sar    rax,0x6
   14003c195:	lea    r8,[rip+0x3ab24]        # 0x140076cc0
   14003c19c:	and    edx,0x3f
   14003c19f:	shl    rdx,0x6
   14003c1a3:	mov    rax,QWORD PTR [r8+rax*8]
   14003c1a7:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14003c1ac:	je     0x14003c1d2
   14003c1ae:	call   0x14004018c
   14003c1b3:	mov    rcx,rax
   14003c1b6:	call   QWORD PTR [rip+0xf15c]        # 0x14004b318
   14003c1bc:	xor    ebx,ebx
   14003c1be:	test   eax,eax
   14003c1c0:	jne    0x14003c1e0
   14003c1c2:	call   0x140032c30
   14003c1c7:	mov    rbx,rax
   14003c1ca:	call   QWORD PTR [rip+0xef10]        # 0x14004b0e0
   14003c1d0:	mov    DWORD PTR [rbx],eax
   14003c1d2:	call   0x140032c50
   14003c1d7:	mov    DWORD PTR [rax],0x9
   14003c1dd:	or     ebx,0xffffffff
   14003c1e0:	mov    ecx,DWORD PTR [rdi]
   14003c1e2:	call   0x14003ff7c
   14003c1e7:	mov    eax,ebx
   14003c1e9:	mov    rbx,QWORD PTR [rsp+0x30]
   14003c1ee:	add    rsp,0x20
   14003c1f2:	pop    rdi
   14003c1f3:	ret    
   14003c1f4:	mov    DWORD PTR [rsp+0x8],ecx
   14003c1f8:	sub    rsp,0x38
   14003c1fc:	movsxd rdx,ecx
   14003c1ff:	cmp    edx,0xfffffffe
   14003c202:	jne    0x14003c211
   14003c204:	call   0x140032c50
   14003c209:	mov    DWORD PTR [rax],0x9
   14003c20f:	jmp    0x14003c27d
   14003c211:	test   ecx,ecx
   14003c213:	js     0x14003c26d
   14003c215:	cmp    edx,DWORD PTR [rip+0x3aea5]        # 0x1400770c0
   14003c21b:	jae    0x14003c26d
   14003c21d:	mov    rcx,rdx
   14003c220:	lea    r8,[rip+0x3aa99]        # 0x140076cc0
   14003c227:	and    ecx,0x3f
   14003c22a:	mov    rax,rdx
   14003c22d:	sar    rax,0x6
   14003c231:	shl    rcx,0x6
   14003c235:	mov    rax,QWORD PTR [r8+rax*8]
   14003c239:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   14003c23e:	je     0x14003c26d
   14003c240:	lea    rax,[rsp+0x40]
   14003c245:	mov    DWORD PTR [rsp+0x50],edx
   14003c249:	mov    DWORD PTR [rsp+0x58],edx
   14003c24d:	lea    r9,[rsp+0x50]
   14003c252:	lea    rdx,[rsp+0x58]
   14003c257:	mov    QWORD PTR [rsp+0x20],rax
   14003c25c:	lea    r8,[rsp+0x20]
   14003c261:	lea    rcx,[rsp+0x48]
   14003c266:	call   0x14003c168
   14003c26b:	jmp    0x14003c280
   14003c26d:	call   0x140032c50
   14003c272:	mov    DWORD PTR [rax],0x9
   14003c278:	call   0x1400307d0
   14003c27d:	or     eax,0xffffffff
   14003c280:	add    rsp,0x38
   14003c284:	ret    
   14003c285:	int3   
   14003c286:	int3   
   14003c287:	int3   
   14003c288:	mov    QWORD PTR [rsp+0x8],rbx
   14003c28d:	push   rbp
   14003c28e:	push   rsi
   14003c28f:	push   rdi
   14003c290:	push   r12
   14003c292:	push   r13
   14003c294:	push   r14
   14003c296:	push   r15
   14003c298:	mov    rbp,rsp
   14003c29b:	sub    rsp,0x80
   14003c2a2:	mov    rax,QWORD PTR [rip+0x34da7]        # 0x140071050
   14003c2a9:	xor    rax,rsp
   14003c2ac:	mov    QWORD PTR [rbp-0x10],rax
   14003c2b0:	movsxd rsi,edx
   14003c2b3:	lea    rax,[rip+0x3aa06]        # 0x140076cc0
   14003c2ba:	mov    r15,rsi
   14003c2bd:	mov    r12d,r9d
   14003c2c0:	sar    r15,0x6
   14003c2c4:	and    esi,0x3f
   14003c2c7:	shl    rsi,0x6
   14003c2cb:	mov    r14,r8
   14003c2ce:	mov    QWORD PTR [rbp-0x28],r8
   14003c2d2:	mov    rbx,rcx
   14003c2d5:	add    r12,r8
   14003c2d8:	mov    rax,QWORD PTR [rax+r15*8]
   14003c2dc:	mov    rax,QWORD PTR [rax+rsi*1+0x28]
   14003c2e1:	mov    QWORD PTR [rbp-0x30],rax
   14003c2e5:	call   QWORD PTR [rip+0xf035]        # 0x14004b320
   14003c2eb:	xor    edx,edx
   14003c2ed:	mov    DWORD PTR [rbp-0x34],eax
   14003c2f0:	mov    QWORD PTR [rbx],rdx
   14003c2f3:	mov    rdi,r14
   14003c2f6:	mov    DWORD PTR [rbx+0x8],edx
   14003c2f9:	cmp    r14,r12
   14003c2fc:	jae    0x14003c466
   14003c302:	mov    r13b,BYTE PTR [rdi]
   14003c305:	lea    r14,[rip+0x3a9b4]        # 0x140076cc0
   14003c30c:	mov    WORD PTR [rbp-0x40],dx
   14003c310:	mov    rdx,QWORD PTR [r14+r15*8]
   14003c314:	mov    cl,BYTE PTR [rdx+rsi*1+0x3d]
   14003c318:	test   cl,0x4
   14003c31b:	je     0x14003c33b
   14003c31d:	mov    al,BYTE PTR [rdx+rsi*1+0x3e]
   14003c321:	and    cl,0xfb
   14003c324:	mov    BYTE PTR [rdx+rsi*1+0x3d],cl
   14003c328:	mov    r8d,0x2
   14003c32e:	lea    rdx,[rbp-0x20]
   14003c332:	mov    BYTE PTR [rbp-0x20],al
   14003c335:	mov    BYTE PTR [rbp-0x1f],r13b
   14003c339:	jmp    0x14003c380
   14003c33b:	call   0x140035e00
   14003c340:	movzx  ecx,BYTE PTR [rdi]
   14003c343:	mov    edx,0x8000
   14003c348:	test   WORD PTR [rax+rcx*2],dx
   14003c34c:	je     0x14003c377
   14003c34e:	cmp    rdi,r12
   14003c351:	jae    0x14003c446
   14003c357:	mov    r8d,0x2
   14003c35d:	lea    rcx,[rbp-0x40]
   14003c361:	mov    rdx,rdi
   14003c364:	call   0x14003960c
   14003c369:	cmp    eax,0xffffffff
   14003c36c:	je     0x14003c466
   14003c372:	inc    rdi
   14003c375:	jmp    0x14003c392
   14003c377:	mov    r8d,0x1
   14003c37d:	mov    rdx,rdi
   14003c380:	lea    rcx,[rbp-0x40]
   14003c384:	call   0x14003960c
   14003c389:	cmp    eax,0xffffffff
   14003c38c:	je     0x14003c466
   14003c392:	and    QWORD PTR [rsp+0x38],0x0
   14003c398:	lea    rax,[rbp-0x18]
   14003c39c:	and    QWORD PTR [rsp+0x30],0x0
   14003c3a2:	lea    r8,[rbp-0x40]
   14003c3a6:	mov    ecx,DWORD PTR [rbp-0x34]
   14003c3a9:	mov    r9d,0x1
   14003c3af:	mov    DWORD PTR [rsp+0x28],0x5
   14003c3b7:	xor    edx,edx
   14003c3b9:	mov    QWORD PTR [rsp+0x20],rax
   14003c3be:	inc    rdi
   14003c3c1:	call   QWORD PTR [rip+0xed69]        # 0x14004b130
   14003c3c7:	mov    r14d,eax
   14003c3ca:	test   eax,eax
   14003c3cc:	je     0x14003c466
   14003c3d2:	mov    rcx,QWORD PTR [rbp-0x30]
   14003c3d6:	lea    r9,[rbp-0x38]
   14003c3da:	and    QWORD PTR [rsp+0x20],0x0
   14003c3e0:	lea    rdx,[rbp-0x18]
   14003c3e4:	mov    r8d,eax
   14003c3e7:	call   QWORD PTR [rip+0xed83]        # 0x14004b170
   14003c3ed:	xor    edx,edx
   14003c3ef:	test   eax,eax
   14003c3f1:	je     0x14003c45e
   14003c3f3:	mov    ecx,DWORD PTR [rbx+0x8]
   14003c3f6:	sub    ecx,DWORD PTR [rbp-0x28]
   14003c3f9:	add    ecx,edi
   14003c3fb:	mov    DWORD PTR [rbx+0x4],ecx
   14003c3fe:	cmp    DWORD PTR [rbp-0x38],r14d
   14003c402:	jb     0x14003c466
   14003c404:	cmp    r13b,0xa
   14003c408:	jne    0x14003c43e
   14003c40a:	mov    rcx,QWORD PTR [rbp-0x30]
   14003c40e:	lea    eax,[rdx+0xd]
   14003c411:	mov    QWORD PTR [rsp+0x20],rdx
   14003c416:	lea    r8d,[rdx+0x1]
   14003c41a:	lea    rdx,[rbp-0x3c]
   14003c41e:	mov    WORD PTR [rbp-0x3c],ax
   14003c422:	lea    r9,[rbp-0x38]
   14003c426:	call   QWORD PTR [rip+0xed44]        # 0x14004b170
   14003c42c:	xor    edx,edx
   14003c42e:	test   eax,eax
   14003c430:	je     0x14003c45e
   14003c432:	cmp    DWORD PTR [rbp-0x38],0x1
   14003c436:	jb     0x14003c466
   14003c438:	inc    DWORD PTR [rbx+0x8]
   14003c43b:	inc    DWORD PTR [rbx+0x4]
   14003c43e:	cmp    rdi,r12
   14003c441:	jmp    0x14003c2fc
   14003c446:	mov    al,BYTE PTR [rdi]
   14003c448:	mov    rcx,QWORD PTR [r14+r15*8]
   14003c44c:	mov    BYTE PTR [rcx+rsi*1+0x3e],al
   14003c450:	mov    rax,QWORD PTR [r14+r15*8]
   14003c454:	or     BYTE PTR [rax+rsi*1+0x3d],0x4
   14003c459:	inc    DWORD PTR [rbx+0x4]
   14003c45c:	jmp    0x14003c466
   14003c45e:	call   QWORD PTR [rip+0xec7c]        # 0x14004b0e0
   14003c464:	mov    DWORD PTR [rbx],eax
   14003c466:	mov    rax,rbx
   14003c469:	mov    rcx,QWORD PTR [rbp-0x10]
   14003c46d:	xor    rcx,rsp
   14003c470:	call   0x140025df0
   14003c475:	mov    rbx,QWORD PTR [rsp+0xc0]
   14003c47d:	add    rsp,0x80
   14003c484:	pop    r15
   14003c486:	pop    r14
   14003c488:	pop    r13
   14003c48a:	pop    r12
   14003c48c:	pop    rdi
   14003c48d:	pop    rsi
   14003c48e:	pop    rbp
   14003c48f:	ret    
   14003c490:	mov    QWORD PTR [rsp+0x8],rbx
   14003c495:	mov    QWORD PTR [rsp+0x18],rbp
   14003c49a:	push   rsi
   14003c49b:	push   rdi
   14003c49c:	push   r14
   14003c49e:	mov    eax,0x1450
   14003c4a3:	call   0x1400267b0
   14003c4a8:	sub    rsp,rax
   14003c4ab:	mov    rax,QWORD PTR [rip+0x34b9e]        # 0x140071050
   14003c4b2:	xor    rax,rsp
   14003c4b5:	mov    QWORD PTR [rsp+0x1440],rax
   14003c4bd:	mov    rbx,rcx
   14003c4c0:	movsxd r10,edx
   14003c4c3:	mov    rax,r10
   14003c4c6:	mov    ebp,r9d
   14003c4c9:	sar    rax,0x6
   14003c4cd:	lea    rcx,[rip+0x3a7ec]        # 0x140076cc0
   14003c4d4:	and    r10d,0x3f
   14003c4d8:	add    rbp,r8
   14003c4db:	and    DWORD PTR [rbx],0x0
   14003c4de:	mov    rsi,r8
   14003c4e1:	and    DWORD PTR [rbx+0x4],0x0
   14003c4e5:	mov    rax,QWORD PTR [rcx+rax*8]
   14003c4e9:	and    DWORD PTR [rbx+0x8],0x0
   14003c4ed:	shl    r10,0x6
   14003c4f1:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14003c4f6:	cmp    r8,rbp
   14003c4f9:	jae    0x14003c56a
   14003c4fb:	lea    rdi,[rsp+0x40]
   14003c500:	cmp    rsi,rbp
   14003c503:	jae    0x14003c529
   14003c505:	mov    al,BYTE PTR [rsi]
   14003c507:	inc    rsi
   14003c50a:	cmp    al,0xa
   14003c50c:	jne    0x14003c517
   14003c50e:	inc    DWORD PTR [rbx+0x8]
   14003c511:	mov    BYTE PTR [rdi],0xd
   14003c514:	inc    rdi
   14003c517:	mov    BYTE PTR [rdi],al
   14003c519:	inc    rdi
   14003c51c:	lea    rax,[rsp+0x143f]
   14003c524:	cmp    rdi,rax
   14003c527:	jb     0x14003c500
   14003c529:	and    QWORD PTR [rsp+0x20],0x0
   14003c52f:	lea    rax,[rsp+0x40]
   14003c534:	sub    edi,eax
   14003c536:	lea    r9,[rsp+0x30]
   14003c53b:	mov    r8d,edi
   14003c53e:	lea    rdx,[rsp+0x40]
   14003c543:	mov    rcx,r14
   14003c546:	call   QWORD PTR [rip+0xec24]        # 0x14004b170
   14003c54c:	test   eax,eax
   14003c54e:	je     0x14003c562
   14003c550:	mov    eax,DWORD PTR [rsp+0x30]
   14003c554:	add    DWORD PTR [rbx+0x4],eax
   14003c557:	cmp    eax,edi
   14003c559:	jb     0x14003c56a
   14003c55b:	cmp    rsi,rbp
   14003c55e:	jb     0x14003c4fb
   14003c560:	jmp    0x14003c56a
   14003c562:	call   QWORD PTR [rip+0xeb78]        # 0x14004b0e0
   14003c568:	mov    DWORD PTR [rbx],eax
   14003c56a:	mov    rax,rbx
   14003c56d:	mov    rcx,QWORD PTR [rsp+0x1440]
   14003c575:	xor    rcx,rsp
   14003c578:	call   0x140025df0
   14003c57d:	lea    r11,[rsp+0x1450]
   14003c585:	mov    rbx,QWORD PTR [r11+0x20]
   14003c589:	mov    rbp,QWORD PTR [r11+0x30]
   14003c58d:	mov    rsp,r11
   14003c590:	pop    r14
   14003c592:	pop    rdi
   14003c593:	pop    rsi
   14003c594:	ret    
   14003c595:	int3   
   14003c596:	int3   
   14003c597:	int3   
   14003c598:	mov    QWORD PTR [rsp+0x8],rbx
   14003c59d:	mov    QWORD PTR [rsp+0x18],rbp
   14003c5a2:	push   rsi
   14003c5a3:	push   rdi
   14003c5a4:	push   r14
   14003c5a6:	mov    eax,0x1450
   14003c5ab:	call   0x1400267b0
   14003c5b0:	sub    rsp,rax
   14003c5b3:	mov    rax,QWORD PTR [rip+0x34a96]        # 0x140071050
   14003c5ba:	xor    rax,rsp
   14003c5bd:	mov    QWORD PTR [rsp+0x1440],rax
   14003c5c5:	mov    rdi,rcx
   14003c5c8:	movsxd r10,edx
   14003c5cb:	mov    rax,r10
   14003c5ce:	mov    ebp,r9d
   14003c5d1:	sar    rax,0x6
   14003c5d5:	lea    rcx,[rip+0x3a6e4]        # 0x140076cc0
   14003c5dc:	and    r10d,0x3f
   14003c5e0:	add    rbp,r8
   14003c5e3:	and    DWORD PTR [rdi],0x0
   14003c5e6:	mov    rsi,r8
   14003c5e9:	and    DWORD PTR [rdi+0x4],0x0
   14003c5ed:	mov    rax,QWORD PTR [rcx+rax*8]
   14003c5f1:	and    DWORD PTR [rdi+0x8],0x0
   14003c5f5:	shl    r10,0x6
   14003c5f9:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14003c5fe:	cmp    r8,rbp
   14003c601:	jae    0x14003c689
   14003c607:	lea    rbx,[rsp+0x40]
   14003c60c:	cmp    rsi,rbp
   14003c60f:	jae    0x14003c642
   14003c611:	movzx  eax,WORD PTR [rsi]
   14003c614:	add    rsi,0x2
   14003c618:	cmp    ax,0xa
   14003c61c:	jne    0x14003c62e
   14003c61e:	add    DWORD PTR [rdi+0x8],0x2
   14003c622:	mov    ecx,0xd
   14003c627:	mov    WORD PTR [rbx],cx
   14003c62a:	add    rbx,0x2
   14003c62e:	mov    WORD PTR [rbx],ax
   14003c631:	add    rbx,0x2
   14003c635:	lea    rax,[rsp+0x143e]
   14003c63d:	cmp    rbx,rax
   14003c640:	jb     0x14003c60c
   14003c642:	and    QWORD PTR [rsp+0x20],0x0
   14003c648:	lea    rax,[rsp+0x40]
   14003c64d:	sub    rbx,rax
   14003c650:	lea    r9,[rsp+0x30]
   14003c655:	sar    rbx,1
   14003c658:	lea    rdx,[rsp+0x40]
   14003c65d:	add    ebx,ebx
   14003c65f:	mov    rcx,r14
   14003c662:	mov    r8d,ebx
   14003c665:	call   QWORD PTR [rip+0xeb05]        # 0x14004b170
   14003c66b:	test   eax,eax
   14003c66d:	je     0x14003c681
   14003c66f:	mov    eax,DWORD PTR [rsp+0x30]
   14003c673:	add    DWORD PTR [rdi+0x4],eax
   14003c676:	cmp    eax,ebx
   14003c678:	jb     0x14003c689
   14003c67a:	cmp    rsi,rbp
   14003c67d:	jb     0x14003c607
   14003c67f:	jmp    0x14003c689
   14003c681:	call   QWORD PTR [rip+0xea59]        # 0x14004b0e0
   14003c687:	mov    DWORD PTR [rdi],eax
   14003c689:	mov    rax,rdi
   14003c68c:	mov    rcx,QWORD PTR [rsp+0x1440]
   14003c694:	xor    rcx,rsp
   14003c697:	call   0x140025df0
   14003c69c:	lea    r11,[rsp+0x1450]
   14003c6a4:	mov    rbx,QWORD PTR [r11+0x20]
   14003c6a8:	mov    rbp,QWORD PTR [r11+0x30]
   14003c6ac:	mov    rsp,r11
   14003c6af:	pop    r14
   14003c6b1:	pop    rdi
   14003c6b2:	pop    rsi
   14003c6b3:	ret    
   14003c6b4:	mov    QWORD PTR [rsp+0x8],rbx
   14003c6b9:	mov    QWORD PTR [rsp+0x18],rbp
   14003c6be:	push   rsi
   14003c6bf:	push   rdi
   14003c6c0:	push   r12
   14003c6c2:	push   r14
   14003c6c4:	push   r15
   14003c6c6:	mov    eax,0x1470
   14003c6cb:	call   0x1400267b0
   14003c6d0:	sub    rsp,rax
   14003c6d3:	mov    rax,QWORD PTR [rip+0x34976]        # 0x140071050
   14003c6da:	xor    rax,rsp
   14003c6dd:	mov    QWORD PTR [rsp+0x1460],rax
   14003c6e5:	movsxd r10,edx
   14003c6e8:	mov    rbx,rcx
   14003c6eb:	mov    rax,r10
   14003c6ee:	mov    r14d,r9d
   14003c6f1:	sar    rax,0x6
   14003c6f5:	lea    rcx,[rip+0x3a5c4]        # 0x140076cc0
   14003c6fc:	and    r10d,0x3f
   14003c700:	add    r14,r8
   14003c703:	shl    r10,0x6
   14003c707:	mov    r15,r8
   14003c70a:	mov    rdi,r8
   14003c70d:	mov    rax,QWORD PTR [rcx+rax*8]
   14003c711:	mov    r12,QWORD PTR [rax+r10*1+0x28]
   14003c716:	xor    eax,eax
   14003c718:	and    DWORD PTR [rbx],0x0
   14003c71b:	mov    QWORD PTR [rbx+0x4],rax
   14003c71f:	cmp    r8,r14
   14003c722:	jae    0x14003c7f7
   14003c728:	lea    rax,[rsp+0x50]
   14003c72d:	cmp    rdi,r14
   14003c730:	jae    0x14003c75f
   14003c732:	movzx  ecx,WORD PTR [rdi]
   14003c735:	add    rdi,0x2
   14003c739:	cmp    cx,0xa
   14003c73d:	jne    0x14003c74b
   14003c73f:	mov    edx,0xd
   14003c744:	mov    WORD PTR [rax],dx
   14003c747:	add    rax,0x2
   14003c74b:	mov    WORD PTR [rax],cx
   14003c74e:	add    rax,0x2
   14003c752:	lea    rcx,[rsp+0x6f8]
   14003c75a:	cmp    rax,rcx
   14003c75d:	jb     0x14003c72d
   14003c75f:	and    QWORD PTR [rsp+0x38],0x0
   14003c765:	lea    rcx,[rsp+0x50]
   14003c76a:	and    QWORD PTR [rsp+0x30],0x0
   14003c770:	lea    r8,[rsp+0x50]
   14003c775:	sub    rax,rcx
   14003c778:	mov    DWORD PTR [rsp+0x28],0xd55
   14003c780:	lea    rcx,[rsp+0x700]
   14003c788:	sar    rax,1
   14003c78b:	mov    QWORD PTR [rsp+0x20],rcx
   14003c790:	mov    r9d,eax
   14003c793:	mov    ecx,0xfde9
   14003c798:	xor    edx,edx
   14003c79a:	call   QWORD PTR [rip+0xe990]        # 0x14004b130
   14003c7a0:	mov    ebp,eax
   14003c7a2:	test   eax,eax
   14003c7a4:	je     0x14003c7ef
   14003c7a6:	xor    esi,esi
   14003c7a8:	test   eax,eax
   14003c7aa:	je     0x14003c7df
   14003c7ac:	and    QWORD PTR [rsp+0x20],0x0
   14003c7b2:	lea    rdx,[rsp+0x700]
   14003c7ba:	mov    ecx,esi
   14003c7bc:	lea    r9,[rsp+0x40]
   14003c7c1:	mov    r8d,ebp
   14003c7c4:	add    rdx,rcx
   14003c7c7:	mov    rcx,r12
   14003c7ca:	sub    r8d,esi
   14003c7cd:	call   QWORD PTR [rip+0xe99d]        # 0x14004b170
   14003c7d3:	test   eax,eax
   14003c7d5:	je     0x14003c7ef
   14003c7d7:	add    esi,DWORD PTR [rsp+0x40]
   14003c7db:	cmp    esi,ebp
   14003c7dd:	jb     0x14003c7ac
   14003c7df:	mov    eax,edi
   14003c7e1:	sub    eax,r15d
   14003c7e4:	mov    DWORD PTR [rbx+0x4],eax
   14003c7e7:	cmp    rdi,r14
   14003c7ea:	jmp    0x14003c722
   14003c7ef:	call   QWORD PTR [rip+0xe8eb]        # 0x14004b0e0
   14003c7f5:	mov    DWORD PTR [rbx],eax
   14003c7f7:	mov    rax,rbx
   14003c7fa:	mov    rcx,QWORD PTR [rsp+0x1460]
   14003c802:	xor    rcx,rsp
   14003c805:	call   0x140025df0
   14003c80a:	lea    r11,[rsp+0x1470]
   14003c812:	mov    rbx,QWORD PTR [r11+0x30]
   14003c816:	mov    rbp,QWORD PTR [r11+0x40]
   14003c81a:	mov    rsp,r11
   14003c81d:	pop    r15
   14003c81f:	pop    r14
   14003c821:	pop    r12
   14003c823:	pop    rdi
   14003c824:	pop    rsi
   14003c825:	ret    
   14003c826:	int3   
   14003c827:	int3   
   14003c828:	mov    QWORD PTR [rsp+0x10],rbx
   14003c82d:	mov    QWORD PTR [rsp+0x18],rsi
   14003c832:	mov    DWORD PTR [rsp+0x8],ecx
   14003c836:	push   rdi
   14003c837:	push   r12
   14003c839:	push   r13
   14003c83b:	push   r14
   14003c83d:	push   r15
   14003c83f:	sub    rsp,0x20
   14003c843:	mov    r15d,r8d
   14003c846:	mov    r12,rdx
   14003c849:	movsxd rbx,ecx
   14003c84c:	cmp    ebx,0xfffffffe
   14003c84f:	jne    0x14003c869
   14003c851:	call   0x140032c30
   14003c856:	and    DWORD PTR [rax],0x0
   14003c859:	call   0x140032c50
   14003c85e:	mov    DWORD PTR [rax],0x9
   14003c864:	jmp    0x14003c8f9
   14003c869:	test   ecx,ecx
   14003c86b:	js     0x14003c8e1
   14003c86d:	cmp    ebx,DWORD PTR [rip+0x3a84d]        # 0x1400770c0
   14003c873:	jae    0x14003c8e1
   14003c875:	mov    rsi,rbx
   14003c878:	mov    r14,rbx
   14003c87b:	sar    r14,0x6
   14003c87f:	lea    r13,[rip+0x3a43a]        # 0x140076cc0
   14003c886:	and    esi,0x3f
   14003c889:	shl    rsi,0x6
   14003c88d:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14003c892:	movzx  ecx,BYTE PTR [rax+rsi*1+0x38]
   14003c897:	and    ecx,0x1
   14003c89a:	je     0x14003c8e1
   14003c89c:	mov    ecx,ebx
   14003c89e:	call   0x14003fe98
   14003c8a3:	or     edi,0xffffffff
   14003c8a6:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14003c8ab:	test   BYTE PTR [rax+rsi*1+0x38],0x1
   14003c8b0:	jne    0x14003c8c7
   14003c8b2:	call   0x140032c50
   14003c8b7:	mov    DWORD PTR [rax],0x9
   14003c8bd:	call   0x140032c30
   14003c8c2:	and    DWORD PTR [rax],0x0
   14003c8c5:	jmp    0x14003c8d6
   14003c8c7:	mov    r8d,r15d
   14003c8ca:	mov    rdx,r12
   14003c8cd:	mov    ecx,ebx
   14003c8cf:	call   0x14003c914
   14003c8d4:	mov    edi,eax
   14003c8d6:	mov    ecx,ebx
   14003c8d8:	call   0x14003ff7c
   14003c8dd:	mov    eax,edi
   14003c8df:	jmp    0x14003c8fc
   14003c8e1:	call   0x140032c30
   14003c8e6:	and    DWORD PTR [rax],0x0
   14003c8e9:	call   0x140032c50
   14003c8ee:	mov    DWORD PTR [rax],0x9
   14003c8f4:	call   0x1400307d0
   14003c8f9:	or     eax,0xffffffff
   14003c8fc:	mov    rbx,QWORD PTR [rsp+0x58]
   14003c901:	mov    rsi,QWORD PTR [rsp+0x60]
   14003c906:	add    rsp,0x20
   14003c90a:	pop    r15
   14003c90c:	pop    r14
   14003c90e:	pop    r13
   14003c910:	pop    r12
   14003c912:	pop    rdi
   14003c913:	ret    
   14003c914:	mov    QWORD PTR [rsp+0x20],rbx
   14003c919:	push   rbp
   14003c91a:	push   rsi
   14003c91b:	push   rdi
   14003c91c:	push   r12
   14003c91e:	push   r13
   14003c920:	push   r14
   14003c922:	push   r15
   14003c924:	mov    rbp,rsp
   14003c927:	sub    rsp,0x60
   14003c92b:	xor    edi,edi
   14003c92d:	mov    r15d,r8d
   14003c930:	movsxd r12,ecx
   14003c933:	mov    rsi,rdx
   14003c936:	test   r8d,r8d
   14003c939:	jne    0x14003c942
   14003c93b:	xor    eax,eax
   14003c93d:	jmp    0x14003cbdd
   14003c942:	test   rdx,rdx
   14003c945:	jne    0x14003c966
   14003c947:	call   0x140032c30
   14003c94c:	mov    DWORD PTR [rax],edi
   14003c94e:	call   0x140032c50
   14003c953:	mov    DWORD PTR [rax],0x16
   14003c959:	call   0x1400307d0
   14003c95e:	or     eax,0xffffffff
   14003c961:	jmp    0x14003cbdd
   14003c966:	mov    r14,r12
   14003c969:	lea    rax,[rip+0x3a350]        # 0x140076cc0
   14003c970:	and    r14d,0x3f
   14003c974:	mov    r13,r12
   14003c977:	sar    r13,0x6
   14003c97b:	shl    r14,0x6
   14003c97f:	mov    QWORD PTR [rbp-0x10],r13
   14003c983:	mov    rcx,QWORD PTR [rax+r13*8]
   14003c987:	mov    bl,BYTE PTR [rcx+r14*1+0x39]
   14003c98c:	lea    eax,[rbx-0x1]
   14003c98f:	cmp    al,0x1
   14003c991:	ja     0x14003c99c
   14003c993:	mov    eax,r15d
   14003c996:	not    eax
   14003c998:	test   al,0x1
   14003c99a:	je     0x14003c947
   14003c99c:	test   BYTE PTR [rcx+r14*1+0x38],0x20
   14003c9a2:	je     0x14003c9b2
   14003c9a4:	xor    edx,edx
   14003c9a6:	mov    ecx,r12d
   14003c9a9:	lea    r8d,[rdx+0x2]
   14003c9ad:	call   0x140046138
   14003c9b2:	mov    ecx,r12d
   14003c9b5:	mov    QWORD PTR [rbp-0x20],rdi
   14003c9b9:	call   0x1400452c8
   14003c9be:	test   eax,eax
   14003c9c0:	je     0x14003cac7
   14003c9c6:	lea    rax,[rip+0x3a2f3]        # 0x140076cc0
   14003c9cd:	mov    rax,QWORD PTR [rax+r13*8]
   14003c9d1:	test   BYTE PTR [rax+r14*1+0x38],0x80
   14003c9d7:	je     0x14003cac7
   14003c9dd:	call   0x140039130
   14003c9e2:	mov    rcx,QWORD PTR [rax+0x90]
   14003c9e9:	cmp    QWORD PTR [rcx+0x138],rdi
   14003c9f0:	jne    0x14003ca08
   14003c9f2:	lea    rax,[rip+0x3a2c7]        # 0x140076cc0
   14003c9f9:	mov    rax,QWORD PTR [rax+r13*8]
   14003c9fd:	cmp    BYTE PTR [rax+r14*1+0x39],dil
   14003ca02:	je     0x14003cac7
   14003ca08:	lea    rax,[rip+0x3a2b1]        # 0x140076cc0
   14003ca0f:	mov    rcx,QWORD PTR [rax+r13*8]
   14003ca13:	lea    rdx,[rbp-0x8]
   14003ca17:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14003ca1c:	call   QWORD PTR [rip+0xe906]        # 0x14004b328
   14003ca22:	test   eax,eax
   14003ca24:	je     0x14003cac7
   14003ca2a:	test   bl,bl
   14003ca2c:	je     0x14003caa9
   14003ca2e:	dec    bl
   14003ca30:	cmp    bl,0x1
   14003ca33:	ja     0x14003cb64
   14003ca39:	and    DWORD PTR [rbp-0x30],edi
   14003ca3c:	lea    r12,[rsi+r15*1]
   14003ca40:	xor    ebx,ebx
   14003ca42:	mov    r15,rsi
   14003ca45:	mov    DWORD PTR [rbp-0x2c],ebx
   14003ca48:	cmp    rsi,r12
   14003ca4b:	jae    0x14003cb5a
   14003ca51:	movzx  r13d,WORD PTR [r15]
   14003ca55:	movzx  ecx,r13w
   14003ca59:	call   0x140046140
   14003ca5e:	cmp    ax,r13w
   14003ca62:	jne    0x14003ca97
   14003ca64:	add    ebx,0x2
   14003ca67:	mov    DWORD PTR [rbp-0x2c],ebx
   14003ca6a:	cmp    r13w,0xa
   14003ca6f:	jne    0x14003ca8c
   14003ca71:	mov    r13d,0xd
   14003ca77:	mov    ecx,r13d
   14003ca7a:	call   0x140046140
   14003ca7f:	cmp    ax,r13w
   14003ca83:	jne    0x14003ca97
   14003ca85:	inc    ebx
   14003ca87:	mov    DWORD PTR [rbp-0x2c],ebx
   14003ca8a:	inc    edi
   14003ca8c:	add    r15,0x2
   14003ca90:	cmp    r15,r12
   14003ca93:	jae    0x14003caa0
   14003ca95:	jmp    0x14003ca51
   14003ca97:	call   QWORD PTR [rip+0xe643]        # 0x14004b0e0
   14003ca9d:	mov    DWORD PTR [rbp-0x30],eax
   14003caa0:	mov    r13,QWORD PTR [rbp-0x10]
   14003caa4:	jmp    0x14003cb5a
   14003caa9:	mov    r9d,r15d
   14003caac:	lea    rcx,[rbp-0x30]
   14003cab0:	mov    r8,rsi
   14003cab3:	mov    edx,r12d
   14003cab6:	call   0x14003c288
   14003cabb:	movsd  xmm0,QWORD PTR [rax]
   14003cabf:	mov    edi,DWORD PTR [rax+0x8]
   14003cac2:	jmp    0x14003cb5f
   14003cac7:	lea    rax,[rip+0x3a1f2]        # 0x140076cc0
   14003cace:	mov    rcx,QWORD PTR [rax+r13*8]
   14003cad2:	test   BYTE PTR [rcx+r14*1+0x38],0x80
   14003cad8:	je     0x14003cb27
   14003cada:	movsx  ecx,bl
   14003cadd:	test   bl,bl
   14003cadf:	je     0x14003cb13
   14003cae1:	sub    ecx,0x1
   14003cae4:	je     0x14003caff
   14003cae6:	cmp    ecx,0x1
   14003cae9:	jne    0x14003cb64
   14003caeb:	mov    r9d,r15d
   14003caee:	lea    rcx,[rbp-0x30]
   14003caf2:	mov    r8,rsi
   14003caf5:	mov    edx,r12d
   14003caf8:	call   0x14003c598
   14003cafd:	jmp    0x14003cabb
   14003caff:	mov    r9d,r15d
   14003cb02:	lea    rcx,[rbp-0x30]
   14003cb06:	mov    r8,rsi
   14003cb09:	mov    edx,r12d
   14003cb0c:	call   0x14003c6b4
   14003cb11:	jmp    0x14003cabb
   14003cb13:	mov    r9d,r15d
   14003cb16:	lea    rcx,[rbp-0x30]
   14003cb1a:	mov    r8,rsi
   14003cb1d:	mov    edx,r12d
   14003cb20:	call   0x14003c490
   14003cb25:	jmp    0x14003cabb
   14003cb27:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14003cb2c:	lea    r9,[rbp-0x2c]
   14003cb30:	and    DWORD PTR [rbp-0x30],edi
   14003cb33:	xor    eax,eax
   14003cb35:	and    QWORD PTR [rsp+0x20],rax
   14003cb3a:	mov    r8d,r15d
   14003cb3d:	mov    rdx,rsi
   14003cb40:	mov    QWORD PTR [rbp-0x2c],rax
   14003cb44:	call   QWORD PTR [rip+0xe626]        # 0x14004b170
   14003cb4a:	test   eax,eax
   14003cb4c:	jne    0x14003cb57
   14003cb4e:	call   QWORD PTR [rip+0xe58c]        # 0x14004b0e0
   14003cb54:	mov    DWORD PTR [rbp-0x30],eax
   14003cb57:	mov    edi,DWORD PTR [rbp-0x28]
   14003cb5a:	movsd  xmm0,QWORD PTR [rbp-0x30]
   14003cb5f:	movsd  QWORD PTR [rbp-0x20],xmm0
   14003cb64:	mov    rax,QWORD PTR [rbp-0x20]
   14003cb68:	shr    rax,0x20
   14003cb6c:	test   eax,eax
   14003cb6e:	jne    0x14003cbd8
   14003cb70:	mov    eax,DWORD PTR [rbp-0x20]
   14003cb73:	test   eax,eax
   14003cb75:	je     0x14003cba4
   14003cb77:	cmp    eax,0x5
   14003cb7a:	jne    0x14003cb97
   14003cb7c:	call   0x140032c50
   14003cb81:	mov    DWORD PTR [rax],0x9
   14003cb87:	call   0x140032c30
   14003cb8c:	mov    DWORD PTR [rax],0x5
   14003cb92:	jmp    0x14003c95e
   14003cb97:	mov    ecx,DWORD PTR [rbp-0x20]
   14003cb9a:	call   0x140032be0
   14003cb9f:	jmp    0x14003c95e
   14003cba4:	lea    rax,[rip+0x3a115]        # 0x140076cc0
   14003cbab:	mov    rax,QWORD PTR [rax+r13*8]
   14003cbaf:	test   BYTE PTR [rax+r14*1+0x38],0x40
   14003cbb5:	je     0x14003cbc0
   14003cbb7:	cmp    BYTE PTR [rsi],0x1a
   14003cbba:	je     0x14003c93b
   14003cbc0:	call   0x140032c50
   14003cbc5:	mov    DWORD PTR [rax],0x1c
   14003cbcb:	call   0x140032c30
   14003cbd0:	and    DWORD PTR [rax],0x0
   14003cbd3:	jmp    0x14003c95e
   14003cbd8:	mov    eax,DWORD PTR [rbp-0x1c]
   14003cbdb:	sub    eax,edi
   14003cbdd:	mov    rbx,QWORD PTR [rsp+0xb8]
   14003cbe5:	add    rsp,0x60
   14003cbe9:	pop    r15
   14003cbeb:	pop    r14
   14003cbed:	pop    r13
   14003cbef:	pop    r12
   14003cbf1:	pop    rdi
   14003cbf2:	pop    rsi
   14003cbf3:	pop    rbp
   14003cbf4:	ret    
   14003cbf5:	int3   
   14003cbf6:	int3   
   14003cbf7:	int3   
   14003cbf8:	mov    QWORD PTR [rsp+0x8],rbx
   14003cbfd:	push   rdi
   14003cbfe:	sub    rsp,0x20
   14003cc02:	mov    rbx,QWORD PTR [rip+0x34447]        # 0x140071050
   14003cc09:	mov    rdi,rcx
   14003cc0c:	mov    ecx,ebx
   14003cc0e:	xor    rbx,QWORD PTR [rip+0x3a65b]        # 0x140077270
   14003cc15:	and    ecx,0x3f
   14003cc18:	ror    rbx,cl
   14003cc1b:	mov    rcx,rbx
   14003cc1e:	call   QWORD PTR [rip+0xe834]        # 0x14004b458
   14003cc24:	xor    r8d,r8d
   14003cc27:	xor    edx,edx
   14003cc29:	mov    rcx,rdi
   14003cc2c:	mov    rax,rbx
   14003cc2f:	mov    rbx,QWORD PTR [rsp+0x30]
   14003cc34:	add    rsp,0x20
   14003cc38:	pop    rdi
   14003cc39:	rex.W jmp rax
   14003cc3c:	mov    QWORD PTR [rsp+0x8],rbx
   14003cc41:	mov    QWORD PTR [rsp+0x10],rsi
   14003cc46:	mov    QWORD PTR [rsp+0x20],r9
   14003cc4b:	push   rdi
   14003cc4c:	sub    rsp,0x20
   14003cc50:	mov    rdi,r9
   14003cc53:	mov    rbx,r8
   14003cc56:	mov    ecx,DWORD PTR [rdx]
   14003cc58:	call   0x140035a44
   14003cc5d:	nop
   14003cc5e:	mov    rax,QWORD PTR [rbx]
   14003cc61:	mov    r8,QWORD PTR [rax]
   14003cc64:	mov    rdx,QWORD PTR [rip+0x343e5]        # 0x140071050
   14003cc6b:	mov    eax,edx
   14003cc6d:	and    eax,0x3f
   14003cc70:	mov    ebx,0x40
   14003cc75:	mov    ecx,ebx
   14003cc77:	sub    ecx,eax
   14003cc79:	ror    r8,cl
   14003cc7c:	xor    r8,rdx
   14003cc7f:	mov    QWORD PTR [rip+0x3a5ea],r8        # 0x140077270
   14003cc86:	lea    edx,[rbx-0x3f]
   14003cc89:	lea    rcx,[rip+0xffffffffffffff68]        # 0x14003cbf8
   14003cc90:	call   QWORD PTR [rip+0xe6aa]        # 0x14004b340
   14003cc96:	mov    esi,eax
   14003cc98:	mov    r8,QWORD PTR [rip+0x343b1]        # 0x140071050
   14003cc9f:	mov    edx,r8d
   14003cca2:	and    edx,0x3f
   14003cca5:	sub    ebx,edx
   14003cca7:	mov    ecx,ebx
   14003cca9:	xor    edx,edx
   14003ccab:	ror    rdx,cl
   14003ccae:	xor    rdx,r8
   14003ccb1:	mov    QWORD PTR [rip+0x3a5b8],rdx        # 0x140077270
   14003ccb8:	mov    ecx,DWORD PTR [rdi]
   14003ccba:	call   0x140035a98
   14003ccbf:	mov    eax,esi
   14003ccc1:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ccc6:	mov    rsi,QWORD PTR [rsp+0x38]
   14003cccb:	add    rsp,0x20
   14003cccf:	pop    rdi
   14003ccd0:	ret    
   14003ccd1:	int3   
   14003ccd2:	int3   
   14003ccd3:	int3   
   14003ccd4:	mov    QWORD PTR [rsp+0x8],rbx
   14003ccd9:	mov    QWORD PTR [rsp+0x10],rbp
   14003ccde:	mov    QWORD PTR [rsp+0x18],rsi
   14003cce3:	push   rdi
   14003cce4:	push   r12
   14003cce6:	push   r13
   14003cce8:	push   r14
   14003ccea:	push   r15
   14003ccec:	sub    rsp,0x20
   14003ccf0:	mov    r14d,ecx
   14003ccf3:	lea    r15,[rip+0xfffffffffffc3306]        # 0x140000000
   14003ccfa:	mov    r12,r9
   14003ccfd:	mov    rbp,r8
   14003cd00:	mov    r13,rdx
   14003cd03:	mov    rcx,QWORD PTR [r15+r14*8+0x77170]
   14003cd0b:	mov    r10,QWORD PTR [rip+0x3433e]        # 0x140071050
   14003cd12:	or     rdi,0xffffffffffffffff
   14003cd16:	mov    eax,r10d
   14003cd19:	mov    rdx,r10
   14003cd1c:	xor    rdx,rcx
   14003cd1f:	and    eax,0x3f
   14003cd22:	mov    cl,al
   14003cd24:	ror    rdx,cl
   14003cd27:	cmp    rdx,rdi
   14003cd2a:	je     0x14003ce55
   14003cd30:	test   rdx,rdx
   14003cd33:	je     0x14003cd3d
   14003cd35:	mov    rax,rdx
   14003cd38:	jmp    0x14003ce57
   14003cd3d:	cmp    r8,r9
   14003cd40:	je     0x14003cde9
   14003cd46:	mov    esi,DWORD PTR [rbp+0x0]
   14003cd49:	mov    rbx,QWORD PTR [r15+rsi*8+0x770d0]
   14003cd51:	test   rbx,rbx
   14003cd54:	je     0x14003cd5d
   14003cd56:	cmp    rbx,rdi
   14003cd59:	je     0x14003cdd5
   14003cd5b:	jmp    0x14003cdd0
   14003cd5d:	mov    r15,QWORD PTR [r15+rsi*8+0x57b10]
   14003cd65:	xor    edx,edx
   14003cd67:	mov    rcx,r15
   14003cd6a:	mov    r8d,0x800
   14003cd70:	call   QWORD PTR [rip+0xe31a]        # 0x14004b090
   14003cd76:	mov    rbx,rax
   14003cd79:	test   rax,rax
   14003cd7c:	jne    0x14003cd9e
   14003cd7e:	call   QWORD PTR [rip+0xe35c]        # 0x14004b0e0
   14003cd84:	cmp    eax,0x57
   14003cd87:	jne    0x14003cd9c
   14003cd89:	xor    r8d,r8d
   14003cd8c:	xor    edx,edx
   14003cd8e:	mov    rcx,r15
   14003cd91:	call   QWORD PTR [rip+0xe2f9]        # 0x14004b090
   14003cd97:	mov    rbx,rax
   14003cd9a:	jmp    0x14003cd9e
   14003cd9c:	xor    ebx,ebx
   14003cd9e:	lea    r15,[rip+0xfffffffffffc325b]        # 0x140000000
   14003cda5:	test   rbx,rbx
   14003cda8:	jne    0x14003cdb7
   14003cdaa:	mov    rax,rdi
   14003cdad:	xchg   QWORD PTR [r15+rsi*8+0x770d0],rax
   14003cdb5:	jmp    0x14003cdd5
   14003cdb7:	mov    rax,rbx
   14003cdba:	xchg   QWORD PTR [r15+rsi*8+0x770d0],rax
   14003cdc2:	test   rax,rax
   14003cdc5:	je     0x14003cdd0
   14003cdc7:	mov    rcx,rbx
   14003cdca:	call   QWORD PTR [rip+0xe2d0]        # 0x14004b0a0
   14003cdd0:	test   rbx,rbx
   14003cdd3:	jne    0x14003ce2a
   14003cdd5:	add    rbp,0x4
   14003cdd9:	cmp    rbp,r12
   14003cddc:	jne    0x14003cd46
   14003cde2:	mov    r10,QWORD PTR [rip+0x34267]        # 0x140071050
   14003cde9:	xor    ebx,ebx
   14003cdeb:	test   rbx,rbx
   14003cdee:	je     0x14003ce3a
   14003cdf0:	mov    rdx,r13
   14003cdf3:	mov    rcx,rbx
   14003cdf6:	call   QWORD PTR [rip+0xe2cc]        # 0x14004b0c8
   14003cdfc:	test   rax,rax
   14003cdff:	je     0x14003ce33
   14003ce01:	mov    r8,QWORD PTR [rip+0x34248]        # 0x140071050
   14003ce08:	mov    edx,0x40
   14003ce0d:	mov    ecx,r8d
   14003ce10:	and    ecx,0x3f
   14003ce13:	sub    edx,ecx
   14003ce15:	mov    cl,dl
   14003ce17:	mov    rdx,rax
   14003ce1a:	ror    rdx,cl
   14003ce1d:	xor    rdx,r8
   14003ce20:	xchg   QWORD PTR [r15+r14*8+0x77170],rdx
   14003ce28:	jmp    0x14003ce57
   14003ce2a:	mov    r10,QWORD PTR [rip+0x3421f]        # 0x140071050
   14003ce31:	jmp    0x14003cdeb
   14003ce33:	mov    r10,QWORD PTR [rip+0x34216]        # 0x140071050
   14003ce3a:	mov    eax,r10d
   14003ce3d:	mov    ecx,0x40
   14003ce42:	and    eax,0x3f
   14003ce45:	sub    ecx,eax
   14003ce47:	ror    rdi,cl
   14003ce4a:	xor    rdi,r10
   14003ce4d:	xchg   QWORD PTR [r15+r14*8+0x77170],rdi
   14003ce55:	xor    eax,eax
   14003ce57:	mov    rbx,QWORD PTR [rsp+0x50]
   14003ce5c:	mov    rbp,QWORD PTR [rsp+0x58]
   14003ce61:	mov    rsi,QWORD PTR [rsp+0x60]
   14003ce66:	add    rsp,0x20
   14003ce6a:	pop    r15
   14003ce6c:	pop    r14
   14003ce6e:	pop    r13
   14003ce70:	pop    r12
   14003ce72:	pop    rdi
   14003ce73:	ret    
   14003ce74:	mov    rax,rsp
   14003ce77:	mov    QWORD PTR [rax+0x8],rbx
   14003ce7b:	mov    QWORD PTR [rax+0x10],rbp
   14003ce7f:	mov    QWORD PTR [rax+0x18],rsi
   14003ce83:	mov    QWORD PTR [rax+0x20],rdi
   14003ce87:	push   r14
   14003ce89:	sub    rsp,0x50
   14003ce8d:	mov    edi,r9d
   14003ce90:	mov    rsi,r8
   14003ce93:	mov    ebp,edx
   14003ce95:	lea    r9,[rip+0x1b1ac]        # 0x140058048
   14003ce9c:	mov    r14,rcx
   14003ce9f:	lea    r8,[rip+0x1b19a]        # 0x140058040
   14003cea6:	lea    rdx,[rip+0x12f63]        # 0x14004fe10
   14003cead:	mov    ecx,0x1
   14003ceb2:	call   0x14003ccd4
   14003ceb7:	mov    rbx,rax
   14003ceba:	test   rax,rax
   14003cebd:	je     0x14003cf16
   14003cebf:	mov    rcx,rax
   14003cec2:	call   QWORD PTR [rip+0xe590]        # 0x14004b458
   14003cec8:	mov    rcx,QWORD PTR [rsp+0xa0]
   14003ced0:	mov    r9d,edi
   14003ced3:	mov    rax,QWORD PTR [rsp+0x80]
   14003cedb:	mov    r8,rsi
   14003cede:	mov    QWORD PTR [rsp+0x40],rcx
   14003cee3:	mov    edx,ebp
   14003cee5:	mov    rcx,QWORD PTR [rsp+0x98]
   14003ceed:	mov    QWORD PTR [rsp+0x38],rcx
   14003cef2:	mov    rcx,QWORD PTR [rsp+0x90]
   14003cefa:	mov    QWORD PTR [rsp+0x30],rcx
   14003ceff:	mov    ecx,DWORD PTR [rsp+0x88]
   14003cf06:	mov    DWORD PTR [rsp+0x28],ecx
   14003cf0a:	mov    rcx,r14
   14003cf0d:	mov    QWORD PTR [rsp+0x20],rax
   14003cf12:	call   rbx
   14003cf14:	jmp    0x14003cf48
   14003cf16:	xor    edx,edx
   14003cf18:	mov    rcx,r14
   14003cf1b:	call   0x14003d4e4
   14003cf20:	mov    ecx,eax
   14003cf22:	mov    r9d,edi
   14003cf25:	mov    eax,DWORD PTR [rsp+0x88]
   14003cf2c:	mov    r8,rsi
   14003cf2f:	mov    DWORD PTR [rsp+0x28],eax
   14003cf33:	mov    edx,ebp
   14003cf35:	mov    rax,QWORD PTR [rsp+0x80]
   14003cf3d:	mov    QWORD PTR [rsp+0x20],rax
   14003cf42:	call   QWORD PTR [rip+0xe350]        # 0x14004b298
   14003cf48:	mov    rbx,QWORD PTR [rsp+0x60]
   14003cf4d:	mov    rbp,QWORD PTR [rsp+0x68]
   14003cf52:	mov    rsi,QWORD PTR [rsp+0x70]
   14003cf57:	mov    rdi,QWORD PTR [rsp+0x78]
   14003cf5c:	add    rsp,0x50
   14003cf60:	pop    r14
   14003cf62:	ret    
   14003cf63:	int3   
   14003cf64:	mov    rax,rsp
   14003cf67:	mov    QWORD PTR [rax+0x10],rbx
   14003cf6b:	mov    QWORD PTR [rax+0x18],rbp
   14003cf6f:	mov    QWORD PTR [rax+0x20],rsi
   14003cf73:	mov    QWORD PTR [rax+0x8],rcx
   14003cf77:	push   rdi
   14003cf78:	sub    rsp,0x40
   14003cf7c:	mov    rdi,r9
   14003cf7f:	mov    rsi,r8
   14003cf82:	mov    ebp,edx
   14003cf84:	lea    r9,[rip+0x1b0c5]        # 0x140058050
   14003cf8b:	lea    r8,[rip+0x1b0b6]        # 0x140058048
   14003cf92:	mov    ecx,0x2
   14003cf97:	lea    rdx,[rip+0x1b0b2]        # 0x140058050
   14003cf9e:	call   0x14003ccd4
   14003cfa3:	mov    rbx,rax
   14003cfa6:	test   rax,rax
   14003cfa9:	je     0x14003cfc5
   14003cfab:	mov    rcx,rax
   14003cfae:	call   QWORD PTR [rip+0xe4a4]        # 0x14004b458
   14003cfb4:	mov    rcx,QWORD PTR [rsp+0x50]
   14003cfb9:	mov    r9,rdi
   14003cfbc:	mov    r8,rsi
   14003cfbf:	mov    edx,ebp
   14003cfc1:	call   rbx
   14003cfc3:	jmp    0x14003cff5
   14003cfc5:	lea    rax,[rsp+0x50]
   14003cfca:	mov    QWORD PTR [rsp+0x30],rax
   14003cfcf:	lea    r9,[rsp+0x24]
   14003cfd4:	mov    eax,0x4
   14003cfd9:	lea    r8,[rsp+0x30]
   14003cfde:	lea    rdx,[rsp+0x28]
   14003cfe3:	mov    DWORD PTR [rsp+0x24],eax
   14003cfe7:	lea    rcx,[rsp+0x20]
   14003cfec:	mov    DWORD PTR [rsp+0x28],eax
   14003cff0:	call   0x14003cc3c
   14003cff5:	mov    rbx,QWORD PTR [rsp+0x58]
   14003cffa:	mov    rbp,QWORD PTR [rsp+0x60]
   14003cfff:	mov    rsi,QWORD PTR [rsp+0x68]
   14003d004:	add    rsp,0x40
   14003d008:	pop    rdi
   14003d009:	ret    
   14003d00a:	int3   
   14003d00b:	int3   
   14003d00c:	mov    QWORD PTR [rsp+0x8],rbx
   14003d011:	push   rdi
   14003d012:	sub    rsp,0x20
   14003d016:	mov    rdi,rcx
   14003d019:	lea    r9,[rip+0x1b050]        # 0x140058070
   14003d020:	mov    ecx,0x3
   14003d025:	lea    r8,[rip+0x1b03c]        # 0x140058068
   14003d02c:	lea    rdx,[rip+0x12a95]        # 0x14004fac8
   14003d033:	call   0x14003ccd4
   14003d038:	mov    rbx,rax
   14003d03b:	test   rax,rax
   14003d03e:	je     0x14003d050
   14003d040:	mov    rcx,rax
   14003d043:	call   QWORD PTR [rip+0xe40f]        # 0x14004b458
   14003d049:	mov    rcx,rdi
   14003d04c:	call   rbx
   14003d04e:	jmp    0x14003d056
   14003d050:	call   QWORD PTR [rip+0xe222]        # 0x14004b278
   14003d056:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d05b:	add    rsp,0x20
   14003d05f:	pop    rdi
   14003d060:	ret    
   14003d061:	int3   
   14003d062:	int3   
   14003d063:	int3   
   14003d064:	mov    QWORD PTR [rsp+0x8],rbx
   14003d069:	push   rdi
   14003d06a:	sub    rsp,0x20
   14003d06e:	mov    ebx,ecx
   14003d070:	lea    r9,[rip+0x1b001]        # 0x140058078
   14003d077:	mov    ecx,0x4
   14003d07c:	lea    r8,[rip+0x1afed]        # 0x140058070
   14003d083:	lea    rdx,[rip+0x12a4e]        # 0x14004fad8
   14003d08a:	call   0x14003ccd4
   14003d08f:	mov    rdi,rax
   14003d092:	test   rax,rax
   14003d095:	je     0x14003d0a6
   14003d097:	mov    rcx,rax
   14003d09a:	call   QWORD PTR [rip+0xe3b8]        # 0x14004b458
   14003d0a0:	mov    ecx,ebx
   14003d0a2:	call   rdi
   14003d0a4:	jmp    0x14003d0ae
   14003d0a6:	mov    ecx,ebx
   14003d0a8:	call   QWORD PTR [rip+0xe1e2]        # 0x14004b290
   14003d0ae:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d0b3:	add    rsp,0x20
   14003d0b7:	pop    rdi
   14003d0b8:	ret    
   14003d0b9:	int3   
   14003d0ba:	int3   
   14003d0bb:	int3   
   14003d0bc:	mov    QWORD PTR [rsp+0x8],rbx
   14003d0c1:	push   rdi
   14003d0c2:	sub    rsp,0x20
   14003d0c6:	mov    ebx,ecx
   14003d0c8:	lea    r9,[rip+0x1afb1]        # 0x140058080
   14003d0cf:	mov    ecx,0x5
   14003d0d4:	lea    r8,[rip+0x1af9d]        # 0x140058078
   14003d0db:	lea    rdx,[rip+0x129fe]        # 0x14004fae0
   14003d0e2:	call   0x14003ccd4
   14003d0e7:	mov    rdi,rax
   14003d0ea:	test   rax,rax
   14003d0ed:	je     0x14003d0fe
   14003d0ef:	mov    rcx,rax
   14003d0f2:	call   QWORD PTR [rip+0xe360]        # 0x14004b458
   14003d0f8:	mov    ecx,ebx
   14003d0fa:	call   rdi
   14003d0fc:	jmp    0x14003d106
   14003d0fe:	mov    ecx,ebx
   14003d100:	call   QWORD PTR [rip+0xe17a]        # 0x14004b280
   14003d106:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d10b:	add    rsp,0x20
   14003d10f:	pop    rdi
   14003d110:	ret    
   14003d111:	int3   
   14003d112:	int3   
   14003d113:	int3   
   14003d114:	mov    QWORD PTR [rsp+0x8],rbx
   14003d119:	mov    QWORD PTR [rsp+0x10],rsi
   14003d11e:	push   rdi
   14003d11f:	sub    rsp,0x20
   14003d123:	mov    rbx,rdx
   14003d126:	lea    r9,[rip+0x1af5b]        # 0x140058088
   14003d12d:	mov    edi,ecx
   14003d12f:	lea    rdx,[rip+0x129ba]        # 0x14004faf0
   14003d136:	mov    ecx,0x6
   14003d13b:	lea    r8,[rip+0x1af3e]        # 0x140058080
   14003d142:	call   0x14003ccd4
   14003d147:	mov    rsi,rax
   14003d14a:	test   rax,rax
   14003d14d:	je     0x14003d161
   14003d14f:	mov    rcx,rax
   14003d152:	call   QWORD PTR [rip+0xe300]        # 0x14004b458
   14003d158:	mov    rdx,rbx
   14003d15b:	mov    ecx,edi
   14003d15d:	call   rsi
   14003d15f:	jmp    0x14003d16c
   14003d161:	mov    rdx,rbx
   14003d164:	mov    ecx,edi
   14003d166:	call   QWORD PTR [rip+0xe11c]        # 0x14004b288
   14003d16c:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d171:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d176:	add    rsp,0x20
   14003d17a:	pop    rdi
   14003d17b:	ret    
   14003d17c:	mov    rax,rsp
   14003d17f:	mov    QWORD PTR [rax+0x8],rbx
   14003d183:	mov    QWORD PTR [rax+0x10],rbp
   14003d187:	mov    QWORD PTR [rax+0x18],rsi
   14003d18b:	mov    QWORD PTR [rax+0x20],rdi
   14003d18f:	push   r14
   14003d191:	sub    rsp,0x20
   14003d195:	mov    edi,r9d
   14003d198:	mov    rsi,r8
   14003d19b:	mov    ebp,edx
   14003d19d:	lea    r9,[rip+0x1aef4]        # 0x140058098
   14003d1a4:	mov    r14,rcx
   14003d1a7:	lea    r8,[rip+0x1aee2]        # 0x140058090
   14003d1ae:	lea    rdx,[rip+0x12c6b]        # 0x14004fe20
   14003d1b5:	mov    ecx,0xd
   14003d1ba:	call   0x14003ccd4
   14003d1bf:	mov    rbx,rax
   14003d1c2:	test   rax,rax
   14003d1c5:	je     0x14003d1df
   14003d1c7:	mov    rcx,rax
   14003d1ca:	call   QWORD PTR [rip+0xe288]        # 0x14004b458
   14003d1d0:	mov    r9d,edi
   14003d1d3:	mov    r8,rsi
   14003d1d6:	mov    edx,ebp
   14003d1d8:	mov    rcx,r14
   14003d1db:	call   rbx
   14003d1dd:	jmp    0x14003d1f9
   14003d1df:	xor    edx,edx
   14003d1e1:	mov    rcx,r14
   14003d1e4:	call   0x14003d4e4
   14003d1e9:	mov    ecx,eax
   14003d1eb:	mov    r9d,edi
   14003d1ee:	mov    r8,rsi
   14003d1f1:	mov    edx,ebp
   14003d1f3:	call   QWORD PTR [rip+0xe0af]        # 0x14004b2a8
   14003d1f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d1fe:	mov    rbp,QWORD PTR [rsp+0x38]
   14003d203:	mov    rsi,QWORD PTR [rsp+0x40]
   14003d208:	mov    rdi,QWORD PTR [rsp+0x48]
   14003d20d:	add    rsp,0x20
   14003d211:	pop    r14
   14003d213:	ret    
   14003d214:	mov    QWORD PTR [rsp+0x8],rbx
   14003d219:	mov    QWORD PTR [rsp+0x10],rsi
   14003d21e:	push   rdi
   14003d21f:	sub    rsp,0x20
   14003d223:	mov    edi,edx
   14003d225:	lea    r9,[rip+0x1ae74]        # 0x1400580a0
   14003d22c:	mov    rsi,rcx
   14003d22f:	lea    rdx,[rip+0x1ae6a]        # 0x1400580a0
   14003d236:	mov    ecx,0x11
   14003d23b:	lea    r8,[rip+0x1ae56]        # 0x140058098
   14003d242:	call   0x14003ccd4
   14003d247:	mov    rbx,rax
   14003d24a:	test   rax,rax
   14003d24d:	je     0x14003d261
   14003d24f:	mov    rcx,rax
   14003d252:	call   QWORD PTR [rip+0xe200]        # 0x14004b458
   14003d258:	mov    edx,edi
   14003d25a:	mov    rcx,rsi
   14003d25d:	call   rbx
   14003d25f:	jmp    0x14003d277
   14003d261:	call   QWORD PTR [rip+0xe0d1]        # 0x14004b338
   14003d267:	xor    r9d,r9d
   14003d26a:	mov    r8d,edi
   14003d26d:	mov    ecx,eax
   14003d26f:	mov    rdx,rsi
   14003d272:	call   0x14003d368
   14003d277:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d27c:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d281:	add    rsp,0x20
   14003d285:	pop    rdi
   14003d286:	ret    
   14003d287:	int3   
   14003d288:	mov    QWORD PTR [rsp+0x8],rbx
   14003d28d:	mov    QWORD PTR [rsp+0x10],rbp
   14003d292:	mov    QWORD PTR [rsp+0x18],rsi
   14003d297:	push   rdi
   14003d298:	sub    rsp,0x20
   14003d29c:	mov    ebp,r8d
   14003d29f:	lea    r9,[rip+0x1ae22]        # 0x1400580c8
   14003d2a6:	mov    ebx,edx
   14003d2a8:	lea    r8,[rip+0x1ae11]        # 0x1400580c0
   14003d2af:	mov    rdi,rcx
   14003d2b2:	lea    rdx,[rip+0x12847]        # 0x14004fb00
   14003d2b9:	mov    ecx,0x14
   14003d2be:	call   0x14003ccd4
   14003d2c3:	mov    rsi,rax
   14003d2c6:	test   rax,rax
   14003d2c9:	je     0x14003d2e0
   14003d2cb:	mov    rcx,rax
   14003d2ce:	call   QWORD PTR [rip+0xe184]        # 0x14004b458
   14003d2d4:	mov    r8d,ebp
   14003d2d7:	mov    edx,ebx
   14003d2d9:	mov    rcx,rdi
   14003d2dc:	call   rsi
   14003d2de:	jmp    0x14003d2eb
   14003d2e0:	mov    edx,ebx
   14003d2e2:	mov    rcx,rdi
   14003d2e5:	call   QWORD PTR [rip+0xdf85]        # 0x14004b270
   14003d2eb:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d2f0:	mov    rbp,QWORD PTR [rsp+0x38]
   14003d2f5:	mov    rsi,QWORD PTR [rsp+0x40]
   14003d2fa:	add    rsp,0x20
   14003d2fe:	pop    rdi
   14003d2ff:	ret    
   14003d300:	mov    QWORD PTR [rsp+0x8],rbx
   14003d305:	push   rdi
   14003d306:	sub    rsp,0x20
   14003d30a:	mov    rdi,rcx
   14003d30d:	lea    r9,[rip+0x1adbc]        # 0x1400580d0
   14003d314:	mov    ecx,0x15
   14003d319:	lea    r8,[rip+0x1ada8]        # 0x1400580c8
   14003d320:	lea    rdx,[rip+0x1ada9]        # 0x1400580d0
   14003d327:	call   0x14003ccd4
   14003d32c:	mov    rbx,rax
   14003d32f:	test   rax,rax
   14003d332:	je     0x14003d344
   14003d334:	mov    rcx,rax
   14003d337:	call   QWORD PTR [rip+0xe11b]        # 0x14004b458
   14003d33d:	mov    rcx,rdi
   14003d340:	call   rbx
   14003d342:	jmp    0x14003d35b
   14003d344:	xor    edx,edx
   14003d346:	mov    rcx,rdi
   14003d349:	call   0x14003d4e4
   14003d34e:	mov    ecx,eax
   14003d350:	mov    edx,0x1
   14003d355:	call   QWORD PTR [rip+0xdfd5]        # 0x14004b330
   14003d35b:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d360:	add    rsp,0x20
   14003d364:	pop    rdi
   14003d365:	ret    
   14003d366:	int3   
   14003d367:	int3   
   14003d368:	mov    rax,rsp
   14003d36b:	mov    QWORD PTR [rax+0x8],rbx
   14003d36f:	mov    QWORD PTR [rax+0x10],rbp
   14003d373:	mov    QWORD PTR [rax+0x18],rsi
   14003d377:	mov    QWORD PTR [rax+0x20],rdi
   14003d37b:	push   r14
   14003d37d:	sub    rsp,0x20
   14003d381:	mov    r14d,r9d
   14003d384:	mov    ebx,r8d
   14003d387:	mov    rdi,rdx
   14003d38a:	lea    r9,[rip+0x1ad67]        # 0x1400580f8
   14003d391:	mov    esi,ecx
   14003d393:	lea    r8,[rip+0x1ad56]        # 0x1400580f0
   14003d39a:	lea    rdx,[rip+0x1ad57]        # 0x1400580f8
   14003d3a1:	mov    ecx,0x17
   14003d3a6:	call   0x14003ccd4
   14003d3ab:	mov    rbp,rax
   14003d3ae:	test   rax,rax
   14003d3b1:	je     0x14003d3cb
   14003d3b3:	mov    rcx,rax
   14003d3b6:	call   QWORD PTR [rip+0xe09c]        # 0x14004b458
   14003d3bc:	mov    r9d,r14d
   14003d3bf:	mov    r8d,ebx
   14003d3c2:	mov    rdx,rdi
   14003d3c5:	mov    ecx,esi
   14003d3c7:	call   rbp
   14003d3c9:	jmp    0x14003d3d8
   14003d3cb:	mov    r8d,ebx
   14003d3ce:	mov    rdx,rdi
   14003d3d1:	mov    ecx,esi
   14003d3d3:	call   0x140046264
   14003d3d8:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d3dd:	mov    rbp,QWORD PTR [rsp+0x38]
   14003d3e2:	mov    rsi,QWORD PTR [rsp+0x40]
   14003d3e7:	mov    rdi,QWORD PTR [rsp+0x48]
   14003d3ec:	add    rsp,0x20
   14003d3f0:	pop    r14
   14003d3f2:	ret    
   14003d3f3:	int3   
   14003d3f4:	mov    rax,rsp
   14003d3f7:	mov    QWORD PTR [rax+0x8],rbx
   14003d3fb:	mov    QWORD PTR [rax+0x10],rbp
   14003d3ff:	mov    QWORD PTR [rax+0x18],rsi
   14003d403:	mov    QWORD PTR [rax+0x20],rdi
   14003d407:	push   r14
   14003d409:	sub    rsp,0x50
   14003d40d:	mov    edi,r9d
   14003d410:	mov    rsi,r8
   14003d413:	mov    ebp,edx
   14003d415:	lea    r9,[rip+0x1acd4]        # 0x1400580f0
   14003d41c:	mov    r14,rcx
   14003d41f:	lea    r8,[rip+0x1acc2]        # 0x1400580e8
   14003d426:	lea    rdx,[rip+0x12a03]        # 0x14004fe30
   14003d42d:	mov    ecx,0x16
   14003d432:	call   0x14003ccd4
   14003d437:	mov    rbx,rax
   14003d43a:	test   rax,rax
   14003d43d:	je     0x14003d496
   14003d43f:	mov    rcx,rax
   14003d442:	call   QWORD PTR [rip+0xe010]        # 0x14004b458
   14003d448:	mov    rcx,QWORD PTR [rsp+0xa0]
   14003d450:	mov    r9d,edi
   14003d453:	mov    rax,QWORD PTR [rsp+0x80]
   14003d45b:	mov    r8,rsi
   14003d45e:	mov    QWORD PTR [rsp+0x40],rcx
   14003d463:	mov    edx,ebp
   14003d465:	mov    rcx,QWORD PTR [rsp+0x98]
   14003d46d:	mov    QWORD PTR [rsp+0x38],rcx
   14003d472:	mov    rcx,QWORD PTR [rsp+0x90]
   14003d47a:	mov    QWORD PTR [rsp+0x30],rcx
   14003d47f:	mov    ecx,DWORD PTR [rsp+0x88]
   14003d486:	mov    DWORD PTR [rsp+0x28],ecx
   14003d48a:	mov    rcx,r14
   14003d48d:	mov    QWORD PTR [rsp+0x20],rax
   14003d492:	call   rbx
   14003d494:	jmp    0x14003d4c8
   14003d496:	xor    edx,edx
   14003d498:	mov    rcx,r14
   14003d49b:	call   0x14003d4e4
   14003d4a0:	mov    ecx,eax
   14003d4a2:	mov    r9d,edi
   14003d4a5:	mov    eax,DWORD PTR [rsp+0x88]
   14003d4ac:	mov    r8,rsi
   14003d4af:	mov    DWORD PTR [rsp+0x28],eax
   14003d4b3:	mov    edx,ebp
   14003d4b5:	mov    rax,QWORD PTR [rsp+0x80]
   14003d4bd:	mov    QWORD PTR [rsp+0x20],rax
   14003d4c2:	call   QWORD PTR [rip+0xddd8]        # 0x14004b2a0
   14003d4c8:	mov    rbx,QWORD PTR [rsp+0x60]
   14003d4cd:	mov    rbp,QWORD PTR [rsp+0x68]
   14003d4d2:	mov    rsi,QWORD PTR [rsp+0x70]
   14003d4d7:	mov    rdi,QWORD PTR [rsp+0x78]
   14003d4dc:	add    rsp,0x50
   14003d4e0:	pop    r14
   14003d4e2:	ret    
   14003d4e3:	int3   
   14003d4e4:	mov    QWORD PTR [rsp+0x8],rbx
   14003d4e9:	mov    QWORD PTR [rsp+0x10],rsi
   14003d4ee:	push   rdi
   14003d4ef:	sub    rsp,0x20
   14003d4f3:	mov    esi,edx
   14003d4f5:	lea    r9,[rip+0x1ac1c]        # 0x140058118
   14003d4fc:	mov    rbx,rcx
   14003d4ff:	lea    rdx,[rip+0x1ac12]        # 0x140058118
   14003d506:	mov    ecx,0x18
   14003d50b:	lea    r8,[rip+0x1abfe]        # 0x140058110
   14003d512:	call   0x14003ccd4
   14003d517:	mov    rdi,rax
   14003d51a:	test   rax,rax
   14003d51d:	je     0x14003d531
   14003d51f:	mov    rcx,rax
   14003d522:	call   QWORD PTR [rip+0xdf30]        # 0x14004b458
   14003d528:	mov    edx,esi
   14003d52a:	mov    rcx,rbx
   14003d52d:	call   rdi
   14003d52f:	jmp    0x14003d539
   14003d531:	mov    rcx,rbx
   14003d534:	call   0x140046348
   14003d539:	mov    rbx,QWORD PTR [rsp+0x30]
   14003d53e:	mov    rsi,QWORD PTR [rsp+0x38]
   14003d543:	add    rsp,0x20
   14003d547:	pop    rdi
   14003d548:	ret    
   14003d549:	int3   
   14003d54a:	int3   
   14003d54b:	int3   
   14003d54c:	sub    rsp,0x28
   14003d550:	lea    r9,[rip+0x1aaf1]        # 0x140058048
   14003d557:	mov    ecx,0x1
   14003d55c:	lea    r8,[rip+0x1aadd]        # 0x140058040
   14003d563:	lea    rdx,[rip+0x128a6]        # 0x14004fe10
   14003d56a:	call   0x14003ccd4
   14003d56f:	test   rax,rax
   14003d572:	setne  al
   14003d575:	add    rsp,0x28
   14003d579:	ret    
   14003d57a:	int3   
   14003d57b:	int3   
   14003d57c:	mov    QWORD PTR [rsp+0x8],rdi
   14003d581:	mov    rdx,QWORD PTR [rip+0x33ac8]        # 0x140071050
   14003d588:	lea    rdi,[rip+0x39be1]        # 0x140077170
   14003d58f:	mov    eax,edx
   14003d591:	mov    ecx,0x40
   14003d596:	and    eax,0x3f
   14003d599:	sub    ecx,eax
   14003d59b:	xor    eax,eax
   14003d59d:	ror    rax,cl
   14003d5a0:	mov    ecx,0x20
   14003d5a5:	xor    rax,rdx
   14003d5a8:	rep stos QWORD PTR es:[rdi],rax
   14003d5ab:	mov    rdi,QWORD PTR [rsp+0x8]
   14003d5b0:	mov    al,0x1
   14003d5b2:	ret    
   14003d5b3:	int3   
   14003d5b4:	mov    QWORD PTR [rsp+0x10],rbx
   14003d5b9:	push   rdi
   14003d5ba:	sub    rsp,0x20
   14003d5be:	mov    eax,DWORD PTR [rip+0x39cb4]        # 0x140077278
   14003d5c4:	xor    ebx,ebx
   14003d5c6:	test   eax,eax
   14003d5c8:	je     0x14003d5d2
   14003d5ca:	cmp    eax,0x1
   14003d5cd:	sete   al
   14003d5d0:	jmp    0x14003d62e
   14003d5d2:	lea    r9,[rip+0x1aab7]        # 0x140058090
   14003d5d9:	mov    ecx,0x8
   14003d5de:	lea    r8,[rip+0x1aaa3]        # 0x140058088
   14003d5e5:	lea    rdx,[rip+0x126b4]        # 0x14004fca0
   14003d5ec:	call   0x14003ccd4
   14003d5f1:	mov    rdi,rax
   14003d5f4:	test   rax,rax
   14003d5f7:	je     0x14003d621
   14003d5f9:	mov    rcx,rax
   14003d5fc:	mov    DWORD PTR [rsp+0x30],ebx
   14003d600:	call   QWORD PTR [rip+0xde52]        # 0x14004b458
   14003d606:	xor    edx,edx
   14003d608:	lea    rcx,[rsp+0x30]
   14003d60d:	call   rdi
   14003d60f:	cmp    eax,0x7a
   14003d612:	jne    0x14003d621
   14003d614:	lea    ecx,[rax-0x79]
   14003d617:	mov    al,0x1
   14003d619:	xchg   DWORD PTR [rip+0x39c59],ecx        # 0x140077278
   14003d61f:	jmp    0x14003d62e
   14003d621:	mov    eax,0x2
   14003d626:	xchg   DWORD PTR [rip+0x39c4c],eax        # 0x140077278
   14003d62c:	xor    al,al
   14003d62e:	mov    rbx,QWORD PTR [rsp+0x38]
   14003d633:	add    rsp,0x20
   14003d637:	pop    rdi
   14003d638:	ret    
   14003d639:	int3   
   14003d63a:	int3   
   14003d63b:	int3   
   14003d63c:	rex push rbx
   14003d63e:	sub    rsp,0x20
   14003d642:	test   cl,cl
   14003d644:	jne    0x14003d675
   14003d646:	lea    rbx,[rip+0x39a83]        # 0x1400770d0
   14003d64d:	mov    rcx,QWORD PTR [rbx]
   14003d650:	test   rcx,rcx
   14003d653:	je     0x14003d665
   14003d655:	cmp    rcx,0xffffffffffffffff
   14003d659:	je     0x14003d661
   14003d65b:	call   QWORD PTR [rip+0xda3f]        # 0x14004b0a0
   14003d661:	and    QWORD PTR [rbx],0x0
   14003d665:	add    rbx,0x8
   14003d669:	lea    rax,[rip+0x39b00]        # 0x140077170
   14003d670:	cmp    rbx,rax
   14003d673:	jne    0x14003d64d
   14003d675:	mov    al,0x1
   14003d677:	add    rsp,0x20
   14003d67b:	pop    rbx
   14003d67c:	ret    
   14003d67d:	int3   
   14003d67e:	int3   
   14003d67f:	int3   
   14003d680:	mov    QWORD PTR [rsp+0x8],rbx
   14003d685:	push   rdi
   14003d686:	sub    rsp,0x30
   14003d68a:	and    DWORD PTR [rsp+0x20],0x0
   14003d68f:	mov    ecx,0x8
   14003d694:	call   0x140035a44
   14003d699:	nop
   14003d69a:	mov    ebx,0x3
   14003d69f:	mov    DWORD PTR [rsp+0x24],ebx
   14003d6a3:	cmp    ebx,DWORD PTR [rip+0x3922f]        # 0x1400768d8
   14003d6a9:	je     0x14003d719
   14003d6ab:	movsxd rdi,ebx
   14003d6ae:	mov    rax,QWORD PTR [rip+0x3922b]        # 0x1400768e0
   14003d6b5:	mov    rax,QWORD PTR [rax+rdi*8]
   14003d6b9:	test   rax,rax
   14003d6bc:	jne    0x14003d6c0
   14003d6be:	jmp    0x14003d715
   14003d6c0:	mov    ecx,DWORD PTR [rax+0x14]
   14003d6c3:	shr    ecx,0xd
   14003d6c6:	test   cl,0x1
   14003d6c9:	je     0x14003d6e4
   14003d6cb:	mov    rcx,QWORD PTR [rip+0x3920e]        # 0x1400768e0
   14003d6d2:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14003d6d6:	call   0x140032694
   14003d6db:	cmp    eax,0xffffffff
   14003d6de:	je     0x14003d6e4
   14003d6e0:	inc    DWORD PTR [rsp+0x20]
   14003d6e4:	mov    rax,QWORD PTR [rip+0x391f5]        # 0x1400768e0
   14003d6eb:	mov    rcx,QWORD PTR [rax+rdi*8]
   14003d6ef:	add    rcx,0x30
   14003d6f3:	call   QWORD PTR [rip+0xd95f]        # 0x14004b058
   14003d6f9:	mov    rcx,QWORD PTR [rip+0x391e0]        # 0x1400768e0
   14003d700:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14003d704:	call   0x140038c70
   14003d709:	mov    rax,QWORD PTR [rip+0x391d0]        # 0x1400768e0
   14003d710:	and    QWORD PTR [rax+rdi*8],0x0
   14003d715:	inc    ebx
   14003d717:	jmp    0x14003d69f
   14003d719:	mov    ecx,0x8
   14003d71e:	call   0x140035a98
   14003d723:	mov    eax,DWORD PTR [rsp+0x20]
   14003d727:	mov    rbx,QWORD PTR [rsp+0x40]
   14003d72c:	add    rsp,0x30
   14003d730:	pop    rdi
   14003d731:	ret    
   14003d732:	int3   
   14003d733:	int3   
   14003d734:	rex push rbx
   14003d736:	push   rbp
   14003d737:	push   rsi
   14003d738:	push   rdi
   14003d739:	push   r12
   14003d73b:	push   r13
   14003d73d:	push   r14
   14003d73f:	push   r15
   14003d741:	sub    rsp,0x38
   14003d745:	movsxd r13,ecx
   14003d748:	lea    r10,[rip+0x39571]        # 0x140076cc0
   14003d74f:	mov    rdi,r13
   14003d752:	mov    r15,r13
   14003d755:	sar    r15,0x6
   14003d759:	and    edi,0x3f
   14003d75c:	shl    rdi,0x6
   14003d760:	mov    r14,rdx
   14003d763:	mov    r9d,0xa
   14003d769:	mov    rax,QWORD PTR [r10+r15*8]
   14003d76d:	mov    rcx,QWORD PTR [rax+rdi*1+0x28]
   14003d772:	mov    QWORD PTR [rsp+0x98],rcx
   14003d77a:	test   r8,r8
   14003d77d:	je     0x14003d78c
   14003d77f:	cmp    WORD PTR [rdx],r9w
   14003d783:	jne    0x14003d78c
   14003d785:	or     BYTE PTR [rax+rdi*1+0x38],0x4
   14003d78a:	jmp    0x14003d791
   14003d78c:	and    BYTE PTR [rax+rdi*1+0x38],0xfb
   14003d791:	lea    r12,[rdx+r8*2]
   14003d795:	mov    rsi,rdx
   14003d798:	mov    rbx,rdx
   14003d79b:	cmp    rdx,r12
   14003d79e:	jae    0x14003d946
   14003d7a4:	lea    rbp,[rdx+0x2]
   14003d7a8:	mov    edx,0xd
   14003d7ad:	movzx  eax,WORD PTR [rsi]
   14003d7b0:	cmp    ax,0x1a
   14003d7b4:	je     0x14003d928
   14003d7ba:	cmp    ax,dx
   14003d7bd:	je     0x14003d7d3
   14003d7bf:	mov    WORD PTR [rbx],ax
   14003d7c2:	add    rbx,0x2
   14003d7c6:	add    rsi,0x2
   14003d7ca:	add    rbp,0x2
   14003d7ce:	jmp    0x14003d86d
   14003d7d3:	cmp    rbp,r12
   14003d7d6:	jae    0x14003d7f6
   14003d7d8:	cmp    WORD PTR [rbp+0x0],r9w
   14003d7dd:	jne    0x14003d7f1
   14003d7df:	add    rsi,0x4
   14003d7e3:	mov    WORD PTR [rbx],r9w
   14003d7e7:	add    rbp,0x4
   14003d7eb:	add    rbx,0x2
   14003d7ef:	jmp    0x14003d86d
   14003d7f1:	mov    WORD PTR [rbx],dx
   14003d7f4:	jmp    0x14003d7c2
   14003d7f6:	and    QWORD PTR [rsp+0x20],0x0
   14003d7fc:	lea    r9,[rsp+0x90]
   14003d804:	mov    r8d,0x2
   14003d80a:	lea    rdx,[rsp+0x80]
   14003d812:	add    rsi,0x2
   14003d816:	add    rbp,0x2
   14003d81a:	call   QWORD PTR [rip+0xd958]        # 0x14004b178
   14003d820:	test   eax,eax
   14003d822:	je     0x14003d90c
   14003d828:	cmp    DWORD PTR [rsp+0x90],0x0
   14003d830:	je     0x14003d90c
   14003d836:	lea    r10,[rip+0x39483]        # 0x140076cc0
   14003d83d:	mov    r9d,0xa
   14003d843:	mov    rax,QWORD PTR [r10+r15*8]
   14003d847:	test   BYTE PTR [rax+rdi*1+0x38],0x48
   14003d84c:	je     0x14003d8b3
   14003d84e:	movzx  eax,WORD PTR [rsp+0x80]
   14003d856:	cmp    ax,r9w
   14003d85a:	jne    0x14003d87b
   14003d85c:	mov    WORD PTR [rbx],r9w
   14003d860:	mov    edx,0xd
   14003d865:	mov    rcx,QWORD PTR [rsp+0x98]
   14003d86d:	cmp    rsi,r12
   14003d870:	jb     0x14003d7ad
   14003d876:	jmp    0x14003d946
   14003d87b:	mov    ecx,0xd
   14003d880:	mov    WORD PTR [rsp+0x88],ax
   14003d888:	mov    WORD PTR [rbx],cx
   14003d88b:	xor    edx,edx
   14003d88d:	mov    rcx,QWORD PTR [r10+r15*8]
   14003d891:	mov    al,BYTE PTR [rsp+rdx*1+0x88]
   14003d898:	add    rcx,rdi
   14003d89b:	mov    BYTE PTR [rcx+rdx*1+0x3a],al
   14003d89f:	inc    rdx
   14003d8a2:	cmp    rdx,0x2
   14003d8a6:	jl     0x14003d88d
   14003d8a8:	mov    rax,QWORD PTR [r10+r15*8]
   14003d8ac:	mov    BYTE PTR [rax+rdi*1+0x3c],r9b
   14003d8b1:	jmp    0x14003d860
   14003d8b3:	cmp    WORD PTR [rsp+0x80],r9w
   14003d8bc:	jne    0x14003d8cd
   14003d8be:	cmp    rbx,r14
   14003d8c1:	jne    0x14003d8cd
   14003d8c3:	mov    WORD PTR [rbx],r9w
   14003d8c7:	add    rbx,0x2
   14003d8cb:	jmp    0x14003d860
   14003d8cd:	mov    rdx,0xfffffffffffffffe
   14003d8d4:	mov    ecx,r13d
   14003d8d7:	lea    r8d,[rdx+0x3]
   14003d8db:	call   0x140046138
   14003d8e0:	mov    r9d,0xa
   14003d8e6:	lea    r10,[rip+0x393d3]        # 0x140076cc0
   14003d8ed:	cmp    WORD PTR [rsp+0x80],r9w
   14003d8f6:	je     0x14003d860
   14003d8fc:	lea    edx,[r9+0x3]
   14003d900:	mov    WORD PTR [rbx],dx
   14003d903:	add    rbx,0x2
   14003d907:	jmp    0x14003d865
   14003d90c:	mov    edx,0xd
   14003d911:	lea    r10,[rip+0x393a8]        # 0x140076cc0
   14003d918:	mov    WORD PTR [rbx],dx
   14003d91b:	add    rbx,0x2
   14003d91f:	lea    r9d,[rdx-0x3]
   14003d923:	jmp    0x14003d865
   14003d928:	mov    rcx,QWORD PTR [r10+r15*8]
   14003d92c:	mov    al,BYTE PTR [rcx+rdi*1+0x38]
   14003d930:	test   al,0x40
   14003d932:	jne    0x14003d93c
   14003d934:	or     al,0x2
   14003d936:	mov    BYTE PTR [rcx+rdi*1+0x38],al
   14003d93a:	jmp    0x14003d946
   14003d93c:	movzx  ecx,WORD PTR [rsi]
   14003d93f:	mov    WORD PTR [rbx],cx
   14003d942:	add    rbx,0x2
   14003d946:	sub    rbx,r14
   14003d949:	sar    rbx,1
   14003d94c:	lea    rax,[rbx+rbx*1]
   14003d950:	add    rsp,0x38
   14003d954:	pop    r15
   14003d956:	pop    r14
   14003d958:	pop    r13
   14003d95a:	pop    r12
   14003d95c:	pop    rdi
   14003d95d:	pop    rsi
   14003d95e:	pop    rbp
   14003d95f:	pop    rbx
   14003d960:	ret    
   14003d961:	int3   
   14003d962:	int3   
   14003d963:	int3   
   14003d964:	mov    QWORD PTR [rsp+0x20],r9
   14003d969:	mov    DWORD PTR [rsp+0x8],ecx
   14003d96d:	push   rbx
   14003d96e:	push   rbp
   14003d96f:	push   rsi
   14003d970:	push   rdi
   14003d971:	push   r12
   14003d973:	push   r13
   14003d975:	push   r14
   14003d977:	push   r15
   14003d979:	sub    rsp,0x38
   14003d97d:	mov    rbp,r9
   14003d980:	lea    r10,[rip+0xfffffffffffc2679]        # 0x140000000
   14003d987:	movsxd r9,ecx
   14003d98a:	mov    r14,rdx
   14003d98d:	mov    rdi,r9
   14003d990:	mov    r15,r9
   14003d993:	sar    r15,0x6
   14003d997:	and    edi,0x3f
   14003d99a:	shl    rdi,0x6
   14003d99e:	mov    rax,QWORD PTR [r10+r15*8+0x76cc0]
   14003d9a6:	mov    r13,QWORD PTR [rax+rdi*1+0x28]
   14003d9ab:	test   r8,r8
   14003d9ae:	je     0x14003d9bc
   14003d9b0:	cmp    BYTE PTR [rdx],0xa
   14003d9b3:	jne    0x14003d9bc
   14003d9b5:	or     BYTE PTR [rax+rdi*1+0x38],0x4
   14003d9ba:	jmp    0x14003d9c1
   14003d9bc:	and    BYTE PTR [rax+rdi*1+0x38],0xfb
   14003d9c1:	lea    r12,[rdx+r8*1]
   14003d9c5:	mov    rsi,rdx
   14003d9c8:	mov    rbx,rdx
   14003d9cb:	cmp    rdx,r12
   14003d9ce:	jae    0x14003db09
   14003d9d4:	lea    rbp,[rdx+0x1]
   14003d9d8:	mov    al,BYTE PTR [rsi]
   14003d9da:	cmp    al,0x1a
   14003d9dc:	je     0x14003dada
   14003d9e2:	cmp    al,0xd
   14003d9e4:	je     0x14003d9f6
   14003d9e6:	mov    BYTE PTR [rbx],al
   14003d9e8:	inc    rbx
   14003d9eb:	inc    rsi
   14003d9ee:	inc    rbp
   14003d9f1:	jmp    0x14003dacf
   14003d9f6:	cmp    rbp,r12
   14003d9f9:	jae    0x14003da16
   14003d9fb:	cmp    BYTE PTR [rbp+0x0],0xa
   14003d9ff:	jne    0x14003da11
   14003da01:	add    rsi,0x2
   14003da05:	add    rbp,0x2
   14003da09:	mov    BYTE PTR [rbx],0xa
   14003da0c:	jmp    0x14003dacc
   14003da11:	mov    BYTE PTR [rbx],0xd
   14003da14:	jmp    0x14003d9e8
   14003da16:	and    QWORD PTR [rsp+0x20],0x0
   14003da1c:	lea    r9,[rsp+0x90]
   14003da24:	mov    r8d,0x1
   14003da2a:	lea    rdx,[rsp+0x88]
   14003da32:	mov    rcx,r13
   14003da35:	inc    rsi
   14003da38:	inc    rbp
   14003da3b:	call   QWORD PTR [rip+0xd737]        # 0x14004b178
   14003da41:	test   eax,eax
   14003da43:	je     0x14003dac2
   14003da45:	cmp    DWORD PTR [rsp+0x90],0x0
   14003da4d:	je     0x14003dac2
   14003da4f:	lea    r10,[rip+0xfffffffffffc25aa]        # 0x140000000
   14003da56:	mov    rax,QWORD PTR [r10+r15*8+0x76cc0]
   14003da5e:	test   BYTE PTR [rax+rdi*1+0x38],0x48
   14003da63:	je     0x14003da86
   14003da65:	mov    cl,BYTE PTR [rsp+0x88]
   14003da6c:	cmp    cl,0xa
   14003da6f:	jne    0x14003da75
   14003da71:	mov    BYTE PTR [rbx],cl
   14003da73:	jmp    0x14003dacf
   14003da75:	mov    BYTE PTR [rbx],0xd
   14003da78:	mov    rax,QWORD PTR [r10+r15*8+0x76cc0]
   14003da80:	mov    BYTE PTR [rax+rdi*1+0x3a],cl
   14003da84:	jmp    0x14003dacf
   14003da86:	cmp    BYTE PTR [rsp+0x88],0xa
   14003da8e:	jne    0x14003da99
   14003da90:	cmp    rbx,r14
   14003da93:	je     0x14003da09
   14003da99:	mov    ecx,DWORD PTR [rsp+0x80]
   14003daa0:	mov    r8d,0x1
   14003daa6:	or     rdx,0xffffffffffffffff
   14003daaa:	call   0x140046138
   14003daaf:	cmp    BYTE PTR [rsp+0x88],0xa
   14003dab7:	lea    r10,[rip+0xfffffffffffc2542]        # 0x140000000
   14003dabe:	je     0x14003dacf
   14003dac0:	jmp    0x14003dac9
   14003dac2:	lea    r10,[rip+0xfffffffffffc2537]        # 0x140000000
   14003dac9:	mov    BYTE PTR [rbx],0xd
   14003dacc:	inc    rbx
   14003dacf:	cmp    rsi,r12
   14003dad2:	jb     0x14003d9d8
   14003dad8:	jmp    0x14003daf9
   14003dada:	mov    rcx,QWORD PTR [r10+r15*8+0x76cc0]
   14003dae2:	mov    al,BYTE PTR [rcx+rdi*1+0x38]
   14003dae6:	test   al,0x40
   14003dae8:	jne    0x14003daf2
   14003daea:	or     al,0x2
   14003daec:	mov    BYTE PTR [rcx+rdi*1+0x38],al
   14003daf0:	jmp    0x14003daf9
   14003daf2:	mov    al,BYTE PTR [rsi]
   14003daf4:	mov    BYTE PTR [rbx],al
   14003daf6:	inc    rbx
   14003daf9:	mov    r9d,DWORD PTR [rsp+0x80]
   14003db01:	mov    rbp,QWORD PTR [rsp+0x98]
   14003db09:	sub    ebx,r14d
   14003db0c:	jne    0x14003db15
   14003db0e:	xor    eax,eax
   14003db10:	jmp    0x14003dc50
   14003db15:	mov    rcx,QWORD PTR [r10+r15*8+0x76cc0]
   14003db1d:	cmp    BYTE PTR [rcx+rdi*1+0x39],0x0
   14003db22:	jne    0x14003db2b
   14003db24:	mov    eax,ebx
   14003db26:	jmp    0x14003dc50
   14003db2b:	movsxd rax,ebx
   14003db2e:	lea    rbx,[r14-0x1]
   14003db32:	add    rbx,rax
   14003db35:	test   BYTE PTR [rbx],0x80
   14003db38:	jne    0x14003db42
   14003db3a:	inc    rbx
   14003db3d:	jmp    0x14003dbec
   14003db42:	mov    edx,0x1
   14003db47:	jmp    0x14003db58
   14003db49:	cmp    edx,0x4
   14003db4c:	ja     0x14003db66
   14003db4e:	cmp    rbx,r14
   14003db51:	jb     0x14003db66
   14003db53:	dec    rbx
   14003db56:	inc    edx
   14003db58:	movzx  eax,BYTE PTR [rbx]
   14003db5b:	cmp    BYTE PTR [rax+r10*1+0x714c0],0x0
   14003db64:	je     0x14003db49
   14003db66:	movzx  r8d,BYTE PTR [rbx]
   14003db6a:	movsx  eax,BYTE PTR [r8+r10*1+0x714c0]
   14003db73:	test   eax,eax
   14003db75:	jne    0x14003db8a
   14003db77:	call   0x140032c50
   14003db7c:	mov    DWORD PTR [rax],0x2a
   14003db82:	or     eax,0xffffffff
   14003db85:	jmp    0x14003dc50
   14003db8a:	inc    eax
   14003db8c:	cmp    eax,edx
   14003db8e:	jne    0x14003db97
   14003db90:	mov    eax,edx
   14003db92:	add    rbx,rax
   14003db95:	jmp    0x14003dbec
   14003db97:	test   BYTE PTR [rcx+rdi*1+0x38],0x48
   14003db9c:	je     0x14003dbd9
   14003db9e:	inc    rbx
   14003dba1:	mov    BYTE PTR [rcx+rdi*1+0x3a],r8b
   14003dba6:	cmp    edx,0x2
   14003dba9:	jb     0x14003dbbc
   14003dbab:	mov    al,BYTE PTR [rbx]
   14003dbad:	inc    rbx
   14003dbb0:	mov    rcx,QWORD PTR [r10+r15*8+0x76cc0]
   14003dbb8:	mov    BYTE PTR [rcx+rdi*1+0x3b],al
   14003dbbc:	cmp    edx,0x3
   14003dbbf:	jne    0x14003dbd2
   14003dbc1:	mov    al,BYTE PTR [rbx]
   14003dbc3:	inc    rbx
   14003dbc6:	mov    rcx,QWORD PTR [r10+r15*8+0x76cc0]
   14003dbce:	mov    BYTE PTR [rcx+rdi*1+0x3c],al
   14003dbd2:	mov    eax,edx
   14003dbd4:	sub    rbx,rax
   14003dbd7:	jmp    0x14003dbec
   14003dbd9:	neg    edx
   14003dbdb:	mov    r8d,0x1
   14003dbe1:	movsxd rdx,edx
   14003dbe4:	mov    ecx,r9d
   14003dbe7:	call   0x140046138
   14003dbec:	mov    eax,DWORD PTR [rsp+0xa0]
   14003dbf3:	sub    ebx,r14d
   14003dbf6:	mov    DWORD PTR [rsp+0x28],eax
   14003dbfa:	mov    r9d,ebx
   14003dbfd:	mov    r8,r14
   14003dc00:	mov    QWORD PTR [rsp+0x20],rbp
   14003dc05:	xor    edx,edx
   14003dc07:	mov    ecx,0xfde9
   14003dc0c:	call   QWORD PTR [rip+0xd516]        # 0x14004b128
   14003dc12:	mov    edx,eax
   14003dc14:	test   eax,eax
   14003dc16:	jne    0x14003dc2a
   14003dc18:	call   QWORD PTR [rip+0xd4c2]        # 0x14004b0e0
   14003dc1e:	mov    ecx,eax
   14003dc20:	call   0x140032be0
   14003dc25:	jmp    0x14003db82
   14003dc2a:	lea    rcx,[rip+0xfffffffffffc23cf]        # 0x140000000
   14003dc31:	mov    rcx,QWORD PTR [rcx+r15*8+0x76cc0]
   14003dc39:	and    BYTE PTR [rcx+rdi*1+0x3d],0xfd
   14003dc3e:	cmp    eax,ebx
   14003dc40:	setne  al
   14003dc43:	and    al,0x1
   14003dc45:	add    al,al
   14003dc47:	or     BYTE PTR [rcx+rdi*1+0x3d],al
   14003dc4b:	mov    eax,edx
   14003dc4d:	add    rax,rax
   14003dc50:	add    rsp,0x38
   14003dc54:	pop    r15
   14003dc56:	pop    r14
   14003dc58:	pop    r13
   14003dc5a:	pop    r12
   14003dc5c:	pop    rdi
   14003dc5d:	pop    rsi
   14003dc5e:	pop    rbp
   14003dc5f:	pop    rbx
   14003dc60:	ret    
   14003dc61:	int3   
   14003dc62:	int3   
   14003dc63:	int3   
   14003dc64:	mov    QWORD PTR [rsp+0x18],rbx
   14003dc69:	mov    QWORD PTR [rsp+0x10],rdx
   14003dc6e:	push   rbp
   14003dc6f:	push   rsi
   14003dc70:	push   rdi
   14003dc71:	push   r12
   14003dc73:	push   r13
   14003dc75:	push   r14
   14003dc77:	push   r15
   14003dc79:	sub    rsp,0x60
   14003dc7d:	movsxd r13,ecx
   14003dc80:	mov    r9,rdx
   14003dc83:	mov    r12d,r8d
   14003dc86:	cmp    r13d,0xfffffffe
   14003dc8a:	jne    0x14003dca5
   14003dc8c:	call   0x140032c30
   14003dc91:	xor    esi,esi
   14003dc93:	mov    DWORD PTR [rax],esi
   14003dc95:	call   0x140032c50
   14003dc9a:	mov    DWORD PTR [rax],0x9
   14003dca0:	jmp    0x14003e0ae
   14003dca5:	xor    esi,esi
   14003dca7:	test   ecx,ecx
   14003dca9:	js     0x14003e097
   14003dcaf:	cmp    r13d,DWORD PTR [rip+0x3940a]        # 0x1400770c0
   14003dcb6:	jae    0x14003e097
   14003dcbc:	mov    rbp,r13
   14003dcbf:	lea    r8d,[rsi+0x1]
   14003dcc3:	and    ebp,0x3f
   14003dcc6:	mov    QWORD PTR [rsp+0x48],r8
   14003dccb:	mov    rdx,r13
   14003dcce:	shl    rbp,0x6
   14003dcd2:	sar    rdx,0x6
   14003dcd6:	lea    r11,[rip+0x38fe3]        # 0x140076cc0
   14003dcdd:	mov    QWORD PTR [rsp+0x40],rdx
   14003dce2:	mov    rax,QWORD PTR [r11+rdx*8]
   14003dce6:	test   BYTE PTR [rax+rbp*1+0x38],r8b
   14003dceb:	je     0x14003e097
   14003dcf1:	cmp    r12d,0x7fffffff
   14003dcf8:	jbe    0x14003dd11
   14003dcfa:	call   0x140032c30
   14003dcff:	mov    DWORD PTR [rax],esi
   14003dd01:	call   0x140032c50
   14003dd06:	mov    DWORD PTR [rax],0x16
   14003dd0c:	jmp    0x14003e0a9
   14003dd11:	test   r12d,r12d
   14003dd14:	je     0x14003e093
   14003dd1a:	test   BYTE PTR [rax+rbp*1+0x38],0x2
   14003dd1f:	jne    0x14003e093
   14003dd25:	test   r9,r9
   14003dd28:	je     0x14003dcfa
   14003dd2a:	mov    rcx,QWORD PTR [rax+rbp*1+0x28]
   14003dd2f:	mov    rbx,rsi
   14003dd32:	movsx  r10d,BYTE PTR [rax+rbp*1+0x39]
   14003dd38:	mov    edi,0x4
   14003dd3d:	mov    QWORD PTR [rsp+0x38],rcx
   14003dd42:	mov    ecx,r10d
   14003dd45:	mov    BYTE PTR [rsp+0xa0],r10b
   14003dd4d:	sub    ecx,r8d
   14003dd50:	je     0x14003dd6c
   14003dd52:	sub    ecx,r8d
   14003dd55:	jne    0x14003dd61
   14003dd57:	mov    eax,r12d
   14003dd5a:	not    eax
   14003dd5c:	test   r8b,al
   14003dd5f:	je     0x14003dd76
   14003dd61:	mov    r14d,r12d
   14003dd64:	mov    r15,r9
   14003dd67:	jmp    0x14003de0c
   14003dd6c:	mov    eax,r12d
   14003dd6f:	not    eax
   14003dd71:	test   r8b,al
   14003dd74:	jne    0x14003dd92
   14003dd76:	call   0x140032c30
   14003dd7b:	mov    DWORD PTR [rax],esi
   14003dd7d:	call   0x140032c50
   14003dd82:	mov    DWORD PTR [rax],0x16
   14003dd88:	call   0x1400307d0
   14003dd8d:	jmp    0x14003df18
   14003dd92:	mov    r14d,r12d
   14003dd95:	shr    r14d,1
   14003dd98:	cmp    r14d,edi
   14003dd9b:	cmovb  r14d,edi
   14003dd9f:	mov    ecx,r14d
   14003dda2:	call   0x140036600
   14003dda7:	xor    ecx,ecx
   14003dda9:	mov    rbx,rax
   14003ddac:	call   0x140038c70
   14003ddb1:	xor    ecx,ecx
   14003ddb3:	call   0x140038c70
   14003ddb8:	mov    r15,rbx
   14003ddbb:	test   rbx,rbx
   14003ddbe:	jne    0x14003dddb
   14003ddc0:	call   0x140032c50
   14003ddc5:	mov    DWORD PTR [rax],0xc
   14003ddcb:	call   0x140032c30
   14003ddd0:	mov    DWORD PTR [rax],0x8
   14003ddd6:	jmp    0x14003df18
   14003dddb:	xor    edx,edx
   14003dddd:	mov    ecx,r13d
   14003dde0:	lea    r8d,[rdx+0x1]
   14003dde4:	call   0x140046138
   14003dde9:	mov    rdx,QWORD PTR [rsp+0x40]
   14003ddee:	lea    r11,[rip+0x38ecb]        # 0x140076cc0
   14003ddf5:	mov    r10b,BYTE PTR [rsp+0xa0]
   14003ddfd:	mov    r8d,0x1
   14003de03:	mov    rcx,QWORD PTR [r11+rdx*8]
   14003de07:	mov    QWORD PTR [rcx+rbp*1+0x30],rax
   14003de0c:	mov    rax,QWORD PTR [r11+rdx*8]
   14003de10:	mov    edi,esi
   14003de12:	mov    QWORD PTR [rsp+0x50],r15
   14003de17:	mov    r9d,0xa
   14003de1d:	test   BYTE PTR [rax+rbp*1+0x38],0x48
   14003de22:	je     0x14003dea1
   14003de24:	mov    cl,BYTE PTR [rax+rbp*1+0x3a]
   14003de28:	cmp    cl,r9b
   14003de2b:	je     0x14003dea1
   14003de2d:	test   r14d,r14d
   14003de30:	je     0x14003dea1
   14003de32:	mov    BYTE PTR [r15],cl
   14003de35:	dec    r14d
   14003de38:	mov    rax,QWORD PTR [r11+rdx*8]
   14003de3c:	add    r15,r8
   14003de3f:	mov    edi,r8d
   14003de42:	mov    BYTE PTR [rax+rbp*1+0x3a],r9b
   14003de47:	test   r10b,r10b
   14003de4a:	je     0x14003dea1
   14003de4c:	mov    rax,QWORD PTR [r11+rdx*8]
   14003de50:	mov    cl,BYTE PTR [rax+rbp*1+0x3b]
   14003de54:	cmp    cl,r9b
   14003de57:	je     0x14003dea1
   14003de59:	test   r14d,r14d
   14003de5c:	je     0x14003dea1
   14003de5e:	mov    BYTE PTR [r15],cl
   14003de61:	lea    edi,[r9-0x8]
   14003de65:	mov    rax,QWORD PTR [r11+rdx*8]
   14003de69:	add    r15,r8
   14003de6c:	dec    r14d
   14003de6f:	mov    BYTE PTR [rax+rbp*1+0x3b],r9b
   14003de74:	cmp    r10b,r8b
   14003de77:	jne    0x14003dea1
   14003de79:	mov    rax,QWORD PTR [r11+rdx*8]
   14003de7d:	mov    cl,BYTE PTR [rax+rbp*1+0x3c]
   14003de81:	cmp    cl,r9b
   14003de84:	je     0x14003dea1
   14003de86:	test   r14d,r14d
   14003de89:	je     0x14003dea1
   14003de8b:	mov    BYTE PTR [r15],cl
   14003de8e:	lea    edi,[r9-0x7]
   14003de92:	mov    rax,QWORD PTR [r11+rdx*8]
   14003de96:	add    r15,r8
   14003de99:	dec    r14d
   14003de9c:	mov    BYTE PTR [rax+rbp*1+0x3c],r9b
   14003dea1:	mov    ecx,r13d
   14003dea4:	call   0x1400452c8
   14003dea9:	test   eax,eax
   14003deab:	je     0x14003df36
   14003deb1:	mov    rax,QWORD PTR [rsp+0x40]
   14003deb6:	lea    rcx,[rip+0x38e03]        # 0x140076cc0
   14003debd:	mov    rax,QWORD PTR [rcx+rax*8]
   14003dec1:	test   BYTE PTR [rax+rbp*1+0x38],0x80
   14003dec6:	je     0x14003df36
   14003dec8:	mov    rcx,QWORD PTR [rsp+0x38]
   14003decd:	lea    rdx,[rsp+0x30]
   14003ded2:	call   QWORD PTR [rip+0xd450]        # 0x14004b328
   14003ded8:	test   eax,eax
   14003deda:	je     0x14003df36
   14003dedc:	cmp    BYTE PTR [rsp+0xa0],0x2
   14003dee4:	jne    0x14003df3b
   14003dee6:	mov    rcx,QWORD PTR [rsp+0x38]
   14003deeb:	lea    r9,[rsp+0xb8]
   14003def3:	shr    r14d,1
   14003def6:	mov    rdx,r15
   14003def9:	mov    r8d,r14d
   14003defc:	mov    QWORD PTR [rsp+0x20],rsi
   14003df01:	call   QWORD PTR [rip+0xd441]        # 0x14004b348
   14003df07:	test   eax,eax
   14003df09:	jne    0x14003df2a
   14003df0b:	call   QWORD PTR [rip+0xd1cf]        # 0x14004b0e0
   14003df11:	mov    ecx,eax
   14003df13:	call   0x140032be0
   14003df18:	or     edi,0xffffffff
   14003df1b:	mov    rcx,rbx
   14003df1e:	call   0x140038c70
   14003df23:	mov    eax,edi
   14003df25:	jmp    0x14003e0b1
   14003df2a:	mov    eax,DWORD PTR [rsp+0xb8]
   14003df31:	lea    edi,[rdi+rax*2]
   14003df34:	jmp    0x14003df76
   14003df36:	mov    BYTE PTR [rsp+0x48],sil
   14003df3b:	mov    rcx,QWORD PTR [rsp+0x38]
   14003df40:	lea    r9,[rsp+0xb8]
   14003df48:	mov    r8d,r14d
   14003df4b:	mov    QWORD PTR [rsp+0x20],rsi
   14003df50:	mov    rdx,r15
   14003df53:	call   QWORD PTR [rip+0xd21f]        # 0x14004b178
   14003df59:	test   eax,eax
   14003df5b:	je     0x14003e05d
   14003df61:	cmp    DWORD PTR [rsp+0xb8],r12d
   14003df69:	ja     0x14003e05d
   14003df6f:	add    edi,DWORD PTR [rsp+0xb8]
   14003df76:	mov    rdx,QWORD PTR [rsp+0x40]
   14003df7b:	lea    r11,[rip+0x38d3e]        # 0x140076cc0
   14003df82:	mov    rax,QWORD PTR [r11+rdx*8]
   14003df86:	test   BYTE PTR [rax+rbp*1+0x38],0x80
   14003df8b:	je     0x14003df1b
   14003df8d:	cmp    BYTE PTR [rsp+0xa0],0x2
   14003df95:	je     0x14003dfbf
   14003df97:	mov    r9,QWORD PTR [rsp+0xa8]
   14003df9f:	mov    rax,r12
   14003dfa2:	shr    rax,1
   14003dfa5:	mov    rdx,r15
   14003dfa8:	movsxd r8,edi
   14003dfab:	mov    ecx,r13d
   14003dfae:	mov    QWORD PTR [rsp+0x20],rax
   14003dfb3:	call   0x14003d964
   14003dfb8:	mov    edi,eax
   14003dfba:	jmp    0x14003df1b
   14003dfbf:	mov    rax,QWORD PTR [rsp+0x48]
   14003dfc4:	test   al,al
   14003dfc6:	je     0x14003e045
   14003dfc8:	mov    r8,QWORD PTR [rsp+0x50]
   14003dfcd:	movsxd rax,edi
   14003dfd0:	mov    rcx,r8
   14003dfd3:	shr    rax,1
   14003dfd6:	mov    rdi,r8
   14003dfd9:	lea    r10,[r8+rax*2]
   14003dfdd:	cmp    r8,r10
   14003dfe0:	jae    0x14003e038
   14003dfe2:	lea    rax,[r8+0x2]
   14003dfe6:	mov    esi,0xa
   14003dfeb:	movzx  r9d,WORD PTR [rcx]
   14003dfef:	cmp    r9w,0x1a
   14003dff4:	je     0x14003e02f
   14003dff6:	cmp    r9w,0xd
   14003dffb:	jne    0x14003e018
   14003dffd:	cmp    rax,r10
   14003e000:	jae    0x14003e018
   14003e002:	cmp    WORD PTR [rax],si
   14003e005:	jne    0x14003e018
   14003e007:	add    rcx,0x4
   14003e00b:	mov    WORD PTR [rdi],si
   14003e00e:	add    rax,0x4
   14003e012:	add    rdi,0x2
   14003e016:	jmp    0x14003e028
   14003e018:	mov    WORD PTR [rdi],r9w
   14003e01c:	add    rcx,0x2
   14003e020:	add    rdi,0x2
   14003e024:	add    rax,0x2
   14003e028:	cmp    rcx,r10
   14003e02b:	jb     0x14003dfeb
   14003e02d:	jmp    0x14003e038
   14003e02f:	mov    rax,QWORD PTR [r11+rdx*8]
   14003e033:	or     BYTE PTR [rax+rbp*1+0x38],0x2
   14003e038:	sub    rdi,r8
   14003e03b:	sar    rdi,1
   14003e03e:	add    edi,edi
   14003e040:	jmp    0x14003df1b
   14003e045:	mov    rdx,QWORD PTR [rsp+0x50]
   14003e04a:	mov    ecx,r13d
   14003e04d:	movsxd r8,edi
   14003e050:	shr    r8,1
   14003e053:	call   0x14003d734
   14003e058:	jmp    0x14003dfb8
   14003e05d:	call   QWORD PTR [rip+0xd07d]        # 0x14004b0e0
   14003e063:	cmp    eax,0x5
   14003e066:	jne    0x14003e083
   14003e068:	call   0x140032c50
   14003e06d:	mov    DWORD PTR [rax],0x9
   14003e073:	call   0x140032c30
   14003e078:	mov    DWORD PTR [rax],0x5
   14003e07e:	jmp    0x14003df18
   14003e083:	cmp    eax,0x6d
   14003e086:	jne    0x14003df11
   14003e08c:	mov    edi,esi
   14003e08e:	jmp    0x14003df1b
   14003e093:	xor    eax,eax
   14003e095:	jmp    0x14003e0b1
   14003e097:	call   0x140032c30
   14003e09c:	mov    DWORD PTR [rax],esi
   14003e09e:	call   0x140032c50
   14003e0a3:	mov    DWORD PTR [rax],0x9
   14003e0a9:	call   0x1400307d0
   14003e0ae:	or     eax,0xffffffff
   14003e0b1:	mov    rbx,QWORD PTR [rsp+0xb0]
   14003e0b9:	add    rsp,0x60
   14003e0bd:	pop    r15
   14003e0bf:	pop    r14
   14003e0c1:	pop    r13
   14003e0c3:	pop    r12
   14003e0c5:	pop    rdi
   14003e0c6:	pop    rsi
   14003e0c7:	pop    rbp
   14003e0c8:	ret    
   14003e0c9:	int3   
   14003e0ca:	int3   
   14003e0cb:	int3   
   14003e0cc:	cmp    rcx,rdx
   14003e0cf:	jae    0x14003e0d5
   14003e0d1:	or     eax,0xffffffff
   14003e0d4:	ret    
   14003e0d5:	xor    eax,eax
   14003e0d7:	cmp    rcx,rdx
   14003e0da:	seta   al
   14003e0dd:	ret    
   14003e0de:	int3   
   14003e0df:	int3   
   14003e0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14003e0e5:	mov    QWORD PTR [rsp+0x10],rdx
   14003e0ea:	push   rbp
   14003e0eb:	push   rsi
   14003e0ec:	push   rdi
   14003e0ed:	push   r12
   14003e0ef:	push   r13
   14003e0f1:	push   r14
   14003e0f3:	push   r15
   14003e0f5:	mov    rbp,rsp
   14003e0f8:	sub    rsp,0x60
   14003e0fc:	xor    edi,edi
   14003e0fe:	mov    rbx,rcx
   14003e101:	test   rdx,rdx
   14003e104:	jne    0x14003e11c
   14003e106:	call   0x140032c50
   14003e10b:	lea    ebx,[rdi+0x16]
   14003e10e:	mov    DWORD PTR [rax],ebx
   14003e110:	call   0x1400307d0
   14003e115:	mov    eax,ebx
   14003e117:	jmp    0x14003e2bc
   14003e11c:	xorps  xmm0,xmm0
   14003e11f:	mov    QWORD PTR [rdx],rdi
   14003e122:	cmp    QWORD PTR [rcx],rdi
   14003e125:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14003e12a:	mov    QWORD PTR [rbp-0x10],rdi
   14003e12e:	je     0x14003e187
   14003e130:	mov    rcx,QWORD PTR [rbx]
   14003e133:	lea    rdx,[rbp+0x50]
   14003e137:	mov    WORD PTR [rbp+0x50],0x3f2a
   14003e13d:	mov    BYTE PTR [rbp+0x52],dil
   14003e141:	call   0x140046858
   14003e146:	mov    rcx,QWORD PTR [rbx]
   14003e149:	test   rax,rax
   14003e14c:	jne    0x14003e15e
   14003e14e:	lea    r9,[rbp-0x20]
   14003e152:	xor    r8d,r8d
   14003e155:	xor    edx,edx
   14003e157:	call   0x14003e2ec
   14003e15c:	jmp    0x14003e16a
   14003e15e:	lea    r8,[rbp-0x20]
   14003e162:	mov    rdx,rax
   14003e165:	call   0x14003e3fc
   14003e16a:	mov    r14d,eax
   14003e16d:	test   eax,eax
   14003e16f:	jne    0x14003e17a
   14003e171:	add    rbx,0x8
   14003e175:	cmp    QWORD PTR [rbx],rdi
   14003e178:	jmp    0x14003e12e
   14003e17a:	mov    r12,QWORD PTR [rbp-0x18]
   14003e17e:	mov    rsi,QWORD PTR [rbp-0x20]
   14003e182:	jmp    0x14003e280
   14003e187:	mov    rsi,QWORD PTR [rbp-0x20]
   14003e18b:	mov    r9,rdi
   14003e18e:	mov    r12,QWORD PTR [rbp-0x18]
   14003e192:	mov    rdx,rsi
   14003e195:	mov    rax,r12
   14003e198:	mov    QWORD PTR [rbp+0x50],rdi
   14003e19c:	sub    rax,rsi
   14003e19f:	mov    r8,rdi
   14003e1a2:	mov    r15,rax
   14003e1a5:	sar    r15,0x3
   14003e1a9:	inc    r15
   14003e1ac:	lea    rcx,[rax+0x7]
   14003e1b0:	shr    rcx,0x3
   14003e1b4:	cmp    rsi,r12
   14003e1b7:	cmova  rcx,rdi
   14003e1bb:	or     r14,0xffffffffffffffff
   14003e1bf:	test   rcx,rcx
   14003e1c2:	je     0x14003e1e9
   14003e1c4:	mov    r10,QWORD PTR [rdx]
   14003e1c7:	mov    rax,r14
   14003e1ca:	inc    rax
   14003e1cd:	cmp    BYTE PTR [r10+rax*1],dil
   14003e1d1:	jne    0x14003e1ca
   14003e1d3:	inc    r9
   14003e1d6:	add    rdx,0x8
   14003e1da:	add    r9,rax
   14003e1dd:	inc    r8
   14003e1e0:	cmp    r8,rcx
   14003e1e3:	jne    0x14003e1c4
   14003e1e5:	mov    QWORD PTR [rbp+0x50],r9
   14003e1e9:	mov    r8d,0x1
   14003e1ef:	mov    rdx,r9
   14003e1f2:	mov    rcx,r15
   14003e1f5:	call   0x14003370c
   14003e1fa:	mov    rbx,rax
   14003e1fd:	test   rax,rax
   14003e200:	je     0x14003e279
   14003e202:	lea    rdx,[rax+r15*8]
   14003e206:	mov    r15,rsi
   14003e209:	mov    QWORD PTR [rbp-0x28],rdx
   14003e20d:	mov    rax,rdx
   14003e210:	mov    QWORD PTR [rbp+0x58],rdx
   14003e214:	cmp    rsi,r12
   14003e217:	je     0x14003e26f
   14003e219:	mov    rcx,rbx
   14003e21c:	sub    rcx,rsi
   14003e21f:	mov    QWORD PTR [rbp-0x30],rcx
   14003e223:	mov    r8,QWORD PTR [r15]
   14003e226:	mov    r13,r14
   14003e229:	inc    r13
   14003e22c:	cmp    BYTE PTR [r8+r13*1],dil
   14003e230:	jne    0x14003e229
   14003e232:	sub    rdx,rax
   14003e235:	inc    r13
   14003e238:	add    rdx,QWORD PTR [rbp+0x50]
   14003e23c:	mov    r9,r13
   14003e23f:	mov    rcx,rax
   14003e242:	call   0x140046784
   14003e247:	test   eax,eax
   14003e249:	jne    0x14003e2d4
   14003e24f:	mov    rax,QWORD PTR [rbp+0x58]
   14003e253:	mov    rcx,QWORD PTR [rbp-0x30]
   14003e257:	mov    rdx,QWORD PTR [rbp-0x28]
   14003e25b:	mov    QWORD PTR [rcx+r15*1],rax
   14003e25f:	add    rax,r13
   14003e262:	add    r15,0x8
   14003e266:	mov    QWORD PTR [rbp+0x58],rax
   14003e26a:	cmp    r15,r12
   14003e26d:	jne    0x14003e223
   14003e26f:	mov    rax,QWORD PTR [rbp+0x48]
   14003e273:	mov    r14d,edi
   14003e276:	mov    QWORD PTR [rax],rbx
   14003e279:	xor    ecx,ecx
   14003e27b:	call   0x140038c70
   14003e280:	mov    rbx,r12
   14003e283:	mov    r15,rsi
   14003e286:	sub    rbx,rsi
   14003e289:	add    rbx,0x7
   14003e28d:	shr    rbx,0x3
   14003e291:	cmp    rsi,r12
   14003e294:	cmova  rbx,rdi
   14003e298:	test   rbx,rbx
   14003e29b:	je     0x14003e2b1
   14003e29d:	mov    rcx,QWORD PTR [r15]
   14003e2a0:	call   0x140038c70
   14003e2a5:	inc    rdi
   14003e2a8:	lea    r15,[r15+0x8]
   14003e2ac:	cmp    rdi,rbx
   14003e2af:	jne    0x14003e29d
   14003e2b1:	mov    rcx,rsi
   14003e2b4:	call   0x140038c70
   14003e2b9:	mov    eax,r14d
   14003e2bc:	mov    rbx,QWORD PTR [rsp+0xa0]
   14003e2c4:	add    rsp,0x60
   14003e2c8:	pop    r15
   14003e2ca:	pop    r14
   14003e2cc:	pop    r13
   14003e2ce:	pop    r12
   14003e2d0:	pop    rdi
   14003e2d1:	pop    rsi
   14003e2d2:	pop    rbp
   14003e2d3:	ret    
   14003e2d4:	xor    r9d,r9d
   14003e2d7:	mov    QWORD PTR [rsp+0x20],rdi
   14003e2dc:	xor    r8d,r8d
   14003e2df:	xor    edx,edx
   14003e2e1:	xor    ecx,ecx
   14003e2e3:	call   0x140030820
   14003e2e8:	int3   
   14003e2e9:	int3   
   14003e2ea:	int3   
   14003e2eb:	int3   
   14003e2ec:	mov    rax,rsp
   14003e2ef:	mov    QWORD PTR [rax+0x8],rbx
   14003e2f3:	mov    QWORD PTR [rax+0x10],rbp
   14003e2f7:	mov    QWORD PTR [rax+0x18],rsi
   14003e2fb:	mov    QWORD PTR [rax+0x20],rdi
   14003e2ff:	push   r12
   14003e301:	push   r14
   14003e303:	push   r15
   14003e305:	sub    rsp,0x30
   14003e309:	or     rax,0xffffffffffffffff
   14003e30d:	mov    rsi,r9
   14003e310:	mov    rdi,rax
   14003e313:	mov    rbp,r8
   14003e316:	mov    r12,rdx
   14003e319:	mov    r15,rcx
   14003e31c:	inc    rdi
   14003e31f:	cmp    BYTE PTR [rcx+rdi*1],0x0
   14003e323:	jne    0x14003e31c
   14003e325:	mov    edx,0x1
   14003e32a:	sub    rax,r8
   14003e32d:	add    rdi,rdx
   14003e330:	cmp    rdi,rax
   14003e333:	jbe    0x14003e357
   14003e335:	lea    eax,[rdx+0xb]
   14003e338:	mov    rbx,QWORD PTR [rsp+0x50]
   14003e33d:	mov    rbp,QWORD PTR [rsp+0x58]
   14003e342:	mov    rsi,QWORD PTR [rsp+0x60]
   14003e347:	mov    rdi,QWORD PTR [rsp+0x68]
   14003e34c:	add    rsp,0x30
   14003e350:	pop    r15
   14003e352:	pop    r14
   14003e354:	pop    r12
   14003e356:	ret    
   14003e357:	lea    r14,[r8+0x1]
   14003e35b:	add    r14,rdi
   14003e35e:	mov    rcx,r14
   14003e361:	call   0x140035d88
   14003e366:	mov    rbx,rax
   14003e369:	test   rbp,rbp
   14003e36c:	je     0x14003e383
   14003e36e:	mov    r9,rbp
   14003e371:	mov    r8,r12
   14003e374:	mov    rdx,r14
   14003e377:	mov    rcx,rax
   14003e37a:	call   0x140046784
   14003e37f:	test   eax,eax
   14003e381:	jne    0x14003e3d0
   14003e383:	sub    r14,rbp
   14003e386:	lea    rcx,[rbx+rbp*1]
   14003e38a:	mov    rdx,r14
   14003e38d:	mov    r9,rdi
   14003e390:	mov    r8,r15
   14003e393:	call   0x140046784
   14003e398:	test   eax,eax
   14003e39a:	jne    0x14003e3e6
   14003e39c:	mov    rcx,rsi
   14003e39f:	call   0x14003e5a8
   14003e3a4:	mov    edi,eax
   14003e3a6:	test   eax,eax
   14003e3a8:	je     0x14003e3b4
   14003e3aa:	mov    rcx,rbx
   14003e3ad:	call   0x140038c70
   14003e3b2:	jmp    0x14003e3c2
   14003e3b4:	mov    rax,QWORD PTR [rsi+0x8]
   14003e3b8:	mov    QWORD PTR [rax],rbx
   14003e3bb:	add    QWORD PTR [rsi+0x8],0x8
   14003e3c0:	xor    edi,edi
   14003e3c2:	xor    ecx,ecx
   14003e3c4:	call   0x140038c70
   14003e3c9:	mov    eax,edi
   14003e3cb:	jmp    0x14003e338
   14003e3d0:	and    QWORD PTR [rsp+0x20],0x0
   14003e3d6:	xor    r9d,r9d
   14003e3d9:	xor    r8d,r8d
   14003e3dc:	xor    edx,edx
   14003e3de:	xor    ecx,ecx
   14003e3e0:	call   0x140030820
   14003e3e5:	int3   
   14003e3e6:	and    QWORD PTR [rsp+0x20],0x0
   14003e3ec:	xor    r9d,r9d
   14003e3ef:	xor    r8d,r8d
   14003e3f2:	xor    edx,edx
   14003e3f4:	xor    ecx,ecx
   14003e3f6:	call   0x140030820
   14003e3fb:	int3   
   14003e3fc:	mov    QWORD PTR [rsp+0x20],rbx
   14003e401:	push   rbp
   14003e402:	push   rsi
   14003e403:	push   rdi
   14003e404:	push   r14
   14003e406:	push   r15
   14003e408:	sub    rsp,0x180
   14003e40f:	mov    rax,QWORD PTR [rip+0x32c3a]        # 0x140071050
   14003e416:	xor    rax,rsp
   14003e419:	mov    QWORD PTR [rsp+0x170],rax
   14003e421:	mov    r14,r8
   14003e424:	mov    rsi,rcx
   14003e427:	movabs rbx,0x200000000801
   14003e431:	cmp    rdx,rcx
   14003e434:	je     0x14003e458
   14003e436:	mov    al,BYTE PTR [rdx]
   14003e438:	sub    al,0x2f
   14003e43a:	cmp    al,0x2d
   14003e43c:	ja     0x14003e448
   14003e43e:	movsx  rax,al
   14003e442:	bt     rbx,rax
   14003e446:	jb     0x14003e458
   14003e448:	mov    rcx,rsi
   14003e44b:	call   0x1400468f8
   14003e450:	mov    rdx,rax
   14003e453:	cmp    rax,rsi
   14003e456:	jne    0x14003e436
   14003e458:	mov    cl,BYTE PTR [rdx]
   14003e45a:	cmp    cl,0x3a
   14003e45d:	jne    0x14003e47d
   14003e45f:	lea    rax,[rsi+0x1]
   14003e463:	cmp    rdx,rax
   14003e466:	je     0x14003e47d
   14003e468:	mov    r9,r14
   14003e46b:	xor    r8d,r8d
   14003e46e:	xor    edx,edx
   14003e470:	mov    rcx,rsi
   14003e473:	call   0x14003e2ec
   14003e478:	jmp    0x14003e4fe
   14003e47d:	sub    cl,0x2f
   14003e480:	xor    edi,edi
   14003e482:	cmp    cl,0x2d
   14003e485:	ja     0x14003e494
   14003e487:	movsx  rax,cl
   14003e48b:	bt     rbx,rax
   14003e48f:	lea    eax,[rdi+0x1]
   14003e492:	jb     0x14003e496
   14003e494:	mov    eax,edi
   14003e496:	sub    rdx,rsi
   14003e499:	lea    rcx,[rsp+0x30]
   14003e49e:	inc    rdx
   14003e4a1:	mov    r8d,0x140
   14003e4a7:	neg    al
   14003e4a9:	sbb    r15,r15
   14003e4ac:	and    r15,rdx
   14003e4af:	xor    edx,edx
   14003e4b1:	call   0x14002a910
   14003e4b6:	xor    r9d,r9d
   14003e4b9:	mov    DWORD PTR [rsp+0x28],edi
   14003e4bd:	lea    r8,[rsp+0x30]
   14003e4c2:	mov    QWORD PTR [rsp+0x20],rdi
   14003e4c7:	xor    edx,edx
   14003e4c9:	mov    rcx,rsi
   14003e4cc:	call   QWORD PTR [rip+0xce7e]        # 0x14004b350
   14003e4d2:	mov    rbx,rax
   14003e4d5:	cmp    rax,0xffffffffffffffff
   14003e4d9:	jne    0x14003e525
   14003e4db:	mov    r9,r14
   14003e4de:	xor    r8d,r8d
   14003e4e1:	xor    edx,edx
   14003e4e3:	mov    rcx,rsi
   14003e4e6:	call   0x14003e2ec
   14003e4eb:	mov    edi,eax
   14003e4ed:	cmp    rbx,0xffffffffffffffff
   14003e4f1:	je     0x14003e4fc
   14003e4f3:	mov    rcx,rbx
   14003e4f6:	call   QWORD PTR [rip+0xcc94]        # 0x14004b190
   14003e4fc:	mov    eax,edi
   14003e4fe:	mov    rcx,QWORD PTR [rsp+0x170]
   14003e506:	xor    rcx,rsp
   14003e509:	call   0x140025df0
   14003e50e:	mov    rbx,QWORD PTR [rsp+0x1c8]
   14003e516:	add    rsp,0x180
   14003e51d:	pop    r15
   14003e51f:	pop    r14
   14003e521:	pop    rdi
   14003e522:	pop    rsi
   14003e523:	pop    rbp
   14003e524:	ret    
   14003e525:	mov    rbp,QWORD PTR [r14+0x8]
   14003e529:	sub    rbp,QWORD PTR [r14]
   14003e52c:	sar    rbp,0x3
   14003e530:	cmp    BYTE PTR [rsp+0x5c],0x2e
   14003e535:	jne    0x14003e54a
   14003e537:	mov    al,BYTE PTR [rsp+0x5d]
   14003e53b:	test   al,al
   14003e53d:	je     0x14003e561
   14003e53f:	cmp    al,0x2e
   14003e541:	jne    0x14003e54a
   14003e543:	cmp    BYTE PTR [rsp+0x5e],dil
   14003e548:	je     0x14003e561
   14003e54a:	mov    r9,r14
   14003e54d:	lea    rcx,[rsp+0x5c]
   14003e552:	mov    r8,r15
   14003e555:	mov    rdx,rsi
   14003e558:	call   0x14003e2ec
   14003e55d:	test   eax,eax
   14003e55f:	jne    0x14003e4eb
   14003e561:	lea    rdx,[rsp+0x30]
   14003e566:	mov    rcx,rbx
   14003e569:	call   QWORD PTR [rip+0xcde9]        # 0x14004b358
   14003e56f:	test   eax,eax
   14003e571:	jne    0x14003e530
   14003e573:	mov    rax,QWORD PTR [r14]
   14003e576:	mov    rdx,QWORD PTR [r14+0x8]
   14003e57a:	sub    rdx,rax
   14003e57d:	sar    rdx,0x3
   14003e581:	cmp    rbp,rdx
   14003e584:	je     0x14003e4ed
   14003e58a:	sub    rdx,rbp
   14003e58d:	lea    rcx,[rax+rbp*8]
   14003e591:	lea    r9,[rip+0xfffffffffffffb34]        # 0x14003e0cc
   14003e598:	mov    r8d,0x8
   14003e59e:	call   0x140046450
   14003e5a3:	jmp    0x14003e4ed
   14003e5a8:	mov    QWORD PTR [rsp+0x8],rbx
   14003e5ad:	mov    QWORD PTR [rsp+0x10],rbp
   14003e5b2:	mov    QWORD PTR [rsp+0x18],rsi
   14003e5b7:	push   rdi
   14003e5b8:	sub    rsp,0x20
   14003e5bc:	mov    rsi,QWORD PTR [rcx+0x10]
   14003e5c0:	mov    rdi,rcx
   14003e5c3:	cmp    QWORD PTR [rcx+0x8],rsi
   14003e5c7:	je     0x14003e5d0
   14003e5c9:	xor    eax,eax
   14003e5cb:	jmp    0x14003e65a
   14003e5d0:	xor    ebx,ebx
   14003e5d2:	cmp    QWORD PTR [rcx],rbx
   14003e5d5:	jne    0x14003e609
   14003e5d7:	lea    edx,[rbx+0x8]
   14003e5da:	lea    ecx,[rbx+0x4]
   14003e5dd:	call   0x140035d88
   14003e5e2:	xor    ecx,ecx
   14003e5e4:	mov    QWORD PTR [rdi],rax
   14003e5e7:	call   0x140038c70
   14003e5ec:	mov    rax,QWORD PTR [rdi]
   14003e5ef:	test   rax,rax
   14003e5f2:	jne    0x14003e5fb
   14003e5f4:	mov    eax,0xc
   14003e5f9:	jmp    0x14003e65a
   14003e5fb:	mov    QWORD PTR [rdi+0x8],rax
   14003e5ff:	add    rax,0x20
   14003e603:	mov    QWORD PTR [rdi+0x10],rax
   14003e607:	jmp    0x14003e5c9
   14003e609:	sub    rsi,QWORD PTR [rcx]
   14003e60c:	movabs rax,0x7fffffffffffffff
   14003e616:	sar    rsi,0x3
   14003e61a:	cmp    rsi,rax
   14003e61d:	ja     0x14003e5f4
   14003e61f:	mov    rcx,QWORD PTR [rcx]
   14003e622:	lea    rbp,[rsi+rsi*1]
   14003e626:	mov    rdx,rbp
   14003e629:	mov    r8d,0x8
   14003e62f:	call   0x14003f6b4
   14003e634:	test   rax,rax
   14003e637:	jne    0x14003e63e
   14003e639:	lea    ebx,[rax+0xc]
   14003e63c:	jmp    0x14003e651
   14003e63e:	lea    rcx,[rax+rsi*8]
   14003e642:	mov    QWORD PTR [rdi],rax
   14003e645:	mov    QWORD PTR [rdi+0x8],rcx
   14003e649:	lea    rcx,[rax+rbp*8]
   14003e64d:	mov    QWORD PTR [rdi+0x10],rcx
   14003e651:	xor    ecx,ecx
   14003e653:	call   0x140038c70
   14003e658:	mov    eax,ebx
   14003e65a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e65f:	mov    rbp,QWORD PTR [rsp+0x38]
   14003e664:	mov    rsi,QWORD PTR [rsp+0x40]
   14003e669:	add    rsp,0x20
   14003e66d:	pop    rdi
   14003e66e:	ret    
   14003e66f:	int3   
   14003e670:	jmp    0x14003e0e0
   14003e675:	int3   
   14003e676:	int3   
   14003e677:	int3   
   14003e678:	mov    QWORD PTR [rsp+0x8],rbx
   14003e67d:	mov    QWORD PTR [rsp+0x20],r9
   14003e682:	push   rdi
   14003e683:	sub    rsp,0x20
   14003e687:	mov    rbx,r9
   14003e68a:	mov    rdi,r8
   14003e68d:	mov    ecx,DWORD PTR [rdx]
   14003e68f:	call   0x140035a44
   14003e694:	nop
   14003e695:	mov    rcx,rdi
   14003e698:	call   0x14003e6b0
   14003e69d:	nop
   14003e69e:	mov    ecx,DWORD PTR [rbx]
   14003e6a0:	call   0x140035a98
   14003e6a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e6aa:	add    rsp,0x20
   14003e6ae:	pop    rdi
   14003e6af:	ret    
   14003e6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14003e6b5:	mov    QWORD PTR [rsp+0x10],rsi
   14003e6ba:	push   rdi
   14003e6bb:	sub    rsp,0x20
   14003e6bf:	mov    rax,QWORD PTR [rcx]
   14003e6c2:	mov    rbx,rcx
   14003e6c5:	mov    rdx,QWORD PTR [rax]
   14003e6c8:	mov    rax,QWORD PTR [rdx+0x88]
   14003e6cf:	mov    edx,DWORD PTR [rax+0x4]
   14003e6d2:	mov    DWORD PTR [rip+0x38ba4],edx        # 0x14007727c
   14003e6d8:	mov    rax,QWORD PTR [rcx]
   14003e6db:	mov    rdx,QWORD PTR [rax]
   14003e6de:	mov    rax,QWORD PTR [rdx+0x88]
   14003e6e5:	mov    edx,DWORD PTR [rax+0x8]
   14003e6e8:	mov    DWORD PTR [rip+0x38b92],edx        # 0x140077280
   14003e6ee:	mov    rax,QWORD PTR [rcx]
   14003e6f1:	mov    rdx,QWORD PTR [rax]
   14003e6f4:	mov    rax,QWORD PTR [rdx+0x88]
   14003e6fb:	mov    rcx,QWORD PTR [rax+0x220]
   14003e702:	mov    QWORD PTR [rip+0x38b8f],rcx        # 0x140077298
   14003e709:	mov    rax,QWORD PTR [rbx]
   14003e70c:	mov    rcx,QWORD PTR [rax]
   14003e70f:	mov    rax,QWORD PTR [rcx+0x88]
   14003e716:	add    rax,0xc
   14003e71a:	je     0x14003e733
   14003e71c:	movsd  xmm0,QWORD PTR [rax]
   14003e720:	movsd  QWORD PTR [rip+0x38b60],xmm0        # 0x140077288
   14003e728:	mov    eax,DWORD PTR [rax+0x8]
   14003e72b:	mov    DWORD PTR [rip+0x38b5f],eax        # 0x140077290
   14003e731:	jmp    0x14003e752
   14003e733:	xor    eax,eax
   14003e735:	mov    QWORD PTR [rip+0x38b4c],rax        # 0x140077288
   14003e73c:	mov    DWORD PTR [rip+0x38b4e],eax        # 0x140077290
   14003e742:	call   0x140032c50
   14003e747:	mov    DWORD PTR [rax],0x16
   14003e74d:	call   0x1400307d0
   14003e752:	mov    rax,QWORD PTR [rbx]
   14003e755:	mov    edi,0x2
   14003e75a:	mov    rcx,QWORD PTR [rax]
   14003e75d:	lea    esi,[rdi+0x7e]
   14003e760:	mov    rax,QWORD PTR [rcx+0x88]
   14003e767:	lea    rcx,[rip+0x33182]        # 0x1400718f0
   14003e76e:	add    rax,0x18
   14003e772:	je     0x14003e7c6
   14003e774:	mov    edx,edi
   14003e776:	movups xmm0,XMMWORD PTR [rax]
   14003e779:	movups XMMWORD PTR [rcx],xmm0
   14003e77c:	movups xmm1,XMMWORD PTR [rax+0x10]
   14003e780:	movups XMMWORD PTR [rcx+0x10],xmm1
   14003e784:	movups xmm0,XMMWORD PTR [rax+0x20]
   14003e788:	movups XMMWORD PTR [rcx+0x20],xmm0
   14003e78c:	movups xmm1,XMMWORD PTR [rax+0x30]
   14003e790:	movups XMMWORD PTR [rcx+0x30],xmm1
   14003e794:	movups xmm0,XMMWORD PTR [rax+0x40]
   14003e798:	movups XMMWORD PTR [rcx+0x40],xmm0
   14003e79c:	movups xmm1,XMMWORD PTR [rax+0x50]
   14003e7a0:	movups XMMWORD PTR [rcx+0x50],xmm1
   14003e7a4:	movups xmm0,XMMWORD PTR [rax+0x60]
   14003e7a8:	movups XMMWORD PTR [rcx+0x60],xmm0
   14003e7ac:	add    rcx,rsi
   14003e7af:	movups xmm1,XMMWORD PTR [rax+0x70]
   14003e7b3:	add    rax,rsi
   14003e7b6:	movups XMMWORD PTR [rcx-0x10],xmm1
   14003e7ba:	sub    rdx,0x1
   14003e7be:	jne    0x14003e776
   14003e7c0:	mov    al,BYTE PTR [rax]
   14003e7c2:	mov    BYTE PTR [rcx],al
   14003e7c4:	jmp    0x14003e7e3
   14003e7c6:	xor    edx,edx
   14003e7c8:	mov    r8d,0x101
   14003e7ce:	call   0x14002a910
   14003e7d3:	call   0x140032c50
   14003e7d8:	mov    DWORD PTR [rax],0x16
   14003e7de:	call   0x1400307d0
   14003e7e3:	mov    rax,QWORD PTR [rbx]
   14003e7e6:	mov    rcx,QWORD PTR [rax]
   14003e7e9:	mov    rax,QWORD PTR [rcx+0x88]
   14003e7f0:	lea    rcx,[rip+0x33209]        # 0x140071a00
   14003e7f7:	add    rax,0x119
   14003e7fd:	je     0x14003e84b
   14003e7ff:	movups xmm0,XMMWORD PTR [rax]
   14003e802:	movups XMMWORD PTR [rcx],xmm0
   14003e805:	movups xmm1,XMMWORD PTR [rax+0x10]
   14003e809:	movups XMMWORD PTR [rcx+0x10],xmm1
   14003e80d:	movups xmm0,XMMWORD PTR [rax+0x20]
   14003e811:	movups XMMWORD PTR [rcx+0x20],xmm0
   14003e815:	movups xmm1,XMMWORD PTR [rax+0x30]
   14003e819:	movups XMMWORD PTR [rcx+0x30],xmm1
   14003e81d:	movups xmm0,XMMWORD PTR [rax+0x40]
   14003e821:	movups XMMWORD PTR [rcx+0x40],xmm0
   14003e825:	movups xmm1,XMMWORD PTR [rax+0x50]
   14003e829:	movups XMMWORD PTR [rcx+0x50],xmm1
   14003e82d:	movups xmm0,XMMWORD PTR [rax+0x60]
   14003e831:	movups XMMWORD PTR [rcx+0x60],xmm0
   14003e835:	add    rcx,rsi
   14003e838:	movups xmm1,XMMWORD PTR [rax+0x70]
   14003e83c:	add    rax,rsi
   14003e83f:	movups XMMWORD PTR [rcx-0x10],xmm1
   14003e843:	sub    rdi,0x1
   14003e847:	jne    0x14003e7ff
   14003e849:	jmp    0x14003e868
   14003e84b:	xor    edx,edx
   14003e84d:	mov    r8d,0x100
   14003e853:	call   0x14002a910
   14003e858:	call   0x140032c50
   14003e85d:	mov    DWORD PTR [rax],0x16
   14003e863:	call   0x1400307d0
   14003e868:	mov    rcx,QWORD PTR [rip+0x32f79]        # 0x1400717e8
   14003e86f:	or     eax,0xffffffff
   14003e872:	lock xadd DWORD PTR [rcx],eax
   14003e876:	cmp    eax,0x1
   14003e879:	jne    0x14003e893
   14003e87b:	mov    rcx,QWORD PTR [rip+0x32f66]        # 0x1400717e8
   14003e882:	lea    rax,[rip+0x32d37]        # 0x1400715c0
   14003e889:	cmp    rcx,rax
   14003e88c:	je     0x14003e893
   14003e88e:	call   0x140038c70
   14003e893:	mov    rax,QWORD PTR [rbx]
   14003e896:	mov    rcx,QWORD PTR [rax]
   14003e899:	mov    rax,QWORD PTR [rcx+0x88]
   14003e8a0:	mov    QWORD PTR [rip+0x32f41],rax        # 0x1400717e8
   14003e8a7:	mov    rax,QWORD PTR [rbx]
   14003e8aa:	mov    rcx,QWORD PTR [rax]
   14003e8ad:	mov    rax,QWORD PTR [rcx+0x88]
   14003e8b4:	lock inc DWORD PTR [rax]
   14003e8b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e8bc:	mov    rsi,QWORD PTR [rsp+0x38]
   14003e8c1:	add    rsp,0x20
   14003e8c5:	pop    rdi
   14003e8c6:	ret    
   14003e8c7:	int3   
   14003e8c8:	rex push rbx
   14003e8ca:	sub    rsp,0x40
   14003e8ce:	mov    ebx,ecx
   14003e8d0:	xor    edx,edx
   14003e8d2:	lea    rcx,[rsp+0x20]
   14003e8d7:	call   0x14002bd94
   14003e8dc:	and    DWORD PTR [rip+0x389b1],0x0        # 0x140077294
   14003e8e3:	cmp    ebx,0xfffffffe
   14003e8e6:	jne    0x14003e8fa
   14003e8e8:	mov    DWORD PTR [rip+0x389a2],0x1        # 0x140077294
   14003e8f2:	call   QWORD PTR [rip+0xca70]        # 0x14004b368
   14003e8f8:	jmp    0x14003e90f
   14003e8fa:	cmp    ebx,0xfffffffd
   14003e8fd:	jne    0x14003e913
   14003e8ff:	mov    DWORD PTR [rip+0x3898b],0x1        # 0x140077294
   14003e909:	call   QWORD PTR [rip+0xc9e1]        # 0x14004b2f0
   14003e90f:	mov    ebx,eax
   14003e911:	jmp    0x14003e92a
   14003e913:	cmp    ebx,0xfffffffc
   14003e916:	jne    0x14003e92a
   14003e918:	mov    rax,QWORD PTR [rsp+0x28]
   14003e91d:	mov    DWORD PTR [rip+0x3896d],0x1        # 0x140077294
   14003e927:	mov    ebx,DWORD PTR [rax+0xc]
   14003e92a:	cmp    BYTE PTR [rsp+0x38],0x0
   14003e92f:	je     0x14003e93d
   14003e931:	mov    rcx,QWORD PTR [rsp+0x20]
   14003e936:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14003e93d:	mov    eax,ebx
   14003e93f:	add    rsp,0x40
   14003e943:	pop    rbx
   14003e944:	ret    
   14003e945:	int3   
   14003e946:	int3   
   14003e947:	int3   
   14003e948:	mov    QWORD PTR [rsp+0x8],rbx
   14003e94d:	mov    QWORD PTR [rsp+0x10],rbp
   14003e952:	mov    QWORD PTR [rsp+0x18],rsi
   14003e957:	push   rdi
   14003e958:	sub    rsp,0x20
   14003e95c:	lea    rbx,[rcx+0x18]
   14003e960:	mov    rsi,rcx
   14003e963:	mov    ebp,0x101
   14003e968:	mov    rcx,rbx
   14003e96b:	mov    r8d,ebp
   14003e96e:	xor    edx,edx
   14003e970:	call   0x14002a910
   14003e975:	xor    eax,eax
   14003e977:	lea    rdi,[rsi+0xc]
   14003e97b:	mov    QWORD PTR [rsi+0x4],rax
   14003e97f:	mov    ecx,0x6
   14003e984:	mov    QWORD PTR [rsi+0x220],rax
   14003e98b:	movzx  eax,ax
   14003e98e:	rep stos WORD PTR es:[rdi],ax
   14003e991:	lea    rdi,[rip+0x32c28]        # 0x1400715c0
   14003e998:	sub    rdi,rsi
   14003e99b:	mov    al,BYTE PTR [rdi+rbx*1]
   14003e99e:	mov    BYTE PTR [rbx],al
   14003e9a0:	inc    rbx
   14003e9a3:	sub    rbp,0x1
   14003e9a7:	jne    0x14003e99b
   14003e9a9:	lea    rcx,[rsi+0x119]
   14003e9b0:	mov    edx,0x100
   14003e9b5:	mov    al,BYTE PTR [rcx+rdi*1]
   14003e9b8:	mov    BYTE PTR [rcx],al
   14003e9ba:	inc    rcx
   14003e9bd:	sub    rdx,0x1
   14003e9c1:	jne    0x14003e9b5
   14003e9c3:	mov    rbx,QWORD PTR [rsp+0x30]
   14003e9c8:	mov    rbp,QWORD PTR [rsp+0x38]
   14003e9cd:	mov    rsi,QWORD PTR [rsp+0x40]
   14003e9d2:	add    rsp,0x20
   14003e9d6:	pop    rdi
   14003e9d7:	ret    
   14003e9d8:	mov    QWORD PTR [rsp+0x10],rbx
   14003e9dd:	mov    QWORD PTR [rsp+0x18],rdi
   14003e9e2:	push   rbp
   14003e9e3:	lea    rbp,[rsp-0x680]
   14003e9eb:	sub    rsp,0x780
   14003e9f2:	mov    rax,QWORD PTR [rip+0x32657]        # 0x140071050
   14003e9f9:	xor    rax,rsp
   14003e9fc:	mov    QWORD PTR [rbp+0x670],rax
   14003ea03:	mov    rdi,rcx
   14003ea06:	lea    rdx,[rsp+0x50]
   14003ea0b:	mov    ecx,DWORD PTR [rcx+0x4]
   14003ea0e:	call   QWORD PTR [rip+0xc89c]        # 0x14004b2b0
   14003ea14:	mov    ebx,0x100
   14003ea19:	test   eax,eax
   14003ea1b:	je     0x14003eb57
   14003ea21:	xor    eax,eax
   14003ea23:	lea    rcx,[rsp+0x70]
   14003ea28:	mov    BYTE PTR [rcx],al
   14003ea2a:	inc    eax
   14003ea2c:	inc    rcx
   14003ea2f:	cmp    eax,ebx
   14003ea31:	jb     0x14003ea28
   14003ea33:	mov    al,BYTE PTR [rsp+0x56]
   14003ea37:	lea    rdx,[rsp+0x56]
   14003ea3c:	mov    BYTE PTR [rsp+0x70],0x20
   14003ea41:	jmp    0x14003ea65
   14003ea43:	movzx  r8d,BYTE PTR [rdx+0x1]
   14003ea48:	movzx  ecx,al
   14003ea4b:	jmp    0x14003ea5a
   14003ea4d:	cmp    ecx,ebx
   14003ea4f:	jae    0x14003ea5f
   14003ea51:	mov    eax,ecx
   14003ea53:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14003ea58:	inc    ecx
   14003ea5a:	cmp    ecx,r8d
   14003ea5d:	jbe    0x14003ea4d
   14003ea5f:	add    rdx,0x2
   14003ea63:	mov    al,BYTE PTR [rdx]
   14003ea65:	test   al,al
   14003ea67:	jne    0x14003ea43
   14003ea69:	mov    eax,DWORD PTR [rdi+0x4]
   14003ea6c:	lea    r8,[rsp+0x70]
   14003ea71:	and    DWORD PTR [rsp+0x30],0x0
   14003ea76:	mov    r9d,ebx
   14003ea79:	mov    DWORD PTR [rsp+0x28],eax
   14003ea7d:	mov    edx,0x1
   14003ea82:	lea    rax,[rbp+0x270]
   14003ea89:	xor    ecx,ecx
   14003ea8b:	mov    QWORD PTR [rsp+0x20],rax
   14003ea90:	call   0x140041178
   14003ea95:	and    DWORD PTR [rsp+0x40],0x0
   14003ea9a:	lea    r9,[rsp+0x70]
   14003ea9f:	mov    eax,DWORD PTR [rdi+0x4]
   14003eaa2:	mov    r8d,ebx
   14003eaa5:	mov    rdx,QWORD PTR [rdi+0x220]
   14003eaac:	xor    ecx,ecx
   14003eaae:	mov    DWORD PTR [rsp+0x38],eax
   14003eab2:	lea    rax,[rbp+0x70]
   14003eab6:	mov    DWORD PTR [rsp+0x30],ebx
   14003eaba:	mov    QWORD PTR [rsp+0x28],rax
   14003eabf:	mov    DWORD PTR [rsp+0x20],ebx
   14003eac3:	call   0x14003b9d0
   14003eac8:	and    DWORD PTR [rsp+0x40],0x0
   14003eacd:	lea    r9,[rsp+0x70]
   14003ead2:	mov    eax,DWORD PTR [rdi+0x4]
   14003ead5:	mov    r8d,0x200
   14003eadb:	mov    rdx,QWORD PTR [rdi+0x220]
   14003eae2:	xor    ecx,ecx
   14003eae4:	mov    DWORD PTR [rsp+0x38],eax
   14003eae8:	lea    rax,[rbp+0x170]
   14003eaef:	mov    DWORD PTR [rsp+0x30],ebx
   14003eaf3:	mov    QWORD PTR [rsp+0x28],rax
   14003eaf8:	mov    DWORD PTR [rsp+0x20],ebx
   14003eafc:	call   0x14003b9d0
   14003eb01:	lea    r8,[rbp+0x70]
   14003eb05:	sub    r8,rdi
   14003eb08:	lea    r9,[rbp+0x170]
   14003eb0f:	sub    r9,rdi
   14003eb12:	lea    rdx,[rbp+0x270]
   14003eb19:	lea    rcx,[rdi+0x19]
   14003eb1d:	test   BYTE PTR [rdx],0x1
   14003eb20:	je     0x14003eb2c
   14003eb22:	or     BYTE PTR [rcx],0x10
   14003eb25:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14003eb2a:	jmp    0x14003eb39
   14003eb2c:	test   BYTE PTR [rdx],0x2
   14003eb2f:	je     0x14003eb41
   14003eb31:	or     BYTE PTR [rcx],0x20
   14003eb34:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14003eb39:	mov    BYTE PTR [rcx+0x100],al
   14003eb3f:	jmp    0x14003eb48
   14003eb41:	mov    BYTE PTR [rcx+0x100],0x0
   14003eb48:	inc    rcx
   14003eb4b:	add    rdx,0x2
   14003eb4f:	sub    rbx,0x1
   14003eb53:	jne    0x14003eb1d
   14003eb55:	jmp    0x14003eb96
   14003eb57:	xor    edx,edx
   14003eb59:	lea    rcx,[rdi+0x19]
   14003eb5d:	lea    r8d,[rdx-0x61]
   14003eb61:	lea    eax,[r8+0x20]
   14003eb65:	cmp    eax,0x19
   14003eb68:	ja     0x14003eb72
   14003eb6a:	or     BYTE PTR [rcx],0x10
   14003eb6d:	lea    eax,[rdx+0x20]
   14003eb70:	jmp    0x14003eb7e
   14003eb72:	cmp    r8d,0x19
   14003eb76:	ja     0x14003eb86
   14003eb78:	or     BYTE PTR [rcx],0x20
   14003eb7b:	lea    eax,[rdx-0x20]
   14003eb7e:	mov    BYTE PTR [rcx+0x100],al
   14003eb84:	jmp    0x14003eb8d
   14003eb86:	mov    BYTE PTR [rcx+0x100],0x0
   14003eb8d:	inc    edx
   14003eb8f:	inc    rcx
   14003eb92:	cmp    edx,ebx
   14003eb94:	jb     0x14003eb5d
   14003eb96:	mov    rcx,QWORD PTR [rbp+0x670]
   14003eb9d:	xor    rcx,rsp
   14003eba0:	call   0x140025df0
   14003eba5:	lea    r11,[rsp+0x780]
   14003ebad:	mov    rbx,QWORD PTR [r11+0x18]
   14003ebb1:	mov    rdi,QWORD PTR [r11+0x20]
   14003ebb5:	mov    rsp,r11
   14003ebb8:	pop    rbp
   14003ebb9:	ret    
   14003ebba:	int3   
   14003ebbb:	int3   
   14003ebbc:	mov    QWORD PTR [rsp+0x8],rbx
   14003ebc1:	push   rbp
   14003ebc2:	push   rsi
   14003ebc3:	push   rdi
   14003ebc4:	mov    rbp,rsp
   14003ebc7:	sub    rsp,0x40
   14003ebcb:	mov    sil,dl
   14003ebce:	mov    ebx,ecx
   14003ebd0:	call   0x140039130
   14003ebd5:	mov    QWORD PTR [rbp-0x18],rax
   14003ebd9:	call   0x14003ed9c
   14003ebde:	mov    ecx,ebx
   14003ebe0:	call   0x14003e8c8
   14003ebe5:	mov    rcx,QWORD PTR [rbp-0x18]
   14003ebe9:	mov    edi,eax
   14003ebeb:	mov    r8,QWORD PTR [rcx+0x88]
   14003ebf2:	cmp    eax,DWORD PTR [r8+0x4]
   14003ebf6:	jne    0x14003ebff
   14003ebf8:	xor    eax,eax
   14003ebfa:	jmp    0x14003ecb7
   14003ebff:	mov    ecx,0x228
   14003ec04:	call   0x140036600
   14003ec09:	mov    rbx,rax
   14003ec0c:	test   rax,rax
   14003ec0f:	je     0x14003ecaa
   14003ec15:	mov    rax,QWORD PTR [rbp-0x18]
   14003ec19:	mov    edx,0x4
   14003ec1e:	mov    rcx,rbx
   14003ec21:	mov    rax,QWORD PTR [rax+0x88]
   14003ec28:	lea    r8d,[rdx+0x7c]
   14003ec2c:	movups xmm0,XMMWORD PTR [rax]
   14003ec2f:	movups XMMWORD PTR [rcx],xmm0
   14003ec32:	movups xmm1,XMMWORD PTR [rax+0x10]
   14003ec36:	movups XMMWORD PTR [rcx+0x10],xmm1
   14003ec3a:	movups xmm0,XMMWORD PTR [rax+0x20]
   14003ec3e:	movups XMMWORD PTR [rcx+0x20],xmm0
   14003ec42:	movups xmm1,XMMWORD PTR [rax+0x30]
   14003ec46:	movups XMMWORD PTR [rcx+0x30],xmm1
   14003ec4a:	movups xmm0,XMMWORD PTR [rax+0x40]
   14003ec4e:	movups XMMWORD PTR [rcx+0x40],xmm0
   14003ec52:	movups xmm1,XMMWORD PTR [rax+0x50]
   14003ec56:	movups XMMWORD PTR [rcx+0x50],xmm1
   14003ec5a:	movups xmm0,XMMWORD PTR [rax+0x60]
   14003ec5e:	movups XMMWORD PTR [rcx+0x60],xmm0
   14003ec62:	add    rcx,r8
   14003ec65:	movups xmm1,XMMWORD PTR [rax+0x70]
   14003ec69:	add    rax,r8
   14003ec6c:	movups XMMWORD PTR [rcx-0x10],xmm1
   14003ec70:	sub    rdx,0x1
   14003ec74:	jne    0x14003ec2c
   14003ec76:	movups xmm0,XMMWORD PTR [rax]
   14003ec79:	movups XMMWORD PTR [rcx],xmm0
   14003ec7c:	movups xmm1,XMMWORD PTR [rax+0x10]
   14003ec80:	movups XMMWORD PTR [rcx+0x10],xmm1
   14003ec84:	mov    rax,QWORD PTR [rax+0x20]
   14003ec88:	mov    QWORD PTR [rcx+0x20],rax
   14003ec8c:	mov    ecx,edi
   14003ec8e:	and    DWORD PTR [rbx],edx
   14003ec90:	mov    rdx,rbx
   14003ec93:	call   0x14003ee5c
   14003ec98:	mov    edi,eax
   14003ec9a:	cmp    eax,0xffffffff
   14003ec9d:	jne    0x14003ecc4
   14003ec9f:	call   0x140032c50
   14003eca4:	mov    DWORD PTR [rax],0x16
   14003ecaa:	or     edi,0xffffffff
   14003ecad:	mov    rcx,rbx
   14003ecb0:	call   0x140038c70
   14003ecb5:	mov    eax,edi
   14003ecb7:	mov    rbx,QWORD PTR [rsp+0x60]
   14003ecbc:	add    rsp,0x40
   14003ecc0:	pop    rdi
   14003ecc1:	pop    rsi
   14003ecc2:	pop    rbp
   14003ecc3:	ret    
   14003ecc4:	test   sil,sil
   14003ecc7:	jne    0x14003ecce
   14003ecc9:	call   0x14003490c
   14003ecce:	mov    rax,QWORD PTR [rbp-0x18]
   14003ecd2:	mov    rcx,QWORD PTR [rax+0x88]
   14003ecd9:	or     eax,0xffffffff
   14003ecdc:	lock xadd DWORD PTR [rcx],eax
   14003ece0:	cmp    eax,0x1
   14003ece3:	jne    0x14003ed01
   14003ece5:	mov    rax,QWORD PTR [rbp-0x18]
   14003ece9:	mov    rcx,QWORD PTR [rax+0x88]
   14003ecf0:	lea    rax,[rip+0x328c9]        # 0x1400715c0
   14003ecf7:	cmp    rcx,rax
   14003ecfa:	je     0x14003ed01
   14003ecfc:	call   0x140038c70
   14003ed01:	mov    DWORD PTR [rbx],0x1
   14003ed07:	mov    rcx,rbx
   14003ed0a:	mov    rax,QWORD PTR [rbp-0x18]
   14003ed0e:	xor    ebx,ebx
   14003ed10:	mov    QWORD PTR [rax+0x88],rcx
   14003ed17:	mov    rax,QWORD PTR [rbp-0x18]
   14003ed1b:	test   BYTE PTR [rax+0x3a8],0x2
   14003ed22:	jne    0x14003ecad
   14003ed24:	test   BYTE PTR [rip+0x32dd5],0x1        # 0x140071b00
   14003ed2b:	jne    0x14003ecad
   14003ed2d:	lea    rax,[rbp-0x18]
   14003ed31:	mov    QWORD PTR [rbp-0x10],rax
   14003ed35:	lea    r9,[rbp+0x38]
   14003ed39:	lea    eax,[rbx+0x5]
   14003ed3c:	lea    r8,[rbp-0x10]
   14003ed40:	mov    DWORD PTR [rbp+0x38],eax
   14003ed43:	lea    rdx,[rbp-0x20]
   14003ed47:	mov    DWORD PTR [rbp-0x20],eax
   14003ed4a:	lea    rcx,[rbp+0x30]
   14003ed4e:	call   0x14003e678
   14003ed53:	mov    rax,QWORD PTR [rip+0x32706]        # 0x140071460
   14003ed5a:	test   sil,sil
   14003ed5d:	cmovne rax,QWORD PTR [rip+0x32a83]        # 0x1400717e8
   14003ed65:	mov    QWORD PTR [rip+0x326f4],rax        # 0x140071460
   14003ed6c:	jmp    0x14003ecad
   14003ed71:	int3   
   14003ed72:	int3   
   14003ed73:	int3   
   14003ed74:	sub    rsp,0x28
   14003ed78:	cmp    BYTE PTR [rip+0x38521],0x0        # 0x1400772a0
   14003ed7f:	jne    0x14003ed94
   14003ed81:	mov    dl,0x1
   14003ed83:	mov    ecx,0xfffffffd
   14003ed88:	call   0x14003ebbc
   14003ed8d:	mov    BYTE PTR [rip+0x3850c],0x1        # 0x1400772a0
   14003ed94:	mov    al,0x1
   14003ed96:	add    rsp,0x28
   14003ed9a:	ret    
   14003ed9b:	int3   
   14003ed9c:	mov    QWORD PTR [rsp+0x10],rbx
   14003eda1:	push   rdi
   14003eda2:	sub    rsp,0x20
   14003eda6:	call   0x140039130
   14003edab:	mov    rdi,rax
   14003edae:	mov    ecx,DWORD PTR [rip+0x32d4c]        # 0x140071b00
   14003edb4:	test   DWORD PTR [rax+0x3a8],ecx
   14003edba:	je     0x14003edcf
   14003edbc:	cmp    QWORD PTR [rax+0x90],0x0
   14003edc4:	je     0x14003edcf
   14003edc6:	mov    rbx,QWORD PTR [rax+0x88]
   14003edcd:	jmp    0x14003ee42
   14003edcf:	mov    ecx,0x5
   14003edd4:	call   0x140035a44
   14003edd9:	nop
   14003edda:	mov    rbx,QWORD PTR [rdi+0x88]
   14003ede1:	mov    QWORD PTR [rsp+0x30],rbx
   14003ede6:	cmp    rbx,QWORD PTR [rip+0x329fb]        # 0x1400717e8
   14003eded:	je     0x14003ee38
   14003edef:	test   rbx,rbx
   14003edf2:	je     0x14003ee16
   14003edf4:	or     eax,0xffffffff
   14003edf7:	lock xadd DWORD PTR [rbx],eax
   14003edfb:	cmp    eax,0x1
   14003edfe:	jne    0x14003ee16
   14003ee00:	lea    rax,[rip+0x327b9]        # 0x1400715c0
   14003ee07:	mov    rcx,QWORD PTR [rsp+0x30]
   14003ee0c:	cmp    rcx,rax
   14003ee0f:	je     0x14003ee16
   14003ee11:	call   0x140038c70
   14003ee16:	mov    rax,QWORD PTR [rip+0x329cb]        # 0x1400717e8
   14003ee1d:	mov    QWORD PTR [rdi+0x88],rax
   14003ee24:	mov    rax,QWORD PTR [rip+0x329bd]        # 0x1400717e8
   14003ee2b:	mov    QWORD PTR [rsp+0x30],rax
   14003ee30:	lock inc DWORD PTR [rax]
   14003ee33:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ee38:	mov    ecx,0x5
   14003ee3d:	call   0x140035a98
   14003ee42:	test   rbx,rbx
   14003ee45:	jne    0x14003ee4d
   14003ee47:	call   0x1400365a8
   14003ee4c:	int3   
   14003ee4d:	mov    rax,rbx
   14003ee50:	mov    rbx,QWORD PTR [rsp+0x38]
   14003ee55:	add    rsp,0x20
   14003ee59:	pop    rdi
   14003ee5a:	ret    
   14003ee5b:	int3   
   14003ee5c:	mov    QWORD PTR [rsp+0x18],rbx
   14003ee61:	mov    QWORD PTR [rsp+0x20],rbp
   14003ee66:	push   rsi
   14003ee67:	push   rdi
   14003ee68:	push   r12
   14003ee6a:	push   r14
   14003ee6c:	push   r15
   14003ee6e:	sub    rsp,0x40
   14003ee72:	mov    rax,QWORD PTR [rip+0x321d7]        # 0x140071050
   14003ee79:	xor    rax,rsp
   14003ee7c:	mov    QWORD PTR [rsp+0x38],rax
   14003ee81:	mov    rbx,rdx
   14003ee84:	call   0x14003e8c8
   14003ee89:	xor    esi,esi
   14003ee8b:	mov    edi,eax
   14003ee8d:	test   eax,eax
   14003ee8f:	jne    0x14003ee9e
   14003ee91:	mov    rcx,rbx
   14003ee94:	call   0x14003e948
   14003ee99:	jmp    0x14003f0db
   14003ee9e:	lea    r12,[rip+0x3295b]        # 0x140071800
   14003eea5:	mov    ebp,esi
   14003eea7:	mov    rax,r12
   14003eeaa:	mov    r15d,0x1
   14003eeb0:	cmp    DWORD PTR [rax],edi
   14003eeb2:	je     0x14003efe8
   14003eeb8:	add    ebp,r15d
   14003eebb:	add    rax,0x30
   14003eebf:	cmp    ebp,0x5
   14003eec2:	jb     0x14003eeb0
   14003eec4:	lea    eax,[rdi-0xfde8]
   14003eeca:	cmp    eax,r15d
   14003eecd:	jbe    0x14003efe0
   14003eed3:	movzx  ecx,di
   14003eed6:	call   QWORD PTR [rip+0xc484]        # 0x14004b360
   14003eedc:	test   eax,eax
   14003eede:	je     0x14003efe0
   14003eee4:	lea    rdx,[rsp+0x20]
   14003eee9:	mov    ecx,edi
   14003eeeb:	call   QWORD PTR [rip+0xc3bf]        # 0x14004b2b0
   14003eef1:	test   eax,eax
   14003eef3:	je     0x14003efd4
   14003eef9:	lea    rcx,[rbx+0x18]
   14003eefd:	xor    edx,edx
   14003eeff:	mov    r8d,0x101
   14003ef05:	call   0x14002a910
   14003ef0a:	mov    DWORD PTR [rbx+0x4],edi
   14003ef0d:	mov    QWORD PTR [rbx+0x220],rsi
   14003ef14:	cmp    DWORD PTR [rsp+0x20],r15d
   14003ef19:	jbe    0x14003efbd
   14003ef1f:	lea    rcx,[rsp+0x26]
   14003ef24:	cmp    BYTE PTR [rsp+0x26],sil
   14003ef29:	je     0x14003ef5b
   14003ef2b:	cmp    BYTE PTR [rcx+0x1],sil
   14003ef2f:	je     0x14003ef5b
   14003ef31:	movzx  eax,BYTE PTR [rcx+0x1]
   14003ef35:	movzx  edx,BYTE PTR [rcx]
   14003ef38:	cmp    edx,eax
   14003ef3a:	ja     0x14003ef52
   14003ef3c:	sub    eax,edx
   14003ef3e:	lea    edi,[rdx+0x1]
   14003ef41:	lea    edx,[r15+rax*1]
   14003ef45:	or     BYTE PTR [rdi+rbx*1+0x18],0x4
   14003ef4a:	add    edi,r15d
   14003ef4d:	sub    rdx,r15
   14003ef50:	jne    0x14003ef45
   14003ef52:	add    rcx,0x2
   14003ef56:	cmp    BYTE PTR [rcx],sil
   14003ef59:	jne    0x14003ef2b
   14003ef5b:	lea    rax,[rbx+0x1a]
   14003ef5f:	mov    ecx,0xfe
   14003ef64:	or     BYTE PTR [rax],0x8
   14003ef67:	add    rax,r15
   14003ef6a:	sub    rcx,r15
   14003ef6d:	jne    0x14003ef64
   14003ef6f:	mov    ecx,DWORD PTR [rbx+0x4]
   14003ef72:	sub    ecx,0x3a4
   14003ef78:	je     0x14003efa9
   14003ef7a:	sub    ecx,0x4
   14003ef7d:	je     0x14003efa0
   14003ef7f:	sub    ecx,0xd
   14003ef82:	je     0x14003ef97
   14003ef84:	cmp    ecx,r15d
   14003ef87:	je     0x14003ef8e
   14003ef89:	mov    rax,rsi
   14003ef8c:	jmp    0x14003efb0
   14003ef8e:	mov    rax,QWORD PTR [rip+0x191b3]        # 0x140058148
   14003ef95:	jmp    0x14003efb0
   14003ef97:	mov    rax,QWORD PTR [rip+0x191a2]        # 0x140058140
   14003ef9e:	jmp    0x14003efb0
   14003efa0:	mov    rax,QWORD PTR [rip+0x19191]        # 0x140058138
   14003efa7:	jmp    0x14003efb0
   14003efa9:	mov    rax,QWORD PTR [rip+0x19180]        # 0x140058130
   14003efb0:	mov    QWORD PTR [rbx+0x220],rax
   14003efb7:	mov    DWORD PTR [rbx+0x8],r15d
   14003efbb:	jmp    0x14003efc0
   14003efbd:	mov    DWORD PTR [rbx+0x8],esi
   14003efc0:	lea    rdi,[rbx+0xc]
   14003efc4:	movzx  eax,si
   14003efc7:	mov    ecx,0x6
   14003efcc:	rep stos WORD PTR es:[rdi],ax
   14003efcf:	jmp    0x14003f0d3
   14003efd4:	cmp    DWORD PTR [rip+0x382ba],esi        # 0x140077294
   14003efda:	jne    0x14003ee91
   14003efe0:	or     eax,0xffffffff
   14003efe3:	jmp    0x14003f0dd
   14003efe8:	lea    rcx,[rbx+0x18]
   14003efec:	xor    edx,edx
   14003efee:	mov    r8d,0x101
   14003eff4:	call   0x14002a910
   14003eff9:	mov    eax,ebp
   14003effb:	lea    r9,[r12+0x10]
   14003f000:	lea    r14,[rip+0x327e9]        # 0x1400717f0
   14003f007:	mov    ebp,0x4
   14003f00c:	lea    r11,[rax+rax*2]
   14003f010:	shl    r11,0x4
   14003f014:	add    r9,r11
   14003f017:	mov    rdx,r9
   14003f01a:	cmp    BYTE PTR [r9],sil
   14003f01d:	je     0x14003f05f
   14003f01f:	cmp    BYTE PTR [rdx+0x1],sil
   14003f023:	je     0x14003f05f
   14003f025:	movzx  r8d,BYTE PTR [rdx]
   14003f029:	movzx  eax,BYTE PTR [rdx+0x1]
   14003f02d:	cmp    r8d,eax
   14003f030:	ja     0x14003f056
   14003f032:	lea    r10d,[r8+0x1]
   14003f036:	cmp    r10d,0x101
   14003f03d:	jae    0x14003f056
   14003f03f:	mov    al,BYTE PTR [r14]
   14003f042:	add    r8d,r15d
   14003f045:	or     BYTE PTR [r10+rbx*1+0x18],al
   14003f04a:	add    r10d,r15d
   14003f04d:	movzx  eax,BYTE PTR [rdx+0x1]
   14003f051:	cmp    r8d,eax
   14003f054:	jbe    0x14003f036
   14003f056:	add    rdx,0x2
   14003f05a:	cmp    BYTE PTR [rdx],sil
   14003f05d:	jne    0x14003f01f
   14003f05f:	add    r9,0x8
   14003f063:	add    r14,r15
   14003f066:	sub    rbp,r15
   14003f069:	jne    0x14003f017
   14003f06b:	mov    DWORD PTR [rbx+0x4],edi
   14003f06e:	mov    DWORD PTR [rbx+0x8],r15d
   14003f072:	sub    edi,0x3a4
   14003f078:	je     0x14003f0a4
   14003f07a:	sub    edi,0x4
   14003f07d:	je     0x14003f09b
   14003f07f:	sub    edi,0xd
   14003f082:	je     0x14003f092
   14003f084:	cmp    edi,r15d
   14003f087:	jne    0x14003f0ab
   14003f089:	mov    rsi,QWORD PTR [rip+0x190b8]        # 0x140058148
   14003f090:	jmp    0x14003f0ab
   14003f092:	mov    rsi,QWORD PTR [rip+0x190a7]        # 0x140058140
   14003f099:	jmp    0x14003f0ab
   14003f09b:	mov    rsi,QWORD PTR [rip+0x19096]        # 0x140058138
   14003f0a2:	jmp    0x14003f0ab
   14003f0a4:	mov    rsi,QWORD PTR [rip+0x19085]        # 0x140058130
   14003f0ab:	sub    r11,rbx
   14003f0ae:	mov    QWORD PTR [rbx+0x220],rsi
   14003f0b5:	lea    rcx,[rbx+0xc]
   14003f0b9:	mov    edx,0x6
   14003f0be:	lea    rdi,[r11+r12*1]
   14003f0c2:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14003f0c7:	mov    WORD PTR [rcx],ax
   14003f0ca:	lea    rcx,[rcx+0x2]
   14003f0ce:	sub    rdx,r15
   14003f0d1:	jne    0x14003f0c2
   14003f0d3:	mov    rcx,rbx
   14003f0d6:	call   0x14003e9d8
   14003f0db:	xor    eax,eax
   14003f0dd:	mov    rcx,QWORD PTR [rsp+0x38]
   14003f0e2:	xor    rcx,rsp
   14003f0e5:	call   0x140025df0
   14003f0ea:	lea    r11,[rsp+0x40]
   14003f0ef:	mov    rbx,QWORD PTR [r11+0x40]
   14003f0f3:	mov    rbp,QWORD PTR [r11+0x48]
   14003f0f7:	mov    rsp,r11
   14003f0fa:	pop    r15
   14003f0fc:	pop    r14
   14003f0fe:	pop    r12
   14003f100:	pop    rdi
   14003f101:	pop    rsi
   14003f102:	ret    
   14003f103:	int3   
   14003f104:	sub    rsp,0x28
   14003f108:	call   QWORD PTR [rip+0xc262]        # 0x14004b370
   14003f10e:	mov    QWORD PTR [rip+0x381a3],rax        # 0x1400772b8
   14003f115:	call   QWORD PTR [rip+0xc25d]        # 0x14004b378
   14003f11b:	mov    QWORD PTR [rip+0x3819e],rax        # 0x1400772c0
   14003f122:	mov    al,0x1
   14003f124:	add    rsp,0x28
   14003f128:	ret    
   14003f129:	int3   
   14003f12a:	int3   
   14003f12b:	int3   
   14003f12c:	mov    rax,rsp
   14003f12f:	mov    QWORD PTR [rax+0x8],rbx
   14003f133:	mov    QWORD PTR [rax+0x10],rbp
   14003f137:	mov    QWORD PTR [rax+0x18],rsi
   14003f13b:	mov    QWORD PTR [rax+0x20],rdi
   14003f13f:	push   r14
   14003f141:	sub    rsp,0x40
   14003f145:	call   QWORD PTR [rip+0xc235]        # 0x14004b380
   14003f14b:	xor    r14d,r14d
   14003f14e:	mov    rbx,rax
   14003f151:	test   rax,rax
   14003f154:	je     0x14003f200
   14003f15a:	mov    rsi,rax
   14003f15d:	cmp    WORD PTR [rax],r14w
   14003f161:	je     0x14003f17f
   14003f163:	or     rax,0xffffffffffffffff
   14003f167:	inc    rax
   14003f16a:	cmp    WORD PTR [rsi+rax*2],r14w
   14003f16f:	jne    0x14003f167
   14003f171:	lea    rsi,[rsi+rax*2]
   14003f175:	add    rsi,0x2
   14003f179:	cmp    WORD PTR [rsi],r14w
   14003f17d:	jne    0x14003f163
   14003f17f:	mov    QWORD PTR [rsp+0x38],r14
   14003f184:	sub    rsi,rbx
   14003f187:	mov    QWORD PTR [rsp+0x30],r14
   14003f18c:	add    rsi,0x2
   14003f190:	sar    rsi,1
   14003f193:	mov    r8,rbx
   14003f196:	mov    r9d,esi
   14003f199:	mov    DWORD PTR [rsp+0x28],r14d
   14003f19e:	xor    edx,edx
   14003f1a0:	mov    QWORD PTR [rsp+0x20],r14
   14003f1a5:	xor    ecx,ecx
   14003f1a7:	call   QWORD PTR [rip+0xbf83]        # 0x14004b130
   14003f1ad:	movsxd rbp,eax
   14003f1b0:	test   eax,eax
   14003f1b2:	je     0x14003f200
   14003f1b4:	mov    rcx,rbp
   14003f1b7:	call   0x140036600
   14003f1bc:	mov    rdi,rax
   14003f1bf:	test   rax,rax
   14003f1c2:	je     0x14003f1f3
   14003f1c4:	mov    QWORD PTR [rsp+0x38],r14
   14003f1c9:	mov    r9d,esi
   14003f1cc:	mov    QWORD PTR [rsp+0x30],r14
   14003f1d1:	mov    r8,rbx
   14003f1d4:	mov    DWORD PTR [rsp+0x28],ebp
   14003f1d8:	xor    edx,edx
   14003f1da:	xor    ecx,ecx
   14003f1dc:	mov    QWORD PTR [rsp+0x20],rax
   14003f1e1:	call   QWORD PTR [rip+0xbf49]        # 0x14004b130
   14003f1e7:	test   eax,eax
   14003f1e9:	je     0x14003f1f3
   14003f1eb:	mov    rsi,rdi
   14003f1ee:	mov    rdi,r14
   14003f1f1:	jmp    0x14003f1f6
   14003f1f3:	mov    rsi,r14
   14003f1f6:	mov    rcx,rdi
   14003f1f9:	call   0x140038c70
   14003f1fe:	jmp    0x14003f203
   14003f200:	mov    rsi,r14
   14003f203:	test   rbx,rbx
   14003f206:	je     0x14003f211
   14003f208:	mov    rcx,rbx
   14003f20b:	call   QWORD PTR [rip+0xc177]        # 0x14004b388
   14003f211:	mov    rbx,QWORD PTR [rsp+0x50]
   14003f216:	mov    rax,rsi
   14003f219:	mov    rsi,QWORD PTR [rsp+0x60]
   14003f21e:	mov    rbp,QWORD PTR [rsp+0x58]
   14003f223:	mov    rdi,QWORD PTR [rsp+0x68]
   14003f228:	add    rsp,0x40
   14003f22c:	pop    r14
   14003f22e:	ret    
   14003f22f:	int3   
   14003f230:	mov    QWORD PTR [rsp+0x8],rbx
   14003f235:	mov    QWORD PTR [rsp+0x10],rbp
   14003f23a:	mov    QWORD PTR [rsp+0x18],rsi
   14003f23f:	push   rdi
   14003f240:	sub    rsp,0x20
   14003f244:	call   QWORD PTR [rip+0xc136]        # 0x14004b380
   14003f24a:	xor    esi,esi
   14003f24c:	mov    rbx,rax
   14003f24f:	test   rax,rax
   14003f252:	je     0x14003f2af
   14003f254:	jmp    0x14003f26b
   14003f256:	or     rcx,0xffffffffffffffff
   14003f25a:	inc    rcx
   14003f25d:	cmp    WORD PTR [rax+rcx*2],si
   14003f261:	jne    0x14003f25a
   14003f263:	lea    rax,[rax+rcx*2]
   14003f267:	add    rax,0x2
   14003f26b:	cmp    WORD PTR [rax],si
   14003f26e:	jne    0x14003f256
   14003f270:	sub    rax,rbx
   14003f273:	add    rax,0x2
   14003f277:	sar    rax,1
   14003f27a:	lea    rbp,[rax+rax*1]
   14003f27e:	mov    rcx,rbp
   14003f281:	call   0x140036600
   14003f286:	mov    rdi,rax
   14003f289:	test   rax,rax
   14003f28c:	je     0x14003f29f
   14003f28e:	mov    r8,rbp
   14003f291:	mov    rdx,rbx
   14003f294:	mov    rcx,rax
   14003f297:	call   0x140028fd0
   14003f29c:	mov    rsi,rdi
   14003f29f:	xor    ecx,ecx
   14003f2a1:	call   0x140038c70
   14003f2a6:	mov    rcx,rbx
   14003f2a9:	call   QWORD PTR [rip+0xc0d9]        # 0x14004b388
   14003f2af:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f2b4:	mov    rax,rsi
   14003f2b7:	mov    rsi,QWORD PTR [rsp+0x40]
   14003f2bc:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f2c1:	add    rsp,0x20
   14003f2c5:	pop    rdi
   14003f2c6:	ret    
   14003f2c7:	int3   
   14003f2c8:	mov    QWORD PTR [rsp+0x8],rbx
   14003f2cd:	mov    QWORD PTR [rsp+0x10],rbp
   14003f2d2:	mov    QWORD PTR [rsp+0x18],rsi
   14003f2d7:	push   rdi
   14003f2d8:	push   r12
   14003f2da:	push   r13
   14003f2dc:	push   r14
   14003f2de:	push   r15
   14003f2e0:	sub    rsp,0x30
   14003f2e4:	xor    esi,esi
   14003f2e6:	mov    ebp,edx
   14003f2e8:	mov    r15,rcx
   14003f2eb:	test   rcx,rcx
   14003f2ee:	jne    0x14003f304
   14003f2f0:	call   0x140032c50
   14003f2f5:	mov    DWORD PTR [rax],0x16
   14003f2fb:	or     rax,0xffffffffffffffff
   14003f2ff:	jmp    0x14003f395
   14003f304:	mov    edx,0x3d
   14003f309:	mov    rdi,rcx
   14003f30c:	call   0x140047e10
   14003f311:	mov    r12,rax
   14003f314:	test   rax,rax
   14003f317:	je     0x14003f374
   14003f319:	cmp    rax,r15
   14003f31c:	je     0x14003f374
   14003f31e:	cmp    WORD PTR [rax+0x2],si
   14003f322:	mov    r14,QWORD PTR [rip+0x376f7]        # 0x140076a20
   14003f329:	sete   r13b
   14003f32d:	cmp    r14,QWORD PTR [rip+0x376f4]        # 0x140076a28
   14003f334:	jne    0x14003f348
   14003f336:	mov    rcx,r14
   14003f339:	call   0x14003f5b8
   14003f33e:	mov    r14,rax
   14003f341:	mov    QWORD PTR [rip+0x376d8],rax        # 0x140076a20
   14003f348:	mov    ebx,0x1
   14003f34d:	test   r14,r14
   14003f350:	jne    0x14003f417
   14003f356:	mov    rax,QWORD PTR [rip+0x376bb]        # 0x140076a18
   14003f35d:	test   ebp,ebp
   14003f35f:	je     0x14003f3b2
   14003f361:	test   rax,rax
   14003f364:	je     0x14003f3b2
   14003f366:	call   0x140033d30
   14003f36b:	test   rax,rax
   14003f36e:	jne    0x14003f40b
   14003f374:	call   0x140032c50
   14003f379:	or     rsi,0xffffffffffffffff
   14003f37d:	mov    DWORD PTR [rax],0x16
   14003f383:	mov    ebp,esi
   14003f385:	mov    esi,ebp
   14003f387:	mov    ebp,esi
   14003f389:	mov    esi,ebp
   14003f38b:	mov    rcx,rdi
   14003f38e:	call   0x140038c70
   14003f393:	mov    eax,esi
   14003f395:	mov    rbx,QWORD PTR [rsp+0x60]
   14003f39a:	mov    rbp,QWORD PTR [rsp+0x68]
   14003f39f:	mov    rsi,QWORD PTR [rsp+0x70]
   14003f3a4:	add    rsp,0x30
   14003f3a8:	pop    r15
   14003f3aa:	pop    r14
   14003f3ac:	pop    r13
   14003f3ae:	pop    r12
   14003f3b0:	pop    rdi
   14003f3b1:	ret    
   14003f3b2:	test   r13b,r13b
   14003f3b5:	jne    0x14003f383
   14003f3b7:	test   rax,rax
   14003f3ba:	jne    0x14003f3f0
   14003f3bc:	lea    edx,[rax+0x8]
   14003f3bf:	mov    rcx,rbx
   14003f3c2:	call   0x140035d88
   14003f3c7:	xor    ecx,ecx
   14003f3c9:	mov    QWORD PTR [rip+0x37648],rax        # 0x140076a18
   14003f3d0:	call   0x140038c70
   14003f3d5:	cmp    QWORD PTR [rip+0x3763c],rsi        # 0x140076a18
   14003f3dc:	jne    0x14003f3e4
   14003f3de:	or     rbp,0xffffffffffffffff
   14003f3e2:	jmp    0x14003f385
   14003f3e4:	mov    r14,QWORD PTR [rip+0x37635]        # 0x140076a20
   14003f3eb:	test   r14,r14
   14003f3ee:	jne    0x14003f417
   14003f3f0:	mov    edx,0x8
   14003f3f5:	mov    rcx,rbx
   14003f3f8:	call   0x140035d88
   14003f3fd:	xor    ecx,ecx
   14003f3ff:	mov    QWORD PTR [rip+0x3761a],rax        # 0x140076a20
   14003f406:	call   0x140038c70
   14003f40b:	mov    r14,QWORD PTR [rip+0x3760e]        # 0x140076a20
   14003f412:	test   r14,r14
   14003f415:	je     0x14003f3de
   14003f417:	sub    r12,r15
   14003f41a:	mov    rbx,r14
   14003f41d:	sar    r12,1
   14003f420:	cmp    QWORD PTR [r14],rsi
   14003f423:	je     0x14003f45f
   14003f425:	mov    rdx,QWORD PTR [rbx]
   14003f428:	mov    r8,r12
   14003f42b:	mov    rcx,r15
   14003f42e:	call   0x14003b3fc
   14003f433:	test   eax,eax
   14003f435:	jne    0x14003f44d
   14003f437:	mov    rax,QWORD PTR [rbx]
   14003f43a:	mov    ecx,0x3d
   14003f43f:	cmp    WORD PTR [rax+r12*2],cx
   14003f444:	je     0x14003f456
   14003f446:	cmp    WORD PTR [rax+r12*2],si
   14003f44b:	je     0x14003f456
   14003f44d:	add    rbx,0x8
   14003f451:	cmp    QWORD PTR [rbx],rsi
   14003f454:	jmp    0x14003f423
   14003f456:	sub    rbx,r14
   14003f459:	sar    rbx,0x3
   14003f45d:	jmp    0x14003f469
   14003f45f:	sub    rbx,r14
   14003f462:	sar    rbx,0x3
   14003f466:	neg    rbx
   14003f469:	test   rbx,rbx
   14003f46c:	js     0x14003f4c5
   14003f46e:	cmp    QWORD PTR [r14],rsi
   14003f471:	je     0x14003f4c5
   14003f473:	mov    rcx,QWORD PTR [r14+rbx*8]
   14003f477:	call   0x140038c70
   14003f47c:	test   r13b,r13b
   14003f47f:	jne    0x14003f496
   14003f481:	mov    QWORD PTR [r14+rbx*8],r15
   14003f485:	jmp    0x14003f51f
   14003f48a:	mov    rax,QWORD PTR [r14+rbx*8+0x8]
   14003f48f:	mov    QWORD PTR [r14+rbx*8],rax
   14003f493:	inc    rbx
   14003f496:	cmp    QWORD PTR [r14+rbx*8],rsi
   14003f49a:	jne    0x14003f48a
   14003f49c:	mov    r8d,0x8
   14003f4a2:	mov    rdx,rbx
   14003f4a5:	mov    rcx,r14
   14003f4a8:	call   0x14003f6b4
   14003f4ad:	xor    ecx,ecx
   14003f4af:	mov    rbx,rax
   14003f4b2:	call   0x140038c70
   14003f4b7:	test   rbx,rbx
   14003f4ba:	je     0x14003f522
   14003f4bc:	mov    QWORD PTR [rip+0x3755d],rbx        # 0x140076a20
   14003f4c3:	jmp    0x14003f522
   14003f4c5:	test   r13b,r13b
   14003f4c8:	jne    0x14003f387
   14003f4ce:	neg    rbx
   14003f4d1:	lea    rdx,[rbx+0x2]
   14003f4d5:	cmp    rdx,rbx
   14003f4d8:	jae    0x14003f4e3
   14003f4da:	or     rbp,0xffffffffffffffff
   14003f4de:	jmp    0x14003f389
   14003f4e3:	movabs rax,0x1fffffffffffffff
   14003f4ed:	cmp    rdx,rax
   14003f4f0:	jae    0x14003f4da
   14003f4f2:	mov    r8d,0x8
   14003f4f8:	mov    rcx,r14
   14003f4fb:	call   0x14003f6b4
   14003f500:	xor    ecx,ecx
   14003f502:	mov    r14,rax
   14003f505:	call   0x140038c70
   14003f50a:	test   r14,r14
   14003f50d:	je     0x14003f4da
   14003f50f:	mov    QWORD PTR [r14+rbx*8],r15
   14003f513:	mov    QWORD PTR [r14+rbx*8+0x8],rsi
   14003f518:	mov    QWORD PTR [rip+0x37501],r14        # 0x140076a20
   14003f51f:	mov    rdi,rsi
   14003f522:	test   ebp,ebp
   14003f524:	je     0x14003f38b
   14003f52a:	or     rbp,0xffffffffffffffff
   14003f52e:	mov    r14,rbp
   14003f531:	inc    r14
   14003f534:	cmp    WORD PTR [r15+r14*2],si
   14003f539:	jne    0x14003f531
   14003f53b:	mov    edx,0x2
   14003f540:	add    r14,rdx
   14003f543:	mov    rcx,r14
   14003f546:	call   0x140035d88
   14003f54b:	mov    rbx,rax
   14003f54e:	test   rax,rax
   14003f551:	je     0x14003f593
   14003f553:	mov    r8,r15
   14003f556:	mov    rdx,r14
   14003f559:	mov    rcx,rax
   14003f55c:	call   0x140038cb0
   14003f561:	test   eax,eax
   14003f563:	jne    0x14003f5a0
   14003f565:	lea    rdx,[r12+0x1]
   14003f56a:	test   r13b,r13b
   14003f56d:	lea    rdx,[rbx+rdx*2]
   14003f571:	mov    rcx,rbx
   14003f574:	mov    WORD PTR [rdx-0x2],si
   14003f578:	cmovne rdx,rsi
   14003f57c:	call   QWORD PTR [rip+0xbbc6]        # 0x14004b148
   14003f582:	test   eax,eax
   14003f584:	jne    0x14003f593
   14003f586:	call   0x140032c50
   14003f58b:	mov    esi,ebp
   14003f58d:	mov    DWORD PTR [rax],0x2a
   14003f593:	mov    rcx,rbx
   14003f596:	call   0x140038c70
   14003f59b:	jmp    0x14003f38b
   14003f5a0:	xor    r9d,r9d
   14003f5a3:	mov    QWORD PTR [rsp+0x20],rsi
   14003f5a8:	xor    r8d,r8d
   14003f5ab:	xor    edx,edx
   14003f5ad:	xor    ecx,ecx
   14003f5af:	call   0x140030820
   14003f5b4:	int3   
   14003f5b5:	int3   
   14003f5b6:	int3   
   14003f5b7:	int3   
   14003f5b8:	mov    rax,rsp
   14003f5bb:	mov    QWORD PTR [rax+0x8],rbx
   14003f5bf:	mov    QWORD PTR [rax+0x10],rbp
   14003f5c3:	mov    QWORD PTR [rax+0x18],rsi
   14003f5c7:	mov    QWORD PTR [rax+0x20],rdi
   14003f5cb:	push   r14
   14003f5cd:	sub    rsp,0x30
   14003f5d1:	xor    ebp,ebp
   14003f5d3:	mov    rdi,rcx
   14003f5d6:	test   rcx,rcx
   14003f5d9:	jne    0x14003f5e2
   14003f5db:	xor    eax,eax
   14003f5dd:	jmp    0x14003f66e
   14003f5e2:	mov    rcx,rbp
   14003f5e5:	mov    rax,rdi
   14003f5e8:	cmp    QWORD PTR [rdi],rbp
   14003f5eb:	je     0x14003f5f9
   14003f5ed:	inc    rcx
   14003f5f0:	lea    rax,[rax+0x8]
   14003f5f4:	cmp    QWORD PTR [rax],rbp
   14003f5f7:	jne    0x14003f5ed
   14003f5f9:	inc    rcx
   14003f5fc:	mov    edx,0x8
   14003f601:	call   0x140035d88
   14003f606:	mov    rbx,rax
   14003f609:	test   rax,rax
   14003f60c:	je     0x14003f689
   14003f60e:	cmp    QWORD PTR [rdi],rbp
   14003f611:	je     0x14003f664
   14003f613:	mov    r14,rax
   14003f616:	sub    r14,rdi
   14003f619:	mov    rax,QWORD PTR [rdi]
   14003f61c:	or     rsi,0xffffffffffffffff
   14003f620:	inc    rsi
   14003f623:	cmp    WORD PTR [rax+rsi*2],bp
   14003f627:	jne    0x14003f620
   14003f629:	mov    edx,0x2
   14003f62e:	lea    rcx,[rsi+0x1]
   14003f632:	call   0x140035d88
   14003f637:	xor    ecx,ecx
   14003f639:	mov    QWORD PTR [r14+rdi*1],rax
   14003f63d:	call   0x140038c70
   14003f642:	mov    rcx,QWORD PTR [r14+rdi*1]
   14003f646:	test   rcx,rcx
   14003f649:	je     0x14003f6a4
   14003f64b:	mov    r8,QWORD PTR [rdi]
   14003f64e:	lea    rdx,[rsi+0x1]
   14003f652:	call   0x140038cb0
   14003f657:	test   eax,eax
   14003f659:	jne    0x14003f68f
   14003f65b:	add    rdi,0x8
   14003f65f:	cmp    QWORD PTR [rdi],rbp
   14003f662:	jne    0x14003f619
   14003f664:	xor    ecx,ecx
   14003f666:	call   0x140038c70
   14003f66b:	mov    rax,rbx
   14003f66e:	mov    rbx,QWORD PTR [rsp+0x40]
   14003f673:	mov    rbp,QWORD PTR [rsp+0x48]
   14003f678:	mov    rsi,QWORD PTR [rsp+0x50]
   14003f67d:	mov    rdi,QWORD PTR [rsp+0x58]
   14003f682:	add    rsp,0x30
   14003f686:	pop    r14
   14003f688:	ret    
   14003f689:	call   0x1400365a8
   14003f68e:	int3   
   14003f68f:	xor    r9d,r9d
   14003f692:	mov    QWORD PTR [rsp+0x20],rbp
   14003f697:	xor    r8d,r8d
   14003f69a:	xor    edx,edx
   14003f69c:	xor    ecx,ecx
   14003f69e:	call   0x140030820
   14003f6a3:	int3   
   14003f6a4:	call   0x1400365a8
   14003f6a9:	int3   
   14003f6aa:	int3   
   14003f6ab:	int3   
   14003f6ac:	jmp    0x14003f2c8
   14003f6b1:	int3   
   14003f6b2:	int3   
   14003f6b3:	int3   
   14003f6b4:	jmp    0x14003f6bc
   14003f6b9:	int3   
   14003f6ba:	int3   
   14003f6bb:	int3   
   14003f6bc:	mov    QWORD PTR [rsp+0x8],rbx
   14003f6c1:	mov    QWORD PTR [rsp+0x10],rbp
   14003f6c6:	mov    QWORD PTR [rsp+0x18],rsi
   14003f6cb:	push   rdi
   14003f6cc:	sub    rsp,0x20
   14003f6d0:	mov    rbp,r8
   14003f6d3:	mov    rbx,rdx
   14003f6d6:	mov    rsi,rcx
   14003f6d9:	test   rdx,rdx
   14003f6dc:	je     0x14003f6fb
   14003f6de:	xor    edx,edx
   14003f6e0:	lea    rax,[rdx-0x20]
   14003f6e4:	div    rbx
   14003f6e7:	cmp    rax,r8
   14003f6ea:	jae    0x14003f6fb
   14003f6ec:	call   0x140032c50
   14003f6f1:	mov    DWORD PTR [rax],0xc
   14003f6f7:	xor    eax,eax
   14003f6f9:	jmp    0x14003f73c
   14003f6fb:	test   rcx,rcx
   14003f6fe:	je     0x14003f70a
   14003f700:	call   0x1400469b0
   14003f705:	mov    rdi,rax
   14003f708:	jmp    0x14003f70c
   14003f70a:	xor    edi,edi
   14003f70c:	imul   rbx,rbp
   14003f710:	mov    rcx,rsi
   14003f713:	mov    rdx,rbx
   14003f716:	call   0x140036660
   14003f71b:	mov    rsi,rax
   14003f71e:	test   rax,rax
   14003f721:	je     0x14003f739
   14003f723:	cmp    rdi,rbx
   14003f726:	jae    0x14003f739
   14003f728:	sub    rbx,rdi
   14003f72b:	lea    rcx,[rax+rdi*1]
   14003f72f:	mov    r8,rbx
   14003f732:	xor    edx,edx
   14003f734:	call   0x14002a910
   14003f739:	mov    rax,rsi
   14003f73c:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f741:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f746:	mov    rsi,QWORD PTR [rsp+0x40]
   14003f74b:	add    rsp,0x20
   14003f74f:	pop    rdi
   14003f750:	ret    
   14003f751:	int3   
   14003f752:	int3   
   14003f753:	int3   
   14003f754:	sub    rsp,0x28
   14003f758:	call   QWORD PTR [rip+0xbc32]        # 0x14004b390
   14003f75e:	test   rax,rax
   14003f761:	mov    QWORD PTR [rip+0x37b68],rax        # 0x1400772d0
   14003f768:	setne  al
   14003f76b:	add    rsp,0x28
   14003f76f:	ret    
   14003f770:	and    QWORD PTR [rip+0x37b58],0x0        # 0x1400772d0
   14003f778:	mov    al,0x1
   14003f77a:	ret    
   14003f77b:	int3   
   14003f77c:	mov    QWORD PTR [rsp+0x8],rbx
   14003f781:	mov    QWORD PTR [rsp+0x10],rbp
   14003f786:	mov    QWORD PTR [rsp+0x18],rsi
   14003f78b:	push   rdi
   14003f78c:	sub    rsp,0x20
   14003f790:	mov    rsi,rdx
   14003f793:	mov    rdi,rcx
   14003f796:	cmp    rcx,rdx
   14003f799:	jne    0x14003f79f
   14003f79b:	mov    al,0x1
   14003f79d:	jmp    0x14003f7fb
   14003f79f:	mov    rbx,rcx
   14003f7a2:	mov    rbp,QWORD PTR [rbx]
   14003f7a5:	test   rbp,rbp
   14003f7a8:	je     0x14003f7b9
   14003f7aa:	mov    rcx,rbp
   14003f7ad:	call   QWORD PTR [rip+0xbca5]        # 0x14004b458
   14003f7b3:	call   rbp
   14003f7b5:	test   al,al
   14003f7b7:	je     0x14003f7c2
   14003f7b9:	add    rbx,0x10
   14003f7bd:	cmp    rbx,rsi
   14003f7c0:	jne    0x14003f7a2
   14003f7c2:	cmp    rbx,rsi
   14003f7c5:	je     0x14003f79b
   14003f7c7:	cmp    rbx,rdi
   14003f7ca:	je     0x14003f7f9
   14003f7cc:	add    rbx,0xfffffffffffffff8
   14003f7d0:	cmp    QWORD PTR [rbx-0x8],0x0
   14003f7d5:	je     0x14003f7ec
   14003f7d7:	mov    rsi,QWORD PTR [rbx]
   14003f7da:	test   rsi,rsi
   14003f7dd:	je     0x14003f7ec
   14003f7df:	mov    rcx,rsi
   14003f7e2:	call   QWORD PTR [rip+0xbc70]        # 0x14004b458
   14003f7e8:	xor    ecx,ecx
   14003f7ea:	call   rsi
   14003f7ec:	sub    rbx,0x10
   14003f7f0:	lea    rax,[rbx+0x8]
   14003f7f4:	cmp    rax,rdi
   14003f7f7:	jne    0x14003f7d0
   14003f7f9:	xor    al,al
   14003f7fb:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f800:	mov    rbp,QWORD PTR [rsp+0x38]
   14003f805:	mov    rsi,QWORD PTR [rsp+0x40]
   14003f80a:	add    rsp,0x20
   14003f80e:	pop    rdi
   14003f80f:	ret    
   14003f810:	mov    QWORD PTR [rsp+0x8],rbx
   14003f815:	mov    QWORD PTR [rsp+0x10],rsi
   14003f81a:	push   rdi
   14003f81b:	sub    rsp,0x20
   14003f81f:	mov    rsi,rcx
   14003f822:	cmp    rcx,rdx
   14003f825:	je     0x14003f84d
   14003f827:	lea    rbx,[rdx-0x8]
   14003f82b:	mov    rdi,QWORD PTR [rbx]
   14003f82e:	test   rdi,rdi
   14003f831:	je     0x14003f840
   14003f833:	mov    rcx,rdi
   14003f836:	call   QWORD PTR [rip+0xbc1c]        # 0x14004b458
   14003f83c:	xor    ecx,ecx
   14003f83e:	call   rdi
   14003f840:	sub    rbx,0x10
   14003f844:	lea    rax,[rbx+0x8]
   14003f848:	cmp    rax,rsi
   14003f84b:	jne    0x14003f82b
   14003f84d:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f852:	mov    al,0x1
   14003f854:	mov    rsi,QWORD PTR [rsp+0x38]
   14003f859:	add    rsp,0x20
   14003f85d:	pop    rdi
   14003f85e:	ret    
   14003f85f:	int3   
   14003f860:	mov    QWORD PTR [rsp+0x8],rbx
   14003f865:	mov    QWORD PTR [rsp+0x20],r9
   14003f86a:	push   rdi
   14003f86b:	sub    rsp,0x20
   14003f86f:	mov    rdi,r9
   14003f872:	mov    ecx,DWORD PTR [rdx]
   14003f874:	call   0x140035a44
   14003f879:	nop
   14003f87a:	mov    rbx,QWORD PTR [rip+0x317cf]        # 0x140071050
   14003f881:	mov    ecx,ebx
   14003f883:	and    ecx,0x3f
   14003f886:	xor    rbx,QWORD PTR [rip+0x37a5b]        # 0x1400772e8
   14003f88d:	ror    rbx,cl
   14003f890:	mov    ecx,DWORD PTR [rdi]
   14003f892:	call   0x140035a98
   14003f897:	mov    rax,rbx
   14003f89a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003f89f:	add    rsp,0x20
   14003f8a3:	pop    rdi
   14003f8a4:	ret    
   14003f8a5:	int3   
   14003f8a6:	int3   
   14003f8a7:	int3   
   14003f8a8:	mov    r11,rsp
   14003f8ab:	sub    rsp,0x28
   14003f8af:	mov    eax,0x3
   14003f8b4:	lea    r9,[r11+0x10]
   14003f8b8:	lea    r8,[r11+0x8]
   14003f8bc:	mov    DWORD PTR [rsp+0x38],eax
   14003f8c0:	lea    rdx,[r11+0x18]
   14003f8c4:	mov    DWORD PTR [rsp+0x40],eax
   14003f8c8:	lea    rcx,[r11+0x8]
   14003f8cc:	call   0x14003f860
   14003f8d1:	add    rsp,0x28
   14003f8d5:	ret    
   14003f8d6:	int3   
   14003f8d7:	int3   
   14003f8d8:	mov    QWORD PTR [rip+0x379f9],rcx        # 0x1400772d8
   14003f8df:	mov    QWORD PTR [rip+0x379fa],rcx        # 0x1400772e0
   14003f8e6:	mov    QWORD PTR [rip+0x379fb],rcx        # 0x1400772e8
   14003f8ed:	mov    QWORD PTR [rip+0x379fc],rcx        # 0x1400772f0
   14003f8f4:	ret    
   14003f8f5:	int3   
   14003f8f6:	int3   
   14003f8f7:	int3   
   14003f8f8:	mov    rax,rsp
   14003f8fb:	push   rbx
   14003f8fc:	push   rsi
   14003f8fd:	push   rdi
   14003f8fe:	push   r12
   14003f900:	push   r13
   14003f902:	push   r15
   14003f904:	sub    rsp,0x48
   14003f908:	mov    edi,ecx
   14003f90a:	xor    r13d,r13d
   14003f90d:	and    DWORD PTR [rax+0x18],r13d
   14003f911:	mov    sil,0x1
   14003f914:	mov    BYTE PTR [rsp+0x80],sil
   14003f91c:	cmp    ecx,0x2
   14003f91f:	je     0x14003f9b3
   14003f925:	cmp    ecx,0x4
   14003f928:	je     0x14003f94c
   14003f92a:	cmp    ecx,0x6
   14003f92d:	je     0x14003f9b3
   14003f933:	cmp    ecx,0x8
   14003f936:	je     0x14003f94c
   14003f938:	cmp    ecx,0xb
   14003f93b:	je     0x14003f94c
   14003f93d:	cmp    ecx,0xf
   14003f940:	je     0x14003f9b3
   14003f942:	lea    eax,[rcx-0x15]
   14003f945:	cmp    eax,0x1
   14003f948:	jbe    0x14003f9b3
   14003f94a:	jmp    0x14003f990
   14003f94c:	call   0x1400391c4
   14003f951:	mov    r13,rax
   14003f954:	test   rax,rax
   14003f957:	jne    0x14003f961
   14003f959:	or     eax,0xffffffff
   14003f95c:	jmp    0x14003fb83
   14003f961:	mov    rcx,QWORD PTR [rax]
   14003f964:	mov    rdx,QWORD PTR [rip+0x15125]        # 0x140054a90
   14003f96b:	shl    rdx,0x4
   14003f96f:	add    rdx,rcx
   14003f972:	jmp    0x14003f97d
   14003f974:	cmp    DWORD PTR [rcx+0x4],edi
   14003f977:	je     0x14003f984
   14003f979:	add    rcx,0x10
   14003f97d:	cmp    rcx,rdx
   14003f980:	jne    0x14003f974
   14003f982:	xor    ecx,ecx
   14003f984:	xor    eax,eax
   14003f986:	test   rcx,rcx
   14003f989:	setne  al
   14003f98c:	test   eax,eax
   14003f98e:	jne    0x14003f9a2
   14003f990:	call   0x140032c50
   14003f995:	mov    DWORD PTR [rax],0x16
   14003f99b:	call   0x1400307d0
   14003f9a0:	jmp    0x14003f959
   14003f9a2:	lea    rbx,[rcx+0x8]
   14003f9a6:	xor    sil,sil
   14003f9a9:	mov    BYTE PTR [rsp+0x80],sil
   14003f9b1:	jmp    0x14003f9f2
   14003f9b3:	sub    ecx,0x2
   14003f9b6:	je     0x14003f9eb
   14003f9b8:	sub    ecx,0x4
   14003f9bb:	je     0x14003f9d0
   14003f9bd:	sub    ecx,0x9
   14003f9c0:	je     0x14003f9e2
   14003f9c2:	sub    ecx,0x6
   14003f9c5:	je     0x14003f9d9
   14003f9c7:	cmp    ecx,0x1
   14003f9ca:	je     0x14003f9d0
   14003f9cc:	xor    ebx,ebx
   14003f9ce:	jmp    0x14003f9f2
   14003f9d0:	lea    rbx,[rip+0x37911]        # 0x1400772e8
   14003f9d7:	jmp    0x14003f9f2
   14003f9d9:	lea    rbx,[rip+0x37900]        # 0x1400772e0
   14003f9e0:	jmp    0x14003f9f2
   14003f9e2:	lea    rbx,[rip+0x37907]        # 0x1400772f0
   14003f9e9:	jmp    0x14003f9f2
   14003f9eb:	lea    rbx,[rip+0x378e6]        # 0x1400772d8
   14003f9f2:	and    QWORD PTR [rsp+0x98],0x0
   14003f9fb:	test   sil,sil
   14003f9fe:	je     0x14003fa0b
   14003fa00:	mov    ecx,0x3
   14003fa05:	call   0x140035a44
   14003fa0a:	nop
   14003fa0b:	test   sil,sil
   14003fa0e:	je     0x14003fa27
   14003fa10:	mov    rdx,QWORD PTR [rip+0x31639]        # 0x140071050
   14003fa17:	mov    ecx,edx
   14003fa19:	and    ecx,0x3f
   14003fa1c:	xor    rdx,QWORD PTR [rbx]
   14003fa1f:	ror    rdx,cl
   14003fa22:	mov    r15,rdx
   14003fa25:	jmp    0x14003fa2a
   14003fa27:	mov    r15,QWORD PTR [rbx]
   14003fa2a:	cmp    r15,0x1
   14003fa2e:	sete   al
   14003fa31:	mov    BYTE PTR [rsp+0x88],al
   14003fa38:	test   al,al
   14003fa3a:	jne    0x14003faff
   14003fa40:	test   r15,r15
   14003fa43:	jne    0x14003fa5d
   14003fa45:	test   sil,sil
   14003fa48:	je     0x14003fa53
   14003fa4a:	lea    ecx,[r15+0x3]
   14003fa4e:	call   0x140035a98
   14003fa53:	mov    ecx,0x3
   14003fa58:	call   0x1400334f4
   14003fa5d:	mov    r12d,0x910
   14003fa63:	cmp    edi,0xb
   14003fa66:	ja     0x14003faa8
   14003fa68:	bt     r12d,edi
   14003fa6c:	jae    0x14003faa8
   14003fa6e:	mov    rax,QWORD PTR [r13+0x8]
   14003fa72:	mov    QWORD PTR [rsp+0x98],rax
   14003fa7a:	mov    QWORD PTR [rsp+0x30],rax
   14003fa7f:	and    QWORD PTR [r13+0x8],0x0
   14003fa84:	cmp    edi,0x8
   14003fa87:	jne    0x14003fadf
   14003fa89:	call   0x140039130
   14003fa8e:	mov    eax,DWORD PTR [rax+0x10]
   14003fa91:	mov    DWORD PTR [rsp+0x90],eax
   14003fa98:	mov    DWORD PTR [rsp+0x20],eax
   14003fa9c:	call   0x140039130
   14003faa1:	mov    DWORD PTR [rax+0x10],0x8c
   14003faa8:	cmp    edi,0x8
   14003faab:	jne    0x14003fadf
   14003faad:	mov    rax,QWORD PTR [rip+0x14fe4]        # 0x140054a98
   14003fab4:	shl    rax,0x4
   14003fab8:	add    rax,QWORD PTR [r13+0x0]
   14003fabc:	mov    rcx,QWORD PTR [rip+0x14fdd]        # 0x140054aa0
   14003fac3:	shl    rcx,0x4
   14003fac7:	add    rcx,rax
   14003faca:	mov    QWORD PTR [rsp+0x28],rax
   14003facf:	cmp    rax,rcx
   14003fad2:	je     0x14003fb05
   14003fad4:	and    QWORD PTR [rax+0x8],0x0
   14003fad9:	add    rax,0x10
   14003fadd:	jmp    0x14003faca
   14003fadf:	mov    rdx,QWORD PTR [rip+0x3156a]        # 0x140071050
   14003fae6:	mov    eax,edx
   14003fae8:	and    eax,0x3f
   14003faeb:	mov    ecx,0x40
   14003faf0:	sub    ecx,eax
   14003faf2:	xor    eax,eax
   14003faf4:	ror    rax,cl
   14003faf7:	xor    rax,rdx
   14003fafa:	mov    QWORD PTR [rbx],rax
   14003fafd:	jmp    0x14003fb05
   14003faff:	mov    r12d,0x910
   14003fb05:	test   sil,sil
   14003fb08:	je     0x14003fb14
   14003fb0a:	mov    ecx,0x3
   14003fb0f:	call   0x140035a98
   14003fb14:	cmp    BYTE PTR [rsp+0x88],0x0
   14003fb1c:	je     0x14003fb22
   14003fb1e:	xor    eax,eax
   14003fb20:	jmp    0x14003fb83
   14003fb22:	cmp    edi,0x8
   14003fb25:	jne    0x14003fb45
   14003fb27:	call   0x140039130
   14003fb2c:	mov    rbx,rax
   14003fb2f:	mov    rcx,r15
   14003fb32:	mov    rdx,QWORD PTR [rip+0xb91f]        # 0x14004b458
   14003fb39:	call   rdx
   14003fb3b:	mov    edx,DWORD PTR [rbx+0x10]
   14003fb3e:	mov    ecx,edi
   14003fb40:	call   r15
   14003fb43:	jmp    0x14003fb56
   14003fb45:	mov    rcx,r15
   14003fb48:	mov    rax,QWORD PTR [rip+0xb909]        # 0x14004b458
   14003fb4f:	call   rax
   14003fb51:	mov    ecx,edi
   14003fb53:	call   r15
   14003fb56:	cmp    edi,0xb
   14003fb59:	ja     0x14003fb1e
   14003fb5b:	bt     r12d,edi
   14003fb5f:	jae    0x14003fb1e
   14003fb61:	mov    rax,QWORD PTR [rsp+0x98]
   14003fb69:	mov    QWORD PTR [r13+0x8],rax
   14003fb6d:	cmp    edi,0x8
   14003fb70:	jne    0x14003fb1e
   14003fb72:	call   0x140039130
   14003fb77:	mov    ecx,DWORD PTR [rsp+0x90]
   14003fb7e:	mov    DWORD PTR [rax+0x10],ecx
   14003fb81:	jmp    0x14003fb1e
   14003fb83:	add    rsp,0x48
   14003fb87:	pop    r15
   14003fb89:	pop    r13
   14003fb8b:	pop    r12
   14003fb8d:	pop    rdi
   14003fb8e:	pop    rsi
   14003fb8f:	pop    rbx
   14003fb90:	ret    
   14003fb91:	int3   
   14003fb92:	int3   
   14003fb93:	int3   
   14003fb94:	rex push rbx
   14003fb96:	sub    rsp,0x20
   14003fb9a:	xor    ebx,ebx
   14003fb9c:	mov    r9,rcx
   14003fb9f:	test   rcx,rcx
   14003fba2:	je     0x14003fbb1
   14003fba4:	test   rdx,rdx
   14003fba7:	je     0x14003fbb1
   14003fba9:	test   r8,r8
   14003fbac:	jne    0x14003fbca
   14003fbae:	mov    WORD PTR [rcx],bx
   14003fbb1:	call   0x140032c50
   14003fbb6:	mov    ebx,0x16
   14003fbbb:	mov    DWORD PTR [rax],ebx
   14003fbbd:	call   0x1400307d0
   14003fbc2:	mov    eax,ebx
   14003fbc4:	add    rsp,0x20
   14003fbc8:	pop    rbx
   14003fbc9:	ret    
   14003fbca:	cmp    WORD PTR [rcx],bx
   14003fbcd:	je     0x14003fbd9
   14003fbcf:	add    rcx,0x2
   14003fbd3:	sub    rdx,0x1
   14003fbd7:	jne    0x14003fbca
   14003fbd9:	test   rdx,rdx
   14003fbdc:	jne    0x14003fbe4
   14003fbde:	mov    WORD PTR [r9],bx
   14003fbe2:	jmp    0x14003fbb1
   14003fbe4:	sub    r8,rcx
   14003fbe7:	movzx  eax,WORD PTR [r8+rcx*1]
   14003fbec:	mov    WORD PTR [rcx],ax
   14003fbef:	lea    rcx,[rcx+0x2]
   14003fbf3:	test   ax,ax
   14003fbf6:	je     0x14003fbfe
   14003fbf8:	sub    rdx,0x1
   14003fbfc:	jne    0x14003fbe7
   14003fbfe:	test   rdx,rdx
   14003fc01:	jne    0x14003fbc2
   14003fc03:	mov    WORD PTR [r9],bx
   14003fc07:	call   0x140032c50
   14003fc0c:	mov    ebx,0x22
   14003fc11:	jmp    0x14003fbbb
   14003fc13:	int3   
   14003fc14:	mov    QWORD PTR [rsp+0x8],rbx
   14003fc19:	push   rdi
   14003fc1a:	sub    rsp,0x20
   14003fc1e:	xor    r10d,r10d
   14003fc21:	mov    r11,rdx
   14003fc24:	test   r9,r9
   14003fc27:	jne    0x14003fc55
   14003fc29:	test   rcx,rcx
   14003fc2c:	jne    0x14003fc5a
   14003fc2e:	test   rdx,rdx
   14003fc31:	je     0x14003fc47
   14003fc33:	call   0x140032c50
   14003fc38:	mov    ebx,0x16
   14003fc3d:	mov    DWORD PTR [rax],ebx
   14003fc3f:	call   0x1400307d0
   14003fc44:	mov    r10d,ebx
   14003fc47:	mov    eax,r10d
   14003fc4a:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fc4f:	add    rsp,0x20
   14003fc53:	pop    rdi
   14003fc54:	ret    
   14003fc55:	test   rcx,rcx
   14003fc58:	je     0x14003fc33
   14003fc5a:	test   rdx,rdx
   14003fc5d:	je     0x14003fc33
   14003fc5f:	test   r9,r9
   14003fc62:	jne    0x14003fc6a
   14003fc64:	mov    WORD PTR [rcx],r10w
   14003fc68:	jmp    0x14003fc47
   14003fc6a:	test   r8,r8
   14003fc6d:	jne    0x14003fc75
   14003fc6f:	mov    WORD PTR [rcx],r10w
   14003fc73:	jmp    0x14003fc33
   14003fc75:	sub    r8,rcx
   14003fc78:	mov    rdx,rcx
   14003fc7b:	mov    rbx,r11
   14003fc7e:	mov    rdi,r9
   14003fc81:	cmp    r9,0xffffffffffffffff
   14003fc85:	jne    0x14003fca0
   14003fc87:	movzx  eax,WORD PTR [r8+rdx*1]
   14003fc8c:	mov    WORD PTR [rdx],ax
   14003fc8f:	lea    rdx,[rdx+0x2]
   14003fc93:	test   ax,ax
   14003fc96:	je     0x14003fcc6
   14003fc98:	sub    rbx,0x1
   14003fc9c:	jne    0x14003fc87
   14003fc9e:	jmp    0x14003fcc6
   14003fca0:	movzx  eax,WORD PTR [r8+rdx*1]
   14003fca5:	mov    WORD PTR [rdx],ax
   14003fca8:	lea    rdx,[rdx+0x2]
   14003fcac:	test   ax,ax
   14003fcaf:	je     0x14003fcbd
   14003fcb1:	sub    rbx,0x1
   14003fcb5:	je     0x14003fcbd
   14003fcb7:	sub    rdi,0x1
   14003fcbb:	jne    0x14003fca0
   14003fcbd:	test   rdi,rdi
   14003fcc0:	jne    0x14003fcc6
   14003fcc2:	mov    WORD PTR [rdx],r10w
   14003fcc6:	test   rbx,rbx
   14003fcc9:	jne    0x14003fc47
   14003fccf:	cmp    r9,0xffffffffffffffff
   14003fcd3:	jne    0x14003fce4
   14003fcd5:	mov    WORD PTR [rcx+r11*2-0x2],r10w
   14003fcdb:	lea    r10d,[rbx+0x50]
   14003fcdf:	jmp    0x14003fc47
   14003fce4:	mov    WORD PTR [rcx],r10w
   14003fce8:	call   0x140032c50
   14003fced:	mov    ebx,0x22
   14003fcf2:	jmp    0x14003fc3d
   14003fcf7:	int3   
   14003fcf8:	mov    QWORD PTR [rsp+0x8],rbx
   14003fcfd:	mov    QWORD PTR [rsp+0x10],rbp
   14003fd02:	mov    QWORD PTR [rsp+0x18],rsi
   14003fd07:	push   rdi
   14003fd08:	sub    rsp,0x20
   14003fd0c:	mov    edx,0x40
   14003fd11:	mov    ecx,edx
   14003fd13:	call   0x140035d88
   14003fd18:	xor    esi,esi
   14003fd1a:	mov    rbx,rax
   14003fd1d:	test   rax,rax
   14003fd20:	je     0x14003fd6e
   14003fd22:	lea    rbp,[rax+0x1000]
   14003fd29:	cmp    rax,rbp
   14003fd2c:	je     0x14003fd6b
   14003fd2e:	lea    rdi,[rax+0x30]
   14003fd32:	lea    rcx,[rdi-0x30]
   14003fd36:	xor    r8d,r8d
   14003fd39:	mov    edx,0xfa0
   14003fd3e:	call   0x14003d288
   14003fd43:	or     QWORD PTR [rdi-0x8],0xffffffffffffffff
   14003fd48:	mov    QWORD PTR [rdi],rsi
   14003fd4b:	mov    DWORD PTR [rdi+0x8],0xa0a0000
   14003fd52:	mov    BYTE PTR [rdi+0xc],0xa
   14003fd56:	and    BYTE PTR [rdi+0xd],0xf8
   14003fd5a:	mov    BYTE PTR [rdi+0xe],sil
   14003fd5e:	lea    rdi,[rdi+0x40]
   14003fd62:	lea    rax,[rdi-0x30]
   14003fd66:	cmp    rax,rbp
   14003fd69:	jne    0x14003fd32
   14003fd6b:	mov    rsi,rbx
   14003fd6e:	xor    ecx,ecx
   14003fd70:	call   0x140038c70
   14003fd75:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fd7a:	mov    rax,rsi
   14003fd7d:	mov    rsi,QWORD PTR [rsp+0x40]
   14003fd82:	mov    rbp,QWORD PTR [rsp+0x38]
   14003fd87:	add    rsp,0x20
   14003fd8b:	pop    rdi
   14003fd8c:	ret    
   14003fd8d:	int3   
   14003fd8e:	int3   
   14003fd8f:	int3   
   14003fd90:	test   rcx,rcx
   14003fd93:	je     0x14003fddf
   14003fd95:	mov    QWORD PTR [rsp+0x8],rbx
   14003fd9a:	mov    QWORD PTR [rsp+0x10],rsi
   14003fd9f:	push   rdi
   14003fda0:	sub    rsp,0x20
   14003fda4:	lea    rsi,[rcx+0x1000]
   14003fdab:	mov    rbx,rcx
   14003fdae:	mov    rdi,rcx
   14003fdb1:	cmp    rcx,rsi
   14003fdb4:	je     0x14003fdc8
   14003fdb6:	mov    rcx,rdi
   14003fdb9:	call   QWORD PTR [rip+0xb299]        # 0x14004b058
   14003fdbf:	add    rdi,0x40
   14003fdc3:	cmp    rdi,rsi
   14003fdc6:	jne    0x14003fdb6
   14003fdc8:	mov    rcx,rbx
   14003fdcb:	call   0x140038c70
   14003fdd0:	mov    rbx,QWORD PTR [rsp+0x30]
   14003fdd5:	mov    rsi,QWORD PTR [rsp+0x38]
   14003fdda:	add    rsp,0x20
   14003fdde:	pop    rdi
   14003fddf:	ret    
   14003fde0:	mov    QWORD PTR [rsp+0x8],rbx
   14003fde5:	mov    QWORD PTR [rsp+0x10],rsi
   14003fdea:	mov    QWORD PTR [rsp+0x18],rdi
   14003fdef:	push   r15
   14003fdf1:	sub    rsp,0x30
   14003fdf5:	mov    esi,ecx
   14003fdf7:	xor    ebx,ebx
   14003fdf9:	mov    eax,ebx
   14003fdfb:	cmp    ecx,0x2000
   14003fe01:	setb   al
   14003fe04:	test   eax,eax
   14003fe06:	jne    0x14003fe1d
   14003fe08:	call   0x140032c50
   14003fe0d:	mov    ebx,0x9
   14003fe12:	mov    DWORD PTR [rax],ebx
   14003fe14:	call   0x1400307d0
   14003fe19:	mov    eax,ebx
   14003fe1b:	jmp    0x14003fe81
   14003fe1d:	mov    ecx,0x7
   14003fe22:	call   0x140035a44
   14003fe27:	nop
   14003fe28:	mov    rdi,rbx
   14003fe2b:	mov    QWORD PTR [rsp+0x20],rbx
   14003fe30:	mov    eax,DWORD PTR [rip+0x3728a]        # 0x1400770c0
   14003fe36:	cmp    esi,eax
   14003fe38:	jl     0x14003fe75
   14003fe3a:	lea    r15,[rip+0x36e7f]        # 0x140076cc0
   14003fe41:	cmp    QWORD PTR [r15+rdi*8],rbx
   14003fe45:	je     0x14003fe49
   14003fe47:	jmp    0x14003fe6b
   14003fe49:	call   0x14003fcf8
   14003fe4e:	mov    QWORD PTR [r15+rdi*8],rax
   14003fe52:	test   rax,rax
   14003fe55:	jne    0x14003fe5c
   14003fe57:	lea    ebx,[rax+0xc]
   14003fe5a:	jmp    0x14003fe75
   14003fe5c:	mov    eax,DWORD PTR [rip+0x3725e]        # 0x1400770c0
   14003fe62:	add    eax,0x40
   14003fe65:	mov    DWORD PTR [rip+0x37255],eax        # 0x1400770c0
   14003fe6b:	inc    rdi
   14003fe6e:	mov    QWORD PTR [rsp+0x20],rdi
   14003fe73:	jmp    0x14003fe36
   14003fe75:	mov    ecx,0x7
   14003fe7a:	call   0x140035a98
   14003fe7f:	jmp    0x14003fe19
   14003fe81:	mov    rbx,QWORD PTR [rsp+0x40]
   14003fe86:	mov    rsi,QWORD PTR [rsp+0x48]
   14003fe8b:	mov    rdi,QWORD PTR [rsp+0x50]
   14003fe90:	add    rsp,0x30
   14003fe94:	pop    r15
   14003fe96:	ret    
   14003fe97:	int3   
   14003fe98:	movsxd rcx,ecx
   14003fe9b:	lea    rdx,[rip+0x36e1e]        # 0x140076cc0
   14003fea2:	mov    rax,rcx
   14003fea5:	and    ecx,0x3f
   14003fea8:	sar    rax,0x6
   14003feac:	shl    rcx,0x6
   14003feb0:	add    rcx,QWORD PTR [rdx+rax*8]
   14003feb4:	rex.W jmp QWORD PTR [rip+0xb265]        # 0x14004b120
   14003febb:	int3   
   14003febc:	mov    rax,rsp
   14003febf:	mov    QWORD PTR [rax+0x8],rbx
   14003fec3:	mov    QWORD PTR [rax+0x10],rbp
   14003fec7:	mov    QWORD PTR [rax+0x18],rsi
   14003fecb:	mov    QWORD PTR [rax+0x20],rdi
   14003fecf:	push   r14
   14003fed1:	sub    rsp,0x20
   14003fed5:	movsxd rbx,ecx
   14003fed8:	mov    rdi,rdx
   14003fedb:	test   ecx,ecx
   14003fedd:	js     0x14003ff4a
   14003fedf:	cmp    ebx,DWORD PTR [rip+0x371db]        # 0x1400770c0
   14003fee5:	jae    0x14003ff4a
   14003fee7:	mov    rsi,rbx
   14003feea:	lea    r14,[rip+0x36dcf]        # 0x140076cc0
   14003fef1:	and    esi,0x3f
   14003fef4:	mov    rbp,rbx
   14003fef7:	sar    rbp,0x6
   14003fefb:	shl    rsi,0x6
   14003feff:	mov    rax,QWORD PTR [r14+rbp*8]
   14003ff03:	cmp    QWORD PTR [rax+rsi*1+0x28],0xffffffffffffffff
   14003ff09:	jne    0x14003ff4a
   14003ff0b:	call   0x140034364
   14003ff10:	cmp    eax,0x1
   14003ff13:	jne    0x14003ff3d
   14003ff15:	test   ebx,ebx
   14003ff17:	je     0x14003ff2f
   14003ff19:	sub    ebx,eax
   14003ff1b:	je     0x14003ff28
   14003ff1d:	cmp    ebx,eax
   14003ff1f:	jne    0x14003ff3d
   14003ff21:	mov    ecx,0xfffffff4
   14003ff26:	jmp    0x14003ff34
   14003ff28:	mov    ecx,0xfffffff5
   14003ff2d:	jmp    0x14003ff34
   14003ff2f:	mov    ecx,0xfffffff6
   14003ff34:	mov    rdx,rdi
   14003ff37:	call   QWORD PTR [rip+0xb45b]        # 0x14004b398
   14003ff3d:	mov    rax,QWORD PTR [r14+rbp*8]
   14003ff41:	mov    QWORD PTR [rax+rsi*1+0x28],rdi
   14003ff46:	xor    eax,eax
   14003ff48:	jmp    0x14003ff60
   14003ff4a:	call   0x140032c50
   14003ff4f:	mov    DWORD PTR [rax],0x9
   14003ff55:	call   0x140032c30
   14003ff5a:	and    DWORD PTR [rax],0x0
   14003ff5d:	or     eax,0xffffffff
   14003ff60:	mov    rbx,QWORD PTR [rsp+0x30]
   14003ff65:	mov    rbp,QWORD PTR [rsp+0x38]
   14003ff6a:	mov    rsi,QWORD PTR [rsp+0x40]
   14003ff6f:	mov    rdi,QWORD PTR [rsp+0x48]
   14003ff74:	add    rsp,0x20
   14003ff78:	pop    r14
   14003ff7a:	ret    
   14003ff7b:	int3   
   14003ff7c:	movsxd rcx,ecx
   14003ff7f:	lea    rdx,[rip+0x36d3a]        # 0x140076cc0
   14003ff86:	mov    rax,rcx
   14003ff89:	and    ecx,0x3f
   14003ff8c:	sar    rax,0x6
   14003ff90:	shl    rcx,0x6
   14003ff94:	add    rcx,QWORD PTR [rdx+rax*8]
   14003ff98:	rex.W jmp QWORD PTR [rip+0xb0c9]        # 0x14004b068
   14003ff9f:	int3   
   14003ffa0:	mov    QWORD PTR [rsp+0x8],rbx
   14003ffa5:	mov    QWORD PTR [rsp+0x10],rsi
   14003ffaa:	mov    QWORD PTR [rsp+0x18],rdi
   14003ffaf:	push   r12
   14003ffb1:	push   r14
   14003ffb3:	push   r15
   14003ffb5:	sub    rsp,0x30
   14003ffb9:	mov    ecx,0x7
   14003ffbe:	call   0x140035a44
   14003ffc3:	or     r14,0xffffffffffffffff
   14003ffc7:	xor    ebx,ebx
   14003ffc9:	lea    r12,[rip+0x36cf0]        # 0x140076cc0
   14003ffd0:	mov    DWORD PTR [rsp+0x20],ebx
   14003ffd4:	cmp    ebx,0x80
   14003ffda:	jge    0x1400400a8
   14003ffe0:	movsxd rdi,ebx
   14003ffe3:	mov    rsi,QWORD PTR [r12+rdi*8]
   14003ffe7:	test   rsi,rsi
   14003ffea:	jne    0x14004002e
   14003ffec:	call   0x14003fcf8
   14003fff1:	mov    QWORD PTR [r12+rdi*8],rax
   14003fff5:	test   rax,rax
   14003fff8:	je     0x1400400a8
   14003fffe:	add    DWORD PTR [rip+0x370bb],0x40        # 0x1400770c0
   140040005:	shl    ebx,0x6
   140040008:	mov    ecx,ebx
   14004000a:	call   0x14003fe98
   14004000f:	movsxd rcx,ebx
   140040012:	mov    rax,rcx
   140040015:	sar    rax,0x6
   140040019:	and    ecx,0x3f
   14004001c:	shl    rcx,0x6
   140040020:	mov    rax,QWORD PTR [r12+rax*8]
   140040024:	mov    BYTE PTR [rax+rcx*1+0x38],0x1
   140040029:	mov    r14d,ebx
   14004002c:	jmp    0x1400400a8
   14004002e:	lea    r15,[rsi+0x1000]
   140040035:	mov    rdi,rsi
   140040038:	mov    QWORD PTR [rsp+0x28],rsi
   14004003d:	cmp    rdi,r15
   140040040:	je     0x1400400a1
   140040042:	test   BYTE PTR [rdi+0x38],0x1
   140040046:	je     0x14004004a
   140040048:	jmp    0x140040062
   14004004a:	mov    rcx,rdi
   14004004d:	call   QWORD PTR [rip+0xb0cd]        # 0x14004b120
   140040053:	test   BYTE PTR [rdi+0x38],0x1
   140040057:	je     0x14004006d
   140040059:	mov    rcx,rdi
   14004005c:	call   QWORD PTR [rip+0xb006]        # 0x14004b068
   140040062:	add    rdi,0x40
   140040066:	mov    QWORD PTR [rsp+0x28],rdi
   14004006b:	jmp    0x14004003d
   14004006d:	sub    rdi,rsi
   140040070:	sar    rdi,0x6
   140040074:	shl    ebx,0x6
   140040077:	add    edi,ebx
   140040079:	movsxd rdx,edi
   14004007c:	mov    rcx,rdx
   14004007f:	sar    rcx,0x6
   140040083:	and    edx,0x3f
   140040086:	shl    rdx,0x6
   14004008a:	mov    rax,QWORD PTR [r12+rcx*8]
   14004008e:	mov    BYTE PTR [rdx+rax*1+0x38],0x1
   140040093:	mov    rax,QWORD PTR [r12+rcx*8]
   140040097:	mov    QWORD PTR [rdx+rax*1+0x28],r14
   14004009c:	mov    r14d,edi
   14004009f:	jmp    0x1400400a8
   1400400a1:	inc    ebx
   1400400a3:	jmp    0x14003ffd0
   1400400a8:	mov    ecx,0x7
   1400400ad:	call   0x140035a98
   1400400b2:	mov    eax,r14d
   1400400b5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400400ba:	mov    rsi,QWORD PTR [rsp+0x58]
   1400400bf:	mov    rdi,QWORD PTR [rsp+0x60]
   1400400c4:	add    rsp,0x30
   1400400c8:	pop    r15
   1400400ca:	pop    r14
   1400400cc:	pop    r12
   1400400ce:	ret    
   1400400cf:	int3   
   1400400d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400400d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400400da:	mov    QWORD PTR [rsp+0x18],rdi
   1400400df:	push   r14
   1400400e1:	sub    rsp,0x20
   1400400e5:	movsxd rbx,ecx
   1400400e8:	test   ecx,ecx
   1400400ea:	js     0x14004015e
   1400400ec:	cmp    ebx,DWORD PTR [rip+0x36fce]        # 0x1400770c0
   1400400f2:	jae    0x14004015e
   1400400f4:	mov    rdi,rbx
   1400400f7:	lea    r14,[rip+0x36bc2]        # 0x140076cc0
   1400400fe:	and    edi,0x3f
   140040101:	mov    rsi,rbx
   140040104:	sar    rsi,0x6
   140040108:	shl    rdi,0x6
   14004010c:	mov    rax,QWORD PTR [r14+rsi*8]
   140040110:	test   BYTE PTR [rax+rdi*1+0x38],0x1
   140040115:	je     0x14004015e
   140040117:	cmp    QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14004011d:	je     0x14004015e
   14004011f:	call   0x140034364
   140040124:	cmp    eax,0x1
   140040127:	jne    0x140040150
   140040129:	test   ebx,ebx
   14004012b:	je     0x140040143
   14004012d:	sub    ebx,eax
   14004012f:	je     0x14004013c
   140040131:	cmp    ebx,eax
   140040133:	jne    0x140040150
   140040135:	mov    ecx,0xfffffff4
   14004013a:	jmp    0x140040148
   14004013c:	mov    ecx,0xfffffff5
   140040141:	jmp    0x140040148
   140040143:	mov    ecx,0xfffffff6
   140040148:	xor    edx,edx
   14004014a:	call   QWORD PTR [rip+0xb248]        # 0x14004b398
   140040150:	mov    rax,QWORD PTR [r14+rsi*8]
   140040154:	or     QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14004015a:	xor    eax,eax
   14004015c:	jmp    0x140040174
   14004015e:	call   0x140032c50
   140040163:	mov    DWORD PTR [rax],0x9
   140040169:	call   0x140032c30
   14004016e:	and    DWORD PTR [rax],0x0
   140040171:	or     eax,0xffffffff
   140040174:	mov    rbx,QWORD PTR [rsp+0x30]
   140040179:	mov    rsi,QWORD PTR [rsp+0x38]
   14004017e:	mov    rdi,QWORD PTR [rsp+0x40]
   140040183:	add    rsp,0x20
   140040187:	pop    r14
   140040189:	ret    
   14004018a:	int3   
   14004018b:	int3   
   14004018c:	sub    rsp,0x28
   140040190:	cmp    ecx,0xfffffffe
   140040193:	jne    0x1400401aa
   140040195:	call   0x140032c30
   14004019a:	and    DWORD PTR [rax],0x0
   14004019d:	call   0x140032c50
   1400401a2:	mov    DWORD PTR [rax],0x9
   1400401a8:	jmp    0x1400401f8
   1400401aa:	test   ecx,ecx
   1400401ac:	js     0x1400401e0
   1400401ae:	cmp    ecx,DWORD PTR [rip+0x36f0c]        # 0x1400770c0
   1400401b4:	jae    0x1400401e0
   1400401b6:	movsxd rdx,ecx
   1400401b9:	lea    rcx,[rip+0x36b00]        # 0x140076cc0
   1400401c0:	mov    rax,rdx
   1400401c3:	and    edx,0x3f
   1400401c6:	sar    rax,0x6
   1400401ca:	shl    rdx,0x6
   1400401ce:	mov    rax,QWORD PTR [rcx+rax*8]
   1400401d2:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   1400401d7:	je     0x1400401e0
   1400401d9:	mov    rax,QWORD PTR [rax+rdx*1+0x28]
   1400401de:	jmp    0x1400401fc
   1400401e0:	call   0x140032c30
   1400401e5:	and    DWORD PTR [rax],0x0
   1400401e8:	call   0x140032c50
   1400401ed:	mov    DWORD PTR [rax],0x9
   1400401f3:	call   0x1400307d0
   1400401f8:	or     rax,0xffffffffffffffff
   1400401fc:	add    rsp,0x28
   140040200:	ret    
   140040201:	int3   
   140040202:	int3   
   140040203:	int3   
   140040204:	test   rcx,rcx
   140040207:	je     0x14004030d
   14004020d:	push   rbx
   14004020e:	sub    rsp,0x20
   140040212:	mov    rbx,rcx
   140040215:	mov    rcx,QWORD PTR [rcx+0x18]
   140040219:	cmp    rcx,QWORD PTR [rip+0x30f08]        # 0x140071128
   140040220:	je     0x140040227
   140040222:	call   0x140038c70
   140040227:	mov    rcx,QWORD PTR [rbx+0x20]
   14004022b:	cmp    rcx,QWORD PTR [rip+0x30efe]        # 0x140071130
   140040232:	je     0x140040239
   140040234:	call   0x140038c70
   140040239:	mov    rcx,QWORD PTR [rbx+0x28]
   14004023d:	cmp    rcx,QWORD PTR [rip+0x30ef4]        # 0x140071138
   140040244:	je     0x14004024b
   140040246:	call   0x140038c70
   14004024b:	mov    rcx,QWORD PTR [rbx+0x30]
   14004024f:	cmp    rcx,QWORD PTR [rip+0x30eea]        # 0x140071140
   140040256:	je     0x14004025d
   140040258:	call   0x140038c70
   14004025d:	mov    rcx,QWORD PTR [rbx+0x38]
   140040261:	cmp    rcx,QWORD PTR [rip+0x30ee0]        # 0x140071148
   140040268:	je     0x14004026f
   14004026a:	call   0x140038c70
   14004026f:	mov    rcx,QWORD PTR [rbx+0x40]
   140040273:	cmp    rcx,QWORD PTR [rip+0x30ed6]        # 0x140071150
   14004027a:	je     0x140040281
   14004027c:	call   0x140038c70
   140040281:	mov    rcx,QWORD PTR [rbx+0x48]
   140040285:	cmp    rcx,QWORD PTR [rip+0x30ecc]        # 0x140071158
   14004028c:	je     0x140040293
   14004028e:	call   0x140038c70
   140040293:	mov    rcx,QWORD PTR [rbx+0x68]
   140040297:	cmp    rcx,QWORD PTR [rip+0x30eda]        # 0x140071178
   14004029e:	je     0x1400402a5
   1400402a0:	call   0x140038c70
   1400402a5:	mov    rcx,QWORD PTR [rbx+0x70]
   1400402a9:	cmp    rcx,QWORD PTR [rip+0x30ed0]        # 0x140071180
   1400402b0:	je     0x1400402b7
   1400402b2:	call   0x140038c70
   1400402b7:	mov    rcx,QWORD PTR [rbx+0x78]
   1400402bb:	cmp    rcx,QWORD PTR [rip+0x30ec6]        # 0x140071188
   1400402c2:	je     0x1400402c9
   1400402c4:	call   0x140038c70
   1400402c9:	mov    rcx,QWORD PTR [rbx+0x80]
   1400402d0:	cmp    rcx,QWORD PTR [rip+0x30eb9]        # 0x140071190
   1400402d7:	je     0x1400402de
   1400402d9:	call   0x140038c70
   1400402de:	mov    rcx,QWORD PTR [rbx+0x88]
   1400402e5:	cmp    rcx,QWORD PTR [rip+0x30eac]        # 0x140071198
   1400402ec:	je     0x1400402f3
   1400402ee:	call   0x140038c70
   1400402f3:	mov    rcx,QWORD PTR [rbx+0x90]
   1400402fa:	cmp    rcx,QWORD PTR [rip+0x30e9f]        # 0x1400711a0
   140040301:	je     0x140040308
   140040303:	call   0x140038c70
   140040308:	add    rsp,0x20
   14004030c:	pop    rbx
   14004030d:	ret    
   14004030e:	int3   
   14004030f:	int3   
   140040310:	mov    QWORD PTR [rsp+0x8],rbx
   140040315:	mov    QWORD PTR [rsp+0x10],rsi
   14004031a:	mov    QWORD PTR [rsp+0x18],rdi
   14004031f:	push   rbp
   140040320:	push   r12
   140040322:	push   r13
   140040324:	push   r14
   140040326:	push   r15
   140040328:	mov    rbp,rsp
   14004032b:	sub    rsp,0x40
   14004032f:	xor    ebx,ebx
   140040331:	mov    QWORD PTR [rbp-0x10],rcx
   140040335:	mov    rsi,rcx
   140040338:	mov    r15d,ebx
   14004033b:	mov    QWORD PTR [rbp-0x8],rbx
   14004033f:	cmp    QWORD PTR [rcx+0x140],rbx
   140040346:	jne    0x140040360
   140040348:	cmp    QWORD PTR [rcx+0x148],rbx
   14004034f:	jne    0x140040360
   140040351:	mov    r12d,ebx
   140040354:	lea    r14,[rip+0x30db5]        # 0x140071110
   14004035b:	jmp    0x1400407d4
   140040360:	mov    r13d,0x1
   140040366:	mov    edx,0x98
   14004036b:	mov    ecx,r13d
   14004036e:	call   0x140035d88
   140040373:	xor    ecx,ecx
   140040375:	mov    r14,rax
   140040378:	call   0x140038c70
   14004037d:	test   r14,r14
   140040380:	jne    0x14004038a
   140040382:	mov    eax,r13d
   140040385:	jmp    0x14004082a
   14004038a:	mov    edi,0x4
   14004038f:	mov    rcx,r13
   140040392:	mov    edx,edi
   140040394:	call   0x140035d88
   140040399:	xor    ecx,ecx
   14004039b:	mov    r12,rax
   14004039e:	call   0x140038c70
   1400403a3:	test   r12,r12
   1400403a6:	jne    0x1400403b2
   1400403a8:	mov    rcx,r14
   1400403ab:	call   0x140038c70
   1400403b0:	jmp    0x140040382
   1400403b2:	cmp    QWORD PTR [rsi+0x140],rbx
   1400403b9:	je     0x140040711
   1400403bf:	mov    rdx,rdi
   1400403c2:	mov    rcx,r13
   1400403c5:	call   0x140035d88
   1400403ca:	xor    ecx,ecx
   1400403cc:	mov    r15,rax
   1400403cf:	call   0x140038c70
   1400403d4:	test   r15,r15
   1400403d7:	jne    0x1400403e6
   1400403d9:	mov    rcx,r14
   1400403dc:	call   0x140038c70
   1400403e1:	mov    rcx,r12
   1400403e4:	jmp    0x1400403ab
   1400403e6:	mov    rdi,QWORD PTR [rsi+0x140]
   1400403ed:	lea    rax,[r14+0x18]
   1400403f1:	mov    r8,rdi
   1400403f4:	mov    QWORD PTR [rsp+0x20],rax
   1400403f9:	mov    r9d,0x15
   1400403ff:	lea    rcx,[rbp-0x10]
   140040403:	mov    edx,r13d
   140040406:	call   0x14004350c
   14004040b:	lea    rcx,[r14+0x20]
   14004040f:	mov    r9d,0x14
   140040415:	mov    QWORD PTR [rsp+0x20],rcx
   14004041a:	mov    r8,rdi
   14004041d:	lea    rcx,[rbp-0x10]
   140040421:	mov    edx,r13d
   140040424:	mov    ebx,eax
   140040426:	call   0x14004350c
   14004042b:	lea    rcx,[r14+0x28]
   14004042f:	mov    r9d,0x16
   140040435:	mov    QWORD PTR [rsp+0x20],rcx
   14004043a:	mov    r8,rdi
   14004043d:	lea    rcx,[rbp-0x10]
   140040441:	mov    edx,r13d
   140040444:	or     ebx,eax
   140040446:	call   0x14004350c
   14004044b:	or     ebx,eax
   14004044d:	lea    rcx,[rbp-0x10]
   140040451:	lea    rax,[r14+0x30]
   140040455:	mov    r9d,0x17
   14004045b:	mov    r8,rdi
   14004045e:	mov    QWORD PTR [rsp+0x20],rax
   140040463:	mov    edx,r13d
   140040466:	call   0x14004350c
   14004046b:	mov    r9d,0x18
   140040471:	lea    r13,[r14+0x38]
   140040475:	mov    r8,rdi
   140040478:	mov    QWORD PTR [rsp+0x20],r13
   14004047d:	lea    rcx,[rbp-0x10]
   140040481:	or     ebx,eax
   140040483:	lea    edx,[r9-0x17]
   140040487:	call   0x14004350c
   14004048c:	mov    r9d,0x50
   140040492:	lea    rcx,[rbp-0x10]
   140040496:	or     ebx,eax
   140040498:	mov    r8,rdi
   14004049b:	lea    rax,[r14+0x40]
   14004049f:	mov    QWORD PTR [rsp+0x20],rax
   1400404a4:	lea    edx,[r9-0x4f]
   1400404a8:	call   0x14004350c
   1400404ad:	mov    r9d,0x51
   1400404b3:	lea    rcx,[rbp-0x10]
   1400404b7:	or     ebx,eax
   1400404b9:	mov    r8,rdi
   1400404bc:	lea    rax,[r14+0x48]
   1400404c0:	mov    QWORD PTR [rsp+0x20],rax
   1400404c5:	lea    edx,[r9-0x50]
   1400404c9:	call   0x14004350c
   1400404ce:	or     ebx,eax
   1400404d0:	lea    rcx,[rbp-0x10]
   1400404d4:	lea    rax,[r14+0x50]
   1400404d8:	mov    r9d,0x1a
   1400404de:	mov    r8,rdi
   1400404e1:	mov    QWORD PTR [rsp+0x20],rax
   1400404e6:	xor    edx,edx
   1400404e8:	call   0x14004350c
   1400404ed:	or     ebx,eax
   1400404ef:	lea    rcx,[rbp-0x10]
   1400404f3:	lea    rax,[r14+0x51]
   1400404f7:	mov    r9d,0x19
   1400404fd:	mov    r8,rdi
   140040500:	mov    QWORD PTR [rsp+0x20],rax
   140040505:	xor    edx,edx
   140040507:	call   0x14004350c
   14004050c:	or     ebx,eax
   14004050e:	lea    rcx,[rbp-0x10]
   140040512:	lea    rax,[r14+0x52]
   140040516:	mov    r9d,0x54
   14004051c:	mov    r8,rdi
   14004051f:	mov    QWORD PTR [rsp+0x20],rax
   140040524:	xor    edx,edx
   140040526:	call   0x14004350c
   14004052b:	or     ebx,eax
   14004052d:	lea    rax,[r14+0x53]
   140040531:	mov    r9d,0x55
   140040537:	mov    r8,rdi
   14004053a:	mov    QWORD PTR [rsp+0x20],rax
   14004053f:	xor    edx,edx
   140040541:	lea    rcx,[rbp-0x10]
   140040545:	call   0x14004350c
   14004054a:	or     ebx,eax
   14004054c:	lea    rcx,[rbp-0x10]
   140040550:	lea    rax,[r14+0x54]
   140040554:	mov    r9d,0x56
   14004055a:	mov    r8,rdi
   14004055d:	mov    QWORD PTR [rsp+0x20],rax
   140040562:	xor    edx,edx
   140040564:	call   0x14004350c
   140040569:	or     ebx,eax
   14004056b:	lea    rcx,[rbp-0x10]
   14004056f:	lea    rax,[r14+0x55]
   140040573:	mov    r9d,0x57
   140040579:	mov    r8,rdi
   14004057c:	mov    QWORD PTR [rsp+0x20],rax
   140040581:	xor    edx,edx
   140040583:	call   0x14004350c
   140040588:	or     ebx,eax
   14004058a:	lea    rcx,[rbp-0x10]
   14004058e:	lea    rax,[r14+0x56]
   140040592:	mov    r9d,0x52
   140040598:	mov    r8,rdi
   14004059b:	mov    QWORD PTR [rsp+0x20],rax
   1400405a0:	xor    edx,edx
   1400405a2:	call   0x14004350c
   1400405a7:	or     ebx,eax
   1400405a9:	lea    rcx,[rbp-0x10]
   1400405ad:	lea    rax,[r14+0x57]
   1400405b1:	mov    r9d,0x53
   1400405b7:	mov    r8,rdi
   1400405ba:	mov    QWORD PTR [rsp+0x20],rax
   1400405bf:	xor    edx,edx
   1400405c1:	call   0x14004350c
   1400405c6:	mov    r9d,0x15
   1400405cc:	lea    rcx,[rbp-0x10]
   1400405d0:	or     ebx,eax
   1400405d2:	mov    r8,rdi
   1400405d5:	lea    rax,[r14+0x68]
   1400405d9:	mov    QWORD PTR [rsp+0x20],rax
   1400405de:	lea    edx,[r9-0x13]
   1400405e2:	call   0x14004350c
   1400405e7:	mov    r9d,0x14
   1400405ed:	lea    rcx,[rbp-0x10]
   1400405f1:	or     ebx,eax
   1400405f3:	mov    r8,rdi
   1400405f6:	lea    rax,[r14+0x70]
   1400405fa:	mov    QWORD PTR [rsp+0x20],rax
   1400405ff:	lea    edx,[r9-0x12]
   140040603:	call   0x14004350c
   140040608:	mov    r9d,0x16
   14004060e:	lea    rcx,[rbp-0x10]
   140040612:	or     ebx,eax
   140040614:	mov    r8,rdi
   140040617:	lea    rax,[r14+0x78]
   14004061b:	mov    QWORD PTR [rsp+0x20],rax
   140040620:	lea    edx,[r9-0x14]
   140040624:	call   0x14004350c
   140040629:	mov    r9d,0x17
   14004062f:	lea    rcx,[rbp-0x10]
   140040633:	or     ebx,eax
   140040635:	mov    r8,rdi
   140040638:	lea    rax,[r14+0x80]
   14004063f:	mov    QWORD PTR [rsp+0x20],rax
   140040644:	lea    edx,[r9-0x15]
   140040648:	call   0x14004350c
   14004064d:	mov    r9d,0x50
   140040653:	lea    rcx,[rbp-0x10]
   140040657:	or     ebx,eax
   140040659:	mov    r8,rdi
   14004065c:	lea    rax,[r14+0x88]
   140040663:	mov    QWORD PTR [rsp+0x20],rax
   140040668:	lea    edx,[r9-0x4e]
   14004066c:	call   0x14004350c
   140040671:	or     ebx,eax
   140040673:	lea    rax,[r14+0x90]
   14004067a:	mov    r9d,0x51
   140040680:	mov    QWORD PTR [rsp+0x20],rax
   140040685:	mov    r8,rdi
   140040688:	lea    rcx,[rbp-0x10]
   14004068c:	lea    edx,[r9-0x4f]
   140040690:	call   0x14004350c
   140040695:	or     eax,ebx
   140040697:	je     0x1400406c3
   140040699:	mov    rcx,r14
   14004069c:	call   0x140040204
   1400406a1:	mov    rcx,r14
   1400406a4:	call   0x140038c70
   1400406a9:	mov    rcx,r12
   1400406ac:	call   0x140038c70
   1400406b1:	mov    rcx,r15
   1400406b4:	call   0x140038c70
   1400406b9:	mov    eax,0x1
   1400406be:	jmp    0x14004082a
   1400406c3:	mov    rdx,QWORD PTR [r13+0x0]
   1400406c7:	xor    ebx,ebx
   1400406c9:	cmp    BYTE PTR [rdx],bl
   1400406cb:	je     0x140040779
   1400406d1:	mov    cl,BYTE PTR [rdx]
   1400406d3:	lea    eax,[rcx-0x30]
   1400406d6:	cmp    al,0x9
   1400406d8:	ja     0x1400406f1
   1400406da:	sub    cl,0x30
   1400406dd:	mov    BYTE PTR [rdx],cl
   1400406df:	mov    r13d,0x1
   1400406e5:	add    rdx,r13
   1400406e8:	cmp    BYTE PTR [rdx],bl
   1400406ea:	jne    0x1400406d1
   1400406ec:	jmp    0x14004077f
   1400406f1:	cmp    cl,0x3b
   1400406f4:	jne    0x1400406df
   1400406f6:	mov    r8,rdx
   1400406f9:	lea    rcx,[r8+0x1]
   1400406fd:	mov    al,BYTE PTR [rcx]
   1400406ff:	mov    BYTE PTR [r8],al
   140040702:	mov    r8,rcx
   140040705:	test   al,al
   140040707:	jne    0x1400406f9
   140040709:	mov    r13d,0x1
   14004070f:	jmp    0x1400406e8
   140040711:	lea    rax,[rip+0x309f8]        # 0x140071110
   140040718:	mov    edx,0x80
   14004071d:	movups xmm0,XMMWORD PTR [rax]
   140040720:	movups XMMWORD PTR [r14],xmm0
   140040724:	movups xmm1,XMMWORD PTR [rax+0x10]
   140040728:	movups XMMWORD PTR [r14+0x10],xmm1
   14004072d:	movups xmm0,XMMWORD PTR [rax+0x20]
   140040731:	movups XMMWORD PTR [r14+0x20],xmm0
   140040736:	movups xmm1,XMMWORD PTR [rax+0x30]
   14004073a:	movups XMMWORD PTR [r14+0x30],xmm1
   14004073f:	movups xmm0,XMMWORD PTR [rax+0x40]
   140040743:	movups XMMWORD PTR [r14+0x40],xmm0
   140040748:	movups xmm1,XMMWORD PTR [rax+0x50]
   14004074c:	movups XMMWORD PTR [r14+0x50],xmm1
   140040751:	movups xmm0,XMMWORD PTR [rax+0x60]
   140040755:	movups XMMWORD PTR [r14+0x60],xmm0
   14004075a:	movups xmm0,XMMWORD PTR [rax+0x70]
   14004075e:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   140040764:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   140040768:	movups XMMWORD PTR [r14+rdx*1],xmm1
   14004076d:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   140040772:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   140040777:	jmp    0x14004077f
   140040779:	mov    r13d,0x1
   14004077f:	mov    rax,QWORD PTR [rsi+0xf8]
   140040786:	mov    rcx,QWORD PTR [rax]
   140040789:	mov    QWORD PTR [r14],rcx
   14004078c:	mov    rax,QWORD PTR [rsi+0xf8]
   140040793:	mov    rcx,QWORD PTR [rax+0x8]
   140040797:	mov    QWORD PTR [r14+0x8],rcx
   14004079b:	mov    rax,QWORD PTR [rsi+0xf8]
   1400407a2:	mov    rcx,QWORD PTR [rax+0x10]
   1400407a6:	mov    QWORD PTR [r14+0x10],rcx
   1400407aa:	mov    rax,QWORD PTR [rsi+0xf8]
   1400407b1:	mov    rcx,QWORD PTR [rax+0x58]
   1400407b5:	mov    QWORD PTR [r14+0x58],rcx
   1400407b9:	mov    rax,QWORD PTR [rsi+0xf8]
   1400407c0:	mov    rcx,QWORD PTR [rax+0x60]
   1400407c4:	mov    QWORD PTR [r14+0x60],rcx
   1400407c8:	mov    DWORD PTR [r12],r13d
   1400407cc:	test   r15,r15
   1400407cf:	je     0x1400407d4
   1400407d1:	mov    DWORD PTR [r15],r13d
   1400407d4:	mov    rax,QWORD PTR [rsi+0xf0]
   1400407db:	test   rax,rax
   1400407de:	je     0x1400407e3
   1400407e0:	lock dec DWORD PTR [rax]
   1400407e3:	mov    rcx,QWORD PTR [rsi+0xe0]
   1400407ea:	test   rcx,rcx
   1400407ed:	je     0x140040813
   1400407ef:	or     eax,0xffffffff
   1400407f2:	lock xadd DWORD PTR [rcx],eax
   1400407f6:	cmp    eax,0x1
   1400407f9:	jne    0x140040813
   1400407fb:	mov    rcx,QWORD PTR [rsi+0xf8]
   140040802:	call   0x140038c70
   140040807:	mov    rcx,QWORD PTR [rsi+0xe0]
   14004080e:	call   0x140038c70
   140040813:	mov    QWORD PTR [rsi+0xf0],r15
   14004081a:	xor    eax,eax
   14004081c:	mov    QWORD PTR [rsi+0xe0],r12
   140040823:	mov    QWORD PTR [rsi+0xf8],r14
   14004082a:	lea    r11,[rsp+0x40]
   14004082f:	mov    rbx,QWORD PTR [r11+0x30]
   140040833:	mov    rsi,QWORD PTR [r11+0x38]
   140040837:	mov    rdi,QWORD PTR [r11+0x40]
   14004083b:	mov    rsp,r11
   14004083e:	pop    r15
   140040840:	pop    r14
   140040842:	pop    r13
   140040844:	pop    r12
   140040846:	pop    rbp
   140040847:	ret    
   140040848:	test   rcx,rcx
   14004084b:	je     0x1400408b3
   14004084d:	push   rbx
   14004084e:	sub    rsp,0x20
   140040852:	mov    rbx,rcx
   140040855:	mov    rcx,QWORD PTR [rcx]
   140040858:	cmp    rcx,QWORD PTR [rip+0x308b1]        # 0x140071110
   14004085f:	je     0x140040866
   140040861:	call   0x140038c70
   140040866:	mov    rcx,QWORD PTR [rbx+0x8]
   14004086a:	cmp    rcx,QWORD PTR [rip+0x308a7]        # 0x140071118
   140040871:	je     0x140040878
   140040873:	call   0x140038c70
   140040878:	mov    rcx,QWORD PTR [rbx+0x10]
   14004087c:	cmp    rcx,QWORD PTR [rip+0x3089d]        # 0x140071120
   140040883:	je     0x14004088a
   140040885:	call   0x140038c70
   14004088a:	mov    rcx,QWORD PTR [rbx+0x58]
   14004088e:	cmp    rcx,QWORD PTR [rip+0x308d3]        # 0x140071168
   140040895:	je     0x14004089c
   140040897:	call   0x140038c70
   14004089c:	mov    rcx,QWORD PTR [rbx+0x60]
   1400408a0:	cmp    rcx,QWORD PTR [rip+0x308c9]        # 0x140071170
   1400408a7:	je     0x1400408ae
   1400408a9:	call   0x140038c70
   1400408ae:	add    rsp,0x20
   1400408b2:	pop    rbx
   1400408b3:	ret    
   1400408b4:	mov    rax,rsp
   1400408b7:	mov    QWORD PTR [rax+0x8],rbx
   1400408bb:	mov    QWORD PTR [rax+0x10],rbp
   1400408bf:	mov    QWORD PTR [rax+0x18],rsi
   1400408c3:	push   rdi
   1400408c4:	push   r12
   1400408c6:	push   r13
   1400408c8:	push   r14
   1400408ca:	push   r15
   1400408cc:	sub    rsp,0x40
   1400408d0:	xor    ebx,ebx
   1400408d2:	mov    QWORD PTR [rax-0x38],rcx
   1400408d6:	mov    rsi,rcx
   1400408d9:	mov    QWORD PTR [rax-0x30],rbx
   1400408dd:	cmp    QWORD PTR [rcx+0x148],rbx
   1400408e4:	jne    0x140040901
   1400408e6:	cmp    QWORD PTR [rcx+0x140],rbx
   1400408ed:	jne    0x140040901
   1400408ef:	mov    r15d,ebx
   1400408f2:	lea    r14,[rip+0x30817]        # 0x140071110
   1400408f9:	mov    r12d,ebx
   1400408fc:	jmp    0x140040b1e
   140040901:	mov    ebp,0x1
   140040906:	mov    edx,0x98
   14004090b:	mov    ecx,ebp
   14004090d:	call   0x140035d88
   140040912:	mov    r14,rax
   140040915:	test   rax,rax
   140040918:	jne    0x140040921
   14004091a:	mov    eax,ebp
   14004091c:	jmp    0x140040b74
   140040921:	mov    rax,QWORD PTR [rsi+0xf8]
   140040928:	mov    edx,0x80
   14004092d:	movups xmm0,XMMWORD PTR [rax]
   140040930:	lea    edi,[rdx-0x7c]
   140040933:	mov    ecx,edi
   140040935:	movups XMMWORD PTR [r14],xmm0
   140040939:	movups xmm1,XMMWORD PTR [rax+0x10]
   14004093d:	movups XMMWORD PTR [r14+0x10],xmm1
   140040942:	movups xmm0,XMMWORD PTR [rax+0x20]
   140040946:	movups XMMWORD PTR [r14+0x20],xmm0
   14004094b:	movups xmm1,XMMWORD PTR [rax+0x30]
   14004094f:	movups XMMWORD PTR [r14+0x30],xmm1
   140040954:	movups xmm0,XMMWORD PTR [rax+0x40]
   140040958:	movups XMMWORD PTR [r14+0x40],xmm0
   14004095d:	movups xmm1,XMMWORD PTR [rax+0x50]
   140040961:	movups XMMWORD PTR [r14+0x50],xmm1
   140040966:	movups xmm0,XMMWORD PTR [rax+0x60]
   14004096a:	movups XMMWORD PTR [r14+0x60],xmm0
   14004096f:	movups xmm0,XMMWORD PTR [rax+0x70]
   140040973:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   140040979:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   14004097d:	movups XMMWORD PTR [r14+rdx*1],xmm1
   140040982:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   140040987:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   14004098c:	call   0x140036600
   140040991:	xor    ecx,ecx
   140040993:	mov    r12,rax
   140040996:	call   0x140038c70
   14004099b:	test   r12,r12
   14004099e:	jne    0x1400409ad
   1400409a0:	mov    rcx,r14
   1400409a3:	call   0x140038c70
   1400409a8:	jmp    0x14004091a
   1400409ad:	mov    DWORD PTR [r12],ebx
   1400409b1:	cmp    QWORD PTR [rsi+0x148],rbx
   1400409b8:	je     0x140040ad9
   1400409be:	mov    rcx,rdi
   1400409c1:	call   0x140036600
   1400409c6:	xor    ecx,ecx
   1400409c8:	mov    r15,rax
   1400409cb:	call   0x140038c70
   1400409d0:	test   r15,r15
   1400409d3:	je     0x140040a90
   1400409d9:	mov    DWORD PTR [r15],ebx
   1400409dc:	lea    rcx,[rsp+0x30]
   1400409e1:	mov    rdi,QWORD PTR [rsi+0x148]
   1400409e8:	mov    r9d,0xe
   1400409ee:	mov    r8,rdi
   1400409f1:	mov    QWORD PTR [rsp+0x20],r14
   1400409f6:	mov    edx,ebp
   1400409f8:	call   0x14004350c
   1400409fd:	lea    rcx,[r14+0x8]
   140040a01:	mov    r9d,0xf
   140040a07:	mov    QWORD PTR [rsp+0x20],rcx
   140040a0c:	mov    r8,rdi
   140040a0f:	lea    rcx,[rsp+0x30]
   140040a14:	mov    edx,ebp
   140040a16:	mov    ebx,eax
   140040a18:	call   0x14004350c
   140040a1d:	lea    r13,[r14+0x10]
   140040a21:	mov    r9d,0x10
   140040a27:	mov    r8,rdi
   140040a2a:	mov    QWORD PTR [rsp+0x20],r13
   140040a2f:	mov    edx,ebp
   140040a31:	lea    rcx,[rsp+0x30]
   140040a36:	or     ebx,eax
   140040a38:	call   0x14004350c
   140040a3d:	mov    r9d,0xe
   140040a43:	lea    rcx,[rsp+0x30]
   140040a48:	or     ebx,eax
   140040a4a:	mov    r8,rdi
   140040a4d:	lea    rax,[r14+0x58]
   140040a51:	mov    QWORD PTR [rsp+0x20],rax
   140040a56:	lea    edx,[r9-0xc]
   140040a5a:	call   0x14004350c
   140040a5f:	mov    r9d,0xf
   140040a65:	lea    rcx,[rsp+0x30]
   140040a6a:	or     ebx,eax
   140040a6c:	mov    r8,rdi
   140040a6f:	lea    rax,[r14+0x60]
   140040a73:	mov    QWORD PTR [rsp+0x20],rax
   140040a78:	lea    edx,[r9-0xd]
   140040a7c:	call   0x14004350c
   140040a81:	or     eax,ebx
   140040a83:	je     0x140040aa0
   140040a85:	mov    rcx,r14
   140040a88:	call   0x140040848
   140040a8d:	or     ebp,0xffffffff
   140040a90:	mov    rcx,r14
   140040a93:	call   0x140038c70
   140040a98:	mov    rcx,r12
   140040a9b:	jmp    0x1400409a3
   140040aa0:	mov    rdx,QWORD PTR [r13+0x0]
   140040aa4:	xor    ebx,ebx
   140040aa6:	jmp    0x140040ab9
   140040aa8:	mov    cl,BYTE PTR [rdx]
   140040aaa:	lea    eax,[rcx-0x30]
   140040aad:	cmp    al,0x9
   140040aaf:	ja     0x140040abf
   140040ab1:	sub    cl,0x30
   140040ab4:	mov    BYTE PTR [rdx],cl
   140040ab6:	add    rdx,rbp
   140040ab9:	cmp    BYTE PTR [rdx],bl
   140040abb:	jne    0x140040aa8
   140040abd:	jmp    0x140040b12
   140040abf:	cmp    cl,0x3b
   140040ac2:	jne    0x140040ab6
   140040ac4:	mov    r8,rdx
   140040ac7:	lea    rcx,[r8+0x1]
   140040acb:	mov    al,BYTE PTR [rcx]
   140040acd:	mov    BYTE PTR [r8],al
   140040ad0:	mov    r8,rcx
   140040ad3:	test   al,al
   140040ad5:	jne    0x140040ac7
   140040ad7:	jmp    0x140040ab9
   140040ad9:	mov    rax,QWORD PTR [rip+0x30630]        # 0x140071110
   140040ae0:	mov    r15,rbx
   140040ae3:	mov    QWORD PTR [r14],rax
   140040ae6:	mov    rax,QWORD PTR [rip+0x3062b]        # 0x140071118
   140040aed:	mov    QWORD PTR [r14+0x8],rax
   140040af1:	mov    rax,QWORD PTR [rip+0x30628]        # 0x140071120
   140040af8:	mov    QWORD PTR [r14+0x10],rax
   140040afc:	mov    rax,QWORD PTR [rip+0x30665]        # 0x140071168
   140040b03:	mov    QWORD PTR [r14+0x58],rax
   140040b07:	mov    rax,QWORD PTR [rip+0x30662]        # 0x140071170
   140040b0e:	mov    QWORD PTR [r14+0x60],rax
   140040b12:	mov    DWORD PTR [r12],ebp
   140040b16:	test   r15,r15
   140040b19:	je     0x140040b1e
   140040b1b:	mov    DWORD PTR [r15],ebp
   140040b1e:	mov    rax,QWORD PTR [rsi+0xe8]
   140040b25:	test   rax,rax
   140040b28:	je     0x140040b2d
   140040b2a:	lock dec DWORD PTR [rax]
   140040b2d:	mov    rcx,QWORD PTR [rsi+0xe0]
   140040b34:	test   rcx,rcx
   140040b37:	je     0x140040b5d
   140040b39:	or     eax,0xffffffff
   140040b3c:	lock xadd DWORD PTR [rcx],eax
   140040b40:	cmp    eax,0x1
   140040b43:	jne    0x140040b5d
   140040b45:	mov    rcx,QWORD PTR [rsi+0xe0]
   140040b4c:	call   0x140038c70
   140040b51:	mov    rcx,QWORD PTR [rsi+0xf8]
   140040b58:	call   0x140038c70
   140040b5d:	mov    QWORD PTR [rsi+0xe8],r15
   140040b64:	xor    eax,eax
   140040b66:	mov    QWORD PTR [rsi+0xe0],r12
   140040b6d:	mov    QWORD PTR [rsi+0xf8],r14
   140040b74:	lea    r11,[rsp+0x40]
   140040b79:	mov    rbx,QWORD PTR [r11+0x30]
   140040b7d:	mov    rbp,QWORD PTR [r11+0x38]
   140040b81:	mov    rsi,QWORD PTR [r11+0x40]
   140040b85:	mov    rsp,r11
   140040b88:	pop    r15
   140040b8a:	pop    r14
   140040b8c:	pop    r13
   140040b8e:	pop    r12
   140040b90:	pop    rdi
   140040b91:	ret    
   140040b92:	int3   
   140040b93:	int3   
   140040b94:	mov    QWORD PTR [rsp+0x8],rbx
   140040b99:	mov    QWORD PTR [rsp+0x10],rsi
   140040b9e:	push   rdi
   140040b9f:	sub    rsp,0x20
   140040ba3:	xor    edi,edi
   140040ba5:	lea    rax,[rcx+rdx*8]
   140040ba9:	mov    rsi,rax
   140040bac:	mov    rbx,rcx
   140040baf:	sub    rsi,rcx
   140040bb2:	add    rsi,0x7
   140040bb6:	shr    rsi,0x3
   140040bba:	cmp    rcx,rax
   140040bbd:	cmova  rsi,rdi
   140040bc1:	test   rsi,rsi
   140040bc4:	je     0x140040bda
   140040bc6:	mov    rcx,QWORD PTR [rbx]
   140040bc9:	call   0x140038c70
   140040bce:	inc    rdi
   140040bd1:	lea    rbx,[rbx+0x8]
   140040bd5:	cmp    rdi,rsi
   140040bd8:	jne    0x140040bc6
   140040bda:	mov    rbx,QWORD PTR [rsp+0x30]
   140040bdf:	mov    rsi,QWORD PTR [rsp+0x38]
   140040be4:	add    rsp,0x20
   140040be8:	pop    rdi
   140040be9:	ret    
   140040bea:	int3   
   140040beb:	int3   
   140040bec:	mov    QWORD PTR [rsp+0x10],rbx
   140040bf1:	mov    QWORD PTR [rsp+0x18],rsi
   140040bf6:	mov    QWORD PTR [rsp+0x20],rdi
   140040bfb:	push   rbp
   140040bfc:	push   r12
   140040bfe:	push   r13
   140040c00:	push   r14
   140040c02:	push   r15
   140040c04:	mov    rbp,rsp
   140040c07:	sub    rsp,0x40
   140040c0b:	mov    r14,QWORD PTR [rdx+0x150]
   140040c12:	mov    r15,rcx
   140040c15:	xor    r12d,r12d
   140040c18:	mov    QWORD PTR [rbp-0x10],rdx
   140040c1c:	mov    rcx,r14
   140040c1f:	mov    QWORD PTR [rbp-0x8],r12
   140040c23:	call   0x140034888
   140040c28:	mov    QWORD PTR [r15+0x2b8],rax
   140040c2f:	lea    r13d,[r12+0x31]
   140040c34:	mov    esi,r12d
   140040c37:	mov    QWORD PTR [rbp+0x30],0x7
   140040c3f:	lea    ecx,[r13-0x30]
   140040c43:	mov    eax,0x24924925
   140040c48:	mul    ecx
   140040c4a:	mov    eax,ecx
   140040c4c:	mov    r9d,r13d
   140040c4f:	sub    eax,edx
   140040c51:	mov    r8,r14
   140040c54:	shr    eax,1
   140040c56:	add    eax,edx
   140040c58:	mov    edx,0x1
   140040c5d:	shr    eax,0x2
   140040c60:	imul   eax,eax,0x7
   140040c63:	sub    ecx,eax
   140040c65:	mov    edi,ecx
   140040c67:	lea    rax,[r15+rcx*8]
   140040c6b:	lea    rcx,[rbp-0x10]
   140040c6f:	mov    QWORD PTR [rsp+0x20],rax
   140040c74:	call   0x14004350c
   140040c79:	or     esi,eax
   140040c7b:	lea    r9d,[r13-0x7]
   140040c7f:	lea    rax,[r15+0x38]
   140040c83:	mov    r8,r14
   140040c86:	lea    rax,[rax+rdi*8]
   140040c8a:	mov    edx,0x1
   140040c8f:	lea    rcx,[rbp-0x10]
   140040c93:	mov    QWORD PTR [rsp+0x20],rax
   140040c98:	call   0x14004350c
   140040c9d:	or     esi,eax
   140040c9f:	lea    rcx,[rbp-0x10]
   140040ca3:	lea    rax,[r15+0x160]
   140040caa:	mov    r9d,r13d
   140040cad:	lea    rax,[rax+rdi*8]
   140040cb1:	mov    r8,r14
   140040cb4:	mov    edx,0x2
   140040cb9:	mov    QWORD PTR [rsp+0x20],rax
   140040cbe:	call   0x14004350c
   140040cc3:	or     esi,eax
   140040cc5:	lea    r9d,[r13-0x7]
   140040cc9:	lea    rax,[r15+0x198]
   140040cd0:	mov    r8,r14
   140040cd3:	lea    rax,[rax+rdi*8]
   140040cd7:	mov    edx,0x2
   140040cdc:	lea    rcx,[rbp-0x10]
   140040ce0:	mov    QWORD PTR [rsp+0x20],rax
   140040ce5:	call   0x14004350c
   140040cea:	or     esi,eax
   140040cec:	inc    r13d
   140040cef:	sub    QWORD PTR [rbp+0x30],0x1
   140040cf4:	jne    0x140040c3f
   140040cfa:	mov    r13d,0x38
   140040d00:	lea    rdi,[r15+0xd0]
   140040d07:	lea    r12d,[r13-0x2c]
   140040d0b:	lea    rax,[rdi-0x60]
   140040d0f:	mov    r8,r14
   140040d12:	lea    r9d,[r13+0xc]
   140040d16:	mov    QWORD PTR [rsp+0x20],rax
   140040d1b:	mov    edx,0x1
   140040d20:	lea    rcx,[rbp-0x10]
   140040d24:	call   0x14004350c
   140040d29:	mov    r9d,r13d
   140040d2c:	mov    QWORD PTR [rsp+0x20],rdi
   140040d31:	mov    r8,r14
   140040d34:	lea    rcx,[rbp-0x10]
   140040d38:	mov    edx,0x1
   140040d3d:	or     esi,eax
   140040d3f:	call   0x14004350c
   140040d44:	or     esi,eax
   140040d46:	lea    r9d,[r13+0xc]
   140040d4a:	lea    rax,[rdi+0x100]
   140040d51:	mov    ebx,0x2
   140040d56:	mov    r8,r14
   140040d59:	mov    QWORD PTR [rsp+0x20],rax
   140040d5e:	mov    edx,ebx
   140040d60:	lea    rcx,[rbp-0x10]
   140040d64:	call   0x14004350c
   140040d69:	or     esi,eax
   140040d6b:	lea    rcx,[rbp-0x10]
   140040d6f:	lea    rax,[rdi+0x160]
   140040d76:	mov    r9d,r13d
   140040d79:	mov    r8,r14
   140040d7c:	mov    QWORD PTR [rsp+0x20],rax
   140040d81:	mov    edx,ebx
   140040d83:	call   0x14004350c
   140040d88:	or     esi,eax
   140040d8a:	add    rdi,0x8
   140040d8e:	inc    r13d
   140040d91:	sub    r12,0x1
   140040d95:	jne    0x140040d0b
   140040d9b:	lea    rax,[r15+0x130]
   140040da2:	mov    r8,r14
   140040da5:	lea    edi,[rbx+0x26]
   140040da8:	mov    QWORD PTR [rsp+0x20],rax
   140040dad:	mov    r9d,edi
   140040db0:	lea    edx,[rbx-0x1]
   140040db3:	lea    rcx,[rbp-0x10]
   140040db7:	call   0x14004350c
   140040dbc:	or     esi,eax
   140040dbe:	lea    ebx,[rdi+0x1]
   140040dc1:	lea    rax,[r15+0x138]
   140040dc8:	mov    r9d,ebx
   140040dcb:	lea    r13d,[r12+0x1]
   140040dd0:	mov    QWORD PTR [rsp+0x20],rax
   140040dd5:	mov    r8,r14
   140040dd8:	lea    rcx,[rbp-0x10]
   140040ddc:	mov    edx,r13d
   140040ddf:	call   0x14004350c
   140040de4:	mov    r9d,edi
   140040de7:	lea    rcx,[rbp-0x10]
   140040deb:	or     esi,eax
   140040ded:	lea    edi,[rbx-0x27]
   140040df0:	lea    rax,[r15+0x290]
   140040df7:	mov    edx,edi
   140040df9:	mov    r8,r14
   140040dfc:	mov    QWORD PTR [rsp+0x20],rax
   140040e01:	call   0x14004350c
   140040e06:	or     esi,eax
   140040e08:	lea    rcx,[rbp-0x10]
   140040e0c:	lea    rax,[r15+0x298]
   140040e13:	mov    r9d,ebx
   140040e16:	mov    r8,r14
   140040e19:	mov    QWORD PTR [rsp+0x20],rax
   140040e1e:	mov    edx,edi
   140040e20:	call   0x14004350c
   140040e25:	or     esi,eax
   140040e27:	lea    r12d,[rbx-0xa]
   140040e2b:	lea    rax,[r15+0x140]
   140040e32:	mov    r9d,r12d
   140040e35:	mov    r8,r14
   140040e38:	mov    QWORD PTR [rsp+0x20],rax
   140040e3d:	mov    edx,r13d
   140040e40:	lea    rcx,[rbp-0x10]
   140040e44:	call   0x14004350c
   140040e49:	or     esi,eax
   140040e4b:	lea    edi,[rbx-0x9]
   140040e4e:	lea    rax,[r15+0x148]
   140040e55:	mov    r9d,edi
   140040e58:	mov    r8,r14
   140040e5b:	mov    QWORD PTR [rsp+0x20],rax
   140040e60:	mov    edx,r13d
   140040e63:	lea    rcx,[rbp-0x10]
   140040e67:	call   0x14004350c
   140040e6c:	or     esi,eax
   140040e6e:	lea    rcx,[rbp-0x10]
   140040e72:	lea    rax,[r15+0x150]
   140040e79:	mov    ebx,0x1003
   140040e7e:	mov    r9d,ebx
   140040e81:	mov    QWORD PTR [rsp+0x20],rax
   140040e86:	mov    r8,r14
   140040e89:	mov    edx,r13d
   140040e8c:	call   0x14004350c
   140040e91:	or     esi,eax
   140040e93:	lea    r9d,[rbx+0x6]
   140040e97:	lea    rax,[r15+0x158]
   140040e9e:	mov    r8,r14
   140040ea1:	xor    edx,edx
   140040ea3:	mov    QWORD PTR [rsp+0x20],rax
   140040ea8:	lea    rcx,[rbp-0x10]
   140040eac:	call   0x14004350c
   140040eb1:	mov    r9d,r12d
   140040eb4:	lea    rcx,[rbp-0x10]
   140040eb8:	or     esi,eax
   140040eba:	lea    r12d,[r13+0x1]
   140040ebe:	lea    rax,[r15+0x2a0]
   140040ec5:	mov    edx,r12d
   140040ec8:	mov    r8,r14
   140040ecb:	mov    QWORD PTR [rsp+0x20],rax
   140040ed0:	call   0x14004350c
   140040ed5:	or     esi,eax
   140040ed7:	lea    rax,[r15+0x2a8]
   140040ede:	mov    r9d,edi
   140040ee1:	mov    QWORD PTR [rsp+0x20],rax
   140040ee6:	mov    r8,r14
   140040ee9:	lea    rcx,[rbp-0x10]
   140040eed:	mov    edx,r12d
   140040ef0:	call   0x14004350c
   140040ef5:	lea    rcx,[r15+0x2b0]
   140040efc:	mov    r9d,ebx
   140040eff:	mov    QWORD PTR [rsp+0x20],rcx
   140040f04:	mov    r8,r14
   140040f07:	lea    rcx,[rbp-0x10]
   140040f0b:	mov    edx,r12d
   140040f0e:	or     esi,eax
   140040f10:	call   0x14004350c
   140040f15:	lea    r11,[rsp+0x40]
   140040f1a:	or     eax,esi
   140040f1c:	mov    rbx,QWORD PTR [r11+0x38]
   140040f20:	mov    rsi,QWORD PTR [r11+0x40]
   140040f24:	sete   al
   140040f27:	mov    rdi,QWORD PTR [r11+0x48]
   140040f2b:	mov    rsp,r11
   140040f2e:	pop    r15
   140040f30:	pop    r14
   140040f32:	pop    r13
   140040f34:	pop    r12
   140040f36:	pop    rbp
   140040f37:	ret    
   140040f38:	test   rcx,rcx
   140040f3b:	je     0x14004103f
   140040f41:	mov    QWORD PTR [rsp+0x8],rbx
   140040f46:	mov    QWORD PTR [rsp+0x10],rbp
   140040f4b:	push   rsi
   140040f4c:	sub    rsp,0x20
   140040f50:	mov    ebp,0x7
   140040f55:	mov    rbx,rcx
   140040f58:	mov    edx,ebp
   140040f5a:	call   0x140040b94
   140040f5f:	lea    rcx,[rbx+0x38]
   140040f63:	mov    edx,ebp
   140040f65:	call   0x140040b94
   140040f6a:	lea    esi,[rbp+0x5]
   140040f6d:	mov    edx,esi
   140040f6f:	lea    rcx,[rbx+0x70]
   140040f73:	call   0x140040b94
   140040f78:	lea    rcx,[rbx+0xd0]
   140040f7f:	mov    edx,esi
   140040f81:	call   0x140040b94
   140040f86:	lea    rcx,[rbx+0x130]
   140040f8d:	lea    edx,[rbp-0x5]
   140040f90:	call   0x140040b94
   140040f95:	mov    rcx,QWORD PTR [rbx+0x140]
   140040f9c:	call   0x140038c70
   140040fa1:	mov    rcx,QWORD PTR [rbx+0x148]
   140040fa8:	call   0x140038c70
   140040fad:	mov    rcx,QWORD PTR [rbx+0x150]
   140040fb4:	call   0x140038c70
   140040fb9:	lea    rcx,[rbx+0x160]
   140040fc0:	mov    edx,ebp
   140040fc2:	call   0x140040b94
   140040fc7:	lea    rcx,[rbx+0x198]
   140040fce:	mov    edx,ebp
   140040fd0:	call   0x140040b94
   140040fd5:	lea    rcx,[rbx+0x1d0]
   140040fdc:	mov    edx,esi
   140040fde:	call   0x140040b94
   140040fe3:	lea    rcx,[rbx+0x230]
   140040fea:	mov    edx,esi
   140040fec:	call   0x140040b94
   140040ff1:	lea    rcx,[rbx+0x290]
   140040ff8:	lea    edx,[rbp-0x5]
   140040ffb:	call   0x140040b94
   140041000:	mov    rcx,QWORD PTR [rbx+0x2a0]
   140041007:	call   0x140038c70
   14004100c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   140041013:	call   0x140038c70
   140041018:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14004101f:	call   0x140038c70
   140041024:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14004102b:	call   0x140038c70
   140041030:	mov    rbx,QWORD PTR [rsp+0x30]
   140041035:	mov    rbp,QWORD PTR [rsp+0x38]
   14004103a:	add    rsp,0x20
   14004103e:	pop    rsi
   14004103f:	ret    
   140041040:	mov    QWORD PTR [rsp+0x8],rbx
   140041045:	push   rdi
   140041046:	sub    rsp,0x20
   14004104a:	cmp    QWORD PTR [rcx+0x150],0x0
   140041052:	mov    rdi,rcx
   140041055:	jne    0x140041060
   140041057:	lea    rbx,[rip+0x161e2]        # 0x140057240
   14004105e:	jmp    0x1400410b2
   140041060:	mov    edx,0x2c0
   140041065:	mov    ecx,0x1
   14004106a:	call   0x140035d88
   14004106f:	mov    rbx,rax
   140041072:	test   rax,rax
   140041075:	jne    0x14004107b
   140041077:	xor    ecx,ecx
   140041079:	jmp    0x140041095
   14004107b:	mov    rdx,rdi
   14004107e:	mov    rcx,rax
   140041081:	call   0x140040bec
   140041086:	test   al,al
   140041088:	jne    0x1400410a1
   14004108a:	mov    rcx,rbx
   14004108d:	call   0x140040f38
   140041092:	mov    rcx,rbx
   140041095:	call   0x140038c70
   14004109a:	mov    eax,0x1
   14004109f:	jmp    0x1400410c7
   1400410a1:	xor    ecx,ecx
   1400410a3:	mov    DWORD PTR [rbx+0x15c],0x1
   1400410ad:	call   0x140038c70
   1400410b2:	mov    rcx,QWORD PTR [rdi+0x120]
   1400410b9:	call   0x140041590
   1400410be:	xor    eax,eax
   1400410c0:	mov    QWORD PTR [rdi+0x120],rbx
   1400410c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400410cc:	add    rsp,0x20
   1400410d0:	pop    rdi
   1400410d1:	ret    
   1400410d2:	int3   
   1400410d3:	int3   
   1400410d4:	xor    r10d,r10d
   1400410d7:	mov    r9,rdx
   1400410da:	cmp    WORD PTR [rcx],r10w
   1400410de:	mov    rax,rcx
   1400410e1:	je     0x14004110c
   1400410e3:	mov    r8,r9
   1400410e6:	cmp    WORD PTR [r9],r10w
   1400410ea:	je     0x140041102
   1400410ec:	movzx  edx,WORD PTR [r9]
   1400410f0:	cmp    WORD PTR [rax],dx
   1400410f3:	je     0x14004110c
   1400410f5:	add    r8,0x2
   1400410f9:	movzx  edx,WORD PTR [r8]
   1400410fd:	test   dx,dx
   140041100:	jne    0x1400410f0
   140041102:	add    rax,0x2
   140041106:	cmp    WORD PTR [rax],r10w
   14004110a:	jmp    0x1400410e1
   14004110c:	sub    rax,rcx
   14004110f:	sar    rax,1
   140041112:	ret    
   140041113:	int3   
   140041114:	test   r8,r8
   140041117:	jne    0x140041131
   140041119:	xor    eax,eax
   14004111b:	ret    
   14004111c:	movzx  eax,WORD PTR [rcx]
   14004111f:	test   ax,ax
   140041122:	je     0x140041137
   140041124:	cmp    ax,WORD PTR [rdx]
   140041127:	jne    0x140041137
   140041129:	add    rcx,0x2
   14004112d:	add    rdx,0x2
   140041131:	sub    r8,0x1
   140041135:	jne    0x14004111c
   140041137:	movzx  eax,WORD PTR [rcx]
   14004113a:	movzx  ecx,WORD PTR [rdx]
   14004113d:	sub    eax,ecx
   14004113f:	ret    
   140041140:	mov    r8,rdx
   140041143:	xor    r9d,r9d
   140041146:	cmp    WORD PTR [rcx],r9w
   14004114a:	je     0x140041174
   14004114c:	mov    rax,r8
   14004114f:	cmp    WORD PTR [r8],r9w
   140041153:	je     0x14004116a
   140041155:	movzx  edx,WORD PTR [r8]
   140041159:	cmp    dx,WORD PTR [rcx]
   14004115c:	je     0x140041170
   14004115e:	add    rax,0x2
   140041162:	movzx  edx,WORD PTR [rax]
   140041165:	test   dx,dx
   140041168:	jne    0x140041159
   14004116a:	add    rcx,0x2
   14004116e:	jmp    0x140041146
   140041170:	mov    rax,rcx
   140041173:	ret    
   140041174:	xor    eax,eax
   140041176:	ret    
   140041177:	int3   
   140041178:	rex push rbp
   14004117a:	push   r12
   14004117c:	push   r13
   14004117e:	push   r14
   140041180:	push   r15
   140041182:	sub    rsp,0x60
   140041186:	lea    rbp,[rsp+0x30]
   14004118b:	mov    QWORD PTR [rbp+0x60],rbx
   14004118f:	mov    QWORD PTR [rbp+0x68],rsi
   140041193:	mov    QWORD PTR [rbp+0x70],rdi
   140041197:	mov    rax,QWORD PTR [rip+0x2feb2]        # 0x140071050
   14004119e:	xor    rax,rbp
   1400411a1:	mov    QWORD PTR [rbp+0x20],rax
   1400411a5:	mov    r13d,edx
   1400411a8:	mov    r15d,r9d
   1400411ab:	mov    rdx,rcx
   1400411ae:	mov    r12,r8
   1400411b1:	lea    rcx,[rbp+0x0]
   1400411b5:	call   0x14002bd94
   1400411ba:	mov    esi,DWORD PTR [rbp+0x88]
   1400411c0:	test   esi,esi
   1400411c2:	jne    0x1400411cb
   1400411c4:	mov    rax,QWORD PTR [rbp+0x8]
   1400411c8:	mov    esi,DWORD PTR [rax+0xc]
   1400411cb:	neg    DWORD PTR [rbp+0x90]
   1400411d1:	mov    r9d,r15d
   1400411d4:	mov    r8,r12
   1400411d7:	mov    ecx,esi
   1400411d9:	sbb    edx,edx
   1400411db:	and    DWORD PTR [rsp+0x28],0x0
   1400411e0:	and    QWORD PTR [rsp+0x20],0x0
   1400411e6:	and    edx,0x8
   1400411e9:	inc    edx
   1400411eb:	call   QWORD PTR [rip+0x9f37]        # 0x14004b128
   1400411f1:	movsxd r14,eax
   1400411f4:	test   eax,eax
   1400411f6:	jne    0x1400411ff
   1400411f8:	xor    edi,edi
   1400411fa:	jmp    0x1400412f0
   1400411ff:	mov    rdi,r14
   140041202:	add    rdi,rdi
   140041205:	lea    rcx,[rdi+0x10]
   140041209:	cmp    rdi,rcx
   14004120c:	sbb    rax,rax
   14004120f:	test   rcx,rax
   140041212:	je     0x140041289
   140041214:	lea    rcx,[rdi+0x10]
   140041218:	cmp    rdi,rcx
   14004121b:	sbb    rax,rax
   14004121e:	and    rax,rcx
   140041221:	cmp    rax,0x400
   140041227:	lea    rax,[rdi+0x10]
   14004122b:	ja     0x140041267
   14004122d:	cmp    rdi,rax
   140041230:	sbb    rcx,rcx
   140041233:	and    rcx,rax
   140041236:	lea    rax,[rcx+0xf]
   14004123a:	cmp    rax,rcx
   14004123d:	ja     0x140041249
   14004123f:	movabs rax,0xffffffffffffff0
   140041249:	and    rax,0xfffffffffffffff0
   14004124d:	call   0x1400267b0
   140041252:	sub    rsp,rax
   140041255:	lea    rbx,[rsp+0x30]
   14004125a:	test   rbx,rbx
   14004125d:	je     0x1400412d8
   14004125f:	mov    DWORD PTR [rbx],0xcccc
   140041265:	jmp    0x140041283
   140041267:	cmp    rdi,rax
   14004126a:	sbb    rcx,rcx
   14004126d:	and    rcx,rax
   140041270:	call   0x140036600
   140041275:	mov    rbx,rax
   140041278:	test   rax,rax
   14004127b:	je     0x14004128b
   14004127d:	mov    DWORD PTR [rax],0xdddd
   140041283:	add    rbx,0x10
   140041287:	jmp    0x14004128b
   140041289:	xor    ebx,ebx
   14004128b:	test   rbx,rbx
   14004128e:	je     0x1400412d8
   140041290:	mov    r8,rdi
   140041293:	xor    edx,edx
   140041295:	mov    rcx,rbx
   140041298:	call   0x14002a910
   14004129d:	mov    r9d,r15d
   1400412a0:	mov    DWORD PTR [rsp+0x28],r14d
   1400412a5:	mov    r8,r12
   1400412a8:	mov    QWORD PTR [rsp+0x20],rbx
   1400412ad:	mov    edx,0x1
   1400412b2:	mov    ecx,esi
   1400412b4:	call   QWORD PTR [rip+0x9e6e]        # 0x14004b128
   1400412ba:	test   eax,eax
   1400412bc:	je     0x1400412d8
   1400412be:	mov    r9,QWORD PTR [rbp+0x80]
   1400412c5:	mov    r8d,eax
   1400412c8:	mov    rdx,rbx
   1400412cb:	mov    ecx,r13d
   1400412ce:	call   QWORD PTR [rip+0x9f84]        # 0x14004b258
   1400412d4:	mov    edi,eax
   1400412d6:	jmp    0x1400412da
   1400412d8:	xor    edi,edi
   1400412da:	test   rbx,rbx
   1400412dd:	je     0x1400412f0
   1400412df:	lea    rcx,[rbx-0x10]
   1400412e3:	cmp    DWORD PTR [rcx],0xdddd
   1400412e9:	jne    0x1400412f0
   1400412eb:	call   0x140038c70
   1400412f0:	cmp    BYTE PTR [rbp+0x18],0x0
   1400412f4:	je     0x140041301
   1400412f6:	mov    rax,QWORD PTR [rbp+0x0]
   1400412fa:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   140041301:	mov    eax,edi
   140041303:	mov    rcx,QWORD PTR [rbp+0x20]
   140041307:	xor    rcx,rbp
   14004130a:	call   0x140025df0
   14004130f:	mov    rbx,QWORD PTR [rbp+0x60]
   140041313:	mov    rsi,QWORD PTR [rbp+0x68]
   140041317:	mov    rdi,QWORD PTR [rbp+0x70]
   14004131b:	lea    rsp,[rbp+0x30]
   14004131f:	pop    r15
   140041321:	pop    r14
   140041323:	pop    r13
   140041325:	pop    r12
   140041327:	pop    rbp
   140041328:	ret    
   140041329:	int3   
   14004132a:	int3   
   14004132b:	int3   
   14004132c:	lock inc DWORD PTR [rcx+0x10]
   140041330:	mov    rax,QWORD PTR [rcx+0xe0]
   140041337:	test   rax,rax
   14004133a:	je     0x14004133f
   14004133c:	lock inc DWORD PTR [rax]
   14004133f:	mov    rax,QWORD PTR [rcx+0xf0]
   140041346:	test   rax,rax
   140041349:	je     0x14004134e
   14004134b:	lock inc DWORD PTR [rax]
   14004134e:	mov    rax,QWORD PTR [rcx+0xe8]
   140041355:	test   rax,rax
   140041358:	je     0x14004135d
   14004135a:	lock inc DWORD PTR [rax]
   14004135d:	mov    rax,QWORD PTR [rcx+0x100]
   140041364:	test   rax,rax
   140041367:	je     0x14004136c
   140041369:	lock inc DWORD PTR [rax]
   14004136c:	lea    rax,[rcx+0x38]
   140041370:	mov    r8d,0x6
   140041376:	lea    rdx,[rip+0x300eb]        # 0x140071468
   14004137d:	cmp    QWORD PTR [rax-0x10],rdx
   140041381:	je     0x14004138e
   140041383:	mov    rdx,QWORD PTR [rax]
   140041386:	test   rdx,rdx
   140041389:	je     0x14004138e
   14004138b:	lock inc DWORD PTR [rdx]
   14004138e:	cmp    QWORD PTR [rax-0x18],0x0
   140041393:	je     0x1400413a1
   140041395:	mov    rdx,QWORD PTR [rax-0x8]
   140041399:	test   rdx,rdx
   14004139c:	je     0x1400413a1
   14004139e:	lock inc DWORD PTR [rdx]
   1400413a1:	add    rax,0x20
   1400413a5:	sub    r8,0x1
   1400413a9:	jne    0x140041376
   1400413ab:	mov    rcx,QWORD PTR [rcx+0x120]
   1400413b2:	jmp    0x140041530
   1400413b7:	int3   
   1400413b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400413bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400413c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400413c7:	push   rdi
   1400413c8:	sub    rsp,0x20
   1400413cc:	mov    rax,QWORD PTR [rcx+0xf8]
   1400413d3:	mov    rbx,rcx
   1400413d6:	test   rax,rax
   1400413d9:	je     0x140041454
   1400413db:	lea    rcx,[rip+0x2fd2e]        # 0x140071110
   1400413e2:	cmp    rax,rcx
   1400413e5:	je     0x140041454
   1400413e7:	mov    rax,QWORD PTR [rbx+0xe0]
   1400413ee:	test   rax,rax
   1400413f1:	je     0x140041454
   1400413f3:	cmp    DWORD PTR [rax],0x0
   1400413f6:	jne    0x140041454
   1400413f8:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400413ff:	test   rcx,rcx
   140041402:	je     0x14004141a
   140041404:	cmp    DWORD PTR [rcx],0x0
   140041407:	jne    0x14004141a
   140041409:	call   0x140038c70
   14004140e:	mov    rcx,QWORD PTR [rbx+0xf8]
   140041415:	call   0x140040204
   14004141a:	mov    rcx,QWORD PTR [rbx+0xe8]
   140041421:	test   rcx,rcx
   140041424:	je     0x14004143c
   140041426:	cmp    DWORD PTR [rcx],0x0
   140041429:	jne    0x14004143c
   14004142b:	call   0x140038c70
   140041430:	mov    rcx,QWORD PTR [rbx+0xf8]
   140041437:	call   0x140040848
   14004143c:	mov    rcx,QWORD PTR [rbx+0xe0]
   140041443:	call   0x140038c70
   140041448:	mov    rcx,QWORD PTR [rbx+0xf8]
   14004144f:	call   0x140038c70
   140041454:	mov    rax,QWORD PTR [rbx+0x100]
   14004145b:	test   rax,rax
   14004145e:	je     0x1400414a7
   140041460:	cmp    DWORD PTR [rax],0x0
   140041463:	jne    0x1400414a7
   140041465:	mov    rcx,QWORD PTR [rbx+0x108]
   14004146c:	sub    rcx,0xfe
   140041473:	call   0x140038c70
   140041478:	mov    rcx,QWORD PTR [rbx+0x110]
   14004147f:	mov    edi,0x80
   140041484:	sub    rcx,rdi
   140041487:	call   0x140038c70
   14004148c:	mov    rcx,QWORD PTR [rbx+0x118]
   140041493:	sub    rcx,rdi
   140041496:	call   0x140038c70
   14004149b:	mov    rcx,QWORD PTR [rbx+0x100]
   1400414a2:	call   0x140038c70
   1400414a7:	mov    rcx,QWORD PTR [rbx+0x120]
   1400414ae:	call   0x140041558
   1400414b3:	lea    rsi,[rbx+0x128]
   1400414ba:	mov    ebp,0x6
   1400414bf:	lea    rdi,[rbx+0x38]
   1400414c3:	lea    rax,[rip+0x2ff9e]        # 0x140071468
   1400414ca:	cmp    QWORD PTR [rdi-0x10],rax
   1400414ce:	je     0x1400414ea
   1400414d0:	mov    rcx,QWORD PTR [rdi]
   1400414d3:	test   rcx,rcx
   1400414d6:	je     0x1400414ea
   1400414d8:	cmp    DWORD PTR [rcx],0x0
   1400414db:	jne    0x1400414ea
   1400414dd:	call   0x140038c70
   1400414e2:	mov    rcx,QWORD PTR [rsi]
   1400414e5:	call   0x140038c70
   1400414ea:	cmp    QWORD PTR [rdi-0x18],0x0
   1400414ef:	je     0x140041504
   1400414f1:	mov    rcx,QWORD PTR [rdi-0x8]
   1400414f5:	test   rcx,rcx
   1400414f8:	je     0x140041504
   1400414fa:	cmp    DWORD PTR [rcx],0x0
   1400414fd:	jne    0x140041504
   1400414ff:	call   0x140038c70
   140041504:	add    rsi,0x8
   140041508:	add    rdi,0x20
   14004150c:	sub    rbp,0x1
   140041510:	jne    0x1400414c3
   140041512:	mov    rcx,rbx
   140041515:	mov    rbx,QWORD PTR [rsp+0x30]
   14004151a:	mov    rbp,QWORD PTR [rsp+0x38]
   14004151f:	mov    rsi,QWORD PTR [rsp+0x40]
   140041524:	add    rsp,0x20
   140041528:	pop    rdi
   140041529:	jmp    0x140038c70
   14004152e:	int3   
   14004152f:	int3   
   140041530:	test   rcx,rcx
   140041533:	je     0x140041551
   140041535:	lea    rax,[rip+0x15d04]        # 0x140057240
   14004153c:	cmp    rcx,rax
   14004153f:	je     0x140041551
   140041541:	mov    eax,0x1
   140041546:	lock xadd DWORD PTR [rcx+0x15c],eax
   14004154e:	inc    eax
   140041550:	ret    
   140041551:	mov    eax,0x7fffffff
   140041556:	ret    
   140041557:	int3   
   140041558:	test   rcx,rcx
   14004155b:	je     0x14004158d
   14004155d:	push   rbx
   14004155e:	sub    rsp,0x20
   140041562:	lea    rax,[rip+0x15cd7]        # 0x140057240
   140041569:	mov    rbx,rcx
   14004156c:	cmp    rcx,rax
   14004156f:	je     0x140041588
   140041571:	mov    eax,DWORD PTR [rcx+0x15c]
   140041577:	test   eax,eax
   140041579:	jne    0x140041588
   14004157b:	call   0x140040f38
   140041580:	mov    rcx,rbx
   140041583:	call   0x140038c70
   140041588:	add    rsp,0x20
   14004158c:	pop    rbx
   14004158d:	ret    
   14004158e:	int3   
   14004158f:	int3   
   140041590:	test   rcx,rcx
   140041593:	je     0x1400415af
   140041595:	lea    rax,[rip+0x15ca4]        # 0x140057240
   14004159c:	cmp    rcx,rax
   14004159f:	je     0x1400415af
   1400415a1:	or     eax,0xffffffff
   1400415a4:	lock xadd DWORD PTR [rcx+0x15c],eax
   1400415ac:	dec    eax
   1400415ae:	ret    
   1400415af:	mov    eax,0x7fffffff
   1400415b4:	ret    
   1400415b5:	int3   
   1400415b6:	int3   
   1400415b7:	int3   
   1400415b8:	sub    rsp,0x28
   1400415bc:	test   rcx,rcx
   1400415bf:	je     0x14004165b
   1400415c5:	or     r9d,0xffffffff
   1400415c9:	lock add DWORD PTR [rcx+0x10],r9d
   1400415ce:	mov    rax,QWORD PTR [rcx+0xe0]
   1400415d5:	test   rax,rax
   1400415d8:	je     0x1400415de
   1400415da:	lock add DWORD PTR [rax],r9d
   1400415de:	mov    rax,QWORD PTR [rcx+0xf0]
   1400415e5:	test   rax,rax
   1400415e8:	je     0x1400415ee
   1400415ea:	lock add DWORD PTR [rax],r9d
   1400415ee:	mov    rax,QWORD PTR [rcx+0xe8]
   1400415f5:	test   rax,rax
   1400415f8:	je     0x1400415fe
   1400415fa:	lock add DWORD PTR [rax],r9d
   1400415fe:	mov    rax,QWORD PTR [rcx+0x100]
   140041605:	test   rax,rax
   140041608:	je     0x14004160e
   14004160a:	lock add DWORD PTR [rax],r9d
   14004160e:	lea    rax,[rcx+0x38]
   140041612:	mov    r8d,0x6
   140041618:	lea    rdx,[rip+0x2fe49]        # 0x140071468
   14004161f:	cmp    QWORD PTR [rax-0x10],rdx
   140041623:	je     0x140041631
   140041625:	mov    rdx,QWORD PTR [rax]
   140041628:	test   rdx,rdx
   14004162b:	je     0x140041631
   14004162d:	lock add DWORD PTR [rdx],r9d
   140041631:	cmp    QWORD PTR [rax-0x18],0x0
   140041636:	je     0x140041645
   140041638:	mov    rdx,QWORD PTR [rax-0x8]
   14004163c:	test   rdx,rdx
   14004163f:	je     0x140041645
   140041641:	lock add DWORD PTR [rdx],r9d
   140041645:	add    rax,0x20
   140041649:	sub    r8,0x1
   14004164d:	jne    0x140041618
   14004164f:	mov    rcx,QWORD PTR [rcx+0x120]
   140041656:	call   0x140041590
   14004165b:	add    rsp,0x28
   14004165f:	ret    
   140041660:	mov    QWORD PTR [rsp+0x8],rbx
   140041665:	push   rdi
   140041666:	sub    rsp,0x20
   14004166a:	call   0x140039130
   14004166f:	mov    rdi,rax
   140041672:	mov    ecx,DWORD PTR [rip+0x30488]        # 0x140071b00
   140041678:	test   DWORD PTR [rax+0x3a8],ecx
   14004167e:	je     0x14004168c
   140041680:	mov    rbx,QWORD PTR [rax+0x90]
   140041687:	test   rbx,rbx
   14004168a:	jne    0x1400416c2
   14004168c:	mov    ecx,0x4
   140041691:	call   0x140035a44
   140041696:	nop
   140041697:	lea    rcx,[rdi+0x90]
   14004169e:	mov    rdx,QWORD PTR [rip+0x355fb]        # 0x140076ca0
   1400416a5:	call   0x1400416d0
   1400416aa:	mov    rbx,rax
   1400416ad:	mov    ecx,0x4
   1400416b2:	call   0x140035a98
   1400416b7:	test   rbx,rbx
   1400416ba:	jne    0x1400416c2
   1400416bc:	call   0x1400365a8
   1400416c1:	int3   
   1400416c2:	mov    rax,rbx
   1400416c5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400416ca:	add    rsp,0x20
   1400416ce:	pop    rdi
   1400416cf:	ret    
   1400416d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400416d5:	push   rdi
   1400416d6:	sub    rsp,0x20
   1400416da:	mov    rdi,rdx
   1400416dd:	test   rdx,rdx
   1400416e0:	je     0x14004172b
   1400416e2:	test   rcx,rcx
   1400416e5:	je     0x14004172b
   1400416e7:	mov    rbx,QWORD PTR [rcx]
   1400416ea:	cmp    rbx,rdx
   1400416ed:	jne    0x1400416f4
   1400416ef:	mov    rax,rdx
   1400416f2:	jmp    0x14004172d
   1400416f4:	mov    QWORD PTR [rcx],rdx
   1400416f7:	mov    rcx,rdx
   1400416fa:	call   0x14004132c
   1400416ff:	test   rbx,rbx
   140041702:	je     0x140041726
   140041704:	mov    rcx,rbx
   140041707:	call   0x1400415b8
   14004170c:	cmp    DWORD PTR [rbx+0x10],0x0
   140041710:	jne    0x140041726
   140041712:	lea    rax,[rip+0x2fbe7]        # 0x140071300
   140041719:	cmp    rbx,rax
   14004171c:	je     0x140041726
   14004171e:	mov    rcx,rbx
   140041721:	call   0x1400413b8
   140041726:	mov    rax,rdi
   140041729:	jmp    0x14004172d
   14004172b:	xor    eax,eax
   14004172d:	mov    rbx,QWORD PTR [rsp+0x30]
   140041732:	add    rsp,0x20
   140041736:	pop    rdi
   140041737:	ret    
   140041738:	mov    QWORD PTR [rsp+0x10],rbx
   14004173d:	push   rdi
   14004173e:	sub    rsp,0xf0
   140041745:	mov    rax,QWORD PTR [rip+0x2f904]        # 0x140071050
   14004174c:	xor    rax,rsp
   14004174f:	mov    QWORD PTR [rsp+0xe0],rax
   140041757:	or     DWORD PTR [rcx+0x10],0x104
   14004175e:	mov    rbx,rcx
   140041761:	lea    rcx,[rsp+0x30]
   140041766:	mov    edx,0x55
   14004176b:	call   0x14003d214
   140041770:	cmp    eax,0x1
   140041773:	jle    0x1400417a7
   140041775:	or     r9,0xffffffffffffffff
   140041779:	lea    rax,[rsp+0x30]
   14004177e:	xor    edi,edi
   140041780:	inc    r9
   140041783:	cmp    WORD PTR [rax+r9*2],di
   140041788:	jne    0x140041780
   14004178a:	inc    r9
   14004178d:	lea    rcx,[rbx+0x258]
   140041794:	lea    r8,[rsp+0x30]
   140041799:	mov    edx,0x55
   14004179e:	call   0x14003fc14
   1400417a3:	test   eax,eax
   1400417a5:	jne    0x1400417c8
   1400417a7:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400417af:	xor    rcx,rsp
   1400417b2:	call   0x140025df0
   1400417b7:	mov    rbx,QWORD PTR [rsp+0x108]
   1400417bf:	add    rsp,0xf0
   1400417c6:	pop    rdi
   1400417c7:	ret    
   1400417c8:	xor    r9d,r9d
   1400417cb:	mov    QWORD PTR [rsp+0x20],rdi
   1400417d0:	xor    r8d,r8d
   1400417d3:	xor    edx,edx
   1400417d5:	xor    ecx,ecx
   1400417d7:	call   0x140030820
   1400417dc:	int3   
   1400417dd:	int3   
   1400417de:	int3   
   1400417df:	int3   
   1400417e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400417e5:	push   rdi
   1400417e6:	sub    rsp,0x20
   1400417ea:	mov    rdx,QWORD PTR [rcx]
   1400417ed:	or     r8,0xffffffffffffffff
   1400417f1:	mov    rax,r8
   1400417f4:	xor    edi,edi
   1400417f6:	mov    rbx,rcx
   1400417f9:	inc    rax
   1400417fc:	cmp    WORD PTR [rdx+rax*2],di
   140041800:	jne    0x1400417f9
   140041802:	cmp    rax,0x3
   140041806:	mov    ecx,edi
   140041808:	mov    rax,QWORD PTR [rbx+0x8]
   14004180c:	sete   cl
   14004180f:	mov    DWORD PTR [rbx+0x18],ecx
   140041812:	inc    r8
   140041815:	cmp    WORD PTR [rax+r8*2],di
   14004181a:	jne    0x140041812
   14004181c:	cmp    r8,0x3
   140041820:	mov    eax,edi
   140041822:	sete   al
   140041825:	mov    DWORD PTR [rbx+0x1c],eax
   140041828:	test   ecx,ecx
   14004182a:	je     0x140041833
   14004182c:	mov    ecx,0x2
   140041831:	jmp    0x140041869
   140041833:	mov    r9d,edi
   140041836:	test   rdx,rdx
   140041839:	jne    0x14004183f
   14004183b:	mov    ecx,edi
   14004183d:	jmp    0x140041869
   14004183f:	mov    ecx,0x2
   140041844:	movzx  r8d,WORD PTR [rdx]
   140041848:	add    rdx,rcx
   14004184b:	lea    eax,[r8-0x41]
   14004184f:	cmp    ax,0x19
   140041853:	jbe    0x140041861
   140041855:	sub    r8w,0x61
   14004185a:	cmp    r8w,0x19
   14004185f:	ja     0x140041866
   140041861:	inc    r9d
   140041864:	jmp    0x140041844
   140041866:	mov    ecx,r9d
   140041869:	xor    r9d,r9d
   14004186c:	mov    DWORD PTR [rbx+0x14],ecx
   14004186f:	xor    r8d,r8d
   140041872:	lea    rcx,[rip+0xd3]        # 0x14004194c
   140041879:	lea    edx,[r9+0x3]
   14004187d:	call   0x14003cf64
   140041882:	mov    ecx,DWORD PTR [rbx+0x10]
   140041885:	test   cl,0x7
   140041888:	setne  dl
   14004188b:	bt     ecx,0x9
   14004188f:	setb   al
   140041892:	and    dl,al
   140041894:	bt     ecx,0x8
   140041898:	setb   al
   14004189b:	test   al,dl
   14004189d:	jne    0x1400418a2
   14004189f:	mov    DWORD PTR [rbx+0x10],edi
   1400418a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400418a7:	add    rsp,0x20
   1400418ab:	pop    rdi
   1400418ac:	ret    
   1400418ad:	int3   
   1400418ae:	int3   
   1400418af:	int3   
   1400418b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400418b5:	push   rdi
   1400418b6:	sub    rsp,0x20
   1400418ba:	mov    rdx,QWORD PTR [rcx]
   1400418bd:	or     r8,0xffffffffffffffff
   1400418c1:	xor    edi,edi
   1400418c3:	mov    rbx,rcx
   1400418c6:	inc    r8
   1400418c9:	cmp    WORD PTR [rdx+r8*2],di
   1400418ce:	jne    0x1400418c6
   1400418d0:	mov    eax,edi
   1400418d2:	cmp    r8,0x3
   1400418d6:	sete   al
   1400418d9:	mov    DWORD PTR [rcx+0x18],eax
   1400418dc:	test   eax,eax
   1400418de:	je     0x1400418e7
   1400418e0:	mov    ecx,0x2
   1400418e5:	jmp    0x14004191d
   1400418e7:	mov    r9d,edi
   1400418ea:	test   rdx,rdx
   1400418ed:	jne    0x1400418f3
   1400418ef:	mov    ecx,edi
   1400418f1:	jmp    0x14004191d
   1400418f3:	mov    ecx,0x2
   1400418f8:	movzx  r8d,WORD PTR [rdx]
   1400418fc:	add    rdx,rcx
   1400418ff:	lea    eax,[r8-0x41]
   140041903:	cmp    ax,0x19
   140041907:	jbe    0x140041915
   140041909:	sub    r8w,0x61
   14004190e:	cmp    r8w,0x19
   140041913:	ja     0x14004191a
   140041915:	inc    r9d
   140041918:	jmp    0x1400418f8
   14004191a:	mov    ecx,r9d
   14004191d:	xor    r9d,r9d
   140041920:	mov    DWORD PTR [rbx+0x14],ecx
   140041923:	xor    r8d,r8d
   140041926:	lea    rcx,[rip+0x3d3]        # 0x140041d00
   14004192d:	lea    edx,[r9+0x3]
   140041931:	call   0x14003cf64
   140041936:	test   BYTE PTR [rbx+0x10],0x4
   14004193a:	jne    0x14004193f
   14004193c:	mov    DWORD PTR [rbx+0x10],edi
   14004193f:	mov    rbx,QWORD PTR [rsp+0x30]
   140041944:	add    rsp,0x20
   140041948:	pop    rdi
   140041949:	ret    
   14004194a:	int3   
   14004194b:	int3   
   14004194c:	mov    QWORD PTR [rsp+0x10],rbx
   140041951:	mov    QWORD PTR [rsp+0x18],rbp
   140041956:	push   rsi
   140041957:	push   rdi
   140041958:	push   r13
   14004195a:	sub    rsp,0xc0
   140041961:	mov    rax,QWORD PTR [rip+0x2f6e8]        # 0x140071050
   140041968:	xor    rax,rsp
   14004196b:	mov    QWORD PTR [rsp+0xb0],rax
   140041973:	mov    rsi,rcx
   140041976:	call   0x140039130
   14004197b:	mov    r9d,0x40
   140041981:	lea    r8,[rsp+0x30]
   140041986:	lea    rbx,[rax+0x98]
   14004198d:	mov    ecx,DWORD PTR [rbx+0x1c]
   140041990:	neg    ecx
   140041992:	mov    rcx,rsi
   140041995:	sbb    edx,edx
   140041997:	and    edx,0xfffff005
   14004199d:	add    edx,0x1002
   1400419a3:	call   0x14003d17c
   1400419a8:	xor    ebp,ebp
   1400419aa:	test   eax,eax
   1400419ac:	jne    0x1400419bb
   1400419ae:	mov    DWORD PTR [rbx+0x10],ebp
   1400419b1:	mov    eax,0x1
   1400419b6:	jmp    0x140041c59
   1400419bb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400419bf:	lea    rdx,[rsp+0x30]
   1400419c4:	call   0x14002be24
   1400419c9:	or     rdi,0xffffffffffffffff
   1400419cd:	lea    r13d,[rdi+0x56]
   1400419d1:	test   eax,eax
   1400419d3:	jne    0x140041adb
   1400419d9:	mov    eax,DWORD PTR [rbx+0x18]
   1400419dc:	lea    r9d,[rdi+0x41]
   1400419e0:	neg    eax
   1400419e2:	lea    r8,[rsp+0x30]
   1400419e7:	mov    rcx,rsi
   1400419ea:	sbb    edx,edx
   1400419ec:	and    edx,0xfffff002
   1400419f2:	add    edx,0x1001
   1400419f8:	call   0x14003d17c
   1400419fd:	test   eax,eax
   1400419ff:	je     0x1400419ae
   140041a01:	mov    rcx,QWORD PTR [rbx]
   140041a04:	lea    rdx,[rsp+0x30]
   140041a09:	call   0x14002be24
   140041a0e:	test   eax,eax
   140041a10:	jne    0x140041a48
   140041a12:	or     DWORD PTR [rbx+0x10],0x304
   140041a19:	mov    r9,rdi
   140041a1c:	inc    r9
   140041a1f:	cmp    WORD PTR [rsi+r9*2],bp
   140041a24:	jne    0x140041a1c
   140041a26:	inc    r9
   140041a29:	lea    rcx,[rbx+0x258]
   140041a30:	mov    r8,rsi
   140041a33:	mov    rdx,r13
   140041a36:	call   0x14003fc14
   140041a3b:	test   eax,eax
   140041a3d:	je     0x140041adb
   140041a43:	jmp    0x140041c81
   140041a48:	test   BYTE PTR [rbx+0x10],0x2
   140041a4c:	jne    0x140041adb
   140041a52:	cmp    DWORD PTR [rbx+0x14],ebp
   140041a55:	je     0x140041a9b
   140041a57:	movsxd r8,DWORD PTR [rbx+0x14]
   140041a5b:	lea    rdx,[rsp+0x30]
   140041a60:	mov    rcx,QWORD PTR [rbx]
   140041a63:	call   0x14002c5a8
   140041a68:	test   eax,eax
   140041a6a:	jne    0x140041a9b
   140041a6c:	or     DWORD PTR [rbx+0x10],0x2
   140041a70:	mov    r9,rdi
   140041a73:	inc    r9
   140041a76:	cmp    WORD PTR [rsi+r9*2],bp
   140041a7b:	jne    0x140041a73
   140041a7d:	inc    r9
   140041a80:	lea    rcx,[rbx+0x258]
   140041a87:	mov    r8,rsi
   140041a8a:	mov    rdx,r13
   140041a8d:	call   0x14003fc14
   140041a92:	test   eax,eax
   140041a94:	je     0x140041adb
   140041a96:	jmp    0x140041c96
   140041a9b:	test   BYTE PTR [rbx+0x10],0x1
   140041a9f:	jne    0x140041adb
   140041aa1:	mov    rcx,rsi
   140041aa4:	call   0x140041ea0
   140041aa9:	test   eax,eax
   140041aab:	je     0x140041adb
   140041aad:	or     DWORD PTR [rbx+0x10],0x1
   140041ab1:	mov    r9,rdi
   140041ab4:	inc    r9
   140041ab7:	cmp    WORD PTR [rsi+r9*2],bp
   140041abc:	jne    0x140041ab4
   140041abe:	inc    r9
   140041ac1:	lea    rcx,[rbx+0x258]
   140041ac8:	mov    r8,rsi
   140041acb:	mov    rdx,r13
   140041ace:	call   0x14003fc14
   140041ad3:	test   eax,eax
   140041ad5:	jne    0x140041cab
   140041adb:	mov    eax,DWORD PTR [rbx+0x10]
   140041ade:	mov    ecx,0x300
   140041ae3:	and    eax,ecx
   140041ae5:	cmp    eax,ecx
   140041ae7:	je     0x140041c4e
   140041aed:	mov    eax,DWORD PTR [rbx+0x18]
   140041af0:	lea    r8,[rsp+0x30]
   140041af5:	neg    eax
   140041af7:	mov    r9d,0x40
   140041afd:	mov    rcx,rsi
   140041b00:	sbb    edx,edx
   140041b02:	and    edx,0xfffff002
   140041b08:	add    edx,0x1001
   140041b0e:	call   0x14003d17c
   140041b13:	test   eax,eax
   140041b15:	je     0x1400419ae
   140041b1b:	mov    rcx,QWORD PTR [rbx]
   140041b1e:	lea    rdx,[rsp+0x30]
   140041b23:	call   0x14002be24
   140041b28:	test   eax,eax
   140041b2a:	jne    0x140041c4e
   140041b30:	bts    DWORD PTR [rbx+0x10],0x9
   140041b35:	mov    eax,DWORD PTR [rbx+0x10]
   140041b38:	cmp    DWORD PTR [rbx+0x18],ebp
   140041b3b:	je     0x140041b79
   140041b3d:	bts    eax,0x8
   140041b41:	lea    rcx,[rbx+0x258]
   140041b48:	mov    DWORD PTR [rbx+0x10],eax
   140041b4b:	cmp    WORD PTR [rcx],bp
   140041b4e:	jne    0x140041c4e
   140041b54:	inc    rdi
   140041b57:	cmp    WORD PTR [rsi+rdi*2],bp
   140041b5b:	jne    0x140041b54
   140041b5d:	lea    r9,[rdi+0x1]
   140041b61:	mov    r8,rsi
   140041b64:	mov    rdx,r13
   140041b67:	call   0x14003fc14
   140041b6c:	test   eax,eax
   140041b6e:	je     0x140041c4e
   140041b74:	jmp    0x140041cc0
   140041b79:	cmp    DWORD PTR [rbx+0x14],ebp
   140041b7c:	je     0x140041c1b
   140041b82:	mov    rdx,QWORD PTR [rbx]
   140041b85:	mov    rcx,rdi
   140041b88:	inc    rcx
   140041b8b:	cmp    WORD PTR [rdx+rcx*2],bp
   140041b8f:	jne    0x140041b88
   140041b91:	cmp    ecx,DWORD PTR [rbx+0x14]
   140041b94:	jne    0x140041c1b
   140041b9a:	mov    rcx,rsi
   140041b9d:	call   0x140041ea0
   140041ba2:	test   eax,eax
   140041ba4:	jne    0x140041be9
   140041ba6:	mov    r9,QWORD PTR [rbx]
   140041ba9:	mov    r8d,ebp
   140041bac:	mov    rcx,r9
   140041baf:	test   r9,r9
   140041bb2:	je     0x140041bd7
   140041bb4:	movzx  edx,WORD PTR [r9]
   140041bb8:	add    rcx,0x2
   140041bbc:	lea    eax,[rdx-0x41]
   140041bbf:	cmp    ax,0x19
   140041bc3:	jbe    0x140041bcf
   140041bc5:	sub    dx,0x61
   140041bc9:	cmp    dx,0x19
   140041bcd:	ja     0x140041bd7
   140041bcf:	movzx  edx,WORD PTR [rcx]
   140041bd2:	inc    r8d
   140041bd5:	jmp    0x140041bb8
   140041bd7:	mov    rax,rdi
   140041bda:	inc    rax
   140041bdd:	cmp    WORD PTR [r9+rax*2],bp
   140041be2:	jne    0x140041bda
   140041be4:	cmp    r8d,eax
   140041be7:	je     0x140041c4e
   140041be9:	bts    DWORD PTR [rbx+0x10],0x8
   140041bee:	lea    rcx,[rbx+0x258]
   140041bf5:	cmp    WORD PTR [rcx],bp
   140041bf8:	jne    0x140041c4e
   140041bfa:	inc    rdi
   140041bfd:	cmp    WORD PTR [rsi+rdi*2],bp
   140041c01:	jne    0x140041bfa
   140041c03:	lea    r9,[rdi+0x1]
   140041c07:	mov    r8,rsi
   140041c0a:	mov    rdx,r13
   140041c0d:	call   0x14003fc14
   140041c12:	test   eax,eax
   140041c14:	je     0x140041c4e
   140041c16:	jmp    0x140041cd5
   140041c1b:	bts    eax,0x8
   140041c1f:	lea    rcx,[rbx+0x258]
   140041c26:	mov    DWORD PTR [rbx+0x10],eax
   140041c29:	cmp    WORD PTR [rcx],bp
   140041c2c:	jne    0x140041c4e
   140041c2e:	inc    rdi
   140041c31:	cmp    WORD PTR [rsi+rdi*2],bp
   140041c35:	jne    0x140041c2e
   140041c37:	lea    r9,[rdi+0x1]
   140041c3b:	mov    r8,rsi
   140041c3e:	mov    rdx,r13
   140041c41:	call   0x14003fc14
   140041c46:	test   eax,eax
   140041c48:	jne    0x140041cea
   140041c4e:	mov    eax,DWORD PTR [rbx+0x10]
   140041c51:	shr    eax,0x2
   140041c54:	not    eax
   140041c56:	and    eax,0x1
   140041c59:	mov    rcx,QWORD PTR [rsp+0xb0]
   140041c61:	xor    rcx,rsp
   140041c64:	call   0x140025df0
   140041c69:	lea    r11,[rsp+0xc0]
   140041c71:	mov    rbx,QWORD PTR [r11+0x28]
   140041c75:	mov    rbp,QWORD PTR [r11+0x30]
   140041c79:	mov    rsp,r11
   140041c7c:	pop    r13
   140041c7e:	pop    rdi
   140041c7f:	pop    rsi
   140041c80:	ret    
   140041c81:	xor    r9d,r9d
   140041c84:	mov    QWORD PTR [rsp+0x20],rbp
   140041c89:	xor    r8d,r8d
   140041c8c:	xor    edx,edx
   140041c8e:	xor    ecx,ecx
   140041c90:	call   0x140030820
   140041c95:	int3   
   140041c96:	xor    r9d,r9d
   140041c99:	mov    QWORD PTR [rsp+0x20],rbp
   140041c9e:	xor    r8d,r8d
   140041ca1:	xor    edx,edx
   140041ca3:	xor    ecx,ecx
   140041ca5:	call   0x140030820
   140041caa:	int3   
   140041cab:	xor    r9d,r9d
   140041cae:	mov    QWORD PTR [rsp+0x20],rbp
   140041cb3:	xor    r8d,r8d
   140041cb6:	xor    edx,edx
   140041cb8:	xor    ecx,ecx
   140041cba:	call   0x140030820
   140041cbf:	int3   
   140041cc0:	xor    r9d,r9d
   140041cc3:	mov    QWORD PTR [rsp+0x20],rbp
   140041cc8:	xor    r8d,r8d
   140041ccb:	xor    edx,edx
   140041ccd:	xor    ecx,ecx
   140041ccf:	call   0x140030820
   140041cd4:	int3   
   140041cd5:	xor    r9d,r9d
   140041cd8:	mov    QWORD PTR [rsp+0x20],rbp
   140041cdd:	xor    r8d,r8d
   140041ce0:	xor    edx,edx
   140041ce2:	xor    ecx,ecx
   140041ce4:	call   0x140030820
   140041ce9:	int3   
   140041cea:	xor    r9d,r9d
   140041ced:	mov    QWORD PTR [rsp+0x20],rbp
   140041cf2:	xor    r8d,r8d
   140041cf5:	xor    edx,edx
   140041cf7:	xor    ecx,ecx
   140041cf9:	call   0x140030820
   140041cfe:	int3   
   140041cff:	int3   
   140041d00:	mov    QWORD PTR [rsp+0x10],rbx
   140041d05:	mov    QWORD PTR [rsp+0x18],rsi
   140041d0a:	push   rdi
   140041d0b:	sub    rsp,0x130
   140041d12:	mov    rax,QWORD PTR [rip+0x2f337]        # 0x140071050
   140041d19:	xor    rax,rsp
   140041d1c:	mov    QWORD PTR [rsp+0x120],rax
   140041d24:	mov    rdi,rcx
   140041d27:	call   0x140039130
   140041d2c:	mov    r9d,0x78
   140041d32:	lea    r8,[rsp+0x30]
   140041d37:	lea    rbx,[rax+0x98]
   140041d3e:	mov    ecx,DWORD PTR [rbx+0x18]
   140041d41:	neg    ecx
   140041d43:	mov    rcx,rdi
   140041d46:	sbb    edx,edx
   140041d48:	and    edx,0xfffff002
   140041d4e:	add    edx,0x1001
   140041d54:	call   0x14003d17c
   140041d59:	xor    esi,esi
   140041d5b:	test   eax,eax
   140041d5d:	jne    0x140041d67
   140041d5f:	mov    DWORD PTR [rbx+0x10],esi
   140041d62:	lea    eax,[rsi+0x1]
   140041d65:	jmp    0x140041db0
   140041d67:	mov    rcx,QWORD PTR [rbx]
   140041d6a:	lea    rdx,[rsp+0x30]
   140041d6f:	call   0x14002be24
   140041d74:	test   eax,eax
   140041d76:	jne    0x140041da5
   140041d78:	or     r9,0xffffffffffffffff
   140041d7c:	inc    r9
   140041d7f:	cmp    WORD PTR [rdi+r9*2],si
   140041d84:	jne    0x140041d7c
   140041d86:	inc    r9
   140041d89:	lea    rcx,[rbx+0x258]
   140041d90:	mov    r8,rdi
   140041d93:	mov    edx,0x55
   140041d98:	call   0x14003fc14
   140041d9d:	test   eax,eax
   140041d9f:	jne    0x140041dd5
   140041da1:	or     DWORD PTR [rbx+0x10],0x4
   140041da5:	mov    eax,DWORD PTR [rbx+0x10]
   140041da8:	shr    eax,0x2
   140041dab:	not    eax
   140041dad:	and    eax,0x1
   140041db0:	mov    rcx,QWORD PTR [rsp+0x120]
   140041db8:	xor    rcx,rsp
   140041dbb:	call   0x140025df0
   140041dc0:	lea    r11,[rsp+0x130]
   140041dc8:	mov    rbx,QWORD PTR [r11+0x18]
   140041dcc:	mov    rsi,QWORD PTR [r11+0x20]
   140041dd0:	mov    rsp,r11
   140041dd3:	pop    rdi
   140041dd4:	ret    
   140041dd5:	xor    r9d,r9d
   140041dd8:	mov    QWORD PTR [rsp+0x20],rsi
   140041ddd:	xor    r8d,r8d
   140041de0:	xor    edx,edx
   140041de2:	xor    ecx,ecx
   140041de4:	call   0x140030820
   140041de9:	int3   
   140041dea:	int3   
   140041deb:	int3   
   140041dec:	mov    QWORD PTR [rsp+0x10],rbx
   140041df1:	mov    QWORD PTR [rsp+0x18],rsi
   140041df6:	push   rdi
   140041df7:	sub    rsp,0x20
   140041dfb:	xor    esi,esi
   140041dfd:	mov    rdi,rdx
   140041e00:	mov    rbx,rcx
   140041e03:	test   rcx,rcx
   140041e06:	je     0x140041e5e
   140041e08:	cmp    WORD PTR [rcx],si
   140041e0b:	je     0x140041e5e
   140041e0d:	lea    rdx,[rip+0x172dc]        # 0x1400590f0
   140041e14:	call   0x140032c70
   140041e19:	test   eax,eax
   140041e1b:	je     0x140041e5e
   140041e1d:	lea    rdx,[rip+0x172d4]        # 0x1400590f8
   140041e24:	mov    rcx,rbx
   140041e27:	call   0x140032c70
   140041e2c:	test   eax,eax
   140041e2e:	jne    0x140041e54
   140041e30:	lea    rcx,[rdi+0x258]
   140041e37:	mov    edx,0x2000000b
   140041e3c:	lea    r9d,[rsi+0x2]
   140041e40:	lea    r8,[rsp+0x30]
   140041e45:	call   0x14003d17c
   140041e4a:	test   eax,eax
   140041e4c:	je     0x140041e7e
   140041e4e:	mov    eax,DWORD PTR [rsp+0x30]
   140041e52:	jmp    0x140041e90
   140041e54:	mov    rcx,rbx
   140041e57:	call   0x140038d8c
   140041e5c:	jmp    0x140041e90
   140041e5e:	lea    rcx,[rdi+0x258]
   140041e65:	mov    r9d,0x2
   140041e6b:	lea    r8,[rsp+0x30]
   140041e70:	mov    edx,0x20001004
   140041e75:	call   0x14003d17c
   140041e7a:	test   eax,eax
   140041e7c:	jne    0x140041e82
   140041e7e:	xor    eax,eax
   140041e80:	jmp    0x140041e90
   140041e82:	mov    eax,DWORD PTR [rsp+0x30]
   140041e86:	test   eax,eax
   140041e88:	jne    0x140041e90
   140041e8a:	call   QWORD PTR [rip+0x9460]        # 0x14004b2f0
   140041e90:	mov    rbx,QWORD PTR [rsp+0x38]
   140041e95:	mov    rsi,QWORD PTR [rsp+0x40]
   140041e9a:	add    rsp,0x20
   140041e9e:	pop    rdi
   140041e9f:	ret    
   140041ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140041ea5:	push   rdi
   140041ea6:	sub    rsp,0x40
   140041eaa:	mov    rax,QWORD PTR [rip+0x2f19f]        # 0x140071050
   140041eb1:	xor    rax,rsp
   140041eb4:	mov    QWORD PTR [rsp+0x38],rax
   140041eb9:	mov    r9d,0x9
   140041ebf:	lea    r8,[rsp+0x20]
   140041ec4:	mov    rdi,rcx
   140041ec7:	lea    edx,[r9+0x50]
   140041ecb:	call   0x14003d17c
   140041ed0:	xor    ebx,ebx
   140041ed2:	test   eax,eax
   140041ed4:	je     0x140041ef0
   140041ed6:	mov    r8d,0x9
   140041edc:	lea    rcx,[rsp+0x20]
   140041ee1:	mov    rdx,rdi
   140041ee4:	call   0x140041114
   140041ee9:	test   eax,eax
   140041eeb:	sete   bl
   140041eee:	mov    eax,ebx
   140041ef0:	mov    rcx,QWORD PTR [rsp+0x38]
   140041ef5:	xor    rcx,rsp
   140041ef8:	call   0x140025df0
   140041efd:	mov    rbx,QWORD PTR [rsp+0x58]
   140041f02:	add    rsp,0x40
   140041f06:	pop    rdi
   140041f07:	ret    
   140041f08:	mov    rax,rsp
   140041f0b:	mov    QWORD PTR [rax+0x8],rbx
   140041f0f:	mov    QWORD PTR [rax+0x10],rbp
   140041f13:	mov    QWORD PTR [rax+0x18],rsi
   140041f17:	mov    QWORD PTR [rax+0x20],rdi
   140041f1b:	push   r12
   140041f1d:	push   r14
   140041f1f:	push   r15
   140041f21:	sub    rsp,0x20
   140041f25:	xor    ebx,ebx
   140041f27:	mov    r15,r8
   140041f2a:	mov    edi,edx
   140041f2c:	mov    r12,rcx
   140041f2f:	mov    eax,0x1
   140041f34:	mov    esi,ebx
   140041f36:	test   edx,edx
   140041f38:	js     0x140041f7b
   140041f3a:	test   eax,eax
   140041f3c:	je     0x140041f7d
   140041f3e:	mov    rcx,QWORD PTR [r15]
   140041f41:	lea    eax,[rsi+rdi*1]
   140041f44:	cdq    
   140041f45:	sub    eax,edx
   140041f47:	sar    eax,1
   140041f49:	movsxd rbp,eax
   140041f4c:	mov    r14,rbp
   140041f4f:	shl    r14,0x4
   140041f53:	mov    rdx,QWORD PTR [r14+r12*1]
   140041f57:	call   0x14002be24
   140041f5c:	test   eax,eax
   140041f5e:	jne    0x140041f6d
   140041f60:	lea    rcx,[r12+0x8]
   140041f65:	add    rcx,r14
   140041f68:	mov    QWORD PTR [r15],rcx
   140041f6b:	jmp    0x140041f77
   140041f6d:	jns    0x140041f74
   140041f6f:	lea    edi,[rbp-0x1]
   140041f72:	jmp    0x140041f77
   140041f74:	lea    esi,[rbp+0x1]
   140041f77:	cmp    esi,edi
   140041f79:	jle    0x140041f3a
   140041f7b:	test   eax,eax
   140041f7d:	mov    rbp,QWORD PTR [rsp+0x48]
   140041f82:	sete   bl
   140041f85:	mov    rsi,QWORD PTR [rsp+0x50]
   140041f8a:	mov    eax,ebx
   140041f8c:	mov    rbx,QWORD PTR [rsp+0x40]
   140041f91:	mov    rdi,QWORD PTR [rsp+0x58]
   140041f96:	add    rsp,0x20
   140041f9a:	pop    r15
   140041f9c:	pop    r14
   140041f9e:	pop    r12
   140041fa0:	ret    
   140041fa1:	int3   
   140041fa2:	int3   
   140041fa3:	int3   
   140041fa4:	mov    rax,rsp
   140041fa7:	mov    QWORD PTR [rax+0x8],rbx
   140041fab:	mov    QWORD PTR [rax+0x10],rbp
   140041faf:	mov    QWORD PTR [rax+0x18],rsi
   140041fb3:	mov    QWORD PTR [rax+0x20],rdi
   140041fb7:	push   r12
   140041fb9:	push   r14
   140041fbb:	push   r15
   140041fbd:	sub    rsp,0x30
   140041fc1:	mov    rbp,r8
   140041fc4:	mov    rsi,rdx
   140041fc7:	mov    r14,rcx
   140041fca:	call   0x140039130
   140041fcf:	xor    r12d,r12d
   140041fd2:	lea    rbx,[rax+0x98]
   140041fd9:	lea    rax,[r14+0x80]
   140041fe0:	mov    DWORD PTR [rbx+0x10],r12d
   140041fe4:	lea    r15,[rbx+0x258]
   140041feb:	mov    QWORD PTR [rbx],r14
   140041fee:	lea    rdi,[rbx+0x8]
   140041ff2:	mov    WORD PTR [r15],r12w
   140041ff6:	mov    QWORD PTR [rdi],rax
   140041ff9:	cmp    WORD PTR [rax],r12w
   140041ffd:	je     0x140042013
   140041fff:	mov    r8,rdi
   140042002:	lea    edx,[r12+0x16]
   140042007:	lea    rcx,[rip+0x16562]        # 0x140058570
   14004200e:	call   0x140041f08
   140042013:	mov    rax,QWORD PTR [rbx]
   140042016:	mov    rcx,rbx
   140042019:	cmp    WORD PTR [rax],r12w
   14004201d:	je     0x14004206c
   14004201f:	mov    rax,QWORD PTR [rdi]
   140042022:	cmp    WORD PTR [rax],r12w
   140042026:	je     0x14004202f
   140042028:	call   0x1400417e0
   14004202d:	jmp    0x140042034
   14004202f:	call   0x1400418b0
   140042034:	cmp    DWORD PTR [rbx+0x10],r12d
   140042038:	jne    0x14004207b
   14004203a:	mov    r8,rbx
   14004203d:	lea    rcx,[rip+0x1610c]        # 0x140058150
   140042044:	mov    edx,0x40
   140042049:	call   0x140041f08
   14004204e:	test   eax,eax
   140042050:	je     0x140042071
   140042052:	mov    rax,QWORD PTR [rdi]
   140042055:	mov    rcx,rbx
   140042058:	cmp    WORD PTR [rax],r12w
   14004205c:	je     0x140042065
   14004205e:	call   0x1400417e0
   140042063:	jmp    0x140042071
   140042065:	call   0x1400418b0
   14004206a:	jmp    0x140042071
   14004206c:	call   0x140041738
   140042071:	cmp    DWORD PTR [rbx+0x10],r12d
   140042075:	je     0x14004218b
   14004207b:	lea    rcx,[r14+0x100]
   140042082:	mov    rdx,rbx
   140042085:	call   0x140041dec
   14004208a:	mov    ebx,eax
   14004208c:	test   eax,eax
   14004208e:	je     0x14004218b
   140042094:	lea    ecx,[rax-0xfde8]
   14004209a:	cmp    ecx,0x1
   14004209d:	jbe    0x14004218b
   1400420a3:	movzx  ecx,ax
   1400420a6:	call   QWORD PTR [rip+0x92b4]        # 0x14004b360
   1400420ac:	test   eax,eax
   1400420ae:	je     0x14004218b
   1400420b4:	test   rsi,rsi
   1400420b7:	je     0x1400420bb
   1400420b9:	mov    DWORD PTR [rsi],ebx
   1400420bb:	test   rbp,rbp
   1400420be:	je     0x140042184
   1400420c4:	lea    rsi,[rbp+0x120]
   1400420cb:	or     r9,0xffffffffffffffff
   1400420cf:	mov    WORD PTR [rsi],r12w
   1400420d3:	inc    r9
   1400420d6:	cmp    WORD PTR [r15+r9*2],r12w
   1400420db:	jne    0x1400420d3
   1400420dd:	inc    r9
   1400420e0:	mov    r8,r15
   1400420e3:	mov    edx,0x55
   1400420e8:	mov    rcx,rsi
   1400420eb:	call   0x14003fc14
   1400420f0:	test   eax,eax
   1400420f2:	jne    0x1400421ac
   1400420f8:	lea    r9d,[rax+0x40]
   1400420fc:	mov    r8,rbp
   1400420ff:	mov    edx,0x1001
   140042104:	mov    rcx,rsi
   140042107:	call   0x14003d17c
   14004210c:	test   eax,eax
   14004210e:	je     0x14004218b
   140042110:	lea    rdi,[rbp+0x80]
   140042117:	mov    r9d,0x40
   14004211d:	mov    r8,rdi
   140042120:	mov    edx,0x1002
   140042125:	mov    rcx,rsi
   140042128:	call   0x14003d17c
   14004212d:	test   eax,eax
   14004212f:	je     0x14004218b
   140042131:	mov    edx,0x5f
   140042136:	mov    rcx,rdi
   140042139:	call   0x140047e10
   14004213e:	test   rax,rax
   140042141:	jne    0x140042153
   140042143:	lea    edx,[rax+0x2e]
   140042146:	mov    rcx,rdi
   140042149:	call   0x140047e10
   14004214e:	test   rax,rax
   140042151:	je     0x14004216c
   140042153:	mov    r9d,0x40
   140042159:	mov    r8,rdi
   14004215c:	mov    rcx,rsi
   14004215f:	lea    edx,[r9-0x39]
   140042163:	call   0x14003d17c
   140042168:	test   eax,eax
   14004216a:	je     0x14004218b
   14004216c:	mov    r9d,0xa
   140042172:	lea    rdx,[rbp+0x100]
   140042179:	mov    ecx,ebx
   14004217b:	lea    r8d,[r9+0x6]
   14004217f:	call   0x140046b14
   140042184:	mov    eax,0x1
   140042189:	jmp    0x14004218d
   14004218b:	xor    eax,eax
   14004218d:	mov    rbx,QWORD PTR [rsp+0x50]
   140042192:	mov    rbp,QWORD PTR [rsp+0x58]
   140042197:	mov    rsi,QWORD PTR [rsp+0x60]
   14004219c:	mov    rdi,QWORD PTR [rsp+0x68]
   1400421a1:	add    rsp,0x30
   1400421a5:	pop    r15
   1400421a7:	pop    r14
   1400421a9:	pop    r12
   1400421ab:	ret    
   1400421ac:	xor    r9d,r9d
   1400421af:	mov    QWORD PTR [rsp+0x20],r12
   1400421b4:	xor    r8d,r8d
   1400421b7:	xor    edx,edx
   1400421b9:	xor    ecx,ecx
   1400421bb:	call   0x140030820
   1400421c0:	int3   
   1400421c1:	int3   
   1400421c2:	int3   
   1400421c3:	int3   
   1400421c4:	mov    QWORD PTR [rsp+0x10],rbx
   1400421c9:	mov    QWORD PTR [rsp+0x18],rbp
   1400421ce:	mov    QWORD PTR [rsp+0x20],rsi
   1400421d3:	push   rdi
   1400421d4:	sub    rsp,0x120
   1400421db:	mov    rax,QWORD PTR [rip+0x2ee6e]        # 0x140071050
   1400421e2:	xor    rax,rsp
   1400421e5:	mov    QWORD PTR [rsp+0x110],rax
   1400421ed:	mov    rbx,rcx
   1400421f0:	call   0x140039130
   1400421f5:	mov    rbp,rax
   1400421f8:	call   0x140039130
   1400421fd:	mov    rcx,rbx
   140042200:	mov    rdi,QWORD PTR [rax+0x3a0]
   140042207:	call   0x140042758
   14004220c:	mov    ecx,DWORD PTR [rbp+0xb4]
   140042212:	lea    r8,[rsp+0x20]
   140042217:	neg    ecx
   140042219:	mov    r9d,0x78
   14004221f:	mov    ecx,eax
   140042221:	mov    esi,eax
   140042223:	sbb    edx,edx
   140042225:	and    edx,0xfffff005
   14004222b:	add    edx,0x1002
   140042231:	call   QWORD PTR [rip+0x9071]        # 0x14004b2a8
   140042237:	xor    ebx,ebx
   140042239:	test   eax,eax
   14004223b:	jne    0x140042244
   14004223d:	mov    DWORD PTR [rdi],ebx
   14004223f:	lea    eax,[rbx+0x1]
   140042242:	jmp    0x140042287
   140042244:	mov    rcx,QWORD PTR [rbp+0xa0]
   14004224b:	lea    rdx,[rsp+0x20]
   140042250:	call   0x14002be24
   140042255:	test   eax,eax
   140042257:	jne    0x14004227d
   140042259:	lea    rcx,[rip+0x16ea0]        # 0x140059100
   140042260:	cmp    si,WORD PTR [rcx]
   140042263:	je     0x14004227d
   140042265:	inc    ebx
   140042267:	add    rcx,0x2
   14004226b:	movsxd rax,ebx
   14004226e:	cmp    rax,0xa
   140042272:	jb     0x140042260
   140042274:	or     DWORD PTR [rdi],0x4
   140042277:	mov    DWORD PTR [rdi+0x8],esi
   14004227a:	mov    DWORD PTR [rdi+0x4],esi
   14004227d:	mov    eax,DWORD PTR [rdi]
   14004227f:	shr    eax,0x2
   140042282:	not    eax
   140042284:	and    eax,0x1
   140042287:	mov    rcx,QWORD PTR [rsp+0x110]
   14004228f:	xor    rcx,rsp
   140042292:	call   0x140025df0
   140042297:	lea    r11,[rsp+0x120]
   14004229f:	mov    rbx,QWORD PTR [r11+0x18]
   1400422a3:	mov    rbp,QWORD PTR [r11+0x20]
   1400422a7:	mov    rsi,QWORD PTR [r11+0x28]
   1400422ab:	mov    rsp,r11
   1400422ae:	pop    rdi
   1400422af:	ret    
   1400422b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400422b5:	push   rdi
   1400422b6:	sub    rsp,0x20
   1400422ba:	mov    rbx,rcx
   1400422bd:	call   0x140039130
   1400422c2:	or     r8,0xffffffffffffffff
   1400422c6:	mov    r9,r8
   1400422c9:	xor    edi,edi
   1400422cb:	lea    rdx,[rax+0x98]
   1400422d2:	mov    rax,QWORD PTR [rdx]
   1400422d5:	inc    r9
   1400422d8:	cmp    WORD PTR [rax+r9*2],di
   1400422dd:	jne    0x1400422d5
   1400422df:	mov    eax,edi
   1400422e1:	cmp    r9,0x3
   1400422e5:	sete   al
   1400422e8:	mov    DWORD PTR [rdx+0x18],eax
   1400422eb:	mov    rax,QWORD PTR [rdx+0x8]
   1400422ef:	inc    r8
   1400422f2:	cmp    WORD PTR [rax+r8*2],di
   1400422f7:	jne    0x1400422ef
   1400422f9:	cmp    r8,0x3
   1400422fd:	mov    eax,edi
   1400422ff:	mov    r8d,0x2
   140042305:	sete   al
   140042308:	mov    DWORD PTR [rdx+0x1c],eax
   14004230b:	mov    DWORD PTR [rbx+0x4],edi
   14004230e:	cmp    DWORD PTR [rdx+0x18],edi
   140042311:	jne    0x14004233e
   140042313:	mov    rcx,QWORD PTR [rdx]
   140042316:	mov    r10d,edi
   140042319:	movzx  r9d,WORD PTR [rcx]
   14004231d:	add    rcx,r8
   140042320:	lea    eax,[r9-0x41]
   140042324:	cmp    ax,0x19
   140042328:	jbe    0x140042336
   14004232a:	sub    r9w,0x61
   14004232f:	cmp    r9w,0x19
   140042334:	ja     0x14004233b
   140042336:	inc    r10d
   140042339:	jmp    0x140042319
   14004233b:	mov    r8d,r10d
   14004233e:	mov    DWORD PTR [rdx+0x14],r8d
   140042342:	lea    rcx,[rip+0xcf]        # 0x140042418
   140042349:	mov    edx,0x1
   14004234e:	call   QWORD PTR [rip+0x8fec]        # 0x14004b340
   140042354:	mov    ecx,DWORD PTR [rbx]
   140042356:	test   cl,0x7
   140042359:	setne  dl
   14004235c:	bt     ecx,0x9
   140042360:	setb   al
   140042363:	and    dl,al
   140042365:	bt     ecx,0x8
   140042369:	setb   al
   14004236c:	test   al,dl
   14004236e:	jne    0x140042372
   140042370:	mov    DWORD PTR [rbx],edi
   140042372:	mov    rbx,QWORD PTR [rsp+0x30]
   140042377:	add    rsp,0x20
   14004237b:	pop    rdi
   14004237c:	ret    
   14004237d:	int3   
   14004237e:	int3   
   14004237f:	int3   
   140042380:	mov    QWORD PTR [rsp+0x8],rbx
   140042385:	push   rdi
   140042386:	sub    rsp,0x20
   14004238a:	mov    rbx,rcx
   14004238d:	call   0x140039130
   140042392:	or     r8,0xffffffffffffffff
   140042396:	mov    r10,rax
   140042399:	xor    edi,edi
   14004239b:	mov    rdx,QWORD PTR [rax+0x98]
   1400423a2:	inc    r8
   1400423a5:	cmp    WORD PTR [rdx+r8*2],di
   1400423aa:	jne    0x1400423a2
   1400423ac:	mov    eax,edi
   1400423ae:	cmp    r8,0x3
   1400423b2:	mov    ecx,0x2
   1400423b7:	sete   al
   1400423ba:	mov    DWORD PTR [r10+0xb0],eax
   1400423c1:	test   eax,eax
   1400423c3:	jne    0x1400423ed
   1400423c5:	mov    r9d,edi
   1400423c8:	movzx  r8d,WORD PTR [rdx]
   1400423cc:	add    rdx,rcx
   1400423cf:	lea    eax,[r8-0x41]
   1400423d3:	cmp    ax,0x19
   1400423d7:	jbe    0x1400423e5
   1400423d9:	sub    r8w,0x61
   1400423de:	cmp    r8w,0x19
   1400423e3:	ja     0x1400423ea
   1400423e5:	inc    r9d
   1400423e8:	jmp    0x1400423c8
   1400423ea:	mov    ecx,r9d
   1400423ed:	mov    DWORD PTR [r10+0xac],ecx
   1400423f4:	mov    edx,0x1
   1400423f9:	lea    rcx,[rip+0x25c]        # 0x14004265c
   140042400:	call   QWORD PTR [rip+0x8f3a]        # 0x14004b340
   140042406:	test   BYTE PTR [rbx],0x4
   140042409:	jne    0x14004240d
   14004240b:	mov    DWORD PTR [rbx],edi
   14004240d:	mov    rbx,QWORD PTR [rsp+0x30]
   140042412:	add    rsp,0x20
   140042416:	pop    rdi
   140042417:	ret    
   140042418:	mov    QWORD PTR [rsp+0x10],rbx
   14004241d:	mov    QWORD PTR [rsp+0x18],rsi
   140042422:	push   rdi
   140042423:	push   r14
   140042425:	push   r15
   140042427:	sub    rsp,0x120
   14004242e:	mov    rax,QWORD PTR [rip+0x2ec1b]        # 0x140071050
   140042435:	xor    rax,rsp
   140042438:	mov    QWORD PTR [rsp+0x110],rax
   140042440:	mov    rbx,rcx
   140042443:	call   0x140039130
   140042448:	lea    rsi,[rax+0x98]
   14004244f:	call   0x140039130
   140042454:	mov    rcx,rbx
   140042457:	mov    rdi,QWORD PTR [rax+0x3a0]
   14004245e:	call   0x140042758
   140042463:	mov    ecx,DWORD PTR [rsi+0x1c]
   140042466:	lea    r8,[rsp+0x20]
   14004246b:	neg    ecx
   14004246d:	mov    r9d,0x78
   140042473:	mov    ecx,eax
   140042475:	mov    ebx,eax
   140042477:	sbb    edx,edx
   140042479:	and    edx,0xfffff005
   14004247f:	add    edx,0x1002
   140042485:	call   QWORD PTR [rip+0x8e1d]        # 0x14004b2a8
   14004248b:	xor    r15d,r15d
   14004248e:	test   eax,eax
   140042490:	jne    0x14004249f
   140042492:	mov    DWORD PTR [rdi],r15d
   140042495:	mov    eax,0x1
   14004249a:	jmp    0x140042633
   14004249f:	mov    rcx,QWORD PTR [rsi+0x8]
   1400424a3:	lea    rdx,[rsp+0x20]
   1400424a8:	call   0x14002be24
   1400424ad:	or     r14,0xffffffffffffffff
   1400424b1:	test   eax,eax
   1400424b3:	jne    0x14004256b
   1400424b9:	mov    eax,DWORD PTR [rsi+0x18]
   1400424bc:	lea    r9d,[r14+0x79]
   1400424c0:	neg    eax
   1400424c2:	lea    r8,[rsp+0x20]
   1400424c7:	mov    ecx,ebx
   1400424c9:	sbb    edx,edx
   1400424cb:	and    edx,0xfffff002
   1400424d1:	add    edx,0x1001
   1400424d7:	call   QWORD PTR [rip+0x8dcb]        # 0x14004b2a8
   1400424dd:	test   eax,eax
   1400424df:	je     0x140042492
   1400424e1:	mov    rcx,QWORD PTR [rsi]
   1400424e4:	lea    rdx,[rsp+0x20]
   1400424e9:	call   0x14002be24
   1400424ee:	test   eax,eax
   1400424f0:	jne    0x1400424fd
   1400424f2:	or     DWORD PTR [rdi],0x304
   1400424f8:	mov    DWORD PTR [rdi+0x4],ebx
   1400424fb:	jmp    0x140042568
   1400424fd:	test   BYTE PTR [rdi],0x2
   140042500:	jne    0x14004256b
   140042502:	cmp    DWORD PTR [rsi+0x14],r15d
   140042506:	je     0x14004253d
   140042508:	movsxd r8,DWORD PTR [rsi+0x14]
   14004250c:	lea    rdx,[rsp+0x20]
   140042511:	mov    rcx,QWORD PTR [rsi]
   140042514:	call   0x14002c5a8
   140042519:	test   eax,eax
   14004251b:	jne    0x14004253d
   14004251d:	or     DWORD PTR [rdi],0x2
   140042520:	mov    rax,r14
   140042523:	mov    DWORD PTR [rdi+0x8],ebx
   140042526:	mov    rcx,QWORD PTR [rsi]
   140042529:	inc    rax
   14004252c:	cmp    WORD PTR [rcx+rax*2],r15w
   140042531:	jne    0x140042529
   140042533:	cmp    eax,DWORD PTR [rsi+0x14]
   140042536:	jne    0x14004256b
   140042538:	mov    DWORD PTR [rdi+0x4],ebx
   14004253b:	jmp    0x14004256b
   14004253d:	mov    ecx,DWORD PTR [rdi]
   14004253f:	test   cl,0x1
   140042542:	jne    0x14004256b
   140042544:	mov    r8d,r15d
   140042547:	lea    rdx,[rip+0x16bb2]        # 0x140059100
   14004254e:	cmp    bx,WORD PTR [rdx]
   140042551:	je     0x14004256b
   140042553:	inc    r8d
   140042556:	add    rdx,0x2
   14004255a:	movsxd rax,r8d
   14004255d:	cmp    rax,0xa
   140042561:	jb     0x14004254e
   140042563:	or     ecx,0x1
   140042566:	mov    DWORD PTR [rdi],ecx
   140042568:	mov    DWORD PTR [rdi+0x8],ebx
   14004256b:	mov    eax,DWORD PTR [rdi]
   14004256d:	mov    ecx,0x300
   140042572:	and    eax,ecx
   140042574:	cmp    eax,ecx
   140042576:	je     0x140042629
   14004257c:	mov    eax,DWORD PTR [rsi+0x18]
   14004257f:	lea    r8,[rsp+0x20]
   140042584:	neg    eax
   140042586:	mov    r9d,0x78
   14004258c:	mov    ecx,ebx
   14004258e:	sbb    edx,edx
   140042590:	and    edx,0xfffff002
   140042596:	add    edx,0x1001
   14004259c:	call   QWORD PTR [rip+0x8d06]        # 0x14004b2a8
   1400425a2:	test   eax,eax
   1400425a4:	je     0x140042492
   1400425aa:	mov    rcx,QWORD PTR [rsi]
   1400425ad:	lea    rdx,[rsp+0x20]
   1400425b2:	call   0x14002be24
   1400425b7:	test   eax,eax
   1400425b9:	jne    0x1400425ef
   1400425bb:	bts    DWORD PTR [rdi],0x9
   1400425bf:	mov    eax,DWORD PTR [rdi]
   1400425c1:	cmp    DWORD PTR [rsi+0x18],r15d
   1400425c5:	je     0x1400425cf
   1400425c7:	bts    eax,0x8
   1400425cb:	mov    DWORD PTR [rdi],eax
   1400425cd:	jmp    0x140042620
   1400425cf:	cmp    DWORD PTR [rsi+0x14],r15d
   1400425d3:	je     0x1400425c7
   1400425d5:	mov    rcx,QWORD PTR [rsi]
   1400425d8:	inc    r14
   1400425db:	cmp    WORD PTR [rcx+r14*2],r15w
   1400425e0:	jne    0x1400425d8
   1400425e2:	cmp    r14d,DWORD PTR [rsi+0x14]
   1400425e6:	jne    0x1400425c7
   1400425e8:	mov    edx,0x1
   1400425ed:	jmp    0x14004260e
   1400425ef:	cmp    DWORD PTR [rsi+0x18],r15d
   1400425f3:	jne    0x140042629
   1400425f5:	cmp    DWORD PTR [rsi+0x14],r15d
   1400425f9:	je     0x140042629
   1400425fb:	mov    rcx,QWORD PTR [rsi]
   1400425fe:	lea    rdx,[rsp+0x20]
   140042603:	call   0x14002be24
   140042608:	test   eax,eax
   14004260a:	jne    0x140042629
   14004260c:	xor    edx,edx
   14004260e:	mov    r8,rdi
   140042611:	mov    ecx,ebx
   140042613:	call   0x140042858
   140042618:	test   eax,eax
   14004261a:	je     0x140042629
   14004261c:	bts    DWORD PTR [rdi],0x8
   140042620:	cmp    DWORD PTR [rdi+0x4],r15d
   140042624:	jne    0x140042629
   140042626:	mov    DWORD PTR [rdi+0x4],ebx
   140042629:	mov    eax,DWORD PTR [rdi]
   14004262b:	shr    eax,0x2
   14004262e:	not    eax
   140042630:	and    eax,0x1
   140042633:	mov    rcx,QWORD PTR [rsp+0x110]
   14004263b:	xor    rcx,rsp
   14004263e:	call   0x140025df0
   140042643:	lea    r11,[rsp+0x120]
   14004264b:	mov    rbx,QWORD PTR [r11+0x28]
   14004264f:	mov    rsi,QWORD PTR [r11+0x30]
   140042653:	mov    rsp,r11
   140042656:	pop    r15
   140042658:	pop    r14
   14004265a:	pop    rdi
   14004265b:	ret    
   14004265c:	mov    QWORD PTR [rsp+0x10],rbx
   140042661:	mov    QWORD PTR [rsp+0x18],rsi
   140042666:	push   rdi
   140042667:	sub    rsp,0x120
   14004266e:	mov    rax,QWORD PTR [rip+0x2e9db]        # 0x140071050
   140042675:	xor    rax,rsp
   140042678:	mov    QWORD PTR [rsp+0x110],rax
   140042680:	mov    rbx,rcx
   140042683:	call   0x140039130
   140042688:	lea    rsi,[rax+0x98]
   14004268f:	call   0x140039130
   140042694:	mov    rcx,rbx
   140042697:	mov    rdi,QWORD PTR [rax+0x3a0]
   14004269e:	call   0x140042758
   1400426a3:	mov    ecx,DWORD PTR [rsi+0x18]
   1400426a6:	lea    r8,[rsp+0x20]
   1400426ab:	neg    ecx
   1400426ad:	mov    r9d,0x78
   1400426b3:	mov    ecx,eax
   1400426b5:	mov    ebx,eax
   1400426b7:	sbb    edx,edx
   1400426b9:	and    edx,0xfffff002
   1400426bf:	add    edx,0x1001
   1400426c5:	call   QWORD PTR [rip+0x8bdd]        # 0x14004b2a8
   1400426cb:	test   eax,eax
   1400426cd:	jne    0x1400426d8
   1400426cf:	and    DWORD PTR [rdi],eax
   1400426d1:	mov    eax,0x1
   1400426d6:	jmp    0x140042733
   1400426d8:	mov    rcx,QWORD PTR [rsi]
   1400426db:	lea    rdx,[rsp+0x20]
   1400426e0:	call   0x14002be24
   1400426e5:	test   eax,eax
   1400426e7:	jne    0x1400426f3
   1400426e9:	cmp    DWORD PTR [rsi+0x18],eax
   1400426ec:	jne    0x140042720
   1400426ee:	lea    edx,[rax+0x1]
   1400426f1:	jmp    0x140042712
   1400426f3:	cmp    DWORD PTR [rsi+0x18],0x0
   1400426f7:	jne    0x140042729
   1400426f9:	cmp    DWORD PTR [rsi+0x14],0x0
   1400426fd:	je     0x140042729
   1400426ff:	mov    rcx,QWORD PTR [rsi]
   140042702:	lea    rdx,[rsp+0x20]
   140042707:	call   0x14002be24
   14004270c:	test   eax,eax
   14004270e:	jne    0x140042729
   140042710:	xor    edx,edx
   140042712:	mov    r8,rdi
   140042715:	mov    ecx,ebx
   140042717:	call   0x140042858
   14004271c:	test   eax,eax
   14004271e:	je     0x140042729
   140042720:	or     DWORD PTR [rdi],0x4
   140042723:	mov    DWORD PTR [rdi+0x4],ebx
   140042726:	mov    DWORD PTR [rdi+0x8],ebx
   140042729:	mov    eax,DWORD PTR [rdi]
   14004272b:	shr    eax,0x2
   14004272e:	not    eax
   140042730:	and    eax,0x1
   140042733:	mov    rcx,QWORD PTR [rsp+0x110]
   14004273b:	xor    rcx,rsp
   14004273e:	call   0x140025df0
   140042743:	lea    r11,[rsp+0x120]
   14004274b:	mov    rbx,QWORD PTR [r11+0x18]
   14004274f:	mov    rsi,QWORD PTR [r11+0x20]
   140042753:	mov    rsp,r11
   140042756:	pop    rdi
   140042757:	ret    
   140042758:	movzx  edx,WORD PTR [rcx]
   14004275b:	xor    r10d,r10d
   14004275e:	mov    r8d,r10d
   140042761:	mov    r9,rcx
   140042764:	jmp    0x14004279d
   140042766:	lea    eax,[rdx-0x61]
   140042769:	lea    r9,[r9+0x2]
   14004276d:	cmp    ax,0x5
   140042771:	ja     0x14004277a
   140042773:	mov    eax,0xffd9
   140042778:	jmp    0x140042788
   14004277a:	lea    eax,[rdx-0x41]
   14004277d:	cmp    ax,0x5
   140042781:	ja     0x14004278b
   140042783:	mov    eax,0xfff9
   140042788:	add    dx,ax
   14004278b:	shl    r8d,0x4
   14004278f:	movzx  ecx,dx
   140042792:	add    r8d,0xffffffd0
   140042796:	movzx  edx,WORD PTR [r9]
   14004279a:	add    r8d,ecx
   14004279d:	test   dx,dx
   1400427a0:	jne    0x140042766
   1400427a2:	mov    eax,r8d
   1400427a5:	ret    
   1400427a6:	int3   
   1400427a7:	int3   
   1400427a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400427ad:	mov    QWORD PTR [rsp+0x18],rsi
   1400427b2:	push   rdi
   1400427b3:	sub    rsp,0x20
   1400427b7:	xor    esi,esi
   1400427b9:	mov    rdi,rdx
   1400427bc:	mov    rbx,rcx
   1400427bf:	test   rcx,rcx
   1400427c2:	je     0x140042817
   1400427c4:	cmp    WORD PTR [rcx],si
   1400427c7:	je     0x140042817
   1400427c9:	lea    rdx,[rip+0x16920]        # 0x1400590f0
   1400427d0:	call   0x140032c70
   1400427d5:	test   eax,eax
   1400427d7:	je     0x140042817
   1400427d9:	lea    rdx,[rip+0x16918]        # 0x1400590f8
   1400427e0:	mov    rcx,rbx
   1400427e3:	call   0x140032c70
   1400427e8:	test   eax,eax
   1400427ea:	jne    0x14004280d
   1400427ec:	mov    ecx,DWORD PTR [rdi+0x8]
   1400427ef:	lea    r9d,[rsi+0x2]
   1400427f3:	lea    r8,[rsp+0x30]
   1400427f8:	mov    edx,0x2000000b
   1400427fd:	call   QWORD PTR [rip+0x8aa5]        # 0x14004b2a8
   140042803:	test   eax,eax
   140042805:	je     0x140042834
   140042807:	mov    eax,DWORD PTR [rsp+0x30]
   14004280b:	jmp    0x140042846
   14004280d:	mov    rcx,rbx
   140042810:	call   0x140038d8c
   140042815:	jmp    0x140042846
   140042817:	mov    ecx,DWORD PTR [rdi+0x8]
   14004281a:	lea    r8,[rsp+0x30]
   14004281f:	mov    r9d,0x2
   140042825:	mov    edx,0x20001004
   14004282a:	call   QWORD PTR [rip+0x8a78]        # 0x14004b2a8
   140042830:	test   eax,eax
   140042832:	jne    0x140042838
   140042834:	xor    eax,eax
   140042836:	jmp    0x140042846
   140042838:	mov    eax,DWORD PTR [rsp+0x30]
   14004283c:	test   eax,eax
   14004283e:	jne    0x140042846
   140042840:	call   QWORD PTR [rip+0x8aaa]        # 0x14004b2f0
   140042846:	mov    rbx,QWORD PTR [rsp+0x38]
   14004284b:	mov    rsi,QWORD PTR [rsp+0x40]
   140042850:	add    rsp,0x20
   140042854:	pop    rdi
   140042855:	ret    
   140042856:	int3   
   140042857:	int3   
   140042858:	mov    QWORD PTR [rsp+0x10],rbx
   14004285d:	mov    QWORD PTR [rsp+0x18],rsi
   140042862:	push   rdi
   140042863:	sub    rsp,0x20
   140042867:	mov    esi,edx
   140042869:	mov    ebx,ecx
   14004286b:	call   0x140039130
   140042870:	mov    ecx,ebx
   140042872:	lea    r8,[rsp+0x30]
   140042877:	and    ecx,0x3ff
   14004287d:	mov    r9d,0x2
   140042883:	bts    ecx,0xa
   140042887:	mov    edx,0x20000001
   14004288c:	mov    rdi,rax
   14004288f:	call   QWORD PTR [rip+0x8a13]        # 0x14004b2a8
   140042895:	xor    r10d,r10d
   140042898:	test   eax,eax
   14004289a:	jne    0x1400428a0
   14004289c:	xor    eax,eax
   14004289e:	jmp    0x1400428f3
   1400428a0:	cmp    ebx,DWORD PTR [rsp+0x30]
   1400428a4:	je     0x1400428ee
   1400428a6:	test   esi,esi
   1400428a8:	je     0x1400428ee
   1400428aa:	mov    r9,QWORD PTR [rdi+0x98]
   1400428b1:	mov    r8d,r10d
   1400428b4:	movzx  edx,WORD PTR [r9]
   1400428b8:	lea    rcx,[r9+0x2]
   1400428bc:	lea    eax,[rdx-0x41]
   1400428bf:	cmp    ax,0x19
   1400428c3:	jbe    0x1400428cf
   1400428c5:	sub    dx,0x61
   1400428c9:	cmp    dx,0x19
   1400428cd:	ja     0x1400428db
   1400428cf:	movzx  edx,WORD PTR [rcx]
   1400428d2:	inc    r8d
   1400428d5:	add    rcx,0x2
   1400428d9:	jmp    0x1400428bc
   1400428db:	or     rax,0xffffffffffffffff
   1400428df:	inc    rax
   1400428e2:	cmp    WORD PTR [r9+rax*2],r10w
   1400428e7:	jne    0x1400428df
   1400428e9:	cmp    r8d,eax
   1400428ec:	je     0x14004289c
   1400428ee:	mov    eax,0x1
   1400428f3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400428f8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400428fd:	add    rsp,0x20
   140042901:	pop    rdi
   140042902:	ret    
   140042903:	int3   
   140042904:	mov    rax,rsp
   140042907:	mov    QWORD PTR [rax+0x8],rbx
   14004290b:	mov    QWORD PTR [rax+0x10],rbp
   14004290f:	mov    QWORD PTR [rax+0x18],rsi
   140042913:	mov    QWORD PTR [rax+0x20],rdi
   140042917:	push   r14
   140042919:	sub    rsp,0x20
   14004291d:	xor    esi,esi
   14004291f:	mov    r14,r8
   140042922:	mov    ebx,edx
   140042924:	mov    rbp,rcx
   140042927:	test   edx,edx
   140042929:	js     0x14004295b
   14004292b:	mov    rcx,QWORD PTR [r14]
   14004292e:	lea    eax,[rsi+rbx*1]
   140042931:	cdq    
   140042932:	sub    eax,edx
   140042934:	sar    eax,1
   140042936:	movsxd rdi,eax
   140042939:	mov    rdx,rdi
   14004293c:	add    rdx,rdx
   14004293f:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
   140042944:	call   0x14002be24
   140042949:	test   eax,eax
   14004294b:	je     0x140042978
   14004294d:	jns    0x140042954
   14004294f:	lea    ebx,[rdi-0x1]
   140042952:	jmp    0x140042957
   140042954:	lea    esi,[rdi+0x1]
   140042957:	cmp    esi,ebx
   140042959:	jle    0x14004292b
   14004295b:	xor    al,al
   14004295d:	mov    rbx,QWORD PTR [rsp+0x30]
   140042962:	mov    rbp,QWORD PTR [rsp+0x38]
   140042967:	mov    rsi,QWORD PTR [rsp+0x40]
   14004296c:	mov    rdi,QWORD PTR [rsp+0x48]
   140042971:	add    rsp,0x20
   140042975:	pop    r14
   140042977:	ret    
   140042978:	mov    rax,rdi
   14004297b:	shl    rax,0x4
   14004297f:	add    rax,0x8
   140042983:	add    rax,rbp
   140042986:	mov    QWORD PTR [r14],rax
   140042989:	mov    al,0x1
   14004298b:	jmp    0x14004295d
   14004298d:	int3   
   14004298e:	int3   
   14004298f:	int3   
   140042990:	rex push rbp
   140042992:	push   rbx
   140042993:	push   rsi
   140042994:	push   rdi
   140042995:	push   r12
   140042997:	push   r14
   140042999:	push   r15
   14004299b:	mov    rbp,rsp
   14004299e:	sub    rsp,0x40
   1400429a2:	mov    rax,QWORD PTR [rip+0x2e6a7]        # 0x140071050
   1400429a9:	xor    rax,rsp
   1400429ac:	mov    QWORD PTR [rbp-0x10],rax
   1400429b0:	mov    rdi,r8
   1400429b3:	mov    r15,rdx
   1400429b6:	mov    r14,rcx
   1400429b9:	call   0x140039130
   1400429be:	mov    rsi,rax
   1400429c1:	xor    eax,eax
   1400429c3:	mov    QWORD PTR [rbp-0x20],rax
   1400429c7:	mov    DWORD PTR [rbp-0x18],eax
   1400429ca:	call   0x140039130
   1400429cf:	lea    rcx,[rbp-0x20]
   1400429d3:	xor    r12d,r12d
   1400429d6:	lea    rbx,[rsi+0xa0]
   1400429dd:	mov    QWORD PTR [rax+0x3a0],rcx
   1400429e4:	lea    rax,[r14+0x80]
   1400429eb:	mov    QWORD PTR [rsi+0x98],r14
   1400429f2:	mov    QWORD PTR [rbx],rax
   1400429f5:	test   rax,rax
   1400429f8:	je     0x140042a17
   1400429fa:	cmp    WORD PTR [rax],r12w
   1400429fe:	je     0x140042a17
   140042a00:	mov    edx,DWORD PTR [rip+0x15cda]        # 0x1400586e0
   140042a06:	lea    rcx,[rip+0x15b63]        # 0x140058570
   140042a0d:	dec    edx
   140042a0f:	mov    r8,rbx
   140042a12:	call   0x140042904
   140042a17:	mov    DWORD PTR [rbp-0x20],r12d
   140042a1b:	mov    rax,QWORD PTR [rsi+0x98]
   140042a22:	test   rax,rax
   140042a25:	je     0x140042aa0
   140042a27:	cmp    WORD PTR [rax],r12w
   140042a2b:	je     0x140042aa0
   140042a2d:	mov    rax,QWORD PTR [rbx]
   140042a30:	test   rax,rax
   140042a33:	je     0x140042a46
   140042a35:	cmp    WORD PTR [rax],r12w
   140042a39:	je     0x140042a46
   140042a3b:	lea    rcx,[rbp-0x20]
   140042a3f:	call   0x1400422b0
   140042a44:	jmp    0x140042a4f
   140042a46:	lea    rcx,[rbp-0x20]
   140042a4a:	call   0x140042380
   140042a4f:	cmp    DWORD PTR [rbp-0x20],r12d
   140042a53:	jne    0x140042b16
   140042a59:	mov    edx,DWORD PTR [rip+0x15b01]        # 0x140058560
   140042a5f:	lea    r8,[rsi+0x98]
   140042a66:	dec    edx
   140042a68:	lea    rcx,[rip+0x156e1]        # 0x140058150
   140042a6f:	call   0x140042904
   140042a74:	test   al,al
   140042a76:	je     0x140042b0c
   140042a7c:	mov    rax,QWORD PTR [rbx]
   140042a7f:	test   rax,rax
   140042a82:	je     0x140042a95
   140042a84:	cmp    WORD PTR [rax],r12w
   140042a88:	je     0x140042a95
   140042a8a:	lea    rcx,[rbp-0x20]
   140042a8e:	call   0x1400422b0
   140042a93:	jmp    0x140042b0c
   140042a95:	lea    rcx,[rbp-0x20]
   140042a99:	call   0x140042380
   140042a9e:	jmp    0x140042b0c
   140042aa0:	mov    rax,QWORD PTR [rbx]
   140042aa3:	test   rax,rax
   140042aa6:	je     0x140042af9
   140042aa8:	cmp    WORD PTR [rax],r12w
   140042aac:	je     0x140042af9
   140042aae:	call   0x140039130
   140042ab3:	mov    rdx,rax
   140042ab6:	or     rcx,0xffffffffffffffff
   140042aba:	mov    rax,QWORD PTR [rax+0xa0]
   140042ac1:	inc    rcx
   140042ac4:	cmp    WORD PTR [rax+rcx*2],r12w
   140042ac9:	jne    0x140042ac1
   140042acb:	cmp    rcx,0x3
   140042acf:	mov    eax,r12d
   140042ad2:	lea    rcx,[rip+0xfffffffffffff6eb]        # 0x1400421c4
   140042ad9:	sete   al
   140042adc:	mov    DWORD PTR [rdx+0xb4],eax
   140042ae2:	mov    edx,0x1
   140042ae7:	call   QWORD PTR [rip+0x8853]        # 0x14004b340
   140042aed:	test   BYTE PTR [rbp-0x20],0x4
   140042af1:	jne    0x140042b0c
   140042af3:	mov    DWORD PTR [rbp-0x20],r12d
   140042af7:	jmp    0x140042b0c
   140042af9:	mov    DWORD PTR [rbp-0x20],0x104
   140042b00:	call   QWORD PTR [rip+0x8832]        # 0x14004b338
   140042b06:	mov    DWORD PTR [rbp-0x18],eax
   140042b09:	mov    DWORD PTR [rbp-0x1c],eax
   140042b0c:	cmp    DWORD PTR [rbp-0x20],r12d
   140042b10:	je     0x140042c00
   140042b16:	lea    rax,[r14+0x100]
   140042b1d:	neg    r14
   140042b20:	lea    rdx,[rbp-0x20]
   140042b24:	sbb    rcx,rcx
   140042b27:	and    rcx,rax
   140042b2a:	call   0x1400427a8
   140042b2f:	mov    ebx,eax
   140042b31:	test   eax,eax
   140042b33:	je     0x140042c00
   140042b39:	lea    ecx,[rax-0xfde8]
   140042b3f:	cmp    ecx,0x1
   140042b42:	jbe    0x140042c00
   140042b48:	movzx  ecx,ax
   140042b4b:	call   QWORD PTR [rip+0x880f]        # 0x14004b360
   140042b51:	test   eax,eax
   140042b53:	je     0x140042c00
   140042b59:	mov    ecx,DWORD PTR [rbp-0x1c]
   140042b5c:	mov    edx,0x1
   140042b61:	call   QWORD PTR [rip+0x87c9]        # 0x14004b330
   140042b67:	test   eax,eax
   140042b69:	je     0x140042c00
   140042b6f:	test   r15,r15
   140042b72:	je     0x140042b77
   140042b74:	mov    DWORD PTR [r15],ebx
   140042b77:	mov    ecx,DWORD PTR [rbp-0x1c]
   140042b7a:	lea    rdx,[rsi+0x2f0]
   140042b81:	xor    r9d,r9d
   140042b84:	lea    esi,[r9+0x55]
   140042b88:	mov    r8d,esi
   140042b8b:	call   0x14003d368
   140042b90:	test   rdi,rdi
   140042b93:	je     0x140042bf9
   140042b95:	mov    ecx,DWORD PTR [rbp-0x1c]
   140042b98:	lea    rdx,[rdi+0x120]
   140042b9f:	xor    r9d,r9d
   140042ba2:	mov    r8d,esi
   140042ba5:	call   0x14003d368
   140042baa:	mov    ecx,DWORD PTR [rbp-0x1c]
   140042bad:	mov    esi,0x40
   140042bb2:	mov    r9d,esi
   140042bb5:	mov    r8,rdi
   140042bb8:	mov    edx,0x1001
   140042bbd:	call   QWORD PTR [rip+0x86e5]        # 0x14004b2a8
   140042bc3:	test   eax,eax
   140042bc5:	je     0x140042c00
   140042bc7:	mov    ecx,DWORD PTR [rbp-0x18]
   140042bca:	lea    r8,[rdi+0x80]
   140042bd1:	mov    r9d,esi
   140042bd4:	mov    edx,0x1002
   140042bd9:	call   QWORD PTR [rip+0x86c9]        # 0x14004b2a8
   140042bdf:	test   eax,eax
   140042be1:	je     0x140042c00
   140042be3:	lea    rdx,[rdi+0x100]
   140042bea:	mov    ecx,ebx
   140042bec:	lea    r9d,[rsi-0x36]
   140042bf0:	lea    r8d,[rsi-0x30]
   140042bf4:	call   0x140046b14
   140042bf9:	mov    eax,0x1
   140042bfe:	jmp    0x140042c02
   140042c00:	xor    eax,eax
   140042c02:	mov    rcx,QWORD PTR [rbp-0x10]
   140042c06:	xor    rcx,rsp
   140042c09:	call   0x140025df0
   140042c0e:	add    rsp,0x40
   140042c12:	pop    r15
   140042c14:	pop    r14
   140042c16:	pop    r12
   140042c18:	pop    rdi
   140042c19:	pop    rsi
   140042c1a:	pop    rbx
   140042c1b:	pop    rbp
   140042c1c:	ret    
   140042c1d:	int3   
   140042c1e:	int3   
   140042c1f:	int3   
   140042c20:	mov    rax,rsp
   140042c23:	mov    QWORD PTR [rax+0x8],rbx
   140042c27:	mov    QWORD PTR [rax+0x10],rbp
   140042c2b:	mov    QWORD PTR [rax+0x18],rsi
   140042c2f:	mov    QWORD PTR [rax+0x20],rdi
   140042c33:	push   r12
   140042c35:	push   r14
   140042c37:	push   r15
   140042c39:	sub    rsp,0x50
   140042c3d:	xor    r12d,r12d
   140042c40:	mov    rbp,r8
   140042c43:	mov    r14,rdx
   140042c46:	mov    rdi,rcx
   140042c49:	mov    ebx,r12d
   140042c4c:	test   rcx,rcx
   140042c4f:	je     0x140042c61
   140042c51:	test   r8,r8
   140042c54:	jne    0x140042c5d
   140042c56:	xor    eax,eax
   140042c58:	jmp    0x140042ddd
   140042c5d:	mov    WORD PTR [rcx],r12w
   140042c61:	test   rdx,rdx
   140042c64:	jne    0x140042c7f
   140042c66:	call   0x140032c50
   140042c6b:	mov    DWORD PTR [rax],0x16
   140042c71:	call   0x1400307d0
   140042c76:	or     rax,0xffffffffffffffff
   140042c7a:	jmp    0x140042ddd
   140042c7f:	mov    rdx,r9
   140042c82:	lea    rcx,[rsp+0x30]
   140042c87:	call   0x14002bd94
   140042c8c:	mov    rax,QWORD PTR [rsp+0x38]
   140042c91:	test   rdi,rdi
   140042c94:	je     0x140042d79
   140042c9a:	cmp    QWORD PTR [rax+0x138],r12
   140042ca1:	jne    0x140042ccf
   140042ca3:	test   rbp,rbp
   140042ca6:	je     0x140042dc7
   140042cac:	movzx  eax,BYTE PTR [rbx+r14*1]
   140042cb1:	mov    WORD PTR [rdi],ax
   140042cb4:	cmp    BYTE PTR [rbx+r14*1],r12b
   140042cb8:	je     0x140042dc7
   140042cbe:	inc    rbx
   140042cc1:	add    rdi,0x2
   140042cc5:	cmp    rbx,rbp
   140042cc8:	jb     0x140042cac
   140042cca:	jmp    0x140042dc7
   140042ccf:	mov    ecx,DWORD PTR [rax+0xc]
   140042cd2:	or     rbx,0xffffffffffffffff
   140042cd6:	mov    DWORD PTR [rsp+0x28],ebp
   140042cda:	mov    r9d,ebx
   140042cdd:	mov    r8,r14
   140042ce0:	mov    QWORD PTR [rsp+0x20],rdi
   140042ce5:	lea    edx,[rbx+0xa]
   140042ce8:	call   QWORD PTR [rip+0x843a]        # 0x14004b128
   140042cee:	movsxd rcx,eax
   140042cf1:	test   eax,eax
   140042cf3:	jne    0x140042dc3
   140042cf9:	call   QWORD PTR [rip+0x83e1]        # 0x14004b0e0
   140042cff:	cmp    eax,0x7a
   140042d02:	jne    0x140042d63
   140042d04:	mov    r15d,ebp
   140042d07:	mov    rsi,r14
   140042d0a:	test   ebp,ebp
   140042d0c:	je     0x140042d37
   140042d0e:	dec    r15d
   140042d11:	cmp    BYTE PTR [rsi],r12b
   140042d14:	je     0x140042d37
   140042d16:	movzx  ecx,BYTE PTR [rsi]
   140042d19:	lea    rdx,[rsp+0x38]
   140042d1e:	call   0x14003b634
   140042d23:	test   eax,eax
   140042d25:	je     0x140042d2f
   140042d27:	inc    rsi
   140042d2a:	cmp    BYTE PTR [rsi],r12b
   140042d2d:	je     0x140042d63
   140042d2f:	inc    rsi
   140042d32:	test   r15d,r15d
   140042d35:	jmp    0x140042d0c
   140042d37:	mov    rax,QWORD PTR [rsp+0x38]
   140042d3c:	sub    esi,r14d
   140042d3f:	mov    DWORD PTR [rsp+0x28],ebp
   140042d43:	mov    r9d,esi
   140042d46:	mov    r8,r14
   140042d49:	mov    QWORD PTR [rsp+0x20],rdi
   140042d4e:	mov    edx,0x1
   140042d53:	mov    ecx,DWORD PTR [rax+0xc]
   140042d56:	call   QWORD PTR [rip+0x83cc]        # 0x14004b128
   140042d5c:	movsxd rcx,eax
   140042d5f:	test   eax,eax
   140042d61:	jne    0x140042d74
   140042d63:	call   0x140032c50
   140042d68:	mov    DWORD PTR [rax],0x2a
   140042d6e:	mov    WORD PTR [rdi],r12w
   140042d72:	jmp    0x140042dc7
   140042d74:	mov    rbx,rcx
   140042d77:	jmp    0x140042dc7
   140042d79:	or     rbx,0xffffffffffffffff
   140042d7d:	cmp    QWORD PTR [rax+0x138],r12
   140042d84:	jne    0x140042d91
   140042d86:	inc    rbx
   140042d89:	cmp    BYTE PTR [r14+rbx*1],r12b
   140042d8d:	jne    0x140042d86
   140042d8f:	jmp    0x140042dc7
   140042d91:	mov    ecx,DWORD PTR [rax+0xc]
   140042d94:	mov    r9d,ebx
   140042d97:	mov    DWORD PTR [rsp+0x28],r12d
   140042d9c:	mov    r8,r14
   140042d9f:	mov    edx,0x9
   140042da4:	mov    QWORD PTR [rsp+0x20],r12
   140042da9:	call   QWORD PTR [rip+0x8379]        # 0x14004b128
   140042daf:	movsxd rcx,eax
   140042db2:	test   eax,eax
   140042db4:	jne    0x140042dc3
   140042db6:	call   0x140032c50
   140042dbb:	mov    DWORD PTR [rax],0x2a
   140042dc1:	jmp    0x140042dc7
   140042dc3:	lea    rbx,[rcx-0x1]
   140042dc7:	cmp    BYTE PTR [rsp+0x48],r12b
   140042dcc:	je     0x140042dda
   140042dce:	mov    rcx,QWORD PTR [rsp+0x30]
   140042dd3:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140042dda:	mov    rax,rbx
   140042ddd:	lea    r11,[rsp+0x50]
   140042de2:	mov    rbx,QWORD PTR [r11+0x20]
   140042de6:	mov    rbp,QWORD PTR [r11+0x28]
   140042dea:	mov    rsi,QWORD PTR [r11+0x30]
   140042dee:	mov    rdi,QWORD PTR [r11+0x38]
   140042df2:	mov    rsp,r11
   140042df5:	pop    r15
   140042df7:	pop    r14
   140042df9:	pop    r12
   140042dfb:	ret    
   140042dfc:	mov    QWORD PTR [rsp+0x8],rbx
   140042e01:	mov    QWORD PTR [rsp+0x10],rsi
   140042e06:	mov    QWORD PTR [rsp+0x18],rdi
   140042e0b:	push   r12
   140042e0d:	push   r14
   140042e0f:	push   r15
   140042e11:	sub    rsp,0x40
   140042e15:	xor    r12d,r12d
   140042e18:	mov    r15,r9
   140042e1b:	mov    rsi,r8
   140042e1e:	mov    rdi,rdx
   140042e21:	mov    r14,rcx
   140042e24:	mov    ebx,r12d
   140042e27:	test   rdx,rdx
   140042e2a:	jne    0x140042e33
   140042e2c:	test   r8,r8
   140042e2f:	je     0x140042e52
   140042e31:	jmp    0x140042e38
   140042e33:	test   r8,r8
   140042e36:	jne    0x140042e4e
   140042e38:	call   0x140032c50
   140042e3d:	mov    ebx,0x16
   140042e42:	mov    DWORD PTR [rax],ebx
   140042e44:	call   0x1400307d0
   140042e49:	jmp    0x140042f10
   140042e4e:	mov    WORD PTR [rdx],r12w
   140042e52:	test   rcx,rcx
   140042e55:	je     0x140042e5a
   140042e57:	mov    QWORD PTR [rcx],r12
   140042e5a:	mov    rdx,QWORD PTR [rsp+0x88]
   140042e62:	lea    rcx,[rsp+0x20]
   140042e67:	call   0x14002bd94
   140042e6c:	mov    r8,QWORD PTR [rsp+0x80]
   140042e74:	cmp    r8,rsi
   140042e77:	cmova  r8,rsi
   140042e7b:	cmp    r8,0x7fffffff
   140042e82:	jbe    0x140042e90
   140042e84:	call   0x140032c50
   140042e89:	mov    ebx,0x16
   140042e8e:	jmp    0x140042ede
   140042e90:	lea    r9,[rsp+0x28]
   140042e95:	mov    rdx,r15
   140042e98:	mov    rcx,rdi
   140042e9b:	call   0x140042c20
   140042ea0:	cmp    rax,0xffffffffffffffff
   140042ea4:	jne    0x140042eb8
   140042ea6:	test   rdi,rdi
   140042ea9:	je     0x140042eaf
   140042eab:	mov    WORD PTR [rdi],r12w
   140042eaf:	call   0x140032c50
   140042eb4:	mov    ebx,DWORD PTR [rax]
   140042eb6:	jmp    0x140042efd
   140042eb8:	inc    rax
   140042ebb:	test   rdi,rdi
   140042ebe:	je     0x140042ef5
   140042ec0:	cmp    rax,rsi
   140042ec3:	jbe    0x140042eef
   140042ec5:	cmp    QWORD PTR [rsp+0x80],0xffffffffffffffff
   140042ece:	je     0x140042ee7
   140042ed0:	mov    WORD PTR [rdi],r12w
   140042ed4:	call   0x140032c50
   140042ed9:	mov    ebx,0x22
   140042ede:	mov    DWORD PTR [rax],ebx
   140042ee0:	call   0x1400307d0
   140042ee5:	jmp    0x140042efd
   140042ee7:	mov    rax,rsi
   140042eea:	mov    ebx,0x50
   140042eef:	mov    WORD PTR [rdi+rax*2-0x2],r12w
   140042ef5:	test   r14,r14
   140042ef8:	je     0x140042efd
   140042efa:	mov    QWORD PTR [r14],rax
   140042efd:	cmp    BYTE PTR [rsp+0x38],r12b
   140042f02:	je     0x140042f10
   140042f04:	mov    rcx,QWORD PTR [rsp+0x20]
   140042f09:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140042f10:	mov    rsi,QWORD PTR [rsp+0x68]
   140042f15:	mov    eax,ebx
   140042f17:	mov    rbx,QWORD PTR [rsp+0x60]
   140042f1c:	mov    rdi,QWORD PTR [rsp+0x70]
   140042f21:	add    rsp,0x40
   140042f25:	pop    r15
   140042f27:	pop    r14
   140042f29:	pop    r12
   140042f2b:	ret    
   140042f2c:	sub    rsp,0x38
   140042f30:	mov    rax,QWORD PTR [rsp+0x60]
   140042f35:	and    QWORD PTR [rsp+0x28],0x0
   140042f3b:	mov    QWORD PTR [rsp+0x20],rax
   140042f40:	call   0x140042dfc
   140042f45:	add    rsp,0x38
   140042f49:	ret    
   140042f4a:	int3   
   140042f4b:	int3   
   140042f4c:	mov    QWORD PTR [rsp+0x20],rbx
   140042f51:	push   rbp
   140042f52:	push   rsi
   140042f53:	push   rdi
   140042f54:	push   r12
   140042f56:	push   r13
   140042f58:	push   r14
   140042f5a:	push   r15
   140042f5c:	mov    rbp,rsp
   140042f5f:	sub    rsp,0x80
   140042f66:	mov    rax,QWORD PTR [rip+0x2e0e3]        # 0x140071050
   140042f6d:	xor    rax,rsp
   140042f70:	mov    QWORD PTR [rbp-0x10],rax
   140042f74:	xor    r12d,r12d
   140042f77:	mov    rsi,r8
   140042f7a:	mov    DWORD PTR [rbp-0x40],r12d
   140042f7e:	mov    r14,rdx
   140042f81:	mov    r15,rcx
   140042f84:	mov    ebx,r12d
   140042f87:	test   rcx,rcx
   140042f8a:	je     0x140042f98
   140042f8c:	test   r8,r8
   140042f8f:	jne    0x140042f98
   140042f91:	xor    eax,eax
   140042f93:	jmp    0x140043257
   140042f98:	test   rdx,rdx
   140042f9b:	jne    0x140042fb6
   140042f9d:	call   0x140032c50
   140042fa2:	mov    DWORD PTR [rax],0x16
   140042fa8:	call   0x1400307d0
   140042fad:	or     rax,0xffffffffffffffff
   140042fb1:	jmp    0x140043257
   140042fb6:	mov    rdx,r9
   140042fb9:	lea    rcx,[rbp-0x38]
   140042fbd:	call   0x14002bd94
   140042fc2:	test   r15,r15
   140042fc5:	je     0x1400431b0
   140042fcb:	mov    rcx,QWORD PTR [rbp-0x30]
   140042fcf:	cmp    QWORD PTR [rcx+0x138],r12
   140042fd6:	jne    0x14004301f
   140042fd8:	test   rsi,rsi
   140042fdb:	je     0x140043240
   140042fe1:	mov    ecx,0xff
   140042fe6:	cmp    WORD PTR [r14],cx
   140042fea:	ja     0x140043011
   140042fec:	mov    al,BYTE PTR [r14]
   140042fef:	mov    BYTE PTR [r15+rbx*1],al
   140042ff3:	movzx  eax,WORD PTR [r14]
   140042ff7:	add    r14,0x2
   140042ffb:	test   ax,ax
   140042ffe:	je     0x140043240
   140043004:	inc    rbx
   140043007:	cmp    rbx,rsi
   14004300a:	jb     0x140042fe6
   14004300c:	jmp    0x140043240
   140043011:	call   0x140032c50
   140043016:	or     rbx,0xffffffffffffffff
   14004301a:	jmp    0x14004323a
   14004301f:	cmp    DWORD PTR [rcx+0x8],0x1
   140043023:	jne    0x14004309f
   140043025:	test   rsi,rsi
   140043028:	je     0x140043057
   14004302a:	mov    rax,r14
   14004302d:	mov    rdx,rsi
   140043030:	cmp    WORD PTR [rax],r12w
   140043034:	je     0x140043040
   140043036:	add    rax,0x2
   14004303a:	sub    rdx,0x1
   14004303e:	jne    0x140043030
   140043040:	test   rdx,rdx
   140043043:	je     0x140043057
   140043045:	cmp    WORD PTR [rax],r12w
   140043049:	jne    0x140043057
   14004304b:	mov    rsi,rax
   14004304e:	sub    rsi,r14
   140043051:	sar    rsi,1
   140043054:	inc    rsi
   140043057:	mov    ecx,DWORD PTR [rcx+0xc]
   14004305a:	lea    rax,[rbp-0x40]
   14004305e:	mov    QWORD PTR [rsp+0x38],rax
   140043063:	mov    r9d,esi
   140043066:	mov    QWORD PTR [rsp+0x30],r12
   14004306b:	mov    r8,r14
   14004306e:	mov    DWORD PTR [rsp+0x28],esi
   140043072:	xor    edx,edx
   140043074:	mov    QWORD PTR [rsp+0x20],r15
   140043079:	call   QWORD PTR [rip+0x80b1]        # 0x14004b130
   14004307f:	movsxd rbx,eax
   140043082:	test   eax,eax
   140043084:	je     0x140043011
   140043086:	cmp    DWORD PTR [rbp-0x40],r12d
   14004308a:	jne    0x140043011
   14004308c:	cmp    BYTE PTR [r15+rbx*1-0x1],r12b
   140043091:	jne    0x140043240
   140043097:	dec    rbx
   14004309a:	jmp    0x140043240
   14004309f:	mov    ecx,DWORD PTR [rcx+0xc]
   1400430a2:	lea    rax,[rbp-0x40]
   1400430a6:	mov    QWORD PTR [rsp+0x38],rax
   1400430ab:	or     rbx,0xffffffffffffffff
   1400430af:	mov    QWORD PTR [rsp+0x30],r12
   1400430b4:	mov    r9d,ebx
   1400430b7:	mov    DWORD PTR [rsp+0x28],esi
   1400430bb:	mov    r8,r14
   1400430be:	xor    edx,edx
   1400430c0:	mov    QWORD PTR [rsp+0x20],r15
   1400430c5:	call   QWORD PTR [rip+0x8065]        # 0x14004b130
   1400430cb:	movsxd rdi,eax
   1400430ce:	test   eax,eax
   1400430d0:	je     0x1400430e5
   1400430d2:	cmp    DWORD PTR [rbp-0x40],r12d
   1400430d6:	jne    0x140043235
   1400430dc:	lea    rbx,[rdi-0x1]
   1400430e0:	jmp    0x140043240
   1400430e5:	cmp    DWORD PTR [rbp-0x40],r12d
   1400430e9:	jne    0x140043235
   1400430ef:	call   QWORD PTR [rip+0x7feb]        # 0x14004b0e0
   1400430f5:	cmp    eax,0x7a
   1400430f8:	jne    0x140043235
   1400430fe:	test   rsi,rsi
   140043101:	je     0x140043243
   140043107:	lea    r13d,[rax-0x75]
   14004310b:	mov    rcx,QWORD PTR [rbp-0x30]
   14004310f:	lea    rdx,[rbp-0x40]
   140043113:	mov    QWORD PTR [rsp+0x38],rdx
   140043118:	mov    r9d,0x1
   14004311e:	mov    QWORD PTR [rsp+0x30],r12
   140043123:	mov    r8,r14
   140043126:	mov    eax,DWORD PTR [rcx+0x8]
   140043129:	cmp    eax,r13d
   14004312c:	mov    ecx,DWORD PTR [rcx+0xc]
   14004312f:	cmovg  eax,r13d
   140043133:	xor    edx,edx
   140043135:	mov    DWORD PTR [rsp+0x28],eax
   140043139:	lea    rax,[rbp-0x18]
   14004313d:	mov    QWORD PTR [rsp+0x20],rax
   140043142:	call   QWORD PTR [rip+0x7fe8]        # 0x14004b130
   140043148:	test   eax,eax
   14004314a:	je     0x140043235
   140043150:	cmp    DWORD PTR [rbp-0x40],r12d
   140043154:	jne    0x140043235
   14004315a:	test   eax,eax
   14004315c:	js     0x140043235
   140043162:	movsxd rdx,eax
   140043165:	cmp    rdx,r13
   140043168:	ja     0x140043235
   14004316e:	lea    rax,[rdx+rdi*1]
   140043172:	cmp    rax,rsi
   140043175:	ja     0x140043243
   14004317b:	mov    rcx,r12
   14004317e:	test   rdx,rdx
   140043181:	jle    0x14004319e
   140043183:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   140043187:	mov    BYTE PTR [r15+rdi*1],al
   14004318b:	test   al,al
   14004318d:	je     0x140043243
   140043193:	inc    rcx
   140043196:	inc    rdi
   140043199:	cmp    rcx,rdx
   14004319c:	jl     0x140043183
   14004319e:	add    r14,0x2
   1400431a2:	cmp    rdi,rsi
   1400431a5:	jae    0x140043243
   1400431ab:	jmp    0x14004310b
   1400431b0:	mov    rax,QWORD PTR [rbp-0x30]
   1400431b4:	cmp    QWORD PTR [rax+0x138],r12
   1400431bb:	jne    0x1400431f6
   1400431bd:	movzx  eax,WORD PTR [r14]
   1400431c1:	mov    rdi,r12
   1400431c4:	test   ax,ax
   1400431c7:	je     0x140043243
   1400431c9:	mov    ecx,0xff
   1400431ce:	cmp    ax,cx
   1400431d1:	ja     0x1400431e5
   1400431d3:	add    r14,0x2
   1400431d7:	inc    rdi
   1400431da:	movzx  eax,WORD PTR [r14]
   1400431de:	test   ax,ax
   1400431e1:	jne    0x1400431ce
   1400431e3:	jmp    0x140043243
   1400431e5:	call   0x140032c50
   1400431ea:	or     rdi,0xffffffffffffffff
   1400431ee:	mov    DWORD PTR [rax],0x2a
   1400431f4:	jmp    0x140043243
   1400431f6:	lea    rcx,[rbp-0x40]
   1400431fa:	or     rbx,0xffffffffffffffff
   1400431fe:	mov    QWORD PTR [rsp+0x38],rcx
   140043203:	mov    r9d,ebx
   140043206:	mov    ecx,DWORD PTR [rax+0xc]
   140043209:	mov    r8,r14
   14004320c:	mov    QWORD PTR [rsp+0x30],r12
   140043211:	xor    edx,edx
   140043213:	mov    DWORD PTR [rsp+0x28],r12d
   140043218:	mov    QWORD PTR [rsp+0x20],r12
   14004321d:	call   QWORD PTR [rip+0x7f0d]        # 0x14004b130
   140043223:	movsxd rdi,eax
   140043226:	test   eax,eax
   140043228:	je     0x140043235
   14004322a:	cmp    DWORD PTR [rbp-0x40],r12d
   14004322e:	jne    0x140043235
   140043230:	dec    rdi
   140043233:	jmp    0x140043243
   140043235:	call   0x140032c50
   14004323a:	mov    DWORD PTR [rax],0x2a
   140043240:	mov    rdi,rbx
   140043243:	cmp    BYTE PTR [rbp-0x20],r12b
   140043247:	je     0x140043254
   140043249:	mov    rcx,QWORD PTR [rbp-0x38]
   14004324d:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140043254:	mov    rax,rdi
   140043257:	mov    rcx,QWORD PTR [rbp-0x10]
   14004325b:	xor    rcx,rsp
   14004325e:	call   0x140025df0
   140043263:	mov    rbx,QWORD PTR [rsp+0xd8]
   14004326b:	add    rsp,0x80
   140043272:	pop    r15
   140043274:	pop    r14
   140043276:	pop    r13
   140043278:	pop    r12
   14004327a:	pop    rdi
   14004327b:	pop    rsi
   14004327c:	pop    rbp
   14004327d:	ret    
   14004327e:	int3   
   14004327f:	int3   
   140043280:	mov    QWORD PTR [rsp+0x8],rbx
   140043285:	mov    QWORD PTR [rsp+0x10],rsi
   14004328a:	mov    QWORD PTR [rsp+0x18],rdi
   14004328f:	push   r14
   140043291:	sub    rsp,0x20
   140043295:	xor    r14d,r14d
   140043298:	mov    rax,r9
   14004329b:	mov    rdi,r8
   14004329e:	mov    rbx,rdx
   1400432a1:	mov    rsi,rcx
   1400432a4:	test   rdx,rdx
   1400432a7:	je     0x1400432fa
   1400432a9:	test   r8,r8
   1400432ac:	je     0x1400432ff
   1400432ae:	test   rdx,rdx
   1400432b1:	je     0x1400432b6
   1400432b3:	mov    BYTE PTR [rdx],r14b
   1400432b6:	test   rcx,rcx
   1400432b9:	je     0x1400432be
   1400432bb:	and    QWORD PTR [rcx],r14
   1400432be:	mov    r8,QWORD PTR [rsp+0x50]
   1400432c3:	cmp    r8,rdi
   1400432c6:	cmova  r8,rdi
   1400432ca:	cmp    r8,0x7fffffff
   1400432d1:	ja     0x1400432ff
   1400432d3:	mov    r9,QWORD PTR [rsp+0x58]
   1400432d8:	mov    rdx,rax
   1400432db:	mov    rcx,rbx
   1400432de:	call   0x140042f4c
   1400432e3:	cmp    rax,0xffffffffffffffff
   1400432e7:	jne    0x140043314
   1400432e9:	test   rbx,rbx
   1400432ec:	je     0x1400432f1
   1400432ee:	mov    BYTE PTR [rbx],r14b
   1400432f1:	call   0x140032c50
   1400432f6:	mov    eax,DWORD PTR [rax]
   1400432f8:	jmp    0x140043356
   1400432fa:	test   r8,r8
   1400432fd:	je     0x1400432ae
   1400432ff:	call   0x140032c50
   140043304:	mov    ebx,0x16
   140043309:	mov    DWORD PTR [rax],ebx
   14004330b:	call   0x1400307d0
   140043310:	mov    eax,ebx
   140043312:	jmp    0x140043356
   140043314:	inc    rax
   140043317:	test   rbx,rbx
   14004331a:	je     0x14004334b
   14004331c:	cmp    rax,rdi
   14004331f:	jbe    0x140043346
   140043321:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   140043327:	je     0x14004333d
   140043329:	mov    BYTE PTR [rbx],r14b
   14004332c:	cmp    rdi,rax
   14004332f:	ja     0x14004333d
   140043331:	call   0x140032c50
   140043336:	mov    ebx,0x22
   14004333b:	jmp    0x140043309
   14004333d:	mov    rax,rdi
   140043340:	mov    r14d,0x50
   140043346:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   14004334b:	test   rsi,rsi
   14004334e:	je     0x140043353
   140043350:	mov    QWORD PTR [rsi],rax
   140043353:	mov    eax,r14d
   140043356:	mov    rbx,QWORD PTR [rsp+0x30]
   14004335b:	mov    rsi,QWORD PTR [rsp+0x38]
   140043360:	mov    rdi,QWORD PTR [rsp+0x40]
   140043365:	add    rsp,0x20
   140043369:	pop    r14
   14004336b:	ret    
   14004336c:	rex push rbp
   14004336e:	push   r14
   140043370:	push   r15
   140043372:	sub    rsp,0x70
   140043376:	lea    rbp,[rsp+0x40]
   14004337b:	mov    QWORD PTR [rbp+0x50],rbx
   14004337f:	mov    QWORD PTR [rbp+0x58],rsi
   140043383:	mov    QWORD PTR [rbp+0x60],rdi
   140043387:	mov    QWORD PTR [rbp+0x68],r12
   14004338b:	mov    rax,QWORD PTR [rip+0x2dcbe]        # 0x140071050
   140043392:	xor    rax,rbp
   140043395:	mov    QWORD PTR [rbp+0x20],rax
   140043399:	mov    r14,rdx
   14004339c:	mov    r15,r9
   14004339f:	mov    rdx,rcx
   1400433a2:	mov    esi,r8d
   1400433a5:	lea    rcx,[rbp+0x0]
   1400433a9:	call   0x14002bd94
   1400433ae:	mov    rax,QWORD PTR [rbp+0x8]
   1400433b2:	xor    r9d,r9d
   1400433b5:	xor    r8d,r8d
   1400433b8:	mov    edx,esi
   1400433ba:	mov    rcx,r14
   1400433bd:	mov    r12d,DWORD PTR [rax+0xc]
   1400433c1:	call   0x14003d17c
   1400433c6:	movsxd rdi,eax
   1400433c9:	test   eax,eax
   1400433cb:	jne    0x1400433d4
   1400433cd:	xor    edi,edi
   1400433cf:	jmp    0x1400434d0
   1400433d4:	mov    rdx,rdi
   1400433d7:	add    rdx,rdx
   1400433da:	lea    rcx,[rdx+0x10]
   1400433de:	cmp    rdx,rcx
   1400433e1:	sbb    rax,rax
   1400433e4:	test   rcx,rax
   1400433e7:	je     0x140043462
   1400433e9:	lea    rcx,[rdx+0x10]
   1400433ed:	cmp    rdx,rcx
   1400433f0:	sbb    rax,rax
   1400433f3:	and    rax,rcx
   1400433f6:	cmp    rax,0x400
   1400433fc:	lea    rax,[rdx+0x10]
   140043400:	ja     0x140043440
   140043402:	cmp    rdx,rax
   140043405:	sbb    rcx,rcx
   140043408:	and    rcx,rax
   14004340b:	lea    rax,[rcx+0xf]
   14004340f:	cmp    rax,rcx
   140043412:	ja     0x14004341e
   140043414:	movabs rax,0xffffffffffffff0
   14004341e:	and    rax,0xfffffffffffffff0
   140043422:	call   0x1400267b0
   140043427:	sub    rsp,rax
   14004342a:	lea    rbx,[rsp+0x40]
   14004342f:	test   rbx,rbx
   140043432:	je     0x1400434b8
   140043438:	mov    DWORD PTR [rbx],0xcccc
   14004343e:	jmp    0x14004345c
   140043440:	cmp    rdx,rax
   140043443:	sbb    rcx,rcx
   140043446:	and    rcx,rax
   140043449:	call   0x140036600
   14004344e:	mov    rbx,rax
   140043451:	test   rax,rax
   140043454:	je     0x140043464
   140043456:	mov    DWORD PTR [rax],0xdddd
   14004345c:	add    rbx,0x10
   140043460:	jmp    0x140043464
   140043462:	xor    ebx,ebx
   140043464:	test   rbx,rbx
   140043467:	je     0x1400434b8
   140043469:	mov    r9d,edi
   14004346c:	mov    r8,rbx
   14004346f:	mov    edx,esi
   140043471:	mov    rcx,r14
   140043474:	call   0x14003d17c
   140043479:	test   eax,eax
   14004347b:	je     0x1400434b8
   14004347d:	mov    r8d,DWORD PTR [rbp+0x70]
   140043481:	mov    ecx,r12d
   140043484:	mov    eax,r8d
   140043487:	neg    eax
   140043489:	sbb    rdx,rdx
   14004348c:	and    QWORD PTR [rsp+0x38],0x0
   140043492:	and    QWORD PTR [rsp+0x30],0x0
   140043498:	and    rdx,r15
   14004349b:	mov    DWORD PTR [rsp+0x28],r8d
   1400434a0:	or     r9d,0xffffffff
   1400434a4:	mov    QWORD PTR [rsp+0x20],rdx
   1400434a9:	mov    r8,rbx
   1400434ac:	xor    edx,edx
   1400434ae:	call   QWORD PTR [rip+0x7c7c]        # 0x14004b130
   1400434b4:	mov    edi,eax
   1400434b6:	jmp    0x1400434ba
   1400434b8:	xor    edi,edi
   1400434ba:	test   rbx,rbx
   1400434bd:	je     0x1400434d0
   1400434bf:	lea    rcx,[rbx-0x10]
   1400434c3:	cmp    DWORD PTR [rcx],0xdddd
   1400434c9:	jne    0x1400434d0
   1400434cb:	call   0x140038c70
   1400434d0:	cmp    BYTE PTR [rbp+0x18],0x0
   1400434d4:	je     0x1400434e1
   1400434d6:	mov    rax,QWORD PTR [rbp+0x0]
   1400434da:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   1400434e1:	mov    eax,edi
   1400434e3:	mov    rcx,QWORD PTR [rbp+0x20]
   1400434e7:	xor    rcx,rbp
   1400434ea:	call   0x140025df0
   1400434ef:	mov    rbx,QWORD PTR [rbp+0x50]
   1400434f3:	mov    rsi,QWORD PTR [rbp+0x58]
   1400434f7:	mov    rdi,QWORD PTR [rbp+0x60]
   1400434fb:	mov    r12,QWORD PTR [rbp+0x68]
   1400434ff:	lea    rsp,[rbp+0x30]
   140043503:	pop    r15
   140043505:	pop    r14
   140043507:	pop    rbp
   140043508:	ret    
   140043509:	int3   
   14004350a:	int3   
   14004350b:	int3   
   14004350c:	rex push rbx
   14004350e:	push   rbp
   14004350f:	push   rsi
   140043510:	push   rdi
   140043511:	push   r12
   140043513:	push   r14
   140043515:	push   r15
   140043517:	sub    rsp,0xd0
   14004351e:	mov    rax,QWORD PTR [rip+0x2db2b]        # 0x140071050
   140043525:	xor    rax,rsp
   140043528:	mov    QWORD PTR [rsp+0xc0],rax
   140043530:	mov    rsi,QWORD PTR [rsp+0x130]
   140043538:	xor    edi,edi
   14004353a:	mov    ebp,r9d
   14004353d:	mov    r14,r8
   140043540:	mov    r12,rcx
   140043543:	mov    QWORD PTR [rsi],rdi
   140043546:	cmp    edx,0x1
   140043549:	jne    0x140043629
   14004354f:	lea    r9,[rsp+0x40]
   140043554:	mov    DWORD PTR [rsp+0x20],0x80
   14004355c:	mov    r8d,ebp
   14004355f:	mov    rdx,r14
   140043562:	call   0x14004336c
   140043567:	movsxd rbx,eax
   14004356a:	test   eax,eax
   14004356c:	je     0x1400435b1
   14004356e:	lea    edx,[rdi+0x1]
   140043571:	mov    rcx,rbx
   140043574:	call   0x140035d88
   140043579:	xor    ecx,ecx
   14004357b:	mov    QWORD PTR [rsi],rax
   14004357e:	call   0x140038c70
   140043583:	cmp    QWORD PTR [rsi],rdi
   140043586:	je     0x14004369a
   14004358c:	mov    rcx,QWORD PTR [rsi]
   14004358f:	lea    eax,[rbx-0x1]
   140043592:	movsxd r9,eax
   140043595:	lea    r8,[rsp+0x40]
   14004359a:	mov    rdx,rbx
   14004359d:	call   0x140046784
   1400435a2:	test   eax,eax
   1400435a4:	jne    0x1400436bf
   1400435aa:	xor    eax,eax
   1400435ac:	jmp    0x14004369d
   1400435b1:	call   QWORD PTR [rip+0x7b29]        # 0x14004b0e0
   1400435b7:	cmp    eax,0x7a
   1400435ba:	jne    0x14004369a
   1400435c0:	xor    r9d,r9d
   1400435c3:	mov    DWORD PTR [rsp+0x20],edi
   1400435c7:	mov    r8d,ebp
   1400435ca:	mov    rdx,r14
   1400435cd:	mov    rcx,r12
   1400435d0:	call   0x14004336c
   1400435d5:	movsxd r15,eax
   1400435d8:	test   eax,eax
   1400435da:	je     0x14004369a
   1400435e0:	mov    rcx,r15
   1400435e3:	mov    edx,0x1
   1400435e8:	call   0x140035d88
   1400435ed:	mov    rbx,rax
   1400435f0:	test   rax,rax
   1400435f3:	je     0x14004361a
   1400435f5:	mov    r9,rax
   1400435f8:	mov    DWORD PTR [rsp+0x20],r15d
   1400435fd:	mov    r8d,ebp
   140043600:	mov    rdx,r14
   140043603:	mov    rcx,r12
   140043606:	call   0x14004336c
   14004360b:	test   eax,eax
   14004360d:	je     0x14004361a
   14004360f:	mov    rax,rbx
   140043612:	mov    rbx,rdi
   140043615:	mov    QWORD PTR [rsi],rax
   140043618:	jmp    0x14004361d
   14004361a:	or     edi,0xffffffff
   14004361d:	mov    rcx,rbx
   140043620:	call   0x140038c70
   140043625:	mov    eax,edi
   140043627:	jmp    0x14004369d
   140043629:	mov    ebx,0x2
   14004362e:	cmp    edx,ebx
   140043630:	jne    0x14004366d
   140043632:	xor    r9d,r9d
   140043635:	xor    r8d,r8d
   140043638:	mov    edx,ebp
   14004363a:	mov    rcx,r14
   14004363d:	call   0x14003d17c
   140043642:	movsxd r15,eax
   140043645:	test   eax,eax
   140043647:	je     0x14004369a
   140043649:	mov    rcx,r15
   14004364c:	mov    edx,ebx
   14004364e:	call   0x140035d88
   140043653:	mov    rbx,rax
   140043656:	test   rax,rax
   140043659:	je     0x14004361a
   14004365b:	mov    r9d,r15d
   14004365e:	mov    r8,rax
   140043661:	mov    edx,ebp
   140043663:	mov    rcx,r14
   140043666:	call   0x14003d17c
   14004366b:	jmp    0x14004360b
   14004366d:	test   edx,edx
   14004366f:	jne    0x14004369a
   140043671:	bts    ebp,0x1d
   140043675:	mov    DWORD PTR [rsp+0x30],edi
   140043679:	mov    edx,ebp
   14004367b:	lea    r8,[rsp+0x30]
   140043680:	mov    r9d,ebx
   140043683:	mov    rcx,r14
   140043686:	call   0x14003d17c
   14004368b:	test   eax,eax
   14004368d:	je     0x14004369a
   14004368f:	mov    al,BYTE PTR [rsp+0x30]
   140043693:	mov    BYTE PTR [rsi],al
   140043695:	jmp    0x1400435aa
   14004369a:	or     eax,0xffffffff
   14004369d:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400436a5:	xor    rcx,rsp
   1400436a8:	call   0x140025df0
   1400436ad:	add    rsp,0xd0
   1400436b4:	pop    r15
   1400436b6:	pop    r14
   1400436b8:	pop    r12
   1400436ba:	pop    rdi
   1400436bb:	pop    rsi
   1400436bc:	pop    rbp
   1400436bd:	pop    rbx
   1400436be:	ret    
   1400436bf:	xor    r9d,r9d
   1400436c2:	mov    QWORD PTR [rsp+0x20],rdi
   1400436c7:	xor    r8d,r8d
   1400436ca:	xor    edx,edx
   1400436cc:	xor    ecx,ecx
   1400436ce:	call   0x140030820
   1400436d3:	int3   
   1400436d4:	int3   
   1400436d5:	int3   
   1400436d6:	int3   
   1400436d7:	int3   
   1400436d8:	int3   
   1400436d9:	int3   
   1400436da:	int3   
   1400436db:	int3   
   1400436dc:	int3   
   1400436dd:	int3   
   1400436de:	int3   
   1400436df:	int3   
   1400436e0:	rex push rbx
   1400436e2:	sub    rsp,0x10
   1400436e6:	xor    r8d,r8d
   1400436e9:	xor    ecx,ecx
   1400436eb:	mov    DWORD PTR [rip+0x33c0a],r8d        # 0x1400772fc
   1400436f2:	lea    r9d,[r8+0x1]
   1400436f6:	mov    eax,r9d
   1400436f9:	cpuid  
   1400436fb:	mov    DWORD PTR [rsp],eax
   1400436fe:	mov    eax,0x18001000
   140043703:	mov    DWORD PTR [rsp+0x8],ecx
   140043707:	and    ecx,eax
   140043709:	mov    DWORD PTR [rsp+0x4],ebx
   14004370d:	mov    DWORD PTR [rsp+0xc],edx
   140043711:	cmp    ecx,eax
   140043713:	jne    0x140043741
   140043715:	xor    ecx,ecx
   140043717:	xgetbv 
   14004371a:	shl    rdx,0x20
   14004371e:	or     rdx,rax
   140043721:	mov    QWORD PTR [rsp+0x20],rdx
   140043726:	mov    rax,QWORD PTR [rsp+0x20]
   14004372b:	mov    r8d,DWORD PTR [rip+0x33bca]        # 0x1400772fc
   140043732:	and    al,0x6
   140043734:	cmp    al,0x6
   140043736:	cmove  r8d,r9d
   14004373a:	mov    DWORD PTR [rip+0x33bbb],r8d        # 0x1400772fc
   140043741:	mov    DWORD PTR [rip+0x33bb8],r8d        # 0x140077300
   140043748:	xor    eax,eax
   14004374a:	add    rsp,0x10
   14004374e:	pop    rbx
   14004374f:	ret    
   140043750:	sub    rsp,0x78
   140043754:	mov    eax,0x2
   140043759:	movaps XMMWORD PTR [rsp+0x60],xmm6
   14004375e:	movaps xmm6,xmm2
   140043761:	cmp    r9d,eax
   140043764:	je     0x140043828
   14004376a:	jbe    0x140043867
   140043770:	cmp    r9d,0x5
   140043774:	jbe    0x14004380f
   14004377a:	cmp    r9d,0x6
   14004377e:	je     0x1400437e7
   140043780:	jbe    0x140043867
   140043786:	cmp    r9d,0x8
   14004378a:	jbe    0x1400437bf
   14004378c:	cmp    r9d,0x9
   140043790:	jne    0x140043867
   140043796:	mov    DWORD PTR [rsp+0x40],eax
   14004379a:	lea    r9d,[rax+0x1]
   14004379e:	movsd  QWORD PTR [rsp+0x38],xmm1
   1400437a4:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400437aa:	mov    DWORD PTR [rsp+0x28],0x22
   1400437b2:	mov    DWORD PTR [rsp+0x20],0x11
   1400437ba:	jmp    0x14004384b
   1400437bf:	mov    DWORD PTR [rsp+0x40],eax
   1400437c3:	mov    r9d,0x4
   1400437c9:	movsd  QWORD PTR [rsp+0x38],xmm1
   1400437cf:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400437d5:	mov    DWORD PTR [rsp+0x28],0x22
   1400437dd:	mov    DWORD PTR [rsp+0x20],0x12
   1400437e5:	jmp    0x14004384b
   1400437e7:	mov    DWORD PTR [rsp+0x40],eax
   1400437eb:	mov    r9d,0x1
   1400437f1:	movsd  QWORD PTR [rsp+0x38],xmm1
   1400437f7:	movsd  QWORD PTR [rsp+0x30],xmm0
   1400437fd:	mov    DWORD PTR [rsp+0x28],0x21
   140043805:	mov    DWORD PTR [rsp+0x20],0x8
   14004380d:	jmp    0x14004384b
   14004380f:	movsd  QWORD PTR [rsp+0x50],xmm2
   140043815:	mov    rcx,QWORD PTR [rsp+0x50]
   14004381a:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14004381f:	add    rsp,0x78
   140043823:	jmp    0x140046eb4
   140043828:	mov    DWORD PTR [rsp+0x40],eax
   14004382c:	mov    r9d,eax
   14004382f:	movsd  QWORD PTR [rsp+0x38],xmm1
   140043835:	movsd  QWORD PTR [rsp+0x30],xmm0
   14004383b:	mov    DWORD PTR [rsp+0x28],0x22
   140043843:	mov    DWORD PTR [rsp+0x20],0x4
   14004384b:	movsd  QWORD PTR [rsp+0x50],xmm2
   140043851:	lea    rcx,[rip+0x1419c]        # 0x1400579f4
   140043858:	mov    r8,QWORD PTR [rsp+0x50]
   14004385d:	mov    edx,0x1d
   140043862:	call   0x140046c58
   140043867:	movaps xmm0,xmm6
   14004386a:	movaps xmm6,XMMWORD PTR [rsp+0x60]
   14004386f:	add    rsp,0x78
   140043873:	ret    
   140043874:	mov    rax,rsp
   140043877:	push   rbp
   140043878:	lea    rbp,[rax-0x5f]
   14004387c:	sub    rsp,0x90
   140043883:	movaps XMMWORD PTR [rax-0x18],xmm6
   140043887:	movaps xmm6,xmm2
   14004388a:	mov    eax,0x2
   14004388f:	cmp    r9d,0x1
   140043893:	je     0x1400439ac
   140043899:	cmp    r9d,eax
   14004389c:	je     0x140043979
   1400438a2:	jbe    0x1400439eb
   1400438a8:	cmp    r9d,0x5
   1400438ac:	jbe    0x14004396a
   1400438b2:	cmp    r9d,0x6
   1400438b6:	je     0x14004393c
   1400438bc:	cmp    r9d,0x7
   1400438c0:	je     0x140043903
   1400438c2:	cmp    r9d,0x9
   1400438c6:	jne    0x1400439eb
   1400438cc:	and    QWORD PTR [rbp+0x17],0x0
   1400438d1:	lea    r9d,[rax+0x1]
   1400438d5:	mov    DWORD PTR [rsp+0x40],eax
   1400438d9:	movss  DWORD PTR [rsp+0x38],xmm1
   1400438df:	movss  DWORD PTR [rsp+0x30],xmm0
   1400438e5:	mov    DWORD PTR [rsp+0x28],0x22
   1400438ed:	movss  DWORD PTR [rbp+0x17],xmm6
   1400438f2:	mov    r8,QWORD PTR [rbp+0x17]
   1400438f6:	mov    DWORD PTR [rsp+0x20],0x11
   1400438fe:	jmp    0x1400439da
   140043903:	and    QWORD PTR [rbp+0x1f],0x0
   140043908:	mov    r9d,0x4
   14004390e:	mov    DWORD PTR [rsp+0x40],eax
   140043912:	movss  DWORD PTR [rsp+0x38],xmm1
   140043918:	movss  DWORD PTR [rsp+0x30],xmm0
   14004391e:	mov    DWORD PTR [rsp+0x28],0x22
   140043926:	movss  DWORD PTR [rbp+0x1f],xmm6
   14004392b:	mov    r8,QWORD PTR [rbp+0x1f]
   14004392f:	mov    DWORD PTR [rsp+0x20],0x12
   140043937:	jmp    0x1400439da
   14004393c:	and    QWORD PTR [rbp+0x27],0x0
   140043941:	mov    r9d,0x1
   140043947:	mov    DWORD PTR [rsp+0x40],eax
   14004394b:	movss  DWORD PTR [rsp+0x38],xmm1
   140043951:	movss  DWORD PTR [rsp+0x30],xmm0
   140043957:	movss  DWORD PTR [rbp+0x27],xmm6
   14004395c:	mov    r8,QWORD PTR [rbp+0x27]
   140043960:	mov    DWORD PTR [rsp+0x28],0x21
   140043968:	jmp    0x1400439d2
   14004396a:	movss  DWORD PTR [rbp+0x7f],xmm6
   14004396f:	mov    ecx,DWORD PTR [rbp+0x7f]
   140043972:	call   0x140046ed0
   140043977:	jmp    0x1400439ee
   140043979:	and    QWORD PTR [rbp+0x2f],0x0
   14004397e:	mov    r9d,eax
   140043981:	mov    DWORD PTR [rsp+0x40],eax
   140043985:	movss  DWORD PTR [rsp+0x38],xmm1
   14004398b:	movss  DWORD PTR [rsp+0x30],xmm0
   140043991:	mov    DWORD PTR [rsp+0x28],0x22
   140043999:	movss  DWORD PTR [rbp+0x2f],xmm6
   14004399e:	mov    r8,QWORD PTR [rbp+0x2f]
   1400439a2:	mov    DWORD PTR [rsp+0x20],0x4
   1400439aa:	jmp    0x1400439da
   1400439ac:	and    QWORD PTR [rbp+0x37],0x0
   1400439b1:	mov    DWORD PTR [rsp+0x40],eax
   1400439b5:	movss  DWORD PTR [rsp+0x38],xmm1
   1400439bb:	movss  DWORD PTR [rsp+0x30],xmm0
   1400439c1:	and    DWORD PTR [rsp+0x28],0x0
   1400439c6:	movss  DWORD PTR [rbp+0x37],xmm6
   1400439cb:	xor    r9d,r9d
   1400439ce:	mov    r8,QWORD PTR [rbp+0x37]
   1400439d2:	mov    DWORD PTR [rsp+0x20],0x8
   1400439da:	mov    edx,0x1d
   1400439df:	lea    rcx,[rip+0x16b5a]        # 0x14005a540
   1400439e6:	call   0x140046d80
   1400439eb:	movaps xmm0,xmm6
   1400439ee:	movaps xmm6,XMMWORD PTR [rsp+0x80]
   1400439f6:	add    rsp,0x90
   1400439fd:	pop    rbp
   1400439fe:	ret    
   1400439ff:	int3   
   140043a00:	lea    rax,[rip+0x2e189]        # 0x140071b90
   140043a07:	mov    DWORD PTR [rip+0x338f7],0x7080        # 0x140077308
   140043a11:	mov    QWORD PTR [rip+0x33900],rax        # 0x140077318
   140043a18:	xor    eax,eax
   140043a1a:	mov    DWORD PTR [rip+0x338e8],0x1        # 0x14007730c
   140043a24:	mov    DWORD PTR [rip+0x338e2],0xfffff1f0        # 0x140077310
   140043a2e:	ret    
   140043a2f:	int3   
   140043a30:	rex push rbx
   140043a32:	sub    rsp,0x20
   140043a36:	xor    ebx,ebx
   140043a38:	test   rcx,rcx
   140043a3b:	jne    0x140043a55
   140043a3d:	call   0x140032c50
   140043a42:	mov    ebx,0x16
   140043a47:	mov    DWORD PTR [rax],ebx
   140043a49:	call   0x1400307d0
   140043a4e:	mov    eax,ebx
   140043a50:	jmp    0x140043ae9
   140043a55:	test   rdx,rdx
   140043a58:	je     0x140043a3d
   140043a5a:	test   r8d,r8d
   140043a5d:	mov    BYTE PTR [rcx],bl
   140043a5f:	mov    eax,ebx
   140043a61:	cmovg  eax,r8d
   140043a65:	inc    eax
   140043a67:	cdqe   
   140043a69:	cmp    rdx,rax
   140043a6c:	ja     0x140043a7a
   140043a6e:	call   0x140032c50
   140043a73:	mov    ebx,0x22
   140043a78:	jmp    0x140043a47
   140043a7a:	test   r9,r9
   140043a7d:	je     0x140043a3d
   140043a7f:	mov    rdx,QWORD PTR [r9+0x8]
   140043a83:	lea    rax,[rcx+0x1]
   140043a87:	mov    BYTE PTR [rcx],0x30
   140043a8a:	jmp    0x140043aa5
   140043a8c:	mov    r10b,BYTE PTR [rdx]
   140043a8f:	test   r10b,r10b
   140043a92:	je     0x140043a99
   140043a94:	inc    rdx
   140043a97:	jmp    0x140043a9c
   140043a99:	mov    r10b,0x30
   140043a9c:	mov    BYTE PTR [rax],r10b
   140043a9f:	inc    rax
   140043aa2:	dec    r8d
   140043aa5:	test   r8d,r8d
   140043aa8:	jg     0x140043a8c
   140043aaa:	mov    BYTE PTR [rax],bl
   140043aac:	js     0x140043ac2
   140043aae:	cmp    BYTE PTR [rdx],0x35
   140043ab1:	jl     0x140043ac2
   140043ab3:	jmp    0x140043ab8
   140043ab5:	mov    BYTE PTR [rax],0x30
   140043ab8:	dec    rax
   140043abb:	cmp    BYTE PTR [rax],0x39
   140043abe:	je     0x140043ab5
   140043ac0:	inc    BYTE PTR [rax]
   140043ac2:	cmp    BYTE PTR [rcx],0x31
   140043ac5:	jne    0x140043acd
   140043ac7:	inc    DWORD PTR [r9+0x4]
   140043acb:	jmp    0x140043ae7
   140043acd:	or     r8,0xffffffffffffffff
   140043ad1:	inc    r8
   140043ad4:	cmp    BYTE PTR [rcx+r8*1+0x1],bl
   140043ad9:	jne    0x140043ad1
   140043adb:	inc    r8
   140043ade:	lea    rdx,[rcx+0x1]
   140043ae2:	call   0x140028fd0
   140043ae7:	xor    eax,eax
   140043ae9:	add    rsp,0x20
   140043aed:	pop    rbx
   140043aee:	ret    
   140043aef:	int3   
   140043af0:	rex push rbp
   140043af2:	push   rbx
   140043af3:	push   rsi
   140043af4:	push   rdi
   140043af5:	push   r12
   140043af7:	push   r13
   140043af9:	push   r14
   140043afb:	push   r15
   140043afd:	lea    rbp,[rsp-0x6d8]
   140043b05:	sub    rsp,0x7d8
   140043b0c:	mov    rax,QWORD PTR [rip+0x2d53d]        # 0x140071050
   140043b13:	xor    rax,rsp
   140043b16:	mov    QWORD PTR [rbp+0x6c0],rax
   140043b1d:	mov    QWORD PTR [rsp+0x38],rcx
   140043b22:	mov    r14,r9
   140043b25:	lea    rcx,[rsp+0x60]
   140043b2a:	mov    QWORD PTR [rsp+0x50],r9
   140043b2f:	mov    r15,r8
   140043b32:	mov    QWORD PTR [rsp+0x70],r8
   140043b37:	mov    esi,edx
   140043b39:	call   0x140046ee0
   140043b3e:	mov    eax,DWORD PTR [rsp+0x60]
   140043b42:	xor    r13d,r13d
   140043b45:	and    eax,0x1f
   140043b48:	cmp    al,0x1f
   140043b4a:	jne    0x140043b53
   140043b4c:	mov    BYTE PTR [rsp+0x68],r13b
   140043b51:	jmp    0x140043b62
   140043b53:	lea    rcx,[rsp+0x60]
   140043b58:	call   0x140046f4c
   140043b5d:	mov    BYTE PTR [rsp+0x68],0x1
   140043b62:	mov    rbx,QWORD PTR [rsp+0x38]
   140043b67:	movabs rcx,0x8000000000000000
   140043b71:	mov    rax,rbx
   140043b74:	mov    QWORD PTR [r15+0x8],r14
   140043b78:	and    rax,rcx
   140043b7b:	mov    edi,0x20
   140043b80:	neg    rax
   140043b83:	movabs r12,0xfffffffffffff
   140043b8d:	movabs rax,0x7ff0000000000000
   140043b97:	sbb    ecx,ecx
   140043b99:	and    ecx,0xd
   140043b9c:	add    ecx,edi
   140043b9e:	mov    DWORD PTR [r15],ecx
   140043ba1:	test   rax,rbx
   140043ba4:	jne    0x140043bd2
   140043ba6:	test   r12,rbx
   140043ba9:	jne    0x140043bd2
   140043bab:	mov    rdx,QWORD PTR [rbp+0x740]
   140043bb2:	lea    r8,[rip+0x173a7]        # 0x14005af60
   140043bb9:	mov    rcx,r14
   140043bbc:	mov    DWORD PTR [r15+0x4],r13d
   140043bc0:	call   0x140038d18
   140043bc5:	test   eax,eax
   140043bc7:	je     0x140044dbe
   140043bcd:	jmp    0x140044df2
   140043bd2:	lea    rcx,[rsp+0x38]
   140043bd7:	call   0x1400397ac
   140043bdc:	test   eax,eax
   140043bde:	je     0x140043be8
   140043be0:	mov    DWORD PTR [r15+0x4],0x1
   140043be8:	sub    eax,0x1
   140043beb:	je     0x140044da0
   140043bf1:	sub    eax,0x1
   140043bf4:	je     0x140044d81
   140043bfa:	sub    eax,0x1
   140043bfd:	je     0x140044d62
   140043c03:	cmp    eax,0x1
   140043c06:	je     0x140044d43
   140043c0c:	movabs rax,0x7fffffffffffffff
   140043c16:	mov    r9d,0x7ff
   140043c1c:	and    rbx,rax
   140043c1f:	inc    esi
   140043c21:	mov    QWORD PTR [rsp+0x38],rbx
   140043c26:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140043c2c:	movsd  QWORD PTR [rsp+0x58],xmm0
   140043c32:	mov    rdx,QWORD PTR [rsp+0x58]
   140043c37:	mov    r8,rdx
   140043c3a:	mov    DWORD PTR [rsp+0x4c],esi
   140043c3e:	shr    r8,0x34
   140043c42:	test   r9,r8
   140043c45:	sete   cl
   140043c48:	mov    al,cl
   140043c4a:	neg    al
   140043c4c:	movabs rax,0x10000000000000
   140043c56:	sbb    r14,r14
   140043c59:	and    rdx,r12
   140043c5c:	not    r14
   140043c5f:	and    r14,rax
   140043c62:	add    r14,rdx
   140043c65:	neg    cl
   140043c67:	sbb    eax,eax
   140043c69:	and    r8d,r9d
   140043c6c:	neg    eax
   140043c6e:	inc    eax
   140043c70:	lea    ebx,[r8-0x434]
   140043c77:	add    ebx,eax
   140043c79:	call   0x140047060
   140043c7e:	call   0x140046f9c
   140043c83:	cvttsd2si ecx,xmm0
   140043c87:	mov    DWORD PTR [rbp-0x7c],r14d
   140043c8b:	mov    r10d,0x1
   140043c91:	lea    eax,[rcx-0x7fffffff]
   140043c97:	and    eax,0xfffffffe
   140043c9a:	neg    eax
   140043c9c:	sbb    r12d,r12d
   140043c9f:	shr    r14,0x20
   140043ca3:	and    r12d,ecx
   140043ca6:	mov    DWORD PTR [rbp-0x78],r14d
   140043caa:	mov    eax,r14d
   140043cad:	mov    DWORD PTR [rsp+0x30],r12d
   140043cb2:	neg    eax
   140043cb4:	sbb    edx,edx
   140043cb6:	neg    edx
   140043cb8:	add    edx,r10d
   140043cbb:	mov    DWORD PTR [rbp-0x80],edx
   140043cbe:	test   ebx,ebx
   140043cc0:	js     0x140043f6f
   140043cc6:	xor    eax,eax
   140043cc8:	mov    DWORD PTR [rbp+0x328],0x100000
   140043cd2:	mov    DWORD PTR [rbp+0x324],eax
   140043cd8:	lea    esi,[rax+0x2]
   140043cdb:	mov    DWORD PTR [rbp+0x320],esi
   140043ce1:	cmp    edx,esi
   140043ce3:	jne    0x140043e4a
   140043ce9:	mov    r8d,r13d
   140043cec:	mov    ecx,r8d
   140043cef:	mov    eax,DWORD PTR [rbp+rcx*4-0x7c]
   140043cf3:	cmp    DWORD PTR [rbp+rcx*4+0x324],eax
   140043cfa:	jne    0x140043e4a
   140043d00:	add    r8d,r10d
   140043d03:	cmp    r8d,esi
   140043d06:	jne    0x140043cec
   140043d08:	lea    r11d,[rbx+0x2]
   140043d0c:	mov    DWORD PTR [rsp+0x38],r13d
   140043d11:	mov    r9d,r11d
   140043d14:	mov    esi,edi
   140043d16:	and    r11d,0x1f
   140043d1a:	shr    r9d,0x5
   140043d1e:	sub    esi,r11d
   140043d21:	mov    rbx,r10
   140043d24:	mov    ecx,esi
   140043d26:	shl    rbx,cl
   140043d29:	sub    ebx,r10d
   140043d2c:	bsr    eax,r14d
   140043d30:	mov    r12d,ebx
   140043d33:	not    r12d
   140043d36:	je     0x140043d3c
   140043d38:	inc    eax
   140043d3a:	jmp    0x140043d3f
   140043d3c:	mov    eax,r13d
   140043d3f:	sub    edi,eax
   140043d41:	lea    eax,[r9+0x2]
   140043d45:	cmp    r11d,edi
   140043d48:	seta   r15b
   140043d4c:	cmp    eax,0x73
   140043d4f:	seta   r8b
   140043d53:	cmp    eax,0x73
   140043d56:	jne    0x140043d60
   140043d58:	mov    cl,r10b
   140043d5b:	test   r15b,r15b
   140043d5e:	jne    0x140043d63
   140043d60:	mov    cl,r13b
   140043d63:	or     r13d,0xffffffff
   140043d67:	test   r8b,r8b
   140043d6a:	jne    0x140043e11
   140043d70:	test   cl,cl
   140043d72:	jne    0x140043e11
   140043d78:	mov    r14d,0x72
   140043d7e:	cmp    eax,r14d
   140043d81:	cmovb  r14d,eax
   140043d85:	cmp    r14d,r13d
   140043d88:	je     0x140043de6
   140043d8a:	mov    r8d,r14d
   140043d8d:	sub    r8d,r9d
   140043d90:	lea    edi,[r8+r9*1]
   140043d94:	cmp    edi,r9d
   140043d97:	jb     0x140043de0
   140043d99:	cmp    r8d,edx
   140043d9c:	jae    0x140043da5
   140043d9e:	mov    r10d,DWORD PTR [rbp+r8*4-0x7c]
   140043da3:	jmp    0x140043da8
   140043da5:	xor    r10d,r10d
   140043da8:	lea    eax,[r8-0x1]
   140043dac:	cmp    eax,edx
   140043dae:	jae    0x140043db6
   140043db0:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   140043db4:	jmp    0x140043db8
   140043db6:	xor    edx,edx
   140043db8:	and    edx,r12d
   140043dbb:	mov    ecx,esi
   140043dbd:	shr    edx,cl
   140043dbf:	add    r8d,r13d
   140043dc2:	and    r10d,ebx
   140043dc5:	mov    ecx,r11d
   140043dc8:	shl    r10d,cl
   140043dcb:	or     edx,r10d
   140043dce:	lea    eax,[r8+r9*1]
   140043dd2:	mov    DWORD PTR [rbp+rdi*4-0x7c],edx
   140043dd6:	cmp    eax,r13d
   140043dd9:	je     0x140043de0
   140043ddb:	mov    edx,DWORD PTR [rbp-0x80]
   140043dde:	jmp    0x140043d90
   140043de0:	mov    r10d,0x1
   140043de6:	xor    r13d,r13d
   140043de9:	mov    ecx,r13d
   140043dec:	test   r9d,r9d
   140043def:	je     0x140043e00
   140043df1:	mov    eax,ecx
   140043df3:	add    ecx,r10d
   140043df6:	mov    DWORD PTR [rbp+rax*4-0x7c],r13d
   140043dfb:	cmp    ecx,r9d
   140043dfe:	jne    0x140043df1
   140043e00:	test   r15b,r15b
   140043e03:	lea    eax,[r14+0x1]
   140043e07:	cmovne r14d,eax
   140043e0b:	mov    DWORD PTR [rbp-0x80],r14d
   140043e0f:	jmp    0x140043e1b
   140043e11:	xor    r13d,r13d
   140043e14:	mov    r14d,r13d
   140043e17:	mov    DWORD PTR [rbp-0x80],r13d
   140043e1b:	mov    DWORD PTR [rbp+0x154],0x4
   140043e25:	mov    r12d,DWORD PTR [rsp+0x30]
   140043e2a:	mov    r15d,0x1
   140043e30:	mov    DWORD PTR [rbp+0x150],r15d
   140043e37:	mov    DWORD PTR [rbp+0x320],r15d
   140043e3e:	mov    DWORD PTR [rbp+0x328],r13d
   140043e45:	jmp    0x1400441be
   140043e4a:	and    DWORD PTR [rsp+0x38],0x0
   140043e4f:	lea    r11d,[rbx+0x1]
   140043e53:	mov    r9d,r11d
   140043e56:	lea    eax,[rdx-0x1]
   140043e59:	and    r11d,0x1f
   140043e5d:	shr    r9d,0x5
   140043e61:	mov    r15d,edi
   140043e64:	mov    rbx,r10
   140043e67:	sub    r15d,r11d
   140043e6a:	mov    ecx,r15d
   140043e6d:	shl    rbx,cl
   140043e70:	sub    ebx,r10d
   140043e73:	mov    ecx,eax
   140043e75:	bsr    eax,DWORD PTR [rbp+rax*4-0x7c]
   140043e7a:	mov    r13d,ebx
   140043e7d:	not    r13d
   140043e80:	je     0x140043e86
   140043e82:	inc    eax
   140043e84:	jmp    0x140043e88
   140043e86:	xor    eax,eax
   140043e88:	sub    edi,eax
   140043e8a:	lea    eax,[rdx+r9*1]
   140043e8e:	cmp    r11d,edi
   140043e91:	seta   r12b
   140043e95:	cmp    eax,0x73
   140043e98:	seta   r8b
   140043e9c:	cmp    eax,0x73
   140043e9f:	jne    0x140043eab
   140043ea1:	test   r12b,r12b
   140043ea4:	je     0x140043eab
   140043ea6:	mov    cl,r10b
   140043ea9:	jmp    0x140043ead
   140043eab:	xor    cl,cl
   140043ead:	or     r10d,0xffffffff
   140043eb1:	test   r8b,r8b
   140043eb4:	jne    0x140043f5a
   140043eba:	test   cl,cl
   140043ebc:	jne    0x140043f5a
   140043ec2:	mov    r14d,0x72
   140043ec8:	cmp    eax,r14d
   140043ecb:	cmovb  r14d,eax
   140043ecf:	cmp    r14d,r10d
   140043ed2:	je     0x140043f30
   140043ed4:	mov    r8d,r14d
   140043ed7:	sub    r8d,r9d
   140043eda:	lea    edi,[r8+r9*1]
   140043ede:	cmp    edi,r9d
   140043ee1:	jb     0x140043f30
   140043ee3:	cmp    r8d,edx
   140043ee6:	jae    0x140043eef
   140043ee8:	mov    r10d,DWORD PTR [rbp+r8*4-0x7c]
   140043eed:	jmp    0x140043ef2
   140043eef:	xor    r10d,r10d
   140043ef2:	lea    eax,[r8-0x1]
   140043ef6:	cmp    eax,edx
   140043ef8:	jae    0x140043f00
   140043efa:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   140043efe:	jmp    0x140043f02
   140043f00:	xor    edx,edx
   140043f02:	and    r10d,ebx
   140043f05:	mov    ecx,r11d
   140043f08:	shl    r10d,cl
   140043f0b:	and    edx,r13d
   140043f0e:	mov    ecx,r15d
   140043f11:	shr    edx,cl
   140043f13:	or     r10d,edx
   140043f16:	mov    DWORD PTR [rbp+rdi*4-0x7c],r10d
   140043f1b:	or     r10d,0xffffffff
   140043f1f:	add    r8d,r10d
   140043f22:	lea    eax,[r8+r9*1]
   140043f26:	cmp    eax,r10d
   140043f29:	je     0x140043f30
   140043f2b:	mov    edx,DWORD PTR [rbp-0x80]
   140043f2e:	jmp    0x140043eda
   140043f30:	xor    r13d,r13d
   140043f33:	mov    ecx,r13d
   140043f36:	test   r9d,r9d
   140043f39:	je     0x140043f49
   140043f3b:	mov    eax,ecx
   140043f3d:	inc    ecx
   140043f3f:	mov    DWORD PTR [rbp+rax*4-0x7c],r13d
   140043f44:	cmp    ecx,r9d
   140043f47:	jne    0x140043f3b
   140043f49:	test   r12b,r12b
   140043f4c:	lea    eax,[r14+0x1]
   140043f50:	cmovne r14d,eax
   140043f54:	mov    DWORD PTR [rbp-0x80],r14d
   140043f58:	jmp    0x140043f64
   140043f5a:	xor    r13d,r13d
   140043f5d:	mov    r14d,r13d
   140043f60:	mov    DWORD PTR [rbp-0x80],r13d
   140043f64:	mov    DWORD PTR [rbp+0x154],esi
   140043f6a:	jmp    0x140043e25
   140043f6f:	cmp    ebx,0xfffffc02
   140043f75:	je     0x1400440a7
   140043f7b:	xor    eax,eax
   140043f7d:	mov    DWORD PTR [rbp+0x328],0x100000
   140043f87:	mov    DWORD PTR [rbp+0x324],eax
   140043f8d:	lea    esi,[rax+0x2]
   140043f90:	mov    DWORD PTR [rbp+0x320],esi
   140043f96:	cmp    edx,esi
   140043f98:	jne    0x1400440a7
   140043f9e:	mov    r8d,r13d
   140043fa1:	mov    ecx,r8d
   140043fa4:	mov    eax,DWORD PTR [rbp+rcx*4-0x7c]
   140043fa8:	cmp    DWORD PTR [rbp+rcx*4+0x324],eax
   140043faf:	jne    0x1400440a7
   140043fb5:	add    r8d,r10d
   140043fb8:	cmp    r8d,esi
   140043fbb:	jne    0x140043fa1
   140043fbd:	bsr    eax,r14d
   140043fc1:	mov    DWORD PTR [rsp+0x38],r13d
   140043fc6:	je     0x140043fcc
   140043fc8:	inc    eax
   140043fca:	jmp    0x140043fcf
   140043fcc:	mov    eax,r13d
   140043fcf:	sub    edi,eax
   140043fd1:	mov    ecx,esi
   140043fd3:	cmp    edi,esi
   140043fd5:	setb   r9b
   140043fd9:	or     r13d,0xffffffff
   140043fdd:	cmp    ecx,edx
   140043fdf:	jae    0x140043fea
   140043fe1:	mov    eax,ecx
   140043fe3:	mov    r8d,DWORD PTR [rbp+rax*4-0x7c]
   140043fe8:	jmp    0x140043fed
   140043fea:	xor    r8d,r8d
   140043fed:	lea    eax,[rcx-0x1]
   140043ff0:	cmp    eax,edx
   140043ff2:	jae    0x140043ffa
   140043ff4:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   140043ff8:	jmp    0x140043ffc
   140043ffa:	xor    edx,edx
   140043ffc:	mov    eax,r8d
   140043fff:	shr    edx,0x1e
   140044002:	shl    eax,0x2
   140044005:	xor    edx,eax
   140044007:	mov    eax,ecx
   140044009:	add    ecx,r13d
   14004400c:	mov    DWORD PTR [rbp+rax*4-0x7c],edx
   140044010:	cmp    ecx,r13d
   140044013:	je     0x14004401a
   140044015:	mov    edx,DWORD PTR [rbp-0x80]
   140044018:	jmp    0x140043fdd
   14004401a:	neg    r9b
   14004401d:	lea    rcx,[rbp+0x324]
   140044024:	sbb    r14d,r14d
   140044027:	xor    edx,edx
   140044029:	neg    r14d
   14004402c:	add    r14d,esi
   14004402f:	sub    esi,ebx
   140044031:	mov    edi,esi
   140044033:	mov    DWORD PTR [rbp-0x80],r14d
   140044037:	shr    edi,0x5
   14004403a:	mov    ebx,edi
   14004403c:	shl    rbx,0x2
   140044040:	mov    r8,rbx
   140044043:	call   0x14002a910
   140044048:	and    esi,0x1f
   14004404b:	lea    r15d,[rdi+0x1]
   14004404f:	mov    cl,sil
   140044052:	mov    r8d,r15d
   140044055:	mov    eax,0x1
   14004405a:	shl    r8,0x2
   14004405e:	shl    eax,cl
   140044060:	mov    DWORD PTR [rbp+rbx*1+0x324],eax
   140044067:	xor    r13d,r13d
   14004406a:	mov    DWORD PTR [rbp+0x150],r15d
   140044071:	mov    DWORD PTR [rbp+0x320],r15d
   140044078:	test   r8,r8
   14004407b:	je     0x1400441be
   140044081:	mov    ebx,0x1cc
   140044086:	lea    rcx,[rbp+0x154]
   14004408d:	cmp    r8,rbx
   140044090:	ja     0x14004419d
   140044096:	lea    rdx,[rbp+0x324]
   14004409d:	call   0x140028fd0
   1400440a2:	jmp    0x1400441b7
   1400440a7:	lea    eax,[rdx-0x1]
   1400440aa:	mov    DWORD PTR [rsp+0x38],r13d
   1400440af:	mov    ecx,eax
   1400440b1:	bsr    eax,DWORD PTR [rbp+rax*4-0x7c]
   1400440b6:	je     0x1400440bc
   1400440b8:	inc    eax
   1400440ba:	jmp    0x1400440bf
   1400440bc:	mov    eax,r13d
   1400440bf:	sub    edi,eax
   1400440c1:	cmp    edi,r10d
   1400440c4:	setb   r9b
   1400440c8:	cmp    edx,0x73
   1400440cb:	seta   cl
   1400440ce:	cmp    edx,0x73
   1400440d1:	jne    0x1400440db
   1400440d3:	mov    al,r10b
   1400440d6:	test   r9b,r9b
   1400440d9:	jne    0x1400440de
   1400440db:	mov    al,r13b
   1400440de:	or     r13d,0xffffffff
   1400440e2:	test   cl,cl
   1400440e4:	jne    0x14004414e
   1400440e6:	test   al,al
   1400440e8:	jne    0x14004414e
   1400440ea:	mov    r14d,0x72
   1400440f0:	cmp    edx,r14d
   1400440f3:	cmovb  r14d,edx
   1400440f7:	cmp    r14d,r13d
   1400440fa:	je     0x14004413a
   1400440fc:	mov    ecx,r14d
   1400440ff:	cmp    ecx,edx
   140044101:	jae    0x14004410c
   140044103:	mov    eax,ecx
   140044105:	mov    r8d,DWORD PTR [rbp+rax*4-0x7c]
   14004410a:	jmp    0x14004410f
   14004410c:	xor    r8d,r8d
   14004410f:	lea    eax,[rcx-0x1]
   140044112:	cmp    eax,edx
   140044114:	jae    0x14004411c
   140044116:	mov    edx,DWORD PTR [rbp+rax*4-0x7c]
   14004411a:	jmp    0x14004411e
   14004411c:	xor    edx,edx
   14004411e:	shr    edx,0x1f
   140044121:	lea    eax,[r8+r8*1]
   140044125:	xor    edx,eax
   140044127:	mov    eax,ecx
   140044129:	add    ecx,r13d
   14004412c:	mov    DWORD PTR [rbp+rax*4-0x7c],edx
   140044130:	cmp    ecx,r13d
   140044133:	je     0x14004413a
   140044135:	mov    edx,DWORD PTR [rbp-0x80]
   140044138:	jmp    0x1400440ff
   14004413a:	xor    r13d,r13d
   14004413d:	lea    eax,[r14+0x1]
   140044141:	test   r9b,r9b
   140044144:	cmovne r14d,eax
   140044148:	mov    DWORD PTR [rbp-0x80],r14d
   14004414c:	jmp    0x140044158
   14004414e:	xor    r13d,r13d
   140044151:	mov    r14d,r13d
   140044154:	mov    DWORD PTR [rbp-0x80],r13d
   140044158:	mov    edi,r10d
   14004415b:	lea    rcx,[rbp+0x324]
   140044162:	sub    edi,ebx
   140044164:	xor    edx,edx
   140044166:	mov    esi,edi
   140044168:	shr    esi,0x5
   14004416b:	mov    ebx,esi
   14004416d:	shl    rbx,0x2
   140044171:	mov    r8,rbx
   140044174:	call   0x14002a910
   140044179:	and    edi,0x1f
   14004417c:	lea    r15d,[rsi+0x1]
   140044180:	mov    cl,dil
   140044183:	mov    r8d,r15d
   140044186:	mov    eax,0x1
   14004418b:	shl    eax,cl
   14004418d:	mov    DWORD PTR [rbp+rbx*1+0x324],eax
   140044194:	shl    r8,0x2
   140044198:	jmp    0x14004406a
   14004419d:	mov    r8,rbx
   1400441a0:	xor    edx,edx
   1400441a2:	call   0x14002a910
   1400441a7:	call   0x140032c50
   1400441ac:	mov    DWORD PTR [rax],0x22
   1400441b2:	call   0x1400307d0
   1400441b7:	mov    r15d,DWORD PTR [rbp+0x150]
   1400441be:	mov    eax,0xcccccccd
   1400441c3:	test   r12d,r12d
   1400441c6:	js     0x14004468a
   1400441cc:	mul    r12d
   1400441cf:	mov    eax,edx
   1400441d1:	lea    rdx,[rip+0xfffffffffffbbe28]        # 0x140000000
   1400441d8:	shr    eax,0x3
   1400441db:	mov    DWORD PTR [rsp+0x48],eax
   1400441df:	mov    r12d,eax
   1400441e2:	mov    DWORD PTR [rsp+0x40],eax
   1400441e6:	test   eax,eax
   1400441e8:	je     0x1400445c1
   1400441ee:	mov    eax,0x26
   1400441f3:	mov    r13d,r12d
   1400441f6:	cmp    r12d,eax
   1400441f9:	cmova  r13d,eax
   1400441fd:	mov    DWORD PTR [rsp+0x44],r13d
   140044202:	lea    eax,[r13-0x1]
   140044206:	movzx  ecx,BYTE PTR [rdx+rax*4+0x547a2]
   14004420e:	movzx  esi,BYTE PTR [rdx+rax*4+0x547a3]
   140044216:	mov    ebx,ecx
   140044218:	mov    edi,eax
   14004421a:	xor    edx,edx
   14004421c:	shl    rbx,0x2
   140044220:	mov    r8,rbx
   140044223:	lea    eax,[rsi+rcx*1]
   140044226:	lea    rcx,[rbp+0x324]
   14004422d:	mov    DWORD PTR [rbp+0x320],eax
   140044233:	call   0x14002a910
   140044238:	lea    rcx,[rip+0xfffffffffffbbdc1]        # 0x140000000
   14004423f:	shl    rsi,0x2
   140044243:	movzx  eax,WORD PTR [rcx+rdi*4+0x547a0]
   14004424b:	lea    rdx,[rcx+0x53e90]
   140044252:	lea    rcx,[rbp+0x324]
   140044259:	mov    r8,rsi
   14004425c:	add    rcx,rbx
   14004425f:	lea    rdx,[rdx+rax*4]
   140044263:	call   0x140028fd0
   140044268:	mov    r11d,DWORD PTR [rbp+0x320]
   14004426f:	cmp    r11d,0x1
   140044273:	ja     0x14004431b
   140044279:	mov    eax,DWORD PTR [rbp+0x324]
   14004427f:	test   eax,eax
   140044281:	jne    0x140044292
   140044283:	xor    r15d,r15d
   140044286:	mov    DWORD PTR [rbp+0x150],r15d
   14004428d:	jmp    0x14004459b
   140044292:	cmp    eax,0x1
   140044295:	je     0x14004459b
   14004429b:	test   r15d,r15d
   14004429e:	je     0x14004459b
   1400442a4:	xor    r8d,r8d
   1400442a7:	mov    r10,rax
   1400442aa:	xor    r9d,r9d
   1400442ad:	mov    ecx,DWORD PTR [rbp+r9*4+0x154]
   1400442b5:	mov    eax,r8d
   1400442b8:	imul   rcx,r10
   1400442bc:	add    rcx,rax
   1400442bf:	mov    r8,rcx
   1400442c2:	mov    DWORD PTR [rbp+r9*4+0x154],ecx
   1400442ca:	shr    r8,0x20
   1400442ce:	inc    r9d
   1400442d1:	cmp    r9d,r15d
   1400442d4:	jne    0x1400442ad
   1400442d6:	test   r8d,r8d
   1400442d9:	je     0x14004430f
   1400442db:	cmp    DWORD PTR [rbp+0x150],0x73
   1400442e2:	jae    0x1400442fe
   1400442e4:	mov    eax,DWORD PTR [rbp+0x150]
   1400442ea:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   1400442f2:	mov    r15d,DWORD PTR [rbp+0x150]
   1400442f9:	inc    r15d
   1400442fc:	jmp    0x140044286
   1400442fe:	xor    r15d,r15d
   140044301:	mov    DWORD PTR [rbp+0x150],r15d
   140044308:	xor    al,al
   14004430a:	jmp    0x14004459d
   14004430f:	mov    r15d,DWORD PTR [rbp+0x150]
   140044316:	jmp    0x14004459b
   14004431b:	cmp    r15d,0x1
   14004431f:	ja     0x1400443d2
   140044325:	mov    ebx,DWORD PTR [rbp+0x154]
   14004432b:	mov    r8,r11
   14004432e:	shl    r8,0x2
   140044332:	mov    r15d,r11d
   140044335:	mov    DWORD PTR [rbp+0x150],r11d
   14004433c:	test   r8,r8
   14004433f:	je     0x140044381
   140044341:	mov    eax,0x1cc
   140044346:	lea    rcx,[rbp+0x154]
   14004434d:	cmp    r8,rax
   140044350:	ja     0x140044360
   140044352:	lea    rdx,[rbp+0x324]
   140044359:	call   0x140028fd0
   14004435e:	jmp    0x14004437a
   140044360:	mov    r8,rax
   140044363:	xor    edx,edx
   140044365:	call   0x14002a910
   14004436a:	call   0x140032c50
   14004436f:	mov    DWORD PTR [rax],0x22
   140044375:	call   0x1400307d0
   14004437a:	mov    r15d,DWORD PTR [rbp+0x150]
   140044381:	test   ebx,ebx
   140044383:	je     0x140044283
   140044389:	cmp    ebx,0x1
   14004438c:	je     0x14004459b
   140044392:	test   r15d,r15d
   140044395:	je     0x14004459b
   14004439b:	xor    r8d,r8d
   14004439e:	mov    r10,rbx
   1400443a1:	xor    r9d,r9d
   1400443a4:	mov    ecx,DWORD PTR [rbp+r9*4+0x154]
   1400443ac:	mov    eax,r8d
   1400443af:	imul   rcx,r10
   1400443b3:	add    rcx,rax
   1400443b6:	mov    r8,rcx
   1400443b9:	mov    DWORD PTR [rbp+r9*4+0x154],ecx
   1400443c1:	shr    r8,0x20
   1400443c5:	inc    r9d
   1400443c8:	cmp    r9d,r15d
   1400443cb:	jne    0x1400443a4
   1400443cd:	jmp    0x1400442d6
   1400443d2:	cmp    r11d,r15d
   1400443d5:	lea    rcx,[rbp+0x154]
   1400443dc:	mov    r12d,r15d
   1400443df:	lea    r13,[rbp+0x324]
   1400443e6:	setb   al
   1400443e9:	lea    rdx,[rbp+0x154]
   1400443f0:	test   al,al
   1400443f2:	cmove  r13,rcx
   1400443f6:	cmovne r12d,r11d
   1400443fa:	cmovne r11d,r15d
   1400443fe:	lea    rcx,[rbp+0x324]
   140044405:	cmove  rdx,rcx
   140044409:	xor    r15d,r15d
   14004440c:	xor    r10d,r10d
   14004440f:	mov    QWORD PTR [rsp+0x38],rdx
   140044414:	mov    DWORD PTR [rbp+0x4f0],r15d
   14004441b:	test   r12d,r12d
   14004441e:	je     0x14004453e
   140044424:	mov    esi,DWORD PTR [r13+r10*4+0x0]
   140044429:	mov    eax,r10d
   14004442c:	test   esi,esi
   14004442e:	jne    0x140044451
   140044430:	cmp    r10d,r15d
   140044433:	jne    0x140044532
   140044439:	and    DWORD PTR [rbp+r10*4+0x4f4],esi
   140044441:	lea    r15d,[r10+0x1]
   140044445:	mov    DWORD PTR [rbp+0x4f0],r15d
   14004444c:	jmp    0x140044532
   140044451:	xor    ebx,ebx
   140044453:	mov    r9d,r10d
   140044456:	test   r11d,r11d
   140044459:	je     0x140044523
   14004445f:	mov    edi,r10d
   140044462:	neg    edi
   140044464:	cmp    r9d,0x73
   140044468:	je     0x1400444d1
   14004446a:	cmp    r9d,r15d
   14004446d:	jne    0x14004448a
   14004446f:	mov    eax,r9d
   140044472:	lea    ecx,[r10+0x1]
   140044476:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14004447e:	lea    eax,[rdi+r9*1]
   140044482:	add    ecx,eax
   140044484:	mov    DWORD PTR [rbp+0x4f0],ecx
   14004448a:	lea    eax,[rdi+r9*1]
   14004448e:	mov    r8d,r9d
   140044491:	mov    edx,DWORD PTR [rdx+rax*4]
   140044494:	inc    r9d
   140044497:	mov    eax,ebx
   140044499:	imul   rdx,rsi
   14004449d:	add    rdx,rax
   1400444a0:	mov    eax,DWORD PTR [rbp+r8*4+0x4f4]
   1400444a8:	add    rdx,rax
   1400444ab:	lea    eax,[rdi+r9*1]
   1400444af:	mov    rbx,rdx
   1400444b2:	mov    DWORD PTR [rbp+r8*4+0x4f4],edx
   1400444ba:	mov    r15d,DWORD PTR [rbp+0x4f0]
   1400444c1:	shr    rbx,0x20
   1400444c5:	cmp    eax,r11d
   1400444c8:	je     0x1400444d1
   1400444ca:	mov    rdx,QWORD PTR [rsp+0x38]
   1400444cf:	jmp    0x140044464
   1400444d1:	test   ebx,ebx
   1400444d3:	je     0x140044523
   1400444d5:	cmp    r9d,0x73
   1400444d9:	je     0x14004465d
   1400444df:	cmp    r9d,r15d
   1400444e2:	jne    0x1400444f9
   1400444e4:	mov    eax,r9d
   1400444e7:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   1400444ef:	lea    eax,[r9+0x1]
   1400444f3:	mov    DWORD PTR [rbp+0x4f0],eax
   1400444f9:	mov    ecx,r9d
   1400444fc:	inc    r9d
   1400444ff:	mov    edx,ebx
   140044501:	mov    eax,DWORD PTR [rbp+rcx*4+0x4f4]
   140044508:	add    rdx,rax
   14004450b:	mov    DWORD PTR [rbp+rcx*4+0x4f4],edx
   140044512:	mov    r15d,DWORD PTR [rbp+0x4f0]
   140044519:	shr    rdx,0x20
   14004451d:	mov    ebx,edx
   14004451f:	test   edx,edx
   140044521:	jne    0x1400444d5
   140044523:	cmp    r9d,0x73
   140044527:	je     0x14004465d
   14004452d:	mov    rdx,QWORD PTR [rsp+0x38]
   140044532:	inc    r10d
   140044535:	cmp    r10d,r12d
   140044538:	jne    0x140044424
   14004453e:	mov    r8d,r15d
   140044541:	shl    r8,0x2
   140044545:	mov    DWORD PTR [rbp+0x150],r15d
   14004454c:	test   r8,r8
   14004454f:	je     0x140044591
   140044551:	mov    eax,0x1cc
   140044556:	lea    rcx,[rbp+0x154]
   14004455d:	cmp    r8,rax
   140044560:	ja     0x140044570
   140044562:	lea    rdx,[rbp+0x4f4]
   140044569:	call   0x140028fd0
   14004456e:	jmp    0x14004458a
   140044570:	mov    r8,rax
   140044573:	xor    edx,edx
   140044575:	call   0x14002a910
   14004457a:	call   0x140032c50
   14004457f:	mov    DWORD PTR [rax],0x22
   140044585:	call   0x1400307d0
   14004458a:	mov    r15d,DWORD PTR [rbp+0x150]
   140044591:	mov    r12d,DWORD PTR [rsp+0x40]
   140044596:	mov    r13d,DWORD PTR [rsp+0x44]
   14004459b:	mov    al,0x1
   14004459d:	test   al,al
   14004459f:	je     0x14004465d
   1400445a5:	sub    r12d,r13d
   1400445a8:	lea    rdx,[rip+0xfffffffffffbba51]        # 0x140000000
   1400445af:	mov    DWORD PTR [rsp+0x40],r12d
   1400445b4:	jne    0x1400441ee
   1400445ba:	mov    eax,DWORD PTR [rsp+0x48]
   1400445be:	xor    r13d,r13d
   1400445c1:	mov    edi,DWORD PTR [rsp+0x30]
   1400445c5:	lea    eax,[rax+rax*4]
   1400445c8:	add    eax,eax
   1400445ca:	mov    ecx,edi
   1400445cc:	sub    ecx,eax
   1400445ce:	je     0x140044af3
   1400445d4:	lea    eax,[rcx-0x1]
   1400445d7:	mov    eax,DWORD PTR [rdx+rax*4+0x54838]
   1400445de:	test   eax,eax
   1400445e0:	je     0x14004466f
   1400445e6:	cmp    eax,0x1
   1400445e9:	je     0x140044af3
   1400445ef:	test   r15d,r15d
   1400445f2:	je     0x140044af3
   1400445f8:	mov    r8d,r13d
   1400445fb:	mov    r9d,r13d
   1400445fe:	mov    r10d,eax
   140044601:	mov    edx,r9d
   140044604:	inc    r9d
   140044607:	mov    eax,r8d
   14004460a:	mov    ecx,DWORD PTR [rbp+rdx*4+0x154]
   140044611:	imul   rcx,r10
   140044615:	add    rcx,rax
   140044618:	mov    r8,rcx
   14004461b:	mov    DWORD PTR [rbp+rdx*4+0x154],ecx
   140044622:	shr    r8,0x20
   140044626:	cmp    r9d,r15d
   140044629:	jne    0x140044601
   14004462b:	test   r8d,r8d
   14004462e:	je     0x14004467e
   140044630:	cmp    DWORD PTR [rbp+0x150],0x73
   140044637:	jae    0x14004466f
   140044639:	mov    eax,DWORD PTR [rbp+0x150]
   14004463f:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   140044647:	mov    r15d,DWORD PTR [rbp+0x150]
   14004464e:	inc    r15d
   140044651:	mov    DWORD PTR [rbp+0x150],r15d
   140044658:	jmp    0x140044af3
   14004465d:	xor    r13d,r13d
   140044660:	mov    r15d,r13d
   140044663:	mov    DWORD PTR [rbp+0x150],r13d
   14004466a:	jmp    0x140044aef
   14004466f:	mov    r15d,r13d
   140044672:	mov    DWORD PTR [rbp+0x150],r13d
   140044679:	jmp    0x140044af3
   14004467e:	mov    r15d,DWORD PTR [rbp+0x150]
   140044685:	jmp    0x140044af3
   14004468a:	mov    ecx,r12d
   14004468d:	neg    ecx
   14004468f:	mul    ecx
   140044691:	mov    DWORD PTR [rsp+0x44],ecx
   140044695:	mov    eax,edx
   140044697:	lea    rdx,[rip+0xfffffffffffbb962]        # 0x140000000
   14004469e:	shr    eax,0x3
   1400446a1:	mov    DWORD PTR [rsp+0x38],eax
   1400446a5:	mov    r12d,eax
   1400446a8:	mov    DWORD PTR [rsp+0x40],eax
   1400446ac:	test   eax,eax
   1400446ae:	je     0x140044a4b
   1400446b4:	mov    eax,0x26
   1400446b9:	mov    r13d,r12d
   1400446bc:	cmp    r12d,eax
   1400446bf:	cmova  r13d,eax
   1400446c3:	mov    DWORD PTR [rsp+0x48],r13d
   1400446c8:	lea    eax,[r13-0x1]
   1400446cc:	movzx  ecx,BYTE PTR [rdx+rax*4+0x547a2]
   1400446d4:	movzx  esi,BYTE PTR [rdx+rax*4+0x547a3]
   1400446dc:	mov    ebx,ecx
   1400446de:	mov    edi,eax
   1400446e0:	xor    edx,edx
   1400446e2:	shl    rbx,0x2
   1400446e6:	mov    r8,rbx
   1400446e9:	lea    eax,[rsi+rcx*1]
   1400446ec:	lea    rcx,[rbp+0x324]
   1400446f3:	mov    DWORD PTR [rbp+0x320],eax
   1400446f9:	call   0x14002a910
   1400446fe:	lea    rcx,[rip+0xfffffffffffbb8fb]        # 0x140000000
   140044705:	shl    rsi,0x2
   140044709:	movzx  eax,WORD PTR [rcx+rdi*4+0x547a0]
   140044711:	lea    rdx,[rcx+0x53e90]
   140044718:	lea    rcx,[rbp+0x324]
   14004471f:	mov    r8,rsi
   140044722:	add    rcx,rbx
   140044725:	lea    rdx,[rdx+rax*4]
   140044729:	call   0x140028fd0
   14004472e:	mov    edi,DWORD PTR [rbp+0x320]
   140044734:	cmp    edi,0x1
   140044737:	ja     0x1400447c4
   14004473d:	mov    eax,DWORD PTR [rbp+0x324]
   140044743:	test   eax,eax
   140044745:	jne    0x140044753
   140044747:	xor    r14d,r14d
   14004474a:	mov    DWORD PTR [rbp-0x80],r14d
   14004474e:	jmp    0x140044a21
   140044753:	cmp    eax,0x1
   140044756:	je     0x140044a21
   14004475c:	test   r14d,r14d
   14004475f:	je     0x140044a21
   140044765:	xor    r8d,r8d
   140044768:	mov    r10,rax
   14004476b:	xor    r9d,r9d
   14004476e:	mov    ecx,DWORD PTR [rbp+r9*4-0x7c]
   140044773:	mov    eax,r8d
   140044776:	imul   rcx,r10
   14004477a:	add    rcx,rax
   14004477d:	mov    r8,rcx
   140044780:	mov    DWORD PTR [rbp+r9*4-0x7c],ecx
   140044785:	shr    r8,0x20
   140044789:	inc    r9d
   14004478c:	cmp    r9d,r14d
   14004478f:	jne    0x14004476e
   140044791:	test   r8d,r8d
   140044794:	je     0x1400447bb
   140044796:	cmp    DWORD PTR [rbp-0x80],0x73
   14004479a:	jae    0x1400447ad
   14004479c:	mov    eax,DWORD PTR [rbp-0x80]
   14004479f:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   1400447a4:	mov    r14d,DWORD PTR [rbp-0x80]
   1400447a8:	inc    r14d
   1400447ab:	jmp    0x14004474a
   1400447ad:	xor    r14d,r14d
   1400447b0:	mov    DWORD PTR [rbp-0x80],r14d
   1400447b4:	xor    al,al
   1400447b6:	jmp    0x140044a23
   1400447bb:	mov    r14d,DWORD PTR [rbp-0x80]
   1400447bf:	jmp    0x140044a21
   1400447c4:	cmp    r14d,0x1
   1400447c8:	ja     0x140044868
   1400447ce:	mov    ebx,DWORD PTR [rbp-0x7c]
   1400447d1:	mov    r8,rdi
   1400447d4:	shl    r8,0x2
   1400447d8:	mov    r14d,edi
   1400447db:	mov    DWORD PTR [rbp-0x80],edi
   1400447de:	test   r8,r8
   1400447e1:	je     0x14004481d
   1400447e3:	mov    eax,0x1cc
   1400447e8:	lea    rcx,[rbp-0x7c]
   1400447ec:	cmp    r8,rax
   1400447ef:	ja     0x1400447ff
   1400447f1:	lea    rdx,[rbp+0x324]
   1400447f8:	call   0x140028fd0
   1400447fd:	jmp    0x140044819
   1400447ff:	mov    r8,rax
   140044802:	xor    edx,edx
   140044804:	call   0x14002a910
   140044809:	call   0x140032c50
   14004480e:	mov    DWORD PTR [rax],0x22
   140044814:	call   0x1400307d0
   140044819:	mov    r14d,DWORD PTR [rbp-0x80]
   14004481d:	test   ebx,ebx
   14004481f:	je     0x140044747
   140044825:	cmp    ebx,0x1
   140044828:	je     0x140044a21
   14004482e:	test   r14d,r14d
   140044831:	je     0x140044a21
   140044837:	xor    r8d,r8d
   14004483a:	mov    r10,rbx
   14004483d:	xor    r9d,r9d
   140044840:	mov    ecx,DWORD PTR [rbp+r9*4-0x7c]
   140044845:	mov    eax,r8d
   140044848:	imul   rcx,r10
   14004484c:	add    rcx,rax
   14004484f:	mov    r8,rcx
   140044852:	mov    DWORD PTR [rbp+r9*4-0x7c],ecx
   140044857:	shr    r8,0x20
   14004485b:	inc    r9d
   14004485e:	cmp    r9d,r14d
   140044861:	jne    0x140044840
   140044863:	jmp    0x140044791
   140044868:	cmp    edi,r14d
   14004486b:	lea    rcx,[rbp-0x7c]
   14004486f:	mov    r12d,r14d
   140044872:	lea    r13,[rbp+0x324]
   140044879:	setb   al
   14004487c:	lea    rdx,[rbp-0x7c]
   140044880:	test   al,al
   140044882:	cmove  r13,rcx
   140044886:	cmovne r12d,edi
   14004488a:	cmovne edi,r14d
   14004488e:	lea    rcx,[rbp+0x324]
   140044895:	cmove  rdx,rcx
   140044899:	xor    r14d,r14d
   14004489c:	xor    r10d,r10d
   14004489f:	mov    QWORD PTR [rsp+0x58],rdx
   1400448a4:	mov    DWORD PTR [rbp+0x4f0],r14d
   1400448ab:	test   r12d,r12d
   1400448ae:	je     0x1400449cd
   1400448b4:	mov    esi,DWORD PTR [r13+r10*4+0x0]
   1400448b9:	mov    eax,r10d
   1400448bc:	test   esi,esi
   1400448be:	jne    0x1400448e1
   1400448c0:	cmp    r10d,r14d
   1400448c3:	jne    0x1400449c1
   1400448c9:	and    DWORD PTR [rbp+r10*4+0x4f4],esi
   1400448d1:	lea    r14d,[r10+0x1]
   1400448d5:	mov    DWORD PTR [rbp+0x4f0],r14d
   1400448dc:	jmp    0x1400449c1
   1400448e1:	xor    ebx,ebx
   1400448e3:	mov    r9d,r10d
   1400448e6:	test   edi,edi
   1400448e8:	je     0x1400449b2
   1400448ee:	mov    r11d,r10d
   1400448f1:	neg    r11d
   1400448f4:	cmp    r9d,0x73
   1400448f8:	je     0x140044960
   1400448fa:	cmp    r9d,r14d
   1400448fd:	jne    0x14004491a
   1400448ff:	mov    eax,r9d
   140044902:	lea    ecx,[r9+0x1]
   140044906:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14004490e:	lea    eax,[r10+r11*1]
   140044912:	add    ecx,eax
   140044914:	mov    DWORD PTR [rbp+0x4f0],ecx
   14004491a:	lea    eax,[r11+r9*1]
   14004491e:	mov    r8d,r9d
   140044921:	mov    edx,DWORD PTR [rdx+rax*4]
   140044924:	inc    r9d
   140044927:	imul   rdx,rsi
   14004492b:	mov    eax,DWORD PTR [rbp+r8*4+0x4f4]
   140044933:	add    rdx,rax
   140044936:	mov    eax,ebx
   140044938:	add    rdx,rax
   14004493b:	lea    eax,[r11+r9*1]
   14004493f:	mov    rbx,rdx
   140044942:	mov    DWORD PTR [rbp+r8*4+0x4f4],edx
   14004494a:	mov    r14d,DWORD PTR [rbp+0x4f0]
   140044951:	shr    rbx,0x20
   140044955:	cmp    eax,edi
   140044957:	je     0x140044960
   140044959:	mov    rdx,QWORD PTR [rsp+0x58]
   14004495e:	jmp    0x1400448f4
   140044960:	test   ebx,ebx
   140044962:	je     0x1400449b2
   140044964:	cmp    r9d,0x73
   140044968:	je     0x140044ac5
   14004496e:	cmp    r9d,r14d
   140044971:	jne    0x140044988
   140044973:	mov    eax,r9d
   140044976:	and    DWORD PTR [rbp+rax*4+0x4f4],0x0
   14004497e:	lea    eax,[r9+0x1]
   140044982:	mov    DWORD PTR [rbp+0x4f0],eax
   140044988:	mov    ecx,r9d
   14004498b:	inc    r9d
   14004498e:	mov    eax,ebx
   140044990:	mov    edx,DWORD PTR [rbp+rcx*4+0x4f4]
   140044997:	add    rdx,rax
   14004499a:	mov    DWORD PTR [rbp+rcx*4+0x4f4],edx
   1400449a1:	mov    r14d,DWORD PTR [rbp+0x4f0]
   1400449a8:	shr    rdx,0x20
   1400449ac:	mov    ebx,edx
   1400449ae:	test   edx,edx
   1400449b0:	jne    0x140044964
   1400449b2:	cmp    r9d,0x73
   1400449b6:	je     0x140044ac5
   1400449bc:	mov    rdx,QWORD PTR [rsp+0x58]
   1400449c1:	inc    r10d
   1400449c4:	cmp    r10d,r12d
   1400449c7:	jne    0x1400448b4
   1400449cd:	mov    r8d,r14d
   1400449d0:	shl    r8,0x2
   1400449d4:	mov    DWORD PTR [rbp-0x80],r14d
   1400449d8:	test   r8,r8
   1400449db:	je     0x140044a17
   1400449dd:	mov    eax,0x1cc
   1400449e2:	lea    rcx,[rbp-0x7c]
   1400449e6:	cmp    r8,rax
   1400449e9:	ja     0x1400449f9
   1400449eb:	lea    rdx,[rbp+0x4f4]
   1400449f2:	call   0x140028fd0
   1400449f7:	jmp    0x140044a13
   1400449f9:	mov    r8,rax
   1400449fc:	xor    edx,edx
   1400449fe:	call   0x14002a910
   140044a03:	call   0x140032c50
   140044a08:	mov    DWORD PTR [rax],0x22
   140044a0e:	call   0x1400307d0
   140044a13:	mov    r14d,DWORD PTR [rbp-0x80]
   140044a17:	mov    r12d,DWORD PTR [rsp+0x40]
   140044a1c:	mov    r13d,DWORD PTR [rsp+0x48]
   140044a21:	mov    al,0x1
   140044a23:	test   al,al
   140044a25:	je     0x140044ac5
   140044a2b:	sub    r12d,r13d
   140044a2e:	lea    rdx,[rip+0xfffffffffffbb5cb]        # 0x140000000
   140044a35:	mov    DWORD PTR [rsp+0x40],r12d
   140044a3a:	jne    0x1400446b4
   140044a40:	mov    ecx,DWORD PTR [rsp+0x44]
   140044a44:	xor    r13d,r13d
   140044a47:	mov    eax,DWORD PTR [rsp+0x38]
   140044a4b:	lea    eax,[rax+rax*4]
   140044a4e:	add    eax,eax
   140044a50:	sub    ecx,eax
   140044a52:	je     0x140044aef
   140044a58:	lea    eax,[rcx-0x1]
   140044a5b:	mov    eax,DWORD PTR [rdx+rax*4+0x54838]
   140044a62:	test   eax,eax
   140044a64:	je     0x140044ac8
   140044a66:	cmp    eax,0x1
   140044a69:	je     0x140044aef
   140044a6f:	test   r14d,r14d
   140044a72:	je     0x140044aef
   140044a74:	mov    r8d,r13d
   140044a77:	mov    r9d,r13d
   140044a7a:	mov    r10d,eax
   140044a7d:	mov    edx,r9d
   140044a80:	inc    r9d
   140044a83:	mov    eax,r8d
   140044a86:	mov    ecx,DWORD PTR [rbp+rdx*4-0x7c]
   140044a8a:	imul   rcx,r10
   140044a8e:	add    rcx,rax
   140044a91:	mov    r8,rcx
   140044a94:	mov    DWORD PTR [rbp+rdx*4-0x7c],ecx
   140044a98:	shr    r8,0x20
   140044a9c:	cmp    r9d,r14d
   140044a9f:	jne    0x140044a7d
   140044aa1:	test   r8d,r8d
   140044aa4:	je     0x140044aeb
   140044aa6:	cmp    DWORD PTR [rbp-0x80],0x73
   140044aaa:	mov    edi,DWORD PTR [rsp+0x30]
   140044aae:	jae    0x140044add
   140044ab0:	mov    eax,DWORD PTR [rbp-0x80]
   140044ab3:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   140044ab8:	mov    r14d,DWORD PTR [rbp-0x80]
   140044abc:	inc    r14d
   140044abf:	mov    DWORD PTR [rbp-0x80],r14d
   140044ac3:	jmp    0x140044af3
   140044ac5:	xor    r13d,r13d
   140044ac8:	mov    rsi,QWORD PTR [rsp+0x50]
   140044acd:	mov    edi,DWORD PTR [rsp+0x30]
   140044ad1:	mov    rbx,rsi
   140044ad4:	mov    DWORD PTR [rbp-0x80],r13d
   140044ad8:	jmp    0x140044b64
   140044add:	mov    rsi,QWORD PTR [rsp+0x50]
   140044ae2:	mov    rbx,rsi
   140044ae5:	mov    DWORD PTR [rbp-0x80],r13d
   140044ae9:	jmp    0x140044b64
   140044aeb:	mov    r14d,DWORD PTR [rbp-0x80]
   140044aef:	mov    edi,DWORD PTR [rsp+0x30]
   140044af3:	mov    rsi,QWORD PTR [rsp+0x50]
   140044af8:	mov    rbx,rsi
   140044afb:	test   r14d,r14d
   140044afe:	je     0x140044b64
   140044b00:	mov    r8d,r13d
   140044b03:	mov    r9d,r13d
   140044b06:	mov    edx,r9d
   140044b09:	inc    r9d
   140044b0c:	mov    eax,DWORD PTR [rbp+rdx*4-0x7c]
   140044b10:	lea    rcx,[rax+rax*4]
   140044b14:	mov    eax,r8d
   140044b17:	lea    r8,[rax+rcx*2]
   140044b1b:	mov    DWORD PTR [rbp+rdx*4-0x7c],r8d
   140044b20:	shr    r8,0x20
   140044b24:	cmp    r9d,r14d
   140044b27:	jne    0x140044b06
   140044b29:	test   r8d,r8d
   140044b2c:	je     0x140044b64
   140044b2e:	cmp    DWORD PTR [rbp-0x80],0x73
   140044b32:	jae    0x140044b41
   140044b34:	mov    eax,DWORD PTR [rbp-0x80]
   140044b37:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   140044b3c:	inc    DWORD PTR [rbp-0x80]
   140044b3f:	jmp    0x140044b64
   140044b41:	xor    r9d,r9d
   140044b44:	mov    DWORD PTR [rbp+0x320],r13d
   140044b4b:	lea    r8,[rbp+0x324]
   140044b52:	mov    DWORD PTR [rbp-0x80],r13d
   140044b56:	mov    edx,0x1cc
   140044b5b:	lea    rcx,[rbp-0x7c]
   140044b5f:	call   0x140044e5c
   140044b64:	lea    rdx,[rbp+0x150]
   140044b6b:	lea    rcx,[rbp-0x80]
   140044b6f:	call   0x1400309b0
   140044b74:	cmp    eax,0xa
   140044b77:	jne    0x140044c0d
   140044b7d:	inc    edi
   140044b7f:	mov    BYTE PTR [rsi],0x31
   140044b82:	lea    rbx,[rsi+0x1]
   140044b86:	test   r15d,r15d
   140044b89:	je     0x140044c1d
   140044b8f:	mov    r8d,r13d
   140044b92:	mov    r9d,r13d
   140044b95:	mov    edx,r9d
   140044b98:	inc    r9d
   140044b9b:	mov    eax,DWORD PTR [rbp+rdx*4+0x154]
   140044ba2:	lea    rcx,[rax+rax*4]
   140044ba6:	mov    eax,r8d
   140044ba9:	lea    r8,[rax+rcx*2]
   140044bad:	mov    DWORD PTR [rbp+rdx*4+0x154],r8d
   140044bb5:	shr    r8,0x20
   140044bb9:	cmp    r9d,r15d
   140044bbc:	jne    0x140044b95
   140044bbe:	test   r8d,r8d
   140044bc1:	je     0x140044c1d
   140044bc3:	cmp    DWORD PTR [rbp+0x150],0x73
   140044bca:	jae    0x140044be2
   140044bcc:	mov    eax,DWORD PTR [rbp+0x150]
   140044bd2:	mov    DWORD PTR [rbp+rax*4+0x154],r8d
   140044bda:	inc    DWORD PTR [rbp+0x150]
   140044be0:	jmp    0x140044c1d
   140044be2:	xor    r9d,r9d
   140044be5:	mov    DWORD PTR [rbp+0x320],r13d
   140044bec:	lea    r8,[rbp+0x324]
   140044bf3:	mov    DWORD PTR [rbp+0x150],r13d
   140044bfa:	mov    edx,0x1cc
   140044bff:	lea    rcx,[rbp+0x154]
   140044c06:	call   0x140044e5c
   140044c0b:	jmp    0x140044c1d
   140044c0d:	test   eax,eax
   140044c0f:	jne    0x140044c15
   140044c11:	dec    edi
   140044c13:	jmp    0x140044c1d
   140044c15:	add    al,0x30
   140044c17:	lea    rbx,[rsi+0x1]
   140044c1b:	mov    BYTE PTR [rsi],al
   140044c1d:	mov    rax,QWORD PTR [rsp+0x70]
   140044c22:	mov    ecx,DWORD PTR [rsp+0x4c]
   140044c26:	mov    DWORD PTR [rax+0x4],edi
   140044c29:	test   edi,edi
   140044c2b:	js     0x140044c37
   140044c2d:	cmp    ecx,0x7fffffff
   140044c33:	ja     0x140044c37
   140044c35:	add    ecx,edi
   140044c37:	mov    rax,QWORD PTR [rbp+0x740]
   140044c3e:	dec    rax
   140044c41:	mov    edi,ecx
   140044c43:	cmp    rax,rdi
   140044c46:	cmovb  rdi,rax
   140044c4a:	add    rdi,rsi
   140044c4d:	cmp    rbx,rdi
   140044c50:	je     0x140044d3e
   140044c56:	mov    r14d,0x9
   140044c5c:	or     esi,0xffffffff
   140044c5f:	mov    r10d,DWORD PTR [rbp-0x80]
   140044c63:	test   r10d,r10d
   140044c66:	je     0x140044d3e
   140044c6c:	mov    r8d,r13d
   140044c6f:	mov    r9d,r13d
   140044c72:	mov    edx,r9d
   140044c75:	inc    r9d
   140044c78:	mov    eax,DWORD PTR [rbp+rdx*4-0x7c]
   140044c7c:	imul   rcx,rax,0x3b9aca00
   140044c83:	mov    eax,r8d
   140044c86:	add    rcx,rax
   140044c89:	mov    r8,rcx
   140044c8c:	mov    DWORD PTR [rbp+rdx*4-0x7c],ecx
   140044c90:	shr    r8,0x20
   140044c94:	cmp    r9d,r10d
   140044c97:	jne    0x140044c72
   140044c99:	test   r8d,r8d
   140044c9c:	je     0x140044cd4
   140044c9e:	cmp    DWORD PTR [rbp-0x80],0x73
   140044ca2:	jae    0x140044cb1
   140044ca4:	mov    eax,DWORD PTR [rbp-0x80]
   140044ca7:	mov    DWORD PTR [rbp+rax*4-0x7c],r8d
   140044cac:	inc    DWORD PTR [rbp-0x80]
   140044caf:	jmp    0x140044cd4
   140044cb1:	xor    r9d,r9d
   140044cb4:	mov    DWORD PTR [rbp+0x320],r13d
   140044cbb:	lea    r8,[rbp+0x324]
   140044cc2:	mov    DWORD PTR [rbp-0x80],r13d
   140044cc6:	mov    edx,0x1cc
   140044ccb:	lea    rcx,[rbp-0x7c]
   140044ccf:	call   0x140044e5c
   140044cd4:	lea    rdx,[rbp+0x150]
   140044cdb:	lea    rcx,[rbp-0x80]
   140044cdf:	call   0x1400309b0
   140044ce4:	mov    r10d,edi
   140044ce7:	mov    r8,rax
   140044cea:	sub    r10d,ebx
   140044ced:	mov    r9d,0x8
   140044cf3:	mov    eax,0xcccccccd
   140044cf8:	mul    r8d
   140044cfb:	shr    edx,0x3
   140044cfe:	mov    cl,dl
   140044d00:	shl    cl,0x2
   140044d03:	lea    eax,[rcx+rdx*1]
   140044d06:	add    al,al
   140044d08:	sub    r8b,al
   140044d0b:	lea    ecx,[r8+0x30]
   140044d0f:	mov    r8d,edx
   140044d12:	cmp    r10d,r9d
   140044d15:	jb     0x140044d1d
   140044d17:	mov    eax,r9d
   140044d1a:	mov    BYTE PTR [rax+rbx*1],cl
   140044d1d:	add    r9d,esi
   140044d20:	cmp    r9d,esi
   140044d23:	jne    0x140044cf3
   140044d25:	mov    rax,rdi
   140044d28:	sub    rax,rbx
   140044d2b:	cmp    rax,r14
   140044d2e:	cmovg  rax,r14
   140044d32:	add    rbx,rax
   140044d35:	cmp    rbx,rdi
   140044d38:	jne    0x140044c5f
   140044d3e:	mov    BYTE PTR [rbx],r13b
   140044d41:	jmp    0x140044dbe
   140044d43:	mov    rdx,QWORD PTR [rbp+0x740]
   140044d4a:	lea    r8,[rip+0x1622b]        # 0x14005af7c
   140044d51:	mov    rcx,r14
   140044d54:	call   0x140038d18
   140044d59:	test   eax,eax
   140044d5b:	je     0x140044dbe
   140044d5d:	jmp    0x140044e07
   140044d62:	mov    rdx,QWORD PTR [rbp+0x740]
   140044d69:	lea    r8,[rip+0x16204]        # 0x14005af74
   140044d70:	mov    rcx,r14
   140044d73:	call   0x140038d18
   140044d78:	test   eax,eax
   140044d7a:	je     0x140044dbe
   140044d7c:	jmp    0x140044e1c
   140044d81:	mov    rdx,QWORD PTR [rbp+0x740]
   140044d88:	lea    r8,[rip+0x161dd]        # 0x14005af6c
   140044d8f:	mov    rcx,r14
   140044d92:	call   0x140038d18
   140044d97:	test   eax,eax
   140044d99:	je     0x140044dbe
   140044d9b:	jmp    0x140044e31
   140044da0:	mov    rdx,QWORD PTR [rbp+0x740]
   140044da7:	lea    r8,[rip+0x161b6]        # 0x14005af64
   140044dae:	mov    rcx,r14
   140044db1:	call   0x140038d18
   140044db6:	test   eax,eax
   140044db8:	jne    0x140044e46
   140044dbe:	cmp    BYTE PTR [rsp+0x68],r13b
   140044dc3:	je     0x140044dcf
   140044dc5:	lea    rcx,[rsp+0x60]
   140044dca:	call   0x140046f00
   140044dcf:	mov    rcx,QWORD PTR [rbp+0x6c0]
   140044dd6:	xor    rcx,rsp
   140044dd9:	call   0x140025df0
   140044dde:	add    rsp,0x7d8
   140044de5:	pop    r15
   140044de7:	pop    r14
   140044de9:	pop    r13
   140044deb:	pop    r12
   140044ded:	pop    rdi
   140044dee:	pop    rsi
   140044def:	pop    rbx
   140044df0:	pop    rbp
   140044df1:	ret    
   140044df2:	xor    r9d,r9d
   140044df5:	mov    QWORD PTR [rsp+0x20],r13
   140044dfa:	xor    r8d,r8d
   140044dfd:	xor    edx,edx
   140044dff:	xor    ecx,ecx
   140044e01:	call   0x140030820
   140044e06:	int3   
   140044e07:	xor    r9d,r9d
   140044e0a:	mov    QWORD PTR [rsp+0x20],r13
   140044e0f:	xor    r8d,r8d
   140044e12:	xor    edx,edx
   140044e14:	xor    ecx,ecx
   140044e16:	call   0x140030820
   140044e1b:	int3   
   140044e1c:	xor    r9d,r9d
   140044e1f:	mov    QWORD PTR [rsp+0x20],r13
   140044e24:	xor    r8d,r8d
   140044e27:	xor    edx,edx
   140044e29:	xor    ecx,ecx
   140044e2b:	call   0x140030820
   140044e30:	int3   
   140044e31:	xor    r9d,r9d
   140044e34:	mov    QWORD PTR [rsp+0x20],r13
   140044e39:	xor    r8d,r8d
   140044e3c:	xor    edx,edx
   140044e3e:	xor    ecx,ecx
   140044e40:	call   0x140030820
   140044e45:	int3   
   140044e46:	xor    r9d,r9d
   140044e49:	mov    QWORD PTR [rsp+0x20],r13
   140044e4e:	xor    r8d,r8d
   140044e51:	xor    edx,edx
   140044e53:	xor    ecx,ecx
   140044e55:	call   0x140030820
   140044e5a:	int3   
   140044e5b:	int3   
   140044e5c:	mov    QWORD PTR [rsp+0x8],rbx
   140044e61:	mov    QWORD PTR [rsp+0x10],rsi
   140044e66:	push   rdi
   140044e67:	sub    rsp,0x20
   140044e6b:	mov    rbx,r9
   140044e6e:	mov    rsi,r8
   140044e71:	mov    rdi,rdx
   140044e74:	test   r9,r9
   140044e77:	jne    0x140044e7d
   140044e79:	xor    eax,eax
   140044e7b:	jmp    0x140044ed3
   140044e7d:	test   rcx,rcx
   140044e80:	jne    0x140044e97
   140044e82:	call   0x140032c50
   140044e87:	mov    ebx,0x16
   140044e8c:	mov    DWORD PTR [rax],ebx
   140044e8e:	call   0x1400307d0
   140044e93:	mov    eax,ebx
   140044e95:	jmp    0x140044ed3
   140044e97:	test   r8,r8
   140044e9a:	je     0x140044eae
   140044e9c:	cmp    rdx,rbx
   140044e9f:	jb     0x140044eae
   140044ea1:	mov    r8,rbx
   140044ea4:	mov    rdx,rsi
   140044ea7:	call   0x140028fd0
   140044eac:	jmp    0x140044e79
   140044eae:	mov    r8,rdx
   140044eb1:	xor    edx,edx
   140044eb3:	call   0x14002a910
   140044eb8:	test   rsi,rsi
   140044ebb:	je     0x140044e82
   140044ebd:	cmp    rdi,rbx
   140044ec0:	jae    0x140044ece
   140044ec2:	call   0x140032c50
   140044ec7:	mov    ebx,0x22
   140044ecc:	jmp    0x140044e8c
   140044ece:	mov    eax,0x16
   140044ed3:	mov    rbx,QWORD PTR [rsp+0x30]
   140044ed8:	mov    rsi,QWORD PTR [rsp+0x38]
   140044edd:	add    rsp,0x20
   140044ee1:	pop    rdi
   140044ee2:	ret    
   140044ee3:	int3   
   140044ee4:	mov    rax,rsp
   140044ee7:	mov    QWORD PTR [rax+0x18],rbx
   140044eeb:	mov    QWORD PTR [rax+0x20],rsi
   140044eef:	mov    QWORD PTR [rax+0x10],rdx
   140044ef3:	mov    BYTE PTR [rax+0x8],cl
   140044ef6:	push   rdi
   140044ef7:	sub    rsp,0x20
   140044efb:	mov    rcx,rdx
   140044efe:	call   0x14003a5a4
   140044f03:	mov    rcx,QWORD PTR [rsp+0x38]
   140044f08:	movsxd r9,eax
   140044f0b:	mov    edx,DWORD PTR [rcx+0x14]
   140044f0e:	test   dl,0xc0
   140044f11:	je     0x140044fbf
   140044f17:	mov    rcx,QWORD PTR [rsp+0x38]
   140044f1c:	xor    ebx,ebx
   140044f1e:	mov    esi,ebx
   140044f20:	mov    rax,QWORD PTR [rcx+0x8]
   140044f24:	mov    edi,DWORD PTR [rcx]
   140044f26:	inc    rax
   140044f29:	sub    edi,DWORD PTR [rcx+0x8]
   140044f2c:	mov    QWORD PTR [rcx],rax
   140044f2f:	mov    rax,QWORD PTR [rsp+0x38]
   140044f34:	mov    ecx,DWORD PTR [rax+0x20]
   140044f37:	dec    ecx
   140044f39:	mov    DWORD PTR [rax+0x10],ecx
   140044f3c:	test   edi,edi
   140044f3e:	jle    0x140044f69
   140044f40:	mov    rdx,QWORD PTR [rsp+0x38]
   140044f45:	mov    r8d,edi
   140044f48:	mov    ecx,r9d
   140044f4b:	mov    rdx,QWORD PTR [rdx+0x8]
   140044f4f:	call   0x14003c828
   140044f54:	mov    esi,eax
   140044f56:	mov    rax,QWORD PTR [rsp+0x38]
   140044f5b:	cmp    esi,edi
   140044f5d:	mov    rcx,QWORD PTR [rax+0x8]
   140044f61:	mov    al,BYTE PTR [rsp+0x30]
   140044f65:	mov    BYTE PTR [rcx],al
   140044f67:	jmp    0x140044fd5
   140044f69:	lea    eax,[r9+0x2]
   140044f6d:	cmp    eax,0x1
   140044f70:	jbe    0x140044f90
   140044f72:	mov    rcx,r9
   140044f75:	lea    rdx,[rip+0x31d44]        # 0x140076cc0
   140044f7c:	and    ecx,0x3f
   140044f7f:	mov    rax,r9
   140044f82:	sar    rax,0x6
   140044f86:	shl    rcx,0x6
   140044f8a:	add    rcx,QWORD PTR [rdx+rax*8]
   140044f8e:	jmp    0x140044f97
   140044f90:	lea    rcx,[rip+0x2c4d9]        # 0x140071470
   140044f97:	test   BYTE PTR [rcx+0x38],0x20
   140044f9b:	je     0x140044f56
   140044f9d:	xor    edx,edx
   140044f9f:	mov    ecx,r9d
   140044fa2:	lea    r8d,[rdx+0x2]
   140044fa6:	call   0x140046130
   140044fab:	cmp    rax,0xffffffffffffffff
   140044faf:	jne    0x140044f56
   140044fb1:	mov    rcx,QWORD PTR [rsp+0x38]
   140044fb6:	lock or DWORD PTR [rcx+0x14],0x10
   140044fbb:	mov    al,0x1
   140044fbd:	jmp    0x140044fd8
   140044fbf:	mov    r8d,0x1
   140044fc5:	lea    rdx,[rsp+0x30]
   140044fca:	mov    ecx,r9d
   140044fcd:	call   0x14003c828
   140044fd2:	cmp    eax,0x1
   140044fd5:	sete   al
   140044fd8:	mov    rbx,QWORD PTR [rsp+0x40]
   140044fdd:	mov    rsi,QWORD PTR [rsp+0x48]
   140044fe2:	add    rsp,0x20
   140044fe6:	pop    rdi
   140044fe7:	ret    
   140044fe8:	mov    rax,rsp
   140044feb:	mov    QWORD PTR [rax+0x18],rbx
   140044fef:	mov    QWORD PTR [rax+0x20],rsi
   140044ff3:	mov    QWORD PTR [rax+0x10],rdx
   140044ff7:	mov    WORD PTR [rax+0x8],cx
   140044ffb:	push   rdi
   140044ffc:	sub    rsp,0x20
   140045000:	mov    rcx,rdx
   140045003:	call   0x14003a5a4
   140045008:	mov    rcx,QWORD PTR [rsp+0x38]
   14004500d:	movsxd r9,eax
   140045010:	mov    edx,DWORD PTR [rcx+0x14]
   140045013:	test   dl,0xc0
   140045016:	je     0x1400450c8
   14004501c:	mov    rcx,QWORD PTR [rsp+0x38]
   140045021:	xor    ebx,ebx
   140045023:	mov    esi,ebx
   140045025:	mov    rax,QWORD PTR [rcx+0x8]
   140045029:	mov    edi,DWORD PTR [rcx]
   14004502b:	add    rax,0x2
   14004502f:	sub    edi,DWORD PTR [rcx+0x8]
   140045032:	mov    QWORD PTR [rcx],rax
   140045035:	mov    rax,QWORD PTR [rsp+0x38]
   14004503a:	mov    ecx,DWORD PTR [rax+0x20]
   14004503d:	sub    ecx,0x2
   140045040:	mov    DWORD PTR [rax+0x10],ecx
   140045043:	test   edi,edi
   140045045:	jle    0x140045072
   140045047:	mov    rdx,QWORD PTR [rsp+0x38]
   14004504c:	mov    r8d,edi
   14004504f:	mov    ecx,r9d
   140045052:	mov    rdx,QWORD PTR [rdx+0x8]
   140045056:	call   0x14003c828
   14004505b:	mov    esi,eax
   14004505d:	mov    rax,QWORD PTR [rsp+0x38]
   140045062:	cmp    esi,edi
   140045064:	mov    rcx,QWORD PTR [rax+0x8]
   140045068:	movzx  eax,WORD PTR [rsp+0x30]
   14004506d:	mov    WORD PTR [rcx],ax
   140045070:	jmp    0x1400450de
   140045072:	lea    eax,[r9+0x2]
   140045076:	cmp    eax,0x1
   140045079:	jbe    0x140045099
   14004507b:	mov    rcx,r9
   14004507e:	lea    rdx,[rip+0x31c3b]        # 0x140076cc0
   140045085:	and    ecx,0x3f
   140045088:	mov    rax,r9
   14004508b:	sar    rax,0x6
   14004508f:	shl    rcx,0x6
   140045093:	add    rcx,QWORD PTR [rdx+rax*8]
   140045097:	jmp    0x1400450a0
   140045099:	lea    rcx,[rip+0x2c3d0]        # 0x140071470
   1400450a0:	test   BYTE PTR [rcx+0x38],0x20
   1400450a4:	je     0x14004505d
   1400450a6:	xor    edx,edx
   1400450a8:	mov    ecx,r9d
   1400450ab:	lea    r8d,[rdx+0x2]
   1400450af:	call   0x140046130
   1400450b4:	cmp    rax,0xffffffffffffffff
   1400450b8:	jne    0x14004505d
   1400450ba:	mov    rcx,QWORD PTR [rsp+0x38]
   1400450bf:	lock or DWORD PTR [rcx+0x14],0x10
   1400450c4:	mov    al,0x1
   1400450c6:	jmp    0x1400450e1
   1400450c8:	mov    r8d,0x2
   1400450ce:	lea    rdx,[rsp+0x30]
   1400450d3:	mov    ecx,r9d
   1400450d6:	call   0x14003c828
   1400450db:	cmp    eax,0x2
   1400450de:	sete   al
   1400450e1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400450e6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400450eb:	add    rsp,0x20
   1400450ef:	pop    rdi
   1400450f0:	ret    
   1400450f1:	int3   
   1400450f2:	int3   
   1400450f3:	int3   
   1400450f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400450f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400450fe:	push   rdi
   1400450ff:	sub    rsp,0x20
   140045103:	mov    edi,ecx
   140045105:	mov    rbx,rdx
   140045108:	mov    rcx,rdx
   14004510b:	call   0x14003a5a4
   140045110:	mov    r8d,DWORD PTR [rbx+0x14]
   140045114:	mov    esi,eax
   140045116:	test   r8b,0x6
   14004511a:	jne    0x140045134
   14004511c:	call   0x140032c50
   140045121:	mov    DWORD PTR [rax],0x9
   140045127:	lock or DWORD PTR [rbx+0x14],0x10
   14004512c:	or     eax,0xffffffff
   14004512f:	jmp    0x1400451cc
   140045134:	mov    eax,DWORD PTR [rbx+0x14]
   140045137:	shr    eax,0xc
   14004513a:	mov    ecx,0x1
   14004513f:	test   cl,al
   140045141:	je     0x140045150
   140045143:	call   0x140032c50
   140045148:	mov    DWORD PTR [rax],0x22
   14004514e:	jmp    0x140045127
   140045150:	mov    eax,DWORD PTR [rbx+0x14]
   140045153:	test   cl,al
   140045155:	je     0x140045171
   140045157:	and    DWORD PTR [rbx+0x10],0x0
   14004515b:	mov    eax,DWORD PTR [rbx+0x14]
   14004515e:	shr    eax,0x3
   140045161:	test   cl,al
   140045163:	je     0x140045127
   140045165:	mov    rax,QWORD PTR [rbx+0x8]
   140045169:	mov    QWORD PTR [rbx],rax
   14004516c:	lock and DWORD PTR [rbx+0x14],0xfffffffe
   140045171:	lock or DWORD PTR [rbx+0x14],0x2
   140045176:	lock and DWORD PTR [rbx+0x14],0xfffffff7
   14004517b:	and    DWORD PTR [rbx+0x10],0x0
   14004517f:	mov    eax,DWORD PTR [rbx+0x14]
   140045182:	test   eax,0x4c0
   140045187:	jne    0x1400451b5
   140045189:	call   0x140032b10
   14004518e:	cmp    rbx,rax
   140045191:	je     0x1400451a2
   140045193:	mov    ecx,0x2
   140045198:	call   0x140032b10
   14004519d:	cmp    rbx,rax
   1400451a0:	jne    0x1400451ad
   1400451a2:	mov    ecx,esi
   1400451a4:	call   0x1400452c8
   1400451a9:	test   eax,eax
   1400451ab:	jne    0x1400451b5
   1400451ad:	mov    rcx,rbx
   1400451b0:	call   0x140045450
   1400451b5:	mov    rdx,rbx
   1400451b8:	mov    cl,dil
   1400451bb:	call   0x140044ee4
   1400451c0:	test   al,al
   1400451c2:	je     0x140045127
   1400451c8:	movzx  eax,dil
   1400451cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400451d1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400451d6:	add    rsp,0x20
   1400451da:	pop    rdi
   1400451db:	ret    
   1400451dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400451e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400451e6:	push   rdi
   1400451e7:	sub    rsp,0x20
   1400451eb:	mov    edi,ecx
   1400451ed:	mov    rbx,rdx
   1400451f0:	mov    rcx,rdx
   1400451f3:	call   0x14003a5a4
   1400451f8:	mov    r8d,DWORD PTR [rbx+0x14]
   1400451fc:	mov    esi,eax
   1400451fe:	test   r8b,0x6
   140045202:	jne    0x14004521e
   140045204:	call   0x140032c50
   140045209:	mov    DWORD PTR [rax],0x9
   14004520f:	lock or DWORD PTR [rbx+0x14],0x10
   140045214:	mov    eax,0xffff
   140045219:	jmp    0x1400452b5
   14004521e:	mov    eax,DWORD PTR [rbx+0x14]
   140045221:	shr    eax,0xc
   140045224:	mov    ecx,0x1
   140045229:	test   cl,al
   14004522b:	je     0x14004523a
   14004522d:	call   0x140032c50
   140045232:	mov    DWORD PTR [rax],0x22
   140045238:	jmp    0x14004520f
   14004523a:	mov    eax,DWORD PTR [rbx+0x14]
   14004523d:	test   cl,al
   14004523f:	je     0x14004525b
   140045241:	and    DWORD PTR [rbx+0x10],0x0
   140045245:	mov    eax,DWORD PTR [rbx+0x14]
   140045248:	shr    eax,0x3
   14004524b:	test   cl,al
   14004524d:	je     0x14004520f
   14004524f:	mov    rax,QWORD PTR [rbx+0x8]
   140045253:	mov    QWORD PTR [rbx],rax
   140045256:	lock and DWORD PTR [rbx+0x14],0xfffffffe
   14004525b:	lock or DWORD PTR [rbx+0x14],0x2
   140045260:	lock and DWORD PTR [rbx+0x14],0xfffffff7
   140045265:	and    DWORD PTR [rbx+0x10],0x0
   140045269:	mov    eax,DWORD PTR [rbx+0x14]
   14004526c:	test   eax,0x4c0
   140045271:	jne    0x14004529f
   140045273:	call   0x140032b10
   140045278:	cmp    rbx,rax
   14004527b:	je     0x14004528c
   14004527d:	mov    ecx,0x2
   140045282:	call   0x140032b10
   140045287:	cmp    rbx,rax
   14004528a:	jne    0x140045297
   14004528c:	mov    ecx,esi
   14004528e:	call   0x1400452c8
   140045293:	test   eax,eax
   140045295:	jne    0x14004529f
   140045297:	mov    rcx,rbx
   14004529a:	call   0x140045450
   14004529f:	mov    rdx,rbx
   1400452a2:	movzx  ecx,di
   1400452a5:	call   0x140044fe8
   1400452aa:	test   al,al
   1400452ac:	je     0x14004520f
   1400452b2:	movzx  eax,di
   1400452b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400452ba:	mov    rsi,QWORD PTR [rsp+0x38]
   1400452bf:	add    rsp,0x20
   1400452c3:	pop    rdi
   1400452c4:	ret    
   1400452c5:	int3   
   1400452c6:	int3   
   1400452c7:	int3   
   1400452c8:	sub    rsp,0x28
   1400452cc:	cmp    ecx,0xfffffffe
   1400452cf:	jne    0x1400452de
   1400452d1:	call   0x140032c50
   1400452d6:	mov    DWORD PTR [rax],0x9
   1400452dc:	jmp    0x140045320
   1400452de:	test   ecx,ecx
   1400452e0:	js     0x140045310
   1400452e2:	cmp    ecx,DWORD PTR [rip+0x31dd8]        # 0x1400770c0
   1400452e8:	jae    0x140045310
   1400452ea:	movsxd rcx,ecx
   1400452ed:	lea    rdx,[rip+0x319cc]        # 0x140076cc0
   1400452f4:	mov    rax,rcx
   1400452f7:	and    ecx,0x3f
   1400452fa:	sar    rax,0x6
   1400452fe:	shl    rcx,0x6
   140045302:	mov    rax,QWORD PTR [rdx+rax*8]
   140045306:	movzx  eax,BYTE PTR [rax+rcx*1+0x38]
   14004530b:	and    eax,0x40
   14004530e:	jmp    0x140045322
   140045310:	call   0x140032c50
   140045315:	mov    DWORD PTR [rax],0x9
   14004531b:	call   0x1400307d0
   140045320:	xor    eax,eax
   140045322:	add    rsp,0x28
   140045326:	ret    
   140045327:	int3   
   140045328:	int3   
   140045329:	int3   
   14004532a:	int3   
   14004532b:	int3   
   14004532c:	int3   
   14004532d:	int3   
   14004532e:	int3   
   14004532f:	int3   
   140045330:	int3   
   140045331:	int3   
   140045332:	int3   
   140045333:	int3   
   140045334:	int3   
   140045335:	int3   
   140045336:	data16 nop WORD PTR [rax+rax*1+0x0]
   140045340:	sub    rsp,0x8
   140045344:	stmxcsr DWORD PTR [rsp]
   140045348:	mov    eax,DWORD PTR [rsp]
   14004534b:	add    rsp,0x8
   14004534f:	ret    
   140045350:	mov    DWORD PTR [rsp+0x8],ecx
   140045354:	ldmxcsr DWORD PTR [rsp+0x8]
   140045359:	ret    
   14004535a:	stmxcsr DWORD PTR [rsp+0x8]
   14004535f:	mov    ecx,0xffffffc0
   140045364:	and    DWORD PTR [rsp+0x8],ecx
   140045368:	ldmxcsr DWORD PTR [rsp+0x8]
   14004536d:	ret    
   14004536e:	ucomisd xmm0,QWORD PTR [rip+0x15c1a]        # 0x14005af90
   140045376:	jae    0x14004538c
   140045378:	ucomisd xmm0,QWORD PTR [rip+0x15c18]        # 0x14005af98
   140045380:	jbe    0x14004538c
   140045382:	cvtsd2si rcx,xmm0
   140045387:	cvtsi2sd xmm0,rcx
   14004538c:	ret    
   14004538d:	int3   
   14004538e:	int3   
   14004538f:	int3   
   140045390:	mov    rax,rsp
   140045393:	mov    QWORD PTR [rax+0x8],rbx
   140045397:	mov    QWORD PTR [rax+0x10],rbp
   14004539b:	mov    QWORD PTR [rax+0x18],rsi
   14004539f:	mov    QWORD PTR [rax+0x20],rdi
   1400453a3:	push   r14
   1400453a5:	sub    rsp,0x50
   1400453a9:	movsxd rbx,r9d
   1400453ac:	mov    rsi,r8
   1400453af:	mov    ebp,edx
   1400453b1:	mov    r14,rcx
   1400453b4:	test   r9d,r9d
   1400453b7:	jle    0x1400453c7
   1400453b9:	mov    rdx,rbx
   1400453bc:	mov    rcx,r8
   1400453bf:	call   0x140032e04
   1400453c4:	mov    rbx,rax
   1400453c7:	movsxd rax,DWORD PTR [rsp+0x88]
   1400453cf:	mov    rdi,QWORD PTR [rsp+0x80]
   1400453d7:	test   eax,eax
   1400453d9:	jle    0x1400453e6
   1400453db:	mov    rdx,rax
   1400453de:	mov    rcx,rdi
   1400453e1:	call   0x140032e04
   1400453e6:	test   ebx,ebx
   1400453e8:	je     0x14004541b
   1400453ea:	test   eax,eax
   1400453ec:	je     0x14004541b
   1400453ee:	and    QWORD PTR [rsp+0x40],0x0
   1400453f4:	mov    r9d,ebx
   1400453f7:	and    QWORD PTR [rsp+0x38],0x0
   1400453fd:	mov    r8,rsi
   140045400:	and    QWORD PTR [rsp+0x30],0x0
   140045406:	mov    edx,ebp
   140045408:	mov    DWORD PTR [rsp+0x28],eax
   14004540c:	mov    rcx,r14
   14004540f:	mov    QWORD PTR [rsp+0x20],rdi
   140045414:	call   0x14003ce74
   140045419:	jmp    0x140045432
   14004541b:	sub    ebx,eax
   14004541d:	mov    eax,0x3
   140045422:	lea    ecx,[rax-0x2]
   140045425:	cmovs  eax,ecx
   140045428:	test   ebx,ebx
   14004542a:	mov    ecx,0x2
   14004542f:	cmove  eax,ecx
   140045432:	mov    rbx,QWORD PTR [rsp+0x60]
   140045437:	mov    rbp,QWORD PTR [rsp+0x68]
   14004543c:	mov    rsi,QWORD PTR [rsp+0x70]
   140045441:	mov    rdi,QWORD PTR [rsp+0x78]
   140045446:	add    rsp,0x50
   14004544a:	pop    r14
   14004544c:	ret    
   14004544d:	int3   
   14004544e:	int3   
   14004544f:	int3   
   140045450:	rex push rbx
   140045452:	sub    rsp,0x20
   140045456:	inc    DWORD PTR [rip+0x3148c]        # 0x1400768e8
   14004545c:	mov    rbx,rcx
   14004545f:	mov    ecx,0x1000
   140045464:	call   0x140036600
   140045469:	xor    ecx,ecx
   14004546b:	mov    QWORD PTR [rbx+0x8],rax
   14004546f:	call   0x140038c70
   140045474:	cmp    QWORD PTR [rbx+0x8],0x0
   140045479:	je     0x140045489
   14004547b:	lock or DWORD PTR [rbx+0x14],0x40
   140045480:	mov    DWORD PTR [rbx+0x20],0x1000
   140045487:	jmp    0x1400454a0
   140045489:	lock or DWORD PTR [rbx+0x14],0x400
   140045491:	lea    rax,[rbx+0x1c]
   140045495:	mov    DWORD PTR [rbx+0x20],0x2
   14004549c:	mov    QWORD PTR [rbx+0x8],rax
   1400454a0:	mov    rax,QWORD PTR [rbx+0x8]
   1400454a4:	and    DWORD PTR [rbx+0x10],0x0
   1400454a8:	mov    QWORD PTR [rbx],rax
   1400454ab:	add    rsp,0x20
   1400454af:	pop    rbx
   1400454b0:	ret    
   1400454b1:	int3   
   1400454b2:	int3   
   1400454b3:	int3   
   1400454b4:	sub    rsp,0x28
   1400454b8:	xor    edx,edx
   1400454ba:	xor    ecx,ecx
   1400454bc:	call   0x140047660
   1400454c1:	and    eax,0x31f
   1400454c6:	add    rsp,0x28
   1400454ca:	ret    
   1400454cb:	int3   
   1400454cc:	sub    rsp,0x28
   1400454d0:	call   0x14004766c
   1400454d5:	and    eax,0x1f
   1400454d8:	add    rsp,0x28
   1400454dc:	ret    
   1400454dd:	int3   
   1400454de:	int3   
   1400454df:	int3   
   1400454e0:	mov    edx,0x8031f
   1400454e5:	jmp    0x140047660
   1400454ea:	int3   
   1400454eb:	int3   
   1400454ec:	rex push rbx
   1400454ee:	sub    rsp,0x20
   1400454f2:	mov    ebx,ecx
   1400454f4:	call   0x140045340
   1400454f9:	and    eax,0xffffffc2
   1400454fc:	xor    ecx,ecx
   1400454fe:	test   bl,0x1f
   140045501:	je     0x140045530
   140045503:	mov    dl,bl
   140045505:	lea    r8d,[rcx+0x1]
   140045509:	and    dl,0x10
   14004550c:	cmovne ecx,r8d
   140045510:	test   bl,0x8
   140045513:	je     0x140045518
   140045515:	or     ecx,0x4
   140045518:	test   bl,0x4
   14004551b:	je     0x140045520
   14004551d:	or     ecx,0x8
   140045520:	test   bl,0x2
   140045523:	je     0x140045528
   140045525:	or     ecx,0x10
   140045528:	test   r8b,bl
   14004552b:	je     0x140045530
   14004552d:	or     ecx,0x20
   140045530:	or     ecx,eax
   140045532:	add    rsp,0x20
   140045536:	pop    rbx
   140045537:	jmp    0x140045350
   14004553c:	mov    QWORD PTR [rsp+0x8],rbx
   140045541:	push   rdi
   140045542:	sub    rsp,0x50
   140045546:	mov    r10d,r8d
   140045549:	mov    r8,rcx
   14004554c:	xor    eax,eax
   14004554e:	mov    rbx,QWORD PTR [rsp+0x80]
   140045556:	test   rbx,rbx
   140045559:	setne  al
   14004555c:	test   eax,eax
   14004555e:	jne    0x140045578
   140045560:	call   0x140032c50
   140045565:	mov    ebx,0x16
   14004556a:	mov    DWORD PTR [rax],ebx
   14004556c:	call   0x1400307d0
   140045571:	mov    eax,ebx
   140045573:	jmp    0x14004560f
   140045578:	or     DWORD PTR [rbx],0xffffffff
   14004557b:	xor    eax,eax
   14004557d:	test   rcx,rcx
   140045580:	setne  al
   140045583:	test   eax,eax
   140045585:	je     0x140045560
   140045587:	mov    ecx,DWORD PTR [rsp+0x88]
   14004558e:	test   ecx,ecx
   140045590:	je     0x1400455a5
   140045592:	test   r9d,0xfffffe7f
   140045599:	mov    eax,0x0
   14004559e:	sete   al
   1400455a1:	test   eax,eax
   1400455a3:	je     0x140045560
   1400455a5:	and    DWORD PTR [rsp+0x40],0x0
   1400455aa:	and    DWORD PTR [rsp+0x44],0x0
   1400455af:	mov    DWORD PTR [rsp+0x30],ecx
   1400455b3:	mov    DWORD PTR [rsp+0x28],r9d
   1400455b8:	mov    DWORD PTR [rsp+0x20],r10d
   1400455bd:	mov    r9d,edx
   1400455c0:	mov    rdx,rbx
   1400455c3:	lea    rcx,[rsp+0x40]
   1400455c8:	call   0x140045b80
   1400455cd:	mov    edi,eax
   1400455cf:	mov    DWORD PTR [rsp+0x44],eax
   1400455d3:	cmp    DWORD PTR [rsp+0x40],0x0
   1400455d8:	je     0x140045606
   1400455da:	test   eax,eax
   1400455dc:	je     0x1400455ff
   1400455de:	movsxd rcx,DWORD PTR [rbx]
   1400455e1:	mov    rax,rcx
   1400455e4:	sar    rax,0x6
   1400455e8:	lea    rdx,[rip+0x316d1]        # 0x140076cc0
   1400455ef:	and    ecx,0x3f
   1400455f2:	shl    rcx,0x6
   1400455f6:	mov    rax,QWORD PTR [rdx+rax*8]
   1400455fa:	and    BYTE PTR [rax+rcx*1+0x38],0xfe
   1400455ff:	mov    ecx,DWORD PTR [rbx]
   140045601:	call   0x14003ff7c
   140045606:	test   edi,edi
   140045608:	je     0x14004560d
   14004560a:	or     DWORD PTR [rbx],0xffffffff
   14004560d:	mov    eax,edi
   14004560f:	mov    rbx,QWORD PTR [rsp+0x60]
   140045614:	add    rsp,0x50
   140045618:	pop    rdi
   140045619:	ret    
   14004561a:	int3   
   14004561b:	int3   
   14004561c:	mov    r11,rsp
   14004561f:	mov    QWORD PTR [r11+0x10],rbx
   140045623:	mov    QWORD PTR [r11+0x18],rbp
   140045627:	mov    QWORD PTR [r11+0x20],rsi
   14004562b:	push   rdi
   14004562c:	push   r14
   14004562e:	push   r15
   140045630:	sub    rsp,0x30
   140045634:	movsxd r14,ecx
   140045637:	xor    ebx,ebx
   140045639:	mov    r10,r14
   14004563c:	mov    BYTE PTR [r9],bl
   14004563f:	and    r10d,0x3f
   140045643:	lea    rcx,[rip+0x31676]        # 0x140076cc0
   14004564a:	mov    rax,r14
   14004564d:	shl    r10,0x6
   140045651:	sar    rax,0x6
   140045655:	mov    rsi,r9
   140045658:	mov    edi,r8d
   14004565b:	mov    rbp,rdx
   14004565e:	mov    rax,QWORD PTR [rcx+rax*8]
   140045662:	test   BYTE PTR [rax+r10*1+0x38],0x80
   140045668:	je     0x14004587e
   14004566e:	mov    r15d,0x74000
   140045674:	test   r15d,r8d
   140045677:	jne    0x14004569b
   140045679:	lea    rcx,[r11+0x8]
   14004567d:	mov    DWORD PTR [rsp+0x50],ebx
   140045681:	call   0x140034540
   140045686:	test   eax,eax
   140045688:	jne    0x140045899
   14004568e:	mov    eax,DWORD PTR [rsp+0x50]
   140045692:	and    eax,r15d
   140045695:	jne    0x1400456d6
   140045697:	bts    edi,0xe
   14004569b:	mov    ecx,edi
   14004569d:	and    ecx,r15d
   1400456a0:	mov    r15d,0x2
   1400456a6:	cmp    ecx,0x4000
   1400456ac:	je     0x1400456ec
   1400456ae:	lea    eax,[rcx-0x10000]
   1400456b4:	mov    edx,0xffffbfff
   1400456b9:	test   edx,eax
   1400456bb:	je     0x1400456da
   1400456bd:	lea    eax,[rcx-0x20000]
   1400456c3:	test   edx,eax
   1400456c5:	je     0x1400456e7
   1400456c7:	lea    eax,[rcx-0x40000]
   1400456cd:	test   edx,eax
   1400456cf:	jne    0x1400456ee
   1400456d1:	mov    BYTE PTR [rsi],0x1
   1400456d4:	jmp    0x1400456ee
   1400456d6:	or     edi,eax
   1400456d8:	jmp    0x14004569b
   1400456da:	mov    ecx,0x301
   1400456df:	mov    eax,edi
   1400456e1:	and    eax,ecx
   1400456e3:	cmp    eax,ecx
   1400456e5:	jne    0x1400456ee
   1400456e7:	mov    BYTE PTR [rsi],r15b
   1400456ea:	jmp    0x1400456ee
   1400456ec:	mov    BYTE PTR [rsi],bl
   1400456ee:	test   edi,0x70000
   1400456f4:	je     0x14004587e
   1400456fa:	test   BYTE PTR [rbp+0x0],0x40
   1400456fe:	jne    0x14004587e
   140045704:	mov    eax,DWORD PTR [rbp+0x4]
   140045707:	mov    edx,0xc0000000
   14004570c:	and    eax,edx
   14004570e:	mov    ecx,ebx
   140045710:	mov    edi,ebx
   140045712:	cmp    eax,0x40000000
   140045717:	je     0x140045728
   140045719:	cmp    eax,0x80000000
   14004571e:	je     0x140045753
   140045720:	cmp    eax,edx
   140045722:	jne    0x14004587e
   140045728:	mov    eax,DWORD PTR [rbp+0x8]
   14004572b:	test   eax,eax
   14004572d:	je     0x14004587e
   140045733:	cmp    eax,r15d
   140045736:	jbe    0x140045746
   140045738:	cmp    eax,0x4
   14004573b:	jbe    0x140045799
   14004573d:	cmp    eax,0x5
   140045740:	jne    0x14004587e
   140045746:	mov    edi,0x1
   14004574b:	test   ecx,ecx
   14004574d:	je     0x140045821
   140045753:	mov    r8d,0x3
   140045759:	mov    DWORD PTR [rsp+0x50],ebx
   14004575d:	lea    rdx,[rsp+0x50]
   140045762:	mov    ecx,r14d
   140045765:	call   0x14003dc64
   14004576a:	test   eax,eax
   14004576c:	jle    0x140045774
   14004576e:	cmp    edi,0x1
   140045771:	cmove  edi,ebx
   140045774:	cmp    eax,0xffffffff
   140045777:	je     0x1400457be
   140045779:	cmp    eax,r15d
   14004577c:	je     0x1400457d5
   14004577e:	cmp    eax,0x3
   140045781:	jne    0x14004580e
   140045787:	cmp    DWORD PTR [rsp+0x50],0xbfbbef
   14004578f:	jne    0x1400457d5
   140045791:	mov    BYTE PTR [rsi],0x1
   140045794:	jmp    0x140045821
   140045799:	mov    r8d,r15d
   14004579c:	xor    edx,edx
   14004579e:	mov    ecx,r14d
   1400457a1:	call   0x140046138
   1400457a6:	test   rax,rax
   1400457a9:	je     0x140045825
   1400457ab:	xor    r8d,r8d
   1400457ae:	xor    edx,edx
   1400457b0:	mov    ecx,r14d
   1400457b3:	call   0x140046138
   1400457b8:	cmp    rax,0xffffffffffffffff
   1400457bc:	jne    0x1400457ca
   1400457be:	call   0x140032c50
   1400457c3:	mov    eax,DWORD PTR [rax]
   1400457c5:	jmp    0x140045880
   1400457ca:	mov    ecx,DWORD PTR [rbp+0x4]
   1400457cd:	shr    ecx,0x1f
   1400457d0:	jmp    0x14004574b
   1400457d5:	movzx  eax,WORD PTR [rsp+0x50]
   1400457da:	cmp    eax,0xfffe
   1400457df:	jne    0x1400457ee
   1400457e1:	call   0x140032c50
   1400457e6:	mov    DWORD PTR [rax],0x16
   1400457ec:	jmp    0x1400457be
   1400457ee:	cmp    eax,0xfeff
   1400457f3:	jne    0x14004580e
   1400457f5:	xor    r8d,r8d
   1400457f8:	mov    rdx,r15
   1400457fb:	mov    ecx,r14d
   1400457fe:	call   0x140046138
   140045803:	cmp    rax,0xffffffffffffffff
   140045807:	je     0x1400457be
   140045809:	mov    BYTE PTR [rsi],r15b
   14004580c:	jmp    0x140045821
   14004580e:	xor    r8d,r8d
   140045811:	xor    edx,edx
   140045813:	mov    ecx,r14d
   140045816:	call   0x140046138
   14004581b:	cmp    rax,0xffffffffffffffff
   14004581f:	je     0x1400457be
   140045821:	test   edi,edi
   140045823:	je     0x14004587e
   140045825:	movsx  ecx,BYTE PTR [rsi]
   140045828:	mov    edi,ebx
   14004582a:	mov    DWORD PTR [rsp+0x50],ebx
   14004582e:	sub    ecx,0x1
   140045831:	je     0x140045845
   140045833:	cmp    ecx,0x1
   140045836:	jne    0x140045852
   140045838:	mov    DWORD PTR [rsp+0x50],0xfeff
   140045840:	mov    edi,r15d
   140045843:	jmp    0x140045856
   140045845:	mov    DWORD PTR [rsp+0x50],0xbfbbef
   14004584d:	mov    edi,0x3
   140045852:	test   edi,edi
   140045854:	jle    0x14004587e
   140045856:	mov    r8d,edi
   140045859:	movsxd rax,ebx
   14004585c:	lea    rdx,[rsp+0x50]
   140045861:	sub    r8d,ebx
   140045864:	add    rdx,rax
   140045867:	mov    ecx,r14d
   14004586a:	call   0x14003c828
   14004586f:	cmp    eax,0xffffffff
   140045872:	je     0x1400457be
   140045878:	add    ebx,eax
   14004587a:	cmp    edi,ebx
   14004587c:	jg     0x140045856
   14004587e:	xor    eax,eax
   140045880:	mov    rbx,QWORD PTR [rsp+0x58]
   140045885:	mov    rbp,QWORD PTR [rsp+0x60]
   14004588a:	mov    rsi,QWORD PTR [rsp+0x68]
   14004588f:	add    rsp,0x30
   140045893:	pop    r15
   140045895:	pop    r14
   140045897:	pop    rdi
   140045898:	ret    
   140045899:	xor    r9d,r9d
   14004589c:	mov    QWORD PTR [rsp+0x20],rbx
   1400458a1:	xor    r8d,r8d
   1400458a4:	xor    edx,edx
   1400458a6:	xor    ecx,ecx
   1400458a8:	call   0x140030820
   1400458ad:	int3   
   1400458ae:	int3   
   1400458af:	int3   
   1400458b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400458b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400458ba:	push   rsi
   1400458bb:	push   rdi
   1400458bc:	push   r14
   1400458be:	sub    rsp,0x30
   1400458c2:	mov    rbx,rcx
   1400458c5:	mov    BYTE PTR [rcx],0x0
   1400458c8:	mov    ecx,edx
   1400458ca:	mov    r14d,r9d
   1400458cd:	mov    ebp,r8d
   1400458d0:	mov    edi,edx
   1400458d2:	mov    esi,0xffffffff
   1400458d7:	and    ecx,0x3
   1400458da:	je     0x140045922
   1400458dc:	sub    ecx,0x1
   1400458df:	je     0x140045901
   1400458e1:	cmp    ecx,0x1
   1400458e4:	je     0x1400458fa
   1400458e6:	call   0x140032c50
   1400458eb:	mov    DWORD PTR [rax],0x16
   1400458f1:	call   0x1400307d0
   1400458f6:	mov    eax,esi
   1400458f8:	jmp    0x140045927
   1400458fa:	mov    eax,0xc0000000
   1400458ff:	jmp    0x140045927
   140045901:	test   edx,0x70000
   140045907:	setne  cl
   14004590a:	test   dl,0x8
   14004590d:	setne  al
   140045910:	and    cl,al
   140045912:	neg    cl
   140045914:	sbb    eax,eax
   140045916:	and    eax,0x80000000
   14004591b:	add    eax,0x40000000
   140045920:	jmp    0x140045927
   140045922:	mov    eax,0x80000000
   140045927:	mov    DWORD PTR [rbx+0x4],eax
   14004592a:	mov    ecx,0x700
   14004592f:	mov    eax,edi
   140045931:	and    eax,ecx
   140045933:	je     0x140045993
   140045935:	cmp    eax,0x100
   14004593a:	je     0x14004598c
   14004593c:	cmp    eax,0x200
   140045941:	je     0x140045985
   140045943:	cmp    eax,0x300
   140045948:	je     0x14004597e
   14004594a:	cmp    eax,0x400
   14004594f:	je     0x140045993
   140045951:	cmp    eax,0x500
   140045956:	je     0x140045977
   140045958:	cmp    eax,0x600
   14004595d:	je     0x140045985
   14004595f:	cmp    eax,ecx
   140045961:	je     0x140045977
   140045963:	call   0x140032c50
   140045968:	mov    DWORD PTR [rax],0x16
   14004596e:	call   0x1400307d0
   140045973:	mov    eax,esi
   140045975:	jmp    0x140045998
   140045977:	mov    eax,0x1
   14004597c:	jmp    0x140045998
   14004597e:	mov    eax,0x2
   140045983:	jmp    0x140045998
   140045985:	mov    eax,0x5
   14004598a:	jmp    0x140045998
   14004598c:	mov    eax,0x4
   140045991:	jmp    0x140045998
   140045993:	mov    eax,0x3
   140045998:	mov    DWORD PTR [rbx+0x8],eax
   14004599b:	sub    ebp,0x10
   14004599e:	je     0x1400459ea
   1400459a0:	sub    ebp,0x10
   1400459a3:	je     0x1400459e3
   1400459a5:	sub    ebp,0x10
   1400459a8:	je     0x1400459dc
   1400459aa:	sub    ebp,0x10
   1400459ad:	je     0x1400459d5
   1400459af:	sub    ebp,0x40
   1400459b2:	je     0x1400459c6
   1400459b4:	call   0x140032c50
   1400459b9:	mov    DWORD PTR [rax],0x16
   1400459bf:	call   0x1400307d0
   1400459c4:	jmp    0x1400459ec
   1400459c6:	xor    esi,esi
   1400459c8:	cmp    DWORD PTR [rbx+0x4],0x80000000
   1400459cf:	sete   sil
   1400459d3:	jmp    0x1400459ec
   1400459d5:	mov    esi,0x3
   1400459da:	jmp    0x1400459ec
   1400459dc:	mov    esi,0x2
   1400459e1:	jmp    0x1400459ec
   1400459e3:	mov    esi,0x1
   1400459e8:	jmp    0x1400459ec
   1400459ea:	xor    esi,esi
   1400459ec:	and    DWORD PTR [rbx+0x14],0x0
   1400459f0:	mov    bpl,0x80
   1400459f3:	mov    DWORD PTR [rbx+0xc],esi
   1400459f6:	mov    DWORD PTR [rbx+0x10],0x80
   1400459fd:	test   bpl,dil
   140045a00:	je     0x140045a05
   140045a02:	or     BYTE PTR [rbx],0x10
   140045a05:	mov    esi,0x8000
   140045a0a:	test   esi,edi
   140045a0c:	jne    0x140045a2d
   140045a0e:	test   edi,0x74000
   140045a14:	jne    0x140045a2a
   140045a16:	lea    rcx,[rsp+0x58]
   140045a1b:	call   0x140034540
   140045a20:	test   eax,eax
   140045a22:	jne    0x140045aa3
   140045a24:	cmp    DWORD PTR [rsp+0x58],esi
   140045a28:	je     0x140045a2d
   140045a2a:	or     BYTE PTR [rbx],bpl
   140045a2d:	mov    ecx,0x100
   140045a32:	test   ecx,edi
   140045a34:	je     0x140045a4d
   140045a36:	mov    eax,DWORD PTR [rip+0x319a0]        # 0x1400773dc
   140045a3c:	not    eax
   140045a3e:	and    eax,r14d
   140045a41:	test   bpl,al
   140045a44:	jne    0x140045a4d
   140045a46:	mov    DWORD PTR [rbx+0x10],0x1
   140045a4d:	test   dil,0x40
   140045a51:	je     0x140045a61
   140045a53:	bts    DWORD PTR [rbx+0x14],0x1a
   140045a58:	bts    DWORD PTR [rbx+0x4],0x10
   140045a5d:	or     DWORD PTR [rbx+0xc],0x4
   140045a61:	bt     edi,0xc
   140045a65:	jae    0x140045a6a
   140045a67:	or     DWORD PTR [rbx+0x10],ecx
   140045a6a:	bt     edi,0xd
   140045a6e:	jae    0x140045a75
   140045a70:	bts    DWORD PTR [rbx+0x14],0x19
   140045a75:	test   dil,0x20
   140045a79:	je     0x140045a82
   140045a7b:	bts    DWORD PTR [rbx+0x14],0x1b
   140045a80:	jmp    0x140045a8d
   140045a82:	test   dil,0x10
   140045a86:	je     0x140045a8d
   140045a88:	bts    DWORD PTR [rbx+0x14],0x1c
   140045a8d:	mov    rbp,QWORD PTR [rsp+0x60]
   140045a92:	mov    rax,rbx
   140045a95:	mov    rbx,QWORD PTR [rsp+0x50]
   140045a9a:	add    rsp,0x30
   140045a9e:	pop    r14
   140045aa0:	pop    rdi
   140045aa1:	pop    rsi
   140045aa2:	ret    
   140045aa3:	and    QWORD PTR [rsp+0x20],0x0
   140045aa9:	xor    r9d,r9d
   140045aac:	xor    r8d,r8d
   140045aaf:	xor    edx,edx
   140045ab1:	xor    ecx,ecx
   140045ab3:	call   0x140030820
   140045ab8:	int3   
   140045ab9:	int3   
   140045aba:	int3   
   140045abb:	int3   
   140045abc:	mov    QWORD PTR [rsp+0x10],rbx
   140045ac1:	mov    QWORD PTR [rsp+0x18],rsi
   140045ac6:	push   rdi
   140045ac7:	sub    rsp,0x20
   140045acb:	movsxd rbx,ecx
   140045ace:	lea    rcx,[rip+0x311eb]        # 0x140076cc0
   140045ad5:	mov    rdx,rbx
   140045ad8:	mov    rax,rbx
   140045adb:	sar    rax,0x6
   140045adf:	and    edx,0x3f
   140045ae2:	shl    rdx,0x6
   140045ae6:	mov    rax,QWORD PTR [rcx+rax*8]
   140045aea:	mov    cl,BYTE PTR [rax+rdx*1+0x38]
   140045aee:	test   cl,0x48
   140045af1:	jne    0x140045b6b
   140045af3:	test   cl,cl
   140045af5:	jns    0x140045b6b
   140045af7:	mov    r8d,0x2
   140045afd:	or     rdx,0xffffffffffffffff
   140045b01:	mov    ecx,ebx
   140045b03:	call   0x140046138
   140045b08:	mov    rdi,rax
   140045b0b:	cmp    rax,0xffffffffffffffff
   140045b0f:	jne    0x140045b27
   140045b11:	call   0x140032c30
   140045b16:	cmp    DWORD PTR [rax],0x83
   140045b1c:	je     0x140045b6b
   140045b1e:	call   0x140032c50
   140045b23:	mov    eax,DWORD PTR [rax]
   140045b25:	jmp    0x140045b6d
   140045b27:	xor    esi,esi
   140045b29:	lea    rdx,[rsp+0x30]
   140045b2e:	mov    ecx,ebx
   140045b30:	mov    WORD PTR [rsp+0x30],si
   140045b35:	lea    r8d,[rsi+0x1]
   140045b39:	call   0x14003dc64
   140045b3e:	test   eax,eax
   140045b40:	jne    0x140045b59
   140045b42:	cmp    WORD PTR [rsp+0x30],0x1a
   140045b48:	jne    0x140045b59
   140045b4a:	mov    rdx,rdi
   140045b4d:	mov    ecx,ebx
   140045b4f:	call   0x14004794c
   140045b54:	cmp    eax,0xffffffff
   140045b57:	je     0x140045b1e
   140045b59:	xor    r8d,r8d
   140045b5c:	xor    edx,edx
   140045b5e:	mov    ecx,ebx
   140045b60:	call   0x140046138
   140045b65:	cmp    rax,0xffffffffffffffff
   140045b69:	je     0x140045b1e
   140045b6b:	xor    eax,eax
   140045b6d:	mov    rbx,QWORD PTR [rsp+0x38]
   140045b72:	mov    rsi,QWORD PTR [rsp+0x40]
   140045b77:	add    rsp,0x20
   140045b7b:	pop    rdi
   140045b7c:	ret    
   140045b7d:	int3   
   140045b7e:	int3   
   140045b7f:	int3   
   140045b80:	mov    rax,rsp
   140045b83:	mov    QWORD PTR [rax+0x8],rbx
   140045b87:	mov    QWORD PTR [rax+0x10],rdi
   140045b8b:	mov    QWORD PTR [rax+0x18],r8
   140045b8f:	push   rbp
   140045b90:	push   r12
   140045b92:	push   r13
   140045b94:	push   r14
   140045b96:	push   r15
   140045b98:	lea    rbp,[rax-0x47]
   140045b9c:	sub    rsp,0xc0
   140045ba3:	mov    r12d,r9d
   140045ba6:	mov    r14,r8
   140045ba9:	mov    r9d,DWORD PTR [rbp+0x77]
   140045bad:	mov    rdi,rdx
   140045bb0:	mov    r8d,DWORD PTR [rbp+0x6f]
   140045bb4:	mov    rbx,rcx
   140045bb7:	mov    edx,r12d
   140045bba:	lea    rcx,[rbp-0x1]
   140045bbe:	call   0x1400458b0
   140045bc3:	movups xmm0,XMMWORD PTR [rax]
   140045bc6:	movups xmm1,xmm0
   140045bc9:	psrldq xmm1,0x8
   140045bce:	movq   r15,xmm1
   140045bd3:	shr    r15,0x20
   140045bd7:	mov    QWORD PTR [rbp-0x11],r15
   140045bdb:	movups XMMWORD PTR [rbp-0x59],xmm0
   140045bdf:	movsd  xmm0,QWORD PTR [rax+0x10]
   140045be4:	movsd  QWORD PTR [rbp-0x31],xmm0
   140045be9:	movsd  QWORD PTR [rbp-0x49],xmm0
   140045bee:	cmp    r15d,0xffffffff
   140045bf2:	jne    0x140045c0b
   140045bf4:	call   0x140032c30
   140045bf9:	and    DWORD PTR [rax],0x0
   140045bfc:	or     DWORD PTR [rdi],0xffffffff
   140045bff:	call   0x140032c50
   140045c04:	mov    eax,DWORD PTR [rax]
   140045c06:	jmp    0x140045f52
   140045c0b:	call   0x14003ffa0
   140045c10:	mov    DWORD PTR [rdi],eax
   140045c12:	cmp    eax,0xffffffff
   140045c15:	jne    0x140045c2f
   140045c17:	call   0x140032c30
   140045c1c:	and    DWORD PTR [rax],0x0
   140045c1f:	or     DWORD PTR [rdi],0xffffffff
   140045c22:	call   0x140032c50
   140045c27:	mov    DWORD PTR [rax],0x18
   140045c2d:	jmp    0x140045bff
   140045c2f:	and    QWORD PTR [rsp+0x30],0x0
   140045c35:	lea    r9,[rbp-0x29]
   140045c39:	mov    ecx,DWORD PTR [rbp-0x51]
   140045c3c:	mov    eax,r12d
   140045c3f:	mov    rdx,QWORD PTR [rbp-0x59]
   140045c43:	mov    r8d,r15d
   140045c46:	and    QWORD PTR [rbp-0x21],0x0
   140045c4b:	mov    DWORD PTR [rbx],0x1
   140045c51:	mov    rbx,QWORD PTR [rbp-0x49]
   140045c55:	shr    eax,0x7
   140045c58:	shr    rbx,0x20
   140045c5c:	not    eax
   140045c5e:	or     ebx,DWORD PTR [rbp-0x49]
   140045c61:	and    eax,0x1
   140045c64:	mov    DWORD PTR [rsp+0x28],ebx
   140045c68:	mov    DWORD PTR [rsp+0x20],ecx
   140045c6c:	mov    rcx,r14
   140045c6f:	shr    rdx,0x20
   140045c73:	mov    DWORD PTR [rbp-0x29],0x18
   140045c7a:	mov    DWORD PTR [rbp-0x19],eax
   140045c7d:	mov    QWORD PTR [rbp-0x39],rbx
   140045c81:	call   QWORD PTR [rip+0x5479]        # 0x14004b100
   140045c87:	mov    r14d,DWORD PTR [rbp-0x55]
   140045c8b:	mov    ecx,0xc0000000
   140045c90:	mov    QWORD PTR [rbp-0x41],rax
   140045c94:	mov    r13,rax
   140045c97:	cmp    rax,0xffffffffffffffff
   140045c9b:	jne    0x140045d23
   140045ca1:	mov    eax,r14d
   140045ca4:	and    eax,ecx
   140045ca6:	cmp    eax,ecx
   140045ca8:	jne    0x140045cf0
   140045caa:	test   r12b,0x1
   140045cae:	je     0x140045cf0
   140045cb0:	and    QWORD PTR [rsp+0x30],0x0
   140045cb6:	lea    r9,[rbp-0x29]
   140045cba:	mov    ecx,DWORD PTR [rbp-0x51]
   140045cbd:	btr    r14d,0x1f
   140045cc2:	mov    DWORD PTR [rbp-0x55],r14d
   140045cc6:	mov    r8d,r15d
   140045cc9:	mov    rdx,QWORD PTR [rbp-0x59]
   140045ccd:	mov    DWORD PTR [rsp+0x28],ebx
   140045cd1:	mov    DWORD PTR [rsp+0x20],ecx
   140045cd5:	mov    rcx,QWORD PTR [rbp+0x5f]
   140045cd9:	shr    rdx,0x20
   140045cdd:	call   QWORD PTR [rip+0x541d]        # 0x14004b100
   140045ce3:	mov    QWORD PTR [rbp-0x41],rax
   140045ce7:	mov    r13,rax
   140045cea:	cmp    rax,0xffffffffffffffff
   140045cee:	jne    0x140045d23
   140045cf0:	movsxd rcx,DWORD PTR [rdi]
   140045cf3:	lea    r15,[rip+0x30fc6]        # 0x140076cc0
   140045cfa:	mov    rax,rcx
   140045cfd:	and    ecx,0x3f
   140045d00:	sar    rax,0x6
   140045d04:	shl    rcx,0x6
   140045d08:	mov    rax,QWORD PTR [r15+rax*8]
   140045d0c:	and    BYTE PTR [rax+rcx*1+0x38],0xfe
   140045d11:	call   QWORD PTR [rip+0x53c9]        # 0x14004b0e0
   140045d17:	mov    ecx,eax
   140045d19:	call   0x140032be0
   140045d1e:	jmp    0x140045bff
   140045d23:	mov    rcx,r13
   140045d26:	call   QWORD PTR [rip+0x55e4]        # 0x14004b310
   140045d2c:	test   eax,eax
   140045d2e:	jne    0x140045d81
   140045d30:	call   QWORD PTR [rip+0x53aa]        # 0x14004b0e0
   140045d36:	mov    ecx,eax
   140045d38:	mov    ebx,eax
   140045d3a:	call   0x140032be0
   140045d3f:	movsxd rdx,DWORD PTR [rdi]
   140045d42:	lea    r15,[rip+0x30f77]        # 0x140076cc0
   140045d49:	mov    rcx,rdx
   140045d4c:	and    edx,0x3f
   140045d4f:	sar    rcx,0x6
   140045d53:	shl    rdx,0x6
   140045d57:	mov    rcx,QWORD PTR [r15+rcx*8]
   140045d5b:	and    BYTE PTR [rcx+rdx*1+0x38],0xfe
   140045d60:	mov    rcx,r13
   140045d63:	call   QWORD PTR [rip+0x5367]        # 0x14004b0d0
   140045d69:	test   ebx,ebx
   140045d6b:	jne    0x140045bff
   140045d71:	call   0x140032c50
   140045d76:	mov    DWORD PTR [rax],0xd
   140045d7c:	jmp    0x140045bff
   140045d81:	mov    bl,BYTE PTR [rbp-0x59]
   140045d84:	cmp    eax,0x2
   140045d87:	jne    0x140045d8e
   140045d89:	or     bl,0x40
   140045d8c:	jmp    0x140045d96
   140045d8e:	cmp    eax,0x3
   140045d91:	jne    0x140045d96
   140045d93:	or     bl,0x8
   140045d96:	mov    ecx,DWORD PTR [rdi]
   140045d98:	mov    rdx,r13
   140045d9b:	call   0x14003febc
   140045da0:	movsxd rcx,DWORD PTR [rdi]
   140045da3:	lea    r15,[rip+0x30f16]        # 0x140076cc0
   140045daa:	mov    rax,rcx
   140045dad:	or     bl,0x1
   140045db0:	sar    rax,0x6
   140045db4:	and    ecx,0x3f
   140045db7:	shl    rcx,0x6
   140045dbb:	mov    BYTE PTR [rbp-0x59],bl
   140045dbe:	mov    rax,QWORD PTR [r15+rax*8]
   140045dc2:	mov    BYTE PTR [rax+rcx*1+0x38],bl
   140045dc6:	movsxd rcx,DWORD PTR [rdi]
   140045dc9:	mov    rax,rcx
   140045dcc:	and    ecx,0x3f
   140045dcf:	sar    rax,0x6
   140045dd3:	shl    rcx,0x6
   140045dd7:	mov    rax,QWORD PTR [r15+rax*8]
   140045ddb:	mov    BYTE PTR [rax+rcx*1+0x39],0x0
   140045de0:	test   r12b,0x2
   140045de4:	je     0x140045df8
   140045de6:	mov    ecx,DWORD PTR [rdi]
   140045de8:	call   0x140045abc
   140045ded:	mov    r13d,eax
   140045df0:	test   eax,eax
   140045df2:	jne    0x140045e27
   140045df4:	mov    r13,QWORD PTR [rbp-0x41]
   140045df8:	movups xmm0,XMMWORD PTR [rbp-0x59]
   140045dfc:	lea    r9,[rbp-0x61]
   140045e00:	mov    ecx,DWORD PTR [rdi]
   140045e02:	movsd  xmm1,QWORD PTR [rbp-0x31]
   140045e07:	lea    rdx,[rbp-0x1]
   140045e0b:	mov    r8d,r12d
   140045e0e:	movaps XMMWORD PTR [rbp-0x1],xmm0
   140045e12:	mov    BYTE PTR [rbp-0x61],0x0
   140045e16:	movsd  QWORD PTR [rbp+0xf],xmm1
   140045e1b:	call   0x14004561c
   140045e20:	test   eax,eax
   140045e22:	je     0x140045e36
   140045e24:	mov    r13d,eax
   140045e27:	mov    ecx,DWORD PTR [rdi]
   140045e29:	call   0x14003c06c
   140045e2e:	mov    eax,r13d
   140045e31:	jmp    0x140045f52
   140045e36:	movsxd rdx,DWORD PTR [rdi]
   140045e39:	mov    al,BYTE PTR [rbp-0x61]
   140045e3c:	mov    rcx,rdx
   140045e3f:	and    edx,0x3f
   140045e42:	sar    rcx,0x6
   140045e46:	shl    rdx,0x6
   140045e4a:	mov    rcx,QWORD PTR [r15+rcx*8]
   140045e4e:	mov    BYTE PTR [rcx+rdx*1+0x39],al
   140045e52:	movsxd rdx,DWORD PTR [rdi]
   140045e55:	mov    rax,rdx
   140045e58:	and    edx,0x3f
   140045e5b:	sar    rax,0x6
   140045e5f:	shl    rdx,0x6
   140045e63:	mov    rcx,QWORD PTR [r15+rax*8]
   140045e67:	mov    eax,r12d
   140045e6a:	shr    eax,0x10
   140045e6d:	and    al,0x1
   140045e6f:	and    BYTE PTR [rcx+rdx*1+0x3d],0xfe
   140045e74:	or     BYTE PTR [rcx+rdx*1+0x3d],al
   140045e78:	test   bl,0x48
   140045e7b:	jne    0x140045e9d
   140045e7d:	test   r12b,0x8
   140045e81:	je     0x140045e9d
   140045e83:	movsxd rcx,DWORD PTR [rdi]
   140045e86:	mov    rax,rcx
   140045e89:	and    ecx,0x3f
   140045e8c:	sar    rax,0x6
   140045e90:	shl    rcx,0x6
   140045e94:	mov    rax,QWORD PTR [r15+rax*8]
   140045e98:	or     BYTE PTR [rax+rcx*1+0x38],0x20
   140045e9d:	mov    ecx,0xc0000000
   140045ea2:	mov    eax,r14d
   140045ea5:	and    eax,ecx
   140045ea7:	cmp    eax,ecx
   140045ea9:	jne    0x140045f50
   140045eaf:	test   r12b,0x1
   140045eb3:	je     0x140045f50
   140045eb9:	mov    rcx,r13
   140045ebc:	call   QWORD PTR [rip+0x520e]        # 0x14004b0d0
   140045ec2:	mov    rcx,QWORD PTR [rbp-0x39]
   140045ec6:	lea    r9,[rbp-0x29]
   140045eca:	and    QWORD PTR [rsp+0x30],0x0
   140045ed0:	btr    r14d,0x1f
   140045ed5:	mov    r8d,DWORD PTR [rbp-0x11]
   140045ed9:	mov    DWORD PTR [rsp+0x28],ecx
   140045edd:	mov    ecx,DWORD PTR [rbp-0x51]
   140045ee0:	mov    DWORD PTR [rsp+0x20],ecx
   140045ee4:	mov    rcx,QWORD PTR [rbp+0x5f]
   140045ee8:	mov    DWORD PTR [rbp-0x55],r14d
   140045eec:	mov    rdx,QWORD PTR [rbp-0x59]
   140045ef0:	shr    rdx,0x20
   140045ef4:	call   QWORD PTR [rip+0x5206]        # 0x14004b100
   140045efa:	mov    rdx,rax
   140045efd:	cmp    rax,0xffffffffffffffff
   140045f01:	jne    0x140045f36
   140045f03:	call   QWORD PTR [rip+0x51d7]        # 0x14004b0e0
   140045f09:	mov    ecx,eax
   140045f0b:	call   0x140032be0
   140045f10:	movsxd rcx,DWORD PTR [rdi]
   140045f13:	mov    rax,rcx
   140045f16:	and    ecx,0x3f
   140045f19:	shl    rcx,0x6
   140045f1d:	sar    rax,0x6
   140045f21:	mov    rax,QWORD PTR [r15+rax*8]
   140045f25:	and    BYTE PTR [rax+rcx*1+0x38],0xfe
   140045f2a:	mov    ecx,DWORD PTR [rdi]
   140045f2c:	call   0x1400400d0
   140045f31:	jmp    0x140045bff
   140045f36:	movsxd rcx,DWORD PTR [rdi]
   140045f39:	mov    rax,rcx
   140045f3c:	and    ecx,0x3f
   140045f3f:	sar    rax,0x6
   140045f43:	shl    rcx,0x6
   140045f47:	mov    rax,QWORD PTR [r15+rax*8]
   140045f4b:	mov    QWORD PTR [rax+rcx*1+0x28],rdx
   140045f50:	xor    eax,eax
   140045f52:	lea    r11,[rsp+0xc0]
   140045f5a:	mov    rbx,QWORD PTR [r11+0x30]
   140045f5e:	mov    rdi,QWORD PTR [r11+0x38]
   140045f62:	mov    rsp,r11
   140045f65:	pop    r15
   140045f67:	pop    r14
   140045f69:	pop    r13
   140045f6b:	pop    r12
   140045f6d:	pop    rbp
   140045f6e:	ret    
   140045f6f:	int3   
   140045f70:	sub    rsp,0x38
   140045f74:	mov    eax,r9d
   140045f77:	mov    DWORD PTR [rsp+0x28],0x1
   140045f7f:	mov    r9d,DWORD PTR [rsp+0x60]
   140045f84:	mov    r10d,r8d
   140045f87:	mov    r11,rdx
   140045f8a:	mov    QWORD PTR [rsp+0x20],rcx
   140045f8f:	mov    r8d,eax
   140045f92:	mov    edx,r10d
   140045f95:	mov    rcx,r11
   140045f98:	call   0x14004553c
   140045f9d:	add    rsp,0x38
   140045fa1:	ret    
   140045fa2:	int3   
   140045fa3:	int3   
   140045fa4:	mov    QWORD PTR [rsp+0x10],rbx
   140045fa9:	mov    QWORD PTR [rsp+0x18],rsi
   140045fae:	mov    DWORD PTR [rsp+0x8],ecx
   140045fb2:	push   rdi
   140045fb3:	push   r12
   140045fb5:	push   r13
   140045fb7:	push   r14
   140045fb9:	push   r15
   140045fbb:	sub    rsp,0x20
   140045fbf:	mov    r15d,r8d
   140045fc2:	mov    r12,rdx
   140045fc5:	movsxd rbx,ecx
   140045fc8:	cmp    ebx,0xfffffffe
   140045fcb:	jne    0x140045fe5
   140045fcd:	call   0x140032c30
   140045fd2:	and    DWORD PTR [rax],0x0
   140045fd5:	call   0x140032c50
   140045fda:	mov    DWORD PTR [rax],0x9
   140045fe0:	jmp    0x140046078
   140045fe5:	test   ecx,ecx
   140045fe7:	js     0x140046060
   140045fe9:	cmp    ebx,DWORD PTR [rip+0x310d1]        # 0x1400770c0
   140045fef:	jae    0x140046060
   140045ff1:	mov    rsi,rbx
   140045ff4:	mov    r14,rbx
   140045ff7:	sar    r14,0x6
   140045ffb:	lea    r13,[rip+0x30cbe]        # 0x140076cc0
   140046002:	and    esi,0x3f
   140046005:	shl    rsi,0x6
   140046009:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14004600e:	movzx  ecx,BYTE PTR [rax+rsi*1+0x38]
   140046013:	and    ecx,0x1
   140046016:	je     0x140046060
   140046018:	mov    ecx,ebx
   14004601a:	call   0x14003fe98
   14004601f:	or     rdi,0xffffffffffffffff
   140046023:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140046028:	test   BYTE PTR [rax+rsi*1+0x38],0x1
   14004602d:	jne    0x140046044
   14004602f:	call   0x140032c50
   140046034:	mov    DWORD PTR [rax],0x9
   14004603a:	call   0x140032c30
   14004603f:	and    DWORD PTR [rax],0x0
   140046042:	jmp    0x140046054
   140046044:	mov    r8d,r15d
   140046047:	mov    rdx,r12
   14004604a:	mov    ecx,ebx
   14004604c:	call   0x140046094
   140046051:	mov    rdi,rax
   140046054:	mov    ecx,ebx
   140046056:	call   0x14003ff7c
   14004605b:	mov    rax,rdi
   14004605e:	jmp    0x14004607c
   140046060:	call   0x140032c30
   140046065:	and    DWORD PTR [rax],0x0
   140046068:	call   0x140032c50
   14004606d:	mov    DWORD PTR [rax],0x9
   140046073:	call   0x1400307d0
   140046078:	or     rax,0xffffffffffffffff
   14004607c:	mov    rbx,QWORD PTR [rsp+0x58]
   140046081:	mov    rsi,QWORD PTR [rsp+0x60]
   140046086:	add    rsp,0x20
   14004608a:	pop    r15
   14004608c:	pop    r14
   14004608e:	pop    r13
   140046090:	pop    r12
   140046092:	pop    rdi
   140046093:	ret    
   140046094:	mov    QWORD PTR [rsp+0x8],rbx
   140046099:	mov    QWORD PTR [rsp+0x10],rsi
   14004609e:	push   rdi
   14004609f:	sub    rsp,0x20
   1400460a3:	movsxd rbx,ecx
   1400460a6:	mov    edi,r8d
   1400460a9:	mov    ecx,ebx
   1400460ab:	mov    rsi,rdx
   1400460ae:	call   0x14004018c
   1400460b3:	cmp    rax,0xffffffffffffffff
   1400460b7:	jne    0x1400460ca
   1400460b9:	call   0x140032c50
   1400460be:	mov    DWORD PTR [rax],0x9
   1400460c4:	or     rax,0xffffffffffffffff
   1400460c8:	jmp    0x14004611d
   1400460ca:	mov    r9d,edi
   1400460cd:	lea    r8,[rsp+0x48]
   1400460d2:	mov    rdx,rsi
   1400460d5:	mov    rcx,rax
   1400460d8:	call   QWORD PTR [rip+0x50aa]        # 0x14004b188
   1400460de:	test   eax,eax
   1400460e0:	jne    0x1400460f1
   1400460e2:	call   QWORD PTR [rip+0x4ff8]        # 0x14004b0e0
   1400460e8:	mov    ecx,eax
   1400460ea:	call   0x140032be0
   1400460ef:	jmp    0x1400460c4
   1400460f1:	mov    rax,QWORD PTR [rsp+0x48]
   1400460f6:	cmp    rax,0xffffffffffffffff
   1400460fa:	je     0x1400460c4
   1400460fc:	mov    rdx,rbx
   1400460ff:	lea    r8,[rip+0x30bba]        # 0x140076cc0
   140046106:	and    edx,0x3f
   140046109:	mov    rcx,rbx
   14004610c:	sar    rcx,0x6
   140046110:	shl    rdx,0x6
   140046114:	mov    rcx,QWORD PTR [r8+rcx*8]
   140046118:	and    BYTE PTR [rcx+rdx*1+0x38],0xfd
   14004611d:	mov    rbx,QWORD PTR [rsp+0x30]
   140046122:	mov    rsi,QWORD PTR [rsp+0x38]
   140046127:	add    rsp,0x20
   14004612b:	pop    rdi
   14004612c:	ret    
   14004612d:	int3   
   14004612e:	int3   
   14004612f:	int3   
   140046130:	jmp    0x140045fa4
   140046135:	int3   
   140046136:	int3   
   140046137:	int3   
   140046138:	jmp    0x140046094
   14004613d:	int3   
   14004613e:	int3   
   14004613f:	int3   
   140046140:	mov    WORD PTR [rsp+0x8],cx
   140046145:	sub    rsp,0x38
   140046149:	mov    rcx,QWORD PTR [rip+0x2ba58]        # 0x140071ba8
   140046150:	cmp    rcx,0xfffffffffffffffe
   140046154:	jne    0x140046162
   140046156:	call   0x140047ac8
   14004615b:	mov    rcx,QWORD PTR [rip+0x2ba46]        # 0x140071ba8
   140046162:	cmp    rcx,0xffffffffffffffff
   140046166:	jne    0x14004616f
   140046168:	mov    eax,0xffff
   14004616d:	jmp    0x140046194
   14004616f:	and    QWORD PTR [rsp+0x20],0x0
   140046175:	lea    r9,[rsp+0x48]
   14004617a:	mov    r8d,0x1
   140046180:	lea    rdx,[rsp+0x40]
   140046185:	call   QWORD PTR [rip+0x5215]        # 0x14004b3a0
   14004618b:	test   eax,eax
   14004618d:	je     0x140046168
   14004618f:	movzx  eax,WORD PTR [rsp+0x40]
   140046194:	add    rsp,0x38
   140046198:	ret    
   140046199:	int3   
   14004619a:	int3   
   14004619b:	int3   
   14004619c:	mov    rax,rsp
   14004619f:	mov    QWORD PTR [rax+0x8],rbx
   1400461a3:	mov    QWORD PTR [rax+0x10],rbp
   1400461a7:	mov    QWORD PTR [rax+0x18],rsi
   1400461ab:	mov    QWORD PTR [rax+0x20],rdi
   1400461af:	push   r14
   1400461b1:	xor    ebp,ebp
   1400461b3:	lea    r14,[rip+0x15c26]        # 0x14005bde0
   1400461ba:	mov    r10d,ebp
   1400461bd:	mov    rsi,rcx
   1400461c0:	mov    r11d,0xe3
   1400461c6:	lea    eax,[r11+r10*1]
   1400461ca:	mov    rdi,rsi
   1400461cd:	cdq    
   1400461ce:	mov    ebx,0x55
   1400461d3:	sub    eax,edx
   1400461d5:	sar    eax,1
   1400461d7:	movsxd r8,eax
   1400461da:	mov    rcx,r8
   1400461dd:	shl    rcx,0x4
   1400461e1:	mov    r9,QWORD PTR [rcx+r14*1]
   1400461e5:	sub    rdi,r9
   1400461e8:	movzx  edx,WORD PTR [rdi+r9*1]
   1400461ed:	lea    ecx,[rdx-0x41]
   1400461f0:	cmp    cx,0x19
   1400461f4:	ja     0x1400461fa
   1400461f6:	add    dx,0x20
   1400461fa:	movzx  ecx,WORD PTR [r9]
   1400461fe:	lea    eax,[rcx-0x41]
   140046201:	cmp    ax,0x19
   140046205:	ja     0x14004620b
   140046207:	add    cx,0x20
   14004620b:	add    r9,0x2
   14004620f:	sub    rbx,0x1
   140046213:	je     0x14004621f
   140046215:	test   dx,dx
   140046218:	je     0x14004621f
   14004621a:	cmp    dx,cx
   14004621d:	je     0x1400461e8
   14004621f:	movzx  eax,cx
   140046222:	movzx  ecx,dx
   140046225:	sub    ecx,eax
   140046227:	je     0x140046241
   140046229:	test   ecx,ecx
   14004622b:	jns    0x140046233
   14004622d:	lea    r11d,[r8-0x1]
   140046231:	jmp    0x140046237
   140046233:	lea    r10d,[r8+0x1]
   140046237:	cmp    r10d,r11d
   14004623a:	jle    0x1400461c6
   14004623c:	or     eax,0xffffffff
   14004623f:	jmp    0x14004624c
   140046241:	mov    rax,r8
   140046244:	add    rax,rax
   140046247:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14004624c:	mov    rbx,QWORD PTR [rsp+0x10]
   140046251:	mov    rbp,QWORD PTR [rsp+0x18]
   140046256:	mov    rsi,QWORD PTR [rsp+0x20]
   14004625b:	mov    rdi,QWORD PTR [rsp+0x28]
   140046260:	pop    r14
   140046262:	ret    
   140046263:	int3   
   140046264:	mov    QWORD PTR [rsp+0x8],rbx
   140046269:	mov    QWORD PTR [rsp+0x10],rbp
   14004626e:	mov    QWORD PTR [rsp+0x18],rsi
   140046273:	push   rdi
   140046274:	sub    rsp,0x30
   140046278:	movsxd rbx,r8d
   14004627b:	mov    r8d,ecx
   14004627e:	mov    rsi,rdx
   140046281:	test   ecx,0xfffff3ff
   140046287:	jne    0x140046291
   140046289:	cmp    ecx,0xc00
   14004628f:	jne    0x14004629e
   140046291:	test   rdx,rdx
   140046294:	jne    0x14004629a
   140046296:	test   ebx,ebx
   140046298:	jg     0x14004629e
   14004629a:	test   ebx,ebx
   14004629c:	jns    0x1400462a2
   14004629e:	xor    eax,eax
   1400462a0:	jmp    0x14004631b
   1400462a2:	xor    r9d,r9d
   1400462a5:	lea    rbp,[rip+0x14cf4]        # 0x14005afa0
   1400462ac:	mov    r10d,0xe3
   1400462b2:	lea    eax,[r10+r9*1]
   1400462b6:	cdq    
   1400462b7:	sub    eax,edx
   1400462b9:	mov    edx,r8d
   1400462bc:	sar    eax,1
   1400462be:	movsxd rcx,eax
   1400462c1:	shl    rcx,0x4
   1400462c5:	sub    edx,DWORD PTR [rcx+rbp*1]
   1400462c8:	je     0x1400462e0
   1400462ca:	test   edx,edx
   1400462cc:	jns    0x1400462d4
   1400462ce:	lea    r10d,[rax-0x1]
   1400462d2:	jmp    0x1400462d8
   1400462d4:	lea    r9d,[rax+0x1]
   1400462d8:	cmp    r9d,r10d
   1400462db:	jle    0x1400462b2
   1400462dd:	or     eax,0xffffffff
   1400462e0:	test   eax,eax
   1400462e2:	js     0x14004629e
   1400462e4:	cdqe   
   1400462e6:	mov    edx,0x55
   1400462eb:	add    rax,rax
   1400462ee:	mov    rbp,QWORD PTR [rbp+rax*8+0x8]
   1400462f3:	mov    rcx,rbp
   1400462f6:	call   0x140032e04
   1400462fb:	mov    rdi,rax
   1400462fe:	test   ebx,ebx
   140046300:	jle    0x140046318
   140046302:	cmp    eax,ebx
   140046304:	jge    0x14004629e
   140046306:	mov    rdx,rbx
   140046309:	mov    r8,rbp
   14004630c:	mov    rcx,rsi
   14004630f:	call   0x140038cb0
   140046314:	test   eax,eax
   140046316:	jne    0x140046330
   140046318:	lea    eax,[rdi+0x1]
   14004631b:	mov    rbx,QWORD PTR [rsp+0x40]
   140046320:	mov    rbp,QWORD PTR [rsp+0x48]
   140046325:	mov    rsi,QWORD PTR [rsp+0x50]
   14004632a:	add    rsp,0x30
   14004632e:	pop    rdi
   14004632f:	ret    
   140046330:	and    QWORD PTR [rsp+0x20],0x0
   140046336:	xor    r9d,r9d
   140046339:	xor    r8d,r8d
   14004633c:	xor    edx,edx
   14004633e:	xor    ecx,ecx
   140046340:	call   0x140030820
   140046345:	int3   
   140046346:	int3   
   140046347:	int3   
   140046348:	sub    rsp,0x28
   14004634c:	test   rcx,rcx
   14004634f:	je     0x140046373
   140046351:	call   0x14004619c
   140046356:	test   eax,eax
   140046358:	js     0x140046373
   14004635a:	cdqe   
   14004635c:	cmp    rax,0xe4
   140046362:	jae    0x140046373
   140046364:	add    rax,rax
   140046367:	lea    rcx,[rip+0x14c32]        # 0x14005afa0
   14004636e:	mov    eax,DWORD PTR [rcx+rax*8]
   140046371:	jmp    0x140046375
   140046373:	xor    eax,eax
   140046375:	add    rsp,0x28
   140046379:	ret    
   14004637a:	int3   
   14004637b:	int3   
   14004637c:	int3   
   14004637d:	int3   
   14004637e:	int3   
   14004637f:	int3   
   140046380:	cmp    rdx,rcx
   140046383:	jbe    0x14004644b
   140046389:	mov    QWORD PTR [rsp+0x20],rbp
   14004638e:	push   rdi
   14004638f:	push   r14
   140046391:	push   r15
   140046393:	sub    rsp,0x20
   140046397:	mov    QWORD PTR [rsp+0x40],rbx
   14004639c:	mov    r14,r9
   14004639f:	mov    QWORD PTR [rsp+0x48],rsi
   1400463a4:	mov    rbp,r8
   1400463a7:	mov    QWORD PTR [rsp+0x50],r12
   1400463ac:	mov    rdi,rdx
   1400463af:	lea    r12,[rcx+r8*1]
   1400463b3:	mov    r15,rcx
   1400463b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400463c0:	mov    rbx,r15
   1400463c3:	mov    rsi,r12
   1400463c6:	cmp    r12,rdi
   1400463c9:	ja     0x1400463f0
   1400463cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400463d0:	mov    rcx,r14
   1400463d3:	call   QWORD PTR [rip+0x507f]        # 0x14004b458
   1400463d9:	mov    rdx,rbx
   1400463dc:	mov    rcx,rsi
   1400463df:	call   r14
   1400463e2:	test   eax,eax
   1400463e4:	cmovg  rbx,rsi
   1400463e8:	add    rsi,rbp
   1400463eb:	cmp    rsi,rdi
   1400463ee:	jbe    0x1400463d0
   1400463f0:	mov    r8,rbp
   1400463f3:	mov    rax,rdi
   1400463f6:	cmp    rbx,rdi
   1400463f9:	je     0x140046426
   1400463fb:	test   rbp,rbp
   1400463fe:	je     0x140046426
   140046400:	sub    rbx,rdi
   140046403:	nop    DWORD PTR [rax+0x0]
   140046407:	nop    WORD PTR [rax+rax*1+0x0]
   140046410:	movzx  ecx,BYTE PTR [rax]
   140046413:	movzx  edx,BYTE PTR [rbx+rax*1]
   140046417:	mov    BYTE PTR [rbx+rax*1],cl
   14004641a:	mov    BYTE PTR [rax],dl
   14004641c:	lea    rax,[rax+0x1]
   140046420:	sub    r8,0x1
   140046424:	jne    0x140046410
   140046426:	sub    rdi,rbp
   140046429:	cmp    rdi,r15
   14004642c:	ja     0x1400463c0
   14004642e:	mov    r12,QWORD PTR [rsp+0x50]
   140046433:	mov    rsi,QWORD PTR [rsp+0x48]
   140046438:	mov    rbx,QWORD PTR [rsp+0x40]
   14004643d:	mov    rbp,QWORD PTR [rsp+0x58]
   140046442:	add    rsp,0x20
   140046446:	pop    r15
   140046448:	pop    r14
   14004644a:	pop    rdi
   14004644b:	ret    
   14004644c:	int3   
   14004644d:	int3   
   14004644e:	int3   
   14004644f:	int3   
   140046450:	rex push rbp
   140046452:	push   r12
   140046454:	push   r14
   140046456:	sub    rsp,0x440
   14004645d:	mov    rax,QWORD PTR [rip+0x2abec]        # 0x140071050
   140046464:	xor    rax,rsp
   140046467:	mov    QWORD PTR [rsp+0x400],rax
   14004646f:	mov    r14,r9
   140046472:	mov    rbp,r8
   140046475:	mov    r12,rcx
   140046478:	test   rcx,rcx
   14004647b:	jne    0x140046497
   14004647d:	test   rdx,rdx
   140046480:	je     0x140046497
   140046482:	call   0x140032c50
   140046487:	mov    DWORD PTR [rax],0x16
   14004648d:	call   0x1400307d0
   140046492:	jmp    0x140046767
   140046497:	test   r8,r8
   14004649a:	je     0x140046482
   14004649c:	test   r9,r9
   14004649f:	je     0x140046482
   1400464a1:	cmp    rdx,0x2
   1400464a5:	jb     0x140046767
   1400464ab:	mov    QWORD PTR [rsp+0x438],rbx
   1400464b3:	mov    QWORD PTR [rsp+0x430],rsi
   1400464bb:	mov    QWORD PTR [rsp+0x428],rdi
   1400464c3:	mov    QWORD PTR [rsp+0x420],r13
   1400464cb:	mov    QWORD PTR [rsp+0x418],r15
   1400464d3:	lea    r15,[rdx-0x1]
   1400464d7:	imul   r15,rbp
   1400464db:	add    r15,rcx
   1400464de:	xor    r13d,r13d
   1400464e1:	xor    edx,edx
   1400464e3:	mov    rax,r15
   1400464e6:	sub    rax,r12
   1400464e9:	div    rbp
   1400464ec:	lea    rsi,[rax+0x1]
   1400464f0:	cmp    rsi,0x8
   1400464f4:	ja     0x140046520
   1400464f6:	mov    r9,r14
   1400464f9:	mov    r8,rbp
   1400464fc:	mov    rdx,r15
   1400464ff:	mov    rcx,r12
   140046502:	call   0x140046380
   140046507:	sub    r13,0x1
   14004650b:	js     0x14004673f
   140046511:	mov    r12,QWORD PTR [rsp+r13*8+0x20]
   140046516:	mov    r15,QWORD PTR [rsp+r13*8+0x210]
   14004651e:	jmp    0x1400464e1
   140046520:	shr    rsi,1
   140046523:	mov    rcx,r14
   140046526:	imul   rsi,rbp
   14004652a:	add    rsi,r12
   14004652d:	call   QWORD PTR [rip+0x4f25]        # 0x14004b458
   140046533:	mov    rdx,rsi
   140046536:	mov    rcx,r12
   140046539:	call   r14
   14004653c:	test   eax,eax
   14004653e:	jle    0x140046569
   140046540:	mov    r8,rbp
   140046543:	mov    rdx,rsi
   140046546:	cmp    r12,rsi
   140046549:	je     0x140046569
   14004654b:	mov    r9,r12
   14004654e:	sub    r9,rsi
   140046551:	movzx  eax,BYTE PTR [rdx]
   140046554:	movzx  ecx,BYTE PTR [r9+rdx*1]
   140046559:	mov    BYTE PTR [r9+rdx*1],al
   14004655d:	mov    BYTE PTR [rdx],cl
   14004655f:	lea    rdx,[rdx+0x1]
   140046563:	sub    r8,0x1
   140046567:	jne    0x140046551
   140046569:	mov    rcx,r14
   14004656c:	call   QWORD PTR [rip+0x4ee6]        # 0x14004b458
   140046572:	mov    rdx,r15
   140046575:	mov    rcx,r12
   140046578:	call   r14
   14004657b:	test   eax,eax
   14004657d:	jle    0x1400465a8
   14004657f:	mov    r8,rbp
   140046582:	mov    rdx,r15
   140046585:	cmp    r12,r15
   140046588:	je     0x1400465a8
   14004658a:	mov    r9,r12
   14004658d:	sub    r9,r15
   140046590:	movzx  eax,BYTE PTR [rdx]
   140046593:	movzx  ecx,BYTE PTR [r9+rdx*1]
   140046598:	mov    BYTE PTR [r9+rdx*1],al
   14004659c:	mov    BYTE PTR [rdx],cl
   14004659e:	lea    rdx,[rdx+0x1]
   1400465a2:	sub    r8,0x1
   1400465a6:	jne    0x140046590
   1400465a8:	mov    rcx,r14
   1400465ab:	call   QWORD PTR [rip+0x4ea7]        # 0x14004b458
   1400465b1:	mov    rdx,r15
   1400465b4:	mov    rcx,rsi
   1400465b7:	call   r14
   1400465ba:	test   eax,eax
   1400465bc:	jle    0x1400465e8
   1400465be:	mov    r8,rbp
   1400465c1:	mov    rdx,r15
   1400465c4:	cmp    rsi,r15
   1400465c7:	je     0x1400465e8
   1400465c9:	mov    r9,rsi
   1400465cc:	sub    r9,r15
   1400465cf:	nop
   1400465d0:	movzx  eax,BYTE PTR [rdx]
   1400465d3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   1400465d8:	mov    BYTE PTR [r9+rdx*1],al
   1400465dc:	mov    BYTE PTR [rdx],cl
   1400465de:	lea    rdx,[rdx+0x1]
   1400465e2:	sub    r8,0x1
   1400465e6:	jne    0x1400465d0
   1400465e8:	mov    rbx,r12
   1400465eb:	mov    rdi,r15
   1400465ee:	xchg   ax,ax
   1400465f0:	cmp    rsi,rbx
   1400465f3:	jbe    0x140046618
   1400465f5:	add    rbx,rbp
   1400465f8:	cmp    rbx,rsi
   1400465fb:	jae    0x140046618
   1400465fd:	mov    rcx,r14
   140046600:	call   QWORD PTR [rip+0x4e52]        # 0x14004b458
   140046606:	mov    rdx,rsi
   140046609:	mov    rcx,rbx
   14004660c:	call   r14
   14004660f:	test   eax,eax
   140046611:	jle    0x1400465f5
   140046613:	cmp    rsi,rbx
   140046616:	ja     0x140046636
   140046618:	add    rbx,rbp
   14004661b:	cmp    rbx,r15
   14004661e:	ja     0x140046636
   140046620:	mov    rcx,r14
   140046623:	call   QWORD PTR [rip+0x4e2f]        # 0x14004b458
   140046629:	mov    rdx,rsi
   14004662c:	mov    rcx,rbx
   14004662f:	call   r14
   140046632:	test   eax,eax
   140046634:	jle    0x140046618
   140046636:	sub    rdi,rbp
   140046639:	cmp    rdi,rsi
   14004663c:	jbe    0x140046654
   14004663e:	mov    rcx,r14
   140046641:	call   QWORD PTR [rip+0x4e11]        # 0x14004b458
   140046647:	mov    rdx,rsi
   14004664a:	mov    rcx,rdi
   14004664d:	call   r14
   140046650:	test   eax,eax
   140046652:	jg     0x140046636
   140046654:	cmp    rdi,rbx
   140046657:	jb     0x140046699
   140046659:	mov    r8,rbp
   14004665c:	mov    rdx,rdi
   14004665f:	cmp    rbx,rdi
   140046662:	je     0x140046688
   140046664:	mov    r9,rbx
   140046667:	sub    r9,rdi
   14004666a:	nop    WORD PTR [rax+rax*1+0x0]
   140046670:	movzx  eax,BYTE PTR [rdx]
   140046673:	movzx  ecx,BYTE PTR [r9+rdx*1]
   140046678:	mov    BYTE PTR [r9+rdx*1],al
   14004667c:	mov    BYTE PTR [rdx],cl
   14004667e:	lea    rdx,[rdx+0x1]
   140046682:	sub    r8,0x1
   140046686:	jne    0x140046670
   140046688:	cmp    rsi,rdi
   14004668b:	jne    0x1400465f0
   140046691:	mov    rsi,rbx
   140046694:	jmp    0x1400465f0
   140046699:	add    rdi,rbp
   14004669c:	cmp    rsi,rdi
   14004669f:	jae    0x1400466c4
   1400466a1:	sub    rdi,rbp
   1400466a4:	cmp    rdi,rsi
   1400466a7:	jbe    0x1400466c4
   1400466a9:	mov    rcx,r14
   1400466ac:	call   QWORD PTR [rip+0x4da6]        # 0x14004b458
   1400466b2:	mov    rdx,rsi
   1400466b5:	mov    rcx,rdi
   1400466b8:	call   r14
   1400466bb:	test   eax,eax
   1400466bd:	je     0x1400466a1
   1400466bf:	cmp    rsi,rdi
   1400466c2:	jb     0x1400466e2
   1400466c4:	sub    rdi,rbp
   1400466c7:	cmp    rdi,r12
   1400466ca:	jbe    0x1400466e2
   1400466cc:	mov    rcx,r14
   1400466cf:	call   QWORD PTR [rip+0x4d83]        # 0x14004b458
   1400466d5:	mov    rdx,rsi
   1400466d8:	mov    rcx,rdi
   1400466db:	call   r14
   1400466de:	test   eax,eax
   1400466e0:	je     0x1400466c4
   1400466e2:	mov    rcx,r15
   1400466e5:	mov    rax,rdi
   1400466e8:	sub    rcx,rbx
   1400466eb:	sub    rax,r12
   1400466ee:	cmp    rax,rcx
   1400466f1:	jl     0x140046719
   1400466f3:	cmp    r12,rdi
   1400466f6:	jae    0x140046708
   1400466f8:	mov    QWORD PTR [rsp+r13*8+0x20],r12
   1400466fd:	mov    QWORD PTR [rsp+r13*8+0x210],rdi
   140046705:	inc    r13
   140046708:	cmp    rbx,r15
   14004670b:	jae    0x140046507
   140046711:	mov    r12,rbx
   140046714:	jmp    0x1400464e1
   140046719:	cmp    rbx,r15
   14004671c:	jae    0x14004672e
   14004671e:	mov    QWORD PTR [rsp+r13*8+0x20],rbx
   140046723:	mov    QWORD PTR [rsp+r13*8+0x210],r15
   14004672b:	inc    r13
   14004672e:	cmp    r12,rdi
   140046731:	jae    0x140046507
   140046737:	mov    r15,rdi
   14004673a:	jmp    0x1400464e1
   14004673f:	mov    r13,QWORD PTR [rsp+0x420]
   140046747:	mov    rdi,QWORD PTR [rsp+0x428]
   14004674f:	mov    rsi,QWORD PTR [rsp+0x430]
   140046757:	mov    rbx,QWORD PTR [rsp+0x438]
   14004675f:	mov    r15,QWORD PTR [rsp+0x418]
   140046767:	mov    rcx,QWORD PTR [rsp+0x400]
   14004676f:	xor    rcx,rsp
   140046772:	call   0x140025df0
   140046777:	add    rsp,0x440
   14004677e:	pop    r14
   140046780:	pop    r12
   140046782:	pop    rbp
   140046783:	ret    
   140046784:	mov    QWORD PTR [rsp+0x8],rbx
   140046789:	push   rdi
   14004678a:	sub    rsp,0x20
   14004678e:	xor    r10d,r10d
   140046791:	mov    r11,rdx
   140046794:	test   r9,r9
   140046797:	jne    0x1400467c5
   140046799:	test   rcx,rcx
   14004679c:	jne    0x1400467ca
   14004679e:	test   rdx,rdx
   1400467a1:	je     0x1400467b7
   1400467a3:	call   0x140032c50
   1400467a8:	mov    ebx,0x16
   1400467ad:	mov    DWORD PTR [rax],ebx
   1400467af:	call   0x1400307d0
   1400467b4:	mov    r10d,ebx
   1400467b7:	mov    eax,r10d
   1400467ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400467bf:	add    rsp,0x20
   1400467c3:	pop    rdi
   1400467c4:	ret    
   1400467c5:	test   rcx,rcx
   1400467c8:	je     0x1400467a3
   1400467ca:	test   rdx,rdx
   1400467cd:	je     0x1400467a3
   1400467cf:	test   r9,r9
   1400467d2:	jne    0x1400467d9
   1400467d4:	mov    BYTE PTR [rcx],r10b
   1400467d7:	jmp    0x1400467b7
   1400467d9:	test   r8,r8
   1400467dc:	jne    0x1400467e3
   1400467de:	mov    BYTE PTR [rcx],r10b
   1400467e1:	jmp    0x1400467a3
   1400467e3:	sub    r8,rcx
   1400467e6:	mov    rdx,rcx
   1400467e9:	mov    rbx,r11
   1400467ec:	mov    rdi,r9
   1400467ef:	cmp    r9,0xffffffffffffffff
   1400467f3:	jne    0x14004680a
   1400467f5:	mov    al,BYTE PTR [r8+rdx*1]
   1400467f9:	mov    BYTE PTR [rdx],al
   1400467fb:	inc    rdx
   1400467fe:	test   al,al
   140046800:	je     0x14004682b
   140046802:	sub    rbx,0x1
   140046806:	jne    0x1400467f5
   140046808:	jmp    0x14004682b
   14004680a:	mov    al,BYTE PTR [r8+rdx*1]
   14004680e:	mov    BYTE PTR [rdx],al
   140046810:	inc    rdx
   140046813:	test   al,al
   140046815:	je     0x140046823
   140046817:	sub    rbx,0x1
   14004681b:	je     0x140046823
   14004681d:	sub    rdi,0x1
   140046821:	jne    0x14004680a
   140046823:	test   rdi,rdi
   140046826:	jne    0x14004682b
   140046828:	mov    BYTE PTR [rdx],r10b
   14004682b:	test   rbx,rbx
   14004682e:	jne    0x1400467b7
   140046830:	cmp    r9,0xffffffffffffffff
   140046834:	jne    0x140046844
   140046836:	mov    BYTE PTR [rcx+r11*1-0x1],r10b
   14004683b:	lea    r10d,[rbx+0x50]
   14004683f:	jmp    0x1400467b7
   140046844:	mov    BYTE PTR [rcx],r10b
   140046847:	call   0x140032c50
   14004684c:	mov    ebx,0x22
   140046851:	jmp    0x1400467ad
   140046856:	int3   
   140046857:	int3   
   140046858:	sub    rsp,0x58
   14004685c:	mov    rax,QWORD PTR [rip+0x2a7ed]        # 0x140071050
   140046863:	xor    rax,rsp
   140046866:	mov    QWORD PTR [rsp+0x40],rax
   14004686b:	xor    eax,eax
   14004686d:	mov    r9,rdx
   140046870:	cmp    rax,0x20
   140046874:	mov    r8,rcx
   140046877:	jae    0x1400468f0
   140046879:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   14004687e:	inc    rax
   140046881:	cmp    rax,0x20
   140046885:	jl     0x140046877
   140046887:	mov    al,BYTE PTR [rdx]
   140046889:	jmp    0x1400468aa
   14004688b:	movzx  edx,al
   14004688e:	shr    rdx,0x3
   140046892:	movzx  eax,al
   140046895:	and    eax,0x7
   140046898:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
   14004689d:	bts    ecx,eax
   1400468a0:	inc    r9
   1400468a3:	mov    BYTE PTR [rsp+rdx*1+0x20],cl
   1400468a7:	mov    al,BYTE PTR [r9]
   1400468aa:	test   al,al
   1400468ac:	jne    0x14004688b
   1400468ae:	jmp    0x1400468cf
   1400468b0:	movzx  eax,r9b
   1400468b4:	mov    edx,0x1
   1400468b9:	movzx  ecx,r9b
   1400468bd:	and    ecx,0x7
   1400468c0:	shr    rax,0x3
   1400468c4:	shl    edx,cl
   1400468c6:	test   BYTE PTR [rsp+rax*1+0x20],dl
   1400468ca:	jne    0x1400468eb
   1400468cc:	inc    r8
   1400468cf:	mov    r9b,BYTE PTR [r8]
   1400468d2:	test   r9b,r9b
   1400468d5:	jne    0x1400468b0
   1400468d7:	xor    eax,eax
   1400468d9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400468de:	xor    rcx,rsp
   1400468e1:	call   0x140025df0
   1400468e6:	add    rsp,0x58
   1400468ea:	ret    
   1400468eb:	mov    rax,r8
   1400468ee:	jmp    0x1400468d9
   1400468f0:	call   0x140026914
   1400468f5:	int3   
   1400468f6:	int3   
   1400468f7:	int3   
   1400468f8:	xor    r8d,r8d
   1400468fb:	jmp    0x140046900
   140046900:	mov    QWORD PTR [rsp+0x8],rbx
   140046905:	push   rdi
   140046906:	sub    rsp,0x40
   14004690a:	mov    rbx,rdx
   14004690d:	mov    rdi,rcx
   140046910:	test   rcx,rcx
   140046913:	jne    0x140046929
   140046915:	call   0x140032c50
   14004691a:	mov    DWORD PTR [rax],0x16
   140046920:	call   0x1400307d0
   140046925:	xor    eax,eax
   140046927:	jmp    0x14004698b
   140046929:	test   rdx,rdx
   14004692c:	je     0x140046915
   14004692e:	cmp    rcx,rdx
   140046931:	jae    0x140046925
   140046933:	mov    rdx,r8
   140046936:	lea    rcx,[rsp+0x20]
   14004693b:	call   0x14002bd94
   140046940:	mov    rcx,QWORD PTR [rsp+0x30]
   140046945:	cmp    DWORD PTR [rcx+0x8],0x0
   140046949:	jne    0x140046950
   14004694b:	dec    rbx
   14004694e:	jmp    0x140046975
   140046950:	lea    rdx,[rbx-0x1]
   140046954:	dec    rdx
   140046957:	cmp    rdi,rdx
   14004695a:	ja     0x140046966
   14004695c:	movzx  eax,BYTE PTR [rdx]
   14004695f:	test   BYTE PTR [rax+rcx*1+0x19],0x4
   140046964:	jne    0x140046954
   140046966:	mov    rcx,rbx
   140046969:	sub    rcx,rdx
   14004696c:	and    ecx,0x1
   14004696f:	sub    rbx,rcx
   140046972:	dec    rbx
   140046975:	cmp    BYTE PTR [rsp+0x38],0x0
   14004697a:	je     0x140046988
   14004697c:	mov    rcx,QWORD PTR [rsp+0x20]
   140046981:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   140046988:	mov    rax,rbx
   14004698b:	mov    rbx,QWORD PTR [rsp+0x50]
   140046990:	add    rsp,0x40
   140046994:	pop    rdi
   140046995:	ret    
   140046996:	int3   
   140046997:	int3   
   140046998:	sub    rsp,0x28
   14004699c:	call   0x14003ed74
   1400469a1:	xor    ecx,ecx
   1400469a3:	test   al,al
   1400469a5:	sete   cl
   1400469a8:	mov    eax,ecx
   1400469aa:	add    rsp,0x28
   1400469ae:	ret    
   1400469af:	int3   
   1400469b0:	sub    rsp,0x28
   1400469b4:	test   rcx,rcx
   1400469b7:	jne    0x1400469d2
   1400469b9:	call   0x140032c50
   1400469be:	mov    DWORD PTR [rax],0x16
   1400469c4:	call   0x1400307d0
   1400469c9:	or     rax,0xffffffffffffffff
   1400469cd:	add    rsp,0x28
   1400469d1:	ret    
   1400469d2:	mov    r8,rcx
   1400469d5:	xor    edx,edx
   1400469d7:	mov    rcx,QWORD PTR [rip+0x308f2]        # 0x1400772d0
   1400469de:	add    rsp,0x28
   1400469e2:	rex.W jmp QWORD PTR [rip+0x480f]        # 0x14004b1f8
   1400469e9:	int3   
   1400469ea:	int3   
   1400469eb:	int3   
   1400469ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400469f1:	push   rdi
   1400469f2:	sub    rsp,0x20
   1400469f6:	xor    edi,edi
   1400469f8:	mov    eax,ecx
   1400469fa:	mov    rbx,r8
   1400469fd:	mov    r11,rdx
   140046a00:	mov    r10,rdx
   140046a03:	mov    ecx,edi
   140046a05:	cmp    BYTE PTR [rsp+0x50],dil
   140046a0a:	je     0x140046a1b
   140046a0c:	lea    ecx,[rdi+0x2d]
   140046a0f:	neg    eax
   140046a11:	mov    WORD PTR [rdx],cx
   140046a14:	lea    r10,[rdx+0x2]
   140046a18:	lea    ecx,[rdi+0x1]
   140046a1b:	mov    r8,r10
   140046a1e:	xor    edx,edx
   140046a20:	div    r9d
   140046a23:	cmp    edx,0x9
   140046a26:	jbe    0x140046a2e
   140046a28:	add    dx,0x57
   140046a2c:	jmp    0x140046a32
   140046a2e:	add    dx,0x30
   140046a32:	mov    WORD PTR [r10],dx
   140046a36:	inc    rcx
   140046a39:	add    r10,0x2
   140046a3d:	test   eax,eax
   140046a3f:	je     0x140046a46
   140046a41:	cmp    rcx,rbx
   140046a44:	jb     0x140046a1e
   140046a46:	cmp    rcx,rbx
   140046a49:	jb     0x140046a64
   140046a4b:	mov    WORD PTR [r11],di
   140046a4f:	call   0x140032c50
   140046a54:	mov    ebx,0x22
   140046a59:	mov    DWORD PTR [rax],ebx
   140046a5b:	call   0x1400307d0
   140046a60:	mov    eax,ebx
   140046a62:	jmp    0x140046a8b
   140046a64:	mov    WORD PTR [r10],di
   140046a68:	sub    r10,0x2
   140046a6c:	movzx  eax,WORD PTR [r8]
   140046a70:	movzx  ecx,WORD PTR [r10]
   140046a74:	mov    WORD PTR [r10],ax
   140046a78:	sub    r10,0x2
   140046a7c:	mov    WORD PTR [r8],cx
   140046a80:	add    r8,0x2
   140046a84:	cmp    r8,r10
   140046a87:	jb     0x140046a6c
   140046a89:	xor    eax,eax
   140046a8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140046a90:	add    rsp,0x20
   140046a94:	pop    rdi
   140046a95:	ret    
   140046a96:	int3   
   140046a97:	int3   
   140046a98:	rex push rbx
   140046a9a:	sub    rsp,0x30
   140046a9e:	xor    eax,eax
   140046aa0:	mov    r10d,r9d
   140046aa3:	mov    r11d,ecx
   140046aa6:	test   rdx,rdx
   140046aa9:	jne    0x140046ac4
   140046aab:	call   0x140032c50
   140046ab0:	mov    ebx,0x16
   140046ab5:	mov    DWORD PTR [rax],ebx
   140046ab7:	call   0x1400307d0
   140046abc:	mov    eax,ebx
   140046abe:	add    rsp,0x30
   140046ac2:	pop    rbx
   140046ac3:	ret    
   140046ac4:	test   r8,r8
   140046ac7:	je     0x140046aab
   140046ac9:	mov    r9b,BYTE PTR [rsp+0x60]
   140046ace:	mov    WORD PTR [rdx],ax
   140046ad1:	mov    al,r9b
   140046ad4:	neg    al
   140046ad6:	sbb    rcx,rcx
   140046ad9:	neg    rcx
   140046adc:	inc    rcx
   140046adf:	cmp    r8,rcx
   140046ae2:	ja     0x140046af0
   140046ae4:	call   0x140032c50
   140046ae9:	mov    ebx,0x22
   140046aee:	jmp    0x140046ab5
   140046af0:	lea    eax,[r10-0x2]
   140046af4:	mov    ebx,0x22
   140046af9:	cmp    eax,ebx
   140046afb:	ja     0x140046aab
   140046afd:	mov    BYTE PTR [rsp+0x60],r9b
   140046b02:	mov    ecx,r11d
   140046b05:	mov    r9d,r10d
   140046b08:	add    rsp,0x30
   140046b0c:	pop    rbx
   140046b0d:	jmp    0x1400469ec
   140046b12:	int3   
   140046b13:	int3   
   140046b14:	sub    rsp,0x38
   140046b18:	xor    eax,eax
   140046b1a:	cmp    r9d,0xa
   140046b1e:	jne    0x140046b26
   140046b20:	test   ecx,ecx
   140046b22:	jns    0x140046b26
   140046b24:	mov    al,0x1
   140046b26:	mov    BYTE PTR [rsp+0x20],al
   140046b2a:	call   0x140046a98
   140046b2f:	add    rsp,0x38
   140046b33:	ret    
   140046b34:	mov    rax,rsp
   140046b37:	push   rbx
   140046b38:	sub    rsp,0x50
   140046b3c:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140046b45:	mov    ebx,ecx
   140046b47:	movsd  xmm1,QWORD PTR [rsp+0x88]
   140046b50:	mov    edx,0xffc0
   140046b55:	mov    DWORD PTR [rax-0x38],ecx
   140046b58:	mov    rcx,QWORD PTR [rsp+0x90]
   140046b60:	movsd  QWORD PTR [rax-0x20],xmm0
   140046b65:	movsd  QWORD PTR [rax-0x18],xmm1
   140046b6a:	movsd  QWORD PTR [rax-0x28],xmm3
   140046b6f:	mov    QWORD PTR [rax-0x30],r8
   140046b73:	call   0x14003b34c
   140046b78:	lea    rcx,[rsp+0x20]
   140046b7d:	call   0x14003439c
   140046b82:	test   eax,eax
   140046b84:	jne    0x140046b8d
   140046b86:	mov    ecx,ebx
   140046b88:	call   0x14003b080
   140046b8d:	movsd  xmm0,QWORD PTR [rsp+0x40]
   140046b93:	add    rsp,0x50
   140046b97:	pop    rbx
   140046b98:	ret    
   140046b99:	int3   
   140046b9a:	int3   
   140046b9b:	int3   
   140046b9c:	mov    QWORD PTR [rsp+0x8],rbx
   140046ba1:	mov    QWORD PTR [rsp+0x10],rsi
   140046ba6:	push   rdi
   140046ba7:	sub    rsp,0x20
   140046bab:	mov    ebx,ecx
   140046bad:	mov    rsi,rdx
   140046bb0:	and    ebx,0x1f
   140046bb3:	mov    edi,ecx
   140046bb5:	test   cl,0x8
   140046bb8:	je     0x140046bcd
   140046bba:	test   dl,dl
   140046bbc:	jns    0x140046bcd
   140046bbe:	mov    ecx,0x1
   140046bc3:	call   0x14003b3c8
   140046bc8:	and    ebx,0xfffffff7
   140046bcb:	jmp    0x140046c24
   140046bcd:	mov    ecx,0x4
   140046bd2:	test   cl,dil
   140046bd5:	je     0x140046be8
   140046bd7:	bt     rdx,0x9
   140046bdc:	jae    0x140046be8
   140046bde:	call   0x14003b3c8
   140046be3:	and    ebx,0xfffffffb
   140046be6:	jmp    0x140046c24
   140046be8:	test   dil,0x1
   140046bec:	je     0x140046c04
   140046bee:	bt     rdx,0xa
   140046bf3:	jae    0x140046c04
   140046bf5:	mov    ecx,0x8
   140046bfa:	call   0x14003b3c8
   140046bff:	and    ebx,0xfffffffe
   140046c02:	jmp    0x140046c24
   140046c04:	test   dil,0x2
   140046c08:	je     0x140046c24
   140046c0a:	bt     rdx,0xb
   140046c0f:	jae    0x140046c24
   140046c11:	test   dil,0x10
   140046c15:	je     0x140046c21
   140046c17:	mov    ecx,0x10
   140046c1c:	call   0x14003b3c8
   140046c21:	and    ebx,0xfffffffd
   140046c24:	test   dil,0x10
   140046c28:	je     0x140046c3e
   140046c2a:	bt     rsi,0xc
   140046c2f:	jae    0x140046c3e
   140046c31:	mov    ecx,0x20
   140046c36:	call   0x14003b3c8
   140046c3b:	and    ebx,0xffffffef
   140046c3e:	mov    rsi,QWORD PTR [rsp+0x38]
   140046c43:	xor    eax,eax
   140046c45:	test   ebx,ebx
   140046c47:	mov    rbx,QWORD PTR [rsp+0x30]
   140046c4c:	sete   al
   140046c4f:	add    rsp,0x20
   140046c53:	pop    rdi
   140046c54:	ret    
   140046c55:	int3   
   140046c56:	int3   
   140046c57:	int3   
   140046c58:	mov    rax,rsp
   140046c5b:	push   rbp
   140046c5c:	push   rbx
   140046c5d:	push   rsi
   140046c5e:	push   rdi
   140046c5f:	push   r14
   140046c61:	lea    rbp,[rax-0x37]
   140046c65:	sub    rsp,0xf0
   140046c6c:	movaps XMMWORD PTR [rax-0x38],xmm6
   140046c70:	mov    rax,QWORD PTR [rip+0x2a3d9]        # 0x140071050
   140046c77:	xor    rax,rsp
   140046c7a:	mov    QWORD PTR [rbp-0x11],rax
   140046c7e:	mov    esi,edx
   140046c80:	mov    r14,rcx
   140046c83:	mov    edx,0xffc0
   140046c88:	mov    ecx,0x1f80
   140046c8d:	mov    edi,r9d
   140046c90:	mov    rbx,r8
   140046c93:	call   0x14003b34c
   140046c98:	mov    ecx,DWORD PTR [rbp+0x5f]
   140046c9b:	mov    QWORD PTR [rsp+0x40],rax
   140046ca0:	mov    QWORD PTR [rsp+0x50],rbx
   140046ca5:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140046cab:	mov    rdx,QWORD PTR [rsp+0x40]
   140046cb0:	movsd  QWORD PTR [rsp+0x48],xmm0
   140046cb6:	call   0x140046b9c
   140046cbb:	movsd  xmm6,QWORD PTR [rbp+0x77]
   140046cc0:	test   eax,eax
   140046cc2:	jne    0x140046d04
   140046cc4:	cmp    DWORD PTR [rbp+0x7f],0x2
   140046cc8:	jne    0x140046cdb
   140046cca:	mov    eax,DWORD PTR [rbp-0x41]
   140046ccd:	and    eax,0xffffffe3
   140046cd0:	movsd  QWORD PTR [rbp-0x51],xmm6
   140046cd5:	or     eax,0x3
   140046cd8:	mov    DWORD PTR [rbp-0x41],eax
   140046cdb:	mov    r8d,DWORD PTR [rbp+0x5f]
   140046cdf:	lea    rax,[rsp+0x48]
   140046ce4:	mov    QWORD PTR [rsp+0x28],rax
   140046ce9:	lea    rdx,[rsp+0x40]
   140046cee:	lea    rax,[rbp+0x6f]
   140046cf2:	mov    r9d,esi
   140046cf5:	lea    rcx,[rsp+0x60]
   140046cfa:	mov    QWORD PTR [rsp+0x20],rax
   140046cff:	call   0x14003ad24
   140046d04:	call   0x140034374
   140046d09:	test   al,al
   140046d0b:	je     0x140046d41
   140046d0d:	test   edi,edi
   140046d0f:	je     0x140046d41
   140046d11:	mov    rax,QWORD PTR [rsp+0x40]
   140046d16:	mov    r8,r14
   140046d19:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140046d1f:	mov    ecx,edi
   140046d21:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   140046d26:	mov    edx,DWORD PTR [rbp+0x67]
   140046d29:	mov    QWORD PTR [rsp+0x30],rax
   140046d2e:	movsd  QWORD PTR [rsp+0x28],xmm0
   140046d34:	movsd  QWORD PTR [rsp+0x20],xmm6
   140046d3a:	call   0x140046b34
   140046d3f:	jmp    0x140046d5d
   140046d41:	mov    ecx,edi
   140046d43:	call   0x14003b080
   140046d48:	mov    rcx,QWORD PTR [rsp+0x40]
   140046d4d:	mov    edx,0xffc0
   140046d52:	call   0x14003b34c
   140046d57:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140046d5d:	mov    rcx,QWORD PTR [rbp-0x11]
   140046d61:	xor    rcx,rsp
   140046d64:	call   0x140025df0
   140046d69:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   140046d71:	add    rsp,0xf0
   140046d78:	pop    r14
   140046d7a:	pop    rdi
   140046d7b:	pop    rsi
   140046d7c:	pop    rbx
   140046d7d:	pop    rbp
   140046d7e:	ret    
   140046d7f:	int3   
   140046d80:	mov    rax,rsp
   140046d83:	push   rbp
   140046d84:	push   rbx
   140046d85:	push   rsi
   140046d86:	push   rdi
   140046d87:	push   r14
   140046d89:	lea    rbp,[rax-0x37]
   140046d8d:	sub    rsp,0xf0
   140046d94:	movaps XMMWORD PTR [rax-0x38],xmm6
   140046d98:	mov    rax,QWORD PTR [rip+0x2a2b1]        # 0x140071050
   140046d9f:	xor    rax,rsp
   140046da2:	mov    QWORD PTR [rbp-0x11],rax
   140046da6:	mov    esi,edx
   140046da8:	mov    r14,rcx
   140046dab:	mov    edx,0xffc0
   140046db0:	mov    ecx,0x1f80
   140046db5:	mov    edi,r9d
   140046db8:	mov    rbx,r8
   140046dbb:	call   0x14003b34c
   140046dc0:	mov    ecx,DWORD PTR [rbp+0x5f]
   140046dc3:	mov    QWORD PTR [rsp+0x48],rax
   140046dc8:	mov    DWORD PTR [rsp+0x50],ebx
   140046dcc:	movss  xmm0,DWORD PTR [rsp+0x50]
   140046dd2:	mov    rdx,QWORD PTR [rsp+0x48]
   140046dd7:	movss  DWORD PTR [rsp+0x40],xmm0
   140046ddd:	call   0x140046b9c
   140046de2:	movss  xmm6,DWORD PTR [rbp+0x77]
   140046de7:	test   eax,eax
   140046de9:	jne    0x140046e2b
   140046deb:	cmp    DWORD PTR [rbp+0x7f],0x2
   140046def:	jne    0x140046e02
   140046df1:	mov    eax,DWORD PTR [rbp-0x41]
   140046df4:	and    eax,0xffffffe1
   140046df7:	movss  DWORD PTR [rbp-0x51],xmm6
   140046dfc:	or     eax,0x1
   140046dff:	mov    DWORD PTR [rbp-0x41],eax
   140046e02:	mov    r8d,DWORD PTR [rbp+0x5f]
   140046e06:	lea    rax,[rsp+0x40]
   140046e0b:	mov    QWORD PTR [rsp+0x28],rax
   140046e10:	lea    rdx,[rsp+0x48]
   140046e15:	lea    rax,[rbp+0x6f]
   140046e19:	mov    r9d,esi
   140046e1c:	lea    rcx,[rsp+0x60]
   140046e21:	mov    QWORD PTR [rsp+0x20],rax
   140046e26:	call   0x14003b054
   140046e2b:	call   0x140034374
   140046e30:	test   al,al
   140046e32:	je     0x140046e75
   140046e34:	test   edi,edi
   140046e36:	je     0x140046e75
   140046e38:	movss  xmm0,DWORD PTR [rsp+0x40]
   140046e3e:	mov    r8,r14
   140046e41:	movss  xmm3,DWORD PTR [rbp+0x6f]
   140046e46:	mov    ecx,edi
   140046e48:	mov    rax,QWORD PTR [rsp+0x48]
   140046e4d:	mov    edx,DWORD PTR [rbp+0x67]
   140046e50:	mov    QWORD PTR [rsp+0x30],rax
   140046e55:	cvtps2pd xmm0,xmm0
   140046e58:	cvtps2pd xmm1,xmm6
   140046e5b:	movsd  QWORD PTR [rsp+0x28],xmm0
   140046e61:	cvtps2pd xmm3,xmm3
   140046e64:	movsd  QWORD PTR [rsp+0x20],xmm1
   140046e6a:	call   0x140046b34
   140046e6f:	cvtsd2ss xmm0,xmm0
   140046e73:	jmp    0x140046e91
   140046e75:	mov    ecx,edi
   140046e77:	call   0x14003b080
   140046e7c:	mov    rcx,QWORD PTR [rsp+0x48]
   140046e81:	mov    edx,0xffc0
   140046e86:	call   0x14003b34c
   140046e8b:	movss  xmm0,DWORD PTR [rsp+0x40]
   140046e91:	mov    rcx,QWORD PTR [rbp-0x11]
   140046e95:	xor    rcx,rsp
   140046e98:	call   0x140025df0
   140046e9d:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   140046ea5:	add    rsp,0xf0
   140046eac:	pop    r14
   140046eae:	pop    rdi
   140046eaf:	pop    rsi
   140046eb0:	pop    rbx
   140046eb1:	pop    rbp
   140046eb2:	ret    
   140046eb3:	int3   
   140046eb4:	movabs rax,0x8000000000000
   140046ebe:	or     rcx,rax
   140046ec1:	mov    QWORD PTR [rsp+0x8],rcx
   140046ec6:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140046ecc:	ret    
   140046ecd:	int3   
   140046ece:	int3   
   140046ecf:	int3   
   140046ed0:	bts    ecx,0x16
   140046ed4:	mov    DWORD PTR [rsp+0x8],ecx
   140046ed8:	movss  xmm0,DWORD PTR [rsp+0x8]
   140046ede:	ret    
   140046edf:	int3   
   140046ee0:	rex push rbx
   140046ee2:	sub    rsp,0x20
   140046ee6:	mov    rbx,rcx
   140046ee9:	call   0x1400454b4
   140046eee:	mov    DWORD PTR [rbx],eax
   140046ef0:	call   0x1400454cc
   140046ef5:	mov    DWORD PTR [rbx+0x4],eax
   140046ef8:	xor    eax,eax
   140046efa:	add    rsp,0x20
   140046efe:	pop    rbx
   140046eff:	ret    
   140046f00:	rex push rbx
   140046f02:	sub    rsp,0x20
   140046f06:	and    DWORD PTR [rsp+0x30],0x0
   140046f0b:	mov    rbx,rcx
   140046f0e:	mov    ecx,DWORD PTR [rcx]
   140046f10:	and    DWORD PTR [rsp+0x34],0x0
   140046f15:	call   0x1400454e0
   140046f1a:	mov    ecx,DWORD PTR [rbx+0x4]
   140046f1d:	call   0x1400454ec
   140046f22:	lea    rcx,[rsp+0x30]
   140046f27:	call   0x140046ee0
   140046f2c:	mov    eax,DWORD PTR [rsp+0x30]
   140046f30:	cmp    DWORD PTR [rbx],eax
   140046f32:	jne    0x140046f41
   140046f34:	mov    eax,DWORD PTR [rsp+0x34]
   140046f38:	cmp    DWORD PTR [rbx+0x4],eax
   140046f3b:	jne    0x140046f41
   140046f3d:	xor    eax,eax
   140046f3f:	jmp    0x140046f46
   140046f41:	mov    eax,0x1
   140046f46:	add    rsp,0x20
   140046f4a:	pop    rbx
   140046f4b:	ret    
   140046f4c:	rex push rbx
   140046f4e:	sub    rsp,0x20
   140046f52:	and    DWORD PTR [rsp+0x38],0x0
   140046f57:	mov    rbx,rcx
   140046f5a:	and    DWORD PTR [rsp+0x3c],0x0
   140046f5f:	lea    rcx,[rsp+0x38]
   140046f64:	call   0x140046ee0
   140046f69:	test   eax,eax
   140046f6b:	je     0x140046f74
   140046f6d:	mov    eax,0x1
   140046f72:	jmp    0x140046f96
   140046f74:	mov    rax,QWORD PTR [rsp+0x38]
   140046f79:	lea    rcx,[rsp+0x38]
   140046f7e:	or     DWORD PTR [rsp+0x38],0x1f
   140046f83:	mov    QWORD PTR [rbx],rax
   140046f86:	call   0x140046f00
   140046f8b:	test   eax,eax
   140046f8d:	jne    0x140046f6d
   140046f8f:	call   0x14004760c
   140046f94:	xor    eax,eax
   140046f96:	add    rsp,0x20
   140046f9a:	pop    rbx
   140046f9b:	ret    
   140046f9c:	xor    r8d,r8d
   140046f9f:	movsd  QWORD PTR [rsp+0x8],xmm0
   140046fa5:	mov    rdx,QWORD PTR [rsp+0x8]
   140046faa:	movabs rcx,0x7fffffffffffffff
   140046fb4:	mov    rax,rdx
   140046fb7:	and    rax,rcx
   140046fba:	movabs rcx,0x4340000000000000
   140046fc4:	cmp    rdx,rax
   140046fc7:	setne  r8b
   140046fcb:	cmp    rax,rcx
   140046fce:	jb     0x140046fe7
   140046fd0:	movabs rcx,0x7ff0000000000000
   140046fda:	cmp    rax,rcx
   140046fdd:	jbe    0x14004705d
   140046fdf:	mov    rcx,rdx
   140046fe2:	jmp    0x140046eb4
   140046fe7:	movabs rcx,0x3ff0000000000000
   140046ff1:	cmp    rax,rcx
   140046ff4:	jae    0x140047021
   140046ff6:	test   rax,rax
   140046ff9:	je     0x14004705d
   140046ffb:	test   r8,r8
   140046ffe:	je     0x140047017
   140047000:	movabs rax,0x8000000000000000
   14004700a:	mov    QWORD PTR [rsp+0x8],rax
   14004700f:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140047015:	jmp    0x14004705d
   140047017:	movsd  xmm0,QWORD PTR [rip+0xce59]        # 0x140053e78
   14004701f:	jmp    0x14004705d
   140047021:	mov    rax,rdx
   140047024:	mov    ecx,0x33
   140047029:	shr    rax,0x34
   14004702d:	sub    cl,al
   14004702f:	mov    eax,0x1
   140047034:	shl    rax,cl
   140047037:	dec    rax
   14004703a:	not    rax
   14004703d:	and    rax,rdx
   140047040:	mov    QWORD PTR [rsp+0x8],rax
   140047045:	movsd  xmm0,QWORD PTR [rsp+0x8]
   14004704b:	test   r8,r8
   14004704e:	jne    0x14004705d
   140047050:	cmp    rax,rdx
   140047053:	je     0x14004705d
   140047055:	addsd  xmm0,QWORD PTR [rip+0xce1b]        # 0x140053e78
   14004705d:	ret    
   14004705e:	int3   
   14004705f:	int3   
   140047060:	sub    rsp,0x58
   140047064:	movdqa XMMWORD PTR [rsp+0x20],xmm6
   14004706a:	cmp    DWORD PTR [rip+0x3028f],0x0        # 0x140077300
   140047071:	jne    0x140047360
   140047077:	movapd xmm3,xmm0
   14004707b:	movapd xmm4,xmm0
   14004707f:	psrlq  xmm3,0x34
   140047084:	movq   rax,xmm0
   140047089:	psubq  xmm3,XMMWORD PTR [rip+0x15bcf]        # 0x14005cc60
   140047091:	movapd xmm5,xmm0
   140047095:	andpd  xmm5,XMMWORD PTR [rip+0x15b93]        # 0x14005cc30
   14004709d:	comisd xmm5,QWORD PTR [rip+0x15b8b]        # 0x14005cc30
   1400470a5:	je     0x140047330
   1400470ab:	movapd xmm2,xmm0
   1400470af:	cvtdq2pd xmm6,xmm3
   1400470b3:	xorpd  xmm5,xmm5
   1400470b7:	comisd xmm0,xmm5
   1400470bb:	jbe    0x1400472f0
   1400470c1:	pand   xmm2,XMMWORD PTR [rip+0x15bb7]        # 0x14005cc80
   1400470c9:	subsd  xmm4,QWORD PTR [rip+0x15c3f]        # 0x14005cd10
   1400470d1:	comisd xmm6,QWORD PTR [rip+0x15cc7]        # 0x14005cda0
   1400470d9:	je     0x1400472b7
   1400470df:	andpd  xmm4,XMMWORD PTR [rip+0x15d19]        # 0x14005ce00
   1400470e7:	mov    r9,rax
   1400470ea:	and    rax,QWORD PTR [rip+0x15b9f]        # 0x14005cc90
   1400470f1:	and    r9,QWORD PTR [rip+0x15ba8]        # 0x14005cca0
   1400470f8:	shl    r9,1
   1400470fb:	add    rax,r9
   1400470fe:	movq   xmm1,rax
   140047103:	comisd xmm4,QWORD PTR [rip+0x15cb5]        # 0x14005cdc0
   14004710b:	jb     0x1400471f0
   140047111:	shr    rax,0x2c
   140047115:	por    xmm2,XMMWORD PTR [rip+0x15c03]        # 0x14005cd20
   14004711d:	por    xmm1,XMMWORD PTR [rip+0x15bfb]        # 0x14005cd20
   140047125:	lea    r9,[rip+0x13624]        # 0x14005a750
   14004712c:	subsd  xmm1,xmm2
   140047130:	mulsd  xmm1,QWORD PTR [r9+rax*8]
   140047136:	movapd xmm2,xmm1
   14004713a:	movapd xmm0,xmm1
   14004713e:	lea    r9,[rip+0x15d3b]        # 0x14005ce80
   140047145:	movsd  xmm3,QWORD PTR [rip+0x15c43]        # 0x14005cd90
   14004714d:	movsd  xmm1,QWORD PTR [rip+0x15c0b]        # 0x14005cd60
   140047155:	mulsd  xmm3,xmm2
   140047159:	mulsd  xmm1,xmm2
   14004715d:	mulsd  xmm0,xmm2
   140047161:	movapd xmm4,xmm0
   140047165:	addsd  xmm3,QWORD PTR [rip+0x15c13]        # 0x14005cd80
   14004716d:	addsd  xmm1,QWORD PTR [rip+0x15bdb]        # 0x14005cd50
   140047175:	mulsd  xmm4,xmm0
   140047179:	mulsd  xmm3,xmm2
   14004717d:	mulsd  xmm1,xmm0
   140047181:	addsd  xmm3,QWORD PTR [rip+0x15be7]        # 0x14005cd70
   140047189:	addsd  xmm1,xmm2
   14004718d:	mulsd  xmm3,xmm4
   140047191:	addsd  xmm1,xmm3
   140047195:	movsd  xmm5,QWORD PTR [rip+0x15b53]        # 0x14005ccf0
   14004719d:	mulsd  xmm1,QWORD PTR [rip+0x15b0b]        # 0x14005ccb0
   1400471a5:	mulsd  xmm5,xmm6
   1400471a9:	subsd  xmm5,xmm1
   1400471ad:	movsd  xmm0,QWORD PTR [r9+rax*8]
   1400471b3:	lea    rdx,[rip+0x164d6]        # 0x14005d690
   1400471ba:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   1400471bf:	movsd  xmm4,QWORD PTR [rip+0x15b19]        # 0x14005cce0
   1400471c7:	mulsd  xmm4,xmm6
   1400471cb:	addsd  xmm0,xmm4
   1400471cf:	addsd  xmm2,xmm5
   1400471d3:	addsd  xmm0,xmm2
   1400471d7:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400471dd:	add    rsp,0x58
   1400471e1:	ret    
   1400471e2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400471f0:	movsd  xmm2,QWORD PTR [rip+0x15b08]        # 0x14005cd00
   1400471f8:	subsd  xmm0,QWORD PTR [rip+0x15b10]        # 0x14005cd10
   140047200:	addsd  xmm2,xmm0
   140047204:	movapd xmm1,xmm0
   140047208:	divsd  xmm1,xmm2
   14004720c:	movsd  xmm4,QWORD PTR [rip+0x15c0c]        # 0x14005ce20
   140047214:	movsd  xmm5,QWORD PTR [rip+0x15c24]        # 0x14005ce40
   14004721c:	movapd xmm6,xmm0
   140047220:	mulsd  xmm6,xmm1
   140047224:	addsd  xmm1,xmm1
   140047228:	movapd xmm2,xmm1
   14004722c:	mulsd  xmm2,xmm1
   140047230:	mulsd  xmm4,xmm2
   140047234:	mulsd  xmm5,xmm2
   140047238:	addsd  xmm4,QWORD PTR [rip+0x15bd0]        # 0x14005ce10
   140047240:	addsd  xmm5,QWORD PTR [rip+0x15be8]        # 0x14005ce30
   140047248:	mulsd  xmm2,xmm1
   14004724c:	mulsd  xmm4,xmm2
   140047250:	mulsd  xmm2,xmm2
   140047254:	mulsd  xmm2,xmm1
   140047258:	mulsd  xmm5,xmm2
   14004725c:	movsd  xmm2,QWORD PTR [rip+0x15a6c]        # 0x14005ccd0
   140047264:	addsd  xmm4,xmm5
   140047268:	subsd  xmm4,xmm6
   14004726c:	movsd  xmm6,QWORD PTR [rip+0x15a4c]        # 0x14005ccc0
   140047274:	movapd xmm3,xmm0
   140047278:	pand   xmm3,XMMWORD PTR [rip+0x15bd0]        # 0x14005ce50
   140047280:	subsd  xmm0,xmm3
   140047284:	addsd  xmm4,xmm0
   140047288:	movapd xmm0,xmm3
   14004728c:	movapd xmm1,xmm4
   140047290:	mulsd  xmm4,xmm2
   140047294:	mulsd  xmm0,xmm2
   140047298:	mulsd  xmm1,xmm6
   14004729c:	mulsd  xmm3,xmm6
   1400472a0:	addsd  xmm0,xmm4
   1400472a4:	addsd  xmm0,xmm1
   1400472a8:	addsd  xmm0,xmm3
   1400472ac:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400472b2:	add    rsp,0x58
   1400472b6:	ret    
   1400472b7:	por    xmm2,XMMWORD PTR [rip+0x15a51]        # 0x14005cd10
   1400472bf:	subsd  xmm2,QWORD PTR [rip+0x15a49]        # 0x14005cd10
   1400472c7:	movsd  xmm5,xmm2
   1400472cb:	pand   xmm2,XMMWORD PTR [rip+0x159ad]        # 0x14005cc80
   1400472d3:	movq   rax,xmm2
   1400472d8:	psrlq  xmm5,0x34
   1400472dd:	psubd  xmm5,XMMWORD PTR [rip+0x15acb]        # 0x14005cdb0
   1400472e5:	cvtdq2pd xmm6,xmm5
   1400472e9:	jmp    0x1400470df
   1400472ee:	xchg   ax,ax
   1400472f0:	jne    0x140047310
   1400472f2:	movsd  xmm1,QWORD PTR [rip+0x15926]        # 0x14005cc20
   1400472fa:	mov    r8d,DWORD PTR [rip+0x15b5f]        # 0x14005ce60
   140047301:	call   0x140047b30
   140047306:	jmp    0x140047350
   140047308:	nop    DWORD PTR [rax+rax*1+0x0]
   140047310:	movsd  xmm1,QWORD PTR [rip+0x15928]        # 0x14005cc40
   140047318:	mov    r8d,DWORD PTR [rip+0x15b45]        # 0x14005ce64
   14004731f:	call   0x140047b30
   140047324:	jmp    0x140047350
   140047326:	data16 nop WORD PTR [rax+rax*1+0x0]
   140047330:	cmp    rax,QWORD PTR [rip+0x158f9]        # 0x14005cc30
   140047337:	je     0x140047350
   140047339:	cmp    rax,QWORD PTR [rip+0x158e0]        # 0x14005cc20
   140047340:	je     0x140047310
   140047342:	or     rax,QWORD PTR [rip+0x15907]        # 0x14005cc50
   140047349:	movq   xmm0,rax
   14004734e:	xchg   ax,ax
   140047350:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   140047356:	add    rsp,0x58
   14004735a:	ret    
   14004735b:	nop    DWORD PTR [rax+rax*1+0x0]
   140047360:	xor    rax,rax
   140047363:	vpsrlq xmm3,xmm0,0x34
   140047368:	vmovq  rax,xmm0
   14004736d:	vpsubq xmm3,xmm3,XMMWORD PTR [rip+0x158eb]        # 0x14005cc60
   140047375:	vcvtdq2pd xmm6,xmm3
   140047379:	vpand  xmm5,xmm0,XMMWORD PTR [rip+0x158af]        # 0x14005cc30
   140047381:	vcomisd xmm5,QWORD PTR [rip+0x158a7]        # 0x14005cc30
   140047389:	je     0x1400475d0
   14004738f:	vpxor  xmm5,xmm5,xmm5
   140047393:	vcomisd xmm0,xmm5
   140047397:	jbe    0x140047580
   14004739d:	vpand  xmm2,xmm0,XMMWORD PTR [rip+0x158db]        # 0x14005cc80
   1400473a5:	vsubsd xmm4,xmm0,QWORD PTR [rip+0x15963]        # 0x14005cd10
   1400473ad:	vcomisd xmm6,QWORD PTR [rip+0x159eb]        # 0x14005cda0
   1400473b5:	je     0x140047549
   1400473bb:	vpand  xmm1,xmm0,XMMWORD PTR [rip+0x158cd]        # 0x14005cc90
   1400473c3:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0x158d5]        # 0x14005cca0
   1400473cb:	vpsllq xmm3,xmm3,0x1
   1400473d0:	vpaddq xmm1,xmm3,xmm1
   1400473d4:	vmovq  rax,xmm1
   1400473d9:	vpand  xmm4,xmm4,XMMWORD PTR [rip+0x15a1f]        # 0x14005ce00
   1400473e1:	vcomisd xmm4,QWORD PTR [rip+0x159d7]        # 0x14005cdc0
   1400473e9:	jb     0x1400474a0
   1400473ef:	shr    rax,0x2c
   1400473f3:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0x15925]        # 0x14005cd20
   1400473fb:	vpor   xmm1,xmm1,XMMWORD PTR [rip+0x1591d]        # 0x14005cd20
   140047403:	lea    r9,[rip+0x13346]        # 0x14005a750
   14004740a:	vsubsd xmm1,xmm1,xmm2
   14004740e:	vmulsd xmm1,xmm1,QWORD PTR [r9+rax*8]
   140047414:	lea    r9,[rip+0x15a65]        # 0x14005ce80
   14004741b:	vmulsd xmm0,xmm1,xmm1
   14004741f:	vmovsd xmm3,QWORD PTR [rip+0x15969]        # 0x14005cd90
   140047427:	vmovsd xmm5,QWORD PTR [rip+0x15931]        # 0x14005cd60
   14004742f:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0x15948]        # 0x14005cd80
   140047438:	vfmadd213sd xmm5,xmm1,QWORD PTR [rip+0x158df]        # 0x14005cd20
   140047441:	movsd  xmm4,xmm0
   140047445:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0x15922]        # 0x14005cd70
   14004744e:	vmulsd xmm4,xmm0,xmm0
   140047452:	vfmadd231sd xmm1,xmm5,xmm0
   140047457:	vfmadd231sd xmm1,xmm3,xmm4
   14004745c:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x1584c]        # 0x14005ccb0
   140047464:	vmovsd xmm5,QWORD PTR [rip+0x15884]        # 0x14005ccf0
   14004746c:	vfmsub213sd xmm5,xmm6,xmm1
   140047471:	movsd  xmm0,QWORD PTR [r9+rax*8]
   140047477:	lea    rdx,[rip+0x16212]        # 0x14005d690
   14004747e:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   140047483:	vaddsd xmm2,xmm2,xmm5
   140047487:	vfmadd231sd xmm0,xmm6,QWORD PTR [rip+0x15850]        # 0x14005cce0
   140047490:	vaddsd xmm0,xmm0,xmm2
   140047494:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14004749a:	add    rsp,0x58
   14004749e:	ret    
   14004749f:	nop
   1400474a0:	vmovsd xmm2,QWORD PTR [rip+0x15858]        # 0x14005cd00
   1400474a8:	vsubsd xmm0,xmm0,QWORD PTR [rip+0x15860]        # 0x14005cd10
   1400474b0:	vaddsd xmm2,xmm2,xmm0
   1400474b4:	vdivsd xmm1,xmm0,xmm2
   1400474b8:	vmovsd xmm4,QWORD PTR [rip+0x15960]        # 0x14005ce20
   1400474c0:	vmovsd xmm5,QWORD PTR [rip+0x15978]        # 0x14005ce40
   1400474c8:	vmulsd xmm6,xmm0,xmm1
   1400474cc:	vaddsd xmm1,xmm1,xmm1
   1400474d0:	vmulsd xmm2,xmm1,xmm1
   1400474d4:	vfmadd213sd xmm4,xmm2,QWORD PTR [rip+0x15933]        # 0x14005ce10
   1400474dd:	vfmadd213sd xmm5,xmm2,QWORD PTR [rip+0x1594a]        # 0x14005ce30
   1400474e6:	vmulsd xmm2,xmm2,xmm1
   1400474ea:	vmulsd xmm4,xmm4,xmm2
   1400474ee:	vmulsd xmm2,xmm2,xmm2
   1400474f2:	vmulsd xmm2,xmm2,xmm1
   1400474f6:	vmulsd xmm5,xmm5,xmm2
   1400474fa:	vaddsd xmm4,xmm4,xmm5
   1400474fe:	vsubsd xmm4,xmm4,xmm6
   140047502:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0x15946]        # 0x14005ce50
   14004750a:	vsubsd xmm0,xmm0,xmm3
   14004750e:	vaddsd xmm4,xmm4,xmm0
   140047512:	vmulsd xmm1,xmm4,QWORD PTR [rip+0x157a6]        # 0x14005ccc0
   14004751a:	vmulsd xmm4,xmm4,QWORD PTR [rip+0x157ae]        # 0x14005ccd0
   140047522:	vmulsd xmm0,xmm3,QWORD PTR [rip+0x157a6]        # 0x14005ccd0
   14004752a:	vmulsd xmm3,xmm3,QWORD PTR [rip+0x1578e]        # 0x14005ccc0
   140047532:	vaddsd xmm0,xmm0,xmm4
   140047536:	vaddsd xmm0,xmm0,xmm1
   14004753a:	vaddsd xmm0,xmm0,xmm3
   14004753e:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140047544:	add    rsp,0x58
   140047548:	ret    
   140047549:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0x157bf]        # 0x14005cd10
   140047551:	vsubsd xmm2,xmm2,QWORD PTR [rip+0x157b7]        # 0x14005cd10
   140047559:	vpsrlq xmm5,xmm2,0x34
   14004755e:	vpand  xmm2,xmm2,XMMWORD PTR [rip+0x1571a]        # 0x14005cc80
   140047566:	vmovapd xmm0,xmm2
   14004756a:	vpsubd xmm5,xmm5,XMMWORD PTR [rip+0x1583e]        # 0x14005cdb0
   140047572:	vcvtdq2pd xmm6,xmm5
   140047576:	jmp    0x1400473bb
   14004757b:	nop    DWORD PTR [rax+rax*1+0x0]
   140047580:	jne    0x1400475b0
   140047582:	vmovsd xmm1,QWORD PTR [rip+0x15696]        # 0x14005cc20
   14004758a:	mov    r8d,DWORD PTR [rip+0x158cf]        # 0x14005ce60
   140047591:	call   0x140047b30
   140047596:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14004759c:	add    rsp,0x58
   1400475a0:	ret    
   1400475a1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400475b0:	vmovsd xmm1,QWORD PTR [rip+0x15688]        # 0x14005cc40
   1400475b8:	mov    r8d,DWORD PTR [rip+0x158a5]        # 0x14005ce64
   1400475bf:	call   0x140047b30
   1400475c4:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   1400475ca:	add    rsp,0x58
   1400475ce:	ret    
   1400475cf:	nop
   1400475d0:	cmp    rax,QWORD PTR [rip+0x15659]        # 0x14005cc30
   1400475d7:	je     0x140047600
   1400475d9:	cmp    rax,QWORD PTR [rip+0x15640]        # 0x14005cc20
   1400475e0:	je     0x1400475b0
   1400475e2:	or     rax,QWORD PTR [rip+0x15667]        # 0x14005cc50
   1400475e9:	movq   xmm1,rax
   1400475ee:	mov    r8d,DWORD PTR [rip+0x15873]        # 0x14005ce68
   1400475f5:	call   0x140047b30
   1400475fa:	jmp    0x140047600
   1400475fc:	nop    DWORD PTR [rax+0x0]
   140047600:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   140047606:	add    rsp,0x58
   14004760a:	ret    
   14004760b:	int3   
   14004760c:	rex push rbx
   14004760e:	sub    rsp,0x20
   140047612:	call   0x140045340
   140047617:	mov    ebx,eax
   140047619:	call   0x14004535a
   14004761e:	xor    eax,eax
   140047620:	test   bl,0x3f
   140047623:	je     0x140047658
   140047625:	mov    cl,bl
   140047627:	lea    edx,[rax+0x10]
   14004762a:	and    cl,0x1
   14004762d:	cmovne eax,edx
   140047630:	test   bl,0x4
   140047633:	je     0x140047638
   140047635:	or     eax,0x8
   140047638:	test   bl,0x8
   14004763b:	je     0x140047640
   14004763d:	or     eax,0x4
   140047640:	test   dl,bl
   140047642:	je     0x140047647
   140047644:	or     eax,0x2
   140047647:	test   bl,0x20
   14004764a:	je     0x14004764f
   14004764c:	or     eax,0x1
   14004764f:	test   bl,0x2
   140047652:	je     0x140047658
   140047654:	bts    eax,0x13
   140047658:	add    rsp,0x20
   14004765c:	pop    rbx
   14004765d:	ret    
   14004765e:	int3   
   14004765f:	int3   
   140047660:	btr    edx,0x13
   140047664:	jmp    0x1400476b4
   140047669:	int3   
   14004766a:	int3   
   14004766b:	int3   
   14004766c:	stmxcsr DWORD PTR [rsp+0x8]
   140047671:	mov    edx,DWORD PTR [rsp+0x8]
   140047675:	xor    ecx,ecx
   140047677:	test   dl,0x3f
   14004767a:	je     0x1400476b1
   14004767c:	mov    al,dl
   14004767e:	lea    r8d,[rcx+0x10]
   140047682:	and    al,0x1
   140047684:	cmovne ecx,r8d
   140047688:	test   dl,0x4
   14004768b:	je     0x140047690
   14004768d:	or     ecx,0x8
   140047690:	test   dl,0x8
   140047693:	je     0x140047698
   140047695:	or     ecx,0x4
   140047698:	test   r8b,dl
   14004769b:	je     0x1400476a0
   14004769d:	or     ecx,0x2
   1400476a0:	test   dl,0x20
   1400476a3:	je     0x1400476a8
   1400476a5:	or     ecx,0x1
   1400476a8:	test   dl,0x2
   1400476ab:	je     0x1400476b1
   1400476ad:	bts    ecx,0x13
   1400476b1:	mov    eax,ecx
   1400476b3:	ret    
   1400476b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400476b9:	mov    QWORD PTR [rsp+0x18],rsi
   1400476be:	mov    QWORD PTR [rsp+0x20],rdi
   1400476c3:	push   r12
   1400476c5:	push   r14
   1400476c7:	push   r15
   1400476c9:	sub    rsp,0x20
   1400476cd:	mov    ebx,edx
   1400476cf:	mov    esi,ecx
   1400476d1:	and    ebx,0x308031f
   1400476d7:	call   0x140045340
   1400476dc:	mov    r9d,eax
   1400476df:	xor    edi,edi
   1400476e1:	mov    r8b,al
   1400476e4:	mov    r11d,0x80
   1400476ea:	mov    eax,edi
   1400476ec:	lea    ecx,[rdi+0x10]
   1400476ef:	and    r8b,r11b
   1400476f2:	cmovne eax,ecx
   1400476f5:	mov    r12d,0x200
   1400476fb:	test   r12d,r9d
   1400476fe:	je     0x140047703
   140047700:	or     eax,0x8
   140047703:	bt     r9d,0xa
   140047708:	jae    0x14004770d
   14004770a:	or     eax,0x4
   14004770d:	mov    r8d,0x800
   140047713:	test   r8d,r9d
   140047716:	je     0x14004771b
   140047718:	or     eax,0x2
   14004771b:	mov    r10d,0x1000
   140047721:	test   r10d,r9d
   140047724:	je     0x140047729
   140047726:	or     eax,0x1
   140047729:	mov    r14d,0x100
   14004772f:	test   r14d,r9d
   140047732:	je     0x140047738
   140047734:	bts    eax,0x13
   140047738:	mov    ecx,r9d
   14004773b:	mov    r15d,0x6000
   140047741:	and    ecx,r15d
   140047744:	je     0x14004776a
   140047746:	cmp    ecx,0x2000
   14004774c:	je     0x140047767
   14004774e:	cmp    ecx,0x4000
   140047754:	je     0x140047762
   140047756:	cmp    ecx,r15d
   140047759:	jne    0x14004776a
   14004775b:	or     eax,0x300
   140047760:	jmp    0x14004776a
   140047762:	or     eax,r12d
   140047765:	jmp    0x14004776a
   140047767:	or     eax,r14d
   14004776a:	mov    edx,0x8040
   14004776f:	and    r9d,edx
   140047772:	sub    r9d,0x40
   140047776:	je     0x140047794
   140047778:	sub    r9d,0x7fc0
   14004777f:	je     0x14004778d
   140047781:	cmp    r9d,0x40
   140047785:	jne    0x140047798
   140047787:	bts    eax,0x18
   14004778b:	jmp    0x140047798
   14004778d:	or     eax,0x3000000
   140047792:	jmp    0x140047798
   140047794:	bts    eax,0x19
   140047798:	mov    ecx,ebx
   14004779a:	not    ecx
   14004779c:	and    ecx,eax
   14004779e:	and    esi,ebx
   1400477a0:	or     ecx,esi
   1400477a2:	cmp    ecx,eax
   1400477a4:	je     0x140047930
   1400477aa:	mov    al,cl
   1400477ac:	mov    esi,0x10
   1400477b1:	mov    ebx,edi
   1400477b3:	and    al,sil
   1400477b6:	cmovne ebx,r11d
   1400477ba:	mov    DWORD PTR [rsp+0x40],ebx
   1400477be:	test   cl,0x8
   1400477c1:	je     0x1400477ca
   1400477c3:	or     ebx,r12d
   1400477c6:	mov    DWORD PTR [rsp+0x40],ebx
   1400477ca:	test   cl,0x4
   1400477cd:	je     0x1400477d7
   1400477cf:	bts    ebx,0xa
   1400477d3:	mov    DWORD PTR [rsp+0x40],ebx
   1400477d7:	test   cl,0x2
   1400477da:	je     0x1400477e3
   1400477dc:	or     ebx,r8d
   1400477df:	mov    DWORD PTR [rsp+0x40],ebx
   1400477e3:	test   cl,0x1
   1400477e6:	je     0x1400477ef
   1400477e8:	or     ebx,r10d
   1400477eb:	mov    DWORD PTR [rsp+0x40],ebx
   1400477ef:	bt     ecx,0x13
   1400477f3:	jae    0x1400477fc
   1400477f5:	or     ebx,r14d
   1400477f8:	mov    DWORD PTR [rsp+0x40],ebx
   1400477fc:	mov    eax,ecx
   1400477fe:	and    eax,0x300
   140047803:	je     0x140047829
   140047805:	cmp    eax,r14d
   140047808:	je     0x140047821
   14004780a:	cmp    eax,r12d
   14004780d:	je     0x14004781b
   14004780f:	cmp    eax,0x300
   140047814:	jne    0x140047829
   140047816:	or     ebx,r15d
   140047819:	jmp    0x140047825
   14004781b:	bts    ebx,0xe
   14004781f:	jmp    0x140047825
   140047821:	bts    ebx,0xd
   140047825:	mov    DWORD PTR [rsp+0x40],ebx
   140047829:	and    ecx,0x3000000
   14004782f:	cmp    ecx,0x1000000
   140047835:	je     0x140047852
   140047837:	cmp    ecx,0x2000000
   14004783d:	je     0x14004784d
   14004783f:	cmp    ecx,0x3000000
   140047845:	jne    0x140047858
   140047847:	bts    ebx,0xf
   14004784b:	jmp    0x140047854
   14004784d:	or     ebx,0x40
   140047850:	jmp    0x140047854
   140047852:	or     ebx,edx
   140047854:	mov    DWORD PTR [rsp+0x40],ebx
   140047858:	cmp    BYTE PTR [rip+0x2a341],dil        # 0x140071ba0
   14004785f:	je     0x14004789d
   140047861:	test   bl,0x40
   140047864:	je     0x14004789d
   140047866:	mov    ecx,ebx
   140047868:	call   0x140045350
   14004786d:	jmp    0x14004789b
   14004786f:	mov    BYTE PTR [rip+0x2a32a],0x0        # 0x140071ba0
   140047876:	mov    ebx,DWORD PTR [rsp+0x40]
   14004787a:	and    ebx,0xffffffbf
   14004787d:	mov    ecx,ebx
   14004787f:	call   0x140045350
   140047884:	xor    edi,edi
   140047886:	lea    esi,[rdi+0x10]
   140047889:	mov    r12d,0x200
   14004788f:	mov    r14d,0x100
   140047895:	mov    r15d,0x6000
   14004789b:	jmp    0x1400478a7
   14004789d:	and    ebx,0xffffffbf
   1400478a0:	mov    ecx,ebx
   1400478a2:	call   0x140045350
   1400478a7:	mov    al,bl
   1400478a9:	and    al,0x80
   1400478ab:	cmovne edi,esi
   1400478ae:	test   r12d,ebx
   1400478b1:	je     0x1400478b6
   1400478b3:	or     edi,0x8
   1400478b6:	bt     ebx,0xa
   1400478ba:	jae    0x1400478bf
   1400478bc:	or     edi,0x4
   1400478bf:	bt     ebx,0xb
   1400478c3:	jae    0x1400478c8
   1400478c5:	or     edi,0x2
   1400478c8:	bt     ebx,0xc
   1400478cc:	jae    0x1400478d1
   1400478ce:	or     edi,0x1
   1400478d1:	test   r14d,ebx
   1400478d4:	je     0x1400478da
   1400478d6:	bts    edi,0x13
   1400478da:	mov    eax,ebx
   1400478dc:	and    eax,r15d
   1400478df:	je     0x140047904
   1400478e1:	cmp    eax,0x2000
   1400478e6:	je     0x140047901
   1400478e8:	cmp    eax,0x4000
   1400478ed:	je     0x1400478fc
   1400478ef:	cmp    eax,r15d
   1400478f2:	jne    0x140047904
   1400478f4:	or     edi,0x300
   1400478fa:	jmp    0x140047904
   1400478fc:	or     edi,r12d
   1400478ff:	jmp    0x140047904
   140047901:	or     edi,r14d
   140047904:	and    ebx,0x8040
   14004790a:	sub    ebx,0x40
   14004790d:	je     0x14004792a
   14004790f:	sub    ebx,0x7fc0
   140047915:	je     0x140047922
   140047917:	cmp    ebx,0x40
   14004791a:	jne    0x14004792e
   14004791c:	bts    edi,0x18
   140047920:	jmp    0x14004792e
   140047922:	or     edi,0x3000000
   140047928:	jmp    0x14004792e
   14004792a:	bts    edi,0x19
   14004792e:	mov    eax,edi
   140047930:	mov    rbx,QWORD PTR [rsp+0x48]
   140047935:	mov    rsi,QWORD PTR [rsp+0x50]
   14004793a:	mov    rdi,QWORD PTR [rsp+0x58]
   14004793f:	add    rsp,0x20
   140047943:	pop    r15
   140047945:	pop    r14
   140047947:	pop    r12
   140047949:	ret    
   14004794a:	int3   
   14004794b:	int3   
   14004794c:	mov    QWORD PTR [rsp+0x8],rbx
   140047951:	mov    QWORD PTR [rsp+0x10],rbp
   140047956:	mov    QWORD PTR [rsp+0x18],rsi
   14004795b:	push   rdi
   14004795c:	push   r14
   14004795e:	push   r15
   140047960:	sub    rsp,0x20
   140047964:	mov    rbx,rdx
   140047967:	mov    ebp,0x1
   14004796c:	mov    r8d,ebp
   14004796f:	xor    edx,edx
   140047971:	mov    esi,ecx
   140047973:	call   0x140046138
   140047978:	mov    r14,rax
   14004797b:	cmp    rax,0xffffffffffffffff
   14004797f:	jne    0x14004798d
   140047981:	call   0x140032c50
   140047986:	mov    eax,DWORD PTR [rax]
   140047988:	jmp    0x140047a33
   14004798d:	xor    edx,edx
   14004798f:	mov    ecx,esi
   140047991:	lea    r8d,[rdx+0x2]
   140047995:	call   0x140046138
   14004799a:	cmp    rax,0xffffffffffffffff
   14004799e:	je     0x140047981
   1400479a0:	mov    rdi,rbx
   1400479a3:	sub    rdi,rax
   1400479a6:	test   rdi,rdi
   1400479a9:	jle    0x140047a74
   1400479af:	mov    r15d,0x1000
   1400479b5:	mov    rdx,rbp
   1400479b8:	mov    ecx,r15d
   1400479bb:	call   0x140035d88
   1400479c0:	mov    rbx,rax
   1400479c3:	test   rax,rax
   1400479c6:	jne    0x1400479d8
   1400479c8:	call   0x140032c50
   1400479cd:	mov    DWORD PTR [rax],0xc
   1400479d3:	jmp    0x140047a61
   1400479d8:	mov    edx,0x8000
   1400479dd:	mov    ecx,esi
   1400479df:	call   0x1400345b0
   1400479e4:	mov    ebp,eax
   1400479e6:	mov    r8d,edi
   1400479e9:	cmp    rdi,r15
   1400479ec:	mov    rdx,rbx
   1400479ef:	mov    ecx,esi
   1400479f1:	cmovge r8d,r15d
   1400479f5:	call   0x14003c914
   1400479fa:	cmp    eax,0xffffffff
   1400479fd:	je     0x140047a4c
   1400479ff:	cdqe   
   140047a01:	sub    rdi,rax
   140047a04:	test   rdi,rdi
   140047a07:	jg     0x1400479e6
   140047a09:	mov    edx,ebp
   140047a0b:	mov    ecx,esi
   140047a0d:	call   0x1400345b0
   140047a12:	mov    rcx,rbx
   140047a15:	call   0x140038c70
   140047a1a:	xor    r8d,r8d
   140047a1d:	mov    rdx,r14
   140047a20:	mov    ecx,esi
   140047a22:	call   0x140046138
   140047a27:	cmp    rax,0xffffffffffffffff
   140047a2b:	je     0x140047981
   140047a31:	xor    eax,eax
   140047a33:	mov    rbx,QWORD PTR [rsp+0x40]
   140047a38:	mov    rbp,QWORD PTR [rsp+0x48]
   140047a3d:	mov    rsi,QWORD PTR [rsp+0x50]
   140047a42:	add    rsp,0x20
   140047a46:	pop    r15
   140047a48:	pop    r14
   140047a4a:	pop    rdi
   140047a4b:	ret    
   140047a4c:	call   0x140032c30
   140047a51:	cmp    DWORD PTR [rax],0x5
   140047a54:	jne    0x140047a61
   140047a56:	call   0x140032c50
   140047a5b:	mov    DWORD PTR [rax],0xd
   140047a61:	call   0x140032c50
   140047a66:	mov    rcx,rbx
   140047a69:	mov    edi,DWORD PTR [rax]
   140047a6b:	call   0x140038c70
   140047a70:	mov    eax,edi
   140047a72:	jmp    0x140047a33
   140047a74:	jns    0x140047a1a
   140047a76:	xor    r8d,r8d
   140047a79:	mov    rdx,rbx
   140047a7c:	mov    ecx,esi
   140047a7e:	call   0x140046138
   140047a83:	cmp    rax,0xffffffffffffffff
   140047a87:	je     0x140047981
   140047a8d:	mov    ecx,esi
   140047a8f:	call   0x14004018c
   140047a94:	mov    rcx,rax
   140047a97:	call   QWORD PTR [rip+0x36e3]        # 0x14004b180
   140047a9d:	test   eax,eax
   140047a9f:	jne    0x140047a1a
   140047aa5:	call   0x140032c50
   140047aaa:	mov    DWORD PTR [rax],0xd
   140047ab0:	call   0x140032c30
   140047ab5:	mov    rbx,rax
   140047ab8:	call   QWORD PTR [rip+0x3622]        # 0x14004b0e0
   140047abe:	mov    DWORD PTR [rbx],eax
   140047ac0:	jmp    0x140047981
   140047ac5:	int3   
   140047ac6:	int3   
   140047ac7:	int3   
   140047ac8:	sub    rsp,0x48
   140047acc:	and    QWORD PTR [rsp+0x30],0x0
   140047ad2:	lea    rcx,[rip+0x15397]        # 0x14005ce70
   140047ad9:	and    DWORD PTR [rsp+0x28],0x0
   140047ade:	mov    r8d,0x3
   140047ae4:	xor    r9d,r9d
   140047ae7:	mov    DWORD PTR [rsp+0x20],r8d
   140047aec:	mov    edx,0x40000000
   140047af1:	call   QWORD PTR [rip+0x3609]        # 0x14004b100
   140047af7:	mov    QWORD PTR [rip+0x2a0aa],rax        # 0x140071ba8
   140047afe:	add    rsp,0x48
   140047b02:	ret    
   140047b03:	int3   
   140047b04:	sub    rsp,0x28
   140047b08:	mov    rcx,QWORD PTR [rip+0x2a099]        # 0x140071ba8
   140047b0f:	lea    rax,[rcx+0x2]
   140047b13:	cmp    rax,0x1
   140047b17:	jbe    0x140047b1f
   140047b19:	call   QWORD PTR [rip+0x35b1]        # 0x14004b0d0
   140047b1f:	add    rsp,0x28
   140047b23:	ret    
   140047b24:	int3   
   140047b25:	int3   
   140047b26:	int3   
   140047b27:	int3   
   140047b28:	int3   
   140047b29:	int3   
   140047b2a:	int3   
   140047b2b:	int3   
   140047b2c:	int3   
   140047b2d:	int3   
   140047b2e:	int3   
   140047b2f:	int3   
   140047b30:	sub    rsp,0x38
   140047b34:	lea    rax,[rip+0xfec1]        # 0x1400579fc
   140047b3b:	mov    r9d,0x1b
   140047b41:	mov    QWORD PTR [rsp+0x20],rax
   140047b46:	call   0x140047b50
   140047b4b:	add    rsp,0x38
   140047b4f:	ret    
   140047b50:	mov    rax,rsp
   140047b53:	sub    rsp,0x68
   140047b57:	movaps XMMWORD PTR [rax-0x18],xmm6
   140047b5b:	movaps xmm6,xmm1
   140047b5e:	mov    edx,r9d
   140047b61:	movaps xmm3,xmm0
   140047b64:	sub    r8d,0x1
   140047b68:	je     0x140047b94
   140047b6a:	cmp    r8d,0x1
   140047b6e:	jne    0x140047bd9
   140047b70:	mov    DWORD PTR [rax-0x28],r8d
   140047b74:	xorps  xmm2,xmm2
   140047b77:	movsd  QWORD PTR [rax-0x30],xmm2
   140047b7c:	mov    r9d,r8d
   140047b7f:	movsd  QWORD PTR [rax-0x38],xmm0
   140047b84:	mov    DWORD PTR [rax-0x40],0x21
   140047b8b:	mov    DWORD PTR [rax-0x48],0x8
   140047b92:	jmp    0x140047bc1
   140047b94:	mov    DWORD PTR [rsp+0x40],0x1
   140047b9c:	xorps  xmm0,xmm0
   140047b9f:	movsd  QWORD PTR [rsp+0x38],xmm0
   140047ba5:	mov    r9d,0x2
   140047bab:	movsd  QWORD PTR [rsp+0x30],xmm3
   140047bb1:	mov    DWORD PTR [rsp+0x28],0x22
   140047bb9:	mov    DWORD PTR [rsp+0x20],0x4
   140047bc1:	mov    rcx,QWORD PTR [rsp+0x90]
   140047bc9:	movsd  QWORD PTR [rsp+0x78],xmm1
   140047bcf:	mov    r8,QWORD PTR [rsp+0x78]
   140047bd4:	call   0x140046c58
   140047bd9:	movaps xmm0,xmm6
   140047bdc:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140047be1:	add    rsp,0x68
   140047be5:	ret    
   140047be6:	jmp    QWORD PTR [rip+0x3634]        # 0x14004b220
   140047bec:	jmp    QWORD PTR [rip+0x36d6]        # 0x14004b2c8
   140047bf2:	int3   
   140047bf3:	int3   
   140047bf4:	int3   
   140047bf5:	int3   
   140047bf6:	int3   
   140047bf7:	int3   
   140047bf8:	int3   
   140047bf9:	int3   
   140047bfa:	int3   
   140047bfb:	int3   
   140047bfc:	int3   
   140047bfd:	int3   
   140047bfe:	int3   
   140047bff:	int3   
   140047c00:	movsxd r8,DWORD PTR [rcx+0x3c]
   140047c04:	xor    r9d,r9d
   140047c07:	add    r8,rcx
   140047c0a:	mov    r10,rdx
   140047c0d:	movzx  eax,WORD PTR [r8+0x14]
   140047c12:	movzx  r11d,WORD PTR [r8+0x6]
   140047c17:	add    rax,0x18
   140047c1b:	add    rax,r8
   140047c1e:	test   r11d,r11d
   140047c21:	je     0x140047c41
   140047c23:	mov    edx,DWORD PTR [rax+0xc]
   140047c26:	cmp    r10,rdx
   140047c29:	jb     0x140047c35
   140047c2b:	mov    ecx,DWORD PTR [rax+0x8]
   140047c2e:	add    ecx,edx
   140047c30:	cmp    r10,rcx
   140047c33:	jb     0x140047c43
   140047c35:	inc    r9d
   140047c38:	add    rax,0x28
   140047c3c:	cmp    r9d,r11d
   140047c3f:	jb     0x140047c23
   140047c41:	xor    eax,eax
   140047c43:	ret    
   140047c44:	int3   
   140047c45:	int3   
   140047c46:	int3   
   140047c47:	int3   
   140047c48:	int3   
   140047c49:	int3   
   140047c4a:	int3   
   140047c4b:	int3   
   140047c4c:	int3   
   140047c4d:	int3   
   140047c4e:	int3   
   140047c4f:	int3   
   140047c50:	mov    QWORD PTR [rsp+0x8],rbx
   140047c55:	push   rdi
   140047c56:	sub    rsp,0x20
   140047c5a:	mov    rbx,rcx
   140047c5d:	lea    rdi,[rip+0xfffffffffffb839c]        # 0x140000000
   140047c64:	mov    rcx,rdi
   140047c67:	call   0x140047ca0
   140047c6c:	test   eax,eax
   140047c6e:	je     0x140047c92
   140047c70:	sub    rbx,rdi
   140047c73:	mov    rdx,rbx
   140047c76:	mov    rcx,rdi
   140047c79:	call   0x140047c00
   140047c7e:	test   rax,rax
   140047c81:	je     0x140047c92
   140047c83:	mov    eax,DWORD PTR [rax+0x24]
   140047c86:	shr    eax,0x1f
   140047c89:	not    eax
   140047c8b:	and    eax,0x1
   140047c8e:	jmp    0x140047c92
   140047c90:	xor    eax,eax
   140047c92:	mov    rbx,QWORD PTR [rsp+0x30]
   140047c97:	add    rsp,0x20
   140047c9b:	pop    rdi
   140047c9c:	ret    
   140047c9d:	int3   
   140047c9e:	int3   
   140047c9f:	int3   
   140047ca0:	mov    rax,rcx
   140047ca3:	mov    ecx,0x5a4d
   140047ca8:	cmp    WORD PTR [rax],cx
   140047cab:	je     0x140047cb0
   140047cad:	xor    eax,eax
   140047caf:	ret    
   140047cb0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140047cb4:	add    rcx,rax
   140047cb7:	xor    eax,eax
   140047cb9:	cmp    DWORD PTR [rcx],0x4550
   140047cbf:	jne    0x140047ccd
   140047cc1:	mov    edx,0x20b
   140047cc6:	cmp    WORD PTR [rcx+0x18],dx
   140047cca:	sete   al
   140047ccd:	ret    
   140047cce:	int3   
   140047ccf:	int3   
   140047cd0:	sub    rsp,0x18
   140047cd4:	xor    r8d,r8d
   140047cd7:	mov    r9,rcx
   140047cda:	test   edx,edx
   140047cdc:	jne    0x140047d26
   140047cde:	and    r9d,0xf
   140047ce2:	mov    rdx,rcx
   140047ce5:	and    rdx,0xfffffffffffffff0
   140047ce9:	mov    ecx,r9d
   140047cec:	or     r9d,0xffffffff
   140047cf0:	xorps  xmm1,xmm1
   140047cf3:	shl    r9d,cl
   140047cf6:	movdqa xmm0,XMMWORD PTR [rdx]
   140047cfa:	pcmpeqb xmm0,xmm1
   140047cfe:	pmovmskb eax,xmm0
   140047d02:	and    eax,r9d
   140047d05:	jne    0x140047d1b
   140047d07:	add    rdx,0x10
   140047d0b:	movdqa xmm0,XMMWORD PTR [rdx]
   140047d0f:	pcmpeqb xmm0,xmm1
   140047d13:	pmovmskb eax,xmm0
   140047d17:	test   eax,eax
   140047d19:	je     0x140047d07
   140047d1b:	bsf    eax,eax
   140047d1e:	add    rax,rdx
   140047d21:	jmp    0x140047dcc
   140047d26:	cmp    DWORD PTR [rip+0x29333],0x2        # 0x140071060
   140047d2d:	jge    0x140047de4
   140047d33:	movzx  eax,dl
   140047d36:	mov    r10,r9
   140047d39:	and    r9d,0xf
   140047d3d:	and    r10,0xfffffffffffffff0
   140047d41:	mov    ecx,eax
   140047d43:	xorps  xmm2,xmm2
   140047d46:	shl    ecx,0x8
   140047d49:	or     ecx,eax
   140047d4b:	movd   xmm0,ecx
   140047d4f:	mov    ecx,r9d
   140047d52:	pshuflw xmm1,xmm0,0x0
   140047d57:	or     r9d,0xffffffff
   140047d5b:	shl    r9d,cl
   140047d5e:	movdqa xmm0,xmm2
   140047d62:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140047d67:	pmovmskb ecx,xmm0
   140047d6b:	pshufd xmm3,xmm1,0x0
   140047d70:	movdqa xmm0,xmm3
   140047d74:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140047d79:	pmovmskb edx,xmm0
   140047d7d:	and    edx,r9d
   140047d80:	and    ecx,r9d
   140047d83:	jne    0x140047db3
   140047d85:	bsr    ecx,edx
   140047d88:	movdqa xmm1,xmm2
   140047d8c:	movdqa xmm0,xmm3
   140047d90:	add    rcx,r10
   140047d93:	test   edx,edx
   140047d95:	cmovne r8,rcx
   140047d99:	add    r10,0x10
   140047d9d:	pcmpeqb xmm1,XMMWORD PTR [r10]
   140047da2:	pcmpeqb xmm0,XMMWORD PTR [r10]
   140047da7:	pmovmskb ecx,xmm1
   140047dab:	pmovmskb edx,xmm0
   140047daf:	test   ecx,ecx
   140047db1:	je     0x140047d85
   140047db3:	mov    eax,ecx
   140047db5:	neg    eax
   140047db7:	and    eax,ecx
   140047db9:	dec    eax
   140047dbb:	and    edx,eax
   140047dbd:	bsr    ecx,edx
   140047dc0:	add    rcx,r10
   140047dc3:	test   edx,edx
   140047dc5:	cmovne r8,rcx
   140047dc9:	mov    rax,r8
   140047dcc:	add    rsp,0x18
   140047dd0:	ret    
   140047dd1:	movsx  eax,BYTE PTR [r9]
   140047dd5:	cmp    eax,edx
   140047dd7:	cmove  r8,r9
   140047ddb:	cmp    BYTE PTR [r9],0x0
   140047ddf:	je     0x140047dc9
   140047de1:	inc    r9
   140047de4:	test   r9b,0xf
   140047de8:	jne    0x140047dd1
   140047dea:	movzx  eax,dl
   140047ded:	movd   xmm0,eax
   140047df1:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140047df8:	jae    0x140047e07
   140047dfa:	movsxd r8,ecx
   140047dfd:	add    r8,r9
   140047e00:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140047e07:	je     0x140047dc9
   140047e09:	add    r9,0x10
   140047e0d:	jmp    0x140047df1
   140047e0f:	int3   
   140047e10:	sub    rsp,0x18
   140047e14:	movdqa xmm2,XMMWORD PTR [rsp]
   140047e19:	mov    r8,rcx
   140047e1c:	movzx  eax,dx
   140047e1f:	xor    r9d,r9d
   140047e22:	movd   xmm0,eax
   140047e26:	pshuflw xmm1,xmm0,0x0
   140047e2b:	pshufd xmm3,xmm1,0x0
   140047e30:	mov    rax,r8
   140047e33:	and    eax,0xfff
   140047e38:	cmp    rax,0xff0
   140047e3e:	ja     0x140047e6c
   140047e40:	movdqu xmm1,XMMWORD PTR [r8]
   140047e45:	movdqa xmm0,xmm2
   140047e49:	pxor   xmm0,xmm2
   140047e4d:	movdqa xmm2,xmm0
   140047e51:	pcmpeqw xmm2,xmm1
   140047e55:	pcmpeqw xmm1,xmm3
   140047e59:	por    xmm2,xmm1
   140047e5d:	pmovmskb eax,xmm2
   140047e61:	test   eax,eax
   140047e63:	jne    0x140047e82
   140047e65:	mov    eax,0x10
   140047e6a:	jmp    0x140047e7d
   140047e6c:	cmp    WORD PTR [r8],dx
   140047e70:	je     0x140047e99
   140047e72:	cmp    WORD PTR [r8],r9w
   140047e76:	je     0x140047e95
   140047e78:	mov    eax,0x2
   140047e7d:	add    r8,rax
   140047e80:	jmp    0x140047e30
   140047e82:	bsf    ecx,eax
   140047e85:	add    r8,rcx
   140047e88:	cmp    WORD PTR [r8],dx
   140047e8c:	cmove  r9,r8
   140047e90:	mov    rax,r9
   140047e93:	jmp    0x140047e9c
   140047e95:	xor    eax,eax
   140047e97:	jmp    0x140047e9c
   140047e99:	mov    rax,r8
   140047e9c:	add    rsp,0x18
   140047ea0:	ret    
   140047ea1:	int3   
   140047ea2:	int3   
   140047ea3:	int3   
   140047ea4:	int3   
   140047ea5:	int3   
   140047ea6:	int3   
   140047ea7:	int3   
   140047ea8:	int3   
   140047ea9:	int3   
   140047eaa:	int3   
   140047eab:	int3   
   140047eac:	int3   
   140047ead:	int3   
   140047eae:	int3   
   140047eaf:	int3   
   140047eb0:	int3   
   140047eb1:	int3   
   140047eb2:	int3   
   140047eb3:	int3   
   140047eb4:	int3   
   140047eb5:	int3   
   140047eb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140047ec0:	jmp    rax
   140047ec2:	int3   
   140047ec3:	int3   
   140047ec4:	int3   
   140047ec5:	int3   
   140047ec6:	int3   
   140047ec7:	int3   
   140047ec8:	int3   
   140047ec9:	int3   
   140047eca:	int3   
   140047ecb:	int3   
   140047ecc:	int3   
   140047ecd:	int3   
   140047ece:	int3   
   140047ecf:	int3   
   140047ed0:	mov    rcx,QWORD PTR [rdx+0x60]
   140047ed7:	jmp    0x140027390
   140047edc:	mov    rcx,QWORD PTR [rdx+0x60]
   140047ee3:	add    rcx,0x8
   140047ee7:	jmp    0x14000a96c
   140047eec:	mov    rcx,QWORD PTR [rdx+0x60]
   140047ef3:	add    rcx,0x18
   140047ef7:	jmp    0x14000a96c
   140047efc:	mov    rcx,QWORD PTR [rdx+0x60]
   140047f03:	add    rcx,0x28
   140047f07:	jmp    0x14000a96c
   140047f0c:	mov    rcx,QWORD PTR [rdx+0x60]
   140047f13:	add    rcx,0x38
   140047f17:	jmp    0x14000a96c
   140047f1c:	mov    rcx,QWORD PTR [rdx+0x60]
   140047f23:	add    rcx,0x48
   140047f27:	jmp    0x14000a96c
   140047f2c:	mov    rcx,QWORD PTR [rdx+0x60]
   140047f33:	add    rcx,0x58
   140047f37:	jmp    0x14000a96c
   140047f3c:	rex push rbp
   140047f3e:	sub    rsp,0x20
   140047f42:	mov    rbp,rdx
   140047f45:	mov    edx,0x60
   140047f4a:	mov    rcx,QWORD PTR [rbp+0xf0]
   140047f51:	call   0x140026804
   140047f56:	add    rsp,0x20
   140047f5a:	pop    rbp
   140047f5b:	ret    
   140047f5c:	mov    rcx,QWORD PTR [rdx+0x30]
   140047f63:	jmp    0x14000a998
   140047f68:	lea    rcx,[rdx+0x38]
   140047f6f:	jmp    0x14000a998
   140047f74:	lea    rcx,[rdx+0x40]
   140047f7b:	jmp    0x14000a998
   140047f80:	rex push rbp
   140047f82:	sub    rsp,0x20
   140047f86:	mov    rbp,rdx
   140047f89:	mov    eax,DWORD PTR [rbp+0x50]
   140047f8c:	and    eax,0x1
   140047f8f:	test   eax,eax
   140047f91:	je     0x140047fa7
   140047f93:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140047f97:	mov    rcx,QWORD PTR [rbp+0x40]
   140047f9b:	add    rcx,0xa8
   140047fa2:	call   0x140004728
   140047fa7:	add    rsp,0x20
   140047fab:	pop    rbp
   140047fac:	ret    
   140047fad:	lea    rcx,[rdx+0x48]
   140047fb4:	jmp    0x14000a82c
   140047fb9:	lea    rcx,[rdx+0xc0]
   140047fc0:	jmp    0x14000a6c8
   140047fc5:	lea    rcx,[rdx+0x130]
   140047fcc:	jmp    0x140004794
   140047fd1:	lea    rcx,[rdx+0x38]
   140047fd8:	jmp    0x140006a68
   140047fdd:	lea    rcx,[rdx+0x70]
   140047fe4:	jmp    0x140006a90
   140047fe9:	lea    rcx,[rdx+0x70]
   140047ff0:	jmp    0x14000a98c
   140047ff5:	lea    rcx,[rdx+0x50]
   140047ffc:	jmp    0x14000a98c
   140048001:	lea    rcx,[rdx+0x30]
   140048008:	jmp    0x14000a98c
   14004800d:	lea    rcx,[rdx+0x138]
   140048014:	jmp    0x14000a98c
   140048019:	lea    rcx,[rdx+0x118]
   140048020:	jmp    0x14000a98c
   140048025:	rex push rbp
   140048027:	sub    rsp,0x20
   14004802b:	mov    rbp,rdx
   14004802e:	mov    edx,0x10
   140048033:	mov    rcx,QWORD PTR [rbp+0x20]
   140048037:	call   0x140026804
   14004803c:	add    rsp,0x20
   140048040:	pop    rbp
   140048041:	ret    
   140048042:	lea    rcx,[rdx+0x20]
   140048049:	jmp    0x14000a410
   14004804e:	lea    rcx,[rdx+0x30]
   140048055:	jmp    0x140006e50
   14004805a:	lea    rcx,[rdx+0x158]
   140048061:	jmp    0x14000a98c
   140048066:	lea    rcx,[rdx+0x28]
   14004806d:	jmp    0x14000a98c
   140048072:	lea    rcx,[rdx+0x48]
   140048079:	jmp    0x14000a98c
   14004807e:	lea    rcx,[rdx+0x50]
   140048085:	jmp    0x14000a98c
   14004808a:	lea    rcx,[rdx+0x30]
   140048091:	jmp    0x14000a98c
   140048096:	lea    rcx,[rdx+0x30]
   14004809d:	jmp    0x14000a98c
   1400480a2:	lea    rcx,[rdx+0x50]
   1400480a9:	jmp    0x14000a98c
   1400480ae:	lea    rcx,[rdx+0x30]
   1400480b5:	jmp    0x14000a98c
   1400480ba:	lea    rcx,[rdx+0x50]
   1400480c1:	jmp    0x14000a98c
   1400480c6:	lea    rcx,[rdx+0xd0]
   1400480cd:	jmp    0x14000a6c8
   1400480d2:	lea    rcx,[rdx+0xb8]
   1400480d9:	jmp    0x140004794
   1400480de:	lea    rcx,[rdx+0xb8]
   1400480e5:	jmp    0x140004794
   1400480ea:	lea    rcx,[rdx+0xb8]
   1400480f1:	jmp    0x140004794
   1400480f6:	lea    rcx,[rdx+0xb8]
   1400480fd:	jmp    0x140004794
   140048102:	lea    rcx,[rdx+0xb8]
   140048109:	jmp    0x140004794
   14004810e:	lea    rcx,[rdx+0x38]
   140048115:	jmp    0x140006a68
   14004811a:	lea    rcx,[rdx+0x70]
   140048121:	jmp    0x140006a90
   140048126:	lea    rcx,[rdx+0x1c0]
   14004812d:	jmp    0x14000a6c8
   140048132:	lea    rcx,[rdx+0x50]
   140048139:	jmp    0x140010f78
   14004813e:	lea    rcx,[rdx+0xb0]
   140048145:	jmp    0x14001100c
   14004814a:	lea    rcx,[rdx+0xb8]
   140048151:	jmp    0x140006e50
   140048156:	lea    rcx,[rdx+0x1a0]
   14004815d:	jmp    0x14000a98c
   140048162:	rex push rbp
   140048164:	sub    rsp,0x20
   140048168:	mov    rbp,rdx
   14004816b:	mov    eax,DWORD PTR [rbp+0x30]
   14004816e:	and    eax,0x1
   140048171:	test   eax,eax
   140048173:	je     0x140048185
   140048175:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140048179:	mov    rcx,QWORD PTR [rbp+0xa0]
   140048180:	call   0x140007cf0
   140048185:	add    rsp,0x20
   140048189:	pop    rbp
   14004818a:	ret    
   14004818b:	lea    rcx,[rdx+0x1a0]
   140048192:	jmp    0x14000a98c
   140048197:	lea    rcx,[rdx+0x1a0]
   14004819e:	jmp    0x14000a98c
   1400481a3:	lea    rcx,[rdx+0x1a0]
   1400481aa:	jmp    0x14000a98c
   1400481af:	lea    rcx,[rdx+0x1a0]
   1400481b6:	jmp    0x14000a98c
   1400481bb:	lea    rcx,[rdx+0x1a0]
   1400481c2:	jmp    0x14000a98c
   1400481c7:	lea    rcx,[rdx+0x1a0]
   1400481ce:	jmp    0x14000a98c
   1400481d3:	lea    rcx,[rdx+0x1a0]
   1400481da:	jmp    0x14000a98c
   1400481df:	lea    rcx,[rdx+0x1a0]
   1400481e6:	jmp    0x14000a98c
   1400481eb:	lea    rcx,[rdx+0x1a0]
   1400481f2:	jmp    0x14000a98c
   1400481f7:	lea    rcx,[rdx+0x40]
   1400481fe:	jmp    0x140019af4
   140048203:	lea    rcx,[rdx+0x20]
   14004820a:	jmp    0x14000a85c
   14004820f:	lea    rcx,[rdx+0x68]
   140048216:	jmp    0x14000a998
   14004821b:	lea    rcx,[rdx+0x90]
   140048222:	jmp    0x140007cf0
   140048227:	mov    QWORD PTR [rsp+0x10],rdx
   14004822c:	push   rbp
   14004822d:	sub    rsp,0x20
   140048231:	mov    rbp,rdx
   140048234:	mov    rax,QWORD PTR [rbp+0x38]
   140048238:	and    QWORD PTR [rax],0x0
   14004823c:	lea    rax,[rip+0xfffffffffffbfdc9]        # 0x14000800c
   140048243:	add    rsp,0x20
   140048247:	pop    rbp
   140048248:	ret    
   140048249:	int3   
   14004824a:	lea    rcx,[rdx+0x110]
   140048251:	jmp    0x140006e50
   140048256:	lea    rcx,[rdx+0x50]
   14004825d:	jmp    0x14000a98c
   140048262:	lea    rcx,[rdx+0x90]
   140048269:	jmp    0x1400083b8
   14004826e:	lea    rcx,[rdx+0x50]
   140048275:	jmp    0x14000a98c
   14004827a:	lea    rcx,[rdx+0x70]
   140048281:	jmp    0x14000a98c
   140048286:	lea    rcx,[rdx+0x30]
   14004828d:	jmp    0x14000a800
   140048292:	lea    rcx,[rdx+0x110]
   140048299:	jmp    0x140006e50
   14004829e:	lea    rcx,[rdx+0x50]
   1400482a5:	jmp    0x14000a98c
   1400482aa:	lea    rcx,[rdx+0x50]
   1400482b1:	jmp    0x14000a98c
   1400482b6:	lea    rcx,[rdx+0x208]
   1400482bd:	jmp    0x14000a98c
   1400482c2:	lea    rcx,[rdx+0x320]
   1400482c9:	jmp    0x140006e88
   1400482ce:	lea    rcx,[rdx+0x1e8]
   1400482d5:	jmp    0x14000a98c
   1400482da:	lea    rcx,[rdx+0x268]
   1400482e1:	jmp    0x14000a98c
   1400482e6:	lea    rcx,[rdx+0x248]
   1400482ed:	jmp    0x14000a98c
   1400482f2:	lea    rcx,[rdx+0x40]
   1400482f9:	jmp    0x14000a3e4
   1400482fe:	mov    QWORD PTR [rsp+0x10],rdx
   140048303:	push   rbx
   140048304:	push   rbp
   140048305:	sub    rsp,0x38
   140048309:	mov    rbp,rdx
   14004830c:	mov    rcx,QWORD PTR [rbp+0xf0]
   140048313:	mov    rax,QWORD PTR [rcx]
   140048316:	call   QWORD PTR [rax+0x8]
   140048319:	mov    rbx,rax
   14004831c:	mov    edx,0x2
   140048321:	lea    r8d,[rdx-0x1]
   140048325:	lea    rcx,[rbp+0x100]
   14004832c:	call   0x14000be9c
   140048331:	nop
   140048332:	lea    rdx,[rip+0x1a22f]        # 0x140062568
   140048339:	lea    rcx,[rbp+0x100]
   140048340:	call   0x140010488
   140048345:	mov    rdx,rbx
   140048348:	lea    rcx,[rbp+0x100]
   14004834f:	call   0x1400101bc
   140048354:	lea    rdx,[rbp+0x208]
   14004835b:	lea    rcx,[rbp+0x100]
   140048362:	call   0x14000a950
   140048367:	nop
   140048368:	lea    rdx,[rbp+0x208]
   14004836f:	mov    ecx,0x1
   140048374:	call   0x14001a654
   140048379:	nop
   14004837a:	xor    r8d,r8d
   14004837d:	mov    dl,0x1
   14004837f:	lea    rcx,[rbp+0x208]
   140048386:	call   0x14000b6b0
   14004838b:	nop
   14004838c:	lea    rcx,[rbp+0x188]
   140048393:	call   0x14000a9dc
   140048398:	nop
   140048399:	lea    rax,[rip+0x3578]        # 0x14004b918
   1400483a0:	mov    QWORD PTR [rbp+0x188],rax
   1400483a7:	lea    rcx,[rbp+0x188]
   1400483ae:	call   0x140027b0c
   1400483b3:	nop
   1400483b4:	lea    rax,[rip+0xfffffffffffc02f0]        # 0x1400086ab
   1400483bb:	add    rsp,0x38
   1400483bf:	pop    rbp
   1400483c0:	pop    rbx
   1400483c1:	ret    
   1400483c2:	int3   
   1400483c3:	lea    rcx,[rdx+0x100]
   1400483ca:	jmp    0x140006e50
   1400483cf:	lea    rcx,[rdx+0x208]
   1400483d6:	jmp    0x14000a98c
   1400483db:	lea    rcx,[rdx+0x208]
   1400483e2:	jmp    0x14000a98c
   1400483e7:	lea    rcx,[rdx+0x208]
   1400483ee:	jmp    0x14000a98c
   1400483f3:	lea    rcx,[rdx+0x208]
   1400483fa:	jmp    0x14000a98c
   1400483ff:	lea    rcx,[rdx+0x208]
   140048406:	jmp    0x14000a98c
   14004840b:	lea    rcx,[rdx+0xa0]
   140048412:	jmp    0x14000a85c
   140048417:	lea    rcx,[rdx+0x228]
   14004841e:	jmp    0x14000a998
   140048423:	lea    rcx,[rdx+0x1e8]
   14004842a:	jmp    0x14000a98c
   14004842f:	lea    rcx,[rdx+0x100]
   140048436:	jmp    0x140006e50
   14004843b:	lea    rcx,[rdx+0x208]
   140048442:	jmp    0x14000a98c
   140048447:	lea    rcx,[rdx+0x290]
   14004844e:	jmp    0x140007cf0
   140048453:	lea    rcx,[rdx+0x1e8]
   14004845a:	jmp    0x14000a98c
   14004845f:	lea    rcx,[rdx+0x100]
   140048466:	jmp    0x140006e50
   14004846b:	lea    rcx,[rdx+0x208]
   140048472:	jmp    0x14000a98c
   140048477:	lea    rcx,[rdx+0x208]
   14004847e:	jmp    0x14000a98c
   140048483:	lea    rcx,[rdx+0x80]
   14004848a:	jmp    0x14000a85c
   14004848f:	lea    rcx,[rdx+0x1e8]
   140048496:	jmp    0x14000a98c
   14004849b:	lea    rcx,[rdx+0x38]
   1400484a2:	jmp    0x14002160c
   1400484a7:	lea    rcx,[rdx+0x1e8]
   1400484ae:	jmp    0x14000a98c
   1400484b3:	lea    rcx,[rdx+0x1e8]
   1400484ba:	jmp    0x14000a98c
   1400484bf:	lea    rcx,[rdx+0x68]
   1400484c6:	jmp    0x14000a85c
   1400484cb:	lea    rcx,[rdx+0x1e8]
   1400484d2:	jmp    0x14000a98c
   1400484d7:	lea    rcx,[rdx+0xd0]
   1400484de:	jmp    0x140019af4
   1400484e3:	lea    rcx,[rdx+0x1e8]
   1400484ea:	jmp    0x14000a98c
   1400484ef:	lea    rcx,[rdx+0xb8]
   1400484f6:	jmp    0x140019af4
   1400484fb:	lea    rcx,[rdx+0x1e8]
   140048502:	jmp    0x14000a98c
   140048507:	lea    rcx,[rdx+0x1e8]
   14004850e:	jmp    0x14000a998
   140048513:	lea    rcx,[rdx+0x208]
   14004851a:	jmp    0x14000a98c
   14004851f:	lea    rcx,[rdx+0x208]
   140048526:	jmp    0x14000a98c
   14004852b:	mov    QWORD PTR [rsp+0x10],rdx
   140048530:	push   rbx
   140048531:	push   rbp
   140048532:	sub    rsp,0x38
   140048536:	mov    rbp,rdx
   140048539:	mov    rcx,QWORD PTR [rbp+0xf8]
   140048540:	mov    rax,QWORD PTR [rcx]
   140048543:	call   QWORD PTR [rax+0x8]
   140048546:	mov    rbx,rax
   140048549:	mov    edx,0x2
   14004854e:	lea    r8d,[rdx-0x1]
   140048552:	lea    rcx,[rbp+0x100]
   140048559:	call   0x14000be9c
   14004855e:	nop
   14004855f:	lea    rdx,[rip+0x1a002]        # 0x140062568
   140048566:	lea    rcx,[rbp+0x100]
   14004856d:	call   0x140010488
   140048572:	mov    rdx,rbx
   140048575:	lea    rcx,[rbp+0x100]
   14004857c:	call   0x1400101bc
   140048581:	lea    rdx,[rbp+0x208]
   140048588:	lea    rcx,[rbp+0x100]
   14004858f:	call   0x14000a950
   140048594:	nop
   140048595:	lea    rdx,[rbp+0x208]
   14004859c:	mov    ecx,0x1
   1400485a1:	call   0x14001a654
   1400485a6:	nop
   1400485a7:	xor    r8d,r8d
   1400485aa:	mov    dl,0x1
   1400485ac:	lea    rcx,[rbp+0x208]
   1400485b3:	call   0x14000b6b0
   1400485b8:	nop
   1400485b9:	lea    rcx,[rbp+0x188]
   1400485c0:	call   0x14000a9dc
   1400485c5:	nop
   1400485c6:	lea    rax,[rip+0x334b]        # 0x14004b918
   1400485cd:	mov    QWORD PTR [rbp+0x188],rax
   1400485d4:	lea    rcx,[rbp+0x188]
   1400485db:	call   0x140027b0c
   1400485e0:	nop
   1400485e1:	lea    rax,[rip+0xfffffffffffc0b00]        # 0x1400090e8
   1400485e8:	add    rsp,0x38
   1400485ec:	pop    rbp
   1400485ed:	pop    rbx
   1400485ee:	ret    
   1400485ef:	int3   
   1400485f0:	lea    rcx,[rdx+0x100]
   1400485f7:	jmp    0x140006e50
   1400485fc:	lea    rcx,[rdx+0x208]
   140048603:	jmp    0x14000a98c
   140048608:	lea    rcx,[rdx+0x80]
   14004860f:	jmp    0x140006e50
   140048614:	lea    rcx,[rdx+0x38]
   14004861b:	jmp    0x14000a98c
   140048620:	lea    rcx,[rdx+0x58]
   140048627:	jmp    0x14000a998
   14004862c:	lea    rcx,[rdx+0x38]
   140048633:	jmp    0x14000a98c
   140048638:	lea    rcx,[rdx+0x38]
   14004863f:	jmp    0x14000a98c
   140048644:	lea    rcx,[rdx+0x38]
   14004864b:	jmp    0x14000a98c
   140048650:	lea    rcx,[rdx+0x38]
   140048657:	jmp    0x14000a98c
   14004865c:	lea    rcx,[rdx+0x250]
   140048663:	jmp    0x140006e50
   140048668:	lea    rcx,[rdx+0x1d0]
   14004866f:	jmp    0x14000a98c
   140048674:	lea    rcx,[rdx+0x210]
   14004867b:	jmp    0x14000a98c
   140048680:	lea    rcx,[rdx+0x340]
   140048687:	jmp    0x14000a98c
   14004868c:	lea    rcx,[rdx+0x230]
   140048693:	jmp    0x14000a98c
   140048698:	lea    rcx,[rdx+0x1f0]
   14004869f:	jmp    0x14000a98c
   1400486a4:	lea    rcx,[rdx+0x1d0]
   1400486ab:	jmp    0x14000a374
   1400486b0:	lea    rcx,[rdx+0x78]
   1400486b7:	jmp    0x140006e50
   1400486bc:	lea    rcx,[rdx+0x210]
   1400486c3:	jmp    0x14000a98c
   1400486c8:	lea    rcx,[rdx+0x78]
   1400486cf:	jmp    0x140006e50
   1400486d4:	lea    rcx,[rdx+0x210]
   1400486db:	jmp    0x14000a98c
   1400486e0:	lea    rcx,[rdx+0x250]
   1400486e7:	jmp    0x140006e50
   1400486ec:	lea    rcx,[rdx+0x230]
   1400486f3:	jmp    0x14000a98c
   1400486f8:	lea    rcx,[rdx+0x170]
   1400486ff:	jmp    0x14000a98c
   140048704:	lea    rcx,[rdx+0x190]
   14004870b:	jmp    0x14000a98c
   140048710:	lea    rcx,[rdx+0x1b0]
   140048717:	jmp    0x140006e88
   14004871c:	lea    rcx,[rdx+0x200]
   140048723:	jmp    0x14000a98c
   140048728:	lea    rcx,[rdx+0x150]
   14004872f:	jmp    0x14000a98c
   140048734:	lea    rcx,[rdx+0x150]
   14004873b:	jmp    0x14000a98c
   140048740:	lea    rcx,[rdx+0x33]
   140048747:	jmp    0x140006e24
   14004874c:	lea    rcx,[rdx+0x48]
   140048753:	jmp    0x140012cc0
   140048758:	lea    rcx,[rdx+0x190]
   14004875f:	jmp    0x14000a98c
   140048764:	lea    rcx,[rdx+0x4e0]
   14004876b:	jmp    0x140012e80
   140048770:	lea    rcx,[rdx+0x150]
   140048777:	jmp    0x14000a98c
   14004877c:	lea    rcx,[rdx+0x1b0]
   140048783:	jmp    0x14000a3b0
   140048788:	lea    rcx,[rdx+0x150]
   14004878f:	jmp    0x14000a998
   140048794:	lea    rcx,[rdx+0x170]
   14004879b:	jmp    0x14000a998
   1400487a0:	lea    rcx,[rdx+0x240]
   1400487a7:	jmp    0x14000a98c
   1400487ac:	lea    rcx,[rdx+0x220]
   1400487b3:	jmp    0x14000a98c
   1400487b8:	lea    rcx,[rdx+0x200]
   1400487bf:	jmp    0x14000a98c
   1400487c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400487c9:	push   rbx
   1400487ca:	push   rbp
   1400487cb:	sub    rsp,0x38
   1400487cf:	mov    rbp,rdx
   1400487d2:	mov    rcx,QWORD PTR [rbp+0x50]
   1400487d6:	mov    rax,QWORD PTR [rcx]
   1400487d9:	call   QWORD PTR [rax+0x8]
   1400487dc:	mov    rbx,rax
   1400487df:	mov    edx,0x2
   1400487e4:	lea    r8d,[rdx-0x1]
   1400487e8:	lea    rcx,[rbp+0x68]
   1400487ec:	call   0x14000be9c
   1400487f1:	nop
   1400487f2:	lea    rdx,[rip+0x1a4b7]        # 0x140062cb0
   1400487f9:	lea    rcx,[rbp+0x68]
   1400487fd:	call   0x140010488
   140048802:	mov    rdx,rbx
   140048805:	lea    rcx,[rbp+0x68]
   140048809:	call   0x1400101bc
   14004880e:	lea    rdx,[rbp+0x150]
   140048815:	lea    rcx,[rbp+0x68]
   140048819:	call   0x14000a950
   14004881e:	nop
   14004881f:	lea    rdx,[rbp+0x150]
   140048826:	mov    ecx,0x1
   14004882b:	call   0x14001a654
   140048830:	nop
   140048831:	xor    r8d,r8d
   140048834:	mov    dl,0x1
   140048836:	lea    rcx,[rbp+0x150]
   14004883d:	call   0x14000b6b0
   140048842:	nop
   140048843:	lea    rcx,[rbp+0xf0]
   14004884a:	call   0x14000a9dc
   14004884f:	nop
   140048850:	lea    rax,[rip+0x30c1]        # 0x14004b918
   140048857:	mov    QWORD PTR [rbp+0xf0],rax
   14004885e:	lea    rcx,[rbp+0xf0]
   140048865:	call   0x140027b0c
   14004886a:	nop
   14004886b:	lea    rax,[rip+0xfffffffffffc177f]        # 0x140009ff1
   140048872:	add    rsp,0x38
   140048876:	pop    rbp
   140048877:	pop    rbx
   140048878:	ret    
   140048879:	int3   
   14004887a:	lea    rcx,[rdx+0x68]
   140048881:	jmp    0x140006e50
   140048886:	lea    rcx,[rdx+0x150]
   14004888d:	jmp    0x14000a98c
   140048892:	lea    rcx,[rdx+0x1b0]
   140048899:	jmp    0x14000a3b0
   14004889e:	lea    rcx,[rdx+0x170]
   1400488a5:	jmp    0x14000a998
   1400488aa:	lea    rcx,[rdx+0x150]
   1400488b1:	jmp    0x14000a998
   1400488b6:	lea    rcx,[rdx+0x200]
   1400488bd:	jmp    0x14000a98c
   1400488c2:	lea    rcx,[rdx+0x220]
   1400488c9:	jmp    0x14000a98c
   1400488ce:	lea    rcx,[rdx+0x240]
   1400488d5:	jmp    0x14000a98c
   1400488da:	mov    QWORD PTR [rsp+0x10],rdx
   1400488df:	push   rbx
   1400488e0:	push   rbp
   1400488e1:	sub    rsp,0x38
   1400488e5:	mov    rbp,rdx
   1400488e8:	mov    rcx,QWORD PTR [rbp+0x58]
   1400488ec:	mov    rax,QWORD PTR [rcx]
   1400488ef:	call   QWORD PTR [rax+0x8]
   1400488f2:	mov    rbx,rax
   1400488f5:	mov    edx,0x2
   1400488fa:	lea    r8d,[rdx-0x1]
   1400488fe:	lea    rcx,[rbp+0x68]
   140048902:	call   0x14000be9c
   140048907:	nop
   140048908:	lea    rdx,[rip+0x1a431]        # 0x140062d40
   14004890f:	lea    rcx,[rbp+0x68]
   140048913:	call   0x140010488
   140048918:	mov    rdx,rbx
   14004891b:	lea    rcx,[rbp+0x68]
   14004891f:	call   0x1400101bc
   140048924:	lea    rdx,[rbp+0x150]
   14004892b:	lea    rcx,[rbp+0x68]
   14004892f:	call   0x14000a950
   140048934:	nop
   140048935:	lea    rdx,[rbp+0x150]
   14004893c:	mov    ecx,0x1
   140048941:	call   0x14001a654
   140048946:	nop
   140048947:	xor    r8d,r8d
   14004894a:	mov    dl,0x1
   14004894c:	lea    rcx,[rbp+0x150]
   140048953:	call   0x14000b6b0
   140048958:	nop
   140048959:	lea    rcx,[rbp+0xf0]
   140048960:	call   0x14000a9dc
   140048965:	nop
   140048966:	lea    rax,[rip+0x2fab]        # 0x14004b918
   14004896d:	mov    QWORD PTR [rbp+0xf0],rax
   140048974:	lea    rcx,[rbp+0xf0]
   14004897b:	call   0x140027b0c
   140048980:	nop
   140048981:	lea    rax,[rip+0xfffffffffffc18b8]        # 0x14000a240
   140048988:	add    rsp,0x38
   14004898c:	pop    rbp
   14004898d:	pop    rbx
   14004898e:	ret    
   14004898f:	int3   
   140048990:	lea    rcx,[rdx+0x68]
   140048997:	jmp    0x140006e50
   14004899c:	lea    rcx,[rdx+0x150]
   1400489a3:	jmp    0x14000a98c
   1400489a8:	mov    QWORD PTR [rsp+0x10],rdx
   1400489ad:	push   rbx
   1400489ae:	push   rbp
   1400489af:	sub    rsp,0x38
   1400489b3:	mov    rbp,rdx
   1400489b6:	mov    rcx,QWORD PTR [rbp+0x60]
   1400489ba:	mov    rax,QWORD PTR [rcx]
   1400489bd:	call   QWORD PTR [rax+0x8]
   1400489c0:	mov    rbx,rax
   1400489c3:	mov    edx,0x2
   1400489c8:	lea    r8d,[rdx-0x1]
   1400489cc:	lea    rcx,[rbp+0x68]
   1400489d0:	call   0x14000be9c
   1400489d5:	nop
   1400489d6:	lea    rdx,[rip+0x1a40b]        # 0x140062de8
   1400489dd:	lea    rcx,[rbp+0x68]
   1400489e1:	call   0x140010488
   1400489e6:	mov    rdx,rbx
   1400489e9:	lea    rcx,[rbp+0x68]
   1400489ed:	call   0x1400101bc
   1400489f2:	lea    rdx,[rbp+0x190]
   1400489f9:	lea    rcx,[rbp+0x68]
   1400489fd:	call   0x14000a950
   140048a02:	nop
   140048a03:	lea    rdx,[rbp+0x190]
   140048a0a:	xor    ecx,ecx
   140048a0c:	call   0x14001a654
   140048a11:	nop
   140048a12:	xor    r8d,r8d
   140048a15:	mov    dl,0x1
   140048a17:	lea    rcx,[rbp+0x190]
   140048a1e:	call   0x14000b6b0
   140048a23:	nop
   140048a24:	lea    rcx,[rbp+0xf0]
   140048a2b:	call   0x14000a9dc
   140048a30:	nop
   140048a31:	lea    rax,[rip+0x2ee0]        # 0x14004b918
   140048a38:	mov    QWORD PTR [rbp+0xf0],rax
   140048a3f:	lea    rcx,[rbp+0xf0]
   140048a46:	call   0x140027b0c
   140048a4b:	nop
   140048a4c:	lea    rax,[rip+0xfffffffffffc18ea]        # 0x14000a33d
   140048a53:	add    rsp,0x38
   140048a57:	pop    rbp
   140048a58:	pop    rbx
   140048a59:	ret    
   140048a5a:	int3   
   140048a5b:	lea    rcx,[rdx+0x68]
   140048a62:	jmp    0x140006e50
   140048a67:	lea    rcx,[rdx+0x190]
   140048a6e:	jmp    0x14000a98c
   140048a73:	mov    QWORD PTR [rsp+0x10],rdx
   140048a78:	push   rbp
   140048a79:	sub    rsp,0x30
   140048a7d:	mov    rbp,rdx
   140048a80:	lea    rax,[rip+0xffffffffffffffc5]        # 0x140048a4c
   140048a87:	add    rsp,0x30
   140048a8b:	pop    rbp
   140048a8c:	ret    
   140048a8d:	int3   
   140048a8e:	lea    rcx,[rdx+0x28]
   140048a95:	jmp    0x140004794
   140048a9a:	mov    rcx,QWORD PTR [rdx+0x40]
   140048aa1:	jmp    0x140004794
   140048aa6:	mov    rcx,QWORD PTR [rdx+0x40]
   140048aad:	add    rcx,0x28
   140048ab1:	jmp    0x14000b66c
   140048ab6:	rex push rbp
   140048ab8:	sub    rsp,0x20
   140048abc:	mov    rbp,rdx
   140048abf:	mov    eax,DWORD PTR [rbp+0x48]
   140048ac2:	and    eax,0x1
   140048ac5:	test   eax,eax
   140048ac7:	je     0x140048add
   140048ac9:	and    DWORD PTR [rbp+0x48],0xfffffffe
   140048acd:	mov    rcx,QWORD PTR [rbp+0x40]
   140048ad1:	add    rcx,0x88
   140048ad8:	call   0x14000b3b0
   140048add:	add    rsp,0x20
   140048ae1:	pop    rbp
   140048ae2:	ret    
   140048ae3:	mov    rcx,QWORD PTR [rdx+0x40]
   140048aea:	add    rcx,0x10
   140048aee:	jmp    0x14000b134
   140048af3:	mov    rcx,QWORD PTR [rdx+0x40]
   140048afa:	jmp    0x14000b354
   140048aff:	mov    QWORD PTR [rsp+0x10],rdx
   140048b04:	push   rbp
   140048b05:	sub    rsp,0x20
   140048b09:	mov    rbp,rdx
   140048b0c:	mov    rcx,QWORD PTR [rbp+0x68]
   140048b10:	mov    QWORD PTR [rbp+0x68],rcx
   140048b14:	add    rcx,0x1
   140048b18:	jne    0x140048b1e
   140048b1a:	xor    eax,eax
   140048b1c:	jmp    0x140048b6a
   140048b1e:	movabs rax,0x7fffffffffffffff
   140048b28:	cmp    rcx,rax
   140048b2b:	jbe    0x140048b32
   140048b2d:	call   0x140027a0c
   140048b32:	add    rcx,rcx
   140048b35:	cmp    rcx,0x1000
   140048b3c:	jb     0x140048b65
   140048b3e:	lea    rax,[rcx+0x27]
   140048b42:	cmp    rax,rcx
   140048b45:	ja     0x140048b4c
   140048b47:	call   0x140027a0c
   140048b4c:	mov    rcx,rax
   140048b4f:	call   0x140026118
   140048b54:	mov    rcx,rax
   140048b57:	add    rax,0x27
   140048b5b:	and    rax,0xffffffffffffffe0
   140048b5f:	mov    QWORD PTR [rax-0x8],rcx
   140048b63:	jmp    0x140048b6a
   140048b65:	call   0x140026118
   140048b6a:	mov    QWORD PTR [rbp+0x78],rax
   140048b6e:	lea    rax,[rip+0xfffffffffffc40a6]        # 0x14000cc1b
   140048b75:	add    rsp,0x20
   140048b79:	pop    rbp
   140048b7a:	ret    
   140048b7b:	int3   
   140048b7c:	mov    QWORD PTR [rsp+0x10],rdx
   140048b81:	push   rbp
   140048b82:	sub    rsp,0x20
   140048b86:	mov    rbp,rdx
   140048b89:	xor    r8d,r8d
   140048b8c:	mov    dl,0x1
   140048b8e:	mov    rcx,QWORD PTR [rbp+0x60]
   140048b92:	call   0x14000b6b0
   140048b97:	xor    edx,edx
   140048b99:	xor    ecx,ecx
   140048b9b:	call   0x14002ab88
   140048ba0:	nop
   140048ba1:	mov    QWORD PTR [rsp+0x10],rdx
   140048ba6:	push   rbp
   140048ba7:	sub    rsp,0x20
   140048bab:	mov    rbp,rdx
   140048bae:	mov    rcx,QWORD PTR [rbp+0x68]
   140048bb2:	mov    QWORD PTR [rbp+0x68],rcx
   140048bb6:	add    rcx,0x1
   140048bba:	jne    0x140048bc0
   140048bbc:	xor    eax,eax
   140048bbe:	jmp    0x140048bf5
   140048bc0:	cmp    rcx,0x1000
   140048bc7:	jb     0x140048bf0
   140048bc9:	lea    rax,[rcx+0x27]
   140048bcd:	cmp    rax,rcx
   140048bd0:	ja     0x140048bd7
   140048bd2:	call   0x140027a0c
   140048bd7:	mov    rcx,rax
   140048bda:	call   0x140026118
   140048bdf:	mov    rcx,rax
   140048be2:	add    rax,0x27
   140048be6:	and    rax,0xffffffffffffffe0
   140048bea:	mov    QWORD PTR [rax-0x8],rcx
   140048bee:	jmp    0x140048bf5
   140048bf0:	call   0x140026118
   140048bf5:	mov    QWORD PTR [rbp+0x78],rax
   140048bf9:	lea    rax,[rip+0xfffffffffffc4143]        # 0x14000cd43
   140048c00:	add    rsp,0x20
   140048c04:	pop    rbp
   140048c05:	ret    
   140048c06:	int3   
   140048c07:	mov    QWORD PTR [rsp+0x10],rdx
   140048c0c:	push   rbx
   140048c0d:	push   rbp
   140048c0e:	sub    rsp,0x28
   140048c12:	mov    rbp,rdx
   140048c15:	mov    rbx,QWORD PTR [rbp+0x60]
   140048c19:	mov    rdx,QWORD PTR [rbx+0x18]
   140048c1d:	cmp    rdx,0x10
   140048c21:	jb     0x140048c34
   140048c23:	inc    rdx
   140048c26:	mov    r8d,0x1
   140048c2c:	mov    rcx,QWORD PTR [rbx]
   140048c2f:	call   0x140004804
   140048c34:	mov    QWORD PTR [rbx+0x18],0xf
   140048c3c:	and    QWORD PTR [rbx+0x10],0x0
   140048c41:	cmp    QWORD PTR [rbx+0x18],0x10
   140048c46:	jb     0x140048c4b
   140048c48:	mov    rbx,QWORD PTR [rbx]
   140048c4b:	mov    BYTE PTR [rbx],0x0
   140048c4e:	xor    edx,edx
   140048c50:	xor    ecx,ecx
   140048c52:	call   0x14002ab88
   140048c57:	nop
   140048c58:	lea    rcx,[rdx+0x28]
   140048c5f:	jmp    0x140004a6c
   140048c64:	rex push rbp
   140048c66:	sub    rsp,0x20
   140048c6a:	mov    rbp,rdx
   140048c6d:	mov    eax,DWORD PTR [rbp+0x20]
   140048c70:	and    eax,0x1
   140048c73:	test   eax,eax
   140048c75:	je     0x140048c84
   140048c77:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140048c7b:	mov    rcx,QWORD PTR [rbp+0x50]
   140048c7f:	call   0x14000a98c
   140048c84:	add    rsp,0x20
   140048c88:	pop    rbp
   140048c89:	ret    
   140048c8a:	lea    rcx,[rdx+0x78]
   140048c91:	jmp    0x140027390
   140048c96:	lea    rcx,[rdx+0x38]
   140048c9d:	jmp    0x14000e7a0
   140048ca2:	lea    rcx,[rdx+0x60]
   140048ca9:	jmp    0x140004a6c
   140048cae:	mov    QWORD PTR [rsp+0x10],rdx
   140048cb3:	push   rbp
   140048cb4:	sub    rsp,0x30
   140048cb8:	mov    rbp,rdx
   140048cbb:	mov    rdx,QWORD PTR [rbp+0xa0]
   140048cc2:	mov    rax,QWORD PTR [rdx]
   140048cc5:	movsxd rcx,DWORD PTR [rax+0x4]
   140048cc9:	add    rcx,rdx
   140048ccc:	mov    edx,DWORD PTR [rcx+0x10]
   140048ccf:	or     edx,0x4
   140048cd2:	mov    eax,edx
   140048cd4:	or     eax,0x4
   140048cd7:	cmp    QWORD PTR [rcx+0x48],0x0
   140048cdc:	cmove  edx,eax
   140048cdf:	mov    r8b,0x1
   140048ce2:	call   0x1400054f8
   140048ce7:	nop
   140048ce8:	lea    rax,[rip+0xfffffffffffc5757]        # 0x14000e446
   140048cef:	add    rsp,0x30
   140048cf3:	pop    rbp
   140048cf4:	ret    
   140048cf5:	int3   
   140048cf6:	lea    rcx,[rdx+0x38]
   140048cfd:	jmp    0x14000e7a0
   140048d02:	lea    rcx,[rdx+0x60]
   140048d09:	jmp    0x140004a6c
   140048d0e:	mov    QWORD PTR [rsp+0x10],rdx
   140048d13:	push   rbp
   140048d14:	sub    rsp,0x30
   140048d18:	mov    rbp,rdx
   140048d1b:	mov    rdx,QWORD PTR [rbp+0xa0]
   140048d22:	mov    rax,QWORD PTR [rdx]
   140048d25:	movsxd rcx,DWORD PTR [rax+0x4]
   140048d29:	add    rcx,rdx
   140048d2c:	mov    edx,DWORD PTR [rcx+0x10]
   140048d2f:	or     edx,0x4
   140048d32:	mov    eax,edx
   140048d34:	or     eax,0x4
   140048d37:	cmp    QWORD PTR [rcx+0x48],0x0
   140048d3c:	cmove  edx,eax
   140048d3f:	mov    r8b,0x1
   140048d42:	call   0x1400054f8
   140048d47:	nop
   140048d48:	lea    rax,[rip+0xfffffffffffc5861]        # 0x14000e5b0
   140048d4f:	add    rsp,0x30
   140048d53:	pop    rbp
   140048d54:	ret    
   140048d55:	int3   
   140048d56:	lea    rcx,[rdx+0x38]
   140048d5d:	jmp    0x14000e7a0
   140048d62:	lea    rcx,[rdx+0x60]
   140048d69:	jmp    0x140004a6c
   140048d6e:	mov    QWORD PTR [rsp+0x10],rdx
   140048d73:	push   rbp
   140048d74:	sub    rsp,0x30
   140048d78:	mov    rbp,rdx
   140048d7b:	mov    rdx,QWORD PTR [rbp+0xa0]
   140048d82:	mov    rax,QWORD PTR [rdx]
   140048d85:	movsxd rcx,DWORD PTR [rax+0x4]
   140048d89:	add    rcx,rdx
   140048d8c:	mov    edx,DWORD PTR [rcx+0x10]
   140048d8f:	or     edx,0x4
   140048d92:	mov    eax,edx
   140048d94:	or     eax,0x4
   140048d97:	cmp    QWORD PTR [rcx+0x48],0x0
   140048d9c:	cmove  edx,eax
   140048d9f:	mov    r8b,0x1
   140048da2:	call   0x1400054f8
   140048da7:	nop
   140048da8:	lea    rax,[rip+0xfffffffffffc5969]        # 0x14000e718
   140048daf:	add    rsp,0x30
   140048db3:	pop    rbp
   140048db4:	ret    
   140048db5:	int3   
   140048db6:	mov    rcx,QWORD PTR [rdx+0x40]
   140048dbd:	jmp    0x14000f654
   140048dc2:	lea    rcx,[rdx+0x60]
   140048dc9:	jmp    0x14000a998
   140048dce:	lea    rcx,[rdx+0x30]
   140048dd5:	jmp    0x140004a6c
   140048dda:	lea    rcx,[rdx+0x48]
   140048de1:	jmp    0x14000a98c
   140048de6:	lea    rcx,[rdx+0x30]
   140048ded:	jmp    0x140004a6c
   140048df2:	lea    rcx,[rdx+0x58]
   140048df9:	jmp    0x14000a98c
   140048dfe:	lea    rcx,[rdx+0x30]
   140048e05:	jmp    0x140004a6c
   140048e0a:	lea    rcx,[rdx+0x78]
   140048e11:	jmp    0x14000a998
   140048e16:	lea    rcx,[rdx+0x50]
   140048e1d:	jmp    0x140004a6c
   140048e22:	lea    rcx,[rdx+0x68]
   140048e29:	jmp    0x14000a98c
   140048e2e:	lea    rcx,[rdx+0x50]
   140048e35:	jmp    0x140004a6c
   140048e3a:	lea    rcx,[rdx+0x88]
   140048e41:	jmp    0x14000a998
   140048e46:	lea    rcx,[rdx+0x28]
   140048e4d:	jmp    0x14000e7a0
   140048e52:	mov    QWORD PTR [rsp+0x10],rdx
   140048e57:	push   rbp
   140048e58:	sub    rsp,0x20
   140048e5c:	mov    rbp,rdx
   140048e5f:	lea    rax,[rip+0xfffffffffffc725f]        # 0x1400100c5
   140048e66:	add    rsp,0x20
   140048e6a:	pop    rbp
   140048e6b:	ret    
   140048e6c:	int3   
   140048e6d:	lea    rcx,[rdx+0x28]
   140048e74:	jmp    0x14000e7a0
   140048e79:	lea    rcx,[rdx+0x38]
   140048e80:	jmp    0x140004a6c
   140048e85:	mov    QWORD PTR [rsp+0x10],rdx
   140048e8a:	push   rbp
   140048e8b:	sub    rsp,0x20
   140048e8f:	mov    rbp,rdx
   140048e92:	mov    rdx,QWORD PTR [rbp+0x90]
   140048e99:	mov    rax,QWORD PTR [rdx]
   140048e9c:	movsxd rcx,DWORD PTR [rax+0x4]
   140048ea0:	add    rcx,rdx
   140048ea3:	mov    edx,DWORD PTR [rcx+0x10]
   140048ea6:	or     edx,0x4
   140048ea9:	mov    eax,edx
   140048eab:	or     eax,0x4
   140048eae:	cmp    QWORD PTR [rcx+0x48],0x0
   140048eb3:	cmove  edx,eax
   140048eb6:	mov    r8b,0x1
   140048eb9:	call   0x1400054f8
   140048ebe:	nop
   140048ebf:	lea    rax,[rip+0xfffffffffffc7543]        # 0x140010409
   140048ec6:	add    rsp,0x20
   140048eca:	pop    rbp
   140048ecb:	ret    
   140048ecc:	int3   
   140048ecd:	lea    rcx,[rdx+0x28]
   140048ed4:	jmp    0x14000e7a0
   140048ed9:	mov    QWORD PTR [rsp+0x10],rdx
   140048ede:	push   rbp
   140048edf:	sub    rsp,0x20
   140048ee3:	mov    rbp,rdx
   140048ee6:	mov    rdx,QWORD PTR [rbp+0x70]
   140048eea:	mov    rax,QWORD PTR [rdx]
   140048eed:	movsxd rcx,DWORD PTR [rax+0x4]
   140048ef1:	add    rcx,rdx
   140048ef4:	mov    edx,DWORD PTR [rcx+0x10]
   140048ef7:	or     edx,0x4
   140048efa:	mov    eax,edx
   140048efc:	or     eax,0x4
   140048eff:	cmp    QWORD PTR [rcx+0x48],0x0
   140048f04:	cmove  edx,eax
   140048f07:	mov    r8b,0x1
   140048f0a:	call   0x1400054f8
   140048f0f:	nop
   140048f10:	lea    rax,[rip+0xfffffffffffc7717]        # 0x14001062e
   140048f17:	add    rsp,0x20
   140048f1b:	pop    rbp
   140048f1c:	ret    
   140048f1d:	int3   
   140048f1e:	lea    rcx,[rdx+0x28]
   140048f25:	jmp    0x14000e7a0
   140048f2a:	mov    QWORD PTR [rsp+0x10],rdx
   140048f2f:	push   rbp
   140048f30:	sub    rsp,0x20
   140048f34:	mov    rbp,rdx
   140048f37:	mov    rdx,QWORD PTR [rbp+0x70]
   140048f3b:	mov    rax,QWORD PTR [rdx]
   140048f3e:	movsxd rcx,DWORD PTR [rax+0x4]
   140048f42:	add    rcx,rdx
   140048f45:	mov    edx,DWORD PTR [rcx+0x10]
   140048f48:	or     edx,0x4
   140048f4b:	mov    eax,edx
   140048f4d:	or     eax,0x4
   140048f50:	cmp    QWORD PTR [rcx+0x48],0x0
   140048f55:	cmove  edx,eax
   140048f58:	mov    r8b,0x1
   140048f5b:	call   0x1400054f8
   140048f60:	nop
   140048f61:	lea    rax,[rip+0xfffffffffffc78e9]        # 0x140010851
   140048f68:	add    rsp,0x20
   140048f6c:	pop    rbp
   140048f6d:	ret    
   140048f6e:	int3   
   140048f6f:	rex push rbp
   140048f71:	sub    rsp,0x20
   140048f75:	mov    rbp,rdx
   140048f78:	mov    edx,0x30
   140048f7d:	mov    rcx,QWORD PTR [rbp+0xb0]
   140048f84:	call   0x140026804
   140048f89:	add    rsp,0x20
   140048f8d:	pop    rbp
   140048f8e:	ret    
   140048f8f:	rex push rbp
   140048f91:	sub    rsp,0x20
   140048f95:	mov    rbp,rdx
   140048f98:	mov    eax,DWORD PTR [rbp+0xa0]
   140048f9e:	and    eax,0x1
   140048fa1:	test   eax,eax
   140048fa3:	je     0x140048fb5
   140048fa5:	and    DWORD PTR [rbp+0xa0],0xfffffffe
   140048fac:	lea    rcx,[rbp+0x28]
   140048fb0:	call   0x14000493c
   140048fb5:	add    rsp,0x20
   140048fb9:	pop    rbp
   140048fba:	ret    
   140048fbb:	mov    rcx,QWORD PTR [rdx+0xb0]
   140048fc2:	jmp    0x140004a60
   140048fc7:	rex push rbp
   140048fc9:	sub    rsp,0x20
   140048fcd:	mov    rbp,rdx
   140048fd0:	mov    edx,0x10
   140048fd5:	mov    rcx,QWORD PTR [rbp+0xa0]
   140048fdc:	call   0x140026804
   140048fe1:	add    rsp,0x20
   140048fe5:	pop    rbp
   140048fe6:	ret    
   140048fe7:	mov    QWORD PTR [rsp+0x10],rdx
   140048fec:	push   rbx
   140048fed:	push   rbp
   140048fee:	sub    rsp,0x38
   140048ff2:	mov    rbp,rdx
   140048ff5:	mov    rbx,QWORD PTR [rbp+0x40]
   140048ff9:	mov    rcx,QWORD PTR [rbx+0x10]
   140048ffd:	call   0x1400304c4
   140049002:	mov    rcx,QWORD PTR [rbx+0x20]
   140049006:	call   0x1400304c4
   14004900b:	mov    rcx,QWORD PTR [rbx+0x28]
   14004900f:	call   0x1400304c4
   140049014:	xor    edx,edx
   140049016:	xor    ecx,ecx
   140049018:	call   0x14002ab88
   14004901d:	nop
   14004901e:	lea    rcx,[rdx+0x40]
   140049025:	jmp    0x1400110f4
   14004902a:	lea    rcx,[rdx+0x38]
   140049031:	jmp    0x1400112e4
   140049036:	lea    rcx,[rdx+0x28]
   14004903d:	jmp    0x1400112e4
   140049042:	rex push rbp
   140049044:	sub    rsp,0x20
   140049048:	mov    rbp,rdx
   14004904b:	mov    rdx,QWORD PTR [rbp+0x28]
   14004904f:	mov    rcx,QWORD PTR [rbp+0x30]
   140049053:	call   0x140004794
   140049058:	add    rsp,0x20
   14004905c:	pop    rbp
   14004905d:	ret    
   14004905e:	lea    rcx,[rdx+0x30]
   140049065:	jmp    0x14000a98c
   14004906a:	lea    rcx,[rdx+0xd0]
   140049071:	jmp    0x14000a98c
   140049076:	lea    rcx,[rdx+0x60]
   14004907d:	jmp    0x14000a98c
   140049082:	lea    rcx,[rdx+0x40]
   140049089:	jmp    0x14000a98c
   14004908e:	lea    rcx,[rdx+0x80]
   140049095:	jmp    0x140006e88
   14004909a:	lea    rcx,[rdx+0x40]
   1400490a1:	jmp    0x14000a98c
   1400490a6:	lea    rcx,[rdx+0x40]
   1400490ad:	jmp    0x14000a98c
   1400490b2:	lea    rcx,[rdx+0x40]
   1400490b9:	jmp    0x14000a98c
   1400490be:	lea    rcx,[rdx+0x80]
   1400490c5:	jmp    0x140006e88
   1400490ca:	lea    rcx,[rdx+0x40]
   1400490d1:	jmp    0x14000a98c
   1400490d6:	lea    rcx,[rdx+0x50]
   1400490dd:	jmp    0x14000a98c
   1400490e2:	lea    rcx,[rdx+0x30]
   1400490e9:	jmp    0x14000a98c
   1400490ee:	lea    rcx,[rdx+0x30]
   1400490f5:	jmp    0x14000a98c
   1400490fa:	lea    rcx,[rdx+0x70]
   140049101:	jmp    0x14000a98c
   140049106:	lea    rcx,[rdx+0x50]
   14004910d:	jmp    0x14000a98c
   140049112:	int3   
   140049113:	int3   
   140049114:	int3   
   140049115:	int3   
   140049116:	int3   
   140049117:	int3   
   140049118:	int3   
   140049119:	int3   
   14004911a:	int3   
   14004911b:	int3   
   14004911c:	int3   
   14004911d:	int3   
   14004911e:	int3   
   14004911f:	int3   
   140049120:	lea    rcx,[rdx+0x28]
   140049127:	jmp    0x140012cc0
   14004912c:	lea    rcx,[rdx+0x30]
   140049133:	jmp    0x140006e50
   140049138:	lea    rcx,[rdx+0x118]
   14004913f:	jmp    0x14000a98c
   140049144:	int3   
   140049145:	int3   
   140049146:	int3   
   140049147:	int3   
   140049148:	int3   
   140049149:	int3   
   14004914a:	int3   
   14004914b:	int3   
   14004914c:	int3   
   14004914d:	int3   
   14004914e:	int3   
   14004914f:	int3   
   140049150:	rex push rbp
   140049152:	sub    rsp,0x20
   140049156:	mov    rbp,rdx
   140049159:	mov    eax,DWORD PTR [rbp+0x30]
   14004915c:	and    eax,0x1
   14004915f:	test   eax,eax
   140049161:	je     0x140049177
   140049163:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140049167:	mov    rcx,QWORD PTR [rbp+0x40]
   14004916b:	add    rcx,0xa8
   140049172:	call   0x140004728
   140049177:	add    rsp,0x20
   14004917b:	pop    rbp
   14004917c:	ret    
   14004917d:	lea    rcx,[rdx+0x50]
   140049184:	jmp    0x140006e50
   140049189:	lea    rcx,[rdx+0x138]
   140049190:	jmp    0x14000a98c
   140049195:	mov    rcx,QWORD PTR [rdx+0x28]
   14004919c:	jmp    0x14000a98c
   1400491a1:	lea    rcx,[rdx+0x30]
   1400491a8:	jmp    0x14000a98c
   1400491ad:	lea    rcx,[rdx+0x30]
   1400491b4:	jmp    0x14000a98c
   1400491b9:	lea    rcx,[rdx+0x30]
   1400491c0:	jmp    0x14000a98c
   1400491c5:	lea    rcx,[rdx+0x30]
   1400491cc:	jmp    0x14000a98c
   1400491d1:	mov    QWORD PTR [rsp+0x10],rdx
   1400491d6:	push   rbx
   1400491d7:	push   rbp
   1400491d8:	sub    rsp,0x28
   1400491dc:	mov    rbp,rdx
   1400491df:	mov    rbx,QWORD PTR [rbp+0x40]
   1400491e3:	mov    rcx,QWORD PTR [rbx]
   1400491e6:	test   rcx,rcx
   1400491e9:	je     0x14004920b
   1400491eb:	mov    rdx,QWORD PTR [rbx+0x10]
   1400491ef:	sub    rdx,rcx
   1400491f2:	mov    r8d,0x1
   1400491f8:	call   0x140004804
   1400491fd:	and    QWORD PTR [rbx],0x0
   140049201:	and    QWORD PTR [rbx+0x8],0x0
   140049206:	and    QWORD PTR [rbx+0x10],0x0
   14004920b:	xor    edx,edx
   14004920d:	xor    ecx,ecx
   14004920f:	call   0x14002ab88
   140049214:	nop
   140049215:	mov    QWORD PTR [rsp+0x10],rdx
   14004921a:	push   rbx
   14004921b:	push   rbp
   14004921c:	sub    rsp,0x28
   140049220:	mov    rbp,rdx
   140049223:	mov    rbx,QWORD PTR [rbp+0x40]
   140049227:	mov    rcx,QWORD PTR [rbx]
   14004922a:	test   rcx,rcx
   14004922d:	je     0x140049252
   14004922f:	mov    rdx,QWORD PTR [rbx+0x10]
   140049233:	sub    rdx,rcx
   140049236:	sar    rdx,1
   140049239:	mov    r8d,0x2
   14004923f:	call   0x140004804
   140049244:	and    QWORD PTR [rbx],0x0
   140049248:	and    QWORD PTR [rbx+0x8],0x0
   14004924d:	and    QWORD PTR [rbx+0x10],0x0
   140049252:	xor    edx,edx
   140049254:	xor    ecx,ecx
   140049256:	call   0x14002ab88
   14004925b:	nop
   14004925c:	lea    rcx,[rdx+0x68]
   140049263:	jmp    0x14000a374
   140049268:	lea    rcx,[rdx+0x78]
   14004926f:	jmp    0x14000a85c
   140049274:	rex push rbp
   140049276:	sub    rsp,0x20
   14004927a:	mov    rbp,rdx
   14004927d:	mov    rdx,QWORD PTR [rbp+0x40]
   140049281:	mov    rcx,QWORD PTR [rbp+0x48]
   140049285:	call   0x140004794
   14004928a:	add    rsp,0x20
   14004928e:	pop    rbp
   14004928f:	ret    
   140049290:	rex push rbp
   140049292:	sub    rsp,0x20
   140049296:	mov    rbp,rdx
   140049299:	mov    rdx,QWORD PTR [rbp+0x40]
   14004929d:	mov    rcx,QWORD PTR [rbp+0x48]
   1400492a1:	call   0x140004794
   1400492a6:	add    rsp,0x20
   1400492aa:	pop    rbp
   1400492ab:	ret    
   1400492ac:	rex push rbp
   1400492ae:	sub    rsp,0x20
   1400492b2:	mov    rbp,rdx
   1400492b5:	mov    eax,DWORD PTR [rbp+0x20]
   1400492b8:	and    eax,0x1
   1400492bb:	test   eax,eax
   1400492bd:	je     0x1400492cc
   1400492bf:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400492c3:	mov    rcx,QWORD PTR [rbp+0x40]
   1400492c7:	call   0x14000a98c
   1400492cc:	add    rsp,0x20
   1400492d0:	pop    rbp
   1400492d1:	ret    
   1400492d2:	mov    QWORD PTR [rsp+0x10],rdx
   1400492d7:	push   rbx
   1400492d8:	push   rbp
   1400492d9:	sub    rsp,0x28
   1400492dd:	mov    rbp,rdx
   1400492e0:	mov    rbx,QWORD PTR [rbp+0x50]
   1400492e4:	mov    rcx,QWORD PTR [rbx]
   1400492e7:	test   rcx,rcx
   1400492ea:	je     0x14004930f
   1400492ec:	mov    rdx,QWORD PTR [rbx+0x10]
   1400492f0:	sub    rdx,rcx
   1400492f3:	sar    rdx,1
   1400492f6:	mov    r8d,0x2
   1400492fc:	call   0x140004804
   140049301:	and    QWORD PTR [rbx],0x0
   140049305:	and    QWORD PTR [rbx+0x8],0x0
   14004930a:	and    QWORD PTR [rbx+0x10],0x0
   14004930f:	xor    edx,edx
   140049311:	xor    ecx,ecx
   140049313:	call   0x14002ab88
   140049318:	nop
   140049319:	mov    QWORD PTR [rsp+0x10],rdx
   14004931e:	push   rbx
   14004931f:	push   rbp
   140049320:	sub    rsp,0x28
   140049324:	mov    rbp,rdx
   140049327:	mov    rbx,QWORD PTR [rbp+0x40]
   14004932b:	mov    rcx,QWORD PTR [rbx]
   14004932e:	test   rcx,rcx
   140049331:	je     0x140049353
   140049333:	mov    rdx,QWORD PTR [rbx+0x10]
   140049337:	sub    rdx,rcx
   14004933a:	mov    r8d,0x1
   140049340:	call   0x140004804
   140049345:	and    QWORD PTR [rbx],0x0
   140049349:	and    QWORD PTR [rbx+0x8],0x0
   14004934e:	and    QWORD PTR [rbx+0x10],0x0
   140049353:	xor    edx,edx
   140049355:	xor    ecx,ecx
   140049357:	call   0x14002ab88
   14004935c:	nop
   14004935d:	lea    rcx,[rdx+0x30]
   140049364:	jmp    0x14000a374
   140049369:	lea    rcx,[rdx+0x50]
   140049370:	jmp    0x14000a98c
   140049375:	mov    QWORD PTR [rsp+0x10],rdx
   14004937a:	push   rbp
   14004937b:	sub    rsp,0x20
   14004937f:	mov    rbp,rdx
   140049382:	mov    r8d,0x2
   140049388:	mov    rdx,QWORD PTR [rbp+0x58]
   14004938c:	mov    rcx,QWORD PTR [rbp+0x50]
   140049390:	call   0x140004804
   140049395:	xor    edx,edx
   140049397:	xor    ecx,ecx
   140049399:	call   0x14002ab88
   14004939e:	nop
   14004939f:	mov    rcx,QWORD PTR [rdx+0x40]
   1400493a6:	jmp    0x14001a95c
   1400493ab:	mov    rcx,QWORD PTR [rdx+0x40]
   1400493b2:	jmp    0x14001a04c
   1400493b7:	rex push rbp
   1400493b9:	sub    rsp,0x20
   1400493bd:	mov    rbp,rdx
   1400493c0:	mov    edx,0x8
   1400493c5:	mov    rcx,QWORD PTR [rbp+0x40]
   1400493c9:	call   0x140026804
   1400493ce:	add    rsp,0x20
   1400493d2:	pop    rbp
   1400493d3:	ret    
   1400493d4:	mov    QWORD PTR [rsp+0x10],rdx
   1400493d9:	push   rbp
   1400493da:	sub    rsp,0x20
   1400493de:	mov    rbp,rdx
   1400493e1:	mov    r8d,0x8
   1400493e7:	mov    rdx,QWORD PTR [rbp+0x58]
   1400493eb:	mov    rcx,QWORD PTR [rbp+0x50]
   1400493ef:	call   0x140004804
   1400493f4:	xor    edx,edx
   1400493f6:	xor    ecx,ecx
   1400493f8:	call   0x14002ab88
   1400493fd:	nop
   1400493fe:	lea    rcx,[rdx+0x48]
   140049405:	jmp    0x140012cc0
   14004940a:	mov    QWORD PTR [rsp+0x10],rdx
   14004940f:	push   rbp
   140049410:	sub    rsp,0x20
   140049414:	mov    rbp,rdx
   140049417:	lea    rdx,[rip+0x2ae2]        # 0x14004bf00
   14004941e:	xor    ecx,ecx
   140049420:	call   0x14001a664
   140049425:	nop
   140049426:	lea    rax,[rip+0xfffffffffffd0df0]        # 0x14001a21d
   14004942d:	add    rsp,0x20
   140049431:	pop    rbp
   140049432:	ret    
   140049433:	int3   
   140049434:	lea    rcx,[rdx+0x40]
   14004943b:	jmp    0x140012cc0
   140049440:	lea    rcx,[rdx+0x50]
   140049447:	jmp    0x14000a98c
   14004944c:	lea    rcx,[rdx+0x70]
   140049453:	jmp    0x14000a998
   140049458:	lea    rcx,[rdx+0x78]
   14004945f:	jmp    0x140012cc0
   140049464:	mov    QWORD PTR [rsp+0x10],rdx
   140049469:	push   rbp
   14004946a:	sub    rsp,0x50
   14004946e:	mov    rbp,rdx
   140049471:	lea    rax,[rip+0xfffffffffffd139c]        # 0x14001a814
   140049478:	add    rsp,0x50
   14004947c:	pop    rbp
   14004947d:	ret    
   14004947e:	int3   
   14004947f:	mov    QWORD PTR [rsp+0x10],rdx
   140049484:	push   rbp
   140049485:	sub    rsp,0x20
   140049489:	mov    rbp,rdx
   14004948c:	mov    rcx,QWORD PTR [rbp+0x48]
   140049490:	mov    rax,QWORD PTR [rcx]
   140049493:	mov    QWORD PTR [rcx+0x8],rax
   140049497:	lea    rax,[rip+0xfffffffffffd15c6]        # 0x14001aa64
   14004949e:	add    rsp,0x20
   1400494a2:	pop    rbp
   1400494a3:	ret    
   1400494a4:	int3   
   1400494a5:	mov    QWORD PTR [rsp+0x10],rdx
   1400494aa:	push   rbp
   1400494ab:	sub    rsp,0x20
   1400494af:	mov    rbp,rdx
   1400494b2:	lea    rax,[rip+0xfffffffffffd1604]        # 0x14001aabd
   1400494b9:	add    rsp,0x20
   1400494bd:	pop    rbp
   1400494be:	ret    
   1400494bf:	int3   
   1400494c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400494c5:	push   rbp
   1400494c6:	sub    rsp,0x20
   1400494ca:	mov    rbp,rdx
   1400494cd:	mov    r8d,0x1
   1400494d3:	mov    rdx,QWORD PTR [rbp+0x58]
   1400494d7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400494db:	call   0x140004804
   1400494e0:	xor    edx,edx
   1400494e2:	xor    ecx,ecx
   1400494e4:	call   0x14002ab88
   1400494e9:	nop
   1400494ea:	mov    QWORD PTR [rsp+0x10],rdx
   1400494ef:	push   rbx
   1400494f0:	push   rbp
   1400494f1:	sub    rsp,0x28
   1400494f5:	mov    rbp,rdx
   1400494f8:	mov    rbx,QWORD PTR [rbp+0x40]
   1400494fc:	mov    rcx,QWORD PTR [rbx]
   1400494ff:	test   rcx,rcx
   140049502:	je     0x140049524
   140049504:	mov    rdx,QWORD PTR [rbx+0x10]
   140049508:	sub    rdx,rcx
   14004950b:	mov    r8d,0x1
   140049511:	call   0x140004804
   140049516:	and    QWORD PTR [rbx],0x0
   14004951a:	and    QWORD PTR [rbx+0x8],0x0
   14004951f:	and    QWORD PTR [rbx+0x10],0x0
   140049524:	xor    edx,edx
   140049526:	xor    ecx,ecx
   140049528:	call   0x14002ab88
   14004952d:	nop
   14004952e:	mov    QWORD PTR [rsp+0x10],rdx
   140049533:	push   rbp
   140049534:	sub    rsp,0x20
   140049538:	mov    rbp,rdx
   14004953b:	mov    edx,0x1
   140049540:	lea    r8d,[rdx+0x5f]
   140049544:	mov    rcx,QWORD PTR [rbp+0x40]
   140049548:	call   0x140004804
   14004954d:	xor    edx,edx
   14004954f:	xor    ecx,ecx
   140049551:	call   0x14002ab88
   140049556:	nop
   140049557:	mov    QWORD PTR [rsp+0x10],rdx
   14004955c:	push   rbx
   14004955d:	push   rbp
   14004955e:	push   rdi
   14004955f:	sub    rsp,0x30
   140049563:	mov    rbp,rdx
   140049566:	mov    rdi,QWORD PTR [rbp+0x80]
   14004956d:	lea    rcx,[rdi+0x40]
   140049571:	xor    r8d,r8d
   140049574:	mov    dl,0x1
   140049576:	call   0x14000b6b0
   14004957b:	xor    r8d,r8d
   14004957e:	mov    dl,0x1
   140049580:	lea    rcx,[rdi+0x20]
   140049584:	call   0x14000b6b0
   140049589:	mov    edx,0x1
   14004958e:	lea    r8d,[rdx+0x5f]
   140049592:	mov    rcx,rdi
   140049595:	call   0x140004804
   14004959a:	xor    edx,edx
   14004959c:	xor    ecx,ecx
   14004959e:	call   0x14002ab88
   1400495a3:	nop
   1400495a4:	lea    rcx,[rdx+0x48]
   1400495ab:	jmp    0x14000a98c
   1400495b0:	lea    rcx,[rdx+0x70]
   1400495b7:	jmp    0x14001b2c0
   1400495bc:	lea    rcx,[rdx+0x48]
   1400495c3:	jmp    0x14000a98c
   1400495c8:	rex push rbp
   1400495ca:	sub    rsp,0x20
   1400495ce:	mov    rbp,rdx
   1400495d1:	mov    eax,DWORD PTR [rbp+0x20]
   1400495d4:	and    eax,0x1
   1400495d7:	test   eax,eax
   1400495d9:	je     0x1400495e8
   1400495db:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400495df:	mov    rcx,QWORD PTR [rbp+0x40]
   1400495e3:	call   0x1400126a0
   1400495e8:	add    rsp,0x20
   1400495ec:	pop    rbp
   1400495ed:	ret    
   1400495ee:	lea    rcx,[rdx+0x48]
   1400495f5:	jmp    0x14000a98c
   1400495fa:	lea    rcx,[rdx+0x28]
   140049601:	jmp    0x1400126a0
   140049606:	mov    QWORD PTR [rsp+0x10],rdx
   14004960b:	push   rbp
   14004960c:	sub    rsp,0x20
   140049610:	mov    rbp,rdx
   140049613:	mov    edx,0x1
   140049618:	lea    r8d,[rdx+0x5f]
   14004961c:	mov    rcx,QWORD PTR [rbp+0x40]
   140049620:	call   0x140004804
   140049625:	xor    edx,edx
   140049627:	xor    ecx,ecx
   140049629:	call   0x14002ab88
   14004962e:	nop
   14004962f:	mov    rcx,QWORD PTR [rdx+0x40]
   140049636:	jmp    0x14000b69c
   14004963b:	mov    QWORD PTR [rsp+0x10],rdx
   140049640:	push   rbp
   140049641:	sub    rsp,0x20
   140049645:	mov    rbp,rdx
   140049648:	mov    rcx,QWORD PTR [rbp+0x40]
   14004964c:	mov    r8,QWORD PTR [rcx]
   14004964f:	mov    r9,r8
   140049652:	mov    r8,QWORD PTR [r8]
   140049655:	lea    rdx,[rbp+0x50]
   140049659:	call   0x14000c18c
   14004965e:	xor    edx,edx
   140049660:	xor    ecx,ecx
   140049662:	call   0x14002ab88
   140049667:	nop
   140049668:	rex push rbp
   14004966a:	sub    rsp,0x20
   14004966e:	mov    rbp,rdx
   140049671:	mov    rdx,QWORD PTR [rbp+0x48]
   140049675:	mov    rcx,QWORD PTR [rbp+0x50]
   140049679:	call   0x140004794
   14004967e:	add    rsp,0x20
   140049682:	pop    rbp
   140049683:	ret    
   140049684:	mov    QWORD PTR [rsp+0x10],rdx
   140049689:	push   rbp
   14004968a:	sub    rsp,0x20
   14004968e:	mov    rbp,rdx
   140049691:	mov    edx,0x1
   140049696:	lea    r8d,[rdx+0x5f]
   14004969a:	mov    rcx,QWORD PTR [rbp+0x40]
   14004969e:	call   0x140004804
   1400496a3:	xor    edx,edx
   1400496a5:	xor    ecx,ecx
   1400496a7:	call   0x14002ab88
   1400496ac:	nop
   1400496ad:	mov    QWORD PTR [rsp+0x10],rdx
   1400496b2:	push   rbp
   1400496b3:	sub    rsp,0x20
   1400496b7:	mov    rbp,rdx
   1400496ba:	mov    rdx,QWORD PTR [rbp+0x20]
   1400496be:	mov    rcx,QWORD PTR [rbp+0x50]
   1400496c2:	call   0x14000cf34
   1400496c7:	xor    edx,edx
   1400496c9:	xor    ecx,ecx
   1400496cb:	call   0x14002ab88
   1400496d0:	nop
   1400496d1:	mov    QWORD PTR [rsp+0x10],rdx
   1400496d6:	push   rbp
   1400496d7:	sub    rsp,0x20
   1400496db:	mov    rbp,rdx
   1400496de:	mov    r8d,0x1
   1400496e4:	mov    rdx,QWORD PTR [rbp+0x20]
   1400496e8:	mov    rcx,QWORD PTR [rbp+0x28]
   1400496ec:	call   0x140004804
   1400496f1:	xor    edx,edx
   1400496f3:	xor    ecx,ecx
   1400496f5:	call   0x14002ab88
   1400496fa:	nop
   1400496fb:	mov    rcx,QWORD PTR [rdx+0x40]
   140049702:	jmp    0x14000a98c
   140049707:	mov    rcx,QWORD PTR [rdx+0x40]
   14004970e:	add    rcx,0x20
   140049712:	jmp    0x14000a98c
   140049717:	mov    rcx,QWORD PTR [rdx+0x58]
   14004971e:	jmp    0x14001cb74
   140049723:	mov    rcx,QWORD PTR [rdx+0x58]
   14004972a:	add    rcx,0x10
   14004972e:	jmp    0x14000843c
   140049733:	mov    rcx,QWORD PTR [rdx+0x58]
   14004973a:	add    rcx,0x20
   14004973e:	jmp    0x14001cab8
   140049743:	mov    rcx,QWORD PTR [rdx+0x58]
   14004974a:	add    rcx,0x28
   14004974e:	jmp    0x14001cab8
   140049753:	mov    rcx,QWORD PTR [rdx+0x58]
   14004975a:	add    rcx,0x30
   14004975e:	jmp    0x14001cab8
   140049763:	lea    rcx,[rdx+0x60]
   14004976a:	jmp    0x140006e50
   14004976f:	lea    rcx,[rdx+0x148]
   140049776:	jmp    0x14000a98c
   14004977b:	lea    rcx,[rdx+0x60]
   140049782:	jmp    0x140006e50
   140049787:	lea    rcx,[rdx+0x148]
   14004978e:	jmp    0x14000a98c
   140049793:	lea    rcx,[rdx+0x188]
   14004979a:	jmp    0x14000a98c
   14004979f:	lea    rcx,[rdx+0x168]
   1400497a6:	jmp    0x14000a98c
   1400497ab:	lea    rcx,[rdx+0x60]
   1400497b2:	jmp    0x140006e50
   1400497b7:	lea    rcx,[rdx+0x148]
   1400497be:	jmp    0x14000a98c
   1400497c3:	lea    rcx,[rdx+0x60]
   1400497ca:	jmp    0x140006e50
   1400497cf:	lea    rcx,[rdx+0x148]
   1400497d6:	jmp    0x14000a98c
   1400497db:	lea    rcx,[rdx+0x60]
   1400497e2:	jmp    0x140006e50
   1400497e7:	lea    rcx,[rdx+0x148]
   1400497ee:	jmp    0x14000a98c
   1400497f3:	lea    rcx,[rdx+0x60]
   1400497fa:	jmp    0x140006e50
   1400497ff:	lea    rcx,[rdx+0x148]
   140049806:	jmp    0x14000a98c
   14004980b:	lea    rcx,[rdx+0x60]
   140049812:	jmp    0x140006e50
   140049817:	lea    rcx,[rdx+0x148]
   14004981e:	jmp    0x14000a98c
   140049823:	lea    rcx,[rdx+0x2c0]
   14004982a:	jmp    0x14000a98c
   14004982f:	lea    rcx,[rdx+0x1b0]
   140049836:	jmp    0x140006e50
   14004983b:	lea    rcx,[rdx+0x148]
   140049842:	jmp    0x14000a98c
   140049847:	lea    rcx,[rdx+0x2a0]
   14004984e:	jmp    0x14000a98c
   140049853:	rex push rbp
   140049855:	sub    rsp,0x20
   140049859:	mov    rbp,rdx
   14004985c:	mov    eax,DWORD PTR [rbp+0x50]
   14004985f:	and    eax,0x1
   140049862:	test   eax,eax
   140049864:	je     0x14004987a
   140049866:	and    DWORD PTR [rbp+0x50],0xfffffffe
   14004986a:	mov    rcx,QWORD PTR [rbp+0x40]
   14004986e:	add    rcx,0xa0
   140049875:	call   0x140004728
   14004987a:	add    rsp,0x20
   14004987e:	pop    rbp
   14004987f:	ret    
   140049880:	rex push rbp
   140049882:	sub    rsp,0x20
   140049886:	mov    rbp,rdx
   140049889:	mov    eax,DWORD PTR [rbp+0x30]
   14004988c:	and    eax,0x1
   14004988f:	test   eax,eax
   140049891:	je     0x1400498a7
   140049893:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140049897:	mov    rcx,QWORD PTR [rbp+0x50]
   14004989b:	add    rcx,0xa8
   1400498a2:	call   0x140004728
   1400498a7:	add    rsp,0x20
   1400498ab:	pop    rbp
   1400498ac:	ret    
   1400498ad:	lea    rcx,[rdx+0x38]
   1400498b4:	jmp    0x14000e7a0
   1400498b9:	lea    rcx,[rdx+0x60]
   1400498c0:	jmp    0x140004a6c
   1400498c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400498ca:	push   rbp
   1400498cb:	sub    rsp,0x30
   1400498cf:	mov    rbp,rdx
   1400498d2:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400498d9:	mov    rax,QWORD PTR [rcx]
   1400498dc:	movsxd rdx,DWORD PTR [rax+0x4]
   1400498e0:	add    rdx,rcx
   1400498e3:	mov    ecx,DWORD PTR [rdx+0x10]
   1400498e6:	or     ecx,0x4
   1400498e9:	mov    eax,ecx
   1400498eb:	or     eax,0x4
   1400498ee:	cmp    QWORD PTR [rdx+0x48],0x0
   1400498f3:	cmove  ecx,eax
   1400498f6:	and    ecx,0x17
   1400498f9:	mov    DWORD PTR [rdx+0x10],ecx
   1400498fc:	test   DWORD PTR [rdx+0x14],ecx
   1400498ff:	jne    0x14004990a
   140049901:	lea    rax,[rip+0xfffffffffffd33ca]        # 0x14001ccd2
   140049908:	jmp    0x140049914
   14004990a:	xor    edx,edx
   14004990c:	xor    ecx,ecx
   14004990e:	call   0x14002ab88
   140049913:	nop
   140049914:	add    rsp,0x30
   140049918:	pop    rbp
   140049919:	ret    
   14004991a:	int3   
   14004991b:	lea    rcx,[rdx+0x60]
   140049922:	jmp    0x14000a85c
   140049927:	lea    rcx,[rdx+0x48]
   14004992e:	jmp    0x14000a85c
   140049933:	lea    rcx,[rdx+0x88]
   14004993a:	jmp    0x140006e50
   14004993f:	lea    rcx,[rdx+0x170]
   140049946:	jmp    0x14000a98c
   14004994b:	lea    rcx,[rdx+0x88]
   140049952:	jmp    0x140006e50
   140049957:	lea    rcx,[rdx+0x170]
   14004995e:	jmp    0x14000a98c
   140049963:	rex push rbp
   140049965:	sub    rsp,0x20
   140049969:	mov    rbp,rdx
   14004996c:	mov    edx,0x48
   140049971:	mov    rcx,QWORD PTR [rbp+0x88]
   140049978:	call   0x140026804
   14004997d:	add    rsp,0x20
   140049981:	pop    rbp
   140049982:	ret    
   140049983:	lea    rcx,[rdx+0x88]
   14004998a:	jmp    0x14001ca80
   14004998f:	rex push rbp
   140049991:	sub    rsp,0x20
   140049995:	mov    rbp,rdx
   140049998:	mov    edx,0x20
   14004999d:	mov    rcx,QWORD PTR [rbp+0x30]
   1400499a1:	call   0x140026804
   1400499a6:	add    rsp,0x20
   1400499aa:	pop    rbp
   1400499ab:	ret    
   1400499ac:	rex push rbp
   1400499ae:	sub    rsp,0x20
   1400499b2:	mov    rbp,rdx
   1400499b5:	mov    eax,DWORD PTR [rbp+0x20]
   1400499b8:	and    eax,0x1
   1400499bb:	test   eax,eax
   1400499bd:	je     0x1400499cc
   1400499bf:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400499c3:	mov    rcx,QWORD PTR [rbp+0x70]
   1400499c7:	call   0x14001ca64
   1400499cc:	add    rsp,0x20
   1400499d0:	pop    rbp
   1400499d1:	ret    
   1400499d2:	lea    rcx,[rdx+0x38]
   1400499d9:	jmp    0x14001ca64
   1400499de:	lea    rcx,[rdx+0x50]
   1400499e5:	jmp    0x14000a85c
   1400499ea:	lea    rcx,[rdx+0x48]
   1400499f1:	jmp    0x14001ca9c
   1400499f6:	lea    rcx,[rdx+0x70]
   1400499fd:	jmp    0x14000a85c
   140049a02:	rex push rbp
   140049a04:	sub    rsp,0x20
   140049a08:	mov    rbp,rdx
   140049a0b:	mov    edx,0x30
   140049a10:	mov    rcx,QWORD PTR [rbp+0x48]
   140049a14:	call   0x140026804
   140049a19:	add    rsp,0x20
   140049a1d:	pop    rbp
   140049a1e:	ret    
   140049a1f:	rex push rbp
   140049a21:	sub    rsp,0x20
   140049a25:	mov    rbp,rdx
   140049a28:	mov    eax,DWORD PTR [rbp+0x40]
   140049a2b:	and    eax,0x1
   140049a2e:	test   eax,eax
   140049a30:	je     0x140049a42
   140049a32:	and    DWORD PTR [rbp+0x40],0xfffffffe
   140049a36:	mov    rcx,QWORD PTR [rbp+0x90]
   140049a3d:	call   0x14000a800
   140049a42:	add    rsp,0x20
   140049a46:	pop    rbp
   140049a47:	ret    
   140049a48:	lea    rcx,[rdx+0x130]
   140049a4f:	jmp    0x14000a98c
   140049a54:	lea    rcx,[rdx+0x20]
   140049a5b:	jmp    0x140006e50
   140049a60:	lea    rcx,[rdx+0x110]
   140049a67:	jmp    0x14000a98c
   140049a6c:	mov    QWORD PTR [rsp+0x10],rdx
   140049a71:	push   rbp
   140049a72:	sub    rsp,0x20
   140049a76:	mov    rbp,rdx
   140049a79:	lea    rax,[rip+0xfffffffffffd3e44]        # 0x14001d8c4
   140049a80:	add    rsp,0x20
   140049a84:	pop    rbp
   140049a85:	ret    
   140049a86:	int3   
   140049a87:	lea    rcx,[rdx+0x20]
   140049a8e:	jmp    0x140006e50
   140049a93:	lea    rcx,[rdx+0x110]
   140049a9a:	jmp    0x14000a98c
   140049a9f:	lea    rcx,[rdx+0x20]
   140049aa6:	jmp    0x140006e50
   140049aab:	lea    rcx,[rdx+0x110]
   140049ab2:	jmp    0x14000a98c
   140049ab7:	lea    rcx,[rdx+0x20]
   140049abe:	jmp    0x140006e50
   140049ac3:	lea    rcx,[rdx+0x110]
   140049aca:	jmp    0x14000a98c
   140049acf:	lea    rcx,[rdx+0x20]
   140049ad6:	jmp    0x140006e50
   140049adb:	lea    rcx,[rdx+0x110]
   140049ae2:	jmp    0x14000a98c
   140049ae7:	lea    rcx,[rdx+0x20]
   140049aee:	jmp    0x140006e50
   140049af3:	lea    rcx,[rdx+0x110]
   140049afa:	jmp    0x14000a98c
   140049aff:	lea    rcx,[rdx+0x20]
   140049b06:	jmp    0x140006e50
   140049b0b:	lea    rcx,[rdx+0x110]
   140049b12:	jmp    0x14000a98c
   140049b17:	mov    QWORD PTR [rsp+0x10],rdx
   140049b1c:	push   rbp
   140049b1d:	sub    rsp,0x20
   140049b21:	mov    rbp,rdx
   140049b24:	mov    edx,0x1
   140049b29:	lea    r8d,[rdx+0x5f]
   140049b2d:	mov    rcx,QWORD PTR [rbp+0x40]
   140049b31:	call   0x140004804
   140049b36:	xor    edx,edx
   140049b38:	xor    ecx,ecx
   140049b3a:	call   0x14002ab88
   140049b3f:	nop
   140049b40:	lea    rcx,[rdx+0x130]
   140049b47:	jmp    0x14000a98c
   140049b4c:	lea    rcx,[rdx+0x170]
   140049b53:	jmp    0x14000a98c
   140049b58:	lea    rcx,[rdx+0x280]
   140049b5f:	jmp    0x14000a98c
   140049b64:	lea    rcx,[rdx+0x150]
   140049b6b:	jmp    0x14000a98c
   140049b70:	lea    rcx,[rdx+0x190]
   140049b77:	jmp    0x140006e50
   140049b7c:	lea    rcx,[rdx+0x150]
   140049b83:	jmp    0x14000a98c
   140049b88:	lea    rcx,[rdx+0x48]
   140049b8f:	jmp    0x140006e50
   140049b94:	lea    rcx,[rdx+0x170]
   140049b9b:	jmp    0x14000a98c
   140049ba0:	lea    rcx,[rdx+0x40]
   140049ba7:	jmp    0x140006e50
   140049bac:	lea    rcx,[rdx+0x128]
   140049bb3:	jmp    0x14000a98c
   140049bb8:	lea    rcx,[rdx+0x128]
   140049bbf:	jmp    0x14000a374
   140049bc4:	lea    rcx,[rdx+0x40]
   140049bcb:	jmp    0x140006e50
   140049bd0:	lea    rcx,[rdx+0x148]
   140049bd7:	jmp    0x14000a98c
   140049bdc:	lea    rcx,[rdx+0x38]
   140049be3:	jmp    0x1400126a0
   140049be8:	lea    rcx,[rdx+0x60]
   140049bef:	jmp    0x14000a98c
   140049bf4:	lea    rcx,[rdx+0x60]
   140049bfb:	jmp    0x14000a98c
   140049c00:	lea    rcx,[rdx+0x60]
   140049c07:	jmp    0x1400126a0
   140049c0c:	lea    rcx,[rdx+0x80]
   140049c13:	jmp    0x14000a98c
   140049c18:	lea    rcx,[rdx+0x80]
   140049c1f:	jmp    0x14000a98c
   140049c24:	lea    rcx,[rdx+0x160]
   140049c2b:	jmp    0x14000a98c
   140049c30:	lea    rcx,[rdx+0x180]
   140049c37:	jmp    0x14000a98c
   140049c3c:	lea    rcx,[rdx+0x80]
   140049c43:	jmp    0x14000a98c
   140049c48:	lea    rcx,[rdx+0x60]
   140049c4f:	jmp    0x14000a98c
   140049c54:	lea    rcx,[rdx+0x40]
   140049c5b:	jmp    0x140006e50
   140049c60:	lea    rcx,[rdx+0x128]
   140049c67:	jmp    0x14000a98c
   140049c6c:	lea    rcx,[rdx+0xb0]
   140049c73:	jmp    0x140006e50
   140049c78:	lea    rcx,[rdx+0x198]
   140049c7f:	jmp    0x14000a98c
   140049c84:	rex push rbp
   140049c86:	sub    rsp,0x20
   140049c8a:	mov    rbp,rdx
   140049c8d:	mov    eax,DWORD PTR [rbp+0x60]
   140049c90:	and    eax,0x1
   140049c93:	test   eax,eax
   140049c95:	je     0x140049cab
   140049c97:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140049c9b:	mov    rcx,QWORD PTR [rbp+0x50]
   140049c9f:	add    rcx,0xa8
   140049ca6:	call   0x140004728
   140049cab:	add    rsp,0x20
   140049caf:	pop    rbp
   140049cb0:	ret    
   140049cb1:	rex push rbp
   140049cb3:	sub    rsp,0x20
   140049cb7:	mov    rbp,rdx
   140049cba:	mov    eax,DWORD PTR [rbp+0x30]
   140049cbd:	and    eax,0x1
   140049cc0:	test   eax,eax
   140049cc2:	je     0x140049cd8
   140049cc4:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140049cc8:	mov    rcx,QWORD PTR [rbp+0x40]
   140049ccc:	add    rcx,0xa8
   140049cd3:	call   0x140004728
   140049cd8:	add    rsp,0x20
   140049cdc:	pop    rbp
   140049cdd:	ret    
   140049cde:	lea    rcx,[rdx+0x48]
   140049ce5:	jmp    0x14000a98c
   140049cea:	lea    rcx,[rdx+0x38]
   140049cf1:	jmp    0x14000e7a0
   140049cf6:	lea    rcx,[rdx+0x60]
   140049cfd:	jmp    0x140004a6c
   140049d02:	mov    QWORD PTR [rsp+0x10],rdx
   140049d07:	push   rbp
   140049d08:	sub    rsp,0x30
   140049d0c:	mov    rbp,rdx
   140049d0f:	mov    rcx,QWORD PTR [rbp+0xa0]
   140049d16:	mov    rax,QWORD PTR [rcx]
   140049d19:	movsxd rdx,DWORD PTR [rax+0x4]
   140049d1d:	add    rdx,rcx
   140049d20:	mov    ecx,DWORD PTR [rdx+0x10]
   140049d23:	or     ecx,0x4
   140049d26:	mov    eax,ecx
   140049d28:	or     eax,0x4
   140049d2b:	cmp    QWORD PTR [rdx+0x48],0x0
   140049d30:	cmove  ecx,eax
   140049d33:	and    ecx,0x17
   140049d36:	mov    DWORD PTR [rdx+0x10],ecx
   140049d39:	test   DWORD PTR [rdx+0x14],ecx
   140049d3c:	jne    0x140049d47
   140049d3e:	lea    rax,[rip+0xfffffffffffd5153]        # 0x14001ee98
   140049d45:	jmp    0x140049d51
   140049d47:	xor    edx,edx
   140049d49:	xor    ecx,ecx
   140049d4b:	call   0x14002ab88
   140049d50:	nop
   140049d51:	add    rsp,0x30
   140049d55:	pop    rbp
   140049d56:	ret    
   140049d57:	int3   
   140049d58:	lea    rcx,[rdx+0x30]
   140049d5f:	jmp    0x140006e50
   140049d64:	lea    rcx,[rdx+0x70]
   140049d6b:	jmp    0x140006e50
   140049d70:	lea    rcx,[rdx+0x158]
   140049d77:	jmp    0x14000a98c
   140049d7c:	lea    rcx,[rdx+0x40]
   140049d83:	jmp    0x14000a85c
   140049d88:	lea    rcx,[rdx+0x70]
   140049d8f:	jmp    0x140006e50
   140049d94:	lea    rcx,[rdx+0x158]
   140049d9b:	jmp    0x14000a98c
   140049da0:	rex push rbp
   140049da2:	sub    rsp,0x20
   140049da6:	mov    rbp,rdx
   140049da9:	mov    eax,DWORD PTR [rbp+0x58]
   140049dac:	and    eax,0x1
   140049daf:	test   eax,eax
   140049db1:	je     0x140049dc0
   140049db3:	and    DWORD PTR [rbp+0x58],0xfffffffe
   140049db7:	mov    rcx,QWORD PTR [rbp+0x68]
   140049dbb:	call   0x140012650
   140049dc0:	add    rsp,0x20
   140049dc4:	pop    rbp
   140049dc5:	ret    
   140049dc6:	lea    rcx,[rdx+0x158]
   140049dcd:	jmp    0x14000a98c
   140049dd2:	lea    rcx,[rdx+0x70]
   140049dd9:	jmp    0x140006e50
   140049dde:	lea    rcx,[rdx+0x158]
   140049de5:	jmp    0x14000a98c
   140049dea:	lea    rcx,[rdx+0x70]
   140049df1:	jmp    0x140006e50
   140049df6:	lea    rcx,[rdx+0x158]
   140049dfd:	jmp    0x14000a98c
   140049e02:	lea    rcx,[rdx+0x70]
   140049e09:	jmp    0x140006e50
   140049e0e:	lea    rcx,[rdx+0x158]
   140049e15:	jmp    0x14000a98c
   140049e1a:	lea    rcx,[rdx+0x138]
   140049e21:	jmp    0x14000a98c
   140049e26:	lea    rcx,[rdx+0x50]
   140049e2d:	jmp    0x140006e50
   140049e32:	lea    rcx,[rdx+0x158]
   140049e39:	jmp    0x14000a98c
   140049e3e:	lea    rcx,[rdx+0x50]
   140049e45:	jmp    0x140006e50
   140049e4a:	lea    rcx,[rdx+0x158]
   140049e51:	jmp    0x14000a98c
   140049e56:	mov    QWORD PTR [rsp+0x10],rdx
   140049e5b:	push   rbp
   140049e5c:	sub    rsp,0x20
   140049e60:	mov    rbp,rdx
   140049e63:	mov    r8d,0x1
   140049e69:	mov    rdx,QWORD PTR [rbp+0x58]
   140049e6d:	mov    rcx,QWORD PTR [rbp+0x50]
   140049e71:	call   0x140004804
   140049e76:	xor    edx,edx
   140049e78:	xor    ecx,ecx
   140049e7a:	call   0x14002ab88
   140049e7f:	nop
   140049e80:	lea    rcx,[rdx+0x20]
   140049e87:	jmp    0x14001f054
   140049e8c:	mov    QWORD PTR [rsp+0x10],rdx
   140049e91:	push   rbp
   140049e92:	sub    rsp,0x20
   140049e96:	mov    rbp,rdx
   140049e99:	lea    rax,[rip+0xfffffffffffd5dcc]        # 0x14001fc6c
   140049ea0:	add    rsp,0x20
   140049ea4:	pop    rbp
   140049ea5:	ret    
   140049ea6:	int3   
   140049ea7:	lea    rcx,[rdx+0x20]
   140049eae:	jmp    0x14001f054
   140049eb3:	lea    rcx,[rdx+0x30]
   140049eba:	jmp    0x140012650
   140049ebf:	mov    QWORD PTR [rsp+0x10],rdx
   140049ec4:	push   rbp
   140049ec5:	sub    rsp,0x20
   140049ec9:	mov    rbp,rdx
   140049ecc:	lea    rax,[rip+0xfffffffffffd5eee]        # 0x14001fdc1
   140049ed3:	add    rsp,0x20
   140049ed7:	pop    rbp
   140049ed8:	ret    
   140049ed9:	int3   
   140049eda:	mov    QWORD PTR [rsp+0x10],rdx
   140049edf:	push   rbx
   140049ee0:	push   rbp
   140049ee1:	sub    rsp,0x28
   140049ee5:	mov    rbp,rdx
   140049ee8:	mov    rbx,QWORD PTR [rbp+0x40]
   140049eec:	mov    rcx,QWORD PTR [rbx]
   140049eef:	test   rcx,rcx
   140049ef2:	je     0x140049f14
   140049ef4:	mov    rdx,QWORD PTR [rbx+0x10]
   140049ef8:	sub    rdx,rcx
   140049efb:	mov    r8d,0x1
   140049f01:	call   0x140004804
   140049f06:	and    QWORD PTR [rbx],0x0
   140049f0a:	and    QWORD PTR [rbx+0x8],0x0
   140049f0f:	and    QWORD PTR [rbx+0x10],0x0
   140049f14:	xor    edx,edx
   140049f16:	xor    ecx,ecx
   140049f18:	call   0x14002ab88
   140049f1d:	nop
   140049f1e:	mov    QWORD PTR [rsp+0x10],rdx
   140049f23:	push   rbp
   140049f24:	sub    rsp,0x20
   140049f28:	mov    rbp,rdx
   140049f2b:	lea    rax,[rip+0xfffffffffffd5f4e]        # 0x14001fe80
   140049f32:	add    rsp,0x20
   140049f36:	pop    rbp
   140049f37:	ret    
   140049f38:	int3   
   140049f39:	mov    QWORD PTR [rsp+0x10],rdx
   140049f3e:	push   rbp
   140049f3f:	sub    rsp,0x20
   140049f43:	mov    rbp,rdx
   140049f46:	lea    rax,[rip+0xfffffffffffd644d]        # 0x14002039a
   140049f4d:	add    rsp,0x20
   140049f51:	pop    rbp
   140049f52:	ret    
   140049f53:	int3   
   140049f54:	rex push rbp
   140049f56:	sub    rsp,0x20
   140049f5a:	mov    rbp,rdx
   140049f5d:	mov    eax,DWORD PTR [rbp+0x60]
   140049f60:	and    eax,0x1
   140049f63:	test   eax,eax
   140049f65:	je     0x140049f7b
   140049f67:	and    DWORD PTR [rbp+0x60],0xfffffffe
   140049f6b:	mov    rcx,QWORD PTR [rbp+0x50]
   140049f6f:	add    rcx,0xa0
   140049f76:	call   0x140004728
   140049f7b:	add    rsp,0x20
   140049f7f:	pop    rbp
   140049f80:	ret    
   140049f81:	mov    rcx,QWORD PTR [rdx+0x50]
   140049f88:	add    rcx,0x18
   140049f8c:	jmp    0x14000a98c
   140049f91:	mov    rcx,QWORD PTR [rdx+0x50]
   140049f98:	add    rcx,0x38
   140049f9c:	jmp    0x14000a98c
   140049fa1:	mov    rcx,QWORD PTR [rdx+0x50]
   140049fa8:	add    rcx,0x58
   140049fac:	jmp    0x14000a98c
   140049fb1:	rex push rbp
   140049fb3:	sub    rsp,0x20
   140049fb7:	mov    rbp,rdx
   140049fba:	mov    eax,DWORD PTR [rbp+0x50]
   140049fbd:	and    eax,0x1
   140049fc0:	test   eax,eax
   140049fc2:	je     0x140049fd8
   140049fc4:	and    DWORD PTR [rbp+0x50],0xfffffffe
   140049fc8:	mov    rcx,QWORD PTR [rbp+0x40]
   140049fcc:	add    rcx,0xa0
   140049fd3:	call   0x140004728
   140049fd8:	add    rsp,0x20
   140049fdc:	pop    rbp
   140049fdd:	ret    
   140049fde:	mov    rcx,QWORD PTR [rdx+0x40]
   140049fe5:	add    rcx,0x18
   140049fe9:	jmp    0x14000a98c
   140049fee:	mov    rcx,QWORD PTR [rdx+0x40]
   140049ff5:	add    rcx,0x38
   140049ff9:	jmp    0x14000a98c
   140049ffe:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a005:	add    rcx,0x58
   14004a009:	jmp    0x14000a98c
   14004a00e:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a015:	add    rcx,0x78
   14004a019:	jmp    0x14000a998
   14004a01e:	rex push rbp
   14004a020:	sub    rsp,0x20
   14004a024:	mov    rbp,rdx
   14004a027:	mov    eax,DWORD PTR [rbp+0x68]
   14004a02a:	and    eax,0x1
   14004a02d:	test   eax,eax
   14004a02f:	je     0x14004a045
   14004a031:	and    DWORD PTR [rbp+0x68],0xfffffffe
   14004a035:	mov    rcx,QWORD PTR [rbp+0x60]
   14004a039:	add    rcx,0xa0
   14004a040:	call   0x140004728
   14004a045:	add    rsp,0x20
   14004a049:	pop    rbp
   14004a04a:	ret    
   14004a04b:	mov    rcx,QWORD PTR [rdx+0x60]
   14004a052:	add    rcx,0x18
   14004a056:	jmp    0x14000a98c
   14004a05b:	mov    rcx,QWORD PTR [rdx+0x60]
   14004a062:	add    rcx,0x38
   14004a066:	jmp    0x14000a98c
   14004a06b:	mov    rcx,QWORD PTR [rdx+0x60]
   14004a072:	add    rcx,0x58
   14004a076:	jmp    0x14000a98c
   14004a07b:	mov    rcx,QWORD PTR [rdx+0x60]
   14004a082:	add    rcx,0x78
   14004a086:	jmp    0x14000a998
   14004a08b:	lea    rcx,[rdx+0x38]
   14004a092:	jmp    0x14000a98c
   14004a097:	rex push rbp
   14004a099:	sub    rsp,0x20
   14004a09d:	mov    rbp,rdx
   14004a0a0:	mov    eax,DWORD PTR [rbp+0x50]
   14004a0a3:	and    eax,0x1
   14004a0a6:	test   eax,eax
   14004a0a8:	je     0x14004a0bb
   14004a0aa:	and    DWORD PTR [rbp+0x50],0xfffffffe
   14004a0ae:	mov    rcx,QWORD PTR [rbp+0x40]
   14004a0b2:	add    rcx,0x20
   14004a0b6:	call   0x1400213a4
   14004a0bb:	add    rsp,0x20
   14004a0bf:	pop    rbp
   14004a0c0:	ret    
   14004a0c1:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a0c8:	add    rcx,0x18
   14004a0cc:	jmp    0x14002143c
   14004a0d1:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a0d8:	jmp    0x140021464
   14004a0dd:	rex push rbp
   14004a0df:	sub    rsp,0x20
   14004a0e3:	mov    rbp,rdx
   14004a0e6:	mov    eax,DWORD PTR [rbp+0x50]
   14004a0e9:	and    eax,0x1
   14004a0ec:	test   eax,eax
   14004a0ee:	je     0x14004a104
   14004a0f0:	and    DWORD PTR [rbp+0x50],0xfffffffe
   14004a0f4:	mov    rcx,QWORD PTR [rbp+0x40]
   14004a0f8:	add    rcx,0x98
   14004a0ff:	call   0x1400213a4
   14004a104:	add    rsp,0x20
   14004a108:	pop    rbp
   14004a109:	ret    
   14004a10a:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a111:	add    rcx,0x20
   14004a115:	jmp    0x1400213c8
   14004a11a:	rex push rbp
   14004a11c:	sub    rsp,0x20
   14004a120:	mov    rbp,rdx
   14004a123:	mov    edx,0x18
   14004a128:	mov    rcx,QWORD PTR [rbp+0x40]
   14004a12c:	call   0x140026804
   14004a131:	add    rsp,0x20
   14004a135:	pop    rbp
   14004a136:	ret    
   14004a137:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a13e:	jmp    0x140021658
   14004a143:	lea    rcx,[rdx+0x38]
   14004a14a:	jmp    0x140021688
   14004a14f:	lea    rcx,[rdx+0x60]
   14004a156:	jmp    0x140004a6c
   14004a15b:	mov    QWORD PTR [rsp+0x10],rdx
   14004a160:	push   rbp
   14004a161:	sub    rsp,0x30
   14004a165:	mov    rbp,rdx
   14004a168:	mov    rcx,QWORD PTR [rbp+0xa0]
   14004a16f:	mov    rax,QWORD PTR [rcx]
   14004a172:	movsxd rdx,DWORD PTR [rax+0x4]
   14004a176:	add    rdx,rcx
   14004a179:	mov    ecx,DWORD PTR [rdx+0x10]
   14004a17c:	or     ecx,0x4
   14004a17f:	mov    eax,ecx
   14004a181:	or     eax,0x4
   14004a184:	cmp    QWORD PTR [rdx+0x48],0x0
   14004a189:	cmove  ecx,eax
   14004a18c:	and    ecx,0x17
   14004a18f:	mov    DWORD PTR [rdx+0x10],ecx
   14004a192:	test   DWORD PTR [rdx+0x14],ecx
   14004a195:	jne    0x14004a1a0
   14004a197:	lea    rax,[rip+0xfffffffffffd7610]        # 0x1400217ae
   14004a19e:	jmp    0x14004a1aa
   14004a1a0:	xor    edx,edx
   14004a1a2:	xor    ecx,ecx
   14004a1a4:	call   0x14002ab88
   14004a1a9:	nop
   14004a1aa:	add    rsp,0x30
   14004a1ae:	pop    rbp
   14004a1af:	ret    
   14004a1b0:	int3   
   14004a1b1:	lea    rcx,[rdx+0x40]
   14004a1b8:	jmp    0x140004a6c
   14004a1bd:	lea    rcx,[rdx+0x80]
   14004a1c4:	jmp    0x14000a998
   14004a1c9:	lea    rcx,[rdx+0x40]
   14004a1d0:	jmp    0x140004a6c
   14004a1d5:	lea    rcx,[rdx+0xa0]
   14004a1dc:	jmp    0x14000a998
   14004a1e1:	rex push rbp
   14004a1e3:	sub    rsp,0x20
   14004a1e7:	mov    rbp,rdx
   14004a1ea:	mov    edx,0x30
   14004a1ef:	mov    rcx,QWORD PTR [rbp+0xc0]
   14004a1f6:	call   0x140026804
   14004a1fb:	add    rsp,0x20
   14004a1ff:	pop    rbp
   14004a200:	ret    
   14004a201:	rex push rbp
   14004a203:	sub    rsp,0x20
   14004a207:	mov    rbp,rdx
   14004a20a:	mov    edx,0x30
   14004a20f:	mov    rcx,QWORD PTR [rbp+0xc0]
   14004a216:	call   0x140026804
   14004a21b:	add    rsp,0x20
   14004a21f:	pop    rbp
   14004a220:	ret    
   14004a221:	rex push rbp
   14004a223:	sub    rsp,0x20
   14004a227:	mov    rbp,rdx
   14004a22a:	mov    eax,DWORD PTR [rbp+0xb0]
   14004a230:	and    eax,0x1
   14004a233:	test   eax,eax
   14004a235:	je     0x14004a247
   14004a237:	and    DWORD PTR [rbp+0xb0],0xfffffffe
   14004a23e:	lea    rcx,[rbp+0x28]
   14004a242:	call   0x14000493c
   14004a247:	add    rsp,0x20
   14004a24b:	pop    rbp
   14004a24c:	ret    
   14004a24d:	mov    rcx,QWORD PTR [rdx+0xc0]
   14004a254:	jmp    0x140004a60
   14004a259:	mov    QWORD PTR [rsp+0x10],rdx
   14004a25e:	push   rbx
   14004a25f:	push   rbp
   14004a260:	sub    rsp,0x28
   14004a264:	mov    rbp,rdx
   14004a267:	mov    rbx,QWORD PTR [rbp+0x80]
   14004a26e:	mov    rcx,QWORD PTR [rbx+0x10]
   14004a272:	call   0x1400304c4
   14004a277:	mov    rcx,QWORD PTR [rbx+0x20]
   14004a27b:	call   0x1400304c4
   14004a280:	mov    rcx,QWORD PTR [rbx+0x28]
   14004a284:	call   0x1400304c4
   14004a289:	xor    edx,edx
   14004a28b:	xor    ecx,ecx
   14004a28d:	call   0x14002ab88
   14004a292:	nop
   14004a293:	lea    rcx,[rdx+0x40]
   14004a29a:	jmp    0x140004a6c
   14004a29f:	lea    rcx,[rdx+0x70]
   14004a2a6:	jmp    0x14000a998
   14004a2ab:	lea    rcx,[rdx+0x40]
   14004a2b2:	jmp    0x140004a6c
   14004a2b7:	lea    rcx,[rdx+0x90]
   14004a2be:	jmp    0x14000a998
   14004a2c3:	mov    QWORD PTR [rsp+0x10],rdx
   14004a2c8:	push   rbp
   14004a2c9:	sub    rsp,0x20
   14004a2cd:	mov    rbp,rdx
   14004a2d0:	lea    rax,[rip+0xfffffffffffd858a]        # 0x140022861
   14004a2d7:	add    rsp,0x20
   14004a2db:	pop    rbp
   14004a2dc:	ret    
   14004a2dd:	int3   
   14004a2de:	lea    rcx,[rdx+0x30]
   14004a2e5:	jmp    0x140004a6c
   14004a2ea:	lea    rcx,[rdx+0x48]
   14004a2f1:	jmp    0x14000a998
   14004a2f6:	lea    rcx,[rdx+0x28]
   14004a2fd:	jmp    0x140021688
   14004a302:	lea    rcx,[rdx+0x28]
   14004a309:	jmp    0x140006e50
   14004a30e:	lea    rcx,[rdx+0x110]
   14004a315:	jmp    0x14000a98c
   14004a31a:	lea    rcx,[rdx+0x28]
   14004a321:	jmp    0x14000a85c
   14004a326:	lea    rcx,[rdx+0x60]
   14004a32d:	jmp    0x1400218d0
   14004a332:	rex push rbp
   14004a334:	sub    rsp,0x20
   14004a338:	mov    rbp,rdx
   14004a33b:	mov    rdx,QWORD PTR [rbp+0x60]
   14004a33f:	mov    rcx,QWORD PTR [rbp+0x58]
   14004a343:	call   0x140004794
   14004a348:	add    rsp,0x20
   14004a34c:	pop    rbp
   14004a34d:	ret    
   14004a34e:	mov    QWORD PTR [rsp+0x10],rdx
   14004a353:	push   rbx
   14004a354:	push   rbp
   14004a355:	sub    rsp,0x28
   14004a359:	mov    rbp,rdx
   14004a35c:	mov    rbx,QWORD PTR [rbp+0x50]
   14004a360:	jmp    0x14004a36f
   14004a362:	lea    rcx,[rbx+0x8]
   14004a366:	call   0x14000a98c
   14004a36b:	add    rbx,0x50
   14004a36f:	cmp    rbx,QWORD PTR [rbp+0x60]
   14004a373:	jne    0x14004a362
   14004a375:	xor    edx,edx
   14004a377:	xor    ecx,ecx
   14004a379:	call   0x14002ab88
   14004a37e:	nop
   14004a37f:	lea    rcx,[rdx+0x30]
   14004a386:	jmp    0x140006e88
   14004a38b:	lea    rcx,[rdx+0x90]
   14004a392:	jmp    0x14000a98c
   14004a397:	lea    rcx,[rdx+0x50]
   14004a39e:	jmp    0x14000a98c
   14004a3a3:	lea    rcx,[rdx+0x48]
   14004a3aa:	jmp    0x140024748
   14004a3af:	rex push rbp
   14004a3b1:	sub    rsp,0x20
   14004a3b5:	mov    rbp,rdx
   14004a3b8:	mov    eax,DWORD PTR [rbp+0x30]
   14004a3bb:	and    eax,0x1
   14004a3be:	test   eax,eax
   14004a3c0:	je     0x14004a3cf
   14004a3c2:	and    DWORD PTR [rbp+0x30],0xfffffffe
   14004a3c6:	mov    rcx,QWORD PTR [rbp+0x40]
   14004a3ca:	call   0x140024770
   14004a3cf:	add    rsp,0x20
   14004a3d3:	pop    rbp
   14004a3d4:	ret    
   14004a3d5:	lea    rcx,[rdx+0x50]
   14004a3dc:	jmp    0x14000a98c
   14004a3e1:	lea    rcx,[rdx+0x70]
   14004a3e8:	jmp    0x14000a98c
   14004a3ed:	lea    rcx,[rdx+0xb0]
   14004a3f4:	jmp    0x14000a98c
   14004a3f9:	lea    rcx,[rdx+0xf0]
   14004a400:	jmp    0x140006e88
   14004a405:	mov    QWORD PTR [rsp+0x10],rdx
   14004a40a:	push   rbp
   14004a40b:	sub    rsp,0x30
   14004a40f:	mov    rbp,rdx
   14004a412:	mov    r8d,0x50
   14004a418:	mov    rdx,QWORD PTR [rbp+0x78]
   14004a41c:	mov    rcx,QWORD PTR [rbp+0x70]
   14004a420:	call   0x140004804
   14004a425:	xor    edx,edx
   14004a427:	xor    ecx,ecx
   14004a429:	call   0x14002ab88
   14004a42e:	nop
   14004a42f:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a436:	jmp    0x14000a98c
   14004a43b:	mov    rcx,QWORD PTR [rdx+0x40]
   14004a442:	add    rcx,0x8
   14004a446:	jmp    0x14000a98c
   14004a44b:	lea    rcx,[rdx+0x50]
   14004a452:	jmp    0x14000a98c
   14004a457:	lea    rcx,[rdx+0x30]
   14004a45e:	jmp    0x140024770
   14004a463:	lea    rcx,[rdx+0x58]
   14004a46a:	jmp    0x140006e50
   14004a46f:	lea    rcx,[rdx+0x140]
   14004a476:	jmp    0x14000a98c
   14004a47b:	lea    rcx,[rdx+0x58]
   14004a482:	jmp    0x140006e50
   14004a487:	lea    rcx,[rdx+0x140]
   14004a48e:	jmp    0x14000a98c
   14004a493:	rex push rbp
   14004a495:	sub    rsp,0x20
   14004a499:	mov    rbp,rdx
   14004a49c:	mov    eax,DWORD PTR [rbp+0x20]
   14004a49f:	and    eax,0x1
   14004a4a2:	test   eax,eax
   14004a4a4:	je     0x14004a4ba
   14004a4a6:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14004a4aa:	mov    rcx,QWORD PTR [rbp+0x30]
   14004a4ae:	add    rcx,0xa0
   14004a4b5:	call   0x140004728
   14004a4ba:	add    rsp,0x20
   14004a4be:	pop    rbp
   14004a4bf:	ret    
   14004a4c0:	lea    rcx,[rdx+0x38]
   14004a4c7:	jmp    0x14000a98c
   14004a4cc:	rex push rbp
   14004a4ce:	mov    rbp,rdx
   14004a4d1:	mov    rax,QWORD PTR [rcx]
   14004a4d4:	xor    ecx,ecx
   14004a4d6:	cmp    DWORD PTR [rax],0xc0000005
   14004a4dc:	sete   cl
   14004a4df:	mov    eax,ecx
   14004a4e1:	pop    rbp
   14004a4e2:	ret    
   14004a4e3:	int3   
   14004a4e4:	rex push rbp
   14004a4e6:	sub    rsp,0x20
   14004a4ea:	mov    rbp,rdx
   14004a4ed:	mov    rax,QWORD PTR [rcx]
   14004a4f0:	mov    rdx,rcx
   14004a4f3:	mov    ecx,DWORD PTR [rax]
   14004a4f5:	call   0x14003310c
   14004a4fa:	nop
   14004a4fb:	add    rsp,0x20
   14004a4ff:	pop    rbp
   14004a500:	ret    
   14004a501:	int3   
   14004a502:	lea    rcx,[rdx+0x40]
   14004a509:	jmp    0x140027390
   14004a50e:	rex push rbp
   14004a510:	sub    rsp,0x20
   14004a514:	mov    rbp,rdx
   14004a517:	mov    QWORD PTR [rbp+0x58],rcx
   14004a51b:	lea    r8,[rbp+0x20]
   14004a51f:	mov    rdx,QWORD PTR [rbp+0xb8]
   14004a526:	call   0x1400295f0
   14004a52b:	nop
   14004a52c:	add    rsp,0x20
   14004a530:	pop    rbp
   14004a531:	ret    
   14004a532:	int3   
   14004a533:	rex push rbx
   14004a535:	push   rbp
   14004a536:	sub    rsp,0x28
   14004a53a:	mov    rbp,rdx
   14004a53d:	mov    rcx,QWORD PTR [rbp+0x38]
   14004a541:	call   0x14002b08c
   14004a546:	cmp    DWORD PTR [rbp+0x20],0x0
   14004a54a:	jne    0x14004a586
   14004a54c:	mov    rbx,QWORD PTR [rbp+0xb8]
   14004a553:	cmp    DWORD PTR [rbx],0xe06d7363
   14004a559:	jne    0x14004a586
   14004a55b:	cmp    DWORD PTR [rbx+0x18],0x4
   14004a55f:	jne    0x14004a586
   14004a561:	mov    eax,DWORD PTR [rbx+0x20]
   14004a564:	sub    eax,0x19930520
   14004a569:	cmp    eax,0x2
   14004a56c:	ja     0x14004a586
   14004a56e:	mov    rcx,QWORD PTR [rbx+0x28]
   14004a572:	call   0x14002b10c
   14004a577:	test   eax,eax
   14004a579:	je     0x14004a586
   14004a57b:	mov    dl,0x1
   14004a57d:	mov    rcx,rbx
   14004a580:	call   0x140029444
   14004a585:	nop
   14004a586:	call   0x14002b9fc
   14004a58b:	mov    rcx,QWORD PTR [rbp+0xc0]
   14004a592:	mov    QWORD PTR [rax+0x20],rcx
   14004a596:	call   0x14002b9fc
   14004a59b:	mov    rcx,QWORD PTR [rbp+0x40]
   14004a59f:	mov    QWORD PTR [rax+0x28],rcx
   14004a5a3:	add    rsp,0x28
   14004a5a7:	pop    rbp
   14004a5a8:	pop    rbx
   14004a5a9:	ret    
   14004a5aa:	int3   
   14004a5ab:	rex push rbp
   14004a5ad:	sub    rsp,0x20
   14004a5b1:	mov    rbp,rdx
   14004a5b4:	xor    eax,eax
   14004a5b6:	cmp    BYTE PTR [rbp+0x38],al
   14004a5b9:	setne  al
   14004a5bc:	add    rsp,0x20
   14004a5c0:	pop    rbp
   14004a5c1:	ret    
   14004a5c2:	int3   
   14004a5c3:	rex push rbp
   14004a5c5:	sub    rsp,0x20
   14004a5c9:	mov    rbp,rdx
   14004a5cc:	call   0x14002a35c
   14004a5d1:	nop
   14004a5d2:	add    rsp,0x20
   14004a5d6:	pop    rbp
   14004a5d7:	ret    
   14004a5d8:	int3   
   14004a5d9:	rex push rbp
   14004a5db:	sub    rsp,0x20
   14004a5df:	mov    rbp,rdx
   14004a5e2:	call   0x14002b9fc
   14004a5e7:	cmp    DWORD PTR [rax+0x30],0x0
   14004a5eb:	jle    0x14004a5f5
   14004a5ed:	call   0x14002b9fc
   14004a5f2:	dec    DWORD PTR [rax+0x30]
   14004a5f5:	add    rsp,0x20
   14004a5f9:	pop    rbp
   14004a5fa:	ret    
   14004a5fb:	int3   
   14004a5fc:	rex push rbp
   14004a5fe:	sub    rsp,0x40
   14004a602:	mov    rbp,rdx
   14004a605:	lea    rax,[rbp+0x40]
   14004a609:	mov    QWORD PTR [rsp+0x30],rax
   14004a60e:	mov    rax,QWORD PTR [rbp+0xa0]
   14004a615:	mov    QWORD PTR [rsp+0x28],rax
   14004a61a:	mov    rax,QWORD PTR [rbp+0x98]
   14004a621:	mov    QWORD PTR [rsp+0x20],rax
   14004a626:	mov    r9,QWORD PTR [rbp+0x90]
   14004a62d:	mov    r8,QWORD PTR [rbp+0x88]
   14004a634:	mov    rdx,QWORD PTR [rbp+0x80]
   14004a63b:	call   0x14002af60
   14004a640:	nop
   14004a641:	add    rsp,0x40
   14004a645:	pop    rbp
   14004a646:	ret    
   14004a647:	int3   
   14004a648:	rex push rbp
   14004a64a:	sub    rsp,0x20
   14004a64e:	mov    rbp,rdx
   14004a651:	mov    rcx,QWORD PTR [rbp+0x48]
   14004a655:	mov    rcx,QWORD PTR [rcx]
   14004a658:	add    rsp,0x20
   14004a65c:	pop    rbp
   14004a65d:	jmp    0x140032b8c
   14004a662:	int3   
   14004a663:	rex push rbp
   14004a665:	sub    rsp,0x20
   14004a669:	mov    rbp,rdx
   14004a66c:	mov    ecx,0xb
   14004a671:	add    rsp,0x20
   14004a675:	pop    rbp
   14004a676:	jmp    0x140035a98
   14004a67b:	int3   
   14004a67c:	rex push rbp
   14004a67e:	sub    rsp,0x20
   14004a682:	mov    rbp,rdx
   14004a685:	cmp    QWORD PTR [rbp+0x20],0x0
   14004a68a:	jne    0x14004a696
   14004a68c:	mov    rcx,QWORD PTR [rbp+0x40]
   14004a690:	call   0x14003bac4
   14004a695:	nop
   14004a696:	mov    rcx,QWORD PTR [rbp+0x40]
   14004a69a:	call   0x140032b8c
   14004a69f:	nop
   14004a6a0:	add    rsp,0x20
   14004a6a4:	pop    rbp
   14004a6a5:	ret    
   14004a6a6:	int3   
   14004a6a7:	rex push rbp
   14004a6a9:	sub    rsp,0x20
   14004a6ad:	mov    rbp,rdx
   14004a6b0:	mov    rcx,QWORD PTR [rbp+0x68]
   14004a6b4:	call   0x140032b8c
   14004a6b9:	nop
   14004a6ba:	add    rsp,0x20
   14004a6be:	pop    rbp
   14004a6bf:	ret    
   14004a6c0:	int3   
   14004a6c1:	rex push rbp
   14004a6c3:	sub    rsp,0x20
   14004a6c7:	mov    rbp,rdx
   14004a6ca:	mov    ecx,0x8
   14004a6cf:	add    rsp,0x20
   14004a6d3:	pop    rbp
   14004a6d4:	jmp    0x140035a98
   14004a6d9:	int3   
   14004a6da:	rex push rbp
   14004a6dc:	sub    rsp,0x20
   14004a6e0:	mov    rbp,rdx
   14004a6e3:	mov    rcx,QWORD PTR [rbp+0x30]
   14004a6e7:	add    rsp,0x20
   14004a6eb:	pop    rbp
   14004a6ec:	jmp    0x140032b8c
   14004a6f1:	int3   
   14004a6f2:	rex push rbp
   14004a6f4:	sub    rsp,0x20
   14004a6f8:	mov    rbp,rdx
   14004a6fb:	xor    ecx,ecx
   14004a6fd:	add    rsp,0x20
   14004a701:	pop    rbp
   14004a702:	jmp    0x140035a98
   14004a707:	int3   
   14004a708:	rex push rbp
   14004a70a:	sub    rsp,0x20
   14004a70e:	mov    rbp,rdx
   14004a711:	mov    rax,QWORD PTR [rcx]
   14004a714:	mov    ecx,DWORD PTR [rax]
   14004a716:	call   0x14003329c
   14004a71b:	nop
   14004a71c:	add    rsp,0x20
   14004a720:	pop    rbp
   14004a721:	ret    
   14004a722:	int3   
   14004a723:	rex push rbp
   14004a725:	sub    rsp,0x20
   14004a729:	mov    rbp,rdx
   14004a72c:	mov    ecx,0x2
   14004a731:	add    rsp,0x20
   14004a735:	pop    rbp
   14004a736:	jmp    0x140035a98
   14004a73b:	int3   
   14004a73c:	rex push rbp
   14004a73e:	sub    rsp,0x20
   14004a742:	mov    rbp,rdx
   14004a745:	mov    rax,QWORD PTR [rbp+0x88]
   14004a74c:	mov    ecx,DWORD PTR [rax]
   14004a74e:	add    rsp,0x20
   14004a752:	pop    rbp
   14004a753:	jmp    0x140035a98
   14004a758:	int3   
   14004a759:	rex push rbp
   14004a75b:	sub    rsp,0x20
   14004a75f:	mov    rbp,rdx
   14004a762:	mov    rax,QWORD PTR [rbp+0x48]
   14004a766:	mov    rcx,QWORD PTR [rax]
   14004a769:	mov    rax,QWORD PTR [rcx]
   14004a76c:	and    DWORD PTR [rax+0x3a8],0xffffffef
   14004a773:	add    rsp,0x20
   14004a777:	pop    rbp
   14004a778:	ret    
   14004a779:	int3   
   14004a77a:	rex push rbp
   14004a77c:	sub    rsp,0x20
   14004a780:	mov    rbp,rdx
   14004a783:	mov    ecx,0x4
   14004a788:	add    rsp,0x20
   14004a78c:	pop    rbp
   14004a78d:	jmp    0x140035a98
   14004a792:	int3   
   14004a793:	rex push rbp
   14004a795:	sub    rsp,0x30
   14004a799:	mov    rbp,rdx
   14004a79c:	mov    ecx,0x4
   14004a7a1:	call   0x140035a98
   14004a7a6:	nop
   14004a7a7:	add    rsp,0x30
   14004a7ab:	pop    rbp
   14004a7ac:	ret    
   14004a7ad:	int3   
   14004a7ae:	rex push rbp
   14004a7b0:	sub    rsp,0x20
   14004a7b4:	mov    rbp,rdx
   14004a7b7:	mov    rax,QWORD PTR [rbp+0x48]
   14004a7bb:	mov    ecx,DWORD PTR [rax]
   14004a7bd:	add    rsp,0x20
   14004a7c1:	pop    rbp
   14004a7c2:	jmp    0x140035a98
   14004a7c7:	int3   
   14004a7c8:	rex push rbp
   14004a7ca:	sub    rsp,0x20
   14004a7ce:	mov    rbp,rdx
   14004a7d1:	mov    rax,QWORD PTR [rbp+0x48]
   14004a7d5:	mov    ecx,DWORD PTR [rax]
   14004a7d7:	add    rsp,0x20
   14004a7db:	pop    rbp
   14004a7dc:	jmp    0x14003ff7c
   14004a7e1:	int3   
   14004a7e2:	rex push rbp
   14004a7e4:	sub    rsp,0x20
   14004a7e8:	mov    rbp,rdx
   14004a7eb:	mov    ecx,DWORD PTR [rbp+0x50]
   14004a7ee:	add    rsp,0x20
   14004a7f2:	pop    rbp
   14004a7f3:	jmp    0x14003ff7c
   14004a7f8:	int3   
   14004a7f9:	rex push rbp
   14004a7fb:	sub    rsp,0x20
   14004a7ff:	mov    rbp,rdx
   14004a802:	mov    ecx,0x8
   14004a807:	add    rsp,0x20
   14004a80b:	pop    rbp
   14004a80c:	jmp    0x140035a98
   14004a811:	int3   
   14004a812:	rex push rbp
   14004a814:	sub    rsp,0x20
   14004a818:	mov    rbp,rdx
   14004a81b:	mov    ecx,0x5
   14004a820:	add    rsp,0x20
   14004a824:	pop    rbp
   14004a825:	jmp    0x140035a98
   14004a82a:	int3   
   14004a82b:	rex push rbp
   14004a82d:	sub    rsp,0x20
   14004a831:	mov    rbp,rdx
   14004a834:	cmp    BYTE PTR [rbp+0x80],0x0
   14004a83b:	je     0x14004a848
   14004a83d:	mov    ecx,0x3
   14004a842:	call   0x140035a98
   14004a847:	nop
   14004a848:	add    rsp,0x20
   14004a84c:	pop    rbp
   14004a84d:	ret    
   14004a84e:	int3   
   14004a84f:	rex push rbp
   14004a851:	sub    rsp,0x20
   14004a855:	mov    rbp,rdx
   14004a858:	mov    ecx,0x7
   14004a85d:	add    rsp,0x20
   14004a861:	pop    rbp
   14004a862:	jmp    0x140035a98
   14004a867:	int3   
   14004a868:	rex push rbp
   14004a86a:	sub    rsp,0x40
   14004a86e:	mov    rbp,rdx
   14004a871:	cmp    DWORD PTR [rbp+0x40],0x0
   14004a875:	je     0x14004a8b4
   14004a877:	cmp    DWORD PTR [rbp+0x44],0x0
   14004a87b:	je     0x14004a8a5
   14004a87d:	mov    rax,QWORD PTR [rbp+0x80]
   14004a884:	movsxd rcx,DWORD PTR [rax]
   14004a887:	mov    rax,rcx
   14004a88a:	sar    rax,0x6
   14004a88e:	lea    rdx,[rip+0x2c42b]        # 0x140076cc0
   14004a895:	and    ecx,0x3f
   14004a898:	shl    rcx,0x6
   14004a89c:	mov    rax,QWORD PTR [rdx+rax*8]
   14004a8a0:	and    BYTE PTR [rax+rcx*1+0x38],0xfe
   14004a8a5:	mov    rax,QWORD PTR [rbp+0x80]
   14004a8ac:	mov    ecx,DWORD PTR [rax]
   14004a8ae:	call   0x14003ff7c
   14004a8b3:	nop
   14004a8b4:	add    rsp,0x40
   14004a8b8:	pop    rbp
   14004a8b9:	ret    
   14004a8ba:	int3   
   14004a8bb:	rex push rbp
   14004a8bd:	sub    rsp,0x20
   14004a8c1:	mov    rbp,rdx
   14004a8c4:	mov    rax,QWORD PTR [rcx]
   14004a8c7:	cmp    DWORD PTR [rax],0xc0000005
   14004a8cd:	je     0x14004a8db
   14004a8cf:	cmp    DWORD PTR [rax],0xc000001d
   14004a8d5:	je     0x14004a8db
   14004a8d7:	xor    eax,eax
   14004a8d9:	jmp    0x14004a8e0
   14004a8db:	mov    eax,0x1
   14004a8e0:	add    rsp,0x20
   14004a8e4:	pop    rbp
   14004a8e5:	ret    
   14004a8e6:	int3   
   14004a8e7:	int3   
   14004a8e8:	int3   
   14004a8e9:	int3   
   14004a8ea:	int3   
   14004a8eb:	int3   
   14004a8ec:	int3   
   14004a8ed:	int3   
   14004a8ee:	int3   
   14004a8ef:	int3   
   14004a8f0:	rex push rbp
   14004a8f2:	sub    rsp,0x20
   14004a8f6:	mov    rbp,rdx
   14004a8f9:	mov    rax,QWORD PTR [rcx]
   14004a8fc:	xor    ecx,ecx
   14004a8fe:	cmp    DWORD PTR [rax],0xc0000005
   14004a904:	sete   cl
   14004a907:	mov    eax,ecx
   14004a909:	add    rsp,0x20
   14004a90d:	pop    rbp
   14004a90e:	ret    
   14004a90f:	int3   
   14004a910:	ret    0x0
   14004a913:	int3   
   14004a914:	ret    0x0
   14004a917:	int3   
   14004a918:	xor    r8d,r8d
   14004a91b:	lea    rcx,[rip+0x27296]        # 0x140071bb8
   14004a922:	mov    dl,0x1
   14004a924:	jmp    0x14000b6b0
   14004a929:	int3   
   14004a92a:	int3   
   14004a92b:	int3   
   14004a92c:	int3   
   14004a92d:	int3   
   14004a92e:	int3   
   14004a92f:	int3   
   14004a930:	lea    rcx,[rip+0x2ccc1]        # 0x1400775f8
   14004a937:	jmp    0x140025c7c
   14004a93c:	int3   
   14004a93d:	int3   
   14004a93e:	int3   
   14004a93f:	int3   
   14004a940:	lea    rax,[rip+0xc21]        # 0x14004b568
   14004a947:	lea    rcx,[rip+0x2b14a]        # 0x140075a98
   14004a94e:	mov    QWORD PTR [rip+0x2b13b],rax        # 0x140075a90
   14004a955:	rex.W jmp QWORD PTR [rip+0x6fc]        # 0x14004b058
   14004a95c:	sub    rsp,0x28
   14004a960:	mov    rcx,QWORD PTR [rip+0x2b179]        # 0x140075ae0
   14004a967:	test   rcx,rcx
   14004a96a:	je     0x14004a998
   14004a96c:	mov    rdx,QWORD PTR [rip+0x2b17d]        # 0x140075af0
   14004a973:	mov    r8d,0x8
   14004a979:	sub    rdx,rcx
   14004a97c:	sar    rdx,0x3
   14004a980:	call   0x140004804
   14004a985:	and    QWORD PTR [rip+0x2b163],0x0        # 0x140075af0
   14004a98d:	xorps  xmm0,xmm0
   14004a990:	movdqu XMMWORD PTR [rip+0x2b148],xmm0        # 0x140075ae0
   14004a998:	add    rsp,0x28
   14004a99c:	ret    
   14004a99d:	int3   
   14004a99e:	int3   
   14004a99f:	int3   
   14004a9a0:	rex push rbx
   14004a9a2:	sub    rsp,0x20
   14004a9a6:	mov    rbx,QWORD PTR [rip+0x2b12b]        # 0x140075ad8
   14004a9ad:	test   rbx,rbx
   14004a9b0:	je     0x14004a9c7
   14004a9b2:	mov    rcx,rbx
   14004a9b5:	call   0x140025c7c
   14004a9ba:	mov    edx,0x8
   14004a9bf:	mov    rcx,rbx
   14004a9c2:	call   0x140026804
   14004a9c7:	add    rsp,0x20
   14004a9cb:	pop    rbx
   14004a9cc:	ret    
   14004a9cd:	int3   
   14004a9ce:	int3   
   14004a9cf:	int3   
   14004a9d0:	lea    rcx,[rip+0x2b879]        # 0x140076250
   14004a9d7:	jmp    0x14002734c
   14004a9dc:	sub    rsp,0x28
   14004a9e0:	jmp    0x14004a9f6
   14004a9e2:	mov    rax,QWORD PTR [rcx]
   14004a9e5:	mov    edx,0x1
   14004a9ea:	mov    QWORD PTR [rip+0x2b9af],rax        # 0x1400763a0
   14004a9f1:	call   0x14002743c
   14004a9f6:	mov    rcx,QWORD PTR [rip+0x2b9a3]        # 0x1400763a0
   14004a9fd:	test   rcx,rcx
   14004aa00:	jne    0x14004a9e2
   14004aa02:	add    rsp,0x28
   14004aa06:	ret    
   14004aa07:	int3   
   14004aa08:	rex push rdi
   14004aa0a:	sub    rsp,0x30
   14004aa0e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004aa17:	mov    QWORD PTR [rsp+0x40],rbx
   14004aa1c:	mov    rdi,QWORD PTR [rip+0x2b9c5]        # 0x1400763e8
   14004aa23:	test   rdi,rdi
   14004aa26:	je     0x14004aa5d
   14004aa28:	mov    rax,QWORD PTR [rdi]
   14004aa2b:	mov    rbx,QWORD PTR [rax+0x10]
   14004aa2f:	mov    rcx,rbx
   14004aa32:	call   0x140026cd0
   14004aa37:	mov    rcx,rdi
   14004aa3a:	call   rbx
   14004aa3c:	mov    rdi,rax
   14004aa3f:	test   rax,rax
   14004aa42:	je     0x14004aa5d
   14004aa44:	mov    rcx,QWORD PTR [rax]
   14004aa47:	mov    rbx,QWORD PTR [rcx]
   14004aa4a:	mov    rcx,rbx
   14004aa4d:	call   0x140026cd0
   14004aa52:	mov    edx,0x1
   14004aa57:	mov    rcx,rdi
   14004aa5a:	call   rbx
   14004aa5c:	nop
   14004aa5d:	mov    rbx,QWORD PTR [rsp+0x40]
   14004aa62:	add    rsp,0x30
   14004aa66:	pop    rdi
   14004aa67:	ret    
   14004aa68:	rex push rbx
   14004aa6a:	sub    rsp,0x30
   14004aa6e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14004aa77:	jmp    0x14004aaa6
   14004aa79:	lea    rcx,[rip+0x2ba20]        # 0x1400764a0
   14004aa80:	mov    rcx,QWORD PTR [rcx+rax*8]
   14004aa84:	inc    rax
   14004aa87:	mov    QWORD PTR [rip+0x26602],rax        # 0x140071090
   14004aa8e:	call   QWORD PTR [rip+0x7d4]        # 0x14004b268
   14004aa94:	mov    rbx,rax
   14004aa97:	test   rax,rax
   14004aa9a:	je     0x14004aaa6
   14004aa9c:	mov    rcx,rax
   14004aa9f:	call   0x140026cd0
   14004aaa4:	call   rbx
   14004aaa6:	mov    rax,QWORD PTR [rip+0x265e3]        # 0x140071090
   14004aaad:	cmp    rax,0xa
   14004aab1:	jb     0x14004aa79
   14004aab3:	add    rsp,0x30
   14004aab7:	pop    rbx
   14004aab8:	ret    
   14004aab9:	int3   
   14004aaba:	int3   
   14004aabb:	int3   
   14004aabc:	lea    rcx,[rip+0x2ba2d]        # 0x1400764f0
   14004aac3:	jmp    0x14002734c
