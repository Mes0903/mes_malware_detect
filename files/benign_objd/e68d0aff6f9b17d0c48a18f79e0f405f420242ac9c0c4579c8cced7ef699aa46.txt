
e68d0aff6f9b17d0c48a18f79e0f405f420242ac9c0c4579c8cced7ef699aa46.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rax,[rip+0x4df9]        # 0x140005e00
   140001007:	mov    QWORD PTR [rip+0x13652],rax        # 0x140014660
   14000100e:	lea    rax,[rip+0x4efb]        # 0x140005f10
   140001015:	mov    QWORD PTR [rip+0x13634],rax        # 0x140014650
   14000101c:	lea    rax,[rip+0x4f3d]        # 0x140005f60
   140001023:	mov    QWORD PTR [rip+0x1362e],rax        # 0x140014658
   14000102a:	ret    
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	lea    rcx,[rip+0x13695]        # 0x1400146d0
   14000103b:	call   0x140001bf0
   140001040:	lea    rcx,[rip+0xc3b9]        # 0x14000d400
   140001047:	add    rsp,0x28
   14000104b:	jmp    0x14000cec8
   140001050:	mov    rax,QWORD PTR [rip+0xd3b1]        # 0x14000e408
   140001057:	mov    QWORD PTR [rip+0x136aa],rax        # 0x140014708
   14000105e:	ret    
   14000105f:	int3   
   140001060:	mov    rax,QWORD PTR [rip+0xd399]        # 0x14000e400
   140001067:	mov    QWORD PTR [rip+0x13692],rax        # 0x140014700
   14000106e:	ret    
   14000106f:	int3   
   140001070:	int3   
   140001071:	int3   
   140001072:	int3   
   140001073:	int3   
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	mov    QWORD PTR [rsp+0x8],rbx
   14000107d:	mov    QWORD PTR [rsp+0x10],rdi
   140001082:	xor    edi,edi
   140001084:	lea    rax,[rdx-0x1]
   140001088:	cmp    rax,0x7ffffffe
   14000108e:	mov    r10,rdx
   140001091:	mov    r9d,edi
   140001094:	mov    edx,0x80070057
   140001099:	cmova  r9d,edx
   14000109d:	mov    rbx,r8
   1400010a0:	mov    r11,rcx
   1400010a3:	test   r9d,r9d
   1400010a6:	js     0x1400010d2
   1400010a8:	mov    rax,r10
   1400010ab:	mov    r9d,edi
   1400010ae:	test   r10,r10
   1400010b1:	je     0x1400010cf
   1400010b3:	cmp    WORD PTR [rcx],di
   1400010b6:	je     0x1400010c2
   1400010b8:	add    rcx,0x2
   1400010bc:	sub    rax,0x1
   1400010c0:	jne    0x1400010b3
   1400010c2:	test   rax,rax
   1400010c5:	je     0x1400010cf
   1400010c7:	mov    r8,r10
   1400010ca:	sub    r8,rax
   1400010cd:	jmp    0x1400010d5
   1400010cf:	mov    r9d,edx
   1400010d2:	mov    r8,rdi
   1400010d5:	test   r9d,r9d
   1400010d8:	js     0x14000112c
   1400010da:	mov    rdx,r10
   1400010dd:	lea    rcx,[r11+r8*2]
   1400010e1:	mov    r9d,edi
   1400010e4:	sub    rdx,r8
   1400010e7:	je     0x14000111f
   1400010e9:	mov    rax,rdx
   1400010ec:	sub    rax,r10
   1400010ef:	lea    r10,[r8+0x7ffffffe]
   1400010f6:	add    r10,rax
   1400010f9:	sub    rbx,rcx
   1400010fc:	test   r10,r10
   1400010ff:	je     0x14000111a
   140001101:	movzx  eax,WORD PTR [rbx+rcx*1]
   140001105:	test   ax,ax
   140001108:	je     0x14000111a
   14000110a:	mov    WORD PTR [rcx],ax
   14000110d:	dec    r10
   140001110:	add    rcx,0x2
   140001114:	sub    rdx,0x1
   140001118:	jne    0x1400010fc
   14000111a:	test   rdx,rdx
   14000111d:	jne    0x140001129
   14000111f:	sub    rcx,0x2
   140001123:	mov    r9d,0x8007007a
   140001129:	mov    WORD PTR [rcx],di
   14000112c:	mov    rbx,QWORD PTR [rsp+0x8]
   140001131:	mov    eax,r9d
   140001134:	mov    rdi,QWORD PTR [rsp+0x10]
   140001139:	ret    
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	rex push rbx
   140001142:	sub    rsp,0x20
   140001146:	mov    rbx,rcx
   140001149:	call   QWORD PTR [rip+0xd199]        # 0x14000e2e8
   14000114f:	mov    r8,rbx
   140001152:	mov    edx,0x8
   140001157:	mov    rcx,rax
   14000115a:	add    rsp,0x20
   14000115e:	pop    rbx
   14000115f:	rex.W jmp QWORD PTR [rip+0xd162]        # 0x14000e2c8
   140001166:	int3   
   140001167:	int3   
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	test   rcx,rcx
   14000116f:	je     0x140001192
   140001171:	push   rbx
   140001172:	sub    rsp,0x20
   140001176:	mov    rbx,rcx
   140001179:	call   QWORD PTR [rip+0xd169]        # 0x14000e2e8
   14000117f:	mov    r8,rbx
   140001182:	xor    edx,edx
   140001184:	mov    rcx,rax
   140001187:	call   QWORD PTR [rip+0xd143]        # 0x14000e2d0
   14000118d:	add    rsp,0x20
   140001191:	pop    rbx
   140001192:	ret    
   140001193:	int3   
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	mov    r11,rsp
   14000119f:	mov    QWORD PTR [r11+0x8],rbx
   1400011a3:	mov    QWORD PTR [r11+0x10],rsi
   1400011a7:	mov    QWORD PTR [r11+0x18],rdi
   1400011ab:	push   rbp
   1400011ac:	mov    rbp,rsp
   1400011af:	sub    rsp,0x80
   1400011b6:	mov    rax,QWORD PTR [rip+0x12e4b]        # 0x140014008
   1400011bd:	xor    rax,rsp
   1400011c0:	mov    QWORD PTR [rbp-0x8],rax
   1400011c4:	xor    edi,edi
   1400011c6:	mov    WORD PTR [rbp-0xc],0x500
   1400011cc:	lea    rax,[rbp-0x18]
   1400011d0:	mov    DWORD PTR [rbp-0x20],edi
   1400011d3:	mov    QWORD PTR [r11-0x38],rax
   1400011d7:	lea    rcx,[rbp-0x10]
   1400011db:	mov    DWORD PTR [rsp+0x48],edi
   1400011df:	xor    r9d,r9d
   1400011e2:	mov    DWORD PTR [rsp+0x40],edi
   1400011e6:	lea    esi,[rdi+0x1]
   1400011e9:	mov    DWORD PTR [rsp+0x38],edi
   1400011ed:	lea    r8d,[rdi+0x12]
   1400011f1:	mov    DWORD PTR [rsp+0x30],edi
   1400011f5:	mov    dl,sil
   1400011f8:	mov    DWORD PTR [rsp+0x28],edi
   1400011fc:	mov    ebx,edi
   1400011fe:	mov    DWORD PTR [rsp+0x20],edi
   140001202:	mov    DWORD PTR [rbp-0x10],edi
   140001205:	mov    QWORD PTR [rbp-0x18],rdi
   140001209:	call   QWORD PTR [rip+0xce01]        # 0x14000e010
   14000120f:	test   eax,eax
   140001211:	je     0x14000122d
   140001213:	mov    rdx,QWORD PTR [rbp-0x18]
   140001217:	lea    r8,[rbp-0x20]
   14000121b:	xor    ecx,ecx
   14000121d:	call   QWORD PTR [rip+0xcdfd]        # 0x14000e020
   140001223:	test   eax,eax
   140001225:	je     0x14000122d
   140001227:	cmp    DWORD PTR [rbp-0x20],edi
   14000122a:	cmovne ebx,esi
   14000122d:	mov    rcx,QWORD PTR [rbp-0x18]
   140001231:	test   rcx,rcx
   140001234:	je     0x14000123c
   140001236:	call   QWORD PTR [rip+0xcddc]        # 0x14000e018
   14000123c:	mov    eax,ebx
   14000123e:	mov    rcx,QWORD PTR [rbp-0x8]
   140001242:	xor    rcx,rsp
   140001245:	call   0x14000cc40
   14000124a:	lea    r11,[rsp+0x80]
   140001252:	mov    rbx,QWORD PTR [r11+0x10]
   140001256:	mov    rsi,QWORD PTR [r11+0x18]
   14000125a:	mov    rdi,QWORD PTR [r11+0x20]
   14000125e:	mov    rsp,r11
   140001261:	pop    rbp
   140001262:	ret    
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	mov    QWORD PTR [rsp+0x8],rbx
   140001271:	mov    QWORD PTR [rsp+0x10],rdi
   140001276:	push   rbp
   140001277:	mov    rbp,rsp
   14000127a:	sub    rsp,0x80
   140001281:	mov    rax,QWORD PTR [rip+0x12d80]        # 0x140014008
   140001288:	xor    rax,rsp
   14000128b:	mov    QWORD PTR [rbp-0x8],rax
   14000128f:	xor    edi,edi
   140001291:	mov    WORD PTR [rbp-0xc],0x500
   140001297:	lea    rax,[rbp-0x18]
   14000129b:	mov    DWORD PTR [rbp-0x1c],edi
   14000129e:	mov    QWORD PTR [rsp+0x50],rax
   1400012a3:	lea    rcx,[rbp-0x10]
   1400012a7:	mov    DWORD PTR [rsp+0x48],edi
   1400012ab:	mov    r9d,0x220
   1400012b1:	mov    DWORD PTR [rsp+0x40],edi
   1400012b5:	lea    r8d,[rdi+0x20]
   1400012b9:	mov    DWORD PTR [rsp+0x38],edi
   1400012bd:	mov    dl,0x2
   1400012bf:	mov    DWORD PTR [rsp+0x30],edi
   1400012c3:	mov    ebx,edi
   1400012c5:	mov    DWORD PTR [rsp+0x28],edi
   1400012c9:	mov    DWORD PTR [rsp+0x20],edi
   1400012cd:	mov    DWORD PTR [rbp-0x10],edi
   1400012d0:	mov    QWORD PTR [rbp-0x18],rdi
   1400012d4:	call   QWORD PTR [rip+0xcd36]        # 0x14000e010
   1400012da:	test   eax,eax
   1400012dc:	je     0x140001317
   1400012de:	mov    rdx,QWORD PTR [rbp-0x18]
   1400012e2:	lea    r8,[rbp-0x1c]
   1400012e6:	xor    ecx,ecx
   1400012e8:	call   QWORD PTR [rip+0xcd32]        # 0x14000e020
   1400012ee:	test   eax,eax
   1400012f0:	je     0x140001317
   1400012f2:	cmp    DWORD PTR [rbp-0x1c],edi
   1400012f5:	je     0x140001317
   1400012f7:	lea    rdx,[rbp-0x20]
   1400012fb:	mov    DWORD PTR [rbp-0x20],0x1000
   140001302:	xor    ecx,ecx
   140001304:	call   0x140009c38
   140001309:	test   eax,eax
   14000130b:	jne    0x140001317
   14000130d:	cmp    DWORD PTR [rbp-0x20],0x3000
   140001314:	setae  bl
   140001317:	mov    rcx,QWORD PTR [rbp-0x18]
   14000131b:	test   rcx,rcx
   14000131e:	je     0x140001326
   140001320:	call   QWORD PTR [rip+0xccf2]        # 0x14000e018
   140001326:	mov    eax,ebx
   140001328:	mov    rcx,QWORD PTR [rbp-0x8]
   14000132c:	xor    rcx,rsp
   14000132f:	call   0x14000cc40
   140001334:	lea    r11,[rsp+0x80]
   14000133c:	mov    rbx,QWORD PTR [r11+0x10]
   140001340:	mov    rdi,QWORD PTR [r11+0x18]
   140001344:	mov    rsp,r11
   140001347:	pop    rbp
   140001348:	ret    
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	mov    rax,rsp
   140001353:	mov    QWORD PTR [rax+0x8],rbx
   140001357:	push   rdi
   140001358:	sub    rsp,0x40
   14000135c:	movups xmm0,XMMWORD PTR [rip+0xd5f5]        # 0x14000e958
   140001363:	lea    rdx,[rax-0x28]
   140001367:	movups xmm1,XMMWORD PTR [rip+0x10282]        # 0x1400115f0
   14000136e:	lea    rcx,[rax-0x18]
   140001372:	movdqu XMMWORD PTR [rax-0x28],xmm0
   140001377:	movdqu XMMWORD PTR [rax-0x18],xmm1
   14000137c:	call   0x1400095c8
   140001381:	mov    ebx,eax
   140001383:	test   eax,eax
   140001385:	js     0x1400013f6
   140001387:	lea    rcx,[rip+0xd502]        # 0x14000e890
   14000138e:	call   QWORD PTR [rip+0xd034]        # 0x14000e3c8
   140001394:	mov    rdi,rax
   140001397:	test   rax,rax
   14000139a:	je     0x1400013e2
   14000139c:	lea    rdx,[rip+0xf925]        # 0x140010cc8
   1400013a3:	mov    rcx,rax
   1400013a6:	call   QWORD PTR [rip+0xcea4]        # 0x14000e250
   1400013ac:	mov    rbx,rax
   1400013af:	test   rax,rax
   1400013b2:	je     0x1400013c3
   1400013b4:	mov    rcx,rax
   1400013b7:	call   QWORD PTR [rip+0xd30b]        # 0x14000e6c8
   1400013bd:	call   rbx
   1400013bf:	mov    ebx,eax
   1400013c1:	jmp    0x1400013d7
   1400013c3:	call   QWORD PTR [rip+0xcf27]        # 0x14000e2f0
   1400013c9:	movzx  ebx,ax
   1400013cc:	or     ebx,0x80070000
   1400013d2:	test   eax,eax
   1400013d4:	cmovle ebx,eax
   1400013d7:	mov    rcx,rdi
   1400013da:	call   QWORD PTR [rip+0xcf28]        # 0x14000e308
   1400013e0:	jmp    0x1400013f6
   1400013e2:	call   QWORD PTR [rip+0xcf08]        # 0x14000e2f0
   1400013e8:	movzx  ebx,ax
   1400013eb:	or     ebx,0x80070000
   1400013f1:	test   eax,eax
   1400013f3:	cmovle ebx,eax
   1400013f6:	mov    eax,ebx
   1400013f8:	mov    rbx,QWORD PTR [rsp+0x50]
   1400013fd:	add    rsp,0x40
   140001401:	pop    rdi
   140001402:	ret    
   140001403:	int3   
   140001404:	int3   
   140001405:	int3   
   140001406:	int3   
   140001407:	int3   
   140001408:	int3   
   140001409:	int3   
   14000140a:	int3   
   14000140b:	int3   
   14000140c:	mov    QWORD PTR [rsp+0x10],rbx
   140001411:	push   rdi
   140001412:	sub    rsp,0x240
   140001419:	mov    rax,QWORD PTR [rip+0x12be8]        # 0x140014008
   140001420:	xor    rax,rsp
   140001423:	mov    QWORD PTR [rsp+0x230],rax
   14000142b:	mov    rbx,rcx
   14000142e:	xor    edi,edi
   140001430:	lea    rcx,[rsp+0x32]
   140001435:	mov    WORD PTR [rsp+0x30],di
   14000143a:	xor    edx,edx
   14000143c:	mov    r8d,0x1fe
   140001442:	call   0x14000d326
   140001447:	lea    rdx,[rip+0xd462]        # 0x14000e8b0
   14000144e:	mov    rcx,rbx
   140001451:	call   QWORD PTR [rip+0xcbb1]        # 0x14000e008
   140001457:	xor    ecx,ecx
   140001459:	call   QWORD PTR [rip+0xce81]        # 0x14000e2e0
   14000145f:	mov    r9d,0x100
   140001465:	lea    r8,[rsp+0x30]
   14000146a:	mov    rcx,rax
   14000146d:	mov    edx,0x3e9
   140001472:	call   QWORD PTR [rip+0xcfd8]        # 0x14000e450
   140001478:	test   eax,eax
   14000147a:	jle    0x1400014be
   14000147c:	lea    rcx,[rsp+0x30]
   140001481:	or     rax,0xffffffffffffffff
   140001485:	inc    rax
   140001488:	cmp    WORD PTR [rcx+rax*2],di
   14000148c:	jne    0x140001485
   14000148e:	lea    eax,[rax*2+0x2]
   140001495:	mov    r9d,0x1
   14000149b:	mov    DWORD PTR [rsp+0x28],eax
   14000149f:	lea    rdx,[rip+0xd3e2]        # 0x14000e888
   1400014a6:	lea    rax,[rsp+0x30]
   1400014ab:	xor    r8d,r8d
   1400014ae:	mov    rcx,rbx
   1400014b1:	mov    QWORD PTR [rsp+0x20],rax
   1400014b6:	call   QWORD PTR [rip+0xcb74]        # 0x14000e030
   1400014bc:	jmp    0x1400014c4
   1400014be:	call   QWORD PTR [rip+0xce2c]        # 0x14000e2f0
   1400014c4:	mov    rcx,QWORD PTR [rsp+0x230]
   1400014cc:	xor    rcx,rsp
   1400014cf:	call   0x14000cc40
   1400014d4:	mov    rbx,QWORD PTR [rsp+0x258]
   1400014dc:	add    rsp,0x240
   1400014e3:	pop    rdi
   1400014e4:	ret    
   1400014e5:	int3   
   1400014e6:	int3   
   1400014e7:	int3   
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	mov    QWORD PTR [rsp+0x10],rbx
   1400014f1:	mov    QWORD PTR [rsp+0x18],rsi
   1400014f6:	push   rbp
   1400014f7:	push   rdi
   1400014f8:	push   r12
   1400014fa:	push   r14
   1400014fc:	push   r15
   1400014fe:	lea    rbp,[rsp-0x3b0]
   140001506:	sub    rsp,0x4b0
   14000150d:	mov    rax,QWORD PTR [rip+0x12af4]        # 0x140014008
   140001514:	xor    rax,rsp
   140001517:	mov    QWORD PTR [rbp+0x3a0],rax
   14000151e:	mov    r14,rdx
   140001521:	mov    DWORD PTR [rsp+0x60],0x40
   140001529:	mov    rsi,rcx
   14000152c:	xor    edx,edx
   14000152e:	lea    rcx,[rsp+0x64]
   140001533:	mov    r8d,0x218
   140001539:	call   0x14000d326
   14000153e:	mov    r12d,0x10e
   140001544:	lea    rcx,[rsp+0x60]
   140001549:	mov    edx,r12d
   14000154c:	mov    r8,r14
   14000154f:	call   0x140001078
   140001554:	or     rdi,0xffffffffffffffff
   140001558:	xor    r15d,r15d
   14000155b:	mov    ebx,eax
   14000155d:	test   eax,eax
   14000155f:	jne    0x1400015bd
   140001561:	lea    r8,[rip+0xd358]        # 0x14000e8c0
   140001568:	mov    edx,r12d
   14000156b:	lea    rcx,[rsp+0x60]
   140001570:	call   0x140001078
   140001575:	mov    ebx,eax
   140001577:	test   eax,eax
   140001579:	jne    0x1400015bd
   14000157b:	lea    rcx,[rsp+0x60]
   140001580:	mov    rax,rdi
   140001583:	inc    rax
   140001586:	cmp    WORD PTR [rcx+rax*2],r15w
   14000158b:	jne    0x140001583
   14000158d:	lea    eax,[rax*2+0x2]
   140001594:	mov    r9d,0x2
   14000159a:	mov    DWORD PTR [rsp+0x28],eax
   14000159e:	lea    rdx,[rip+0xd32b]        # 0x14000e8d0
   1400015a5:	lea    rax,[rsp+0x60]
   1400015aa:	xor    r8d,r8d
   1400015ad:	mov    rcx,rsi
   1400015b0:	mov    QWORD PTR [rsp+0x20],rax
   1400015b5:	call   QWORD PTR [rip+0xca75]        # 0x14000e030
   1400015bb:	mov    ebx,eax
   1400015bd:	test   ebx,ebx
   1400015bf:	jne    0x1400016eb
   1400015c5:	lea    rax,[rsp+0x5c]
   1400015ca:	xor    r8d,r8d
   1400015cd:	mov    QWORD PTR [rsp+0x40],rax
   1400015d2:	lea    r9,[rip+0xd317]        # 0x14000e8f0
   1400015d9:	lea    rax,[rsp+0x50]
   1400015de:	mov    rcx,rsi
   1400015e1:	mov    QWORD PTR [rsp+0x38],rax
   1400015e6:	lea    rdx,[rip+0xd313]        # 0x14000e900
   1400015ed:	mov    QWORD PTR [rsp+0x30],r15
   1400015f2:	mov    DWORD PTR [rsp+0x28],0xf003f
   1400015fa:	mov    DWORD PTR [rsp+0x20],r15d
   1400015ff:	call   QWORD PTR [rip+0xc9fb]        # 0x14000e000
   140001605:	mov    ebx,eax
   140001607:	test   eax,eax
   140001609:	jne    0x1400016eb
   14000160f:	mov    rcx,QWORD PTR [rsp+0x50]
   140001614:	lea    r9d,[rax+0x4]
   140001618:	lea    rax,[rsp+0x58]
   14000161d:	mov    DWORD PTR [rsp+0x28],r9d
   140001622:	xor    r8d,r8d
   140001625:	mov    QWORD PTR [rsp+0x20],rax
   14000162a:	lea    rdx,[rip+0xd2e7]        # 0x14000e918
   140001631:	mov    DWORD PTR [rsp+0x58],0x1
   140001639:	call   QWORD PTR [rip+0xc9f1]        # 0x14000e030
   14000163f:	mov    ebx,eax
   140001641:	test   eax,eax
   140001643:	jne    0x1400016e0
   140001649:	xor    edx,edx
   14000164b:	mov    DWORD PTR [rbp+0x180],0x40
   140001655:	mov    r8d,0x218
   14000165b:	lea    rcx,[rbp+0x184]
   140001662:	call   0x14000d326
   140001667:	mov    r8,r14
   14000166a:	lea    rcx,[rbp+0x180]
   140001671:	mov    rdx,r12
   140001674:	call   0x140001078
   140001679:	mov    ebx,eax
   14000167b:	test   eax,eax
   14000167d:	jne    0x1400016e0
   14000167f:	lea    r8,[rip+0xd2a2]        # 0x14000e928
   140001686:	mov    rdx,r12
   140001689:	lea    rcx,[rbp+0x180]
   140001690:	call   0x140001078
   140001695:	mov    ebx,eax
   140001697:	test   eax,eax
   140001699:	jne    0x1400016e0
   14000169b:	lea    rax,[rbp+0x180]
   1400016a2:	inc    rdi
   1400016a5:	cmp    WORD PTR [rax+rdi*2],r15w
   1400016aa:	jne    0x1400016a2
   1400016ac:	mov    rcx,QWORD PTR [rsp+0x50]
   1400016b1:	lea    eax,[rdi*2+0x2]
   1400016b8:	mov    DWORD PTR [rsp+0x28],eax
   1400016bc:	lea    rdx,[rip+0xd275]        # 0x14000e938
   1400016c3:	lea    rax,[rbp+0x180]
   1400016ca:	mov    r9d,0x2
   1400016d0:	xor    r8d,r8d
   1400016d3:	mov    QWORD PTR [rsp+0x20],rax
   1400016d8:	call   QWORD PTR [rip+0xc952]        # 0x14000e030
   1400016de:	mov    ebx,eax
   1400016e0:	mov    rcx,QWORD PTR [rsp+0x50]
   1400016e5:	call   QWORD PTR [rip+0xc93d]        # 0x14000e028
   1400016eb:	mov    eax,ebx
   1400016ed:	mov    rcx,QWORD PTR [rbp+0x3a0]
   1400016f4:	xor    rcx,rsp
   1400016f7:	call   0x14000cc40
   1400016fc:	lea    r11,[rsp+0x4b0]
   140001704:	mov    rbx,QWORD PTR [r11+0x38]
   140001708:	mov    rsi,QWORD PTR [r11+0x40]
   14000170c:	mov    rsp,r11
   14000170f:	pop    r15
   140001711:	pop    r14
   140001713:	pop    r12
   140001715:	pop    rdi
   140001716:	pop    rbp
   140001717:	ret    
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    QWORD PTR [rsp+0x10],rbx
   140001725:	mov    QWORD PTR [rsp+0x18],rsi
   14000172a:	push   rdi
   14000172b:	sub    rsp,0x30
   14000172f:	call   0x14000119c
   140001734:	mov    DWORD PTR [rip+0x12eba],eax        # 0x1400145f4
   14000173a:	test   eax,eax
   14000173c:	jne    0x140001749
   14000173e:	call   0x14000126c
   140001743:	mov    DWORD PTR [rip+0x12ea7],eax        # 0x1400145f0
   140001749:	mov    ebx,0x1
   14000174e:	mov    ecx,0x100
   140001753:	mov    edx,ebx
   140001755:	call   QWORD PTR [rip+0xcba5]        # 0x14000e300
   14000175b:	lea    rdx,[rsp+0x40]
   140001760:	mov    DWORD PTR [rsp+0x40],0x1000
   140001768:	xor    ecx,ecx
   14000176a:	call   0x140009c38
   14000176f:	mov    edi,eax
   140001771:	test   eax,eax
   140001773:	jne    0x140001785
   140001775:	cmp    DWORD PTR [rsp+0x40],0x2000
   14000177d:	mov    eax,0x80070005
   140001782:	cmovb  edi,eax
   140001785:	test   edi,edi
   140001787:	jne    0x14000181e
   14000178d:	mov    eax,ebx
   14000178f:	xchg   DWORD PTR [rip+0x12e63],eax        # 0x1400145f8
   140001795:	test   eax,eax
   140001797:	jne    0x14000181e
   14000179d:	lea    ecx,[rdi+0x10]
   1400017a0:	call   0x140001140
   1400017a5:	mov    rsi,rax
   1400017a8:	test   rax,rax
   1400017ab:	je     0x1400017c3
   1400017ad:	lea    rax,[rip+0xd1b4]        # 0x14000e968
   1400017b4:	mov    DWORD PTR [rsi+0x8],ebx
   1400017b7:	mov    QWORD PTR [rsi],rax
   1400017ba:	lock add DWORD PTR [rip+0x12e43],ebx        # 0x140014604
   1400017c1:	jmp    0x1400017c5
   1400017c3:	xor    esi,esi
   1400017c5:	test   rsi,rsi
   1400017c8:	je     0x140001806
   1400017ca:	lea    rax,[rip+0x12e2f]        # 0x140014600
   1400017d1:	mov    r9d,ebx
   1400017d4:	mov    r8d,0x4
   1400017da:	mov    QWORD PTR [rsp+0x20],rax
   1400017df:	mov    rdx,rsi
   1400017e2:	lea    rcx,[rip+0xfe07]        # 0x1400115f0
   1400017e9:	call   QWORD PTR [rip+0xce31]        # 0x14000e620
   1400017ef:	mov    rcx,QWORD PTR [rsi]
   1400017f2:	mov    edi,eax
   1400017f4:	mov    rbx,QWORD PTR [rcx+0x10]
   1400017f8:	mov    rcx,rbx
   1400017fb:	call   QWORD PTR [rip+0xcec7]        # 0x14000e6c8
   140001801:	mov    rcx,rsi
   140001804:	call   rbx
   140001806:	lea    rcx,[rip+0x12e9b]        # 0x1400146a8
   14000180d:	call   QWORD PTR [rip+0xcbc5]        # 0x14000e3d8
   140001813:	test   rsi,rsi
   140001816:	mov    eax,0x8007000e
   14000181b:	cmove  edi,eax
   14000181e:	mov    rbx,QWORD PTR [rsp+0x48]
   140001823:	mov    eax,edi
   140001825:	mov    rsi,QWORD PTR [rsp+0x50]
   14000182a:	add    rsp,0x30
   14000182e:	pop    rdi
   14000182f:	ret    
   140001830:	int3   
   140001831:	int3   
   140001832:	int3   
   140001833:	int3   
   140001834:	int3   
   140001835:	int3   
   140001836:	int3   
   140001837:	int3   
   140001838:	rex push rbx
   14000183a:	sub    rsp,0x20
   14000183e:	lock inc DWORD PTR [rip+0x127db]        # 0x140014020
   140001845:	or     eax,0xffffffff
   140001848:	lock xadd DWORD PTR [rip+0x127d0],eax        # 0x140014020
   140001850:	cmp    eax,0x1
   140001853:	jne    0x140001881
   140001855:	xor    ebx,ebx
   140001857:	mov    eax,ebx
   140001859:	xchg   DWORD PTR [rip+0x12d99],eax        # 0x1400145f8
   14000185f:	cmp    eax,0x1
   140001862:	jne    0x140001886
   140001864:	mov    ecx,DWORD PTR [rip+0x12d96]        # 0x140014600
   14000186a:	call   QWORD PTR [rip+0xcda8]        # 0x14000e618
   140001870:	lea    rcx,[rip+0x12e31]        # 0x1400146a8
   140001877:	mov    ebx,eax
   140001879:	call   QWORD PTR [rip+0xcb09]        # 0x14000e388
   14000187f:	jmp    0x140001886
   140001881:	mov    ebx,0x1
   140001886:	mov    eax,ebx
   140001888:	add    rsp,0x20
   14000188c:	pop    rbx
   14000188d:	ret    
   14000188e:	int3   
   14000188f:	int3   
   140001890:	int3   
   140001891:	int3   
   140001892:	int3   
   140001893:	int3   
   140001894:	int3   
   140001895:	int3   
   140001896:	int3   
   140001897:	int3   
   140001898:	int3   
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	lock inc DWORD PTR [rcx+0x8]
   1400018a4:	mov    eax,DWORD PTR [rcx+0x8]
   1400018a7:	ret    
   1400018a8:	int3   
   1400018a9:	int3   
   1400018aa:	int3   
   1400018ab:	int3   
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018b5:	push   rdi
   1400018b6:	sub    rsp,0x20
   1400018ba:	mov    ebx,DWORD PTR [rcx+0x8]
   1400018bd:	mov    rdi,rcx
   1400018c0:	dec    ebx
   1400018c2:	or     ecx,0xffffffff
   1400018c5:	mov    eax,ecx
   1400018c7:	lock xadd DWORD PTR [rdi+0x8],eax
   1400018cc:	add    eax,ecx
   1400018ce:	jne    0x14000190c
   1400018d0:	lea    rax,[rip+0xd091]        # 0x14000e968
   1400018d7:	xor    ebx,ebx
   1400018d9:	mov    QWORD PTR [rdi],rax
   1400018dc:	mov    eax,ecx
   1400018de:	lock xadd DWORD PTR [rip+0x12d1e],eax        # 0x140014604
   1400018e6:	add    eax,ecx
   1400018e8:	jne    0x140001904
   1400018ea:	mov    rcx,QWORD PTR [rip+0x12d9f]        # 0x140014690
   1400018f1:	test   rcx,rcx
   1400018f4:	je     0x1400018fc
   1400018f6:	call   QWORD PTR [rip+0xc95c]        # 0x14000e258
   1400018fc:	xor    ecx,ecx
   1400018fe:	call   QWORD PTR [rip+0xcb5c]        # 0x14000e460
   140001904:	mov    rcx,rdi
   140001907:	call   0x14000116c
   14000190c:	mov    eax,ebx
   14000190e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001913:	add    rsp,0x20
   140001917:	pop    rdi
   140001918:	ret    
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	sub    rsp,0x28
   140001924:	mov    ecx,0x1
   140001929:	cmp    edx,ecx
   14000192b:	jne    0x140001949
   14000192d:	mov    eax,ecx
   14000192f:	lock xadd DWORD PTR [rip+0x126e9],eax        # 0x140014020
   140001937:	add    eax,ecx
   140001939:	jne    0x140001967
   14000193b:	lock add DWORD PTR [rip+0x126de],ecx        # 0x140014020
   140001942:	call   0x140001720
   140001947:	jmp    0x140001967
   140001949:	or     eax,0xffffffff
   14000194c:	lock xadd DWORD PTR [rip+0x126cc],eax        # 0x140014020
   140001954:	cmp    eax,ecx
   140001956:	jne    0x140001967
   140001958:	mov    ecx,0x4
   14000195d:	call   0x140001140
   140001962:	call   0x140001838
   140001967:	xor    eax,eax
   140001969:	add    rsp,0x28
   14000196d:	ret    
   14000196e:	int3   
   14000196f:	int3   
   140001970:	int3   
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	mov    QWORD PTR [rsp+0x8],rbx
   140001985:	mov    QWORD PTR [rsp+0x10],rsi
   14000198a:	push   rdi
   14000198b:	sub    rsp,0x20
   14000198f:	mov    rax,QWORD PTR [rdx]
   140001992:	xor    edi,edi
   140001994:	cmp    rax,QWORD PTR [rip+0xfa05]        # 0x1400113a0
   14000199b:	mov    rsi,rcx
   14000199e:	jne    0x1400019ad
   1400019a0:	mov    rax,QWORD PTR [rdx+0x8]
   1400019a4:	cmp    rax,QWORD PTR [rip+0xf9fd]        # 0x1400113a8
   1400019ab:	je     0x1400019c6
   1400019ad:	mov    rax,QWORD PTR [rdx]
   1400019b0:	cmp    rax,QWORD PTR [rip+0xf9f9]        # 0x1400113b0
   1400019b7:	jne    0x1400019e0
   1400019b9:	mov    rax,QWORD PTR [rdx+0x8]
   1400019bd:	cmp    rax,QWORD PTR [rip+0xf9f4]        # 0x1400113b8
   1400019c4:	jne    0x1400019e0
   1400019c6:	mov    QWORD PTR [r8],rcx
   1400019c9:	mov    rax,QWORD PTR [rcx]
   1400019cc:	mov    rbx,QWORD PTR [rax+0x8]
   1400019d0:	mov    rcx,rbx
   1400019d3:	call   QWORD PTR [rip+0xccef]        # 0x14000e6c8
   1400019d9:	mov    rcx,rsi
   1400019dc:	call   rbx
   1400019de:	jmp    0x1400019e8
   1400019e0:	mov    QWORD PTR [r8],rdi
   1400019e3:	mov    edi,0x80004002
   1400019e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019ed:	mov    eax,edi
   1400019ef:	mov    rsi,QWORD PTR [rsp+0x38]
   1400019f4:	add    rsp,0x20
   1400019f8:	pop    rdi
   1400019f9:	ret    
   1400019fa:	int3   
   1400019fb:	int3   
   1400019fc:	int3   
   1400019fd:	int3   
   1400019fe:	int3   
   1400019ff:	int3   
   140001a00:	mov    QWORD PTR [rsp+0x8],rbx
   140001a05:	mov    QWORD PTR [rsp+0x10],rbp
   140001a0a:	mov    QWORD PTR [rsp+0x18],rsi
   140001a0f:	push   rdi
   140001a10:	sub    rsp,0x20
   140001a14:	xor    ebx,ebx
   140001a16:	mov    rsi,r9
   140001a19:	mov    rbp,r8
   140001a1c:	test   rdx,rdx
   140001a1f:	je     0x140001a2e
   140001a21:	mov    QWORD PTR [r9],rbx
   140001a24:	mov    eax,0x80040110
   140001a29:	jmp    0x140001ad8
   140001a2e:	mov    ecx,0x30
   140001a33:	call   0x140001140
   140001a38:	mov    rdi,rax
   140001a3b:	test   rax,rax
   140001a3e:	je     0x140001a93
   140001a40:	lea    rax,[rip+0xd009]        # 0x14000ea50
   140001a47:	mov    ecx,0x1
   140001a4c:	mov    QWORD PTR [rdi],rax
   140001a4f:	lea    rax,[rip+0xcf3a]        # 0x14000e990
   140001a56:	mov    QWORD PTR [rdi+0x8],rax
   140001a5a:	lea    rax,[rip+0xcf4f]        # 0x14000e9b0
   140001a61:	mov    QWORD PTR [rdi+0x10],rax
   140001a65:	lock add DWORD PTR [rip+0x12b98],ecx        # 0x140014604
   140001a6c:	mov    DWORD PTR [rdi+0x18],ecx
   140001a6f:	mov    eax,ecx
   140001a71:	mov    QWORD PTR [rdi+0x20],rbx
   140001a75:	mov    QWORD PTR [rdi+0x28],rbx
   140001a79:	lock xadd DWORD PTR [rip+0x1259f],eax        # 0x140014020
   140001a81:	add    eax,ecx
   140001a83:	jne    0x140001a96
   140001a85:	lock add DWORD PTR [rip+0x12594],ecx        # 0x140014020
   140001a8c:	call   0x140001720
   140001a91:	jmp    0x140001a96
   140001a93:	mov    rdi,rbx
   140001a96:	test   rdi,rdi
   140001a99:	je     0x140001ace
   140001a9b:	mov    rax,QWORD PTR [rdi]
   140001a9e:	mov    rbx,QWORD PTR [rax]
   140001aa1:	mov    rcx,rbx
   140001aa4:	call   QWORD PTR [rip+0xcc1e]        # 0x14000e6c8
   140001aaa:	mov    r8,rsi
   140001aad:	mov    rdx,rbp
   140001ab0:	mov    rcx,rdi
   140001ab3:	call   rbx
   140001ab5:	mov    rdx,QWORD PTR [rdi]
   140001ab8:	mov    ebp,eax
   140001aba:	mov    rbx,QWORD PTR [rdx+0x10]
   140001abe:	mov    rcx,rbx
   140001ac1:	call   QWORD PTR [rip+0xcc01]        # 0x14000e6c8
   140001ac7:	mov    rcx,rdi
   140001aca:	call   rbx
   140001acc:	jmp    0x140001ad6
   140001ace:	mov    ebp,0x8007000e
   140001ad3:	mov    QWORD PTR [rsi],rbx
   140001ad6:	mov    eax,ebp
   140001ad8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001add:	mov    rbp,QWORD PTR [rsp+0x38]
   140001ae2:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ae7:	add    rsp,0x20
   140001aeb:	pop    rdi
   140001aec:	ret    
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	int3   
   140001af1:	int3   
   140001af2:	int3   
   140001af3:	int3   
   140001af4:	mov    QWORD PTR [rsp+0x8],rbx
   140001af9:	xor    ebx,ebx
   140001afb:	lea    rax,[rdx-0x1]
   140001aff:	mov    r10d,0x7ffffffe
   140001b05:	mov    r9d,ebx
   140001b08:	cmp    rax,r10
   140001b0b:	mov    r11d,0x80070057
   140001b11:	cmova  r9d,r11d
   140001b15:	test   r9d,r9d
   140001b18:	js     0x140001b59
   140001b1a:	mov    r9d,ebx
   140001b1d:	test   rdx,rdx
   140001b20:	je     0x140001b4d
   140001b22:	sub    r10,rdx
   140001b25:	sub    r8,rcx
   140001b28:	lea    rax,[r10+rdx*1]
   140001b2c:	test   rax,rax
   140001b2f:	je     0x140001b48
   140001b31:	movzx  eax,WORD PTR [r8+rcx*1]
   140001b36:	test   ax,ax
   140001b39:	je     0x140001b48
   140001b3b:	mov    WORD PTR [rcx],ax
   140001b3e:	add    rcx,0x2
   140001b42:	sub    rdx,0x1
   140001b46:	jne    0x140001b28
   140001b48:	test   rdx,rdx
   140001b4b:	jne    0x140001b5e
   140001b4d:	sub    rcx,0x2
   140001b51:	mov    r9d,0x8007007a
   140001b57:	jmp    0x140001b5e
   140001b59:	test   rdx,rdx
   140001b5c:	je     0x140001b61
   140001b5e:	mov    WORD PTR [rcx],bx
   140001b61:	mov    rbx,QWORD PTR [rsp+0x8]
   140001b66:	mov    eax,r9d
   140001b69:	ret    
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	mov    QWORD PTR [rsp+0x18],r8
   140001b75:	mov    QWORD PTR [rsp+0x20],r9
   140001b7a:	push   rbx
   140001b7b:	push   rbp
   140001b7c:	push   rsi
   140001b7d:	push   rdi
   140001b7e:	sub    rsp,0x28
   140001b82:	xor    ebp,ebp
   140001b84:	lea    rax,[rdx-0x1]
   140001b88:	cmp    rax,0x7ffffffe
   140001b8e:	mov    rsi,rcx
   140001b91:	mov    edi,ebp
   140001b93:	mov    ecx,0x80070057
   140001b98:	cmova  edi,ecx
   140001b9b:	test   edi,edi
   140001b9d:	js     0x140001bd4
   140001b9f:	lea    rbx,[rdx-0x1]
   140001ba3:	mov    rcx,rsi
   140001ba6:	mov    rdx,rbx
   140001ba9:	lea    r9,[rsp+0x68]
   140001bae:	mov    edi,ebp
   140001bb0:	call   QWORD PTR [rip+0xc942]        # 0x14000e4f8
   140001bb6:	test   eax,eax
   140001bb8:	js     0x140001bc9
   140001bba:	cdqe   
   140001bbc:	cmp    rax,rbx
   140001bbf:	ja     0x140001bc9
   140001bc1:	jne    0x140001bdc
   140001bc3:	mov    WORD PTR [rsi+rbx*2],bp
   140001bc7:	jmp    0x140001bdc
   140001bc9:	mov    WORD PTR [rsi+rbx*2],bp
   140001bcd:	mov    edi,0x8007007a
   140001bd2:	jmp    0x140001bdc
   140001bd4:	test   rdx,rdx
   140001bd7:	je     0x140001bdc
   140001bd9:	mov    WORD PTR [rsi],bp
   140001bdc:	mov    eax,edi
   140001bde:	add    rsp,0x28
   140001be2:	pop    rdi
   140001be3:	pop    rsi
   140001be4:	pop    rbp
   140001be5:	pop    rbx
   140001be6:	ret    
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    QWORD PTR [rsp+0x8],rcx
   140001bf5:	push   rbx
   140001bf6:	sub    rsp,0x20
   140001bfa:	mov    rbx,rcx
   140001bfd:	add    rcx,0x8
   140001c01:	call   QWORD PTR [rip+0xc7d1]        # 0x14000e3d8
   140001c07:	mov    DWORD PTR [rbx],0x1
   140001c0d:	jmp    0x140001c17
   140001c0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c14:	and    DWORD PTR [rbx],0x0
   140001c17:	mov    rax,rbx
   140001c1a:	add    rsp,0x20
   140001c1e:	pop    rbx
   140001c1f:	ret    
   140001c20:	int3   
   140001c21:	int3   
   140001c22:	int3   
   140001c23:	int3   
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	rex push rbx
   140001c2a:	sub    rsp,0x20
   140001c2e:	mov    rbx,rcx
   140001c31:	call   0x140001bf0
   140001c36:	xor    eax,eax
   140001c38:	mov    DWORD PTR [rbx+0x90],0x1
   140001c42:	mov    DWORD PTR [rbx+0x88],eax
   140001c48:	mov    QWORD PTR [rbx+0x68],rax
   140001c4c:	mov    QWORD PTR [rbx+0x70],rax
   140001c50:	mov    QWORD PTR [rbx+0x38],rax
   140001c54:	mov    QWORD PTR [rbx+0x40],rax
   140001c58:	mov    QWORD PTR [rbx+0x48],rax
   140001c5c:	mov    QWORD PTR [rbx+0x50],rax
   140001c60:	mov    BYTE PTR [rbx+0xa0],al
   140001c66:	mov    DWORD PTR [rbx+0x78],eax
   140001c69:	mov    QWORD PTR [rbx+0x80],rax
   140001c70:	mov    QWORD PTR [rbx+0x98],rax
   140001c77:	mov    DWORD PTR [rbx+0x30],eax
   140001c7a:	mov    rax,rbx
   140001c7d:	add    rsp,0x20
   140001c81:	pop    rbx
   140001c82:	ret    
   140001c83:	int3   
   140001c84:	int3   
   140001c85:	int3   
   140001c86:	int3   
   140001c87:	int3   
   140001c88:	int3   
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	mov    rax,rsp
   140001c8f:	mov    QWORD PTR [rax+0x8],rbx
   140001c93:	mov    QWORD PTR [rax+0x10],rbp
   140001c97:	mov    QWORD PTR [rax+0x18],rsi
   140001c9b:	mov    QWORD PTR [rax+0x20],rdi
   140001c9f:	push   r14
   140001ca1:	sub    rsp,0x20
   140001ca5:	mov    rdi,rcx
   140001ca8:	mov    ebp,edx
   140001caa:	mov    rcx,QWORD PTR [rcx+0x38]
   140001cae:	call   QWORD PTR [rip+0xc75c]        # 0x14000e410
   140001cb4:	mov    rcx,QWORD PTR [rdi+0x40]
   140001cb8:	call   QWORD PTR [rip+0xc752]        # 0x14000e410
   140001cbe:	mov    rcx,QWORD PTR [rdi+0x48]
   140001cc2:	call   QWORD PTR [rip+0xc748]        # 0x14000e410
   140001cc8:	mov    rcx,QWORD PTR [rdi+0x50]
   140001ccc:	call   QWORD PTR [rip+0xc73e]        # 0x14000e410
   140001cd2:	mov    rcx,QWORD PTR [rdi+0x68]
   140001cd6:	xor    r14d,r14d
   140001cd9:	test   rcx,rcx
   140001cdc:	je     0x140001ce4
   140001cde:	call   QWORD PTR [rip+0xc624]        # 0x14000e308
   140001ce4:	mov    rcx,QWORD PTR [rdi+0x70]
   140001ce8:	test   rcx,rcx
   140001ceb:	je     0x140001cf3
   140001ced:	call   QWORD PTR [rip+0xc615]        # 0x14000e308
   140001cf3:	mov    rbx,QWORD PTR [rdi+0x80]
   140001cfa:	jmp    0x140001d22
   140001cfc:	mov    rcx,QWORD PTR [rbx]
   140001cff:	test   rcx,rcx
   140001d02:	je     0x140001d0a
   140001d04:	call   QWORD PTR [rip+0xc93e]        # 0x14000e648
   140001d0a:	cmp    rbx,QWORD PTR [rbx+0x8]
   140001d0e:	mov    rcx,rbx
   140001d11:	mov    rax,r14
   140001d14:	cmovne rax,QWORD PTR [rbx+0x8]
   140001d19:	mov    rbx,rax
   140001d1c:	call   QWORD PTR [rip+0xc926]        # 0x14000e648
   140001d22:	test   rbx,rbx
   140001d25:	jne    0x140001cfc
   140001d27:	mov    rsi,QWORD PTR [rdi+0x98]
   140001d2e:	test   rsi,rsi
   140001d31:	je     0x140001d4f
   140001d33:	mov    rax,QWORD PTR [rsi]
   140001d36:	mov    rbx,QWORD PTR [rax+0x10]
   140001d3a:	mov    rcx,rbx
   140001d3d:	call   QWORD PTR [rip+0xc985]        # 0x14000e6c8
   140001d43:	mov    rcx,rsi
   140001d46:	call   rbx
   140001d48:	mov    QWORD PTR [rdi+0x98],r14
   140001d4f:	test   ebp,ebp
   140001d51:	je     0x140001d88
   140001d53:	mov    QWORD PTR [rdi+0x68],r14
   140001d57:	mov    QWORD PTR [rdi+0x70],r14
   140001d5b:	mov    QWORD PTR [rdi+0x38],r14
   140001d5f:	mov    QWORD PTR [rdi+0x40],r14
   140001d63:	mov    QWORD PTR [rdi+0x48],r14
   140001d67:	mov    QWORD PTR [rdi+0x50],r14
   140001d6b:	mov    BYTE PTR [rdi+0xa0],r14b
   140001d72:	mov    DWORD PTR [rdi+0x78],r14d
   140001d76:	mov    QWORD PTR [rdi+0x80],r14
   140001d7d:	mov    QWORD PTR [rdi+0x98],r14
   140001d84:	mov    DWORD PTR [rdi+0x30],r14d
   140001d88:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d8d:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d92:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d97:	mov    rdi,QWORD PTR [rsp+0x48]
   140001d9c:	add    rsp,0x20
   140001da0:	pop    r14
   140001da2:	ret    
   140001da3:	int3   
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	mov    QWORD PTR [rsp+0x8],rbx
   140001db1:	mov    QWORD PTR [rsp+0x10],rbp
   140001db6:	mov    QWORD PTR [rsp+0x18],rsi
   140001dbb:	push   rdi
   140001dbc:	sub    rsp,0x20
   140001dc0:	mov    rdi,QWORD PTR [rcx+0x98]
   140001dc7:	mov    rsi,r8
   140001dca:	mov    rbp,rdx
   140001dcd:	mov    eax,0x80070005
   140001dd2:	test   rdi,rdi
   140001dd5:	je     0x140001df2
   140001dd7:	mov    rax,QWORD PTR [rdi]
   140001dda:	mov    rbx,QWORD PTR [rax+0x18]
   140001dde:	mov    rcx,rbx
   140001de1:	call   QWORD PTR [rip+0xc8e1]        # 0x14000e6c8
   140001de7:	mov    r8,rsi
   140001dea:	mov    rdx,rbp
   140001ded:	mov    rcx,rdi
   140001df0:	call   rbx
   140001df2:	mov    rbx,QWORD PTR [rsp+0x30]
   140001df7:	mov    rbp,QWORD PTR [rsp+0x38]
   140001dfc:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e01:	add    rsp,0x20
   140001e05:	pop    rdi
   140001e06:	ret    
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    QWORD PTR [rsp+0x8],rbx
   140001e15:	mov    QWORD PTR [rsp+0x10],rbp
   140001e1a:	mov    QWORD PTR [rsp+0x18],rsi
   140001e1f:	push   rdi
   140001e20:	sub    rsp,0x20
   140001e24:	mov    rsi,rcx
   140001e27:	mov    rbx,rdx
   140001e2a:	mov    rcx,rdx
   140001e2d:	mov    edi,0x80070005
   140001e32:	call   0x140006dfc
   140001e37:	xor    ebp,ebp
   140001e39:	test   eax,eax
   140001e3b:	jne    0x140001e79
   140001e3d:	mov    rsi,QWORD PTR [rsi+0x80]
   140001e44:	lea    r8,[rsp+0x48]
   140001e49:	mov    rdx,rbx
   140001e4c:	mov    QWORD PTR [rsp+0x48],rbp
   140001e51:	call   0x140005ff0
   140001e56:	test   eax,eax
   140001e58:	js     0x140001e79
   140001e5a:	mov    rcx,QWORD PTR [rsp+0x48]
   140001e5f:	mov    rdx,rsi
   140001e62:	call   0x140006578
   140001e67:	mov    rcx,QWORD PTR [rsp+0x48]
   140001e6c:	mov    ebx,eax
   140001e6e:	call   QWORD PTR [rip+0xc7d4]        # 0x14000e648
   140001e74:	test   ebx,ebx
   140001e76:	cmovne edi,ebp
   140001e79:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e7e:	mov    eax,edi
   140001e80:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e85:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e8a:	add    rsp,0x20
   140001e8e:	pop    rdi
   140001e8f:	ret    
   140001e90:	int3   
   140001e91:	int3   
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	mov    QWORD PTR [rsp+0x8],rbx
   140001e9d:	mov    QWORD PTR [rsp+0x10],rbp
   140001ea2:	push   rsi
   140001ea3:	push   rdi
   140001ea4:	push   r13
   140001ea6:	push   r14
   140001ea8:	push   r15
   140001eaa:	sub    rsp,0x50
   140001eae:	mov    rsi,r8
   140001eb1:	mov    r14,rdx
   140001eb4:	mov    r13,rcx
   140001eb7:	xor    ebx,ebx
   140001eb9:	xor    ebp,ebp
   140001ebb:	call   QWORD PTR [rip+0xc51f]        # 0x14000e3e0
   140001ec1:	and    QWORD PTR [rsp+0x40],rbx
   140001ec6:	xor    edi,edi
   140001ec8:	and    QWORD PTR [rsp+0x98],rbx
   140001ed0:	mov    r15,rax
   140001ed3:	cmp    DWORD PTR [rip+0x1271b],ebx        # 0x1400145f4
   140001ed9:	jne    0x140001eee
   140001edb:	call   QWORD PTR [rip+0xc76f]        # 0x14000e650
   140001ee1:	mov    ebx,eax
   140001ee3:	test   eax,eax
   140001ee5:	js     0x140001f95
   140001eeb:	lea    ebp,[rdi+0x1]
   140001eee:	mov    r8d,DWORD PTR [r13+0x78]
   140001ef2:	xor    edx,edx
   140001ef4:	lea    ecx,[rdx+0x40]
   140001ef7:	call   QWORD PTR [rip+0xc4d3]        # 0x14000e3d0
   140001efd:	mov    rdi,rax
   140001f00:	test   rax,rax
   140001f03:	je     0x140001f81
   140001f05:	and    DWORD PTR [rsp+0x30],0x0
   140001f0a:	lea    r9,[rsp+0x40]
   140001f0f:	and    DWORD PTR [rsp+0x28],0x0
   140001f14:	mov    r8,rax
   140001f17:	mov    rdx,QWORD PTR [r14]
   140001f1a:	mov    rcx,r15
   140001f1d:	mov    DWORD PTR [rsp+0x20],0x20000100
   140001f25:	call   QWORD PTR [rip+0xc44d]        # 0x14000e378
   140001f2b:	test   eax,eax
   140001f2d:	je     0x140001f81
   140001f2f:	and    DWORD PTR [rsp+0x30],0x0
   140001f34:	lea    r9,[rsp+0x98]
   140001f3c:	and    DWORD PTR [rsp+0x28],0x0
   140001f41:	mov    r8,rdi
   140001f44:	mov    rdx,QWORD PTR [r14+0x8]
   140001f48:	mov    rcx,r15
   140001f4b:	mov    DWORD PTR [rsp+0x20],0x20000002
   140001f53:	call   QWORD PTR [rip+0xc41f]        # 0x14000e378
   140001f59:	test   eax,eax
   140001f5b:	je     0x140001f81
   140001f5d:	mov    rax,QWORD PTR [rsp+0x40]
   140001f62:	mov    QWORD PTR [rsi],rax
   140001f65:	mov    rax,QWORD PTR [rsp+0x98]
   140001f6d:	mov    QWORD PTR [rsi+0x8],rax
   140001f71:	mov    eax,DWORD PTR [r14+0x10]
   140001f75:	mov    DWORD PTR [rsi+0x10],eax
   140001f78:	mov    eax,DWORD PTR [r14+0x14]
   140001f7c:	mov    DWORD PTR [rsi+0x14],eax
   140001f7f:	jmp    0x140001fb8
   140001f81:	call   QWORD PTR [rip+0xc369]        # 0x14000e2f0
   140001f87:	movzx  ebx,ax
   140001f8a:	or     ebx,0x80070000
   140001f90:	test   eax,eax
   140001f92:	cmovle ebx,eax
   140001f95:	mov    rcx,QWORD PTR [rsp+0x98]
   140001f9d:	test   rcx,rcx
   140001fa0:	je     0x140001fa8
   140001fa2:	call   QWORD PTR [rip+0xc3c8]        # 0x14000e370
   140001fa8:	mov    rcx,QWORD PTR [rsp+0x40]
   140001fad:	test   rcx,rcx
   140001fb0:	je     0x140001fb8
   140001fb2:	call   QWORD PTR [rip+0xc3b8]        # 0x14000e370
   140001fb8:	test   rdi,rdi
   140001fbb:	je     0x140001fc6
   140001fbd:	mov    rcx,rdi
   140001fc0:	call   QWORD PTR [rip+0xc3aa]        # 0x14000e370
   140001fc6:	test   ebp,ebp
   140001fc8:	je     0x140001fd0
   140001fca:	call   QWORD PTR [rip+0xc670]        # 0x14000e640
   140001fd0:	lea    r11,[rsp+0x50]
   140001fd5:	mov    eax,ebx
   140001fd7:	mov    rbx,QWORD PTR [r11+0x30]
   140001fdb:	mov    rbp,QWORD PTR [r11+0x38]
   140001fdf:	mov    rsp,r11
   140001fe2:	pop    r15
   140001fe4:	pop    r14
   140001fe6:	pop    r13
   140001fe8:	pop    rdi
   140001fe9:	pop    rsi
   140001fea:	ret    
   140001feb:	int3   
   140001fec:	int3   
   140001fed:	int3   
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	int3   
   140001ff1:	int3   
   140001ff2:	int3   
   140001ff3:	int3   
   140001ff4:	mov    rax,rsp
   140001ff7:	mov    QWORD PTR [rax+0x10],rbx
   140001ffb:	mov    QWORD PTR [rax+0x18],rbp
   140001fff:	mov    QWORD PTR [rax+0x8],rcx
   140002003:	push   rsi
   140002004:	push   rdi
   140002005:	push   r12
   140002007:	push   r14
   140002009:	push   r15
   14000200b:	sub    rsp,0x30
   14000200f:	xor    ebx,ebx
   140002011:	xor    ecx,ecx
   140002013:	xor    esi,esi
   140002015:	mov    QWORD PTR [rax+0x8],rcx
   140002019:	mov    r14,r9
   14000201c:	mov    r15d,r8d
   14000201f:	mov    r12,rdx
   140002022:	lea    ebp,[rbx+0x1]
   140002025:	test   r8d,r8d
   140002028:	je     0x1400020b9
   14000202e:	mov    rdi,r9
   140002031:	test   ebp,ebp
   140002033:	je     0x140002055
   140002035:	lea    r8,[rsp+0x60]
   14000203a:	mov    rcx,r12
   14000203d:	lea    rdx,[rip+0xee44]        # 0x140010e88
   140002044:	call   QWORD PTR [rip+0xbfee]        # 0x14000e038
   14000204a:	test   eax,eax
   14000204c:	jne    0x14000209b
   14000204e:	mov    rcx,QWORD PTR [rsp+0x60]
   140002053:	xor    ebp,ebp
   140002055:	test   r14,r14
   140002058:	je     0x14000208e
   14000205a:	mov    rdx,QWORD PTR [rdi]
   14000205d:	test   rdx,rdx
   140002060:	je     0x14000208e
   140002062:	lea    rax,[rip+0xc81f]        # 0x14000e888
   140002069:	mov    DWORD PTR [rsp+0x28],0x1
   140002071:	mov    r9d,0x1
   140002077:	mov    QWORD PTR [rsp+0x20],rax
   14000207c:	xor    r8d,r8d
   14000207f:	call   QWORD PTR [rip+0xbfab]        # 0x14000e030
   140002085:	test   eax,eax
   140002087:	jne    0x14000209b
   140002089:	mov    rcx,QWORD PTR [rsp+0x60]
   14000208e:	inc    esi
   140002090:	add    rdi,0x8
   140002094:	cmp    esi,r15d
   140002097:	jae    0x1400020ae
   140002099:	jmp    0x140002031
   14000209b:	mov    rcx,QWORD PTR [rsp+0x60]
   1400020a0:	movzx  ebx,ax
   1400020a3:	or     ebx,0x80070000
   1400020a9:	test   eax,eax
   1400020ab:	cmovle ebx,eax
   1400020ae:	test   rcx,rcx
   1400020b1:	je     0x1400020b9
   1400020b3:	call   QWORD PTR [rip+0xbf6f]        # 0x14000e028
   1400020b9:	mov    rbp,QWORD PTR [rsp+0x70]
   1400020be:	mov    eax,ebx
   1400020c0:	mov    rbx,QWORD PTR [rsp+0x68]
   1400020c5:	add    rsp,0x30
   1400020c9:	pop    r15
   1400020cb:	pop    r14
   1400020cd:	pop    r12
   1400020cf:	pop    rdi
   1400020d0:	pop    rsi
   1400020d1:	ret    
   1400020d2:	int3   
   1400020d3:	int3   
   1400020d4:	int3   
   1400020d5:	int3   
   1400020d6:	int3   
   1400020d7:	int3   
   1400020d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400020dd:	push   rbp
   1400020de:	push   rsi
   1400020df:	push   rdi
   1400020e0:	push   r12
   1400020e2:	push   r13
   1400020e4:	push   r14
   1400020e6:	push   r15
   1400020e8:	lea    rbp,[rsp-0x180]
   1400020f0:	sub    rsp,0x280
   1400020f7:	mov    rax,QWORD PTR [rip+0x11f0a]        # 0x140014008
   1400020fe:	xor    rax,rsp
   140002101:	mov    QWORD PTR [rbp+0x170],rax
   140002108:	mov    r12,QWORD PTR [rbp+0x1e0]
   14000210f:	lea    rax,[rsp+0x48]
   140002114:	mov    rbx,rdx
   140002117:	mov    QWORD PTR [rsp+0x20],rax
   14000211c:	xor    r13d,r13d
   14000211f:	lea    rdx,[rip+0xe9a2]        # 0x140010ac8
   140002126:	mov    r14,r9
   140002129:	mov    QWORD PTR [rsp+0x48],r13
   14000212e:	mov    r15d,r8d
   140002131:	mov    QWORD PTR [rsp+0x58],r13
   140002136:	mov    rcx,rbx
   140002139:	mov    r9d,0x2001f
   14000213f:	xor    r8d,r8d
   140002142:	mov    edi,r13d
   140002145:	call   QWORD PTR [rip+0xbf2d]        # 0x14000e078
   14000214b:	test   eax,eax
   14000214d:	je     0x140002171
   14000214f:	test   r15d,r15d
   140002152:	je     0x140002171
   140002154:	lea    r8,[rsp+0x48]
   140002159:	mov    rcx,rbx
   14000215c:	lea    rdx,[rip+0xe965]        # 0x140010ac8
   140002163:	call   QWORD PTR [rip+0xbecf]        # 0x14000e038
   140002169:	test   eax,eax
   14000216b:	jne    0x140002337
   140002171:	lea    rax,[rsp+0x58]
   140002176:	mov    r9d,0xf003f
   14000217c:	xor    r8d,r8d
   14000217f:	mov    QWORD PTR [rsp+0x20],rax
   140002184:	lea    rdx,[rip+0xe94d]        # 0x140010ad8
   14000218b:	mov    rcx,rbx
   14000218e:	call   QWORD PTR [rip+0xbee4]        # 0x14000e078
   140002194:	test   eax,eax
   140002196:	je     0x1400021ba
   140002198:	test   r15d,r15d
   14000219b:	je     0x1400021ba
   14000219d:	lea    r8,[rsp+0x58]
   1400021a2:	mov    rcx,rbx
   1400021a5:	lea    rdx,[rip+0xe92c]        # 0x140010ad8
   1400021ac:	call   QWORD PTR [rip+0xbe86]        # 0x14000e038
   1400021b2:	test   eax,eax
   1400021b4:	jne    0x140002337
   1400021ba:	mov    rbx,QWORD PTR [rsp+0x48]
   1400021bf:	test   rbx,rbx
   1400021c2:	je     0x14000225b
   1400021c8:	xor    edx,edx
   1400021ca:	mov    DWORD PTR [rsp+0x40],0x1
   1400021d2:	mov    r8d,0x206
   1400021d8:	mov    DWORD PTR [rsp+0x50],0x104
   1400021e0:	lea    rcx,[rsp+0x62]
   1400021e5:	mov    WORD PTR [rsp+0x60],r13w
   1400021eb:	mov    esi,r13d
   1400021ee:	call   0x14000d326
   1400021f3:	xor    edx,edx
   1400021f5:	mov    rcx,rbx
   1400021f8:	jmp    0x14000222e
   1400021fa:	lea    rcx,[rsp+0x60]
   1400021ff:	mov    DWORD PTR [rsp+0x50],0x104
   140002207:	inc    esi
   140002209:	call   QWORD PTR [rip+0xc1a9]        # 0x14000e3b8
   14000220f:	cmp    eax,0xffffffff
   140002212:	jne    0x140002227
   140002214:	mov    rcx,QWORD PTR [rsp+0x48]
   140002219:	lea    rdx,[rsp+0x60]
   14000221e:	mov    esi,r13d
   140002221:	call   QWORD PTR [rip+0xbde1]        # 0x14000e008
   140002227:	mov    rcx,QWORD PTR [rsp+0x48]
   14000222c:	mov    edx,esi
   14000222e:	mov    QWORD PTR [rsp+0x38],r13
   140002233:	lea    rax,[rsp+0x40]
   140002238:	mov    QWORD PTR [rsp+0x30],r13
   14000223d:	lea    r9,[rsp+0x50]
   140002242:	mov    QWORD PTR [rsp+0x28],rax
   140002247:	lea    r8,[rsp+0x60]
   14000224c:	mov    QWORD PTR [rsp+0x20],r13
   140002251:	call   QWORD PTR [rip+0xbe19]        # 0x14000e070
   140002257:	test   eax,eax
   140002259:	je     0x1400021fa
   14000225b:	mov    ebx,r13d
   14000225e:	test   r15d,r15d
   140002261:	je     0x140002345
   140002267:	mov    rsi,r12
   14000226a:	mov    rdx,QWORD PTR [r14]
   14000226d:	test   rdx,rdx
   140002270:	je     0x140002323
   140002276:	mov    rcx,QWORD PTR [rsp+0x48]
   14000227b:	lea    rax,[rip+0xc606]        # 0x14000e888
   140002282:	mov    DWORD PTR [rsp+0x28],0x1
   14000228a:	mov    r9d,0x1
   140002290:	xor    r8d,r8d
   140002293:	mov    QWORD PTR [rsp+0x20],rax
   140002298:	call   QWORD PTR [rip+0xbd92]        # 0x14000e030
   14000229e:	test   eax,eax
   1400022a0:	jne    0x140002337
   1400022a6:	test   r12,r12
   1400022a9:	je     0x140002323
   1400022ab:	mov    rcx,QWORD PTR [r14]
   1400022ae:	lea    edx,[rax+0x5c]
   1400022b1:	call   QWORD PTR [rip+0xc239]        # 0x14000e4f0
   1400022b7:	test   rax,rax
   1400022ba:	je     0x1400022c2
   1400022bc:	add    rax,0x2
   1400022c0:	jmp    0x1400022c5
   1400022c2:	mov    rax,QWORD PTR [r14]
   1400022c5:	mov    rcx,QWORD PTR [rsp+0x58]
   1400022ca:	lea    r8,[rsp+0x50]
   1400022cf:	mov    rdx,rax
   1400022d2:	mov    QWORD PTR [rsp+0x50],r13
   1400022d7:	call   QWORD PTR [rip+0xbd5b]        # 0x14000e038
   1400022dd:	test   eax,eax
   1400022df:	jne    0x140002337
   1400022e1:	mov    eax,DWORD PTR [rsi]
   1400022e3:	lea    rdx,[rip+0xe806]        # 0x140010af0
   1400022ea:	mov    rcx,QWORD PTR [rsp+0x50]
   1400022ef:	mov    r9d,0x4
   1400022f5:	mov    DWORD PTR [rsp+0x40],eax
   1400022f9:	xor    r8d,r8d
   1400022fc:	lea    rax,[rsp+0x40]
   140002301:	mov    DWORD PTR [rsp+0x28],0x4
   140002309:	mov    QWORD PTR [rsp+0x20],rax
   14000230e:	call   QWORD PTR [rip+0xbd1c]        # 0x14000e030
   140002314:	test   eax,eax
   140002316:	jne    0x140002337
   140002318:	mov    rcx,QWORD PTR [rsp+0x50]
   14000231d:	call   QWORD PTR [rip+0xbd05]        # 0x14000e028
   140002323:	inc    ebx
   140002325:	add    r14,0x8
   140002329:	add    rsi,0x4
   14000232d:	cmp    ebx,r15d
   140002330:	jae    0x140002345
   140002332:	jmp    0x14000226a
   140002337:	movzx  edi,ax
   14000233a:	or     edi,0x80070000
   140002340:	test   eax,eax
   140002342:	cmovle edi,eax
   140002345:	mov    rbx,QWORD PTR [rsp+0x48]
   14000234a:	test   rbx,rbx
   14000234d:	je     0x140002358
   14000234f:	mov    rcx,rbx
   140002352:	call   QWORD PTR [rip+0xbcd0]        # 0x14000e028
   140002358:	mov    rcx,QWORD PTR [rsp+0x58]
   14000235d:	test   rcx,rcx
   140002360:	je     0x140002368
   140002362:	call   QWORD PTR [rip+0xbcc0]        # 0x14000e028
   140002368:	mov    eax,edi
   14000236a:	mov    rcx,QWORD PTR [rbp+0x170]
   140002371:	xor    rcx,rsp
   140002374:	call   0x14000cc40
   140002379:	mov    rbx,QWORD PTR [rsp+0x2c0]
   140002381:	add    rsp,0x280
   140002388:	pop    r15
   14000238a:	pop    r14
   14000238c:	pop    r13
   14000238e:	pop    r12
   140002390:	pop    rdi
   140002391:	pop    rsi
   140002392:	pop    rbp
   140002393:	ret    
   140002394:	int3   
   140002395:	int3   
   140002396:	int3   
   140002397:	int3   
   140002398:	int3   
   140002399:	int3   
   14000239a:	int3   
   14000239b:	int3   
   14000239c:	mov    QWORD PTR [rsp+0x8],rcx
   1400023a1:	push   rbp
   1400023a2:	push   rbx
   1400023a3:	push   rdi
   1400023a4:	mov    rbp,rsp
   1400023a7:	sub    rsp,0x40
   1400023ab:	and    QWORD PTR [rbp-0x8],0x0
   1400023b0:	lea    rcx,[rbp-0x8]
   1400023b4:	and    QWORD PTR [rbp-0x10],0x0
   1400023b9:	mov    rdi,rdx
   1400023bc:	and    DWORD PTR [rbp+0x38],0x0
   1400023c0:	and    DWORD PTR [rbp+0x20],0x0
   1400023c4:	mov    DWORD PTR [rbp+0x30],0x4
   1400023cb:	call   0x14000a34c
   1400023d0:	mov    ebx,eax
   1400023d2:	test   eax,eax
   1400023d4:	jne    0x140002489
   1400023da:	mov    rcx,QWORD PTR [rbp-0x8]
   1400023de:	lea    rax,[rbp-0x10]
   1400023e2:	mov    r9d,0x2001f
   1400023e8:	mov    QWORD PTR [rsp+0x20],rax
   1400023ed:	xor    r8d,r8d
   1400023f0:	lea    rdx,[rip+0xe719]        # 0x140010b10
   1400023f7:	call   QWORD PTR [rip+0xbc7b]        # 0x14000e078
   1400023fd:	test   eax,eax
   1400023ff:	je     0x14000241a
   140002401:	mov    rcx,QWORD PTR [rbp-0x8]
   140002405:	lea    r8,[rbp-0x10]
   140002409:	lea    rdx,[rip+0xe700]        # 0x140010b10
   140002410:	call   QWORD PTR [rip+0xbc22]        # 0x14000e038
   140002416:	test   eax,eax
   140002418:	jne    0x14000247b
   14000241a:	mov    rcx,QWORD PTR [rbp-0x10]
   14000241e:	lea    rax,[rbp+0x30]
   140002422:	mov    QWORD PTR [rsp+0x28],rax
   140002427:	lea    r9,[rbp+0x38]
   14000242b:	lea    rax,[rbp+0x20]
   14000242f:	xor    r8d,r8d
   140002432:	mov    rdx,rdi
   140002435:	mov    QWORD PTR [rsp+0x20],rax
   14000243a:	call   QWORD PTR [rip+0xbc08]        # 0x14000e048
   140002440:	test   eax,eax
   140002442:	jne    0x140002449
   140002444:	inc    DWORD PTR [rbp+0x20]
   140002447:	jmp    0x140002450
   140002449:	mov    DWORD PTR [rbp+0x20],0x1
   140002450:	mov    rcx,QWORD PTR [rbp-0x10]
   140002454:	lea    rax,[rbp+0x20]
   140002458:	mov    DWORD PTR [rsp+0x28],0x4
   140002460:	mov    r9d,0x4
   140002466:	xor    r8d,r8d
   140002469:	mov    QWORD PTR [rsp+0x20],rax
   14000246e:	mov    rdx,rdi
   140002471:	call   QWORD PTR [rip+0xbbc9]        # 0x14000e040
   140002477:	test   eax,eax
   140002479:	je     0x140002489
   14000247b:	movzx  ebx,ax
   14000247e:	or     ebx,0x80070000
   140002484:	test   eax,eax
   140002486:	cmovle ebx,eax
   140002489:	mov    rcx,QWORD PTR [rbp-0x10]
   14000248d:	test   rcx,rcx
   140002490:	je     0x140002498
   140002492:	call   QWORD PTR [rip+0xbb90]        # 0x14000e028
   140002498:	mov    eax,ebx
   14000249a:	add    rsp,0x40
   14000249e:	pop    rdi
   14000249f:	pop    rbx
   1400024a0:	pop    rbp
   1400024a1:	ret    
   1400024a2:	int3   
   1400024a3:	int3   
   1400024a4:	int3   
   1400024a5:	int3   
   1400024a6:	int3   
   1400024a7:	int3   
   1400024a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400024ad:	push   rbp
   1400024ae:	push   rsi
   1400024af:	push   rdi
   1400024b0:	push   r12
   1400024b2:	push   r13
   1400024b4:	push   r14
   1400024b6:	push   r15
   1400024b8:	sub    rsp,0x40
   1400024bc:	mov    rdi,QWORD PTR [rsp+0xa8]
   1400024c4:	xor    r14d,r14d
   1400024c7:	mov    r13,QWORD PTR [rsp+0xa0]
   1400024cf:	xor    r12d,r12d
   1400024d2:	xor    r15d,r15d
   1400024d5:	mov    DWORD PTR [rsp+0x30],r9d
   1400024da:	mov    rbp,r8
   1400024dd:	mov    ebx,edx
   1400024df:	mov    rsi,rcx
   1400024e2:	mov    DWORD PTR [rsp+0x20],edx
   1400024e6:	mov    QWORD PTR [rsp+0x38],rdi
   1400024eb:	mov    QWORD PTR [rsp+0x28],r14
   1400024f0:	cmp    DWORD PTR [rcx],r12d
   1400024f3:	je     0x140002624
   1400024f9:	add    rcx,0x8
   1400024fd:	call   QWORD PTR [rip+0xbd45]        # 0x14000e248
   140002503:	test   rdi,rdi
   140002506:	je     0x14000261d
   14000250c:	test   ebx,ebx
   14000250e:	je     0x140002551
   140002510:	cmp    DWORD PTR [rip+0x120dd],r12d        # 0x1400145f4
   140002517:	jne    0x140002526
   140002519:	cmp    DWORD PTR [rip+0x120d0],r12d        # 0x1400145f0
   140002520:	je     0x14000261d
   140002526:	test   r13,r13
   140002529:	je     0x14000261d
   14000252f:	call   0x140007d34
   140002534:	mov    ebx,eax
   140002536:	test   eax,eax
   140002538:	je     0x140002551
   14000253a:	mov    ebp,0x1
   14000253f:	cmp    eax,ebp
   140002541:	jne    0x140002653
   140002547:	mov    ebx,0x80070005
   14000254c:	jmp    0x140002653
   140002551:	mov    rcx,rbp
   140002554:	call   QWORD PTR [rip+0xbec6]        # 0x14000e420
   14000255a:	mov    r12,rax
   14000255d:	lea    rax,[rsp+0x28]
   140002562:	test   rax,rax
   140002565:	je     0x14000257a
   140002567:	lea    rcx,[rsp+0x28]
   14000256c:	call   0x1400061d8
   140002571:	mov    r14,QWORD PTR [rsp+0x28]
   140002576:	mov    ebx,eax
   140002578:	jmp    0x14000257f
   14000257a:	mov    ebx,0x80070057
   14000257f:	test   ebx,ebx
   140002581:	js     0x140002629
   140002587:	mov    rcx,r14
   14000258a:	call   QWORD PTR [rip+0xbe90]        # 0x14000e420
   140002590:	mov    r15,rax
   140002593:	test   rax,rax
   140002596:	je     0x140002624
   14000259c:	mov    ebp,0x1
   1400025a1:	mov    rcx,rsi
   1400025a4:	mov    edx,ebp
   1400025a6:	call   0x140001c8c
   1400025ab:	lea    rcx,[rsi+0xa0]
   1400025b2:	call   0x140007690
   1400025b7:	mov    ebx,eax
   1400025b9:	test   eax,eax
   1400025bb:	js     0x140002629
   1400025bd:	test   r13,r13
   1400025c0:	je     0x1400025f0
   1400025c2:	mov    rax,QWORD PTR [r13+0x0]
   1400025c6:	mov    rdi,QWORD PTR [rax]
   1400025c9:	mov    rcx,rdi
   1400025cc:	call   QWORD PTR [rip+0xc0f6]        # 0x14000e6c8
   1400025d2:	lea    r8,[rsi+0x98]
   1400025d9:	mov    rcx,r13
   1400025dc:	lea    rdx,[rip+0xe85d]        # 0x140010e40
   1400025e3:	call   rdi
   1400025e5:	mov    ebx,eax
   1400025e7:	test   eax,eax
   1400025e9:	js     0x140002629
   1400025eb:	mov    rdi,QWORD PTR [rsp+0x38]
   1400025f0:	mov    eax,DWORD PTR [rsp+0x30]
   1400025f4:	mov    DWORD PTR [rsi+0x78],eax
   1400025f7:	mov    eax,DWORD PTR [rsp+0x20]
   1400025fb:	mov    DWORD PTR [rsi+0x8c],eax
   140002601:	mov    QWORD PTR [rsi+0x38],r12
   140002605:	mov    QWORD PTR [rsi+0x40],r15
   140002609:	mov    DWORD PTR [rsi+0x30],ebp
   14000260c:	mov    DWORD PTR [rsi+0x90],ebp
   140002612:	mov    DWORD PTR [rsi+0x88],ebp
   140002618:	mov    QWORD PTR [rdi],r14
   14000261b:	jmp    0x140002653
   14000261d:	mov    ebx,0x80070057
   140002622:	jmp    0x140002653
   140002624:	mov    ebx,0x8007000e
   140002629:	test   r12,r12
   14000262c:	je     0x140002637
   14000262e:	mov    rcx,r12
   140002631:	call   QWORD PTR [rip+0xbdd9]        # 0x14000e410
   140002637:	test   r14,r14
   14000263a:	je     0x140002645
   14000263c:	mov    rcx,r14
   14000263f:	call   QWORD PTR [rip+0xbdcb]        # 0x14000e410
   140002645:	test   r15,r15
   140002648:	je     0x140002653
   14000264a:	mov    rcx,r15
   14000264d:	call   QWORD PTR [rip+0xbdbd]        # 0x14000e410
   140002653:	cmp    DWORD PTR [rsi],0x0
   140002656:	je     0x140002662
   140002658:	lea    rcx,[rsi+0x8]
   14000265c:	call   QWORD PTR [rip+0xbd5e]        # 0x14000e3c0
   140002662:	mov    eax,ebx
   140002664:	mov    rbx,QWORD PTR [rsp+0x88]
   14000266c:	add    rsp,0x40
   140002670:	pop    r15
   140002672:	pop    r14
   140002674:	pop    r13
   140002676:	pop    r12
   140002678:	pop    rdi
   140002679:	pop    rsi
   14000267a:	pop    rbp
   14000267b:	ret    
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	int3   
   140002681:	int3   
   140002682:	int3   
   140002683:	int3   
   140002684:	mov    QWORD PTR [rsp+0x10],rbx
   140002689:	push   rbp
   14000268a:	push   rsi
   14000268b:	push   rdi
   14000268c:	push   r12
   14000268e:	push   r13
   140002690:	push   r14
   140002692:	push   r15
   140002694:	lea    rbp,[rsp-0x230]
   14000269c:	sub    rsp,0x330
   1400026a3:	mov    rax,QWORD PTR [rip+0x1195e]        # 0x140014008
   1400026aa:	xor    rax,rsp
   1400026ad:	mov    QWORD PTR [rbp+0x220],rax
   1400026b4:	mov    rax,QWORD PTR [rbp+0x298]
   1400026bb:	mov    rbx,rdx
   1400026be:	mov    r12,QWORD PTR [rbp+0x290]
   1400026c5:	mov    r14,rcx
   1400026c8:	mov    rsi,QWORD PTR [rbp+0x2b8]
   1400026cf:	lea    rcx,[rbp+0x1]
   1400026d3:	and    QWORD PTR [rsp+0x70],0x0
   1400026d9:	xor    r15d,r15d
   1400026dc:	and    QWORD PTR [rbp-0x78],0x0
   1400026e1:	xor    edx,edx
   1400026e3:	mov    QWORD PTR [rbp-0x70],rax
   1400026e7:	mov    rdi,r9
   1400026ea:	mov    rax,QWORD PTR [rbp+0x2c0]
   1400026f1:	mov    QWORD PTR [rbp-0x20],rax
   1400026f5:	mov    rax,QWORD PTR [rbp+0x2c8]
   1400026fc:	mov    QWORD PTR [rbp-0x80],r8
   140002700:	mov    r8d,0x103
   140002706:	mov    QWORD PTR [rbp-0x10],rax
   14000270a:	mov    QWORD PTR [rsp+0x78],r9
   14000270f:	mov    DWORD PTR [rsp+0x60],0xd41e4f1d
   140002717:	mov    DWORD PTR [rsp+0x64],0x11d1a407
   14000271f:	mov    DWORD PTR [rsp+0x68],0xc000c98b
   140002727:	mov    DWORD PTR [rsp+0x6c],0x410aa34f
   14000272f:	mov    DWORD PTR [rsp+0x50],0xaac56b
   140002737:	mov    DWORD PTR [rsp+0x54],0x11d0cd44
   14000273f:	mov    DWORD PTR [rsp+0x58],0xc000c28c
   140002747:	mov    DWORD PTR [rsp+0x5c],0xee95c24f
   14000274f:	mov    BYTE PTR [rbp+0x0],r15b
   140002753:	call   0x14000d326
   140002758:	lea    r13d,[r15+0x40]
   14000275c:	xor    edx,edx
   14000275e:	mov    r8d,r13d
   140002761:	lea    rcx,[rbp-0x60]
   140002765:	call   0x14000d326
   14000276a:	cmp    DWORD PTR [r14],r15d
   14000276d:	je     0x140002d0a
   140002773:	lea    rcx,[r14+0x8]
   140002777:	call   QWORD PTR [rip+0xbacb]        # 0x14000e248
   14000277d:	cmp    DWORD PTR [r14+0x30],0x1
   140002782:	jge    0x14000278e
   140002784:	mov    edi,0x8007139f
   140002789:	jmp    0x140002d0f
   14000278e:	test   rbx,rbx
   140002791:	je     0x140002d03
   140002797:	test   r12,r12
   14000279a:	je     0x140002d03
   1400027a0:	test   rsi,rsi
   1400027a3:	je     0x140002d03
   1400027a9:	mov    rdx,QWORD PTR [r14+0x40]
   1400027ad:	sub    rdx,rbx
   1400027b0:	movzx  eax,WORD PTR [rbx]
   1400027b3:	movzx  ecx,WORD PTR [rbx+rdx*1]
   1400027b7:	sub    eax,ecx
   1400027b9:	jne    0x1400027c3
   1400027bb:	add    rbx,0x2
   1400027bf:	test   ecx,ecx
   1400027c1:	jne    0x1400027b0
   1400027c3:	test   eax,eax
   1400027c5:	je     0x1400027d1
   1400027c7:	mov    edi,0x80070005
   1400027cc:	jmp    0x140002d0f
   1400027d1:	and    DWORD PTR [rbp-0x2c],r15d
   1400027d5:	and    DWORD PTR [rbp-0x48],r15d
   1400027d9:	mov    rax,QWORD PTR [rbp-0x78]
   1400027dd:	mov    DWORD PTR [rbp-0x60],r13d
   1400027e1:	mov    QWORD PTR [rbp-0x50],rdi
   1400027e5:	mov    QWORD PTR [rbp-0x58],rax
   1400027e9:	cmp    DWORD PTR [r14+0x8c],r15d
   1400027f0:	je     0x140002934
   1400027f6:	cmp    DWORD PTR [rip+0x11df7],r15d        # 0x1400145f4
   1400027fd:	je     0x140002890
   140002803:	mov    r8,rsi
   140002806:	mov    rdx,rdi
   140002809:	mov    rcx,r14
   14000280c:	call   0x140001dac
   140002811:	mov    edi,eax
   140002813:	test   eax,eax
   140002815:	js     0x140002d0f
   14000281b:	mov    rcx,QWORD PTR [rsi]
   14000281e:	test   rcx,rcx
   140002821:	je     0x14000282c
   140002823:	call   0x140007f0c
   140002828:	mov    edi,eax
   14000282a:	jmp    0x14000282e
   14000282c:	xor    edi,edi
   14000282e:	test   edi,edi
   140002830:	js     0x140002d0f
   140002836:	mov    rcx,QWORD PTR [rsi]
   140002839:	call   0x140007fb8
   14000283e:	mov    edi,eax
   140002840:	test   eax,eax
   140002842:	js     0x140002d0f
   140002848:	mov    eax,0x58
   14000284d:	xor    bl,bl
   14000284f:	mov    ecx,eax
   140002851:	mov    DWORD PTR [rbp-0x38],eax
   140002854:	xor    r13b,r13b
   140002857:	call   QWORD PTR [rip+0xbdfb]        # 0x14000e658
   14000285d:	mov    QWORD PTR [rbp-0x40],rax
   140002861:	test   rax,rax
   140002864:	je     0x14000288a
   140002866:	mov    r8d,DWORD PTR [rbp-0x38]
   14000286a:	xor    edx,edx
   14000286c:	mov    rcx,rax
   14000286f:	call   0x14000d326
   140002874:	mov    rax,QWORD PTR [rbp-0x40]
   140002878:	mov    ecx,DWORD PTR [rbp-0x38]
   14000287b:	mov    DWORD PTR [rax],ecx
   14000287d:	mov    rax,QWORD PTR [rbp-0x40]
   140002881:	mov    DWORD PTR [rax+0x8],0x1
   140002888:	jmp    0x1400028ef
   14000288a:	and    QWORD PTR [rbp-0x40],r15
   14000288e:	jmp    0x1400028ef
   140002890:	mov    bl,0x1
   140002892:	cmp    DWORD PTR [r14+0x90],r15d
   140002899:	je     0x1400028ec
   14000289b:	mov    r8,rsi
   14000289e:	mov    rdx,rdi
   1400028a1:	mov    rcx,r14
   1400028a4:	call   0x140001dac
   1400028a9:	mov    edi,eax
   1400028ab:	test   eax,eax
   1400028ad:	js     0x140002d0f
   1400028b3:	mov    rcx,QWORD PTR [rsi]
   1400028b6:	test   rcx,rcx
   1400028b9:	je     0x1400028c4
   1400028bb:	call   0x140007f0c
   1400028c0:	mov    edi,eax
   1400028c2:	jmp    0x1400028c6
   1400028c4:	xor    edi,edi
   1400028c6:	test   edi,edi
   1400028c8:	js     0x140002d0f
   1400028ce:	mov    rcx,QWORD PTR [rsi]
   1400028d1:	call   0x140007fb8
   1400028d6:	mov    edi,eax
   1400028d8:	test   eax,eax
   1400028da:	js     0x140002d0f
   1400028e0:	mov    DWORD PTR [rbp-0x28],0x1
   1400028e7:	xor    r13b,r13b
   1400028ea:	jmp    0x1400028ef
   1400028ec:	mov    r13b,0x1
   1400028ef:	mov    ecx,0x58
   1400028f4:	mov    DWORD PTR [rbp-0x38],ecx
   1400028f7:	call   QWORD PTR [rip+0xbd5b]        # 0x14000e658
   1400028fd:	mov    QWORD PTR [rbp-0x40],rax
   140002901:	test   rax,rax
   140002904:	je     0x14000292a
   140002906:	mov    r8d,DWORD PTR [rbp-0x38]
   14000290a:	xor    edx,edx
   14000290c:	mov    rcx,rax
   14000290f:	call   0x14000d326
   140002914:	mov    rax,QWORD PTR [rbp-0x40]
   140002918:	mov    ecx,DWORD PTR [rbp-0x38]
   14000291b:	mov    DWORD PTR [rax],ecx
   14000291d:	mov    rax,QWORD PTR [rbp-0x40]
   140002921:	mov    DWORD PTR [rax+0x8],0x1
   140002928:	jmp    0x140002939
   14000292a:	and    QWORD PTR [rbp-0x40],r15
   14000292e:	and    DWORD PTR [rbp-0x38],r15d
   140002932:	jmp    0x140002939
   140002934:	mov    bl,0x1
   140002936:	mov    r13b,bl
   140002939:	test   r13b,r13b
   14000293c:	je     0x140002a20
   140002942:	lea    rdx,[rbp+0x110]
   140002949:	mov    BYTE PTR [rbp+0x0],r15b
   14000294d:	mov    ecx,0x104
   140002952:	call   QWORD PTR [rip+0xb878]        # 0x14000e1d0
   140002958:	test   eax,eax
   14000295a:	je     0x140002970
   14000295c:	lea    rdx,[rbp+0x0]
   140002960:	lea    rcx,[rbp+0x110]
   140002967:	call   0x1400075b8
   14000296c:	mov    edi,eax
   14000296e:	jmp    0x140002984
   140002970:	call   QWORD PTR [rip+0xb97a]        # 0x14000e2f0
   140002976:	movzx  edi,ax
   140002979:	or     edi,0x80070000
   14000297f:	test   eax,eax
   140002981:	cmovle edi,eax
   140002984:	test   edi,edi
   140002986:	js     0x140002d0f
   14000298c:	mov    r8,rsi
   14000298f:	lea    rcx,[rbp+0x0]
   140002993:	mov    rdx,r12
   140002996:	call   0x14000770c
   14000299b:	mov    edi,eax
   14000299d:	test   eax,eax
   14000299f:	js     0x140002d0f
   1400029a5:	mov    rcx,QWORD PTR [rsi]
   1400029a8:	test   rcx,rcx
   1400029ab:	je     0x1400029b6
   1400029ad:	call   0x140007f0c
   1400029b2:	mov    edi,eax
   1400029b4:	jmp    0x1400029b8
   1400029b6:	xor    edi,edi
   1400029b8:	test   edi,edi
   1400029ba:	js     0x140002d0f
   1400029c0:	mov    rcx,QWORD PTR [rsi]
   1400029c3:	call   0x140007fb8
   1400029c8:	mov    edi,eax
   1400029ca:	test   eax,eax
   1400029cc:	js     0x140002d0f
   1400029d2:	and    QWORD PTR [rsp+0x30],r15
   1400029d7:	xor    r9d,r9d
   1400029da:	mov    rcx,QWORD PTR [rsi]
   1400029dd:	mov    edx,0x80000000
   1400029e2:	mov    DWORD PTR [rsp+0x28],0x80
   1400029ea:	mov    DWORD PTR [rsp+0x20],0x3
   1400029f2:	lea    r8d,[r9+0x1]
   1400029f6:	call   QWORD PTR [rip+0xb9b4]        # 0x14000e3b0
   1400029fc:	mov    QWORD PTR [rsp+0x70],rax
   140002a01:	cmp    rax,0xffffffffffffffff
   140002a05:	jne    0x140002a20
   140002a07:	call   QWORD PTR [rip+0xb8e3]        # 0x14000e2f0
   140002a0d:	movzx  edi,ax
   140002a10:	or     edi,0x80070000
   140002a16:	test   eax,eax
   140002a18:	cmovle edi,eax
   140002a1b:	jmp    0x140002d0f
   140002a20:	test   bl,bl
   140002a22:	je     0x140002c29
   140002a28:	mov    ecx,0x20
   140002a2d:	call   0x140001140
   140002a32:	mov    r15,rax
   140002a35:	test   rax,rax
   140002a38:	je     0x140002a58
   140002a3a:	and    QWORD PTR [r15+0x18],0x0
   140002a3f:	lea    rax,[rip+0xc02a]        # 0x14000ea70
   140002a46:	and    QWORD PTR [r15+0x10],0x0
   140002a4b:	mov    QWORD PTR [r15],rax
   140002a4e:	mov    DWORD PTR [r15+0x8],0x1
   140002a56:	jmp    0x140002a5b
   140002a58:	xor    r15d,r15d
   140002a5b:	test   r15,r15
   140002a5e:	je     0x140002d0a
   140002a64:	and    QWORD PTR [rbp-0x18],0x0
   140002a69:	mov    r12d,0x80070057
   140002a6f:	mov    rax,QWORD PTR [rsp+0x78]
   140002a74:	test   rax,rax
   140002a77:	je     0x140002abf
   140002a79:	mov    rcx,rax
   140002a7c:	call   QWORD PTR [rip+0xb99e]        # 0x14000e420
   140002a82:	mov    rbx,rax
   140002a85:	test   rax,rax
   140002a88:	je     0x140002ab8
   140002a8a:	xor    r8d,r8d
   140002a8d:	lea    rdx,[rbp-0x18]
   140002a91:	xor    ecx,ecx
   140002a93:	call   QWORD PTR [rip+0xbc07]        # 0x14000e6a0
   140002a99:	mov    edi,eax
   140002a9b:	test   eax,eax
   140002a9d:	js     0x140002aad
   140002a9f:	mov    rcx,QWORD PTR [rbp-0x18]
   140002aa3:	mov    QWORD PTR [r15+0x18],rcx
   140002aa7:	mov    QWORD PTR [r15+0x10],rbx
   140002aab:	jmp    0x140002ac2
   140002aad:	mov    rcx,rbx
   140002ab0:	call   QWORD PTR [rip+0xb95a]        # 0x14000e410
   140002ab6:	jmp    0x140002ac2
   140002ab8:	mov    edi,0x8007000e
   140002abd:	jmp    0x140002ac2
   140002abf:	mov    edi,r12d
   140002ac2:	test   edi,edi
   140002ac4:	js     0x140002d0f
   140002aca:	mov    rax,QWORD PTR [r15]
   140002acd:	mov    rbx,QWORD PTR [rax]
   140002ad0:	mov    rcx,rbx
   140002ad3:	call   QWORD PTR [rip+0xbbef]        # 0x14000e6c8
   140002ad9:	lea    r8,[rbp-0x78]
   140002add:	mov    rcx,r15
   140002ae0:	lea    rdx,[rip+0xe8e9]        # 0x1400113d0
   140002ae7:	call   rbx
   140002ae9:	mov    edi,eax
   140002aeb:	test   eax,eax
   140002aed:	js     0x140002d0f
   140002af3:	mov    rax,QWORD PTR [rbp-0x70]
   140002af7:	test   rax,rax
   140002afa:	je     0x140002bc4
   140002b00:	mov    rcx,rax
   140002b03:	call   QWORD PTR [rip+0xb8ef]        # 0x14000e3f8
   140002b09:	test   eax,eax
   140002b0b:	je     0x140002bc4
   140002b11:	mov    rax,QWORD PTR [rsi]
   140002b14:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   140002b19:	mov    ebx,DWORD PTR [rbp+0x2a8]
   140002b1f:	mov    edi,DWORD PTR [rbp+0x2a0]
   140002b25:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140002b2b:	test   rax,rax
   140002b2e:	je     0x140002b6f
   140002b30:	mov    r9,QWORD PTR [rsp+0x70]
   140002b35:	lea    rcx,[rbp-0x60]
   140002b39:	mov    r8,QWORD PTR [rsp+0x78]
   140002b3e:	lea    rdx,[rsp+0x50]
   140002b43:	mov    QWORD PTR [rsp+0x40],rcx
   140002b48:	mov    rcx,QWORD PTR [rbp-0x70]
   140002b4c:	mov    DWORD PTR [rsp+0x38],ebx
   140002b50:	mov    DWORD PTR [rsp+0x30],edi
   140002b54:	mov    QWORD PTR [rsp+0x28],rcx
   140002b59:	mov    rcx,QWORD PTR [rbp-0x80]
   140002b5d:	mov    QWORD PTR [rsp+0x20],rax
   140002b62:	call   0x140008dd8
   140002b67:	test   eax,eax
   140002b69:	jns    0x140002c29
   140002b6f:	mov    rax,QWORD PTR [rsi]
   140002b72:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140002b77:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140002b7d:	test   rax,rax
   140002b80:	je     0x140002bd7
   140002b82:	mov    r9,QWORD PTR [rsp+0x70]
   140002b87:	lea    rcx,[rbp-0x60]
   140002b8b:	mov    r8,QWORD PTR [rsp+0x78]
   140002b90:	lea    rdx,[rsp+0x50]
   140002b95:	mov    QWORD PTR [rsp+0x40],rcx
   140002b9a:	mov    rcx,QWORD PTR [rbp-0x70]
   140002b9e:	mov    DWORD PTR [rsp+0x38],ebx
   140002ba2:	mov    DWORD PTR [rsp+0x30],edi
   140002ba6:	mov    QWORD PTR [rsp+0x28],rcx
   140002bab:	mov    rcx,QWORD PTR [rbp-0x80]
   140002baf:	mov    QWORD PTR [rsp+0x20],rax
   140002bb4:	call   0x140008dd8
   140002bb9:	mov    edi,eax
   140002bbb:	test   eax,eax
   140002bbd:	jns    0x140002c29
   140002bbf:	jmp    0x140002d0f
   140002bc4:	mov    rcx,QWORD PTR [rsi]
   140002bc7:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   140002bcc:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   140002bd2:	test   rcx,rcx
   140002bd5:	jne    0x140002bdf
   140002bd7:	mov    edi,r12d
   140002bda:	jmp    0x140002d0f
   140002bdf:	mov    r9,QWORD PTR [rsp+0x70]
   140002be4:	lea    rax,[rbp-0x60]
   140002be8:	mov    r8,QWORD PTR [rsp+0x78]
   140002bed:	lea    rdx,[rsp+0x50]
   140002bf2:	mov    QWORD PTR [rsp+0x40],rax
   140002bf7:	mov    eax,DWORD PTR [rbp+0x2a8]
   140002bfd:	mov    DWORD PTR [rsp+0x38],eax
   140002c01:	mov    eax,DWORD PTR [rbp+0x2a0]
   140002c07:	mov    DWORD PTR [rsp+0x30],eax
   140002c0b:	and    QWORD PTR [rsp+0x28],0x0
   140002c11:	mov    QWORD PTR [rsp+0x20],rcx
   140002c16:	mov    rcx,QWORD PTR [rbp-0x80]
   140002c1a:	call   0x140008dd8
   140002c1f:	mov    edi,eax
   140002c21:	test   eax,eax
   140002c23:	js     0x140002d0f
   140002c29:	cmp    DWORD PTR [r14+0x8c],0x0
   140002c31:	jne    0x140002c43
   140002c33:	mov    rcx,QWORD PTR [rsi]
   140002c36:	call   0x1400087c4
   140002c3b:	test   eax,eax
   140002c3d:	je     0x1400027c7
   140002c43:	test   r13b,r13b
   140002c46:	je     0x140002c61
   140002c48:	lea    rcx,[r14+0xa0]
   140002c4f:	mov    rdx,rsi
   140002c52:	call   0x1400078f8
   140002c57:	mov    edi,eax
   140002c59:	test   eax,eax
   140002c5b:	js     0x140002d0f
   140002c61:	mov    rcx,QWORD PTR [rsi]
   140002c64:	lea    rdx,[r14+0x80]
   140002c6b:	call   0x140006460
   140002c70:	mov    edi,eax
   140002c72:	test   eax,eax
   140002c74:	js     0x140002d0f
   140002c7a:	mov    rcx,QWORD PTR [rbp-0x40]
   140002c7e:	test   rcx,rcx
   140002c81:	je     0x140002cda
   140002c83:	cmp    DWORD PTR [rbp-0x38],0x0
   140002c87:	je     0x140002cda
   140002c89:	mov    rdx,QWORD PTR [rcx+0x18]
   140002c8d:	mov    rax,rcx
   140002c90:	test   rdx,rdx
   140002c93:	je     0x140002ca0
   140002c95:	sub    rdx,rcx
   140002c98:	mov    QWORD PTR [rcx+0x18],rdx
   140002c9c:	mov    rcx,QWORD PTR [rbp-0x40]
   140002ca0:	mov    rdx,QWORD PTR [rax+0x28]
   140002ca4:	test   rdx,rdx
   140002ca7:	je     0x140002cb4
   140002ca9:	sub    rdx,rax
   140002cac:	mov    QWORD PTR [rax+0x28],rdx
   140002cb0:	mov    rcx,QWORD PTR [rbp-0x40]
   140002cb4:	mov    rdx,QWORD PTR [rax+0x38]
   140002cb8:	test   rdx,rdx
   140002cbb:	je     0x140002cc8
   140002cbd:	sub    rdx,rax
   140002cc0:	mov    QWORD PTR [rax+0x38],rdx
   140002cc4:	mov    rcx,QWORD PTR [rbp-0x40]
   140002cc8:	mov    eax,DWORD PTR [rbp-0x38]
   140002ccb:	mov    rdx,QWORD PTR [rbp-0x20]
   140002ccf:	mov    DWORD PTR [rdx],eax
   140002cd1:	mov    rax,QWORD PTR [rbp-0x10]
   140002cd5:	mov    QWORD PTR [rax],rcx
   140002cd8:	jmp    0x140002ce9
   140002cda:	mov    rdx,QWORD PTR [rbp-0x20]
   140002cde:	mov    rax,QWORD PTR [rbp-0x10]
   140002ce2:	and    DWORD PTR [rdx],0x0
   140002ce5:	and    QWORD PTR [rax],0x0
   140002ce9:	mov    rax,QWORD PTR [rbp+0x2b0]
   140002cf0:	movups xmm0,XMMWORD PTR [rax]
   140002cf3:	mov    DWORD PTR [r14+0x30],0x2
   140002cfb:	movdqu XMMWORD PTR [r14+0x58],xmm0
   140002d01:	jmp    0x140002d21
   140002d03:	mov    edi,0x80070057
   140002d08:	jmp    0x140002d0f
   140002d0a:	mov    edi,0x8007000e
   140002d0f:	test   rsi,rsi
   140002d12:	je     0x140002d21
   140002d14:	mov    rcx,QWORD PTR [rsi]
   140002d17:	call   QWORD PTR [rip+0xb6f3]        # 0x14000e410
   140002d1d:	and    QWORD PTR [rsi],0x0
   140002d21:	mov    rsi,QWORD PTR [rbp-0x78]
   140002d25:	test   rsi,rsi
   140002d28:	je     0x140002d3f
   140002d2a:	mov    rax,QWORD PTR [rsi]
   140002d2d:	mov    rbx,QWORD PTR [rax+0x10]
   140002d31:	mov    rcx,rbx
   140002d34:	call   QWORD PTR [rip+0xb98e]        # 0x14000e6c8
   140002d3a:	mov    rcx,rsi
   140002d3d:	call   rbx
   140002d3f:	test   r15,r15
   140002d42:	je     0x140002d59
   140002d44:	mov    rax,QWORD PTR [r15]
   140002d47:	mov    rbx,QWORD PTR [rax+0x10]
   140002d4b:	mov    rcx,rbx
   140002d4e:	call   QWORD PTR [rip+0xb974]        # 0x14000e6c8
   140002d54:	mov    rcx,r15
   140002d57:	call   rbx
   140002d59:	mov    rcx,QWORD PTR [rsp+0x70]
   140002d5e:	lea    rax,[rcx-0x1]
   140002d62:	cmp    rax,0xfffffffffffffffd
   140002d66:	ja     0x140002d6e
   140002d68:	call   QWORD PTR [rip+0xb602]        # 0x14000e370
   140002d6e:	test   edi,edi
   140002d70:	js     0x140002d7a
   140002d72:	and    DWORD PTR [r14+0x90],0x0
   140002d7a:	lea    rcx,[rbp+0x0]
   140002d7e:	call   0x140006a6c
   140002d83:	cmp    DWORD PTR [r14],0x0
   140002d87:	je     0x140002d93
   140002d89:	lea    rcx,[r14+0x8]
   140002d8d:	call   QWORD PTR [rip+0xb62d]        # 0x14000e3c0
   140002d93:	mov    eax,edi
   140002d95:	mov    rcx,QWORD PTR [rbp+0x220]
   140002d9c:	xor    rcx,rsp
   140002d9f:	call   0x14000cc40
   140002da4:	mov    rbx,QWORD PTR [rsp+0x378]
   140002dac:	add    rsp,0x330
   140002db3:	pop    r15
   140002db5:	pop    r14
   140002db7:	pop    r13
   140002db9:	pop    r12
   140002dbb:	pop    rdi
   140002dbc:	pop    rsi
   140002dbd:	pop    rbp
   140002dbe:	ret    
   140002dbf:	int3   
   140002dc0:	int3   
   140002dc1:	int3   
   140002dc2:	int3   
   140002dc3:	int3   
   140002dc4:	int3   
   140002dc5:	int3   
   140002dc6:	int3   
   140002dc7:	int3   
   140002dc8:	mov    rax,rsp
   140002dcb:	mov    QWORD PTR [rax+0x10],rbx
   140002dcf:	mov    QWORD PTR [rax+0x20],rbp
   140002dd3:	mov    QWORD PTR [rax+0x18],r8
   140002dd7:	push   rsi
   140002dd8:	push   rdi
   140002dd9:	push   r13
   140002ddb:	push   r14
   140002ddd:	push   r15
   140002ddf:	sub    rsp,0x50
   140002de3:	xor    r13d,r13d
   140002de6:	or     rbp,0xffffffffffffffff
   140002dea:	mov    r14,r9
   140002ded:	mov    rbx,rdx
   140002df0:	mov    rdi,rcx
   140002df3:	mov    esi,r13d
   140002df6:	mov    r15d,r13d
   140002df9:	mov    QWORD PTR [rax-0x30],r13
   140002dfd:	mov    QWORD PTR [rax-0x38],r13
   140002e01:	mov    DWORD PTR [rsp+0x80],r13d
   140002e09:	cmp    DWORD PTR [rcx],r13d
   140002e0c:	je     0x1400030be
   140002e12:	add    rcx,0x8
   140002e16:	call   QWORD PTR [rip+0xb42c]        # 0x14000e248
   140002e1c:	cmp    DWORD PTR [rdi+0x30],0x2
   140002e20:	jge    0x140002e2c
   140002e22:	mov    ebx,0x8007139f
   140002e27:	jmp    0x140002f43
   140002e2c:	test   rbx,rbx
   140002e2f:	je     0x1400030b4
   140002e35:	test   r14,r14
   140002e38:	je     0x1400030b4
   140002e3e:	mov    r15,QWORD PTR [rsp+0xa0]
   140002e46:	test   r15,r15
   140002e49:	je     0x1400030b4
   140002e4f:	cmp    QWORD PTR [rsp+0xa8],r13
   140002e57:	je     0x1400030b4
   140002e5d:	mov    r13,QWORD PTR [rsp+0xb0]
   140002e65:	test   r13,r13
   140002e68:	je     0x1400030b1
   140002e6e:	mov    rdx,QWORD PTR [rdi+0x40]
   140002e72:	sub    rdx,rbx
   140002e75:	movzx  eax,WORD PTR [rbx]
   140002e78:	movzx  ecx,WORD PTR [rbx+rdx*1]
   140002e7c:	sub    eax,ecx
   140002e7e:	jne    0x140002e88
   140002e80:	add    rbx,0x2
   140002e84:	test   ecx,ecx
   140002e86:	jne    0x140002e75
   140002e88:	test   eax,eax
   140002e8a:	je     0x140002e9c
   140002e8c:	mov    ebx,0x80070005
   140002e91:	mov    r15d,esi
   140002e94:	xor    r13d,r13d
   140002e97:	jmp    0x140002f43
   140002e9c:	lea    rdx,[rsp+0x48]
   140002ea1:	mov    rcx,r14
   140002ea4:	call   0x140006fb8
   140002ea9:	mov    ebx,eax
   140002eab:	mov    rsi,QWORD PTR [rsp+0x48]
   140002eb0:	test   eax,eax
   140002eb2:	js     0x140002f2a
   140002eb4:	xor    ebx,ebx
   140002eb6:	mov    rax,rsi
   140002eb9:	test   rsi,rsi
   140002ebc:	je     0x140002ee4
   140002ebe:	cmp    WORD PTR [rsi],bx
   140002ec1:	je     0x140002eda
   140002ec3:	cmp    WORD PTR [rax],0x2f
   140002ec7:	jne    0x140002ed1
   140002ec9:	mov    ecx,0x5c
   140002ece:	mov    WORD PTR [rax],cx
   140002ed1:	add    rax,0x2
   140002ed5:	cmp    WORD PTR [rax],bx
   140002ed8:	jne    0x140002ec3
   140002eda:	mov    rcx,rsi
   140002edd:	call   0x140007f0c
   140002ee2:	jmp    0x140002ee6
   140002ee4:	mov    eax,ebx
   140002ee6:	test   eax,eax
   140002ee8:	js     0x1400030b1
   140002eee:	mov    rcx,rsi
   140002ef1:	call   0x140007fb8
   140002ef6:	test   eax,eax
   140002ef8:	js     0x1400030b1
   140002efe:	mov    rdx,rsi
   140002f01:	mov    rcx,rdi
   140002f04:	call   0x140001e10
   140002f09:	mov    ebx,eax
   140002f0b:	test   eax,eax
   140002f0d:	js     0x140002f2a
   140002f0f:	xor    ebx,ebx
   140002f11:	cmp    DWORD PTR [rdi+0x8c],ebx
   140002f17:	jne    0x140002f61
   140002f19:	mov    rcx,rsi
   140002f1c:	call   0x1400087c4
   140002f21:	test   eax,eax
   140002f23:	jne    0x140002f61
   140002f25:	mov    ebx,0x80070005
   140002f2a:	xor    r13d,r13d
   140002f2d:	test   rsi,rsi
   140002f30:	je     0x140002f3b
   140002f32:	mov    rcx,rsi
   140002f35:	call   QWORD PTR [rip+0xb70d]        # 0x14000e648
   140002f3b:	mov    r15d,DWORD PTR [rsp+0x80]
   140002f43:	mov    rcx,QWORD PTR [rsp+0x40]
   140002f48:	test   rcx,rcx
   140002f4b:	je     0x140002f53
   140002f4d:	call   QWORD PTR [rip+0xb41d]        # 0x14000e370
   140002f53:	test   rbp,rbp
   140002f56:	je     0x1400030cc
   140002f5c:	jmp    0x1400030c3
   140002f61:	cmp    QWORD PTR [rdi+0x70],rbx
   140002f65:	jne    0x140002f96
   140002f67:	lea    rcx,[rip+0xdc12]        # 0x140010b80
   140002f6e:	call   QWORD PTR [rip+0xb454]        # 0x14000e3c8
   140002f74:	mov    QWORD PTR [rdi+0x70],rax
   140002f78:	test   rax,rax
   140002f7b:	jne    0x140002f96
   140002f7d:	call   QWORD PTR [rip+0xb36d]        # 0x14000e2f0
   140002f83:	movzx  ebx,ax
   140002f86:	or     ebx,0x80070000
   140002f8c:	xor    r13d,r13d
   140002f8f:	test   eax,eax
   140002f91:	cmovle ebx,eax
   140002f94:	jmp    0x140002f2d
   140002f96:	mov    rcx,QWORD PTR [rdi+0x70]
   140002f9a:	lea    rdx,[rip+0xdbff]        # 0x140010ba0
   140002fa1:	call   QWORD PTR [rip+0xb2a9]        # 0x14000e250
   140002fa7:	mov    rbx,rax
   140002faa:	test   rax,rax
   140002fad:	je     0x140002f7d
   140002faf:	mov    rcx,rax
   140002fb2:	call   QWORD PTR [rip+0xb710]        # 0x14000e6c8
   140002fb8:	mov    r9,QWORD PTR [rsp+0xa8]
   140002fc0:	xor    eax,eax
   140002fc2:	mov    rcx,QWORD PTR [rsp+0x90]
   140002fca:	mov    r8,r15
   140002fcd:	mov    QWORD PTR [rsp+0x38],rax
   140002fd2:	mov    rdx,r14
   140002fd5:	mov    eax,DWORD PTR [rsp+0xb8]
   140002fdc:	mov    DWORD PTR [rsp+0x30],eax
   140002fe0:	lea    rax,[rsp+0x40]
   140002fe5:	mov    QWORD PTR [rsp+0x28],rax
   140002fea:	mov    QWORD PTR [rsp+0x20],r13
   140002fef:	call   rbx
   140002ff1:	xor    r13d,r13d
   140002ff4:	mov    ebx,eax
   140002ff6:	test   eax,eax
   140002ff8:	js     0x140002f2d
   140002ffe:	mov    r14,QWORD PTR [rsp+0xc0]
   140003006:	test   r14,r14
   140003009:	je     0x1400030a5
   14000300f:	mov    rax,QWORD PTR [rsp+0x40]
   140003014:	dec    rax
   140003017:	cmp    rax,0xfffffffffffffffd
   14000301b:	ja     0x1400030a2
   140003021:	cmp    DWORD PTR [rip+0x115cc],r13d        # 0x1400145f4
   140003028:	jne    0x140003045
   14000302a:	call   QWORD PTR [rip+0xb620]        # 0x14000e650
   140003030:	mov    ebx,eax
   140003032:	test   eax,eax
   140003034:	js     0x140002f2d
   14000303a:	mov    DWORD PTR [rsp+0x80],0x1
   140003045:	mov    r8d,DWORD PTR [rdi+0x78]
   140003049:	xor    edx,edx
   14000304b:	lea    ecx,[rdx+0x40]
   14000304e:	call   QWORD PTR [rip+0xb37c]        # 0x14000e3d0
   140003054:	mov    rbp,rax
   140003057:	test   rax,rax
   14000305a:	jne    0x140003070
   14000305c:	call   QWORD PTR [rip+0xb28e]        # 0x14000e2f0
   140003062:	movzx  ebx,ax
   140003065:	or     ebx,0x80070000
   14000306b:	jmp    0x140002f8f
   140003070:	call   QWORD PTR [rip+0xb36a]        # 0x14000e3e0
   140003076:	mov    rdx,QWORD PTR [rsp+0x40]
   14000307b:	mov    r9,r14
   14000307e:	mov    DWORD PTR [rsp+0x30],r13d
   140003083:	mov    rcx,rax
   140003086:	mov    DWORD PTR [rsp+0x28],r13d
   14000308b:	mov    r8,rbp
   14000308e:	mov    DWORD PTR [rsp+0x20],0x20000100
   140003096:	call   QWORD PTR [rip+0xb2dc]        # 0x14000e378
   14000309c:	test   eax,eax
   14000309e:	jne    0x1400030a5
   1400030a0:	jmp    0x14000305c
   1400030a2:	mov    QWORD PTR [r14],rbp
   1400030a5:	mov    DWORD PTR [rdi+0x30],0x6
   1400030ac:	jmp    0x140002f2d
   1400030b1:	xor    r13d,r13d
   1400030b4:	mov    ebx,0x80070057
   1400030b9:	jmp    0x140002f2d
   1400030be:	mov    ebx,0x8007000e
   1400030c3:	mov    rcx,rbp
   1400030c6:	call   QWORD PTR [rip+0xb2a4]        # 0x14000e370
   1400030cc:	test   r15d,r15d
   1400030cf:	je     0x1400030d7
   1400030d1:	call   QWORD PTR [rip+0xb569]        # 0x14000e640
   1400030d7:	cmp    DWORD PTR [rdi],r13d
   1400030da:	je     0x1400030e6
   1400030dc:	lea    rcx,[rdi+0x8]
   1400030e0:	call   QWORD PTR [rip+0xb2da]        # 0x14000e3c0
   1400030e6:	lea    r11,[rsp+0x50]
   1400030eb:	mov    eax,ebx
   1400030ed:	mov    rbx,QWORD PTR [r11+0x38]
   1400030f1:	mov    rbp,QWORD PTR [r11+0x48]
   1400030f5:	mov    rsp,r11
   1400030f8:	pop    r15
   1400030fa:	pop    r14
   1400030fc:	pop    r13
   1400030fe:	pop    rdi
   1400030ff:	pop    rsi
   140003100:	ret    
   140003101:	int3   
   140003102:	int3   
   140003103:	int3   
   140003104:	int3   
   140003105:	int3   
   140003106:	int3   
   140003107:	int3   
   140003108:	mov    rax,rsp
   14000310b:	mov    QWORD PTR [rax+0x10],rbx
   14000310f:	mov    QWORD PTR [rax+0x18],r8
   140003113:	push   rbp
   140003114:	push   rsi
   140003115:	push   rdi
   140003116:	push   r13
   140003118:	push   r14
   14000311a:	sub    rsp,0x50
   14000311e:	xor    ebp,ebp
   140003120:	xor    esi,esi
   140003122:	mov    r13,r9
   140003125:	mov    rbx,rdx
   140003128:	mov    rdi,rcx
   14000312b:	mov    QWORD PTR [rax-0x38],rbp
   14000312f:	mov    QWORD PTR [rax+0x8],rsi
   140003133:	cmp    DWORD PTR [rcx],esi
   140003135:	je     0x140003371
   14000313b:	add    rcx,0x8
   14000313f:	call   QWORD PTR [rip+0xb103]        # 0x14000e248
   140003145:	cmp    DWORD PTR [rdi+0x30],0x2
   140003149:	jge    0x140003155
   14000314b:	mov    ebx,0x8007139f
   140003150:	jmp    0x140003376
   140003155:	test   rbx,rbx
   140003158:	je     0x14000334e
   14000315e:	cmp    QWORD PTR [rsp+0xa0],rsi
   140003166:	je     0x14000334e
   14000316c:	mov    r14,QWORD PTR [rsp+0xb0]
   140003174:	test   r14,r14
   140003177:	je     0x14000334e
   14000317d:	mov    rdx,QWORD PTR [rdi+0x40]
   140003181:	sub    rdx,rbx
   140003184:	movzx  eax,WORD PTR [rbx]
   140003187:	movzx  ecx,WORD PTR [rbx+rdx*1]
   14000318b:	sub    eax,ecx
   14000318d:	jne    0x140003197
   14000318f:	add    rbx,0x2
   140003193:	test   ecx,ecx
   140003195:	jne    0x140003184
   140003197:	test   eax,eax
   140003199:	je     0x1400031a5
   14000319b:	mov    ebx,0x80070005
   1400031a0:	jmp    0x140003376
   1400031a5:	mov    rdx,QWORD PTR [rsp+0xa0]
   1400031ad:	lea    r8,[rsp+0x40]
   1400031b2:	mov    rcx,r13
   1400031b5:	call   0x140006874
   1400031ba:	mov    rbp,QWORD PTR [rsp+0x40]
   1400031bf:	test   eax,eax
   1400031c1:	je     0x140003347
   1400031c7:	mov    rcx,rbp
   1400031ca:	call   0x140007fb8
   1400031cf:	mov    ebx,eax
   1400031d1:	test   eax,eax
   1400031d3:	js     0x140003361
   1400031d9:	mov    rdx,rbp
   1400031dc:	mov    rcx,rdi
   1400031df:	call   0x140001e10
   1400031e4:	mov    ebx,eax
   1400031e6:	test   eax,eax
   1400031e8:	js     0x140003361
   1400031ee:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400031f6:	lea    r8,[rsp+0x80]
   1400031fe:	mov    rdx,r14
   140003201:	call   0x140006874
   140003206:	mov    rsi,QWORD PTR [rsp+0x80]
   14000320e:	test   eax,eax
   140003210:	je     0x140003347
   140003216:	mov    rcx,rsi
   140003219:	call   0x140007fb8
   14000321e:	mov    ebx,eax
   140003220:	test   eax,eax
   140003222:	js     0x140003353
   140003228:	cmp    DWORD PTR [rdi+0x8c],0x0
   14000322f:	jne    0x140003241
   140003231:	mov    rcx,rsi
   140003234:	call   0x1400087c4
   140003239:	test   eax,eax
   14000323b:	je     0x140003300
   140003241:	lea    rdx,[rdi+0x80]
   140003248:	mov    rcx,rsi
   14000324b:	call   0x140006460
   140003250:	mov    ebx,eax
   140003252:	test   eax,eax
   140003254:	js     0x140003353
   14000325a:	cmp    QWORD PTR [rdi+0x70],0x0
   14000325f:	jne    0x140003290
   140003261:	lea    rcx,[rip+0xd918]        # 0x140010b80
   140003268:	call   QWORD PTR [rip+0xb15a]        # 0x14000e3c8
   14000326e:	mov    QWORD PTR [rdi+0x70],rax
   140003272:	test   rax,rax
   140003275:	jne    0x140003290
   140003277:	call   QWORD PTR [rip+0xb073]        # 0x14000e2f0
   14000327d:	movzx  ebx,ax
   140003280:	or     ebx,0x80070000
   140003286:	test   eax,eax
   140003288:	cmovle ebx,eax
   14000328b:	jmp    0x140003353
   140003290:	mov    rcx,QWORD PTR [rdi+0x70]
   140003294:	lea    rdx,[rip+0xd91d]        # 0x140010bb8
   14000329b:	call   QWORD PTR [rip+0xafaf]        # 0x14000e250
   1400032a1:	mov    rbx,rax
   1400032a4:	test   rax,rax
   1400032a7:	je     0x140003277
   1400032a9:	mov    rcx,rax
   1400032ac:	call   QWORD PTR [rip+0xb416]        # 0x14000e6c8
   1400032b2:	mov    eax,DWORD PTR [rsp+0xb8]
   1400032b9:	mov    rdx,r13
   1400032bc:	and    DWORD PTR [rsp+0x30],0x0
   1400032c1:	mov    r9,QWORD PTR [rsp+0xa8]
   1400032c9:	mov    r8,QWORD PTR [rsp+0xa0]
   1400032d1:	mov    rcx,QWORD PTR [rsp+0x90]
   1400032d9:	mov    DWORD PTR [rsp+0x28],eax
   1400032dd:	mov    QWORD PTR [rsp+0x20],r14
   1400032e2:	call   rbx
   1400032e4:	mov    ebx,eax
   1400032e6:	test   eax,eax
   1400032e8:	js     0x140003353
   1400032ea:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400032f2:	mov    rdx,r14
   1400032f5:	call   0x140006ee0
   1400032fa:	mov    ebx,eax
   1400032fc:	test   eax,eax
   1400032fe:	jns    0x140003307
   140003300:	mov    ebx,0x80070005
   140003305:	jmp    0x140003353
   140003307:	mov    r14d,0x1
   14000330d:	mov    r8d,r14d
   140003310:	lea    edx,[r14+0x1]
   140003314:	lea    ecx,[rdx+0xb]
   140003317:	call   QWORD PTR [rip+0xb37b]        # 0x14000e698
   14000331d:	test   eax,eax
   14000331f:	js     0x14000333e
   140003321:	lea    rcx,[rdi+0x58]
   140003325:	mov    edx,r14d
   140003328:	call   QWORD PTR [rip+0xb37a]        # 0x14000e6a8
   14000332e:	lea    edx,[r14+0x1]
   140003332:	xor    r8d,r8d
   140003335:	lea    ecx,[rdx+0xb]
   140003338:	call   QWORD PTR [rip+0xb35a]        # 0x14000e698
   14000333e:	mov    DWORD PTR [rdi+0x30],0x7
   140003345:	jmp    0x140003353
   140003347:	mov    ebx,0x8007000e
   14000334c:	jmp    0x140003353
   14000334e:	mov    ebx,0x80070057
   140003353:	test   rsi,rsi
   140003356:	je     0x140003361
   140003358:	mov    rcx,rsi
   14000335b:	call   QWORD PTR [rip+0xb2e7]        # 0x14000e648
   140003361:	test   rbp,rbp
   140003364:	je     0x140003376
   140003366:	mov    rcx,rbp
   140003369:	call   QWORD PTR [rip+0xb2d9]        # 0x14000e648
   14000336f:	jmp    0x140003376
   140003371:	mov    ebx,0x8007000e
   140003376:	cmp    DWORD PTR [rdi],0x0
   140003379:	je     0x140003385
   14000337b:	lea    rcx,[rdi+0x8]
   14000337f:	call   QWORD PTR [rip+0xb03b]        # 0x14000e3c0
   140003385:	mov    eax,ebx
   140003387:	mov    rbx,QWORD PTR [rsp+0x88]
   14000338f:	add    rsp,0x50
   140003393:	pop    r14
   140003395:	pop    r13
   140003397:	pop    rdi
   140003398:	pop    rsi
   140003399:	pop    rbp
   14000339a:	ret    
   14000339b:	int3   
   14000339c:	int3   
   14000339d:	int3   
   14000339e:	int3   
   14000339f:	int3   
   1400033a0:	int3   
   1400033a1:	int3   
   1400033a2:	int3   
   1400033a3:	int3   
   1400033a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400033a9:	mov    QWORD PTR [rsp+0x18],rsi
   1400033ae:	push   rbp
   1400033af:	push   rdi
   1400033b0:	push   r12
   1400033b2:	push   r14
   1400033b4:	push   r15
   1400033b6:	lea    rbp,[rsp-0x420]
   1400033be:	sub    rsp,0x520
   1400033c5:	mov    rax,QWORD PTR [rip+0x10c3c]        # 0x140014008
   1400033cc:	xor    rax,rsp
   1400033cf:	mov    QWORD PTR [rbp+0x410],rax
   1400033d6:	mov    r14,QWORD PTR [rbp+0x470]
   1400033dd:	mov    rsi,r8
   1400033e0:	mov    rbx,rdx
   1400033e3:	mov    rdi,rcx
   1400033e6:	xor    r12d,r12d
   1400033e9:	lea    rcx,[rbp+0x1f2]
   1400033f0:	xor    edx,edx
   1400033f2:	mov    WORD PTR [rbp+0x1f0],r12w
   1400033fa:	mov    r8d,0x212
   140003400:	mov    r15d,r9d
   140003403:	call   0x14000d326
   140003408:	xor    edx,edx
   14000340a:	mov    DWORD PTR [rsp+0x70],r12d
   14000340f:	lea    r8d,[r12+0x60]
   140003414:	lea    rcx,[rsp+0x78]
   140003419:	call   0x14000d326
   14000341e:	xor    eax,eax
   140003420:	mov    QWORD PTR [rsp+0x50],r12
   140003425:	mov    QWORD PTR [rsp+0x58],rax
   14000342a:	mov    QWORD PTR [rsp+0x60],rax
   14000342f:	cmp    DWORD PTR [rdi],r12d
   140003432:	je     0x1400035f0
   140003438:	lea    rcx,[rdi+0x8]
   14000343c:	call   QWORD PTR [rip+0xae06]        # 0x14000e248
   140003442:	cmp    DWORD PTR [rdi+0x30],0x6
   140003446:	jge    0x140003452
   140003448:	mov    ebx,0x8007139f
   14000344d:	jmp    0x1400035f5
   140003452:	test   rbx,rbx
   140003455:	je     0x1400035e9
   14000345b:	test   rsi,rsi
   14000345e:	je     0x1400035e9
   140003464:	test   r14,r14
   140003467:	je     0x1400035e9
   14000346d:	mov    rdx,QWORD PTR [rdi+0x40]
   140003471:	sub    rdx,rbx
   140003474:	movzx  eax,WORD PTR [rbx]
   140003477:	movzx  ecx,WORD PTR [rbx+rdx*1]
   14000347b:	sub    eax,ecx
   14000347d:	jne    0x140003487
   14000347f:	add    rbx,0x2
   140003483:	test   ecx,ecx
   140003485:	jne    0x140003474
   140003487:	test   eax,eax
   140003489:	je     0x140003495
   14000348b:	mov    ebx,0x80070005
   140003490:	jmp    0x1400035f5
   140003495:	mov    r8,rsi
   140003498:	lea    rcx,[rbp-0x20]
   14000349c:	mov    edx,0x104
   1400034a1:	call   0x140001af4
   1400034a6:	test   eax,eax
   1400034a8:	js     0x1400035e9
   1400034ae:	lea    rax,[rbp-0x20]
   1400034b2:	cmp    WORD PTR [rbp-0x20],r12w
   1400034b7:	je     0x1400034d1
   1400034b9:	cmp    WORD PTR [rax],0x2f
   1400034bd:	jne    0x1400034c7
   1400034bf:	mov    ecx,0x5c
   1400034c4:	mov    WORD PTR [rax],cx
   1400034c7:	add    rax,0x2
   1400034cb:	cmp    WORD PTR [rax],r12w
   1400034cf:	jne    0x1400034b9
   1400034d1:	lea    rcx,[rbp-0x20]
   1400034d5:	call   0x140007f0c
   1400034da:	test   eax,eax
   1400034dc:	js     0x1400035e9
   1400034e2:	lea    rcx,[rbp-0x20]
   1400034e6:	call   0x140007fb8
   1400034eb:	test   eax,eax
   1400034ed:	js     0x1400035e9
   1400034f3:	lea    rdx,[rbp-0x20]
   1400034f7:	mov    rcx,rdi
   1400034fa:	call   0x140001e10
   1400034ff:	mov    ebx,eax
   140003501:	test   eax,eax
   140003503:	js     0x1400035f5
   140003509:	cmp    DWORD PTR [rdi+0x8c],r12d
   140003510:	jne    0x140003523
   140003512:	lea    rcx,[rbp-0x20]
   140003516:	call   0x1400087c4
   14000351b:	test   eax,eax
   14000351d:	je     0x14000348b
   140003523:	mov    esi,0x10a
   140003528:	lea    r8,[rbp+0x1f0]
   14000352f:	mov    r9d,esi
   140003532:	lea    rcx,[rbp-0x20]
   140003536:	mov    edx,esi
   140003538:	call   0x140009b18
   14000353d:	mov    ebx,eax
   14000353f:	test   eax,eax
   140003541:	js     0x1400035f5
   140003547:	test   r15d,r15d
   14000354a:	je     0x14000356b
   14000354c:	lea    r8,[rip+0xd675]        # 0x140010bc8
   140003553:	mov    edx,esi
   140003555:	lea    rcx,[rbp+0x1f0]
   14000355c:	call   0x140001078
   140003561:	mov    ebx,eax
   140003563:	test   eax,eax
   140003565:	js     0x1400035f5
   14000356b:	lea    rax,[rsp+0x50]
   140003570:	mov    DWORD PTR [rsp+0x70],0x68
   140003578:	mov    QWORD PTR [rsp+0x48],rax
   14000357d:	lea    rdx,[rbp+0x1f0]
   140003584:	lea    rax,[rsp+0x70]
   140003589:	xor    r9d,r9d
   14000358c:	mov    QWORD PTR [rsp+0x40],rax
   140003591:	xor    r8d,r8d
   140003594:	mov    QWORD PTR [rsp+0x38],r12
   140003599:	xor    ecx,ecx
   14000359b:	mov    QWORD PTR [rsp+0x30],r12
   1400035a0:	mov    DWORD PTR [rsp+0x28],r12d
   1400035a5:	mov    DWORD PTR [rsp+0x20],r12d
   1400035aa:	call   QWORD PTR [rip+0xad60]        # 0x14000e310
   1400035b0:	test   eax,eax
   1400035b2:	jne    0x1400035ca
   1400035b4:	call   QWORD PTR [rip+0xad36]        # 0x14000e2f0
   1400035ba:	movzx  ebx,ax
   1400035bd:	or     ebx,0x80070000
   1400035c3:	test   eax,eax
   1400035c5:	cmovle ebx,eax
   1400035c8:	jmp    0x1400035f5
   1400035ca:	mov    r8,r14
   1400035cd:	lea    rdx,[rsp+0x50]
   1400035d2:	mov    rcx,rdi
   1400035d5:	call   0x140001e98
   1400035da:	mov    ebx,eax
   1400035dc:	test   eax,eax
   1400035de:	js     0x1400035f5
   1400035e0:	mov    DWORD PTR [rdi+0x30],0x8
   1400035e7:	jmp    0x1400035f5
   1400035e9:	mov    ebx,0x80070057
   1400035ee:	jmp    0x1400035f5
   1400035f0:	mov    ebx,0x8007000e
   1400035f5:	mov    rcx,QWORD PTR [rsp+0x58]
   1400035fa:	test   rcx,rcx
   1400035fd:	je     0x140003605
   1400035ff:	call   QWORD PTR [rip+0xad6b]        # 0x14000e370
   140003605:	mov    rcx,QWORD PTR [rsp+0x50]
   14000360a:	test   rcx,rcx
   14000360d:	je     0x140003615
   14000360f:	call   QWORD PTR [rip+0xad5b]        # 0x14000e370
   140003615:	cmp    DWORD PTR [rdi],r12d
   140003618:	je     0x140003624
   14000361a:	lea    rcx,[rdi+0x8]
   14000361e:	call   QWORD PTR [rip+0xad9c]        # 0x14000e3c0
   140003624:	mov    eax,ebx
   140003626:	mov    rcx,QWORD PTR [rbp+0x410]
   14000362d:	xor    rcx,rsp
   140003630:	call   0x14000cc40
   140003635:	lea    r11,[rsp+0x520]
   14000363d:	mov    rbx,QWORD PTR [r11+0x38]
   140003641:	mov    rsi,QWORD PTR [r11+0x40]
   140003645:	mov    rsp,r11
   140003648:	pop    r15
   14000364a:	pop    r14
   14000364c:	pop    r12
   14000364e:	pop    rdi
   14000364f:	pop    rbp
   140003650:	ret    
   140003651:	int3   
   140003652:	int3   
   140003653:	int3   
   140003654:	int3   
   140003655:	int3   
   140003656:	int3   
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    QWORD PTR [rsp+0x8],rbx
   140003665:	push   rdi
   140003666:	sub    rsp,0x30
   14000366a:	mov    rbx,rcx
   14000366d:	xor    ecx,ecx
   14000366f:	call   QWORD PTR [rip+0xafc3]        # 0x14000e638
   140003675:	mov    edi,eax
   140003677:	test   eax,eax
   140003679:	js     0x1400036af
   14000367b:	test   rbx,rbx
   14000367e:	je     0x1400036a4
   140003680:	mov    rcx,QWORD PTR [rbx]
   140003683:	test   rcx,rcx
   140003686:	je     0x1400036a4
   140003688:	mov    eax,DWORD PTR [rbx+0x1c]
   14000368b:	mov    r9d,DWORD PTR [rbx+0x18]
   14000368f:	mov    r8,QWORD PTR [rbx+0x10]
   140003693:	mov    rdx,QWORD PTR [rbx+0x8]
   140003697:	mov    DWORD PTR [rsp+0x20],eax
   14000369b:	call   0x1400036c4
   1400036a0:	mov    edi,eax
   1400036a2:	jmp    0x1400036a9
   1400036a4:	mov    edi,0x80070057
   1400036a9:	call   QWORD PTR [rip+0xaf81]        # 0x14000e630
   1400036af:	mov    eax,edi
   1400036b1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400036b6:	add    rsp,0x30
   1400036ba:	pop    rdi
   1400036bb:	ret    
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	int3   
   1400036c1:	int3   
   1400036c2:	int3   
   1400036c3:	int3   
   1400036c4:	mov    rax,rsp
   1400036c7:	mov    QWORD PTR [rax+0x10],rbx
   1400036cb:	mov    QWORD PTR [rax+0x18],rsi
   1400036cf:	mov    QWORD PTR [rax+0x20],rdi
   1400036d3:	push   rbp
   1400036d4:	push   r12
   1400036d6:	push   r13
   1400036d8:	push   r14
   1400036da:	push   r15
   1400036dc:	lea    rbp,[rax-0x7d8]
   1400036e3:	sub    rsp,0x8b0
   1400036ea:	mov    rax,QWORD PTR [rip+0x10917]        # 0x140014008
   1400036f1:	xor    rax,rsp
   1400036f4:	mov    QWORD PTR [rbp+0x7a0],rax
   1400036fb:	xor    r13d,r13d
   1400036fe:	mov    r12d,r9d
   140003701:	mov    rsi,r8
   140003704:	mov    rbx,rdx
   140003707:	mov    rdi,rcx
   14000370a:	mov    r15d,0x80004005
   140003710:	mov    r14d,r13d
   140003713:	mov    QWORD PTR [rsp+0x50],r13
   140003718:	cmp    DWORD PTR [rcx],r13d
   14000371b:	je     0x140003a11
   140003721:	add    rcx,0x8
   140003725:	call   QWORD PTR [rip+0xab1d]        # 0x14000e248
   14000372b:	cmp    DWORD PTR [rdi+0x30],0x6
   14000372f:	jge    0x14000373b
   140003731:	mov    ebx,0x8007139f
   140003736:	jmp    0x1400039f1
   14000373b:	test   rbx,rbx
   14000373e:	je     0x1400039ec
   140003744:	test   rsi,rsi
   140003747:	je     0x1400039ec
   14000374d:	mov    rdx,QWORD PTR [rdi+0x40]
   140003751:	sub    rdx,rbx
   140003754:	movzx  eax,WORD PTR [rbx]
   140003757:	movzx  ecx,WORD PTR [rbx+rdx*1]
   14000375b:	sub    eax,ecx
   14000375d:	jne    0x140003767
   14000375f:	add    rbx,0x2
   140003763:	test   ecx,ecx
   140003765:	jne    0x140003754
   140003767:	test   eax,eax
   140003769:	je     0x140003775
   14000376b:	mov    ebx,0x80070005
   140003770:	jmp    0x1400039f1
   140003775:	mov    r8,rsi
   140003778:	lea    rcx,[rsp+0x70]
   14000377d:	mov    edx,0x104
   140003782:	call   0x140001af4
   140003787:	test   eax,eax
   140003789:	js     0x1400039ec
   14000378f:	lea    rax,[rsp+0x70]
   140003794:	cmp    WORD PTR [rsp+0x70],r13w
   14000379a:	je     0x1400037b4
   14000379c:	cmp    WORD PTR [rax],0x2f
   1400037a0:	jne    0x1400037aa
   1400037a2:	mov    ecx,0x5c
   1400037a7:	mov    WORD PTR [rax],cx
   1400037aa:	add    rax,0x2
   1400037ae:	cmp    WORD PTR [rax],r13w
   1400037b2:	jne    0x14000379c
   1400037b4:	lea    rcx,[rsp+0x70]
   1400037b9:	call   0x140007f0c
   1400037be:	test   eax,eax
   1400037c0:	js     0x1400039ec
   1400037c6:	lea    rcx,[rsp+0x70]
   1400037cb:	call   0x140007fb8
   1400037d0:	test   eax,eax
   1400037d2:	js     0x1400039ec
   1400037d8:	lea    rdx,[rsp+0x70]
   1400037dd:	mov    rcx,rdi
   1400037e0:	call   0x140001e10
   1400037e5:	mov    ebx,eax
   1400037e7:	test   eax,eax
   1400037e9:	js     0x1400039f1
   1400037ef:	cmp    DWORD PTR [rdi+0x8c],r13d
   1400037f6:	jne    0x14000380a
   1400037f8:	lea    rcx,[rsp+0x70]
   1400037fd:	call   0x1400087c4
   140003802:	test   eax,eax
   140003804:	je     0x14000376b
   14000380a:	cmp    DWORD PTR [rbp+0x800],r13d
   140003811:	je     0x140003981
   140003817:	xor    edx,edx
   140003819:	mov    WORD PTR [rbp+0x180],r13w
   140003821:	mov    r8d,0x206
   140003827:	lea    rcx,[rbp+0x182]
   14000382e:	call   0x14000d326
   140003833:	lea    rcx,[rsp+0x60]
   140003838:	mov    QWORD PTR [rsp+0x60],r13
   14000383d:	mov    esi,r13d
   140003840:	call   0x14000a34c
   140003845:	mov    ebx,eax
   140003847:	test   eax,eax
   140003849:	jne    0x1400039f1
   14000384f:	mov    rcx,QWORD PTR [rsp+0x60]
   140003854:	lea    rax,[rsp+0x58]
   140003859:	mov    QWORD PTR [rsp+0x40],rax
   14000385e:	lea    rdx,[rip+0xd3fb]        # 0x140010c60
   140003865:	lea    rax,[rsp+0x50]
   14000386a:	xor    r9d,r9d
   14000386d:	mov    QWORD PTR [rsp+0x38],rax
   140003872:	xor    r8d,r8d
   140003875:	mov    QWORD PTR [rsp+0x30],r13
   14000387a:	mov    DWORD PTR [rsp+0x28],0x20006
   140003882:	mov    DWORD PTR [rsp+0x20],r13d
   140003887:	call   QWORD PTR [rip+0xa773]        # 0x14000e000
   14000388d:	test   eax,eax
   14000388f:	je     0x1400038a4
   140003891:	movzx  ebx,ax
   140003894:	or     ebx,0x80070000
   14000389a:	test   eax,eax
   14000389c:	cmovle ebx,eax
   14000389f:	jmp    0x1400039f1
   1400038a4:	mov    r9d,esi
   1400038a7:	lea    r8,[rip+0xd332]        # 0x140010be0
   1400038ae:	mov    edx,0x104
   1400038b3:	lea    rcx,[rbp+0x180]
   1400038ba:	call   0x140001b70
   1400038bf:	inc    esi
   1400038c1:	mov    ebx,eax
   1400038c3:	test   eax,eax
   1400038c5:	js     0x1400039f1
   1400038cb:	mov    rcx,QWORD PTR [rsp+0x50]
   1400038d0:	lea    rax,[rsp+0x58]
   1400038d5:	mov    QWORD PTR [rsp+0x28],rax
   1400038da:	lea    rdx,[rbp+0x180]
   1400038e1:	xor    r9d,r9d
   1400038e4:	mov    QWORD PTR [rsp+0x20],r13
   1400038e9:	xor    r8d,r8d
   1400038ec:	call   QWORD PTR [rip+0xa75e]        # 0x14000e050
   1400038f2:	test   eax,eax
   1400038f4:	jne    0x1400038fc
   1400038f6:	test   esi,esi
   1400038f8:	je     0x140003900
   1400038fa:	jmp    0x1400038a4
   1400038fc:	test   esi,esi
   1400038fe:	jne    0x14000390a
   140003900:	mov    ebx,0x800703f5
   140003905:	jmp    0x1400039f1
   14000390a:	lea    r9,[rsp+0x70]
   14000390f:	mov    edx,0x207
   140003914:	lea    r8,[rip+0xd2e5]        # 0x140010c00
   14000391b:	lea    rcx,[rbp+0x390]
   140003922:	call   0x140001b70
   140003927:	mov    ebx,eax
   140003929:	test   eax,eax
   14000392b:	js     0x1400039f1
   140003931:	lea    rcx,[rbp+0x390]
   140003938:	or     rax,0xffffffffffffffff
   14000393c:	inc    rax
   14000393f:	cmp    WORD PTR [rcx+rax*2],r13w
   140003944:	jne    0x14000393c
   140003946:	mov    rcx,QWORD PTR [rsp+0x50]
   14000394b:	lea    eax,[rax*2+0x2]
   140003952:	mov    DWORD PTR [rsp+0x28],eax
   140003956:	lea    rdx,[rbp+0x180]
   14000395d:	lea    rax,[rbp+0x390]
   140003964:	mov    r9d,0x1
   14000396a:	xor    r8d,r8d
   14000396d:	mov    QWORD PTR [rsp+0x20],rax
   140003972:	call   QWORD PTR [rip+0xa6b8]        # 0x14000e030
   140003978:	test   eax,eax
   14000397a:	je     0x1400039e3
   14000397c:	jmp    0x140003891
   140003981:	xor    edx,edx
   140003983:	lea    rcx,[rsp+0x70]
   140003988:	lea    r8d,[rdx+0x8]
   14000398c:	call   QWORD PTR [rip+0xa986]        # 0x14000e318
   140003992:	mov    r14,rax
   140003995:	test   rax,rax
   140003998:	jne    0x1400039a5
   14000399a:	call   QWORD PTR [rip+0xa950]        # 0x14000e2f0
   1400039a0:	jmp    0x140003891
   1400039a5:	lea    rdx,[rip+0xd31c]        # 0x140010cc8
   1400039ac:	mov    rcx,rax
   1400039af:	call   QWORD PTR [rip+0xa89b]        # 0x14000e250
   1400039b5:	mov    rbx,rax
   1400039b8:	test   rax,rax
   1400039bb:	je     0x14000399a
   1400039bd:	test   r12d,r12d
   1400039c0:	je     0x1400039d2
   1400039c2:	call   0x14000a398
   1400039c7:	mov    r15d,eax
   1400039ca:	test   eax,eax
   1400039cc:	je     0x1400039d2
   1400039ce:	mov    ebx,eax
   1400039d0:	jmp    0x1400039f1
   1400039d2:	mov    rcx,rbx
   1400039d5:	call   QWORD PTR [rip+0xaced]        # 0x14000e6c8
   1400039db:	call   rbx
   1400039dd:	mov    ebx,eax
   1400039df:	test   eax,eax
   1400039e1:	js     0x1400039f1
   1400039e3:	mov    DWORD PTR [rdi+0x30],0x8
   1400039ea:	jmp    0x1400039f1
   1400039ec:	mov    ebx,0x80070057
   1400039f1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400039f6:	test   rcx,rcx
   1400039f9:	je     0x140003a01
   1400039fb:	call   QWORD PTR [rip+0xa627]        # 0x14000e028
   140003a01:	test   r14,r14
   140003a04:	je     0x140003a16
   140003a06:	mov    rcx,r14
   140003a09:	call   QWORD PTR [rip+0xa8f9]        # 0x14000e308
   140003a0f:	jmp    0x140003a16
   140003a11:	mov    ebx,0x8007000e
   140003a16:	test   r12d,r12d
   140003a19:	je     0x140003a43
   140003a1b:	test   r15d,r15d
   140003a1e:	jne    0x140003a43
   140003a20:	xor    edx,edx
   140003a22:	mov    rcx,0xffffffff80000000
   140003a29:	call   QWORD PTR [rip+0xa6f1]        # 0x14000e120
   140003a2f:	xor    edx,edx
   140003a31:	mov    rcx,0xffffffff80000002
   140003a38:	call   QWORD PTR [rip+0xa6e2]        # 0x14000e120
   140003a3e:	call   0x14000a4d4
   140003a43:	cmp    DWORD PTR [rdi],r13d
   140003a46:	je     0x140003a52
   140003a48:	lea    rcx,[rdi+0x8]
   140003a4c:	call   QWORD PTR [rip+0xa96e]        # 0x14000e3c0
   140003a52:	mov    eax,ebx
   140003a54:	mov    rcx,QWORD PTR [rbp+0x7a0]
   140003a5b:	xor    rcx,rsp
   140003a5e:	call   0x14000cc40
   140003a63:	lea    r11,[rsp+0x8b0]
   140003a6b:	mov    rbx,QWORD PTR [r11+0x38]
   140003a6f:	mov    rsi,QWORD PTR [r11+0x40]
   140003a73:	mov    rdi,QWORD PTR [r11+0x48]
   140003a77:	mov    rsp,r11
   140003a7a:	pop    r15
   140003a7c:	pop    r14
   140003a7e:	pop    r13
   140003a80:	pop    r12
   140003a82:	pop    rbp
   140003a83:	ret    
   140003a84:	int3   
   140003a85:	int3   
   140003a86:	int3   
   140003a87:	int3   
   140003a88:	int3   
   140003a89:	int3   
   140003a8a:	int3   
   140003a8b:	int3   
   140003a8c:	mov    rax,rsp
   140003a8f:	mov    QWORD PTR [rax+0x10],rbx
   140003a93:	mov    QWORD PTR [rax+0x18],rbp
   140003a97:	mov    QWORD PTR [rax+0x20],rsi
   140003a9b:	push   rdi
   140003a9c:	sub    rsp,0x40
   140003aa0:	and    DWORD PTR [rax+0x8],0x0
   140003aa4:	mov    rsi,r8
   140003aa7:	and    DWORD PTR [rax-0x18],0x0
   140003aab:	lea    r8,[rax-0x18]
   140003aaf:	mov    rbp,rdx
   140003ab2:	mov    rbx,rcx
   140003ab5:	add    rcx,0x58
   140003ab9:	lea    rdx,[rax+0x8]
   140003abd:	mov    edi,r9d
   140003ac0:	call   QWORD PTR [rip+0xabca]        # 0x14000e690
   140003ac6:	test   eax,eax
   140003ac8:	js     0x140003af4
   140003aca:	test   DWORD PTR [rsp+0x50],0x1000000
   140003ad2:	mov    r9d,edi
   140003ad5:	mov    eax,DWORD PTR [rsp+0x70]
   140003ad9:	mov    r8,rsi
   140003adc:	mov    DWORD PTR [rsp+0x20],eax
   140003ae0:	mov    rdx,rbp
   140003ae3:	mov    rcx,rbx
   140003ae6:	je     0x140003aef
   140003ae8:	call   0x140003b10
   140003aed:	jmp    0x140003af4
   140003aef:	call   0x1400036c4
   140003af4:	mov    rbx,QWORD PTR [rsp+0x58]
   140003af9:	mov    rbp,QWORD PTR [rsp+0x60]
   140003afe:	mov    rsi,QWORD PTR [rsp+0x68]
   140003b03:	add    rsp,0x40
   140003b07:	pop    rdi
   140003b08:	ret    
   140003b09:	int3   
   140003b0a:	int3   
   140003b0b:	int3   
   140003b0c:	int3   
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	mov    rax,rsp
   140003b13:	mov    QWORD PTR [rax+0x8],rbx
   140003b17:	mov    QWORD PTR [rax+0x10],rbp
   140003b1b:	mov    QWORD PTR [rax+0x18],rsi
   140003b1f:	mov    QWORD PTR [rax+0x20],rdi
   140003b23:	push   r14
   140003b25:	sub    rsp,0x40
   140003b29:	mov    r14,rcx
   140003b2c:	mov    DWORD PTR [rax-0x18],0x8007000e
   140003b33:	mov    ecx,0x20
   140003b38:	mov    ebp,r9d
   140003b3b:	mov    rsi,r8
   140003b3e:	mov    rdi,rdx
   140003b41:	call   0x140001140
   140003b46:	mov    rbx,rax
   140003b49:	test   rax,rax
   140003b4c:	je     0x140003c29
   140003b52:	mov    rcx,rdi
   140003b55:	call   QWORD PTR [rip+0xa8c5]        # 0x14000e420
   140003b5b:	mov    QWORD PTR [rbx+0x8],rax
   140003b5f:	test   rax,rax
   140003b62:	je     0x140003c21
   140003b68:	mov    rcx,rsi
   140003b6b:	call   QWORD PTR [rip+0xa8af]        # 0x14000e420
   140003b71:	mov    QWORD PTR [rbx+0x10],rax
   140003b75:	test   rax,rax
   140003b78:	je     0x140003c17
   140003b7e:	mov    eax,DWORD PTR [rsp+0x70]
   140003b82:	lea    r8,[rip+0xfffffffffffffad7]        # 0x140003660
   140003b89:	and    QWORD PTR [rsp+0x28],0x0
   140003b8f:	mov    r9,rbx
   140003b92:	and    DWORD PTR [rsp+0x20],0x0
   140003b97:	xor    edx,edx
   140003b99:	xor    ecx,ecx
   140003b9b:	mov    DWORD PTR [rbx+0x1c],eax
   140003b9e:	mov    QWORD PTR [rbx],r14
   140003ba1:	mov    DWORD PTR [rbx+0x18],ebp
   140003ba4:	call   QWORD PTR [rip+0xa6be]        # 0x14000e268
   140003baa:	mov    rdi,rax
   140003bad:	test   rax,rax
   140003bb0:	je     0x140003bf5
   140003bb2:	or     edx,0xffffffff
   140003bb5:	mov    rcx,rax
   140003bb8:	call   QWORD PTR [rip+0xa71a]        # 0x14000e2d8
   140003bbe:	test   eax,eax
   140003bc0:	je     0x140003bdc
   140003bc2:	call   QWORD PTR [rip+0xa728]        # 0x14000e2f0
   140003bc8:	movzx  ecx,ax
   140003bcb:	or     ecx,0x80070000
   140003bd1:	test   eax,eax
   140003bd3:	cmovle ecx,eax
   140003bd6:	mov    DWORD PTR [rsp+0x30],ecx
   140003bda:	jmp    0x140003bea
   140003bdc:	lea    rdx,[rsp+0x30]
   140003be1:	mov    rcx,rdi
   140003be4:	call   QWORD PTR [rip+0xa64e]        # 0x14000e238
   140003bea:	mov    rcx,rdi
   140003bed:	call   QWORD PTR [rip+0xa77d]        # 0x14000e370
   140003bf3:	jmp    0x140003c0d
   140003bf5:	call   QWORD PTR [rip+0xa6f5]        # 0x14000e2f0
   140003bfb:	movzx  ecx,ax
   140003bfe:	or     ecx,0x80070000
   140003c04:	test   eax,eax
   140003c06:	cmovle ecx,eax
   140003c09:	mov    DWORD PTR [rsp+0x30],ecx
   140003c0d:	mov    rcx,QWORD PTR [rbx+0x10]
   140003c11:	call   QWORD PTR [rip+0xa7f9]        # 0x14000e410
   140003c17:	mov    rcx,QWORD PTR [rbx+0x8]
   140003c1b:	call   QWORD PTR [rip+0xa7ef]        # 0x14000e410
   140003c21:	mov    rcx,rbx
   140003c24:	call   0x14000116c
   140003c29:	mov    eax,DWORD PTR [rsp+0x30]
   140003c2d:	mov    rbx,QWORD PTR [rsp+0x50]
   140003c32:	mov    rbp,QWORD PTR [rsp+0x58]
   140003c37:	mov    rsi,QWORD PTR [rsp+0x60]
   140003c3c:	mov    rdi,QWORD PTR [rsp+0x68]
   140003c41:	add    rsp,0x40
   140003c45:	pop    r14
   140003c47:	ret    
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	mov    QWORD PTR [rsp+0x10],rbx
   140003c55:	mov    QWORD PTR [rsp+0x20],rsi
   140003c5a:	push   rbp
   140003c5b:	push   rdi
   140003c5c:	push   r14
   140003c5e:	mov    rbp,rsp
   140003c61:	sub    rsp,0x40
   140003c65:	mov    rax,QWORD PTR [rip+0x1039c]        # 0x140014008
   140003c6c:	xor    rax,rsp
   140003c6f:	mov    QWORD PTR [rbp-0x8],rax
   140003c73:	and    QWORD PTR [rbp-0x20],0x0
   140003c78:	xor    r14d,r14d
   140003c7b:	mov    rsi,r8
   140003c7e:	mov    rbx,rdx
   140003c81:	mov    rdi,rcx
   140003c84:	mov    DWORD PTR [rbp-0x18],0xf750e6c3
   140003c8b:	mov    DWORD PTR [rbp-0x14],0x11d138ee
   140003c92:	mov    DWORD PTR [rbp-0x10],0xc000e585
   140003c99:	mov    DWORD PTR [rbp-0xc],0xee95c24f
   140003ca0:	cmp    DWORD PTR [rcx],r14d
   140003ca3:	je     0x140003d86
   140003ca9:	add    rcx,0x8
   140003cad:	call   QWORD PTR [rip+0xa595]        # 0x14000e248
   140003cb3:	cmp    DWORD PTR [rdi+0x30],0x2
   140003cb7:	jge    0x140003cc3
   140003cb9:	mov    ebx,0x8007139f
   140003cbe:	jmp    0x140003d5e
   140003cc3:	test   rbx,rbx
   140003cc6:	je     0x140003d59
   140003ccc:	test   rsi,rsi
   140003ccf:	je     0x140003d59
   140003cd5:	mov    rdx,QWORD PTR [rdi+0x40]
   140003cd9:	sub    rdx,rbx
   140003cdc:	movzx  eax,WORD PTR [rbx]
   140003cdf:	movzx  ecx,WORD PTR [rbx+rdx*1]
   140003ce3:	sub    eax,ecx
   140003ce5:	jne    0x140003cef
   140003ce7:	add    rbx,0x2
   140003ceb:	test   ecx,ecx
   140003ced:	jne    0x140003cdc
   140003cef:	test   eax,eax
   140003cf1:	je     0x140003cfa
   140003cf3:	mov    ebx,0x80070005
   140003cf8:	jmp    0x140003d5e
   140003cfa:	mov    rdx,rsi
   140003cfd:	mov    rcx,rdi
   140003d00:	call   0x140001e10
   140003d05:	mov    ebx,eax
   140003d07:	test   eax,eax
   140003d09:	js     0x140003d5e
   140003d0b:	cmp    DWORD PTR [rdi+0x8c],r14d
   140003d12:	jne    0x140003d20
   140003d14:	mov    rcx,rsi
   140003d17:	call   0x1400087c4
   140003d1c:	test   eax,eax
   140003d1e:	je     0x140003cf3
   140003d20:	xor    r8d,r8d
   140003d23:	lea    rdx,[rbp-0x18]
   140003d27:	lea    rcx,[rbp-0x20]
   140003d2b:	call   QWORD PTR [rip+0xa74f]        # 0x14000e480
   140003d31:	test   eax,eax
   140003d33:	jne    0x140003d3c
   140003d35:	mov    ebx,0x80004005
   140003d3a:	jmp    0x140003d5e
   140003d3c:	mov    rcx,QWORD PTR [rbp-0x20]
   140003d40:	xor    r9d,r9d
   140003d43:	xor    r8d,r8d
   140003d46:	mov    rdx,rsi
   140003d49:	call   QWORD PTR [rip+0xa721]        # 0x14000e470
   140003d4f:	mov    r14,rax
   140003d52:	test   rax,rax
   140003d55:	jne    0x140003d5e
   140003d57:	jmp    0x140003d35
   140003d59:	mov    ebx,0x80070057
   140003d5e:	mov    rcx,QWORD PTR [rbp-0x20]
   140003d62:	test   rcx,rcx
   140003d65:	je     0x140003d8b
   140003d67:	test   r14,r14
   140003d6a:	je     0x140003d7c
   140003d6c:	xor    r8d,r8d
   140003d6f:	mov    rdx,r14
   140003d72:	call   QWORD PTR [rip+0xa710]        # 0x14000e488
   140003d78:	mov    rcx,QWORD PTR [rbp-0x20]
   140003d7c:	xor    edx,edx
   140003d7e:	call   QWORD PTR [rip+0xa6f4]        # 0x14000e478
   140003d84:	jmp    0x140003d8b
   140003d86:	mov    ebx,0x8007000e
   140003d8b:	cmp    DWORD PTR [rdi],0x0
   140003d8e:	je     0x140003d9a
   140003d90:	lea    rcx,[rdi+0x8]
   140003d94:	call   QWORD PTR [rip+0xa626]        # 0x14000e3c0
   140003d9a:	mov    eax,ebx
   140003d9c:	mov    rcx,QWORD PTR [rbp-0x8]
   140003da0:	xor    rcx,rsp
   140003da3:	call   0x14000cc40
   140003da8:	mov    rbx,QWORD PTR [rsp+0x68]
   140003dad:	mov    rsi,QWORD PTR [rsp+0x78]
   140003db2:	add    rsp,0x40
   140003db6:	pop    r14
   140003db8:	pop    rdi
   140003db9:	pop    rbp
   140003dba:	ret    
   140003dbb:	int3   
   140003dbc:	int3   
   140003dbd:	int3   
   140003dbe:	int3   
   140003dbf:	int3   
   140003dc0:	int3   
   140003dc1:	int3   
   140003dc2:	int3   
   140003dc3:	int3   
   140003dc4:	mov    QWORD PTR [rsp+0x10],rbx
   140003dc9:	mov    QWORD PTR [rsp+0x18],rsi
   140003dce:	mov    QWORD PTR [rsp+0x20],r9
   140003dd3:	push   rbp
   140003dd4:	push   rdi
   140003dd5:	push   r14
   140003dd7:	mov    rbp,rsp
   140003dda:	sub    rsp,0x40
   140003dde:	xor    ebx,ebx
   140003de0:	mov    r14,r8
   140003de3:	and    QWORD PTR [rbp-0x8],rbx
   140003de7:	mov    rdi,rdx
   140003dea:	and    QWORD PTR [rbp-0x10],rbx
   140003dee:	mov    rsi,rcx
   140003df1:	and    QWORD PTR [rbp+0x20],rbx
   140003df5:	cmp    DWORD PTR [rcx],ebx
   140003df7:	je     0x140003f51
   140003dfd:	add    rcx,0x8
   140003e01:	call   QWORD PTR [rip+0xa441]        # 0x14000e248
   140003e07:	cmp    DWORD PTR [rsi+0x30],0x7
   140003e0b:	jge    0x140003e17
   140003e0d:	mov    ebx,0x8007139f
   140003e12:	jmp    0x140003f22
   140003e17:	test   rdi,rdi
   140003e1a:	je     0x140003f1d
   140003e20:	test   r14,r14
   140003e23:	je     0x140003f1d
   140003e29:	mov    rdx,QWORD PTR [rsi+0x40]
   140003e2d:	sub    rdx,rdi
   140003e30:	movzx  eax,WORD PTR [rdi]
   140003e33:	movzx  ecx,WORD PTR [rdi+rdx*1]
   140003e37:	sub    eax,ecx
   140003e39:	jne    0x140003e43
   140003e3b:	add    rdi,0x2
   140003e3f:	test   ecx,ecx
   140003e41:	jne    0x140003e30
   140003e43:	test   eax,eax
   140003e45:	je     0x140003e51
   140003e47:	mov    ebx,0x80070005
   140003e4c:	jmp    0x140003f22
   140003e51:	lea    rax,[rbp-0x8]
   140003e55:	mov    r9d,0x20019
   140003e5b:	xor    r8d,r8d
   140003e5e:	mov    QWORD PTR [rsp+0x20],rax
   140003e63:	lea    rdx,[rip+0xce76]        # 0x140010ce0
   140003e6a:	mov    rcx,0xffffffff80000000
   140003e71:	call   QWORD PTR [rip+0xa201]        # 0x14000e078
   140003e77:	test   eax,eax
   140003e79:	jne    0x140003f0d
   140003e7f:	mov    rcx,QWORD PTR [rbp-0x8]
   140003e83:	lea    rax,[rbp-0x10]
   140003e87:	mov    edi,0x2001f
   140003e8c:	mov    QWORD PTR [rsp+0x20],rax
   140003e91:	mov    r9d,edi
   140003e94:	xor    r8d,r8d
   140003e97:	mov    rdx,r14
   140003e9a:	call   QWORD PTR [rip+0xa1d8]        # 0x14000e078
   140003ea0:	test   eax,eax
   140003ea2:	jne    0x140003f0d
   140003ea4:	mov    rcx,QWORD PTR [rbp-0x10]
   140003ea8:	lea    rax,[rbp+0x20]
   140003eac:	mov    r9d,edi
   140003eaf:	mov    QWORD PTR [rsp+0x20],rax
   140003eb4:	xor    r8d,r8d
   140003eb7:	lea    rdx,[rip+0xce32]        # 0x140010cf0
   140003ebe:	call   QWORD PTR [rip+0xa1b4]        # 0x14000e078
   140003ec4:	test   eax,eax
   140003ec6:	je     0x140003ee1
   140003ec8:	mov    rcx,QWORD PTR [rbp-0x10]
   140003ecc:	lea    r8,[rbp+0x20]
   140003ed0:	lea    rdx,[rip+0xce19]        # 0x140010cf0
   140003ed7:	call   QWORD PTR [rip+0xa15b]        # 0x14000e038
   140003edd:	test   eax,eax
   140003edf:	jne    0x140003f0d
   140003ee1:	mov    rcx,QWORD PTR [rbp+0x20]
   140003ee5:	lea    rax,[rbp+0x3c]
   140003ee9:	mov    r9d,0x4
   140003eef:	lea    rdx,[rip+0xce22]        # 0x140010d18
   140003ef6:	mov    DWORD PTR [rsp+0x28],r9d
   140003efb:	xor    r8d,r8d
   140003efe:	mov    QWORD PTR [rsp+0x20],rax
   140003f03:	call   QWORD PTR [rip+0xa127]        # 0x14000e030
   140003f09:	test   eax,eax
   140003f0b:	je     0x140003f22
   140003f0d:	movzx  ebx,ax
   140003f10:	or     ebx,0x80070000
   140003f16:	test   eax,eax
   140003f18:	cmovle ebx,eax
   140003f1b:	jmp    0x140003f22
   140003f1d:	mov    ebx,0x80070057
   140003f22:	mov    rcx,QWORD PTR [rbp+0x20]
   140003f26:	test   rcx,rcx
   140003f29:	je     0x140003f31
   140003f2b:	call   QWORD PTR [rip+0xa0f7]        # 0x14000e028
   140003f31:	mov    rcx,QWORD PTR [rbp-0x10]
   140003f35:	test   rcx,rcx
   140003f38:	je     0x140003f40
   140003f3a:	call   QWORD PTR [rip+0xa0e8]        # 0x14000e028
   140003f40:	mov    rcx,QWORD PTR [rbp-0x8]
   140003f44:	test   rcx,rcx
   140003f47:	je     0x140003f56
   140003f49:	call   QWORD PTR [rip+0xa0d9]        # 0x14000e028
   140003f4f:	jmp    0x140003f56
   140003f51:	mov    ebx,0x8007000e
   140003f56:	cmp    DWORD PTR [rsi],0x0
   140003f59:	je     0x140003f65
   140003f5b:	lea    rcx,[rsi+0x8]
   140003f5f:	call   QWORD PTR [rip+0xa45b]        # 0x14000e3c0
   140003f65:	mov    rsi,QWORD PTR [rsp+0x70]
   140003f6a:	mov    eax,ebx
   140003f6c:	mov    rbx,QWORD PTR [rsp+0x68]
   140003f71:	add    rsp,0x40
   140003f75:	pop    r14
   140003f77:	pop    rdi
   140003f78:	pop    rbp
   140003f79:	ret    
   140003f7a:	int3   
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	mov    QWORD PTR [rsp+0x10],rbx
   140003f85:	push   rbp
   140003f86:	push   rsi
   140003f87:	push   rdi
   140003f88:	push   r12
   140003f8a:	push   r13
   140003f8c:	push   r14
   140003f8e:	push   r15
   140003f90:	lea    rbp,[rsp-0x1c0]
   140003f98:	sub    rsp,0x2c0
   140003f9f:	mov    rax,QWORD PTR [rip+0x10062]        # 0x140014008
   140003fa6:	xor    rax,rsp
   140003fa9:	mov    QWORD PTR [rbp+0x1b0],rax
   140003fb0:	mov    r14,QWORD PTR [rbp+0x228]
   140003fb7:	mov    rax,rcx
   140003fba:	mov    r15,QWORD PTR [rbp+0x230]
   140003fc1:	mov    rbx,rdx
   140003fc4:	mov    rdx,QWORD PTR [rbp+0x268]
   140003fcb:	mov    rsi,r9
   140003fce:	mov    r13,QWORD PTR [rbp+0x240]
   140003fd5:	mov    rdi,r8
   140003fd8:	mov    r12,QWORD PTR [rbp+0x248]
   140003fdf:	mov    QWORD PTR [rsp+0x68],rcx
   140003fe4:	mov    rcx,QWORD PTR [rbp+0x258]
   140003feb:	mov    QWORD PTR [rsp+0x78],rcx
   140003ff0:	mov    rcx,QWORD PTR [rbp+0x260]
   140003ff7:	mov    QWORD PTR [rbp-0x68],rcx
   140003ffb:	mov    rcx,QWORD PTR [rbp+0x278]
   140004002:	mov    QWORD PTR [rbp-0x80],rcx
   140004006:	mov    rcx,QWORD PTR [rbp+0x280]
   14000400d:	mov    QWORD PTR [rsp+0x70],rcx
   140004012:	mov    rcx,QWORD PTR [rbp+0x290]
   140004019:	mov    QWORD PTR [rbp-0x70],rcx
   14000401d:	xor    ecx,ecx
   14000401f:	mov    QWORD PTR [rbp-0x78],rdx
   140004023:	mov    QWORD PTR [rsp+0x50],rcx
   140004028:	mov    QWORD PTR [rsp+0x60],rcx
   14000402d:	mov    QWORD PTR [rsp+0x30],rcx
   140004032:	mov    QWORD PTR [rsp+0x38],rcx
   140004037:	mov    QWORD PTR [rsp+0x58],rcx
   14000403c:	mov    QWORD PTR [rsp+0x40],rcx
   140004041:	cmp    DWORD PTR [rax],ecx
   140004043:	je     0x140004711
   140004049:	lea    rcx,[rax+0x8]
   14000404d:	call   QWORD PTR [rip+0xa1f5]        # 0x14000e248
   140004053:	mov    rdx,QWORD PTR [rsp+0x68]
   140004058:	cmp    DWORD PTR [rdx+0x30],0x7
   14000405c:	jge    0x140004068
   14000405e:	mov    ebx,0x8007139f
   140004063:	jmp    0x14000467e
   140004068:	test   rbx,rbx
   14000406b:	je     0x140004679
   140004071:	test   rdi,rdi
   140004074:	je     0x140004679
   14000407a:	mov    rdx,QWORD PTR [rdx+0x40]
   14000407e:	sub    rdx,rbx
   140004081:	movzx  eax,WORD PTR [rbx]
   140004084:	movzx  ecx,WORD PTR [rbx+rdx*1]
   140004088:	sub    eax,ecx
   14000408a:	jne    0x140004094
   14000408c:	add    rbx,0x2
   140004090:	test   ecx,ecx
   140004092:	jne    0x140004081
   140004094:	test   eax,eax
   140004096:	je     0x1400040a2
   140004098:	mov    ebx,0x80070005
   14000409d:	jmp    0x14000467e
   1400040a2:	lea    rcx,[rsp+0x50]
   1400040a7:	call   0x14000a34c
   1400040ac:	mov    ebx,eax
   1400040ae:	test   eax,eax
   1400040b0:	jne    0x14000467e
   1400040b6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400040bb:	lea    rax,[rsp+0x60]
   1400040c0:	mov    r9d,0x2001f
   1400040c6:	mov    QWORD PTR [rsp+0x20],rax
   1400040cb:	xor    r8d,r8d
   1400040ce:	lea    rdx,[rip+0xcc6b]        # 0x140010d40
   1400040d5:	call   QWORD PTR [rip+0x9f9d]        # 0x14000e078
   1400040db:	test   eax,eax
   1400040dd:	je     0x1400040fe
   1400040df:	mov    rcx,QWORD PTR [rsp+0x50]
   1400040e4:	lea    r8,[rsp+0x60]
   1400040e9:	lea    rdx,[rip+0xcc50]        # 0x140010d40
   1400040f0:	call   QWORD PTR [rip+0x9f42]        # 0x14000e038
   1400040f6:	test   eax,eax
   1400040f8:	jne    0x140004666
   1400040fe:	mov    rcx,QWORD PTR [rsp+0x60]
   140004103:	lea    rax,[rsp+0x30]
   140004108:	mov    r9d,0x2001f
   14000410e:	mov    QWORD PTR [rsp+0x20],rax
   140004113:	xor    r8d,r8d
   140004116:	mov    rdx,rdi
   140004119:	call   QWORD PTR [rip+0x9f59]        # 0x14000e078
   14000411f:	xor    ecx,ecx
   140004121:	test   eax,eax
   140004123:	je     0x140004142
   140004125:	mov    rcx,QWORD PTR [rsp+0x60]
   14000412a:	lea    r8,[rsp+0x30]
   14000412f:	mov    rdx,rdi
   140004132:	call   QWORD PTR [rip+0x9f00]        # 0x14000e038
   140004138:	xor    ecx,ecx
   14000413a:	test   eax,eax
   14000413c:	jne    0x140004666
   140004142:	or     rdi,0xffffffffffffffff
   140004146:	test   rsi,rsi
   140004149:	je     0x140004185
   14000414b:	mov    rax,rdi
   14000414e:	inc    rax
   140004151:	cmp    WORD PTR [rsi+rax*2],cx
   140004155:	jne    0x14000414e
   140004157:	mov    rcx,QWORD PTR [rsp+0x30]
   14000415c:	lea    eax,[rax*2+0x2]
   140004163:	mov    DWORD PTR [rsp+0x28],eax
   140004167:	mov    r9d,0x1
   14000416d:	xor    r8d,r8d
   140004170:	mov    QWORD PTR [rsp+0x20],rsi
   140004175:	xor    edx,edx
   140004177:	call   QWORD PTR [rip+0x9eb3]        # 0x14000e030
   14000417d:	test   eax,eax
   14000417f:	jne    0x140004666
   140004185:	mov    ecx,0x4
   14000418a:	lea    rax,[rbp+0x220]
   140004191:	mov    DWORD PTR [rsp+0x28],ecx
   140004195:	lea    rdx,[rip+0xcccc]        # 0x140010e68
   14000419c:	mov    r9d,ecx
   14000419f:	mov    QWORD PTR [rsp+0x20],rax
   1400041a4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400041a9:	xor    r8d,r8d
   1400041ac:	call   QWORD PTR [rip+0x9e7e]        # 0x14000e030
   1400041b2:	test   eax,eax
   1400041b4:	jne    0x140004666
   1400041ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400041bf:	lea    rax,[rip+0xcda2]        # 0x140010f68
   1400041c6:	mov    DWORD PTR [rsp+0x28],0xc
   1400041ce:	lea    rdx,[rip+0xcdeb]        # 0x140010fc0
   1400041d5:	mov    r9d,0x1
   1400041db:	mov    QWORD PTR [rsp+0x20],rax
   1400041e0:	xor    r8d,r8d
   1400041e3:	call   QWORD PTR [rip+0x9e47]        # 0x14000e030
   1400041e9:	test   eax,eax
   1400041eb:	jne    0x140004666
   1400041f1:	test   r14,r14
   1400041f4:	je     0x140004227
   1400041f6:	mov    rcx,QWORD PTR [rsp+0x30]
   1400041fb:	lea    rdx,[rip+0xcd76]        # 0x140010f78
   140004202:	mov    eax,0x4
   140004207:	xor    r8d,r8d
   14000420a:	mov    DWORD PTR [rsp+0x28],eax
   14000420e:	mov    r9d,eax
   140004211:	mov    QWORD PTR [rsp+0x20],r14
   140004216:	call   QWORD PTR [rip+0x9e14]        # 0x14000e030
   14000421c:	xor    r14d,r14d
   14000421f:	test   eax,eax
   140004221:	jne    0x140004669
   140004227:	mov    rcx,QWORD PTR [rsp+0x30]
   14000422c:	lea    rax,[rsp+0x38]
   140004231:	mov    r9d,0x2001f
   140004237:	mov    QWORD PTR [rsp+0x20],rax
   14000423c:	xor    r8d,r8d
   14000423f:	lea    rdx,[rip+0xccca]        # 0x140010f10
   140004246:	call   QWORD PTR [rip+0x9e2c]        # 0x14000e078
   14000424c:	test   eax,eax
   14000424e:	je     0x14000426f
   140004250:	mov    rcx,QWORD PTR [rsp+0x30]
   140004255:	lea    r8,[rsp+0x38]
   14000425a:	lea    rdx,[rip+0xccaf]        # 0x140010f10
   140004261:	call   QWORD PTR [rip+0x9dd1]        # 0x14000e038
   140004267:	test   eax,eax
   140004269:	jne    0x140004669
   14000426f:	test   r15,r15
   140004272:	je     0x1400042b4
   140004274:	mov    rax,rdi
   140004277:	inc    rax
   14000427a:	cmp    WORD PTR [r15+rax*2],r14w
   14000427f:	jne    0x140004277
   140004281:	mov    rcx,QWORD PTR [rsp+0x38]
   140004286:	lea    eax,[rax*2+0x2]
   14000428d:	mov    DWORD PTR [rsp+0x28],eax
   140004291:	lea    rdx,[rip+0xcc58]        # 0x140010ef0
   140004298:	mov    r9d,0x1
   14000429e:	mov    QWORD PTR [rsp+0x20],r15
   1400042a3:	xor    r8d,r8d
   1400042a6:	call   QWORD PTR [rip+0x9d84]        # 0x14000e030
   1400042ac:	test   eax,eax
   1400042ae:	jne    0x140004669
   1400042b4:	mov    esi,DWORD PTR [rbp+0x238]
   1400042ba:	test   esi,esi
   1400042bc:	jne    0x140004494
   1400042c2:	mov    rcx,QWORD PTR [rsp+0x38]
   1400042c7:	lea    rax,[rsp+0x48]
   1400042cc:	mov    QWORD PTR [rsp+0x28],rax
   1400042d1:	lea    r9,[rsp+0x50]
   1400042d6:	lea    rax,[rbp-0x60]
   1400042da:	mov    WORD PTR [rbp+0x1a6],r14w
   1400042e2:	mov    r15d,0x103
   1400042e8:	mov    QWORD PTR [rsp+0x20],rax
   1400042ed:	xor    r8d,r8d
   1400042f0:	mov    DWORD PTR [rsp+0x48],r15d
   1400042f5:	lea    rdx,[rip+0xcc3c]        # 0x140010f38
   1400042fc:	call   QWORD PTR [rip+0x9d4e]        # 0x14000e050
   140004302:	test   eax,eax
   140004304:	jne    0x14000433d
   140004306:	test   r13,r13
   140004309:	je     0x14000431c
   14000430b:	lea    rdx,[rbp-0x60]
   14000430f:	mov    rcx,r13
   140004312:	call   QWORD PTR [rip+0x9f10]        # 0x14000e228
   140004318:	test   eax,eax
   14000431a:	je     0x14000433d
   14000431c:	lea    rcx,[rbp-0x60]
   140004320:	call   QWORD PTR [rip+0xa042]        # 0x14000e368
   140004326:	test   r13,r13
   140004329:	jne    0x14000433d
   14000432b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004330:	lea    rdx,[rip+0xcc01]        # 0x140010f38
   140004337:	call   QWORD PTR [rip+0x9ccb]        # 0x14000e008
   14000433d:	mov    rcx,QWORD PTR [rsp+0x38]
   140004342:	lea    rax,[rsp+0x48]
   140004347:	mov    QWORD PTR [rsp+0x28],rax
   14000434c:	lea    r9,[rsp+0x50]
   140004351:	mov    DWORD PTR [rsp+0x48],r15d
   140004356:	lea    rax,[rbp-0x60]
   14000435a:	lea    r15,[rip+0xcaff]        # 0x140010e60
   140004361:	mov    QWORD PTR [rsp+0x20],rax
   140004366:	xor    r8d,r8d
   140004369:	mov    WORD PTR [rbp+0x1a6],r14w
   140004371:	mov    rdx,r15
   140004374:	call   QWORD PTR [rip+0x9cd6]        # 0x14000e050
   14000437a:	test   eax,eax
   14000437c:	jne    0x1400043b1
   14000437e:	test   r12,r12
   140004381:	je     0x140004394
   140004383:	lea    rdx,[rbp-0x60]
   140004387:	mov    rcx,r12
   14000438a:	call   QWORD PTR [rip+0x9e98]        # 0x14000e228
   140004390:	test   eax,eax
   140004392:	je     0x1400043b1
   140004394:	lea    rcx,[rbp-0x60]
   140004398:	call   QWORD PTR [rip+0x9fca]        # 0x14000e368
   14000439e:	test   r12,r12
   1400043a1:	jne    0x1400043b6
   1400043a3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400043a8:	mov    rdx,r15
   1400043ab:	call   QWORD PTR [rip+0x9c57]        # 0x14000e008
   1400043b1:	test   r12,r12
   1400043b4:	je     0x1400043f2
   1400043b6:	mov    rax,rdi
   1400043b9:	inc    rax
   1400043bc:	cmp    WORD PTR [r12+rax*2],r14w
   1400043c1:	jne    0x1400043b9
   1400043c3:	mov    rcx,QWORD PTR [rsp+0x38]
   1400043c8:	lea    eax,[rax*2+0x2]
   1400043cf:	mov    DWORD PTR [rsp+0x28],eax
   1400043d3:	mov    r9d,0x1
   1400043d9:	xor    r8d,r8d
   1400043dc:	mov    QWORD PTR [rsp+0x20],r12
   1400043e1:	mov    rdx,r15
   1400043e4:	call   QWORD PTR [rip+0x9c46]        # 0x14000e030
   1400043ea:	test   eax,eax
   1400043ec:	jne    0x140004669
   1400043f2:	test   r13,r13
   1400043f5:	je     0x140004438
   1400043f7:	mov    rax,rdi
   1400043fa:	inc    rax
   1400043fd:	cmp    WORD PTR [r13+rax*2+0x0],r14w
   140004403:	jne    0x1400043fa
   140004405:	mov    rcx,QWORD PTR [rsp+0x38]
   14000440a:	lea    eax,[rax*2+0x2]
   140004411:	mov    DWORD PTR [rsp+0x28],eax
   140004415:	lea    rdx,[rip+0xcb1c]        # 0x140010f38
   14000441c:	mov    r9d,0x1
   140004422:	mov    QWORD PTR [rsp+0x20],r13
   140004427:	xor    r8d,r8d
   14000442a:	call   QWORD PTR [rip+0x9c00]        # 0x14000e030
   140004430:	test   eax,eax
   140004432:	jne    0x140004669
   140004438:	mov    rcx,QWORD PTR [rsp+0x30]
   14000443d:	lea    rax,[rsp+0x40]
   140004442:	mov    r9d,0x2001f
   140004448:	mov    QWORD PTR [rsp+0x20],rax
   14000444d:	xor    r8d,r8d
   140004450:	lea    rdx,[rip+0xca71]        # 0x140010ec8
   140004457:	call   QWORD PTR [rip+0x9c1b]        # 0x14000e078
   14000445d:	test   eax,eax
   14000445f:	je     0x140004480
   140004461:	mov    rcx,QWORD PTR [rsp+0x30]
   140004466:	lea    r8,[rsp+0x40]
   14000446b:	lea    rdx,[rip+0xca56]        # 0x140010ec8
   140004472:	call   QWORD PTR [rip+0x9bc0]        # 0x14000e038
   140004478:	test   eax,eax
   14000447a:	jne    0x140004669
   140004480:	mov    rcx,QWORD PTR [rsp+0x30]
   140004485:	lea    rdx,[rip+0xcab4]        # 0x140010f40
   14000448c:	call   QWORD PTR [rip+0x9bc6]        # 0x14000e058
   140004492:	jmp    0x140004510
   140004494:	mov    rcx,QWORD PTR [rsp+0x30]
   140004499:	lea    rax,[rsp+0x40]
   14000449e:	mov    r9d,0x2001f
   1400044a4:	mov    QWORD PTR [rsp+0x20],rax
   1400044a9:	xor    r8d,r8d
   1400044ac:	lea    rdx,[rip+0xca8d]        # 0x140010f40
   1400044b3:	call   QWORD PTR [rip+0x9bbf]        # 0x14000e078
   1400044b9:	test   eax,eax
   1400044bb:	je     0x1400044dc
   1400044bd:	mov    rcx,QWORD PTR [rsp+0x30]
   1400044c2:	lea    r8,[rsp+0x40]
   1400044c7:	lea    rdx,[rip+0xca72]        # 0x140010f40
   1400044ce:	call   QWORD PTR [rip+0x9b64]        # 0x14000e038
   1400044d4:	test   eax,eax
   1400044d6:	jne    0x140004669
   1400044dc:	mov    rcx,QWORD PTR [rsp+0x40]
   1400044e1:	lea    rax,[rbp+0x250]
   1400044e8:	mov    r9d,0x4
   1400044ee:	lea    rdx,[rip+0xca93]        # 0x140010f88
   1400044f5:	mov    DWORD PTR [rsp+0x28],r9d
   1400044fa:	xor    r8d,r8d
   1400044fd:	mov    QWORD PTR [rsp+0x20],rax
   140004502:	call   QWORD PTR [rip+0x9b28]        # 0x14000e030
   140004508:	test   eax,eax
   14000450a:	jne    0x140004669
   140004510:	mov    rcx,QWORD PTR [rsp+0x78]
   140004515:	mov    rax,rdi
   140004518:	inc    rax
   14000451b:	cmp    WORD PTR [rcx+rax*2],r14w
   140004520:	jne    0x140004518
   140004522:	lea    eax,[rax*2+0x2]
   140004529:	mov    r15d,0x1
   14000452f:	mov    DWORD PTR [rsp+0x28],eax
   140004533:	mov    r9d,r15d
   140004536:	mov    QWORD PTR [rsp+0x20],rcx
   14000453b:	xor    r8d,r8d
   14000453e:	mov    rcx,QWORD PTR [rsp+0x40]
   140004543:	xor    edx,edx
   140004545:	call   QWORD PTR [rip+0x9ae5]        # 0x14000e030
   14000454b:	test   eax,eax
   14000454d:	jne    0x140004669
   140004553:	test   esi,esi
   140004555:	jne    0x140004681
   14000455b:	mov    rcx,QWORD PTR [rbp-0x68]
   14000455f:	test   rcx,rcx
   140004562:	je     0x1400045a1
   140004564:	mov    rax,rdi
   140004567:	inc    rax
   14000456a:	cmp    WORD PTR [rcx+rax*2],r14w
   14000456f:	jne    0x140004567
   140004571:	lea    eax,[rax*2+0x2]
   140004578:	mov    r9d,r15d
   14000457b:	mov    DWORD PTR [rsp+0x28],eax
   14000457f:	lea    rdx,[rip+0xca1a]        # 0x140010fa0
   140004586:	mov    QWORD PTR [rsp+0x20],rcx
   14000458b:	xor    r8d,r8d
   14000458e:	mov    rcx,QWORD PTR [rsp+0x40]
   140004593:	call   QWORD PTR [rip+0x9a97]        # 0x14000e030
   140004599:	test   eax,eax
   14000459b:	jne    0x140004669
   1400045a1:	mov    rcx,QWORD PTR [rbp-0x78]
   1400045a5:	test   rcx,rcx
   1400045a8:	je     0x1400045e4
   1400045aa:	inc    rdi
   1400045ad:	cmp    WORD PTR [rcx+rdi*2],r14w
   1400045b2:	jne    0x1400045aa
   1400045b4:	lea    eax,[rdi*2+0x2]
   1400045bb:	mov    r9d,r15d
   1400045be:	mov    DWORD PTR [rsp+0x28],eax
   1400045c2:	lea    rdx,[rip+0xc887]        # 0x140010e50
   1400045c9:	mov    QWORD PTR [rsp+0x20],rcx
   1400045ce:	xor    r8d,r8d
   1400045d1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400045d6:	call   QWORD PTR [rip+0x9a54]        # 0x14000e030
   1400045dc:	test   eax,eax
   1400045de:	jne    0x140004669
   1400045e4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400045e9:	lea    rax,[rsp+0x58]
   1400045ee:	mov    r9d,0x2001f
   1400045f4:	mov    QWORD PTR [rsp+0x20],rax
   1400045f9:	xor    r8d,r8d
   1400045fc:	lea    rdx,[rip+0xc8ad]        # 0x140010eb0
   140004603:	call   QWORD PTR [rip+0x9a6f]        # 0x14000e078
   140004609:	test   eax,eax
   14000460b:	je     0x140004628
   14000460d:	mov    rcx,QWORD PTR [rsp+0x30]
   140004612:	lea    r8,[rsp+0x58]
   140004617:	lea    rdx,[rip+0xc892]        # 0x140010eb0
   14000461e:	call   QWORD PTR [rip+0x9a14]        # 0x14000e038
   140004624:	test   eax,eax
   140004626:	jne    0x140004669
   140004628:	mov    rax,QWORD PTR [rsp+0x70]
   14000462d:	mov    r9,QWORD PTR [rbp-0x80]
   140004631:	mov    r8d,DWORD PTR [rbp+0x270]
   140004638:	mov    rdx,QWORD PTR [rsp+0x58]
   14000463d:	mov    QWORD PTR [rsp+0x20],rax
   140004642:	call   0x1400020d8
   140004647:	mov    ebx,eax
   140004649:	test   eax,eax
   14000464b:	js     0x140004681
   14000464d:	mov    r9,QWORD PTR [rbp-0x70]
   140004651:	mov    r8d,DWORD PTR [rbp+0x288]
   140004658:	mov    rdx,QWORD PTR [rsp+0x58]
   14000465d:	call   0x140001ff4
   140004662:	mov    ebx,eax
   140004664:	jmp    0x140004681
   140004666:	xor    r14d,r14d
   140004669:	movzx  ebx,ax
   14000466c:	or     ebx,0x80070000
   140004672:	test   eax,eax
   140004674:	cmovle ebx,eax
   140004677:	jmp    0x140004681
   140004679:	mov    ebx,0x80070057
   14000467e:	xor    r14d,r14d
   140004681:	mov    rcx,QWORD PTR [rsp+0x58]
   140004686:	test   rcx,rcx
   140004689:	je     0x140004691
   14000468b:	call   QWORD PTR [rip+0x9997]        # 0x14000e028
   140004691:	mov    rcx,QWORD PTR [rsp+0x38]
   140004696:	test   rcx,rcx
   140004699:	je     0x1400046a1
   14000469b:	call   QWORD PTR [rip+0x9987]        # 0x14000e028
   1400046a1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400046a6:	test   rcx,rcx
   1400046a9:	je     0x1400046b1
   1400046ab:	call   QWORD PTR [rip+0x9977]        # 0x14000e028
   1400046b1:	mov    rcx,QWORD PTR [rsp+0x30]
   1400046b6:	test   rcx,rcx
   1400046b9:	je     0x1400046c1
   1400046bb:	call   QWORD PTR [rip+0x9967]        # 0x14000e028
   1400046c1:	mov    rcx,QWORD PTR [rsp+0x60]
   1400046c6:	test   rcx,rcx
   1400046c9:	je     0x1400046d1
   1400046cb:	call   QWORD PTR [rip+0x9957]        # 0x14000e028
   1400046d1:	mov    rax,QWORD PTR [rsp+0x68]
   1400046d6:	cmp    DWORD PTR [rax],r14d
   1400046d9:	je     0x1400046e5
   1400046db:	lea    rcx,[rax+0x8]
   1400046df:	call   QWORD PTR [rip+0x9cdb]        # 0x14000e3c0
   1400046e5:	mov    eax,ebx
   1400046e7:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400046ee:	xor    rcx,rsp
   1400046f1:	call   0x14000cc40
   1400046f6:	mov    rbx,QWORD PTR [rsp+0x308]
   1400046fe:	add    rsp,0x2c0
   140004705:	pop    r15
   140004707:	pop    r14
   140004709:	pop    r13
   14000470b:	pop    r12
   14000470d:	pop    rdi
   14000470e:	pop    rsi
   14000470f:	pop    rbp
   140004710:	ret    
   140004711:	mov    ebx,0x8007000e
   140004716:	xor    r14d,r14d
   140004719:	jmp    0x1400046d6
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	int3   
   140004721:	int3   
   140004722:	int3   
   140004723:	int3   
   140004724:	mov    QWORD PTR [rsp+0x10],rbx
   140004729:	push   rbp
   14000472a:	push   rsi
   14000472b:	push   rdi
   14000472c:	push   r12
   14000472e:	push   r13
   140004730:	push   r14
   140004732:	push   r15
   140004734:	lea    rbp,[rsp-0x90]
   14000473c:	sub    rsp,0x190
   140004743:	mov    rax,QWORD PTR [rip+0xf8be]        # 0x140014008
   14000474a:	xor    rax,rsp
   14000474d:	mov    QWORD PTR [rbp+0x80],rax
   140004754:	mov    rax,QWORD PTR [rbp+0xf8]
   14000475b:	xor    edi,edi
   14000475d:	mov    r15,QWORD PTR [rbp+0xf0]
   140004764:	mov    r13,r8
   140004767:	mov    QWORD PTR [rsp+0x60],rax
   14000476c:	mov    rbx,rdx
   14000476f:	mov    eax,DWORD PTR [rbp+0x100]
   140004775:	mov    rsi,rcx
   140004778:	xor    edx,edx
   14000477a:	mov    DWORD PTR [rsp+0x48],eax
   14000477e:	mov    r8d,0x103
   140004784:	mov    QWORD PTR [rsp+0x58],r9
   140004789:	lea    rcx,[rsp+0x71]
   14000478e:	mov    QWORD PTR [rsp+0x50],rdi
   140004793:	mov    QWORD PTR [rsp+0x40],rdi
   140004798:	mov    QWORD PTR [rsp+0x38],rdi
   14000479d:	mov    DWORD PTR [rsp+0x4c],edi
   1400047a1:	mov    BYTE PTR [rsp+0x70],dil
   1400047a6:	call   0x14000d326
   1400047ab:	or     r14,0xffffffffffffffff
   1400047af:	mov    DWORD PTR [rsp+0x30],0x104
   1400047b7:	mov    r12,r14
   1400047ba:	inc    r12
   1400047bd:	cmp    BYTE PTR [r15+r12*1],dil
   1400047c1:	jne    0x1400047ba
   1400047c3:	cmp    DWORD PTR [rsi],0x0
   1400047c6:	mov    edi,0x1
   1400047cb:	je     0x140004941
   1400047d1:	lea    rcx,[rsi+0x8]
   1400047d5:	call   QWORD PTR [rip+0x9a6d]        # 0x14000e248
   1400047db:	cmp    DWORD PTR [rsi+0x30],0x7
   1400047df:	jge    0x1400047eb
   1400047e1:	mov    ebx,0x8007139f
   1400047e6:	jmp    0x14000491d
   1400047eb:	test   rbx,rbx
   1400047ee:	je     0x140004918
   1400047f4:	test   r13,r13
   1400047f7:	je     0x140004918
   1400047fd:	mov    rdx,QWORD PTR [rsi+0x40]
   140004801:	sub    rdx,rbx
   140004804:	movzx  eax,WORD PTR [rbx]
   140004807:	movzx  ecx,WORD PTR [rbx+rdx*1]
   14000480b:	sub    eax,ecx
   14000480d:	jne    0x140004817
   14000480f:	add    rbx,0x2
   140004813:	test   ecx,ecx
   140004815:	jne    0x140004804
   140004817:	test   eax,eax
   140004819:	je     0x140004825
   14000481b:	mov    ebx,0x80070005
   140004820:	jmp    0x14000491d
   140004825:	lea    rcx,[rsp+0x50]
   14000482a:	call   0x14000a34c
   14000482f:	mov    ebx,eax
   140004831:	test   eax,eax
   140004833:	jne    0x14000491d
   140004839:	mov    rcx,QWORD PTR [rsp+0x50]
   14000483e:	lea    rax,[rsp+0x40]
   140004843:	mov    r9d,0x2001f
   140004849:	mov    QWORD PTR [rsp+0x20],rax
   14000484e:	xor    r8d,r8d
   140004851:	lea    rdx,[rip+0xc568]        # 0x140010dc0
   140004858:	call   QWORD PTR [rip+0x981a]        # 0x14000e078
   14000485e:	test   eax,eax
   140004860:	je     0x140004881
   140004862:	mov    rcx,QWORD PTR [rsp+0x50]
   140004867:	lea    r8,[rsp+0x40]
   14000486c:	lea    rdx,[rip+0xc54d]        # 0x140010dc0
   140004873:	call   QWORD PTR [rip+0x97bf]        # 0x14000e038
   140004879:	test   eax,eax
   14000487b:	jne    0x140004a50
   140004881:	mov    rcx,QWORD PTR [rsp+0x40]
   140004886:	lea    rax,[rsp+0x38]
   14000488b:	mov    r9d,0x2001f
   140004891:	mov    QWORD PTR [rsp+0x20],rax
   140004896:	xor    r8d,r8d
   140004899:	mov    rdx,r13
   14000489c:	call   QWORD PTR [rip+0x97c6]        # 0x14000e068
   1400048a2:	test   eax,eax
   1400048a4:	je     0x1400048c1
   1400048a6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400048ab:	lea    r8,[rsp+0x38]
   1400048b0:	mov    rdx,r13
   1400048b3:	call   QWORD PTR [rip+0x97a7]        # 0x14000e060
   1400048b9:	test   eax,eax
   1400048bb:	jne    0x140004a50
   1400048c1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400048c6:	lea    rax,[rsp+0x30]
   1400048cb:	mov    QWORD PTR [rsp+0x28],rax
   1400048d0:	lea    r9,[rsp+0x4c]
   1400048d5:	lea    rax,[rsp+0x70]
   1400048da:	xor    r8d,r8d
   1400048dd:	lea    rdx,[rip+0xc620]        # 0x140010f04
   1400048e4:	mov    QWORD PTR [rsp+0x20],rax
   1400048e9:	call   QWORD PTR [rip+0x9759]        # 0x14000e048
   1400048ef:	test   eax,eax
   1400048f1:	jne    0x140004988
   1400048f7:	mov    rdx,r15
   1400048fa:	lea    rcx,[rsp+0x70]
   1400048ff:	call   QWORD PTR [rip+0x9aa3]        # 0x14000e3a8
   140004905:	test   eax,eax
   140004907:	je     0x1400049cd
   14000490d:	test   BYTE PTR [rsp+0x48],dil
   140004912:	je     0x1400049cd
   140004918:	mov    ebx,0x80070057
   14000491d:	mov    rcx,QWORD PTR [rsp+0x38]
   140004922:	test   rcx,rcx
   140004925:	je     0x14000492d
   140004927:	call   QWORD PTR [rip+0x96fb]        # 0x14000e028
   14000492d:	mov    rcx,QWORD PTR [rsp+0x40]
   140004932:	test   rcx,rcx
   140004935:	je     0x14000493d
   140004937:	call   QWORD PTR [rip+0x96eb]        # 0x14000e028
   14000493d:	test   edi,edi
   14000493f:	je     0x14000494d
   140004941:	mov    rdx,QWORD PTR [rsp+0x58]
   140004946:	call   0x14000239c
   14000494b:	mov    ebx,eax
   14000494d:	cmp    DWORD PTR [rsi],0x0
   140004950:	je     0x14000495c
   140004952:	lea    rcx,[rsi+0x8]
   140004956:	call   QWORD PTR [rip+0x9a64]        # 0x14000e3c0
   14000495c:	mov    eax,ebx
   14000495e:	mov    rcx,QWORD PTR [rbp+0x80]
   140004965:	xor    rcx,rsp
   140004968:	call   0x14000cc40
   14000496d:	mov    rbx,QWORD PTR [rsp+0x1d8]
   140004975:	add    rsp,0x190
   14000497c:	pop    r15
   14000497e:	pop    r14
   140004980:	pop    r13
   140004982:	pop    r12
   140004984:	pop    rdi
   140004985:	pop    rsi
   140004986:	pop    rbp
   140004987:	ret    
   140004988:	mov    edx,DWORD PTR [rsp+0x48]
   14000498c:	lea    rax,[rip+0xc49d]        # 0x140010e30
   140004993:	and    edx,edi
   140004995:	mov    ecx,0xe
   14000499a:	mov    r9d,edi
   14000499d:	cmovne ecx,r12d
   1400049a1:	test   edx,edx
   1400049a3:	mov    DWORD PTR [rsp+0x28],ecx
   1400049a7:	lea    rdx,[rip+0xc556]        # 0x140010f04
   1400049ae:	mov    rcx,QWORD PTR [rsp+0x38]
   1400049b3:	cmovne rax,r15
   1400049b7:	xor    r8d,r8d
   1400049ba:	mov    QWORD PTR [rsp+0x20],rax
   1400049bf:	call   QWORD PTR [rip+0x967b]        # 0x14000e040
   1400049c5:	test   eax,eax
   1400049c7:	jne    0x140004a50
   1400049cd:	mov    rcx,QWORD PTR [rsp+0x38]
   1400049d2:	lea    rax,[rsp+0x30]
   1400049d7:	mov    QWORD PTR [rsp+0x28],rax
   1400049dc:	lea    r9,[rsp+0x4c]
   1400049e1:	lea    rax,[rsp+0x70]
   1400049e6:	mov    DWORD PTR [rsp+0x30],0x104
   1400049ee:	xor    r8d,r8d
   1400049f1:	mov    QWORD PTR [rsp+0x20],rax
   1400049f6:	mov    rdx,r15
   1400049f9:	call   QWORD PTR [rip+0x9649]        # 0x14000e048
   1400049ff:	test   eax,eax
   140004a01:	jne    0x140004a0a
   140004a03:	xor    edi,edi
   140004a05:	jmp    0x14000491d
   140004a0a:	mov    rcx,QWORD PTR [rsp+0x60]
   140004a0f:	lea    rax,[rip+0xc0aa]        # 0x140010ac0
   140004a16:	test   rcx,rcx
   140004a19:	cmovne rax,rcx
   140004a1d:	inc    r14
   140004a20:	cmp    BYTE PTR [rax+r14*1],0x0
   140004a25:	jne    0x140004a1d
   140004a27:	mov    rcx,QWORD PTR [rsp+0x38]
   140004a2c:	add    r14d,edi
   140004a2f:	mov    DWORD PTR [rsp+0x28],r14d
   140004a34:	mov    r9d,edi
   140004a37:	xor    r8d,r8d
   140004a3a:	mov    QWORD PTR [rsp+0x20],rax
   140004a3f:	mov    rdx,r15
   140004a42:	call   QWORD PTR [rip+0x95f8]        # 0x14000e040
   140004a48:	test   eax,eax
   140004a4a:	je     0x14000491d
   140004a50:	movzx  ebx,ax
   140004a53:	or     ebx,0x80070000
   140004a59:	test   eax,eax
   140004a5b:	cmovle ebx,eax
   140004a5e:	jmp    0x14000491d
   140004a63:	int3   
   140004a64:	int3   
   140004a65:	int3   
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	mov    QWORD PTR [rsp+0x10],rbx
   140004a71:	mov    QWORD PTR [rsp+0x18],rbp
   140004a76:	push   rsi
   140004a77:	push   rdi
   140004a78:	push   r14
   140004a7a:	sub    rsp,0x20
   140004a7e:	cmp    DWORD PTR [rcx],0x0
   140004a81:	mov    rsi,r9
   140004a84:	mov    r14,r8
   140004a87:	mov    rbx,rdx
   140004a8a:	mov    rdi,rcx
   140004a8d:	je     0x140004bda
   140004a93:	add    rcx,0x8
   140004a97:	call   QWORD PTR [rip+0x97ab]        # 0x14000e248
   140004a9d:	cmp    DWORD PTR [rdi+0x30],0x2
   140004aa1:	jge    0x140004aad
   140004aa3:	mov    ebx,0x8007139f
   140004aa8:	jmp    0x140004bdf
   140004aad:	test   rbx,rbx
   140004ab0:	je     0x140004bd3
   140004ab6:	test   r14,r14
   140004ab9:	je     0x140004bd3
   140004abf:	test   rsi,rsi
   140004ac2:	je     0x140004bd3
   140004ac8:	cmp    QWORD PTR [rsi+0x330],0x0
   140004ad0:	jne    0x140004bd3
   140004ad6:	mov    rdx,QWORD PTR [rdi+0x40]
   140004ada:	sub    rdx,rbx
   140004add:	movzx  eax,WORD PTR [rbx]
   140004ae0:	movzx  ecx,WORD PTR [rbx+rdx*1]
   140004ae4:	sub    eax,ecx
   140004ae6:	jne    0x140004af0
   140004ae8:	add    rbx,0x2
   140004aec:	test   ecx,ecx
   140004aee:	jne    0x140004add
   140004af0:	test   eax,eax
   140004af2:	je     0x140004afe
   140004af4:	mov    ebx,0x80070005
   140004af9:	jmp    0x140004bdf
   140004afe:	and    QWORD PTR [rsp+0x40],0x0
   140004b04:	lea    r8,[rsp+0x40]
   140004b09:	mov    rdx,r14
   140004b0c:	call   0x1400060e4
   140004b11:	mov    ebx,eax
   140004b13:	test   eax,eax
   140004b15:	js     0x140004b31
   140004b17:	mov    rdx,QWORD PTR [rsp+0x40]
   140004b1c:	mov    rcx,rdi
   140004b1f:	call   0x140001e10
   140004b24:	mov    rcx,QWORD PTR [rsp+0x40]
   140004b29:	mov    ebx,eax
   140004b2b:	call   QWORD PTR [rip+0x9b17]        # 0x14000e648
   140004b31:	test   ebx,ebx
   140004b33:	js     0x140004bdf
   140004b39:	lea    rbp,[rsi+0x20]
   140004b3d:	mov    rcx,rbp
   140004b40:	call   0x140007690
   140004b45:	mov    ebx,eax
   140004b47:	test   eax,eax
   140004b49:	js     0x140004bdf
   140004b4f:	and    QWORD PTR [rsp+0x40],0x0
   140004b55:	lea    r8,[rsp+0x40]
   140004b5a:	mov    rdx,rbp
   140004b5d:	call   0x1400060e4
   140004b62:	mov    ebx,eax
   140004b64:	test   eax,eax
   140004b66:	js     0x140004bdf
   140004b68:	cmp    DWORD PTR [rdi+0x8c],0x0
   140004b6f:	jne    0x140004b83
   140004b71:	mov    rcx,QWORD PTR [rsp+0x40]
   140004b76:	call   0x1400087c4
   140004b7b:	test   eax,eax
   140004b7d:	je     0x140004af4
   140004b83:	mov    rcx,QWORD PTR [rsp+0x40]
   140004b88:	call   QWORD PTR [rip+0x9aba]        # 0x14000e648
   140004b8e:	mov    rdx,r14
   140004b91:	mov    rcx,rsi
   140004b94:	call   QWORD PTR [rip+0x9b1e]        # 0x14000e6b8
   140004b9a:	mov    ebx,eax
   140004b9c:	test   eax,eax
   140004b9e:	js     0x140004bdf
   140004ba0:	mov    rdx,QWORD PTR [rsi+0x10]
   140004ba4:	lea    r14,[rdi+0x80]
   140004bab:	mov    r8,r14
   140004bae:	mov    rcx,rbp
   140004bb1:	call   0x1400064b4
   140004bb6:	mov    ebx,eax
   140004bb8:	test   eax,eax
   140004bba:	js     0x140004bdf
   140004bbc:	mov    rcx,QWORD PTR [r14]
   140004bbf:	call   0x140006d6c
   140004bc4:	mov    ebx,eax
   140004bc6:	test   eax,eax
   140004bc8:	js     0x140004bdf
   140004bca:	mov    DWORD PTR [rdi+0x30],0x3
   140004bd1:	jmp    0x140004bdf
   140004bd3:	mov    ebx,0x80070057
   140004bd8:	jmp    0x140004bdf
   140004bda:	mov    ebx,0x8007000e
   140004bdf:	cmp    DWORD PTR [rdi],0x0
   140004be2:	je     0x140004bee
   140004be4:	lea    rcx,[rdi+0x8]
   140004be8:	call   QWORD PTR [rip+0x97d2]        # 0x14000e3c0
   140004bee:	mov    rbp,QWORD PTR [rsp+0x50]
   140004bf3:	mov    eax,ebx
   140004bf5:	mov    rbx,QWORD PTR [rsp+0x48]
   140004bfa:	add    rsp,0x20
   140004bfe:	pop    r14
   140004c00:	pop    rdi
   140004c01:	pop    rsi
   140004c02:	ret    
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	mov    QWORD PTR [rsp+0x10],rbx
   140004c11:	mov    QWORD PTR [rsp+0x18],rbp
   140004c16:	mov    QWORD PTR [rsp+0x20],rsi
   140004c1b:	push   rdi
   140004c1c:	sub    rsp,0x20
   140004c20:	cmp    DWORD PTR [rcx],0x0
   140004c23:	mov    rsi,r9
   140004c26:	mov    rbp,r8
   140004c29:	mov    rbx,rdx
   140004c2c:	mov    rdi,rcx
   140004c2f:	je     0x140004d08
   140004c35:	add    rcx,0x8
   140004c39:	call   QWORD PTR [rip+0x9609]        # 0x14000e248
   140004c3f:	cmp    DWORD PTR [rdi+0x30],0x3
   140004c43:	jge    0x140004c4f
   140004c45:	mov    ebx,0x8007139f
   140004c4a:	jmp    0x140004d0d
   140004c4f:	test   rbx,rbx
   140004c52:	je     0x140004d01
   140004c58:	test   rbp,rbp
   140004c5b:	je     0x140004d01
   140004c61:	test   rsi,rsi
   140004c64:	je     0x140004d01
   140004c6a:	cmp    QWORD PTR [rsi+0x330],0x0
   140004c72:	je     0x140004d01
   140004c78:	mov    rdx,QWORD PTR [rdi+0x40]
   140004c7c:	sub    rdx,rbx
   140004c7f:	movzx  eax,WORD PTR [rbx]
   140004c82:	movzx  ecx,WORD PTR [rbx+rdx*1]
   140004c86:	sub    eax,ecx
   140004c88:	jne    0x140004c92
   140004c8a:	add    rbx,0x2
   140004c8e:	test   ecx,ecx
   140004c90:	jne    0x140004c7f
   140004c92:	test   eax,eax
   140004c94:	je     0x140004c9d
   140004c96:	mov    ebx,0x80070005
   140004c9b:	jmp    0x140004d0d
   140004c9d:	and    QWORD PTR [rsp+0x30],0x0
   140004ca3:	lea    r8,[rsp+0x30]
   140004ca8:	mov    rdx,rbp
   140004cab:	call   0x1400060e4
   140004cb0:	mov    ebx,eax
   140004cb2:	test   eax,eax
   140004cb4:	js     0x140004cd0
   140004cb6:	mov    rdx,QWORD PTR [rsp+0x30]
   140004cbb:	mov    rcx,rdi
   140004cbe:	call   0x140001e10
   140004cc3:	mov    rcx,QWORD PTR [rsp+0x30]
   140004cc8:	mov    ebx,eax
   140004cca:	call   QWORD PTR [rip+0x9978]        # 0x14000e648
   140004cd0:	test   ebx,ebx
   140004cd2:	js     0x140004d0d
   140004cd4:	mov    rdx,rbp
   140004cd7:	mov    rcx,rsi
   140004cda:	call   QWORD PTR [rip+0x99d8]        # 0x14000e6b8
   140004ce0:	mov    ebx,eax
   140004ce2:	test   eax,eax
   140004ce4:	js     0x140004d0d
   140004ce6:	mov    rcx,QWORD PTR [rdi+0x80]
   140004ced:	call   0x140006d6c
   140004cf2:	mov    ebx,eax
   140004cf4:	test   eax,eax
   140004cf6:	js     0x140004d0d
   140004cf8:	mov    DWORD PTR [rdi+0x30],0x4
   140004cff:	jmp    0x140004d0d
   140004d01:	mov    ebx,0x80070057
   140004d06:	jmp    0x140004d0d
   140004d08:	mov    ebx,0x8007000e
   140004d0d:	cmp    DWORD PTR [rdi],0x0
   140004d10:	je     0x140004d1c
   140004d12:	lea    rcx,[rdi+0x8]
   140004d16:	call   QWORD PTR [rip+0x96a4]        # 0x14000e3c0
   140004d1c:	mov    rbp,QWORD PTR [rsp+0x40]
   140004d21:	mov    eax,ebx
   140004d23:	mov    rbx,QWORD PTR [rsp+0x38]
   140004d28:	mov    rsi,QWORD PTR [rsp+0x48]
   140004d2d:	add    rsp,0x20
   140004d31:	pop    rdi
   140004d32:	ret    
   140004d33:	int3   
   140004d34:	int3   
   140004d35:	int3   
   140004d36:	int3   
   140004d37:	int3   
   140004d38:	int3   
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	mov    QWORD PTR [rsp+0x8],rbx
   140004d41:	mov    QWORD PTR [rsp+0x10],rbp
   140004d46:	mov    QWORD PTR [rsp+0x18],rsi
   140004d4b:	push   rdi
   140004d4c:	sub    rsp,0x20
   140004d50:	xor    ebx,ebx
   140004d52:	mov    rbp,r8
   140004d55:	mov    rsi,rdx
   140004d58:	mov    rdi,rcx
   140004d5b:	cmp    DWORD PTR [rcx],ebx
   140004d5d:	je     0x140004dd8
   140004d5f:	add    rcx,0x8
   140004d63:	call   QWORD PTR [rip+0x94df]        # 0x14000e248
   140004d69:	cmp    DWORD PTR [rdi+0x30],0x4
   140004d6d:	jge    0x140004d76
   140004d6f:	mov    ebx,0x8007139f
   140004d74:	jmp    0x140004ddd
   140004d76:	test   rsi,rsi
   140004d79:	jne    0x140004d82
   140004d7b:	mov    ebx,0x80070057
   140004d80:	jmp    0x140004ddd
   140004d82:	mov    rdx,QWORD PTR [rdi+0x40]
   140004d86:	sub    rdx,rsi
   140004d89:	movzx  eax,WORD PTR [rsi]
   140004d8c:	movzx  ecx,WORD PTR [rsi+rdx*1]
   140004d90:	sub    eax,ecx
   140004d92:	jne    0x140004d9c
   140004d94:	add    rsi,0x2
   140004d98:	test   ecx,ecx
   140004d9a:	jne    0x140004d89
   140004d9c:	test   eax,eax
   140004d9e:	je     0x140004da7
   140004da0:	mov    ebx,0x80070005
   140004da5:	jmp    0x140004ddd
   140004da7:	mov    rdx,QWORD PTR [rdi+0x80]
   140004dae:	mov    rcx,rbp
   140004db1:	call   0x140006654
   140004db6:	test   eax,eax
   140004db8:	je     0x140004da0
   140004dba:	mov    rdx,QWORD PTR [rbp+0x10]
   140004dbe:	lea    rcx,[rbp+0x20]
   140004dc2:	call   0x140006998
   140004dc7:	test   eax,eax
   140004dc9:	js     0x140004ddd
   140004dcb:	lea    rcx,[rbp+0x20]
   140004dcf:	call   0x140006a6c
   140004dd4:	mov    ebx,eax
   140004dd6:	jmp    0x140004ddd
   140004dd8:	mov    ebx,0x8007000e
   140004ddd:	cmp    DWORD PTR [rdi],0x0
   140004de0:	je     0x140004dec
   140004de2:	lea    rcx,[rdi+0x8]
   140004de6:	call   QWORD PTR [rip+0x95d4]        # 0x14000e3c0
   140004dec:	mov    rbp,QWORD PTR [rsp+0x38]
   140004df1:	mov    eax,ebx
   140004df3:	mov    rbx,QWORD PTR [rsp+0x30]
   140004df8:	mov    rsi,QWORD PTR [rsp+0x40]
   140004dfd:	add    rsp,0x20
   140004e01:	pop    rdi
   140004e02:	ret    
   140004e03:	int3   
   140004e04:	int3   
   140004e05:	int3   
   140004e06:	int3   
   140004e07:	int3   
   140004e08:	int3   
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	mov    QWORD PTR [rsp+0x8],rbx
   140004e11:	mov    QWORD PTR [rsp+0x10],rbp
   140004e16:	mov    QWORD PTR [rsp+0x18],rsi
   140004e1b:	push   rdi
   140004e1c:	sub    rsp,0x30
   140004e20:	cmp    DWORD PTR [rcx],0x0
   140004e23:	mov    rbp,r9
   140004e26:	mov    rsi,r8
   140004e29:	mov    rbx,rdx
   140004e2c:	mov    rdi,rcx
   140004e2f:	je     0x140004eb7
   140004e35:	add    rcx,0x8
   140004e39:	call   QWORD PTR [rip+0x9409]        # 0x14000e248
   140004e3f:	mov    r8d,0x1
   140004e45:	cmp    DWORD PTR [rdi+0x30],r8d
   140004e49:	je     0x140004e52
   140004e4b:	mov    ebx,0x8007139f
   140004e50:	jmp    0x140004ebc
   140004e52:	test   rbx,rbx
   140004e55:	jne    0x140004e5e
   140004e57:	mov    ebx,0x80070057
   140004e5c:	jmp    0x140004ebc
   140004e5e:	mov    rdx,QWORD PTR [rdi+0x40]
   140004e62:	sub    rdx,rbx
   140004e65:	movzx  eax,WORD PTR [rbx]
   140004e68:	movzx  ecx,WORD PTR [rbx+rdx*1]
   140004e6c:	sub    eax,ecx
   140004e6e:	jne    0x140004e78
   140004e70:	add    rbx,0x2
   140004e74:	test   ecx,ecx
   140004e76:	jne    0x140004e65
   140004e78:	test   eax,eax
   140004e7a:	je     0x140004e83
   140004e7c:	mov    ebx,0x80070005
   140004e81:	jmp    0x140004ebc
   140004e83:	mov    rax,QWORD PTR [rip+0xc776]        # 0x140011600
   140004e8a:	cmp    rax,QWORD PTR [rsi]
   140004e8d:	jne    0x140004e7c
   140004e8f:	mov    rax,QWORD PTR [rip+0xc772]        # 0x140011608
   140004e96:	cmp    rax,QWORD PTR [rsi+0x8]
   140004e9a:	jne    0x140004e7c
   140004e9c:	lea    r9,[rip+0xc4fd]        # 0x1400113a0
   140004ea3:	mov    QWORD PTR [rsp+0x20],rbp
   140004ea8:	xor    edx,edx
   140004eaa:	mov    rcx,rsi
   140004ead:	call   QWORD PTR [rip+0x9775]        # 0x14000e628
   140004eb3:	mov    ebx,eax
   140004eb5:	jmp    0x140004ebc
   140004eb7:	mov    ebx,0x8007000e
   140004ebc:	cmp    DWORD PTR [rdi],0x0
   140004ebf:	je     0x140004ecb
   140004ec1:	lea    rcx,[rdi+0x8]
   140004ec5:	call   QWORD PTR [rip+0x94f5]        # 0x14000e3c0
   140004ecb:	mov    rbp,QWORD PTR [rsp+0x48]
   140004ed0:	mov    eax,ebx
   140004ed2:	mov    rbx,QWORD PTR [rsp+0x40]
   140004ed7:	mov    rsi,QWORD PTR [rsp+0x50]
   140004edc:	add    rsp,0x30
   140004ee0:	pop    rdi
   140004ee1:	ret    
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	int3   
   140004ee7:	int3   
   140004ee8:	int3   
   140004ee9:	int3   
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ef5:	mov    QWORD PTR [rsp+0x10],rsi
   140004efa:	push   rdi
   140004efb:	sub    rsp,0x20
   140004eff:	mov    rax,QWORD PTR [rdx]
   140004f02:	xor    edi,edi
   140004f04:	cmp    rax,QWORD PTR [rip+0xc495]        # 0x1400113a0
   140004f0b:	mov    rbx,r8
   140004f0e:	mov    rsi,rcx
   140004f11:	jne    0x140004f20
   140004f13:	mov    rax,QWORD PTR [rdx+0x8]
   140004f17:	cmp    rax,QWORD PTR [rip+0xc48a]        # 0x1400113a8
   140004f1e:	je     0x140004f52
   140004f20:	mov    rax,QWORD PTR [rdx]
   140004f23:	cmp    rax,QWORD PTR [rip+0xc706]        # 0x140011630
   140004f2a:	jne    0x140004f39
   140004f2c:	mov    rax,QWORD PTR [rdx+0x8]
   140004f30:	cmp    rax,QWORD PTR [rip+0xc701]        # 0x140011638
   140004f37:	je     0x140004f52
   140004f39:	mov    rax,QWORD PTR [rdx]
   140004f3c:	cmp    rax,QWORD PTR [rip+0xc6cd]        # 0x140011610
   140004f43:	jne    0x140004f7b
   140004f45:	mov    rax,QWORD PTR [rdx+0x8]
   140004f49:	cmp    rax,QWORD PTR [rip+0xc6c8]        # 0x140011618
   140004f50:	jne    0x140004f7b
   140004f52:	lea    rax,[rcx+0x10]
   140004f56:	test   rcx,rcx
   140004f59:	jne    0x140004f5e
   140004f5b:	mov    rax,rdi
   140004f5e:	mov    QWORD PTR [r8],rax
   140004f61:	mov    rax,QWORD PTR [rcx]
   140004f64:	mov    rbx,QWORD PTR [rax+0x8]
   140004f68:	mov    rcx,rbx
   140004f6b:	call   QWORD PTR [rip+0x9757]        # 0x14000e6c8
   140004f71:	mov    rcx,rsi
   140004f74:	call   rbx
   140004f76:	jmp    0x140005012
   140004f7b:	mov    rax,QWORD PTR [rdx]
   140004f7e:	cmp    rax,QWORD PTR [rip+0xc69b]        # 0x140011620
   140004f85:	jne    0x140004fb5
   140004f87:	mov    rax,QWORD PTR [rdx+0x8]
   140004f8b:	cmp    rax,QWORD PTR [rip+0xc696]        # 0x140011628
   140004f92:	jne    0x140004fb5
   140004f94:	cmp    DWORD PTR [rip+0xf65a],edi        # 0x1400145f4
   140004f9a:	jne    0x140004fa1
   140004f9c:	cmp    DWORD PTR [rcx+0x28],edi
   140004f9f:	je     0x140004fab
   140004fa1:	cmp    DWORD PTR [rcx+0x28],edi
   140004fa4:	je     0x140004fb0
   140004fa6:	cmp    DWORD PTR [rcx+0x2c],edi
   140004fa9:	jne    0x140004fb0
   140004fab:	mov    QWORD PTR [r8],rcx
   140004fae:	jmp    0x140004f61
   140004fb0:	mov    QWORD PTR [r8],rdi
   140004fb3:	jmp    0x140005003
   140004fb5:	mov    rax,QWORD PTR [rdx]
   140004fb8:	cmp    rax,QWORD PTR [rip+0xc421]        # 0x1400113e0
   140004fbf:	jne    0x14000500a
   140004fc1:	mov    rax,QWORD PTR [rdx+0x8]
   140004fc5:	cmp    rax,QWORD PTR [rip+0xc41c]        # 0x1400113e8
   140004fcc:	jne    0x14000500a
   140004fce:	call   0x140007d34
   140004fd3:	test   eax,eax
   140004fd5:	jne    0x140005000
   140004fd7:	cmp    DWORD PTR [rip+0xf617],edi        # 0x1400145f4
   140004fdd:	jne    0x140004fe7
   140004fdf:	cmp    DWORD PTR [rip+0xf60b],edi        # 0x1400145f0
   140004fe5:	je     0x140005000
   140004fe7:	cmp    DWORD PTR [rsi+0x28],edi
   140004fea:	je     0x140004ff1
   140004fec:	cmp    DWORD PTR [rsi+0x2c],edi
   140004fef:	je     0x140005000
   140004ff1:	lea    rax,[rsi+0x8]
   140004ff5:	mov    QWORD PTR [rbx],rax
   140004ff8:	mov    rax,QWORD PTR [rsi]
   140004ffb:	jmp    0x140004f64
   140005000:	mov    QWORD PTR [rbx],rdi
   140005003:	mov    edi,0x80004005
   140005008:	jmp    0x140005012
   14000500a:	mov    QWORD PTR [r8],rdi
   14000500d:	mov    edi,0x80004002
   140005012:	mov    rbx,QWORD PTR [rsp+0x30]
   140005017:	mov    eax,edi
   140005019:	mov    rsi,QWORD PTR [rsp+0x38]
   14000501e:	add    rsp,0x20
   140005022:	pop    rdi
   140005023:	ret    
   140005024:	int3   
   140005025:	int3   
   140005026:	int3   
   140005027:	int3   
   140005028:	int3   
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	lock inc DWORD PTR [rcx+0x18]
   140005034:	mov    eax,DWORD PTR [rcx+0x18]
   140005037:	ret    
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	mov    QWORD PTR [rsp+0x10],rbx
   140005045:	mov    QWORD PTR [rsp+0x18],rsi
   14000504a:	push   rdi
   14000504b:	sub    rsp,0x20
   14000504f:	mov    ebx,DWORD PTR [rcx+0x18]
   140005052:	mov    rdi,rcx
   140005055:	dec    ebx
   140005057:	or     eax,0xffffffff
   14000505a:	lock xadd DWORD PTR [rcx+0x18],eax
   14000505f:	cmp    eax,0x1
   140005062:	jne    0x140005118
   140005068:	mov    rsi,QWORD PTR [rcx+0x20]
   14000506c:	lea    rax,[rip+0x99dd]        # 0x14000ea50
   140005073:	mov    QWORD PTR [rcx],rax
   140005076:	xor    ebx,ebx
   140005078:	lea    rax,[rip+0x9911]        # 0x14000e990
   14000507f:	mov    QWORD PTR [rcx+0x8],rax
   140005083:	lea    rax,[rip+0x9926]        # 0x14000e9b0
   14000508a:	mov    QWORD PTR [rcx+0x10],rax
   14000508e:	test   rsi,rsi
   140005091:	je     0x1400050c3
   140005093:	xor    edx,edx
   140005095:	mov    rcx,rsi
   140005098:	call   0x140001c8c
   14000509d:	lea    rcx,[rsi+0xa0]
   1400050a4:	cmp    BYTE PTR [rcx],bl
   1400050a6:	je     0x1400050ad
   1400050a8:	call   0x140006a6c
   1400050ad:	cmp    DWORD PTR [rsi],ebx
   1400050af:	je     0x1400050bb
   1400050b1:	lea    rcx,[rsi+0x8]
   1400050b5:	call   QWORD PTR [rip+0x92cd]        # 0x14000e388
   1400050bb:	mov    rcx,rsi
   1400050be:	call   0x14000116c
   1400050c3:	mov    QWORD PTR [rdi+0x20],rbx
   1400050c7:	or     eax,0xffffffff
   1400050ca:	lock xadd DWORD PTR [rip+0xf532],eax        # 0x140014604
   1400050d2:	cmp    eax,0x1
   1400050d5:	jne    0x1400050f1
   1400050d7:	mov    rcx,QWORD PTR [rip+0xf5b2]        # 0x140014690
   1400050de:	test   rcx,rcx
   1400050e1:	je     0x1400050e9
   1400050e3:	call   QWORD PTR [rip+0x916f]        # 0x14000e258
   1400050e9:	xor    ecx,ecx
   1400050eb:	call   QWORD PTR [rip+0x936f]        # 0x14000e460
   1400050f1:	or     ecx,0xffffffff
   1400050f4:	lock xadd DWORD PTR [rip+0xef24],ecx        # 0x140014020
   1400050fc:	cmp    ecx,0x1
   1400050ff:	jne    0x140005110
   140005101:	mov    ecx,0x4
   140005106:	call   0x140001140
   14000510b:	call   0x140001838
   140005110:	mov    rcx,rdi
   140005113:	call   0x14000116c
   140005118:	mov    rsi,QWORD PTR [rsp+0x40]
   14000511d:	mov    eax,ebx
   14000511f:	mov    rbx,QWORD PTR [rsp+0x38]
   140005124:	add    rsp,0x20
   140005128:	pop    rdi
   140005129:	ret    
   14000512a:	int3   
   14000512b:	int3   
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	int3   
   14000512f:	int3   
   140005130:	mov    rax,rsp
   140005133:	mov    QWORD PTR [rax+0x8],rbx
   140005137:	mov    QWORD PTR [rax+0x10],rbp
   14000513b:	mov    QWORD PTR [rax+0x18],rsi
   14000513f:	mov    QWORD PTR [rax+0x20],rdi
   140005143:	push   r14
   140005145:	sub    rsp,0x30
   140005149:	cmp    DWORD PTR [rcx+0x2c],0x0
   14000514d:	mov    rsi,r9
   140005150:	mov    ebp,r8d
   140005153:	mov    r14,rdx
   140005156:	mov    rdi,rcx
   140005159:	je     0x140005165
   14000515b:	mov    eax,0x80004005
   140005160:	jmp    0x1400051ee
   140005165:	and    DWORD PTR [rcx+0x2c],0x0
   140005169:	mov    rbx,QWORD PTR [rcx+0x20]
   14000516d:	mov    DWORD PTR [rcx+0x28],0x1
   140005174:	test   rbx,rbx
   140005177:	je     0x1400051ab
   140005179:	xor    edx,edx
   14000517b:	mov    rcx,rbx
   14000517e:	call   0x140001c8c
   140005183:	lea    rcx,[rbx+0xa0]
   14000518a:	cmp    BYTE PTR [rcx],0x0
   14000518d:	je     0x140005194
   14000518f:	call   0x140006a6c
   140005194:	cmp    DWORD PTR [rbx],0x0
   140005197:	je     0x1400051a3
   140005199:	lea    rcx,[rbx+0x8]
   14000519d:	call   QWORD PTR [rip+0x91e5]        # 0x14000e388
   1400051a3:	mov    rcx,rbx
   1400051a6:	call   0x14000116c
   1400051ab:	mov    ecx,0x1a8
   1400051b0:	call   0x140001140
   1400051b5:	test   rax,rax
   1400051b8:	je     0x1400051c2
   1400051ba:	mov    rcx,rax
   1400051bd:	call   0x140001c28
   1400051c2:	mov    QWORD PTR [rdi+0x20],rax
   1400051c6:	test   rax,rax
   1400051c9:	je     0x1400051e9
   1400051cb:	mov    edx,DWORD PTR [rdi+0x2c]
   1400051ce:	mov    r9d,ebp
   1400051d1:	mov    QWORD PTR [rsp+0x28],rsi
   1400051d6:	mov    r8,r14
   1400051d9:	and    QWORD PTR [rsp+0x20],0x0
   1400051df:	mov    rcx,rax
   1400051e2:	call   0x1400024a8
   1400051e7:	jmp    0x1400051ee
   1400051e9:	mov    eax,0x8007000e
   1400051ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400051f3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400051f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400051fd:	mov    rdi,QWORD PTR [rsp+0x58]
   140005202:	add    rsp,0x30
   140005206:	pop    r14
   140005208:	ret    
   140005209:	int3   
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	int3   
   14000520d:	int3   
   14000520e:	int3   
   14000520f:	int3   
   140005210:	mov    rax,rsp
   140005213:	mov    QWORD PTR [rax+0x8],rbx
   140005217:	mov    QWORD PTR [rax+0x10],rbp
   14000521b:	mov    QWORD PTR [rax+0x18],rsi
   14000521f:	mov    QWORD PTR [rax+0x20],rdi
   140005223:	push   r14
   140005225:	sub    rsp,0x30
   140005229:	cmp    DWORD PTR [rcx+0x20],0x0
   14000522d:	mov    rsi,r9
   140005230:	mov    ebp,r8d
   140005233:	mov    r14,rdx
   140005236:	mov    rdi,rcx
   140005239:	je     0x14000524b
   14000523b:	cmp    DWORD PTR [rcx+0x24],0x0
   14000523f:	jne    0x14000524b
   140005241:	mov    eax,0x80004005
   140005246:	jmp    0x1400052fd
   14000524b:	cmp    DWORD PTR [rip+0xf3a2],0x0        # 0x1400145f4
   140005252:	jne    0x14000525d
   140005254:	cmp    DWORD PTR [rip+0xf395],0x0        # 0x1400145f0
   14000525b:	je     0x140005241
   14000525d:	mov    eax,0x1
   140005262:	mov    DWORD PTR [rcx+0x20],eax
   140005265:	mov    DWORD PTR [rcx+0x24],eax
   140005268:	test   r9,r9
   14000526b:	jne    0x140005277
   14000526d:	mov    eax,0x80070057
   140005272:	jmp    0x1400052fd
   140005277:	mov    rbx,QWORD PTR [rcx+0x18]
   14000527b:	test   rbx,rbx
   14000527e:	je     0x1400052b2
   140005280:	xor    edx,edx
   140005282:	mov    rcx,rbx
   140005285:	call   0x140001c8c
   14000528a:	lea    rcx,[rbx+0xa0]
   140005291:	cmp    BYTE PTR [rcx],0x0
   140005294:	je     0x14000529b
   140005296:	call   0x140006a6c
   14000529b:	cmp    DWORD PTR [rbx],0x0
   14000529e:	je     0x1400052aa
   1400052a0:	lea    rcx,[rbx+0x8]
   1400052a4:	call   QWORD PTR [rip+0x90de]        # 0x14000e388
   1400052aa:	mov    rcx,rbx
   1400052ad:	call   0x14000116c
   1400052b2:	mov    ecx,0x1a8
   1400052b7:	call   0x140001140
   1400052bc:	test   rax,rax
   1400052bf:	je     0x1400052ce
   1400052c1:	mov    rcx,rax
   1400052c4:	call   0x140001c28
   1400052c9:	mov    rcx,rax
   1400052cc:	jmp    0x1400052d0
   1400052ce:	xor    ecx,ecx
   1400052d0:	mov    QWORD PTR [rdi+0x18],rcx
   1400052d4:	test   rcx,rcx
   1400052d7:	je     0x1400052f8
   1400052d9:	mov    rax,QWORD PTR [rsp+0x60]
   1400052de:	mov    r9d,ebp
   1400052e1:	mov    edx,DWORD PTR [rdi+0x24]
   1400052e4:	mov    r8,r14
   1400052e7:	mov    QWORD PTR [rsp+0x28],rax
   1400052ec:	mov    QWORD PTR [rsp+0x20],rsi
   1400052f1:	call   0x1400024a8
   1400052f6:	jmp    0x1400052fd
   1400052f8:	mov    eax,0x8007000e
   1400052fd:	mov    rbx,QWORD PTR [rsp+0x40]
   140005302:	mov    rbp,QWORD PTR [rsp+0x48]
   140005307:	mov    rsi,QWORD PTR [rsp+0x50]
   14000530c:	mov    rdi,QWORD PTR [rsp+0x58]
   140005311:	add    rsp,0x30
   140005315:	pop    r14
   140005317:	ret    
   140005318:	int3   
   140005319:	int3   
   14000531a:	int3   
   14000531b:	int3   
   14000531c:	int3   
   14000531d:	int3   
   14000531e:	int3   
   14000531f:	int3   
   140005320:	mov    r11,rsp
   140005323:	sub    rsp,0x68
   140005327:	mov    rcx,QWORD PTR [rcx+0x10]
   14000532b:	mov    eax,0x80004005
   140005330:	test   rcx,rcx
   140005333:	je     0x140005398
   140005335:	mov    rax,QWORD PTR [rsp+0xc8]
   14000533d:	mov    QWORD PTR [r11-0x10],rax
   140005341:	mov    rax,QWORD PTR [rsp+0xc0]
   140005349:	mov    QWORD PTR [r11-0x18],rax
   14000534d:	mov    rax,QWORD PTR [rsp+0xb8]
   140005355:	mov    QWORD PTR [r11-0x20],rax
   140005359:	mov    rax,QWORD PTR [rsp+0xb0]
   140005361:	mov    QWORD PTR [r11-0x28],rax
   140005365:	mov    eax,DWORD PTR [rsp+0xa8]
   14000536c:	mov    DWORD PTR [rsp+0x38],eax
   140005370:	mov    eax,DWORD PTR [rsp+0xa0]
   140005377:	mov    DWORD PTR [rsp+0x30],eax
   14000537b:	mov    rax,QWORD PTR [rsp+0x98]
   140005383:	mov    QWORD PTR [r11-0x40],rax
   140005387:	mov    rax,QWORD PTR [rsp+0x90]
   14000538f:	mov    QWORD PTR [r11-0x48],rax
   140005393:	call   0x140002684
   140005398:	add    rsp,0x68
   14000539c:	ret    
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	int3   
   1400053a1:	int3   
   1400053a2:	int3   
   1400053a3:	int3   
   1400053a4:	int3   
   1400053a5:	int3   
   1400053a6:	int3   
   1400053a7:	int3   
   1400053a8:	int3   
   1400053a9:	int3   
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	int3   
   1400053ad:	int3   
   1400053ae:	int3   
   1400053af:	int3   
   1400053b0:	mov    r11,rsp
   1400053b3:	sub    rsp,0x58
   1400053b7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400053bb:	mov    eax,0x80004005
   1400053c0:	test   rcx,rcx
   1400053c3:	je     0x140005405
   1400053c5:	mov    rax,QWORD PTR [rsp+0xa0]
   1400053cd:	mov    QWORD PTR [r11-0x18],rax
   1400053d1:	mov    eax,DWORD PTR [rsp+0x98]
   1400053d8:	mov    DWORD PTR [rsp+0x38],eax
   1400053dc:	mov    rax,QWORD PTR [rsp+0x90]
   1400053e4:	mov    QWORD PTR [r11-0x28],rax
   1400053e8:	mov    rax,QWORD PTR [rsp+0x88]
   1400053f0:	mov    QWORD PTR [r11-0x30],rax
   1400053f4:	mov    rax,QWORD PTR [rsp+0x80]
   1400053fc:	mov    QWORD PTR [r11-0x38],rax
   140005400:	call   0x140002dc8
   140005405:	add    rsp,0x58
   140005409:	ret    
   14000540a:	int3   
   14000540b:	int3   
   14000540c:	int3   
   14000540d:	int3   
   14000540e:	int3   
   14000540f:	int3   
   140005410:	sub    rsp,0x48
   140005414:	mov    rcx,QWORD PTR [rcx+0x10]
   140005418:	mov    eax,0x80004005
   14000541d:	test   rcx,rcx
   140005420:	je     0x140005453
   140005422:	mov    eax,DWORD PTR [rsp+0x88]
   140005429:	mov    DWORD PTR [rsp+0x38],eax
   14000542d:	mov    rax,QWORD PTR [rsp+0x80]
   140005435:	mov    QWORD PTR [rsp+0x30],rax
   14000543a:	mov    rax,QWORD PTR [rsp+0x78]
   14000543f:	mov    QWORD PTR [rsp+0x28],rax
   140005444:	mov    rax,QWORD PTR [rsp+0x70]
   140005449:	mov    QWORD PTR [rsp+0x20],rax
   14000544e:	call   0x140003108
   140005453:	add    rsp,0x48
   140005457:	ret    
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	sub    rsp,0x38
   140005464:	mov    rcx,QWORD PTR [rcx+0x10]
   140005468:	mov    eax,0x80004005
   14000546d:	test   rcx,rcx
   140005470:	je     0x140005481
   140005472:	mov    rax,QWORD PTR [rsp+0x60]
   140005477:	mov    QWORD PTR [rsp+0x20],rax
   14000547c:	call   0x1400033a4
   140005481:	add    rsp,0x38
   140005485:	ret    
   140005486:	int3   
   140005487:	int3   
   140005488:	int3   
   140005489:	int3   
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	int3   
   14000548d:	int3   
   14000548e:	int3   
   14000548f:	int3   
   140005490:	sub    rsp,0x38
   140005494:	mov    rcx,QWORD PTR [rcx+0x10]
   140005498:	mov    eax,0x80004005
   14000549d:	test   rcx,rcx
   1400054a0:	je     0x1400054af
   1400054a2:	mov    DWORD PTR [rsp+0x20],r9d
   1400054a7:	xor    r9d,r9d
   1400054aa:	call   0x140003a8c
   1400054af:	add    rsp,0x38
   1400054b3:	ret    
   1400054b4:	int3   
   1400054b5:	int3   
   1400054b6:	int3   
   1400054b7:	int3   
   1400054b8:	int3   
   1400054b9:	int3   
   1400054ba:	int3   
   1400054bb:	int3   
   1400054bc:	int3   
   1400054bd:	int3   
   1400054be:	int3   
   1400054bf:	int3   
   1400054c0:	sub    rsp,0x38
   1400054c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400054c8:	mov    eax,0x80004005
   1400054cd:	test   rcx,rcx
   1400054d0:	je     0x1400054df
   1400054d2:	mov    eax,DWORD PTR [rsp+0x60]
   1400054d6:	mov    DWORD PTR [rsp+0x20],eax
   1400054da:	call   0x140003a8c
   1400054df:	add    rsp,0x38
   1400054e3:	ret    
   1400054e4:	int3   
   1400054e5:	int3   
   1400054e6:	int3   
   1400054e7:	int3   
   1400054e8:	int3   
   1400054e9:	int3   
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	int3   
   1400054ef:	int3   
   1400054f0:	sub    rsp,0x28
   1400054f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400054f8:	mov    eax,0x80004005
   1400054fd:	test   rcx,rcx
   140005500:	je     0x140005507
   140005502:	call   0x140003c50
   140005507:	add    rsp,0x28
   14000550b:	ret    
   14000550c:	int3   
   14000550d:	int3   
   14000550e:	int3   
   14000550f:	int3   
   140005510:	int3   
   140005511:	int3   
   140005512:	int3   
   140005513:	int3   
   140005514:	int3   
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	int3   
   140005519:	int3   
   14000551a:	int3   
   14000551b:	int3   
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	sub    rsp,0x28
   140005524:	mov    rcx,QWORD PTR [rcx+0x10]
   140005528:	mov    eax,0x80004005
   14000552d:	test   rcx,rcx
   140005530:	je     0x140005537
   140005532:	call   0x140003dc4
   140005537:	add    rsp,0x28
   14000553b:	ret    
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	int3   
   140005541:	int3   
   140005542:	int3   
   140005543:	int3   
   140005544:	int3   
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	mov    r11,rsp
   140005553:	sub    rsp,0xb8
   14000555a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000555e:	mov    eax,0x80004005
   140005563:	test   rcx,rcx
   140005566:	je     0x14000561b
   14000556c:	mov    rax,QWORD PTR [rsp+0x148]
   140005574:	mov    QWORD PTR [r11-0x28],rax
   140005578:	mov    eax,DWORD PTR [rsp+0x140]
   14000557f:	mov    DWORD PTR [r11-0x30],eax
   140005583:	and    QWORD PTR [r11-0x38],0x0
   140005588:	mov    rax,QWORD PTR [rsp+0x138]
   140005590:	mov    QWORD PTR [r11-0x40],rax
   140005594:	mov    eax,DWORD PTR [rsp+0x130]
   14000559b:	mov    DWORD PTR [rsp+0x70],eax
   14000559f:	mov    rax,QWORD PTR [rsp+0x128]
   1400055a7:	mov    QWORD PTR [r11-0x50],rax
   1400055ab:	mov    rax,QWORD PTR [rsp+0x120]
   1400055b3:	mov    QWORD PTR [r11-0x58],rax
   1400055b7:	mov    rax,QWORD PTR [rsp+0x118]
   1400055bf:	mov    QWORD PTR [r11-0x60],rax
   1400055c3:	mov    eax,DWORD PTR [rsp+0x110]
   1400055ca:	mov    DWORD PTR [rsp+0x50],eax
   1400055ce:	mov    rax,QWORD PTR [rsp+0x108]
   1400055d6:	mov    QWORD PTR [r11-0x70],rax
   1400055da:	mov    rax,QWORD PTR [rsp+0x100]
   1400055e2:	mov    QWORD PTR [r11-0x78],rax
   1400055e6:	mov    eax,DWORD PTR [rsp+0xf8]
   1400055ed:	mov    DWORD PTR [rsp+0x38],eax
   1400055f1:	mov    rax,QWORD PTR [rsp+0xf0]
   1400055f9:	mov    QWORD PTR [rsp+0x30],rax
   1400055fe:	mov    rax,QWORD PTR [rsp+0xe8]
   140005606:	mov    QWORD PTR [rsp+0x28],rax
   14000560b:	mov    eax,DWORD PTR [rsp+0xe0]
   140005612:	mov    DWORD PTR [rsp+0x20],eax
   140005616:	call   0x140003f80
   14000561b:	add    rsp,0xb8
   140005622:	ret    
   140005623:	int3   
   140005624:	int3   
   140005625:	int3   
   140005626:	int3   
   140005627:	int3   
   140005628:	int3   
   140005629:	int3   
   14000562a:	int3   
   14000562b:	int3   
   14000562c:	int3   
   14000562d:	int3   
   14000562e:	int3   
   14000562f:	int3   
   140005630:	mov    r11,rsp
   140005633:	sub    rsp,0xb8
   14000563a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000563e:	mov    eax,0x80004005
   140005643:	test   rcx,rcx
   140005646:	je     0x140005702
   14000564c:	mov    rax,QWORD PTR [rsp+0x150]
   140005654:	mov    QWORD PTR [r11-0x28],rax
   140005658:	mov    eax,DWORD PTR [rsp+0x148]
   14000565f:	mov    DWORD PTR [r11-0x30],eax
   140005663:	mov    rax,QWORD PTR [rsp+0x140]
   14000566b:	mov    QWORD PTR [r11-0x38],rax
   14000566f:	mov    rax,QWORD PTR [rsp+0x138]
   140005677:	mov    QWORD PTR [r11-0x40],rax
   14000567b:	mov    eax,DWORD PTR [rsp+0x130]
   140005682:	mov    DWORD PTR [rsp+0x70],eax
   140005686:	mov    rax,QWORD PTR [rsp+0x128]
   14000568e:	mov    QWORD PTR [r11-0x50],rax
   140005692:	mov    rax,QWORD PTR [rsp+0x120]
   14000569a:	mov    QWORD PTR [r11-0x58],rax
   14000569e:	mov    rax,QWORD PTR [rsp+0x118]
   1400056a6:	mov    QWORD PTR [r11-0x60],rax
   1400056aa:	mov    eax,DWORD PTR [rsp+0x110]
   1400056b1:	mov    DWORD PTR [rsp+0x50],eax
   1400056b5:	mov    rax,QWORD PTR [rsp+0x108]
   1400056bd:	mov    QWORD PTR [r11-0x70],rax
   1400056c1:	mov    rax,QWORD PTR [rsp+0x100]
   1400056c9:	mov    QWORD PTR [r11-0x78],rax
   1400056cd:	mov    eax,DWORD PTR [rsp+0xf8]
   1400056d4:	mov    DWORD PTR [rsp+0x38],eax
   1400056d8:	mov    rax,QWORD PTR [rsp+0xf0]
   1400056e0:	mov    QWORD PTR [rsp+0x30],rax
   1400056e5:	mov    rax,QWORD PTR [rsp+0xe8]
   1400056ed:	mov    QWORD PTR [rsp+0x28],rax
   1400056f2:	mov    eax,DWORD PTR [rsp+0xe0]
   1400056f9:	mov    DWORD PTR [rsp+0x20],eax
   1400056fd:	call   0x140003f80
   140005702:	add    rsp,0xb8
   140005709:	ret    
   14000570a:	int3   
   14000570b:	int3   
   14000570c:	int3   
   14000570d:	int3   
   14000570e:	int3   
   14000570f:	int3   
   140005710:	sub    rsp,0x48
   140005714:	mov    rcx,QWORD PTR [rcx+0x10]
   140005718:	mov    eax,0x80004005
   14000571d:	test   rcx,rcx
   140005720:	je     0x140005746
   140005722:	mov    eax,DWORD PTR [rsp+0x80]
   140005729:	mov    DWORD PTR [rsp+0x30],eax
   14000572d:	mov    rax,QWORD PTR [rsp+0x78]
   140005732:	mov    QWORD PTR [rsp+0x28],rax
   140005737:	mov    rax,QWORD PTR [rsp+0x70]
   14000573c:	mov    QWORD PTR [rsp+0x20],rax
   140005741:	call   0x140004724
   140005746:	add    rsp,0x48
   14000574a:	ret    
   14000574b:	int3   
   14000574c:	int3   
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	int3   
   140005750:	int3   
   140005751:	int3   
   140005752:	int3   
   140005753:	int3   
   140005754:	int3   
   140005755:	int3   
   140005756:	int3   
   140005757:	int3   
   140005758:	int3   
   140005759:	int3   
   14000575a:	int3   
   14000575b:	int3   
   14000575c:	int3   
   14000575d:	int3   
   14000575e:	int3   
   14000575f:	int3   
   140005760:	sub    rsp,0x28
   140005764:	mov    rcx,QWORD PTR [rcx+0x10]
   140005768:	mov    eax,0x80004005
   14000576d:	test   rcx,rcx
   140005770:	je     0x140005777
   140005772:	call   0x140004a6c
   140005777:	add    rsp,0x28
   14000577b:	ret    
   14000577c:	int3   
   14000577d:	int3   
   14000577e:	int3   
   14000577f:	int3   
   140005780:	int3   
   140005781:	int3   
   140005782:	int3   
   140005783:	int3   
   140005784:	int3   
   140005785:	int3   
   140005786:	int3   
   140005787:	int3   
   140005788:	int3   
   140005789:	int3   
   14000578a:	int3   
   14000578b:	int3   
   14000578c:	int3   
   14000578d:	int3   
   14000578e:	int3   
   14000578f:	int3   
   140005790:	sub    rsp,0x28
   140005794:	mov    rcx,QWORD PTR [rcx+0x10]
   140005798:	mov    eax,0x80004005
   14000579d:	test   rcx,rcx
   1400057a0:	je     0x1400057a7
   1400057a2:	call   0x140004c0c
   1400057a7:	add    rsp,0x28
   1400057ab:	ret    
   1400057ac:	int3   
   1400057ad:	int3   
   1400057ae:	int3   
   1400057af:	int3   
   1400057b0:	int3   
   1400057b1:	int3   
   1400057b2:	int3   
   1400057b3:	int3   
   1400057b4:	int3   
   1400057b5:	int3   
   1400057b6:	int3   
   1400057b7:	int3   
   1400057b8:	int3   
   1400057b9:	int3   
   1400057ba:	int3   
   1400057bb:	int3   
   1400057bc:	int3   
   1400057bd:	int3   
   1400057be:	int3   
   1400057bf:	int3   
   1400057c0:	sub    rsp,0x28
   1400057c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400057c8:	mov    eax,0x80004005
   1400057cd:	test   rcx,rcx
   1400057d0:	je     0x1400057d7
   1400057d2:	call   0x140004d3c
   1400057d7:	add    rsp,0x28
   1400057db:	ret    
   1400057dc:	int3   
   1400057dd:	int3   
   1400057de:	int3   
   1400057df:	int3   
   1400057e0:	int3   
   1400057e1:	int3   
   1400057e2:	int3   
   1400057e3:	int3   
   1400057e4:	int3   
   1400057e5:	int3   
   1400057e6:	int3   
   1400057e7:	int3   
   1400057e8:	int3   
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	int3   
   1400057ed:	int3   
   1400057ee:	int3   
   1400057ef:	int3   
   1400057f0:	sub    rsp,0x28
   1400057f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400057f8:	mov    eax,0x80004005
   1400057fd:	test   rcx,rcx
   140005800:	je     0x140005807
   140005802:	call   0x140004e0c
   140005807:	add    rsp,0x28
   14000580b:	ret    
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	int3   
   140005811:	int3   
   140005812:	int3   
   140005813:	int3   
   140005814:	int3   
   140005815:	int3   
   140005816:	int3   
   140005817:	int3   
   140005818:	int3   
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	sub    rsp,0x28
   140005824:	mov    r11,rdx
   140005827:	mov    r10d,0x80004005
   14000582d:	mov    rdx,QWORD PTR [rcx+0x10]
   140005831:	test   rdx,rdx
   140005834:	je     0x14000586b
   140005836:	mov    rax,QWORD PTR [r11]
   140005839:	mov    r10d,0x80070005
   14000583f:	cmp    rax,QWORD PTR [rdx+0x58]
   140005843:	jne    0x14000586b
   140005845:	mov    rax,QWORD PTR [r11+0x8]
   140005849:	cmp    rax,QWORD PTR [rdx+0x60]
   14000584d:	jne    0x14000586b
   14000584f:	mov    rdx,r8
   140005852:	mov    rcx,r11
   140005855:	test   r9d,r9d
   140005858:	jne    0x140005862
   14000585a:	call   QWORD PTR [rip+0x8c50]        # 0x14000e4b0
   140005860:	jmp    0x140005868
   140005862:	call   QWORD PTR [rip+0x8c40]        # 0x14000e4a8
   140005868:	mov    r10d,eax
   14000586b:	mov    eax,r10d
   14000586e:	add    rsp,0x28
   140005872:	ret    
   140005873:	int3   
   140005874:	int3   
   140005875:	int3   
   140005876:	int3   
   140005877:	int3   
   140005878:	int3   
   140005879:	int3   
   14000587a:	int3   
   14000587b:	int3   
   14000587c:	int3   
   14000587d:	int3   
   14000587e:	int3   
   14000587f:	int3   
   140005880:	mov    QWORD PTR [rsp+0x8],rbx
   140005885:	mov    QWORD PTR [rsp+0x10],rsi
   14000588a:	push   rdi
   14000588b:	sub    rsp,0x20
   14000588f:	mov    rdi,QWORD PTR [rcx+0x10]
   140005893:	mov    rsi,rdx
   140005896:	mov    ebx,0x80004005
   14000589b:	test   rdi,rdi
   14000589e:	je     0x140005910
   1400058a0:	xor    ebx,ebx
   1400058a2:	cmp    DWORD PTR [rdi],ebx
   1400058a4:	je     0x1400058fc
   1400058a6:	lea    rcx,[rdi+0x8]
   1400058aa:	call   QWORD PTR [rip+0x8998]        # 0x14000e248
   1400058b0:	cmp    DWORD PTR [rdi+0x30],0x4
   1400058b4:	jge    0x1400058bd
   1400058b6:	mov    ebx,0x8007139f
   1400058bb:	jmp    0x140005901
   1400058bd:	test   rsi,rsi
   1400058c0:	jne    0x1400058c9
   1400058c2:	mov    ebx,0x80070057
   1400058c7:	jmp    0x140005901
   1400058c9:	mov    rdx,QWORD PTR [rdi+0x80]
   1400058d0:	mov    rcx,rsi
   1400058d3:	call   0x140006578
   1400058d8:	test   eax,eax
   1400058da:	jne    0x1400058e3
   1400058dc:	mov    ebx,0x80070005
   1400058e1:	jmp    0x140005901
   1400058e3:	mov    edx,0x80
   1400058e8:	mov    rcx,rsi
   1400058eb:	call   QWORD PTR [rip+0x894f]        # 0x14000e240
   1400058f1:	mov    rcx,rsi
   1400058f4:	call   QWORD PTR [rip+0x8a66]        # 0x14000e360
   1400058fa:	jmp    0x140005901
   1400058fc:	mov    ebx,0x8007000e
   140005901:	cmp    DWORD PTR [rdi],0x0
   140005904:	je     0x140005910
   140005906:	lea    rcx,[rdi+0x8]
   14000590a:	call   QWORD PTR [rip+0x8ab0]        # 0x14000e3c0
   140005910:	mov    rsi,QWORD PTR [rsp+0x38]
   140005915:	mov    eax,ebx
   140005917:	mov    rbx,QWORD PTR [rsp+0x30]
   14000591c:	add    rsp,0x20
   140005920:	pop    rdi
   140005921:	ret    
   140005922:	int3   
   140005923:	int3   
   140005924:	int3   
   140005925:	int3   
   140005926:	int3   
   140005927:	int3   
   140005928:	int3   
   140005929:	int3   
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	int3   
   14000592d:	int3   
   14000592e:	int3   
   14000592f:	int3   
   140005930:	sub    rcx,0x10
   140005934:	jmp    0x140005040
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	sub    rcx,0x8
   140005944:	jmp    0x140005030
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	sub    rcx,0x10
   140005954:	jmp    0x140005030
   140005959:	int3   
   14000595a:	int3   
   14000595b:	int3   
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	sub    rcx,0x8
   140005964:	jmp    0x140004ef0
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	int3   
   14000596d:	int3   
   14000596e:	int3   
   14000596f:	int3   
   140005970:	sub    rcx,0x10
   140005974:	jmp    0x140004ef0
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	sub    rcx,0x8
   140005984:	jmp    0x140005040
   140005989:	int3   
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	mov    QWORD PTR [rsp+0x8],rbx
   140005995:	mov    QWORD PTR [rsp+0x10],rbp
   14000599a:	mov    QWORD PTR [rsp+0x18],rsi
   14000599f:	push   rdi
   1400059a0:	push   r12
   1400059a2:	push   r13
   1400059a4:	push   r14
   1400059a6:	push   r15
   1400059a8:	sub    rsp,0x20
   1400059ac:	mov    r12d,DWORD PTR [rsp+0x78]
   1400059b1:	mov    r14,rcx
   1400059b4:	xor    ebx,ebx
   1400059b6:	mov    ecx,r12d
   1400059b9:	mov    rdi,rdx
   1400059bc:	mov    r13,r9
   1400059bf:	mov    r10,r8
   1400059c2:	mov    esi,ebx
   1400059c4:	mov    edx,0x80070057
   1400059c9:	mov    r11d,0x7ffffffe
   1400059cf:	and    ecx,0x100
   1400059d5:	je     0x1400059ee
   1400059d7:	test   r14,r14
   1400059da:	jne    0x1400059e1
   1400059dc:	test   rdi,rdi
   1400059df:	jne    0x1400059ea
   1400059e1:	cmp    rdi,0x7fffffff
   1400059e8:	jbe    0x1400059f8
   1400059ea:	mov    esi,edx
   1400059ec:	jmp    0x1400059f8
   1400059ee:	lea    rax,[rdi-0x1]
   1400059f2:	cmp    rax,r11
   1400059f5:	cmova  esi,edx
   1400059f8:	test   esi,esi
   1400059fa:	js     0x140005b5f
   140005a00:	mov    r15,r14
   140005a03:	mov    rbp,rdi
   140005a06:	test   ecx,ecx
   140005a08:	je     0x140005a18
   140005a0a:	test   r8,r8
   140005a0d:	lea    r10,[rip+0xb0ac]        # 0x140010ac0
   140005a14:	cmovne r10,r8
   140005a18:	mov    esi,ebx
   140005a1a:	test   r12d,0xffffe000
   140005a21:	je     0x140005a81
   140005a23:	mov    esi,edx
   140005a25:	test   rdi,rdi
   140005a28:	je     0x140005a2d
   140005a2a:	mov    BYTE PTR [r14],bl
   140005a2d:	test   r12d,0x1c00
   140005a34:	je     0x140005b33
   140005a3a:	test   rdi,rdi
   140005a3d:	je     0x140005b33
   140005a43:	bt     r12d,0xc
   140005a48:	jae    0x140005a53
   140005a4a:	mov    r15,r14
   140005a4d:	mov    BYTE PTR [r14],bl
   140005a50:	mov    rbp,rdi
   140005a53:	bt     r12d,0xa
   140005a58:	jae    0x140005b1e
   140005a5e:	movzx  edx,r12b
   140005a62:	mov    r8,rdi
   140005a65:	mov    rcx,r14
   140005a68:	call   0x14000d326
   140005a6d:	test   r12b,r12b
   140005a70:	jne    0x140005b0a
   140005a76:	mov    r15,r14
   140005a79:	mov    rbp,rdi
   140005a7c:	jmp    0x140005b1e
   140005a81:	test   rdi,rdi
   140005a84:	jne    0x140005a9e
   140005a86:	cmp    BYTE PTR [r10],bl
   140005a89:	je     0x140005b47
   140005a8f:	mov    rax,r14
   140005a92:	neg    rax
   140005a95:	sbb    esi,esi
   140005a97:	and    esi,0x23
   140005a9a:	add    esi,edx
   140005a9c:	jmp    0x140005a2d
   140005a9e:	mov    r8,rdi
   140005aa1:	mov    rdx,r14
   140005aa4:	mov    rcx,rbx
   140005aa7:	sub    r11,rdi
   140005aaa:	lea    rax,[r11+r8*1]
   140005aae:	test   rax,rax
   140005ab1:	je     0x140005ac9
   140005ab3:	mov    al,BYTE PTR [rcx+r10*1]
   140005ab7:	test   al,al
   140005ab9:	je     0x140005ac9
   140005abb:	mov    BYTE PTR [rdx],al
   140005abd:	inc    rcx
   140005ac0:	inc    rdx
   140005ac3:	sub    r8,0x1
   140005ac7:	jne    0x140005aaa
   140005ac9:	test   r8,r8
   140005acc:	jne    0x140005ad9
   140005ace:	dec    rdx
   140005ad1:	mov    esi,0x8007007a
   140005ad6:	dec    rcx
   140005ad9:	sub    rbp,rcx
   140005adc:	mov    BYTE PTR [rdx],bl
   140005ade:	lea    r15,[rcx+r14*1]
   140005ae2:	test   esi,esi
   140005ae4:	js     0x140005a2d
   140005aea:	bt     r12d,0x9
   140005aef:	jae    0x140005b47
   140005af1:	cmp    rbp,0x1
   140005af5:	jbe    0x140005b47
   140005af7:	lea    r8,[rbp-0x1]
   140005afb:	movzx  edx,r12b
   140005aff:	lea    rcx,[r15+0x1]
   140005b03:	call   0x14000d326
   140005b08:	jmp    0x140005b47
   140005b0a:	test   rdi,rdi
   140005b0d:	je     0x140005b33
   140005b0f:	lea    r15,[rdi-0x1]
   140005b13:	mov    ebp,0x1
   140005b18:	add    r15,r14
   140005b1b:	mov    BYTE PTR [r15],bl
   140005b1e:	test   rdi,rdi
   140005b21:	je     0x140005b33
   140005b23:	bt     r12d,0xb
   140005b28:	jae    0x140005b33
   140005b2a:	mov    r15,r14
   140005b2d:	mov    BYTE PTR [r14],bl
   140005b30:	mov    rbp,rdi
   140005b33:	mov    ecx,0x80000000
   140005b38:	lea    eax,[rsi+rcx*1]
   140005b3b:	test   ecx,eax
   140005b3d:	jne    0x140005b47
   140005b3f:	cmp    esi,0x8007007a
   140005b45:	jne    0x140005b67
   140005b47:	test   r13,r13
   140005b4a:	je     0x140005b50
   140005b4c:	mov    QWORD PTR [r13+0x0],r15
   140005b50:	mov    rax,QWORD PTR [rsp+0x70]
   140005b55:	test   rax,rax
   140005b58:	je     0x140005b67
   140005b5a:	mov    QWORD PTR [rax],rbp
   140005b5d:	jmp    0x140005b67
   140005b5f:	test   rdi,rdi
   140005b62:	je     0x140005b67
   140005b64:	mov    BYTE PTR [r14],bl
   140005b67:	mov    rbx,QWORD PTR [rsp+0x50]
   140005b6c:	mov    eax,esi
   140005b6e:	mov    rsi,QWORD PTR [rsp+0x60]
   140005b73:	mov    rbp,QWORD PTR [rsp+0x58]
   140005b78:	add    rsp,0x20
   140005b7c:	pop    r15
   140005b7e:	pop    r14
   140005b80:	pop    r13
   140005b82:	pop    r12
   140005b84:	pop    rdi
   140005b85:	ret    
   140005b86:	int3   
   140005b87:	int3   
   140005b88:	int3   
   140005b89:	int3   
   140005b8a:	int3   
   140005b8b:	int3   
   140005b8c:	mov    QWORD PTR [rsp+0x8],rbx
   140005b91:	mov    QWORD PTR [rsp+0x10],rsi
   140005b96:	push   rdi
   140005b97:	sub    rsp,0x20
   140005b9b:	xor    esi,esi
   140005b9d:	mov    r10,r8
   140005ba0:	mov    r11,r9
   140005ba3:	mov    ebx,esi
   140005ba5:	mov    eax,0x80070057
   140005baa:	mov    r8d,0x7fffffff
   140005bb0:	test   rcx,rcx
   140005bb3:	jne    0x140005bba
   140005bb5:	test   rdx,rdx
   140005bb8:	jne    0x140005bbf
   140005bba:	cmp    rdx,r8
   140005bbd:	jbe    0x140005bc1
   140005bbf:	mov    ebx,eax
   140005bc1:	test   ebx,ebx
   140005bc3:	js     0x140005bcc
   140005bc5:	cmp    r9,r8
   140005bc8:	jb     0x140005be6
   140005bca:	mov    ebx,eax
   140005bcc:	test   rdx,rdx
   140005bcf:	je     0x140005bd4
   140005bd1:	mov    WORD PTR [rcx],si
   140005bd4:	mov    rsi,QWORD PTR [rsp+0x38]
   140005bd9:	mov    eax,ebx
   140005bdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140005be0:	add    rsp,0x20
   140005be4:	pop    rdi
   140005be5:	ret    
   140005be6:	test   r10,r10
   140005be9:	jne    0x140005bf5
   140005beb:	lea    r10,[rip+0x8c96]        # 0x14000e888
   140005bf2:	mov    r11,rsi
   140005bf5:	mov    ebx,esi
   140005bf7:	test   rdx,rdx
   140005bfa:	jne    0x140005c13
   140005bfc:	test   r11,r11
   140005bff:	je     0x140005bd4
   140005c01:	cmp    WORD PTR [r10],si
   140005c05:	je     0x140005bd4
   140005c07:	neg    rcx
   140005c0a:	sbb    ebx,ebx
   140005c0c:	and    ebx,0x23
   140005c0f:	add    ebx,eax
   140005c11:	jmp    0x140005bd4
   140005c13:	sub    r11,rdx
   140005c16:	mov    rdi,rdx
   140005c19:	sub    r10,rcx
   140005c1c:	mov    r8,rcx
   140005c1f:	mov    r9,rsi
   140005c22:	lea    rax,[r11+rdi*1]
   140005c26:	test   rax,rax
   140005c29:	je     0x140005c46
   140005c2b:	movzx  eax,WORD PTR [r10+r8*1]
   140005c30:	test   ax,ax
   140005c33:	je     0x140005c46
   140005c35:	mov    WORD PTR [r8],ax
   140005c39:	inc    r9
   140005c3c:	add    r8,0x2
   140005c40:	sub    rdi,0x1
   140005c44:	jne    0x140005c22
   140005c46:	test   rdi,rdi
   140005c49:	jne    0x140005c57
   140005c4b:	sub    r8,0x2
   140005c4f:	mov    ebx,0x8007007a
   140005c54:	dec    r9
   140005c57:	sub    rdx,r9
   140005c5a:	mov    WORD PTR [r8],si
   140005c5e:	test   ebx,ebx
   140005c60:	js     0x140005bd4
   140005c66:	cmp    rdx,0x1
   140005c6a:	jbe    0x140005bd4
   140005c70:	lea    r8,[rdx+rdx*1]
   140005c74:	cmp    r8,0x2
   140005c78:	jbe    0x140005bd4
   140005c7e:	lea    rcx,[rcx+r9*2]
   140005c82:	add    r8,0xfffffffffffffffe
   140005c86:	add    rcx,0x2
   140005c8a:	xor    edx,edx
   140005c8c:	call   0x14000d326
   140005c91:	jmp    0x140005bd4
   140005c96:	int3   
   140005c97:	int3   
   140005c98:	int3   
   140005c99:	int3   
   140005c9a:	int3   
   140005c9b:	int3   
   140005c9c:	mov    QWORD PTR [rsp+0x8],rbx
   140005ca1:	xor    r9d,r9d
   140005ca4:	lea    rax,[rdx-0x1]
   140005ca8:	cmp    rax,0x7ffffffe
   140005cae:	mov    r10,rdx
   140005cb1:	mov    edx,0x80070057
   140005cb6:	mov    rbx,r8
   140005cb9:	cmova  r9d,edx
   140005cbd:	mov    r11,rcx
   140005cc0:	test   r9d,r9d
   140005cc3:	js     0x140005cee
   140005cc5:	xor    r9d,r9d
   140005cc8:	mov    rax,r10
   140005ccb:	test   r10,r10
   140005cce:	je     0x140005ceb
   140005cd0:	cmp    BYTE PTR [rcx],r9b
   140005cd3:	je     0x140005cde
   140005cd5:	inc    rcx
   140005cd8:	sub    rax,0x1
   140005cdc:	jne    0x140005cd0
   140005cde:	test   rax,rax
   140005ce1:	je     0x140005ceb
   140005ce3:	mov    r8,r10
   140005ce6:	sub    r8,rax
   140005ce9:	jmp    0x140005cf1
   140005ceb:	mov    r9d,edx
   140005cee:	xor    r8d,r8d
   140005cf1:	test   r9d,r9d
   140005cf4:	js     0x140005d46
   140005cf6:	mov    rdx,r10
   140005cf9:	lea    rcx,[r8+r11*1]
   140005cfd:	mov    r9d,0x0
   140005d03:	sub    rdx,r8
   140005d06:	je     0x140005d3a
   140005d08:	mov    rax,rdx
   140005d0b:	sub    rax,r10
   140005d0e:	lea    r10,[r8+0x7ffffffe]
   140005d15:	add    r10,rax
   140005d18:	sub    rbx,rcx
   140005d1b:	test   r10,r10
   140005d1e:	je     0x140005d35
   140005d20:	mov    al,BYTE PTR [rbx+rcx*1]
   140005d23:	test   al,al
   140005d25:	je     0x140005d35
   140005d27:	mov    BYTE PTR [rcx],al
   140005d29:	dec    r10
   140005d2c:	inc    rcx
   140005d2f:	sub    rdx,0x1
   140005d33:	jne    0x140005d1b
   140005d35:	test   rdx,rdx
   140005d38:	jne    0x140005d43
   140005d3a:	dec    rcx
   140005d3d:	mov    r9d,0x8007007a
   140005d43:	mov    BYTE PTR [rcx],0x0
   140005d46:	mov    rbx,QWORD PTR [rsp+0x8]
   140005d4b:	mov    eax,r9d
   140005d4e:	ret    
   140005d4f:	int3   
   140005d50:	int3   
   140005d51:	int3   
   140005d52:	int3   
   140005d53:	int3   
   140005d54:	int3   
   140005d55:	int3   
   140005d56:	int3   
   140005d57:	int3   
   140005d58:	mov    QWORD PTR [rsp+0x18],r8
   140005d5d:	mov    QWORD PTR [rsp+0x20],r9
   140005d62:	push   rbx
   140005d63:	push   rsi
   140005d64:	push   rdi
   140005d65:	sub    rsp,0x20
   140005d69:	xor    edi,edi
   140005d6b:	lea    rax,[rdx-0x1]
   140005d6f:	cmp    rax,0x7ffffffe
   140005d75:	mov    rsi,rcx
   140005d78:	mov    ecx,0x80070057
   140005d7d:	cmova  edi,ecx
   140005d80:	test   edi,edi
   140005d82:	js     0x140005db9
   140005d84:	lea    rbx,[rdx-0x1]
   140005d88:	mov    rcx,rsi
   140005d8b:	mov    rdx,rbx
   140005d8e:	lea    r9,[rsp+0x58]
   140005d93:	xor    edi,edi
   140005d95:	call   QWORD PTR [rip+0x8775]        # 0x14000e510
   140005d9b:	test   eax,eax
   140005d9d:	js     0x140005dae
   140005d9f:	cdqe   
   140005da1:	cmp    rax,rbx
   140005da4:	ja     0x140005dae
   140005da6:	jne    0x140005dc1
   140005da8:	mov    BYTE PTR [rbx+rsi*1],dil
   140005dac:	jmp    0x140005dc1
   140005dae:	mov    BYTE PTR [rbx+rsi*1],dil
   140005db2:	mov    edi,0x8007007a
   140005db7:	jmp    0x140005dc1
   140005db9:	test   rdx,rdx
   140005dbc:	je     0x140005dc1
   140005dbe:	mov    BYTE PTR [rsi],0x0
   140005dc1:	mov    eax,edi
   140005dc3:	add    rsp,0x20
   140005dc7:	pop    rdi
   140005dc8:	pop    rsi
   140005dc9:	pop    rbx
   140005dca:	ret    
   140005dcb:	int3   
   140005dcc:	int3   
   140005dcd:	int3   
   140005dce:	int3   
   140005dcf:	int3   
   140005dd0:	int3   
   140005dd1:	int3   
   140005dd2:	int3   
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	mov    DWORD PTR [rip+0xe882],ecx        # 0x140014668
   140005de6:	mov    eax,0x1
   140005deb:	ret    
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	int3   
   140005df1:	int3   
   140005df2:	int3   
   140005df3:	int3   
   140005df4:	int3   
   140005df5:	int3   
   140005df6:	int3   
   140005df7:	int3   
   140005df8:	int3   
   140005df9:	int3   
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	mov    QWORD PTR [rsp+0x8],rbx
   140005e05:	push   rsi
   140005e06:	sub    rsp,0x150
   140005e0d:	mov    rax,QWORD PTR [rip+0xe1f4]        # 0x140014008
   140005e14:	xor    rax,rsp
   140005e17:	mov    QWORD PTR [rsp+0x140],rax
   140005e1f:	mov    al,BYTE PTR [rip+0xe85b]        # 0x140014680
   140005e25:	lea    rsi,[rip+0xe7e4]        # 0x140014610
   140005e2c:	test   al,al
   140005e2e:	jne    0x140005ee4
   140005e34:	mov    ebx,0x40
   140005e39:	xor    edx,edx
   140005e3b:	mov    r8d,ebx
   140005e3e:	mov    rcx,rsi
   140005e41:	call   0x14000d326
   140005e46:	and    QWORD PTR [rsp+0x20],0x0
   140005e4c:	lea    r8,[rsp+0x20]
   140005e51:	lea    rdx,[rip+0xffffffffffffff88]        # 0x140005de0
   140005e58:	lea    ecx,[rbx-0x3a]
   140005e5b:	call   QWORD PTR [rip+0x83af]        # 0x14000e210
   140005e61:	test   eax,eax
   140005e63:	je     0x140005edd
   140005e65:	mov    rcx,QWORD PTR [rsp+0x20]
   140005e6a:	lea    rdx,[rsp+0x30]
   140005e6f:	mov    r8d,0x104
   140005e75:	call   QWORD PTR [rip+0x833d]        # 0x14000e1b8
   140005e7b:	test   eax,eax
   140005e7d:	je     0x140005edd
   140005e7f:	lea    rcx,[rsp+0x30]
   140005e84:	or     rax,0xffffffffffffffff
   140005e88:	inc    rax
   140005e8b:	cmp    BYTE PTR [rcx+rax*1],0x0
   140005e8f:	jne    0x140005e88
   140005e91:	lea    rdx,[rsp+0x30]
   140005e96:	add    rdx,rax
   140005e99:	jmp    0x140005ea4
   140005e9b:	cmp    BYTE PTR [rdx-0x1],0x5c
   140005e9f:	je     0x140005eae
   140005ea1:	dec    rdx
   140005ea4:	lea    rax,[rsp+0x30]
   140005ea9:	cmp    rdx,rax
   140005eac:	ja     0x140005e9b
   140005eae:	mov    rcx,rsi
   140005eb1:	sub    rdx,rsi
   140005eb4:	lea    rax,[rbx+0x7fffffbe]
   140005ebb:	test   rax,rax
   140005ebe:	je     0x140005ed2
   140005ec0:	mov    al,BYTE PTR [rdx+rcx*1]
   140005ec3:	test   al,al
   140005ec5:	je     0x140005ed2
   140005ec7:	mov    BYTE PTR [rcx],al
   140005ec9:	inc    rcx
   140005ecc:	sub    rbx,0x1
   140005ed0:	jne    0x140005eb4
   140005ed2:	test   rbx,rbx
   140005ed5:	jne    0x140005eda
   140005ed7:	dec    rcx
   140005eda:	mov    BYTE PTR [rcx],0x0
   140005edd:	mov    BYTE PTR [rip+0xe79c],0x1        # 0x140014680
   140005ee4:	mov    rax,rsi
   140005ee7:	mov    rcx,QWORD PTR [rsp+0x140]
   140005eef:	xor    rcx,rsp
   140005ef2:	call   0x14000cc40
   140005ef7:	mov    rbx,QWORD PTR [rsp+0x160]
   140005eff:	add    rsp,0x150
   140005f06:	pop    rsi
   140005f07:	ret    
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	rex push rbx
   140005f12:	sub    rsp,0x20
   140005f16:	lea    rcx,[rip+0xb0bb]        # 0x140010fd8
   140005f1d:	call   QWORD PTR [rip+0x83bd]        # 0x14000e2e0
   140005f23:	test   rax,rax
   140005f26:	je     0x140005f4b
   140005f28:	lea    rdx,[rip+0xb0c1]        # 0x140010ff0
   140005f2f:	mov    rcx,rax
   140005f32:	call   QWORD PTR [rip+0x8318]        # 0x14000e250
   140005f38:	mov    rbx,rax
   140005f3b:	test   rax,rax
   140005f3e:	je     0x140005f4b
   140005f40:	mov    rcx,rax
   140005f43:	call   QWORD PTR [rip+0x877f]        # 0x14000e6c8
   140005f49:	call   rbx
   140005f4b:	add    rsp,0x20
   140005f4f:	pop    rbx
   140005f50:	ret    
   140005f51:	int3   
   140005f52:	int3   
   140005f53:	int3   
   140005f54:	int3   
   140005f55:	int3   
   140005f56:	int3   
   140005f57:	int3   
   140005f58:	int3   
   140005f59:	int3   
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	mov    QWORD PTR [rsp+0x8],rbx
   140005f65:	mov    QWORD PTR [rsp+0x10],rsi
   140005f6a:	push   rdi
   140005f6b:	sub    rsp,0x20
   140005f6f:	mov    rdi,QWORD PTR [rip+0xe702]        # 0x140014678
   140005f76:	xor    ebx,ebx
   140005f78:	mov    esi,ecx
   140005f7a:	test   rdi,rdi
   140005f7d:	jne    0x140005fc6
   140005f7f:	mov    rax,QWORD PTR [rip+0xe6ea]        # 0x140014670
   140005f86:	test   rax,rax
   140005f89:	jne    0x140005fa7
   140005f8b:	xor    edx,edx
   140005f8d:	lea    rcx,[rip+0xb044]        # 0x140010fd8
   140005f94:	mov    r8d,0x800
   140005f9a:	call   QWORD PTR [rip+0x8378]        # 0x14000e318
   140005fa0:	mov    QWORD PTR [rip+0xe6c9],rax        # 0x140014670
   140005fa7:	lea    rdx,[rip+0xb062]        # 0x140011010
   140005fae:	mov    rcx,rax
   140005fb1:	call   QWORD PTR [rip+0x8299]        # 0x14000e250
   140005fb7:	mov    QWORD PTR [rip+0xe6ba],rax        # 0x140014678
   140005fbe:	mov    rdi,rax
   140005fc1:	test   rax,rax
   140005fc4:	je     0x140005fd5
   140005fc6:	mov    rcx,rdi
   140005fc9:	call   QWORD PTR [rip+0x86f9]        # 0x14000e6c8
   140005fcf:	mov    ecx,esi
   140005fd1:	call   rdi
   140005fd3:	mov    ebx,eax
   140005fd5:	mov    rsi,QWORD PTR [rsp+0x38]
   140005fda:	mov    eax,ebx
   140005fdc:	mov    rbx,QWORD PTR [rsp+0x30]
   140005fe1:	add    rsp,0x20
   140005fe5:	pop    rdi
   140005fe6:	ret    
   140005fe7:	int3   
   140005fe8:	int3   
   140005fe9:	int3   
   140005fea:	int3   
   140005feb:	int3   
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	mov    rax,rsp
   140005ff3:	mov    QWORD PTR [rax+0x8],rbx
   140005ff7:	mov    QWORD PTR [rax+0x10],rbp
   140005ffb:	mov    QWORD PTR [rax+0x18],rsi
   140005fff:	push   rdi
   140006000:	sub    rsp,0x40
   140006004:	xor    edi,edi
   140006006:	mov    rsi,r8
   140006009:	mov    rbp,rdx
   14000600c:	mov    ebx,0x80070057
   140006011:	test   rdx,rdx
   140006014:	je     0x1400060c5
   14000601a:	test   r8,r8
   14000601d:	je     0x1400060c5
   140006023:	and    QWORD PTR [rax-0x10],rdi
   140006027:	mov    r8,rdx
   14000602a:	and    QWORD PTR [rax-0x18],rdi
   14000602e:	or     r9d,0xffffffff
   140006032:	and    DWORD PTR [rax-0x20],edi
   140006035:	xor    edx,edx
   140006037:	and    QWORD PTR [rax-0x28],rdi
   14000603b:	xor    ecx,ecx
   14000603d:	call   QWORD PTR [rip+0x81a5]        # 0x14000e1e8
   140006043:	mov    ebx,eax
   140006045:	lea    eax,[rbx-0x1]
   140006048:	cmp    eax,0x3ff
   14000604d:	ja     0x1400060a3
   14000604f:	mov    ecx,ebx
   140006051:	call   QWORD PTR [rip+0x8601]        # 0x14000e658
   140006057:	mov    rdi,rax
   14000605a:	test   rax,rax
   14000605d:	jne    0x140006066
   14000605f:	mov    ebx,0x8007000e
   140006064:	jmp    0x1400060c5
   140006066:	and    QWORD PTR [rsp+0x38],0x0
   14000606c:	or     r9d,0xffffffff
   140006070:	and    QWORD PTR [rsp+0x30],0x0
   140006076:	mov    r8,rbp
   140006079:	mov    DWORD PTR [rsp+0x28],ebx
   14000607d:	xor    edx,edx
   14000607f:	xor    ecx,ecx
   140006081:	mov    QWORD PTR [rsp+0x20],rax
   140006086:	call   QWORD PTR [rip+0x815c]        # 0x14000e1e8
   14000608c:	test   eax,eax
   14000608e:	je     0x1400060a3
   140006090:	cmp    eax,ebx
   140006092:	ja     0x1400060a3
   140006094:	dec    eax
   140006096:	cmp    BYTE PTR [rax+rdi*1],0x0
   14000609a:	jne    0x1400060a3
   14000609c:	xor    ebx,ebx
   14000609e:	mov    QWORD PTR [rsi],rdi
   1400060a1:	jmp    0x1400060c5
   1400060a3:	call   QWORD PTR [rip+0x8247]        # 0x14000e2f0
   1400060a9:	movzx  ebx,ax
   1400060ac:	or     ebx,0x80070000
   1400060b2:	test   eax,eax
   1400060b4:	cmovle ebx,eax
   1400060b7:	test   rdi,rdi
   1400060ba:	je     0x1400060c5
   1400060bc:	mov    rcx,rdi
   1400060bf:	call   QWORD PTR [rip+0x8583]        # 0x14000e648
   1400060c5:	mov    rbp,QWORD PTR [rsp+0x58]
   1400060ca:	mov    eax,ebx
   1400060cc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400060d1:	mov    rsi,QWORD PTR [rsp+0x60]
   1400060d6:	add    rsp,0x40
   1400060da:	pop    rdi
   1400060db:	ret    
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	int3   
   1400060e1:	int3   
   1400060e2:	int3   
   1400060e3:	int3   
   1400060e4:	mov    rax,rsp
   1400060e7:	mov    QWORD PTR [rax+0x8],rbx
   1400060eb:	mov    QWORD PTR [rax+0x10],rbp
   1400060ef:	mov    QWORD PTR [rax+0x18],rsi
   1400060f3:	mov    QWORD PTR [rax+0x20],rdi
   1400060f7:	push   r14
   1400060f9:	sub    rsp,0x30
   1400060fd:	xor    r14d,r14d
   140006100:	mov    rsi,r8
   140006103:	mov    rbp,rdx
   140006106:	mov    ebx,0x80070057
   14000610b:	mov    edi,r14d
   14000610e:	test   rdx,rdx
   140006111:	je     0x1400061b4
   140006117:	test   r8,r8
   14000611a:	je     0x1400061b4
   140006120:	mov    r8,rdx
   140006123:	mov    DWORD PTR [rax-0x10],r14d
   140006127:	xor    edx,edx
   140006129:	mov    QWORD PTR [rax-0x18],r14
   14000612d:	or     r9d,0xffffffff
   140006131:	xor    ecx,ecx
   140006133:	call   QWORD PTR [rip+0x804f]        # 0x14000e188
   140006139:	mov    ebx,eax
   14000613b:	lea    eax,[rbx-0x1]
   14000613e:	cmp    eax,0x3ff
   140006143:	ja     0x140006192
   140006145:	mov    ecx,ebx
   140006147:	add    rcx,rcx
   14000614a:	call   QWORD PTR [rip+0x8508]        # 0x14000e658
   140006150:	mov    rdi,rax
   140006153:	test   rax,rax
   140006156:	jne    0x14000615f
   140006158:	mov    ebx,0x8007000e
   14000615d:	jmp    0x1400061b4
   14000615f:	mov    DWORD PTR [rsp+0x28],ebx
   140006163:	or     r9d,0xffffffff
   140006167:	mov    r8,rbp
   14000616a:	mov    QWORD PTR [rsp+0x20],rax
   14000616f:	xor    edx,edx
   140006171:	xor    ecx,ecx
   140006173:	call   QWORD PTR [rip+0x800f]        # 0x14000e188
   140006179:	test   eax,eax
   14000617b:	je     0x140006192
   14000617d:	cmp    eax,ebx
   14000617f:	ja     0x140006192
   140006181:	dec    eax
   140006183:	cmp    WORD PTR [rdi+rax*2],r14w
   140006188:	jne    0x140006192
   14000618a:	mov    ebx,r14d
   14000618d:	mov    QWORD PTR [rsi],rdi
   140006190:	jmp    0x1400061b4
   140006192:	call   QWORD PTR [rip+0x8158]        # 0x14000e2f0
   140006198:	movzx  ebx,ax
   14000619b:	or     ebx,0x80070000
   1400061a1:	test   eax,eax
   1400061a3:	cmovle ebx,eax
   1400061a6:	test   rdi,rdi
   1400061a9:	je     0x1400061b4
   1400061ab:	mov    rcx,rdi
   1400061ae:	call   QWORD PTR [rip+0x8494]        # 0x14000e648
   1400061b4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400061b9:	mov    eax,ebx
   1400061bb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400061c0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400061c5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400061ca:	add    rsp,0x30
   1400061ce:	pop    r14
   1400061d0:	ret    
   1400061d1:	int3   
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	int3   
   1400061d5:	int3   
   1400061d6:	int3   
   1400061d7:	int3   
   1400061d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400061dd:	push   rdi
   1400061de:	sub    rsp,0x40
   1400061e2:	mov    rax,QWORD PTR [rip+0xde1f]        # 0x140014008
   1400061e9:	xor    rax,rsp
   1400061ec:	mov    QWORD PTR [rsp+0x38],rax
   1400061f1:	mov    rdi,rcx
   1400061f4:	xor    ebx,ebx
   1400061f6:	lea    rcx,[rsp+0x28]
   1400061fb:	call   QWORD PTR [rip+0x822f]        # 0x14000e430
   140006201:	test   eax,eax
   140006203:	jne    0x140006245
   140006205:	lea    rdx,[rsp+0x20]
   14000620a:	mov    QWORD PTR [rsp+0x20],rbx
   14000620f:	lea    rcx,[rsp+0x28]
   140006214:	call   QWORD PTR [rip+0x821e]        # 0x14000e438
   14000621a:	test   eax,eax
   14000621c:	jne    0x140006245
   14000621e:	mov    rcx,QWORD PTR [rsp+0x20]
   140006223:	call   QWORD PTR [rip+0x81f7]        # 0x14000e420
   140006229:	test   rax,rax
   14000622c:	je     0x140006233
   14000622e:	mov    QWORD PTR [rdi],rax
   140006231:	jmp    0x140006238
   140006233:	mov    ebx,0x8007000e
   140006238:	lea    rcx,[rsp+0x20]
   14000623d:	call   QWORD PTR [rip+0x81fd]        # 0x14000e440
   140006243:	jmp    0x140006253
   140006245:	movzx  ebx,ax
   140006248:	or     ebx,0x80070000
   14000624e:	test   eax,eax
   140006250:	cmovle ebx,eax
   140006253:	mov    eax,ebx
   140006255:	mov    rcx,QWORD PTR [rsp+0x38]
   14000625a:	xor    rcx,rsp
   14000625d:	call   0x14000cc40
   140006262:	mov    rbx,QWORD PTR [rsp+0x58]
   140006267:	add    rsp,0x40
   14000626b:	pop    rdi
   14000626c:	ret    
   14000626d:	int3   
   14000626e:	int3   
   14000626f:	int3   
   140006270:	int3   
   140006271:	int3   
   140006272:	int3   
   140006273:	int3   
   140006274:	mov    QWORD PTR [rsp+0x8],rbx
   140006279:	push   rdi
   14000627a:	sub    rsp,0x20
   14000627e:	xor    edi,edi
   140006280:	mov    rbx,rcx
   140006283:	test   rcx,rcx
   140006286:	je     0x1400062cf
   140006288:	movzx  eax,WORD PTR [rcx]
   14000628b:	jmp    0x1400062ca
   14000628d:	sub    ax,0x2f
   140006291:	cmp    ax,0x2d
   140006295:	ja     0x1400062be
   140006297:	movabs rdx,0x200000000801
   1400062a1:	bt     rdx,rax
   1400062a5:	jae    0x1400062be
   1400062a7:	lea    rax,[rcx+0x2]
   1400062ab:	cmp    WORD PTR [rax],di
   1400062ae:	je     0x1400062be
   1400062b0:	cmp    WORD PTR [rax],0x5c
   1400062b4:	je     0x1400062be
   1400062b6:	cmp    WORD PTR [rax],0x2f
   1400062ba:	cmovne rbx,rax
   1400062be:	call   QWORD PTR [rip+0x8194]        # 0x14000e458
   1400062c4:	mov    rcx,rax
   1400062c7:	movzx  eax,WORD PTR [rax]
   1400062ca:	test   ax,ax
   1400062cd:	jne    0x14000628d
   1400062cf:	mov    rax,rbx
   1400062d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062d7:	add    rsp,0x20
   1400062db:	pop    rdi
   1400062dc:	ret    
   1400062dd:	int3   
   1400062de:	int3   
   1400062df:	int3   
   1400062e0:	int3   
   1400062e1:	int3   
   1400062e2:	int3   
   1400062e3:	int3   
   1400062e4:	mov    rax,rsp
   1400062e7:	mov    QWORD PTR [rax+0x8],rbx
   1400062eb:	mov    QWORD PTR [rax+0x10],rbp
   1400062ef:	mov    QWORD PTR [rax+0x18],rsi
   1400062f3:	mov    QWORD PTR [rax+0x20],rdi
   1400062f7:	push   r12
   1400062f9:	push   r14
   1400062fb:	push   r15
   1400062fd:	sub    rsp,0x20
   140006301:	xor    r12d,r12d
   140006304:	mov    r15,rdx
   140006307:	mov    r14,rcx
   14000630a:	mov    ebx,r12d
   14000630d:	test   rcx,rcx
   140006310:	je     0x140006341
   140006312:	mov    ebx,0x104
   140006317:	mov    r8,rcx
   14000631a:	mov    eax,ebx
   14000631c:	mov    edi,r12d
   14000631f:	cmp    BYTE PTR [r8],r12b
   140006322:	je     0x14000632d
   140006324:	inc    r8
   140006327:	sub    rax,0x1
   14000632b:	jne    0x14000631f
   14000632d:	mov    ebp,0x80070057
   140006332:	test   rax,rax
   140006335:	jne    0x14000633c
   140006337:	mov    rbx,r12
   14000633a:	jmp    0x140006346
   14000633c:	sub    rbx,rax
   14000633f:	jmp    0x140006348
   140006341:	mov    ebp,0x80070057
   140006346:	mov    edi,ebp
   140006348:	test   edi,edi
   14000634a:	cmovs  rbx,r12
   14000634e:	js     0x140006438
   140006354:	mov    ecx,0x18
   140006359:	inc    rbx
   14000635c:	call   QWORD PTR [rip+0x82f6]        # 0x14000e658
   140006362:	mov    rsi,rax
   140006365:	test   rax,rax
   140006368:	je     0x140006433
   14000636e:	xor    eax,eax
   140006370:	mov    ecx,ebx
   140006372:	mov    QWORD PTR [rsi],rax
   140006375:	mov    QWORD PTR [rsi+0x8],rax
   140006379:	mov    QWORD PTR [rsi+0x10],rax
   14000637d:	call   QWORD PTR [rip+0x82d5]        # 0x14000e658
   140006383:	mov    QWORD PTR [rsi],rax
   140006386:	mov    rcx,rax
   140006389:	test   rax,rax
   14000638c:	je     0x140006423
   140006392:	lea    rax,[rbx-0x1]
   140006396:	mov    edx,0x7ffffffe
   14000639b:	cmp    rax,rdx
   14000639e:	mov    edi,r12d
   1400063a1:	cmova  edi,ebp
   1400063a4:	test   edi,edi
   1400063a6:	js     0x1400063e1
   1400063a8:	mov    edi,r12d
   1400063ab:	test   rbx,rbx
   1400063ae:	je     0x1400063d7
   1400063b0:	sub    rdx,rbx
   1400063b3:	sub    r14,rcx
   1400063b6:	lea    rax,[rdx+rbx*1]
   1400063ba:	test   rax,rax
   1400063bd:	je     0x1400063d2
   1400063bf:	mov    al,BYTE PTR [r14+rcx*1]
   1400063c3:	test   al,al
   1400063c5:	je     0x1400063d2
   1400063c7:	mov    BYTE PTR [rcx],al
   1400063c9:	inc    rcx
   1400063cc:	sub    rbx,0x1
   1400063d0:	jne    0x1400063b6
   1400063d2:	test   rbx,rbx
   1400063d5:	jne    0x1400063e6
   1400063d7:	dec    rcx
   1400063da:	mov    edi,0x8007007a
   1400063df:	jmp    0x1400063e6
   1400063e1:	test   rbx,rbx
   1400063e4:	je     0x1400063e9
   1400063e6:	mov    BYTE PTR [rcx],r12b
   1400063e9:	test   edi,edi
   1400063eb:	js     0x140006418
   1400063ed:	mov    rax,QWORD PTR [rsi]
   1400063f0:	test   rax,rax
   1400063f3:	je     0x140006407
   1400063f5:	jmp    0x140006402
   1400063f7:	cmp    BYTE PTR [rax],0x2f
   1400063fa:	jne    0x1400063ff
   1400063fc:	mov    BYTE PTR [rax],0x5c
   1400063ff:	inc    rax
   140006402:	cmp    BYTE PTR [rax],r12b
   140006405:	jne    0x1400063f7
   140006407:	mov    rax,QWORD PTR [r15]
   14000640a:	test   rax,rax
   14000640d:	je     0x140006413
   14000640f:	mov    QWORD PTR [rsi+0x8],rax
   140006413:	mov    QWORD PTR [r15],rsi
   140006416:	jmp    0x140006438
   140006418:	mov    rcx,QWORD PTR [rsi]
   14000641b:	call   QWORD PTR [rip+0x8227]        # 0x14000e648
   140006421:	jmp    0x140006428
   140006423:	mov    edi,0x8007000e
   140006428:	mov    rcx,rsi
   14000642b:	call   QWORD PTR [rip+0x8217]        # 0x14000e648
   140006431:	jmp    0x140006438
   140006433:	mov    edi,0x8007000e
   140006438:	mov    rbx,QWORD PTR [rsp+0x40]
   14000643d:	mov    eax,edi
   14000643f:	mov    rdi,QWORD PTR [rsp+0x58]
   140006444:	mov    rbp,QWORD PTR [rsp+0x48]
   140006449:	mov    rsi,QWORD PTR [rsp+0x50]
   14000644e:	add    rsp,0x20
   140006452:	pop    r15
   140006454:	pop    r14
   140006456:	pop    r12
   140006458:	ret    
   140006459:	int3   
   14000645a:	int3   
   14000645b:	int3   
   14000645c:	int3   
   14000645d:	int3   
   14000645e:	int3   
   14000645f:	int3   
   140006460:	mov    QWORD PTR [rsp+0x8],rbx
   140006465:	push   rdi
   140006466:	sub    rsp,0x20
   14000646a:	and    QWORD PTR [rsp+0x40],0x0
   140006470:	lea    r8,[rsp+0x40]
   140006475:	mov    rdi,rdx
   140006478:	mov    rdx,rcx
   14000647b:	call   0x140005ff0
   140006480:	mov    ebx,eax
   140006482:	test   eax,eax
   140006484:	js     0x1400064a0
   140006486:	mov    rcx,QWORD PTR [rsp+0x40]
   14000648b:	mov    rdx,rdi
   14000648e:	call   0x1400062e4
   140006493:	mov    rcx,QWORD PTR [rsp+0x40]
   140006498:	mov    ebx,eax
   14000649a:	call   QWORD PTR [rip+0x81a8]        # 0x14000e648
   1400064a0:	mov    eax,ebx
   1400064a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400064a7:	add    rsp,0x20
   1400064ab:	pop    rdi
   1400064ac:	ret    
   1400064ad:	int3   
   1400064ae:	int3   
   1400064af:	int3   
   1400064b0:	int3   
   1400064b1:	int3   
   1400064b2:	int3   
   1400064b3:	int3   
   1400064b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400064b9:	push   rbp
   1400064ba:	push   rsi
   1400064bb:	push   rdi
   1400064bc:	sub    rsp,0x150
   1400064c3:	mov    rax,QWORD PTR [rip+0xdb3e]        # 0x140014008
   1400064ca:	xor    rax,rsp
   1400064cd:	mov    QWORD PTR [rsp+0x140],rax
   1400064d5:	xor    edi,edi
   1400064d7:	mov    rsi,r8
   1400064da:	mov    rbx,rdx
   1400064dd:	mov    rbp,rcx
   1400064e0:	test   rdx,rdx
   1400064e3:	je     0x14000654b
   1400064e5:	xor    edx,edx
   1400064e7:	mov    BYTE PTR [rsp+0x30],0x0
   1400064ec:	mov    r8d,0x103
   1400064f2:	lea    rcx,[rsp+0x31]
   1400064f7:	call   0x14000d326
   1400064fc:	mov    rdx,QWORD PTR [rbx]
   1400064ff:	lea    r9,[rsp+0x30]
   140006504:	mov    r8d,0x104
   14000650a:	mov    DWORD PTR [rsp+0x20],0x104
   140006512:	mov    rcx,rbp
   140006515:	call   0x14000671c
   14000651a:	test   eax,eax
   14000651c:	je     0x14000654b
   14000651e:	mov    rdx,QWORD PTR [rsi]
   140006521:	lea    rcx,[rsp+0x30]
   140006526:	call   0x140006578
   14000652b:	test   eax,eax
   14000652d:	jne    0x140006542
   14000652f:	mov    rdx,rsi
   140006532:	lea    rcx,[rsp+0x30]
   140006537:	call   0x1400062e4
   14000653c:	mov    edi,eax
   14000653e:	test   eax,eax
   140006540:	js     0x14000654b
   140006542:	mov    rbx,QWORD PTR [rbx+0x8]
   140006546:	test   rbx,rbx
   140006549:	jne    0x1400064e5
   14000654b:	mov    eax,edi
   14000654d:	mov    rcx,QWORD PTR [rsp+0x140]
   140006555:	xor    rcx,rsp
   140006558:	call   0x14000cc40
   14000655d:	mov    rbx,QWORD PTR [rsp+0x188]
   140006565:	add    rsp,0x150
   14000656c:	pop    rdi
   14000656d:	pop    rsi
   14000656e:	pop    rbp
   14000656f:	ret    
   140006570:	int3   
   140006571:	int3   
   140006572:	int3   
   140006573:	int3   
   140006574:	int3   
   140006575:	int3   
   140006576:	int3   
   140006577:	int3   
   140006578:	mov    QWORD PTR [rsp+0x8],rbx
   14000657d:	mov    QWORD PTR [rsp+0x18],rsi
   140006582:	push   rdi
   140006583:	sub    rsp,0x150
   14000658a:	mov    rax,QWORD PTR [rip+0xda77]        # 0x140014008
   140006591:	xor    rax,rsp
   140006594:	mov    QWORD PTR [rsp+0x140],rax
   14000659c:	mov    rsi,rdx
   14000659f:	mov    rbx,rcx
   1400065a2:	xor    edi,edi
   1400065a4:	lea    rcx,[rsp+0x31]
   1400065a9:	xor    edx,edx
   1400065ab:	mov    BYTE PTR [rsp+0x30],dil
   1400065b0:	mov    r8d,0x103
   1400065b6:	call   0x14000d326
   1400065bb:	xor    r9d,r9d
   1400065be:	mov    DWORD PTR [rsp+0x28],0x100
   1400065c6:	mov    r8,rbx
   1400065c9:	mov    QWORD PTR [rsp+0x20],rdi
   1400065ce:	mov    edx,0x104
   1400065d3:	lea    rcx,[rsp+0x30]
   1400065d8:	call   0x140005990
   1400065dd:	test   eax,eax
   1400065df:	js     0x140006624
   1400065e1:	lea    rax,[rsp+0x30]
   1400065e6:	cmp    BYTE PTR [rsp+0x30],dil
   1400065eb:	je     0x1400065fd
   1400065ed:	cmp    BYTE PTR [rax],0x2f
   1400065f0:	jne    0x1400065f5
   1400065f2:	mov    BYTE PTR [rax],0x5c
   1400065f5:	inc    rax
   1400065f8:	cmp    BYTE PTR [rax],dil
   1400065fb:	jne    0x1400065ed
   1400065fd:	test   rsi,rsi
   140006600:	je     0x140006624
   140006602:	cmp    QWORD PTR [rsi],rdi
   140006605:	je     0x140006619
   140006607:	mov    rdx,QWORD PTR [rsi]
   14000660a:	lea    rcx,[rsp+0x30]
   14000660f:	call   QWORD PTR [rip+0x7d93]        # 0x14000e3a8
   140006615:	test   eax,eax
   140006617:	je     0x14000661f
   140006619:	mov    rsi,QWORD PTR [rsi+0x8]
   14000661d:	jmp    0x1400065fd
   14000661f:	mov    edi,0x1
   140006624:	mov    eax,edi
   140006626:	mov    rcx,QWORD PTR [rsp+0x140]
   14000662e:	xor    rcx,rsp
   140006631:	call   0x14000cc40
   140006636:	lea    r11,[rsp+0x150]
   14000663e:	mov    rbx,QWORD PTR [r11+0x10]
   140006642:	mov    rsi,QWORD PTR [r11+0x20]
   140006646:	mov    rsp,r11
   140006649:	pop    rdi
   14000664a:	ret    
   14000664b:	int3   
   14000664c:	int3   
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	int3   
   140006651:	int3   
   140006652:	int3   
   140006653:	int3   
   140006654:	mov    QWORD PTR [rsp+0x18],rbx
   140006659:	push   rbp
   14000665a:	push   rsi
   14000665b:	push   rdi
   14000665c:	sub    rsp,0x150
   140006663:	mov    rax,QWORD PTR [rip+0xd99e]        # 0x140014008
   14000666a:	xor    rax,rsp
   14000666d:	mov    QWORD PTR [rsp+0x140],rax
   140006675:	xor    edi,edi
   140006677:	mov    rbp,rdx
   14000667a:	mov    rsi,rcx
   14000667d:	test   rcx,rcx
   140006680:	je     0x1400066ee
   140006682:	mov    rbx,QWORD PTR [rcx+0x10]
   140006686:	test   rbx,rbx
   140006689:	je     0x1400066ee
   14000668b:	mov    edi,0x1
   140006690:	cmp    QWORD PTR [rbx],0x0
   140006694:	je     0x1400066e1
   140006696:	xor    edx,edx
   140006698:	mov    BYTE PTR [rsp+0x30],0x0
   14000669d:	mov    r8d,0x103
   1400066a3:	lea    rcx,[rsp+0x31]
   1400066a8:	call   0x14000d326
   1400066ad:	mov    rdx,QWORD PTR [rbx]
   1400066b0:	lea    rcx,[rsi+0x20]
   1400066b4:	lea    r9,[rsp+0x30]
   1400066b9:	mov    DWORD PTR [rsp+0x20],0x104
   1400066c1:	mov    r8d,0x104
   1400066c7:	call   0x14000671c
   1400066cc:	test   eax,eax
   1400066ce:	je     0x1400066ec
   1400066d0:	mov    rdx,rbp
   1400066d3:	lea    rcx,[rsp+0x30]
   1400066d8:	call   0x140006578
   1400066dd:	test   eax,eax
   1400066df:	je     0x1400066ec
   1400066e1:	mov    rbx,QWORD PTR [rbx+0x8]
   1400066e5:	test   rbx,rbx
   1400066e8:	je     0x1400066ee
   1400066ea:	jmp    0x140006690
   1400066ec:	xor    edi,edi
   1400066ee:	mov    eax,edi
   1400066f0:	mov    rcx,QWORD PTR [rsp+0x140]
   1400066f8:	xor    rcx,rsp
   1400066fb:	call   0x14000cc40
   140006700:	mov    rbx,QWORD PTR [rsp+0x180]
   140006708:	add    rsp,0x150
   14000670f:	pop    rdi
   140006710:	pop    rsi
   140006711:	pop    rbp
   140006712:	ret    
   140006713:	int3   
   140006714:	int3   
   140006715:	int3   
   140006716:	int3   
   140006717:	int3   
   140006718:	int3   
   140006719:	int3   
   14000671a:	int3   
   14000671b:	int3   
   14000671c:	mov    QWORD PTR [rsp+0x8],rbx
   140006721:	mov    QWORD PTR [rsp+0x10],rbp
   140006726:	mov    QWORD PTR [rsp+0x18],rsi
   14000672b:	push   rdi
   14000672c:	push   r14
   14000672e:	push   r15
   140006730:	sub    rsp,0x20
   140006734:	xor    edi,edi
   140006736:	mov    r15d,r8d
   140006739:	or     rbp,0xffffffffffffffff
   14000673d:	mov    BYTE PTR [r9],dil
   140006740:	mov    rbx,r9
   140006743:	mov    r14,rdx
   140006746:	mov    rsi,rcx
   140006749:	test   rcx,rcx
   14000674c:	je     0x14000675a
   14000674e:	mov    rdi,rbp
   140006751:	inc    rdi
   140006754:	cmp    BYTE PTR [rcx+rdi*1],0x0
   140006758:	jne    0x140006751
   14000675a:	mov    rcx,rdx
   14000675d:	call   0x140007e78
   140006762:	test   eax,eax
   140006764:	js     0x14000683b
   14000676a:	mov    rcx,rsi
   14000676d:	call   0x140007e78
   140006772:	test   eax,eax
   140006774:	js     0x14000683b
   14000677a:	mov    ecx,DWORD PTR [rsp+0x60]
   14000677e:	test   edi,edi
   140006780:	je     0x140006813
   140006786:	sub    ecx,edi
   140006788:	cmp    ecx,0x1
   14000678b:	jle    0x14000683b
   140006791:	xor    r9d,r9d
   140006794:	mov    eax,0x80070057
   140006799:	cmp    r15,0x7fffffff
   1400067a0:	mov    r8,r15
   1400067a3:	cmova  r9d,eax
   1400067a7:	test   r9d,r9d
   1400067aa:	js     0x1400067ec
   1400067ac:	mov    r10d,0x7ffffffe
   1400067b2:	xor    r9d,r9d
   1400067b5:	sub    r10,r15
   1400067b8:	mov    rdx,rbx
   1400067bb:	sub    rsi,rbx
   1400067be:	lea    rax,[r10+r8*1]
   1400067c2:	test   rax,rax
   1400067c5:	je     0x1400067d9
   1400067c7:	mov    al,BYTE PTR [rsi+rdx*1]
   1400067ca:	test   al,al
   1400067cc:	je     0x1400067d9
   1400067ce:	mov    BYTE PTR [rdx],al
   1400067d0:	inc    rdx
   1400067d3:	sub    r8,0x1
   1400067d7:	jne    0x1400067be
   1400067d9:	test   r8,r8
   1400067dc:	jne    0x1400067e7
   1400067de:	dec    rdx
   1400067e1:	mov    r9d,0x8007007a
   1400067e7:	mov    BYTE PTR [rdx],0x0
   1400067ea:	jmp    0x1400067ef
   1400067ec:	mov    BYTE PTR [rbx],0x0
   1400067ef:	test   r9d,r9d
   1400067f2:	js     0x14000683b
   1400067f4:	movsxd rdx,edi
   1400067f7:	mov    al,BYTE PTR [rdx+rbx*1-0x1]
   1400067fb:	test   al,al
   1400067fd:	je     0x14000680f
   1400067ff:	cmp    al,0x5c
   140006801:	je     0x14000680f
   140006803:	cmp    al,0x3a
   140006805:	je     0x14000680f
   140006807:	mov    WORD PTR [rdx+rbx*1],0x5c
   14000680d:	dec    ecx
   14000680f:	test   ecx,ecx
   140006811:	jle    0x14000683b
   140006813:	cmp    BYTE PTR [r14],0x0
   140006817:	je     0x14000683b
   140006819:	inc    rbp
   14000681c:	cmp    BYTE PTR [r14+rbp*1],0x0
   140006821:	jne    0x140006819
   140006823:	sub    ecx,ebp
   140006825:	test   ecx,ecx
   140006827:	jle    0x14000683b
   140006829:	mov    rdx,r15
   14000682c:	mov    r8,r14
   14000682f:	mov    rcx,rbx
   140006832:	call   0x140005c9c
   140006837:	test   eax,eax
   140006839:	jns    0x140006861
   14000683b:	xor    eax,eax
   14000683d:	mov    rbx,QWORD PTR [rsp+0x40]
   140006842:	mov    rbp,QWORD PTR [rsp+0x48]
   140006847:	mov    rsi,QWORD PTR [rsp+0x50]
   14000684c:	add    rsp,0x20
   140006850:	pop    r15
   140006852:	pop    r14
   140006854:	pop    rdi
   140006855:	ret    
   140006856:	cmp    BYTE PTR [rbx],0x2f
   140006859:	jne    0x14000685e
   14000685b:	mov    BYTE PTR [rbx],0x5c
   14000685e:	inc    rbx
   140006861:	cmp    BYTE PTR [rbx],0x0
   140006864:	jne    0x140006856
   140006866:	mov    eax,0x1
   14000686b:	jmp    0x14000683d
   14000686d:	int3   
   14000686e:	int3   
   14000686f:	int3   
   140006870:	int3   
   140006871:	int3   
   140006872:	int3   
   140006873:	int3   
   140006874:	mov    rax,rsp
   140006877:	mov    QWORD PTR [rax+0x10],rbx
   14000687b:	push   rbp
   14000687c:	push   rsi
   14000687d:	push   rdi
   14000687e:	push   r12
   140006880:	push   r13
   140006882:	push   r14
   140006884:	push   r15
   140006886:	sub    rsp,0x30
   14000688a:	xor    edi,edi
   14000688c:	xor    ebx,ebx
   14000688e:	xor    r15d,r15d
   140006891:	mov    QWORD PTR [rax+0x8],rdi
   140006895:	xor    esi,esi
   140006897:	mov    QWORD PTR [rax+0x20],rbx
   14000689b:	or     r14,0xffffffffffffffff
   14000689f:	mov    r13,r8
   1400068a2:	lea    ebp,[rdi+0x2]
   1400068a5:	mov    r12,rdx
   1400068a8:	test   rcx,rcx
   1400068ab:	je     0x1400068d3
   1400068ad:	lea    r8,[rax+0x8]
   1400068b1:	mov    rdx,rcx
   1400068b4:	call   0x140005ff0
   1400068b9:	mov    rdi,QWORD PTR [rsp+0x70]
   1400068be:	test   eax,eax
   1400068c0:	js     0x14000694e
   1400068c6:	mov    rax,r14
   1400068c9:	inc    rax
   1400068cc:	cmp    BYTE PTR [rdi+rax*1],bl
   1400068cf:	jne    0x1400068c9
   1400068d1:	add    ebp,eax
   1400068d3:	lea    r8,[rsp+0x88]
   1400068db:	mov    rdx,r12
   1400068de:	call   0x140005ff0
   1400068e3:	mov    rbx,QWORD PTR [rsp+0x88]
   1400068eb:	test   eax,eax
   1400068ed:	js     0x14000694e
   1400068ef:	inc    r14
   1400068f2:	cmp    BYTE PTR [rbx+r14*1],sil
   1400068f6:	jne    0x1400068ef
   1400068f8:	add    ebp,r14d
   1400068fb:	mov    ecx,ebp
   1400068fd:	mov    r14d,ebp
   140006900:	call   QWORD PTR [rip+0x7d52]        # 0x14000e658
   140006906:	mov    rsi,rax
   140006909:	test   rax,rax
   14000690c:	je     0x14000694e
   14000690e:	mov    r8d,r14d
   140006911:	xor    edx,edx
   140006913:	mov    rcx,rax
   140006916:	call   0x14000d326
   14000691b:	test   ebp,ebp
   14000691d:	je     0x14000694e
   14000691f:	mov    r9,rsi
   140006922:	mov    DWORD PTR [rsp+0x20],ebp
   140006926:	mov    r8d,ebp
   140006929:	mov    rdx,rbx
   14000692c:	mov    rcx,rdi
   14000692f:	call   0x14000671c
   140006934:	test   eax,eax
   140006936:	je     0x14000694e
   140006938:	mov    r8,r13
   14000693b:	mov    rdx,rsi
   14000693e:	call   0x1400060e4
   140006943:	test   eax,eax
   140006945:	mov    ecx,0x1
   14000694a:	cmovns r15d,ecx
   14000694e:	test   rdi,rdi
   140006951:	je     0x14000695c
   140006953:	mov    rcx,rdi
   140006956:	call   QWORD PTR [rip+0x7cec]        # 0x14000e648
   14000695c:	test   rbx,rbx
   14000695f:	je     0x14000696a
   140006961:	mov    rcx,rbx
   140006964:	call   QWORD PTR [rip+0x7cde]        # 0x14000e648
   14000696a:	test   rsi,rsi
   14000696d:	je     0x140006978
   14000696f:	mov    rcx,rsi
   140006972:	call   QWORD PTR [rip+0x7cd0]        # 0x14000e648
   140006978:	mov    eax,r15d
   14000697b:	mov    rbx,QWORD PTR [rsp+0x78]
   140006980:	add    rsp,0x30
   140006984:	pop    r15
   140006986:	pop    r14
   140006988:	pop    r13
   14000698a:	pop    r12
   14000698c:	pop    rdi
   14000698d:	pop    rsi
   14000698e:	pop    rbp
   14000698f:	ret    
   140006990:	int3   
   140006991:	int3   
   140006992:	int3   
   140006993:	int3   
   140006994:	int3   
   140006995:	int3   
   140006996:	int3   
   140006997:	int3   
   140006998:	mov    QWORD PTR [rsp+0x18],rbx
   14000699d:	mov    QWORD PTR [rsp+0x20],rsi
   1400069a2:	push   rdi
   1400069a3:	sub    rsp,0x150
   1400069aa:	mov    rax,QWORD PTR [rip+0xd657]        # 0x140014008
   1400069b1:	xor    rax,rsp
   1400069b4:	mov    QWORD PTR [rsp+0x140],rax
   1400069bc:	xor    edi,edi
   1400069be:	mov    rbx,rdx
   1400069c1:	mov    rsi,rcx
   1400069c4:	test   rdx,rdx
   1400069c7:	je     0x140006a3f
   1400069c9:	cmp    DWORD PTR [rbx+0x10],0x0
   1400069cd:	jne    0x140006a36
   1400069cf:	cmp    QWORD PTR [rbx],0x0
   1400069d3:	je     0x140006a36
   1400069d5:	xor    edx,edx
   1400069d7:	mov    BYTE PTR [rsp+0x30],0x0
   1400069dc:	mov    r8d,0x103
   1400069e2:	lea    rcx,[rsp+0x31]
   1400069e7:	call   0x14000d326
   1400069ec:	mov    rdx,QWORD PTR [rbx]
   1400069ef:	lea    r9,[rsp+0x30]
   1400069f4:	mov    r8d,0x104
   1400069fa:	mov    DWORD PTR [rsp+0x20],0x104
   140006a02:	mov    rcx,rsi
   140006a05:	call   0x14000671c
   140006a0a:	test   eax,eax
   140006a0c:	je     0x140006a31
   140006a0e:	mov    edx,0x80
   140006a13:	lea    rcx,[rsp+0x30]
   140006a18:	call   QWORD PTR [rip+0x7822]        # 0x14000e240
   140006a1e:	test   eax,eax
   140006a20:	je     0x140006a31
   140006a22:	lea    rcx,[rsp+0x30]
   140006a27:	call   QWORD PTR [rip+0x7933]        # 0x14000e360
   140006a2d:	test   eax,eax
   140006a2f:	jne    0x140006a36
   140006a31:	mov    edi,0x1
   140006a36:	mov    rbx,QWORD PTR [rbx+0x8]
   140006a3a:	test   rbx,rbx
   140006a3d:	jne    0x1400069c9
   140006a3f:	mov    eax,edi
   140006a41:	mov    rcx,QWORD PTR [rsp+0x140]
   140006a49:	xor    rcx,rsp
   140006a4c:	call   0x14000cc40
   140006a51:	lea    r11,[rsp+0x150]
   140006a59:	mov    rbx,QWORD PTR [r11+0x20]
   140006a5d:	mov    rsi,QWORD PTR [r11+0x28]
   140006a61:	mov    rsp,r11
   140006a64:	pop    rdi
   140006a65:	ret    
   140006a66:	int3   
   140006a67:	int3   
   140006a68:	int3   
   140006a69:	int3   
   140006a6a:	int3   
   140006a6b:	int3   
   140006a6c:	mov    rax,rsp
   140006a6f:	mov    QWORD PTR [rax+0x10],rbx
   140006a73:	mov    QWORD PTR [rax+0x18],rsi
   140006a77:	mov    QWORD PTR [rax+0x20],rdi
   140006a7b:	push   rbp
   140006a7c:	lea    rbp,[rax-0x198]
   140006a83:	sub    rsp,0x290
   140006a8a:	mov    rax,QWORD PTR [rip+0xd577]        # 0x140014008
   140006a91:	xor    rax,rsp
   140006a94:	mov    QWORD PTR [rbp+0x180],rax
   140006a9b:	mov    rsi,rcx
   140006a9e:	xor    edi,edi
   140006aa0:	lea    rcx,[rbp+0x71]
   140006aa4:	mov    BYTE PTR [rbp+0x70],dil
   140006aa8:	xor    edx,edx
   140006aaa:	mov    r8d,0x103
   140006ab0:	mov    ebx,edi
   140006ab2:	call   0x14000d326
   140006ab7:	test   rsi,rsi
   140006aba:	je     0x140006c84
   140006ac0:	cmp    BYTE PTR [rsi],dil
   140006ac3:	je     0x140006c84
   140006ac9:	mov    rcx,rsi
   140006acc:	call   QWORD PTR [rip+0x76ce]        # 0x14000e1a0
   140006ad2:	test   eax,eax
   140006ad4:	jne    0x140006c84
   140006ada:	mov    r9d,0x104
   140006ae0:	lea    rax,[rbp+0x70]
   140006ae4:	mov    r8,rsi
   140006ae7:	lea    rcx,[rbp+0x70]
   140006aeb:	mov    edx,r9d
   140006aee:	sub    r8,rax
   140006af1:	lea    rax,[rdx+0x7ffffefa]
   140006af8:	test   rax,rax
   140006afb:	je     0x140006b10
   140006afd:	mov    al,BYTE PTR [r8+rcx*1]
   140006b01:	test   al,al
   140006b03:	je     0x140006b10
   140006b05:	mov    BYTE PTR [rcx],al
   140006b07:	inc    rcx
   140006b0a:	sub    rdx,0x1
   140006b0e:	jne    0x140006af1
   140006b10:	test   rdx,rdx
   140006b13:	jne    0x140006b1d
   140006b15:	dec    rcx
   140006b18:	mov    ebx,0x8007007a
   140006b1d:	mov    BYTE PTR [rcx],dil
   140006b20:	test   ebx,ebx
   140006b22:	js     0x140006c84
   140006b28:	lea    rcx,[rbp+0x70]
   140006b2c:	or     rax,0xffffffffffffffff
   140006b30:	inc    rax
   140006b33:	cmp    BYTE PTR [rcx+rax*1],dil
   140006b37:	jne    0x140006b30
   140006b39:	sub    r9,rax
   140006b3c:	lea    r8,[rip+0xa4e9]        # 0x14001102c
   140006b43:	mov    rdx,r9
   140006b46:	lea    rcx,[rbp+0x70]
   140006b4a:	call   0x140005c9c
   140006b4f:	mov    ebx,eax
   140006b51:	test   eax,eax
   140006b53:	js     0x140006c84
   140006b59:	lea    rdx,[rsp+0x30]
   140006b5e:	lea    rcx,[rbp+0x70]
   140006b62:	call   QWORD PTR [rip+0x7628]        # 0x14000e190
   140006b68:	mov    rdi,rax
   140006b6b:	cmp    rax,0xffffffffffffffff
   140006b6f:	jne    0x140006b8a
   140006b71:	call   QWORD PTR [rip+0x7779]        # 0x14000e2f0
   140006b77:	movzx  ebx,ax
   140006b7a:	or     ebx,0x80070000
   140006b80:	test   eax,eax
   140006b82:	cmovle ebx,eax
   140006b85:	jmp    0x140006c84
   140006b8a:	lea    rdx,[rip+0xa49f]        # 0x140011030
   140006b91:	lea    rcx,[rsp+0x5c]
   140006b96:	call   QWORD PTR [rip+0x767c]        # 0x14000e218
   140006b9c:	test   eax,eax
   140006b9e:	je     0x140006c26
   140006ba4:	lea    rdx,[rip+0xa489]        # 0x140011034
   140006bab:	lea    rcx,[rsp+0x5c]
   140006bb0:	call   QWORD PTR [rip+0x7662]        # 0x14000e218
   140006bb6:	test   eax,eax
   140006bb8:	je     0x140006c26
   140006bba:	lea    rax,[rsp+0x5c]
   140006bbf:	mov    r9,rsi
   140006bc2:	lea    r8,[rip+0xa46f]        # 0x140011038
   140006bc9:	mov    QWORD PTR [rsp+0x20],rax
   140006bce:	mov    edx,0x103
   140006bd3:	lea    rcx,[rbp+0x70]
   140006bd7:	call   0x140005d58
   140006bdc:	mov    ebx,eax
   140006bde:	test   eax,eax
   140006be0:	js     0x140006c75
   140006be6:	test   BYTE PTR [rsp+0x30],0x10
   140006beb:	lea    rcx,[rbp+0x70]
   140006bef:	je     0x140006c0d
   140006bf1:	mov    edx,0x90
   140006bf6:	call   QWORD PTR [rip+0x7644]        # 0x14000e240
   140006bfc:	lea    rcx,[rbp+0x70]
   140006c00:	call   0x140006a6c
   140006c05:	mov    ebx,eax
   140006c07:	test   eax,eax
   140006c09:	js     0x140006c75
   140006c0b:	jmp    0x140006c26
   140006c0d:	mov    edx,0x80
   140006c12:	call   QWORD PTR [rip+0x7628]        # 0x14000e240
   140006c18:	lea    rcx,[rbp+0x70]
   140006c1c:	call   QWORD PTR [rip+0x773e]        # 0x14000e360
   140006c22:	test   eax,eax
   140006c24:	je     0x140006c61
   140006c26:	lea    rdx,[rsp+0x30]
   140006c2b:	mov    rcx,rdi
   140006c2e:	call   QWORD PTR [rip+0x758c]        # 0x14000e1c0
   140006c34:	test   eax,eax
   140006c36:	jne    0x140006b8a
   140006c3c:	call   QWORD PTR [rip+0x76ae]        # 0x14000e2f0
   140006c42:	cmp    eax,0x12
   140006c45:	jne    0x140006c61
   140006c47:	mov    rcx,rdi
   140006c4a:	call   QWORD PTR [rip+0x7558]        # 0x14000e1a8
   140006c50:	mov    rcx,rsi
   140006c53:	or     rdi,0xffffffffffffffff
   140006c57:	call   QWORD PTR [rip+0x7543]        # 0x14000e1a0
   140006c5d:	test   eax,eax
   140006c5f:	jne    0x140006c84
   140006c61:	call   QWORD PTR [rip+0x7689]        # 0x14000e2f0
   140006c67:	movzx  ebx,ax
   140006c6a:	or     ebx,0x80070000
   140006c70:	test   eax,eax
   140006c72:	cmovle ebx,eax
   140006c75:	cmp    rdi,0xffffffffffffffff
   140006c79:	je     0x140006c84
   140006c7b:	mov    rcx,rdi
   140006c7e:	call   QWORD PTR [rip+0x7524]        # 0x14000e1a8
   140006c84:	mov    eax,ebx
   140006c86:	mov    rcx,QWORD PTR [rbp+0x180]
   140006c8d:	xor    rcx,rsp
   140006c90:	call   0x14000cc40
   140006c95:	lea    r11,[rsp+0x290]
   140006c9d:	mov    rbx,QWORD PTR [r11+0x18]
   140006ca1:	mov    rsi,QWORD PTR [r11+0x20]
   140006ca5:	mov    rdi,QWORD PTR [r11+0x28]
   140006ca9:	mov    rsp,r11
   140006cac:	pop    rbp
   140006cad:	ret    
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	int3   
   140006cb1:	int3   
   140006cb2:	int3   
   140006cb3:	int3   
   140006cb4:	mov    rax,rsp
   140006cb7:	mov    QWORD PTR [rax+0x8],rbx
   140006cbb:	push   rdi
   140006cbc:	sub    rsp,0x40
   140006cc0:	and    QWORD PTR [rax-0x18],0x0
   140006cc5:	xor    r9d,r9d
   140006cc8:	mov    DWORD PTR [rax-0x20],0x80
   140006ccf:	mov    edx,0xa0000
   140006cd4:	mov    DWORD PTR [rax-0x28],0x3
   140006cdb:	lea    r8d,[r9+0x1]
   140006cdf:	call   QWORD PTR [rip+0x76cb]        # 0x14000e3b0
   140006ce5:	mov    rdi,rax
   140006ce8:	cmp    rax,0xffffffffffffffff
   140006cec:	je     0x140006d45
   140006cee:	and    QWORD PTR [rsp+0x60],0x0
   140006cf4:	lea    rdx,[rsp+0x60]
   140006cf9:	lea    rcx,[rip+0xa340]        # 0x140011040
   140006d00:	call   QWORD PTR [rip+0x73aa]        # 0x14000e0b0
   140006d06:	test   eax,eax
   140006d08:	je     0x140006d26
   140006d0a:	mov    r8,QWORD PTR [rsp+0x60]
   140006d0f:	mov    rcx,rdi
   140006d12:	call   0x140009dc4
   140006d17:	mov    rcx,QWORD PTR [rsp+0x60]
   140006d1c:	mov    ebx,eax
   140006d1e:	call   QWORD PTR [rip+0x74b4]        # 0x14000e1d8
   140006d24:	jmp    0x140006d3a
   140006d26:	call   QWORD PTR [rip+0x75c4]        # 0x14000e2f0
   140006d2c:	movzx  ebx,ax
   140006d2f:	or     ebx,0x80070000
   140006d35:	test   eax,eax
   140006d37:	cmovle ebx,eax
   140006d3a:	mov    rcx,rdi
   140006d3d:	call   QWORD PTR [rip+0x762d]        # 0x14000e370
   140006d43:	jmp    0x140006d59
   140006d45:	call   QWORD PTR [rip+0x75a5]        # 0x14000e2f0
   140006d4b:	movzx  ebx,ax
   140006d4e:	or     ebx,0x80070000
   140006d54:	test   eax,eax
   140006d56:	cmovle ebx,eax
   140006d59:	mov    eax,ebx
   140006d5b:	mov    rbx,QWORD PTR [rsp+0x50]
   140006d60:	add    rsp,0x40
   140006d64:	pop    rdi
   140006d65:	ret    
   140006d66:	int3   
   140006d67:	int3   
   140006d68:	int3   
   140006d69:	int3   
   140006d6a:	int3   
   140006d6b:	int3   
   140006d6c:	mov    QWORD PTR [rsp+0x10],rbx
   140006d71:	mov    QWORD PTR [rsp+0x18],rbp
   140006d76:	push   rdi
   140006d77:	sub    rsp,0x20
   140006d7b:	xor    ebp,ebp
   140006d7d:	mov    rdi,rcx
   140006d80:	mov    ebx,ebp
   140006d82:	test   rcx,rcx
   140006d85:	je     0x140006de2
   140006d87:	mov    rdx,QWORD PTR [rdi]
   140006d8a:	test   rdx,rdx
   140006d8d:	je     0x140006ddd
   140006d8f:	lea    r8,[rsp+0x30]
   140006d94:	mov    QWORD PTR [rsp+0x30],rbp
   140006d99:	call   0x1400060e4
   140006d9e:	mov    ebx,eax
   140006da0:	test   eax,eax
   140006da2:	js     0x140006de2
   140006da4:	mov    rcx,QWORD PTR [rsp+0x30]
   140006da9:	call   0x140006dfc
   140006dae:	mov    ebx,eax
   140006db0:	cmp    eax,0x1
   140006db3:	jne    0x140006dc1
   140006db5:	mov    rcx,QWORD PTR [rsp+0x30]
   140006dba:	call   0x140006cb4
   140006dbf:	mov    ebx,eax
   140006dc1:	mov    rcx,QWORD PTR [rsp+0x30]
   140006dc6:	cmp    ebx,0x80070002
   140006dcc:	cmove  ebx,ebp
   140006dcf:	call   QWORD PTR [rip+0x7873]        # 0x14000e648
   140006dd5:	test   ebx,ebx
   140006dd7:	js     0x140006de2
   140006dd9:	mov    rdi,QWORD PTR [rdi+0x8]
   140006ddd:	test   rdi,rdi
   140006de0:	jne    0x140006d87
   140006de2:	mov    rbp,QWORD PTR [rsp+0x40]
   140006de7:	mov    eax,ebx
   140006de9:	mov    rbx,QWORD PTR [rsp+0x38]
   140006dee:	add    rsp,0x20
   140006df2:	pop    rdi
   140006df3:	ret    
   140006df4:	int3   
   140006df5:	int3   
   140006df6:	int3   
   140006df7:	int3   
   140006df8:	int3   
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	mov    rax,rsp
   140006dff:	mov    QWORD PTR [rax+0x8],rbx
   140006e03:	push   rdi
   140006e04:	sub    rsp,0x40
   140006e08:	and    QWORD PTR [rax-0x18],0x0
   140006e0d:	xor    r9d,r9d
   140006e10:	and    DWORD PTR [rax-0x20],0x0
   140006e14:	xor    r8d,r8d
   140006e17:	mov    edx,0x20000
   140006e1c:	mov    DWORD PTR [rax-0x28],0x3
   140006e23:	call   QWORD PTR [rip+0x7587]        # 0x14000e3b0
   140006e29:	mov    rdi,rax
   140006e2c:	cmp    rax,0xffffffffffffffff
   140006e30:	je     0x140006eb9
   140006e36:	and    QWORD PTR [rsp+0x68],0x0
   140006e3c:	lea    rdx,[rsp+0x68]
   140006e41:	lea    rcx,[rip+0xa1f8]        # 0x140011040
   140006e48:	call   QWORD PTR [rip+0x7262]        # 0x14000e0b0
   140006e4e:	test   eax,eax
   140006e50:	je     0x140006e9a
   140006e52:	and    QWORD PTR [rsp+0x60],0x0
   140006e58:	lea    rdx,[rsp+0x60]
   140006e5d:	mov    rcx,rdi
   140006e60:	call   0x140009ef8
   140006e65:	mov    ebx,eax
   140006e67:	test   eax,eax
   140006e69:	js     0x140006e8d
   140006e6b:	mov    rdx,QWORD PTR [rsp+0x60]
   140006e70:	mov    rcx,QWORD PTR [rsp+0x68]
   140006e75:	call   QWORD PTR [rip+0x7225]        # 0x14000e0a0
   140006e7b:	mov    rcx,QWORD PTR [rsp+0x60]
   140006e80:	xor    ebx,ebx
   140006e82:	test   eax,eax
   140006e84:	sete   bl
   140006e87:	call   QWORD PTR [rip+0x734b]        # 0x14000e1d8
   140006e8d:	mov    rcx,QWORD PTR [rsp+0x68]
   140006e92:	call   QWORD PTR [rip+0x7340]        # 0x14000e1d8
   140006e98:	jmp    0x140006eae
   140006e9a:	call   QWORD PTR [rip+0x7450]        # 0x14000e2f0
   140006ea0:	movzx  ebx,ax
   140006ea3:	or     ebx,0x80070000
   140006ea9:	test   eax,eax
   140006eab:	cmovle ebx,eax
   140006eae:	mov    rcx,rdi
   140006eb1:	call   QWORD PTR [rip+0x74b9]        # 0x14000e370
   140006eb7:	jmp    0x140006ecd
   140006eb9:	call   QWORD PTR [rip+0x7431]        # 0x14000e2f0
   140006ebf:	movzx  ebx,ax
   140006ec2:	or     ebx,0x80070000
   140006ec8:	test   eax,eax
   140006eca:	cmovle ebx,eax
   140006ecd:	mov    eax,ebx
   140006ecf:	mov    rbx,QWORD PTR [rsp+0x50]
   140006ed4:	add    rsp,0x40
   140006ed8:	pop    rdi
   140006ed9:	ret    
   140006eda:	int3   
   140006edb:	int3   
   140006edc:	int3   
   140006edd:	int3   
   140006ede:	int3   
   140006edf:	int3   
   140006ee0:	mov    QWORD PTR [rsp+0x18],rbx
   140006ee5:	push   rdi
   140006ee6:	sub    rsp,0x260
   140006eed:	mov    rax,QWORD PTR [rip+0xd114]        # 0x140014008
   140006ef4:	xor    rax,rsp
   140006ef7:	mov    QWORD PTR [rsp+0x250],rax
   140006eff:	mov    QWORD PTR [rsp+0x20],rdx
   140006f04:	lea    r8,[rip+0xa13d]        # 0x140011048
   140006f0b:	mov    r9,rcx
   140006f0e:	mov    edx,0x104
   140006f13:	lea    rcx,[rsp+0x40]
   140006f18:	call   0x140001b70
   140006f1d:	mov    ebx,eax
   140006f1f:	test   eax,eax
   140006f21:	js     0x140006f8d
   140006f23:	and    QWORD PTR [rsp+0x30],0x0
   140006f29:	lea    rcx,[rsp+0x40]
   140006f2e:	mov    DWORD PTR [rsp+0x28],0x2000000
   140006f36:	xor    r9d,r9d
   140006f39:	xor    r8d,r8d
   140006f3c:	mov    DWORD PTR [rsp+0x20],0x3
   140006f44:	mov    edx,0x1f0000
   140006f49:	call   QWORD PTR [rip+0x7461]        # 0x14000e3b0
   140006f4f:	mov    rdi,rax
   140006f52:	cmp    rax,0xffffffffffffffff
   140006f56:	je     0x140006f79
   140006f58:	mov    edx,0x1240
   140006f5d:	mov    r8d,0x1200a9
   140006f63:	mov    rcx,rax
   140006f66:	call   QWORD PTR [rip+0x754c]        # 0x14000e4b8
   140006f6c:	mov    rcx,rdi
   140006f6f:	mov    ebx,eax
   140006f71:	call   QWORD PTR [rip+0x73f9]        # 0x14000e370
   140006f77:	jmp    0x140006f8d
   140006f79:	call   QWORD PTR [rip+0x7371]        # 0x14000e2f0
   140006f7f:	movzx  ebx,ax
   140006f82:	or     ebx,0x80070000
   140006f88:	test   eax,eax
   140006f8a:	cmovle ebx,eax
   140006f8d:	mov    eax,ebx
   140006f8f:	mov    rcx,QWORD PTR [rsp+0x250]
   140006f97:	xor    rcx,rsp
   140006f9a:	call   0x14000cc40
   140006f9f:	mov    rbx,QWORD PTR [rsp+0x280]
   140006fa7:	add    rsp,0x260
   140006fae:	pop    rdi
   140006faf:	ret    
   140006fb0:	int3   
   140006fb1:	int3   
   140006fb2:	int3   
   140006fb3:	int3   
   140006fb4:	int3   
   140006fb5:	int3   
   140006fb6:	int3   
   140006fb7:	int3   
   140006fb8:	mov    QWORD PTR [rsp+0x10],rbx
   140006fbd:	mov    QWORD PTR [rsp+0x18],rbp
   140006fc2:	push   rsi
   140006fc3:	push   rdi
   140006fc4:	push   r12
   140006fc6:	push   r14
   140006fc8:	push   r15
   140006fca:	sub    rsp,0x20
   140006fce:	mov    ebx,0x20
   140006fd3:	mov    r12,rdx
   140006fd6:	mov    r14,rcx
   140006fd9:	lea    ebp,[rbx-0x17]
   140006fdc:	cmp    bx,WORD PTR [r14]
   140006fe0:	je     0x140006fe8
   140006fe2:	cmp    bp,WORD PTR [r14]
   140006fe6:	jne    0x140006fee
   140006fe8:	add    r14,0x2
   140006fec:	jmp    0x140006fdc
   140006fee:	mov    ecx,0x22
   140006ff3:	cmp    cx,WORD PTR [r14]
   140006ff7:	jne    0x14000701b
   140006ff9:	add    r14,0x2
   140006ffd:	mov    rdi,r14
   140007000:	xor    esi,esi
   140007002:	movzx  eax,WORD PTR [r14]
   140007006:	jmp    0x140007014
   140007008:	cmp    cx,ax
   14000700b:	je     0x14000704e
   14000700d:	add    rdi,0x2
   140007011:	movzx  eax,WORD PTR [rdi]
   140007014:	cmp    si,ax
   140007017:	jne    0x140007008
   140007019:	jmp    0x14000704e
   14000701b:	mov    edx,0x5c
   140007020:	mov    rcx,r14
   140007023:	call   QWORD PTR [rip+0x74c7]        # 0x14000e4f0
   140007029:	xor    esi,esi
   14000702b:	mov    rdi,rax
   14000702e:	test   rax,rax
   140007031:	jne    0x140007042
   140007033:	mov    rdi,r14
   140007036:	jmp    0x140007046
   140007038:	cmp    bx,ax
   14000703b:	je     0x14000704e
   14000703d:	cmp    bp,ax
   140007040:	je     0x14000704e
   140007042:	add    rdi,0x2
   140007046:	movzx  eax,WORD PTR [rdi]
   140007049:	cmp    si,ax
   14000704c:	jne    0x140007038
   14000704e:	movzx  r15d,WORD PTR [rdi]
   140007052:	mov    ecx,0x7ffffffe
   140007057:	mov    eax,ecx
   140007059:	mov    WORD PTR [rdi],si
   14000705c:	mov    rbp,rsi
   14000705f:	mov    rdx,r14
   140007062:	cmp    WORD PTR [rdx],si
   140007065:	je     0x140007071
   140007067:	add    rdx,0x2
   14000706b:	sub    rax,0x1
   14000706f:	jne    0x140007062
   140007071:	test   rax,rax
   140007074:	je     0x140007106
   14000707a:	sub    rcx,rax
   14000707d:	mov    ebx,esi
   14000707f:	mov    QWORD PTR [rsp+0x50],rcx
   140007084:	je     0x1400070f1
   140007086:	mov    eax,ecx
   140007088:	lea    ecx,[rcx+0x1]
   14000708b:	cmp    ecx,eax
   14000708d:	jb     0x1400070ec
   14000708f:	mov    eax,ecx
   140007091:	mov    DWORD PTR [rsp+0x50],ecx
   140007095:	add    rax,rax
   140007098:	mov    ecx,0xffffffff
   14000709d:	cmp    rax,rcx
   1400070a0:	ja     0x1400070ec
   1400070a2:	mov    ecx,eax
   1400070a4:	mov    ebx,eax
   1400070a6:	call   QWORD PTR [rip+0x75ac]        # 0x14000e658
   1400070ac:	mov    rbp,rax
   1400070af:	test   rax,rax
   1400070b2:	je     0x1400070e5
   1400070b4:	mov    r8d,ebx
   1400070b7:	xor    edx,edx
   1400070b9:	mov    rcx,rax
   1400070bc:	call   0x14000d326
   1400070c1:	mov    rdx,QWORD PTR [rsp+0x50]
   1400070c6:	mov    r8,r14
   1400070c9:	mov    rcx,rbp
   1400070cc:	call   0x140001af4
   1400070d1:	mov    ebx,eax
   1400070d3:	test   eax,eax
   1400070d5:	jns    0x1400070f1
   1400070d7:	mov    rcx,rbp
   1400070da:	call   QWORD PTR [rip+0x7568]        # 0x14000e648
   1400070e0:	mov    rbp,rsi
   1400070e3:	jmp    0x1400070f1
   1400070e5:	mov    ebx,0x8007000e
   1400070ea:	jmp    0x1400070f1
   1400070ec:	mov    ebx,0x80070216
   1400070f1:	mov    QWORD PTR [r12],rbp
   1400070f5:	test   ebx,ebx
   1400070f7:	js     0x14000710b
   1400070f9:	test   rbp,rbp
   1400070fc:	mov    eax,0x80070057
   140007101:	cmove  ebx,eax
   140007104:	jmp    0x14000710b
   140007106:	mov    ebx,0x80070057
   14000710b:	mov    rbp,QWORD PTR [rsp+0x60]
   140007110:	mov    eax,ebx
   140007112:	mov    rbx,QWORD PTR [rsp+0x58]
   140007117:	mov    WORD PTR [rdi],r15w
   14000711b:	add    rsp,0x20
   14000711f:	pop    r15
   140007121:	pop    r14
   140007123:	pop    r12
   140007125:	pop    rdi
   140007126:	pop    rsi
   140007127:	ret    
   140007128:	int3   
   140007129:	int3   
   14000712a:	int3   
   14000712b:	int3   
   14000712c:	int3   
   14000712d:	int3   
   14000712e:	int3   
   14000712f:	int3   
   140007130:	mov    rax,rsp
   140007133:	mov    QWORD PTR [rax+0x8],rbx
   140007137:	mov    QWORD PTR [rax+0x10],rsi
   14000713b:	mov    QWORD PTR [rax+0x18],rdi
   14000713f:	mov    QWORD PTR [rax+0x20],r9
   140007143:	push   rbp
   140007144:	push   r12
   140007146:	push   r13
   140007148:	push   r14
   14000714a:	push   r15
   14000714c:	mov    rbp,rsp
   14000714f:	sub    rsp,0x40
   140007153:	mov    r12,rcx
   140007156:	mov    DWORD PTR [rbp-0x20],0x44
   14000715d:	xor    r13d,r13d
   140007160:	lea    rcx,[rbp-0x18]
   140007164:	mov    QWORD PTR [rbp-0x10],r13
   140007168:	mov    r14,r8
   14000716b:	mov    rdi,rdx
   14000716e:	call   0x14000a2f4
   140007173:	mov    rsi,QWORD PTR [rbp+0x60]
   140007177:	mov    ebx,eax
   140007179:	mov    r15,QWORD PTR [rbp+0x58]
   14000717d:	test   eax,eax
   14000717f:	jne    0x140007376
   140007185:	xor    ebx,ebx
   140007187:	xor    edx,edx
   140007189:	mov    r8d,0x90
   14000718f:	mov    QWORD PTR [r15],rbx
   140007192:	mov    rcx,rdi
   140007195:	mov    QWORD PTR [rsi],rbx
   140007198:	call   0x14000d326
   14000719d:	lea    r9,[rbp-0x20]
   1400071a1:	mov    r8,r14
   1400071a4:	xor    edx,edx
   1400071a6:	lea    ecx,[rbx+0x11]
   1400071a9:	call   QWORD PTR [rip+0x6f39]        # 0x14000e0e8
   1400071af:	test   eax,eax
   1400071b1:	je     0x140007362
   1400071b7:	cmp    DWORD PTR [rbp-0x18],0x1
   1400071bb:	mov    DWORD PTR [rdi],0xa0000000
   1400071c1:	mov    DWORD PTR [rdi+0x4],0x2
   1400071c8:	mov    DWORD PTR [rdi+0x8],0x3
   1400071cf:	mov    DWORD PTR [rdi+0x1c],ebx
   1400071d2:	mov    DWORD PTR [rdi+0x20],0x5
   1400071d9:	mov    QWORD PTR [rdi+0x28],r14
   1400071dd:	mov    DWORD PTR [rbp-0x20],0x44
   1400071e4:	jne    0x1400071fe
   1400071e6:	mov    rbx,QWORD PTR [rbp+0x48]
   1400071ea:	lea    r9,[rbp-0x20]
   1400071ee:	xor    edx,edx
   1400071f0:	mov    r8,rbx
   1400071f3:	lea    ecx,[rdx+0x1a]
   1400071f6:	call   QWORD PTR [rip+0x6eec]        # 0x14000e0e8
   1400071fc:	jmp    0x14000727b
   1400071fe:	cmp    DWORD PTR [rbp-0x18],0x2
   140007202:	jne    0x14000735b
   140007208:	call   QWORD PTR [rip+0x71d2]        # 0x14000e3e0
   14000720e:	lea    r8,[rbp-0x18]
   140007212:	mov    edx,0x8
   140007217:	mov    rcx,rax
   14000721a:	call   QWORD PTR [rip+0x6ef8]        # 0x14000e118
   140007220:	test   eax,eax
   140007222:	je     0x140007244
   140007224:	mov    rcx,QWORD PTR [rbp-0x18]
   140007228:	lea    rdx,[rbp-0x10]
   14000722c:	call   0x14000a0b8
   140007231:	mov    rcx,QWORD PTR [rbp-0x18]
   140007235:	mov    r14d,eax
   140007238:	call   QWORD PTR [rip+0x7132]        # 0x14000e370
   14000723e:	mov    r13,QWORD PTR [rbp-0x10]
   140007242:	jmp    0x14000724d
   140007244:	call   QWORD PTR [rip+0x70a6]        # 0x14000e2f0
   14000724a:	mov    r14d,eax
   14000724d:	test   r14d,r14d
   140007250:	je     0x140007268
   140007252:	movzx  ebx,r14w
   140007256:	or     ebx,0x80070000
   14000725c:	test   r14d,r14d
   14000725f:	cmovle ebx,r14d
   140007263:	jmp    0x140007376
   140007268:	mov    rbx,QWORD PTR [rbp+0x48]
   14000726c:	mov    r8,r13
   14000726f:	mov    ecx,DWORD PTR [rbp-0x20]
   140007272:	mov    rdx,rbx
   140007275:	call   QWORD PTR [rip+0x6e1d]        # 0x14000e098
   14000727b:	test   eax,eax
   14000727d:	je     0x140007362
   140007283:	and    DWORD PTR [rdi+0x4c],0x0
   140007287:	lea    r9,[rbp-0x20]
   14000728b:	xor    edx,edx
   14000728d:	mov    QWORD PTR [rdi+0x58],rbx
   140007291:	mov    rbx,QWORD PTR [rbp+0x50]
   140007295:	mov    r14d,0x2
   14000729b:	mov    r8,rbx
   14000729e:	mov    DWORD PTR [rdi+0x30],0x101f0000
   1400072a5:	mov    DWORD PTR [rdi+0x34],r14d
   1400072a9:	lea    ecx,[rdx+0x16]
   1400072ac:	mov    DWORD PTR [rdi+0x38],0x3
   1400072b3:	mov    DWORD PTR [rdi+0x50],r14d
   1400072b7:	mov    DWORD PTR [rbp-0x20],0x44
   1400072be:	call   QWORD PTR [rip+0x6e24]        # 0x14000e0e8
   1400072c4:	test   eax,eax
   1400072c6:	je     0x140007362
   1400072cc:	and    DWORD PTR [rdi+0x7c],0x0
   1400072d0:	lea    eax,[r14+0x1]
   1400072d4:	mov    ecx,eax
   1400072d6:	mov    DWORD PTR [rdi+0x60],0x101f0000
   1400072dd:	mov    r9,r15
   1400072e0:	mov    DWORD PTR [rdi+0x64],r14d
   1400072e4:	xor    r8d,r8d
   1400072e7:	mov    DWORD PTR [rdi+0x68],eax
   1400072ea:	mov    rdx,rdi
   1400072ed:	mov    DWORD PTR [rdi+0x80],r14d
   1400072f4:	mov    QWORD PTR [rdi+0x88],rbx
   1400072fb:	call   QWORD PTR [rip+0x6dc7]        # 0x14000e0c8
   140007301:	test   eax,eax
   140007303:	jne    0x140007362
   140007305:	lea    edx,[rax+0x28]
   140007308:	lea    ecx,[rax+0x40]
   14000730b:	call   QWORD PTR [rip+0x6e9f]        # 0x14000e1b0
   140007311:	mov    QWORD PTR [rsi],rax
   140007314:	test   rax,rax
   140007317:	je     0x140007362
   140007319:	lea    ebx,[r14-0x1]
   14000731d:	mov    rcx,rax
   140007320:	mov    edx,ebx
   140007322:	call   QWORD PTR [rip+0x6d80]        # 0x14000e0a8
   140007328:	test   eax,eax
   14000732a:	je     0x140007362
   14000732c:	mov    r8,QWORD PTR [r15]
   14000732f:	xor    r9d,r9d
   140007332:	mov    rcx,QWORD PTR [rsi]
   140007335:	mov    edx,ebx
   140007337:	call   QWORD PTR [rip+0x6d7b]        # 0x14000e0b8
   14000733d:	test   eax,eax
   14000733f:	je     0x140007362
   140007341:	mov    rax,QWORD PTR [rsi]
   140007344:	and    DWORD PTR [r12+0x10],0x0
   14000734a:	mov    QWORD PTR [r12+0x8],rax
   14000734f:	xor    eax,eax
   140007351:	mov    DWORD PTR [r12],0x18
   140007359:	jmp    0x1400073a5
   14000735b:	mov    ebx,0x80004001
   140007360:	jmp    0x140007376
   140007362:	call   QWORD PTR [rip+0x6f88]        # 0x14000e2f0
   140007368:	movzx  ebx,ax
   14000736b:	or     ebx,0x80070000
   140007371:	test   eax,eax
   140007373:	cmovle ebx,eax
   140007376:	mov    rcx,QWORD PTR [r15]
   140007379:	test   rcx,rcx
   14000737c:	je     0x140007388
   14000737e:	call   QWORD PTR [rip+0x6e54]        # 0x14000e1d8
   140007384:	and    QWORD PTR [r15],0x0
   140007388:	mov    rcx,QWORD PTR [rsi]
   14000738b:	test   rcx,rcx
   14000738e:	je     0x14000739a
   140007390:	call   QWORD PTR [rip+0x6e42]        # 0x14000e1d8
   140007396:	and    QWORD PTR [rsi],0x0
   14000739a:	mov    rcx,r13
   14000739d:	call   QWORD PTR [rip+0x6e35]        # 0x14000e1d8
   1400073a3:	mov    eax,ebx
   1400073a5:	lea    r11,[rsp+0x40]
   1400073aa:	mov    rbx,QWORD PTR [r11+0x30]
   1400073ae:	mov    rsi,QWORD PTR [r11+0x38]
   1400073b2:	mov    rdi,QWORD PTR [r11+0x40]
   1400073b6:	mov    rsp,r11
   1400073b9:	pop    r15
   1400073bb:	pop    r14
   1400073bd:	pop    r13
   1400073bf:	pop    r12
   1400073c1:	pop    rbp
   1400073c2:	ret    
   1400073c3:	int3   
   1400073c4:	int3   
   1400073c5:	int3   
   1400073c6:	int3   
   1400073c7:	int3   
   1400073c8:	int3   
   1400073c9:	int3   
   1400073ca:	int3   
   1400073cb:	int3   
   1400073cc:	mov    QWORD PTR [rsp+0x18],rbx
   1400073d1:	mov    QWORD PTR [rsp+0x20],rsi
   1400073d6:	push   rbp
   1400073d7:	push   rdi
   1400073d8:	push   r14
   1400073da:	lea    rbp,[rsp-0x100]
   1400073e2:	sub    rsp,0x200
   1400073e9:	mov    rax,QWORD PTR [rip+0xcc18]        # 0x140014008
   1400073f0:	xor    rax,rsp
   1400073f3:	mov    QWORD PTR [rbp+0xf0],rax
   1400073fa:	cmp    DWORD PTR [rip+0xd2cf],0x0        # 0x1400146d0
   140007401:	mov    rsi,rdx
   140007404:	mov    r14,rcx
   140007407:	mov    edi,0x1
   14000740c:	mov    ebx,0x80004005
   140007411:	je     0x140007420
   140007413:	lea    rcx,[rip+0xd2be]        # 0x1400146d8
   14000741a:	call   QWORD PTR [rip+0x6e28]        # 0x14000e248
   140007420:	cmp    edi,0x1f4
   140007426:	jg     0x140007469
   140007428:	lea    rax,[rip+0x9c25]        # 0x140011054
   14000742f:	mov    DWORD PTR [rsp+0x28],edi
   140007433:	mov    r9,r14
   140007436:	mov    QWORD PTR [rsp+0x20],rax
   14000743b:	lea    r8,[rip+0x9c16]        # 0x140011058
   140007442:	mov    edx,0x104
   140007447:	mov    rcx,rsi
   14000744a:	call   0x140005d58
   14000744f:	inc    edi
   140007451:	mov    ebx,eax
   140007453:	test   eax,eax
   140007455:	js     0x140007573
   14000745b:	mov    rcx,rsi
   14000745e:	call   QWORD PTR [rip+0x6d1c]        # 0x14000e180
   140007464:	cmp    eax,0xffffffff
   140007467:	jne    0x140007420
   140007469:	test   ebx,ebx
   14000746b:	js     0x140007573
   140007471:	and    QWORD PTR [rsp+0x48],0x0
   140007477:	lea    rax,[rsp+0x40]
   14000747c:	and    QWORD PTR [rsp+0x40],0x0
   140007482:	lea    r9,[rbp+0xa0]
   140007489:	mov    QWORD PTR [rsp+0x30],rax
   14000748e:	lea    r8,[rbp+0x50]
   140007492:	lea    rax,[rsp+0x48]
   140007497:	mov    QWORD PTR [rsp+0x28],rax
   14000749c:	lea    rdx,[rsp+0x70]
   1400074a1:	lea    rax,[rbp+0x0]
   1400074a5:	lea    rcx,[rsp+0x50]
   1400074aa:	mov    QWORD PTR [rsp+0x20],rax
   1400074af:	call   0x140007130
   1400074b4:	mov    ebx,eax
   1400074b6:	test   eax,eax
   1400074b8:	js     0x140007573
   1400074be:	lea    r8,[rsp+0x50]
   1400074c3:	mov    rdx,rsi
   1400074c6:	mov    rcx,r14
   1400074c9:	call   QWORD PTR [rip+0x6d39]        # 0x14000e208
   1400074cf:	mov    r14d,0x80070000
   1400074d5:	test   eax,eax
   1400074d7:	jne    0x1400074ea
   1400074d9:	call   QWORD PTR [rip+0x6e11]        # 0x14000e2f0
   1400074df:	movzx  ebx,ax
   1400074e2:	or     ebx,r14d
   1400074e5:	test   eax,eax
   1400074e7:	cmovle ebx,eax
   1400074ea:	test   ebx,ebx
   1400074ec:	js     0x140007553
   1400074ee:	and    QWORD PTR [rsp+0x30],0x0
   1400074f4:	xor    r9d,r9d
   1400074f7:	mov    DWORD PTR [rsp+0x28],0x2000000
   1400074ff:	xor    r8d,r8d
   140007502:	mov    edx,0x1f0000
   140007507:	mov    DWORD PTR [rsp+0x20],0x3
   14000750f:	mov    rcx,rsi
   140007512:	call   QWORD PTR [rip+0x6d08]        # 0x14000e220
   140007518:	mov    rdi,rax
   14000751b:	cmp    rax,0xffffffffffffffff
   14000751f:	je     0x140007542
   140007521:	mov    edx,0x1240
   140007526:	mov    r8d,0x1200a9
   14000752c:	mov    rcx,rax
   14000752f:	call   QWORD PTR [rip+0x6f83]        # 0x14000e4b8
   140007535:	mov    rcx,rdi
   140007538:	mov    ebx,eax
   14000753a:	call   QWORD PTR [rip+0x6e30]        # 0x14000e370
   140007540:	jmp    0x140007553
   140007542:	call   QWORD PTR [rip+0x6da8]        # 0x14000e2f0
   140007548:	movzx  ebx,ax
   14000754b:	or     ebx,r14d
   14000754e:	test   eax,eax
   140007550:	cmovle ebx,eax
   140007553:	mov    rcx,QWORD PTR [rsp+0x48]
   140007558:	test   rcx,rcx
   14000755b:	je     0x140007563
   14000755d:	call   QWORD PTR [rip+0x6c75]        # 0x14000e1d8
   140007563:	mov    rcx,QWORD PTR [rsp+0x40]
   140007568:	test   rcx,rcx
   14000756b:	je     0x140007573
   14000756d:	call   QWORD PTR [rip+0x6c65]        # 0x14000e1d8
   140007573:	cmp    DWORD PTR [rip+0xd156],0x0        # 0x1400146d0
   14000757a:	je     0x140007589
   14000757c:	lea    rcx,[rip+0xd155]        # 0x1400146d8
   140007583:	call   QWORD PTR [rip+0x6e37]        # 0x14000e3c0
   140007589:	mov    eax,ebx
   14000758b:	mov    rcx,QWORD PTR [rbp+0xf0]
   140007592:	xor    rcx,rsp
   140007595:	call   0x14000cc40
   14000759a:	lea    r11,[rsp+0x200]
   1400075a2:	mov    rbx,QWORD PTR [r11+0x30]
   1400075a6:	mov    rsi,QWORD PTR [r11+0x38]
   1400075aa:	mov    rsp,r11
   1400075ad:	pop    r14
   1400075af:	pop    rdi
   1400075b0:	pop    rbp
   1400075b1:	ret    
   1400075b2:	int3   
   1400075b3:	int3   
   1400075b4:	int3   
   1400075b5:	int3   
   1400075b6:	int3   
   1400075b7:	int3   
   1400075b8:	mov    r11,rsp
   1400075bb:	mov    QWORD PTR [r11+0x18],rbx
   1400075bf:	mov    QWORD PTR [r11+0x20],rbp
   1400075c3:	push   rsi
   1400075c4:	push   rdi
   1400075c5:	push   r14
   1400075c7:	sub    rsp,0x40
   1400075cb:	xor    esi,esi
   1400075cd:	lea    rax,[r11-0x28]
   1400075d1:	mov    QWORD PTR [r11-0x28],rsi
   1400075d5:	mov    r14,rdx
   1400075d8:	mov    rbp,rcx
   1400075db:	mov    edi,0x80004005
   1400075e0:	test   rax,rax
   1400075e3:	je     0x1400075f5
   1400075e5:	lea    rcx,[r11-0x28]
   1400075e9:	call   0x1400061d8
   1400075ee:	mov    rsi,QWORD PTR [rsp+0x30]
   1400075f3:	jmp    0x1400075fa
   1400075f5:	mov    eax,0x80070057
   1400075fa:	test   eax,eax
   1400075fc:	js     0x140007675
   1400075fe:	and    QWORD PTR [rsp+0x30],0x0
   140007604:	lea    r8,[rsp+0x30]
   140007609:	mov    rdx,rsi
   14000760c:	call   0x140005ff0
   140007611:	test   eax,eax
   140007613:	js     0x14000766c
   140007615:	mov    rbx,QWORD PTR [rsp+0x30]
   14000761a:	lea    r8,[rip+0x9a43]        # 0x140011064
   140007621:	mov    r9,rbp
   140007624:	mov    QWORD PTR [rsp+0x20],rbx
   140007629:	mov    edx,0x104
   14000762e:	mov    rcx,r14
   140007631:	call   0x140005d58
   140007636:	mov    rcx,rbx
   140007639:	mov    edi,eax
   14000763b:	call   QWORD PTR [rip+0x7007]        # 0x14000e648
   140007641:	test   edi,edi
   140007643:	js     0x14000766c
   140007645:	xor    r8d,r8d
   140007648:	mov    rdx,r14
   14000764b:	mov    rcx,rbp
   14000764e:	call   QWORD PTR [rip+0x6bb4]        # 0x14000e208
   140007654:	test   eax,eax
   140007656:	jne    0x14000766c
   140007658:	call   QWORD PTR [rip+0x6c92]        # 0x14000e2f0
   14000765e:	movzx  edi,ax
   140007661:	or     edi,0x80070000
   140007667:	test   eax,eax
   140007669:	cmovle edi,eax
   14000766c:	mov    rcx,rsi
   14000766f:	call   QWORD PTR [rip+0x6d9b]        # 0x14000e410
   140007675:	mov    rbx,QWORD PTR [rsp+0x70]
   14000767a:	mov    eax,edi
   14000767c:	mov    rbp,QWORD PTR [rsp+0x78]
   140007681:	add    rsp,0x40
   140007685:	pop    r14
   140007687:	pop    rdi
   140007688:	pop    rsi
   140007689:	ret    
   14000768a:	int3   
   14000768b:	int3   
   14000768c:	int3   
   14000768d:	int3   
   14000768e:	int3   
   14000768f:	int3   
   140007690:	rex push rbx
   140007692:	sub    rsp,0x140
   140007699:	mov    rax,QWORD PTR [rip+0xc968]        # 0x140014008
   1400076a0:	xor    rax,rsp
   1400076a3:	mov    QWORD PTR [rsp+0x130],rax
   1400076ab:	mov    rbx,rcx
   1400076ae:	mov    BYTE PTR [rcx],0x0
   1400076b1:	mov    ecx,0x104
   1400076b6:	lea    rdx,[rsp+0x20]
   1400076bb:	call   QWORD PTR [rip+0x6b0f]        # 0x14000e1d0
   1400076c1:	test   eax,eax
   1400076c3:	je     0x1400076d6
   1400076c5:	mov    rdx,rbx
   1400076c8:	lea    rcx,[rsp+0x20]
   1400076cd:	call   0x1400073cc
   1400076d2:	mov    ecx,eax
   1400076d4:	jmp    0x1400076ea
   1400076d6:	call   QWORD PTR [rip+0x6c14]        # 0x14000e2f0
   1400076dc:	movzx  ecx,ax
   1400076df:	or     ecx,0x80070000
   1400076e5:	test   eax,eax
   1400076e7:	cmovle ecx,eax
   1400076ea:	mov    eax,ecx
   1400076ec:	mov    rcx,QWORD PTR [rsp+0x130]
   1400076f4:	xor    rcx,rsp
   1400076f7:	call   0x14000cc40
   1400076fc:	add    rsp,0x140
   140007703:	pop    rbx
   140007704:	ret    
   140007705:	int3   
   140007706:	int3   
   140007707:	int3   
   140007708:	int3   
   140007709:	int3   
   14000770a:	int3   
   14000770b:	int3   
   14000770c:	mov    QWORD PTR [rsp+0x20],rbx
   140007711:	push   rbp
   140007712:	push   rsi
   140007713:	push   rdi
   140007714:	push   r14
   140007716:	push   r15
   140007718:	sub    rsp,0x690
   14000771f:	mov    rax,QWORD PTR [rip+0xc8e2]        # 0x140014008
   140007726:	xor    rax,rsp
   140007729:	mov    QWORD PTR [rsp+0x680],rax
   140007731:	mov    r14,r8
   140007734:	mov    rdi,rdx
   140007737:	mov    rbp,rcx
   14000773a:	or     rbx,0xffffffffffffffff
   14000773e:	call   QWORD PTR [rip+0x6f0c]        # 0x14000e650
   140007744:	xor    r15d,r15d
   140007747:	test   eax,eax
   140007749:	js     0x1400078b0
   14000774f:	mov    QWORD PTR [rsp+0x30],r15
   140007754:	lea    r8d,[rbx+0x2]
   140007758:	mov    DWORD PTR [rsp+0x28],0x80
   140007760:	xor    r9d,r9d
   140007763:	mov    edx,0x80000000
   140007768:	mov    DWORD PTR [rsp+0x20],0x3
   140007770:	mov    rcx,rdi
   140007773:	call   QWORD PTR [rip+0x6c37]        # 0x14000e3b0
   140007779:	mov    rbx,rax
   14000777c:	call   QWORD PTR [rip+0x6ebe]        # 0x14000e640
   140007782:	lea    rax,[rbx-0x1]
   140007786:	cmp    rax,0xfffffffffffffffd
   14000778a:	ja     0x1400078b0
   140007790:	mov    rcx,rdi
   140007793:	call   0x140006274
   140007798:	mov    rsi,rax
   14000779b:	cmp    rax,rdi
   14000779e:	je     0x1400078b0
   1400077a4:	lea    rax,[rsp+0x250]
   1400077ac:	mov    edi,0x104
   1400077b1:	mov    DWORD PTR [rsp+0x28],edi
   1400077b5:	lea    edx,[r15+0x8]
   1400077b9:	or     r9d,0xffffffff
   1400077bd:	mov    QWORD PTR [rsp+0x20],rax
   1400077c2:	mov    r8,rbp
   1400077c5:	xor    ecx,ecx
   1400077c7:	call   QWORD PTR [rip+0x69bb]        # 0x14000e188
   1400077cd:	test   eax,eax
   1400077cf:	je     0x14000787e
   1400077d5:	lea    r9,[rsp+0x250]
   1400077dd:	mov    QWORD PTR [rsp+0x20],rsi
   1400077e2:	lea    r8,[rip+0x9887]        # 0x140011070
   1400077e9:	mov    edx,edi
   1400077eb:	lea    rcx,[rsp+0x40]
   1400077f0:	call   0x140001b70
   1400077f5:	mov    edi,eax
   1400077f7:	test   eax,eax
   1400077f9:	js     0x1400078b5
   1400077ff:	lea    rcx,[rsp+0x40]
   140007804:	call   0x140007f0c
   140007809:	mov    edi,eax
   14000780b:	test   eax,eax
   14000780d:	js     0x1400078b5
   140007813:	lea    rax,[rsp+0x40]
   140007818:	cmp    WORD PTR [rsp+0x40],r15w
   14000781e:	je     0x140007838
   140007820:	cmp    WORD PTR [rax],0x2f
   140007824:	jne    0x14000782e
   140007826:	mov    ecx,0x5c
   14000782b:	mov    WORD PTR [rax],cx
   14000782e:	add    rax,0x2
   140007832:	cmp    WORD PTR [rax],r15w
   140007836:	jne    0x140007820
   140007838:	xor    r9d,r9d
   14000783b:	lea    rdx,[rsp+0x460]
   140007843:	mov    r8d,0x10c
   140007849:	mov    rcx,rbx
   14000784c:	call   QWORD PTR [rip+0x6976]        # 0x14000e1c8
   140007852:	cmp    eax,0x3
   140007855:	je     0x1400078b0
   140007857:	cmp    eax,0x8
   14000785a:	je     0x1400078b0
   14000785c:	cmp    eax,0x57
   14000785f:	je     0x1400078b0
   140007861:	mov    r8d,0x1
   140007867:	lea    rdx,[rsp+0x40]
   14000786c:	lea    rcx,[rsp+0x460]
   140007874:	call   QWORD PTR [rip+0x68fe]        # 0x14000e178
   14000787a:	test   eax,eax
   14000787c:	jne    0x140007887
   14000787e:	call   0x14000c1b8
   140007883:	mov    edi,eax
   140007885:	jmp    0x1400078b5
   140007887:	lea    rcx,[rsp+0x40]
   14000788c:	call   0x140006cb4
   140007891:	mov    edi,eax
   140007893:	test   eax,eax
   140007895:	js     0x1400078b5
   140007897:	mov    rcx,QWORD PTR [r14]
   14000789a:	call   QWORD PTR [rip+0x6b70]        # 0x14000e410
   1400078a0:	lea    rcx,[rsp+0x40]
   1400078a5:	call   QWORD PTR [rip+0x6b75]        # 0x14000e420
   1400078ab:	mov    QWORD PTR [r14],rax
   1400078ae:	jmp    0x1400078b5
   1400078b0:	mov    edi,0x80004005
   1400078b5:	lea    rcx,[rbx-0x1]
   1400078b9:	cmp    rcx,0xfffffffffffffffd
   1400078bd:	ja     0x1400078c8
   1400078bf:	mov    rcx,rbx
   1400078c2:	call   QWORD PTR [rip+0x6aa8]        # 0x14000e370
   1400078c8:	mov    eax,edi
   1400078ca:	mov    rcx,QWORD PTR [rsp+0x680]
   1400078d2:	xor    rcx,rsp
   1400078d5:	call   0x14000cc40
   1400078da:	mov    rbx,QWORD PTR [rsp+0x6d8]
   1400078e2:	add    rsp,0x690
   1400078e9:	pop    r15
   1400078eb:	pop    r14
   1400078ed:	pop    rdi
   1400078ee:	pop    rsi
   1400078ef:	pop    rbp
   1400078f0:	ret    
   1400078f1:	int3   
   1400078f2:	int3   
   1400078f3:	int3   
   1400078f4:	int3   
   1400078f5:	int3   
   1400078f6:	int3   
   1400078f7:	int3   
   1400078f8:	mov    QWORD PTR [rsp+0x18],rbx
   1400078fd:	mov    QWORD PTR [rsp+0x20],rsi
   140007902:	push   rbp
   140007903:	push   rdi
   140007904:	push   r14
   140007906:	lea    rbp,[rsp-0x370]
   14000790e:	sub    rsp,0x470
   140007915:	mov    rax,QWORD PTR [rip+0xc6ec]        # 0x140014008
   14000791c:	xor    rax,rsp
   14000791f:	mov    QWORD PTR [rbp+0x360],rax
   140007926:	mov    r14,rcx
   140007929:	mov    rdi,rdx
   14000792c:	mov    rcx,QWORD PTR [rdx]
   14000792f:	mov    ebx,0x1
   140007934:	call   0x140006274
   140007939:	mov    rsi,rax
   14000793c:	cmp    rax,QWORD PTR [rdi]
   14000793f:	je     0x140007a4b
   140007945:	lea    rax,[rbp+0x150]
   14000794c:	mov    DWORD PTR [rsp+0x28],0x104
   140007954:	or     r9d,0xffffffff
   140007958:	mov    QWORD PTR [rsp+0x20],rax
   14000795d:	mov    r8,r14
   140007960:	lea    edx,[rbx+0x7]
   140007963:	xor    ecx,ecx
   140007965:	call   QWORD PTR [rip+0x681d]        # 0x14000e188
   14000796b:	xor    r14d,r14d
   14000796e:	test   eax,eax
   140007970:	jne    0x14000797c
   140007972:	call   0x14000c1b8
   140007977:	jmp    0x140007a50
   14000797c:	cmp    ebx,0x1f4
   140007982:	jg     0x140007a4b
   140007988:	mov    QWORD PTR [rsp+0x28],rsi
   14000798d:	lea    r9,[rbp+0x150]
   140007994:	lea    r8,[rip+0x96ed]        # 0x140011088
   14000799b:	mov    DWORD PTR [rsp+0x20],ebx
   14000799f:	mov    edx,0x104
   1400079a4:	lea    rcx,[rsp+0x40]
   1400079a9:	call   0x140001b70
   1400079ae:	inc    ebx
   1400079b0:	test   eax,eax
   1400079b2:	js     0x1400079c4
   1400079b4:	lea    rcx,[rsp+0x40]
   1400079b9:	call   QWORD PTR [rip+0x69f9]        # 0x14000e3b8
   1400079bf:	cmp    eax,0xffffffff
   1400079c2:	jne    0x14000797c
   1400079c4:	lea    rdx,[rsp+0x30]
   1400079c9:	mov    QWORD PTR [rsp+0x30],r14
   1400079ce:	lea    rcx,[rsp+0x40]
   1400079d3:	call   0x14000c724
   1400079d8:	mov    ebx,eax
   1400079da:	test   eax,eax
   1400079dc:	js     0x1400079f0
   1400079de:	mov    rax,QWORD PTR [rsp+0x30]
   1400079e3:	cmp    WORD PTR [rax],r14w
   1400079e7:	je     0x1400079f4
   1400079e9:	mov    WORD PTR [rax],r14w
   1400079ed:	mov    ebx,r14d
   1400079f0:	test   ebx,ebx
   1400079f2:	js     0x140007a47
   1400079f4:	lea    rcx,[rsp+0x40]
   1400079f9:	call   0x140007f0c
   1400079fe:	mov    ebx,eax
   140007a00:	test   eax,eax
   140007a02:	js     0x140007a47
   140007a04:	mov    rcx,QWORD PTR [rdi]
   140007a07:	lea    rdx,[rsp+0x40]
   140007a0c:	mov    r8d,0x1
   140007a12:	call   QWORD PTR [rip+0x6760]        # 0x14000e178
   140007a18:	test   eax,eax
   140007a1a:	je     0x140007972
   140007a20:	lea    rcx,[rsp+0x40]
   140007a25:	call   0x140006cb4
   140007a2a:	mov    ebx,eax
   140007a2c:	test   eax,eax
   140007a2e:	js     0x140007a47
   140007a30:	mov    rcx,QWORD PTR [rdi]
   140007a33:	call   QWORD PTR [rip+0x69d7]        # 0x14000e410
   140007a39:	lea    rcx,[rsp+0x40]
   140007a3e:	call   QWORD PTR [rip+0x69dc]        # 0x14000e420
   140007a44:	mov    QWORD PTR [rdi],rax
   140007a47:	mov    eax,ebx
   140007a49:	jmp    0x140007a50
   140007a4b:	mov    eax,0x80004005
   140007a50:	mov    rcx,QWORD PTR [rbp+0x360]
   140007a57:	xor    rcx,rsp
   140007a5a:	call   0x14000cc40
   140007a5f:	lea    r11,[rsp+0x470]
   140007a67:	mov    rbx,QWORD PTR [r11+0x30]
   140007a6b:	mov    rsi,QWORD PTR [r11+0x38]
   140007a6f:	mov    rsp,r11
   140007a72:	pop    r14
   140007a74:	pop    rdi
   140007a75:	pop    rbp
   140007a76:	ret    
   140007a77:	int3   
   140007a78:	int3   
   140007a79:	int3   
   140007a7a:	int3   
   140007a7b:	int3   
   140007a7c:	int3   
   140007a7d:	int3   
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	mov    rax,rsp
   140007a83:	mov    QWORD PTR [rax+0x8],rbx
   140007a87:	mov    QWORD PTR [rax+0x10],rdi
   140007a8b:	mov    QWORD PTR [rax+0x18],r14
   140007a8f:	push   rbp
   140007a90:	lea    rbp,[rax-0x2b8]
   140007a97:	sub    rsp,0x3b0
   140007a9e:	mov    rax,QWORD PTR [rip+0xc563]        # 0x140014008
   140007aa5:	xor    rax,rsp
   140007aa8:	mov    QWORD PTR [rbp+0x2a0],rax
   140007aaf:	mov    r14d,0x104
   140007ab5:	lea    rdx,[rbp+0x190]
   140007abc:	mov    ecx,r14d
   140007abf:	call   QWORD PTR [rip+0x670b]        # 0x14000e1d0
   140007ac5:	test   eax,eax
   140007ac7:	jne    0x140007ae2
   140007ac9:	call   QWORD PTR [rip+0x6821]        # 0x14000e2f0
   140007acf:	movzx  ebx,ax
   140007ad2:	or     ebx,0x80070000
   140007ad8:	test   eax,eax
   140007ada:	cmovle ebx,eax
   140007add:	jmp    0x140007d04
   140007ae2:	xor    ebx,ebx
   140007ae4:	lea    r8,[rbp+0x190]
   140007aeb:	lea    rax,[rbp+0x80]
   140007af2:	mov    rdx,r14
   140007af5:	sub    r8,rax
   140007af8:	lea    rcx,[rbp+0x80]
   140007aff:	lea    rax,[rdx+0x7ffffefa]
   140007b06:	test   rax,rax
   140007b09:	je     0x140007b1e
   140007b0b:	mov    al,BYTE PTR [r8+rcx*1]
   140007b0f:	test   al,al
   140007b11:	je     0x140007b1e
   140007b13:	mov    BYTE PTR [rcx],al
   140007b15:	inc    rcx
   140007b18:	sub    rdx,0x1
   140007b1c:	jne    0x140007aff
   140007b1e:	test   rdx,rdx
   140007b21:	jne    0x140007b2b
   140007b23:	dec    rcx
   140007b26:	mov    ebx,0x8007007a
   140007b2b:	mov    BYTE PTR [rcx],0x0
   140007b2e:	test   ebx,ebx
   140007b30:	js     0x140007d04
   140007b36:	lea    r8,[rip+0x955f]        # 0x14001109c
   140007b3d:	mov    rdx,r14
   140007b40:	lea    rcx,[rbp+0x80]
   140007b47:	call   0x140005c9c
   140007b4c:	mov    ebx,eax
   140007b4e:	test   eax,eax
   140007b50:	js     0x140007d04
   140007b56:	lea    rdx,[rsp+0x40]
   140007b5b:	lea    rcx,[rbp+0x80]
   140007b62:	call   QWORD PTR [rip+0x6628]        # 0x14000e190
   140007b68:	mov    rdi,rax
   140007b6b:	cmp    rax,0xffffffffffffffff
   140007b6f:	je     0x140007ac9
   140007b75:	lea    rdx,[rip+0x94b4]        # 0x140011030
   140007b7c:	lea    rcx,[rsp+0x6c]
   140007b81:	call   QWORD PTR [rip+0x6691]        # 0x14000e218
   140007b87:	test   eax,eax
   140007b89:	je     0x140007cc6
   140007b8f:	lea    rdx,[rip+0x949e]        # 0x140011034
   140007b96:	lea    rcx,[rsp+0x6c]
   140007b9b:	call   QWORD PTR [rip+0x6677]        # 0x14000e218
   140007ba1:	test   eax,eax
   140007ba3:	je     0x140007cc6
   140007ba9:	and    DWORD PTR [rsp+0x28],0x0
   140007bae:	lea    rax,[rbp+0x80]
   140007bb5:	mov    QWORD PTR [rsp+0x30],rax
   140007bba:	lea    r9,[rsp+0x30]
   140007bbf:	lea    rax,[rsp+0x38]
   140007bc4:	mov    QWORD PTR [rsp+0x38],r14
   140007bc9:	lea    r8,[rbp+0x190]
   140007bd0:	mov    QWORD PTR [rsp+0x20],rax
   140007bd5:	mov    rdx,r14
   140007bd8:	lea    rcx,[rbp+0x80]
   140007bdf:	call   0x140005990
   140007be4:	mov    ebx,eax
   140007be6:	test   eax,eax
   140007be8:	js     0x140007cfb
   140007bee:	and    DWORD PTR [rsp+0x28],0x0
   140007bf3:	lea    rax,[rsp+0x38]
   140007bf8:	mov    rdx,QWORD PTR [rsp+0x38]
   140007bfd:	lea    r9,[rsp+0x30]
   140007c02:	mov    rcx,QWORD PTR [rsp+0x30]
   140007c07:	lea    r8,[rip+0x9496]        # 0x1400110a4
   140007c0e:	mov    QWORD PTR [rsp+0x20],rax
   140007c13:	call   0x140005990
   140007c18:	mov    ebx,eax
   140007c1a:	test   eax,eax
   140007c1c:	js     0x140007cfb
   140007c22:	mov    rdx,QWORD PTR [rsp+0x38]
   140007c27:	xor    ebx,ebx
   140007c29:	mov    ecx,0x80070057
   140007c2e:	lea    rax,[rdx-0x1]
   140007c32:	cmp    rax,0x7ffffffe
   140007c38:	cmova  ebx,ecx
   140007c3b:	test   ebx,ebx
   140007c3d:	js     0x140007c8a
   140007c3f:	mov    rcx,QWORD PTR [rsp+0x30]
   140007c44:	xor    ebx,ebx
   140007c46:	test   rdx,rdx
   140007c49:	je     0x140007c7d
   140007c4b:	mov    r8d,0x7ffffffe
   140007c51:	lea    r9,[rsp+0x6c]
   140007c56:	sub    r8,rdx
   140007c59:	sub    r9,rcx
   140007c5c:	lea    rax,[r8+rdx*1]
   140007c60:	test   rax,rax
   140007c63:	je     0x140007c78
   140007c65:	mov    al,BYTE PTR [r9+rcx*1]
   140007c69:	test   al,al
   140007c6b:	je     0x140007c78
   140007c6d:	mov    BYTE PTR [rcx],al
   140007c6f:	inc    rcx
   140007c72:	sub    rdx,0x1
   140007c76:	jne    0x140007c5c
   140007c78:	test   rdx,rdx
   140007c7b:	jne    0x140007c85
   140007c7d:	dec    rcx
   140007c80:	mov    ebx,0x8007007a
   140007c85:	mov    BYTE PTR [rcx],0x0
   140007c88:	jmp    0x140007c97
   140007c8a:	test   rdx,rdx
   140007c8d:	je     0x140007c97
   140007c8f:	mov    rax,QWORD PTR [rsp+0x30]
   140007c94:	mov    BYTE PTR [rax],0x0
   140007c97:	test   ebx,ebx
   140007c99:	js     0x140007cfb
   140007c9b:	test   BYTE PTR [rsp+0x40],0x10
   140007ca0:	je     0x140007cc6
   140007ca2:	mov    edx,0x90
   140007ca7:	lea    rcx,[rbp+0x80]
   140007cae:	call   QWORD PTR [rip+0x658c]        # 0x14000e240
   140007cb4:	lea    rcx,[rbp+0x80]
   140007cbb:	call   0x140006a6c
   140007cc0:	mov    ebx,eax
   140007cc2:	test   eax,eax
   140007cc4:	js     0x140007cfb
   140007cc6:	lea    rdx,[rsp+0x40]
   140007ccb:	mov    rcx,rdi
   140007cce:	call   QWORD PTR [rip+0x64ec]        # 0x14000e1c0
   140007cd4:	test   eax,eax
   140007cd6:	jne    0x140007b75
   140007cdc:	call   QWORD PTR [rip+0x660e]        # 0x14000e2f0
   140007ce2:	cmp    eax,0x12
   140007ce5:	je     0x140007cfb
   140007ce7:	call   QWORD PTR [rip+0x6603]        # 0x14000e2f0
   140007ced:	movzx  ebx,ax
   140007cf0:	or     ebx,0x80070000
   140007cf6:	test   eax,eax
   140007cf8:	cmovle ebx,eax
   140007cfb:	mov    rcx,rdi
   140007cfe:	call   QWORD PTR [rip+0x64a4]        # 0x14000e1a8
   140007d04:	mov    eax,ebx
   140007d06:	mov    rcx,QWORD PTR [rbp+0x2a0]
   140007d0d:	xor    rcx,rsp
   140007d10:	call   0x14000cc40
   140007d15:	lea    r11,[rsp+0x3b0]
   140007d1d:	mov    rbx,QWORD PTR [r11+0x10]
   140007d21:	mov    rdi,QWORD PTR [r11+0x18]
   140007d25:	mov    r14,QWORD PTR [r11+0x20]
   140007d29:	mov    rsp,r11
   140007d2c:	pop    rbp
   140007d2d:	ret    
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	int3   
   140007d31:	int3   
   140007d32:	int3   
   140007d33:	int3   
   140007d34:	mov    QWORD PTR [rsp+0x10],rbx
   140007d39:	mov    QWORD PTR [rsp+0x18],rbp
   140007d3e:	push   rsi
   140007d3f:	push   rdi
   140007d40:	push   r14
   140007d42:	sub    rsp,0x20
   140007d46:	xor    esi,esi
   140007d48:	lea    rdx,[rsp+0x40]
   140007d4d:	lea    rcx,[rip+0x969c]        # 0x1400113f0
   140007d54:	mov    r14d,esi
   140007d57:	call   QWORD PTR [rip+0x6903]        # 0x14000e660
   140007d5d:	mov    ebp,eax
   140007d5f:	test   eax,eax
   140007d61:	js     0x140007de0
   140007d63:	mov    rdi,QWORD PTR [rsp+0x40]
   140007d68:	mov    rax,QWORD PTR [rdi]
   140007d6b:	mov    rbx,QWORD PTR [rax+0x20]
   140007d6f:	mov    rcx,rbx
   140007d72:	call   QWORD PTR [rip+0x6950]        # 0x14000e6c8
   140007d78:	mov    rcx,rdi
   140007d7b:	call   rbx
   140007d7d:	mov    ebp,eax
   140007d7f:	test   eax,eax
   140007d81:	js     0x140007db7
   140007d83:	call   0x14000119c
   140007d88:	test   eax,eax
   140007d8a:	jne    0x140007d95
   140007d8c:	call   0x14000126c
   140007d91:	test   eax,eax
   140007d93:	je     0x140007d9b
   140007d95:	mov    r14d,0x1
   140007d9b:	mov    rdi,QWORD PTR [rsp+0x40]
   140007da0:	mov    rax,QWORD PTR [rdi]
   140007da3:	mov    rbx,QWORD PTR [rax+0x28]
   140007da7:	mov    rcx,rbx
   140007daa:	call   QWORD PTR [rip+0x6918]        # 0x14000e6c8
   140007db0:	mov    rcx,rdi
   140007db3:	call   rbx
   140007db5:	mov    ebp,eax
   140007db7:	mov    rdi,QWORD PTR [rsp+0x40]
   140007dbc:	mov    rdx,QWORD PTR [rdi]
   140007dbf:	mov    rbx,QWORD PTR [rdx+0x10]
   140007dc3:	mov    rcx,rbx
   140007dc6:	call   QWORD PTR [rip+0x68fc]        # 0x14000e6c8
   140007dcc:	mov    rcx,rdi
   140007dcf:	call   rbx
   140007dd1:	test   ebp,ebp
   140007dd3:	js     0x140007de0
   140007dd5:	test   r14d,r14d
   140007dd8:	sete   sil
   140007ddc:	mov    eax,esi
   140007dde:	jmp    0x140007de2
   140007de0:	mov    eax,ebp
   140007de2:	mov    rbx,QWORD PTR [rsp+0x48]
   140007de7:	mov    rbp,QWORD PTR [rsp+0x50]
   140007dec:	add    rsp,0x20
   140007df0:	pop    r14
   140007df2:	pop    rdi
   140007df3:	pop    rsi
   140007df4:	ret    
   140007df5:	int3   
   140007df6:	int3   
   140007df7:	int3   
   140007df8:	int3   
   140007df9:	int3   
   140007dfa:	int3   
   140007dfb:	int3   
   140007dfc:	mov    QWORD PTR [rsp+0x10],rbx
   140007e01:	push   rdi
   140007e02:	sub    rsp,0x60
   140007e06:	mov    rax,QWORD PTR [rip+0xc1fb]        # 0x140014008
   140007e0d:	xor    rax,rsp
   140007e10:	mov    QWORD PTR [rsp+0x50],rax
   140007e15:	xor    edi,edi
   140007e17:	lea    r8,[rip+0x93a2]        # 0x1400111c0
   140007e1e:	mov    r9d,ecx
   140007e21:	mov    DWORD PTR [rsp+0x30],edi
   140007e25:	lea    rcx,[rsp+0x38]
   140007e2a:	lea    edx,[rdi+0x9]
   140007e2d:	lea    ebx,[rdi+0x1]
   140007e30:	call   0x140001b70
   140007e35:	test   eax,eax
   140007e37:	js     0x140007e58
   140007e39:	lea    rax,[rsp+0x30]
   140007e3e:	lea    r8,[rsp+0x38]
   140007e43:	mov    QWORD PTR [rsp+0x28],rax
   140007e48:	call   0x14000bca4
   140007e4d:	test   eax,eax
   140007e4f:	je     0x140007e58
   140007e51:	cmp    DWORD PTR [rsp+0x30],edi
   140007e55:	cmovne ebx,edi
   140007e58:	mov    eax,ebx
   140007e5a:	mov    rcx,QWORD PTR [rsp+0x50]
   140007e5f:	xor    rcx,rsp
   140007e62:	call   0x14000cc40
   140007e67:	mov    rbx,QWORD PTR [rsp+0x78]
   140007e6c:	add    rsp,0x60
   140007e70:	pop    rdi
   140007e71:	ret    
   140007e72:	int3   
   140007e73:	int3   
   140007e74:	int3   
   140007e75:	int3   
   140007e76:	int3   
   140007e77:	int3   
   140007e78:	mov    QWORD PTR [rsp+0x8],rbx
   140007e7d:	mov    QWORD PTR [rsp+0x10],rbp
   140007e82:	mov    QWORD PTR [rsp+0x18],rsi
   140007e87:	push   rdi
   140007e88:	sub    rsp,0x20
   140007e8c:	xor    ebx,ebx
   140007e8e:	mov    rsi,rcx
   140007e91:	test   rcx,rcx
   140007e94:	je     0x140007eed
   140007e96:	xor    edi,edi
   140007e98:	mov    ebp,0x80070057
   140007e9d:	cmp    BYTE PTR [rdi+rsi*1],0x0
   140007ea1:	je     0x140007eed
   140007ea3:	movsx  ecx,BYTE PTR [rdi+rsi*1]
   140007ea7:	mov    edx,ecx
   140007ea9:	sub    edx,0x22
   140007eac:	je     0x140007edd
   140007eae:	sub    edx,0x8
   140007eb1:	je     0x140007edd
   140007eb3:	sub    edx,0x12
   140007eb6:	je     0x140007edd
   140007eb8:	sub    edx,0x2
   140007ebb:	je     0x140007edd
   140007ebd:	sub    edx,0x1
   140007ec0:	je     0x140007edd
   140007ec2:	cmp    edx,0x3d
   140007ec5:	je     0x140007edd
   140007ec7:	cmp    ecx,0x80
   140007ecd:	jae    0x140007ee7
   140007ecf:	call   QWORD PTR [rip+0x6643]        # 0x14000e518
   140007ed5:	test   eax,eax
   140007ed7:	je     0x140007ee7
   140007ed9:	mov    ebx,ebp
   140007edb:	jmp    0x140007ee7
   140007edd:	call   0x140007dfc
   140007ee2:	test   eax,eax
   140007ee4:	cmovne ebx,ebp
   140007ee7:	inc    edi
   140007ee9:	test   ebx,ebx
   140007eeb:	jns    0x140007e9d
   140007eed:	mov    rbp,QWORD PTR [rsp+0x38]
   140007ef2:	mov    eax,ebx
   140007ef4:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ef9:	mov    rsi,QWORD PTR [rsp+0x40]
   140007efe:	add    rsp,0x20
   140007f02:	pop    rdi
   140007f03:	ret    
   140007f04:	int3   
   140007f05:	int3   
   140007f06:	int3   
   140007f07:	int3   
   140007f08:	int3   
   140007f09:	int3   
   140007f0a:	int3   
   140007f0b:	int3   
   140007f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140007f11:	mov    QWORD PTR [rsp+0x10],rbp
   140007f16:	mov    QWORD PTR [rsp+0x18],rsi
   140007f1b:	push   rdi
   140007f1c:	push   r14
   140007f1e:	push   r15
   140007f20:	sub    rsp,0x20
   140007f24:	xor    ebp,ebp
   140007f26:	mov    r14,rcx
   140007f29:	mov    ebx,ebp
   140007f2b:	mov    edi,ebp
   140007f2d:	mov    r15d,0x80070057
   140007f33:	mov    esi,edi
   140007f35:	movzx  ecx,WORD PTR [r14+rsi*2]
   140007f3a:	test   cx,cx
   140007f3d:	je     0x140007f96
   140007f3f:	movzx  r8d,cx
   140007f43:	mov    edx,r8d
   140007f46:	sub    edx,0x22
   140007f49:	je     0x140007f82
   140007f4b:	sub    edx,0x8
   140007f4e:	je     0x140007f82
   140007f50:	sub    edx,0x12
   140007f53:	je     0x140007f82
   140007f55:	sub    edx,0x2
   140007f58:	je     0x140007f82
   140007f5a:	sub    edx,0x1
   140007f5d:	je     0x140007f82
   140007f5f:	cmp    edx,0x3d
   140007f62:	je     0x140007f82
   140007f64:	call   QWORD PTR [rip+0x65d6]        # 0x14000e540
   140007f6a:	test   eax,eax
   140007f6c:	je     0x140007f90
   140007f6e:	movzx  ecx,WORD PTR [r14+rsi*2]
   140007f73:	call   QWORD PTR [rip+0x658f]        # 0x14000e508
   140007f79:	test   eax,eax
   140007f7b:	je     0x140007f90
   140007f7d:	mov    ebx,r15d
   140007f80:	jmp    0x140007f90
   140007f82:	mov    ecx,r8d
   140007f85:	call   0x140007dfc
   140007f8a:	test   eax,eax
   140007f8c:	cmovne ebx,r15d
   140007f90:	inc    edi
   140007f92:	test   ebx,ebx
   140007f94:	jns    0x140007f33
   140007f96:	mov    rbp,QWORD PTR [rsp+0x48]
   140007f9b:	mov    eax,ebx
   140007f9d:	mov    rbx,QWORD PTR [rsp+0x40]
   140007fa2:	mov    rsi,QWORD PTR [rsp+0x50]
   140007fa7:	add    rsp,0x20
   140007fab:	pop    r15
   140007fad:	pop    r14
   140007faf:	pop    rdi
   140007fb0:	ret    
   140007fb1:	int3   
   140007fb2:	int3   
   140007fb3:	int3   
   140007fb4:	int3   
   140007fb5:	int3   
   140007fb6:	int3   
   140007fb7:	int3   
   140007fb8:	mov    rax,rsp
   140007fbb:	mov    QWORD PTR [rax+0x8],rbx
   140007fbf:	push   rbp
   140007fc0:	push   rsi
   140007fc1:	push   rdi
   140007fc2:	push   r14
   140007fc4:	push   r15
   140007fc6:	sub    rsp,0x20
   140007fca:	xor    r15d,r15d
   140007fcd:	mov    rbp,rcx
   140007fd0:	mov    ebx,0x80070057
   140007fd5:	mov    edi,r15d
   140007fd8:	mov    r14d,r15d
   140007fdb:	test   rcx,rcx
   140007fde:	je     0x140008064
   140007fe4:	xor    r9d,r9d
   140007fe7:	mov    WORD PTR [rax+0x10],r15w
   140007fec:	lea    r8,[rax+0x10]
   140007ff0:	mov    QWORD PTR [rax+0x18],r15
   140007ff4:	lea    edx,[r15+0x1]
   140007ff8:	call   QWORD PTR [rip+0x6262]        # 0x14000e260
   140007ffe:	mov    esi,eax
   140008000:	test   eax,eax
   140008002:	je     0x14000805d
   140008004:	mov    ecx,esi
   140008006:	add    rcx,rcx
   140008009:	call   QWORD PTR [rip+0x6649]        # 0x14000e658
   14000800f:	mov    rdi,rax
   140008012:	test   rax,rax
   140008015:	je     0x140008056
   140008017:	lea    r9,[rsp+0x60]
   14000801c:	mov    r8,rax
   14000801f:	mov    edx,esi
   140008021:	mov    rcx,rbp
   140008024:	call   QWORD PTR [rip+0x6236]        # 0x14000e260
   14000802a:	test   eax,eax
   14000802c:	je     0x14000805d
   14000802e:	cmp    eax,esi
   140008030:	jae    0x140008064
   140008032:	mov    rcx,QWORD PTR [rsp+0x60]
   140008037:	test   rcx,rcx
   14000803a:	je     0x140008064
   14000803c:	lea    edx,[r15+0x2e]
   140008040:	call   QWORD PTR [rip+0x64ba]        # 0x14000e500
   140008046:	test   rax,rax
   140008049:	je     0x140008064
   14000804b:	mov    r14,rdi
   14000804e:	mov    ebx,r15d
   140008051:	mov    edi,r15d
   140008054:	jmp    0x140008064
   140008056:	mov    ebx,0x8007000e
   14000805b:	jmp    0x140008064
   14000805d:	call   0x14000c1b8
   140008062:	mov    ebx,eax
   140008064:	mov    rcx,rdi
   140008067:	call   QWORD PTR [rip+0x65db]        # 0x14000e648
   14000806d:	mov    rcx,r14
   140008070:	call   QWORD PTR [rip+0x65d2]        # 0x14000e648
   140008076:	mov    eax,ebx
   140008078:	mov    rbx,QWORD PTR [rsp+0x50]
   14000807d:	add    rsp,0x20
   140008081:	pop    r15
   140008083:	pop    r14
   140008085:	pop    rdi
   140008086:	pop    rsi
   140008087:	pop    rbp
   140008088:	ret    
   140008089:	int3   
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	mov    QWORD PTR [rsp+0x8],rbx
   140008095:	push   rbp
   140008096:	push   rsi
   140008097:	push   rdi
   140008098:	push   r12
   14000809a:	push   r13
   14000809c:	push   r14
   14000809e:	push   r15
   1400080a0:	mov    rbp,rsp
   1400080a3:	sub    rsp,0x50
   1400080a7:	xor    r12d,r12d
   1400080aa:	lea    rax,[rbp+0x50]
   1400080ae:	mov    r15,rdx
   1400080b1:	mov    DWORD PTR [rbp+0x50],r12d
   1400080b5:	xor    r9d,r9d
   1400080b8:	mov    QWORD PTR [rsp+0x20],rax
   1400080bd:	xor    r8d,r8d
   1400080c0:	mov    rsi,rcx
   1400080c3:	lea    r14d,[r12+0x10]
   1400080c8:	mov    ebx,r12d
   1400080cb:	mov    edx,r14d
   1400080ce:	mov    edi,r12d
   1400080d1:	call   QWORD PTR [rip+0x5fb9]        # 0x14000e090
   1400080d7:	mov    r13d,0x80070000
   1400080dd:	test   eax,eax
   1400080df:	jne    0x14000813f
   1400080e1:	mov    QWORD PTR [r15],r12
   1400080e4:	call   QWORD PTR [rip+0x6206]        # 0x14000e2f0
   1400080ea:	cmp    eax,0x7a
   1400080ed:	jne    0x140008132
   1400080ef:	mov    edx,DWORD PTR [rbp+0x50]
   1400080f2:	lea    ecx,[rax-0x3a]
   1400080f5:	call   QWORD PTR [rip+0x60b5]        # 0x14000e1b0
   1400080fb:	mov    rdi,rax
   1400080fe:	test   rax,rax
   140008101:	jne    0x14000810c
   140008103:	lea    ebx,[r13+0xe]
   140008107:	jmp    0x140008264
   14000810c:	mov    r9d,DWORD PTR [rbp+0x50]
   140008110:	lea    rax,[rbp+0x50]
   140008114:	mov    r8,rdi
   140008117:	mov    QWORD PTR [rsp+0x20],rax
   14000811c:	mov    edx,r14d
   14000811f:	mov    rcx,rsi
   140008122:	call   QWORD PTR [rip+0x5f68]        # 0x14000e090
   140008128:	test   eax,eax
   14000812a:	jne    0x14000814c
   14000812c:	call   QWORD PTR [rip+0x61be]        # 0x14000e2f0
   140008132:	movzx  ebx,ax
   140008135:	or     ebx,r13d
   140008138:	test   eax,eax
   14000813a:	cmovle ebx,eax
   14000813d:	jmp    0x140008144
   14000813f:	mov    ebx,0x8000ffff
   140008144:	test   ebx,ebx
   140008146:	jne    0x140008256
   14000814c:	lea    r9,[rbp-0x20]
   140008150:	mov    QWORD PTR [rbp-0x18],r12
   140008154:	lea    r8,[rbp-0x18]
   140008158:	mov    DWORD PTR [rbp+0x58],r12d
   14000815c:	lea    rdx,[rbp+0x58]
   140008160:	mov    DWORD PTR [rbp-0x20],r12d
   140008164:	mov    rcx,rdi
   140008167:	call   QWORD PTR [rip+0x5f6b]        # 0x14000e0d8
   14000816d:	test   eax,eax
   14000816f:	je     0x140008245
   140008175:	cmp    DWORD PTR [rbp+0x58],r12d
   140008179:	je     0x140008231
   14000817f:	mov    rcx,QWORD PTR [rbp-0x18]
   140008183:	test   rcx,rcx
   140008186:	je     0x140008231
   14000818c:	cmp    WORD PTR [rcx+0x4],r12w
   140008191:	je     0x140008231
   140008197:	lea    r8,[rbp-0x10]
   14000819b:	mov    QWORD PTR [rbp-0x10],r12
   14000819f:	xor    edx,edx
   1400081a1:	call   QWORD PTR [rip+0x5f19]        # 0x14000e0c0
   1400081a7:	test   eax,eax
   1400081a9:	je     0x140008245
   1400081af:	mov    rsi,QWORD PTR [rbp-0x10]
   1400081b3:	test   BYTE PTR [rsi+0x1],0x8
   1400081b7:	je     0x1400081c3
   1400081b9:	mov    ebx,0x8007053c
   1400081be:	jmp    0x140008256
   1400081c3:	add    rsi,0x8
   1400081c7:	je     0x14000822a
   1400081c9:	mov    rcx,rsi
   1400081cc:	call   QWORD PTR [rip+0x5f0e]        # 0x14000e0e0
   1400081d2:	mov    edx,eax
   1400081d4:	mov    ecx,0x40
   1400081d9:	call   QWORD PTR [rip+0x5fd1]        # 0x14000e1b0
   1400081df:	mov    r14,rax
   1400081e2:	test   rax,rax
   1400081e5:	je     0x140008223
   1400081e7:	mov    rcx,rsi
   1400081ea:	call   QWORD PTR [rip+0x5ef0]        # 0x14000e0e0
   1400081f0:	mov    r8,rsi
   1400081f3:	mov    rdx,r14
   1400081f6:	mov    ecx,eax
   1400081f8:	call   QWORD PTR [rip+0x5e9a]        # 0x14000e098
   1400081fe:	test   eax,eax
   140008200:	je     0x140008207
   140008202:	mov    QWORD PTR [r15],r14
   140008205:	jmp    0x140008256
   140008207:	call   QWORD PTR [rip+0x60e3]        # 0x14000e2f0
   14000820d:	movzx  ebx,ax
   140008210:	mov    rcx,r14
   140008213:	or     ebx,r13d
   140008216:	test   eax,eax
   140008218:	cmovle ebx,eax
   14000821b:	call   QWORD PTR [rip+0x5fb7]        # 0x14000e1d8
   140008221:	jmp    0x140008256
   140008223:	mov    ebx,0x8007000e
   140008228:	jmp    0x140008256
   14000822a:	mov    ebx,0x80004005
   14000822f:	jmp    0x140008256
   140008231:	mov    rdx,r15
   140008234:	lea    rcx,[rip+0x8e05]        # 0x140011040
   14000823b:	call   QWORD PTR [rip+0x5e6f]        # 0x14000e0b0
   140008241:	test   eax,eax
   140008243:	jne    0x140008256
   140008245:	call   QWORD PTR [rip+0x60a5]        # 0x14000e2f0
   14000824b:	movzx  ebx,ax
   14000824e:	or     ebx,r13d
   140008251:	test   eax,eax
   140008253:	cmovle ebx,eax
   140008256:	test   rdi,rdi
   140008259:	je     0x140008264
   14000825b:	mov    rcx,rdi
   14000825e:	call   QWORD PTR [rip+0x5f74]        # 0x14000e1d8
   140008264:	mov    eax,ebx
   140008266:	mov    rbx,QWORD PTR [rsp+0x90]
   14000826e:	add    rsp,0x50
   140008272:	pop    r15
   140008274:	pop    r14
   140008276:	pop    r13
   140008278:	pop    r12
   14000827a:	pop    rdi
   14000827b:	pop    rsi
   14000827c:	pop    rbp
   14000827d:	ret    
   14000827e:	int3   
   14000827f:	int3   
   140008280:	int3   
   140008281:	int3   
   140008282:	int3   
   140008283:	int3   
   140008284:	mov    rax,rsp
   140008287:	mov    QWORD PTR [rax+0x8],rbx
   14000828b:	mov    QWORD PTR [rax+0x10],rbp
   14000828f:	mov    QWORD PTR [rax+0x20],rsi
   140008293:	push   rdi
   140008294:	sub    rsp,0x30
   140008298:	and    DWORD PTR [rax+0x18],0x0
   14000829c:	lea    rax,[rax+0x18]
   1400082a0:	xor    r9d,r9d
   1400082a3:	mov    QWORD PTR [rsp+0x20],rax
   1400082a8:	mov    rsi,rdx
   1400082ab:	xor    r8d,r8d
   1400082ae:	mov    rbp,rcx
   1400082b1:	mov    ebx,0x8000ffff
   1400082b6:	lea    edx,[r9+0x7]
   1400082ba:	call   QWORD PTR [rip+0x5dd0]        # 0x14000e090
   1400082c0:	test   eax,eax
   1400082c2:	jne    0x14000834a
   1400082c8:	xor    ebx,ebx
   1400082ca:	call   QWORD PTR [rip+0x6020]        # 0x14000e2f0
   1400082d0:	cmp    eax,0x7a
   1400082d3:	je     0x1400082e5
   1400082d5:	movzx  ebx,ax
   1400082d8:	or     ebx,0x80070000
   1400082de:	test   eax,eax
   1400082e0:	cmovle ebx,eax
   1400082e3:	jmp    0x140008301
   1400082e5:	mov    edx,DWORD PTR [rsp+0x50]
   1400082e9:	mov    ecx,0x40
   1400082ee:	call   QWORD PTR [rip+0x5ebc]        # 0x14000e1b0
   1400082f4:	mov    rdi,rax
   1400082f7:	test   rax,rax
   1400082fa:	jne    0x14000830f
   1400082fc:	mov    ebx,0x8007000e
   140008301:	and    QWORD PTR [rsi],0x0
   140008305:	xor    ecx,ecx
   140008307:	call   QWORD PTR [rip+0x5ecb]        # 0x14000e1d8
   14000830d:	jmp    0x14000834a
   14000830f:	mov    r9d,DWORD PTR [rsp+0x50]
   140008314:	lea    rax,[rsp+0x50]
   140008319:	mov    r8,rdi
   14000831c:	mov    QWORD PTR [rsp+0x20],rax
   140008321:	mov    edx,0x7
   140008326:	mov    rcx,rbp
   140008329:	call   QWORD PTR [rip+0x5d61]        # 0x14000e090
   14000832f:	test   eax,eax
   140008331:	jne    0x140008347
   140008333:	call   QWORD PTR [rip+0x5fb7]        # 0x14000e2f0
   140008339:	movzx  ebx,ax
   14000833c:	or     ebx,0x80070000
   140008342:	test   eax,eax
   140008344:	cmovle ebx,eax
   140008347:	mov    QWORD PTR [rsi],rdi
   14000834a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000834f:	mov    eax,ebx
   140008351:	mov    rbx,QWORD PTR [rsp+0x40]
   140008356:	mov    rsi,QWORD PTR [rsp+0x58]
   14000835b:	add    rsp,0x30
   14000835f:	pop    rdi
   140008360:	ret    
   140008361:	int3   
   140008362:	int3   
   140008363:	int3   
   140008364:	int3   
   140008365:	int3   
   140008366:	int3   
   140008367:	int3   
   140008368:	mov    QWORD PTR [rsp+0x18],rbx
   14000836d:	mov    QWORD PTR [rsp+0x20],rbp
   140008372:	push   rsi
   140008373:	push   rdi
   140008374:	push   r14
   140008376:	sub    rsp,0x30
   14000837a:	and    QWORD PTR [rcx],0x0
   14000837e:	mov    ebx,edx
   140008380:	mov    r14,rcx
   140008383:	call   QWORD PTR [rip+0x5e77]        # 0x14000e200
   140008389:	xor    r8d,r8d
   14000838c:	lea    r9,[rsp+0x50]
   140008391:	mov    rcx,rax
   140008394:	lea    edx,[r8+0x8]
   140008398:	call   QWORD PTR [rip+0x5ce2]        # 0x14000e080
   14000839e:	test   eax,eax
   1400083a0:	jne    0x1400083ac
   1400083a2:	mov    ebx,0x80004005
   1400083a7:	jmp    0x1400084c1
   1400083ac:	mov    rcx,QWORD PTR [rsp+0x50]
   1400083b1:	lea    rax,[rsp+0x58]
   1400083b6:	and    DWORD PTR [rsp+0x58],0x0
   1400083bb:	xor    r9d,r9d
   1400083be:	xor    r8d,r8d
   1400083c1:	mov    QWORD PTR [rsp+0x20],rax
   1400083c6:	lea    ebp,[r9+0x1]
   1400083ca:	mov    edx,ebp
   1400083cc:	call   QWORD PTR [rip+0x5cb6]        # 0x14000e088
   1400083d2:	test   eax,eax
   1400083d4:	jne    0x1400084b1
   1400083da:	call   QWORD PTR [rip+0x5f10]        # 0x14000e2f0
   1400083e0:	cmp    eax,0x7a
   1400083e3:	je     0x1400083f8
   1400083e5:	movzx  ebx,ax
   1400083e8:	or     ebx,0x80070000
   1400083ee:	test   eax,eax
   1400083f0:	cmovle ebx,eax
   1400083f3:	jmp    0x1400084b6
   1400083f8:	mov    edx,DWORD PTR [rsp+0x58]
   1400083fc:	mov    edi,0x40
   140008401:	mov    ecx,edi
   140008403:	call   QWORD PTR [rip+0x5da7]        # 0x14000e1b0
   140008409:	mov    rsi,rax
   14000840c:	test   rax,rax
   14000840f:	jne    0x14000841b
   140008411:	mov    ebx,0x8007000e
   140008416:	jmp    0x1400084b6
   14000841b:	mov    r9d,DWORD PTR [rsp+0x58]
   140008420:	lea    rax,[rsp+0x58]
   140008425:	mov    rcx,QWORD PTR [rsp+0x50]
   14000842a:	mov    r8,rsi
   14000842d:	mov    edx,ebp
   14000842f:	mov    QWORD PTR [rsp+0x20],rax
   140008434:	call   QWORD PTR [rip+0x5c4e]        # 0x14000e088
   14000843a:	test   eax,eax
   14000843c:	jne    0x140008454
   14000843e:	call   QWORD PTR [rip+0x5eac]        # 0x14000e2f0
   140008444:	movzx  ebx,ax
   140008447:	or     ebx,0x80070000
   14000844d:	test   eax,eax
   14000844f:	cmovle ebx,eax
   140008452:	jmp    0x1400084a6
   140008454:	mov    rcx,QWORD PTR [rsi]
   140008457:	call   QWORD PTR [rip+0x5c83]        # 0x14000e0e0
   14000845d:	mov    edx,eax
   14000845f:	mov    ecx,edi
   140008461:	mov    ebp,eax
   140008463:	call   QWORD PTR [rip+0x5d47]        # 0x14000e1b0
   140008469:	mov    rdi,rax
   14000846c:	test   rax,rax
   14000846f:	jne    0x140008478
   140008471:	mov    ebx,0x8007000e
   140008476:	jmp    0x1400084a6
   140008478:	mov    r8,QWORD PTR [rsi]
   14000847b:	mov    rdx,rax
   14000847e:	mov    ecx,ebp
   140008480:	call   QWORD PTR [rip+0x5c12]        # 0x14000e098
   140008486:	mov    rcx,rdi
   140008489:	call   QWORD PTR [rip+0x5c41]        # 0x14000e0d0
   14000848f:	test   eax,eax
   140008491:	je     0x140008498
   140008493:	mov    QWORD PTR [r14],rdi
   140008496:	jmp    0x1400084a6
   140008498:	mov    rcx,rdi
   14000849b:	mov    ebx,0x80004005
   1400084a0:	call   QWORD PTR [rip+0x5d32]        # 0x14000e1d8
   1400084a6:	mov    rcx,rsi
   1400084a9:	call   QWORD PTR [rip+0x5d29]        # 0x14000e1d8
   1400084af:	jmp    0x1400084b6
   1400084b1:	mov    ebx,0x8000ffff
   1400084b6:	mov    rcx,QWORD PTR [rsp+0x50]
   1400084bb:	call   QWORD PTR [rip+0x5eaf]        # 0x14000e370
   1400084c1:	call   QWORD PTR [rip+0x6179]        # 0x14000e640
   1400084c7:	mov    rbp,QWORD PTR [rsp+0x68]
   1400084cc:	mov    eax,ebx
   1400084ce:	mov    rbx,QWORD PTR [rsp+0x60]
   1400084d3:	add    rsp,0x30
   1400084d7:	pop    r14
   1400084d9:	pop    rdi
   1400084da:	pop    rsi
   1400084db:	ret    
   1400084dc:	int3   
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	int3   
   1400084e1:	int3   
   1400084e2:	int3   
   1400084e3:	int3   
   1400084e4:	mov    rax,rsp
   1400084e7:	mov    QWORD PTR [rax+0x8],rbx
   1400084eb:	mov    QWORD PTR [rax+0x10],rsi
   1400084ef:	mov    DWORD PTR [rax+0x18],r8d
   1400084f3:	push   rbp
   1400084f4:	push   rdi
   1400084f5:	push   r14
   1400084f7:	lea    rbp,[rax-0x5f]
   1400084fb:	sub    rsp,0xa0
   140008502:	mov    rbx,rdx
   140008505:	mov    rdi,rcx
   140008508:	xor    edx,edx
   14000850a:	lea    rcx,[rbp+0x17]
   14000850e:	lea    r8d,[rdx+0x28]
   140008512:	call   0x14000d326
   140008517:	xor    edx,edx
   140008519:	lea    rcx,[rbp-0x9]
   14000851d:	lea    r8d,[rdx+0x20]
   140008521:	call   0x14000d326
   140008526:	xor    esi,esi
   140008528:	mov    DWORD PTR [rbp+0x17],0x2000000
   14000852f:	mov    QWORD PTR [rsp+0x40],rsi
   140008534:	lea    rax,[rbp+0x77]
   140008538:	mov    QWORD PTR [rbp-0x1],rax
   14000853c:	lea    r8,[rbp+0x17]
   140008540:	lea    rax,[rbp+0x7f]
   140008544:	mov    DWORD PTR [rbp+0x77],esi
   140008547:	mov    QWORD PTR [rbp+0xf],rax
   14000854b:	lea    r14d,[rsi+0x1]
   14000854f:	lea    rax,[rbp-0x9]
   140008553:	mov    DWORD PTR [rbp+0x7f],esi
   140008556:	mov    QWORD PTR [rsp+0x38],rax
   14000855b:	xorps  xmm0,xmm0
   14000855e:	mov    DWORD PTR [rsp+0x30],esi
   140008562:	xor    r9d,r9d
   140008565:	mov    QWORD PTR [rsp+0x28],rsi
   14000856a:	mov    rdx,rdi
   14000856d:	xor    ecx,ecx
   14000856f:	mov    QWORD PTR [rsp+0x20],rbx
   140008574:	movdqu XMMWORD PTR [rbp+0x1f],xmm0
   140008579:	mov    DWORD PTR [rbp+0x2f],esi
   14000857c:	mov    QWORD PTR [rbp+0x37],rsi
   140008580:	mov    DWORD PTR [rbp-0x9],r14d
   140008584:	call   QWORD PTR [rip+0x5bce]        # 0x14000e158
   14000858a:	test   eax,eax
   14000858c:	je     0x14000859e
   14000858e:	mov    rcx,QWORD PTR [rbp-0x1]
   140008592:	mov    edx,DWORD PTR [rcx]
   140008594:	and    edx,0x500d0000
   14000859a:	cmovne esi,r14d
   14000859e:	lea    r11,[rsp+0xa0]
   1400085a6:	mov    eax,esi
   1400085a8:	mov    rbx,QWORD PTR [r11+0x20]
   1400085ac:	mov    rsi,QWORD PTR [r11+0x28]
   1400085b0:	mov    rsp,r11
   1400085b3:	pop    r14
   1400085b5:	pop    rdi
   1400085b6:	pop    rbp
   1400085b7:	ret    
   1400085b8:	int3   
   1400085b9:	int3   
   1400085ba:	int3   
   1400085bb:	int3   
   1400085bc:	int3   
   1400085bd:	int3   
   1400085be:	int3   
   1400085bf:	int3   
   1400085c0:	mov    rax,rsp
   1400085c3:	mov    QWORD PTR [rax+0x8],rbx
   1400085c7:	mov    QWORD PTR [rax+0x20],rsi
   1400085cb:	push   rdi
   1400085cc:	sub    rsp,0x40
   1400085d0:	xor    ebx,ebx
   1400085d2:	xor    r9d,r9d
   1400085d5:	and    QWORD PTR [rax-0x18],rbx
   1400085d9:	xor    r8d,r8d
   1400085dc:	mov    DWORD PTR [rax-0x20],0x2000000
   1400085e3:	mov    edx,0x20000
   1400085e8:	mov    DWORD PTR [rax-0x28],0x3
   1400085ef:	mov    rsi,rcx
   1400085f2:	call   QWORD PTR [rip+0x5db8]        # 0x14000e3b0
   1400085f8:	mov    rdi,rax
   1400085fb:	cmp    rax,0xffffffffffffffff
   1400085ff:	je     0x14000868a
   140008605:	and    QWORD PTR [rsp+0x60],rbx
   14000860a:	lea    rdx,[rsp+0x60]
   14000860f:	lea    rcx,[rip+0x8bb6]        # 0x1400111cc
   140008616:	call   QWORD PTR [rip+0x5a94]        # 0x14000e0b0
   14000861c:	test   eax,eax
   14000861e:	je     0x140008681
   140008620:	and    QWORD PTR [rsp+0x58],rbx
   140008625:	lea    rdx,[rsp+0x58]
   14000862a:	mov    rcx,rdi
   14000862d:	call   0x140008090
   140008632:	test   eax,eax
   140008634:	js     0x14000864d
   140008636:	mov    rdx,QWORD PTR [rsp+0x58]
   14000863b:	mov    rcx,QWORD PTR [rsp+0x60]
   140008640:	call   QWORD PTR [rip+0x5a5a]        # 0x14000e0a0
   140008646:	test   eax,eax
   140008648:	sete   bl
   14000864b:	jmp    0x140008666
   14000864d:	cmp    eax,0x8007053c
   140008652:	jne    0x140008666
   140008654:	mov    rcx,rsi
   140008657:	call   0x14000c3a0
   14000865c:	test   eax,eax
   14000865e:	mov    ecx,0x1
   140008663:	cmovne ebx,ecx
   140008666:	mov    rcx,QWORD PTR [rsp+0x58]
   14000866b:	test   rcx,rcx
   14000866e:	je     0x140008676
   140008670:	call   QWORD PTR [rip+0x5b62]        # 0x14000e1d8
   140008676:	mov    rcx,QWORD PTR [rsp+0x60]
   14000867b:	call   QWORD PTR [rip+0x5b57]        # 0x14000e1d8
   140008681:	mov    rcx,rdi
   140008684:	call   QWORD PTR [rip+0x5ce6]        # 0x14000e370
   14000868a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000868f:	mov    eax,ebx
   140008691:	mov    rbx,QWORD PTR [rsp+0x50]
   140008696:	add    rsp,0x40
   14000869a:	pop    rdi
   14000869b:	ret    
   14000869c:	int3   
   14000869d:	int3   
   14000869e:	int3   
   14000869f:	int3   
   1400086a0:	int3   
   1400086a1:	int3   
   1400086a2:	int3   
   1400086a3:	int3   
   1400086a4:	mov    rax,rsp
   1400086a7:	mov    QWORD PTR [rax+0x8],rbx
   1400086ab:	mov    QWORD PTR [rax+0x10],rsi
   1400086af:	push   rbp
   1400086b0:	push   r14
   1400086b2:	push   r15
   1400086b4:	mov    rbp,rsp
   1400086b7:	sub    rsp,0x50
   1400086bb:	mov    r14,rdx
   1400086be:	xor    ebx,ebx
   1400086c0:	mov    QWORD PTR [rax-0x38],rbx
   1400086c4:	xor    r9d,r9d
   1400086c7:	mov    DWORD PTR [rax-0x40],0x2000000
   1400086ce:	xor    r8d,r8d
   1400086d1:	mov    edx,0x20000
   1400086d6:	mov    DWORD PTR [rax-0x48],0x3
   1400086dd:	call   QWORD PTR [rip+0x5ccd]        # 0x14000e3b0
   1400086e3:	mov    rsi,rax
   1400086e6:	cmp    rax,0xffffffffffffffff
   1400086ea:	je     0x1400087a6
   1400086f0:	lea    rdx,[rbp+0x30]
   1400086f4:	mov    QWORD PTR [rbp+0x30],rbx
   1400086f8:	mov    rcx,rax
   1400086fb:	call   0x140008284
   140008700:	test   eax,eax
   140008702:	js     0x14000879d
   140008708:	cmp    QWORD PTR [rbp+0x30],rbx
   14000870c:	je     0x14000879d
   140008712:	lea    rax,[rbp-0x8]
   140008716:	xor    r9d,r9d
   140008719:	mov    QWORD PTR [rsp+0x28],rax
   14000871e:	lea    r15d,[rbx+0x1]
   140008722:	mov    ecx,r15d
   140008725:	mov    QWORD PTR [rsp+0x20],rbx
   14000872a:	xor    r8d,r8d
   14000872d:	xor    edx,edx
   14000872f:	call   QWORD PTR [rip+0x5a2b]        # 0x14000e160
   140008735:	test   eax,eax
   140008737:	je     0x140008793
   140008739:	mov    r8,QWORD PTR [rbp-0x8]
   14000873d:	lea    rax,[rbp+0x38]
   140008741:	mov    QWORD PTR [rsp+0x30],rax
   140008746:	xor    r9d,r9d
   140008749:	mov    QWORD PTR [rsp+0x28],rbx
   14000874e:	mov    eax,ebx
   140008750:	mov    rdx,r14
   140008753:	mov    QWORD PTR [rsp+0x20],rbx
   140008758:	xor    ecx,ecx
   14000875a:	mov    QWORD PTR [rbp-0x10],rbx
   14000875e:	mov    QWORD PTR [rbp+0x38],rbx
   140008762:	call   QWORD PTR [rip+0x5a00]        # 0x14000e168
   140008768:	test   eax,eax
   14000876a:	je     0x140008789
   14000876c:	mov    rdx,QWORD PTR [rbp+0x30]
   140008770:	mov    rcx,QWORD PTR [rbp+0x38]
   140008774:	call   0x1400084e4
   140008779:	mov    rcx,QWORD PTR [rbp+0x38]
   14000877d:	test   eax,eax
   14000877f:	cmove  ebx,r15d
   140008783:	call   QWORD PTR [rip+0x59bf]        # 0x14000e148
   140008789:	mov    rcx,QWORD PTR [rbp-0x8]
   14000878d:	call   QWORD PTR [rip+0x59bd]        # 0x14000e150
   140008793:	mov    rcx,QWORD PTR [rbp+0x30]
   140008797:	call   QWORD PTR [rip+0x5a3b]        # 0x14000e1d8
   14000879d:	mov    rcx,rsi
   1400087a0:	call   QWORD PTR [rip+0x5bca]        # 0x14000e370
   1400087a6:	mov    rsi,QWORD PTR [rsp+0x78]
   1400087ab:	mov    eax,ebx
   1400087ad:	mov    rbx,QWORD PTR [rsp+0x70]
   1400087b2:	add    rsp,0x50
   1400087b6:	pop    r15
   1400087b8:	pop    r14
   1400087ba:	pop    rbp
   1400087bb:	ret    
   1400087bc:	int3   
   1400087bd:	int3   
   1400087be:	int3   
   1400087bf:	int3   
   1400087c0:	int3   
   1400087c1:	int3   
   1400087c2:	int3   
   1400087c3:	int3   
   1400087c4:	mov    rax,rsp
   1400087c7:	mov    QWORD PTR [rax+0x18],rbx
   1400087cb:	mov    QWORD PTR [rax+0x20],rbp
   1400087cf:	push   rsi
   1400087d0:	push   rdi
   1400087d1:	push   r13
   1400087d3:	push   r14
   1400087d5:	push   r15
   1400087d7:	sub    rsp,0x40
   1400087db:	xor    r13d,r13d
   1400087de:	mov    rbp,rcx
   1400087e1:	mov    DWORD PTR [rax+0x8],r13d
   1400087e5:	mov    ebx,0x1
   1400087ea:	mov    QWORD PTR [rax+0x10],r13
   1400087ee:	mov    r15d,r13d
   1400087f1:	test   rcx,rcx
   1400087f4:	je     0x140008a1a
   1400087fa:	or     rdi,0xffffffffffffffff
   1400087fe:	inc    rdi
   140008801:	cmp    WORD PTR [rcx+rdi*2],r13w
   140008806:	jne    0x1400087fe
   140008808:	lea    r14,[rdi+0x1]
   14000880c:	cmp    r14,rdi
   14000880f:	jb     0x140008a1a
   140008815:	mov    eax,0x2
   14000881a:	mul    r14
   14000881d:	test   rdx,rdx
   140008820:	jne    0x140008a1a
   140008826:	mov    rcx,rax
   140008829:	call   QWORD PTR [rip+0x5e29]        # 0x14000e658
   14000882f:	mov    rsi,rax
   140008832:	test   rax,rax
   140008835:	je     0x140008a1a
   14000883b:	mov    r9,rdi
   14000883e:	mov    r8,rbp
   140008841:	mov    rdx,r14
   140008844:	mov    rcx,rax
   140008847:	call   0x140005b8c
   14000884c:	lea    rcx,[rsp+0x70]
   140008851:	call   0x14000a204
   140008856:	test   eax,eax
   140008858:	jns    0x140008862
   14000885a:	mov    ebx,r13d
   14000885d:	jmp    0x140008a0f
   140008862:	cmp    DWORD PTR [rsp+0x70],r13d
   140008867:	je     0x140008899
   140008869:	call   QWORD PTR [rip+0x5de1]        # 0x14000e650
   14000886f:	test   eax,eax
   140008871:	js     0x140008949
   140008877:	mov    edx,eax
   140008879:	lea    rcx,[rsp+0x78]
   14000887e:	call   0x140008368
   140008883:	mov    r15,QWORD PTR [rsp+0x78]
   140008888:	test   eax,eax
   14000888a:	js     0x140008949
   140008890:	test   r15,r15
   140008893:	je     0x140008949
   140008899:	mov    rcx,rsi
   14000889c:	call   QWORD PTR [rip+0x5b16]        # 0x14000e3b8
   1400088a2:	mov    edi,eax
   1400088a4:	call   QWORD PTR [rip+0x5a46]        # 0x14000e2f0
   1400088aa:	or     ebp,0xffffffff
   1400088ad:	cmp    edi,ebp
   1400088af:	jne    0x1400088f7
   1400088b1:	add    eax,0xfffffffe
   1400088b4:	cmp    eax,ebx
   1400088b6:	ja     0x1400088f3
   1400088b8:	mov    rcx,rsi
   1400088bb:	call   0x14000c3a0
   1400088c0:	test   eax,eax
   1400088c2:	jne    0x1400088f3
   1400088c4:	or     rdx,0xffffffffffffffff
   1400088c8:	inc    rdx
   1400088cb:	cmp    WORD PTR [rsi+rdx*2],r13w
   1400088d0:	jne    0x1400088c8
   1400088d2:	mov    rcx,rsi
   1400088d5:	call   0x14000c650
   1400088da:	test   eax,eax
   1400088dc:	js     0x1400088f3
   1400088de:	mov    rcx,rsi
   1400088e1:	call   QWORD PTR [rip+0x5ad1]        # 0x14000e3b8
   1400088e7:	mov    edi,eax
   1400088e9:	call   QWORD PTR [rip+0x5a01]        # 0x14000e2f0
   1400088ef:	cmp    edi,ebp
   1400088f1:	je     0x1400088b1
   1400088f3:	cmp    edi,ebp
   1400088f5:	je     0x140008917
   1400088f7:	test   dil,0x10
   1400088fb:	jne    0x140008917
   1400088fd:	or     rdx,0xffffffffffffffff
   140008901:	inc    rdx
   140008904:	cmp    WORD PTR [rsi+rdx*2],r13w
   140008909:	jne    0x140008901
   14000890b:	mov    rcx,rsi
   14000890e:	call   0x14000c650
   140008913:	test   eax,eax
   140008915:	js     0x140008949
   140008917:	mov    QWORD PTR [rsp+0x30],r13
   14000891c:	xor    r9d,r9d
   14000891f:	mov    DWORD PTR [rsp+0x28],0x2000000
   140008927:	xor    r8d,r8d
   14000892a:	mov    edx,0x20000
   14000892f:	mov    DWORD PTR [rsp+0x20],0x3
   140008937:	mov    rcx,rsi
   14000893a:	call   QWORD PTR [rip+0x5a70]        # 0x14000e3b0
   140008940:	mov    r14,rax
   140008943:	cmp    rax,0xffffffffffffffff
   140008947:	jne    0x140008951
   140008949:	mov    ebx,r13d
   14000894c:	jmp    0x140008a01
   140008951:	xor    r9d,r9d
   140008954:	xor    r8d,r8d
   140008957:	xor    edx,edx
   140008959:	mov    rcx,rax
   14000895c:	call   QWORD PTR [rip+0x5866]        # 0x14000e1c8
   140008962:	mov    edi,eax
   140008964:	test   eax,eax
   140008966:	je     0x140008993
   140008968:	mov    ecx,edi
   14000896a:	add    rcx,rcx
   14000896d:	call   QWORD PTR [rip+0x5ce5]        # 0x14000e658
   140008973:	mov    rbp,rax
   140008976:	test   rax,rax
   140008979:	je     0x140008993
   14000897b:	xor    r9d,r9d
   14000897e:	mov    r8d,edi
   140008981:	mov    rdx,rax
   140008984:	mov    rcx,r14
   140008987:	call   QWORD PTR [rip+0x583b]        # 0x14000e1c8
   14000898d:	mov    edi,eax
   14000898f:	test   eax,eax
   140008991:	jne    0x140008998
   140008993:	mov    ebx,r13d
   140008996:	jmp    0x1400089f8
   140008998:	inc    edi
   14000899a:	cmp    edi,0x8
   14000899d:	jb     0x1400089f8
   14000899f:	mov    rcx,rbp
   1400089a2:	call   0x1400085c0
   1400089a7:	mov    ebx,eax
   1400089a9:	test   eax,eax
   1400089ab:	je     0x1400089c1
   1400089ad:	cmp    DWORD PTR [rsp+0x70],r13d
   1400089b2:	je     0x1400089c1
   1400089b4:	mov    rdx,r15
   1400089b7:	mov    rcx,rbp
   1400089ba:	call   0x1400086a4
   1400089bf:	mov    ebx,eax
   1400089c1:	mov    rcx,rbp
   1400089c4:	call   0x14000c3a0
   1400089c9:	test   eax,eax
   1400089cb:	jne    0x1400089f8
   1400089cd:	test   ebx,ebx
   1400089cf:	je     0x1400089f8
   1400089d1:	mov    edx,edi
   1400089d3:	mov    rcx,rbp
   1400089d6:	call   0x14000c650
   1400089db:	test   eax,eax
   1400089dd:	mov    ebx,r13d
   1400089e0:	setns  bl
   1400089e3:	or     rdi,0xffffffffffffffff
   1400089e7:	inc    rdi
   1400089ea:	cmp    WORD PTR [rbp+rdi*2+0x0],r13w
   1400089f0:	jne    0x1400089e7
   1400089f2:	inc    edi
   1400089f4:	test   ebx,ebx
   1400089f6:	jne    0x14000899a
   1400089f8:	mov    rcx,r14
   1400089fb:	call   QWORD PTR [rip+0x596f]        # 0x14000e370
   140008a01:	test   r15,r15
   140008a04:	je     0x140008a0f
   140008a06:	mov    rcx,r15
   140008a09:	call   QWORD PTR [rip+0x57c9]        # 0x14000e1d8
   140008a0f:	mov    rcx,rsi
   140008a12:	call   QWORD PTR [rip+0x5c30]        # 0x14000e648
   140008a18:	jmp    0x140008a1d
   140008a1a:	mov    ebx,r13d
   140008a1d:	lea    r11,[rsp+0x40]
   140008a22:	mov    eax,ebx
   140008a24:	mov    rbx,QWORD PTR [r11+0x40]
   140008a28:	mov    rbp,QWORD PTR [r11+0x48]
   140008a2c:	mov    rsp,r11
   140008a2f:	pop    r15
   140008a31:	pop    r14
   140008a33:	pop    r13
   140008a35:	pop    rdi
   140008a36:	pop    rsi
   140008a37:	ret    
   140008a38:	int3   
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	int3   
   140008a40:	mov    QWORD PTR [rsp+0x8],rbx
   140008a45:	mov    QWORD PTR [rsp+0x10],rsi
   140008a4a:	push   rdi
   140008a4b:	sub    rsp,0x20
   140008a4f:	mov    rax,QWORD PTR [rdx]
   140008a52:	xor    edi,edi
   140008a54:	cmp    rax,QWORD PTR [rip+0x8945]        # 0x1400113a0
   140008a5b:	mov    rsi,rcx
   140008a5e:	jne    0x140008a6d
   140008a60:	mov    rax,QWORD PTR [rdx+0x8]
   140008a64:	cmp    rax,QWORD PTR [rip+0x893d]        # 0x1400113a8
   140008a6b:	je     0x140008a86
   140008a6d:	mov    rax,QWORD PTR [rdx]
   140008a70:	cmp    rax,QWORD PTR [rip+0x8959]        # 0x1400113d0
   140008a77:	jne    0x140008aa0
   140008a79:	mov    rax,QWORD PTR [rdx+0x8]
   140008a7d:	cmp    rax,QWORD PTR [rip+0x8954]        # 0x1400113d8
   140008a84:	jne    0x140008aa0
   140008a86:	mov    QWORD PTR [r8],rcx
   140008a89:	mov    rax,QWORD PTR [rcx]
   140008a8c:	mov    rbx,QWORD PTR [rax+0x8]
   140008a90:	mov    rcx,rbx
   140008a93:	call   QWORD PTR [rip+0x5c2f]        # 0x14000e6c8
   140008a99:	mov    rcx,rsi
   140008a9c:	call   rbx
   140008a9e:	jmp    0x140008aa8
   140008aa0:	mov    QWORD PTR [r8],rdi
   140008aa3:	mov    edi,0x80004002
   140008aa8:	mov    rbx,QWORD PTR [rsp+0x30]
   140008aad:	mov    eax,edi
   140008aaf:	mov    rsi,QWORD PTR [rsp+0x38]
   140008ab4:	add    rsp,0x20
   140008ab8:	pop    rdi
   140008ab9:	ret    
   140008aba:	int3   
   140008abb:	int3   
   140008abc:	int3   
   140008abd:	int3   
   140008abe:	int3   
   140008abf:	int3   
   140008ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ac5:	mov    QWORD PTR [rsp+0x10],rsi
   140008aca:	mov    QWORD PTR [rsp+0x18],rdi
   140008acf:	push   r14
   140008ad1:	sub    rsp,0x20
   140008ad5:	mov    esi,DWORD PTR [rcx+0x8]
   140008ad8:	mov    rdi,rcx
   140008adb:	dec    esi
   140008add:	or     eax,0xffffffff
   140008ae0:	lock xadd DWORD PTR [rcx+0x8],eax
   140008ae5:	cmp    eax,0x1
   140008ae8:	jne    0x140008b2b
   140008aea:	lea    rax,[rip+0x5f7f]        # 0x14000ea70
   140008af1:	xor    esi,esi
   140008af3:	mov    QWORD PTR [rcx],rax
   140008af6:	mov    rcx,QWORD PTR [rcx+0x10]
   140008afa:	test   rcx,rcx
   140008afd:	je     0x140008b05
   140008aff:	call   QWORD PTR [rip+0x590b]        # 0x14000e410
   140008b05:	mov    r14,QWORD PTR [rdi+0x18]
   140008b09:	test   r14,r14
   140008b0c:	je     0x140008b23
   140008b0e:	mov    rdx,QWORD PTR [r14]
   140008b11:	mov    rbx,QWORD PTR [rdx+0x10]
   140008b15:	mov    rcx,rbx
   140008b18:	call   QWORD PTR [rip+0x5baa]        # 0x14000e6c8
   140008b1e:	mov    rcx,r14
   140008b21:	call   rbx
   140008b23:	mov    rcx,rdi
   140008b26:	call   0x14000116c
   140008b2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b30:	mov    eax,esi
   140008b32:	mov    rsi,QWORD PTR [rsp+0x38]
   140008b37:	mov    rdi,QWORD PTR [rsp+0x40]
   140008b3c:	add    rsp,0x20
   140008b40:	pop    r14
   140008b42:	ret    
   140008b43:	int3   
   140008b44:	int3   
   140008b45:	int3   
   140008b46:	int3   
   140008b47:	int3   
   140008b48:	int3   
   140008b49:	int3   
   140008b4a:	int3   
   140008b4b:	int3   
   140008b4c:	int3   
   140008b4d:	int3   
   140008b4e:	int3   
   140008b4f:	int3   
   140008b50:	sub    rsp,0x38
   140008b54:	mov    r10,rdx
   140008b57:	mov    eax,0x80004005
   140008b5c:	mov    rdx,QWORD PTR [rcx+0x10]
   140008b60:	test   rdx,rdx
   140008b63:	je     0x140008b8d
   140008b65:	mov    rcx,QWORD PTR [rcx+0x18]
   140008b69:	test   rcx,rcx
   140008b6c:	je     0x140008b8d
   140008b6e:	test   r8,r8
   140008b71:	je     0x140008b8d
   140008b73:	cmp    DWORD PTR [r8],0x200
   140008b7a:	jb     0x140008b8d
   140008b7c:	mov    QWORD PTR [rsp+0x20],r9
   140008b81:	mov    r9,r8
   140008b84:	mov    r8,r10
   140008b87:	call   QWORD PTR [rip+0x5b23]        # 0x14000e6b0
   140008b8d:	add    rsp,0x38
   140008b91:	ret    
   140008b92:	int3   
   140008b93:	int3   
   140008b94:	int3   
   140008b95:	int3   
   140008b96:	int3   
   140008b97:	int3   
   140008b98:	int3   
   140008b99:	int3   
   140008b9a:	int3   
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ba5:	mov    QWORD PTR [rsp+0x10],rbp
   140008baa:	mov    QWORD PTR [rsp+0x18],rsi
   140008baf:	push   rdi
   140008bb0:	push   r14
   140008bb2:	push   r15
   140008bb4:	sub    rsp,0x50
   140008bb8:	mov    rsi,QWORD PTR [rcx+0x10]
   140008bbc:	mov    ebp,r9d
   140008bbf:	mov    r14,r8
   140008bc2:	mov    r15d,edx
   140008bc5:	mov    eax,0x80004005
   140008bca:	test   rsi,rsi
   140008bcd:	je     0x140008c28
   140008bcf:	mov    rdi,QWORD PTR [rcx+0x18]
   140008bd3:	test   rdi,rdi
   140008bd6:	je     0x140008c28
   140008bd8:	mov    rax,QWORD PTR [rdi]
   140008bdb:	mov    rbx,QWORD PTR [rax+0x38]
   140008bdf:	mov    rcx,rbx
   140008be2:	call   QWORD PTR [rip+0x5ae0]        # 0x14000e6c8
   140008be8:	mov    eax,DWORD PTR [rsp+0xa8]
   140008bef:	mov    r9,r14
   140008bf2:	mov    DWORD PTR [rsp+0x40],eax
   140008bf6:	mov    r8d,r15d
   140008bf9:	mov    eax,DWORD PTR [rsp+0xa0]
   140008c00:	mov    rdx,rsi
   140008c03:	mov    DWORD PTR [rsp+0x38],eax
   140008c07:	mov    rcx,rdi
   140008c0a:	mov    eax,DWORD PTR [rsp+0x98]
   140008c11:	mov    DWORD PTR [rsp+0x30],eax
   140008c15:	mov    rax,QWORD PTR [rsp+0x90]
   140008c1d:	mov    QWORD PTR [rsp+0x28],rax
   140008c22:	mov    DWORD PTR [rsp+0x20],ebp
   140008c26:	call   rbx
   140008c28:	lea    r11,[rsp+0x50]
   140008c2d:	mov    rbx,QWORD PTR [r11+0x20]
   140008c31:	mov    rbp,QWORD PTR [r11+0x28]
   140008c35:	mov    rsi,QWORD PTR [r11+0x30]
   140008c39:	mov    rsp,r11
   140008c3c:	pop    r15
   140008c3e:	pop    r14
   140008c40:	pop    rdi
   140008c41:	ret    
   140008c42:	int3   
   140008c43:	int3   
   140008c44:	int3   
   140008c45:	int3   
   140008c46:	int3   
   140008c47:	int3   
   140008c48:	int3   
   140008c49:	int3   
   140008c4a:	int3   
   140008c4b:	int3   
   140008c4c:	int3   
   140008c4d:	int3   
   140008c4e:	int3   
   140008c4f:	int3   
   140008c50:	mov    QWORD PTR [rsp+0x8],rbx
   140008c55:	mov    QWORD PTR [rsp+0x10],rbp
   140008c5a:	mov    QWORD PTR [rsp+0x18],rsi
   140008c5f:	push   rdi
   140008c60:	push   r14
   140008c62:	push   r15
   140008c64:	sub    rsp,0x40
   140008c68:	mov    rsi,QWORD PTR [rcx+0x10]
   140008c6c:	mov    rbp,r9
   140008c6f:	mov    r14,r8
   140008c72:	mov    r15,rdx
   140008c75:	mov    eax,0x80004005
   140008c7a:	test   rsi,rsi
   140008c7d:	je     0x140008cce
   140008c7f:	mov    rdi,QWORD PTR [rcx+0x18]
   140008c83:	test   rdi,rdi
   140008c86:	je     0x140008cce
   140008c88:	mov    rax,QWORD PTR [rdi]
   140008c8b:	mov    rbx,QWORD PTR [rax+0x40]
   140008c8f:	mov    rcx,rbx
   140008c92:	call   QWORD PTR [rip+0x5a30]        # 0x14000e6c8
   140008c98:	mov    eax,DWORD PTR [rsp+0x90]
   140008c9f:	mov    r9,r14
   140008ca2:	mov    DWORD PTR [rsp+0x38],eax
   140008ca6:	mov    r8,r15
   140008ca9:	mov    eax,DWORD PTR [rsp+0x88]
   140008cb0:	mov    rdx,rsi
   140008cb3:	mov    DWORD PTR [rsp+0x30],eax
   140008cb7:	mov    rcx,rdi
   140008cba:	mov    rax,QWORD PTR [rsp+0x80]
   140008cc2:	mov    QWORD PTR [rsp+0x28],rax
   140008cc7:	mov    QWORD PTR [rsp+0x20],rbp
   140008ccc:	call   rbx
   140008cce:	mov    rbx,QWORD PTR [rsp+0x60]
   140008cd3:	mov    rbp,QWORD PTR [rsp+0x68]
   140008cd8:	mov    rsi,QWORD PTR [rsp+0x70]
   140008cdd:	add    rsp,0x40
   140008ce1:	pop    r15
   140008ce3:	pop    r14
   140008ce5:	pop    rdi
   140008ce6:	ret    
   140008ce7:	int3   
   140008ce8:	int3   
   140008ce9:	int3   
   140008cea:	int3   
   140008ceb:	int3   
   140008cec:	int3   
   140008ced:	int3   
   140008cee:	int3   
   140008cef:	int3   
   140008cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140008cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140008cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140008cff:	push   rdi
   140008d00:	sub    rsp,0x20
   140008d04:	mov    rsi,rcx
   140008d07:	xor    ecx,ecx
   140008d09:	call   QWORD PTR [rip+0x5929]        # 0x14000e638
   140008d0f:	xor    ebp,ebp
   140008d11:	mov    ebx,eax
   140008d13:	test   eax,eax
   140008d15:	js     0x140008db8
   140008d1b:	xor    eax,eax
   140008d1d:	lock cmpxchg QWORD PTR [rip+0xb962],rbp        # 0x140014688
   140008d26:	mov    rdi,rax
   140008d29:	jne    0x140008d56
   140008d2b:	lea    rcx,[rip+0x84a6]        # 0x1400111d8
   140008d32:	call   QWORD PTR [rip+0x5690]        # 0x14000e3c8
   140008d38:	mov    rdi,rax
   140008d3b:	test   rax,rax
   140008d3e:	jne    0x140008d56
   140008d40:	call   QWORD PTR [rip+0x55aa]        # 0x14000e2f0
   140008d46:	movzx  ebx,ax
   140008d49:	or     ebx,0x80070000
   140008d4f:	test   eax,eax
   140008d51:	cmovle ebx,eax
   140008d54:	jmp    0x140008db2
   140008d56:	lea    rdx,[rip+0x849b]        # 0x1400111f8
   140008d5d:	mov    rcx,rdi
   140008d60:	call   QWORD PTR [rip+0x54ea]        # 0x14000e250
   140008d66:	mov    rbx,rax
   140008d69:	test   rax,rax
   140008d6c:	je     0x140008d88
   140008d6e:	mov    rcx,rax
   140008d71:	call   QWORD PTR [rip+0x5951]        # 0x14000e6c8
   140008d77:	mov    r8,QWORD PTR [rsi+0x10]
   140008d7b:	mov    rdx,QWORD PTR [rsi+0x8]
   140008d7f:	mov    rcx,QWORD PTR [rsi]
   140008d82:	call   rbx
   140008d84:	mov    ebx,eax
   140008d86:	jmp    0x140008d9c
   140008d88:	call   QWORD PTR [rip+0x5562]        # 0x14000e2f0
   140008d8e:	movzx  ebx,ax
   140008d91:	or     ebx,0x80070000
   140008d97:	test   eax,eax
   140008d99:	cmovle ebx,eax
   140008d9c:	xor    eax,eax
   140008d9e:	lock cmpxchg QWORD PTR [rip+0xb8e1],rdi        # 0x140014688
   140008da7:	je     0x140008db2
   140008da9:	mov    rcx,rdi
   140008dac:	call   QWORD PTR [rip+0x5556]        # 0x14000e308
   140008db2:	call   QWORD PTR [rip+0x5878]        # 0x14000e630
   140008db8:	mov    rbp,QWORD PTR [rsp+0x38]
   140008dbd:	mov    eax,ebx
   140008dbf:	mov    rbx,QWORD PTR [rsp+0x30]
   140008dc4:	mov    rsi,QWORD PTR [rsp+0x40]
   140008dc9:	add    rsp,0x20
   140008dcd:	pop    rdi
   140008dce:	ret    
   140008dcf:	int3   
   140008dd0:	int3   
   140008dd1:	int3   
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	rex push rbp
   140008dda:	push   rbx
   140008ddb:	push   rsi
   140008ddc:	push   r12
   140008dde:	push   r13
   140008de0:	push   r14
   140008de2:	push   r15
   140008de4:	lea    rbp,[rsp-0x20]
   140008de9:	sub    rsp,0x120
   140008df0:	mov    rax,QWORD PTR [rbp+0xa0]
   140008df7:	mov    r15,r9
   140008dfa:	or     QWORD PTR [rsp+0x48],0xffffffffffffffff
   140008e00:	mov    r13,rdx
   140008e03:	mov    rsi,QWORD PTR [rbp+0x80]
   140008e0a:	mov    r12,rcx
   140008e0d:	mov    r14,QWORD PTR [rbp+0x88]
   140008e14:	mov    QWORD PTR [rsp+0x50],rax
   140008e19:	lea    rax,[r9-0x1]
   140008e1d:	mov    QWORD PTR [rsp+0x40],r8
   140008e22:	cmp    rax,0xfffffffffffffffd
   140008e26:	ja     0x140008e64
   140008e28:	call   QWORD PTR [rip+0x55b2]        # 0x14000e3e0
   140008e2e:	mov    rbx,rax
   140008e31:	call   QWORD PTR [rip+0x55a9]        # 0x14000e3e0
   140008e37:	mov    DWORD PTR [rsp+0x30],0x2
   140008e3f:	lea    r9,[rsp+0x48]
   140008e44:	and    DWORD PTR [rsp+0x28],0x0
   140008e49:	mov    rcx,rax
   140008e4c:	and    DWORD PTR [rsp+0x20],0x0
   140008e51:	mov    r8,rbx
   140008e54:	mov    rdx,r15
   140008e57:	call   QWORD PTR [rip+0x551b]        # 0x14000e378
   140008e5d:	mov    rbx,QWORD PTR [rsp+0x48]
   140008e62:	jmp    0x140008e97
   140008e64:	and    QWORD PTR [rsp+0x30],0x0
   140008e6a:	xor    r9d,r9d
   140008e6d:	mov    DWORD PTR [rsp+0x28],0x80
   140008e75:	mov    edx,0x80000000
   140008e7a:	mov    rcx,rsi
   140008e7d:	mov    DWORD PTR [rsp+0x20],0x3
   140008e85:	lea    r8d,[r9+0x1]
   140008e89:	call   QWORD PTR [rip+0x5521]        # 0x14000e3b0
   140008e8f:	mov    rbx,rax
   140008e92:	mov    QWORD PTR [rsp+0x48],rax
   140008e97:	lea    rcx,[rbx-0x1]
   140008e9b:	cmp    rcx,0xfffffffffffffffd
   140008e9f:	ja     0x140009031
   140008ea5:	and    DWORD PTR [rbp-0x20],0x0
   140008ea9:	lea    rcx,[rbp-0x1c]
   140008ead:	xor    edx,edx
   140008eaf:	lea    r8d,[rdx+0x3c]
   140008eb3:	call   0x14000d326
   140008eb8:	xor    eax,eax
   140008eba:	lea    rcx,[rbp-0x68]
   140008ebe:	xor    edx,edx
   140008ec0:	mov    QWORD PTR [rsp+0x70],rax
   140008ec5:	lea    r8d,[rax+0x48]
   140008ec9:	call   0x14000d326
   140008ece:	mov    rax,QWORD PTR [rsp+0x40]
   140008ed3:	mov    rcx,QWORD PTR [rip+0x8776]        # 0x140011650
   140008eda:	mov    QWORD PTR [rsp+0x60],rax
   140008edf:	mov    eax,DWORD PTR [rbp+0x90]
   140008ee5:	mov    DWORD PTR [rbp-0x58],eax
   140008ee8:	mov    eax,DWORD PTR [rbp+0x98]
   140008eee:	mov    DWORD PTR [rbp-0x24],eax
   140008ef1:	mov    rax,QWORD PTR [rsp+0x50]
   140008ef6:	mov    QWORD PTR [rbp-0x68],rax
   140008efa:	lea    rax,[rsp+0x58]
   140008eff:	mov    QWORD PTR [rsp+0x68],rbx
   140008f04:	xor    ebx,ebx
   140008f06:	mov    QWORD PTR [rbp-0x48],rax
   140008f0a:	mov    DWORD PTR [rsp+0x58],0x20
   140008f12:	mov    DWORD PTR [rbp-0x70],0x50
   140008f19:	mov    DWORD PTR [rbp-0x50],0x1
   140008f20:	call   QWORD PTR [rip+0x5572]        # 0x14000e498
   140008f26:	test   eax,eax
   140008f28:	je     0x140008f5f
   140008f2a:	and    QWORD PTR [rsp+0x30],rbx
   140008f2f:	lea    r9,[rsp+0x40]
   140008f34:	and    QWORD PTR [rsp+0x28],rbx
   140008f39:	lea    r8d,[rbx+0x1]
   140008f3d:	mov    rcx,QWORD PTR [rip+0x870c]        # 0x140011650
   140008f44:	xor    edx,edx
   140008f46:	mov    DWORD PTR [rsp+0x20],0x4
   140008f4e:	call   QWORD PTR [rip+0x554c]        # 0x14000e4a0
   140008f54:	test   eax,eax
   140008f56:	js     0x140008f5f
   140008f58:	cmp    DWORD PTR [rsp+0x40],ebx
   140008f5c:	setne  bl
   140008f5f:	neg    ebx
   140008f61:	sbb    eax,eax
   140008f63:	not    eax
   140008f65:	and    eax,0x2000
   140008f6a:	bts    eax,0xe
   140008f6e:	mov    DWORD PTR [rbp-0x28],eax
   140008f71:	test   r14,r14
   140008f74:	je     0x140008fad
   140008f76:	mov    rcx,rsi
   140008f79:	call   0x140006274
   140008f7e:	mov    rcx,QWORD PTR [rsp+0x48]
   140008f83:	mov    QWORD PTR [rbp-0x10],rax
   140008f87:	mov    eax,0x2
   140008f8c:	mov    DWORD PTR [rbp-0x50],eax
   140008f8f:	mov    DWORD PTR [rbp-0x58],eax
   140008f92:	lea    rax,[rbp-0x20]
   140008f96:	mov    QWORD PTR [rbp-0x48],rax
   140008f9a:	mov    DWORD PTR [rbp-0x20],0x40
   140008fa1:	mov    QWORD PTR [rbp-0x18],r14
   140008fa5:	mov    QWORD PTR [rbp-0x8],rsi
   140008fa9:	mov    QWORD PTR [rbp+0x0],rcx
   140008fad:	and    QWORD PTR [rsp+0x28],0x0
   140008fb3:	lea    rax,[rbp-0x70]
   140008fb7:	and    DWORD PTR [rsp+0x40],0x0
   140008fbc:	lea    r9,[rsp+0x78]
   140008fc1:	and    DWORD PTR [rsp+0x20],0x0
   140008fc6:	lea    r8,[rip+0xfffffffffffffd23]        # 0x140008cf0
   140008fcd:	xor    edx,edx
   140008fcf:	mov    QWORD PTR [rbp-0x78],rax
   140008fd3:	xor    ecx,ecx
   140008fd5:	mov    QWORD PTR [rsp+0x78],r12
   140008fda:	mov    QWORD PTR [rbp-0x80],r13
   140008fde:	call   QWORD PTR [rip+0x5284]        # 0x14000e268
   140008fe4:	mov    rbx,rax
   140008fe7:	test   rax,rax
   140008fea:	je     0x140009031
   140008fec:	or     edx,0xffffffff
   140008fef:	mov    rcx,rax
   140008ff2:	call   QWORD PTR [rip+0x52e0]        # 0x14000e2d8
   140008ff8:	lea    rdx,[rsp+0x40]
   140008ffd:	mov    rcx,rbx
   140009000:	call   QWORD PTR [rip+0x5232]        # 0x14000e238
   140009006:	test   eax,eax
   140009008:	jne    0x140009022
   14000900a:	call   QWORD PTR [rip+0x52e0]        # 0x14000e2f0
   140009010:	movzx  ecx,ax
   140009013:	or     ecx,0x80070000
   140009019:	test   eax,eax
   14000901b:	cmovle ecx,eax
   14000901e:	mov    DWORD PTR [rsp+0x40],ecx
   140009022:	mov    rcx,rbx
   140009025:	call   QWORD PTR [rip+0x5345]        # 0x14000e370
   14000902b:	mov    ebx,DWORD PTR [rsp+0x40]
   14000902f:	jmp    0x140009045
   140009031:	call   QWORD PTR [rip+0x52b9]        # 0x14000e2f0
   140009037:	movzx  ebx,ax
   14000903a:	or     ebx,0x80070000
   140009040:	test   eax,eax
   140009042:	cmovle ebx,eax
   140009045:	mov    rcx,QWORD PTR [rsp+0x48]
   14000904a:	cmp    ebx,0x1
   14000904d:	mov    eax,0x800b010b
   140009052:	cmovge ebx,eax
   140009055:	lea    rdx,[rcx-0x1]
   140009059:	cmp    rdx,0xfffffffffffffffd
   14000905d:	ja     0x140009065
   14000905f:	call   QWORD PTR [rip+0x530b]        # 0x14000e370
   140009065:	mov    eax,ebx
   140009067:	add    rsp,0x120
   14000906e:	pop    r15
   140009070:	pop    r14
   140009072:	pop    r13
   140009074:	pop    r12
   140009076:	pop    rsi
   140009077:	pop    rbx
   140009078:	pop    rbp
   140009079:	ret    
   14000907a:	int3   
   14000907b:	int3   
   14000907c:	int3   
   14000907d:	int3   
   14000907e:	int3   
   14000907f:	int3   
   140009080:	mov    QWORD PTR [rsp+0x10],rbx
   140009085:	push   rbp
   140009086:	push   rsi
   140009087:	push   rdi
   140009088:	push   r12
   14000908a:	push   r13
   14000908c:	push   r14
   14000908e:	push   r15
   140009090:	lea    rbp,[rsp-0x10]
   140009095:	sub    rsp,0x110
   14000909c:	mov    rax,QWORD PTR [rip+0xaf65]        # 0x140014008
   1400090a3:	xor    rax,rsp
   1400090a6:	mov    QWORD PTR [rbp+0x0],rax
   1400090aa:	movsd  xmm0,QWORD PTR [rip+0x8156]        # 0x140011208
   1400090b2:	xor    esi,esi
   1400090b4:	movzx  eax,WORD PTR [rip+0x8155]        # 0x140011210
   1400090bb:	xor    r12d,r12d
   1400090be:	and    QWORD PTR [rsp+0x58],rsi
   1400090c3:	xor    r13d,r13d
   1400090c6:	movsd  QWORD PTR [rbp-0x60],xmm0
   1400090cb:	xor    r15d,r15d
   1400090ce:	movups xmm0,XMMWORD PTR [rip+0x82eb]        # 0x1400113c0
   1400090d5:	mov    WORD PTR [rbp-0x58],ax
   1400090d9:	mov    r14,r8
   1400090dc:	mov    al,BYTE PTR [rip+0xb692]        # 0x140014774
   1400090e2:	mov    ebx,0x80070057
   1400090e7:	mov    QWORD PTR [rsp+0x70],rcx
   1400090ec:	movdqu XMMWORD PTR [rip+0xb72c],xmm0        # 0x140014820
   1400090f4:	test   al,al
   1400090f6:	jne    0x140009116
   1400090f8:	lea    rcx,[rip+0xb681]        # 0x140014780
   1400090ff:	mov    DWORD PTR [rip+0xb677],0x9c        # 0x140014780
   140009109:	call   QWORD PTR [rip+0x5121]        # 0x14000e230
   14000910f:	mov    BYTE PTR [rip+0xb65e],0x1        # 0x140014774
   140009116:	cmp    DWORD PTR [rip+0xb673],0x2        # 0x140014790
   14000911d:	jne    0x140009173
   14000911f:	cmp    DWORD PTR [rip+0xb65e],0x6        # 0x140014784
   140009126:	jne    0x140009173
   140009128:	cmp    DWORD PTR [rip+0xb659],0x1        # 0x140014788
   14000912f:	jne    0x140009173
   140009131:	and    DWORD PTR [rsp+0x50],esi
   140009135:	lea    rcx,[rsp+0x50]
   14000913a:	call   QWORD PTR [rip+0x53e0]        # 0x14000e520
   140009140:	test   eax,eax
   140009142:	jne    0x140009173
   140009144:	movzx  eax,BYTE PTR [rsp+0x50]
   140009149:	mov    edi,esi
   14000914b:	add    eax,0x1
   14000914e:	mov    DWORD PTR [rsp+0x50],eax
   140009152:	je     0x140009173
   140009154:	xor    ecx,ecx
   140009156:	mov    edx,0x10000
   14000915b:	mov    r8d,0x2000
   140009161:	lea    r9d,[rcx+0x1]
   140009165:	call   QWORD PTR [rip+0x51b5]        # 0x14000e320
   14000916b:	inc    edi
   14000916d:	cmp    edi,DWORD PTR [rsp+0x50]
   140009171:	jb     0x140009154
   140009173:	xor    r9d,r9d
   140009176:	xor    r8d,r8d
   140009179:	xor    ecx,ecx
   14000917b:	lea    edx,[r9+0x1]
   14000917f:	call   QWORD PTR [rip+0x5073]        # 0x14000e1f8
   140009185:	lea    r8,[rsp+0x58]
   14000918a:	mov    rcx,r14
   14000918d:	lea    rdx,[rbp-0x60]
   140009191:	call   QWORD PTR [rip+0x53c1]        # 0x14000e558
   140009197:	xor    r14d,r14d
   14000919a:	mov    rdi,rax
   14000919d:	test   rax,rax
   1400091a0:	je     0x140009598
   1400091a6:	mov    r8d,0xb
   1400091ac:	lea    rdx,[rip+0x8065]        # 0x140011218
   1400091b3:	mov    rcx,rdi
   1400091b6:	call   QWORD PTR [rip+0x5394]        # 0x14000e550
   1400091bc:	test   eax,eax
   1400091be:	jne    0x1400091c9
   1400091c0:	lea    r15d,[rax+0x1]
   1400091c4:	jmp    0x1400092a0
   1400091c9:	mov    r8d,0xb
   1400091cf:	lea    rdx,[rip+0x805a]        # 0x140011230
   1400091d6:	mov    rcx,rdi
   1400091d9:	call   QWORD PTR [rip+0x5371]        # 0x14000e550
   1400091df:	test   eax,eax
   1400091e1:	je     0x14000929a
   1400091e7:	mov    r8d,0xb
   1400091ed:	lea    rdx,[rip+0x8054]        # 0x140011248
   1400091f4:	mov    rcx,rdi
   1400091f7:	call   QWORD PTR [rip+0x5353]        # 0x14000e550
   1400091fd:	test   eax,eax
   1400091ff:	je     0x14000929a
   140009205:	mov    r8d,0xd
   14000920b:	lea    rdx,[rip+0x804e]        # 0x140011260
   140009212:	mov    rcx,rdi
   140009215:	call   QWORD PTR [rip+0x5335]        # 0x14000e550
   14000921b:	test   eax,eax
   14000921d:	je     0x140009292
   14000921f:	mov    r8d,0xd
   140009225:	lea    rdx,[rip+0x8054]        # 0x140011280
   14000922c:	mov    rcx,rdi
   14000922f:	call   QWORD PTR [rip+0x531b]        # 0x14000e550
   140009235:	test   eax,eax
   140009237:	je     0x140009292
   140009239:	mov    r8d,0x7
   14000923f:	lea    rdx,[rip+0x805a]        # 0x1400112a0
   140009246:	mov    rcx,rdi
   140009249:	call   QWORD PTR [rip+0x5301]        # 0x14000e550
   14000924f:	test   eax,eax
   140009251:	jne    0x140009266
   140009253:	lea    rcx,[rdi+0xe]
   140009257:	lea    rdx,[rip+0xb5c2]        # 0x140014820
   14000925e:	call   QWORD PTR [rip+0x5404]        # 0x14000e668
   140009264:	jmp    0x1400092a0
   140009266:	mov    r8d,0x5
   14000926c:	lea    rdx,[rip+0x803d]        # 0x1400112b0
   140009273:	mov    rcx,rdi
   140009276:	call   QWORD PTR [rip+0x52d4]        # 0x14000e550
   14000927c:	test   eax,eax
   14000927e:	jne    0x1400092a0
   140009280:	lea    rcx,[rdi+0xa]
   140009284:	call   QWORD PTR [rip+0x52be]        # 0x14000e548
   14000928a:	mov    DWORD PTR [rip+0xb36c],eax        # 0x1400145fc
   140009290:	jmp    0x1400092a0
   140009292:	mov    r13d,0x1
   140009298:	jmp    0x1400092a0
   14000929a:	mov    r12d,0x1
   1400092a0:	lea    r8,[rsp+0x58]
   1400092a5:	xor    ecx,ecx
   1400092a7:	lea    rdx,[rbp-0x60]
   1400092ab:	inc    esi
   1400092ad:	call   QWORD PTR [rip+0x52a5]        # 0x14000e558
   1400092b3:	mov    rdi,rax
   1400092b6:	test   rax,rax
   1400092b9:	jne    0x1400091a6
   1400092bf:	lea    edi,[rax+0x1]
   1400092c2:	cmp    esi,edi
   1400092c4:	je     0x1400092f3
   1400092c6:	cmp    esi,0x2
   1400092c9:	jne    0x140009598
   1400092cf:	mov    rax,QWORD PTR [rip+0xb54a]        # 0x140014820
   1400092d6:	cmp    rax,QWORD PTR [rip+0x80e3]        # 0x1400113c0
   1400092dd:	jne    0x1400092f3
   1400092df:	mov    rax,QWORD PTR [rip+0xb542]        # 0x140014828
   1400092e6:	cmp    rax,QWORD PTR [rip+0x80db]        # 0x1400113c8
   1400092ed:	je     0x140009598
   1400092f3:	test   r13d,r13d
   1400092f6:	je     0x140009405
   1400092fc:	movups xmm0,XMMWORD PTR [rip+0x5655]        # 0x14000e958
   140009303:	lea    rax,[rsp+0x60]
   140009308:	mov    edi,0xf003f
   14000930d:	movups xmm1,XMMWORD PTR [rip+0x82dc]        # 0x1400115f0
   140009314:	mov    r15,0xffffffff80000000
   14000931b:	mov    QWORD PTR [rsp+0x20],rax
   140009320:	mov    r9d,edi
   140009323:	lea    rdx,[rip+0x79b6]        # 0x140010ce0
   14000932a:	xor    r8d,r8d
   14000932d:	mov    rcx,r15
   140009330:	movdqu XMMWORD PTR [rbp-0x70],xmm0
   140009335:	movdqu XMMWORD PTR [rbp-0x80],xmm1
   14000933a:	call   QWORD PTR [rip+0x4d38]        # 0x14000e078
   140009340:	mov    esi,eax
   140009342:	mov    ebx,0x27
   140009347:	test   eax,eax
   140009349:	jne    0x140009378
   14000934b:	mov    r8d,ebx
   14000934e:	lea    rdx,[rbp-0x50]
   140009352:	lea    rcx,[rbp-0x80]
   140009356:	call   QWORD PTR [rip+0x5314]        # 0x14000e670
   14000935c:	mov    rcx,QWORD PTR [rsp+0x60]
   140009361:	lea    rdx,[rbp-0x50]
   140009365:	call   QWORD PTR [rip+0x4ced]        # 0x14000e058
   14000936b:	mov    rcx,QWORD PTR [rsp+0x60]
   140009370:	mov    esi,eax
   140009372:	call   QWORD PTR [rip+0x4cb0]        # 0x14000e028
   140009378:	lea    rax,[rsp+0x68]
   14000937d:	mov    r9d,edi
   140009380:	xor    r8d,r8d
   140009383:	mov    QWORD PTR [rsp+0x20],rax
   140009388:	lea    rdx,[rip+0x7f79]        # 0x140011308
   14000938f:	mov    rcx,r15
   140009392:	call   QWORD PTR [rip+0x4ce0]        # 0x14000e078
   140009398:	mov    edi,eax
   14000939a:	test   eax,eax
   14000939c:	jne    0x1400093cb
   14000939e:	mov    r8d,ebx
   1400093a1:	lea    rdx,[rbp-0x50]
   1400093a5:	lea    rcx,[rbp-0x70]
   1400093a9:	call   QWORD PTR [rip+0x52c1]        # 0x14000e670
   1400093af:	mov    rcx,QWORD PTR [rsp+0x68]
   1400093b4:	lea    rdx,[rbp-0x50]
   1400093b8:	call   QWORD PTR [rip+0x4c9a]        # 0x14000e058
   1400093be:	mov    rcx,QWORD PTR [rsp+0x68]
   1400093c3:	mov    edi,eax
   1400093c5:	call   QWORD PTR [rip+0x4c5d]        # 0x14000e028
   1400093cb:	test   esi,esi
   1400093cd:	jne    0x1400093db
   1400093cf:	test   edi,edi
   1400093d1:	jne    0x1400093f2
   1400093d3:	mov    ebx,r14d
   1400093d6:	jmp    0x140009598
   1400093db:	test   edi,edi
   1400093dd:	jne    0x1400093f2
   1400093df:	movzx  ebx,si
   1400093e2:	or     ebx,0x80070000
   1400093e8:	test   esi,esi
   1400093ea:	cmovle ebx,esi
   1400093ed:	jmp    0x140009598
   1400093f2:	movzx  ebx,di
   1400093f5:	or     ebx,0x80070000
   1400093fb:	test   edi,edi
   1400093fd:	cmovle ebx,edi
   140009400:	jmp    0x140009598
   140009405:	test   r12d,r12d
   140009408:	je     0x140009416
   14000940a:	call   0x140001350
   14000940f:	mov    ebx,eax
   140009411:	jmp    0x140009598
   140009416:	test   r15d,r15d
   140009419:	je     0x140009598
   14000941f:	xor    r9d,r9d
   140009422:	xor    r8d,r8d
   140009425:	mov    edx,edi
   140009427:	xor    ecx,ecx
   140009429:	call   QWORD PTR [rip+0x4dc1]        # 0x14000e1f0
   14000942f:	mov    QWORD PTR [rip+0xb25a],rax        # 0x140014690
   140009436:	test   rax,rax
   140009439:	je     0x140009584
   14000943f:	xor    edx,edx
   140009441:	xor    ecx,ecx
   140009443:	call   QWORD PTR [rip+0x5237]        # 0x14000e680
   140009449:	mov    ebx,eax
   14000944b:	test   eax,eax
   14000944d:	js     0x140009575
   140009453:	mov    edx,edi
   140009455:	mov    rdi,QWORD PTR [rsp+0x70]
   14000945a:	mov    rcx,rdi
   14000945d:	call   0x14000c00c
   140009462:	test   eax,eax
   140009464:	je     0x14000956f
   14000946a:	mov    QWORD PTR [rsp+0x40],r14
   14000946f:	or     rsi,0xffffffffffffffff
   140009473:	mov    DWORD PTR [rsp+0x38],r14d
   140009478:	xor    r9d,r9d
   14000947b:	mov    QWORD PTR [rsp+0x30],r14
   140009480:	xor    r8d,r8d
   140009483:	mov    DWORD PTR [rsp+0x28],0x3
   14000948b:	mov    edx,esi
   14000948d:	xor    ecx,ecx
   14000948f:	mov    DWORD PTR [rsp+0x20],0x2
   140009497:	call   QWORD PTR [rip+0x51db]        # 0x14000e678
   14000949d:	mov    ebx,eax
   14000949f:	test   eax,eax
   1400094a1:	js     0x140009541
   1400094a7:	mov    QWORD PTR [rip+0xb1ea],rdi        # 0x140014698
   1400094ae:	call   0x140001720
   1400094b3:	mov    ebx,eax
   1400094b5:	test   eax,eax
   1400094b7:	js     0x140009541
   1400094bd:	xor    r8d,r8d
   1400094c0:	lea    rcx,[rip+0x7f39]        # 0x140011400
   1400094c7:	xor    edx,edx
   1400094c9:	call   QWORD PTR [rip+0x4e49]        # 0x14000e318
   1400094cf:	mov    rbx,rax
   1400094d2:	test   rax,rax
   1400094d5:	je     0x140009503
   1400094d7:	lea    rdx,[rip+0x7f3a]        # 0x140011418
   1400094de:	mov    rcx,rax
   1400094e1:	call   QWORD PTR [rip+0x4d69]        # 0x14000e250
   1400094e7:	mov    rdi,rax
   1400094ea:	test   rax,rax
   1400094ed:	je     0x1400094fa
   1400094ef:	mov    rcx,rax
   1400094f2:	call   QWORD PTR [rip+0x51d0]        # 0x14000e6c8
   1400094f8:	call   rdi
   1400094fa:	mov    rcx,rbx
   1400094fd:	call   QWORD PTR [rip+0x4e05]        # 0x14000e308
   140009503:	call   0x140007a80
   140009508:	mov    rcx,QWORD PTR [rip+0xb181]        # 0x140014690
   14000950f:	or     edx,0xffffffff
   140009512:	mov    ebx,eax
   140009514:	call   QWORD PTR [rip+0x4dbe]        # 0x14000e2d8
   14000951a:	mov    eax,r14d
   14000951d:	xchg   DWORD PTR [rip+0xb0d5],eax        # 0x1400145f8
   140009523:	cmp    eax,0x1
   140009526:	jne    0x140009541
   140009528:	mov    ecx,DWORD PTR [rip+0xb0d2]        # 0x140014600
   14000952e:	call   QWORD PTR [rip+0x50e4]        # 0x14000e618
   140009534:	lea    rcx,[rip+0xb16d]        # 0x1400146a8
   14000953b:	call   QWORD PTR [rip+0x4e47]        # 0x14000e388
   140009541:	mov    rcx,QWORD PTR [rip+0xaae0]        # 0x140014028
   140009548:	cmp    rcx,rsi
   14000954b:	je     0x14000955a
   14000954d:	call   QWORD PTR [rip+0x4d25]        # 0x14000e278
   140009553:	mov    QWORD PTR [rip+0xaace],rsi        # 0x140014028
   14000955a:	mov    rax,QWORD PTR [rip+0xb1af]        # 0x140014710
   140009561:	test   rax,rax
   140009564:	cmovne rax,rsi
   140009568:	mov    QWORD PTR [rip+0xb1a1],rax        # 0x140014710
   14000956f:	call   QWORD PTR [rip+0x50bb]        # 0x14000e630
   140009575:	mov    rcx,QWORD PTR [rip+0xb114]        # 0x140014690
   14000957c:	call   QWORD PTR [rip+0x4dee]        # 0x14000e370
   140009582:	jmp    0x140009598
   140009584:	call   QWORD PTR [rip+0x4d66]        # 0x14000e2f0
   14000958a:	movzx  ebx,ax
   14000958d:	or     ebx,0x80070000
   140009593:	test   eax,eax
   140009595:	cmovle ebx,eax
   140009598:	mov    eax,ebx
   14000959a:	mov    rcx,QWORD PTR [rbp+0x0]
   14000959e:	xor    rcx,rsp
   1400095a1:	call   0x14000cc40
   1400095a6:	mov    rbx,QWORD PTR [rsp+0x158]
   1400095ae:	add    rsp,0x110
   1400095b5:	pop    r15
   1400095b7:	pop    r14
   1400095b9:	pop    r13
   1400095bb:	pop    r12
   1400095bd:	pop    rdi
   1400095be:	pop    rsi
   1400095bf:	pop    rbp
   1400095c0:	ret    
   1400095c1:	int3   
   1400095c2:	int3   
   1400095c3:	int3   
   1400095c4:	int3   
   1400095c5:	int3   
   1400095c6:	int3   
   1400095c7:	int3   
   1400095c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400095cd:	mov    QWORD PTR [rsp+0x20],rsi
   1400095d2:	push   rbp
   1400095d3:	push   rdi
   1400095d4:	push   r12
   1400095d6:	push   r14
   1400095d8:	push   r15
   1400095da:	lea    rbp,[rsp-0x660]
   1400095e2:	sub    rsp,0x760
   1400095e9:	mov    rax,QWORD PTR [rip+0xaa18]        # 0x140014008
   1400095f0:	xor    rax,rsp
   1400095f3:	mov    QWORD PTR [rbp+0x650],rax
   1400095fa:	movaps xmm0,XMMWORD PTR [rip+0x7cbf]        # 0x1400112c0
   140009601:	mov    r14,rdx
   140009604:	movaps xmm1,XMMWORD PTR [rip+0x7cc5]        # 0x1400112d0
   14000960b:	mov    rsi,rcx
   14000960e:	mov    eax,DWORD PTR [rip+0x7cec]        # 0x140011300
   140009614:	lea    rcx,[rbp+0x64]
   140009618:	movaps XMMWORD PTR [rbp+0x20],xmm0
   14000961c:	xor    edx,edx
   14000961e:	movaps xmm0,XMMWORD PTR [rip+0x7cbb]        # 0x1400112e0
   140009625:	mov    r8d,0x1c4
   14000962b:	movaps XMMWORD PTR [rbp+0x30],xmm1
   14000962f:	movaps xmm1,XMMWORD PTR [rip+0x7cba]        # 0x1400112f0
   140009636:	movaps XMMWORD PTR [rbp+0x40],xmm0
   14000963a:	movaps XMMWORD PTR [rbp+0x50],xmm1
   14000963e:	mov    DWORD PTR [rbp+0x60],eax
   140009641:	call   0x14000d326
   140009646:	mov    r12d,0x206
   14000964c:	lea    rcx,[rbp+0x442]
   140009653:	xor    edi,edi
   140009655:	mov    r8d,r12d
   140009658:	xor    edx,edx
   14000965a:	mov    WORD PTR [rbp+0x440],di
   140009661:	call   0x14000d326
   140009666:	xor    ecx,ecx
   140009668:	call   QWORD PTR [rip+0x4c72]        # 0x14000e2e0
   14000966e:	mov    rbx,rax
   140009671:	call   QWORD PTR [rip+0x4d69]        # 0x14000e3e0
   140009677:	mov    r15d,0x104
   14000967d:	lea    r8,[rbp+0x440]
   140009684:	mov    rcx,rax
   140009687:	mov    r9d,r15d
   14000968a:	mov    rdx,rbx
   14000968d:	call   QWORD PTR [rip+0x4b4d]        # 0x14000e1e0
   140009693:	test   eax,eax
   140009695:	je     0x1400099a2
   14000969b:	lea    r8,[rbp+0x440]
   1400096a2:	mov    edx,r15d
   1400096a5:	lea    rcx,[rbp+0x20]
   1400096a9:	call   0x140001078
   1400096ae:	mov    ebx,eax
   1400096b0:	test   eax,eax
   1400096b2:	js     0x1400099aa
   1400096b8:	mov    r8d,r12d
   1400096bb:	mov    WORD PTR [rbp+0x230],di
   1400096c2:	xor    edx,edx
   1400096c4:	lea    rcx,[rbp+0x232]
   1400096cb:	call   0x14000d326
   1400096d0:	mov    r9d,r15d
   1400096d3:	lea    r8,[rbp+0x230]
   1400096da:	mov    edx,r15d
   1400096dd:	lea    rcx,[rbp+0x20]
   1400096e1:	call   0x140009b18
   1400096e6:	mov    ebx,eax
   1400096e8:	test   eax,eax
   1400096ea:	js     0x1400099aa
   1400096f0:	lea    rax,[rsp+0x50]
   1400096f5:	mov    r15d,0xf003f
   1400096fb:	mov    QWORD PTR [rsp+0x40],rax
   140009700:	lea    r12,[rip+0x51e9]        # 0x14000e8f0
   140009707:	lea    rax,[rsp+0x70]
   14000970c:	mov    r9,r12
   14000970f:	mov    QWORD PTR [rsp+0x38],rax
   140009714:	lea    rdx,[rip+0x75c5]        # 0x140010ce0
   14000971b:	mov    QWORD PTR [rsp+0x30],rdi
   140009720:	xor    r8d,r8d
   140009723:	mov    DWORD PTR [rsp+0x28],r15d
   140009728:	mov    rcx,0xffffffff80000000
   14000972f:	mov    DWORD PTR [rsp+0x20],edi
   140009733:	call   QWORD PTR [rip+0x48c7]        # 0x14000e000
   140009739:	mov    ebx,eax
   14000973b:	test   eax,eax
   14000973d:	jne    0x1400099ae
   140009743:	lea    ebx,[rdi+0x27]
   140009746:	mov    rcx,rsi
   140009749:	mov    r8d,ebx
   14000974c:	lea    rdx,[rbp-0x30]
   140009750:	call   QWORD PTR [rip+0x4f1a]        # 0x14000e670
   140009756:	mov    r8d,ebx
   140009759:	lea    rdx,[rbp-0x80]
   14000975d:	mov    rcx,r14
   140009760:	call   QWORD PTR [rip+0x4f0a]        # 0x14000e670
   140009766:	mov    rcx,QWORD PTR [rsp+0x70]
   14000976b:	lea    rax,[rsp+0x50]
   140009770:	mov    QWORD PTR [rsp+0x40],rax
   140009775:	lea    rdx,[rbp-0x30]
   140009779:	lea    rax,[rsp+0x58]
   14000977e:	mov    r9,r12
   140009781:	mov    QWORD PTR [rsp+0x38],rax
   140009786:	xor    r8d,r8d
   140009789:	mov    QWORD PTR [rsp+0x30],rdi
   14000978e:	mov    DWORD PTR [rsp+0x28],r15d
   140009793:	mov    DWORD PTR [rsp+0x20],edi
   140009797:	call   QWORD PTR [rip+0x4863]        # 0x14000e000
   14000979d:	mov    ebx,eax
   14000979f:	test   eax,eax
   1400097a1:	jne    0x1400098ec
   1400097a7:	mov    rcx,QWORD PTR [rsp+0x58]
   1400097ac:	lea    rax,[rbp-0x80]
   1400097b0:	mov    DWORD PTR [rsp+0x28],0x4e
   1400097b8:	lea    r9d,[rdi+0x1]
   1400097bc:	xor    r8d,r8d
   1400097bf:	mov    QWORD PTR [rsp+0x20],rax
   1400097c4:	lea    rdx,[rip+0x7b3d]        # 0x140011308
   1400097cb:	call   QWORD PTR [rip+0x485f]        # 0x14000e030
   1400097d1:	mov    ebx,eax
   1400097d3:	test   eax,eax
   1400097d5:	jne    0x1400098e1
   1400097db:	mov    rcx,QWORD PTR [rsp+0x58]
   1400097e0:	lea    rax,[rsp+0x50]
   1400097e5:	mov    QWORD PTR [rsp+0x40],rax
   1400097ea:	lea    r9,[rip+0x7b27]        # 0x140011318
   1400097f1:	lea    rax,[rsp+0x60]
   1400097f6:	xor    r8d,r8d
   1400097f9:	mov    QWORD PTR [rsp+0x38],rax
   1400097fe:	lea    rdx,[rip+0x7b33]        # 0x140011338
   140009805:	mov    QWORD PTR [rsp+0x30],rdi
   14000980a:	mov    DWORD PTR [rsp+0x28],r15d
   14000980f:	mov    DWORD PTR [rsp+0x20],edi
   140009813:	call   QWORD PTR [rip+0x47e7]        # 0x14000e000
   140009819:	mov    ebx,eax
   14000981b:	test   eax,eax
   14000981d:	jne    0x1400098e1
   140009823:	mov    rcx,QWORD PTR [rsp+0x60]
   140009828:	lea    rdx,[rip+0x7b29]        # 0x140011358
   14000982f:	call   QWORD PTR [rip+0x47d3]        # 0x14000e008
   140009835:	or     rsi,0xffffffffffffffff
   140009839:	lea    rcx,[rbp+0x230]
   140009840:	mov    rax,rsi
   140009843:	inc    rax
   140009846:	cmp    WORD PTR [rcx+rax*2],di
   14000984a:	jne    0x140009843
   14000984c:	mov    rcx,QWORD PTR [rsp+0x60]
   140009851:	lea    eax,[rax*2+0x2]
   140009858:	mov    DWORD PTR [rsp+0x28],eax
   14000985c:	lea    rdx,[rip+0x5025]        # 0x14000e888
   140009863:	lea    rax,[rbp+0x230]
   14000986a:	mov    r14d,0x2
   140009870:	mov    r9d,r14d
   140009873:	mov    QWORD PTR [rsp+0x20],rax
   140009878:	xor    r8d,r8d
   14000987b:	call   QWORD PTR [rip+0x47af]        # 0x14000e030
   140009881:	mov    ebx,eax
   140009883:	test   eax,eax
   140009885:	jne    0x1400098c2
   140009887:	lea    rax,[rbp+0x20]
   14000988b:	inc    rsi
   14000988e:	cmp    WORD PTR [rax+rsi*2],di
   140009892:	jne    0x14000988b
   140009894:	mov    rcx,QWORD PTR [rsp+0x60]
   140009899:	lea    eax,[rsi*2+0x2]
   1400098a0:	mov    DWORD PTR [rsp+0x28],eax
   1400098a4:	lea    rdx,[rip+0x7acd]        # 0x140011378
   1400098ab:	lea    rax,[rbp+0x20]
   1400098af:	mov    r9d,r14d
   1400098b2:	xor    r8d,r8d
   1400098b5:	mov    QWORD PTR [rsp+0x20],rax
   1400098ba:	call   QWORD PTR [rip+0x4770]        # 0x14000e030
   1400098c0:	mov    ebx,eax
   1400098c2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400098c7:	call   QWORD PTR [rip+0x475b]        # 0x14000e028
   1400098cd:	test   ebx,ebx
   1400098cf:	jne    0x1400098e1
   1400098d1:	mov    rcx,QWORD PTR [rsp+0x58]
   1400098d6:	lea    rdx,[rbp+0x20]
   1400098da:	call   0x1400014ec
   1400098df:	mov    ebx,eax
   1400098e1:	mov    rcx,QWORD PTR [rsp+0x58]
   1400098e6:	call   QWORD PTR [rip+0x473c]        # 0x14000e028
   1400098ec:	mov    rcx,QWORD PTR [rsp+0x70]
   1400098f1:	call   QWORD PTR [rip+0x4731]        # 0x14000e028
   1400098f7:	test   ebx,ebx
   1400098f9:	jne    0x1400099ae
   1400098ff:	lea    rax,[rsp+0x50]
   140009904:	mov    r9,r12
   140009907:	mov    QWORD PTR [rsp+0x40],rax
   14000990c:	lea    rdx,[rip+0x79f5]        # 0x140011308
   140009913:	lea    rax,[rsp+0x68]
   140009918:	xor    r8d,r8d
   14000991b:	mov    QWORD PTR [rsp+0x38],rax
   140009920:	mov    rcx,0xffffffff80000000
   140009927:	mov    QWORD PTR [rsp+0x30],rdi
   14000992c:	mov    DWORD PTR [rsp+0x28],r15d
   140009931:	mov    DWORD PTR [rsp+0x20],edi
   140009935:	call   QWORD PTR [rip+0x46c5]        # 0x14000e000
   14000993b:	mov    ebx,eax
   14000993d:	test   eax,eax
   14000993f:	jne    0x1400099ae
   140009941:	mov    rcx,QWORD PTR [rsp+0x68]
   140009946:	lea    rax,[rsp+0x50]
   14000994b:	mov    QWORD PTR [rsp+0x40],rax
   140009950:	lea    rdx,[rbp-0x80]
   140009954:	lea    rax,[rsp+0x58]
   140009959:	mov    r9,r12
   14000995c:	mov    QWORD PTR [rsp+0x38],rax
   140009961:	xor    r8d,r8d
   140009964:	mov    QWORD PTR [rsp+0x30],rdi
   140009969:	mov    DWORD PTR [rsp+0x28],r15d
   14000996e:	mov    DWORD PTR [rsp+0x20],edi
   140009972:	call   QWORD PTR [rip+0x4688]        # 0x14000e000
   140009978:	mov    ebx,eax
   14000997a:	test   eax,eax
   14000997c:	jne    0x140009995
   14000997e:	mov    rcx,QWORD PTR [rsp+0x58]
   140009983:	call   0x14000140c
   140009988:	mov    rcx,QWORD PTR [rsp+0x58]
   14000998d:	mov    ebx,eax
   14000998f:	call   QWORD PTR [rip+0x4693]        # 0x14000e028
   140009995:	mov    rcx,QWORD PTR [rsp+0x68]
   14000999a:	call   QWORD PTR [rip+0x4688]        # 0x14000e028
   1400099a0:	jmp    0x1400099aa
   1400099a2:	call   QWORD PTR [rip+0x4948]        # 0x14000e2f0
   1400099a8:	mov    ebx,eax
   1400099aa:	test   ebx,ebx
   1400099ac:	je     0x1400099bc
   1400099ae:	movzx  edi,bx
   1400099b1:	or     edi,0x80070000
   1400099b7:	test   ebx,ebx
   1400099b9:	cmovle edi,ebx
   1400099bc:	mov    eax,edi
   1400099be:	mov    rcx,QWORD PTR [rbp+0x650]
   1400099c5:	xor    rcx,rsp
   1400099c8:	call   0x14000cc40
   1400099cd:	lea    r11,[rsp+0x760]
   1400099d5:	mov    rbx,QWORD PTR [r11+0x40]
   1400099d9:	mov    rsi,QWORD PTR [r11+0x48]
   1400099dd:	mov    rsp,r11
   1400099e0:	pop    r15
   1400099e2:	pop    r14
   1400099e4:	pop    r12
   1400099e6:	pop    rdi
   1400099e7:	pop    rbp
   1400099e8:	ret    
   1400099e9:	int3   
   1400099ea:	int3   
   1400099eb:	int3   
   1400099ec:	int3   
   1400099ed:	int3   
   1400099ee:	int3   
   1400099ef:	int3   
   1400099f0:	mov    rax,rsp
   1400099f3:	mov    QWORD PTR [rax+0x8],rbx
   1400099f7:	mov    QWORD PTR [rax+0x10],rbp
   1400099fb:	mov    QWORD PTR [rax+0x18],rsi
   1400099ff:	mov    QWORD PTR [rax+0x20],rdi
   140009a03:	push   r14
   140009a05:	sub    rsp,0x20
   140009a09:	xor    ebp,ebp
   140009a0b:	lea    rax,[rdx-0x1]
   140009a0f:	mov    r11d,0x7ffffffe
   140009a15:	mov    r10,r8
   140009a18:	cmp    rax,r11
   140009a1b:	mov    ebx,ebp
   140009a1d:	mov    r8d,0x80070057
   140009a23:	mov    r14,r9
   140009a26:	cmova  ebx,r8d
   140009a2a:	mov    rdi,rcx
   140009a2d:	test   ebx,ebx
   140009a2f:	js     0x140009aed
   140009a35:	mov    rsi,rdx
   140009a38:	mov    ebx,ebp
   140009a3a:	test   rdx,rdx
   140009a3d:	jne    0x140009a5d
   140009a3f:	cmp    WORD PTR [r10],bp
   140009a43:	je     0x140009ad6
   140009a49:	test   rcx,rcx
   140009a4c:	jne    0x140009a56
   140009a4e:	mov    ebx,r8d
   140009a51:	jmp    0x140009af5
   140009a56:	mov    ebx,0x8007007a
   140009a5b:	jmp    0x140009ad6
   140009a5d:	sub    r11,rdx
   140009a60:	mov    r9,rdx
   140009a63:	sub    r10,rcx
   140009a66:	mov    r8,rbp
   140009a69:	lea    rax,[r11+r9*1]
   140009a6d:	test   rax,rax
   140009a70:	je     0x140009a8c
   140009a72:	movzx  eax,WORD PTR [r10+rcx*1]
   140009a77:	test   ax,ax
   140009a7a:	je     0x140009a8c
   140009a7c:	mov    WORD PTR [rcx],ax
   140009a7f:	inc    r8
   140009a82:	add    rcx,0x2
   140009a86:	sub    r9,0x1
   140009a8a:	jne    0x140009a69
   140009a8c:	test   r9,r9
   140009a8f:	jne    0x140009a9d
   140009a91:	sub    rcx,0x2
   140009a95:	mov    ebx,0x8007007a
   140009a9a:	dec    r8
   140009a9d:	sub    rsi,r8
   140009aa0:	mov    WORD PTR [rcx],bp
   140009aa3:	lea    rcx,[rdi+r8*2]
   140009aa7:	test   ebx,ebx
   140009aa9:	jns    0x140009ad6
   140009aab:	lea    r8,[rdx+rdx*1]
   140009aaf:	mov    rcx,rdi
   140009ab2:	mov    rsi,r8
   140009ab5:	xor    edx,edx
   140009ab7:	shr    rsi,1
   140009aba:	call   0x14000d326
   140009abf:	mov    edx,0x80000000
   140009ac4:	mov    rcx,rdi
   140009ac7:	lea    eax,[rbx+rdx*1]
   140009aca:	test   edx,eax
   140009acc:	jne    0x140009ad6
   140009ace:	cmp    ebx,0x8007007a
   140009ad4:	jne    0x140009af5
   140009ad6:	test   r14,r14
   140009ad9:	je     0x140009ade
   140009adb:	mov    QWORD PTR [r14],rcx
   140009ade:	mov    rax,QWORD PTR [rsp+0x50]
   140009ae3:	test   rax,rax
   140009ae6:	je     0x140009af5
   140009ae8:	mov    QWORD PTR [rax],rsi
   140009aeb:	jmp    0x140009af5
   140009aed:	test   rdx,rdx
   140009af0:	je     0x140009af5
   140009af2:	mov    WORD PTR [rcx],bp
   140009af5:	mov    rbp,QWORD PTR [rsp+0x38]
   140009afa:	mov    eax,ebx
   140009afc:	mov    rbx,QWORD PTR [rsp+0x30]
   140009b01:	mov    rsi,QWORD PTR [rsp+0x40]
   140009b06:	mov    rdi,QWORD PTR [rsp+0x48]
   140009b0b:	add    rsp,0x20
   140009b0f:	pop    r14
   140009b11:	ret    
   140009b12:	int3   
   140009b13:	int3   
   140009b14:	int3   
   140009b15:	int3   
   140009b16:	int3   
   140009b17:	int3   
   140009b18:	mov    r11,rsp
   140009b1b:	mov    QWORD PTR [r11+0x10],rbx
   140009b1f:	mov    QWORD PTR [r11+0x18],rsi
   140009b23:	mov    QWORD PTR [r11+0x20],r9
   140009b27:	push   rbp
   140009b28:	push   rdi
   140009b29:	push   r12
   140009b2b:	push   r14
   140009b2d:	push   r15
   140009b2f:	mov    rbp,rsp
   140009b32:	sub    rsp,0x30
   140009b36:	mov    rdi,rcx
   140009b39:	mov    r15d,edx
   140009b3c:	mov    rax,r9
   140009b3f:	mov    QWORD PTR [rbp+0x30],r8
   140009b43:	mov    r12d,0x22
   140009b49:	lea    r9,[rbp+0x30]
   140009b4d:	cmp    r12w,WORD PTR [rcx]
   140009b51:	mov    rsi,r8
   140009b54:	lea    rcx,[rbp+0x48]
   140009b58:	mov    rdx,rax
   140009b5b:	mov    QWORD PTR [r11-0x38],rcx
   140009b5f:	mov    rcx,r8
   140009b62:	je     0x140009b8f
   140009b64:	lea    r8,[rip+0x78c1]        # 0x14001142c
   140009b6b:	call   0x1400099f0
   140009b70:	mov    ebx,eax
   140009b72:	test   eax,eax
   140009b74:	js     0x140009c18
   140009b7a:	mov    rdx,QWORD PTR [rbp+0x48]
   140009b7e:	lea    rax,[rbp+0x48]
   140009b82:	mov    rcx,QWORD PTR [rbp+0x30]
   140009b86:	lea    r9,[rbp+0x30]
   140009b8a:	mov    QWORD PTR [rsp+0x20],rax
   140009b8f:	mov    r8,rdi
   140009b92:	call   0x1400099f0
   140009b97:	mov    ebx,eax
   140009b99:	test   eax,eax
   140009b9b:	js     0x140009c18
   140009b9d:	mov    rdi,QWORD PTR [rbp+0x30]
   140009ba1:	lea    r14,[rsi+0x2]
   140009ba5:	cmp    rdi,r14
   140009ba8:	jbe    0x140009bba
   140009baa:	lea    rdx,[rsi+r15*2]
   140009bae:	cmp    rdi,rdx
   140009bb1:	jae    0x140009bba
   140009bb3:	cmp    WORD PTR [rdi-0x2],r12w
   140009bb8:	je     0x140009be0
   140009bba:	mov    rdx,QWORD PTR [rbp+0x48]
   140009bbe:	lea    rax,[rbp+0x48]
   140009bc2:	lea    r9,[rbp+0x30]
   140009bc6:	mov    QWORD PTR [rsp+0x20],rax
   140009bcb:	lea    r8,[rip+0x785a]        # 0x14001142c
   140009bd2:	mov    rcx,rdi
   140009bd5:	call   0x1400099f0
   140009bda:	mov    rdi,QWORD PTR [rbp+0x30]
   140009bde:	mov    ebx,eax
   140009be0:	test   ebx,ebx
   140009be2:	js     0x140009c18
   140009be4:	cmp    WORD PTR [rsi],r12w
   140009be8:	jne    0x140009c03
   140009bea:	cmp    rdi,r14
   140009bed:	jbe    0x140009c03
   140009bef:	mov    edx,r12d
   140009bf2:	mov    rcx,r14
   140009bf5:	call   0x14000ce18
   140009bfa:	lea    rcx,[rdi-0x2]
   140009bfe:	cmp    rax,rcx
   140009c01:	je     0x140009c18
   140009c03:	mov    r8,r15
   140009c06:	xor    edx,edx
   140009c08:	add    r8,r8
   140009c0b:	mov    rcx,rsi
   140009c0e:	call   0x14000d326
   140009c13:	mov    ebx,0x80070057
   140009c18:	mov    rsi,QWORD PTR [rsp+0x70]
   140009c1d:	mov    eax,ebx
   140009c1f:	mov    rbx,QWORD PTR [rsp+0x68]
   140009c24:	add    rsp,0x30
   140009c28:	pop    r15
   140009c2a:	pop    r14
   140009c2c:	pop    r12
   140009c2e:	pop    rdi
   140009c2f:	pop    rbp
   140009c30:	ret    
   140009c31:	int3   
   140009c32:	int3   
   140009c33:	int3   
   140009c34:	int3   
   140009c35:	int3   
   140009c36:	int3   
   140009c37:	int3   
   140009c38:	mov    QWORD PTR [rsp+0x10],rbx
   140009c3d:	mov    QWORD PTR [rsp+0x18],rsi
   140009c42:	push   rdi
   140009c43:	sub    rsp,0x20
   140009c47:	and    QWORD PTR [rsp+0x30],0x0
   140009c4d:	mov    esi,0x1
   140009c52:	mov    DWORD PTR [rdx],0x2000
   140009c58:	mov    rbx,rdx
   140009c5b:	mov    rdi,rcx
   140009c5e:	mov    eax,esi
   140009c60:	test   rcx,rcx
   140009c63:	jne    0x140009c83
   140009c65:	call   QWORD PTR [rip+0x4775]        # 0x14000e3e0
   140009c6b:	mov    rcx,rax
   140009c6e:	lea    r8,[rsp+0x30]
   140009c73:	lea    edx,[rdi+0x8]
   140009c76:	call   QWORD PTR [rip+0x449c]        # 0x14000e118
   140009c7c:	mov    rcx,QWORD PTR [rsp+0x30]
   140009c81:	jmp    0x140009c88
   140009c83:	mov    QWORD PTR [rsp+0x30],rcx
   140009c88:	test   eax,eax
   140009c8a:	je     0x140009cb0
   140009c8c:	mov    rdx,rbx
   140009c8f:	call   0x14000c1e8
   140009c94:	cmp    eax,0xc0000003
   140009c99:	mov    ebx,eax
   140009c9b:	cmove  ebx,esi
   140009c9e:	test   rdi,rdi
   140009ca1:	jne    0x140009cb7
   140009ca3:	mov    rcx,QWORD PTR [rsp+0x30]
   140009ca8:	call   QWORD PTR [rip+0x46c2]        # 0x14000e370
   140009cae:	jmp    0x140009cb7
   140009cb0:	call   0x14000c1b8
   140009cb5:	mov    ebx,eax
   140009cb7:	mov    rsi,QWORD PTR [rsp+0x40]
   140009cbc:	mov    eax,ebx
   140009cbe:	mov    rbx,QWORD PTR [rsp+0x38]
   140009cc3:	add    rsp,0x20
   140009cc7:	pop    rdi
   140009cc8:	ret    
   140009cc9:	int3   
   140009cca:	int3   
   140009ccb:	int3   
   140009ccc:	int3   
   140009ccd:	int3   
   140009cce:	int3   
   140009ccf:	int3   
   140009cd0:	mov    rax,rsp
   140009cd3:	mov    QWORD PTR [rax+0x8],rbx
   140009cd7:	mov    QWORD PTR [rax+0x10],rbp
   140009cdb:	mov    QWORD PTR [rax+0x18],rsi
   140009cdf:	mov    QWORD PTR [rax+0x20],rdi
   140009ce3:	push   r14
   140009ce5:	sub    rsp,0x30
   140009ce9:	mov    rsi,r8
   140009cec:	mov    r14,rcx
   140009cef:	mov    ebx,0x57
   140009cf4:	call   QWORD PTR [rip+0x43d6]        # 0x14000e0d0
   140009cfa:	test   eax,eax
   140009cfc:	je     0x140009d95
   140009d02:	test   rsi,rsi
   140009d05:	je     0x140009d95
   140009d0b:	and    QWORD PTR [rsi],0x0
   140009d0f:	mov    rcx,r14
   140009d12:	call   QWORD PTR [rip+0x43c8]        # 0x14000e0e0
   140009d18:	lea    ecx,[rax+0xc]
   140009d1b:	cmp    ecx,eax
   140009d1d:	jb     0x140009d90
   140009d1f:	lea    ebp,[rcx+0x8]
   140009d22:	cmp    ebp,ecx
   140009d24:	jb     0x140009d90
   140009d26:	mov    edx,ebp
   140009d28:	xor    ecx,ecx
   140009d2a:	xor    ebx,ebx
   140009d2c:	call   QWORD PTR [rip+0x447e]        # 0x14000e1b0
   140009d32:	mov    rdi,rax
   140009d35:	test   rax,rax
   140009d38:	je     0x140009d86
   140009d3a:	lea    r8d,[rbx+0x4]
   140009d3e:	mov    edx,ebp
   140009d40:	mov    rcx,rax
   140009d43:	call   QWORD PTR [rip+0x43af]        # 0x14000e0f8
   140009d49:	test   eax,eax
   140009d4b:	je     0x140009d6f
   140009d4d:	lea    edx,[rbx+0x4]
   140009d50:	mov    QWORD PTR [rsp+0x20],r14
   140009d55:	lea    r9d,[rbx+0x1]
   140009d59:	mov    rcx,rdi
   140009d5c:	lea    r8d,[rbx+0x3]
   140009d60:	call   QWORD PTR [rip+0x43d2]        # 0x14000e138
   140009d66:	test   eax,eax
   140009d68:	je     0x140009d6f
   140009d6a:	mov    QWORD PTR [rsi],rdi
   140009d6d:	jmp    0x140009d95
   140009d6f:	call   QWORD PTR [rip+0x457b]        # 0x14000e2f0
   140009d75:	mov    ebx,eax
   140009d77:	test   eax,eax
   140009d79:	je     0x140009d95
   140009d7b:	mov    rcx,rdi
   140009d7e:	call   QWORD PTR [rip+0x4454]        # 0x14000e1d8
   140009d84:	jmp    0x140009d95
   140009d86:	call   QWORD PTR [rip+0x4564]        # 0x14000e2f0
   140009d8c:	mov    ebx,eax
   140009d8e:	jmp    0x140009d95
   140009d90:	mov    ebx,0x216
   140009d95:	mov    rbp,QWORD PTR [rsp+0x48]
   140009d9a:	mov    rsi,QWORD PTR [rsp+0x50]
   140009d9f:	mov    rdi,QWORD PTR [rsp+0x58]
   140009da4:	movzx  eax,bx
   140009da7:	or     eax,0x80070000
   140009dac:	test   ebx,ebx
   140009dae:	cmovle eax,ebx
   140009db1:	mov    rbx,QWORD PTR [rsp+0x40]
   140009db6:	add    rsp,0x30
   140009dba:	pop    r14
   140009dbc:	ret    
   140009dbd:	int3   
   140009dbe:	int3   
   140009dbf:	int3   
   140009dc0:	int3   
   140009dc1:	int3   
   140009dc2:	int3   
   140009dc3:	int3   
   140009dc4:	mov    rax,rsp
   140009dc7:	mov    QWORD PTR [rax+0x8],rbx
   140009dcb:	mov    QWORD PTR [rax+0x10],rbp
   140009dcf:	mov    QWORD PTR [rax+0x18],rsi
   140009dd3:	mov    QWORD PTR [rax+0x20],r9
   140009dd7:	push   rdi
   140009dd8:	sub    rsp,0x20
   140009ddc:	and    QWORD PTR [rax+0x20],0x0
   140009de1:	lea    rdx,[rax+0x20]
   140009de5:	mov    rdi,r8
   140009de8:	mov    rbp,rcx
   140009deb:	call   0x140009ef8
   140009df0:	test   eax,eax
   140009df2:	js     0x140009e1a
   140009df4:	mov    rdx,QWORD PTR [rsp+0x48]
   140009df9:	mov    rcx,rdi
   140009dfc:	call   QWORD PTR [rip+0x429e]        # 0x14000e0a0
   140009e02:	mov    rcx,QWORD PTR [rsp+0x48]
   140009e07:	mov    ebx,eax
   140009e09:	call   QWORD PTR [rip+0x43c9]        # 0x14000e1d8
   140009e0f:	test   ebx,ebx
   140009e11:	je     0x140009e1a
   140009e13:	xor    ebx,ebx
   140009e15:	jmp    0x140009edb
   140009e1a:	and    QWORD PTR [rsp+0x48],0x0
   140009e20:	lea    r8,[rsp+0x48]
   140009e25:	mov    rcx,rdi
   140009e28:	call   0x140009cd0
   140009e2d:	mov    ebx,eax
   140009e2f:	test   eax,eax
   140009e31:	js     0x140009edb
   140009e37:	mov    rsi,QWORD PTR [rsp+0x48]
   140009e3c:	mov    ecx,0x40
   140009e41:	movzx  edx,WORD PTR [rsi+0x2]
   140009e45:	add    rdx,0x28
   140009e49:	call   QWORD PTR [rip+0x4361]        # 0x14000e1b0
   140009e4f:	mov    rdi,rax
   140009e52:	test   rax,rax
   140009e55:	je     0x140009ecd
   140009e57:	mov    edx,0x1
   140009e5c:	mov    rcx,rax
   140009e5f:	call   QWORD PTR [rip+0x4243]        # 0x14000e0a8
   140009e65:	test   eax,eax
   140009e67:	je     0x140009eae
   140009e69:	movzx  edx,WORD PTR [rsi+0x2]
   140009e6d:	lea    rcx,[rdi+0x28]
   140009e71:	mov    r9d,edx
   140009e74:	mov    r8,rsi
   140009e77:	call   QWORD PTR [rip+0x46ab]        # 0x14000e528
   140009e7d:	xor    r9d,r9d
   140009e80:	lea    r8,[rdi+0x28]
   140009e84:	mov    rcx,rdi
   140009e87:	lea    edx,[r9+0x1]
   140009e8b:	call   QWORD PTR [rip+0x425f]        # 0x14000e0f0
   140009e91:	test   eax,eax
   140009e93:	je     0x140009eae
   140009e95:	mov    r8,rdi
   140009e98:	mov    edx,0x10
   140009e9d:	mov    rcx,rbp
   140009ea0:	call   QWORD PTR [rip+0x425a]        # 0x14000e100
   140009ea6:	test   eax,eax
   140009ea8:	je     0x140009eae
   140009eaa:	xor    ebx,ebx
   140009eac:	jmp    0x140009ec2
   140009eae:	call   QWORD PTR [rip+0x443c]        # 0x14000e2f0
   140009eb4:	movzx  ebx,ax
   140009eb7:	or     ebx,0x80070000
   140009ebd:	test   eax,eax
   140009ebf:	cmovle ebx,eax
   140009ec2:	mov    rcx,rdi
   140009ec5:	call   QWORD PTR [rip+0x430d]        # 0x14000e1d8
   140009ecb:	jmp    0x140009ed2
   140009ecd:	mov    ebx,0x8007000e
   140009ed2:	mov    rcx,rsi
   140009ed5:	call   QWORD PTR [rip+0x42fd]        # 0x14000e1d8
   140009edb:	mov    rbp,QWORD PTR [rsp+0x38]
   140009ee0:	mov    eax,ebx
   140009ee2:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ee7:	mov    rsi,QWORD PTR [rsp+0x40]
   140009eec:	add    rsp,0x20
   140009ef0:	pop    rdi
   140009ef1:	ret    
   140009ef2:	int3   
   140009ef3:	int3   
   140009ef4:	int3   
   140009ef5:	int3   
   140009ef6:	int3   
   140009ef7:	int3   
   140009ef8:	mov    QWORD PTR [rsp+0x8],rbx
   140009efd:	push   rbp
   140009efe:	push   rsi
   140009eff:	push   rdi
   140009f00:	push   r14
   140009f02:	push   r15
   140009f04:	mov    rbp,rsp
   140009f07:	sub    rsp,0x50
   140009f0b:	xor    ebx,ebx
   140009f0d:	lea    rax,[rbp+0x40]
   140009f11:	and    DWORD PTR [rbp+0x40],ebx
   140009f14:	mov    r15,rdx
   140009f17:	xor    r9d,r9d
   140009f1a:	mov    QWORD PTR [rsp+0x20],rax
   140009f1f:	xor    r8d,r8d
   140009f22:	mov    rdi,rcx
   140009f25:	lea    edx,[rbx+0x10]
   140009f28:	xor    esi,esi
   140009f2a:	call   QWORD PTR [rip+0x4160]        # 0x14000e090
   140009f30:	mov    r14d,0x80070000
   140009f36:	test   eax,eax
   140009f38:	jne    0x140009f97
   140009f3a:	call   QWORD PTR [rip+0x43b0]        # 0x14000e2f0
   140009f40:	cmp    eax,0x7a
   140009f43:	jne    0x140009f8a
   140009f45:	mov    edx,DWORD PTR [rbp+0x40]
   140009f48:	lea    ecx,[rbx+0x40]
   140009f4b:	call   QWORD PTR [rip+0x425f]        # 0x14000e1b0
   140009f51:	mov    rsi,rax
   140009f54:	test   rax,rax
   140009f57:	jne    0x140009f62
   140009f59:	lea    ebx,[r14+0xe]
   140009f5d:	jmp    0x14000a09a
   140009f62:	mov    r9d,DWORD PTR [rbp+0x40]
   140009f66:	lea    rax,[rbp+0x40]
   140009f6a:	mov    r8,rsi
   140009f6d:	mov    QWORD PTR [rsp+0x20],rax
   140009f72:	mov    edx,0x10
   140009f77:	mov    rcx,rdi
   140009f7a:	call   QWORD PTR [rip+0x4110]        # 0x14000e090
   140009f80:	test   eax,eax
   140009f82:	jne    0x140009fa4
   140009f84:	call   QWORD PTR [rip+0x4366]        # 0x14000e2f0
   140009f8a:	movzx  ebx,ax
   140009f8d:	or     ebx,r14d
   140009f90:	test   eax,eax
   140009f92:	cmovle ebx,eax
   140009f95:	jmp    0x140009f9c
   140009f97:	mov    ebx,0x8000ffff
   140009f9c:	test   ebx,ebx
   140009f9e:	jne    0x14000a08c
   140009fa4:	and    QWORD PTR [rbp-0x18],0x0
   140009fa9:	lea    r9,[rbp+0x48]
   140009fad:	and    DWORD PTR [rbp-0x20],0x0
   140009fb1:	lea    r8,[rbp-0x18]
   140009fb5:	and    DWORD PTR [rbp+0x48],0x0
   140009fb9:	lea    rdx,[rbp-0x20]
   140009fbd:	mov    rcx,rsi
   140009fc0:	call   QWORD PTR [rip+0x4112]        # 0x14000e0d8
   140009fc6:	test   eax,eax
   140009fc8:	je     0x14000a07b
   140009fce:	mov    rcx,QWORD PTR [rbp-0x18]
   140009fd2:	test   rcx,rcx
   140009fd5:	je     0x14000a067
   140009fdb:	and    QWORD PTR [rbp-0x10],0x0
   140009fe0:	lea    r8,[rbp-0x10]
   140009fe4:	xor    edx,edx
   140009fe6:	call   QWORD PTR [rip+0x40d4]        # 0x14000e0c0
   140009fec:	test   eax,eax
   140009fee:	je     0x14000a07b
   140009ff4:	mov    r14,QWORD PTR [rbp-0x10]
   140009ff8:	test   BYTE PTR [r14+0x1],0x8
   140009ffd:	je     0x14000a009
   140009fff:	mov    ebx,0x8007053c
   14000a004:	jmp    0x14000a08c
   14000a009:	add    r14,0x8
   14000a00d:	mov    rcx,r14
   14000a010:	call   QWORD PTR [rip+0x40ca]        # 0x14000e0e0
   14000a016:	mov    edx,eax
   14000a018:	mov    ecx,0x40
   14000a01d:	call   QWORD PTR [rip+0x418d]        # 0x14000e1b0
   14000a023:	mov    rdi,rax
   14000a026:	test   r14,r14
   14000a029:	je     0x14000a05b
   14000a02b:	test   rax,rax
   14000a02e:	je     0x14000a060
   14000a030:	mov    rcx,r14
   14000a033:	call   QWORD PTR [rip+0x40a7]        # 0x14000e0e0
   14000a039:	mov    r8,r14
   14000a03c:	mov    rdx,rdi
   14000a03f:	mov    ecx,eax
   14000a041:	call   QWORD PTR [rip+0x4051]        # 0x14000e098
   14000a047:	test   eax,eax
   14000a049:	je     0x14000a050
   14000a04b:	mov    QWORD PTR [r15],rdi
   14000a04e:	jmp    0x14000a08c
   14000a050:	mov    rcx,rdi
   14000a053:	call   QWORD PTR [rip+0x417f]        # 0x14000e1d8
   14000a059:	jmp    0x14000a08c
   14000a05b:	test   rax,rax
   14000a05e:	jne    0x14000a08c
   14000a060:	mov    ebx,0x8007000e
   14000a065:	jmp    0x14000a08c
   14000a067:	mov    rdx,r15
   14000a06a:	lea    rcx,[rip+0x6fcf]        # 0x140011040
   14000a071:	call   QWORD PTR [rip+0x4039]        # 0x14000e0b0
   14000a077:	test   eax,eax
   14000a079:	jne    0x14000a08c
   14000a07b:	call   QWORD PTR [rip+0x426f]        # 0x14000e2f0
   14000a081:	movzx  ebx,ax
   14000a084:	or     ebx,r14d
   14000a087:	test   eax,eax
   14000a089:	cmovle ebx,eax
   14000a08c:	test   rsi,rsi
   14000a08f:	je     0x14000a09a
   14000a091:	mov    rcx,rsi
   14000a094:	call   QWORD PTR [rip+0x413e]        # 0x14000e1d8
   14000a09a:	mov    eax,ebx
   14000a09c:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a0a4:	add    rsp,0x50
   14000a0a8:	pop    r15
   14000a0aa:	pop    r14
   14000a0ac:	pop    rdi
   14000a0ad:	pop    rsi
   14000a0ae:	pop    rbp
   14000a0af:	ret    
   14000a0b0:	int3   
   14000a0b1:	int3   
   14000a0b2:	int3   
   14000a0b3:	int3   
   14000a0b4:	int3   
   14000a0b5:	int3   
   14000a0b6:	int3   
   14000a0b7:	int3   
   14000a0b8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a0bd:	mov    QWORD PTR [rsp+0x10],rbp
   14000a0c2:	push   rsi
   14000a0c3:	push   rdi
   14000a0c4:	push   r14
   14000a0c6:	sub    rsp,0x30
   14000a0ca:	mov    r14,rdx
   14000a0cd:	mov    rbx,rcx
   14000a0d0:	mov    ebp,0x8
   14000a0d5:	call   QWORD PTR [rip+0x420d]        # 0x14000e2e8
   14000a0db:	xor    r9d,r9d
   14000a0de:	lea    edx,[rbp-0x7]
   14000a0e1:	mov    rsi,rax
   14000a0e4:	xor    r8d,r8d
   14000a0e7:	lea    rax,[rsp+0x60]
   14000a0ec:	mov    rcx,rbx
   14000a0ef:	mov    QWORD PTR [rsp+0x20],rax
   14000a0f4:	call   QWORD PTR [rip+0x3f8e]        # 0x14000e088
   14000a0fa:	test   eax,eax
   14000a0fc:	jne    0x14000a17c
   14000a0fe:	call   QWORD PTR [rip+0x41ec]        # 0x14000e2f0
   14000a104:	cmp    eax,0x7a
   14000a107:	jne    0x14000a161
   14000a109:	mov    r8d,DWORD PTR [rsp+0x60]
   14000a10e:	xor    edx,edx
   14000a110:	mov    rcx,rsi
   14000a113:	call   QWORD PTR [rip+0x41af]        # 0x14000e2c8
   14000a119:	mov    rdi,rax
   14000a11c:	test   rax,rax
   14000a11f:	je     0x14000a15a
   14000a121:	mov    r9d,DWORD PTR [rsp+0x60]
   14000a126:	lea    rax,[rsp+0x60]
   14000a12b:	mov    r8,rdi
   14000a12e:	mov    QWORD PTR [rsp+0x20],rax
   14000a133:	lea    edx,[rbp-0x7]
   14000a136:	mov    rcx,rbx
   14000a139:	call   QWORD PTR [rip+0x3f49]        # 0x14000e088
   14000a13f:	test   eax,eax
   14000a141:	jne    0x14000a18a
   14000a143:	call   0x14000c1b8
   14000a148:	mov    r8,rdi
   14000a14b:	xor    edx,edx
   14000a14d:	mov    rcx,rsi
   14000a150:	mov    ebx,eax
   14000a152:	call   QWORD PTR [rip+0x4178]        # 0x14000e2d0
   14000a158:	jmp    0x14000a181
   14000a15a:	mov    ebx,0x8007000e
   14000a15f:	jmp    0x14000a181
   14000a161:	test   eax,eax
   14000a163:	je     0x14000a175
   14000a165:	movzx  ebx,ax
   14000a168:	or     ebx,0x80070000
   14000a16e:	test   eax,eax
   14000a170:	cmovle ebx,eax
   14000a173:	jmp    0x14000a181
   14000a175:	mov    ebx,0x80070057
   14000a17a:	jmp    0x14000a181
   14000a17c:	mov    ebx,0x8000ffff
   14000a181:	test   ebx,ebx
   14000a183:	js     0x14000a1e9
   14000a185:	mov    rdi,QWORD PTR [rsp+0x60]
   14000a18a:	mov    rcx,QWORD PTR [rdi]
   14000a18d:	call   QWORD PTR [rip+0x3f4d]        # 0x14000e0e0
   14000a193:	mov    edx,eax
   14000a195:	mov    ecx,0x40
   14000a19a:	mov    esi,eax
   14000a19c:	call   QWORD PTR [rip+0x400e]        # 0x14000e1b0
   14000a1a2:	mov    rbx,rax
   14000a1a5:	test   rax,rax
   14000a1a8:	je     0x14000a1d5
   14000a1aa:	mov    r8,QWORD PTR [rdi]
   14000a1ad:	mov    rdx,rax
   14000a1b0:	mov    ecx,esi
   14000a1b2:	call   QWORD PTR [rip+0x3ee0]        # 0x14000e098
   14000a1b8:	mov    rcx,rbx
   14000a1bb:	call   QWORD PTR [rip+0x3f0f]        # 0x14000e0d0
   14000a1c1:	test   eax,eax
   14000a1c3:	je     0x14000a1cc
   14000a1c5:	mov    QWORD PTR [r14],rbx
   14000a1c8:	xor    ebp,ebp
   14000a1ca:	jmp    0x14000a1d5
   14000a1cc:	mov    rcx,rbx
   14000a1cf:	call   QWORD PTR [rip+0x4003]        # 0x14000e1d8
   14000a1d5:	call   QWORD PTR [rip+0x410d]        # 0x14000e2e8
   14000a1db:	mov    r8,rdi
   14000a1de:	xor    edx,edx
   14000a1e0:	mov    rcx,rax
   14000a1e3:	call   QWORD PTR [rip+0x40e7]        # 0x14000e2d0
   14000a1e9:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a1ee:	mov    eax,ebp
   14000a1f0:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a1f5:	add    rsp,0x30
   14000a1f9:	pop    r14
   14000a1fb:	pop    rdi
   14000a1fc:	pop    rsi
   14000a1fd:	ret    
   14000a1fe:	int3   
   14000a1ff:	int3   
   14000a200:	int3   
   14000a201:	int3   
   14000a202:	int3   
   14000a203:	int3   
   14000a204:	mov    QWORD PTR [rsp+0x8],rbx
   14000a209:	push   rbp
   14000a20a:	push   rsi
   14000a20b:	push   rdi
   14000a20c:	sub    rsp,0x20
   14000a210:	xor    ebp,ebp
   14000a212:	mov    rsi,rcx
   14000a215:	mov    QWORD PTR [rsp+0x50],rbp
   14000a21a:	lea    edi,[rbp+0x1]
   14000a21d:	call   QWORD PTR [rip+0x442d]        # 0x14000e650
   14000a223:	mov    ebx,eax
   14000a225:	test   eax,eax
   14000a227:	js     0x14000a2ce
   14000a22d:	call   QWORD PTR [rip+0x3fcd]        # 0x14000e200
   14000a233:	lea    r9,[rsp+0x50]
   14000a238:	xor    r8d,r8d
   14000a23b:	mov    rcx,rax
   14000a23e:	lea    edx,[rbp+0x8]
   14000a241:	call   QWORD PTR [rip+0x3e39]        # 0x14000e080
   14000a247:	test   eax,eax
   14000a249:	je     0x14000a2a2
   14000a24b:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a250:	lea    rdx,[rsp+0x48]
   14000a255:	call   0x140009c38
   14000a25a:	mov    ebx,eax
   14000a25c:	test   eax,eax
   14000a25e:	jne    0x14000a26b
   14000a260:	cmp    DWORD PTR [rsp+0x48],0x2000
   14000a268:	cmovae ebx,edi
   14000a26b:	test   ebx,ebx
   14000a26d:	jne    0x14000a29d
   14000a26f:	mov    ecx,0x1000003f
   14000a274:	call   QWORD PTR [rip+0x4246]        # 0x14000e4c0
   14000a27a:	test   al,al
   14000a27c:	je     0x14000a2a2
   14000a27e:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a283:	lea    rdx,[rsp+0x48]
   14000a288:	call   QWORD PTR [rip+0x423a]        # 0x14000e4c8
   14000a28e:	cmp    DWORD PTR [rsp+0x48],0x7a
   14000a293:	mov    edi,ebp
   14000a295:	mov    ebx,eax
   14000a297:	setne  dil
   14000a29b:	jmp    0x14000a2a2
   14000a29d:	cmp    ebx,edi
   14000a29f:	cmove  edi,ebp
   14000a2a2:	cmp    QWORD PTR [rsp+0x50],rbp
   14000a2a7:	jne    0x14000a2bd
   14000a2a9:	call   QWORD PTR [rip+0x4041]        # 0x14000e2f0
   14000a2af:	movzx  ebx,ax
   14000a2b2:	or     ebx,0x80070000
   14000a2b8:	test   eax,eax
   14000a2ba:	cmovle ebx,eax
   14000a2bd:	call   QWORD PTR [rip+0x437d]        # 0x14000e640
   14000a2c3:	test   ebx,ebx
   14000a2c5:	js     0x14000a2ce
   14000a2c7:	test   rsi,rsi
   14000a2ca:	je     0x14000a2ce
   14000a2cc:	mov    DWORD PTR [rsi],edi
   14000a2ce:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a2d3:	test   rcx,rcx
   14000a2d6:	je     0x14000a2de
   14000a2d8:	call   QWORD PTR [rip+0x4092]        # 0x14000e370
   14000a2de:	mov    eax,ebx
   14000a2e0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a2e5:	add    rsp,0x20
   14000a2e9:	pop    rdi
   14000a2ea:	pop    rsi
   14000a2eb:	pop    rbp
   14000a2ec:	ret    
   14000a2ed:	int3   
   14000a2ee:	int3   
   14000a2ef:	int3   
   14000a2f0:	int3   
   14000a2f1:	int3   
   14000a2f2:	int3   
   14000a2f3:	int3   
   14000a2f4:	rex push rbx
   14000a2f6:	sub    rsp,0x20
   14000a2fa:	and    DWORD PTR [rcx],0x0
   14000a2fd:	lea    rdx,[rsp+0x30]
   14000a302:	mov    rbx,rcx
   14000a305:	xor    ecx,ecx
   14000a307:	call   0x140009c38
   14000a30c:	mov    edx,eax
   14000a30e:	test   eax,eax
   14000a310:	jne    0x14000a32f
   14000a312:	cmp    DWORD PTR [rsp+0x30],0x3000
   14000a31a:	jae    0x14000a336
   14000a31c:	cmp    DWORD PTR [rsp+0x30],0x2000
   14000a324:	sbb    eax,eax
   14000a326:	not    eax
   14000a328:	and    eax,0x2
   14000a32b:	mov    DWORD PTR [rbx],eax
   14000a32d:	jmp    0x14000a33c
   14000a32f:	cmp    eax,0x1
   14000a332:	jne    0x14000a33c
   14000a334:	xor    edx,edx
   14000a336:	mov    DWORD PTR [rbx],0x1
   14000a33c:	mov    eax,edx
   14000a33e:	add    rsp,0x20
   14000a342:	pop    rbx
   14000a343:	ret    
   14000a344:	int3   
   14000a345:	int3   
   14000a346:	int3   
   14000a347:	int3   
   14000a348:	int3   
   14000a349:	int3   
   14000a34a:	int3   
   14000a34b:	int3   
   14000a34c:	rex push rbx
   14000a34e:	sub    rsp,0x20
   14000a352:	and    QWORD PTR [rcx],0x0
   14000a356:	mov    rbx,rcx
   14000a359:	lea    rcx,[rsp+0x30]
   14000a35e:	call   0x14000a2f4
   14000a363:	test   eax,eax
   14000a365:	jne    0x14000a38c
   14000a367:	cmp    DWORD PTR [rsp+0x30],0x1
   14000a36c:	jne    0x14000a377
   14000a36e:	mov    QWORD PTR [rbx],0xffffffff80000002
   14000a375:	jmp    0x14000a38c
   14000a377:	cmp    DWORD PTR [rsp+0x30],0x2
   14000a37c:	jne    0x14000a387
   14000a37e:	mov    QWORD PTR [rbx],0xffffffff80000001
   14000a385:	jmp    0x14000a38c
   14000a387:	mov    eax,0x80004005
   14000a38c:	add    rsp,0x20
   14000a390:	pop    rbx
   14000a391:	ret    
   14000a392:	int3   
   14000a393:	int3   
   14000a394:	int3   
   14000a395:	int3   
   14000a396:	int3   
   14000a397:	int3   
   14000a398:	rex push rbx
   14000a39a:	sub    rsp,0x30
   14000a39e:	lea    rdx,[rsp+0x48]
   14000a3a3:	mov    ecx,0xf003f
   14000a3a8:	call   QWORD PTR [rip+0x3d7a]        # 0x14000e128
   14000a3ae:	mov    ebx,eax
   14000a3b0:	test   eax,eax
   14000a3b2:	jne    0x14000a4b5
   14000a3b8:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a3bd:	mov    rcx,0xffffffff80000002
   14000a3c4:	call   QWORD PTR [rip+0x3d56]        # 0x14000e120
   14000a3ca:	mov    ebx,eax
   14000a3cc:	test   eax,eax
   14000a3ce:	jne    0x14000a4a6
   14000a3d4:	lea    rax,[rsp+0x40]
   14000a3d9:	mov    r9d,0xf003f
   14000a3df:	xor    r8d,r8d
   14000a3e2:	mov    QWORD PTR [rsp+0x20],rax
   14000a3e7:	lea    rdx,[rip+0x7042]        # 0x140011430
   14000a3ee:	mov    rcx,0xffffffff80000001
   14000a3f5:	call   QWORD PTR [rip+0x3c7d]        # 0x14000e078
   14000a3fb:	mov    ebx,eax
   14000a3fd:	test   eax,eax
   14000a3ff:	jne    0x14000a4a6
   14000a405:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a40a:	mov    rcx,0xffffffff80000000
   14000a411:	call   QWORD PTR [rip+0x3d09]        # 0x14000e120
   14000a417:	mov    ebx,eax
   14000a419:	test   eax,eax
   14000a41b:	jne    0x14000a49b
   14000a41d:	lea    rcx,[rip+0xa284]        # 0x1400146a8
   14000a424:	call   QWORD PTR [rip+0x3e1e]        # 0x14000e248
   14000a42a:	cmp    DWORD PTR [rip+0xa274],ebx        # 0x1400146a4
   14000a430:	jne    0x14000a48e
   14000a432:	call   0x14000aae4
   14000a437:	mov    ebx,eax
   14000a439:	test   eax,eax
   14000a43b:	jne    0x14000a48e
   14000a43d:	call   QWORD PTR [rip+0x3dbd]        # 0x14000e200
   14000a443:	mov    rcx,rax
   14000a446:	call   0x14000b0dc
   14000a44b:	lea    rdx,[rip+0x12e]        # 0x14000a580
   14000a452:	lea    rcx,[rip+0xa2af]        # 0x140014708
   14000a459:	call   0x14000b188
   14000a45e:	lea    rdx,[rip+0x12b]        # 0x14000a590
   14000a465:	lea    rcx,[rip+0xa294]        # 0x140014700
   14000a46c:	call   0x14000b188
   14000a471:	call   0x14000adf8
   14000a476:	mov    ebx,eax
   14000a478:	mov    edx,0x1
   14000a47d:	mov    eax,DWORD PTR [rip+0xa221]        # 0x1400146a4
   14000a483:	test   ebx,ebx
   14000a485:	cmove  eax,edx
   14000a488:	mov    DWORD PTR [rip+0xa216],eax        # 0x1400146a4
   14000a48e:	lea    rcx,[rip+0xa213]        # 0x1400146a8
   14000a495:	call   QWORD PTR [rip+0x3f25]        # 0x14000e3c0
   14000a49b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a4a0:	call   QWORD PTR [rip+0x3b82]        # 0x14000e028
   14000a4a6:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a4ab:	call   QWORD PTR [rip+0x3b77]        # 0x14000e028
   14000a4b1:	test   ebx,ebx
   14000a4b3:	je     0x14000a4ba
   14000a4b5:	call   0x14000a4d4
   14000a4ba:	movzx  eax,bx
   14000a4bd:	or     eax,0x80070000
   14000a4c2:	test   ebx,ebx
   14000a4c4:	cmovle eax,ebx
   14000a4c7:	add    rsp,0x30
   14000a4cb:	pop    rbx
   14000a4cc:	ret    
   14000a4cd:	int3   
   14000a4ce:	int3   
   14000a4cf:	int3   
   14000a4d0:	int3   
   14000a4d1:	int3   
   14000a4d2:	int3   
   14000a4d3:	int3   
   14000a4d4:	rex push rbx
   14000a4d6:	sub    rsp,0x20
   14000a4da:	lea    rcx,[rip+0xa1c7]        # 0x1400146a8
   14000a4e1:	xor    ebx,ebx
   14000a4e3:	call   QWORD PTR [rip+0x3d5f]        # 0x14000e248
   14000a4e9:	cmp    DWORD PTR [rip+0xa1b5],ebx        # 0x1400146a4
   14000a4ef:	je     0x14000a55d
   14000a4f1:	call   0x14000aae4
   14000a4f6:	mov    ebx,eax
   14000a4f8:	test   eax,eax
   14000a4fa:	jne    0x14000a55d
   14000a4fc:	call   QWORD PTR [rip+0x3cfe]        # 0x14000e200
   14000a502:	mov    rcx,rax
   14000a505:	call   0x14000b0dc
   14000a50a:	call   QWORD PTR [rip+0x3e28]        # 0x14000e338
   14000a510:	cmp    DWORD PTR [rip+0xa242],eax        # 0x140014758
   14000a516:	jne    0x14000a52b
   14000a518:	lea    rdx,[rip+0x61]        # 0x14000a580
   14000a51f:	lea    rcx,[rip+0xa1e2]        # 0x140014708
   14000a526:	call   0x14000b4ac
   14000a52b:	call   QWORD PTR [rip+0x3e07]        # 0x14000e338
   14000a531:	cmp    DWORD PTR [rip+0xa221],eax        # 0x140014758
   14000a537:	jne    0x14000a54c
   14000a539:	lea    rdx,[rip+0x50]        # 0x14000a590
   14000a540:	lea    rcx,[rip+0xa1b9]        # 0x140014700
   14000a547:	call   0x14000b4ac
   14000a54c:	call   0x14000adf8
   14000a551:	mov    ebx,eax
   14000a553:	neg    eax
   14000a555:	sbb    edx,edx
   14000a557:	and    DWORD PTR [rip+0xa147],edx        # 0x1400146a4
   14000a55d:	lea    rcx,[rip+0xa144]        # 0x1400146a8
   14000a564:	call   QWORD PTR [rip+0x3e56]        # 0x14000e3c0
   14000a56a:	mov    eax,ebx
   14000a56c:	add    rsp,0x20
   14000a570:	pop    rbx
   14000a571:	ret    
   14000a572:	int3   
   14000a573:	int3   
   14000a574:	int3   
   14000a575:	int3   
   14000a576:	int3   
   14000a577:	int3   
   14000a578:	int3   
   14000a579:	int3   
   14000a57a:	int3   
   14000a57b:	int3   
   14000a57c:	int3   
   14000a57d:	int3   
   14000a57e:	int3   
   14000a57f:	int3   
   14000a580:	rex.W jmp QWORD PTR [rip+0x3e91]        # 0x14000e418
   14000a587:	int3   
   14000a588:	int3   
   14000a589:	int3   
   14000a58a:	int3   
   14000a58b:	int3   
   14000a58c:	int3   
   14000a58d:	int3   
   14000a58e:	int3   
   14000a58f:	int3   
   14000a590:	rex.W jmp QWORD PTR [rip+0x3e59]        # 0x14000e3f0
   14000a597:	int3   
   14000a598:	int3   
   14000a599:	int3   
   14000a59a:	int3   
   14000a59b:	int3   
   14000a59c:	int3   
   14000a59d:	int3   
   14000a59e:	int3   
   14000a59f:	int3   
   14000a5a0:	rex push rbx
   14000a5a2:	sub    rsp,0x50
   14000a5a6:	mov    rbx,rdx
   14000a5a9:	mov    r8d,0x30
   14000a5af:	lea    rdx,[rsp+0x20]
   14000a5b4:	call   QWORD PTR [rip+0x3cf6]        # 0x14000e2b0
   14000a5ba:	nop
   14000a5bb:	mov    eax,0x5a4d
   14000a5c0:	mov    rcx,QWORD PTR [rsp+0x28]
   14000a5c5:	cmp    WORD PTR [rcx],ax
   14000a5c8:	je     0x14000a5ce
   14000a5ca:	xor    al,al
   14000a5cc:	jmp    0x14000a60c
   14000a5ce:	movsxd rdx,DWORD PTR [rcx+0x3c]
   14000a5d2:	cmp    DWORD PTR [rdx+rcx*1],0x4550
   14000a5d9:	je     0x14000a5df
   14000a5db:	xor    al,al
   14000a5dd:	jmp    0x14000a60c
   14000a5df:	mov    r8d,DWORD PTR [rdx+rcx*1+0xe8]
   14000a5e7:	lea    rax,[r8+rcx*1]
   14000a5eb:	cmp    rbx,rax
   14000a5ee:	jb     0x14000a606
   14000a5f0:	mov    eax,DWORD PTR [rdx+rcx*1+0xec]
   14000a5f7:	add    rax,r8
   14000a5fa:	add    rax,rcx
   14000a5fd:	cmp    rbx,rax
   14000a600:	jae    0x14000a606
   14000a602:	mov    al,0x1
   14000a604:	jmp    0x14000a60c
   14000a606:	xor    al,al
   14000a608:	jmp    0x14000a60c
   14000a60a:	xor    al,al
   14000a60c:	add    rsp,0x50
   14000a610:	pop    rbx
   14000a611:	ret    
   14000a612:	int3   
   14000a613:	int3   
   14000a614:	int3   
   14000a615:	int3   
   14000a616:	int3   
   14000a617:	int3   
   14000a618:	mov    QWORD PTR [rsp+0x10],rbx
   14000a61d:	push   rdi
   14000a61e:	sub    rsp,0x20
   14000a622:	call   QWORD PTR [rip+0x3db8]        # 0x14000e3e0
   14000a628:	mov    rbx,QWORD PTR [rip+0xa121]        # 0x140014750
   14000a62f:	mov    rdi,rax
   14000a632:	jmp    0x14000a663
   14000a634:	lea    r9,[rsp+0x30]
   14000a639:	mov    edx,0x10000
   14000a63e:	mov    r8d,0x20
   14000a644:	mov    rcx,rbx
   14000a647:	call   QWORD PTR [rip+0x3c4b]        # 0x14000e298
   14000a64d:	mov    r8d,0x10000
   14000a653:	mov    rdx,rbx
   14000a656:	mov    rcx,rdi
   14000a659:	call   QWORD PTR [rip+0x3c41]        # 0x14000e2a0
   14000a65f:	mov    rbx,QWORD PTR [rbx+0x8]
   14000a663:	test   rbx,rbx
   14000a666:	jne    0x14000a634
   14000a668:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a66d:	add    rsp,0x20
   14000a671:	pop    rdi
   14000a672:	ret    
   14000a673:	int3   
   14000a674:	int3   
   14000a675:	int3   
   14000a676:	int3   
   14000a677:	int3   
   14000a678:	int3   
   14000a679:	int3   
   14000a67a:	int3   
   14000a67b:	int3   
   14000a67c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a681:	mov    QWORD PTR [rsp+0x10],rsi
   14000a686:	push   rdi
   14000a687:	sub    rsp,0x50
   14000a68b:	movzx  eax,cx
   14000a68e:	mov    rdi,rdx
   14000a691:	mov    rbx,rcx
   14000a694:	mov    esi,0x10000
   14000a699:	test   rax,rax
   14000a69c:	je     0x14000a6a4
   14000a69e:	sub    rbx,rax
   14000a6a1:	add    rbx,rsi
   14000a6a4:	cmp    rbx,rdx
   14000a6a7:	jae    0x14000a73f
   14000a6ad:	lea    rax,[rbx-0x50000000]
   14000a6b4:	cmp    rax,0x30000000
   14000a6ba:	ja     0x14000a6c3
   14000a6bc:	mov    ebx,0x80010000
   14000a6c1:	jmp    0x14000a737
   14000a6c3:	xor    edx,edx
   14000a6c5:	lea    rcx,[rsp+0x20]
   14000a6ca:	lea    r8d,[rdx+0x30]
   14000a6ce:	call   0x14000d326
   14000a6d3:	mov    r8d,0x30
   14000a6d9:	lea    rdx,[rsp+0x20]
   14000a6de:	mov    rcx,rbx
   14000a6e1:	call   QWORD PTR [rip+0x3bc9]        # 0x14000e2b0
   14000a6e7:	test   rax,rax
   14000a6ea:	je     0x14000a73f
   14000a6ec:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a6f1:	cmp    DWORD PTR [rsp+0x40],esi
   14000a6f5:	jne    0x14000a71e
   14000a6f7:	cmp    rcx,rsi
   14000a6fa:	jb     0x14000a71e
   14000a6fc:	mov    r9d,0x40
   14000a702:	mov    r8d,0x3000
   14000a708:	mov    rdx,rsi
   14000a70b:	mov    rcx,rbx
   14000a70e:	call   QWORD PTR [rip+0x3c0c]        # 0x14000e320
   14000a714:	test   rax,rax
   14000a717:	jne    0x14000a741
   14000a719:	add    rbx,rsi
   14000a71c:	jmp    0x14000a737
   14000a71e:	mov    rbx,QWORD PTR [rsp+0x20]
   14000a723:	add    rbx,rcx
   14000a726:	movzx  ecx,bx
   14000a729:	test   rcx,rcx
   14000a72c:	je     0x14000a737
   14000a72e:	mov    rax,rsi
   14000a731:	sub    rax,rcx
   14000a734:	add    rbx,rax
   14000a737:	cmp    rbx,rdi
   14000a73a:	jmp    0x14000a6a7
   14000a73f:	xor    eax,eax
   14000a741:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a746:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a74b:	add    rsp,0x50
   14000a74f:	pop    rdi
   14000a750:	ret    
   14000a751:	int3   
   14000a752:	int3   
   14000a753:	int3   
   14000a754:	int3   
   14000a755:	int3   
   14000a756:	int3   
   14000a757:	int3   
   14000a758:	mov    QWORD PTR [rsp+0x8],rbx
   14000a75d:	mov    QWORD PTR [rsp+0x10],rsi
   14000a762:	push   rdi
   14000a763:	sub    rsp,0x50
   14000a767:	lea    rbx,[rdx-0x10000]
   14000a76e:	mov    rdi,rcx
   14000a771:	movzx  eax,bx
   14000a774:	test   rax,rax
   14000a777:	je     0x14000a77c
   14000a779:	sub    rbx,rax
   14000a77c:	cmp    rbx,rcx
   14000a77f:	jbe    0x14000a818
   14000a785:	mov    esi,0x10000
   14000a78a:	lea    rax,[rbx-0x50000000]
   14000a791:	cmp    rax,0x30000000
   14000a797:	ja     0x14000a7a0
   14000a799:	mov    ebx,0x4fff0000
   14000a79e:	jmp    0x14000a80f
   14000a7a0:	xor    edx,edx
   14000a7a2:	lea    rcx,[rsp+0x20]
   14000a7a7:	lea    r8d,[rdx+0x30]
   14000a7ab:	call   0x14000d326
   14000a7b0:	mov    r8d,0x30
   14000a7b6:	lea    rdx,[rsp+0x20]
   14000a7bb:	mov    rcx,rbx
   14000a7be:	call   QWORD PTR [rip+0x3aec]        # 0x14000e2b0
   14000a7c4:	test   rax,rax
   14000a7c7:	je     0x14000a818
   14000a7c9:	cmp    DWORD PTR [rsp+0x40],esi
   14000a7cd:	jne    0x14000a7f8
   14000a7cf:	cmp    QWORD PTR [rsp+0x38],rsi
   14000a7d4:	jb     0x14000a7f8
   14000a7d6:	mov    r9d,0x40
   14000a7dc:	mov    r8d,0x3000
   14000a7e2:	mov    rdx,rsi
   14000a7e5:	mov    rcx,rbx
   14000a7e8:	call   QWORD PTR [rip+0x3b32]        # 0x14000e320
   14000a7ee:	test   rax,rax
   14000a7f1:	jne    0x14000a81a
   14000a7f3:	sub    rbx,rsi
   14000a7f6:	jmp    0x14000a80f
   14000a7f8:	mov    rbx,QWORD PTR [rsp+0x28]
   14000a7fd:	add    rbx,0xffffffffffff0000
   14000a804:	movzx  eax,bx
   14000a807:	test   rax,rax
   14000a80a:	je     0x14000a80f
   14000a80c:	sub    rbx,rax
   14000a80f:	cmp    rbx,rdi
   14000a812:	ja     0x14000a78a
   14000a818:	xor    eax,eax
   14000a81a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a81f:	mov    rsi,QWORD PTR [rsp+0x68]
   14000a824:	add    rsp,0x50
   14000a828:	pop    rdi
   14000a829:	ret    
   14000a82a:	int3   
   14000a82b:	int3   
   14000a82c:	int3   
   14000a82d:	int3   
   14000a82e:	int3   
   14000a82f:	int3   
   14000a830:	mov    rax,rsp
   14000a833:	mov    QWORD PTR [rax+0x8],rbx
   14000a837:	mov    QWORD PTR [rax+0x10],rbp
   14000a83b:	mov    QWORD PTR [rax+0x18],rsi
   14000a83f:	mov    QWORD PTR [rax+0x20],rdi
   14000a843:	push   r14
   14000a845:	sub    rsp,0x20
   14000a849:	mov    rdx,QWORD PTR [rip+0x9ee0]        # 0x140014730
   14000a850:	lea    rax,[rcx-0x7ff80000]
   14000a857:	cmp    rcx,0x7ff80000
   14000a85e:	mov    ebp,0x10000
   14000a863:	mov    rsi,0xfffffffffff80000
   14000a86a:	mov    rbx,rcx
   14000a86d:	cmova  rbp,rax
   14000a871:	cmp    rcx,0xffffffff80000000
   14000a878:	lea    rax,[rcx+0x7ff80000]
   14000a87f:	cmovb  rsi,rax
   14000a883:	mov    rax,QWORD PTR [rip+0x9ec6]        # 0x140014750
   14000a88a:	xor    edi,edi
   14000a88c:	test   rdx,rdx
   14000a88f:	jne    0x14000a8a0
   14000a891:	test   rax,rax
   14000a894:	je     0x14000a8b6
   14000a896:	mov    rdx,rax
   14000a899:	mov    QWORD PTR [rip+0x9e90],rax        # 0x140014730
   14000a8a0:	cmp    QWORD PTR [rdx+0x10],rdi
   14000a8a4:	je     0x14000a8b6
   14000a8a6:	cmp    QWORD PTR [rdx+0x10],rbp
   14000a8aa:	jb     0x14000a8b6
   14000a8ac:	cmp    QWORD PTR [rdx+0x10],rsi
   14000a8b0:	jbe    0x14000a9f1
   14000a8b6:	mov    QWORD PTR [rip+0x9e73],rax        # 0x140014730
   14000a8bd:	mov    rdx,rax
   14000a8c0:	test   rax,rax
   14000a8c3:	je     0x14000a8f0
   14000a8c5:	test   rax,rax
   14000a8c8:	je     0x14000a8e0
   14000a8ca:	cmp    QWORD PTR [rdx+0x10],rdi
   14000a8ce:	je     0x14000a8e0
   14000a8d0:	cmp    QWORD PTR [rdx+0x10],rbp
   14000a8d4:	jb     0x14000a8e0
   14000a8d6:	cmp    QWORD PTR [rdx+0x10],rsi
   14000a8da:	jbe    0x14000a9f1
   14000a8e0:	mov    rdx,QWORD PTR [rdx+0x8]
   14000a8e4:	mov    QWORD PTR [rip+0x9e45],rdx        # 0x140014730
   14000a8eb:	test   rdx,rdx
   14000a8ee:	jne    0x14000a8ca
   14000a8f0:	movzx  eax,cx
   14000a8f3:	sub    rbx,rax
   14000a8f6:	cmp    rbx,0x40000000
   14000a8fd:	jbe    0x14000a91a
   14000a8ff:	lea    rdx,[rbx-0x40000000]
   14000a906:	mov    rcx,rbp
   14000a909:	call   0x14000a758
   14000a90e:	mov    rdx,rax
   14000a911:	test   rax,rax
   14000a914:	jne    0x14000a9a2
   14000a91a:	movabs r14,0xffffffff40000000
   14000a924:	cmp    rbx,r14
   14000a927:	jae    0x14000a940
   14000a929:	lea    rcx,[rbx+0x40000000]
   14000a930:	mov    rdx,rsi
   14000a933:	call   0x14000a67c
   14000a938:	mov    rdx,rax
   14000a93b:	test   rax,rax
   14000a93e:	jne    0x14000a9a2
   14000a940:	cmp    rbx,0x40000000
   14000a947:	jbe    0x14000a960
   14000a949:	lea    rcx,[rbx-0x40000000]
   14000a950:	mov    rdx,rbx
   14000a953:	call   0x14000a67c
   14000a958:	mov    rdx,rax
   14000a95b:	test   rax,rax
   14000a95e:	jne    0x14000a9a2
   14000a960:	cmp    rbx,r14
   14000a963:	jae    0x14000a97c
   14000a965:	lea    rdx,[rbx+0x40000000]
   14000a96c:	mov    rcx,rbx
   14000a96f:	call   0x14000a758
   14000a974:	mov    rdx,rax
   14000a977:	test   rax,rax
   14000a97a:	jne    0x14000a9a2
   14000a97c:	mov    rdx,rbx
   14000a97f:	mov    rcx,rbp
   14000a982:	call   0x14000a758
   14000a987:	mov    rdx,rax
   14000a98a:	test   rax,rax
   14000a98d:	jne    0x14000a9a2
   14000a98f:	mov    rdx,rsi
   14000a992:	mov    rcx,rbx
   14000a995:	call   0x14000a67c
   14000a99a:	mov    rdx,rax
   14000a99d:	test   rax,rax
   14000a9a0:	je     0x14000aa1d
   14000a9a2:	mov    DWORD PTR [rdx],0x52727464
   14000a9a8:	lea    rcx,[rdx+0xffa8]
   14000a9af:	mov    QWORD PTR [rdx+0x10],rdi
   14000a9b3:	mov    r8d,0x2a7
   14000a9b9:	mov    rax,QWORD PTR [rip+0x9d90]        # 0x140014750
   14000a9c0:	mov    QWORD PTR [rdx+0x8],rax
   14000a9c4:	lea    rax,[rdx+0xff60]
   14000a9cb:	mov    QWORD PTR [rip+0x9d7e],rdx        # 0x140014750
   14000a9d2:	mov    QWORD PTR [rip+0x9d57],rdx        # 0x140014730
   14000a9d9:	mov    QWORD PTR [rcx],rdi
   14000a9dc:	mov    rdi,rax
   14000a9df:	sub    rax,0x60
   14000a9e3:	lea    rcx,[rcx-0x60]
   14000a9e7:	sub    r8,0x1
   14000a9eb:	jne    0x14000a9d9
   14000a9ed:	mov    QWORD PTR [rdx+0x10],rdi
   14000a9f1:	mov    rbx,QWORD PTR [rdx+0x10]
   14000a9f5:	cmp    rbx,rbp
   14000a9f8:	jb     0x14000aa1d
   14000a9fa:	cmp    rbx,rsi
   14000a9fd:	ja     0x14000aa1d
   14000a9ff:	mov    rcx,QWORD PTR [rbx+0x48]
   14000aa03:	mov    QWORD PTR [rdx+0x10],rcx
   14000aa07:	mov    edx,0xcc
   14000aa0c:	mov    rcx,rbx
   14000aa0f:	lea    r8d,[rdx-0x6c]
   14000aa13:	call   0x14000d326
   14000aa18:	mov    rax,rbx
   14000aa1b:	jmp    0x14000aa1f
   14000aa1d:	xor    eax,eax
   14000aa1f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aa24:	mov    rbp,QWORD PTR [rsp+0x38]
   14000aa29:	mov    rsi,QWORD PTR [rsp+0x40]
   14000aa2e:	mov    rdi,QWORD PTR [rsp+0x48]
   14000aa33:	add    rsp,0x20
   14000aa37:	pop    r14
   14000aa39:	ret    
   14000aa3a:	int3   
   14000aa3b:	int3   
   14000aa3c:	int3   
   14000aa3d:	int3   
   14000aa3e:	int3   
   14000aa3f:	int3   
   14000aa40:	mov    QWORD PTR [rsp+0x8],rbx
   14000aa45:	mov    QWORD PTR [rsp+0x10],rsi
   14000aa4a:	push   rdi
   14000aa4b:	sub    rsp,0x20
   14000aa4f:	xor    edi,edi
   14000aa51:	mov    rbx,rcx
   14000aa54:	test   rcx,rcx
   14000aa57:	je     0x14000aaca
   14000aa59:	cmp    BYTE PTR [rcx],0xff
   14000aa5c:	jne    0x14000aa7d
   14000aa5e:	cmp    BYTE PTR [rcx+0x1],0x25
   14000aa62:	jne    0x14000aa7d
   14000aa64:	movsxd rsi,DWORD PTR [rcx+0x2]
   14000aa68:	lea    rdx,[rcx+0x6]
   14000aa6c:	add    rdx,rsi
   14000aa6f:	call   0x14000a5a0
   14000aa74:	test   al,al
   14000aa76:	je     0x14000aa7d
   14000aa78:	mov    rbx,QWORD PTR [rsi+rbx*1+0x6]
   14000aa7d:	cmp    BYTE PTR [rbx],0xeb
   14000aa80:	jne    0x14000aac7
   14000aa82:	movsx  rax,BYTE PTR [rbx+0x1]
   14000aa87:	add    rbx,0x2
   14000aa8b:	add    rbx,rax
   14000aa8e:	cmp    BYTE PTR [rbx],0xff
   14000aa91:	jne    0x14000aab7
   14000aa93:	cmp    BYTE PTR [rbx+0x1],0x25
   14000aa97:	jne    0x14000aab7
   14000aa99:	movsxd rsi,DWORD PTR [rbx+0x2]
   14000aa9d:	lea    rdx,[rbx+0x6]
   14000aaa1:	add    rdx,rsi
   14000aaa4:	mov    rcx,rbx
   14000aaa7:	call   0x14000a5a0
   14000aaac:	test   al,al
   14000aaae:	je     0x14000aac7
   14000aab0:	mov    rbx,QWORD PTR [rsi+rbx*1+0x6]
   14000aab5:	jmp    0x14000aac7
   14000aab7:	cmp    BYTE PTR [rbx],0xe9
   14000aaba:	jne    0x14000aac7
   14000aabc:	movsxd rax,DWORD PTR [rbx+0x1]
   14000aac0:	add    rbx,0x5
   14000aac4:	add    rbx,rax
   14000aac7:	mov    rdi,rbx
   14000aaca:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aacf:	mov    rax,rdi
   14000aad2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000aad7:	add    rsp,0x20
   14000aadb:	pop    rdi
   14000aadc:	ret    
   14000aadd:	int3   
   14000aade:	int3   
   14000aadf:	int3   
   14000aae0:	int3   
   14000aae1:	int3   
   14000aae2:	int3   
   14000aae3:	int3   
   14000aae4:	rex push rbx
   14000aae6:	sub    rsp,0x20
   14000aaea:	cmp    DWORD PTR [rip+0x9c67],0x0        # 0x140014758
   14000aaf1:	je     0x14000aafa
   14000aaf3:	mov    eax,0x10dd
   14000aaf8:	jmp    0x14000ab62
   14000aafa:	call   QWORD PTR [rip+0x3838]        # 0x14000e338
   14000ab00:	mov    ecx,eax
   14000ab02:	xor    eax,eax
   14000ab04:	lock cmpxchg DWORD PTR [rip+0x9c4c],ecx        # 0x140014758
   14000ab0c:	jne    0x14000aaf3
   14000ab0e:	and    QWORD PTR [rip+0x9c32],0x0        # 0x140014748
   14000ab16:	and    QWORD PTR [rip+0x9c0a],0x0        # 0x140014728
   14000ab1e:	and    QWORD PTR [rip+0x9c1a],0x0        # 0x140014740
   14000ab26:	and    DWORD PTR [rip+0x9c2f],0x0        # 0x14001475c
   14000ab2d:	and    QWORD PTR [rip+0x9beb],0x0        # 0x140014720
   14000ab35:	mov    rbx,QWORD PTR [rip+0x9c14]        # 0x140014750
   14000ab3c:	jmp    0x14000ab5b
   14000ab3e:	lea    r9,[rsp+0x30]
   14000ab43:	mov    edx,0x10000
   14000ab48:	mov    r8d,0x40
   14000ab4e:	mov    rcx,rbx
   14000ab51:	call   QWORD PTR [rip+0x3741]        # 0x14000e298
   14000ab57:	mov    rbx,QWORD PTR [rbx+0x8]
   14000ab5b:	test   rbx,rbx
   14000ab5e:	jne    0x14000ab3e
   14000ab60:	xor    eax,eax
   14000ab62:	add    rsp,0x20
   14000ab66:	pop    rbx
   14000ab67:	ret    
   14000ab68:	int3   
   14000ab69:	int3   
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	mov    QWORD PTR [rsp+0x10],rbx
   14000ab75:	mov    QWORD PTR [rsp+0x18],rsi
   14000ab7a:	push   rdi
   14000ab7b:	sub    rsp,0x20
   14000ab7f:	call   QWORD PTR [rip+0x37b3]        # 0x14000e338
   14000ab85:	cmp    DWORD PTR [rip+0x9bcd],eax        # 0x140014758
   14000ab8b:	je     0x14000ab97
   14000ab8d:	mov    eax,0x10dd
   14000ab92:	jmp    0x14000ac87
   14000ab97:	mov    rbx,QWORD PTR [rip+0x9ba2]        # 0x140014740
   14000ab9e:	jmp    0x14000abad
   14000aba0:	mov    rcx,QWORD PTR [rbx+0x8]
   14000aba4:	call   QWORD PTR [rip+0x36de]        # 0x14000e288
   14000abaa:	mov    rbx,QWORD PTR [rbx]
   14000abad:	test   rbx,rbx
   14000abb0:	jne    0x14000aba0
   14000abb2:	mov    rdi,QWORD PTR [rip+0x9b6f]        # 0x140014728
   14000abb9:	test   rdi,rdi
   14000abbc:	je     0x14000abef
   14000abbe:	mov    rcx,QWORD PTR [rdi+0x8]
   14000abc2:	call   QWORD PTR [rip+0x36c0]        # 0x14000e288
   14000abc8:	mov    rdi,QWORD PTR [rdi]
   14000abcb:	test   rdi,rdi
   14000abce:	jne    0x14000abbe
   14000abd0:	mov    rdi,QWORD PTR [rip+0x9b51]        # 0x140014728
   14000abd7:	test   rdi,rdi
   14000abda:	je     0x14000abef
   14000abdc:	mov    rbx,QWORD PTR [rdi]
   14000abdf:	mov    rcx,rdi
   14000abe2:	call   0x14000116c
   14000abe7:	mov    rdi,rbx
   14000abea:	test   rbx,rbx
   14000abed:	jne    0x14000abdc
   14000abef:	and    QWORD PTR [rip+0x9b31],0x0        # 0x140014728
   14000abf7:	and    QWORD PTR [rip+0x9b41],0x0        # 0x140014740
   14000abff:	mov    rdi,QWORD PTR [rip+0x9b42]        # 0x140014748
   14000ac06:	test   rdi,rdi
   14000ac09:	je     0x14000ac71
   14000ac0b:	mov    rax,QWORD PTR [rdi+0x20]
   14000ac0f:	lea    r9,[rsp+0x30]
   14000ac14:	mov    r8d,DWORD PTR [rdi+0x28]
   14000ac18:	mov    rcx,QWORD PTR [rdi+0x18]
   14000ac1c:	movzx  edx,BYTE PTR [rax+0x3e]
   14000ac20:	call   QWORD PTR [rip+0x3672]        # 0x14000e298
   14000ac26:	cmp    DWORD PTR [rdi+0x8],0x0
   14000ac2a:	jne    0x14000ac5e
   14000ac2c:	mov    rsi,QWORD PTR [rdi+0x20]
   14000ac30:	test   rsi,rsi
   14000ac33:	je     0x14000ac5e
   14000ac35:	xor    edx,edx
   14000ac37:	mov    rbx,rsi
   14000ac3a:	mov    rcx,rsi
   14000ac3d:	and    rbx,0xffffffffffff0000
   14000ac44:	lea    r8d,[rdx+0x60]
   14000ac48:	call   0x14000d326
   14000ac4d:	mov    rax,QWORD PTR [rbx+0x10]
   14000ac51:	mov    QWORD PTR [rsi+0x48],rax
   14000ac55:	mov    QWORD PTR [rbx+0x10],rsi
   14000ac59:	and    QWORD PTR [rdi+0x20],0x0
   14000ac5e:	mov    rbx,QWORD PTR [rdi]
   14000ac61:	mov    rcx,rdi
   14000ac64:	call   0x14000116c
   14000ac69:	mov    rdi,rbx
   14000ac6c:	test   rbx,rbx
   14000ac6f:	jne    0x14000ac0b
   14000ac71:	and    QWORD PTR [rip+0x9acf],0x0        # 0x140014748
   14000ac79:	call   0x14000a618
   14000ac7e:	and    DWORD PTR [rip+0x9ad3],0x0        # 0x140014758
   14000ac85:	xor    eax,eax
   14000ac87:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ac8c:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ac91:	add    rsp,0x20
   14000ac95:	pop    rdi
   14000ac96:	ret    
   14000ac97:	int3   
   14000ac98:	int3   
   14000ac99:	int3   
   14000ac9a:	int3   
   14000ac9b:	int3   
   14000ac9c:	int3   
   14000ac9d:	int3   
   14000ac9e:	int3   
   14000ac9f:	int3   
   14000aca0:	mov    QWORD PTR [rsp+0x10],rbx
   14000aca5:	push   rdi
   14000aca6:	sub    rsp,0x500
   14000acad:	mov    rax,QWORD PTR [rip+0x9354]        # 0x140014008
   14000acb4:	xor    rax,rsp
   14000acb7:	mov    QWORD PTR [rsp+0x4f0],rax
   14000acbf:	lea    rdx,[rsp+0x20]
   14000acc4:	mov    DWORD PTR [rsp+0x50],0x100001
   14000accc:	mov    rdi,rcx
   14000accf:	call   QWORD PTR [rip+0x35eb]        # 0x14000e2c0
   14000acd5:	test   eax,eax
   14000acd7:	je     0x14000add0
   14000acdd:	mov    rbx,QWORD PTR [rip+0x9a64]        # 0x140014748
   14000ace4:	test   rbx,rbx
   14000ace7:	je     0x14000add0
   14000aced:	mov    rcx,QWORD PTR [rsp+0x118]
   14000acf5:	cmp    DWORD PTR [rbx+0x8],0x0
   14000acf9:	je     0x14000ad53
   14000acfb:	mov    rdx,QWORD PTR [rbx+0x20]
   14000acff:	cmp    rcx,rdx
   14000ad02:	jb     0x14000adc4
   14000ad08:	lea    rax,[rdx+0x8]
   14000ad0c:	cmp    rcx,rax
   14000ad0f:	jae    0x14000adc4
   14000ad15:	mov    r9b,BYTE PTR [rsp+0x118]
   14000ad1d:	xor    r8d,r8d
   14000ad20:	xor    ecx,ecx
   14000ad22:	sub    r9b,dl
   14000ad25:	mov    al,BYTE PTR [rdx+rcx*1+0x40]
   14000ad29:	shr    al,0x3
   14000ad2c:	cmp    al,r9b
   14000ad2f:	je     0x14000ad44
   14000ad31:	inc    r8d
   14000ad34:	inc    rcx
   14000ad37:	movsxd rax,r8d
   14000ad3a:	cmp    rax,0x8
   14000ad3e:	jb     0x14000ad25
   14000ad40:	xor    al,al
   14000ad42:	jmp    0x14000ad4a
   14000ad44:	mov    al,BYTE PTR [rcx+rdx*1+0x40]
   14000ad48:	and    al,0x7
   14000ad4a:	movzx  eax,al
   14000ad4d:	add    rax,QWORD PTR [rbx+0x18]
   14000ad51:	jmp    0x14000ada6
   14000ad53:	cmp    rcx,QWORD PTR [rbx+0x18]
   14000ad57:	jb     0x14000adc4
   14000ad59:	mov    rdx,QWORD PTR [rbx+0x20]
   14000ad5d:	movzx  eax,BYTE PTR [rdx+0x3e]
   14000ad61:	add    rax,QWORD PTR [rbx+0x18]
   14000ad65:	cmp    rcx,rax
   14000ad68:	jae    0x14000adc4
   14000ad6a:	mov    r9b,BYTE PTR [rsp+0x118]
   14000ad72:	xor    r8d,r8d
   14000ad75:	xor    ecx,ecx
   14000ad77:	sub    r9b,BYTE PTR [rbx+0x18]
   14000ad7b:	mov    al,BYTE PTR [rdx+rcx*1+0x40]
   14000ad7f:	and    al,0x7
   14000ad81:	cmp    al,r9b
   14000ad84:	je     0x14000ad99
   14000ad86:	inc    r8d
   14000ad89:	inc    rcx
   14000ad8c:	movsxd rax,r8d
   14000ad8f:	cmp    rax,0x8
   14000ad93:	jb     0x14000ad7b
   14000ad95:	xor    eax,eax
   14000ad97:	jmp    0x14000ada1
   14000ad99:	movzx  eax,BYTE PTR [rcx+rdx*1+0x40]
   14000ad9e:	shr    eax,0x3
   14000ada1:	cdqe   
   14000ada3:	add    rax,rdx
   14000ada6:	lea    rdx,[rsp+0x20]
   14000adab:	mov    QWORD PTR [rsp+0x118],rax
   14000adb3:	mov    rcx,rdi
   14000adb6:	call   QWORD PTR [rip+0x34fc]        # 0x14000e2b8
   14000adbc:	mov    rcx,QWORD PTR [rsp+0x118]
   14000adc4:	mov    rbx,QWORD PTR [rbx]
   14000adc7:	test   rbx,rbx
   14000adca:	jne    0x14000acf5
   14000add0:	mov    rcx,QWORD PTR [rsp+0x4f0]
   14000add8:	xor    rcx,rsp
   14000addb:	call   0x14000cc40
   14000ade0:	mov    rbx,QWORD PTR [rsp+0x518]
   14000ade8:	add    rsp,0x500
   14000adef:	pop    rdi
   14000adf0:	ret    
   14000adf1:	int3   
   14000adf2:	int3   
   14000adf3:	int3   
   14000adf4:	int3   
   14000adf5:	int3   
   14000adf6:	int3   
   14000adf7:	int3   
   14000adf8:	mov    QWORD PTR [rsp+0x10],rbx
   14000adfd:	mov    QWORD PTR [rsp+0x18],rbp
   14000ae02:	mov    QWORD PTR [rsp+0x8],rcx
   14000ae07:	push   rsi
   14000ae08:	push   rdi
   14000ae09:	push   r14
   14000ae0b:	sub    rsp,0x20
   14000ae0f:	call   QWORD PTR [rip+0x3523]        # 0x14000e338
   14000ae15:	cmp    DWORD PTR [rip+0x993d],eax        # 0x140014758
   14000ae1b:	je     0x14000ae27
   14000ae1d:	mov    eax,0x10dd
   14000ae22:	jmp    0x14000b0c3
   14000ae27:	xor    r14d,r14d
   14000ae2a:	cmp    DWORD PTR [rip+0x992b],r14d        # 0x14001475c
   14000ae31:	je     0x14000ae3d
   14000ae33:	call   0x14000ab70
   14000ae38:	jmp    0x14000b0bd
   14000ae3d:	mov    rbx,QWORD PTR [rip+0x9904]        # 0x140014748
   14000ae44:	mov    ebp,r14d
   14000ae47:	jmp    0x14000aee4
   14000ae4c:	cmp    DWORD PTR [rbx+0x8],r14d
   14000ae50:	je     0x14000ae6e
   14000ae52:	mov    rdx,QWORD PTR [rbx+0x20]
   14000ae56:	mov    rcx,QWORD PTR [rbx+0x18]
   14000ae5a:	movzx  r8d,BYTE PTR [rdx+0x3e]
   14000ae5f:	add    rdx,0x20
   14000ae63:	call   0x14000d31a
   14000ae68:	mov    rax,QWORD PTR [rbx+0x18]
   14000ae6c:	jmp    0x14000aeda
   14000ae6e:	mov    rax,QWORD PTR [rbx+0x20]
   14000ae72:	lea    rcx,[rax+0x58]
   14000ae76:	mov    WORD PTR [rcx],0x25ff
   14000ae7b:	lea    rdx,[rax+0x50]
   14000ae7f:	lea    rax,[rcx+0x6]
   14000ae83:	sub    edx,eax
   14000ae85:	mov    DWORD PTR [rcx+0x2],edx
   14000ae88:	mov    rdx,QWORD PTR [rbx+0x18]
   14000ae8c:	mov    rcx,QWORD PTR [rbx+0x20]
   14000ae90:	add    rcx,0x58
   14000ae94:	mov    BYTE PTR [rdx],0xe9
   14000ae97:	lea    rax,[rdx+0x5]
   14000ae9b:	sub    ecx,eax
   14000ae9d:	inc    rdx
   14000aea0:	mov    DWORD PTR [rdx],ecx
   14000aea2:	lea    rcx,[rdx+0x4]
   14000aea6:	mov    rax,QWORD PTR [rbx+0x20]
   14000aeaa:	mov    r8,QWORD PTR [rax+0x48]
   14000aeae:	sub    r8,rcx
   14000aeb1:	cmp    rcx,QWORD PTR [rax+0x48]
   14000aeb5:	cmova  r8,r14
   14000aeb9:	test   r8,r8
   14000aebc:	je     0x14000aed6
   14000aebe:	mov    rax,rcx
   14000aec1:	sub    rax,rdx
   14000aec4:	sub    rax,0x4
   14000aec8:	mov    BYTE PTR [rcx],0xcc
   14000aecb:	inc    rax
   14000aece:	inc    rcx
   14000aed1:	cmp    rax,r8
   14000aed4:	jb     0x14000aec8
   14000aed6:	mov    rax,QWORD PTR [rbx+0x20]
   14000aeda:	mov    rcx,QWORD PTR [rbx+0x10]
   14000aede:	mov    QWORD PTR [rcx],rax
   14000aee1:	mov    rbx,QWORD PTR [rbx]
   14000aee4:	test   rbx,rbx
   14000aee7:	jne    0x14000ae4c
   14000aeed:	mov    rbx,QWORD PTR [rip+0x984c]        # 0x140014740
   14000aef4:	jmp    0x14000af02
   14000aef6:	mov    rcx,QWORD PTR [rbx+0x8]
   14000aefa:	call   0x14000aca0
   14000aeff:	mov    rbx,QWORD PTR [rbx]
   14000af02:	test   rbx,rbx
   14000af05:	jne    0x14000aef6
   14000af07:	mov    rbx,QWORD PTR [rip+0x981a]        # 0x140014728
   14000af0e:	jmp    0x14000af1c
   14000af10:	mov    rcx,QWORD PTR [rbx+0x8]
   14000af14:	call   0x14000aca0
   14000af19:	mov    rbx,QWORD PTR [rbx]
   14000af1c:	test   rbx,rbx
   14000af1f:	jne    0x14000af10
   14000af21:	call   QWORD PTR [rip+0x34b9]        # 0x14000e3e0
   14000af27:	mov    rdi,QWORD PTR [rip+0x981a]        # 0x140014748
   14000af2e:	mov    rbx,rax
   14000af31:	jmp    0x14000af4c
   14000af33:	mov    rcx,QWORD PTR [rdi+0x20]
   14000af37:	mov    rdx,QWORD PTR [rdi+0x18]
   14000af3b:	movzx  r8d,BYTE PTR [rcx+0x3e]
   14000af40:	mov    rcx,rbx
   14000af43:	call   QWORD PTR [rip+0x3357]        # 0x14000e2a0
   14000af49:	mov    rdi,QWORD PTR [rdi]
   14000af4c:	test   rdi,rdi
   14000af4f:	jne    0x14000af33
   14000af51:	mov    rbx,QWORD PTR [rip+0x97e8]        # 0x140014740
   14000af58:	jmp    0x14000af67
   14000af5a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000af5e:	call   QWORD PTR [rip+0x3324]        # 0x14000e288
   14000af64:	mov    rbx,QWORD PTR [rbx]
   14000af67:	test   rbx,rbx
   14000af6a:	jne    0x14000af5a
   14000af6c:	mov    rdi,QWORD PTR [rip+0x97b5]        # 0x140014728
   14000af73:	test   rdi,rdi
   14000af76:	je     0x14000afa9
   14000af78:	mov    rcx,QWORD PTR [rdi+0x8]
   14000af7c:	call   QWORD PTR [rip+0x3306]        # 0x14000e288
   14000af82:	mov    rdi,QWORD PTR [rdi]
   14000af85:	test   rdi,rdi
   14000af88:	jne    0x14000af78
   14000af8a:	mov    rdi,QWORD PTR [rip+0x9797]        # 0x140014728
   14000af91:	test   rdi,rdi
   14000af94:	je     0x14000afa9
   14000af96:	mov    rbx,QWORD PTR [rdi]
   14000af99:	mov    rcx,rdi
   14000af9c:	call   0x14000116c
   14000afa1:	mov    rdi,rbx
   14000afa4:	test   rbx,rbx
   14000afa7:	jne    0x14000af96
   14000afa9:	mov    rdi,QWORD PTR [rip+0x9798]        # 0x140014748
   14000afb0:	mov    QWORD PTR [rip+0x9771],r14        # 0x140014728
   14000afb7:	mov    QWORD PTR [rip+0x9782],r14        # 0x140014740
   14000afbe:	test   rdi,rdi
   14000afc1:	je     0x14000b02d
   14000afc3:	mov    rax,QWORD PTR [rdi+0x20]
   14000afc7:	lea    r9,[rsp+0x40]
   14000afcc:	mov    r8d,DWORD PTR [rdi+0x28]
   14000afd0:	mov    rcx,QWORD PTR [rdi+0x18]
   14000afd4:	movzx  edx,BYTE PTR [rax+0x3e]
   14000afd8:	call   QWORD PTR [rip+0x32ba]        # 0x14000e298
   14000afde:	cmp    DWORD PTR [rdi+0x8],r14d
   14000afe2:	je     0x14000b01a
   14000afe4:	mov    rsi,QWORD PTR [rdi+0x20]
   14000afe8:	test   rsi,rsi
   14000afeb:	je     0x14000b01a
   14000afed:	xor    edx,edx
   14000afef:	mov    rbx,rsi
   14000aff2:	and    rbx,0xffffffffffff0000
   14000aff9:	mov    rcx,rsi
   14000affc:	lea    r8d,[rdx+0x60]
   14000b000:	call   0x14000d326
   14000b005:	mov    rax,QWORD PTR [rbx+0x10]
   14000b009:	mov    ebp,0x1
   14000b00e:	mov    QWORD PTR [rsi+0x48],rax
   14000b012:	mov    QWORD PTR [rbx+0x10],rsi
   14000b016:	mov    QWORD PTR [rdi+0x20],r14
   14000b01a:	mov    rbx,QWORD PTR [rdi]
   14000b01d:	mov    rcx,rdi
   14000b020:	call   0x14000116c
   14000b025:	mov    rdi,rbx
   14000b028:	test   rbx,rbx
   14000b02b:	jne    0x14000afc3
   14000b02d:	mov    QWORD PTR [rip+0x9714],r14        # 0x140014748
   14000b034:	test   ebp,ebp
   14000b036:	je     0x14000b0b1
   14000b038:	cmp    DWORD PTR [rip+0x96f9],r14d        # 0x140014738
   14000b03f:	jne    0x14000b0b1
   14000b041:	mov    rcx,QWORD PTR [rip+0x9708]        # 0x140014750
   14000b048:	lea    rbx,[rip+0x9701]        # 0x140014750
   14000b04f:	jmp    0x14000b0ac
   14000b051:	cmp    DWORD PTR [rcx],0x52727464
   14000b057:	jne    0x14000b0a5
   14000b059:	lea    r8,[rcx+0x10000]
   14000b060:	mov    edx,r14d
   14000b063:	lea    rax,[rcx+0xa8]
   14000b06a:	cmp    QWORD PTR [rax],r14
   14000b06d:	je     0x14000b079
   14000b06f:	cmp    QWORD PTR [rax],rcx
   14000b072:	jb     0x14000b0a5
   14000b074:	cmp    QWORD PTR [rax],r8
   14000b077:	jae    0x14000b0a5
   14000b079:	inc    edx
   14000b07b:	add    rax,0x60
   14000b07f:	cmp    edx,0x2a9
   14000b085:	jb     0x14000b06a
   14000b087:	mov    rax,QWORD PTR [rcx+0x8]
   14000b08b:	xor    edx,edx
   14000b08d:	mov    r8d,0x8000
   14000b093:	mov    QWORD PTR [rbx],rax
   14000b096:	call   QWORD PTR [rip+0x320c]        # 0x14000e2a8
   14000b09c:	mov    QWORD PTR [rip+0x968d],r14        # 0x140014730
   14000b0a3:	jmp    0x14000b0a9
   14000b0a5:	lea    rbx,[rcx+0x8]
   14000b0a9:	mov    rcx,QWORD PTR [rbx]
   14000b0ac:	test   rcx,rcx
   14000b0af:	jne    0x14000b051
   14000b0b1:	call   0x14000a618
   14000b0b6:	mov    DWORD PTR [rip+0x969b],r14d        # 0x140014758
   14000b0bd:	mov    eax,DWORD PTR [rip+0x9699]        # 0x14001475c
   14000b0c3:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b0c8:	mov    rbp,QWORD PTR [rsp+0x50]
   14000b0cd:	add    rsp,0x20
   14000b0d1:	pop    r14
   14000b0d3:	pop    rdi
   14000b0d4:	pop    rsi
   14000b0d5:	ret    
   14000b0d6:	int3   
   14000b0d7:	int3   
   14000b0d8:	int3   
   14000b0d9:	int3   
   14000b0da:	int3   
   14000b0db:	int3   
   14000b0dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0e1:	mov    QWORD PTR [rsp+0x18],rsi
   14000b0e6:	push   rdi
   14000b0e7:	sub    rsp,0x20
   14000b0eb:	mov    eax,DWORD PTR [rip+0x966b]        # 0x14001475c
   14000b0f1:	mov    rsi,rcx
   14000b0f4:	test   eax,eax
   14000b0f6:	jne    0x14000b172
   14000b0f8:	call   QWORD PTR [rip+0x3102]        # 0x14000e200
   14000b0fe:	cmp    rsi,rax
   14000b101:	je     0x14000b170
   14000b103:	lea    rdx,[rip+0x6348]        # 0x140011452
   14000b10a:	mov    ecx,0x10
   14000b10f:	call   0x14000d238
   14000b114:	mov    rdi,rax
   14000b117:	test   rax,rax
   14000b11a:	jne    0x14000b121
   14000b11c:	lea    ebx,[rax+0x8]
   14000b11f:	jmp    0x14000b149
   14000b121:	mov    rcx,rsi
   14000b124:	call   QWORD PTR [rip+0x3166]        # 0x14000e290
   14000b12a:	cmp    eax,0xffffffff
   14000b12d:	jne    0x14000b141
   14000b12f:	call   QWORD PTR [rip+0x31bb]        # 0x14000e2f0
   14000b135:	mov    rcx,rdi
   14000b138:	mov    ebx,eax
   14000b13a:	call   0x14000116c
   14000b13f:	jmp    0x14000b145
   14000b141:	mov    ebx,DWORD PTR [rsp+0x38]
   14000b145:	test   ebx,ebx
   14000b147:	je     0x14000b15b
   14000b149:	and    QWORD PTR [rip+0x95cf],0x0        # 0x140014720
   14000b151:	mov    eax,ebx
   14000b153:	mov    DWORD PTR [rip+0x9603],ebx        # 0x14001475c
   14000b159:	jmp    0x14000b172
   14000b15b:	mov    rax,QWORD PTR [rip+0x95c6]        # 0x140014728
   14000b162:	mov    QWORD PTR [rdi],rax
   14000b165:	mov    QWORD PTR [rdi+0x8],rsi
   14000b169:	mov    QWORD PTR [rip+0x95b8],rdi        # 0x140014728
   14000b170:	xor    eax,eax
   14000b172:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b177:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b17c:	add    rsp,0x20
   14000b180:	pop    rdi
   14000b181:	ret    
   14000b182:	int3   
   14000b183:	int3   
   14000b184:	int3   
   14000b185:	int3   
   14000b186:	int3   
   14000b187:	int3   
   14000b188:	mov    QWORD PTR [rsp+0x8],rbx
   14000b18d:	mov    QWORD PTR [rsp+0x20],r9
   14000b192:	mov    QWORD PTR [rsp+0x18],r8
   14000b197:	push   rbp
   14000b198:	push   rsi
   14000b199:	push   rdi
   14000b19a:	push   r12
   14000b19c:	push   r13
   14000b19e:	push   r14
   14000b1a0:	push   r15
   14000b1a2:	sub    rsp,0x30
   14000b1a6:	xor    r12d,r12d
   14000b1a9:	mov    rbp,rdx
   14000b1ac:	mov    r15,rcx
   14000b1af:	mov    edi,r12d
   14000b1b2:	test   rdx,rdx
   14000b1b5:	jne    0x14000b1bf
   14000b1b7:	lea    eax,[rdx+0x57]
   14000b1ba:	jmp    0x14000b48f
   14000b1bf:	call   QWORD PTR [rip+0x3173]        # 0x14000e338
   14000b1c5:	cmp    DWORD PTR [rip+0x958d],eax        # 0x140014758
   14000b1cb:	je     0x14000b1d7
   14000b1cd:	mov    eax,0x10dd
   14000b1d2:	jmp    0x14000b48f
   14000b1d7:	mov    eax,DWORD PTR [rip+0x957f]        # 0x14001475c
   14000b1dd:	test   eax,eax
   14000b1df:	jne    0x14000b48f
   14000b1e5:	test   r15,r15
   14000b1e8:	jne    0x14000b1f3
   14000b1ea:	lea    eax,[r15+0x6]
   14000b1ee:	jmp    0x14000b48f
   14000b1f3:	mov    rcx,QWORD PTR [r15]
   14000b1f6:	test   rcx,rcx
   14000b1f9:	jne    0x14000b212
   14000b1fb:	lea    edi,[rcx+0x6]
   14000b1fe:	mov    DWORD PTR [rip+0x9558],edi        # 0x14001475c
   14000b204:	mov    QWORD PTR [rip+0x9515],r15        # 0x140014720
   14000b20b:	mov    eax,edi
   14000b20d:	jmp    0x14000b48f
   14000b212:	mov    rsi,r12
   14000b215:	mov    r14,r12
   14000b218:	call   0x14000aa40
   14000b21d:	mov    rcx,rbp
   14000b220:	mov    rbx,rax
   14000b223:	call   0x14000aa40
   14000b228:	mov    r13,rax
   14000b22b:	cmp    rax,rbx
   14000b22e:	jne    0x14000b23e
   14000b230:	cmp    DWORD PTR [rip+0x9529],r12d        # 0x140014760
   14000b237:	jne    0x14000b204
   14000b239:	jmp    0x14000b41c
   14000b23e:	lea    rdx,[rip+0x620d]        # 0x140011452
   14000b245:	mov    ecx,0x30
   14000b24a:	call   0x14000d238
   14000b24f:	mov    r14,rax
   14000b252:	test   rax,rax
   14000b255:	jne    0x14000b261
   14000b257:	mov    edi,0x8
   14000b25c:	jmp    0x14000b41c
   14000b261:	mov    rcx,rbx
   14000b264:	call   0x14000a830
   14000b269:	mov    rsi,rax
   14000b26c:	test   rax,rax
   14000b26f:	je     0x14000b257
   14000b271:	xor    eax,eax
   14000b273:	lea    r12,[rsi+0x1e]
   14000b277:	mov    QWORD PTR [rsi+0x40],rax
   14000b27b:	mov    r8,rbx
   14000b27e:	mov    rdi,rsi
   14000b281:	and    DWORD PTR [rsp+0x88],0x0
   14000b289:	lea    rax,[rsp+0x88]
   14000b291:	mov    rcx,rdi
   14000b294:	mov    QWORD PTR [rsp+0x20],rax
   14000b299:	mov    rbp,r8
   14000b29c:	call   0x14000b5f8
   14000b2a1:	mov    r8,rax
   14000b2a4:	movsxd rax,DWORD PTR [rsp+0x88]
   14000b2ac:	sub    rax,rbp
   14000b2af:	mov    edx,r8d
   14000b2b2:	add    rax,r8
   14000b2b5:	sub    edx,ebx
   14000b2b7:	add    rdi,rax
   14000b2ba:	mov    al,dl
   14000b2bc:	and    al,0x7
   14000b2be:	mov    cl,dil
   14000b2c1:	sub    cl,sil
   14000b2c4:	shl    cl,0x3
   14000b2c7:	xor    cl,al
   14000b2c9:	mov    BYTE PTR [rsi+0x40],cl
   14000b2cc:	mov    al,BYTE PTR [rbp+0x0]
   14000b2cf:	add    al,0x3e
   14000b2d1:	cmp    al,0x29
   14000b2d3:	ja     0x14000b2e8
   14000b2d5:	movzx  eax,al
   14000b2d8:	movabs rcx,0x28040000403
   14000b2e2:	bt     rcx,rax
   14000b2e6:	jb     0x14000b359
   14000b2e8:	cmp    BYTE PTR [rbp+0x0],0xff
   14000b2ec:	jne    0x14000b2f4
   14000b2ee:	cmp    BYTE PTR [rbp+0x1],0x25
   14000b2f2:	je     0x14000b359
   14000b2f4:	mov    al,BYTE PTR [rbp+0x0]
   14000b2f7:	sub    al,0x26
   14000b2f9:	cmp    al,0x3f
   14000b2fb:	ja     0x14000b30d
   14000b2fd:	movabs rcx,0xc000000000010101
   14000b307:	bt     rcx,rax
   14000b30b:	jb     0x14000b313
   14000b30d:	cmp    BYTE PTR [rbp+0x0],0xe3
   14000b311:	jne    0x14000b31f
   14000b313:	cmp    BYTE PTR [rbp+0x1],0xff
   14000b317:	jne    0x14000b31f
   14000b319:	cmp    BYTE PTR [rbp+0x2],0x25
   14000b31d:	je     0x14000b359
   14000b31f:	cmp    edx,0x5
   14000b322:	jb     0x14000b281
   14000b328:	cmp    rdi,r12
   14000b32b:	jbe    0x14000b32e
   14000b32d:	int3   
   14000b32e:	sub    dil,sil
   14000b331:	mov    BYTE PTR [rsi+0x3e],dl
   14000b334:	mov    BYTE PTR [r12],dil
   14000b338:	lea    rcx,[rsi+0x20]
   14000b33c:	mov    edi,edx
   14000b33e:	mov    r8d,edx
   14000b341:	mov    rdx,rbx
   14000b344:	call   0x14000d31a
   14000b349:	cmp    rdi,0x19
   14000b34d:	jbe    0x14000b390
   14000b34f:	mov    edi,0x6
   14000b354:	jmp    0x14000b41c
   14000b359:	cmp    edx,0x5
   14000b35c:	jae    0x14000b328
   14000b35e:	cmp    BYTE PTR [r8],0x90
   14000b362:	jne    0x14000b371
   14000b364:	inc    r8
   14000b367:	mov    edx,r8d
   14000b36a:	sub    edx,ebx
   14000b36c:	cmp    edx,0x5
   14000b36f:	jb     0x14000b35e
   14000b371:	cmp    edx,0x5
   14000b374:	jae    0x14000b328
   14000b376:	xor    r12d,r12d
   14000b379:	mov    edi,0x9
   14000b37e:	cmp    DWORD PTR [rip+0x93db],r12d        # 0x140014760
   14000b385:	jne    0x14000b422
   14000b38b:	jmp    0x14000b41c
   14000b390:	movzx  edx,BYTE PTR [r12]
   14000b395:	lea    rax,[rdi+rbx*1]
   14000b399:	add    rdx,rsi
   14000b39c:	mov    QWORD PTR [rsi+0x48],rax
   14000b3a0:	mov    QWORD PTR [rsi+0x50],r13
   14000b3a4:	mov    r8,r12
   14000b3a7:	mov    eax,esi
   14000b3a9:	lea    rcx,[rdx+0x6]
   14000b3ad:	mov    WORD PTR [rdx],0x25ff
   14000b3b2:	add    rdx,0x2
   14000b3b6:	sub    eax,ecx
   14000b3b8:	add    eax,0x48
   14000b3bb:	lea    rcx,[rdx+0x4]
   14000b3bf:	mov    DWORD PTR [rdx],eax
   14000b3c1:	sub    r8,rcx
   14000b3c4:	cmp    rcx,r12
   14000b3c7:	mov    r12d,0x0
   14000b3cd:	cmova  r8,r12
   14000b3d1:	test   r8,r8
   14000b3d4:	je     0x14000b3ee
   14000b3d6:	mov    rax,rcx
   14000b3d9:	sub    rax,rdx
   14000b3dc:	sub    rax,0x4
   14000b3e0:	mov    BYTE PTR [rcx],0xcc
   14000b3e3:	inc    rax
   14000b3e6:	inc    rcx
   14000b3e9:	cmp    rax,r8
   14000b3ec:	jb     0x14000b3e0
   14000b3ee:	lea    r9,[rsp+0x80]
   14000b3f6:	mov    DWORD PTR [rsp+0x80],r12d
   14000b3fe:	mov    r8d,0x40
   14000b404:	mov    rdx,rdi
   14000b407:	mov    rcx,rbx
   14000b40a:	call   QWORD PTR [rip+0x2e88]        # 0x14000e298
   14000b410:	test   eax,eax
   14000b412:	jne    0x14000b461
   14000b414:	call   QWORD PTR [rip+0x2ed6]        # 0x14000e2f0
   14000b41a:	mov    edi,eax
   14000b41c:	mov    DWORD PTR [rip+0x933a],edi        # 0x14001475c
   14000b422:	test   rsi,rsi
   14000b425:	je     0x14000b44b
   14000b427:	xor    edx,edx
   14000b429:	mov    rbx,rsi
   14000b42c:	and    rbx,0xffffffffffff0000
   14000b433:	mov    rcx,rsi
   14000b436:	lea    r8d,[rdx+0x60]
   14000b43a:	call   0x14000d326
   14000b43f:	mov    rax,QWORD PTR [rbx+0x10]
   14000b443:	mov    QWORD PTR [rsi+0x48],rax
   14000b447:	mov    QWORD PTR [rbx+0x10],rsi
   14000b44b:	test   r14,r14
   14000b44e:	je     0x14000b204
   14000b454:	mov    rcx,r14
   14000b457:	call   0x14000116c
   14000b45c:	jmp    0x14000b204
   14000b461:	mov    DWORD PTR [r14+0x8],r12d
   14000b465:	mov    QWORD PTR [r14+0x10],r15
   14000b469:	mov    QWORD PTR [r14+0x20],rsi
   14000b46d:	mov    QWORD PTR [r14+0x18],rbx
   14000b471:	mov    eax,DWORD PTR [rsp+0x80]
   14000b478:	mov    DWORD PTR [r14+0x28],eax
   14000b47c:	mov    rax,QWORD PTR [rip+0x92c5]        # 0x140014748
   14000b483:	mov    QWORD PTR [r14],rax
   14000b486:	xor    eax,eax
   14000b488:	mov    QWORD PTR [rip+0x92b9],r14        # 0x140014748
   14000b48f:	mov    rbx,QWORD PTR [rsp+0x70]
   14000b494:	add    rsp,0x30
   14000b498:	pop    r15
   14000b49a:	pop    r14
   14000b49c:	pop    r13
   14000b49e:	pop    r12
   14000b4a0:	pop    rdi
   14000b4a1:	pop    rsi
   14000b4a2:	pop    rbp
   14000b4a3:	ret    
   14000b4a4:	int3   
   14000b4a5:	int3   
   14000b4a6:	int3   
   14000b4a7:	int3   
   14000b4a8:	int3   
   14000b4a9:	int3   
   14000b4aa:	int3   
   14000b4ab:	int3   
   14000b4ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000b4b1:	mov    QWORD PTR [rsp+0x10],rbp
   14000b4b6:	mov    QWORD PTR [rsp+0x20],rsi
   14000b4bb:	push   rdi
   14000b4bc:	sub    rsp,0x20
   14000b4c0:	mov    eax,DWORD PTR [rip+0x9296]        # 0x14001475c
   14000b4c6:	mov    rbp,rdx
   14000b4c9:	mov    rsi,rcx
   14000b4cc:	test   eax,eax
   14000b4ce:	jne    0x14000b5dc
   14000b4d4:	test   rdx,rdx
   14000b4d7:	jne    0x14000b4e1
   14000b4d9:	lea    eax,[rdx+0x57]
   14000b4dc:	jmp    0x14000b5dc
   14000b4e1:	test   rcx,rcx
   14000b4e4:	jne    0x14000b4ee
   14000b4e6:	lea    eax,[rcx+0x6]
   14000b4e9:	jmp    0x14000b5dc
   14000b4ee:	cmp    QWORD PTR [rcx],0x0
   14000b4f2:	jne    0x14000b50b
   14000b4f4:	mov    eax,0x6
   14000b4f9:	mov    QWORD PTR [rip+0x9220],rcx        # 0x140014720
   14000b500:	mov    DWORD PTR [rip+0x9256],eax        # 0x14001475c
   14000b506:	jmp    0x14000b5dc
   14000b50b:	lea    rdx,[rip+0x5f40]        # 0x140011452
   14000b512:	mov    ecx,0x30
   14000b517:	call   0x14000d238
   14000b51c:	mov    rbx,rax
   14000b51f:	test   rax,rax
   14000b522:	jne    0x14000b52c
   14000b524:	lea    edi,[rax+0x8]
   14000b527:	jmp    0x14000b5c0
   14000b52c:	mov    rcx,QWORD PTR [rsi]
   14000b52f:	call   0x14000aa40
   14000b534:	mov    rcx,rbp
   14000b537:	mov    rdi,rax
   14000b53a:	call   0x14000aa40
   14000b53f:	movzx  ecx,BYTE PTR [rdi+0x3e]
   14000b543:	mov    rbp,QWORD PTR [rdi+0x48]
   14000b547:	mov    edx,ecx
   14000b549:	sub    rbp,rcx
   14000b54c:	test   ecx,ecx
   14000b54e:	je     0x14000b5b2
   14000b550:	cmp    rcx,0x1e
   14000b554:	ja     0x14000b5b2
   14000b556:	cmp    QWORD PTR [rdi+0x50],rax
   14000b55a:	jne    0x14000b5b2
   14000b55c:	and    DWORD PTR [rsp+0x40],0x0
   14000b561:	lea    r9,[rsp+0x40]
   14000b566:	mov    r8d,0x40
   14000b56c:	mov    rcx,rbp
   14000b56f:	call   QWORD PTR [rip+0x2d23]        # 0x14000e298
   14000b575:	test   eax,eax
   14000b577:	jne    0x14000b583
   14000b579:	call   QWORD PTR [rip+0x2d71]        # 0x14000e2f0
   14000b57f:	mov    edi,eax
   14000b581:	jmp    0x14000b5c0
   14000b583:	mov    DWORD PTR [rbx+0x8],0x1
   14000b58a:	mov    QWORD PTR [rbx+0x10],rsi
   14000b58e:	mov    QWORD PTR [rbx+0x20],rdi
   14000b592:	mov    QWORD PTR [rbx+0x18],rbp
   14000b596:	mov    eax,DWORD PTR [rsp+0x40]
   14000b59a:	mov    DWORD PTR [rbx+0x28],eax
   14000b59d:	mov    rax,QWORD PTR [rip+0x91a4]        # 0x140014748
   14000b5a4:	mov    QWORD PTR [rbx],rax
   14000b5a7:	xor    eax,eax
   14000b5a9:	mov    QWORD PTR [rip+0x9198],rbx        # 0x140014748
   14000b5b0:	jmp    0x14000b5dc
   14000b5b2:	cmp    DWORD PTR [rip+0x91a7],0x0        # 0x140014760
   14000b5b9:	mov    edi,0x9
   14000b5be:	jne    0x14000b5c6
   14000b5c0:	mov    DWORD PTR [rip+0x9196],edi        # 0x14001475c
   14000b5c6:	test   rbx,rbx
   14000b5c9:	je     0x14000b5d3
   14000b5cb:	mov    rcx,rbx
   14000b5ce:	call   0x14000116c
   14000b5d3:	mov    QWORD PTR [rip+0x9146],rsi        # 0x140014720
   14000b5da:	mov    eax,edi
   14000b5dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b5e1:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b5e6:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b5eb:	add    rsp,0x20
   14000b5ef:	pop    rdi
   14000b5f0:	ret    
   14000b5f1:	int3   
   14000b5f2:	int3   
   14000b5f3:	int3   
   14000b5f4:	int3   
   14000b5f5:	int3   
   14000b5f6:	int3   
   14000b5f7:	int3   
   14000b5f8:	mov    r11,rsp
   14000b5fb:	mov    QWORD PTR [r11+0x10],rbx
   14000b5ff:	push   rbp
   14000b600:	push   rsi
   14000b601:	push   rdi
   14000b602:	sub    rsp,0xa0
   14000b609:	mov    rax,QWORD PTR [rip+0x89f8]        # 0x140014008
   14000b610:	xor    rax,rsp
   14000b613:	mov    QWORD PTR [rsp+0x90],rax
   14000b61b:	xor    ebx,ebx
   14000b61d:	lea    rax,[r11-0x70]
   14000b621:	cmp    QWORD PTR [rsp+0xe0],rbx
   14000b629:	lea    rbp,[r11-0x68]
   14000b62d:	mov    QWORD PTR [rsp+0x30],rax
   14000b632:	mov    rsi,r8
   14000b635:	mov    QWORD PTR [rsp+0x20],rbx
   14000b63a:	lea    rax,[r11-0x78]
   14000b63e:	cmovne rax,QWORD PTR [rsp+0xe0]
   14000b647:	test   rcx,rcx
   14000b64a:	mov    DWORD PTR [rsp+0x28],ebx
   14000b64e:	cmovne rbp,rcx
   14000b652:	mov    QWORD PTR [r11-0x80],rax
   14000b656:	mov    QWORD PTR [r11-0x70],rbx
   14000b65a:	mov    DWORD PTR [rax],ebx
   14000b65c:	test   r8,r8
   14000b65f:	jne    0x14000b66c
   14000b661:	lea    ecx,[rbx+0xd]
   14000b664:	call   QWORD PTR [rip+0x2b2e]        # 0x14000e198
   14000b66a:	jmp    0x14000b69e
   14000b66c:	movzx  edi,BYTE PTR [r8]
   14000b670:	lea    rax,[rip+0x4439]        # 0x14000fab0
   14000b677:	shl    rdi,0x4
   14000b67b:	add    rdi,rax
   14000b67e:	mov    rbx,QWORD PTR [rdi+0x8]
   14000b682:	mov    rcx,rbx
   14000b685:	call   QWORD PTR [rip+0x303d]        # 0x14000e6c8
   14000b68b:	mov    r9,rsi
   14000b68e:	lea    rcx,[rsp+0x20]
   14000b693:	mov    r8,rbp
   14000b696:	mov    rdx,rdi
   14000b699:	call   rbx
   14000b69b:	mov    rbx,rax
   14000b69e:	mov    rax,rbx
   14000b6a1:	mov    rcx,QWORD PTR [rsp+0x90]
   14000b6a9:	xor    rcx,rsp
   14000b6ac:	call   0x14000cc40
   14000b6b1:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000b6b9:	add    rsp,0xa0
   14000b6c0:	pop    rdi
   14000b6c1:	pop    rsi
   14000b6c2:	pop    rbp
   14000b6c3:	ret    
   14000b6c4:	int3   
   14000b6c5:	int3   
   14000b6c6:	int3   
   14000b6c7:	int3   
   14000b6c8:	int3   
   14000b6c9:	int3   
   14000b6ca:	int3   
   14000b6cb:	int3   
   14000b6cc:	int3   
   14000b6cd:	int3   
   14000b6ce:	int3   
   14000b6cf:	int3   
   14000b6d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b6d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000b6da:	mov    QWORD PTR [rsp+0x18],rsi
   14000b6df:	push   rdi
   14000b6e0:	push   r12
   14000b6e2:	push   r13
   14000b6e4:	push   r14
   14000b6e6:	push   r15
   14000b6e8:	sub    rsp,0x30
   14000b6ec:	mov    r10d,DWORD PTR [rdx]
   14000b6ef:	mov    r14,r9
   14000b6f2:	mov    eax,r10d
   14000b6f5:	mov    r13,r8
   14000b6f8:	shr    eax,0x1c
   14000b6fb:	mov    r12,rdx
   14000b6fe:	mov    rsi,rcx
   14000b701:	mov    r11d,0x4
   14000b707:	test   al,0x2
   14000b709:	je     0x14000b71a
   14000b70b:	mov    eax,DWORD PTR [rcx+0x4]
   14000b70e:	neg    eax
   14000b710:	sbb    ebx,ebx
   14000b712:	and    ebx,0xfffffffc
   14000b715:	add    ebx,0x9
   14000b718:	jmp    0x14000b740
   14000b71a:	test   al,0x8
   14000b71c:	je     0x14000b72d
   14000b71e:	mov    eax,DWORD PTR [rcx+0x8]
   14000b721:	neg    eax
   14000b723:	sbb    ebx,ebx
   14000b725:	and    ebx,r11d
   14000b728:	add    ebx,0x5
   14000b72b:	jmp    0x14000b740
   14000b72d:	cmp    DWORD PTR [rcx],0x0
   14000b730:	mov    ebx,r10d
   14000b733:	je     0x14000b73a
   14000b735:	shr    ebx,0xc
   14000b738:	jmp    0x14000b73d
   14000b73a:	shr    ebx,0x8
   14000b73d:	and    ebx,0xf
   14000b740:	mov    edi,r10d
   14000b743:	mov    ebp,ebx
   14000b745:	shl    edi,0x8
   14000b748:	mov    ecx,r10d
   14000b74b:	sar    edi,0x1c
   14000b74e:	mov    edx,ebx
   14000b750:	sub    ebp,edi
   14000b752:	shr    ecx,0x10
   14000b755:	and    ecx,0xf
   14000b758:	jbe    0x14000b7ca
   14000b75a:	lea    rdx,[rip+0x5cff]        # 0x140011460
   14000b761:	mov    rax,r10
   14000b764:	shr    rax,0x10
   14000b768:	and    eax,0xf
   14000b76b:	movzx  r8d,BYTE PTR [rax+r9*1]
   14000b770:	movzx  r9d,BYTE PTR [r8+rdx*1]
   14000b775:	mov    edx,r9d
   14000b778:	and    edx,0xf
   14000b77b:	add    edx,ebx
   14000b77d:	test   r9b,0x10
   14000b781:	je     0x14000b7af
   14000b783:	lea    eax,[rcx+0x1]
   14000b786:	mov    al,BYTE PTR [rax+r14*1]
   14000b78a:	and    al,0x7
   14000b78c:	cmp    al,0x5
   14000b78e:	jne    0x14000b7a9
   14000b790:	and    r8b,0xc0
   14000b794:	je     0x14000b7a6
   14000b796:	cmp    r8b,0x40
   14000b79a:	jne    0x14000b7a0
   14000b79c:	inc    edx
   14000b79e:	jmp    0x14000b7a9
   14000b7a0:	cmp    r8b,0x80
   14000b7a4:	jne    0x14000b7a9
   14000b7a6:	add    edx,r11d
   14000b7a9:	mov    ebp,edx
   14000b7ab:	sub    ebp,edi
   14000b7ad:	jmp    0x14000b7ca
   14000b7af:	test   r9b,0x20
   14000b7b3:	je     0x14000b7ca
   14000b7b5:	shl    r10d,0x4
   14000b7b9:	mov    edi,edx
   14000b7bb:	sar    r10d,0x1c
   14000b7bf:	mov    ebx,edx
   14000b7c1:	sub    edi,r10d
   14000b7c4:	mov    ebp,r11d
   14000b7c7:	sub    edi,r11d
   14000b7ca:	movsxd r15,edx
   14000b7cd:	mov    rcx,r13
   14000b7d0:	mov    r8,r15
   14000b7d3:	mov    rdx,r14
   14000b7d6:	call   0x14000d31a
   14000b7db:	test   edi,edi
   14000b7dd:	je     0x14000b811
   14000b7df:	mov    DWORD PTR [rsp+0x28],ebp
   14000b7e3:	mov    r9d,ebx
   14000b7e6:	mov    r8,r14
   14000b7e9:	mov    DWORD PTR [rsp+0x20],edi
   14000b7ed:	mov    rdx,r13
   14000b7f0:	mov    rcx,rsi
   14000b7f3:	call   0x14000b9e0
   14000b7f8:	mov    rcx,QWORD PTR [rsi+0x10]
   14000b7fc:	mov    QWORD PTR [rcx],rax
   14000b7ff:	test   DWORD PTR [r12],0xf00000
   14000b807:	jne    0x14000b811
   14000b809:	mov    rax,QWORD PTR [rsi+0x10]
   14000b80d:	and    QWORD PTR [rax],0x0
   14000b811:	test   DWORD PTR [r12],0x40000000
   14000b819:	je     0x14000b825
   14000b81b:	mov    rcx,QWORD PTR [rsi+0x18]
   14000b81f:	mov    eax,DWORD PTR [rcx]
   14000b821:	neg    eax
   14000b823:	mov    DWORD PTR [rcx],eax
   14000b825:	test   DWORD PTR [r12],0x10000000
   14000b82d:	je     0x14000b837
   14000b82f:	mov    rax,QWORD PTR [rsi+0x10]
   14000b833:	or     QWORD PTR [rax],0xffffffffffffffff
   14000b837:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b83c:	lea    rax,[r15+r14*1]
   14000b840:	mov    rbp,QWORD PTR [rsp+0x68]
   14000b845:	mov    rsi,QWORD PTR [rsp+0x70]
   14000b84a:	add    rsp,0x30
   14000b84e:	pop    r15
   14000b850:	pop    r14
   14000b852:	pop    r13
   14000b854:	pop    r12
   14000b856:	pop    rdi
   14000b857:	ret    
   14000b858:	int3   
   14000b859:	int3   
   14000b85a:	int3   
   14000b85b:	int3   
   14000b85c:	int3   
   14000b85d:	int3   
   14000b85e:	int3   
   14000b85f:	int3   
   14000b860:	mov    rax,rsp
   14000b863:	mov    QWORD PTR [rax+0x8],rbx
   14000b867:	mov    QWORD PTR [rax+0x10],rbp
   14000b86b:	mov    QWORD PTR [rax+0x18],rsi
   14000b86f:	mov    QWORD PTR [rax+0x20],rdi
   14000b873:	push   r14
   14000b875:	sub    rsp,0x20
   14000b879:	mov    rsi,r9
   14000b87c:	lea    rbx,[r8+0x1]
   14000b880:	mov    r14,rcx
   14000b883:	call   0x14000b6d0
   14000b888:	movzx  ebp,BYTE PTR [rsi+0x1]
   14000b88c:	lea    rax,[rip+0x421d]        # 0x14000fab0
   14000b893:	shl    rbp,0x4
   14000b897:	add    rbp,rax
   14000b89a:	mov    rdi,QWORD PTR [rbp+0x8]
   14000b89e:	mov    rcx,rdi
   14000b8a1:	call   QWORD PTR [rip+0x2e21]        # 0x14000e6c8
   14000b8a7:	lea    r9,[rsi+0x1]
   14000b8ab:	mov    r8,rbx
   14000b8ae:	mov    rdx,rbp
   14000b8b1:	mov    rcx,r14
   14000b8b4:	mov    rax,rdi
   14000b8b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b8bc:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b8c1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b8c6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000b8cb:	add    rsp,0x20
   14000b8cf:	pop    r14
   14000b8d1:	rex.W jmp rax
   14000b8d4:	int3   
   14000b8d5:	int3   
   14000b8d6:	int3   
   14000b8d7:	int3   
   14000b8d8:	int3   
   14000b8d9:	int3   
   14000b8da:	int3   
   14000b8db:	int3   
   14000b8dc:	int3   
   14000b8dd:	int3   
   14000b8de:	int3   
   14000b8df:	int3   
   14000b8e0:	mov    rax,rsp
   14000b8e3:	mov    QWORD PTR [rax+0x8],rbx
   14000b8e7:	mov    QWORD PTR [rax+0x10],rbp
   14000b8eb:	mov    QWORD PTR [rax+0x18],rsi
   14000b8ef:	mov    QWORD PTR [rax+0x20],rdi
   14000b8f3:	push   r14
   14000b8f5:	sub    rsp,0x20
   14000b8f9:	mov    rsi,r9
   14000b8fc:	mov    rbx,r8
   14000b8ff:	mov    r14,rcx
   14000b902:	call   0x14000b6d0
   14000b907:	test   BYTE PTR [rsi],0x8
   14000b90a:	je     0x14000b914
   14000b90c:	mov    DWORD PTR [r14+0x8],0x1
   14000b914:	movzx  ebp,BYTE PTR [rsi+0x1]
   14000b918:	lea    rax,[rip+0x4191]        # 0x14000fab0
   14000b91f:	shl    rbp,0x4
   14000b923:	add    rbp,rax
   14000b926:	mov    rdi,QWORD PTR [rbp+0x8]
   14000b92a:	mov    rcx,rdi
   14000b92d:	call   QWORD PTR [rip+0x2d95]        # 0x14000e6c8
   14000b933:	lea    r9,[rsi+0x1]
   14000b937:	mov    rdx,rbp
   14000b93a:	lea    r8,[rbx+0x1]
   14000b93e:	mov    rcx,r14
   14000b941:	mov    rax,rdi
   14000b944:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b949:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b94e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b953:	mov    rdi,QWORD PTR [rsp+0x48]
   14000b958:	add    rsp,0x20
   14000b95c:	pop    r14
   14000b95e:	rex.W jmp rax
   14000b961:	int3   
   14000b962:	int3   
   14000b963:	int3   
   14000b964:	int3   
   14000b965:	int3   
   14000b966:	int3   
   14000b967:	int3   
   14000b968:	int3   
   14000b969:	int3   
   14000b96a:	int3   
   14000b96b:	int3   
   14000b96c:	int3   
   14000b96d:	int3   
   14000b96e:	int3   
   14000b96f:	int3   
   14000b970:	movsx  r10,BYTE PTR [r9+0x1]
   14000b975:	lea    rdx,[r9+0x2]
   14000b979:	mov    rax,QWORD PTR [rcx+0x10]
   14000b97d:	add    rdx,r10
   14000b980:	mov    QWORD PTR [rax],rdx
   14000b983:	cmp    BYTE PTR [r9],0xeb
   14000b987:	jne    0x14000b9a9
   14000b989:	mov    BYTE PTR [r8],0xe9
   14000b98d:	mov    eax,r9d
   14000b990:	sub    eax,r8d
   14000b993:	add    eax,0xfffffffd
   14000b996:	add    eax,r10d
   14000b999:	mov    DWORD PTR [r8+0x1],eax
   14000b99d:	mov    rax,QWORD PTR [rcx+0x18]
   14000b9a1:	mov    DWORD PTR [rax],0x3
   14000b9a7:	jmp    0x14000b9d2
   14000b9a9:	mov    BYTE PTR [r8],0xf
   14000b9ad:	mov    al,BYTE PTR [r9]
   14000b9b0:	and    al,0xf
   14000b9b2:	or     al,0x80
   14000b9b4:	mov    BYTE PTR [r8+0x1],al
   14000b9b8:	mov    eax,r9d
   14000b9bb:	sub    eax,r8d
   14000b9be:	add    eax,0xfffffffc
   14000b9c1:	add    eax,r10d
   14000b9c4:	mov    DWORD PTR [r8+0x2],eax
   14000b9c8:	mov    rax,QWORD PTR [rcx+0x18]
   14000b9cc:	mov    DWORD PTR [rax],0x4
   14000b9d2:	lea    rax,[r9+0x2]
   14000b9d6:	ret    
   14000b9d7:	int3   
   14000b9d8:	int3   
   14000b9d9:	int3   
   14000b9da:	int3   
   14000b9db:	int3   
   14000b9dc:	int3   
   14000b9dd:	int3   
   14000b9de:	int3   
   14000b9df:	int3   
   14000b9e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b9e5:	mov    QWORD PTR [rsp+0x10],rdi
   14000b9ea:	movsxd r10,DWORD PTR [rsp+0x28]
   14000b9ef:	mov    rbx,rcx
   14000b9f2:	mov    r11d,DWORD PTR [rsp+0x30]
   14000b9f7:	add    r10,rdx
   14000b9fa:	xor    ecx,ecx
   14000b9fc:	mov    eax,r11d
   14000b9ff:	mov    rdi,rdx
   14000ba02:	sub    eax,0x1
   14000ba05:	je     0x14000ba26
   14000ba07:	sub    eax,0x1
   14000ba0a:	je     0x14000ba20
   14000ba0c:	sub    eax,0x2
   14000ba0f:	je     0x14000ba1b
   14000ba11:	cmp    eax,0x4
   14000ba14:	jne    0x14000ba2a
   14000ba16:	mov    rcx,QWORD PTR [r10]
   14000ba19:	jmp    0x14000ba2a
   14000ba1b:	movsxd rcx,DWORD PTR [r10]
   14000ba1e:	jmp    0x14000ba2a
   14000ba20:	movsx  rcx,WORD PTR [r10]
   14000ba24:	jmp    0x14000ba2a
   14000ba26:	movsx  rcx,BYTE PTR [r10]
   14000ba2a:	movsxd rdx,r9d
   14000ba2d:	add    rdx,rcx
   14000ba30:	sub    rcx,rdi
   14000ba33:	add    rcx,r8
   14000ba36:	add    rdx,r8
   14000ba39:	sub    r11d,0x1
   14000ba3d:	je     0x14000ba93
   14000ba3f:	sub    r11d,0x1
   14000ba43:	je     0x14000ba74
   14000ba45:	sub    r11d,0x2
   14000ba49:	je     0x14000ba56
   14000ba4b:	cmp    r11d,0x4
   14000ba4f:	jne    0x14000baad
   14000ba51:	mov    QWORD PTR [r10],rcx
   14000ba54:	jmp    0x14000baad
   14000ba56:	mov    eax,0x80000000
   14000ba5b:	mov    DWORD PTR [r10],ecx
   14000ba5e:	add    rax,rcx
   14000ba61:	mov    ecx,0xffffffff
   14000ba66:	cmp    rax,rcx
   14000ba69:	jbe    0x14000baad
   14000ba6b:	mov    rax,QWORD PTR [rbx+0x18]
   14000ba6f:	and    DWORD PTR [rax],0x0
   14000ba72:	jmp    0x14000baad
   14000ba74:	lea    rax,[rcx+0x8000]
   14000ba7b:	mov    WORD PTR [r10],cx
   14000ba7f:	cmp    rax,0xffff
   14000ba85:	jbe    0x14000baad
   14000ba87:	mov    rax,QWORD PTR [rbx+0x18]
   14000ba8b:	mov    DWORD PTR [rax],0x2
   14000ba91:	jmp    0x14000baad
   14000ba93:	mov    BYTE PTR [r10],cl
   14000ba96:	sub    rcx,0xffffffffffffff80
   14000ba9a:	cmp    rcx,0xff
   14000baa1:	jbe    0x14000baad
   14000baa3:	mov    rcx,QWORD PTR [rbx+0x18]
   14000baa7:	mov    DWORD PTR [rcx],0x3
   14000baad:	mov    rbx,QWORD PTR [rsp+0x8]
   14000bab2:	mov    rax,rdx
   14000bab5:	mov    rdi,QWORD PTR [rsp+0x10]
   14000baba:	ret    
   14000babb:	int3   
   14000babc:	int3   
   14000babd:	int3   
   14000babe:	int3   
   14000babf:	int3   
   14000bac0:	int3   
   14000bac1:	int3   
   14000bac2:	int3   
   14000bac3:	int3   
   14000bac4:	int3   
   14000bac5:	int3   
   14000bac6:	int3   
   14000bac7:	int3   
   14000bac8:	int3   
   14000bac9:	int3   
   14000baca:	int3   
   14000bacb:	int3   
   14000bacc:	int3   
   14000bacd:	int3   
   14000bace:	int3   
   14000bacf:	int3   
   14000bad0:	lea    rax,[r9+0x1]
   14000bad4:	ret    
   14000bad5:	int3   
   14000bad6:	int3   
   14000bad7:	int3   
   14000bad8:	int3   
   14000bad9:	int3   
   14000bada:	int3   
   14000badb:	int3   
   14000badc:	int3   
   14000badd:	int3   
   14000bade:	int3   
   14000badf:	int3   
   14000bae0:	mov    rax,rsp
   14000bae3:	mov    QWORD PTR [rax+0x8],rbx
   14000bae7:	mov    QWORD PTR [rax+0x10],rbp
   14000baeb:	mov    QWORD PTR [rax+0x18],rsi
   14000baef:	mov    QWORD PTR [rax+0x20],rdi
   14000baf3:	push   r14
   14000baf5:	sub    rsp,0x20
   14000baf9:	mov    rsi,r9
   14000bafc:	lea    rbx,[r8+0x1]
   14000bb00:	mov    r14,rcx
   14000bb03:	call   0x14000b6d0
   14000bb08:	movzx  ebp,BYTE PTR [rsi+0x1]
   14000bb0c:	lea    rax,[rip+0x2f8d]        # 0x14000eaa0
   14000bb13:	shl    rbp,0x4
   14000bb17:	add    rbp,rax
   14000bb1a:	mov    rdi,QWORD PTR [rbp+0x8]
   14000bb1e:	mov    rcx,rdi
   14000bb21:	call   QWORD PTR [rip+0x2ba1]        # 0x14000e6c8
   14000bb27:	lea    r9,[rsi+0x1]
   14000bb2b:	mov    r8,rbx
   14000bb2e:	mov    rdx,rbp
   14000bb31:	mov    rcx,r14
   14000bb34:	mov    rax,rdi
   14000bb37:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb3c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bb41:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bb46:	mov    rdi,QWORD PTR [rsp+0x48]
   14000bb4b:	add    rsp,0x20
   14000bb4f:	pop    r14
   14000bb51:	rex.W jmp rax
   14000bb54:	int3   
   14000bb55:	int3   
   14000bb56:	int3   
   14000bb57:	int3   
   14000bb58:	int3   
   14000bb59:	int3   
   14000bb5a:	int3   
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	mov    DWORD PTR [rcx],0x1
   14000bb66:	jmp    0x14000b860
   14000bb6b:	int3   
   14000bb6c:	int3   
   14000bb6d:	int3   
   14000bb6e:	int3   
   14000bb6f:	int3   
   14000bb70:	int3   
   14000bb71:	int3   
   14000bb72:	int3   
   14000bb73:	int3   
   14000bb74:	int3   
   14000bb75:	int3   
   14000bb76:	int3   
   14000bb77:	int3   
   14000bb78:	int3   
   14000bb79:	int3   
   14000bb7a:	int3   
   14000bb7b:	int3   
   14000bb7c:	int3   
   14000bb7d:	int3   
   14000bb7e:	int3   
   14000bb7f:	int3   
   14000bb80:	mov    DWORD PTR [rcx+0x4],0x1
   14000bb87:	jmp    0x14000b860
   14000bb8c:	int3   
   14000bb8d:	int3   
   14000bb8e:	int3   
   14000bb8f:	int3   
   14000bb90:	int3   
   14000bb91:	int3   
   14000bb92:	int3   
   14000bb93:	int3   
   14000bb94:	int3   
   14000bb95:	int3   
   14000bb96:	int3   
   14000bb97:	int3   
   14000bb98:	int3   
   14000bb99:	int3   
   14000bb9a:	int3   
   14000bb9b:	int3   
   14000bb9c:	int3   
   14000bb9d:	int3   
   14000bb9e:	int3   
   14000bb9f:	int3   
   14000bba0:	sub    rsp,0x48
   14000bba4:	test   BYTE PTR [r9+0x1],0x38
   14000bba9:	lea    rax,[rip+0xfffffffffffffb20]        # 0x14000b6d0
   14000bbb0:	jne    0x14000bbc6
   14000bbb2:	mov    DWORD PTR [rsp+0x20],0x10133f6
   14000bbba:	lea    rdx,[rsp+0x20]
   14000bbbf:	mov    QWORD PTR [rsp+0x28],rax
   14000bbc4:	jmp    0x14000bbd8
   14000bbc6:	mov    DWORD PTR [rsp+0x30],0x122f6
   14000bbce:	lea    rdx,[rsp+0x30]
   14000bbd3:	mov    QWORD PTR [rsp+0x38],rax
   14000bbd8:	call   0x14000b6d0
   14000bbdd:	add    rsp,0x48
   14000bbe1:	ret    
   14000bbe2:	int3   
   14000bbe3:	int3   
   14000bbe4:	int3   
   14000bbe5:	int3   
   14000bbe6:	int3   
   14000bbe7:	int3   
   14000bbe8:	int3   
   14000bbe9:	int3   
   14000bbea:	int3   
   14000bbeb:	int3   
   14000bbec:	int3   
   14000bbed:	int3   
   14000bbee:	int3   
   14000bbef:	int3   
   14000bbf0:	sub    rsp,0x48
   14000bbf4:	test   BYTE PTR [r9+0x1],0x38
   14000bbf9:	lea    rax,[rip+0xfffffffffffffad0]        # 0x14000b6d0
   14000bc00:	jne    0x14000bc16
   14000bc02:	mov    DWORD PTR [rsp+0x20],0x40146f7
   14000bc0a:	lea    rdx,[rsp+0x20]
   14000bc0f:	mov    QWORD PTR [rsp+0x28],rax
   14000bc14:	jmp    0x14000bc28
   14000bc16:	mov    DWORD PTR [rsp+0x30],0x122f7
   14000bc1e:	lea    rdx,[rsp+0x30]
   14000bc23:	mov    QWORD PTR [rsp+0x38],rax
   14000bc28:	call   0x14000b6d0
   14000bc2d:	add    rsp,0x48
   14000bc31:	ret    
   14000bc32:	int3   
   14000bc33:	int3   
   14000bc34:	int3   
   14000bc35:	int3   
   14000bc36:	int3   
   14000bc37:	int3   
   14000bc38:	int3   
   14000bc39:	int3   
   14000bc3a:	int3   
   14000bc3b:	int3   
   14000bc3c:	int3   
   14000bc3d:	int3   
   14000bc3e:	int3   
   14000bc3f:	int3   
   14000bc40:	sub    rsp,0x38
   14000bc44:	mov    dl,BYTE PTR [r9+0x1]
   14000bc48:	mov    r10,rcx
   14000bc4b:	lea    eax,[rdx-0x15]
   14000bc4e:	test   al,0xef
   14000bc50:	je     0x14000bc67
   14000bc52:	and    dl,0x38
   14000bc55:	sub    dl,0x10
   14000bc58:	test   dl,0xe7
   14000bc5b:	jne    0x14000bc77
   14000bc5d:	mov    rax,QWORD PTR [rcx+0x10]
   14000bc61:	or     QWORD PTR [rax],0xffffffffffffffff
   14000bc65:	jmp    0x14000bc77
   14000bc67:	movsxd rax,DWORD PTR [r9+0x2]
   14000bc6b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000bc6f:	mov    rax,QWORD PTR [rax+r9*1+0x6]
   14000bc74:	mov    QWORD PTR [rcx],rax
   14000bc77:	lea    rax,[rip+0xfffffffffffffa52]        # 0x14000b6d0
   14000bc7e:	mov    DWORD PTR [rsp+0x20],0x122ff
   14000bc86:	lea    rdx,[rsp+0x20]
   14000bc8b:	mov    QWORD PTR [rsp+0x28],rax
   14000bc90:	mov    rcx,r10
   14000bc93:	call   0x14000b6d0
   14000bc98:	add    rsp,0x38
   14000bc9c:	ret    
   14000bc9d:	int3   
   14000bc9e:	int3   
   14000bc9f:	int3   
   14000bca0:	int3   
   14000bca1:	int3   
   14000bca2:	int3   
   14000bca3:	int3   
   14000bca4:	mov    rax,rsp
   14000bca7:	mov    QWORD PTR [rax+0x18],rbx
   14000bcab:	mov    DWORD PTR [rax+0x20],r9d
   14000bcaf:	mov    QWORD PTR [rax+0x10],rdx
   14000bcb3:	mov    QWORD PTR [rax+0x8],rcx
   14000bcb7:	push   rbp
   14000bcb8:	push   rsi
   14000bcb9:	push   rdi
   14000bcba:	push   r14
   14000bcbc:	push   r15
   14000bcbe:	mov    rbp,rsp
   14000bcc1:	sub    rsp,0x50
   14000bcc5:	xor    r14d,r14d
   14000bcc8:	mov    DWORD PTR [rbp+0x30],0x4
   14000bccf:	mov    rsi,r8
   14000bcd2:	lea    rcx,[rip+0x5887]        # 0x140011560
   14000bcd9:	xor    edx,edx
   14000bcdb:	mov    edi,r14d
   14000bcde:	lea    r15d,[r14+0x1]
   14000bce2:	lea    r8d,[r14+0x2]
   14000bce6:	mov    ebx,r15d
   14000bce9:	call   QWORD PTR [rip+0x27e1]        # 0x14000e4d0
   14000bcef:	test   eax,eax
   14000bcf1:	je     0x14000bd2f
   14000bcf3:	lea    rax,[rbp+0x30]
   14000bcf7:	mov    rcx,0xffffffff80000002
   14000bcfe:	mov    QWORD PTR [rsp+0x30],rax
   14000bd03:	lea    r9d,[r14+0x18]
   14000bd07:	lea    rax,[rbp+0x50]
   14000bd0b:	mov    QWORD PTR [rsp+0x28],rax
   14000bd10:	lea    r8,[rip+0x58b1]        # 0x1400115c8
   14000bd17:	lea    rdx,[rip+0x5842]        # 0x140011560
   14000bd1e:	mov    QWORD PTR [rsp+0x20],r14
   14000bd23:	call   QWORD PTR [rip+0x2407]        # 0x14000e130
   14000bd29:	test   eax,eax
   14000bd2b:	cmove  edi,DWORD PTR [rbp+0x50]
   14000bd2f:	xor    edx,edx
   14000bd31:	mov    DWORD PTR [rbp+0x48],r14d
   14000bd35:	lea    rcx,[rip+0x53f4]        # 0x140011130
   14000bd3c:	lea    r8d,[rdx+0x2]
   14000bd40:	call   QWORD PTR [rip+0x278a]        # 0x14000e4d0
   14000bd46:	test   eax,eax
   14000bd48:	je     0x14000bdab
   14000bd4a:	lea    rax,[rbp-0x10]
   14000bd4e:	mov    r9d,r15d
   14000bd51:	xor    r8d,r8d
   14000bd54:	mov    QWORD PTR [rsp+0x20],rax
   14000bd59:	lea    rdx,[rip+0x53d0]        # 0x140011130
   14000bd60:	mov    rcx,0xffffffff80000002
   14000bd67:	call   QWORD PTR [rip+0x230b]        # 0x14000e078
   14000bd6d:	mov    ebx,eax
   14000bd6f:	test   eax,eax
   14000bd71:	jne    0x14000bdab
   14000bd73:	mov    rcx,QWORD PTR [rbp-0x10]
   14000bd77:	lea    rax,[rbp+0x38]
   14000bd7b:	mov    QWORD PTR [rsp+0x28],rax
   14000bd80:	xor    r9d,r9d
   14000bd83:	lea    rax,[rbp+0x48]
   14000bd87:	mov    DWORD PTR [rbp+0x38],0x4
   14000bd8e:	xor    r8d,r8d
   14000bd91:	mov    QWORD PTR [rsp+0x20],rax
   14000bd96:	mov    rdx,rsi
   14000bd99:	call   QWORD PTR [rip+0x22b1]        # 0x14000e050
   14000bd9f:	mov    rcx,QWORD PTR [rbp-0x10]
   14000bda3:	mov    ebx,eax
   14000bda5:	call   QWORD PTR [rip+0x227d]        # 0x14000e028
   14000bdab:	test   edi,edi
   14000bdad:	jne    0x14000be2e
   14000bdaf:	test   ebx,ebx
   14000bdb1:	je     0x14000bea2
   14000bdb7:	lea    r8d,[rdi+0x2]
   14000bdbb:	mov    edx,r15d
   14000bdbe:	lea    rcx,[rip+0x536b]        # 0x140011130
   14000bdc5:	call   QWORD PTR [rip+0x2705]        # 0x14000e4d0
   14000bdcb:	test   eax,eax
   14000bdcd:	je     0x14000be2e
   14000bdcf:	lea    rax,[rbp-0x10]
   14000bdd3:	mov    r9d,r15d
   14000bdd6:	xor    r8d,r8d
   14000bdd9:	mov    QWORD PTR [rsp+0x20],rax
   14000bdde:	lea    rdx,[rip+0x534b]        # 0x140011130
   14000bde5:	mov    rcx,0xffffffff80000001
   14000bdec:	call   QWORD PTR [rip+0x2286]        # 0x14000e078
   14000bdf2:	test   eax,eax
   14000bdf4:	jne    0x14000be32
   14000bdf6:	mov    rcx,QWORD PTR [rbp-0x10]
   14000bdfa:	lea    rax,[rbp+0x38]
   14000bdfe:	mov    QWORD PTR [rsp+0x28],rax
   14000be03:	xor    r9d,r9d
   14000be06:	lea    rax,[rbp+0x48]
   14000be0a:	mov    DWORD PTR [rbp+0x38],0x4
   14000be11:	xor    r8d,r8d
   14000be14:	mov    QWORD PTR [rsp+0x20],rax
   14000be19:	mov    rdx,rsi
   14000be1c:	call   QWORD PTR [rip+0x222e]        # 0x14000e050
   14000be22:	mov    rcx,QWORD PTR [rbp-0x10]
   14000be26:	mov    ebx,eax
   14000be28:	call   QWORD PTR [rip+0x21fa]        # 0x14000e028
   14000be2e:	test   ebx,ebx
   14000be30:	je     0x14000bea2
   14000be32:	mov    DWORD PTR [rbp+0x38],0x4
   14000be39:	lea    rax,[rbp+0x38]
   14000be3d:	test   edi,edi
   14000be3f:	je     0x14000be73
   14000be41:	mov    QWORD PTR [rsp+0x30],rax
   14000be46:	lea    rdx,[rip+0x5263]        # 0x1400110b0
   14000be4d:	lea    rax,[rbp+0x48]
   14000be51:	mov    r9d,0x18
   14000be57:	mov    QWORD PTR [rsp+0x28],rax
   14000be5c:	mov    r8,rsi
   14000be5f:	mov    rcx,0xffffffff80000002
   14000be66:	mov    QWORD PTR [rsp+0x20],r14
   14000be6b:	call   QWORD PTR [rip+0x22bf]        # 0x14000e130
   14000be71:	jmp    0x14000be89
   14000be73:	mov    QWORD PTR [rsp+0x28],rax
   14000be78:	mov    rdx,rsi
   14000be7b:	lea    rax,[rbp+0x48]
   14000be7f:	mov    QWORD PTR [rsp+0x20],rax
   14000be84:	call   0x14000becc
   14000be89:	mov    ecx,eax
   14000be8b:	mov    eax,DWORD PTR [rbp+0x48]
   14000be8e:	test   ecx,ecx
   14000be90:	mov    rcx,QWORD PTR [rbp+0x58]
   14000be94:	cmovne eax,r14d
   14000be98:	test   rcx,rcx
   14000be9b:	je     0x14000beb1
   14000be9d:	mov    DWORD PTR [rcx],r14d
   14000bea0:	jmp    0x14000beb1
   14000bea2:	mov    rax,QWORD PTR [rbp+0x58]
   14000bea6:	test   rax,rax
   14000bea9:	je     0x14000beae
   14000beab:	mov    DWORD PTR [rax],r15d
   14000beae:	mov    eax,DWORD PTR [rbp+0x48]
   14000beb1:	mov    rbx,QWORD PTR [rsp+0x90]
   14000beb9:	add    rsp,0x50
   14000bebd:	pop    r15
   14000bebf:	pop    r14
   14000bec1:	pop    rdi
   14000bec2:	pop    rsi
   14000bec3:	pop    rbp
   14000bec4:	ret    
   14000bec5:	int3   
   14000bec6:	int3   
   14000bec7:	int3   
   14000bec8:	int3   
   14000bec9:	int3   
   14000beca:	int3   
   14000becb:	int3   
   14000becc:	mov    QWORD PTR [rsp+0x8],rbx
   14000bed1:	mov    QWORD PTR [rsp+0x10],rsi
   14000bed6:	mov    DWORD PTR [rsp+0x18],r8d
   14000bedb:	push   rdi
   14000bedc:	sub    rsp,0x40
   14000bee0:	mov    rbx,QWORD PTR [rsp+0x78]
   14000bee5:	mov    rdi,rdx
   14000bee8:	test   rbx,rbx
   14000beeb:	je     0x14000bef5
   14000beed:	mov    eax,DWORD PTR [rbx]
   14000beef:	mov    DWORD PTR [rsp+0x60],eax
   14000bef3:	jmp    0x14000befa
   14000bef5:	and    DWORD PTR [rsp+0x60],0x0
   14000befa:	mov    rsi,QWORD PTR [rsp+0x70]
   14000beff:	mov    r8,rdx
   14000bf02:	lea    rdx,[rip+0x51a7]        # 0x1400110b0
   14000bf09:	mov    r9d,0x18
   14000bf0f:	mov    rcx,0xffffffff80000001
   14000bf16:	test   rbx,rbx
   14000bf19:	je     0x14000bf27
   14000bf1b:	lea    rax,[rsp+0x60]
   14000bf20:	mov    QWORD PTR [rsp+0x30],rax
   14000bf25:	jmp    0x14000bf2d
   14000bf27:	and    QWORD PTR [rsp+0x30],0x0
   14000bf2d:	mov    QWORD PTR [rsp+0x28],rsi
   14000bf32:	and    QWORD PTR [rsp+0x20],0x0
   14000bf38:	call   QWORD PTR [rip+0x21f2]        # 0x14000e130
   14000bf3e:	mov    ecx,eax
   14000bf40:	lea    eax,[rax-0x2]
   14000bf43:	cmp    eax,0x1
   14000bf46:	jbe    0x14000bf55
   14000bf48:	test   rbx,rbx
   14000bf4b:	je     0x14000bf84
   14000bf4d:	mov    eax,DWORD PTR [rsp+0x60]
   14000bf51:	mov    DWORD PTR [rbx],eax
   14000bf53:	jmp    0x14000bf84
   14000bf55:	mov    QWORD PTR [rsp+0x30],rbx
   14000bf5a:	lea    rdx,[rip+0x514f]        # 0x1400110b0
   14000bf61:	mov    QWORD PTR [rsp+0x28],rsi
   14000bf66:	mov    r9d,0x18
   14000bf6c:	and    QWORD PTR [rsp+0x20],0x0
   14000bf72:	mov    r8,rdi
   14000bf75:	mov    rcx,0xffffffff80000002
   14000bf7c:	call   QWORD PTR [rip+0x21ae]        # 0x14000e130
   14000bf82:	mov    ecx,eax
   14000bf84:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bf89:	mov    eax,ecx
   14000bf8b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000bf90:	add    rsp,0x40
   14000bf94:	pop    rdi
   14000bf95:	ret    
   14000bf96:	int3   
   14000bf97:	int3   
   14000bf98:	int3   
   14000bf99:	int3   
   14000bf9a:	int3   
   14000bf9b:	int3   
   14000bf9c:	rex push rbx
   14000bf9e:	sub    rsp,0x20
   14000bfa2:	and    QWORD PTR [rcx],0x0
   14000bfa6:	mov    rbx,rcx
   14000bfa9:	mov    rcx,QWORD PTR [rip+0x8078]        # 0x140014028
   14000bfb0:	cmp    rcx,0xffffffffffffffff
   14000bfb4:	jne    0x14000bff3
   14000bfb6:	mov    rcx,QWORD PTR [rip+0x8753]        # 0x140014710
   14000bfbd:	test   rcx,rcx
   14000bfc0:	je     0x14000bfe8
   14000bfc2:	cmp    rcx,0xffffffffffffffff
   14000bfc6:	jne    0x14000bfd0
   14000bfc8:	xor    eax,eax
   14000bfca:	add    rsp,0x20
   14000bfce:	pop    rbx
   14000bfcf:	ret    
   14000bfd0:	mov    edx,DWORD PTR [rip+0x8742]        # 0x140014718
   14000bfd6:	call   0x14000c00c
   14000bfdb:	mov    rcx,QWORD PTR [rip+0x8046]        # 0x140014028
   14000bfe2:	cmp    rcx,0xffffffffffffffff
   14000bfe6:	jne    0x14000bff3
   14000bfe8:	mov    eax,0x1
   14000bfed:	add    rsp,0x20
   14000bff1:	pop    rbx
   14000bff2:	ret    
   14000bff3:	and    QWORD PTR [rbx],0x0
   14000bff7:	mov    rdx,rbx
   14000bffa:	add    rsp,0x20
   14000bffe:	pop    rbx
   14000bfff:	rex.W jmp QWORD PTR [rip+0x226a]        # 0x14000e270
   14000c006:	int3   
   14000c007:	int3   
   14000c008:	int3   
   14000c009:	int3   
   14000c00a:	int3   
   14000c00b:	int3   
   14000c00c:	mov    QWORD PTR [rsp+0x18],rbx
   14000c011:	mov    QWORD PTR [rsp+0x20],rsi
   14000c016:	push   rdi
   14000c017:	sub    rsp,0x280
   14000c01e:	mov    rax,QWORD PTR [rip+0x7fe3]        # 0x140014008
   14000c025:	xor    rax,rsp
   14000c028:	mov    QWORD PTR [rsp+0x270],rax
   14000c030:	xor    ebx,ebx
   14000c032:	mov    esi,edx
   14000c034:	cmp    QWORD PTR [rip+0x7fec],0xffffffffffffffff        # 0x140014028
   14000c03c:	mov    rdi,rcx
   14000c03f:	jne    0x14000c0da
   14000c045:	xor    edx,edx
   14000c047:	mov    DWORD PTR [rsp+0x20],ebx
   14000c04b:	lea    r8d,[rbx+0x34]
   14000c04f:	lea    rcx,[rsp+0x24]
   14000c054:	call   0x14000d326
   14000c059:	test   rdi,rdi
   14000c05c:	jne    0x14000c069
   14000c05e:	xor    ecx,ecx
   14000c060:	call   QWORD PTR [rip+0x227a]        # 0x14000e2e0
   14000c066:	mov    rdi,rax
   14000c069:	mov    r8d,0x104
   14000c06f:	lea    rdx,[rsp+0x60]
   14000c074:	mov    rcx,rdi
   14000c077:	call   QWORD PTR [rip+0x227b]        # 0x14000e2f8
   14000c07d:	movzx  ecx,si
   14000c080:	lea    rax,[rsp+0x60]
   14000c085:	mov    QWORD PTR [rsp+0x40],rcx
   14000c08a:	lea    rcx,[rsp+0x20]
   14000c08f:	mov    DWORD PTR [rsp+0x20],0x38
   14000c097:	mov    QWORD PTR [rsp+0x28],rax
   14000c09c:	mov    DWORD PTR [rsp+0x24],0x88
   14000c0a4:	mov    QWORD PTR [rsp+0x50],rdi
   14000c0a9:	call   QWORD PTR [rip+0x21d1]        # 0x14000e280
   14000c0af:	mov    rcx,rax
   14000c0b2:	cmp    rax,0xffffffffffffffff
   14000c0b6:	je     0x14000c0d2
   14000c0b8:	or     rax,0xffffffffffffffff
   14000c0bc:	lock cmpxchg QWORD PTR [rip+0x7f63],rcx        # 0x140014028
   14000c0c5:	je     0x14000c0cd
   14000c0c7:	call   QWORD PTR [rip+0x21ab]        # 0x14000e278
   14000c0cd:	call   0x14000c164
   14000c0d2:	cmp    QWORD PTR [rip+0x7f4e],0xffffffffffffffff        # 0x140014028
   14000c0da:	setne  bl
   14000c0dd:	mov    eax,ebx
   14000c0df:	mov    rcx,QWORD PTR [rsp+0x270]
   14000c0e7:	xor    rcx,rsp
   14000c0ea:	call   0x14000cc40
   14000c0ef:	lea    r11,[rsp+0x280]
   14000c0f7:	mov    rbx,QWORD PTR [r11+0x20]
   14000c0fb:	mov    rsi,QWORD PTR [r11+0x28]
   14000c0ff:	mov    rsp,r11
   14000c102:	pop    rdi
   14000c103:	ret    
   14000c104:	int3   
   14000c105:	int3   
   14000c106:	int3   
   14000c107:	int3   
   14000c108:	int3   
   14000c109:	int3   
   14000c10a:	int3   
   14000c10b:	int3   
   14000c10c:	mov    QWORD PTR [rsp+0x8],rcx
   14000c111:	push   rbx
   14000c112:	sub    rsp,0x20
   14000c116:	and    QWORD PTR [rsp+0x30],0x0
   14000c11c:	lea    rcx,[rsp+0x30]
   14000c121:	call   0x14000bf9c
   14000c126:	test   eax,eax
   14000c128:	jne    0x14000c12e
   14000c12a:	xor    eax,eax
   14000c12c:	jmp    0x14000c158
   14000c12e:	xor    r8d,r8d
   14000c131:	lea    rcx,[rip+0x5520]        # 0x140011658
   14000c138:	xor    edx,edx
   14000c13a:	call   QWORD PTR [rip+0x21d8]        # 0x14000e318
   14000c140:	mov    rdx,QWORD PTR [rsp+0x30]
   14000c145:	mov    rbx,rax
   14000c148:	test   rdx,rdx
   14000c14b:	je     0x14000c155
   14000c14d:	xor    ecx,ecx
   14000c14f:	call   QWORD PTR [rip+0x222b]        # 0x14000e380
   14000c155:	mov    rax,rbx
   14000c158:	add    rsp,0x20
   14000c15c:	pop    rbx
   14000c15d:	ret    
   14000c15e:	int3   
   14000c15f:	int3   
   14000c160:	int3   
   14000c161:	int3   
   14000c162:	int3   
   14000c163:	int3   
   14000c164:	rex push rbx
   14000c166:	sub    rsp,0x20
   14000c16a:	mov    rax,QWORD PTR [rip+0x85f7]        # 0x140014768
   14000c171:	xor    ebx,ebx
   14000c173:	test   rax,rax
   14000c176:	jne    0x14000c1a5
   14000c178:	call   0x14000c10c
   14000c17d:	mov    QWORD PTR [rip+0x85e4],rax        # 0x140014768
   14000c184:	test   rax,rax
   14000c187:	jne    0x14000c1a5
   14000c189:	xor    r8d,r8d
   14000c18c:	lea    rcx,[rip+0x54c5]        # 0x140011658
   14000c193:	xor    edx,edx
   14000c195:	call   QWORD PTR [rip+0x217d]        # 0x14000e318
   14000c19b:	mov    QWORD PTR [rip+0x85c6],rax        # 0x140014768
   14000c1a2:	test   rax,rax
   14000c1a5:	setne  bl
   14000c1a8:	mov    eax,ebx
   14000c1aa:	add    rsp,0x20
   14000c1ae:	pop    rbx
   14000c1af:	ret    
   14000c1b0:	int3   
   14000c1b1:	int3   
   14000c1b2:	int3   
   14000c1b3:	int3   
   14000c1b4:	int3   
   14000c1b5:	int3   
   14000c1b6:	int3   
   14000c1b7:	int3   
   14000c1b8:	sub    rsp,0x28
   14000c1bc:	call   QWORD PTR [rip+0x212e]        # 0x14000e2f0
   14000c1c2:	mov    ecx,eax
   14000c1c4:	mov    eax,0x1
   14000c1c9:	test   ecx,ecx
   14000c1cb:	cmove  ecx,eax
   14000c1ce:	movzx  eax,cx
   14000c1d1:	or     eax,0x80070000
   14000c1d6:	test   ecx,ecx
   14000c1d8:	cmovle eax,ecx
   14000c1db:	add    rsp,0x28
   14000c1df:	ret    
   14000c1e0:	int3   
   14000c1e1:	int3   
   14000c1e2:	int3   
   14000c1e3:	int3   
   14000c1e4:	int3   
   14000c1e5:	int3   
   14000c1e6:	int3   
   14000c1e7:	int3   
   14000c1e8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c1ed:	mov    QWORD PTR [rsp+0x10],rsi
   14000c1f2:	mov    QWORD PTR [rsp+0x20],rdi
   14000c1f7:	push   r14
   14000c1f9:	sub    rsp,0x30
   14000c1fd:	mov    r14,rdx
   14000c200:	mov    rbx,rcx
   14000c203:	call   QWORD PTR [rip+0x20df]        # 0x14000e2e8
   14000c209:	xor    r9d,r9d
   14000c20c:	xor    r8d,r8d
   14000c20f:	mov    rsi,rax
   14000c212:	mov    rcx,rbx
   14000c215:	lea    rax,[rsp+0x50]
   14000c21a:	mov    QWORD PTR [rsp+0x20],rax
   14000c21f:	lea    edx,[r9+0x19]
   14000c223:	call   QWORD PTR [rip+0x1e5f]        # 0x14000e088
   14000c229:	test   eax,eax
   14000c22b:	jne    0x14000c2b5
   14000c231:	call   QWORD PTR [rip+0x20b9]        # 0x14000e2f0
   14000c237:	cmp    eax,0x7a
   14000c23a:	jne    0x14000c29a
   14000c23c:	mov    r8d,DWORD PTR [rsp+0x50]
   14000c241:	xor    edx,edx
   14000c243:	mov    rcx,rsi
   14000c246:	call   QWORD PTR [rip+0x207c]        # 0x14000e2c8
   14000c24c:	mov    rdi,rax
   14000c24f:	test   rax,rax
   14000c252:	je     0x14000c293
   14000c254:	mov    r9d,DWORD PTR [rsp+0x50]
   14000c259:	lea    rax,[rsp+0x50]
   14000c25e:	mov    r8,rdi
   14000c261:	mov    QWORD PTR [rsp+0x20],rax
   14000c266:	mov    edx,0x19
   14000c26b:	mov    rcx,rbx
   14000c26e:	call   QWORD PTR [rip+0x1e14]        # 0x14000e088
   14000c274:	test   eax,eax
   14000c276:	je     0x14000c27c
   14000c278:	xor    ebx,ebx
   14000c27a:	jmp    0x14000c2c3
   14000c27c:	call   0x14000c1b8
   14000c281:	mov    r8,rdi
   14000c284:	xor    edx,edx
   14000c286:	mov    rcx,rsi
   14000c289:	mov    ebx,eax
   14000c28b:	call   QWORD PTR [rip+0x203f]        # 0x14000e2d0
   14000c291:	jmp    0x14000c2ba
   14000c293:	mov    ebx,0x8007000e
   14000c298:	jmp    0x14000c2ba
   14000c29a:	test   eax,eax
   14000c29c:	je     0x14000c2ae
   14000c29e:	movzx  ebx,ax
   14000c2a1:	or     ebx,0x80070000
   14000c2a7:	test   eax,eax
   14000c2a9:	cmovle ebx,eax
   14000c2ac:	jmp    0x14000c2ba
   14000c2ae:	mov    ebx,0x80070057
   14000c2b3:	jmp    0x14000c2ba
   14000c2b5:	mov    ebx,0x8000ffff
   14000c2ba:	test   ebx,ebx
   14000c2bc:	js     0x14000c2f3
   14000c2be:	mov    rdi,QWORD PTR [rsp+0x50]
   14000c2c3:	mov    rcx,QWORD PTR [rdi]
   14000c2c6:	call   QWORD PTR [rip+0x1e3c]        # 0x14000e108
   14000c2cc:	mov    rcx,QWORD PTR [rdi]
   14000c2cf:	movzx  edx,BYTE PTR [rax]
   14000c2d2:	dec    edx
   14000c2d4:	call   QWORD PTR [rip+0x1e36]        # 0x14000e110
   14000c2da:	mov    ecx,DWORD PTR [rax]
   14000c2dc:	mov    DWORD PTR [r14],ecx
   14000c2df:	call   QWORD PTR [rip+0x2003]        # 0x14000e2e8
   14000c2e5:	mov    r8,rdi
   14000c2e8:	xor    edx,edx
   14000c2ea:	mov    rcx,rax
   14000c2ed:	call   QWORD PTR [rip+0x1fdd]        # 0x14000e2d0
   14000c2f3:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c2f8:	mov    eax,ebx
   14000c2fa:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c2ff:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c304:	add    rsp,0x30
   14000c308:	pop    r14
   14000c30a:	ret    
   14000c30b:	int3   
   14000c30c:	int3   
   14000c30d:	int3   
   14000c30e:	int3   
   14000c30f:	int3   
   14000c310:	int3   
   14000c311:	int3   
   14000c312:	int3   
   14000c313:	int3   
   14000c314:	mov    QWORD PTR [rsp+0x8],rbx
   14000c319:	mov    QWORD PTR [rsp+0x10],rsi
   14000c31e:	push   rdi
   14000c31f:	sub    rsp,0x20
   14000c323:	xor    edi,edi
   14000c325:	mov    rsi,rdx
   14000c328:	mov    rbx,rcx
   14000c32b:	test   rdx,rdx
   14000c32e:	je     0x14000c333
   14000c330:	and    QWORD PTR [rdx],rdi
   14000c333:	cmp    WORD PTR [rcx],0x5c
   14000c337:	jne    0x14000c387
   14000c339:	cmp    WORD PTR [rcx+0x2],0x5c
   14000c33e:	jne    0x14000c387
   14000c340:	cmp    WORD PTR [rcx+0x4],0x3f
   14000c345:	je     0x14000c357
   14000c347:	call   0x14000c7d0
   14000c34c:	test   eax,eax
   14000c34e:	jne    0x14000c387
   14000c350:	mov    eax,0x2
   14000c355:	jmp    0x14000c376
   14000c357:	add    rcx,0x6
   14000c35b:	lea    rdx,[rip+0x5316]        # 0x140011678
   14000c362:	mov    r8d,0x5
   14000c368:	call   0x14000c780
   14000c36d:	test   eax,eax
   14000c36f:	je     0x14000c387
   14000c371:	mov    eax,0x8
   14000c376:	mov    edi,0x1
   14000c37b:	test   rsi,rsi
   14000c37e:	je     0x14000c387
   14000c380:	lea    rcx,[rbx+rax*2]
   14000c384:	mov    QWORD PTR [rsi],rcx
   14000c387:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c38c:	mov    eax,edi
   14000c38e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c393:	add    rsp,0x20
   14000c397:	pop    rdi
   14000c398:	ret    
   14000c399:	int3   
   14000c39a:	int3   
   14000c39b:	int3   
   14000c39c:	int3   
   14000c39d:	int3   
   14000c39e:	int3   
   14000c39f:	int3   
   14000c3a0:	mov    QWORD PTR [rsp+0x10],rbx
   14000c3a5:	push   rdi
   14000c3a6:	sub    rsp,0x20
   14000c3aa:	xor    edi,edi
   14000c3ac:	mov    rbx,rcx
   14000c3af:	test   rcx,rcx
   14000c3b2:	je     0x14000c497
   14000c3b8:	movzx  ecx,WORD PTR [rcx]
   14000c3bb:	test   cx,cx
   14000c3be:	je     0x14000c497
   14000c3c4:	call   QWORD PTR [rip+0x2166]        # 0x14000e530
   14000c3ca:	test   eax,eax
   14000c3cc:	je     0x14000c3f0
   14000c3ce:	lea    rcx,[rbx+0x2]
   14000c3d2:	lea    r8d,[rdi+0x3]
   14000c3d6:	lea    rdx,[rip+0x52a7]        # 0x140011684
   14000c3dd:	call   0x14000c780
   14000c3e2:	test   eax,eax
   14000c3e4:	je     0x14000c3f0
   14000c3e6:	mov    eax,0x1
   14000c3eb:	jmp    0x14000c499
   14000c3f0:	cmp    WORD PTR [rbx],0x5c
   14000c3f4:	jne    0x14000c3fc
   14000c3f6:	cmp    WORD PTR [rbx+0x2],di
   14000c3fa:	je     0x14000c3e6
   14000c3fc:	lea    rdx,[rsp+0x30]
   14000c401:	mov    rcx,rbx
   14000c404:	call   0x14000c314
   14000c409:	test   eax,eax
   14000c40b:	je     0x14000c435
   14000c40d:	mov    rax,QWORD PTR [rsp+0x30]
   14000c412:	mov    edx,edi
   14000c414:	movzx  ecx,WORD PTR [rax]
   14000c417:	test   cx,cx
   14000c41a:	je     0x14000c3e6
   14000c41c:	cmp    cx,0x5c
   14000c420:	jne    0x14000c42f
   14000c422:	inc    edx
   14000c424:	cmp    edx,0x1
   14000c427:	jg     0x14000c497
   14000c429:	cmp    WORD PTR [rax+0x2],di
   14000c42d:	je     0x14000c497
   14000c42f:	add    rax,0x2
   14000c433:	jmp    0x14000c414
   14000c435:	mov    r8d,0x4
   14000c43b:	lea    rdx,[rip+0x524e]        # 0x140011690
   14000c442:	mov    rcx,rbx
   14000c445:	call   0x14000c780
   14000c44a:	test   eax,eax
   14000c44c:	je     0x14000c47a
   14000c44e:	movzx  ecx,WORD PTR [rbx+0x8]
   14000c452:	call   QWORD PTR [rip+0x20d8]        # 0x14000e530
   14000c458:	test   eax,eax
   14000c45a:	je     0x14000c47a
   14000c45c:	lea    rcx,[rbx+0xa]
   14000c460:	mov    r8d,0x3
   14000c466:	lea    rdx,[rip+0x5217]        # 0x140011684
   14000c46d:	call   0x14000c780
   14000c472:	test   eax,eax
   14000c474:	jne    0x14000c3e6
   14000c47a:	mov    rcx,rbx
   14000c47d:	call   0x14000c7d0
   14000c482:	test   eax,eax
   14000c484:	je     0x14000c497
   14000c486:	cmp    WORD PTR [rbx+0x60],0x5c
   14000c48b:	jne    0x14000c497
   14000c48d:	cmp    WORD PTR [rbx+0x62],di
   14000c491:	je     0x14000c3e6
   14000c497:	xor    eax,eax
   14000c499:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c49e:	add    rsp,0x20
   14000c4a2:	pop    rdi
   14000c4a3:	ret    
   14000c4a4:	int3   
   14000c4a5:	int3   
   14000c4a6:	int3   
   14000c4a7:	int3   
   14000c4a8:	int3   
   14000c4a9:	int3   
   14000c4aa:	int3   
   14000c4ab:	int3   
   14000c4ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4b1:	mov    QWORD PTR [rsp+0x10],rbp
   14000c4b6:	mov    QWORD PTR [rsp+0x18],rsi
   14000c4bb:	push   rdi
   14000c4bc:	sub    rsp,0x20
   14000c4c0:	or     rbx,0xffffffffffffffff
   14000c4c4:	mov    rsi,rcx
   14000c4c7:	xor    ebp,ebp
   14000c4c9:	inc    rbx
   14000c4cc:	cmp    WORD PTR [rcx+rbx*2],bp
   14000c4d0:	jne    0x14000c4c9
   14000c4d2:	cmp    rbx,rdx
   14000c4d5:	jb     0x14000c4de
   14000c4d7:	mov    eax,0x80070057
   14000c4dc:	jmp    0x14000c504
   14000c4de:	mov    edi,0x1
   14000c4e3:	test   rbx,rbx
   14000c4e6:	je     0x14000c502
   14000c4e8:	cmp    WORD PTR [rcx+rbx*2-0x2],0x5c
   14000c4ee:	jne    0x14000c502
   14000c4f0:	sub    rbx,rdi
   14000c4f3:	call   0x14000c3a0
   14000c4f8:	test   eax,eax
   14000c4fa:	jne    0x14000c502
   14000c4fc:	mov    WORD PTR [rsi+rbx*2],bp
   14000c500:	mov    edi,ebp
   14000c502:	mov    eax,edi
   14000c504:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c509:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c50e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c513:	add    rsp,0x20
   14000c517:	pop    rdi
   14000c518:	ret    
   14000c519:	int3   
   14000c51a:	int3   
   14000c51b:	int3   
   14000c51c:	int3   
   14000c51d:	int3   
   14000c51e:	int3   
   14000c51f:	int3   
   14000c520:	mov    rax,rsp
   14000c523:	mov    QWORD PTR [rax+0x10],rbx
   14000c527:	mov    QWORD PTR [rax+0x18],rbp
   14000c52b:	mov    QWORD PTR [rax+0x20],rsi
   14000c52f:	push   rdi
   14000c530:	push   r14
   14000c532:	push   r15
   14000c534:	sub    rsp,0x20
   14000c538:	xor    r15d,r15d
   14000c53b:	mov    r14,rdx
   14000c53e:	mov    rbx,rcx
   14000c541:	cmp    WORD PTR [rcx],r15w
   14000c545:	je     0x14000c62c
   14000c54b:	test   rdx,rdx
   14000c54e:	je     0x14000c62c
   14000c554:	mov    QWORD PTR [rdx],r15
   14000c557:	lea    rdx,[rax+0x8]
   14000c55b:	call   0x14000c314
   14000c560:	lea    edi,[r15+0x5c]
   14000c564:	test   eax,eax
   14000c566:	je     0x14000c5ca
   14000c568:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c56d:	mov    edx,edi
   14000c56f:	mov    rcx,rbx
   14000c572:	call   QWORD PTR [rip+0x1f88]        # 0x14000e500
   14000c578:	mov    rsi,rax
   14000c57b:	test   rax,rax
   14000c57e:	je     0x14000c5b6
   14000c580:	lea    rbp,[rax+0x2]
   14000c584:	mov    edx,edi
   14000c586:	mov    rcx,rbp
   14000c589:	call   QWORD PTR [rip+0x1f71]        # 0x14000e500
   14000c58f:	mov    rbx,rax
   14000c592:	test   rax,rax
   14000c595:	je     0x14000c5a2
   14000c597:	cmp    rax,rbp
   14000c59a:	je     0x14000c625
   14000c5a0:	jmp    0x14000c621
   14000c5a2:	or     rax,0xffffffffffffffff
   14000c5a6:	inc    rax
   14000c5a9:	cmp    WORD PTR [rsi+rax*2],r15w
   14000c5ae:	jne    0x14000c5a6
   14000c5b0:	lea    rbx,[rsi+rax*2]
   14000c5b4:	jmp    0x14000c625
   14000c5b6:	or     rax,0xffffffffffffffff
   14000c5ba:	inc    rax
   14000c5bd:	cmp    WORD PTR [rbx+rax*2],r15w
   14000c5c2:	jne    0x14000c5ba
   14000c5c4:	lea    rbx,[rbx+rax*2]
   14000c5c8:	jmp    0x14000c625
   14000c5ca:	cmp    WORD PTR [rbx],di
   14000c5cd:	jne    0x14000c5d5
   14000c5cf:	cmp    WORD PTR [rbx+0x2],di
   14000c5d3:	jne    0x14000c621
   14000c5d5:	mov    rcx,rbx
   14000c5d8:	call   0x14000c7d0
   14000c5dd:	test   eax,eax
   14000c5df:	je     0x14000c5e7
   14000c5e1:	add    rbx,0x60
   14000c5e5:	jmp    0x14000c61c
   14000c5e7:	mov    r8d,0x4
   14000c5ed:	lea    rdx,[rip+0x509c]        # 0x140011690
   14000c5f4:	mov    rcx,rbx
   14000c5f7:	call   0x14000c780
   14000c5fc:	test   eax,eax
   14000c5fe:	je     0x14000c604
   14000c600:	add    rbx,0x8
   14000c604:	movzx  ecx,WORD PTR [rbx]
   14000c607:	call   QWORD PTR [rip+0x1f23]        # 0x14000e530
   14000c60d:	test   eax,eax
   14000c60f:	je     0x14000c62c
   14000c611:	cmp    WORD PTR [rbx+0x2],0x3a
   14000c616:	jne    0x14000c62c
   14000c618:	add    rbx,0x4
   14000c61c:	cmp    WORD PTR [rbx],di
   14000c61f:	jne    0x14000c625
   14000c621:	add    rbx,0x2
   14000c625:	mov    QWORD PTR [r14],rbx
   14000c628:	xor    eax,eax
   14000c62a:	jmp    0x14000c631
   14000c62c:	mov    eax,0x80070057
   14000c631:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c636:	mov    rbp,QWORD PTR [rsp+0x50]
   14000c63b:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c640:	add    rsp,0x20
   14000c644:	pop    r15
   14000c646:	pop    r14
   14000c648:	pop    rdi
   14000c649:	ret    
   14000c64a:	int3   
   14000c64b:	int3   
   14000c64c:	int3   
   14000c64d:	int3   
   14000c64e:	int3   
   14000c64f:	int3   
   14000c650:	mov    QWORD PTR [rsp+0x10],rbx
   14000c655:	mov    QWORD PTR [rsp+0x18],rbp
   14000c65a:	push   rsi
   14000c65b:	push   rdi
   14000c65c:	push   r12
   14000c65e:	push   r14
   14000c660:	push   r15
   14000c662:	sub    rsp,0x20
   14000c666:	xor    r12d,r12d
   14000c669:	mov    r14,rdx
   14000c66c:	mov    rdi,rcx
   14000c66f:	test   rcx,rcx
   14000c672:	je     0x14000c702
   14000c678:	lea    rax,[rdx-0x1]
   14000c67c:	cmp    rax,0x7fff
   14000c682:	ja     0x14000c702
   14000c684:	lea    rdx,[rsp+0x50]
   14000c689:	call   0x14000c520
   14000c68e:	mov    ebx,eax
   14000c690:	test   eax,eax
   14000c692:	jns    0x14000c69c
   14000c694:	mov    rsi,rdi
   14000c697:	mov    ebx,r12d
   14000c69a:	jmp    0x14000c6a1
   14000c69c:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c6a1:	lea    r15,[rdi+r14*2]
   14000c6a5:	mov    ebp,0x80070057
   14000c6aa:	cmp    rsi,r15
   14000c6ad:	cmovae ebx,ebp
   14000c6b0:	test   ebx,ebx
   14000c6b2:	js     0x14000c6fe
   14000c6b4:	mov    rcx,rsi
   14000c6b7:	jmp    0x14000c6c5
   14000c6b9:	mov    rsi,rax
   14000c6bc:	cmp    rax,r15
   14000c6bf:	jae    0x14000c6d7
   14000c6c1:	lea    rcx,[rax+0x2]
   14000c6c5:	mov    edx,0x5c
   14000c6ca:	call   QWORD PTR [rip+0x1e30]        # 0x14000e500
   14000c6d0:	test   rax,rax
   14000c6d3:	jne    0x14000c6b9
   14000c6d5:	jmp    0x14000c6d9
   14000c6d7:	mov    ebx,ebp
   14000c6d9:	test   ebx,ebx
   14000c6db:	js     0x14000c6fe
   14000c6dd:	mov    rdx,r14
   14000c6e0:	mov    rcx,rdi
   14000c6e3:	cmp    WORD PTR [rsi],r12w
   14000c6e7:	jne    0x14000c6f2
   14000c6e9:	call   0x14000c4ac
   14000c6ee:	mov    ebx,eax
   14000c6f0:	jmp    0x14000c6fe
   14000c6f2:	mov    WORD PTR [rsi],r12w
   14000c6f6:	call   0x14000c4ac
   14000c6fb:	mov    ebx,r12d
   14000c6fe:	mov    eax,ebx
   14000c700:	jmp    0x14000c707
   14000c702:	mov    eax,0x80070057
   14000c707:	mov    rbx,QWORD PTR [rsp+0x58]
   14000c70c:	mov    rbp,QWORD PTR [rsp+0x60]
   14000c711:	add    rsp,0x20
   14000c715:	pop    r15
   14000c717:	pop    r14
   14000c719:	pop    r12
   14000c71b:	pop    rdi
   14000c71c:	pop    rsi
   14000c71d:	ret    
   14000c71e:	int3   
   14000c71f:	int3   
   14000c720:	int3   
   14000c721:	int3   
   14000c722:	int3   
   14000c723:	int3   
   14000c724:	xor    r10d,r10d
   14000c727:	lea    r8,[rcx+0x208]
   14000c72e:	mov    r9,rdx
   14000c731:	mov    eax,r10d
   14000c734:	cmp    rcx,r8
   14000c737:	jae    0x14000c774
   14000c739:	cmp    WORD PTR [rcx],r10w
   14000c73d:	je     0x14000c75d
   14000c73f:	movzx  edx,WORD PTR [rcx]
   14000c742:	cmp    edx,0x20
   14000c745:	je     0x14000c751
   14000c747:	cmp    edx,0x2e
   14000c74a:	je     0x14000c76f
   14000c74c:	cmp    edx,0x5c
   14000c74f:	jne    0x14000c754
   14000c751:	mov    rax,r10
   14000c754:	add    rcx,0x2
   14000c758:	cmp    rcx,r8
   14000c75b:	jb     0x14000c739
   14000c75d:	cmp    rcx,r8
   14000c760:	jae    0x14000c774
   14000c762:	test   rax,rax
   14000c765:	cmovne rcx,rax
   14000c769:	xor    eax,eax
   14000c76b:	mov    QWORD PTR [r9],rcx
   14000c76e:	ret    
   14000c76f:	mov    rax,rcx
   14000c772:	jmp    0x14000c754
   14000c774:	mov    eax,0x80070057
   14000c779:	ret    
   14000c77a:	int3   
   14000c77b:	int3   
   14000c77c:	int3   
   14000c77d:	int3   
   14000c77e:	int3   
   14000c77f:	int3   
   14000c780:	mov    r11,rcx
   14000c783:	xor    r10d,r10d
   14000c786:	movzx  r9d,WORD PTR [r11]
   14000c78a:	lea    r11,[r11+0x2]
   14000c78e:	lea    eax,[r9-0x41]
   14000c792:	cmp    eax,0x19
   14000c795:	ja     0x14000c79b
   14000c797:	add    r9d,0x20
   14000c79b:	movzx  ecx,WORD PTR [rdx]
   14000c79e:	add    rdx,0x2
   14000c7a2:	lea    eax,[rcx-0x41]
   14000c7a5:	cmp    eax,0x19
   14000c7a8:	ja     0x14000c7ad
   14000c7aa:	add    ecx,0x20
   14000c7ad:	sub    r8d,0x1
   14000c7b1:	je     0x14000c7bd
   14000c7b3:	test   r9d,r9d
   14000c7b6:	je     0x14000c7bd
   14000c7b8:	cmp    r9d,ecx
   14000c7bb:	je     0x14000c786
   14000c7bd:	cmp    r9d,ecx
   14000c7c0:	sete   r10b
   14000c7c4:	mov    eax,r10d
   14000c7c7:	ret    
   14000c7c8:	int3   
   14000c7c9:	int3   
   14000c7ca:	int3   
   14000c7cb:	int3   
   14000c7cc:	int3   
   14000c7cd:	int3   
   14000c7ce:	int3   
   14000c7cf:	int3   
   14000c7d0:	rex push rbx
   14000c7d2:	sub    rsp,0x20
   14000c7d6:	mov    r8d,0xa
   14000c7dc:	lea    rdx,[rip+0x4ebd]        # 0x1400116a0
   14000c7e3:	mov    rbx,rcx
   14000c7e6:	call   0x14000c780
   14000c7eb:	test   eax,eax
   14000c7ed:	je     0x14000c841
   14000c7ef:	xor    r9d,r9d
   14000c7f2:	lea    r8,[rip+0x4ec7]        # 0x1400116c0
   14000c7f9:	add    rbx,0x14
   14000c7fd:	sub    rbx,r8
   14000c800:	lea    edx,[r9+0x1]
   14000c804:	movzx  ecx,WORD PTR [rbx+r8*1]
   14000c809:	cmp    cx,WORD PTR [r8]
   14000c80d:	je     0x14000c832
   14000c80f:	cmp    WORD PTR [r8],0x30
   14000c814:	jne    0x14000c841
   14000c816:	lea    eax,[rcx-0x30]
   14000c819:	cmp    ax,0x9
   14000c81d:	jbe    0x14000c832
   14000c81f:	lea    eax,[rcx-0x41]
   14000c822:	cmp    ax,0x5
   14000c826:	jbe    0x14000c832
   14000c828:	sub    cx,0x61
   14000c82c:	cmp    cx,0x5
   14000c830:	ja     0x14000c841
   14000c832:	add    r9d,edx
   14000c835:	add    r8,0x2
   14000c839:	cmp    r9d,0x26
   14000c83d:	jb     0x14000c804
   14000c83f:	jmp    0x14000c843
   14000c841:	xor    edx,edx
   14000c843:	mov    eax,edx
   14000c845:	add    rsp,0x20
   14000c849:	pop    rbx
   14000c84a:	ret    
   14000c84b:	int3   
   14000c84c:	int3   
   14000c84d:	int3   
   14000c84e:	int3   
   14000c84f:	int3   
   14000c850:	int3   
   14000c851:	int3   
   14000c852:	int3   
   14000c853:	int3   
   14000c854:	int3   
   14000c855:	int3   
   14000c856:	int3   
   14000c857:	int3   
   14000c858:	int3   
   14000c859:	int3   
   14000c85a:	int3   
   14000c85b:	int3   
   14000c85c:	int3   
   14000c85d:	int3   
   14000c85e:	int3   
   14000c85f:	int3   
   14000c860:	sub    rsp,0x28
   14000c864:	mov    eax,0x5a4d
   14000c869:	cmp    WORD PTR [rip+0xffffffffffff3790],ax        # 0x140000000
   14000c870:	je     0x14000c876
   14000c872:	xor    eax,eax
   14000c874:	jmp    0x14000c8c5
   14000c876:	movsxd rcx,DWORD PTR [rip+0xffffffffffff37bf]        # 0x14000003c
   14000c87d:	lea    rax,[rip+0xffffffffffff377c]        # 0x140000000
   14000c884:	add    rcx,rax
   14000c887:	cmp    DWORD PTR [rcx],0x4550
   14000c88d:	jne    0x14000c872
   14000c88f:	movzx  eax,WORD PTR [rcx+0x18]
   14000c893:	cmp    eax,0x10b
   14000c898:	je     0x14000c8b4
   14000c89a:	cmp    eax,0x20b
   14000c89f:	jne    0x14000c872
   14000c8a1:	xor    eax,eax
   14000c8a3:	cmp    DWORD PTR [rcx+0x84],0xe
   14000c8aa:	jbe    0x14000c8c5
   14000c8ac:	cmp    DWORD PTR [rcx+0xf8],eax
   14000c8b2:	jmp    0x14000c8c2
   14000c8b4:	xor    eax,eax
   14000c8b6:	cmp    DWORD PTR [rcx+0x74],0xe
   14000c8ba:	jbe    0x14000c8c5
   14000c8bc:	cmp    DWORD PTR [rcx+0xe8],eax
   14000c8c2:	setne  al
   14000c8c5:	mov    ecx,0x2
   14000c8ca:	mov    DWORD PTR [rip+0x7790],eax        # 0x140014060
   14000c8d0:	call   0x14000cfb8
   14000c8d5:	mov    ecx,eax
   14000c8d7:	call   QWORD PTR [rip+0x1c9b]        # 0x14000e578
   14000c8dd:	mov    rcx,QWORD PTR [rip+0x1d04]        # 0x14000e5e8
   14000c8e4:	or     rax,0xffffffffffffffff
   14000c8e8:	mov    QWORD PTR [rip+0x7f51],rax        # 0x140014840
   14000c8ef:	mov    QWORD PTR [rip+0x7f52],rax        # 0x140014848
   14000c8f6:	mov    eax,DWORD PTR [rip+0x7cf0]        # 0x1400145ec
   14000c8fc:	mov    DWORD PTR [rcx],eax
   14000c8fe:	mov    rcx,QWORD PTR [rip+0x1cb3]        # 0x14000e5b8
   14000c905:	mov    eax,DWORD PTR [rip+0x7cd5]        # 0x1400145e0
   14000c90b:	mov    DWORD PTR [rcx],eax
   14000c90d:	call   0x14000d010
   14000c912:	cmp    DWORD PTR [rip+0x76e7],0x0        # 0x140014000
   14000c919:	jne    0x14000c928
   14000c91b:	lea    rcx,[rip+0x6ee]        # 0x14000d010
   14000c922:	call   QWORD PTR [rip+0x1c70]        # 0x14000e598
   14000c928:	xor    eax,eax
   14000c92a:	add    rsp,0x28
   14000c92e:	ret    
   14000c92f:	int3   
   14000c930:	int3   
   14000c931:	int3   
   14000c932:	int3   
   14000c933:	int3   
   14000c934:	int3   
   14000c935:	int3   
   14000c936:	int3   
   14000c937:	int3   
   14000c938:	int3   
   14000c939:	int3   
   14000c93a:	int3   
   14000c93b:	int3   
   14000c93c:	int3   
   14000c93d:	int3   
   14000c93e:	int3   
   14000c93f:	int3   
   14000c940:	sub    rsp,0x38
   14000c944:	mov    eax,DWORD PTR [rip+0x7c9e]        # 0x1400145e8
   14000c94a:	lea    r8,[rip+0x7707]        # 0x140014058
   14000c951:	mov    r9d,DWORD PTR [rip+0x7c8c]        # 0x1400145e4
   14000c958:	lea    rdx,[rip+0x76f1]        # 0x140014050
   14000c95f:	mov    DWORD PTR [rip+0x76ff],eax        # 0x140014064
   14000c965:	lea    rcx,[rip+0x76dc]        # 0x140014048
   14000c96c:	lea    rax,[rip+0x76f1]        # 0x140014064
   14000c973:	mov    QWORD PTR [rsp+0x20],rax
   14000c978:	call   QWORD PTR [rip+0x1bf2]        # 0x14000e570
   14000c97e:	mov    DWORD PTR [rip+0x76c8],eax        # 0x14001404c
   14000c984:	add    rsp,0x38
   14000c988:	ret    
   14000c989:	int3   
   14000c98a:	int3   
   14000c98b:	int3   
   14000c98c:	int3   
   14000c98d:	int3   
   14000c98e:	int3   
   14000c98f:	int3   
   14000c990:	mov    QWORD PTR [rsp+0x8],rbx
   14000c995:	mov    QWORD PTR [rsp+0x10],rsi
   14000c99a:	mov    QWORD PTR [rsp+0x18],rdi
   14000c99f:	push   r12
   14000c9a1:	push   r14
   14000c9a3:	push   r15
   14000c9a5:	sub    rsp,0xb0
   14000c9ac:	xor    r15d,r15d
   14000c9af:	mov    DWORD PTR [rsp+0x20],r15d
   14000c9b4:	lea    rcx,[rsp+0x40]
   14000c9b9:	call   QWORD PTR [rip+0x19d9]        # 0x14000e398
   14000c9bf:	nop
   14000c9c0:	mov    rax,QWORD PTR gs:0x30
   14000c9c9:	mov    rbx,QWORD PTR [rax+0x8]
   14000c9cd:	mov    r14d,r15d
   14000c9d0:	xor    eax,eax
   14000c9d2:	lock cmpxchg QWORD PTR [rip+0x7e55],rbx        # 0x140014830
   14000c9db:	je     0x14000c9f9
   14000c9dd:	cmp    rax,rbx
   14000c9e0:	jne    0x14000c9ec
   14000c9e2:	mov    edi,0x1
   14000c9e7:	mov    r14d,edi
   14000c9ea:	jmp    0x14000c9fe
   14000c9ec:	mov    ecx,0x3e8
   14000c9f1:	call   QWORD PTR [rip+0x19a9]        # 0x14000e3a0
   14000c9f7:	jmp    0x14000c9d0
   14000c9f9:	mov    edi,0x1
   14000c9fe:	mov    eax,DWORD PTR [rip+0x7e34]        # 0x140014838
   14000ca04:	cmp    eax,edi
   14000ca06:	jne    0x14000ca16
   14000ca08:	mov    esi,0x1f
   14000ca0d:	mov    ecx,esi
   14000ca0f:	call   0x14000d004
   14000ca14:	jmp    0x14000ca87
   14000ca16:	mov    eax,DWORD PTR [rip+0x7e1c]        # 0x140014838
   14000ca1c:	test   eax,eax
   14000ca1e:	jne    0x14000ca7c
   14000ca20:	mov    DWORD PTR [rip+0x7e12],edi        # 0x140014838
   14000ca26:	lea    r12,[rip+0x1cfb]        # 0x14000e728
   14000ca2d:	lea    rbx,[rip+0x1cdc]        # 0x14000e710
   14000ca34:	mov    QWORD PTR [rsp+0x30],rbx
   14000ca39:	mov    eax,r15d
   14000ca3c:	mov    DWORD PTR [rsp+0x24],eax
   14000ca40:	cmp    rbx,r12
   14000ca43:	jae    0x14000ca6e
   14000ca45:	test   eax,eax
   14000ca47:	jne    0x14000ca72
   14000ca49:	mov    rsi,QWORD PTR [rbx]
   14000ca4c:	test   rsi,rsi
   14000ca4f:	je     0x14000ca63
   14000ca51:	mov    rcx,rsi
   14000ca54:	mov    rax,QWORD PTR [rip+0x1c6d]        # 0x14000e6c8
   14000ca5b:	call   rax
   14000ca5d:	call   rsi
   14000ca5f:	mov    DWORD PTR [rsp+0x24],eax
   14000ca63:	add    rbx,0x8
   14000ca67:	mov    QWORD PTR [rsp+0x30],rbx
   14000ca6c:	jmp    0x14000ca40
   14000ca6e:	test   eax,eax
   14000ca70:	je     0x14000ca82
   14000ca72:	mov    eax,0xff
   14000ca77:	jmp    0x14000cbe3
   14000ca7c:	mov    DWORD PTR [rip+0x75c2],edi        # 0x140014044
   14000ca82:	mov    esi,0x1f
   14000ca87:	mov    eax,DWORD PTR [rip+0x7dab]        # 0x140014838
   14000ca8d:	cmp    eax,edi
   14000ca8f:	jne    0x14000caae
   14000ca91:	lea    rdx,[rip+0x1c70]        # 0x14000e708
   14000ca98:	lea    rcx,[rip+0x1c39]        # 0x14000e6d8
   14000ca9f:	call   0x14000d1da
   14000caa4:	mov    DWORD PTR [rip+0x7d8a],0x2        # 0x140014838
   14000caae:	test   r14d,r14d
   14000cab1:	jne    0x14000cabd
   14000cab3:	mov    rax,r15
   14000cab6:	xchg   QWORD PTR [rip+0x7d73],rax        # 0x140014830
   14000cabd:	cmp    QWORD PTR [rip+0x7d8c],r15        # 0x140014850
   14000cac4:	je     0x14000caf4
   14000cac6:	lea    rcx,[rip+0x7d83]        # 0x140014850
   14000cacd:	call   0x14000d070
   14000cad2:	test   eax,eax
   14000cad4:	je     0x14000caf4
   14000cad6:	mov    rbx,QWORD PTR [rip+0x7d73]        # 0x140014850
   14000cadd:	mov    rcx,rbx
   14000cae0:	mov    rax,QWORD PTR [rip+0x1be1]        # 0x14000e6c8
   14000cae7:	call   rax
   14000cae9:	xor    r8d,r8d
   14000caec:	lea    edx,[r8+0x2]
   14000caf0:	xor    ecx,ecx
   14000caf2:	call   rbx
   14000caf4:	mov    rax,QWORD PTR [rip+0x1ab5]        # 0x14000e5b0
   14000cafb:	mov    rdx,QWORD PTR [rax]
   14000cafe:	test   rdx,rdx
   14000cb01:	jne    0x14000cb0d
   14000cb03:	mov    eax,0xff
   14000cb08:	jmp    0x14000cbe3
   14000cb0d:	mov    QWORD PTR [rsp+0x28],rdx
   14000cb12:	mov    ecx,DWORD PTR [rsp+0x20]
   14000cb16:	cmp    WORD PTR [rdx],0x20
   14000cb1a:	ja     0x14000cb94
   14000cb1c:	cmp    WORD PTR [rdx],r15w
   14000cb20:	je     0x14000cb26
   14000cb22:	test   ecx,ecx
   14000cb24:	jne    0x14000cb94
   14000cb26:	movzx  eax,WORD PTR [rdx]
   14000cb29:	sub    ax,di
   14000cb2c:	cmp    ax,si
   14000cb2f:	ja     0x14000cb3c
   14000cb31:	add    rdx,0x2
   14000cb35:	mov    QWORD PTR [rsp+0x28],rdx
   14000cb3a:	jmp    0x14000cb26
   14000cb3c:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000cb40:	movzx  eax,WORD PTR [rsp+0x80]
   14000cb48:	mov    r9d,0xa
   14000cb4e:	and    cl,dil
   14000cb51:	cmovne r9d,eax
   14000cb55:	mov    r8,rdx
   14000cb58:	xor    edx,edx
   14000cb5a:	lea    rcx,[rip+0xffffffffffff349f]        # 0x140000000
   14000cb61:	call   0x140009080
   14000cb66:	mov    DWORD PTR [rip+0x74d4],eax        # 0x140014040
   14000cb6c:	cmp    DWORD PTR [rip+0x74ed],r15d        # 0x140014060
   14000cb73:	jne    0x14000cb7d
   14000cb75:	mov    ecx,eax
   14000cb77:	call   QWORD PTR [rip+0x1a03]        # 0x14000e580
   14000cb7d:	cmp    DWORD PTR [rip+0x74c0],r15d        # 0x140014044
   14000cb84:	jne    0x14000cb92
   14000cb86:	call   QWORD PTR [rip+0x1a04]        # 0x14000e590
   14000cb8c:	mov    eax,DWORD PTR [rip+0x74ae]        # 0x140014040
   14000cb92:	jmp    0x14000cbe3
   14000cb94:	cmp    WORD PTR [rdx],0x22
   14000cb98:	jne    0x14000cba8
   14000cb9a:	mov    eax,r15d
   14000cb9d:	test   ecx,ecx
   14000cb9f:	sete   al
   14000cba2:	mov    ecx,eax
   14000cba4:	mov    DWORD PTR [rsp+0x20],eax
   14000cba8:	add    rdx,0x2
   14000cbac:	mov    QWORD PTR [rsp+0x28],rdx
   14000cbb1:	jmp    0x14000cb16
   14000cbb6:	mov    DWORD PTR [rip+0x7484],eax        # 0x140014040
   14000cbbc:	cmp    DWORD PTR [rip+0x749d],0x0        # 0x140014060
   14000cbc3:	jne    0x14000cbce
   14000cbc5:	mov    ecx,eax
   14000cbc7:	call   QWORD PTR [rip+0x19bb]        # 0x14000e588
   14000cbcd:	int3   
   14000cbce:	cmp    DWORD PTR [rip+0x746f],0x0        # 0x140014044
   14000cbd5:	jne    0x14000cbe3
   14000cbd7:	call   QWORD PTR [rip+0x19b3]        # 0x14000e590
   14000cbdd:	mov    eax,DWORD PTR [rip+0x745d]        # 0x140014040
   14000cbe3:	lea    r11,[rsp+0xb0]
   14000cbeb:	mov    rbx,QWORD PTR [r11+0x20]
   14000cbef:	mov    rsi,QWORD PTR [r11+0x28]
   14000cbf3:	mov    rdi,QWORD PTR [r11+0x30]
   14000cbf7:	mov    rsp,r11
   14000cbfa:	pop    r15
   14000cbfc:	pop    r14
   14000cbfe:	pop    r12
   14000cc00:	ret    
   14000cc01:	int3   
   14000cc02:	int3   
   14000cc03:	int3   
   14000cc04:	int3   
   14000cc05:	int3   
   14000cc06:	int3   
   14000cc07:	int3   
   14000cc08:	int3   
   14000cc09:	int3   
   14000cc0a:	int3   
   14000cc0b:	int3   
   14000cc0c:	int3   
   14000cc0d:	int3   
   14000cc0e:	int3   
   14000cc0f:	int3   
   14000cc10:	sub    rsp,0x28
   14000cc14:	call   0x14000d104
   14000cc19:	add    rsp,0x28
   14000cc1d:	jmp    0x14000c990
   14000cc22:	int3   
   14000cc23:	int3   
   14000cc24:	int3   
   14000cc25:	int3   
   14000cc26:	int3   
   14000cc27:	int3   
   14000cc28:	int3   
   14000cc29:	int3   
   14000cc2a:	int3   
   14000cc2b:	int3   
   14000cc2c:	int3   
   14000cc2d:	int3   
   14000cc2e:	int3   
   14000cc2f:	int3   
   14000cc30:	int3   
   14000cc31:	int3   
   14000cc32:	int3   
   14000cc33:	int3   
   14000cc34:	int3   
   14000cc35:	int3   
   14000cc36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000cc40:	cmp    rcx,QWORD PTR [rip+0x73c1]        # 0x140014008
   14000cc47:	jne    0x14000cc59
   14000cc49:	rol    rcx,0x10
   14000cc4d:	test   cx,0xffff
   14000cc52:	jne    0x14000cc55
   14000cc54:	ret    
   14000cc55:	ror    rcx,0x10
   14000cc59:	jmp    0x14000cca0
   14000cc5e:	int3   
   14000cc5f:	int3   
   14000cc60:	int3   
   14000cc61:	int3   
   14000cc62:	int3   
   14000cc63:	int3   
   14000cc64:	rex push rbx
   14000cc66:	sub    rsp,0x20
   14000cc6a:	mov    rbx,rcx
   14000cc6d:	xor    ecx,ecx
   14000cc6f:	call   QWORD PTR [rip+0x16e3]        # 0x14000e358
   14000cc75:	mov    rcx,rbx
   14000cc78:	call   QWORD PTR [rip+0x1712]        # 0x14000e390
   14000cc7e:	call   QWORD PTR [rip+0x175c]        # 0x14000e3e0
   14000cc84:	mov    rcx,rax
   14000cc87:	mov    edx,0xc0000409
   14000cc8c:	add    rsp,0x20
   14000cc90:	pop    rbx
   14000cc91:	rex.W jmp QWORD PTR [rip+0x16b8]        # 0x14000e350
   14000cc98:	int3   
   14000cc99:	int3   
   14000cc9a:	int3   
   14000cc9b:	int3   
   14000cc9c:	int3   
   14000cc9d:	int3   
   14000cc9e:	int3   
   14000cc9f:	int3   
   14000cca0:	mov    QWORD PTR [rsp+0x8],rcx
   14000cca5:	sub    rsp,0x88
   14000ccac:	lea    rcx,[rip+0x745d]        # 0x140014110
   14000ccb3:	call   QWORD PTR [rip+0x194f]        # 0x14000e608
   14000ccb9:	mov    rax,QWORD PTR [rip+0x7548]        # 0x140014208
   14000ccc0:	mov    QWORD PTR [rsp+0x48],rax
   14000ccc5:	xor    r8d,r8d
   14000ccc8:	lea    rdx,[rsp+0x50]
   14000cccd:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ccd2:	call   QWORD PTR [rip+0x1928]        # 0x14000e600
   14000ccd8:	mov    QWORD PTR [rsp+0x40],rax
   14000ccdd:	cmp    QWORD PTR [rsp+0x40],0x0
   14000cce3:	je     0x14000cd27
   14000cce5:	mov    QWORD PTR [rsp+0x38],0x0
   14000ccee:	lea    rax,[rsp+0x58]
   14000ccf3:	mov    QWORD PTR [rsp+0x30],rax
   14000ccf8:	lea    rax,[rsp+0x60]
   14000ccfd:	mov    QWORD PTR [rsp+0x28],rax
   14000cd02:	lea    rax,[rip+0x7407]        # 0x140014110
   14000cd09:	mov    QWORD PTR [rsp+0x20],rax
   14000cd0e:	mov    r9,QWORD PTR [rsp+0x40]
   14000cd13:	mov    r8,QWORD PTR [rsp+0x48]
   14000cd18:	mov    rdx,QWORD PTR [rsp+0x50]
   14000cd1d:	xor    ecx,ecx
   14000cd1f:	call   QWORD PTR [rip+0x18d3]        # 0x14000e5f8
   14000cd25:	jmp    0x14000cd4a
   14000cd27:	mov    rax,QWORD PTR [rip+0x747a]        # 0x1400141a8
   14000cd2e:	mov    rax,QWORD PTR [rax]
   14000cd31:	mov    QWORD PTR [rip+0x74d0],rax        # 0x140014208
   14000cd38:	mov    rax,QWORD PTR [rip+0x7469]        # 0x1400141a8
   14000cd3f:	add    rax,0x8
   14000cd43:	mov    QWORD PTR [rip+0x745e],rax        # 0x1400141a8
   14000cd4a:	mov    rax,QWORD PTR [rip+0x74b7]        # 0x140014208
   14000cd51:	mov    QWORD PTR [rip+0x7328],rax        # 0x140014080
   14000cd58:	mov    rax,QWORD PTR [rsp+0x90]
   14000cd60:	mov    QWORD PTR [rip+0x7429],rax        # 0x140014190
   14000cd67:	mov    DWORD PTR [rip+0x72ff],0xc0000409        # 0x140014070
   14000cd71:	mov    DWORD PTR [rip+0x72f9],0x1        # 0x140014074
   14000cd7b:	mov    DWORD PTR [rip+0x7303],0x3        # 0x140014088
   14000cd85:	mov    eax,0x8
   14000cd8a:	imul   rax,rax,0x0
   14000cd8e:	lea    rcx,[rip+0x72fb]        # 0x140014090
   14000cd95:	mov    QWORD PTR [rcx+rax*1],0x2
   14000cd9d:	mov    eax,0x8
   14000cda2:	imul   rax,rax,0x1
   14000cda6:	lea    rcx,[rip+0x72e3]        # 0x140014090
   14000cdad:	mov    rdx,QWORD PTR [rip+0x7254]        # 0x140014008
   14000cdb4:	mov    QWORD PTR [rcx+rax*1],rdx
   14000cdb8:	mov    eax,0x8
   14000cdbd:	imul   rax,rax,0x2
   14000cdc1:	lea    rcx,[rip+0x72c8]        # 0x140014090
   14000cdc8:	mov    rdx,QWORD PTR [rip+0x7241]        # 0x140014010
   14000cdcf:	mov    QWORD PTR [rcx+rax*1],rdx
   14000cdd3:	mov    eax,0x8
   14000cdd8:	imul   rax,rax,0x0
   14000cddc:	mov    rcx,QWORD PTR [rip+0x7225]        # 0x140014008
   14000cde3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000cde8:	mov    eax,0x8
   14000cded:	imul   rax,rax,0x1
   14000cdf1:	mov    rcx,QWORD PTR [rip+0x7218]        # 0x140014010
   14000cdf8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000cdfd:	lea    rcx,[rip+0x1a4c]        # 0x14000e850
   14000ce04:	call   0x14000cc64
   14000ce09:	add    rsp,0x88
   14000ce10:	ret    
   14000ce11:	int3   
   14000ce12:	int3   
   14000ce13:	int3   
   14000ce14:	int3   
   14000ce15:	int3   
   14000ce16:	int3   
   14000ce17:	int3   
   14000ce18:	jmp    QWORD PTR [rip+0x16e2]        # 0x14000e500
   14000ce1e:	int3   
   14000ce1f:	int3   
   14000ce20:	int3   
   14000ce21:	int3   
   14000ce22:	int3   
   14000ce23:	int3   
   14000ce24:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce29:	push   rdi
   14000ce2a:	sub    rsp,0x20
   14000ce2e:	mov    rdi,rcx
   14000ce31:	mov    rax,QWORD PTR [rip+0x7a10]        # 0x140014848
   14000ce38:	mov    QWORD PTR [rsp+0x38],rax
   14000ce3d:	cmp    rax,0xffffffffffffffff
   14000ce41:	jne    0x14000ce5a
   14000ce43:	mov    rbx,QWORD PTR [rip+0x1796]        # 0x14000e5e0
   14000ce4a:	mov    rcx,rbx
   14000ce4d:	call   QWORD PTR [rip+0x1875]        # 0x14000e6c8
   14000ce53:	mov    rcx,rdi
   14000ce56:	call   rbx
   14000ce58:	jmp    0x14000ceb7
   14000ce5a:	mov    ecx,0x8
   14000ce5f:	call   0x14000d20a
   14000ce64:	nop
   14000ce65:	mov    rax,QWORD PTR [rip+0x79dc]        # 0x140014848
   14000ce6c:	mov    QWORD PTR [rsp+0x38],rax
   14000ce71:	mov    rax,QWORD PTR [rip+0x79c8]        # 0x140014840
   14000ce78:	mov    QWORD PTR [rsp+0x40],rax
   14000ce7d:	lea    r8,[rsp+0x40]
   14000ce82:	lea    rdx,[rsp+0x38]
   14000ce87:	mov    rcx,rdi
   14000ce8a:	call   0x14000d222
   14000ce8f:	mov    rbx,rax
   14000ce92:	mov    rdx,QWORD PTR [rsp+0x38]
   14000ce97:	mov    QWORD PTR [rip+0x79aa],rdx        # 0x140014848
   14000ce9e:	mov    rdx,QWORD PTR [rsp+0x40]
   14000cea3:	mov    QWORD PTR [rip+0x7996],rdx        # 0x140014840
   14000ceaa:	mov    ecx,0x8
   14000ceaf:	call   0x14000d216
   14000ceb4:	mov    rax,rbx
   14000ceb7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cebc:	add    rsp,0x20
   14000cec0:	pop    rdi
   14000cec1:	ret    
   14000cec2:	int3   
   14000cec3:	int3   
   14000cec4:	int3   
   14000cec5:	int3   
   14000cec6:	int3   
   14000cec7:	int3   
   14000cec8:	sub    rsp,0x28
   14000cecc:	call   0x14000ce24
   14000ced1:	neg    rax
   14000ced4:	sbb    eax,eax
   14000ced6:	neg    eax
   14000ced8:	dec    eax
   14000ceda:	add    rsp,0x28
   14000cede:	ret    
   14000cedf:	int3   
   14000cee0:	int3   
   14000cee1:	int3   
   14000cee2:	int3   
   14000cee3:	int3   
   14000cee4:	int3   
   14000cee5:	int3   
   14000cee6:	int3   
   14000cee7:	int3   
   14000cee8:	int3   
   14000cee9:	int3   
   14000ceea:	int3   
   14000ceeb:	int3   
   14000ceec:	int3   
   14000ceed:	int3   
   14000ceee:	int3   
   14000ceef:	int3   
   14000cef0:	sub    rsp,0x28
   14000cef4:	mov    rax,QWORD PTR [rcx]
   14000cef7:	cmp    DWORD PTR [rax],0xe06d7363
   14000cefd:	jne    0x14000cf22
   14000ceff:	cmp    DWORD PTR [rax+0x18],0x4
   14000cf03:	jne    0x14000cf22
   14000cf05:	mov    ecx,DWORD PTR [rax+0x20]
   14000cf08:	lea    eax,[rcx-0x19930520]
   14000cf0e:	cmp    eax,0x2
   14000cf11:	jbe    0x14000cf1b
   14000cf13:	cmp    ecx,0x1994000
   14000cf19:	jne    0x14000cf22
   14000cf1b:	call   QWORD PTR [rip+0x16b7]        # 0x14000e5d8
   14000cf21:	int3   
   14000cf22:	xor    eax,eax
   14000cf24:	add    rsp,0x28
   14000cf28:	ret    
   14000cf29:	int3   
   14000cf2a:	int3   
   14000cf2b:	int3   
   14000cf2c:	int3   
   14000cf2d:	int3   
   14000cf2e:	int3   
   14000cf2f:	int3   
   14000cf30:	sub    rsp,0x28
   14000cf34:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000cef0
   14000cf3b:	call   QWORD PTR [rip+0x1417]        # 0x14000e358
   14000cf41:	xor    eax,eax
   14000cf43:	add    rsp,0x28
   14000cf47:	ret    
   14000cf48:	int3   
   14000cf49:	int3   
   14000cf4a:	int3   
   14000cf4b:	int3   
   14000cf4c:	int3   
   14000cf4d:	int3   
   14000cf4e:	jmp    QWORD PTR [rip+0x160c]        # 0x14000e560
   14000cf54:	int3   
   14000cf55:	int3   
   14000cf56:	int3   
   14000cf57:	int3   
   14000cf58:	int3   
   14000cf59:	int3   
   14000cf5a:	int3   
   14000cf5b:	int3   
   14000cf5c:	sub    rsp,0x18
   14000cf60:	xor    edx,edx
   14000cf62:	lea    rax,[rcx-0x1]
   14000cf66:	cmp    rax,0xfffffffffffffffd
   14000cf6a:	ja     0x14000cfa8
   14000cf6c:	mov    eax,0x5a4d
   14000cf71:	cmp    WORD PTR [rcx],ax
   14000cf74:	jne    0x14000cfa0
   14000cf76:	cmp    DWORD PTR [rcx+0x3c],edx
   14000cf79:	jl     0x14000cfa0
   14000cf7b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000cf82:	jae    0x14000cfa0
   14000cf84:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000cf88:	add    rax,rcx
   14000cf8b:	mov    QWORD PTR [rsp],rax
   14000cf8f:	cmp    DWORD PTR [rax],0x4550
   14000cf95:	cmovne rax,rdx
   14000cf99:	mov    rdx,rax
   14000cf9c:	mov    QWORD PTR [rsp],rax
   14000cfa0:	jmp    0x14000cfa8
   14000cfa2:	xor    edx,edx
   14000cfa4:	mov    QWORD PTR [rsp],rdx
   14000cfa8:	mov    rax,rdx
   14000cfab:	add    rsp,0x18
   14000cfaf:	ret    
   14000cfb0:	int3   
   14000cfb1:	int3   
   14000cfb2:	int3   
   14000cfb3:	int3   
   14000cfb4:	int3   
   14000cfb5:	int3   
   14000cfb6:	int3   
   14000cfb7:	int3   
   14000cfb8:	rex push rbx
   14000cfba:	sub    rsp,0x20
   14000cfbe:	mov    ebx,ecx
   14000cfc0:	xor    ecx,ecx
   14000cfc2:	call   QWORD PTR [rip+0x1318]        # 0x14000e2e0
   14000cfc8:	test   rax,rax
   14000cfcb:	je     0x14000cff5
   14000cfcd:	mov    rcx,rax
   14000cfd0:	call   0x14000cf5c
   14000cfd5:	test   rax,rax
   14000cfd8:	je     0x14000cff5
   14000cfda:	mov    ecx,0x2
   14000cfdf:	cmp    WORD PTR [rax+0x5c],cx
   14000cfe3:	jne    0x14000cfe9
   14000cfe5:	mov    eax,ecx
   14000cfe7:	jmp    0x14000cff7
   14000cfe9:	cmp    WORD PTR [rax+0x5c],0x3
   14000cfee:	mov    eax,0x1
   14000cff3:	je     0x14000cff7
   14000cff5:	mov    eax,ebx
   14000cff7:	add    rsp,0x20
   14000cffb:	pop    rbx
   14000cffc:	ret    
   14000cffd:	int3   
   14000cffe:	int3   
   14000cfff:	int3   
   14000d000:	int3   
   14000d001:	int3   
   14000d002:	int3   
   14000d003:	int3   
   14000d004:	jmp    QWORD PTR [rip+0x155e]        # 0x14000e568
   14000d00a:	int3   
   14000d00b:	int3   
   14000d00c:	int3   
   14000d00d:	int3   
   14000d00e:	int3   
   14000d00f:	int3   
   14000d010:	xor    eax,eax
   14000d012:	ret    
   14000d013:	int3   
   14000d014:	int3   
   14000d015:	int3   
   14000d016:	int3   
   14000d017:	int3   
   14000d018:	int3   
   14000d019:	int3   
   14000d01a:	int3   
   14000d01b:	int3   
   14000d01c:	int3   
   14000d01d:	int3   
   14000d01e:	int3   
   14000d01f:	int3   
   14000d020:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000d024:	xor    r9d,r9d
   14000d027:	add    r8,rcx
   14000d02a:	mov    r10,rdx
   14000d02d:	movzx  eax,WORD PTR [r8+0x14]
   14000d032:	movzx  r11d,WORD PTR [r8+0x6]
   14000d037:	add    rax,0x18
   14000d03b:	add    rax,r8
   14000d03e:	test   r11d,r11d
   14000d041:	je     0x14000d061
   14000d043:	mov    edx,DWORD PTR [rax+0xc]
   14000d046:	cmp    r10,rdx
   14000d049:	jb     0x14000d055
   14000d04b:	mov    ecx,DWORD PTR [rax+0x8]
   14000d04e:	add    ecx,edx
   14000d050:	cmp    r10,rcx
   14000d053:	jb     0x14000d063
   14000d055:	inc    r9d
   14000d058:	add    rax,0x28
   14000d05c:	cmp    r9d,r11d
   14000d05f:	jb     0x14000d043
   14000d061:	xor    eax,eax
   14000d063:	ret    
   14000d064:	int3   
   14000d065:	int3   
   14000d066:	int3   
   14000d067:	int3   
   14000d068:	int3   
   14000d069:	int3   
   14000d06a:	int3   
   14000d06b:	int3   
   14000d06c:	int3   
   14000d06d:	int3   
   14000d06e:	int3   
   14000d06f:	int3   
   14000d070:	mov    QWORD PTR [rsp+0x8],rbx
   14000d075:	push   rdi
   14000d076:	sub    rsp,0x20
   14000d07a:	mov    rbx,rcx
   14000d07d:	lea    rdi,[rip+0xffffffffffff2f7c]        # 0x140000000
   14000d084:	mov    rcx,rdi
   14000d087:	call   0x14000d0d0
   14000d08c:	test   eax,eax
   14000d08e:	je     0x14000d0b2
   14000d090:	sub    rbx,rdi
   14000d093:	mov    rdx,rbx
   14000d096:	mov    rcx,rdi
   14000d099:	call   0x14000d020
   14000d09e:	test   rax,rax
   14000d0a1:	je     0x14000d0b2
   14000d0a3:	mov    eax,DWORD PTR [rax+0x24]
   14000d0a6:	shr    eax,0x1f
   14000d0a9:	not    eax
   14000d0ab:	and    eax,0x1
   14000d0ae:	jmp    0x14000d0b2
   14000d0b0:	xor    eax,eax
   14000d0b2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d0b7:	add    rsp,0x20
   14000d0bb:	pop    rdi
   14000d0bc:	ret    
   14000d0bd:	int3   
   14000d0be:	int3   
   14000d0bf:	int3   
   14000d0c0:	int3   
   14000d0c1:	int3   
   14000d0c2:	int3   
   14000d0c3:	int3   
   14000d0c4:	int3   
   14000d0c5:	int3   
   14000d0c6:	int3   
   14000d0c7:	int3   
   14000d0c8:	int3   
   14000d0c9:	int3   
   14000d0ca:	int3   
   14000d0cb:	int3   
   14000d0cc:	int3   
   14000d0cd:	int3   
   14000d0ce:	int3   
   14000d0cf:	int3   
   14000d0d0:	mov    rax,rcx
   14000d0d3:	mov    ecx,0x5a4d
   14000d0d8:	cmp    WORD PTR [rax],cx
   14000d0db:	je     0x14000d0e0
   14000d0dd:	xor    eax,eax
   14000d0df:	ret    
   14000d0e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000d0e4:	add    rcx,rax
   14000d0e7:	xor    eax,eax
   14000d0e9:	cmp    DWORD PTR [rcx],0x4550
   14000d0ef:	jne    0x14000d0fd
   14000d0f1:	mov    edx,0x20b
   14000d0f6:	cmp    WORD PTR [rcx+0x18],dx
   14000d0fa:	sete   al
   14000d0fd:	ret    
   14000d0fe:	int3   
   14000d0ff:	int3   
   14000d100:	int3   
   14000d101:	int3   
   14000d102:	int3   
   14000d103:	int3   
   14000d104:	mov    QWORD PTR [rsp+0x20],rbx
   14000d109:	push   rbp
   14000d10a:	mov    rbp,rsp
   14000d10d:	sub    rsp,0x20
   14000d111:	and    QWORD PTR [rbp+0x18],0x0
   14000d116:	movabs rbx,0x2b992ddfa232
   14000d120:	mov    rax,QWORD PTR [rip+0x6ee1]        # 0x140014008
   14000d127:	cmp    rax,rbx
   14000d12a:	jne    0x14000d1bf
   14000d130:	lea    rcx,[rbp+0x18]
   14000d134:	call   QWORD PTR [rip+0x11f6]        # 0x14000e330
   14000d13a:	mov    rax,QWORD PTR [rbp+0x18]
   14000d13e:	mov    QWORD PTR [rbp+0x10],rax
   14000d142:	call   QWORD PTR [rip+0x11f8]        # 0x14000e340
   14000d148:	mov    eax,eax
   14000d14a:	xor    QWORD PTR [rbp+0x10],rax
   14000d14e:	call   QWORD PTR [rip+0x11e4]        # 0x14000e338
   14000d154:	mov    eax,eax
   14000d156:	xor    QWORD PTR [rbp+0x10],rax
   14000d15a:	call   QWORD PTR [rip+0x11c8]        # 0x14000e328
   14000d160:	mov    eax,eax
   14000d162:	shl    rax,0x18
   14000d166:	xor    QWORD PTR [rbp+0x10],rax
   14000d16a:	call   QWORD PTR [rip+0x11b8]        # 0x14000e328
   14000d170:	mov    eax,eax
   14000d172:	lea    rcx,[rbp+0x10]
   14000d176:	xor    rax,QWORD PTR [rbp+0x10]
   14000d17a:	xor    rax,rcx
   14000d17d:	lea    rcx,[rbp+0x20]
   14000d181:	mov    QWORD PTR [rbp+0x10],rax
   14000d185:	call   QWORD PTR [rip+0x11bd]        # 0x14000e348
   14000d18b:	mov    eax,DWORD PTR [rbp+0x20]
   14000d18e:	movabs rcx,0xffffffffffff
   14000d198:	shl    rax,0x20
   14000d19c:	xor    rax,QWORD PTR [rbp+0x20]
   14000d1a0:	xor    rax,QWORD PTR [rbp+0x10]
   14000d1a4:	and    rax,rcx
   14000d1a7:	movabs rcx,0x2b992ddfa233
   14000d1b1:	cmp    rax,rbx
   14000d1b4:	cmove  rax,rcx
   14000d1b8:	mov    QWORD PTR [rip+0x6e49],rax        # 0x140014008
   14000d1bf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d1c4:	not    rax
   14000d1c7:	mov    QWORD PTR [rip+0x6e42],rax        # 0x140014010
   14000d1ce:	add    rsp,0x20
   14000d1d2:	pop    rbp
   14000d1d3:	ret    
   14000d1d4:	int3   
   14000d1d5:	int3   
   14000d1d6:	int3   
   14000d1d7:	int3   
   14000d1d8:	int3   
   14000d1d9:	int3   
   14000d1da:	jmp    QWORD PTR [rip+0x13c0]        # 0x14000e5a0
   14000d1e0:	int3   
   14000d1e1:	int3   
   14000d1e2:	int3   
   14000d1e3:	int3   
   14000d1e4:	int3   
   14000d1e5:	int3   
   14000d1e6:	jmp    QWORD PTR [rip+0x13bc]        # 0x14000e5a8
   14000d1ec:	int3   
   14000d1ed:	int3   
   14000d1ee:	int3   
   14000d1ef:	int3   
   14000d1f0:	int3   
   14000d1f1:	int3   
   14000d1f2:	int3   
   14000d1f3:	int3   
   14000d1f4:	int3   
   14000d1f5:	int3   
   14000d1f6:	int3   
   14000d1f7:	int3   
   14000d1f8:	int3   
   14000d1f9:	int3   
   14000d1fa:	int3   
   14000d1fb:	int3   
   14000d1fc:	int3   
   14000d1fd:	int3   
   14000d1fe:	int3   
   14000d1ff:	int3   
   14000d200:	ret    0x0
   14000d203:	int3   
   14000d204:	int3   
   14000d205:	int3   
   14000d206:	int3   
   14000d207:	int3   
   14000d208:	int3   
   14000d209:	int3   
   14000d20a:	jmp    QWORD PTR [rip+0x13b0]        # 0x14000e5c0
   14000d210:	int3   
   14000d211:	int3   
   14000d212:	int3   
   14000d213:	int3   
   14000d214:	int3   
   14000d215:	int3   
   14000d216:	jmp    QWORD PTR [rip+0x13ac]        # 0x14000e5c8
   14000d21c:	int3   
   14000d21d:	int3   
   14000d21e:	int3   
   14000d21f:	int3   
   14000d220:	int3   
   14000d221:	int3   
   14000d222:	jmp    QWORD PTR [rip+0x13a8]        # 0x14000e5d0
   14000d228:	int3   
   14000d229:	int3   
   14000d22a:	int3   
   14000d22b:	int3   
   14000d22c:	int3   
   14000d22d:	int3   
   14000d22e:	int3   
   14000d22f:	int3   
   14000d230:	int3   
   14000d231:	int3   
   14000d232:	int3   
   14000d233:	int3   
   14000d234:	int3   
   14000d235:	int3   
   14000d236:	int3   
   14000d237:	int3   
   14000d238:	sub    rsp,0x38
   14000d23c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d245:	call   0x140001140
   14000d24a:	nop
   14000d24b:	jmp    0x14000d252
   14000d24d:	mov    rax,QWORD PTR [rsp+0x50]
   14000d252:	add    rsp,0x38
   14000d256:	ret    
   14000d257:	int3   
   14000d258:	int3   
   14000d259:	int3   
   14000d25a:	int3   
   14000d25b:	int3   
   14000d25c:	int3   
   14000d25d:	int3   
   14000d25e:	jmp    QWORD PTR [rip+0x12d4]        # 0x14000e538
   14000d264:	int3   
   14000d265:	int3   
   14000d266:	int3   
   14000d267:	int3   
   14000d268:	int3   
   14000d269:	int3   
   14000d26a:	int3   
   14000d26b:	int3   
   14000d26c:	int3   
   14000d26d:	int3   
   14000d26e:	int3   
   14000d26f:	int3   
   14000d270:	jmp    QWORD PTR [rip+0x118a]        # 0x14000e400
   14000d276:	int3   
   14000d277:	int3   
   14000d278:	int3   
   14000d279:	int3   
   14000d27a:	int3   
   14000d27b:	int3   
   14000d27c:	int3   
   14000d27d:	int3   
   14000d27e:	int3   
   14000d27f:	int3   
   14000d280:	jmp    QWORD PTR [rip+0x1182]        # 0x14000e408
   14000d286:	int3   
   14000d287:	int3   
   14000d288:	int3   
   14000d289:	int3   
   14000d28a:	int3   
   14000d28b:	int3   
   14000d28c:	sub    rsp,0x28
   14000d290:	mov    r8,QWORD PTR [r9+0x38]
   14000d294:	mov    rcx,rdx
   14000d297:	mov    rdx,r9
   14000d29a:	call   0x14000d2b0
   14000d29f:	mov    eax,0x1
   14000d2a4:	add    rsp,0x28
   14000d2a8:	ret    
   14000d2a9:	int3   
   14000d2aa:	int3   
   14000d2ab:	int3   
   14000d2ac:	int3   
   14000d2ad:	int3   
   14000d2ae:	int3   
   14000d2af:	int3   
   14000d2b0:	rex push rbx
   14000d2b2:	sub    rsp,0x20
   14000d2b6:	mov    r11d,DWORD PTR [r8]
   14000d2b9:	mov    rbx,rdx
   14000d2bc:	and    r11d,0xfffffff8
   14000d2c0:	mov    r9,rcx
   14000d2c3:	test   BYTE PTR [r8],0x4
   14000d2c7:	mov    r10,rcx
   14000d2ca:	je     0x14000d2df
   14000d2cc:	mov    eax,DWORD PTR [r8+0x8]
   14000d2d0:	movsxd r10,DWORD PTR [r8+0x4]
   14000d2d4:	neg    eax
   14000d2d6:	add    r10,rcx
   14000d2d9:	movsxd rcx,eax
   14000d2dc:	and    r10,rcx
   14000d2df:	movsxd rax,r11d
   14000d2e2:	mov    rdx,QWORD PTR [rax+r10*1]
   14000d2e6:	mov    rax,QWORD PTR [rbx+0x10]
   14000d2ea:	mov    ecx,DWORD PTR [rax+0x8]
   14000d2ed:	add    rcx,QWORD PTR [rbx+0x8]
   14000d2f1:	test   BYTE PTR [rcx+0x3],0xf
   14000d2f5:	je     0x14000d303
   14000d2f7:	movzx  eax,BYTE PTR [rcx+0x3]
   14000d2fb:	and    eax,0xfffffff0
   14000d2fe:	cdqe   
   14000d300:	add    r9,rax
   14000d303:	xor    r9,rdx
   14000d306:	mov    rcx,r9
   14000d309:	add    rsp,0x20
   14000d30d:	pop    rbx
   14000d30e:	jmp    0x14000cc40
   14000d313:	int3   
   14000d314:	int3   
   14000d315:	int3   
   14000d316:	int3   
   14000d317:	int3   
   14000d318:	int3   
   14000d319:	int3   
   14000d31a:	jmp    QWORD PTR [rip+0x11c8]        # 0x14000e4e8
   14000d320:	int3   
   14000d321:	int3   
   14000d322:	int3   
   14000d323:	int3   
   14000d324:	int3   
   14000d325:	int3   
   14000d326:	jmp    QWORD PTR [rip+0x11b4]        # 0x14000e4e0
   14000d32c:	int3   
   14000d32d:	int3   
   14000d32e:	int3   
   14000d32f:	int3   
   14000d330:	int3   
   14000d331:	int3   
   14000d332:	int3   
   14000d333:	int3   
   14000d334:	int3   
   14000d335:	int3   
   14000d336:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d340:	jmp    rax
   14000d342:	int3   
   14000d343:	int3   
   14000d344:	int3   
   14000d345:	int3   
   14000d346:	int3   
   14000d347:	int3   
   14000d348:	int3   
   14000d349:	int3   
   14000d34a:	int3   
   14000d34b:	int3   
   14000d34c:	int3   
   14000d34d:	int3   
   14000d34e:	int3   
   14000d34f:	int3   
   14000d350:	int3   
   14000d351:	int3   
   14000d352:	int3   
   14000d353:	int3   
   14000d354:	int3   
   14000d355:	int3   
   14000d356:	int3   
   14000d357:	int3   
   14000d358:	int3   
   14000d359:	int3   
   14000d35a:	int3   
   14000d35b:	int3   
   14000d35c:	int3   
   14000d35d:	int3   
   14000d35e:	int3   
   14000d35f:	int3   
   14000d360:	rex push rbp
   14000d362:	sub    rsp,0x20
   14000d366:	mov    rbp,rdx
   14000d369:	mov    rax,QWORD PTR [rcx]
   14000d36c:	xor    ecx,ecx
   14000d36e:	cmp    DWORD PTR [rax],0xc0000005
   14000d374:	sete   cl
   14000d377:	mov    eax,ecx
   14000d379:	add    rsp,0x20
   14000d37d:	pop    rbp
   14000d37e:	ret    
   14000d37f:	int3   
   14000d380:	int3   
   14000d381:	int3   
   14000d382:	int3   
   14000d383:	int3   
   14000d384:	int3   
   14000d385:	int3   
   14000d386:	rex push rbp
   14000d388:	sub    rsp,0x20
   14000d38c:	mov    rbp,rdx
   14000d38f:	mov    rax,QWORD PTR [rcx]
   14000d392:	mov    rdx,rcx
   14000d395:	mov    ecx,DWORD PTR [rax]
   14000d397:	call   0x14000cf4e
   14000d39c:	nop
   14000d39d:	add    rsp,0x20
   14000d3a1:	pop    rbp
   14000d3a2:	ret    
   14000d3a3:	int3   
   14000d3a4:	int3   
   14000d3a5:	int3   
   14000d3a6:	int3   
   14000d3a7:	int3   
   14000d3a8:	int3   
   14000d3a9:	int3   
   14000d3aa:	rex push rbp
   14000d3ac:	sub    rsp,0x20
   14000d3b0:	mov    rbp,rdx
   14000d3b3:	mov    ecx,0x8
   14000d3b8:	call   0x14000d216
   14000d3bd:	nop
   14000d3be:	add    rsp,0x20
   14000d3c2:	pop    rbp
   14000d3c3:	ret    
   14000d3c4:	int3   
   14000d3c5:	int3   
   14000d3c6:	int3   
   14000d3c7:	int3   
   14000d3c8:	int3   
   14000d3c9:	int3   
   14000d3ca:	int3   
   14000d3cb:	mov    QWORD PTR [rsp+0x10],rdx
   14000d3d0:	push   rbp
   14000d3d1:	sub    rsp,0x20
   14000d3d5:	mov    rbp,rdx
   14000d3d8:	and    QWORD PTR [rbp+0x50],0x0
   14000d3dd:	lea    rax,[rip+0xfffffffffffffe69]        # 0x14000d24d
   14000d3e4:	add    rsp,0x20
   14000d3e8:	pop    rbp
   14000d3e9:	ret    
   14000d3ea:	int3   
   14000d3eb:	int3   
   14000d3ec:	int3   
   14000d3ed:	int3   
   14000d3ee:	int3   
   14000d3ef:	int3   
   14000d3f0:	int3   
   14000d3f1:	int3   
   14000d3f2:	int3   
   14000d3f3:	int3   
   14000d3f4:	int3   
   14000d3f5:	int3   
   14000d3f6:	int3   
   14000d3f7:	int3   
   14000d3f8:	int3   
   14000d3f9:	int3   
   14000d3fa:	int3   
   14000d3fb:	int3   
   14000d3fc:	int3   
   14000d3fd:	int3   
   14000d3fe:	int3   
   14000d3ff:	int3   
   14000d400:	sub    rsp,0x28
   14000d404:	cmp    DWORD PTR [rip+0x72c5],0x0        # 0x1400146d0
   14000d40b:	je     0x14000d41a
   14000d40d:	lea    rcx,[rip+0x72c4]        # 0x1400146d8
   14000d414:	call   QWORD PTR [rip+0xf6e]        # 0x14000e388
   14000d41a:	add    rsp,0x28
   14000d41e:	ret    
