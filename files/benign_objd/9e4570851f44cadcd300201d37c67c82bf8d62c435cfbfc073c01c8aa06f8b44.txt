
9e4570851f44cadcd300201d37c67c82bf8d62c435cfbfc073c01c8aa06f8b44.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x70c1]        # 0x1400080c8
   140001007:	jmp    0x140003424
   14000100c:	sub    rsp,0x28
   140001010:	call   0x140004db8
   140001015:	mov    DWORD PTR [rip+0x7691],eax        # 0x1400086ac
   14000101b:	add    rsp,0x28
   14000101f:	ret    
   140001020:	sub    rsp,0x28
   140001024:	lea    rdx,[rip+0x57e5]        # 0x140006810
   14000102b:	lea    rcx,[rip+0x768e]        # 0x1400086c0
   140001032:	call   0x140004ce8
   140001037:	lea    rcx,[rip+0x45f2]        # 0x140005630
   14000103e:	add    rsp,0x28
   140001042:	jmp    0x14000497c
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	mov    QWORD PTR [rsp+0x8],rbx
   140001055:	mov    QWORD PTR [rsp+0x10],rsi
   14000105a:	push   rdi
   14000105b:	sub    rsp,0x20
   14000105f:	lea    rax,[rip+0x53ba]        # 0x140006420
   140001066:	mov    rbx,rcx
   140001069:	mov    QWORD PTR [rcx],rax
   14000106c:	lea    rdi,[rcx+0x6c]
   140001070:	or     QWORD PTR [rcx+0x8],0xffffffffffffffff
   140001075:	xor    eax,eax
   140001077:	mov    DWORD PTR [rcx+0x38],eax
   14000107a:	mov    QWORD PTR [rcx+0x40],rax
   14000107e:	mov    DWORD PTR [rcx+0x48],eax
   140001081:	lea    esi,[rax+0x4]
   140001084:	lea    rdx,[rip+0x5375]        # 0x140006400
   14000108b:	mov    rcx,rdi
   14000108e:	call   0x140004ce8
   140001093:	add    rdi,0x8
   140001097:	sub    esi,0x1
   14000109a:	jns    0x140001084
   14000109c:	lea    rcx,[rbx+0x50]
   1400010a0:	call   QWORD PTR [rip+0x4fc2]        # 0x140006068
   1400010a6:	xor    eax,eax
   1400010a8:	lea    rcx,[rbx+0x98]
   1400010af:	mov    QWORD PTR [rbx+0x58],rax
   1400010b3:	xor    edx,edx
   1400010b5:	mov    QWORD PTR [rbx+0x60],rax
   1400010b9:	mov    DWORD PTR [rbx+0x68],eax
   1400010bc:	lea    r8d,[rax+0x28]
   1400010c0:	call   0x140004686
   1400010c5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400010ca:	mov    rax,rbx
   1400010cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010d2:	add    rsp,0x20
   1400010d6:	pop    rdi
   1400010d7:	ret    
   1400010d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400010dd:	mov    QWORD PTR [rsp+0x10],rbp
   1400010e2:	mov    QWORD PTR [rsp+0x18],rsi
   1400010e7:	push   rdi
   1400010e8:	sub    rsp,0x20
   1400010ec:	movsxd rsi,edx
   1400010ef:	mov    rbp,r8
   1400010f2:	mov    rdi,rcx
   1400010f5:	cmp    DWORD PTR [rcx+rsi*4+0x58],0x64
   1400010fa:	jle    0x140001106
   1400010fc:	mov    rcx,r8
   1400010ff:	call   0x140005000
   140001104:	jmp    0x140001134
   140001106:	lea    rbx,[rcx+rsi*8]
   14000110a:	lea    rcx,[rbx+0x6c]
   14000110e:	call   0x140004cf8
   140001113:	mov    rax,QWORD PTR [rdi+rsi*8+0x98]
   14000111b:	lea    rcx,[rbx+0x6c]
   14000111f:	mov    QWORD PTR [rbp+0x40],rax
   140001123:	mov    QWORD PTR [rdi+rsi*8+0x98],rbp
   14000112b:	inc    DWORD PTR [rdi+rsi*4+0x58]
   14000112f:	call   0x140004d98
   140001134:	mov    rbx,QWORD PTR [rsp+0x30]
   140001139:	mov    rbp,QWORD PTR [rsp+0x38]
   14000113e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001143:	add    rsp,0x20
   140001147:	pop    rdi
   140001148:	ret    
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	mov    eax,0x1
   140001151:	lock xadd DWORD PTR [rip+0x6f47],eax        # 0x1400080a0
   140001159:	inc    eax
   14000115b:	ret    
   14000115c:	mov    QWORD PTR [rsp+0x8],rbx
   140001161:	push   rdi
   140001162:	sub    rsp,0x20
   140001166:	mov    r8d,edx
   140001169:	mov    rdi,rcx
   14000116c:	and    r8d,0x3
   140001170:	je     0x14000117c
   140001172:	mov    eax,0x4
   140001177:	sub    eax,r8d
   14000117a:	add    edx,eax
   14000117c:	lea    ebx,[rdx+0x5c]
   14000117f:	lea    ecx,[rbx+0x18]
   140001182:	call   0x140004fc8
   140001187:	test   rax,rax
   14000118a:	je     0x14000119d
   14000118c:	lea    ecx,[rbx-0x4c]
   14000118f:	mov    QWORD PTR [rax+0x20],rdi
   140001193:	mov    DWORD PTR [rax+0x34],ecx
   140001196:	mov    DWORD PTR [rbx+rax*1],0x789abcde
   14000119d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011a2:	add    rsp,0x20
   1400011a6:	pop    rdi
   1400011a7:	ret    
   1400011a8:	mov    rax,rsp
   1400011ab:	mov    QWORD PTR [rax+0x18],rbx
   1400011af:	push   rdi
   1400011b0:	sub    rsp,0x30
   1400011b4:	xor    ebx,ebx
   1400011b6:	lea    r9,[rip+0x5233]        # 0x1400063f0
   1400011bd:	mov    QWORD PTR [rax+0x10],rbx
   1400011c1:	xor    edx,edx
   1400011c3:	mov    DWORD PTR [rax+0x8],ebx
   1400011c6:	lea    rax,[rax+0x10]
   1400011ca:	lea    rcx,[rip+0x520f]        # 0x1400063e0
   1400011d1:	mov    QWORD PTR [rsp+0x20],rax
   1400011d6:	lea    r8d,[rbx+0x15]
   1400011da:	call   QWORD PTR [rip+0x6e70]        # 0x140008050
   1400011e0:	mov    edi,eax
   1400011e2:	test   eax,eax
   1400011e4:	jne    0x140001215
   1400011e6:	mov    rcx,QWORD PTR [rsp+0x48]
   1400011eb:	lea    rdx,[rsp+0x40]
   1400011f0:	mov    QWORD PTR [rsp+0x28],rdx
   1400011f5:	lea    r9d,[rbx+0x1]
   1400011f9:	lea    r8,[rip+0x5240]        # 0x140006440
   140001200:	mov    DWORD PTR [rsp+0x20],0x7530
   140001208:	xor    edx,edx
   14000120a:	mov    rax,QWORD PTR [rcx]
   14000120d:	call   QWORD PTR [rax+0x88]
   140001213:	mov    edi,eax
   140001215:	mov    edx,DWORD PTR [rsp+0x40]
   140001219:	test   edx,edx
   14000121b:	je     0x14000122c
   14000121d:	mov    rcx,QWORD PTR [rsp+0x48]
   140001222:	mov    r8,QWORD PTR [rcx]
   140001225:	call   QWORD PTR [r8+0x90]
   14000122c:	mov    rcx,QWORD PTR [rsp+0x48]
   140001231:	call   0x140004cd4
   140001236:	test   edi,edi
   140001238:	sete   bl
   14000123b:	mov    eax,ebx
   14000123d:	mov    rbx,QWORD PTR [rsp+0x50]
   140001242:	add    rsp,0x30
   140001246:	pop    rdi
   140001247:	ret    
   140001248:	mov    QWORD PTR [rsp+0x8],rbx
   14000124d:	push   rdi
   14000124e:	sub    rsp,0x20
   140001252:	mov    eax,DWORD PTR [rip+0x6e20]        # 0x140008078
   140001258:	test   eax,eax
   14000125a:	mov    rbx,QWORD PTR [rip+0x6e1f]        # 0x140008080
   140001261:	cmove  eax,ecx
   140001264:	mov    DWORD PTR [rip+0x6e0e],eax        # 0x140008078
   14000126a:	test   rbx,rbx
   14000126d:	je     0x140001291
   14000126f:	mov    rcx,QWORD PTR [rbx+0x8]
   140001273:	or     rdi,0xffffffffffffffff
   140001277:	cmp    rcx,rdi
   14000127a:	je     0x14000128d
   14000127c:	mov    rax,rcx
   14000127f:	lock cmpxchg QWORD PTR [rbx+0x8],rdi
   140001285:	jne    0x14000128d
   140001287:	call   QWORD PTR [rip+0x4ec3]        # 0x140006150
   14000128d:	mov    QWORD PTR [rbx+0x8],rdi
   140001291:	mov    DWORD PTR [rip+0x6dfd],0x1        # 0x140008098
   14000129b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012a0:	add    rsp,0x20
   1400012a4:	pop    rdi
   1400012a5:	ret    
   1400012a6:	int3   
   1400012a7:	int3   
   1400012a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400012ad:	push   rdi
   1400012ae:	sub    rsp,0x270
   1400012b5:	mov    rax,QWORD PTR [rip+0x6d54]        # 0x140008010
   1400012bc:	xor    rax,rsp
   1400012bf:	mov    QWORD PTR [rsp+0x260],rax
   1400012c7:	and    QWORD PTR [rsp+0x40],0x0
   1400012cd:	lea    rcx,[rip+0x5214]        # 0x1400064e8
   1400012d4:	mov    DWORD PTR [rsp+0x48],0x104
   1400012dc:	mov    ebx,0x1
   1400012e1:	call   QWORD PTR [rip+0x4d89]        # 0x140006070
   1400012e7:	mov    QWORD PTR [rsp+0x40],rax
   1400012ec:	test   rax,rax
   1400012ef:	jne    0x140001311
   1400012f1:	lea    r8,[rsp+0x40]
   1400012f6:	mov    edx,ebx
   1400012f8:	lea    rcx,[rip+0x51e9]        # 0x1400064e8
   1400012ff:	call   0x140004c16
   140001304:	test   eax,eax
   140001306:	jne    0x140001395
   14000130c:	mov    rax,QWORD PTR [rsp+0x40]
   140001311:	lea    rdx,[rip+0x51e8]        # 0x140006500
   140001318:	mov    rcx,rax
   14000131b:	call   QWORD PTR [rip+0x4d57]        # 0x140006078
   140001321:	mov    rdi,rax
   140001324:	test   rax,rax
   140001327:	je     0x140001390
   140001329:	xor    edx,edx
   14000132b:	lea    rcx,[rsp+0x50]
   140001330:	mov    r8d,0x20a
   140001336:	call   0x140004686
   14000133b:	lea    r8,[rsp+0x48]
   140001340:	mov    ecx,0x2
   140001345:	lea    rdx,[rsp+0x50]
   14000134a:	call   rdi
   14000134c:	test   eax,eax
   14000134e:	jne    0x140001395
   140001350:	and    QWORD PTR [rsp+0x30],0x0
   140001356:	lea    r8d,[rax+0x3]
   14000135a:	mov    DWORD PTR [rsp+0x28],0x2000000
   140001362:	lea    rcx,[rsp+0x50]
   140001367:	xor    r9d,r9d
   14000136a:	mov    DWORD PTR [rsp+0x20],r8d
   14000136f:	mov    edx,0x80000000
   140001374:	call   QWORD PTR [rip+0x4df6]        # 0x140006170
   14000137a:	mov    rcx,rax
   14000137d:	dec    rax
   140001380:	cmp    rax,0xfffffffffffffffd
   140001384:	ja     0x14000138e
   140001386:	call   QWORD PTR [rip+0x4dc4]        # 0x140006150
   14000138c:	jmp    0x140001395
   14000138e:	xor    ebx,ebx
   140001390:	call   0x140004ca8
   140001395:	mov    eax,ebx
   140001397:	mov    rcx,QWORD PTR [rsp+0x260]
   14000139f:	xor    rcx,rsp
   1400013a2:	call   0x140004660
   1400013a7:	mov    rbx,QWORD PTR [rsp+0x280]
   1400013af:	add    rsp,0x270
   1400013b6:	pop    rdi
   1400013b7:	ret    
   1400013b8:	rex push rbx
   1400013ba:	sub    rsp,0x20
   1400013be:	mov    rbx,rcx
   1400013c1:	cmp    edx,0x68
   1400013c4:	ja     0x1400013db
   1400013c6:	xor    edx,edx
   1400013c8:	call   0x140001460
   1400013cd:	test   rax,rax
   1400013d0:	jne    0x140001459
   1400013d6:	lea    edx,[rax+0x68]
   1400013d9:	jmp    0x140001451
   1400013db:	cmp    edx,0xd0
   1400013e1:	ja     0x1400013f9
   1400013e3:	mov    edx,0x1
   1400013e8:	call   0x140001460
   1400013ed:	test   rax,rax
   1400013f0:	jne    0x140001459
   1400013f2:	mov    edx,0xd0
   1400013f7:	jmp    0x140001451
   1400013f9:	cmp    edx,0xfa0
   1400013ff:	ja     0x140001417
   140001401:	mov    edx,0x2
   140001406:	call   0x140001460
   14000140b:	test   rax,rax
   14000140e:	jne    0x140001459
   140001410:	mov    edx,0xfa0
   140001415:	jmp    0x140001451
   140001417:	cmp    edx,0x3e80
   14000141d:	ja     0x140001435
   14000141f:	mov    edx,0x3
   140001424:	call   0x140001460
   140001429:	test   rax,rax
   14000142c:	jne    0x140001459
   14000142e:	mov    edx,0x3e80
   140001433:	jmp    0x140001451
   140001435:	cmp    edx,0x7d00
   14000143b:	ja     0x140001454
   14000143d:	mov    edx,0x4
   140001442:	call   0x140001460
   140001447:	test   rax,rax
   14000144a:	jne    0x140001459
   14000144c:	mov    edx,0x7d00
   140001451:	mov    rcx,rbx
   140001454:	call   0x14000115c
   140001459:	add    rsp,0x20
   14000145d:	pop    rbx
   14000145e:	ret    
   14000145f:	int3   
   140001460:	mov    QWORD PTR [rsp+0x8],rbx
   140001465:	mov    QWORD PTR [rsp+0x10],rbp
   14000146a:	mov    QWORD PTR [rsp+0x18],rsi
   14000146f:	push   rdi
   140001470:	sub    rsp,0x20
   140001474:	movsxd rbx,edx
   140001477:	mov    rdi,rcx
   14000147a:	cmp    QWORD PTR [rcx+rbx*8+0x98],0x0
   140001483:	jne    0x140001489
   140001485:	xor    eax,eax
   140001487:	jmp    0x1400014e4
   140001489:	lea    rbp,[rcx+0x6c]
   14000148d:	lea    rbp,[rbp+rbx*8+0x0]
   140001492:	mov    rcx,rbp
   140001495:	call   0x140004cf8
   14000149a:	mov    rsi,QWORD PTR [rdi+rbx*8+0x98]
   1400014a2:	test   rsi,rsi
   1400014a5:	jne    0x1400014b1
   1400014a7:	mov    rcx,rbp
   1400014aa:	call   0x140004d98
   1400014af:	jmp    0x140001485
   1400014b1:	mov    rcx,QWORD PTR [rsi+0x40]
   1400014b5:	mov    QWORD PTR [rdi+rbx*8+0x98],rcx
   1400014bd:	mov    rcx,rbp
   1400014c0:	dec    DWORD PTR [rdi+rbx*4+0x58]
   1400014c4:	call   0x140004d98
   1400014c9:	mov    ebx,DWORD PTR [rsi+0x34]
   1400014cc:	xor    edx,edx
   1400014ce:	mov    rcx,rsi
   1400014d1:	lea    r8d,[rdx+0x60]
   1400014d5:	call   0x140004686
   1400014da:	mov    rax,rsi
   1400014dd:	mov    QWORD PTR [rsi+0x20],rdi
   1400014e1:	mov    DWORD PTR [rsi+0x34],ebx
   1400014e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400014e9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400014ee:	mov    rsi,QWORD PTR [rsp+0x40]
   1400014f3:	add    rsp,0x20
   1400014f7:	pop    rdi
   1400014f8:	ret    
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	mov    QWORD PTR [rsp+0x8],rbx
   140001501:	mov    QWORD PTR [rsp+0x10],rsi
   140001506:	mov    QWORD PTR [rsp+0x18],rdi
   14000150b:	push   r14
   14000150d:	sub    rsp,0x20
   140001511:	cmp    QWORD PTR [rip+0x6b67],0x0        # 0x140008080
   140001519:	mov    rbx,r9
   14000151c:	mov    rdi,r8
   14000151f:	mov    rsi,rdx
   140001522:	mov    r14,rcx
   140001525:	je     0x140001569
   140001527:	call   QWORD PTR [rip+0x4b33]        # 0x140006060
   14000152d:	mov    r10,QWORD PTR [rip+0x6b4c]        # 0x140008080
   140001534:	mov    ecx,eax
   140001536:	mov    r11,QWORD PTR [r10+0x50]
   14000153a:	mov    QWORD PTR [rbx],r11
   14000153d:	mov    r9,QWORD PTR [rip+0x6b3c]        # 0x140008080
   140001544:	mov    r10d,DWORD PTR [r9+0x44]
   140001548:	mov    r9d,0x1
   14000154e:	mov    DWORD PTR [rsi],r10d
   140001551:	mov    rdx,QWORD PTR [rip+0x6b28]        # 0x140008080
   140001558:	mov    r8d,DWORD PTR [rdx+0x48]
   14000155c:	xor    edx,edx
   14000155e:	mov    DWORD PTR [r14],r8d
   140001561:	mov    r8,rdi
   140001564:	call   0x140004c3a
   140001569:	mov    rbx,QWORD PTR [rsp+0x30]
   14000156e:	mov    rsi,QWORD PTR [rsp+0x38]
   140001573:	mov    rdi,QWORD PTR [rsp+0x40]
   140001578:	add    rsp,0x20
   14000157c:	pop    r14
   14000157e:	ret    
   14000157f:	int3   
   140001580:	mov    QWORD PTR [rsp+0x8],rbx
   140001585:	push   rdi
   140001586:	sub    rsp,0x20
   14000158a:	xor    ebx,ebx
   14000158c:	mov    rdi,rcx
   14000158f:	cmp    QWORD PTR [rip+0x6aea],rbx        # 0x140008080
   140001596:	jne    0x1400015f6
   140001598:	lea    eax,[rbx+0x1]
   14000159b:	lock xadd DWORD PTR [rip+0x6abd],eax        # 0x140008060
   1400015a3:	mov    rdx,QWORD PTR [rip+0x6ad6]        # 0x140008080
   1400015aa:	inc    eax
   1400015ac:	cmp    eax,0x1
   1400015af:	jne    0x140001612
   1400015b1:	test   rdx,rdx
   1400015b4:	jne    0x140001612
   1400015b6:	mov    ecx,0xc0
   1400015bb:	call   0x140004f90
   1400015c0:	test   rax,rax
   1400015c3:	je     0x1400015cd
   1400015c5:	mov    rcx,rax
   1400015c8:	call   0x140001050
   1400015cd:	mov    QWORD PTR [rip+0x6aac],rax        # 0x140008080
   1400015d4:	test   rax,rax
   1400015d7:	jne    0x1400015e0
   1400015d9:	mov    ebx,0x8007000e
   1400015de:	jmp    0x140001605
   1400015e0:	mov    rdx,rdi
   1400015e3:	mov    rcx,rax
   1400015e6:	call   0x140001858
   1400015eb:	mov    ebx,eax
   1400015ed:	test   eax,eax
   1400015ef:	jne    0x140001605
   1400015f1:	call   0x140001648
   1400015f6:	call   0x1400016f0
   1400015fb:	test   eax,eax
   1400015fd:	mov    ecx,0x80004005
   140001602:	cmove  ebx,ecx
   140001605:	mov    eax,ebx
   140001607:	mov    rbx,QWORD PTR [rsp+0x30]
   14000160c:	add    rsp,0x20
   140001610:	pop    rdi
   140001611:	ret    
   140001612:	xor    edi,edi
   140001614:	test   rdx,rdx
   140001617:	jne    0x1400015f6
   140001619:	lea    ecx,[rdx+0x64]
   14000161c:	call   QWORD PTR [rip+0x4a36]        # 0x140006058
   140001622:	inc    edi
   140001624:	cmp    edi,0xbb8
   14000162a:	jge    0x140001635
   14000162c:	mov    rdx,QWORD PTR [rip+0x6a4d]        # 0x140008080
   140001633:	jmp    0x140001614
   140001635:	cmp    QWORD PTR [rip+0x6a44],rbx        # 0x140008080
   14000163c:	jne    0x1400015f6
   14000163e:	mov    ebx,0x800705b4
   140001643:	jmp    0x140001605
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	rex push rbp
   14000164a:	mov    rbp,rsp
   14000164d:	sub    rsp,0x30
   140001651:	and    QWORD PTR [rbp+0x28],0x0
   140001656:	lea    rax,[rbp+0x28]
   14000165a:	and    DWORD PTR [rbp+0x18],0x0
   14000165e:	lea    rdx,[rip+0x4de3]        # 0x140006448
   140001665:	and    DWORD PTR [rbp+0x10],0x0
   140001669:	mov    r9d,0x20019
   14000166f:	xor    r8d,r8d
   140001672:	mov    QWORD PTR [rsp+0x20],rax
   140001677:	mov    rcx,0xffffffff80000002
   14000167e:	mov    DWORD PTR [rbp+0x20],0x4
   140001685:	call   QWORD PTR [rip+0x4985]        # 0x140006010
   14000168b:	test   eax,eax
   14000168d:	jne    0x1400016da
   14000168f:	mov    rcx,QWORD PTR [rbp+0x28]
   140001693:	lea    rax,[rbp+0x20]
   140001697:	mov    QWORD PTR [rsp+0x28],rax
   14000169c:	lea    r9,[rbp+0x10]
   1400016a0:	lea    rax,[rbp+0x18]
   1400016a4:	xor    r8d,r8d
   1400016a7:	lea    rdx,[rip+0x4dd2]        # 0x140006480
   1400016ae:	mov    QWORD PTR [rsp+0x20],rax
   1400016b3:	call   QWORD PTR [rip+0x495f]        # 0x140006018
   1400016b9:	test   eax,eax
   1400016bb:	jne    0x1400016da
   1400016bd:	cmp    DWORD PTR [rbp+0x10],0x4
   1400016c1:	jne    0x1400016da
   1400016c3:	mov    eax,DWORD PTR [rip+0x69ab]        # 0x140008074
   1400016c9:	mov    ecx,0x1
   1400016ce:	cmp    DWORD PTR [rbp+0x18],ecx
   1400016d1:	cmove  eax,ecx
   1400016d4:	mov    DWORD PTR [rip+0x699a],eax        # 0x140008074
   1400016da:	mov    rcx,QWORD PTR [rbp+0x28]
   1400016de:	test   rcx,rcx
   1400016e1:	je     0x1400016e9
   1400016e3:	call   QWORD PTR [rip+0x491f]        # 0x140006008
   1400016e9:	add    rsp,0x30
   1400016ed:	pop    rbp
   1400016ee:	ret    
   1400016ef:	int3   
   1400016f0:	mov    rax,QWORD PTR [rip+0x6989]        # 0x140008080
   1400016f7:	test   rax,rax
   1400016fa:	je     0x14000171e
   1400016fc:	cmp    QWORD PTR [rax+0x8],0xffffffffffffffff
   140001701:	je     0x14000171e
   140001703:	cmp    DWORD PTR [rax+0x40],0x0
   140001707:	je     0x140001718
   140001709:	cmp    DWORD PTR [rax+0x44],0x1
   14000170d:	jge    0x140001718
   14000170f:	cmp    DWORD PTR [rip+0x698a],0x1        # 0x1400080a0
   140001716:	jle    0x14000171e
   140001718:	mov    eax,0x1
   14000171d:	ret    
   14000171e:	xor    eax,eax
   140001720:	ret    
   140001721:	int3   
   140001722:	int3   
   140001723:	int3   
   140001724:	sub    rsp,0x48
   140001728:	mov    edx,DWORD PTR [rcx+0x4c]
   14000172b:	xor    eax,eax
   14000172d:	mov    DWORD PTR [rsp+0x38],0x1
   140001735:	xor    r9d,r9d
   140001738:	mov    DWORD PTR [rsp+0x30],eax
   14000173c:	xor    r8d,r8d
   14000173f:	mov    QWORD PTR [rsp+0x28],rax
   140001744:	lea    ecx,[rax+0x3]
   140001747:	mov    DWORD PTR [rsp+0x20],eax
   14000174b:	call   0x1400024e0
   140001750:	add    rsp,0x48
   140001754:	ret    
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	mov    QWORD PTR [rsp+0x8],rbx
   14000175d:	mov    QWORD PTR [rsp+0x10],rsi
   140001762:	push   rdi
   140001763:	sub    rsp,0x20
   140001767:	mov    ebx,ecx
   140001769:	mov    edi,r8d
   14000176c:	mov    rcx,QWORD PTR [rip+0x690d]        # 0x140008080
   140001773:	mov    esi,edx
   140001775:	test   rcx,rcx
   140001778:	jne    0x14000177e
   14000177a:	xor    eax,eax
   14000177c:	jmp    0x140001799
   14000177e:	mov    edx,ebx
   140001780:	call   0x1400013b8
   140001785:	test   rax,rax
   140001788:	je     0x140001799
   14000178a:	lea    ecx,[rbx+0x10]
   14000178d:	mov    DWORD PTR [rax+0x48],edi
   140001790:	mov    DWORD PTR [rax+0x30],ecx
   140001793:	mov    DWORD PTR [rax+0x4c],esi
   140001796:	mov    DWORD PTR [rax+0x50],ebx
   140001799:	mov    rbx,QWORD PTR [rsp+0x30]
   14000179e:	mov    rsi,QWORD PTR [rsp+0x38]
   1400017a3:	add    rsp,0x20
   1400017a7:	pop    rdi
   1400017a8:	ret    
   1400017a9:	int3   
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400017b1:	push   rdi
   1400017b2:	sub    rsp,0x50
   1400017b6:	mov    rdi,rcx
   1400017b9:	xor    ebx,ebx
   1400017bb:	lea    ecx,[rbx+0x5]
   1400017be:	call   0x140004c34
   1400017c3:	lea    edx,[rbx+0x1]
   1400017c6:	lea    ecx,[rbx+0x4]
   1400017c9:	call   0x140004c46
   1400017ce:	test   eax,eax
   1400017d0:	je     0x1400017ff
   1400017d2:	and    QWORD PTR [rsp+0x30],rbx
   1400017d7:	lea    r8,[rsp+0x40]
   1400017dc:	movups xmm0,XMMWORD PTR [rdi+0x78]
   1400017e0:	and    QWORD PTR [rsp+0x28],rbx
   1400017e5:	lea    ecx,[rbx+0x4]
   1400017e8:	and    QWORD PTR [rsp+0x20],rbx
   1400017ed:	xor    r9d,r9d
   1400017f0:	mov    rdx,QWORD PTR [rdi+0x70]
   1400017f4:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   1400017fa:	call   0x140004c40
   1400017ff:	mov    rcx,QWORD PTR [rip+0x687a]        # 0x140008080
   140001806:	test   rcx,rcx
   140001809:	je     0x140001828
   14000180b:	mov    rdx,rdi
   14000180e:	call   0x140001df4
   140001813:	xor    edx,edx
   140001815:	xor    ecx,ecx
   140001817:	mov    ebx,eax
   140001819:	call   QWORD PTR [rip+0x47e1]        # 0x140006000
   14000181f:	test   eax,eax
   140001821:	jne    0x140001828
   140001823:	call   0x140004ca8
   140001828:	mov    eax,ebx
   14000182a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000182f:	add    rsp,0x50
   140001833:	pop    rdi
   140001834:	ret    
   140001835:	int3   
   140001836:	int3   
   140001837:	int3   
   140001838:	sub    rsp,0x28
   14000183c:	mov    rdx,rcx
   14000183f:	mov    rcx,QWORD PTR [rip+0x683a]        # 0x140008080
   140001846:	test   rcx,rcx
   140001849:	je     0x140001850
   14000184b:	call   0x1400018fc
   140001850:	add    rsp,0x28
   140001854:	ret    
   140001855:	int3   
   140001856:	int3   
   140001857:	int3   
   140001858:	mov    QWORD PTR [rsp+0x8],rbx
   14000185d:	push   rdi
   14000185e:	sub    rsp,0x40
   140001862:	and    QWORD PTR [rsp+0x30],0x0
   140001868:	mov    rax,rdx
   14000186b:	xor    r9d,r9d
   14000186e:	mov    DWORD PTR [rsp+0x28],0x40100080
   140001876:	mov    rdi,rcx
   140001879:	mov    DWORD PTR [rsp+0x60],0x2
   140001881:	mov    edx,0xc0000000
   140001886:	mov    DWORD PTR [rsp+0x20],0x3
   14000188e:	mov    rcx,rax
   140001891:	lea    r8d,[r9+0x7]
   140001895:	call   QWORD PTR [rip+0x48d5]        # 0x140006170
   14000189b:	mov    rbx,rax
   14000189e:	cmp    rax,0xffffffffffffffff
   1400018a2:	jne    0x1400018ab
   1400018a4:	call   0x140004ca8
   1400018a9:	jmp    0x1400018df
   1400018ab:	xor    r9d,r9d
   1400018ae:	mov    QWORD PTR [rdi+0x8],rax
   1400018b2:	xor    r8d,r8d
   1400018b5:	lea    rdx,[rsp+0x60]
   1400018ba:	mov    rcx,rax
   1400018bd:	call   QWORD PTR [rip+0x47fd]        # 0x1400060c0
   1400018c3:	test   eax,eax
   1400018c5:	je     0x1400018a4
   1400018c7:	mov    rcx,rbx
   1400018ca:	call   0x140004c1c
   1400018cf:	mov    ebx,eax
   1400018d1:	test   eax,eax
   1400018d3:	jne    0x1400018e5
   1400018d5:	xor    edx,edx
   1400018d7:	mov    rcx,rdi
   1400018da:	call   0x140002328
   1400018df:	mov    ebx,eax
   1400018e1:	test   eax,eax
   1400018e3:	je     0x1400018ec
   1400018e5:	mov    ecx,ebx
   1400018e7:	call   0x140001248
   1400018ec:	mov    eax,ebx
   1400018ee:	mov    rbx,QWORD PTR [rsp+0x50]
   1400018f3:	add    rsp,0x40
   1400018f7:	pop    rdi
   1400018f8:	ret    
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	test   rdx,rdx
   1400018ff:	je     0x140001955
   140001901:	mov    QWORD PTR [rsp+0x8],rbx
   140001906:	push   rdi
   140001907:	sub    rsp,0x20
   14000190b:	mov    rdi,rcx
   14000190e:	mov    rbx,rdx
   140001911:	mov    rcx,QWORD PTR [rdx+0x60]
   140001915:	test   rcx,rcx
   140001918:	je     0x140001920
   14000191a:	call   QWORD PTR [rip+0x4830]        # 0x140006150
   140001920:	mov    rcx,QWORD PTR [rbx+0x68]
   140001924:	test   rcx,rcx
   140001927:	je     0x140001935
   140001929:	cmp    QWORD PTR [rbx+0x60],rcx
   14000192d:	je     0x140001935
   14000192f:	call   QWORD PTR [rip+0x481b]        # 0x140006150
   140001935:	mov    rdx,rbx
   140001938:	mov    rcx,rdi
   14000193b:	call   0x1400022ac
   140001940:	lock dec DWORD PTR [rdi+0x44]
   140001944:	lock dec DWORD PTR [rip+0x6721]        # 0x14000806c
   14000194b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001950:	add    rsp,0x20
   140001954:	pop    rdi
   140001955:	ret    
   140001956:	int3   
   140001957:	int3   
   140001958:	mov    QWORD PTR [rsp+0x8],rbx
   14000195d:	mov    QWORD PTR [rsp+0x10],rbp
   140001962:	mov    QWORD PTR [rsp+0x18],rsi
   140001967:	push   rdi
   140001968:	sub    rsp,0x30
   14000196c:	xor    edi,edi
   14000196e:	mov    rsi,rdx
   140001971:	mov    rbx,rcx
   140001974:	cmp    DWORD PTR [rcx+0x38],edi
   140001977:	jne    0x14000197f
   140001979:	mov    rbp,QWORD PTR [rcx+0x8]
   14000197d:	jmp    0x14000198d
   14000197f:	add    rcx,0x10
   140001983:	call   QWORD PTR [rip+0x46b7]        # 0x140006040
   140001989:	mov    rbp,QWORD PTR [rbx+0x8]
   14000198d:	test   rsi,rsi
   140001990:	jne    0x14000199c
   140001992:	mov    edi,0x80070057
   140001997:	jmp    0x140001a21
   14000199c:	cmp    rbp,0xffffffffffffffff
   1400019a0:	jne    0x1400019a9
   1400019a2:	mov    edi,0x80004005
   1400019a7:	jmp    0x140001a21
   1400019a9:	mov    DWORD PTR [rsi+0x2c],0x1
   1400019b0:	mov    rcx,rbx
   1400019b3:	mov    DWORD PTR [rsi+0x28],0x2
   1400019ba:	mov    rax,QWORD PTR [rbx]
   1400019bd:	call   QWORD PTR [rax+0x8]
   1400019c0:	mov    r8d,DWORD PTR [rsi+0x30]
   1400019c4:	lea    rdx,[rsi+0x48]
   1400019c8:	lea    r9,[rsi+0x30]
   1400019cc:	mov    QWORD PTR [rsp+0x20],rsi
   1400019d1:	mov    rcx,rbp
   1400019d4:	call   QWORD PTR [rip+0x4786]        # 0x140006160
   1400019da:	test   eax,eax
   1400019dc:	jne    0x1400019fd
   1400019de:	call   QWORD PTR [rip+0x475c]        # 0x140006140
   1400019e4:	cmp    eax,0x3e5
   1400019e9:	je     0x1400019fd
   1400019eb:	mov    rax,QWORD PTR [rbx]
   1400019ee:	mov    rcx,rbx
   1400019f1:	call   QWORD PTR [rax+0x10]
   1400019f4:	call   0x140004ca8
   1400019f9:	mov    edi,eax
   1400019fb:	jmp    0x140001a21
   1400019fd:	lea    rcx,[rip+0x66c4]        # 0x1400080c8
   140001a04:	call   0x14000347c
   140001a09:	or     eax,0xffffffff
   140001a0c:	lock xadd DWORD PTR [rsi+0x28],eax
   140001a11:	cmp    eax,0x1
   140001a14:	jne    0x140001a21
   140001a16:	mov    rdx,rsi
   140001a19:	mov    rcx,rbx
   140001a1c:	call   0x1400022ac
   140001a21:	cmp    DWORD PTR [rbx+0x38],0x0
   140001a25:	je     0x140001a31
   140001a27:	lea    rcx,[rbx+0x10]
   140001a2b:	call   QWORD PTR [rip+0x4617]        # 0x140006048
   140001a31:	test   edi,edi
   140001a33:	je     0x140001a3c
   140001a35:	mov    ecx,edi
   140001a37:	call   0x140001248
   140001a3c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001a41:	mov    eax,edi
   140001a43:	mov    rbp,QWORD PTR [rsp+0x48]
   140001a48:	mov    rsi,QWORD PTR [rsp+0x50]
   140001a4d:	add    rsp,0x30
   140001a51:	pop    rdi
   140001a52:	ret    
   140001a53:	int3   
   140001a54:	mov    QWORD PTR [rsp+0x18],rbx
   140001a59:	push   rbp
   140001a5a:	push   rsi
   140001a5b:	push   rdi
   140001a5c:	push   r12
   140001a5e:	push   r13
   140001a60:	push   r14
   140001a62:	push   r15
   140001a64:	mov    rbp,rsp
   140001a67:	sub    rsp,0x70
   140001a6b:	xor    r15d,r15d
   140001a6e:	mov    rdi,r9
   140001a71:	mov    ebx,edx
   140001a73:	mov    rsi,rcx
   140001a76:	cmp    DWORD PTR [rcx+0x38],r15d
   140001a7a:	jne    0x140001a82
   140001a7c:	mov    rcx,QWORD PTR [rcx+0x8]
   140001a80:	jmp    0x140001a90
   140001a82:	add    rcx,0x10
   140001a86:	call   QWORD PTR [rip+0x45b4]        # 0x140006040
   140001a8c:	mov    rcx,QWORD PTR [rsi+0x8]
   140001a90:	mov    r14,r15
   140001a93:	test   rdi,rdi
   140001a96:	je     0x140001d98
   140001a9c:	cmp    rcx,0xffffffffffffffff
   140001aa0:	je     0x140001d98
   140001aa6:	test   ebx,ebx
   140001aa8:	je     0x140001b3d
   140001aae:	cmp    DWORD PTR [rdi+0x2c],0x1
   140001ab2:	je     0x140001da1
   140001ab8:	xor    r9d,r9d
   140001abb:	mov    DWORD PTR [rbp+0x48],r15d
   140001abf:	lea    r8,[rbp+0x48]
   140001ac3:	mov    rdx,rdi
   140001ac6:	call   QWORD PTR [rip+0x4564]        # 0x140006030
   140001acc:	call   QWORD PTR [rip+0x466e]        # 0x140006140
   140001ad2:	cmp    eax,0xea
   140001ad7:	jne    0x140001b27
   140001ad9:	mov    edx,DWORD PTR [rdi+0x50]
   140001adc:	mov    rcx,rsi
   140001adf:	call   0x1400013b8
   140001ae4:	mov    rbx,rax
   140001ae7:	test   rax,rax
   140001aea:	jne    0x140001af6
   140001aec:	mov    ebx,0x8007000e
   140001af1:	jmp    0x140001db2
   140001af6:	mov    r8d,DWORD PTR [rbp+0x48]
   140001afa:	lea    rdx,[rdi+0x48]
   140001afe:	lea    rcx,[rax+0x48]
   140001b02:	call   0x140004680
   140001b07:	mov    eax,DWORD PTR [rbp+0x48]
   140001b0a:	mov    rdx,rbx
   140001b0d:	mov    rcx,rsi
   140001b10:	mov    DWORD PTR [rbx+0x38],eax
   140001b13:	call   0x140002328
   140001b18:	mov    ebx,eax
   140001b1a:	jmp    0x140001b27
   140001b1c:	mov    ecx,0x1
   140001b21:	call   QWORD PTR [rip+0x4531]        # 0x140006058
   140001b27:	cmp    DWORD PTR [rdi+0x28],r15d
   140001b2b:	jne    0x140001b1c
   140001b2d:	mov    rdx,rdi
   140001b30:	mov    rcx,rsi
   140001b33:	call   0x1400022ac
   140001b38:	jmp    0x140001da1
   140001b3d:	cmp    DWORD PTR [rdi+0x2c],r15d
   140001b41:	je     0x140001b64
   140001b43:	or     eax,0xffffffff
   140001b46:	lock xadd DWORD PTR [rdi+0x28],eax
   140001b4b:	cmp    eax,0x1
   140001b4e:	jne    0x140001dc0
   140001b54:	mov    rdx,rdi
   140001b57:	mov    rcx,rsi
   140001b5a:	call   0x1400022ac
   140001b5f:	jmp    0x140001dc0
   140001b64:	lea    rbx,[rdi+0x48]
   140001b68:	cmp    DWORD PTR [rbx],0x9
   140001b6b:	jne    0x140001b73
   140001b6d:	call   QWORD PTR [rip+0x45e5]        # 0x140006158
   140001b73:	cmp    DWORD PTR [rbx],0x5
   140001b76:	mov    r13d,r15d
   140001b79:	sete   r13b
   140001b7d:	cmp    DWORD PTR [rbx],0x4
   140001b80:	je     0x140001b8a
   140001b82:	cmp    DWORD PTR [rbx],0x9
   140001b85:	mov    r12d,r15d
   140001b88:	jne    0x140001b90
   140001b8a:	mov    r12d,0x1
   140001b90:	test   r13d,r13d
   140001b93:	jne    0x140001bd4
   140001b95:	test   r12d,r12d
   140001b98:	jne    0x140001bd4
   140001b9a:	mov    r15d,DWORD PTR [rdi+0x50]
   140001b9e:	mov    rcx,rsi
   140001ba1:	add    r15d,0x10
   140001ba5:	mov    edx,r15d
   140001ba8:	call   0x1400013b8
   140001bad:	mov    r14,rax
   140001bb0:	test   rax,rax
   140001bb3:	jne    0x140001bc2
   140001bb5:	mov    ebx,0x8007000e
   140001bba:	xor    r15d,r15d
   140001bbd:	jmp    0x140001db2
   140001bc2:	mov    r8d,r15d
   140001bc5:	lea    rcx,[rax+0x48]
   140001bc9:	mov    rdx,rbx
   140001bcc:	call   0x140004680
   140001bd1:	xor    r15d,r15d
   140001bd4:	mov    r8d,DWORD PTR [rdi+0x34]
   140001bd8:	xor    edx,edx
   140001bda:	mov    rcx,rbx
   140001bdd:	mov    QWORD PTR [rdi+0x2c],0x0
   140001be5:	mov    DWORD PTR [rdi+0x38],r15d
   140001be9:	call   0x140004686
   140001bee:	test   r14,r14
   140001bf1:	je     0x140001c53
   140001bf3:	cmp    DWORD PTR [r14+0x48],0x1
   140001bf8:	jne    0x140001c53
   140001bfa:	lock inc DWORD PTR [rsi+0x44]
   140001bfe:	mov    ecx,0x5
   140001c03:	call   0x140004c34
   140001c08:	mov    edx,0x1
   140001c0d:	lea    ebx,[rdx+0x3]
   140001c10:	mov    ecx,ebx
   140001c12:	call   0x140004c46
   140001c17:	test   eax,eax
   140001c19:	je     0x140001c53
   140001c1b:	movups xmm0,XMMWORD PTR [r14+0x78]
   140001c20:	mov    rdx,QWORD PTR [r14+0x70]
   140001c24:	lea    r8,[rbp-0x30]
   140001c28:	mov    QWORD PTR [rsp+0x30],r15
   140001c2d:	xor    r9d,r9d
   140001c30:	mov    QWORD PTR [rsp+0x28],r15
   140001c35:	mov    ecx,ebx
   140001c37:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140001c3c:	mov    QWORD PTR [rsp+0x20],r15
   140001c41:	call   0x140004c40
   140001c46:	jmp    0x140001c53
   140001c48:	mov    ecx,0x1
   140001c4d:	call   QWORD PTR [rip+0x4405]        # 0x140006058
   140001c53:	cmp    DWORD PTR [rdi+0x28],r15d
   140001c57:	jne    0x140001c48
   140001c59:	mov    rdx,rdi
   140001c5c:	mov    rcx,rsi
   140001c5f:	call   0x140002328
   140001c64:	mov    ebx,eax
   140001c66:	test   eax,eax
   140001c68:	jne    0x140001da5
   140001c6e:	lea    edi,[rax+0x1]
   140001c71:	test   r14,r14
   140001c74:	je     0x140001d80
   140001c7a:	cmp    DWORD PTR [r14+0x48],edi
   140001c7e:	jne    0x140001d80
   140001c84:	cmp    DWORD PTR [rip+0x63e9],r15d        # 0x140008074
   140001c8b:	mov    DWORD PTR [rip+0x640b],edi        # 0x14000809c
   140001c91:	je     0x140001d59
   140001c97:	lea    ecx,[rax+0x5]
   140001c9a:	mov    DWORD PTR [rbp+0x40],r15d
   140001c9e:	call   0x140004c2e
   140001ca3:	mov    edx,edi
   140001ca5:	lea    ecx,[rbx+0x4]
   140001ca8:	call   0x140004c46
   140001cad:	test   eax,eax
   140001caf:	je     0x140001cdd
   140001cb1:	movups xmm0,XMMWORD PTR [r14+0x78]
   140001cb6:	mov    rdx,QWORD PTR [r14+0x70]
   140001cba:	lea    r8,[rbp-0x20]
   140001cbe:	mov    QWORD PTR [rsp+0x30],r15
   140001cc3:	lea    ecx,[rbx+0x3]
   140001cc6:	mov    QWORD PTR [rsp+0x28],r15
   140001ccb:	xor    r9d,r9d
   140001cce:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   140001cd3:	mov    QWORD PTR [rsp+0x20],r15
   140001cd8:	call   0x140004c40
   140001cdd:	lea    r9,[rbp+0x40]
   140001ce1:	mov    r8d,edi
   140001ce4:	mov    rdx,r14
   140001ce7:	lea    rcx,[rip+0xfffffffffffffabe]        # 0x1400017ac
   140001cee:	call   0x140004c22
   140001cf3:	mov    ebx,eax
   140001cf5:	test   eax,eax
   140001cf7:	jne    0x140001cff
   140001cf9:	cmp    DWORD PTR [rbp+0x40],r15d
   140001cfd:	jne    0x140001d6a
   140001cff:	mov    ecx,0x5
   140001d04:	call   0x140004c34
   140001d09:	mov    edx,edi
   140001d0b:	mov    ecx,0x4
   140001d10:	call   0x140004c46
   140001d15:	test   eax,eax
   140001d17:	je     0x140001d46
   140001d19:	movups xmm0,XMMWORD PTR [r14+0x78]
   140001d1e:	mov    rdx,QWORD PTR [r14+0x70]
   140001d22:	lea    r8,[rbp-0x10]
   140001d26:	xor    r9d,r9d
   140001d29:	mov    QWORD PTR [rsp+0x30],r15
   140001d2e:	mov    QWORD PTR [rsp+0x28],r15
   140001d33:	movdqu XMMWORD PTR [rbp-0x10],xmm0
   140001d38:	mov    QWORD PTR [rsp+0x20],r15
   140001d3d:	lea    ecx,[r9+0x4]
   140001d41:	call   0x140004c40
   140001d46:	test   ebx,ebx
   140001d48:	jne    0x140001da5
   140001d4a:	cmp    DWORD PTR [rbp+0x40],r15d
   140001d4e:	jne    0x140001d6a
   140001d50:	call   0x140004ca8
   140001d55:	mov    ebx,eax
   140001d57:	jmp    0x140001da1
   140001d59:	mov    rdx,r14
   140001d5c:	mov    rcx,rsi
   140001d5f:	call   0x140001df4
   140001d64:	mov    ebx,eax
   140001d66:	test   eax,eax
   140001d68:	jne    0x140001da5
   140001d6a:	xor    edx,edx
   140001d6c:	xor    ecx,ecx
   140001d6e:	call   QWORD PTR [rip+0x428c]        # 0x140006000
   140001d74:	test   eax,eax
   140001d76:	jne    0x140001d80
   140001d78:	call   0x140004ca8
   140001d7d:	mov    ebx,r15d
   140001d80:	test   r13d,r13d
   140001d83:	je     0x140001d8e
   140001d85:	mov    ecx,ebx
   140001d87:	call   0x140001248
   140001d8c:	jmp    0x140001d93
   140001d8e:	test   r12d,r12d
   140001d91:	je     0x140001da1
   140001d93:	mov    DWORD PTR [rsi+0x40],edi
   140001d96:	jmp    0x140001da1
   140001d98:	test   ebx,ebx
   140001d9a:	jne    0x140001db2
   140001d9c:	mov    ebx,0x80004005
   140001da1:	test   ebx,ebx
   140001da3:	je     0x140001dc0
   140001da5:	test   r14,r14
   140001da8:	je     0x140001db2
   140001daa:	mov    rcx,r14
   140001dad:	call   0x140005000
   140001db2:	mov    ecx,ebx
   140001db4:	mov    DWORD PTR [rsi+0x40],0x1
   140001dbb:	call   0x140001248
   140001dc0:	cmp    DWORD PTR [rsi+0x38],r15d
   140001dc4:	je     0x140001dd0
   140001dc6:	lea    rcx,[rsi+0x10]
   140001dca:	call   QWORD PTR [rip+0x4278]        # 0x140006048
   140001dd0:	mov    rax,QWORD PTR [rsi]
   140001dd3:	mov    rcx,rsi
   140001dd6:	call   QWORD PTR [rax+0x10]
   140001dd9:	mov    eax,ebx
   140001ddb:	mov    rbx,QWORD PTR [rsp+0xc0]
   140001de3:	add    rsp,0x70
   140001de7:	pop    r15
   140001de9:	pop    r14
   140001deb:	pop    r13
   140001ded:	pop    r12
   140001def:	pop    rdi
   140001df0:	pop    rsi
   140001df1:	pop    rbp
   140001df2:	ret    
   140001df3:	int3   
   140001df4:	mov    QWORD PTR [rsp+0x18],rbx
   140001df9:	push   rbp
   140001dfa:	push   rsi
   140001dfb:	push   rdi
   140001dfc:	push   r12
   140001dfe:	push   r13
   140001e00:	push   r14
   140001e02:	push   r15
   140001e04:	lea    rbp,[rsp-0x1c0]
   140001e0c:	sub    rsp,0x2c0
   140001e13:	mov    rax,QWORD PTR [rip+0x61f6]        # 0x140008010
   140001e1a:	xor    rax,rsp
   140001e1d:	mov    QWORD PTR [rbp+0x1b0],rax
   140001e24:	mov    rsi,rdx
   140001e27:	mov    r12,rcx
   140001e2a:	xor    r13d,r13d
   140001e2d:	lea    rcx,[rbp-0x6f]
   140001e31:	xor    edx,edx
   140001e33:	mov    BYTE PTR [rbp-0x70],r13b
   140001e37:	mov    r8d,0x103
   140001e3d:	mov    edi,r13d
   140001e40:	call   0x140004686
   140001e45:	mov    eax,DWORD PTR [rip+0x6225]        # 0x140008070
   140001e4b:	mov    r14d,r13d
   140001e4e:	mov    QWORD PTR [rsp+0x50],r13
   140001e53:	mov    ebx,r13d
   140001e56:	mov    DWORD PTR [rsp+0x44],r13d
   140001e5b:	mov    r15d,r13d
   140001e5e:	test   eax,eax
   140001e60:	jne    0x140001e6e
   140001e62:	call   QWORD PTR [rip+0x41f8]        # 0x140006060
   140001e68:	mov    DWORD PTR [rip+0x6202],eax        # 0x140008070
   140001e6e:	cmp    eax,DWORD PTR [rsi+0x88]
   140001e74:	je     0x140001f1f
   140001e7a:	mov    edx,DWORD PTR [rsi+0x4c]
   140001e7d:	xor    r9d,r9d
   140001e80:	mov    DWORD PTR [rsp+0x38],0x1
   140001e88:	mov    r8d,eax
   140001e8b:	mov    DWORD PTR [rsp+0x30],r13d
   140001e90:	mov    QWORD PTR [rsp+0x28],r13
   140001e95:	lea    ecx,[r9+0x5]
   140001e99:	mov    DWORD PTR [rsp+0x20],r13d
   140001e9e:	call   0x1400024e0
   140001ea3:	mov    QWORD PTR [rsi+0x60],rax
   140001ea7:	cmp    rax,0x1
   140001eab:	je     0x140001ebf
   140001ead:	lea    rdx,[rsp+0x44]
   140001eb2:	mov    rcx,rax
   140001eb5:	call   QWORD PTR [rip+0x428d]        # 0x140006148
   140001ebb:	test   eax,eax
   140001ebd:	jne    0x140001f12
   140001ebf:	mov    r8d,DWORD PTR [rip+0x61aa]        # 0x140008070
   140001ec6:	xor    r9d,r9d
   140001ec9:	mov    edx,DWORD PTR [rsi+0x4c]
   140001ecc:	mov    DWORD PTR [rsp+0x38],0x1
   140001ed4:	mov    DWORD PTR [rsp+0x30],r13d
   140001ed9:	lea    ecx,[r9+0x5]
   140001edd:	mov    QWORD PTR [rsp+0x28],r13
   140001ee2:	mov    DWORD PTR [rsp+0x20],r13d
   140001ee7:	call   0x1400024e0
   140001eec:	mov    QWORD PTR [rsi+0x60],rax
   140001ef0:	cmp    rax,0x1
   140001ef4:	je     0x140001f08
   140001ef6:	lea    rdx,[rsp+0x44]
   140001efb:	mov    rcx,rax
   140001efe:	call   QWORD PTR [rip+0x4244]        # 0x140006148
   140001f04:	test   eax,eax
   140001f06:	jne    0x140001f12
   140001f08:	mov    r14d,0x1
   140001f0e:	mov    QWORD PTR [rsi+0x60],r13
   140001f12:	mov    rax,QWORD PTR [rsi+0x60]
   140001f16:	mov    QWORD PTR [rsi+0x68],rax
   140001f1a:	test   r14d,r14d
   140001f1d:	jne    0x140001f77
   140001f1f:	lea    rcx,[rsp+0x50]
   140001f24:	call   QWORD PTR [rip+0x413e]        # 0x140006068
   140001f2a:	mov    rcx,QWORD PTR [rsp+0x50]
   140001f2f:	movabs rax,0x346dc5d63886594b
   140001f39:	sub    rcx,QWORD PTR [rsi+0x58]
   140001f3d:	imul   rcx
   140001f40:	sar    rdx,0xb
   140001f44:	mov    rax,rdx
   140001f47:	shr    rax,0x3f
   140001f4b:	add    rdx,rax
   140001f4e:	mov    eax,0x10624dd3
   140001f53:	mul    edx
   140001f55:	shr    edx,0x6
   140001f58:	cmp    edx,DWORD PTR [rip+0x60aa]        # 0x140008008
   140001f5e:	jbe    0x140001fa4
   140001f60:	mov    rcx,rsi
   140001f63:	call   0x140001724
   140001f68:	test   eax,eax
   140001f6a:	jne    0x140001fa4
   140001f6c:	lea    ecx,[rax+0x2]
   140001f6f:	lea    ebx,[rax+0x5]
   140001f72:	call   0x140004c2e
   140001f77:	mov    r14d,0x1
   140001f7d:	mov    r15d,0xc
   140001f83:	mov    rcx,r12
   140001f86:	mov    edx,r15d
   140001f89:	call   0x1400013b8
   140001f8e:	mov    rdx,rax
   140001f91:	test   rax,rax
   140001f94:	jne    0x1400021c3
   140001f9a:	mov    edi,0x8007000e
   140001f9f:	jmp    0x14000221b
   140001fa4:	mov    r9d,0x104
   140001faa:	lea    r8,[rbp-0x70]
   140001fae:	lea    rdx,[rip+0x44fb]        # 0x1400064b0
   140001fb5:	mov    rcx,rsi
   140001fb8:	call   0x140003ed4
   140001fbd:	mov    r14d,0x1
   140001fc3:	cmp    eax,r14d
   140001fc6:	jge    0x140001fd2
   140001fc8:	mov    ebx,r14d
   140001fcb:	mov    edi,0x80004005
   140001fd0:	jmp    0x140001f7d
   140001fd2:	mov    edx,r14d
   140001fd5:	mov    ecx,0x4
   140001fda:	call   0x140004c46
   140001fdf:	test   eax,eax
   140001fe1:	je     0x14000200f
   140001fe3:	movups xmm0,XMMWORD PTR [rsi+0x78]
   140001fe7:	mov    rdx,QWORD PTR [rsi+0x70]
   140001feb:	lea    r8,[rbp-0x80]
   140001fef:	xor    r9d,r9d
   140001ff2:	mov    QWORD PTR [rsp+0x30],r13
   140001ff7:	mov    QWORD PTR [rsp+0x28],r13
   140001ffc:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   140002001:	mov    QWORD PTR [rsp+0x20],r13
   140002006:	lea    ecx,[r9+0x5]
   14000200a:	call   0x140004c40
   14000200f:	lea    r8,[rsp+0x48]
   140002014:	mov    QWORD PTR [rsp+0x48],r13
   140002019:	xor    edx,edx
   14000201b:	mov    DWORD PTR [rsp+0x40],r13d
   140002020:	lea    rcx,[rbp-0x70]
   140002024:	call   0x140004c28
   140002029:	mov    edi,eax
   14000202b:	cmp    eax,r14d
   14000202e:	jbe    0x14000204d
   140002030:	call   0x1400011a8
   140002035:	test   eax,eax
   140002037:	jne    0x14000203e
   140002039:	lea    ebx,[rax+0x6]
   14000203c:	jmp    0x14000204d
   14000203e:	call   0x1400012a8
   140002043:	neg    eax
   140002045:	sbb    ebx,ebx
   140002047:	and    ebx,0x2
   14000204a:	add    ebx,0x2
   14000204d:	cmp    DWORD PTR [rip+0x6010],r13d        # 0x140008064
   140002054:	je     0x140002068
   140002056:	cmp    edi,r14d
   140002059:	jbe    0x14000206b
   14000205b:	mov    ecx,edi
   14000205d:	mov    DWORD PTR [rip+0x6049],edi        # 0x1400080ac
   140002063:	call   0x140001248
   140002068:	cmp    edi,r14d
   14000206b:	jne    0x1400020fb
   140002071:	mov    r9d,0x104
   140002077:	lea    r8,[rbp+0xa0]
   14000207e:	lea    rdx,[rip+0x443b]        # 0x1400064c0
   140002085:	mov    rcx,rsi
   140002088:	call   0x140003ed4
   14000208d:	cmp    eax,r14d
   140002090:	jl     0x140001fc8
   140002096:	lea    r8,[rsp+0x48]
   14000209b:	lea    rdx,[rbp+0xa0]
   1400020a2:	lea    rcx,[rbp-0x70]
   1400020a6:	call   0x140004c28
   1400020ab:	mov    edi,eax
   1400020ad:	cmp    eax,r14d
   1400020b0:	jbe    0x1400020dc
   1400020b2:	call   0x1400011a8
   1400020b7:	test   eax,eax
   1400020b9:	jne    0x1400020c0
   1400020bb:	lea    ebx,[rax+0x6]
   1400020be:	jmp    0x1400020dc
   1400020c0:	call   0x1400012a8
   1400020c5:	test   eax,eax
   1400020c7:	jne    0x1400020ce
   1400020c9:	lea    ebx,[rax+0x2]
   1400020cc:	jmp    0x1400020dc
   1400020ce:	mov    eax,edi
   1400020d0:	sub    eax,0x80131014
   1400020d5:	neg    eax
   1400020d7:	sbb    ebx,ebx
   1400020d9:	add    ebx,0x5
   1400020dc:	cmp    DWORD PTR [rip+0x5f81],r13d        # 0x140008064
   1400020e3:	je     0x1400020fb
   1400020e5:	test   edi,edi
   1400020e7:	je     0x140002103
   1400020e9:	cmp    edi,r14d
   1400020ec:	je     0x1400020fb
   1400020ee:	mov    ecx,edi
   1400020f0:	mov    DWORD PTR [rip+0x5fb6],edi        # 0x1400080ac
   1400020f6:	call   0x140001248
   1400020fb:	test   edi,edi
   1400020fd:	jne    0x140001f7d
   140002103:	cmp    QWORD PTR [rsp+0x48],r13
   140002108:	je     0x1400021a6
   14000210e:	mov    edx,r14d
   140002111:	mov    ecx,0x5
   140002116:	call   0x140004c46
   14000211b:	test   eax,eax
   14000211d:	je     0x14000214d
   14000211f:	movups xmm0,XMMWORD PTR [rsi+0x78]
   140002123:	mov    rdx,QWORD PTR [rsi+0x70]
   140002127:	lea    r8,[rsp+0x70]
   14000212c:	xor    r9d,r9d
   14000212f:	mov    QWORD PTR [rsp+0x30],r13
   140002134:	mov    QWORD PTR [rsp+0x28],r13
   140002139:	movdqu XMMWORD PTR [rsp+0x70],xmm0
   14000213f:	mov    QWORD PTR [rsp+0x20],r13
   140002144:	lea    ecx,[r9+0x6]
   140002148:	call   0x140004c40
   14000214d:	lock add DWORD PTR [rip+0x5f13],r14d        # 0x140008068
   140002155:	lock add DWORD PTR [rip+0x5f0f],r14d        # 0x14000806c
   14000215d:	mov    rax,QWORD PTR [rsp+0x48]
   140002162:	lea    r9,[rsp+0x40]
   140002167:	mov    DWORD PTR [rip+0x5ef6],r13d        # 0x140008064
   14000216e:	mov    r8d,r14d
   140002171:	mov    rdx,rsi
   140002174:	mov    rcx,QWORD PTR [rax+0x8]
   140002178:	mov    rax,QWORD PTR [rcx]
   14000217b:	call   QWORD PTR [rax+0x28]
   14000217e:	mov    edi,eax
   140002180:	test   eax,eax
   140002182:	je     0x14000219b
   140002184:	cmp    eax,0x80131014
   140002189:	je     0x140002193
   14000218b:	mov    ebx,0x5
   140002190:	mov    r15d,r14d
   140002193:	mov    edi,r13d
   140002196:	mov    DWORD PTR [rsp+0x40],r13d
   14000219b:	mov    rcx,QWORD PTR [rsp+0x48]
   1400021a0:	mov    rax,QWORD PTR [rcx]
   1400021a3:	call   QWORD PTR [rax+0x10]
   1400021a6:	test   edi,edi
   1400021a8:	jne    0x140001f7d
   1400021ae:	cmp    DWORD PTR [rsp+0x40],r13d
   1400021b3:	jne    0x140001fd2
   1400021b9:	test   r15d,r15d
   1400021bc:	je     0x14000221b
   1400021be:	jmp    0x140001f7d
   1400021c3:	mov    DWORD PTR [rax+0x2c],r14d
   1400021c7:	mov    eax,DWORD PTR [rax+0x34]
   1400021ca:	mov    DWORD PTR [rdx+0x30],eax
   1400021cd:	mov    DWORD PTR [rdx+0x48],0x7
   1400021d4:	mov    eax,DWORD PTR [rsi+0x4c]
   1400021d7:	mov    DWORD PTR [rdx+0x4c],eax
   1400021da:	mov    DWORD PTR [rdx+0x50],r15d
   1400021de:	mov    DWORD PTR [rsp+0x58],r14d
   1400021e3:	mov    DWORD PTR [rsp+0x5c],edi
   1400021e7:	movsd  xmm0,QWORD PTR [rsp+0x58]
   1400021ed:	movsd  QWORD PTR [rdx+0x58],xmm0
   1400021f2:	mov    DWORD PTR [rdx+0x60],ebx
   1400021f5:	mov    rcx,QWORD PTR [rip+0x5e84]        # 0x140008080
   1400021fc:	call   0x140001958
   140002201:	mov    edi,eax
   140002203:	test   eax,eax
   140002205:	jne    0x14000221b
   140002207:	mov    rcx,QWORD PTR [rip+0x5e72]        # 0x140008080
   14000220e:	test   rcx,rcx
   140002211:	je     0x14000221b
   140002213:	mov    rdx,rsi
   140002216:	call   0x1400018fc
   14000221b:	mov    eax,edi
   14000221d:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140002224:	xor    rcx,rsp
   140002227:	call   0x140004660
   14000222c:	mov    rbx,QWORD PTR [rsp+0x310]
   140002234:	add    rsp,0x2c0
   14000223b:	pop    r15
   14000223d:	pop    r14
   14000223f:	pop    r13
   140002241:	pop    r12
   140002243:	pop    rdi
   140002244:	pop    rsi
   140002245:	pop    rbp
   140002246:	ret    
   140002247:	int3   
   140002248:	sub    rsp,0x28
   14000224c:	mov    rax,QWORD PTR [rdx]
   14000224f:	cmp    rax,QWORD PTR [rip+0x44fa]        # 0x140006750
   140002256:	jne    0x140002265
   140002258:	mov    rax,QWORD PTR [rdx+0x8]
   14000225c:	cmp    rax,QWORD PTR [rip+0x44f5]        # 0x140006758
   140002263:	je     0x14000227e
   140002265:	mov    rax,QWORD PTR [rdx]
   140002268:	cmp    rax,QWORD PTR [rip+0x4269]        # 0x1400064d8
   14000226f:	jne    0x14000228b
   140002271:	mov    rax,QWORD PTR [rdx+0x8]
   140002275:	cmp    rax,QWORD PTR [rip+0x4264]        # 0x1400064e0
   14000227c:	jne    0x14000228b
   14000227e:	mov    QWORD PTR [r8],rcx
   140002281:	mov    rax,QWORD PTR [rcx]
   140002284:	call   QWORD PTR [rax+0x8]
   140002287:	xor    eax,eax
   140002289:	jmp    0x140002294
   14000228b:	and    QWORD PTR [r8],0x0
   14000228f:	mov    eax,0x80004002
   140002294:	add    rsp,0x28
   140002298:	ret    
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	or     eax,0xffffffff
   14000229f:	lock xadd DWORD PTR [rip+0x5df9],eax        # 0x1400080a0
   1400022a7:	dec    eax
   1400022a9:	ret    
   1400022aa:	int3   
   1400022ab:	int3   
   1400022ac:	mov    eax,DWORD PTR [rdx+0x34]
   1400022af:	cmp    eax,0x78
   1400022b2:	jne    0x1400022be
   1400022b4:	mov    r8,rdx
   1400022b7:	xor    edx,edx
   1400022b9:	jmp    0x1400010d8
   1400022be:	cmp    eax,0xe0
   1400022c3:	jne    0x1400022cf
   1400022c5:	mov    r8,rdx
   1400022c8:	mov    edx,0x1
   1400022cd:	jmp    0x1400022b9
   1400022cf:	cmp    eax,0xfb0
   1400022d4:	jne    0x1400022e0
   1400022d6:	mov    r8,rdx
   1400022d9:	mov    edx,0x2
   1400022de:	jmp    0x1400022b9
   1400022e0:	cmp    eax,0x3e90
   1400022e5:	jne    0x1400022f1
   1400022e7:	mov    r8,rdx
   1400022ea:	mov    edx,0x3
   1400022ef:	jmp    0x1400022b9
   1400022f1:	cmp    eax,0x7d10
   1400022f6:	jne    0x140002302
   1400022f8:	mov    r8,rdx
   1400022fb:	mov    edx,0x4
   140002300:	jmp    0x1400022b9
   140002302:	mov    rcx,rdx
   140002305:	jmp    0x140005000
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	test   rcx,rcx
   14000230f:	jne    0x140002317
   140002311:	mov    eax,0x80070057
   140002316:	ret    
   140002317:	mov    rdx,rcx
   14000231a:	mov    rcx,QWORD PTR [rip+0x5d5f]        # 0x140008080
   140002321:	jmp    0x140001958
   140002326:	int3   
   140002327:	int3   
   140002328:	mov    QWORD PTR [rsp+0x8],rbx
   14000232d:	mov    QWORD PTR [rsp+0x10],rbp
   140002332:	mov    QWORD PTR [rsp+0x18],rsi
   140002337:	push   rdi
   140002338:	sub    rsp,0x30
   14000233c:	xor    esi,esi
   14000233e:	mov    rdi,rdx
   140002341:	mov    rbx,rcx
   140002344:	cmp    DWORD PTR [rcx+0x38],esi
   140002347:	jne    0x14000234f
   140002349:	mov    rbp,QWORD PTR [rcx+0x8]
   14000234d:	jmp    0x14000235d
   14000234f:	add    rcx,0x10
   140002353:	call   QWORD PTR [rip+0x3ce7]        # 0x140006040
   140002359:	mov    rbp,QWORD PTR [rbx+0x8]
   14000235d:	cmp    rbp,0xffffffffffffffff
   140002361:	jne    0x14000236d
   140002363:	mov    esi,0x80004005
   140002368:	jmp    0x140002413
   14000236d:	test   rdi,rdi
   140002370:	jne    0x1400023a1
   140002372:	lea    edx,[rdi+0x4]
   140002375:	mov    rcx,rbx
   140002378:	call   0x140001460
   14000237d:	mov    rdi,rax
   140002380:	test   rax,rax
   140002383:	jne    0x140002395
   140002385:	mov    edx,0x7d00
   14000238a:	mov    rcx,rbx
   14000238d:	call   0x14000115c
   140002392:	mov    rdi,rax
   140002395:	test   rdi,rdi
   140002398:	jne    0x1400023a1
   14000239a:	mov    esi,0x8007000e
   14000239f:	jmp    0x140002413
   1400023a1:	and    DWORD PTR [rdi+0x2c],esi
   1400023a4:	mov    rcx,rbx
   1400023a7:	mov    DWORD PTR [rdi+0x28],0x1
   1400023ae:	mov    rax,QWORD PTR [rbx]
   1400023b1:	call   QWORD PTR [rax+0x8]
   1400023b4:	mov    eax,DWORD PTR [rdi+0x38]
   1400023b7:	lea    r9,[rdi+0x30]
   1400023bb:	mov    r8d,DWORD PTR [rdi+0x34]
   1400023bf:	mov    rcx,rbp
   1400023c2:	sub    r8d,eax
   1400023c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400023ca:	lea    rdx,[rax+0x48]
   1400023ce:	add    rdx,rdi
   1400023d1:	call   QWORD PTR [rip+0x3d91]        # 0x140006168
   1400023d7:	test   eax,eax
   1400023d9:	jne    0x140002404
   1400023db:	call   QWORD PTR [rip+0x3d5f]        # 0x140006140
   1400023e1:	cmp    eax,0x3e5
   1400023e6:	je     0x140002404
   1400023e8:	cmp    eax,0xea
   1400023ed:	je     0x140002404
   1400023ef:	and    DWORD PTR [rdi+0x28],esi
   1400023f2:	mov    rcx,rbx
   1400023f5:	mov    rax,QWORD PTR [rbx]
   1400023f8:	call   QWORD PTR [rax+0x10]
   1400023fb:	call   0x140004ca8
   140002400:	mov    esi,eax
   140002402:	jmp    0x140002413
   140002404:	and    DWORD PTR [rdi+0x28],esi
   140002407:	lea    rcx,[rip+0x5cba]        # 0x1400080c8
   14000240e:	call   0x14000347c
   140002413:	cmp    DWORD PTR [rbx+0x38],0x0
   140002417:	je     0x140002423
   140002419:	lea    rcx,[rbx+0x10]
   14000241d:	call   QWORD PTR [rip+0x3c25]        # 0x140006048
   140002423:	test   esi,esi
   140002425:	je     0x14000242e
   140002427:	mov    ecx,esi
   140002429:	call   0x140001248
   14000242e:	mov    rbx,QWORD PTR [rsp+0x40]
   140002433:	mov    eax,esi
   140002435:	mov    rsi,QWORD PTR [rsp+0x50]
   14000243a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000243f:	add    rsp,0x30
   140002443:	pop    rdi
   140002444:	ret    
   140002445:	int3   
   140002446:	int3   
   140002447:	int3   
   140002448:	mov    QWORD PTR [rsp+0x8],rbx
   14000244d:	mov    QWORD PTR [rsp+0x18],rbp
   140002452:	mov    QWORD PTR [rsp+0x20],rsi
   140002457:	push   rdi
   140002458:	sub    rsp,0x20
   14000245c:	mov    eax,DWORD PTR [rip+0x5c32]        # 0x140008094
   140002462:	xor    ebx,ebx
   140002464:	test   eax,eax
   140002466:	cmove  eax,ecx
   140002469:	mov    DWORD PTR [rip+0x5c25],eax        # 0x140008094
   14000246f:	mov    rax,QWORD PTR [rip+0x5c12]        # 0x140008088
   140002476:	test   rax,rax
   140002479:	je     0x1400024be
   14000247b:	cmp    QWORD PTR [rax],rbx
   14000247e:	je     0x1400024be
   140002480:	cmp    DWORD PTR [rax+0x8],ebx
   140002483:	jle    0x1400024be
   140002485:	mov    edi,ebx
   140002487:	or     rbp,0xffffffffffffffff
   14000248b:	mov    rsi,QWORD PTR [rax]
   14000248e:	mov    rcx,QWORD PTR [rdi+rsi*1]
   140002492:	cmp    rcx,rbp
   140002495:	je     0x1400024a8
   140002497:	mov    rax,rcx
   14000249a:	lock cmpxchg QWORD PTR [rdi+rsi*1],rbp
   1400024a0:	jne    0x1400024a8
   1400024a2:	call   QWORD PTR [rip+0x3ca8]        # 0x140006150
   1400024a8:	mov    QWORD PTR [rdi+rsi*1],rbp
   1400024ac:	inc    ebx
   1400024ae:	mov    rax,QWORD PTR [rip+0x5bd3]        # 0x140008088
   1400024b5:	add    rdi,0x38
   1400024b9:	cmp    ebx,DWORD PTR [rax+0x8]
   1400024bc:	jl     0x14000248b
   1400024be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024c3:	mov    rbp,QWORD PTR [rsp+0x40]
   1400024c8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400024cd:	mov    DWORD PTR [rip+0x5bc1],0x1        # 0x140008098
   1400024d7:	add    rsp,0x20
   1400024db:	pop    rdi
   1400024dc:	ret    
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	mov    rax,rsp
   1400024e3:	mov    QWORD PTR [rax+0x20],rbx
   1400024e7:	mov    DWORD PTR [rax+0x18],r8d
   1400024eb:	mov    DWORD PTR [rax+0x10],edx
   1400024ee:	mov    DWORD PTR [rax+0x8],ecx
   1400024f1:	push   rbp
   1400024f2:	push   rsi
   1400024f3:	push   rdi
   1400024f4:	push   r12
   1400024f6:	push   r13
   1400024f8:	push   r14
   1400024fa:	push   r15
   1400024fc:	sub    rsp,0x20
   140002500:	mov    edi,DWORD PTR [rsp+0x80]
   140002507:	xor    ebp,ebp
   140002509:	mov    r15,r9
   14000250c:	test   edi,edi
   14000250e:	jns    0x140002525
   140002510:	test   r9,r9
   140002513:	je     0x140002523
   140002515:	mov    rcx,r9
   140002518:	call   QWORD PTR [rip+0x3b62]        # 0x140006080
   14000251e:	lea    edi,[rax+0x1]
   140002521:	jmp    0x140002525
   140002523:	xor    edi,edi
   140002525:	movsxd r13,edi
   140002528:	lea    rcx,[r13+0x20]
   14000252c:	cmp    rcx,0x20
   140002530:	jb     0x1400025ff
   140002536:	call   0x140004fc8
   14000253b:	mov    rsi,rax
   14000253e:	test   rax,rax
   140002541:	je     0x1400025ff
   140002547:	movsxd r14,DWORD PTR [rsp+0x90]
   14000254f:	lea    rcx,[r14+0x20]
   140002553:	call   0x140004fc8
   140002558:	mov    rbx,rax
   14000255b:	test   rax,rax
   14000255e:	je     0x1400025ea
   140002564:	mov    eax,DWORD PTR [rsp+0x60]
   140002568:	mov    DWORD PTR [rsi],eax
   14000256a:	mov    eax,DWORD PTR [rsp+0x68]
   14000256e:	mov    DWORD PTR [rsi+0x4],eax
   140002571:	movsxd rax,DWORD PTR [rsp+0x70]
   140002576:	mov    QWORD PTR [rsi+0x8],rax
   14000257a:	mov    DWORD PTR [rsi+0x10],r14d
   14000257e:	mov    DWORD PTR [rsi+0x14],edi
   140002581:	test   edi,edi
   140002583:	jle    0x140002594
   140002585:	lea    rcx,[rsi+0x18]
   140002589:	mov    r8,r13
   14000258c:	mov    rdx,r15
   14000258f:	call   0x140004680
   140002594:	mov    r9d,DWORD PTR [rsp+0x98]
   14000259c:	mov    DWORD PTR [rbx+0x14],r14d
   1400025a0:	test   r9d,r9d
   1400025a3:	je     0x1400025ad
   1400025a5:	mov    QWORD PTR [rbx+0x8],0x1
   1400025ad:	mov    rcx,QWORD PTR [rip+0x5ad4]        # 0x140008088
   1400025b4:	mov    r8,rbx
   1400025b7:	mov    rdx,rsi
   1400025ba:	call   0x140002a90
   1400025bf:	test   eax,eax
   1400025c1:	jne    0x1400025ea
   1400025c3:	mov    rbp,QWORD PTR [rbx+0x8]
   1400025c7:	test   rbp,rbp
   1400025ca:	jle    0x1400025ea
   1400025cc:	mov    rcx,QWORD PTR [rsp+0x88]
   1400025d4:	test   rcx,rcx
   1400025d7:	je     0x1400025ea
   1400025d9:	test   r14d,r14d
   1400025dc:	jle    0x1400025ea
   1400025de:	lea    rdx,[rbx+0x18]
   1400025e2:	mov    r8,r14
   1400025e5:	call   0x140004680
   1400025ea:	mov    rcx,rsi
   1400025ed:	call   0x140005000
   1400025f2:	test   rbx,rbx
   1400025f5:	je     0x1400025ff
   1400025f7:	mov    rcx,rbx
   1400025fa:	call   0x140005000
   1400025ff:	mov    rax,rbp
   140002602:	mov    rbx,QWORD PTR [rsp+0x78]
   140002607:	add    rsp,0x20
   14000260b:	pop    r15
   14000260d:	pop    r14
   14000260f:	pop    r13
   140002611:	pop    r12
   140002613:	pop    rdi
   140002614:	pop    rsi
   140002615:	pop    rbp
   140002616:	ret    
   140002617:	int3   
   140002618:	mov    rax,rsp
   14000261b:	mov    QWORD PTR [rax+0x8],rbx
   14000261f:	mov    QWORD PTR [rax+0x10],rbp
   140002623:	mov    QWORD PTR [rax+0x18],rsi
   140002627:	mov    QWORD PTR [rax+0x20],rdi
   14000262b:	push   r14
   14000262d:	sub    rsp,0x20
   140002631:	xor    ebx,ebx
   140002633:	mov    ebp,r8d
   140002636:	cmp    DWORD PTR [rcx+0x8],0x1
   14000263a:	mov    rdi,rdx
   14000263d:	mov    rsi,rcx
   140002640:	jl     0x140002685
   140002642:	mov    DWORD PTR [rdx],ebx
   140002644:	cmp    DWORD PTR [rcx+0x8],ebx
   140002647:	jle    0x14000267d
   140002649:	movsxd rax,DWORD PTR [rdi]
   14000264c:	imul   r14,rax,0x38
   140002650:	add    r14,QWORD PTR [rsi]
   140002653:	cmp    DWORD PTR [r14+0x30],ebx
   140002657:	jne    0x14000265e
   140002659:	mov    rax,QWORD PTR [r14]
   14000265c:	jmp    0x14000266f
   14000265e:	lea    rcx,[r14+0x8]
   140002662:	call   QWORD PTR [rip+0x39e8]        # 0x140006050
   140002668:	test   eax,eax
   14000266a:	jne    0x140002659
   14000266c:	mov    rax,rbx
   14000266f:	test   rax,rax
   140002672:	jne    0x1400026d6
   140002674:	inc    DWORD PTR [rdi]
   140002676:	mov    eax,DWORD PTR [rdi]
   140002678:	cmp    eax,DWORD PTR [rsi+0x8]
   14000267b:	jl     0x140002649
   14000267d:	test   ebp,ebp
   14000267f:	je     0x14000268d
   140002681:	or     rbx,0xffffffffffffffff
   140002685:	or     DWORD PTR [rdi],0xffffffff
   140002688:	mov    rax,rbx
   14000268b:	jmp    0x1400026d6
   14000268d:	mov    eax,0x1
   140002692:	lock xadd DWORD PTR [rsi+0xc],eax
   140002697:	inc    eax
   140002699:	mov    DWORD PTR [rdi],eax
   14000269b:	cmp    eax,DWORD PTR [rsi+0x8]
   14000269e:	jge    0x1400026a4
   1400026a0:	test   eax,eax
   1400026a2:	jns    0x1400026ba
   1400026a4:	cdq    
   1400026a5:	idiv   DWORD PTR [rsi+0x8]
   1400026a8:	mov    DWORD PTR [rdi],edx
   1400026aa:	cmp    edx,DWORD PTR [rsi+0x8]
   1400026ad:	jge    0x1400026b3
   1400026af:	test   edx,edx
   1400026b1:	jns    0x1400026b5
   1400026b3:	mov    DWORD PTR [rdi],ebx
   1400026b5:	mov    eax,DWORD PTR [rdi]
   1400026b7:	mov    DWORD PTR [rsi+0xc],eax
   1400026ba:	movsxd rax,DWORD PTR [rdi]
   1400026bd:	imul   rdi,rax,0x38
   1400026c1:	add    rdi,QWORD PTR [rsi]
   1400026c4:	cmp    DWORD PTR [rdi+0x30],ebx
   1400026c7:	je     0x1400026d3
   1400026c9:	lea    rcx,[rdi+0x8]
   1400026cd:	call   QWORD PTR [rip+0x396d]        # 0x140006040
   1400026d3:	mov    rax,QWORD PTR [rdi]
   1400026d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026db:	mov    rbp,QWORD PTR [rsp+0x38]
   1400026e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400026e5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400026ea:	add    rsp,0x20
   1400026ee:	pop    r14
   1400026f0:	ret    
   1400026f1:	int3   
   1400026f2:	int3   
   1400026f3:	int3   
   1400026f4:	rex push rbx
   1400026f6:	push   rbp
   1400026f7:	push   rsi
   1400026f8:	push   rdi
   1400026f9:	push   r12
   1400026fb:	push   r14
   1400026fd:	push   r15
   1400026ff:	sub    rsp,0x270
   140002706:	mov    rax,QWORD PTR [rip+0x5903]        # 0x140008010
   14000270d:	xor    rax,rsp
   140002710:	mov    QWORD PTR [rsp+0x260],rax
   140002718:	xor    ebx,ebx
   14000271a:	movsxd rsi,r8d
   14000271d:	and    QWORD PTR [rcx],rbx
   140002720:	mov    r12,rdx
   140002723:	mov    DWORD PTR [rsp+0x40],0x2
   14000272b:	mov    rdi,rcx
   14000272e:	test   rdx,rdx
   140002731:	je     0x1400028a4
   140002737:	lea    eax,[rsi-0x1]
   14000273a:	cmp    eax,0xc6
   14000273f:	ja     0x1400028a4
   140002745:	mov    rcx,rdx
   140002748:	call   QWORD PTR [rip+0x393a]        # 0x140006088
   14000274e:	cmp    eax,0xff
   140002753:	jge    0x1400028a4
   140002759:	lea    rcx,[rbx-0x1]
   14000275d:	mov    r14,rsi
   140002760:	lea    eax,[rbx+0x38]
   140002763:	mul    rsi
   140002766:	cmovo  rax,rcx
   14000276a:	add    rax,0x8
   14000276e:	cmovb  rax,rcx
   140002772:	mov    rcx,rax
   140002775:	call   0x140004f90
   14000277a:	test   rax,rax
   14000277d:	je     0x1400027b2
   14000277f:	lea    r15d,[r14-0x1]
   140002783:	mov    DWORD PTR [rax],esi
   140002785:	lea    rbp,[rax+0x8]
   140002789:	mov    rsi,rbp
   14000278c:	test   r15d,r15d
   14000278f:	js     0x1400027b4
   140002791:	or     QWORD PTR [rsi],0xffffffffffffffff
   140002795:	lea    rcx,[rsi+0x8]
   140002799:	mov    DWORD PTR [rsi+0x30],0x1
   1400027a0:	call   QWORD PTR [rip+0x3892]        # 0x140006038
   1400027a6:	sub    r15d,0x1
   1400027aa:	lea    rsi,[rsi+0x38]
   1400027ae:	jns    0x140002791
   1400027b0:	jmp    0x1400027b4
   1400027b2:	xor    ebp,ebp
   1400027b4:	mov    QWORD PTR [rdi],rbp
   1400027b7:	test   rbp,rbp
   1400027ba:	jne    0x1400027c6
   1400027bc:	mov    ebx,0x8007000e
   1400027c1:	jmp    0x1400028ad
   1400027c6:	and    DWORD PTR [rdi+0x8],ebx
   1400027c9:	xor    ebp,ebp
   1400027cb:	and    DWORD PTR [rdi+0xc],ebx
   1400027ce:	xor    esi,esi
   1400027d0:	test   r14,r14
   1400027d3:	jle    0x1400028b4
   1400027d9:	xor    r15d,r15d
   1400027dc:	mov    r8,r12
   1400027df:	lea    rcx,[rsp+0x50]
   1400027e4:	mov    edx,0x104
   1400027e9:	call   0x140002b88
   1400027ee:	mov    ebx,eax
   1400027f0:	test   eax,eax
   1400027f2:	jne    0x1400028ad
   1400027f8:	lea    rcx,[rsp+0x50]
   1400027fd:	call   QWORD PTR [rip+0x3885]        # 0x140006088
   140002803:	movsxd rcx,eax
   140002806:	lea    edx,[rbx+0x5f]
   140002809:	inc    eax
   14000280b:	lea    r9d,[rbx+0xa]
   14000280f:	mov    WORD PTR [rsp+rcx*2+0x50],dx
   140002814:	mov    ecx,0x104
   140002819:	sub    ecx,eax
   14000281b:	lea    rdx,[rsp+0x50]
   140002820:	movsxd r8,ecx
   140002823:	movsxd rcx,eax
   140002826:	lea    rdx,[rdx+rcx*2]
   14000282a:	mov    ecx,ebp
   14000282c:	call   QWORD PTR [rip+0x3986]        # 0x1400061b8
   140002832:	and    QWORD PTR [rsp+0x30],0x0
   140002838:	lea    r8d,[rbx+0x7]
   14000283c:	mov    DWORD PTR [rsp+0x28],0x100080
   140002844:	lea    rcx,[rsp+0x50]
   140002849:	xor    r9d,r9d
   14000284c:	mov    DWORD PTR [rsp+0x20],0x3
   140002854:	mov    edx,0xc0000000
   140002859:	call   QWORD PTR [rip+0x3911]        # 0x140006170
   14000285f:	cmp    rax,0xffffffffffffffff
   140002863:	je     0x14000289b
   140002865:	mov    rcx,QWORD PTR [rdi]
   140002868:	lea    rdx,[rsp+0x40]
   14000286d:	xor    r9d,r9d
   140002870:	xor    r8d,r8d
   140002873:	mov    QWORD PTR [r15+rcx*1],rax
   140002877:	mov    rcx,rax
   14000287a:	call   QWORD PTR [rip+0x3840]        # 0x1400060c0
   140002880:	test   eax,eax
   140002882:	je     0x14000289b
   140002884:	inc    DWORD PTR [rdi+0x8]
   140002887:	inc    ebp
   140002889:	inc    rsi
   14000288c:	add    r15,0x38
   140002890:	cmp    rsi,r14
   140002893:	jl     0x1400027dc
   140002899:	jmp    0x1400028b4
   14000289b:	call   0x140004ca8
   1400028a0:	mov    ebx,eax
   1400028a2:	jmp    0x1400028a9
   1400028a4:	mov    ebx,0x80070057
   1400028a9:	test   ebx,ebx
   1400028ab:	je     0x1400028b4
   1400028ad:	mov    ecx,ebx
   1400028af:	call   0x140002448
   1400028b4:	mov    eax,ebx
   1400028b6:	mov    rcx,QWORD PTR [rsp+0x260]
   1400028be:	xor    rcx,rsp
   1400028c1:	call   0x140004660
   1400028c6:	add    rsp,0x270
   1400028cd:	pop    r15
   1400028cf:	pop    r14
   1400028d1:	pop    r12
   1400028d3:	pop    rdi
   1400028d4:	pop    rsi
   1400028d5:	pop    rbp
   1400028d6:	pop    rbx
   1400028d7:	ret    
   1400028d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400028dd:	mov    QWORD PTR [rsp+0x10],rsi
   1400028e2:	push   rdi
   1400028e3:	sub    rsp,0x20
   1400028e7:	xor    ebx,ebx
   1400028e9:	mov    esi,edx
   1400028eb:	mov    rdi,rcx
   1400028ee:	test   rcx,rcx
   1400028f1:	je     0x140002994
   1400028f7:	cmp    WORD PTR [rcx],bx
   1400028fa:	je     0x140002994
   140002900:	cmp    QWORD PTR [rip+0x5781],rbx        # 0x140008088
   140002907:	jne    0x140002999
   14000290d:	lea    eax,[rbx+0x1]
   140002910:	lock xadd DWORD PTR [rip+0x5778],eax        # 0x140008090
   140002918:	mov    rcx,QWORD PTR [rip+0x5769]        # 0x140008088
   14000291f:	inc    eax
   140002921:	cmp    eax,0x1
   140002924:	jne    0x14000295f
   140002926:	test   rcx,rcx
   140002929:	jne    0x14000295f
   14000292b:	lea    ecx,[rbx+0x10]
   14000292e:	call   0x140004f90
   140002933:	mov    QWORD PTR [rip+0x574e],rax        # 0x140008088
   14000293a:	test   rax,rax
   14000293d:	jne    0x140002946
   14000293f:	mov    ebx,0x8007000e
   140002944:	jmp    0x140002999
   140002946:	mov    QWORD PTR [rax],rbx
   140002949:	mov    r8d,esi
   14000294c:	mov    rcx,QWORD PTR [rip+0x5735]        # 0x140008088
   140002953:	mov    rdx,rdi
   140002956:	call   0x1400026f4
   14000295b:	mov    ebx,eax
   14000295d:	jmp    0x140002999
   14000295f:	mov    edi,ebx
   140002961:	test   rcx,rcx
   140002964:	jne    0x140002999
   140002966:	mov    ecx,0x64
   14000296b:	call   QWORD PTR [rip+0x36e7]        # 0x140006058
   140002971:	inc    edi
   140002973:	cmp    edi,0xbb8
   140002979:	jge    0x140002984
   14000297b:	mov    rcx,QWORD PTR [rip+0x5706]        # 0x140008088
   140002982:	jmp    0x140002961
   140002984:	cmp    QWORD PTR [rip+0x56fd],rbx        # 0x140008088
   14000298b:	jne    0x140002999
   14000298d:	mov    ebx,0x800705b4
   140002992:	jmp    0x140002999
   140002994:	mov    ebx,0x8000ffff
   140002999:	mov    rsi,QWORD PTR [rsp+0x38]
   14000299e:	mov    eax,ebx
   1400029a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029a5:	add    rsp,0x20
   1400029a9:	pop    rdi
   1400029aa:	ret    
   1400029ab:	int3   
   1400029ac:	mov    rdx,QWORD PTR [rip+0x56d5]        # 0x140008088
   1400029b3:	xor    eax,eax
   1400029b5:	test   rdx,rdx
   1400029b8:	je     0x1400029e2
   1400029ba:	mov    rcx,QWORD PTR [rdx]
   1400029bd:	test   rcx,rcx
   1400029c0:	je     0x1400029e2
   1400029c2:	cmp    DWORD PTR [rdx+0x8],eax
   1400029c5:	jle    0x1400029dd
   1400029c7:	movsxd r8,DWORD PTR [rdx+0x8]
   1400029cb:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   1400029cf:	je     0x1400029e3
   1400029d1:	inc    rax
   1400029d4:	add    rcx,0x38
   1400029d8:	cmp    rax,r8
   1400029db:	jl     0x1400029cb
   1400029dd:	mov    eax,0x1
   1400029e2:	ret    
   1400029e3:	xor    eax,eax
   1400029e5:	ret    
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	rex push rbx
   1400029ea:	sub    rsp,0x30
   1400029ee:	mov    rcx,QWORD PTR [rip+0x5693]        # 0x140008088
   1400029f5:	test   rcx,rcx
   1400029f8:	jne    0x140002a04
   1400029fa:	mov    eax,0x80004005
   1400029ff:	jmp    0x140002a89
   140002a04:	and    DWORD PTR [rsp+0x50],0x0
   140002a09:	lea    rdx,[rsp+0x40]
   140002a0e:	and    DWORD PTR [rsp+0x48],0x0
   140002a13:	mov    r8d,0x1
   140002a19:	or     DWORD PTR [rsp+0x40],0xffffffff
   140002a1e:	call   0x140002618
   140002a23:	xor    ebx,ebx
   140002a25:	lea    rcx,[rax-0x1]
   140002a29:	cmp    rcx,0xfffffffffffffffd
   140002a2d:	ja     0x140002a55
   140002a2f:	and    QWORD PTR [rsp+0x20],rbx
   140002a34:	lea    r9,[rsp+0x48]
   140002a39:	xor    r8d,r8d
   140002a3c:	lea    rdx,[rsp+0x50]
   140002a41:	mov    rcx,rax
   140002a44:	call   QWORD PTR [rip+0x3716]        # 0x140006160
   140002a4a:	test   eax,eax
   140002a4c:	jne    0x140002a55
   140002a4e:	call   0x140004ca8
   140002a53:	mov    ebx,eax
   140002a55:	movsxd rax,DWORD PTR [rsp+0x40]
   140002a5a:	test   eax,eax
   140002a5c:	js     0x140002a7c
   140002a5e:	mov    rcx,QWORD PTR [rip+0x5623]        # 0x140008088
   140002a65:	imul   rax,rax,0x38
   140002a69:	add    rax,QWORD PTR [rcx]
   140002a6c:	cmp    DWORD PTR [rax+0x30],0x0
   140002a70:	je     0x140002a7c
   140002a72:	lea    rcx,[rax+0x8]
   140002a76:	call   QWORD PTR [rip+0x35cc]        # 0x140006048
   140002a7c:	test   ebx,ebx
   140002a7e:	je     0x140002a87
   140002a80:	mov    ecx,ebx
   140002a82:	call   0x140002448
   140002a87:	mov    eax,ebx
   140002a89:	add    rsp,0x30
   140002a8d:	pop    rbx
   140002a8e:	ret    
   140002a8f:	int3   
   140002a90:	mov    rax,rsp
   140002a93:	mov    QWORD PTR [rax+0x8],rbx
   140002a97:	mov    QWORD PTR [rax+0x18],rbp
   140002a9b:	push   rsi
   140002a9c:	push   rdi
   140002a9d:	push   r12
   140002a9f:	push   r14
   140002aa1:	push   r15
   140002aa3:	sub    rsp,0x30
   140002aa7:	mov    ebp,DWORD PTR [rdx+0x14]
   140002aaa:	mov    r14,r8
   140002aad:	and    DWORD PTR [rax+0x20],0x0
   140002ab1:	mov    r15,rdx
   140002ab4:	or     DWORD PTR [rax+0x10],0xffffffff
   140002ab8:	lea    rdx,[rax+0x10]
   140002abc:	mov    r8d,r9d
   140002abf:	add    ebp,0x20
   140002ac2:	mov    ebx,r9d
   140002ac5:	mov    r12,rcx
   140002ac8:	call   0x140002618
   140002acd:	xor    edi,edi
   140002acf:	mov    rsi,rax
   140002ad2:	test   ebx,ebx
   140002ad4:	je     0x140002adc
   140002ad6:	cmp    rax,0xffffffffffffffff
   140002ada:	je     0x140002b4d
   140002adc:	lea    rcx,[rax-0x1]
   140002ae0:	cmp    rcx,0xfffffffffffffffd
   140002ae4:	ja     0x140002b48
   140002ae6:	and    QWORD PTR [rsp+0x20],rdi
   140002aeb:	lea    r9,[rsp+0x78]
   140002af0:	mov    r8d,ebp
   140002af3:	mov    rdx,r15
   140002af6:	mov    rcx,rax
   140002af9:	call   QWORD PTR [rip+0x3661]        # 0x140006160
   140002aff:	test   eax,eax
   140002b01:	je     0x140002b3f
   140002b03:	cmp    DWORD PTR [rsp+0x78],ebp
   140002b07:	jne    0x140002b3f
   140002b09:	mov    ebx,DWORD PTR [r14+0x14]
   140002b0d:	lea    r9,[rsp+0x78]
   140002b12:	and    QWORD PTR [rsp+0x20],rdi
   140002b17:	add    ebx,0x20
   140002b1a:	mov    r8d,ebx
   140002b1d:	mov    rdx,r14
   140002b20:	mov    rcx,rsi
   140002b23:	call   QWORD PTR [rip+0x363f]        # 0x140006168
   140002b29:	test   eax,eax
   140002b2b:	je     0x140002b3f
   140002b2d:	lea    rcx,[rip+0x5594]        # 0x1400080c8
   140002b34:	call   0x14000347c
   140002b39:	cmp    DWORD PTR [rsp+0x78],ebx
   140002b3d:	je     0x140002b4d
   140002b3f:	call   0x140004ca8
   140002b44:	mov    edi,eax
   140002b46:	jmp    0x140002b4d
   140002b48:	mov    edi,0x80004005
   140002b4d:	movsxd rax,DWORD PTR [rsp+0x68]
   140002b52:	test   eax,eax
   140002b54:	js     0x140002b6e
   140002b56:	imul   rcx,rax,0x38
   140002b5a:	add    rcx,QWORD PTR [r12]
   140002b5e:	cmp    DWORD PTR [rcx+0x30],0x0
   140002b62:	je     0x140002b6e
   140002b64:	add    rcx,0x8
   140002b68:	call   QWORD PTR [rip+0x34da]        # 0x140006048
   140002b6e:	mov    rbx,QWORD PTR [rsp+0x60]
   140002b73:	mov    eax,edi
   140002b75:	mov    rbp,QWORD PTR [rsp+0x70]
   140002b7a:	add    rsp,0x30
   140002b7e:	pop    r15
   140002b80:	pop    r14
   140002b82:	pop    r12
   140002b84:	pop    rdi
   140002b85:	pop    rsi
   140002b86:	ret    
   140002b87:	int3   
   140002b88:	mov    QWORD PTR [rsp+0x8],rbx
   140002b8d:	xor    ebx,ebx
   140002b8f:	lea    rax,[rdx-0x1]
   140002b93:	mov    r10d,0x7ffffffe
   140002b99:	mov    r9d,ebx
   140002b9c:	cmp    rax,r10
   140002b9f:	mov    r11d,0x80070057
   140002ba5:	cmova  r9d,r11d
   140002ba9:	test   r9d,r9d
   140002bac:	js     0x140002bed
   140002bae:	mov    r9d,ebx
   140002bb1:	test   rdx,rdx
   140002bb4:	je     0x140002be1
   140002bb6:	sub    r10,rdx
   140002bb9:	sub    r8,rcx
   140002bbc:	lea    rax,[r10+rdx*1]
   140002bc0:	test   rax,rax
   140002bc3:	je     0x140002bdc
   140002bc5:	movzx  eax,WORD PTR [r8+rcx*1]
   140002bca:	test   ax,ax
   140002bcd:	je     0x140002bdc
   140002bcf:	mov    WORD PTR [rcx],ax
   140002bd2:	add    rcx,0x2
   140002bd6:	sub    rdx,0x1
   140002bda:	jne    0x140002bbc
   140002bdc:	test   rdx,rdx
   140002bdf:	jne    0x140002bf2
   140002be1:	sub    rcx,0x2
   140002be5:	mov    r9d,0x8007007a
   140002beb:	jmp    0x140002bf2
   140002bed:	test   rdx,rdx
   140002bf0:	je     0x140002bf5
   140002bf2:	mov    WORD PTR [rcx],bx
   140002bf5:	mov    rbx,QWORD PTR [rsp+0x8]
   140002bfa:	mov    eax,r9d
   140002bfd:	ret    
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	sub    rsp,0x28
   140002c04:	call   0x140004c9a
   140002c09:	mov    edx,DWORD PTR [rip+0x54b1]        # 0x1400080c0
   140002c0f:	xor    ecx,ecx
   140002c11:	cmp    eax,0x1
   140002c14:	jne    0x140002c1a
   140002c16:	test   edx,edx
   140002c18:	je     0x140002c37
   140002c1a:	test   eax,eax
   140002c1c:	jne    0x140002c22
   140002c1e:	test   edx,edx
   140002c20:	jmp    0x140002c25
   140002c22:	cmp    eax,0x1
   140002c25:	jne    0x140002c37
   140002c27:	test   eax,eax
   140002c29:	sete   cl
   140002c2c:	mov    DWORD PTR [rip+0x548e],ecx        # 0x1400080c0
   140002c32:	call   0x140003564
   140002c37:	add    rsp,0x28
   140002c3b:	ret    
   140002c3c:	sub    rsp,0x28
   140002c40:	jmp    0x140002c72
   140002c42:	mov    rcx,QWORD PTR [rip+0x5467]        # 0x1400080b0
   140002c49:	mov    edx,0x64
   140002c4e:	call   QWORD PTR [rip+0x344c]        # 0x1400060a0
   140002c54:	test   eax,eax
   140002c56:	jne    0x140002c72
   140002c58:	mov    rcx,QWORD PTR [rip+0x5451]        # 0x1400080b0
   140002c5f:	call   QWORD PTR [rip+0x3433]        # 0x140006098
   140002c65:	mov    rcx,QWORD PTR [rip+0x544c]        # 0x1400080b8
   140002c6c:	call   QWORD PTR [rip+0x341e]        # 0x140006090
   140002c72:	cmp    DWORD PTR [rip+0x541f],0x0        # 0x140008098
   140002c79:	je     0x140002c42
   140002c7b:	add    rsp,0x28
   140002c7f:	ret    
   140002c80:	rex push rbx
   140002c82:	sub    rsp,0x20
   140002c86:	xor    ebx,ebx
   140002c88:	cmp    DWORD PTR [rip+0x5411],0x1        # 0x1400080a0
   140002c8f:	jle    0x140002ca3
   140002c91:	mov    ecx,0x64
   140002c96:	call   QWORD PTR [rip+0x33bc]        # 0x140006058
   140002c9c:	inc    ebx
   140002c9e:	cmp    ebx,0x14
   140002ca1:	jl     0x140002c88
   140002ca3:	call   0x140004c6a
   140002ca8:	mov    ecx,0x2710
   140002cad:	call   0x140004c52
   140002cb2:	xor    ecx,ecx
   140002cb4:	call   0x140001248
   140002cb9:	xor    ecx,ecx
   140002cbb:	call   0x140002448
   140002cc0:	xor    ebx,ebx
   140002cc2:	cmp    DWORD PTR [rip+0x53d7],0x0        # 0x1400080a0
   140002cc9:	jle    0x140002cdd
   140002ccb:	mov    ecx,0x64
   140002cd0:	call   QWORD PTR [rip+0x3382]        # 0x140006058
   140002cd6:	inc    ebx
   140002cd8:	cmp    ebx,0x14
   140002cdb:	jl     0x140002cc2
   140002cdd:	mov    DWORD PTR [rip+0x53c1],0x1        # 0x1400080a8
   140002ce7:	add    rsp,0x20
   140002ceb:	pop    rbx
   140002cec:	ret    
   140002ced:	int3   
   140002cee:	int3   
   140002cef:	int3   
   140002cf0:	rex push rdi
   140002cf2:	sub    rsp,0x50
   140002cf6:	mov    eax,DWORD PTR [rip+0x530c]        # 0x140008008
   140002cfc:	mov    rcx,rdx
   140002cff:	mov    DWORD PTR [rsp+0x78],eax
   140002d03:	call   0x140004c58
   140002d08:	test   al,al
   140002d0a:	je     0x140002d64
   140002d0c:	call   0x140004c94
   140002d11:	and    DWORD PTR [rsp+0x48],0x0
   140002d16:	lea    r9,[rsp+0x78]
   140002d1b:	and    QWORD PTR [rsp+0x40],0x0
   140002d21:	lea    r8,[rip+0x52d8]        # 0x140008000
   140002d28:	and    DWORD PTR [rsp+0x38],0x0
   140002d2d:	lea    rdx,[rip+0x39bc]        # 0x1400066f0
   140002d34:	and    QWORD PTR [rsp+0x30],0x0
   140002d3a:	mov    edi,0x1
   140002d3f:	and    QWORD PTR [rsp+0x28],0x0
   140002d45:	mov    rcx,rax
   140002d48:	mov    DWORD PTR [rsp+0x20],edi
   140002d4c:	call   0x140004c64
   140002d51:	test   eax,eax
   140002d53:	je     0x140002d64
   140002d55:	mov    eax,DWORD PTR [rsp+0x78]
   140002d59:	cmp    eax,edi
   140002d5b:	cmovb  eax,edi
   140002d5e:	mov    DWORD PTR [rip+0x52a4],eax        # 0x140008008
   140002d64:	add    rsp,0x50
   140002d68:	pop    rdi
   140002d69:	ret    
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	sub    rsp,0x28
   140002d70:	and    DWORD PTR [rsp+0x30],0x0
   140002d75:	xor    edx,edx
   140002d77:	and    DWORD PTR [rsp+0x34],0x0
   140002d7c:	xor    ecx,ecx
   140002d7e:	mov    r8,QWORD PTR [rsp+0x30]
   140002d83:	call   0x140002cf0
   140002d88:	lea    rcx,[rip+0xffffffffffffff61]        # 0x140002cf0
   140002d8f:	add    rsp,0x28
   140002d93:	jmp    0x140004c5e
   140002d98:	mov    QWORD PTR [rsp+0x18],r8
   140002d9d:	mov    QWORD PTR [rsp+0x20],r9
   140002da2:	push   rbx
   140002da3:	push   rbp
   140002da4:	push   rsi
   140002da5:	push   rdi
   140002da6:	sub    rsp,0x28
   140002daa:	xor    ebp,ebp
   140002dac:	lea    rax,[rdx-0x1]
   140002db0:	cmp    rax,0x7ffffffe
   140002db6:	mov    rsi,rcx
   140002db9:	mov    edi,ebp
   140002dbb:	mov    ecx,0x80070057
   140002dc0:	cmova  edi,ecx
   140002dc3:	test   edi,edi
   140002dc5:	js     0x140002dfc
   140002dc7:	lea    rbx,[rdx-0x1]
   140002dcb:	mov    rcx,rsi
   140002dce:	mov    rdx,rbx
   140002dd1:	lea    r9,[rsp+0x68]
   140002dd6:	mov    edi,ebp
   140002dd8:	call   QWORD PTR [rip+0x33fa]        # 0x1400061d8
   140002dde:	test   eax,eax
   140002de0:	js     0x140002df1
   140002de2:	cdqe   
   140002de4:	cmp    rax,rbx
   140002de7:	ja     0x140002df1
   140002de9:	jne    0x140002e04
   140002deb:	mov    WORD PTR [rsi+rbx*2],bp
   140002def:	jmp    0x140002e04
   140002df1:	mov    WORD PTR [rsi+rbx*2],bp
   140002df5:	mov    edi,0x8007007a
   140002dfa:	jmp    0x140002e04
   140002dfc:	test   rdx,rdx
   140002dff:	je     0x140002e04
   140002e01:	mov    WORD PTR [rsi],bp
   140002e04:	mov    eax,edi
   140002e06:	add    rsp,0x28
   140002e0a:	pop    rdi
   140002e0b:	pop    rsi
   140002e0c:	pop    rbp
   140002e0d:	pop    rbx
   140002e0e:	ret    
   140002e0f:	int3   
   140002e10:	sub    rsp,0x28
   140002e14:	call   0x1400016f0
   140002e19:	test   eax,eax
   140002e1b:	je     0x140002e4c
   140002e1d:	call   0x1400029ac
   140002e22:	test   eax,eax
   140002e24:	je     0x140002e4c
   140002e26:	lea    rcx,[rip+0x529b]        # 0x1400080c8
   140002e2d:	call   0x140003430
   140002e32:	cmp    eax,0x3
   140002e35:	jbe    0x140002e56
   140002e37:	call   0x1400029e8
   140002e3c:	lea    rcx,[rip+0x5285]        # 0x1400080c8
   140002e43:	add    rsp,0x28
   140002e47:	jmp    0x14000347c
   140002e4c:	mov    DWORD PTR [rip+0x5242],0x1        # 0x140008098
   140002e56:	add    rsp,0x28
   140002e5a:	ret    
   140002e5b:	int3   
   140002e5c:	mov    QWORD PTR [rsp+0x8],rbx
   140002e61:	push   rdi
   140002e62:	sub    rsp,0x20
   140002e66:	mov    edi,edx
   140002e68:	mov    ebx,ecx
   140002e6a:	call   QWORD PTR [rip+0x31f0]        # 0x140006060
   140002e70:	sub    ebx,0x1
   140002e73:	je     0x140002ec9
   140002e75:	sub    ebx,0x1
   140002e78:	je     0x140002ec2
   140002e7a:	sub    ebx,0x1
   140002e7d:	je     0x140002ebb
   140002e7f:	sub    ebx,0x1
   140002e82:	je     0x140002eb4
   140002e84:	sub    ebx,0x1
   140002e87:	je     0x140002ead
   140002e89:	sub    ebx,0x1
   140002e8c:	je     0x140002ea6
   140002e8e:	sub    ebx,0x1
   140002e91:	je     0x140002e9f
   140002e93:	cmp    ebx,0x1
   140002e96:	jne    0x140002ee0
   140002e98:	mov    ecx,0xc00003f8
   140002e9d:	jmp    0x140002ece
   140002e9f:	mov    ecx,0xc00003f7
   140002ea4:	jmp    0x140002ece
   140002ea6:	mov    ecx,0xc00003f6
   140002eab:	jmp    0x140002ece
   140002ead:	mov    ecx,0xc00003f5
   140002eb2:	jmp    0x140002ece
   140002eb4:	mov    ecx,0xc00003f4
   140002eb9:	jmp    0x140002ece
   140002ebb:	mov    ecx,0xc00003f2
   140002ec0:	jmp    0x140002ece
   140002ec2:	mov    ecx,0xc00003f3
   140002ec7:	jmp    0x140002ece
   140002ec9:	mov    ecx,0xc00003f1
   140002ece:	mov    r9d,edi
   140002ed1:	lea    rdx,[rip+0x3838]        # 0x140006710
   140002ed8:	mov    r8d,eax
   140002edb:	call   0x140004c82
   140002ee0:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ee5:	add    rsp,0x20
   140002ee9:	pop    rdi
   140002eea:	ret    
   140002eeb:	int3   
   140002eec:	mov    rax,rsp
   140002eef:	mov    QWORD PTR [rax+0x8],rbx
   140002ef3:	mov    QWORD PTR [rax+0x18],rsi
   140002ef7:	mov    QWORD PTR [rax+0x20],rdi
   140002efb:	push   rbp
   140002efc:	push   r12
   140002efe:	push   r13
   140002f00:	push   r14
   140002f02:	push   r15
   140002f04:	lea    rbp,[rax-0x7d8]
   140002f0b:	sub    rsp,0x8b0
   140002f12:	mov    rax,QWORD PTR [rip+0x50f7]        # 0x140008010
   140002f19:	xor    rax,rsp
   140002f1c:	mov    QWORD PTR [rbp+0x7a0],rax
   140002f23:	xor    r13d,r13d
   140002f26:	mov    r14,rdx
   140002f29:	mov    r12d,r13d
   140002f2c:	mov    QWORD PTR [rsp+0x50],r13
   140002f31:	mov    ebx,ecx
   140002f33:	call   0x140005100
   140002f38:	cmp    ebx,0x8
   140002f3b:	jge    0x140002f53
   140002f3d:	lea    rcx,[rip+0x35fc]        # 0x140006540
   140002f44:	call   QWORD PTR [rip+0x3286]        # 0x1400061d0
   140002f4a:	lea    eax,[r13+0x1]
   140002f4e:	jmp    0x1400033f1
   140002f53:	mov    edi,0x1
   140002f58:	lea    r15,[r14+0x8]
   140002f5c:	mov    ecx,edi
   140002f5e:	mov    rax,r15
   140002f61:	mov    rdx,QWORD PTR [rax]
   140002f64:	test   rdx,rdx
   140002f67:	je     0x1400033e2
   140002f6d:	cmp    WORD PTR [rdx],r13w
   140002f71:	je     0x1400033e2
   140002f77:	add    ecx,edi
   140002f79:	add    rax,0x8
   140002f7d:	cmp    ecx,0x8
   140002f80:	jl     0x140002f61
   140002f82:	mov    ebx,0x20a
   140002f87:	lea    rcx,[rsp+0x60]
   140002f8c:	mov    r8d,ebx
   140002f8f:	xor    edx,edx
   140002f91:	call   0x140004686
   140002f96:	mov    r8d,ebx
   140002f99:	lea    rcx,[rbp+0x380]
   140002fa0:	xor    edx,edx
   140002fa2:	call   0x140004686
   140002fa7:	mov    r8d,ebx
   140002faa:	lea    rcx,[rbp+0x170]
   140002fb1:	xor    edx,edx
   140002fb3:	call   0x140004686
   140002fb8:	mov    r8d,ebx
   140002fbb:	lea    rcx,[rbp+0x590]
   140002fc2:	xor    edx,edx
   140002fc4:	call   0x140004686
   140002fc9:	mov    rcx,QWORD PTR [r14+0x30]
   140002fcd:	mov    ebx,0xa
   140002fd2:	cmp    WORD PTR [rcx],0x30
   140002fd6:	je     0x14000301c
   140002fd8:	mov    r8d,ebx
   140002fdb:	mov    QWORD PTR [rsp+0x50],r13
   140002fe0:	lea    rdx,[rsp+0x50]
   140002fe5:	call   QWORD PTR [rip+0x31d5]        # 0x1400061c0
   140002feb:	dec    eax
   140002fed:	cmp    eax,0xfffffffd
   140002ff0:	ja     0x14000301c
   140002ff2:	mov    rcx,QWORD PTR [r14+0x30]
   140002ff6:	lea    rdx,[rsp+0x50]
   140002ffb:	mov    r8d,ebx
   140002ffe:	mov    QWORD PTR [rsp+0x50],r13
   140003003:	call   QWORD PTR [rip+0x31b7]        # 0x1400061c0
   140003009:	mov    ebx,eax
   14000300b:	call   QWORD PTR [rip+0x309f]        # 0x1400060b0
   140003011:	mov    rcx,rax
   140003014:	mov    edx,ebx
   140003016:	call   QWORD PTR [rip+0x315c]        # 0x140006178
   14000301c:	xor    edx,edx
   14000301e:	mov    DWORD PTR [rip+0x5080],edi        # 0x1400080a4
   140003024:	xor    ecx,ecx
   140003026:	mov    esi,0x5
   14000302b:	call   QWORD PTR [rip+0x500f]        # 0x140008040
   140003031:	mov    ebx,eax
   140003033:	test   eax,eax
   140003035:	je     0x140003098
   140003037:	xor    ecx,ecx
   140003039:	call   0x140004c4c
   14000303e:	mov    rcx,QWORD PTR [rip+0x506b]        # 0x1400080b0
   140003045:	test   rcx,rcx
   140003048:	je     0x140003050
   14000304a:	call   QWORD PTR [rip+0x3100]        # 0x140006150
   140003050:	mov    rcx,QWORD PTR [rip+0x5061]        # 0x1400080b8
   140003057:	test   rcx,rcx
   14000305a:	je     0x140003062
   14000305c:	call   QWORD PTR [rip+0x30ee]        # 0x140006150
   140003062:	mov    ecx,ebx
   140003064:	call   0x140001248
   140003069:	mov    ecx,ebx
   14000306b:	call   0x140002448
   140003070:	cmp    r12d,edi
   140003073:	jne    0x14000307a
   140003075:	call   0x140004c76
   14000307a:	call   QWORD PTR [rip+0x4fc8]        # 0x140008048
   140003080:	test   esi,esi
   140003082:	je     0x1400033de
   140003088:	mov    edx,ebx
   14000308a:	mov    ecx,esi
   14000308c:	call   0x140002e5c
   140003091:	mov    eax,ebx
   140003093:	jmp    0x1400033f1
   140003098:	mov    rcx,QWORD PTR [r14+0x28]
   14000309c:	lea    rdx,[rsp+0x50]
   1400030a1:	mov    esi,0x6
   1400030a6:	mov    QWORD PTR [rsp+0x50],r13
   1400030ab:	lea    r8d,[rsi+0x4]
   1400030af:	call   QWORD PTR [rip+0x310b]        # 0x1400061c0
   1400030b5:	mov    rcx,QWORD PTR [r14+0x20]
   1400030b9:	lea    r8d,[rsi+0x4]
   1400030bd:	lea    rdx,[rsp+0x50]
   1400030c2:	mov    ebx,eax
   1400030c4:	call   QWORD PTR [rip+0x30f6]        # 0x1400061c0
   1400030ca:	mov    QWORD PTR [rsp+0x40],r13
   1400030cf:	xor    r9d,r9d
   1400030d2:	mov    DWORD PTR [rsp+0x38],0x40
   1400030da:	xor    r8d,r8d
   1400030dd:	mov    QWORD PTR [rsp+0x30],r13
   1400030e2:	or     edx,0xffffffff
   1400030e5:	mov    DWORD PTR [rsp+0x28],ebx
   1400030e9:	xor    ecx,ecx
   1400030eb:	mov    DWORD PTR [rsp+0x20],eax
   1400030ef:	call   QWORD PTR [rip+0x4f43]        # 0x140008038
   1400030f5:	xor    ecx,ecx
   1400030f7:	mov    ebx,eax
   1400030f9:	test   eax,eax
   1400030fb:	jne    0x140003039
   140003101:	lea    esi,[rax+0x7]
   140003104:	call   0x140004c4c
   140003109:	mov    ebx,eax
   14000310b:	test   eax,eax
   14000310d:	jne    0x14000303e
   140003113:	call   0x140002d6c
   140003118:	call   0x140004c7c
   14000311d:	call   0x140004c88
   140003122:	mov    rax,QWORD PTR [r14+0x10]
   140003126:	lea    r8,[rip+0x34ab]        # 0x1400065d8
   14000312d:	mov    r9,QWORD PTR [r14+0x38]
   140003131:	lea    rcx,[rbp+0x380]
   140003138:	mov    QWORD PTR [rsp+0x30],rax
   14000313d:	mov    edx,0x104
   140003142:	mov    rax,QWORD PTR [r15]
   140003145:	mov    esi,edi
   140003147:	mov    QWORD PTR [rsp+0x28],rax
   14000314c:	lea    rax,[rip+0x346d]        # 0x1400065c0
   140003153:	mov    QWORD PTR [rsp+0x20],rax
   140003158:	call   0x140002d98
   14000315d:	mov    ebx,eax
   14000315f:	test   eax,eax
   140003161:	jne    0x14000303e
   140003167:	lea    r8,[rbp+0x380]
   14000316e:	xor    edx,edx
   140003170:	mov    ecx,0x100003
   140003175:	call   QWORD PTR [rip+0x2f2d]        # 0x1400060a8
   14000317b:	mov    QWORD PTR [rip+0x4f36],rax        # 0x1400080b8
   140003182:	test   rax,rax
   140003185:	je     0x1400032e6
   14000318b:	mov    rax,QWORD PTR [r14+0x10]
   14000318f:	lea    r8,[rip+0x347a]        # 0x140006610
   140003196:	mov    r9,QWORD PTR [r14+0x38]
   14000319a:	lea    rcx,[rsp+0x60]
   14000319f:	mov    QWORD PTR [rsp+0x30],rax
   1400031a4:	mov    edx,0x104
   1400031a9:	mov    rax,QWORD PTR [r15]
   1400031ac:	mov    QWORD PTR [rsp+0x28],rax
   1400031b1:	lea    rax,[rip+0x3408]        # 0x1400065c0
   1400031b8:	mov    QWORD PTR [rsp+0x20],rax
   1400031bd:	call   0x140002d98
   1400031c2:	mov    ebx,eax
   1400031c4:	test   eax,eax
   1400031c6:	jne    0x14000303e
   1400031cc:	lea    r8,[rsp+0x60]
   1400031d1:	xor    edx,edx
   1400031d3:	mov    ecx,0x100003
   1400031d8:	call   QWORD PTR [rip+0x2eca]        # 0x1400060a8
   1400031de:	mov    QWORD PTR [rip+0x4ecb],rax        # 0x1400080b0
   1400031e5:	test   rax,rax
   1400031e8:	je     0x1400032e6
   1400031ee:	mov    rax,QWORD PTR [r14+0x10]
   1400031f2:	lea    r8,[rip+0x3457]        # 0x140006650
   1400031f9:	mov    r9,QWORD PTR [r14+0x38]
   1400031fd:	lea    rcx,[rbp+0x170]
   140003204:	mov    QWORD PTR [rsp+0x30],rax
   140003209:	lea    esi,[rbx+0x2]
   14000320c:	mov    rax,QWORD PTR [r15]
   14000320f:	mov    edx,0x104
   140003214:	mov    QWORD PTR [rsp+0x28],rax
   140003219:	lea    rax,[rip+0x33a0]        # 0x1400065c0
   140003220:	mov    QWORD PTR [rsp+0x20],rax
   140003225:	call   0x140002d98
   14000322a:	mov    ebx,eax
   14000322c:	test   eax,eax
   14000322e:	jne    0x14000303e
   140003234:	lea    rcx,[rbp+0x170]
   14000323b:	call   0x140001580
   140003240:	mov    ebx,eax
   140003242:	test   eax,eax
   140003244:	jne    0x14000303e
   14000324a:	mov    r9,QWORD PTR [r14+0x38]
   14000324e:	lea    esi,[rax+0x3]
   140003251:	mov    rax,QWORD PTR [r14+0x10]
   140003255:	lea    r8,[rip+0x3444]        # 0x1400066a0
   14000325c:	mov    QWORD PTR [rsp+0x30],rax
   140003261:	lea    rcx,[rbp+0x590]
   140003268:	mov    rax,QWORD PTR [r15]
   14000326b:	mov    edx,0x104
   140003270:	mov    QWORD PTR [rsp+0x28],rax
   140003275:	lea    rax,[rip+0x3344]        # 0x1400065c0
   14000327c:	mov    QWORD PTR [rsp+0x20],rax
   140003281:	call   0x140002d98
   140003286:	mov    ebx,eax
   140003288:	test   eax,eax
   14000328a:	jne    0x14000303e
   140003290:	mov    rcx,QWORD PTR [r14+0x18]
   140003294:	call   QWORD PTR [rip+0x2f2e]        # 0x1400061c8
   14000329a:	mov    edx,eax
   14000329c:	lea    rcx,[rbp+0x590]
   1400032a3:	call   0x1400028d8
   1400032a8:	mov    ebx,eax
   1400032aa:	test   eax,eax
   1400032ac:	jne    0x14000303e
   1400032b2:	lea    r15d,[rsi+0x1]
   1400032b6:	mov    esi,r15d
   1400032b9:	call   0x140004c70
   1400032be:	mov    ebx,eax
   1400032c0:	test   eax,eax
   1400032c2:	jne    0x14000303e
   1400032c8:	xor    r8d,r8d
   1400032cb:	lea    rcx,[rip+0xfffffffffffff96a]        # 0x140002c3c
   1400032d2:	xor    edx,edx
   1400032d4:	lea    esi,[rax+0x8]
   1400032d7:	mov    r12d,edi
   1400032da:	call   QWORD PTR [rip+0x2f00]        # 0x1400061e0
   1400032e0:	cmp    rax,0xffffffffffffffff
   1400032e4:	jne    0x1400032f2
   1400032e6:	call   0x140004ca8
   1400032eb:	mov    ebx,eax
   1400032ed:	jmp    0x14000303e
   1400032f2:	mov    rcx,QWORD PTR [rip+0x4dbf]        # 0x1400080b8
   1400032f9:	mov    esi,r13d
   1400032fc:	call   QWORD PTR [rip+0x2d8e]        # 0x140006090
   140003302:	lea    rcx,[rip+0x4dbf]        # 0x1400080c8
   140003309:	call   0x14000347c
   14000330e:	cmp    DWORD PTR [rip+0x4d83],r13d        # 0x140008098
   140003315:	mov    r14d,r13d
   140003318:	jne    0x140003359
   14000331a:	mov    ecx,0xfa
   14000331f:	call   QWORD PTR [rip+0x2d33]        # 0x140006058
   140003325:	mov    eax,DWORD PTR [rip+0x4d6d]        # 0x140008098
   14000332b:	test   eax,eax
   14000332d:	jne    0x140003352
   14000332f:	cmp    r14d,0x9
   140003333:	jle    0x140003352
   140003335:	mov    r14d,r13d
   140003338:	call   0x140002e10
   14000333d:	mov    eax,DWORD PTR [rip+0x4d55]        # 0x140008098
   140003343:	test   eax,eax
   140003345:	jne    0x140003352
   140003347:	call   0x140002c00
   14000334c:	mov    eax,DWORD PTR [rip+0x4d46]        # 0x140008098
   140003352:	add    r14d,edi
   140003355:	test   eax,eax
   140003357:	je     0x14000331a
   140003359:	mov    eax,DWORD PTR [rip+0x4d4d]        # 0x1400080ac
   14000335f:	mov    DWORD PTR [rip+0x4d42],r13d        # 0x1400080a8
   140003366:	test   eax,eax
   140003368:	je     0x14000336f
   14000336a:	mov    ebx,eax
   14000336c:	mov    esi,r15d
   14000336f:	mov    ecx,ebx
   140003371:	call   0x140001248
   140003376:	xor    r8d,r8d
   140003379:	lea    rcx,[rip+0xfffffffffffff900]        # 0x140002c80
   140003380:	xor    edx,edx
   140003382:	call   QWORD PTR [rip+0x2e58]        # 0x1400061e0
   140003388:	mov    r14d,0x64
   14000338e:	mov    ecx,r14d
   140003391:	call   QWORD PTR [rip+0x2cc1]        # 0x140006058
   140003397:	mov    ebx,r13d
   14000339a:	cmp    DWORD PTR [rip+0x4d07],r13d        # 0x1400080a8
   1400033a1:	jne    0x1400033b6
   1400033a3:	mov    ecx,r14d
   1400033a6:	call   QWORD PTR [rip+0x2cac]        # 0x140006058
   1400033ac:	add    ebx,edi
   1400033ae:	cmp    ebx,0x12c
   1400033b4:	jl     0x14000339a
   1400033b6:	call   0x140004ca0
   1400033bb:	call   0x140004c8e
   1400033c0:	mov    ebx,r13d
   1400033c3:	call   0x140005248
   1400033c8:	cmp    DWORD PTR [rip+0x4cd9],r13d        # 0x1400080a8
   1400033cf:	jne    0x14000303e
   1400033d5:	mov    ecx,edi
   1400033d7:	call   QWORD PTR [rip+0x2cdb]        # 0x1400060b8
   1400033dd:	int3   
   1400033de:	xor    eax,eax
   1400033e0:	jmp    0x1400033f1
   1400033e2:	lea    rcx,[rip+0x31bf]        # 0x1400065a8
   1400033e9:	call   QWORD PTR [rip+0x2de1]        # 0x1400061d0
   1400033ef:	mov    eax,edi
   1400033f1:	mov    rcx,QWORD PTR [rbp+0x7a0]
   1400033f8:	xor    rcx,rsp
   1400033fb:	call   0x140004660
   140003400:	lea    r11,[rsp+0x8b0]
   140003408:	mov    rbx,QWORD PTR [r11+0x30]
   14000340c:	mov    rsi,QWORD PTR [r11+0x40]
   140003410:	mov    rdi,QWORD PTR [r11+0x48]
   140003414:	mov    rsp,r11
   140003417:	pop    r15
   140003419:	pop    r14
   14000341b:	pop    r13
   14000341d:	pop    r12
   14000341f:	pop    rbp
   140003420:	ret    
   140003421:	int3   
   140003422:	int3   
   140003423:	int3   
   140003424:	and    DWORD PTR [rcx+0x8],0x0
   140003428:	mov    rax,rcx
   14000342b:	and    QWORD PTR [rcx],0x0
   14000342f:	ret    
   140003430:	rex push rbx
   140003432:	sub    rsp,0x20
   140003436:	cmp    DWORD PTR [rcx+0x8],0x0
   14000343a:	jne    0x140003440
   14000343c:	xor    eax,eax
   14000343e:	jmp    0x140003474
   140003440:	mov    rbx,QWORD PTR [rcx]
   140003443:	lea    rcx,[rsp+0x30]
   140003448:	call   QWORD PTR [rip+0x2c1a]        # 0x140006068
   14000344e:	mov    rcx,QWORD PTR [rsp+0x30]
   140003453:	movabs rax,0xd6bf94d5e57a42bd
   14000345d:	sub    rcx,rbx
   140003460:	imul   rcx
   140003463:	add    rdx,rcx
   140003466:	sar    rdx,0x17
   14000346a:	mov    rax,rdx
   14000346d:	shr    rax,0x3f
   140003471:	add    rax,rdx
   140003474:	add    rsp,0x20
   140003478:	pop    rbx
   140003479:	ret    
   14000347a:	int3   
   14000347b:	int3   
   14000347c:	rex push rbx
   14000347e:	sub    rsp,0x20
   140003482:	mov    rbx,rcx
   140003485:	call   QWORD PTR [rip+0x2bdd]        # 0x140006068
   14000348b:	mov    DWORD PTR [rbx+0x8],0x1
   140003492:	add    rsp,0x20
   140003496:	pop    rbx
   140003497:	ret    
   140003498:	mov    QWORD PTR [rsp+0x8],rbx
   14000349d:	mov    QWORD PTR [rsp+0x10],rsi
   1400034a2:	push   rdi
   1400034a3:	sub    rsp,0x20
   1400034a7:	mov    rsi,rdx
   1400034aa:	test   rcx,rcx
   1400034ad:	je     0x1400034b4
   1400034af:	mov    ebx,DWORD PTR [rcx+0x4c]
   1400034b2:	jmp    0x1400034b6
   1400034b4:	xor    ebx,ebx
   1400034b6:	mov    rcx,rdx
   1400034b9:	call   QWORD PTR [rip+0x2bc1]        # 0x140006080
   1400034bf:	mov    r8d,0x2
   1400034c5:	mov    edx,ebx
   1400034c7:	lea    edi,[rax+0x1]
   1400034ca:	lea    ecx,[rdi+0x8]
   1400034cd:	call   0x140001758
   1400034d2:	mov    rbx,rax
   1400034d5:	test   rax,rax
   1400034d8:	je     0x1400034fb
   1400034da:	movsxd r8,edi
   1400034dd:	lea    rcx,[rax+0x60]
   1400034e1:	mov    rdx,rsi
   1400034e4:	mov    DWORD PTR [rax+0x58],0x4
   1400034eb:	mov    DWORD PTR [rax+0x5c],edi
   1400034ee:	call   0x140004680
   1400034f3:	mov    rcx,rbx
   1400034f6:	call   0x14000230c
   1400034fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140003500:	mov    rsi,QWORD PTR [rsp+0x38]
   140003505:	add    rsp,0x20
   140003509:	pop    rdi
   14000350a:	ret    
   14000350b:	int3   
   14000350c:	sub    rsp,0x48
   140003510:	mov    r10,r8
   140003513:	mov    r8d,edx
   140003516:	test   edx,edx
   140003518:	js     0x14000355a
   14000351a:	test   r9d,r9d
   14000351d:	js     0x14000355a
   14000351f:	mov    eax,DWORD PTR [rsp+0x78]
   140003523:	test   eax,eax
   140003525:	js     0x14000355a
   140003527:	test   rcx,rcx
   14000352a:	je     0x140003531
   14000352c:	mov    edx,DWORD PTR [rcx+0x4c]
   14000352f:	jmp    0x140003533
   140003531:	xor    edx,edx
   140003533:	and    DWORD PTR [rsp+0x38],0x0
   140003538:	mov    ecx,0x9
   14000353d:	mov    DWORD PTR [rsp+0x30],eax
   140003541:	mov    rax,QWORD PTR [rsp+0x70]
   140003546:	mov    QWORD PTR [rsp+0x28],rax
   14000354b:	mov    DWORD PTR [rsp+0x20],r9d
   140003550:	mov    r9,r10
   140003553:	call   0x1400024e0
   140003558:	jmp    0x14000355c
   14000355a:	xor    eax,eax
   14000355c:	add    rsp,0x48
   140003560:	ret    
   140003561:	int3   
   140003562:	int3   
   140003563:	int3   
   140003564:	sub    rsp,0x48
   140003568:	xor    eax,eax
   14000356a:	mov    r8d,ecx
   14000356d:	mov    DWORD PTR [rsp+0x38],eax
   140003571:	xor    r9d,r9d
   140003574:	mov    DWORD PTR [rsp+0x30],eax
   140003578:	xor    edx,edx
   14000357a:	mov    QWORD PTR [rsp+0x28],rax
   14000357f:	lea    ecx,[rax+0xa]
   140003582:	mov    DWORD PTR [rsp+0x20],eax
   140003586:	call   0x1400024e0
   14000358b:	add    rsp,0x48
   14000358f:	ret    
   140003590:	sub    rsp,0x28
   140003594:	test   rcx,rcx
   140003597:	je     0x14000359e
   140003599:	mov    edx,DWORD PTR [rcx+0x4c]
   14000359c:	jmp    0x1400035a0
   14000359e:	xor    edx,edx
   1400035a0:	mov    ecx,0x8
   1400035a5:	mov    r8d,ecx
   1400035a8:	call   0x140001758
   1400035ad:	test   rax,rax
   1400035b0:	jne    0x1400035b7
   1400035b2:	add    rsp,0x28
   1400035b6:	ret    
   1400035b7:	and    DWORD PTR [rax+0x5c],0x0
   1400035bb:	mov    rcx,rax
   1400035be:	mov    DWORD PTR [rax+0x58],0x1
   1400035c5:	add    rsp,0x28
   1400035c9:	jmp    0x14000230c
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400035d5:	push   rdi
   1400035d6:	sub    rsp,0x20
   1400035da:	mov    ebx,edx
   1400035dc:	mov    rdi,rcx
   1400035df:	test   rcx,rcx
   1400035e2:	je     0x140003624
   1400035e4:	cmp    DWORD PTR [rip+0x4ab9],0x1        # 0x1400080a4
   1400035eb:	jne    0x140003624
   1400035ed:	mov    edx,DWORD PTR [rcx+0x4c]
   1400035f0:	mov    r8d,0x3
   1400035f6:	lea    ecx,[r8+0x5]
   1400035fa:	call   0x140001758
   1400035ff:	test   rax,rax
   140003602:	je     0x140003624
   140003604:	mov    rcx,rax
   140003607:	mov    DWORD PTR [rax+0x58],0x1
   14000360e:	mov    DWORD PTR [rax+0x5c],ebx
   140003611:	call   0x14000230c
   140003616:	mov    rcx,rdi
   140003619:	mov    ebx,eax
   14000361b:	call   0x140001838
   140003620:	mov    eax,ebx
   140003622:	jmp    0x140003626
   140003624:	xor    eax,eax
   140003626:	mov    rbx,QWORD PTR [rsp+0x30]
   14000362b:	add    rsp,0x20
   14000362f:	pop    rdi
   140003630:	ret    
   140003631:	int3   
   140003632:	int3   
   140003633:	int3   
   140003634:	sub    rsp,0x28
   140003638:	test   rcx,rcx
   14000363b:	je     0x140003665
   14000363d:	cmp    DWORD PTR [rip+0x4a60],0x1        # 0x1400080a4
   140003644:	jne    0x140003665
   140003646:	xor    edx,edx
   140003648:	lea    r8d,[rdx+0xa]
   14000364c:	lea    ecx,[rdx+0x14]
   14000364f:	call   0x140001758
   140003654:	test   rax,rax
   140003657:	je     0x140003665
   140003659:	mov    rcx,rax
   14000365c:	add    rsp,0x28
   140003660:	jmp    0x14000230c
   140003665:	xor    eax,eax
   140003667:	add    rsp,0x28
   14000366b:	ret    
   14000366c:	mov    QWORD PTR [rsp+0x10],rbx
   140003671:	mov    QWORD PTR [rsp+0x18],rbp
   140003676:	mov    QWORD PTR [rsp+0x20],rsi
   14000367b:	push   rdi
   14000367c:	push   r12
   14000367e:	push   r13
   140003680:	push   r14
   140003682:	push   r15
   140003684:	sub    rsp,0x30
   140003688:	xor    ebx,ebx
   14000368a:	mov    r12d,r9d
   14000368d:	mov    r14,r8
   140003690:	mov    rsi,rdx
   140003693:	mov    r13,rcx
   140003696:	test   rcx,rcx
   140003699:	je     0x140003870
   14000369f:	cmp    DWORD PTR [rip+0x49fe],0x1        # 0x1400080a4
   1400036a6:	jne    0x140003870
   1400036ac:	mov    ebp,DWORD PTR [rsp+0x80]
   1400036b3:	test   ebp,ebp
   1400036b5:	mov    edi,DWORD PTR [rcx+0x4c]
   1400036b8:	cmovs  ebp,ebx
   1400036bb:	test   rdx,rdx
   1400036be:	je     0x1400036cb
   1400036c0:	mov    rcx,rdx
   1400036c3:	call   QWORD PTR [rip+0x29b7]        # 0x140006080
   1400036c9:	jmp    0x1400036cd
   1400036cb:	mov    eax,ebx
   1400036cd:	lea    r15d,[rax+0x1]
   1400036d1:	test   r14,r14
   1400036d4:	je     0x1400036e1
   1400036d6:	mov    rcx,r14
   1400036d9:	call   QWORD PTR [rip+0x29a1]        # 0x140006080
   1400036df:	jmp    0x1400036e3
   1400036e1:	mov    eax,ebx
   1400036e3:	inc    eax
   1400036e5:	mov    edx,edi
   1400036e7:	mov    DWORD PTR [rsp+0x60],eax
   1400036eb:	lea    ecx,[rax+r15*1]
   1400036ef:	mov    eax,DWORD PTR [rsp+0xa8]
   1400036f6:	mov    DWORD PTR [rsp+0x20],ecx
   1400036fa:	neg    eax
   1400036fc:	sbb    r8d,r8d
   1400036ff:	add    ecx,0x18
   140003702:	neg    r8d
   140003705:	add    ecx,ebp
   140003707:	add    r8d,0x2
   14000370b:	call   0x140001758
   140003710:	xor    r10d,r10d
   140003713:	mov    rdi,rax
   140003716:	test   rax,rax
   140003719:	je     0x140003921
   14000371f:	cmp    DWORD PTR [rsp+0x90],0x1
   140003727:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000372f:	jne    0x140003750
   140003731:	movsxd rcx,DWORD PTR [rsp+0x88]
   140003739:	cmp    DWORD PTR [rbx+rcx*4],r10d
   14000373d:	jge    0x140003750
   14000373f:	mov    DWORD PTR [rax+0x58],0x6
   140003746:	mov    eax,DWORD PTR [rbx+rcx*4]
   140003749:	neg    eax
   14000374b:	mov    DWORD PTR [rbx+rcx*4],eax
   14000374e:	jmp    0x140003757
   140003750:	mov    DWORD PTR [rax+0x58],0x5
   140003757:	mov    eax,DWORD PTR [rsp+0xb0]
   14000375e:	lea    r9,[rdi+0x70]
   140003762:	mov    DWORD PTR [rdi+0x5c],r12d
   140003766:	mov    edx,0x80070057
   14000376b:	movsxd r12,DWORD PTR [rsp+0x60]
   140003770:	mov    r11d,0x7ffffffe
   140003776:	mov    DWORD PTR [rdi+0x64],r12d
   14000377a:	mov    DWORD PTR [rdi+0x60],r15d
   14000377e:	mov    DWORD PTR [rdi+0x68],ebp
   140003781:	mov    DWORD PTR [rdi+0x6c],eax
   140003784:	test   rsi,rsi
   140003787:	je     0x1400037f3
   140003789:	movsxd rcx,r15d
   14000378c:	mov    r8d,r10d
   14000378f:	lea    rax,[rcx-0x1]
   140003793:	cmp    rax,r11
   140003796:	cmova  r8d,edx
   14000379a:	test   r8d,r8d
   14000379d:	js     0x1400037e4
   14000379f:	mov    rdx,r9
   1400037a2:	mov    r8d,r10d
   1400037a5:	test   r15d,r15d
   1400037a8:	je     0x1400037d6
   1400037aa:	mov    r10d,r11d
   1400037ad:	sub    r10,rcx
   1400037b0:	sub    rsi,r9
   1400037b3:	lea    rax,[r10+rcx*1]
   1400037b7:	test   rax,rax
   1400037ba:	je     0x1400037ce
   1400037bc:	mov    al,BYTE PTR [rsi+rdx*1]
   1400037bf:	test   al,al
   1400037c1:	je     0x1400037ce
   1400037c3:	mov    BYTE PTR [rdx],al
   1400037c5:	inc    rdx
   1400037c8:	sub    rcx,0x1
   1400037cc:	jne    0x1400037b3
   1400037ce:	xor    r10d,r10d
   1400037d1:	test   rcx,rcx
   1400037d4:	jne    0x1400037df
   1400037d6:	dec    rdx
   1400037d9:	mov    r8d,0x8007007a
   1400037df:	mov    BYTE PTR [rdx],r10b
   1400037e2:	jmp    0x1400037ec
   1400037e4:	test   r15d,r15d
   1400037e7:	je     0x1400037ec
   1400037e9:	mov    BYTE PTR [r9],r10b
   1400037ec:	test   r8d,r8d
   1400037ef:	jne    0x140003868
   1400037f1:	jmp    0x1400037f6
   1400037f3:	mov    BYTE PTR [r9],r10b
   1400037f6:	test   r14,r14
   1400037f9:	je     0x14000388f
   1400037ff:	lea    rax,[r12-0x1]
   140003804:	movsxd rcx,r15d
   140003807:	add    rcx,r9
   14000380a:	mov    r8d,r10d
   14000380d:	cmp    rax,r11
   140003810:	mov    rdx,r12
   140003813:	mov    eax,0x80070057
   140003818:	cmova  r8d,eax
   14000381c:	test   r8d,r8d
   14000381f:	js     0x14000385b
   140003821:	mov    r8d,r10d
   140003824:	test   r12d,r12d
   140003827:	je     0x140003850
   140003829:	sub    r11,rdx
   14000382c:	sub    r14,rcx
   14000382f:	lea    rax,[r11+rdx*1]
   140003833:	test   rax,rax
   140003836:	je     0x14000384b
   140003838:	mov    al,BYTE PTR [r14+rcx*1]
   14000383c:	test   al,al
   14000383e:	je     0x14000384b
   140003840:	mov    BYTE PTR [rcx],al
   140003842:	inc    rcx
   140003845:	sub    rdx,0x1
   140003849:	jne    0x14000382f
   14000384b:	test   rdx,rdx
   14000384e:	jne    0x140003860
   140003850:	dec    rcx
   140003853:	mov    r8d,0x8007007a
   140003859:	jmp    0x140003860
   14000385b:	test   r12d,r12d
   14000385e:	je     0x140003863
   140003860:	mov    BYTE PTR [rcx],r10b
   140003863:	test   r8d,r8d
   140003866:	je     0x140003896
   140003868:	mov    rcx,rdi
   14000386b:	call   0x140005000
   140003870:	xor    eax,eax
   140003872:	mov    rbx,QWORD PTR [rsp+0x68]
   140003877:	mov    rbp,QWORD PTR [rsp+0x70]
   14000387c:	mov    rsi,QWORD PTR [rsp+0x78]
   140003881:	add    rsp,0x30
   140003885:	pop    r15
   140003887:	pop    r14
   140003889:	pop    r13
   14000388b:	pop    r12
   14000388d:	pop    rdi
   14000388e:	ret    
   14000388f:	movsxd rax,r15d
   140003892:	mov    BYTE PTR [rax+r9*1],r10b
   140003896:	test   ebp,ebp
   140003898:	jle    0x1400038f1
   14000389a:	movsxd rsi,DWORD PTR [rsp+0x20]
   14000389f:	movsxd rbp,DWORD PTR [rsp+0x90]
   1400038a7:	add    rsi,r9
   1400038aa:	test   rbp,rbp
   1400038ad:	jle    0x1400038f1
   1400038af:	movsxd rcx,DWORD PTR [rsp+0x88]
   1400038b7:	mov    rax,QWORD PTR [rsp+0x98]
   1400038bf:	lea    r14,[rbx+rcx*4]
   1400038c3:	lea    r15,[rax+rcx*8]
   1400038c7:	cmp    DWORD PTR [r14],r10d
   1400038ca:	jle    0x1400038e3
   1400038cc:	movsxd rbx,DWORD PTR [r14]
   1400038cf:	mov    rcx,rsi
   1400038d2:	mov    rdx,QWORD PTR [r15]
   1400038d5:	mov    r8,rbx
   1400038d8:	call   0x140004680
   1400038dd:	add    rsi,rbx
   1400038e0:	xor    r10d,r10d
   1400038e3:	add    r14,0x4
   1400038e7:	add    r15,0x8
   1400038eb:	sub    rbp,0x1
   1400038ef:	jne    0x1400038c7
   1400038f1:	mov    eax,DWORD PTR [rdi+0x34]
   1400038f4:	cmp    DWORD PTR [rax+rdi*1+0x4c],0x789abcde
   1400038fc:	je     0x140003905
   1400038fe:	lock inc DWORD PTR [rip+0x47d3]        # 0x1400080d8
   140003905:	mov    rcx,rdi
   140003908:	call   0x14000230c
   14000390d:	cmp    DWORD PTR [rsp+0xa8],0x0
   140003915:	mov    ebx,eax
   140003917:	je     0x140003921
   140003919:	mov    rcx,r13
   14000391c:	call   0x140001838
   140003921:	mov    eax,ebx
   140003923:	jmp    0x140003872
   140003928:	sub    rsp,0x48
   14000392c:	test   rcx,rcx
   14000392f:	jne    0x140003935
   140003931:	xor    eax,eax
   140003933:	jmp    0x140003962
   140003935:	and    DWORD PTR [rsp+0x38],0x0
   14000393a:	mov    DWORD PTR [rsp+0x30],r9d
   14000393f:	xor    r9d,r9d
   140003942:	movsxd rax,r8d
   140003945:	or     r8d,0xffffffff
   140003949:	add    rdx,rax
   14000394c:	mov    QWORD PTR [rsp+0x28],rdx
   140003951:	mov    edx,DWORD PTR [rcx+0x4c]
   140003954:	lea    ecx,[r9+0x2]
   140003958:	and    DWORD PTR [rsp+0x20],0x0
   14000395d:	call   0x1400024e0
   140003962:	add    rsp,0x48
   140003966:	ret    
   140003967:	int3   
   140003968:	mov    QWORD PTR [rsp+0x8],rbx
   14000396d:	mov    QWORD PTR [rsp+0x10],rsi
   140003972:	push   rdi
   140003973:	sub    rsp,0x20
   140003977:	mov    esi,r8d
   14000397a:	mov    rdi,rdx
   14000397d:	mov    rbx,rcx
   140003980:	test   rcx,rcx
   140003983:	jne    0x140003989
   140003985:	xor    eax,eax
   140003987:	jmp    0x1400039cb
   140003989:	movsxd rax,DWORD PTR [rcx+0xa8]
   140003990:	add    rcx,0xac
   140003997:	add    rcx,rax
   14000399a:	call   QWORD PTR [rip+0x26e0]        # 0x140006080
   1400039a0:	inc    eax
   1400039a2:	cmp    esi,eax
   1400039a4:	jge    0x1400039aa
   1400039a6:	neg    eax
   1400039a8:	jmp    0x1400039cb
   1400039aa:	movsxd rcx,DWORD PTR [rbx+0xa8]
   1400039b1:	lea    rdx,[rbx+0xac]
   1400039b8:	add    rdx,rcx
   1400039bb:	movsxd r8,eax
   1400039be:	mov    rcx,rdi
   1400039c1:	call   0x140004680
   1400039c6:	mov    eax,0x1
   1400039cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039d0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400039d5:	add    rsp,0x20
   1400039d9:	pop    rdi
   1400039da:	ret    
   1400039db:	int3   
   1400039dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400039e1:	push   rdi
   1400039e2:	sub    rsp,0x20
   1400039e6:	mov    r10,r9
   1400039e9:	mov    rdi,rdx
   1400039ec:	mov    rbx,rcx
   1400039ef:	test   rcx,rcx
   1400039f2:	je     0x140003a4f
   1400039f4:	cmp    DWORD PTR [rip+0x46a9],0x1        # 0x1400080a4
   1400039fb:	jne    0x140003a4f
   1400039fd:	mov    r9d,DWORD PTR [rcx+0x9c]
   140003a04:	cmp    r8d,r9d
   140003a07:	jle    0x140003a47
   140003a09:	test   rdx,rdx
   140003a0c:	je     0x140003a47
   140003a0e:	test   r9d,r9d
   140003a11:	js     0x140003a47
   140003a13:	movups xmm0,XMMWORD PTR [rcx+0x8c]
   140003a1a:	lea    rdx,[rcx+0xac]
   140003a21:	movdqu XMMWORD PTR [r10],xmm0
   140003a26:	movsxd r8,DWORD PTR [rcx+0x9c]
   140003a2d:	mov    rcx,rdi
   140003a30:	call   0x140004680
   140003a35:	movsxd rcx,DWORD PTR [rbx+0x9c]
   140003a3c:	mov    eax,0x1
   140003a41:	mov    BYTE PTR [rcx+rdi*1],0x0
   140003a45:	jmp    0x140003a51
   140003a47:	or     eax,0xffffffff
   140003a4a:	sub    eax,r9d
   140003a4d:	jmp    0x140003a51
   140003a4f:	xor    eax,eax
   140003a51:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a56:	add    rsp,0x20
   140003a5a:	pop    rdi
   140003a5b:	ret    
   140003a5c:	mov    rax,rsp
   140003a5f:	mov    QWORD PTR [rax+0x8],rbx
   140003a63:	mov    QWORD PTR [rax+0x10],rbp
   140003a67:	mov    QWORD PTR [rax+0x18],rsi
   140003a6b:	mov    QWORD PTR [rax+0x20],rdi
   140003a6f:	push   r12
   140003a71:	push   r14
   140003a73:	push   r15
   140003a75:	sub    rsp,0x40
   140003a79:	movsxd rbp,r8d
   140003a7c:	mov    rsi,rcx
   140003a7f:	mov    r15,r9
   140003a82:	mov    r12,rdx
   140003a85:	xor    edi,edi
   140003a87:	lea    r14d,[rbp+0x20]
   140003a8b:	movsxd rcx,r14d
   140003a8e:	call   0x140004fc8
   140003a93:	mov    rbx,rax
   140003a96:	test   rax,rax
   140003a99:	je     0x140003af6
   140003a9b:	test   rsi,rsi
   140003a9e:	je     0x140003aa5
   140003aa0:	mov    edx,DWORD PTR [rsi+0x4c]
   140003aa3:	jmp    0x140003aa7
   140003aa5:	xor    edx,edx
   140003aa7:	and    DWORD PTR [rsp+0x38],edi
   140003aab:	xor    r9d,r9d
   140003aae:	mov    DWORD PTR [rsp+0x30],r14d
   140003ab3:	xor    r8d,r8d
   140003ab6:	mov    QWORD PTR [rsp+0x28],rax
   140003abb:	and    DWORD PTR [rsp+0x20],edi
   140003abf:	lea    ecx,[r9+0x8]
   140003ac3:	call   0x1400024e0
   140003ac8:	mov    rdi,rax
   140003acb:	test   eax,eax
   140003acd:	jle    0x140003af6
   140003acf:	movups xmm0,XMMWORD PTR [rbx]
   140003ad2:	mov    rcx,QWORD PTR [rsp+0x80]
   140003ada:	lea    rdx,[rbx+0x20]
   140003ade:	mov    r8,rbp
   140003ae1:	movdqu XMMWORD PTR [r15],xmm0
   140003ae6:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140003aea:	movdqu XMMWORD PTR [rcx],xmm1
   140003aee:	mov    rcx,r12
   140003af1:	call   0x140004680
   140003af6:	mov    rcx,rbx
   140003af9:	call   0x140005000
   140003afe:	mov    rbx,QWORD PTR [rsp+0x60]
   140003b03:	mov    eax,edi
   140003b05:	mov    rdi,QWORD PTR [rsp+0x78]
   140003b0a:	mov    rbp,QWORD PTR [rsp+0x68]
   140003b0f:	mov    rsi,QWORD PTR [rsp+0x70]
   140003b14:	add    rsp,0x40
   140003b18:	pop    r15
   140003b1a:	pop    r14
   140003b1c:	pop    r12
   140003b1e:	ret    
   140003b1f:	int3   
   140003b20:	mov    QWORD PTR [rsp+0x8],rbx
   140003b25:	mov    QWORD PTR [rsp+0x10],rbp
   140003b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140003b2f:	push   rdi
   140003b30:	sub    rsp,0x20
   140003b34:	cmp    DWORD PTR [rip+0x4569],0x1        # 0x1400080a4
   140003b3b:	mov    rbx,r9
   140003b3e:	mov    rdi,r8
   140003b41:	mov    rsi,rdx
   140003b44:	mov    rbp,rcx
   140003b47:	je     0x140003b4e
   140003b49:	or     eax,0xffffffff
   140003b4c:	jmp    0x140003b71
   140003b4e:	call   QWORD PTR [rip+0x250c]        # 0x140006060
   140003b54:	mov    rcx,QWORD PTR [rsp+0x50]
   140003b59:	mov    r9,rbx
   140003b5c:	mov    r8,rdi
   140003b5f:	mov    rdx,rsi
   140003b62:	mov    DWORD PTR [rcx],eax
   140003b64:	mov    rcx,rbp
   140003b67:	call   0x1400014fc
   140003b6c:	mov    eax,0x1
   140003b71:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b76:	mov    rbp,QWORD PTR [rsp+0x38]
   140003b7b:	mov    rsi,QWORD PTR [rsp+0x40]
   140003b80:	add    rsp,0x20
   140003b84:	pop    rdi
   140003b85:	ret    
   140003b86:	int3   
   140003b87:	int3   
   140003b88:	mov    QWORD PTR [rsp+0x8],rbx
   140003b8d:	mov    QWORD PTR [rsp+0x20],r9
   140003b92:	mov    QWORD PTR [rsp+0x10],rdx
   140003b97:	push   rbp
   140003b98:	push   rsi
   140003b99:	push   rdi
   140003b9a:	push   r12
   140003b9c:	push   r13
   140003b9e:	push   r14
   140003ba0:	push   r15
   140003ba2:	sub    rsp,0x40
   140003ba6:	cmp    DWORD PTR [rip+0x44f7],0x1        # 0x1400080a4
   140003bad:	mov    rax,r9
   140003bb0:	mov    rbx,r8
   140003bb3:	movsxd rdi,ecx
   140003bb6:	je     0x140003bc1
   140003bb8:	or     rax,0xffffffffffffffff
   140003bbc:	jmp    0x140003d0f
   140003bc1:	cmp    edi,0x1
   140003bc4:	jl     0x140003d0d
   140003bca:	test   rdx,rdx
   140003bcd:	je     0x140003d0d
   140003bd3:	test   rbx,rbx
   140003bd6:	je     0x140003d0d
   140003bdc:	test   rax,rax
   140003bdf:	je     0x140003d0d
   140003be5:	mov    r14,QWORD PTR [rsp+0xa0]
   140003bed:	test   r14,r14
   140003bf0:	je     0x140003d0d
   140003bf6:	mov    r15,QWORD PTR [rsp+0xa8]
   140003bfe:	test   r15,r15
   140003c01:	je     0x140003d0d
   140003c07:	mov    r13,QWORD PTR [rsp+0xb8]
   140003c0f:	test   r13,r13
   140003c12:	je     0x140003d0d
   140003c18:	mov    rsi,QWORD PTR [rsp+0xc0]
   140003c20:	test   rsi,rsi
   140003c23:	je     0x140003d0d
   140003c29:	mov    rcx,0xffffffffffffffff
   140003c30:	mov    eax,0x30
   140003c35:	mul    rdi
   140003c38:	cmovo  rax,rcx
   140003c3c:	mov    rcx,rax
   140003c3f:	call   0x140004fc8
   140003c44:	mov    rbp,rax
   140003c47:	test   rax,rax
   140003c4a:	je     0x140003d0d
   140003c50:	and    DWORD PTR [rsp+0x38],0x0
   140003c55:	lea    eax,[rdi+rdi*2]
   140003c58:	xor    edx,edx
   140003c5a:	shl    eax,0x4
   140003c5d:	mov    DWORD PTR [rsp+0x30],eax
   140003c61:	xor    r9d,r9d
   140003c64:	mov    QWORD PTR [rsp+0x28],rbp
   140003c69:	xor    r8d,r8d
   140003c6c:	and    DWORD PTR [rsp+0x20],0x0
   140003c71:	lea    ecx,[rdx+0x7]
   140003c74:	call   0x1400024e0
   140003c79:	cmp    eax,edi
   140003c7b:	mov    r12,rax
   140003c7e:	cmovg  r12d,edi
   140003c82:	movsxd r9,r12d
   140003c85:	test   r12d,r12d
   140003c88:	jle    0x140003d00
   140003c8a:	mov    r8,QWORD PTR [rsp+0x88]
   140003c92:	lea    rcx,[rbp+0xc]
   140003c96:	mov    rdx,QWORD PTR [rsp+0x98]
   140003c9e:	sub    r8,rbx
   140003ca1:	mov    r10,QWORD PTR [rsp+0xb0]
   140003ca9:	sub    rdx,rbx
   140003cac:	sub    r10,rbx
   140003caf:	sub    r14,rbx
   140003cb2:	sub    r15,rbx
   140003cb5:	sub    r13,rsi
   140003cb8:	mov    eax,DWORD PTR [rcx-0xc]
   140003cbb:	mov    DWORD PTR [r8+rbx*1],eax
   140003cbf:	mov    eax,DWORD PTR [rcx-0x4]
   140003cc2:	mov    DWORD PTR [rbx],eax
   140003cc4:	mov    eax,DWORD PTR [rcx]
   140003cc6:	lea    rcx,[rcx+0x30]
   140003cca:	mov    DWORD PTR [rdx+rbx*1],eax
   140003ccd:	mov    eax,DWORD PTR [rcx-0x2c]
   140003cd0:	mov    DWORD PTR [r14+rbx*1],eax
   140003cd4:	mov    eax,DWORD PTR [rcx-0x14]
   140003cd7:	mov    DWORD PTR [r15+rbx*1],eax
   140003cdb:	mov    eax,DWORD PTR [rcx-0x28]
   140003cde:	mov    DWORD PTR [r10+rbx*1],eax
   140003ce2:	lea    rbx,[rbx+0x4]
   140003ce6:	mov    rax,QWORD PTR [rcx-0x24]
   140003cea:	mov    QWORD PTR [r13+rsi*1+0x0],rax
   140003cef:	mov    rax,QWORD PTR [rcx-0x1c]
   140003cf3:	mov    QWORD PTR [rsi],rax
   140003cf6:	lea    rsi,[rsi+0x8]
   140003cfa:	sub    r9,0x1
   140003cfe:	jne    0x140003cb8
   140003d00:	mov    rcx,rbp
   140003d03:	call   0x140005000
   140003d08:	mov    eax,r12d
   140003d0b:	jmp    0x140003d0f
   140003d0d:	xor    eax,eax
   140003d0f:	mov    rbx,QWORD PTR [rsp+0x80]
   140003d17:	add    rsp,0x40
   140003d1b:	pop    r15
   140003d1d:	pop    r14
   140003d1f:	pop    r13
   140003d21:	pop    r12
   140003d23:	pop    rdi
   140003d24:	pop    rsi
   140003d25:	pop    rbp
   140003d26:	ret    
   140003d27:	int3   
   140003d28:	test   rcx,rcx
   140003d2b:	jne    0x140003d30
   140003d2d:	xor    eax,eax
   140003d2f:	ret    
   140003d30:	mov    rax,QWORD PTR [rcx+0x60]
   140003d34:	ret    
   140003d35:	int3   
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	sub    rsp,0x48
   140003d3c:	xor    eax,eax
   140003d3e:	xor    r9d,r9d
   140003d41:	mov    DWORD PTR [rsp+0x38],eax
   140003d45:	xor    r8d,r8d
   140003d48:	mov    DWORD PTR [rsp+0x30],eax
   140003d4c:	xor    edx,edx
   140003d4e:	mov    QWORD PTR [rsp+0x28],rax
   140003d53:	lea    ecx,[rax+0xb]
   140003d56:	mov    DWORD PTR [rsp+0x20],eax
   140003d5a:	call   0x1400024e0
   140003d5f:	add    rsp,0x48
   140003d63:	ret    
   140003d64:	rex push rbx
   140003d66:	sub    rsp,0x20
   140003d6a:	movsxd r10,r8d
   140003d6d:	mov    r11,rdx
   140003d70:	mov    rax,rcx
   140003d73:	test   rcx,rcx
   140003d76:	je     0x140003dab
   140003d78:	movsxd rbx,DWORD PTR [rcx+0xa4]
   140003d7f:	cmp    r9d,ebx
   140003d82:	jge    0x140003d88
   140003d84:	neg    ebx
   140003d86:	jmp    0x140003da9
   140003d88:	test   ebx,ebx
   140003d8a:	jle    0x140003da9
   140003d8c:	movsxd rdx,DWORD PTR [rcx+0xa0]
   140003d93:	mov    r8,rbx
   140003d96:	add    rdx,0xac
   140003d9d:	lea    rcx,[r11+r10*1]
   140003da1:	add    rdx,rax
   140003da4:	call   0x140004680
   140003da9:	mov    eax,ebx
   140003dab:	add    rsp,0x20
   140003daf:	pop    rbx
   140003db0:	ret    
   140003db1:	int3   
   140003db2:	int3   
   140003db3:	int3   
   140003db4:	mov    QWORD PTR [rsp+0x8],rbx
   140003db9:	mov    QWORD PTR [rsp+0x10],rsi
   140003dbe:	push   rdi
   140003dbf:	sub    rsp,0x20
   140003dc3:	mov    esi,r9d
   140003dc6:	mov    rdi,r8
   140003dc9:	mov    rbx,rcx
   140003dcc:	test   rcx,rcx
   140003dcf:	jne    0x140003dd5
   140003dd1:	xor    eax,eax
   140003dd3:	jmp    0x140003e32
   140003dd5:	movsxd rcx,DWORD PTR [rcx+0x9c]
   140003ddc:	mov    eax,DWORD PTR [rbx+0xa0]
   140003de2:	sub    eax,ecx
   140003de4:	test   eax,eax
   140003de6:	jle    0x140003dfd
   140003de8:	mov    rax,rcx
   140003deb:	lea    rcx,[rbx+0xac]
   140003df2:	add    rcx,rax
   140003df5:	call   QWORD PTR [rip+0x2285]        # 0x140006080
   140003dfb:	inc    eax
   140003dfd:	cmp    esi,eax
   140003dff:	jl     0x140003e30
   140003e01:	test   rdi,rdi
   140003e04:	je     0x140003e30
   140003e06:	cmp    eax,0x1
   140003e09:	jge    0x140003e12
   140003e0b:	mov    eax,0x1
   140003e10:	jmp    0x140003e32
   140003e12:	movsxd r8,eax
   140003e15:	lea    rdx,[rbx+0xac]
   140003e1c:	movsxd rax,DWORD PTR [rbx+0x9c]
   140003e23:	mov    rcx,rdi
   140003e26:	add    rdx,rax
   140003e29:	call   0x140004680
   140003e2e:	jmp    0x140003e0b
   140003e30:	neg    eax
   140003e32:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e37:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e3c:	add    rsp,0x20
   140003e40:	pop    rdi
   140003e41:	ret    
   140003e42:	int3   
   140003e43:	int3   
   140003e44:	mov    QWORD PTR [rsp+0x8],rbx
   140003e49:	mov    QWORD PTR [rsp+0x10],rsi
   140003e4e:	push   rdi
   140003e4f:	sub    rsp,0x20
   140003e53:	mov    esi,r8d
   140003e56:	mov    rdi,rdx
   140003e59:	mov    rbx,rcx
   140003e5c:	test   rcx,rcx
   140003e5f:	jne    0x140003e65
   140003e61:	xor    eax,eax
   140003e63:	jmp    0x140003ec1
   140003e65:	movsxd rcx,DWORD PTR [rcx+0x9c]
   140003e6c:	mov    eax,DWORD PTR [rbx+0xa0]
   140003e72:	sub    eax,ecx
   140003e74:	test   eax,eax
   140003e76:	jle    0x140003e8b
   140003e78:	mov    rax,rcx
   140003e7b:	lea    rcx,[rbx+0xac]
   140003e82:	add    rcx,rax
   140003e85:	call   QWORD PTR [rip+0x21f5]        # 0x140006080
   140003e8b:	cmp    esi,eax
   140003e8d:	jl     0x140003ebf
   140003e8f:	test   rdi,rdi
   140003e92:	je     0x140003ebf
   140003e94:	mov    esi,0x1
   140003e99:	cmp    eax,esi
   140003e9b:	jge    0x140003ea1
   140003e9d:	mov    eax,esi
   140003e9f:	jmp    0x140003ec1
   140003ea1:	movsxd r8,eax
   140003ea4:	lea    rdx,[rbx+0xac]
   140003eab:	movsxd rax,DWORD PTR [rbx+0x9c]
   140003eb2:	mov    rcx,rdi
   140003eb5:	add    rdx,rax
   140003eb8:	call   0x140004680
   140003ebd:	jmp    0x140003e9d
   140003ebf:	neg    eax
   140003ec1:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ec6:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ecb:	add    rsp,0x20
   140003ecf:	pop    rdi
   140003ed0:	ret    
   140003ed1:	int3   
   140003ed2:	int3   
   140003ed3:	int3   
   140003ed4:	mov    rax,rsp
   140003ed7:	mov    QWORD PTR [rax+0x8],rbx
   140003edb:	mov    QWORD PTR [rax+0x10],rbp
   140003edf:	mov    QWORD PTR [rax+0x18],rsi
   140003ee3:	mov    QWORD PTR [rax+0x20],rdi
   140003ee7:	push   r14
   140003ee9:	sub    rsp,0x20
   140003eed:	xor    esi,esi
   140003eef:	mov    ebx,r9d
   140003ef2:	mov    r14,r8
   140003ef5:	mov    rdi,rdx
   140003ef8:	mov    rbp,rcx
   140003efb:	test   rcx,rcx
   140003efe:	je     0x140003f4b
   140003f00:	test   rdx,rdx
   140003f03:	je     0x140003f4b
   140003f05:	cmp    DWORD PTR [rip+0x4198],0x1        # 0x1400080a4
   140003f0c:	jne    0x140003f4b
   140003f0e:	lea    rdx,[rip+0x25ab]        # 0x1400064c0
   140003f15:	mov    rcx,rdi
   140003f18:	call   0x14000468c
   140003f1d:	test   eax,eax
   140003f1f:	jne    0x140003f92
   140003f21:	movsxd rax,DWORD PTR [rbp+0x9c]
   140003f28:	mov    ecx,esi
   140003f2a:	mov    edx,esi
   140003f2c:	test   eax,eax
   140003f2e:	jle    0x140003f4b
   140003f30:	cmp    BYTE PTR [rdx+rbp*1+0xac],0x9
   140003f38:	jne    0x140003f41
   140003f3a:	inc    esi
   140003f3c:	cmp    esi,0x5
   140003f3f:	je     0x140003f68
   140003f41:	inc    ecx
   140003f43:	inc    rdx
   140003f46:	cmp    rdx,rax
   140003f49:	jl     0x140003f30
   140003f4b:	xor    eax,eax
   140003f4d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f52:	mov    rbp,QWORD PTR [rsp+0x38]
   140003f57:	mov    rsi,QWORD PTR [rsp+0x40]
   140003f5c:	mov    rdi,QWORD PTR [rsp+0x48]
   140003f61:	add    rsp,0x20
   140003f65:	pop    r14
   140003f67:	ret    
   140003f68:	inc    ecx
   140003f6a:	sub    eax,ecx
   140003f6c:	inc    eax
   140003f6e:	cmp    eax,ebx
   140003f70:	jle    0x140003f78
   140003f72:	neg    ebx
   140003f74:	mov    eax,ebx
   140003f76:	jmp    0x140003f4d
   140003f78:	movsxd rcx,ecx
   140003f7b:	lea    rdx,[rbp+0xac]
   140003f82:	add    rdx,rcx
   140003f85:	movsxd r8,eax
   140003f88:	mov    rcx,r14
   140003f8b:	call   0x140004680
   140003f90:	jmp    0x140003fe8
   140003f92:	lea    rdx,[rip+0x2517]        # 0x1400064b0
   140003f99:	mov    rcx,rdi
   140003f9c:	call   0x14000468c
   140003fa1:	test   eax,eax
   140003fa3:	jne    0x140003f4b
   140003fa5:	movsxd rcx,DWORD PTR [rbp+0xa8]
   140003fac:	lea    rdx,[rbp+0xac]
   140003fb3:	add    rdx,rcx
   140003fb6:	mov    edi,ecx
   140003fb8:	cmp    BYTE PTR [rdx],0x9
   140003fbb:	je     0x140003fca
   140003fbd:	mov    rax,rdx
   140003fc0:	inc    rax
   140003fc3:	inc    edi
   140003fc5:	cmp    BYTE PTR [rax],0x9
   140003fc8:	jne    0x140003fc0
   140003fca:	sub    edi,ecx
   140003fcc:	inc    edi
   140003fce:	cmp    edi,ebx
   140003fd0:	jg     0x140003f72
   140003fd2:	lea    eax,[rdi-0x1]
   140003fd5:	mov    rcx,r14
   140003fd8:	movsxd r8,eax
   140003fdb:	call   0x140004680
   140003fe0:	movsxd rax,edi
   140003fe3:	mov    BYTE PTR [rax+r14*1-0x1],sil
   140003fe8:	mov    eax,0x1
   140003fed:	jmp    0x140003f4d
   140003ff2:	int3   
   140003ff3:	int3   
   140003ff4:	test   rcx,rcx
   140003ff7:	jne    0x140003ffc
   140003ff9:	xor    eax,eax
   140003ffb:	ret    
   140003ffc:	mov    rax,QWORD PTR [rcx+0x58]
   140004000:	ret    
   140004001:	int3   
   140004002:	int3   
   140004003:	int3   
   140004004:	test   rcx,rcx
   140004007:	je     0x14000401c
   140004009:	test   rdx,rdx
   14000400c:	je     0x14000401c
   14000400e:	movups xmm0,XMMWORD PTR [rcx+0x78]
   140004012:	mov    eax,0x1
   140004017:	movdqu XMMWORD PTR [rdx],xmm0
   14000401b:	ret    
   14000401c:	xor    eax,eax
   14000401e:	ret    
   14000401f:	int3   
   140004020:	test   rcx,rcx
   140004023:	jne    0x140004028
   140004025:	xor    eax,eax
   140004027:	ret    
   140004028:	mov    rax,QWORD PTR [rcx+0x68]
   14000402c:	ret    
   14000402d:	int3   
   14000402e:	int3   
   14000402f:	int3   
   140004030:	sub    rsp,0x48
   140004034:	xor    eax,eax
   140004036:	test   rcx,rcx
   140004039:	je     0x140004040
   14000403b:	mov    edx,DWORD PTR [rcx+0x4c]
   14000403e:	jmp    0x140004042
   140004040:	mov    edx,eax
   140004042:	mov    DWORD PTR [rsp+0x38],eax
   140004046:	xor    r9d,r9d
   140004049:	mov    DWORD PTR [rsp+0x30],eax
   14000404d:	xor    r8d,r8d
   140004050:	mov    QWORD PTR [rsp+0x28],rax
   140004055:	mov    DWORD PTR [rsp+0x20],eax
   140004059:	lea    ecx,[r9+0x3]
   14000405d:	call   0x1400024e0
   140004062:	add    rsp,0x48
   140004066:	ret    
   140004067:	int3   
   140004068:	sub    rsp,0x48
   14000406c:	mov    rax,rdx
   14000406f:	test   rcx,rcx
   140004072:	je     0x140004079
   140004074:	mov    edx,DWORD PTR [rcx+0x4c]
   140004077:	jmp    0x14000407b
   140004079:	xor    edx,edx
   14000407b:	and    DWORD PTR [rsp+0x38],0x0
   140004080:	mov    DWORD PTR [rsp+0x30],r9d
   140004085:	mov    r9,rax
   140004088:	mov    QWORD PTR [rsp+0x28],r8
   14000408d:	xor    r8d,r8d
   140004090:	or     DWORD PTR [rsp+0x20],0xffffffff
   140004095:	lea    ecx,[r8+0x4]
   140004099:	call   0x1400024e0
   14000409e:	add    rsp,0x48
   1400040a2:	ret    
   1400040a3:	int3   
   1400040a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400040a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400040ae:	push   rdi
   1400040af:	sub    rsp,0x20
   1400040b3:	movsxd rdi,r8d
   1400040b6:	mov    rsi,rdx
   1400040b9:	mov    rax,rcx
   1400040bc:	test   rcx,rcx
   1400040bf:	je     0x140004106
   1400040c1:	cmp    DWORD PTR [rip+0x3fdc],0x1        # 0x1400080a4
   1400040c8:	jne    0x140004106
   1400040ca:	mov    edx,DWORD PTR [rax+0x4c]
   1400040cd:	lea    ecx,[rdi+0x8]
   1400040d0:	mov    r8d,0x2
   1400040d6:	call   0x140001758
   1400040db:	mov    rbx,rax
   1400040de:	test   rax,rax
   1400040e1:	je     0x140004106
   1400040e3:	mov    r8,rdi
   1400040e6:	mov    DWORD PTR [rax+0x58],0x3
   1400040ed:	lea    rcx,[rax+0x60]
   1400040f1:	mov    DWORD PTR [rax+0x5c],edi
   1400040f4:	mov    rdx,rsi
   1400040f7:	call   0x140004680
   1400040fc:	mov    rcx,rbx
   1400040ff:	call   0x14000230c
   140004104:	jmp    0x140004108
   140004106:	xor    eax,eax
   140004108:	mov    rbx,QWORD PTR [rsp+0x30]
   14000410d:	mov    rsi,QWORD PTR [rsp+0x38]
   140004112:	add    rsp,0x20
   140004116:	pop    rdi
   140004117:	ret    
   140004118:	mov    QWORD PTR [rsp+0x8],rbx
   14000411d:	mov    QWORD PTR [rsp+0x10],rbp
   140004122:	mov    QWORD PTR [rsp+0x18],rsi
   140004127:	push   rdi
   140004128:	push   r12
   14000412a:	push   r13
   14000412c:	push   r14
   14000412e:	push   r15
   140004130:	sub    rsp,0x20
   140004134:	mov    r15d,r9d
   140004137:	mov    r14,r8
   14000413a:	mov    rdi,rdx
   14000413d:	test   rcx,rcx
   140004140:	je     0x14000429f
   140004146:	cmp    DWORD PTR [rip+0x3f57],0x1        # 0x1400080a4
   14000414d:	jne    0x14000429f
   140004153:	mov    ebp,DWORD PTR [rcx+0x4c]
   140004156:	test   rdx,rdx
   140004159:	je     0x140004166
   14000415b:	mov    rcx,rdx
   14000415e:	call   QWORD PTR [rip+0x1f1c]        # 0x140006080
   140004164:	jmp    0x140004168
   140004166:	xor    eax,eax
   140004168:	lea    r12d,[rax+0x1]
   14000416c:	test   r14,r14
   14000416f:	je     0x14000417c
   140004171:	mov    rcx,r14
   140004174:	call   QWORD PTR [rip+0x1f06]        # 0x140006080
   14000417a:	jmp    0x14000417e
   14000417c:	xor    eax,eax
   14000417e:	lea    r13d,[rax+0x1]
   140004182:	xor    ebx,ebx
   140004184:	lea    ecx,[r12+0x8]
   140004189:	mov    edx,ebp
   14000418b:	add    ecx,r13d
   14000418e:	xor    esi,esi
   140004190:	lea    r8d,[rbx+0x2]
   140004194:	call   0x140001758
   140004199:	xor    r11d,r11d
   14000419c:	mov    rbp,rax
   14000419f:	test   rax,rax
   1400041a2:	je     0x1400042be
   1400041a8:	mov    DWORD PTR [rax+0x5c],r15d
   1400041ac:	mov    esi,0x8007007a
   1400041b1:	mov    DWORD PTR [rax+0x58],0x2
   1400041b8:	lea    r9,[rax+0x60]
   1400041bc:	mov    r8d,0x7ffffffe
   1400041c2:	lea    r15d,[rsi-0x23]
   1400041c6:	test   rdi,rdi
   1400041c9:	je     0x140004227
   1400041cb:	movsxd rcx,r12d
   1400041ce:	lea    rax,[rcx-0x1]
   1400041d2:	cmp    rax,r8
   1400041d5:	cmova  ebx,r15d
   1400041d9:	test   ebx,ebx
   1400041db:	js     0x14000421b
   1400041dd:	mov    rdx,r9
   1400041e0:	mov    ebx,r11d
   1400041e3:	test   r12d,r12d
   1400041e6:	je     0x140004211
   1400041e8:	mov    r10d,r8d
   1400041eb:	sub    r10,rcx
   1400041ee:	sub    rdi,r9
   1400041f1:	lea    rax,[r10+rcx*1]
   1400041f5:	test   rax,rax
   1400041f8:	je     0x14000420c
   1400041fa:	mov    al,BYTE PTR [rdi+rdx*1]
   1400041fd:	test   al,al
   1400041ff:	je     0x14000420c
   140004201:	mov    BYTE PTR [rdx],al
   140004203:	inc    rdx
   140004206:	sub    rcx,0x1
   14000420a:	jne    0x1400041f1
   14000420c:	test   rcx,rcx
   14000420f:	jne    0x140004216
   140004211:	dec    rdx
   140004214:	mov    ebx,esi
   140004216:	mov    BYTE PTR [rdx],r11b
   140004219:	jmp    0x140004223
   14000421b:	test   r12d,r12d
   14000421e:	je     0x140004223
   140004220:	mov    BYTE PTR [r9],r11b
   140004223:	test   ebx,ebx
   140004225:	jne    0x140004297
   140004227:	test   r14,r14
   14000422a:	je     0x140004289
   14000422c:	movsxd rdx,r13d
   14000422f:	mov    ebx,r11d
   140004232:	movsxd rcx,r12d
   140004235:	add    rcx,r9
   140004238:	lea    rax,[rdx-0x1]
   14000423c:	cmp    rax,r8
   14000423f:	cmova  ebx,r15d
   140004243:	test   ebx,ebx
   140004245:	js     0x14000427d
   140004247:	mov    ebx,r11d
   14000424a:	test   r13d,r13d
   14000424d:	je     0x140004276
   14000424f:	sub    r8,rdx
   140004252:	sub    r14,rcx
   140004255:	lea    rax,[r8+rdx*1]
   140004259:	test   rax,rax
   14000425c:	je     0x140004271
   14000425e:	mov    al,BYTE PTR [r14+rcx*1]
   140004262:	test   al,al
   140004264:	je     0x140004271
   140004266:	mov    BYTE PTR [rcx],al
   140004268:	inc    rcx
   14000426b:	sub    rdx,0x1
   14000426f:	jne    0x140004255
   140004271:	test   rdx,rdx
   140004274:	jne    0x140004282
   140004276:	dec    rcx
   140004279:	mov    ebx,esi
   14000427b:	jmp    0x140004282
   14000427d:	test   r13d,r13d
   140004280:	je     0x140004285
   140004282:	mov    BYTE PTR [rcx],r11b
   140004285:	test   ebx,ebx
   140004287:	jne    0x140004297
   140004289:	mov    rcx,rbp
   14000428c:	call   0x14000230c
   140004291:	mov    esi,eax
   140004293:	test   ebx,ebx
   140004295:	je     0x1400042be
   140004297:	mov    rcx,rbp
   14000429a:	call   0x140005000
   14000429f:	xor    eax,eax
   1400042a1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400042a6:	mov    rbp,QWORD PTR [rsp+0x58]
   1400042ab:	mov    rsi,QWORD PTR [rsp+0x60]
   1400042b0:	add    rsp,0x20
   1400042b4:	pop    r15
   1400042b6:	pop    r14
   1400042b8:	pop    r13
   1400042ba:	pop    r12
   1400042bc:	pop    rdi
   1400042bd:	ret    
   1400042be:	mov    eax,esi
   1400042c0:	jmp    0x1400042a1
   1400042c2:	int3   
   1400042c3:	int3   
   1400042c4:	mov    r11,rsp
   1400042c7:	sub    rsp,0x58
   1400042cb:	test   rdx,rdx
   1400042ce:	je     0x140004306
   1400042d0:	movups xmm0,XMMWORD PTR [rdx+0x78]
   1400042d4:	mov    rax,QWORD PTR [rsp+0x88]
   1400042dc:	mov    rdx,QWORD PTR [rdx+0x70]
   1400042e0:	mov    QWORD PTR [r11-0x28],rax
   1400042e4:	mov    rax,QWORD PTR [rsp+0x80]
   1400042ec:	mov    QWORD PTR [r11-0x30],rax
   1400042f0:	mov    QWORD PTR [r11-0x38],r9
   1400042f4:	mov    r9,r8
   1400042f7:	lea    r8,[r11-0x18]
   1400042fb:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140004301:	call   0x140004c40
   140004306:	add    rsp,0x58
   14000430a:	ret    
   14000430b:	int3   
   14000430c:	sub    rsp,0x28
   140004310:	mov    eax,0x5a4d
   140004315:	cmp    WORD PTR [rip+0xffffffffffffbce4],ax        # 0x140000000
   14000431c:	je     0x140004322
   14000431e:	xor    ecx,ecx
   140004320:	jmp    0x14000435a
   140004322:	movsxd rax,DWORD PTR [rip+0xffffffffffffbd13]        # 0x14000003c
   140004329:	lea    rcx,[rip+0xffffffffffffbcd0]        # 0x140000000
   140004330:	add    rax,rcx
   140004333:	cmp    DWORD PTR [rax],0x4550
   140004339:	jne    0x14000431e
   14000433b:	mov    ecx,0x20b
   140004340:	cmp    WORD PTR [rax+0x18],cx
   140004344:	jne    0x14000431e
   140004346:	xor    ecx,ecx
   140004348:	cmp    DWORD PTR [rax+0x84],0xe
   14000434f:	jbe    0x14000435a
   140004351:	cmp    DWORD PTR [rax+0xf8],ecx
   140004357:	setne  cl
   14000435a:	mov    DWORD PTR [rip+0x3d88],ecx        # 0x1400080e8
   140004360:	mov    ecx,0x1
   140004365:	call   QWORD PTR [rip+0x1e9d]        # 0x140006208
   14000436b:	or     rcx,0xffffffffffffffff
   14000436f:	call   QWORD PTR [rip+0x1dc3]        # 0x140006138
   140004375:	mov    rcx,QWORD PTR [rip+0x1f04]        # 0x140006280
   14000437c:	mov    QWORD PTR [rip+0x4bbd],rax        # 0x140008f40
   140004383:	mov    QWORD PTR [rip+0x4bbe],rax        # 0x140008f48
   14000438a:	mov    eax,DWORD PTR [rip+0x3d84]        # 0x140008114
   140004390:	mov    DWORD PTR [rcx],eax
   140004392:	mov    rdx,QWORD PTR [rip+0x1edf]        # 0x140006278
   140004399:	mov    eax,DWORD PTR [rip+0x3d69]        # 0x140008108
   14000439f:	mov    DWORD PTR [rdx],eax
   1400043a1:	call   0x140004994
   1400043a6:	call   0x1400046f0
   1400043ab:	cmp    DWORD PTR [rip+0x3c6e],0x0        # 0x140008020
   1400043b2:	jne    0x1400043c1
   1400043b4:	lea    rcx,[rip+0x335]        # 0x1400046f0
   1400043bb:	call   QWORD PTR [rip+0x1e6f]        # 0x140006230
   1400043c1:	cmp    DWORD PTR [rip+0x3c5c],0xffffffff        # 0x140008024
   1400043c8:	jne    0x1400043d3
   1400043ca:	or     ecx,0xffffffff
   1400043cd:	call   QWORD PTR [rip+0x1e55]        # 0x140006228
   1400043d3:	xor    eax,eax
   1400043d5:	add    rsp,0x28
   1400043d9:	ret    
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	sub    rsp,0x38
   1400043e0:	lea    rcx,[rip+0x5e5]        # 0x1400049cc
   1400043e7:	call   0x14000497c
   1400043ec:	mov    eax,DWORD PTR [rip+0x3d1e]        # 0x140008110
   1400043f2:	mov    r9d,DWORD PTR [rip+0x3d13]        # 0x14000810c
   1400043f9:	mov    DWORD PTR [rip+0x3d05],eax        # 0x140008104
   1400043ff:	lea    rax,[rip+0x3cfe]        # 0x140008104
   140004406:	lea    r8,[rip+0x3ceb]        # 0x1400080f8
   14000440d:	lea    rdx,[rip+0x3cdc]        # 0x1400080f0
   140004414:	lea    rcx,[rip+0x3cd1]        # 0x1400080ec
   14000441b:	mov    QWORD PTR [rsp+0x20],rax
   140004420:	call   QWORD PTR [rip+0x1dda]        # 0x140006200
   140004426:	mov    DWORD PTR [rip+0x3cd4],eax        # 0x140008100
   14000442c:	test   eax,eax
   14000442e:	jns    0x14000443a
   140004430:	mov    ecx,0x8
   140004435:	call   0x1400046ea
   14000443a:	add    rsp,0x38
   14000443e:	ret    
   14000443f:	int3   
   140004440:	rex push rdi
   140004442:	sub    rsp,0x20
   140004446:	mov    rax,QWORD PTR gs:0x30
   14000444f:	mov    rcx,QWORD PTR [rax+0x8]
   140004453:	xor    edi,edi
   140004455:	xor    eax,eax
   140004457:	lock cmpxchg QWORD PTR [rip+0x4ad0],rcx        # 0x140008f30
   140004460:	je     0x140004470
   140004462:	cmp    rax,rcx
   140004465:	jne    0x14000446e
   140004467:	mov    edi,0x1
   14000446c:	jmp    0x140004470
   14000446e:	jmp    0x140004455
   140004470:	mov    eax,DWORD PTR [rip+0x4ac2]        # 0x140008f38
   140004476:	cmp    eax,0x1
   140004479:	jne    0x140004485
   14000447b:	lea    ecx,[rax+0x1e]
   14000447e:	call   0x1400046ea
   140004483:	jmp    0x1400044c4
   140004485:	mov    eax,DWORD PTR [rip+0x4aad]        # 0x140008f38
   14000448b:	test   eax,eax
   14000448d:	jne    0x1400044ba
   14000448f:	mov    DWORD PTR [rip+0x4a9f],0x1        # 0x140008f38
   140004499:	lea    rdx,[rip+0x1f30]        # 0x1400063d0
   1400044a0:	lea    rcx,[rip+0x1f09]        # 0x1400063b0
   1400044a7:	call   0x140004a04
   1400044ac:	test   eax,eax
   1400044ae:	je     0x1400044c4
   1400044b0:	mov    eax,0xff
   1400044b5:	jmp    0x1400045aa
   1400044ba:	mov    DWORD PTR [rip+0x3c1c],0x1        # 0x1400080e0
   1400044c4:	mov    eax,DWORD PTR [rip+0x4a6e]        # 0x140008f38
   1400044ca:	cmp    eax,0x1
   1400044cd:	jne    0x1400044ec
   1400044cf:	lea    rdx,[rip+0x1ed2]        # 0x1400063a8
   1400044d6:	lea    rcx,[rip+0x1ea3]        # 0x140006380
   1400044dd:	call   0x140004a0a
   1400044e2:	mov    DWORD PTR [rip+0x4a4c],0x2        # 0x140008f38
   1400044ec:	test   edi,edi
   1400044ee:	jne    0x1400044f9
   1400044f0:	xor    eax,eax
   1400044f2:	xchg   QWORD PTR [rip+0x4a37],rax        # 0x140008f30
   1400044f9:	cmp    QWORD PTR [rip+0x4a4f],0x0        # 0x140008f50
   140004501:	je     0x140004525
   140004503:	lea    rcx,[rip+0x4a46]        # 0x140008f50
   14000450a:	call   0x140004750
   14000450f:	test   eax,eax
   140004511:	je     0x140004525
   140004513:	xor    r8d,r8d
   140004516:	lea    edx,[r8+0x2]
   14000451a:	xor    ecx,ecx
   14000451c:	mov    rax,QWORD PTR [rip+0x4a2d]        # 0x140008f50
   140004523:	call   rax
   140004525:	mov    rcx,QWORD PTR [rip+0x3bcc]        # 0x1400080f8
   14000452c:	mov    rax,QWORD PTR [rip+0x1d55]        # 0x140006288
   140004533:	mov    QWORD PTR [rax],rcx
   140004536:	mov    r8,QWORD PTR [rip+0x3bbb]        # 0x1400080f8
   14000453d:	mov    rdx,QWORD PTR [rip+0x3bac]        # 0x1400080f0
   140004544:	mov    ecx,DWORD PTR [rip+0x3ba2]        # 0x1400080ec
   14000454a:	call   0x140002eec
   14000454f:	mov    DWORD PTR [rip+0x3b8f],eax        # 0x1400080e4
   140004555:	cmp    DWORD PTR [rip+0x3b8c],0x0        # 0x1400080e8
   14000455c:	jne    0x140004566
   14000455e:	mov    ecx,eax
   140004560:	call   QWORD PTR [rip+0x1caa]        # 0x140006210
   140004566:	cmp    DWORD PTR [rip+0x3b73],0x0        # 0x1400080e0
   14000456d:	jne    0x14000457b
   14000456f:	call   QWORD PTR [rip+0x1cab]        # 0x140006220
   140004575:	mov    eax,DWORD PTR [rip+0x3b69]        # 0x1400080e4
   14000457b:	jmp    0x1400045aa
   14000457d:	mov    DWORD PTR [rip+0x3b61],eax        # 0x1400080e4
   140004583:	cmp    DWORD PTR [rip+0x3b5e],0x0        # 0x1400080e8
   14000458a:	jne    0x140004595
   14000458c:	mov    ecx,eax
   14000458e:	call   QWORD PTR [rip+0x1c84]        # 0x140006218
   140004594:	int3   
   140004595:	cmp    DWORD PTR [rip+0x3b44],0x0        # 0x1400080e0
   14000459c:	jne    0x1400045aa
   14000459e:	call   QWORD PTR [rip+0x1c7c]        # 0x140006220
   1400045a4:	mov    eax,DWORD PTR [rip+0x3b3a]        # 0x1400080e4
   1400045aa:	add    rsp,0x20
   1400045ae:	pop    rdi
   1400045af:	ret    
   1400045b0:	sub    rsp,0x28
   1400045b4:	call   0x1400047d0
   1400045b9:	add    rsp,0x28
   1400045bd:	jmp    0x140004440
   1400045c2:	int3   
   1400045c3:	int3   
   1400045c4:	sub    rsp,0x28
   1400045c8:	mov    r8,QWORD PTR [r9+0x38]
   1400045cc:	mov    rcx,rdx
   1400045cf:	mov    rdx,r9
   1400045d2:	call   0x1400045e4
   1400045d7:	mov    eax,0x1
   1400045dc:	add    rsp,0x28
   1400045e0:	ret    
   1400045e1:	int3   
   1400045e2:	int3   
   1400045e3:	int3   
   1400045e4:	rex push rbx
   1400045e6:	sub    rsp,0x20
   1400045ea:	mov    r11d,DWORD PTR [r8]
   1400045ed:	mov    rbx,rdx
   1400045f0:	mov    r9,rcx
   1400045f3:	and    r11d,0xfffffff8
   1400045f7:	test   BYTE PTR [r8],0x4
   1400045fb:	mov    r10,rcx
   1400045fe:	je     0x140004613
   140004600:	mov    eax,DWORD PTR [r8+0x8]
   140004604:	movsxd r10,DWORD PTR [r8+0x4]
   140004608:	neg    eax
   14000460a:	add    r10,rcx
   14000460d:	movsxd rcx,eax
   140004610:	and    r10,rcx
   140004613:	movsxd rax,r11d
   140004616:	mov    rdx,QWORD PTR [rax+r10*1]
   14000461a:	mov    rax,QWORD PTR [rbx+0x10]
   14000461e:	mov    ecx,DWORD PTR [rax+0x8]
   140004621:	add    rcx,QWORD PTR [rbx+0x8]
   140004625:	test   BYTE PTR [rcx+0x3],0xf
   140004629:	je     0x140004637
   14000462b:	movzx  eax,BYTE PTR [rcx+0x3]
   14000462f:	and    eax,0xfffffff0
   140004632:	cdqe   
   140004634:	add    r9,rax
   140004637:	xor    r9,rdx
   14000463a:	mov    rcx,r9
   14000463d:	add    rsp,0x20
   140004641:	pop    rbx
   140004642:	jmp    0x140004660
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	int3   
   140004651:	int3   
   140004652:	int3   
   140004653:	int3   
   140004654:	int3   
   140004655:	int3   
   140004656:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004660:	cmp    rcx,QWORD PTR [rip+0x39a9]        # 0x140008010
   140004667:	jne    0x14000467a
   140004669:	rol    rcx,0x10
   14000466d:	test   cx,0xffff
   140004672:	jne    0x140004676
   140004674:	repz ret 
   140004676:	ror    rcx,0x10
   14000467a:	jmp    0x140004a64
   14000467f:	int3   
   140004680:	jmp    QWORD PTR [rip+0x1b22]        # 0x1400061a8
   140004686:	jmp    QWORD PTR [rip+0x1b24]        # 0x1400061b0
   14000468c:	jmp    QWORD PTR [rip+0x1b56]        # 0x1400061e8
   140004692:	int3   
   140004693:	int3   
   140004694:	sub    rsp,0x28
   140004698:	mov    rax,QWORD PTR [rcx]
   14000469b:	cmp    DWORD PTR [rax],0xe06d7363
   1400046a1:	jne    0x1400046bf
   1400046a3:	cmp    DWORD PTR [rax+0x18],0x4
   1400046a7:	jne    0x1400046bf
   1400046a9:	mov    ecx,DWORD PTR [rax+0x20]
   1400046ac:	lea    eax,[rcx-0x19930520]
   1400046b2:	cmp    eax,0x2
   1400046b5:	jbe    0x1400046c6
   1400046b7:	cmp    ecx,0x1994000
   1400046bd:	je     0x1400046c6
   1400046bf:	xor    eax,eax
   1400046c1:	add    rsp,0x28
   1400046c5:	ret    
   1400046c6:	call   0x140004b36
   1400046cb:	int3   
   1400046cc:	sub    rsp,0x28
   1400046d0:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140004694
   1400046d7:	call   0x140004b3c
   1400046dc:	xor    eax,eax
   1400046de:	add    rsp,0x28
   1400046e2:	ret    
   1400046e3:	int3   
   1400046e4:	jmp    QWORD PTR [rip+0x1b06]        # 0x1400061f0
   1400046ea:	jmp    QWORD PTR [rip+0x1b08]        # 0x1400061f8
   1400046f0:	xor    eax,eax
   1400046f2:	ret    
   1400046f3:	int3   
   1400046f4:	int3   
   1400046f5:	int3   
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	int3   
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004704:	xor    r9d,r9d
   140004707:	mov    r10,rdx
   14000470a:	add    r8,rcx
   14000470d:	movzx  eax,WORD PTR [r8+0x14]
   140004712:	movzx  r11d,WORD PTR [r8+0x6]
   140004717:	add    rax,0x18
   14000471b:	add    rax,r8
   14000471e:	test   r11d,r11d
   140004721:	je     0x140004741
   140004723:	mov    edx,DWORD PTR [rax+0xc]
   140004726:	cmp    r10,rdx
   140004729:	jb     0x140004735
   14000472b:	mov    ecx,DWORD PTR [rax+0x8]
   14000472e:	add    ecx,edx
   140004730:	cmp    r10,rcx
   140004733:	jb     0x140004743
   140004735:	inc    r9d
   140004738:	add    rax,0x28
   14000473c:	cmp    r9d,r11d
   14000473f:	jb     0x140004723
   140004741:	xor    eax,eax
   140004743:	ret    
   140004744:	int3   
   140004745:	int3   
   140004746:	int3   
   140004747:	int3   
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	mov    QWORD PTR [rsp+0x8],rbx
   140004755:	push   rdi
   140004756:	sub    rsp,0x20
   14000475a:	mov    rbx,rcx
   14000475d:	lea    rdi,[rip+0xffffffffffffb89c]        # 0x140000000
   140004764:	mov    rcx,rdi
   140004767:	call   0x1400047a0
   14000476c:	test   eax,eax
   14000476e:	je     0x140004792
   140004770:	sub    rbx,rdi
   140004773:	mov    rdx,rbx
   140004776:	mov    rcx,rdi
   140004779:	call   0x140004700
   14000477e:	test   rax,rax
   140004781:	je     0x140004792
   140004783:	mov    eax,DWORD PTR [rax+0x24]
   140004786:	shr    eax,0x1f
   140004789:	not    eax
   14000478b:	and    eax,0x1
   14000478e:	jmp    0x140004792
   140004790:	xor    eax,eax
   140004792:	mov    rbx,QWORD PTR [rsp+0x30]
   140004797:	add    rsp,0x20
   14000479b:	pop    rdi
   14000479c:	ret    
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	mov    rax,rcx
   1400047a3:	mov    ecx,0x5a4d
   1400047a8:	cmp    WORD PTR [rax],cx
   1400047ab:	je     0x1400047b0
   1400047ad:	xor    eax,eax
   1400047af:	ret    
   1400047b0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400047b4:	add    rcx,rax
   1400047b7:	xor    eax,eax
   1400047b9:	cmp    DWORD PTR [rcx],0x4550
   1400047bf:	jne    0x1400047cd
   1400047c1:	mov    edx,0x20b
   1400047c6:	cmp    WORD PTR [rcx+0x18],dx
   1400047ca:	sete   al
   1400047cd:	ret    
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400047d5:	push   rbp
   1400047d6:	mov    rbp,rsp
   1400047d9:	sub    rsp,0x20
   1400047dd:	mov    rax,QWORD PTR [rip+0x382c]        # 0x140008010
   1400047e4:	and    QWORD PTR [rbp+0x18],0x0
   1400047e9:	movabs rbx,0x2b992ddfa232
   1400047f3:	cmp    rax,rbx
   1400047f6:	jne    0x140004867
   1400047f8:	lea    rcx,[rbp+0x18]
   1400047fc:	call   QWORD PTR [rip+0x1866]        # 0x140006068
   140004802:	mov    rax,QWORD PTR [rbp+0x18]
   140004806:	mov    QWORD PTR [rbp+0x10],rax
   14000480a:	call   QWORD PTR [rip+0x1918]        # 0x140006128
   140004810:	mov    eax,eax
   140004812:	xor    QWORD PTR [rbp+0x10],rax
   140004816:	call   QWORD PTR [rip+0x1844]        # 0x140006060
   14000481c:	lea    rcx,[rbp+0x20]
   140004820:	mov    eax,eax
   140004822:	xor    QWORD PTR [rbp+0x10],rax
   140004826:	call   QWORD PTR [rip+0x1904]        # 0x140006130
   14000482c:	mov    eax,DWORD PTR [rbp+0x20]
   14000482f:	shl    rax,0x20
   140004833:	lea    rcx,[rbp+0x10]
   140004837:	xor    rax,QWORD PTR [rbp+0x20]
   14000483b:	xor    rax,QWORD PTR [rbp+0x10]
   14000483f:	xor    rax,rcx
   140004842:	movabs rcx,0xffffffffffff
   14000484c:	and    rax,rcx
   14000484f:	movabs rcx,0x2b992ddfa233
   140004859:	cmp    rax,rbx
   14000485c:	cmove  rax,rcx
   140004860:	mov    QWORD PTR [rip+0x37a9],rax        # 0x140008010
   140004867:	mov    rbx,QWORD PTR [rsp+0x48]
   14000486c:	not    rax
   14000486f:	mov    QWORD PTR [rip+0x37a2],rax        # 0x140008018
   140004876:	add    rsp,0x20
   14000487a:	pop    rbp
   14000487b:	ret    
   14000487c:	rex push rbx
   14000487e:	sub    rsp,0x20
   140004882:	cmp    QWORD PTR [rip+0x46be],0x0        # 0x140008f48
   14000488a:	jne    0x1400048c2
   14000488c:	mov    edx,0x8
   140004891:	lea    ecx,[rdx+0x18]
   140004894:	call   QWORD PTR [rip+0x19b6]        # 0x140006250
   14000489a:	mov    rcx,rax
   14000489d:	mov    rbx,rax
   1400048a0:	call   QWORD PTR [rip+0x1892]        # 0x140006138
   1400048a6:	mov    QWORD PTR [rip+0x469b],rax        # 0x140008f48
   1400048ad:	mov    QWORD PTR [rip+0x468c],rax        # 0x140008f40
   1400048b4:	test   rbx,rbx
   1400048b7:	jne    0x1400048be
   1400048b9:	lea    eax,[rbx+0x18]
   1400048bc:	jmp    0x1400048c4
   1400048be:	and    QWORD PTR [rbx],0x0
   1400048c2:	xor    eax,eax
   1400048c4:	add    rsp,0x20
   1400048c8:	pop    rbx
   1400048c9:	ret    
   1400048ca:	int3   
   1400048cb:	int3   
   1400048cc:	rex push rbx
   1400048ce:	sub    rsp,0x20
   1400048d2:	mov    rbx,rcx
   1400048d5:	mov    rcx,QWORD PTR [rip+0x466c]        # 0x140008f48
   1400048dc:	call   QWORD PTR [rip+0x183e]        # 0x140006120
   1400048e2:	mov    QWORD PTR [rsp+0x38],rax
   1400048e7:	cmp    rax,0xffffffffffffffff
   1400048eb:	jne    0x1400048f8
   1400048ed:	mov    rcx,rbx
   1400048f0:	call   QWORD PTR [rip+0x194a]        # 0x140006240
   1400048f6:	jmp    0x140004976
   1400048f8:	mov    ecx,0x8
   1400048fd:	call   0x140004b42
   140004902:	nop
   140004903:	mov    rcx,QWORD PTR [rip+0x463e]        # 0x140008f48
   14000490a:	call   QWORD PTR [rip+0x1810]        # 0x140006120
   140004910:	mov    QWORD PTR [rsp+0x38],rax
   140004915:	mov    rcx,QWORD PTR [rip+0x4624]        # 0x140008f40
   14000491c:	call   QWORD PTR [rip+0x17fe]        # 0x140006120
   140004922:	mov    QWORD PTR [rsp+0x40],rax
   140004927:	mov    rcx,rbx
   14000492a:	call   QWORD PTR [rip+0x1808]        # 0x140006138
   140004930:	mov    rcx,rax
   140004933:	lea    r8,[rsp+0x40]
   140004938:	lea    rdx,[rsp+0x38]
   14000493d:	call   0x140004b4e
   140004942:	mov    rbx,rax
   140004945:	mov    rcx,QWORD PTR [rsp+0x38]
   14000494a:	call   QWORD PTR [rip+0x17e8]        # 0x140006138
   140004950:	mov    QWORD PTR [rip+0x45f1],rax        # 0x140008f48
   140004957:	mov    rcx,QWORD PTR [rsp+0x40]
   14000495c:	call   QWORD PTR [rip+0x17d6]        # 0x140006138
   140004962:	mov    QWORD PTR [rip+0x45d7],rax        # 0x140008f40
   140004969:	mov    ecx,0x8
   14000496e:	call   0x140004b48
   140004973:	mov    rax,rbx
   140004976:	add    rsp,0x20
   14000497a:	pop    rbx
   14000497b:	ret    
   14000497c:	sub    rsp,0x28
   140004980:	call   0x1400048cc
   140004985:	neg    rax
   140004988:	sbb    eax,eax
   14000498a:	neg    eax
   14000498c:	dec    eax
   14000498e:	add    rsp,0x28
   140004992:	ret    
   140004993:	int3   
   140004994:	mov    QWORD PTR [rsp+0x8],rbx
   140004999:	push   rdi
   14000499a:	sub    rsp,0x20
   14000499e:	lea    rbx,[rip+0x2263]        # 0x140006c08
   1400049a5:	lea    rdi,[rip+0x225c]        # 0x140006c08
   1400049ac:	jmp    0x1400049bc
   1400049ae:	mov    rax,QWORD PTR [rbx]
   1400049b1:	test   rax,rax
   1400049b4:	je     0x1400049b8
   1400049b6:	call   rax
   1400049b8:	add    rbx,0x8
   1400049bc:	cmp    rbx,rdi
   1400049bf:	jb     0x1400049ae
   1400049c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049c6:	add    rsp,0x20
   1400049ca:	pop    rdi
   1400049cb:	ret    
   1400049cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400049d1:	push   rdi
   1400049d2:	sub    rsp,0x20
   1400049d6:	lea    rbx,[rip+0x223b]        # 0x140006c18
   1400049dd:	lea    rdi,[rip+0x2234]        # 0x140006c18
   1400049e4:	jmp    0x1400049f4
   1400049e6:	mov    rax,QWORD PTR [rbx]
   1400049e9:	test   rax,rax
   1400049ec:	je     0x1400049f0
   1400049ee:	call   rax
   1400049f0:	add    rbx,0x8
   1400049f4:	cmp    rbx,rdi
   1400049f7:	jb     0x1400049e6
   1400049f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049fe:	add    rsp,0x20
   140004a02:	pop    rdi
   140004a03:	ret    
   140004a04:	jmp    QWORD PTR [rip+0x182e]        # 0x140006238
   140004a0a:	jmp    QWORD PTR [rip+0x1888]        # 0x140006298
   140004a10:	jmp    QWORD PTR [rip+0x187a]        # 0x140006290
   140004a16:	int3   
   140004a17:	int3   
   140004a18:	rex push rbx
   140004a1a:	sub    rsp,0x20
   140004a1e:	mov    rbx,rcx
   140004a21:	call   QWORD PTR [rip+0x16f1]        # 0x140006118
   140004a27:	mov    ecx,0x1
   140004a2c:	mov    DWORD PTR [rip+0x3c5e],eax        # 0x140008690
   140004a32:	call   0x140004b54
   140004a37:	mov    rcx,rbx
   140004a3a:	call   0x140004b5a
   140004a3f:	cmp    DWORD PTR [rip+0x3c4a],0x0        # 0x140008690
   140004a46:	jne    0x140004a52
   140004a48:	mov    ecx,0x1
   140004a4d:	call   0x140004b54
   140004a52:	mov    ecx,0xc0000409
   140004a57:	add    rsp,0x20
   140004a5b:	pop    rbx
   140004a5c:	jmp    0x140004b60
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	mov    QWORD PTR [rsp+0x8],rcx
   140004a69:	sub    rsp,0x38
   140004a6d:	mov    ecx,0x17
   140004a72:	call   0x140005300
   140004a77:	test   eax,eax
   140004a79:	je     0x140004a82
   140004a7b:	mov    ecx,0x2
   140004a80:	int    0x29
   140004a82:	lea    rcx,[rip+0x3737]        # 0x1400081c0
   140004a89:	call   0x140004b66
   140004a8e:	mov    rax,QWORD PTR [rsp+0x38]
   140004a93:	mov    QWORD PTR [rip+0x381e],rax        # 0x1400082b8
   140004a9a:	lea    rax,[rsp+0x38]
   140004a9f:	add    rax,0x8
   140004aa3:	mov    QWORD PTR [rip+0x37ae],rax        # 0x140008258
   140004aaa:	mov    rax,QWORD PTR [rip+0x3807]        # 0x1400082b8
   140004ab1:	mov    QWORD PTR [rip+0x3678],rax        # 0x140008130
   140004ab8:	mov    rax,QWORD PTR [rsp+0x40]
   140004abd:	mov    QWORD PTR [rip+0x377c],rax        # 0x140008240
   140004ac4:	mov    DWORD PTR [rip+0x3652],0xc0000409        # 0x140008120
   140004ace:	mov    DWORD PTR [rip+0x364c],0x1        # 0x140008124
   140004ad8:	mov    DWORD PTR [rip+0x3656],0x1        # 0x140008138
   140004ae2:	mov    eax,0x8
   140004ae7:	imul   rax,rax,0x0
   140004aeb:	lea    rcx,[rip+0x364e]        # 0x140008140
   140004af2:	mov    QWORD PTR [rcx+rax*1],0x2
   140004afa:	mov    eax,0x8
   140004aff:	imul   rax,rax,0x0
   140004b03:	mov    rcx,QWORD PTR [rip+0x3506]        # 0x140008010
   140004b0a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140004b0f:	mov    eax,0x8
   140004b14:	imul   rax,rax,0x1
   140004b18:	mov    rcx,QWORD PTR [rip+0x34f9]        # 0x140008018
   140004b1f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140004b24:	lea    rcx,[rip+0x1bfd]        # 0x140006728
   140004b2b:	call   0x140004a18
   140004b30:	add    rsp,0x38
   140004b34:	ret    
   140004b35:	int3   
   140004b36:	jmp    QWORD PTR [rip+0x1734]        # 0x140006270
   140004b3c:	jmp    QWORD PTR [rip+0x1726]        # 0x140006268
   140004b42:	jmp    QWORD PTR [rip+0x1718]        # 0x140006260
   140004b48:	jmp    QWORD PTR [rip+0x170a]        # 0x140006258
   140004b4e:	jmp    QWORD PTR [rip+0x16f4]        # 0x140006248
   140004b54:	jmp    QWORD PTR [rip+0x1646]        # 0x1400061a0
   140004b5a:	jmp    QWORD PTR [rip+0x1630]        # 0x140006190
   140004b60:	jmp    QWORD PTR [rip+0x1632]        # 0x140006198
   140004b66:	jmp    QWORD PTR [rip+0x1734]        # 0x1400062a0
   140004b6c:	lea    rax,[rip+0x34dd]        # 0x140008050
   140004b73:	jmp    0x140004b78
   140004b78:	mov    QWORD PTR [rsp+0x8],rcx
   140004b7d:	mov    QWORD PTR [rsp+0x10],rdx
   140004b82:	mov    QWORD PTR [rsp+0x18],r8
   140004b87:	mov    QWORD PTR [rsp+0x20],r9
   140004b8c:	sub    rsp,0x68
   140004b90:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140004b96:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140004b9c:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140004ba2:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140004ba8:	mov    rdx,rax
   140004bab:	lea    rcx,[rip+0x23ba]        # 0x140006f6c
   140004bb2:	call   0x140005308
   140004bb7:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140004bbd:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140004bc3:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140004bc9:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140004bcf:	mov    rcx,QWORD PTR [rsp+0x70]
   140004bd4:	mov    rdx,QWORD PTR [rsp+0x78]
   140004bd9:	mov    r8,QWORD PTR [rsp+0x80]
   140004be1:	mov    r9,QWORD PTR [rsp+0x88]
   140004be9:	add    rsp,0x68
   140004bed:	jmp    0x140004bef
   140004bef:	jmp    rax
   140004bf1:	lea    rax,[rip+0x3450]        # 0x140008048
   140004bf8:	jmp    0x140004b78
   140004bfd:	lea    rax,[rip+0x343c]        # 0x140008040
   140004c04:	jmp    0x140004b78
   140004c09:	lea    rax,[rip+0x3428]        # 0x140008038
   140004c10:	jmp    0x140004b78
   140004c15:	int3   
   140004c16:	jmp    QWORD PTR [rip+0x1754]        # 0x140006370
   140004c1c:	jmp    QWORD PTR [rip+0x1726]        # 0x140006348
   140004c22:	jmp    QWORD PTR [rip+0x1718]        # 0x140006340
   140004c28:	jmp    QWORD PTR [rip+0x170a]        # 0x140006338
   140004c2e:	jmp    QWORD PTR [rip+0x16fc]        # 0x140006330
   140004c34:	jmp    QWORD PTR [rip+0x16ee]        # 0x140006328
   140004c3a:	jmp    QWORD PTR [rip+0x16e0]        # 0x140006320
   140004c40:	jmp    QWORD PTR [rip+0x16d2]        # 0x140006318
   140004c46:	jmp    QWORD PTR [rip+0x16c4]        # 0x140006310
   140004c4c:	jmp    QWORD PTR [rip+0x16b6]        # 0x140006308
   140004c52:	jmp    QWORD PTR [rip+0x16a8]        # 0x140006300
   140004c58:	jmp    QWORD PTR [rip+0x1702]        # 0x140006360
   140004c5e:	jmp    QWORD PTR [rip+0x168c]        # 0x1400062f0
   140004c64:	jmp    QWORD PTR [rip+0x167e]        # 0x1400062e8
   140004c6a:	jmp    QWORD PTR [rip+0x1670]        # 0x1400062e0
   140004c70:	jmp    QWORD PTR [rip+0x1662]        # 0x1400062d8
   140004c76:	jmp    QWORD PTR [rip+0x1654]        # 0x1400062d0
   140004c7c:	jmp    QWORD PTR [rip+0x1646]        # 0x1400062c8
   140004c82:	jmp    QWORD PTR [rip+0x1638]        # 0x1400062c0
   140004c88:	jmp    QWORD PTR [rip+0x162a]        # 0x1400062b8
   140004c8e:	jmp    QWORD PTR [rip+0x161c]        # 0x1400062b0
   140004c94:	jmp    QWORD PTR [rip+0x165e]        # 0x1400062f8
   140004c9a:	jmp    QWORD PTR [rip+0x16b0]        # 0x140006350
   140004ca0:	jmp    QWORD PTR [rip+0x16b2]        # 0x140006358
   140004ca6:	int3   
   140004ca7:	int3   
   140004ca8:	sub    rsp,0x28
   140004cac:	call   QWORD PTR [rip+0x148e]        # 0x140006140
   140004cb2:	mov    ecx,eax
   140004cb4:	test   eax,eax
   140004cb6:	je     0x140004cc7
   140004cb8:	movzx  eax,ax
   140004cbb:	or     eax,0x80070000
   140004cc0:	test   ecx,ecx
   140004cc2:	cmovle eax,ecx
   140004cc5:	jmp    0x140004ccc
   140004cc7:	mov    eax,0x80004005
   140004ccc:	add    rsp,0x28
   140004cd0:	ret    
   140004cd1:	int3   
   140004cd2:	int3   
   140004cd3:	int3   
   140004cd4:	sub    rsp,0x28
   140004cd8:	test   rcx,rcx
   140004cdb:	je     0x140004ce3
   140004cdd:	mov    rax,QWORD PTR [rcx]
   140004ce0:	call   QWORD PTR [rax+0x10]
   140004ce3:	add    rsp,0x28
   140004ce7:	ret    
   140004ce8:	and    DWORD PTR [rcx],0x0
   140004ceb:	mov    rax,rcx
   140004cee:	and    DWORD PTR [rcx+0x4],0x0
   140004cf2:	ret    
   140004cf3:	int3   
   140004cf4:	ret    0x0
   140004cf7:	int3   
   140004cf8:	mov    QWORD PTR [rsp+0x8],rbx
   140004cfd:	push   rdi
   140004cfe:	sub    rsp,0x20
   140004d02:	mov    rbx,rcx
   140004d05:	call   QWORD PTR [rip+0x141d]        # 0x140006128
   140004d0b:	mov    r8d,0x1
   140004d11:	mov    rcx,rbx
   140004d14:	mov    edx,eax
   140004d16:	mov    edi,eax
   140004d18:	call   0x140004f1c
   140004d1d:	test   eax,eax
   140004d1f:	jne    0x140004d2e
   140004d21:	mov    r8d,edi
   140004d24:	xor    edx,edx
   140004d26:	mov    rcx,rbx
   140004d29:	call   0x140004e00
   140004d2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d33:	add    rsp,0x20
   140004d37:	pop    rdi
   140004d38:	ret    
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	mov    r9d,edx
   140004d3f:	movzx  r11d,dx
   140004d43:	sar    r9d,0x10
   140004d47:	mov    r10,rcx
   140004d4a:	and    r9d,0x3fff
   140004d51:	mov    eax,edx
   140004d53:	add    r9d,r8d
   140004d56:	mov    r8d,edx
   140004d59:	shr    r8d,0x1e
   140004d5d:	and    r8d,0x1
   140004d61:	shl    r8d,0xe
   140004d65:	or     r8d,r9d
   140004d68:	shl    r8d,0x10
   140004d6c:	or     r8d,r11d
   140004d6f:	lock cmpxchg DWORD PTR [rcx],r8d
   140004d74:	je     0x140004d95
   140004d76:	mov    ecx,eax
   140004d78:	mov    edx,eax
   140004d7a:	shr    ecx,0x1e
   140004d7d:	and    ecx,0x1
   140004d80:	shl    ecx,0xe
   140004d83:	or     ecx,r9d
   140004d86:	shl    ecx,0x10
   140004d89:	or     ecx,r11d
   140004d8c:	lock cmpxchg DWORD PTR [r10],ecx
   140004d91:	cmp    eax,edx
   140004d93:	jne    0x140004d76
   140004d95:	ret    
   140004d96:	int3   
   140004d97:	int3   
   140004d98:	mov    eax,DWORD PTR [rcx]
   140004d9a:	and    eax,0x3fff0000
   140004d9f:	cmp    eax,0x10000
   140004da4:	jne    0x140004daa
   140004da6:	and    DWORD PTR [rcx+0x4],0x0
   140004daa:	mov    edx,DWORD PTR [rcx]
   140004dac:	or     r8d,0xffffffff
   140004db0:	jmp    0x140004d3c
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	sub    rsp,0x28
   140004dbc:	call   0x1400052a8
   140004dc1:	xor    ecx,ecx
   140004dc3:	cmp    eax,0x1
   140004dc6:	mov    eax,0x1
   140004dcb:	sete   cl
   140004dce:	mov    DWORD PTR [rip+0x38d0],ecx        # 0x1400086a4
   140004dd4:	add    rsp,0x28
   140004dd8:	ret    
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	rex push rbx
   140004dde:	sub    rsp,0x20
   140004de2:	mov    rbx,rcx
   140004de5:	call   QWORD PTR [rip+0x131d]        # 0x140006108
   140004deb:	test   eax,eax
   140004ded:	jne    0x140004dfa
   140004def:	mov    ecx,DWORD PTR [rbx]
   140004df1:	call   QWORD PTR [rip+0x1261]        # 0x140006058
   140004df7:	xor    DWORD PTR [rbx],0x1
   140004dfa:	add    rsp,0x20
   140004dfe:	pop    rbx
   140004dff:	ret    
   140004e00:	mov    QWORD PTR [rsp+0x8],rbx
   140004e05:	mov    QWORD PTR [rsp+0x18],rbp
   140004e0a:	push   rsi
   140004e0b:	push   rdi
   140004e0c:	push   r14
   140004e0e:	sub    rsp,0x20
   140004e12:	and    DWORD PTR [rsp+0x48],0x0
   140004e17:	mov    rdi,rcx
   140004e1a:	movsxd r14,DWORD PTR [rip+0x3883]        # 0x1400086a4
   140004e21:	mov    ebp,edx
   140004e23:	mov    eax,0x4ec4ec4f
   140004e28:	mov    ecx,r8d
   140004e2b:	imul   r8d
   140004e2e:	mov    ebx,0x64
   140004e33:	mov    esi,r8d
   140004e36:	sar    edx,0x2
   140004e39:	mov    eax,edx
   140004e3b:	shr    eax,0x1f
   140004e3e:	add    edx,eax
   140004e40:	imul   eax,edx,0xd
   140004e43:	sub    ecx,eax
   140004e45:	movsxd rax,ecx
   140004e48:	lea    rcx,[rip+0x1911]        # 0x140006760
   140004e4f:	movsd  xmm0,QWORD PTR [rcx+rax*8]
   140004e54:	mov    ecx,0x2710
   140004e59:	mulsd  xmm0,QWORD PTR [rip+0x1967]        # 0x1400067c8
   140004e61:	cvttsd2si eax,xmm0
   140004e65:	cmp    eax,ecx
   140004e67:	cmovge eax,ecx
   140004e6a:	cmp    eax,ebx
   140004e6c:	cmovge ebx,eax
   140004e6f:	mov    edx,esi
   140004e71:	mov    rcx,rdi
   140004e74:	test   ebp,ebp
   140004e76:	je     0x140004e7f
   140004e78:	call   0x140004eec
   140004e7d:	jmp    0x140004e8a
   140004e7f:	mov    r8d,0x1
   140004e85:	call   0x140004f1c
   140004e8a:	test   eax,eax
   140004e8c:	jne    0x140004ed7
   140004e8e:	test   r14,r14
   140004e91:	je     0x140004e9f
   140004e93:	lea    rcx,[rsp+0x48]
   140004e98:	call   0x140004ddc
   140004e9d:	jmp    0x140004e6f
   140004e9f:	mov    eax,ebx
   140004ea1:	test   ebp,ebp
   140004ea3:	je     0x140004ead
   140004ea5:	test   DWORD PTR [rdi],0x7fff0000
   140004eab:	jmp    0x140004eb3
   140004ead:	test   DWORD PTR [rdi],0xbfffffff
   140004eb3:	je     0x140004e6f
   140004eb5:	sub    eax,0x1
   140004eb8:	jns    0x140004ea1
   140004eba:	lea    rcx,[rsp+0x48]
   140004ebf:	call   0x140004ddc
   140004ec4:	mov    eax,ebx
   140004ec6:	mov    ebx,0x64
   140004ecb:	cdq    
   140004ecc:	sub    eax,edx
   140004ece:	sar    eax,1
   140004ed0:	cmp    eax,ebx
   140004ed2:	cmovge ebx,eax
   140004ed5:	jmp    0x140004e9f
   140004ed7:	mov    rbx,QWORD PTR [rsp+0x40]
   140004edc:	mov    rbp,QWORD PTR [rsp+0x50]
   140004ee1:	add    rsp,0x20
   140004ee5:	pop    r14
   140004ee7:	pop    rdi
   140004ee8:	pop    rsi
   140004ee9:	ret    
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	mov    eax,DWORD PTR [rcx]
   140004eee:	xor    r9d,r9d
   140004ef1:	mov    r8,rcx
   140004ef4:	cmp    DWORD PTR [rcx+0x4],r9d
   140004ef8:	jne    0x140004f04
   140004efa:	test   eax,0x3fff0000
   140004eff:	je     0x140004f09
   140004f01:	xor    eax,eax
   140004f03:	ret    
   140004f04:	cmp    DWORD PTR [rcx+0x4],edx
   140004f07:	jmp    0x140004eff
   140004f09:	lea    ecx,[rax+0x1]
   140004f0c:	lock cmpxchg DWORD PTR [r8],ecx
   140004f11:	sete   r9b
   140004f15:	mov    eax,r9d
   140004f18:	ret    
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	sub    rsp,0x28
   140004f20:	mov    r9,rcx
   140004f23:	mov    eax,DWORD PTR [rcx]
   140004f25:	cmp    DWORD PTR [rcx+0x4],edx
   140004f28:	jne    0x140004f3e
   140004f2a:	mov    r8d,0x1
   140004f30:	mov    edx,eax
   140004f32:	call   0x140004d3c
   140004f37:	mov    eax,0x1
   140004f3c:	jmp    0x140004f8b
   140004f3e:	cmp    DWORD PTR [rcx+0x4],0x0
   140004f42:	jne    0x140004f5d
   140004f44:	test   eax,0xbfffffff
   140004f49:	jne    0x140004f5d
   140004f4b:	mov    ecx,0x10000
   140004f50:	lock cmpxchg DWORD PTR [r9],ecx
   140004f55:	jne    0x140004f5d
   140004f57:	mov    DWORD PTR [r9+0x4],edx
   140004f5b:	jmp    0x140004f37
   140004f5d:	test   r8d,r8d
   140004f60:	je     0x140004f89
   140004f62:	mov    r8d,0x40000000
   140004f68:	test   r8d,eax
   140004f6b:	jne    0x140004f89
   140004f6d:	mov    ecx,eax
   140004f6f:	or     ecx,r8d
   140004f72:	lock cmpxchg DWORD PTR [r9],ecx
   140004f77:	je     0x140004f89
   140004f79:	mov    ecx,eax
   140004f7b:	mov    edx,eax
   140004f7d:	or     ecx,r8d
   140004f80:	lock cmpxchg DWORD PTR [r9],ecx
   140004f85:	cmp    eax,edx
   140004f87:	jne    0x140004f79
   140004f89:	xor    eax,eax
   140004f8b:	add    rsp,0x28
   140004f8f:	ret    
   140004f90:	rex push rbx
   140004f92:	sub    rsp,0x20
   140004f96:	mov    rax,QWORD PTR [rip+0x3713]        # 0x1400086b0
   140004f9d:	mov    rbx,rcx
   140004fa0:	test   rax,rax
   140004fa3:	jne    0x140004fb1
   140004fa5:	call   0x1400055a0
   140004faa:	mov    QWORD PTR [rip+0x36ff],rax        # 0x1400086b0
   140004fb1:	mov    r8,rbx
   140004fb4:	xor    edx,edx
   140004fb6:	mov    rcx,rax
   140004fb9:	add    rsp,0x20
   140004fbd:	pop    rbx
   140004fbe:	rex.W jmp QWORD PTR [rip+0x113b]        # 0x140006100
   140004fc5:	int3   
   140004fc6:	int3   
   140004fc7:	int3   
   140004fc8:	rex push rbx
   140004fca:	sub    rsp,0x20
   140004fce:	mov    rax,QWORD PTR [rip+0x36db]        # 0x1400086b0
   140004fd5:	mov    rbx,rcx
   140004fd8:	test   rax,rax
   140004fdb:	jne    0x140004fe9
   140004fdd:	call   0x1400055a0
   140004fe2:	mov    QWORD PTR [rip+0x36c7],rax        # 0x1400086b0
   140004fe9:	mov    r8,rbx
   140004fec:	mov    edx,0x8
   140004ff1:	mov    rcx,rax
   140004ff4:	add    rsp,0x20
   140004ff8:	pop    rbx
   140004ff9:	rex.W jmp QWORD PTR [rip+0x1100]        # 0x140006100
   140005000:	rex push rbx
   140005002:	sub    rsp,0x20
   140005006:	mov    rax,QWORD PTR [rip+0x36a3]        # 0x1400086b0
   14000500d:	mov    rbx,rcx
   140005010:	test   rax,rax
   140005013:	jne    0x140005021
   140005015:	call   0x1400055a0
   14000501a:	mov    QWORD PTR [rip+0x368f],rax        # 0x1400086b0
   140005021:	test   rbx,rbx
   140005024:	je     0x140005034
   140005026:	mov    r8,rbx
   140005029:	xor    edx,edx
   14000502b:	mov    rcx,rax
   14000502e:	call   QWORD PTR [rip+0x10c4]        # 0x1400060f8
   140005034:	add    rsp,0x20
   140005038:	pop    rbx
   140005039:	ret    
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	mov    QWORD PTR [rsp+0x8],rbx
   140005041:	mov    QWORD PTR [rsp+0x10],rdi
   140005046:	xor    edi,edi
   140005048:	lea    rax,[rdx-0x1]
   14000504c:	cmp    rax,0x7ffffffe
   140005052:	mov    r10,rdx
   140005055:	mov    r9d,edi
   140005058:	mov    edx,0x80070057
   14000505d:	cmova  r9d,edx
   140005061:	mov    rbx,r8
   140005064:	mov    r11,rcx
   140005067:	test   r9d,r9d
   14000506a:	js     0x140005096
   14000506c:	mov    rax,r10
   14000506f:	mov    r9d,edi
   140005072:	test   r10,r10
   140005075:	je     0x140005093
   140005077:	cmp    WORD PTR [rcx],di
   14000507a:	je     0x140005086
   14000507c:	add    rcx,0x2
   140005080:	sub    rax,0x1
   140005084:	jne    0x140005077
   140005086:	test   rax,rax
   140005089:	je     0x140005093
   14000508b:	mov    r8,r10
   14000508e:	sub    r8,rax
   140005091:	jmp    0x140005099
   140005093:	mov    r9d,edx
   140005096:	mov    r8,rdi
   140005099:	test   r9d,r9d
   14000509c:	js     0x1400050f0
   14000509e:	mov    rdx,r10
   1400050a1:	lea    rcx,[r11+r8*2]
   1400050a5:	mov    r9d,edi
   1400050a8:	sub    rdx,r8
   1400050ab:	je     0x1400050e3
   1400050ad:	mov    rax,rdx
   1400050b0:	sub    rax,r10
   1400050b3:	lea    r10,[r8+0x7ffffffe]
   1400050ba:	add    r10,rax
   1400050bd:	sub    rbx,rcx
   1400050c0:	test   r10,r10
   1400050c3:	je     0x1400050de
   1400050c5:	movzx  eax,WORD PTR [rbx+rcx*1]
   1400050c9:	test   ax,ax
   1400050cc:	je     0x1400050de
   1400050ce:	mov    WORD PTR [rcx],ax
   1400050d1:	dec    r10
   1400050d4:	add    rcx,0x2
   1400050d8:	sub    rdx,0x1
   1400050dc:	jne    0x1400050c0
   1400050de:	test   rdx,rdx
   1400050e1:	jne    0x1400050ed
   1400050e3:	sub    rcx,0x2
   1400050e7:	mov    r9d,0x8007007a
   1400050ed:	mov    WORD PTR [rcx],di
   1400050f0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400050f5:	mov    eax,r9d
   1400050f8:	mov    rdi,QWORD PTR [rsp+0x10]
   1400050fd:	ret    
   1400050fe:	int3   
   1400050ff:	int3   
   140005100:	mov    QWORD PTR [rsp+0x8],rbx
   140005105:	push   rbp
   140005106:	lea    rbp,[rsp-0x260]
   14000510e:	sub    rsp,0x360
   140005115:	mov    rax,QWORD PTR [rip+0x2ef4]        # 0x140008010
   14000511c:	xor    rax,rsp
   14000511f:	mov    QWORD PTR [rbp+0x250],rax
   140005126:	mov    ebx,0x114
   14000512b:	lea    rcx,[rsp+0x20]
   140005130:	mov    r8d,ebx
   140005133:	xor    edx,edx
   140005135:	call   0x140004686
   14000513a:	lea    rcx,[rsp+0x20]
   14000513f:	mov    DWORD PTR [rsp+0x20],ebx
   140005143:	call   QWORD PTR [rip+0xf9f]        # 0x1400060e8
   140005149:	test   eax,eax
   14000514b:	je     0x140005225
   140005151:	cmp    DWORD PTR [rsp+0x30],0x2
   140005156:	jne    0x140005225
   14000515c:	cmp    DWORD PTR [rsp+0x24],0x6
   140005161:	jb     0x140005225
   140005167:	xor    edx,edx
   140005169:	lea    rcx,[rbp+0x40]
   14000516d:	mov    r8d,0x20a
   140005173:	call   0x140004686
   140005178:	lea    edx,[rbx-0x10]
   14000517b:	lea    rcx,[rbp+0x40]
   14000517f:	call   QWORD PTR [rip+0xf6b]        # 0x1400060f0
   140005185:	test   eax,eax
   140005187:	je     0x140005225
   14000518d:	lea    rcx,[rbp+0x40]
   140005191:	call   QWORD PTR [rip+0xef1]        # 0x140006088
   140005197:	cmp    eax,0x1
   14000519a:	jl     0x140005225
   1400051a0:	lea    rcx,[rbp+0x40]
   1400051a4:	call   QWORD PTR [rip+0xede]        # 0x140006088
   1400051aa:	movsxd rcx,eax
   1400051ad:	mov    ebx,0x105
   1400051b2:	cmp    WORD PTR [rbp+rcx*2+0x3e],0x5c
   1400051b8:	je     0x1400051d0
   1400051ba:	lea    r8,[rip+0x160f]        # 0x1400067d0
   1400051c1:	mov    edx,ebx
   1400051c3:	lea    rcx,[rbp+0x40]
   1400051c7:	call   0x14000503c
   1400051cc:	test   eax,eax
   1400051ce:	jne    0x140005225
   1400051d0:	lea    r8,[rip+0x1601]        # 0x1400067d8
   1400051d7:	mov    rdx,rbx
   1400051da:	lea    rcx,[rbp+0x40]
   1400051de:	call   0x14000503c
   1400051e3:	test   eax,eax
   1400051e5:	jne    0x140005225
   1400051e7:	lea    rcx,[rbp+0x40]
   1400051eb:	call   QWORD PTR [rip+0xee7]        # 0x1400060d8
   1400051f1:	mov    rbx,rax
   1400051f4:	test   rax,rax
   1400051f7:	je     0x140005225
   1400051f9:	lea    rdx,[rip+0x15f8]        # 0x1400067f8
   140005200:	mov    rcx,rax
   140005203:	call   QWORD PTR [rip+0xe6f]        # 0x140006078
   140005209:	test   rax,rax
   14000520c:	je     0x14000521c
   14000520e:	xor    r9d,r9d
   140005211:	xor    r8d,r8d
   140005214:	xor    ecx,ecx
   140005216:	lea    edx,[r9+0x1]
   14000521a:	call   rax
   14000521c:	mov    rcx,rbx
   14000521f:	call   QWORD PTR [rip+0xebb]        # 0x1400060e0
   140005225:	mov    rcx,QWORD PTR [rbp+0x250]
   14000522c:	xor    rcx,rsp
   14000522f:	call   0x140004660
   140005234:	mov    rbx,QWORD PTR [rsp+0x370]
   14000523c:	add    rsp,0x360
   140005243:	pop    rbp
   140005244:	ret    
   140005245:	int3   
   140005246:	int3   
   140005247:	int3   
   140005248:	rex push rbx
   14000524a:	sub    rsp,0x30
   14000524e:	xor    ebx,ebx
   140005250:	cmp    QWORD PTR [rip+0x3461],rbx        # 0x1400086b8
   140005257:	je     0x14000529d
   140005259:	lea    rcx,[rip+0x3460]        # 0x1400086c0
   140005260:	call   0x140004cf8
   140005265:	nop
   140005266:	mov    rcx,QWORD PTR [rip+0x344b]        # 0x1400086b8
   14000526d:	test   rcx,rcx
   140005270:	je     0x140005289
   140005272:	xor    edx,edx
   140005274:	call   QWORD PTR [rip+0xda6]        # 0x140006020
   14000527a:	test   eax,eax
   14000527c:	jne    0x140005289
   14000527e:	call   0x140004ca8
   140005283:	mov    ebx,eax
   140005285:	mov    DWORD PTR [rsp+0x20],eax
   140005289:	and    QWORD PTR [rip+0x3427],0x0        # 0x1400086b8
   140005291:	lea    rcx,[rip+0x3428]        # 0x1400086c0
   140005298:	call   0x140004d98
   14000529d:	mov    eax,ebx
   14000529f:	add    rsp,0x30
   1400052a3:	pop    rbx
   1400052a4:	ret    
   1400052a5:	int3   
   1400052a6:	int3   
   1400052a7:	int3   
   1400052a8:	rex push rbx
   1400052aa:	sub    rsp,0x20
   1400052ae:	mov    ebx,0x1
   1400052b3:	call   QWORD PTR [rip+0xdf7]        # 0x1400060b0
   1400052b9:	mov    rcx,rax
   1400052bc:	lea    r8,[rsp+0x38]
   1400052c1:	lea    rdx,[rsp+0x30]
   1400052c6:	call   QWORD PTR [rip+0xe04]        # 0x1400060d0
   1400052cc:	test   eax,eax
   1400052ce:	je     0x1400052f7
   1400052d0:	mov    rax,QWORD PTR [rsp+0x30]
   1400052d5:	cmp    rax,rbx
   1400052d8:	je     0x1400052f7
   1400052da:	xor    ebx,ebx
   1400052dc:	and    rax,QWORD PTR [rsp+0x38]
   1400052e1:	je     0x1400052f2
   1400052e3:	test   al,0x1
   1400052e5:	je     0x1400052e9
   1400052e7:	inc    ebx
   1400052e9:	shr    rax,1
   1400052ec:	jne    0x1400052e3
   1400052ee:	test   ebx,ebx
   1400052f0:	jne    0x1400052f7
   1400052f2:	mov    ebx,0x1
   1400052f7:	mov    eax,ebx
   1400052f9:	add    rsp,0x20
   1400052fd:	pop    rbx
   1400052fe:	ret    
   1400052ff:	int3   
   140005300:	jmp    QWORD PTR [rip+0xe0a]        # 0x140006110
   140005306:	int3   
   140005307:	int3   
   140005308:	rex push rbp
   14000530a:	push   rbx
   14000530b:	push   rsi
   14000530c:	push   rdi
   14000530d:	push   r12
   14000530f:	push   r13
   140005311:	push   r14
   140005313:	push   r15
   140005315:	mov    rbp,rsp
   140005318:	sub    rsp,0x78
   14000531c:	mov    eax,DWORD PTR [rcx+0x4]
   14000531f:	mov    r9d,DWORD PTR [rcx]
   140005322:	mov    r15d,DWORD PTR [rcx+0x8]
   140005326:	mov    r10d,DWORD PTR [rcx+0xc]
   14000532a:	and    DWORD PTR [rbp-0x38],0x0
   14000532e:	mov    r14,rcx
   140005331:	mov    r13d,DWORD PTR [r14+0x14]
   140005335:	mov    ecx,DWORD PTR [rcx+0x10]
   140005338:	mov    r12,rdx
   14000533b:	lea    rdx,[rip+0xffffffffffffacbe]        # 0x140000000
   140005342:	and    r9d,0x1
   140005346:	mov    DWORD PTR [rbp-0x58],0x48
   14000534d:	add    rax,rdx
   140005350:	add    r13,rdx
   140005353:	add    r15,rdx
   140005356:	add    r10,rdx
   140005359:	add    rcx,rdx
   14000535c:	mov    edx,DWORD PTR [r14+0x1c]
   140005360:	mov    QWORD PTR [rbp-0x40],rax
   140005364:	xor    eax,eax
   140005366:	mov    QWORD PTR [rbp-0x50],r14
   14000536a:	and    QWORD PTR [rbp-0x28],rax
   14000536e:	and    QWORD PTR [rbp-0x20],rax
   140005372:	and    DWORD PTR [rbp-0x18],eax
   140005375:	mov    DWORD PTR [rbp+0x48],edx
   140005378:	mov    QWORD PTR [rbp-0x48],r12
   14000537c:	mov    QWORD PTR [rbp-0x30],rax
   140005380:	test   r9b,r9b
   140005383:	jne    0x1400053a9
   140005385:	xor    edx,edx
   140005387:	lea    rax,[rbp-0x58]
   14000538b:	lea    r9,[rbp+0x50]
   14000538f:	lea    r8d,[rdx+0x1]
   140005393:	mov    ecx,0xc06d0057
   140005398:	mov    QWORD PTR [rbp+0x50],rax
   14000539c:	call   QWORD PTR [rip+0xd26]        # 0x1400060c8
   1400053a2:	xor    eax,eax
   1400053a4:	jmp    0x14000558e
   1400053a9:	mov    rdi,QWORD PTR [r15]
   1400053ac:	movabs rax,0x8000000000000000
   1400053b6:	mov    rsi,r12
   1400053b9:	sub    rsi,r10
   1400053bc:	sar    rsi,0x3
   1400053c0:	mov    esi,esi
   1400053c2:	test   QWORD PTR [rcx+rsi*8],rax
   1400053c6:	mov    eax,0x0
   1400053cb:	sete   al
   1400053ce:	mov    DWORD PTR [rbp-0x38],eax
   1400053d1:	test   eax,eax
   1400053d3:	je     0x1400053e8
   1400053d5:	mov    eax,DWORD PTR [rcx+rsi*8]
   1400053d8:	lea    rcx,[rip+0xffffffffffffac23]        # 0x140000002
   1400053df:	add    rax,rcx
   1400053e2:	mov    QWORD PTR [rbp-0x30],rax
   1400053e6:	jmp    0x1400053ef
   1400053e8:	movzx  eax,WORD PTR [rcx+rsi*8]
   1400053ec:	mov    DWORD PTR [rbp-0x30],eax
   1400053ef:	mov    rax,QWORD PTR [rip+0x3b2a]        # 0x140008f20
   1400053f6:	xor    ebx,ebx
   1400053f8:	test   rax,rax
   1400053fb:	je     0x140005418
   1400053fd:	lea    rdx,[rbp-0x58]
   140005401:	xor    ecx,ecx
   140005403:	call   rax
   140005405:	mov    rbx,rax
   140005408:	test   rax,rax
   14000540b:	jne    0x140005568
   140005411:	mov    rax,QWORD PTR [rip+0x3b08]        # 0x140008f20
   140005418:	test   rdi,rdi
   14000541b:	jne    0x1400054b5
   140005421:	test   rax,rax
   140005424:	je     0x140005437
   140005426:	lea    rdx,[rbp-0x58]
   14000542a:	lea    ecx,[rdi+0x1]
   14000542d:	call   rax
   14000542f:	mov    rdi,rax
   140005432:	test   rax,rax
   140005435:	jne    0x14000549a
   140005437:	mov    rcx,QWORD PTR [rbp-0x40]
   14000543b:	xor    r8d,r8d
   14000543e:	xor    edx,edx
   140005440:	call   QWORD PTR [rip+0xd3a]        # 0x140006180
   140005446:	mov    rdi,rax
   140005449:	test   rax,rax
   14000544c:	jne    0x14000549a
   14000544e:	call   QWORD PTR [rip+0xcec]        # 0x140006140
   140005454:	mov    DWORD PTR [rbp-0x18],eax
   140005457:	mov    rax,QWORD PTR [rip+0x3aca]        # 0x140008f28
   14000545e:	test   rax,rax
   140005461:	je     0x140005474
   140005463:	lea    rdx,[rbp-0x58]
   140005467:	lea    ecx,[rdi+0x3]
   14000546a:	call   rax
   14000546c:	mov    rdi,rax
   14000546f:	test   rax,rax
   140005472:	jne    0x14000549a
   140005474:	xor    edx,edx
   140005476:	lea    rax,[rbp-0x58]
   14000547a:	lea    r9,[rbp+0x58]
   14000547e:	lea    r8d,[rdx+0x1]
   140005482:	mov    ecx,0xc06d007e
   140005487:	mov    QWORD PTR [rbp+0x58],rax
   14000548b:	call   QWORD PTR [rip+0xc37]        # 0x1400060c8
   140005491:	mov    rax,QWORD PTR [rbp-0x20]
   140005495:	jmp    0x14000558e
   14000549a:	mov    rax,rdi
   14000549d:	xchg   QWORD PTR [r15],rax
   1400054a0:	cmp    rax,rdi
   1400054a3:	jne    0x1400054ae
   1400054a5:	mov    rcx,rdi
   1400054a8:	call   QWORD PTR [rip+0xc32]        # 0x1400060e0
   1400054ae:	mov    rax,QWORD PTR [rip+0x3a6b]        # 0x140008f20
   1400054b5:	mov    QWORD PTR [rbp-0x28],rdi
   1400054b9:	test   rax,rax
   1400054bc:	je     0x1400054cc
   1400054be:	lea    rdx,[rbp-0x58]
   1400054c2:	mov    ecx,0x2
   1400054c7:	call   rax
   1400054c9:	mov    rbx,rax
   1400054cc:	test   rbx,rbx
   1400054cf:	jne    0x140005564
   1400054d5:	cmp    DWORD PTR [r14+0x14],ebx
   1400054d9:	je     0x140005508
   1400054db:	cmp    DWORD PTR [r14+0x1c],ebx
   1400054df:	je     0x140005508
   1400054e1:	movsxd rax,DWORD PTR [rdi+0x3c]
   1400054e5:	cmp    DWORD PTR [rax+rdi*1],0x4550
   1400054ec:	jne    0x140005508
   1400054ee:	mov    ecx,DWORD PTR [rbp+0x48]
   1400054f1:	cmp    DWORD PTR [rax+rdi*1+0x8],ecx
   1400054f5:	jne    0x140005508
   1400054f7:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   1400054fc:	jne    0x140005508
   1400054fe:	mov    rbx,QWORD PTR [r13+rsi*8+0x0]
   140005503:	test   rbx,rbx
   140005506:	jne    0x140005564
   140005508:	mov    rdx,QWORD PTR [rbp-0x30]
   14000550c:	mov    rcx,rdi
   14000550f:	call   QWORD PTR [rip+0xb63]        # 0x140006078
   140005515:	mov    rbx,rax
   140005518:	test   rax,rax
   14000551b:	jne    0x140005564
   14000551d:	call   QWORD PTR [rip+0xc1d]        # 0x140006140
   140005523:	mov    DWORD PTR [rbp-0x18],eax
   140005526:	mov    rax,QWORD PTR [rip+0x39fb]        # 0x140008f28
   14000552d:	test   rax,rax
   140005530:	je     0x140005543
   140005532:	lea    rdx,[rbp-0x58]
   140005536:	lea    ecx,[rbx+0x4]
   140005539:	call   rax
   14000553b:	mov    rbx,rax
   14000553e:	test   rax,rax
   140005541:	jne    0x140005564
   140005543:	xor    edx,edx
   140005545:	lea    rax,[rbp-0x58]
   140005549:	lea    r9,[rbp+0x60]
   14000554d:	lea    r8d,[rdx+0x1]
   140005551:	mov    ecx,0xc06d007f
   140005556:	mov    QWORD PTR [rbp+0x60],rax
   14000555a:	call   QWORD PTR [rip+0xb68]        # 0x1400060c8
   140005560:	mov    rbx,QWORD PTR [rbp-0x20]
   140005564:	mov    QWORD PTR [r12],rbx
   140005568:	mov    rax,QWORD PTR [rip+0x39b1]        # 0x140008f20
   14000556f:	test   rax,rax
   140005572:	je     0x14000558b
   140005574:	and    DWORD PTR [rbp-0x18],0x0
   140005578:	lea    rdx,[rbp-0x58]
   14000557c:	mov    ecx,0x5
   140005581:	mov    QWORD PTR [rbp-0x28],rdi
   140005585:	mov    QWORD PTR [rbp-0x20],rbx
   140005589:	call   rax
   14000558b:	mov    rax,rbx
   14000558e:	add    rsp,0x78
   140005592:	pop    r15
   140005594:	pop    r14
   140005596:	pop    r13
   140005598:	pop    r12
   14000559a:	pop    rdi
   14000559b:	pop    rsi
   14000559c:	pop    rbx
   14000559d:	pop    rbp
   14000559e:	ret    
   14000559f:	int3   
   1400055a0:	jmp    QWORD PTR [rip+0xdc2]        # 0x140006368
   1400055a6:	int3   
   1400055a7:	int3   
   1400055a8:	int3   
   1400055a9:	int3   
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	int3   
   1400055ad:	int3   
   1400055ae:	int3   
   1400055af:	int3   
   1400055b0:	rex push rbp
   1400055b2:	sub    rsp,0x20
   1400055b6:	mov    rbp,rdx
   1400055b9:	mov    rax,QWORD PTR [rcx]
   1400055bc:	mov    rdx,rcx
   1400055bf:	mov    ecx,DWORD PTR [rax]
   1400055c1:	call   0x1400046e4
   1400055c6:	nop
   1400055c7:	add    rsp,0x20
   1400055cb:	pop    rbp
   1400055cc:	ret    
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	rex push rbp
   1400055d2:	sub    rsp,0x20
   1400055d6:	mov    rbp,rdx
   1400055d9:	mov    rax,QWORD PTR [rcx]
   1400055dc:	xor    ecx,ecx
   1400055de:	cmp    DWORD PTR [rax],0xc0000005
   1400055e4:	sete   cl
   1400055e7:	mov    eax,ecx
   1400055e9:	add    rsp,0x20
   1400055ed:	pop    rbp
   1400055ee:	ret    
   1400055ef:	int3   
   1400055f0:	rex push rbp
   1400055f2:	sub    rsp,0x20
   1400055f6:	mov    rbp,rdx
   1400055f9:	mov    ecx,0x8
   1400055fe:	call   0x140004b48
   140005603:	nop
   140005604:	add    rsp,0x20
   140005608:	pop    rbp
   140005609:	ret    
   14000560a:	int3   
   14000560b:	rex push rbp
   14000560d:	sub    rsp,0x20
   140005611:	mov    rbp,rdx
   140005614:	and    QWORD PTR [rip+0x309c],0x0        # 0x1400086b8
   14000561c:	lea    rcx,[rip+0x309d]        # 0x1400086c0
   140005623:	add    rsp,0x20
   140005627:	pop    rbp
   140005628:	jmp    0x140004d98
   14000562d:	int3   
   14000562e:	int3   
   14000562f:	int3   
   140005630:	lea    rcx,[rip+0x3089]        # 0x1400086c0
   140005637:	jmp    0x140004cf4

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	push   0x77
   140006005:	add    BYTE PTR [rax],al
   140006007:	add    BYTE PTR [rdx+0x77],bh
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	mov    BYTE PTR [rdi+0x0],dh
   140006013:	add    BYTE PTR [rax],al
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rax+0x77],bl
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rax+0x7e],dl
	...
   14000602e:	add    BYTE PTR [rax],al
   140006030:	ds js  0x140006033
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    BYTE PTR [rax+rdi*2+0x0],dl
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rax+0x78],dh
   140006042:	add    BYTE PTR [rax],al
   140006044:	add    BYTE PTR [rax],al
   140006046:	add    BYTE PTR [rax],al
   140006048:	mov    BYTE PTR [rax+0x0],bh
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rax+0x78],ah
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rdx+0x78],bh
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    dl,al
   140006061:	js     0x140006063
   140006063:	add    BYTE PTR [rax],al
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    al,bl
   140006069:	js     0x14000606b
   14000606b:	add    BYTE PTR [rax],al
   14000606d:	add    BYTE PTR [rax],al
   14000606f:	add    dl,dh
   140006071:	js     0x140006073
   140006073:	add    BYTE PTR [rax],al
   140006075:	add    BYTE PTR [rax],al
   140006077:	add    BYTE PTR [rsi],al
   140006079:	jns    0x14000607b
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    BYTE PTR [rax],bl
   140006081:	jns    0x140006083
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rcx+rdi*2],ah
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	add    BYTE PTR [rax],al
   14000608e:	add    BYTE PTR [rax],al
   140006090:	xor    BYTE PTR [rcx+0x0],bh
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    BYTE PTR [rcx+rdi*2],bh
   14000609a:	add    BYTE PTR [rax],al
   14000609c:	add    BYTE PTR [rax],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	rex.WX jns 0x1400060a3
   1400060a3:	add    BYTE PTR [rax],al
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    BYTE PTR [rax+0x79],ah
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	add    BYTE PTR [rax],al
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	outs   dx,BYTE PTR ds:[rsi]
   1400060b1:	jns    0x1400060b3
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rdx+0x79],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    BYTE PTR [rax+rdi*2],ah
   1400060c2:	add    BYTE PTR [rax],al
   1400060c4:	add    BYTE PTR [rax],al
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	jl     0x140006149
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	push   rsp
   1400060d1:	jg     0x1400060d3
   1400060d3:	add    BYTE PTR [rax],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rdi+rdi*2+0x0],al
   1400060db:	add    BYTE PTR [rax],al
   1400060dd:	add    BYTE PTR [rax],al
   1400060df:	add    BYTE PTR [rsi],dh
   1400060e1:	jg     0x1400060e3
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rsi],ah
   1400060e9:	jg     0x1400060eb
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rax],dl
   1400060f1:	jg     0x1400060f3
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rdi+rdi*2],al
   1400060fa:	add    BYTE PTR [rax],al
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	clc    
   140006101:	jle    0x140006103
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    dh,ah
   140006109:	jle    0x14000610b
   14000610b:	add    BYTE PTR [rax],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    dl,cl
   140006111:	jle    0x140006113
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rsi+0x7e],dh
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    BYTE PTR [rsi+0x7e],ah
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    BYTE PTR [rax+0x7e],dl
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    BYTE PTR [rsi+0x7e],dh
   140006132:	add    BYTE PTR [rax],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	data16 jle 0x14000613b
   14000613b:	add    BYTE PTR [rax],al
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    BYTE PTR [rax+rdi*2],dl
   140006142:	add    BYTE PTR [rax],al
   140006144:	add    BYTE PTR [rax],al
   140006146:	add    BYTE PTR [rax],al
   140006148:	cld    
   140006149:	ja     0x14000614b
   14000614b:	add    BYTE PTR [rax],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    dh,ch
   140006151:	ja     0x140006153
   140006153:	add    BYTE PTR [rax],al
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    al,ah
   140006159:	ja     0x14000615b
   14000615b:	add    BYTE PTR [rax],al
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    ah,dl
   140006161:	ja     0x140006163
   140006163:	add    BYTE PTR [rax],al
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    al,cl
   140006169:	ja     0x14000616b
   14000616b:	add    BYTE PTR [rax],al
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	add    BYTE PTR [rdx+0x77],bh
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    BYTE PTR [rax+0x79],dl
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rsi+0x7f],cl
	...
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    BYTE PTR [rax+0x7b],dl
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rdx+0x7b],ch
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    BYTE PTR [rdx+0x7b],bh
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	mov    eax,0x79
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    dl,al
   1400061b1:	jns    0x1400061b3
   1400061b3:	add    BYTE PTR [rax],al
   1400061b5:	add    BYTE PTR [rax],al
   1400061b7:	add    ah,cl
   1400061b9:	jns    0x1400061bb
   1400061bb:	add    BYTE PTR [rax],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    dh,dl
   1400061c1:	jns    0x1400061c3
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    al,ah
   1400061c9:	jns    0x1400061cb
   1400061cb:	add    BYTE PTR [rax],al
   1400061cd:	add    BYTE PTR [rax],al
   1400061cf:	add    al,ch
   1400061d1:	jns    0x1400061d3
   1400061d3:	add    BYTE PTR [rax],al
   1400061d5:	add    BYTE PTR [rax],al
   1400061d7:	add    dl,dh
   1400061d9:	jns    0x1400061db
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rax],al
   1400061e1:	jp     0x1400061e3
   1400061e3:	add    BYTE PTR [rax],al
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rax],dl
   1400061e9:	jp     0x1400061eb
   1400061eb:	add    BYTE PTR [rax],al
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rdx],bl
   1400061f1:	jp     0x1400061f3
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rax],ch
   1400061f9:	jp     0x1400061fb
   1400061fb:	add    BYTE PTR [rax],al
   1400061fd:	add    BYTE PTR [rax],al
   1400061ff:	add    BYTE PTR [rsi],dh
   140006201:	jp     0x140006203
   140006203:	add    BYTE PTR [rax],al
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    BYTE PTR [rax+0x7a],cl
   14000620a:	add    BYTE PTR [rax],al
   14000620c:	add    BYTE PTR [rax],al
   14000620e:	add    BYTE PTR [rax],al
   140006210:	pop    rdx
   140006211:	jp     0x140006213
   140006213:	add    BYTE PTR [rax],al
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rdx+0x7a],ah
   14000621a:	add    BYTE PTR [rax],al
   14000621c:	add    BYTE PTR [rax],al
   14000621e:	add    BYTE PTR [rax],al
   140006220:	push   0x7a
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	je     0x1400062a4
   14000622a:	add    BYTE PTR [rax],al
   14000622c:	add    BYTE PTR [rax],al
   14000622e:	add    BYTE PTR [rax],al
   140006230:	mov    bh,BYTE PTR [rdx+0x0]
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rsi+0x7a],bl
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    BYTE PTR [rax+0x7b],dh
   140006242:	add    BYTE PTR [rax],al
   140006244:	add    BYTE PTR [rax],al
   140006246:	add    BYTE PTR [rax],al
   140006248:	(bad)  
   140006249:	jnp    0x14000624b
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rbx+rdi*2+0x0],dl
   140006253:	add    BYTE PTR [rax],al
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    BYTE PTR [rdx+0x7b],cl
   14000625a:	add    BYTE PTR [rax],al
   14000625c:	add    BYTE PTR [rax],al
   14000625e:	add    BYTE PTR [rax],al
   140006260:	rex.X jnp 0x140006263
   140006263:	add    BYTE PTR [rax],al
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rsi],bl
   140006269:	jnp    0x14000626b
   14000626b:	add    BYTE PTR [rax],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    BYTE PTR [rdx],cl
   140006271:	jnp    0x140006273
   140006273:	add    BYTE PTR [rax],al
   140006275:	add    BYTE PTR [rax],al
   140006277:	add    al,ch
   140006279:	jp     0x14000627b
   14000627b:	add    BYTE PTR [rax],al
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    dh,bl
   140006281:	jp     0x140006283
   140006283:	add    BYTE PTR [rax],al
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    al,dl
   140006289:	jp     0x14000628b
   14000628b:	add    BYTE PTR [rax],al
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rax+0x7a],bh
   140006295:	add    BYTE PTR [rax],al
   140006297:	add    BYTE PTR [rdx+rdi*2+0x0],ch
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	ret    0x7b
	...
   1400062af:	add    al,cl
   1400062b1:	jge    0x1400062b3
   1400062b3:	add    BYTE PTR [rax],al
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rsi+0x7d],ch
   1400062bd:	add    BYTE PTR [rax],al
   1400062bf:	add    BYTE PTR [rax+0x7d],ah
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    BYTE PTR [rax+0x7d],cl
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rsi+0x7d],ch
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	push   rsi
   1400062d9:	jge    0x1400062db
   1400062db:	add    BYTE PTR [rax],al
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    BYTE PTR [rdx],bh
   1400062e1:	jge    0x1400062e3
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rax],bl
   1400062e9:	jge    0x1400062eb
   1400062eb:	add    BYTE PTR [rax],al
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    dh,bh
   1400062f1:	jl     0x1400062f3
   1400062f3:	add    BYTE PTR [rax],al
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    ah,ah
   1400062f9:	jge    0x1400062fb
   1400062fb:	add    BYTE PTR [rax],al
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    al,bl
   140006301:	jl     0x140006303
   140006303:	add    BYTE PTR [rax],al
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    ah,al
   140006309:	jl     0x14000630b
   14000630b:	add    BYTE PTR [rax],al
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    BYTE PTR [rsp+rdi*2+0x0],dh
   140006316:	add    BYTE PTR [rax],al
   140006318:	movabs ds:0x840000000000007c,al
   140006321:	jl     0x140006323
   140006323:	add    BYTE PTR [rax],al
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    BYTE PTR [rsi+0x7c],ah
   14000632a:	add    BYTE PTR [rax],al
   14000632c:	add    BYTE PTR [rax],al
   14000632e:	add    BYTE PTR [rax],al
   140006330:	rex.W jl 0x140006333
   140006333:	add    BYTE PTR [rax],al
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    BYTE PTR [rax],dh
   140006339:	jl     0x14000633b
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rax],bl
   140006341:	jl     0x140006343
   140006343:	add    BYTE PTR [rax],al
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    ah,bh
   140006349:	jnp    0x14000634b
   14000634b:	add    BYTE PTR [rax],al
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    BYTE PTR [rax],al
   140006351:	jle    0x140006353
   140006353:	add    BYTE PTR [rax],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rsi],ah
   140006359:	jle    0x14000635b
   14000635b:	add    BYTE PTR [rax],al
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    dl,ch
   140006361:	jl     0x140006363
   140006363:	add    BYTE PTR [rax],al
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    BYTE PTR [rsi+0x7f],ch
   14000636a:	add    BYTE PTR [rax],al
   14000636c:	add    BYTE PTR [rax],al
   14000636e:	add    BYTE PTR [rax],al
   140006370:	loopne 0x1400063ed
	...
   140006386:	add    BYTE PTR [rax],al
   140006388:	fadd   QWORD PTR [rbx+0x0]
   14000638b:	rex add DWORD PTR [rax],eax
   14000638e:	add    BYTE PTR [rax],al
   140006390:	add    BYTE PTR [rax],dl
   140006392:	add    BYTE PTR [rax+0x1],al
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rax+rdx*1],cl
   14000639a:	add    BYTE PTR [rax+0x1],al
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rax],ah
   1400063a1:	adc    BYTE PTR [rax],al
   1400063a3:	rex add DWORD PTR [rax],eax
	...
   1400063b6:	add    BYTE PTR [rax],al
   1400063b8:	or     al,0x43
   1400063ba:	add    BYTE PTR [rax+0x1],al
   1400063bd:	add    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rax+rcx*2+0x0],bh
   1400063c3:	rex add DWORD PTR [rax],eax
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	int3   
   1400063c9:	rex.RX add BYTE PTR [rax+0x1],r8b
	...
   1400063dd:	add    BYTE PTR [rax],al
   1400063df:	add    BYTE PTR [rax],dl
   1400063e1:	xchg   esi,eax
   1400063e2:	out    0xa9,al
   1400063e4:	or     eax,0xb911d0b8
   1400063e9:	mov    ecx,0x22c9a000
   1400063ee:	out    0x50,eax
   1400063f0:	xor    BYTE PTR [rsi*4-0x2f493590],dl
   1400063f7:	adc    DWORD PTR [rcx-0x365fff47],edi
   1400063fd:	and    ah,bh
   1400063ff:	push   rax
   140006400:	rex.XB
   140006401:	rex.B jae 0x14000647d
   140006404:	outs   dx,BYTE PTR ds:[rsi]
   140006405:	movsxd ecx,DWORD PTR [rdi+0x76]
   140006408:	gs jb  0x140006477
   14000640b:	(bad)  
   14000640c:	jo     0x14000647e
   14000640e:	gs and BYTE PTR fs:[rsi+0x72],ah
   140006413:	gs gs ins BYTE PTR es:[rdi],dx
   140006416:	imul   esi,DWORD PTR [rbx+0x74],0x0
   14000641d:	add    BYTE PTR [rax],al
   14000641f:	add    BYTE PTR [rax+0x22],cl
   140006422:	add    BYTE PTR [rax+0x1],al
   140006425:	add    BYTE PTR [rax],al
   140006427:	add    BYTE PTR [rcx+rdx*1+0x0],cl
   14000642b:	rex add DWORD PTR [rax],eax
   14000642e:	add    BYTE PTR [rax],al
   140006430:	pushf  
   140006431:	and    al,BYTE PTR [rax]
   140006433:	rex add DWORD PTR [rax],eax
   140006436:	add    BYTE PTR [rax],al
   140006438:	push   rsp
   140006439:	sbb    al,BYTE PTR [rax]
   14000643b:	rex add DWORD PTR [rax],eax
   14000643e:	add    BYTE PTR [rax],al
   140006440:	(bad)  
   140006441:	add    BYTE PTR [rax],al
   140006443:	add    BYTE PTR [rax],al
   140006445:	add    BYTE PTR [rax],al
   140006447:	add    BYTE PTR [rbx+0x0],dl
   14000644a:	outs   dx,DWORD PTR ds:[rsi]
   14000644b:	add    BYTE PTR [rsi+0x0],ah
   14000644e:	je     0x140006450
   140006450:	ja     0x140006452
   140006452:	(bad)  
   140006453:	add    BYTE PTR [rdx+0x0],dh
   140006456:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000645b:	add    BYTE PTR [rcx+0x0],ch
   14000645e:	movsxd eax,DWORD PTR [rax]
   140006460:	jb     0x140006462
   140006462:	outs   dx,DWORD PTR ds:[rsi]
   140006463:	add    BYTE PTR [rbx+0x0],dh
   140006466:	outs   dx,DWORD PTR ds:[rsi]
   140006467:	add    BYTE PTR [rsi+0x0],ah
   14000646a:	je     0x14000646c
   14000646c:	pop    rsp
   14000646d:	add    BYTE PTR [rcx+0x0],al
   140006470:	push   rbx
   140006471:	add    BYTE PTR [rax+0x0],dl
   140006474:	add    BYTE PTR cs:[rsi+0x0],cl
   140006478:	add    BYTE PTR [r8+rax*1+0x0],r10b
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rbp+0x0],dl
   140006482:	jae    0x140006484
   140006484:	add    BYTE PTR gs:[rdi+0x0],dl
   140006488:	outs   dx,DWORD PTR ds:[rsi]
   140006489:	add    BYTE PTR [rdx+0x0],dh
   14000648c:	imul   eax,DWORD PTR [rax],0x65
   14000648f:	add    BYTE PTR [rdx+0x0],dh
   140006492:	push   rsp
   140006493:	add    BYTE PTR [rax+0x0],ch
   140006496:	jb     0x140006498
   140006498:	add    BYTE PTR gs:[rcx+0x0],ah
   14000649c:	add    BYTE PTR fs:[rbx+0x0],dh
   1400064a0:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   1400064a4:	rex.WB add BYTE PTR [r9+0x0],cl
   1400064a8:	push   rbx
   1400064a9:	add    BYTE PTR [rip+0x0],dh        # 0x1400064af
   1400064af:	add    BYTE PTR [rcx+0x50],al
   1400064b2:	push   rax
   1400064b3:	rex.WR pop rdi
   1400064b5:	rex.WRB
   1400064b6:	rex.R pop rdi
   1400064b8:	push   rax
   1400064b9:	push   r12
   1400064bb:	rex.W add BYTE PTR [rax],al
   1400064be:	add    BYTE PTR [rax],al
   1400064c0:	push   r8
   1400064c2:	push   rax
   1400064c3:	rex.WR pop rdi
   1400064c5:	push   rax
   1400064c6:	rex.W pop rcx
   1400064c8:	push   rbx
   1400064c9:	rex.WB
   1400064ca:	rex.XB
   1400064cb:	rex.B
   1400064cc:	rex.WR pop rdi
   1400064ce:	push   rax
   1400064cf:	push   r12
   1400064d1:	rex.W add BYTE PTR [rax],al
   1400064d4:	add    BYTE PTR [rax],al
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	(bad)  
   1400064d9:	ret    0x5b83
   1400064dc:	xchg   BYTE PTR [rbx-0x2e],dh
   1400064df:	adc    DWORD PTR [rcx-0x387fff65],edi
   1400064e5:	call   0x140670ac4
   1400064ea:	jne    0x1400064ec
   1400064ec:	jae    0x1400064ee
   1400064ee:	imul   eax,DWORD PTR [rax],0x6e006f
   1400064f4:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400064f9:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400064fd:	add    BYTE PTR [rax],al
   1400064ff:	add    BYTE PTR [rdi+0x65],al
   140006502:	je     0x140006547
   140006504:	(bad)  
   140006505:	movsxd ebp,DWORD PTR [rax+0x65]
   140006508:	push   rax
   140006509:	(bad)  
   14000650a:	je     0x140006574
   14000650c:	add    BYTE PTR [rax],al
   14000650e:	add    BYTE PTR [rax],al
   140006510:	movsxd eax,DWORD PTR [rax]
   140006512:	ins    BYTE PTR es:[rdi],dx
   140006513:	add    BYTE PTR [rcx+0x0],ch
   140006516:	add    BYTE PTR gs:[rsi+0x0],ch
   14000651a:	je     0x14000651c
   14000651c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006520:	outs   dx,BYTE PTR ds:[rsi]
   140006521:	add    BYTE PTR [rsi+0x0],ch
   140006524:	add    BYTE PTR gs:[rbx+0x0],ah
   140006528:	je     0x14000652a
   14000652a:	add    BYTE PTR gs:[rax+rax*1+0x43],ah
   14000652f:	add    BYTE PTR [rax+0x0],ch
   140006532:	add    BYTE PTR gs:[rbx+0x0],ah
   140006536:	imul   eax,DWORD PTR [rax],0x0
   140006539:	add    BYTE PTR [rax],al
   14000653b:	add    BYTE PTR [rax],al
   14000653d:	add    BYTE PTR [rax],al
   14000653f:	add    BYTE PTR [rcx+0x6e],cl
   140006542:	movsxd ebp,DWORD PTR [rdi+0x72]
   140006545:	jb     0x1400065ac
   140006547:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
   14000654b:	jne    0x1400065ba
   14000654d:	(bad)  
   14000654e:	gs jb  0x140006571
   140006551:	outs   dx,DWORD PTR ds:[rsi]
   140006552:	data16 and BYTE PTR [rcx+0x72],ah
   140006556:	addr32 jne 0x1400065c6
   140006559:	outs   dx,BYTE PTR gs:[rsi]
   14000655b:	je     0x1400065d0
   14000655d:	and    BYTE PTR cs:[rsi+0x6f],cl
   140006561:	je     0x1400065c8
   140006563:	cmp    ah,BYTE PTR [rax]
   140006565:	push   r11
   140006567:	push   rax
   140006568:	cs rex.WRX
   14000656a:	rex.RB push r12
   14000656c:	and    BYTE PTR [rdi+0x6f],dh
   14000656f:	jb     0x1400065dc
   140006571:	gs jb  0x140006594
   140006574:	jo     0x1400065e8
   140006576:	outs   dx,DWORD PTR ds:[rsi]
   140006577:	movsxd esp,DWORD PTR [rbp+0x73]
   14000657a:	jae    0x14000659c
   14000657c:	movsxd esp,DWORD PTR [rcx+0x6e]
   14000657f:	and    BYTE PTR [rsi+0x6f],ch
   140006582:	je     0x1400065a4
   140006584:	(bad)  
   140006585:	and    BYTE PTR gs:[rbp+0x73],dh
   140006589:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000658e:	je     0x1400065f5
   140006590:	jb     0x1400065f3
   140006592:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140006596:	gs ins BYTE PTR es:[rdi],dx
   140006598:	jns    0x1400065c8
   14000659a:	and    BYTE PTR [rbp+0x78],al
   14000659d:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0xa2e67
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    BYTE PTR [rdx+0x61],al
   1400065aa:	and    BYTE PTR fs:[rcx+0x72],ah
   1400065ae:	addr32 jne 0x14000661e
   1400065b1:	outs   dx,BYTE PTR gs:[rsi]
   1400065b3:	je     0x1400065e3
   1400065b5:	and    BYTE PTR [rbp+0x78],al
   1400065b8:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0xa2e67
   1400065c0:	xor    al,0x0
   1400065c2:	add    BYTE PTR cs:[rax],dh
   1400065c5:	add    BYTE PTR [rsi],ch
   1400065c7:	add    BYTE PTR [rbx],dh
   1400065c9:	add    BYTE PTR [rax],dh
   1400065cb:	add    BYTE PTR [rbx],dh
   1400065cd:	add    BYTE PTR [rcx],dh
   1400065cf:	add    BYTE PTR [rcx],bh
   1400065d1:	add    BYTE PTR [rsi],ch
   1400065d3:	add    BYTE PTR [rax],dh
   1400065d5:	add    BYTE PTR [rax],al
   1400065d7:	add    BYTE PTR [rcx+0x0],al
   1400065da:	push   rbx
   1400065db:	add    BYTE PTR [rax+0x0],dl
   1400065de:	add    BYTE PTR cs:[rsi+0x0],cl
   1400065e2:	add    BYTE PTR [r8+rax*1+0x50],r10b
   1400065e7:	add    BYTE PTR [rbp+0x0],cl
   1400065ea:	add    BYTE PTR [r14+0x0],r14b
   1400065ee:	add    BYTE PTR gs:[rsi+0x0],ch
   1400065f2:	je     0x1400065f4
   1400065f4:	pop    rdi
   1400065f5:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d8fb
   1400065fb:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d901
   140006601:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d907
   140006607:	add    BYTE PTR [rip+0x7300],ah        # 0x14000d90d
   14000660d:	add    BYTE PTR [rax],al
   14000660f:	add    BYTE PTR [rcx+0x0],al
   140006612:	push   rbx
   140006613:	add    BYTE PTR [rax+0x0],dl
   140006616:	add    BYTE PTR cs:[rsi+0x0],cl
   14000661a:	add    BYTE PTR [r8+rax*1+0x50],r10b
   14000661f:	add    BYTE PTR [rbp+0x0],cl
   140006622:	add    BYTE PTR [r14+0x0],r14b
   140006626:	add    BYTE PTR gs:[rsi+0x0],ch
   14000662a:	je     0x14000662c
   14000662c:	pop    rdi
   14000662d:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d933
   140006633:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d939
   140006639:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d93f
   14000663f:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d945
   140006645:	add    BYTE PTR [rax+0x0],dl
   140006648:	imul   eax,DWORD PTR [rax],0x67006e
   14000664e:	add    BYTE PTR [rax],al
   140006650:	pop    rsp
   140006651:	add    BYTE PTR [rax+rax*1+0x2e],bl
   140006655:	add    BYTE PTR [rax+rax*1+0x70],bl
   140006659:	add    BYTE PTR [rcx+0x0],ch
   14000665c:	jo     0x14000665e
   14000665e:	add    BYTE PTR gs:[rax+rax*1+0x41],bl
   140006663:	add    BYTE PTR [rbx+0x0],dl
   140006666:	push   rax
   140006667:	add    BYTE PTR [rsi],ch
   140006669:	add    BYTE PTR [rsi+0x0],cl
   14000666c:	add    BYTE PTR [r8+rax*1+0x50],r10b
   140006671:	add    BYTE PTR [rbp+0x0],cl
   140006674:	add    BYTE PTR [r11+0x0],sil
   140006678:	jns    0x14000667a
   14000667a:	outs   dx,BYTE PTR ds:[rsi]
   14000667b:	add    BYTE PTR [rbx+0x0],ah
   14000667e:	push   rax
   14000667f:	add    BYTE PTR [rcx+0x0],ch
   140006682:	jo     0x140006684
   140006684:	add    BYTE PTR gs:[rdi+0x0],bl
   140006688:	and    eax,0x5f007300
   14000668d:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d993
   140006693:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d999
   140006699:	add    BYTE PTR [rip+0x7300],ah        # 0x14000d99f
   14000669f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   1400066a3:	add    BYTE PTR [rsi],ch
   1400066a5:	add    BYTE PTR [rax+rax*1+0x70],bl
   1400066a9:	add    BYTE PTR [rcx+0x0],ch
   1400066ac:	jo     0x1400066ae
   1400066ae:	add    BYTE PTR gs:[rax+rax*1+0x41],bl
   1400066b3:	add    BYTE PTR [rbx+0x0],dl
   1400066b6:	push   rax
   1400066b7:	add    BYTE PTR [rsi],ch
   1400066b9:	add    BYTE PTR [rsi+0x0],cl
   1400066bc:	add    BYTE PTR [r8+rax*1+0x50],r10b
   1400066c1:	add    BYTE PTR [rbp+0x0],cl
   1400066c4:	push   rbx
   1400066c5:	add    BYTE PTR [rcx+0x0],bh
   1400066c8:	outs   dx,BYTE PTR ds:[rsi]
   1400066c9:	add    BYTE PTR [rbx+0x0],ah
   1400066cc:	push   rax
   1400066cd:	add    BYTE PTR [rcx+0x0],ch
   1400066d0:	jo     0x1400066d2
   1400066d2:	add    BYTE PTR gs:[rdi+0x0],bl
   1400066d6:	and    eax,0x5f007300
   1400066db:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d9e1
   1400066e1:	add    BYTE PTR [rip+0x5f007300],ah        # 0x19f00d9e7
   1400066e7:	add    BYTE PTR [rip+0x7300],ah        # 0x14000d9ed
   1400066ed:	add    BYTE PTR [rax],al
   1400066ef:	add    BYTE PTR [rax+0x0],dh
   1400066f2:	jb     0x1400066f4
   1400066f4:	outs   dx,DWORD PTR ds:[rsi]
   1400066f5:	add    BYTE PTR [rbx+0x0],ah
   1400066f8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400066fc:	jae    0x1400066fe
   1400066fe:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006702:	add    BYTE PTR fs:[rbp+0x0],ah
   140006706:	ins    BYTE PTR es:[rdi],dx
	...
   14000670f:	add    BYTE PTR [rip+0x5e006400],ah        # 0x19e00cb15
   140006715:	add    BYTE PTR [rax],dh
   140006717:	add    BYTE PTR [rax+0x0],bh
   14000671a:	and    eax,0x38003000
   14000671f:	add    BYTE PTR [rax+0x0],bh
   140006722:	add    BYTE PTR [rax],al
   140006724:	add    BYTE PTR [rax],al
   140006726:	add    BYTE PTR [rax],al
   140006728:	and    BYTE PTR [rcx+0x14000],al
   14000672e:	add    BYTE PTR [rax],al
   140006730:	rol    BYTE PTR [rcx+0x14000],0x0
	...
   14000673f:	add    BYTE PTR [rdi+0x6c],ch
   140006742:	xor    esi,DWORD PTR gs:[rdx]
   140006745:	cs fs ins BYTE PTR es:[rdi],dx
   140006748:	ins    BYTE PTR es:[rdi],dx
	...
   140006755:	add    BYTE PTR [rax],al
   140006757:	add    al,al
   140006759:	add    BYTE PTR [rax],al
   14000675b:	add    BYTE PTR [rax],al
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	rex.RX push rdx
   140006761:	mov    eax,0x51eb851e
   140006766:	lock (bad) 
   140006768:	loope  0x1400067e4
   14000676a:	adc    al,0xae
   14000676c:	rex.RXB loope 0x14000675d
   14000676f:	(bad)  
   140006770:	jnp    0x140006786
   140006772:	scas   al,BYTE PTR es:[rdi]
   140006773:	rex.RXB loope 0x1400067f0
   140006776:	in     al,dx
   140006777:	(bad)  
   140006778:	or     dl,bh
   14000677a:	movabs ds:0x6666663ff10a3d70,eax
   140006783:	data16 data16 data16 lock (bad) 
   140006788:	xlat   BYTE PTR ds:[rbx]
   140006789:	movabs ds:0xae143ff1d70a3d70,eax
   140006792:	rex.RXB loope 0x14000680f
   140006795:	adc    al,0xee
   140006797:	(bad)  
   140006798:	xlat   BYTE PTR ds:[rbx]
   140006799:	movabs ds:0xcccd3fefd70a3d70,eax
   1400067a2:	int3   
   1400067a3:	int3   
   1400067a4:	int3   
   1400067a5:	int3   
   1400067a6:	lock (bad) 
   1400067a8:	rex.W loope 0x140006825
   1400067ab:	adc    al,0xae
   1400067ad:	rex.RXB icebp 
   1400067af:	(bad)  
   1400067b0:	rex.W loope 0x14000682d
   1400067b3:	adc    al,0xae
   1400067b5:	rex.RXB in eax,dx
   1400067b7:	(bad)  
   1400067b8:	pop    rsp
   1400067b9:	pop    rdx
   1400067bb:	cmc    
   1400067bc:	sub    BYTE PTR [rdi+rbp*8+0x3f],bl
   1400067c0:	sub    DWORD PTR [rdi+rcx*4-0x3e],ebx
   1400067c4:	cmc    
   1400067c5:	sub    al,dh
   1400067c7:	(bad)  
   1400067c8:	add    BYTE PTR [rax],al
   1400067ca:	add    BYTE PTR [rax],al
   1400067cc:	add    BYTE PTR [rax-0x51],al
   1400067cf:	rex pop rsp
   1400067d1:	add    BYTE PTR [rax],al
   1400067d3:	add    BYTE PTR [rax],al
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	add    BYTE PTR [rbx+0x0],ch
   1400067da:	add    BYTE PTR gs:[rdx+0x0],dh
   1400067de:	outs   dx,BYTE PTR ds:[rsi]
   1400067df:	add    BYTE PTR [rbp+0x0],ah
   1400067e2:	ins    BYTE PTR es:[rdi],dx
   1400067e3:	add    BYTE PTR [rbx],dh
   1400067e5:	add    BYTE PTR [rdx],dh
   1400067e7:	add    BYTE PTR [rsi],ch
   1400067e9:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400067ed:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400067f1:	add    BYTE PTR [rax],al
   1400067f3:	add    BYTE PTR [rax],al
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    BYTE PTR [rax+0x65],cl
   1400067fa:	(bad)  
   1400067fb:	jo     0x140006850
   1400067fd:	gs je  0x140006849
   140006800:	outs   dx,BYTE PTR ds:[rsi]
   140006801:	outs   dx,WORD PTR ds:[rsi]
   140006803:	jb     0x140006872
   140006805:	(bad)  
   140006806:	je     0x140006871
   140006808:	outs   dx,DWORD PTR ds:[rsi]
   140006809:	outs   dx,BYTE PTR ds:[rsi]
   14000680a:	add    BYTE PTR [rax],al
   14000680c:	add    BYTE PTR [rax],al
   14000680e:	add    BYTE PTR [rax],al
   140006810:	addr32 pop rdi
   140006812:	rex.WRXB jo 0x14000687a
   140006815:	outs   dx,BYTE PTR ds:[rsi]
   140006816:	rex.XB push r11
   140006818:	push   rax
   140006819:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000681b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000681e:	add    BYTE PTR [rax],al
   140006820:	add    BYTE PTR [rax],al
   140006822:	add    BYTE PTR [rax],al
   140006824:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140006825:	adc    edi,DWORD PTR [rsi+rdx*2]
   140006828:	add    BYTE PTR [rax],al
   14000682a:	add    BYTE PTR [rax],al
   14000682c:	add    al,BYTE PTR [rax]
   14000682e:	add    BYTE PTR [rax],al
   140006830:	add    BYTE PTR es:[rax],al
   140006833:	add    al,dh
   140006835:	push   0x54f00000
   14000683a:	add    BYTE PTR [rax],al
   14000683c:	add    BYTE PTR [rax],al
   14000683e:	add    BYTE PTR [rax],al
   140006840:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140006841:	adc    edi,DWORD PTR [rsi+rdx*2]
   140006844:	add    BYTE PTR [rax],al
   140006846:	add    BYTE PTR [rax],al
   140006848:	or     al,0x0
   14000684a:	add    BYTE PTR [rax],al
   14000684c:	adc    al,0x0
   14000684e:	add    BYTE PTR [rax],al
   140006850:	sbb    BYTE PTR [rcx+0x0],ch
   140006853:	add    BYTE PTR [rax],bl
   140006855:	push   rbp
   140006856:	add    BYTE PTR [rax],al
   140006858:	add    BYTE PTR [rax],al
   14000685a:	add    BYTE PTR [rax],al
   14000685c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000685d:	adc    edi,DWORD PTR [rsi+rdx*2]
   140006860:	add    BYTE PTR [rax],al
   140006862:	add    BYTE PTR [rax],al
   140006864:	or     eax,0xd0000000
   140006869:	add    al,BYTE PTR [rax]
   14000686b:	add    BYTE PTR [rcx+rbp*2],ch
   14000686e:	add    BYTE PTR [rax],al
   140006870:	sub    al,0x55
	...
   14000687e:	add    BYTE PTR [rax],al
   140006880:	jo     0x140006882
	...
   1400068d6:	add    BYTE PTR [rax],al
   1400068d8:	adc    BYTE PTR [rax+0x14000],al
	...
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	push   rdx
   1400068f1:	push   rbx
   1400068f2:	rex.R push rbx
   1400068f4:	(bad)  
   1400068f5:	out    dx,al
   1400068f6:	clc    
   1400068f7:	jbe    0x140006914
   1400068f9:	mov    cl,0x5f
   1400068fb:	rex.WR xchg rsi,rax
   1400068fd:	(bad)  
   1400068fe:	lahf   
   1400068ff:	add    DWORD PTR [rax],ebp
   140006901:	fist   DWORD PTR [rsi]
   140006903:	(bad)  
   140006904:	or     eax,DWORD PTR [rax]
   140006906:	add    BYTE PTR [rax],al
   140006908:	(bad)  
   140006909:	jae    0x14000697b
   14000690b:	outs   dx,BYTE PTR ds:[rsi]
   14000690c:	gs je  0x14000696e
   14000690f:	ja     0x140006981
   140006911:	cs jo  0x140006978
   140006914:	(bad)  
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    BYTE PTR [rcx],al
   140006919:	add    BYTE PTR [rax],al
   14000691b:	add    BYTE PTR [rax+rax*1],ah
   14000691e:	add    BYTE PTR [rax],al
   140006920:	and    al,0x0
	...
   14000692e:	add    BYTE PTR [rax],al
   140006930:	add    BYTE PTR [rax],dl
   140006932:	add    BYTE PTR [rax],al
   140006934:	rex.RXB add BYTE PTR [r8],r8b
   140006937:	add    BYTE PTR [rsi],ch
   140006939:	je     0x1400069a0
   14000693b:	js     0x1400069b1
   14000693d:	and    al,0x64
   14000693f:	imul   eax,DWORD PTR [rax],0x50000000
   140006945:	adc    BYTE PTR [rax],al
   140006947:	add    BYTE PTR [rsi+0x45],dl
   14000694a:	add    BYTE PTR [rax],al
   14000694c:	cs je  0x1400069b4
   14000694f:	js     0x1400069c5
   140006951:	and    al,0x6d
   140006953:	outs   dx,BYTE PTR ds:[rsi]
   140006954:	add    BYTE PTR [rax],al
   140006956:	add    BYTE PTR [rax],al
   140006958:	mov    al,0x55
   14000695a:	add    BYTE PTR [rax],al
   14000695c:	jle    0x14000695e
   14000695e:	add    BYTE PTR [rax],al
   140006960:	cs je  0x1400069c8
   140006963:	js     0x1400069d9
   140006965:	and    al,0x78
   140006967:	add    BYTE PTR [rax],dh
   140006969:	push   rsi
   14000696a:	add    BYTE PTR [rax],al
   14000696c:	or     al,0x0
   14000696e:	add    BYTE PTR [rax],al
   140006970:	cs je  0x1400069d8
   140006973:	js     0x1400069e9
   140006975:	and    al,0x79
   140006977:	add    BYTE PTR fs:[rax],al
   14000697a:	add    BYTE PTR [rax],al
   14000697c:	add    BYTE PTR [rax+0x0],ah
   14000697f:	add    BYTE PTR [rax+0x2e000003],al
   140006985:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000698d:	add    BYTE PTR [rax],al
   14000698f:	add    BYTE PTR [rax+0x8000063],al
   140006995:	add    BYTE PTR [rax],al
   140006997:	add    BYTE PTR [rsi],ch
   140006999:	rex.XB push r10
   14000699b:	push   rsp
   14000699c:	and    al,0x58
   14000699e:	rex.XB
   14000699f:	add    BYTE PTR [r8],al
   1400069a2:	add    BYTE PTR [rax],al
   1400069a4:	mov    BYTE PTR [rbx+0x0],ah
   1400069a7:	add    BYTE PTR [rax],cl
   1400069a9:	add    BYTE PTR [rax],al
   1400069ab:	add    BYTE PTR [rsi],ch
   1400069ad:	rex.XB push r10
   1400069af:	push   rsp
   1400069b0:	and    al,0x58
   1400069b2:	rex.XB
   1400069b3:	rex.B
   1400069b4:	add    BYTE PTR [r8],al
   1400069b7:	add    BYTE PTR [rax+0x18000063],dl
   1400069bd:	add    BYTE PTR [rax],al
   1400069bf:	add    BYTE PTR [rsi],ch
   1400069c1:	rex.XB push r10
   1400069c3:	push   rsp
   1400069c4:	and    al,0x58
   1400069c6:	rex.XB push r13
   1400069c8:	add    BYTE PTR [rax],al
   1400069ca:	add    BYTE PTR [rax],al
   1400069cc:	test   al,0x63
   1400069ce:	add    BYTE PTR [rax],al
   1400069d0:	or     BYTE PTR [rax],al
   1400069d2:	add    BYTE PTR [rax],al
   1400069d4:	cs rex.XB push r10
   1400069d7:	push   rsp
   1400069d8:	and    al,0x58
   1400069da:	rex.XB pop r10
   1400069dc:	add    BYTE PTR [rax],al
   1400069de:	add    BYTE PTR [rax],al
   1400069e0:	mov    al,0x63
   1400069e2:	add    BYTE PTR [rax],al
   1400069e4:	or     BYTE PTR [rax],al
   1400069e6:	add    BYTE PTR [rax],al
   1400069e8:	cs rex.XB push r10
   1400069eb:	push   rsp
   1400069ec:	and    al,0x58
   1400069ee:	rex.WB
   1400069ef:	add    BYTE PTR [r8],al
   1400069f2:	add    BYTE PTR [rax],al
   1400069f4:	mov    eax,0x8000063
   1400069f9:	add    BYTE PTR [rax],al
   1400069fb:	add    BYTE PTR [rsi],ch
   1400069fd:	rex.XB push r10
   1400069ff:	push   rsp
   140006a00:	and    al,0x58
   140006a02:	rex.WB
   140006a03:	rex.B
   140006a04:	add    BYTE PTR [r8],al
   140006a07:	add    al,al
   140006a09:	movsxd eax,DWORD PTR [rax]
   140006a0b:	add    BYTE PTR [rax],cl
   140006a0d:	add    BYTE PTR [rax],al
   140006a0f:	add    BYTE PTR [rsi],ch
   140006a11:	rex.XB push r10
   140006a13:	push   rsp
   140006a14:	and    al,0x58
   140006a16:	rex.WB
   140006a17:	rex.XB add BYTE PTR [r8],al
   140006a1a:	add    BYTE PTR [rax],al
   140006a1c:	enter  0x63,0x0
   140006a20:	or     BYTE PTR [rax],al
   140006a22:	add    BYTE PTR [rax],al
   140006a24:	cs rex.XB push r10
   140006a27:	push   rsp
   140006a28:	and    al,0x58
   140006a2a:	rex.WB pop r9
   140006a2c:	add    BYTE PTR [rax],al
   140006a2e:	add    BYTE PTR [rax],al
   140006a30:	shl    BYTE PTR [rbx+0x0],1
   140006a33:	add    BYTE PTR [rax],cl
   140006a35:	add    BYTE PTR [rax],al
   140006a37:	add    BYTE PTR [rsi],ch
   140006a39:	rex.XB push r10
   140006a3b:	push   rsp
   140006a3c:	and    al,0x58
   140006a3e:	rex.WB pop r10
   140006a40:	add    BYTE PTR [rax],al
   140006a42:	add    BYTE PTR [rax],al
   140006a44:	loopne 0x140006aa9
   140006a46:	add    BYTE PTR [rax],al
   140006a48:	adc    BYTE PTR [rip+0x722e0000],al        # 0x1b22e6a4e
   140006a4e:	fs (bad) 
   140006a50:	je     0x140006ab3
   140006a52:	add    BYTE PTR [rax],al
   140006a54:	lock push 0x30c0000
   140006a5a:	add    BYTE PTR [rax],al
   140006a5c:	cs jb  0x140006ac3
   140006a5f:	(bad)  
   140006a60:	je     0x140006ac3
   140006a62:	and    al,0x7a
   140006a64:	jp     0x140006ae0
   140006a66:	fs (bad) 
   140006a68:	add    BYTE PTR [eax],al
   140006a6b:	add    BYTE PTR [rax],al
   140006a6d:	ins    BYTE PTR es:[rdi],dx
   140006a6e:	add    BYTE PTR [rax],al
   140006a70:	or     BYTE PTR [rax],al
   140006a72:	add    BYTE PTR [rax],al
   140006a74:	cs jb  0x140006aeb
   140006a77:	movsxd esp,DWORD PTR [rcx+rcx*2]
   140006a7a:	rex.B
   140006a7b:	add    BYTE PTR [r8],al
   140006a7e:	add    BYTE PTR [rax],al
   140006a80:	or     BYTE PTR [rax+rax*1+0x0],ch
   140006a84:	or     BYTE PTR [rax],al
   140006a86:	add    BYTE PTR [rax],al
   140006a88:	cs jb  0x140006aff
   140006a8b:	movsxd esp,DWORD PTR [rcx+rcx*2]
   140006a8e:	pop    rdx
   140006a8f:	pop    rdx
   140006a90:	add    BYTE PTR [rax],al
   140006a92:	add    BYTE PTR [rax],al
   140006a94:	adc    BYTE PTR [rax+rax*1+0x0],ch
   140006a98:	or     BYTE PTR [rax],al
   140006a9a:	add    BYTE PTR [rax],al
   140006a9c:	cs jb  0x140006b13
   140006a9f:	movsxd esp,DWORD PTR [rsp+rdx*2]
   140006aa2:	rex.B
   140006aa3:	add    BYTE PTR [r8],al
   140006aa6:	add    BYTE PTR [rax],al
   140006aa8:	sbb    BYTE PTR [rax+rax*1+0x0],ch
   140006aac:	or     BYTE PTR [rax],al
   140006aae:	add    BYTE PTR [rax],al
   140006ab0:	cs jb  0x140006b27
   140006ab3:	movsxd esp,DWORD PTR [rsp+rdx*2]
   140006ab6:	pop    rdx
   140006ab7:	pop    rdx
   140006ab8:	add    BYTE PTR [rax],al
   140006aba:	add    BYTE PTR [rax],al
   140006abc:	and    BYTE PTR [rax+rax*1+0x0],ch
   140006ac0:	add    r8,QWORD PTR [rax]
   140006ac3:	add    BYTE PTR [rsi],ch
   140006ac5:	js     0x140006b2b
   140006ac7:	(bad)  
   140006ac8:	je     0x140006b2b
   140006aca:	add    BYTE PTR [rax],al
   140006acc:	ins    BYTE PTR es:[rdi],dx
   140006acd:	outs   dx,DWORD PTR ds:[rsi]
   140006ace:	add    BYTE PTR [rax],al
   140006ad0:	and    BYTE PTR [rax],al
   140006ad2:	add    BYTE PTR [rax],al
   140006ad4:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140006ade:	add    BYTE PTR [rax],al
   140006ae0:	mov    WORD PTR [rdi+0x0],gs
   140006ae3:	add    BYTE PTR [rax],ah
   140006ae5:	add    BYTE PTR [rax],al
   140006ae7:	add    BYTE PTR [rsi],ch
   140006ae9:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140006af2:	add    BYTE PTR [rax],al
   140006af4:	mov    al,0x6f
   140006af6:	add    BYTE PTR [rax],al
   140006af8:	sub    BYTE PTR [rax],al
   140006afa:	add    BYTE PTR [rax],al
   140006afc:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140006b06:	add    BYTE PTR [rax],al
   140006b08:	fsubr  DWORD PTR [rdi+0x0]
   140006b0b:	add    BYTE PTR [rax+0x0],dl
   140006b0e:	add    BYTE PTR [rax],al
   140006b10:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140006b1a:	add    BYTE PTR [rax],al
   140006b1c:	sub    BYTE PTR [rax+0x0],dh
   140006b1f:	add    BYTE PTR [rax],ch
   140006b21:	add    BYTE PTR [rax],al
   140006b23:	add    BYTE PTR [rsi],ch
   140006b25:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140006b2e:	add    BYTE PTR [rax],al
   140006b30:	push   rax
   140006b31:	jo     0x140006b33
   140006b33:	add    BYTE PTR [rbx],dh
   140006b35:	add    eax,DWORD PTR [rax]
   140006b37:	add    BYTE PTR [rsi],ch
   140006b39:	gs fs (bad) 
   140006b3c:	je     0x140006b9f
   140006b3e:	add    BYTE PTR [rax],al
   140006b40:	test   BYTE PTR [rbx+0x0],dh
   140006b43:	add    BYTE PTR [rax+0x0],dl
   140006b46:	add    BYTE PTR [rax],al
   140006b48:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140006b51:	add    BYTE PTR [rax],al
   140006b53:	add    ah,dl
   140006b55:	jae    0x140006b57
   140006b57:	add    BYTE PTR [rax+rax*1],dl
   140006b5a:	add    BYTE PTR [rax],al
   140006b5c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140006b65:	add    BYTE PTR [rax],al
   140006b67:	add    al,ch
   140006b69:	jae    0x140006b6b
   140006b6b:	add    BYTE PTR [rax+0x2e000003],al
   140006b71:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140006b79:	add    BYTE PTR [rax],al
   140006b7b:	add    BYTE PTR [rax+0x77],ch
   140006b7e:	add    BYTE PTR [rax],al
   140006b80:	cmp    BYTE PTR [rax],cl
   140006b82:	add    BYTE PTR [rax],al
   140006b84:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140006b8d:	add    BYTE PTR [rax],al
   140006b8f:	add    BYTE PTR [rax],al
   140006b91:	add    BYTE PTR [rax],0x0
   140006b94:	xor    al,0x0
   140006b96:	add    BYTE PTR [rax],al
   140006b98:	cs fs (bad) 
   140006b9b:	je     0x140006bfe
   140006b9d:	add    BYTE PTR [rax],al
   140006b9f:	add    BYTE PTR [rax],bh
   140006ba1:	add    BYTE PTR [rax],0x0
   140006ba4:	sub    BYTE PTR [rax],al
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140006bb2:	add    BYTE PTR [rax],al
   140006bb4:	(bad)  
   140006bb5:	add    BYTE PTR [rax],0x0
   140006bb8:	clc    
   140006bb9:	(bad)  
   140006bba:	add    BYTE PTR [rax],al
   140006bbc:	cs (bad) 
   140006bbf:	jae    0x140006bc1
   140006bc1:	add    BYTE PTR [rax],al
   140006bc3:	add    BYTE PTR [rax],al
   140006bc5:	nop
   140006bc6:	add    BYTE PTR [rax],al
   140006bc8:	loopne 0x140006bce
   140006bca:	add    BYTE PTR [rax],al
   140006bcc:	cs jo  0x140006c33
   140006bcf:	(bad)  
   140006bd0:	je     0x140006c33
   140006bd2:	add    BYTE PTR [rax],al
   140006bd4:	add    BYTE PTR [rax+0x580000],ah
   140006bda:	add    BYTE PTR [rax],al
   140006bdc:	cs jb  0x140006c52
   140006bdf:	jb     0x140006c44
   140006be1:	and    al,0x30
   140006be3:	xor    DWORD PTR [rax],eax
   140006be5:	add    BYTE PTR [rax],al
   140006be7:	add    BYTE PTR [rax-0x60],ah
   140006bea:	add    BYTE PTR [rax],al
   140006bec:	enter  0x3,0x0
   140006bf0:	cs jb  0x140006c66
   140006bf3:	jb     0x140006c58
   140006bf5:	and    al,0x30
   140006bf7:	xor    al,BYTE PTR [rax]
	...
   140006c1d:	add    BYTE PTR [rax],al
   140006c1f:	add    BYTE PTR [rcx],al
   140006c21:	or     al,BYTE PTR [rax+rax*1]
   140006c24:	or     dh,BYTE PTR [rsi+rax*1]
   140006c27:	add    BYTE PTR [rdx],cl
   140006c29:	xor    al,BYTE PTR [rsi]
   140006c2b:	jo     0x140006c2e
   140006c2d:	or     DWORD PTR [rdx],eax
   140006c2f:	add    BYTE PTR [rcx],cl
   140006c31:	push   rdx
   140006c32:	add    dl,BYTE PTR [rax+0x1]
   140006c35:	or     al,BYTE PTR [rax+rax*1]
   140006c38:	or     dh,BYTE PTR [rsp+rcx*1]
   140006c3b:	add    BYTE PTR [rdx],cl
   140006c3d:	xchg   edx,eax
   140006c3e:	(bad)  
   140006c3f:	jo     0x140006c42
   140006c41:	adc    eax,0x74150008
   140006c46:	or     BYTE PTR [rax],al
   140006c48:	adc    eax,0x15000764
   140006c4d:	xor    al,0x6
   140006c4f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e07d87
   140006c55:	(bad)  
   140006c56:	or     al,BYTE PTR [rax]
   140006c58:	(bad)  
   140006c59:	xor    al,0x18
   140006c5b:	add    BYTE PTR [rdi],dl
   140006c5d:	rcl    BYTE PTR [rax],cl
   140006c5f:	lock (bad) 
   140006c61:	loopne 0x140006c6f
   140006c63:	ror    BYTE PTR [rdx],1
   140006c65:	ror    BYTE PTR [rax],0x70
   140006c68:	(bad)  
   140006c69:	(bad)  
   140006c6a:	(bad)  
   140006c6b:	push   rax
   140006c6c:	add    DWORD PTR [rdx],ecx
   140006c6e:	add    al,0x0
   140006c70:	or     dh,BYTE PTR [rdx+rcx*1]
   140006c73:	add    BYTE PTR [rdx],cl
   140006c75:	jb     0x140006c7d
   140006c77:	jo     0x140006c7a
   140006c79:	adc    al,0x8
   140006c7b:	add    BYTE PTR [rsp+riz*2],dl
   140006c7e:	or     al,BYTE PTR [rax]
   140006c80:	adc    al,0x54
   140006c82:	or     DWORD PTR [rax],eax
   140006c84:	adc    al,0x34
   140006c86:	or     BYTE PTR [rax],al
   140006c88:	adc    al,0x52
   140006c8a:	adc    BYTE PTR [rax+0x19],dh
   140006c8d:	xor    BYTE PTR [rbx],cl
   140006c8f:	add    BYTE PTR [rdi],bl
   140006c91:	xor    al,0x62
   140006c93:	add    BYTE PTR [rdi],bl
   140006c95:	add    DWORD PTR [rax+0x0],ebx
   140006c98:	adc    al,dh
   140006c9a:	(bad)  
   140006c9b:	loopne 0x140006ca9
   140006c9d:	ror    BYTE PTR [rdx],1
   140006c9f:	ror    BYTE PTR [rax],0x70
   140006ca2:	(bad)  
   140006ca3:	(bad)  
   140006ca4:	(bad)  
   140006ca5:	push   rax
   140006ca6:	add    BYTE PTR [rax],al
   140006ca8:	(bad)  
   140006ca9:	add    BYTE PTR [r8],r8b
   140006cac:	mov    al,0x2
   140006cae:	add    BYTE PTR [rax],al
   140006cb0:	add    DWORD PTR [rdi],ecx
   140006cb2:	add    al,0x0
   140006cb4:	sysenter 
   140006cb6:	(bad)  
   140006cb7:	add    BYTE PTR [rdi],cl
   140006cb9:	xor    cl,BYTE PTR [rbx]
   140006cbb:	jo     0x140006cbe
   140006cbd:	adc    al,0x8
   140006cbf:	add    BYTE PTR [rsp+riz*2],dl
   140006cc2:	or     BYTE PTR [rax],al
   140006cc4:	adc    al,0x54
   140006cc6:	(bad)  
   140006cc7:	add    BYTE PTR [rsp+rsi*1],dl
   140006cca:	(bad)  
   140006ccb:	add    BYTE PTR [rdx+rsi*1],dl
   140006cce:	adc    BYTE PTR [rax+0x19],dh
   140006cd1:	(bad)  
   140006cd2:	add    eax,0x50340d00
   140006cd7:	add    BYTE PTR [rip+0x6004e01],cl        # 0x14600bade
   140006cdd:	jo     0x140006cdf
   140006cdf:	add    ah,al
   140006ce1:	add    BYTE PTR [r8],r8b
   140006ce4:	(bad)  
   140006ce5:	add    al,BYTE PTR [rax]
   140006ce7:	add    BYTE PTR [rcx],al
   140006ce9:	or     al,0x4
   140006ceb:	add    BYTE PTR [rsp+rsi*1],cl
   140006cee:	or     al,BYTE PTR [rax]
   140006cf0:	or     al,0x52
   140006cf2:	or     BYTE PTR [rax+0x1],dh
   140006cf5:	add    eax,0x34050002
   140006cfa:	add    DWORD PTR [rax],eax
   140006cfc:	add    DWORD PTR [rax+rcx*1],edx
   140006cff:	add    BYTE PTR [rsp+riz*2],dl
   140006d02:	or     DWORD PTR [rax],eax
   140006d04:	adc    al,0x54
   140006d06:	or     BYTE PTR [rax],al
   140006d08:	adc    al,0x34
   140006d0a:	(bad)  
   140006d0b:	add    BYTE PTR [rdx+rsi*1],dl
   140006d0e:	adc    BYTE PTR [rax+0x1],dh
   140006d11:	and    BYTE PTR [rdx],cl
   140006d13:	add    BYTE PTR [rax],ah
   140006d15:	xor    al,0xf
   140006d17:	add    BYTE PTR [rax],ah
   140006d19:	xor    bl,BYTE PTR [rax+rsi*8]
   140006d1c:	sbb    ah,al
   140006d1e:	sbb    al,dl
   140006d20:	(bad)  
   140006d21:	rcl    BYTE PTR [rax+rsi*2],0x13
   140006d25:	(bad)  
   140006d26:	adc    dl,BYTE PTR [rax+0x1]
   140006d29:	(bad)  
   140006d2a:	add    al,BYTE PTR [rax]
   140006d2c:	(bad)  
   140006d2d:	push   rdx
   140006d2e:	add    dh,BYTE PTR [rax]
   140006d30:	sbb    DWORD PTR [rcx+rcx*1],esp
   140006d33:	add    BYTE PTR [rdx],dl
   140006d35:	add    DWORD PTR [rsi+0x0],ecx
   140006d38:	or     esi,eax
   140006d3a:	or     eax,esp
   140006d3c:	(bad)  
   140006d3d:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436071b4
   140006d44:	add    dh,BYTE PTR [rax]
   140006d46:	add    BYTE PTR [rax],al
   140006d48:	(bad)  
   140006d49:	add    BYTE PTR [r8],r8b
   140006d4c:	(bad)  
   140006d4d:	add    al,BYTE PTR [rax]
   140006d4f:	add    BYTE PTR [rcx],al
   140006d51:	(bad)  
   140006d52:	or     al,BYTE PTR [rax]
   140006d54:	(bad)  
   140006d55:	push   rsp
   140006d56:	(bad)  
   140006d57:	add    BYTE PTR [rdi],dl
   140006d59:	xor    al,0xc
   140006d5b:	add    BYTE PTR [rdi],dl
   140006d5d:	push   rdx
   140006d5e:	adc    esi,eax
   140006d60:	adc    eax,esp
   140006d62:	xadd   BYTE PTR [rip+0x1600c70],cl        # 0x1416079d9
   140006d69:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e427f6f
   140006d6f:	jo     0x140006d7e
   140006d71:	(bad)  
   140006d72:	or     al,0x50
   140006d74:	or     esi,DWORD PTR [rax]
   140006d76:	add    BYTE PTR [rax],al
   140006d78:	add    DWORD PTR [rsi],eax
   140006d7a:	add    al,BYTE PTR [rax]
   140006d7c:	(bad)  
   140006d7d:	xchg   edx,eax
   140006d7e:	add    dh,BYTE PTR [rax+0x19]
   140006d81:	(bad)  
   140006d82:	or     eax,0x1f742600
   140006d87:	add    DWORD PTR [rsi],esp
   140006d89:	fs (bad) 
   140006d8b:	add    DWORD PTR [rsi],esp
   140006d8d:	xor    al,0x1c
   140006d8f:	add    DWORD PTR [rsi],esp
   140006d91:	add    DWORD PTR [rsi],edx
   140006d93:	add    DWORD PTR [rax],ebx
   140006d95:	lock (bad) 
   140006d97:	loopne 0x140006dad
   140006d99:	rcl    BYTE PTR [rdx],1
   140006d9b:	rcl    BYTE PTR [rax],0x50
   140006d9e:	add    BYTE PTR [rax],al
   140006da0:	(bad)  
   140006da1:	add    BYTE PTR [r8],r8b
   140006da4:	movabs al,ds:0x19000a1901000008
   140006dad:	je     0x140006db8
   140006daf:	add    BYTE PTR [rcx],bl
   140006db1:	or     BYTE PTR fs:[rax],al
   140006db4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140006db8:	sbb    DWORD PTR [rsi+rax*1],esi
   140006dbb:	add    BYTE PTR [rcx],bl
   140006dbd:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1460f6fa3
   140006dc3:	add    BYTE PTR [rdi],cl
   140006dc5:	fs (bad) 
   140006dc7:	add    BYTE PTR [rdi],cl
   140006dc9:	xor    al,0x6
   140006dcb:	add    BYTE PTR [rdi],cl
   140006dcd:	xor    cl,BYTE PTR [rbx]
   140006dcf:	jo     0x140006dd2
   140006dd1:	sbb    al,0xc
   140006dd3:	add    BYTE PTR [rsp+riz*2],bl
   140006dd6:	or     al,0x0
   140006dd8:	sbb    al,0x54
   140006dda:	or     eax,DWORD PTR [rax]
   140006ddc:	sbb    al,0x34
   140006dde:	or     al,BYTE PTR [rax]
   140006de0:	sbb    al,0x32
   140006de2:	sbb    al,dh
   140006de4:	(bad)  
   140006de5:	loopne 0x140006dfb
   140006de7:	rcl    BYTE PTR [rdx],1
   140006de9:	rcl    BYTE PTR [rax],0x70
   140006dec:	add    DWORD PTR [rsi],ebx
   140006dee:	or     al,BYTE PTR [rax]
   140006df0:	(bad)  
   140006df1:	xor    al,0x10
   140006df3:	add    BYTE PTR [rsi],bl
   140006df5:	jb     0x140006e11
   140006df7:	lock sbb al,ah
   140006dfa:	(bad)  
   140006dfb:	rcl    BYTE PTR [rax+rax*8],1
   140006dfe:	adc    dh,BYTE PTR [rax+0x11]
   140006e01:	(bad)  
   140006e02:	adc    BYTE PTR [rax+0x1],dl
   140006e05:	sbb    eax,0x741d000c
   140006e0a:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d007c75
   140006e11:	push   rsp
   140006e12:	or     eax,0xc341d00
   140006e17:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0878f
   140006e1d:	loopne 0x140006e34
   140006e1f:	rol    BYTE PTR [rcx],0x1c
   140006e22:	or     al,0x0
   140006e24:	sbb    al,0x64
   140006e26:	ltr    WORD PTR [rsp+rdx*2]
   140006e2a:	(bad)  
   140006e2b:	add    BYTE PTR [rsp+rsi*1],bl
   140006e2e:	or     eax,0x18521c00
   140006e33:	lock (bad) 
   140006e35:	loopne 0x140006e4b
   140006e37:	rcl    BYTE PTR [rdx],1
   140006e39:	rcl    BYTE PTR [rax],0x70
   140006e3c:	add    DWORD PTR [rcx+rax*1],eax
   140006e3f:	add    BYTE PTR [rdx+rax*4],al
   140006e42:	add    BYTE PTR [rax],al
   140006e44:	add    DWORD PTR [rdi],eax
   140006e46:	add    DWORD PTR [rax],eax
   140006e48:	(bad)  
   140006e49:	movabs ds:0x6204000104010000,al
   140006e52:	add    BYTE PTR [rax],al
   140006e54:	or     DWORD PTR [rsi],eax
   140006e56:	add    al,BYTE PTR [rax]
   140006e58:	(bad)  
   140006e59:	xor    al,BYTE PTR [rdx]
   140006e5b:	jo     0x140006e6d
   140006e5d:	rex.WX add BYTE PTR [rax],al
   140006e60:	add    DWORD PTR [rax],eax
   140006e62:	add    BYTE PTR [rax],al
   140006e64:	rex.RX
   140006e65:	add    BYTE PTR [rax],r8b
   140006e68:	jge    0x140006eaf
   140006e6a:	add    BYTE PTR [rax],al
   140006e6c:	mov    al,0x55
   140006e6e:	add    BYTE PTR [rax],al
   140006e70:	jge    0x140006eb7
   140006e72:	add    BYTE PTR [rax],al
   140006e74:	add    DWORD PTR [rsi],eax
   140006e76:	add    al,BYTE PTR [rax]
   140006e78:	(bad)  
   140006e79:	xor    al,BYTE PTR [rdx]
   140006e7b:	xor    BYTE PTR [rcx],al
   140006e7d:	add    al,0x1
   140006e7f:	add    BYTE PTR [rdx+rax*2],al
   140006e82:	add    BYTE PTR [rax],al
   140006e84:	add    BYTE PTR [rax],al
   140006e86:	add    BYTE PTR [rax],al
   140006e88:	add    DWORD PTR [rax],eax
   140006e8a:	add    BYTE PTR [rax],al
   140006e8c:	or     DWORD PTR [rdx],ecx
   140006e8e:	add    al,0x0
   140006e90:	or     dh,BYTE PTR [rsi+rax*1]
   140006e93:	add    BYTE PTR [rdx],cl
   140006e95:	xor    al,BYTE PTR [rsi]
   140006e97:	jo     0x140006ea9
   140006e99:	rex.WX add BYTE PTR [rax],al
   140006e9c:	add    DWORD PTR [rax],eax
   140006e9e:	add    BYTE PTR [rax],al
   140006ea0:	pop    rbp
   140006ea1:	rex.RXB add BYTE PTR [r8],r8b
   140006ea4:	nop
   140006ea5:	rex.RXB add BYTE PTR [r8],r8b
   140006ea8:	rcl    BYTE PTR [rbp+0x0],1
   140006eab:	add    BYTE PTR [rax+0x1000047],dl
   140006eb1:	(bad)  
   140006eb2:	add    al,BYTE PTR [rax]
   140006eb4:	(bad)  
   140006eb5:	xor    al,BYTE PTR [rdx]
   140006eb7:	push   rax
   140006eb8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d6ec2
   140006ebe:	or     DWORD PTR [rax],eax
   140006ec0:	or     eax,0x11500632
   140006ec5:	(bad)  
   140006ec6:	add    al,BYTE PTR [rax]
   140006ec8:	(bad)  
   140006ec9:	xor    al,BYTE PTR [rdx]
   140006ecb:	xor    BYTE PTR [rax],dl
   140006ecd:	rex.WX add BYTE PTR [rax],al
   140006ed0:	add    DWORD PTR [rax],eax
   140006ed2:	add    BYTE PTR [rax],al
   140006ed4:	add    ecx,DWORD PTR [rcx+0x0]
   140006ed7:	add    BYTE PTR [rcx+0x49],ch
   140006eda:	add    BYTE PTR [rax],al
   140006edc:	lock push rbp
   140006ede:	add    BYTE PTR [rax],al
   140006ee0:	add    BYTE PTR [rax],al
   140006ee2:	add    BYTE PTR [rax],al
   140006ee4:	add    DWORD PTR [rcx],ecx
   140006ee6:	add    DWORD PTR [rax],eax
   140006ee8:	or     DWORD PTR [rdx+0x0],esp
   140006eeb:	add    BYTE PTR [rcx],al
   140006eed:	sbb    BYTE PTR [rcx],al
   140006eef:	add    BYTE PTR [rax],bl
   140006ef1:	ret    0x0
   140006ef4:	add    DWORD PTR [rdx],edx
   140006ef6:	or     BYTE PTR [rax],al
   140006ef8:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   140006efc:	adc    dh,BYTE PTR [rax+rcx*1]
   140006eff:	add    BYTE PTR [rdx],dl
   140006f01:	xor    cl,BYTE PTR [rsi]
   140006f03:	loopne 0x140006f11
   140006f05:	jo     0x140006f12
   140006f07:	(bad)  
   140006f08:	add    DWORD PTR [rdx],ecx
   140006f0a:	add    al,0x0
   140006f0c:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140006f10:	add    eax,0x19000134
   140006f15:	es add eax,0x6e341500
   140006f1b:	add    BYTE PTR [rip+0x6006c01],dl        # 0x14600db22
   140006f21:	push   rax
   140006f22:	add    BYTE PTR [rax],al
   140006f24:	(bad)  
   140006f25:	add    BYTE PTR [r8],r8b
   140006f28:	push   rax
   140006f29:	add    eax,DWORD PTR [rax]
   140006f2b:	add    BYTE PTR [rcx],dl
   140006f2d:	(bad)  
   140006f2e:	add    al,BYTE PTR [rax]
   140006f30:	(bad)  
   140006f31:	push   rdx
   140006f32:	add    dh,BYTE PTR [rax]
   140006f34:	adc    BYTE PTR [rdx+0x0],cl
   140006f37:	add    BYTE PTR [rcx],al
   140006f39:	add    BYTE PTR [rax],al
   140006f3b:	add    BYTE PTR [rsi+0x52],ah
   140006f3e:	add    BYTE PTR [rax],al
   140006f40:	mov    DWORD PTR [rdx+0x0],edx
   140006f43:	add    BYTE PTR [rbx],cl
   140006f45:	push   rsi
   140006f46:	add    BYTE PTR [rax],al
   140006f48:	add    BYTE PTR [rax],al
   140006f4a:	add    BYTE PTR [rax],al
   140006f4c:	add    DWORD PTR [rcx+rcx*1],edx
   140006f4f:	add    BYTE PTR [rdx+riz*8],dl
   140006f52:	or     eax,0x9e00bf0
   140006f57:	rol    BYTE PTR [rdi],1
   140006f59:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436073d0
   140006f60:	add    dl,BYTE PTR [rax+0x0]
   140006f63:	add    BYTE PTR [rcx],al
   140006f65:	sbb    BYTE PTR [rcx],al
   140006f67:	add    BYTE PTR [rax],bl
   140006f69:	ret    0x0
   140006f6c:	add    DWORD PTR [rax],eax
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	rex
   140006f71:	add    BYTE PTR [eax],al
   140006f74:	cwde   
   140006f75:	xchg   BYTE PTR [rax],al
   140006f77:	add    BYTE PTR [rax],bh
   140006f79:	add    BYTE PTR [rax],0x0
   140006f7c:	mov    al,0x6f
   140006f7e:	add    BYTE PTR [rax],al
   140006f80:	sub    BYTE PTR [rax+0x0],dh
	...
   140006faf:	add    BYTE PTR [rax],dl
   140006fb1:	jo     0x140006fb3
   140006fb3:	add    BYTE PTR [rax],al
   140006fb5:	add    BYTE PTR [rax],al
   140006fb7:	add    dh,bh
   140006fb9:	outs   dx,DWORD PTR ds:[rsi]
   140006fba:	add    BYTE PTR [rax],al
   140006fbc:	add    BYTE PTR [rax],al
   140006fbe:	add    BYTE PTR [rax],al
   140006fc0:	in     al,dx
   140006fc1:	outs   dx,DWORD PTR ds:[rsi]
   140006fc2:	add    BYTE PTR [rax],al
   140006fc4:	add    BYTE PTR [rax],al
   140006fc6:	add    BYTE PTR [rax],al
   140006fc8:	fsubr  DWORD PTR [rdi+0x0]
	...
   140006fd7:	add    BYTE PTR [rax],al
   140006fd9:	add    BYTE PTR [rbx+0x6f],al
   140006fdc:	rex.XB jb 0x140007044
   140006fdf:	(bad)  
   140006fe0:	je     0x140007047
   140006fe2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006fe4:	jae    0x14000705a
   140006fe6:	(bad)  
   140006fe7:	outs   dx,BYTE PTR ds:[rsi]
   140006fe8:	movsxd esp,DWORD PTR [rbp+0x0]
   140006feb:	add    BYTE PTR [rax],al
   140006fed:	add    BYTE PTR [rbx+0x6f],al
   140006ff0:	push   rbp
   140006ff1:	outs   dx,BYTE PTR ds:[rsi]
   140006ff2:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140006ff9:	imul   edi,DWORD PTR [rdx+0x65],0x0
   140007000:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007002:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007004:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000700c:	rex.RB js 0x14000700f
   14000700f:	add    BYTE PTR [rax],al
   140007011:	add    BYTE PTR [rbx+0x6f],al
   140007014:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007016:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000701e:	push   rbx
   14000701f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140007023:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x0
	...
   140007053:	add    BYTE PTR [rsi+0x563c13],ah
   140007059:	add    BYTE PTR [rax],al
   14000705b:	add    BYTE PTR [rcx+rsi*2+0x0],bh
   14000705f:	add    BYTE PTR [rcx],al
   140007061:	add    BYTE PTR [rax],al
   140007063:	add    BYTE PTR [rdx],bl
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    BYTE PTR [rdx],bl
   140007069:	add    BYTE PTR [rax],al
   14000706b:	add    BYTE PTR [rax+0x70],bh
   14000706e:	add    BYTE PTR [rax],al
   140007070:	loopne 0x1400070e2
   140007072:	add    BYTE PTR [rax],al
   140007074:	rex.W jno 0x140007077
   140007077:	add    BYTE PTR [rax+0xc000034],bl
   14000707d:	xor    eax,0x35900000
   140007082:	add    BYTE PTR [rax],al
   140007084:	shl    BYTE PTR [rip+0x36340000],1        # 0x17634708a
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	ins    BYTE PTR es:[rdi],dx
   14000708d:	add    BYTE PTR ss:[rax],al
   140007090:	sub    BYTE PTR [rcx],bh
   140007092:	add    BYTE PTR [rax],al
   140007094:	push   0xffffffffdc000039
   140007099:	cmp    DWORD PTR [rax],eax
   14000709b:	add    BYTE PTR [rdx+rdi*1+0x0],bl
   14000709f:	add    BYTE PTR [rax],ah
   1400070a1:	cmp    eax,DWORD PTR [rax]
   1400070a3:	add    BYTE PTR [rax+0x2800003b],cl
   1400070a9:	cmp    eax,0x3d380000
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	fs cmp eax,0x3db40000
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	rex.R
   1400070b9:	add    BYTE PTR ds:[rax],al
   1400070bc:	(bad)  
   1400070bd:	add    BYTE PTR ds:[rax],al
   1400070c0:	hlt    
   1400070c1:	(bad)  
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    al,0x40
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	and    BYTE PTR [rax+0x0],al
   1400070cb:	add    BYTE PTR [rax],dh
   1400070cd:	add    BYTE PTR [rax],al
   1400070d0:	push   0xffffffffa4000040
   1400070d5:	add    BYTE PTR [rax],al
   1400070d8:	sbb    BYTE PTR [rcx+0x0],al
   1400070db:	add    ah,al
   1400070dd:	rex.X add BYTE PTR [rax],al
   1400070e0:	mov    dh,BYTE PTR [rcx+0x0]
   1400070e3:	add    BYTE PTR [rdi-0x54ffff8f],bl
   1400070e9:	jno    0x1400070eb
   1400070eb:	add    BYTE PTR [rbp-0x30ffff8f],bh
   1400070f1:	jno    0x1400070f3
   1400070f3:	add    bh,bl
   1400070f5:	jno    0x1400070f7
   1400070f7:	add    bl,ch
   1400070f9:	jno    0x1400070fb
   1400070fb:	add    BYTE PTR [rax],cl
   1400070fd:	jb     0x1400070ff
   1400070ff:	add    BYTE PTR [rax],ah
   140007101:	jb     0x140007103
   140007103:	add    BYTE PTR [rdx+rsi*2],ch
   140007106:	add    BYTE PTR [rax],al
   140007108:	rex.XB jb 0x14000710b
   14000710b:	add    BYTE PTR [rbx+0x72],bl
   14000710e:	add    BYTE PTR [rax],al
   140007110:	ins    DWORD PTR es:[rdi],dx
   140007111:	jb     0x140007113
   140007113:	add    BYTE PTR [rbp-0x65ffff8e],al
   140007119:	jb     0x14000711b
   14000711b:	add    BYTE PTR [rsi-0x38ffff8e],dh
   140007121:	jb     0x140007123
   140007123:	add    al,ah
   140007125:	jb     0x140007127
   140007127:	add    ah,dh
   140007129:	jb     0x14000712b
   14000712b:	add    BYTE PTR [rax],cl
   14000712d:	jae    0x14000712f
   14000712f:	add    BYTE PTR [rbx+rsi*2],bl
   140007132:	add    BYTE PTR [rax],al
   140007134:	xor    dh,BYTE PTR [rbx+0x0]
   140007137:	add    BYTE PTR [rsi+0x73],al
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	jno    0x1400071b1
   14000713e:	add    BYTE PTR [rax],al
   140007140:	push   rbp
   140007141:	jae    0x140007143
   140007143:	add    BYTE PTR [rdx+0x73],ah
   140007146:	add    BYTE PTR [rax],al
   140007148:	add    BYTE PTR [rax],al
   14000714a:	add    DWORD PTR [rax],eax
   14000714c:	add    al,BYTE PTR [rax]
   14000714e:	add    eax,DWORD PTR [rax]
   140007150:	add    al,0x0
   140007152:	add    eax,0x7000600
   140007157:	add    BYTE PTR [rax],cl
   140007159:	add    BYTE PTR [rcx],cl
   14000715b:	add    BYTE PTR [rdx],cl
   14000715d:	add    BYTE PTR [rbx],cl
   14000715f:	add    BYTE PTR [rax+rax*1],cl
   140007162:	or     eax,0xf000e00
   140007167:	add    BYTE PTR [rax],dl
   140007169:	add    BYTE PTR [rcx],dl
   14000716b:	add    BYTE PTR [rdx],dl
   14000716d:	add    BYTE PTR [rbx],dl
   14000716f:	add    BYTE PTR [rax+rax*1],dl
   140007172:	adc    eax,0x19001600
   140007177:	add    BYTE PTR [rdi],dl
   140007179:	add    BYTE PTR [rax],bl
   14000717b:	add    BYTE PTR [rcx+0x73],ah
   14000717e:	jo     0x1400071ee
   140007180:	gs je  0x1400071e2
   140007183:	ja     0x1400071f5
   140007185:	cs gs js 0x1400071ee
   140007189:	add    BYTE PTR [rax+0x4d],dl
   14000718c:	rex.B jo 0x1400071ff
   14000718f:	outs   dx,BYTE PTR gs:[rsi]
   140007191:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140007194:	addr32 push rax
   140007196:	(bad)  
   140007197:	jb     0x1400071fa
   140007199:	ins    DWORD PTR es:[rdi],dx
   14000719a:	gs je  0x140007202
   14000719d:	jb     0x14000719f
   14000719f:	push   rax
   1400071a0:	rex.WRB
   1400071a1:	rex.XB (bad) 
   1400071a3:	ins    BYTE PTR es:[rdi],dx
   1400071a4:	ins    BYTE PTR es:[rdi],dx
   1400071a5:	rex.WB push r11
   1400071a7:	push   r8
   1400071a9:	rex.WB add BYTE PTR [r8+0x4d],dl
   1400071ad:	rex.XB ins BYTE PTR es:[rdi],dx
   1400071af:	outs   dx,DWORD PTR ds:[rsi]
   1400071b0:	jae    0x140007217
   1400071b2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400071b4:	outs   dx,BYTE PTR ds:[rsi]
   1400071b5:	outs   dx,BYTE PTR ds:[rsi]
   1400071b6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400071bb:	outs   dx,BYTE PTR ds:[rsi]
   1400071bc:	add    BYTE PTR [rax+0x4d],dl
   1400071bf:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400071c1:	outs   dx,BYTE PTR ds:[rsi]
   1400071c2:	gs push rdi
   1400071c4:	imul   esi,DWORD PTR [rax+rbp*2+0x53],0x69737365
   1400071cc:	outs   dx,DWORD PTR ds:[rsi]
   1400071cd:	outs   dx,BYTE PTR ds:[rsi]
   1400071ce:	add    BYTE PTR [rax+0x4d],dl
   1400071d1:	rex.RB ins DWORD PTR es:[rdi],dx
   1400071d3:	jo     0x140007249
   1400071d5:	jns    0x140007229
   1400071d7:	gs jae 0x14000724a
   1400071da:	outs   dx,DWORD PTR ds:[rsi]
   1400071db:	outs   dx,BYTE PTR ds:[rsi]
   1400071dc:	jae    0x140007243
   1400071de:	add    BYTE PTR [rax+0x4d],dl
   1400071e1:	rex.RX ins BYTE PTR es:[rdi],dx
   1400071e3:	jne    0x140007258
   1400071e5:	push   0x65726f43
   1400071ea:	add    BYTE PTR [rax+0x4d],dl
   1400071ed:	rex.RXB
   1400071ee:	gs je  0x140007232
   1400071f1:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x506c616e
   1400071fb:	outs   dx,DWORD PTR ds:[rsi]
   1400071fc:	jae    0x140007272
   1400071fe:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   140007202:	outs   dx,BYTE PTR ds:[rsi]
   140007203:	je     0x14000726a
   140007205:	outs   dx,BYTE PTR ds:[rsi]
   140007206:	je     0x140007208
   140007208:	push   rax
   140007209:	rex.WRB
   14000720a:	rex.RXB
   14000720b:	gs je  0x14000724f
   14000720e:	ins    BYTE PTR es:[rdi],dx
   14000720f:	ins    BYTE PTR es:[rdi],dx
   140007210:	push   rbx
   140007211:	gs jb  0x14000728a
   140007214:	gs jb  0x14000726d
   140007217:	(bad)  
   140007218:	jb     0x140007283
   14000721a:	(bad)  
   14000721b:	(bad)  
   14000721c:	ins    BYTE PTR es:[rdi],dx
   14000721d:	gs jae 0x140007220
   140007220:	push   rax
   140007221:	rex.WRB
   140007222:	rex.RXB
   140007223:	gs je  0x140007268
   140007226:	(bad)  
   140007227:	jae    0x140007292
   140007229:	movsxd esi,DWORD PTR [rbx+0x0]
   14000722c:	push   rax
   14000722d:	rex.WRB
   14000722e:	rex.RXB
   14000722f:	gs je  0x140007275
   140007232:	ins    BYTE PTR es:[rdi],dx
   140007233:	imul   esp,DWORD PTR [rbp+0x6e],0x72654374
   14000723a:	je     0x1400072a5
   14000723c:	imul   sp,WORD PTR [rbx+0x61],0x6574
   140007242:	add    BYTE PTR [rax+0x4d],dl
   140007245:	rex.RXB
   140007246:	gs je  0x14000728c
   140007249:	jne    0x1400072bd
   14000724b:	jb     0x1400072b2
   14000724d:	outs   dx,BYTE PTR ds:[rsi]
   14000724e:	je     0x1400072a0
   140007250:	jb     0x1400072c1
   140007252:	movsxd esp,DWORD PTR [rbp+0x73]
   140007255:	jae    0x1400072a0
   140007257:	outs   dx,BYTE PTR ds:[rsi]
   140007258:	outs   dx,WORD PTR ds:[rsi]
   14000725a:	add    BYTE PTR [rax+0x4d],dl
   14000725d:	rex.RXB
   14000725e:	gs je  0x1400072a9
   140007261:	imul   esi,DWORD PTR [rbx+0x74],0x5479726f
   140007268:	(bad)  
   140007269:	(bad)  
   14000726a:	ins    BYTE PTR es:[rdi],dx
   14000726b:	add    BYTE PTR gs:[rax+0x4d],dl
   14000726f:	rex.RXB
   140007270:	gs je  0x1400072bc
   140007273:	ins    DWORD PTR es:[rdi],dx
   140007274:	jo     0x1400072db
   140007276:	jb     0x1400072eb
   140007278:	outs   dx,DWORD PTR ds:[rsi]
   140007279:	outs   dx,BYTE PTR ds:[rsi]
   14000727a:	(bad)  
   14000727b:	je     0x1400072e6
   14000727d:	outs   dx,DWORD PTR ds:[rsi]
   14000727e:	outs   dx,BYTE PTR ds:[rsi]
   14000727f:	push   rsp
   140007280:	outs   dx,DWORD PTR ds:[rsi]
   140007281:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140007285:	push   rax
   140007286:	rex.WRB
   140007287:	rex.RXB
   140007288:	gs je  0x1400072d8
   14000728b:	gs ins DWORD PTR es:[rdi],dx
   14000728d:	outs   dx,DWORD PTR ds:[rsi]
   14000728e:	jb     0x140007309
   140007290:	imul   r13,QWORD PTR [rbp+0x69],0x4d6e4974
   140007298:	rex.X add BYTE PTR [rax+0x4d],dl
   14000729c:	rex.RXB
   14000729d:	gs je  0x1400072f0
   1400072a0:	jb     0x140007307
   1400072a2:	ins    BYTE PTR es:[rdi],dx
   1400072a3:	outs   dx,DWORD PTR ds:[rsi]
   1400072a4:	(bad)  
   1400072a5:	fs gs fs push rax
   1400072a9:	outs   dx,DWORD PTR ds:[rsi]
   1400072aa:	jae    0x140007320
   1400072ac:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   1400072b0:	outs   dx,BYTE PTR ds:[rsi]
   1400072b1:	je     0x140007318
   1400072b3:	outs   dx,BYTE PTR ds:[rsi]
   1400072b4:	je     0x1400072b6
   1400072b6:	push   rax
   1400072b7:	rex.WRB
   1400072b8:	rex.RXB
   1400072b9:	gs je  0x14000730d
   1400072bc:	jne    0x140007323
   1400072be:	jb     0x140007339
   1400072c0:	push   rbx
   1400072c1:	je     0x140007335
   1400072c3:	imul   ebp,DWORD PTR [rsi+0x67],0x474d5000
   1400072ca:	gs je  0x14000731e
   1400072cd:	jne    0x140007334
   1400072cf:	jb     0x14000734a
   1400072d1:	push   rbx
   1400072d2:	je     0x140007346
   1400072d4:	imul   ebp,DWORD PTR [rsi+0x67],0x42776152
   1400072db:	jns    0x140007351
   1400072dd:	gs jae 0x1400072e0
   1400072e0:	push   rax
   1400072e1:	rex.WRB
   1400072e2:	rex.RXB
   1400072e3:	gs je  0x140007339
   1400072e6:	gs jb  0x14000735f
   1400072e9:	gs jb  0x140007342
   1400072ec:	(bad)  
   1400072ed:	jb     0x140007358
   1400072ef:	(bad)  
   1400072f0:	(bad)  
   1400072f1:	ins    BYTE PTR es:[rdi],dx
   1400072f2:	add    BYTE PTR gs:[rax+0x4d],dl
   1400072f6:	rex.RXB
   1400072f7:	gs je  0x14000734d
   1400072fa:	je     0x14000735d
   1400072fc:	jb     0x140007372
   1400072fe:	push   rsp
   1400072ff:	imul   ebp,DWORD PTR [rbp+0x65],0x6d617453
   140007306:	jo     0x140007308
   140007308:	push   rax
   140007309:	rex.WRB
   14000730a:	rex.RXB
   14000730b:	gs je  0x140007362
   14000730e:	jb     0x140007371
   140007310:	movsxd esp,DWORD PTR [rbp+0x43]
   140007313:	outs   dx,DWORD PTR ds:[rsi]
   140007314:	outs   dx,BYTE PTR ds:[rsi]
   140007315:	je     0x14000737c
   140007317:	js     0x14000738d
   140007319:	rex.WB
   14000731a:	add    BYTE PTR fs:[rax+0x4d],dl
   14000731e:	rex.RXB
   14000731f:	gs je  0x140007378
   140007322:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
   140007329:	(bad)  
   14000732a:	je     0x140007394
   14000732c:	push   rsp
   14000732d:	outs   dx,DWORD PTR ds:[rsi]
   14000732e:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140007332:	push   rax
   140007333:	rex.WRB
   140007334:	rex.WB jae 0x14000737a
   140007337:	ins    BYTE PTR es:[rdi],dx
   140007338:	imul   esp,DWORD PTR [rbp+0x6e],0x6e6f4374
   14000733f:	outs   dx,BYTE PTR ds:[rsi]
   140007340:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007345:	add    BYTE PTR [rax+0x4d],dl
   140007348:	rex.WRB (bad) 
   14000734a:	jo     0x1400073a1
   14000734c:	jb     0x1400073ba
   14000734e:	push   rsp
   14000734f:	outs   dx,DWORD PTR ds:[rsi]
   140007350:	push   rax
   140007351:	(bad)  
   140007352:	je     0x1400073bc
   140007354:	add    BYTE PTR [rax+0x4d],dl
   140007357:	push   rdi
   140007358:	jb     0x1400073c3
   14000735a:	je     0x1400073c1
   14000735c:	rex.X jns 0x1400073d3
   14000735f:	gs jae 0x140007362
   140007362:	push   rax
   140007363:	rex.WRB push r15
   140007365:	jb     0x1400073d0
   140007367:	je     0x1400073ce
   140007369:	rex.W
   14000736a:	gs (bad) 
   14000736c:	fs gs jb 0x1400073e3
   140007370:	add    BYTE PTR [rax+0x4d],dl
   140007373:	push   rsp
   140007374:	jb     0x1400073d7
   140007376:	movsxd esp,DWORD PTR [rbp+0x52]
   140007379:	(bad)  
   14000737a:	imul   esi,DWORD PTR [rbx+0x65],0x6e657645
   140007381:	je     0x140007383
   140007383:	add    al,ch
   140007385:	jae    0x140007387
	...
   14000738f:	add    BYTE PTR [rdi+rsi*2+0x60000000],ch
   140007396:	add    BYTE PTR [rax],al
   140007398:	sbb    BYTE PTR [rax+rax*1+0x0],dh
	...
   1400073a4:	stos   BYTE PTR es:[rdi],al
   1400073a5:	jns    0x1400073a7
   1400073a7:	add    BYTE PTR [rax],dh
   1400073a9:	(bad)  
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	js     0x140007423
	...
   1400073b6:	add    BYTE PTR [rax],al
   1400073b8:	hlt    
   1400073b9:	jp     0x1400073bb
   1400073bb:	add    BYTE PTR [rax-0x67ffff9f],dl
   1400073c1:	jbe    0x1400073c3
	...
   1400073cb:	add    BYTE PTR [rax+0x7e],al
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	mov    al,0x62
	...
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	push   0x77
   1400073ed:	add    BYTE PTR [rax],al
   1400073ef:	add    BYTE PTR [rdx+0x77],bh
   1400073f2:	add    BYTE PTR [rax],al
   1400073f4:	add    BYTE PTR [rax],al
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	mov    BYTE PTR [rdi+0x0],dh
   1400073fb:	add    BYTE PTR [rax],al
   1400073fd:	add    BYTE PTR [rax],al
   1400073ff:	add    BYTE PTR [rax+0x77],bl
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rax+0x7e],dl
	...
   140007416:	add    BYTE PTR [rax],al
   140007418:	ds js  0x14000741b
   14000741b:	add    BYTE PTR [rax],al
   14000741d:	add    BYTE PTR [rax],al
   14000741f:	add    BYTE PTR [rax+rdi*2+0x0],dl
   140007423:	add    BYTE PTR [rax],al
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    BYTE PTR [rax+0x78],dh
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	add    BYTE PTR [rax],al
   14000742e:	add    BYTE PTR [rax],al
   140007430:	mov    BYTE PTR [rax+0x0],bh
   140007433:	add    BYTE PTR [rax],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rax+0x78],ah
   14000743d:	add    BYTE PTR [rax],al
   14000743f:	add    BYTE PTR [rdx+0x78],bh
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    dl,al
   140007449:	js     0x14000744b
   14000744b:	add    BYTE PTR [rax],al
   14000744d:	add    BYTE PTR [rax],al
   14000744f:	add    al,bl
   140007451:	js     0x140007453
   140007453:	add    BYTE PTR [rax],al
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    dl,dh
   140007459:	js     0x14000745b
   14000745b:	add    BYTE PTR [rax],al
   14000745d:	add    BYTE PTR [rax],al
   14000745f:	add    BYTE PTR [rsi],al
   140007461:	jns    0x140007463
   140007463:	add    BYTE PTR [rax],al
   140007465:	add    BYTE PTR [rax],al
   140007467:	add    BYTE PTR [rax],bl
   140007469:	jns    0x14000746b
   14000746b:	add    BYTE PTR [rax],al
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    BYTE PTR [rcx+rdi*2],ah
   140007472:	add    BYTE PTR [rax],al
   140007474:	add    BYTE PTR [rax],al
   140007476:	add    BYTE PTR [rax],al
   140007478:	xor    BYTE PTR [rcx+0x0],bh
   14000747b:	add    BYTE PTR [rax],al
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    BYTE PTR [rcx+rdi*2],bh
   140007482:	add    BYTE PTR [rax],al
   140007484:	add    BYTE PTR [rax],al
   140007486:	add    BYTE PTR [rax],al
   140007488:	rex.WX jns 0x14000748b
   14000748b:	add    BYTE PTR [rax],al
   14000748d:	add    BYTE PTR [rax],al
   14000748f:	add    BYTE PTR [rax+0x79],ah
   140007492:	add    BYTE PTR [rax],al
   140007494:	add    BYTE PTR [rax],al
   140007496:	add    BYTE PTR [rax],al
   140007498:	outs   dx,BYTE PTR ds:[rsi]
   140007499:	jns    0x14000749b
   14000749b:	add    BYTE PTR [rax],al
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rdx+0x79],al
   1400074a5:	add    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rax+rdi*2],ah
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	add    BYTE PTR [rax],al
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	jl     0x140007531
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	add    BYTE PTR [rax],al
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	push   rsp
   1400074b9:	jg     0x1400074bb
   1400074bb:	add    BYTE PTR [rax],al
   1400074bd:	add    BYTE PTR [rax],al
   1400074bf:	add    BYTE PTR [rdi+rdi*2+0x0],al
   1400074c3:	add    BYTE PTR [rax],al
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    BYTE PTR [rsi],dh
   1400074c9:	jg     0x1400074cb
   1400074cb:	add    BYTE PTR [rax],al
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rsi],ah
   1400074d1:	jg     0x1400074d3
   1400074d3:	add    BYTE PTR [rax],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rax],dl
   1400074d9:	jg     0x1400074db
   1400074db:	add    BYTE PTR [rax],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    BYTE PTR [rdi+rdi*2],al
   1400074e2:	add    BYTE PTR [rax],al
   1400074e4:	add    BYTE PTR [rax],al
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	clc    
   1400074e9:	jle    0x1400074eb
   1400074eb:	add    BYTE PTR [rax],al
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    dh,ah
   1400074f1:	jle    0x1400074f3
   1400074f3:	add    BYTE PTR [rax],al
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    dl,cl
   1400074f9:	jle    0x1400074fb
   1400074fb:	add    BYTE PTR [rax],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rsi+0x7e],dh
   140007505:	add    BYTE PTR [rax],al
   140007507:	add    BYTE PTR [rsi+0x7e],ah
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rax+0x7e],dl
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rsi+0x7e],dh
   14000751a:	add    BYTE PTR [rax],al
   14000751c:	add    BYTE PTR [rax],al
   14000751e:	add    BYTE PTR [rax],al
   140007520:	data16 jle 0x140007523
   140007523:	add    BYTE PTR [rax],al
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    BYTE PTR [rax+rdi*2],dl
   14000752a:	add    BYTE PTR [rax],al
   14000752c:	add    BYTE PTR [rax],al
   14000752e:	add    BYTE PTR [rax],al
   140007530:	cld    
   140007531:	ja     0x140007533
   140007533:	add    BYTE PTR [rax],al
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    dh,ch
   140007539:	ja     0x14000753b
   14000753b:	add    BYTE PTR [rax],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    al,ah
   140007541:	ja     0x140007543
   140007543:	add    BYTE PTR [rax],al
   140007545:	add    BYTE PTR [rax],al
   140007547:	add    ah,dl
   140007549:	ja     0x14000754b
   14000754b:	add    BYTE PTR [rax],al
   14000754d:	add    BYTE PTR [rax],al
   14000754f:	add    al,cl
   140007551:	ja     0x140007553
   140007553:	add    BYTE PTR [rax],al
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rdx+0x77],bh
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rax+0x79],dl
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    BYTE PTR [rsi+0x7f],cl
	...
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rax+0x7b],dl
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rdx+0x7b],ch
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rdx+0x7b],bh
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	add    BYTE PTR [rax],al
   14000758e:	add    BYTE PTR [rax],al
   140007590:	mov    eax,0x79
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    dl,al
   140007599:	jns    0x14000759b
   14000759b:	add    BYTE PTR [rax],al
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    ah,cl
   1400075a1:	jns    0x1400075a3
   1400075a3:	add    BYTE PTR [rax],al
   1400075a5:	add    BYTE PTR [rax],al
   1400075a7:	add    dh,dl
   1400075a9:	jns    0x1400075ab
   1400075ab:	add    BYTE PTR [rax],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    al,ah
   1400075b1:	jns    0x1400075b3
   1400075b3:	add    BYTE PTR [rax],al
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    al,ch
   1400075b9:	jns    0x1400075bb
   1400075bb:	add    BYTE PTR [rax],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    dl,dh
   1400075c1:	jns    0x1400075c3
   1400075c3:	add    BYTE PTR [rax],al
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rax],al
   1400075c9:	jp     0x1400075cb
   1400075cb:	add    BYTE PTR [rax],al
   1400075cd:	add    BYTE PTR [rax],al
   1400075cf:	add    BYTE PTR [rax],dl
   1400075d1:	jp     0x1400075d3
   1400075d3:	add    BYTE PTR [rax],al
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    BYTE PTR [rdx],bl
   1400075d9:	jp     0x1400075db
   1400075db:	add    BYTE PTR [rax],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rax],ch
   1400075e1:	jp     0x1400075e3
   1400075e3:	add    BYTE PTR [rax],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rsi],dh
   1400075e9:	jp     0x1400075eb
   1400075eb:	add    BYTE PTR [rax],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax+0x7a],cl
   1400075f2:	add    BYTE PTR [rax],al
   1400075f4:	add    BYTE PTR [rax],al
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	pop    rdx
   1400075f9:	jp     0x1400075fb
   1400075fb:	add    BYTE PTR [rax],al
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rdx+0x7a],ah
   140007602:	add    BYTE PTR [rax],al
   140007604:	add    BYTE PTR [rax],al
   140007606:	add    BYTE PTR [rax],al
   140007608:	push   0x7a
   14000760a:	add    BYTE PTR [rax],al
   14000760c:	add    BYTE PTR [rax],al
   14000760e:	add    BYTE PTR [rax],al
   140007610:	je     0x14000768c
   140007612:	add    BYTE PTR [rax],al
   140007614:	add    BYTE PTR [rax],al
   140007616:	add    BYTE PTR [rax],al
   140007618:	mov    bh,BYTE PTR [rdx+0x0]
   14000761b:	add    BYTE PTR [rax],al
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rsi+0x7a],bl
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rax+0x7b],dh
   14000762a:	add    BYTE PTR [rax],al
   14000762c:	add    BYTE PTR [rax],al
   14000762e:	add    BYTE PTR [rax],al
   140007630:	(bad)  
   140007631:	jnp    0x140007633
   140007633:	add    BYTE PTR [rax],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rbx+rdi*2+0x0],dl
   14000763b:	add    BYTE PTR [rax],al
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    BYTE PTR [rdx+0x7b],cl
   140007642:	add    BYTE PTR [rax],al
   140007644:	add    BYTE PTR [rax],al
   140007646:	add    BYTE PTR [rax],al
   140007648:	rex.X jnp 0x14000764b
   14000764b:	add    BYTE PTR [rax],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rsi],bl
   140007651:	jnp    0x140007653
   140007653:	add    BYTE PTR [rax],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rdx],cl
   140007659:	jnp    0x14000765b
   14000765b:	add    BYTE PTR [rax],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    al,ch
   140007661:	jp     0x140007663
   140007663:	add    BYTE PTR [rax],al
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    dh,bl
   140007669:	jp     0x14000766b
   14000766b:	add    BYTE PTR [rax],al
   14000766d:	add    BYTE PTR [rax],al
   14000766f:	add    al,dl
   140007671:	jp     0x140007673
   140007673:	add    BYTE PTR [rax],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rax+0x7a],bh
   14000767d:	add    BYTE PTR [rax],al
   14000767f:	add    BYTE PTR [rdx+rdi*2+0x0],ch
   140007686:	add    BYTE PTR [rax],al
   140007688:	ret    0x7b
	...
   140007697:	add    al,cl
   140007699:	jge    0x14000769b
   14000769b:	add    BYTE PTR [rax],al
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    BYTE PTR [rsi+0x7d],ch
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rax+0x7d],ah
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax+0x7d],cl
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    BYTE PTR [rsi+0x7d],ch
   1400076ba:	add    BYTE PTR [rax],al
   1400076bc:	add    BYTE PTR [rax],al
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	push   rsi
   1400076c1:	jge    0x1400076c3
   1400076c3:	add    BYTE PTR [rax],al
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    BYTE PTR [rdx],bh
   1400076c9:	jge    0x1400076cb
   1400076cb:	add    BYTE PTR [rax],al
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    BYTE PTR [rax],bl
   1400076d1:	jge    0x1400076d3
   1400076d3:	add    BYTE PTR [rax],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    dh,bh
   1400076d9:	jl     0x1400076db
   1400076db:	add    BYTE PTR [rax],al
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    ah,ah
   1400076e1:	jge    0x1400076e3
   1400076e3:	add    BYTE PTR [rax],al
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    al,bl
   1400076e9:	jl     0x1400076eb
   1400076eb:	add    BYTE PTR [rax],al
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    ah,al
   1400076f1:	jl     0x1400076f3
   1400076f3:	add    BYTE PTR [rax],al
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    BYTE PTR [rsp+rdi*2+0x0],dh
   1400076fe:	add    BYTE PTR [rax],al
   140007700:	movabs ds:0x840000000000007c,al
   140007709:	jl     0x14000770b
   14000770b:	add    BYTE PTR [rax],al
   14000770d:	add    BYTE PTR [rax],al
   14000770f:	add    BYTE PTR [rsi+0x7c],ah
   140007712:	add    BYTE PTR [rax],al
   140007714:	add    BYTE PTR [rax],al
   140007716:	add    BYTE PTR [rax],al
   140007718:	rex.W jl 0x14000771b
   14000771b:	add    BYTE PTR [rax],al
   14000771d:	add    BYTE PTR [rax],al
   14000771f:	add    BYTE PTR [rax],dh
   140007721:	jl     0x140007723
   140007723:	add    BYTE PTR [rax],al
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rax],bl
   140007729:	jl     0x14000772b
   14000772b:	add    BYTE PTR [rax],al
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    ah,bh
   140007731:	jnp    0x140007733
   140007733:	add    BYTE PTR [rax],al
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    BYTE PTR [rax],al
   140007739:	jle    0x14000773b
   14000773b:	add    BYTE PTR [rax],al
   14000773d:	add    BYTE PTR [rax],al
   14000773f:	add    BYTE PTR [rsi],ah
   140007741:	jle    0x140007743
   140007743:	add    BYTE PTR [rax],al
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    dl,ch
   140007749:	jl     0x14000774b
   14000774b:	add    BYTE PTR [rax],al
   14000774d:	add    BYTE PTR [rax],al
   14000774f:	add    BYTE PTR [rsi+0x7f],ch
   140007752:	add    BYTE PTR [rax],al
   140007754:	add    BYTE PTR [rax],al
   140007756:	add    BYTE PTR [rax],al
   140007758:	loopne 0x1400077d5
	...
   140007766:	add    BYTE PTR [rax],al
   140007768:	out    dx,al
   140007769:	add    dl,BYTE PTR [rbx+0x65]
   14000776c:	je     0x1400077c2
   14000776e:	push   0x64616572
   140007773:	push   rsp
   140007774:	outs   dx,DWORD PTR ds:[rsi]
   140007775:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140007779:	add    BYTE PTR [rax+0x2],bl
   14000777c:	push   rdx
   14000777d:	gs rex.XB ins BYTE PTR es:[edi],dx
   140007781:	outs   dx,DWORD PTR ds:[rsi]
   140007782:	jae    0x1400077e9
   140007784:	rex.WXB
   140007785:	gs jns 0x140007788
   140007788:	mov    DWORD PTR [rdx],eax
   14000778a:	push   rdx
   14000778b:	gs addr32 rex.WRXB jo 0x1400077f5
   140007790:	outs   dx,BYTE PTR ds:[rsi]
   140007791:	rex.WXB
   140007792:	gs jns 0x1400077da
   140007795:	js     0x1400077ee
   140007797:	add    BYTE PTR [rsi+0x67655202],dl
   14000779d:	push   rcx
   14000779e:	jne    0x140007805
   1400077a0:	jb     0x14000781b
   1400077a2:	push   rsi
   1400077a3:	(bad)  
   1400077a4:	ins    BYTE PTR es:[rdi],dx
   1400077a5:	jne    0x14000780c
   1400077a7:	rex.RB js 0x140007801
   1400077aa:	add    BYTE PTR [rax],al
   1400077ac:	rex.B
   1400077ad:	rex.R push rsi
   1400077af:	push   r8
   1400077b1:	xor    rsi,QWORD PTR [r10]
   1400077b4:	cs fs ins BYTE PTR es:[rdi],dx
   1400077b7:	ins    BYTE PTR es:[rdi],dx
   1400077b8:	add    BYTE PTR [rax],al
   1400077ba:	(bad)  
   1400077bb:	add    BYTE PTR [rbx+0x72],al
   1400077be:	gs (bad) 
   1400077c0:	je     0x140007827
   1400077c2:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x52045c00
   1400077cb:	gs (bad) 
   1400077cd:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x57060100
   1400077d7:	jb     0x140007842
   1400077d9:	je     0x140007840
   1400077db:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65440115
   1400077e4:	(bad)  
   1400077e5:	jne    0x14000784e
   1400077e7:	rex.X jb 0x14000784f
   1400077ea:	(bad)  
   1400077eb:	imul   eax,DWORD PTR [rax],0x0
   1400077ee:	mov    es,WORD PTR [rax]
   1400077f0:	rex.XB ins BYTE PTR es:[rdi],dx
   1400077f2:	outs   dx,DWORD PTR ds:[rsi]
   1400077f3:	jae    0x14000785a
   1400077f5:	rex.W (bad) 
   1400077f7:	outs   dx,BYTE PTR ds:[rsi]
   1400077f8:	fs ins BYTE PTR es:[rdi],dx
   1400077fa:	add    BYTE PTR gs:[rdx+rax*1+0x47],ch
   1400077ff:	gs je  0x14000784a
   140007802:	(bad)  
   140007803:	outs   dx,BYTE PTR ds:[rsi]
   140007804:	fs ins BYTE PTR es:[rdi],dx
   140007806:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140007809:	outs   dx,WORD PTR ds:[rsi]
   14000780b:	jb     0x14000787a
   14000780d:	(bad)  
   14000780e:	je     0x140007879
   140007810:	outs   dx,DWORD PTR ds:[rsi]
   140007811:	outs   dx,BYTE PTR ds:[rsi]
   140007812:	add    BYTE PTR [rax],al
   140007814:	jo     0x140007818
   140007816:	rex.RXB
   140007817:	gs je  0x140007866
   14000781a:	(bad)  
   14000781b:	jae    0x140007891
   14000781d:	rex.RB jb 0x140007892
   140007820:	outs   dx,DWORD PTR ds:[rsi]
   140007821:	jb     0x140007823
   140007823:	add    BYTE PTR [rsi],ch
   140007825:	add    eax,0x4e746553
   14000782a:	(bad)  
   14000782b:	ins    DWORD PTR es:[rdi],dx
   14000782c:	gs fs push rax
   14000782f:	imul   esi,DWORD PTR [rax+0x65],0x646e6148
   140007836:	ins    BYTE PTR es:[rdi],dx
   140007837:	gs push rbx
   140007839:	je     0x14000789c
   14000783b:	je     0x1400078a2
   14000783d:	add    BYTE PTR [rax+0x74654702],ch
   140007843:	rex.WRXB jbe 0x1400078ab
   140007846:	jb     0x1400078b4
   140007848:	(bad)  
   140007849:	jo     0x1400078bb
   14000784b:	gs fs push rdx
   14000784e:	gs jae 0x1400078c6
   140007851:	ins    BYTE PTR es:[rdi],dx
   140007852:	je     0x140007854
   140007854:	outs   dx,BYTE PTR ds:[rsi]
   140007855:	add    ecx,DWORD PTR [rcx+0x6e]
   140007858:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007860:	rex.XB jb 0x1400078cc
   140007863:	je     0x1400078ce
   140007865:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007868:	push   rbx
   140007869:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000786e:	outs   dx,BYTE PTR ds:[rsi]
   14000786f:	add    BYTE PTR [rcx+rax*1+0x45],al
   140007873:	outs   dx,BYTE PTR ds:[rsi]
   140007874:	je     0x1400078db
   140007876:	jb     0x1400078bb
   140007878:	jb     0x1400078e3
   14000787a:	je     0x1400078e5
   14000787c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000787f:	push   rbx
   140007880:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007885:	outs   dx,BYTE PTR ds:[rsi]
   140007886:	add    BYTE PTR [rax],al
   140007888:	rol    BYTE PTR [rbx],0x4c
   14000788b:	gs (bad) 
   14000788d:	jbe    0x1400078f4
   14000788f:	rex.XB jb 0x1400078fb
   140007892:	je     0x1400078fd
   140007894:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007897:	push   rbx
   140007898:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000789d:	outs   dx,BYTE PTR ds:[rsi]
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	cdq    
   1400078a1:	add    eax,0x45797254
   1400078a6:	outs   dx,BYTE PTR ds:[rsi]
   1400078a7:	je     0x14000790e
   1400078a9:	jb     0x1400078ee
   1400078ab:	jb     0x140007916
   1400078ad:	je     0x140007918
   1400078af:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400078b2:	push   rbx
   1400078b3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400078b8:	outs   dx,BYTE PTR ds:[rsi]
   1400078b9:	add    BYTE PTR [rsi+0x5],ch
   1400078bc:	push   rbx
   1400078bd:	ins    BYTE PTR es:[rdi],dx
   1400078be:	gs gs jo 0x1400078c2
   1400078c2:	sub    al,BYTE PTR [rdx]
   1400078c4:	rex.RXB
   1400078c5:	gs je  0x14000790b
   1400078c8:	jne    0x14000793c
   1400078ca:	jb     0x140007931
   1400078cc:	outs   dx,BYTE PTR ds:[rsi]
   1400078cd:	je     0x14000791f
   1400078cf:	jb     0x140007940
   1400078d1:	movsxd esp,DWORD PTR [rbp+0x73]
   1400078d4:	jae    0x14000791f
   1400078d6:	fs add bl,bh
   1400078d9:	add    al,BYTE PTR [rdi+0x65]
   1400078dc:	je     0x140007931
   1400078de:	jns    0x140007953
   1400078e0:	je     0x140007947
   1400078e2:	ins    DWORD PTR es:[rdi],dx
   1400078e3:	push   rsp
   1400078e4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400078eb:	ins    BYTE PTR es:[rdi],dx
   1400078ec:	gs push rsp
   1400078ee:	imul   ebp,DWORD PTR [rbp+0x65],0x47028700
   1400078f5:	gs je  0x140007945
   1400078f8:	outs   dx,DWORD PTR ds:[rsi]
   1400078f9:	fs jne 0x140007968
   1400078fc:	gs rex.W (bad) 
   1400078ff:	outs   dx,BYTE PTR ds:[rsi]
   140007900:	fs ins BYTE PTR es:[rdi],dx
   140007902:	gs push rdi
   140007904:	add    BYTE PTR [rax],al
   140007906:	mov    esp,0x74654702
   14000790b:	push   rax
   14000790c:	jb     0x14000797d
   14000790e:	movsxd eax,DWORD PTR [rcx+0x64]
   140007911:	fs jb  0x140007979
   140007914:	jae    0x140007989
   140007916:	add    BYTE PTR [rax],al
   140007918:	xor    BYTE PTR [rsi],al
   14000791a:	ins    BYTE PTR es:[rdi],dx
   14000791b:	jae    0x140007991
   14000791d:	jb     0x14000798b
   14000791f:	outs   dx,BYTE PTR gs:[rsi]
   140007921:	add    BYTE PTR [r8],al
   140007924:	xor    DWORD PTR [rsi],eax
   140007926:	ins    BYTE PTR es:[rdi],dx
   140007927:	jae    0x14000799d
   140007929:	jb     0x140007997
   14000792b:	outs   dx,BYTE PTR gs:[rsi]
   14000792d:	push   rdi
   14000792e:	add    BYTE PTR [rax],al
   140007930:	or     eax,DWORD PTR [rip+0x45746553]        # 0x18574de89
   140007936:	jbe    0x14000799d
   140007938:	outs   dx,BYTE PTR ds:[rsi]
   140007939:	je     0x14000793b
   14000793b:	add    BYTE PTR [rdx+0x73655204],dh
   140007941:	gs je  0x140007989
   140007944:	jbe    0x1400079ab
   140007946:	outs   dx,BYTE PTR ds:[rsi]
   140007947:	je     0x140007949
   140007949:	add    bl,cl
   14000794b:	add    eax,0x74696157
   140007950:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140007952:	jb     0x1400079a7
   140007954:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14000795b:	push   0x65
   14000795d:	movsxd esi,DWORD PTR [rax+rax*1-0x1]
   140007961:	add    ecx,DWORD PTR [rdi+0x70]
   140007964:	outs   dx,BYTE PTR gs:[rsi]
   140007966:	rex.RB jbe 0x1400079ce
   140007969:	outs   dx,BYTE PTR ds:[rsi]
   14000796a:	je     0x1400079c3
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	sub    DWORD PTR [rdx],eax
   140007970:	rex.RXB
   140007971:	gs je  0x1400079b7
   140007974:	jne    0x1400079e8
   140007976:	jb     0x1400079dd
   140007978:	outs   dx,BYTE PTR ds:[rsi]
   140007979:	je     0x1400079cb
   14000797b:	jb     0x1400079ec
   14000797d:	movsxd esp,DWORD PTR [rbp+0x73]
   140007980:	jae    0x140007982
   140007982:	jae    0x140007985
   140007984:	rex.RB js 0x1400079f0
   140007987:	je     0x1400079d9
   140007989:	jb     0x1400079fa
   14000798b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000798e:	jae    0x140007990
   140007990:	xor    BYTE PTR [rip+0x50746553],al        # 0x19074dee9
   140007996:	jb     0x140007a07
   140007998:	movsxd esp,DWORD PTR [rbp+0x73]
   14000799b:	jae    0x1400079de
   14000799d:	data16 imul bp,WORD PTR [rsi+0x69],0x7974
   1400079a4:	rex.WRB (bad) 
   1400079a6:	jae    0x140007a13
   1400079a8:	add    BYTE PTR [rax],al
   1400079aa:	rex.WXB
   1400079ab:	rex.RB push r10
   1400079ad:	rex.WRX
   1400079ae:	rex.RB
   1400079af:	xor    r14,QWORD PTR [rdx]
   1400079b2:	cs fs ins BYTE PTR es:[rdi],dx
   1400079b5:	ins    BYTE PTR es:[rdi],dx
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	mov    ch,0x6
   1400079ba:	ins    DWORD PTR es:[rdi],dx
   1400079bb:	gs ins DWORD PTR es:[rdi],dx
   1400079bd:	movsxd esi,DWORD PTR [rax+0x79]
   1400079c0:	add    BYTE PTR [rax],al
   1400079c2:	mov    ecx,0x6d656d06
   1400079c7:	jae    0x140007a2e
   1400079c9:	je     0x1400079cb
   1400079cb:	add    BYTE PTR [rdx+0x3],cl
   1400079ce:	pop    rdi
   1400079cf:	imul   esi,DWORD PTR [rdi+rbp*2+0x77],0x7600735f
   1400079d7:	(bad)  
   1400079d8:	ja     0x140007a3d
   1400079da:	jae    0x140007a50
   1400079dc:	outs   dx,DWORD PTR ds:[rsi]
   1400079dd:	jne    0x140007a4b
   1400079df:	add    BYTE PTR [rcx+0x74775f05],dl
   1400079e5:	outs   dx,DWORD PTR ds:[rsi]
   1400079e6:	imul   eax,DWORD PTR [rax],0x727006ce
   1400079ec:	imul   ebp,DWORD PTR [rsi+0x74],0xf2000066
   1400079f3:	add    al,0x5f
   1400079f5:	jbe    0x140007a6a
   1400079f7:	outs   dx,BYTE PTR ds:[rsi]
   1400079f8:	ja     0x140007a6a
   1400079fa:	jb     0x140007a65
   1400079fc:	outs   dx,BYTE PTR ds:[rsi]
   1400079fd:	je     0x140007a65
   1400079ff:	add    BYTE PTR [rcx],al
   140007a01:	add    bl,BYTE PTR [rdi+0x62]
   140007a04:	imul   ebp,DWORD PTR gs:[esi+0x74],0x61657268
   140007a0d:	add    BYTE PTR fs:[rax],al
   140007a10:	add    eax,0x72747307
   140007a15:	movsxd ebp,DWORD PTR [rbp+0x70]
   140007a18:	add    BYTE PTR [rax],al
   140007a1a:	pop    rax
   140007a1b:	add    DWORD PTR [rdi+0x58],ebx
   140007a1e:	movsxd esi,DWORD PTR [rax+0x74]
   140007a21:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1f20072
   140007a2a:	pop    rdi
   140007a2b:	(bad)  
   140007a2c:	ins    DWORD PTR es:[rdi],dx
   140007a2d:	jae    0x140007a96
   140007a2f:	pop    rdi
   140007a30:	gs js  0x140007a9c
   140007a33:	je     0x140007a35
   140007a35:	add    ah,ah
   140007a37:	add    DWORD PTR [rdi+0x5f],ebx
   140007a3a:	ja     0x140007aa3
   140007a3c:	gs je  0x140007aac
   140007a3f:	(bad)  
   140007a40:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140007a47:	add    dh,cl
   140007a49:	add    DWORD PTR [rdi+0x5f],ebx
   140007a4c:	jae    0x140007ab3
   140007a4e:	je     0x140007aaf
   140007a50:	(bad)  
   140007a51:	jo     0x140007ac3
   140007a53:	pop    rdi
   140007a54:	je     0x140007acf
   140007a56:	jo     0x140007abd
   140007a58:	add    BYTE PTR [rax],al
   140007a5a:	sbb    BYTE PTR [rsi],al
   140007a5c:	gs js  0x140007ac8
   140007a5f:	je     0x140007a61
   140007a61:	add    BYTE PTR [rax+0x2],bl
   140007a64:	pop    rdi
   140007a65:	gs js  0x140007ad1
   140007a68:	je     0x140007a6a
   140007a6a:	or     al,BYTE PTR [rdx]
   140007a6c:	pop    rdi
   140007a6d:	movsxd esp,DWORD PTR [rbp+0x78]
   140007a70:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   140007a78:	outs   dx,DWORD PTR ds:[rsi]
   140007a79:	outs   dx,BYTE PTR ds:[rsi]
   140007a7a:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140007a80:	gs (bad) 
   140007a82:	fs ins BYTE PTR es:[rdi],dx
   140007a84:	outs   dx,DWORD PTR ds:[rsi]
   140007a85:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007a88:	gs add al,dl
   140007a8b:	add    DWORD PTR [rdi+0x5f],ebx
   140007a8e:	jae    0x140007af5
   140007a90:	je     0x140007b07
   140007a92:	jae    0x140007af9
   140007a94:	jb     0x140007b03
   140007a96:	(bad)  
   140007a97:	je     0x140007b01
   140007a99:	gs jb  0x140007b0e
   140007a9c:	add    BYTE PTR [rax],al
   140007a9e:	loop   0x140007aa2
   140007aa0:	pop    rdi
   140007aa1:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140007aa8:	ins    DWORD PTR es:[rdi],dx
   140007aa9:	pop    rdi
   140007aaa:	gs add cl,ah
   140007aad:	add    bl,BYTE PTR [rdi+0x69]
   140007ab0:	outs   dx,BYTE PTR ds:[rsi]
   140007ab1:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x5c006d72
   140007ab9:	add    DWORD PTR [rdi+0x5f],ebx
   140007abc:	rex.XB pop r15
   140007abe:	jae    0x140007b30
   140007ac0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140007ac4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140007acb:	ins    BYTE PTR es:[rdi],dx
   140007acc:	gs jb  0x140007acf
   140007acf:	add    ch,ah
   140007ad1:	add    DWORD PTR [rdi+0x5f],ebx
   140007ad4:	ja     0x140007b3f
   140007ad6:	outs   dx,BYTE PTR ds:[rsi]
   140007ad7:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x78000076
   140007adf:	add    bl,BYTE PTR [rdi+0x66]
   140007ae2:	ins    DWORD PTR es:[rdi],dx
   140007ae3:	outs   dx,DWORD PTR ds:[rsi]
   140007ae4:	fs add BYTE PTR gs:[rax],al
   140007ae8:	sbb    DWORD PTR [rdx],eax
   140007aea:	pop    rdi
   140007aeb:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007aee:	ins    DWORD PTR es:[rdi],dx
   140007aef:	outs   dx,DWORD PTR ds:[rsi]
   140007af0:	fs add BYTE PTR gs:[rax],al
   140007af4:	rex.WRB push r11
   140007af6:	push   rsi
   140007af7:	rex.XB push r10
   140007af9:	xor    DWORD PTR [rdx],esi
   140007afb:	xor    BYTE PTR [rdi+0x43],bl
   140007afe:	rex.WR push rdx
   140007b00:	xor    BYTE PTR [rax+rsi*1],dh
   140007b03:	xor    BYTE PTR [rsi],ch
   140007b05:	fs ins BYTE PTR es:[rdi],dx
   140007b07:	ins    BYTE PTR es:[rdi],dx
   140007b08:	add    BYTE PTR [rax],al
   140007b0a:	xor    eax,DWORD PTR [rcx]
   140007b0c:	(bad)  
   140007b0d:	je     0x140007b74
   140007b0f:	jb     0x140007b7e
   140007b11:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140007b18:	pop    rcx
   140007b19:	pop    r8
   140007b1b:	pop    rax
   140007b1c:	pop    rdx
   140007b1d:	add    BYTE PTR [rcx+0x635f5f01],bl
   140007b23:	jb     0x140007b99
   140007b25:	push   rbx
   140007b26:	gs je  0x140007b7e
   140007b29:	outs   dx,BYTE PTR ds:[rsi]
   140007b2a:	push   0x6c646e61
   140007b2f:	gs fs rex.RB js 0x140007b97
   140007b34:	gs jo  0x140007bab
   140007b37:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140007b3e:	gs jb  0x140007b41
   140007b41:	add    BYTE PTR [rbx+0x3],bl
   140007b44:	pop    rdi
   140007b45:	ins    BYTE PTR es:[rdi],dx
   140007b46:	outs   dx,DWORD PTR ds:[rsi]
   140007b47:	movsxd ebp,DWORD PTR [rbx+0x0]
   140007b4a:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   140007b51:	movsxd ebp,DWORD PTR [rbx+0x0]
   140007b54:	or     DWORD PTR [rdx],eax
   140007b56:	pop    rdi
   140007b57:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007b5a:	ins    BYTE PTR es:[rdi],dx
   140007b5b:	outs   dx,DWORD PTR ds:[rsi]
   140007b5c:	movsxd ebx,DWORD PTR [rdi+0x63]
   140007b5f:	jb     0x140007bd5
   140007b61:	add    BYTE PTR [rdi+0x645f5f01],bl
   140007b67:	ins    BYTE PTR es:[rdi],dx
   140007b68:	ins    BYTE PTR es:[rdi],dx
   140007b69:	outs   dx,DWORD PTR ds:[rsi]
   140007b6a:	outs   dx,BYTE PTR ds:[rsi]
   140007b6b:	gs js  0x140007bd7
   140007b6e:	je     0x140007b70
   140007b70:	add    al,BYTE PTR [rdi+rbx*2]
   140007b73:	outs   dx,DWORD PTR ds:[rsi]
   140007b74:	outs   dx,BYTE PTR ds:[rsi]
   140007b75:	gs js  0x140007be1
   140007b78:	je     0x140007b7a
   140007b7a:	popf   
   140007b7b:	add    DWORD PTR [rdi+0x5f],ebx
   140007b7e:	movsxd esi,DWORD PTR [rdx+0x74]
   140007b81:	pop    rdi
   140007b82:	fs gs (bad) 
   140007b85:	jne    0x140007bee
   140007b87:	addr32 gs jb 0x140007bea
   140007b8b:	push   0x6b6f6f
   140007b90:	pushf  
   140007b91:	add    DWORD PTR [rdi+0x5f],ebx
   140007b94:	movsxd esi,DWORD PTR [rdx+0x74]
   140007b97:	push   rbp
   140007b98:	outs   dx,BYTE PTR ds:[rsi]
   140007b99:	push   0x6c646e61
   140007b9e:	gs fs rex.RB js 0x140007c06
   140007ba3:	gs jo  0x140007c1a
   140007ba6:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f019b00
   140007bad:	pop    rdi
   140007bae:	movsxd esi,DWORD PTR [rdx+0x74]
   140007bb1:	push   rsp
   140007bb2:	gs jb  0x140007c22
   140007bb5:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140007bbc:	outs   dx,DWORD PTR ds:[rsi]
   140007bbd:	movsxd esp,DWORD PTR [rbp+0x73]
   140007bc0:	jae    0x140007bc2
   140007bc2:	jle    0x140007bc5
   140007bc4:	pop    rdi
   140007bc5:	pop    rdi
   140007bc6:	movsxd esi,DWORD PTR [rdx+0x74]
   140007bc9:	rex.XB (bad) 
   140007bcb:	jo     0x140007c41
   140007bcd:	jne    0x140007c41
   140007bcf:	gs push rax
   140007bd1:	jb     0x140007c38
   140007bd3:	jbe    0x140007c3e
   140007bd5:	outs   dx,DWORD PTR ds:[rsi]
   140007bd6:	jne    0x140007c4b
   140007bd8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007bda:	outs   dx,BYTE PTR ds:[rsi]
   140007bdb:	je     0x140007c42
   140007bdd:	js     0x140007c53
   140007bdf:	add    BYTE PTR [rdi],dh
   140007be1:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   140007be5:	imul   r12,QWORD PTR fs:[rdx+0x72],0x55797261
   140007bee:	jae    0x140007c59
   140007bf0:	outs   dx,BYTE PTR ds:[rsi]
   140007bf1:	addr32 rex.RX jne 0x140007c61
   140007bf5:	ins    BYTE PTR es:[rdi],dx
   140007bf6:	push   rax
   140007bf7:	(bad)  
   140007bf8:	je     0x140007c62
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	mov    al,0x1
   140007bfe:	rex.B je 0x140007c75
   140007c01:	(bad)  
   140007c02:	movsxd ebp,DWORD PTR [rax+0x48]
   140007c05:	(bad)  
   140007c06:	outs   dx,BYTE PTR ds:[rsi]
   140007c07:	fs ins BYTE PTR es:[rdi],dx
   140007c09:	gs push rsp
   140007c0b:	outs   dx,DWORD PTR ds:[rsi]
   140007c0c:	push   rsp
   140007c0d:	push   0x64616572
   140007c12:	push   rax
   140007c13:	outs   dx,DWORD PTR ds:[rsi]
   140007c14:	outs   dx,DWORD PTR ds:[rsi]
   140007c15:	ins    BYTE PTR es:[rdi],dx
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	mov    eax,0x726c4301
   140007c1d:	push   rcx
   140007c1e:	jne    0x140007c85
   140007c20:	jne    0x140007c87
   140007c22:	push   rbp
   140007c23:	jae    0x140007c8a
   140007c25:	jb     0x140007c7e
   140007c27:	outs   dx,DWORD PTR ds:[rsi]
   140007c28:	jb     0x140007c95
   140007c2a:	rex.WB je 0x140007c92
   140007c2d:	ins    DWORD PTR es:[rdi],dx
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	cli    
   140007c31:	add    DWORD PTR [rdi+0x65],eax
   140007c34:	je     0x140007c77
   140007c36:	jo     0x140007ca8
   140007c38:	rex.R outs dx,DWORD PTR ds:[rsi]
   140007c3a:	ins    DWORD PTR es:[rdi],dx
   140007c3b:	(bad)  
   140007c3c:	imul   ebp,DWORD PTR [rsi+0x49],0x7269646e
   140007c43:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   140007c48:	fiadd  DWORD PTR [rdx]
   140007c4a:	push   rax
   140007c4b:	gs jb  0x140007cb4
   140007c4e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007c50:	movsxd esi,DWORD PTR [rdx+0x65]
   140007c53:	ins    DWORD PTR es:[rdi],dx
   140007c54:	outs   dx,BYTE PTR gs:[rsi]
   140007c56:	je     0x140007c9f
   140007c58:	ins    BYTE PTR es:[rdi],dx
   140007c59:	outs   dx,DWORD PTR ds:[rsi]
   140007c5a:	(bad)
   140007c5f:	jne    0x140007ccf
   140007c61:	je     0x140007cc8
   140007c63:	jb     0x140007c65
   140007c65:	add    dh,dl
   140007c67:	add    dl,BYTE PTR [rax+0x65]
   140007c6a:	jb     0x140007cd2
   140007c6c:	rex.R
   140007c6d:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   140007c71:	ins    DWORD PTR es:[rdi],dx
   140007c72:	outs   dx,BYTE PTR gs:[rsi]
   140007c74:	je     0x140007cbd
   140007c76:	ins    BYTE PTR es:[rdi],dx
   140007c77:	outs   dx,DWORD PTR ds:[rsi]
   140007c78:	(bad)
   140007c7d:	jne    0x140007ced
   140007c7f:	je     0x140007ce6
   140007c81:	jb     0x140007c83
   140007c83:	add    BYTE PTR [rdx],cl
   140007c85:	add    al,BYTE PTR [rdi+0x65]
   140007c88:	je     0x140007cda
   140007c8a:	jb     0x140007cfb
   140007c8c:	movsxd esp,DWORD PTR [rbp+0x73]
   140007c8f:	jae    0x140007cde
   140007c91:	gs ins DWORD PTR es:[rdi],dx
   140007c93:	outs   dx,DWORD PTR ds:[rsi]
   140007c94:	jb     0x140007d0f
   140007c96:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007c98:	outs   dx,WORD PTR ds:[rsi]
   140007c9a:	jb     0x140007d09
   140007c9c:	(bad)  
   140007c9d:	je     0x140007d08
   140007c9f:	outs   dx,DWORD PTR ds:[rsi]
   140007ca0:	outs   dx,BYTE PTR ds:[rsi]
   140007ca1:	add    BYTE PTR [rdx],al
   140007ca3:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   140007ca7:	movsxd esp,DWORD PTR [rbp+0x52]
   140007caa:	(bad)  
   140007cab:	imul   esi,DWORD PTR [rbx+0x65],0x6e657645
   140007cb2:	je     0x140007cb4
   140007cb4:	add    DWORD PTR [rbx],eax
   140007cb6:	push   rsp
   140007cb7:	jb     0x140007d1a
   140007cb9:	movsxd esp,DWORD PTR [rbp+0x45]
   140007cbc:	outs   dx,BYTE PTR ds:[rsi]
   140007cbd:	(bad)  
   140007cbe:	(bad)  
   140007cbf:	ins    BYTE PTR es:[rdi],dx
   140007cc0:	gs add BYTE PTR fs:[rax],al
   140007cc4:	(bad)  
   140007cc5:	add    cl,BYTE PTR [rcx+0x6e]
   140007cc8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007cd0:	imul   r12,QWORD PTR [rdx+0x72],0x797261
   140007cd8:	rol    BYTE PTR [rcx],cl
   140007cda:	rex.R jb 0x140007d3e
   140007cdd:	imul   ebp,DWORD PTR [rsi+0x54],0x61657268
   140007ce4:	fs push rax
   140007ce6:	outs   dx,DWORD PTR ds:[rsi]
   140007ce7:	outs   dx,DWORD PTR ds:[rsi]
   140007ce8:	ins    BYTE PTR es:[rdi],dx
   140007ce9:	add    BYTE PTR [rip+0x43734902],ah        # 0x18373c5f1
   140007cef:	outs   dx,DWORD PTR ds:[rsi]
   140007cf0:	outs   dx,BYTE PTR ds:[rsi]
   140007cf1:	imul   sp,WORD PTR [rdi+0x46],0x6c69
   140007cf7:	gs rex.WRX (bad) 
   140007cfa:	ins    DWORD PTR es:[rdi],dx
   140007cfb:	add    BYTE PTR gs:[rax],al
   140007cfe:	scas   eax,DWORD PTR es:[rdi]
   140007cff:	add    cl,BYTE PTR [rbp+0x6f]
   140007d02:	outs   dx,BYTE PTR ds:[rsi]
   140007d03:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x626f6c47
   140007d0b:	(bad)  
   140007d0c:	ins    BYTE PTR es:[rdi],dx
   140007d0d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007d0f:	outs   dx,BYTE PTR ds:[rsi]
   140007d10:	imul   sp,WORD PTR [rdi+0x46],0x6c69
   140007d16:	gs add bl,bh
   140007d19:	add    DWORD PTR [rdi+0x65],eax
   140007d1c:	je     0x140007d61
   140007d1e:	outs   dx,DWORD PTR ds:[rsi]
   140007d1f:	outs   dx,BYTE PTR ds:[rsi]
   140007d20:	imul   sp,WORD PTR [rdi+0x75],0x6172
   140007d26:	je     0x140007d91
   140007d28:	outs   dx,DWORD PTR ds:[rsi]
   140007d29:	outs   dx,BYTE PTR ds:[rsi]
   140007d2a:	rex.RX jb 0x140007d9c
   140007d2d:	ins    DWORD PTR es:[rdi],dx
   140007d2e:	rex.WRX (bad) 
   140007d30:	je     0x140007d9b
   140007d32:	jbe    0x140007d99
   140007d34:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007d36:	fs add BYTE PTR gs:[rax],al
   140007d3a:	(bad)  
   140007d3b:	add    DWORD PTR [rcx+rbp*2+0x73],eax
   140007d3f:	jo     0x140007db0
   140007d41:	jae    0x140007da8
   140007d43:	rex.B jo 0x140007db6
   140007d46:	rex.R outs dx,DWORD PTR ds:[rsi]
   140007d48:	ins    DWORD PTR es:[rdi],dx
   140007d49:	(bad)  
   140007d4a:	imul   ebp,DWORD PTR [rsi+0x73],0x69646e49
   140007d51:	jb     0x140007db8
   140007d53:	movsxd esi,DWORD PTR [rax+rax*1+0x18]
   140007d57:	add    cl,BYTE PTR [rcx+0x6e]
   140007d5a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007d62:	rex.WRB (bad) 
   140007d64:	outs   dx,BYTE PTR ds:[rsi]
   140007d65:	(bad)  
   140007d66:	gs rex.XB outs dx,DWORD PTR fs:[esi]
   140007d6b:	fs add BYTE PTR gs:[rsi],al
   140007d6f:	add    edx,DWORD PTR [rbp+0x6e]
   140007d72:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007d74:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007d7c:	rex.WRB (bad) 
   140007d7e:	outs   dx,BYTE PTR ds:[rsi]
   140007d7f:	(bad)  
   140007d80:	gs rex.XB outs dx,DWORD PTR fs:[esi]
   140007d85:	fs gs add ah,dl
   140007d89:	add    dl,BYTE PTR [rax+0x65]
   140007d8c:	jb     0x140007df4
   140007d8e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007d90:	jne    0x140007e00
   140007d92:	je     0x140007df9
   140007d94:	jb     0x140007ddf
   140007d96:	outs   dx,BYTE PTR ds:[rsi]
   140007d97:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007d9f:	add    BYTE PTR [rbx],cl
   140007da1:	add    ebx,DWORD PTR [rax+0x73]
   140007da4:	jo     0x140007df2
   140007da6:	outs   dx,DWORD PTR ds:[rsi]
   140007da7:	addr32 rex.RB jbe 0x140007e10
   140007dab:	outs   dx,BYTE PTR ds:[rsi]
   140007dac:	je     0x140007dae
   140007dae:	test   DWORD PTR [rcx],0x54777445
   140007db4:	jb     0x140007e17
   140007db6:	movsxd esp,DWORD PTR [rbp+0x41]
   140007db9:	jae    0x140007e2b
   140007dbb:	rex.WRX
   140007dbc:	gs je  0x140007e11
   140007dbf:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   140007dc8:	clc    
   140007dc9:	add    DWORD PTR [rbp+0x74],eax
   140007dcc:	ja     0x140007e22
   140007dce:	jb     0x140007e31
   140007dd0:	movsxd esp,DWORD PTR [rbp+0x41]
   140007dd3:	jae    0x140007e45
   140007dd5:	rex.WRX
   140007dd6:	gs je  0x140007e2e
   140007dd9:	outs   dx,BYTE PTR ds:[rsi]
   140007dda:	jb     0x140007e41
   140007ddc:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   140007de4:	add    eax,0x74654702
   140007de9:	rex.RXB ins BYTE PTR es:[rdi],dx
   140007deb:	outs   dx,DWORD PTR ds:[rsi]
   140007dec:	(bad)
   140007df1:	outs   dx,BYTE PTR ds:[rsi]
   140007df2:	imul   sp,WORD PTR [rdi+0x46],0x6c75
   140007df8:	ins    BYTE PTR es:[rdi],dx
   140007df9:	push   rax
   140007dfa:	(bad)  
   140007dfb:	je     0x140007e65
   140007dfd:	push   rdi
   140007dfe:	add    BYTE PTR [rax],al
   140007e00:	add    cl,BYTE PTR es:[rcx+0x73]
   140007e04:	rex.WRB (bad) 
   140007e06:	outs   dx,BYTE PTR ds:[rsi]
   140007e07:	(bad)  
   140007e08:	addr32 gs fs rex.R
   140007e0c:	gs (bad) 
   140007e0e:	jne    0x140007e77
   140007e10:	addr32 gs jb 0x140007e57
   140007e14:	outs   dx,DWORD PTR ds:[rsi]
   140007e15:	outs   dx,BYTE PTR ds:[rsi]
   140007e16:	outs   dx,BYTE PTR ds:[rsi]
   140007e17:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007e1c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007e1e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x7463
   140007e26:	out    dx,al
   140007e27:	add    dl,BYTE PTR [rdx+0x65]
   140007e2a:	ins    BYTE PTR es:[rdi],dx
   140007e2b:	gs (bad) 
   140007e2d:	jae    0x140007e94
   140007e2f:	push   rdi
   140007e30:	ins    DWORD PTR es:[rdi],dx
   140007e31:	imul   eax,DWORD PTR [rbp+0x76],0x4d746e65
   140007e38:	(bad)  
   140007e39:	outs   dx,BYTE PTR ds:[rsi]
   140007e3a:	(bad)  
   140007e3b:	addr32 gs jb 0x140007e3f
   140007e3f:	add    BYTE PTR [rdi+0x65],dh
   140007e42:	(bad)  
   140007e43:	outs   dx,BYTE PTR gs:[rsi]
   140007e45:	imul   ebp,DWORD PTR [esi+0x65],0x6c642e34
   140007e4d:	ins    BYTE PTR es:[rdi],dx
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	fild   DWORD PTR [rax]
   140007e52:	rex.XB jb 0x140007ece
   140007e55:	jo     0x140007ecb
   140007e57:	push   rdx
   140007e58:	gs ins BYTE PTR es:[rdi],dx
   140007e5a:	gs (bad) 
   140007e5c:	jae    0x140007ec3
   140007e5e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007e60:	outs   dx,BYTE PTR ds:[rsi]
   140007e61:	je     0x140007ec8
   140007e63:	js     0x140007ed9
   140007e65:	add    BYTE PTR [rax+0x1],al
   140007e68:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140007e6a:	movsxd ebp,DWORD PTR [rdi+0x64]
   140007e6d:	gs push rax
   140007e6f:	outs   dx,DWORD PTR ds:[rsi]
   140007e70:	imul   ebp,DWORD PTR [rsi+0x74],0x3f007265
   140007e77:	add    al,0x51
   140007e79:	jne    0x140007ee0
   140007e7b:	jb     0x140007ef6
   140007e7d:	push   rax
   140007e7e:	gs jb  0x140007ee7
   140007e81:	outs   dx,DWORD PTR ds:[rsi]
   140007e82:	jb     0x140007ef1
   140007e84:	(bad)  
   140007e85:	outs   dx,BYTE PTR ds:[rsi]
   140007e86:	movsxd esp,DWORD PTR [rbp+0x43]
   140007e89:	outs   dx,DWORD PTR ds:[rsi]
   140007e8a:	jne    0x140007efa
   140007e8c:	je     0x140007ef3
   140007e8e:	jb     0x140007e90
   140007e90:	add    al,BYTE PTR cs:[rdi+0x65]
   140007e94:	je     0x140007ed9
   140007e96:	jne    0x140007f0a
   140007e98:	jb     0x140007eff
   140007e9a:	outs   dx,BYTE PTR ds:[rsi]
   140007e9b:	je     0x140007ef1
   140007e9d:	push   0x64616572
   140007ea2:	rex.WB
   140007ea3:	add    BYTE PTR fs:[rax],al
   140007ea6:	sbb    BYTE PTR [rcx],al
   140007ea8:	rex.R
   140007ea9:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   140007ead:	gs push rax
   140007eaf:	outs   dx,DWORD PTR ds:[rsi]
   140007eb0:	imul   ebp,DWORD PTR [rsi+0x74],0x86007265
   140007eb7:	add    ecx,DWORD PTR [rcx+0x73]
   140007eba:	rex.R
   140007ebb:	gs (bad) 
   140007ebd:	jne    0x140007f26
   140007ebf:	addr32 gs jb 0x140007f13
   140007ec3:	jb     0x140007f2a
   140007ec5:	jae    0x140007f2c
   140007ec7:	outs   dx,BYTE PTR ds:[rsi]
   140007ec8:	je     0x140007eca
   140007eca:	mov    eax,DWORD PTR [rbx]
   140007ecc:	rex.WB jae 0x140007f1f
   140007ecf:	jb     0x140007f40
   140007ed1:	movsxd esp,DWORD PTR [rbp+0x73]
   140007ed4:	jae    0x140007f45
   140007ed6:	jb     0x140007f1e
   140007ed8:	gs (bad) 
   140007eda:	je     0x140007f51
   140007edc:	jb     0x140007f43
   140007ede:	push   rax
   140007edf:	jb     0x140007f46
   140007ee1:	jae    0x140007f48
   140007ee3:	outs   dx,BYTE PTR ds:[rsi]
   140007ee4:	je     0x140007ee6
   140007ee6:	jns    0x140007eed
   140007ee8:	push   rbx
   140007ee9:	ja     0x140007f54
   140007eeb:	je     0x140007f50
   140007eed:	push   0x68546f54
   140007ef2:	jb     0x140007f59
   140007ef4:	(bad)  
   140007ef5:	add    BYTE PTR fs:[rax],al
   140007ef8:	push   rsi
   140007ef9:	add    ecx,DWORD PTR [rax+0x65]
   140007efc:	(bad)  
   140007efd:	jo     0x140007f40
   140007eff:	ins    BYTE PTR es:[rdi],dx
   140007f00:	ins    BYTE PTR es:[rdi],dx
   140007f01:	outs   dx,DWORD PTR ds:[rsi]
   140007f02:	movsxd eax,DWORD PTR [rax]
   140007f04:	pop    rdx
   140007f05:	add    ecx,DWORD PTR [rax+0x65]
   140007f08:	(bad)  
   140007f09:	jo     0x140007f51
   140007f0b:	jb     0x140007f72
   140007f0d:	add    BYTE PTR gs:[rax],al
   140007f10:	repnz add al,BYTE PTR [rdi+0x65]
   140007f14:	je     0x140007f69
   140007f16:	jns    0x140007f8b
   140007f18:	je     0x140007f7f
   140007f1a:	ins    DWORD PTR es:[rdi],dx
   140007f1b:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   140007f23:	jns    0x140007f7c
   140007f25:	add    BYTE PTR [rbx+rax*1],ch
   140007f28:	rex.RXB
   140007f29:	gs je  0x140007f82
   140007f2c:	gs jb  0x140007fa2
   140007f2f:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140007f36:	mov    esi,0x65724601
   140007f3b:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   140007f44:	mov    BYTE PTR [rbx],0x4c
   140007f47:	outs   dx,DWORD PTR ds:[rsi]
   140007f48:	(bad)  
   140007f49:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140007f52:	add    BYTE PTR [rax],al
   140007f54:	mov    ebp,0x74654702
   140007f59:	push   rax
   140007f5a:	jb     0x140007fcb
   140007f5c:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f5f:	jae    0x140007fa2
   140007f61:	data16 imul bp,WORD PTR [rsi+0x69],0x7974
   140007f68:	rex.WRB (bad) 
   140007f6a:	jae    0x140007fd7
   140007f6c:	add    BYTE PTR [rax],al
   140007f6e:	lar    eax,WORD PTR [rdi+0x65]
   140007f72:	je     0x140007fcc
   140007f74:	push   rbx
   140007f75:	push   rax
   140007f76:	rex.W
   140007f77:	gs (bad) 
   140007f79:	jo     0x140007f7b
   140007f7b:	add    BYTE PTR [rsp+rax*1+0x52],cl
   140007f7f:	(bad)  
   140007f80:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140007f87:	jo     0x140007ffd
   140007f89:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c40000
   140007f90:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007f92:	(bad)  
   140007f93:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140007f9c:	js     0x140007fdf
	...

Disassembly of section .data:

0000000140008000 <.data>:
   140008000:	adc    BYTE PTR [rbp+0x0],ah
   140008003:	rex add DWORD PTR [rax],eax
   140008006:	add    BYTE PTR [rax],al
   140008008:	add    eax,0x0
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rdx],dh
   140008011:	movabs ds:0x5dcd00002b992ddf,al
   14000801a:	and    dl,dl
   14000801c:	data16 (bad) 
   14000801e:	(bad)  
   14000801f:	inc    DWORD PTR [rcx]
   140008021:	add    BYTE PTR [rax],al
   140008023:	add    dh,bh
   140008025:	(bad)  
   140008026:	(bad)  
   140008027:	(bad)  
   140008028:	(bad)  
   140008029:	(bad)  
   14000802a:	(bad)  
   14000802b:	call   QWORD PTR [rax+rax*1]
   14000802e:	add    BYTE PTR [rax],al
   140008030:	jne    0x140007fca
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    BYTE PTR [rax],al
   140008036:	add    BYTE PTR [rax],al
   140008038:	or     DWORD PTR [rax+rax*1+0x40],ecx
   14000803c:	add    DWORD PTR [rax],eax
   14000803e:	add    BYTE PTR [rax],al
   140008040:	std    
   140008041:	rex.WXB add BYTE PTR [r8+0x1],al
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    cl,dh
   140008049:	rex.WXB add BYTE PTR [r8+0x1],al
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    BYTE PTR [rbx+rcx*2+0x0],ch
   140008053:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

0000000140009000 <.pdata>:
   140009000:	or     al,0x10
   140009002:	add    BYTE PTR [rax],al
   140009004:	and    BYTE PTR [rax],dl
   140009006:	add    BYTE PTR [rax],al
   140009008:	jl     0x140009078
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	and    BYTE PTR [rax],dl
   14000900e:	add    BYTE PTR [rax],al
   140009010:	rex.RXB adc BYTE PTR [r8],r8b
   140009013:	add    BYTE PTR [rsi+rbp*2+0x0],bh
   140009017:	add    BYTE PTR [rax+0x10],dl
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	fcom   DWORD PTR [rax]
   14000901e:	add    BYTE PTR [rax],al
   140009020:	shr    BYTE PTR [rbp+0x0],0x0
   140009024:	fcom   DWORD PTR [rax]
   140009026:	add    BYTE PTR [rax],al
   140009028:	adc    QWORD PTR [r8],rax
   14000902b:	add    BYTE PTR [rsp+rbp*2+0x115c0000],bh
   140009032:	add    BYTE PTR [rax],al
   140009034:	test   al,0x11
   140009036:	add    BYTE PTR [rax],al
   140009038:	and    BYTE PTR [rax+rax*1+0x0],ch
   14000903c:	test   al,0x11
   14000903e:	add    BYTE PTR [rax],al
   140009040:	rex.W adc al,BYTE PTR [rax]
   140009043:	add    al,ch
   140009045:	ins    BYTE PTR es:[rdi],dx
   140009046:	add    BYTE PTR [rax],al
   140009048:	rex.W adc al,BYTE PTR [rax]
   14000904b:	add    BYTE PTR [rsi+0x20000012],ah
   140009051:	ins    BYTE PTR es:[rdi],dx
   140009052:	add    BYTE PTR [rax],al
   140009054:	test   al,0x12
   140009056:	add    BYTE PTR [rax],al
   140009058:	mov    eax,0xd0000013
   14000905d:	ins    BYTE PTR es:[rdi],dx
   14000905e:	add    BYTE PTR [rax],al
   140009060:	mov    eax,0x5f000013
   140009065:	adc    al,0x0
   140009067:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   14000906b:	add    BYTE PTR [rax+0x14],ah
   14000906e:	add    BYTE PTR [rax],al
   140009070:	stc    
   140009071:	adc    al,0x0
   140009073:	add    BYTE PTR [rsp+rbp*2+0x14fc0000],bh
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	jg     0x140009093
   14000907e:	add    BYTE PTR [rax],al
   140009080:	rex ins BYTE PTR es:[rdi],dx
   140009082:	add    BYTE PTR [rax],al
   140009084:	adc    BYTE PTR [rip+0x16450000],0x0        # 0x15645908b
   14000908b:	add    BYTE PTR [rax],ah
   14000908d:	ins    BYTE PTR es:[rdi],dx
   14000908e:	add    BYTE PTR [rax],al
   140009090:	rex.W (bad) 
   140009092:	add    BYTE PTR [rax],al
   140009094:	out    dx,eax
   140009095:	(bad)  
   140009096:	add    BYTE PTR [rax],al
   140009098:	sub    al,0x6c
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	and    al,0x17
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	push   rbp
   1400090a1:	(bad)  
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	cmp    al,0x6e
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	pop    rax
   1400090a9:	(bad)  
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	test   eax,0xc0000017
   1400090b1:	ins    DWORD PTR es:[rdi],dx
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	lods   al,BYTE PTR ds:[rsi]
   1400090b5:	(bad)  
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	xor    eax,0x34000018
   1400090bd:	ins    BYTE PTR es:[rdi],dx
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	cmp    BYTE PTR [rax],bl
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	push   rbp
   1400090c5:	sbb    BYTE PTR [rax],al
   1400090c7:	add    BYTE PTR [rsi+rbp*2+0x0],bh
   1400090cb:	add    BYTE PTR [rax+0x18],bl
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	stc    
   1400090d1:	sbb    BYTE PTR [rax],al
   1400090d3:	add    BYTE PTR [rsp+rbp*2+0x0],ch
   1400090d7:	add    ah,bh
   1400090d9:	sbb    BYTE PTR [rax],al
   1400090db:	add    BYTE PTR [rsi+0x19],dl
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	mov    al,0x6c
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	pop    rax
   1400090e5:	sbb    DWORD PTR [rax],eax
   1400090e7:	add    BYTE PTR [rbx+0x1a],dl
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	js     0x14000915a
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	push   rsp
   1400090f1:	sbb    al,BYTE PTR [rax]
   1400090f3:	add    bl,dh
   1400090f5:	sbb    eax,0x6c540000
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	hlt    
   1400090fd:	sbb    eax,0x22470000
   140009102:	add    BYTE PTR [rax],al
   140009104:	mov    WORD PTR [rax+rax*1+0x0],gs
   140009108:	rex.W and al,BYTE PTR [rax]
   14000910b:	add    BYTE PTR [rcx+0x7c000022],bl
   140009111:	outs   dx,BYTE PTR ds:[rsi]
   140009112:	add    BYTE PTR [rax],al
   140009114:	sub    BYTE PTR [rbx],ah
   140009116:	add    BYTE PTR [rax],al
   140009118:	rex.RB and al,0x0
   14000911b:	add    BYTE PTR [rax+0x6c],bh
   14000911e:	add    BYTE PTR [rax],al
   140009120:	rex.W and al,0x0
   140009123:	add    ch,bl
   140009125:	and    al,0x0
   140009127:	add    ah,bh
   140009129:	ins    BYTE PTR es:[rdi],dx
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	loopne 0x140009152
   14000912e:	add    BYTE PTR [rax],al
   140009130:	(bad)  
   140009131:	add    BYTE PTR es:[rax],al
   140009134:	adc    BYTE PTR [rbp+0x0],ch
   140009137:	add    BYTE PTR [rax],bl
   140009139:	add    BYTE PTR es:[rax],al
   14000913c:	icebp  
   14000913d:	add    BYTE PTR es:[rax],al
   140009140:	test   al,0x6d
   140009142:	add    BYTE PTR [rax],al
   140009144:	hlt    
   140009145:	add    BYTE PTR es:[rax],al
   140009148:	fsubr  DWORD PTR [rax]
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	xor    BYTE PTR [rbp+0x0],ch
   14000914f:	add    al,bl
   140009151:	sub    BYTE PTR [rax],al
   140009153:	add    BYTE PTR [rbx-0x3fffffd7],ch
   140009159:	ins    DWORD PTR es:[rdi],dx
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	call   0xcf00918a
   140009161:	sub    al,BYTE PTR [rax]
   140009163:	add    BYTE PTR [rax],ch
   140009165:	ins    DWORD PTR es:[rdi],dx
   140009166:	add    BYTE PTR [rax],al
   140009168:	nop
   140009169:	sub    al,BYTE PTR [rax]
   14000916b:	add    BYTE PTR [rdi+0x5000002b],al
   140009171:	ins    DWORD PTR es:[rdi],dx
   140009172:	add    BYTE PTR [rax],al
   140009174:	mov    BYTE PTR [rbx],ch
   140009176:	add    BYTE PTR [rax],al
   140009178:	(bad)  
   140009179:	sub    eax,DWORD PTR [rax]
   14000917b:	add    ah,dh
   14000917d:	ins    BYTE PTR es:[rdi],dx
   14000917e:	add    BYTE PTR [rax],al
   140009180:	add    BYTE PTR [rax+rax*1],ch
   140009183:	add    BYTE PTR [rsp+rbp*1],bh
   140009186:	add    BYTE PTR [rax],al
   140009188:	jl     0x1400091f8
   14000918a:	add    BYTE PTR [rax],al
   14000918c:	cmp    al,0x2c
   14000918e:	add    BYTE PTR [rax],al
   140009190:	sub    BYTE PTR [rax+rax*1],0x0
   140009194:	jl     0x140009204
   140009196:	add    BYTE PTR [rax],al
   140009198:	sub    BYTE PTR [rax+rax*1],0x0
   14000919c:	in     eax,dx
   14000919d:	sub    al,0x0
   14000919f:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   1400091a3:	add    al,dh
   1400091a5:	sub    al,0x0
   1400091a7:	add    BYTE PTR [rdx+0x2d],ch
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	js     0x14000921b
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	ins    BYTE PTR es:[rdi],dx
   1400091b1:	sub    eax,0x2d980000
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	jl     0x140009228
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	cwde   
   1400091bd:	sub    eax,0x2e0f0000
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	push   0x1000006d
   1400091c9:	add    BYTE PTR cs:[rax],al
   1400091cc:	pop    rbx
   1400091cd:	add    BYTE PTR cs:[rax],al
   1400091d0:	jl     0x140009240
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	pop    rsp
   1400091d5:	add    BYTE PTR cs:[rax],al
   1400091d8:	jmp    0x140009208
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	and    BYTE PTR [rax+rax*1+0x0],ch
   1400091e0:	in     al,dx
   1400091e1:	add    BYTE PTR cs:[rax],al
   1400091e4:	and    DWORD PTR [rax+rax*1],esi
   1400091e7:	add    BYTE PTR [rax+0x3000006d],al
   1400091ed:	xor    al,0x0
   1400091ef:	add    BYTE PTR [rdx+0x34],bh
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	je     0x140009264
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	jl     0x14000922e
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	cwde   
   1400091fd:	xor    al,0x0
   1400091ff:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   140009203:	add    BYTE PTR [rax+0xb000034],bl
   140009209:	xor    eax,0x6dc00000
   14000920e:	add    BYTE PTR [rax],al
   140009210:	or     al,0x35
   140009212:	add    BYTE PTR [rax],al
   140009214:	(bad)  
   140009215:	xor    eax,0x6e3c0000
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	fs xor eax,0x35900000
   140009222:	add    BYTE PTR [rax],al
   140009224:	cmp    al,0x6e
   140009226:	add    BYTE PTR [rax],al
   140009228:	nop
   140009229:	xor    eax,0x35ce0000
   14000922e:	add    BYTE PTR [rax],al
   140009230:	jl     0x1400092a0
   140009232:	add    BYTE PTR [rax],al
   140009234:	shl    BYTE PTR [rip+0x36310000],1        # 0x17631923a
   14000923a:	add    BYTE PTR [rax],al
   14000923c:	and    BYTE PTR [rax+rax*1+0x0],ch
   140009240:	xor    al,0x36
   140009242:	add    BYTE PTR [rax],al
   140009244:	ins    BYTE PTR es:[rdi],dx
   140009245:	add    BYTE PTR ss:[rax],al
   140009248:	jl     0x1400092b8
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	ins    BYTE PTR es:[rdi],dx
   14000924d:	add    BYTE PTR ss:[rax],al
   140009250:	sub    BYTE PTR [rcx],bh
   140009252:	add    BYTE PTR [rax],al
   140009254:	and    BYTE PTR [rsi+0x0],ch
   140009257:	add    BYTE PTR [rax],ch
   140009259:	cmp    DWORD PTR [rax],eax
   14000925b:	add    BYTE PTR [rdi+0x39],ah
   14000925e:	add    BYTE PTR [rax],al
   140009260:	cmp    al,0x6e
   140009262:	add    BYTE PTR [rax],al
   140009264:	push   0xffffffffdb000039
   140009269:	cmp    DWORD PTR [rax],eax
   14000926b:	add    al,al
   14000926d:	ins    DWORD PTR es:[rdi],dx
   14000926e:	add    BYTE PTR [rax],al
   140009270:	fdivr  QWORD PTR [rcx]
   140009272:	add    BYTE PTR [rax],al
   140009274:	pop    rsp
   140009275:	cmp    al,BYTE PTR [rax]
   140009277:	add    BYTE PTR [rax],ah
   140009279:	ins    BYTE PTR es:[rdi],dx
   14000927a:	add    BYTE PTR [rax],al
   14000927c:	pop    rsp
   14000927d:	cmp    al,BYTE PTR [rax]
   14000927f:	add    BYTE PTR [rdi],bl
   140009281:	cmp    eax,DWORD PTR [rax]
   140009283:	add    BYTE PTR [rsi+rbp*2],al
   140009286:	add    BYTE PTR [rax],al
   140009288:	and    BYTE PTR [rbx],bh
   14000928a:	add    BYTE PTR [rax],al
   14000928c:	xchg   BYTE PTR [rbx],bh
   14000928e:	add    BYTE PTR [rax],al
   140009290:	mov    esp,0x8800006c
   140009295:	cmp    eax,DWORD PTR [rax]
   140009297:	add    BYTE PTR [rdi],ah
   140009299:	cmp    eax,0x6dec0000
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	cmp    BYTE PTR [rip+0x3d640000],bh        # 0x17d6492a6
   1400092a6:	add    BYTE PTR [rax],al
   1400092a8:	cmp    al,0x6e
   1400092aa:	add    BYTE PTR [rax],al
   1400092ac:	fs cmp eax,0x3db10000
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	je     0x140009324
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	mov    ah,0x3d
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	rex.X
   1400092bd:	add    BYTE PTR ds:[rax],al
   1400092c0:	shr    BYTE PTR [rbp+0x0],0x0
   1400092c4:	rex.R
   1400092c5:	add    BYTE PTR ds:[rax],al
   1400092c8:	sar    DWORD PTR [rsi],1
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	shr    BYTE PTR [rbp+0x0],0x0
   1400092d0:	(bad)  
   1400092d1:	add    BYTE PTR ds:[rax],al
   1400092d4:	repnz (bad) 
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	test   al,0x6d
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	xor    BYTE PTR [rax+0x0],al
   1400092df:	add    BYTE PTR [rdi+0x40],ah
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	cmp    al,0x6e
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	push   0xffffffffa3000040
   1400092ed:	add    BYTE PTR [rax],al
   1400092f0:	cmp    al,0x6e
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400092f5:	add    BYTE PTR [rax],al
   1400092f8:	sbb    BYTE PTR [rcx+0x0],al
   1400092fb:	add    al,al
   1400092fd:	ins    DWORD PTR es:[rdi],dx
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	sbb    BYTE PTR [rcx+0x0],al
   140009303:	add    dl,al
   140009305:	rex.X add BYTE PTR [rax],al
   140009308:	shr    BYTE PTR [rbp+0x0],1
   14000930b:	add    ah,al
   14000930d:	rex.X add BYTE PTR [rax],al
   140009310:	or     eax,DWORD PTR [rbx+0x0]
   140009313:	add    BYTE PTR [rsi+rbp*2+0x0],al
   140009317:	add    BYTE PTR [rbx+rax*2],cl
   14000931a:	add    BYTE PTR [rax],al
   14000931c:	fiadd  DWORD PTR [rbx+0x0]
   14000931f:	add    BYTE PTR [rsi+rbp*2+0x0],bh
   140009323:	add    ah,bl
   140009325:	rex.XB add BYTE PTR [r8],al
   140009328:	(bad)  
   140009329:	add    BYTE PTR [rax],r8b
   14000932c:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14000932e:	add    BYTE PTR [rax],al
   140009330:	rex
   140009331:	add    BYTE PTR [rax],r8b
   140009334:	mov    al,0x45
   140009336:	add    BYTE PTR [rax],al
   140009338:	push   rsp
   140009339:	outs   dx,BYTE PTR ds:[rsi]
   14000933a:	add    BYTE PTR [rax],al
   14000933c:	mov    al,0x45
   14000933e:	add    BYTE PTR [rax],al
   140009340:	ret    0x45
   140009343:	add    BYTE PTR [rsi+rbp*2+0x0],bh
   140009347:	add    ah,al
   140009349:	add    BYTE PTR [r8],r8b
   14000934c:	loope  0x140009393
   14000934e:	add    BYTE PTR [rax],al
   140009350:	jl     0x1400093c0
   140009352:	add    BYTE PTR [rax],al
   140009354:	in     al,0x45
   140009356:	add    BYTE PTR [rax],al
   140009358:	rex.RXB
   140009359:	rex.RX add BYTE PTR [rax],r8b
   14000935c:	je     0x1400093cc
   14000935e:	add    BYTE PTR [rax],al
   140009360:	(bad)  
   140009361:	rex.RX add BYTE PTR [rax],r8b
   140009364:	jg     0x1400093ac
   140009366:	add    BYTE PTR [rax],al
   140009368:	mov    BYTE PTR [rsi+0x0],ch
   14000936b:	add    BYTE PTR [rsi+rax*2+0x46cc0000],dl
   140009372:	add    BYTE PTR [rax],al
   140009374:	jl     0x1400093e4
   140009376:	add    BYTE PTR [rax],al
   140009378:	int3   
   140009379:	rex.RX add BYTE PTR [rax],r8b
   14000937c:	jrcxz  0x1400093c4
   14000937e:	add    BYTE PTR [rax],al
   140009380:	jl     0x1400093f0
   140009382:	add    BYTE PTR [rax],al
   140009384:	push   rax
   140009385:	rex.RXB add BYTE PTR [r8],r8b
   140009388:	popf   
   140009389:	rex.RXB add BYTE PTR [r8],r8b
   14000938c:	mov    WORD PTR [rsi+0x0],gs
   14000938f:	add    al,dl
   140009391:	rex.RXB add BYTE PTR [r8],r8b
   140009394:	jl     0x1400093de
   140009396:	add    BYTE PTR [rax],al
   140009398:	mov    eax,0x7c00006e
   14000939d:	rex.W add BYTE PTR [rax],al
   1400093a0:	retf   0x48
   1400093a3:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   1400093a7:	add    ah,cl
   1400093a9:	rex.W add BYTE PTR [rax],al
   1400093ac:	jl     0x1400093f7
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	(bad)  
   1400093b1:	outs   dx,BYTE PTR ds:[rsi]
   1400093b2:	add    BYTE PTR [rax],al
   1400093b4:	jl     0x1400093ff
   1400093b6:	add    BYTE PTR [rax],al
   1400093b8:	xchg   ebx,eax
   1400093b9:	rex.WB add BYTE PTR [r8],al
   1400093bc:	jl     0x14000942c
   1400093be:	add    BYTE PTR [rax],al
   1400093c0:	xchg   esp,eax
   1400093c1:	rex.WB add BYTE PTR [r8],al
   1400093c4:	int3   
   1400093c5:	rex.WB add BYTE PTR [r8],al
   1400093c8:	and    BYTE PTR [rax+rax*1+0x0],ch
   1400093cc:	int3   
   1400093cd:	rex.WB add BYTE PTR [r8],al
   1400093d0:	add    al,0x4a
   1400093d2:	add    BYTE PTR [rax],al
   1400093d4:	and    BYTE PTR [rax+rax*1+0x0],ch
   1400093d8:	sbb    BYTE PTR [rdx+0x0],cl
   1400093db:	add    BYTE PTR [rcx+0x4a],ah
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	je     0x140009450
   1400093e2:	add    BYTE PTR [rax],al
   1400093e4:	rex.WX add BYTE PTR fs:[rax],al
   1400093e8:	xor    eax,0xe400004b
   1400093ed:	outs   dx,BYTE PTR ds:[rsi]
   1400093ee:	add    BYTE PTR [rax],al
   1400093f0:	js     0x14000943d
   1400093f2:	add    BYTE PTR [rax],al
   1400093f4:	out    dx,eax
   1400093f5:	rex.WXB add BYTE PTR [r8],al
   1400093f8:	in     al,dx
   1400093f9:	outs   dx,BYTE PTR ds:[rsi]
   1400093fa:	add    BYTE PTR [rax],al
   1400093fc:	test   al,0x4c
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	ror    DWORD PTR [rax+rax*1+0x0],1
   140009404:	jl     0x140009474
   140009406:	add    BYTE PTR [rax],al
   140009408:	(bad)  
   140009409:	rex.WR add BYTE PTR [rax],r8b
   14000940c:	call   0x1bc00945d
   140009411:	outs   dx,BYTE PTR ds:[rsi]
   140009412:	add    BYTE PTR [rax],al
   140009414:	clc    
   140009415:	rex.WR add BYTE PTR [rax],r8b
   140009418:	cmp    DWORD PTR [rbp+0x0],ecx
   14000941b:	add    BYTE PTR [rax],ah
   14000941d:	ins    BYTE PTR es:[rdi],dx
   14000941e:	add    BYTE PTR [rax],al
   140009420:	mov    eax,0xd900004d
   140009425:	rex.WRB add BYTE PTR [r8],r8b
   140009428:	jl     0x140009498
   14000942a:	add    BYTE PTR [rax],al
   14000942c:	fmul   QWORD PTR [rbp+0x0]
   14000942f:	add    BYTE PTR [rax],al
   140009431:	rex.WRX add BYTE PTR [rax],r8b
   140009434:	je     0x1400094a4
   140009436:	add    BYTE PTR [rax],al
   140009438:	add    BYTE PTR [rsi+0x0],cl
   14000943b:	add    dl,ch
   14000943d:	rex.WRX add BYTE PTR [rax],r8b
   140009440:	hlt    
   140009441:	outs   dx,BYTE PTR ds:[rsi]
   140009442:	add    BYTE PTR [rax],al
   140009444:	sbb    al,0x4f
   140009446:	add    BYTE PTR [rax],al
   140009448:	nop
   140009449:	rex.WRXB add BYTE PTR [r8],r8b
   14000944c:	jl     0x1400094bc
   14000944e:	add    BYTE PTR [rax],al
   140009450:	nop
   140009451:	rex.WRXB add BYTE PTR [r8],r8b
   140009454:	(bad)
   140009457:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   14000945b:	add    al,cl
   14000945d:	rex.WRXB add BYTE PTR [r8],r8b
   140009460:	add    BYTE PTR [rax+0x0],dl
   140009463:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   140009467:	add    BYTE PTR [rax],al
   140009469:	push   rax
   14000946a:	add    BYTE PTR [rax],al
   14000946c:	cmp    dl,BYTE PTR [rax+0x0]
   14000946f:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   140009473:	add    BYTE PTR [rax+rdx*2],bh
   140009476:	add    BYTE PTR [rax],al
   140009478:	(bad)  
   140009479:	push   rax
   14000947a:	add    BYTE PTR [rax],al
   14000947c:	or     BYTE PTR [rdi+0x0],ch
   14000947f:	add    BYTE PTR [rax],al
   140009481:	push   rcx
   140009482:	add    BYTE PTR [rax],al
   140009484:	rex.RB push r10
   140009486:	add    BYTE PTR [rax],al
   140009488:	adc    al,0x6f
   14000948a:	add    BYTE PTR [rax],al
   14000948c:	rex.W push rdx
   14000948e:	add    BYTE PTR [rax],al
   140009490:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009491:	push   rdx
   140009492:	add    BYTE PTR [rax],al
   140009494:	sub    al,0x6f
   140009496:	add    BYTE PTR [rax],al
   140009498:	test   al,0x52
   14000949a:	add    BYTE PTR [rax],al
   14000949c:	call   QWORD PTR [rdx+0x0]
   14000949f:	add    BYTE PTR [rsi+rbp*2+0x0],dh
   1400094a3:	add    BYTE PTR [rax],cl
   1400094a5:	push   rbx
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	lahf   
   1400094a9:	push   rbp
   1400094aa:	add    BYTE PTR [rax],al
   1400094ac:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400094ae:	add    BYTE PTR [rax],al
   1400094b0:	mov    al,0x55
   1400094b2:	add    BYTE PTR [rax],al
   1400094b4:	(bad)  
   1400094b5:	push   rbp
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	mov    al,0x6e
   1400094ba:	add    BYTE PTR [rax],al
   1400094bc:	rcl    BYTE PTR [rbp+0x0],1
   1400094bf:	add    al,dh
   1400094c1:	push   rbp
   1400094c2:	add    BYTE PTR [rax],al
   1400094c4:	mov    al,0x6e
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	lock push rbp
   1400094ca:	add    BYTE PTR [rax],al
   1400094cc:	or     edx,DWORD PTR [rsi+0x0]
   1400094cf:	add    BYTE PTR [rax+0xb00006e],dh
   1400094d5:	push   rsi
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	cs push rsi
   1400094da:	add    BYTE PTR [rax],al
   1400094dc:	mov    al,0x6e
	...

Disassembly of section .rsrc:

000000014000a000 <.rsrc>:
	...
   14000a008:	add    al,0x0
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	add    BYTE PTR [rax],al
   14000a00e:	add    al,BYTE PTR [rax]
   14000a010:	adc    BYTE PTR [rax],al
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	and    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax+0x18],al
   14000a01c:	cmp    BYTE PTR [rax],al
   14000a01e:	add    BYTE PTR [rax+0x0],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	add    al,0x0
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    DWORD PTR [rax],eax
   14000a030:	add    DWORD PTR [rax],eax
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	push   rax
   14000a035:	add    BYTE PTR [rax],al
   14000a037:	add    BYTE PTR [rax],0x0
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	add    al,0x0
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    BYTE PTR [rax],al
   14000a046:	add    DWORD PTR [rax],eax
   14000a048:	add    DWORD PTR [rax],eax
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	push   0x800000
   14000a051:	add    BYTE PTR [rax],al
   14000a053:	add    BYTE PTR [rax],al
   14000a055:	add    BYTE PTR [rax],al
   14000a057:	add    BYTE PTR [rax+rax*1],al
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	add    BYTE PTR [rax],al
   14000a05e:	add    DWORD PTR [rax],eax
   14000a060:	or     DWORD PTR [rax+rax*1],eax
   14000a063:	add    BYTE PTR [rax+0x0],al
   14000a069:	add    BYTE PTR [rax],al
   14000a06b:	add    BYTE PTR [rax],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rax+rax*1],al
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	add    BYTE PTR [rax],al
   14000a076:	add    DWORD PTR [rax],eax
   14000a078:	or     DWORD PTR [rax+rax*1],eax
   14000a07b:	add    BYTE PTR [rax-0x60000000],dl
   14000a081:	movabs al,ds:0x4e4000003c80000
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	add    BYTE PTR [rax],al
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	push   0xffffffffdd0000a4
   14000a095:	add    al,BYTE PTR [rax]
   14000a097:	add    ah,ah
   14000a099:	add    al,0x0
   14000a09b:	add    BYTE PTR [rax],al
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    al,cl
   14000a0a1:	add    esi,DWORD PTR [rax+rax*1]
   14000a0a4:	add    BYTE PTR [rax],al
   14000a0a6:	push   rsi
   14000a0a7:	add    BYTE PTR [rbx+0x0],dl
   14000a0aa:	pop    rdi
   14000a0ab:	add    BYTE PTR [rsi+0x0],dl
   14000a0ae:	add    BYTE PTR [r10+0x0],r10b
   14000a0b2:	push   rbx
   14000a0b3:	add    BYTE PTR [rcx+0x0],cl
   14000a0b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000a0ba:	pop    rdi
   14000a0bb:	add    BYTE PTR [rcx+0x0],cl
   14000a0be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000a0c2:	rex.WRXB add BYTE PTR [r8],r8b
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000a0cd:	add    BYTE PTR [rcx],al
   14000a0cf:	add    BYTE PTR [rsi],al
   14000a0d1:	add    BYTE PTR [rax+rax*1],al
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	(bad)  
   14000a0d7:	add    al,0x0
   14000a0d9:	add    BYTE PTR [rax+rax*1],al
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	outs   dx,DWORD PTR ds:[rsi]
   14000a0df:	jbe    0x14000a120
   14000a0e1:	add    BYTE PTR [rax],al
   14000a0e3:	add    BYTE PTR [rax],cl
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rax+rax*1],al
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	add    DWORD PTR [rax],eax
	...
   14000a0fa:	add    BYTE PTR [rax],al
   14000a0fc:	sub    BYTE PTR [rbx],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	add    DWORD PTR [rax],eax
   14000a102:	push   rbx
   14000a103:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000a107:	add    BYTE PTR [rcx+0x0],ch
   14000a10a:	outs   dx,BYTE PTR ds:[rsi]
   14000a10b:	add    BYTE PTR [rdi+0x0],ah
   14000a10e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000a112:	ins    BYTE PTR es:[rdi],dx
   14000a113:	add    BYTE PTR [rbp+0x0],ah
   14000a116:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a11a:	data16 add BYTE PTR [rdi+0x0],ch
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	add    al,0x3
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    DWORD PTR [rax],eax
   14000a126:	xor    BYTE PTR [rax],al
   14000a128:	xor    al,0x0
   14000a12a:	xor    BYTE PTR [rax],al
   14000a12c:	cmp    DWORD PTR [rax],eax
   14000a12e:	xor    BYTE PTR [rax],al
   14000a130:	xor    al,0x0
   14000a132:	rex.X add BYTE PTR [rax],sil
   14000a135:	add    BYTE PTR [rax],al
   14000a137:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000a13b:	add    BYTE PTR [rcx],al
   14000a13d:	add    BYTE PTR [rbx+0x0],al
   14000a140:	outs   dx,DWORD PTR ds:[rsi]
   14000a141:	add    BYTE PTR [rbp+0x0],ch
   14000a144:	jo     0x14000a146
   14000a146:	(bad)  
   14000a147:	add    BYTE PTR [rsi+0x0],ch
   14000a14a:	jns    0x14000a14c
   14000a14c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000a150:	ins    DWORD PTR es:[rdi],dx
   14000a151:	add    BYTE PTR [rbp+0x0],ah
   14000a154:	add    BYTE PTR [rax],al
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000a15c:	movsxd eax,DWORD PTR [rax]
   14000a15e:	jb     0x14000a160
   14000a160:	outs   dx,DWORD PTR ds:[rsi]
   14000a161:	add    BYTE PTR [rbx+0x0],dh
   14000a164:	outs   dx,DWORD PTR ds:[rsi]
   14000a165:	add    BYTE PTR [rsi+0x0],ah
   14000a168:	je     0x14000a16a
   14000a16a:	and    BYTE PTR [rax],al
   14000a16c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a170:	jb     0x14000a172
   14000a172:	jo     0x14000a174
   14000a174:	outs   dx,DWORD PTR ds:[rsi]
   14000a175:	add    BYTE PTR [rdx+0x0],dh
   14000a178:	(bad)  
   14000a179:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a17d:	add    BYTE PTR [rdi+0x0],ch
   14000a180:	outs   dx,BYTE PTR ds:[rsi]
   14000a181:	add    BYTE PTR [rax],al
   14000a183:	add    BYTE PTR [rax+rax*1+0xe],al
   14000a187:	add    BYTE PTR [rcx],al
   14000a189:	add    BYTE PTR [rsi+0x0],al
   14000a18c:	imul   eax,DWORD PTR [rax],0x65006c
   14000a192:	add    BYTE PTR [rbp+0x0],r12b
   14000a196:	jae    0x14000a198
   14000a198:	movsxd eax,DWORD PTR [rax]
   14000a19a:	jb     0x14000a19c
   14000a19c:	imul   eax,DWORD PTR [rax],0x740070
   14000a1a2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a1a8:	add    BYTE PTR [rax],al
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	(bad)  
   14000a1ad:	add    BYTE PTR [rbx+0x0],dh
   14000a1b0:	jo     0x14000a1b2
   14000a1b2:	outs   dx,BYTE PTR ds:[rsi]
   14000a1b3:	add    BYTE PTR [rbp+0x0],ah
   14000a1b6:	je     0x14000a1b8
   14000a1b8:	pop    rdi
   14000a1b9:	add    BYTE PTR [rdi+0x0],dh
   14000a1bc:	jo     0x14000a1be
   14000a1be:	add    BYTE PTR cs:[rbp+0x0],ah
   14000a1c2:	js     0x14000a1c4
   14000a1c4:	add    BYTE PTR gs:[rax],al
   14000a1c7:	add    BYTE PTR [rsi+0x0],bl
   14000a1ca:	(bad)  
   14000a1cb:	add    BYTE PTR [rcx],al
   14000a1cd:	add    BYTE PTR [rsi+0x0],al
   14000a1d0:	imul   eax,DWORD PTR [rax],0x65006c
   14000a1d6:	push   rsi
   14000a1d7:	add    BYTE PTR [rbp+0x0],ah
   14000a1da:	jb     0x14000a1dc
   14000a1dc:	jae    0x14000a1de
   14000a1de:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a1e4:	add    BYTE PTR [rax],al
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	xor    al,0x0
   14000a1ea:	add    BYTE PTR cs:[rsi],dh
   14000a1ed:	add    BYTE PTR [rsi],ch
   14000a1ef:	add    BYTE PTR [rcx],dh
   14000a1f1:	add    BYTE PTR [rax],dh
   14000a1f3:	add    BYTE PTR [rip+0x2e003500],dh        # 0x16e00d6f9
   14000a1f9:	add    BYTE PTR [rax],dh
   14000a1fb:	add    BYTE PTR [rax],ah
   14000a1fd:	add    BYTE PTR [rdx+0x0],ah
   14000a200:	jne    0x14000a202
   14000a202:	imul   eax,DWORD PTR [rax],0x74006c
   14000a208:	and    BYTE PTR [rax],al
   14000a20a:	(bad)  
   14000a20b:	add    BYTE PTR [rcx+0x0],bh
   14000a20e:	cmp    al,BYTE PTR [rax]
   14000a210:	and    BYTE PTR [rax],al
   14000a212:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000a216:	push   rsp
   14000a217:	add    BYTE PTR [rsi+0x0],al
   14000a21a:	pop    rax
   14000a21b:	add    BYTE PTR [rdx+0x0],dl
   14000a21e:	add    BYTE PTR [r8+rax*1+0x32],r9b
   14000a223:	add    BYTE PTR [rax],al
   14000a225:	add    BYTE PTR [rax],al
   14000a227:	add    BYTE PTR [rax+rax*1],bh
   14000a22a:	(bad)  
   14000a22b:	add    BYTE PTR [rcx],al
   14000a22d:	add    BYTE PTR [rcx+0x0],cl
   14000a230:	outs   dx,BYTE PTR ds:[rsi]
   14000a231:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a235:	add    BYTE PTR [rdx+0x0],dh
   14000a238:	outs   dx,BYTE PTR ds:[rsi]
   14000a239:	add    BYTE PTR [rcx+0x0],ah
   14000a23c:	ins    BYTE PTR es:[rdi],dx
   14000a23d:	add    BYTE PTR [rsi+0x0],cl
   14000a240:	(bad)  
   14000a241:	add    BYTE PTR [rbp+0x0],ch
   14000a244:	add    BYTE PTR gs:[rax],al
   14000a247:	add    BYTE PTR [rcx+0x0],ah
   14000a24a:	jae    0x14000a24c
   14000a24c:	jo     0x14000a24e
   14000a24e:	outs   dx,BYTE PTR ds:[rsi]
   14000a24f:	add    BYTE PTR [rbp+0x0],ah
   14000a252:	je     0x14000a254
   14000a254:	pop    rdi
   14000a255:	add    BYTE PTR [rdi+0x0],dh
   14000a258:	jo     0x14000a25a
   14000a25a:	add    BYTE PTR cs:[rbp+0x0],ah
   14000a25e:	js     0x14000a260
   14000a260:	add    BYTE PTR gs:[rax],al
   14000a263:	add    BYTE PTR [rdx+0x1002f00],al
   14000a269:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000a26d:	add    BYTE PTR [rdi+0x0],ah
   14000a270:	(bad)  
   14000a271:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000a275:	add    BYTE PTR [rdi+0x0],ch
   14000a278:	jo     0x14000a27a
   14000a27a:	jns    0x14000a27c
   14000a27c:	jb     0x14000a27e
   14000a27e:	imul   eax,DWORD PTR [rax],0x680067
   14000a284:	je     0x14000a286
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	test   eax,0x4d002000
   14000a28d:	add    BYTE PTR [rcx+0x0],ch
   14000a290:	movsxd eax,DWORD PTR [rax]
   14000a292:	jb     0x14000a294
   14000a294:	outs   dx,DWORD PTR ds:[rsi]
   14000a295:	add    BYTE PTR [rbx+0x0],dh
   14000a298:	outs   dx,DWORD PTR ds:[rsi]
   14000a299:	add    BYTE PTR [rsi+0x0],ah
   14000a29c:	je     0x14000a29e
   14000a29e:	and    BYTE PTR [rax],al
   14000a2a0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000a2a4:	jb     0x14000a2a6
   14000a2a6:	jo     0x14000a2a8
   14000a2a8:	outs   dx,DWORD PTR ds:[rsi]
   14000a2a9:	add    BYTE PTR [rdx+0x0],dh
   14000a2ac:	(bad)  
   14000a2ad:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a2b1:	add    BYTE PTR [rdi+0x0],ch
   14000a2b4:	outs   dx,BYTE PTR ds:[rsi]
   14000a2b5:	add    BYTE PTR [rsi],ch
   14000a2b7:	add    BYTE PTR [rax],ah
   14000a2b9:	add    BYTE PTR [rax],ah
   14000a2bb:	add    BYTE PTR [rcx+0x0],al
   14000a2be:	ins    BYTE PTR es:[rdi],dx
   14000a2bf:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000a2c3:	add    BYTE PTR [rdx+0x0],dh
   14000a2c6:	imul   eax,DWORD PTR [rax],0x680067
   14000a2cc:	je     0x14000a2ce
   14000a2ce:	jae    0x14000a2d0
   14000a2d0:	and    BYTE PTR [rax],al
   14000a2d2:	jb     0x14000a2d4
   14000a2d4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000a2d8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a2dc:	jbe    0x14000a2de
   14000a2de:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000a2e3:	add    BYTE PTR [rax],al
   14000a2e5:	add    BYTE PTR [rax],al
   14000a2e7:	add    BYTE PTR [rax+rax*1+0xe],al
   14000a2eb:	add    BYTE PTR [rcx],al
   14000a2ed:	add    BYTE PTR [rdi+0x0],cl
   14000a2f0:	jb     0x14000a2f2
   14000a2f2:	imul   eax,DWORD PTR [rax],0x690067
   14000a2f8:	outs   dx,BYTE PTR ds:[rsi]
   14000a2f9:	add    BYTE PTR [rcx+0x0],ah
   14000a2fc:	ins    BYTE PTR es:[rdi],dx
   14000a2fd:	add    BYTE PTR [rsi+0x0],al
   14000a300:	imul   eax,DWORD PTR [rax],0x65006c
   14000a306:	outs   dx,BYTE PTR ds:[rsi]
   14000a307:	add    BYTE PTR [rcx+0x0],ah
   14000a30a:	ins    DWORD PTR es:[rdi],dx
   14000a30b:	add    BYTE PTR [rbp+0x0],ah
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	(bad)  
   14000a311:	add    BYTE PTR [rbx+0x0],dh
   14000a314:	jo     0x14000a316
   14000a316:	outs   dx,BYTE PTR ds:[rsi]
   14000a317:	add    BYTE PTR [rbp+0x0],ah
   14000a31a:	je     0x14000a31c
   14000a31c:	pop    rdi
   14000a31d:	add    BYTE PTR [rdi+0x0],dh
   14000a320:	jo     0x14000a322
   14000a322:	add    BYTE PTR cs:[rbp+0x0],ah
   14000a326:	js     0x14000a328
   14000a328:	add    BYTE PTR gs:[rax],al
   14000a32b:	add    BYTE PTR [rax+rax*1+0x1a],dl
   14000a32f:	add    BYTE PTR [rcx],al
   14000a331:	add    BYTE PTR [rax+0x0],dl
   14000a334:	jb     0x14000a336
   14000a336:	outs   dx,DWORD PTR ds:[rsi]
   14000a337:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000a33b:	add    BYTE PTR [rbx+0x0],ah
   14000a33e:	je     0x14000a340
   14000a340:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000a344:	ins    DWORD PTR es:[rdi],dx
   14000a345:	add    BYTE PTR [rbp+0x0],ah
   14000a348:	add    BYTE PTR [rax],al
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000a350:	movsxd eax,DWORD PTR [rax]
   14000a352:	jb     0x14000a354
   14000a354:	outs   dx,DWORD PTR ds:[rsi]
   14000a355:	add    BYTE PTR [rbx+0x0],dh
   14000a358:	outs   dx,DWORD PTR ds:[rsi]
   14000a359:	add    BYTE PTR [rsi+0x0],ah
   14000a35c:	je     0x14000a35e
   14000a35e:	scas   al,BYTE PTR es:[rdi]
   14000a35f:	add    BYTE PTR [rax],ah
   14000a361:	add    BYTE PTR [rsi],ch
   14000a363:	add    BYTE PTR [rsi+0x0],cl
   14000a366:	add    BYTE PTR [r8+rax*1+0x20],r10b
   14000a36b:	add    BYTE PTR [rsi+0x0],al
   14000a36e:	jb     0x14000a370
   14000a370:	(bad)  
   14000a371:	add    BYTE PTR [rbp+0x0],ch
   14000a374:	add    BYTE PTR gs:[rdi+0x0],dh
   14000a378:	outs   dx,DWORD PTR ds:[rsi]
   14000a379:	add    BYTE PTR [rdx+0x0],dh
   14000a37c:	imul   eax,DWORD PTR [rax],0x0
   14000a37f:	add    BYTE PTR [rdx],bh
   14000a381:	add    BYTE PTR [rbx],cl
   14000a383:	add    BYTE PTR [rcx],al
   14000a385:	add    BYTE PTR [rax+0x0],dl
   14000a388:	jb     0x14000a38a
   14000a38a:	outs   dx,DWORD PTR ds:[rsi]
   14000a38b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000a38f:	add    BYTE PTR [rbx+0x0],ah
   14000a392:	je     0x14000a394
   14000a394:	push   rsi
   14000a395:	add    BYTE PTR [rbp+0x0],ah
   14000a398:	jb     0x14000a39a
   14000a39a:	jae    0x14000a39c
   14000a39c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	xor    al,0x0
   14000a3a6:	add    BYTE PTR cs:[rsi],dh
   14000a3a9:	add    BYTE PTR [rsi],ch
   14000a3ab:	add    BYTE PTR [rcx],dh
   14000a3ad:	add    BYTE PTR [rax],dh
   14000a3af:	add    BYTE PTR [rip+0x2e003500],dh        # 0x16e00d8b5
   14000a3b5:	add    BYTE PTR [rax],dh
   14000a3b7:	add    BYTE PTR [rax],al
   14000a3b9:	add    BYTE PTR [rax],al
   14000a3bb:	add    BYTE PTR [rax+rax*1],dh
   14000a3be:	(bad)  
   14000a3bf:	add    BYTE PTR [rcx],al
   14000a3c1:	add    BYTE PTR [rbx+0x0],al
   14000a3c4:	outs   dx,DWORD PTR ds:[rsi]
   14000a3c5:	add    BYTE PTR [rbp+0x0],ch
   14000a3c8:	ins    DWORD PTR es:[rdi],dx
   14000a3c9:	add    BYTE PTR [rbp+0x0],ah
   14000a3cc:	outs   dx,BYTE PTR ds:[rsi]
   14000a3cd:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000a3d1:	add    BYTE PTR [rax],al
   14000a3d3:	add    BYTE PTR [rsi+0x0],al
   14000a3d6:	ins    BYTE PTR es:[rdi],dx
   14000a3d7:	add    BYTE PTR [rcx+0x0],ah
   14000a3da:	jbe    0x14000a3dc
   14000a3dc:	outs   dx,DWORD PTR ds:[rsi]
   14000a3dd:	add    BYTE PTR [rdx+0x0],dh
   14000a3e0:	cmp    eax,0x65005200
   14000a3e5:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000a3e9:	add    BYTE PTR [rcx+0x0],ch
   14000a3ec:	ins    BYTE PTR es:[rdi],dx
   14000a3ed:	add    BYTE PTR [rax],al
   14000a3ef:	add    BYTE PTR [rax+rax*1],dh
   14000a3f2:	or     al,BYTE PTR [rax]
   14000a3f4:	add    DWORD PTR [rax],eax
   14000a3f6:	push   rax
   14000a3f7:	add    BYTE PTR [rdx+0x0],dh
   14000a3fa:	imul   eax,DWORD PTR [rax],0x610076
   14000a400:	je     0x14000a402
   14000a402:	add    BYTE PTR gs:[rdx+0x0],al
   14000a406:	jne    0x14000a408
   14000a408:	imul   eax,DWORD PTR [rax],0x64006c
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	add    BYTE PTR [rax+rax*1+0x42],r8b
   14000a415:	add    BYTE PTR [rax+rax*1+0x44],cl
   14000a419:	add    BYTE PTR [rdx],dh
   14000a41b:	add    BYTE PTR [rdx],dh
   14000a41d:	add    BYTE PTR [rdi],dh
   14000a41f:	add    BYTE PTR [rax+rax*1+0x0],al
   14000a423:	add    BYTE PTR [rax+rax*1+0x0],al
   14000a427:	add    BYTE PTR [rcx],al
   14000a429:	add    BYTE PTR [rsi+0x0],dl
   14000a42c:	(bad)  
   14000a42d:	add    BYTE PTR [rdx+0x0],dh
   14000a430:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000a434:	ins    BYTE PTR es:[rdi],dx
   14000a435:	add    BYTE PTR [rbp+0x0],ah
   14000a438:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000a43c:	data16 add BYTE PTR [rdi+0x0],ch
   14000a440:	add    BYTE PTR [rax],al
   14000a442:	add    BYTE PTR [rax],al
   14000a444:	and    al,0x0
   14000a446:	add    al,0x0
   14000a448:	add    BYTE PTR [rax],al
   14000a44a:	push   rsp
   14000a44b:	add    BYTE PTR [rdx+0x0],dh
   14000a44e:	(bad)  
   14000a44f:	add    BYTE PTR [rsi+0x0],ch
   14000a452:	jae    0x14000a454
   14000a454:	ins    BYTE PTR es:[rdi],dx
   14000a455:	add    BYTE PTR [rcx+0x0],ah
   14000a458:	je     0x14000a45a
   14000a45a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a460:	add    BYTE PTR [rax],al
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	or     DWORD PTR [rax+rsi*4],eax
   14000a467:	add    al,0x3c
   14000a469:	(bad)  
   14000a46a:	jae    0x14000a4df
   14000a46c:	gs ins DWORD PTR es:[rdi],dx
   14000a46e:	(bad)  
   14000a46f:	ins    BYTE PTR es:[rdi],dx
   14000a470:	jns    0x14000a492
   14000a472:	js     0x14000a4e1
   14000a474:	ins    BYTE PTR es:[rdi],dx
   14000a475:	outs   dx,BYTE PTR ds:[rsi]
   14000a476:	jae    0x14000a4b5
   14000a478:	and    dh,BYTE PTR [rbp+0x72]
   14000a47b:	outs   dx,BYTE PTR ds:[rsi]
   14000a47c:	cmp    dh,BYTE PTR [rbx+0x63]
   14000a47f:	push   0x73616d65
   14000a484:	sub    eax,0x7263696d
   14000a489:	outs   dx,DWORD PTR ds:[rsi]
   14000a48a:	jae    0x14000a4fb
   14000a48c:	data16 je 0x14000a4bc
   14000a48f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a492:	cmp    ah,BYTE PTR [rcx+0x73]
   14000a495:	ins    DWORD PTR es:[rdi],dx
   14000a496:	cs jbe 0x14000a4ca
   14000a499:	and    ah,BYTE PTR [rax]
   14000a49b:	ins    DWORD PTR es:[rdi],dx
   14000a49c:	(bad)  
   14000a49d:	outs   dx,BYTE PTR ds:[rsi]
   14000a49e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000a4a5:	jb     0x14000a51a
   14000a4a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000a4ae:	xor    BYTE PTR [rdx],ah
   14000a4b0:	ds cmp al,0x61
   14000a4b3:	jae    0x14000a528
   14000a4b5:	gs ins DWORD PTR es:[rdi],dx
   14000a4b7:	(bad)  
   14000a4b8:	ins    BYTE PTR es:[rdi],dx
   14000a4b9:	jns    0x14000a504
   14000a4bb:	fs outs dx,BYTE PTR gs:[rsi]
   14000a4be:	je     0x14000a529
   14000a4c0:	je     0x14000a53b
   14000a4c2:	and    BYTE PTR [rsi+0x65],dh
   14000a4c5:	jb     0x14000a53a
   14000a4c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000a4ce:	xor    BYTE PTR [rsi],ch
   14000a4d0:	xor    BYTE PTR [rsi],ch
   14000a4d2:	xor    BYTE PTR [rdx],ah
   14000a4d4:	and    BYTE PTR [rax+0x72],dh
   14000a4d7:	outs   dx,DWORD PTR ds:[rsi]
   14000a4d8:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a4db:	jae    0x14000a54c
   14000a4dd:	jb     0x14000a520
   14000a4df:	jb     0x14000a544
   14000a4e1:	push   0x63657469
   14000a4e6:	je     0x14000a55d
   14000a4e8:	jb     0x14000a54f
   14000a4ea:	cmp    eax,0x36385822
   14000a4ef:	and    ah,BYTE PTR [rax]
   14000a4f1:	outs   dx,BYTE PTR ds:[rsi]
   14000a4f2:	(bad)  
   14000a4f3:	ins    DWORD PTR es:[rdi],dx
   14000a4f4:	gs cmp eax,0x70736122
   14000a4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000a4fb:	gs je  0x14000a55d
   14000a4fe:	ja     0x14000a570
   14000a500:	and    ah,BYTE PTR [rax]
   14000a502:	je     0x14000a57d
   14000a504:	jo     0x14000a56b
   14000a506:	cmp    eax,0x6e697722
   14000a50b:	xor    esi,DWORD PTR [rdx]
   14000a50d:	and    bh,BYTE PTR [rsi]
   14000a50f:	cmp    al,0x2f
   14000a511:	(bad)  
   14000a512:	jae    0x14000a587
   14000a514:	gs ins DWORD PTR es:[rdi],dx
   14000a516:	(bad)  
   14000a517:	ins    BYTE PTR es:[rdi],dx
   14000a518:	jns    0x14000a563
   14000a51a:	fs outs dx,BYTE PTR gs:[rsi]
   14000a51d:	je     0x14000a588
   14000a51f:	je     0x14000a59a
   14000a521:	ds cmp al,0x74
   14000a524:	jb     0x14000a59b
   14000a526:	jae    0x14000a59c
   14000a528:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a52a:	outs   dx,WORD PTR ds:[rsi]
   14000a52c:	and    BYTE PTR [rax+0x6d],bh
   14000a52f:	ins    BYTE PTR es:[rdi],dx
   14000a530:	outs   dx,BYTE PTR ds:[rsi]
   14000a531:	jae    0x14000a570
   14000a533:	and    dh,BYTE PTR [rbp+0x72]
   14000a536:	outs   dx,BYTE PTR ds:[rsi]
   14000a537:	cmp    dh,BYTE PTR [rbx+0x63]
   14000a53a:	push   0x73616d65
   14000a53f:	sub    eax,0x7263696d
   14000a544:	outs   dx,DWORD PTR ds:[rsi]
   14000a545:	jae    0x14000a5b6
   14000a547:	data16 je 0x14000a577
   14000a54a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a54d:	cmp    ah,BYTE PTR [rcx+0x73]
   14000a550:	ins    DWORD PTR es:[rdi],dx
   14000a551:	cs jbe 0x14000a587
   14000a554:	and    bh,BYTE PTR [rsi]
   14000a556:	cmp    al,0x73
   14000a558:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000a55c:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   14000a564:	jne    0x14000a5cb
   14000a566:	jae    0x14000a5dc
   14000a568:	gs fs push rax
   14000a56b:	jb     0x14000a5d6
   14000a56d:	jbe    0x14000a5d8
   14000a56f:	ins    BYTE PTR es:[rdi],dx
   14000a570:	gs addr32 gs jae 0x14000a5b3
   14000a575:	cmp    al,0x72
   14000a577:	gs jno 0x14000a5ef
   14000a57a:	gs jae 0x14000a5f1
   14000a57d:	gs fs rex.RB js 0x14000a5e7
   14000a582:	movsxd esi,DWORD PTR [rbp+0x74]
   14000a585:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000a58c:	ins    BYTE PTR es:[rdi],dx
   14000a58d:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000a591:	gs ins BYTE PTR es:[rdi],dx
   14000a593:	cmp    eax,0x49736122
   14000a598:	outs   dx,BYTE PTR ds:[rsi]
   14000a599:	jbe    0x14000a60a
   14000a59b:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000a59f:	and    BYTE PTR [rbp+0x69],dh
   14000a5a2:	movsxd esp,DWORD PTR [r11+0x65]
   14000a5a6:	jae    0x14000a61b
   14000a5a8:	cmp    eax,0x6c616622
   14000a5ad:	jae    0x14000a614
   14000a5af:	and    bh,BYTE PTR [rsi]
   14000a5b1:	cmp    al,0x2f
   14000a5b3:	jb     0x14000a61a
   14000a5b5:	jno    0x14000a62c
   14000a5b7:	gs jae 0x14000a62e
   14000a5ba:	gs fs rex.RB js 0x14000a624
   14000a5bf:	movsxd esi,DWORD PTR [rbp+0x74]
   14000a5c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000a5c9:	ins    BYTE PTR es:[rdi],dx
   14000a5ca:	ds cmp al,0x2f
   14000a5cd:	jb     0x14000a634
   14000a5cf:	jno    0x14000a646
   14000a5d1:	gs jae 0x14000a648
   14000a5d4:	gs fs push rax
   14000a5d7:	jb     0x14000a642
   14000a5d9:	jbe    0x14000a644
   14000a5db:	ins    BYTE PTR es:[rdi],dx
   14000a5dc:	gs addr32 gs jae 0x14000a61f
   14000a5e1:	cmp    al,0x2f
   14000a5e3:	jae    0x14000a64a
   14000a5e5:	movsxd esi,DWORD PTR [rbp+0x72]
   14000a5e8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   14000a5f0:	jne    0x14000a665
   14000a5f2:	je     0x14000a63d
   14000a5f4:	outs   dx,BYTE PTR ds:[rsi]
   14000a5f5:	outs   dx,WORD PTR ds:[rsi]
   14000a5f7:	ds cmp al,0x63
   14000a5fa:	outs   dx,DWORD PTR ds:[rsi]
   14000a5fb:	ins    DWORD PTR es:[rdi],dx
   14000a5fc:	jo     0x14000a65f
   14000a5fe:	je     0x14000a669
   14000a600:	(bad)  
   14000a601:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14000a609:	ins    BYTE PTR es:[rdi],dx
   14000a60a:	outs   dx,BYTE PTR ds:[rsi]
   14000a60b:	jae    0x14000a64a
   14000a60d:	and    dh,BYTE PTR [rbp+0x72]
   14000a610:	outs   dx,BYTE PTR ds:[rsi]
   14000a611:	cmp    dh,BYTE PTR [rbx+0x63]
   14000a614:	push   0x73616d65
   14000a619:	sub    eax,0x7263696d
   14000a61e:	outs   dx,DWORD PTR ds:[rsi]
   14000a61f:	jae    0x14000a690
   14000a621:	data16 je 0x14000a651
   14000a624:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a627:	cmp    ah,BYTE PTR [rbx+0x6f]
   14000a62a:	ins    DWORD PTR es:[rdi],dx
   14000a62b:	jo     0x14000a68e
   14000a62d:	je     0x14000a698
   14000a62f:	(bad)  
   14000a630:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14000a638:	and    bh,BYTE PTR [rsi]
   14000a63a:	cmp    al,0x61
   14000a63c:	jo     0x14000a6ae
   14000a63e:	ins    BYTE PTR es:[rdi],dx
   14000a63f:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000a646:	ds cmp al,0x73
   14000a649:	jne    0x14000a6bb
   14000a64b:	jo     0x14000a6bc
   14000a64d:	jb     0x14000a6c3
   14000a64f:	gs fs rex.WRXB push r11
   14000a653:	and    BYTE PTR [rcx+0x64],cl
   14000a656:	cmp    eax,0x35337b22
   14000a65b:	xor    DWORD PTR [rbx],esi
   14000a65d:	cmp    BYTE PTR [rdx+0x39],ah
   14000a660:	(bad)  
   14000a661:	sub    eax,0x36396435
   14000a666:	sub    eax,0x64626634
   14000a66b:	sub    eax,0x64326538
   14000a670:	sub    eax,0x34343261
   14000a675:	xor    BYTE PTR [rdx],dh
   14000a677:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a133dfe3
   14000a67d:	jge    0x14000a6a1
   14000a67f:	ds cmp al,0x2f
   14000a682:	jae    0x14000a6f9
   14000a684:	jo     0x14000a6f6
   14000a686:	outs   dx,DWORD PTR ds:[rsi]
   14000a687:	jb     0x14000a6fd
   14000a689:	gs fs rex.WRXB push r11
   14000a68d:	ds cmp al,0x73
   14000a690:	jne    0x14000a702
   14000a692:	jo     0x14000a703
   14000a694:	jb     0x14000a70a
   14000a696:	gs fs rex.WRXB push r11
   14000a69a:	and    BYTE PTR [rcx+0x64],cl
   14000a69d:	cmp    eax,0x61347b22
   14000a6a2:	xor    ah,BYTE PTR [rsi+0x32]
   14000a6a5:	cmp    BYTE PTR [rbp+0x33],ah
   14000a6a8:	sub    eax,0x39623335
   14000a6ad:	sub    eax,0x31343434
   14000a6b2:	sub    eax,0x63396162
   14000a6b7:	sub    eax,0x64393664
   14000a6bc:	xor    al,0x61
   14000a6be:	xor    al,0x61
   14000a6c0:	ss xor edi,DWORD PTR gs:[rax]
   14000a6c4:	jge    0x14000a6e8
   14000a6c6:	ds cmp al,0x2f
   14000a6c9:	jae    0x14000a740
   14000a6cb:	jo     0x14000a73d
   14000a6cd:	outs   dx,DWORD PTR ds:[rsi]
   14000a6ce:	jb     0x14000a744
   14000a6d0:	gs fs rex.WRXB push r11
   14000a6d4:	ds cmp al,0x73
   14000a6d7:	jne    0x14000a749
   14000a6d9:	jo     0x14000a74a
   14000a6db:	jb     0x14000a751
   14000a6dd:	gs fs rex.WRXB push r11
   14000a6e1:	and    BYTE PTR [rcx+0x64],cl
   14000a6e4:	cmp    eax,0x66317b22
   14000a6e9:	ss (bad) 
   14000a6eb:	movsxd esi,DWORD PTR ss:[rdi]
   14000a6ee:	ss sub eax,0x31653038
   14000a6f4:	sub    eax,0x39333234
   14000a6f9:	sub    eax,0x62623539
   14000a6fe:	sub    eax,0x30643338
   14000a703:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   14000a70a:	cmp    BYTE PTR [rbp+0x22],bh
   14000a70d:	ds cmp al,0x2f
   14000a710:	jae    0x14000a787
   14000a712:	jo     0x14000a784
   14000a714:	outs   dx,DWORD PTR ds:[rsi]
   14000a715:	jb     0x14000a78b
   14000a717:	gs fs rex.WRXB push r11
   14000a71b:	ds cmp al,0x2f
   14000a71e:	(bad)  
   14000a71f:	jo     0x14000a791
   14000a721:	ins    BYTE PTR es:[rdi],dx
   14000a722:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000a729:	ds cmp al,0x2f
   14000a72c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a72f:	jo     0x14000a792
   14000a731:	je     0x14000a79c
   14000a733:	(bad)  
   14000a734:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2f3c3e79
   14000a73c:	(bad)  
   14000a73d:	jae    0x14000a7b2
   14000a73f:	gs ins DWORD PTR es:[rdi],dx
   14000a741:	(bad)  
   14000a742:	ins    BYTE PTR es:[rdi],dx
   14000a743:	jns    0x14000a783
   14000a745:	push   rax
   14000a746:	rex.B
   14000a747:	rex.R

Disassembly of section .reloc:

000000014000b000 <.reloc>:
   14000b000:	add    BYTE PTR [rax+0x0],ah
   14000b003:	add    BYTE PTR [rax+rax*1],ah
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	mov    BYTE PTR [rbx-0x5c675c70],ah
   14000b00e:	movabs al,ds:0x20a3c8a3c0a3b8a3
   14000b017:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b018:	sub    BYTE PTR [rax+rsi*1+0x28a438a4],ah
   14000b01f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b020:	xor    BYTE PTR [rdi-0x7fff5728],ah
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	adc    al,0x0
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	add    BYTE PTR [rax-0x5fbf5fc8],ah
   14000b032:	rex.W
   14000b033:	.byte 0xa0
   14000b034:	push   rax
   14000b035:	.byte 0xa0
	...
