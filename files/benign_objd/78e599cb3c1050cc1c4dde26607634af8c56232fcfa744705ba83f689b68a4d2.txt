
78e599cb3c1050cc1c4dde26607634af8c56232fcfa744705ba83f689b68a4d2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    rax,rsp
   140001003:	push   rbp
   140001004:	lea    rbp,[rax-0x178]
   14000100b:	sub    rsp,0x270
   140001012:	mov    QWORD PTR [rbp+0x160],0xfffffffffffffffe
   14000101d:	mov    QWORD PTR [rax+0x10],rbx
   140001021:	mov    QWORD PTR [rax+0x18],rdi
   140001025:	xor    eax,eax
   140001027:	mov    QWORD PTR [rip+0x43b0a],rax        # 0x140044b38
   14000102e:	mov    QWORD PTR [rip+0x43b0b],rax        # 0x140044b40
   140001035:	mov    QWORD PTR [rsp+0x48],0x7
   14000103e:	xor    ebx,ebx
   140001040:	mov    QWORD PTR [rsp+0x40],rbx
   140001045:	mov    WORD PTR [rsp+0x30],bx
   14000104a:	lea    r8d,[rax+0x5]
   14000104e:	lea    rdx,[rip+0x36ae3]        # 0x140037b38
   140001055:	lea    rcx,[rsp+0x30]
   14000105a:	call   0x140003d90
   14000105f:	mov    DWORD PTR [rsp+0x50],0x1
   140001067:	mov    QWORD PTR [rsp+0x70],0x7
   140001070:	mov    QWORD PTR [rsp+0x68],rbx
   140001075:	mov    WORD PTR [rsp+0x58],bx
   14000107a:	lea    r8d,[rbx+0x7]
   14000107e:	lea    rdx,[rip+0x36ac3]        # 0x140037b48
   140001085:	lea    rcx,[rsp+0x58]
   14000108a:	call   0x140003d90
   14000108f:	mov    DWORD PTR [rsp+0x78],0x2
   140001097:	mov    QWORD PTR [rbp-0x68],0x7
   14000109f:	mov    QWORD PTR [rbp-0x70],rbx
   1400010a3:	mov    WORD PTR [rbp-0x80],bx
   1400010a7:	lea    r8d,[rbx+0x6]
   1400010ab:	lea    rdx,[rip+0x36aa6]        # 0x140037b58
   1400010b2:	lea    rcx,[rbp-0x80]
   1400010b6:	call   0x140003d90
   1400010bb:	mov    DWORD PTR [rbp-0x60],0x3
   1400010c2:	mov    QWORD PTR [rbp-0x40],0x7
   1400010ca:	mov    QWORD PTR [rbp-0x48],rbx
   1400010ce:	mov    WORD PTR [rbp-0x58],bx
   1400010d2:	lea    r8d,[rbx+0x6]
   1400010d6:	lea    rdx,[rip+0x36a8b]        # 0x140037b68
   1400010dd:	lea    rcx,[rbp-0x58]
   1400010e1:	call   0x140003d90
   1400010e6:	mov    DWORD PTR [rbp-0x38],0x4
   1400010ed:	mov    QWORD PTR [rbp-0x18],0x7
   1400010f5:	mov    QWORD PTR [rbp-0x20],rbx
   1400010f9:	mov    WORD PTR [rbp-0x30],bx
   1400010fd:	lea    r8d,[rbx+0x6]
   140001101:	lea    rdx,[rip+0x36a70]        # 0x140037b78
   140001108:	lea    rcx,[rbp-0x30]
   14000110c:	call   0x140003d90
   140001111:	mov    DWORD PTR [rbp-0x10],0x5
   140001118:	mov    QWORD PTR [rbp+0x10],0x7
   140001120:	mov    QWORD PTR [rbp+0x8],rbx
   140001124:	mov    WORD PTR [rbp-0x8],bx
   140001128:	lea    r8d,[rbx+0xc]
   14000112c:	lea    rdx,[rip+0x36a55]        # 0x140037b88
   140001133:	lea    rcx,[rbp-0x8]
   140001137:	call   0x140003d90
   14000113c:	mov    DWORD PTR [rbp+0x18],0x6
   140001143:	mov    QWORD PTR [rbp+0x38],0x7
   14000114b:	mov    QWORD PTR [rbp+0x30],rbx
   14000114f:	mov    WORD PTR [rbp+0x20],bx
   140001153:	lea    r8d,[rbx+0xc]
   140001157:	lea    rdx,[rip+0x36a4a]        # 0x140037ba8
   14000115e:	lea    rcx,[rbp+0x20]
   140001162:	call   0x140003d90
   140001167:	mov    DWORD PTR [rbp+0x40],0x9
   14000116e:	mov    QWORD PTR [rbp+0x60],0x7
   140001176:	mov    QWORD PTR [rbp+0x58],rbx
   14000117a:	mov    WORD PTR [rbp+0x48],bx
   14000117e:	lea    r8d,[rbx+0xc]
   140001182:	lea    rdx,[rip+0x36a3f]        # 0x140037bc8
   140001189:	lea    rcx,[rbp+0x48]
   14000118d:	call   0x140003d90
   140001192:	mov    DWORD PTR [rbp+0x68],0xa
   140001199:	mov    QWORD PTR [rbp+0x88],0x7
   1400011a4:	mov    QWORD PTR [rbp+0x80],rbx
   1400011ab:	mov    WORD PTR [rbp+0x70],bx
   1400011af:	lea    r8d,[rbx+0xa]
   1400011b3:	lea    rdx,[rip+0x36a2e]        # 0x140037be8
   1400011ba:	lea    rcx,[rbp+0x70]
   1400011be:	call   0x140003d90
   1400011c3:	mov    DWORD PTR [rbp+0x90],0x7
   1400011cd:	mov    QWORD PTR [rbp+0xb0],0x7
   1400011d8:	mov    QWORD PTR [rbp+0xa8],rbx
   1400011df:	mov    WORD PTR [rbp+0x98],bx
   1400011e6:	lea    r8d,[rbx+0xa]
   1400011ea:	lea    rdx,[rip+0x36a0f]        # 0x140037c00
   1400011f1:	lea    rcx,[rbp+0x98]
   1400011f8:	call   0x140003d90
   1400011fd:	mov    DWORD PTR [rbp+0xb8],0x8
   140001207:	mov    QWORD PTR [rbp+0xd8],0x7
   140001212:	mov    QWORD PTR [rbp+0xd0],rbx
   140001219:	mov    WORD PTR [rbp+0xc0],bx
   140001220:	lea    r8d,[rbx+0xc]
   140001224:	lea    rdx,[rip+0x369ed]        # 0x140037c18
   14000122b:	lea    rcx,[rbp+0xc0]
   140001232:	call   0x140003d90
   140001237:	mov    DWORD PTR [rbp+0xe0],0xb
   140001241:	mov    QWORD PTR [rbp+0x100],0x7
   14000124c:	mov    QWORD PTR [rbp+0xf8],rbx
   140001253:	mov    WORD PTR [rbp+0xe8],bx
   14000125a:	lea    r8d,[rbx+0xb]
   14000125e:	lea    rdx,[rip+0x369d3]        # 0x140037c38
   140001265:	lea    rcx,[rbp+0xe8]
   14000126c:	call   0x140003d90
   140001271:	mov    DWORD PTR [rbp+0x108],0xc
   14000127b:	mov    QWORD PTR [rbp+0x128],0x7
   140001286:	mov    QWORD PTR [rbp+0x120],rbx
   14000128d:	mov    WORD PTR [rbp+0x110],bx
   140001294:	lea    r8d,[rbx+0xc]
   140001298:	lea    rdx,[rip+0x369b1]        # 0x140037c50
   14000129f:	lea    rcx,[rbp+0x110]
   1400012a6:	call   0x140003d90
   1400012ab:	mov    DWORD PTR [rbp+0x130],0xd
   1400012b5:	mov    QWORD PTR [rbp+0x150],0x7
   1400012c0:	mov    QWORD PTR [rbp+0x148],rbx
   1400012c7:	mov    WORD PTR [rbp+0x138],bx
   1400012ce:	lea    r8d,[rbx+0x7]
   1400012d2:	lea    rdx,[rip+0x36997]        # 0x140037c70
   1400012d9:	lea    rcx,[rbp+0x138]
   1400012e0:	call   0x140003d90
   1400012e5:	mov    DWORD PTR [rbp+0x158],0xe
   1400012ef:	mov    QWORD PTR [rip+0x43842],rbx        # 0x140044b38
   1400012f6:	mov    QWORD PTR [rip+0x43843],rbx        # 0x140044b40
   1400012fd:	call   0x140002700
   140001302:	mov    rbx,rax
   140001305:	mov    QWORD PTR [rip+0x4382c],rax        # 0x140044b38
   14000130c:	lea    rdi,[rsp+0x30]
   140001311:	mov    rdx,rdi
   140001314:	call   0x140002750
   140001319:	lea    r9,[rax+0x20]
   14000131d:	mov    QWORD PTR [rsp+0x20],rax
   140001322:	mov    r8,rbx
   140001325:	lea    rdx,[rbp+0x180]
   14000132c:	call   0x1400027d0
   140001331:	add    rdi,0x28
   140001335:	lea    rax,[rbp+0x160]
   14000133c:	cmp    rdi,rax
   14000133f:	je     0x14000134a
   140001341:	mov    rbx,QWORD PTR [rip+0x437f0]        # 0x140044b38
   140001348:	jmp    0x140001311
   14000134a:	lea    r9,[rip+0x66f]        # 0x1400019c0
   140001351:	mov    edx,0x28
   140001356:	lea    r8d,[rdx-0x1a]
   14000135a:	lea    rcx,[rsp+0x30]
   14000135f:	call   0x1400187f0
   140001364:	lea    rcx,[rip+0x2cd65]        # 0x14002e0d0
   14000136b:	lea    r11,[rsp+0x270]
   140001373:	mov    rbx,QWORD PTR [r11+0x18]
   140001377:	mov    rdi,QWORD PTR [r11+0x20]
   14000137b:	mov    rsp,r11
   14000137e:	pop    rbp
   14000137f:	jmp    0x1400189ec
   140001384:	int3   
   140001385:	int3   
   140001386:	int3   
   140001387:	int3   
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	mov    rax,rsp
   140001393:	push   rbp
   140001394:	lea    rbp,[rax-0x178]
   14000139b:	sub    rsp,0x270
   1400013a2:	mov    QWORD PTR [rbp+0x160],0xfffffffffffffffe
   1400013ad:	mov    QWORD PTR [rax+0x10],rbx
   1400013b1:	mov    QWORD PTR [rax+0x18],rdi
   1400013b5:	xor    eax,eax
   1400013b7:	mov    QWORD PTR [rip+0x4378a],rax        # 0x140044b48
   1400013be:	mov    QWORD PTR [rip+0x4378b],rax        # 0x140044b50
   1400013c5:	mov    DWORD PTR [rsp+0x30],0x1
   1400013cd:	mov    QWORD PTR [rsp+0x50],0x7
   1400013d6:	xor    ebx,ebx
   1400013d8:	mov    QWORD PTR [rsp+0x48],rbx
   1400013dd:	mov    WORD PTR [rsp+0x38],bx
   1400013e2:	lea    r8d,[rax+0x5]
   1400013e6:	lea    rdx,[rip+0x3674b]        # 0x140037b38
   1400013ed:	lea    rcx,[rsp+0x38]
   1400013f2:	call   0x140003d90
   1400013f7:	nop
   1400013f8:	mov    DWORD PTR [rsp+0x58],0x2
   140001400:	mov    QWORD PTR [rsp+0x78],0x7
   140001409:	mov    QWORD PTR [rsp+0x70],rbx
   14000140e:	mov    WORD PTR [rsp+0x60],bx
   140001413:	lea    r8d,[rbx+0x7]
   140001417:	lea    rdx,[rip+0x3672a]        # 0x140037b48
   14000141e:	lea    rcx,[rsp+0x60]
   140001423:	call   0x140003d90
   140001428:	nop
   140001429:	mov    DWORD PTR [rbp-0x80],0x3
   140001430:	mov    QWORD PTR [rbp-0x60],0x7
   140001438:	mov    QWORD PTR [rbp-0x68],rbx
   14000143c:	mov    WORD PTR [rbp-0x78],bx
   140001440:	lea    r8d,[rbx+0x6]
   140001444:	lea    rdx,[rip+0x3670d]        # 0x140037b58
   14000144b:	lea    rcx,[rbp-0x78]
   14000144f:	call   0x140003d90
   140001454:	nop
   140001455:	mov    DWORD PTR [rbp-0x58],0x4
   14000145c:	mov    QWORD PTR [rbp-0x38],0x7
   140001464:	mov    QWORD PTR [rbp-0x40],rbx
   140001468:	mov    WORD PTR [rbp-0x50],bx
   14000146c:	lea    r8d,[rbx+0x6]
   140001470:	lea    rdx,[rip+0x366f1]        # 0x140037b68
   140001477:	lea    rcx,[rbp-0x50]
   14000147b:	call   0x140003d90
   140001480:	nop
   140001481:	mov    DWORD PTR [rbp-0x30],0x5
   140001488:	mov    QWORD PTR [rbp-0x10],0x7
   140001490:	mov    QWORD PTR [rbp-0x18],rbx
   140001494:	mov    WORD PTR [rbp-0x28],bx
   140001498:	lea    r8d,[rbx+0x6]
   14000149c:	lea    rdx,[rip+0x366d5]        # 0x140037b78
   1400014a3:	lea    rcx,[rbp-0x28]
   1400014a7:	call   0x140003d90
   1400014ac:	nop
   1400014ad:	mov    DWORD PTR [rbp-0x8],0x6
   1400014b4:	mov    QWORD PTR [rbp+0x18],0x7
   1400014bc:	mov    QWORD PTR [rbp+0x10],rbx
   1400014c0:	mov    WORD PTR [rbp+0x0],bx
   1400014c4:	lea    r8d,[rbx+0xc]
   1400014c8:	lea    rdx,[rip+0x366b9]        # 0x140037b88
   1400014cf:	lea    rcx,[rbp+0x0]
   1400014d3:	call   0x140003d90
   1400014d8:	nop
   1400014d9:	mov    DWORD PTR [rbp+0x20],0x9
   1400014e0:	mov    QWORD PTR [rbp+0x40],0x7
   1400014e8:	mov    QWORD PTR [rbp+0x38],rbx
   1400014ec:	mov    WORD PTR [rbp+0x28],bx
   1400014f0:	lea    r8d,[rbx+0xc]
   1400014f4:	lea    rdx,[rip+0x366ad]        # 0x140037ba8
   1400014fb:	lea    rcx,[rbp+0x28]
   1400014ff:	call   0x140003d90
   140001504:	nop
   140001505:	mov    DWORD PTR [rbp+0x48],0xa
   14000150c:	mov    QWORD PTR [rbp+0x68],0x7
   140001514:	mov    QWORD PTR [rbp+0x60],rbx
   140001518:	mov    WORD PTR [rbp+0x50],bx
   14000151c:	lea    r8d,[rbx+0xc]
   140001520:	lea    rdx,[rip+0x366a1]        # 0x140037bc8
   140001527:	lea    rcx,[rbp+0x50]
   14000152b:	call   0x140003d90
   140001530:	nop
   140001531:	mov    DWORD PTR [rbp+0x70],0x7
   140001538:	mov    QWORD PTR [rbp+0x90],0x7
   140001543:	mov    QWORD PTR [rbp+0x88],rbx
   14000154a:	mov    WORD PTR [rbp+0x78],bx
   14000154e:	lea    r8d,[rbx+0xa]
   140001552:	lea    rdx,[rip+0x3668f]        # 0x140037be8
   140001559:	lea    rcx,[rbp+0x78]
   14000155d:	call   0x140003d90
   140001562:	nop
   140001563:	mov    DWORD PTR [rbp+0x98],0x8
   14000156d:	mov    QWORD PTR [rbp+0xb8],0x7
   140001578:	mov    QWORD PTR [rbp+0xb0],rbx
   14000157f:	mov    WORD PTR [rbp+0xa0],bx
   140001586:	lea    r8d,[rbx+0xa]
   14000158a:	lea    rdx,[rip+0x3666f]        # 0x140037c00
   140001591:	lea    rcx,[rbp+0xa0]
   140001598:	call   0x140003d90
   14000159d:	nop
   14000159e:	mov    DWORD PTR [rbp+0xc0],0xb
   1400015a8:	mov    QWORD PTR [rbp+0xe0],0x7
   1400015b3:	mov    QWORD PTR [rbp+0xd8],rbx
   1400015ba:	mov    WORD PTR [rbp+0xc8],bx
   1400015c1:	lea    r8d,[rbx+0xc]
   1400015c5:	lea    rdx,[rip+0x3664c]        # 0x140037c18
   1400015cc:	lea    rcx,[rbp+0xc8]
   1400015d3:	call   0x140003d90
   1400015d8:	nop
   1400015d9:	mov    DWORD PTR [rbp+0xe8],0xc
   1400015e3:	mov    QWORD PTR [rbp+0x108],0x7
   1400015ee:	mov    QWORD PTR [rbp+0x100],rbx
   1400015f5:	mov    WORD PTR [rbp+0xf0],bx
   1400015fc:	lea    r8d,[rbx+0xb]
   140001600:	lea    rdx,[rip+0x36631]        # 0x140037c38
   140001607:	lea    rcx,[rbp+0xf0]
   14000160e:	call   0x140003d90
   140001613:	nop
   140001614:	mov    DWORD PTR [rbp+0x110],0xd
   14000161e:	mov    QWORD PTR [rbp+0x130],0x7
   140001629:	mov    QWORD PTR [rbp+0x128],rbx
   140001630:	mov    WORD PTR [rbp+0x118],bx
   140001637:	lea    r8d,[rbx+0xc]
   14000163b:	lea    rdx,[rip+0x3660e]        # 0x140037c50
   140001642:	lea    rcx,[rbp+0x118]
   140001649:	call   0x140003d90
   14000164e:	nop
   14000164f:	mov    DWORD PTR [rbp+0x138],0xe
   140001659:	mov    QWORD PTR [rbp+0x158],0x7
   140001664:	mov    QWORD PTR [rbp+0x150],rbx
   14000166b:	mov    WORD PTR [rbp+0x140],bx
   140001672:	lea    r8d,[rbx+0x7]
   140001676:	lea    rdx,[rip+0x365f3]        # 0x140037c70
   14000167d:	lea    rcx,[rbp+0x140]
   140001684:	call   0x140003d90
   140001689:	nop
   14000168a:	mov    QWORD PTR [rip+0x434b7],rbx        # 0x140044b48
   140001691:	mov    QWORD PTR [rip+0x434b8],rbx        # 0x140044b50
   140001698:	call   0x140002700
   14000169d:	mov    rbx,rax
   1400016a0:	mov    QWORD PTR [rip+0x434a1],rax        # 0x140044b48
   1400016a7:	lea    rdi,[rsp+0x30]
   1400016ac:	nop    DWORD PTR [rax+0x0]
   1400016b0:	mov    rdx,rdi
   1400016b3:	call   0x140002a60
   1400016b8:	lea    r9,[rax+0x20]
   1400016bc:	mov    QWORD PTR [rsp+0x20],rax
   1400016c1:	mov    r8,rbx
   1400016c4:	lea    rdx,[rbp+0x180]
   1400016cb:	call   0x140002ae0
   1400016d0:	add    rdi,0x28
   1400016d4:	lea    rax,[rbp+0x160]
   1400016db:	cmp    rdi,rax
   1400016de:	je     0x1400016e9
   1400016e0:	mov    rbx,QWORD PTR [rip+0x43461]        # 0x140044b48
   1400016e7:	jmp    0x1400016b0
   1400016e9:	lea    r9,[rip+0x300]        # 0x1400019f0
   1400016f0:	mov    edx,0x28
   1400016f5:	lea    r8d,[rdx-0x1a]
   1400016f9:	lea    rcx,[rsp+0x30]
   1400016fe:	call   0x1400187f0
   140001703:	lea    rcx,[rip+0x2ca36]        # 0x14002e140
   14000170a:	lea    r11,[rsp+0x270]
   140001712:	mov    rbx,QWORD PTR [r11+0x18]
   140001716:	mov    rdi,QWORD PTR [r11+0x20]
   14000171a:	mov    rsp,r11
   14000171d:	pop    rbp
   14000171e:	jmp    0x1400189ec
   140001723:	int3   
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	sub    rsp,0x28
   140001734:	lea    rdx,[rip+0x36585]        # 0x140037cc0
   14000173b:	lea    rcx,[rip+0x413ae]        # 0x140042af0
   140001742:	mov    r8d,0x9
   140001748:	call   0x140003d90
   14000174d:	lea    rcx,[rip+0x2ca5c]        # 0x14002e1b0
   140001754:	add    rsp,0x28
   140001758:	jmp    0x1400189ec
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	sub    rsp,0x28
   140001764:	lea    rdx,[rip+0x36575]        # 0x140037ce0
   14000176b:	lea    rcx,[rip+0x4139e]        # 0x140042b10
   140001772:	mov    r8d,0x31
   140001778:	call   0x140003d90
   14000177d:	lea    rcx,[rip+0x2ca9c]        # 0x14002e220
   140001784:	add    rsp,0x28
   140001788:	jmp    0x1400189ec
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	sub    rsp,0x28
   140001794:	lea    rdx,[rip+0x365ad]        # 0x140037d48
   14000179b:	lea    rcx,[rip+0x4138e]        # 0x140042b30
   1400017a2:	mov    r8d,0xf
   1400017a8:	call   0x140003d90
   1400017ad:	lea    rcx,[rip+0x2cadc]        # 0x14002e290
   1400017b4:	add    rsp,0x28
   1400017b8:	jmp    0x1400189ec
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	sub    rsp,0x38
   1400017c4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400017cd:	movzx  eax,BYTE PTR [rip+0x36594]        # 0x140037d68
   1400017d4:	neg    al
   1400017d6:	sbb    r8,r8
   1400017d9:	and    r8d,0x20
   1400017dd:	lea    rdx,[rip+0x36584]        # 0x140037d68
   1400017e4:	lea    rcx,[rip+0x41365]        # 0x140042b50
   1400017eb:	call   0x140008e50
   1400017f0:	nop
   1400017f1:	mov    QWORD PTR [rip+0x4138c],0xf        # 0x140042b88
   1400017fc:	mov    QWORD PTR [rip+0x41379],0x0        # 0x140042b80
   140001807:	mov    BYTE PTR [rip+0x41362],0x0        # 0x140042b70
   14000180e:	movzx  eax,BYTE PTR [rip+0x3657b]        # 0x140037d90
   140001815:	neg    al
   140001817:	sbb    r8,r8
   14000181a:	and    r8d,0x20
   14000181e:	lea    rdx,[rip+0x3656b]        # 0x140037d90
   140001825:	lea    rcx,[rip+0x41344]        # 0x140042b70
   14000182c:	call   0x140008e50
   140001831:	nop
   140001832:	mov    QWORD PTR [rip+0x4136b],0xf        # 0x140042ba8
   14000183d:	mov    QWORD PTR [rip+0x41358],0x0        # 0x140042ba0
   140001848:	mov    BYTE PTR [rip+0x41341],0x0        # 0x140042b90
   14000184f:	movzx  eax,BYTE PTR [rip+0x36562]        # 0x140037db8
   140001856:	neg    al
   140001858:	sbb    r8,r8
   14000185b:	and    r8d,0x20
   14000185f:	lea    rdx,[rip+0x36552]        # 0x140037db8
   140001866:	lea    rcx,[rip+0x41323]        # 0x140042b90
   14000186d:	call   0x140008e50
   140001872:	nop
   140001873:	mov    QWORD PTR [rip+0x4134a],0xf        # 0x140042bc8
   14000187e:	mov    QWORD PTR [rip+0x41337],0x0        # 0x140042bc0
   140001889:	mov    BYTE PTR [rip+0x41320],0x0        # 0x140042bb0
   140001890:	movzx  eax,BYTE PTR [rip+0x36549]        # 0x140037de0
   140001897:	neg    al
   140001899:	sbb    r8,r8
   14000189c:	and    r8d,0x20
   1400018a0:	lea    rdx,[rip+0x36539]        # 0x140037de0
   1400018a7:	lea    rcx,[rip+0x41302]        # 0x140042bb0
   1400018ae:	call   0x140008e50
   1400018b3:	nop
   1400018b4:	lea    rcx,[rip+0x2ca45]        # 0x14002e300
   1400018bb:	add    rsp,0x38
   1400018bf:	jmp    0x1400189ec
   1400018c4:	int3   
   1400018c5:	int3   
   1400018c6:	int3   
   1400018c7:	int3   
   1400018c8:	int3   
   1400018c9:	int3   
   1400018ca:	int3   
   1400018cb:	int3   
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	lea    rcx,[rip+0x2ca49]        # 0x14002e320
   1400018d7:	jmp    0x1400189ec
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	sub    rsp,0x28
   1400018e4:	lea    rdx,[rip+0x38395]        # 0x140039c80
   1400018eb:	lea    rcx,[rip+0x412e6]        # 0x140042bd8
   1400018f2:	mov    r8d,0x45
   1400018f8:	call   0x140003d90
   1400018fd:	lea    rcx,[rip+0x2ca2c]        # 0x14002e330
   140001904:	add    rsp,0x28
   140001908:	jmp    0x1400189ec
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	sub    rsp,0x28
   140001914:	lea    rdx,[rip+0x383f5]        # 0x140039d10
   14000191b:	lea    rcx,[rip+0x412d6]        # 0x140042bf8
   140001922:	mov    r8d,0xc
   140001928:	call   0x140003d90
   14000192d:	lea    rcx,[rip+0x2ca6c]        # 0x14002e3a0
   140001934:	add    rsp,0x28
   140001938:	jmp    0x1400189ec
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	lea    rcx,[rip+0x2cad9]        # 0x14002e420
   140001947:	jmp    0x1400189ec
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	lea    rcx,[rip+0x2cab9]        # 0x14002e410
   140001957:	jmp    0x1400189ec
   14000195c:	lea    rcx,[rip+0x2cacd]        # 0x14002e430
   140001963:	jmp    0x1400189ec
   140001968:	lea    rcx,[rip+0x2cb0d]        # 0x14002e47c
   14000196f:	jmp    0x1400189ec
   140001974:	sub    rsp,0x28
   140001978:	lea    rcx,[rip+0x41b81]        # 0x140043500
   14000197f:	call   0x140014610
   140001984:	lea    rcx,[rip+0x2cb21]        # 0x14002e4ac
   14000198b:	add    rsp,0x28
   14000198f:	jmp    0x1400189ec
   140001994:	lea    rcx,[rip+0x2cb1d]        # 0x14002e4b8
   14000199b:	jmp    0x1400189ec
   1400019a0:	sub    rsp,0x28
   1400019a4:	lea    rcx,[rip+0x41c95]        # 0x140043640
   1400019ab:	call   0x140014610
   1400019b0:	lea    rcx,[rip+0x2cb3d]        # 0x14002e4f4
   1400019b7:	add    rsp,0x28
   1400019bb:	jmp    0x1400189ec
   1400019c0:	rex push rbx
   1400019c2:	sub    rsp,0x20
   1400019c6:	cmp    QWORD PTR [rcx+0x18],0x8
   1400019cb:	mov    rbx,rcx
   1400019ce:	jb     0x1400019d8
   1400019d0:	mov    rcx,QWORD PTR [rcx]
   1400019d3:	call   0x140018a04
   1400019d8:	xor    eax,eax
   1400019da:	mov    QWORD PTR [rbx+0x18],0x7
   1400019e2:	mov    QWORD PTR [rbx+0x10],rax
   1400019e6:	mov    WORD PTR [rbx],ax
   1400019e9:	add    rsp,0x20
   1400019ed:	pop    rbx
   1400019ee:	ret    
   1400019ef:	int3   
   1400019f0:	rex push rbx
   1400019f2:	sub    rsp,0x20
   1400019f6:	cmp    QWORD PTR [rcx+0x20],0x8
   1400019fb:	mov    rbx,rcx
   1400019fe:	jb     0x140001a09
   140001a00:	mov    rcx,QWORD PTR [rcx+0x8]
   140001a04:	call   0x140018a04
   140001a09:	xor    eax,eax
   140001a0b:	mov    QWORD PTR [rbx+0x20],0x7
   140001a13:	mov    QWORD PTR [rbx+0x18],rax
   140001a17:	mov    WORD PTR [rbx+0x8],ax
   140001a1b:	add    rsp,0x20
   140001a1f:	pop    rbx
   140001a20:	ret    
   140001a21:	int3   
   140001a22:	int3   
   140001a23:	int3   
   140001a24:	int3   
   140001a25:	int3   
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	mov    QWORD PTR [rsp+0x8],rcx
   140001a35:	sub    rsp,0x28
   140001a39:	mov    r8,QWORD PTR [rip+0x430f8]        # 0x140044b38
   140001a40:	lea    rdx,[rsp+0x30]
   140001a45:	mov    r9,r8
   140001a48:	mov    r8,QWORD PTR [r8]
   140001a4b:	call   0x140001a90
   140001a50:	mov    rcx,QWORD PTR [rip+0x430e1]        # 0x140044b38
   140001a57:	add    rsp,0x28
   140001a5b:	jmp    0x140018a04
   140001a60:	mov    QWORD PTR [rsp+0x8],rcx
   140001a65:	sub    rsp,0x28
   140001a69:	mov    r8,QWORD PTR [rip+0x430d8]        # 0x140044b48
   140001a70:	lea    rdx,[rsp+0x30]
   140001a75:	mov    r9,r8
   140001a78:	mov    r8,QWORD PTR [r8]
   140001a7b:	call   0x140001ba0
   140001a80:	mov    rcx,QWORD PTR [rip+0x430c1]        # 0x140044b48
   140001a87:	add    rsp,0x28
   140001a8b:	jmp    0x140018a04
   140001a90:	mov    QWORD PTR [rsp+0x20],r9
   140001a95:	mov    QWORD PTR [rsp+0x18],r8
   140001a9a:	push   rbx
   140001a9b:	sub    rsp,0x30
   140001a9f:	mov    rbx,rdx
   140001aa2:	mov    rdx,QWORD PTR [rip+0x4308f]        # 0x140044b38
   140001aa9:	cmp    r8,QWORD PTR [rdx]
   140001aac:	jne    0x140001b04
   140001aae:	cmp    r9,rdx
   140001ab1:	jne    0x140001b04
   140001ab3:	mov    rdx,QWORD PTR [rdx+0x8]
   140001ab7:	lea    rcx,[rip+0x4307a]        # 0x140044b38
   140001abe:	call   0x140002450
   140001ac3:	mov    rcx,QWORD PTR [rip+0x4306e]        # 0x140044b38
   140001aca:	mov    rax,rbx
   140001acd:	mov    QWORD PTR [rcx+0x8],rcx
   140001ad1:	mov    rcx,QWORD PTR [rip+0x43060]        # 0x140044b38
   140001ad8:	mov    QWORD PTR [rcx],rcx
   140001adb:	mov    rcx,QWORD PTR [rip+0x43056]        # 0x140044b38
   140001ae2:	mov    QWORD PTR [rcx+0x10],rcx
   140001ae6:	mov    rcx,QWORD PTR [rip+0x4304b]        # 0x140044b38
   140001aed:	mov    QWORD PTR [rip+0x43048],0x0        # 0x140044b40
   140001af8:	mov    rdx,QWORD PTR [rcx]
   140001afb:	mov    QWORD PTR [rbx],rdx
   140001afe:	add    rsp,0x30
   140001b02:	pop    rbx
   140001b03:	ret    
   140001b04:	cmp    r8,r9
   140001b07:	je     0x140001b86
   140001b09:	nop    DWORD PTR [rax+0x0]
   140001b10:	cmp    BYTE PTR [r8+0x19],0x0
   140001b15:	mov    rax,r8
   140001b18:	jne    0x140001b6d
   140001b1a:	mov    rdx,QWORD PTR [r8+0x10]
   140001b1e:	cmp    BYTE PTR [rdx+0x19],0x0
   140001b22:	jne    0x140001b43
   140001b24:	mov    rcx,QWORD PTR [rdx]
   140001b27:	cmp    BYTE PTR [rcx+0x19],0x0
   140001b2b:	jne    0x140001b3c
   140001b2d:	nop    DWORD PTR [rax]
   140001b30:	mov    rdx,rcx
   140001b33:	mov    rcx,QWORD PTR [rcx]
   140001b36:	cmp    BYTE PTR [rcx+0x19],0x0
   140001b3a:	je     0x140001b30
   140001b3c:	mov    QWORD PTR [rsp+0x50],rdx
   140001b41:	jmp    0x140001b6d
   140001b43:	mov    rcx,QWORD PTR [r8+0x8]
   140001b47:	cmp    BYTE PTR [rcx+0x19],0x0
   140001b4b:	jne    0x140001b68
   140001b4d:	nop    DWORD PTR [rax]
   140001b50:	cmp    r8,QWORD PTR [rcx+0x10]
   140001b54:	jne    0x140001b68
   140001b56:	mov    QWORD PTR [rsp+0x50],rcx
   140001b5b:	mov    r8,rcx
   140001b5e:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b62:	cmp    BYTE PTR [rcx+0x19],0x0
   140001b66:	je     0x140001b50
   140001b68:	mov    QWORD PTR [rsp+0x50],rcx
   140001b6d:	lea    rdx,[rsp+0x20]
   140001b72:	mov    r8,rax
   140001b75:	call   0x140001cb0
   140001b7a:	mov    r8,QWORD PTR [rsp+0x50]
   140001b7f:	cmp    r8,QWORD PTR [rsp+0x58]
   140001b84:	jne    0x140001b10
   140001b86:	mov    QWORD PTR [rbx],r8
   140001b89:	mov    rax,rbx
   140001b8c:	add    rsp,0x30
   140001b90:	pop    rbx
   140001b91:	ret    
   140001b92:	int3   
   140001b93:	int3   
   140001b94:	int3   
   140001b95:	int3   
   140001b96:	int3   
   140001b97:	int3   
   140001b98:	int3   
   140001b99:	int3   
   140001b9a:	int3   
   140001b9b:	int3   
   140001b9c:	int3   
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	mov    QWORD PTR [rsp+0x20],r9
   140001ba5:	mov    QWORD PTR [rsp+0x18],r8
   140001baa:	push   rbx
   140001bab:	sub    rsp,0x30
   140001baf:	mov    rbx,rdx
   140001bb2:	mov    rdx,QWORD PTR [rip+0x42f8f]        # 0x140044b48
   140001bb9:	cmp    r8,QWORD PTR [rdx]
   140001bbc:	jne    0x140001c14
   140001bbe:	cmp    r9,rdx
   140001bc1:	jne    0x140001c14
   140001bc3:	mov    rdx,QWORD PTR [rdx+0x8]
   140001bc7:	lea    rcx,[rip+0x42f7a]        # 0x140044b48
   140001bce:	call   0x1400025b0
   140001bd3:	mov    rcx,QWORD PTR [rip+0x42f6e]        # 0x140044b48
   140001bda:	mov    rax,rbx
   140001bdd:	mov    QWORD PTR [rcx+0x8],rcx
   140001be1:	mov    rcx,QWORD PTR [rip+0x42f60]        # 0x140044b48
   140001be8:	mov    QWORD PTR [rcx],rcx
   140001beb:	mov    rcx,QWORD PTR [rip+0x42f56]        # 0x140044b48
   140001bf2:	mov    QWORD PTR [rcx+0x10],rcx
   140001bf6:	mov    rcx,QWORD PTR [rip+0x42f4b]        # 0x140044b48
   140001bfd:	mov    QWORD PTR [rip+0x42f48],0x0        # 0x140044b50
   140001c08:	mov    rdx,QWORD PTR [rcx]
   140001c0b:	mov    QWORD PTR [rbx],rdx
   140001c0e:	add    rsp,0x30
   140001c12:	pop    rbx
   140001c13:	ret    
   140001c14:	cmp    r8,r9
   140001c17:	je     0x140001c96
   140001c19:	nop    DWORD PTR [rax+0x0]
   140001c20:	cmp    BYTE PTR [r8+0x19],0x0
   140001c25:	mov    rax,r8
   140001c28:	jne    0x140001c7d
   140001c2a:	mov    rdx,QWORD PTR [r8+0x10]
   140001c2e:	cmp    BYTE PTR [rdx+0x19],0x0
   140001c32:	jne    0x140001c53
   140001c34:	mov    rcx,QWORD PTR [rdx]
   140001c37:	cmp    BYTE PTR [rcx+0x19],0x0
   140001c3b:	jne    0x140001c4c
   140001c3d:	nop    DWORD PTR [rax]
   140001c40:	mov    rdx,rcx
   140001c43:	mov    rcx,QWORD PTR [rcx]
   140001c46:	cmp    BYTE PTR [rcx+0x19],0x0
   140001c4a:	je     0x140001c40
   140001c4c:	mov    QWORD PTR [rsp+0x50],rdx
   140001c51:	jmp    0x140001c7d
   140001c53:	mov    rcx,QWORD PTR [r8+0x8]
   140001c57:	cmp    BYTE PTR [rcx+0x19],0x0
   140001c5b:	jne    0x140001c78
   140001c5d:	nop    DWORD PTR [rax]
   140001c60:	cmp    r8,QWORD PTR [rcx+0x10]
   140001c64:	jne    0x140001c78
   140001c66:	mov    QWORD PTR [rsp+0x50],rcx
   140001c6b:	mov    r8,rcx
   140001c6e:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c72:	cmp    BYTE PTR [rcx+0x19],0x0
   140001c76:	je     0x140001c60
   140001c78:	mov    QWORD PTR [rsp+0x50],rcx
   140001c7d:	lea    rdx,[rsp+0x20]
   140001c82:	mov    r8,rax
   140001c85:	call   0x140002080
   140001c8a:	mov    r8,QWORD PTR [rsp+0x50]
   140001c8f:	cmp    r8,QWORD PTR [rsp+0x58]
   140001c94:	jne    0x140001c20
   140001c96:	mov    QWORD PTR [rbx],r8
   140001c99:	mov    rax,rbx
   140001c9c:	add    rsp,0x30
   140001ca0:	pop    rbx
   140001ca1:	ret    
   140001ca2:	int3   
   140001ca3:	int3   
   140001ca4:	int3   
   140001ca5:	int3   
   140001ca6:	int3   
   140001ca7:	int3   
   140001ca8:	int3   
   140001ca9:	int3   
   140001caa:	int3   
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	mov    QWORD PTR [rsp+0x18],r8
   140001cb5:	push   r14
   140001cb7:	sub    rsp,0x30
   140001cbb:	cmp    BYTE PTR [r8+0x19],0x0
   140001cc0:	mov    QWORD PTR [rsp+0x28],rsi
   140001cc5:	mov    r14,rdx
   140001cc8:	mov    rsi,r8
   140001ccb:	jne    0x140001d20
   140001ccd:	mov    rax,QWORD PTR [r8+0x10]
   140001cd1:	cmp    BYTE PTR [rax+0x19],0x0
   140001cd5:	jne    0x140001cf6
   140001cd7:	mov    r8,rax
   140001cda:	mov    rax,QWORD PTR [rax]
   140001cdd:	cmp    BYTE PTR [rax+0x19],0x0
   140001ce1:	jne    0x140001cef
   140001ce3:	mov    r8,rax
   140001ce6:	mov    rax,QWORD PTR [rax]
   140001ce9:	cmp    BYTE PTR [rax+0x19],0x0
   140001ced:	je     0x140001ce3
   140001cef:	mov    QWORD PTR [rsp+0x50],r8
   140001cf4:	jmp    0x140001d20
   140001cf6:	mov    rax,QWORD PTR [r8+0x8]
   140001cfa:	cmp    BYTE PTR [rax+0x19],0x0
   140001cfe:	jne    0x140001d18
   140001d00:	cmp    r8,QWORD PTR [rax+0x10]
   140001d04:	jne    0x140001d18
   140001d06:	mov    QWORD PTR [rsp+0x50],rax
   140001d0b:	mov    r8,rax
   140001d0e:	mov    rax,QWORD PTR [rax+0x8]
   140001d12:	cmp    BYTE PTR [rax+0x19],0x0
   140001d16:	je     0x140001d00
   140001d18:	mov    r8,rax
   140001d1b:	mov    QWORD PTR [rsp+0x50],rax
   140001d20:	mov    rcx,QWORD PTR [rsi]
   140001d23:	mov    QWORD PTR [rsp+0x40],rbx
   140001d28:	mov    QWORD PTR [rsp+0x20],rdi
   140001d2d:	cmp    BYTE PTR [rcx+0x19],0x0
   140001d31:	je     0x140001d39
   140001d33:	mov    rdi,QWORD PTR [rsi+0x10]
   140001d37:	jmp    0x140001d55
   140001d39:	mov    rax,QWORD PTR [rsi+0x10]
   140001d3d:	cmp    BYTE PTR [rax+0x19],0x0
   140001d41:	je     0x140001d48
   140001d43:	mov    rdi,rcx
   140001d46:	jmp    0x140001d55
   140001d48:	mov    rdi,QWORD PTR [r8+0x10]
   140001d4c:	cmp    r8,rsi
   140001d4f:	jne    0x140001e13
   140001d55:	cmp    BYTE PTR [rdi+0x19],0x0
   140001d59:	mov    rbx,QWORD PTR [rsi+0x8]
   140001d5d:	jne    0x140001d63
   140001d5f:	mov    QWORD PTR [rdi+0x8],rbx
   140001d63:	mov    rax,QWORD PTR [rip+0x42dce]        # 0x140044b38
   140001d6a:	cmp    QWORD PTR [rax+0x8],rsi
   140001d6e:	jne    0x140001d76
   140001d70:	mov    QWORD PTR [rax+0x8],rdi
   140001d74:	jmp    0x140001d84
   140001d76:	cmp    QWORD PTR [rbx],rsi
   140001d79:	jne    0x140001d80
   140001d7b:	mov    QWORD PTR [rbx],rdi
   140001d7e:	jmp    0x140001d84
   140001d80:	mov    QWORD PTR [rbx+0x10],rdi
   140001d84:	mov    rax,QWORD PTR [rip+0x42dad]        # 0x140044b38
   140001d8b:	cmp    QWORD PTR [rax],rsi
   140001d8e:	jne    0x140001dc6
   140001d90:	cmp    BYTE PTR [rdi+0x19],0x0
   140001d94:	je     0x140001d9b
   140001d96:	mov    rcx,rbx
   140001d99:	jmp    0x140001dbc
   140001d9b:	mov    rax,QWORD PTR [rdi]
   140001d9e:	mov    rcx,rdi
   140001da1:	cmp    BYTE PTR [rax+0x19],0x0
   140001da5:	jne    0x140001dbc
   140001da7:	nop    WORD PTR [rax+rax*1+0x0]
   140001db0:	mov    rcx,rax
   140001db3:	mov    rax,QWORD PTR [rax]
   140001db6:	cmp    BYTE PTR [rax+0x19],0x0
   140001dba:	je     0x140001db0
   140001dbc:	mov    rax,QWORD PTR [rip+0x42d75]        # 0x140044b38
   140001dc3:	mov    QWORD PTR [rax],rcx
   140001dc6:	mov    rdx,QWORD PTR [rip+0x42d6b]        # 0x140044b38
   140001dcd:	cmp    QWORD PTR [rdx+0x10],rsi
   140001dd1:	jne    0x140001e86
   140001dd7:	cmp    BYTE PTR [rdi+0x19],0x0
   140001ddb:	je     0x140001de9
   140001ddd:	mov    rcx,rbx
   140001de0:	mov    QWORD PTR [rdx+0x10],rbx
   140001de4:	jmp    0x140001e86
   140001de9:	mov    rax,QWORD PTR [rdi+0x10]
   140001ded:	mov    rcx,rdi
   140001df0:	cmp    BYTE PTR [rax+0x19],0x0
   140001df4:	jne    0x140001e0d
   140001df6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001e00:	mov    rcx,rax
   140001e03:	mov    rax,QWORD PTR [rax+0x10]
   140001e07:	cmp    BYTE PTR [rax+0x19],0x0
   140001e0b:	je     0x140001e00
   140001e0d:	mov    QWORD PTR [rdx+0x10],rcx
   140001e11:	jmp    0x140001e86
   140001e13:	mov    QWORD PTR [rcx+0x8],r8
   140001e17:	mov    rax,QWORD PTR [rsi]
   140001e1a:	mov    QWORD PTR [r8],rax
   140001e1d:	cmp    r8,QWORD PTR [rsi+0x10]
   140001e21:	jne    0x140001e28
   140001e23:	mov    rbx,r8
   140001e26:	jmp    0x140001e49
   140001e28:	cmp    BYTE PTR [rdi+0x19],0x0
   140001e2c:	mov    rbx,QWORD PTR [r8+0x8]
   140001e30:	jne    0x140001e36
   140001e32:	mov    QWORD PTR [rdi+0x8],rbx
   140001e36:	mov    QWORD PTR [rbx],rdi
   140001e39:	mov    rax,QWORD PTR [rsi+0x10]
   140001e3d:	mov    QWORD PTR [r8+0x10],rax
   140001e41:	mov    rax,QWORD PTR [rsi+0x10]
   140001e45:	mov    QWORD PTR [rax+0x8],r8
   140001e49:	mov    rax,QWORD PTR [rip+0x42ce8]        # 0x140044b38
   140001e50:	cmp    QWORD PTR [rax+0x8],rsi
   140001e54:	jne    0x140001e5c
   140001e56:	mov    QWORD PTR [rax+0x8],r8
   140001e5a:	jmp    0x140001e6e
   140001e5c:	mov    rax,QWORD PTR [rsi+0x8]
   140001e60:	cmp    QWORD PTR [rax],rsi
   140001e63:	jne    0x140001e6a
   140001e65:	mov    QWORD PTR [rax],r8
   140001e68:	jmp    0x140001e6e
   140001e6a:	mov    QWORD PTR [rax+0x10],r8
   140001e6e:	mov    rax,QWORD PTR [rsi+0x8]
   140001e72:	mov    QWORD PTR [r8+0x8],rax
   140001e76:	movzx  eax,BYTE PTR [rsi+0x18]
   140001e7a:	movzx  ecx,BYTE PTR [r8+0x18]
   140001e7f:	mov    BYTE PTR [r8+0x18],al
   140001e83:	mov    BYTE PTR [rsi+0x18],cl
   140001e86:	cmp    BYTE PTR [rsi+0x18],0x1
   140001e8a:	jne    0x140002005
   140001e90:	mov    rax,QWORD PTR [rip+0x42ca1]        # 0x140044b38
   140001e97:	cmp    rdi,QWORD PTR [rax+0x8]
   140001e9b:	je     0x140002001
   140001ea1:	cmp    BYTE PTR [rdi+0x18],0x1
   140001ea5:	jne    0x140002001
   140001eab:	mov    rcx,QWORD PTR [rbx]
   140001eae:	cmp    rdi,rcx
   140001eb1:	jne    0x140001f77
   140001eb7:	mov    rcx,QWORD PTR [rbx+0x10]
   140001ebb:	cmp    BYTE PTR [rcx+0x18],0x0
   140001ebf:	jne    0x140001f19
   140001ec1:	mov    BYTE PTR [rcx+0x18],0x1
   140001ec5:	mov    rcx,QWORD PTR [rbx+0x10]
   140001ec9:	mov    BYTE PTR [rbx+0x18],0x0
   140001ecd:	mov    rax,QWORD PTR [rcx]
   140001ed0:	mov    QWORD PTR [rbx+0x10],rax
   140001ed4:	mov    rax,QWORD PTR [rcx]
   140001ed7:	cmp    BYTE PTR [rax+0x19],0x0
   140001edb:	jne    0x140001ee1
   140001edd:	mov    QWORD PTR [rax+0x8],rbx
   140001ee1:	mov    rax,QWORD PTR [rbx+0x8]
   140001ee5:	mov    QWORD PTR [rcx+0x8],rax
   140001ee9:	mov    rax,QWORD PTR [rip+0x42c48]        # 0x140044b38
   140001ef0:	cmp    rbx,QWORD PTR [rax+0x8]
   140001ef4:	jne    0x140001efc
   140001ef6:	mov    QWORD PTR [rax+0x8],rcx
   140001efa:	jmp    0x140001f0e
   140001efc:	mov    rax,QWORD PTR [rbx+0x8]
   140001f00:	cmp    rbx,QWORD PTR [rax]
   140001f03:	jne    0x140001f0a
   140001f05:	mov    QWORD PTR [rax],rcx
   140001f08:	jmp    0x140001f0e
   140001f0a:	mov    QWORD PTR [rax+0x10],rcx
   140001f0e:	mov    QWORD PTR [rcx],rbx
   140001f11:	mov    QWORD PTR [rbx+0x8],rcx
   140001f15:	mov    rcx,QWORD PTR [rbx+0x10]
   140001f19:	cmp    BYTE PTR [rcx+0x19],0x0
   140001f1d:	jne    0x140001fad
   140001f23:	mov    rax,QWORD PTR [rcx]
   140001f26:	cmp    BYTE PTR [rax+0x18],0x1
   140001f2a:	jne    0x140001f36
   140001f2c:	mov    rax,QWORD PTR [rcx+0x10]
   140001f30:	cmp    BYTE PTR [rax+0x18],0x1
   140001f34:	je     0x140001fa9
   140001f36:	mov    rax,QWORD PTR [rcx+0x10]
   140001f3a:	cmp    BYTE PTR [rax+0x18],0x1
   140001f3e:	jne    0x140001f57
   140001f40:	mov    rax,QWORD PTR [rcx]
   140001f43:	mov    rdx,rcx
   140001f46:	mov    BYTE PTR [rax+0x18],0x1
   140001f4a:	mov    BYTE PTR [rcx+0x18],0x0
   140001f4e:	call   0x140002540
   140001f53:	mov    rcx,QWORD PTR [rbx+0x10]
   140001f57:	movzx  eax,BYTE PTR [rbx+0x18]
   140001f5b:	mov    rdx,rbx
   140001f5e:	mov    BYTE PTR [rcx+0x18],al
   140001f61:	mov    BYTE PTR [rbx+0x18],0x1
   140001f65:	mov    rax,QWORD PTR [rcx+0x10]
   140001f69:	mov    BYTE PTR [rax+0x18],0x1
   140001f6d:	call   0x1400024e0
   140001f72:	jmp    0x140002001
   140001f77:	cmp    BYTE PTR [rcx+0x18],0x0
   140001f7b:	jne    0x140001f90
   140001f7d:	mov    BYTE PTR [rcx+0x18],0x1
   140001f81:	mov    rdx,rbx
   140001f84:	mov    BYTE PTR [rbx+0x18],0x0
   140001f88:	call   0x140002540
   140001f8d:	mov    rcx,QWORD PTR [rbx]
   140001f90:	cmp    BYTE PTR [rcx+0x19],0x0
   140001f94:	jne    0x140001fad
   140001f96:	mov    rax,QWORD PTR [rcx+0x10]
   140001f9a:	cmp    BYTE PTR [rax+0x18],0x1
   140001f9e:	jne    0x140001fc7
   140001fa0:	mov    rax,QWORD PTR [rcx]
   140001fa3:	cmp    BYTE PTR [rax+0x18],0x1
   140001fa7:	jne    0x140001fc7
   140001fa9:	mov    BYTE PTR [rcx+0x18],0x0
   140001fad:	mov    rax,QWORD PTR [rip+0x42b84]        # 0x140044b38
   140001fb4:	mov    rdi,rbx
   140001fb7:	mov    rbx,QWORD PTR [rbx+0x8]
   140001fbb:	cmp    rdi,QWORD PTR [rax+0x8]
   140001fbf:	jne    0x140001ea1
   140001fc5:	jmp    0x140002001
   140001fc7:	mov    rax,QWORD PTR [rcx]
   140001fca:	cmp    BYTE PTR [rax+0x18],0x1
   140001fce:	jne    0x140001fe7
   140001fd0:	mov    rax,QWORD PTR [rcx+0x10]
   140001fd4:	mov    rdx,rcx
   140001fd7:	mov    BYTE PTR [rax+0x18],0x1
   140001fdb:	mov    BYTE PTR [rcx+0x18],0x0
   140001fdf:	call   0x1400024e0
   140001fe4:	mov    rcx,QWORD PTR [rbx]
   140001fe7:	movzx  eax,BYTE PTR [rbx+0x18]
   140001feb:	mov    rdx,rbx
   140001fee:	mov    BYTE PTR [rcx+0x18],al
   140001ff1:	mov    BYTE PTR [rbx+0x18],0x1
   140001ff5:	mov    rax,QWORD PTR [rcx]
   140001ff8:	mov    BYTE PTR [rax+0x18],0x1
   140001ffc:	call   0x140002540
   140002001:	mov    BYTE PTR [rdi+0x18],0x1
   140002005:	cmp    QWORD PTR [rsi+0x38],0x8
   14000200a:	mov    rdi,QWORD PTR [rsp+0x20]
   14000200f:	mov    rbx,QWORD PTR [rsp+0x40]
   140002014:	jb     0x14000201f
   140002016:	mov    rcx,QWORD PTR [rsi+0x20]
   14000201a:	call   0x140018a04
   14000201f:	xor    eax,eax
   140002021:	mov    QWORD PTR [rsi+0x38],0x7
   140002029:	mov    rcx,rsi
   14000202c:	mov    QWORD PTR [rsi+0x30],rax
   140002030:	mov    WORD PTR [rsi+0x20],ax
   140002034:	call   0x140018a04
   140002039:	mov    rcx,QWORD PTR [rip+0x42b00]        # 0x140044b40
   140002040:	mov    rsi,QWORD PTR [rsp+0x28]
   140002045:	test   rcx,rcx
   140002048:	je     0x140002066
   14000204a:	dec    rcx
   14000204d:	mov    rax,r14
   140002050:	mov    QWORD PTR [rip+0x42ae9],rcx        # 0x140044b40
   140002057:	mov    rcx,QWORD PTR [rsp+0x50]
   14000205c:	mov    QWORD PTR [r14],rcx
   14000205f:	add    rsp,0x30
   140002063:	pop    r14
   140002065:	ret    
   140002066:	mov    rax,QWORD PTR [rsp+0x50]
   14000206b:	mov    QWORD PTR [r14],rax
   14000206e:	mov    rax,r14
   140002071:	add    rsp,0x30
   140002075:	pop    r14
   140002077:	ret    
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	mov    QWORD PTR [rsp+0x18],r8
   140002085:	push   r14
   140002087:	sub    rsp,0x30
   14000208b:	cmp    BYTE PTR [r8+0x19],0x0
   140002090:	mov    QWORD PTR [rsp+0x28],rsi
   140002095:	mov    r14,rdx
   140002098:	mov    rsi,r8
   14000209b:	jne    0x1400020f0
   14000209d:	mov    rax,QWORD PTR [r8+0x10]
   1400020a1:	cmp    BYTE PTR [rax+0x19],0x0
   1400020a5:	jne    0x1400020c6
   1400020a7:	mov    r8,rax
   1400020aa:	mov    rax,QWORD PTR [rax]
   1400020ad:	cmp    BYTE PTR [rax+0x19],0x0
   1400020b1:	jne    0x1400020bf
   1400020b3:	mov    r8,rax
   1400020b6:	mov    rax,QWORD PTR [rax]
   1400020b9:	cmp    BYTE PTR [rax+0x19],0x0
   1400020bd:	je     0x1400020b3
   1400020bf:	mov    QWORD PTR [rsp+0x50],r8
   1400020c4:	jmp    0x1400020f0
   1400020c6:	mov    rax,QWORD PTR [r8+0x8]
   1400020ca:	cmp    BYTE PTR [rax+0x19],0x0
   1400020ce:	jne    0x1400020e8
   1400020d0:	cmp    r8,QWORD PTR [rax+0x10]
   1400020d4:	jne    0x1400020e8
   1400020d6:	mov    QWORD PTR [rsp+0x50],rax
   1400020db:	mov    r8,rax
   1400020de:	mov    rax,QWORD PTR [rax+0x8]
   1400020e2:	cmp    BYTE PTR [rax+0x19],0x0
   1400020e6:	je     0x1400020d0
   1400020e8:	mov    r8,rax
   1400020eb:	mov    QWORD PTR [rsp+0x50],rax
   1400020f0:	mov    rcx,QWORD PTR [rsi]
   1400020f3:	mov    QWORD PTR [rsp+0x40],rbx
   1400020f8:	mov    QWORD PTR [rsp+0x20],rdi
   1400020fd:	cmp    BYTE PTR [rcx+0x19],0x0
   140002101:	je     0x140002109
   140002103:	mov    rdi,QWORD PTR [rsi+0x10]
   140002107:	jmp    0x140002125
   140002109:	mov    rax,QWORD PTR [rsi+0x10]
   14000210d:	cmp    BYTE PTR [rax+0x19],0x0
   140002111:	je     0x140002118
   140002113:	mov    rdi,rcx
   140002116:	jmp    0x140002125
   140002118:	mov    rdi,QWORD PTR [r8+0x10]
   14000211c:	cmp    r8,rsi
   14000211f:	jne    0x1400021e3
   140002125:	cmp    BYTE PTR [rdi+0x19],0x0
   140002129:	mov    rbx,QWORD PTR [rsi+0x8]
   14000212d:	jne    0x140002133
   14000212f:	mov    QWORD PTR [rdi+0x8],rbx
   140002133:	mov    rax,QWORD PTR [rip+0x42a0e]        # 0x140044b48
   14000213a:	cmp    QWORD PTR [rax+0x8],rsi
   14000213e:	jne    0x140002146
   140002140:	mov    QWORD PTR [rax+0x8],rdi
   140002144:	jmp    0x140002154
   140002146:	cmp    QWORD PTR [rbx],rsi
   140002149:	jne    0x140002150
   14000214b:	mov    QWORD PTR [rbx],rdi
   14000214e:	jmp    0x140002154
   140002150:	mov    QWORD PTR [rbx+0x10],rdi
   140002154:	mov    rax,QWORD PTR [rip+0x429ed]        # 0x140044b48
   14000215b:	cmp    QWORD PTR [rax],rsi
   14000215e:	jne    0x140002196
   140002160:	cmp    BYTE PTR [rdi+0x19],0x0
   140002164:	je     0x14000216b
   140002166:	mov    rcx,rbx
   140002169:	jmp    0x14000218c
   14000216b:	mov    rax,QWORD PTR [rdi]
   14000216e:	mov    rcx,rdi
   140002171:	cmp    BYTE PTR [rax+0x19],0x0
   140002175:	jne    0x14000218c
   140002177:	nop    WORD PTR [rax+rax*1+0x0]
   140002180:	mov    rcx,rax
   140002183:	mov    rax,QWORD PTR [rax]
   140002186:	cmp    BYTE PTR [rax+0x19],0x0
   14000218a:	je     0x140002180
   14000218c:	mov    rax,QWORD PTR [rip+0x429b5]        # 0x140044b48
   140002193:	mov    QWORD PTR [rax],rcx
   140002196:	mov    rdx,QWORD PTR [rip+0x429ab]        # 0x140044b48
   14000219d:	cmp    QWORD PTR [rdx+0x10],rsi
   1400021a1:	jne    0x140002256
   1400021a7:	cmp    BYTE PTR [rdi+0x19],0x0
   1400021ab:	je     0x1400021b9
   1400021ad:	mov    rcx,rbx
   1400021b0:	mov    QWORD PTR [rdx+0x10],rbx
   1400021b4:	jmp    0x140002256
   1400021b9:	mov    rax,QWORD PTR [rdi+0x10]
   1400021bd:	mov    rcx,rdi
   1400021c0:	cmp    BYTE PTR [rax+0x19],0x0
   1400021c4:	jne    0x1400021dd
   1400021c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400021d0:	mov    rcx,rax
   1400021d3:	mov    rax,QWORD PTR [rax+0x10]
   1400021d7:	cmp    BYTE PTR [rax+0x19],0x0
   1400021db:	je     0x1400021d0
   1400021dd:	mov    QWORD PTR [rdx+0x10],rcx
   1400021e1:	jmp    0x140002256
   1400021e3:	mov    QWORD PTR [rcx+0x8],r8
   1400021e7:	mov    rax,QWORD PTR [rsi]
   1400021ea:	mov    QWORD PTR [r8],rax
   1400021ed:	cmp    r8,QWORD PTR [rsi+0x10]
   1400021f1:	jne    0x1400021f8
   1400021f3:	mov    rbx,r8
   1400021f6:	jmp    0x140002219
   1400021f8:	cmp    BYTE PTR [rdi+0x19],0x0
   1400021fc:	mov    rbx,QWORD PTR [r8+0x8]
   140002200:	jne    0x140002206
   140002202:	mov    QWORD PTR [rdi+0x8],rbx
   140002206:	mov    QWORD PTR [rbx],rdi
   140002209:	mov    rax,QWORD PTR [rsi+0x10]
   14000220d:	mov    QWORD PTR [r8+0x10],rax
   140002211:	mov    rax,QWORD PTR [rsi+0x10]
   140002215:	mov    QWORD PTR [rax+0x8],r8
   140002219:	mov    rax,QWORD PTR [rip+0x42928]        # 0x140044b48
   140002220:	cmp    QWORD PTR [rax+0x8],rsi
   140002224:	jne    0x14000222c
   140002226:	mov    QWORD PTR [rax+0x8],r8
   14000222a:	jmp    0x14000223e
   14000222c:	mov    rax,QWORD PTR [rsi+0x8]
   140002230:	cmp    QWORD PTR [rax],rsi
   140002233:	jne    0x14000223a
   140002235:	mov    QWORD PTR [rax],r8
   140002238:	jmp    0x14000223e
   14000223a:	mov    QWORD PTR [rax+0x10],r8
   14000223e:	mov    rax,QWORD PTR [rsi+0x8]
   140002242:	mov    QWORD PTR [r8+0x8],rax
   140002246:	movzx  eax,BYTE PTR [rsi+0x18]
   14000224a:	movzx  ecx,BYTE PTR [r8+0x18]
   14000224f:	mov    BYTE PTR [r8+0x18],al
   140002253:	mov    BYTE PTR [rsi+0x18],cl
   140002256:	cmp    BYTE PTR [rsi+0x18],0x1
   14000225a:	jne    0x1400023d5
   140002260:	mov    rax,QWORD PTR [rip+0x428e1]        # 0x140044b48
   140002267:	cmp    rdi,QWORD PTR [rax+0x8]
   14000226b:	je     0x1400023d1
   140002271:	cmp    BYTE PTR [rdi+0x18],0x1
   140002275:	jne    0x1400023d1
   14000227b:	mov    rcx,QWORD PTR [rbx]
   14000227e:	cmp    rdi,rcx
   140002281:	jne    0x140002347
   140002287:	mov    rcx,QWORD PTR [rbx+0x10]
   14000228b:	cmp    BYTE PTR [rcx+0x18],0x0
   14000228f:	jne    0x1400022e9
   140002291:	mov    BYTE PTR [rcx+0x18],0x1
   140002295:	mov    rcx,QWORD PTR [rbx+0x10]
   140002299:	mov    BYTE PTR [rbx+0x18],0x0
   14000229d:	mov    rax,QWORD PTR [rcx]
   1400022a0:	mov    QWORD PTR [rbx+0x10],rax
   1400022a4:	mov    rax,QWORD PTR [rcx]
   1400022a7:	cmp    BYTE PTR [rax+0x19],0x0
   1400022ab:	jne    0x1400022b1
   1400022ad:	mov    QWORD PTR [rax+0x8],rbx
   1400022b1:	mov    rax,QWORD PTR [rbx+0x8]
   1400022b5:	mov    QWORD PTR [rcx+0x8],rax
   1400022b9:	mov    rax,QWORD PTR [rip+0x42888]        # 0x140044b48
   1400022c0:	cmp    rbx,QWORD PTR [rax+0x8]
   1400022c4:	jne    0x1400022cc
   1400022c6:	mov    QWORD PTR [rax+0x8],rcx
   1400022ca:	jmp    0x1400022de
   1400022cc:	mov    rax,QWORD PTR [rbx+0x8]
   1400022d0:	cmp    rbx,QWORD PTR [rax]
   1400022d3:	jne    0x1400022da
   1400022d5:	mov    QWORD PTR [rax],rcx
   1400022d8:	jmp    0x1400022de
   1400022da:	mov    QWORD PTR [rax+0x10],rcx
   1400022de:	mov    QWORD PTR [rcx],rbx
   1400022e1:	mov    QWORD PTR [rbx+0x8],rcx
   1400022e5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400022e9:	cmp    BYTE PTR [rcx+0x19],0x0
   1400022ed:	jne    0x14000237d
   1400022f3:	mov    rax,QWORD PTR [rcx]
   1400022f6:	cmp    BYTE PTR [rax+0x18],0x1
   1400022fa:	jne    0x140002306
   1400022fc:	mov    rax,QWORD PTR [rcx+0x10]
   140002300:	cmp    BYTE PTR [rax+0x18],0x1
   140002304:	je     0x140002379
   140002306:	mov    rax,QWORD PTR [rcx+0x10]
   14000230a:	cmp    BYTE PTR [rax+0x18],0x1
   14000230e:	jne    0x140002327
   140002310:	mov    rax,QWORD PTR [rcx]
   140002313:	mov    rdx,rcx
   140002316:	mov    BYTE PTR [rax+0x18],0x1
   14000231a:	mov    BYTE PTR [rcx+0x18],0x0
   14000231e:	call   0x1400026a0
   140002323:	mov    rcx,QWORD PTR [rbx+0x10]
   140002327:	movzx  eax,BYTE PTR [rbx+0x18]
   14000232b:	mov    rdx,rbx
   14000232e:	mov    BYTE PTR [rcx+0x18],al
   140002331:	mov    BYTE PTR [rbx+0x18],0x1
   140002335:	mov    rax,QWORD PTR [rcx+0x10]
   140002339:	mov    BYTE PTR [rax+0x18],0x1
   14000233d:	call   0x140002640
   140002342:	jmp    0x1400023d1
   140002347:	cmp    BYTE PTR [rcx+0x18],0x0
   14000234b:	jne    0x140002360
   14000234d:	mov    BYTE PTR [rcx+0x18],0x1
   140002351:	mov    rdx,rbx
   140002354:	mov    BYTE PTR [rbx+0x18],0x0
   140002358:	call   0x1400026a0
   14000235d:	mov    rcx,QWORD PTR [rbx]
   140002360:	cmp    BYTE PTR [rcx+0x19],0x0
   140002364:	jne    0x14000237d
   140002366:	mov    rax,QWORD PTR [rcx+0x10]
   14000236a:	cmp    BYTE PTR [rax+0x18],0x1
   14000236e:	jne    0x140002397
   140002370:	mov    rax,QWORD PTR [rcx]
   140002373:	cmp    BYTE PTR [rax+0x18],0x1
   140002377:	jne    0x140002397
   140002379:	mov    BYTE PTR [rcx+0x18],0x0
   14000237d:	mov    rax,QWORD PTR [rip+0x427c4]        # 0x140044b48
   140002384:	mov    rdi,rbx
   140002387:	mov    rbx,QWORD PTR [rbx+0x8]
   14000238b:	cmp    rdi,QWORD PTR [rax+0x8]
   14000238f:	jne    0x140002271
   140002395:	jmp    0x1400023d1
   140002397:	mov    rax,QWORD PTR [rcx]
   14000239a:	cmp    BYTE PTR [rax+0x18],0x1
   14000239e:	jne    0x1400023b7
   1400023a0:	mov    rax,QWORD PTR [rcx+0x10]
   1400023a4:	mov    rdx,rcx
   1400023a7:	mov    BYTE PTR [rax+0x18],0x1
   1400023ab:	mov    BYTE PTR [rcx+0x18],0x0
   1400023af:	call   0x140002640
   1400023b4:	mov    rcx,QWORD PTR [rbx]
   1400023b7:	movzx  eax,BYTE PTR [rbx+0x18]
   1400023bb:	mov    rdx,rbx
   1400023be:	mov    BYTE PTR [rcx+0x18],al
   1400023c1:	mov    BYTE PTR [rbx+0x18],0x1
   1400023c5:	mov    rax,QWORD PTR [rcx]
   1400023c8:	mov    BYTE PTR [rax+0x18],0x1
   1400023cc:	call   0x1400026a0
   1400023d1:	mov    BYTE PTR [rdi+0x18],0x1
   1400023d5:	cmp    QWORD PTR [rsi+0x40],0x8
   1400023da:	mov    rdi,QWORD PTR [rsp+0x20]
   1400023df:	mov    rbx,QWORD PTR [rsp+0x40]
   1400023e4:	jb     0x1400023ef
   1400023e6:	mov    rcx,QWORD PTR [rsi+0x28]
   1400023ea:	call   0x140018a04
   1400023ef:	xor    eax,eax
   1400023f1:	mov    QWORD PTR [rsi+0x40],0x7
   1400023f9:	mov    rcx,rsi
   1400023fc:	mov    QWORD PTR [rsi+0x38],rax
   140002400:	mov    WORD PTR [rsi+0x28],ax
   140002404:	call   0x140018a04
   140002409:	mov    rcx,QWORD PTR [rip+0x42740]        # 0x140044b50
   140002410:	mov    rsi,QWORD PTR [rsp+0x28]
   140002415:	test   rcx,rcx
   140002418:	je     0x140002436
   14000241a:	dec    rcx
   14000241d:	mov    rax,r14
   140002420:	mov    QWORD PTR [rip+0x42729],rcx        # 0x140044b50
   140002427:	mov    rcx,QWORD PTR [rsp+0x50]
   14000242c:	mov    QWORD PTR [r14],rcx
   14000242f:	add    rsp,0x30
   140002433:	pop    r14
   140002435:	ret    
   140002436:	mov    rax,QWORD PTR [rsp+0x50]
   14000243b:	mov    QWORD PTR [r14],rax
   14000243e:	mov    rax,r14
   140002441:	add    rsp,0x30
   140002445:	pop    r14
   140002447:	ret    
   140002448:	int3   
   140002449:	int3   
   14000244a:	int3   
   14000244b:	int3   
   14000244c:	int3   
   14000244d:	int3   
   14000244e:	int3   
   14000244f:	int3   
   140002450:	mov    QWORD PTR [rsp+0x10],rbx
   140002455:	mov    QWORD PTR [rsp+0x18],rsi
   14000245a:	push   rdi
   14000245b:	sub    rsp,0x20
   14000245f:	cmp    BYTE PTR [rdx+0x19],0x0
   140002463:	mov    rbx,rdx
   140002466:	mov    rsi,rcx
   140002469:	mov    rdi,rdx
   14000246c:	jne    0x1400024c5
   14000246e:	mov    QWORD PTR [rsp+0x30],rbp
   140002473:	xor    ebp,ebp
   140002475:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002480:	mov    rdx,QWORD PTR [rdi+0x10]
   140002484:	mov    rcx,rsi
   140002487:	call   0x140002450
   14000248c:	cmp    QWORD PTR [rbx+0x38],0x8
   140002491:	mov    rdi,QWORD PTR [rdi]
   140002494:	jb     0x14000249f
   140002496:	mov    rcx,QWORD PTR [rbx+0x20]
   14000249a:	call   0x140018a04
   14000249f:	mov    QWORD PTR [rbx+0x38],0x7
   1400024a7:	mov    QWORD PTR [rbx+0x30],rbp
   1400024ab:	mov    rcx,rbx
   1400024ae:	mov    WORD PTR [rbx+0x20],bp
   1400024b2:	call   0x140018a04
   1400024b7:	mov    rbx,rdi
   1400024ba:	cmp    BYTE PTR [rdi+0x19],bpl
   1400024be:	je     0x140002480
   1400024c0:	mov    rbp,QWORD PTR [rsp+0x30]
   1400024c5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400024ca:	mov    rsi,QWORD PTR [rsp+0x40]
   1400024cf:	add    rsp,0x20
   1400024d3:	pop    rdi
   1400024d4:	ret    
   1400024d5:	int3   
   1400024d6:	int3   
   1400024d7:	int3   
   1400024d8:	int3   
   1400024d9:	int3   
   1400024da:	int3   
   1400024db:	int3   
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	mov    rcx,QWORD PTR [rdx+0x10]
   1400024e4:	mov    rax,QWORD PTR [rcx]
   1400024e7:	mov    QWORD PTR [rdx+0x10],rax
   1400024eb:	mov    rax,QWORD PTR [rcx]
   1400024ee:	cmp    BYTE PTR [rax+0x19],0x0
   1400024f2:	jne    0x1400024f8
   1400024f4:	mov    QWORD PTR [rax+0x8],rdx
   1400024f8:	mov    rax,QWORD PTR [rdx+0x8]
   1400024fc:	mov    QWORD PTR [rcx+0x8],rax
   140002500:	mov    rax,QWORD PTR [rip+0x42631]        # 0x140044b38
   140002507:	cmp    rdx,QWORD PTR [rax+0x8]
   14000250b:	jne    0x140002519
   14000250d:	mov    QWORD PTR [rax+0x8],rcx
   140002511:	mov    QWORD PTR [rcx],rdx
   140002514:	mov    QWORD PTR [rdx+0x8],rcx
   140002518:	ret    
   140002519:	mov    rax,QWORD PTR [rdx+0x8]
   14000251d:	cmp    rdx,QWORD PTR [rax]
   140002520:	jne    0x14000252d
   140002522:	mov    QWORD PTR [rax],rcx
   140002525:	mov    QWORD PTR [rcx],rdx
   140002528:	mov    QWORD PTR [rdx+0x8],rcx
   14000252c:	ret    
   14000252d:	mov    QWORD PTR [rax+0x10],rcx
   140002531:	mov    QWORD PTR [rcx],rdx
   140002534:	mov    QWORD PTR [rdx+0x8],rcx
   140002538:	ret    
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	mov    rcx,QWORD PTR [rdx]
   140002543:	mov    rax,QWORD PTR [rcx+0x10]
   140002547:	mov    QWORD PTR [rdx],rax
   14000254a:	mov    rax,QWORD PTR [rcx+0x10]
   14000254e:	cmp    BYTE PTR [rax+0x19],0x0
   140002552:	jne    0x140002558
   140002554:	mov    QWORD PTR [rax+0x8],rdx
   140002558:	mov    rax,QWORD PTR [rdx+0x8]
   14000255c:	mov    QWORD PTR [rcx+0x8],rax
   140002560:	mov    rax,QWORD PTR [rip+0x425d1]        # 0x140044b38
   140002567:	cmp    rdx,QWORD PTR [rax+0x8]
   14000256b:	jne    0x14000257a
   14000256d:	mov    QWORD PTR [rax+0x8],rcx
   140002571:	mov    QWORD PTR [rcx+0x10],rdx
   140002575:	mov    QWORD PTR [rdx+0x8],rcx
   140002579:	ret    
   14000257a:	mov    rax,QWORD PTR [rdx+0x8]
   14000257e:	cmp    rdx,QWORD PTR [rax+0x10]
   140002582:	jne    0x140002591
   140002584:	mov    QWORD PTR [rax+0x10],rcx
   140002588:	mov    QWORD PTR [rcx+0x10],rdx
   14000258c:	mov    QWORD PTR [rdx+0x8],rcx
   140002590:	ret    
   140002591:	mov    QWORD PTR [rax],rcx
   140002594:	mov    QWORD PTR [rcx+0x10],rdx
   140002598:	mov    QWORD PTR [rdx+0x8],rcx
   14000259c:	ret    
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    rax,rcx
   1400025a3:	ret    
   1400025a4:	int3   
   1400025a5:	int3   
   1400025a6:	int3   
   1400025a7:	int3   
   1400025a8:	int3   
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400025b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400025ba:	push   rdi
   1400025bb:	sub    rsp,0x20
   1400025bf:	cmp    BYTE PTR [rdx+0x19],0x0
   1400025c3:	mov    rbx,rdx
   1400025c6:	mov    rsi,rcx
   1400025c9:	mov    rdi,rdx
   1400025cc:	jne    0x140002625
   1400025ce:	mov    QWORD PTR [rsp+0x30],rbp
   1400025d3:	xor    ebp,ebp
   1400025d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400025e0:	mov    rdx,QWORD PTR [rdi+0x10]
   1400025e4:	mov    rcx,rsi
   1400025e7:	call   0x1400025b0
   1400025ec:	cmp    QWORD PTR [rbx+0x40],0x8
   1400025f1:	mov    rdi,QWORD PTR [rdi]
   1400025f4:	jb     0x1400025ff
   1400025f6:	mov    rcx,QWORD PTR [rbx+0x28]
   1400025fa:	call   0x140018a04
   1400025ff:	mov    QWORD PTR [rbx+0x40],0x7
   140002607:	mov    QWORD PTR [rbx+0x38],rbp
   14000260b:	mov    rcx,rbx
   14000260e:	mov    WORD PTR [rbx+0x28],bp
   140002612:	call   0x140018a04
   140002617:	mov    rbx,rdi
   14000261a:	cmp    BYTE PTR [rdi+0x19],bpl
   14000261e:	je     0x1400025e0
   140002620:	mov    rbp,QWORD PTR [rsp+0x30]
   140002625:	mov    rbx,QWORD PTR [rsp+0x38]
   14000262a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000262f:	add    rsp,0x20
   140002633:	pop    rdi
   140002634:	ret    
   140002635:	int3   
   140002636:	int3   
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	mov    rcx,QWORD PTR [rdx+0x10]
   140002644:	mov    rax,QWORD PTR [rcx]
   140002647:	mov    QWORD PTR [rdx+0x10],rax
   14000264b:	mov    rax,QWORD PTR [rcx]
   14000264e:	cmp    BYTE PTR [rax+0x19],0x0
   140002652:	jne    0x140002658
   140002654:	mov    QWORD PTR [rax+0x8],rdx
   140002658:	mov    rax,QWORD PTR [rdx+0x8]
   14000265c:	mov    QWORD PTR [rcx+0x8],rax
   140002660:	mov    rax,QWORD PTR [rip+0x424e1]        # 0x140044b48
   140002667:	cmp    rdx,QWORD PTR [rax+0x8]
   14000266b:	jne    0x140002679
   14000266d:	mov    QWORD PTR [rax+0x8],rcx
   140002671:	mov    QWORD PTR [rcx],rdx
   140002674:	mov    QWORD PTR [rdx+0x8],rcx
   140002678:	ret    
   140002679:	mov    rax,QWORD PTR [rdx+0x8]
   14000267d:	cmp    rdx,QWORD PTR [rax]
   140002680:	jne    0x14000268d
   140002682:	mov    QWORD PTR [rax],rcx
   140002685:	mov    QWORD PTR [rcx],rdx
   140002688:	mov    QWORD PTR [rdx+0x8],rcx
   14000268c:	ret    
   14000268d:	mov    QWORD PTR [rax+0x10],rcx
   140002691:	mov    QWORD PTR [rcx],rdx
   140002694:	mov    QWORD PTR [rdx+0x8],rcx
   140002698:	ret    
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    rcx,QWORD PTR [rdx]
   1400026a3:	mov    rax,QWORD PTR [rcx+0x10]
   1400026a7:	mov    QWORD PTR [rdx],rax
   1400026aa:	mov    rax,QWORD PTR [rcx+0x10]
   1400026ae:	cmp    BYTE PTR [rax+0x19],0x0
   1400026b2:	jne    0x1400026b8
   1400026b4:	mov    QWORD PTR [rax+0x8],rdx
   1400026b8:	mov    rax,QWORD PTR [rdx+0x8]
   1400026bc:	mov    QWORD PTR [rcx+0x8],rax
   1400026c0:	mov    rax,QWORD PTR [rip+0x42481]        # 0x140044b48
   1400026c7:	cmp    rdx,QWORD PTR [rax+0x8]
   1400026cb:	jne    0x1400026da
   1400026cd:	mov    QWORD PTR [rax+0x8],rcx
   1400026d1:	mov    QWORD PTR [rcx+0x10],rdx
   1400026d5:	mov    QWORD PTR [rdx+0x8],rcx
   1400026d9:	ret    
   1400026da:	mov    rax,QWORD PTR [rdx+0x8]
   1400026de:	cmp    rdx,QWORD PTR [rax+0x10]
   1400026e2:	jne    0x1400026f1
   1400026e4:	mov    QWORD PTR [rax+0x10],rcx
   1400026e8:	mov    QWORD PTR [rcx+0x10],rdx
   1400026ec:	mov    QWORD PTR [rdx+0x8],rcx
   1400026f0:	ret    
   1400026f1:	mov    QWORD PTR [rax],rcx
   1400026f4:	mov    QWORD PTR [rcx+0x10],rdx
   1400026f8:	mov    QWORD PTR [rdx+0x8],rcx
   1400026fc:	ret    
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	sub    rsp,0x28
   140002704:	mov    ecx,0x48
   140002709:	call   0x140018a0c
   14000270e:	test   rax,rax
   140002711:	je     0x140002739
   140002713:	lea    rcx,[rax+0x8]
   140002717:	mov    QWORD PTR [rax],rax
   14000271a:	test   rcx,rcx
   14000271d:	je     0x140002722
   14000271f:	mov    QWORD PTR [rcx],rax
   140002722:	lea    rcx,[rax+0x10]
   140002726:	test   rcx,rcx
   140002729:	je     0x14000272e
   14000272b:	mov    QWORD PTR [rcx],rax
   14000272e:	mov    WORD PTR [rax+0x18],0x101
   140002734:	add    rsp,0x28
   140002738:	ret    
   140002739:	call   0x140014018
   14000273e:	int3   
   14000273f:	int3   
   140002740:	ret    0x0
   140002743:	int3   
   140002744:	int3   
   140002745:	int3   
   140002746:	int3   
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	mov    QWORD PTR [rsp+0x8],rcx
   140002755:	push   rbx
   140002756:	push   rsi
   140002757:	push   rdi
   140002758:	sub    rsp,0x30
   14000275c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002765:	mov    rsi,rdx
   140002768:	call   0x140002d50
   14000276d:	mov    rdi,rax
   140002770:	mov    QWORD PTR [rsp+0x50],rax
   140002775:	mov    WORD PTR [rax+0x18],0x0
   14000277b:	lea    rbx,[rax+0x20]
   14000277f:	mov    QWORD PTR [rsp+0x60],rbx
   140002784:	mov    QWORD PTR [rsp+0x68],rbx
   140002789:	test   rbx,rbx
   14000278c:	je     0x1400027b7
   14000278e:	mov    QWORD PTR [rbx+0x18],0x7
   140002796:	xor    eax,eax
   140002798:	mov    QWORD PTR [rbx+0x10],rax
   14000279c:	mov    WORD PTR [rbx],ax
   14000279f:	or     r9,0xffffffffffffffff
   1400027a3:	xor    r8d,r8d
   1400027a6:	mov    rdx,rsi
   1400027a9:	mov    rcx,rbx
   1400027ac:	call   0x140003a40
   1400027b1:	mov    eax,DWORD PTR [rsi+0x20]
   1400027b4:	mov    DWORD PTR [rbx+0x20],eax
   1400027b7:	mov    rax,rdi
   1400027ba:	add    rsp,0x30
   1400027be:	pop    rdi
   1400027bf:	pop    rsi
   1400027c0:	pop    rbx
   1400027c1:	ret    
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	int3   
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	mov    QWORD PTR [rsp+0x18],r8
   1400027d5:	push   rsi
   1400027d6:	push   rdi
   1400027d7:	push   r14
   1400027d9:	sub    rsp,0x50
   1400027dd:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400027e6:	mov    QWORD PTR [rsp+0x70],rbx
   1400027eb:	mov    r14,r9
   1400027ee:	mov    rdi,rdx
   1400027f1:	mov    rsi,QWORD PTR [rsp+0x90]
   1400027f9:	mov    QWORD PTR [rsp+0x30],rsi
   1400027fe:	cmp    QWORD PTR [rip+0x4233a],0x0        # 0x140044b40
   140002806:	jne    0x140002824
   140002808:	mov    QWORD PTR [rsp+0x28],rsi
   14000280d:	mov    r9,QWORD PTR [rip+0x42324]        # 0x140044b38
   140002814:	mov    r8b,0x1
   140002817:	call   0x140002e50
   14000281c:	mov    rax,rdi
   14000281f:	jmp    0x140002a49
   140002824:	mov    rcx,QWORD PTR [rip+0x4230d]        # 0x140044b38
   14000282b:	cmp    r8,QWORD PTR [rcx]
   14000282e:	jne    0x140002864
   140002830:	lea    rdx,[r8+0x20]
   140002834:	mov    rcx,r9
   140002837:	call   0x1400037f0
   14000283c:	test   eax,eax
   14000283e:	jns    0x140002a2e
   140002844:	mov    QWORD PTR [rsp+0x28],rsi
   140002849:	mov    r9,QWORD PTR [rsp+0x80]
   140002851:	mov    r8b,0x1
   140002854:	mov    rdx,rdi
   140002857:	call   0x140002e50
   14000285c:	mov    rax,rdi
   14000285f:	jmp    0x140002a49
   140002864:	cmp    r8,rcx
   140002867:	jne    0x1400028a4
   140002869:	mov    rcx,QWORD PTR [rcx+0x10]
   14000286d:	add    rcx,0x20
   140002871:	mov    rdx,r9
   140002874:	call   0x1400037f0
   140002879:	test   eax,eax
   14000287b:	jns    0x140002a2e
   140002881:	mov    QWORD PTR [rsp+0x28],rsi
   140002886:	mov    r9,QWORD PTR [rip+0x422ab]        # 0x140044b38
   14000288d:	mov    r9,QWORD PTR [r9+0x10]
   140002891:	xor    r8d,r8d
   140002894:	mov    rdx,rdi
   140002897:	call   0x140002e50
   14000289c:	mov    rax,rdi
   14000289f:	jmp    0x140002a49
   1400028a4:	lea    rdx,[r8+0x20]
   1400028a8:	mov    rcx,r9
   1400028ab:	call   0x1400037f0
   1400028b0:	test   eax,eax
   1400028b2:	jns    0x14000296a
   1400028b8:	mov    rax,QWORD PTR [rsp+0x80]
   1400028c0:	cmp    BYTE PTR [rax+0x19],0x0
   1400028c4:	je     0x1400028cc
   1400028c6:	mov    rbx,QWORD PTR [rax+0x10]
   1400028ca:	jmp    0x14000291d
   1400028cc:	mov    rbx,QWORD PTR [rax]
   1400028cf:	cmp    BYTE PTR [rbx+0x19],0x0
   1400028d3:	jne    0x1400028ef
   1400028d5:	mov    rax,QWORD PTR [rbx+0x10]
   1400028d9:	cmp    BYTE PTR [rax+0x19],0x0
   1400028dd:	jne    0x14000291d
   1400028df:	nop
   1400028e0:	mov    rbx,rax
   1400028e3:	mov    rax,QWORD PTR [rax+0x10]
   1400028e7:	cmp    BYTE PTR [rax+0x19],0x0
   1400028eb:	je     0x1400028e0
   1400028ed:	jmp    0x14000291d
   1400028ef:	mov    rcx,QWORD PTR [rax+0x8]
   1400028f3:	cmp    BYTE PTR [rcx+0x19],0x0
   1400028f7:	jne    0x140002912
   1400028f9:	nop    DWORD PTR [rax+0x0]
   140002900:	cmp    rax,QWORD PTR [rcx]
   140002903:	jne    0x140002912
   140002905:	mov    rax,rcx
   140002908:	mov    rcx,QWORD PTR [rcx+0x8]
   14000290c:	cmp    BYTE PTR [rcx+0x19],0x0
   140002910:	je     0x140002900
   140002912:	mov    rbx,rax
   140002915:	cmp    BYTE PTR [rax+0x19],0x0
   140002919:	cmove  rbx,rcx
   14000291d:	lea    rcx,[rbx+0x20]
   140002921:	mov    rdx,r14
   140002924:	call   0x1400037f0
   140002929:	test   eax,eax
   14000292b:	jns    0x14000296a
   14000292d:	mov    rax,QWORD PTR [rbx+0x10]
   140002931:	mov    QWORD PTR [rsp+0x28],rsi
   140002936:	mov    rdx,rdi
   140002939:	cmp    BYTE PTR [rax+0x19],0x0
   14000293d:	je     0x140002952
   14000293f:	mov    r9,rbx
   140002942:	xor    r8d,r8d
   140002945:	call   0x140002e50
   14000294a:	mov    rax,rdi
   14000294d:	jmp    0x140002a49
   140002952:	mov    r9,QWORD PTR [rsp+0x80]
   14000295a:	mov    r8b,0x1
   14000295d:	call   0x140002e50
   140002962:	mov    rax,rdi
   140002965:	jmp    0x140002a49
   14000296a:	mov    rcx,QWORD PTR [rsp+0x80]
   140002972:	add    rcx,0x20
   140002976:	mov    rdx,r14
   140002979:	call   0x1400037f0
   14000297e:	test   eax,eax
   140002980:	jns    0x140002a2e
   140002986:	mov    r9,QWORD PTR [rsp+0x80]
   14000298e:	mov    rbx,r9
   140002991:	cmp    BYTE PTR [r9+0x19],0x0
   140002996:	jne    0x1400029de
   140002998:	mov    rax,QWORD PTR [r9+0x10]
   14000299c:	cmp    BYTE PTR [rax+0x19],0x0
   1400029a0:	jne    0x1400029be
   1400029a2:	mov    rbx,rax
   1400029a5:	mov    rax,QWORD PTR [rax]
   1400029a8:	cmp    BYTE PTR [rax+0x19],0x0
   1400029ac:	jne    0x1400029de
   1400029ae:	xchg   ax,ax
   1400029b0:	mov    rbx,rax
   1400029b3:	mov    rax,QWORD PTR [rax]
   1400029b6:	cmp    BYTE PTR [rax+0x19],0x0
   1400029ba:	je     0x1400029b0
   1400029bc:	jmp    0x1400029de
   1400029be:	mov    rax,QWORD PTR [r9+0x8]
   1400029c2:	cmp    BYTE PTR [rax+0x19],0x0
   1400029c6:	jne    0x1400029db
   1400029c8:	cmp    rbx,QWORD PTR [rax+0x10]
   1400029cc:	jne    0x1400029db
   1400029ce:	mov    rbx,rax
   1400029d1:	mov    rax,QWORD PTR [rax+0x8]
   1400029d5:	cmp    BYTE PTR [rax+0x19],0x0
   1400029d9:	je     0x1400029c8
   1400029db:	mov    rbx,rax
   1400029de:	cmp    rbx,QWORD PTR [rip+0x42153]        # 0x140044b38
   1400029e5:	je     0x1400029ff
   1400029e7:	lea    rdx,[rbx+0x20]
   1400029eb:	mov    rcx,r14
   1400029ee:	call   0x1400037f0
   1400029f3:	test   eax,eax
   1400029f5:	jns    0x140002a2e
   1400029f7:	mov    r9,QWORD PTR [rsp+0x80]
   1400029ff:	mov    rax,QWORD PTR [r9+0x10]
   140002a03:	mov    QWORD PTR [rsp+0x28],rsi
   140002a08:	mov    rdx,rdi
   140002a0b:	cmp    BYTE PTR [rax+0x19],0x0
   140002a0f:	je     0x140002a1e
   140002a11:	xor    r8d,r8d
   140002a14:	call   0x140002e50
   140002a19:	mov    rax,rdi
   140002a1c:	jmp    0x140002a49
   140002a1e:	mov    r9,rbx
   140002a21:	mov    r8b,0x1
   140002a24:	call   0x140002e50
   140002a29:	mov    rax,rdi
   140002a2c:	jmp    0x140002a49
   140002a2e:	mov    QWORD PTR [rsp+0x20],rsi
   140002a33:	mov    r9,r14
   140002a36:	lea    rdx,[rsp+0x30]
   140002a3b:	call   0x140003150
   140002a40:	mov    rcx,QWORD PTR [rax]
   140002a43:	mov    QWORD PTR [rdi],rcx
   140002a46:	mov    rax,rdi
   140002a49:	mov    rbx,QWORD PTR [rsp+0x70]
   140002a4e:	add    rsp,0x50
   140002a52:	pop    r14
   140002a54:	pop    rdi
   140002a55:	pop    rsi
   140002a56:	ret    
   140002a57:	int3   
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	mov    QWORD PTR [rsp+0x8],rcx
   140002a65:	push   rdi
   140002a66:	sub    rsp,0x30
   140002a6a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002a73:	mov    QWORD PTR [rsp+0x48],rbx
   140002a78:	mov    rdi,rdx
   140002a7b:	call   0x140002df0
   140002a80:	mov    rbx,rax
   140002a83:	mov    QWORD PTR [rsp+0x40],rax
   140002a88:	mov    WORD PTR [rax+0x18],0x0
   140002a8e:	lea    rcx,[rax+0x20]
   140002a92:	mov    QWORD PTR [rsp+0x50],rcx
   140002a97:	mov    QWORD PTR [rsp+0x58],rcx
   140002a9c:	test   rcx,rcx
   140002a9f:	je     0x140002acb
   140002aa1:	mov    eax,DWORD PTR [rdi]
   140002aa3:	mov    DWORD PTR [rcx],eax
   140002aa5:	add    rcx,0x8
   140002aa9:	mov    QWORD PTR [rcx+0x18],0x7
   140002ab1:	xor    eax,eax
   140002ab3:	mov    QWORD PTR [rcx+0x10],rax
   140002ab7:	mov    WORD PTR [rcx],ax
   140002aba:	lea    rdx,[rdi+0x8]
   140002abe:	or     r9,0xffffffffffffffff
   140002ac2:	xor    r8d,r8d
   140002ac5:	call   0x140003a40
   140002aca:	nop
   140002acb:	mov    rax,rbx
   140002ace:	mov    rbx,QWORD PTR [rsp+0x48]
   140002ad3:	add    rsp,0x30
   140002ad7:	pop    rdi
   140002ad8:	ret    
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	rex push rdi
   140002ae2:	sub    rsp,0x50
   140002ae6:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140002aef:	mov    QWORD PTR [rsp+0x60],rbx
   140002af4:	mov    QWORD PTR [rsp+0x70],rsi
   140002af9:	mov    rsi,r9
   140002afc:	mov    rbx,rdx
   140002aff:	mov    rdx,QWORD PTR [rsp+0x80]
   140002b07:	mov    QWORD PTR [rsp+0x30],rdx
   140002b0c:	cmp    QWORD PTR [rip+0x4203c],0x0        # 0x140044b50
   140002b14:	jne    0x140002b35
   140002b16:	mov    QWORD PTR [rsp+0x28],rdx
   140002b1b:	mov    r9,QWORD PTR [rip+0x42026]        # 0x140044b48
   140002b22:	mov    r8b,0x1
   140002b25:	mov    rdx,rbx
   140002b28:	call   0x140003370
   140002b2d:	mov    rax,rbx
   140002b30:	jmp    0x140002cfb
   140002b35:	mov    r10,QWORD PTR [rip+0x4200c]        # 0x140044b48
   140002b3c:	cmp    r8,QWORD PTR [r10]
   140002b3f:	jne    0x140002b69
   140002b41:	mov    eax,DWORD PTR [r8+0x20]
   140002b45:	cmp    DWORD PTR [r9],eax
   140002b48:	jge    0x140002ce0
   140002b4e:	mov    QWORD PTR [rsp+0x28],rdx
   140002b53:	mov    r9,r8
   140002b56:	mov    r8b,0x1
   140002b59:	mov    rdx,rbx
   140002b5c:	call   0x140003370
   140002b61:	mov    rax,rbx
   140002b64:	jmp    0x140002cfb
   140002b69:	cmp    r8,r10
   140002b6c:	jne    0x140002b96
   140002b6e:	mov    r9,QWORD PTR [r10+0x10]
   140002b72:	mov    eax,DWORD PTR [rsi]
   140002b74:	cmp    DWORD PTR [r9+0x20],eax
   140002b78:	jge    0x140002ce0
   140002b7e:	mov    QWORD PTR [rsp+0x28],rdx
   140002b83:	xor    r8d,r8d
   140002b86:	mov    rdx,rbx
   140002b89:	call   0x140003370
   140002b8e:	mov    rax,rbx
   140002b91:	jmp    0x140002cfb
   140002b96:	mov    edi,DWORD PTR [r9]
   140002b99:	mov    r11d,DWORD PTR [r8+0x20]
   140002b9d:	cmp    r11d,edi
   140002ba0:	jle    0x140002c4b
   140002ba6:	mov    rax,r8
   140002ba9:	cmp    BYTE PTR [r8+0x19],0x0
   140002bae:	je     0x140002bb6
   140002bb0:	mov    r9,QWORD PTR [r8+0x10]
   140002bb4:	jmp    0x140002c0d
   140002bb6:	mov    r9,QWORD PTR [r8]
   140002bb9:	cmp    BYTE PTR [r9+0x19],0x0
   140002bbe:	jne    0x140002bdf
   140002bc0:	mov    rax,QWORD PTR [r9+0x10]
   140002bc4:	cmp    BYTE PTR [rax+0x19],0x0
   140002bc8:	jne    0x140002c0d
   140002bca:	nop    WORD PTR [rax+rax*1+0x0]
   140002bd0:	mov    r9,rax
   140002bd3:	mov    rax,QWORD PTR [rax+0x10]
   140002bd7:	cmp    BYTE PTR [rax+0x19],0x0
   140002bdb:	je     0x140002bd0
   140002bdd:	jmp    0x140002c0d
   140002bdf:	mov    rcx,QWORD PTR [r8+0x8]
   140002be3:	cmp    BYTE PTR [rcx+0x19],0x0
   140002be7:	jne    0x140002c02
   140002be9:	nop    DWORD PTR [rax+0x0]
   140002bf0:	cmp    rax,QWORD PTR [rcx]
   140002bf3:	jne    0x140002c02
   140002bf5:	mov    rax,rcx
   140002bf8:	mov    rcx,QWORD PTR [rcx+0x8]
   140002bfc:	cmp    BYTE PTR [rcx+0x19],0x0
   140002c00:	je     0x140002bf0
   140002c02:	mov    r9,rax
   140002c05:	cmp    BYTE PTR [rax+0x19],0x0
   140002c09:	cmove  r9,rcx
   140002c0d:	cmp    DWORD PTR [r9+0x20],edi
   140002c11:	jge    0x140002c48
   140002c13:	mov    rax,QWORD PTR [r9+0x10]
   140002c17:	mov    QWORD PTR [rsp+0x28],rdx
   140002c1c:	mov    rdx,rbx
   140002c1f:	cmp    BYTE PTR [rax+0x19],0x0
   140002c23:	je     0x140002c35
   140002c25:	xor    r8d,r8d
   140002c28:	call   0x140003370
   140002c2d:	mov    rax,rbx
   140002c30:	jmp    0x140002cfb
   140002c35:	mov    r9,r8
   140002c38:	mov    r8b,0x1
   140002c3b:	call   0x140003370
   140002c40:	mov    rax,rbx
   140002c43:	jmp    0x140002cfb
   140002c48:	cmp    r11d,edi
   140002c4b:	jge    0x140002ce0
   140002c51:	mov    r9,r8
   140002c54:	cmp    BYTE PTR [r8+0x19],0x0
   140002c59:	jne    0x140002ca6
   140002c5b:	mov    rax,QWORD PTR [r8+0x10]
   140002c5f:	cmp    BYTE PTR [rax+0x19],0x0
   140002c63:	jne    0x140002c7f
   140002c65:	mov    r9,rax
   140002c68:	mov    rax,QWORD PTR [rax]
   140002c6b:	cmp    BYTE PTR [rax+0x19],0x0
   140002c6f:	jne    0x140002ca6
   140002c71:	mov    r9,rax
   140002c74:	mov    rax,QWORD PTR [rax]
   140002c77:	cmp    BYTE PTR [rax+0x19],0x0
   140002c7b:	je     0x140002c71
   140002c7d:	jmp    0x140002ca6
   140002c7f:	mov    rax,QWORD PTR [r8+0x8]
   140002c83:	cmp    BYTE PTR [rax+0x19],0x0
   140002c87:	jne    0x140002ca3
   140002c89:	nop    DWORD PTR [rax+0x0]
   140002c90:	cmp    r9,QWORD PTR [rax+0x10]
   140002c94:	jne    0x140002ca3
   140002c96:	mov    r9,rax
   140002c99:	mov    rax,QWORD PTR [rax+0x8]
   140002c9d:	cmp    BYTE PTR [rax+0x19],0x0
   140002ca1:	je     0x140002c90
   140002ca3:	mov    r9,rax
   140002ca6:	cmp    r9,r10
   140002ca9:	je     0x140002cb1
   140002cab:	cmp    edi,DWORD PTR [r9+0x20]
   140002caf:	jge    0x140002ce0
   140002cb1:	mov    rax,QWORD PTR [r8+0x10]
   140002cb5:	mov    QWORD PTR [rsp+0x28],rdx
   140002cba:	mov    rdx,rbx
   140002cbd:	cmp    BYTE PTR [rax+0x19],0x0
   140002cc1:	je     0x140002cd3
   140002cc3:	mov    r9,r8
   140002cc6:	xor    r8d,r8d
   140002cc9:	call   0x140003370
   140002cce:	mov    rax,rbx
   140002cd1:	jmp    0x140002cfb
   140002cd3:	mov    r8b,0x1
   140002cd6:	call   0x140003370
   140002cdb:	mov    rax,rbx
   140002cde:	jmp    0x140002cfb
   140002ce0:	mov    QWORD PTR [rsp+0x20],rdx
   140002ce5:	mov    r9,rsi
   140002ce8:	lea    rdx,[rsp+0x30]
   140002ced:	call   0x140003670
   140002cf2:	mov    rcx,QWORD PTR [rax]
   140002cf5:	mov    QWORD PTR [rbx],rcx
   140002cf8:	mov    rax,rbx
   140002cfb:	mov    rbx,QWORD PTR [rsp+0x60]
   140002d00:	mov    rsi,QWORD PTR [rsp+0x70]
   140002d05:	add    rsp,0x50
   140002d09:	pop    rdi
   140002d0a:	ret    
   140002d0b:	int3   
   140002d0c:	int3   
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	rex push rbx
   140002d12:	sub    rsp,0x20
   140002d16:	cmp    QWORD PTR [rdx+0x38],0x8
   140002d1b:	mov    rbx,rdx
   140002d1e:	jb     0x140002d29
   140002d20:	mov    rcx,QWORD PTR [rdx+0x20]
   140002d24:	call   0x140018a04
   140002d29:	xor    eax,eax
   140002d2b:	mov    QWORD PTR [rbx+0x38],0x7
   140002d33:	mov    rcx,rbx
   140002d36:	mov    QWORD PTR [rbx+0x30],rax
   140002d3a:	mov    WORD PTR [rbx+0x20],ax
   140002d3e:	add    rsp,0x20
   140002d42:	pop    rbx
   140002d43:	jmp    0x140018a04
   140002d48:	int3   
   140002d49:	int3   
   140002d4a:	int3   
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	sub    rsp,0x28
   140002d54:	mov    ecx,0x48
   140002d59:	call   0x140018a0c
   140002d5e:	mov    rcx,rax
   140002d61:	test   rax,rax
   140002d64:	je     0x140002d9e
   140002d66:	mov    rax,QWORD PTR [rip+0x41dcb]        # 0x140044b38
   140002d6d:	lea    rdx,[rcx+0x8]
   140002d71:	mov    QWORD PTR [rcx],rax
   140002d74:	test   rdx,rdx
   140002d77:	je     0x140002d83
   140002d79:	mov    rax,QWORD PTR [rip+0x41db8]        # 0x140044b38
   140002d80:	mov    QWORD PTR [rdx],rax
   140002d83:	lea    rdx,[rcx+0x10]
   140002d87:	test   rdx,rdx
   140002d8a:	je     0x140002d96
   140002d8c:	mov    rax,QWORD PTR [rip+0x41da5]        # 0x140044b38
   140002d93:	mov    QWORD PTR [rdx],rax
   140002d96:	mov    rax,rcx
   140002d99:	add    rsp,0x28
   140002d9d:	ret    
   140002d9e:	call   0x140014018
   140002da3:	int3   
   140002da4:	int3   
   140002da5:	int3   
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	rex push rbx
   140002db2:	sub    rsp,0x20
   140002db6:	cmp    QWORD PTR [rdx+0x40],0x8
   140002dbb:	mov    rbx,rdx
   140002dbe:	jb     0x140002dc9
   140002dc0:	mov    rcx,QWORD PTR [rdx+0x28]
   140002dc4:	call   0x140018a04
   140002dc9:	xor    eax,eax
   140002dcb:	mov    QWORD PTR [rbx+0x40],0x7
   140002dd3:	mov    rcx,rbx
   140002dd6:	mov    QWORD PTR [rbx+0x38],rax
   140002dda:	mov    WORD PTR [rbx+0x28],ax
   140002dde:	add    rsp,0x20
   140002de2:	pop    rbx
   140002de3:	jmp    0x140018a04
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	sub    rsp,0x28
   140002df4:	mov    ecx,0x48
   140002df9:	call   0x140018a0c
   140002dfe:	mov    rcx,rax
   140002e01:	test   rax,rax
   140002e04:	je     0x140002e3e
   140002e06:	mov    rax,QWORD PTR [rip+0x41d3b]        # 0x140044b48
   140002e0d:	lea    rdx,[rcx+0x8]
   140002e11:	mov    QWORD PTR [rcx],rax
   140002e14:	test   rdx,rdx
   140002e17:	je     0x140002e23
   140002e19:	mov    rax,QWORD PTR [rip+0x41d28]        # 0x140044b48
   140002e20:	mov    QWORD PTR [rdx],rax
   140002e23:	lea    rdx,[rcx+0x10]
   140002e27:	test   rdx,rdx
   140002e2a:	je     0x140002e36
   140002e2c:	mov    rax,QWORD PTR [rip+0x41d15]        # 0x140044b48
   140002e33:	mov    QWORD PTR [rdx],rax
   140002e36:	mov    rax,rcx
   140002e39:	add    rsp,0x28
   140002e3d:	ret    
   140002e3e:	call   0x140014018
   140002e43:	int3   
   140002e44:	int3   
   140002e45:	int3   
   140002e46:	int3   
   140002e47:	int3   
   140002e48:	int3   
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	sub    rsp,0x28
   140002e54:	mov    rax,QWORD PTR [rip+0x41ce5]        # 0x140044b40
   140002e5b:	movabs rcx,0x38e38e38e38e38d
   140002e65:	mov    r11,rdx
   140002e68:	cmp    rax,rcx
   140002e6b:	jb     0x140002e87
   140002e6d:	mov    QWORD PTR [rsp+0x20],rbx
   140002e72:	mov    rbx,QWORD PTR [rsp+0x58]
   140002e77:	cmp    QWORD PTR [rbx+0x38],0x8
   140002e7c:	jb     0x140003123
   140002e82:	jmp    0x14000311a
   140002e87:	mov    r10,QWORD PTR [rsp+0x58]
   140002e8c:	inc    rax
   140002e8f:	mov    QWORD PTR [rip+0x41caa],rax        # 0x140044b40
   140002e96:	mov    QWORD PTR [r10+0x8],r9
   140002e9a:	mov    rax,QWORD PTR [rip+0x41c97]        # 0x140044b38
   140002ea1:	cmp    r9,rax
   140002ea4:	jne    0x140002ebd
   140002ea6:	mov    QWORD PTR [rax+0x8],r10
   140002eaa:	mov    rax,QWORD PTR [rip+0x41c87]        # 0x140044b38
   140002eb1:	mov    QWORD PTR [rax],r10
   140002eb4:	mov    rax,QWORD PTR [rip+0x41c7d]        # 0x140044b38
   140002ebb:	jmp    0x140002ee7
   140002ebd:	test   r8b,r8b
   140002ec0:	je     0x140002ed6
   140002ec2:	mov    QWORD PTR [r9],r10
   140002ec5:	mov    rax,QWORD PTR [rip+0x41c6c]        # 0x140044b38
   140002ecc:	cmp    r9,QWORD PTR [rax]
   140002ecf:	jne    0x140002eeb
   140002ed1:	mov    QWORD PTR [rax],r10
   140002ed4:	jmp    0x140002eeb
   140002ed6:	mov    QWORD PTR [r9+0x10],r10
   140002eda:	mov    rax,QWORD PTR [rip+0x41c57]        # 0x140044b38
   140002ee1:	cmp    r9,QWORD PTR [rax+0x10]
   140002ee5:	jne    0x140002eeb
   140002ee7:	mov    QWORD PTR [rax+0x10],r10
   140002eeb:	mov    rcx,QWORD PTR [r10+0x8]
   140002eef:	mov    rax,r10
   140002ef2:	cmp    BYTE PTR [rcx+0x18],0x0
   140002ef6:	jne    0x140003100
   140002efc:	nop    DWORD PTR [rax+0x0]
   140002f00:	mov    rcx,QWORD PTR [rax+0x8]
   140002f04:	mov    r8,QWORD PTR [rcx+0x8]
   140002f08:	mov    rdx,QWORD PTR [r8]
   140002f0b:	cmp    rcx,rdx
   140002f0e:	jne    0x14000300d
   140002f14:	mov    rdx,QWORD PTR [r8+0x10]
   140002f18:	cmp    BYTE PTR [rdx+0x18],0x0
   140002f1c:	jne    0x140002f3f
   140002f1e:	mov    BYTE PTR [rcx+0x18],0x1
   140002f22:	mov    BYTE PTR [rdx+0x18],0x1
   140002f26:	mov    rcx,QWORD PTR [rax+0x8]
   140002f2a:	mov    rdx,QWORD PTR [rcx+0x8]
   140002f2e:	mov    BYTE PTR [rdx+0x18],0x0
   140002f32:	mov    rcx,QWORD PTR [rax+0x8]
   140002f36:	mov    rax,QWORD PTR [rcx+0x8]
   140002f3a:	jmp    0x1400030f2
   140002f3f:	cmp    rax,QWORD PTR [rcx+0x10]
   140002f43:	jne    0x140002f94
   140002f45:	mov    rdx,QWORD PTR [rcx+0x10]
   140002f49:	mov    rax,rcx
   140002f4c:	mov    rcx,QWORD PTR [rdx]
   140002f4f:	mov    QWORD PTR [rax+0x10],rcx
   140002f53:	mov    rcx,QWORD PTR [rdx]
   140002f56:	cmp    BYTE PTR [rcx+0x19],0x0
   140002f5a:	jne    0x140002f60
   140002f5c:	mov    QWORD PTR [rcx+0x8],rax
   140002f60:	mov    rcx,QWORD PTR [rax+0x8]
   140002f64:	mov    QWORD PTR [rdx+0x8],rcx
   140002f68:	mov    rcx,QWORD PTR [rip+0x41bc9]        # 0x140044b38
   140002f6f:	cmp    rax,QWORD PTR [rcx+0x8]
   140002f73:	jne    0x140002f7b
   140002f75:	mov    QWORD PTR [rcx+0x8],rdx
   140002f79:	jmp    0x140002f8d
   140002f7b:	mov    rcx,QWORD PTR [rax+0x8]
   140002f7f:	cmp    rax,QWORD PTR [rcx]
   140002f82:	jne    0x140002f89
   140002f84:	mov    QWORD PTR [rcx],rdx
   140002f87:	jmp    0x140002f8d
   140002f89:	mov    QWORD PTR [rcx+0x10],rdx
   140002f8d:	mov    QWORD PTR [rdx],rax
   140002f90:	mov    QWORD PTR [rax+0x8],rdx
   140002f94:	mov    rcx,QWORD PTR [rax+0x8]
   140002f98:	mov    BYTE PTR [rcx+0x18],0x1
   140002f9c:	mov    rcx,QWORD PTR [rax+0x8]
   140002fa0:	mov    rdx,QWORD PTR [rcx+0x8]
   140002fa4:	mov    BYTE PTR [rdx+0x18],0x0
   140002fa8:	mov    rcx,QWORD PTR [rax+0x8]
   140002fac:	mov    rdx,QWORD PTR [rcx+0x8]
   140002fb0:	mov    r8,QWORD PTR [rdx]
   140002fb3:	mov    rcx,QWORD PTR [r8+0x10]
   140002fb7:	mov    QWORD PTR [rdx],rcx
   140002fba:	mov    rcx,QWORD PTR [r8+0x10]
   140002fbe:	cmp    BYTE PTR [rcx+0x19],0x0
   140002fc2:	jne    0x140002fc8
   140002fc4:	mov    QWORD PTR [rcx+0x8],rdx
   140002fc8:	mov    rcx,QWORD PTR [rdx+0x8]
   140002fcc:	mov    QWORD PTR [r8+0x8],rcx
   140002fd0:	mov    rcx,QWORD PTR [rip+0x41b61]        # 0x140044b38
   140002fd7:	cmp    rdx,QWORD PTR [rcx+0x8]
   140002fdb:	jne    0x140002fea
   140002fdd:	mov    QWORD PTR [rcx+0x8],r8
   140002fe1:	mov    QWORD PTR [r8+0x10],rdx
   140002fe5:	jmp    0x1400030ee
   140002fea:	mov    rcx,QWORD PTR [rdx+0x8]
   140002fee:	cmp    rdx,QWORD PTR [rcx+0x10]
   140002ff2:	jne    0x140003001
   140002ff4:	mov    QWORD PTR [rcx+0x10],r8
   140002ff8:	mov    QWORD PTR [r8+0x10],rdx
   140002ffc:	jmp    0x1400030ee
   140003001:	mov    QWORD PTR [rcx],r8
   140003004:	mov    QWORD PTR [r8+0x10],rdx
   140003008:	jmp    0x1400030ee
   14000300d:	cmp    BYTE PTR [rdx+0x18],0x0
   140003011:	jne    0x140003034
   140003013:	mov    BYTE PTR [rcx+0x18],0x1
   140003017:	mov    BYTE PTR [rdx+0x18],0x1
   14000301b:	mov    rcx,QWORD PTR [rax+0x8]
   14000301f:	mov    rdx,QWORD PTR [rcx+0x8]
   140003023:	mov    BYTE PTR [rdx+0x18],0x0
   140003027:	mov    rcx,QWORD PTR [rax+0x8]
   14000302b:	mov    rax,QWORD PTR [rcx+0x8]
   14000302f:	jmp    0x1400030f2
   140003034:	cmp    rax,QWORD PTR [rcx]
   140003037:	jne    0x14000308a
   140003039:	mov    rdx,QWORD PTR [rcx]
   14000303c:	mov    rax,rcx
   14000303f:	mov    rcx,QWORD PTR [rdx+0x10]
   140003043:	mov    QWORD PTR [rax],rcx
   140003046:	mov    rcx,QWORD PTR [rdx+0x10]
   14000304a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000304e:	jne    0x140003054
   140003050:	mov    QWORD PTR [rcx+0x8],rax
   140003054:	mov    rcx,QWORD PTR [rax+0x8]
   140003058:	mov    QWORD PTR [rdx+0x8],rcx
   14000305c:	mov    rcx,QWORD PTR [rip+0x41ad5]        # 0x140044b38
   140003063:	cmp    rax,QWORD PTR [rcx+0x8]
   140003067:	jne    0x14000306f
   140003069:	mov    QWORD PTR [rcx+0x8],rdx
   14000306d:	jmp    0x140003082
   14000306f:	mov    rcx,QWORD PTR [rax+0x8]
   140003073:	cmp    rax,QWORD PTR [rcx+0x10]
   140003077:	jne    0x14000307f
   140003079:	mov    QWORD PTR [rcx+0x10],rdx
   14000307d:	jmp    0x140003082
   14000307f:	mov    QWORD PTR [rcx],rdx
   140003082:	mov    QWORD PTR [rdx+0x10],rax
   140003086:	mov    QWORD PTR [rax+0x8],rdx
   14000308a:	mov    rcx,QWORD PTR [rax+0x8]
   14000308e:	mov    BYTE PTR [rcx+0x18],0x1
   140003092:	mov    rcx,QWORD PTR [rax+0x8]
   140003096:	mov    rdx,QWORD PTR [rcx+0x8]
   14000309a:	mov    BYTE PTR [rdx+0x18],0x0
   14000309e:	mov    rcx,QWORD PTR [rax+0x8]
   1400030a2:	mov    rdx,QWORD PTR [rcx+0x8]
   1400030a6:	mov    r8,QWORD PTR [rdx+0x10]
   1400030aa:	mov    rcx,QWORD PTR [r8]
   1400030ad:	mov    QWORD PTR [rdx+0x10],rcx
   1400030b1:	mov    rcx,QWORD PTR [r8]
   1400030b4:	cmp    BYTE PTR [rcx+0x19],0x0
   1400030b8:	jne    0x1400030be
   1400030ba:	mov    QWORD PTR [rcx+0x8],rdx
   1400030be:	mov    rcx,QWORD PTR [rdx+0x8]
   1400030c2:	mov    QWORD PTR [r8+0x8],rcx
   1400030c6:	mov    rcx,QWORD PTR [rip+0x41a6b]        # 0x140044b38
   1400030cd:	cmp    rdx,QWORD PTR [rcx+0x8]
   1400030d1:	jne    0x1400030d9
   1400030d3:	mov    QWORD PTR [rcx+0x8],r8
   1400030d7:	jmp    0x1400030eb
   1400030d9:	mov    rcx,QWORD PTR [rdx+0x8]
   1400030dd:	cmp    rdx,QWORD PTR [rcx]
   1400030e0:	jne    0x1400030e7
   1400030e2:	mov    QWORD PTR [rcx],r8
   1400030e5:	jmp    0x1400030eb
   1400030e7:	mov    QWORD PTR [rcx+0x10],r8
   1400030eb:	mov    QWORD PTR [r8],rdx
   1400030ee:	mov    QWORD PTR [rdx+0x8],r8
   1400030f2:	mov    rcx,QWORD PTR [rax+0x8]
   1400030f6:	cmp    BYTE PTR [rcx+0x18],0x0
   1400030fa:	je     0x140002f00
   140003100:	mov    rax,QWORD PTR [rip+0x41a31]        # 0x140044b38
   140003107:	mov    QWORD PTR [r11],r10
   14000310a:	mov    rcx,QWORD PTR [rax+0x8]
   14000310e:	mov    rax,r11
   140003111:	mov    BYTE PTR [rcx+0x18],0x1
   140003115:	add    rsp,0x28
   140003119:	ret    
   14000311a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000311e:	call   0x140018a04
   140003123:	xor    eax,eax
   140003125:	mov    QWORD PTR [rbx+0x38],0x7
   14000312d:	mov    rcx,rbx
   140003130:	mov    QWORD PTR [rbx+0x30],rax
   140003134:	mov    WORD PTR [rbx+0x20],ax
   140003138:	call   0x140018a04
   14000313d:	lea    rcx,[rip+0x34b3c]        # 0x140037c80
   140003144:	call   0x14001405c
   140003149:	mov    rbx,QWORD PTR [rsp+0x20]
   14000314e:	int3   
   14000314f:	int3   
   140003150:	mov    rax,rsp
   140003153:	push   rdi
   140003154:	push   r12
   140003156:	push   r13
   140003158:	push   r14
   14000315a:	push   r15
   14000315c:	sub    rsp,0x50
   140003160:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003168:	mov    QWORD PTR [rax+0x8],rbx
   14000316c:	mov    QWORD PTR [rax+0x18],rsi
   140003170:	mov    r12,r9
   140003173:	mov    r15,rdx
   140003176:	mov    r13,QWORD PTR [rsp+0xa0]
   14000317e:	mov    QWORD PTR [rsp+0x38],r13
   140003183:	mov    rax,QWORD PTR [rip+0x419ae]        # 0x140044b38
   14000318a:	mov    r9,QWORD PTR [rax+0x8]
   14000318e:	mov    rsi,rax
   140003191:	mov    dil,0x1
   140003194:	xor    r14d,r14d
   140003197:	cmp    BYTE PTR [r9+0x19],r14b
   14000319b:	jne    0x14000324e
   1400031a1:	mov    r11,QWORD PTR [r12+0x10]
   1400031a6:	mov    rbx,QWORD PTR [r12+0x18]
   1400031ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400031b0:	or     edi,0xffffffff
   1400031b3:	mov    rsi,r9
   1400031b6:	lea    rcx,[r9+0x20]
   1400031ba:	mov    r10,QWORD PTR [rcx+0x10]
   1400031be:	cmp    QWORD PTR [rcx+0x18],0x8
   1400031c3:	jb     0x1400031c8
   1400031c5:	mov    rcx,QWORD PTR [rcx]
   1400031c8:	cmp    rbx,0x8
   1400031cc:	jb     0x1400031d4
   1400031ce:	mov    rdx,QWORD PTR [r12]
   1400031d2:	jmp    0x1400031d7
   1400031d4:	mov    rdx,r12
   1400031d7:	mov    r8,r10
   1400031da:	cmp    r11,r10
   1400031dd:	cmovb  r8,r11
   1400031e1:	test   r8,r8
   1400031e4:	jmp    0x14000320a
   1400031e6:	movzx  eax,WORD PTR [rcx]
   1400031e9:	cmp    WORD PTR [rdx],ax
   1400031ec:	jne    0x1400031fb
   1400031ee:	add    rdx,0x2
   1400031f2:	add    rcx,0x2
   1400031f6:	dec    r8
   1400031f9:	jmp    0x14000320a
   1400031fb:	mov    r8d,0x1
   140003201:	cmp    WORD PTR [rdx],ax
   140003204:	cmovb  r8d,edi
   140003208:	jmp    0x14000320f
   14000320a:	jne    0x1400031e6
   14000320c:	mov    r8d,r14d
   14000320f:	movsxd rax,r8d
   140003212:	test   r8d,r8d
   140003215:	jne    0x140003229
   140003217:	cmp    r11,r10
   14000321a:	jae    0x140003220
   14000321c:	mov    eax,edi
   14000321e:	jmp    0x140003229
   140003220:	mov    eax,r14d
   140003223:	cmp    r11,r10
   140003226:	setne  al
   140003229:	test   eax,eax
   14000322b:	sets   dil
   14000322f:	test   dil,dil
   140003232:	je     0x140003239
   140003234:	mov    r9,QWORD PTR [r9]
   140003237:	jmp    0x14000323d
   140003239:	mov    r9,QWORD PTR [r9+0x10]
   14000323d:	cmp    BYTE PTR [r9+0x19],r14b
   140003241:	je     0x1400031b0
   140003247:	mov    rax,QWORD PTR [rip+0x418ea]        # 0x140044b38
   14000324e:	mov    rbx,rsi
   140003251:	test   dil,dil
   140003254:	je     0x1400032ea
   14000325a:	cmp    rsi,QWORD PTR [rax]
   14000325d:	jne    0x140003287
   14000325f:	mov    QWORD PTR [rsp+0x28],r13
   140003264:	mov    r9,rsi
   140003267:	mov    r8b,0x1
   14000326a:	lea    rdx,[rsp+0x30]
   14000326f:	call   0x140002e50
   140003274:	mov    rcx,QWORD PTR [rax]
   140003277:	mov    QWORD PTR [r15],rcx
   14000327a:	mov    BYTE PTR [r15+0x8],0x1
   14000327f:	mov    rax,r15
   140003282:	jmp    0x140003354
   140003287:	cmp    BYTE PTR [rsi+0x19],0x0
   14000328b:	je     0x140003293
   14000328d:	mov    rbx,QWORD PTR [rsi+0x10]
   140003291:	jmp    0x1400032ea
   140003293:	mov    rax,QWORD PTR [rsi]
   140003296:	cmp    BYTE PTR [rax+0x19],0x0
   14000329a:	jne    0x1400032bf
   14000329c:	mov    rbx,rax
   14000329f:	mov    rax,QWORD PTR [rax+0x10]
   1400032a3:	cmp    BYTE PTR [rax+0x19],0x0
   1400032a7:	jne    0x1400032ea
   1400032a9:	nop    DWORD PTR [rax+0x0]
   1400032b0:	mov    rbx,rax
   1400032b3:	mov    rax,QWORD PTR [rax+0x10]
   1400032b7:	cmp    BYTE PTR [rax+0x19],0x0
   1400032bb:	je     0x1400032b0
   1400032bd:	jmp    0x1400032ea
   1400032bf:	mov    rax,QWORD PTR [rsi+0x8]
   1400032c3:	cmp    BYTE PTR [rax+0x19],0x0
   1400032c7:	jne    0x1400032e2
   1400032c9:	nop    DWORD PTR [rax+0x0]
   1400032d0:	cmp    rbx,QWORD PTR [rax]
   1400032d3:	jne    0x1400032e2
   1400032d5:	mov    rbx,rax
   1400032d8:	mov    rax,QWORD PTR [rax+0x8]
   1400032dc:	cmp    BYTE PTR [rax+0x19],0x0
   1400032e0:	je     0x1400032d0
   1400032e2:	cmp    BYTE PTR [rbx+0x19],0x0
   1400032e6:	cmove  rbx,rax
   1400032ea:	lea    rcx,[rbx+0x20]
   1400032ee:	mov    rdx,r12
   1400032f1:	call   0x1400037f0
   1400032f6:	test   eax,eax
   1400032f8:	jns    0x140003320
   1400032fa:	mov    QWORD PTR [rsp+0x28],r13
   1400032ff:	mov    r9,rsi
   140003302:	movzx  r8d,dil
   140003306:	lea    rdx,[rsp+0x30]
   14000330b:	call   0x140002e50
   140003310:	mov    rax,QWORD PTR [rax]
   140003313:	mov    QWORD PTR [r15],rax
   140003316:	mov    BYTE PTR [r15+0x8],0x1
   14000331b:	mov    rax,r15
   14000331e:	jmp    0x140003354
   140003320:	cmp    QWORD PTR [r13+0x38],0x8
   140003325:	jb     0x140003330
   140003327:	mov    rcx,QWORD PTR [r13+0x20]
   14000332b:	call   0x140018a04
   140003330:	mov    QWORD PTR [r13+0x38],0x7
   140003338:	mov    QWORD PTR [r13+0x30],r14
   14000333c:	mov    WORD PTR [r13+0x20],r14w
   140003341:	mov    rcx,r13
   140003344:	call   0x140018a04
   140003349:	mov    QWORD PTR [r15],rbx
   14000334c:	mov    BYTE PTR [r15+0x8],0x0
   140003351:	mov    rax,r15
   140003354:	lea    r11,[rsp+0x50]
   140003359:	mov    rbx,QWORD PTR [r11+0x30]
   14000335d:	mov    rsi,QWORD PTR [r11+0x40]
   140003361:	mov    rsp,r11
   140003364:	pop    r15
   140003366:	pop    r14
   140003368:	pop    r13
   14000336a:	pop    r12
   14000336c:	pop    rdi
   14000336d:	ret    
   14000336e:	int3   
   14000336f:	int3   
   140003370:	sub    rsp,0x28
   140003374:	mov    rax,QWORD PTR [rip+0x417d5]        # 0x140044b50
   14000337b:	movabs rcx,0x38e38e38e38e38d
   140003385:	mov    r11,rdx
   140003388:	cmp    rax,rcx
   14000338b:	jb     0x1400033a7
   14000338d:	mov    QWORD PTR [rsp+0x20],rbx
   140003392:	mov    rbx,QWORD PTR [rsp+0x58]
   140003397:	cmp    QWORD PTR [rbx+0x40],0x8
   14000339c:	jb     0x140003643
   1400033a2:	jmp    0x14000363a
   1400033a7:	mov    r10,QWORD PTR [rsp+0x58]
   1400033ac:	inc    rax
   1400033af:	mov    QWORD PTR [rip+0x4179a],rax        # 0x140044b50
   1400033b6:	mov    QWORD PTR [r10+0x8],r9
   1400033ba:	mov    rax,QWORD PTR [rip+0x41787]        # 0x140044b48
   1400033c1:	cmp    r9,rax
   1400033c4:	jne    0x1400033dd
   1400033c6:	mov    QWORD PTR [rax+0x8],r10
   1400033ca:	mov    rax,QWORD PTR [rip+0x41777]        # 0x140044b48
   1400033d1:	mov    QWORD PTR [rax],r10
   1400033d4:	mov    rax,QWORD PTR [rip+0x4176d]        # 0x140044b48
   1400033db:	jmp    0x140003407
   1400033dd:	test   r8b,r8b
   1400033e0:	je     0x1400033f6
   1400033e2:	mov    QWORD PTR [r9],r10
   1400033e5:	mov    rax,QWORD PTR [rip+0x4175c]        # 0x140044b48
   1400033ec:	cmp    r9,QWORD PTR [rax]
   1400033ef:	jne    0x14000340b
   1400033f1:	mov    QWORD PTR [rax],r10
   1400033f4:	jmp    0x14000340b
   1400033f6:	mov    QWORD PTR [r9+0x10],r10
   1400033fa:	mov    rax,QWORD PTR [rip+0x41747]        # 0x140044b48
   140003401:	cmp    r9,QWORD PTR [rax+0x10]
   140003405:	jne    0x14000340b
   140003407:	mov    QWORD PTR [rax+0x10],r10
   14000340b:	mov    rcx,QWORD PTR [r10+0x8]
   14000340f:	mov    rax,r10
   140003412:	cmp    BYTE PTR [rcx+0x18],0x0
   140003416:	jne    0x140003620
   14000341c:	nop    DWORD PTR [rax+0x0]
   140003420:	mov    rcx,QWORD PTR [rax+0x8]
   140003424:	mov    r8,QWORD PTR [rcx+0x8]
   140003428:	mov    rdx,QWORD PTR [r8]
   14000342b:	cmp    rcx,rdx
   14000342e:	jne    0x14000352d
   140003434:	mov    rdx,QWORD PTR [r8+0x10]
   140003438:	cmp    BYTE PTR [rdx+0x18],0x0
   14000343c:	jne    0x14000345f
   14000343e:	mov    BYTE PTR [rcx+0x18],0x1
   140003442:	mov    BYTE PTR [rdx+0x18],0x1
   140003446:	mov    rcx,QWORD PTR [rax+0x8]
   14000344a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000344e:	mov    BYTE PTR [rdx+0x18],0x0
   140003452:	mov    rcx,QWORD PTR [rax+0x8]
   140003456:	mov    rax,QWORD PTR [rcx+0x8]
   14000345a:	jmp    0x140003612
   14000345f:	cmp    rax,QWORD PTR [rcx+0x10]
   140003463:	jne    0x1400034b4
   140003465:	mov    rdx,QWORD PTR [rcx+0x10]
   140003469:	mov    rax,rcx
   14000346c:	mov    rcx,QWORD PTR [rdx]
   14000346f:	mov    QWORD PTR [rax+0x10],rcx
   140003473:	mov    rcx,QWORD PTR [rdx]
   140003476:	cmp    BYTE PTR [rcx+0x19],0x0
   14000347a:	jne    0x140003480
   14000347c:	mov    QWORD PTR [rcx+0x8],rax
   140003480:	mov    rcx,QWORD PTR [rax+0x8]
   140003484:	mov    QWORD PTR [rdx+0x8],rcx
   140003488:	mov    rcx,QWORD PTR [rip+0x416b9]        # 0x140044b48
   14000348f:	cmp    rax,QWORD PTR [rcx+0x8]
   140003493:	jne    0x14000349b
   140003495:	mov    QWORD PTR [rcx+0x8],rdx
   140003499:	jmp    0x1400034ad
   14000349b:	mov    rcx,QWORD PTR [rax+0x8]
   14000349f:	cmp    rax,QWORD PTR [rcx]
   1400034a2:	jne    0x1400034a9
   1400034a4:	mov    QWORD PTR [rcx],rdx
   1400034a7:	jmp    0x1400034ad
   1400034a9:	mov    QWORD PTR [rcx+0x10],rdx
   1400034ad:	mov    QWORD PTR [rdx],rax
   1400034b0:	mov    QWORD PTR [rax+0x8],rdx
   1400034b4:	mov    rcx,QWORD PTR [rax+0x8]
   1400034b8:	mov    BYTE PTR [rcx+0x18],0x1
   1400034bc:	mov    rcx,QWORD PTR [rax+0x8]
   1400034c0:	mov    rdx,QWORD PTR [rcx+0x8]
   1400034c4:	mov    BYTE PTR [rdx+0x18],0x0
   1400034c8:	mov    rcx,QWORD PTR [rax+0x8]
   1400034cc:	mov    rdx,QWORD PTR [rcx+0x8]
   1400034d0:	mov    r8,QWORD PTR [rdx]
   1400034d3:	mov    rcx,QWORD PTR [r8+0x10]
   1400034d7:	mov    QWORD PTR [rdx],rcx
   1400034da:	mov    rcx,QWORD PTR [r8+0x10]
   1400034de:	cmp    BYTE PTR [rcx+0x19],0x0
   1400034e2:	jne    0x1400034e8
   1400034e4:	mov    QWORD PTR [rcx+0x8],rdx
   1400034e8:	mov    rcx,QWORD PTR [rdx+0x8]
   1400034ec:	mov    QWORD PTR [r8+0x8],rcx
   1400034f0:	mov    rcx,QWORD PTR [rip+0x41651]        # 0x140044b48
   1400034f7:	cmp    rdx,QWORD PTR [rcx+0x8]
   1400034fb:	jne    0x14000350a
   1400034fd:	mov    QWORD PTR [rcx+0x8],r8
   140003501:	mov    QWORD PTR [r8+0x10],rdx
   140003505:	jmp    0x14000360e
   14000350a:	mov    rcx,QWORD PTR [rdx+0x8]
   14000350e:	cmp    rdx,QWORD PTR [rcx+0x10]
   140003512:	jne    0x140003521
   140003514:	mov    QWORD PTR [rcx+0x10],r8
   140003518:	mov    QWORD PTR [r8+0x10],rdx
   14000351c:	jmp    0x14000360e
   140003521:	mov    QWORD PTR [rcx],r8
   140003524:	mov    QWORD PTR [r8+0x10],rdx
   140003528:	jmp    0x14000360e
   14000352d:	cmp    BYTE PTR [rdx+0x18],0x0
   140003531:	jne    0x140003554
   140003533:	mov    BYTE PTR [rcx+0x18],0x1
   140003537:	mov    BYTE PTR [rdx+0x18],0x1
   14000353b:	mov    rcx,QWORD PTR [rax+0x8]
   14000353f:	mov    rdx,QWORD PTR [rcx+0x8]
   140003543:	mov    BYTE PTR [rdx+0x18],0x0
   140003547:	mov    rcx,QWORD PTR [rax+0x8]
   14000354b:	mov    rax,QWORD PTR [rcx+0x8]
   14000354f:	jmp    0x140003612
   140003554:	cmp    rax,QWORD PTR [rcx]
   140003557:	jne    0x1400035aa
   140003559:	mov    rdx,QWORD PTR [rcx]
   14000355c:	mov    rax,rcx
   14000355f:	mov    rcx,QWORD PTR [rdx+0x10]
   140003563:	mov    QWORD PTR [rax],rcx
   140003566:	mov    rcx,QWORD PTR [rdx+0x10]
   14000356a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000356e:	jne    0x140003574
   140003570:	mov    QWORD PTR [rcx+0x8],rax
   140003574:	mov    rcx,QWORD PTR [rax+0x8]
   140003578:	mov    QWORD PTR [rdx+0x8],rcx
   14000357c:	mov    rcx,QWORD PTR [rip+0x415c5]        # 0x140044b48
   140003583:	cmp    rax,QWORD PTR [rcx+0x8]
   140003587:	jne    0x14000358f
   140003589:	mov    QWORD PTR [rcx+0x8],rdx
   14000358d:	jmp    0x1400035a2
   14000358f:	mov    rcx,QWORD PTR [rax+0x8]
   140003593:	cmp    rax,QWORD PTR [rcx+0x10]
   140003597:	jne    0x14000359f
   140003599:	mov    QWORD PTR [rcx+0x10],rdx
   14000359d:	jmp    0x1400035a2
   14000359f:	mov    QWORD PTR [rcx],rdx
   1400035a2:	mov    QWORD PTR [rdx+0x10],rax
   1400035a6:	mov    QWORD PTR [rax+0x8],rdx
   1400035aa:	mov    rcx,QWORD PTR [rax+0x8]
   1400035ae:	mov    BYTE PTR [rcx+0x18],0x1
   1400035b2:	mov    rcx,QWORD PTR [rax+0x8]
   1400035b6:	mov    rdx,QWORD PTR [rcx+0x8]
   1400035ba:	mov    BYTE PTR [rdx+0x18],0x0
   1400035be:	mov    rcx,QWORD PTR [rax+0x8]
   1400035c2:	mov    rdx,QWORD PTR [rcx+0x8]
   1400035c6:	mov    r8,QWORD PTR [rdx+0x10]
   1400035ca:	mov    rcx,QWORD PTR [r8]
   1400035cd:	mov    QWORD PTR [rdx+0x10],rcx
   1400035d1:	mov    rcx,QWORD PTR [r8]
   1400035d4:	cmp    BYTE PTR [rcx+0x19],0x0
   1400035d8:	jne    0x1400035de
   1400035da:	mov    QWORD PTR [rcx+0x8],rdx
   1400035de:	mov    rcx,QWORD PTR [rdx+0x8]
   1400035e2:	mov    QWORD PTR [r8+0x8],rcx
   1400035e6:	mov    rcx,QWORD PTR [rip+0x4155b]        # 0x140044b48
   1400035ed:	cmp    rdx,QWORD PTR [rcx+0x8]
   1400035f1:	jne    0x1400035f9
   1400035f3:	mov    QWORD PTR [rcx+0x8],r8
   1400035f7:	jmp    0x14000360b
   1400035f9:	mov    rcx,QWORD PTR [rdx+0x8]
   1400035fd:	cmp    rdx,QWORD PTR [rcx]
   140003600:	jne    0x140003607
   140003602:	mov    QWORD PTR [rcx],r8
   140003605:	jmp    0x14000360b
   140003607:	mov    QWORD PTR [rcx+0x10],r8
   14000360b:	mov    QWORD PTR [r8],rdx
   14000360e:	mov    QWORD PTR [rdx+0x8],r8
   140003612:	mov    rcx,QWORD PTR [rax+0x8]
   140003616:	cmp    BYTE PTR [rcx+0x18],0x0
   14000361a:	je     0x140003420
   140003620:	mov    rax,QWORD PTR [rip+0x41521]        # 0x140044b48
   140003627:	mov    QWORD PTR [r11],r10
   14000362a:	mov    rcx,QWORD PTR [rax+0x8]
   14000362e:	mov    rax,r11
   140003631:	mov    BYTE PTR [rcx+0x18],0x1
   140003635:	add    rsp,0x28
   140003639:	ret    
   14000363a:	mov    rcx,QWORD PTR [rbx+0x28]
   14000363e:	call   0x140018a04
   140003643:	xor    eax,eax
   140003645:	mov    QWORD PTR [rbx+0x40],0x7
   14000364d:	mov    rcx,rbx
   140003650:	mov    QWORD PTR [rbx+0x38],rax
   140003654:	mov    WORD PTR [rbx+0x28],ax
   140003658:	call   0x140018a04
   14000365d:	lea    rcx,[rip+0x3461c]        # 0x140037c80
   140003664:	call   0x14001405c
   140003669:	mov    rbx,QWORD PTR [rsp+0x20]
   14000366e:	int3   
   14000366f:	int3   
   140003670:	rex push rdi
   140003672:	sub    rsp,0x50
   140003676:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000367f:	mov    QWORD PTR [rsp+0x60],rbx
   140003684:	mov    QWORD PTR [rsp+0x70],rsi
   140003689:	mov    r10,r9
   14000368c:	mov    rdi,rdx
   14000368f:	mov    rsi,QWORD PTR [rsp+0x80]
   140003697:	mov    QWORD PTR [rsp+0x38],rsi
   14000369c:	mov    rdx,QWORD PTR [rip+0x414a5]        # 0x140044b48
   1400036a3:	mov    rax,QWORD PTR [rdx+0x8]
   1400036a7:	mov    r9,rdx
   1400036aa:	mov    r8b,0x1
   1400036ad:	cmp    BYTE PTR [rax+0x19],0x0
   1400036b1:	jne    0x1400036de
   1400036b3:	mov    ecx,DWORD PTR [r10]
   1400036b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400036c0:	mov    r9,rax
   1400036c3:	cmp    ecx,DWORD PTR [rax+0x20]
   1400036c6:	setl   r8b
   1400036ca:	test   r8b,r8b
   1400036cd:	je     0x1400036d4
   1400036cf:	mov    rax,QWORD PTR [rax]
   1400036d2:	jmp    0x1400036d8
   1400036d4:	mov    rax,QWORD PTR [rax+0x10]
   1400036d8:	cmp    BYTE PTR [rax+0x19],0x0
   1400036dc:	je     0x1400036c0
   1400036de:	mov    rbx,r9
   1400036e1:	test   r8b,r8b
   1400036e4:	je     0x14000377a
   1400036ea:	cmp    r9,QWORD PTR [rdx]
   1400036ed:	jne    0x140003713
   1400036ef:	mov    QWORD PTR [rsp+0x28],rsi
   1400036f4:	mov    r8b,0x1
   1400036f7:	lea    rdx,[rsp+0x30]
   1400036fc:	call   0x140003370
   140003701:	mov    rcx,QWORD PTR [rax]
   140003704:	mov    QWORD PTR [rdi],rcx
   140003707:	mov    BYTE PTR [rdi+0x8],0x1
   14000370b:	mov    rax,rdi
   14000370e:	jmp    0x1400037d4
   140003713:	cmp    BYTE PTR [r9+0x19],0x0
   140003718:	je     0x140003720
   14000371a:	mov    rbx,QWORD PTR [r9+0x10]
   14000371e:	jmp    0x14000377a
   140003720:	mov    rax,QWORD PTR [r9]
   140003723:	cmp    BYTE PTR [rax+0x19],0x0
   140003727:	jne    0x14000374f
   140003729:	mov    rbx,rax
   14000372c:	mov    rax,QWORD PTR [rax+0x10]
   140003730:	cmp    BYTE PTR [rax+0x19],0x0
   140003734:	jne    0x14000377a
   140003736:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003740:	mov    rbx,rax
   140003743:	mov    rax,QWORD PTR [rax+0x10]
   140003747:	cmp    BYTE PTR [rax+0x19],0x0
   14000374b:	je     0x140003740
   14000374d:	jmp    0x14000377a
   14000374f:	mov    rax,QWORD PTR [r9+0x8]
   140003753:	cmp    BYTE PTR [rax+0x19],0x0
   140003757:	jne    0x140003772
   140003759:	nop    DWORD PTR [rax+0x0]
   140003760:	cmp    rbx,QWORD PTR [rax]
   140003763:	jne    0x140003772
   140003765:	mov    rbx,rax
   140003768:	mov    rax,QWORD PTR [rax+0x8]
   14000376c:	cmp    BYTE PTR [rax+0x19],0x0
   140003770:	je     0x140003760
   140003772:	cmp    BYTE PTR [rbx+0x19],0x0
   140003776:	cmove  rbx,rax
   14000377a:	mov    eax,DWORD PTR [r10]
   14000377d:	cmp    DWORD PTR [rbx+0x20],eax
   140003780:	jge    0x1400037a0
   140003782:	mov    QWORD PTR [rsp+0x28],rsi
   140003787:	lea    rdx,[rsp+0x30]
   14000378c:	call   0x140003370
   140003791:	mov    rax,QWORD PTR [rax]
   140003794:	mov    QWORD PTR [rdi],rax
   140003797:	mov    BYTE PTR [rdi+0x8],0x1
   14000379b:	mov    rax,rdi
   14000379e:	jmp    0x1400037d4
   1400037a0:	cmp    QWORD PTR [rsi+0x40],0x8
   1400037a5:	jb     0x1400037b0
   1400037a7:	mov    rcx,QWORD PTR [rsi+0x28]
   1400037ab:	call   0x140018a04
   1400037b0:	mov    QWORD PTR [rsi+0x40],0x7
   1400037b8:	xor    eax,eax
   1400037ba:	mov    QWORD PTR [rsi+0x38],rax
   1400037be:	mov    WORD PTR [rsi+0x28],ax
   1400037c2:	mov    rcx,rsi
   1400037c5:	call   0x140018a04
   1400037ca:	mov    QWORD PTR [rdi],rbx
   1400037cd:	mov    BYTE PTR [rdi+0x8],0x0
   1400037d1:	mov    rax,rdi
   1400037d4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400037d9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400037de:	add    rsp,0x50
   1400037e2:	pop    rdi
   1400037e3:	ret    
   1400037e4:	int3   
   1400037e5:	int3   
   1400037e6:	int3   
   1400037e7:	int3   
   1400037e8:	int3   
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400037f5:	cmp    QWORD PTR [rdx+0x18],0x8
   1400037fa:	mov    r11,QWORD PTR [rdx+0x10]
   1400037fe:	jb     0x140003803
   140003800:	mov    rdx,QWORD PTR [rdx]
   140003803:	cmp    QWORD PTR [rcx+0x18],0x8
   140003808:	mov    r10,QWORD PTR [rcx+0x10]
   14000380c:	jb     0x140003811
   14000380e:	mov    rcx,QWORD PTR [rcx]
   140003811:	cmp    r10,r11
   140003814:	mov    r8,r11
   140003817:	cmovb  r8,r10
   14000381b:	xor    r9d,r9d
   14000381e:	or     ebx,0xffffffff
   140003821:	test   r8,r8
   140003824:	jne    0x140003840
   140003826:	mov    r8d,r9d
   140003829:	movsxd rax,r8d
   14000382c:	test   r8d,r8d
   14000382f:	jne    0x14000386b
   140003831:	cmp    r10,r11
   140003834:	jae    0x140003864
   140003836:	mov    eax,ebx
   140003838:	mov    rbx,QWORD PTR [rsp+0x8]
   14000383d:	ret    
   14000383e:	xchg   ax,ax
   140003840:	movzx  eax,WORD PTR [rdx]
   140003843:	cmp    WORD PTR [rcx],ax
   140003846:	jne    0x140003855
   140003848:	add    rcx,0x2
   14000384c:	add    rdx,0x2
   140003850:	dec    r8
   140003853:	jmp    0x140003824
   140003855:	cmp    WORD PTR [rcx],ax
   140003858:	mov    r8d,0x1
   14000385e:	cmovb  r8d,ebx
   140003862:	jmp    0x140003829
   140003864:	setne  r9b
   140003868:	mov    eax,r9d
   14000386b:	mov    rbx,QWORD PTR [rsp+0x8]
   140003870:	ret    
   140003871:	int3   
   140003872:	int3   
   140003873:	int3   
   140003874:	int3   
   140003875:	int3   
   140003876:	int3   
   140003877:	int3   
   140003878:	int3   
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	mov    QWORD PTR [rsp+0x8],rbx
   140003885:	cmp    QWORD PTR [rcx+0x10],r8
   140003889:	cmovb  r8,QWORD PTR [rcx+0x10]
   14000388e:	cmp    QWORD PTR [rcx+0x18],0x8
   140003893:	jb     0x140003898
   140003895:	mov    rcx,QWORD PTR [rcx]
   140003898:	mov    r11,QWORD PTR [rsp+0x28]
   14000389d:	cmp    r8,r11
   1400038a0:	mov    rdx,r11
   1400038a3:	cmovb  rdx,r8
   1400038a7:	xor    r10d,r10d
   1400038aa:	or     ebx,0xffffffff
   1400038ad:	test   rdx,rdx
   1400038b0:	jne    0x1400038d0
   1400038b2:	mov    edx,r10d
   1400038b5:	movsxd rax,edx
   1400038b8:	test   edx,edx
   1400038ba:	jne    0x1400038fa
   1400038bc:	cmp    r8,r11
   1400038bf:	jae    0x1400038f3
   1400038c1:	mov    eax,ebx
   1400038c3:	mov    rbx,QWORD PTR [rsp+0x8]
   1400038c8:	ret    
   1400038c9:	nop    DWORD PTR [rax+0x0]
   1400038d0:	movzx  eax,WORD PTR [r9]
   1400038d4:	cmp    WORD PTR [rcx],ax
   1400038d7:	jne    0x1400038e6
   1400038d9:	add    rcx,0x2
   1400038dd:	add    r9,0x2
   1400038e1:	dec    rdx
   1400038e4:	jmp    0x1400038b0
   1400038e6:	cmp    WORD PTR [rcx],ax
   1400038e9:	mov    edx,0x1
   1400038ee:	cmovb  edx,ebx
   1400038f1:	jmp    0x1400038b5
   1400038f3:	setne  r10b
   1400038f7:	mov    eax,r10d
   1400038fa:	mov    rbx,QWORD PTR [rsp+0x8]
   1400038ff:	ret    
   140003900:	rex push rbx
   140003902:	sub    rsp,0x20
   140003906:	xor    eax,eax
   140003908:	mov    QWORD PTR [rcx+0x18],0x7
   140003910:	or     r9,0xffffffffffffffff
   140003914:	mov    QWORD PTR [rcx+0x10],rax
   140003918:	xor    r8d,r8d
   14000391b:	mov    rbx,rcx
   14000391e:	mov    WORD PTR [rcx],ax
   140003921:	call   0x140003a40
   140003926:	mov    rax,rbx
   140003929:	add    rsp,0x20
   14000392d:	pop    rbx
   14000392e:	ret    
   14000392f:	int3   
   140003930:	sub    rsp,0x28
   140003934:	cmp    QWORD PTR [rcx+0x10],rdx
   140003938:	jb     0x140003968
   14000393a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000393f:	mov    QWORD PTR [rcx+0x10],rdx
   140003943:	jb     0x140003958
   140003945:	mov    rax,QWORD PTR [rcx]
   140003948:	xor    r8d,r8d
   14000394b:	mov    WORD PTR [rax+rdx*2],r8w
   140003950:	mov    rax,rcx
   140003953:	add    rsp,0x28
   140003957:	ret    
   140003958:	xor    r8d,r8d
   14000395b:	mov    rax,rcx
   14000395e:	mov    WORD PTR [rcx+rdx*2],r8w
   140003963:	add    rsp,0x28
   140003967:	ret    
   140003968:	lea    rcx,[rip+0x34329]        # 0x140037c98
   14000396f:	call   0x140014094
   140003974:	int3   
   140003975:	int3   
   140003976:	int3   
   140003977:	int3   
   140003978:	int3   
   140003979:	int3   
   14000397a:	int3   
   14000397b:	int3   
   14000397c:	int3   
   14000397d:	int3   
   14000397e:	int3   
   14000397f:	int3   
   140003980:	mov    QWORD PTR [rsp+0x8],rbx
   140003985:	push   rdi
   140003986:	sub    rsp,0x20
   14000398a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000398e:	mov    r9,r8
   140003991:	mov    rbx,rcx
   140003994:	cmp    rdi,rdx
   140003997:	jb     0x140003a20
   14000399d:	mov    rax,rdi
   1400039a0:	sub    rax,rdx
   1400039a3:	cmp    rax,r8
   1400039a6:	ja     0x1400039ca
   1400039a8:	cmp    QWORD PTR [rcx+0x18],0x8
   1400039ad:	mov    QWORD PTR [rcx+0x10],rdx
   1400039b1:	jb     0x1400039b6
   1400039b3:	mov    rcx,QWORD PTR [rcx]
   1400039b6:	xor    eax,eax
   1400039b8:	mov    WORD PTR [rcx+rdx*2],ax
   1400039bc:	mov    rax,rbx
   1400039bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039c4:	add    rsp,0x20
   1400039c8:	pop    rdi
   1400039c9:	ret    
   1400039ca:	test   r8,r8
   1400039cd:	je     0x140003a12
   1400039cf:	cmp    QWORD PTR [rcx+0x18],0x8
   1400039d4:	jb     0x1400039db
   1400039d6:	mov    rax,QWORD PTR [rcx]
   1400039d9:	jmp    0x1400039de
   1400039db:	mov    rax,rcx
   1400039de:	sub    rdi,r8
   1400039e1:	lea    rcx,[rax+rdx*2]
   1400039e5:	mov    r8,rdi
   1400039e8:	sub    r8,rdx
   1400039eb:	je     0x1400039f9
   1400039ed:	lea    rdx,[rcx+r9*2]
   1400039f1:	add    r8,r8
   1400039f4:	call   0x140018a90
   1400039f9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400039fe:	mov    QWORD PTR [rbx+0x10],rdi
   140003a02:	jb     0x140003a09
   140003a04:	mov    rcx,QWORD PTR [rbx]
   140003a07:	jmp    0x140003a0c
   140003a09:	mov    rcx,rbx
   140003a0c:	xor    eax,eax
   140003a0e:	mov    WORD PTR [rcx+rdi*2],ax
   140003a12:	mov    rax,rbx
   140003a15:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a1a:	add    rsp,0x20
   140003a1e:	pop    rdi
   140003a1f:	ret    
   140003a20:	lea    rcx,[rip+0x34271]        # 0x140037c98
   140003a27:	call   0x140014094
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a35:	jb     0x140003a3b
   140003a37:	mov    rax,QWORD PTR [rcx]
   140003a3a:	ret    
   140003a3b:	mov    rax,rcx
   140003a3e:	ret    
   140003a3f:	int3   
   140003a40:	mov    QWORD PTR [rsp+0x8],rbx
   140003a45:	mov    QWORD PTR [rsp+0x10],rbp
   140003a4a:	mov    QWORD PTR [rsp+0x18],rsi
   140003a4f:	push   rdi
   140003a50:	sub    rsp,0x20
   140003a54:	mov    rdi,QWORD PTR [rdx+0x10]
   140003a58:	mov    rbp,r8
   140003a5b:	mov    rsi,rdx
   140003a5e:	mov    rbx,rcx
   140003a61:	cmp    rdi,r8
   140003a64:	jb     0x140003b5c
   140003a6a:	sub    rdi,r8
   140003a6d:	cmp    r9,rdi
   140003a70:	cmovb  rdi,r9
   140003a74:	cmp    rcx,rdx
   140003a77:	jne    0x140003aaf
   140003a79:	lea    rcx,[rdi+r8*1]
   140003a7d:	cmp    QWORD PTR [rbx+0x10],rcx
   140003a81:	jb     0x140003b69
   140003a87:	cmp    QWORD PTR [rbx+0x18],0x8
   140003a8c:	mov    QWORD PTR [rbx+0x10],rcx
   140003a90:	jb     0x140003a97
   140003a92:	mov    rdx,QWORD PTR [rbx]
   140003a95:	jmp    0x140003a9a
   140003a97:	mov    rdx,rbx
   140003a9a:	xor    eax,eax
   140003a9c:	mov    WORD PTR [rdx+rcx*2],ax
   140003aa0:	xor    edx,edx
   140003aa2:	mov    rcx,rbx
   140003aa5:	call   0x140003980
   140003aaa:	jmp    0x140003b44
   140003aaf:	movabs rax,0x7ffffffffffffffe
   140003ab9:	cmp    rdi,rax
   140003abc:	ja     0x140003b76
   140003ac2:	mov    rcx,QWORD PTR [rcx+0x18]
   140003ac6:	cmp    rcx,rdi
   140003ac9:	jae    0x140003af5
   140003acb:	mov    r8,QWORD PTR [rbx+0x10]
   140003acf:	mov    rdx,rdi
   140003ad2:	mov    rcx,rbx
   140003ad5:	call   0x140003b90
   140003ada:	test   rdi,rdi
   140003add:	je     0x140003b44
   140003adf:	cmp    QWORD PTR [rsi+0x18],0x8
   140003ae4:	jb     0x140003ae9
   140003ae6:	mov    rsi,QWORD PTR [rsi]
   140003ae9:	cmp    QWORD PTR [rbx+0x18],0x8
   140003aee:	jb     0x140003b16
   140003af0:	mov    rcx,QWORD PTR [rbx]
   140003af3:	jmp    0x140003b19
   140003af5:	test   rdi,rdi
   140003af8:	jne    0x140003adf
   140003afa:	xor    eax,eax
   140003afc:	mov    QWORD PTR [rbx+0x10],rax
   140003b00:	cmp    rcx,0x8
   140003b04:	jb     0x140003b0e
   140003b06:	mov    rcx,QWORD PTR [rbx]
   140003b09:	mov    WORD PTR [rcx],ax
   140003b0c:	jmp    0x140003b44
   140003b0e:	mov    rcx,rbx
   140003b11:	mov    WORD PTR [rbx],ax
   140003b14:	jmp    0x140003b44
   140003b16:	mov    rcx,rbx
   140003b19:	test   rdi,rdi
   140003b1c:	je     0x140003b2b
   140003b1e:	lea    r8,[rdi+rdi*1]
   140003b22:	lea    rdx,[rsi+rbp*2]
   140003b26:	call   0x140018a90
   140003b2b:	cmp    QWORD PTR [rbx+0x18],0x8
   140003b30:	mov    QWORD PTR [rbx+0x10],rdi
   140003b34:	jb     0x140003b3b
   140003b36:	mov    rcx,QWORD PTR [rbx]
   140003b39:	jmp    0x140003b3e
   140003b3b:	mov    rcx,rbx
   140003b3e:	xor    eax,eax
   140003b40:	mov    WORD PTR [rcx+rdi*2],ax
   140003b44:	mov    rbp,QWORD PTR [rsp+0x38]
   140003b49:	mov    rsi,QWORD PTR [rsp+0x40]
   140003b4e:	mov    rax,rbx
   140003b51:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b56:	add    rsp,0x20
   140003b5a:	pop    rdi
   140003b5b:	ret    
   140003b5c:	lea    rcx,[rip+0x34135]        # 0x140037c98
   140003b63:	call   0x140014094
   140003b68:	int3   
   140003b69:	lea    rcx,[rip+0x34128]        # 0x140037c98
   140003b70:	call   0x140014094
   140003b75:	int3   
   140003b76:	lea    rcx,[rip+0x34133]        # 0x140037cb0
   140003b7d:	call   0x14001405c
   140003b82:	int3   
   140003b83:	int3   
   140003b84:	int3   
   140003b85:	int3   
   140003b86:	int3   
   140003b87:	int3   
   140003b88:	int3   
   140003b89:	int3   
   140003b8a:	int3   
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	mov    QWORD PTR [rsp+0x18],r8
   140003b95:	mov    QWORD PTR [rsp+0x10],rdx
   140003b9a:	mov    QWORD PTR [rsp+0x8],rcx
   140003b9f:	push   rbx
   140003ba0:	push   rsi
   140003ba1:	push   rdi
   140003ba2:	push   r14
   140003ba4:	push   r15
   140003ba6:	sub    rsp,0x30
   140003baa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003bb3:	mov    rsi,r8
   140003bb6:	mov    rbx,rcx
   140003bb9:	mov    rdi,rdx
   140003bbc:	or     rdi,0x7
   140003bc0:	movabs r9,0x7ffffffffffffffe
   140003bca:	cmp    rdi,r9
   140003bcd:	jbe    0x140003bd4
   140003bcf:	mov    rdi,rdx
   140003bd2:	jmp    0x140003c05
   140003bd4:	mov    r8,QWORD PTR [rcx+0x18]
   140003bd8:	mov    rcx,r8
   140003bdb:	shr    rcx,1
   140003bde:	movabs rax,0xaaaaaaaaaaaaaaab
   140003be8:	mul    rdi
   140003beb:	shr    rdx,1
   140003bee:	cmp    rcx,rdx
   140003bf1:	jbe    0x140003c05
   140003bf3:	mov    rax,r9
   140003bf6:	sub    rax,rcx
   140003bf9:	cmp    r8,rax
   140003bfc:	lea    rdi,[rcx+r8*1]
   140003c00:	jbe    0x140003c05
   140003c02:	mov    rdi,r9
   140003c05:	lea    rcx,[rdi+0x1]
   140003c09:	xor    r15d,r15d
   140003c0c:	mov    r14d,r15d
   140003c0f:	test   rcx,rcx
   140003c12:	je     0x140003c39
   140003c14:	movabs rax,0x7fffffffffffffff
   140003c1e:	cmp    rcx,rax
   140003c21:	ja     0x140003c33
   140003c23:	add    rcx,rcx
   140003c26:	call   0x140018a0c
   140003c2b:	mov    r14,rax
   140003c2e:	test   rax,rax
   140003c31:	jne    0x140003c39
   140003c33:	call   0x140014018
   140003c38:	nop
   140003c39:	jmp    0x140003c52
   140003c3b:	xor    r15d,r15d
   140003c3e:	mov    rbx,QWORD PTR [rsp+0x60]
   140003c43:	mov    rsi,QWORD PTR [rsp+0x70]
   140003c48:	mov    rdi,QWORD PTR [rsp+0x68]
   140003c4d:	mov    r14,QWORD PTR [rsp+0x78]
   140003c52:	test   rsi,rsi
   140003c55:	je     0x140003c77
   140003c57:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c5c:	jb     0x140003c63
   140003c5e:	mov    rdx,QWORD PTR [rbx]
   140003c61:	jmp    0x140003c66
   140003c63:	mov    rdx,rbx
   140003c66:	test   rsi,rsi
   140003c69:	je     0x140003c77
   140003c6b:	lea    r8,[rsi+rsi*1]
   140003c6f:	mov    rcx,r14
   140003c72:	call   0x140018a90
   140003c77:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c7c:	jb     0x140003c86
   140003c7e:	mov    rcx,QWORD PTR [rbx]
   140003c81:	call   0x140018a04
   140003c86:	mov    QWORD PTR [rbx],r14
   140003c89:	mov    QWORD PTR [rbx+0x18],rdi
   140003c8d:	mov    QWORD PTR [rbx+0x10],rsi
   140003c91:	cmp    rdi,0x8
   140003c95:	jb     0x140003c9a
   140003c97:	mov    rbx,r14
   140003c9a:	mov    WORD PTR [rbx+rsi*2],r15w
   140003c9f:	add    rsp,0x30
   140003ca3:	pop    r15
   140003ca5:	pop    r14
   140003ca7:	pop    rdi
   140003ca8:	pop    rsi
   140003ca9:	pop    rbx
   140003caa:	ret    
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	mov    QWORD PTR [rsp+0x20],rbx
   140003cb5:	push   rdi
   140003cb6:	sub    rsp,0x20
   140003cba:	movabs rax,0x7ffffffffffffffe
   140003cc4:	mov    rdi,rdx
   140003cc7:	mov    rbx,rcx
   140003cca:	cmp    rdx,rax
   140003ccd:	ja     0x140003d78
   140003cd3:	mov    rax,QWORD PTR [rcx+0x18]
   140003cd7:	mov    QWORD PTR [rsp+0x38],rsi
   140003cdc:	xor    esi,esi
   140003cde:	cmp    rax,rdx
   140003ce1:	jae    0x140003cee
   140003ce3:	mov    r8,QWORD PTR [rcx+0x10]
   140003ce7:	call   0x140003b90
   140003cec:	jmp    0x140003d62
   140003cee:	test   r8b,r8b
   140003cf1:	je     0x140003d4d
   140003cf3:	cmp    rdx,0x8
   140003cf7:	jae    0x140003d4d
   140003cf9:	mov    QWORD PTR [rsp+0x40],r14
   140003cfe:	mov    r14,QWORD PTR [rcx+0x10]
   140003d02:	cmp    rdx,r14
   140003d05:	cmovb  r14,rdx
   140003d09:	cmp    rax,0x8
   140003d0d:	jb     0x140003d35
   140003d0f:	mov    QWORD PTR [rsp+0x30],rbp
   140003d14:	mov    rbp,QWORD PTR [rcx]
   140003d17:	test   r14,r14
   140003d1a:	je     0x140003d28
   140003d1c:	lea    r8,[r14+r14*1]
   140003d20:	mov    rdx,rbp
   140003d23:	call   0x140018a90
   140003d28:	mov    rcx,rbp
   140003d2b:	call   0x140018a04
   140003d30:	mov    rbp,QWORD PTR [rsp+0x30]
   140003d35:	mov    QWORD PTR [rbx+0x10],r14
   140003d39:	mov    QWORD PTR [rbx+0x18],0x7
   140003d41:	mov    WORD PTR [rbx+r14*2],si
   140003d46:	mov    r14,QWORD PTR [rsp+0x40]
   140003d4b:	jmp    0x140003d62
   140003d4d:	test   rdx,rdx
   140003d50:	jne    0x140003d62
   140003d52:	mov    QWORD PTR [rcx+0x10],rsi
   140003d56:	cmp    rax,0x8
   140003d5a:	jb     0x140003d5f
   140003d5c:	mov    rbx,QWORD PTR [rcx]
   140003d5f:	mov    WORD PTR [rbx],si
   140003d62:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d67:	mov    rbx,QWORD PTR [rsp+0x48]
   140003d6c:	test   rdi,rdi
   140003d6f:	setne  al
   140003d72:	add    rsp,0x20
   140003d76:	pop    rdi
   140003d77:	ret    
   140003d78:	lea    rcx,[rip+0x33f31]        # 0x140037cb0
   140003d7f:	call   0x14001405c
   140003d84:	int3   
   140003d85:	int3   
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	int3   
   140003d89:	int3   
   140003d8a:	int3   
   140003d8b:	int3   
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	mov    QWORD PTR [rsp+0x8],rbx
   140003d95:	mov    QWORD PTR [rsp+0x10],rsi
   140003d9a:	push   rdi
   140003d9b:	sub    rsp,0x20
   140003d9f:	mov    rdi,r8
   140003da2:	mov    rsi,rdx
   140003da5:	mov    rbx,rcx
   140003da8:	test   rdx,rdx
   140003dab:	je     0x140003e0e
   140003dad:	mov    rdx,QWORD PTR [rcx+0x18]
   140003db1:	cmp    rdx,0x8
   140003db5:	jb     0x140003dbc
   140003db7:	mov    rax,QWORD PTR [rcx]
   140003dba:	jmp    0x140003dbf
   140003dbc:	mov    rax,rcx
   140003dbf:	cmp    rsi,rax
   140003dc2:	jb     0x140003e0e
   140003dc4:	cmp    rdx,0x8
   140003dc8:	jb     0x140003dcd
   140003dca:	mov    rcx,QWORD PTR [rcx]
   140003dcd:	mov    rax,QWORD PTR [rbx+0x10]
   140003dd1:	lea    rcx,[rcx+rax*2]
   140003dd5:	cmp    rcx,rsi
   140003dd8:	jbe    0x140003e0e
   140003dda:	cmp    rdx,0x8
   140003dde:	jb     0x140003de5
   140003de0:	mov    rax,QWORD PTR [rbx]
   140003de3:	jmp    0x140003de8
   140003de5:	mov    rax,rbx
   140003de8:	sub    rsi,rax
   140003deb:	mov    r9,r8
   140003dee:	mov    rdx,rbx
   140003df1:	sar    rsi,1
   140003df4:	mov    rcx,rbx
   140003df7:	mov    r8,rsi
   140003dfa:	mov    rbx,QWORD PTR [rsp+0x30]
   140003dff:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e04:	add    rsp,0x20
   140003e08:	pop    rdi
   140003e09:	jmp    0x140003a40
   140003e0e:	movabs rax,0x7ffffffffffffffe
   140003e18:	cmp    r8,rax
   140003e1b:	ja     0x140003ecd
   140003e21:	mov    rcx,QWORD PTR [rbx+0x18]
   140003e25:	cmp    rcx,r8
   140003e28:	jae    0x140003e4a
   140003e2a:	mov    r8,QWORD PTR [rbx+0x10]
   140003e2e:	mov    rdx,rdi
   140003e31:	mov    rcx,rbx
   140003e34:	call   0x140003b90
   140003e39:	test   rdi,rdi
   140003e3c:	je     0x140003eba
   140003e3e:	cmp    QWORD PTR [rbx+0x18],0x8
   140003e43:	jb     0x140003e8d
   140003e45:	mov    rcx,QWORD PTR [rbx]
   140003e48:	jmp    0x140003e90
   140003e4a:	test   r8,r8
   140003e4d:	jne    0x140003e39
   140003e4f:	xor    eax,eax
   140003e51:	mov    QWORD PTR [rbx+0x10],rax
   140003e55:	cmp    rcx,0x8
   140003e59:	jb     0x140003e74
   140003e5b:	mov    rcx,QWORD PTR [rbx]
   140003e5e:	mov    WORD PTR [rcx],ax
   140003e61:	mov    rax,rbx
   140003e64:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e69:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e6e:	add    rsp,0x20
   140003e72:	pop    rdi
   140003e73:	ret    
   140003e74:	mov    WORD PTR [rbx],ax
   140003e77:	mov    rcx,rbx
   140003e7a:	mov    rax,rbx
   140003e7d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e82:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e87:	add    rsp,0x20
   140003e8b:	pop    rdi
   140003e8c:	ret    
   140003e8d:	mov    rcx,rbx
   140003e90:	test   rdi,rdi
   140003e93:	je     0x140003ea1
   140003e95:	lea    r8,[rdi+rdi*1]
   140003e99:	mov    rdx,rsi
   140003e9c:	call   0x140018a90
   140003ea1:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ea6:	mov    QWORD PTR [rbx+0x10],rdi
   140003eaa:	jb     0x140003eb1
   140003eac:	mov    rcx,QWORD PTR [rbx]
   140003eaf:	jmp    0x140003eb4
   140003eb1:	mov    rcx,rbx
   140003eb4:	xor    eax,eax
   140003eb6:	mov    WORD PTR [rcx+rdi*2],ax
   140003eba:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ebf:	mov    rax,rbx
   140003ec2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ec7:	add    rsp,0x20
   140003ecb:	pop    rdi
   140003ecc:	ret    
   140003ecd:	lea    rcx,[rip+0x33ddc]        # 0x140037cb0
   140003ed4:	call   0x14001405c
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	rex push rbx
   140003ee2:	sub    rsp,0x20
   140003ee6:	xor    r8d,r8d
   140003ee9:	mov    QWORD PTR [rcx+0x18],0x7
   140003ef1:	mov    rbx,rcx
   140003ef4:	mov    QWORD PTR [rcx+0x10],r8
   140003ef8:	mov    WORD PTR [rcx],r8w
   140003efc:	cmp    WORD PTR [rdx],r8w
   140003f00:	je     0x140003f1b
   140003f02:	or     r8,0xffffffffffffffff
   140003f06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003f10:	inc    r8
   140003f13:	cmp    WORD PTR [rdx+r8*2],0x0
   140003f19:	jne    0x140003f10
   140003f1b:	call   0x140003d90
   140003f20:	mov    rax,rbx
   140003f23:	add    rsp,0x20
   140003f27:	pop    rbx
   140003f28:	ret    
   140003f29:	int3   
   140003f2a:	int3   
   140003f2b:	int3   
   140003f2c:	int3   
   140003f2d:	int3   
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	mov    rax,rsp
   140003f33:	push   rdi
   140003f34:	sub    rsp,0x270
   140003f3b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140003f44:	mov    QWORD PTR [rax+0x10],rbx
   140003f48:	mov    QWORD PTR [rax+0x18],rsi
   140003f4c:	mov    rax,QWORD PTR [rip+0x3d6fd]        # 0x140041650
   140003f53:	xor    rax,rsp
   140003f56:	mov    QWORD PTR [rsp+0x260],rax
   140003f5e:	mov    rdi,rcx
   140003f61:	xor    ebx,ebx
   140003f63:	mov    DWORD PTR [rsp+0x40],ebx
   140003f67:	mov    r8d,0x104
   140003f6d:	lea    rdx,[rsp+0x50]
   140003f72:	xor    ecx,ecx
   140003f74:	call   QWORD PTR [rip+0x2b236]        # 0x14002f1b0
   140003f7a:	mov    QWORD PTR [rsp+0x38],0x7
   140003f83:	mov    QWORD PTR [rsp+0x30],rbx
   140003f88:	mov    WORD PTR [rsp+0x20],bx
   140003f8d:	cmp    WORD PTR [rsp+0x50],bx
   140003f92:	jne    0x140003f99
   140003f94:	mov    r8d,ebx
   140003f97:	jmp    0x140003fac
   140003f99:	lea    rax,[rsp+0x50]
   140003f9e:	or     r8,0xffffffffffffffff
   140003fa2:	inc    r8
   140003fa5:	cmp    WORD PTR [rax+r8*2],bx
   140003faa:	jne    0x140003fa2
   140003fac:	lea    rdx,[rsp+0x50]
   140003fb1:	lea    rcx,[rsp+0x20]
   140003fb6:	call   0x140003d90
   140003fbb:	mov    r9d,0x2
   140003fc1:	lea    rcx,[rsp+0x20]
   140003fc6:	call   0x140007870
   140003fcb:	mov    rsi,rax
   140003fce:	cmp    QWORD PTR [rsp+0x38],0x8
   140003fd4:	jb     0x140003fe0
   140003fd6:	mov    rcx,QWORD PTR [rsp+0x20]
   140003fdb:	call   0x140018a04
   140003fe0:	mov    QWORD PTR [rsp+0x38],0x7
   140003fe9:	mov    QWORD PTR [rsp+0x30],rbx
   140003fee:	mov    WORD PTR [rsp+0x20],bx
   140003ff3:	cmp    WORD PTR [rsp+0x50],bx
   140003ff8:	je     0x14000400d
   140003ffa:	lea    rax,[rsp+0x50]
   140003fff:	or     rbx,0xffffffffffffffff
   140004003:	inc    rbx
   140004006:	cmp    WORD PTR [rax+rbx*2],0x0
   14000400b:	jne    0x140004003
   14000400d:	mov    r8,rbx
   140004010:	lea    rdx,[rsp+0x50]
   140004015:	lea    rcx,[rsp+0x20]
   14000401a:	call   0x140003d90
   14000401f:	nop
   140004020:	mov    r9,rsi
   140004023:	xor    r8d,r8d
   140004026:	mov    rdx,rdi
   140004029:	lea    rcx,[rsp+0x20]
   14000402e:	call   0x140007680
   140004033:	nop
   140004034:	cmp    QWORD PTR [rsp+0x38],0x8
   14000403a:	jb     0x140004046
   14000403c:	mov    rcx,QWORD PTR [rsp+0x20]
   140004041:	call   0x140018a04
   140004046:	mov    rax,rdi
   140004049:	mov    rcx,QWORD PTR [rsp+0x260]
   140004051:	xor    rcx,rsp
   140004054:	call   0x1400187d0
   140004059:	lea    r11,[rsp+0x270]
   140004061:	mov    rbx,QWORD PTR [r11+0x18]
   140004065:	mov    rsi,QWORD PTR [r11+0x20]
   140004069:	mov    rsp,r11
   14000406c:	pop    rdi
   14000406d:	ret    
   14000406e:	int3   
   14000406f:	int3   
   140004070:	rex push rbp
   140004072:	push   rsi
   140004073:	push   rdi
   140004074:	push   r12
   140004076:	push   r13
   140004078:	push   r14
   14000407a:	push   r15
   14000407c:	lea    rbp,[rsp-0x200]
   140004084:	sub    rsp,0x300
   14000408b:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140004094:	mov    QWORD PTR [rsp+0x350],rbx
   14000409c:	mov    rax,QWORD PTR [rip+0x3d5ad]        # 0x140041650
   1400040a3:	xor    rax,rsp
   1400040a6:	mov    QWORD PTR [rbp+0x1f0],rax
   1400040ad:	movzx  ebx,r9b
   1400040b1:	mov    r15,rcx
   1400040b4:	mov    QWORD PTR [rsp+0x60],rcx
   1400040b9:	cmp    QWORD PTR [rdx+0x18],0x8
   1400040be:	jb     0x1400040c3
   1400040c0:	mov    rdx,QWORD PTR [rdx]
   1400040c3:	lea    rax,[rip+0x34d16]        # 0x140038de0
   1400040ca:	mov    QWORD PTR [rcx],rax
   1400040cd:	xor    edi,edi
   1400040cf:	mov    QWORD PTR [rcx+0x8],rdi
   1400040d3:	mov    QWORD PTR [rcx+0x10],rdi
   1400040d7:	mov    r8d,0xc8
   1400040dd:	add    rcx,0x18
   1400040e1:	call   0x14000a580
   1400040e6:	test   bl,bl
   1400040e8:	je     0x1400040f4
   1400040ea:	mov    rcx,QWORD PTR [r15+0x18]
   1400040ee:	call   0x14000a4f0
   1400040f3:	nop
   1400040f4:	lea    rax,[rip+0x34b7d]        # 0x140038c78
   1400040fb:	mov    QWORD PTR [r15],rax
   1400040fe:	mov    rax,QWORD PTR [rbp+0x260]
   140004105:	mov    QWORD PTR [r15+0x20],rax
   140004109:	lea    r12,[r15+0x28]
   14000410d:	mov    QWORD PTR [r12+0x18],0x7
   140004116:	mov    QWORD PTR [r12+0x10],rdi
   14000411b:	mov    WORD PTR [r12],di
   140004120:	mov    rcx,r15
   140004123:	call   0x140009040
   140004128:	mov    rax,QWORD PTR [r15+0x8]
   14000412c:	test   rax,rax
   14000412f:	je     0x140004139
   140004131:	mov    rax,QWORD PTR [rax]
   140004134:	xor    ecx,ecx
   140004136:	call   QWORD PTR [rax+0x40]
   140004139:	lea    rcx,[rbp-0x48]
   14000413d:	call   0x140003f30
   140004142:	nop
   140004143:	lea    r8,[rip+0x33cc6]        # 0x140037e10
   14000414a:	lea    rdx,[rbp-0x48]
   14000414e:	lea    rcx,[rbp-0x68]
   140004152:	call   0x140007ce0
   140004157:	nop
   140004158:	mov    QWORD PTR [rbp-0x70],0xf
   140004160:	mov    QWORD PTR [rbp-0x78],rdi
   140004164:	mov    BYTE PTR [rsp+0x78],0x0
   140004169:	lea    r8,[rsp+0x78]
   14000416e:	lea    rdx,[rbp-0x68]
   140004172:	mov    rcx,r15
   140004175:	call   0x140006a30
   14000417a:	lea    rbx,[rip+0x3e9df]        # 0x140042b60
   140004181:	or     rdi,0xffffffffffffffff
   140004185:	lea    r9,[rip+0x3ea44]        # 0x140042bd0
   14000418c:	mov    r14,QWORD PTR [rbp-0x78]
   140004190:	lea    rdx,[rsp+0x78]
   140004195:	cmp    QWORD PTR [rbp-0x70],0x10
   14000419a:	cmovae rdx,QWORD PTR [rsp+0x78]
   1400041a0:	mov    rsi,QWORD PTR [rbx]
   1400041a3:	cmp    QWORD PTR [rbx+0x8],0x10
   1400041a8:	jb     0x1400041b0
   1400041aa:	mov    rcx,QWORD PTR [rbx-0x10]
   1400041ae:	jmp    0x1400041b4
   1400041b0:	lea    rcx,[rbx-0x10]
   1400041b4:	mov    r8,r14
   1400041b7:	cmp    rsi,r14
   1400041ba:	cmovb  r8,rsi
   1400041be:	test   r8,r8
   1400041c1:	jne    0x1400041c7
   1400041c3:	xor    eax,eax
   1400041c5:	jmp    0x1400041d3
   1400041c7:	call   0x14001e1d0
   1400041cc:	lea    r9,[rip+0x3e9fd]        # 0x140042bd0
   1400041d3:	cdqe   
   1400041d5:	test   rax,rax
   1400041d8:	jne    0x1400041eb
   1400041da:	cmp    rsi,r14
   1400041dd:	jae    0x1400041e3
   1400041df:	mov    eax,edi
   1400041e1:	jmp    0x1400041eb
   1400041e3:	xor    eax,eax
   1400041e5:	cmp    rsi,r14
   1400041e8:	setne  al
   1400041eb:	test   eax,eax
   1400041ed:	je     0x140004217
   1400041ef:	add    rbx,0x20
   1400041f3:	lea    rax,[rbx-0x10]
   1400041f7:	cmp    rax,r9
   1400041fa:	jne    0x140004190
   1400041fc:	lea    r8,[rip+0x33c3d]        # 0x140037e40
   140004203:	mov    edx,0xc8
   140004208:	lea    rcx,[r15+0x18]
   14000420c:	call   0x14000a6d0
   140004211:	call   0x140019018
   140004216:	int3   
   140004217:	mov    edx,0x104
   14000421c:	lea    rcx,[rbp-0x20]
   140004220:	call   QWORD PTR [rip+0x2af82]        # 0x14002f1a8
   140004226:	mov    QWORD PTR [rsp+0x38],0x7
   14000422f:	xor    esi,esi
   140004231:	mov    QWORD PTR [rsp+0x30],rsi
   140004236:	mov    WORD PTR [rsp+0x20],si
   14000423b:	cmp    WORD PTR [rbp-0x20],si
   14000423f:	jne    0x140004245
   140004241:	mov    edi,esi
   140004243:	jmp    0x140004259
   140004245:	lea    rax,[rbp-0x20]
   140004249:	nop    DWORD PTR [rax+0x0]
   140004250:	inc    rdi
   140004253:	cmp    WORD PTR [rax+rdi*2],si
   140004257:	jne    0x140004250
   140004259:	mov    r8,rdi
   14000425c:	lea    rdx,[rbp-0x20]
   140004260:	lea    rcx,[rsp+0x20]
   140004265:	call   0x140003d90
   14000426a:	nop
   14000426b:	lea    rdx,[rsp+0x20]
   140004270:	lea    rcx,[rsp+0x40]
   140004275:	call   0x140007dd0
   14000427a:	mov    rbx,rax
   14000427d:	cmp    r12,rax
   140004280:	je     0x1400042b1
   140004282:	cmp    QWORD PTR [r12+0x18],0x8
   140004288:	jb     0x140004293
   14000428a:	mov    rcx,QWORD PTR [r12]
   14000428e:	call   0x140018a04
   140004293:	mov    QWORD PTR [r12+0x18],0x7
   14000429c:	mov    QWORD PTR [r12+0x10],rsi
   1400042a1:	mov    WORD PTR [r12],si
   1400042a6:	mov    rdx,rbx
   1400042a9:	mov    rcx,r12
   1400042ac:	call   0x140008910
   1400042b1:	cmp    QWORD PTR [rsp+0x58],0x8
   1400042b7:	jb     0x1400042c3
   1400042b9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400042be:	call   0x140018a04
   1400042c3:	mov    QWORD PTR [rsp+0x58],0x7
   1400042cc:	mov    QWORD PTR [rsp+0x50],rsi
   1400042d1:	mov    WORD PTR [rsp+0x40],si
   1400042d6:	cmp    QWORD PTR [rsp+0x38],0x8
   1400042dc:	jb     0x1400042e9
   1400042de:	mov    rcx,QWORD PTR [rsp+0x20]
   1400042e3:	call   0x140018a04
   1400042e8:	nop
   1400042e9:	cmp    QWORD PTR [rbp-0x70],0x10
   1400042ee:	jb     0x1400042fa
   1400042f0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400042f5:	call   0x140018a04
   1400042fa:	mov    QWORD PTR [rbp-0x70],0xf
   140004302:	mov    QWORD PTR [rbp-0x78],rsi
   140004306:	mov    BYTE PTR [rsp+0x78],0x0
   14000430b:	cmp    QWORD PTR [rbp-0x50],0x8
   140004310:	jb     0x14000431b
   140004312:	mov    rcx,QWORD PTR [rbp-0x68]
   140004316:	call   0x140018a04
   14000431b:	mov    QWORD PTR [rbp-0x50],0x7
   140004323:	mov    QWORD PTR [rbp-0x58],rsi
   140004327:	mov    WORD PTR [rbp-0x68],si
   14000432b:	cmp    QWORD PTR [rbp-0x30],0x8
   140004330:	jb     0x14000433c
   140004332:	mov    rcx,QWORD PTR [rbp-0x48]
   140004336:	call   0x140018a04
   14000433b:	nop
   14000433c:	mov    rax,r15
   14000433f:	mov    rcx,QWORD PTR [rbp+0x1f0]
   140004346:	xor    rcx,rsp
   140004349:	call   0x1400187d0
   14000434e:	mov    rbx,QWORD PTR [rsp+0x350]
   140004356:	add    rsp,0x300
   14000435d:	pop    r15
   14000435f:	pop    r14
   140004361:	pop    r13
   140004363:	pop    r12
   140004365:	pop    rdi
   140004366:	pop    rsi
   140004367:	pop    rbp
   140004368:	ret    
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    QWORD PTR [rsp+0x8],rbx
   140004375:	push   rdi
   140004376:	sub    rsp,0x20
   14000437a:	mov    ebx,edx
   14000437c:	mov    rdi,rcx
   14000437f:	call   0x1400043a0
   140004384:	test   bl,0x1
   140004387:	je     0x140004391
   140004389:	mov    rcx,rdi
   14000438c:	call   0x140018a04
   140004391:	mov    rax,rdi
   140004394:	mov    rbx,QWORD PTR [rsp+0x30]
   140004399:	add    rsp,0x20
   14000439d:	pop    rdi
   14000439e:	ret    
   14000439f:	int3   
   1400043a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400043aa:	push   rdi
   1400043ab:	sub    rsp,0x20
   1400043af:	mov    rdi,QWORD PTR [rcx+0x18]
   1400043b3:	lea    rax,[rip+0x348be]        # 0x140038c78
   1400043ba:	mov    rbx,rcx
   1400043bd:	mov    QWORD PTR [rcx],rax
   1400043c0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400043c4:	xor    esi,esi
   1400043c6:	lea    rax,[rcx-0x1]
   1400043ca:	cmp    rax,0xfffffffffffffffd
   1400043ce:	ja     0x1400043da
   1400043d0:	call   QWORD PTR [rip+0x2adaa]        # 0x14002f180
   1400043d6:	mov    QWORD PTR [rdi+0x8],rsi
   1400043da:	mov    rcx,QWORD PTR [rdi+0x10]
   1400043de:	test   rcx,rcx
   1400043e1:	je     0x1400043ed
   1400043e3:	call   QWORD PTR [rip+0x2ad97]        # 0x14002f180
   1400043e9:	mov    QWORD PTR [rdi+0x10],rsi
   1400043ed:	cmp    QWORD PTR [rbx+0x40],0x8
   1400043f2:	jb     0x1400043fd
   1400043f4:	mov    rcx,QWORD PTR [rbx+0x28]
   1400043f8:	call   0x140018a04
   1400043fd:	mov    QWORD PTR [rbx+0x40],0x7
   140004405:	mov    QWORD PTR [rbx+0x38],rsi
   140004409:	mov    rcx,rbx
   14000440c:	mov    WORD PTR [rbx+0x28],si
   140004410:	mov    rbx,QWORD PTR [rsp+0x30]
   140004415:	mov    rsi,QWORD PTR [rsp+0x38]
   14000441a:	add    rsp,0x20
   14000441e:	pop    rdi
   14000441f:	jmp    0x140008fc0
   140004424:	int3   
   140004425:	int3   
   140004426:	int3   
   140004427:	int3   
   140004428:	int3   
   140004429:	int3   
   14000442a:	int3   
   14000442b:	int3   
   14000442c:	int3   
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	rex push rbp
   140004432:	push   rsi
   140004433:	push   rdi
   140004434:	push   r12
   140004436:	push   r13
   140004438:	push   r14
   14000443a:	push   r15
   14000443c:	lea    rbp,[rsp-0x1b0]
   140004444:	sub    rsp,0x2b0
   14000444b:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140004454:	mov    QWORD PTR [rsp+0x308],rbx
   14000445c:	mov    rax,QWORD PTR [rip+0x3d1ed]        # 0x140041650
   140004463:	xor    rax,rsp
   140004466:	mov    QWORD PTR [rbp+0x1a0],rax
   14000446d:	mov    r14,r8
   140004470:	mov    r15,rdx
   140004473:	mov    rbx,rcx
   140004476:	xor    r13d,r13d
   140004479:	mov    DWORD PTR [rsp+0x68],r13d
   14000447e:	cmp    QWORD PTR [rdx+0x18],0x8
   140004483:	jb     0x14000448a
   140004485:	mov    rcx,QWORD PTR [rdx]
   140004488:	jmp    0x14000448d
   14000448a:	mov    rcx,rdx
   14000448d:	mov    rax,QWORD PTR [rbx+0x20]
   140004491:	mov    r10,QWORD PTR [rax+0x18]
   140004495:	test   r10,r10
   140004498:	jne    0x1400044a3
   14000449a:	xor    dil,dil
   14000449d:	mov    esi,DWORD PTR [rsp+0x68]
   1400044a1:	jmp    0x1400044c4
   1400044a3:	lea    rax,[rsp+0x68]
   1400044a8:	mov    QWORD PTR [rsp+0x20],rax
   1400044ad:	mov    r9d,0x100
   1400044b3:	lea    r8,[rbp-0x60]
   1400044b7:	lea    rdx,[rsp+0x70]
   1400044bc:	call   r10
   1400044bf:	mov    esi,eax
   1400044c1:	mov    dil,0x1
   1400044c4:	mov    QWORD PTR [rsp+0x58],0xf
   1400044cd:	mov    QWORD PTR [rsp+0x50],r13
   1400044d2:	mov    BYTE PTR [rsp+0x40],r13b
   1400044d7:	mov    r8d,0x31
   1400044dd:	lea    rdx,[rip+0x339cc]        # 0x140037eb0
   1400044e4:	lea    rcx,[rsp+0x40]
   1400044e9:	call   0x140008e50
   1400044ee:	nop
   1400044ef:	lea    r9,[rsp+0x40]
   1400044f4:	mov    r8d,esi
   1400044f7:	movzx  edx,dil
   1400044fb:	mov    rcx,rbx
   1400044fe:	call   0x1400059c0
   140004503:	mov    edi,eax
   140004505:	cmp    QWORD PTR [rsp+0x58],0x10
   14000450b:	jb     0x140004517
   14000450d:	mov    rcx,QWORD PTR [rsp+0x40]
   140004512:	call   0x140018a04
   140004517:	cmp    edi,0x1
   14000451a:	je     0x140004523
   14000451c:	mov    eax,edi
   14000451e:	jmp    0x1400047b7
   140004523:	mov    r12,r13
   140004526:	mov    rax,QWORD PTR [rbx+0x20]
   14000452a:	mov    r8,QWORD PTR [rax+0x20]
   14000452e:	test   r8,r8
   140004531:	jne    0x140004538
   140004533:	xor    dil,dil
   140004536:	jmp    0x140004548
   140004538:	xor    edx,edx
   14000453a:	lea    rcx,[rsp+0x70]
   14000453f:	call   r8
   140004542:	mov    r12,rax
   140004545:	mov    dil,0x1
   140004548:	mov    QWORD PTR [rsp+0x58],0xf
   140004551:	mov    QWORD PTR [rsp+0x50],r13
   140004556:	mov    BYTE PTR [rsp+0x40],0x0
   14000455b:	mov    r8d,0x3a
   140004561:	lea    rdx,[rip+0x33980]        # 0x140037ee8
   140004568:	lea    rcx,[rsp+0x40]
   14000456d:	call   0x140008e50
   140004572:	nop
   140004573:	mov    r8d,r13d
   140004576:	test   r12,r12
   140004579:	setne  r8b
   14000457d:	lea    r9,[rsp+0x40]
   140004582:	movzx  edx,dil
   140004586:	mov    rcx,rbx
   140004589:	call   0x1400059c0
   14000458e:	mov    edi,eax
   140004590:	cmp    QWORD PTR [rsp+0x58],0x10
   140004596:	jb     0x1400045a2
   140004598:	mov    rcx,QWORD PTR [rsp+0x40]
   14000459d:	call   0x140018a04
   1400045a2:	cmp    edi,0x1
   1400045a5:	jne    0x14000451c
   1400045ab:	mov    DWORD PTR [rbp-0x80],0x20
   1400045b2:	mov    rax,QWORD PTR [rbx+0x20]
   1400045b6:	mov    r10,QWORD PTR [rax+0x28]
   1400045ba:	test   r10,r10
   1400045bd:	jne    0x1400045c4
   1400045bf:	xor    dil,dil
   1400045c2:	jmp    0x1400045f1
   1400045c4:	lea    rax,[rbp-0x80]
   1400045c8:	mov    QWORD PTR [rsp+0x30],rax
   1400045cd:	mov    DWORD PTR [rsp+0x28],0x1
   1400045d5:	mov    QWORD PTR [rsp+0x20],r13
   1400045da:	xor    r9d,r9d
   1400045dd:	lea    r8,[rsp+0x70]
   1400045e2:	lea    rdx,[rbp-0x60]
   1400045e6:	mov    rcx,r12
   1400045e9:	call   r10
   1400045ec:	mov    esi,eax
   1400045ee:	mov    dil,0x1
   1400045f1:	mov    QWORD PTR [rsp+0x58],0xf
   1400045fa:	mov    QWORD PTR [rsp+0x50],r13
   1400045ff:	mov    BYTE PTR [rsp+0x40],0x0
   140004604:	mov    r8d,0x36
   14000460a:	lea    rdx,[rip+0x33917]        # 0x140037f28
   140004611:	lea    rcx,[rsp+0x40]
   140004616:	call   0x140008e50
   14000461b:	nop
   14000461c:	lea    r9,[rsp+0x40]
   140004621:	mov    r8d,esi
   140004624:	movzx  edx,dil
   140004628:	mov    rcx,rbx
   14000462b:	call   0x1400059c0
   140004630:	mov    edi,eax
   140004632:	cmp    QWORD PTR [rsp+0x58],0x10
   140004638:	jb     0x140004644
   14000463a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000463f:	call   0x140018a04
   140004644:	cmp    edi,0x1
   140004647:	jne    0x14000451c
   14000464d:	mov    rcx,QWORD PTR [r14+0x10]
   140004651:	cmp    QWORD PTR [r14+0x18],0x8
   140004656:	jb     0x14000465d
   140004658:	mov    r9,QWORD PTR [r14]
   14000465b:	jmp    0x140004660
   14000465d:	mov    r9,r14
   140004660:	mov    rax,QWORD PTR [rbx+0x20]
   140004664:	mov    r10,QWORD PTR [rax+0x30]
   140004668:	test   r10,r10
   14000466b:	jne    0x140004672
   14000466d:	xor    dil,dil
   140004670:	jmp    0x14000468e
   140004672:	lea    eax,[rcx+rcx*1]
   140004675:	mov    DWORD PTR [rsp+0x20],eax
   140004679:	mov    r8d,0x1
   14000467f:	lea    rdx,[rbp-0x80]
   140004683:	mov    rcx,r12
   140004686:	call   r10
   140004689:	mov    esi,eax
   14000468b:	mov    dil,0x1
   14000468e:	mov    QWORD PTR [rsp+0x58],0xf
   140004697:	mov    QWORD PTR [rsp+0x50],r13
   14000469c:	mov    BYTE PTR [rsp+0x40],0x0
   1400046a1:	mov    r8d,0x3f
   1400046a7:	lea    rdx,[rip+0x338b2]        # 0x140037f60
   1400046ae:	lea    rcx,[rsp+0x40]
   1400046b3:	call   0x140008e50
   1400046b8:	nop
   1400046b9:	lea    r9,[rsp+0x40]
   1400046be:	mov    r8d,esi
   1400046c1:	movzx  edx,dil
   1400046c5:	mov    rcx,rbx
   1400046c8:	call   0x1400059c0
   1400046cd:	mov    edi,eax
   1400046cf:	cmp    QWORD PTR [rsp+0x58],0x10
   1400046d5:	jb     0x1400046e1
   1400046d7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400046dc:	call   0x140018a04
   1400046e1:	cmp    edi,0x1
   1400046e4:	jne    0x14000451c
   1400046ea:	mov    rax,QWORD PTR [rbx+0x20]
   1400046ee:	mov    r9,QWORD PTR [rax+0x38]
   1400046f2:	test   r9,r9
   1400046f5:	jne    0x1400046fc
   1400046f7:	xor    dil,dil
   1400046fa:	jmp    0x140004710
   1400046fc:	lea    r8,[rbp-0x80]
   140004700:	mov    rdx,r12
   140004703:	mov    ecx,0x19
   140004708:	call   r9
   14000470b:	mov    esi,eax
   14000470d:	mov    dil,0x1
   140004710:	mov    QWORD PTR [rsp+0x58],0xf
   140004719:	mov    QWORD PTR [rsp+0x50],r13
   14000471e:	mov    BYTE PTR [rsp+0x40],0x0
   140004723:	mov    r8d,0x38
   140004729:	lea    rdx,[rip+0x33870]        # 0x140037fa0
   140004730:	lea    rcx,[rsp+0x40]
   140004735:	call   0x140008e50
   14000473a:	nop
   14000473b:	lea    r9,[rsp+0x40]
   140004740:	mov    r8d,esi
   140004743:	movzx  edx,dil
   140004747:	mov    rcx,rbx
   14000474a:	call   0x1400059c0
   14000474f:	mov    edi,eax
   140004751:	cmp    QWORD PTR [rsp+0x58],0x10
   140004757:	jb     0x140004763
   140004759:	mov    rcx,QWORD PTR [rsp+0x40]
   14000475e:	call   0x140018a04
   140004763:	cmp    edi,0x1
   140004766:	jne    0x14000451c
   14000476c:	mov    r8,r14
   14000476f:	mov    rdx,r15
   140004772:	mov    rcx,rbx
   140004775:	call   0x1400047f0
   14000477a:	cmp    eax,edi
   14000477c:	jne    0x1400047b7
   14000477e:	lea    rcx,[rbx+0x18]
   140004782:	lea    r8,[rip+0x33857]        # 0x140037fe0
   140004789:	mov    edx,0xc8
   14000478e:	call   0x14000a6d0
   140004793:	mov    rcx,QWORD PTR [rbx+0x8]
   140004797:	test   rcx,rcx
   14000479a:	je     0x1400047b2
   14000479c:	mov    rcx,QWORD PTR [rcx]
   14000479f:	call   QWORD PTR [rcx+0x48]
   1400047a2:	test   eax,eax
   1400047a4:	jne    0x1400047b2
   1400047a6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400047aa:	mov    rdx,QWORD PTR [rcx]
   1400047ad:	mov    ecx,edi
   1400047af:	call   QWORD PTR [rdx+0x40]
   1400047b2:	mov    eax,0x1
   1400047b7:	mov    rcx,QWORD PTR [rbp+0x1a0]
   1400047be:	xor    rcx,rsp
   1400047c1:	call   0x1400187d0
   1400047c6:	mov    rbx,QWORD PTR [rsp+0x308]
   1400047ce:	add    rsp,0x2b0
   1400047d5:	pop    r15
   1400047d7:	pop    r14
   1400047d9:	pop    r13
   1400047db:	pop    r12
   1400047dd:	pop    rdi
   1400047de:	pop    rsi
   1400047df:	pop    rbp
   1400047e0:	ret    
   1400047e1:	int3   
   1400047e2:	int3   
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	rex push rdi
   1400047f2:	sub    rsp,0x60
   1400047f6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400047ff:	mov    QWORD PTR [rsp+0x78],rbx
   140004804:	mov    QWORD PTR [rsp+0x80],rsi
   14000480c:	mov    r10,r8
   14000480f:	mov    rdi,rcx
   140004812:	cmp    QWORD PTR [rdx+0x18],0x8
   140004817:	jb     0x14000481c
   140004819:	mov    rdx,QWORD PTR [rdx]
   14000481c:	cmp    QWORD PTR [r8+0x18],0x8
   140004821:	jb     0x140004826
   140004823:	mov    r10,QWORD PTR [r8]
   140004826:	mov    rax,QWORD PTR [rcx+0x20]
   14000482a:	mov    r11,QWORD PTR [rax+0x68]
   14000482e:	test   r11,r11
   140004831:	jne    0x14000483b
   140004833:	xor    bl,bl
   140004835:	mov    esi,DWORD PTR [rsp+0x70]
   140004839:	jmp    0x140004859
   14000483b:	mov    QWORD PTR [rsp+0x20],0x0
   140004844:	mov    r9d,0x1
   14000484a:	mov    r8,rdx
   14000484d:	mov    rdx,r10
   140004850:	xor    ecx,ecx
   140004852:	call   r11
   140004855:	mov    esi,eax
   140004857:	mov    bl,0x1
   140004859:	mov    QWORD PTR [rsp+0x50],0xf
   140004862:	mov    QWORD PTR [rsp+0x48],0x0
   14000486b:	mov    BYTE PTR [rsp+0x38],0x0
   140004870:	mov    r8d,0x3f
   140004876:	lea    rdx,[rip+0x33793]        # 0x140038010
   14000487d:	lea    rcx,[rsp+0x38]
   140004882:	call   0x140008e50
   140004887:	nop
   140004888:	lea    r9,[rsp+0x38]
   14000488d:	mov    r8d,esi
   140004890:	movzx  edx,bl
   140004893:	mov    rcx,rdi
   140004896:	call   0x1400059c0
   14000489b:	mov    ebx,eax
   14000489d:	cmp    QWORD PTR [rsp+0x50],0x10
   1400048a3:	jb     0x1400048af
   1400048a5:	mov    rcx,QWORD PTR [rsp+0x38]
   1400048aa:	call   0x140018a04
   1400048af:	cmp    ebx,0x1
   1400048b2:	jne    0x1400048e8
   1400048b4:	lea    rcx,[rdi+0x18]
   1400048b8:	lea    r8,[rip+0x33791]        # 0x140038050
   1400048bf:	mov    edx,0xc8
   1400048c4:	call   0x14000a6d0
   1400048c9:	mov    rax,QWORD PTR [rdi+0x8]
   1400048cd:	test   rax,rax
   1400048d0:	je     0x1400048e8
   1400048d2:	mov    rax,QWORD PTR [rax]
   1400048d5:	call   QWORD PTR [rax+0x48]
   1400048d8:	test   eax,eax
   1400048da:	jne    0x1400048e8
   1400048dc:	mov    rax,QWORD PTR [rdi+0x8]
   1400048e0:	mov    rdx,QWORD PTR [rax]
   1400048e3:	mov    ecx,ebx
   1400048e5:	call   QWORD PTR [rdx+0x40]
   1400048e8:	mov    eax,ebx
   1400048ea:	mov    rbx,QWORD PTR [rsp+0x78]
   1400048ef:	mov    rsi,QWORD PTR [rsp+0x80]
   1400048f7:	add    rsp,0x60
   1400048fb:	pop    rdi
   1400048fc:	ret    
   1400048fd:	int3   
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	jmp    0x140004910
   140004905:	int3   
   140004906:	int3   
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	rex push rbp
   140004912:	push   rsi
   140004913:	push   rdi
   140004914:	push   r12
   140004916:	push   r13
   140004918:	push   r14
   14000491a:	push   r15
   14000491c:	lea    rbp,[rsp-0x630]
   140004924:	sub    rsp,0x730
   14000492b:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140004934:	mov    QWORD PTR [rsp+0x780],rbx
   14000493c:	mov    rax,QWORD PTR [rip+0x3cd0d]        # 0x140041650
   140004943:	xor    rax,rsp
   140004946:	mov    QWORD PTR [rbp+0x620],rax
   14000494d:	mov    rdi,rdx
   140004950:	mov    r15,rcx
   140004953:	mov    QWORD PTR [rsp+0x58],rcx
   140004958:	xor    esi,esi
   14000495a:	mov    r12d,esi
   14000495d:	mov    DWORD PTR [rsp+0x4c],esi
   140004961:	mov    r13d,esi
   140004964:	mov    DWORD PTR [rsp+0x44],esi
   140004968:	mov    eax,0x7
   14000496d:	mov    QWORD PTR [rbp+0x210],rax
   140004974:	mov    QWORD PTR [rbp+0x208],rsi
   14000497b:	mov    WORD PTR [rbp+0x1f8],si
   140004982:	mov    rdx,QWORD PTR [rdx+0x10]
   140004986:	test   rdx,rdx
   140004989:	jne    0x14000499c
   14000498b:	mov    QWORD PTR [rbp+0x208],rdx
   140004992:	mov    WORD PTR [rbp+rdx*2+0x1f8],si
   14000499a:	jmp    0x1400049ab
   14000499c:	xor    r8d,r8d
   14000499f:	lea    rcx,[rbp+0x1f8]
   1400049a6:	call   0x140007a30
   1400049ab:	lea    rbx,[rbp+0x1f8]
   1400049b2:	cmp    QWORD PTR [rbp+0x210],0x8
   1400049ba:	cmovae rbx,QWORD PTR [rbp+0x1f8]
   1400049c2:	mov    rdx,QWORD PTR [rdi+0x18]
   1400049c6:	cmp    rdx,0x8
   1400049ca:	jb     0x1400049d1
   1400049cc:	mov    rcx,QWORD PTR [rdi]
   1400049cf:	jmp    0x1400049d4
   1400049d1:	mov    rcx,rdi
   1400049d4:	mov    rax,QWORD PTR [rdi+0x10]
   1400049d8:	lea    rax,[rcx+rax*2]
   1400049dc:	cmp    rdx,0x8
   1400049e0:	jb     0x1400049e5
   1400049e2:	mov    rdi,QWORD PTR [rdi]
   1400049e5:	cmp    rdi,rax
   1400049e8:	je     0x140004a2a
   1400049ea:	mov    r14,rax
   1400049ed:	sub    r14,rdi
   1400049f0:	inc    r14
   1400049f3:	shr    r14,1
   1400049f6:	cmp    rdi,rax
   1400049f9:	mov    eax,0x0
   1400049fe:	cmova  r14,rax
   140004a02:	test   r14,r14
   140004a05:	je     0x140004a28
   140004a07:	sub    rdi,rbx
   140004a0a:	nop    WORD PTR [rax+rax*1+0x0]
   140004a10:	movzx  ecx,WORD PTR [rdi+rbx*1]
   140004a14:	call   0x1400191cc
   140004a19:	mov    WORD PTR [rbx],ax
   140004a1c:	lea    rbx,[rbx+0x2]
   140004a20:	inc    rsi
   140004a23:	cmp    rsi,r14
   140004a26:	jne    0x140004a10
   140004a28:	xor    esi,esi
   140004a2a:	mov    QWORD PTR [rsp+0x30],rsi
   140004a2f:	mov    QWORD PTR [rsp+0x28],rsi
   140004a34:	mov    QWORD PTR [rsp+0x20],rsi
   140004a39:	mov    r9d,0x4
   140004a3f:	xor    r8d,r8d
   140004a42:	xor    edx,edx
   140004a44:	xor    ecx,ecx
   140004a46:	call   QWORD PTR [rip+0x2a97c]        # 0x14002f3c8
   140004a4c:	mov    r14,rax
   140004a4f:	mov    QWORD PTR [rsp+0x60],rax
   140004a54:	lea    rcx,[rax-0x1]
   140004a58:	cmp    rcx,0xfffffffffffffffd
   140004a5c:	ja     0x1400054c9
   140004a62:	mov    DWORD PTR [rbp+0x260],0x20
   140004a6c:	mov    DWORD PTR [rsp+0x48],esi
   140004a70:	lea    r8,[rbp+0x260]
   140004a77:	xor    edx,edx
   140004a79:	mov    rcx,rax
   140004a7c:	call   QWORD PTR [rip+0x2a93e]        # 0x14002f3c0
   140004a82:	mov    ebx,0x1
   140004a87:	test   eax,eax
   140004a89:	je     0x14000538d
   140004a8f:	nop
   140004a90:	mov    DWORD PTR [rbp-0x80],0x230
   140004a97:	lea    rdx,[rbp-0x80]
   140004a9b:	mov    rcx,r14
   140004a9e:	call   QWORD PTR [rip+0x2a914]        # 0x14002f3b8
   140004aa4:	test   eax,eax
   140004aa6:	jne    0x140004acb
   140004aa8:	call   QWORD PTR [rip+0x2a6f2]        # 0x14002f1a0
   140004aae:	mov    r9d,eax
   140004ab1:	lea    rcx,[r15+0x18]
   140004ab5:	lea    r8,[rip+0x33624]        # 0x1400380e0
   140004abc:	mov    edx,0xc8
   140004ac1:	call   0x14000a6d0
   140004ac6:	jmp    0x140005363
   140004acb:	mov    rax,QWORD PTR [rbp-0x68]
   140004acf:	mov    QWORD PTR [rsp+0x20],rax
   140004ad4:	xor    r9d,r9d
   140004ad7:	mov    r8d,0xc8
   140004add:	lea    rdx,[rbp+0x290]
   140004ae4:	mov    ecx,DWORD PTR [rbp+0x274]
   140004aea:	call   QWORD PTR [rip+0x2a8c0]        # 0x14002f3b0
   140004af0:	test   eax,eax
   140004af2:	je     0x140004b11
   140004af4:	lea    rcx,[r15+0x18]
   140004af8:	mov    r9d,eax
   140004afb:	lea    r8,[rip+0x3363e]        # 0x140038140
   140004b02:	mov    edx,0xc8
   140004b07:	call   0x14000a6d0
   140004b0c:	jmp    0x140005363
   140004b11:	xor    bl,bl
   140004b13:	mov    BYTE PTR [rsp+0x40],bl
   140004b17:	xor    r13d,r13d
   140004b1a:	mov    r12d,r13d
   140004b1d:	mov    DWORD PTR [rsp+0x50],r13d
   140004b22:	test   bl,bl
   140004b24:	jne    0x14000521c
   140004b2a:	mov    esi,r13d
   140004b2d:	test   r12d,r12d
   140004b30:	setne  sil
   140004b34:	inc    esi
   140004b36:	lea    rax,[rsp+0x78]
   140004b3b:	mov    QWORD PTR [rsp+0x30],rax
   140004b40:	mov    DWORD PTR [rsp+0x28],r13d
   140004b45:	mov    QWORD PTR [rsp+0x20],r13
   140004b4a:	lea    r9,[rbp+0x218]
   140004b51:	mov    r8d,esi
   140004b54:	lea    rdx,[rbp+0x260]
   140004b5b:	mov    rcx,r14
   140004b5e:	call   QWORD PTR [rip+0x2a844]        # 0x14002f3a8
   140004b64:	test   eax,eax
   140004b66:	jne    0x140004c8c
   140004b6c:	call   QWORD PTR [rip+0x2a62e]        # 0x14002f1a0
   140004b72:	cmp    eax,0x7a
   140004b75:	je     0x140004c8c
   140004b7b:	call   QWORD PTR [rip+0x2a61f]        # 0x14002f1a0
   140004b81:	cmp    eax,0xd
   140004b84:	je     0x140005202
   140004b8a:	mov    eax,0x7
   140004b8f:	mov    QWORD PTR [rbp+0x1c8],rax
   140004b96:	mov    QWORD PTR [rbp+0x1c0],r13
   140004b9d:	mov    WORD PTR [rbp+0x1b0],r13w
   140004ba5:	cmp    WORD PTR [rbp+0x290],0x0
   140004bad:	jne    0x140004bb4
   140004baf:	mov    r8,r13
   140004bb2:	jmp    0x140004bcb
   140004bb4:	lea    rax,[rbp+0x290]
   140004bbb:	or     r8,0xffffffffffffffff
   140004bbf:	nop
   140004bc0:	inc    r8
   140004bc3:	cmp    WORD PTR [rax+r8*2],0x0
   140004bc9:	jne    0x140004bc0
   140004bcb:	lea    rdx,[rbp+0x290]
   140004bd2:	lea    rcx,[rbp+0x1b0]
   140004bd9:	call   0x140003d90
   140004bde:	nop
   140004bdf:	mov    rbx,QWORD PTR [rbp+0x1c0]
   140004be6:	inc    rbx
   140004be9:	mov    rcx,rbx
   140004bec:	call   0x1400140cc
   140004bf1:	mov    rdi,rax
   140004bf4:	mov    r8,rbx
   140004bf7:	xor    edx,edx
   140004bf9:	mov    rcx,rax
   140004bfc:	call   0x14001b980
   140004c01:	mov    QWORD PTR [rbp+0x258],r13
   140004c08:	lea    r9,[rbp+0x1b0]
   140004c0f:	cmp    QWORD PTR [rbp+0x1c8],0x8
   140004c17:	cmovae r9,QWORD PTR [rbp+0x1b0]
   140004c1f:	mov    rcx,QWORD PTR [rbp+0x1c0]
   140004c26:	mov    QWORD PTR [rsp+0x20],rcx
   140004c2b:	mov    r8,rbx
   140004c2e:	mov    rdx,rdi
   140004c31:	lea    rcx,[rbp+0x258]
   140004c38:	call   0x1400195f0
   140004c3d:	call   QWORD PTR [rip+0x2a55d]        # 0x14002f1a0
   140004c43:	mov    r9d,eax
   140004c46:	lea    rcx,[r15+0x18]
   140004c4a:	mov    QWORD PTR [rsp+0x28],rdi
   140004c4f:	mov    DWORD PTR [rsp+0x20],esi
   140004c53:	lea    r8,[rip+0x33536]        # 0x140038190
   140004c5a:	mov    edx,0xc8
   140004c5f:	call   0x14000a6d0
   140004c64:	mov    rcx,rdi
   140004c67:	call   0x140019610
   140004c6c:	nop
   140004c6d:	cmp    QWORD PTR [rbp+0x1c8],0x8
   140004c75:	jb     0x1400051fd
   140004c7b:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140004c82:	call   0x140018a04
   140004c87:	jmp    0x1400051fd
   140004c8c:	mov    r9d,DWORD PTR [rbp+0x218]
   140004c93:	cmp    r9d,0x7
   140004c97:	je     0x140004cb3
   140004c99:	lea    rcx,[r15+0x18]
   140004c9d:	lea    r8,[rip+0x3356c]        # 0x140038210
   140004ca4:	mov    edx,0xc8
   140004ca9:	call   0x14000a6d0
   140004cae:	jmp    0x140005202
   140004cb3:	mov    ecx,DWORD PTR [rsp+0x78]
   140004cb7:	call   0x1400140cc
   140004cbc:	mov    rbx,rax
   140004cbf:	mov    QWORD PTR [rsp+0x30],r13
   140004cc4:	mov    ecx,DWORD PTR [rsp+0x78]
   140004cc8:	mov    DWORD PTR [rsp+0x28],ecx
   140004ccc:	mov    QWORD PTR [rsp+0x20],rax
   140004cd1:	lea    r9,[rbp+0x218]
   140004cd8:	mov    r8d,esi
   140004cdb:	lea    rdx,[rbp+0x260]
   140004ce2:	mov    rcx,r14
   140004ce5:	call   QWORD PTR [rip+0x2a6bd]        # 0x14002f3a8
   140004ceb:	test   eax,eax
   140004ced:	jne    0x140004d1e
   140004cef:	call   QWORD PTR [rip+0x2a4ab]        # 0x14002f1a0
   140004cf5:	mov    r9d,eax
   140004cf8:	lea    rcx,[r15+0x18]
   140004cfc:	mov    DWORD PTR [rsp+0x20],esi
   140004d00:	lea    r8,[rip+0x33559]        # 0x140038260
   140004d07:	mov    edx,0xc8
   140004d0c:	call   0x14000a6d0
   140004d11:	mov    rcx,rbx
   140004d14:	call   0x140019610
   140004d19:	jmp    0x1400051fd
   140004d1e:	mov    r8d,DWORD PTR [rsp+0x78]
   140004d23:	shr    r8,1
   140004d26:	mov    r12d,0x7
   140004d2c:	mov    QWORD PTR [rbp+0x238],r12
   140004d33:	mov    QWORD PTR [rbp+0x230],r13
   140004d3a:	mov    WORD PTR [rbp+0x220],r13w
   140004d42:	mov    rdx,rbx
   140004d45:	lea    rcx,[rbp+0x220]
   140004d4c:	call   0x140003d90
   140004d51:	nop
   140004d52:	mov    rcx,rbx
   140004d55:	call   0x140019610
   140004d5a:	mov    rbx,r13
   140004d5d:	mov    rdi,QWORD PTR [rbp+0x230]
   140004d64:	xor    edx,edx
   140004d66:	mov    r8,rbx
   140004d69:	lea    rcx,[rbp+0x220]
   140004d70:	call   0x140007580
   140004d75:	mov    r15,rax
   140004d78:	cmp    rax,0xffffffffffffffff
   140004d7c:	cmove  r15,rdi
   140004d80:	mov    QWORD PTR [rsp+0x68],r15
   140004d85:	cmp    r15,rbx
   140004d88:	jbe    0x14000502f
   140004d8e:	mov    QWORD PTR [rbp+0x1c8],r12
   140004d95:	mov    QWORD PTR [rbp+0x1c0],r13
   140004d9c:	mov    WORD PTR [rbp+0x1b0],r13w
   140004da4:	mov    r9,r15
   140004da7:	sub    r9,rbx
   140004daa:	mov    r8,rbx
   140004dad:	lea    rdx,[rbp+0x220]
   140004db4:	lea    rcx,[rbp+0x1b0]
   140004dbb:	call   0x140003a40
   140004dc0:	nop
   140004dc1:	mov    QWORD PTR [rbp+0x1f0],r12
   140004dc8:	mov    QWORD PTR [rbp+0x1e8],r13
   140004dcf:	mov    WORD PTR [rbp+0x1d8],r13w
   140004dd7:	mov    rdx,QWORD PTR [rbp+0x1c0]
   140004dde:	test   rdx,rdx
   140004de1:	jne    0x140004df5
   140004de3:	mov    QWORD PTR [rbp+0x1e8],rdx
   140004dea:	mov    WORD PTR [rbp+rdx*2+0x1d8],r13w
   140004df3:	jmp    0x140004e04
   140004df5:	xor    r8d,r8d
   140004df8:	lea    rcx,[rbp+0x1d8]
   140004dff:	call   0x140007a30
   140004e04:	lea    rbx,[rbp+0x1d8]
   140004e0b:	mov    rdi,QWORD PTR [rbp+0x1f0]
   140004e12:	cmp    rdi,0x8
   140004e16:	mov    r14,QWORD PTR [rbp+0x1d8]
   140004e1d:	cmovae rbx,r14
   140004e21:	lea    rcx,[rbp+0x1b0]
   140004e28:	cmp    QWORD PTR [rbp+0x1c8],0x8
   140004e30:	cmovae rcx,QWORD PTR [rbp+0x1b0]
   140004e38:	mov    rax,QWORD PTR [rbp+0x1c0]
   140004e3f:	lea    rax,[rcx+rax*2]
   140004e43:	lea    rsi,[rbp+0x1b0]
   140004e4a:	cmovae rsi,QWORD PTR [rbp+0x1b0]
   140004e52:	cmp    rsi,rax
   140004e55:	je     0x140004e9b
   140004e57:	mov    rdi,r13
   140004e5a:	mov    r14,rax
   140004e5d:	sub    r14,rsi
   140004e60:	inc    r14
   140004e63:	shr    r14,1
   140004e66:	cmp    rsi,rax
   140004e69:	cmova  r14,r13
   140004e6d:	test   r14,r14
   140004e70:	je     0x140004e8d
   140004e72:	sub    rsi,rbx
   140004e75:	movzx  ecx,WORD PTR [rsi+rbx*1]
   140004e79:	call   0x1400191cc
   140004e7e:	mov    WORD PTR [rbx],ax
   140004e81:	add    rbx,0x2
   140004e85:	inc    rdi
   140004e88:	cmp    rdi,r14
   140004e8b:	jne    0x140004e75
   140004e8d:	mov    r14,QWORD PTR [rbp+0x1d8]
   140004e94:	mov    rdi,QWORD PTR [rbp+0x1f0]
   140004e9b:	mov    edx,0x2a
   140004ea0:	xor    r8d,r8d
   140004ea3:	lea    rcx,[rbp+0x1f8]
   140004eaa:	call   0x140007580
   140004eaf:	cmp    rax,0xffffffffffffffff
   140004eb3:	jne    0x140004ef1
   140004eb5:	lea    rdx,[rbp+0x1f8]
   140004ebc:	cmp    QWORD PTR [rbp+0x210],0x8
   140004ec4:	cmovae rdx,QWORD PTR [rbp+0x1f8]
   140004ecc:	mov    r9,QWORD PTR [rbp+0x208]
   140004ed3:	xor    r8d,r8d
   140004ed6:	lea    rcx,[rbp+0x1d8]
   140004edd:	call   0x140007460
   140004ee2:	cmp    rax,0xffffffffffffffff
   140004ee6:	jne    0x1400050c9
   140004eec:	jmp    0x140004fe6
   140004ef1:	mov    rbx,r13
   140004ef4:	mov    r12,r13
   140004ef7:	mov    r13,QWORD PTR [rbp+0x210]
   140004efe:	mov    rdi,QWORD PTR [rbp+0x1f8]
   140004f05:	mov    r15,QWORD PTR [rbp+0x208]
   140004f0c:	test   r15,r15
   140004f0f:	je     0x140004fa6
   140004f15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004f20:	lea    rax,[rbp+0x1f8]
   140004f27:	cmp    r13,0x8
   140004f2b:	cmovae rax,rdi
   140004f2f:	lea    rdi,[rbx+rbx*1]
   140004f33:	cmp    WORD PTR [rax+rdi*1],0x2a
   140004f38:	jne    0x140004f3f
   140004f3a:	inc    rbx
   140004f3d:	jmp    0x140004f93
   140004f3f:	mov    edx,0x2a
   140004f44:	mov    r8,rbx
   140004f47:	lea    rcx,[rbp+0x1f8]
   140004f4e:	call   0x140007580
   140004f53:	mov    rsi,rax
   140004f56:	cmp    rax,0xffffffffffffffff
   140004f5a:	cmove  rsi,r15
   140004f5e:	mov    r14,rsi
   140004f61:	sub    r14,rbx
   140004f64:	lea    rcx,[rbp+0x1f8]
   140004f6b:	call   0x140003a30
   140004f70:	lea    rdx,[rdi+rax*1]
   140004f74:	mov    r9,r14
   140004f77:	mov    r8,r12
   140004f7a:	lea    rcx,[rbp+0x1d8]
   140004f81:	call   0x140007460
   140004f86:	cmp    rax,0xffffffffffffffff
   140004f8a:	je     0x140004f9f
   140004f8c:	lea    r12,[rax+r14*1]
   140004f90:	mov    rbx,rsi
   140004f93:	cmp    rbx,r15
   140004f96:	mov    rdi,QWORD PTR [rbp+0x1f8]
   140004f9d:	jb     0x140004f20
   140004f9f:	mov    rdi,QWORD PTR [rbp+0x1f8]
   140004fa6:	cmp    rbx,r15
   140004fa9:	je     0x140005112
   140004faf:	lea    rdx,[rbp+0x1f8]
   140004fb6:	cmp    r13,0x8
   140004fba:	cmovae rdx,rdi
   140004fbe:	mov    r9,r15
   140004fc1:	xor    r8d,r8d
   140004fc4:	lea    rcx,[rbp+0x1d8]
   140004fcb:	call   0x140007460
   140004fd0:	cmp    rax,0xffffffffffffffff
   140004fd4:	jne    0x140005112
   140004fda:	mov    r15,QWORD PTR [rsp+0x68]
   140004fdf:	xor    r13d,r13d
   140004fe2:	lea    r12d,[rax+0x8]
   140004fe6:	cmp    QWORD PTR [rbp+0x1f0],0x8
   140004fee:	jb     0x140004ffc
   140004ff0:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140004ff7:	call   0x140018a04
   140004ffc:	mov    QWORD PTR [rbp+0x1f0],r12
   140005003:	mov    QWORD PTR [rbp+0x1e8],r13
   14000500a:	mov    WORD PTR [rbp+0x1d8],r13w
   140005012:	cmp    QWORD PTR [rbp+0x1c8],0x8
   14000501a:	jb     0x140005028
   14000501c:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140005023:	call   0x140018a04
   140005028:	mov    rdi,QWORD PTR [rbp+0x230]
   14000502f:	lea    r8,[r15+0x1]
   140005033:	mov    WORD PTR [rbp+0x1d0],r13w
   14000503b:	cmp    r8,rdi
   14000503e:	jae    0x1400050b6
   140005040:	lea    rax,[rbp+0x220]
   140005047:	mov    rdx,QWORD PTR [rbp+0x220]
   14000504e:	cmp    QWORD PTR [rbp+0x238],0x8
   140005056:	cmovae rax,rdx
   14000505a:	lea    r9,[rax+rdi*2]
   14000505e:	lea    rax,[rbp+0x220]
   140005065:	cmovae rax,rdx
   140005069:	lea    rbx,[rax+r8*2]
   14000506d:	cmp    rbx,r9
   140005070:	jae    0x1400050b6
   140005072:	mov    ecx,0x1
   140005077:	lea    rax,[rbp+0x1d0]
   14000507e:	movzx  edx,WORD PTR [rbx]
   140005081:	cmp    WORD PTR [rax],dx
   140005084:	je     0x140005091
   140005086:	add    rax,0x2
   14000508a:	dec    rcx
   14000508d:	je     0x140005097
   14000508f:	jmp    0x140005081
   140005091:	add    rbx,0x2
   140005095:	jmp    0x14000506d
   140005097:	lea    rax,[rbp+0x220]
   14000509e:	cmp    QWORD PTR [rbp+0x238],0x8
   1400050a6:	cmovae rax,QWORD PTR [rbp+0x220]
   1400050ae:	sub    rbx,rax
   1400050b1:	sar    rbx,1
   1400050b4:	jmp    0x1400050ba
   1400050b6:	or     rbx,0xffffffffffffffff
   1400050ba:	cmp    rbx,0xffffffffffffffff
   1400050be:	je     0x1400051d1
   1400050c4:	jmp    0x140004d64
   1400050c9:	mov    bl,0x1
   1400050cb:	mov    BYTE PTR [rsp+0x40],bl
   1400050cf:	cmp    rdi,0x8
   1400050d3:	jb     0x1400050dd
   1400050d5:	mov    rcx,r14
   1400050d8:	call   0x140018a04
   1400050dd:	mov    QWORD PTR [rbp+0x1f0],r12
   1400050e4:	mov    QWORD PTR [rbp+0x1e8],r13
   1400050eb:	mov    WORD PTR [rbp+0x1d8],r13w
   1400050f3:	cmp    QWORD PTR [rbp+0x1c8],0x8
   1400050fb:	jb     0x1400051d6
   140005101:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140005108:	call   0x140018a04
   14000510d:	jmp    0x1400051d6
   140005112:	mov    BYTE PTR [rbp+0x420],0x0
   140005119:	xor    edx,edx
   14000511b:	mov    r8d,0x1ff
   140005121:	lea    rcx,[rbp+0x421]
   140005128:	call   0x14001b980
   14000512d:	lea    r9,[rbp+0x1f8]
   140005134:	cmp    r13,0x8
   140005138:	cmovae r9,rdi
   14000513c:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
   140005145:	mov    r8d,0x1ff
   14000514b:	lea    rdx,[rbp+0x420]
   140005152:	lea    rcx,[rbp+0x280]
   140005159:	call   0x1400195f0
   14000515e:	mov    r15,QWORD PTR [rsp+0x58]
   140005163:	lea    rcx,[r15+0x18]
   140005167:	lea    r9,[rbp+0x420]
   14000516e:	lea    r8,[rip+0x3315b]        # 0x1400382d0
   140005175:	mov    edx,0xc8
   14000517a:	call   0x14000a6d0
   14000517f:	mov    bl,0x1
   140005181:	mov    BYTE PTR [rsp+0x40],bl
   140005185:	cmp    QWORD PTR [rbp+0x1f0],0x8
   14000518d:	jb     0x14000519b
   14000518f:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140005196:	call   0x140018a04
   14000519b:	mov    eax,0x7
   1400051a0:	mov    QWORD PTR [rbp+0x1f0],rax
   1400051a7:	xor    r13d,r13d
   1400051aa:	mov    QWORD PTR [rbp+0x1e8],r13
   1400051b1:	mov    WORD PTR [rbp+0x1d8],r13w
   1400051b9:	cmp    QWORD PTR [rbp+0x1c8],0x8
   1400051c1:	jb     0x1400051db
   1400051c3:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400051ca:	call   0x140018a04
   1400051cf:	jmp    0x1400051db
   1400051d1:	movzx  ebx,BYTE PTR [rsp+0x40]
   1400051d6:	mov    r15,QWORD PTR [rsp+0x58]
   1400051db:	cmp    QWORD PTR [rbp+0x238],0x8
   1400051e3:	jb     0x1400051f1
   1400051e5:	mov    rcx,QWORD PTR [rbp+0x220]
   1400051ec:	call   0x140018a04
   1400051f1:	mov    r12d,DWORD PTR [rsp+0x50]
   1400051f6:	mov    r14,QWORD PTR [rsp+0x60]
   1400051fb:	jmp    0x140005202
   1400051fd:	movzx  ebx,BYTE PTR [rsp+0x40]
   140005202:	inc    r12d
   140005205:	mov    DWORD PTR [rsp+0x50],r12d
   14000520a:	cmp    r12d,0x2
   14000520e:	jl     0x140004b22
   140005214:	test   bl,bl
   140005216:	je     0x14000535a
   14000521c:	mov    DWORD PTR [rbp+0x240],0x8
   140005226:	mov    DWORD PTR [rbp+0x244],0x5
   140005230:	mov    QWORD PTR [rbp+0x248],0x1
   14000523b:	mov    r9d,0x10
   140005241:	lea    r8,[rbp+0x240]
   140005248:	lea    rdx,[rbp+0x260]
   14000524f:	mov    rcx,r14
   140005252:	call   QWORD PTR [rip+0x2a148]        # 0x14002f3a0
   140005258:	mov    ebx,eax
   14000525a:	mov    QWORD PTR [rbp+0x1c8],0xf
   140005265:	mov    QWORD PTR [rbp+0x1c0],r13
   14000526c:	mov    BYTE PTR [rbp+0x1b0],0x0
   140005273:	mov    r8d,0x3a
   140005279:	lea    rdx,[rip+0x33088]        # 0x140038308
   140005280:	lea    rcx,[rbp+0x1b0]
   140005287:	call   0x140008e50
   14000528c:	nop
   14000528d:	lea    r9,[rbp+0x1b0]
   140005294:	mov    r8d,ebx
   140005297:	mov    dl,0x1
   140005299:	mov    rcx,r15
   14000529c:	call   0x1400059c0
   1400052a1:	mov    edi,eax
   1400052a3:	cmp    QWORD PTR [rbp+0x1c8],0x10
   1400052ab:	jb     0x1400052b9
   1400052ad:	mov    rcx,QWORD PTR [rbp+0x1b0]
   1400052b4:	call   0x140018a04
   1400052b9:	cmp    edi,0x1
   1400052bc:	jne    0x140005356
   1400052c2:	test   ebx,ebx
   1400052c4:	je     0x140005356
   1400052ca:	lea    r8,[rbp+0x260]
   1400052d1:	mov    rdx,r14
   1400052d4:	lea    ecx,[rdi+0x4]
   1400052d7:	call   QWORD PTR [rip+0x2a0bb]        # 0x14002f398
   1400052dd:	mov    ebx,eax
   1400052df:	mov    QWORD PTR [rbp+0x1c8],0xf
   1400052ea:	mov    QWORD PTR [rbp+0x1c0],r13
   1400052f1:	mov    BYTE PTR [rbp+0x1b0],0x0
   1400052f8:	lea    r8d,[rdi+0x36]
   1400052fc:	lea    rdx,[rip+0x33045]        # 0x140038348
   140005303:	lea    rcx,[rbp+0x1b0]
   14000530a:	call   0x140008e50
   14000530f:	nop
   140005310:	lea    r9,[rbp+0x1b0]
   140005317:	mov    r8d,ebx
   14000531a:	movzx  edx,dil
   14000531e:	mov    rcx,r15
   140005321:	call   0x1400059c0
   140005326:	mov    edi,eax
   140005328:	cmp    QWORD PTR [rbp+0x1c8],0x10
   140005330:	jb     0x14000533e
   140005332:	mov    rcx,QWORD PTR [rbp+0x1b0]
   140005339:	call   0x140018a04
   14000533e:	cmp    edi,0x1
   140005341:	jne    0x140005356
   140005343:	test   ebx,ebx
   140005345:	je     0x140005356
   140005347:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000534c:	inc    r12d
   14000534f:	mov    DWORD PTR [rsp+0x4c],r12d
   140005354:	jmp    0x14000535f
   140005356:	inc    DWORD PTR [rsp+0x44]
   14000535a:	mov    r12d,DWORD PTR [rsp+0x4c]
   14000535f:	mov    esi,DWORD PTR [rsp+0x48]
   140005363:	inc    esi
   140005365:	mov    DWORD PTR [rsp+0x48],esi
   140005369:	lea    r8,[rbp+0x260]
   140005370:	mov    edx,esi
   140005372:	mov    rcx,r14
   140005375:	call   QWORD PTR [rip+0x2a045]        # 0x14002f3c0
   14000537b:	test   eax,eax
   14000537d:	jne    0x140004a90
   140005383:	mov    r13d,DWORD PTR [rsp+0x44]
   140005388:	mov    ebx,0x1
   14000538d:	mov    edi,0x7
   140005392:	test   r13d,r13d
   140005395:	cmove  edi,ebx
   140005398:	lea    rcx,[r15+0x18]
   14000539c:	mov    DWORD PTR [rsp+0x20],r13d
   1400053a1:	mov    r9d,r12d
   1400053a4:	lea    r8,[rip+0x32fd5]        # 0x140038380
   1400053ab:	mov    edx,0xc8
   1400053b0:	call   0x14000a6d0
   1400053b5:	test   r13d,r13d
   1400053b8:	jne    0x1400054a3
   1400053be:	test   r12d,r12d
   1400053c1:	je     0x1400054a3
   1400053c7:	xor    eax,eax
   1400053c9:	mov    QWORD PTR [rbp+0x240],rax
   1400053d0:	mov    QWORD PTR [rbp+0x248],rax
   1400053d7:	mov    QWORD PTR [rbp+0x250],rax
   1400053de:	xorps  xmm0,xmm0
   1400053e1:	movdqu XMMWORD PTR [rbp+0x240],xmm0
   1400053e9:	xor    r12d,r12d
   1400053ec:	mov    QWORD PTR [rbp+0x250],r12
   1400053f3:	lea    rdx,[rbp+0x240]
   1400053fa:	call   0x140006690
   1400053ff:	mov    rsi,QWORD PTR [rbp+0x248]
   140005406:	mov    r14,QWORD PTR [rbp+0x240]
   14000540d:	test   al,al
   14000540f:	je     0x140005456
   140005411:	cmp    r14,rsi
   140005414:	je     0x140005456
   140005416:	mov    rbx,r14
   140005419:	nop    DWORD PTR [rax+0x0]
   140005420:	mov    rdx,rbx
   140005423:	mov    rcx,r15
   140005426:	call   0x1400068b0
   14000542b:	test   al,al
   14000542d:	je     0x14000544d
   14000542f:	cmp    QWORD PTR [rbx+0x18],0x8
   140005434:	jb     0x14000543b
   140005436:	mov    rcx,QWORD PTR [rbx]
   140005439:	jmp    0x14000543e
   14000543b:	mov    rcx,rbx
   14000543e:	xor    r8d,r8d
   140005441:	xor    edx,edx
   140005443:	call   QWORD PTR [rip+0x29f47]        # 0x14002f390
   140005449:	test   eax,eax
   14000544b:	je     0x140005456
   14000544d:	add    rbx,0x20
   140005451:	cmp    rbx,rsi
   140005454:	jne    0x140005420
   140005456:	mov    rcx,r15
   140005459:	call   0x140007170
   14000545e:	test   al,al
   140005460:	mov    r13d,0x7
   140005466:	cmove  edi,r13d
   14000546a:	test   r14,r14
   14000546d:	je     0x1400054a3
   14000546f:	mov    rbx,r14
   140005472:	cmp    r14,rsi
   140005475:	je     0x14000549b
   140005477:	cmp    QWORD PTR [rbx+0x18],0x8
   14000547c:	jb     0x140005486
   14000547e:	mov    rcx,QWORD PTR [rbx]
   140005481:	call   0x140018a04
   140005486:	mov    QWORD PTR [rbx+0x18],r13
   14000548a:	mov    QWORD PTR [rbx+0x10],r12
   14000548e:	mov    WORD PTR [rbx],r12w
   140005492:	add    rbx,0x20
   140005496:	cmp    rbx,rsi
   140005499:	jne    0x140005477
   14000549b:	mov    rcx,r14
   14000549e:	call   0x140018a04
   1400054a3:	mov    rax,QWORD PTR [r15+0x8]
   1400054a7:	test   rax,rax
   1400054aa:	je     0x140005500
   1400054ac:	cmp    edi,0x1
   1400054af:	jne    0x1400054bb
   1400054b1:	mov    rax,QWORD PTR [rax]
   1400054b4:	call   QWORD PTR [rax+0x48]
   1400054b7:	test   eax,eax
   1400054b9:	jne    0x140005500
   1400054bb:	mov    rax,QWORD PTR [r15+0x8]
   1400054bf:	mov    rdx,QWORD PTR [rax]
   1400054c2:	mov    ecx,edi
   1400054c4:	call   QWORD PTR [rdx+0x40]
   1400054c7:	jmp    0x140005500
   1400054c9:	call   QWORD PTR [rip+0x29cd1]        # 0x14002f1a0
   1400054cf:	mov    r9d,eax
   1400054d2:	lea    rcx,[r15+0x18]
   1400054d6:	lea    r8,[rip+0x32ba3]        # 0x140038080
   1400054dd:	mov    edx,0xc8
   1400054e2:	call   0x14000a6d0
   1400054e7:	mov    rax,QWORD PTR [r15+0x8]
   1400054eb:	test   rax,rax
   1400054ee:	je     0x1400054fb
   1400054f0:	mov    rax,QWORD PTR [rax]
   1400054f3:	mov    ecx,0x7
   1400054f8:	call   QWORD PTR [rax+0x40]
   1400054fb:	mov    edi,0x7
   140005500:	cmp    QWORD PTR [rbp+0x210],0x8
   140005508:	jb     0x140005516
   14000550a:	mov    rcx,QWORD PTR [rbp+0x1f8]
   140005511:	call   0x140018a04
   140005516:	mov    eax,edi
   140005518:	mov    rcx,QWORD PTR [rbp+0x620]
   14000551f:	xor    rcx,rsp
   140005522:	call   0x1400187d0
   140005527:	mov    rbx,QWORD PTR [rsp+0x780]
   14000552f:	add    rsp,0x730
   140005536:	pop    r15
   140005538:	pop    r14
   14000553a:	pop    r13
   14000553c:	pop    r12
   14000553e:	pop    rdi
   14000553f:	pop    rsi
   140005540:	pop    rbp
   140005541:	ret    
   140005542:	int3   
   140005543:	int3   
   140005544:	int3   
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	rex push rbx
   140005552:	sub    rsp,0x30
   140005556:	mov    rax,QWORD PTR [rip+0x3c0f3]        # 0x140041650
   14000555d:	xor    rax,rsp
   140005560:	mov    QWORD PTR [rsp+0x28],rax
   140005565:	mov    rax,QWORD PTR [rcx+0x20]
   140005569:	mov    rbx,rcx
   14000556c:	mov    r10,QWORD PTR [rax+0x78]
   140005570:	test   r10,r10
   140005573:	je     0x14000562c
   140005579:	lea    rcx,[rsp+0x20]
   14000557e:	xor    r9d,r9d
   140005581:	xor    r8d,r8d
   140005584:	xor    edx,edx
   140005586:	call   r10
   140005589:	test   eax,eax
   14000558b:	jne    0x140005630
   140005591:	mov    rcx,QWORD PTR [rbx+0x20]
   140005595:	mov    r9,QWORD PTR [rcx+0x80]
   14000559c:	test   r9,r9
   14000559f:	je     0x1400055fe
   1400055a1:	mov    ecx,DWORD PTR [rsp+0x20]
   1400055a5:	xor    r8d,r8d
   1400055a8:	xor    edx,edx
   1400055aa:	call   r9
   1400055ad:	test   eax,eax
   1400055af:	jne    0x1400055fe
   1400055b1:	lea    rcx,[rbx+0x18]
   1400055b5:	lea    r8,[rip+0x32eac]        # 0x140038468
   1400055bc:	mov    edx,0xc8
   1400055c1:	call   0x14000a6d0
   1400055c6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400055ca:	test   rcx,rcx
   1400055cd:	je     0x1400055e6
   1400055cf:	mov    rcx,QWORD PTR [rcx]
   1400055d2:	call   QWORD PTR [rcx+0x48]
   1400055d5:	test   eax,eax
   1400055d7:	jne    0x1400055e6
   1400055d9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400055dd:	mov    rdx,QWORD PTR [rcx]
   1400055e0:	lea    ecx,[rax+0x1]
   1400055e3:	call   QWORD PTR [rdx+0x40]
   1400055e6:	mov    eax,0x1
   1400055eb:	mov    rcx,QWORD PTR [rsp+0x28]
   1400055f0:	xor    rcx,rsp
   1400055f3:	call   0x1400187d0
   1400055f8:	add    rsp,0x30
   1400055fc:	pop    rbx
   1400055fd:	ret    
   1400055fe:	lea    rcx,[rbx+0x18]
   140005602:	lea    r8,[rip+0x32e17]        # 0x140038420
   140005609:	mov    r9d,eax
   14000560c:	mov    edx,0xc8
   140005611:	call   0x14000a6d0
   140005616:	mov    rdx,QWORD PTR [rbx+0x8]
   14000561a:	test   rdx,rdx
   14000561d:	je     0x14000565c
   14000561f:	mov    rdx,QWORD PTR [rdx]
   140005622:	mov    ecx,0x7
   140005627:	call   QWORD PTR [rdx+0x40]
   14000562a:	jmp    0x14000565c
   14000562c:	mov    eax,DWORD PTR [rsp+0x20]
   140005630:	lea    rcx,[rbx+0x18]
   140005634:	lea    r8,[rip+0x32da5]        # 0x1400383e0
   14000563b:	mov    r9d,eax
   14000563e:	mov    edx,0xc8
   140005643:	call   0x14000a6d0
   140005648:	mov    rax,QWORD PTR [rbx+0x8]
   14000564c:	test   rax,rax
   14000564f:	je     0x14000565c
   140005651:	mov    rax,QWORD PTR [rax]
   140005654:	mov    ecx,0x7
   140005659:	call   QWORD PTR [rax+0x40]
   14000565c:	mov    eax,0x7
   140005661:	mov    rcx,QWORD PTR [rsp+0x28]
   140005666:	xor    rcx,rsp
   140005669:	call   0x1400187d0
   14000566e:	add    rsp,0x30
   140005672:	pop    rbx
   140005673:	ret    
   140005674:	int3   
   140005675:	int3   
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	mov    rax,rsp
   140005683:	push   rbp
   140005684:	push   rdi
   140005685:	push   r12
   140005687:	push   r14
   140005689:	push   r15
   14000568b:	lea    rbp,[rax-0xc8]
   140005692:	sub    rsp,0x1a0
   140005699:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400056a2:	mov    QWORD PTR [rax+0x18],rbx
   1400056a6:	mov    QWORD PTR [rax+0x20],rsi
   1400056aa:	mov    rax,QWORD PTR [rip+0x3bf9f]        # 0x140041650
   1400056b1:	xor    rax,rsp
   1400056b4:	mov    QWORD PTR [rbp+0x90],rax
   1400056bb:	mov    rbx,rdx
   1400056be:	mov    rsi,rcx
   1400056c1:	xor    r12d,r12d
   1400056c4:	mov    QWORD PTR [rsp+0x48],r12
   1400056c9:	mov    r15d,r12d
   1400056cc:	xor    edx,edx
   1400056ce:	mov    r8d,0x11c
   1400056d4:	lea    rcx,[rsp+0x70]
   1400056d9:	call   0x14001b980
   1400056de:	mov    DWORD PTR [rsp+0x70],0x11c
   1400056e6:	mov    DWORD PTR [rsp+0x74],0x6
   1400056ee:	mov    r8b,0x3
   1400056f1:	lea    edx,[r12+0x2]
   1400056f6:	xor    ecx,ecx
   1400056f8:	call   QWORD PTR [rip+0x29a9a]        # 0x14002f198
   1400056fe:	mov    r8b,0x3
   140005701:	lea    edx,[r12+0x1]
   140005706:	mov    rcx,rax
   140005709:	call   QWORD PTR [rip+0x29a89]        # 0x14002f198
   14000570f:	mov    r8b,0x3
   140005712:	lea    edx,[r12+0x20]
   140005717:	mov    rcx,rax
   14000571a:	call   QWORD PTR [rip+0x29a78]        # 0x14002f198
   140005720:	mov    r8b,0x3
   140005723:	lea    edx,[r12+0x10]
   140005728:	mov    rcx,rax
   14000572b:	call   QWORD PTR [rip+0x29a67]        # 0x14002f198
   140005731:	mov    r8,rax
   140005734:	lea    edx,[r12+0x33]
   140005739:	lea    rcx,[rsp+0x70]
   14000573e:	call   QWORD PTR [rip+0x29a4c]        # 0x14002f190
   140005744:	test   eax,eax
   140005746:	setne  dl
   140005749:	mov    r14d,r12d
   14000574c:	mov    rax,QWORD PTR [rsi+0x20]
   140005750:	mov    r10,QWORD PTR [rax+0x10]
   140005754:	test   r10,r10
   140005757:	jne    0x14000575e
   140005759:	xor    dil,dil
   14000575c:	jmp    0x140005787
   14000575e:	lea    rax,[rip+0x32d2b]        # 0x140038490
   140005765:	lea    rcx,[rip+0x32d84]        # 0x1400384f0
   14000576c:	test   dl,dl
   14000576e:	cmovne rcx,rax
   140005772:	xor    r9d,r9d
   140005775:	lea    r8,[rsp+0x48]
   14000577a:	lea    edx,[r9+0x1]
   14000577e:	call   r10
   140005781:	mov    r14d,eax
   140005784:	mov    dil,0x1
   140005787:	mov    QWORD PTR [rsp+0x38],0xf
   140005790:	mov    QWORD PTR [rsp+0x30],r12
   140005795:	mov    BYTE PTR [rsp+0x20],r12b
   14000579a:	mov    r8d,0x54
   1400057a0:	lea    rdx,[rip+0x32d89]        # 0x140038530
   1400057a7:	lea    rcx,[rsp+0x20]
   1400057ac:	call   0x140008e50
   1400057b1:	nop
   1400057b2:	lea    r9,[rsp+0x20]
   1400057b7:	mov    r8d,r14d
   1400057ba:	movzx  edx,dil
   1400057be:	mov    rcx,rsi
   1400057c1:	call   0x1400059c0
   1400057c6:	mov    edi,eax
   1400057c8:	cmp    QWORD PTR [rsp+0x38],0x10
   1400057ce:	jb     0x1400057da
   1400057d0:	mov    rcx,QWORD PTR [rsp+0x20]
   1400057d5:	call   0x140018a04
   1400057da:	cmp    edi,0x1
   1400057dd:	je     0x1400057e6
   1400057df:	mov    eax,edi
   1400057e1:	jmp    0x140005919
   1400057e6:	mov    rax,QWORD PTR [rsp+0x48]
   1400057eb:	test   rax,rax
   1400057ee:	je     0x140005813
   1400057f0:	xor    ecx,ecx
   1400057f2:	mov    QWORD PTR [rsp+0x50],rcx
   1400057f7:	mov    QWORD PTR [rsp+0x58],rcx
   1400057fc:	mov    QWORD PTR [rsp+0x60],rcx
   140005801:	mov    DWORD PTR [rsp+0x50],0x18
   140005809:	mov    QWORD PTR [rsp+0x58],rax
   14000580e:	lea    r15,[rsp+0x50]
   140005813:	cmp    QWORD PTR [rbx+0x18],0x8
   140005818:	jb     0x14000581d
   14000581a:	mov    rbx,QWORD PTR [rbx]
   14000581d:	mov    r9,rbx
   140005820:	xor    r8d,r8d
   140005823:	xor    edx,edx
   140005825:	mov    rcx,r15
   140005828:	call   QWORD PTR [rip+0x2995a]        # 0x14002f188
   14000582e:	mov    rdi,rax
   140005831:	mov    QWORD PTR [rsp+0x38],0xf
   14000583a:	mov    QWORD PTR [rsp+0x30],r12
   14000583f:	mov    BYTE PTR [rsp+0x20],0x0
   140005844:	mov    r8d,0x2b
   14000584a:	lea    rdx,[rip+0x32d37]        # 0x140038588
   140005851:	lea    rcx,[rsp+0x20]
   140005856:	call   0x140008e50
   14000585b:	nop
   14000585c:	mov    r8d,r12d
   14000585f:	test   rdi,rdi
   140005862:	setne  r8b
   140005866:	lea    r9,[rsp+0x20]
   14000586b:	mov    dl,0x1
   14000586d:	mov    rcx,rsi
   140005870:	call   0x1400059c0
   140005875:	mov    ebx,eax
   140005877:	cmp    QWORD PTR [rsp+0x38],0x10
   14000587d:	jb     0x140005889
   14000587f:	mov    rcx,QWORD PTR [rsp+0x20]
   140005884:	call   0x140018a04
   140005889:	mov    rcx,rdi
   14000588c:	cmp    ebx,0x1
   14000588f:	je     0x14000589b
   140005891:	call   QWORD PTR [rip+0x298e9]        # 0x14002f180
   140005897:	mov    eax,ebx
   140005899:	jmp    0x140005919
   14000589b:	call   QWORD PTR [rip+0x298d7]        # 0x14002f178
   1400058a1:	mov    ebx,eax
   1400058a3:	mov    QWORD PTR [rsp+0x38],0xf
   1400058ac:	mov    QWORD PTR [rsp+0x30],r12
   1400058b1:	mov    BYTE PTR [rsp+0x20],0x0
   1400058b6:	mov    r8d,0x28
   1400058bc:	lea    rdx,[rip+0x32cf5]        # 0x1400385b8
   1400058c3:	lea    rcx,[rsp+0x20]
   1400058c8:	call   0x140008e50
   1400058cd:	nop
   1400058ce:	lea    r9,[rsp+0x20]
   1400058d3:	mov    r8d,ebx
   1400058d6:	mov    dl,0x1
   1400058d8:	mov    rcx,rsi
   1400058db:	call   0x1400059c0
   1400058e0:	mov    ebx,eax
   1400058e2:	cmp    QWORD PTR [rsp+0x38],0x10
   1400058e8:	jb     0x1400058f4
   1400058ea:	mov    rcx,QWORD PTR [rsp+0x20]
   1400058ef:	call   0x140018a04
   1400058f4:	mov    rcx,rdi
   1400058f7:	call   QWORD PTR [rip+0x29883]        # 0x14002f180
   1400058fd:	cmp    ebx,0x1
   140005900:	jne    0x140005897
   140005902:	lea    rcx,[rsi+0x18]
   140005906:	lea    r8,[rip+0x32cdb]        # 0x1400385e8
   14000590d:	mov    edx,0xc8
   140005912:	call   0x14000a6d0
   140005917:	mov    eax,ebx
   140005919:	mov    rcx,QWORD PTR [rbp+0x90]
   140005920:	xor    rcx,rsp
   140005923:	call   0x1400187d0
   140005928:	lea    r11,[rsp+0x1a0]
   140005930:	mov    rbx,QWORD PTR [r11+0x40]
   140005934:	mov    rsi,QWORD PTR [r11+0x48]
   140005938:	mov    rsp,r11
   14000593b:	pop    r15
   14000593d:	pop    r14
   14000593f:	pop    r12
   140005941:	pop    rdi
   140005942:	pop    rbp
   140005943:	ret    
   140005944:	int3   
   140005945:	int3   
   140005946:	int3   
   140005947:	int3   
   140005948:	int3   
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	mov    QWORD PTR [rsp+0x8],rbx
   140005955:	push   rdi
   140005956:	sub    rsp,0x20
   14000595a:	mov    rdi,rcx
   14000595d:	call   0x140004910
   140005962:	mov    ebx,eax
   140005964:	cmp    eax,0x1
   140005967:	jne    0x140005987
   140005969:	mov    rcx,rdi
   14000596c:	call   0x140005550
   140005971:	mov    ebx,eax
   140005973:	cmp    eax,0x1
   140005976:	je     0x1400059a7
   140005978:	call   QWORD PTR [rip+0x29822]        # 0x14002f1a0
   14000597e:	lea    r8,[rip+0x32c8b]        # 0x140038610
   140005985:	jmp    0x140005994
   140005987:	call   QWORD PTR [rip+0x29813]        # 0x14002f1a0
   14000598d:	lea    r8,[rip+0x32ccc]        # 0x140038660
   140005994:	lea    rcx,[rdi+0x18]
   140005998:	mov    r9d,eax
   14000599b:	mov    edx,0xc8
   1400059a0:	call   0x14000a6d0
   1400059a5:	mov    eax,ebx
   1400059a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059ac:	add    rsp,0x20
   1400059b0:	pop    rdi
   1400059b1:	ret    
   1400059b2:	int3   
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400059c5:	push   rsi
   1400059c6:	sub    rsp,0x150
   1400059cd:	mov    rax,QWORD PTR [rip+0x3bc7c]        # 0x140041650
   1400059d4:	xor    rax,rsp
   1400059d7:	mov    QWORD PTR [rsp+0x140],rax
   1400059df:	mov    rbx,r9
   1400059e2:	mov    rsi,rcx
   1400059e5:	test   dl,dl
   1400059e7:	jne    0x140005a26
   1400059e9:	lea    r8,[rip+0x32cb8]        # 0x1400386a8
   1400059f0:	lea    rcx,[rsp+0x20]
   1400059f5:	mov    rdx,rbx
   1400059f8:	call   0x140007e10
   1400059fd:	cmp    QWORD PTR [rsp+0x38],0x10
   140005a03:	lea    r8,[rsp+0x20]
   140005a08:	cmovae r8,QWORD PTR [rsp+0x20]
   140005a0e:	lea    rcx,[rsi+0x18]
   140005a12:	mov    edx,0xc8
   140005a17:	call   0x14000a6d0
   140005a1c:	mov    ebx,0x5
   140005a21:	jmp    0x140005ada
   140005a26:	test   r8d,r8d
   140005a29:	jne    0x140005aee
   140005a2f:	mov    QWORD PTR [rsp+0x168],rdi
   140005a37:	call   QWORD PTR [rip+0x29763]        # 0x14002f1a0
   140005a3d:	lea    r8,[rip+0x32c84]        # 0x1400386c8
   140005a44:	lea    rcx,[rsp+0x40]
   140005a49:	mov    edx,0x100
   140005a4e:	mov    r9d,eax
   140005a51:	mov    edi,eax
   140005a53:	call   0x14001963c
   140005a58:	lea    r8,[rsp+0x40]
   140005a5d:	lea    rcx,[rsp+0x20]
   140005a62:	mov    rdx,rbx
   140005a65:	call   0x140007e10
   140005a6a:	cmp    QWORD PTR [rsp+0x38],0x10
   140005a70:	lea    r8,[rsp+0x20]
   140005a75:	cmovae r8,QWORD PTR [rsp+0x20]
   140005a7b:	lea    rcx,[rsi+0x18]
   140005a7f:	mov    edx,0xc8
   140005a84:	call   0x14000a6d0
   140005a89:	cmp    edi,0x2
   140005a8c:	je     0x140005acd
   140005a8e:	cmp    edi,0x5
   140005a91:	je     0x140005ac6
   140005a93:	cmp    edi,0xbb9
   140005a99:	je     0x140005abf
   140005a9b:	cmp    edi,0x800b0110
   140005aa1:	je     0x140005ab8
   140005aa3:	mov    ebx,0x3
   140005aa8:	mov    eax,0x7
   140005aad:	cmp    edi,0xe000020b
   140005ab3:	cmovne ebx,eax
   140005ab6:	jmp    0x140005ad2
   140005ab8:	mov    ebx,0x6
   140005abd:	jmp    0x140005ad2
   140005abf:	mov    ebx,0x8
   140005ac4:	jmp    0x140005ad2
   140005ac6:	mov    ebx,0x2
   140005acb:	jmp    0x140005ad2
   140005acd:	mov    ebx,0x4
   140005ad2:	mov    rdi,QWORD PTR [rsp+0x168]
   140005ada:	cmp    QWORD PTR [rsp+0x38],0x10
   140005ae0:	jb     0x140005af3
   140005ae2:	mov    rcx,QWORD PTR [rsp+0x20]
   140005ae7:	call   0x140018a04
   140005aec:	jmp    0x140005af3
   140005aee:	mov    ebx,0x1
   140005af3:	mov    rcx,QWORD PTR [rsi+0x8]
   140005af7:	test   rcx,rcx
   140005afa:	je     0x140005b17
   140005afc:	cmp    ebx,0x1
   140005aff:	jne    0x140005b0b
   140005b01:	mov    rcx,QWORD PTR [rcx]
   140005b04:	call   QWORD PTR [rcx+0x48]
   140005b07:	test   eax,eax
   140005b09:	jne    0x140005b17
   140005b0b:	mov    rax,QWORD PTR [rsi+0x8]
   140005b0f:	mov    ecx,ebx
   140005b11:	mov    rdx,QWORD PTR [rax]
   140005b14:	call   QWORD PTR [rdx+0x40]
   140005b17:	mov    eax,ebx
   140005b19:	mov    rcx,QWORD PTR [rsp+0x140]
   140005b21:	xor    rcx,rsp
   140005b24:	call   0x1400187d0
   140005b29:	mov    rbx,QWORD PTR [rsp+0x170]
   140005b31:	add    rsp,0x150
   140005b38:	pop    rsi
   140005b39:	ret    
   140005b3a:	int3   
   140005b3b:	int3   
   140005b3c:	int3   
   140005b3d:	int3   
   140005b3e:	int3   
   140005b3f:	int3   
   140005b40:	mov    r11,rsp
   140005b43:	push   rbx
   140005b44:	push   r14
   140005b46:	sub    rsp,0x468
   140005b4d:	mov    rax,QWORD PTR [rip+0x3bafc]        # 0x140041650
   140005b54:	xor    rax,rsp
   140005b57:	mov    QWORD PTR [rsp+0x440],rax
   140005b5f:	mov    QWORD PTR [r11-0x20],rdi
   140005b63:	mov    QWORD PTR [r11-0x28],r15
   140005b67:	mov    r14,rcx
   140005b6a:	movzx  r15d,r8w
   140005b6e:	mov    rdi,rdx
   140005b71:	xorps  xmm0,xmm0
   140005b74:	lea    rcx,[rip+0x32b65]        # 0x1400386e0
   140005b7b:	lea    r8,[rsp+0x48]
   140005b80:	lea    rdx,[rsp+0x40]
   140005b85:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140005b8b:	mov    ebx,0x7
   140005b90:	mov    DWORD PTR [rsp+0x58],0x1
   140005b98:	call   QWORD PTR [rip+0x3d84a]        # 0x1400433e8
   140005b9e:	test   eax,eax
   140005ba0:	je     0x140005d08
   140005ba6:	mov    QWORD PTR [rsp+0x498],rbp
   140005bae:	mov    rbp,QWORD PTR [rdi+0x10]
   140005bb2:	lea    rax,[rbp+0x1]
   140005bb6:	cmp    rax,0x40
   140005bba:	ja     0x140005cf5
   140005bc0:	mov    QWORD PTR [rsp+0x460],rsi
   140005bc8:	mov    rsi,QWORD PTR [rip+0x3cf31]        # 0x140042b00
   140005bcf:	lea    rax,[rsi+0x1]
   140005bd3:	cmp    rax,0x31
   140005bd7:	ja     0x140005ced
   140005bdd:	lea    rcx,[rsp+0x70]
   140005be2:	xor    edx,edx
   140005be4:	mov    r8d,0x3c4
   140005bea:	call   0x14001b980
   140005bef:	cmp    QWORD PTR [rdi+0x18],0x8
   140005bf4:	jb     0x140005bf9
   140005bf6:	mov    rdi,QWORD PTR [rdi]
   140005bf9:	test   rbp,rbp
   140005bfc:	je     0x140005c1a
   140005bfe:	lea    rcx,[rsp+0x70]
   140005c03:	mov    r9,rbp
   140005c06:	mov    r8,rdi
   140005c09:	mov    edx,0x3f
   140005c0e:	call   0x140019660
   140005c13:	mov    rsi,QWORD PTR [rip+0x3cee6]        # 0x140042b00
   140005c1a:	cmp    QWORD PTR [rip+0x3cee6],0x8        # 0x140042b08
   140005c22:	lea    r8,[rip+0x3cec7]        # 0x140042af0
   140005c29:	cmovae r8,QWORD PTR [rip+0x3cebf]        # 0x140042af0
   140005c31:	test   rsi,rsi
   140005c34:	je     0x140005c4b
   140005c36:	lea    rcx,[rsp+0x100]
   140005c3e:	mov    r9,rsi
   140005c41:	mov    edx,0x30
   140005c46:	call   0x140019660
   140005c4b:	xor    ecx,ecx
   140005c4d:	movzx  eax,r15w
   140005c51:	lea    r8,[rsp+0x70]
   140005c56:	mov    DWORD PTR [rsp+0x428],eax
   140005c5d:	lea    rax,[rsp+0x60]
   140005c62:	mov    DWORD PTR [rsp+0x1a4],ecx
   140005c69:	mov    QWORD PTR [rsp+0x38],rax
   140005c6e:	lea    rax,[rsp+0x64]
   140005c73:	mov    DWORD PTR [rsp+0x42c],ecx
   140005c7a:	mov    QWORD PTR [rsp+0x30],rax
   140005c7f:	mov    DWORD PTR [rsp+0x28],ecx
   140005c83:	mov    DWORD PTR [rsp+0x64],ecx
   140005c87:	mov    QWORD PTR [rsp+0x20],rcx
   140005c8c:	mov    DWORD PTR [rsp+0x60],ecx
   140005c90:	mov    rcx,QWORD PTR [rsp+0x40]
   140005c95:	lea    rdx,[rip+0x32a8c]        # 0x140038728
   140005c9c:	mov    r9d,0x3c4
   140005ca2:	mov    DWORD PTR [rsp+0xf0],0x1
   140005cad:	mov    DWORD PTR [rsp+0xf8],0x3c4
   140005cb8:	mov    DWORD PTR [rsp+0xf4],0x1
   140005cc3:	call   QWORD PTR [rip+0x3d727]        # 0x1400433f0
   140005cc9:	mov    ecx,DWORD PTR [rsp+0x60]
   140005ccd:	test   eax,eax
   140005ccf:	je     0x140005ce2
   140005cd1:	test   ecx,ecx
   140005cd3:	jne    0x140005ce2
   140005cd5:	call   QWORD PTR [rip+0x29425]        # 0x14002f100
   140005cdb:	mov    ebx,0x1
   140005ce0:	jmp    0x140005ced
   140005ce2:	mov    eax,0x2
   140005ce7:	cmp    ecx,0x5
   140005cea:	cmove  ebx,eax
   140005ced:	mov    rsi,QWORD PTR [rsp+0x460]
   140005cf5:	mov    rcx,QWORD PTR [rsp+0x40]
   140005cfa:	call   QWORD PTR [rip+0x3d6c0]        # 0x1400433c0
   140005d00:	mov    rbp,QWORD PTR [rsp+0x498]
   140005d08:	mov    rcx,QWORD PTR [r14+0x8]
   140005d0c:	mov    r15,QWORD PTR [rsp+0x450]
   140005d14:	mov    rdi,QWORD PTR [rsp+0x458]
   140005d1c:	test   rcx,rcx
   140005d1f:	je     0x140005d3c
   140005d21:	cmp    ebx,0x1
   140005d24:	jne    0x140005d30
   140005d26:	mov    rcx,QWORD PTR [rcx]
   140005d29:	call   QWORD PTR [rcx+0x48]
   140005d2c:	test   eax,eax
   140005d2e:	jne    0x140005d3c
   140005d30:	mov    rax,QWORD PTR [r14+0x8]
   140005d34:	mov    ecx,ebx
   140005d36:	mov    rdx,QWORD PTR [rax]
   140005d39:	call   QWORD PTR [rdx+0x40]
   140005d3c:	mov    eax,ebx
   140005d3e:	mov    rcx,QWORD PTR [rsp+0x440]
   140005d46:	xor    rcx,rsp
   140005d49:	call   0x1400187d0
   140005d4e:	add    rsp,0x468
   140005d55:	pop    r14
   140005d57:	pop    rbx
   140005d58:	ret    
   140005d59:	int3   
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	rex push rbx
   140005d62:	push   rbp
   140005d63:	push   rdi
   140005d64:	sub    rsp,0x170
   140005d6b:	mov    rax,QWORD PTR [rip+0x3b8de]        # 0x140041650
   140005d72:	xor    rax,rsp
   140005d75:	mov    QWORD PTR [rsp+0x160],rax
   140005d7d:	cmp    QWORD PTR [rdx+0x10],0x0
   140005d82:	mov    rdi,rdx
   140005d85:	mov    rbp,rcx
   140005d88:	jne    0x140005d94
   140005d8a:	mov    eax,0x7
   140005d8f:	jmp    0x140005ebd
   140005d94:	xorps  xmm0,xmm0
   140005d97:	lea    r8,[rsp+0x48]
   140005d9c:	lea    rdx,[rsp+0x40]
   140005da1:	lea    rcx,[rip+0x32938]        # 0x1400386e0
   140005da8:	mov    ebx,0x7
   140005dad:	mov    DWORD PTR [rsp+0x58],0x1
   140005db5:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140005dbb:	call   QWORD PTR [rip+0x3d627]        # 0x1400433e8
   140005dc1:	test   eax,eax
   140005dc3:	je     0x140005e97
   140005dc9:	mov    QWORD PTR [rsp+0x1a0],rsi
   140005dd1:	mov    rsi,QWORD PTR [rdi+0x10]
   140005dd5:	lea    rax,[rsi+0x1]
   140005dd9:	cmp    rax,0x40
   140005ddd:	ja     0x140005e84
   140005de3:	lea    rcx,[rsp+0x70]
   140005de8:	xor    edx,edx
   140005dea:	mov    r8d,0xec
   140005df0:	call   0x14001b980
   140005df5:	cmp    QWORD PTR [rdi+0x18],0x8
   140005dfa:	jb     0x140005dff
   140005dfc:	mov    rdi,QWORD PTR [rdi]
   140005dff:	test   rsi,rsi
   140005e02:	je     0x140005e19
   140005e04:	lea    rcx,[rsp+0x70]
   140005e09:	mov    r9,rsi
   140005e0c:	mov    r8,rdi
   140005e0f:	mov    edx,0x3f
   140005e14:	call   0x140019660
   140005e19:	xor    ecx,ecx
   140005e1b:	lea    rax,[rsp+0x60]
   140005e20:	lea    r8,[rsp+0x70]
   140005e25:	mov    QWORD PTR [rsp+0x38],rax
   140005e2a:	lea    rax,[rsp+0x64]
   140005e2f:	mov    DWORD PTR [rsp+0x64],ecx
   140005e33:	mov    QWORD PTR [rsp+0x30],rax
   140005e38:	mov    DWORD PTR [rsp+0x28],ecx
   140005e3c:	mov    DWORD PTR [rsp+0x60],ecx
   140005e40:	mov    QWORD PTR [rsp+0x20],rcx
   140005e45:	mov    rcx,QWORD PTR [rsp+0x40]
   140005e4a:	lea    rdx,[rip+0x328e7]        # 0x140038738
   140005e51:	mov    r9d,0xec
   140005e57:	mov    DWORD PTR [rsp+0x154],0x1
   140005e62:	call   QWORD PTR [rip+0x3d588]        # 0x1400433f0
   140005e68:	mov    ecx,DWORD PTR [rsp+0x60]
   140005e6c:	test   eax,eax
   140005e6e:	je     0x140005e79
   140005e70:	test   ecx,ecx
   140005e72:	jne    0x140005e79
   140005e74:	lea    ebx,[rcx+0x1]
   140005e77:	jmp    0x140005e84
   140005e79:	mov    eax,0x2
   140005e7e:	cmp    ecx,0x5
   140005e81:	cmove  ebx,eax
   140005e84:	mov    rcx,QWORD PTR [rsp+0x40]
   140005e89:	call   QWORD PTR [rip+0x3d531]        # 0x1400433c0
   140005e8f:	mov    rsi,QWORD PTR [rsp+0x1a0]
   140005e97:	mov    rcx,QWORD PTR [rbp+0x8]
   140005e9b:	test   rcx,rcx
   140005e9e:	je     0x140005ebb
   140005ea0:	cmp    ebx,0x1
   140005ea3:	jne    0x140005eaf
   140005ea5:	mov    rcx,QWORD PTR [rcx]
   140005ea8:	call   QWORD PTR [rcx+0x48]
   140005eab:	test   eax,eax
   140005ead:	jne    0x140005ebb
   140005eaf:	mov    rcx,QWORD PTR [rbp+0x8]
   140005eb3:	mov    rdx,QWORD PTR [rcx]
   140005eb6:	mov    ecx,ebx
   140005eb8:	call   QWORD PTR [rdx+0x40]
   140005ebb:	mov    eax,ebx
   140005ebd:	mov    rcx,QWORD PTR [rsp+0x160]
   140005ec5:	xor    rcx,rsp
   140005ec8:	call   0x1400187d0
   140005ecd:	add    rsp,0x170
   140005ed4:	pop    rdi
   140005ed5:	pop    rbp
   140005ed6:	pop    rbx
   140005ed7:	ret    
   140005ed8:	int3   
   140005ed9:	int3   
   140005eda:	int3   
   140005edb:	int3   
   140005edc:	int3   
   140005edd:	int3   
   140005ede:	int3   
   140005edf:	int3   
   140005ee0:	rex push rbx
   140005ee2:	push   rbp
   140005ee3:	push   rsi
   140005ee4:	push   rdi
   140005ee5:	push   r14
   140005ee7:	sub    rsp,0x70
   140005eeb:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140005ef4:	mov    rax,QWORD PTR [rip+0x3b755]        # 0x140041650
   140005efb:	xor    rax,rsp
   140005efe:	mov    QWORD PTR [rsp+0x68],rax
   140005f03:	mov    r14,r9
   140005f06:	mov    rdi,r8
   140005f09:	mov    rsi,rdx
   140005f0c:	mov    rbp,rcx
   140005f0f:	cmp    QWORD PTR [r8+0x10],0x0
   140005f14:	jne    0x140005f20
   140005f16:	mov    eax,0x7
   140005f1b:	jmp    0x14000603d
   140005f20:	lea    rdx,[rsp+0x20]
   140005f25:	call   0x140006180
   140005f2a:	nop
   140005f2b:	mov    r8,rdi
   140005f2e:	mov    rdx,rax
   140005f31:	lea    rcx,[rsp+0x48]
   140005f36:	call   0x140007ef0
   140005f3b:	nop
   140005f3c:	cmp    QWORD PTR [rsp+0x38],0x8
   140005f42:	jb     0x140005f4e
   140005f44:	mov    rcx,QWORD PTR [rsp+0x20]
   140005f49:	call   0x140018a04
   140005f4e:	mov    QWORD PTR [rsp+0x38],0x7
   140005f57:	xor    eax,eax
   140005f59:	mov    QWORD PTR [rsp+0x30],rax
   140005f5e:	mov    WORD PTR [rsp+0x20],ax
   140005f63:	cmp    QWORD PTR [rsp+0x58],rax
   140005f68:	je     0x140005fee
   140005f6e:	lea    rdx,[rsp+0x48]
   140005f73:	cmp    QWORD PTR [rsp+0x60],0x8
   140005f79:	cmovae rdx,QWORD PTR [rsp+0x48]
   140005f7f:	cmp    QWORD PTR [r14+0x18],0x8
   140005f84:	jb     0x140005f89
   140005f86:	mov    r14,QWORD PTR [r14]
   140005f89:	mov    ebx,0x1
   140005f8e:	mov    r8d,ebx
   140005f91:	mov    rcx,r14
   140005f94:	call   QWORD PTR [rip+0x290f6]        # 0x14002f090
   140005f9a:	test   eax,eax
   140005f9c:	je     0x140005fee
   140005f9e:	cmp    QWORD PTR [rsi+0x18],0x8
   140005fa3:	jb     0x140005fa8
   140005fa5:	mov    rsi,QWORD PTR [rsi]
   140005fa8:	cmp    QWORD PTR [rdi+0x18],0x8
   140005fad:	jb     0x140005fb2
   140005faf:	mov    rdi,QWORD PTR [rdi]
   140005fb2:	mov    r9,rsi
   140005fb5:	mov    r8,rdi
   140005fb8:	xor    edx,edx
   140005fba:	xor    ecx,ecx
   140005fbc:	call   QWORD PTR [rip+0x3d406]        # 0x1400433c8
   140005fc2:	test   eax,eax
   140005fc4:	je     0x140005fd0
   140005fc6:	xor    ecx,ecx
   140005fc8:	call   QWORD PTR [rip+0x29132]        # 0x14002f100
   140005fce:	jmp    0x140006004
   140005fd0:	mov    ebx,0x7
   140005fd5:	lea    rcx,[rsp+0x48]
   140005fda:	cmp    QWORD PTR [rsp+0x60],0x8
   140005fe0:	cmovae rcx,QWORD PTR [rsp+0x48]
   140005fe6:	call   QWORD PTR [rip+0x290ac]        # 0x14002f098
   140005fec:	jmp    0x140006004
   140005fee:	call   QWORD PTR [rip+0x291ac]        # 0x14002f1a0
   140005ff4:	mov    ebx,0x7
   140005ff9:	mov    ecx,0x4
   140005ffe:	cmp    eax,0x2
   140006001:	cmove  ebx,ecx
   140006004:	mov    rax,QWORD PTR [rbp+0x8]
   140006008:	test   rax,rax
   14000600b:	je     0x140006029
   14000600d:	cmp    ebx,0x1
   140006010:	jne    0x14000601c
   140006012:	mov    rax,QWORD PTR [rax]
   140006015:	call   QWORD PTR [rax+0x48]
   140006018:	test   eax,eax
   14000601a:	jne    0x140006029
   14000601c:	mov    rcx,QWORD PTR [rbp+0x8]
   140006020:	mov    rdx,QWORD PTR [rcx]
   140006023:	mov    ecx,ebx
   140006025:	call   QWORD PTR [rdx+0x40]
   140006028:	nop
   140006029:	cmp    QWORD PTR [rsp+0x60],0x8
   14000602f:	jb     0x14000603b
   140006031:	mov    rcx,QWORD PTR [rsp+0x48]
   140006036:	call   0x140018a04
   14000603b:	mov    eax,ebx
   14000603d:	mov    rcx,QWORD PTR [rsp+0x68]
   140006042:	xor    rcx,rsp
   140006045:	call   0x1400187d0
   14000604a:	add    rsp,0x70
   14000604e:	pop    r14
   140006050:	pop    rdi
   140006051:	pop    rsi
   140006052:	pop    rbp
   140006053:	pop    rbx
   140006054:	ret    
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	rex push rbx
   140006062:	push   rsi
   140006063:	push   rdi
   140006064:	sub    rsp,0x70
   140006068:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006071:	mov    rax,QWORD PTR [rip+0x3b5d8]        # 0x140041650
   140006078:	xor    rax,rsp
   14000607b:	mov    QWORD PTR [rsp+0x68],rax
   140006080:	mov    rsi,r8
   140006083:	mov    rdi,rcx
   140006086:	cmp    QWORD PTR [r8+0x10],0x0
   14000608b:	je     0x140006161
   140006091:	cmp    QWORD PTR [rdx+0x10],0x0
   140006096:	je     0x140006161
   14000609c:	mov    ebx,0x7
   1400060a1:	cmp    QWORD PTR [rdx+0x18],0x8
   1400060a6:	jb     0x1400060ab
   1400060a8:	mov    rdx,QWORD PTR [rdx]
   1400060ab:	mov    r8,rdx
   1400060ae:	xor    edx,edx
   1400060b0:	xor    ecx,ecx
   1400060b2:	call   QWORD PTR [rip+0x3d318]        # 0x1400433d0
   1400060b8:	test   eax,eax
   1400060ba:	je     0x140006139
   1400060bc:	lea    rdx,[rsp+0x28]
   1400060c1:	call   0x140006180
   1400060c6:	nop
   1400060c7:	mov    r8,rsi
   1400060ca:	mov    rdx,rax
   1400060cd:	lea    rcx,[rsp+0x48]
   1400060d2:	call   0x140007ef0
   1400060d7:	nop
   1400060d8:	cmp    QWORD PTR [rsp+0x40],0x8
   1400060de:	jb     0x1400060ea
   1400060e0:	mov    rcx,QWORD PTR [rsp+0x28]
   1400060e5:	call   0x140018a04
   1400060ea:	lea    rcx,[rsp+0x48]
   1400060ef:	cmp    QWORD PTR [rsp+0x60],0x8
   1400060f5:	cmovae rcx,QWORD PTR [rsp+0x48]
   1400060fb:	call   QWORD PTR [rip+0x28f97]        # 0x14002f098
   140006101:	test   eax,eax
   140006103:	jne    0x140006122
   140006105:	lea    rcx,[rsp+0x48]
   14000610a:	cmp    QWORD PTR [rsp+0x60],0x8
   140006110:	cmovae rcx,QWORD PTR [rsp+0x48]
   140006116:	xor    edx,edx
   140006118:	lea    r8d,[rax+0x4]
   14000611c:	call   QWORD PTR [rip+0x28f7e]        # 0x14002f0a0
   140006122:	mov    ebx,0x1
   140006127:	cmp    QWORD PTR [rsp+0x60],0x8
   14000612d:	jb     0x140006139
   14000612f:	mov    rcx,QWORD PTR [rsp+0x48]
   140006134:	call   0x140018a04
   140006139:	mov    rcx,QWORD PTR [rdi+0x8]
   14000613d:	test   rcx,rcx
   140006140:	je     0x14000615d
   140006142:	cmp    ebx,0x1
   140006145:	jne    0x140006151
   140006147:	mov    rcx,QWORD PTR [rcx]
   14000614a:	call   QWORD PTR [rcx+0x48]
   14000614d:	test   eax,eax
   14000614f:	jne    0x14000615d
   140006151:	mov    rcx,QWORD PTR [rdi+0x8]
   140006155:	mov    rdx,QWORD PTR [rcx]
   140006158:	mov    ecx,ebx
   14000615a:	call   QWORD PTR [rdx+0x40]
   14000615d:	mov    eax,ebx
   14000615f:	jmp    0x140006166
   140006161:	mov    eax,0x7
   140006166:	mov    rcx,QWORD PTR [rsp+0x68]
   14000616b:	xor    rcx,rsp
   14000616e:	call   0x1400187d0
   140006173:	add    rsp,0x70
   140006177:	pop    rdi
   140006178:	pop    rsi
   140006179:	pop    rbx
   14000617a:	ret    
   14000617b:	int3   
   14000617c:	int3   
   14000617d:	int3   
   14000617e:	int3   
   14000617f:	int3   
   140006180:	mov    r11,rsp
   140006183:	push   rbp
   140006184:	push   r14
   140006186:	push   r15
   140006188:	lea    rbp,[r11-0x5f]
   14000618c:	sub    rsp,0x90
   140006193:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   14000619b:	mov    QWORD PTR [r11+0x8],rbx
   14000619f:	mov    QWORD PTR [r11+0x18],rsi
   1400061a3:	mov    QWORD PTR [r11+0x20],rdi
   1400061a7:	mov    rax,QWORD PTR [rip+0x3b4a2]        # 0x140041650
   1400061ae:	xor    rax,rsp
   1400061b1:	mov    QWORD PTR [rbp+0x3f],rax
   1400061b5:	mov    rdi,rdx
   1400061b8:	xor    r15d,r15d
   1400061bb:	mov    DWORD PTR [rbp+0x7],r15d
   1400061bf:	mov    DWORD PTR [rbp+0x17],r15d
   1400061c3:	lea    rax,[rbp+0x17]
   1400061c7:	mov    QWORD PTR [r11-0x80],rax
   1400061cb:	mov    DWORD PTR [rsp+0x20],r15d
   1400061d0:	xor    r9d,r9d
   1400061d3:	xor    edx,edx
   1400061d5:	lea    r8d,[r15+0x1]
   1400061d9:	xor    ecx,ecx
   1400061db:	call   QWORD PTR [rip+0x3d1f7]        # 0x1400433d8
   1400061e1:	mov    ecx,DWORD PTR [rbp+0x17]
   1400061e4:	mov    eax,0x2
   1400061e9:	mul    rcx
   1400061ec:	mov    rbx,0xffffffffffffffff
   1400061f3:	cmovo  rax,rbx
   1400061f7:	mov    rcx,rax
   1400061fa:	call   0x1400140cc
   1400061ff:	mov    rsi,rax
   140006202:	xor    ecx,ecx
   140006204:	call   QWORD PTR [rip+0x28ef6]        # 0x14002f100
   14000620a:	lea    rax,[rbp+0x17]
   14000620e:	mov    QWORD PTR [rsp+0x28],rax
   140006213:	mov    eax,DWORD PTR [rbp+0x17]
   140006216:	mov    DWORD PTR [rsp+0x20],eax
   14000621a:	mov    r9,rsi
   14000621d:	xor    edx,edx
   14000621f:	lea    r8d,[r15+0x1]
   140006223:	xor    ecx,ecx
   140006225:	call   QWORD PTR [rip+0x3d1ad]        # 0x1400433d8
   14000622b:	mov    r14d,eax
   14000622e:	mov    QWORD PTR [rbp+0x37],0x7
   140006236:	mov    QWORD PTR [rbp+0x2f],r15
   14000623a:	mov    WORD PTR [rbp+0x1f],r15w
   14000623f:	cmp    WORD PTR [rsi],r15w
   140006243:	jne    0x140006250
   140006245:	mov    ebx,r15d
   140006248:	jmp    0x14000625a
   14000624a:	nop    WORD PTR [rax+rax*1+0x0]
   140006250:	inc    rbx
   140006253:	cmp    WORD PTR [rsi+rbx*2],r15w
   140006258:	jne    0x140006250
   14000625a:	mov    r8,rbx
   14000625d:	mov    rdx,rsi
   140006260:	lea    rcx,[rbp+0x1f]
   140006264:	call   0x140003d90
   140006269:	nop
   14000626a:	mov    rcx,rsi
   14000626d:	call   0x140019610
   140006272:	test   r14d,r14d
   140006275:	jne    0x14000629b
   140006277:	mov    QWORD PTR [rdi+0x18],0x7
   14000627f:	mov    QWORD PTR [rdi+0x10],r15
   140006283:	mov    WORD PTR [rdi],r15w
   140006287:	xor    r8d,r8d
   14000628a:	lea    rdx,[rip+0x324bf]        # 0x140038750
   140006291:	mov    rcx,rdi
   140006294:	call   0x140003d90
   140006299:	jmp    0x1400062f5
   14000629b:	mov    QWORD PTR [rbp-0x1],0x7
   1400062a3:	mov    QWORD PTR [rbp-0x9],r15
   1400062a7:	mov    WORD PTR [rbp-0x19],r15w
   1400062ac:	mov    r8d,0x1
   1400062b2:	lea    rdx,[rip+0x3249b]        # 0x140038754
   1400062b9:	lea    rcx,[rbp-0x19]
   1400062bd:	call   0x140003d90
   1400062c2:	nop
   1400062c3:	lea    r8,[rbp-0x19]
   1400062c7:	lea    rdx,[rbp+0x1f]
   1400062cb:	mov    rcx,rdi
   1400062ce:	call   0x140007f30
   1400062d3:	nop
   1400062d4:	cmp    QWORD PTR [rbp-0x1],0x8
   1400062d9:	jb     0x1400062e4
   1400062db:	mov    rcx,QWORD PTR [rbp-0x19]
   1400062df:	call   0x140018a04
   1400062e4:	mov    QWORD PTR [rbp-0x1],0x7
   1400062ec:	mov    QWORD PTR [rbp-0x9],r15
   1400062f0:	mov    WORD PTR [rbp-0x19],r15w
   1400062f5:	cmp    QWORD PTR [rbp+0x37],0x8
   1400062fa:	jb     0x140006305
   1400062fc:	mov    rcx,QWORD PTR [rbp+0x1f]
   140006300:	call   0x140018a04
   140006305:	mov    rax,rdi
   140006308:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000630c:	xor    rcx,rsp
   14000630f:	call   0x1400187d0
   140006314:	lea    r11,[rsp+0x90]
   14000631c:	mov    rbx,QWORD PTR [r11+0x20]
   140006320:	mov    rsi,QWORD PTR [r11+0x30]
   140006324:	mov    rdi,QWORD PTR [r11+0x38]
   140006328:	mov    rsp,r11
   14000632b:	pop    r15
   14000632d:	pop    r14
   14000632f:	pop    rbp
   140006330:	ret    
   140006331:	int3   
   140006332:	int3   
   140006333:	int3   
   140006334:	int3   
   140006335:	int3   
   140006336:	int3   
   140006337:	int3   
   140006338:	int3   
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	rex push rbp
   140006342:	push   rbx
   140006343:	push   rsi
   140006344:	push   rdi
   140006345:	push   r14
   140006347:	lea    rbp,[rsp-0x30]
   14000634c:	sub    rsp,0x130
   140006353:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
   14000635b:	mov    rax,QWORD PTR [rip+0x3b2ee]        # 0x140041650
   140006362:	xor    rax,rsp
   140006365:	mov    QWORD PTR [rbp+0x28],rax
   140006369:	mov    rbx,r8
   14000636c:	mov    rdi,rdx
   14000636f:	mov    rsi,rcx
   140006372:	mov    QWORD PTR [rsp+0x58],0x7
   14000637b:	xor    r14d,r14d
   14000637e:	mov    QWORD PTR [rsp+0x50],r14
   140006383:	mov    WORD PTR [rsp+0x40],r14w
   140006389:	lea    r8d,[r14+0x1]
   14000638d:	lea    rdx,[rip+0x323c4]        # 0x140038758
   140006394:	lea    rcx,[rsp+0x40]
   140006399:	call   0x140003d90
   14000639e:	nop
   14000639f:	mov    QWORD PTR [rbp-0x68],0x7
   1400063a7:	mov    QWORD PTR [rbp-0x70],r14
   1400063ab:	mov    WORD PTR [rbp-0x80],r14w
   1400063b0:	lea    r8d,[r14+0x6]
   1400063b4:	lea    rdx,[rip+0x323a5]        # 0x140038760
   1400063bb:	lea    rcx,[rbp-0x80]
   1400063bf:	call   0x140003d90
   1400063c4:	nop
   1400063c5:	mov    QWORD PTR [rsp+0x78],0x7
   1400063ce:	mov    QWORD PTR [rsp+0x70],r14
   1400063d3:	mov    WORD PTR [rsp+0x60],r14w
   1400063d9:	lea    r8d,[r14+0x8]
   1400063dd:	lea    rdx,[rip+0x3238c]        # 0x140038770
   1400063e4:	lea    rcx,[rsp+0x60]
   1400063e9:	call   0x140003d90
   1400063ee:	nop
   1400063ef:	mov    r8,rbx
   1400063f2:	lea    rdx,[rsp+0x60]
   1400063f7:	lea    rcx,[rbp-0x40]
   1400063fb:	call   0x140007ef0
   140006400:	nop
   140006401:	lea    r8,[rbp-0x80]
   140006405:	mov    rdx,rax
   140006408:	lea    rcx,[rbp-0x20]
   14000640c:	call   0x140007f70
   140006411:	nop
   140006412:	mov    r8,rdi
   140006415:	mov    rdx,rax
   140006418:	lea    rcx,[rbp-0x60]
   14000641c:	call   0x140007ef0
   140006421:	nop
   140006422:	lea    r8,[rsp+0x40]
   140006427:	mov    rdx,rax
   14000642a:	lea    rcx,[rbp+0x8]
   14000642e:	call   0x140007f70
   140006433:	nop
   140006434:	cmp    QWORD PTR [rbp-0x48],0x8
   140006439:	jb     0x140006444
   14000643b:	mov    rcx,QWORD PTR [rbp-0x60]
   14000643f:	call   0x140018a04
   140006444:	mov    QWORD PTR [rbp-0x48],0x7
   14000644c:	mov    QWORD PTR [rbp-0x50],r14
   140006450:	mov    WORD PTR [rbp-0x60],r14w
   140006455:	cmp    QWORD PTR [rbp-0x8],0x8
   14000645a:	jb     0x140006465
   14000645c:	mov    rcx,QWORD PTR [rbp-0x20]
   140006460:	call   0x140018a04
   140006465:	mov    QWORD PTR [rbp-0x8],0x7
   14000646d:	mov    QWORD PTR [rbp-0x10],r14
   140006471:	mov    WORD PTR [rbp-0x20],r14w
   140006476:	cmp    QWORD PTR [rbp-0x28],0x8
   14000647b:	jb     0x140006486
   14000647d:	mov    rcx,QWORD PTR [rbp-0x40]
   140006481:	call   0x140018a04
   140006486:	mov    QWORD PTR [rbp-0x28],0x7
   14000648e:	mov    QWORD PTR [rbp-0x30],r14
   140006492:	mov    WORD PTR [rbp-0x40],r14w
   140006497:	cmp    QWORD PTR [rsp+0x78],0x8
   14000649d:	jb     0x1400064a9
   14000649f:	mov    rcx,QWORD PTR [rsp+0x60]
   1400064a4:	call   0x140018a04
   1400064a9:	mov    QWORD PTR [rsp+0x78],0x7
   1400064b2:	mov    QWORD PTR [rsp+0x70],r14
   1400064b7:	mov    WORD PTR [rsp+0x60],r14w
   1400064bd:	cmp    QWORD PTR [rbp-0x68],0x8
   1400064c2:	jb     0x1400064cd
   1400064c4:	mov    rcx,QWORD PTR [rbp-0x80]
   1400064c8:	call   0x140018a04
   1400064cd:	mov    QWORD PTR [rbp-0x68],0x7
   1400064d5:	mov    QWORD PTR [rbp-0x70],r14
   1400064d9:	mov    WORD PTR [rbp-0x80],r14w
   1400064de:	cmp    QWORD PTR [rsp+0x58],0x8
   1400064e4:	jb     0x1400064f0
   1400064e6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400064eb:	call   0x140018a04
   1400064f0:	mov    QWORD PTR [rsp+0x58],0x7
   1400064f9:	mov    QWORD PTR [rsp+0x50],r14
   1400064fe:	mov    WORD PTR [rsp+0x40],r14w
   140006504:	xor    ecx,ecx
   140006506:	call   QWORD PTR [rip+0x28bf4]        # 0x14002f100
   14000650c:	lea    r8,[rbp+0x8]
   140006510:	cmp    QWORD PTR [rbp+0x20],0x8
   140006515:	cmovae r8,QWORD PTR [rbp+0x8]
   14000651a:	mov    rax,QWORD PTR [rsi+0x20]
   14000651e:	mov    r10,QWORD PTR [rax+0x88]
   140006525:	test   r10,r10
   140006528:	jne    0x14000652e
   14000652a:	xor    bl,bl
   14000652c:	jmp    0x14000653a
   14000652e:	xor    r9d,r9d
   140006531:	xor    edx,edx
   140006533:	xor    ecx,ecx
   140006535:	call   r10
   140006538:	mov    bl,0x1
   14000653a:	mov    QWORD PTR [rsp+0x38],0xf
   140006543:	mov    QWORD PTR [rsp+0x30],r14
   140006548:	mov    BYTE PTR [rsp+0x20],0x0
   14000654d:	mov    r8d,0x37
   140006553:	lea    rdx,[rip+0x3222e]        # 0x140038788
   14000655a:	lea    rcx,[rsp+0x20]
   14000655f:	call   0x140008e50
   140006564:	nop
   140006565:	call   QWORD PTR [rip+0x28c35]        # 0x14002f1a0
   14000656b:	mov    r8d,r14d
   14000656e:	test   eax,eax
   140006570:	sete   r8b
   140006574:	lea    r9,[rsp+0x20]
   140006579:	movzx  edx,bl
   14000657c:	mov    rcx,rsi
   14000657f:	call   0x1400059c0
   140006584:	mov    ebx,eax
   140006586:	cmp    QWORD PTR [rsp+0x38],0x10
   14000658c:	jb     0x140006598
   14000658e:	mov    rcx,QWORD PTR [rsp+0x20]
   140006593:	call   0x140018a04
   140006598:	mov    QWORD PTR [rsp+0x38],0xf
   1400065a1:	mov    QWORD PTR [rsp+0x30],r14
   1400065a6:	mov    BYTE PTR [rsp+0x20],0x0
   1400065ab:	cmp    QWORD PTR [rbp+0x20],0x8
   1400065b0:	jb     0x1400065bb
   1400065b2:	mov    rcx,QWORD PTR [rbp+0x8]
   1400065b6:	call   0x140018a04
   1400065bb:	mov    eax,ebx
   1400065bd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400065c1:	xor    rcx,rsp
   1400065c4:	call   0x1400187d0
   1400065c9:	add    rsp,0x130
   1400065d0:	pop    r14
   1400065d2:	pop    rdi
   1400065d3:	pop    rsi
   1400065d4:	pop    rbx
   1400065d5:	pop    rbp
   1400065d6:	ret    
   1400065d7:	int3   
   1400065d8:	int3   
   1400065d9:	int3   
   1400065da:	int3   
   1400065db:	int3   
   1400065dc:	int3   
   1400065dd:	int3   
   1400065de:	int3   
   1400065df:	int3   
   1400065e0:	rex push rdi
   1400065e2:	sub    rsp,0x50
   1400065e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400065ef:	mov    QWORD PTR [rsp+0x60],rbx
   1400065f4:	mov    rbx,rdx
   1400065f7:	mov    rdi,rcx
   1400065fa:	xor    ecx,ecx
   1400065fc:	call   QWORD PTR [rip+0x28afe]        # 0x14002f100
   140006602:	cmp    QWORD PTR [rbx+0x18],0x8
   140006607:	jb     0x14000660c
   140006609:	mov    rbx,QWORD PTR [rbx]
   14000660c:	mov    r8,rbx
   14000660f:	xor    edx,edx
   140006611:	xor    ecx,ecx
   140006613:	call   QWORD PTR [rip+0x3cdc7]        # 0x1400433e0
   140006619:	cmp    eax,0x1
   14000661c:	sete   bl
   14000661f:	mov    QWORD PTR [rsp+0x40],0xf
   140006628:	mov    QWORD PTR [rsp+0x38],0x0
   140006631:	mov    BYTE PTR [rsp+0x28],0x0
   140006636:	mov    r8d,0x36
   14000663c:	lea    rdx,[rip+0x3217d]        # 0x1400387c0
   140006643:	lea    rcx,[rsp+0x28]
   140006648:	call   0x140008e50
   14000664d:	nop
   14000664e:	movzx  r8d,bl
   140006652:	lea    r9,[rsp+0x28]
   140006657:	mov    dl,0x1
   140006659:	mov    rcx,rdi
   14000665c:	call   0x1400059c0
   140006661:	mov    ebx,eax
   140006663:	cmp    QWORD PTR [rsp+0x40],0x10
   140006669:	jb     0x140006677
   14000666b:	mov    rcx,QWORD PTR [rsp+0x28]
   140006670:	call   0x140018a04
   140006675:	mov    eax,ebx
   140006677:	mov    rbx,QWORD PTR [rsp+0x60]
   14000667c:	add    rsp,0x50
   140006680:	pop    rdi
   140006681:	ret    
   140006682:	int3   
   140006683:	int3   
   140006684:	int3   
   140006685:	int3   
   140006686:	int3   
   140006687:	int3   
   140006688:	int3   
   140006689:	int3   
   14000668a:	int3   
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	mov    rax,rsp
   140006693:	push   rbp
   140006694:	push   rdi
   140006695:	push   r12
   140006697:	push   r14
   140006699:	push   r15
   14000669b:	lea    rbp,[rax-0x5f]
   14000669f:	sub    rsp,0xa0
   1400066a6:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   1400066ae:	mov    QWORD PTR [rax+0x8],rbx
   1400066b2:	mov    QWORD PTR [rax+0x18],rsi
   1400066b6:	mov    rax,QWORD PTR [rip+0x3af93]        # 0x140041650
   1400066bd:	xor    rax,rsp
   1400066c0:	mov    QWORD PTR [rbp+0x2f],rax
   1400066c4:	mov    r14,rdx
   1400066c7:	mov    rcx,rdx
   1400066ca:	call   0x1400077b0
   1400066cf:	mov    QWORD PTR [rbp+0x1f],0x7
   1400066d7:	xor    r15d,r15d
   1400066da:	mov    QWORD PTR [rbp+0x17],r15
   1400066de:	mov    WORD PTR [rbp+0x7],r15w
   1400066e3:	lea    r8d,[r15+0x6]
   1400066e7:	lea    rdx,[rip+0x3210a]        # 0x1400387f8
   1400066ee:	lea    rcx,[rbp+0x7]
   1400066f2:	call   0x140003d90
   1400066f7:	nop
   1400066f8:	lea    rdx,[rip+0x3c411]        # 0x140042b10
   1400066ff:	cmp    QWORD PTR [rip+0x3c421],0x8        # 0x140042b28
   140006707:	cmovae rdx,QWORD PTR [rip+0x3c401]        # 0x140042b10
   14000670f:	lea    r8,[rbp-0x9]
   140006713:	mov    rcx,0xffffffff80000002
   14000671a:	call   QWORD PTR [rip+0x28950]        # 0x14002f070
   140006720:	test   eax,eax
   140006722:	jne    0x14000686f
   140006728:	lea    rdx,[rbp+0x7]
   14000672c:	cmp    QWORD PTR [rbp+0x1f],0x8
   140006731:	cmovae rdx,QWORD PTR [rbp+0x7]
   140006736:	lea    rax,[rbp-0x11]
   14000673a:	mov    QWORD PTR [rsp+0x28],rax
   14000673f:	mov    QWORD PTR [rsp+0x20],r15
   140006744:	lea    r9,[rbp-0x1]
   140006748:	xor    r8d,r8d
   14000674b:	mov    rcx,QWORD PTR [rbp-0x9]
   14000674f:	call   QWORD PTR [rip+0x28913]        # 0x14002f068
   140006755:	test   eax,eax
   140006757:	jne    0x14000686f
   14000675d:	cmp    DWORD PTR [rbp-0x1],0x7
   140006761:	jne    0x14000686f
   140006767:	mov    ecx,DWORD PTR [rbp-0x11]
   14000676a:	mov    eax,0x2
   14000676f:	mul    rcx
   140006772:	mov    r12,0xffffffffffffffff
   140006779:	cmovo  rax,r12
   14000677d:	mov    rcx,rax
   140006780:	call   0x1400140cc
   140006785:	mov    rbx,rax
   140006788:	mov    QWORD PTR [rbp+0x27],rax
   14000678c:	lea    rdx,[rbp+0x7]
   140006790:	cmp    QWORD PTR [rbp+0x1f],0x8
   140006795:	cmovae rdx,QWORD PTR [rbp+0x7]
   14000679a:	lea    rax,[rbp-0x11]
   14000679e:	mov    QWORD PTR [rsp+0x28],rax
   1400067a3:	mov    QWORD PTR [rsp+0x20],rbx
   1400067a8:	xor    r9d,r9d
   1400067ab:	xor    r8d,r8d
   1400067ae:	mov    rcx,QWORD PTR [rbp-0x9]
   1400067b2:	call   QWORD PTR [rip+0x288b0]        # 0x14002f068
   1400067b8:	test   eax,eax
   1400067ba:	jne    0x140006862
   1400067c0:	mov    esi,r15d
   1400067c3:	mov    rdi,r12
   1400067c6:	inc    rdi
   1400067c9:	cmp    WORD PTR [rbx+rdi*2],si
   1400067cd:	jne    0x1400067c6
   1400067cf:	test   rdi,rdi
   1400067d2:	je     0x140006851
   1400067d4:	mov    rax,rbx
   1400067d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400067e0:	mov    QWORD PTR [rbp-0x21],0x7
   1400067e8:	mov    QWORD PTR [rbp-0x29],r15
   1400067ec:	mov    WORD PTR [rbp-0x39],r15w
   1400067f1:	cmp    WORD PTR [rax],0x0
   1400067f5:	jne    0x1400067fc
   1400067f7:	mov    r8,r15
   1400067fa:	jmp    0x14000680b
   1400067fc:	mov    r8,r12
   1400067ff:	nop
   140006800:	inc    r8
   140006803:	cmp    WORD PTR [rax+r8*2],0x0
   140006809:	jne    0x140006800
   14000680b:	mov    rdx,rax
   14000680e:	lea    rcx,[rbp-0x39]
   140006812:	call   0x140003d90
   140006817:	nop
   140006818:	lea    rdx,[rbp-0x39]
   14000681c:	mov    rcx,r14
   14000681f:	call   0x1400076c0
   140006824:	nop
   140006825:	cmp    QWORD PTR [rbp-0x21],0x8
   14000682a:	jb     0x140006835
   14000682c:	mov    rcx,QWORD PTR [rbp-0x39]
   140006830:	call   0x140018a04
   140006835:	inc    rdi
   140006838:	add    rsi,rdi
   14000683b:	lea    rax,[rbx+rsi*2]
   14000683f:	mov    rdi,r12
   140006842:	inc    rdi
   140006845:	cmp    WORD PTR [rax+rdi*2],0x0
   14000684a:	jne    0x140006842
   14000684c:	test   rdi,rdi
   14000684f:	jne    0x1400067e0
   140006851:	test   rbx,rbx
   140006854:	je     0x14000685e
   140006856:	mov    rcx,rbx
   140006859:	call   0x140019610
   14000685e:	mov    bl,0x1
   140006860:	jmp    0x140006871
   140006862:	test   rbx,rbx
   140006865:	je     0x14000686f
   140006867:	mov    rcx,rbx
   14000686a:	call   0x140019610
   14000686f:	xor    bl,bl
   140006871:	cmp    QWORD PTR [rbp+0x1f],0x8
   140006876:	jb     0x140006881
   140006878:	mov    rcx,QWORD PTR [rbp+0x7]
   14000687c:	call   0x140018a04
   140006881:	movzx  eax,bl
   140006884:	mov    rcx,QWORD PTR [rbp+0x2f]
   140006888:	xor    rcx,rsp
   14000688b:	call   0x1400187d0
   140006890:	lea    r11,[rsp+0xa0]
   140006898:	mov    rbx,QWORD PTR [r11+0x30]
   14000689c:	mov    rsi,QWORD PTR [r11+0x40]
   1400068a0:	mov    rsp,r11
   1400068a3:	pop    r15
   1400068a5:	pop    r14
   1400068a7:	pop    r12
   1400068a9:	pop    rdi
   1400068aa:	pop    rbp
   1400068ab:	ret    
   1400068ac:	int3   
   1400068ad:	int3   
   1400068ae:	int3   
   1400068af:	int3   
   1400068b0:	mov    r11,rsp
   1400068b3:	push   rdi
   1400068b4:	sub    rsp,0x70
   1400068b8:	mov    QWORD PTR [r11-0x58],0xfffffffffffffffe
   1400068c0:	mov    QWORD PTR [r11+0x18],rbx
   1400068c4:	mov    rax,QWORD PTR [rip+0x3ad85]        # 0x140041650
   1400068cb:	xor    rax,rsp
   1400068ce:	mov    QWORD PTR [rsp+0x68],rax
   1400068d3:	mov    r8,rdx
   1400068d6:	mov    rbx,rcx
   1400068d9:	mov    QWORD PTR [r11-0x18],0xf
   1400068e1:	xor    edi,edi
   1400068e3:	mov    QWORD PTR [r11-0x20],rdi
   1400068e7:	mov    BYTE PTR [rsp+0x48],dil
   1400068ec:	lea    rdx,[rcx+0x28]
   1400068f0:	lea    rcx,[r11-0x50]
   1400068f4:	call   0x140007fe0
   1400068f9:	nop
   1400068fa:	lea    r8,[rsp+0x48]
   1400068ff:	lea    rdx,[rsp+0x28]
   140006904:	mov    rcx,rbx
   140006907:	call   0x140006a30
   14000690c:	test   al,al
   14000690e:	jne    0x140006914
   140006910:	xor    bl,bl
   140006912:	jmp    0x140006921
   140006914:	lea    rdx,[rsp+0x48]
   140006919:	call   0x140006980
   14000691e:	movzx  ebx,al
   140006921:	cmp    QWORD PTR [rsp+0x40],0x8
   140006927:	jb     0x140006933
   140006929:	mov    rcx,QWORD PTR [rsp+0x28]
   14000692e:	call   0x140018a04
   140006933:	mov    QWORD PTR [rsp+0x40],0x7
   14000693c:	mov    QWORD PTR [rsp+0x38],rdi
   140006941:	mov    WORD PTR [rsp+0x28],di
   140006946:	cmp    QWORD PTR [rsp+0x60],0x10
   14000694c:	jb     0x140006958
   14000694e:	mov    rcx,QWORD PTR [rsp+0x48]
   140006953:	call   0x140018a04
   140006958:	movzx  eax,bl
   14000695b:	mov    rcx,QWORD PTR [rsp+0x68]
   140006960:	xor    rcx,rsp
   140006963:	call   0x1400187d0
   140006968:	mov    rbx,QWORD PTR [rsp+0x90]
   140006970:	add    rsp,0x70
   140006974:	pop    rdi
   140006975:	ret    
   140006976:	int3   
   140006977:	int3   
   140006978:	int3   
   140006979:	int3   
   14000697a:	int3   
   14000697b:	int3   
   14000697c:	int3   
   14000697d:	int3   
   14000697e:	int3   
   14000697f:	int3   
   140006980:	mov    QWORD PTR [rsp+0x8],rbx
   140006985:	mov    QWORD PTR [rsp+0x10],rbp
   14000698a:	mov    QWORD PTR [rsp+0x18],rsi
   14000698f:	push   rdi
   140006990:	push   r14
   140006992:	push   r15
   140006994:	sub    rsp,0x20
   140006998:	mov    rbp,QWORD PTR [rdx+0x18]
   14000699c:	mov    rsi,QWORD PTR [rdx+0x10]
   1400069a0:	mov    r14,rdx
   1400069a3:	lea    rbx,[rip+0x3c1b6]        # 0x140042b60
   1400069aa:	lea    r15,[rip+0x3c21f]        # 0x140042bd0
   1400069b1:	cmp    rbp,0x10
   1400069b5:	jb     0x1400069bc
   1400069b7:	mov    rdx,QWORD PTR [r14]
   1400069ba:	jmp    0x1400069bf
   1400069bc:	mov    rdx,r14
   1400069bf:	cmp    QWORD PTR [rbx+0x8],0x10
   1400069c4:	mov    rdi,QWORD PTR [rbx]
   1400069c7:	jb     0x1400069cf
   1400069c9:	mov    rcx,QWORD PTR [rbx-0x10]
   1400069cd:	jmp    0x1400069d3
   1400069cf:	lea    rcx,[rbx-0x10]
   1400069d3:	cmp    rdi,rsi
   1400069d6:	mov    r8,rsi
   1400069d9:	cmovb  r8,rdi
   1400069dd:	test   r8,r8
   1400069e0:	jne    0x1400069e6
   1400069e2:	xor    eax,eax
   1400069e4:	jmp    0x1400069eb
   1400069e6:	call   0x14001e1d0
   1400069eb:	cdqe   
   1400069ed:	test   rax,rax
   1400069f0:	jne    0x1400069fd
   1400069f2:	cmp    rdi,rsi
   1400069f5:	jb     0x140006a01
   1400069f7:	cmp    rdi,rsi
   1400069fa:	setne  al
   1400069fd:	test   eax,eax
   1400069ff:	je     0x140006a29
   140006a01:	add    rbx,0x20
   140006a05:	lea    rax,[rbx-0x10]
   140006a09:	cmp    rax,r15
   140006a0c:	jne    0x1400069b1
   140006a0e:	xor    al,al
   140006a10:	mov    rbx,QWORD PTR [rsp+0x40]
   140006a15:	mov    rbp,QWORD PTR [rsp+0x48]
   140006a1a:	mov    rsi,QWORD PTR [rsp+0x50]
   140006a1f:	add    rsp,0x20
   140006a23:	pop    r15
   140006a25:	pop    r14
   140006a27:	pop    rdi
   140006a28:	ret    
   140006a29:	mov    al,0x1
   140006a2b:	jmp    0x140006a10
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	rex push rbp
   140006a32:	push   rsi
   140006a33:	push   rdi
   140006a34:	push   r12
   140006a36:	push   r13
   140006a38:	push   r14
   140006a3a:	push   r15
   140006a3c:	lea    rbp,[rsp-0x3d0]
   140006a44:	sub    rsp,0x4d0
   140006a4b:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140006a54:	mov    QWORD PTR [rsp+0x528],rbx
   140006a5c:	mov    rax,QWORD PTR [rip+0x3abed]        # 0x140041650
   140006a63:	xor    rax,rsp
   140006a66:	mov    QWORD PTR [rbp+0x3c0],rax
   140006a6d:	mov    r15,r8
   140006a70:	mov    QWORD PTR [rsp+0x48],r8
   140006a75:	mov    rbx,rdx
   140006a78:	mov    rdi,rcx
   140006a7b:	xor    r14d,r14d
   140006a7e:	mov    QWORD PTR [r8+0x10],r14
   140006a82:	cmp    QWORD PTR [r8+0x18],0x10
   140006a87:	jb     0x140006a8e
   140006a89:	mov    rax,QWORD PTR [r8]
   140006a8c:	jmp    0x140006a91
   140006a8e:	mov    rax,r8
   140006a91:	mov    BYTE PTR [rax],r14b
   140006a94:	cmp    QWORD PTR [rdx+0x18],0x8
   140006a99:	jb     0x140006aa0
   140006a9b:	mov    rcx,QWORD PTR [rdx]
   140006a9e:	jmp    0x140006aa3
   140006aa0:	mov    rcx,rdx
   140006aa3:	mov    QWORD PTR [rsp+0x30],r14
   140006aa8:	mov    DWORD PTR [rsp+0x28],0x8000000
   140006ab0:	mov    DWORD PTR [rsp+0x20],0x3
   140006ab8:	xor    r9d,r9d
   140006abb:	mov    edx,0x80000000
   140006ac0:	lea    r8d,[r9+0x1]
   140006ac4:	call   QWORD PTR [rip+0x285de]        # 0x14002f0a8
   140006aca:	mov    r13,rax
   140006acd:	cmp    rax,0xffffffffffffffff
   140006ad1:	jne    0x140006b04
   140006ad3:	cmp    QWORD PTR [rbx+0x18],0x8
   140006ad8:	jb     0x140006add
   140006ada:	mov    rbx,QWORD PTR [rbx]
   140006add:	call   QWORD PTR [rip+0x286bd]        # 0x14002f1a0
   140006ae3:	lea    rcx,[rdi+0x18]
   140006ae7:	mov    DWORD PTR [rsp+0x20],eax
   140006aeb:	mov    r9,rbx
   140006aee:	lea    r8,[rip+0x31d1b]        # 0x140038810
   140006af5:	mov    edx,0xc8
   140006afa:	call   0x14000a6d0
   140006aff:	jmp    0x140007140
   140006b04:	mov    QWORD PTR [rbp-0x60],r14
   140006b08:	mov    DWORD PTR [rsp+0x20],0xf0000000
   140006b10:	mov    r9d,0x1
   140006b16:	xor    r8d,r8d
   140006b19:	xor    edx,edx
   140006b1b:	lea    rcx,[rbp-0x60]
   140006b1f:	call   QWORD PTR [rip+0x2853b]        # 0x14002f060
   140006b25:	test   eax,eax
   140006b27:	jne    0x140006b4c
   140006b29:	call   QWORD PTR [rip+0x28671]        # 0x14002f1a0
   140006b2f:	mov    r9d,eax
   140006b32:	lea    rcx,[rdi+0x18]
   140006b36:	lea    r8,[rip+0x31d33]        # 0x140038870
   140006b3d:	mov    edx,0xc8
   140006b42:	call   0x14000a6d0
   140006b47:	jmp    0x140007137
   140006b4c:	mov    QWORD PTR [rbp-0x68],r14
   140006b50:	lea    rax,[rbp-0x68]
   140006b54:	mov    QWORD PTR [rsp+0x20],rax
   140006b59:	xor    r9d,r9d
   140006b5c:	xor    r8d,r8d
   140006b5f:	mov    edx,0x8003
   140006b64:	mov    rcx,QWORD PTR [rbp-0x60]
   140006b68:	call   QWORD PTR [rip+0x284ea]        # 0x14002f058
   140006b6e:	test   eax,eax
   140006b70:	jne    0x140006baa
   140006b72:	call   QWORD PTR [rip+0x28628]        # 0x14002f1a0
   140006b78:	mov    r9d,eax
   140006b7b:	lea    rcx,[rdi+0x18]
   140006b7f:	lea    r8,[rip+0x31cea]        # 0x140038870
   140006b86:	mov    edx,0xc8
   140006b8b:	call   0x14000a6d0
   140006b90:	mov    rcx,r13
   140006b93:	call   QWORD PTR [rip+0x285e7]        # 0x14002f180
   140006b99:	xor    edx,edx
   140006b9b:	mov    rcx,QWORD PTR [rbp-0x60]
   140006b9f:	call   QWORD PTR [rip+0x284ab]        # 0x14002f050
   140006ba5:	jmp    0x140007140
   140006baa:	xor    edx,edx
   140006bac:	mov    r8d,0x400
   140006bb2:	lea    rcx,[rbp-0x40]
   140006bb6:	call   0x14001b980
   140006bbb:	mov    DWORD PTR [rbp-0x6c],r14d
   140006bbf:	mov    QWORD PTR [rsp+0x20],r14
   140006bc4:	lea    r9,[rbp-0x6c]
   140006bc8:	mov    r8d,0x400
   140006bce:	lea    rdx,[rbp-0x40]
   140006bd2:	mov    rcx,r13
   140006bd5:	call   QWORD PTR [rip+0x284d5]        # 0x14002f0b0
   140006bdb:	test   eax,eax
   140006bdd:	je     0x140007103
   140006be3:	mov    r8d,DWORD PTR [rbp-0x6c]
   140006be7:	test   r8d,r8d
   140006bea:	je     0x140006c38
   140006bec:	xor    r9d,r9d
   140006bef:	lea    rdx,[rbp-0x40]
   140006bf3:	mov    rcx,QWORD PTR [rbp-0x68]
   140006bf7:	call   QWORD PTR [rip+0x2844b]        # 0x14002f048
   140006bfd:	test   eax,eax
   140006bff:	je     0x140006c26
   140006c01:	mov    QWORD PTR [rsp+0x20],r14
   140006c06:	lea    r9,[rbp-0x6c]
   140006c0a:	mov    r8d,0x400
   140006c10:	lea    rdx,[rbp-0x40]
   140006c14:	mov    rcx,r13
   140006c17:	call   QWORD PTR [rip+0x28493]        # 0x14002f0b0
   140006c1d:	test   eax,eax
   140006c1f:	jne    0x140006be3
   140006c21:	jmp    0x140007103
   140006c26:	call   QWORD PTR [rip+0x28574]        # 0x14002f1a0
   140006c2c:	lea    r8,[rip+0x31c8d]        # 0x1400388c0
   140006c33:	jmp    0x140007110
   140006c38:	test   eax,eax
   140006c3a:	je     0x140007103
   140006c40:	mov    DWORD PTR [rbp-0x70],0x10
   140006c47:	xor    eax,eax
   140006c49:	mov    QWORD PTR [rsp+0x78],rax
   140006c4e:	mov    QWORD PTR [rbp-0x80],rax
   140006c52:	mov    QWORD PTR [rbp-0x78],rax
   140006c56:	xorps  xmm0,xmm0
   140006c59:	movdqu XMMWORD PTR [rsp+0x78],xmm0
   140006c5f:	mov    rbx,r14
   140006c62:	mov    QWORD PTR [rbp-0x78],rbx
   140006c66:	mov    QWORD PTR [rbp-0x58],rax
   140006c6a:	mov    QWORD PTR [rbp-0x50],rax
   140006c6e:	mov    DWORD PTR [rsp+0x20],r14d
   140006c73:	lea    r9,[rbp-0x70]
   140006c77:	lea    r8,[rbp-0x58]
   140006c7b:	lea    edx,[rax+0x2]
   140006c7e:	mov    rcx,QWORD PTR [rbp-0x68]
   140006c82:	call   QWORD PTR [rip+0x283b0]        # 0x14002f038
   140006c88:	test   eax,eax
   140006c8a:	je     0x1400070cc
   140006c90:	mov    r12d,r14d
   140006c93:	mov    rax,QWORD PTR [rbp-0x80]
   140006c97:	mov    rdi,QWORD PTR [rsp+0x78]
   140006c9c:	cmp    DWORD PTR [rbp-0x70],r14d
   140006ca0:	jbe    0x140006f2c
   140006ca6:	lea    rdx,[rip+0x31fab]        # 0x140038c58
   140006cad:	nop    DWORD PTR [rax]
   140006cb0:	mov    ecx,r12d
   140006cb3:	lea    r15,[rbp-0x58]
   140006cb7:	add    r15,rcx
   140006cba:	movzx  esi,BYTE PTR [r15]
   140006cbe:	shr    rsi,0x4
   140006cc2:	add    rsi,rdx
   140006cc5:	cmp    rsi,rax
   140006cc8:	jae    0x140006d50
   140006cce:	cmp    rdi,rsi
   140006cd1:	ja     0x140006d50
   140006cd3:	sub    rsi,rdi
   140006cd6:	cmp    rax,rbx
   140006cd9:	jne    0x140006d45
   140006cdb:	mov    rcx,rbx
   140006cde:	sub    rcx,rax
   140006ce1:	cmp    rcx,0x1
   140006ce5:	jae    0x140006d45
   140006ce7:	mov    rcx,rdi
   140006cea:	sub    rcx,rax
   140006ced:	dec    rcx
   140006cf0:	cmp    rcx,0x1
   140006cf4:	jb     0x140006ef3
   140006cfa:	sub    rax,rdi
   140006cfd:	inc    rax
   140006d00:	sub    rbx,rdi
   140006d03:	mov    rdx,rbx
   140006d06:	shr    rdx,1
   140006d09:	or     rcx,0xffffffffffffffff
   140006d0d:	sub    rcx,rdx
   140006d10:	cmp    rcx,rbx
   140006d13:	jae    0x140006d1a
   140006d15:	mov    rbx,r14
   140006d18:	jmp    0x140006d1d
   140006d1a:	add    rbx,rdx
   140006d1d:	cmp    rbx,rax
   140006d20:	cmovb  rbx,rax
   140006d24:	mov    rdx,rbx
   140006d27:	lea    rcx,[rsp+0x78]
   140006d2c:	call   0x140007c60
   140006d31:	mov    rbx,QWORD PTR [rbp-0x78]
   140006d35:	mov    rax,QWORD PTR [rbp-0x80]
   140006d39:	mov    rdi,QWORD PTR [rsp+0x78]
   140006d3e:	lea    rdx,[rip+0x31f13]        # 0x140038c58
   140006d45:	test   rax,rax
   140006d48:	je     0x140006dc9
   140006d4a:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   140006d4e:	jmp    0x140006dc7
   140006d50:	cmp    rax,rbx
   140006d53:	jne    0x140006dbf
   140006d55:	mov    rcx,rbx
   140006d58:	sub    rcx,rax
   140006d5b:	cmp    rcx,0x1
   140006d5f:	jae    0x140006dbf
   140006d61:	mov    rcx,rdi
   140006d64:	sub    rcx,rax
   140006d67:	dec    rcx
   140006d6a:	cmp    rcx,0x1
   140006d6e:	jb     0x140006f00
   140006d74:	sub    rax,rdi
   140006d77:	inc    rax
   140006d7a:	sub    rbx,rdi
   140006d7d:	mov    rdx,rbx
   140006d80:	shr    rdx,1
   140006d83:	or     rcx,0xffffffffffffffff
   140006d87:	sub    rcx,rdx
   140006d8a:	cmp    rcx,rbx
   140006d8d:	jae    0x140006d94
   140006d8f:	mov    rbx,r14
   140006d92:	jmp    0x140006d97
   140006d94:	add    rbx,rdx
   140006d97:	cmp    rbx,rax
   140006d9a:	cmovb  rbx,rax
   140006d9e:	mov    rdx,rbx
   140006da1:	lea    rcx,[rsp+0x78]
   140006da6:	call   0x140007c60
   140006dab:	mov    rbx,QWORD PTR [rbp-0x78]
   140006daf:	mov    rax,QWORD PTR [rbp-0x80]
   140006db3:	mov    rdi,QWORD PTR [rsp+0x78]
   140006db8:	lea    rdx,[rip+0x31e99]        # 0x140038c58
   140006dbf:	test   rax,rax
   140006dc2:	je     0x140006dc9
   140006dc4:	movzx  ecx,BYTE PTR [rsi]
   140006dc7:	mov    BYTE PTR [rax],cl
   140006dc9:	inc    rax
   140006dcc:	mov    QWORD PTR [rbp-0x80],rax
   140006dd0:	movzx  esi,BYTE PTR [r15]
   140006dd4:	and    esi,0xf
   140006dd7:	add    rsi,rdx
   140006dda:	cmp    rsi,rax
   140006ddd:	jae    0x140006e65
   140006de3:	cmp    rdi,rsi
   140006de6:	ja     0x140006e65
   140006de8:	sub    rsi,rdi
   140006deb:	cmp    rax,rbx
   140006dee:	jne    0x140006e5a
   140006df0:	mov    rcx,rbx
   140006df3:	sub    rcx,rax
   140006df6:	cmp    rcx,0x1
   140006dfa:	jae    0x140006e5a
   140006dfc:	mov    rcx,rdi
   140006dff:	sub    rcx,rax
   140006e02:	dec    rcx
   140006e05:	cmp    rcx,0x1
   140006e09:	jb     0x140006f0d
   140006e0f:	sub    rax,rdi
   140006e12:	inc    rax
   140006e15:	sub    rbx,rdi
   140006e18:	mov    rdx,rbx
   140006e1b:	shr    rdx,1
   140006e1e:	or     rcx,0xffffffffffffffff
   140006e22:	sub    rcx,rdx
   140006e25:	cmp    rcx,rbx
   140006e28:	jae    0x140006e2f
   140006e2a:	mov    rbx,r14
   140006e2d:	jmp    0x140006e32
   140006e2f:	add    rbx,rdx
   140006e32:	cmp    rbx,rax
   140006e35:	cmovb  rbx,rax
   140006e39:	mov    rdx,rbx
   140006e3c:	lea    rcx,[rsp+0x78]
   140006e41:	call   0x140007c60
   140006e46:	mov    rbx,QWORD PTR [rbp-0x78]
   140006e4a:	mov    rax,QWORD PTR [rbp-0x80]
   140006e4e:	mov    rdi,QWORD PTR [rsp+0x78]
   140006e53:	lea    rdx,[rip+0x31dfe]        # 0x140038c58
   140006e5a:	test   rax,rax
   140006e5d:	je     0x140006ede
   140006e5f:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140006e63:	jmp    0x140006edc
   140006e65:	cmp    rax,rbx
   140006e68:	jne    0x140006ed4
   140006e6a:	mov    rcx,rbx
   140006e6d:	sub    rcx,rax
   140006e70:	cmp    rcx,0x1
   140006e74:	jae    0x140006ed4
   140006e76:	mov    rcx,rdi
   140006e79:	sub    rcx,rax
   140006e7c:	dec    rcx
   140006e7f:	cmp    rcx,0x1
   140006e83:	jb     0x140006f1a
   140006e89:	sub    rax,rdi
   140006e8c:	inc    rax
   140006e8f:	sub    rbx,rdi
   140006e92:	mov    rdx,rbx
   140006e95:	shr    rdx,1
   140006e98:	or     rcx,0xffffffffffffffff
   140006e9c:	sub    rcx,rdx
   140006e9f:	cmp    rcx,rbx
   140006ea2:	jae    0x140006ea9
   140006ea4:	mov    rbx,r14
   140006ea7:	jmp    0x140006eac
   140006ea9:	add    rbx,rdx
   140006eac:	cmp    rbx,rax
   140006eaf:	cmovb  rbx,rax
   140006eb3:	mov    rdx,rbx
   140006eb6:	lea    rcx,[rsp+0x78]
   140006ebb:	call   0x140007c60
   140006ec0:	mov    rbx,QWORD PTR [rbp-0x78]
   140006ec4:	mov    rax,QWORD PTR [rbp-0x80]
   140006ec8:	mov    rdi,QWORD PTR [rsp+0x78]
   140006ecd:	lea    rdx,[rip+0x31d84]        # 0x140038c58
   140006ed4:	test   rax,rax
   140006ed7:	je     0x140006ede
   140006ed9:	movzx  ecx,BYTE PTR [rsi]
   140006edc:	mov    BYTE PTR [rax],cl
   140006ede:	inc    rax
   140006ee1:	mov    QWORD PTR [rbp-0x80],rax
   140006ee5:	inc    r12d
   140006ee8:	cmp    r12d,DWORD PTR [rbp-0x70]
   140006eec:	jae    0x140006f27
   140006eee:	jmp    0x140006cb0
   140006ef3:	lea    rcx,[rip+0x31d46]        # 0x140038c40
   140006efa:	call   0x14001405c
   140006eff:	int3   
   140006f00:	lea    rcx,[rip+0x31d39]        # 0x140038c40
   140006f07:	call   0x14001405c
   140006f0c:	int3   
   140006f0d:	lea    rcx,[rip+0x31d2c]        # 0x140038c40
   140006f14:	call   0x14001405c
   140006f19:	int3   
   140006f1a:	lea    rcx,[rip+0x31d1f]        # 0x140038c40
   140006f21:	call   0x14001405c
   140006f26:	int3   
   140006f27:	mov    r15,QWORD PTR [rsp+0x48]
   140006f2c:	mov    BYTE PTR [rsp+0x40],0x0
   140006f31:	lea    rcx,[rsp+0x40]
   140006f36:	cmp    rcx,rax
   140006f39:	jae    0x140006fcf
   140006f3f:	lea    rcx,[rsp+0x40]
   140006f44:	cmp    rdi,rcx
   140006f47:	ja     0x140006fcf
   140006f4d:	lea    rsi,[rsp+0x40]
   140006f52:	sub    rsi,rdi
   140006f55:	cmp    rax,rbx
   140006f58:	jne    0x140006fc2
   140006f5a:	mov    rcx,rbx
   140006f5d:	sub    rcx,rax
   140006f60:	cmp    rcx,0x1
   140006f64:	jae    0x140006fc2
   140006f66:	mov    rcx,rdi
   140006f69:	sub    rcx,rax
   140006f6c:	dec    rcx
   140006f6f:	cmp    rcx,0x1
   140006f73:	jae    0x140006f82
   140006f75:	lea    rcx,[rip+0x31cc4]        # 0x140038c40
   140006f7c:	call   0x14001405c
   140006f81:	int3   
   140006f82:	sub    rax,rdi
   140006f85:	inc    rax
   140006f88:	sub    rbx,rdi
   140006f8b:	mov    rdx,rbx
   140006f8e:	shr    rdx,1
   140006f91:	or     rcx,0xffffffffffffffff
   140006f95:	sub    rcx,rdx
   140006f98:	cmp    rcx,rbx
   140006f9b:	jae    0x140006fa2
   140006f9d:	mov    rbx,r14
   140006fa0:	jmp    0x140006fa5
   140006fa2:	add    rbx,rdx
   140006fa5:	cmp    rbx,rax
   140006fa8:	cmovb  rbx,rax
   140006fac:	mov    rdx,rbx
   140006faf:	lea    rcx,[rsp+0x78]
   140006fb4:	call   0x140007c60
   140006fb9:	mov    rax,QWORD PTR [rbp-0x80]
   140006fbd:	mov    rdi,QWORD PTR [rsp+0x78]
   140006fc2:	test   rax,rax
   140006fc5:	je     0x140007044
   140006fc7:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   140006fcb:	mov    BYTE PTR [rax],cl
   140006fcd:	jmp    0x140007044
   140006fcf:	cmp    rax,rbx
   140006fd2:	jne    0x14000703c
   140006fd4:	mov    rcx,rbx
   140006fd7:	sub    rcx,rax
   140006fda:	cmp    rcx,0x1
   140006fde:	jae    0x14000703c
   140006fe0:	mov    rcx,rdi
   140006fe3:	sub    rcx,rax
   140006fe6:	dec    rcx
   140006fe9:	cmp    rcx,0x1
   140006fed:	jae    0x140006ffc
   140006fef:	lea    rcx,[rip+0x31c4a]        # 0x140038c40
   140006ff6:	call   0x14001405c
   140006ffb:	int3   
   140006ffc:	sub    rax,rdi
   140006fff:	inc    rax
   140007002:	sub    rbx,rdi
   140007005:	mov    rdx,rbx
   140007008:	shr    rdx,1
   14000700b:	or     rcx,0xffffffffffffffff
   14000700f:	sub    rcx,rdx
   140007012:	cmp    rcx,rbx
   140007015:	jae    0x14000701c
   140007017:	mov    rbx,r14
   14000701a:	jmp    0x14000701f
   14000701c:	add    rbx,rdx
   14000701f:	cmp    rbx,rax
   140007022:	cmovb  rbx,rax
   140007026:	mov    rdx,rbx
   140007029:	lea    rcx,[rsp+0x78]
   14000702e:	call   0x140007c60
   140007033:	mov    rax,QWORD PTR [rbp-0x80]
   140007037:	mov    rdi,QWORD PTR [rsp+0x78]
   14000703c:	test   rax,rax
   14000703f:	je     0x140007044
   140007041:	mov    BYTE PTR [rax],0x0
   140007044:	inc    rax
   140007047:	mov    QWORD PTR [rbp-0x80],rax
   14000704b:	mov    QWORD PTR [rsp+0x68],0xf
   140007054:	mov    QWORD PTR [rsp+0x60],r14
   140007059:	mov    BYTE PTR [rsp+0x50],0x0
   14000705e:	cmp    BYTE PTR [rdi],0x0
   140007061:	je     0x14000707a
   140007063:	or     r14,0xffffffffffffffff
   140007067:	nop    WORD PTR [rax+rax*1+0x0]
   140007070:	inc    r14
   140007073:	cmp    BYTE PTR [rdi+r14*1],0x0
   140007078:	jne    0x140007070
   14000707a:	mov    r8,r14
   14000707d:	mov    rdx,rdi
   140007080:	lea    rcx,[rsp+0x50]
   140007085:	call   0x140008e50
   14000708a:	lea    rdx,[rsp+0x50]
   14000708f:	mov    rcx,r15
   140007092:	call   0x1400073d0
   140007097:	cmp    QWORD PTR [rsp+0x68],0x10
   14000709d:	jb     0x1400070a9
   14000709f:	mov    rcx,QWORD PTR [rsp+0x50]
   1400070a4:	call   0x140018a04
   1400070a9:	mov    rcx,QWORD PTR [rbp-0x68]
   1400070ad:	call   QWORD PTR [rip+0x27f8d]        # 0x14002f040
   1400070b3:	xor    edx,edx
   1400070b5:	mov    rcx,QWORD PTR [rbp-0x60]
   1400070b9:	call   QWORD PTR [rip+0x27f91]        # 0x14002f050
   1400070bf:	mov    rcx,r13
   1400070c2:	call   QWORD PTR [rip+0x280b8]        # 0x14002f180
   1400070c8:	mov    bl,0x1
   1400070ca:	jmp    0x1400070f1
   1400070cc:	call   QWORD PTR [rip+0x280ce]        # 0x14002f1a0
   1400070d2:	mov    r9d,eax
   1400070d5:	lea    rcx,[rdi+0x18]
   1400070d9:	lea    r8,[rip+0x31880]        # 0x140038960
   1400070e0:	mov    edx,0xc8
   1400070e5:	call   0x14000a6d0
   1400070ea:	xor    bl,bl
   1400070ec:	mov    rdi,QWORD PTR [rsp+0x78]
   1400070f1:	test   rdi,rdi
   1400070f4:	je     0x1400070fe
   1400070f6:	mov    rcx,rdi
   1400070f9:	call   0x140018a04
   1400070fe:	movzx  eax,bl
   140007101:	jmp    0x140007142
   140007103:	call   QWORD PTR [rip+0x28097]        # 0x14002f1a0
   140007109:	lea    r8,[rip+0x31800]        # 0x140038910
   140007110:	mov    r9d,eax
   140007113:	mov    edx,0xc8
   140007118:	lea    rcx,[rdi+0x18]
   14000711c:	call   0x14000a6d0
   140007121:	xor    edx,edx
   140007123:	mov    rcx,QWORD PTR [rbp-0x60]
   140007127:	call   QWORD PTR [rip+0x27f23]        # 0x14002f050
   14000712d:	mov    rcx,QWORD PTR [rbp-0x68]
   140007131:	call   QWORD PTR [rip+0x27f09]        # 0x14002f040
   140007137:	mov    rcx,r13
   14000713a:	call   QWORD PTR [rip+0x28040]        # 0x14002f180
   140007140:	xor    al,al
   140007142:	mov    rcx,QWORD PTR [rbp+0x3c0]
   140007149:	xor    rcx,rsp
   14000714c:	call   0x1400187d0
   140007151:	mov    rbx,QWORD PTR [rsp+0x528]
   140007159:	add    rsp,0x4d0
   140007160:	pop    r15
   140007162:	pop    r14
   140007164:	pop    r13
   140007166:	pop    r12
   140007168:	pop    rdi
   140007169:	pop    rsi
   14000716a:	pop    rbp
   14000716b:	ret    
   14000716c:	int3   
   14000716d:	int3   
   14000716e:	int3   
   14000716f:	int3   
   140007170:	mov    QWORD PTR [rsp+0x10],rbx
   140007175:	mov    QWORD PTR [rsp+0x18],rbp
   14000717a:	push   rsi
   14000717b:	push   rdi
   14000717c:	push   r14
   14000717e:	sub    rsp,0x70
   140007182:	mov    rax,QWORD PTR [rip+0x3a4c7]        # 0x140041650
   140007189:	xor    rax,rsp
   14000718c:	mov    QWORD PTR [rsp+0x60],rax
   140007191:	mov    rsi,rcx
   140007194:	xor    ebx,ebx
   140007196:	call   QWORD PTR [rip+0x27f1c]        # 0x14002f0b8
   14000719c:	xor    edx,edx
   14000719e:	xor    ecx,ecx
   1400071a0:	mov    r8d,0xf003f
   1400071a6:	mov    ebp,eax
   1400071a8:	call   QWORD PTR [rip+0x27e82]        # 0x14002f030
   1400071ae:	mov    rdi,rax
   1400071b1:	test   rax,rax
   1400071b4:	jne    0x1400071cc
   1400071b6:	call   QWORD PTR [rip+0x27fe4]        # 0x14002f1a0
   1400071bc:	lea    rcx,[rsi+0x18]
   1400071c0:	lea    r8,[rip+0x317e9]        # 0x1400389b0
   1400071c7:	jmp    0x140007336
   1400071cc:	cmp    QWORD PTR [rip+0x3b974],0x8        # 0x140042b48
   1400071d4:	lea    rdx,[rip+0x3b955]        # 0x140042b30
   1400071db:	mov    r8d,0x10024
   1400071e1:	cmovae rdx,QWORD PTR [rip+0x3b947]        # 0x140042b30
   1400071e9:	mov    rcx,rax
   1400071ec:	call   QWORD PTR [rip+0x27e36]        # 0x14002f028
   1400071f2:	mov    rbx,rax
   1400071f5:	test   rax,rax
   1400071f8:	jne    0x140007210
   1400071fa:	call   QWORD PTR [rip+0x27fa0]        # 0x14002f1a0
   140007200:	lea    rcx,[rsi+0x18]
   140007204:	lea    r8,[rip+0x317f5]        # 0x140038a00
   14000720b:	jmp    0x140007336
   140007210:	lea    rax,[rsp+0x30]
   140007215:	lea    r8,[rsp+0x38]
   14000721a:	mov    r9d,0x24
   140007220:	xor    edx,edx
   140007222:	mov    rcx,rbx
   140007225:	mov    QWORD PTR [rsp+0x20],rax
   14000722a:	call   QWORD PTR [rip+0x27df0]        # 0x14002f020
   140007230:	test   eax,eax
   140007232:	jne    0x14000724a
   140007234:	call   QWORD PTR [rip+0x27f66]        # 0x14002f1a0
   14000723a:	lea    rcx,[rsi+0x18]
   14000723e:	lea    r8,[rip+0x3180b]        # 0x140038a50
   140007245:	jmp    0x140007336
   14000724a:	mov    eax,DWORD PTR [rsp+0x3c]
   14000724e:	cmp    eax,0x1
   140007251:	je     0x140007301
   140007257:	cmp    eax,0x3
   14000725a:	je     0x14000728d
   14000725c:	lea    r8,[rsp+0x38]
   140007261:	mov    edx,0x1
   140007266:	mov    rcx,rbx
   140007269:	call   QWORD PTR [rip+0x27da9]        # 0x14002f018
   14000726f:	test   eax,eax
   140007271:	jne    0x140007289
   140007273:	call   QWORD PTR [rip+0x27f27]        # 0x14002f1a0
   140007279:	lea    rcx,[rsi+0x18]
   14000727d:	lea    r8,[rip+0x31814]        # 0x140038a98
   140007284:	jmp    0x140007336
   140007289:	mov    eax,DWORD PTR [rsp+0x3c]
   14000728d:	cmp    eax,0x1
   140007290:	je     0x140007301
   140007292:	mov    r14d,0x3e8
   140007298:	nop    DWORD PTR [rax+rax*1+0x0]
   1400072a0:	mov    ecx,DWORD PTR [rsp+0x50]
   1400072a4:	cmp    ecx,0x2710
   1400072aa:	jbe    0x1400072b3
   1400072ac:	mov    ecx,0x2710
   1400072b1:	jmp    0x1400072ba
   1400072b3:	cmp    ecx,r14d
   1400072b6:	cmovb  ecx,r14d
   1400072ba:	call   QWORD PTR [rip+0x27e00]        # 0x14002f0c0
   1400072c0:	lea    rax,[rsp+0x30]
   1400072c5:	lea    r8,[rsp+0x38]
   1400072ca:	mov    r9d,0x24
   1400072d0:	xor    edx,edx
   1400072d2:	mov    rcx,rbx
   1400072d5:	mov    QWORD PTR [rsp+0x20],rax
   1400072da:	call   QWORD PTR [rip+0x27d40]        # 0x14002f020
   1400072e0:	test   eax,eax
   1400072e2:	je     0x140007362
   1400072e4:	cmp    DWORD PTR [rsp+0x3c],0x1
   1400072e9:	je     0x140007301
   1400072eb:	call   QWORD PTR [rip+0x27dc7]        # 0x14002f0b8
   1400072f1:	sub    eax,ebp
   1400072f3:	cmp    eax,0x4e20
   1400072f8:	ja     0x140007348
   1400072fa:	cmp    DWORD PTR [rsp+0x3c],0x1
   1400072ff:	jne    0x1400072a0
   140007301:	add    rsi,0x18
   140007305:	lea    r8,[rip+0x31854]        # 0x140038b60
   14000730c:	mov    edx,0xc8
   140007311:	mov    rcx,rsi
   140007314:	call   0x14000a6d0
   140007319:	mov    rcx,rbx
   14000731c:	call   QWORD PTR [rip+0x27cee]        # 0x14002f010
   140007322:	test   eax,eax
   140007324:	jne    0x140007375
   140007326:	call   QWORD PTR [rip+0x27e74]        # 0x14002f1a0
   14000732c:	lea    r8,[rip+0x3187d]        # 0x140038bb0
   140007333:	mov    rcx,rsi
   140007336:	mov    r9d,eax
   140007339:	mov    edx,0xc8
   14000733e:	call   0x14000a6d0
   140007343:	xor    sil,sil
   140007346:	jmp    0x14000738c
   140007348:	lea    rcx,[rsi+0x18]
   14000734c:	lea    r8,[rip+0x317d5]        # 0x140038b28
   140007353:	mov    edx,0xc8
   140007358:	call   0x14000a6d0
   14000735d:	xor    sil,sil
   140007360:	jmp    0x14000738c
   140007362:	call   QWORD PTR [rip+0x27e38]        # 0x14002f1a0
   140007368:	lea    rcx,[rsi+0x18]
   14000736c:	lea    r8,[rip+0x3176d]        # 0x140038ae0
   140007373:	jmp    0x140007336
   140007375:	lea    r8,[rip+0x31884]        # 0x140038c00
   14000737c:	mov    edx,0xc8
   140007381:	mov    rcx,rsi
   140007384:	call   0x14000a6d0
   140007389:	mov    sil,0x1
   14000738c:	mov    rcx,rbx
   14000738f:	call   QWORD PTR [rip+0x27ce3]        # 0x14002f078
   140007395:	mov    rcx,rdi
   140007398:	call   QWORD PTR [rip+0x27cda]        # 0x14002f078
   14000739e:	movzx  eax,sil
   1400073a2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400073a7:	xor    rcx,rsp
   1400073aa:	call   0x1400187d0
   1400073af:	lea    r11,[rsp+0x70]
   1400073b4:	mov    rbx,QWORD PTR [r11+0x28]
   1400073b8:	mov    rbp,QWORD PTR [r11+0x30]
   1400073bc:	mov    rsp,r11
   1400073bf:	pop    r14
   1400073c1:	pop    rdi
   1400073c2:	pop    rsi
   1400073c3:	ret    
   1400073c4:	int3   
   1400073c5:	int3   
   1400073c6:	int3   
   1400073c7:	int3   
   1400073c8:	int3   
   1400073c9:	int3   
   1400073ca:	int3   
   1400073cb:	int3   
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	int3   
   1400073cf:	int3   
   1400073d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400073d5:	push   rdi
   1400073d6:	sub    rsp,0x20
   1400073da:	mov    rdi,rdx
   1400073dd:	mov    rbx,rcx
   1400073e0:	cmp    rcx,rdx
   1400073e3:	je     0x140007412
   1400073e5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400073ea:	jb     0x1400073f4
   1400073ec:	mov    rcx,QWORD PTR [rcx]
   1400073ef:	call   0x140018a04
   1400073f4:	mov    QWORD PTR [rbx+0x18],0xf
   1400073fc:	mov    QWORD PTR [rbx+0x10],0x0
   140007404:	mov    rdx,rdi
   140007407:	mov    rcx,rbx
   14000740a:	mov    BYTE PTR [rbx],0x0
   14000740d:	call   0x140008980
   140007412:	mov    rax,rbx
   140007415:	mov    rbx,QWORD PTR [rsp+0x30]
   14000741a:	add    rsp,0x20
   14000741e:	pop    rdi
   14000741f:	ret    
   140007420:	mov    rax,QWORD PTR [rcx+0x10]
   140007424:	ret    
   140007425:	int3   
   140007426:	int3   
   140007427:	int3   
   140007428:	int3   
   140007429:	int3   
   14000742a:	int3   
   14000742b:	int3   
   14000742c:	int3   
   14000742d:	int3   
   14000742e:	int3   
   14000742f:	int3   
   140007430:	xor    eax,eax
   140007432:	cmp    QWORD PTR [rcx+0x10],rax
   140007436:	sete   al
   140007439:	ret    
   14000743a:	int3   
   14000743b:	int3   
   14000743c:	int3   
   14000743d:	int3   
   14000743e:	int3   
   14000743f:	int3   
   140007440:	cmp    QWORD PTR [rdx+0x18],0x8
   140007445:	mov    r9,QWORD PTR [rdx+0x10]
   140007449:	jb     0x14000744e
   14000744b:	mov    rdx,QWORD PTR [rdx]
   14000744e:	jmp    0x140007460
   140007453:	int3   
   140007454:	int3   
   140007455:	int3   
   140007456:	int3   
   140007457:	int3   
   140007458:	int3   
   140007459:	int3   
   14000745a:	int3   
   14000745b:	int3   
   14000745c:	int3   
   14000745d:	int3   
   14000745e:	int3   
   14000745f:	int3   
   140007460:	mov    QWORD PTR [rsp+0x18],rbx
   140007465:	push   rsi
   140007466:	mov    r11,r9
   140007469:	mov    rsi,rdx
   14000746c:	mov    rbx,rcx
   14000746f:	test   r9,r9
   140007472:	jne    0x140007484
   140007474:	cmp    r8,QWORD PTR [rcx+0x10]
   140007478:	ja     0x140007484
   14000747a:	mov    rax,r8
   14000747d:	mov    rbx,QWORD PTR [rsp+0x20]
   140007482:	pop    rsi
   140007483:	ret    
   140007484:	mov    r10,QWORD PTR [rcx+0x10]
   140007488:	mov    QWORD PTR [rsp+0x10],rdi
   14000748d:	mov    QWORD PTR [rsp+0x18],r14
   140007492:	or     r14,0xffffffffffffffff
   140007496:	cmp    r8,r10
   140007499:	jae    0x140007567
   14000749f:	sub    r10,r8
   1400074a2:	cmp    r9,r10
   1400074a5:	ja     0x140007567
   1400074ab:	mov    eax,0x1
   1400074b0:	sub    rax,r9
   1400074b3:	add    r10,rax
   1400074b6:	cmp    QWORD PTR [rcx+0x18],0x8
   1400074bb:	jb     0x1400074c2
   1400074bd:	mov    rax,QWORD PTR [rcx]
   1400074c0:	jmp    0x1400074c5
   1400074c2:	mov    rax,rcx
   1400074c5:	lea    rdi,[rax+r8*2]
   1400074c9:	nop    DWORD PTR [rax+0x0]
   1400074d0:	test   r10,r10
   1400074d3:	je     0x1400074ee
   1400074d5:	movzx  edx,WORD PTR [rsi]
   1400074d8:	mov    rcx,r10
   1400074db:	mov    rax,rdi
   1400074de:	xchg   ax,ax
   1400074e0:	cmp    WORD PTR [rax],dx
   1400074e3:	je     0x1400074f0
   1400074e5:	add    rax,0x2
   1400074e9:	dec    rcx
   1400074ec:	jne    0x1400074e0
   1400074ee:	xor    eax,eax
   1400074f0:	test   rax,rax
   1400074f3:	je     0x140007567
   1400074f5:	test   r11,r11
   1400074f8:	je     0x14000751a
   1400074fa:	mov    rdx,r11
   1400074fd:	mov    r8,rsi
   140007500:	mov    r9,rax
   140007503:	movzx  ecx,WORD PTR [r8]
   140007507:	cmp    WORD PTR [r9],cx
   14000750b:	jne    0x14000753b
   14000750d:	add    r9,0x2
   140007511:	add    r8,0x2
   140007515:	dec    rdx
   140007518:	jne    0x140007503
   14000751a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000751f:	jb     0x140007524
   140007521:	mov    rbx,QWORD PTR [rbx]
   140007524:	mov    rdi,QWORD PTR [rsp+0x10]
   140007529:	mov    r14,QWORD PTR [rsp+0x18]
   14000752e:	sub    rax,rbx
   140007531:	sar    rax,1
   140007534:	mov    rbx,QWORD PTR [rsp+0x20]
   140007539:	pop    rsi
   14000753a:	ret    
   14000753b:	cmp    WORD PTR [r9],cx
   14000753f:	mov    edx,0x1
   140007544:	cmovb  edx,r14d
   140007548:	test   edx,edx
   14000754a:	je     0x14000751a
   14000754c:	mov    rdx,rax
   14000754f:	mov    rcx,r14
   140007552:	sub    rdx,rdi
   140007555:	lea    rdi,[rax+0x2]
   140007559:	sar    rdx,1
   14000755c:	sub    rcx,rdx
   14000755f:	add    r10,rcx
   140007562:	jmp    0x1400074d0
   140007567:	mov    rdi,QWORD PTR [rsp+0x10]
   14000756c:	mov    rbx,QWORD PTR [rsp+0x20]
   140007571:	mov    rax,r14
   140007574:	mov    r14,QWORD PTR [rsp+0x18]
   140007579:	pop    rsi
   14000757a:	ret    
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	mov    QWORD PTR [rsp+0x8],rbx
   140007585:	mov    QWORD PTR [rsp+0x18],rbp
   14000758a:	mov    QWORD PTR [rsp+0x20],rdi
   14000758f:	mov    r10,QWORD PTR [rcx+0x10]
   140007593:	or     rbp,0xffffffffffffffff
   140007597:	mov    WORD PTR [rsp+0x10],dx
   14000759c:	movzx  r11d,dx
   1400075a0:	mov    rbx,rcx
   1400075a3:	cmp    r8,r10
   1400075a6:	jae    0x140007665
   1400075ac:	sub    r10,r8
   1400075af:	cmp    r10,0x1
   1400075b3:	jb     0x140007665
   1400075b9:	cmp    QWORD PTR [rcx+0x18],0x8
   1400075be:	jb     0x1400075c5
   1400075c0:	mov    rax,QWORD PTR [rcx]
   1400075c3:	jmp    0x1400075c8
   1400075c5:	mov    rax,rcx
   1400075c8:	lea    rdi,[rax+r8*2]
   1400075cc:	nop    DWORD PTR [rax+0x0]
   1400075d0:	test   r10,r10
   1400075d3:	je     0x1400075ef
   1400075d5:	mov    rcx,r10
   1400075d8:	mov    rax,rdi
   1400075db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400075e0:	cmp    WORD PTR [rax],r11w
   1400075e4:	je     0x1400075f1
   1400075e6:	add    rax,0x2
   1400075ea:	dec    rcx
   1400075ed:	jne    0x1400075e0
   1400075ef:	xor    eax,eax
   1400075f1:	test   rax,rax
   1400075f4:	je     0x140007665
   1400075f6:	mov    edx,0x1
   1400075fb:	lea    r8,[rsp+0x10]
   140007600:	mov    r9,rax
   140007603:	movzx  ecx,WORD PTR [r8]
   140007607:	cmp    WORD PTR [r9],cx
   14000760b:	jne    0x14000763a
   14000760d:	add    r9,0x2
   140007611:	add    r8,0x2
   140007615:	dec    rdx
   140007618:	jne    0x140007603
   14000761a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000761f:	jb     0x140007624
   140007621:	mov    rbx,QWORD PTR [rbx]
   140007624:	sub    rax,rbx
   140007627:	sar    rax,1
   14000762a:	mov    rbx,QWORD PTR [rsp+0x8]
   14000762f:	mov    rbp,QWORD PTR [rsp+0x18]
   140007634:	mov    rdi,QWORD PTR [rsp+0x20]
   140007639:	ret    
   14000763a:	cmp    WORD PTR [r9],cx
   14000763e:	mov    edx,0x1
   140007643:	cmovb  edx,ebp
   140007646:	test   edx,edx
   140007648:	je     0x14000761a
   14000764a:	mov    rdx,rax
   14000764d:	mov    rcx,rbp
   140007650:	sub    rdx,rdi
   140007653:	lea    rdi,[rax+0x2]
   140007657:	sar    rdx,1
   14000765a:	sub    rcx,rdx
   14000765d:	add    r10,rcx
   140007660:	jmp    0x1400075d0
   140007665:	mov    rbx,QWORD PTR [rsp+0x8]
   14000766a:	mov    rdi,QWORD PTR [rsp+0x20]
   14000766f:	mov    rax,rbp
   140007672:	mov    rbp,QWORD PTR [rsp+0x18]
   140007677:	ret    
   140007678:	int3   
   140007679:	int3   
   14000767a:	int3   
   14000767b:	int3   
   14000767c:	int3   
   14000767d:	int3   
   14000767e:	int3   
   14000767f:	int3   
   140007680:	rex push rbx
   140007682:	sub    rsp,0x30
   140007686:	xor    eax,eax
   140007688:	mov    rbx,rdx
   14000768b:	mov    QWORD PTR [rdx+0x18],0x7
   140007693:	mov    QWORD PTR [rdx+0x10],rax
   140007697:	mov    WORD PTR [rdx],ax
   14000769a:	mov    rdx,rcx
   14000769d:	mov    rcx,rbx
   1400076a0:	mov    DWORD PTR [rsp+0x20],eax
   1400076a4:	call   0x140003a40
   1400076a9:	mov    rax,rbx
   1400076ac:	add    rsp,0x30
   1400076b0:	pop    rbx
   1400076b1:	ret    
   1400076b2:	int3   
   1400076b3:	int3   
   1400076b4:	int3   
   1400076b5:	int3   
   1400076b6:	int3   
   1400076b7:	int3   
   1400076b8:	int3   
   1400076b9:	int3   
   1400076ba:	int3   
   1400076bb:	int3   
   1400076bc:	int3   
   1400076bd:	int3   
   1400076be:	int3   
   1400076bf:	int3   
   1400076c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400076c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400076ca:	mov    QWORD PTR [rsp+0x18],rdi
   1400076cf:	push   r14
   1400076d1:	sub    rsp,0x20
   1400076d5:	mov    rax,QWORD PTR [rcx+0x8]
   1400076d9:	mov    rbx,rdx
   1400076dc:	mov    rdi,rcx
   1400076df:	cmp    rdx,rax
   1400076e2:	jae    0x140007706
   1400076e4:	mov    rcx,QWORD PTR [rcx]
   1400076e7:	cmp    rcx,rdx
   1400076ea:	ja     0x140007706
   1400076ec:	sub    rbx,rcx
   1400076ef:	cmp    rax,QWORD PTR [rdi+0x10]
   1400076f3:	jne    0x1400076fd
   1400076f5:	mov    rcx,rdi
   1400076f8:	call   0x140007920
   1400076fd:	and    rbx,0xffffffffffffffe0
   140007701:	add    rbx,QWORD PTR [rdi]
   140007704:	jmp    0x140007714
   140007706:	cmp    rax,QWORD PTR [rdi+0x10]
   14000770a:	jne    0x140007714
   14000770c:	mov    rcx,rdi
   14000770f:	call   0x140007920
   140007714:	mov    r14,QWORD PTR [rdi+0x8]
   140007718:	test   r14,r14
   14000771b:	je     0x140007777
   14000771d:	xor    esi,esi
   14000771f:	mov    QWORD PTR [r14+0x18],0x7
   140007727:	mov    QWORD PTR [r14+0x10],rsi
   14000772b:	mov    WORD PTR [r14],si
   14000772f:	cmp    QWORD PTR [rbx+0x18],0x8
   140007734:	jae    0x14000774f
   140007736:	mov    r8,QWORD PTR [rbx+0x10]
   14000773a:	inc    r8
   14000773d:	je     0x140007758
   14000773f:	add    r8,r8
   140007742:	mov    rdx,rbx
   140007745:	mov    rcx,r14
   140007748:	call   0x140018a90
   14000774d:	jmp    0x140007758
   14000774f:	mov    rax,QWORD PTR [rbx]
   140007752:	mov    QWORD PTR [r14],rax
   140007755:	mov    QWORD PTR [rbx],rsi
   140007758:	mov    rax,QWORD PTR [rbx+0x10]
   14000775c:	mov    QWORD PTR [r14+0x10],rax
   140007760:	mov    rax,QWORD PTR [rbx+0x18]
   140007764:	mov    QWORD PTR [r14+0x18],rax
   140007768:	mov    QWORD PTR [rbx+0x18],0x7
   140007770:	mov    QWORD PTR [rbx+0x10],rsi
   140007774:	mov    WORD PTR [rbx],si
   140007777:	add    QWORD PTR [rdi+0x8],0x20
   14000777c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007781:	mov    rsi,QWORD PTR [rsp+0x38]
   140007786:	mov    rdi,QWORD PTR [rsp+0x40]
   14000778b:	add    rsp,0x20
   14000778f:	pop    r14
   140007791:	ret    
   140007792:	int3   
   140007793:	int3   
   140007794:	int3   
   140007795:	int3   
   140007796:	int3   
   140007797:	int3   
   140007798:	int3   
   140007799:	int3   
   14000779a:	int3   
   14000779b:	int3   
   14000779c:	int3   
   14000779d:	int3   
   14000779e:	int3   
   14000779f:	int3   
   1400077a0:	jmp    0x1400079b0
   1400077a5:	int3   
   1400077a6:	int3   
   1400077a7:	int3   
   1400077a8:	int3   
   1400077a9:	int3   
   1400077aa:	int3   
   1400077ab:	int3   
   1400077ac:	int3   
   1400077ad:	int3   
   1400077ae:	int3   
   1400077af:	int3   
   1400077b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400077b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400077ba:	push   rdi
   1400077bb:	sub    rsp,0x20
   1400077bf:	mov    rsi,QWORD PTR [rcx+0x8]
   1400077c3:	mov    rbx,QWORD PTR [rcx]
   1400077c6:	mov    rdi,rcx
   1400077c9:	cmp    rbx,rsi
   1400077cc:	je     0x140007818
   1400077ce:	mov    QWORD PTR [rsp+0x30],rbp
   1400077d3:	xor    ebp,ebp
   1400077d5:	cmp    QWORD PTR [rbx+0x18],0x8
   1400077da:	jb     0x1400077e4
   1400077dc:	mov    rcx,QWORD PTR [rbx]
   1400077df:	call   0x140018a04
   1400077e4:	mov    QWORD PTR [rbx+0x18],0x7
   1400077ec:	mov    QWORD PTR [rbx+0x10],rbp
   1400077f0:	mov    WORD PTR [rbx],bp
   1400077f3:	add    rbx,0x20
   1400077f7:	cmp    rbx,rsi
   1400077fa:	jne    0x1400077d5
   1400077fc:	mov    rax,QWORD PTR [rdi]
   1400077ff:	mov    rbp,QWORD PTR [rsp+0x30]
   140007804:	mov    QWORD PTR [rdi+0x8],rax
   140007808:	mov    rbx,QWORD PTR [rsp+0x38]
   14000780d:	mov    rsi,QWORD PTR [rsp+0x40]
   140007812:	add    rsp,0x20
   140007816:	pop    rdi
   140007817:	ret    
   140007818:	mov    rsi,QWORD PTR [rsp+0x40]
   14000781d:	mov    QWORD PTR [rcx+0x8],rbx
   140007821:	mov    rbx,QWORD PTR [rsp+0x38]
   140007826:	add    rsp,0x20
   14000782a:	pop    rdi
   14000782b:	ret    
   14000782c:	int3   
   14000782d:	int3   
   14000782e:	int3   
   14000782f:	int3   
   140007830:	mov    rcx,QWORD PTR [rcx]
   140007833:	test   rcx,rcx
   140007836:	jne    0x140019610
   14000783c:	ret    
   14000783d:	int3   
   14000783e:	int3   
   14000783f:	int3   
   140007840:	rex push rbx
   140007842:	sub    rsp,0x20
   140007846:	mov    rbx,rcx
   140007849:	mov    rcx,QWORD PTR [rcx]
   14000784c:	test   rcx,rcx
   14000784f:	je     0x140007863
   140007851:	call   0x140018a04
   140007856:	xor    eax,eax
   140007858:	mov    QWORD PTR [rbx],rax
   14000785b:	mov    QWORD PTR [rbx+0x8],rax
   14000785f:	mov    QWORD PTR [rbx+0x10],rax
   140007863:	add    rsp,0x20
   140007867:	pop    rbx
   140007868:	ret    
   140007869:	int3   
   14000786a:	int3   
   14000786b:	int3   
   14000786c:	int3   
   14000786d:	int3   
   14000786e:	int3   
   14000786f:	int3   
   140007870:	mov    QWORD PTR [rsp+0x8],rbx
   140007875:	mov    QWORD PTR [rsp+0x10],rsi
   14000787a:	push   rdi
   14000787b:	sub    rsp,0x20
   14000787f:	mov    rsi,r9
   140007882:	mov    rdi,rcx
   140007885:	test   r9,r9
   140007888:	je     0x140007906
   14000788a:	mov    rax,QWORD PTR [rcx+0x10]
   14000788e:	test   rax,rax
   140007891:	je     0x140007906
   140007893:	cmp    rax,0xffffffffffffffff
   140007897:	jbe    0x14000789f
   140007899:	or     rax,0xffffffffffffffff
   14000789d:	jmp    0x1400078a2
   14000789f:	dec    rax
   1400078a2:	cmp    QWORD PTR [rcx+0x18],0x8
   1400078a7:	jb     0x1400078ac
   1400078a9:	mov    rcx,QWORD PTR [rcx]
   1400078ac:	lea    rbx,[rcx+rax*2]
   1400078b0:	test   rsi,rsi
   1400078b3:	je     0x1400078d0
   1400078b5:	movzx  edx,WORD PTR [rbx]
   1400078b8:	mov    rcx,rsi
   1400078bb:	lea    rax,[rip+0x30542]        # 0x140037e04
   1400078c2:	cmp    WORD PTR [rax],dx
   1400078c5:	je     0x1400078e3
   1400078c7:	add    rax,0x2
   1400078cb:	dec    rcx
   1400078ce:	jne    0x1400078c2
   1400078d0:	mov    rcx,rdi
   1400078d3:	call   0x140003a30
   1400078d8:	cmp    rbx,rax
   1400078db:	je     0x140007906
   1400078dd:	sub    rbx,0x2
   1400078e1:	jmp    0x1400078b0
   1400078e3:	cmp    QWORD PTR [rdi+0x18],0x8
   1400078e8:	jb     0x1400078ed
   1400078ea:	mov    rdi,QWORD PTR [rdi]
   1400078ed:	sub    rbx,rdi
   1400078f0:	sar    rbx,1
   1400078f3:	mov    rax,rbx
   1400078f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078fb:	mov    rsi,QWORD PTR [rsp+0x38]
   140007900:	add    rsp,0x20
   140007904:	pop    rdi
   140007905:	ret    
   140007906:	mov    rbx,QWORD PTR [rsp+0x30]
   14000790b:	mov    rsi,QWORD PTR [rsp+0x38]
   140007910:	or     rax,0xffffffffffffffff
   140007914:	add    rsp,0x20
   140007918:	pop    rdi
   140007919:	ret    
   14000791a:	int3   
   14000791b:	int3   
   14000791c:	int3   
   14000791d:	int3   
   14000791e:	int3   
   14000791f:	int3   
   140007920:	sub    rsp,0x28
   140007924:	mov    rdx,QWORD PTR [rcx+0x10]
   140007928:	mov    r8,QWORD PTR [rcx+0x8]
   14000792c:	mov    rax,rdx
   14000792f:	sub    rax,r8
   140007932:	sar    rax,0x5
   140007936:	cmp    rax,0x1
   14000793a:	jae    0x140007999
   14000793c:	mov    r10,QWORD PTR [rcx]
   14000793f:	movabs r9,0x7ffffffffffffff
   140007949:	sub    r8,r10
   14000794c:	mov    rax,r9
   14000794f:	sar    r8,0x5
   140007953:	sub    rax,r8
   140007956:	cmp    rax,0x1
   14000795a:	jb     0x14000799e
   14000795c:	sub    rdx,r10
   14000795f:	inc    r8
   140007962:	sar    rdx,0x5
   140007966:	mov    rax,rdx
   140007969:	shr    rax,1
   14000796c:	sub    r9,rax
   14000796f:	cmp    r9,rdx
   140007972:	jae    0x140007986
   140007974:	xor    edx,edx
   140007976:	cmp    rdx,r8
   140007979:	cmovb  rdx,r8
   14000797d:	add    rsp,0x28
   140007981:	jmp    0x140007b70
   140007986:	add    rdx,rax
   140007989:	cmp    rdx,r8
   14000798c:	cmovb  rdx,r8
   140007990:	add    rsp,0x28
   140007994:	jmp    0x140007b70
   140007999:	add    rsp,0x28
   14000799d:	ret    
   14000799e:	lea    rcx,[rip+0x3129b]        # 0x140038c40
   1400079a5:	call   0x14001405c
   1400079aa:	int3   
   1400079ab:	int3   
   1400079ac:	int3   
   1400079ad:	int3   
   1400079ae:	int3   
   1400079af:	int3   
   1400079b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400079b5:	push   rdi
   1400079b6:	sub    rsp,0x20
   1400079ba:	mov    rbx,QWORD PTR [rcx]
   1400079bd:	mov    rdi,rcx
   1400079c0:	test   rbx,rbx
   1400079c3:	je     0x140007a24
   1400079c5:	mov    QWORD PTR [rsp+0x30],rbp
   1400079ca:	mov    QWORD PTR [rsp+0x38],rsi
   1400079cf:	mov    rsi,QWORD PTR [rcx+0x8]
   1400079d3:	xor    ebp,ebp
   1400079d5:	cmp    rbx,rsi
   1400079d8:	je     0x140007a07
   1400079da:	nop    WORD PTR [rax+rax*1+0x0]
   1400079e0:	cmp    QWORD PTR [rbx+0x18],0x8
   1400079e5:	jb     0x1400079ef
   1400079e7:	mov    rcx,QWORD PTR [rbx]
   1400079ea:	call   0x140018a04
   1400079ef:	mov    QWORD PTR [rbx+0x18],0x7
   1400079f7:	mov    QWORD PTR [rbx+0x10],rbp
   1400079fb:	mov    WORD PTR [rbx],bp
   1400079fe:	add    rbx,0x20
   140007a02:	cmp    rbx,rsi
   140007a05:	jne    0x1400079e0
   140007a07:	mov    rcx,QWORD PTR [rdi]
   140007a0a:	call   0x140018a04
   140007a0f:	mov    rsi,QWORD PTR [rsp+0x38]
   140007a14:	mov    QWORD PTR [rdi],rbp
   140007a17:	mov    QWORD PTR [rdi+0x8],rbp
   140007a1b:	mov    QWORD PTR [rdi+0x10],rbp
   140007a1f:	mov    rbp,QWORD PTR [rsp+0x30]
   140007a24:	mov    rbx,QWORD PTR [rsp+0x40]
   140007a29:	add    rsp,0x20
   140007a2d:	pop    rdi
   140007a2e:	ret    
   140007a2f:	int3   
   140007a30:	rex push rbx
   140007a32:	push   rbp
   140007a33:	push   r14
   140007a35:	sub    rsp,0x20
   140007a39:	or     rax,0xffffffffffffffff
   140007a3d:	movzx  r14d,r8w
   140007a41:	mov    r8,QWORD PTR [rcx+0x10]
   140007a45:	sub    rax,r8
   140007a48:	mov    rbp,rdx
   140007a4b:	mov    rbx,rcx
   140007a4e:	cmp    rax,rdx
   140007a51:	jbe    0x140007b4e
   140007a57:	mov    QWORD PTR [rsp+0x50],rsi
   140007a5c:	test   rdx,rdx
   140007a5f:	je     0x140007b3d
   140007a65:	lea    rsi,[r8+rdx*1]
   140007a69:	movabs rax,0x7ffffffffffffffe
   140007a73:	cmp    rsi,rax
   140007a76:	ja     0x140007b5b
   140007a7c:	mov    rcx,QWORD PTR [rcx+0x18]
   140007a80:	cmp    rcx,rsi
   140007a83:	jae    0x140007ab4
   140007a85:	mov    rdx,rsi
   140007a88:	mov    rcx,rbx
   140007a8b:	call   0x140003b90
   140007a90:	test   rsi,rsi
   140007a93:	je     0x140007b3d
   140007a99:	mov    rcx,QWORD PTR [rbx+0x10]
   140007a9d:	cmp    rbp,0x1
   140007aa1:	jne    0x140007afd
   140007aa3:	cmp    QWORD PTR [rbx+0x18],0x8
   140007aa8:	jb     0x140007af3
   140007aaa:	mov    rax,QWORD PTR [rbx]
   140007aad:	mov    WORD PTR [rax+rcx*2],r14w
   140007ab2:	jmp    0x140007b24
   140007ab4:	test   rsi,rsi
   140007ab7:	jne    0x140007a99
   140007ab9:	xor    eax,eax
   140007abb:	mov    QWORD PTR [rbx+0x10],rax
   140007abf:	cmp    rcx,0x8
   140007ac3:	jb     0x140007adc
   140007ac5:	mov    rcx,QWORD PTR [rbx]
   140007ac8:	mov    rsi,QWORD PTR [rsp+0x50]
   140007acd:	mov    WORD PTR [rcx],ax
   140007ad0:	mov    rax,rbx
   140007ad3:	add    rsp,0x20
   140007ad7:	pop    r14
   140007ad9:	pop    rbp
   140007ada:	pop    rbx
   140007adb:	ret    
   140007adc:	mov    rsi,QWORD PTR [rsp+0x50]
   140007ae1:	mov    WORD PTR [rbx],ax
   140007ae4:	mov    rcx,rbx
   140007ae7:	mov    rax,rbx
   140007aea:	add    rsp,0x20
   140007aee:	pop    r14
   140007af0:	pop    rbp
   140007af1:	pop    rbx
   140007af2:	ret    
   140007af3:	mov    rax,rbx
   140007af6:	mov    WORD PTR [rbx+rcx*2],r14w
   140007afb:	jmp    0x140007b24
   140007afd:	cmp    QWORD PTR [rbx+0x18],0x8
   140007b02:	mov    QWORD PTR [rsp+0x58],rdi
   140007b07:	jb     0x140007b0e
   140007b09:	mov    rax,QWORD PTR [rbx]
   140007b0c:	jmp    0x140007b11
   140007b0e:	mov    rax,rbx
   140007b11:	lea    rdi,[rax+rcx*2]
   140007b15:	movzx  eax,r14w
   140007b19:	mov    rcx,rbp
   140007b1c:	rep stos WORD PTR es:[rdi],ax
   140007b1f:	mov    rdi,QWORD PTR [rsp+0x58]
   140007b24:	cmp    QWORD PTR [rbx+0x18],0x8
   140007b29:	mov    QWORD PTR [rbx+0x10],rsi
   140007b2d:	jb     0x140007b34
   140007b2f:	mov    rcx,QWORD PTR [rbx]
   140007b32:	jmp    0x140007b37
   140007b34:	mov    rcx,rbx
   140007b37:	xor    eax,eax
   140007b39:	mov    WORD PTR [rcx+rsi*2],ax
   140007b3d:	mov    rax,rbx
   140007b40:	mov    rsi,QWORD PTR [rsp+0x50]
   140007b45:	add    rsp,0x20
   140007b49:	pop    r14
   140007b4b:	pop    rbp
   140007b4c:	pop    rbx
   140007b4d:	ret    
   140007b4e:	lea    rcx,[rip+0x3015b]        # 0x140037cb0
   140007b55:	call   0x14001405c
   140007b5a:	int3   
   140007b5b:	lea    rcx,[rip+0x3014e]        # 0x140037cb0
   140007b62:	call   0x14001405c
   140007b67:	int3   
   140007b68:	int3   
   140007b69:	int3   
   140007b6a:	int3   
   140007b6b:	int3   
   140007b6c:	int3   
   140007b6d:	int3   
   140007b6e:	int3   
   140007b6f:	int3   
   140007b70:	rex push rsi
   140007b72:	push   rdi
   140007b73:	push   r12
   140007b75:	push   r14
   140007b77:	sub    rsp,0x38
   140007b7b:	xor    r12d,r12d
   140007b7e:	mov    rdi,rdx
   140007b81:	mov    rsi,rcx
   140007b84:	mov    r14d,r12d
   140007b87:	test   rdx,rdx
   140007b8a:	je     0x140007bb7
   140007b8c:	movabs rax,0x7ffffffffffffff
   140007b96:	cmp    rdx,rax
   140007b99:	ja     0x140007c53
   140007b9f:	mov    rcx,rdx
   140007ba2:	shl    rcx,0x5
   140007ba6:	call   0x140018a0c
   140007bab:	mov    r14,rax
   140007bae:	test   rax,rax
   140007bb1:	je     0x140007c53
   140007bb7:	mov    rdx,QWORD PTR [rsi+0x8]
   140007bbb:	mov    rcx,QWORD PTR [rsi]
   140007bbe:	mov    QWORD PTR [rsp+0x70],rbx
   140007bc3:	mov    r8,r14
   140007bc6:	mov    QWORD PTR [rsp+0x78],rbp
   140007bcb:	mov    QWORD PTR [rsp+0x30],r15
   140007bd0:	call   0x1400084d0
   140007bd5:	mov    rbx,QWORD PTR [rsi]
   140007bd8:	mov    r15,QWORD PTR [rsi+0x8]
   140007bdc:	mov    rbp,r15
   140007bdf:	sub    rbp,rbx
   140007be2:	test   rbx,rbx
   140007be5:	je     0x140007c20
   140007be7:	cmp    rbx,r15
   140007bea:	je     0x140007c18
   140007bec:	nop    DWORD PTR [rax+0x0]
   140007bf0:	cmp    QWORD PTR [rbx+0x18],0x8
   140007bf5:	jb     0x140007bff
   140007bf7:	mov    rcx,QWORD PTR [rbx]
   140007bfa:	call   0x140018a04
   140007bff:	mov    QWORD PTR [rbx+0x18],0x7
   140007c07:	mov    QWORD PTR [rbx+0x10],r12
   140007c0b:	mov    WORD PTR [rbx],r12w
   140007c0f:	add    rbx,0x20
   140007c13:	cmp    rbx,r15
   140007c16:	jne    0x140007bf0
   140007c18:	mov    rcx,QWORD PTR [rsi]
   140007c1b:	call   0x140018a04
   140007c20:	mov    r15,QWORD PTR [rsp+0x30]
   140007c25:	mov    rbx,QWORD PTR [rsp+0x70]
   140007c2a:	shl    rdi,0x5
   140007c2e:	and    rbp,0xffffffffffffffe0
   140007c32:	add    rdi,r14
   140007c35:	mov    QWORD PTR [rsi],r14
   140007c38:	add    rbp,r14
   140007c3b:	mov    QWORD PTR [rsi+0x10],rdi
   140007c3f:	mov    QWORD PTR [rsi+0x8],rbp
   140007c43:	mov    rbp,QWORD PTR [rsp+0x78]
   140007c48:	add    rsp,0x38
   140007c4c:	pop    r14
   140007c4e:	pop    r12
   140007c50:	pop    rdi
   140007c51:	pop    rsi
   140007c52:	ret    
   140007c53:	call   0x140014018
   140007c58:	int3   
   140007c59:	int3   
   140007c5a:	int3   
   140007c5b:	int3   
   140007c5c:	int3   
   140007c5d:	int3   
   140007c5e:	int3   
   140007c5f:	int3   
   140007c60:	rex push rbx
   140007c62:	push   rsi
   140007c63:	push   rdi
   140007c64:	sub    rsp,0x20
   140007c68:	xor    edi,edi
   140007c6a:	mov    rsi,rdx
   140007c6d:	mov    rbx,rcx
   140007c70:	test   rdx,rdx
   140007c73:	je     0x140007c8b
   140007c75:	cmp    rdx,0xffffffffffffffff
   140007c79:	ja     0x140007cd6
   140007c7b:	mov    rcx,rdx
   140007c7e:	call   0x140018a0c
   140007c83:	mov    rdi,rax
   140007c86:	test   rax,rax
   140007c89:	je     0x140007cd6
   140007c8b:	mov    rdx,QWORD PTR [rbx]
   140007c8e:	mov    r8,QWORD PTR [rbx+0x8]
   140007c92:	mov    rcx,rdi
   140007c95:	sub    r8,rdx
   140007c98:	mov    QWORD PTR [rsp+0x50],rbp
   140007c9d:	call   0x140018a90
   140007ca2:	mov    rcx,QWORD PTR [rbx]
   140007ca5:	mov    rbp,QWORD PTR [rbx+0x8]
   140007ca9:	sub    rbp,rcx
   140007cac:	test   rcx,rcx
   140007caf:	je     0x140007cb6
   140007cb1:	call   0x140018a04
   140007cb6:	lea    rax,[rsi+rdi*1]
   140007cba:	mov    QWORD PTR [rbx],rdi
   140007cbd:	mov    QWORD PTR [rbx+0x10],rax
   140007cc1:	lea    rax,[rdi+rbp*1]
   140007cc5:	mov    rbp,QWORD PTR [rsp+0x50]
   140007cca:	mov    QWORD PTR [rbx+0x8],rax
   140007cce:	add    rsp,0x20
   140007cd2:	pop    rdi
   140007cd3:	pop    rsi
   140007cd4:	pop    rbx
   140007cd5:	ret    
   140007cd6:	call   0x140014018
   140007cdb:	int3   
   140007cdc:	int3   
   140007cdd:	int3   
   140007cde:	int3   
   140007cdf:	int3   
   140007ce0:	mov    QWORD PTR [rsp+0x8],rcx
   140007ce5:	push   rsi
   140007ce6:	push   rdi
   140007ce7:	push   r14
   140007ce9:	sub    rsp,0x30
   140007ced:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140007cf6:	mov    QWORD PTR [rsp+0x58],rbx
   140007cfb:	mov    QWORD PTR [rsp+0x60],rbp
   140007d00:	mov    rsi,r8
   140007d03:	mov    r14,rdx
   140007d06:	mov    rdi,rcx
   140007d09:	xor    ebx,ebx
   140007d0b:	mov    DWORD PTR [rsp+0x20],ebx
   140007d0f:	mov    QWORD PTR [rcx+0x18],0x7
   140007d17:	mov    QWORD PTR [rcx+0x10],rbx
   140007d1b:	mov    WORD PTR [rcx],bx
   140007d1e:	mov    DWORD PTR [rsp+0x20],0x1
   140007d26:	mov    rcx,QWORD PTR [rdx+0x10]
   140007d2a:	cmp    WORD PTR [r8],bx
   140007d2e:	jne    0x140007d34
   140007d30:	mov    eax,ebx
   140007d32:	jmp    0x140007d4b
   140007d34:	or     rax,0xffffffffffffffff
   140007d38:	nop    DWORD PTR [rax+rax*1+0x0]
   140007d40:	inc    rax
   140007d43:	cmp    WORD PTR [r8+rax*2],0x0
   140007d49:	jne    0x140007d40
   140007d4b:	lea    rdx,[rax+rcx*1]
   140007d4f:	cmp    rbx,rdx
   140007d52:	ja     0x140007d80
   140007d54:	cmp    QWORD PTR [rdi+0x18],rdx
   140007d58:	je     0x140007d80
   140007d5a:	mov    r8b,0x1
   140007d5d:	mov    rcx,rdi
   140007d60:	call   0x140003cb0
   140007d65:	test   al,al
   140007d67:	je     0x140007d80
   140007d69:	mov    QWORD PTR [rdi+0x10],rbx
   140007d6d:	cmp    QWORD PTR [rdi+0x18],0x8
   140007d72:	jb     0x140007d79
   140007d74:	mov    rax,QWORD PTR [rdi]
   140007d77:	jmp    0x140007d7c
   140007d79:	mov    rax,rdi
   140007d7c:	mov    WORD PTR [rax+rbx*2],bx
   140007d80:	or     r9,0xffffffffffffffff
   140007d84:	xor    r8d,r8d
   140007d87:	mov    rdx,r14
   140007d8a:	mov    rcx,rdi
   140007d8d:	call   0x1400080a0
   140007d92:	cmp    WORD PTR [rsi],0x0
   140007d96:	je     0x140007daa
   140007d98:	or     rbx,0xffffffffffffffff
   140007d9c:	nop    DWORD PTR [rax+0x0]
   140007da0:	inc    rbx
   140007da3:	cmp    WORD PTR [rsi+rbx*2],0x0
   140007da8:	jne    0x140007da0
   140007daa:	mov    r8,rbx
   140007dad:	mov    rdx,rsi
   140007db0:	mov    rcx,rdi
   140007db3:	call   0x1400081e0
   140007db8:	mov    rax,rdi
   140007dbb:	mov    rbx,QWORD PTR [rsp+0x58]
   140007dc0:	mov    rbp,QWORD PTR [rsp+0x60]
   140007dc5:	add    rsp,0x30
   140007dc9:	pop    r14
   140007dcb:	pop    rdi
   140007dcc:	pop    rsi
   140007dcd:	ret    
   140007dce:	int3   
   140007dcf:	int3   
   140007dd0:	rex push rbx
   140007dd2:	sub    rsp,0x30
   140007dd6:	mov    rax,rdx
   140007dd9:	mov    rbx,rcx
   140007ddc:	lea    rdx,[rip+0x300bd]        # 0x140037ea0
   140007de3:	mov    r8d,0x5
   140007de9:	mov    rcx,rax
   140007dec:	mov    DWORD PTR [rsp+0x20],0x0
   140007df4:	call   0x1400081e0
   140007df9:	mov    rcx,rbx
   140007dfc:	mov    rdx,rax
   140007dff:	call   0x140008890
   140007e04:	mov    rax,rbx
   140007e07:	add    rsp,0x30
   140007e0b:	pop    rbx
   140007e0c:	ret    
   140007e0d:	int3   
   140007e0e:	int3   
   140007e0f:	int3   
   140007e10:	mov    QWORD PTR [rsp+0x8],rcx
   140007e15:	push   rsi
   140007e16:	push   rdi
   140007e17:	push   r14
   140007e19:	sub    rsp,0x30
   140007e1d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140007e26:	mov    QWORD PTR [rsp+0x58],rbx
   140007e2b:	mov    QWORD PTR [rsp+0x60],rbp
   140007e30:	mov    rsi,r8
   140007e33:	mov    r14,rdx
   140007e36:	mov    rdi,rcx
   140007e39:	xor    ebx,ebx
   140007e3b:	mov    DWORD PTR [rsp+0x20],ebx
   140007e3f:	mov    QWORD PTR [rcx+0x18],0xf
   140007e47:	mov    QWORD PTR [rcx+0x10],rbx
   140007e4b:	mov    BYTE PTR [rcx],bl
   140007e4d:	mov    DWORD PTR [rsp+0x20],0x1
   140007e55:	mov    rcx,QWORD PTR [rdx+0x10]
   140007e59:	cmp    BYTE PTR [r8],bl
   140007e5c:	jne    0x140007e62
   140007e5e:	mov    eax,ebx
   140007e60:	jmp    0x140007e70
   140007e62:	or     rax,0xffffffffffffffff
   140007e66:	inc    rax
   140007e69:	cmp    BYTE PTR [r8+rax*1],0x0
   140007e6e:	jne    0x140007e66
   140007e70:	lea    rdx,[rax+rcx*1]
   140007e74:	cmp    rbx,rdx
   140007e77:	ja     0x140007ea5
   140007e79:	cmp    QWORD PTR [rdi+0x18],rdx
   140007e7d:	je     0x140007ea5
   140007e7f:	mov    r8b,0x1
   140007e82:	mov    rcx,rdi
   140007e85:	call   0x140008d80
   140007e8a:	test   al,al
   140007e8c:	je     0x140007ea5
   140007e8e:	mov    QWORD PTR [rdi+0x10],rbx
   140007e92:	cmp    QWORD PTR [rdi+0x18],0x10
   140007e97:	jb     0x140007e9e
   140007e99:	mov    rax,QWORD PTR [rdi]
   140007e9c:	jmp    0x140007ea1
   140007e9e:	mov    rax,rdi
   140007ea1:	mov    BYTE PTR [rax+rbx*1],0x0
   140007ea5:	or     r9,0xffffffffffffffff
   140007ea9:	xor    r8d,r8d
   140007eac:	mov    rdx,r14
   140007eaf:	mov    rcx,rdi
   140007eb2:	call   0x1400086e0
   140007eb7:	cmp    BYTE PTR [rsi],0x0
   140007eba:	je     0x140007ec9
   140007ebc:	or     rbx,0xffffffffffffffff
   140007ec0:	inc    rbx
   140007ec3:	cmp    BYTE PTR [rsi+rbx*1],0x0
   140007ec7:	jne    0x140007ec0
   140007ec9:	mov    r8,rbx
   140007ecc:	mov    rdx,rsi
   140007ecf:	mov    rcx,rdi
   140007ed2:	call   0x140008590
   140007ed7:	mov    rax,rdi
   140007eda:	mov    rbx,QWORD PTR [rsp+0x58]
   140007edf:	mov    rbp,QWORD PTR [rsp+0x60]
   140007ee4:	add    rsp,0x30
   140007ee8:	pop    r14
   140007eea:	pop    rdi
   140007eeb:	pop    rsi
   140007eec:	ret    
   140007eed:	int3   
   140007eee:	int3   
   140007eef:	int3   
   140007ef0:	rex push rbx
   140007ef2:	sub    rsp,0x30
   140007ef6:	mov    rax,r8
   140007ef9:	mov    r10,rdx
   140007efc:	mov    rbx,rcx
   140007eff:	or     r9,0xffffffffffffffff
   140007f03:	xor    r8d,r8d
   140007f06:	mov    rdx,rax
   140007f09:	mov    rcx,r10
   140007f0c:	mov    DWORD PTR [rsp+0x20],0x0
   140007f14:	call   0x1400080a0
   140007f19:	mov    rcx,rbx
   140007f1c:	mov    rdx,rax
   140007f1f:	call   0x140008890
   140007f24:	mov    rax,rbx
   140007f27:	add    rsp,0x30
   140007f2b:	pop    rbx
   140007f2c:	ret    
   140007f2d:	int3   
   140007f2e:	int3   
   140007f2f:	int3   
   140007f30:	rex push rbx
   140007f32:	sub    rsp,0x40
   140007f36:	mov    rax,r8
   140007f39:	mov    rbx,rcx
   140007f3c:	mov    r8,rdx
   140007f3f:	mov    rcx,rax
   140007f42:	mov    DWORD PTR [rsp+0x30],0x0
   140007f4a:	call   0x140008350
   140007f4f:	mov    rcx,rbx
   140007f52:	mov    rdx,rax
   140007f55:	call   0x140008890
   140007f5a:	mov    rax,rbx
   140007f5d:	add    rsp,0x40
   140007f61:	pop    rbx
   140007f62:	ret    
   140007f63:	int3   
   140007f64:	int3   
   140007f65:	int3   
   140007f66:	int3   
   140007f67:	int3   
   140007f68:	int3   
   140007f69:	int3   
   140007f6a:	int3   
   140007f6b:	int3   
   140007f6c:	int3   
   140007f6d:	int3   
   140007f6e:	int3   
   140007f6f:	int3   
   140007f70:	rex push rbx
   140007f72:	sub    rsp,0x40
   140007f76:	mov    r11,rdx
   140007f79:	mov    rbx,rcx
   140007f7c:	mov    rcx,QWORD PTR [rdx+0x10]
   140007f80:	mov    rax,QWORD PTR [r11+0x18]
   140007f84:	mov    rdx,QWORD PTR [r8+0x10]
   140007f88:	mov    r10,r8
   140007f8b:	sub    rax,rcx
   140007f8e:	mov    DWORD PTR [rsp+0x30],0x0
   140007f96:	cmp    rdx,rax
   140007f99:	jbe    0x140007fb4
   140007f9b:	mov    rax,QWORD PTR [r8+0x18]
   140007f9f:	sub    rax,rdx
   140007fa2:	cmp    rax,rcx
   140007fa5:	jb     0x140007fb4
   140007fa7:	mov    r8,r11
   140007faa:	mov    rcx,r10
   140007fad:	call   0x140008350
   140007fb2:	jmp    0x140007fc6
   140007fb4:	or     r9,0xffffffffffffffff
   140007fb8:	xor    r8d,r8d
   140007fbb:	mov    rdx,r10
   140007fbe:	mov    rcx,r11
   140007fc1:	call   0x1400080a0
   140007fc6:	mov    rdx,rax
   140007fc9:	mov    rcx,rbx
   140007fcc:	call   0x140008890
   140007fd1:	mov    rax,rbx
   140007fd4:	add    rsp,0x40
   140007fd8:	pop    rbx
   140007fd9:	ret    
   140007fda:	int3   
   140007fdb:	int3   
   140007fdc:	int3   
   140007fdd:	int3   
   140007fde:	int3   
   140007fdf:	int3   
   140007fe0:	mov    QWORD PTR [rsp+0x8],rcx
   140007fe5:	push   rsi
   140007fe6:	push   rdi
   140007fe7:	push   r14
   140007fe9:	sub    rsp,0x30
   140007fed:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140007ff6:	mov    QWORD PTR [rsp+0x58],rbx
   140007ffb:	mov    QWORD PTR [rsp+0x60],rbp
   140008000:	mov    rsi,r8
   140008003:	mov    rbp,rdx
   140008006:	mov    rbx,rcx
   140008009:	xor    r14d,r14d
   14000800c:	mov    DWORD PTR [rsp+0x20],r14d
   140008011:	mov    QWORD PTR [rcx+0x18],0x7
   140008019:	mov    QWORD PTR [rcx+0x10],r14
   14000801d:	mov    WORD PTR [rcx],r14w
   140008021:	mov    DWORD PTR [rsp+0x20],0x1
   140008029:	mov    rdx,QWORD PTR [rdx+0x10]
   14000802d:	add    rdx,QWORD PTR [r8+0x10]
   140008031:	mov    rdi,QWORD PTR [rcx+0x10]
   140008035:	cmp    rdi,rdx
   140008038:	ja     0x140008064
   14000803a:	cmp    QWORD PTR [rcx+0x18],rdx
   14000803e:	je     0x140008064
   140008040:	mov    r8b,0x1
   140008043:	call   0x140003cb0
   140008048:	test   al,al
   14000804a:	je     0x140008064
   14000804c:	mov    QWORD PTR [rbx+0x10],rdi
   140008050:	cmp    QWORD PTR [rbx+0x18],0x8
   140008055:	jb     0x14000805c
   140008057:	mov    rax,QWORD PTR [rbx]
   14000805a:	jmp    0x14000805f
   14000805c:	mov    rax,rbx
   14000805f:	mov    WORD PTR [rax+rdi*2],r14w
   140008064:	or     r9,0xffffffffffffffff
   140008068:	xor    r8d,r8d
   14000806b:	mov    rdx,rbp
   14000806e:	mov    rcx,rbx
   140008071:	call   0x1400080a0
   140008076:	or     r9,0xffffffffffffffff
   14000807a:	xor    r8d,r8d
   14000807d:	mov    rdx,rsi
   140008080:	mov    rcx,rbx
   140008083:	call   0x1400080a0
   140008088:	mov    rax,rbx
   14000808b:	mov    rbx,QWORD PTR [rsp+0x58]
   140008090:	mov    rbp,QWORD PTR [rsp+0x60]
   140008095:	add    rsp,0x30
   140008099:	pop    r14
   14000809b:	pop    rdi
   14000809c:	pop    rsi
   14000809d:	ret    
   14000809e:	int3   
   14000809f:	int3   
   1400080a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400080a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400080aa:	mov    QWORD PTR [rsp+0x20],rsi
   1400080af:	push   r14
   1400080b1:	sub    rsp,0x20
   1400080b5:	mov    rax,QWORD PTR [rdx+0x10]
   1400080b9:	mov    rsi,r9
   1400080bc:	mov    rbp,r8
   1400080bf:	mov    r14,rdx
   1400080c2:	mov    rbx,rcx
   1400080c5:	cmp    rax,r8
   1400080c8:	jb     0x1400081b5
   1400080ce:	sub    rax,r8
   1400080d1:	mov    r8,QWORD PTR [rcx+0x10]
   1400080d5:	cmp    rax,r9
   1400080d8:	cmovb  rsi,rax
   1400080dc:	or     rax,0xffffffffffffffff
   1400080e0:	sub    rax,r8
   1400080e3:	cmp    rax,rsi
   1400080e6:	jbe    0x1400081c2
   1400080ec:	mov    QWORD PTR [rsp+0x30],rdi
   1400080f1:	test   rsi,rsi
   1400080f4:	je     0x140008197
   1400080fa:	lea    rdi,[r8+rsi*1]
   1400080fe:	movabs rax,0x7ffffffffffffffe
   140008108:	cmp    rdi,rax
   14000810b:	ja     0x1400081cf
   140008111:	mov    rcx,QWORD PTR [rcx+0x18]
   140008115:	cmp    rcx,rdi
   140008118:	jae    0x140008140
   14000811a:	mov    rdx,rdi
   14000811d:	mov    rcx,rbx
   140008120:	call   0x140003b90
   140008125:	test   rdi,rdi
   140008128:	je     0x140008197
   14000812a:	cmp    QWORD PTR [r14+0x18],0x8
   14000812f:	jb     0x140008134
   140008131:	mov    r14,QWORD PTR [r14]
   140008134:	cmp    QWORD PTR [rbx+0x18],0x8
   140008139:	jb     0x140008161
   14000813b:	mov    rcx,QWORD PTR [rbx]
   14000813e:	jmp    0x140008164
   140008140:	test   rdi,rdi
   140008143:	jne    0x14000812a
   140008145:	xor    eax,eax
   140008147:	mov    QWORD PTR [rbx+0x10],rax
   14000814b:	cmp    rcx,0x8
   14000814f:	jb     0x140008159
   140008151:	mov    rcx,QWORD PTR [rbx]
   140008154:	mov    WORD PTR [rcx],ax
   140008157:	jmp    0x140008197
   140008159:	mov    rcx,rbx
   14000815c:	mov    WORD PTR [rbx],ax
   14000815f:	jmp    0x140008197
   140008161:	mov    rcx,rbx
   140008164:	test   rsi,rsi
   140008167:	je     0x14000817e
   140008169:	mov    rax,QWORD PTR [rbx+0x10]
   14000816d:	lea    r8,[rsi+rsi*1]
   140008171:	lea    rdx,[r14+rbp*2]
   140008175:	lea    rcx,[rcx+rax*2]
   140008179:	call   0x140018a90
   14000817e:	cmp    QWORD PTR [rbx+0x18],0x8
   140008183:	mov    QWORD PTR [rbx+0x10],rdi
   140008187:	jb     0x14000818e
   140008189:	mov    rcx,QWORD PTR [rbx]
   14000818c:	jmp    0x140008191
   14000818e:	mov    rcx,rbx
   140008191:	xor    eax,eax
   140008193:	mov    WORD PTR [rcx+rdi*2],ax
   140008197:	mov    rdi,QWORD PTR [rsp+0x30]
   14000819c:	mov    rbp,QWORD PTR [rsp+0x40]
   1400081a1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400081a6:	mov    rax,rbx
   1400081a9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400081ae:	add    rsp,0x20
   1400081b2:	pop    r14
   1400081b4:	ret    
   1400081b5:	lea    rcx,[rip+0x2fadc]        # 0x140037c98
   1400081bc:	call   0x140014094
   1400081c1:	int3   
   1400081c2:	lea    rcx,[rip+0x2fae7]        # 0x140037cb0
   1400081c9:	call   0x14001405c
   1400081ce:	int3   
   1400081cf:	lea    rcx,[rip+0x2fada]        # 0x140037cb0
   1400081d6:	call   0x14001405c
   1400081db:	int3   
   1400081dc:	int3   
   1400081dd:	int3   
   1400081de:	int3   
   1400081df:	int3   
   1400081e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400081e5:	mov    QWORD PTR [rsp+0x18],rsi
   1400081ea:	push   r14
   1400081ec:	sub    rsp,0x20
   1400081f0:	mov    r14,r8
   1400081f3:	mov    rsi,rdx
   1400081f6:	mov    rbx,rcx
   1400081f9:	test   rdx,rdx
   1400081fc:	je     0x140008260
   1400081fe:	mov    rdx,QWORD PTR [rcx+0x18]
   140008202:	cmp    rdx,0x8
   140008206:	jb     0x14000820d
   140008208:	mov    rax,QWORD PTR [rcx]
   14000820b:	jmp    0x140008210
   14000820d:	mov    rax,rcx
   140008210:	cmp    rsi,rax
   140008213:	jb     0x140008260
   140008215:	cmp    rdx,0x8
   140008219:	jb     0x14000821e
   14000821b:	mov    rcx,QWORD PTR [rcx]
   14000821e:	mov    rax,QWORD PTR [rbx+0x10]
   140008222:	lea    rcx,[rcx+rax*2]
   140008226:	cmp    rcx,rsi
   140008229:	jbe    0x140008260
   14000822b:	cmp    rdx,0x8
   14000822f:	jb     0x140008236
   140008231:	mov    rax,QWORD PTR [rbx]
   140008234:	jmp    0x140008239
   140008236:	mov    rax,rbx
   140008239:	sub    rsi,rax
   14000823c:	mov    r9,r8
   14000823f:	mov    rdx,rbx
   140008242:	sar    rsi,1
   140008245:	mov    rcx,rbx
   140008248:	mov    r8,rsi
   14000824b:	mov    rbx,QWORD PTR [rsp+0x38]
   140008250:	mov    rsi,QWORD PTR [rsp+0x40]
   140008255:	add    rsp,0x20
   140008259:	pop    r14
   14000825b:	jmp    0x1400080a0
   140008260:	mov    r8,QWORD PTR [rbx+0x10]
   140008264:	or     rax,0xffffffffffffffff
   140008268:	sub    rax,r8
   14000826b:	cmp    rax,r14
   14000826e:	jbe    0x14000832d
   140008274:	mov    QWORD PTR [rsp+0x30],rdi
   140008279:	test   r14,r14
   14000827c:	je     0x140008314
   140008282:	lea    rdi,[r8+r14*1]
   140008286:	movabs rax,0x7ffffffffffffffe
   140008290:	cmp    rdi,rax
   140008293:	ja     0x14000833a
   140008299:	mov    rcx,QWORD PTR [rbx+0x18]
   14000829d:	cmp    rcx,rdi
   1400082a0:	jae    0x1400082be
   1400082a2:	mov    rdx,rdi
   1400082a5:	mov    rcx,rbx
   1400082a8:	call   0x140003b90
   1400082ad:	test   rdi,rdi
   1400082b0:	je     0x140008314
   1400082b2:	cmp    QWORD PTR [rbx+0x18],0x8
   1400082b7:	jb     0x1400082df
   1400082b9:	mov    rcx,QWORD PTR [rbx]
   1400082bc:	jmp    0x1400082e2
   1400082be:	test   rdi,rdi
   1400082c1:	jne    0x1400082b2
   1400082c3:	xor    eax,eax
   1400082c5:	mov    QWORD PTR [rbx+0x10],rax
   1400082c9:	cmp    rcx,0x8
   1400082cd:	jb     0x1400082d7
   1400082cf:	mov    rcx,QWORD PTR [rbx]
   1400082d2:	mov    WORD PTR [rcx],ax
   1400082d5:	jmp    0x140008314
   1400082d7:	mov    rcx,rbx
   1400082da:	mov    WORD PTR [rbx],ax
   1400082dd:	jmp    0x140008314
   1400082df:	mov    rcx,rbx
   1400082e2:	test   r14,r14
   1400082e5:	je     0x1400082fb
   1400082e7:	mov    rax,QWORD PTR [rbx+0x10]
   1400082eb:	lea    r8,[r14+r14*1]
   1400082ef:	mov    rdx,rsi
   1400082f2:	lea    rcx,[rcx+rax*2]
   1400082f6:	call   0x140018a90
   1400082fb:	cmp    QWORD PTR [rbx+0x18],0x8
   140008300:	mov    QWORD PTR [rbx+0x10],rdi
   140008304:	jb     0x14000830b
   140008306:	mov    rcx,QWORD PTR [rbx]
   140008309:	jmp    0x14000830e
   14000830b:	mov    rcx,rbx
   14000830e:	xor    eax,eax
   140008310:	mov    WORD PTR [rcx+rdi*2],ax
   140008314:	mov    rdi,QWORD PTR [rsp+0x30]
   140008319:	mov    rsi,QWORD PTR [rsp+0x40]
   14000831e:	mov    rax,rbx
   140008321:	mov    rbx,QWORD PTR [rsp+0x38]
   140008326:	add    rsp,0x20
   14000832a:	pop    r14
   14000832c:	ret    
   14000832d:	lea    rcx,[rip+0x2f97c]        # 0x140037cb0
   140008334:	call   0x14001405c
   140008339:	int3   
   14000833a:	lea    rcx,[rip+0x2f96f]        # 0x140037cb0
   140008341:	call   0x14001405c
   140008346:	int3   
   140008347:	int3   
   140008348:	int3   
   140008349:	int3   
   14000834a:	int3   
   14000834b:	int3   
   14000834c:	int3   
   14000834d:	int3   
   14000834e:	int3   
   14000834f:	int3   
   140008350:	mov    QWORD PTR [rsp+0x10],rbx
   140008355:	mov    QWORD PTR [rsp+0x18],rsi
   14000835a:	push   r14
   14000835c:	sub    rsp,0x20
   140008360:	or     rdx,0xffffffffffffffff
   140008364:	mov    r14,r8
   140008367:	mov    rbx,rcx
   14000836a:	cmp    QWORD PTR [r8+0x10],rdx
   14000836e:	mov    rsi,rdx
   140008371:	cmovb  rsi,QWORD PTR [r8+0x10]
   140008376:	mov    r8,QWORD PTR [rcx+0x10]
   14000837a:	sub    rdx,r8
   14000837d:	cmp    rdx,rsi
   140008380:	jbe    0x1400084b5
   140008386:	mov    QWORD PTR [rsp+0x30],rdi
   14000838b:	test   rsi,rsi
   14000838e:	je     0x14000849c
   140008394:	lea    rdi,[r8+rsi*1]
   140008398:	movabs rax,0x7ffffffffffffffe
   1400083a2:	cmp    rdi,rax
   1400083a5:	ja     0x1400084c2
   1400083ab:	mov    rcx,QWORD PTR [rcx+0x18]
   1400083af:	cmp    rcx,rdi
   1400083b2:	jae    0x1400083d7
   1400083b4:	mov    rdx,rdi
   1400083b7:	mov    rcx,rbx
   1400083ba:	call   0x140003b90
   1400083bf:	test   rdi,rdi
   1400083c2:	je     0x14000849c
   1400083c8:	mov    rax,QWORD PTR [rbx+0x18]
   1400083cc:	cmp    rax,0x8
   1400083d0:	jb     0x1400083fe
   1400083d2:	mov    rdx,QWORD PTR [rbx]
   1400083d5:	jmp    0x140008401
   1400083d7:	test   rdi,rdi
   1400083da:	jne    0x1400083c8
   1400083dc:	xor    eax,eax
   1400083de:	mov    QWORD PTR [rbx+0x10],rax
   1400083e2:	cmp    rcx,0x8
   1400083e6:	jb     0x1400083f3
   1400083e8:	mov    rcx,QWORD PTR [rbx]
   1400083eb:	mov    WORD PTR [rcx],ax
   1400083ee:	jmp    0x14000849c
   1400083f3:	mov    rcx,rbx
   1400083f6:	mov    WORD PTR [rbx],ax
   1400083f9:	jmp    0x14000849c
   1400083fe:	mov    rdx,rbx
   140008401:	cmp    rax,0x8
   140008405:	jb     0x14000840c
   140008407:	mov    rax,QWORD PTR [rbx]
   14000840a:	jmp    0x14000840f
   14000840c:	mov    rax,rbx
   14000840f:	mov    r8,QWORD PTR [rbx+0x10]
   140008413:	test   r8,r8
   140008416:	je     0x140008424
   140008418:	lea    rcx,[rax+rsi*2]
   14000841c:	add    r8,r8
   14000841f:	call   0x140018a90
   140008424:	cmp    rbx,r14
   140008427:	jne    0x140008459
   140008429:	mov    rax,QWORD PTR [rbx+0x18]
   14000842d:	cmp    rax,0x8
   140008431:	jb     0x140008438
   140008433:	mov    rdx,QWORD PTR [rbx]
   140008436:	jmp    0x14000843b
   140008438:	mov    rdx,rbx
   14000843b:	cmp    rax,0x8
   14000843f:	jb     0x140008446
   140008441:	mov    rcx,QWORD PTR [rbx]
   140008444:	jmp    0x140008449
   140008446:	mov    rcx,rbx
   140008449:	test   rsi,rsi
   14000844c:	je     0x140008483
   14000844e:	lea    r8,[rsi+rsi*1]
   140008452:	call   0x140018a90
   140008457:	jmp    0x140008483
   140008459:	cmp    QWORD PTR [r14+0x18],0x8
   14000845e:	jb     0x140008463
   140008460:	mov    r14,QWORD PTR [r14]
   140008463:	cmp    QWORD PTR [rbx+0x18],0x8
   140008468:	jb     0x14000846f
   14000846a:	mov    rcx,QWORD PTR [rbx]
   14000846d:	jmp    0x140008472
   14000846f:	mov    rcx,rbx
   140008472:	test   rsi,rsi
   140008475:	je     0x140008483
   140008477:	lea    r8,[rsi+rsi*1]
   14000847b:	mov    rdx,r14
   14000847e:	call   0x140018a90
   140008483:	cmp    QWORD PTR [rbx+0x18],0x8
   140008488:	mov    QWORD PTR [rbx+0x10],rdi
   14000848c:	jb     0x140008493
   14000848e:	mov    rcx,QWORD PTR [rbx]
   140008491:	jmp    0x140008496
   140008493:	mov    rcx,rbx
   140008496:	xor    eax,eax
   140008498:	mov    WORD PTR [rcx+rdi*2],ax
   14000849c:	mov    rdi,QWORD PTR [rsp+0x30]
   1400084a1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400084a6:	mov    rax,rbx
   1400084a9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400084ae:	add    rsp,0x20
   1400084b2:	pop    r14
   1400084b4:	ret    
   1400084b5:	lea    rcx,[rip+0x2f7f4]        # 0x140037cb0
   1400084bc:	call   0x14001405c
   1400084c1:	int3   
   1400084c2:	lea    rcx,[rip+0x2f7e7]        # 0x140037cb0
   1400084c9:	call   0x14001405c
   1400084ce:	int3   
   1400084cf:	int3   
   1400084d0:	rex push rdi
   1400084d2:	sub    rsp,0x20
   1400084d6:	mov    QWORD PTR [rsp+0x40],rsi
   1400084db:	mov    rdi,r8
   1400084de:	mov    rsi,rdx
   1400084e1:	cmp    rcx,rdx
   1400084e4:	je     0x140008578
   1400084ea:	mov    QWORD PTR [rsp+0x30],rbx
   1400084ef:	mov    QWORD PTR [rsp+0x38],rbp
   1400084f4:	xor    ebp,ebp
   1400084f6:	lea    rbx,[rcx+0x10]
   1400084fa:	nop    WORD PTR [rax+rax*1+0x0]
   140008500:	test   rdi,rdi
   140008503:	je     0x14000855d
   140008505:	mov    QWORD PTR [rdi+0x18],0x7
   14000850d:	mov    QWORD PTR [rdi+0x10],rbp
   140008511:	mov    WORD PTR [rdi],bp
   140008514:	cmp    QWORD PTR [rbx+0x8],0x8
   140008519:	jae    0x140008534
   14000851b:	mov    r8,QWORD PTR [rbx]
   14000851e:	inc    r8
   140008521:	je     0x14000853f
   140008523:	lea    rdx,[rbx-0x10]
   140008527:	add    r8,r8
   14000852a:	mov    rcx,rdi
   14000852d:	call   0x140018a90
   140008532:	jmp    0x14000853f
   140008534:	mov    rax,QWORD PTR [rbx-0x10]
   140008538:	mov    QWORD PTR [rdi],rax
   14000853b:	mov    QWORD PTR [rbx-0x10],rbp
   14000853f:	mov    rax,QWORD PTR [rbx]
   140008542:	mov    QWORD PTR [rdi+0x10],rax
   140008546:	mov    rax,QWORD PTR [rbx+0x8]
   14000854a:	mov    QWORD PTR [rdi+0x18],rax
   14000854e:	mov    QWORD PTR [rbx+0x8],0x7
   140008556:	mov    QWORD PTR [rbx],rbp
   140008559:	mov    WORD PTR [rbx-0x10],bp
   14000855d:	add    rbx,0x20
   140008561:	add    rdi,0x20
   140008565:	lea    rax,[rbx-0x10]
   140008569:	cmp    rax,rsi
   14000856c:	jne    0x140008500
   14000856e:	mov    rbp,QWORD PTR [rsp+0x38]
   140008573:	mov    rbx,QWORD PTR [rsp+0x30]
   140008578:	mov    rsi,QWORD PTR [rsp+0x40]
   14000857d:	mov    rax,rdi
   140008580:	add    rsp,0x20
   140008584:	pop    rdi
   140008585:	ret    
   140008586:	int3   
   140008587:	int3   
   140008588:	int3   
   140008589:	int3   
   14000858a:	int3   
   14000858b:	int3   
   14000858c:	int3   
   14000858d:	int3   
   14000858e:	int3   
   14000858f:	int3   
   140008590:	mov    QWORD PTR [rsp+0x10],rbx
   140008595:	mov    QWORD PTR [rsp+0x18],rbp
   14000859a:	push   rsi
   14000859b:	sub    rsp,0x20
   14000859f:	mov    rsi,r8
   1400085a2:	mov    rbp,rdx
   1400085a5:	mov    rbx,rcx
   1400085a8:	test   rdx,rdx
   1400085ab:	je     0x140008607
   1400085ad:	mov    r8,QWORD PTR [rcx+0x18]
   1400085b1:	cmp    r8,0x10
   1400085b5:	jb     0x1400085bc
   1400085b7:	mov    rax,QWORD PTR [rcx]
   1400085ba:	jmp    0x1400085bf
   1400085bc:	mov    rax,rcx
   1400085bf:	cmp    rdx,rax
   1400085c2:	jb     0x140008607
   1400085c4:	cmp    r8,0x10
   1400085c8:	jb     0x1400085cd
   1400085ca:	mov    rcx,QWORD PTR [rcx]
   1400085cd:	add    rcx,QWORD PTR [rbx+0x10]
   1400085d1:	cmp    rcx,rdx
   1400085d4:	jbe    0x140008607
   1400085d6:	cmp    r8,0x10
   1400085da:	jb     0x1400085e1
   1400085dc:	mov    rax,QWORD PTR [rbx]
   1400085df:	jmp    0x1400085e4
   1400085e1:	mov    rax,rbx
   1400085e4:	sub    rbp,rax
   1400085e7:	mov    r9,rsi
   1400085ea:	mov    rdx,rbx
   1400085ed:	mov    r8,rbp
   1400085f0:	mov    rcx,rbx
   1400085f3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400085f8:	mov    rbp,QWORD PTR [rsp+0x40]
   1400085fd:	add    rsp,0x20
   140008601:	pop    rsi
   140008602:	jmp    0x1400086e0
   140008607:	mov    r8,QWORD PTR [rbx+0x10]
   14000860b:	or     rax,0xffffffffffffffff
   14000860f:	sub    rax,r8
   140008612:	cmp    rax,rsi
   140008615:	jbe    0x1400086c1
   14000861b:	mov    QWORD PTR [rsp+0x30],rdi
   140008620:	test   rsi,rsi
   140008623:	je     0x1400086a9
   140008629:	lea    rdi,[r8+rsi*1]
   14000862d:	cmp    rdi,0xfffffffffffffffe
   140008631:	ja     0x1400086ce
   140008637:	mov    rax,QWORD PTR [rbx+0x18]
   14000863b:	cmp    rax,rdi
   14000863e:	jae    0x14000865c
   140008640:	mov    rdx,rdi
   140008643:	mov    rcx,rbx
   140008646:	call   0x140008c70
   14000864b:	test   rdi,rdi
   14000864e:	je     0x1400086a9
   140008650:	cmp    QWORD PTR [rbx+0x18],0x10
   140008655:	jb     0x14000867b
   140008657:	mov    rcx,QWORD PTR [rbx]
   14000865a:	jmp    0x14000867e
   14000865c:	test   rdi,rdi
   14000865f:	jne    0x140008650
   140008661:	mov    QWORD PTR [rbx+0x10],rdi
   140008665:	cmp    rax,0x10
   140008669:	jb     0x140008673
   14000866b:	mov    rax,QWORD PTR [rbx]
   14000866e:	mov    BYTE PTR [rax],dil
   140008671:	jmp    0x1400086a9
   140008673:	mov    rax,rbx
   140008676:	mov    BYTE PTR [rbx],0x0
   140008679:	jmp    0x1400086a9
   14000867b:	mov    rcx,rbx
   14000867e:	test   rsi,rsi
   140008681:	je     0x140008692
   140008683:	add    rcx,QWORD PTR [rbx+0x10]
   140008687:	mov    r8,rsi
   14000868a:	mov    rdx,rbp
   14000868d:	call   0x140018a90
   140008692:	cmp    QWORD PTR [rbx+0x18],0x10
   140008697:	mov    QWORD PTR [rbx+0x10],rdi
   14000869b:	jb     0x1400086a2
   14000869d:	mov    rax,QWORD PTR [rbx]
   1400086a0:	jmp    0x1400086a5
   1400086a2:	mov    rax,rbx
   1400086a5:	mov    BYTE PTR [rax+rdi*1],0x0
   1400086a9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400086ae:	mov    rbp,QWORD PTR [rsp+0x40]
   1400086b3:	mov    rax,rbx
   1400086b6:	mov    rbx,QWORD PTR [rsp+0x38]
   1400086bb:	add    rsp,0x20
   1400086bf:	pop    rsi
   1400086c0:	ret    
   1400086c1:	lea    rcx,[rip+0x2f5e8]        # 0x140037cb0
   1400086c8:	call   0x14001405c
   1400086cd:	int3   
   1400086ce:	lea    rcx,[rip+0x2f5db]        # 0x140037cb0
   1400086d5:	call   0x14001405c
   1400086da:	int3   
   1400086db:	int3   
   1400086dc:	int3   
   1400086dd:	int3   
   1400086de:	int3   
   1400086df:	int3   
   1400086e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400086e5:	mov    QWORD PTR [rsp+0x18],rbp
   1400086ea:	mov    QWORD PTR [rsp+0x20],rsi
   1400086ef:	push   r14
   1400086f1:	sub    rsp,0x20
   1400086f5:	mov    rax,QWORD PTR [rdx+0x10]
   1400086f9:	mov    rsi,r9
   1400086fc:	mov    rbp,r8
   1400086ff:	mov    r14,rdx
   140008702:	mov    rbx,rcx
   140008705:	cmp    rax,r8
   140008708:	jb     0x1400087e0
   14000870e:	sub    rax,r8
   140008711:	mov    r8,QWORD PTR [rcx+0x10]
   140008715:	cmp    rax,r9
   140008718:	cmovb  rsi,rax
   14000871c:	or     rax,0xffffffffffffffff
   140008720:	sub    rax,r8
   140008723:	cmp    rax,rsi
   140008726:	jbe    0x1400087ed
   14000872c:	mov    QWORD PTR [rsp+0x30],rdi
   140008731:	test   rsi,rsi
   140008734:	je     0x1400087c2
   14000873a:	lea    rdi,[r8+rsi*1]
   14000873e:	cmp    rdi,0xfffffffffffffffe
   140008742:	ja     0x1400087fa
   140008748:	mov    rax,QWORD PTR [rcx+0x18]
   14000874c:	cmp    rax,rdi
   14000874f:	jae    0x140008774
   140008751:	mov    rdx,rdi
   140008754:	call   0x140008c70
   140008759:	test   rdi,rdi
   14000875c:	je     0x1400087c2
   14000875e:	cmp    QWORD PTR [r14+0x18],0x10
   140008763:	jb     0x140008768
   140008765:	mov    r14,QWORD PTR [r14]
   140008768:	cmp    QWORD PTR [rbx+0x18],0x10
   14000876d:	jb     0x140008793
   14000876f:	mov    rcx,QWORD PTR [rbx]
   140008772:	jmp    0x140008796
   140008774:	test   rdi,rdi
   140008777:	jne    0x14000875e
   140008779:	mov    QWORD PTR [rcx+0x10],rdi
   14000877d:	cmp    rax,0x10
   140008781:	jb     0x14000878b
   140008783:	mov    rax,QWORD PTR [rcx]
   140008786:	mov    BYTE PTR [rax],dil
   140008789:	jmp    0x1400087c2
   14000878b:	mov    rax,rcx
   14000878e:	mov    BYTE PTR [rcx],0x0
   140008791:	jmp    0x1400087c2
   140008793:	mov    rcx,rbx
   140008796:	test   rsi,rsi
   140008799:	je     0x1400087ab
   14000879b:	add    rcx,QWORD PTR [rbx+0x10]
   14000879f:	lea    rdx,[r14+rbp*1]
   1400087a3:	mov    r8,rsi
   1400087a6:	call   0x140018a90
   1400087ab:	cmp    QWORD PTR [rbx+0x18],0x10
   1400087b0:	mov    QWORD PTR [rbx+0x10],rdi
   1400087b4:	jb     0x1400087bb
   1400087b6:	mov    rax,QWORD PTR [rbx]
   1400087b9:	jmp    0x1400087be
   1400087bb:	mov    rax,rbx
   1400087be:	mov    BYTE PTR [rax+rdi*1],0x0
   1400087c2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400087c7:	mov    rbp,QWORD PTR [rsp+0x40]
   1400087cc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400087d1:	mov    rax,rbx
   1400087d4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400087d9:	add    rsp,0x20
   1400087dd:	pop    r14
   1400087df:	ret    
   1400087e0:	lea    rcx,[rip+0x2f4b1]        # 0x140037c98
   1400087e7:	call   0x140014094
   1400087ec:	int3   
   1400087ed:	lea    rcx,[rip+0x2f4bc]        # 0x140037cb0
   1400087f4:	call   0x14001405c
   1400087f9:	int3   
   1400087fa:	lea    rcx,[rip+0x2f4af]        # 0x140037cb0
   140008801:	call   0x14001405c
   140008806:	int3   
   140008807:	int3   
   140008808:	int3   
   140008809:	int3   
   14000880a:	int3   
   14000880b:	int3   
   14000880c:	int3   
   14000880d:	int3   
   14000880e:	int3   
   14000880f:	int3   
   140008810:	mov    QWORD PTR [rsp+0x8],rbx
   140008815:	push   rdi
   140008816:	sub    rsp,0x20
   14000881a:	mov    QWORD PTR [rcx+0x18],0xf
   140008822:	mov    QWORD PTR [rcx+0x10],0x0
   14000882a:	mov    BYTE PTR [rcx],0x0
   14000882d:	cmp    QWORD PTR [rdx+0x18],0x10
   140008832:	mov    rbx,rdx
   140008835:	mov    rdi,rcx
   140008838:	jae    0x14000884a
   14000883a:	mov    r8,QWORD PTR [rdx+0x10]
   14000883e:	inc    r8
   140008841:	je     0x140008857
   140008843:	call   0x140018a90
   140008848:	jmp    0x140008857
   14000884a:	mov    rax,QWORD PTR [rdx]
   14000884d:	mov    QWORD PTR [rcx],rax
   140008850:	mov    QWORD PTR [rdx],0x0
   140008857:	mov    rax,QWORD PTR [rbx+0x10]
   14000885b:	mov    QWORD PTR [rdi+0x10],rax
   14000885f:	mov    rax,QWORD PTR [rbx+0x18]
   140008863:	mov    QWORD PTR [rdi+0x18],rax
   140008867:	mov    QWORD PTR [rbx+0x18],0xf
   14000886f:	mov    QWORD PTR [rbx+0x10],0x0
   140008877:	mov    BYTE PTR [rbx],0x0
   14000887a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000887f:	mov    rax,rdi
   140008882:	add    rsp,0x20
   140008886:	pop    rdi
   140008887:	ret    
   140008888:	int3   
   140008889:	int3   
   14000888a:	int3   
   14000888b:	int3   
   14000888c:	int3   
   14000888d:	int3   
   14000888e:	int3   
   14000888f:	int3   
   140008890:	mov    QWORD PTR [rsp+0x8],rbx
   140008895:	mov    QWORD PTR [rsp+0x10],rsi
   14000889a:	push   rdi
   14000889b:	sub    rsp,0x20
   14000889f:	xor    esi,esi
   1400088a1:	mov    QWORD PTR [rcx+0x18],0x7
   1400088a9:	mov    rbx,rdx
   1400088ac:	mov    QWORD PTR [rcx+0x10],rsi
   1400088b0:	mov    WORD PTR [rcx],si
   1400088b3:	cmp    QWORD PTR [rdx+0x18],0x8
   1400088b8:	mov    rdi,rcx
   1400088bb:	jae    0x1400088d0
   1400088bd:	mov    r8,QWORD PTR [rdx+0x10]
   1400088c1:	inc    r8
   1400088c4:	je     0x1400088d9
   1400088c6:	add    r8,r8
   1400088c9:	call   0x140018a90
   1400088ce:	jmp    0x1400088d9
   1400088d0:	mov    rax,QWORD PTR [rdx]
   1400088d3:	mov    QWORD PTR [rcx],rax
   1400088d6:	mov    QWORD PTR [rdx],rsi
   1400088d9:	mov    rax,QWORD PTR [rbx+0x10]
   1400088dd:	mov    QWORD PTR [rdi+0x10],rax
   1400088e1:	mov    rax,QWORD PTR [rbx+0x18]
   1400088e5:	mov    QWORD PTR [rdi+0x18],rax
   1400088e9:	mov    QWORD PTR [rbx+0x10],rsi
   1400088ed:	mov    QWORD PTR [rbx+0x18],0x7
   1400088f5:	mov    WORD PTR [rbx],si
   1400088f8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400088fd:	mov    rsi,QWORD PTR [rsp+0x38]
   140008902:	mov    rax,rdi
   140008905:	add    rsp,0x20
   140008909:	pop    rdi
   14000890a:	ret    
   14000890b:	int3   
   14000890c:	int3   
   14000890d:	int3   
   14000890e:	int3   
   14000890f:	int3   
   140008910:	mov    QWORD PTR [rsp+0x8],rbx
   140008915:	mov    QWORD PTR [rsp+0x10],rsi
   14000891a:	push   rdi
   14000891b:	sub    rsp,0x20
   14000891f:	xor    esi,esi
   140008921:	cmp    QWORD PTR [rdx+0x18],0x8
   140008926:	mov    rbx,rdx
   140008929:	mov    rdi,rcx
   14000892c:	jae    0x140008941
   14000892e:	mov    r8,QWORD PTR [rdx+0x10]
   140008932:	inc    r8
   140008935:	je     0x14000894f
   140008937:	add    r8,r8
   14000893a:	call   0x140018a90
   14000893f:	jmp    0x14000894f
   140008941:	test   rcx,rcx
   140008944:	je     0x14000894c
   140008946:	mov    rax,QWORD PTR [rdx]
   140008949:	mov    QWORD PTR [rcx],rax
   14000894c:	mov    QWORD PTR [rdx],rsi
   14000894f:	mov    rax,QWORD PTR [rbx+0x10]
   140008953:	mov    QWORD PTR [rdi+0x10],rax
   140008957:	mov    rax,QWORD PTR [rbx+0x18]
   14000895b:	mov    QWORD PTR [rdi+0x18],rax
   14000895f:	mov    QWORD PTR [rbx+0x10],rsi
   140008963:	mov    QWORD PTR [rbx+0x18],0x7
   14000896b:	mov    WORD PTR [rbx],si
   14000896e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008973:	mov    rsi,QWORD PTR [rsp+0x38]
   140008978:	add    rsp,0x20
   14000897c:	pop    rdi
   14000897d:	ret    
   14000897e:	int3   
   14000897f:	int3   
   140008980:	mov    QWORD PTR [rsp+0x8],rbx
   140008985:	push   rdi
   140008986:	sub    rsp,0x20
   14000898a:	cmp    QWORD PTR [rdx+0x18],0x10
   14000898f:	mov    rbx,rdx
   140008992:	mov    rdi,rcx
   140008995:	jae    0x1400089a7
   140008997:	mov    r8,QWORD PTR [rdx+0x10]
   14000899b:	inc    r8
   14000899e:	je     0x1400089b9
   1400089a0:	call   0x140018a90
   1400089a5:	jmp    0x1400089b9
   1400089a7:	test   rcx,rcx
   1400089aa:	je     0x1400089b2
   1400089ac:	mov    rax,QWORD PTR [rdx]
   1400089af:	mov    QWORD PTR [rcx],rax
   1400089b2:	mov    QWORD PTR [rdx],0x0
   1400089b9:	mov    rax,QWORD PTR [rbx+0x10]
   1400089bd:	mov    QWORD PTR [rdi+0x10],rax
   1400089c1:	mov    rax,QWORD PTR [rbx+0x18]
   1400089c5:	mov    QWORD PTR [rdi+0x18],rax
   1400089c9:	mov    QWORD PTR [rbx+0x18],0xf
   1400089d1:	mov    QWORD PTR [rbx+0x10],0x0
   1400089d9:	mov    BYTE PTR [rbx],0x0
   1400089dc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400089e1:	add    rsp,0x20
   1400089e5:	pop    rdi
   1400089e6:	ret    
   1400089e7:	int3   
   1400089e8:	int3   
   1400089e9:	int3   
   1400089ea:	int3   
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400089f5:	jb     0x1400089ff
   1400089f7:	mov    rax,QWORD PTR [rcx]
   1400089fa:	lea    rax,[rax+rdx*2]
   1400089fe:	ret    
   1400089ff:	lea    rax,[rcx+rdx*2]
   140008a03:	ret    
   140008a04:	int3   
   140008a05:	int3   
   140008a06:	int3   
   140008a07:	int3   
   140008a08:	int3   
   140008a09:	int3   
   140008a0a:	int3   
   140008a0b:	int3   
   140008a0c:	int3   
   140008a0d:	int3   
   140008a0e:	int3   
   140008a0f:	int3   
   140008a10:	xor    eax,eax
   140008a12:	mov    QWORD PTR [rcx+0x18],0x7
   140008a1a:	mov    QWORD PTR [rcx+0x10],rax
   140008a1e:	mov    WORD PTR [rcx],ax
   140008a21:	mov    rax,rcx
   140008a24:	ret    
   140008a25:	int3   
   140008a26:	int3   
   140008a27:	int3   
   140008a28:	int3   
   140008a29:	int3   
   140008a2a:	int3   
   140008a2b:	int3   
   140008a2c:	int3   
   140008a2d:	int3   
   140008a2e:	int3   
   140008a2f:	int3   
   140008a30:	rex push rbx
   140008a32:	sub    rsp,0x20
   140008a36:	cmp    QWORD PTR [rcx+0x18],0x10
   140008a3b:	mov    rbx,rcx
   140008a3e:	jb     0x140008a48
   140008a40:	mov    rcx,QWORD PTR [rcx]
   140008a43:	call   0x140018a04
   140008a48:	mov    QWORD PTR [rbx+0x18],0xf
   140008a50:	mov    QWORD PTR [rbx+0x10],0x0
   140008a58:	mov    BYTE PTR [rbx],0x0
   140008a5b:	add    rsp,0x20
   140008a5f:	pop    rbx
   140008a60:	ret    
   140008a61:	int3   
   140008a62:	int3   
   140008a63:	int3   
   140008a64:	int3   
   140008a65:	int3   
   140008a66:	int3   
   140008a67:	int3   
   140008a68:	int3   
   140008a69:	int3   
   140008a6a:	int3   
   140008a6b:	int3   
   140008a6c:	int3   
   140008a6d:	int3   
   140008a6e:	int3   
   140008a6f:	int3   
   140008a70:	mov    QWORD PTR [rsp+0x8],rbx
   140008a75:	push   rdi
   140008a76:	sub    rsp,0x20
   140008a7a:	mov    rdi,QWORD PTR [rcx+0x10]
   140008a7e:	mov    rbx,rcx
   140008a81:	cmp    rdi,rdx
   140008a84:	jb     0x140008b2e
   140008a8a:	mov    rax,rdi
   140008a8d:	sub    rax,rdx
   140008a90:	cmp    rax,r8
   140008a93:	ja     0x140008aca
   140008a95:	cmp    QWORD PTR [rcx+0x18],0x10
   140008a9a:	mov    QWORD PTR [rcx+0x10],rdx
   140008a9e:	jb     0x140008ab5
   140008aa0:	mov    rax,QWORD PTR [rcx]
   140008aa3:	mov    BYTE PTR [rax+rdx*1],0x0
   140008aa7:	mov    rax,rcx
   140008aaa:	mov    rbx,QWORD PTR [rsp+0x30]
   140008aaf:	add    rsp,0x20
   140008ab3:	pop    rdi
   140008ab4:	ret    
   140008ab5:	mov    rax,rcx
   140008ab8:	mov    BYTE PTR [rcx+rdx*1],0x0
   140008abc:	mov    rax,rbx
   140008abf:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ac4:	add    rsp,0x20
   140008ac8:	pop    rdi
   140008ac9:	ret    
   140008aca:	test   r8,r8
   140008acd:	je     0x140008b20
   140008acf:	cmp    QWORD PTR [rcx+0x18],0x10
   140008ad4:	jb     0x140008adb
   140008ad6:	mov    rax,QWORD PTR [rcx]
   140008ad9:	jmp    0x140008ade
   140008adb:	mov    rax,rcx
   140008ade:	sub    rdi,r8
   140008ae1:	lea    rcx,[rax+rdx*1]
   140008ae5:	mov    rax,rdi
   140008ae8:	sub    rax,rdx
   140008aeb:	je     0x140008af9
   140008aed:	lea    rdx,[rcx+r8*1]
   140008af1:	mov    r8,rax
   140008af4:	call   0x140018a90
   140008af9:	cmp    QWORD PTR [rbx+0x18],0x10
   140008afe:	mov    QWORD PTR [rbx+0x10],rdi
   140008b02:	jb     0x140008b19
   140008b04:	mov    rax,QWORD PTR [rbx]
   140008b07:	mov    BYTE PTR [rax+rdi*1],0x0
   140008b0b:	mov    rax,rbx
   140008b0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b13:	add    rsp,0x20
   140008b17:	pop    rdi
   140008b18:	ret    
   140008b19:	mov    rax,rbx
   140008b1c:	mov    BYTE PTR [rbx+rdi*1],0x0
   140008b20:	mov    rax,rbx
   140008b23:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b28:	add    rsp,0x20
   140008b2c:	pop    rdi
   140008b2d:	ret    
   140008b2e:	lea    rcx,[rip+0x2f163]        # 0x140037c98
   140008b35:	call   0x140014094
   140008b3a:	int3   
   140008b3b:	int3   
   140008b3c:	int3   
   140008b3d:	int3   
   140008b3e:	int3   
   140008b3f:	int3   
   140008b40:	mov    QWORD PTR [rsp+0x8],rbx
   140008b45:	mov    QWORD PTR [rsp+0x10],rbp
   140008b4a:	mov    QWORD PTR [rsp+0x18],rsi
   140008b4f:	push   rdi
   140008b50:	sub    rsp,0x20
   140008b54:	mov    rdi,QWORD PTR [rdx+0x10]
   140008b58:	mov    rbp,r8
   140008b5b:	mov    rsi,rdx
   140008b5e:	mov    rbx,rcx
   140008b61:	cmp    rdi,r8
   140008b64:	jb     0x140008c44
   140008b6a:	sub    rdi,r8
   140008b6d:	cmp    r9,rdi
   140008b70:	cmovb  rdi,r9
   140008b74:	cmp    rcx,rdx
   140008b77:	jne    0x140008ba8
   140008b79:	lea    rax,[rdi+r8*1]
   140008b7d:	cmp    QWORD PTR [rcx+0x10],rax
   140008b81:	jb     0x140008c51
   140008b87:	cmp    QWORD PTR [rcx+0x18],0x10
   140008b8c:	mov    QWORD PTR [rcx+0x10],rax
   140008b90:	jb     0x140008b95
   140008b92:	mov    rcx,QWORD PTR [rcx]
   140008b95:	mov    BYTE PTR [rcx+rax*1],0x0
   140008b99:	xor    edx,edx
   140008b9b:	mov    rcx,rbx
   140008b9e:	call   0x140008a70
   140008ba3:	jmp    0x140008c2c
   140008ba8:	cmp    rdi,0xfffffffffffffffe
   140008bac:	ja     0x140008c5e
   140008bb2:	mov    rax,QWORD PTR [rcx+0x18]
   140008bb6:	cmp    rax,rdi
   140008bb9:	jae    0x140008be2
   140008bbb:	mov    r8,QWORD PTR [rcx+0x10]
   140008bbf:	mov    rdx,rdi
   140008bc2:	call   0x140008c70
   140008bc7:	test   rdi,rdi
   140008bca:	je     0x140008c2c
   140008bcc:	cmp    QWORD PTR [rsi+0x18],0x10
   140008bd1:	jb     0x140008bd6
   140008bd3:	mov    rsi,QWORD PTR [rsi]
   140008bd6:	cmp    QWORD PTR [rbx+0x18],0x10
   140008bdb:	jb     0x140008c01
   140008bdd:	mov    rcx,QWORD PTR [rbx]
   140008be0:	jmp    0x140008c04
   140008be2:	test   rdi,rdi
   140008be5:	jne    0x140008bcc
   140008be7:	mov    QWORD PTR [rcx+0x10],rdi
   140008beb:	cmp    rax,0x10
   140008bef:	jb     0x140008bf9
   140008bf1:	mov    rax,QWORD PTR [rcx]
   140008bf4:	mov    BYTE PTR [rax],dil
   140008bf7:	jmp    0x140008c2c
   140008bf9:	mov    rax,rcx
   140008bfc:	mov    BYTE PTR [rcx],0x0
   140008bff:	jmp    0x140008c2c
   140008c01:	mov    rcx,rbx
   140008c04:	test   rdi,rdi
   140008c07:	je     0x140008c15
   140008c09:	lea    rdx,[rsi+rbp*1]
   140008c0d:	mov    r8,rdi
   140008c10:	call   0x140018a90
   140008c15:	cmp    QWORD PTR [rbx+0x18],0x10
   140008c1a:	mov    QWORD PTR [rbx+0x10],rdi
   140008c1e:	jb     0x140008c25
   140008c20:	mov    rax,QWORD PTR [rbx]
   140008c23:	jmp    0x140008c28
   140008c25:	mov    rax,rbx
   140008c28:	mov    BYTE PTR [rax+rdi*1],0x0
   140008c2c:	mov    rbp,QWORD PTR [rsp+0x38]
   140008c31:	mov    rsi,QWORD PTR [rsp+0x40]
   140008c36:	mov    rax,rbx
   140008c39:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c3e:	add    rsp,0x20
   140008c42:	pop    rdi
   140008c43:	ret    
   140008c44:	lea    rcx,[rip+0x2f04d]        # 0x140037c98
   140008c4b:	call   0x140014094
   140008c50:	int3   
   140008c51:	lea    rcx,[rip+0x2f040]        # 0x140037c98
   140008c58:	call   0x140014094
   140008c5d:	int3   
   140008c5e:	lea    rcx,[rip+0x2f04b]        # 0x140037cb0
   140008c65:	call   0x14001405c
   140008c6a:	int3   
   140008c6b:	int3   
   140008c6c:	int3   
   140008c6d:	int3   
   140008c6e:	int3   
   140008c6f:	int3   
   140008c70:	mov    QWORD PTR [rsp+0x18],r8
   140008c75:	mov    QWORD PTR [rsp+0x10],rdx
   140008c7a:	mov    QWORD PTR [rsp+0x8],rcx
   140008c7f:	push   rbx
   140008c80:	push   rsi
   140008c81:	push   rdi
   140008c82:	push   r14
   140008c84:	sub    rsp,0x38
   140008c88:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008c91:	mov    rsi,r8
   140008c94:	mov    rbx,rcx
   140008c97:	mov    rdi,rdx
   140008c9a:	or     rdi,0xf
   140008c9e:	cmp    rdi,0xfffffffffffffffe
   140008ca2:	jbe    0x140008ca9
   140008ca4:	mov    rdi,rdx
   140008ca7:	jmp    0x140008cde
   140008ca9:	mov    r8,QWORD PTR [rcx+0x18]
   140008cad:	mov    rcx,r8
   140008cb0:	shr    rcx,1
   140008cb3:	movabs rax,0xaaaaaaaaaaaaaaab
   140008cbd:	mul    rdi
   140008cc0:	shr    rdx,1
   140008cc3:	cmp    rcx,rdx
   140008cc6:	jbe    0x140008cde
   140008cc8:	mov    rdi,0xfffffffffffffffe
   140008ccf:	mov    rax,rdi
   140008cd2:	sub    rax,rcx
   140008cd5:	cmp    r8,rax
   140008cd8:	ja     0x140008cde
   140008cda:	lea    rdi,[rcx+r8*1]
   140008cde:	lea    rcx,[rdi+0x1]
   140008ce2:	xor    r14d,r14d
   140008ce5:	test   rcx,rcx
   140008ce8:	je     0x140008d03
   140008cea:	cmp    rcx,0xffffffffffffffff
   140008cee:	ja     0x140008cfd
   140008cf0:	call   0x140018a0c
   140008cf5:	mov    r14,rax
   140008cf8:	test   rax,rax
   140008cfb:	jne    0x140008d03
   140008cfd:	call   0x140014018
   140008d02:	nop
   140008d03:	jmp    0x140008d19
   140008d05:	mov    rbx,QWORD PTR [rsp+0x60]
   140008d0a:	mov    rsi,QWORD PTR [rsp+0x70]
   140008d0f:	mov    rdi,QWORD PTR [rsp+0x68]
   140008d14:	mov    r14,QWORD PTR [rsp+0x78]
   140008d19:	test   rsi,rsi
   140008d1c:	je     0x140008d3d
   140008d1e:	cmp    QWORD PTR [rbx+0x18],0x10
   140008d23:	jb     0x140008d2a
   140008d25:	mov    rdx,QWORD PTR [rbx]
   140008d28:	jmp    0x140008d2d
   140008d2a:	mov    rdx,rbx
   140008d2d:	test   rsi,rsi
   140008d30:	je     0x140008d3d
   140008d32:	mov    r8,rsi
   140008d35:	mov    rcx,r14
   140008d38:	call   0x140018a90
   140008d3d:	cmp    QWORD PTR [rbx+0x18],0x10
   140008d42:	jb     0x140008d4c
   140008d44:	mov    rcx,QWORD PTR [rbx]
   140008d47:	call   0x140018a04
   140008d4c:	mov    BYTE PTR [rbx],0x0
   140008d4f:	mov    QWORD PTR [rbx],r14
   140008d52:	mov    QWORD PTR [rbx+0x18],rdi
   140008d56:	mov    QWORD PTR [rbx+0x10],rsi
   140008d5a:	cmp    rdi,0x10
   140008d5e:	jb     0x140008d63
   140008d60:	mov    rbx,r14
   140008d63:	mov    BYTE PTR [rbx+rsi*1],0x0
   140008d67:	add    rsp,0x38
   140008d6b:	pop    r14
   140008d6d:	pop    rdi
   140008d6e:	pop    rsi
   140008d6f:	pop    rbx
   140008d70:	ret    
   140008d71:	int3   
   140008d72:	int3   
   140008d73:	int3   
   140008d74:	int3   
   140008d75:	int3   
   140008d76:	int3   
   140008d77:	int3   
   140008d78:	int3   
   140008d79:	int3   
   140008d7a:	int3   
   140008d7b:	int3   
   140008d7c:	int3   
   140008d7d:	int3   
   140008d7e:	int3   
   140008d7f:	int3   
   140008d80:	mov    QWORD PTR [rsp+0x20],rbx
   140008d85:	push   rdi
   140008d86:	sub    rsp,0x20
   140008d8a:	mov    rdi,rdx
   140008d8d:	mov    rbx,rcx
   140008d90:	cmp    rdx,0xfffffffffffffffe
   140008d94:	ja     0x140008e3d
   140008d9a:	mov    rax,QWORD PTR [rcx+0x18]
   140008d9e:	mov    QWORD PTR [rsp+0x30],rbp
   140008da3:	xor    ebp,ebp
   140008da5:	cmp    rax,rdx
   140008da8:	jae    0x140008db5
   140008daa:	mov    r8,QWORD PTR [rcx+0x10]
   140008dae:	call   0x140008c70
   140008db3:	jmp    0x140008e27
   140008db5:	test   r8b,r8b
   140008db8:	je     0x140008e12
   140008dba:	cmp    rdx,0x10
   140008dbe:	jae    0x140008e12
   140008dc0:	mov    QWORD PTR [rsp+0x38],rsi
   140008dc5:	mov    rsi,QWORD PTR [rcx+0x10]
   140008dc9:	cmp    rdx,rsi
   140008dcc:	cmovb  rsi,rdx
   140008dd0:	cmp    rax,0x10
   140008dd4:	jb     0x140008dfb
   140008dd6:	mov    QWORD PTR [rsp+0x40],r14
   140008ddb:	mov    r14,QWORD PTR [rcx]
   140008dde:	test   rsi,rsi
   140008de1:	je     0x140008dee
   140008de3:	mov    r8,rsi
   140008de6:	mov    rdx,r14
   140008de9:	call   0x140018a90
   140008dee:	mov    rcx,r14
   140008df1:	call   0x140018a04
   140008df6:	mov    r14,QWORD PTR [rsp+0x40]
   140008dfb:	mov    QWORD PTR [rbx+0x10],rsi
   140008dff:	mov    QWORD PTR [rbx+0x18],0xf
   140008e07:	mov    BYTE PTR [rsi+rbx*1],bpl
   140008e0b:	mov    rsi,QWORD PTR [rsp+0x38]
   140008e10:	jmp    0x140008e27
   140008e12:	test   rdx,rdx
   140008e15:	jne    0x140008e27
   140008e17:	mov    QWORD PTR [rcx+0x10],rbp
   140008e1b:	cmp    rax,0x10
   140008e1f:	jb     0x140008e24
   140008e21:	mov    rbx,QWORD PTR [rcx]
   140008e24:	mov    BYTE PTR [rbx],bpl
   140008e27:	mov    rbp,QWORD PTR [rsp+0x30]
   140008e2c:	mov    rbx,QWORD PTR [rsp+0x48]
   140008e31:	test   rdi,rdi
   140008e34:	setne  al
   140008e37:	add    rsp,0x20
   140008e3b:	pop    rdi
   140008e3c:	ret    
   140008e3d:	lea    rcx,[rip+0x2ee6c]        # 0x140037cb0
   140008e44:	call   0x14001405c
   140008e49:	int3   
   140008e4a:	int3   
   140008e4b:	int3   
   140008e4c:	int3   
   140008e4d:	int3   
   140008e4e:	int3   
   140008e4f:	int3   
   140008e50:	mov    QWORD PTR [rsp+0x8],rbx
   140008e55:	mov    QWORD PTR [rsp+0x10],rsi
   140008e5a:	push   rdi
   140008e5b:	sub    rsp,0x20
   140008e5f:	mov    rdi,r8
   140008e62:	mov    rsi,rdx
   140008e65:	mov    rbx,rcx
   140008e68:	test   rdx,rdx
   140008e6b:	je     0x140008ec7
   140008e6d:	mov    rdx,QWORD PTR [rcx+0x18]
   140008e71:	cmp    rdx,0x10
   140008e75:	jb     0x140008e7c
   140008e77:	mov    rax,QWORD PTR [rcx]
   140008e7a:	jmp    0x140008e7f
   140008e7c:	mov    rax,rcx
   140008e7f:	cmp    rsi,rax
   140008e82:	jb     0x140008ec7
   140008e84:	cmp    rdx,0x10
   140008e88:	jb     0x140008e8d
   140008e8a:	mov    rcx,QWORD PTR [rcx]
   140008e8d:	add    rcx,QWORD PTR [rbx+0x10]
   140008e91:	cmp    rcx,rsi
   140008e94:	jbe    0x140008ec7
   140008e96:	cmp    rdx,0x10
   140008e9a:	jb     0x140008ea1
   140008e9c:	mov    rax,QWORD PTR [rbx]
   140008e9f:	jmp    0x140008ea4
   140008ea1:	mov    rax,rbx
   140008ea4:	sub    rsi,rax
   140008ea7:	mov    r9,r8
   140008eaa:	mov    rdx,rbx
   140008ead:	mov    r8,rsi
   140008eb0:	mov    rcx,rbx
   140008eb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140008eb8:	mov    rsi,QWORD PTR [rsp+0x38]
   140008ebd:	add    rsp,0x20
   140008ec1:	pop    rdi
   140008ec2:	jmp    0x140008b40
   140008ec7:	cmp    r8,0xfffffffffffffffe
   140008ecb:	ja     0x140008f75
   140008ed1:	mov    rax,QWORD PTR [rbx+0x18]
   140008ed5:	cmp    rax,r8
   140008ed8:	jae    0x140008efa
   140008eda:	mov    r8,QWORD PTR [rbx+0x10]
   140008ede:	mov    rdx,rdi
   140008ee1:	mov    rcx,rbx
   140008ee4:	call   0x140008c70
   140008ee9:	test   rdi,rdi
   140008eec:	je     0x140008f62
   140008eee:	cmp    QWORD PTR [rbx+0x18],0x10
   140008ef3:	jb     0x140008f38
   140008ef5:	mov    rcx,QWORD PTR [rbx]
   140008ef8:	jmp    0x140008f3b
   140008efa:	test   r8,r8
   140008efd:	jne    0x140008ee9
   140008eff:	mov    QWORD PTR [rbx+0x10],r8
   140008f03:	cmp    rax,0x10
   140008f07:	jb     0x140008f22
   140008f09:	mov    rax,QWORD PTR [rbx]
   140008f0c:	mov    BYTE PTR [rax],r8b
   140008f0f:	mov    rax,rbx
   140008f12:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f17:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f1c:	add    rsp,0x20
   140008f20:	pop    rdi
   140008f21:	ret    
   140008f22:	mov    rax,rbx
   140008f25:	mov    BYTE PTR [rbx],0x0
   140008f28:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f2d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f32:	add    rsp,0x20
   140008f36:	pop    rdi
   140008f37:	ret    
   140008f38:	mov    rcx,rbx
   140008f3b:	test   rdi,rdi
   140008f3e:	je     0x140008f4b
   140008f40:	mov    r8,rdi
   140008f43:	mov    rdx,rsi
   140008f46:	call   0x140018a90
   140008f4b:	cmp    QWORD PTR [rbx+0x18],0x10
   140008f50:	mov    QWORD PTR [rbx+0x10],rdi
   140008f54:	jb     0x140008f5b
   140008f56:	mov    rax,QWORD PTR [rbx]
   140008f59:	jmp    0x140008f5e
   140008f5b:	mov    rax,rbx
   140008f5e:	mov    BYTE PTR [rax+rdi*1],0x0
   140008f62:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f67:	mov    rax,rbx
   140008f6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f6f:	add    rsp,0x20
   140008f73:	pop    rdi
   140008f74:	ret    
   140008f75:	lea    rcx,[rip+0x2ed34]        # 0x140037cb0
   140008f7c:	call   0x14001405c
   140008f81:	int3   
   140008f82:	int3   
   140008f83:	int3   
   140008f84:	int3   
   140008f85:	int3   
   140008f86:	int3   
   140008f87:	int3   
   140008f88:	int3   
   140008f89:	int3   
   140008f8a:	int3   
   140008f8b:	int3   
   140008f8c:	int3   
   140008f8d:	int3   
   140008f8e:	int3   
   140008f8f:	int3   
   140008f90:	mov    QWORD PTR [rsp+0x8],rbx
   140008f95:	push   rdi
   140008f96:	sub    rsp,0x20
   140008f9a:	mov    ebx,edx
   140008f9c:	mov    rdi,rcx
   140008f9f:	call   0x140008fc0
   140008fa4:	test   bl,0x1
   140008fa7:	je     0x140008fb1
   140008fa9:	mov    rcx,rdi
   140008fac:	call   0x140018a04
   140008fb1:	mov    rax,rdi
   140008fb4:	mov    rbx,QWORD PTR [rsp+0x30]
   140008fb9:	add    rsp,0x20
   140008fbd:	pop    rdi
   140008fbe:	ret    
   140008fbf:	int3   
   140008fc0:	rex push rbx
   140008fc2:	sub    rsp,0x20
   140008fc6:	lea    rax,[rip+0x2fe13]        # 0x140038de0
   140008fcd:	mov    rbx,rcx
   140008fd0:	mov    QWORD PTR [rcx],rax
   140008fd3:	mov    rcx,QWORD PTR [rcx+0x10]
   140008fd7:	test   rcx,rcx
   140008fda:	je     0x140008fe2
   140008fdc:	call   QWORD PTR [rip+0x260e6]        # 0x14002f0c8
   140008fe2:	lock dec DWORD PTR [rip+0x3bb47]        # 0x140044b30
   140008fe9:	jne    0x14000903a
   140008feb:	mov    rbx,QWORD PTR [rbx+0x18]
   140008fef:	test   rbx,rbx
   140008ff2:	je     0x14000902f
   140008ff4:	mov    rcx,QWORD PTR [rbx+0x8]
   140008ff8:	lea    rax,[rcx-0x1]
   140008ffc:	cmp    rax,0xfffffffffffffffd
   140009000:	ja     0x140009010
   140009002:	call   QWORD PTR [rip+0x26178]        # 0x14002f180
   140009008:	mov    QWORD PTR [rbx+0x8],0x0
   140009010:	mov    rcx,QWORD PTR [rbx+0x10]
   140009014:	test   rcx,rcx
   140009017:	je     0x140009027
   140009019:	call   QWORD PTR [rip+0x26161]        # 0x14002f180
   14000901f:	mov    QWORD PTR [rbx+0x10],0x0
   140009027:	mov    rcx,rbx
   14000902a:	call   0x140018a04
   14000902f:	mov    QWORD PTR [rip+0x3baee],0x0        # 0x140044b28
   14000903a:	add    rsp,0x20
   14000903e:	pop    rbx
   14000903f:	ret    
   140009040:	rex push rbx
   140009042:	sub    rsp,0x250
   140009049:	mov    rax,QWORD PTR [rip+0x38600]        # 0x140041650
   140009050:	xor    rax,rsp
   140009053:	mov    QWORD PTR [rsp+0x240],rax
   14000905b:	mov    rbx,rcx
   14000905e:	lea    rcx,[rsp+0x21]
   140009063:	xor    edx,edx
   140009065:	mov    r8d,0x104
   14000906b:	mov    BYTE PTR [rsp+0x20],0x0
   140009070:	call   0x14001b980
   140009075:	lea    rdx,[rsp+0x20]
   14000907a:	mov    r8d,0x104
   140009080:	xor    ecx,ecx
   140009082:	call   QWORD PTR [rip+0x26048]        # 0x14002f0d0
   140009088:	test   eax,eax
   14000908a:	je     0x140009129
   140009090:	lea    rcx,[rsp+0x20]
   140009095:	mov    edx,0x5c
   14000909a:	call   0x140019738
   14000909f:	test   rax,rax
   1400090a2:	je     0x140009102
   1400090a4:	lea    r8,[rsp+0x20]
   1400090a9:	lea    rcx,[rsp+0x130]
   1400090b1:	mov    edx,0x104
   1400090b6:	mov    BYTE PTR [rax],0x0
   1400090b9:	call   0x14001987c
   1400090be:	lea    r8,[rip+0x2fbbb]        # 0x140038c80
   1400090c5:	lea    rcx,[rsp+0x130]
   1400090cd:	mov    edx,0x104
   1400090d2:	call   0x1400198e0
   1400090d7:	lea    r8,[rip+0x2fbaa]        # 0x140038c88
   1400090de:	lea    rcx,[rsp+0x130]
   1400090e6:	mov    edx,0x104
   1400090eb:	call   0x1400198e0
   1400090f0:	lea    rcx,[rsp+0x130]
   1400090f8:	call   QWORD PTR [rip+0x25fda]        # 0x14002f0d8
   1400090fe:	mov    QWORD PTR [rbx+0x10],rax
   140009102:	mov    rcx,QWORD PTR [rbx+0x10]
   140009106:	test   rcx,rcx
   140009109:	jne    0x140009133
   14000910b:	call   QWORD PTR [rip+0x2608f]        # 0x14002f1a0
   140009111:	lea    rcx,[rbx+0x18]
   140009115:	lea    r8,[rip+0x2fb7c]        # 0x140038c98
   14000911c:	mov    r9d,eax
   14000911f:	mov    edx,0xc8
   140009124:	call   0x14000a6d0
   140009129:	mov    eax,0x1
   14000912e:	jmp    0x1400091ce
   140009133:	lea    rdx,[rip+0x2fb7e]        # 0x140038cb8
   14000913a:	call   QWORD PTR [rip+0x25fa0]        # 0x14002f0e0
   140009140:	test   rax,rax
   140009143:	jne    0x14000916a
   140009145:	call   QWORD PTR [rip+0x26055]        # 0x14002f1a0
   14000914b:	lea    rcx,[rbx+0x18]
   14000914f:	lea    r8,[rip+0x2fb7a]        # 0x140038cd0
   140009156:	mov    r9d,eax
   140009159:	mov    edx,0xc8
   14000915e:	call   0x14000a6d0
   140009163:	mov    eax,0x1
   140009168:	jmp    0x1400091ce
   14000916a:	call   rax
   14000916c:	mov    QWORD PTR [rbx+0x8],rax
   140009170:	test   rax,rax
   140009173:	je     0x14000925a
   140009179:	mov    rax,QWORD PTR [rax]
   14000917c:	cmp    DWORD PTR [rax],0x1b5c
   140009182:	jne    0x14000925a
   140009188:	lea    r8,[rip+0x2fb89]        # 0x140038d18
   14000918f:	lea    rcx,[rbx+0x18]
   140009193:	mov    edx,0x64
   140009198:	mov    QWORD PTR [rsp+0x268],rdi
   1400091a0:	call   0x14000a6d0
   1400091a5:	mov    rax,QWORD PTR [rbx+0x8]
   1400091a9:	mov    rcx,QWORD PTR [rax]
   1400091ac:	call   QWORD PTR [rcx+0x8]
   1400091af:	sub    eax,0x5
   1400091b2:	je     0x14000923b
   1400091b8:	dec    eax
   1400091ba:	je     0x14000921f
   1400091bc:	dec    eax
   1400091be:	je     0x140009203
   1400091c0:	dec    eax
   1400091c2:	je     0x1400091e7
   1400091c4:	xor    eax,eax
   1400091c6:	mov    rdi,QWORD PTR [rsp+0x268]
   1400091ce:	mov    rcx,QWORD PTR [rsp+0x240]
   1400091d6:	xor    rcx,rsp
   1400091d9:	call   0x1400187d0
   1400091de:	add    rsp,0x250
   1400091e5:	pop    rbx
   1400091e6:	ret    
   1400091e7:	lea    r8,[rip+0x2fb42]        # 0x140038d30
   1400091ee:	lea    rcx,[rbx+0x18]
   1400091f2:	mov    edx,0xc8
   1400091f7:	call   0x14000a6d0
   1400091fc:	mov    eax,0x8
   140009201:	jmp    0x1400091c6
   140009203:	lea    r8,[rip+0x2fb96]        # 0x140038da0
   14000920a:	lea    rcx,[rbx+0x18]
   14000920e:	mov    edx,0xc8
   140009213:	call   0x14000a6d0
   140009218:	mov    eax,0x7
   14000921d:	jmp    0x1400091c6
   14000921f:	lea    r8,[rip+0x2fb9a]        # 0x140038dc0
   140009226:	lea    rcx,[rbx+0x18]
   14000922a:	mov    edx,0xc8
   14000922f:	call   0x14000a6d0
   140009234:	mov    eax,0x6
   140009239:	jmp    0x1400091c6
   14000923b:	lea    r8,[rip+0x2fb46]        # 0x140038d88
   140009242:	lea    rcx,[rbx+0x18]
   140009246:	mov    edx,0xc8
   14000924b:	call   0x14000a6d0
   140009250:	mov    eax,0x5
   140009255:	jmp    0x1400091c6
   14000925a:	lea    rcx,[rbx+0x18]
   14000925e:	lea    r8,[rip+0x2fa93]        # 0x140038cf8
   140009265:	mov    edx,0xc8
   14000926a:	call   0x14000a6d0
   14000926f:	mov    eax,0x1
   140009274:	jmp    0x1400091ce
   140009279:	int3   
   14000927a:	int3   
   14000927b:	int3   
   14000927c:	int3   
   14000927d:	int3   
   14000927e:	int3   
   14000927f:	int3   
   140009280:	mov    rax,rsp
   140009283:	mov    QWORD PTR [rax+0x8],rcx
   140009287:	push   rbp
   140009288:	push   r12
   14000928a:	push   r13
   14000928c:	push   r14
   14000928e:	push   r15
   140009290:	mov    rbp,rsp
   140009293:	sub    rsp,0x50
   140009297:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   14000929f:	mov    QWORD PTR [rax+0x10],rbx
   1400092a3:	mov    QWORD PTR [rax+0x18],rsi
   1400092a7:	mov    QWORD PTR [rax+0x20],rdi
   1400092ab:	mov    rdi,rcx
   1400092ae:	lea    rdx,[rip+0x2fb33]        # 0x140038de8
   1400092b5:	add    rcx,0x90
   1400092bc:	call   0x140009a50
   1400092c1:	nop
   1400092c2:	lea    rsi,[rdi+0x98]
   1400092c9:	lea    rdx,[rip+0x2fb38]        # 0x140038e08
   1400092d0:	mov    rcx,rsi
   1400092d3:	call   0x140009a50
   1400092d8:	nop
   1400092d9:	lea    rdx,[rip+0x2fb48]        # 0x140038e28
   1400092e0:	lea    rcx,[rdi+0xa0]
   1400092e7:	call   0x140009a50
   1400092ec:	nop
   1400092ed:	lea    rdx,[rip+0x2fb4c]        # 0x140038e40
   1400092f4:	lea    rcx,[rdi+0xa8]
   1400092fb:	call   0x140009a50
   140009300:	nop
   140009301:	lea    rdx,[rip+0x2fb58]        # 0x140038e60
   140009308:	lea    rcx,[rdi+0xb0]
   14000930f:	call   0x140009a50
   140009314:	nop
   140009315:	mov    QWORD PTR [rbp-0x10],0xf
   14000931d:	xor    ebx,ebx
   14000931f:	mov    QWORD PTR [rbp-0x18],rbx
   140009323:	mov    BYTE PTR [rbp-0x28],bl
   140009326:	lea    r8d,[rbx+0x10]
   14000932a:	lea    rdx,[rip+0x2fb47]        # 0x140038e78
   140009331:	lea    rcx,[rbp-0x28]
   140009335:	call   0x140008e50
   14000933a:	mov    rcx,QWORD PTR [rdi+0x90]
   140009341:	test   rcx,rcx
   140009344:	je     0x14000935c
   140009346:	lea    rdx,[rbp-0x28]
   14000934a:	cmp    QWORD PTR [rbp-0x10],0x10
   14000934f:	cmovae rdx,QWORD PTR [rbp-0x28]
   140009354:	call   QWORD PTR [rip+0x25d86]        # 0x14002f0e0
   14000935a:	jmp    0x14000935f
   14000935c:	mov    rax,rbx
   14000935f:	mov    QWORD PTR [rdi+0x8],rax
   140009363:	cmp    QWORD PTR [rbp-0x10],0x10
   140009368:	jb     0x140009373
   14000936a:	mov    rcx,QWORD PTR [rbp-0x28]
   14000936e:	call   0x140018a04
   140009373:	mov    QWORD PTR [rbp-0x10],0xf
   14000937b:	mov    QWORD PTR [rbp-0x18],rbx
   14000937f:	mov    BYTE PTR [rbp-0x28],bl
   140009382:	mov    r8d,0x13
   140009388:	lea    rdx,[rip+0x2fb01]        # 0x140038e90
   14000938f:	lea    rcx,[rbp-0x28]
   140009393:	call   0x140008e50
   140009398:	mov    rcx,QWORD PTR [rdi+0x90]
   14000939f:	test   rcx,rcx
   1400093a2:	je     0x1400093ba
   1400093a4:	lea    rdx,[rbp-0x28]
   1400093a8:	cmp    QWORD PTR [rbp-0x10],0x10
   1400093ad:	cmovae rdx,QWORD PTR [rbp-0x28]
   1400093b2:	call   QWORD PTR [rip+0x25d28]        # 0x14002f0e0
   1400093b8:	jmp    0x1400093bd
   1400093ba:	mov    rax,rbx
   1400093bd:	mov    QWORD PTR [rdi],rax
   1400093c0:	cmp    QWORD PTR [rbp-0x10],0x10
   1400093c5:	jb     0x1400093d0
   1400093c7:	mov    rcx,QWORD PTR [rbp-0x28]
   1400093cb:	call   0x140018a04
   1400093d0:	mov    QWORD PTR [rbp-0x10],0xf
   1400093d8:	mov    QWORD PTR [rbp-0x18],rbx
   1400093dc:	mov    BYTE PTR [rbp-0x28],bl
   1400093df:	mov    r8d,0x34
   1400093e5:	lea    rdx,[rip+0x2fabc]        # 0x140038ea8
   1400093ec:	lea    rcx,[rbp-0x28]
   1400093f0:	call   0x140008e50
   1400093f5:	mov    rcx,QWORD PTR [rdi+0x90]
   1400093fc:	test   rcx,rcx
   1400093ff:	je     0x140009417
   140009401:	lea    rdx,[rbp-0x28]
   140009405:	cmp    QWORD PTR [rbp-0x10],0x10
   14000940a:	cmovae rdx,QWORD PTR [rbp-0x28]
   14000940f:	call   QWORD PTR [rip+0x25ccb]        # 0x14002f0e0
   140009415:	jmp    0x14000941a
   140009417:	mov    rax,rbx
   14000941a:	mov    QWORD PTR [rdi+0x10],rax
   14000941e:	cmp    QWORD PTR [rbp-0x10],0x10
   140009423:	jb     0x14000942e
   140009425:	mov    rcx,QWORD PTR [rbp-0x28]
   140009429:	call   0x140018a04
   14000942e:	mov    QWORD PTR [rbp-0x10],0xf
   140009436:	mov    QWORD PTR [rbp-0x18],rbx
   14000943a:	mov    BYTE PTR [rbp-0x28],bl
   14000943d:	mov    r8d,0x13
   140009443:	lea    rdx,[rip+0x2fa96]        # 0x140038ee0
   14000944a:	lea    rcx,[rbp-0x28]
   14000944e:	call   0x140008e50
   140009453:	mov    rcx,QWORD PTR [rsi]
   140009456:	test   rcx,rcx
   140009459:	je     0x140009471
   14000945b:	lea    rdx,[rbp-0x28]
   14000945f:	cmp    QWORD PTR [rbp-0x10],0x10
   140009464:	cmovae rdx,QWORD PTR [rbp-0x28]
   140009469:	call   QWORD PTR [rip+0x25c71]        # 0x14002f0e0
   14000946f:	jmp    0x140009474
   140009471:	mov    rax,rbx
   140009474:	mov    QWORD PTR [rdi+0x18],rax
   140009478:	cmp    QWORD PTR [rbp-0x10],0x10
   14000947d:	jb     0x140009488
   14000947f:	mov    rcx,QWORD PTR [rbp-0x28]
   140009483:	call   0x140018a04
   140009488:	mov    QWORD PTR [rbp-0x10],0xf
   140009490:	mov    QWORD PTR [rbp-0x18],rbx
   140009494:	mov    BYTE PTR [rbp-0x28],bl
   140009497:	mov    r8d,0x1b
   14000949d:	lea    rdx,[rip+0x2fa54]        # 0x140038ef8
   1400094a4:	lea    rcx,[rbp-0x28]
   1400094a8:	call   0x140008e50
   1400094ad:	mov    rcx,QWORD PTR [rsi]
   1400094b0:	test   rcx,rcx
   1400094b3:	je     0x1400094cb
   1400094b5:	lea    rdx,[rbp-0x28]
   1400094b9:	cmp    QWORD PTR [rbp-0x10],0x10
   1400094be:	cmovae rdx,QWORD PTR [rbp-0x28]
   1400094c3:	call   QWORD PTR [rip+0x25c17]        # 0x14002f0e0
   1400094c9:	jmp    0x1400094ce
   1400094cb:	mov    rax,rbx
   1400094ce:	mov    QWORD PTR [rdi+0x20],rax
   1400094d2:	cmp    QWORD PTR [rbp-0x10],0x10
   1400094d7:	jb     0x1400094e2
   1400094d9:	mov    rcx,QWORD PTR [rbp-0x28]
   1400094dd:	call   0x140018a04
   1400094e2:	mov    QWORD PTR [rbp-0x10],0xf
   1400094ea:	mov    QWORD PTR [rbp-0x18],rbx
   1400094ee:	mov    BYTE PTR [rbp-0x28],bl
   1400094f1:	mov    r8d,0x18
   1400094f7:	lea    rdx,[rip+0x2fa1a]        # 0x140038f18
   1400094fe:	lea    rcx,[rbp-0x28]
   140009502:	call   0x140008e50
   140009507:	mov    rcx,QWORD PTR [rsi]
   14000950a:	test   rcx,rcx
   14000950d:	je     0x140009525
   14000950f:	lea    rdx,[rbp-0x28]
   140009513:	cmp    QWORD PTR [rbp-0x10],0x10
   140009518:	cmovae rdx,QWORD PTR [rbp-0x28]
   14000951d:	call   QWORD PTR [rip+0x25bbd]        # 0x14002f0e0
   140009523:	jmp    0x140009528
   140009525:	mov    rax,rbx
   140009528:	mov    QWORD PTR [rdi+0x28],rax
   14000952c:	cmp    QWORD PTR [rbp-0x10],0x10
   140009531:	jb     0x14000953c
   140009533:	mov    rcx,QWORD PTR [rbp-0x28]
   140009537:	call   0x140018a04
   14000953c:	mov    QWORD PTR [rbp-0x10],0xf
   140009544:	mov    QWORD PTR [rbp-0x18],rbx
   140009548:	mov    BYTE PTR [rbp-0x28],bl
   14000954b:	mov    r8d,0x21
   140009551:	lea    rdx,[rip+0x2f9e0]        # 0x140038f38
   140009558:	lea    rcx,[rbp-0x28]
   14000955c:	call   0x140008e50
   140009561:	mov    rcx,QWORD PTR [rsi]
   140009564:	test   rcx,rcx
   140009567:	je     0x14000957f
   140009569:	lea    rdx,[rbp-0x28]
   14000956d:	cmp    QWORD PTR [rbp-0x10],0x10
   140009572:	cmovae rdx,QWORD PTR [rbp-0x28]
   140009577:	call   QWORD PTR [rip+0x25b63]        # 0x14002f0e0
   14000957d:	jmp    0x140009582
   14000957f:	mov    rax,rbx
   140009582:	mov    QWORD PTR [rdi+0x30],rax
   140009586:	cmp    QWORD PTR [rbp-0x10],0x10
   14000958b:	jb     0x140009596
   14000958d:	mov    rcx,QWORD PTR [rbp-0x28]
   140009591:	call   0x140018a04
   140009596:	mov    QWORD PTR [rbp-0x10],0xf
   14000959e:	mov    QWORD PTR [rbp-0x18],rbx
   1400095a2:	mov    BYTE PTR [rbp-0x28],bl
   1400095a5:	mov    r8d,0x19
   1400095ab:	lea    rdx,[rip+0x2f9ae]        # 0x140038f60
   1400095b2:	lea    rcx,[rbp-0x28]
   1400095b6:	call   0x140008e50
   1400095bb:	mov    rcx,QWORD PTR [rsi]
   1400095be:	test   rcx,rcx
   1400095c1:	je     0x1400095d9
   1400095c3:	lea    rdx,[rbp-0x28]
   1400095c7:	cmp    QWORD PTR [rbp-0x10],0x10
   1400095cc:	cmovae rdx,QWORD PTR [rbp-0x28]
   1400095d1:	call   QWORD PTR [rip+0x25b09]        # 0x14002f0e0
   1400095d7:	jmp    0x1400095dc
   1400095d9:	mov    rax,rbx
   1400095dc:	mov    QWORD PTR [rdi+0x38],rax
   1400095e0:	cmp    QWORD PTR [rbp-0x10],0x10
   1400095e5:	jb     0x1400095f0
   1400095e7:	mov    rcx,QWORD PTR [rbp-0x28]
   1400095eb:	call   0x140018a04
   1400095f0:	mov    QWORD PTR [rbp-0x10],0xf
   1400095f8:	mov    QWORD PTR [rbp-0x18],rbx
   1400095fc:	mov    BYTE PTR [rbp-0x28],bl
   1400095ff:	mov    r8d,0x16
   140009605:	lea    rdx,[rip+0x2f974]        # 0x140038f80
   14000960c:	lea    rcx,[rbp-0x28]
   140009610:	call   0x140008e50
   140009615:	mov    rcx,QWORD PTR [rsi]
   140009618:	test   rcx,rcx
   14000961b:	je     0x140009633
   14000961d:	lea    rdx,[rbp-0x28]
   140009621:	cmp    QWORD PTR [rbp-0x10],0x10
   140009626:	cmovae rdx,QWORD PTR [rbp-0x28]
   14000962b:	call   QWORD PTR [rip+0x25aaf]        # 0x14002f0e0
   140009631:	jmp    0x140009636
   140009633:	mov    rax,rbx
   140009636:	mov    QWORD PTR [rdi+0x40],rax
   14000963a:	cmp    QWORD PTR [rbp-0x10],0x10
   14000963f:	jb     0x14000964a
   140009641:	mov    rcx,QWORD PTR [rbp-0x28]
   140009645:	call   0x140018a04
   14000964a:	mov    QWORD PTR [rbp-0x10],0xf
   140009652:	mov    QWORD PTR [rbp-0x18],rbx
   140009656:	mov    BYTE PTR [rbp-0x28],bl
   140009659:	mov    r8d,0x15
   14000965f:	lea    rdx,[rip+0x2f932]        # 0x140038f98
   140009666:	lea    rcx,[rbp-0x28]
   14000966a:	call   0x140008e50
   14000966f:	mov    rcx,QWORD PTR [rsi]
   140009672:	test   rcx,rcx
   140009675:	je     0x14000968d
   140009677:	lea    rdx,[rbp-0x28]
   14000967b:	cmp    QWORD PTR [rbp-0x10],0x10
   140009680:	cmovae rdx,QWORD PTR [rbp-0x28]
   140009685:	call   QWORD PTR [rip+0x25a55]        # 0x14002f0e0
   14000968b:	jmp    0x140009690
   14000968d:	mov    rax,rbx
   140009690:	mov    QWORD PTR [rdi+0x48],rax
   140009694:	cmp    QWORD PTR [rbp-0x10],0x10
   140009699:	jb     0x1400096a4
   14000969b:	mov    rcx,QWORD PTR [rbp-0x28]
   14000969f:	call   0x140018a04
   1400096a4:	mov    QWORD PTR [rbp-0x10],0xf
   1400096ac:	mov    QWORD PTR [rbp-0x18],rbx
   1400096b0:	mov    BYTE PTR [rbp-0x28],bl
   1400096b3:	mov    r8d,0x1f
   1400096b9:	lea    rdx,[rip+0x2f8f0]        # 0x140038fb0
   1400096c0:	lea    rcx,[rbp-0x28]
   1400096c4:	call   0x140008e50
   1400096c9:	mov    rcx,QWORD PTR [rsi]
   1400096cc:	test   rcx,rcx
   1400096cf:	je     0x1400096e7
   1400096d1:	lea    rdx,[rbp-0x28]
   1400096d5:	cmp    QWORD PTR [rbp-0x10],0x10
   1400096da:	cmovae rdx,QWORD PTR [rbp-0x28]
   1400096df:	call   QWORD PTR [rip+0x259fb]        # 0x14002f0e0
   1400096e5:	jmp    0x1400096ea
   1400096e7:	mov    rax,rbx
   1400096ea:	mov    QWORD PTR [rdi+0x50],rax
   1400096ee:	cmp    QWORD PTR [rbp-0x10],0x10
   1400096f3:	jb     0x1400096fe
   1400096f5:	mov    rcx,QWORD PTR [rbp-0x28]
   1400096f9:	call   0x140018a04
   1400096fe:	mov    QWORD PTR [rbp-0x10],0xf
   140009706:	mov    QWORD PTR [rbp-0x18],rbx
   14000970a:	mov    BYTE PTR [rbp-0x28],bl
   14000970d:	mov    r8d,0x21
   140009713:	lea    rdx,[rip+0x2f8b6]        # 0x140038fd0
   14000971a:	lea    rcx,[rbp-0x28]
   14000971e:	call   0x140008e50
   140009723:	mov    rcx,QWORD PTR [rsi]
   140009726:	test   rcx,rcx
   140009729:	je     0x140009741
   14000972b:	lea    rdx,[rbp-0x28]
   14000972f:	cmp    QWORD PTR [rbp-0x10],0x10
   140009734:	cmovae rdx,QWORD PTR [rbp-0x28]
   140009739:	call   QWORD PTR [rip+0x259a1]        # 0x14002f0e0
   14000973f:	jmp    0x140009744
   140009741:	mov    rax,rbx
   140009744:	mov    QWORD PTR [rdi+0x58],rax
   140009748:	cmp    QWORD PTR [rbp-0x10],0x10
   14000974d:	jb     0x140009758
   14000974f:	mov    rcx,QWORD PTR [rbp-0x28]
   140009753:	call   0x140018a04
   140009758:	mov    QWORD PTR [rbp-0x10],0xf
   140009760:	mov    QWORD PTR [rbp-0x18],rbx
   140009764:	mov    BYTE PTR [rbp-0x28],bl
   140009767:	mov    r8d,0x1d
   14000976d:	lea    rdx,[rip+0x2f884]        # 0x140038ff8
   140009774:	lea    rcx,[rbp-0x28]
   140009778:	call   0x140008e50
   14000977d:	mov    rcx,QWORD PTR [rsi]
   140009780:	test   rcx,rcx
   140009783:	je     0x14000979b
   140009785:	lea    rdx,[rbp-0x28]
   140009789:	cmp    QWORD PTR [rbp-0x10],0x10
   14000978e:	cmovae rdx,QWORD PTR [rbp-0x28]
   140009793:	call   QWORD PTR [rip+0x25947]        # 0x14002f0e0
   140009799:	jmp    0x14000979e
   14000979b:	mov    rax,rbx
   14000979e:	mov    QWORD PTR [rdi+0x60],rax
   1400097a2:	cmp    QWORD PTR [rbp-0x10],0x10
   1400097a7:	jb     0x1400097b2
   1400097a9:	mov    rcx,QWORD PTR [rbp-0x28]
   1400097ad:	call   0x140018a04
   1400097b2:	mov    QWORD PTR [rbp-0x10],0xf
   1400097ba:	mov    QWORD PTR [rbp-0x18],rbx
   1400097be:	mov    BYTE PTR [rbp-0x28],bl
   1400097c1:	mov    r8d,0x22
   1400097c7:	lea    rdx,[rip+0x2f84a]        # 0x140039018
   1400097ce:	lea    rcx,[rbp-0x28]
   1400097d2:	call   0x140008e50
   1400097d7:	mov    rcx,QWORD PTR [rdi+0xa0]
   1400097de:	test   rcx,rcx
   1400097e1:	je     0x1400097f9
   1400097e3:	lea    rdx,[rbp-0x28]
   1400097e7:	cmp    QWORD PTR [rbp-0x10],0x10
   1400097ec:	cmovae rdx,QWORD PTR [rbp-0x28]
   1400097f1:	call   QWORD PTR [rip+0x258e9]        # 0x14002f0e0
   1400097f7:	jmp    0x1400097fc
   1400097f9:	mov    rax,rbx
   1400097fc:	mov    QWORD PTR [rdi+0x68],rax
   140009800:	cmp    QWORD PTR [rbp-0x10],0x10
   140009805:	jb     0x140009810
   140009807:	mov    rcx,QWORD PTR [rbp-0x28]
   14000980b:	call   0x140018a04
   140009810:	mov    QWORD PTR [rbp-0x10],0xf
   140009818:	mov    QWORD PTR [rbp-0x18],rbx
   14000981c:	mov    BYTE PTR [rbp-0x28],bl
   14000981f:	mov    r8d,0x14
   140009825:	lea    rdx,[rip+0x2f814]        # 0x140039040
   14000982c:	lea    rcx,[rbp-0x28]
   140009830:	call   0x140008e50
   140009835:	mov    rcx,QWORD PTR [rdi+0xa8]
   14000983c:	test   rcx,rcx
   14000983f:	je     0x140009857
   140009841:	lea    rdx,[rbp-0x28]
   140009845:	cmp    QWORD PTR [rbp-0x10],0x10
   14000984a:	cmovae rdx,QWORD PTR [rbp-0x28]
   14000984f:	call   QWORD PTR [rip+0x2588b]        # 0x14002f0e0
   140009855:	jmp    0x14000985a
   140009857:	mov    rax,rbx
   14000985a:	mov    QWORD PTR [rdi+0x70],rax
   14000985e:	cmp    QWORD PTR [rbp-0x10],0x10
   140009863:	jb     0x14000986e
   140009865:	mov    rcx,QWORD PTR [rbp-0x28]
   140009869:	call   0x140018a04
   14000986e:	mov    QWORD PTR [rbp-0x10],0xf
   140009876:	mov    QWORD PTR [rbp-0x18],rbx
   14000987a:	mov    BYTE PTR [rbp-0x28],bl
   14000987d:	mov    r8d,0x15
   140009883:	lea    rdx,[rip+0x2f7ce]        # 0x140039058
   14000988a:	lea    rcx,[rbp-0x28]
   14000988e:	call   0x140008e50
   140009893:	mov    rcx,QWORD PTR [rdi+0xa8]
   14000989a:	test   rcx,rcx
   14000989d:	je     0x1400098b5
   14000989f:	lea    rdx,[rbp-0x28]
   1400098a3:	cmp    QWORD PTR [rbp-0x10],0x10
   1400098a8:	cmovae rdx,QWORD PTR [rbp-0x28]
   1400098ad:	call   QWORD PTR [rip+0x2582d]        # 0x14002f0e0
   1400098b3:	jmp    0x1400098b8
   1400098b5:	mov    rax,rbx
   1400098b8:	mov    QWORD PTR [rdi+0x78],rax
   1400098bc:	cmp    QWORD PTR [rbp-0x10],0x10
   1400098c1:	jb     0x1400098cc
   1400098c3:	mov    rcx,QWORD PTR [rbp-0x28]
   1400098c7:	call   0x140018a04
   1400098cc:	mov    QWORD PTR [rbp-0x10],0xf
   1400098d4:	mov    QWORD PTR [rbp-0x18],rbx
   1400098d8:	mov    BYTE PTR [rbp-0x28],bl
   1400098db:	mov    r8d,0x19
   1400098e1:	lea    rdx,[rip+0x2f788]        # 0x140039070
   1400098e8:	lea    rcx,[rbp-0x28]
   1400098ec:	call   0x140008e50
   1400098f1:	mov    rcx,QWORD PTR [rdi+0xa8]
   1400098f8:	test   rcx,rcx
   1400098fb:	je     0x140009913
   1400098fd:	lea    rdx,[rbp-0x28]
   140009901:	cmp    QWORD PTR [rbp-0x10],0x10
   140009906:	cmovae rdx,QWORD PTR [rbp-0x28]
   14000990b:	call   QWORD PTR [rip+0x257cf]        # 0x14002f0e0
   140009911:	jmp    0x140009916
   140009913:	mov    rax,rbx
   140009916:	mov    QWORD PTR [rdi+0x80],rax
   14000991d:	cmp    QWORD PTR [rbp-0x10],0x10
   140009922:	jb     0x14000992d
   140009924:	mov    rcx,QWORD PTR [rbp-0x28]
   140009928:	call   0x140018a04
   14000992d:	mov    QWORD PTR [rbp-0x10],0xf
   140009935:	mov    QWORD PTR [rbp-0x18],rbx
   140009939:	mov    BYTE PTR [rbp-0x28],bl
   14000993c:	mov    r8d,0xd
   140009942:	lea    rdx,[rip+0x2f747]        # 0x140039090
   140009949:	lea    rcx,[rbp-0x28]
   14000994d:	call   0x140008e50
   140009952:	mov    rcx,QWORD PTR [rdi+0xb0]
   140009959:	test   rcx,rcx
   14000995c:	je     0x140009975
   14000995e:	lea    rdx,[rbp-0x28]
   140009962:	cmp    QWORD PTR [rbp-0x10],0x10
   140009967:	cmovae rdx,QWORD PTR [rbp-0x28]
   14000996c:	call   QWORD PTR [rip+0x2576e]        # 0x14002f0e0
   140009972:	mov    rbx,rax
   140009975:	mov    QWORD PTR [rdi+0x88],rbx
   14000997c:	cmp    QWORD PTR [rbp-0x10],0x10
   140009981:	jb     0x14000998d
   140009983:	mov    rcx,QWORD PTR [rbp-0x28]
   140009987:	call   0x140018a04
   14000998c:	nop
   14000998d:	mov    rax,rdi
   140009990:	lea    r11,[rsp+0x50]
   140009995:	mov    rbx,QWORD PTR [r11+0x38]
   140009999:	mov    rsi,QWORD PTR [r11+0x40]
   14000999d:	mov    rdi,QWORD PTR [r11+0x48]
   1400099a1:	mov    rsp,r11
   1400099a4:	pop    r15
   1400099a6:	pop    r14
   1400099a8:	pop    r13
   1400099aa:	pop    r12
   1400099ac:	pop    rbp
   1400099ad:	ret    
   1400099ae:	int3   
   1400099af:	int3   
   1400099b0:	rex push rbx
   1400099b2:	sub    rsp,0x20
   1400099b6:	mov    rbx,rcx
   1400099b9:	mov    rcx,QWORD PTR [rcx+0xb0]
   1400099c0:	test   rcx,rcx
   1400099c3:	je     0x1400099cb
   1400099c5:	call   QWORD PTR [rip+0x256fd]        # 0x14002f0c8
   1400099cb:	mov    rcx,QWORD PTR [rbx+0xa8]
   1400099d2:	test   rcx,rcx
   1400099d5:	je     0x1400099dd
   1400099d7:	call   QWORD PTR [rip+0x256eb]        # 0x14002f0c8
   1400099dd:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400099e4:	test   rcx,rcx
   1400099e7:	je     0x1400099ef
   1400099e9:	call   QWORD PTR [rip+0x256d9]        # 0x14002f0c8
   1400099ef:	mov    rcx,QWORD PTR [rbx+0x98]
   1400099f6:	test   rcx,rcx
   1400099f9:	je     0x140009a01
   1400099fb:	call   QWORD PTR [rip+0x256c7]        # 0x14002f0c8
   140009a01:	mov    rcx,QWORD PTR [rbx+0x90]
   140009a08:	test   rcx,rcx
   140009a0b:	je     0x140009a19
   140009a0d:	add    rsp,0x20
   140009a11:	pop    rbx
   140009a12:	rex.W jmp QWORD PTR [rip+0x256af]        # 0x14002f0c8
   140009a19:	add    rsp,0x20
   140009a1d:	pop    rbx
   140009a1e:	ret    
   140009a1f:	int3   
   140009a20:	sub    rsp,0x38
   140009a24:	mov    rax,QWORD PTR [rsp+0x60]
   140009a29:	mov    r10,rdx
   140009a2c:	mov    r11,rcx
   140009a2f:	mov    edx,0x14
   140009a34:	mov    rcx,r10
   140009a37:	mov    QWORD PTR [rsp+0x20],rax
   140009a3c:	call   QWORD PTR [r11]
   140009a3f:	mov    rcx,QWORD PTR [rsp+0x68]
   140009a44:	mov    DWORD PTR [rcx],eax
   140009a46:	mov    al,0x1
   140009a48:	add    rsp,0x38
   140009a4c:	ret    
   140009a4d:	int3   
   140009a4e:	int3   
   140009a4f:	int3   
   140009a50:	mov    rax,rsp
   140009a53:	push   rdi
   140009a54:	sub    rsp,0x70
   140009a58:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140009a60:	mov    QWORD PTR [rax+0x8],rbx
   140009a64:	mov    rbx,rcx
   140009a67:	mov    QWORD PTR [rax-0x38],0x7
   140009a6f:	xor    edi,edi
   140009a71:	mov    QWORD PTR [rax-0x40],rdi
   140009a75:	mov    WORD PTR [rax-0x50],di
   140009a79:	cmp    WORD PTR [rdx],di
   140009a7c:	jne    0x140009a83
   140009a7e:	mov    r8d,edi
   140009a81:	jmp    0x140009a9a
   140009a83:	or     r8,0xffffffffffffffff
   140009a87:	nop    WORD PTR [rax+rax*1+0x0]
   140009a90:	inc    r8
   140009a93:	cmp    WORD PTR [rdx+r8*2],di
   140009a98:	jne    0x140009a90
   140009a9a:	lea    rcx,[rsp+0x28]
   140009a9f:	call   0x140003d90
   140009aa4:	nop
   140009aa5:	lea    r8,[rsp+0x28]
   140009aaa:	lea    rdx,[rsp+0x48]
   140009aaf:	call   0x140009b30
   140009ab4:	cmp    QWORD PTR [rax+0x18],0x8
   140009ab9:	jb     0x140009abe
   140009abb:	mov    rax,QWORD PTR [rax]
   140009abe:	mov    rcx,rax
   140009ac1:	call   QWORD PTR [rip+0x25621]        # 0x14002f0e8
   140009ac7:	mov    QWORD PTR [rbx],rax
   140009aca:	cmp    QWORD PTR [rsp+0x60],0x8
   140009ad0:	jb     0x140009adc
   140009ad2:	mov    rcx,QWORD PTR [rsp+0x48]
   140009ad7:	call   0x140018a04
   140009adc:	mov    QWORD PTR [rsp+0x60],0x7
   140009ae5:	mov    QWORD PTR [rsp+0x58],rdi
   140009aea:	mov    WORD PTR [rsp+0x48],di
   140009aef:	cmp    QWORD PTR [rsp+0x40],0x8
   140009af5:	jb     0x140009b01
   140009af7:	mov    rcx,QWORD PTR [rsp+0x28]
   140009afc:	call   0x140018a04
   140009b01:	mov    rax,rbx
   140009b04:	mov    rbx,QWORD PTR [rsp+0x80]
   140009b0c:	add    rsp,0x70
   140009b10:	pop    rdi
   140009b11:	ret    
   140009b12:	int3   
   140009b13:	int3   
   140009b14:	int3   
   140009b15:	int3   
   140009b16:	int3   
   140009b17:	int3   
   140009b18:	int3   
   140009b19:	int3   
   140009b1a:	int3   
   140009b1b:	int3   
   140009b1c:	int3   
   140009b1d:	int3   
   140009b1e:	int3   
   140009b1f:	int3   
   140009b20:	mov    rcx,QWORD PTR [rcx]
   140009b23:	test   rcx,rcx
   140009b26:	je     0x140009b2f
   140009b28:	rex.W jmp QWORD PTR [rip+0x25599]        # 0x14002f0c8
   140009b2f:	ret    
   140009b30:	mov    rax,rsp
   140009b33:	push   rdi
   140009b34:	sub    rsp,0x290
   140009b3b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140009b44:	mov    QWORD PTR [rax+0x8],rbx
   140009b48:	mov    QWORD PTR [rax+0x20],rsi
   140009b4c:	mov    rax,QWORD PTR [rip+0x37afd]        # 0x140041650
   140009b53:	xor    rax,rsp
   140009b56:	mov    QWORD PTR [rsp+0x280],rax
   140009b5e:	mov    rdi,r8
   140009b61:	mov    rbx,rdx
   140009b64:	xor    esi,esi
   140009b66:	mov    DWORD PTR [rsp+0x20],esi
   140009b6a:	mov    edx,0x104
   140009b6f:	lea    rcx,[rsp+0x70]
   140009b74:	call   QWORD PTR [rip+0x25576]        # 0x14002f0f0
   140009b7a:	mov    QWORD PTR [rsp+0x68],0x7
   140009b83:	mov    QWORD PTR [rsp+0x60],rsi
   140009b88:	mov    WORD PTR [rsp+0x50],si
   140009b8d:	cmp    WORD PTR [rsp+0x70],si
   140009b92:	jne    0x140009b99
   140009b94:	mov    r8d,esi
   140009b97:	jmp    0x140009bac
   140009b99:	lea    rax,[rsp+0x70]
   140009b9e:	or     r8,0xffffffffffffffff
   140009ba2:	inc    r8
   140009ba5:	cmp    WORD PTR [rax+r8*2],si
   140009baa:	jne    0x140009ba2
   140009bac:	lea    rdx,[rsp+0x70]
   140009bb1:	lea    rcx,[rsp+0x50]
   140009bb6:	call   0x140003d90
   140009bbb:	nop
   140009bbc:	lea    r8,[rip+0x2eb91]        # 0x140038754
   140009bc3:	lea    rdx,[rsp+0x50]
   140009bc8:	lea    rcx,[rsp+0x28]
   140009bcd:	call   0x140007ce0
   140009bd2:	nop
   140009bd3:	mov    r8,rdi
   140009bd6:	mov    rdx,rax
   140009bd9:	mov    rcx,rbx
   140009bdc:	call   0x140007ef0
   140009be1:	nop
   140009be2:	cmp    QWORD PTR [rsp+0x40],0x8
   140009be8:	jb     0x140009bf4
   140009bea:	mov    rcx,QWORD PTR [rsp+0x28]
   140009bef:	call   0x140018a04
   140009bf4:	mov    QWORD PTR [rsp+0x40],0x7
   140009bfd:	mov    QWORD PTR [rsp+0x38],rsi
   140009c02:	mov    WORD PTR [rsp+0x28],si
   140009c07:	cmp    QWORD PTR [rsp+0x68],0x8
   140009c0d:	jb     0x140009c19
   140009c0f:	mov    rcx,QWORD PTR [rsp+0x50]
   140009c14:	call   0x140018a04
   140009c19:	mov    rax,rbx
   140009c1c:	mov    rcx,QWORD PTR [rsp+0x280]
   140009c24:	xor    rcx,rsp
   140009c27:	call   0x1400187d0
   140009c2c:	lea    r11,[rsp+0x290]
   140009c34:	mov    rbx,QWORD PTR [r11+0x10]
   140009c38:	mov    rsi,QWORD PTR [r11+0x28]
   140009c3c:	mov    rsp,r11
   140009c3f:	pop    rdi
   140009c40:	ret    
   140009c41:	int3   
   140009c42:	int3   
   140009c43:	int3   
   140009c44:	int3   
   140009c45:	int3   
   140009c46:	int3   
   140009c47:	int3   
   140009c48:	int3   
   140009c49:	int3   
   140009c4a:	int3   
   140009c4b:	int3   
   140009c4c:	int3   
   140009c4d:	int3   
   140009c4e:	int3   
   140009c4f:	int3   
   140009c50:	sub    rsp,0x28
   140009c54:	lea    rcx,[rip+0x2f445]        # 0x1400390a0
   140009c5b:	call   QWORD PTR [rip+0x3974f]        # 0x1400433b0
   140009c61:	xor    r9d,r9d
   140009c64:	xor    r8d,r8d
   140009c67:	mov    edx,eax
   140009c69:	mov    ecx,0xffff
   140009c6e:	add    rsp,0x28
   140009c72:	rex.W jmp QWORD PTR [rip+0x3972f]        # 0x1400433a8
   140009c79:	int3   
   140009c7a:	int3   
   140009c7b:	int3   
   140009c7c:	int3   
   140009c7d:	int3   
   140009c7e:	int3   
   140009c7f:	int3   
   140009c80:	mov    QWORD PTR [rsp+0x8],rbx
   140009c85:	mov    QWORD PTR [rsp+0x10],rbp
   140009c8a:	mov    QWORD PTR [rsp+0x18],rsi
   140009c8f:	push   rdi
   140009c90:	sub    rsp,0x20
   140009c94:	lea    rax,[rip+0x2f145]        # 0x140038de0
   140009c9b:	xor    ebp,ebp
   140009c9d:	mov    rdi,rcx
   140009ca0:	mov    QWORD PTR [rcx],rax
   140009ca3:	mov    QWORD PTR [rcx+0x8],rbp
   140009ca7:	mov    QWORD PTR [rcx+0x10],rbp
   140009cab:	add    rcx,0x18
   140009caf:	movzx  ebx,r9b
   140009cb3:	call   0x14000a580
   140009cb8:	test   bl,bl
   140009cba:	je     0x140009cc5
   140009cbc:	mov    rcx,QWORD PTR [rdi+0x18]
   140009cc0:	call   0x14000a4f0
   140009cc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cca:	mov    rsi,QWORD PTR [rsp+0x40]
   140009ccf:	lea    rax,[rip+0x2f702]        # 0x1400393d8
   140009cd6:	mov    QWORD PTR [rdi],rax
   140009cd9:	mov    QWORD PTR [rdi+0x20],rbp
   140009cdd:	mov    QWORD PTR [rdi+0x28],rbp
   140009ce1:	mov    QWORD PTR [rdi+0x30],rbp
   140009ce5:	mov    rbp,QWORD PTR [rsp+0x38]
   140009cea:	mov    rax,rdi
   140009ced:	add    rsp,0x20
   140009cf1:	pop    rdi
   140009cf2:	ret    
   140009cf3:	int3   
   140009cf4:	int3   
   140009cf5:	int3   
   140009cf6:	int3   
   140009cf7:	int3   
   140009cf8:	int3   
   140009cf9:	int3   
   140009cfa:	int3   
   140009cfb:	int3   
   140009cfc:	int3   
   140009cfd:	int3   
   140009cfe:	int3   
   140009cff:	int3   
   140009d00:	mov    QWORD PTR [rsp+0x8],rbx
   140009d05:	push   rdi
   140009d06:	sub    rsp,0x20
   140009d0a:	mov    ebx,edx
   140009d0c:	mov    rdi,rcx
   140009d0f:	call   0x140009d30
   140009d14:	test   bl,0x1
   140009d17:	je     0x140009d21
   140009d19:	mov    rcx,rdi
   140009d1c:	call   0x140018a04
   140009d21:	mov    rax,rdi
   140009d24:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d29:	add    rsp,0x20
   140009d2d:	pop    rdi
   140009d2e:	ret    
   140009d2f:	int3   
   140009d30:	mov    QWORD PTR [rsp+0x8],rcx
   140009d35:	push   rbx
   140009d36:	sub    rsp,0x30
   140009d3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009d43:	mov    rbx,rcx
   140009d46:	lea    rax,[rip+0x2f68b]        # 0x1400393d8
   140009d4d:	mov    QWORD PTR [rcx],rax
   140009d50:	cmp    QWORD PTR [rcx+0x8],0x0
   140009d55:	je     0x140009d9c
   140009d57:	add    rcx,0x18
   140009d5b:	lea    r8,[rip+0x2f39e]        # 0x140039100
   140009d62:	mov    edx,0x64
   140009d67:	call   0x14000a6d0
   140009d6c:	mov    rax,QWORD PTR [rbx+0x8]
   140009d70:	call   QWORD PTR [rax+0x30]
   140009d73:	mov    rax,QWORD PTR [rbx+0x8]
   140009d77:	call   QWORD PTR [rax+0x48]
   140009d7a:	mov    rax,QWORD PTR [rbx+0x8]
   140009d7e:	call   QWORD PTR [rax+0x20]
   140009d81:	mov    rax,QWORD PTR [rbx+0x8]
   140009d85:	call   QWORD PTR [rax+0x68]
   140009d88:	mov    rax,QWORD PTR [rbx+0x8]
   140009d8c:	call   QWORD PTR [rax+0x80]
   140009d92:	mov    rax,QWORD PTR [rbx+0x8]
   140009d96:	mov    rcx,QWORD PTR [rax]
   140009d99:	call   QWORD PTR [rcx+0x10]
   140009d9c:	mov    rcx,QWORD PTR [rbx+0x20]
   140009da0:	test   rcx,rcx
   140009da3:	je     0x140009dab
   140009da5:	call   QWORD PTR [rip+0x253d5]        # 0x14002f180
   140009dab:	mov    rcx,QWORD PTR [rbx+0x28]
   140009daf:	test   rcx,rcx
   140009db2:	je     0x140009dba
   140009db4:	call   QWORD PTR [rip+0x253c6]        # 0x14002f180
   140009dba:	mov    rcx,QWORD PTR [rbx+0x30]
   140009dbe:	test   rcx,rcx
   140009dc1:	je     0x140009dc9
   140009dc3:	call   QWORD PTR [rip+0x253b7]        # 0x14002f180
   140009dc9:	lea    rcx,[rbx+0x18]
   140009dcd:	lea    r8,[rip+0x2f338]        # 0x14003910c
   140009dd4:	mov    edx,0xc8
   140009dd9:	call   0x14000a6d0
   140009dde:	nop
   140009ddf:	mov    rcx,rbx
   140009de2:	add    rsp,0x30
   140009de6:	pop    rbx
   140009de7:	jmp    0x140008fc0
   140009dec:	int3   
   140009ded:	int3   
   140009dee:	int3   
   140009def:	int3   
   140009df0:	rex push rsi
   140009df2:	sub    rsp,0xa0
   140009df9:	mov    rax,QWORD PTR [rip+0x37850]        # 0x140041650
   140009e00:	xor    rax,rsp
   140009e03:	mov    QWORD PTR [rsp+0x70],rax
   140009e08:	mov    rsi,rcx
   140009e0b:	call   0x14000a2e0
   140009e10:	test   eax,eax
   140009e12:	jne    0x14000a270
   140009e18:	mov    QWORD PTR [rsp+0xb8],rbx
   140009e20:	mov    QWORD PTR [rsp+0xc0],rbp
   140009e28:	mov    QWORD PTR [rsp+0xc8],rdi
   140009e30:	mov    QWORD PTR [rsp+0x98],r12
   140009e38:	mov    QWORD PTR [rsp+0x90],r13
   140009e40:	lea    r8,[rip+0x2f2d1]        # 0x140039118
   140009e47:	lea    edx,[rax+0x64]
   140009e4a:	lea    rcx,[rsi+0x18]
   140009e4e:	mov    QWORD PTR [rsp+0x88],r14
   140009e56:	mov    QWORD PTR [rsp+0x80],r15
   140009e5e:	call   0x14000a6d0
   140009e63:	lea    r8,[rip+0x2f4d6]        # 0x140039340
   140009e6a:	xor    r13d,r13d
   140009e6d:	xor    edx,edx
   140009e6f:	mov    ecx,0x10000000
   140009e74:	mov    ebp,r13d
   140009e77:	call   QWORD PTR [rip+0x2527b]        # 0x14002f0f8
   140009e7d:	test   rax,rax
   140009e80:	je     0x140009e90
   140009e82:	mov    rcx,rax
   140009e85:	call   QWORD PTR [rip+0x252f5]        # 0x14002f180
   140009e8b:	mov    r15b,0x1
   140009e8e:	jmp    0x140009e93
   140009e90:	xor    r15b,r15b
   140009e93:	mov    rax,QWORD PTR [rsi+0x20]
   140009e97:	lea    r12,[rip+0xffffffffffff6162]        # 0x140000000
   140009e9e:	mov    QWORD PTR [rsp+0x68],rax
   140009ea3:	lea    rdx,[rsp+0x68]
   140009ea8:	mov    r9d,0x4ff
   140009eae:	mov    r8d,0x3e8
   140009eb4:	mov    ecx,0x1
   140009eb9:	mov    DWORD PTR [rsp+0x20],0x2
   140009ec1:	call   QWORD PTR [rip+0x394c1]        # 0x140043388
   140009ec7:	mov    ebx,eax
   140009ec9:	call   QWORD PTR [rip+0x251e9]        # 0x14002f0b8
   140009ecf:	mov    edi,eax
   140009ed1:	cmp    ebx,0x102
   140009ed7:	je     0x140009ee5
   140009ed9:	mov    ecx,eax
   140009edb:	sub    ecx,ebp
   140009edd:	cmp    ecx,0x3e8
   140009ee3:	jb     0x140009f1e
   140009ee5:	lea    r8,[rip+0x2f454]        # 0x140039340
   140009eec:	xor    edx,edx
   140009eee:	mov    ecx,0x10000000
   140009ef3:	call   QWORD PTR [rip+0x251ff]        # 0x14002f0f8
   140009ef9:	test   rax,rax
   140009efc:	je     0x140009f0e
   140009efe:	mov    rcx,rax
   140009f01:	call   QWORD PTR [rip+0x25279]        # 0x14002f180
   140009f07:	mov    r15b,0x1
   140009f0a:	mov    ebp,edi
   140009f0c:	jmp    0x140009f1e
   140009f0e:	test   r15b,r15b
   140009f11:	mov    ebp,edi
   140009f13:	sete   al
   140009f16:	test   al,al
   140009f18:	je     0x14000a21e
   140009f1e:	test   ebx,ebx
   140009f20:	je     0x140009fac
   140009f26:	cmp    ebx,0x1
   140009f29:	je     0x140009f53
   140009f2b:	cmp    ebx,0xffffffff
   140009f2e:	jne    0x140009ea3
   140009f34:	lea    r8,[rip+0x2f3a5]        # 0x1400392e0
   140009f3b:	lea    rcx,[rsi+0x18]
   140009f3f:	mov    edx,0xc8
   140009f44:	call   0x14000a6d0
   140009f49:	mov    eax,0xa
   140009f4e:	jmp    0x14000a238
   140009f53:	lea    rcx,[rsp+0x38]
   140009f58:	xor    r9d,r9d
   140009f5b:	xor    r8d,r8d
   140009f5e:	xor    edx,edx
   140009f60:	mov    DWORD PTR [rsp+0x20],0x1
   140009f68:	call   QWORD PTR [rip+0x39422]        # 0x140043390
   140009f6e:	cmp    eax,0xffffffff
   140009f71:	je     0x14000a21a
   140009f77:	test   eax,eax
   140009f79:	je     0x140009ea3
   140009f7f:	mov    eax,DWORD PTR [rsp+0x40]
   140009f83:	add    eax,0xffffffee
   140009f86:	test   eax,0xfffffffb
   140009f8b:	je     0x14000a1ec
   140009f91:	lea    rcx,[rsp+0x38]
   140009f96:	call   QWORD PTR [rip+0x393fc]        # 0x140043398
   140009f9c:	lea    rcx,[rsp+0x38]
   140009fa1:	call   QWORD PTR [rip+0x393f9]        # 0x1400433a0
   140009fa7:	jmp    0x140009ea3
   140009fac:	mov    rax,QWORD PTR [rsi+0x8]
   140009fb0:	lea    rcx,[rsp+0x30]
   140009fb5:	mov    edi,r13d
   140009fb8:	call   QWORD PTR [rax+0x8]
   140009fbb:	test   eax,eax
   140009fbd:	je     0x140009ea3
   140009fc3:	cmp    eax,0xffffffff
   140009fc6:	je     0x14000a1d2
   140009fcc:	mov    r9d,DWORD PTR [rsp+0x30]
   140009fd1:	lea    eax,[r9+0x1]
   140009fd5:	cmp    eax,0x13
   140009fd8:	ja     0x14000a19a
   140009fde:	cdqe   
   140009fe0:	mov    ecx,DWORD PTR [r12+rax*4+0xa288]
   140009fe8:	add    rcx,r12
   140009feb:	jmp    rcx
   140009fed:	lea    r8,[rip+0x2f1b4]        # 0x1400391a8
   140009ff4:	lea    rcx,[rsi+0x18]
   140009ff8:	mov    edx,0xc8
   140009ffd:	call   0x14000a6d0
   14000a002:	jmp    0x14000a1b9
   14000a007:	mov    rcx,QWORD PTR [rsi+0x18]
   14000a00b:	call   0x14000a4f0
   14000a010:	lea    r8,[rip+0x2f1a9]        # 0x1400391c0
   14000a017:	lea    rcx,[rsi+0x18]
   14000a01b:	mov    edx,0x64
   14000a020:	call   0x14000a6d0
   14000a025:	jmp    0x14000a1b9
   14000a02a:	lea    r8,[rip+0x2f19f]        # 0x1400391d0
   14000a031:	lea    rcx,[rsi+0x18]
   14000a035:	mov    edx,0x64
   14000a03a:	call   0x14000a6d0
   14000a03f:	mov    rbx,QWORD PTR [rsi+0x18]
   14000a043:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a047:	lea    rax,[rcx-0x1]
   14000a04b:	cmp    rax,0xfffffffffffffffd
   14000a04f:	ja     0x14000a05b
   14000a051:	call   QWORD PTR [rip+0x25129]        # 0x14002f180
   14000a057:	mov    QWORD PTR [rbx+0x8],r13
   14000a05b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a05f:	test   rcx,rcx
   14000a062:	je     0x14000a1b9
   14000a068:	call   QWORD PTR [rip+0x25112]        # 0x14002f180
   14000a06e:	mov    QWORD PTR [rbx+0x10],r13
   14000a072:	jmp    0x14000a1b9
   14000a077:	mov    rax,QWORD PTR [rsi+0x8]
   14000a07b:	call   QWORD PTR [rax+0x18]
   14000a07e:	test   eax,eax
   14000a080:	jne    0x14000a1b9
   14000a086:	lea    r8,[rip+0x2f153]        # 0x1400391e0
   14000a08d:	lea    rcx,[rsi+0x18]
   14000a091:	mov    edx,0xc8
   14000a096:	call   0x14000a6d0
   14000a09b:	jmp    0x14000a1b9
   14000a0a0:	mov    rax,QWORD PTR [rsi+0x8]
   14000a0a4:	call   QWORD PTR [rax+0x20]
   14000a0a7:	jmp    0x14000a1b9
   14000a0ac:	mov    rax,QWORD PTR [rsi+0x8]
   14000a0b0:	call   QWORD PTR [rax+0x28]
   14000a0b3:	test   eax,eax
   14000a0b5:	jne    0x14000a1b9
   14000a0bb:	lea    r8,[rip+0x2f136]        # 0x1400391f8
   14000a0c2:	lea    rcx,[rsi+0x18]
   14000a0c6:	mov    edx,0xc8
   14000a0cb:	call   0x14000a6d0
   14000a0d0:	jmp    0x14000a1b9
   14000a0d5:	mov    rax,QWORD PTR [rsi+0x8]
   14000a0d9:	call   QWORD PTR [rax+0x30]
   14000a0dc:	jmp    0x14000a1b9
   14000a0e1:	call   QWORD PTR [rip+0x24fd1]        # 0x14002f0b8
   14000a0e7:	mov    ecx,eax
   14000a0e9:	sub    ecx,edi
   14000a0eb:	cmp    ecx,0x32
   14000a0ee:	jbe    0x14000a1b9
   14000a0f4:	mov    edi,eax
   14000a0f6:	mov    rax,QWORD PTR [rsi+0x8]
   14000a0fa:	call   QWORD PTR [rax+0x38]
   14000a0fd:	jmp    0x14000a1b9
   14000a102:	mov    rax,QWORD PTR [rsi+0x8]
   14000a106:	call   QWORD PTR [rax+0x40]
   14000a109:	test   eax,eax
   14000a10b:	jne    0x14000a1b9
   14000a111:	lea    r8,[rip+0x2f108]        # 0x140039220
   14000a118:	lea    rcx,[rsi+0x18]
   14000a11c:	mov    edx,0xc8
   14000a121:	call   0x14000a6d0
   14000a126:	jmp    0x14000a1b9
   14000a12b:	mov    rax,QWORD PTR [rsi+0x8]
   14000a12f:	call   QWORD PTR [rax+0x48]
   14000a132:	jmp    0x14000a1b9
   14000a137:	mov    rax,QWORD PTR [rsi+0x8]
   14000a13b:	call   QWORD PTR [rax+0x60]
   14000a13e:	test   eax,eax
   14000a140:	jne    0x14000a159
   14000a142:	lea    r8,[rip+0x2f0f7]        # 0x140039240
   14000a149:	lea    rcx,[rsi+0x18]
   14000a14d:	mov    edx,0xc8
   14000a152:	call   0x14000a6d0
   14000a157:	jmp    0x14000a1b9
   14000a159:	mov    rcx,rsi
   14000a15c:	call   0x14000a3b0
   14000a161:	jmp    0x14000a1b9
   14000a163:	mov    rax,QWORD PTR [rsi+0x8]
   14000a167:	call   QWORD PTR [rax+0x68]
   14000a16a:	jmp    0x14000a1b9
   14000a16c:	mov    rax,QWORD PTR [rsi+0x8]
   14000a170:	call   QWORD PTR [rax+0x78]
   14000a173:	test   eax,eax
   14000a175:	jne    0x14000a1b9
   14000a177:	lea    r8,[rip+0x2f0ea]        # 0x140039268
   14000a17e:	lea    rcx,[rsi+0x18]
   14000a182:	mov    edx,0xc8
   14000a187:	call   0x14000a6d0
   14000a18c:	jmp    0x14000a1b9
   14000a18e:	mov    rax,QWORD PTR [rsi+0x8]
   14000a192:	call   QWORD PTR [rax+0x80]
   14000a198:	jmp    0x14000a1b9
   14000a19a:	lea    r8,[rip+0x2f0f7]        # 0x140039298
   14000a1a1:	lea    rcx,[rsi+0x18]
   14000a1a5:	mov    edx,0xc8
   14000a1aa:	call   0x14000a6d0
   14000a1af:	mov    rax,QWORD PTR [rsi+0x8]
   14000a1b3:	mov    rcx,QWORD PTR [rax]
   14000a1b6:	call   QWORD PTR [rcx+0x28]
   14000a1b9:	mov    rax,QWORD PTR [rsi+0x8]
   14000a1bd:	lea    rcx,[rsp+0x30]
   14000a1c2:	call   QWORD PTR [rax+0x8]
   14000a1c5:	test   eax,eax
   14000a1c7:	jne    0x140009fc3
   14000a1cd:	jmp    0x140009ea3
   14000a1d2:	lea    r8,[rip+0x2ef87]        # 0x140039160
   14000a1d9:	lea    rcx,[rsi+0x18]
   14000a1dd:	mov    edx,0xc8
   14000a1e2:	call   0x14000a6d0
   14000a1e7:	jmp    0x140009ea3
   14000a1ec:	lea    r8,[rip+0x2f0c5]        # 0x1400392b8
   14000a1f3:	lea    rcx,[rsi+0x18]
   14000a1f7:	mov    edx,0xc8
   14000a1fc:	call   0x14000a6d0
   14000a201:	xor    eax,eax
   14000a203:	jmp    0x14000a238
   14000a205:	lea    r8,[rip+0x2f07c]        # 0x140039288
   14000a20c:	lea    rcx,[rsi+0x18]
   14000a210:	mov    edx,0x64
   14000a215:	call   0x14000a6d0
   14000a21a:	xor    eax,eax
   14000a21c:	jmp    0x14000a238
   14000a21e:	lea    r8,[rip+0x2ef0b]        # 0x140039130
   14000a225:	lea    rcx,[rsi+0x18]
   14000a229:	mov    edx,0xc8
   14000a22e:	call   0x14000a6d0
   14000a233:	mov    eax,0x9
   14000a238:	mov    r14,QWORD PTR [rsp+0x88]
   14000a240:	mov    r13,QWORD PTR [rsp+0x90]
   14000a248:	mov    r12,QWORD PTR [rsp+0x98]
   14000a250:	mov    rdi,QWORD PTR [rsp+0xc8]
   14000a258:	mov    rbp,QWORD PTR [rsp+0xc0]
   14000a260:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000a268:	mov    r15,QWORD PTR [rsp+0x80]
   14000a270:	mov    rcx,QWORD PTR [rsp+0x70]
   14000a275:	xor    rcx,rsp
   14000a278:	call   0x1400187d0
   14000a27d:	add    rsp,0xa0
   14000a284:	pop    rsi
   14000a285:	ret    
   14000a286:	xchg   ax,ax
   14000a288:	in     eax,dx
   14000a289:	lahf   
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	(bad)  
   14000a28d:	movabs eax,ds:0xa0770000a2050000
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	movabs al,ds:0xd50000a0ac0000a0
   14000a2a1:	movabs al,ds:0xa1020000a0e10000
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	sub    esp,DWORD PTR [rcx-0x5ff90000]
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	sub    ah,BYTE PTR [rax-0x5ec90000]
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	movsxd esp,DWORD PTR [rcx-0x5e470000]
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	mov    ecx,0xb90000a1
   14000a2c9:	movabs eax,ds:0xa16c0000a1b90000
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	mov    fs,WORD PTR [rcx-0x33340000]
   14000a2da:	int3   
   14000a2db:	int3   
   14000a2dc:	int3   
   14000a2dd:	int3   
   14000a2de:	int3   
   14000a2df:	int3   
   14000a2e0:	mov    QWORD PTR [rsp+0x18],rsi
   14000a2e5:	push   rdi
   14000a2e6:	sub    rsp,0x20
   14000a2ea:	mov    rdi,rcx
   14000a2ed:	lea    r8,[rip+0x2f004]        # 0x1400392f8
   14000a2f4:	mov    edx,0xc8
   14000a2f9:	add    rcx,0x18
   14000a2fd:	call   0x14000a6d0
   14000a302:	mov    rcx,rdi
   14000a305:	call   0x140009040
   14000a30a:	test   eax,eax
   14000a30c:	jne    0x14000a3a3
   14000a312:	mov    rax,QWORD PTR [rdi+0x8]
   14000a316:	mov    r8,QWORD PTR [rax]
   14000a319:	call   QWORD PTR [r8+0x18]
   14000a31d:	test   al,0x1
   14000a31f:	je     0x14000a346
   14000a321:	lea    r8,[rip+0x2efe0]        # 0x140039308
   14000a328:	lea    rcx,[rdi+0x18]
   14000a32c:	mov    edx,0xc8
   14000a331:	call   0x14000a6d0
   14000a336:	mov    eax,0x2
   14000a33b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a340:	add    rsp,0x20
   14000a344:	pop    rdi
   14000a345:	ret    
   14000a346:	mov    rax,QWORD PTR [rdi+0x8]
   14000a34a:	lea    rdx,[rdi+0x28]
   14000a34e:	lea    rcx,[rdi+0x20]
   14000a352:	mov    QWORD PTR [rsp+0x30],rbx
   14000a357:	mov    QWORD PTR [rsp+0x38],rbp
   14000a35c:	call   QWORD PTR [rax+0x10]
   14000a35f:	cmp    QWORD PTR [rdi+0x20],0x0
   14000a364:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a369:	je     0x14000a384
   14000a36b:	cmp    QWORD PTR [rdi+0x28],0x0
   14000a370:	je     0x14000a384
   14000a372:	xor    eax,eax
   14000a374:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a379:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a37e:	add    rsp,0x20
   14000a382:	pop    rdi
   14000a383:	ret    
   14000a384:	lea    r8,[rip+0x2ef95]        # 0x140039320
   14000a38b:	lea    rcx,[rdi+0x18]
   14000a38f:	mov    edx,0xc8
   14000a394:	call   0x14000a6d0
   14000a399:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a39e:	mov    eax,0x4
   14000a3a3:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a3a8:	add    rsp,0x20
   14000a3ac:	pop    rdi
   14000a3ad:	ret    
   14000a3ae:	int3   
   14000a3af:	int3   
   14000a3b0:	rex push rbx
   14000a3b2:	sub    rsp,0x40
   14000a3b6:	mov    rax,QWORD PTR [rip+0x37293]        # 0x140041650
   14000a3bd:	xor    rax,rsp
   14000a3c0:	mov    QWORD PTR [rsp+0x38],rax
   14000a3c5:	xor    r8d,r8d
   14000a3c8:	mov    rbx,rcx
   14000a3cb:	xor    ecx,ecx
   14000a3cd:	lea    edx,[r8+0x1]
   14000a3d1:	call   QWORD PTR [rip+0x24e21]        # 0x14002f1f8
   14000a3d7:	mov    QWORD PTR [rbx+0x30],rax
   14000a3db:	test   rax,rax
   14000a3de:	jne    0x14000a3e9
   14000a3e0:	lea    r8,[rip+0x2ef99]        # 0x140039380
   14000a3e7:	jmp    0x14000a420
   14000a3e9:	xor    ecx,ecx
   14000a3eb:	lea    r9,[rip+0xfffffffffffff85e]        # 0x140009c50
   14000a3f2:	lea    rdx,[rsp+0x30]
   14000a3f7:	mov    DWORD PTR [rsp+0x28],ecx
   14000a3fb:	mov    QWORD PTR [rsp+0x20],rcx
   14000a400:	xor    r8d,r8d
   14000a403:	mov    rcx,rax
   14000a406:	mov    QWORD PTR [rsp+0x30],0xfffffffffeced300
   14000a40f:	call   QWORD PTR [rip+0x24cf3]        # 0x14002f108
   14000a415:	test   eax,eax
   14000a417:	jne    0x14000a42e
   14000a419:	lea    r8,[rip+0x2ef88]        # 0x1400393a8
   14000a420:	lea    rcx,[rbx+0x18]
   14000a424:	mov    edx,0xc8
   14000a429:	call   0x14000a6d0
   14000a42e:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a433:	xor    rcx,rsp
   14000a436:	call   0x1400187d0
   14000a43b:	add    rsp,0x40
   14000a43f:	pop    rbx
   14000a440:	ret    
   14000a441:	int3   
   14000a442:	int3   
   14000a443:	int3   
   14000a444:	int3   
   14000a445:	int3   
   14000a446:	int3   
   14000a447:	int3   
   14000a448:	int3   
   14000a449:	int3   
   14000a44a:	int3   
   14000a44b:	int3   
   14000a44c:	int3   
   14000a44d:	int3   
   14000a44e:	int3   
   14000a44f:	int3   
   14000a450:	rex push rbx
   14000a452:	push   rsi
   14000a453:	push   rdi
   14000a454:	push   r14
   14000a456:	sub    rsp,0x58
   14000a45a:	mov    rax,QWORD PTR [rip+0x371ef]        # 0x140041650
   14000a461:	xor    rax,rsp
   14000a464:	mov    QWORD PTR [rsp+0x40],rax
   14000a469:	mov    r14d,r9d
   14000a46c:	mov    rsi,r8
   14000a46f:	mov    rbx,rdx
   14000a472:	mov    rdi,rcx
   14000a475:	mov    QWORD PTR [rsp+0x30],rdx
   14000a47a:	test   rdx,rdx
   14000a47d:	je     0x14000a48f
   14000a47f:	or     edx,0xffffffff
   14000a482:	mov    rcx,rbx
   14000a485:	call   QWORD PTR [rip+0x24c85]        # 0x14002f110
   14000a48b:	test   eax,eax
   14000a48d:	jne    0x14000a4c1
   14000a48f:	mov    r9d,0x2
   14000a495:	xor    r8d,r8d
   14000a498:	xor    edx,edx
   14000a49a:	mov    rcx,rdi
   14000a49d:	call   QWORD PTR [rip+0x24c75]        # 0x14002f118
   14000a4a3:	mov    QWORD PTR [rsp+0x20],0x0
   14000a4ac:	lea    r9,[rsp+0x38]
   14000a4b1:	mov    r8d,r14d
   14000a4b4:	mov    rdx,rsi
   14000a4b7:	mov    rcx,rdi
   14000a4ba:	call   QWORD PTR [rip+0x24c60]        # 0x14002f120
   14000a4c0:	nop
   14000a4c1:	test   rbx,rbx
   14000a4c4:	je     0x14000a4cf
   14000a4c6:	mov    rcx,rbx
   14000a4c9:	call   QWORD PTR [rip+0x24c59]        # 0x14002f128
   14000a4cf:	mov    rcx,QWORD PTR [rsp+0x40]
   14000a4d4:	xor    rcx,rsp
   14000a4d7:	call   0x1400187d0
   14000a4dc:	add    rsp,0x58
   14000a4e0:	pop    r14
   14000a4e2:	pop    rdi
   14000a4e3:	pop    rsi
   14000a4e4:	pop    rbx
   14000a4e5:	ret    
   14000a4e6:	int3   
   14000a4e7:	int3   
   14000a4e8:	int3   
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	int3   
   14000a4ed:	int3   
   14000a4ee:	int3   
   14000a4ef:	int3   
   14000a4f0:	rex push rbx
   14000a4f2:	sub    rsp,0x40
   14000a4f6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000a4fb:	mov    rbx,rcx
   14000a4fe:	jne    0x14000a52f
   14000a500:	lea    r8,[rip+0x2eed9]        # 0x1400393e0
   14000a507:	xor    edx,edx
   14000a509:	xor    ecx,ecx
   14000a50b:	call   QWORD PTR [rip+0x24c1f]        # 0x14002f130
   14000a511:	mov    QWORD PTR [rbx+0x10],rax
   14000a515:	test   rax,rax
   14000a518:	jne    0x14000a52f
   14000a51a:	lea    r8,[rip+0x2eef7]        # 0x140039418
   14000a521:	xor    edx,edx
   14000a523:	xor    ecx,ecx
   14000a525:	call   QWORD PTR [rip+0x24c05]        # 0x14002f130
   14000a52b:	mov    QWORD PTR [rbx+0x10],rax
   14000a52f:	mov    rax,QWORD PTR [rbx+0x8]
   14000a533:	inc    rax
   14000a536:	test   rax,0xfffffffffffffffe
   14000a53c:	jne    0x14000a56b
   14000a53e:	xor    eax,eax
   14000a540:	lea    rcx,[rbx+0x18]
   14000a544:	xor    r9d,r9d
   14000a547:	mov    QWORD PTR [rsp+0x30],rax
   14000a54c:	mov    DWORD PTR [rsp+0x28],eax
   14000a550:	lea    r8d,[rax+0x7]
   14000a554:	mov    edx,0x40000000
   14000a559:	mov    DWORD PTR [rsp+0x20],0x4
   14000a561:	call   QWORD PTR [rip+0x24b41]        # 0x14002f0a8
   14000a567:	mov    QWORD PTR [rbx+0x8],rax
   14000a56b:	add    rsp,0x40
   14000a56f:	pop    rbx
   14000a570:	ret    
   14000a571:	int3   
   14000a572:	int3   
   14000a573:	int3   
   14000a574:	int3   
   14000a575:	int3   
   14000a576:	int3   
   14000a577:	int3   
   14000a578:	int3   
   14000a579:	int3   
   14000a57a:	int3   
   14000a57b:	int3   
   14000a57c:	int3   
   14000a57d:	int3   
   14000a57e:	int3   
   14000a57f:	int3   
   14000a580:	mov    QWORD PTR [rsp+0x10],rbp
   14000a585:	mov    QWORD PTR [rsp+0x18],rsi
   14000a58a:	push   rdi
   14000a58b:	sub    rsp,0x20
   14000a58f:	mov    esi,r8d
   14000a592:	mov    rbp,rdx
   14000a595:	mov    rdi,rcx
   14000a598:	mov    eax,0x1
   14000a59d:	lock xadd DWORD PTR [rip+0x3a58b],eax        # 0x140044b30
   14000a5a5:	inc    eax
   14000a5a7:	cmp    eax,0x1
   14000a5aa:	jne    0x14000a635
   14000a5b0:	mov    ecx,0x228
   14000a5b5:	mov    QWORD PTR [rsp+0x30],rbx
   14000a5ba:	call   0x140018a0c
   14000a5bf:	mov    rbx,rax
   14000a5c2:	test   rax,rax
   14000a5c5:	je     0x14000a611
   14000a5c7:	mov    r9d,0x104
   14000a5cd:	lea    rcx,[rax+0x18]
   14000a5d1:	mov    r8,rbp
   14000a5d4:	lea    edx,[r9+0x1]
   14000a5d8:	mov    DWORD PTR [rax],esi
   14000a5da:	mov    QWORD PTR [rax+0x8],0x0
   14000a5e2:	mov    QWORD PTR [rax+0x10],0x0
   14000a5ea:	call   0x14001995c
   14000a5ef:	mov    QWORD PTR [rip+0x3a532],rbx        # 0x140044b28
   14000a5f6:	mov    QWORD PTR [rdi],rbx
   14000a5f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a5fe:	mov    rax,rdi
   14000a601:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a606:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a60b:	add    rsp,0x20
   14000a60f:	pop    rdi
   14000a610:	ret    
   14000a611:	xor    ebx,ebx
   14000a613:	mov    rax,rdi
   14000a616:	mov    QWORD PTR [rip+0x3a50b],rbx        # 0x140044b28
   14000a61d:	mov    QWORD PTR [rdi],rbx
   14000a620:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a625:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a62a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a62f:	add    rsp,0x20
   14000a633:	pop    rdi
   14000a634:	ret    
   14000a635:	mov    rax,QWORD PTR [rip+0x3a4ec]        # 0x140044b28
   14000a63c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a641:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a646:	mov    QWORD PTR [rcx],rax
   14000a649:	mov    rax,rdi
   14000a64c:	add    rsp,0x20
   14000a650:	pop    rdi
   14000a651:	ret    
   14000a652:	int3   
   14000a653:	int3   
   14000a654:	int3   
   14000a655:	int3   
   14000a656:	int3   
   14000a657:	int3   
   14000a658:	int3   
   14000a659:	int3   
   14000a65a:	int3   
   14000a65b:	int3   
   14000a65c:	int3   
   14000a65d:	int3   
   14000a65e:	int3   
   14000a65f:	int3   
   14000a660:	sub    rsp,0x28
   14000a664:	lock dec DWORD PTR [rip+0x3a4c5]        # 0x140044b30
   14000a66b:	jne    0x14000a6c5
   14000a66d:	mov    QWORD PTR [rsp+0x20],rbx
   14000a672:	mov    rbx,QWORD PTR [rcx]
   14000a675:	test   rbx,rbx
   14000a678:	je     0x14000a6b5
   14000a67a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000a67e:	lea    rax,[rcx-0x1]
   14000a682:	cmp    rax,0xfffffffffffffffd
   14000a686:	ja     0x14000a696
   14000a688:	call   QWORD PTR [rip+0x24af2]        # 0x14002f180
   14000a68e:	mov    QWORD PTR [rbx+0x8],0x0
   14000a696:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a69a:	test   rcx,rcx
   14000a69d:	je     0x14000a6ad
   14000a69f:	call   QWORD PTR [rip+0x24adb]        # 0x14002f180
   14000a6a5:	mov    QWORD PTR [rbx+0x10],0x0
   14000a6ad:	mov    rcx,rbx
   14000a6b0:	call   0x140018a04
   14000a6b5:	mov    rbx,QWORD PTR [rsp+0x20]
   14000a6ba:	mov    QWORD PTR [rip+0x3a463],0x0        # 0x140044b28
   14000a6c5:	add    rsp,0x28
   14000a6c9:	ret    
   14000a6ca:	int3   
   14000a6cb:	int3   
   14000a6cc:	int3   
   14000a6cd:	int3   
   14000a6ce:	int3   
   14000a6cf:	int3   
   14000a6d0:	mov    r11,rsp
   14000a6d3:	mov    QWORD PTR [r11+0x18],r8
   14000a6d7:	mov    QWORD PTR [r11+0x20],r9
   14000a6db:	push   rsi
   14000a6dc:	sub    rsp,0x8d0
   14000a6e3:	mov    rax,QWORD PTR [rip+0x36f66]        # 0x140041650
   14000a6ea:	xor    rax,rsp
   14000a6ed:	mov    QWORD PTR [rsp+0x8a0],rax
   14000a6f5:	mov    rax,QWORD PTR [rcx]
   14000a6f8:	mov    rsi,rcx
   14000a6fb:	cmp    edx,DWORD PTR [rax]
   14000a6fd:	jl     0x14000a879
   14000a703:	mov    rax,QWORD PTR [rax+0x8]
   14000a707:	dec    rax
   14000a70a:	cmp    rax,0xfffffffffffffffd
   14000a70e:	ja     0x14000a879
   14000a714:	mov    QWORD PTR [r11-0x10],rbx
   14000a718:	mov    QWORD PTR [r11-0x18],rbp
   14000a71c:	lea    rcx,[rsp+0x70]
   14000a721:	mov    QWORD PTR [r11-0x20],rdi
   14000a725:	mov    DWORD PTR [rsp+0x80],0x34364c
   14000a730:	mov    BYTE PTR [r11-0x46],0x0
   14000a735:	call   QWORD PTR [rip+0x249fd]        # 0x14002f138
   14000a73b:	call   QWORD PTR [rip+0x249ff]        # 0x14002f140
   14000a741:	mov    edi,eax
   14000a743:	call   QWORD PTR [rip+0x249ff]        # 0x14002f148
   14000a749:	movzx  ecx,WORD PTR [rsp+0x7e]
   14000a74e:	movzx  edx,WORD PTR [rsp+0x7c]
   14000a753:	movzx  r8d,WORD PTR [rsp+0x7a]
   14000a759:	movzx  r9d,WORD PTR [rsp+0x78]
   14000a75f:	movzx  r10d,WORD PTR [rsp+0x76]
   14000a765:	movzx  r11d,WORD PTR [rsp+0x72]
   14000a76b:	movzx  ebx,WORD PTR [rsp+0x70]
   14000a770:	lea    rbp,[rsp+0x80]
   14000a778:	mov    QWORD PTR [rsp+0x68],rbp
   14000a77d:	mov    DWORD PTR [rsp+0x60],edi
   14000a781:	mov    DWORD PTR [rsp+0x58],eax
   14000a785:	mov    DWORD PTR [rsp+0x50],ecx
   14000a789:	mov    DWORD PTR [rsp+0x48],edx
   14000a78d:	mov    DWORD PTR [rsp+0x40],r8d
   14000a792:	mov    DWORD PTR [rsp+0x38],r9d
   14000a797:	mov    DWORD PTR [rsp+0x30],r10d
   14000a79c:	mov    edi,0x800
   14000a7a1:	mov    DWORD PTR [rsp+0x28],r11d
   14000a7a6:	lea    r9,[rip+0x2ec93]        # 0x140039440
   14000a7ad:	lea    rcx,[rsp+0x90]
   14000a7b5:	lea    edx,[rdi+0x3]
   14000a7b8:	mov    r8d,edi
   14000a7bb:	mov    DWORD PTR [rsp+0x20],ebx
   14000a7bf:	call   0x140019618
   14000a7c4:	mov    rbp,QWORD PTR [rsp+0x8c0]
   14000a7cc:	or     rbx,0xffffffffffffffff
   14000a7d0:	mov    rax,rbx
   14000a7d3:	lea    rcx,[rsp+0x90]
   14000a7db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a7e0:	inc    rax
   14000a7e3:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000a7e7:	jne    0x14000a7e0
   14000a7e9:	mov    r9,QWORD PTR [rsp+0x8f0]
   14000a7f1:	lea    r8,[rsp+0x8f8]
   14000a7f9:	sub    rdi,rax
   14000a7fc:	mov    QWORD PTR [rsp+0x20],r8
   14000a801:	lea    rcx,[rsp+0x90]
   14000a809:	mov    edx,0x803
   14000a80e:	mov    r8,rdi
   14000a811:	sub    rdx,rax
   14000a814:	add    rcx,rax
   14000a817:	call   0x140019ce0
   14000a81c:	lea    r8,[rip+0x2ec4d]        # 0x140039470
   14000a823:	lea    rcx,[rsp+0x90]
   14000a82b:	mov    r9d,0x2
   14000a831:	mov    edx,0x803
   14000a836:	call   0x140019eb8
   14000a83b:	mov    rcx,QWORD PTR [rsi]
   14000a83e:	mov    rdi,QWORD PTR [rsp+0x8b8]
   14000a846:	lea    rax,[rsp+0x90]
   14000a84e:	xchg   ax,ax
   14000a850:	inc    rbx
   14000a853:	cmp    BYTE PTR [rax+rbx*1],0x0
   14000a857:	jne    0x14000a850
   14000a859:	mov    rdx,QWORD PTR [rcx+0x10]
   14000a85d:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a861:	lea    r8,[rsp+0x90]
   14000a869:	mov    r9,rbx
   14000a86c:	call   0x14000a450
   14000a871:	mov    rbx,QWORD PTR [rsp+0x8c8]
   14000a879:	mov    rcx,QWORD PTR [rsp+0x8a0]
   14000a881:	xor    rcx,rsp
   14000a884:	call   0x1400187d0
   14000a889:	add    rsp,0x8d0
   14000a890:	pop    rsi
   14000a891:	ret    
   14000a892:	int3   
   14000a893:	int3   
   14000a894:	int3   
   14000a895:	int3   
   14000a896:	int3   
   14000a897:	int3   
   14000a898:	int3   
   14000a899:	int3   
   14000a89a:	int3   
   14000a89b:	int3   
   14000a89c:	int3   
   14000a89d:	int3   
   14000a89e:	int3   
   14000a89f:	int3   
   14000a8a0:	mov    rax,rsp
   14000a8a3:	push   rbp
   14000a8a4:	push   rdi
   14000a8a5:	push   r14
   14000a8a7:	lea    rbp,[rax-0xc8]
   14000a8ae:	sub    rsp,0x1b0
   14000a8b5:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000a8be:	mov    QWORD PTR [rax+0x8],rbx
   14000a8c2:	mov    QWORD PTR [rax+0x18],rsi
   14000a8c6:	mov    rax,QWORD PTR [rip+0x36d83]        # 0x140041650
   14000a8cd:	xor    rax,rsp
   14000a8d0:	mov    QWORD PTR [rbp+0xa0],rax
   14000a8d7:	mov    rsi,rdx
   14000a8da:	cmp    ecx,0x1
   14000a8dd:	jne    0x14000ab11
   14000a8e3:	test   rdx,rdx
   14000a8e6:	je     0x14000aad8
   14000a8ec:	mov    rcx,QWORD PTR [rdx+0x18]
   14000a8f0:	test   rcx,rcx
   14000a8f3:	je     0x14000aad8
   14000a8f9:	xor    edx,edx
   14000a8fb:	mov    r8d,0x800
   14000a901:	call   QWORD PTR [rip+0x24849]        # 0x14002f150
   14000a907:	mov    rdi,rax
   14000a90a:	test   rax,rax
   14000a90d:	jne    0x14000aad3
   14000a913:	mov    rcx,QWORD PTR [rsi+0x18]
   14000a917:	call   QWORD PTR [rip+0x2483b]        # 0x14002f158
   14000a91d:	mov    r14,rax
   14000a920:	or     rbx,0xffffffffffffffff
   14000a924:	test   rax,rax
   14000a927:	je     0x14000a9d0
   14000a92d:	xor    edx,edx
   14000a92f:	mov    r8d,0x104
   14000a935:	lea    rcx,[rbp-0x70]
   14000a939:	call   0x14001b980
   14000a93e:	mov    r8d,0x104
   14000a944:	lea    rdx,[rbp-0x70]
   14000a948:	mov    rcx,r14
   14000a94b:	call   QWORD PTR [rip+0x2477f]        # 0x14002f0d0
   14000a951:	mov    QWORD PTR [rsp+0x68],0xf
   14000a95a:	mov    QWORD PTR [rsp+0x60],rdi
   14000a95f:	mov    BYTE PTR [rsp+0x50],dil
   14000a964:	cmp    BYTE PTR [rbp-0x70],dil
   14000a968:	jne    0x14000a96f
   14000a96a:	xor    r8d,r8d
   14000a96d:	jmp    0x14000a980
   14000a96f:	lea    rax,[rbp-0x70]
   14000a973:	mov    r8,rbx
   14000a976:	inc    r8
   14000a979:	cmp    BYTE PTR [rax+r8*1],0x0
   14000a97e:	jne    0x14000a976
   14000a980:	lea    rdx,[rbp-0x70]
   14000a984:	lea    rcx,[rsp+0x50]
   14000a989:	call   0x140008e50
   14000a98e:	cmp    QWORD PTR [rsp+0x60],0x0
   14000a994:	je     0x14000a9b5
   14000a996:	lea    rcx,[rsp+0x50]
   14000a99b:	cmp    QWORD PTR [rsp+0x68],0x10
   14000a9a1:	cmovae rcx,QWORD PTR [rsp+0x50]
   14000a9a7:	xor    r8d,r8d
   14000a9aa:	xor    edx,edx
   14000a9ac:	call   QWORD PTR [rip+0x2479e]        # 0x14002f150
   14000a9b2:	mov    rdi,rax
   14000a9b5:	cmp    QWORD PTR [rsp+0x68],0x10
   14000a9bb:	jb     0x14000a9c7
   14000a9bd:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a9c2:	call   0x140018a04
   14000a9c7:	test   rdi,rdi
   14000a9ca:	jne    0x14000aad3
   14000a9d0:	xor    edx,edx
   14000a9d2:	mov    r8d,0x104
   14000a9d8:	lea    rcx,[rbp-0x70]
   14000a9dc:	call   0x14001b980
   14000a9e1:	mov    edx,0x104
   14000a9e6:	lea    rcx,[rbp-0x70]
   14000a9ea:	call   QWORD PTR [rip+0x24770]        # 0x14002f160
   14000a9f0:	test   eax,eax
   14000a9f2:	je     0x14000aad8
   14000a9f8:	mov    QWORD PTR [rsp+0x68],0xf
   14000aa01:	mov    QWORD PTR [rsp+0x60],0x0
   14000aa0a:	mov    BYTE PTR [rsp+0x50],0x0
   14000aa0f:	cmp    BYTE PTR [rbp-0x70],0x0
   14000aa13:	jne    0x14000aa19
   14000aa15:	xor    ebx,ebx
   14000aa17:	jmp    0x14000aa29
   14000aa19:	lea    rax,[rbp-0x70]
   14000aa1d:	nop    DWORD PTR [rax]
   14000aa20:	inc    rbx
   14000aa23:	cmp    BYTE PTR [rax+rbx*1],0x0
   14000aa27:	jne    0x14000aa20
   14000aa29:	mov    r8,rbx
   14000aa2c:	lea    rdx,[rbp-0x70]
   14000aa30:	lea    rcx,[rsp+0x50]
   14000aa35:	call   0x140008e50
   14000aa3a:	nop
   14000aa3b:	lea    r8,[rip+0x2e23e]        # 0x140038c80
   14000aa42:	lea    rdx,[rsp+0x50]
   14000aa47:	lea    rcx,[rsp+0x20]
   14000aa4c:	call   0x140010840
   14000aa51:	nop
   14000aa52:	mov    r8,QWORD PTR [rsi+0x18]
   14000aa56:	mov    rdx,rax
   14000aa59:	lea    rcx,[rsp+0x70]
   14000aa5e:	call   0x140010840
   14000aa63:	nop
   14000aa64:	cmp    QWORD PTR [rsp+0x38],0x10
   14000aa6a:	jb     0x14000aa76
   14000aa6c:	mov    rcx,QWORD PTR [rsp+0x20]
   14000aa71:	call   0x140018a04
   14000aa76:	mov    QWORD PTR [rsp+0x38],0xf
   14000aa7f:	mov    QWORD PTR [rsp+0x30],0x0
   14000aa88:	mov    BYTE PTR [rsp+0x20],0x0
   14000aa8d:	cmp    QWORD PTR [rsp+0x68],0x10
   14000aa93:	jb     0x14000aa9f
   14000aa95:	mov    rcx,QWORD PTR [rsp+0x50]
   14000aa9a:	call   0x140018a04
   14000aa9f:	lea    rcx,[rsp+0x70]
   14000aaa4:	cmp    QWORD PTR [rbp-0x78],0x10
   14000aaa9:	cmovae rcx,QWORD PTR [rsp+0x70]
   14000aaaf:	xor    r8d,r8d
   14000aab2:	xor    edx,edx
   14000aab4:	call   QWORD PTR [rip+0x24696]        # 0x14002f150
   14000aaba:	mov    rdi,rax
   14000aabd:	cmp    QWORD PTR [rbp-0x78],0x10
   14000aac2:	jb     0x14000aace
   14000aac4:	mov    rcx,QWORD PTR [rsp+0x70]
   14000aac9:	call   0x140018a04
   14000aace:	test   rdi,rdi
   14000aad1:	je     0x14000aad8
   14000aad3:	mov    rax,rdi
   14000aad6:	jmp    0x14000ab13
   14000aad8:	lea    rax,[rip+0x2e999]        # 0x140039478
   14000aadf:	mov    QWORD PTR [rsp+0x48],rax
   14000aae4:	lea    rdx,[rsp+0x48]
   14000aae9:	lea    rcx,[rsp+0x50]
   14000aaee:	call   0x140019fe0
   14000aaf3:	lea    rax,[rip+0x24ace]        # 0x14002f5c8
   14000aafa:	mov    QWORD PTR [rsp+0x50],rax
   14000aaff:	lea    rdx,[rip+0x3518a]        # 0x14003fc90
   14000ab06:	lea    rcx,[rsp+0x50]
   14000ab0b:	call   0x14001a628
   14000ab10:	int3   
   14000ab11:	xor    eax,eax
   14000ab13:	mov    rcx,QWORD PTR [rbp+0xa0]
   14000ab1a:	xor    rcx,rsp
   14000ab1d:	call   0x1400187d0
   14000ab22:	lea    r11,[rsp+0x1b0]
   14000ab2a:	mov    rbx,QWORD PTR [r11+0x20]
   14000ab2e:	mov    rsi,QWORD PTR [r11+0x30]
   14000ab32:	mov    rsp,r11
   14000ab35:	pop    r14
   14000ab37:	pop    rdi
   14000ab38:	pop    rbp
   14000ab39:	ret    
   14000ab3a:	int3   
   14000ab3b:	int3   
   14000ab3c:	int3   
   14000ab3d:	int3   
   14000ab3e:	int3   
   14000ab3f:	int3   
   14000ab40:	rex push rbx
   14000ab42:	push   rbp
   14000ab43:	push   rsi
   14000ab44:	push   rdi
   14000ab45:	push   r14
   14000ab47:	sub    rsp,0x70
   14000ab4b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ab54:	mov    rax,QWORD PTR [rip+0x36af5]        # 0x140041650
   14000ab5b:	xor    rax,rsp
   14000ab5e:	mov    QWORD PTR [rsp+0x68],rax
   14000ab63:	mov    rbx,r8
   14000ab66:	mov    rdi,rdx
   14000ab69:	mov    rbp,rcx
   14000ab6c:	mov    QWORD PTR [rsp+0x60],0x7
   14000ab75:	xor    r14d,r14d
   14000ab78:	mov    QWORD PTR [rsp+0x58],r14
   14000ab7d:	mov    WORD PTR [rsp+0x48],r14w
   14000ab83:	lea    r8d,[r14+0x2]
   14000ab87:	lea    rdx,[rip+0x2e8fe]        # 0x14003948c
   14000ab8e:	lea    rcx,[rsp+0x48]
   14000ab93:	call   0x140003d90
   14000ab98:	nop
   14000ab99:	mov    QWORD PTR [rbx+0x10],r14
   14000ab9d:	cmp    QWORD PTR [rbx+0x18],0x8
   14000aba2:	jb     0x14000aba9
   14000aba4:	mov    rax,QWORD PTR [rbx]
   14000aba7:	jmp    0x14000abac
   14000aba9:	mov    rax,rbx
   14000abac:	mov    WORD PTR [rax],r14w
   14000abb0:	lea    rsi,[rdi+0x10]
   14000abb4:	cmp    QWORD PTR [rdi+0x18],0x8
   14000abb9:	jb     0x14000abbe
   14000abbb:	mov    rdi,QWORD PTR [rdi]
   14000abbe:	mov    r9,QWORD PTR [rsi]
   14000abc1:	xor    r8d,r8d
   14000abc4:	mov    rdx,rdi
   14000abc7:	mov    rcx,rbp
   14000abca:	call   0x140007460
   14000abcf:	mov    rdi,rax
   14000abd2:	cmp    rax,0xffffffffffffffff
   14000abd6:	jne    0x14000abdf
   14000abd8:	xor    bl,bl
   14000abda:	jmp    0x14000add7
   14000abdf:	lea    rdx,[rsp+0x48]
   14000abe4:	cmp    QWORD PTR [rsp+0x60],0x8
   14000abea:	cmovae rdx,QWORD PTR [rsp+0x48]
   14000abf0:	mov    r9,QWORD PTR [rsp+0x58]
   14000abf5:	lea    r8,[r9+rax*1]
   14000abf9:	mov    rcx,rbp
   14000abfc:	call   0x140007460
   14000ac01:	sub    rax,rdi
   14000ac04:	mov    r9,rax
   14000ac07:	mov    r8,rdi
   14000ac0a:	lea    rdx,[rsp+0x28]
   14000ac0f:	mov    rcx,rbp
   14000ac12:	call   0x140007680
   14000ac17:	mov    rdi,rax
   14000ac1a:	cmp    rbx,rax
   14000ac1d:	je     0x14000ac49
   14000ac1f:	cmp    QWORD PTR [rbx+0x18],0x8
   14000ac24:	jb     0x14000ac2e
   14000ac26:	mov    rcx,QWORD PTR [rbx]
   14000ac29:	call   0x140018a04
   14000ac2e:	mov    QWORD PTR [rbx+0x18],0x7
   14000ac36:	mov    QWORD PTR [rbx+0x10],r14
   14000ac3a:	mov    WORD PTR [rbx],r14w
   14000ac3e:	mov    rdx,rdi
   14000ac41:	mov    rcx,rbx
   14000ac44:	call   0x140008910
   14000ac49:	cmp    QWORD PTR [rsp+0x40],0x8
   14000ac4f:	jb     0x14000ac5b
   14000ac51:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ac56:	call   0x140018a04
   14000ac5b:	mov    r8,QWORD PTR [rsi]
   14000ac5e:	xor    edx,edx
   14000ac60:	mov    rcx,rbx
   14000ac63:	call   0x140003980
   14000ac68:	cmp    QWORD PTR [rbx+0x10],0x0
   14000ac6d:	je     0x14000add5
   14000ac73:	xor    edx,edx
   14000ac75:	mov    rcx,rbx
   14000ac78:	call   0x1400089f0
   14000ac7d:	cmp    WORD PTR [rax],0x20
   14000ac81:	je     0x14000ac93
   14000ac83:	xor    edx,edx
   14000ac85:	mov    rcx,rbx
   14000ac88:	call   0x1400089f0
   14000ac8d:	cmp    WORD PTR [rax],0x22
   14000ac91:	jne    0x14000acfa
   14000ac93:	mov    rdi,QWORD PTR [rbx+0x10]
   14000ac97:	cmp    rdi,0x1
   14000ac9b:	ja     0x14000acb6
   14000ac9d:	mov    QWORD PTR [rbx+0x10],r14
   14000aca1:	cmp    QWORD PTR [rbx+0x18],0x8
   14000aca6:	jb     0x14000acad
   14000aca8:	mov    rax,QWORD PTR [rbx]
   14000acab:	jmp    0x14000acb0
   14000acad:	mov    rax,rbx
   14000acb0:	mov    WORD PTR [rax],r14w
   14000acb4:	jmp    0x14000acef
   14000acb6:	cmp    QWORD PTR [rbx+0x18],0x8
   14000acbb:	jb     0x14000acc2
   14000acbd:	mov    rcx,QWORD PTR [rbx]
   14000acc0:	jmp    0x14000acc5
   14000acc2:	mov    rcx,rbx
   14000acc5:	dec    rdi
   14000acc8:	je     0x14000acd7
   14000acca:	lea    r8,[rdi+rdi*1]
   14000acce:	lea    rdx,[rcx+0x2]
   14000acd2:	call   0x140018a90
   14000acd7:	mov    QWORD PTR [rbx+0x10],rdi
   14000acdb:	cmp    QWORD PTR [rbx+0x18],0x8
   14000ace0:	jb     0x14000ace7
   14000ace2:	mov    rax,QWORD PTR [rbx]
   14000ace5:	jmp    0x14000acea
   14000ace7:	mov    rax,rbx
   14000acea:	mov    WORD PTR [rax+rdi*2],r14w
   14000acef:	cmp    QWORD PTR [rbx+0x10],0x0
   14000acf4:	jne    0x14000ac73
   14000acfa:	cmp    QWORD PTR [rbx+0x10],0x0
   14000acff:	je     0x14000add5
   14000ad05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000ad10:	mov    rdx,QWORD PTR [rbx+0x10]
   14000ad14:	mov    r8,QWORD PTR [rbx+0x18]
   14000ad18:	cmp    r8,0x8
   14000ad1c:	jb     0x14000ad23
   14000ad1e:	mov    rax,QWORD PTR [rbx]
   14000ad21:	jmp    0x14000ad26
   14000ad23:	mov    rax,rbx
   14000ad26:	cmp    WORD PTR [rax+rdx*2-0x2],0x20
   14000ad2c:	je     0x14000ad48
   14000ad2e:	cmp    r8,0x8
   14000ad32:	jb     0x14000ad39
   14000ad34:	mov    rax,QWORD PTR [rbx]
   14000ad37:	jmp    0x14000ad3c
   14000ad39:	mov    rax,rbx
   14000ad3c:	cmp    WORD PTR [rax+rdx*2-0x2],0x22
   14000ad42:	jne    0x14000add5
   14000ad48:	lea    rcx,[rdx-0x1]
   14000ad4c:	cmp    rdx,rcx
   14000ad4f:	jb     0x14000adc8
   14000ad51:	mov    rax,rdx
   14000ad54:	sub    rax,rcx
   14000ad57:	cmp    rax,0x1
   14000ad5b:	ja     0x14000ad76
   14000ad5d:	mov    QWORD PTR [rbx+0x10],rcx
   14000ad61:	cmp    r8,0x8
   14000ad65:	jb     0x14000ad6c
   14000ad67:	mov    rax,QWORD PTR [rbx]
   14000ad6a:	jmp    0x14000ad6f
   14000ad6c:	mov    rax,rbx
   14000ad6f:	mov    WORD PTR [rax+rcx*2],r14w
   14000ad74:	jmp    0x14000adbb
   14000ad76:	cmp    r8,0x8
   14000ad7a:	jb     0x14000ad81
   14000ad7c:	mov    rax,QWORD PTR [rbx]
   14000ad7f:	jmp    0x14000ad84
   14000ad81:	mov    rax,rbx
   14000ad84:	lea    r9,[rax+rcx*2]
   14000ad88:	lea    rdi,[rdx-0x1]
   14000ad8c:	mov    r8,rdi
   14000ad8f:	sub    r8,rcx
   14000ad92:	je     0x14000ada3
   14000ad94:	add    r8,r8
   14000ad97:	lea    rdx,[r9+0x2]
   14000ad9b:	mov    rcx,r9
   14000ad9e:	call   0x140018a90
   14000ada3:	mov    QWORD PTR [rbx+0x10],rdi
   14000ada7:	cmp    QWORD PTR [rbx+0x18],0x8
   14000adac:	jb     0x14000adb3
   14000adae:	mov    rax,QWORD PTR [rbx]
   14000adb1:	jmp    0x14000adb6
   14000adb3:	mov    rax,rbx
   14000adb6:	mov    WORD PTR [rax+rdi*2],r14w
   14000adbb:	cmp    QWORD PTR [rbx+0x10],0x0
   14000adc0:	jne    0x14000ad10
   14000adc6:	jmp    0x14000add5
   14000adc8:	lea    rcx,[rip+0x2cec9]        # 0x140037c98
   14000adcf:	call   0x140014094
   14000add4:	int3   
   14000add5:	mov    bl,0x1
   14000add7:	cmp    QWORD PTR [rsp+0x60],0x8
   14000addd:	jb     0x14000ade9
   14000addf:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ade4:	call   0x140018a04
   14000ade9:	movzx  eax,bl
   14000adec:	mov    rcx,QWORD PTR [rsp+0x68]
   14000adf1:	xor    rcx,rsp
   14000adf4:	call   0x1400187d0
   14000adf9:	add    rsp,0x70
   14000adfd:	pop    r14
   14000adff:	pop    rdi
   14000ae00:	pop    rsi
   14000ae01:	pop    rbp
   14000ae02:	pop    rbx
   14000ae03:	ret    
   14000ae04:	int3   
   14000ae05:	int3   
   14000ae06:	int3   
   14000ae07:	int3   
   14000ae08:	int3   
   14000ae09:	int3   
   14000ae0a:	int3   
   14000ae0b:	int3   
   14000ae0c:	int3   
   14000ae0d:	int3   
   14000ae0e:	int3   
   14000ae0f:	int3   
   14000ae10:	rex push rbp
   14000ae12:	push   rdi
   14000ae13:	push   r12
   14000ae15:	push   r13
   14000ae17:	push   r14
   14000ae19:	lea    rbp,[rsp-0x600]
   14000ae21:	sub    rsp,0x700
   14000ae28:	mov    rax,QWORD PTR [rip+0x36821]        # 0x140041650
   14000ae2f:	xor    rax,rsp
   14000ae32:	mov    QWORD PTR [rbp+0x5f0],rax
   14000ae39:	call   QWORD PTR [rip+0x24329]        # 0x14002f168
   14000ae3f:	xor    edi,edi
   14000ae41:	mov    QWORD PTR [rbp+0x178],0x7
   14000ae4c:	mov    QWORD PTR [rbp+0x170],rdi
   14000ae53:	mov    WORD PTR [rbp+0x160],di
   14000ae5a:	cmp    WORD PTR [rax],di
   14000ae5d:	jne    0x14000ae64
   14000ae5f:	mov    r8d,edi
   14000ae62:	jmp    0x14000ae7a
   14000ae64:	or     r8,0xffffffffffffffff
   14000ae68:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ae70:	inc    r8
   14000ae73:	cmp    WORD PTR [rax+r8*2],di
   14000ae78:	jne    0x14000ae70
   14000ae7a:	lea    rcx,[rbp+0x160]
   14000ae81:	mov    rdx,rax
   14000ae84:	call   0x140003d90
   14000ae89:	lea    rdx,[rip+0x2e608]        # 0x140039498
   14000ae90:	lea    rcx,[rbp+0x370]
   14000ae97:	mov    r8d,0x8
   14000ae9d:	mov    QWORD PTR [rbp+0x388],0x7
   14000aea8:	mov    QWORD PTR [rbp+0x380],rdi
   14000aeaf:	mov    WORD PTR [rbp+0x370],di
   14000aeb6:	call   0x140003d90
   14000aebb:	lea    rdx,[rip+0x2e5ee]        # 0x1400394b0
   14000aec2:	lea    rcx,[rbp+0x410]
   14000aec9:	mov    r8d,0x5
   14000aecf:	mov    QWORD PTR [rbp+0x428],0x7
   14000aeda:	mov    QWORD PTR [rbp+0x420],rdi
   14000aee1:	mov    WORD PTR [rbp+0x410],di
   14000aee8:	call   0x140003d90
   14000aeed:	lea    rdx,[rip+0x2e5cc]        # 0x1400394c0
   14000aef4:	lea    rcx,[rbp+0x3b0]
   14000aefb:	mov    r8d,0xa
   14000af01:	mov    QWORD PTR [rbp+0x3c8],0x7
   14000af0c:	mov    QWORD PTR [rbp+0x3c0],rdi
   14000af13:	mov    WORD PTR [rbp+0x3b0],di
   14000af1a:	call   0x140003d90
   14000af1f:	lea    rdx,[rip+0x2e5b2]        # 0x1400394d8
   14000af26:	lea    rcx,[rbp+0x350]
   14000af2d:	mov    r8d,0x9
   14000af33:	mov    QWORD PTR [rbp+0x368],0x7
   14000af3e:	mov    QWORD PTR [rbp+0x360],rdi
   14000af45:	mov    WORD PTR [rbp+0x350],di
   14000af4c:	call   0x140003d90
   14000af51:	lea    rdx,[rip+0x2e598]        # 0x1400394f0
   14000af58:	lea    rcx,[rbp+0x2b0]
   14000af5f:	mov    r8d,0x9
   14000af65:	mov    QWORD PTR [rbp+0x2c8],0x7
   14000af70:	mov    QWORD PTR [rbp+0x2c0],rdi
   14000af77:	mov    WORD PTR [rbp+0x2b0],di
   14000af7e:	call   0x140003d90
   14000af83:	lea    rdx,[rip+0x2e57e]        # 0x140039508
   14000af8a:	lea    rcx,[rbp+0x2d0]
   14000af91:	mov    r8d,0x5
   14000af97:	mov    QWORD PTR [rbp+0x2e8],0x7
   14000afa2:	mov    QWORD PTR [rbp+0x2e0],rdi
   14000afa9:	mov    WORD PTR [rbp+0x2d0],di
   14000afb0:	call   0x140003d90
   14000afb5:	lea    rdx,[rip+0x2e55c]        # 0x140039518
   14000afbc:	lea    rcx,[rbp+0x238]
   14000afc3:	mov    r8d,0x4
   14000afc9:	mov    QWORD PTR [rbp+0x250],0x7
   14000afd4:	mov    QWORD PTR [rbp+0x248],rdi
   14000afdb:	mov    WORD PTR [rbp+0x238],di
   14000afe2:	call   0x140003d90
   14000afe7:	lea    rdx,[rip+0x2e53a]        # 0x140039528
   14000afee:	lea    rcx,[rbp+0x218]
   14000aff5:	mov    r8d,0x7
   14000affb:	mov    QWORD PTR [rbp+0x230],0x7
   14000b006:	mov    QWORD PTR [rbp+0x228],rdi
   14000b00d:	mov    WORD PTR [rbp+0x218],di
   14000b014:	call   0x140003d90
   14000b019:	lea    rdx,[rip+0x2e518]        # 0x140039538
   14000b020:	lea    rcx,[rbp+0x3d0]
   14000b027:	mov    r8d,0x6
   14000b02d:	mov    QWORD PTR [rbp+0x3e8],0x7
   14000b038:	mov    QWORD PTR [rbp+0x3e0],rdi
   14000b03f:	mov    WORD PTR [rbp+0x3d0],di
   14000b046:	call   0x140003d90
   14000b04b:	lea    rdx,[rip+0x2e4f6]        # 0x140039548
   14000b052:	lea    rcx,[rbp+0x390]
   14000b059:	mov    r8d,0x8
   14000b05f:	mov    QWORD PTR [rbp+0x3a8],0x7
   14000b06a:	mov    QWORD PTR [rbp+0x3a0],rdi
   14000b071:	mov    WORD PTR [rbp+0x390],di
   14000b078:	call   0x140003d90
   14000b07d:	lea    rdx,[rip+0x2e4dc]        # 0x140039560
   14000b084:	lea    rcx,[rbp+0x2f0]
   14000b08b:	mov    r8d,0x5
   14000b091:	mov    QWORD PTR [rbp+0x308],0x7
   14000b09c:	mov    QWORD PTR [rbp+0x300],rdi
   14000b0a3:	mov    WORD PTR [rbp+0x2f0],di
   14000b0aa:	call   0x140003d90
   14000b0af:	mov    QWORD PTR [rbp+0x408],0x7
   14000b0ba:	lea    rdx,[rip+0x2e4af]        # 0x140039570
   14000b0c1:	lea    rcx,[rbp+0x3f0]
   14000b0c8:	mov    r8d,0x4
   14000b0ce:	mov    QWORD PTR [rbp+0x400],rdi
   14000b0d5:	mov    WORD PTR [rbp+0x3f0],di
   14000b0dc:	call   0x140003d90
   14000b0e1:	lea    r8,[rbp+0x1f8]
   14000b0e8:	lea    rdx,[rbp+0x410]
   14000b0ef:	lea    rcx,[rbp+0x160]
   14000b0f6:	mov    QWORD PTR [rbp+0x210],0x7
   14000b101:	mov    QWORD PTR [rbp+0x208],rdi
   14000b108:	mov    WORD PTR [rbp+0x1f8],di
   14000b10f:	call   0x14000ab40
   14000b114:	test   al,al
   14000b116:	jne    0x14000b131
   14000b118:	lea    rdx,[rip+0x2e461]        # 0x140039580
   14000b11f:	lea    rcx,[rbp+0x1f8]
   14000b126:	mov    r8d,0x16
   14000b12c:	call   0x140003d90
   14000b131:	lea    r8,[rbp+0x310]
   14000b138:	lea    rdx,[rbp+0x3b0]
   14000b13f:	lea    rcx,[rbp+0x160]
   14000b146:	mov    QWORD PTR [rbp+0x328],0x7
   14000b151:	mov    QWORD PTR [rbp+0x320],rdi
   14000b158:	mov    WORD PTR [rbp+0x310],di
   14000b15f:	call   0x14000ab40
   14000b164:	lea    r8,[rbp+0x310]
   14000b16b:	lea    rdx,[rbp+0x350]
   14000b172:	test   al,al
   14000b174:	lea    rcx,[rbp+0x160]
   14000b17b:	sete   r14b
   14000b17f:	call   0x14000ab40
   14000b184:	mov    r12d,0xc8
   14000b18a:	test   al,al
   14000b18c:	mov    r13d,0x64
   14000b192:	lea    rdx,[rbp+0x1f8]
   14000b199:	cmovne r12d,r13d
   14000b19d:	xor    eax,eax
   14000b19f:	cmp    QWORD PTR [rbp+0x210],0x8
   14000b1a7:	cmovae rdx,QWORD PTR [rbp+0x1f8]
   14000b1af:	lea    rcx,[rbp+0x110]
   14000b1b6:	mov    r8d,r12d
   14000b1b9:	mov    QWORD PTR [rbp+0x110],rax
   14000b1c0:	call   0x14000a580
   14000b1c5:	test   r14b,r14b
   14000b1c8:	je     0x14000b1d6
   14000b1ca:	mov    rcx,QWORD PTR [rbp+0x110]
   14000b1d1:	call   0x14000a4f0
   14000b1d6:	call   QWORD PTR [rip+0x23f8c]        # 0x14002f168
   14000b1dc:	lea    r8,[rip+0x2e3cd]        # 0x1400395b0
   14000b1e3:	lea    rcx,[rbp+0x110]
   14000b1ea:	mov    r9,rax
   14000b1ed:	mov    edx,0xc8
   14000b1f2:	call   0x14000a6d0
   14000b1f7:	lea    r8,[rbp+0x330]
   14000b1fe:	lea    rdx,[rbp+0x370]
   14000b205:	lea    rcx,[rbp+0x160]
   14000b20c:	mov    QWORD PTR [rbp+0x348],0x7
   14000b217:	mov    QWORD PTR [rbp+0x340],rdi
   14000b21e:	mov    WORD PTR [rbp+0x330],di
   14000b225:	call   0x14000ab40
   14000b22a:	test   al,al
   14000b22c:	jne    0x14000b24b
   14000b22e:	lea    r8,[rip+0x2e39b]        # 0x1400395d0
   14000b235:	lea    rcx,[rbp+0x110]
   14000b23c:	mov    edx,0xc8
   14000b241:	call   0x14000a6d0
   14000b246:	jmp    0x14000ba2d
   14000b24b:	lea    rcx,[rbp+0x430]
   14000b252:	xor    edx,edx
   14000b254:	mov    r8d,0xb8
   14000b25a:	mov    QWORD PTR [rsp+0x730],rbx
   14000b262:	call   0x14001b980
   14000b267:	lea    rcx,[rbp+0x430]
   14000b26e:	call   0x140009280
   14000b273:	lea    rdx,[rbp+0x330]
   14000b27a:	call   0x14000e680
   14000b27f:	mov    rcx,QWORD PTR [rip+0x398b2]        # 0x140044b38
   14000b286:	mov    rbx,rax
   14000b289:	cmp    rax,rcx
   14000b28c:	je     0x14000b2b0
   14000b28e:	lea    rdx,[rax+0x20]
   14000b292:	lea    rcx,[rbp+0x330]
   14000b299:	call   0x1400037f0
   14000b29e:	mov    rcx,QWORD PTR [rip+0x39893]        # 0x140044b38
   14000b2a5:	mov    QWORD PTR [rbp+0x98],rbx
   14000b2ac:	test   eax,eax
   14000b2ae:	jns    0x14000b2b7
   14000b2b0:	mov    QWORD PTR [rbp+0x98],rcx
   14000b2b7:	lea    rax,[rbp+0x98]
   14000b2be:	mov    QWORD PTR [rsp+0x738],rsi
   14000b2c6:	mov    esi,edi
   14000b2c8:	mov    rax,QWORD PTR [rax]
   14000b2cb:	cmp    rcx,rax
   14000b2ce:	je     0x14000b2d3
   14000b2d0:	mov    esi,DWORD PTR [rax+0x40]
   14000b2d3:	lea    r8,[rbp+0x310]
   14000b2da:	lea    rdx,[rbp+0x2b0]
   14000b2e1:	lea    rcx,[rbp+0x160]
   14000b2e8:	mov    QWORD PTR [rsp+0x740],r15
   14000b2f0:	call   0x14000ab40
   14000b2f5:	test   al,al
   14000b2f7:	je     0x14000b66d
   14000b2fd:	mov    QWORD PTR [rbp+0x98],rdi
   14000b304:	call   QWORD PTR [rip+0x23e66]        # 0x14002f170
   14000b30a:	mov    r9,QWORD PTR [rbp+0x438]
   14000b311:	test   r9,r9
   14000b314:	je     0x14000b647
   14000b31a:	lea    r8,[rbp+0x98]
   14000b321:	mov    edx,0x10000000
   14000b326:	mov    rcx,rax
   14000b329:	call   r9
   14000b32c:	test   eax,eax
   14000b32e:	je     0x14000b647
   14000b334:	mov    rax,QWORD PTR [rbp+0x430]
   14000b33b:	mov    DWORD PTR [rbp+0x138],edi
   14000b341:	test   rax,rax
   14000b344:	je     0x14000ba09
   14000b34a:	lea    rcx,[rbp+0x138]
   14000b351:	xor    r9d,r9d
   14000b354:	xor    r8d,r8d
   14000b357:	mov    QWORD PTR [rsp+0x20],rcx
   14000b35c:	mov    rcx,QWORD PTR [rbp+0x98]
   14000b363:	lea    edx,[r9+0x14]
   14000b367:	call   rax
   14000b369:	mov    DWORD PTR [rsp+0x30],eax
   14000b36d:	call   QWORD PTR [rip+0x23e2d]        # 0x14002f1a0
   14000b373:	cmp    eax,0x7a
   14000b376:	je     0x14000b38f
   14000b378:	cmp    eax,0x18
   14000b37b:	je     0x14000b38f
   14000b37d:	call   QWORD PTR [rip+0x23e1d]        # 0x14002f1a0
   14000b383:	lea    r8,[rip+0x2e286]        # 0x140039610
   14000b38a:	jmp    0x14000b654
   14000b38f:	mov    ebx,DWORD PTR [rbp+0x138]
   14000b395:	mov    ecx,ebx
   14000b397:	call   0x1400140cc
   14000b39c:	mov    r15,rax
   14000b39f:	cmp    QWORD PTR [rbp+0x430],rdi
   14000b3a6:	je     0x14000b638
   14000b3ac:	mov    rdx,QWORD PTR [rbp+0x98]
   14000b3b3:	lea    rax,[rsp+0x30]
   14000b3b8:	lea    rcx,[rbp+0x430]
   14000b3bf:	mov    QWORD PTR [rsp+0x28],rax
   14000b3c4:	lea    rax,[rbp+0x138]
   14000b3cb:	mov    r9d,ebx
   14000b3ce:	mov    r8,r15
   14000b3d1:	mov    QWORD PTR [rsp+0x20],rax
   14000b3d6:	call   0x140009a20
   14000b3db:	test   al,al
   14000b3dd:	je     0x14000b638
   14000b3e3:	cmp    DWORD PTR [rsp+0x30],edi
   14000b3e7:	je     0x14000b638
   14000b3ed:	mov    ebx,DWORD PTR [r15]
   14000b3f0:	mov    rcx,r15
   14000b3f3:	call   0x140019610
   14000b3f8:	test   ebx,ebx
   14000b3fa:	jne    0x14000b66d
   14000b400:	lea    rdx,[rbp+0x160]
   14000b407:	lea    rcx,[rbp+0x140]
   14000b40e:	call   0x140003900
   14000b413:	lea    rcx,[rbp+0x140]
   14000b41a:	call   0x14000cbc0
   14000b41f:	lea    rdx,[rbp+0x1d0]
   14000b426:	lea    rcx,[rbp+0x140]
   14000b42d:	mov    r9,rax
   14000b430:	xor    r8d,r8d
   14000b433:	mov    rbx,rax
   14000b436:	call   0x140007680
   14000b43b:	lea    rcx,[rbp+0x140]
   14000b442:	mov    r8,rbx
   14000b445:	xor    edx,edx
   14000b447:	call   0x140003980
   14000b44c:	lea    rcx,[rbp+0x2b0]
   14000b453:	call   0x140007420
   14000b458:	lea    rdx,[rbp+0x2b0]
   14000b45f:	lea    rcx,[rbp+0x140]
   14000b466:	xor    r8d,r8d
   14000b469:	mov    rbx,rax
   14000b46c:	call   0x140007440
   14000b471:	lea    rcx,[rbp+0x140]
   14000b478:	mov    r8,rbx
   14000b47b:	mov    rdx,rax
   14000b47e:	call   0x140003980
   14000b483:	lea    rcx,[rbp+0x1d0]
   14000b48a:	mov    edx,0x22
   14000b48f:	xor    r8d,r8d
   14000b492:	call   0x140007580
   14000b497:	cmp    rax,0xffffffffffffffff
   14000b49b:	je     0x14000b4cf
   14000b49d:	nop    DWORD PTR [rax]
   14000b4a0:	lea    rcx,[rbp+0x1d0]
   14000b4a7:	mov    r8d,0x1
   14000b4ad:	mov    rdx,rax
   14000b4b0:	call   0x140003980
   14000b4b5:	lea    rcx,[rbp+0x1d0]
   14000b4bc:	mov    edx,0x22
   14000b4c1:	xor    r8d,r8d
   14000b4c4:	call   0x140007580
   14000b4c9:	cmp    rax,0xffffffffffffffff
   14000b4cd:	jne    0x14000b4a0
   14000b4cf:	lea    rcx,[rbp+0x1d0]
   14000b4d6:	call   0x14000cbe0
   14000b4db:	cmp    rax,0xffffffffffffffff
   14000b4df:	je     0x14000b4f1
   14000b4e1:	lea    rdx,[rax+0x1]
   14000b4e5:	lea    rcx,[rbp+0x1d0]
   14000b4ec:	call   0x140003930
   14000b4f1:	xor    edx,edx
   14000b4f3:	lea    rcx,[rbp+0xa0]
   14000b4fa:	lea    r8d,[rdx+0x70]
   14000b4fe:	call   0x14001b980
   14000b503:	lea    rax,[rip+0x2e156]        # 0x140039660
   14000b50a:	lea    rcx,[rbp+0x1d0]
   14000b511:	mov    QWORD PTR [rbp+0xb0],rax
   14000b518:	mov    DWORD PTR [rbp+0xa0],0x70
   14000b522:	call   0x140003a30
   14000b527:	lea    rcx,[rbp+0x140]
   14000b52e:	mov    QWORD PTR [rbp+0xb8],rax
   14000b535:	call   0x140003a30
   14000b53a:	lea    rcx,[rbp+0xa0]
   14000b541:	mov    DWORD PTR [rbp+0xd0],0x1
   14000b54b:	mov    QWORD PTR [rbp+0xc0],rax
   14000b552:	call   QWORD PTR [rip+0x37e20]        # 0x140043378
   14000b558:	test   eax,eax
   14000b55a:	jne    0x14000b78d
   14000b560:	call   QWORD PTR [rip+0x23c3a]        # 0x14002f1a0
   14000b566:	lea    r8,[rip+0x2e103]        # 0x140039670
   14000b56d:	lea    rcx,[rbp+0x110]
   14000b574:	mov    r9d,eax
   14000b577:	mov    edx,0xc8
   14000b57c:	call   0x14000a6d0
   14000b581:	lea    eax,[rsi-0x2]
   14000b584:	cmp    eax,0x3
   14000b587:	ja     0x14000b78d
   14000b58d:	lea    rcx,[rbp+0x180]
   14000b594:	call   0x140008a10
   14000b599:	lea    r8,[rbp+0x180]
   14000b5a0:	lea    rdx,[rbp+0x218]
   14000b5a7:	lea    rcx,[rbp+0x160]
   14000b5ae:	call   0x14000ab40
   14000b5b3:	test   al,al
   14000b5b5:	je     0x14000b62c
   14000b5b7:	lea    rcx,[rbp+0x260]
   14000b5be:	call   0x14000c940
   14000b5c3:	lea    rcx,[rbp+0x1f8]
   14000b5ca:	call   0x140003a30
   14000b5cf:	lea    rcx,[rbp+0x118]
   14000b5d6:	mov    rdx,rax
   14000b5d9:	call   0x140003ee0
   14000b5de:	lea    rax,[rbp+0x430]
   14000b5e5:	lea    rdx,[rbp+0x118]
   14000b5ec:	lea    rcx,[rbp+0x260]
   14000b5f3:	movzx  r9d,r14b
   14000b5f7:	mov    QWORD PTR [rsp+0x20],rax
   14000b5fc:	call   0x140004070
   14000b601:	lea    rcx,[rbp+0x118]
   14000b608:	call   0x1400019c0
   14000b60d:	lea    rdx,[rbp+0x180]
   14000b614:	lea    rcx,[rbp+0x260]
   14000b61b:	call   0x140005680
   14000b620:	lea    rcx,[rbp+0x260]
   14000b627:	call   0x1400043a0
   14000b62c:	lea    rcx,[rbp+0x180]
   14000b633:	jmp    0x14000b788
   14000b638:	call   QWORD PTR [rip+0x23b62]        # 0x14002f1a0
   14000b63e:	lea    r8,[rip+0x2dff3]        # 0x140039638
   14000b645:	jmp    0x14000b654
   14000b647:	call   QWORD PTR [rip+0x23b53]        # 0x14002f1a0
   14000b64d:	lea    r8,[rip+0x2df9c]        # 0x1400395f0
   14000b654:	lea    rcx,[rbp+0x110]
   14000b65b:	mov    r9d,eax
   14000b65e:	mov    edx,0xc8
   14000b663:	call   0x14000a6d0
   14000b668:	jmp    0x14000ba09
   14000b66d:	lea    eax,[rsi-0x1]
   14000b670:	cmp    eax,0xc
   14000b673:	ja     0x14000b9f3
   14000b679:	lea    rdx,[rip+0xffffffffffff4980]        # 0x140000000
   14000b680:	cdqe   
   14000b682:	mov    ecx,DWORD PTR [rdx+rax*4+0xc904]
   14000b689:	add    rcx,rdx
   14000b68c:	jmp    rcx
   14000b68e:	lea    rcx,[rbp+0x180]
   14000b695:	call   0x14000c970
   14000b69a:	lea    rcx,[rbp+0x1f8]
   14000b6a1:	call   0x140003a30
   14000b6a6:	lea    rcx,[rbp+0x180]
   14000b6ad:	movzx  r9d,r14b
   14000b6b1:	mov    rdx,rax
   14000b6b4:	mov    r8d,r12d
   14000b6b7:	call   0x140009c80
   14000b6bc:	lea    rcx,[rbp+0x180]
   14000b6c3:	call   0x140009df0
   14000b6c8:	lea    rcx,[rbp+0x180]
   14000b6cf:	mov    edi,eax
   14000b6d1:	call   0x140009d30
   14000b6d6:	jmp    0x14000ba09
   14000b6db:	lea    rcx,[rbp+0x140]
   14000b6e2:	call   0x140008a10
   14000b6e7:	lea    rcx,[rbp+0x1d0]
   14000b6ee:	call   0x140008a10
   14000b6f3:	lea    rcx,[rbp+0x118]
   14000b6fa:	call   0x140008a10
   14000b6ff:	lea    r8,[rbp+0x1d0]
   14000b706:	lea    rdx,[rbp+0x238]
   14000b70d:	lea    rcx,[rbp+0x160]
   14000b714:	call   0x14000ab40
   14000b719:	test   al,al
   14000b71b:	jne    0x14000b726
   14000b71d:	lea    r8,[rip+0x2df6c]        # 0x140039690
   14000b724:	jmp    0x14000b770
   14000b726:	lea    r8,[rbp+0x140]
   14000b72d:	lea    rdx,[rbp+0x2d0]
   14000b734:	lea    rcx,[rbp+0x160]
   14000b73b:	call   0x14000ab40
   14000b740:	lea    r8,[rbp+0x118]
   14000b747:	lea    rdx,[rbp+0x218]
   14000b74e:	lea    rcx,[rbp+0x160]
   14000b755:	movzx  ebx,al
   14000b758:	call   0x14000ab40
   14000b75d:	test   bl,bl
   14000b75f:	jne    0x14000b7aa
   14000b761:	lea    eax,[rsi-0x2]
   14000b764:	cmp    eax,0x1
   14000b767:	ja     0x14000b7aa
   14000b769:	lea    r8,[rip+0x2df30]        # 0x1400396a0
   14000b770:	lea    rcx,[rbp+0x110]
   14000b777:	mov    edx,0xc8
   14000b77c:	call   0x14000a6d0
   14000b781:	lea    rcx,[rbp+0x118]
   14000b788:	call   0x1400019c0
   14000b78d:	lea    rcx,[rbp+0x1d0]
   14000b794:	call   0x1400019c0
   14000b799:	lea    rcx,[rbp+0x140]
   14000b7a0:	call   0x1400019c0
   14000b7a5:	jmp    0x14000ba09
   14000b7aa:	lea    rcx,[rbp+0x180]
   14000b7b1:	call   0x14000c940
   14000b7b6:	lea    rcx,[rbp+0x1f8]
   14000b7bd:	call   0x140003a30
   14000b7c2:	lea    rcx,[rbp+0x18]
   14000b7c6:	mov    rdx,rax
   14000b7c9:	call   0x140003ee0
   14000b7ce:	lea    rax,[rbp+0x430]
   14000b7d5:	lea    rdx,[rbp+0x18]
   14000b7d9:	lea    rcx,[rbp+0x180]
   14000b7e0:	movzx  r9d,r14b
   14000b7e4:	mov    QWORD PTR [rsp+0x20],rax
   14000b7e9:	call   0x140004070
   14000b7ee:	lea    rcx,[rbp+0x18]
   14000b7f2:	call   0x1400019c0
   14000b7f7:	sub    esi,0x2
   14000b7fa:	je     0x14000b920
   14000b800:	dec    esi
   14000b802:	je     0x14000b83a
   14000b804:	dec    esi
   14000b806:	jne    0x14000b9a0
   14000b80c:	lea    rdx,[rbp+0x1d0]
   14000b813:	lea    rcx,[rbp+0x180]
   14000b81a:	call   0x140004900
   14000b81f:	cmp    eax,0x1
   14000b822:	je     0x14000b9a0
   14000b828:	call   QWORD PTR [rip+0x23972]        # 0x14002f1a0
   14000b82e:	lea    r8,[rip+0x2df43]        # 0x140039778
   14000b835:	jmp    0x14000b98c
   14000b83a:	lea    r8,[rbp+0x1d0]
   14000b841:	lea    rdx,[rbp+0x140]
   14000b848:	lea    rcx,[rbp+0x180]
   14000b84f:	call   0x1400047f0
   14000b854:	mov    ebx,eax
   14000b856:	cmp    eax,0x1
   14000b859:	je     0x14000b87c
   14000b85b:	call   QWORD PTR [rip+0x2393f]        # 0x14002f1a0
   14000b861:	lea    r8,[rip+0x2de78]        # 0x1400396e0
   14000b868:	lea    rcx,[rbp+0x110]
   14000b86f:	mov    r9d,eax
   14000b872:	mov    edx,0xc8
   14000b877:	call   0x14000a6d0
   14000b87c:	cmp    ebx,0x3
   14000b87f:	jne    0x14000b9a0
   14000b885:	lea    r8,[rip+0x2de6c]        # 0x1400396f8
   14000b88c:	lea    rcx,[rbp+0x110]
   14000b893:	mov    edx,0xc8
   14000b898:	call   0x14000a6d0
   14000b89d:	lea    rcx,[rbp+0x180]
   14000b8a4:	call   0x140005550
   14000b8a9:	cmp    eax,0x1
   14000b8ac:	jne    0x14000b911
   14000b8ae:	lea    r8,[rip+0x2de6b]        # 0x140039720
   14000b8b5:	lea    rcx,[rbp+0x110]
   14000b8bc:	mov    edx,0xc8
   14000b8c1:	call   0x14000a6d0
   14000b8c6:	lea    r8,[rbp+0x1d0]
   14000b8cd:	lea    rdx,[rbp+0x140]
   14000b8d4:	lea    rcx,[rbp+0x180]
   14000b8db:	call   0x1400047f0
   14000b8e0:	cmp    eax,0x1
   14000b8e3:	jne    0x14000b902
   14000b8e5:	lea    r8,[rip+0x2de5c]        # 0x140039748
   14000b8ec:	lea    rcx,[rbp+0x110]
   14000b8f3:	mov    edx,0xc8
   14000b8f8:	call   0x14000a6d0
   14000b8fd:	jmp    0x14000b9a0
   14000b902:	call   QWORD PTR [rip+0x23898]        # 0x14002f1a0
   14000b908:	lea    r8,[rip+0x2ddd1]        # 0x1400396e0
   14000b90f:	jmp    0x14000b98c
   14000b911:	call   QWORD PTR [rip+0x23889]        # 0x14002f1a0
   14000b917:	lea    r8,[rip+0x2de42]        # 0x140039760
   14000b91e:	jmp    0x14000b98c
   14000b920:	lea    r8,[rbp+0x1d0]
   14000b927:	lea    rdx,[rbp+0x140]
   14000b92e:	lea    rcx,[rbp+0x180]
   14000b935:	call   0x140004430
   14000b93a:	mov    ebx,eax
   14000b93c:	cmp    eax,0x1
   14000b93f:	je     0x14000b9a0
   14000b941:	call   QWORD PTR [rip+0x23859]        # 0x14002f1a0
   14000b947:	lea    r8,[rip+0x2dd62]        # 0x1400396b0
   14000b94e:	lea    rcx,[rbp+0x110]
   14000b955:	mov    r9d,eax
   14000b958:	mov    edx,0xc8
   14000b95d:	call   0x14000a6d0
   14000b962:	cmp    ebx,0x6
   14000b965:	jne    0x14000b9a0
   14000b967:	lea    rdx,[rbp+0x1d0]
   14000b96e:	lea    rcx,[rbp+0x180]
   14000b975:	call   0x140005950
   14000b97a:	cmp    eax,0x1
   14000b97d:	je     0x14000b9a0
   14000b97f:	call   QWORD PTR [rip+0x2381b]        # 0x14002f1a0
   14000b985:	lea    r8,[rip+0x2dd3c]        # 0x1400396c8
   14000b98c:	lea    rcx,[rbp+0x110]
   14000b993:	mov    r9d,eax
   14000b996:	mov    edx,0xc8
   14000b99b:	call   0x14000a6d0
   14000b9a0:	lea    rcx,[rbp+0x118]
   14000b9a7:	call   0x140007430
   14000b9ac:	test   al,al
   14000b9ae:	jne    0x14000b9c3
   14000b9b0:	lea    rdx,[rbp+0x118]
   14000b9b7:	lea    rcx,[rbp+0x180]
   14000b9be:	call   0x140005680
   14000b9c3:	lea    rcx,[rbp+0x180]
   14000b9ca:	call   0x1400043a0
   14000b9cf:	lea    rcx,[rbp+0x118]
   14000b9d6:	call   0x1400019c0
   14000b9db:	lea    rcx,[rbp+0x1d0]
   14000b9e2:	call   0x1400019c0
   14000b9e7:	lea    rcx,[rbp+0x140]
   14000b9ee:	call   0x1400019c0
   14000b9f3:	lea    r8,[rip+0x2df9e]        # 0x140039998
   14000b9fa:	lea    rcx,[rbp+0x110]
   14000ba01:	mov    edx,r13d
   14000ba04:	call   0x14000a6d0
   14000ba09:	lea    rcx,[rbp+0x430]
   14000ba10:	call   0x1400099b0
   14000ba15:	mov    r15,QWORD PTR [rsp+0x740]
   14000ba1d:	mov    rsi,QWORD PTR [rsp+0x738]
   14000ba25:	mov    rbx,QWORD PTR [rsp+0x730]
   14000ba2d:	lea    rcx,[rbp+0x330]
   14000ba34:	call   0x1400019c0
   14000ba39:	lea    rcx,[rbp+0x110]
   14000ba40:	call   0x14000a660
   14000ba45:	lea    rcx,[rbp+0x310]
   14000ba4c:	call   0x1400019c0
   14000ba51:	lea    rcx,[rbp+0x1f8]
   14000ba58:	call   0x1400019c0
   14000ba5d:	lea    rcx,[rbp+0x3f0]
   14000ba64:	call   0x1400019c0
   14000ba69:	lea    rcx,[rbp+0x2f0]
   14000ba70:	call   0x1400019c0
   14000ba75:	lea    rcx,[rbp+0x390]
   14000ba7c:	call   0x1400019c0
   14000ba81:	lea    rcx,[rbp+0x3d0]
   14000ba88:	call   0x1400019c0
   14000ba8d:	lea    rcx,[rbp+0x218]
   14000ba94:	call   0x1400019c0
   14000ba99:	lea    rcx,[rbp+0x238]
   14000baa0:	call   0x1400019c0
   14000baa5:	lea    rcx,[rbp+0x2d0]
   14000baac:	call   0x1400019c0
   14000bab1:	lea    rcx,[rbp+0x2b0]
   14000bab8:	call   0x1400019c0
   14000babd:	lea    rcx,[rbp+0x350]
   14000bac4:	call   0x1400019c0
   14000bac9:	lea    rcx,[rbp+0x3b0]
   14000bad0:	call   0x1400019c0
   14000bad5:	lea    rcx,[rbp+0x410]
   14000badc:	call   0x1400019c0
   14000bae1:	lea    rcx,[rbp+0x370]
   14000bae8:	call   0x1400019c0
   14000baed:	lea    rcx,[rbp+0x160]
   14000baf4:	call   0x1400019c0
   14000baf9:	mov    eax,edi
   14000bafb:	mov    rcx,QWORD PTR [rbp+0x5f0]
   14000bb02:	xor    rcx,rsp
   14000bb05:	call   0x1400187d0
   14000bb0a:	add    rsp,0x700
   14000bb11:	pop    r14
   14000bb13:	pop    r13
   14000bb15:	pop    r12
   14000bb17:	pop    rdi
   14000bb18:	pop    rbp
   14000bb19:	ret    
   14000bb1a:	lea    rcx,[rbp+0x118]
   14000bb21:	call   0x140008a10
   14000bb26:	lea    r8,[rbp+0x118]
   14000bb2d:	lea    rdx,[rbp+0x218]
   14000bb34:	lea    rcx,[rbp+0x160]
   14000bb3b:	call   0x14000ab40
   14000bb40:	lea    rcx,[rbp+0x180]
   14000bb47:	call   0x14000c940
   14000bb4c:	lea    rcx,[rbp+0x1f8]
   14000bb53:	call   0x140003a30
   14000bb58:	lea    rcx,[rbp-0x28]
   14000bb5c:	mov    rdx,rax
   14000bb5f:	call   0x140003ee0
   14000bb64:	lea    rax,[rbp+0x430]
   14000bb6b:	lea    rdx,[rbp-0x28]
   14000bb6f:	lea    rcx,[rbp+0x180]
   14000bb76:	movzx  r9d,r14b
   14000bb7a:	mov    QWORD PTR [rsp+0x20],rax
   14000bb7f:	call   0x140004070
   14000bb84:	lea    rcx,[rbp-0x28]
   14000bb88:	call   0x1400019c0
   14000bb8d:	lea    rcx,[rbp+0x180]
   14000bb94:	call   0x140005550
   14000bb99:	cmp    eax,0x1
   14000bb9c:	je     0x14000bbbf
   14000bb9e:	call   QWORD PTR [rip+0x235fc]        # 0x14002f1a0
   14000bba4:	lea    r8,[rip+0x2dbb5]        # 0x140039760
   14000bbab:	lea    rcx,[rbp+0x110]
   14000bbb2:	mov    r9d,eax
   14000bbb5:	mov    edx,0xc8
   14000bbba:	call   0x14000a6d0
   14000bbbf:	lea    rcx,[rbp+0x118]
   14000bbc6:	call   0x140007430
   14000bbcb:	test   al,al
   14000bbcd:	jne    0x14000bbe2
   14000bbcf:	lea    rdx,[rbp+0x118]
   14000bbd6:	lea    rcx,[rbp+0x180]
   14000bbdd:	call   0x140005680
   14000bbe2:	lea    rcx,[rbp+0x180]
   14000bbe9:	call   0x1400043a0
   14000bbee:	lea    rcx,[rbp+0x118]
   14000bbf5:	jmp    0x14000b9ee
   14000bbfa:	lea    rcx,[rbp+0x140]
   14000bc01:	call   0x140008a10
   14000bc06:	lea    rcx,[rbp+0x118]
   14000bc0d:	call   0x140008a10
   14000bc12:	lea    r8,[rbp+0x140]
   14000bc19:	lea    rdx,[rbp+0x238]
   14000bc20:	lea    rcx,[rbp+0x160]
   14000bc27:	call   0x14000ab40
   14000bc2c:	test   al,al
   14000bc2e:	jne    0x14000bc65
   14000bc30:	lea    r8,[rip+0x2da59]        # 0x140039690
   14000bc37:	lea    rcx,[rbp+0x110]
   14000bc3e:	mov    edx,0xc8
   14000bc43:	call   0x14000a6d0
   14000bc48:	lea    rcx,[rbp+0x118]
   14000bc4f:	call   0x1400019c0
   14000bc54:	lea    rcx,[rbp+0x140]
   14000bc5b:	call   0x1400019c0
   14000bc60:	jmp    0x14000ba09
   14000bc65:	lea    r8,[rbp+0x118]
   14000bc6c:	lea    rdx,[rbp+0x218]
   14000bc73:	lea    rcx,[rbp+0x160]
   14000bc7a:	call   0x14000ab40
   14000bc7f:	lea    rcx,[rbp+0x180]
   14000bc86:	call   0x14000c940
   14000bc8b:	lea    rcx,[rbp+0x1f8]
   14000bc92:	call   0x140003a30
   14000bc97:	lea    rcx,[rsp+0x38]
   14000bc9c:	mov    rdx,rax
   14000bc9f:	call   0x140003ee0
   14000bca4:	lea    rax,[rbp+0x430]
   14000bcab:	lea    rdx,[rsp+0x38]
   14000bcb0:	lea    rcx,[rbp+0x180]
   14000bcb7:	movzx  r9d,r14b
   14000bcbb:	mov    QWORD PTR [rsp+0x20],rax
   14000bcc0:	call   0x140004070
   14000bcc5:	lea    rcx,[rsp+0x38]
   14000bcca:	call   0x1400019c0
   14000bccf:	lea    rdx,[rbp+0x140]
   14000bcd6:	lea    rcx,[rbp+0x180]
   14000bcdd:	call   0x140005950
   14000bce2:	cmp    eax,0x1
   14000bce5:	je     0x14000bd08
   14000bce7:	call   QWORD PTR [rip+0x234b3]        # 0x14002f1a0
   14000bced:	lea    r8,[rip+0x2d9d4]        # 0x1400396c8
   14000bcf4:	lea    rcx,[rbp+0x110]
   14000bcfb:	mov    r9d,eax
   14000bcfe:	mov    edx,0xc8
   14000bd03:	call   0x14000a6d0
   14000bd08:	lea    rcx,[rbp+0x118]
   14000bd0f:	call   0x140007430
   14000bd14:	test   al,al
   14000bd16:	jne    0x14000bd2b
   14000bd18:	lea    rdx,[rbp+0x118]
   14000bd1f:	lea    rcx,[rbp+0x180]
   14000bd26:	call   0x140005680
   14000bd2b:	lea    rcx,[rbp+0x180]
   14000bd32:	call   0x1400043a0
   14000bd37:	lea    rcx,[rbp+0x118]
   14000bd3e:	jmp    0x14000b9e2
   14000bd43:	lea    rcx,[rbp+0x118]
   14000bd4a:	call   0x140008a10
   14000bd4f:	lea    rcx,[rbp+0x1d0]
   14000bd56:	call   0x140008a10
   14000bd5b:	lea    rcx,[rbp+0x140]
   14000bd62:	call   0x140008a10
   14000bd67:	lea    r8,[rbp+0x1d0]
   14000bd6e:	lea    rdx,[rbp+0x238]
   14000bd75:	lea    rcx,[rbp+0x160]
   14000bd7c:	mov    WORD PTR [rbp+0x138],di
   14000bd83:	call   0x14000ab40
   14000bd88:	test   al,al
   14000bd8a:	jne    0x14000bd95
   14000bd8c:	lea    r8,[rip+0x2d8fd]        # 0x140039690
   14000bd93:	jmp    0x14000bdba
   14000bd95:	lea    r8,[rbp+0x140]
   14000bd9c:	lea    rdx,[rbp+0x3d0]
   14000bda3:	lea    rcx,[rbp+0x160]
   14000bdaa:	call   0x14000ab40
   14000bdaf:	test   al,al
   14000bdb1:	jne    0x14000bdf4
   14000bdb3:	lea    r8,[rip+0x2d9d6]        # 0x140039790
   14000bdba:	lea    rcx,[rbp+0x110]
   14000bdc1:	mov    edx,0xc8
   14000bdc6:	call   0x14000a6d0
   14000bdcb:	lea    rcx,[rbp+0x140]
   14000bdd2:	call   0x1400019c0
   14000bdd7:	lea    rcx,[rbp+0x1d0]
   14000bdde:	call   0x1400019c0
   14000bde3:	lea    rcx,[rbp+0x118]
   14000bdea:	call   0x1400019c0
   14000bdef:	jmp    0x14000ba09
   14000bdf4:	lea    rcx,[rbp+0x4f0]
   14000bdfb:	call   0x14000c9c0
   14000be00:	lea    rcx,[rbp+0x4f0]
   14000be07:	call   0x14000cc20
   14000be0c:	lea    rdx,[rbp+0x140]
   14000be13:	lea    rcx,[rbp+0x500]
   14000be1a:	call   0x140010890
   14000be1f:	lea    rdx,[rbp+0x138]
   14000be26:	lea    rcx,[rbp+0x4f0]
   14000be2d:	call   0x14000c9f0
   14000be32:	lea    rcx,[rbp+0x4f0]
   14000be39:	call   0x14000c990
   14000be3e:	lea    r8,[rbp+0x118]
   14000be45:	lea    rdx,[rbp+0x218]
   14000be4c:	lea    rcx,[rbp+0x160]
   14000be53:	call   0x14000ab40
   14000be58:	lea    rcx,[rbp+0x180]
   14000be5f:	call   0x14000c940
   14000be64:	lea    rcx,[rbp+0x1f8]
   14000be6b:	call   0x140003a30
   14000be70:	lea    rcx,[rsp+0x58]
   14000be75:	mov    rdx,rax
   14000be78:	call   0x140003ee0
   14000be7d:	lea    rax,[rbp+0x430]
   14000be84:	lea    rdx,[rsp+0x58]
   14000be89:	lea    rcx,[rbp+0x180]
   14000be90:	movzx  r9d,r14b
   14000be94:	mov    QWORD PTR [rsp+0x20],rax
   14000be99:	call   0x140004070
   14000be9e:	lea    rcx,[rsp+0x58]
   14000bea3:	call   0x1400019c0
   14000bea8:	movzx  r8d,WORD PTR [rbp+0x138]
   14000beb0:	lea    rdx,[rbp+0x1d0]
   14000beb7:	lea    rcx,[rbp+0x180]
   14000bebe:	call   0x140005b40
   14000bec3:	cmp    eax,0x1
   14000bec6:	je     0x14000beeb
   14000bec8:	call   QWORD PTR [rip+0x232d2]        # 0x14002f1a0
   14000bece:	lea    r8,[rip+0x2d8db]        # 0x1400397b0
   14000bed5:	lea    rcx,[rbp+0x110]
   14000bedc:	mov    r9d,eax
   14000bedf:	mov    edx,0xc8
   14000bee4:	call   0x14000a6d0
   14000bee9:	jmp    0x14000bf03
   14000beeb:	lea    r8,[rip+0x2d8de]        # 0x1400397d0
   14000bef2:	lea    rcx,[rbp+0x110]
   14000bef9:	mov    edx,0xc8
   14000befe:	call   0x14000a6d0
   14000bf03:	lea    rcx,[rbp+0x118]
   14000bf0a:	call   0x140007430
   14000bf0f:	test   al,al
   14000bf11:	jne    0x14000bf26
   14000bf13:	lea    rdx,[rbp+0x118]
   14000bf1a:	lea    rcx,[rbp+0x180]
   14000bf21:	call   0x140005680
   14000bf26:	lea    rcx,[rbp+0x180]
   14000bf2d:	call   0x1400043a0
   14000bf32:	lea    rcx,[rbp+0x140]
   14000bf39:	call   0x1400019c0
   14000bf3e:	lea    rcx,[rbp+0x1d0]
   14000bf45:	call   0x1400019c0
   14000bf4a:	lea    rcx,[rbp+0x118]
   14000bf51:	jmp    0x14000b9ee
   14000bf56:	lea    rcx,[rbp+0x118]
   14000bf5d:	call   0x140008a10
   14000bf62:	lea    rcx,[rbp+0x140]
   14000bf69:	call   0x140008a10
   14000bf6e:	lea    r8,[rbp+0x140]
   14000bf75:	lea    rdx,[rbp+0x238]
   14000bf7c:	lea    rcx,[rbp+0x160]
   14000bf83:	call   0x14000ab40
   14000bf88:	test   al,al
   14000bf8a:	jne    0x14000bfc1
   14000bf8c:	lea    r8,[rip+0x2d6fd]        # 0x140039690
   14000bf93:	lea    rcx,[rbp+0x110]
   14000bf9a:	mov    edx,0xc8
   14000bf9f:	call   0x14000a6d0
   14000bfa4:	lea    rcx,[rbp+0x140]
   14000bfab:	call   0x1400019c0
   14000bfb0:	lea    rcx,[rbp+0x118]
   14000bfb7:	call   0x1400019c0
   14000bfbc:	jmp    0x14000ba09
   14000bfc1:	lea    r8,[rbp+0x118]
   14000bfc8:	lea    rdx,[rbp+0x218]
   14000bfcf:	lea    rcx,[rbp+0x160]
   14000bfd6:	call   0x14000ab40
   14000bfdb:	lea    rcx,[rbp+0x180]
   14000bfe2:	call   0x14000c940
   14000bfe7:	lea    rcx,[rbp+0x1f8]
   14000bfee:	call   0x140003a30
   14000bff3:	lea    rcx,[rbp-0x48]
   14000bff7:	mov    rdx,rax
   14000bffa:	call   0x140003ee0
   14000bfff:	lea    rax,[rbp+0x430]
   14000c006:	lea    rdx,[rbp-0x48]
   14000c00a:	lea    rcx,[rbp+0x180]
   14000c011:	movzx  r9d,r14b
   14000c015:	mov    QWORD PTR [rsp+0x20],rax
   14000c01a:	call   0x140004070
   14000c01f:	lea    rcx,[rbp-0x48]
   14000c023:	call   0x1400019c0
   14000c028:	lea    rdx,[rbp+0x140]
   14000c02f:	lea    rcx,[rbp+0x180]
   14000c036:	call   0x140005d60
   14000c03b:	cmp    eax,0x1
   14000c03e:	je     0x14000c063
   14000c040:	call   QWORD PTR [rip+0x2315a]        # 0x14002f1a0
   14000c046:	lea    r8,[rip+0x2d79b]        # 0x1400397e8
   14000c04d:	lea    rcx,[rbp+0x110]
   14000c054:	mov    r9d,eax
   14000c057:	mov    edx,0xc8
   14000c05c:	call   0x14000a6d0
   14000c061:	jmp    0x14000c07b
   14000c063:	lea    r8,[rip+0x2d79e]        # 0x140039808
   14000c06a:	lea    rcx,[rbp+0x110]
   14000c071:	mov    edx,0xc8
   14000c076:	call   0x14000a6d0
   14000c07b:	lea    rcx,[rbp+0x118]
   14000c082:	call   0x140007430
   14000c087:	test   al,al
   14000c089:	jne    0x14000c09e
   14000c08b:	lea    rdx,[rbp+0x118]
   14000c092:	lea    rcx,[rbp+0x180]
   14000c099:	call   0x140005680
   14000c09e:	lea    rcx,[rbp+0x180]
   14000c0a5:	call   0x1400043a0
   14000c0aa:	lea    rcx,[rbp+0x140]
   14000c0b1:	call   0x1400019c0
   14000c0b6:	lea    rcx,[rbp+0x118]
   14000c0bd:	jmp    0x14000b9ee
   14000c0c2:	lea    rcx,[rbp+0x118]
   14000c0c9:	call   0x140008a10
   14000c0ce:	lea    rcx,[rbp+0x180]
   14000c0d5:	call   0x140008a10
   14000c0da:	lea    rcx,[rbp+0x1d0]
   14000c0e1:	call   0x140008a10
   14000c0e6:	lea    rcx,[rbp+0x140]
   14000c0ed:	call   0x140008a10
   14000c0f2:	lea    r8,[rbp+0x180]
   14000c0f9:	lea    rdx,[rbp+0x238]
   14000c100:	lea    rcx,[rbp+0x160]
   14000c107:	call   0x14000ab40
   14000c10c:	test   al,al
   14000c10e:	jne    0x14000c119
   14000c110:	lea    r8,[rip+0x2d579]        # 0x140039690
   14000c117:	jmp    0x14000c165
   14000c119:	lea    r8,[rbp+0x1d0]
   14000c120:	lea    rdx,[rbp+0x2f0]
   14000c127:	lea    rcx,[rbp+0x160]
   14000c12e:	call   0x14000ab40
   14000c133:	test   al,al
   14000c135:	jne    0x14000c140
   14000c137:	lea    r8,[rip+0x2d6ea]        # 0x140039828
   14000c13e:	jmp    0x14000c165
   14000c140:	lea    r8,[rbp+0x140]
   14000c147:	lea    rdx,[rbp+0x390]
   14000c14e:	lea    rcx,[rbp+0x160]
   14000c155:	call   0x14000ab40
   14000c15a:	test   al,al
   14000c15c:	jne    0x14000c193
   14000c15e:	lea    r8,[rip+0x2d6db]        # 0x140039840
   14000c165:	lea    rcx,[rbp+0x110]
   14000c16c:	mov    edx,0xc8
   14000c171:	call   0x14000a6d0
   14000c176:	lea    rcx,[rbp+0x140]
   14000c17d:	call   0x1400019c0
   14000c182:	lea    rcx,[rbp+0x1d0]
   14000c189:	call   0x1400019c0
   14000c18e:	jmp    0x14000c606
   14000c193:	lea    r8,[rbp+0x118]
   14000c19a:	lea    rdx,[rbp+0x218]
   14000c1a1:	lea    rcx,[rbp+0x160]
   14000c1a8:	call   0x14000ab40
   14000c1ad:	lea    rcx,[rbp+0x260]
   14000c1b4:	call   0x14000c940
   14000c1b9:	lea    rcx,[rbp+0x1f8]
   14000c1c0:	call   0x140003a30
   14000c1c5:	lea    rcx,[rbp-0x8]
   14000c1c9:	mov    rdx,rax
   14000c1cc:	call   0x140003ee0
   14000c1d1:	lea    rax,[rbp+0x430]
   14000c1d8:	lea    rdx,[rbp-0x8]
   14000c1dc:	lea    rcx,[rbp+0x260]
   14000c1e3:	movzx  r9d,r14b
   14000c1e7:	mov    QWORD PTR [rsp+0x20],rax
   14000c1ec:	call   0x140004070
   14000c1f1:	lea    rcx,[rbp-0x8]
   14000c1f5:	call   0x1400019c0
   14000c1fa:	lea    r9,[rbp+0x140]
   14000c201:	lea    r8,[rbp+0x1d0]
   14000c208:	lea    rdx,[rbp+0x180]
   14000c20f:	lea    rcx,[rbp+0x260]
   14000c216:	call   0x140005ee0
   14000c21b:	cmp    eax,0x1
   14000c21e:	je     0x14000c243
   14000c220:	call   QWORD PTR [rip+0x22f7a]        # 0x14002f1a0
   14000c226:	lea    r8,[rip+0x2d623]        # 0x140039850
   14000c22d:	lea    rcx,[rbp+0x110]
   14000c234:	mov    r9d,eax
   14000c237:	mov    edx,0xc8
   14000c23c:	call   0x14000a6d0
   14000c241:	jmp    0x14000c25b
   14000c243:	lea    r8,[rip+0x2d626]        # 0x140039870
   14000c24a:	lea    rcx,[rbp+0x110]
   14000c251:	mov    edx,0xc8
   14000c256:	call   0x14000a6d0
   14000c25b:	lea    rcx,[rbp+0x118]
   14000c262:	call   0x140007430
   14000c267:	test   al,al
   14000c269:	jne    0x14000c27e
   14000c26b:	lea    rdx,[rbp+0x118]
   14000c272:	lea    rcx,[rbp+0x260]
   14000c279:	call   0x140005680
   14000c27e:	lea    rcx,[rbp+0x260]
   14000c285:	call   0x1400043a0
   14000c28a:	lea    rcx,[rbp+0x140]
   14000c291:	call   0x1400019c0
   14000c296:	lea    rcx,[rbp+0x1d0]
   14000c29d:	call   0x1400019c0
   14000c2a2:	lea    rcx,[rbp+0x180]
   14000c2a9:	call   0x1400019c0
   14000c2ae:	lea    rcx,[rbp+0x118]
   14000c2b5:	jmp    0x14000b9ee
   14000c2ba:	lea    r8,[rip+0x2d5cf]        # 0x140039890
   14000c2c1:	lea    rcx,[rbp+0x110]
   14000c2c8:	mov    edx,0xc8
   14000c2cd:	call   0x14000a6d0
   14000c2d2:	lea    rcx,[rbp+0x118]
   14000c2d9:	call   0x140008a10
   14000c2de:	lea    rcx,[rbp+0x140]
   14000c2e5:	call   0x140008a10
   14000c2ea:	lea    rcx,[rbp+0x180]
   14000c2f1:	call   0x140008a10
   14000c2f6:	lea    r8,[rbp+0x140]
   14000c2fd:	lea    rdx,[rbp+0x238]
   14000c304:	lea    rcx,[rbp+0x160]
   14000c30b:	call   0x14000ab40
   14000c310:	test   al,al
   14000c312:	je     0x14000c498
   14000c318:	lea    r8,[rbp+0x180]
   14000c31f:	lea    rdx,[rbp+0x2f0]
   14000c326:	lea    rcx,[rbp+0x160]
   14000c32d:	call   0x14000ab40
   14000c332:	test   al,al
   14000c334:	jne    0x14000c342
   14000c336:	lea    r8,[rip+0x2d4eb]        # 0x140039828
   14000c33d:	jmp    0x14000c4c6
   14000c342:	lea    r8,[rbp+0x118]
   14000c349:	lea    rdx,[rbp+0x218]
   14000c350:	lea    rcx,[rbp+0x160]
   14000c357:	call   0x14000ab40
   14000c35c:	lea    rcx,[rbp+0x260]
   14000c363:	call   0x14000c940
   14000c368:	lea    rcx,[rbp+0x1f8]
   14000c36f:	call   0x140003a30
   14000c374:	lea    rcx,[rbp+0x38]
   14000c378:	mov    rdx,rax
   14000c37b:	call   0x140003ee0
   14000c380:	lea    rax,[rbp+0x430]
   14000c387:	lea    rdx,[rbp+0x38]
   14000c38b:	lea    rcx,[rbp+0x260]
   14000c392:	movzx  r9d,r14b
   14000c396:	mov    QWORD PTR [rsp+0x20],rax
   14000c39b:	call   0x140004070
   14000c3a0:	lea    rcx,[rbp+0x38]
   14000c3a4:	call   0x1400019c0
   14000c3a9:	lea    r8,[rbp+0x180]
   14000c3b0:	lea    rdx,[rbp+0x140]
   14000c3b7:	lea    rcx,[rbp+0x260]
   14000c3be:	call   0x140006060
   14000c3c3:	cmp    eax,0x1
   14000c3c6:	je     0x14000c3eb
   14000c3c8:	call   QWORD PTR [rip+0x22dd2]        # 0x14002f1a0
   14000c3ce:	lea    r8,[rip+0x2d4d3]        # 0x1400398a8
   14000c3d5:	lea    rcx,[rbp+0x110]
   14000c3dc:	mov    r9d,eax
   14000c3df:	mov    edx,0xc8
   14000c3e4:	call   0x14000a6d0
   14000c3e9:	jmp    0x14000c403
   14000c3eb:	lea    r8,[rip+0x2d4d6]        # 0x1400398c8
   14000c3f2:	lea    rcx,[rbp+0x110]
   14000c3f9:	mov    edx,0xc8
   14000c3fe:	call   0x14000a6d0
   14000c403:	lea    rcx,[rbp+0x118]
   14000c40a:	call   0x140007430
   14000c40f:	test   al,al
   14000c411:	jne    0x14000c426
   14000c413:	lea    rdx,[rbp+0x118]
   14000c41a:	lea    rcx,[rbp+0x260]
   14000c421:	call   0x140005680
   14000c426:	lea    rcx,[rbp+0x260]
   14000c42d:	call   0x1400043a0
   14000c432:	lea    rcx,[rbp+0x180]
   14000c439:	call   0x1400019c0
   14000c43e:	lea    rcx,[rbp+0x140]
   14000c445:	call   0x1400019c0
   14000c44a:	lea    rcx,[rbp+0x118]
   14000c451:	jmp    0x14000b9ee
   14000c456:	lea    rcx,[rbp+0x118]
   14000c45d:	call   0x140008a10
   14000c462:	lea    rcx,[rbp+0x140]
   14000c469:	call   0x140008a10
   14000c46e:	lea    rcx,[rbp+0x180]
   14000c475:	call   0x140008a10
   14000c47a:	lea    r8,[rbp+0x140]
   14000c481:	lea    rdx,[rbp+0x238]
   14000c488:	lea    rcx,[rbp+0x160]
   14000c48f:	call   0x14000ab40
   14000c494:	test   al,al
   14000c496:	jne    0x14000c4a1
   14000c498:	lea    r8,[rip+0x2d1f1]        # 0x140039690
   14000c49f:	jmp    0x14000c4c6
   14000c4a1:	lea    r8,[rbp+0x180]
   14000c4a8:	lea    rdx,[rbp+0x2d0]
   14000c4af:	lea    rcx,[rbp+0x160]
   14000c4b6:	call   0x14000ab40
   14000c4bb:	test   al,al
   14000c4bd:	jne    0x14000c500
   14000c4bf:	lea    r8,[rip+0x2d422]        # 0x1400398e8
   14000c4c6:	lea    rcx,[rbp+0x110]
   14000c4cd:	mov    edx,0xc8
   14000c4d2:	call   0x14000a6d0
   14000c4d7:	lea    rcx,[rbp+0x180]
   14000c4de:	call   0x1400019c0
   14000c4e3:	lea    rcx,[rbp+0x140]
   14000c4ea:	call   0x1400019c0
   14000c4ef:	lea    rcx,[rbp+0x118]
   14000c4f6:	call   0x1400019c0
   14000c4fb:	jmp    0x14000ba09
   14000c500:	lea    r8,[rbp+0x118]
   14000c507:	lea    rdx,[rbp+0x218]
   14000c50e:	lea    rcx,[rbp+0x160]
   14000c515:	call   0x14000ab40
   14000c51a:	lea    rcx,[rbp+0x260]
   14000c521:	call   0x14000c940
   14000c526:	lea    rcx,[rbp+0x1f8]
   14000c52d:	call   0x140003a30
   14000c532:	lea    rcx,[rbp+0x78]
   14000c536:	mov    rdx,rax
   14000c539:	call   0x140003ee0
   14000c53e:	lea    rax,[rbp+0x430]
   14000c545:	lea    rdx,[rbp+0x78]
   14000c549:	lea    rcx,[rbp+0x260]
   14000c550:	movzx  r9d,r14b
   14000c554:	mov    QWORD PTR [rsp+0x20],rax
   14000c559:	call   0x140004070
   14000c55e:	lea    rcx,[rbp+0x78]
   14000c562:	call   0x1400019c0
   14000c567:	lea    r8,[rbp+0x180]
   14000c56e:	lea    rdx,[rbp+0x140]
   14000c575:	lea    rcx,[rbp+0x260]
   14000c57c:	call   0x140006340
   14000c581:	cmp    eax,0x1
   14000c584:	je     0x14000c5ac
   14000c586:	call   QWORD PTR [rip+0x22c14]        # 0x14002f1a0
   14000c58c:	lea    r8,[rip+0x2d36d]        # 0x140039900
   14000c593:	lea    rcx,[rbp+0x110]
   14000c59a:	mov    r9d,eax
   14000c59d:	mov    edx,0xc8
   14000c5a2:	call   0x14000a6d0
   14000c5a7:	jmp    0x14000c403
   14000c5ac:	lea    r8,[rip+0x2d36d]        # 0x140039920
   14000c5b3:	jmp    0x14000c3f2
   14000c5b8:	lea    rcx,[rbp+0x118]
   14000c5bf:	call   0x140008a10
   14000c5c4:	lea    rcx,[rbp+0x180]
   14000c5cb:	call   0x140008a10
   14000c5d0:	lea    r8,[rbp+0x180]
   14000c5d7:	lea    rdx,[rbp+0x238]
   14000c5de:	lea    rcx,[rbp+0x160]
   14000c5e5:	call   0x14000ab40
   14000c5ea:	test   al,al
   14000c5ec:	jne    0x14000c623
   14000c5ee:	lea    r8,[rip+0x2d09b]        # 0x140039690
   14000c5f5:	lea    rcx,[rbp+0x110]
   14000c5fc:	mov    edx,0xc8
   14000c601:	call   0x14000a6d0
   14000c606:	lea    rcx,[rbp+0x180]
   14000c60d:	call   0x1400019c0
   14000c612:	lea    rcx,[rbp+0x118]
   14000c619:	call   0x1400019c0
   14000c61e:	jmp    0x14000ba09
   14000c623:	lea    r8,[rbp+0x118]
   14000c62a:	lea    rdx,[rbp+0x218]
   14000c631:	lea    rcx,[rbp+0x160]
   14000c638:	call   0x14000ab40
   14000c63d:	lea    rcx,[rbp+0x260]
   14000c644:	call   0x14000c940
   14000c649:	lea    rcx,[rbp+0x1f8]
   14000c650:	call   0x140003a30
   14000c655:	lea    rcx,[rbp-0x68]
   14000c659:	mov    rdx,rax
   14000c65c:	call   0x140003ee0
   14000c661:	lea    rax,[rbp+0x430]
   14000c668:	lea    rdx,[rbp-0x68]
   14000c66c:	lea    rcx,[rbp+0x260]
   14000c673:	movzx  r9d,r14b
   14000c677:	mov    QWORD PTR [rsp+0x20],rax
   14000c67c:	call   0x140004070
   14000c681:	lea    rcx,[rbp-0x68]
   14000c685:	call   0x1400019c0
   14000c68a:	lea    rdx,[rbp+0x180]
   14000c691:	lea    rcx,[rbp+0x260]
   14000c698:	call   0x1400065e0
   14000c69d:	cmp    eax,0x1
   14000c6a0:	je     0x14000c6c5
   14000c6a2:	call   QWORD PTR [rip+0x22af8]        # 0x14002f1a0
   14000c6a8:	lea    r8,[rip+0x2d291]        # 0x140039940
   14000c6af:	lea    rcx,[rbp+0x110]
   14000c6b6:	mov    r9d,eax
   14000c6b9:	mov    edx,0xc8
   14000c6be:	call   0x14000a6d0
   14000c6c3:	jmp    0x14000c6dd
   14000c6c5:	lea    r8,[rip+0x2d294]        # 0x140039960
   14000c6cc:	lea    rcx,[rbp+0x110]
   14000c6d3:	mov    edx,0xc8
   14000c6d8:	call   0x14000a6d0
   14000c6dd:	lea    rcx,[rbp+0x118]
   14000c6e4:	call   0x140007430
   14000c6e9:	test   al,al
   14000c6eb:	jne    0x14000c700
   14000c6ed:	lea    rdx,[rbp+0x118]
   14000c6f4:	lea    rcx,[rbp+0x260]
   14000c6fb:	call   0x140005680
   14000c700:	lea    rcx,[rbp+0x260]
   14000c707:	call   0x1400043a0
   14000c70c:	lea    rcx,[rbp+0x180]
   14000c713:	call   0x1400019c0
   14000c718:	lea    rcx,[rbp+0x118]
   14000c71f:	jmp    0x14000b9ee
   14000c724:	lea    rcx,[rbp+0x118]
   14000c72b:	call   0x140008a10
   14000c730:	lea    r8,[rbp+0x118]
   14000c737:	lea    rdx,[rbp+0x218]
   14000c73e:	lea    rcx,[rbp+0x160]
   14000c745:	call   0x14000ab40
   14000c74a:	test   al,al
   14000c74c:	je     0x14000c612
   14000c752:	lea    rcx,[rbp+0x140]
   14000c759:	call   0x140008a10
   14000c75e:	lea    r8,[rbp+0x140]
   14000c765:	lea    rdx,[rbp+0x3f0]
   14000c76c:	lea    rcx,[rbp+0x160]
   14000c773:	call   0x14000ab40
   14000c778:	test   al,al
   14000c77a:	jne    0x14000c790
   14000c77c:	lea    rcx,[rbp+0x140]
   14000c783:	call   0x140007430
   14000c788:	test   al,al
   14000c78a:	je     0x14000bfa4
   14000c790:	lea    rcx,[rbp+0x180]
   14000c797:	call   0x140008a10
   14000c79c:	lea    r8,[rbp+0x180]
   14000c7a3:	lea    rdx,[rbp+0x238]
   14000c7aa:	lea    rcx,[rbp+0x160]
   14000c7b1:	call   0x14000ab40
   14000c7b6:	test   al,al
   14000c7b8:	jne    0x14000c7dd
   14000c7ba:	lea    rcx,[rbp+0x140]
   14000c7c1:	call   0x140007430
   14000c7c6:	test   al,al
   14000c7c8:	jne    0x14000c7dd
   14000c7ca:	lea    rdx,[rip+0x2d1ab]        # 0x14003997c
   14000c7d1:	lea    rcx,[rbp+0x180]
   14000c7d8:	call   0x14000cb90
   14000c7dd:	lea    rcx,[rbp+0x1d0]
   14000c7e4:	call   0x14000c9d0
   14000c7e9:	lea    rcx,[rbp+0x1f8]
   14000c7f0:	call   0x140003a30
   14000c7f5:	lea    rcx,[rsp+0x78]
   14000c7fa:	mov    rdx,rax
   14000c7fd:	call   0x140003ee0
   14000c802:	lea    rax,[rbp+0x180]
   14000c809:	lea    rdx,[rsp+0x78]
   14000c80e:	lea    rcx,[rbp+0x1d0]
   14000c815:	movzx  r9d,r14b
   14000c819:	mov    QWORD PTR [rsp+0x20],rax
   14000c81e:	call   0x140013380
   14000c823:	lea    rcx,[rsp+0x78]
   14000c828:	call   0x1400019c0
   14000c82d:	lea    rdx,[rip+0x2d154]        # 0x140039988
   14000c834:	lea    rcx,[rbp+0x140]
   14000c83b:	call   0x140010bd0
   14000c840:	test   al,al
   14000c842:	je     0x14000c852
   14000c844:	lea    rcx,[rbp+0x1d0]
   14000c84b:	call   0x140013460
   14000c850:	jmp    0x14000c875
   14000c852:	lea    rdx,[rip+0x2b417]        # 0x140037c70
   14000c859:	lea    rcx,[rbp+0x140]
   14000c860:	call   0x140010bd0
   14000c865:	test   al,al
   14000c867:	je     0x14000c875
   14000c869:	lea    rcx,[rbp+0x1d0]
   14000c870:	call   0x140013470
   14000c875:	lea    rcx,[rbp+0x260]
   14000c87c:	call   0x14000c940
   14000c881:	lea    rcx,[rbp+0x1f8]
   14000c888:	call   0x140003a30
   14000c88d:	lea    rcx,[rbp+0x58]
   14000c891:	mov    rdx,rax
   14000c894:	call   0x140003ee0
   14000c899:	lea    rax,[rbp+0x430]
   14000c8a0:	lea    rdx,[rbp+0x58]
   14000c8a4:	lea    rcx,[rbp+0x260]
   14000c8ab:	movzx  r9d,r14b
   14000c8af:	mov    QWORD PTR [rsp+0x20],rax
   14000c8b4:	call   0x140004070
   14000c8b9:	lea    rcx,[rbp+0x58]
   14000c8bd:	call   0x1400019c0
   14000c8c2:	lea    rcx,[rbp+0x118]
   14000c8c9:	call   0x140007430
   14000c8ce:	test   al,al
   14000c8d0:	jne    0x14000c8e5
   14000c8d2:	lea    rdx,[rbp+0x118]
   14000c8d9:	lea    rcx,[rbp+0x260]
   14000c8e0:	call   0x140005680
   14000c8e5:	lea    rcx,[rbp+0x260]
   14000c8ec:	call   0x1400043a0
   14000c8f1:	lea    rcx,[rbp+0x1d0]
   14000c8f8:	call   0x140013450
   14000c8fd:	jmp    0x14000c432
   14000c902:	xchg   ax,ax
   14000c904:	mov    ?,WORD PTR [rsi-0x49250000]
   14000c90a:	add    BYTE PTR [rax],al
   14000c90c:	(bad)  [rsi-0x49250000]
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	sbb    bh,BYTE PTR [rbx-0x44060000]
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	rex.XB mov r13d,0xbf560000
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	ret    0xc0
   14000c927:	add    BYTE PTR [rdx+0x560000c2],bh
   14000c92d:	(bad)  
   14000c92e:	add    BYTE PTR [rax],al
   14000c930:	mov    eax,0x240000c5
   14000c935:	mov    DWORD PTR [rax],0xcccccc00
   14000c93b:	int3   
   14000c93c:	int3   
   14000c93d:	int3   
   14000c93e:	int3   
   14000c93f:	int3   
   14000c940:	xor    eax,eax
   14000c942:	mov    QWORD PTR [rcx],rax
   14000c945:	mov    QWORD PTR [rcx+0x8],rax
   14000c949:	mov    QWORD PTR [rcx+0x10],rax
   14000c94d:	mov    QWORD PTR [rcx+0x18],rax
   14000c951:	mov    QWORD PTR [rcx+0x20],rax
   14000c955:	mov    QWORD PTR [rcx+0x28],rax
   14000c959:	mov    QWORD PTR [rcx+0x30],rax
   14000c95d:	mov    QWORD PTR [rcx+0x38],rax
   14000c961:	mov    QWORD PTR [rcx+0x40],rax
   14000c965:	ret    
   14000c966:	int3   
   14000c967:	int3   
   14000c968:	int3   
   14000c969:	int3   
   14000c96a:	int3   
   14000c96b:	int3   
   14000c96c:	int3   
   14000c96d:	int3   
   14000c96e:	int3   
   14000c96f:	int3   
   14000c970:	xor    eax,eax
   14000c972:	mov    QWORD PTR [rcx],rax
   14000c975:	mov    QWORD PTR [rcx+0x8],rax
   14000c979:	mov    QWORD PTR [rcx+0x10],rax
   14000c97d:	mov    QWORD PTR [rcx+0x18],rax
   14000c981:	mov    QWORD PTR [rcx+0x20],rax
   14000c985:	mov    QWORD PTR [rcx+0x28],rax
   14000c989:	mov    QWORD PTR [rcx+0x30],rax
   14000c98d:	ret    
   14000c98e:	int3   
   14000c98f:	int3   
   14000c990:	rex push rbx
   14000c992:	sub    rsp,0x20
   14000c996:	lea    rbx,[rcx+0x98]
   14000c99d:	mov    rcx,rbx
   14000c9a0:	call   0x14000cce0
   14000c9a5:	lea    rax,[rip+0x2d2cc]        # 0x140039c78
   14000c9ac:	mov    rcx,rbx
   14000c9af:	mov    QWORD PTR [rbx],rax
   14000c9b2:	add    rsp,0x20
   14000c9b6:	pop    rbx
   14000c9b7:	jmp    0x1400140d4
   14000c9bc:	int3   
   14000c9bd:	int3   
   14000c9be:	int3   
   14000c9bf:	int3   
   14000c9c0:	xor    edx,edx
   14000c9c2:	mov    r8d,0xf8
   14000c9c8:	jmp    0x14001b980
   14000c9cd:	int3   
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	xor    eax,eax
   14000c9d2:	mov    QWORD PTR [rcx],rax
   14000c9d5:	mov    QWORD PTR [rcx+0x8],rax
   14000c9d9:	mov    QWORD PTR [rcx+0x10],rax
   14000c9dd:	mov    QWORD PTR [rcx+0x18],rax
   14000c9e1:	mov    QWORD PTR [rcx+0x20],rax
   14000c9e5:	ret    
   14000c9e6:	int3   
   14000c9e7:	int3   
   14000c9e8:	int3   
   14000c9e9:	int3   
   14000c9ea:	int3   
   14000c9eb:	int3   
   14000c9ec:	int3   
   14000c9ed:	int3   
   14000c9ee:	int3   
   14000c9ef:	int3   
   14000c9f0:	mov    r11,rsp
   14000c9f3:	push   rdi
   14000c9f4:	sub    rsp,0xb0
   14000c9fb:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   14000ca03:	mov    QWORD PTR [r11+0x18],rbx
   14000ca07:	mov    QWORD PTR [r11+0x20],rsi
   14000ca0b:	mov    rax,QWORD PTR [rip+0x34c3e]        # 0x140041650
   14000ca12:	xor    rax,rsp
   14000ca15:	mov    QWORD PTR [rsp+0xa8],rax
   14000ca1d:	mov    rsi,rdx
   14000ca20:	mov    rbx,rcx
   14000ca23:	mov    QWORD PTR [rsp+0x40],rcx
   14000ca28:	mov    DWORD PTR [r11-0x18],0x0
   14000ca30:	mov    QWORD PTR [r11-0x38],rcx
   14000ca34:	mov    rax,QWORD PTR [rcx]
   14000ca37:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ca3b:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   14000ca40:	test   rcx,rcx
   14000ca43:	je     0x14000ca4c
   14000ca45:	mov    rax,QWORD PTR [rcx]
   14000ca48:	call   QWORD PTR [rax+0x8]
   14000ca4b:	nop
   14000ca4c:	mov    rcx,rbx
   14000ca4f:	call   0x1400131a0
   14000ca54:	mov    BYTE PTR [rsp+0x88],al
   14000ca5b:	test   al,al
   14000ca5d:	je     0x14000cb1f
   14000ca63:	mov    rax,QWORD PTR [rbx]
   14000ca66:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ca6a:	add    rcx,rbx
   14000ca6d:	lea    rdx,[rsp+0x70]
   14000ca72:	call   0x140012a40
   14000ca77:	nop
   14000ca78:	mov    rcx,rax
   14000ca7b:	call   0x140010c10
   14000ca80:	mov    rdi,rax
   14000ca83:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ca88:	test   rcx,rcx
   14000ca8b:	je     0x14000caa6
   14000ca8d:	mov    rax,QWORD PTR [rcx]
   14000ca90:	call   QWORD PTR [rax+0x10]
   14000ca93:	mov    rcx,rax
   14000ca96:	test   rax,rax
   14000ca99:	je     0x14000caa6
   14000ca9b:	mov    rax,QWORD PTR [rax]
   14000ca9e:	mov    edx,0x1
   14000caa3:	call   QWORD PTR [rax]
   14000caa5:	nop
   14000caa6:	mov    rax,QWORD PTR [rbx]
   14000caa9:	movsxd rdx,DWORD PTR [rax+0x4]
   14000caad:	add    rdx,rbx
   14000cab0:	mov    QWORD PTR [rsp+0x50],0x0
   14000cab9:	mov    BYTE PTR [rsp+0x58],0x1
   14000cabe:	mov    rax,QWORD PTR [rdx+0x48]
   14000cac2:	mov    QWORD PTR [rsp+0x60],rax
   14000cac7:	test   rax,rax
   14000caca:	sete   BYTE PTR [rsp+0x68]
   14000cacf:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000cad4:	movdqa XMMWORD PTR [rsp+0x50],xmm0
   14000cada:	movaps xmm1,XMMWORD PTR [rsp+0x60]
   14000cadf:	movdqa XMMWORD PTR [rsp+0x60],xmm1
   14000cae5:	mov    rax,QWORD PTR [rdi]
   14000cae8:	mov    QWORD PTR [rsp+0x30],rsi
   14000caed:	lea    rcx,[rsp+0xa0]
   14000caf5:	mov    QWORD PTR [rsp+0x28],rcx
   14000cafa:	mov    QWORD PTR [rsp+0x20],rdx
   14000caff:	lea    r9,[rsp+0x50]
   14000cb04:	lea    r8,[rsp+0x60]
   14000cb09:	lea    rdx,[rsp+0x90]
   14000cb11:	mov    rcx,rdi
   14000cb14:	call   QWORD PTR [rax+0x60]
   14000cb17:	nop
   14000cb18:	jmp    0x14000cb1f
   14000cb1a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cb1f:	mov    rax,QWORD PTR [rbx]
   14000cb22:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cb26:	add    rcx,rbx
   14000cb29:	mov    eax,DWORD PTR [rsp+0xa0]
   14000cb30:	test   eax,eax
   14000cb32:	je     0x14000cb4c
   14000cb34:	mov    edx,DWORD PTR [rcx+0x10]
   14000cb37:	or     edx,eax
   14000cb39:	cmp    QWORD PTR [rcx+0x48],0x0
   14000cb3e:	jne    0x14000cb43
   14000cb40:	or     edx,0x4
   14000cb43:	xor    r8d,r8d
   14000cb46:	call   0x1400130b0
   14000cb4b:	nop
   14000cb4c:	mov    rcx,QWORD PTR [rbx]
   14000cb4f:	movsxd rdx,DWORD PTR [rcx+0x4]
   14000cb53:	mov    rcx,QWORD PTR [rdx+rbx*1+0x48]
   14000cb58:	test   rcx,rcx
   14000cb5b:	je     0x14000cb63
   14000cb5d:	mov    rdx,QWORD PTR [rcx]
   14000cb60:	call   QWORD PTR [rdx+0x10]
   14000cb63:	mov    rax,rbx
   14000cb66:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000cb6e:	xor    rcx,rsp
   14000cb71:	call   0x1400187d0
   14000cb76:	lea    r11,[rsp+0xb0]
   14000cb7e:	mov    rbx,QWORD PTR [r11+0x20]
   14000cb82:	mov    rsi,QWORD PTR [r11+0x28]
   14000cb86:	mov    rsp,r11
   14000cb89:	pop    rdi
   14000cb8a:	ret    
   14000cb8b:	int3   
   14000cb8c:	int3   
   14000cb8d:	int3   
   14000cb8e:	int3   
   14000cb8f:	int3   
   14000cb90:	cmp    WORD PTR [rdx],0x0
   14000cb94:	jne    0x14000cb9e
   14000cb96:	xor    r8d,r8d
   14000cb99:	jmp    0x140003d90
   14000cb9e:	or     r8,0xffffffffffffffff
   14000cba2:	inc    r8
   14000cba5:	cmp    WORD PTR [rdx+r8*2],0x0
   14000cbab:	jne    0x14000cba2
   14000cbad:	jmp    0x140003d90
   14000cbb2:	int3   
   14000cbb3:	int3   
   14000cbb4:	int3   
   14000cbb5:	int3   
   14000cbb6:	int3   
   14000cbb7:	int3   
   14000cbb8:	int3   
   14000cbb9:	int3   
   14000cbba:	int3   
   14000cbbb:	int3   
   14000cbbc:	int3   
   14000cbbd:	int3   
   14000cbbe:	int3   
   14000cbbf:	int3   
   14000cbc0:	lea    rdx,[rip+0x2c8c5]        # 0x14003948c
   14000cbc7:	mov    r9d,0x2
   14000cbcd:	xor    r8d,r8d
   14000cbd0:	jmp    0x140007460
   14000cbd5:	int3   
   14000cbd6:	int3   
   14000cbd7:	int3   
   14000cbd8:	int3   
   14000cbd9:	int3   
   14000cbda:	int3   
   14000cbdb:	int3   
   14000cbdc:	int3   
   14000cbdd:	int3   
   14000cbde:	int3   
   14000cbdf:	int3   
   14000cbe0:	sub    rsp,0x48
   14000cbe4:	mov    rax,QWORD PTR [rip+0x34a65]        # 0x140041650
   14000cbeb:	xor    rax,rsp
   14000cbee:	mov    QWORD PTR [rsp+0x30],rax
   14000cbf3:	mov    eax,0x20
   14000cbf8:	lea    rdx,[rsp+0x20]
   14000cbfd:	mov    WORD PTR [rsp+0x20],ax
   14000cc02:	call   0x14000d6d0
   14000cc07:	mov    rcx,QWORD PTR [rsp+0x30]
   14000cc0c:	xor    rcx,rsp
   14000cc0f:	call   0x1400187d0
   14000cc14:	add    rsp,0x48
   14000cc18:	ret    
   14000cc19:	int3   
   14000cc1a:	int3   
   14000cc1b:	int3   
   14000cc1c:	int3   
   14000cc1d:	int3   
   14000cc1e:	int3   
   14000cc1f:	int3   
   14000cc20:	mov    DWORD PTR [rsp+0x18],r8d
   14000cc25:	mov    QWORD PTR [rsp+0x8],rcx
   14000cc2a:	push   rdi
   14000cc2b:	sub    rsp,0x30
   14000cc2f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cc38:	mov    QWORD PTR [rsp+0x48],rbx
   14000cc3d:	mov    rdi,rcx
   14000cc40:	mov    DWORD PTR [rsp+0x50],0x0
   14000cc48:	lea    rax,[rip+0x2cf09]        # 0x140039b58
   14000cc4f:	mov    QWORD PTR [rcx],rax
   14000cc52:	lea    rax,[rip+0x2cef7]        # 0x140039b50
   14000cc59:	mov    QWORD PTR [rcx+0x10],rax
   14000cc5d:	lea    rax,[rip+0x2d004]        # 0x140039c68
   14000cc64:	mov    QWORD PTR [rcx+0x98],rax
   14000cc6b:	mov    DWORD PTR [rsp+0x50],0x1
   14000cc73:	lea    rdx,[rcx+0x18]
   14000cc77:	call   0x14000d780
   14000cc7c:	nop
   14000cc7d:	mov    rax,QWORD PTR [rdi]
   14000cc80:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cc84:	lea    rax,[rip+0x2cebd]        # 0x140039b48
   14000cc8b:	mov    QWORD PTR [rcx+rdi*1],rax
   14000cc8f:	mov    rax,QWORD PTR [rdi]
   14000cc92:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cc96:	lea    edx,[rcx-0x98]
   14000cc9c:	mov    DWORD PTR [rcx+rdi*1-0x4],edx
   14000cca0:	lea    rcx,[rdi+0x18]
   14000cca4:	call   0x14000e5d0
   14000cca9:	nop
   14000ccaa:	lea    rax,[rip+0x2cde7]        # 0x140039a98
   14000ccb1:	mov    QWORD PTR [rdi+0x18],rax
   14000ccb5:	mov    QWORD PTR [rdi+0x80],0x0
   14000ccc0:	mov    DWORD PTR [rdi+0x88],0x0
   14000ccca:	mov    rax,rdi
   14000cccd:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ccd2:	add    rsp,0x30
   14000ccd6:	pop    rdi
   14000ccd7:	ret    
   14000ccd8:	int3   
   14000ccd9:	int3   
   14000ccda:	int3   
   14000ccdb:	int3   
   14000ccdc:	int3   
   14000ccdd:	int3   
   14000ccde:	int3   
   14000ccdf:	int3   
   14000cce0:	rex push rbx
   14000cce2:	sub    rsp,0x20
   14000cce6:	mov    rax,QWORD PTR [rcx-0x98]
   14000cced:	mov    rbx,rcx
   14000ccf0:	add    rcx,0xffffffffffffff80
   14000ccf4:	movsxd rdx,DWORD PTR [rax+0x4]
   14000ccf8:	lea    rax,[rip+0x2ce49]        # 0x140039b48
   14000ccff:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   14000cd04:	mov    rax,QWORD PTR [rcx-0x18]
   14000cd08:	movsxd rdx,DWORD PTR [rax+0x4]
   14000cd0c:	lea    r8d,[rdx-0x98]
   14000cd13:	mov    DWORD PTR [rdx+rcx*1-0x1c],r8d
   14000cd18:	call   0x14000ce30
   14000cd1d:	mov    rax,QWORD PTR [rbx-0x98]
   14000cd24:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cd28:	lea    rax,[rip+0x2ce09]        # 0x140039b38
   14000cd2f:	mov    QWORD PTR [rcx+rbx*1-0x98],rax
   14000cd37:	mov    rax,QWORD PTR [rbx-0x98]
   14000cd3e:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cd42:	lea    edx,[rcx-0x20]
   14000cd45:	mov    DWORD PTR [rcx+rbx*1-0x9c],edx
   14000cd4c:	mov    rax,QWORD PTR [rbx-0x88]
   14000cd53:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cd57:	lea    rax,[rip+0x2cdba]        # 0x140039b18
   14000cd5e:	mov    QWORD PTR [rcx+rbx*1-0x88],rax
   14000cd66:	mov    rax,QWORD PTR [rbx-0x88]
   14000cd6d:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cd71:	lea    edx,[rcx-0x10]
   14000cd74:	mov    DWORD PTR [rcx+rbx*1-0x8c],edx
   14000cd7b:	mov    rax,QWORD PTR [rbx-0x98]
   14000cd82:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cd86:	lea    rax,[rip+0x2cd9b]        # 0x140039b28
   14000cd8d:	mov    QWORD PTR [rcx+rbx*1-0x98],rax
   14000cd95:	mov    rax,QWORD PTR [rbx-0x98]
   14000cd9c:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cda0:	lea    edx,[rcx-0x18]
   14000cda3:	mov    DWORD PTR [rcx+rbx*1-0x9c],edx
   14000cdaa:	add    rsp,0x20
   14000cdae:	pop    rbx
   14000cdaf:	ret    
   14000cdb0:	mov    rax,QWORD PTR [rcx-0x20]
   14000cdb4:	mov    r9,rcx
   14000cdb7:	movsxd rdx,DWORD PTR [rax+0x4]
   14000cdbb:	lea    rax,[rip+0x2cd76]        # 0x140039b38
   14000cdc2:	mov    QWORD PTR [rdx+rcx*1-0x20],rax
   14000cdc7:	mov    rax,QWORD PTR [rcx-0x20]
   14000cdcb:	movsxd rdx,DWORD PTR [rax+0x4]
   14000cdcf:	lea    r8d,[rdx-0x20]
   14000cdd3:	mov    DWORD PTR [rdx+rcx*1-0x24],r8d
   14000cdd8:	mov    rax,QWORD PTR [rcx-0x10]
   14000cddc:	movsxd rdx,DWORD PTR [rax+0x4]
   14000cde0:	lea    rax,[rip+0x2cd31]        # 0x140039b18
   14000cde7:	mov    QWORD PTR [rdx+rcx*1-0x10],rax
   14000cdec:	mov    rax,QWORD PTR [rcx-0x10]
   14000cdf0:	movsxd rcx,DWORD PTR [rax+0x4]
   14000cdf4:	lea    edx,[rcx-0x10]
   14000cdf7:	mov    DWORD PTR [rcx+r9*1-0x14],edx
   14000cdfc:	mov    rax,QWORD PTR [r9-0x20]
   14000ce00:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ce04:	lea    rax,[rip+0x2cd1d]        # 0x140039b28
   14000ce0b:	mov    QWORD PTR [rcx+r9*1-0x20],rax
   14000ce10:	mov    rax,QWORD PTR [r9-0x20]
   14000ce14:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ce18:	lea    edx,[rcx-0x18]
   14000ce1b:	mov    DWORD PTR [rcx+r9*1-0x24],edx
   14000ce20:	ret    
   14000ce21:	int3   
   14000ce22:	int3   
   14000ce23:	int3   
   14000ce24:	int3   
   14000ce25:	int3   
   14000ce26:	int3   
   14000ce27:	int3   
   14000ce28:	int3   
   14000ce29:	int3   
   14000ce2a:	int3   
   14000ce2b:	int3   
   14000ce2c:	int3   
   14000ce2d:	int3   
   14000ce2e:	int3   
   14000ce2f:	int3   
   14000ce30:	rex push rbx
   14000ce32:	sub    rsp,0x20
   14000ce36:	test   BYTE PTR [rcx+0x70],0x1
   14000ce3a:	lea    rax,[rip+0x2cc57]        # 0x140039a98
   14000ce41:	mov    rbx,rcx
   14000ce44:	mov    QWORD PTR [rcx],rax
   14000ce47:	je     0x14000ce55
   14000ce49:	mov    rcx,QWORD PTR [rcx+0x18]
   14000ce4d:	mov    rcx,QWORD PTR [rcx]
   14000ce50:	call   0x140018a04
   14000ce55:	mov    rax,QWORD PTR [rbx+0x18]
   14000ce59:	xor    ecx,ecx
   14000ce5b:	mov    QWORD PTR [rax],rcx
   14000ce5e:	mov    rax,QWORD PTR [rbx+0x38]
   14000ce62:	mov    QWORD PTR [rax],rcx
   14000ce65:	mov    rax,QWORD PTR [rbx+0x50]
   14000ce69:	mov    DWORD PTR [rax],ecx
   14000ce6b:	mov    rax,QWORD PTR [rbx+0x20]
   14000ce6f:	mov    QWORD PTR [rax],rcx
   14000ce72:	mov    rax,QWORD PTR [rbx+0x40]
   14000ce76:	mov    QWORD PTR [rax],rcx
   14000ce79:	mov    rax,QWORD PTR [rbx+0x58]
   14000ce7d:	mov    DWORD PTR [rax],ecx
   14000ce7f:	and    DWORD PTR [rbx+0x70],0xfffffffe
   14000ce83:	lea    rax,[rip+0x2cb8e]        # 0x140039a18
   14000ce8a:	mov    QWORD PTR [rbx],rax
   14000ce8d:	mov    QWORD PTR [rbx+0x68],rcx
   14000ce91:	mov    rbx,QWORD PTR [rbx+0x60]
   14000ce95:	test   rbx,rbx
   14000ce98:	je     0x14000cec8
   14000ce9a:	mov    rcx,QWORD PTR [rbx]
   14000ce9d:	test   rcx,rcx
   14000cea0:	je     0x14000cebb
   14000cea2:	mov    rax,QWORD PTR [rcx]
   14000cea5:	call   QWORD PTR [rax+0x10]
   14000cea8:	test   rax,rax
   14000ceab:	je     0x14000cebb
   14000cead:	mov    r8,QWORD PTR [rax]
   14000ceb0:	mov    edx,0x1
   14000ceb5:	mov    rcx,rax
   14000ceb8:	call   QWORD PTR [r8]
   14000cebb:	mov    rcx,rbx
   14000cebe:	add    rsp,0x20
   14000cec2:	pop    rbx
   14000cec3:	jmp    0x140018a04
   14000cec8:	add    rsp,0x20
   14000cecc:	pop    rbx
   14000cecd:	ret    
   14000cece:	int3   
   14000cecf:	int3   
   14000ced0:	rex push rbx
   14000ced2:	push   r15
   14000ced4:	sub    rsp,0x38
   14000ced8:	mov    eax,DWORD PTR [rcx+0x70]
   14000cedb:	movzx  r15d,dx
   14000cedf:	mov    rbx,rcx
   14000cee2:	test   al,0x2
   14000cee4:	je     0x14000cef3
   14000cee6:	mov    eax,0xffff
   14000ceeb:	add    rsp,0x38
   14000ceef:	pop    r15
   14000cef1:	pop    rbx
   14000cef2:	ret    
   14000cef3:	mov    r8d,0xffff
   14000cef9:	mov    QWORD PTR [rsp+0x58],rbp
   14000cefe:	cmp    r8w,r15w
   14000cf02:	jne    0x14000cf16
   14000cf04:	xor    ebp,ebp
   14000cf06:	movzx  eax,bp
   14000cf09:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cf0e:	add    rsp,0x38
   14000cf12:	pop    r15
   14000cf14:	pop    rbx
   14000cf15:	ret    
   14000cf16:	test   al,0x8
   14000cf18:	je     0x14000cf49
   14000cf1a:	mov    r10,QWORD PTR [rcx+0x40]
   14000cf1e:	mov    rdx,QWORD PTR [r10]
   14000cf21:	test   rdx,rdx
   14000cf24:	je     0x14000cf49
   14000cf26:	mov    r9,QWORD PTR [rcx+0x68]
   14000cf2a:	cmp    rdx,r9
   14000cf2d:	jae    0x14000cf49
   14000cf2f:	mov    rax,QWORD PTR [rcx+0x58]
   14000cf33:	movsxd rcx,DWORD PTR [rax]
   14000cf36:	mov    QWORD PTR [r10],r9
   14000cf39:	mov    rax,QWORD PTR [rbx+0x58]
   14000cf3d:	lea    rdx,[rdx+rcx*2]
   14000cf41:	sub    rdx,r9
   14000cf44:	sar    rdx,1
   14000cf47:	mov    DWORD PTR [rax],edx
   14000cf49:	mov    rax,QWORD PTR [rbx+0x40]
   14000cf4d:	mov    rdx,QWORD PTR [rax]
   14000cf50:	test   rdx,rdx
   14000cf53:	je     0x14000cf8f
   14000cf55:	mov    r9,QWORD PTR [rbx+0x58]
   14000cf59:	movsxd r10,DWORD PTR [r9]
   14000cf5c:	lea    rcx,[rdx+r10*2]
   14000cf60:	cmp    rdx,rcx
   14000cf63:	jae    0x14000cf8f
   14000cf65:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cf6a:	lea    eax,[r10-0x1]
   14000cf6e:	mov    DWORD PTR [r9],eax
   14000cf71:	mov    rcx,QWORD PTR [rbx+0x40]
   14000cf75:	mov    rdx,QWORD PTR [rcx]
   14000cf78:	lea    rax,[rdx+0x2]
   14000cf7c:	mov    QWORD PTR [rcx],rax
   14000cf7f:	mov    WORD PTR [rdx],r15w
   14000cf83:	movzx  eax,r15w
   14000cf87:	add    rsp,0x38
   14000cf8b:	pop    r15
   14000cf8d:	pop    rbx
   14000cf8e:	ret    
   14000cf8f:	xor    ebp,ebp
   14000cf91:	mov    QWORD PTR [rsp+0x30],rdi
   14000cf96:	test   rdx,rdx
   14000cf99:	jne    0x14000cf9f
   14000cf9b:	mov    edi,ebp
   14000cf9d:	jmp    0x14000cfb6
   14000cf9f:	mov    rax,QWORD PTR [rbx+0x58]
   14000cfa3:	movsxd rdi,DWORD PTR [rax]
   14000cfa6:	mov    rax,QWORD PTR [rbx+0x18]
   14000cfaa:	add    rdi,rdi
   14000cfad:	sub    rdi,QWORD PTR [rax]
   14000cfb0:	add    rdi,rdx
   14000cfb3:	sar    rdi,1
   14000cfb6:	mov    rax,rdi
   14000cfb9:	shr    rax,1
   14000cfbc:	cmp    rax,0x20
   14000cfc0:	jae    0x14000cfc9
   14000cfc2:	mov    eax,0x20
   14000cfc7:	jmp    0x14000cfd0
   14000cfc9:	test   rax,rax
   14000cfcc:	je     0x14000cfe7
   14000cfce:	xchg   ax,ax
   14000cfd0:	mov    ecx,0x7fffffff
   14000cfd5:	sub    rcx,rax
   14000cfd8:	cmp    rcx,rdi
   14000cfdb:	jae    0x14000cfe2
   14000cfdd:	shr    rax,1
   14000cfe0:	jne    0x14000cfd0
   14000cfe2:	test   rax,rax
   14000cfe5:	jne    0x14000cffd
   14000cfe7:	mov    rdi,QWORD PTR [rsp+0x30]
   14000cfec:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cff1:	movzx  eax,r8w
   14000cff5:	add    rsp,0x38
   14000cff9:	pop    r15
   14000cffb:	pop    rbx
   14000cffc:	ret    
   14000cffd:	mov    QWORD PTR [rsp+0x60],rsi
   14000d002:	mov    QWORD PTR [rsp+0x20],r14
   14000d007:	lea    r14,[rax+rdi*1]
   14000d00b:	mov    rsi,rbp
   14000d00e:	test   r14,r14
   14000d011:	je     0x14000d03b
   14000d013:	movabs rax,0x7fffffffffffffff
   14000d01d:	cmp    r14,rax
   14000d020:	ja     0x14000d1a9
   14000d026:	lea    rcx,[r14+r14*1]
   14000d02a:	call   0x140018a0c
   14000d02f:	mov    rsi,rax
   14000d032:	test   rax,rax
   14000d035:	je     0x14000d1a9
   14000d03b:	mov    rax,QWORD PTR [rbx+0x18]
   14000d03f:	mov    QWORD PTR [rsp+0x28],r12
   14000d044:	mov    r12,QWORD PTR [rax]
   14000d047:	test   rdi,rdi
   14000d04a:	je     0x14000d060
   14000d04c:	lea    r8,[rdi+rdi*1]
   14000d050:	mov    rdx,r12
   14000d053:	mov    rcx,rsi
   14000d056:	call   0x140018a90
   14000d05b:	test   rdi,rdi
   14000d05e:	jne    0x14000d0b3
   14000d060:	mov    rax,QWORD PTR [rbx+0x20]
   14000d064:	mov    QWORD PTR [rbx+0x68],rsi
   14000d068:	lea    rcx,[r14+r14*1]
   14000d06c:	mov    QWORD PTR [rax],rsi
   14000d06f:	mov    rax,QWORD PTR [rbx+0x40]
   14000d073:	sar    rcx,1
   14000d076:	mov    QWORD PTR [rax],rsi
   14000d079:	mov    rax,QWORD PTR [rbx+0x58]
   14000d07d:	mov    DWORD PTR [rax],ecx
   14000d07f:	mov    rax,QWORD PTR [rbx+0x18]
   14000d083:	test   BYTE PTR [rbx+0x70],0x4
   14000d087:	mov    QWORD PTR [rax],rsi
   14000d08a:	mov    rax,QWORD PTR [rbx+0x38]
   14000d08e:	je     0x14000d0a1
   14000d090:	mov    QWORD PTR [rax],rbp
   14000d093:	mov    rax,QWORD PTR [rbx+0x50]
   14000d097:	sar    rsi,1
   14000d09a:	mov    DWORD PTR [rax],esi
   14000d09c:	jmp    0x14000d15a
   14000d0a1:	mov    QWORD PTR [rax],rsi
   14000d0a4:	mov    rax,QWORD PTR [rbx+0x50]
   14000d0a8:	mov    DWORD PTR [rax],0x1
   14000d0ae:	jmp    0x14000d15a
   14000d0b3:	mov    rax,QWORD PTR [rbx+0x68]
   14000d0b7:	sub    rax,r12
   14000d0ba:	sar    rax,1
   14000d0bd:	lea    rax,[rsi+rax*2]
   14000d0c1:	mov    QWORD PTR [rbx+0x68],rax
   14000d0c5:	mov    rax,QWORD PTR [rbx+0x40]
   14000d0c9:	mov    rcx,QWORD PTR [rax]
   14000d0cc:	sub    rcx,r12
   14000d0cf:	sar    rcx,1
   14000d0d2:	lea    rdx,[rsi+rcx*2]
   14000d0d6:	mov    rcx,QWORD PTR [rbx+0x20]
   14000d0da:	mov    rax,QWORD PTR [rcx]
   14000d0dd:	sub    rax,r12
   14000d0e0:	sar    rax,1
   14000d0e3:	lea    rax,[rsi+rax*2]
   14000d0e7:	mov    QWORD PTR [rcx],rax
   14000d0ea:	mov    rax,QWORD PTR [rbx+0x40]
   14000d0ee:	lea    rcx,[r14+r14*1]
   14000d0f2:	sub    rcx,rdx
   14000d0f5:	mov    QWORD PTR [rax],rdx
   14000d0f8:	mov    rax,QWORD PTR [rbx+0x58]
   14000d0fc:	add    rcx,rsi
   14000d0ff:	sar    rcx,1
   14000d102:	mov    DWORD PTR [rax],ecx
   14000d104:	test   BYTE PTR [rbx+0x70],0x4
   14000d108:	je     0x14000d123
   14000d10a:	mov    rax,QWORD PTR [rbx+0x18]
   14000d10e:	mov    QWORD PTR [rax],rsi
   14000d111:	mov    rax,QWORD PTR [rbx+0x38]
   14000d115:	sar    rsi,1
   14000d118:	mov    QWORD PTR [rax],rbp
   14000d11b:	mov    rax,QWORD PTR [rbx+0x50]
   14000d11f:	mov    DWORD PTR [rax],esi
   14000d121:	jmp    0x14000d15a
   14000d123:	mov    rax,QWORD PTR [rbx+0x40]
   14000d127:	mov    r8,QWORD PTR [rax]
   14000d12a:	mov    rax,QWORD PTR [rbx+0x38]
   14000d12e:	mov    rcx,QWORD PTR [rax]
   14000d131:	mov    rax,QWORD PTR [rbx+0x18]
   14000d135:	mov    QWORD PTR [rax],rsi
   14000d138:	mov    rax,QWORD PTR [rbx+0x38]
   14000d13c:	sub    rcx,r12
   14000d13f:	sar    rcx,1
   14000d142:	lea    rdx,[rsi+rcx*2]
   14000d146:	sub    r8,rdx
   14000d149:	mov    QWORD PTR [rax],rdx
   14000d14c:	mov    rax,QWORD PTR [rbx+0x50]
   14000d150:	add    r8,0x2
   14000d154:	sar    r8,1
   14000d157:	mov    DWORD PTR [rax],r8d
   14000d15a:	test   BYTE PTR [rbx+0x70],0x1
   14000d15e:	je     0x14000d168
   14000d160:	mov    rcx,r12
   14000d163:	call   0x140018a04
   14000d168:	mov    rax,QWORD PTR [rbx+0x58]
   14000d16c:	or     DWORD PTR [rbx+0x70],0x1
   14000d170:	mov    r12,QWORD PTR [rsp+0x28]
   14000d175:	dec    DWORD PTR [rax]
   14000d177:	mov    rcx,QWORD PTR [rbx+0x40]
   14000d17b:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d180:	mov    rdx,QWORD PTR [rcx]
   14000d183:	mov    r14,QWORD PTR [rsp+0x20]
   14000d188:	mov    rdi,QWORD PTR [rsp+0x30]
   14000d18d:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d192:	lea    rax,[rdx+0x2]
   14000d196:	mov    QWORD PTR [rcx],rax
   14000d199:	mov    WORD PTR [rdx],r15w
   14000d19d:	movzx  eax,r15w
   14000d1a1:	add    rsp,0x38
   14000d1a5:	pop    r15
   14000d1a7:	pop    rbx
   14000d1a8:	ret    
   14000d1a9:	call   0x140014018
   14000d1ae:	int3   
   14000d1af:	int3   
   14000d1b0:	mov    rax,QWORD PTR [rcx+0x38]
   14000d1b4:	mov    r9d,0xffff
   14000d1ba:	mov    r8,QWORD PTR [rax]
   14000d1bd:	test   r8,r8
   14000d1c0:	je     0x14000d203
   14000d1c2:	mov    rax,QWORD PTR [rcx+0x18]
   14000d1c6:	cmp    r8,QWORD PTR [rax]
   14000d1c9:	jbe    0x14000d203
   14000d1cb:	cmp    r9w,dx
   14000d1cf:	je     0x14000d1de
   14000d1d1:	cmp    dx,WORD PTR [r8-0x2]
   14000d1d6:	je     0x14000d1de
   14000d1d8:	test   BYTE PTR [rcx+0x70],0x2
   14000d1dc:	jne    0x14000d203
   14000d1de:	mov    rax,QWORD PTR [rcx+0x50]
   14000d1e2:	inc    DWORD PTR [rax]
   14000d1e4:	mov    rax,QWORD PTR [rcx+0x38]
   14000d1e8:	add    QWORD PTR [rax],0xfffffffffffffffe
   14000d1ec:	cmp    r9w,dx
   14000d1f0:	je     0x14000d200
   14000d1f2:	mov    rax,QWORD PTR [rcx+0x38]
   14000d1f6:	mov    rcx,QWORD PTR [rax]
   14000d1f9:	movzx  eax,dx
   14000d1fc:	mov    WORD PTR [rcx],dx
   14000d1ff:	ret    
   14000d200:	xor    eax,eax
   14000d202:	ret    
   14000d203:	movzx  eax,r9w
   14000d207:	ret    
   14000d208:	int3   
   14000d209:	int3   
   14000d20a:	int3   
   14000d20b:	int3   
   14000d20c:	int3   
   14000d20d:	int3   
   14000d20e:	int3   
   14000d20f:	int3   
   14000d210:	mov    r10,QWORD PTR [rcx+0x38]
   14000d214:	mov    r8,rcx
   14000d217:	mov    r9,QWORD PTR [r10]
   14000d21a:	test   r9,r9
   14000d21d:	je     0x14000d274
   14000d21f:	mov    r11,QWORD PTR [rcx+0x50]
   14000d223:	movsxd rcx,DWORD PTR [r11]
   14000d226:	lea    rdx,[r9+rcx*2]
   14000d22a:	cmp    r9,rdx
   14000d22d:	jae    0x14000d234
   14000d22f:	movzx  eax,WORD PTR [r9]
   14000d233:	ret    
   14000d234:	test   BYTE PTR [r8+0x70],0x4
   14000d239:	jne    0x14000d274
   14000d23b:	mov    rax,QWORD PTR [r8+0x40]
   14000d23f:	mov    rcx,QWORD PTR [rax]
   14000d242:	test   rcx,rcx
   14000d245:	je     0x14000d274
   14000d247:	cmp    rcx,r9
   14000d24a:	ja     0x14000d252
   14000d24c:	cmp    QWORD PTR [r8+0x68],r9
   14000d250:	jbe    0x14000d274
   14000d252:	cmp    QWORD PTR [r8+0x68],rcx
   14000d256:	jae    0x14000d25c
   14000d258:	mov    QWORD PTR [r8+0x68],rcx
   14000d25c:	mov    rax,QWORD PTR [r8+0x68]
   14000d260:	sub    rax,QWORD PTR [r10]
   14000d263:	sar    rax,1
   14000d266:	mov    DWORD PTR [r11],eax
   14000d269:	mov    rax,QWORD PTR [r8+0x38]
   14000d26d:	mov    rcx,QWORD PTR [rax]
   14000d270:	movzx  eax,WORD PTR [rcx]
   14000d273:	ret    
   14000d274:	mov    eax,0xffff
   14000d279:	ret    
   14000d27a:	int3   
   14000d27b:	int3   
   14000d27c:	int3   
   14000d27d:	int3   
   14000d27e:	int3   
   14000d27f:	int3   
   14000d280:	rex push rbx
   14000d282:	mov    r11,rcx
   14000d285:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d289:	mov    r10,r8
   14000d28c:	mov    rax,QWORD PTR [rcx]
   14000d28f:	mov    rbx,rdx
   14000d292:	test   rax,rax
   14000d295:	je     0x14000d2a1
   14000d297:	cmp    QWORD PTR [r11+0x68],rax
   14000d29b:	jae    0x14000d2a1
   14000d29d:	mov    QWORD PTR [r11+0x68],rax
   14000d2a1:	mov    r8d,DWORD PTR [rsp+0x30]
   14000d2a6:	mov    QWORD PTR [rsp+0x10],rsi
   14000d2ab:	test   r8b,0x1
   14000d2af:	je     0x14000d388
   14000d2b5:	mov    rax,QWORD PTR [r11+0x38]
   14000d2b9:	mov    rsi,QWORD PTR [rax]
   14000d2bc:	test   rsi,rsi
   14000d2bf:	je     0x14000d388
   14000d2c5:	cmp    r9d,0x2
   14000d2c9:	jne    0x14000d2de
   14000d2cb:	mov    rax,QWORD PTR [r11+0x18]
   14000d2cf:	mov    rcx,QWORD PTR [r11+0x68]
   14000d2d3:	sub    rcx,QWORD PTR [rax]
   14000d2d6:	sar    rcx,1
   14000d2d9:	add    r10,rcx
   14000d2dc:	jmp    0x14000d308
   14000d2de:	cmp    r9d,0x1
   14000d2e2:	jne    0x14000d2fc
   14000d2e4:	test   r8b,0x2
   14000d2e8:	jne    0x14000d301
   14000d2ea:	mov    rax,QWORD PTR [r11+0x18]
   14000d2ee:	mov    rcx,rsi
   14000d2f1:	sub    rcx,QWORD PTR [rax]
   14000d2f4:	sar    rcx,1
   14000d2f7:	add    r10,rcx
   14000d2fa:	jmp    0x14000d308
   14000d2fc:	test   r9d,r9d
   14000d2ff:	je     0x14000d308
   14000d301:	mov    r10,QWORD PTR [rip+0x223b0]        # 0x14002f6b8
   14000d308:	test   r10,r10
   14000d30b:	js     0x14000d40f
   14000d311:	mov    rax,QWORD PTR [r11+0x18]
   14000d315:	mov    rdx,QWORD PTR [rax]
   14000d318:	mov    rax,QWORD PTR [r11+0x68]
   14000d31c:	sub    rax,rdx
   14000d31f:	sar    rax,1
   14000d322:	cmp    r10,rax
   14000d325:	jg     0x14000d40f
   14000d32b:	mov    rax,QWORD PTR [r11+0x50]
   14000d32f:	sub    rdx,rsi
   14000d332:	sar    rdx,1
   14000d335:	add    edx,r10d
   14000d338:	sub    DWORD PTR [rax],edx
   14000d33a:	mov    rcx,QWORD PTR [r11+0x38]
   14000d33e:	movsxd rax,edx
   14000d341:	add    rax,rax
   14000d344:	add    QWORD PTR [rcx],rax
   14000d347:	test   r8b,0x2
   14000d34b:	je     0x14000d423
   14000d351:	mov    r9,QWORD PTR [r11+0x40]
   14000d355:	mov    r8,QWORD PTR [r9]
   14000d358:	test   r8,r8
   14000d35b:	je     0x14000d423
   14000d361:	mov    rax,QWORD PTR [r11+0x38]
   14000d365:	mov    rdx,QWORD PTR [rax]
   14000d368:	mov    rax,QWORD PTR [r11+0x58]
   14000d36c:	movsxd rcx,DWORD PTR [rax]
   14000d36f:	mov    QWORD PTR [r9],rdx
   14000d372:	mov    rax,QWORD PTR [r11+0x58]
   14000d376:	lea    r8,[r8+rcx*2]
   14000d37a:	sub    r8,rdx
   14000d37d:	sar    r8,1
   14000d380:	mov    DWORD PTR [rax],r8d
   14000d383:	jmp    0x14000d423
   14000d388:	test   r8b,0x2
   14000d38c:	je     0x14000d418
   14000d392:	mov    r8,QWORD PTR [rcx]
   14000d395:	test   r8,r8
   14000d398:	je     0x14000d418
   14000d39a:	cmp    r9d,0x2
   14000d39e:	jne    0x14000d3b3
   14000d3a0:	mov    rax,QWORD PTR [r11+0x18]
   14000d3a4:	mov    rcx,QWORD PTR [r11+0x68]
   14000d3a8:	sub    rcx,QWORD PTR [rax]
   14000d3ab:	sar    rcx,1
   14000d3ae:	add    r10,rcx
   14000d3b1:	jmp    0x14000d3d6
   14000d3b3:	cmp    r9d,0x1
   14000d3b7:	jne    0x14000d3cb
   14000d3b9:	mov    rax,QWORD PTR [r11+0x18]
   14000d3bd:	mov    rcx,r8
   14000d3c0:	sub    rcx,QWORD PTR [rax]
   14000d3c3:	sar    rcx,1
   14000d3c6:	add    r10,rcx
   14000d3c9:	jmp    0x14000d3d6
   14000d3cb:	test   r9d,r9d
   14000d3ce:	cmovne r10,QWORD PTR [rip+0x222e2]        # 0x14002f6b8
   14000d3d6:	test   r10,r10
   14000d3d9:	js     0x14000d40f
   14000d3db:	mov    rax,QWORD PTR [r11+0x18]
   14000d3df:	mov    rdx,QWORD PTR [rax]
   14000d3e2:	mov    rax,QWORD PTR [r11+0x68]
   14000d3e6:	sub    rax,rdx
   14000d3e9:	sar    rax,1
   14000d3ec:	cmp    r10,rax
   14000d3ef:	jg     0x14000d40f
   14000d3f1:	mov    rax,QWORD PTR [r11+0x58]
   14000d3f5:	sub    rdx,r8
   14000d3f8:	sar    rdx,1
   14000d3fb:	add    edx,r10d
   14000d3fe:	sub    DWORD PTR [rax],edx
   14000d400:	mov    rcx,QWORD PTR [r11+0x40]
   14000d404:	movsxd rax,edx
   14000d407:	add    rax,rax
   14000d40a:	add    QWORD PTR [rcx],rax
   14000d40d:	jmp    0x14000d423
   14000d40f:	mov    r10,QWORD PTR [rip+0x222a2]        # 0x14002f6b8
   14000d416:	jmp    0x14000d423
   14000d418:	test   r10,r10
   14000d41b:	cmovne r10,QWORD PTR [rip+0x22295]        # 0x14002f6b8
   14000d423:	mov    rsi,QWORD PTR [rsp+0x10]
   14000d428:	xor    eax,eax
   14000d42a:	mov    QWORD PTR [rbx],r10
   14000d42d:	mov    QWORD PTR [rbx+0x8],rax
   14000d431:	mov    DWORD PTR [rbx+0x10],eax
   14000d434:	mov    rax,rbx
   14000d437:	pop    rbx
   14000d438:	ret    
   14000d439:	int3   
   14000d43a:	int3   
   14000d43b:	int3   
   14000d43c:	int3   
   14000d43d:	int3   
   14000d43e:	int3   
   14000d43f:	int3   
   14000d440:	mov    QWORD PTR [rsp+0x8],rbx
   14000d445:	mov    r10,QWORD PTR [r8+0x8]
   14000d449:	mov    rbx,rdx
   14000d44c:	mov    rdx,QWORD PTR [rcx+0x40]
   14000d450:	mov    rax,QWORD PTR [rdx]
   14000d453:	add    r10,QWORD PTR [r8]
   14000d456:	mov    r11,rcx
   14000d459:	test   rax,rax
   14000d45c:	je     0x14000d468
   14000d45e:	cmp    QWORD PTR [rcx+0x68],rax
   14000d462:	jae    0x14000d468
   14000d464:	mov    QWORD PTR [rcx+0x68],rax
   14000d468:	mov    rcx,QWORD PTR [rip+0x22249]        # 0x14002f6b8
   14000d46f:	cmp    r10,rcx
   14000d472:	je     0x14000d54d
   14000d478:	test   r9b,0x1
   14000d47c:	je     0x14000d503
   14000d482:	mov    rax,QWORD PTR [r11+0x38]
   14000d486:	mov    r8,QWORD PTR [rax]
   14000d489:	test   r8,r8
   14000d48c:	je     0x14000d503
   14000d48e:	test   r10,r10
   14000d491:	js     0x14000d54a
   14000d497:	mov    rax,QWORD PTR [r11+0x18]
   14000d49b:	mov    rdx,QWORD PTR [rax]
   14000d49e:	mov    rax,QWORD PTR [r11+0x68]
   14000d4a2:	sub    rax,rdx
   14000d4a5:	sar    rax,1
   14000d4a8:	cmp    r10,rax
   14000d4ab:	jg     0x14000d54a
   14000d4b1:	mov    rax,QWORD PTR [r11+0x50]
   14000d4b5:	sub    rdx,r8
   14000d4b8:	sar    rdx,1
   14000d4bb:	add    edx,r10d
   14000d4be:	sub    DWORD PTR [rax],edx
   14000d4c0:	mov    rcx,QWORD PTR [r11+0x38]
   14000d4c4:	movsxd rax,edx
   14000d4c7:	add    rax,rax
   14000d4ca:	add    QWORD PTR [rcx],rax
   14000d4cd:	test   r9b,0x2
   14000d4d1:	je     0x14000d54d
   14000d4d3:	mov    r9,QWORD PTR [r11+0x40]
   14000d4d7:	mov    r8,QWORD PTR [r9]
   14000d4da:	test   r8,r8
   14000d4dd:	je     0x14000d54d
   14000d4df:	mov    rax,QWORD PTR [r11+0x38]
   14000d4e3:	mov    rdx,QWORD PTR [rax]
   14000d4e6:	mov    rax,QWORD PTR [r11+0x58]
   14000d4ea:	movsxd rcx,DWORD PTR [rax]
   14000d4ed:	mov    QWORD PTR [r9],rdx
   14000d4f0:	mov    rax,QWORD PTR [r11+0x58]
   14000d4f4:	lea    r8,[r8+rcx*2]
   14000d4f8:	sub    r8,rdx
   14000d4fb:	sar    r8,1
   14000d4fe:	mov    DWORD PTR [rax],r8d
   14000d501:	jmp    0x14000d54d
   14000d503:	test   r9b,0x2
   14000d507:	je     0x14000d54a
   14000d509:	mov    r8,QWORD PTR [rdx]
   14000d50c:	test   r8,r8
   14000d50f:	je     0x14000d54a
   14000d511:	test   r10,r10
   14000d514:	js     0x14000d54a
   14000d516:	mov    rax,QWORD PTR [r11+0x18]
   14000d51a:	mov    rdx,QWORD PTR [rax]
   14000d51d:	mov    rax,QWORD PTR [r11+0x68]
   14000d521:	sub    rax,rdx
   14000d524:	sar    rax,1
   14000d527:	cmp    r10,rax
   14000d52a:	jg     0x14000d54a
   14000d52c:	mov    rax,QWORD PTR [r11+0x58]
   14000d530:	sub    rdx,r8
   14000d533:	sar    rdx,1
   14000d536:	add    edx,r10d
   14000d539:	sub    DWORD PTR [rax],edx
   14000d53b:	mov    rcx,QWORD PTR [r11+0x40]
   14000d53f:	movsxd rax,edx
   14000d542:	add    rax,rax
   14000d545:	add    QWORD PTR [rcx],rax
   14000d548:	jmp    0x14000d54d
   14000d54a:	mov    r10,rcx
   14000d54d:	xor    eax,eax
   14000d54f:	mov    QWORD PTR [rbx],r10
   14000d552:	mov    QWORD PTR [rbx+0x8],rax
   14000d556:	mov    DWORD PTR [rbx+0x10],eax
   14000d559:	mov    rax,rbx
   14000d55c:	mov    rbx,QWORD PTR [rsp+0x8]
   14000d561:	ret    
   14000d562:	int3   
   14000d563:	int3   
   14000d564:	int3   
   14000d565:	int3   
   14000d566:	int3   
   14000d567:	int3   
   14000d568:	int3   
   14000d569:	int3   
   14000d56a:	int3   
   14000d56b:	int3   
   14000d56c:	int3   
   14000d56d:	int3   
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	mov    QWORD PTR [rsp+0x8],rbx
   14000d575:	mov    QWORD PTR [rsp+0x10],rsi
   14000d57a:	push   rdi
   14000d57b:	sub    rsp,0x20
   14000d57f:	lea    rsi,[rcx-0x98]
   14000d586:	mov    edi,edx
   14000d588:	lea    rcx,[rsi+0x98]
   14000d58f:	call   0x14000cce0
   14000d594:	lea    rax,[rip+0x2c6dd]        # 0x140039c78
   14000d59b:	lea    rcx,[rsi+0x98]
   14000d5a2:	mov    QWORD PTR [rsi+0x98],rax
   14000d5a9:	call   0x1400140d4
   14000d5ae:	test   dil,0x1
   14000d5b2:	je     0x14000d5bc
   14000d5b4:	mov    rcx,rsi
   14000d5b7:	call   0x140018a04
   14000d5bc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5c1:	mov    rax,rsi
   14000d5c4:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d5c9:	add    rsp,0x20
   14000d5cd:	pop    rdi
   14000d5ce:	ret    
   14000d5cf:	int3   
   14000d5d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5d5:	push   rdi
   14000d5d6:	sub    rsp,0x20
   14000d5da:	lea    rdi,[rcx-0x20]
   14000d5de:	mov    ebx,edx
   14000d5e0:	mov    rcx,rdi
   14000d5e3:	call   0x14000d640
   14000d5e8:	test   bl,0x1
   14000d5eb:	je     0x14000d5f5
   14000d5ed:	mov    rcx,rdi
   14000d5f0:	call   0x140018a04
   14000d5f5:	mov    rax,rdi
   14000d5f8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5fd:	add    rsp,0x20
   14000d601:	pop    rdi
   14000d602:	ret    
   14000d603:	int3   
   14000d604:	int3   
   14000d605:	int3   
   14000d606:	int3   
   14000d607:	int3   
   14000d608:	int3   
   14000d609:	int3   
   14000d60a:	int3   
   14000d60b:	int3   
   14000d60c:	int3   
   14000d60d:	int3   
   14000d60e:	int3   
   14000d60f:	int3   
   14000d610:	mov    QWORD PTR [rsp+0x8],rbx
   14000d615:	push   rdi
   14000d616:	sub    rsp,0x20
   14000d61a:	mov    ebx,edx
   14000d61c:	mov    rdi,rcx
   14000d61f:	call   0x14000ce30
   14000d624:	test   bl,0x1
   14000d627:	je     0x14000d631
   14000d629:	mov    rcx,rdi
   14000d62c:	call   0x140018a04
   14000d631:	mov    rax,rdi
   14000d634:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d639:	add    rsp,0x20
   14000d63d:	pop    rdi
   14000d63e:	ret    
   14000d63f:	int3   
   14000d640:	mov    rax,QWORD PTR [rcx]
   14000d643:	lea    r9,[rcx+0x20]
   14000d647:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d64b:	lea    rax,[rip+0x2c4e6]        # 0x140039b38
   14000d652:	mov    QWORD PTR [rcx+r9*1-0x20],rax
   14000d657:	mov    rax,QWORD PTR [r9-0x20]
   14000d65b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d65f:	lea    edx,[rcx-0x20]
   14000d662:	mov    DWORD PTR [rcx+r9*1-0x24],edx
   14000d667:	mov    rax,QWORD PTR [r9-0x10]
   14000d66b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d66f:	lea    rax,[rip+0x2c4a2]        # 0x140039b18
   14000d676:	mov    QWORD PTR [rcx+r9*1-0x10],rax
   14000d67b:	mov    rax,QWORD PTR [r9-0x10]
   14000d67f:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d683:	lea    edx,[rcx-0x10]
   14000d686:	mov    DWORD PTR [rcx+r9*1-0x14],edx
   14000d68b:	mov    rax,QWORD PTR [r9-0x20]
   14000d68f:	mov    rcx,r9
   14000d692:	movsxd rdx,DWORD PTR [rax+0x4]
   14000d696:	lea    rax,[rip+0x2c48b]        # 0x140039b28
   14000d69d:	mov    QWORD PTR [rdx+r9*1-0x20],rax
   14000d6a2:	mov    rax,QWORD PTR [r9-0x20]
   14000d6a6:	movsxd rdx,DWORD PTR [rax+0x4]
   14000d6aa:	lea    rax,[rip+0x2c5c7]        # 0x140039c78
   14000d6b1:	lea    r8d,[rdx-0x18]
   14000d6b5:	mov    DWORD PTR [rdx+r9*1-0x24],r8d
   14000d6ba:	mov    QWORD PTR [r9],rax
   14000d6bd:	jmp    0x1400140d4
   14000d6c2:	int3   
   14000d6c3:	int3   
   14000d6c4:	int3   
   14000d6c5:	int3   
   14000d6c6:	int3   
   14000d6c7:	int3   
   14000d6c8:	int3   
   14000d6c9:	int3   
   14000d6ca:	int3   
   14000d6cb:	int3   
   14000d6cc:	int3   
   14000d6cd:	int3   
   14000d6ce:	int3   
   14000d6cf:	int3   
   14000d6d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d6d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000d6da:	push   rdi
   14000d6db:	sub    rsp,0x20
   14000d6df:	mov    rax,QWORD PTR [rcx+0x10]
   14000d6e3:	mov    rbp,rdx
   14000d6e6:	mov    rdi,rcx
   14000d6e9:	test   rax,rax
   14000d6ec:	je     0x14000d764
   14000d6ee:	cmp    rax,0xffffffffffffffff
   14000d6f2:	jbe    0x14000d6fa
   14000d6f4:	or     rax,0xffffffffffffffff
   14000d6f8:	jmp    0x14000d6fd
   14000d6fa:	dec    rax
   14000d6fd:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d702:	jb     0x14000d707
   14000d704:	mov    rcx,QWORD PTR [rcx]
   14000d707:	lea    rbx,[rcx+rax*2]
   14000d70b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d710:	movzx  edx,WORD PTR [rbx]
   14000d713:	mov    ecx,0x1
   14000d718:	mov    rax,rbp
   14000d71b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d720:	cmp    WORD PTR [rax],dx
   14000d723:	je     0x14000d751
   14000d725:	add    rax,0x2
   14000d729:	dec    rcx
   14000d72c:	jne    0x14000d720
   14000d72e:	cmp    QWORD PTR [rdi+0x18],0x8
   14000d733:	jb     0x14000d738
   14000d735:	mov    rdi,QWORD PTR [rdi]
   14000d738:	sub    rbx,rdi
   14000d73b:	sar    rbx,1
   14000d73e:	mov    rax,rbx
   14000d741:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d746:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d74b:	add    rsp,0x20
   14000d74f:	pop    rdi
   14000d750:	ret    
   14000d751:	mov    rcx,rdi
   14000d754:	call   0x140003a30
   14000d759:	cmp    rbx,rax
   14000d75c:	je     0x14000d764
   14000d75e:	sub    rbx,0x2
   14000d762:	jmp    0x14000d710
   14000d764:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d769:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d76e:	or     rax,0xffffffffffffffff
   14000d772:	add    rsp,0x20
   14000d776:	pop    rdi
   14000d777:	ret    
   14000d778:	int3   
   14000d779:	int3   
   14000d77a:	int3   
   14000d77b:	int3   
   14000d77c:	int3   
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	mov    DWORD PTR [rsp+0x18],r8d
   14000d785:	mov    QWORD PTR [rsp+0x8],rcx
   14000d78a:	push   rbx
   14000d78b:	sub    rsp,0x30
   14000d78f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d798:	mov    rbx,rcx
   14000d79b:	xor    ecx,ecx
   14000d79d:	mov    DWORD PTR [rsp+0x50],ecx
   14000d7a1:	mov    rax,QWORD PTR [rbx]
   14000d7a4:	movsxd r8,DWORD PTR [rax+0x4]
   14000d7a8:	lea    rax,[rip+0x2c379]        # 0x140039b28
   14000d7af:	mov    QWORD PTR [r8+rbx*1],rax
   14000d7b3:	mov    rax,QWORD PTR [rbx]
   14000d7b6:	movsxd r8,DWORD PTR [rax+0x4]
   14000d7ba:	lea    r9d,[r8-0x18]
   14000d7be:	mov    DWORD PTR [r8+rbx*1-0x4],r9d
   14000d7c3:	mov    QWORD PTR [rbx+0x8],rcx
   14000d7c7:	mov    rax,QWORD PTR [rbx]
   14000d7ca:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d7ce:	add    rcx,rbx
   14000d7d1:	call   0x14000f9a0
   14000d7d6:	nop
   14000d7d7:	mov    rax,QWORD PTR [rbx+0x10]
   14000d7db:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d7df:	lea    rax,[rip+0x2c332]        # 0x140039b18
   14000d7e6:	mov    QWORD PTR [rcx+rbx*1+0x10],rax
   14000d7eb:	mov    rax,QWORD PTR [rbx+0x10]
   14000d7ef:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d7f3:	lea    edx,[rcx-0x10]
   14000d7f6:	mov    DWORD PTR [rcx+rbx*1+0xc],edx
   14000d7fa:	mov    rax,QWORD PTR [rbx]
   14000d7fd:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d801:	lea    rax,[rip+0x2c330]        # 0x140039b38
   14000d808:	mov    QWORD PTR [rcx+rbx*1],rax
   14000d80c:	mov    rax,QWORD PTR [rbx]
   14000d80f:	movsxd rcx,DWORD PTR [rax+0x4]
   14000d813:	lea    edx,[rcx-0x20]
   14000d816:	mov    DWORD PTR [rcx+rbx*1-0x4],edx
   14000d81a:	mov    rax,rbx
   14000d81d:	add    rsp,0x30
   14000d821:	pop    rbx
   14000d822:	ret    
   14000d823:	int3   
   14000d824:	int3   
   14000d825:	int3   
   14000d826:	int3   
   14000d827:	int3   
   14000d828:	int3   
   14000d829:	int3   
   14000d82a:	int3   
   14000d82b:	int3   
   14000d82c:	int3   
   14000d82d:	int3   
   14000d82e:	int3   
   14000d82f:	int3   
   14000d830:	rex push rbp
   14000d832:	push   rbx
   14000d833:	push   rsi
   14000d834:	push   rdi
   14000d835:	push   r12
   14000d837:	push   r13
   14000d839:	push   r14
   14000d83b:	push   r15
   14000d83d:	lea    rbp,[rsp-0x7]
   14000d842:	sub    rsp,0xc8
   14000d849:	mov    QWORD PTR [rbp-0x61],0xfffffffffffffffe
   14000d851:	mov    rax,QWORD PTR [rip+0x33df8]        # 0x140041650
   14000d858:	xor    rax,rsp
   14000d85b:	mov    QWORD PTR [rbp-0x9],rax
   14000d85f:	mov    r13,r9
   14000d862:	mov    r14,r8
   14000d865:	mov    r12,rdx
   14000d868:	mov    r15,rcx
   14000d86b:	mov    rbx,QWORD PTR [rbp+0x6f]
   14000d86f:	mov    rsi,QWORD PTR [rbp+0x77]
   14000d873:	mov    rax,QWORD PTR [rbp+0x7f]
   14000d877:	mov    QWORD PTR [rsp+0x30],rax
   14000d87c:	or     rdi,0xffffffffffffffff
   14000d880:	mov    rcx,rbx
   14000d883:	test   DWORD PTR [rbx+0x18],0x4000
   14000d88a:	je     0x14000d994
   14000d890:	lea    rdx,[rbp-0x51]
   14000d894:	call   0x140012a40
   14000d899:	nop
   14000d89a:	mov    rcx,rax
   14000d89d:	call   0x140011a50
   14000d8a2:	mov    rbx,rax
   14000d8a5:	mov    rcx,QWORD PTR [rbp-0x51]
   14000d8a9:	test   rcx,rcx
   14000d8ac:	je     0x14000d8c5
   14000d8ae:	mov    rax,QWORD PTR [rcx]
   14000d8b1:	call   QWORD PTR [rax+0x10]
   14000d8b4:	test   rax,rax
   14000d8b7:	je     0x14000d8c5
   14000d8b9:	mov    r8,QWORD PTR [rax]
   14000d8bc:	lea    edx,[rdi+0x2]
   14000d8bf:	mov    rcx,rax
   14000d8c2:	call   QWORD PTR [r8]
   14000d8c5:	mov    QWORD PTR [rbp-0x31],0x7
   14000d8cd:	xor    eax,eax
   14000d8cf:	mov    QWORD PTR [rbp-0x39],rax
   14000d8d3:	mov    WORD PTR [rbp-0x49],ax
   14000d8d7:	xor    r8d,r8d
   14000d8da:	lea    edx,[rax+0x1]
   14000d8dd:	lea    rcx,[rbp-0x49]
   14000d8e1:	call   0x1400113c0
   14000d8e6:	nop
   14000d8e7:	lea    rdx,[rsp+0x40]
   14000d8ec:	mov    rcx,rbx
   14000d8ef:	call   0x1400113a0
   14000d8f4:	nop
   14000d8f5:	mov    r9,rdi
   14000d8f8:	xor    r8d,r8d
   14000d8fb:	mov    rdx,rax
   14000d8fe:	lea    rcx,[rbp-0x49]
   14000d902:	call   0x1400080a0
   14000d907:	nop
   14000d908:	cmp    QWORD PTR [rbp-0x69],0x8
   14000d90d:	jb     0x14000d919
   14000d90f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000d914:	call   0x140018a04
   14000d919:	xor    r8d,r8d
   14000d91c:	lea    edx,[r8+0x1]
   14000d920:	lea    rcx,[rbp-0x49]
   14000d924:	call   0x140007a30
   14000d929:	lea    rdx,[rsp+0x40]
   14000d92e:	mov    rcx,rbx
   14000d931:	call   0x140011380
   14000d936:	nop
   14000d937:	mov    r9,rdi
   14000d93a:	xor    r8d,r8d
   14000d93d:	mov    rdx,rax
   14000d940:	lea    rcx,[rbp-0x49]
   14000d944:	call   0x1400080a0
   14000d949:	nop
   14000d94a:	cmp    QWORD PTR [rbp-0x69],0x8
   14000d94f:	jb     0x14000d95b
   14000d951:	mov    rcx,QWORD PTR [rsp+0x40]
   14000d956:	call   0x140018a04
   14000d95b:	lea    r9,[rbp-0x49]
   14000d95f:	mov    r15,QWORD PTR [rbp-0x49]
   14000d963:	cmp    QWORD PTR [rbp-0x31],0x8
   14000d968:	cmovae r9,r15
   14000d96c:	mov    r8d,0x2
   14000d972:	mov    rdx,r13
   14000d975:	mov    rcx,r14
   14000d978:	call   0x140010d70
   14000d97d:	mov    edi,eax
   14000d97f:	cmp    QWORD PTR [rbp-0x31],0x8
   14000d984:	jb     0x14000da13
   14000d98a:	mov    rcx,r15
   14000d98d:	call   0x140018a04
   14000d992:	jmp    0x14000da13
   14000d994:	xor    eax,eax
   14000d996:	mov    DWORD PTR [rbp-0x51],eax
   14000d999:	lea    rdx,[rsp+0x38]
   14000d99e:	call   0x140012a40
   14000d9a3:	mov    rdx,rax
   14000d9a6:	mov    eax,DWORD PTR [rbx+0x18]
   14000d9a9:	mov    QWORD PTR [rsp+0x28],rdx
   14000d9ae:	mov    DWORD PTR [rsp+0x20],eax
   14000d9b2:	mov    r9,r13
   14000d9b5:	mov    r8,r14
   14000d9b8:	lea    rdx,[rbp-0x29]
   14000d9bc:	mov    rcx,r15
   14000d9bf:	call   0x14000e750
   14000d9c4:	mov    r8d,eax
   14000d9c7:	lea    r9,[rbp-0x51]
   14000d9cb:	lea    rdx,[rbp-0x59]
   14000d9cf:	lea    rcx,[rbp-0x29]
   14000d9d3:	call   0x140014b60
   14000d9d8:	mov    ebx,eax
   14000d9da:	mov    rcx,QWORD PTR [rsp+0x38]
   14000d9df:	test   rcx,rcx
   14000d9e2:	je     0x14000d9fd
   14000d9e4:	mov    rax,QWORD PTR [rcx]
   14000d9e7:	call   QWORD PTR [rax+0x10]
   14000d9ea:	test   rax,rax
   14000d9ed:	je     0x14000d9fd
   14000d9ef:	mov    r8,QWORD PTR [rax]
   14000d9f2:	mov    edx,0x1
   14000d9f7:	mov    rcx,rax
   14000d9fa:	call   QWORD PTR [r8]
   14000d9fd:	lea    rax,[rbp-0x29]
   14000da01:	cmp    QWORD PTR [rbp-0x59],rax
   14000da05:	je     0x14000da13
   14000da07:	cmp    DWORD PTR [rbp-0x51],0x0
   14000da0b:	jne    0x14000da13
   14000da0d:	cmp    ebx,0x1
   14000da10:	cmovbe edi,ebx
   14000da13:	mov    rdx,r13
   14000da16:	mov    rcx,r14
   14000da19:	call   0x1400110e0
   14000da1e:	test   al,al
   14000da20:	je     0x14000da25
   14000da22:	or     DWORD PTR [rsi],0x1
   14000da25:	test   edi,edi
   14000da27:	jns    0x14000da2e
   14000da29:	or     DWORD PTR [rsi],0x2
   14000da2c:	jmp    0x14000da38
   14000da2e:	setne  cl
   14000da31:	mov    rax,QWORD PTR [rsp+0x30]
   14000da36:	mov    BYTE PTR [rax],cl
   14000da38:	movups xmm0,XMMWORD PTR [r14]
   14000da3c:	movups XMMWORD PTR [r12],xmm0
   14000da41:	mov    rax,r12
   14000da44:	mov    rcx,QWORD PTR [rbp-0x9]
   14000da48:	xor    rcx,rsp
   14000da4b:	call   0x1400187d0
   14000da50:	add    rsp,0xc8
   14000da57:	pop    r15
   14000da59:	pop    r14
   14000da5b:	pop    r13
   14000da5d:	pop    r12
   14000da5f:	pop    rdi
   14000da60:	pop    rsi
   14000da61:	pop    rbx
   14000da62:	pop    rbp
   14000da63:	ret    
   14000da64:	int3   
   14000da65:	int3   
   14000da66:	int3   
   14000da67:	int3   
   14000da68:	int3   
   14000da69:	int3   
   14000da6a:	int3   
   14000da6b:	int3   
   14000da6c:	int3   
   14000da6d:	int3   
   14000da6e:	int3   
   14000da6f:	int3   
   14000da70:	rex push rbx
   14000da72:	push   rbp
   14000da73:	push   rsi
   14000da74:	push   rdi
   14000da75:	push   r12
   14000da77:	push   r14
   14000da79:	push   r15
   14000da7b:	sub    rsp,0x80
   14000da82:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000da8b:	mov    rax,QWORD PTR [rip+0x33bbe]        # 0x140041650
   14000da92:	xor    rax,rsp
   14000da95:	mov    QWORD PTR [rsp+0x70],rax
   14000da9a:	mov    r12,r9
   14000da9d:	mov    r14,r8
   14000daa0:	mov    rbp,rdx
   14000daa3:	mov    rdi,rcx
   14000daa6:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000daae:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000dab6:	mov    r15,QWORD PTR [rsp+0xf0]
   14000dabe:	mov    DWORD PTR [rsp+0x48],0x0
   14000dac6:	lea    rdx,[rsp+0x30]
   14000dacb:	mov    rcx,rbx
   14000dace:	call   0x140012a40
   14000dad3:	mov    rdx,rax
   14000dad6:	mov    eax,DWORD PTR [rbx+0x18]
   14000dad9:	mov    QWORD PTR [rsp+0x28],rdx
   14000dade:	mov    DWORD PTR [rsp+0x20],eax
   14000dae2:	mov    r9,r12
   14000dae5:	mov    r8,r14
   14000dae8:	lea    rdx,[rsp+0x50]
   14000daed:	mov    rcx,rdi
   14000daf0:	call   0x14000e750
   14000daf5:	mov    ebx,eax
   14000daf7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000dafc:	test   rcx,rcx
   14000daff:	je     0x14000db19
   14000db01:	mov    rax,QWORD PTR [rcx]
   14000db04:	call   QWORD PTR [rax+0x10]
   14000db07:	mov    rcx,rax
   14000db0a:	test   rax,rax
   14000db0d:	je     0x14000db19
   14000db0f:	mov    rax,QWORD PTR [rax]
   14000db12:	mov    edx,0x1
   14000db17:	call   QWORD PTR [rax]
   14000db19:	lea    rdi,[rsp+0x51]
   14000db1e:	lea    rax,[rsp+0x50]
   14000db23:	cmp    BYTE PTR [rsp+0x50],0x2d
   14000db28:	cmovne rdi,rax
   14000db2c:	lea    r9,[rsp+0x48]
   14000db31:	mov    r8d,ebx
   14000db34:	lea    rdx,[rsp+0x40]
   14000db39:	mov    rcx,rdi
   14000db3c:	call   0x140014b60
   14000db41:	mov    ebx,eax
   14000db43:	mov    rdx,r12
   14000db46:	mov    rcx,r14
   14000db49:	call   0x1400110e0
   14000db4e:	test   al,al
   14000db50:	je     0x14000db55
   14000db52:	or     DWORD PTR [rsi],0x1
   14000db55:	cmp    QWORD PTR [rsp+0x40],rdi
   14000db5a:	je     0x14000db7a
   14000db5c:	cmp    DWORD PTR [rsp+0x48],0x0
   14000db61:	jne    0x14000db7a
   14000db63:	cmp    ebx,0xffff
   14000db69:	ja     0x14000db7a
   14000db6b:	cmp    BYTE PTR [rsp+0x50],0x2d
   14000db70:	jne    0x14000db74
   14000db72:	neg    ebx
   14000db74:	mov    WORD PTR [r15],bx
   14000db78:	jmp    0x14000db7d
   14000db7a:	or     DWORD PTR [rsi],0x2
   14000db7d:	movups xmm0,XMMWORD PTR [r14]
   14000db81:	movups XMMWORD PTR [rbp+0x0],xmm0
   14000db85:	mov    rax,rbp
   14000db88:	mov    rcx,QWORD PTR [rsp+0x70]
   14000db8d:	xor    rcx,rsp
   14000db90:	call   0x1400187d0
   14000db95:	add    rsp,0x80
   14000db9c:	pop    r15
   14000db9e:	pop    r14
   14000dba0:	pop    r12
   14000dba2:	pop    rdi
   14000dba3:	pop    rsi
   14000dba4:	pop    rbp
   14000dba5:	pop    rbx
   14000dba6:	ret    
   14000dba7:	int3   
   14000dba8:	int3   
   14000dba9:	int3   
   14000dbaa:	int3   
   14000dbab:	int3   
   14000dbac:	int3   
   14000dbad:	int3   
   14000dbae:	int3   
   14000dbaf:	int3   
   14000dbb0:	rex push rbx
   14000dbb2:	push   rbp
   14000dbb3:	push   rsi
   14000dbb4:	push   rdi
   14000dbb5:	push   r12
   14000dbb7:	push   r14
   14000dbb9:	push   r15
   14000dbbb:	sub    rsp,0x80
   14000dbc2:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000dbcb:	mov    rax,QWORD PTR [rip+0x33a7e]        # 0x140041650
   14000dbd2:	xor    rax,rsp
   14000dbd5:	mov    QWORD PTR [rsp+0x70],rax
   14000dbda:	mov    r12,r9
   14000dbdd:	mov    r14,r8
   14000dbe0:	mov    rbp,rdx
   14000dbe3:	mov    rdi,rcx
   14000dbe6:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000dbee:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000dbf6:	mov    r15,QWORD PTR [rsp+0xf0]
   14000dbfe:	mov    DWORD PTR [rsp+0x48],0x0
   14000dc06:	lea    rdx,[rsp+0x30]
   14000dc0b:	mov    rcx,rbx
   14000dc0e:	call   0x140012a40
   14000dc13:	mov    rdx,rax
   14000dc16:	mov    eax,DWORD PTR [rbx+0x18]
   14000dc19:	mov    QWORD PTR [rsp+0x28],rdx
   14000dc1e:	mov    DWORD PTR [rsp+0x20],eax
   14000dc22:	mov    r9,r12
   14000dc25:	mov    r8,r14
   14000dc28:	lea    rdx,[rsp+0x50]
   14000dc2d:	mov    rcx,rdi
   14000dc30:	call   0x14000e750
   14000dc35:	mov    ebx,eax
   14000dc37:	mov    rcx,QWORD PTR [rsp+0x30]
   14000dc3c:	test   rcx,rcx
   14000dc3f:	je     0x14000dc59
   14000dc41:	mov    rax,QWORD PTR [rcx]
   14000dc44:	call   QWORD PTR [rax+0x10]
   14000dc47:	mov    rcx,rax
   14000dc4a:	test   rax,rax
   14000dc4d:	je     0x14000dc59
   14000dc4f:	mov    rax,QWORD PTR [rax]
   14000dc52:	mov    edx,0x1
   14000dc57:	call   QWORD PTR [rax]
   14000dc59:	lea    rdi,[rsp+0x51]
   14000dc5e:	lea    rax,[rsp+0x50]
   14000dc63:	cmp    BYTE PTR [rsp+0x50],0x2d
   14000dc68:	cmovne rdi,rax
   14000dc6c:	lea    r9,[rsp+0x48]
   14000dc71:	mov    r8d,ebx
   14000dc74:	lea    rdx,[rsp+0x40]
   14000dc79:	mov    rcx,rdi
   14000dc7c:	call   0x140014b60
   14000dc81:	mov    ebx,eax
   14000dc83:	mov    rdx,r12
   14000dc86:	mov    rcx,r14
   14000dc89:	call   0x1400110e0
   14000dc8e:	test   al,al
   14000dc90:	je     0x14000dc95
   14000dc92:	or     DWORD PTR [rsi],0x1
   14000dc95:	cmp    QWORD PTR [rsp+0x40],rdi
   14000dc9a:	je     0x14000dcb6
   14000dc9c:	cmp    DWORD PTR [rsp+0x48],0x0
   14000dca1:	jne    0x14000dcb6
   14000dca3:	cmp    ebx,0xffffffff
   14000dca6:	ja     0x14000dcb6
   14000dca8:	cmp    BYTE PTR [rsp+0x50],0x2d
   14000dcad:	jne    0x14000dcb1
   14000dcaf:	neg    ebx
   14000dcb1:	mov    DWORD PTR [r15],ebx
   14000dcb4:	jmp    0x14000dcb9
   14000dcb6:	or     DWORD PTR [rsi],0x2
   14000dcb9:	movups xmm0,XMMWORD PTR [r14]
   14000dcbd:	movups XMMWORD PTR [rbp+0x0],xmm0
   14000dcc1:	mov    rax,rbp
   14000dcc4:	mov    rcx,QWORD PTR [rsp+0x70]
   14000dcc9:	xor    rcx,rsp
   14000dccc:	call   0x1400187d0
   14000dcd1:	add    rsp,0x80
   14000dcd8:	pop    r15
   14000dcda:	pop    r14
   14000dcdc:	pop    r12
   14000dcde:	pop    rdi
   14000dcdf:	pop    rsi
   14000dce0:	pop    rbp
   14000dce1:	pop    rbx
   14000dce2:	ret    
   14000dce3:	int3   
   14000dce4:	int3   
   14000dce5:	int3   
   14000dce6:	int3   
   14000dce7:	int3   
   14000dce8:	int3   
   14000dce9:	int3   
   14000dcea:	int3   
   14000dceb:	int3   
   14000dcec:	int3   
   14000dced:	int3   
   14000dcee:	int3   
   14000dcef:	int3   
   14000dcf0:	rex push rbx
   14000dcf2:	push   rbp
   14000dcf3:	push   rsi
   14000dcf4:	push   rdi
   14000dcf5:	push   r12
   14000dcf7:	push   r14
   14000dcf9:	push   r15
   14000dcfb:	sub    rsp,0x80
   14000dd02:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000dd0b:	mov    rax,QWORD PTR [rip+0x3393e]        # 0x140041650
   14000dd12:	xor    rax,rsp
   14000dd15:	mov    QWORD PTR [rsp+0x70],rax
   14000dd1a:	mov    r15,r9
   14000dd1d:	mov    rbp,r8
   14000dd20:	mov    r14,rdx
   14000dd23:	mov    rdi,rcx
   14000dd26:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000dd2e:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000dd36:	mov    r12,QWORD PTR [rsp+0xf0]
   14000dd3e:	mov    DWORD PTR [rsp+0x48],0x0
   14000dd46:	lea    rdx,[rsp+0x30]
   14000dd4b:	mov    rcx,rbx
   14000dd4e:	call   0x140012a40
   14000dd53:	mov    rdx,rax
   14000dd56:	mov    eax,DWORD PTR [rbx+0x18]
   14000dd59:	mov    QWORD PTR [rsp+0x28],rdx
   14000dd5e:	mov    DWORD PTR [rsp+0x20],eax
   14000dd62:	mov    r9,r15
   14000dd65:	mov    r8,rbp
   14000dd68:	lea    rdx,[rsp+0x50]
   14000dd6d:	mov    rcx,rdi
   14000dd70:	call   0x14000e750
   14000dd75:	mov    r8d,eax
   14000dd78:	lea    r9,[rsp+0x48]
   14000dd7d:	lea    rdx,[rsp+0x40]
   14000dd82:	lea    rcx,[rsp+0x50]
   14000dd87:	call   0x140014d30
   14000dd8c:	mov    ebx,eax
   14000dd8e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000dd93:	test   rcx,rcx
   14000dd96:	je     0x14000ddb0
   14000dd98:	mov    rax,QWORD PTR [rcx]
   14000dd9b:	call   QWORD PTR [rax+0x10]
   14000dd9e:	mov    rcx,rax
   14000dda1:	test   rax,rax
   14000dda4:	je     0x14000ddb0
   14000dda6:	mov    rax,QWORD PTR [rax]
   14000dda9:	mov    edx,0x1
   14000ddae:	call   QWORD PTR [rax]
   14000ddb0:	mov    rdx,r15
   14000ddb3:	mov    rcx,rbp
   14000ddb6:	call   0x1400110e0
   14000ddbb:	test   al,al
   14000ddbd:	je     0x14000ddc2
   14000ddbf:	or     DWORD PTR [rsi],0x1
   14000ddc2:	lea    rax,[rsp+0x50]
   14000ddc7:	cmp    QWORD PTR [rsp+0x40],rax
   14000ddcc:	je     0x14000dddb
   14000ddce:	cmp    DWORD PTR [rsp+0x48],0x0
   14000ddd3:	jne    0x14000dddb
   14000ddd5:	mov    DWORD PTR [r12],ebx
   14000ddd9:	jmp    0x14000ddde
   14000dddb:	or     DWORD PTR [rsi],0x2
   14000ddde:	movups xmm0,XMMWORD PTR [rbp+0x0]
   14000dde2:	movups XMMWORD PTR [r14],xmm0
   14000dde6:	mov    rax,r14
   14000dde9:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ddee:	xor    rcx,rsp
   14000ddf1:	call   0x1400187d0
   14000ddf6:	add    rsp,0x80
   14000ddfd:	pop    r15
   14000ddff:	pop    r14
   14000de01:	pop    r12
   14000de03:	pop    rdi
   14000de04:	pop    rsi
   14000de05:	pop    rbp
   14000de06:	pop    rbx
   14000de07:	ret    
   14000de08:	int3   
   14000de09:	int3   
   14000de0a:	int3   
   14000de0b:	int3   
   14000de0c:	int3   
   14000de0d:	int3   
   14000de0e:	int3   
   14000de0f:	int3   
   14000de10:	rex push rbx
   14000de12:	push   rbp
   14000de13:	push   rsi
   14000de14:	push   rdi
   14000de15:	push   r12
   14000de17:	push   r14
   14000de19:	push   r15
   14000de1b:	sub    rsp,0x80
   14000de22:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000de2b:	mov    rax,QWORD PTR [rip+0x3381e]        # 0x140041650
   14000de32:	xor    rax,rsp
   14000de35:	mov    QWORD PTR [rsp+0x70],rax
   14000de3a:	mov    r15,r9
   14000de3d:	mov    rbp,r8
   14000de40:	mov    r14,rdx
   14000de43:	mov    rdi,rcx
   14000de46:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000de4e:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000de56:	mov    r12,QWORD PTR [rsp+0xf0]
   14000de5e:	mov    DWORD PTR [rsp+0x48],0x0
   14000de66:	lea    rdx,[rsp+0x30]
   14000de6b:	mov    rcx,rbx
   14000de6e:	call   0x140012a40
   14000de73:	mov    rdx,rax
   14000de76:	mov    eax,DWORD PTR [rbx+0x18]
   14000de79:	mov    QWORD PTR [rsp+0x28],rdx
   14000de7e:	mov    DWORD PTR [rsp+0x20],eax
   14000de82:	mov    r9,r15
   14000de85:	mov    r8,rbp
   14000de88:	lea    rdx,[rsp+0x50]
   14000de8d:	mov    rcx,rdi
   14000de90:	call   0x14000e750
   14000de95:	mov    r8d,eax
   14000de98:	lea    r9,[rsp+0x48]
   14000de9d:	lea    rdx,[rsp+0x40]
   14000dea2:	lea    rcx,[rsp+0x50]
   14000dea7:	call   0x140014b60
   14000deac:	mov    ebx,eax
   14000deae:	mov    rcx,QWORD PTR [rsp+0x30]
   14000deb3:	test   rcx,rcx
   14000deb6:	je     0x14000ded0
   14000deb8:	mov    rax,QWORD PTR [rcx]
   14000debb:	call   QWORD PTR [rax+0x10]
   14000debe:	mov    rcx,rax
   14000dec1:	test   rax,rax
   14000dec4:	je     0x14000ded0
   14000dec6:	mov    rax,QWORD PTR [rax]
   14000dec9:	mov    edx,0x1
   14000dece:	call   QWORD PTR [rax]
   14000ded0:	mov    rdx,r15
   14000ded3:	mov    rcx,rbp
   14000ded6:	call   0x1400110e0
   14000dedb:	test   al,al
   14000dedd:	je     0x14000dee2
   14000dedf:	or     DWORD PTR [rsi],0x1
   14000dee2:	lea    rax,[rsp+0x50]
   14000dee7:	cmp    QWORD PTR [rsp+0x40],rax
   14000deec:	je     0x14000defb
   14000deee:	cmp    DWORD PTR [rsp+0x48],0x0
   14000def3:	jne    0x14000defb
   14000def5:	mov    DWORD PTR [r12],ebx
   14000def9:	jmp    0x14000defe
   14000defb:	or     DWORD PTR [rsi],0x2
   14000defe:	movups xmm0,XMMWORD PTR [rbp+0x0]
   14000df02:	movups XMMWORD PTR [r14],xmm0
   14000df06:	mov    rax,r14
   14000df09:	mov    rcx,QWORD PTR [rsp+0x70]
   14000df0e:	xor    rcx,rsp
   14000df11:	call   0x1400187d0
   14000df16:	add    rsp,0x80
   14000df1d:	pop    r15
   14000df1f:	pop    r14
   14000df21:	pop    r12
   14000df23:	pop    rdi
   14000df24:	pop    rsi
   14000df25:	pop    rbp
   14000df26:	pop    rbx
   14000df27:	ret    
   14000df28:	int3   
   14000df29:	int3   
   14000df2a:	int3   
   14000df2b:	int3   
   14000df2c:	int3   
   14000df2d:	int3   
   14000df2e:	int3   
   14000df2f:	int3   
   14000df30:	rex push rbx
   14000df32:	push   rbp
   14000df33:	push   rsi
   14000df34:	push   rdi
   14000df35:	push   r12
   14000df37:	push   r14
   14000df39:	push   r15
   14000df3b:	sub    rsp,0x80
   14000df42:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000df4b:	mov    rax,QWORD PTR [rip+0x336fe]        # 0x140041650
   14000df52:	xor    rax,rsp
   14000df55:	mov    QWORD PTR [rsp+0x70],rax
   14000df5a:	mov    r15,r9
   14000df5d:	mov    rbp,r8
   14000df60:	mov    r14,rdx
   14000df63:	mov    rdi,rcx
   14000df66:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000df6e:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000df76:	mov    r12,QWORD PTR [rsp+0xf0]
   14000df7e:	mov    DWORD PTR [rsp+0x48],0x0
   14000df86:	lea    rdx,[rsp+0x30]
   14000df8b:	mov    rcx,rbx
   14000df8e:	call   0x140012a40
   14000df93:	mov    rdx,rax
   14000df96:	mov    eax,DWORD PTR [rbx+0x18]
   14000df99:	mov    QWORD PTR [rsp+0x28],rdx
   14000df9e:	mov    DWORD PTR [rsp+0x20],eax
   14000dfa2:	mov    r9,r15
   14000dfa5:	mov    r8,rbp
   14000dfa8:	lea    rdx,[rsp+0x50]
   14000dfad:	mov    rcx,rdi
   14000dfb0:	call   0x14000e750
   14000dfb5:	mov    r8d,eax
   14000dfb8:	lea    r9,[rsp+0x48]
   14000dfbd:	lea    rdx,[rsp+0x40]
   14000dfc2:	lea    rcx,[rsp+0x50]
   14000dfc7:	call   0x140014e10
   14000dfcc:	mov    rbx,rax
   14000dfcf:	mov    rcx,QWORD PTR [rsp+0x30]
   14000dfd4:	test   rcx,rcx
   14000dfd7:	je     0x14000dff1
   14000dfd9:	mov    rax,QWORD PTR [rcx]
   14000dfdc:	call   QWORD PTR [rax+0x10]
   14000dfdf:	mov    rcx,rax
   14000dfe2:	test   rax,rax
   14000dfe5:	je     0x14000dff1
   14000dfe7:	mov    rax,QWORD PTR [rax]
   14000dfea:	mov    edx,0x1
   14000dfef:	call   QWORD PTR [rax]
   14000dff1:	mov    rdx,r15
   14000dff4:	mov    rcx,rbp
   14000dff7:	call   0x1400110e0
   14000dffc:	test   al,al
   14000dffe:	je     0x14000e003
   14000e000:	or     DWORD PTR [rsi],0x1
   14000e003:	lea    rax,[rsp+0x50]
   14000e008:	cmp    QWORD PTR [rsp+0x40],rax
   14000e00d:	je     0x14000e01c
   14000e00f:	cmp    DWORD PTR [rsp+0x48],0x0
   14000e014:	jne    0x14000e01c
   14000e016:	mov    QWORD PTR [r12],rbx
   14000e01a:	jmp    0x14000e01f
   14000e01c:	or     DWORD PTR [rsi],0x2
   14000e01f:	movups xmm0,XMMWORD PTR [rbp+0x0]
   14000e023:	movups XMMWORD PTR [r14],xmm0
   14000e027:	mov    rax,r14
   14000e02a:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e02f:	xor    rcx,rsp
   14000e032:	call   0x1400187d0
   14000e037:	add    rsp,0x80
   14000e03e:	pop    r15
   14000e040:	pop    r14
   14000e042:	pop    r12
   14000e044:	pop    rdi
   14000e045:	pop    rsi
   14000e046:	pop    rbp
   14000e047:	pop    rbx
   14000e048:	ret    
   14000e049:	int3   
   14000e04a:	int3   
   14000e04b:	int3   
   14000e04c:	int3   
   14000e04d:	int3   
   14000e04e:	int3   
   14000e04f:	int3   
   14000e050:	rex push rbx
   14000e052:	push   rbp
   14000e053:	push   rsi
   14000e054:	push   rdi
   14000e055:	push   r12
   14000e057:	push   r14
   14000e059:	push   r15
   14000e05b:	sub    rsp,0x80
   14000e062:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000e06b:	mov    rax,QWORD PTR [rip+0x335de]        # 0x140041650
   14000e072:	xor    rax,rsp
   14000e075:	mov    QWORD PTR [rsp+0x70],rax
   14000e07a:	mov    r15,r9
   14000e07d:	mov    rbp,r8
   14000e080:	mov    r14,rdx
   14000e083:	mov    rdi,rcx
   14000e086:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000e08e:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000e096:	mov    r12,QWORD PTR [rsp+0xf0]
   14000e09e:	mov    DWORD PTR [rsp+0x48],0x0
   14000e0a6:	lea    rdx,[rsp+0x30]
   14000e0ab:	mov    rcx,rbx
   14000e0ae:	call   0x140012a40
   14000e0b3:	mov    rdx,rax
   14000e0b6:	mov    eax,DWORD PTR [rbx+0x18]
   14000e0b9:	mov    QWORD PTR [rsp+0x28],rdx
   14000e0be:	mov    DWORD PTR [rsp+0x20],eax
   14000e0c2:	mov    r9,r15
   14000e0c5:	mov    r8,rbp
   14000e0c8:	lea    rdx,[rsp+0x50]
   14000e0cd:	mov    rcx,rdi
   14000e0d0:	call   0x14000e750
   14000e0d5:	mov    r8d,eax
   14000e0d8:	lea    r9,[rsp+0x48]
   14000e0dd:	lea    rdx,[rsp+0x40]
   14000e0e2:	lea    rcx,[rsp+0x50]
   14000e0e7:	call   0x140014f04
   14000e0ec:	mov    rbx,rax
   14000e0ef:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e0f4:	test   rcx,rcx
   14000e0f7:	je     0x14000e111
   14000e0f9:	mov    rax,QWORD PTR [rcx]
   14000e0fc:	call   QWORD PTR [rax+0x10]
   14000e0ff:	mov    rcx,rax
   14000e102:	test   rax,rax
   14000e105:	je     0x14000e111
   14000e107:	mov    rax,QWORD PTR [rax]
   14000e10a:	mov    edx,0x1
   14000e10f:	call   QWORD PTR [rax]
   14000e111:	mov    rdx,r15
   14000e114:	mov    rcx,rbp
   14000e117:	call   0x1400110e0
   14000e11c:	test   al,al
   14000e11e:	je     0x14000e123
   14000e120:	or     DWORD PTR [rsi],0x1
   14000e123:	lea    rax,[rsp+0x50]
   14000e128:	cmp    QWORD PTR [rsp+0x40],rax
   14000e12d:	je     0x14000e13c
   14000e12f:	cmp    DWORD PTR [rsp+0x48],0x0
   14000e134:	jne    0x14000e13c
   14000e136:	mov    QWORD PTR [r12],rbx
   14000e13a:	jmp    0x14000e13f
   14000e13c:	or     DWORD PTR [rsi],0x2
   14000e13f:	movups xmm0,XMMWORD PTR [rbp+0x0]
   14000e143:	movups XMMWORD PTR [r14],xmm0
   14000e147:	mov    rax,r14
   14000e14a:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e14f:	xor    rcx,rsp
   14000e152:	call   0x1400187d0
   14000e157:	add    rsp,0x80
   14000e15e:	pop    r15
   14000e160:	pop    r14
   14000e162:	pop    r12
   14000e164:	pop    rdi
   14000e165:	pop    rsi
   14000e166:	pop    rbp
   14000e167:	pop    rbx
   14000e168:	ret    
   14000e169:	int3   
   14000e16a:	int3   
   14000e16b:	int3   
   14000e16c:	int3   
   14000e16d:	int3   
   14000e16e:	int3   
   14000e16f:	int3   
   14000e170:	rex push rbx
   14000e172:	push   rbp
   14000e173:	push   rsi
   14000e174:	push   rdi
   14000e175:	push   r14
   14000e177:	sub    rsp,0xa0
   14000e17e:	movaps XMMWORD PTR [rsp+0x90],xmm6
   14000e186:	mov    rax,QWORD PTR [rip+0x334c3]        # 0x140041650
   14000e18d:	xor    rax,rsp
   14000e190:	mov    QWORD PTR [rsp+0x88],rax
   14000e198:	mov    rax,QWORD PTR [rsp+0xf0]
   14000e1a0:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000e1a8:	mov    r14,QWORD PTR [rsp+0x100]
   14000e1b0:	mov    rsi,rdx
   14000e1b3:	xor    edx,edx
   14000e1b5:	mov    rbp,r9
   14000e1b8:	mov    DWORD PTR [rsp+0x40],edx
   14000e1bc:	mov    DWORD PTR [rsp+0x30],edx
   14000e1c0:	lea    rdx,[rsp+0x30]
   14000e1c5:	mov    QWORD PTR [rsp+0x28],rdx
   14000e1ca:	lea    rdx,[rsp+0x48]
   14000e1cf:	mov    rdi,r8
   14000e1d2:	mov    QWORD PTR [rsp+0x20],rax
   14000e1d7:	call   0x14000ebe0
   14000e1dc:	lea    r9,[rsp+0x40]
   14000e1e1:	lea    rdx,[rsp+0x38]
   14000e1e6:	lea    rcx,[rsp+0x48]
   14000e1eb:	mov    r8d,eax
   14000e1ee:	call   0x1400150c8
   14000e1f3:	mov    edx,DWORD PTR [rsp+0x30]
   14000e1f7:	movaps xmm6,xmm0
   14000e1fa:	test   edx,edx
   14000e1fc:	je     0x14000e218
   14000e1fe:	xorps  xmm0,xmm0
   14000e201:	lea    edx,[rdx*4+0x0]
   14000e208:	cvtss2sd xmm0,xmm6
   14000e20c:	call   0x14001a224
   14000e211:	xorps  xmm6,xmm6
   14000e214:	cvtsd2ss xmm6,xmm0
   14000e218:	mov    rdx,rbp
   14000e21b:	mov    rcx,rdi
   14000e21e:	call   0x1400110e0
   14000e223:	test   al,al
   14000e225:	je     0x14000e22a
   14000e227:	or     DWORD PTR [rbx],0x1
   14000e22a:	lea    rax,[rsp+0x48]
   14000e22f:	cmp    QWORD PTR [rsp+0x38],rax
   14000e234:	je     0x14000e244
   14000e236:	cmp    DWORD PTR [rsp+0x40],0x0
   14000e23b:	jne    0x14000e244
   14000e23d:	movss  DWORD PTR [r14],xmm6
   14000e242:	jmp    0x14000e247
   14000e244:	or     DWORD PTR [rbx],0x2
   14000e247:	movups xmm0,XMMWORD PTR [rdi]
   14000e24a:	mov    rax,rsi
   14000e24d:	movups XMMWORD PTR [rsi],xmm0
   14000e250:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e258:	xor    rcx,rsp
   14000e25b:	call   0x1400187d0
   14000e260:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14000e268:	add    rsp,0xa0
   14000e26f:	pop    r14
   14000e271:	pop    rdi
   14000e272:	pop    rsi
   14000e273:	pop    rbp
   14000e274:	pop    rbx
   14000e275:	ret    
   14000e276:	int3   
   14000e277:	int3   
   14000e278:	int3   
   14000e279:	int3   
   14000e27a:	int3   
   14000e27b:	int3   
   14000e27c:	int3   
   14000e27d:	int3   
   14000e27e:	int3   
   14000e27f:	int3   
   14000e280:	rex push rbx
   14000e282:	push   rbp
   14000e283:	push   rsi
   14000e284:	push   rdi
   14000e285:	push   r14
   14000e287:	sub    rsp,0xa0
   14000e28e:	movaps XMMWORD PTR [rsp+0x90],xmm6
   14000e296:	mov    rax,QWORD PTR [rip+0x333b3]        # 0x140041650
   14000e29d:	xor    rax,rsp
   14000e2a0:	mov    QWORD PTR [rsp+0x88],rax
   14000e2a8:	mov    rax,QWORD PTR [rsp+0xf0]
   14000e2b0:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000e2b8:	mov    r14,QWORD PTR [rsp+0x100]
   14000e2c0:	mov    rsi,rdx
   14000e2c3:	xor    edx,edx
   14000e2c5:	mov    rbp,r9
   14000e2c8:	mov    DWORD PTR [rsp+0x40],edx
   14000e2cc:	mov    DWORD PTR [rsp+0x30],edx
   14000e2d0:	lea    rdx,[rsp+0x30]
   14000e2d5:	mov    QWORD PTR [rsp+0x28],rdx
   14000e2da:	lea    rdx,[rsp+0x48]
   14000e2df:	mov    rdi,r8
   14000e2e2:	mov    QWORD PTR [rsp+0x20],rax
   14000e2e7:	call   0x14000ebe0
   14000e2ec:	lea    r9,[rsp+0x40]
   14000e2f1:	lea    rdx,[rsp+0x38]
   14000e2f6:	lea    rcx,[rsp+0x48]
   14000e2fb:	mov    r8d,eax
   14000e2fe:	call   0x14001530c
   14000e303:	mov    edx,DWORD PTR [rsp+0x30]
   14000e307:	movaps xmm6,xmm0
   14000e30a:	test   edx,edx
   14000e30c:	je     0x14000e31d
   14000e30e:	lea    edx,[rdx*4+0x0]
   14000e315:	call   0x14001a224
   14000e31a:	movaps xmm6,xmm0
   14000e31d:	mov    rdx,rbp
   14000e320:	mov    rcx,rdi
   14000e323:	call   0x1400110e0
   14000e328:	test   al,al
   14000e32a:	je     0x14000e32f
   14000e32c:	or     DWORD PTR [rbx],0x1
   14000e32f:	lea    rax,[rsp+0x48]
   14000e334:	cmp    QWORD PTR [rsp+0x38],rax
   14000e339:	je     0x14000e349
   14000e33b:	cmp    DWORD PTR [rsp+0x40],0x0
   14000e340:	jne    0x14000e349
   14000e342:	movsd  QWORD PTR [r14],xmm6
   14000e347:	jmp    0x14000e34c
   14000e349:	or     DWORD PTR [rbx],0x2
   14000e34c:	movups xmm0,XMMWORD PTR [rdi]
   14000e34f:	mov    rax,rsi
   14000e352:	movups XMMWORD PTR [rsi],xmm0
   14000e355:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e35d:	xor    rcx,rsp
   14000e360:	call   0x1400187d0
   14000e365:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14000e36d:	add    rsp,0xa0
   14000e374:	pop    r14
   14000e376:	pop    rdi
   14000e377:	pop    rsi
   14000e378:	pop    rbp
   14000e379:	pop    rbx
   14000e37a:	ret    
   14000e37b:	int3   
   14000e37c:	int3   
   14000e37d:	int3   
   14000e37e:	int3   
   14000e37f:	int3   
   14000e380:	rex push rbx
   14000e382:	push   rbp
   14000e383:	push   rsi
   14000e384:	push   rdi
   14000e385:	push   r14
   14000e387:	sub    rsp,0xa0
   14000e38e:	movaps XMMWORD PTR [rsp+0x90],xmm6
   14000e396:	mov    rax,QWORD PTR [rip+0x332b3]        # 0x140041650
   14000e39d:	xor    rax,rsp
   14000e3a0:	mov    QWORD PTR [rsp+0x88],rax
   14000e3a8:	mov    rax,QWORD PTR [rsp+0xf0]
   14000e3b0:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000e3b8:	mov    r14,QWORD PTR [rsp+0x100]
   14000e3c0:	mov    rsi,rdx
   14000e3c3:	xor    edx,edx
   14000e3c5:	mov    rbp,r9
   14000e3c8:	mov    DWORD PTR [rsp+0x40],edx
   14000e3cc:	mov    DWORD PTR [rsp+0x30],edx
   14000e3d0:	lea    rdx,[rsp+0x30]
   14000e3d5:	mov    QWORD PTR [rsp+0x28],rdx
   14000e3da:	lea    rdx,[rsp+0x48]
   14000e3df:	mov    rdi,r8
   14000e3e2:	mov    QWORD PTR [rsp+0x20],rax
   14000e3e7:	call   0x14000ebe0
   14000e3ec:	lea    r9,[rsp+0x40]
   14000e3f1:	lea    rdx,[rsp+0x38]
   14000e3f6:	lea    rcx,[rsp+0x48]
   14000e3fb:	mov    r8d,eax
   14000e3fe:	call   0x140015548
   14000e403:	mov    edx,DWORD PTR [rsp+0x30]
   14000e407:	movaps xmm6,xmm0
   14000e40a:	test   edx,edx
   14000e40c:	je     0x14000e41d
   14000e40e:	lea    edx,[rdx*4+0x0]
   14000e415:	call   0x14001a224
   14000e41a:	movaps xmm6,xmm0
   14000e41d:	mov    rdx,rbp
   14000e420:	mov    rcx,rdi
   14000e423:	call   0x1400110e0
   14000e428:	test   al,al
   14000e42a:	je     0x14000e42f
   14000e42c:	or     DWORD PTR [rbx],0x1
   14000e42f:	lea    rax,[rsp+0x48]
   14000e434:	cmp    QWORD PTR [rsp+0x38],rax
   14000e439:	je     0x14000e449
   14000e43b:	cmp    DWORD PTR [rsp+0x40],0x0
   14000e440:	jne    0x14000e449
   14000e442:	movsd  QWORD PTR [r14],xmm6
   14000e447:	jmp    0x14000e44c
   14000e449:	or     DWORD PTR [rbx],0x2
   14000e44c:	movups xmm0,XMMWORD PTR [rdi]
   14000e44f:	mov    rax,rsi
   14000e452:	movups XMMWORD PTR [rsi],xmm0
   14000e455:	mov    rcx,QWORD PTR [rsp+0x88]
   14000e45d:	xor    rcx,rsp
   14000e460:	call   0x1400187d0
   14000e465:	movaps xmm6,XMMWORD PTR [rsp+0x90]
   14000e46d:	add    rsp,0xa0
   14000e474:	pop    r14
   14000e476:	pop    rdi
   14000e477:	pop    rsi
   14000e478:	pop    rbp
   14000e479:	pop    rbx
   14000e47a:	ret    
   14000e47b:	int3   
   14000e47c:	int3   
   14000e47d:	int3   
   14000e47e:	int3   
   14000e47f:	int3   
   14000e480:	rex push rbx
   14000e482:	push   rbp
   14000e483:	push   rsi
   14000e484:	push   rdi
   14000e485:	push   r14
   14000e487:	push   r15
   14000e489:	sub    rsp,0x88
   14000e490:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000e499:	mov    rax,QWORD PTR [rip+0x331b0]        # 0x140041650
   14000e4a0:	xor    rax,rsp
   14000e4a3:	mov    QWORD PTR [rsp+0x70],rax
   14000e4a8:	mov    r15,r9
   14000e4ab:	mov    rbp,r8
   14000e4ae:	mov    rsi,rdx
   14000e4b1:	mov    rbx,rcx
   14000e4b4:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000e4bc:	mov    rdi,QWORD PTR [rsp+0xe8]
   14000e4c4:	mov    r14,QWORD PTR [rsp+0xf0]
   14000e4cc:	mov    DWORD PTR [rsp+0x48],0x0
   14000e4d4:	lea    rdx,[rsp+0x30]
   14000e4d9:	call   0x140012a40
   14000e4de:	nop
   14000e4df:	mov    QWORD PTR [rsp+0x28],rax
   14000e4e4:	mov    DWORD PTR [rsp+0x20],0x800
   14000e4ec:	mov    r9,r15
   14000e4ef:	mov    r8,rbp
   14000e4f2:	lea    rdx,[rsp+0x50]
   14000e4f7:	mov    rcx,rbx
   14000e4fa:	call   0x14000e750
   14000e4ff:	mov    ebx,eax
   14000e501:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e506:	test   rcx,rcx
   14000e509:	je     0x14000e524
   14000e50b:	mov    rax,QWORD PTR [rcx]
   14000e50e:	call   QWORD PTR [rax+0x10]
   14000e511:	test   rax,rax
   14000e514:	je     0x14000e524
   14000e516:	mov    r8,QWORD PTR [rax]
   14000e519:	mov    edx,0x1
   14000e51e:	mov    rcx,rax
   14000e521:	call   QWORD PTR [r8]
   14000e524:	lea    r9,[rsp+0x48]
   14000e529:	mov    r8d,ebx
   14000e52c:	lea    rdx,[rsp+0x40]
   14000e531:	lea    rcx,[rsp+0x50]
   14000e536:	call   0x140014f04
   14000e53b:	mov    rbx,rax
   14000e53e:	mov    rdx,r15
   14000e541:	mov    rcx,rbp
   14000e544:	call   0x1400110e0
   14000e549:	test   al,al
   14000e54b:	je     0x14000e550
   14000e54d:	or     DWORD PTR [rdi],0x1
   14000e550:	lea    rax,[rsp+0x50]
   14000e555:	cmp    QWORD PTR [rsp+0x40],rax
   14000e55a:	je     0x14000e568
   14000e55c:	cmp    DWORD PTR [rsp+0x48],0x0
   14000e561:	jne    0x14000e568
   14000e563:	mov    QWORD PTR [r14],rbx
   14000e566:	jmp    0x14000e56b
   14000e568:	or     DWORD PTR [rdi],0x2
   14000e56b:	movups xmm0,XMMWORD PTR [rbp+0x0]
   14000e56f:	movups XMMWORD PTR [rsi],xmm0
   14000e572:	mov    rax,rsi
   14000e575:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e57a:	xor    rcx,rsp
   14000e57d:	call   0x1400187d0
   14000e582:	add    rsp,0x88
   14000e589:	pop    r15
   14000e58b:	pop    r14
   14000e58d:	pop    rdi
   14000e58e:	pop    rsi
   14000e58f:	pop    rbp
   14000e590:	pop    rbx
   14000e591:	ret    
   14000e592:	int3   
   14000e593:	int3   
   14000e594:	int3   
   14000e595:	int3   
   14000e596:	int3   
   14000e597:	int3   
   14000e598:	int3   
   14000e599:	int3   
   14000e59a:	int3   
   14000e59b:	int3   
   14000e59c:	int3   
   14000e59d:	int3   
   14000e59e:	int3   
   14000e59f:	int3   
   14000e5a0:	rex push rbx
   14000e5a2:	sub    rsp,0x20
   14000e5a6:	lea    rax,[rip+0x2245b]        # 0x140030a08
   14000e5ad:	mov    rbx,rcx
   14000e5b0:	mov    QWORD PTR [rcx],rax
   14000e5b3:	test   dl,0x1
   14000e5b6:	je     0x14000e5bd
   14000e5b8:	call   0x140018a04
   14000e5bd:	mov    rax,rbx
   14000e5c0:	add    rsp,0x20
   14000e5c4:	pop    rbx
   14000e5c5:	ret    
   14000e5c6:	int3   
   14000e5c7:	int3   
   14000e5c8:	int3   
   14000e5c9:	int3   
   14000e5ca:	int3   
   14000e5cb:	int3   
   14000e5cc:	int3   
   14000e5cd:	int3   
   14000e5ce:	int3   
   14000e5cf:	int3   
   14000e5d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e5d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e5da:	push   rdi
   14000e5db:	sub    rsp,0x20
   14000e5df:	lea    rax,[rip+0x2b432]        # 0x140039a18
   14000e5e6:	mov    rbx,rcx
   14000e5e9:	mov    QWORD PTR [rcx],rax
   14000e5ec:	mov    ecx,0x8
   14000e5f1:	call   0x140018a0c
   14000e5f6:	xor    esi,esi
   14000e5f8:	mov    rdi,rax
   14000e5fb:	test   rax,rax
   14000e5fe:	je     0x14000e611
   14000e600:	xor    eax,eax
   14000e602:	mov    cl,0x1
   14000e604:	mov    QWORD PTR [rdi],rax
   14000e607:	call   0x140014368
   14000e60c:	mov    QWORD PTR [rdi],rax
   14000e60f:	jmp    0x14000e614
   14000e611:	mov    rdi,rsi
   14000e614:	mov    QWORD PTR [rbx+0x60],rdi
   14000e618:	lea    rax,[rbx+0x8]
   14000e61c:	lea    rcx,[rbx+0x10]
   14000e620:	mov    QWORD PTR [rbx+0x18],rax
   14000e624:	mov    QWORD PTR [rbx+0x20],rcx
   14000e628:	lea    rax,[rbx+0x28]
   14000e62c:	mov    QWORD PTR [rbx+0x38],rax
   14000e630:	lea    rax,[rbx+0x30]
   14000e634:	mov    QWORD PTR [rbx+0x40],rax
   14000e638:	lea    rax,[rbx+0x48]
   14000e63c:	mov    QWORD PTR [rbx+0x50],rax
   14000e640:	lea    rax,[rbx+0x4c]
   14000e644:	mov    QWORD PTR [rbx+0x58],rax
   14000e648:	mov    QWORD PTR [rcx],rsi
   14000e64b:	mov    rax,QWORD PTR [rbx+0x40]
   14000e64f:	mov    QWORD PTR [rax],rsi
   14000e652:	mov    rax,QWORD PTR [rbx+0x58]
   14000e656:	mov    DWORD PTR [rax],esi
   14000e658:	mov    rax,QWORD PTR [rbx+0x18]
   14000e65c:	mov    QWORD PTR [rax],rsi
   14000e65f:	mov    rax,QWORD PTR [rbx+0x38]
   14000e663:	mov    QWORD PTR [rax],rsi
   14000e666:	mov    rax,QWORD PTR [rbx+0x50]
   14000e66a:	mov    DWORD PTR [rax],esi
   14000e66c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e671:	mov    rax,rbx
   14000e674:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e679:	add    rsp,0x20
   14000e67d:	pop    rdi
   14000e67e:	ret    
   14000e67f:	int3   
   14000e680:	mov    QWORD PTR [rsp+0x18],rbx
   14000e685:	push   rdi
   14000e686:	mov    rdi,QWORD PTR [rip+0x364ab]        # 0x140044b38
   14000e68d:	mov    rbx,rdx
   14000e690:	mov    r9,QWORD PTR [rdi+0x8]
   14000e694:	cmp    BYTE PTR [r9+0x19],0x0
   14000e699:	jne    0x14000e744
   14000e69f:	mov    r11,QWORD PTR [rdx+0x10]
   14000e6a3:	mov    QWORD PTR [rsp+0x10],rbp
   14000e6a8:	mov    QWORD PTR [rsp+0x18],rsi
   14000e6ad:	mov    rsi,QWORD PTR [rdx+0x18]
   14000e6b1:	or     ebp,0xffffffff
   14000e6b4:	lea    rax,[r9+0x20]
   14000e6b8:	cmp    rsi,0x8
   14000e6bc:	jb     0x14000e6c3
   14000e6be:	mov    rdx,QWORD PTR [rbx]
   14000e6c1:	jmp    0x14000e6c6
   14000e6c3:	mov    rdx,rbx
   14000e6c6:	cmp    QWORD PTR [rax+0x18],0x8
   14000e6cb:	mov    r10,QWORD PTR [rax+0x10]
   14000e6cf:	jb     0x14000e6d4
   14000e6d1:	mov    rax,QWORD PTR [rax]
   14000e6d4:	cmp    r10,r11
   14000e6d7:	mov    r8,r11
   14000e6da:	cmovb  r8,r10
   14000e6de:	test   r8,r8
   14000e6e1:	jne    0x14000e707
   14000e6e3:	xor    r8d,r8d
   14000e6e6:	movsxd rax,r8d
   14000e6e9:	test   r8d,r8d
   14000e6ec:	jne    0x14000e6fb
   14000e6ee:	cmp    r10,r11
   14000e6f1:	jb     0x14000e72b
   14000e6f3:	xor    eax,eax
   14000e6f5:	cmp    r10,r11
   14000e6f8:	setne  al
   14000e6fb:	test   eax,eax
   14000e6fd:	js     0x14000e72b
   14000e6ff:	mov    rdi,r9
   14000e702:	mov    r9,QWORD PTR [r9]
   14000e705:	jmp    0x14000e72f
   14000e707:	movzx  ecx,WORD PTR [rdx]
   14000e70a:	cmp    WORD PTR [rax],cx
   14000e70d:	jne    0x14000e71c
   14000e70f:	add    rax,0x2
   14000e713:	add    rdx,0x2
   14000e717:	dec    r8
   14000e71a:	jmp    0x14000e6e1
   14000e71c:	cmp    WORD PTR [rax],cx
   14000e71f:	mov    r8d,0x1
   14000e725:	cmovb  r8d,ebp
   14000e729:	jmp    0x14000e6e6
   14000e72b:	mov    r9,QWORD PTR [r9+0x10]
   14000e72f:	cmp    BYTE PTR [r9+0x19],0x0
   14000e734:	je     0x14000e6b4
   14000e73a:	mov    rsi,QWORD PTR [rsp+0x18]
   14000e73f:	mov    rbp,QWORD PTR [rsp+0x10]
   14000e744:	mov    rax,rdi
   14000e747:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e74c:	pop    rdi
   14000e74d:	ret    
   14000e74e:	int3   
   14000e74f:	int3   
   14000e750:	rex push rbp
   14000e752:	push   rsi
   14000e753:	push   rdi
   14000e754:	push   r12
   14000e756:	push   r13
   14000e758:	push   r14
   14000e75a:	push   r15
   14000e75c:	lea    rbp,[rsp-0x17]
   14000e761:	sub    rsp,0xd0
   14000e768:	mov    QWORD PTR [rbp-0x79],0xfffffffffffffffe
   14000e770:	mov    QWORD PTR [rsp+0x110],rbx
   14000e778:	mov    rax,QWORD PTR [rip+0x32ed1]        # 0x140041650
   14000e77f:	xor    rax,rsp
   14000e782:	mov    QWORD PTR [rbp+0x7],rax
   14000e786:	mov    r14,r9
   14000e789:	mov    QWORD PTR [rsp+0x38],r9
   14000e78e:	mov    rbx,r8
   14000e791:	mov    r12,rdx
   14000e794:	mov    QWORD PTR [rsp+0x28],rdx
   14000e799:	mov    rsi,QWORD PTR [rbp+0x7f]
   14000e79d:	mov    rcx,rsi
   14000e7a0:	call   0x140011a50
   14000e7a5:	mov    rdi,rax
   14000e7a8:	lea    rdx,[rbp-0x51]
   14000e7ac:	mov    rcx,rax
   14000e7af:	call   0x140011360
   14000e7b4:	nop
   14000e7b5:	xor    eax,eax
   14000e7b7:	cmp    QWORD PTR [rbp-0x41],rax
   14000e7bb:	je     0x14000e7c6
   14000e7bd:	mov    rax,QWORD PTR [rdi]
   14000e7c0:	mov    rcx,rdi
   14000e7c3:	call   QWORD PTR [rax+0x20]
   14000e7c6:	mov    WORD PTR [rsp+0x22],ax
   14000e7cb:	mov    rcx,rsi
   14000e7ce:	call   0x1400128d0
   14000e7d3:	mov    r10,QWORD PTR [rax]
   14000e7d6:	lea    r9,[rbp-0x31]
   14000e7da:	lea    r8,[rip+0x2b219]        # 0x1400399fa
   14000e7e1:	lea    rdx,[rip+0x2b1f8]        # 0x1400399e0
   14000e7e8:	mov    rcx,rax
   14000e7eb:	call   QWORD PTR [r10+0x58]
   14000e7ef:	mov    r15,r12
   14000e7f2:	mov    rdx,r14
   14000e7f5:	mov    rcx,rbx
   14000e7f8:	call   0x1400110e0
   14000e7fd:	test   al,al
   14000e7ff:	jne    0x14000e836
   14000e801:	mov    rcx,rbx
   14000e804:	call   0x140010760
   14000e809:	mov    rcx,rbx
   14000e80c:	cmp    ax,WORD PTR [rbp-0x3]
   14000e810:	jne    0x14000e819
   14000e812:	mov    BYTE PTR [r12],0x2b
   14000e817:	jmp    0x14000e82c
   14000e819:	call   0x140010760
   14000e81e:	cmp    ax,WORD PTR [rbp-0x5]
   14000e822:	jne    0x14000e836
   14000e824:	mov    BYTE PTR [r12],0x2d
   14000e829:	mov    rcx,rbx
   14000e82c:	lea    r15,[r12+0x1]
   14000e831:	call   0x1400107d0
   14000e836:	mov    eax,DWORD PTR [rbp+0x77]
   14000e839:	and    eax,0xe00
   14000e83e:	mov    edi,0x8
   14000e843:	cmp    eax,0x400
   14000e848:	jne    0x14000e84f
   14000e84a:	mov    r12d,edi
   14000e84d:	jmp    0x14000e867
   14000e84f:	cmp    eax,0x800
   14000e854:	jne    0x14000e85e
   14000e856:	mov    r12d,0x10
   14000e85c:	jmp    0x14000e867
   14000e85e:	neg    eax
   14000e860:	sbb    r12d,r12d
   14000e863:	and    r12d,0xa
   14000e867:	mov    DWORD PTR [rsp+0x24],r12d
   14000e86c:	xor    r13b,r13b
   14000e86f:	mov    BYTE PTR [rsp+0x20],r13b
   14000e874:	mov    rdx,r14
   14000e877:	mov    rcx,rbx
   14000e87a:	call   0x1400110e0
   14000e87f:	test   al,al
   14000e881:	jne    0x14000e8f6
   14000e883:	mov    rcx,rbx
   14000e886:	call   0x140010760
   14000e88b:	cmp    ax,WORD PTR [rbp-0x31]
   14000e88f:	jne    0x14000e8f6
   14000e891:	mov    r13b,0x1
   14000e894:	mov    rcx,rbx
   14000e897:	call   0x1400107d0
   14000e89c:	mov    rdx,r14
   14000e89f:	mov    rcx,rbx
   14000e8a2:	call   0x1400110e0
   14000e8a7:	test   al,al
   14000e8a9:	jne    0x14000e8e8
   14000e8ab:	mov    rcx,rbx
   14000e8ae:	call   0x140010760
   14000e8b3:	cmp    ax,WORD PTR [rbp+0x1]
   14000e8b7:	je     0x14000e8c7
   14000e8b9:	mov    rcx,rbx
   14000e8bc:	call   0x140010760
   14000e8c1:	cmp    ax,WORD PTR [rbp-0x1]
   14000e8c5:	jne    0x14000e8e8
   14000e8c7:	test   r12d,0xffffffef
   14000e8ce:	jne    0x14000e8e8
   14000e8d0:	mov    r12d,0x10
   14000e8d6:	mov    DWORD PTR [rsp+0x24],r12d
   14000e8db:	xor    r13b,r13b
   14000e8de:	mov    rcx,rbx
   14000e8e1:	call   0x1400107d0
   14000e8e6:	jmp    0x14000e901
   14000e8e8:	test   r12d,r12d
   14000e8eb:	jne    0x14000e8fb
   14000e8ed:	mov    r12d,edi
   14000e8f0:	mov    DWORD PTR [rsp+0x24],edi
   14000e8f4:	jmp    0x14000e901
   14000e8f6:	test   r12d,r12d
   14000e8f9:	je     0x14000e90e
   14000e8fb:	cmp    r12d,0xa
   14000e8ff:	je     0x14000e90e
   14000e901:	mov    eax,0x16
   14000e906:	cmp    r12d,edi
   14000e909:	cmove  eax,edi
   14000e90c:	jmp    0x14000e913
   14000e90e:	mov    eax,0xa
   14000e913:	cdqe   
   14000e915:	mov    QWORD PTR [rsp+0x30],rax
   14000e91a:	mov    QWORD PTR [rbp-0x59],0xf
   14000e922:	mov    QWORD PTR [rbp-0x61],0x0
   14000e92a:	mov    BYTE PTR [rbp-0x71],0x0
   14000e92e:	movzx  r8d,r13b
   14000e932:	mov    edx,0x1
   14000e937:	lea    rcx,[rbp-0x71]
   14000e93b:	call   0x140011260
   14000e940:	nop
   14000e941:	xor    edi,edi
   14000e943:	mov    rdx,r14
   14000e946:	mov    rcx,rbx
   14000e949:	call   0x1400110e0
   14000e94e:	mov    r14,QWORD PTR [rbp-0x59]
   14000e952:	mov    rsi,QWORD PTR [rbp-0x71]
   14000e956:	test   al,al
   14000e958:	jne    0x14000eb12
   14000e95e:	movzx  r12d,WORD PTR [rsp+0x22]
   14000e964:	cmp    BYTE PTR [rbx+0x8],0x0
   14000e968:	jne    0x14000e9ad
   14000e96a:	mov    rcx,QWORD PTR [rbx]
   14000e96d:	test   rcx,rcx
   14000e970:	je     0x14000e9a2
   14000e972:	mov    rax,QWORD PTR [rcx+0x38]
   14000e976:	mov    rdx,QWORD PTR [rax]
   14000e979:	test   rdx,rdx
   14000e97c:	je     0x14000e98c
   14000e97e:	mov    rax,QWORD PTR [rcx+0x50]
   14000e982:	cmp    DWORD PTR [rax],0x0
   14000e985:	jle    0x14000e98c
   14000e987:	movzx  eax,WORD PTR [rdx]
   14000e98a:	jmp    0x14000e992
   14000e98c:	mov    rax,QWORD PTR [rcx]
   14000e98f:	call   QWORD PTR [rax+0x30]
   14000e992:	mov    ecx,0xffff
   14000e997:	cmp    cx,ax
   14000e99a:	je     0x14000e9a2
   14000e99c:	mov    WORD PTR [rbx+0xa],ax
   14000e9a0:	jmp    0x14000e9a9
   14000e9a2:	mov    QWORD PTR [rbx],0x0
   14000e9a9:	mov    BYTE PTR [rbx+0x8],0x1
   14000e9ad:	movzx  edx,WORD PTR [rbx+0xa]
   14000e9b1:	lea    rax,[rbp-0x31]
   14000e9b5:	movzx  ecx,WORD PTR [rbp-0x31]
   14000e9b9:	test   cx,cx
   14000e9bc:	je     0x14000e9d1
   14000e9be:	xchg   ax,ax
   14000e9c0:	cmp    cx,dx
   14000e9c3:	je     0x14000e9d1
   14000e9c5:	add    rax,0x2
   14000e9c9:	movzx  ecx,WORD PTR [rax]
   14000e9cc:	test   cx,cx
   14000e9cf:	jne    0x14000e9c0
   14000e9d1:	lea    rcx,[rbp-0x31]
   14000e9d5:	sub    rax,rcx
   14000e9d8:	sar    rax,1
   14000e9db:	cmp    rax,QWORD PTR [rsp+0x30]
   14000e9e0:	jae    0x14000ea38
   14000e9e2:	lea    rcx,[rip+0x2aff7]        # 0x1400399e0
   14000e9e9:	movzx  ecx,BYTE PTR [rax+rcx*1]
   14000e9ed:	mov    BYTE PTR [r15],cl
   14000e9f0:	cmp    BYTE PTR [rsp+0x20],0x0
   14000e9f5:	jne    0x14000e9fc
   14000e9f7:	cmp    cl,0x30
   14000e9fa:	je     0x14000ea12
   14000e9fc:	mov    rax,QWORD PTR [rsp+0x28]
   14000ea01:	add    rax,0x1f
   14000ea05:	cmp    r15,rax
   14000ea08:	jae    0x14000ea12
   14000ea0a:	inc    r15
   14000ea0d:	mov    BYTE PTR [rsp+0x20],0x1
   14000ea12:	mov    r13b,0x1
   14000ea15:	lea    rax,[rbp-0x71]
   14000ea19:	cmp    r14,0x10
   14000ea1d:	cmovae rax,rsi
   14000ea21:	cmp    BYTE PTR [rax+rdi*1],0x7f
   14000ea25:	je     0x14000ea85
   14000ea27:	lea    rax,[rbp-0x71]
   14000ea2b:	cmp    r14,0x10
   14000ea2f:	cmovae rax,rsi
   14000ea33:	inc    BYTE PTR [rax+rdi*1]
   14000ea36:	jmp    0x14000ea7d
   14000ea38:	lea    rax,[rbp-0x71]
   14000ea3c:	cmp    r14,0x10
   14000ea40:	cmovae rax,rsi
   14000ea44:	cmp    BYTE PTR [rax+rdi*1],0x0
   14000ea48:	je     0x14000eaee
   14000ea4e:	test   r12w,r12w
   14000ea52:	je     0x14000eaee
   14000ea58:	mov    rcx,rbx
   14000ea5b:	call   0x140010760
   14000ea60:	cmp    ax,r12w
   14000ea64:	jne    0x14000eaee
   14000ea6a:	xor    r8d,r8d
   14000ea6d:	lea    edx,[r8+0x1]
   14000ea71:	lea    rcx,[rbp-0x71]
   14000ea75:	call   0x14000f880
   14000ea7a:	inc    rdi
   14000ea7d:	mov    rsi,QWORD PTR [rbp-0x71]
   14000ea81:	mov    r14,QWORD PTR [rbp-0x59]
   14000ea85:	mov    rcx,QWORD PTR [rbx]
   14000ea88:	test   rcx,rcx
   14000ea8b:	je     0x14000eace
   14000ea8d:	mov    rax,QWORD PTR [rcx+0x38]
   14000ea91:	cmp    QWORD PTR [rax],0x0
   14000ea95:	je     0x14000eab8
   14000ea97:	mov    rdx,QWORD PTR [rcx+0x50]
   14000ea9b:	mov    eax,DWORD PTR [rdx]
   14000ea9d:	test   eax,eax
   14000ea9f:	jle    0x14000eab8
   14000eaa1:	dec    eax
   14000eaa3:	mov    DWORD PTR [rdx],eax
   14000eaa5:	mov    rcx,QWORD PTR [rcx+0x38]
   14000eaa9:	mov    rdx,QWORD PTR [rcx]
   14000eaac:	lea    rax,[rdx+0x2]
   14000eab0:	mov    QWORD PTR [rcx],rax
   14000eab3:	movzx  eax,WORD PTR [rdx]
   14000eab6:	jmp    0x14000eabe
   14000eab8:	mov    rax,QWORD PTR [rcx]
   14000eabb:	call   QWORD PTR [rax+0x38]
   14000eabe:	mov    ecx,0xffff
   14000eac3:	cmp    cx,ax
   14000eac6:	je     0x14000eace
   14000eac8:	mov    BYTE PTR [rbx+0x8],0x0
   14000eacc:	jmp    0x14000ead9
   14000eace:	mov    QWORD PTR [rbx],0x0
   14000ead5:	mov    BYTE PTR [rbx+0x8],0x1
   14000ead9:	mov    rdx,QWORD PTR [rsp+0x38]
   14000eade:	mov    rcx,rbx
   14000eae1:	call   0x1400110e0
   14000eae6:	test   al,al
   14000eae8:	je     0x14000e964
   14000eaee:	test   rdi,rdi
   14000eaf1:	mov    r12d,DWORD PTR [rsp+0x24]
   14000eaf6:	je     0x14000eb12
   14000eaf8:	lea    rax,[rbp-0x71]
   14000eafc:	cmp    r14,0x10
   14000eb00:	cmovae rax,rsi
   14000eb04:	cmp    BYTE PTR [rax+rdi*1],0x0
   14000eb08:	jle    0x14000eb0f
   14000eb0a:	inc    rdi
   14000eb0d:	jmp    0x14000eb12
   14000eb0f:	xor    r13b,r13b
   14000eb12:	lea    rdx,[rbp-0x51]
   14000eb16:	mov    r9,QWORD PTR [rbp-0x51]
   14000eb1a:	mov    r8,QWORD PTR [rbp-0x39]
   14000eb1e:	cmp    r8,0x10
   14000eb22:	cmovae rdx,r9
   14000eb26:	test   r13b,r13b
   14000eb29:	je     0x14000eb83
   14000eb2b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000eb30:	test   rdi,rdi
   14000eb33:	je     0x14000eb73
   14000eb35:	movzx  ecx,BYTE PTR [rdx]
   14000eb38:	cmp    cl,0x7f
   14000eb3b:	je     0x14000eb73
   14000eb3d:	dec    rdi
   14000eb40:	je     0x14000eb53
   14000eb42:	lea    rax,[rbp-0x71]
   14000eb46:	cmp    r14,0x10
   14000eb4a:	cmovae rax,rsi
   14000eb4e:	cmp    cl,BYTE PTR [rax+rdi*1]
   14000eb51:	jne    0x14000eb83
   14000eb53:	test   rdi,rdi
   14000eb56:	jne    0x14000eb68
   14000eb58:	lea    rax,[rbp-0x71]
   14000eb5c:	cmp    r14,0x10
   14000eb60:	cmovae rax,rsi
   14000eb64:	cmp    cl,BYTE PTR [rax]
   14000eb66:	jl     0x14000eb83
   14000eb68:	cmp    BYTE PTR [rdx+0x1],0x0
   14000eb6c:	jle    0x14000eb30
   14000eb6e:	inc    rdx
   14000eb71:	jmp    0x14000eb30
   14000eb73:	cmp    BYTE PTR [rsp+0x20],0x0
   14000eb78:	jne    0x14000eb88
   14000eb7a:	mov    BYTE PTR [r15],0x30
   14000eb7e:	inc    r15
   14000eb81:	jmp    0x14000eb88
   14000eb83:	mov    r15,QWORD PTR [rsp+0x28]
   14000eb88:	mov    BYTE PTR [r15],0x0
   14000eb8c:	cmp    r14,0x10
   14000eb90:	jb     0x14000eba2
   14000eb92:	mov    rcx,rsi
   14000eb95:	call   0x140018a04
   14000eb9a:	mov    r8,QWORD PTR [rbp-0x39]
   14000eb9e:	mov    r9,QWORD PTR [rbp-0x51]
   14000eba2:	cmp    r8,0x10
   14000eba6:	jb     0x14000ebb0
   14000eba8:	mov    rcx,r9
   14000ebab:	call   0x140018a04
   14000ebb0:	mov    eax,r12d
   14000ebb3:	mov    rcx,QWORD PTR [rbp+0x7]
   14000ebb7:	xor    rcx,rsp
   14000ebba:	call   0x1400187d0
   14000ebbf:	mov    rbx,QWORD PTR [rsp+0x110]
   14000ebc7:	add    rsp,0xd0
   14000ebce:	pop    r15
   14000ebd0:	pop    r14
   14000ebd2:	pop    r13
   14000ebd4:	pop    r12
   14000ebd6:	pop    rdi
   14000ebd7:	pop    rsi
   14000ebd8:	pop    rbp
   14000ebd9:	ret    
   14000ebda:	int3   
   14000ebdb:	int3   
   14000ebdc:	int3   
   14000ebdd:	int3   
   14000ebde:	int3   
   14000ebdf:	int3   
   14000ebe0:	rex push rbp
   14000ebe2:	push   rsi
   14000ebe3:	push   rdi
   14000ebe4:	push   r12
   14000ebe6:	push   r13
   14000ebe8:	push   r14
   14000ebea:	push   r15
   14000ebec:	lea    rbp,[rsp-0x17]
   14000ebf1:	sub    rsp,0xe0
   14000ebf8:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   14000ec00:	mov    QWORD PTR [rsp+0x120],rbx
   14000ec08:	mov    rax,QWORD PTR [rip+0x32a41]        # 0x140041650
   14000ec0f:	xor    rax,rsp
   14000ec12:	mov    QWORD PTR [rbp+0xf],rax
   14000ec16:	mov    r15,r9
   14000ec19:	mov    QWORD PTR [rsp+0x48],r9
   14000ec1e:	mov    rdi,r8
   14000ec21:	mov    r12,rdx
   14000ec24:	mov    QWORD PTR [rbp-0x61],rdx
   14000ec28:	mov    rbx,QWORD PTR [rbp+0x77]
   14000ec2c:	mov    r8,QWORD PTR [rbp+0x7f]
   14000ec30:	mov    eax,DWORD PTR [rbx+0x18]
   14000ec33:	and    eax,0x3000
   14000ec38:	cmp    eax,0x3000
   14000ec3d:	jne    0x14000ec56
   14000ec3f:	mov    QWORD PTR [rsp+0x28],r8
   14000ec44:	mov    QWORD PTR [rsp+0x20],rbx
   14000ec49:	mov    r8,rdi
   14000ec4c:	call   0x14000fa40
   14000ec51:	jmp    0x14000f851
   14000ec56:	lea    rdx,[rbp-0x69]
   14000ec5a:	mov    rcx,rbx
   14000ec5d:	call   0x140012a40
   14000ec62:	nop
   14000ec63:	mov    rcx,rax
   14000ec66:	call   0x140011a50
   14000ec6b:	mov    rsi,rax
   14000ec6e:	mov    QWORD PTR [rbp-0x79],rax
   14000ec72:	mov    rcx,QWORD PTR [rbp-0x69]
   14000ec76:	test   rcx,rcx
   14000ec79:	je     0x14000ec94
   14000ec7b:	mov    rdx,QWORD PTR [rcx]
   14000ec7e:	call   QWORD PTR [rdx+0x10]
   14000ec81:	test   rax,rax
   14000ec84:	je     0x14000ec94
   14000ec86:	mov    r8,QWORD PTR [rax]
   14000ec89:	mov    edx,0x1
   14000ec8e:	mov    rcx,rax
   14000ec91:	call   QWORD PTR [r8]
   14000ec94:	lea    rdx,[rbp-0x31]
   14000ec98:	mov    rcx,rsi
   14000ec9b:	call   0x140011360
   14000eca0:	nop
   14000eca1:	mov    r14,r12
   14000eca4:	mov    QWORD PTR [rsp+0x38],r12
   14000eca9:	mov    BYTE PTR [rsp+0x31],0x0
   14000ecae:	lea    rdx,[rsp+0x40]
   14000ecb3:	mov    rcx,rbx
   14000ecb6:	call   0x140012a40
   14000ecbb:	nop
   14000ecbc:	mov    rcx,rax
   14000ecbf:	call   0x1400128d0
   14000ecc4:	mov    rbx,rax
   14000ecc7:	mov    rcx,QWORD PTR [rsp+0x40]
   14000eccc:	test   rcx,rcx
   14000eccf:	je     0x14000ecea
   14000ecd1:	mov    rdx,QWORD PTR [rcx]
   14000ecd4:	call   QWORD PTR [rdx+0x10]
   14000ecd7:	test   rax,rax
   14000ecda:	je     0x14000ecea
   14000ecdc:	mov    r8,QWORD PTR [rax]
   14000ecdf:	mov    edx,0x1
   14000ece4:	mov    rcx,rax
   14000ece7:	call   QWORD PTR [r8]
   14000ecea:	mov    rax,QWORD PTR [rbx]
   14000eced:	lea    r9,[rbp-0x11]
   14000ecf1:	lea    r8,[rip+0x2ace6]        # 0x1400399de
   14000ecf8:	lea    rdx,[rip+0x2acd1]        # 0x1400399d0
   14000ecff:	mov    rcx,rbx
   14000ed02:	call   QWORD PTR [rax+0x58]
   14000ed05:	mov    rdx,r15
   14000ed08:	mov    rcx,rdi
   14000ed0b:	call   0x1400110e0
   14000ed10:	test   al,al
   14000ed12:	jne    0x14000ed4e
   14000ed14:	mov    rcx,rdi
   14000ed17:	call   0x140010760
   14000ed1c:	mov    rcx,rdi
   14000ed1f:	cmp    ax,WORD PTR [rbp+0x5]
   14000ed23:	jne    0x14000ed2c
   14000ed25:	mov    BYTE PTR [r12],0x2b
   14000ed2a:	jmp    0x14000ed3f
   14000ed2c:	call   0x140010760
   14000ed31:	cmp    ax,WORD PTR [rbp+0x3]
   14000ed35:	jne    0x14000ed4e
   14000ed37:	mov    BYTE PTR [r12],0x2d
   14000ed3c:	mov    rcx,rdi
   14000ed3f:	lea    r14,[r12+0x1]
   14000ed44:	mov    QWORD PTR [rsp+0x38],r14
   14000ed49:	call   0x1400107d0
   14000ed4e:	xor    r15b,r15b
   14000ed51:	mov    BYTE PTR [rsp+0x30],r15b
   14000ed56:	xor    ecx,ecx
   14000ed58:	mov    r13d,ecx
   14000ed5b:	mov    DWORD PTR [rsp+0x40],ecx
   14000ed5f:	mov    ebx,ecx
   14000ed61:	mov    DWORD PTR [rsp+0x34],ecx
   14000ed65:	lea    r12,[rbp-0x31]
   14000ed69:	cmp    QWORD PTR [rbp-0x19],0x10
   14000ed6e:	cmovae r12,QWORD PTR [rbp-0x31]
   14000ed73:	mov    QWORD PTR [rbp-0x71],r12
   14000ed77:	movzx  eax,BYTE PTR [r12]
   14000ed7c:	dec    al
   14000ed7e:	cmp    al,0x7d
   14000ed80:	ja     0x14000ef63
   14000ed86:	cmp    QWORD PTR [rbp-0x21],rcx
   14000ed8a:	jne    0x14000ed92
   14000ed8c:	movzx  r15d,cx
   14000ed90:	jmp    0x14000eda1
   14000ed92:	mov    rax,QWORD PTR [rsi]
   14000ed95:	mov    rcx,rsi
   14000ed98:	call   QWORD PTR [rax+0x20]
   14000ed9b:	movzx  r15d,ax
   14000ed9f:	xor    ecx,ecx
   14000eda1:	mov    QWORD PTR [rbp-0x39],0xf
   14000eda9:	mov    QWORD PTR [rbp-0x41],rcx
   14000edad:	mov    BYTE PTR [rbp-0x51],bl
   14000edb0:	xor    r8d,r8d
   14000edb3:	lea    edx,[r8+0x1]
   14000edb7:	lea    rcx,[rbp-0x51]
   14000edbb:	call   0x140011260
   14000edc0:	nop
   14000edc1:	xor    ebx,ebx
   14000edc3:	mov    rdx,QWORD PTR [rsp+0x48]
   14000edc8:	mov    rcx,rdi
   14000edcb:	call   0x1400110e0
   14000edd0:	mov    rsi,QWORD PTR [rbp-0x39]
   14000edd4:	mov    r14,QWORD PTR [rbp-0x51]
   14000edd8:	test   al,al
   14000edda:	jne    0x14000ef00
   14000ede0:	mov    r12,QWORD PTR [rsp+0x38]
   14000ede5:	mov    rcx,rdi
   14000ede8:	call   0x140010760
   14000eded:	lea    rcx,[rbp-0x11]
   14000edf1:	movzx  edx,WORD PTR [rbp-0x11]
   14000edf5:	test   dx,dx
   14000edf8:	je     0x14000ee11
   14000edfa:	nop    WORD PTR [rax+rax*1+0x0]
   14000ee00:	cmp    dx,ax
   14000ee03:	je     0x14000ee11
   14000ee05:	add    rcx,0x2
   14000ee09:	movzx  edx,WORD PTR [rcx]
   14000ee0c:	test   dx,dx
   14000ee0f:	jne    0x14000ee00
   14000ee11:	lea    rax,[rbp-0x11]
   14000ee15:	sub    rcx,rax
   14000ee18:	sar    rcx,1
   14000ee1b:	cmp    rcx,0xa
   14000ee1f:	jae    0x14000ee74
   14000ee21:	mov    BYTE PTR [rsp+0x30],0x1
   14000ee26:	cmp    r13d,0x24
   14000ee2a:	jl     0x14000ee32
   14000ee2c:	inc    DWORD PTR [rsp+0x34]
   14000ee30:	jmp    0x14000ee51
   14000ee32:	test   rcx,rcx
   14000ee35:	jne    0x14000ee3c
   14000ee37:	test   r13d,r13d
   14000ee3a:	je     0x14000ee51
   14000ee3c:	lea    rax,[rip+0x2ab8d]        # 0x1400399d0
   14000ee43:	movzx  eax,BYTE PTR [rcx+rax*1]
   14000ee47:	mov    BYTE PTR [r12],al
   14000ee4b:	inc    r12
   14000ee4e:	inc    r13d
   14000ee51:	lea    rax,[rbp-0x51]
   14000ee55:	cmp    rsi,0x10
   14000ee59:	cmovae rax,r14
   14000ee5d:	cmp    BYTE PTR [rax+rbx*1],0x7f
   14000ee61:	je     0x14000eeb5
   14000ee63:	lea    rax,[rbp-0x51]
   14000ee67:	cmp    rsi,0x10
   14000ee6b:	cmovae rax,r14
   14000ee6f:	inc    BYTE PTR [rax+rbx*1]
   14000ee72:	jmp    0x14000eead
   14000ee74:	lea    rax,[rbp-0x51]
   14000ee78:	cmp    rsi,0x10
   14000ee7c:	cmovae rax,r14
   14000ee80:	cmp    BYTE PTR [rax+rbx*1],0x0
   14000ee84:	je     0x14000eed2
   14000ee86:	test   r15w,r15w
   14000ee8a:	je     0x14000eed2
   14000ee8c:	mov    rcx,rdi
   14000ee8f:	call   0x140010760
   14000ee94:	cmp    ax,r15w
   14000ee98:	jne    0x14000eed2
   14000ee9a:	xor    r8d,r8d
   14000ee9d:	lea    edx,[r8+0x1]
   14000eea1:	lea    rcx,[rbp-0x51]
   14000eea5:	call   0x14000f880
   14000eeaa:	inc    rbx
   14000eead:	mov    r14,QWORD PTR [rbp-0x51]
   14000eeb1:	mov    rsi,QWORD PTR [rbp-0x39]
   14000eeb5:	mov    rcx,rdi
   14000eeb8:	call   0x1400107d0
   14000eebd:	mov    rdx,QWORD PTR [rsp+0x48]
   14000eec2:	mov    rcx,rdi
   14000eec5:	call   0x1400110e0
   14000eeca:	test   al,al
   14000eecc:	je     0x14000ede5
   14000eed2:	mov    QWORD PTR [rsp+0x38],r12
   14000eed7:	mov    DWORD PTR [rsp+0x40],r13d
   14000eedc:	test   rbx,rbx
   14000eedf:	mov    r12,QWORD PTR [rbp-0x71]
   14000eee3:	je     0x14000ef4c
   14000eee5:	lea    rax,[rbp-0x51]
   14000eee9:	cmp    rsi,0x10
   14000eeed:	cmovae rax,r14
   14000eef1:	cmp    BYTE PTR [rax+rbx*1],0x0
   14000eef5:	jle    0x14000ef47
   14000eef7:	inc    rbx
   14000eefa:	nop    WORD PTR [rax+rax*1+0x0]
   14000ef00:	test   rbx,rbx
   14000ef03:	je     0x14000ef4c
   14000ef05:	movzx  ecx,BYTE PTR [r12]
   14000ef0a:	cmp    cl,0x7f
   14000ef0d:	je     0x14000ef4c
   14000ef0f:	dec    rbx
   14000ef12:	je     0x14000ef25
   14000ef14:	lea    rax,[rbp-0x51]
   14000ef18:	cmp    rsi,0x10
   14000ef1c:	cmovae rax,r14
   14000ef20:	cmp    cl,BYTE PTR [rax+rbx*1]
   14000ef23:	jne    0x14000ef47
   14000ef25:	test   rbx,rbx
   14000ef28:	jne    0x14000ef3a
   14000ef2a:	lea    rax,[rbp-0x51]
   14000ef2e:	cmp    rsi,0x10
   14000ef32:	cmovae rax,r14
   14000ef36:	cmp    cl,BYTE PTR [rax]
   14000ef38:	jl     0x14000ef47
   14000ef3a:	cmp    BYTE PTR [r12+0x1],0x0
   14000ef40:	jle    0x14000ef00
   14000ef42:	inc    r12
   14000ef45:	jmp    0x14000ef00
   14000ef47:	mov    BYTE PTR [rsp+0x31],0x1
   14000ef4c:	cmp    rsi,0x10
   14000ef50:	jb     0x14000f0ac
   14000ef56:	mov    rcx,r14
   14000ef59:	call   0x140018a04
   14000ef5e:	jmp    0x14000f0ac
   14000ef63:	mov    r12,QWORD PTR [rsp+0x48]
   14000ef68:	mov    rdx,r12
   14000ef6b:	mov    rcx,rdi
   14000ef6e:	call   0x1400110e0
   14000ef73:	test   al,al
   14000ef75:	jne    0x14000f0d8
   14000ef7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ef80:	cmp    BYTE PTR [rdi+0x8],0x0
   14000ef84:	jne    0x14000efc9
   14000ef86:	mov    rcx,QWORD PTR [rdi]
   14000ef89:	test   rcx,rcx
   14000ef8c:	je     0x14000efbe
   14000ef8e:	mov    rax,QWORD PTR [rcx+0x38]
   14000ef92:	mov    rdx,QWORD PTR [rax]
   14000ef95:	test   rdx,rdx
   14000ef98:	je     0x14000efa8
   14000ef9a:	mov    rax,QWORD PTR [rcx+0x50]
   14000ef9e:	cmp    DWORD PTR [rax],0x0
   14000efa1:	jle    0x14000efa8
   14000efa3:	movzx  eax,WORD PTR [rdx]
   14000efa6:	jmp    0x14000efae
   14000efa8:	mov    rax,QWORD PTR [rcx]
   14000efab:	call   QWORD PTR [rax+0x30]
   14000efae:	mov    ecx,0xffff
   14000efb3:	cmp    cx,ax
   14000efb6:	je     0x14000efbe
   14000efb8:	mov    WORD PTR [rdi+0xa],ax
   14000efbc:	jmp    0x14000efc5
   14000efbe:	mov    QWORD PTR [rdi],0x0
   14000efc5:	mov    BYTE PTR [rdi+0x8],0x1
   14000efc9:	movzx  edx,WORD PTR [rdi+0xa]
   14000efcd:	lea    rax,[rbp-0x11]
   14000efd1:	movzx  ecx,WORD PTR [rbp-0x11]
   14000efd5:	test   cx,cx
   14000efd8:	je     0x14000eff1
   14000efda:	nop    WORD PTR [rax+rax*1+0x0]
   14000efe0:	cmp    cx,dx
   14000efe3:	je     0x14000eff1
   14000efe5:	add    rax,0x2
   14000efe9:	movzx  ecx,WORD PTR [rax]
   14000efec:	test   cx,cx
   14000efef:	jne    0x14000efe0
   14000eff1:	lea    rcx,[rbp-0x11]
   14000eff5:	sub    rax,rcx
   14000eff8:	sar    rax,1
   14000effb:	cmp    rax,0xa
   14000efff:	jae    0x14000f0bb
   14000f005:	cmp    r13d,0x24
   14000f009:	jl     0x14000f013
   14000f00b:	inc    ebx
   14000f00d:	mov    DWORD PTR [rsp+0x34],ebx
   14000f011:	jmp    0x14000f03b
   14000f013:	test   rax,rax
   14000f016:	jne    0x14000f01d
   14000f018:	test   r13d,r13d
   14000f01b:	je     0x14000f03b
   14000f01d:	lea    rcx,[rip+0x2a9ac]        # 0x1400399d0
   14000f024:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000f028:	mov    BYTE PTR [r14],al
   14000f02b:	inc    r14
   14000f02e:	mov    QWORD PTR [rsp+0x38],r14
   14000f033:	inc    r13d
   14000f036:	mov    DWORD PTR [rsp+0x40],r13d
   14000f03b:	mov    r15b,0x1
   14000f03e:	mov    BYTE PTR [rsp+0x30],r15b
   14000f043:	mov    rcx,QWORD PTR [rdi]
   14000f046:	test   rcx,rcx
   14000f049:	je     0x14000f08c
   14000f04b:	mov    rax,QWORD PTR [rcx+0x38]
   14000f04f:	cmp    QWORD PTR [rax],0x0
   14000f053:	je     0x14000f076
   14000f055:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f059:	mov    eax,DWORD PTR [rdx]
   14000f05b:	test   eax,eax
   14000f05d:	jle    0x14000f076
   14000f05f:	dec    eax
   14000f061:	mov    DWORD PTR [rdx],eax
   14000f063:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f067:	mov    rdx,QWORD PTR [rcx]
   14000f06a:	lea    rax,[rdx+0x2]
   14000f06e:	mov    QWORD PTR [rcx],rax
   14000f071:	movzx  eax,WORD PTR [rdx]
   14000f074:	jmp    0x14000f07c
   14000f076:	mov    rax,QWORD PTR [rcx]
   14000f079:	call   QWORD PTR [rax+0x38]
   14000f07c:	mov    ecx,0xffff
   14000f081:	cmp    cx,ax
   14000f084:	je     0x14000f08c
   14000f086:	mov    BYTE PTR [rdi+0x8],0x0
   14000f08a:	jmp    0x14000f097
   14000f08c:	mov    QWORD PTR [rdi],0x0
   14000f093:	mov    BYTE PTR [rdi+0x8],0x1
   14000f097:	mov    rdx,r12
   14000f09a:	mov    rcx,rdi
   14000f09d:	call   0x1400110e0
   14000f0a2:	test   al,al
   14000f0a4:	je     0x14000ef80
   14000f0aa:	jmp    0x14000f0c0
   14000f0ac:	mov    r12,QWORD PTR [rsp+0x48]
   14000f0b1:	movzx  r15d,BYTE PTR [rsp+0x30]
   14000f0b7:	mov    rsi,QWORD PTR [rbp-0x79]
   14000f0bb:	test   r15b,r15b
   14000f0be:	je     0x14000f0d8
   14000f0c0:	mov    r14,QWORD PTR [rsp+0x38]
   14000f0c5:	test   r13d,r13d
   14000f0c8:	jne    0x14000f0dd
   14000f0ca:	mov    BYTE PTR [r14],0x30
   14000f0ce:	inc    r14
   14000f0d1:	mov    QWORD PTR [rsp+0x38],r14
   14000f0d6:	jmp    0x14000f0dd
   14000f0d8:	mov    r14,QWORD PTR [rsp+0x38]
   14000f0dd:	mov    rdx,r12
   14000f0e0:	mov    rcx,rdi
   14000f0e3:	call   0x1400110e0
   14000f0e8:	test   al,al
   14000f0ea:	jne    0x14000f1b4
   14000f0f0:	cmp    BYTE PTR [rdi+0x8],al
   14000f0f3:	jne    0x14000f138
   14000f0f5:	mov    rcx,QWORD PTR [rdi]
   14000f0f8:	test   rcx,rcx
   14000f0fb:	je     0x14000f12d
   14000f0fd:	mov    rax,QWORD PTR [rcx+0x38]
   14000f101:	mov    rdx,QWORD PTR [rax]
   14000f104:	test   rdx,rdx
   14000f107:	je     0x14000f117
   14000f109:	mov    rax,QWORD PTR [rcx+0x50]
   14000f10d:	cmp    DWORD PTR [rax],0x0
   14000f110:	jle    0x14000f117
   14000f112:	movzx  eax,WORD PTR [rdx]
   14000f115:	jmp    0x14000f11d
   14000f117:	mov    rax,QWORD PTR [rcx]
   14000f11a:	call   QWORD PTR [rax+0x30]
   14000f11d:	mov    ecx,0xffff
   14000f122:	cmp    cx,ax
   14000f125:	je     0x14000f12d
   14000f127:	mov    WORD PTR [rdi+0xa],ax
   14000f12b:	jmp    0x14000f134
   14000f12d:	mov    QWORD PTR [rdi],0x0
   14000f134:	mov    BYTE PTR [rdi+0x8],0x1
   14000f138:	movzx  ebx,WORD PTR [rdi+0xa]
   14000f13c:	mov    rax,QWORD PTR [rsi]
   14000f13f:	mov    rcx,rsi
   14000f142:	call   QWORD PTR [rax+0x18]
   14000f145:	cmp    bx,ax
   14000f148:	jne    0x14000f1b4
   14000f14a:	call   0x14001a1ec
   14000f14f:	mov    rcx,QWORD PTR [rax]
   14000f152:	movzx  eax,BYTE PTR [rcx]
   14000f155:	mov    BYTE PTR [r14],al
   14000f158:	inc    r14
   14000f15b:	mov    QWORD PTR [rsp+0x38],r14
   14000f160:	mov    rcx,QWORD PTR [rdi]
   14000f163:	test   rcx,rcx
   14000f166:	je     0x14000f1a9
   14000f168:	mov    rax,QWORD PTR [rcx+0x38]
   14000f16c:	cmp    QWORD PTR [rax],0x0
   14000f170:	je     0x14000f193
   14000f172:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f176:	mov    eax,DWORD PTR [rdx]
   14000f178:	test   eax,eax
   14000f17a:	jle    0x14000f193
   14000f17c:	dec    eax
   14000f17e:	mov    DWORD PTR [rdx],eax
   14000f180:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f184:	mov    rdx,QWORD PTR [rcx]
   14000f187:	lea    rax,[rdx+0x2]
   14000f18b:	mov    QWORD PTR [rcx],rax
   14000f18e:	movzx  eax,WORD PTR [rdx]
   14000f191:	jmp    0x14000f199
   14000f193:	mov    rax,QWORD PTR [rcx]
   14000f196:	call   QWORD PTR [rax+0x38]
   14000f199:	mov    ecx,0xffff
   14000f19e:	cmp    cx,ax
   14000f1a1:	je     0x14000f1a9
   14000f1a3:	mov    BYTE PTR [rdi+0x8],0x0
   14000f1a7:	jmp    0x14000f1b4
   14000f1a9:	xor    ebx,ebx
   14000f1ab:	mov    QWORD PTR [rdi],rbx
   14000f1ae:	mov    BYTE PTR [rdi+0x8],0x1
   14000f1b2:	jmp    0x14000f1b6
   14000f1b4:	xor    ebx,ebx
   14000f1b6:	test   r13d,r13d
   14000f1b9:	jne    0x14000f2b9
   14000f1bf:	mov    rdx,r12
   14000f1c2:	mov    rcx,rdi
   14000f1c5:	call   0x1400110e0
   14000f1ca:	test   al,al
   14000f1cc:	jne    0x14000f2a4
   14000f1d2:	mov    r14d,DWORD PTR [rsp+0x34]
   14000f1d7:	mov    r13d,0xffff
   14000f1dd:	nop    DWORD PTR [rax]
   14000f1e0:	cmp    BYTE PTR [rdi+0x8],0x0
   14000f1e4:	jne    0x14000f221
   14000f1e6:	mov    rcx,QWORD PTR [rdi]
   14000f1e9:	test   rcx,rcx
   14000f1ec:	je     0x14000f21a
   14000f1ee:	mov    rax,QWORD PTR [rcx+0x38]
   14000f1f2:	mov    rdx,QWORD PTR [rax]
   14000f1f5:	test   rdx,rdx
   14000f1f8:	je     0x14000f208
   14000f1fa:	mov    rax,QWORD PTR [rcx+0x50]
   14000f1fe:	cmp    DWORD PTR [rax],0x0
   14000f201:	jle    0x14000f208
   14000f203:	movzx  eax,WORD PTR [rdx]
   14000f206:	jmp    0x14000f20e
   14000f208:	mov    rax,QWORD PTR [rcx]
   14000f20b:	call   QWORD PTR [rax+0x30]
   14000f20e:	cmp    r13w,ax
   14000f212:	je     0x14000f21a
   14000f214:	mov    WORD PTR [rdi+0xa],ax
   14000f218:	jmp    0x14000f21d
   14000f21a:	mov    QWORD PTR [rdi],rbx
   14000f21d:	mov    BYTE PTR [rdi+0x8],0x1
   14000f221:	movzx  eax,WORD PTR [rdi+0xa]
   14000f225:	cmp    ax,WORD PTR [rbp-0x11]
   14000f229:	jne    0x14000f290
   14000f22b:	dec    r14d
   14000f22e:	mov    r15b,0x1
   14000f231:	mov    rcx,QWORD PTR [rdi]
   14000f234:	test   rcx,rcx
   14000f237:	je     0x14000f276
   14000f239:	mov    rax,QWORD PTR [rcx+0x38]
   14000f23d:	cmp    QWORD PTR [rax],0x0
   14000f241:	je     0x14000f264
   14000f243:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f247:	mov    eax,DWORD PTR [rdx]
   14000f249:	test   eax,eax
   14000f24b:	jle    0x14000f264
   14000f24d:	dec    eax
   14000f24f:	mov    DWORD PTR [rdx],eax
   14000f251:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f255:	mov    rdx,QWORD PTR [rcx]
   14000f258:	lea    rax,[rdx+0x2]
   14000f25c:	mov    QWORD PTR [rcx],rax
   14000f25f:	movzx  eax,WORD PTR [rdx]
   14000f262:	jmp    0x14000f26a
   14000f264:	mov    rax,QWORD PTR [rcx]
   14000f267:	call   QWORD PTR [rax+0x38]
   14000f26a:	cmp    r13w,ax
   14000f26e:	je     0x14000f276
   14000f270:	mov    BYTE PTR [rdi+0x8],0x0
   14000f274:	jmp    0x14000f27d
   14000f276:	mov    QWORD PTR [rdi],rbx
   14000f279:	mov    BYTE PTR [rdi+0x8],0x1
   14000f27d:	mov    rdx,r12
   14000f280:	mov    rcx,rdi
   14000f283:	call   0x1400110e0
   14000f288:	test   al,al
   14000f28a:	je     0x14000f1e0
   14000f290:	mov    DWORD PTR [rsp+0x34],r14d
   14000f295:	mov    BYTE PTR [rsp+0x30],r15b
   14000f29a:	mov    r13d,DWORD PTR [rsp+0x40]
   14000f29f:	mov    r14,QWORD PTR [rsp+0x38]
   14000f2a4:	mov    eax,DWORD PTR [rsp+0x34]
   14000f2a8:	test   eax,eax
   14000f2aa:	jns    0x14000f2b9
   14000f2ac:	mov    BYTE PTR [r14],0x30
   14000f2b0:	inc    r14
   14000f2b3:	inc    eax
   14000f2b5:	mov    DWORD PTR [rsp+0x34],eax
   14000f2b9:	mov    rdx,r12
   14000f2bc:	mov    rcx,rdi
   14000f2bf:	call   0x1400110e0
   14000f2c4:	test   al,al
   14000f2c6:	jne    0x14000f3d2
   14000f2cc:	nop    DWORD PTR [rax+0x0]
   14000f2d0:	cmp    BYTE PTR [rdi+0x8],0x0
   14000f2d4:	jne    0x14000f315
   14000f2d6:	mov    rcx,QWORD PTR [rdi]
   14000f2d9:	test   rcx,rcx
   14000f2dc:	je     0x14000f30e
   14000f2de:	mov    rax,QWORD PTR [rcx+0x38]
   14000f2e2:	mov    rdx,QWORD PTR [rax]
   14000f2e5:	test   rdx,rdx
   14000f2e8:	je     0x14000f2f8
   14000f2ea:	mov    rax,QWORD PTR [rcx+0x50]
   14000f2ee:	cmp    DWORD PTR [rax],0x0
   14000f2f1:	jle    0x14000f2f8
   14000f2f3:	movzx  eax,WORD PTR [rdx]
   14000f2f6:	jmp    0x14000f2fe
   14000f2f8:	mov    rax,QWORD PTR [rcx]
   14000f2fb:	call   QWORD PTR [rax+0x30]
   14000f2fe:	mov    ecx,0xffff
   14000f303:	cmp    cx,ax
   14000f306:	je     0x14000f30e
   14000f308:	mov    WORD PTR [rdi+0xa],ax
   14000f30c:	jmp    0x14000f311
   14000f30e:	mov    QWORD PTR [rdi],rbx
   14000f311:	mov    BYTE PTR [rdi+0x8],0x1
   14000f315:	movzx  edx,WORD PTR [rdi+0xa]
   14000f319:	lea    rax,[rbp-0x11]
   14000f31d:	movzx  ecx,WORD PTR [rbp-0x11]
   14000f321:	test   cx,cx
   14000f324:	je     0x14000f337
   14000f326:	cmp    cx,dx
   14000f329:	je     0x14000f337
   14000f32b:	add    rax,0x2
   14000f32f:	movzx  ecx,WORD PTR [rax]
   14000f332:	test   cx,cx
   14000f335:	jne    0x14000f326
   14000f337:	lea    rcx,[rbp-0x11]
   14000f33b:	sub    rax,rcx
   14000f33e:	sar    rax,1
   14000f341:	cmp    rax,0xa
   14000f345:	jae    0x14000f3d2
   14000f34b:	cmp    r13d,0x24
   14000f34f:	jge    0x14000f365
   14000f351:	lea    rcx,[rip+0x2a678]        # 0x1400399d0
   14000f358:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000f35c:	mov    BYTE PTR [r14],al
   14000f35f:	inc    r14
   14000f362:	inc    r13d
   14000f365:	mov    r15b,0x1
   14000f368:	mov    BYTE PTR [rsp+0x30],r15b
   14000f36d:	mov    rcx,QWORD PTR [rdi]
   14000f370:	test   rcx,rcx
   14000f373:	je     0x14000f3b6
   14000f375:	mov    rax,QWORD PTR [rcx+0x38]
   14000f379:	cmp    QWORD PTR [rax],0x0
   14000f37d:	je     0x14000f3a0
   14000f37f:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f383:	mov    eax,DWORD PTR [rdx]
   14000f385:	test   eax,eax
   14000f387:	jle    0x14000f3a0
   14000f389:	dec    eax
   14000f38b:	mov    DWORD PTR [rdx],eax
   14000f38d:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f391:	mov    rdx,QWORD PTR [rcx]
   14000f394:	lea    rax,[rdx+0x2]
   14000f398:	mov    QWORD PTR [rcx],rax
   14000f39b:	movzx  eax,WORD PTR [rdx]
   14000f39e:	jmp    0x14000f3a6
   14000f3a0:	mov    rax,QWORD PTR [rcx]
   14000f3a3:	call   QWORD PTR [rax+0x38]
   14000f3a6:	mov    ecx,0xffff
   14000f3ab:	cmp    cx,ax
   14000f3ae:	je     0x14000f3b6
   14000f3b0:	mov    BYTE PTR [rdi+0x8],0x0
   14000f3b4:	jmp    0x14000f3bd
   14000f3b6:	mov    QWORD PTR [rdi],rbx
   14000f3b9:	mov    BYTE PTR [rdi+0x8],0x1
   14000f3bd:	mov    rdx,r12
   14000f3c0:	mov    rcx,rdi
   14000f3c3:	call   0x1400110e0
   14000f3c8:	test   al,al
   14000f3ca:	je     0x14000f2d0
   14000f3d0:	jmp    0x14000f3db
   14000f3d2:	test   r15b,r15b
   14000f3d5:	je     0x14000f825
   14000f3db:	mov    rdx,r12
   14000f3de:	mov    rcx,rdi
   14000f3e1:	call   0x1400110e0
   14000f3e6:	test   al,al
   14000f3e8:	jne    0x14000f825
   14000f3ee:	cmp    BYTE PTR [rdi+0x8],al
   14000f3f1:	jne    0x14000f432
   14000f3f3:	mov    rcx,QWORD PTR [rdi]
   14000f3f6:	test   rcx,rcx
   14000f3f9:	je     0x14000f42b
   14000f3fb:	mov    rax,QWORD PTR [rcx+0x38]
   14000f3ff:	mov    rdx,QWORD PTR [rax]
   14000f402:	test   rdx,rdx
   14000f405:	je     0x14000f415
   14000f407:	mov    rax,QWORD PTR [rcx+0x50]
   14000f40b:	cmp    DWORD PTR [rax],0x0
   14000f40e:	jle    0x14000f415
   14000f410:	movzx  eax,WORD PTR [rdx]
   14000f413:	jmp    0x14000f41b
   14000f415:	mov    rax,QWORD PTR [rcx]
   14000f418:	call   QWORD PTR [rax+0x30]
   14000f41b:	mov    ecx,0xffff
   14000f420:	cmp    cx,ax
   14000f423:	je     0x14000f42b
   14000f425:	mov    WORD PTR [rdi+0xa],ax
   14000f429:	jmp    0x14000f42e
   14000f42b:	mov    QWORD PTR [rdi],rbx
   14000f42e:	mov    BYTE PTR [rdi+0x8],0x1
   14000f432:	movzx  eax,WORD PTR [rdi+0xa]
   14000f436:	cmp    ax,WORD PTR [rbp+0x9]
   14000f43a:	je     0x14000f48f
   14000f43c:	cmp    BYTE PTR [rdi+0x8],0x0
   14000f440:	jne    0x14000f481
   14000f442:	mov    rcx,QWORD PTR [rdi]
   14000f445:	test   rcx,rcx
   14000f448:	je     0x14000f47a
   14000f44a:	mov    rax,QWORD PTR [rcx+0x38]
   14000f44e:	mov    rdx,QWORD PTR [rax]
   14000f451:	test   rdx,rdx
   14000f454:	je     0x14000f464
   14000f456:	mov    rax,QWORD PTR [rcx+0x50]
   14000f45a:	cmp    DWORD PTR [rax],0x0
   14000f45d:	jle    0x14000f464
   14000f45f:	movzx  eax,WORD PTR [rdx]
   14000f462:	jmp    0x14000f46a
   14000f464:	mov    rax,QWORD PTR [rcx]
   14000f467:	call   QWORD PTR [rax+0x30]
   14000f46a:	mov    ecx,0xffff
   14000f46f:	cmp    cx,ax
   14000f472:	je     0x14000f47a
   14000f474:	mov    WORD PTR [rdi+0xa],ax
   14000f478:	jmp    0x14000f47d
   14000f47a:	mov    QWORD PTR [rdi],rbx
   14000f47d:	mov    BYTE PTR [rdi+0x8],0x1
   14000f481:	movzx  eax,WORD PTR [rdi+0xa]
   14000f485:	cmp    ax,WORD PTR [rbp+0x7]
   14000f489:	jne    0x14000f825
   14000f48f:	mov    BYTE PTR [r14],0x65
   14000f493:	inc    r14
   14000f496:	mov    rcx,QWORD PTR [rdi]
   14000f499:	test   rcx,rcx
   14000f49c:	je     0x14000f4e1
   14000f49e:	mov    rax,QWORD PTR [rcx+0x38]
   14000f4a2:	cmp    QWORD PTR [rax],0x0
   14000f4a6:	je     0x14000f4c9
   14000f4a8:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f4ac:	mov    eax,DWORD PTR [rdx]
   14000f4ae:	test   eax,eax
   14000f4b0:	jle    0x14000f4c9
   14000f4b2:	dec    eax
   14000f4b4:	mov    DWORD PTR [rdx],eax
   14000f4b6:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f4ba:	mov    rdx,QWORD PTR [rcx]
   14000f4bd:	lea    rax,[rdx+0x2]
   14000f4c1:	mov    QWORD PTR [rcx],rax
   14000f4c4:	movzx  eax,WORD PTR [rdx]
   14000f4c7:	jmp    0x14000f4cf
   14000f4c9:	mov    rax,QWORD PTR [rcx]
   14000f4cc:	call   QWORD PTR [rax+0x38]
   14000f4cf:	mov    r13d,0xffff
   14000f4d5:	cmp    r13w,ax
   14000f4d9:	je     0x14000f4e7
   14000f4db:	mov    BYTE PTR [rdi+0x8],0x0
   14000f4df:	jmp    0x14000f4ee
   14000f4e1:	mov    r13d,0xffff
   14000f4e7:	mov    QWORD PTR [rdi],rbx
   14000f4ea:	mov    BYTE PTR [rdi+0x8],0x1
   14000f4ee:	xor    sil,sil
   14000f4f1:	mov    BYTE PTR [rsp+0x30],sil
   14000f4f6:	mov    rdx,r12
   14000f4f9:	mov    rcx,rdi
   14000f4fc:	call   0x1400110e0
   14000f501:	test   al,al
   14000f503:	jne    0x14000f64d
   14000f509:	cmp    BYTE PTR [rdi+0x8],al
   14000f50c:	jne    0x14000f54d
   14000f50e:	mov    rcx,QWORD PTR [rdi]
   14000f511:	test   rcx,rcx
   14000f514:	je     0x14000f542
   14000f516:	mov    rax,QWORD PTR [rcx+0x38]
   14000f51a:	mov    rdx,QWORD PTR [rax]
   14000f51d:	test   rdx,rdx
   14000f520:	je     0x14000f530
   14000f522:	mov    rax,QWORD PTR [rcx+0x50]
   14000f526:	cmp    DWORD PTR [rax],0x0
   14000f529:	jle    0x14000f530
   14000f52b:	movzx  eax,WORD PTR [rdx]
   14000f52e:	jmp    0x14000f536
   14000f530:	mov    rax,QWORD PTR [rcx]
   14000f533:	call   QWORD PTR [rax+0x30]
   14000f536:	cmp    r13w,ax
   14000f53a:	je     0x14000f542
   14000f53c:	mov    WORD PTR [rdi+0xa],ax
   14000f540:	jmp    0x14000f549
   14000f542:	mov    QWORD PTR [rdi],0x0
   14000f549:	mov    BYTE PTR [rdi+0x8],0x1
   14000f54d:	movzx  eax,WORD PTR [rdi+0xa]
   14000f551:	cmp    ax,WORD PTR [rbp+0x5]
   14000f555:	jne    0x14000f5b0
   14000f557:	mov    BYTE PTR [r14],0x2b
   14000f55b:	inc    r14
   14000f55e:	mov    rcx,QWORD PTR [rdi]
   14000f561:	test   rcx,rcx
   14000f564:	je     0x14000f5a1
   14000f566:	mov    rax,QWORD PTR [rcx+0x38]
   14000f56a:	cmp    QWORD PTR [rax],0x0
   14000f56e:	je     0x14000f591
   14000f570:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f574:	mov    eax,DWORD PTR [rdx]
   14000f576:	test   eax,eax
   14000f578:	jle    0x14000f591
   14000f57a:	dec    eax
   14000f57c:	mov    DWORD PTR [rdx],eax
   14000f57e:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f582:	mov    rdx,QWORD PTR [rcx]
   14000f585:	lea    rax,[rdx+0x2]
   14000f589:	mov    QWORD PTR [rcx],rax
   14000f58c:	movzx  eax,WORD PTR [rdx]
   14000f58f:	jmp    0x14000f597
   14000f591:	mov    rax,QWORD PTR [rcx]
   14000f594:	call   QWORD PTR [rax+0x38]
   14000f597:	cmp    r13w,ax
   14000f59b:	jne    0x14000f649
   14000f5a1:	xor    r15d,r15d
   14000f5a4:	mov    QWORD PTR [rdi],r15
   14000f5a7:	mov    BYTE PTR [rdi+0x8],0x1
   14000f5ab:	jmp    0x14000f650
   14000f5b0:	cmp    BYTE PTR [rdi+0x8],0x0
   14000f5b4:	jne    0x14000f5f5
   14000f5b6:	mov    rcx,QWORD PTR [rdi]
   14000f5b9:	test   rcx,rcx
   14000f5bc:	je     0x14000f5ea
   14000f5be:	mov    rax,QWORD PTR [rcx+0x38]
   14000f5c2:	mov    rdx,QWORD PTR [rax]
   14000f5c5:	test   rdx,rdx
   14000f5c8:	je     0x14000f5d8
   14000f5ca:	mov    rax,QWORD PTR [rcx+0x50]
   14000f5ce:	cmp    DWORD PTR [rax],0x0
   14000f5d1:	jle    0x14000f5d8
   14000f5d3:	movzx  eax,WORD PTR [rdx]
   14000f5d6:	jmp    0x14000f5de
   14000f5d8:	mov    rax,QWORD PTR [rcx]
   14000f5db:	call   QWORD PTR [rax+0x30]
   14000f5de:	cmp    r13w,ax
   14000f5e2:	je     0x14000f5ea
   14000f5e4:	mov    WORD PTR [rdi+0xa],ax
   14000f5e8:	jmp    0x14000f5f1
   14000f5ea:	mov    QWORD PTR [rdi],0x0
   14000f5f1:	mov    BYTE PTR [rdi+0x8],0x1
   14000f5f5:	movzx  eax,WORD PTR [rdi+0xa]
   14000f5f9:	cmp    ax,WORD PTR [rbp+0x3]
   14000f5fd:	jne    0x14000f64d
   14000f5ff:	mov    BYTE PTR [r14],0x2d
   14000f603:	inc    r14
   14000f606:	mov    rcx,QWORD PTR [rdi]
   14000f609:	test   rcx,rcx
   14000f60c:	je     0x14000f5a1
   14000f60e:	mov    rax,QWORD PTR [rcx+0x38]
   14000f612:	cmp    QWORD PTR [rax],0x0
   14000f616:	je     0x14000f639
   14000f618:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f61c:	mov    eax,DWORD PTR [rdx]
   14000f61e:	test   eax,eax
   14000f620:	jle    0x14000f639
   14000f622:	dec    eax
   14000f624:	mov    DWORD PTR [rdx],eax
   14000f626:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f62a:	mov    rdx,QWORD PTR [rcx]
   14000f62d:	lea    rax,[rdx+0x2]
   14000f631:	mov    QWORD PTR [rcx],rax
   14000f634:	movzx  eax,WORD PTR [rdx]
   14000f637:	jmp    0x14000f63f
   14000f639:	mov    rax,QWORD PTR [rcx]
   14000f63c:	call   QWORD PTR [rax+0x38]
   14000f63f:	cmp    r13w,ax
   14000f643:	je     0x14000f5a1
   14000f649:	mov    BYTE PTR [rdi+0x8],0x0
   14000f64d:	xor    r15d,r15d
   14000f650:	mov    rdx,r12
   14000f653:	mov    rcx,rdi
   14000f656:	call   0x1400110e0
   14000f65b:	test   al,al
   14000f65d:	jne    0x14000f723
   14000f663:	cmp    BYTE PTR [rdi+0x8],0x0
   14000f667:	jne    0x14000f6a4
   14000f669:	mov    rcx,QWORD PTR [rdi]
   14000f66c:	test   rcx,rcx
   14000f66f:	je     0x14000f69d
   14000f671:	mov    rax,QWORD PTR [rcx+0x38]
   14000f675:	mov    rdx,QWORD PTR [rax]
   14000f678:	test   rdx,rdx
   14000f67b:	je     0x14000f68b
   14000f67d:	mov    rax,QWORD PTR [rcx+0x50]
   14000f681:	cmp    DWORD PTR [rax],0x0
   14000f684:	jle    0x14000f68b
   14000f686:	movzx  eax,WORD PTR [rdx]
   14000f689:	jmp    0x14000f691
   14000f68b:	mov    rax,QWORD PTR [rcx]
   14000f68e:	call   QWORD PTR [rax+0x30]
   14000f691:	cmp    r13w,ax
   14000f695:	je     0x14000f69d
   14000f697:	mov    WORD PTR [rdi+0xa],ax
   14000f69b:	jmp    0x14000f6a0
   14000f69d:	mov    QWORD PTR [rdi],r15
   14000f6a0:	mov    BYTE PTR [rdi+0x8],0x1
   14000f6a4:	movzx  eax,WORD PTR [rdi+0xa]
   14000f6a8:	cmp    ax,WORD PTR [rbp-0x11]
   14000f6ac:	jne    0x14000f717
   14000f6ae:	mov    sil,0x1
   14000f6b1:	mov    BYTE PTR [rsp+0x30],sil
   14000f6b6:	mov    rcx,QWORD PTR [rdi]
   14000f6b9:	test   rcx,rcx
   14000f6bc:	je     0x14000f6fb
   14000f6be:	mov    rax,QWORD PTR [rcx+0x38]
   14000f6c2:	cmp    QWORD PTR [rax],0x0
   14000f6c6:	je     0x14000f6e9
   14000f6c8:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f6cc:	mov    eax,DWORD PTR [rdx]
   14000f6ce:	test   eax,eax
   14000f6d0:	jle    0x14000f6e9
   14000f6d2:	dec    eax
   14000f6d4:	mov    DWORD PTR [rdx],eax
   14000f6d6:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f6da:	mov    rdx,QWORD PTR [rcx]
   14000f6dd:	lea    rax,[rdx+0x2]
   14000f6e1:	mov    QWORD PTR [rcx],rax
   14000f6e4:	movzx  eax,WORD PTR [rdx]
   14000f6e7:	jmp    0x14000f6ef
   14000f6e9:	mov    rax,QWORD PTR [rcx]
   14000f6ec:	call   QWORD PTR [rax+0x38]
   14000f6ef:	cmp    r13w,ax
   14000f6f3:	je     0x14000f6fb
   14000f6f5:	mov    BYTE PTR [rdi+0x8],0x0
   14000f6f9:	jmp    0x14000f702
   14000f6fb:	mov    QWORD PTR [rdi],r15
   14000f6fe:	mov    BYTE PTR [rdi+0x8],0x1
   14000f702:	mov    rdx,r12
   14000f705:	mov    rcx,rdi
   14000f708:	call   0x1400110e0
   14000f70d:	test   al,al
   14000f70f:	je     0x14000f663
   14000f715:	jmp    0x14000f71c
   14000f717:	test   sil,sil
   14000f71a:	je     0x14000f723
   14000f71c:	mov    BYTE PTR [r14],0x30
   14000f720:	inc    r14
   14000f723:	mov    rdx,r12
   14000f726:	mov    rcx,rdi
   14000f729:	call   0x1400110e0
   14000f72e:	test   al,al
   14000f730:	jne    0x14000f825
   14000f736:	cmp    BYTE PTR [rdi+0x8],0x0
   14000f73a:	jne    0x14000f777
   14000f73c:	mov    rcx,QWORD PTR [rdi]
   14000f73f:	test   rcx,rcx
   14000f742:	je     0x14000f770
   14000f744:	mov    rax,QWORD PTR [rcx+0x38]
   14000f748:	mov    rdx,QWORD PTR [rax]
   14000f74b:	test   rdx,rdx
   14000f74e:	je     0x14000f75e
   14000f750:	mov    rax,QWORD PTR [rcx+0x50]
   14000f754:	cmp    DWORD PTR [rax],0x0
   14000f757:	jle    0x14000f75e
   14000f759:	movzx  eax,WORD PTR [rdx]
   14000f75c:	jmp    0x14000f764
   14000f75e:	mov    rax,QWORD PTR [rcx]
   14000f761:	call   QWORD PTR [rax+0x30]
   14000f764:	cmp    r13w,ax
   14000f768:	je     0x14000f770
   14000f76a:	mov    WORD PTR [rdi+0xa],ax
   14000f76e:	jmp    0x14000f773
   14000f770:	mov    QWORD PTR [rdi],r15
   14000f773:	mov    BYTE PTR [rdi+0x8],0x1
   14000f777:	movzx  edx,WORD PTR [rdi+0xa]
   14000f77b:	lea    rax,[rbp-0x11]
   14000f77f:	movzx  ecx,WORD PTR [rbp-0x11]
   14000f783:	test   cx,cx
   14000f786:	je     0x14000f799
   14000f788:	cmp    cx,dx
   14000f78b:	je     0x14000f799
   14000f78d:	add    rax,0x2
   14000f791:	movzx  ecx,WORD PTR [rax]
   14000f794:	test   cx,cx
   14000f797:	jne    0x14000f788
   14000f799:	lea    rcx,[rbp-0x11]
   14000f79d:	sub    rax,rcx
   14000f7a0:	sar    rax,1
   14000f7a3:	cmp    rax,0xa
   14000f7a7:	jae    0x14000f825
   14000f7a9:	cmp    ebx,0x8
   14000f7ac:	jge    0x14000f7c1
   14000f7ae:	lea    rcx,[rip+0x2a21b]        # 0x1400399d0
   14000f7b5:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000f7b9:	mov    BYTE PTR [r14],al
   14000f7bc:	inc    r14
   14000f7bf:	inc    ebx
   14000f7c1:	mov    BYTE PTR [rsp+0x30],0x1
   14000f7c6:	mov    rcx,QWORD PTR [rdi]
   14000f7c9:	test   rcx,rcx
   14000f7cc:	je     0x14000f80b
   14000f7ce:	mov    rax,QWORD PTR [rcx+0x38]
   14000f7d2:	cmp    QWORD PTR [rax],0x0
   14000f7d6:	je     0x14000f7f9
   14000f7d8:	mov    rdx,QWORD PTR [rcx+0x50]
   14000f7dc:	mov    eax,DWORD PTR [rdx]
   14000f7de:	test   eax,eax
   14000f7e0:	jle    0x14000f7f9
   14000f7e2:	dec    eax
   14000f7e4:	mov    DWORD PTR [rdx],eax
   14000f7e6:	mov    rcx,QWORD PTR [rcx+0x38]
   14000f7ea:	mov    rdx,QWORD PTR [rcx]
   14000f7ed:	lea    rax,[rdx+0x2]
   14000f7f1:	mov    QWORD PTR [rcx],rax
   14000f7f4:	movzx  eax,WORD PTR [rdx]
   14000f7f7:	jmp    0x14000f7ff
   14000f7f9:	mov    rax,QWORD PTR [rcx]
   14000f7fc:	call   QWORD PTR [rax+0x38]
   14000f7ff:	cmp    r13w,ax
   14000f803:	je     0x14000f80b
   14000f805:	mov    BYTE PTR [rdi+0x8],0x0
   14000f809:	jmp    0x14000f812
   14000f80b:	mov    QWORD PTR [rdi],r15
   14000f80e:	mov    BYTE PTR [rdi+0x8],0x1
   14000f812:	mov    rdx,r12
   14000f815:	mov    rcx,rdi
   14000f818:	call   0x1400110e0
   14000f81d:	test   al,al
   14000f81f:	je     0x14000f736
   14000f825:	cmp    BYTE PTR [rsp+0x31],0x0
   14000f82a:	jne    0x14000f835
   14000f82c:	movzx  eax,BYTE PTR [rsp+0x30]
   14000f831:	test   al,al
   14000f833:	jne    0x14000f839
   14000f835:	mov    r14,QWORD PTR [rbp-0x61]
   14000f839:	mov    BYTE PTR [r14],0x0
   14000f83d:	cmp    QWORD PTR [rbp-0x19],0x10
   14000f842:	jb     0x14000f84d
   14000f844:	mov    rcx,QWORD PTR [rbp-0x31]
   14000f848:	call   0x140018a04
   14000f84d:	mov    eax,DWORD PTR [rsp+0x34]
   14000f851:	mov    rcx,QWORD PTR [rbp+0xf]
   14000f855:	xor    rcx,rsp
   14000f858:	call   0x1400187d0
   14000f85d:	mov    rbx,QWORD PTR [rsp+0x120]
   14000f865:	add    rsp,0xe0
   14000f86c:	pop    r15
   14000f86e:	pop    r14
   14000f870:	pop    r13
   14000f872:	pop    r12
   14000f874:	pop    rdi
   14000f875:	pop    rsi
   14000f876:	pop    rbp
   14000f877:	ret    
   14000f878:	int3   
   14000f879:	int3   
   14000f87a:	int3   
   14000f87b:	int3   
   14000f87c:	int3   
   14000f87d:	int3   
   14000f87e:	int3   
   14000f87f:	int3   
   14000f880:	rex push rbx
   14000f882:	push   rbp
   14000f883:	push   rsi
   14000f884:	sub    rsp,0x20
   14000f888:	or     rax,0xffffffffffffffff
   14000f88c:	movzx  ebp,r8b
   14000f890:	mov    r8,QWORD PTR [rcx+0x10]
   14000f894:	sub    rax,r8
   14000f897:	mov    rsi,rdx
   14000f89a:	mov    rbx,rcx
   14000f89d:	cmp    rax,rdx
   14000f8a0:	jbe    0x14000f97f
   14000f8a6:	mov    QWORD PTR [rsp+0x58],rdi
   14000f8ab:	test   rdx,rdx
   14000f8ae:	je     0x14000f96f
   14000f8b4:	lea    rdi,[r8+rdx*1]
   14000f8b8:	cmp    rdi,0xfffffffffffffffe
   14000f8bc:	ja     0x14000f98c
   14000f8c2:	mov    rax,QWORD PTR [rcx+0x18]
   14000f8c6:	cmp    rax,rdi
   14000f8c9:	jae    0x14000f8f6
   14000f8cb:	mov    rdx,rdi
   14000f8ce:	call   0x140008c70
   14000f8d3:	test   rdi,rdi
   14000f8d6:	je     0x14000f96f
   14000f8dc:	mov    rcx,QWORD PTR [rbx+0x10]
   14000f8e0:	cmp    rsi,0x1
   14000f8e4:	jne    0x14000f93a
   14000f8e6:	cmp    QWORD PTR [rbx+0x18],0x10
   14000f8eb:	jb     0x14000f931
   14000f8ed:	mov    rax,QWORD PTR [rbx]
   14000f8f0:	mov    BYTE PTR [rax+rcx*1],bpl
   14000f8f4:	jmp    0x14000f958
   14000f8f6:	test   rdi,rdi
   14000f8f9:	jne    0x14000f8dc
   14000f8fb:	mov    QWORD PTR [rcx+0x10],rdi
   14000f8ff:	cmp    rax,0x10
   14000f903:	jb     0x14000f91b
   14000f905:	mov    rax,QWORD PTR [rcx]
   14000f908:	mov    BYTE PTR [rax],dil
   14000f90b:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f910:	mov    rax,rbx
   14000f913:	add    rsp,0x20
   14000f917:	pop    rsi
   14000f918:	pop    rbp
   14000f919:	pop    rbx
   14000f91a:	ret    
   14000f91b:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f920:	mov    rax,rcx
   14000f923:	mov    BYTE PTR [rcx],0x0
   14000f926:	mov    rax,rbx
   14000f929:	add    rsp,0x20
   14000f92d:	pop    rsi
   14000f92e:	pop    rbp
   14000f92f:	pop    rbx
   14000f930:	ret    
   14000f931:	mov    rax,rbx
   14000f934:	mov    BYTE PTR [rbx+rcx*1],bpl
   14000f938:	jmp    0x14000f958
   14000f93a:	cmp    QWORD PTR [rbx+0x18],0x10
   14000f93f:	jb     0x14000f946
   14000f941:	mov    rax,QWORD PTR [rbx]
   14000f944:	jmp    0x14000f949
   14000f946:	mov    rax,rbx
   14000f949:	movsx  edx,bpl
   14000f94d:	add    rcx,rax
   14000f950:	mov    r8,rsi
   14000f953:	call   0x14001b980
   14000f958:	cmp    QWORD PTR [rbx+0x18],0x10
   14000f95d:	mov    QWORD PTR [rbx+0x10],rdi
   14000f961:	jb     0x14000f968
   14000f963:	mov    rax,QWORD PTR [rbx]
   14000f966:	jmp    0x14000f96b
   14000f968:	mov    rax,rbx
   14000f96b:	mov    BYTE PTR [rax+rdi*1],0x0
   14000f96f:	mov    rax,rbx
   14000f972:	mov    rdi,QWORD PTR [rsp+0x58]
   14000f977:	add    rsp,0x20
   14000f97b:	pop    rsi
   14000f97c:	pop    rbp
   14000f97d:	pop    rbx
   14000f97e:	ret    
   14000f97f:	lea    rcx,[rip+0x2832a]        # 0x140037cb0
   14000f986:	call   0x14001405c
   14000f98b:	int3   
   14000f98c:	lea    rcx,[rip+0x2831d]        # 0x140037cb0
   14000f993:	call   0x14001405c
   14000f998:	int3   
   14000f999:	int3   
   14000f99a:	int3   
   14000f99b:	int3   
   14000f99c:	int3   
   14000f99d:	int3   
   14000f99e:	int3   
   14000f99f:	int3   
   14000f9a0:	rex push rdi
   14000f9a2:	sub    rsp,0x30
   14000f9a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000f9af:	mov    QWORD PTR [rsp+0x48],rbx
   14000f9b4:	mov    rbx,rdx
   14000f9b7:	mov    rdi,rcx
   14000f9ba:	call   0x1400111d0
   14000f9bf:	mov    QWORD PTR [rdi+0x48],rbx
   14000f9c3:	mov    QWORD PTR [rdi+0x50],0x0
   14000f9cb:	lea    rdx,[rsp+0x40]
   14000f9d0:	mov    rcx,rdi
   14000f9d3:	call   0x140012a40
   14000f9d8:	nop
   14000f9d9:	mov    rcx,rax
   14000f9dc:	call   0x1400128d0
   14000f9e1:	mov    rbx,rax
   14000f9e4:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f9e9:	test   rcx,rcx
   14000f9ec:	je     0x14000fa07
   14000f9ee:	mov    rdx,QWORD PTR [rcx]
   14000f9f1:	call   QWORD PTR [rdx+0x10]
   14000f9f4:	test   rax,rax
   14000f9f7:	je     0x14000fa07
   14000f9f9:	mov    r8,QWORD PTR [rax]
   14000f9fc:	mov    edx,0x1
   14000fa01:	mov    rcx,rax
   14000fa04:	call   QWORD PTR [r8]
   14000fa07:	mov    rax,QWORD PTR [rbx]
   14000fa0a:	mov    dl,0x20
   14000fa0c:	mov    rcx,rbx
   14000fa0f:	call   QWORD PTR [rax+0x60]
   14000fa12:	mov    WORD PTR [rdi+0x58],ax
   14000fa16:	cmp    QWORD PTR [rdi+0x48],0x0
   14000fa1b:	jne    0x14000fa2e
   14000fa1d:	mov    edx,DWORD PTR [rdi+0x10]
   14000fa20:	or     edx,0x4
   14000fa23:	xor    r8d,r8d
   14000fa26:	mov    rcx,rdi
   14000fa29:	call   0x1400130b0
   14000fa2e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fa33:	add    rsp,0x30
   14000fa37:	pop    rdi
   14000fa38:	ret    
   14000fa39:	int3   
   14000fa3a:	int3   
   14000fa3b:	int3   
   14000fa3c:	int3   
   14000fa3d:	int3   
   14000fa3e:	int3   
   14000fa3f:	int3   
   14000fa40:	rex push rbp
   14000fa42:	push   rsi
   14000fa43:	push   rdi
   14000fa44:	push   r12
   14000fa46:	push   r13
   14000fa48:	push   r14
   14000fa4a:	push   r15
   14000fa4c:	lea    rbp,[rsp-0x17]
   14000fa51:	sub    rsp,0xf0
   14000fa58:	mov    QWORD PTR [rbp-0x71],0xfffffffffffffffe
   14000fa60:	mov    QWORD PTR [rsp+0x130],rbx
   14000fa68:	mov    rax,QWORD PTR [rip+0x31be1]        # 0x140041650
   14000fa6f:	xor    rax,rsp
   14000fa72:	mov    QWORD PTR [rbp+0xf],rax
   14000fa76:	mov    r15,r9
   14000fa79:	mov    QWORD PTR [rsp+0x38],r9
   14000fa7e:	mov    rbx,r8
   14000fa81:	mov    r12,rdx
   14000fa84:	mov    QWORD PTR [rsp+0x50],rdx
   14000fa89:	mov    rdi,QWORD PTR [rbp+0x77]
   14000fa8d:	mov    rax,QWORD PTR [rbp+0x7f]
   14000fa91:	mov    QWORD PTR [rbp-0x79],rax
   14000fa95:	lea    rdx,[rsp+0x48]
   14000fa9a:	mov    rcx,rdi
   14000fa9d:	call   0x140012a40
   14000faa2:	nop
   14000faa3:	mov    rcx,rax
   14000faa6:	call   0x140011a50
   14000faab:	mov    r14,rax
   14000faae:	mov    QWORD PTR [rsp+0x40],rax
   14000fab3:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fab8:	test   rcx,rcx
   14000fabb:	je     0x14000fad6
   14000fabd:	mov    rdx,QWORD PTR [rcx]
   14000fac0:	call   QWORD PTR [rdx+0x10]
   14000fac3:	test   rax,rax
   14000fac6:	je     0x14000fad6
   14000fac8:	mov    r8,QWORD PTR [rax]
   14000facb:	mov    edx,0x1
   14000fad0:	mov    rcx,rax
   14000fad3:	call   QWORD PTR [r8]
   14000fad6:	lea    rdx,[rbp-0x49]
   14000fada:	mov    rcx,r14
   14000fadd:	call   0x140011360
   14000fae2:	nop
   14000fae3:	lea    rdx,[rsp+0x28]
   14000fae8:	mov    rcx,rdi
   14000faeb:	call   0x140012a40
   14000faf0:	nop
   14000faf1:	mov    rcx,rax
   14000faf4:	call   0x1400128d0
   14000faf9:	mov    rdi,rax
   14000fafc:	mov    rcx,QWORD PTR [rsp+0x28]
   14000fb01:	test   rcx,rcx
   14000fb04:	je     0x14000fb1f
   14000fb06:	mov    rdx,QWORD PTR [rcx]
   14000fb09:	call   QWORD PTR [rdx+0x10]
   14000fb0c:	test   rax,rax
   14000fb0f:	je     0x14000fb1f
   14000fb11:	mov    r8,QWORD PTR [rax]
   14000fb14:	mov    edx,0x1
   14000fb19:	mov    rcx,rax
   14000fb1c:	call   QWORD PTR [r8]
   14000fb1f:	mov    rax,QWORD PTR [rdi]
   14000fb22:	lea    r9,[rbp-0x29]
   14000fb26:	lea    r8,[rip+0x29e9f]        # 0x1400399cc
   14000fb2d:	lea    rdx,[rip+0x29e7c]        # 0x1400399b0
   14000fb34:	mov    rcx,rdi
   14000fb37:	call   QWORD PTR [rax+0x58]
   14000fb3a:	mov    rsi,r12
   14000fb3d:	mov    BYTE PTR [rsp+0x21],0x0
   14000fb42:	mov    rdx,r15
   14000fb45:	mov    rcx,rbx
   14000fb48:	call   0x1400110e0
   14000fb4d:	test   al,al
   14000fb4f:	jne    0x14000fb86
   14000fb51:	mov    rcx,rbx
   14000fb54:	call   0x140010760
   14000fb59:	mov    rcx,rbx
   14000fb5c:	cmp    ax,WORD PTR [rbp+0x5]
   14000fb60:	jne    0x14000fb69
   14000fb62:	mov    BYTE PTR [r12],0x2b
   14000fb67:	jmp    0x14000fb7c
   14000fb69:	call   0x140010760
   14000fb6e:	cmp    ax,WORD PTR [rbp+0x3]
   14000fb72:	jne    0x14000fb86
   14000fb74:	mov    BYTE PTR [r12],0x2d
   14000fb79:	mov    rcx,rbx
   14000fb7c:	lea    rsi,[r12+0x1]
   14000fb81:	call   0x1400107d0
   14000fb86:	mov    WORD PTR [rsi],0x7830
   14000fb8b:	add    rsi,0x2
   14000fb8f:	mov    QWORD PTR [rsp+0x28],rsi
   14000fb94:	xor    r12b,r12b
   14000fb97:	mov    BYTE PTR [rsp+0x20],r12b
   14000fb9c:	xor    eax,eax
   14000fb9e:	mov    r13d,eax
   14000fba1:	mov    DWORD PTR [rsp+0x30],eax
   14000fba5:	mov    edi,eax
   14000fba7:	mov    DWORD PTR [rsp+0x24],eax
   14000fbab:	mov    rdx,r15
   14000fbae:	mov    rcx,rbx
   14000fbb1:	call   0x1400110e0
   14000fbb6:	test   al,al
   14000fbb8:	jne    0x14000fc0d
   14000fbba:	mov    rcx,rbx
   14000fbbd:	call   0x140010760
   14000fbc2:	cmp    ax,WORD PTR [rbp-0x29]
   14000fbc6:	jne    0x14000fc0d
   14000fbc8:	mov    rcx,rbx
   14000fbcb:	call   0x1400107d0
   14000fbd0:	mov    rdx,r15
   14000fbd3:	mov    rcx,rax
   14000fbd6:	call   0x1400110e0
   14000fbdb:	test   al,al
   14000fbdd:	jne    0x14000fc05
   14000fbdf:	mov    rcx,rbx
   14000fbe2:	call   0x140010760
   14000fbe7:	cmp    ax,WORD PTR [rbp+0x9]
   14000fbeb:	je     0x14000fbfb
   14000fbed:	mov    rcx,rbx
   14000fbf0:	call   0x140010760
   14000fbf5:	cmp    ax,WORD PTR [rbp+0x7]
   14000fbf9:	jne    0x14000fc05
   14000fbfb:	mov    rcx,rbx
   14000fbfe:	call   0x1400107d0
   14000fc03:	jmp    0x14000fc0d
   14000fc05:	mov    r12b,0x1
   14000fc08:	mov    BYTE PTR [rsp+0x20],r12b
   14000fc0d:	lea    r15,[rbp-0x49]
   14000fc11:	cmp    QWORD PTR [rbp-0x31],0x10
   14000fc16:	cmovae r15,QWORD PTR [rbp-0x49]
   14000fc1b:	mov    QWORD PTR [rsp+0x58],r15
   14000fc20:	movzx  eax,BYTE PTR [r15]
   14000fc24:	dec    al
   14000fc26:	cmp    al,0x7d
   14000fc28:	ja     0x14000fe51
   14000fc2e:	cmp    QWORD PTR [rbp-0x39],rdi
   14000fc32:	jne    0x14000fc3a
   14000fc34:	movzx  r12d,di
   14000fc38:	jmp    0x14000fc47
   14000fc3a:	mov    rax,QWORD PTR [r14]
   14000fc3d:	mov    rcx,r14
   14000fc40:	call   QWORD PTR [rax+0x20]
   14000fc43:	movzx  r12d,ax
   14000fc47:	mov    QWORD PTR [rbp-0x51],0xf
   14000fc4f:	mov    QWORD PTR [rbp-0x59],rdi
   14000fc53:	mov    BYTE PTR [rbp-0x69],r13b
   14000fc57:	xor    r8d,r8d
   14000fc5a:	lea    edx,[r8+0x1]
   14000fc5e:	lea    rcx,[rbp-0x69]
   14000fc62:	call   0x140011260
   14000fc67:	nop
   14000fc68:	mov    rdx,QWORD PTR [rsp+0x38]
   14000fc6d:	mov    rcx,rbx
   14000fc70:	call   0x1400110e0
   14000fc75:	mov    rsi,QWORD PTR [rbp-0x51]
   14000fc79:	mov    r14,QWORD PTR [rbp-0x69]
   14000fc7d:	test   al,al
   14000fc7f:	jne    0x14000fdf0
   14000fc85:	mov    r15,QWORD PTR [rsp+0x28]
   14000fc8a:	nop    WORD PTR [rax+rax*1+0x0]
   14000fc90:	cmp    BYTE PTR [rbx+0x8],0x0
   14000fc94:	jne    0x14000fcd9
   14000fc96:	mov    rcx,QWORD PTR [rbx]
   14000fc99:	test   rcx,rcx
   14000fc9c:	je     0x14000fcce
   14000fc9e:	mov    rax,QWORD PTR [rcx+0x38]
   14000fca2:	mov    rdx,QWORD PTR [rax]
   14000fca5:	test   rdx,rdx
   14000fca8:	je     0x14000fcb8
   14000fcaa:	mov    rax,QWORD PTR [rcx+0x50]
   14000fcae:	cmp    DWORD PTR [rax],0x0
   14000fcb1:	jle    0x14000fcb8
   14000fcb3:	movzx  eax,WORD PTR [rdx]
   14000fcb6:	jmp    0x14000fcbe
   14000fcb8:	mov    rax,QWORD PTR [rcx]
   14000fcbb:	call   QWORD PTR [rax+0x30]
   14000fcbe:	mov    ecx,0xffff
   14000fcc3:	cmp    cx,ax
   14000fcc6:	je     0x14000fcce
   14000fcc8:	mov    WORD PTR [rbx+0xa],ax
   14000fccc:	jmp    0x14000fcd5
   14000fcce:	mov    QWORD PTR [rbx],0x0
   14000fcd5:	mov    BYTE PTR [rbx+0x8],0x1
   14000fcd9:	movzx  edx,WORD PTR [rbx+0xa]
   14000fcdd:	lea    rax,[rbp-0x29]
   14000fce1:	movzx  ecx,WORD PTR [rbp-0x29]
   14000fce5:	test   cx,cx
   14000fce8:	je     0x14000fd01
   14000fcea:	nop    WORD PTR [rax+rax*1+0x0]
   14000fcf0:	cmp    cx,dx
   14000fcf3:	je     0x14000fd01
   14000fcf5:	add    rax,0x2
   14000fcf9:	movzx  ecx,WORD PTR [rax]
   14000fcfc:	test   cx,cx
   14000fcff:	jne    0x14000fcf0
   14000fd01:	lea    rcx,[rbp-0x29]
   14000fd05:	sub    rax,rcx
   14000fd08:	sar    rax,1
   14000fd0b:	cmp    rax,0x16
   14000fd0f:	jae    0x14000fd63
   14000fd11:	mov    BYTE PTR [rsp+0x20],0x1
   14000fd16:	cmp    r13d,0x24
   14000fd1a:	jl     0x14000fd22
   14000fd1c:	inc    DWORD PTR [rsp+0x24]
   14000fd20:	jmp    0x14000fd40
   14000fd22:	test   rax,rax
   14000fd25:	jne    0x14000fd2c
   14000fd27:	test   r13d,r13d
   14000fd2a:	je     0x14000fd40
   14000fd2c:	lea    rcx,[rip+0x29c7d]        # 0x1400399b0
   14000fd33:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000fd37:	mov    BYTE PTR [r15],al
   14000fd3a:	inc    r15
   14000fd3d:	inc    r13d
   14000fd40:	lea    rax,[rbp-0x69]
   14000fd44:	cmp    rsi,0x10
   14000fd48:	cmovae rax,r14
   14000fd4c:	cmp    BYTE PTR [rax+rdi*1],0x7f
   14000fd50:	je     0x14000fda4
   14000fd52:	lea    rax,[rbp-0x69]
   14000fd56:	cmp    rsi,0x10
   14000fd5a:	cmovae rax,r14
   14000fd5e:	inc    BYTE PTR [rax+rdi*1]
   14000fd61:	jmp    0x14000fd9c
   14000fd63:	lea    rax,[rbp-0x69]
   14000fd67:	cmp    rsi,0x10
   14000fd6b:	cmovae rax,r14
   14000fd6f:	cmp    BYTE PTR [rax+rdi*1],0x0
   14000fd73:	je     0x14000fdc1
   14000fd75:	test   r12w,r12w
   14000fd79:	je     0x14000fdc1
   14000fd7b:	mov    rcx,rbx
   14000fd7e:	call   0x140010760
   14000fd83:	cmp    ax,r12w
   14000fd87:	jne    0x14000fdc1
   14000fd89:	xor    r8d,r8d
   14000fd8c:	lea    edx,[r8+0x1]
   14000fd90:	lea    rcx,[rbp-0x69]
   14000fd94:	call   0x14000f880
   14000fd99:	inc    rdi
   14000fd9c:	mov    r14,QWORD PTR [rbp-0x69]
   14000fda0:	mov    rsi,QWORD PTR [rbp-0x51]
   14000fda4:	mov    rcx,rbx
   14000fda7:	call   0x1400107d0
   14000fdac:	mov    rdx,QWORD PTR [rsp+0x38]
   14000fdb1:	mov    rcx,rbx
   14000fdb4:	call   0x1400110e0
   14000fdb9:	test   al,al
   14000fdbb:	je     0x14000fc90
   14000fdc1:	mov    QWORD PTR [rsp+0x28],r15
   14000fdc6:	mov    DWORD PTR [rsp+0x30],r13d
   14000fdcb:	test   rdi,rdi
   14000fdce:	mov    r15,QWORD PTR [rsp+0x58]
   14000fdd3:	je     0x14000fe3a
   14000fdd5:	lea    rax,[rbp-0x69]
   14000fdd9:	cmp    rsi,0x10
   14000fddd:	cmovae rax,r14
   14000fde1:	cmp    BYTE PTR [rax+rdi*1],0x0
   14000fde5:	jle    0x14000fe35
   14000fde7:	inc    rdi
   14000fdea:	nop    WORD PTR [rax+rax*1+0x0]
   14000fdf0:	test   rdi,rdi
   14000fdf3:	je     0x14000fe3a
   14000fdf5:	movzx  ecx,BYTE PTR [r15]
   14000fdf9:	cmp    cl,0x7f
   14000fdfc:	je     0x14000fe3a
   14000fdfe:	dec    rdi
   14000fe01:	je     0x14000fe14
   14000fe03:	lea    rax,[rbp-0x69]
   14000fe07:	cmp    rsi,0x10
   14000fe0b:	cmovae rax,r14
   14000fe0f:	cmp    cl,BYTE PTR [rax+rdi*1]
   14000fe12:	jne    0x14000fe35
   14000fe14:	test   rdi,rdi
   14000fe17:	jne    0x14000fe29
   14000fe19:	lea    rax,[rbp-0x69]
   14000fe1d:	cmp    rsi,0x10
   14000fe21:	cmovae rax,r14
   14000fe25:	cmp    cl,BYTE PTR [rax]
   14000fe27:	jl     0x14000fe35
   14000fe29:	cmp    BYTE PTR [r15+0x1],0x0
   14000fe2e:	jle    0x14000fdf0
   14000fe30:	inc    r15
   14000fe33:	jmp    0x14000fdf0
   14000fe35:	mov    BYTE PTR [rsp+0x21],0x1
   14000fe3a:	cmp    rsi,0x10
   14000fe3e:	jb     0x14000ff9b
   14000fe44:	mov    rcx,r14
   14000fe47:	call   0x140018a04
   14000fe4c:	jmp    0x14000ff9b
   14000fe51:	mov    r15,QWORD PTR [rsp+0x38]
   14000fe56:	mov    rdx,r15
   14000fe59:	mov    rcx,rbx
   14000fe5c:	call   0x1400110e0
   14000fe61:	test   al,al
   14000fe63:	jne    0x14000ffb0
   14000fe69:	nop    DWORD PTR [rax+0x0]
   14000fe70:	cmp    BYTE PTR [rbx+0x8],0x0
   14000fe74:	jne    0x14000feb9
   14000fe76:	mov    rcx,QWORD PTR [rbx]
   14000fe79:	test   rcx,rcx
   14000fe7c:	je     0x14000feae
   14000fe7e:	mov    rax,QWORD PTR [rcx+0x38]
   14000fe82:	mov    rdx,QWORD PTR [rax]
   14000fe85:	test   rdx,rdx
   14000fe88:	je     0x14000fe98
   14000fe8a:	mov    rax,QWORD PTR [rcx+0x50]
   14000fe8e:	cmp    DWORD PTR [rax],0x0
   14000fe91:	jle    0x14000fe98
   14000fe93:	movzx  eax,WORD PTR [rdx]
   14000fe96:	jmp    0x14000fe9e
   14000fe98:	mov    rax,QWORD PTR [rcx]
   14000fe9b:	call   QWORD PTR [rax+0x30]
   14000fe9e:	mov    ecx,0xffff
   14000fea3:	cmp    cx,ax
   14000fea6:	je     0x14000feae
   14000fea8:	mov    WORD PTR [rbx+0xa],ax
   14000feac:	jmp    0x14000feb5
   14000feae:	mov    QWORD PTR [rbx],0x0
   14000feb5:	mov    BYTE PTR [rbx+0x8],0x1
   14000feb9:	movzx  edx,WORD PTR [rbx+0xa]
   14000febd:	lea    rax,[rbp-0x29]
   14000fec1:	movzx  ecx,WORD PTR [rbp-0x29]
   14000fec5:	test   cx,cx
   14000fec8:	je     0x14000fee1
   14000feca:	nop    WORD PTR [rax+rax*1+0x0]
   14000fed0:	cmp    cx,dx
   14000fed3:	je     0x14000fee1
   14000fed5:	add    rax,0x2
   14000fed9:	movzx  ecx,WORD PTR [rax]
   14000fedc:	test   cx,cx
   14000fedf:	jne    0x14000fed0
   14000fee1:	lea    rcx,[rbp-0x29]
   14000fee5:	sub    rax,rcx
   14000fee8:	sar    rax,1
   14000feeb:	cmp    rax,0x16
   14000feef:	jae    0x14000ffb0
   14000fef5:	cmp    r13d,0x24
   14000fef9:	jl     0x14000ff03
   14000fefb:	inc    edi
   14000fefd:	mov    DWORD PTR [rsp+0x24],edi
   14000ff01:	jmp    0x14000ff2a
   14000ff03:	test   rax,rax
   14000ff06:	jne    0x14000ff0d
   14000ff08:	test   r13d,r13d
   14000ff0b:	je     0x14000ff2a
   14000ff0d:	lea    rcx,[rip+0x29a9c]        # 0x1400399b0
   14000ff14:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000ff18:	mov    BYTE PTR [rsi],al
   14000ff1a:	inc    rsi
   14000ff1d:	mov    QWORD PTR [rsp+0x28],rsi
   14000ff22:	inc    r13d
   14000ff25:	mov    DWORD PTR [rsp+0x30],r13d
   14000ff2a:	mov    r12b,0x1
   14000ff2d:	mov    BYTE PTR [rsp+0x20],r12b
   14000ff32:	mov    rcx,QWORD PTR [rbx]
   14000ff35:	test   rcx,rcx
   14000ff38:	je     0x14000ff7b
   14000ff3a:	mov    rax,QWORD PTR [rcx+0x38]
   14000ff3e:	cmp    QWORD PTR [rax],0x0
   14000ff42:	je     0x14000ff65
   14000ff44:	mov    rdx,QWORD PTR [rcx+0x50]
   14000ff48:	mov    eax,DWORD PTR [rdx]
   14000ff4a:	test   eax,eax
   14000ff4c:	jle    0x14000ff65
   14000ff4e:	dec    eax
   14000ff50:	mov    DWORD PTR [rdx],eax
   14000ff52:	mov    rcx,QWORD PTR [rcx+0x38]
   14000ff56:	mov    rdx,QWORD PTR [rcx]
   14000ff59:	lea    rax,[rdx+0x2]
   14000ff5d:	mov    QWORD PTR [rcx],rax
   14000ff60:	movzx  eax,WORD PTR [rdx]
   14000ff63:	jmp    0x14000ff6b
   14000ff65:	mov    rax,QWORD PTR [rcx]
   14000ff68:	call   QWORD PTR [rax+0x38]
   14000ff6b:	mov    ecx,0xffff
   14000ff70:	cmp    cx,ax
   14000ff73:	je     0x14000ff7b
   14000ff75:	mov    BYTE PTR [rbx+0x8],0x0
   14000ff79:	jmp    0x14000ff86
   14000ff7b:	mov    QWORD PTR [rbx],0x0
   14000ff82:	mov    BYTE PTR [rbx+0x8],0x1
   14000ff86:	mov    rdx,r15
   14000ff89:	mov    rcx,rbx
   14000ff8c:	call   0x1400110e0
   14000ff91:	test   al,al
   14000ff93:	je     0x14000fe70
   14000ff99:	jmp    0x14000ffb5
   14000ff9b:	mov    r15,QWORD PTR [rsp+0x38]
   14000ffa0:	movzx  r12d,BYTE PTR [rsp+0x20]
   14000ffa6:	mov    r14,QWORD PTR [rsp+0x40]
   14000ffab:	mov    rsi,QWORD PTR [rsp+0x28]
   14000ffb0:	test   r12b,r12b
   14000ffb3:	je     0x14000ffc5
   14000ffb5:	test   r13d,r13d
   14000ffb8:	jne    0x14000ffc5
   14000ffba:	mov    BYTE PTR [rsi],0x30
   14000ffbd:	inc    rsi
   14000ffc0:	mov    QWORD PTR [rsp+0x28],rsi
   14000ffc5:	mov    rdx,r15
   14000ffc8:	mov    rcx,rbx
   14000ffcb:	call   0x1400110e0
   14000ffd0:	test   al,al
   14000ffd2:	jne    0x14001009b
   14000ffd8:	cmp    BYTE PTR [rbx+0x8],al
   14000ffdb:	jne    0x140010020
   14000ffdd:	mov    rcx,QWORD PTR [rbx]
   14000ffe0:	test   rcx,rcx
   14000ffe3:	je     0x140010015
   14000ffe5:	mov    rax,QWORD PTR [rcx+0x38]
   14000ffe9:	mov    rdx,QWORD PTR [rax]
   14000ffec:	test   rdx,rdx
   14000ffef:	je     0x14000ffff
   14000fff1:	mov    rax,QWORD PTR [rcx+0x50]
   14000fff5:	cmp    DWORD PTR [rax],0x0
   14000fff8:	jle    0x14000ffff
   14000fffa:	movzx  eax,WORD PTR [rdx]
   14000fffd:	jmp    0x140010005
   14000ffff:	mov    rax,QWORD PTR [rcx]
   140010002:	call   QWORD PTR [rax+0x30]
   140010005:	mov    ecx,0xffff
   14001000a:	cmp    cx,ax
   14001000d:	je     0x140010015
   14001000f:	mov    WORD PTR [rbx+0xa],ax
   140010013:	jmp    0x14001001c
   140010015:	mov    QWORD PTR [rbx],0x0
   14001001c:	mov    BYTE PTR [rbx+0x8],0x1
   140010020:	movzx  edi,WORD PTR [rbx+0xa]
   140010024:	mov    rax,QWORD PTR [r14]
   140010027:	mov    rcx,r14
   14001002a:	call   QWORD PTR [rax+0x18]
   14001002d:	cmp    di,ax
   140010030:	jne    0x14001009b
   140010032:	call   0x14001a1ec
   140010037:	mov    rcx,QWORD PTR [rax]
   14001003a:	movzx  eax,BYTE PTR [rcx]
   14001003d:	mov    BYTE PTR [rsi],al
   14001003f:	inc    rsi
   140010042:	mov    QWORD PTR [rsp+0x28],rsi
   140010047:	mov    rcx,QWORD PTR [rbx]
   14001004a:	test   rcx,rcx
   14001004d:	je     0x140010090
   14001004f:	mov    rax,QWORD PTR [rcx+0x38]
   140010053:	cmp    QWORD PTR [rax],0x0
   140010057:	je     0x14001007a
   140010059:	mov    rdx,QWORD PTR [rcx+0x50]
   14001005d:	mov    eax,DWORD PTR [rdx]
   14001005f:	test   eax,eax
   140010061:	jle    0x14001007a
   140010063:	dec    eax
   140010065:	mov    DWORD PTR [rdx],eax
   140010067:	mov    rcx,QWORD PTR [rcx+0x38]
   14001006b:	mov    rdx,QWORD PTR [rcx]
   14001006e:	lea    rax,[rdx+0x2]
   140010072:	mov    QWORD PTR [rcx],rax
   140010075:	movzx  eax,WORD PTR [rdx]
   140010078:	jmp    0x140010080
   14001007a:	mov    rax,QWORD PTR [rcx]
   14001007d:	call   QWORD PTR [rax+0x38]
   140010080:	mov    ecx,0xffff
   140010085:	cmp    cx,ax
   140010088:	je     0x140010090
   14001008a:	mov    BYTE PTR [rbx+0x8],0x0
   14001008e:	jmp    0x14001009b
   140010090:	xor    edi,edi
   140010092:	mov    QWORD PTR [rbx],rdi
   140010095:	mov    BYTE PTR [rbx+0x8],0x1
   140010099:	jmp    0x14001009d
   14001009b:	xor    edi,edi
   14001009d:	test   r13d,r13d
   1400100a0:	jne    0x140010199
   1400100a6:	mov    rdx,r15
   1400100a9:	mov    rcx,rbx
   1400100ac:	call   0x1400110e0
   1400100b1:	test   al,al
   1400100b3:	jne    0x140010185
   1400100b9:	mov    esi,DWORD PTR [rsp+0x24]
   1400100bd:	mov    r13d,0xffff
   1400100c3:	cmp    BYTE PTR [rbx+0x8],0x0
   1400100c7:	jne    0x140010104
   1400100c9:	mov    rcx,QWORD PTR [rbx]
   1400100cc:	test   rcx,rcx
   1400100cf:	je     0x1400100fd
   1400100d1:	mov    rax,QWORD PTR [rcx+0x38]
   1400100d5:	mov    rdx,QWORD PTR [rax]
   1400100d8:	test   rdx,rdx
   1400100db:	je     0x1400100eb
   1400100dd:	mov    rax,QWORD PTR [rcx+0x50]
   1400100e1:	cmp    DWORD PTR [rax],0x0
   1400100e4:	jle    0x1400100eb
   1400100e6:	movzx  eax,WORD PTR [rdx]
   1400100e9:	jmp    0x1400100f1
   1400100eb:	mov    rax,QWORD PTR [rcx]
   1400100ee:	call   QWORD PTR [rax+0x30]
   1400100f1:	cmp    r13w,ax
   1400100f5:	je     0x1400100fd
   1400100f7:	mov    WORD PTR [rbx+0xa],ax
   1400100fb:	jmp    0x140010100
   1400100fd:	mov    QWORD PTR [rbx],rdi
   140010100:	mov    BYTE PTR [rbx+0x8],0x1
   140010104:	movzx  eax,WORD PTR [rbx+0xa]
   140010108:	cmp    ax,WORD PTR [rbp-0x29]
   14001010c:	jne    0x140010172
   14001010e:	dec    esi
   140010110:	mov    r12b,0x1
   140010113:	mov    rcx,QWORD PTR [rbx]
   140010116:	test   rcx,rcx
   140010119:	je     0x140010158
   14001011b:	mov    rax,QWORD PTR [rcx+0x38]
   14001011f:	cmp    QWORD PTR [rax],0x0
   140010123:	je     0x140010146
   140010125:	mov    rdx,QWORD PTR [rcx+0x50]
   140010129:	mov    eax,DWORD PTR [rdx]
   14001012b:	test   eax,eax
   14001012d:	jle    0x140010146
   14001012f:	dec    eax
   140010131:	mov    DWORD PTR [rdx],eax
   140010133:	mov    rcx,QWORD PTR [rcx+0x38]
   140010137:	mov    rdx,QWORD PTR [rcx]
   14001013a:	lea    rax,[rdx+0x2]
   14001013e:	mov    QWORD PTR [rcx],rax
   140010141:	movzx  eax,WORD PTR [rdx]
   140010144:	jmp    0x14001014c
   140010146:	mov    rax,QWORD PTR [rcx]
   140010149:	call   QWORD PTR [rax+0x38]
   14001014c:	cmp    r13w,ax
   140010150:	je     0x140010158
   140010152:	mov    BYTE PTR [rbx+0x8],0x0
   140010156:	jmp    0x14001015f
   140010158:	mov    QWORD PTR [rbx],rdi
   14001015b:	mov    BYTE PTR [rbx+0x8],0x1
   14001015f:	mov    rdx,r15
   140010162:	mov    rcx,rbx
   140010165:	call   0x1400110e0
   14001016a:	test   al,al
   14001016c:	je     0x1400100c3
   140010172:	mov    DWORD PTR [rsp+0x24],esi
   140010176:	mov    BYTE PTR [rsp+0x20],r12b
   14001017b:	mov    r13d,DWORD PTR [rsp+0x30]
   140010180:	mov    rsi,QWORD PTR [rsp+0x28]
   140010185:	mov    eax,DWORD PTR [rsp+0x24]
   140010189:	test   eax,eax
   14001018b:	jns    0x140010199
   14001018d:	mov    BYTE PTR [rsi],0x30
   140010190:	inc    rsi
   140010193:	inc    eax
   140010195:	mov    DWORD PTR [rsp+0x24],eax
   140010199:	mov    rdx,r15
   14001019c:	mov    rcx,rbx
   14001019f:	call   0x1400110e0
   1400101a4:	test   al,al
   1400101a6:	jne    0x1400102b1
   1400101ac:	nop    DWORD PTR [rax+0x0]
   1400101b0:	cmp    BYTE PTR [rbx+0x8],0x0
   1400101b4:	jne    0x1400101f5
   1400101b6:	mov    rcx,QWORD PTR [rbx]
   1400101b9:	test   rcx,rcx
   1400101bc:	je     0x1400101ee
   1400101be:	mov    rax,QWORD PTR [rcx+0x38]
   1400101c2:	mov    rdx,QWORD PTR [rax]
   1400101c5:	test   rdx,rdx
   1400101c8:	je     0x1400101d8
   1400101ca:	mov    rax,QWORD PTR [rcx+0x50]
   1400101ce:	cmp    DWORD PTR [rax],0x0
   1400101d1:	jle    0x1400101d8
   1400101d3:	movzx  eax,WORD PTR [rdx]
   1400101d6:	jmp    0x1400101de
   1400101d8:	mov    rax,QWORD PTR [rcx]
   1400101db:	call   QWORD PTR [rax+0x30]
   1400101de:	mov    ecx,0xffff
   1400101e3:	cmp    cx,ax
   1400101e6:	je     0x1400101ee
   1400101e8:	mov    WORD PTR [rbx+0xa],ax
   1400101ec:	jmp    0x1400101f1
   1400101ee:	mov    QWORD PTR [rbx],rdi
   1400101f1:	mov    BYTE PTR [rbx+0x8],0x1
   1400101f5:	movzx  edx,WORD PTR [rbx+0xa]
   1400101f9:	lea    rax,[rbp-0x29]
   1400101fd:	movzx  ecx,WORD PTR [rbp-0x29]
   140010201:	test   cx,cx
   140010204:	je     0x140010217
   140010206:	cmp    cx,dx
   140010209:	je     0x140010217
   14001020b:	add    rax,0x2
   14001020f:	movzx  ecx,WORD PTR [rax]
   140010212:	test   cx,cx
   140010215:	jne    0x140010206
   140010217:	lea    rcx,[rbp-0x29]
   14001021b:	sub    rax,rcx
   14001021e:	sar    rax,1
   140010221:	cmp    rax,0x16
   140010225:	jae    0x1400102b1
   14001022b:	cmp    r13d,0x24
   14001022f:	jge    0x140010244
   140010231:	lea    rcx,[rip+0x29778]        # 0x1400399b0
   140010238:	movzx  eax,BYTE PTR [rax+rcx*1]
   14001023c:	mov    BYTE PTR [rsi],al
   14001023e:	inc    rsi
   140010241:	inc    r13d
   140010244:	mov    r12b,0x1
   140010247:	mov    BYTE PTR [rsp+0x20],r12b
   14001024c:	mov    rcx,QWORD PTR [rbx]
   14001024f:	test   rcx,rcx
   140010252:	je     0x140010295
   140010254:	mov    rax,QWORD PTR [rcx+0x38]
   140010258:	cmp    QWORD PTR [rax],0x0
   14001025c:	je     0x14001027f
   14001025e:	mov    rdx,QWORD PTR [rcx+0x50]
   140010262:	mov    eax,DWORD PTR [rdx]
   140010264:	test   eax,eax
   140010266:	jle    0x14001027f
   140010268:	dec    eax
   14001026a:	mov    DWORD PTR [rdx],eax
   14001026c:	mov    rcx,QWORD PTR [rcx+0x38]
   140010270:	mov    rdx,QWORD PTR [rcx]
   140010273:	lea    rax,[rdx+0x2]
   140010277:	mov    QWORD PTR [rcx],rax
   14001027a:	movzx  eax,WORD PTR [rdx]
   14001027d:	jmp    0x140010285
   14001027f:	mov    rax,QWORD PTR [rcx]
   140010282:	call   QWORD PTR [rax+0x38]
   140010285:	mov    ecx,0xffff
   14001028a:	cmp    cx,ax
   14001028d:	je     0x140010295
   14001028f:	mov    BYTE PTR [rbx+0x8],0x0
   140010293:	jmp    0x14001029c
   140010295:	mov    QWORD PTR [rbx],rdi
   140010298:	mov    BYTE PTR [rbx+0x8],0x1
   14001029c:	mov    rdx,r15
   14001029f:	mov    rcx,rbx
   1400102a2:	call   0x1400110e0
   1400102a7:	test   al,al
   1400102a9:	je     0x1400101b0
   1400102af:	jmp    0x1400102ba
   1400102b1:	test   r12b,r12b
   1400102b4:	je     0x140010704
   1400102ba:	mov    rdx,r15
   1400102bd:	mov    rcx,rbx
   1400102c0:	call   0x1400110e0
   1400102c5:	test   al,al
   1400102c7:	jne    0x140010704
   1400102cd:	cmp    BYTE PTR [rbx+0x8],al
   1400102d0:	jne    0x140010311
   1400102d2:	mov    rcx,QWORD PTR [rbx]
   1400102d5:	test   rcx,rcx
   1400102d8:	je     0x14001030a
   1400102da:	mov    rax,QWORD PTR [rcx+0x38]
   1400102de:	mov    rdx,QWORD PTR [rax]
   1400102e1:	test   rdx,rdx
   1400102e4:	je     0x1400102f4
   1400102e6:	mov    rax,QWORD PTR [rcx+0x50]
   1400102ea:	cmp    DWORD PTR [rax],0x0
   1400102ed:	jle    0x1400102f4
   1400102ef:	movzx  eax,WORD PTR [rdx]
   1400102f2:	jmp    0x1400102fa
   1400102f4:	mov    rax,QWORD PTR [rcx]
   1400102f7:	call   QWORD PTR [rax+0x30]
   1400102fa:	mov    ecx,0xffff
   1400102ff:	cmp    cx,ax
   140010302:	je     0x14001030a
   140010304:	mov    WORD PTR [rbx+0xa],ax
   140010308:	jmp    0x14001030d
   14001030a:	mov    QWORD PTR [rbx],rdi
   14001030d:	mov    BYTE PTR [rbx+0x8],0x1
   140010311:	movzx  eax,WORD PTR [rbx+0xa]
   140010315:	cmp    ax,WORD PTR [rbp+0xd]
   140010319:	je     0x14001036e
   14001031b:	cmp    BYTE PTR [rbx+0x8],0x0
   14001031f:	jne    0x140010360
   140010321:	mov    rcx,QWORD PTR [rbx]
   140010324:	test   rcx,rcx
   140010327:	je     0x140010359
   140010329:	mov    rax,QWORD PTR [rcx+0x38]
   14001032d:	mov    rdx,QWORD PTR [rax]
   140010330:	test   rdx,rdx
   140010333:	je     0x140010343
   140010335:	mov    rax,QWORD PTR [rcx+0x50]
   140010339:	cmp    DWORD PTR [rax],0x0
   14001033c:	jle    0x140010343
   14001033e:	movzx  eax,WORD PTR [rdx]
   140010341:	jmp    0x140010349
   140010343:	mov    rax,QWORD PTR [rcx]
   140010346:	call   QWORD PTR [rax+0x30]
   140010349:	mov    ecx,0xffff
   14001034e:	cmp    cx,ax
   140010351:	je     0x140010359
   140010353:	mov    WORD PTR [rbx+0xa],ax
   140010357:	jmp    0x14001035c
   140010359:	mov    QWORD PTR [rbx],rdi
   14001035c:	mov    BYTE PTR [rbx+0x8],0x1
   140010360:	movzx  eax,WORD PTR [rbx+0xa]
   140010364:	cmp    ax,WORD PTR [rbp+0xb]
   140010368:	jne    0x140010704
   14001036e:	mov    BYTE PTR [rsi],0x70
   140010371:	inc    rsi
   140010374:	mov    rcx,QWORD PTR [rbx]
   140010377:	test   rcx,rcx
   14001037a:	je     0x1400103bf
   14001037c:	mov    rax,QWORD PTR [rcx+0x38]
   140010380:	cmp    QWORD PTR [rax],0x0
   140010384:	je     0x1400103a7
   140010386:	mov    rdx,QWORD PTR [rcx+0x50]
   14001038a:	mov    eax,DWORD PTR [rdx]
   14001038c:	test   eax,eax
   14001038e:	jle    0x1400103a7
   140010390:	dec    eax
   140010392:	mov    DWORD PTR [rdx],eax
   140010394:	mov    rcx,QWORD PTR [rcx+0x38]
   140010398:	mov    rdx,QWORD PTR [rcx]
   14001039b:	lea    rax,[rdx+0x2]
   14001039f:	mov    QWORD PTR [rcx],rax
   1400103a2:	movzx  eax,WORD PTR [rdx]
   1400103a5:	jmp    0x1400103ad
   1400103a7:	mov    rax,QWORD PTR [rcx]
   1400103aa:	call   QWORD PTR [rax+0x38]
   1400103ad:	mov    r13d,0xffff
   1400103b3:	cmp    r13w,ax
   1400103b7:	je     0x1400103c5
   1400103b9:	mov    BYTE PTR [rbx+0x8],0x0
   1400103bd:	jmp    0x1400103cc
   1400103bf:	mov    r13d,0xffff
   1400103c5:	mov    QWORD PTR [rbx],rdi
   1400103c8:	mov    BYTE PTR [rbx+0x8],0x1
   1400103cc:	xor    r14b,r14b
   1400103cf:	mov    BYTE PTR [rsp+0x20],r14b
   1400103d4:	mov    rdx,r15
   1400103d7:	mov    rcx,rbx
   1400103da:	call   0x1400110e0
   1400103df:	test   al,al
   1400103e1:	jne    0x140010529
   1400103e7:	cmp    BYTE PTR [rbx+0x8],al
   1400103ea:	jne    0x14001042b
   1400103ec:	mov    rcx,QWORD PTR [rbx]
   1400103ef:	test   rcx,rcx
   1400103f2:	je     0x140010420
   1400103f4:	mov    rax,QWORD PTR [rcx+0x38]
   1400103f8:	mov    rdx,QWORD PTR [rax]
   1400103fb:	test   rdx,rdx
   1400103fe:	je     0x14001040e
   140010400:	mov    rax,QWORD PTR [rcx+0x50]
   140010404:	cmp    DWORD PTR [rax],0x0
   140010407:	jle    0x14001040e
   140010409:	movzx  eax,WORD PTR [rdx]
   14001040c:	jmp    0x140010414
   14001040e:	mov    rax,QWORD PTR [rcx]
   140010411:	call   QWORD PTR [rax+0x30]
   140010414:	cmp    r13w,ax
   140010418:	je     0x140010420
   14001041a:	mov    WORD PTR [rbx+0xa],ax
   14001041e:	jmp    0x140010427
   140010420:	mov    QWORD PTR [rbx],0x0
   140010427:	mov    BYTE PTR [rbx+0x8],0x1
   14001042b:	movzx  eax,WORD PTR [rbx+0xa]
   14001042f:	cmp    ax,WORD PTR [rbp+0x5]
   140010433:	jne    0x14001048d
   140010435:	mov    BYTE PTR [rsi],0x2b
   140010438:	inc    rsi
   14001043b:	mov    rcx,QWORD PTR [rbx]
   14001043e:	test   rcx,rcx
   140010441:	je     0x14001047e
   140010443:	mov    rax,QWORD PTR [rcx+0x38]
   140010447:	cmp    QWORD PTR [rax],0x0
   14001044b:	je     0x14001046e
   14001044d:	mov    rdx,QWORD PTR [rcx+0x50]
   140010451:	mov    eax,DWORD PTR [rdx]
   140010453:	test   eax,eax
   140010455:	jle    0x14001046e
   140010457:	dec    eax
   140010459:	mov    DWORD PTR [rdx],eax
   14001045b:	mov    rcx,QWORD PTR [rcx+0x38]
   14001045f:	mov    rdx,QWORD PTR [rcx]
   140010462:	lea    rax,[rdx+0x2]
   140010466:	mov    QWORD PTR [rcx],rax
   140010469:	movzx  eax,WORD PTR [rdx]
   14001046c:	jmp    0x140010474
   14001046e:	mov    rax,QWORD PTR [rcx]
   140010471:	call   QWORD PTR [rax+0x38]
   140010474:	cmp    r13w,ax
   140010478:	jne    0x140010525
   14001047e:	xor    r12d,r12d
   140010481:	mov    QWORD PTR [rbx],r12
   140010484:	mov    BYTE PTR [rbx+0x8],0x1
   140010488:	jmp    0x14001052c
   14001048d:	cmp    BYTE PTR [rbx+0x8],0x0
   140010491:	jne    0x1400104d2
   140010493:	mov    rcx,QWORD PTR [rbx]
   140010496:	test   rcx,rcx
   140010499:	je     0x1400104c7
   14001049b:	mov    rax,QWORD PTR [rcx+0x38]
   14001049f:	mov    rdx,QWORD PTR [rax]
   1400104a2:	test   rdx,rdx
   1400104a5:	je     0x1400104b5
   1400104a7:	mov    rax,QWORD PTR [rcx+0x50]
   1400104ab:	cmp    DWORD PTR [rax],0x0
   1400104ae:	jle    0x1400104b5
   1400104b0:	movzx  eax,WORD PTR [rdx]
   1400104b3:	jmp    0x1400104bb
   1400104b5:	mov    rax,QWORD PTR [rcx]
   1400104b8:	call   QWORD PTR [rax+0x30]
   1400104bb:	cmp    r13w,ax
   1400104bf:	je     0x1400104c7
   1400104c1:	mov    WORD PTR [rbx+0xa],ax
   1400104c5:	jmp    0x1400104ce
   1400104c7:	mov    QWORD PTR [rbx],0x0
   1400104ce:	mov    BYTE PTR [rbx+0x8],0x1
   1400104d2:	movzx  eax,WORD PTR [rbx+0xa]
   1400104d6:	cmp    ax,WORD PTR [rbp+0x3]
   1400104da:	jne    0x140010529
   1400104dc:	mov    BYTE PTR [rsi],0x2d
   1400104df:	inc    rsi
   1400104e2:	mov    rcx,QWORD PTR [rbx]
   1400104e5:	test   rcx,rcx
   1400104e8:	je     0x14001047e
   1400104ea:	mov    rax,QWORD PTR [rcx+0x38]
   1400104ee:	cmp    QWORD PTR [rax],0x0
   1400104f2:	je     0x140010515
   1400104f4:	mov    rdx,QWORD PTR [rcx+0x50]
   1400104f8:	mov    eax,DWORD PTR [rdx]
   1400104fa:	test   eax,eax
   1400104fc:	jle    0x140010515
   1400104fe:	dec    eax
   140010500:	mov    DWORD PTR [rdx],eax
   140010502:	mov    rcx,QWORD PTR [rcx+0x38]
   140010506:	mov    rdx,QWORD PTR [rcx]
   140010509:	lea    rax,[rdx+0x2]
   14001050d:	mov    QWORD PTR [rcx],rax
   140010510:	movzx  eax,WORD PTR [rdx]
   140010513:	jmp    0x14001051b
   140010515:	mov    rax,QWORD PTR [rcx]
   140010518:	call   QWORD PTR [rax+0x38]
   14001051b:	cmp    r13w,ax
   14001051f:	je     0x14001047e
   140010525:	mov    BYTE PTR [rbx+0x8],0x0
   140010529:	xor    r12d,r12d
   14001052c:	mov    rdx,r15
   14001052f:	mov    rcx,rbx
   140010532:	call   0x1400110e0
   140010537:	test   al,al
   140010539:	jne    0x1400105ff
   14001053f:	nop
   140010540:	cmp    BYTE PTR [rbx+0x8],0x0
   140010544:	jne    0x140010581
   140010546:	mov    rcx,QWORD PTR [rbx]
   140010549:	test   rcx,rcx
   14001054c:	je     0x14001057a
   14001054e:	mov    rax,QWORD PTR [rcx+0x38]
   140010552:	mov    rdx,QWORD PTR [rax]
   140010555:	test   rdx,rdx
   140010558:	je     0x140010568
   14001055a:	mov    rax,QWORD PTR [rcx+0x50]
   14001055e:	cmp    DWORD PTR [rax],0x0
   140010561:	jle    0x140010568
   140010563:	movzx  eax,WORD PTR [rdx]
   140010566:	jmp    0x14001056e
   140010568:	mov    rax,QWORD PTR [rcx]
   14001056b:	call   QWORD PTR [rax+0x30]
   14001056e:	cmp    r13w,ax
   140010572:	je     0x14001057a
   140010574:	mov    WORD PTR [rbx+0xa],ax
   140010578:	jmp    0x14001057d
   14001057a:	mov    QWORD PTR [rbx],r12
   14001057d:	mov    BYTE PTR [rbx+0x8],0x1
   140010581:	movzx  eax,WORD PTR [rbx+0xa]
   140010585:	cmp    ax,WORD PTR [rbp-0x29]
   140010589:	jne    0x1400105f4
   14001058b:	mov    r14b,0x1
   14001058e:	mov    BYTE PTR [rsp+0x20],r14b
   140010593:	mov    rcx,QWORD PTR [rbx]
   140010596:	test   rcx,rcx
   140010599:	je     0x1400105d8
   14001059b:	mov    rax,QWORD PTR [rcx+0x38]
   14001059f:	cmp    QWORD PTR [rax],0x0
   1400105a3:	je     0x1400105c6
   1400105a5:	mov    rdx,QWORD PTR [rcx+0x50]
   1400105a9:	mov    eax,DWORD PTR [rdx]
   1400105ab:	test   eax,eax
   1400105ad:	jle    0x1400105c6
   1400105af:	dec    eax
   1400105b1:	mov    DWORD PTR [rdx],eax
   1400105b3:	mov    rcx,QWORD PTR [rcx+0x38]
   1400105b7:	mov    rdx,QWORD PTR [rcx]
   1400105ba:	lea    rax,[rdx+0x2]
   1400105be:	mov    QWORD PTR [rcx],rax
   1400105c1:	movzx  eax,WORD PTR [rdx]
   1400105c4:	jmp    0x1400105cc
   1400105c6:	mov    rax,QWORD PTR [rcx]
   1400105c9:	call   QWORD PTR [rax+0x38]
   1400105cc:	cmp    r13w,ax
   1400105d0:	je     0x1400105d8
   1400105d2:	mov    BYTE PTR [rbx+0x8],0x0
   1400105d6:	jmp    0x1400105df
   1400105d8:	mov    QWORD PTR [rbx],r12
   1400105db:	mov    BYTE PTR [rbx+0x8],0x1
   1400105df:	mov    rdx,r15
   1400105e2:	mov    rcx,rbx
   1400105e5:	call   0x1400110e0
   1400105ea:	test   al,al
   1400105ec:	je     0x140010540
   1400105f2:	jmp    0x1400105f9
   1400105f4:	test   r14b,r14b
   1400105f7:	je     0x1400105ff
   1400105f9:	mov    BYTE PTR [rsi],0x30
   1400105fc:	inc    rsi
   1400105ff:	mov    rdx,r15
   140010602:	mov    rcx,rbx
   140010605:	call   0x1400110e0
   14001060a:	test   al,al
   14001060c:	jne    0x140010704
   140010612:	cmp    BYTE PTR [rbx+0x8],0x0
   140010616:	jne    0x140010653
   140010618:	mov    rcx,QWORD PTR [rbx]
   14001061b:	test   rcx,rcx
   14001061e:	je     0x14001064c
   140010620:	mov    rax,QWORD PTR [rcx+0x38]
   140010624:	mov    rdx,QWORD PTR [rax]
   140010627:	test   rdx,rdx
   14001062a:	je     0x14001063a
   14001062c:	mov    rax,QWORD PTR [rcx+0x50]
   140010630:	cmp    DWORD PTR [rax],0x0
   140010633:	jle    0x14001063a
   140010635:	movzx  eax,WORD PTR [rdx]
   140010638:	jmp    0x140010640
   14001063a:	mov    rax,QWORD PTR [rcx]
   14001063d:	call   QWORD PTR [rax+0x30]
   140010640:	cmp    r13w,ax
   140010644:	je     0x14001064c
   140010646:	mov    WORD PTR [rbx+0xa],ax
   14001064a:	jmp    0x14001064f
   14001064c:	mov    QWORD PTR [rbx],r12
   14001064f:	mov    BYTE PTR [rbx+0x8],0x1
   140010653:	movzx  edx,WORD PTR [rbx+0xa]
   140010657:	lea    rax,[rbp-0x29]
   14001065b:	movzx  ecx,WORD PTR [rbp-0x29]
   14001065f:	test   cx,cx
   140010662:	je     0x140010675
   140010664:	cmp    cx,dx
   140010667:	je     0x140010675
   140010669:	add    rax,0x2
   14001066d:	movzx  ecx,WORD PTR [rax]
   140010670:	test   cx,cx
   140010673:	jne    0x140010664
   140010675:	lea    rcx,[rbp-0x29]
   140010679:	sub    rax,rcx
   14001067c:	sar    rax,1
   14001067f:	cmp    rax,0x16
   140010683:	jae    0x140010704
   140010689:	cmp    edi,0x8
   14001068c:	jge    0x1400106a0
   14001068e:	lea    rcx,[rip+0x2931b]        # 0x1400399b0
   140010695:	movzx  eax,BYTE PTR [rax+rcx*1]
   140010699:	mov    BYTE PTR [rsi],al
   14001069b:	inc    rsi
   14001069e:	inc    edi
   1400106a0:	mov    BYTE PTR [rsp+0x20],0x1
   1400106a5:	mov    rcx,QWORD PTR [rbx]
   1400106a8:	test   rcx,rcx
   1400106ab:	je     0x1400106ea
   1400106ad:	mov    rax,QWORD PTR [rcx+0x38]
   1400106b1:	cmp    QWORD PTR [rax],0x0
   1400106b5:	je     0x1400106d8
   1400106b7:	mov    rdx,QWORD PTR [rcx+0x50]
   1400106bb:	mov    eax,DWORD PTR [rdx]
   1400106bd:	test   eax,eax
   1400106bf:	jle    0x1400106d8
   1400106c1:	dec    eax
   1400106c3:	mov    DWORD PTR [rdx],eax
   1400106c5:	mov    rcx,QWORD PTR [rcx+0x38]
   1400106c9:	mov    rdx,QWORD PTR [rcx]
   1400106cc:	lea    rax,[rdx+0x2]
   1400106d0:	mov    QWORD PTR [rcx],rax
   1400106d3:	movzx  eax,WORD PTR [rdx]
   1400106d6:	jmp    0x1400106de
   1400106d8:	mov    rax,QWORD PTR [rcx]
   1400106db:	call   QWORD PTR [rax+0x38]
   1400106de:	cmp    r13w,ax
   1400106e2:	je     0x1400106ea
   1400106e4:	mov    BYTE PTR [rbx+0x8],0x0
   1400106e8:	jmp    0x1400106f1
   1400106ea:	mov    QWORD PTR [rbx],r12
   1400106ed:	mov    BYTE PTR [rbx+0x8],0x1
   1400106f1:	mov    rdx,r15
   1400106f4:	mov    rcx,rbx
   1400106f7:	call   0x1400110e0
   1400106fc:	test   al,al
   1400106fe:	je     0x140010612
   140010704:	cmp    BYTE PTR [rsp+0x21],0x0
   140010709:	jne    0x140010714
   14001070b:	movzx  ecx,BYTE PTR [rsp+0x20]
   140010710:	test   cl,cl
   140010712:	jne    0x140010719
   140010714:	mov    rsi,QWORD PTR [rsp+0x50]
   140010719:	mov    BYTE PTR [rsi],0x0
   14001071c:	mov    eax,DWORD PTR [rsp+0x24]
   140010720:	mov    rcx,QWORD PTR [rbp-0x79]
   140010724:	mov    DWORD PTR [rcx],eax
   140010726:	cmp    QWORD PTR [rbp-0x31],0x10
   14001072b:	jb     0x140010736
   14001072d:	mov    rcx,QWORD PTR [rbp-0x49]
   140010731:	call   0x140018a04
   140010736:	xor    eax,eax
   140010738:	mov    rcx,QWORD PTR [rbp+0xf]
   14001073c:	xor    rcx,rsp
   14001073f:	call   0x1400187d0
   140010744:	mov    rbx,QWORD PTR [rsp+0x130]
   14001074c:	add    rsp,0xf0
   140010753:	pop    r15
   140010755:	pop    r14
   140010757:	pop    r13
   140010759:	pop    r12
   14001075b:	pop    rdi
   14001075c:	pop    rsi
   14001075d:	pop    rbp
   14001075e:	ret    
   14001075f:	int3   
   140010760:	rex push rbx
   140010762:	sub    rsp,0x20
   140010766:	cmp    BYTE PTR [rcx+0x8],0x0
   14001076a:	mov    rbx,rcx
   14001076d:	jne    0x1400107c4
   14001076f:	mov    rcx,QWORD PTR [rcx]
   140010772:	test   rcx,rcx
   140010775:	je     0x1400107af
   140010777:	mov    rax,QWORD PTR [rcx+0x38]
   14001077b:	mov    rdx,QWORD PTR [rax]
   14001077e:	test   rdx,rdx
   140010781:	je     0x140010791
   140010783:	mov    rax,QWORD PTR [rcx+0x50]
   140010787:	cmp    DWORD PTR [rax],0x0
   14001078a:	jle    0x140010791
   14001078c:	movzx  eax,WORD PTR [rdx]
   14001078f:	jmp    0x140010797
   140010791:	mov    rax,QWORD PTR [rcx]
   140010794:	call   QWORD PTR [rax+0x30]
   140010797:	mov    ecx,0xffff
   14001079c:	cmp    cx,ax
   14001079f:	je     0x1400107af
   1400107a1:	mov    WORD PTR [rbx+0xa],ax
   1400107a5:	mov    BYTE PTR [rbx+0x8],0x1
   1400107a9:	add    rsp,0x20
   1400107ad:	pop    rbx
   1400107ae:	ret    
   1400107af:	movzx  eax,WORD PTR [rbx+0xa]
   1400107b3:	mov    QWORD PTR [rbx],0x0
   1400107ba:	mov    BYTE PTR [rbx+0x8],0x1
   1400107be:	add    rsp,0x20
   1400107c2:	pop    rbx
   1400107c3:	ret    
   1400107c4:	movzx  eax,WORD PTR [rcx+0xa]
   1400107c8:	add    rsp,0x20
   1400107cc:	pop    rbx
   1400107cd:	ret    
   1400107ce:	int3   
   1400107cf:	int3   
   1400107d0:	rex push rbx
   1400107d2:	sub    rsp,0x20
   1400107d6:	mov    rbx,rcx
   1400107d9:	mov    rcx,QWORD PTR [rcx]
   1400107dc:	test   rcx,rcx
   1400107df:	je     0x140010829
   1400107e1:	mov    rax,QWORD PTR [rcx+0x38]
   1400107e5:	cmp    QWORD PTR [rax],0x0
   1400107e9:	je     0x14001080c
   1400107eb:	mov    rdx,QWORD PTR [rcx+0x50]
   1400107ef:	mov    eax,DWORD PTR [rdx]
   1400107f1:	test   eax,eax
   1400107f3:	jle    0x14001080c
   1400107f5:	dec    eax
   1400107f7:	mov    DWORD PTR [rdx],eax
   1400107f9:	mov    rcx,QWORD PTR [rcx+0x38]
   1400107fd:	mov    rdx,QWORD PTR [rcx]
   140010800:	lea    rax,[rdx+0x2]
   140010804:	mov    QWORD PTR [rcx],rax
   140010807:	movzx  eax,WORD PTR [rdx]
   14001080a:	jmp    0x140010812
   14001080c:	mov    rax,QWORD PTR [rcx]
   14001080f:	call   QWORD PTR [rax+0x38]
   140010812:	mov    ecx,0xffff
   140010817:	cmp    cx,ax
   14001081a:	je     0x140010829
   14001081c:	mov    BYTE PTR [rbx+0x8],0x0
   140010820:	mov    rax,rbx
   140010823:	add    rsp,0x20
   140010827:	pop    rbx
   140010828:	ret    
   140010829:	mov    QWORD PTR [rbx],0x0
   140010830:	mov    BYTE PTR [rbx+0x8],0x1
   140010834:	mov    rax,rbx
   140010837:	add    rsp,0x20
   14001083b:	pop    rbx
   14001083c:	ret    
   14001083d:	int3   
   14001083e:	int3   
   14001083f:	int3   
   140010840:	rex push rbx
   140010842:	sub    rsp,0x30
   140010846:	mov    rax,r8
   140010849:	xor    r8d,r8d
   14001084c:	mov    r9,rdx
   14001084f:	mov    rbx,rcx
   140010852:	mov    DWORD PTR [rsp+0x20],r8d
   140010857:	cmp    BYTE PTR [rax],r8b
   14001085a:	je     0x14001086a
   14001085c:	or     r8,0xffffffffffffffff
   140010860:	inc    r8
   140010863:	cmp    BYTE PTR [rax+r8*1],0x0
   140010868:	jne    0x140010860
   14001086a:	mov    rdx,rax
   14001086d:	mov    rcx,r9
   140010870:	call   0x140008590
   140010875:	mov    rcx,rbx
   140010878:	mov    rdx,rax
   14001087b:	call   0x140008810
   140010880:	mov    rax,rbx
   140010883:	add    rsp,0x30
   140010887:	pop    rbx
   140010888:	ret    
   140010889:	int3   
   14001088a:	int3   
   14001088b:	int3   
   14001088c:	int3   
   14001088d:	int3   
   14001088e:	int3   
   14001088f:	int3   
   140010890:	mov    rax,rsp
   140010893:	push   rdi
   140010894:	push   r12
   140010896:	push   r13
   140010898:	push   r14
   14001089a:	push   r15
   14001089c:	sub    rsp,0xd0
   1400108a3:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   1400108ac:	mov    QWORD PTR [rax+0x18],rbx
   1400108b0:	mov    QWORD PTR [rax+0x20],rsi
   1400108b4:	mov    r15,rdx
   1400108b7:	mov    rsi,rcx
   1400108ba:	mov    QWORD PTR [rsp+0x30],rcx
   1400108bf:	xor    ebx,ebx
   1400108c1:	mov    DWORD PTR [rsp+0x20],ebx
   1400108c5:	mov    r12,QWORD PTR [rdx+0x10]
   1400108c9:	mov    rax,QWORD PTR [rcx]
   1400108cc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400108d0:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   1400108d5:	test   rdi,rdi
   1400108d8:	jle    0x1400108e4
   1400108da:	cmp    rdi,r12
   1400108dd:	jbe    0x1400108e4
   1400108df:	sub    rdi,r12
   1400108e2:	jmp    0x1400108e6
   1400108e4:	xor    edi,edi
   1400108e6:	mov    r13,rsi
   1400108e9:	mov    QWORD PTR [rsp+0x40],rsi
   1400108ee:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400108f3:	test   rcx,rcx
   1400108f6:	je     0x1400108ff
   1400108f8:	mov    rax,QWORD PTR [rcx]
   1400108fb:	call   QWORD PTR [rax+0x8]
   1400108fe:	nop
   1400108ff:	mov    rax,QWORD PTR [rsi]
   140010902:	movsxd rcx,DWORD PTR [rax+0x4]
   140010906:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14001090b:	jne    0x140010921
   14001090d:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140010912:	test   rcx,rcx
   140010915:	je     0x140010921
   140010917:	cmp    rcx,rsi
   14001091a:	je     0x140010921
   14001091c:	call   0x140012050
   140010921:	mov    rax,QWORD PTR [rsi]
   140010924:	movsxd rcx,DWORD PTR [rax+0x4]
   140010928:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14001092d:	sete   al
   140010930:	mov    BYTE PTR [rsp+0x48],al
   140010934:	test   al,al
   140010936:	jne    0x140010942
   140010938:	mov    ebx,0x4
   14001093d:	jmp    0x140010a75
   140010942:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140010946:	and    eax,0x1c0
   14001094b:	mov    r14d,0xffff
   140010951:	cmp    eax,0x40
   140010954:	je     0x1400109bf
   140010956:	test   rdi,rdi
   140010959:	je     0x1400109bb
   14001095b:	mov    rax,QWORD PTR [rsi]
   14001095e:	movsxd rcx,DWORD PTR [rax+0x4]
   140010962:	movzx  r8d,WORD PTR [rcx+rsi*1+0x58]
   140010968:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14001096d:	mov    rax,QWORD PTR [rcx+0x40]
   140010971:	cmp    QWORD PTR [rax],0x0
   140010975:	je     0x140010999
   140010977:	mov    rdx,QWORD PTR [rcx+0x58]
   14001097b:	mov    eax,DWORD PTR [rdx]
   14001097d:	test   eax,eax
   14001097f:	jle    0x140010999
   140010981:	dec    eax
   140010983:	mov    DWORD PTR [rdx],eax
   140010985:	mov    rcx,QWORD PTR [rcx+0x40]
   140010989:	mov    rdx,QWORD PTR [rcx]
   14001098c:	lea    rax,[rdx+0x2]
   140010990:	mov    QWORD PTR [rcx],rax
   140010993:	mov    WORD PTR [rdx],r8w
   140010997:	jmp    0x1400109a7
   140010999:	mov    rax,QWORD PTR [rcx]
   14001099c:	movzx  edx,r8w
   1400109a0:	call   QWORD PTR [rax+0x18]
   1400109a3:	movzx  r8d,ax
   1400109a7:	cmp    r14w,r8w
   1400109ab:	jne    0x1400109b6
   1400109ad:	or     ebx,0x4
   1400109b0:	mov    DWORD PTR [rsp+0x20],ebx
   1400109b4:	jmp    0x1400109bb
   1400109b6:	dec    rdi
   1400109b9:	jmp    0x140010956
   1400109bb:	test   ebx,ebx
   1400109bd:	jne    0x1400109f0
   1400109bf:	cmp    QWORD PTR [r15+0x18],0x8
   1400109c4:	jb     0x1400109c9
   1400109c6:	mov    r15,QWORD PTR [r15]
   1400109c9:	mov    rax,QWORD PTR [rsi]
   1400109cc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400109d0:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400109d5:	mov    rax,QWORD PTR [rcx]
   1400109d8:	mov    r8,r12
   1400109db:	mov    rdx,r15
   1400109de:	call   QWORD PTR [rax+0x48]
   1400109e1:	cmp    rax,r12
   1400109e4:	je     0x1400109f0
   1400109e6:	mov    ebx,0x4
   1400109eb:	jmp    0x140010a51
   1400109ed:	nop    DWORD PTR [rax]
   1400109f0:	test   rdi,rdi
   1400109f3:	je     0x140010a55
   1400109f5:	mov    rax,QWORD PTR [rsi]
   1400109f8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400109fc:	movzx  r8d,WORD PTR [rcx+rsi*1+0x58]
   140010a02:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140010a07:	mov    rax,QWORD PTR [rcx+0x40]
   140010a0b:	cmp    QWORD PTR [rax],0x0
   140010a0f:	je     0x140010a33
   140010a11:	mov    rdx,QWORD PTR [rcx+0x58]
   140010a15:	mov    eax,DWORD PTR [rdx]
   140010a17:	test   eax,eax
   140010a19:	jle    0x140010a33
   140010a1b:	dec    eax
   140010a1d:	mov    DWORD PTR [rdx],eax
   140010a1f:	mov    rcx,QWORD PTR [rcx+0x40]
   140010a23:	mov    rdx,QWORD PTR [rcx]
   140010a26:	lea    rax,[rdx+0x2]
   140010a2a:	mov    QWORD PTR [rcx],rax
   140010a2d:	mov    WORD PTR [rdx],r8w
   140010a31:	jmp    0x140010a41
   140010a33:	mov    rax,QWORD PTR [rcx]
   140010a36:	movzx  edx,r8w
   140010a3a:	call   QWORD PTR [rax+0x18]
   140010a3d:	movzx  r8d,ax
   140010a41:	cmp    r14w,r8w
   140010a45:	jne    0x140010a4c
   140010a47:	or     ebx,0x4
   140010a4a:	jmp    0x140010a51
   140010a4c:	dec    rdi
   140010a4f:	jmp    0x1400109f0
   140010a51:	mov    DWORD PTR [rsp+0x20],ebx
   140010a55:	mov    rax,QWORD PTR [rsi]
   140010a58:	movsxd rcx,DWORD PTR [rax+0x4]
   140010a5c:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140010a65:	jmp    0x140010a75
   140010a67:	mov    ebx,DWORD PTR [rsp+0x20]
   140010a6b:	mov    r13,QWORD PTR [rsp+0x40]
   140010a70:	mov    rsi,QWORD PTR [rsp+0x30]
   140010a75:	mov    rax,QWORD PTR [rsi]
   140010a78:	movsxd rcx,DWORD PTR [rax+0x4]
   140010a7c:	add    rcx,rsi
   140010a7f:	test   ebx,ebx
   140010a81:	je     0x140010b79
   140010a87:	mov    eax,DWORD PTR [rcx+0x10]
   140010a8a:	or     eax,ebx
   140010a8c:	cmp    QWORD PTR [rcx+0x48],0x0
   140010a91:	jne    0x140010a96
   140010a93:	or     eax,0x4
   140010a96:	and    eax,0x17
   140010a99:	mov    DWORD PTR [rcx+0x10],eax
   140010a9c:	mov    edx,DWORD PTR [rcx+0x14]
   140010a9f:	and    edx,eax
   140010aa1:	je     0x140010b79
   140010aa7:	mov    DWORD PTR [rsp+0x30],0x1
   140010aaf:	lea    rax,[rip+0x3211a]        # 0x140042bd0
   140010ab6:	mov    QWORD PTR [rsp+0x38],rax
   140010abb:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140010ac0:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140010ac6:	test   dl,0x4
   140010ac9:	je     0x140010aff
   140010acb:	lea    r8,[rip+0x290b6]        # 0x140039b88
   140010ad2:	lea    rdx,[rsp+0x30]
   140010ad7:	lea    rcx,[rsp+0x58]
   140010adc:	call   0x140012cf0
   140010ae1:	lea    rax,[rip+0x29138]        # 0x140039c20
   140010ae8:	mov    QWORD PTR [rsp+0x58],rax
   140010aed:	lea    rdx,[rip+0x2f114]        # 0x14003fc08
   140010af4:	lea    rcx,[rsp+0x58]
   140010af9:	call   0x14001a628
   140010afe:	int3   
   140010aff:	test   dl,0x2
   140010b02:	lea    rdx,[rsp+0x30]
   140010b07:	je     0x140010b41
   140010b09:	lea    r8,[rip+0x29090]        # 0x140039ba0
   140010b10:	lea    rcx,[rsp+0x80]
   140010b18:	call   0x140012cf0
   140010b1d:	lea    rax,[rip+0x290fc]        # 0x140039c20
   140010b24:	mov    QWORD PTR [rsp+0x80],rax
   140010b2c:	lea    rdx,[rip+0x2f0d5]        # 0x14003fc08
   140010b33:	lea    rcx,[rsp+0x80]
   140010b3b:	call   0x14001a628
   140010b40:	int3   
   140010b41:	lea    r8,[rip+0x290b8]        # 0x140039c00
   140010b48:	lea    rcx,[rsp+0xa8]
   140010b50:	call   0x140012cf0
   140010b55:	lea    rax,[rip+0x290c4]        # 0x140039c20
   140010b5c:	mov    QWORD PTR [rsp+0xa8],rax
   140010b64:	lea    rdx,[rip+0x2f09d]        # 0x14003fc08
   140010b6b:	lea    rcx,[rsp+0xa8]
   140010b73:	call   0x14001a628
   140010b78:	nop
   140010b79:	call   0x140014b58
   140010b7e:	test   al,al
   140010b80:	jne    0x140010b8a
   140010b82:	mov    rcx,r13
   140010b85:	call   0x140011fb0
   140010b8a:	mov    rcx,QWORD PTR [r13+0x0]
   140010b8e:	movsxd rdx,DWORD PTR [rcx+0x4]
   140010b92:	mov    rcx,QWORD PTR [rdx+r13*1+0x48]
   140010b97:	test   rcx,rcx
   140010b9a:	je     0x140010ba2
   140010b9c:	mov    rdx,QWORD PTR [rcx]
   140010b9f:	call   QWORD PTR [rdx+0x10]
   140010ba2:	mov    rax,rsi
   140010ba5:	lea    r11,[rsp+0xd0]
   140010bad:	mov    rbx,QWORD PTR [r11+0x40]
   140010bb1:	mov    rsi,QWORD PTR [r11+0x48]
   140010bb5:	mov    rsp,r11
   140010bb8:	pop    r15
   140010bba:	pop    r14
   140010bbc:	pop    r13
   140010bbe:	pop    r12
   140010bc0:	pop    rdi
   140010bc1:	ret    
   140010bc2:	int3   
   140010bc3:	int3   
   140010bc4:	int3   
   140010bc5:	int3   
   140010bc6:	int3   
   140010bc7:	int3   
   140010bc8:	int3   
   140010bc9:	int3   
   140010bca:	int3   
   140010bcb:	int3   
   140010bcc:	int3   
   140010bcd:	int3   
   140010bce:	int3   
   140010bcf:	int3   
   140010bd0:	rex push rbx
   140010bd2:	sub    rsp,0x30
   140010bd6:	xor    ebx,ebx
   140010bd8:	cmp    WORD PTR [rdx],bx
   140010bdb:	jne    0x140010be1
   140010bdd:	mov    eax,ebx
   140010bdf:	jmp    0x140010bee
   140010be1:	or     rax,0xffffffffffffffff
   140010be5:	inc    rax
   140010be8:	cmp    WORD PTR [rdx+rax*2],bx
   140010bec:	jne    0x140010be5
   140010bee:	mov    r8,QWORD PTR [rcx+0x10]
   140010bf2:	mov    r9,rdx
   140010bf5:	mov    QWORD PTR [rsp+0x20],rax
   140010bfa:	call   0x140003880
   140010bff:	test   eax,eax
   140010c01:	sete   al
   140010c04:	add    rsp,0x30
   140010c08:	pop    rbx
   140010c09:	ret    
   140010c0a:	int3   
   140010c0b:	int3   
   140010c0c:	int3   
   140010c0d:	int3   
   140010c0e:	int3   
   140010c0f:	int3   
   140010c10:	mov    r11,rsp
   140010c13:	push   r14
   140010c15:	sub    rsp,0x60
   140010c19:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   140010c21:	mov    QWORD PTR [r11+0x10],rbx
   140010c25:	mov    QWORD PTR [r11+0x18],rsi
   140010c29:	mov    QWORD PTR [r11+0x20],rdi
   140010c2d:	mov    rax,QWORD PTR [rip+0x30a1c]        # 0x140041650
   140010c34:	xor    rax,rsp
   140010c37:	mov    QWORD PTR [rsp+0x50],rax
   140010c3c:	mov    r14,rcx
   140010c3f:	xor    edx,edx
   140010c41:	lea    rcx,[r11-0x1c]
   140010c45:	call   0x14001465c
   140010c4a:	nop
   140010c4b:	mov    rsi,QWORD PTR [rip+0x33f06]        # 0x140044b58
   140010c52:	mov    QWORD PTR [rsp+0x20],rsi
   140010c57:	mov    rdi,QWORD PTR [rip+0x33f22]        # 0x140044b80
   140010c5e:	test   rdi,rdi
   140010c61:	jne    0x140010ca0
   140010c63:	xor    edx,edx
   140010c65:	lea    rcx,[rsp+0x48]
   140010c6a:	call   0x14001465c
   140010c6f:	cmp    QWORD PTR [rip+0x33f0a],rdi        # 0x140044b80
   140010c76:	jne    0x140010c8f
   140010c78:	mov    eax,DWORD PTR [rip+0x32822]        # 0x1400434a0
   140010c7e:	inc    eax
   140010c80:	mov    DWORD PTR [rip+0x3281a],eax        # 0x1400434a0
   140010c86:	cdqe   
   140010c88:	mov    QWORD PTR [rip+0x33ef1],rax        # 0x140044b80
   140010c8f:	lea    rcx,[rsp+0x48]
   140010c94:	call   0x1400146d8
   140010c99:	mov    rdi,QWORD PTR [rip+0x33ee0]        # 0x140044b80
   140010ca0:	mov    rcx,QWORD PTR [r14]
   140010ca3:	cmp    rdi,QWORD PTR [rcx+0x18]
   140010ca7:	jae    0x140010cbc
   140010ca9:	mov    rax,QWORD PTR [rcx+0x10]
   140010cad:	mov    rbx,QWORD PTR [rax+rdi*8]
   140010cb1:	test   rbx,rbx
   140010cb4:	jne    0x140010d3a
   140010cba:	jmp    0x140010cbe
   140010cbc:	xor    ebx,ebx
   140010cbe:	cmp    BYTE PTR [rcx+0x24],0x0
   140010cc2:	je     0x140010cd7
   140010cc4:	call   0x140014360
   140010cc9:	cmp    rdi,QWORD PTR [rax+0x18]
   140010ccd:	jae    0x140010cdc
   140010ccf:	mov    rax,QWORD PTR [rax+0x10]
   140010cd3:	mov    rbx,QWORD PTR [rax+rdi*8]
   140010cd7:	test   rbx,rbx
   140010cda:	jne    0x140010d3a
   140010cdc:	test   rsi,rsi
   140010cdf:	je     0x140010ce6
   140010ce1:	mov    rbx,rsi
   140010ce4:	jmp    0x140010d3a
   140010ce6:	mov    rdx,r14
   140010ce9:	lea    rcx,[rsp+0x20]
   140010cee:	call   0x140011010
   140010cf3:	cmp    rax,0xffffffffffffffff
   140010cf7:	jne    0x140010d1c
   140010cf9:	lea    rdx,[rip+0x28e78]        # 0x140039b78
   140010d00:	lea    rcx,[rsp+0x30]
   140010d05:	call   0x140019fb4
   140010d0a:	lea    rdx,[rip+0x2ee2f]        # 0x14003fb40
   140010d11:	lea    rcx,[rsp+0x30]
   140010d16:	call   0x14001a628
   140010d1b:	int3   
   140010d1c:	mov    rbx,QWORD PTR [rsp+0x20]
   140010d21:	mov    QWORD PTR [rip+0x33e30],rbx        # 0x140044b58
   140010d28:	mov    rdx,QWORD PTR [rbx]
   140010d2b:	mov    rcx,rbx
   140010d2e:	call   QWORD PTR [rdx+0x8]
   140010d31:	mov    rcx,rbx
   140010d34:	call   0x14001432c
   140010d39:	nop
   140010d3a:	lea    rcx,[rsp+0x4c]
   140010d3f:	call   0x1400146d8
   140010d44:	mov    rax,rbx
   140010d47:	mov    rcx,QWORD PTR [rsp+0x50]
   140010d4c:	xor    rcx,rsp
   140010d4f:	call   0x1400187d0
   140010d54:	lea    r11,[rsp+0x60]
   140010d59:	mov    rbx,QWORD PTR [r11+0x18]
   140010d5d:	mov    rsi,QWORD PTR [r11+0x20]
   140010d61:	mov    rdi,QWORD PTR [r11+0x28]
   140010d65:	mov    rsp,r11
   140010d68:	pop    r14
   140010d6a:	ret    
   140010d6b:	int3   
   140010d6c:	int3   
   140010d6d:	int3   
   140010d6e:	int3   
   140010d6f:	int3   
   140010d70:	rex push rbp
   140010d72:	push   rsi
   140010d73:	push   rdi
   140010d74:	push   r12
   140010d76:	push   r13
   140010d78:	push   r14
   140010d7a:	push   r15
   140010d7c:	sub    rsp,0x60
   140010d80:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140010d89:	mov    QWORD PTR [rsp+0xb8],rbx
   140010d91:	mov    rax,QWORD PTR [rip+0x308b8]        # 0x140041650
   140010d98:	xor    rax,rsp
   140010d9b:	mov    QWORD PTR [rsp+0x58],rax
   140010da0:	mov    rdi,r9
   140010da3:	mov    r13,r8
   140010da6:	mov    QWORD PTR [rsp+0x28],rdx
   140010dab:	mov    rsi,rcx
   140010dae:	xor    ecx,ecx
   140010db0:	movzx  r9d,WORD PTR [r9]
   140010db4:	test   r9w,r9w
   140010db8:	je     0x140010dd5
   140010dba:	movzx  eax,r9w
   140010dbe:	xchg   ax,ax
   140010dc0:	cmp    ax,r9w
   140010dc4:	jne    0x140010dc9
   140010dc6:	inc    r13
   140010dc9:	inc    rcx
   140010dcc:	movzx  eax,WORD PTR [rdi+rcx*2]
   140010dd0:	test   ax,ax
   140010dd3:	jne    0x140010dc0
   140010dd5:	mov    QWORD PTR [rsp+0x50],0xf
   140010dde:	mov    QWORD PTR [rsp+0x48],0x0
   140010de7:	mov    BYTE PTR [rsp+0x38],0x0
   140010dec:	xor    r8d,r8d
   140010def:	mov    rdx,r13
   140010df2:	lea    rcx,[rsp+0x38]
   140010df7:	call   0x140011260
   140010dfc:	nop
   140010dfd:	mov    eax,0xfffffffe
   140010e02:	lea    r14d,[rax+0x3]
   140010e06:	mov    r15,QWORD PTR [rsp+0x50]
   140010e0b:	mov    r12,QWORD PTR [rsp+0x38]
   140010e10:	mov    DWORD PTR [rsp+0x24],eax
   140010e14:	mov    BYTE PTR [rsp+0x20],0x0
   140010e19:	xor    ebx,ebx
   140010e1b:	xor    ebp,ebp
   140010e1d:	test   r13,r13
   140010e20:	je     0x140010fd6
   140010e26:	movzx  eax,WORD PTR [rdi+rbx*2]
   140010e2a:	test   ax,ax
   140010e2d:	je     0x140010e43
   140010e2f:	movzx  ecx,WORD PTR [rdi]
   140010e32:	cmp    ax,cx
   140010e35:	je     0x140010e43
   140010e37:	inc    rbx
   140010e3a:	movzx  eax,WORD PTR [rdi+rbx*2]
   140010e3e:	test   ax,ax
   140010e41:	jne    0x140010e32
   140010e43:	lea    rax,[rsp+0x38]
   140010e48:	cmp    r15,0x10
   140010e4c:	cmovae rax,r12
   140010e50:	cmp    BYTE PTR [rax+rbp*1],0x0
   140010e54:	je     0x140010e74
   140010e56:	lea    rax,[rsp+0x38]
   140010e5b:	cmp    r15,0x10
   140010e5f:	cmovae rax,r12
   140010e63:	movsx  rax,BYTE PTR [rax+rbp*1]
   140010e68:	add    rbx,rax
   140010e6b:	mov    eax,DWORD PTR [rsp+0x24]
   140010e6f:	jmp    0x140010f4d
   140010e74:	add    rbx,r14
   140010e77:	movzx  eax,WORD PTR [rdi+rbx*2]
   140010e7b:	cmp    ax,WORD PTR [rdi]
   140010e7e:	je     0x140010f1e
   140010e84:	test   ax,ax
   140010e87:	je     0x140010f1e
   140010e8d:	mov    rdx,QWORD PTR [rsp+0x28]
   140010e92:	mov    rcx,rsi
   140010e95:	call   0x1400110e0
   140010e9a:	test   al,al
   140010e9c:	jne    0x140010efc
   140010e9e:	cmp    BYTE PTR [rsi+0x8],al
   140010ea1:	jne    0x140010ee6
   140010ea3:	mov    rcx,QWORD PTR [rsi]
   140010ea6:	test   rcx,rcx
   140010ea9:	je     0x140010edb
   140010eab:	mov    rax,QWORD PTR [rcx+0x38]
   140010eaf:	mov    rdx,QWORD PTR [rax]
   140010eb2:	test   rdx,rdx
   140010eb5:	je     0x140010ec5
   140010eb7:	mov    rax,QWORD PTR [rcx+0x50]
   140010ebb:	cmp    DWORD PTR [rax],0x0
   140010ebe:	jle    0x140010ec5
   140010ec0:	movzx  eax,WORD PTR [rdx]
   140010ec3:	jmp    0x140010ecb
   140010ec5:	mov    rax,QWORD PTR [rcx]
   140010ec8:	call   QWORD PTR [rax+0x30]
   140010ecb:	mov    ecx,0xffff
   140010ed0:	cmp    cx,ax
   140010ed3:	je     0x140010edb
   140010ed5:	mov    WORD PTR [rsi+0xa],ax
   140010ed9:	jmp    0x140010ee2
   140010edb:	mov    QWORD PTR [rsi],0x0
   140010ee2:	mov    BYTE PTR [rsi+0x8],0x1
   140010ee6:	movzx  eax,WORD PTR [rsi+0xa]
   140010eea:	cmp    WORD PTR [rdi+rbx*2],ax
   140010eee:	jne    0x140010efc
   140010ef0:	mov    cl,0x1
   140010ef2:	mov    BYTE PTR [rsp+0x20],cl
   140010ef6:	mov    eax,DWORD PTR [rsp+0x24]
   140010efa:	jmp    0x140010f52
   140010efc:	lea    rdx,[rsp+0x38]
   140010f01:	cmp    r15,0x10
   140010f05:	cmovae rdx,r12
   140010f09:	mov    ecx,0x7f
   140010f0e:	movzx  eax,r14b
   140010f12:	cmp    r14,rcx
   140010f15:	cmovb  ecx,eax
   140010f18:	mov    eax,DWORD PTR [rsp+0x24]
   140010f1c:	jmp    0x140010f40
   140010f1e:	lea    rdx,[rsp+0x38]
   140010f23:	cmp    r15,0x10
   140010f27:	cmovae rdx,r12
   140010f2b:	mov    ecx,0x7f
   140010f30:	movzx  eax,r14b
   140010f34:	cmp    r14,rcx
   140010f37:	cmovb  ecx,eax
   140010f3a:	mov    eax,ebp
   140010f3c:	mov    DWORD PTR [rsp+0x24],eax
   140010f40:	mov    BYTE PTR [rdx+rbp*1],cl
   140010f43:	mov    r12,QWORD PTR [rsp+0x38]
   140010f48:	mov    r15,QWORD PTR [rsp+0x50]
   140010f4d:	movzx  ecx,BYTE PTR [rsp+0x20]
   140010f52:	inc    rbp
   140010f55:	cmp    rbp,r13
   140010f58:	jb     0x140010e26
   140010f5e:	test   cl,cl
   140010f60:	je     0x140010fd6
   140010f62:	mov    rdx,QWORD PTR [rsp+0x28]
   140010f67:	mov    rcx,rsi
   140010f6a:	call   0x1400110e0
   140010f6f:	test   al,al
   140010f71:	jne    0x140010fd2
   140010f73:	inc    r14
   140010f76:	mov    rcx,QWORD PTR [rsi]
   140010f79:	test   rcx,rcx
   140010f7c:	je     0x140010fbf
   140010f7e:	mov    rax,QWORD PTR [rcx+0x38]
   140010f82:	cmp    QWORD PTR [rax],0x0
   140010f86:	je     0x140010fa9
   140010f88:	mov    rdx,QWORD PTR [rcx+0x50]
   140010f8c:	mov    eax,DWORD PTR [rdx]
   140010f8e:	test   eax,eax
   140010f90:	jle    0x140010fa9
   140010f92:	dec    eax
   140010f94:	mov    DWORD PTR [rdx],eax
   140010f96:	mov    rcx,QWORD PTR [rcx+0x38]
   140010f9a:	mov    rdx,QWORD PTR [rcx]
   140010f9d:	lea    rax,[rdx+0x2]
   140010fa1:	mov    QWORD PTR [rcx],rax
   140010fa4:	movzx  eax,WORD PTR [rdx]
   140010fa7:	jmp    0x140010faf
   140010fa9:	mov    rax,QWORD PTR [rcx]
   140010fac:	call   QWORD PTR [rax+0x38]
   140010faf:	mov    ecx,0xffff
   140010fb4:	cmp    cx,ax
   140010fb7:	je     0x140010fbf
   140010fb9:	mov    BYTE PTR [rsi+0x8],0x0
   140010fbd:	jmp    0x140010fca
   140010fbf:	mov    QWORD PTR [rsi],0x0
   140010fc6:	mov    BYTE PTR [rsi+0x8],0x1
   140010fca:	or     eax,0xffffffff
   140010fcd:	jmp    0x140010e10
   140010fd2:	mov    eax,DWORD PTR [rsp+0x24]
   140010fd6:	cmp    r15,0x10
   140010fda:	jb     0x140010fe8
   140010fdc:	mov    rcx,r12
   140010fdf:	call   0x140018a04
   140010fe4:	mov    eax,DWORD PTR [rsp+0x24]
   140010fe8:	mov    rcx,QWORD PTR [rsp+0x58]
   140010fed:	xor    rcx,rsp
   140010ff0:	call   0x1400187d0
   140010ff5:	mov    rbx,QWORD PTR [rsp+0xb8]
   140010ffd:	add    rsp,0x60
   140011001:	pop    r15
   140011003:	pop    r14
   140011005:	pop    r13
   140011007:	pop    r12
   140011009:	pop    rdi
   14001100a:	pop    rsi
   14001100b:	pop    rbp
   14001100c:	ret    
   14001100d:	int3   
   14001100e:	int3   
   14001100f:	int3   
   140011010:	mov    rax,rsp
   140011013:	push   r14
   140011015:	sub    rsp,0x90
   14001101c:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140011024:	mov    QWORD PTR [rax+0x10],rbx
   140011028:	mov    QWORD PTR [rax+0x18],rsi
   14001102c:	mov    QWORD PTR [rax+0x20],rdi
   140011030:	mov    r14,rdx
   140011033:	mov    rdi,rcx
   140011036:	xor    esi,esi
   140011038:	mov    DWORD PTR [rsp+0xa0],esi
   14001103f:	test   rcx,rcx
   140011042:	je     0x1400110b6
   140011044:	cmp    QWORD PTR [rcx],rsi
   140011047:	jne    0x1400110b6
   140011049:	lea    ecx,[rsi+0x10]
   14001104c:	call   0x140018a0c
   140011051:	mov    rbx,rax
   140011054:	mov    QWORD PTR [rsp+0xa0],rax
   14001105c:	test   rax,rax
   14001105f:	je     0x1400110a1
   140011061:	mov    rax,QWORD PTR [r14]
   140011064:	test   rax,rax
   140011067:	jne    0x140011072
   140011069:	lea    rdx,[rip+0x28b00]        # 0x140039b70
   140011070:	jmp    0x14001107f
   140011072:	mov    rdx,QWORD PTR [rax+0x28]
   140011076:	test   rdx,rdx
   140011079:	jne    0x14001107f
   14001107b:	lea    rdx,[rax+0x30]
   14001107f:	lea    rcx,[rsp+0x28]
   140011084:	call   0x140012660
   140011089:	mov    esi,0x1
   14001108e:	mov    DWORD PTR [rbx+0x8],0x0
   140011095:	lea    rax,[rip+0x1fba4]        # 0x140030c40
   14001109c:	mov    QWORD PTR [rbx],rax
   14001109f:	jmp    0x1400110a3
   1400110a1:	xor    ebx,ebx
   1400110a3:	mov    QWORD PTR [rdi],rbx
   1400110a6:	test   sil,0x1
   1400110aa:	je     0x1400110b6
   1400110ac:	lea    rcx,[rsp+0x28]
   1400110b1:	call   0x140012760
   1400110b6:	mov    eax,0x4
   1400110bb:	lea    r11,[rsp+0x90]
   1400110c3:	mov    rbx,QWORD PTR [r11+0x18]
   1400110c7:	mov    rsi,QWORD PTR [r11+0x20]
   1400110cb:	mov    rdi,QWORD PTR [r11+0x28]
   1400110cf:	mov    rsp,r11
   1400110d2:	pop    r14
   1400110d4:	ret    
   1400110d5:	int3   
   1400110d6:	int3   
   1400110d7:	int3   
   1400110d8:	int3   
   1400110d9:	int3   
   1400110da:	int3   
   1400110db:	int3   
   1400110dc:	int3   
   1400110dd:	int3   
   1400110de:	int3   
   1400110df:	int3   
   1400110e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400110e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400110ea:	push   rdi
   1400110eb:	sub    rsp,0x20
   1400110ef:	cmp    BYTE PTR [rcx+0x8],0x0
   1400110f3:	mov    rbx,rdx
   1400110f6:	mov    rdi,rcx
   1400110f9:	mov    ebp,0xffff
   1400110fe:	jne    0x14001113e
   140011100:	mov    rcx,QWORD PTR [rcx]
   140011103:	test   rcx,rcx
   140011106:	je     0x140011133
   140011108:	mov    rax,QWORD PTR [rcx+0x38]
   14001110c:	mov    rdx,QWORD PTR [rax]
   14001110f:	test   rdx,rdx
   140011112:	je     0x140011122
   140011114:	mov    rax,QWORD PTR [rcx+0x50]
   140011118:	cmp    DWORD PTR [rax],0x0
   14001111b:	jle    0x140011122
   14001111d:	movzx  eax,WORD PTR [rdx]
   140011120:	jmp    0x140011128
   140011122:	mov    rax,QWORD PTR [rcx]
   140011125:	call   QWORD PTR [rax+0x30]
   140011128:	cmp    bp,ax
   14001112b:	je     0x140011133
   14001112d:	mov    WORD PTR [rdi+0xa],ax
   140011131:	jmp    0x14001113a
   140011133:	mov    QWORD PTR [rdi],0x0
   14001113a:	mov    BYTE PTR [rdi+0x8],0x1
   14001113e:	cmp    BYTE PTR [rbx+0x8],0x0
   140011142:	jne    0x140011182
   140011144:	mov    rcx,QWORD PTR [rbx]
   140011147:	test   rcx,rcx
   14001114a:	je     0x140011177
   14001114c:	mov    rax,QWORD PTR [rcx+0x38]
   140011150:	mov    rdx,QWORD PTR [rax]
   140011153:	test   rdx,rdx
   140011156:	je     0x140011166
   140011158:	mov    rax,QWORD PTR [rcx+0x50]
   14001115c:	cmp    DWORD PTR [rax],0x0
   14001115f:	jle    0x140011166
   140011161:	movzx  eax,WORD PTR [rdx]
   140011164:	jmp    0x14001116c
   140011166:	mov    rax,QWORD PTR [rcx]
   140011169:	call   QWORD PTR [rax+0x30]
   14001116c:	cmp    bp,ax
   14001116f:	je     0x140011177
   140011171:	mov    WORD PTR [rbx+0xa],ax
   140011175:	jmp    0x14001117e
   140011177:	mov    QWORD PTR [rbx],0x0
   14001117e:	mov    BYTE PTR [rbx+0x8],0x1
   140011182:	cmp    QWORD PTR [rdi],0x0
   140011186:	jne    0x1400111a0
   140011188:	cmp    QWORD PTR [rbx],0x0
   14001118c:	je     0x1400111a6
   14001118e:	xor    al,al
   140011190:	mov    rbx,QWORD PTR [rsp+0x30]
   140011195:	mov    rbp,QWORD PTR [rsp+0x38]
   14001119a:	add    rsp,0x20
   14001119e:	pop    rdi
   14001119f:	ret    
   1400111a0:	cmp    QWORD PTR [rbx],0x0
   1400111a4:	je     0x14001118e
   1400111a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400111ab:	mov    rbp,QWORD PTR [rsp+0x38]
   1400111b0:	mov    al,0x1
   1400111b2:	add    rsp,0x20
   1400111b6:	pop    rdi
   1400111b7:	ret    
   1400111b8:	movsxd rax,DWORD PTR [rcx-0x4]
   1400111bc:	sub    rcx,rax
   1400111bf:	jmp    0x14000d5d0
   1400111c4:	movsxd rax,DWORD PTR [rcx-0x4]
   1400111c8:	sub    rcx,rax
   1400111cb:	jmp    0x14000d570
   1400111d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400111d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400111da:	push   rdi
   1400111db:	sub    rsp,0x20
   1400111df:	xor    esi,esi
   1400111e1:	xor    r8d,r8d
   1400111e4:	xor    edx,edx
   1400111e6:	mov    rbx,rcx
   1400111e9:	mov    DWORD PTR [rcx+0x18],0x201
   1400111f0:	mov    QWORD PTR [rcx+0x20],0x6
   1400111f8:	mov    QWORD PTR [rcx+0x40],rsi
   1400111fc:	mov    QWORD PTR [rcx+0x8],rsi
   140011200:	mov    DWORD PTR [rcx+0x14],esi
   140011203:	mov    QWORD PTR [rcx+0x28],rsi
   140011207:	mov    QWORD PTR [rcx+0x30],rsi
   14001120b:	mov    QWORD PTR [rcx+0x38],rsi
   14001120f:	call   0x1400130b0
   140011214:	lea    ecx,[rsi+0x8]
   140011217:	call   0x140018a0c
   14001121c:	mov    rdi,rax
   14001121f:	test   rax,rax
   140011222:	je     0x140011247
   140011224:	xor    eax,eax
   140011226:	mov    cl,0x1
   140011228:	mov    QWORD PTR [rdi],rax
   14001122b:	call   0x140014368
   140011230:	mov    QWORD PTR [rdi],rax
   140011233:	mov    QWORD PTR [rbx+0x40],rdi
   140011237:	mov    rbx,QWORD PTR [rsp+0x30]
   14001123c:	mov    rsi,QWORD PTR [rsp+0x38]
   140011241:	add    rsp,0x20
   140011245:	pop    rdi
   140011246:	ret    
   140011247:	mov    QWORD PTR [rbx+0x40],rsi
   14001124b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011250:	mov    rsi,QWORD PTR [rsp+0x38]
   140011255:	add    rsp,0x20
   140011259:	pop    rdi
   14001125a:	ret    
   14001125b:	int3   
   14001125c:	int3   
   14001125d:	int3   
   14001125e:	int3   
   14001125f:	int3   
   140011260:	rex push rbx
   140011262:	push   rsi
   140011263:	push   rdi
   140011264:	sub    rsp,0x20
   140011268:	movzx  esi,r8b
   14001126c:	mov    rdi,rdx
   14001126f:	mov    rbx,rcx
   140011272:	cmp    rdx,0xffffffffffffffff
   140011276:	je     0x140011338
   14001127c:	cmp    rdx,0xfffffffffffffffe
   140011280:	ja     0x140011345
   140011286:	mov    rax,QWORD PTR [rcx+0x18]
   14001128a:	cmp    rax,rdx
   14001128d:	jae    0x1400112b6
   14001128f:	mov    r8,QWORD PTR [rcx+0x10]
   140011293:	call   0x140008c70
   140011298:	test   rdi,rdi
   14001129b:	je     0x14001132d
   1400112a1:	cmp    rdi,0x1
   1400112a5:	jne    0x1400112ee
   1400112a7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400112ac:	jb     0x1400112e6
   1400112ae:	mov    rax,QWORD PTR [rbx]
   1400112b1:	mov    BYTE PTR [rax],sil
   1400112b4:	jmp    0x140011309
   1400112b6:	test   rdx,rdx
   1400112b9:	jne    0x140011298
   1400112bb:	mov    QWORD PTR [rcx+0x10],rdx
   1400112bf:	cmp    rax,0x10
   1400112c3:	jb     0x1400112d5
   1400112c5:	mov    rax,QWORD PTR [rcx]
   1400112c8:	mov    BYTE PTR [rax],dl
   1400112ca:	mov    rax,rbx
   1400112cd:	add    rsp,0x20
   1400112d1:	pop    rdi
   1400112d2:	pop    rsi
   1400112d3:	pop    rbx
   1400112d4:	ret    
   1400112d5:	mov    rax,rcx
   1400112d8:	mov    BYTE PTR [rcx],0x0
   1400112db:	mov    rax,rbx
   1400112de:	add    rsp,0x20
   1400112e2:	pop    rdi
   1400112e3:	pop    rsi
   1400112e4:	pop    rbx
   1400112e5:	ret    
   1400112e6:	mov    rax,rbx
   1400112e9:	mov    BYTE PTR [rbx],sil
   1400112ec:	jmp    0x140011309
   1400112ee:	cmp    QWORD PTR [rbx+0x18],0x10
   1400112f3:	jb     0x1400112fa
   1400112f5:	mov    rcx,QWORD PTR [rbx]
   1400112f8:	jmp    0x1400112fd
   1400112fa:	mov    rcx,rbx
   1400112fd:	movsx  edx,sil
   140011301:	mov    r8,rdi
   140011304:	call   0x14001b980
   140011309:	cmp    QWORD PTR [rbx+0x18],0x10
   14001130e:	mov    QWORD PTR [rbx+0x10],rdi
   140011312:	jb     0x140011326
   140011314:	mov    rax,QWORD PTR [rbx]
   140011317:	mov    BYTE PTR [rax+rdi*1],0x0
   14001131b:	mov    rax,rbx
   14001131e:	add    rsp,0x20
   140011322:	pop    rdi
   140011323:	pop    rsi
   140011324:	pop    rbx
   140011325:	ret    
   140011326:	mov    rax,rbx
   140011329:	mov    BYTE PTR [rbx+rdi*1],0x0
   14001132d:	mov    rax,rbx
   140011330:	add    rsp,0x20
   140011334:	pop    rdi
   140011335:	pop    rsi
   140011336:	pop    rbx
   140011337:	ret    
   140011338:	lea    rcx,[rip+0x26971]        # 0x140037cb0
   14001133f:	call   0x14001405c
   140011344:	int3   
   140011345:	lea    rcx,[rip+0x26964]        # 0x140037cb0
   14001134c:	call   0x14001405c
   140011351:	int3   
   140011352:	int3   
   140011353:	int3   
   140011354:	int3   
   140011355:	int3   
   140011356:	int3   
   140011357:	int3   
   140011358:	int3   
   140011359:	int3   
   14001135a:	int3   
   14001135b:	int3   
   14001135c:	int3   
   14001135d:	int3   
   14001135e:	int3   
   14001135f:	int3   
   140011360:	rex push rbx
   140011362:	sub    rsp,0x30
   140011366:	mov    rax,QWORD PTR [rcx]
   140011369:	mov    rbx,rdx
   14001136c:	mov    DWORD PTR [rsp+0x20],0x0
   140011374:	call   QWORD PTR [rax+0x28]
   140011377:	mov    rax,rbx
   14001137a:	add    rsp,0x30
   14001137e:	pop    rbx
   14001137f:	ret    
   140011380:	rex push rbx
   140011382:	sub    rsp,0x30
   140011386:	mov    rax,QWORD PTR [rcx]
   140011389:	mov    rbx,rdx
   14001138c:	mov    DWORD PTR [rsp+0x20],0x0
   140011394:	call   QWORD PTR [rax+0x38]
   140011397:	mov    rax,rbx
   14001139a:	add    rsp,0x30
   14001139e:	pop    rbx
   14001139f:	ret    
   1400113a0:	rex push rbx
   1400113a2:	sub    rsp,0x30
   1400113a6:	mov    rax,QWORD PTR [rcx]
   1400113a9:	mov    rbx,rdx
   1400113ac:	mov    DWORD PTR [rsp+0x20],0x0
   1400113b4:	call   QWORD PTR [rax+0x30]
   1400113b7:	mov    rax,rbx
   1400113ba:	add    rsp,0x30
   1400113be:	pop    rbx
   1400113bf:	ret    
   1400113c0:	rex push rbx
   1400113c2:	push   rbp
   1400113c3:	push   rsi
   1400113c4:	sub    rsp,0x20
   1400113c8:	movzx  ebp,r8w
   1400113cc:	mov    rsi,rdx
   1400113cf:	mov    rbx,rcx
   1400113d2:	cmp    rdx,0xffffffffffffffff
   1400113d6:	je     0x1400114a3
   1400113dc:	movabs rax,0x7ffffffffffffffe
   1400113e6:	cmp    rdx,rax
   1400113e9:	ja     0x1400114b0
   1400113ef:	mov    rcx,QWORD PTR [rcx+0x18]
   1400113f3:	cmp    rcx,rdx
   1400113f6:	jae    0x140011422
   1400113f8:	mov    r8,QWORD PTR [rbx+0x10]
   1400113fc:	mov    rcx,rbx
   1400113ff:	call   0x140003b90
   140011404:	test   rsi,rsi
   140011407:	je     0x140011498
   14001140d:	cmp    rsi,0x1
   140011411:	jne    0x14001145d
   140011413:	cmp    QWORD PTR [rbx+0x18],0x8
   140011418:	jb     0x140011455
   14001141a:	mov    rax,QWORD PTR [rbx]
   14001141d:	mov    WORD PTR [rax],bp
   140011420:	jmp    0x14001147f
   140011422:	test   rdx,rdx
   140011425:	jne    0x140011404
   140011427:	xor    eax,eax
   140011429:	mov    QWORD PTR [rbx+0x10],rax
   14001142d:	cmp    rcx,0x8
   140011431:	jb     0x140011444
   140011433:	mov    rcx,QWORD PTR [rbx]
   140011436:	mov    WORD PTR [rcx],ax
   140011439:	mov    rax,rbx
   14001143c:	add    rsp,0x20
   140011440:	pop    rsi
   140011441:	pop    rbp
   140011442:	pop    rbx
   140011443:	ret    
   140011444:	mov    WORD PTR [rbx],ax
   140011447:	mov    rcx,rbx
   14001144a:	mov    rax,rbx
   14001144d:	add    rsp,0x20
   140011451:	pop    rsi
   140011452:	pop    rbp
   140011453:	pop    rbx
   140011454:	ret    
   140011455:	mov    rax,rbx
   140011458:	mov    WORD PTR [rbx],bp
   14001145b:	jmp    0x14001147f
   14001145d:	cmp    QWORD PTR [rbx+0x18],0x8
   140011462:	mov    QWORD PTR [rsp+0x50],rdi
   140011467:	jb     0x14001146e
   140011469:	mov    rdi,QWORD PTR [rbx]
   14001146c:	jmp    0x140011471
   14001146e:	mov    rdi,rbx
   140011471:	movzx  eax,bp
   140011474:	mov    rcx,rsi
   140011477:	rep stos WORD PTR es:[rdi],ax
   14001147a:	mov    rdi,QWORD PTR [rsp+0x50]
   14001147f:	cmp    QWORD PTR [rbx+0x18],0x8
   140011484:	mov    QWORD PTR [rbx+0x10],rsi
   140011488:	jb     0x14001148f
   14001148a:	mov    rcx,QWORD PTR [rbx]
   14001148d:	jmp    0x140011492
   14001148f:	mov    rcx,rbx
   140011492:	xor    eax,eax
   140011494:	mov    WORD PTR [rcx+rsi*2],ax
   140011498:	mov    rax,rbx
   14001149b:	add    rsp,0x20
   14001149f:	pop    rsi
   1400114a0:	pop    rbp
   1400114a1:	pop    rbx
   1400114a2:	ret    
   1400114a3:	lea    rcx,[rip+0x26806]        # 0x140037cb0
   1400114aa:	call   0x14001405c
   1400114af:	int3   
   1400114b0:	lea    rcx,[rip+0x267f9]        # 0x140037cb0
   1400114b7:	call   0x14001405c
   1400114bc:	int3   
   1400114bd:	int3   
   1400114be:	int3   
   1400114bf:	int3   
   1400114c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400114c5:	push   rdi
   1400114c6:	sub    rsp,0x20
   1400114ca:	lea    rax,[rip+0x1f7e7]        # 0x140030cb8
   1400114d1:	mov    rdi,rcx
   1400114d4:	mov    ebx,edx
   1400114d6:	mov    QWORD PTR [rcx],rax
   1400114d9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400114dd:	call   0x140019610
   1400114e2:	mov    rcx,QWORD PTR [rdi+0x20]
   1400114e6:	call   0x140019610
   1400114eb:	mov    rcx,QWORD PTR [rdi+0x28]
   1400114ef:	call   0x140019610
   1400114f4:	lea    rax,[rip+0x1f50d]        # 0x140030a08
   1400114fb:	mov    QWORD PTR [rdi],rax
   1400114fe:	test   bl,0x1
   140011501:	je     0x14001150b
   140011503:	mov    rcx,rdi
   140011506:	call   0x140018a04
   14001150b:	mov    rax,rdi
   14001150e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011513:	add    rsp,0x20
   140011517:	pop    rdi
   140011518:	ret    
   140011519:	int3   
   14001151a:	int3   
   14001151b:	int3   
   14001151c:	int3   
   14001151d:	int3   
   14001151e:	int3   
   14001151f:	int3   
   140011520:	movzx  eax,WORD PTR [rcx+0x18]
   140011524:	ret    
   140011525:	int3   
   140011526:	int3   
   140011527:	int3   
   140011528:	int3   
   140011529:	int3   
   14001152a:	int3   
   14001152b:	int3   
   14001152c:	int3   
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	movzx  eax,WORD PTR [rcx+0x1a]
   140011534:	ret    
   140011535:	int3   
   140011536:	int3   
   140011537:	int3   
   140011538:	int3   
   140011539:	int3   
   14001153a:	int3   
   14001153b:	int3   
   14001153c:	int3   
   14001153d:	int3   
   14001153e:	int3   
   14001153f:	int3   
   140011540:	rex push rbx
   140011542:	sub    rsp,0x30
   140011546:	mov    rbx,rdx
   140011549:	mov    rdx,QWORD PTR [rcx+0x10]
   14001154d:	xor    r8d,r8d
   140011550:	mov    QWORD PTR [rbx+0x18],0xf
   140011558:	mov    QWORD PTR [rbx+0x10],r8
   14001155c:	mov    BYTE PTR [rbx],r8b
   14001155f:	mov    DWORD PTR [rsp+0x20],r8d
   140011564:	cmp    BYTE PTR [rdx],r8b
   140011567:	je     0x14001157a
   140011569:	or     r8,0xffffffffffffffff
   14001156d:	nop    DWORD PTR [rax]
   140011570:	inc    r8
   140011573:	cmp    BYTE PTR [rdx+r8*1],0x0
   140011578:	jne    0x140011570
   14001157a:	mov    rcx,rbx
   14001157d:	call   0x140008e50
   140011582:	mov    rax,rbx
   140011585:	add    rsp,0x30
   140011589:	pop    rbx
   14001158a:	ret    
   14001158b:	int3   
   14001158c:	int3   
   14001158d:	int3   
   14001158e:	int3   
   14001158f:	int3   
   140011590:	rex push rbx
   140011592:	sub    rsp,0x30
   140011596:	mov    rbx,rdx
   140011599:	mov    rdx,QWORD PTR [rcx+0x20]
   14001159d:	xor    r8d,r8d
   1400115a0:	mov    QWORD PTR [rbx+0x18],0x7
   1400115a8:	mov    QWORD PTR [rbx+0x10],r8
   1400115ac:	mov    WORD PTR [rbx],r8w
   1400115b0:	mov    DWORD PTR [rsp+0x20],r8d
   1400115b5:	cmp    WORD PTR [rdx],r8w
   1400115b9:	je     0x1400115cb
   1400115bb:	or     r8,0xffffffffffffffff
   1400115bf:	nop
   1400115c0:	inc    r8
   1400115c3:	cmp    WORD PTR [rdx+r8*2],0x0
   1400115c9:	jne    0x1400115c0
   1400115cb:	mov    rcx,rbx
   1400115ce:	call   0x140003d90
   1400115d3:	mov    rax,rbx
   1400115d6:	add    rsp,0x30
   1400115da:	pop    rbx
   1400115db:	ret    
   1400115dc:	int3   
   1400115dd:	int3   
   1400115de:	int3   
   1400115df:	int3   
   1400115e0:	rex push rbx
   1400115e2:	sub    rsp,0x30
   1400115e6:	mov    rbx,rdx
   1400115e9:	mov    rdx,QWORD PTR [rcx+0x28]
   1400115ed:	xor    r8d,r8d
   1400115f0:	mov    QWORD PTR [rbx+0x18],0x7
   1400115f8:	mov    QWORD PTR [rbx+0x10],r8
   1400115fc:	mov    WORD PTR [rbx],r8w
   140011600:	mov    DWORD PTR [rsp+0x20],r8d
   140011605:	cmp    WORD PTR [rdx],r8w
   140011609:	je     0x14001161b
   14001160b:	or     r8,0xffffffffffffffff
   14001160f:	nop
   140011610:	inc    r8
   140011613:	cmp    WORD PTR [rdx+r8*2],0x0
   140011619:	jne    0x140011610
   14001161b:	mov    rcx,rbx
   14001161e:	call   0x140003d90
   140011623:	mov    rax,rbx
   140011626:	add    rsp,0x30
   14001162a:	pop    rbx
   14001162b:	ret    
   14001162c:	int3   
   14001162d:	int3   
   14001162e:	int3   
   14001162f:	int3   
   140011630:	mov    QWORD PTR [rsp+0x10],rbx
   140011635:	push   rbp
   140011636:	push   rsi
   140011637:	push   rdi
   140011638:	push   r12
   14001163a:	push   r13
   14001163c:	push   r14
   14001163e:	push   r15
   140011640:	sub    rsp,0x50
   140011644:	mov    rax,QWORD PTR [rip+0x30005]        # 0x140041650
   14001164b:	xor    rax,rsp
   14001164e:	mov    QWORD PTR [rsp+0x40],rax
   140011653:	xor    r12d,r12d
   140011656:	or     r13,0xffffffffffffffff
   14001165a:	mov    r15,r8
   14001165d:	mov    rdi,r13
   140011660:	mov    rsi,rcx
   140011663:	mov    DWORD PTR [rsp+0x30],r12d
   140011668:	nop    DWORD PTR [rax+rax*1+0x0]
   140011670:	inc    rdi
   140011673:	cmp    BYTE PTR [rcx+rdi*1],r12b
   140011677:	jne    0x140011670
   140011679:	inc    rdi
   14001167c:	mov    rbx,r12
   14001167f:	mov    r14,rcx
   140011682:	mov    rbp,rdi
   140011685:	je     0x1400116bb
   140011687:	nop    WORD PTR [rax+rax*1+0x0]
   140011690:	lea    r9,[rsp+0x30]
   140011695:	lea    rcx,[rsp+0x34]
   14001169a:	mov    r8,rbp
   14001169d:	mov    rdx,r14
   1400116a0:	mov    QWORD PTR [rsp+0x20],r15
   1400116a5:	call   0x140014898
   1400116aa:	test   eax,eax
   1400116ac:	jle    0x1400116bb
   1400116ae:	cdqe   
   1400116b0:	inc    rbx
   1400116b3:	add    r14,rax
   1400116b6:	sub    rbp,rax
   1400116b9:	jne    0x140011690
   1400116bb:	inc    rbx
   1400116be:	mov    eax,0x2
   1400116c3:	mul    rbx
   1400116c6:	cmovo  rax,r13
   1400116ca:	mov    rcx,rax
   1400116cd:	call   0x1400140cc
   1400116d2:	mov    DWORD PTR [rsp+0x38],r12d
   1400116d7:	mov    rbp,rax
   1400116da:	mov    r14,rax
   1400116dd:	test   rbx,rbx
   1400116e0:	je     0x14001170c
   1400116e2:	lea    r9,[rsp+0x38]
   1400116e7:	mov    r8,rdi
   1400116ea:	mov    rdx,rsi
   1400116ed:	mov    rcx,r14
   1400116f0:	mov    QWORD PTR [rsp+0x20],r15
   1400116f5:	call   0x140014898
   1400116fa:	test   eax,eax
   1400116fc:	jle    0x14001170c
   1400116fe:	cdqe   
   140011700:	add    r14,0x2
   140011704:	add    rsi,rax
   140011707:	dec    rbx
   14001170a:	jne    0x1400116e2
   14001170c:	mov    WORD PTR [r14],r12w
   140011710:	mov    rax,rbp
   140011713:	mov    rcx,QWORD PTR [rsp+0x40]
   140011718:	xor    rcx,rsp
   14001171b:	call   0x1400187d0
   140011720:	mov    rbx,QWORD PTR [rsp+0x98]
   140011728:	add    rsp,0x50
   14001172c:	pop    r15
   14001172e:	pop    r14
   140011730:	pop    r13
   140011732:	pop    r12
   140011734:	pop    rdi
   140011735:	pop    rsi
   140011736:	pop    rbp
   140011737:	ret    
   140011738:	int3   
   140011739:	int3   
   14001173a:	int3   
   14001173b:	int3   
   14001173c:	int3   
   14001173d:	int3   
   14001173e:	int3   
   14001173f:	int3   
   140011740:	rex push rbx
   140011742:	sub    rsp,0x20
   140011746:	mov    rbx,rcx
   140011749:	mov    rcx,QWORD PTR [rcx+0x10]
   14001174d:	call   0x140019610
   140011752:	mov    rcx,QWORD PTR [rbx+0x20]
   140011756:	call   0x140019610
   14001175b:	mov    rcx,QWORD PTR [rbx+0x28]
   14001175f:	add    rsp,0x20
   140011763:	pop    rbx
   140011764:	jmp    0x140019610
   140011769:	int3   
   14001176a:	int3   
   14001176b:	int3   
   14001176c:	int3   
   14001176d:	int3   
   14001176e:	int3   
   14001176f:	int3   
   140011770:	mov    rax,rsp
   140011773:	push   r12
   140011775:	push   r14
   140011777:	push   r15
   140011779:	sub    rsp,0xc0
   140011780:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140011789:	mov    QWORD PTR [rax+0x10],rbx
   14001178d:	mov    QWORD PTR [rax+0x18],rsi
   140011791:	mov    QWORD PTR [rax+0x20],rdi
   140011795:	mov    rax,QWORD PTR [rip+0x2feb4]        # 0x140041650
   14001179c:	xor    rax,rsp
   14001179f:	mov    QWORD PTR [rsp+0xb0],rax
   1400117a7:	movzx  r15d,r8b
   1400117ab:	mov    rsi,rcx
   1400117ae:	mov    QWORD PTR [rsp+0x78],rcx
   1400117b3:	call   0x14001a1ec
   1400117b8:	mov    r14,rax
   1400117bb:	lea    rcx,[rsp+0x38]
   1400117c0:	call   0x140014710
   1400117c5:	movups xmm0,XMMWORD PTR [rax]
   1400117c8:	movups XMMWORD PTR [rsp+0x80],xmm0
   1400117d0:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400117d4:	movups XMMWORD PTR [rsp+0x90],xmm1
   1400117dc:	movsd  xmm0,QWORD PTR [rax+0x20]
   1400117e1:	movsd  QWORD PTR [rsp+0xa0],xmm0
   1400117ea:	mov    ecx,DWORD PTR [rax+0x28]
   1400117ed:	mov    DWORD PTR [rsp+0xa8],ecx
   1400117f4:	xor    r12d,r12d
   1400117f7:	mov    QWORD PTR [rsi+0x10],r12
   1400117fb:	mov    QWORD PTR [rsi+0x20],r12
   1400117ff:	mov    QWORD PTR [rsi+0x28],r12
   140011803:	test   r15b,r15b
   140011806:	lea    rdi,[rip+0x28363]        # 0x140039b70
   14001180d:	jne    0x140011813
   14001180f:	mov    rdi,QWORD PTR [r14+0x10]
   140011813:	lea    rcx,[rsp+0x38]
   140011818:	call   0x140014710
   14001181d:	or     rbx,0xffffffffffffffff
   140011821:	inc    rbx
   140011824:	cmp    BYTE PTR [rdi+rbx*1],0x0
   140011828:	jne    0x140011821
   14001182a:	inc    rbx
   14001182d:	mov    rcx,rbx
   140011830:	call   0x1400140cc
   140011835:	test   rbx,rbx
   140011838:	je     0x14001184f
   14001183a:	mov    rdx,rax
   14001183d:	sub    rdx,rdi
   140011840:	movzx  ecx,BYTE PTR [rdi]
   140011843:	mov    BYTE PTR [rdx+rdi*1],cl
   140011846:	lea    rdi,[rdi+0x1]
   14001184a:	dec    rbx
   14001184d:	jne    0x140011840
   14001184f:	mov    QWORD PTR [rsi+0x10],rax
   140011853:	lea    r8,[rsp+0x80]
   14001185b:	xor    edx,edx
   14001185d:	lea    rcx,[rip+0x28198]        # 0x1400399fc
   140011864:	call   0x140011630
   140011869:	mov    QWORD PTR [rsi+0x20],rax
   14001186d:	lea    r8,[rsp+0x80]
   140011875:	xor    edx,edx
   140011877:	lea    rcx,[rip+0x28186]        # 0x140039a04
   14001187e:	call   0x140011630
   140011883:	mov    QWORD PTR [rsi+0x28],rax
   140011887:	test   r15b,r15b
   14001188a:	je     0x140011912
   140011890:	mov    BYTE PTR [rsp+0x68],0x2e
   140011895:	mov    WORD PTR [rsp+0x70],r12w
   14001189b:	mov    DWORD PTR [rsp+0x78],r12d
   1400118a0:	lea    rax,[rsp+0x80]
   1400118a8:	mov    QWORD PTR [rsp+0x20],rax
   1400118ad:	lea    r9,[rsp+0x78]
   1400118b2:	mov    r8d,0x1
   1400118b8:	lea    rdx,[rsp+0x68]
   1400118bd:	lea    rcx,[rsp+0x70]
   1400118c2:	call   0x140014898
   1400118c7:	movzx  eax,WORD PTR [rsp+0x70]
   1400118cc:	mov    WORD PTR [rsi+0x18],ax
   1400118d0:	mov    BYTE PTR [rsp+0x68],0x2c
   1400118d5:	mov    WORD PTR [rsp+0x70],r12w
   1400118db:	mov    DWORD PTR [rsp+0x78],r12d
   1400118e0:	lea    rax,[rsp+0x80]
   1400118e8:	mov    QWORD PTR [rsp+0x20],rax
   1400118ed:	lea    r9,[rsp+0x78]
   1400118f2:	mov    r8d,0x1
   1400118f8:	lea    rdx,[rsp+0x68]
   1400118fd:	lea    rcx,[rsp+0x70]
   140011902:	call   0x140014898
   140011907:	movzx  eax,WORD PTR [rsp+0x70]
   14001190c:	mov    WORD PTR [rsi+0x1a],ax
   140011910:	jmp    0x140011928
   140011912:	mov    rax,QWORD PTR [r14+0x58]
   140011916:	movzx  ecx,WORD PTR [rax]
   140011919:	mov    WORD PTR [rsi+0x18],cx
   14001191d:	mov    rax,QWORD PTR [r14+0x60]
   140011921:	movzx  ecx,WORD PTR [rax]
   140011924:	mov    WORD PTR [rsi+0x1a],cx
   140011928:	mov    rcx,QWORD PTR [rsp+0xb0]
   140011930:	xor    rcx,rsp
   140011933:	call   0x1400187d0
   140011938:	lea    r11,[rsp+0xc0]
   140011940:	mov    rbx,QWORD PTR [r11+0x28]
   140011944:	mov    rsi,QWORD PTR [r11+0x30]
   140011948:	mov    rdi,QWORD PTR [r11+0x38]
   14001194c:	mov    rsp,r11
   14001194f:	pop    r15
   140011951:	pop    r14
   140011953:	pop    r12
   140011955:	ret    
   140011956:	int3   
   140011957:	int3   
   140011958:	int3   
   140011959:	int3   
   14001195a:	int3   
   14001195b:	int3   
   14001195c:	int3   
   14001195d:	int3   
   14001195e:	int3   
   14001195f:	int3   
   140011960:	mov    rax,rsp
   140011963:	push   rsi
   140011964:	push   rdi
   140011965:	push   r14
   140011967:	sub    rsp,0x90
   14001196e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011977:	mov    QWORD PTR [rax+0x10],rbx
   14001197b:	mov    r14,rdx
   14001197e:	mov    rdi,rcx
   140011981:	xor    esi,esi
   140011983:	mov    DWORD PTR [rax+0x8],esi
   140011986:	test   rcx,rcx
   140011989:	je     0x140011a36
   14001198f:	cmp    QWORD PTR [rcx],rsi
   140011992:	jne    0x140011a36
   140011998:	lea    ecx,[rsi+0x30]
   14001199b:	call   0x140018a0c
   1400119a0:	mov    rbx,rax
   1400119a3:	mov    QWORD PTR [rsp+0xc0],rax
   1400119ab:	test   rax,rax
   1400119ae:	je     0x140011a21
   1400119b0:	xor    eax,eax
   1400119b2:	mov    QWORD PTR [rbx],rax
   1400119b5:	mov    QWORD PTR [rbx+0x8],rax
   1400119b9:	mov    QWORD PTR [rbx+0x10],rax
   1400119bd:	mov    QWORD PTR [rbx+0x18],rax
   1400119c1:	mov    QWORD PTR [rbx+0x20],rax
   1400119c5:	mov    QWORD PTR [rbx+0x28],rax
   1400119c9:	mov    rax,QWORD PTR [r14]
   1400119cc:	test   rax,rax
   1400119cf:	jne    0x1400119da
   1400119d1:	lea    rdx,[rip+0x28198]        # 0x140039b70
   1400119d8:	jmp    0x1400119e7
   1400119da:	mov    rdx,QWORD PTR [rax+0x28]
   1400119de:	test   rdx,rdx
   1400119e1:	jne    0x1400119e7
   1400119e3:	lea    rdx,[rax+0x30]
   1400119e7:	lea    rcx,[rsp+0x28]
   1400119ec:	call   0x140012660
   1400119f1:	nop
   1400119f2:	mov    esi,0x1
   1400119f7:	mov    DWORD PTR [rsp+0xb0],esi
   1400119fe:	mov    DWORD PTR [rbx+0x8],0x0
   140011a05:	lea    rcx,[rip+0x1f2ac]        # 0x140030cb8
   140011a0c:	mov    QWORD PTR [rbx],rcx
   140011a0f:	movzx  r8d,sil
   140011a13:	mov    rdx,rax
   140011a16:	mov    rcx,rbx
   140011a19:	call   0x140011770
   140011a1e:	nop
   140011a1f:	jmp    0x140011a23
   140011a21:	xor    ebx,ebx
   140011a23:	mov    QWORD PTR [rdi],rbx
   140011a26:	test   sil,0x1
   140011a2a:	je     0x140011a36
   140011a2c:	lea    rcx,[rsp+0x28]
   140011a31:	call   0x140012760
   140011a36:	mov    eax,0x4
   140011a3b:	mov    rbx,QWORD PTR [rsp+0xb8]
   140011a43:	add    rsp,0x90
   140011a4a:	pop    r14
   140011a4c:	pop    rdi
   140011a4d:	pop    rsi
   140011a4e:	ret    
   140011a4f:	int3   
   140011a50:	mov    r11,rsp
   140011a53:	push   r14
   140011a55:	sub    rsp,0x60
   140011a59:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   140011a61:	mov    QWORD PTR [r11+0x10],rbx
   140011a65:	mov    QWORD PTR [r11+0x18],rsi
   140011a69:	mov    QWORD PTR [r11+0x20],rdi
   140011a6d:	mov    rax,QWORD PTR [rip+0x2fbdc]        # 0x140041650
   140011a74:	xor    rax,rsp
   140011a77:	mov    QWORD PTR [rsp+0x50],rax
   140011a7c:	mov    r14,rcx
   140011a7f:	xor    edx,edx
   140011a81:	lea    rcx,[r11-0x1c]
   140011a85:	call   0x14001465c
   140011a8a:	nop
   140011a8b:	mov    rsi,QWORD PTR [rip+0x330ce]        # 0x140044b60
   140011a92:	mov    QWORD PTR [rsp+0x20],rsi
   140011a97:	mov    rdi,QWORD PTR [rip+0x330da]        # 0x140044b78
   140011a9e:	test   rdi,rdi
   140011aa1:	jne    0x140011ae0
   140011aa3:	xor    edx,edx
   140011aa5:	lea    rcx,[rsp+0x48]
   140011aaa:	call   0x14001465c
   140011aaf:	cmp    QWORD PTR [rip+0x330c2],rdi        # 0x140044b78
   140011ab6:	jne    0x140011acf
   140011ab8:	mov    eax,DWORD PTR [rip+0x319e2]        # 0x1400434a0
   140011abe:	inc    eax
   140011ac0:	mov    DWORD PTR [rip+0x319da],eax        # 0x1400434a0
   140011ac6:	cdqe   
   140011ac8:	mov    QWORD PTR [rip+0x330a9],rax        # 0x140044b78
   140011acf:	lea    rcx,[rsp+0x48]
   140011ad4:	call   0x1400146d8
   140011ad9:	mov    rdi,QWORD PTR [rip+0x33098]        # 0x140044b78
   140011ae0:	mov    rcx,QWORD PTR [r14]
   140011ae3:	cmp    rdi,QWORD PTR [rcx+0x18]
   140011ae7:	jae    0x140011afc
   140011ae9:	mov    rax,QWORD PTR [rcx+0x10]
   140011aed:	mov    rbx,QWORD PTR [rax+rdi*8]
   140011af1:	test   rbx,rbx
   140011af4:	jne    0x140011b7a
   140011afa:	jmp    0x140011afe
   140011afc:	xor    ebx,ebx
   140011afe:	cmp    BYTE PTR [rcx+0x24],0x0
   140011b02:	je     0x140011b17
   140011b04:	call   0x140014360
   140011b09:	cmp    rdi,QWORD PTR [rax+0x18]
   140011b0d:	jae    0x140011b1c
   140011b0f:	mov    rax,QWORD PTR [rax+0x10]
   140011b13:	mov    rbx,QWORD PTR [rax+rdi*8]
   140011b17:	test   rbx,rbx
   140011b1a:	jne    0x140011b7a
   140011b1c:	test   rsi,rsi
   140011b1f:	je     0x140011b26
   140011b21:	mov    rbx,rsi
   140011b24:	jmp    0x140011b7a
   140011b26:	mov    rdx,r14
   140011b29:	lea    rcx,[rsp+0x20]
   140011b2e:	call   0x140011960
   140011b33:	cmp    rax,0xffffffffffffffff
   140011b37:	jne    0x140011b5c
   140011b39:	lea    rdx,[rip+0x28038]        # 0x140039b78
   140011b40:	lea    rcx,[rsp+0x30]
   140011b45:	call   0x140019fb4
   140011b4a:	lea    rdx,[rip+0x2dfef]        # 0x14003fb40
   140011b51:	lea    rcx,[rsp+0x30]
   140011b56:	call   0x14001a628
   140011b5b:	int3   
   140011b5c:	mov    rbx,QWORD PTR [rsp+0x20]
   140011b61:	mov    QWORD PTR [rip+0x32ff8],rbx        # 0x140044b60
   140011b68:	mov    rdx,QWORD PTR [rbx]
   140011b6b:	mov    rcx,rbx
   140011b6e:	call   QWORD PTR [rdx+0x8]
   140011b71:	mov    rcx,rbx
   140011b74:	call   0x14001432c
   140011b79:	nop
   140011b7a:	lea    rcx,[rsp+0x4c]
   140011b7f:	call   0x1400146d8
   140011b84:	mov    rax,rbx
   140011b87:	mov    rcx,QWORD PTR [rsp+0x50]
   140011b8c:	xor    rcx,rsp
   140011b8f:	call   0x1400187d0
   140011b94:	lea    r11,[rsp+0x60]
   140011b99:	mov    rbx,QWORD PTR [r11+0x18]
   140011b9d:	mov    rsi,QWORD PTR [r11+0x20]
   140011ba1:	mov    rdi,QWORD PTR [r11+0x28]
   140011ba5:	mov    rsp,r11
   140011ba8:	pop    r14
   140011baa:	ret    
   140011bab:	int3   
   140011bac:	int3   
   140011bad:	int3   
   140011bae:	int3   
   140011baf:	int3   
   140011bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140011bb5:	mov    QWORD PTR [rsp+0x10],rsi
   140011bba:	push   rdi
   140011bbb:	sub    rsp,0x20
   140011bbf:	mov    rdi,QWORD PTR [rcx+0x60]
   140011bc3:	lea    rax,[rip+0x27e4e]        # 0x140039a18
   140011bca:	mov    esi,edx
   140011bcc:	mov    rbx,rcx
   140011bcf:	mov    QWORD PTR [rcx],rax
   140011bd2:	test   rdi,rdi
   140011bd5:	je     0x140011c00
   140011bd7:	mov    rcx,QWORD PTR [rdi]
   140011bda:	test   rcx,rcx
   140011bdd:	je     0x140011bf8
   140011bdf:	mov    rax,QWORD PTR [rcx]
   140011be2:	call   QWORD PTR [rax+0x10]
   140011be5:	test   rax,rax
   140011be8:	je     0x140011bf8
   140011bea:	mov    r8,QWORD PTR [rax]
   140011bed:	mov    edx,0x1
   140011bf2:	mov    rcx,rax
   140011bf5:	call   QWORD PTR [r8]
   140011bf8:	mov    rcx,rdi
   140011bfb:	call   0x140018a04
   140011c00:	test   sil,0x1
   140011c04:	je     0x140011c0e
   140011c06:	mov    rcx,rbx
   140011c09:	call   0x140018a04
   140011c0e:	mov    rsi,QWORD PTR [rsp+0x38]
   140011c13:	mov    rax,rbx
   140011c16:	mov    rbx,QWORD PTR [rsp+0x30]
   140011c1b:	add    rsp,0x20
   140011c1f:	pop    rdi
   140011c20:	ret    
   140011c21:	int3   
   140011c22:	int3   
   140011c23:	int3   
   140011c24:	int3   
   140011c25:	int3   
   140011c26:	int3   
   140011c27:	int3   
   140011c28:	int3   
   140011c29:	int3   
   140011c2a:	int3   
   140011c2b:	int3   
   140011c2c:	int3   
   140011c2d:	int3   
   140011c2e:	int3   
   140011c2f:	int3   
   140011c30:	mov    eax,0xffff
   140011c35:	ret    
   140011c36:	int3   
   140011c37:	int3   
   140011c38:	int3   
   140011c39:	int3   
   140011c3a:	int3   
   140011c3b:	int3   
   140011c3c:	int3   
   140011c3d:	int3   
   140011c3e:	int3   
   140011c3f:	int3   
   140011c40:	xor    eax,eax
   140011c42:	ret    
   140011c43:	int3   
   140011c44:	int3   
   140011c45:	int3   
   140011c46:	int3   
   140011c47:	int3   
   140011c48:	int3   
   140011c49:	int3   
   140011c4a:	int3   
   140011c4b:	int3   
   140011c4c:	int3   
   140011c4d:	int3   
   140011c4e:	int3   
   140011c4f:	int3   
   140011c50:	mov    QWORD PTR [rsp+0x18],rbp
   140011c55:	push   rsi
   140011c56:	push   rdi
   140011c57:	push   r14
   140011c59:	sub    rsp,0x20
   140011c5d:	xor    ebp,ebp
   140011c5f:	mov    rdi,r8
   140011c62:	mov    rsi,rdx
   140011c65:	mov    r14,rcx
   140011c68:	test   r8,r8
   140011c6b:	jle    0x140011d0b
   140011c71:	mov    QWORD PTR [rsp+0x40],rbx
   140011c76:	mov    QWORD PTR [rsp+0x48],r15
   140011c7b:	mov    r15d,0xffff
   140011c81:	mov    rcx,r14
   140011c84:	call   0x140012af0
   140011c89:	mov    rbx,rax
   140011c8c:	test   rax,rax
   140011c8f:	jle    0x140011ccf
   140011c91:	cmp    rdi,rax
   140011c94:	cmovl  rbx,rdi
   140011c98:	test   rbx,rbx
   140011c9b:	je     0x140011cb0
   140011c9d:	mov    rdx,QWORD PTR [r14+0x38]
   140011ca1:	lea    r8,[rbx+rbx*1]
   140011ca5:	mov    rcx,rsi
   140011ca8:	mov    rdx,QWORD PTR [rdx]
   140011cab:	call   0x140018a90
   140011cb0:	mov    rax,QWORD PTR [r14+0x50]
   140011cb4:	add    rbp,rbx
   140011cb7:	sub    rdi,rbx
   140011cba:	sub    DWORD PTR [rax],ebx
   140011cbc:	mov    rcx,QWORD PTR [r14+0x38]
   140011cc0:	movsxd rax,ebx
   140011cc3:	add    rax,rax
   140011cc6:	lea    rsi,[rsi+rbx*2]
   140011cca:	add    QWORD PTR [rcx],rax
   140011ccd:	jmp    0x140011ceb
   140011ccf:	mov    rax,QWORD PTR [r14]
   140011cd2:	mov    rcx,r14
   140011cd5:	call   QWORD PTR [rax+0x38]
   140011cd8:	cmp    r15w,ax
   140011cdc:	je     0x140011cf0
   140011cde:	mov    WORD PTR [rsi],ax
   140011ce1:	add    rsi,0x2
   140011ce5:	inc    rbp
   140011ce8:	dec    rdi
   140011ceb:	test   rdi,rdi
   140011cee:	jg     0x140011c81
   140011cf0:	mov    rbx,QWORD PTR [rsp+0x40]
   140011cf5:	mov    r15,QWORD PTR [rsp+0x48]
   140011cfa:	mov    rax,rbp
   140011cfd:	mov    rbp,QWORD PTR [rsp+0x50]
   140011d02:	add    rsp,0x20
   140011d06:	pop    r14
   140011d08:	pop    rdi
   140011d09:	pop    rsi
   140011d0a:	ret    
   140011d0b:	mov    rax,rbp
   140011d0e:	mov    rbp,QWORD PTR [rsp+0x50]
   140011d13:	add    rsp,0x20
   140011d17:	pop    r14
   140011d19:	pop    rdi
   140011d1a:	pop    rsi
   140011d1b:	ret    
   140011d1c:	int3   
   140011d1d:	int3   
   140011d1e:	int3   
   140011d1f:	int3   
   140011d20:	mov    rax,QWORD PTR [rcx+0x40]
   140011d24:	cmp    QWORD PTR [rax],0x0
   140011d28:	je     0x140011d32
   140011d2a:	mov    rax,QWORD PTR [rcx+0x58]
   140011d2e:	movsxd rax,DWORD PTR [rax]
   140011d31:	ret    
   140011d32:	xor    eax,eax
   140011d34:	cdqe   
   140011d36:	ret    
   140011d37:	int3   
   140011d38:	int3   
   140011d39:	int3   
   140011d3a:	int3   
   140011d3b:	int3   
   140011d3c:	int3   
   140011d3d:	int3   
   140011d3e:	int3   
   140011d3f:	int3   
   140011d40:	mov    QWORD PTR [rsp+0x18],rbp
   140011d45:	push   rsi
   140011d46:	push   rdi
   140011d47:	push   r14
   140011d49:	sub    rsp,0x20
   140011d4d:	xor    ebp,ebp
   140011d4f:	mov    rdi,r8
   140011d52:	mov    rsi,rdx
   140011d55:	mov    r14,rcx
   140011d58:	test   r8,r8
   140011d5b:	jle    0x140011dfc
   140011d61:	mov    QWORD PTR [rsp+0x40],rbx
   140011d66:	mov    QWORD PTR [rsp+0x48],r15
   140011d6b:	mov    r15d,0xffff
   140011d71:	mov    rcx,r14
   140011d74:	call   0x140011d20
   140011d79:	mov    rbx,rax
   140011d7c:	test   rax,rax
   140011d7f:	jle    0x140011dbf
   140011d81:	cmp    rdi,rax
   140011d84:	cmovl  rbx,rdi
   140011d88:	test   rbx,rbx
   140011d8b:	je     0x140011da0
   140011d8d:	mov    rcx,QWORD PTR [r14+0x40]
   140011d91:	lea    r8,[rbx+rbx*1]
   140011d95:	mov    rdx,rsi
   140011d98:	mov    rcx,QWORD PTR [rcx]
   140011d9b:	call   0x140018a90
   140011da0:	mov    rax,QWORD PTR [r14+0x58]
   140011da4:	add    rbp,rbx
   140011da7:	sub    rdi,rbx
   140011daa:	sub    DWORD PTR [rax],ebx
   140011dac:	mov    rcx,QWORD PTR [r14+0x40]
   140011db0:	movsxd rax,ebx
   140011db3:	add    rax,rax
   140011db6:	lea    rsi,[rsi+rbx*2]
   140011dba:	add    QWORD PTR [rcx],rax
   140011dbd:	jmp    0x140011ddc
   140011dbf:	mov    r8,QWORD PTR [r14]
   140011dc2:	movzx  edx,WORD PTR [rsi]
   140011dc5:	mov    rcx,r14
   140011dc8:	call   QWORD PTR [r8+0x18]
   140011dcc:	cmp    r15w,ax
   140011dd0:	je     0x140011de1
   140011dd2:	add    rsi,0x2
   140011dd6:	inc    rbp
   140011dd9:	dec    rdi
   140011ddc:	test   rdi,rdi
   140011ddf:	jg     0x140011d71
   140011de1:	mov    rbx,QWORD PTR [rsp+0x40]
   140011de6:	mov    r15,QWORD PTR [rsp+0x48]
   140011deb:	mov    rax,rbp
   140011dee:	mov    rbp,QWORD PTR [rsp+0x50]
   140011df3:	add    rsp,0x20
   140011df7:	pop    r14
   140011df9:	pop    rdi
   140011dfa:	pop    rsi
   140011dfb:	ret    
   140011dfc:	mov    rax,rbp
   140011dff:	mov    rbp,QWORD PTR [rsp+0x50]
   140011e04:	add    rsp,0x20
   140011e08:	pop    r14
   140011e0a:	pop    rdi
   140011e0b:	pop    rsi
   140011e0c:	ret    
   140011e0d:	int3   
   140011e0e:	int3   
   140011e0f:	int3   
   140011e10:	mov    rax,QWORD PTR [rip+0x1d8a1]        # 0x14002f6b8
   140011e17:	mov    QWORD PTR [rdx],rax
   140011e1a:	xor    eax,eax
   140011e1c:	mov    QWORD PTR [rdx+0x8],rax
   140011e20:	mov    DWORD PTR [rdx+0x10],eax
   140011e23:	mov    rax,rdx
   140011e26:	ret    
   140011e27:	int3   
   140011e28:	int3   
   140011e29:	int3   
   140011e2a:	int3   
   140011e2b:	int3   
   140011e2c:	int3   
   140011e2d:	int3   
   140011e2e:	int3   
   140011e2f:	int3   
   140011e30:	rex push rbx
   140011e32:	sub    rsp,0x20
   140011e36:	mov    rbx,QWORD PTR [rcx+0x60]
   140011e3a:	lea    rax,[rip+0x27bd7]        # 0x140039a18
   140011e41:	mov    QWORD PTR [rcx],rax
   140011e44:	test   rbx,rbx
   140011e47:	je     0x140011e77
   140011e49:	mov    rcx,QWORD PTR [rbx]
   140011e4c:	test   rcx,rcx
   140011e4f:	je     0x140011e6a
   140011e51:	mov    rax,QWORD PTR [rcx]
   140011e54:	call   QWORD PTR [rax+0x10]
   140011e57:	test   rax,rax
   140011e5a:	je     0x140011e6a
   140011e5c:	mov    r8,QWORD PTR [rax]
   140011e5f:	mov    edx,0x1
   140011e64:	mov    rcx,rax
   140011e67:	call   QWORD PTR [r8]
   140011e6a:	mov    rcx,rbx
   140011e6d:	add    rsp,0x20
   140011e71:	pop    rbx
   140011e72:	jmp    0x140018a04
   140011e77:	add    rsp,0x20
   140011e7b:	pop    rbx
   140011e7c:	ret    
   140011e7d:	int3   
   140011e7e:	int3   
   140011e7f:	int3   
   140011e80:	mov    QWORD PTR [rsp+0x8],rbx
   140011e85:	push   rdi
   140011e86:	sub    rsp,0x20
   140011e8a:	lea    rdi,[rcx-0x10]
   140011e8e:	mov    ebx,edx
   140011e90:	mov    rax,QWORD PTR [rdi]
   140011e93:	lea    rcx,[rdi+0x10]
   140011e97:	movsxd r8,DWORD PTR [rax+0x4]
   140011e9b:	lea    rax,[rip+0x27c76]        # 0x140039b18
   140011ea2:	mov    QWORD PTR [r8+rcx*1-0x10],rax
   140011ea7:	mov    rax,QWORD PTR [rcx-0x10]
   140011eab:	movsxd r8,DWORD PTR [rax+0x4]
   140011eaf:	lea    rax,[rip+0x27dc2]        # 0x140039c78
   140011eb6:	lea    r9d,[r8-0x10]
   140011eba:	mov    DWORD PTR [r8+rcx*1-0x14],r9d
   140011ebf:	mov    QWORD PTR [rcx],rax
   140011ec2:	call   0x1400140d4
   140011ec7:	test   bl,0x1
   140011eca:	je     0x140011ed4
   140011ecc:	mov    rcx,rdi
   140011ecf:	call   0x140018a04
   140011ed4:	mov    rax,rdi
   140011ed7:	mov    rbx,QWORD PTR [rsp+0x30]
   140011edc:	add    rsp,0x20
   140011ee0:	pop    rdi
   140011ee1:	ret    
   140011ee2:	int3   
   140011ee3:	int3   
   140011ee4:	movsxd rax,DWORD PTR [rcx-0x4]
   140011ee8:	sub    rcx,rax
   140011eeb:	jmp    0x140011e80
   140011ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140011ef5:	push   rdi
   140011ef6:	sub    rsp,0x20
   140011efa:	lea    rdi,[rcx-0x18]
   140011efe:	mov    ebx,edx
   140011f00:	mov    rax,QWORD PTR [rdi]
   140011f03:	lea    rcx,[rdi+0x18]
   140011f07:	movsxd r8,DWORD PTR [rax+0x4]
   140011f0b:	lea    rax,[rip+0x27c16]        # 0x140039b28
   140011f12:	mov    QWORD PTR [r8+rcx*1-0x18],rax
   140011f17:	mov    rax,QWORD PTR [rcx-0x18]
   140011f1b:	movsxd r8,DWORD PTR [rax+0x4]
   140011f1f:	lea    rax,[rip+0x27d52]        # 0x140039c78
   140011f26:	lea    r9d,[r8-0x18]
   140011f2a:	mov    DWORD PTR [r8+rcx*1-0x1c],r9d
   140011f2f:	mov    QWORD PTR [rcx],rax
   140011f32:	call   0x1400140d4
   140011f37:	test   bl,0x1
   140011f3a:	je     0x140011f44
   140011f3c:	mov    rcx,rdi
   140011f3f:	call   0x140018a04
   140011f44:	mov    rax,rdi
   140011f47:	mov    rbx,QWORD PTR [rsp+0x30]
   140011f4c:	add    rsp,0x20
   140011f50:	pop    rdi
   140011f51:	ret    
   140011f52:	int3   
   140011f53:	int3   
   140011f54:	movsxd rax,DWORD PTR [rcx-0x4]
   140011f58:	sub    rcx,rax
   140011f5b:	jmp    0x140011ef0
   140011f60:	mov    rax,QWORD PTR [rcx-0x18]
   140011f64:	movsxd rdx,DWORD PTR [rax+0x4]
   140011f68:	lea    rax,[rip+0x27bb9]        # 0x140039b28
   140011f6f:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   140011f74:	mov    rax,QWORD PTR [rcx-0x18]
   140011f78:	movsxd rdx,DWORD PTR [rax+0x4]
   140011f7c:	lea    r8d,[rdx-0x18]
   140011f80:	mov    DWORD PTR [rdx+rcx*1-0x1c],r8d
   140011f85:	ret    
   140011f86:	int3   
   140011f87:	int3   
   140011f88:	int3   
   140011f89:	int3   
   140011f8a:	int3   
   140011f8b:	int3   
   140011f8c:	int3   
   140011f8d:	int3   
   140011f8e:	int3   
   140011f8f:	int3   
   140011f90:	mov    rdx,QWORD PTR [rcx]
   140011f93:	mov    rax,QWORD PTR [rdx]
   140011f96:	movsxd rcx,DWORD PTR [rax+0x4]
   140011f9a:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140011f9f:	test   rcx,rcx
   140011fa2:	je     0x140011fab
   140011fa4:	mov    rax,QWORD PTR [rcx]
   140011fa7:	rex.W jmp QWORD PTR [rax+0x10]
   140011fab:	ret    
   140011fac:	int3   
   140011fad:	int3   
   140011fae:	int3   
   140011faf:	int3   
   140011fb0:	rex push rbx
   140011fb2:	sub    rsp,0x30
   140011fb6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011fbf:	mov    rbx,rcx
   140011fc2:	mov    rax,QWORD PTR [rcx]
   140011fc5:	movsxd rdx,DWORD PTR [rax+0x4]
   140011fc9:	cmp    DWORD PTR [rdx+rcx*1+0x10],0x0
   140011fce:	jne    0x14001200a
   140011fd0:	test   BYTE PTR [rdx+rcx*1+0x18],0x2
   140011fd5:	je     0x14001200a
   140011fd7:	mov    rcx,QWORD PTR [rdx+rcx*1+0x48]
   140011fdc:	mov    rax,QWORD PTR [rcx]
   140011fdf:	call   QWORD PTR [rax+0x68]
   140011fe2:	cmp    eax,0xffffffff
   140011fe5:	jne    0x14001200a
   140011fe7:	mov    rax,QWORD PTR [rbx]
   140011fea:	movsxd rcx,DWORD PTR [rax+0x4]
   140011fee:	add    rcx,rbx
   140011ff1:	mov    edx,DWORD PTR [rcx+0x10]
   140011ff4:	or     edx,0x4
   140011ff7:	cmp    QWORD PTR [rcx+0x48],0x0
   140011ffc:	jne    0x140012001
   140011ffe:	or     edx,0x4
   140012001:	xor    r8d,r8d
   140012004:	call   0x1400130b0
   140012009:	nop
   14001200a:	add    rsp,0x30
   14001200e:	pop    rbx
   14001200f:	ret    
   140012010:	rex push rbx
   140012012:	sub    rsp,0x20
   140012016:	mov    rbx,rcx
   140012019:	call   0x140014b58
   14001201e:	test   al,al
   140012020:	jne    0x14001202a
   140012022:	mov    rcx,QWORD PTR [rbx]
   140012025:	call   0x140011fb0
   14001202a:	mov    rdx,QWORD PTR [rbx]
   14001202d:	mov    rax,QWORD PTR [rdx]
   140012030:	movsxd rcx,DWORD PTR [rax+0x4]
   140012034:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140012039:	test   rcx,rcx
   14001203c:	je     0x14001204a
   14001203e:	mov    rax,QWORD PTR [rcx]
   140012041:	add    rsp,0x20
   140012045:	pop    rbx
   140012046:	rex.W jmp QWORD PTR [rax+0x10]
   14001204a:	add    rsp,0x20
   14001204e:	pop    rbx
   14001204f:	ret    
   140012050:	rex push rbx
   140012052:	sub    rsp,0x40
   140012056:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001205f:	mov    rbx,rcx
   140012062:	mov    rax,QWORD PTR [rcx]
   140012065:	movsxd rdx,DWORD PTR [rax+0x4]
   140012069:	mov    rcx,QWORD PTR [rdx+rcx*1+0x48]
   14001206e:	test   rcx,rcx
   140012071:	je     0x140012117
   140012077:	mov    QWORD PTR [rsp+0x28],rbx
   14001207c:	mov    rax,QWORD PTR [rcx]
   14001207f:	call   QWORD PTR [rax+0x8]
   140012082:	nop
   140012083:	mov    rax,QWORD PTR [rbx]
   140012086:	movsxd rcx,DWORD PTR [rax+0x4]
   14001208a:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   14001208f:	jne    0x1400120a5
   140012091:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   140012096:	test   rcx,rcx
   140012099:	je     0x1400120a5
   14001209b:	cmp    rcx,rbx
   14001209e:	je     0x1400120a5
   1400120a0:	call   0x140012050
   1400120a5:	mov    rax,QWORD PTR [rbx]
   1400120a8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400120ac:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   1400120b1:	sete   al
   1400120b4:	mov    BYTE PTR [rsp+0x30],al
   1400120b8:	test   al,al
   1400120ba:	je     0x1400120ef
   1400120bc:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   1400120c1:	mov    rax,QWORD PTR [rcx]
   1400120c4:	call   QWORD PTR [rax+0x68]
   1400120c7:	cmp    eax,0xffffffff
   1400120ca:	jne    0x1400120ef
   1400120cc:	mov    rax,QWORD PTR [rbx]
   1400120cf:	movsxd rcx,DWORD PTR [rax+0x4]
   1400120d3:	add    rcx,rbx
   1400120d6:	mov    edx,DWORD PTR [rcx+0x10]
   1400120d9:	or     edx,0x4
   1400120dc:	cmp    QWORD PTR [rcx+0x48],0x0
   1400120e1:	jne    0x1400120e6
   1400120e3:	or     edx,0x4
   1400120e6:	xor    r8d,r8d
   1400120e9:	call   0x1400130b0
   1400120ee:	nop
   1400120ef:	call   0x140014b58
   1400120f4:	test   al,al
   1400120f6:	jne    0x140012100
   1400120f8:	mov    rcx,rbx
   1400120fb:	call   0x140011fb0
   140012100:	mov    rax,QWORD PTR [rbx]
   140012103:	movsxd rcx,DWORD PTR [rax+0x4]
   140012107:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   14001210c:	test   rcx,rcx
   14001210f:	je     0x140012117
   140012111:	mov    rax,QWORD PTR [rcx]
   140012114:	call   QWORD PTR [rax+0x10]
   140012117:	mov    rax,rbx
   14001211a:	add    rsp,0x40
   14001211e:	pop    rbx
   14001211f:	ret    
   140012120:	lea    rax,[rip+0x1e8e1]        # 0x140030a08
   140012127:	mov    QWORD PTR [rcx],rax
   14001212a:	ret    
   14001212b:	int3   
   14001212c:	int3   
   14001212d:	int3   
   14001212e:	int3   
   14001212f:	int3   
   140012130:	mov    QWORD PTR [rsp+0x8],rbx
   140012135:	push   rdi
   140012136:	sub    rsp,0x20
   14001213a:	cmp    DWORD PTR [rcx+0x20],0x0
   14001213e:	lea    rax,[rip+0x1ea7b]        # 0x140030bc0
   140012145:	mov    edi,edx
   140012147:	mov    QWORD PTR [rcx],rax
   14001214a:	mov    rbx,rcx
   14001214d:	je     0x140012158
   14001214f:	mov    rcx,QWORD PTR [rcx+0x18]
   140012153:	call   0x14001a1ac
   140012158:	mov    rcx,QWORD PTR [rbx+0x28]
   14001215c:	call   0x14001a1ac
   140012161:	lea    rax,[rip+0x1e8a0]        # 0x140030a08
   140012168:	mov    QWORD PTR [rbx],rax
   14001216b:	test   dil,0x1
   14001216f:	je     0x140012179
   140012171:	mov    rcx,rbx
   140012174:	call   0x140018a04
   140012179:	mov    rax,rbx
   14001217c:	mov    rbx,QWORD PTR [rsp+0x30]
   140012181:	add    rsp,0x20
   140012185:	pop    rdi
   140012186:	ret    
   140012187:	int3   
   140012188:	int3   
   140012189:	int3   
   14001218a:	int3   
   14001218b:	int3   
   14001218c:	int3   
   14001218d:	int3   
   14001218e:	int3   
   14001218f:	int3   
   140012190:	mov    rax,r9
   140012193:	mov    r10,r8
   140012196:	mov    r11,rdx
   140012199:	lea    r9,[rcx+0x10]
   14001219d:	mov    r8,rax
   1400121a0:	mov    rdx,r10
   1400121a3:	mov    rcx,r11
   1400121a6:	jmp    0x14001422c
   1400121ab:	int3   
   1400121ac:	int3   
   1400121ad:	int3   
   1400121ae:	int3   
   1400121af:	int3   
   1400121b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400121b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400121ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400121bf:	push   rdi
   1400121c0:	sub    rsp,0x20
   1400121c4:	mov    rdi,r9
   1400121c7:	mov    rbx,r8
   1400121ca:	movzx  ebp,dx
   1400121cd:	mov    rsi,rcx
   1400121d0:	cmp    r8,r9
   1400121d3:	je     0x1400121fd
   1400121d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400121e0:	mov    rax,QWORD PTR [rsi]
   1400121e3:	movzx  r8d,WORD PTR [rbx]
   1400121e7:	movzx  edx,bp
   1400121ea:	mov    rcx,rsi
   1400121ed:	call   QWORD PTR [rax+0x20]
   1400121f0:	test   al,al
   1400121f2:	jne    0x1400121fd
   1400121f4:	add    rbx,0x2
   1400121f8:	cmp    rbx,rdi
   1400121fb:	jne    0x1400121e0
   1400121fd:	mov    rbp,QWORD PTR [rsp+0x38]
   140012202:	mov    rsi,QWORD PTR [rsp+0x40]
   140012207:	mov    rax,rbx
   14001220a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001220f:	add    rsp,0x20
   140012213:	pop    rdi
   140012214:	ret    
   140012215:	int3   
   140012216:	int3   
   140012217:	int3   
   140012218:	int3   
   140012219:	int3   
   14001221a:	int3   
   14001221b:	int3   
   14001221c:	int3   
   14001221d:	int3   
   14001221e:	int3   
   14001221f:	int3   
   140012220:	mov    QWORD PTR [rsp+0x8],rbx
   140012225:	mov    QWORD PTR [rsp+0x10],rbp
   14001222a:	mov    QWORD PTR [rsp+0x18],rsi
   14001222f:	push   rdi
   140012230:	sub    rsp,0x20
   140012234:	mov    rdi,r9
   140012237:	mov    rbx,r8
   14001223a:	movzx  ebp,dx
   14001223d:	mov    rsi,rcx
   140012240:	cmp    r8,r9
   140012243:	je     0x14001226d
   140012245:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140012250:	mov    rax,QWORD PTR [rsi]
   140012253:	movzx  r8d,WORD PTR [rbx]
   140012257:	movzx  edx,bp
   14001225a:	mov    rcx,rsi
   14001225d:	call   QWORD PTR [rax+0x20]
   140012260:	test   al,al
   140012262:	je     0x14001226d
   140012264:	add    rbx,0x2
   140012268:	cmp    rbx,rdi
   14001226b:	jne    0x140012250
   14001226d:	mov    rbp,QWORD PTR [rsp+0x38]
   140012272:	mov    rsi,QWORD PTR [rsp+0x40]
   140012277:	mov    rax,rbx
   14001227a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001227f:	add    rsp,0x20
   140012283:	pop    rdi
   140012284:	ret    
   140012285:	int3   
   140012286:	int3   
   140012287:	int3   
   140012288:	int3   
   140012289:	int3   
   14001228a:	int3   
   14001228b:	int3   
   14001228c:	int3   
   14001228d:	int3   
   14001228e:	int3   
   14001228f:	int3   
   140012290:	mov    QWORD PTR [rsp+0x10],rbx
   140012295:	mov    QWORD PTR [rsp+0x18],rsi
   14001229a:	push   rdi
   14001229b:	sub    rsp,0x20
   14001229f:	xor    edi,edi
   1400122a1:	mov    rsi,r8
   1400122a4:	mov    rbx,rdx
   1400122a7:	sub    rsi,rdx
   1400122aa:	inc    rsi
   1400122ad:	shr    rsi,1
   1400122b0:	cmp    rdx,r8
   1400122b3:	cmova  rsi,rdi
   1400122b7:	test   rsi,rsi
   1400122ba:	je     0x1400122e5
   1400122bc:	mov    QWORD PTR [rsp+0x30],rbp
   1400122c1:	lea    rbp,[rcx+0x10]
   1400122c5:	movzx  ecx,WORD PTR [rbx]
   1400122c8:	mov    rdx,rbp
   1400122cb:	call   0x140014ae4
   1400122d0:	inc    rdi
   1400122d3:	add    rbx,0x2
   1400122d7:	mov    WORD PTR [rbx-0x2],ax
   1400122db:	cmp    rdi,rsi
   1400122de:	jne    0x1400122c5
   1400122e0:	mov    rbp,QWORD PTR [rsp+0x30]
   1400122e5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400122ea:	mov    rax,rbx
   1400122ed:	mov    rbx,QWORD PTR [rsp+0x38]
   1400122f2:	add    rsp,0x20
   1400122f6:	pop    rdi
   1400122f7:	ret    
   1400122f8:	int3   
   1400122f9:	int3   
   1400122fa:	int3   
   1400122fb:	int3   
   1400122fc:	int3   
   1400122fd:	int3   
   1400122fe:	int3   
   1400122ff:	int3   
   140012300:	movzx  eax,dx
   140012303:	lea    rdx,[rcx+0x10]
   140012307:	movzx  ecx,ax
   14001230a:	jmp    0x140014ae4
   14001230f:	int3   
   140012310:	mov    QWORD PTR [rsp+0x10],rbx
   140012315:	mov    QWORD PTR [rsp+0x18],rsi
   14001231a:	push   rdi
   14001231b:	sub    rsp,0x20
   14001231f:	xor    edi,edi
   140012321:	mov    rsi,r8
   140012324:	mov    rbx,rdx
   140012327:	sub    rsi,rdx
   14001232a:	inc    rsi
   14001232d:	shr    rsi,1
   140012330:	cmp    rdx,r8
   140012333:	cmova  rsi,rdi
   140012337:	test   rsi,rsi
   14001233a:	je     0x140012365
   14001233c:	mov    QWORD PTR [rsp+0x30],rbp
   140012341:	lea    rbp,[rcx+0x10]
   140012345:	movzx  ecx,WORD PTR [rbx]
   140012348:	mov    rdx,rbp
   14001234b:	call   0x140014a6c
   140012350:	inc    rdi
   140012353:	add    rbx,0x2
   140012357:	mov    WORD PTR [rbx-0x2],ax
   14001235b:	cmp    rdi,rsi
   14001235e:	jne    0x140012345
   140012360:	mov    rbp,QWORD PTR [rsp+0x30]
   140012365:	mov    rsi,QWORD PTR [rsp+0x40]
   14001236a:	mov    rax,rbx
   14001236d:	mov    rbx,QWORD PTR [rsp+0x38]
   140012372:	add    rsp,0x20
   140012376:	pop    rdi
   140012377:	ret    
   140012378:	int3   
   140012379:	int3   
   14001237a:	int3   
   14001237b:	int3   
   14001237c:	int3   
   14001237d:	int3   
   14001237e:	int3   
   14001237f:	int3   
   140012380:	movzx  eax,dx
   140012383:	lea    rdx,[rcx+0x10]
   140012387:	movzx  ecx,ax
   14001238a:	jmp    0x140014a6c
   14001238f:	int3   
   140012390:	rex push rbx
   140012392:	push   rbp
   140012393:	push   rsi
   140012394:	push   rdi
   140012395:	push   r12
   140012397:	sub    rsp,0x60
   14001239b:	mov    rax,QWORD PTR [rip+0x2f2ae]        # 0x140041650
   1400123a2:	xor    rax,rsp
   1400123a5:	mov    QWORD PTR [rsp+0x40],rax
   1400123aa:	xor    r12d,r12d
   1400123ad:	mov    rbp,r8
   1400123b0:	mov    rdi,r9
   1400123b3:	sub    rbp,rdx
   1400123b6:	cmp    rdx,r8
   1400123b9:	mov    rbx,rdx
   1400123bc:	cmova  rbp,r12
   1400123c0:	mov    esi,r12d
   1400123c3:	test   rbp,rbp
   1400123c6:	je     0x140012434
   1400123c8:	mov    QWORD PTR [rsp+0x58],r14
   1400123cd:	mov    QWORD PTR [rsp+0x50],r15
   1400123d2:	mov    r15d,0xffff
   1400123d8:	lea    r14,[rcx+0x30]
   1400123dc:	nop    DWORD PTR [rax+0x0]
   1400123e0:	movzx  eax,BYTE PTR [rbx]
   1400123e3:	lea    r9,[rsp+0x3c]
   1400123e8:	lea    rdx,[rsp+0x30]
   1400123ed:	lea    rcx,[rsp+0x38]
   1400123f2:	mov    r8d,0x1
   1400123f8:	mov    DWORD PTR [rsp+0x3c],r12d
   1400123fd:	mov    BYTE PTR [rsp+0x30],al
   140012401:	mov    QWORD PTR [rsp+0x20],r14
   140012406:	call   0x140014898
   14001240b:	movzx  ecx,WORD PTR [rsp+0x38]
   140012410:	test   eax,eax
   140012412:	lea    rdi,[rdi+0x2]
   140012416:	cmovs  cx,r15w
   14001241b:	inc    rsi
   14001241e:	inc    rbx
   140012421:	mov    WORD PTR [rdi-0x2],cx
   140012425:	cmp    rsi,rbp
   140012428:	jne    0x1400123e0
   14001242a:	mov    r15,QWORD PTR [rsp+0x50]
   14001242f:	mov    r14,QWORD PTR [rsp+0x58]
   140012434:	mov    rax,rbx
   140012437:	mov    rcx,QWORD PTR [rsp+0x40]
   14001243c:	xor    rcx,rsp
   14001243f:	call   0x1400187d0
   140012444:	add    rsp,0x60
   140012448:	pop    r12
   14001244a:	pop    rdi
   14001244b:	pop    rsi
   14001244c:	pop    rbp
   14001244d:	pop    rbx
   14001244e:	ret    
   14001244f:	int3   
   140012450:	sub    rsp,0x58
   140012454:	mov    rax,QWORD PTR [rip+0x2f1f5]        # 0x140041650
   14001245b:	xor    rax,rsp
   14001245e:	mov    QWORD PTR [rsp+0x40],rax
   140012463:	lea    rax,[rcx+0x30]
   140012467:	mov    BYTE PTR [rsp+0x30],dl
   14001246b:	lea    r9,[rsp+0x3c]
   140012470:	lea    rdx,[rsp+0x30]
   140012475:	lea    rcx,[rsp+0x38]
   14001247a:	mov    r8d,0x1
   140012480:	mov    QWORD PTR [rsp+0x20],rax
   140012485:	mov    DWORD PTR [rsp+0x3c],0x0
   14001248d:	call   0x140014898
   140012492:	movzx  ecx,WORD PTR [rsp+0x38]
   140012497:	test   eax,eax
   140012499:	mov    edx,0xffff
   14001249e:	cmovs  cx,dx
   1400124a2:	movzx  eax,cx
   1400124a5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400124aa:	xor    rcx,rsp
   1400124ad:	call   0x1400187d0
   1400124b2:	add    rsp,0x58
   1400124b6:	ret    
   1400124b7:	int3   
   1400124b8:	int3   
   1400124b9:	int3   
   1400124ba:	int3   
   1400124bb:	int3   
   1400124bc:	int3   
   1400124bd:	int3   
   1400124be:	int3   
   1400124bf:	int3   
   1400124c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400124c5:	push   rbp
   1400124c6:	push   rsi
   1400124c7:	push   rdi
   1400124c8:	push   r12
   1400124ca:	push   r15
   1400124cc:	sub    rsp,0x40
   1400124d0:	mov    rax,QWORD PTR [rip+0x2f179]        # 0x140041650
   1400124d7:	xor    rax,rsp
   1400124da:	mov    QWORD PTR [rsp+0x30],rax
   1400124df:	mov    rdi,QWORD PTR [rsp+0x90]
   1400124e7:	xor    r12d,r12d
   1400124ea:	mov    rbp,r8
   1400124ed:	sub    rbp,rdx
   1400124f0:	movzx  r15d,r9b
   1400124f4:	mov    rbx,rdx
   1400124f7:	inc    rbp
   1400124fa:	mov    esi,r12d
   1400124fd:	shr    rbp,1
   140012500:	cmp    rdx,r8
   140012503:	cmova  rbp,r12
   140012507:	test   rbp,rbp
   14001250a:	je     0x140012564
   14001250c:	mov    QWORD PTR [rsp+0x80],r14
   140012514:	lea    r14,[rcx+0x30]
   140012518:	nop    DWORD PTR [rax+rax*1+0x0]
   140012520:	movzx  edx,WORD PTR [rbx]
   140012523:	lea    r8,[rsp+0x20]
   140012528:	lea    rcx,[rsp+0x24]
   14001252d:	mov    r9,r14
   140012530:	mov    DWORD PTR [rsp+0x20],r12d
   140012535:	call   0x1400147a0
   14001253a:	movzx  edx,BYTE PTR [rsp+0x24]
   14001253f:	movzx  ecx,r15b
   140012543:	cmp    eax,0x1
   140012546:	lea    rdi,[rdi+0x1]
   14001254a:	cmovne edx,ecx
   14001254d:	inc    rsi
   140012550:	add    rbx,0x2
   140012554:	mov    BYTE PTR [rdi-0x1],dl
   140012557:	cmp    rsi,rbp
   14001255a:	jne    0x140012520
   14001255c:	mov    r14,QWORD PTR [rsp+0x80]
   140012564:	mov    rax,rbx
   140012567:	mov    rcx,QWORD PTR [rsp+0x30]
   14001256c:	xor    rcx,rsp
   14001256f:	call   0x1400187d0
   140012574:	mov    rbx,QWORD PTR [rsp+0x88]
   14001257c:	add    rsp,0x40
   140012580:	pop    r15
   140012582:	pop    r12
   140012584:	pop    rdi
   140012585:	pop    rsi
   140012586:	pop    rbp
   140012587:	ret    
   140012588:	int3   
   140012589:	int3   
   14001258a:	int3   
   14001258b:	int3   
   14001258c:	int3   
   14001258d:	int3   
   14001258e:	int3   
   14001258f:	int3   
   140012590:	rex push rbx
   140012592:	sub    rsp,0x40
   140012596:	mov    rax,QWORD PTR [rip+0x2f0b3]        # 0x140041650
   14001259d:	xor    rax,rsp
   1400125a0:	mov    QWORD PTR [rsp+0x30],rax
   1400125a5:	movzx  ebx,r8b
   1400125a9:	lea    r9,[rcx+0x30]
   1400125ad:	lea    r8,[rsp+0x20]
   1400125b2:	lea    rcx,[rsp+0x24]
   1400125b7:	mov    DWORD PTR [rsp+0x20],0x0
   1400125bf:	call   0x1400147a0
   1400125c4:	movzx  edx,BYTE PTR [rsp+0x24]
   1400125c9:	cmp    eax,0x1
   1400125cc:	cmovne edx,ebx
   1400125cf:	movzx  eax,dl
   1400125d2:	mov    rcx,QWORD PTR [rsp+0x30]
   1400125d7:	xor    rcx,rsp
   1400125da:	call   0x1400187d0
   1400125df:	add    rsp,0x40
   1400125e3:	pop    rbx
   1400125e4:	ret    
   1400125e5:	int3   
   1400125e6:	int3   
   1400125e7:	int3   
   1400125e8:	int3   
   1400125e9:	int3   
   1400125ea:	int3   
   1400125eb:	int3   
   1400125ec:	int3   
   1400125ed:	int3   
   1400125ee:	int3   
   1400125ef:	int3   
   1400125f0:	rex push rbx
   1400125f2:	sub    rsp,0x50
   1400125f6:	lea    rax,[rip+0x1e5c3]        # 0x140030bc0
   1400125fd:	mov    rbx,rcx
   140012600:	mov    DWORD PTR [rcx+0x8],r8d
   140012604:	mov    QWORD PTR [rcx],rax
   140012607:	lea    rcx,[rsp+0x20]
   14001260c:	call   0x14001481c
   140012611:	lea    rcx,[rsp+0x20]
   140012616:	movups xmm0,XMMWORD PTR [rax]
   140012619:	movups XMMWORD PTR [rbx+0x10],xmm0
   14001261d:	movups xmm1,XMMWORD PTR [rax+0x10]
   140012621:	movups XMMWORD PTR [rbx+0x20],xmm1
   140012625:	call   0x140014710
   14001262a:	movups xmm0,XMMWORD PTR [rax]
   14001262d:	movups XMMWORD PTR [rbx+0x30],xmm0
   140012631:	movups xmm1,XMMWORD PTR [rax+0x10]
   140012635:	movups XMMWORD PTR [rbx+0x40],xmm1
   140012639:	movsd  xmm0,QWORD PTR [rax+0x20]
   14001263e:	movsd  QWORD PTR [rbx+0x50],xmm0
   140012643:	mov    eax,DWORD PTR [rax+0x28]
   140012646:	mov    DWORD PTR [rbx+0x58],eax
   140012649:	mov    rax,rbx
   14001264c:	add    rsp,0x50
   140012650:	pop    rbx
   140012651:	ret    
   140012652:	int3   
   140012653:	int3   
   140012654:	int3   
   140012655:	int3   
   140012656:	int3   
   140012657:	int3   
   140012658:	int3   
   140012659:	int3   
   14001265a:	int3   
   14001265b:	int3   
   14001265c:	int3   
   14001265d:	int3   
   14001265e:	int3   
   14001265f:	int3   
   140012660:	rex push rdi
   140012662:	sub    rsp,0x60
   140012666:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001266f:	mov    QWORD PTR [rsp+0x80],rbx
   140012677:	mov    rax,QWORD PTR [rip+0x2efd2]        # 0x140041650
   14001267e:	xor    rax,rsp
   140012681:	mov    QWORD PTR [rsp+0x50],rax
   140012686:	mov    rdi,rdx
   140012689:	mov    rbx,rcx
   14001268c:	mov    QWORD PTR [rsp+0x28],rcx
   140012691:	xor    edx,edx
   140012693:	call   0x14001465c
   140012698:	nop
   140012699:	xor    eax,eax
   14001269b:	mov    QWORD PTR [rbx+0x8],rax
   14001269f:	mov    BYTE PTR [rbx+0x10],al
   1400126a2:	mov    QWORD PTR [rbx+0x18],rax
   1400126a6:	mov    BYTE PTR [rbx+0x20],al
   1400126a9:	mov    QWORD PTR [rbx+0x28],rax
   1400126ad:	mov    WORD PTR [rbx+0x30],ax
   1400126b1:	mov    QWORD PTR [rbx+0x38],rax
   1400126b5:	mov    WORD PTR [rbx+0x40],ax
   1400126b9:	mov    QWORD PTR [rbx+0x48],rax
   1400126bd:	mov    BYTE PTR [rbx+0x50],al
   1400126c0:	mov    QWORD PTR [rbx+0x58],rax
   1400126c4:	mov    BYTE PTR [rbx+0x60],al
   1400126c7:	test   rdi,rdi
   1400126ca:	jne    0x140012705
   1400126cc:	lea    rax,[rip+0x2748d]        # 0x140039b60
   1400126d3:	mov    QWORD PTR [rsp+0x48],rax
   1400126d8:	lea    rdx,[rsp+0x48]
   1400126dd:	lea    rcx,[rsp+0x30]
   1400126e2:	call   0x140019fe0
   1400126e7:	lea    rax,[rip+0x1ceda]        # 0x14002f5c8
   1400126ee:	mov    QWORD PTR [rsp+0x30],rax
   1400126f3:	lea    rdx,[rip+0x2d596]        # 0x14003fc90
   1400126fa:	lea    rcx,[rsp+0x30]
   1400126ff:	call   0x14001a628
   140012704:	int3   
   140012705:	mov    rdx,rdi
   140012708:	mov    rcx,rbx
   14001270b:	call   0x140014480
   140012710:	nop
   140012711:	mov    rax,rbx
   140012714:	mov    rcx,QWORD PTR [rsp+0x50]
   140012719:	xor    rcx,rsp
   14001271c:	call   0x1400187d0
   140012721:	mov    rbx,QWORD PTR [rsp+0x80]
   140012729:	add    rsp,0x60
   14001272d:	pop    rdi
   14001272e:	ret    
   14001272f:	int3   
   140012730:	rex push rbx
   140012732:	sub    rsp,0x20
   140012736:	mov    rbx,rcx
   140012739:	mov    rcx,QWORD PTR [rcx]
   14001273c:	test   rcx,rcx
   14001273f:	je     0x140012746
   140012741:	call   0x14001a1ac
   140012746:	mov    QWORD PTR [rbx],0x0
   14001274d:	add    rsp,0x20
   140012751:	pop    rbx
   140012752:	ret    
   140012753:	int3   
   140012754:	int3   
   140012755:	int3   
   140012756:	int3   
   140012757:	int3   
   140012758:	int3   
   140012759:	int3   
   14001275a:	int3   
   14001275b:	int3   
   14001275c:	int3   
   14001275d:	int3   
   14001275e:	int3   
   14001275f:	int3   
   140012760:	mov    QWORD PTR [rsp+0x8],rbx
   140012765:	push   rdi
   140012766:	sub    rsp,0x20
   14001276a:	mov    rbx,rcx
   14001276d:	call   0x1400144ec
   140012772:	mov    rcx,QWORD PTR [rbx+0x58]
   140012776:	test   rcx,rcx
   140012779:	je     0x140012780
   14001277b:	call   0x14001a1ac
   140012780:	xor    edi,edi
   140012782:	mov    QWORD PTR [rbx+0x58],rdi
   140012786:	mov    rcx,QWORD PTR [rbx+0x48]
   14001278a:	test   rcx,rcx
   14001278d:	je     0x140012794
   14001278f:	call   0x14001a1ac
   140012794:	mov    QWORD PTR [rbx+0x48],rdi
   140012798:	mov    rcx,QWORD PTR [rbx+0x38]
   14001279c:	test   rcx,rcx
   14001279f:	je     0x1400127a6
   1400127a1:	call   0x14001a1ac
   1400127a6:	mov    QWORD PTR [rbx+0x38],rdi
   1400127aa:	mov    rcx,QWORD PTR [rbx+0x28]
   1400127ae:	test   rcx,rcx
   1400127b1:	je     0x1400127b8
   1400127b3:	call   0x14001a1ac
   1400127b8:	mov    QWORD PTR [rbx+0x28],rdi
   1400127bc:	mov    rcx,QWORD PTR [rbx+0x18]
   1400127c0:	test   rcx,rcx
   1400127c3:	je     0x1400127ca
   1400127c5:	call   0x14001a1ac
   1400127ca:	mov    QWORD PTR [rbx+0x18],rdi
   1400127ce:	mov    rcx,QWORD PTR [rbx+0x8]
   1400127d2:	test   rcx,rcx
   1400127d5:	je     0x1400127dc
   1400127d7:	call   0x14001a1ac
   1400127dc:	mov    rcx,rbx
   1400127df:	mov    QWORD PTR [rbx+0x8],rdi
   1400127e3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400127e8:	add    rsp,0x20
   1400127ec:	pop    rdi
   1400127ed:	jmp    0x1400146d8
   1400127f2:	int3   
   1400127f3:	int3   
   1400127f4:	int3   
   1400127f5:	int3   
   1400127f6:	int3   
   1400127f7:	int3   
   1400127f8:	int3   
   1400127f9:	int3   
   1400127fa:	int3   
   1400127fb:	int3   
   1400127fc:	int3   
   1400127fd:	int3   
   1400127fe:	int3   
   1400127ff:	int3   
   140012800:	mov    rax,rsp
   140012803:	push   r14
   140012805:	sub    rsp,0x90
   14001280c:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140012814:	mov    QWORD PTR [rax+0x10],rbx
   140012818:	mov    QWORD PTR [rax+0x18],rsi
   14001281c:	mov    QWORD PTR [rax+0x20],rdi
   140012820:	mov    r14,rdx
   140012823:	mov    rdi,rcx
   140012826:	xor    ebx,ebx
   140012828:	mov    DWORD PTR [rsp+0xa0],ebx
   14001282f:	test   rcx,rcx
   140012832:	je     0x1400128a3
   140012834:	cmp    QWORD PTR [rcx],rbx
   140012837:	jne    0x1400128a3
   140012839:	lea    ecx,[rbx+0x60]
   14001283c:	call   0x140018a0c
   140012841:	mov    rsi,rax
   140012844:	mov    QWORD PTR [rsp+0xa0],rax
   14001284c:	test   rax,rax
   14001284f:	je     0x14001288e
   140012851:	mov    rcx,QWORD PTR [r14]
   140012854:	test   rcx,rcx
   140012857:	jne    0x140012862
   140012859:	lea    rdx,[rip+0x27310]        # 0x140039b70
   140012860:	jmp    0x14001286f
   140012862:	mov    rdx,QWORD PTR [rcx+0x28]
   140012866:	test   rdx,rdx
   140012869:	jne    0x14001286f
   14001286b:	lea    rdx,[rcx+0x30]
   14001286f:	lea    rcx,[rsp+0x28]
   140012874:	call   0x140012660
   140012879:	mov    ebx,0x1
   14001287e:	xor    r8d,r8d
   140012881:	mov    rdx,rax
   140012884:	mov    rcx,rsi
   140012887:	call   0x1400125f0
   14001288c:	jmp    0x140012891
   14001288e:	mov    rax,rbx
   140012891:	mov    QWORD PTR [rdi],rax
   140012894:	test   bl,0x1
   140012897:	je     0x1400128a3
   140012899:	lea    rcx,[rsp+0x28]
   14001289e:	call   0x140012760
   1400128a3:	mov    eax,0x2
   1400128a8:	lea    r11,[rsp+0x90]
   1400128b0:	mov    rbx,QWORD PTR [r11+0x18]
   1400128b4:	mov    rsi,QWORD PTR [r11+0x20]
   1400128b8:	mov    rdi,QWORD PTR [r11+0x28]
   1400128bc:	mov    rsp,r11
   1400128bf:	pop    r14
   1400128c1:	ret    
   1400128c2:	int3   
   1400128c3:	int3   
   1400128c4:	int3   
   1400128c5:	int3   
   1400128c6:	int3   
   1400128c7:	int3   
   1400128c8:	int3   
   1400128c9:	int3   
   1400128ca:	int3   
   1400128cb:	int3   
   1400128cc:	int3   
   1400128cd:	int3   
   1400128ce:	int3   
   1400128cf:	int3   
   1400128d0:	mov    r11,rsp
   1400128d3:	push   r14
   1400128d5:	sub    rsp,0x60
   1400128d9:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   1400128e1:	mov    QWORD PTR [r11+0x10],rbx
   1400128e5:	mov    QWORD PTR [r11+0x18],rsi
   1400128e9:	mov    QWORD PTR [r11+0x20],rdi
   1400128ed:	mov    rax,QWORD PTR [rip+0x2ed5c]        # 0x140041650
   1400128f4:	xor    rax,rsp
   1400128f7:	mov    QWORD PTR [rsp+0x50],rax
   1400128fc:	mov    r14,rcx
   1400128ff:	xor    edx,edx
   140012901:	lea    rcx,[r11-0x1c]
   140012905:	call   0x14001465c
   14001290a:	nop
   14001290b:	mov    rsi,QWORD PTR [rip+0x32256]        # 0x140044b68
   140012912:	mov    QWORD PTR [rsp+0x20],rsi
   140012917:	mov    rdi,QWORD PTR [rip+0x30bd2]        # 0x1400434f0
   14001291e:	test   rdi,rdi
   140012921:	jne    0x140012960
   140012923:	xor    edx,edx
   140012925:	lea    rcx,[rsp+0x48]
   14001292a:	call   0x14001465c
   14001292f:	cmp    QWORD PTR [rip+0x30bba],rdi        # 0x1400434f0
   140012936:	jne    0x14001294f
   140012938:	mov    eax,DWORD PTR [rip+0x30b62]        # 0x1400434a0
   14001293e:	inc    eax
   140012940:	mov    DWORD PTR [rip+0x30b5a],eax        # 0x1400434a0
   140012946:	cdqe   
   140012948:	mov    QWORD PTR [rip+0x30ba1],rax        # 0x1400434f0
   14001294f:	lea    rcx,[rsp+0x48]
   140012954:	call   0x1400146d8
   140012959:	mov    rdi,QWORD PTR [rip+0x30b90]        # 0x1400434f0
   140012960:	mov    rcx,QWORD PTR [r14]
   140012963:	cmp    rdi,QWORD PTR [rcx+0x18]
   140012967:	jae    0x14001297c
   140012969:	mov    rax,QWORD PTR [rcx+0x10]
   14001296d:	mov    rbx,QWORD PTR [rax+rdi*8]
   140012971:	test   rbx,rbx
   140012974:	jne    0x1400129fa
   14001297a:	jmp    0x14001297e
   14001297c:	xor    ebx,ebx
   14001297e:	cmp    BYTE PTR [rcx+0x24],0x0
   140012982:	je     0x140012997
   140012984:	call   0x140014360
   140012989:	cmp    rdi,QWORD PTR [rax+0x18]
   14001298d:	jae    0x14001299c
   14001298f:	mov    rax,QWORD PTR [rax+0x10]
   140012993:	mov    rbx,QWORD PTR [rax+rdi*8]
   140012997:	test   rbx,rbx
   14001299a:	jne    0x1400129fa
   14001299c:	test   rsi,rsi
   14001299f:	je     0x1400129a6
   1400129a1:	mov    rbx,rsi
   1400129a4:	jmp    0x1400129fa
   1400129a6:	mov    rdx,r14
   1400129a9:	lea    rcx,[rsp+0x20]
   1400129ae:	call   0x140012800
   1400129b3:	cmp    rax,0xffffffffffffffff
   1400129b7:	jne    0x1400129dc
   1400129b9:	lea    rdx,[rip+0x271b8]        # 0x140039b78
   1400129c0:	lea    rcx,[rsp+0x30]
   1400129c5:	call   0x140019fb4
   1400129ca:	lea    rdx,[rip+0x2d16f]        # 0x14003fb40
   1400129d1:	lea    rcx,[rsp+0x30]
   1400129d6:	call   0x14001a628
   1400129db:	int3   
   1400129dc:	mov    rbx,QWORD PTR [rsp+0x20]
   1400129e1:	mov    QWORD PTR [rip+0x32180],rbx        # 0x140044b68
   1400129e8:	mov    rdx,QWORD PTR [rbx]
   1400129eb:	mov    rcx,rbx
   1400129ee:	call   QWORD PTR [rdx+0x8]
   1400129f1:	mov    rcx,rbx
   1400129f4:	call   0x14001432c
   1400129f9:	nop
   1400129fa:	lea    rcx,[rsp+0x4c]
   1400129ff:	call   0x1400146d8
   140012a04:	mov    rax,rbx
   140012a07:	mov    rcx,QWORD PTR [rsp+0x50]
   140012a0c:	xor    rcx,rsp
   140012a0f:	call   0x1400187d0
   140012a14:	lea    r11,[rsp+0x60]
   140012a19:	mov    rbx,QWORD PTR [r11+0x18]
   140012a1d:	mov    rsi,QWORD PTR [r11+0x20]
   140012a21:	mov    rdi,QWORD PTR [r11+0x28]
   140012a25:	mov    rsp,r11
   140012a28:	pop    r14
   140012a2a:	ret    
   140012a2b:	int3   
   140012a2c:	int3   
   140012a2d:	int3   
   140012a2e:	int3   
   140012a2f:	int3   
   140012a30:	lock inc DWORD PTR [rcx+0x8]
   140012a34:	ret    
   140012a35:	int3   
   140012a36:	int3   
   140012a37:	int3   
   140012a38:	int3   
   140012a39:	int3   
   140012a3a:	int3   
   140012a3b:	int3   
   140012a3c:	int3   
   140012a3d:	int3   
   140012a3e:	int3   
   140012a3f:	int3   
   140012a40:	rex push rbx
   140012a42:	sub    rsp,0x20
   140012a46:	mov    rax,QWORD PTR [rcx+0x40]
   140012a4a:	mov    rbx,rdx
   140012a4d:	mov    rcx,QWORD PTR [rax]
   140012a50:	mov    QWORD PTR [rdx],rcx
   140012a53:	mov    rax,QWORD PTR [rcx]
   140012a56:	call   QWORD PTR [rax+0x8]
   140012a59:	mov    rax,rbx
   140012a5c:	add    rsp,0x20
   140012a60:	pop    rbx
   140012a61:	ret    
   140012a62:	int3   
   140012a63:	int3   
   140012a64:	int3   
   140012a65:	int3   
   140012a66:	int3   
   140012a67:	int3   
   140012a68:	int3   
   140012a69:	int3   
   140012a6a:	int3   
   140012a6b:	int3   
   140012a6c:	int3   
   140012a6d:	int3   
   140012a6e:	int3   
   140012a6f:	int3   
   140012a70:	lock add DWORD PTR [rcx+0x8],0xffffffff
   140012a75:	mov    eax,0x0
   140012a7a:	cmove  rax,rcx
   140012a7e:	ret    
   140012a7f:	int3   
   140012a80:	sub    rsp,0x28
   140012a84:	mov    rcx,QWORD PTR [rcx]
   140012a87:	test   rcx,rcx
   140012a8a:	je     0x140012aa9
   140012a8c:	mov    rax,QWORD PTR [rcx]
   140012a8f:	call   QWORD PTR [rax+0x10]
   140012a92:	test   rax,rax
   140012a95:	je     0x140012aa9
   140012a97:	mov    r8,QWORD PTR [rax]
   140012a9a:	mov    edx,0x1
   140012a9f:	mov    rcx,rax
   140012aa2:	add    rsp,0x28
   140012aa6:	rex.WB jmp QWORD PTR [r8]
   140012aa9:	add    rsp,0x28
   140012aad:	ret    
   140012aae:	int3   
   140012aaf:	int3   
   140012ab0:	rex push rbx
   140012ab2:	sub    rsp,0x20
   140012ab6:	mov    rax,QWORD PTR [rcx]
   140012ab9:	mov    rbx,rcx
   140012abc:	call   QWORD PTR [rax+0x30]
   140012abf:	mov    ecx,0xffff
   140012ac4:	cmp    cx,ax
   140012ac7:	jne    0x140012ad2
   140012ac9:	movzx  eax,cx
   140012acc:	add    rsp,0x20
   140012ad0:	pop    rbx
   140012ad1:	ret    
   140012ad2:	mov    rax,QWORD PTR [rbx+0x50]
   140012ad6:	dec    DWORD PTR [rax]
   140012ad8:	mov    rcx,QWORD PTR [rbx+0x38]
   140012adc:	mov    rdx,QWORD PTR [rcx]
   140012adf:	lea    rax,[rdx+0x2]
   140012ae3:	mov    QWORD PTR [rcx],rax
   140012ae6:	movzx  eax,WORD PTR [rdx]
   140012ae9:	add    rsp,0x20
   140012aed:	pop    rbx
   140012aee:	ret    
   140012aef:	int3   
   140012af0:	mov    rax,QWORD PTR [rcx+0x38]
   140012af4:	cmp    QWORD PTR [rax],0x0
   140012af8:	je     0x140012b02
   140012afa:	mov    rax,QWORD PTR [rcx+0x50]
   140012afe:	movsxd rax,DWORD PTR [rax]
   140012b01:	ret    
   140012b02:	xor    eax,eax
   140012b04:	cdqe   
   140012b06:	ret    
   140012b07:	int3   
   140012b08:	int3   
   140012b09:	int3   
   140012b0a:	int3   
   140012b0b:	int3   
   140012b0c:	int3   
   140012b0d:	int3   
   140012b0e:	int3   
   140012b0f:	int3   
   140012b10:	rex push rbx
   140012b12:	sub    rsp,0x20
   140012b16:	mov    rax,QWORD PTR [rcx+0x38]
   140012b1a:	mov    rbx,rcx
   140012b1d:	mov    rcx,QWORD PTR [rax]
   140012b20:	test   rcx,rcx
   140012b23:	je     0x140012b71
   140012b25:	mov    rdx,QWORD PTR [rbx+0x50]
   140012b29:	mov    eax,DWORD PTR [rdx]
   140012b2b:	cmp    eax,0x1
   140012b2e:	jle    0x140012b4b
   140012b30:	dec    eax
   140012b32:	mov    DWORD PTR [rdx],eax
   140012b34:	mov    rax,QWORD PTR [rbx+0x38]
   140012b38:	mov    rcx,QWORD PTR [rax]
   140012b3b:	add    rcx,0x2
   140012b3f:	mov    QWORD PTR [rax],rcx
   140012b42:	movzx  eax,WORD PTR [rcx]
   140012b45:	add    rsp,0x20
   140012b49:	pop    rbx
   140012b4a:	ret    
   140012b4b:	test   rcx,rcx
   140012b4e:	je     0x140012b71
   140012b50:	mov    rcx,QWORD PTR [rbx+0x50]
   140012b54:	mov    eax,DWORD PTR [rcx]
   140012b56:	test   eax,eax
   140012b58:	jle    0x140012b71
   140012b5a:	dec    eax
   140012b5c:	mov    DWORD PTR [rcx],eax
   140012b5e:	mov    rcx,QWORD PTR [rbx+0x38]
   140012b62:	mov    rdx,QWORD PTR [rcx]
   140012b65:	lea    rax,[rdx+0x2]
   140012b69:	mov    QWORD PTR [rcx],rax
   140012b6c:	movzx  eax,WORD PTR [rdx]
   140012b6f:	jmp    0x140012b7a
   140012b71:	mov    rax,QWORD PTR [rbx]
   140012b74:	mov    rcx,rbx
   140012b77:	call   QWORD PTR [rax+0x38]
   140012b7a:	mov    ecx,0xffff
   140012b7f:	cmp    cx,ax
   140012b82:	jne    0x140012b8d
   140012b84:	movzx  eax,cx
   140012b87:	add    rsp,0x20
   140012b8b:	pop    rbx
   140012b8c:	ret    
   140012b8d:	mov    rax,QWORD PTR [rbx+0x38]
   140012b91:	mov    rcx,QWORD PTR [rax]
   140012b94:	test   rcx,rcx
   140012b97:	je     0x140012ba2
   140012b99:	mov    rax,QWORD PTR [rbx+0x50]
   140012b9d:	cmp    DWORD PTR [rax],0x0
   140012ba0:	jg     0x140012b42
   140012ba2:	mov    rax,QWORD PTR [rbx]
   140012ba5:	mov    rcx,rbx
   140012ba8:	add    rsp,0x20
   140012bac:	pop    rbx
   140012bad:	rex.W jmp QWORD PTR [rax+0x30]
   140012bb1:	int3   
   140012bb2:	int3   
   140012bb3:	int3   
   140012bb4:	int3   
   140012bb5:	int3   
   140012bb6:	int3   
   140012bb7:	int3   
   140012bb8:	int3   
   140012bb9:	int3   
   140012bba:	int3   
   140012bbb:	int3   
   140012bbc:	int3   
   140012bbd:	int3   
   140012bbe:	int3   
   140012bbf:	int3   
   140012bc0:	rex push rbx
   140012bc2:	sub    rsp,0x20
   140012bc6:	movzx  ebx,dx
   140012bc9:	lea    rdx,[rcx+0x10]
   140012bcd:	movzx  ecx,r8w
   140012bd1:	call   0x1400141f8
   140012bd6:	test   bx,ax
   140012bd9:	setne  al
   140012bdc:	add    rsp,0x20
   140012be0:	pop    rbx
   140012be1:	ret    
   140012be2:	int3   
   140012be3:	int3   
   140012be4:	int3   
   140012be5:	int3   
   140012be6:	int3   
   140012be7:	int3   
   140012be8:	int3   
   140012be9:	int3   
   140012bea:	int3   
   140012beb:	int3   
   140012bec:	int3   
   140012bed:	int3   
   140012bee:	int3   
   140012bef:	int3   
   140012bf0:	rex push rbx
   140012bf2:	sub    rsp,0x30
   140012bf6:	mov    r8d,DWORD PTR [rcx]
   140012bf9:	mov    rcx,QWORD PTR [rcx+0x8]
   140012bfd:	mov    rbx,rdx
   140012c00:	mov    rax,QWORD PTR [rcx]
   140012c03:	mov    DWORD PTR [rsp+0x20],0x0
   140012c0b:	call   QWORD PTR [rax+0x10]
   140012c0e:	mov    rax,rbx
   140012c11:	add    rsp,0x30
   140012c15:	pop    rbx
   140012c16:	ret    
   140012c17:	int3   
   140012c18:	int3   
   140012c19:	int3   
   140012c1a:	int3   
   140012c1b:	int3   
   140012c1c:	int3   
   140012c1d:	int3   
   140012c1e:	int3   
   140012c1f:	int3   
   140012c20:	rex push rbx
   140012c22:	push   rsi
   140012c23:	push   rdi
   140012c24:	sub    rsp,0x60
   140012c28:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140012c31:	mov    rax,QWORD PTR [rip+0x2ea18]        # 0x140041650
   140012c38:	xor    rax,rsp
   140012c3b:	mov    QWORD PTR [rsp+0x58],rax
   140012c40:	mov    rbx,r8
   140012c43:	mov    rsi,rdx
   140012c46:	mov    rdi,rcx
   140012c49:	mov    QWORD PTR [rsp+0x50],rbx
   140012c4e:	mov    DWORD PTR [rsp+0x20],0x0
   140012c56:	cmp    QWORD PTR [r8+0x10],0x0
   140012c5b:	je     0x140012c72
   140012c5d:	mov    r8d,0x2
   140012c63:	lea    rdx,[rip+0x26f4e]        # 0x140039bb8
   140012c6a:	mov    rcx,rbx
   140012c6d:	call   0x140008590
   140012c72:	lea    rdx,[rsp+0x30]
   140012c77:	mov    rcx,rsi
   140012c7a:	call   0x140012bf0
   140012c7f:	nop
   140012c80:	or     r9,0xffffffffffffffff
   140012c84:	xor    r8d,r8d
   140012c87:	mov    rdx,rax
   140012c8a:	mov    rcx,rbx
   140012c8d:	call   0x1400086e0
   140012c92:	nop
   140012c93:	cmp    QWORD PTR [rsp+0x48],0x10
   140012c99:	jb     0x140012ca5
   140012c9b:	mov    rcx,QWORD PTR [rsp+0x30]
   140012ca0:	call   0x140018a04
   140012ca5:	mov    rdx,rbx
   140012ca8:	mov    rcx,rdi
   140012cab:	call   0x140008810
   140012cb0:	nop
   140012cb1:	cmp    QWORD PTR [rbx+0x18],0x10
   140012cb6:	jb     0x140012cc0
   140012cb8:	mov    rcx,QWORD PTR [rbx]
   140012cbb:	call   0x140018a04
   140012cc0:	mov    QWORD PTR [rbx+0x18],0xf
   140012cc8:	mov    QWORD PTR [rbx+0x10],0x0
   140012cd0:	mov    BYTE PTR [rbx],0x0
   140012cd3:	mov    rax,rdi
   140012cd6:	mov    rcx,QWORD PTR [rsp+0x58]
   140012cdb:	xor    rcx,rsp
   140012cde:	call   0x1400187d0
   140012ce3:	add    rsp,0x60
   140012ce7:	pop    rdi
   140012ce8:	pop    rsi
   140012ce9:	pop    rbx
   140012cea:	ret    
   140012ceb:	int3   
   140012cec:	int3   
   140012ced:	int3   
   140012cee:	int3   
   140012cef:	int3   
   140012cf0:	mov    r11,rsp
   140012cf3:	push   rdi
   140012cf4:	sub    rsp,0xb0
   140012cfb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012d04:	mov    QWORD PTR [r11+0x10],rbx
   140012d08:	movaps XMMWORD PTR [r11-0x18],xmm6
   140012d0d:	mov    rax,r8
   140012d10:	mov    rdi,rdx
   140012d13:	mov    rbx,rcx
   140012d16:	mov    QWORD PTR [r11-0x60],0xf
   140012d1e:	mov    QWORD PTR [r11-0x68],0x0
   140012d26:	mov    BYTE PTR [rsp+0x40],0x0
   140012d2b:	cmp    BYTE PTR [r8],0x0
   140012d2f:	jne    0x140012d36
   140012d31:	xor    r8d,r8d
   140012d34:	jmp    0x140012d4a
   140012d36:	or     r8,0xffffffffffffffff
   140012d3a:	nop    WORD PTR [rax+rax*1+0x0]
   140012d40:	inc    r8
   140012d43:	cmp    BYTE PTR [rax+r8*1],0x0
   140012d48:	jne    0x140012d40
   140012d4a:	mov    rdx,rax
   140012d4d:	lea    rcx,[rsp+0x40]
   140012d52:	call   0x140008e50
   140012d57:	nop
   140012d58:	movaps xmm6,XMMWORD PTR [rdi]
   140012d5b:	mov    QWORD PTR [rsp+0x78],0xf
   140012d64:	mov    QWORD PTR [rsp+0x70],0x0
   140012d6d:	mov    BYTE PTR [rsp+0x60],0x0
   140012d72:	or     r9,0xffffffffffffffff
   140012d76:	xor    r8d,r8d
   140012d79:	lea    rdx,[rsp+0x40]
   140012d7e:	lea    rcx,[rsp+0x60]
   140012d83:	call   0x140008b40
   140012d88:	movdqa XMMWORD PTR [rsp+0x30],xmm6
   140012d8e:	lea    r8,[rsp+0x60]
   140012d93:	lea    rdx,[rsp+0x30]
   140012d98:	lea    rcx,[rsp+0x80]
   140012da0:	call   0x140012c20
   140012da5:	nop
   140012da6:	cmp    QWORD PTR [rax+0x18],0x10
   140012dab:	jb     0x140012db0
   140012dad:	mov    rax,QWORD PTR [rax]
   140012db0:	mov    QWORD PTR [rsp+0xc0],rax
   140012db8:	lea    rdx,[rsp+0xc0]
   140012dc0:	mov    rcx,rbx
   140012dc3:	call   0x140019fe0
   140012dc8:	lea    rax,[rip+0x1c7f9]        # 0x14002f5c8
   140012dcf:	mov    QWORD PTR [rbx],rax
   140012dd2:	cmp    QWORD PTR [rsp+0x98],0x10
   140012ddb:	jb     0x140012dea
   140012ddd:	mov    rcx,QWORD PTR [rsp+0x80]
   140012de5:	call   0x140018a04
   140012dea:	lea    rax,[rip+0x26e5f]        # 0x140039c50
   140012df1:	mov    QWORD PTR [rbx],rax
   140012df4:	movups XMMWORD PTR [rbx+0x18],xmm6
   140012df8:	cmp    QWORD PTR [rsp+0x58],0x10
   140012dfe:	jb     0x140012e0a
   140012e00:	mov    rcx,QWORD PTR [rsp+0x40]
   140012e05:	call   0x140018a04
   140012e0a:	lea    rax,[rip+0x26e27]        # 0x140039c38
   140012e11:	mov    QWORD PTR [rbx],rax
   140012e14:	mov    rax,rbx
   140012e17:	mov    rbx,QWORD PTR [rsp+0xc8]
   140012e1f:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
   140012e27:	add    rsp,0xb0
   140012e2e:	pop    rdi
   140012e2f:	ret    
   140012e30:	rex push rbx
   140012e32:	sub    rsp,0x20
   140012e36:	lea    rax,[rip+0x1c7a3]        # 0x14002f5e0
   140012e3d:	mov    rbx,rcx
   140012e40:	mov    QWORD PTR [rcx],rax
   140012e43:	test   dl,0x1
   140012e46:	je     0x140012e4d
   140012e48:	call   0x140018a04
   140012e4d:	mov    rax,rbx
   140012e50:	add    rsp,0x20
   140012e54:	pop    rbx
   140012e55:	ret    
   140012e56:	int3   
   140012e57:	int3   
   140012e58:	int3   
   140012e59:	int3   
   140012e5a:	int3   
   140012e5b:	int3   
   140012e5c:	int3   
   140012e5d:	int3   
   140012e5e:	int3   
   140012e5f:	int3   
   140012e60:	lea    rax,[rip+0x26d59]        # 0x140039bc0
   140012e67:	ret    
   140012e68:	int3   
   140012e69:	int3   
   140012e6a:	int3   
   140012e6b:	int3   
   140012e6c:	int3   
   140012e6d:	int3   
   140012e6e:	int3   
   140012e6f:	int3   
   140012e70:	lea    rax,[rip+0x26d51]        # 0x140039bc8
   140012e77:	ret    
   140012e78:	int3   
   140012e79:	int3   
   140012e7a:	int3   
   140012e7b:	int3   
   140012e7c:	int3   
   140012e7d:	int3   
   140012e7e:	int3   
   140012e7f:	int3   
   140012e80:	mov    QWORD PTR [rsp+0x8],rbx
   140012e85:	push   rdi
   140012e86:	sub    rsp,0x30
   140012e8a:	xor    ebx,ebx
   140012e8c:	mov    ecx,r8d
   140012e8f:	mov    rdi,rdx
   140012e92:	mov    DWORD PTR [rsp+0x20],ebx
   140012e96:	call   0x1400141a8
   140012e9b:	mov    QWORD PTR [rdi+0x18],0xf
   140012ea3:	test   rax,rax
   140012ea6:	mov    QWORD PTR [rdi+0x10],rbx
   140012eaa:	lea    rdx,[rip+0x26d3f]        # 0x140039bf0
   140012eb1:	cmovne rdx,rax
   140012eb5:	mov    BYTE PTR [rdi],bl
   140012eb7:	cmp    BYTE PTR [rdx],bl
   140012eb9:	je     0x140012ec9
   140012ebb:	or     rbx,0xffffffffffffffff
   140012ebf:	nop
   140012ec0:	inc    rbx
   140012ec3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140012ec7:	jne    0x140012ec0
   140012ec9:	mov    r8,rbx
   140012ecc:	mov    rcx,rdi
   140012ecf:	call   0x140008e50
   140012ed4:	mov    rbx,QWORD PTR [rsp+0x40]
   140012ed9:	mov    rax,rdi
   140012edc:	add    rsp,0x30
   140012ee0:	pop    rdi
   140012ee1:	ret    
   140012ee2:	int3   
   140012ee3:	int3   
   140012ee4:	int3   
   140012ee5:	int3   
   140012ee6:	int3   
   140012ee7:	int3   
   140012ee8:	int3   
   140012ee9:	int3   
   140012eea:	int3   
   140012eeb:	int3   
   140012eec:	int3   
   140012eed:	int3   
   140012eee:	int3   
   140012eef:	int3   
   140012ef0:	rex push rbx
   140012ef2:	sub    rsp,0x30
   140012ef6:	xor    eax,eax
   140012ef8:	mov    rbx,rdx
   140012efb:	mov    DWORD PTR [rsp+0x20],eax
   140012eff:	cmp    r8d,0x1
   140012f03:	jne    0x140012f2f
   140012f05:	mov    QWORD PTR [rdx+0x18],0xf
   140012f0d:	mov    QWORD PTR [rdx+0x10],rax
   140012f11:	mov    BYTE PTR [rdx],al
   140012f13:	lea    rdx,[rip+0x26cbe]        # 0x140039bd8
   140012f1a:	lea    r8d,[rax+0x15]
   140012f1e:	mov    rcx,rbx
   140012f21:	call   0x140008e50
   140012f26:	mov    rax,rbx
   140012f29:	add    rsp,0x30
   140012f2d:	pop    rbx
   140012f2e:	ret    
   140012f2f:	call   0x140012e80
   140012f34:	mov    rax,rbx
   140012f37:	add    rsp,0x30
   140012f3b:	pop    rbx
   140012f3c:	ret    
   140012f3d:	int3   
   140012f3e:	int3   
   140012f3f:	int3   
   140012f40:	cmp    rcx,QWORD PTR [rdx+0x8]
   140012f44:	jne    0x140012f4e
   140012f46:	cmp    DWORD PTR [rdx],r8d
   140012f49:	jne    0x140012f4e
   140012f4b:	mov    al,0x1
   140012f4d:	ret    
   140012f4e:	xor    al,al
   140012f50:	ret    
   140012f51:	int3   
   140012f52:	int3   
   140012f53:	int3   
   140012f54:	int3   
   140012f55:	int3   
   140012f56:	int3   
   140012f57:	int3   
   140012f58:	int3   
   140012f59:	int3   
   140012f5a:	int3   
   140012f5b:	int3   
   140012f5c:	int3   
   140012f5d:	int3   
   140012f5e:	int3   
   140012f5f:	int3   
   140012f60:	mov    DWORD PTR [rdx],r8d
   140012f63:	mov    QWORD PTR [rdx+0x8],rcx
   140012f67:	mov    rax,rdx
   140012f6a:	ret    
   140012f6b:	int3   
   140012f6c:	int3   
   140012f6d:	int3   
   140012f6e:	int3   
   140012f6f:	int3   
   140012f70:	rex push rbx
   140012f72:	sub    rsp,0x30
   140012f76:	mov    rax,QWORD PTR [rcx]
   140012f79:	mov    rbx,r8
   140012f7c:	mov    r8d,edx
   140012f7f:	lea    rdx,[rsp+0x20]
   140012f84:	call   QWORD PTR [rax+0x18]
   140012f87:	mov    rcx,QWORD PTR [rbx+0x8]
   140012f8b:	cmp    QWORD PTR [rax+0x8],rcx
   140012f8f:	jne    0x140012f9f
   140012f91:	mov    ecx,DWORD PTR [rbx]
   140012f93:	cmp    DWORD PTR [rax],ecx
   140012f95:	jne    0x140012f9f
   140012f97:	mov    al,0x1
   140012f99:	add    rsp,0x30
   140012f9d:	pop    rbx
   140012f9e:	ret    
   140012f9f:	xor    al,al
   140012fa1:	add    rsp,0x30
   140012fa5:	pop    rbx
   140012fa6:	ret    
   140012fa7:	int3   
   140012fa8:	int3   
   140012fa9:	int3   
   140012faa:	int3   
   140012fab:	int3   
   140012fac:	int3   
   140012fad:	int3   
   140012fae:	int3   
   140012faf:	int3   
   140012fb0:	jmp    0x14001a058
   140012fb5:	int3   
   140012fb6:	int3   
   140012fb7:	int3   
   140012fb8:	int3   
   140012fb9:	int3   
   140012fba:	int3   
   140012fbb:	int3   
   140012fbc:	int3   
   140012fbd:	int3   
   140012fbe:	int3   
   140012fbf:	int3   
   140012fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140012fc5:	push   rdi
   140012fc6:	sub    rsp,0x20
   140012fca:	mov    ebx,edx
   140012fcc:	mov    rdi,rcx
   140012fcf:	call   0x14001a058
   140012fd4:	test   bl,0x1
   140012fd7:	je     0x140012fe1
   140012fd9:	mov    rcx,rdi
   140012fdc:	call   0x140018a04
   140012fe1:	mov    rax,rdi
   140012fe4:	mov    rbx,QWORD PTR [rsp+0x30]
   140012fe9:	add    rsp,0x20
   140012fed:	pop    rdi
   140012fee:	ret    
   140012fef:	int3   
   140012ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140012ff5:	push   rdi
   140012ff6:	sub    rsp,0x20
   140012ffa:	mov    rbx,rdx
   140012ffd:	mov    rdi,rcx
   140013000:	call   0x14001a02c
   140013005:	lea    rax,[rip+0x26c44]        # 0x140039c50
   14001300c:	mov    QWORD PTR [rdi],rax
   14001300f:	lea    rax,[rip+0x26c0a]        # 0x140039c20
   140013016:	movups xmm0,XMMWORD PTR [rbx+0x18]
   14001301a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001301f:	mov    QWORD PTR [rdi],rax
   140013022:	movups XMMWORD PTR [rdi+0x18],xmm0
   140013026:	mov    rax,rdi
   140013029:	add    rsp,0x20
   14001302d:	pop    rdi
   14001302e:	ret    
   14001302f:	int3   
   140013030:	mov    QWORD PTR [rsp+0x8],rbx
   140013035:	push   rdi
   140013036:	sub    rsp,0x20
   14001303a:	mov    rbx,rdx
   14001303d:	mov    rdi,rcx
   140013040:	call   0x14001a02c
   140013045:	lea    rax,[rip+0x26c04]        # 0x140039c50
   14001304c:	mov    QWORD PTR [rdi],rax
   14001304f:	lea    rax,[rip+0x26be2]        # 0x140039c38
   140013056:	movups xmm0,XMMWORD PTR [rbx+0x18]
   14001305a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001305f:	mov    QWORD PTR [rdi],rax
   140013062:	movups XMMWORD PTR [rdi+0x18],xmm0
   140013066:	mov    rax,rdi
   140013069:	add    rsp,0x20
   14001306d:	pop    rdi
   14001306e:	ret    
   14001306f:	int3   
   140013070:	mov    QWORD PTR [rsp+0x8],rbx
   140013075:	push   rdi
   140013076:	sub    rsp,0x20
   14001307a:	mov    rbx,rdx
   14001307d:	mov    rdi,rcx
   140013080:	call   0x14001a02c
   140013085:	lea    rax,[rip+0x26bc4]        # 0x140039c50
   14001308c:	mov    QWORD PTR [rdi],rax
   14001308f:	mov    rax,rdi
   140013092:	movups xmm0,XMMWORD PTR [rbx+0x18]
   140013096:	mov    rbx,QWORD PTR [rsp+0x30]
   14001309b:	movups XMMWORD PTR [rdi+0x18],xmm0
   14001309f:	add    rsp,0x20
   1400130a3:	pop    rdi
   1400130a4:	ret    
   1400130a5:	int3   
   1400130a6:	int3   
   1400130a7:	int3   
   1400130a8:	int3   
   1400130a9:	int3   
   1400130aa:	int3   
   1400130ab:	int3   
   1400130ac:	int3   
   1400130ad:	int3   
   1400130ae:	int3   
   1400130af:	int3   
   1400130b0:	rex push rbp
   1400130b2:	mov    rbp,rsp
   1400130b5:	sub    rsp,0x60
   1400130b9:	mov    eax,DWORD PTR [rcx+0x14]
   1400130bc:	and    edx,0x17
   1400130bf:	mov    DWORD PTR [rcx+0x10],edx
   1400130c2:	and    eax,edx
   1400130c4:	je     0x1400130f8
   1400130c6:	test   r8b,r8b
   1400130c9:	jne    0x1400130fe
   1400130cb:	mov    DWORD PTR [rbp-0x40],0x1
   1400130d2:	lea    rdx,[rbp-0x40]
   1400130d6:	lea    rcx,[rbp-0x30]
   1400130da:	test   al,0x4
   1400130dc:	jne    0x140013108
   1400130de:	test   al,0x2
   1400130e0:	lea    rax,[rip+0x2fae9]        # 0x140042bd0
   1400130e7:	mov    QWORD PTR [rbp-0x38],rax
   1400130eb:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   1400130ef:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   1400130f4:	jne    0x140013144
   1400130f6:	jmp    0x14001316c
   1400130f8:	add    rsp,0x60
   1400130fc:	pop    rbp
   1400130fd:	ret    
   1400130fe:	xor    edx,edx
   140013100:	xor    ecx,ecx
   140013102:	call   0x14001a628
   140013107:	int3   
   140013108:	lea    rax,[rip+0x2fac1]        # 0x140042bd0
   14001310f:	lea    r8,[rip+0x26a72]        # 0x140039b88
   140013116:	mov    QWORD PTR [rbp-0x38],rax
   14001311a:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   14001311e:	movdqa XMMWORD PTR [rbp-0x40],xmm0
   140013123:	call   0x140012cf0
   140013128:	lea    rax,[rip+0x26af1]        # 0x140039c20
   14001312f:	lea    rdx,[rip+0x2cad2]        # 0x14003fc08
   140013136:	lea    rcx,[rbp-0x30]
   14001313a:	mov    QWORD PTR [rbp-0x30],rax
   14001313e:	call   0x14001a628
   140013143:	int3   
   140013144:	lea    r8,[rip+0x26a55]        # 0x140039ba0
   14001314b:	call   0x140012cf0
   140013150:	lea    rax,[rip+0x26ac9]        # 0x140039c20
   140013157:	lea    rdx,[rip+0x2caaa]        # 0x14003fc08
   14001315e:	lea    rcx,[rbp-0x30]
   140013162:	mov    QWORD PTR [rbp-0x30],rax
   140013166:	call   0x14001a628
   14001316b:	int3   
   14001316c:	lea    r8,[rip+0x26a8d]        # 0x140039c00
   140013173:	call   0x140012cf0
   140013178:	lea    rax,[rip+0x26aa1]        # 0x140039c20
   14001317f:	lea    rdx,[rip+0x2ca82]        # 0x14003fc08
   140013186:	lea    rcx,[rbp-0x30]
   14001318a:	mov    QWORD PTR [rbp-0x30],rax
   14001318e:	call   0x14001a628
   140013193:	int3   
   140013194:	int3   
   140013195:	int3   
   140013196:	int3   
   140013197:	int3   
   140013198:	int3   
   140013199:	int3   
   14001319a:	int3   
   14001319b:	int3   
   14001319c:	int3   
   14001319d:	int3   
   14001319e:	int3   
   14001319f:	int3   
   1400131a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400131a5:	push   rdi
   1400131a6:	sub    rsp,0x30
   1400131aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400131b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400131b8:	mov    QWORD PTR [rsp+0x58],rsi
   1400131bd:	mov    rbx,rcx
   1400131c0:	mov    rax,QWORD PTR [rcx]
   1400131c3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400131c7:	add    rcx,rbx
   1400131ca:	cmp    DWORD PTR [rcx+0x10],0x0
   1400131ce:	jne    0x1400132d4
   1400131d4:	mov    rcx,QWORD PTR [rcx+0x50]
   1400131d8:	test   rcx,rcx
   1400131db:	je     0x1400131e2
   1400131dd:	call   0x140012050
   1400131e2:	mov    rax,QWORD PTR [rbx]
   1400131e5:	movsxd rcx,DWORD PTR [rax+0x4]
   1400131e9:	add    rcx,rbx
   1400131ec:	test   BYTE PTR [rcx+0x18],0x1
   1400131f0:	je     0x1400132c0
   1400131f6:	lea    rdx,[rsp+0x50]
   1400131fb:	call   0x140012a40
   140013200:	nop
   140013201:	mov    rcx,rax
   140013204:	call   0x1400128d0
   140013209:	mov    rdi,rax
   14001320c:	mov    rcx,QWORD PTR [rsp+0x50]
   140013211:	test   rcx,rcx
   140013214:	je     0x140013230
   140013216:	mov    rdx,QWORD PTR [rcx]
   140013219:	call   QWORD PTR [rdx+0x10]
   14001321c:	test   rax,rax
   14001321f:	je     0x140013230
   140013221:	mov    r8,QWORD PTR [rax]
   140013224:	mov    edx,0x1
   140013229:	mov    rcx,rax
   14001322c:	call   QWORD PTR [r8]
   14001322f:	nop
   140013230:	mov    rax,QWORD PTR [rbx]
   140013233:	movsxd rcx,DWORD PTR [rax+0x4]
   140013237:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   14001323c:	mov    rax,QWORD PTR [rcx+0x38]
   140013240:	mov    rdx,QWORD PTR [rax]
   140013243:	test   rdx,rdx
   140013246:	je     0x140013257
   140013248:	mov    rax,QWORD PTR [rcx+0x50]
   14001324c:	cmp    DWORD PTR [rax],0x0
   14001324f:	jle    0x140013257
   140013251:	movzx  r8d,WORD PTR [rdx]
   140013255:	jmp    0x140013261
   140013257:	mov    rax,QWORD PTR [rcx]
   14001325a:	call   QWORD PTR [rax+0x30]
   14001325d:	movzx  r8d,ax
   140013261:	mov    esi,0xffff
   140013266:	cmp    si,r8w
   14001326a:	jne    0x140013290
   14001326c:	mov    rax,QWORD PTR [rbx]
   14001326f:	movsxd rcx,DWORD PTR [rax+0x4]
   140013273:	add    rcx,rbx
   140013276:	mov    edx,DWORD PTR [rcx+0x10]
   140013279:	or     edx,0x1
   14001327c:	cmp    QWORD PTR [rcx+0x48],0x0
   140013281:	jne    0x140013286
   140013283:	or     edx,0x4
   140013286:	xor    r8d,r8d
   140013289:	call   0x1400130b0
   14001328e:	jmp    0x1400132a2
   140013290:	mov    rax,QWORD PTR [rdi]
   140013293:	mov    edx,0x48
   140013298:	mov    rcx,rdi
   14001329b:	call   QWORD PTR [rax+0x20]
   14001329e:	test   al,al
   1400132a0:	jne    0x1400132a4
   1400132a2:	jmp    0x1400132c0
   1400132a4:	mov    rax,QWORD PTR [rbx]
   1400132a7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400132ab:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   1400132b0:	call   0x140012b10
   1400132b5:	movzx  r8d,ax
   1400132b9:	jmp    0x140013266
   1400132bb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400132c0:	mov    rax,QWORD PTR [rbx]
   1400132c3:	movsxd rcx,DWORD PTR [rax+0x4]
   1400132c7:	add    rcx,rbx
   1400132ca:	cmp    DWORD PTR [rcx+0x10],0x0
   1400132ce:	jne    0x1400132d4
   1400132d0:	mov    al,0x1
   1400132d2:	jmp    0x1400132ee
   1400132d4:	mov    edx,DWORD PTR [rcx+0x10]
   1400132d7:	or     edx,0x2
   1400132da:	cmp    QWORD PTR [rcx+0x48],0x0
   1400132df:	jne    0x1400132e4
   1400132e1:	or     edx,0x4
   1400132e4:	xor    r8d,r8d
   1400132e7:	call   0x1400130b0
   1400132ec:	xor    al,al
   1400132ee:	mov    rbx,QWORD PTR [rsp+0x48]
   1400132f3:	mov    rsi,QWORD PTR [rsp+0x58]
   1400132f8:	add    rsp,0x30
   1400132fc:	pop    rdi
   1400132fd:	ret    
   1400132fe:	int3   
   1400132ff:	int3   
   140013300:	mov    QWORD PTR [rsp+0x8],rbx
   140013305:	push   rdi
   140013306:	sub    rsp,0x20
   14001330a:	lea    rax,[rip+0x26967]        # 0x140039c78
   140013311:	mov    ebx,edx
   140013313:	mov    rdi,rcx
   140013316:	mov    QWORD PTR [rcx],rax
   140013319:	call   0x1400140d4
   14001331e:	test   bl,0x1
   140013321:	je     0x14001332b
   140013323:	mov    rcx,rdi
   140013326:	call   0x140018a04
   14001332b:	mov    rax,rdi
   14001332e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013333:	add    rsp,0x20
   140013337:	pop    rdi
   140013338:	ret    
   140013339:	int3   
   14001333a:	int3   
   14001333b:	int3   
   14001333c:	int3   
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	lea    rax,[rip+0x26931]        # 0x140039c78
   140013347:	mov    QWORD PTR [rcx],rax
   14001334a:	jmp    0x1400140d4
   14001334f:	int3   
   140013350:	rex push rbx
   140013352:	sub    rsp,0x20
   140013356:	mov    rbx,rcx
   140013359:	call   0x14001a02c
   14001335e:	lea    rax,[rip+0x1c263]        # 0x14002f5c8
   140013365:	mov    QWORD PTR [rbx],rax
   140013368:	mov    rax,rbx
   14001336b:	add    rsp,0x20
   14001336f:	pop    rbx
   140013370:	ret    
   140013371:	int3   
   140013372:	int3   
   140013373:	int3   
   140013374:	int3   
   140013375:	int3   
   140013376:	int3   
   140013377:	int3   
   140013378:	int3   
   140013379:	int3   
   14001337a:	int3   
   14001337b:	int3   
   14001337c:	int3   
   14001337d:	int3   
   14001337e:	int3   
   14001337f:	int3   
   140013380:	mov    QWORD PTR [rsp+0x8],rcx
   140013385:	push   rdi
   140013386:	sub    rsp,0x30
   14001338a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140013393:	mov    QWORD PTR [rsp+0x48],rbx
   140013398:	mov    QWORD PTR [rsp+0x50],rsi
   14001339d:	movzx  esi,r9b
   1400133a1:	mov    rbx,rcx
   1400133a4:	cmp    QWORD PTR [rdx+0x18],0x8
   1400133a9:	jb     0x1400133ae
   1400133ab:	mov    rdx,QWORD PTR [rdx]
   1400133ae:	lea    rax,[rip+0x25a2b]        # 0x140038de0
   1400133b5:	mov    QWORD PTR [rcx],rax
   1400133b8:	xor    eax,eax
   1400133ba:	mov    QWORD PTR [rcx+0x8],rax
   1400133be:	mov    QWORD PTR [rcx+0x10],rax
   1400133c2:	mov    r8d,0xc8
   1400133c8:	add    rcx,0x18
   1400133cc:	call   0x14000a580
   1400133d1:	test   sil,sil
   1400133d4:	je     0x1400133e0
   1400133d6:	mov    rcx,QWORD PTR [rbx+0x18]
   1400133da:	call   0x14000a4f0
   1400133df:	nop
   1400133e0:	lea    rax,[rip+0x26a81]        # 0x140039e68
   1400133e7:	mov    QWORD PTR [rbx],rax
   1400133ea:	mov    rdx,QWORD PTR [rsp+0x60]
   1400133ef:	mov    rcx,rbx
   1400133f2:	call   0x140013480
   1400133f7:	mov    DWORD PTR [rbx+0x20],eax
   1400133fa:	mov    rax,rbx
   1400133fd:	mov    rbx,QWORD PTR [rsp+0x48]
   140013402:	mov    rsi,QWORD PTR [rsp+0x50]
   140013407:	add    rsp,0x30
   14001340b:	pop    rdi
   14001340c:	ret    
   14001340d:	int3   
   14001340e:	int3   
   14001340f:	int3   
   140013410:	mov    QWORD PTR [rsp+0x8],rbx
   140013415:	push   rdi
   140013416:	sub    rsp,0x20
   14001341a:	lea    rax,[rip+0x26a47]        # 0x140039e68
   140013421:	mov    ebx,edx
   140013423:	mov    rdi,rcx
   140013426:	mov    QWORD PTR [rcx],rax
   140013429:	call   0x140008fc0
   14001342e:	test   bl,0x1
   140013431:	je     0x14001343b
   140013433:	mov    rcx,rdi
   140013436:	call   0x140018a04
   14001343b:	mov    rax,rdi
   14001343e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013443:	add    rsp,0x20
   140013447:	pop    rdi
   140013448:	ret    
   140013449:	int3   
   14001344a:	int3   
   14001344b:	int3   
   14001344c:	int3   
   14001344d:	int3   
   14001344e:	int3   
   14001344f:	int3   
   140013450:	lea    rax,[rip+0x26a11]        # 0x140039e68
   140013457:	mov    QWORD PTR [rcx],rax
   14001345a:	jmp    0x140008fc0
   14001345f:	int3   
   140013460:	mov    dl,0x1
   140013462:	jmp    0x140013810
   140013467:	int3   
   140013468:	int3   
   140013469:	int3   
   14001346a:	int3   
   14001346b:	int3   
   14001346c:	int3   
   14001346d:	int3   
   14001346e:	int3   
   14001346f:	int3   
   140013470:	xor    edx,edx
   140013472:	jmp    0x140013810
   140013477:	int3   
   140013478:	int3   
   140013479:	int3   
   14001347a:	int3   
   14001347b:	int3   
   14001347c:	int3   
   14001347d:	int3   
   14001347e:	int3   
   14001347f:	int3   
   140013480:	rex push rbp
   140013482:	push   rsi
   140013483:	push   rdi
   140013484:	push   r14
   140013486:	push   r15
   140013488:	lea    rbp,[rsp-0x37]
   14001348d:	sub    rsp,0xb0
   140013494:	mov    QWORD PTR [rbp-0x59],0xfffffffffffffffe
   14001349c:	mov    QWORD PTR [rsp+0xf0],rbx
   1400134a4:	mov    rax,QWORD PTR [rip+0x2e1a5]        # 0x140041650
   1400134ab:	xor    rax,rsp
   1400134ae:	mov    QWORD PTR [rbp+0x2f],rax
   1400134b2:	mov    rbx,rdx
   1400134b5:	cmp    QWORD PTR [rdx+0x18],0x8
   1400134ba:	jb     0x1400134c1
   1400134bc:	mov    r9,QWORD PTR [rdx]
   1400134bf:	jmp    0x1400134c4
   1400134c1:	mov    r9,rdx
   1400134c4:	add    rcx,0x18
   1400134c8:	lea    r8,[rip+0x26861]        # 0x140039d30
   1400134cf:	mov    edx,0xc8
   1400134d4:	call   0x14000a6d0
   1400134d9:	or     esi,0xffffffff
   1400134dc:	mov    QWORD PTR [rbp+0x27],0x7
   1400134e4:	xor    r14d,r14d
   1400134e7:	mov    QWORD PTR [rbp+0x1f],r14
   1400134eb:	mov    WORD PTR [rbp+0xf],r14w
   1400134f0:	mov    edi,0x1
   1400134f5:	mov    r8d,edi
   1400134f8:	lea    rdx,[rip+0x26871]        # 0x140039d70
   1400134ff:	lea    rcx,[rbp+0xf]
   140013503:	call   0x140003d90
   140013508:	nop
   140013509:	mov    QWORD PTR [rbp-0x19],0x7
   140013511:	mov    QWORD PTR [rbp-0x21],r14
   140013515:	mov    WORD PTR [rbp-0x31],r14w
   14001351a:	mov    r8d,edi
   14001351d:	lea    rdx,[rip+0x26850]        # 0x140039d74
   140013524:	lea    rcx,[rbp-0x31]
   140013528:	call   0x140003d90
   14001352d:	nop
   14001352e:	mov    QWORD PTR [rbp-0x39],0x7
   140013536:	mov    QWORD PTR [rbp-0x41],r14
   14001353a:	mov    WORD PTR [rbp-0x51],r14w
   14001353f:	mov    r8d,edi
   140013542:	lea    rdx,[rip+0x2682f]        # 0x140039d78
   140013549:	lea    rcx,[rbp-0x51]
   14001354d:	call   0x140003d90
   140013552:	nop
   140013553:	mov    QWORD PTR [rbp+0x7],0x7
   14001355b:	mov    QWORD PTR [rbp-0x1],r14
   14001355f:	mov    WORD PTR [rbp-0x11],r14w
   140013564:	mov    r8d,edi
   140013567:	lea    rdx,[rip+0x2680e]        # 0x140039d7c
   14001356e:	lea    rcx,[rbp-0x11]
   140013572:	call   0x140003d90
   140013577:	lea    rdx,[rbp+0xf]
   14001357b:	cmp    QWORD PTR [rbp+0x27],0x8
   140013580:	cmovae rdx,QWORD PTR [rbp+0xf]
   140013585:	mov    r9,QWORD PTR [rbx+0x10]
   140013589:	mov    r15,QWORD PTR [rbx+0x18]
   14001358d:	cmp    r15,0x8
   140013591:	jb     0x140013598
   140013593:	mov    rcx,QWORD PTR [rbx]
   140013596:	jmp    0x14001359b
   140013598:	mov    rcx,rbx
   14001359b:	mov    r10,QWORD PTR [rbp+0x1f]
   14001359f:	mov    r8,r10
   1400135a2:	cmp    r9,r10
   1400135a5:	cmovb  r8,r9
   1400135a9:	test   r8,r8
   1400135ac:	jmp    0x1400135d1
   1400135ae:	xchg   ax,ax
   1400135b0:	movzx  eax,WORD PTR [rdx]
   1400135b3:	cmp    WORD PTR [rcx],ax
   1400135b6:	jne    0x1400135c5
   1400135b8:	add    rcx,0x2
   1400135bc:	add    rdx,0x2
   1400135c0:	dec    r8
   1400135c3:	jmp    0x1400135d1
   1400135c5:	mov    r8d,edi
   1400135c8:	cmp    WORD PTR [rcx],ax
   1400135cb:	cmovb  r8d,esi
   1400135cf:	jmp    0x1400135d6
   1400135d1:	jne    0x1400135b0
   1400135d3:	mov    r8d,r14d
   1400135d6:	movsxd rax,r8d
   1400135d9:	test   r8d,r8d
   1400135dc:	jne    0x1400135f0
   1400135de:	cmp    r9,r10
   1400135e1:	jae    0x1400135e7
   1400135e3:	mov    eax,esi
   1400135e5:	jmp    0x1400135f0
   1400135e7:	mov    eax,r14d
   1400135ea:	cmp    r9,r10
   1400135ed:	setne  al
   1400135f0:	mov    r14,QWORD PTR [rbp-0x39]
   1400135f4:	mov    r11,QWORD PTR [rbp-0x51]
   1400135f8:	test   eax,eax
   1400135fa:	jne    0x140013605
   1400135fc:	xor    ebx,ebx
   1400135fe:	mov    edi,ebx
   140013600:	jmp    0x14001376a
   140013605:	lea    rcx,[rbp-0x31]
   140013609:	cmp    QWORD PTR [rbp-0x19],0x8
   14001360e:	cmovae rcx,QWORD PTR [rbp-0x31]
   140013613:	cmp    r15,0x8
   140013617:	jb     0x14001361e
   140013619:	mov    rdx,QWORD PTR [rbx]
   14001361c:	jmp    0x140013621
   14001361e:	mov    rdx,rbx
   140013621:	mov    r10,QWORD PTR [rbp-0x21]
   140013625:	mov    r8,r10
   140013628:	cmp    r9,r10
   14001362b:	cmovb  r8,r9
   14001362f:	test   r8,r8
   140013632:	jmp    0x140013655
   140013634:	movzx  eax,WORD PTR [rcx]
   140013637:	cmp    WORD PTR [rdx],ax
   14001363a:	jne    0x140013649
   14001363c:	add    rdx,0x2
   140013640:	add    rcx,0x2
   140013644:	dec    r8
   140013647:	jmp    0x140013655
   140013649:	mov    r8d,edi
   14001364c:	cmp    WORD PTR [rdx],ax
   14001364f:	cmovb  r8d,esi
   140013653:	jmp    0x14001365a
   140013655:	jne    0x140013634
   140013657:	xor    r8d,r8d
   14001365a:	movsxd rax,r8d
   14001365d:	test   r8d,r8d
   140013660:	jne    0x140013673
   140013662:	cmp    r9,r10
   140013665:	jae    0x14001366b
   140013667:	mov    eax,esi
   140013669:	jmp    0x140013673
   14001366b:	xor    eax,eax
   14001366d:	cmp    r9,r10
   140013670:	setne  al
   140013673:	test   eax,eax
   140013675:	jne    0x14001367e
   140013677:	xor    ebx,ebx
   140013679:	jmp    0x14001376a
   14001367e:	lea    rcx,[rbp-0x51]
   140013682:	cmp    r14,0x8
   140013686:	cmovae rcx,r11
   14001368a:	cmp    r15,0x8
   14001368e:	jb     0x140013695
   140013690:	mov    rdx,QWORD PTR [rbx]
   140013693:	jmp    0x140013698
   140013695:	mov    rdx,rbx
   140013698:	mov    r10,QWORD PTR [rbp-0x41]
   14001369c:	mov    r8,r10
   14001369f:	cmp    r9,r10
   1400136a2:	cmovb  r8,r9
   1400136a6:	test   r8,r8
   1400136a9:	jmp    0x1400136d1
   1400136ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400136b0:	movzx  eax,WORD PTR [rcx]
   1400136b3:	cmp    WORD PTR [rdx],ax
   1400136b6:	jne    0x1400136c5
   1400136b8:	add    rdx,0x2
   1400136bc:	add    rcx,0x2
   1400136c0:	dec    r8
   1400136c3:	jmp    0x1400136d1
   1400136c5:	mov    r8d,edi
   1400136c8:	cmp    WORD PTR [rdx],ax
   1400136cb:	cmovb  r8d,esi
   1400136cf:	jmp    0x1400136d6
   1400136d1:	jne    0x1400136b0
   1400136d3:	xor    r8d,r8d
   1400136d6:	movsxd rax,r8d
   1400136d9:	test   r8d,r8d
   1400136dc:	jne    0x1400136ef
   1400136de:	cmp    r9,r10
   1400136e1:	jae    0x1400136e7
   1400136e3:	mov    eax,esi
   1400136e5:	jmp    0x1400136ef
   1400136e7:	xor    eax,eax
   1400136e9:	cmp    r9,r10
   1400136ec:	setne  al
   1400136ef:	test   eax,eax
   1400136f1:	jne    0x1400136fa
   1400136f3:	lea    edi,[rax+0x2]
   1400136f6:	xor    ebx,ebx
   1400136f8:	jmp    0x14001376a
   1400136fa:	lea    rcx,[rbp-0x11]
   1400136fe:	cmp    QWORD PTR [rbp+0x7],0x8
   140013703:	cmovae rcx,QWORD PTR [rbp-0x11]
   140013708:	cmp    r15,0x8
   14001370c:	jb     0x140013711
   14001370e:	mov    rbx,QWORD PTR [rbx]
   140013711:	mov    r8,QWORD PTR [rbp-0x1]
   140013715:	mov    rdx,r8
   140013718:	cmp    r9,r8
   14001371b:	cmovb  rdx,r9
   14001371f:	test   rdx,rdx
   140013722:	jmp    0x140013740
   140013724:	movzx  eax,WORD PTR [rcx]
   140013727:	cmp    WORD PTR [rbx],ax
   14001372a:	jne    0x140013739
   14001372c:	add    rbx,0x2
   140013730:	add    rcx,0x2
   140013734:	dec    rdx
   140013737:	jmp    0x140013740
   140013739:	cmovb  edi,esi
   14001373c:	xor    ebx,ebx
   14001373e:	jmp    0x140013746
   140013740:	jne    0x140013724
   140013742:	xor    ebx,ebx
   140013744:	mov    edi,ebx
   140013746:	movsxd rax,edi
   140013749:	test   edi,edi
   14001374b:	jne    0x14001375e
   14001374d:	cmp    r9,r8
   140013750:	jae    0x140013756
   140013752:	mov    eax,esi
   140013754:	jmp    0x14001375e
   140013756:	mov    eax,ebx
   140013758:	cmp    r9,r8
   14001375b:	setne  al
   14001375e:	test   eax,eax
   140013760:	mov    eax,0x3
   140013765:	cmove  esi,eax
   140013768:	mov    edi,esi
   14001376a:	cmp    QWORD PTR [rbp+0x7],0x8
   14001376f:	jb     0x140013782
   140013771:	mov    rcx,QWORD PTR [rbp-0x11]
   140013775:	call   0x140018a04
   14001377a:	mov    r14,QWORD PTR [rbp-0x39]
   14001377e:	mov    r11,QWORD PTR [rbp-0x51]
   140013782:	mov    QWORD PTR [rbp+0x7],0x7
   14001378a:	mov    QWORD PTR [rbp-0x1],rbx
   14001378e:	mov    WORD PTR [rbp-0x11],bx
   140013792:	cmp    r14,0x8
   140013796:	jb     0x1400137a0
   140013798:	mov    rcx,r11
   14001379b:	call   0x140018a04
   1400137a0:	mov    QWORD PTR [rbp-0x39],0x7
   1400137a8:	mov    QWORD PTR [rbp-0x41],rbx
   1400137ac:	mov    WORD PTR [rbp-0x51],bx
   1400137b0:	cmp    QWORD PTR [rbp-0x19],0x8
   1400137b5:	jb     0x1400137c0
   1400137b7:	mov    rcx,QWORD PTR [rbp-0x31]
   1400137bb:	call   0x140018a04
   1400137c0:	mov    QWORD PTR [rbp-0x19],0x7
   1400137c8:	mov    QWORD PTR [rbp-0x21],rbx
   1400137cc:	mov    WORD PTR [rbp-0x31],bx
   1400137d0:	cmp    QWORD PTR [rbp+0x27],0x8
   1400137d5:	jb     0x1400137e0
   1400137d7:	mov    rcx,QWORD PTR [rbp+0xf]
   1400137db:	call   0x140018a04
   1400137e0:	mov    eax,edi
   1400137e2:	mov    rcx,QWORD PTR [rbp+0x2f]
   1400137e6:	xor    rcx,rsp
   1400137e9:	call   0x1400187d0
   1400137ee:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400137f6:	add    rsp,0xb0
   1400137fd:	pop    r15
   1400137ff:	pop    r14
   140013801:	pop    rdi
   140013802:	pop    rsi
   140013803:	pop    rbp
   140013804:	ret    
   140013805:	int3   
   140013806:	int3   
   140013807:	int3   
   140013808:	int3   
   140013809:	int3   
   14001380a:	int3   
   14001380b:	int3   
   14001380c:	int3   
   14001380d:	int3   
   14001380e:	int3   
   14001380f:	int3   
   140013810:	mov    QWORD PTR [rsp+0x18],rbx
   140013815:	push   rdi
   140013816:	sub    rsp,0x30
   14001381a:	mov    rax,QWORD PTR [rip+0x2de2f]        # 0x140041650
   140013821:	xor    rax,rsp
   140013824:	mov    QWORD PTR [rsp+0x28],rax
   140013829:	mov    eax,DWORD PTR [rcx+0x20]
   14001382c:	movzx  ebx,dl
   14001382f:	mov    rdi,rcx
   140013832:	cmp    eax,0x3
   140013835:	jne    0x14001383b
   140013837:	test   dl,dl
   140013839:	jne    0x140013844
   14001383b:	cmp    eax,0x2
   14001383e:	jne    0x14001385f
   140013840:	test   bl,bl
   140013842:	jne    0x14001385f
   140013844:	lea    r8,[rip+0x26535]        # 0x140039d80
   14001384b:	movzx  r9d,bl
   14001384f:	add    rcx,0x18
   140013853:	mov    edx,0xc8
   140013858:	call   0x14000a6d0
   14001385d:	jmp    0x1400138aa
   14001385f:	lea    r8,[rip+0x2655a]        # 0x140039dc0
   140013866:	movzx  r9d,bl
   14001386a:	add    rcx,0x18
   14001386e:	mov    edx,0xc8
   140013873:	call   0x14000a6d0
   140013878:	xor    eax,eax
   14001387a:	test   bl,bl
   14001387c:	setne  al
   14001387f:	lea    r8,[rsp+0x20]
   140013884:	mov    edx,0x200
   140013889:	add    eax,0x2
   14001388c:	mov    rcx,rdi
   14001388f:	mov    DWORD PTR [rsp+0x20],eax
   140013893:	call   0x1400138d0
   140013898:	lea    r8,[rsp+0x20]
   14001389d:	mov    edx,0x100
   1400138a2:	mov    rcx,rdi
   1400138a5:	call   0x1400138d0
   1400138aa:	mov    rcx,QWORD PTR [rsp+0x28]
   1400138af:	xor    rcx,rsp
   1400138b2:	call   0x1400187d0
   1400138b7:	mov    rbx,QWORD PTR [rsp+0x50]
   1400138bc:	add    rsp,0x30
   1400138c0:	pop    rdi
   1400138c1:	ret    
   1400138c2:	int3   
   1400138c3:	int3   
   1400138c4:	int3   
   1400138c5:	int3   
   1400138c6:	int3   
   1400138c7:	int3   
   1400138c8:	int3   
   1400138c9:	int3   
   1400138ca:	int3   
   1400138cb:	int3   
   1400138cc:	int3   
   1400138cd:	int3   
   1400138ce:	int3   
   1400138cf:	int3   
   1400138d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400138d5:	push   rbp
   1400138d6:	push   rsi
   1400138d7:	push   rdi
   1400138d8:	sub    rsp,0x40
   1400138dc:	mov    rax,QWORD PTR [rip+0x2dd6d]        # 0x140041650
   1400138e3:	xor    rax,rsp
   1400138e6:	mov    QWORD PTR [rsp+0x38],rax
   1400138eb:	cmp    QWORD PTR [rip+0x2f2fd],0x8        # 0x140042bf0
   1400138f3:	mov    edi,edx
   1400138f5:	lea    rax,[rsp+0x30]
   1400138fa:	mov    r9d,edi
   1400138fd:	mov    rbp,r8
   140013900:	mov    rsi,rcx
   140013903:	lea    rdx,[rip+0x2f2ce]        # 0x140042bd8
   14001390a:	mov    rcx,0xffffffff80000002
   140013911:	mov    QWORD PTR [rsp+0x30],0x0
   14001391a:	cmovae rdx,QWORD PTR [rip+0x2f2b6]        # 0x140042bd8
   140013922:	or     r9d,0x20006
   140013929:	xor    r8d,r8d
   14001392c:	mov    QWORD PTR [rsp+0x20],rax
   140013931:	call   QWORD PTR [rip+0x1b6d1]        # 0x14002f008
   140013937:	mov    ebx,eax
   140013939:	test   eax,eax
   14001393b:	jne    0x140013980
   14001393d:	cmp    QWORD PTR [rip+0x2f2cb],0x8        # 0x140042c10
   140013945:	mov    rcx,QWORD PTR [rsp+0x30]
   14001394a:	lea    rdx,[rip+0x2f2a7]        # 0x140042bf8
   140013951:	cmovae rdx,QWORD PTR [rip+0x2f29f]        # 0x140042bf8
   140013959:	lea    r9d,[rax+0x4]
   14001395d:	xor    r8d,r8d
   140013960:	mov    DWORD PTR [rsp+0x28],0x4
   140013968:	mov    QWORD PTR [rsp+0x20],rbp
   14001396d:	call   QWORD PTR [rip+0x1b68d]        # 0x14002f000
   140013973:	mov    rcx,QWORD PTR [rsp+0x30]
   140013978:	mov    ebx,eax
   14001397a:	call   QWORD PTR [rip+0x1b700]        # 0x14002f080
   140013980:	test   ebx,0xfffffffd
   140013986:	je     0x1400139b6
   140013988:	mov    eax,0x40
   14001398d:	mov    r9d,0x20
   140013993:	cmp    edi,0x100
   140013999:	lea    rcx,[rsi+0x18]
   14001399d:	lea    r8,[rip+0x2645c]        # 0x140039e00
   1400139a4:	mov    edx,0xc8
   1400139a9:	cmove  r9d,eax
   1400139ad:	mov    DWORD PTR [rsp+0x20],ebx
   1400139b1:	call   0x14000a6d0
   1400139b6:	mov    rcx,QWORD PTR [rsp+0x38]
   1400139bb:	xor    rcx,rsp
   1400139be:	call   0x1400187d0
   1400139c3:	mov    rbx,QWORD PTR [rsp+0x78]
   1400139c8:	add    rsp,0x40
   1400139cc:	pop    rdi
   1400139cd:	pop    rsi
   1400139ce:	pop    rbp
   1400139cf:	ret    
   1400139d0:	lea    rax,[rip+0x26499]        # 0x140039e70
   1400139d7:	ret    
   1400139d8:	int3   
   1400139d9:	int3   
   1400139da:	int3   
   1400139db:	int3   
   1400139dc:	int3   
   1400139dd:	int3   
   1400139de:	int3   
   1400139df:	int3   
   1400139e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400139e5:	push   rdi
   1400139e6:	sub    rsp,0x30
   1400139ea:	xor    ebx,ebx
   1400139ec:	mov    ecx,r8d
   1400139ef:	mov    rdi,rdx
   1400139f2:	mov    DWORD PTR [rsp+0x20],ebx
   1400139f6:	call   0x1400141d0
   1400139fb:	mov    QWORD PTR [rdi+0x18],0xf
   140013a03:	test   rax,rax
   140013a06:	mov    QWORD PTR [rdi+0x10],rbx
   140013a0a:	lea    rdx,[rip+0x261df]        # 0x140039bf0
   140013a11:	cmovne rdx,rax
   140013a15:	mov    BYTE PTR [rdi],bl
   140013a17:	cmp    BYTE PTR [rdx],bl
   140013a19:	je     0x140013a29
   140013a1b:	or     rbx,0xffffffffffffffff
   140013a1f:	nop
   140013a20:	inc    rbx
   140013a23:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140013a27:	jne    0x140013a20
   140013a29:	mov    r8,rbx
   140013a2c:	mov    rcx,rdi
   140013a2f:	call   0x140008e50
   140013a34:	mov    rbx,QWORD PTR [rsp+0x40]
   140013a39:	mov    rax,rdi
   140013a3c:	add    rsp,0x30
   140013a40:	pop    rdi
   140013a41:	ret    
   140013a42:	int3   
   140013a43:	int3   
   140013a44:	int3   
   140013a45:	int3   
   140013a46:	int3   
   140013a47:	int3   
   140013a48:	int3   
   140013a49:	int3   
   140013a4a:	int3   
   140013a4b:	int3   
   140013a4c:	int3   
   140013a4d:	int3   
   140013a4e:	int3   
   140013a4f:	int3   
   140013a50:	mov    QWORD PTR [rsp+0x8],rbx
   140013a55:	push   rdi
   140013a56:	sub    rsp,0x20
   140013a5a:	mov    ecx,r8d
   140013a5d:	mov    edi,r8d
   140013a60:	mov    rbx,rdx
   140013a63:	call   0x1400141a8
   140013a68:	mov    DWORD PTR [rbx],edi
   140013a6a:	test   rax,rax
   140013a6d:	lea    rax,[rip+0x2f1ac]        # 0x140042c20
   140013a74:	jne    0x140013a7d
   140013a76:	lea    rax,[rip+0x2f19b]        # 0x140042c18
   140013a7d:	mov    QWORD PTR [rbx+0x8],rax
   140013a81:	mov    rax,rbx
   140013a84:	mov    rbx,QWORD PTR [rsp+0x30]
   140013a89:	add    rsp,0x20
   140013a8d:	pop    rdi
   140013a8e:	ret    
   140013a8f:	lea    rax,[rip+0x2f91a]        # 0x1400433b0
   140013a96:	jmp    0x140013a9b
   140013a9b:	mov    QWORD PTR [rsp+0x8],rcx
   140013aa0:	mov    QWORD PTR [rsp+0x10],rdx
   140013aa5:	mov    QWORD PTR [rsp+0x18],r8
   140013aaa:	mov    QWORD PTR [rsp+0x20],r9
   140013aaf:	sub    rsp,0x68
   140013ab3:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140013ab9:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140013abf:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140013ac5:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140013acb:	mov    rdx,rax
   140013ace:	lea    rcx,[rip+0x2c1d7]        # 0x14003fcac
   140013ad5:	call   0x140013ca4
   140013ada:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140013ae0:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140013ae6:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140013aec:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140013af2:	mov    rcx,QWORD PTR [rsp+0x70]
   140013af7:	mov    rdx,QWORD PTR [rsp+0x78]
   140013afc:	mov    r8,QWORD PTR [rsp+0x80]
   140013b04:	mov    r9,QWORD PTR [rsp+0x88]
   140013b0c:	add    rsp,0x68
   140013b10:	jmp    0x140013b12
   140013b12:	jmp    rax
   140013b14:	lea    rax,[rip+0x2f88d]        # 0x1400433a8
   140013b1b:	jmp    0x140013a9b
   140013b20:	lea    rax,[rip+0x2f861]        # 0x140043388
   140013b27:	jmp    0x140013a9b
   140013b2c:	lea    rax,[rip+0x2f85d]        # 0x140043390
   140013b33:	jmp    0x140013a9b
   140013b38:	lea    rax,[rip+0x2f859]        # 0x140043398
   140013b3f:	jmp    0x140013a9b
   140013b44:	lea    rax,[rip+0x2f855]        # 0x1400433a0
   140013b4b:	jmp    0x140013a9b
   140013b50:	lea    rax,[rip+0x2f891]        # 0x1400433e8
   140013b57:	jmp    0x140013b5c
   140013b5c:	mov    QWORD PTR [rsp+0x8],rcx
   140013b61:	mov    QWORD PTR [rsp+0x10],rdx
   140013b66:	mov    QWORD PTR [rsp+0x18],r8
   140013b6b:	mov    QWORD PTR [rsp+0x20],r9
   140013b70:	sub    rsp,0x68
   140013b74:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140013b7a:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140013b80:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140013b86:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140013b8c:	mov    rdx,rax
   140013b8f:	lea    rcx,[rip+0x2c136]        # 0x14003fccc
   140013b96:	call   0x140013ca4
   140013b9b:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140013ba1:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140013ba7:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140013bad:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140013bb3:	mov    rcx,QWORD PTR [rsp+0x70]
   140013bb8:	mov    rdx,QWORD PTR [rsp+0x78]
   140013bbd:	mov    r8,QWORD PTR [rsp+0x80]
   140013bc5:	mov    r9,QWORD PTR [rsp+0x88]
   140013bcd:	add    rsp,0x68
   140013bd1:	jmp    0x140013bd3
   140013bd3:	jmp    rax
   140013bd5:	lea    rax,[rip+0x2f814]        # 0x1400433f0
   140013bdc:	jmp    0x140013b5c
   140013be1:	lea    rax,[rip+0x2f7d8]        # 0x1400433c0
   140013be8:	jmp    0x140013b5c
   140013bed:	lea    rax,[rip+0x2f7d4]        # 0x1400433c8
   140013bf4:	jmp    0x140013b5c
   140013bf9:	lea    rax,[rip+0x2f7d0]        # 0x1400433d0
   140013c00:	jmp    0x140013b5c
   140013c05:	lea    rax,[rip+0x2f7cc]        # 0x1400433d8
   140013c0c:	jmp    0x140013b5c
   140013c11:	lea    rax,[rip+0x2f7c8]        # 0x1400433e0
   140013c18:	jmp    0x140013b5c
   140013c1d:	lea    rax,[rip+0x2f754]        # 0x140043378
   140013c24:	jmp    0x140013c29
   140013c29:	mov    QWORD PTR [rsp+0x8],rcx
   140013c2e:	mov    QWORD PTR [rsp+0x10],rdx
   140013c33:	mov    QWORD PTR [rsp+0x18],r8
   140013c38:	mov    QWORD PTR [rsp+0x20],r9
   140013c3d:	sub    rsp,0x68
   140013c41:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140013c47:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140013c4d:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140013c53:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140013c59:	mov    rdx,rax
   140013c5c:	lea    rcx,[rip+0x2c089]        # 0x14003fcec
   140013c63:	call   0x140013ca4
   140013c68:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140013c6e:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140013c74:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140013c7a:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140013c80:	mov    rcx,QWORD PTR [rsp+0x70]
   140013c85:	mov    rdx,QWORD PTR [rsp+0x78]
   140013c8a:	mov    r8,QWORD PTR [rsp+0x80]
   140013c92:	mov    r9,QWORD PTR [rsp+0x88]
   140013c9a:	add    rsp,0x68
   140013c9e:	jmp    0x140013ca0
   140013ca0:	jmp    rax
   140013ca2:	int3   
   140013ca3:	int3   
   140013ca4:	rex push rbp
   140013ca6:	push   rbx
   140013ca7:	push   rsi
   140013ca8:	push   rdi
   140013ca9:	push   r12
   140013cab:	push   r13
   140013cad:	push   r14
   140013caf:	push   r15
   140013cb1:	mov    rbp,rsp
   140013cb4:	sub    rsp,0x78
   140013cb8:	mov    eax,DWORD PTR [rcx+0x4]
   140013cbb:	mov    r9d,DWORD PTR [rcx]
   140013cbe:	mov    r15d,DWORD PTR [rcx+0x8]
   140013cc2:	mov    r10d,DWORD PTR [rcx+0xc]
   140013cc6:	and    DWORD PTR [rbp-0x38],0x0
   140013cca:	mov    r14,rcx
   140013ccd:	mov    r13d,DWORD PTR [r14+0x14]
   140013cd1:	mov    ecx,DWORD PTR [rcx+0x10]
   140013cd4:	mov    r12,rdx
   140013cd7:	lea    rdx,[rip+0xfffffffffffec322]        # 0x140000000
   140013cde:	and    r9d,0x1
   140013ce2:	mov    DWORD PTR [rbp-0x58],0x48
   140013ce9:	add    rax,rdx
   140013cec:	add    r13,rdx
   140013cef:	add    r15,rdx
   140013cf2:	add    r10,rdx
   140013cf5:	add    rcx,rdx
   140013cf8:	mov    edx,DWORD PTR [r14+0x1c]
   140013cfc:	mov    QWORD PTR [rbp-0x40],rax
   140013d00:	xor    eax,eax
   140013d02:	mov    QWORD PTR [rbp-0x50],r14
   140013d06:	and    QWORD PTR [rbp-0x28],rax
   140013d0a:	and    QWORD PTR [rbp-0x20],rax
   140013d0e:	and    DWORD PTR [rbp-0x18],eax
   140013d11:	mov    DWORD PTR [rbp+0x48],edx
   140013d14:	mov    QWORD PTR [rbp-0x48],r12
   140013d18:	mov    QWORD PTR [rbp-0x30],rax
   140013d1c:	test   r9b,r9b
   140013d1f:	jne    0x140013d45
   140013d21:	xor    edx,edx
   140013d23:	lea    rax,[rbp-0x58]
   140013d27:	lea    r9,[rbp+0x50]
   140013d2b:	lea    r8d,[rdx+0x1]
   140013d2f:	mov    ecx,0xc06d0057
   140013d34:	mov    QWORD PTR [rbp+0x50],rax
   140013d38:	call   QWORD PTR [rip+0x1b4c2]        # 0x14002f200
   140013d3e:	xor    eax,eax
   140013d40:	jmp    0x140013f2a
   140013d45:	mov    rdi,QWORD PTR [r15]
   140013d48:	movabs rax,0x8000000000000000
   140013d52:	mov    rsi,r12
   140013d55:	sub    rsi,r10
   140013d58:	sar    rsi,0x3
   140013d5c:	mov    esi,esi
   140013d5e:	test   QWORD PTR [rcx+rsi*8],rax
   140013d62:	mov    eax,0x0
   140013d67:	sete   al
   140013d6a:	mov    DWORD PTR [rbp-0x38],eax
   140013d6d:	test   eax,eax
   140013d6f:	je     0x140013d84
   140013d71:	mov    eax,DWORD PTR [rcx+rsi*8]
   140013d74:	lea    rcx,[rip+0xfffffffffffec287]        # 0x140000002
   140013d7b:	add    rax,rcx
   140013d7e:	mov    QWORD PTR [rbp-0x30],rax
   140013d82:	jmp    0x140013d8b
   140013d84:	movzx  eax,WORD PTR [rcx+rsi*8]
   140013d88:	mov    DWORD PTR [rbp-0x30],eax
   140013d8b:	mov    rax,QWORD PTR [rip+0x2ed56]        # 0x140042ae8
   140013d92:	xor    ebx,ebx
   140013d94:	test   rax,rax
   140013d97:	je     0x140013db4
   140013d99:	lea    rdx,[rbp-0x58]
   140013d9d:	xor    ecx,ecx
   140013d9f:	call   rax
   140013da1:	mov    rbx,rax
   140013da4:	test   rax,rax
   140013da7:	jne    0x140013f04
   140013dad:	mov    rax,QWORD PTR [rip+0x2ed34]        # 0x140042ae8
   140013db4:	test   rdi,rdi
   140013db7:	jne    0x140013e51
   140013dbd:	test   rax,rax
   140013dc0:	je     0x140013dd3
   140013dc2:	lea    rdx,[rbp-0x58]
   140013dc6:	lea    ecx,[rdi+0x1]
   140013dc9:	call   rax
   140013dcb:	mov    rdi,rax
   140013dce:	test   rax,rax
   140013dd1:	jne    0x140013e36
   140013dd3:	mov    rcx,QWORD PTR [rbp-0x40]
   140013dd7:	xor    r8d,r8d
   140013dda:	xor    edx,edx
   140013ddc:	call   QWORD PTR [rip+0x1b36e]        # 0x14002f150
   140013de2:	mov    rdi,rax
   140013de5:	test   rax,rax
   140013de8:	jne    0x140013e36
   140013dea:	call   QWORD PTR [rip+0x1b3b0]        # 0x14002f1a0
   140013df0:	mov    DWORD PTR [rbp-0x18],eax
   140013df3:	mov    rax,QWORD PTR [rip+0x2f61e]        # 0x140043418
   140013dfa:	test   rax,rax
   140013dfd:	je     0x140013e10
   140013dff:	lea    rdx,[rbp-0x58]
   140013e03:	lea    ecx,[rdi+0x3]
   140013e06:	call   rax
   140013e08:	mov    rdi,rax
   140013e0b:	test   rax,rax
   140013e0e:	jne    0x140013e36
   140013e10:	xor    edx,edx
   140013e12:	lea    rax,[rbp-0x58]
   140013e16:	lea    r9,[rbp+0x58]
   140013e1a:	lea    r8d,[rdx+0x1]
   140013e1e:	mov    ecx,0xc06d007e
   140013e23:	mov    QWORD PTR [rbp+0x58],rax
   140013e27:	call   QWORD PTR [rip+0x1b3d3]        # 0x14002f200
   140013e2d:	mov    rax,QWORD PTR [rbp-0x20]
   140013e31:	jmp    0x140013f2a
   140013e36:	mov    rax,rdi
   140013e39:	xchg   QWORD PTR [r15],rax
   140013e3c:	cmp    rax,rdi
   140013e3f:	jne    0x140013e4a
   140013e41:	mov    rcx,rdi
   140013e44:	call   QWORD PTR [rip+0x1b27e]        # 0x14002f0c8
   140013e4a:	mov    rax,QWORD PTR [rip+0x2ec97]        # 0x140042ae8
   140013e51:	mov    QWORD PTR [rbp-0x28],rdi
   140013e55:	test   rax,rax
   140013e58:	je     0x140013e68
   140013e5a:	lea    rdx,[rbp-0x58]
   140013e5e:	mov    ecx,0x2
   140013e63:	call   rax
   140013e65:	mov    rbx,rax
   140013e68:	test   rbx,rbx
   140013e6b:	jne    0x140013f00
   140013e71:	cmp    DWORD PTR [r14+0x14],ebx
   140013e75:	je     0x140013ea4
   140013e77:	cmp    DWORD PTR [r14+0x1c],ebx
   140013e7b:	je     0x140013ea4
   140013e7d:	movsxd rax,DWORD PTR [rdi+0x3c]
   140013e81:	cmp    DWORD PTR [rax+rdi*1],0x4550
   140013e88:	jne    0x140013ea4
   140013e8a:	mov    ecx,DWORD PTR [rbp+0x48]
   140013e8d:	cmp    DWORD PTR [rax+rdi*1+0x8],ecx
   140013e91:	jne    0x140013ea4
   140013e93:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   140013e98:	jne    0x140013ea4
   140013e9a:	mov    rbx,QWORD PTR [r13+rsi*8+0x0]
   140013e9f:	test   rbx,rbx
   140013ea2:	jne    0x140013f00
   140013ea4:	mov    rdx,QWORD PTR [rbp-0x30]
   140013ea8:	mov    rcx,rdi
   140013eab:	call   QWORD PTR [rip+0x1b22f]        # 0x14002f0e0
   140013eb1:	mov    rbx,rax
   140013eb4:	test   rax,rax
   140013eb7:	jne    0x140013f00
   140013eb9:	call   QWORD PTR [rip+0x1b2e1]        # 0x14002f1a0
   140013ebf:	mov    DWORD PTR [rbp-0x18],eax
   140013ec2:	mov    rax,QWORD PTR [rip+0x2f54f]        # 0x140043418
   140013ec9:	test   rax,rax
   140013ecc:	je     0x140013edf
   140013ece:	lea    rdx,[rbp-0x58]
   140013ed2:	lea    ecx,[rbx+0x4]
   140013ed5:	call   rax
   140013ed7:	mov    rbx,rax
   140013eda:	test   rax,rax
   140013edd:	jne    0x140013f00
   140013edf:	xor    edx,edx
   140013ee1:	lea    rax,[rbp-0x58]
   140013ee5:	lea    r9,[rbp+0x60]
   140013ee9:	lea    r8d,[rdx+0x1]
   140013eed:	mov    ecx,0xc06d007f
   140013ef2:	mov    QWORD PTR [rbp+0x60],rax
   140013ef6:	call   QWORD PTR [rip+0x1b304]        # 0x14002f200
   140013efc:	mov    rbx,QWORD PTR [rbp-0x20]
   140013f00:	mov    QWORD PTR [r12],rbx
   140013f04:	mov    rax,QWORD PTR [rip+0x2ebdd]        # 0x140042ae8
   140013f0b:	test   rax,rax
   140013f0e:	je     0x140013f27
   140013f10:	and    DWORD PTR [rbp-0x18],0x0
   140013f14:	lea    rdx,[rbp-0x58]
   140013f18:	mov    ecx,0x5
   140013f1d:	mov    QWORD PTR [rbp-0x28],rdi
   140013f21:	mov    QWORD PTR [rbp-0x20],rbx
   140013f25:	call   rax
   140013f27:	mov    rax,rbx
   140013f2a:	add    rsp,0x78
   140013f2e:	pop    r15
   140013f30:	pop    r14
   140013f32:	pop    r13
   140013f34:	pop    r12
   140013f36:	pop    rdi
   140013f37:	pop    rsi
   140013f38:	pop    rbx
   140013f39:	pop    rbp
   140013f3a:	ret    
   140013f3b:	int3   
   140013f3c:	rex push rbx
   140013f3e:	sub    rsp,0x20
   140013f42:	mov    rbx,rcx
   140013f45:	call   0x14001a02c
   140013f4a:	lea    rax,[rip+0x1b607]        # 0x14002f558
   140013f51:	mov    QWORD PTR [rbx],rax
   140013f54:	mov    rax,rbx
   140013f57:	add    rsp,0x20
   140013f5b:	pop    rbx
   140013f5c:	ret    
   140013f5d:	int3   
   140013f5e:	int3   
   140013f5f:	int3   
   140013f60:	rex push rbx
   140013f62:	sub    rsp,0x20
   140013f66:	mov    rbx,rcx
   140013f69:	call   0x14001a02c
   140013f6e:	lea    rax,[rip+0x1b623]        # 0x14002f598
   140013f75:	mov    QWORD PTR [rbx],rax
   140013f78:	mov    rax,rbx
   140013f7b:	add    rsp,0x20
   140013f7f:	pop    rbx
   140013f80:	ret    
   140013f81:	int3   
   140013f82:	int3   
   140013f83:	int3   
   140013f84:	rex push rbx
   140013f86:	sub    rsp,0x20
   140013f8a:	mov    rbx,rcx
   140013f8d:	call   0x14001a02c
   140013f92:	lea    rax,[rip+0x1b5e7]        # 0x14002f580
   140013f99:	mov    QWORD PTR [rbx],rax
   140013f9c:	mov    rax,rbx
   140013f9f:	add    rsp,0x20
   140013fa3:	pop    rbx
   140013fa4:	ret    
   140013fa5:	int3   
   140013fa6:	int3   
   140013fa7:	int3   
   140013fa8:	rex push rbx
   140013faa:	sub    rsp,0x20
   140013fae:	mov    rbx,rcx
   140013fb1:	call   0x14001a02c
   140013fb6:	lea    rax,[rip+0x1b5f3]        # 0x14002f5b0
   140013fbd:	mov    QWORD PTR [rbx],rax
   140013fc0:	mov    rax,rbx
   140013fc3:	add    rsp,0x20
   140013fc7:	pop    rbx
   140013fc8:	ret    
   140013fc9:	int3   
   140013fca:	int3   
   140013fcb:	int3   
   140013fcc:	lea    rax,[rip+0x1b585]        # 0x14002f558
   140013fd3:	mov    QWORD PTR [rcx],rax
   140013fd6:	jmp    0x14001a058
   140013fdb:	int3   
   140013fdc:	mov    QWORD PTR [rsp+0x8],rbx
   140013fe1:	push   rdi
   140013fe2:	sub    rsp,0x20
   140013fe6:	lea    rax,[rip+0x1b56b]        # 0x14002f558
   140013fed:	mov    ebx,edx
   140013fef:	mov    rdi,rcx
   140013ff2:	mov    QWORD PTR [rcx],rax
   140013ff5:	call   0x14001a058
   140013ffa:	test   bl,0x1
   140013ffd:	je     0x140014007
   140013fff:	mov    rcx,rdi
   140014002:	call   0x140018a04
   140014007:	mov    rax,rdi
   14001400a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001400f:	add    rsp,0x20
   140014013:	pop    rdi
   140014014:	ret    
   140014015:	int3   
   140014016:	int3   
   140014017:	int3   
   140014018:	sub    rsp,0x48
   14001401c:	lea    rax,[rip+0x1b545]        # 0x14002f568
   140014023:	lea    rdx,[rsp+0x50]
   140014028:	lea    rcx,[rsp+0x20]
   14001402d:	mov    r8d,0x1
   140014033:	mov    QWORD PTR [rsp+0x50],rax
   140014038:	call   0x14001a010
   14001403d:	lea    rax,[rip+0x1b514]        # 0x14002f558
   140014044:	lea    rdx,[rip+0x2b8fd]        # 0x14003f948
   14001404b:	lea    rcx,[rsp+0x20]
   140014050:	mov    QWORD PTR [rsp+0x20],rax
   140014055:	call   0x14001a628
   14001405a:	int3   
   14001405b:	int3   
   14001405c:	sub    rsp,0x48
   140014060:	mov    QWORD PTR [rsp+0x50],rcx
   140014065:	lea    rdx,[rsp+0x50]
   14001406a:	lea    rcx,[rsp+0x20]
   14001406f:	call   0x140019fe0
   140014074:	lea    rax,[rip+0x1b51d]        # 0x14002f598
   14001407b:	lea    rdx,[rip+0x2b94e]        # 0x14003f9d0
   140014082:	lea    rcx,[rsp+0x20]
   140014087:	mov    QWORD PTR [rsp+0x20],rax
   14001408c:	call   0x14001a628
   140014091:	int3   
   140014092:	int3   
   140014093:	int3   
   140014094:	sub    rsp,0x48
   140014098:	mov    QWORD PTR [rsp+0x50],rcx
   14001409d:	lea    rdx,[rsp+0x50]
   1400140a2:	lea    rcx,[rsp+0x20]
   1400140a7:	call   0x140019fe0
   1400140ac:	lea    rax,[rip+0x1b4fd]        # 0x14002f5b0
   1400140b3:	lea    rdx,[rip+0x2b97e]        # 0x14003fa38
   1400140ba:	lea    rcx,[rsp+0x20]
   1400140bf:	mov    QWORD PTR [rsp+0x20],rax
   1400140c4:	call   0x14001a628
   1400140c9:	int3   
   1400140ca:	int3   
   1400140cb:	int3   
   1400140cc:	jmp    0x140018a0c
   1400140d1:	int3   
   1400140d2:	int3   
   1400140d3:	int3   
   1400140d4:	rex push rbx
   1400140d6:	sub    rsp,0x20
   1400140da:	mov    rax,QWORD PTR [rcx+0x8]
   1400140de:	mov    rbx,rcx
   1400140e1:	test   rax,rax
   1400140e4:	je     0x1400140f6
   1400140e6:	lea    rcx,[rip+0x2f3a3]        # 0x140043490
   1400140ed:	dec    BYTE PTR [rax+rcx*1]
   1400140f0:	cmp    BYTE PTR [rax+rcx*1],0x0
   1400140f4:	jg     0x140014130
   1400140f6:	mov    rcx,rbx
   1400140f9:	call   0x140014138
   1400140fe:	mov    rbx,QWORD PTR [rbx+0x40]
   140014102:	test   rbx,rbx
   140014105:	je     0x140014130
   140014107:	mov    rcx,QWORD PTR [rbx]
   14001410a:	test   rcx,rcx
   14001410d:	je     0x140014128
   14001410f:	mov    rax,QWORD PTR [rcx]
   140014112:	call   QWORD PTR [rax+0x10]
   140014115:	test   rax,rax
   140014118:	je     0x140014128
   14001411a:	mov    r8,QWORD PTR [rax]
   14001411d:	mov    edx,0x1
   140014122:	mov    rcx,rax
   140014125:	call   QWORD PTR [r8]
   140014128:	mov    rcx,rbx
   14001412b:	call   0x140018a04
   140014130:	add    rsp,0x20
   140014134:	pop    rbx
   140014135:	ret    
   140014136:	int3   
   140014137:	int3   
   140014138:	mov    QWORD PTR [rsp+0x8],rbx
   14001413d:	push   rdi
   14001413e:	sub    rsp,0x20
   140014142:	mov    rbx,QWORD PTR [rcx+0x38]
   140014146:	mov    rdi,rcx
   140014149:	jmp    0x14001415a
   14001414b:	mov    r8d,DWORD PTR [rbx+0x8]
   14001414f:	mov    rdx,rdi
   140014152:	xor    ecx,ecx
   140014154:	call   QWORD PTR [rbx+0x10]
   140014157:	mov    rbx,QWORD PTR [rbx]
   14001415a:	test   rbx,rbx
   14001415d:	jne    0x14001414b
   14001415f:	mov    rcx,QWORD PTR [rdi+0x30]
   140014163:	test   rcx,rcx
   140014166:	je     0x140014178
   140014168:	mov    rbx,QWORD PTR [rcx]
   14001416b:	call   0x140018a04
   140014170:	mov    rcx,rbx
   140014173:	test   rbx,rbx
   140014176:	jne    0x140014168
   140014178:	mov    rcx,QWORD PTR [rdi+0x38]
   14001417c:	and    QWORD PTR [rdi+0x30],0x0
   140014181:	test   rcx,rcx
   140014184:	je     0x140014196
   140014186:	mov    rbx,QWORD PTR [rcx]
   140014189:	call   0x140018a04
   14001418e:	mov    rcx,rbx
   140014191:	test   rbx,rbx
   140014194:	jne    0x140014186
   140014196:	and    QWORD PTR [rdi+0x38],0x0
   14001419b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400141a0:	add    rsp,0x20
   1400141a4:	pop    rdi
   1400141a5:	ret    
   1400141a6:	int3   
   1400141a7:	int3   
   1400141a8:	cmp    QWORD PTR [rip+0x1b9c8],0x0        # 0x14002fb78
   1400141b0:	lea    rax,[rip+0x1b9b9]        # 0x14002fb70
   1400141b7:	je     0x1400141c8
   1400141b9:	cmp    DWORD PTR [rax],ecx
   1400141bb:	je     0x1400141cb
   1400141bd:	add    rax,0x10
   1400141c1:	cmp    QWORD PTR [rax+0x8],0x0
   1400141c6:	jne    0x1400141b9
   1400141c8:	xor    eax,eax
   1400141ca:	ret    
   1400141cb:	mov    rax,QWORD PTR [rax+0x8]
   1400141cf:	ret    
   1400141d0:	cmp    QWORD PTR [rip+0x1b4f0],0x0        # 0x14002f6c8
   1400141d8:	lea    rax,[rip+0x1b4e1]        # 0x14002f6c0
   1400141df:	je     0x1400141f0
   1400141e1:	cmp    DWORD PTR [rax],ecx
   1400141e3:	je     0x1400141f3
   1400141e5:	add    rax,0x10
   1400141e9:	cmp    QWORD PTR [rax+0x8],0x0
   1400141ee:	jne    0x1400141e1
   1400141f0:	xor    eax,eax
   1400141f2:	ret    
   1400141f3:	mov    rax,QWORD PTR [rax+0x8]
   1400141f7:	ret    
   1400141f8:	mov    WORD PTR [rsp+0x8],cx
   1400141fd:	sub    rsp,0x28
   140014201:	mov    ecx,0x1
   140014206:	lea    r9,[rsp+0x40]
   14001420b:	lea    rdx,[rsp+0x30]
   140014210:	mov    r8d,ecx
   140014213:	call   QWORD PTR [rip+0x1afef]        # 0x14002f208
   140014219:	movsx  edx,WORD PTR [rsp+0x40]
   14001421e:	neg    eax
   140014220:	sbb    ecx,ecx
   140014222:	and    ecx,edx
   140014224:	movzx  eax,cx
   140014227:	add    rsp,0x28
   14001422b:	ret    
   14001422c:	rex push rbx
   14001422e:	sub    rsp,0x20
   140014232:	mov    rax,rdx
   140014235:	mov    rbx,rdx
   140014238:	mov    r9,r8
   14001423b:	sub    rax,rcx
   14001423e:	mov    rdx,rcx
   140014241:	mov    ecx,0x1
   140014246:	sar    rax,1
   140014249:	mov    r8d,eax
   14001424c:	call   QWORD PTR [rip+0x1afb6]        # 0x14002f208
   140014252:	mov    rax,rbx
   140014255:	add    rsp,0x20
   140014259:	pop    rbx
   14001425a:	ret    
   14001425b:	int3   
   14001425c:	mov    QWORD PTR [rsp+0x8],rbx
   140014261:	mov    QWORD PTR [rsp+0x10],rsi
   140014266:	push   rdi
   140014267:	sub    rsp,0x20
   14001426b:	mov    rsi,rcx
   14001426e:	mov    rcx,QWORD PTR [rcx]
   140014271:	mov    rdi,rdx
   140014274:	cmp    rcx,rdx
   140014277:	je     0x1400142bf
   140014279:	test   rcx,rcx
   14001427c:	je     0x140014283
   14001427e:	call   0x14001a1ac
   140014283:	and    QWORD PTR [rsi],0x0
   140014287:	test   rdi,rdi
   14001428a:	je     0x1400142bf
   14001428c:	cmp    BYTE PTR [rdi],0x0
   14001428f:	mov    rbx,rdi
   140014292:	je     0x14001429c
   140014294:	inc    rbx
   140014297:	cmp    BYTE PTR [rbx],0x0
   14001429a:	jne    0x140014294
   14001429c:	sub    rbx,rdi
   14001429f:	lea    rcx,[rbx+0x1]
   1400142a3:	call   0x14001adf0
   1400142a8:	mov    QWORD PTR [rsi],rax
   1400142ab:	test   rax,rax
   1400142ae:	je     0x1400142bf
   1400142b0:	lea    r8,[rbx+0x1]
   1400142b4:	mov    rdx,rdi
   1400142b7:	mov    rcx,rax
   1400142ba:	call   0x140018a90
   1400142bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400142c4:	mov    rax,rsi
   1400142c7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400142cc:	add    rsp,0x20
   1400142d0:	pop    rdi
   1400142d1:	ret    
   1400142d2:	int3   
   1400142d3:	int3   
   1400142d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400142d9:	push   rdi
   1400142da:	sub    rsp,0x20
   1400142de:	lea    rax,[rip+0x1c743]        # 0x140030a28
   1400142e5:	mov    edi,edx
   1400142e7:	mov    rbx,rcx
   1400142ea:	mov    QWORD PTR [rcx],rax
   1400142ed:	call   0x140014408
   1400142f2:	mov    rcx,QWORD PTR [rbx+0x28]
   1400142f6:	test   rcx,rcx
   1400142f9:	je     0x140014300
   1400142fb:	call   0x14001a1ac
   140014300:	and    QWORD PTR [rbx+0x28],0x0
   140014305:	lea    rax,[rip+0x1c6fc]        # 0x140030a08
   14001430c:	mov    QWORD PTR [rbx],rax
   14001430f:	test   dil,0x1
   140014313:	je     0x14001431d
   140014315:	mov    rcx,rbx
   140014318:	call   0x140018a04
   14001431d:	mov    rax,rbx
   140014320:	mov    rbx,QWORD PTR [rsp+0x30]
   140014325:	add    rsp,0x20
   140014329:	pop    rdi
   14001432a:	ret    
   14001432b:	int3   
   14001432c:	rex push rbx
   14001432e:	sub    rsp,0x20
   140014332:	mov    rbx,rcx
   140014335:	mov    ecx,0x10
   14001433a:	call   0x140018a0c
   14001433f:	test   rax,rax
   140014342:	je     0x140014352
   140014344:	mov    rdx,QWORD PTR [rip+0x2f16d]        # 0x1400434b8
   14001434b:	mov    QWORD PTR [rax+0x8],rbx
   14001434f:	mov    QWORD PTR [rax],rdx
   140014352:	mov    QWORD PTR [rip+0x2f15f],rax        # 0x1400434b8
   140014359:	add    rsp,0x20
   14001435d:	pop    rbx
   14001435e:	ret    
   14001435f:	int3   
   140014360:	mov    rax,QWORD PTR [rip+0x2f141]        # 0x1400434a8
   140014367:	ret    
   140014368:	rex push rdi
   14001436a:	sub    rsp,0x30
   14001436e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014377:	mov    QWORD PTR [rsp+0x48],rbx
   14001437c:	mov    dil,cl
   14001437f:	xor    edx,edx
   140014381:	lea    rcx,[rsp+0x40]
   140014386:	call   0x14001465c
   14001438b:	nop
   14001438c:	mov    rbx,QWORD PTR [rip+0x2f115]        # 0x1400434a8
   140014393:	test   rbx,rbx
   140014396:	jne    0x1400143df
   140014398:	xor    ecx,ecx
   14001439a:	call   0x140014510
   14001439f:	mov    rbx,rax
   1400143a2:	mov    rcx,rax
   1400143a5:	call   0x14001457c
   1400143aa:	mov    DWORD PTR [rbx+0x20],0x3f
   1400143b1:	lea    rcx,[rbx+0x28]
   1400143b5:	lea    rdx,[rip+0x1c688]        # 0x140030a44
   1400143bc:	call   0x14001425c
   1400143c1:	mov    QWORD PTR [rip+0x2f0e8],rbx        # 0x1400434b0
   1400143c8:	mov    rdx,QWORD PTR [rbx]
   1400143cb:	mov    rcx,rbx
   1400143ce:	call   QWORD PTR [rdx+0x8]
   1400143d1:	mov    rcx,QWORD PTR [rip+0x2f0d8]        # 0x1400434b0
   1400143d8:	mov    QWORD PTR [rip+0x2f101],rcx        # 0x1400434e0
   1400143df:	test   dil,dil
   1400143e2:	je     0x1400143ee
   1400143e4:	mov    rax,QWORD PTR [rbx]
   1400143e7:	mov    rcx,rbx
   1400143ea:	call   QWORD PTR [rax+0x8]
   1400143ed:	nop
   1400143ee:	lea    rcx,[rsp+0x40]
   1400143f3:	call   0x1400146d8
   1400143f8:	mov    rax,rbx
   1400143fb:	mov    rbx,QWORD PTR [rsp+0x48]
   140014400:	add    rsp,0x30
   140014404:	pop    rdi
   140014405:	ret    
   140014406:	int3   
   140014407:	int3   
   140014408:	rex push rdi
   14001440a:	sub    rsp,0x30
   14001440e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014417:	mov    QWORD PTR [rsp+0x48],rbx
   14001441c:	mov    rdi,rcx
   14001441f:	xor    edx,edx
   140014421:	lea    rcx,[rsp+0x40]
   140014426:	call   0x14001465c
   14001442b:	nop
   14001442c:	mov    rbx,QWORD PTR [rdi+0x18]
   140014430:	jmp    0x14001445b
   140014432:	dec    rbx
   140014435:	mov    rax,QWORD PTR [rdi+0x10]
   140014439:	mov    rcx,QWORD PTR [rax+rbx*8]
   14001443d:	test   rcx,rcx
   140014440:	je     0x14001445b
   140014442:	mov    rax,QWORD PTR [rcx]
   140014445:	call   QWORD PTR [rax+0x10]
   140014448:	test   rax,rax
   14001444b:	je     0x14001445b
   14001444d:	mov    r8,QWORD PTR [rax]
   140014450:	mov    edx,0x1
   140014455:	mov    rcx,rax
   140014458:	call   QWORD PTR [r8]
   14001445b:	test   rbx,rbx
   14001445e:	jne    0x140014432
   140014460:	mov    rcx,QWORD PTR [rdi+0x10]
   140014464:	call   0x14001a1ac
   140014469:	nop
   14001446a:	lea    rcx,[rsp+0x40]
   14001446f:	call   0x1400146d8
   140014474:	mov    rbx,QWORD PTR [rsp+0x48]
   140014479:	add    rsp,0x30
   14001447d:	pop    rdi
   14001447e:	ret    
   14001447f:	int3   
   140014480:	mov    QWORD PTR [rsp+0x8],rbx
   140014485:	push   rdi
   140014486:	sub    rsp,0x20
   14001448a:	mov    rbx,rdx
   14001448d:	mov    rdi,rcx
   140014490:	xor    edx,edx
   140014492:	xor    ecx,ecx
   140014494:	call   0x14001aea8
   140014499:	lea    rcx,[rip+0x256d0]        # 0x140039b70
   1400144a0:	test   rax,rax
   1400144a3:	cmove  rax,rcx
   1400144a7:	lea    rcx,[rdi+0x48]
   1400144ab:	mov    rdx,rax
   1400144ae:	call   0x14001425c
   1400144b3:	test   rbx,rbx
   1400144b6:	je     0x1400144c5
   1400144b8:	mov    rdx,rbx
   1400144bb:	xor    ecx,ecx
   1400144bd:	call   0x14001aea8
   1400144c2:	mov    rbx,rax
   1400144c5:	lea    rax,[rip+0x1c574]        # 0x140030a40
   1400144cc:	test   rbx,rbx
   1400144cf:	lea    rcx,[rdi+0x58]
   1400144d3:	cmove  rbx,rax
   1400144d7:	mov    rdx,rbx
   1400144da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144df:	add    rsp,0x20
   1400144e3:	pop    rdi
   1400144e4:	jmp    0x14001425c
   1400144e9:	int3   
   1400144ea:	int3   
   1400144eb:	int3   
   1400144ec:	sub    rsp,0x28
   1400144f0:	cmp    QWORD PTR [rcx+0x48],0x0
   1400144f5:	je     0x14001450b
   1400144f7:	mov    rdx,QWORD PTR [rcx+0x48]
   1400144fb:	test   rdx,rdx
   1400144fe:	jne    0x140014504
   140014500:	lea    rdx,[rcx+0x50]
   140014504:	xor    ecx,ecx
   140014506:	call   0x14001aea8
   14001450b:	add    rsp,0x28
   14001450f:	ret    
   140014510:	mov    QWORD PTR [rsp+0x8],rbx
   140014515:	push   rdi
   140014516:	sub    rsp,0x20
   14001451a:	mov    dil,cl
   14001451d:	mov    ecx,0x38
   140014522:	call   0x140018a0c
   140014527:	xor    edx,edx
   140014529:	mov    rbx,rax
   14001452c:	test   rax,rax
   14001452f:	je     0x140014569
   140014531:	mov    DWORD PTR [rax+0x8],0x1
   140014538:	mov    QWORD PTR [rbx+0x10],rdx
   14001453c:	mov    QWORD PTR [rbx+0x18],rdx
   140014540:	mov    DWORD PTR [rbx+0x20],edx
   140014543:	lea    rcx,[rbx+0x28]
   140014547:	mov    BYTE PTR [rbx+0x24],dil
   14001454b:	lea    rax,[rip+0x1c4d6]        # 0x140030a28
   140014552:	mov    QWORD PTR [rbx],rax
   140014555:	mov    QWORD PTR [rcx],rdx
   140014558:	mov    BYTE PTR [rcx+0x8],dl
   14001455b:	lea    rdx,[rip+0x1c4de]        # 0x140030a40
   140014562:	call   0x14001425c
   140014567:	jmp    0x14001456c
   140014569:	mov    rbx,rdx
   14001456c:	mov    rax,rbx
   14001456f:	mov    rbx,QWORD PTR [rsp+0x30]
   140014574:	add    rsp,0x20
   140014578:	pop    rdi
   140014579:	ret    
   14001457a:	int3   
   14001457b:	int3   
   14001457c:	rex push rbx
   14001457e:	sub    rsp,0x20
   140014582:	cmp    BYTE PTR [rip+0x2ef6f],0x0        # 0x1400434f8
   140014589:	mov    rbx,rcx
   14001458c:	jne    0x1400145a1
   14001458e:	lea    rcx,[rip+0x47]        # 0x1400145dc
   140014595:	mov    BYTE PTR [rip+0x2ef5c],0x1        # 0x1400434f8
   14001459c:	call   0x140015784
   1400145a1:	mov    QWORD PTR [rip+0x2ef00],rbx        # 0x1400434a8
   1400145a8:	add    rsp,0x20
   1400145ac:	pop    rbx
   1400145ad:	ret    
   1400145ae:	int3   
   1400145af:	int3   
   1400145b0:	sub    rsp,0x28
   1400145b4:	mov    rcx,QWORD PTR [rcx]
   1400145b7:	test   rcx,rcx
   1400145ba:	je     0x1400145d5
   1400145bc:	mov    rax,QWORD PTR [rcx]
   1400145bf:	call   QWORD PTR [rax+0x10]
   1400145c2:	test   rax,rax
   1400145c5:	je     0x1400145d5
   1400145c7:	mov    r8,QWORD PTR [rax]
   1400145ca:	mov    edx,0x1
   1400145cf:	mov    rcx,rax
   1400145d2:	call   QWORD PTR [r8]
   1400145d5:	add    rsp,0x28
   1400145d9:	ret    
   1400145da:	int3   
   1400145db:	int3   
   1400145dc:	sub    rsp,0x28
   1400145e0:	lea    rcx,[rsp+0x30]
   1400145e5:	xor    edx,edx
   1400145e7:	call   0x14001465c
   1400145ec:	lea    rcx,[rip+0x2eeb5]        # 0x1400434a8
   1400145f3:	call   0x1400145b0
   1400145f8:	and    QWORD PTR [rip+0x2eea8],0x0        # 0x1400434a8
   140014600:	lea    rcx,[rsp+0x30]
   140014605:	call   0x1400146d8
   14001460a:	add    rsp,0x28
   14001460e:	ret    
   14001460f:	int3   
   140014610:	mov    QWORD PTR [rsp+0x8],rbx
   140014615:	mov    QWORD PTR [rsp+0x10],rsi
   14001461a:	push   rdi
   14001461b:	sub    rsp,0x20
   14001461f:	mov    rsi,rcx
   140014622:	lock inc DWORD PTR [rip+0x2c9db]        # 0x140041004
   140014629:	jne    0x140014648
   14001462b:	lea    rbx,[rip+0x2eede]        # 0x140043510
   140014632:	mov    edi,0x4
   140014637:	mov    rcx,rbx
   14001463a:	call   0x1400157cc
   14001463f:	add    rbx,0x28
   140014643:	dec    rdi
   140014646:	jne    0x140014637
   140014648:	mov    rbx,QWORD PTR [rsp+0x30]
   14001464d:	mov    rax,rsi
   140014650:	mov    rsi,QWORD PTR [rsp+0x38]
   140014655:	add    rsp,0x20
   140014659:	pop    rdi
   14001465a:	ret    
   14001465b:	int3   
   14001465c:	rex push rbx
   14001465e:	sub    rsp,0x20
   140014662:	mov    rbx,rcx
   140014665:	mov    DWORD PTR [rcx],edx
   140014667:	test   edx,edx
   140014669:	jne    0x140014675
   14001466b:	lea    ecx,[rdx+0xc]
   14001466e:	call   0x14001b118
   140014673:	jmp    0x140014691
   140014675:	cmp    edx,0x4
   140014678:	jge    0x140014691
   14001467a:	movsxd rax,edx
   14001467d:	lea    rcx,[rax+rax*4]
   140014681:	lea    rax,[rip+0x2ee88]        # 0x140043510
   140014688:	lea    rcx,[rax+rcx*8]
   14001468c:	call   0x1400157dc
   140014691:	mov    rax,rbx
   140014694:	add    rsp,0x20
   140014698:	pop    rbx
   140014699:	ret    
   14001469a:	int3   
   14001469b:	int3   
   14001469c:	mov    QWORD PTR [rsp+0x8],rbx
   1400146a1:	push   rdi
   1400146a2:	sub    rsp,0x20
   1400146a6:	lock add DWORD PTR [rip+0x2c956],0xffffffff        # 0x140041004
   1400146ae:	jns    0x1400146cd
   1400146b0:	lea    rbx,[rip+0x2ee59]        # 0x140043510
   1400146b7:	mov    edi,0x4
   1400146bc:	mov    rcx,rbx
   1400146bf:	call   0x1400157c4
   1400146c4:	add    rbx,0x28
   1400146c8:	dec    rdi
   1400146cb:	jne    0x1400146bc
   1400146cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400146d2:	add    rsp,0x20
   1400146d6:	pop    rdi
   1400146d7:	ret    
   1400146d8:	sub    rsp,0x28
   1400146dc:	movsxd rax,DWORD PTR [rcx]
   1400146df:	test   eax,eax
   1400146e1:	jne    0x1400146ef
   1400146e3:	lea    ecx,[rax+0xc]
   1400146e6:	add    rsp,0x28
   1400146ea:	jmp    0x14001b308
   1400146ef:	cmp    eax,0x4
   1400146f2:	jge    0x140014708
   1400146f4:	lea    rcx,[rax+rax*4]
   1400146f8:	lea    rax,[rip+0x2ee11]        # 0x140043510
   1400146ff:	lea    rcx,[rax+rcx*8]
   140014703:	call   0x1400157e4
   140014708:	add    rsp,0x28
   14001470c:	ret    
   14001470d:	int3   
   14001470e:	int3   
   14001470f:	int3   
   140014710:	mov    QWORD PTR [rsp+0x8],rbx
   140014715:	mov    QWORD PTR [rsp+0x10],rsi
   14001471a:	push   rdi
   14001471b:	sub    rsp,0x20
   14001471f:	and    DWORD PTR [rcx],0x0
   140014722:	xor    edx,edx
   140014724:	mov    rdi,rcx
   140014727:	lea    r8d,[rdx+0x28]
   14001472b:	add    rcx,0x4
   14001472f:	call   0x14001b980
   140014734:	call   0x14001b320
   140014739:	mov    DWORD PTR [rdi],eax
   14001473b:	call   0x14001b394
   140014740:	mov    DWORD PTR [rdi+0x4],eax
   140014743:	call   0x14001b358
   140014748:	xor    ecx,ecx
   14001474a:	cmp    QWORD PTR [rax+0x10],rcx
   14001474e:	sete   cl
   140014751:	mov    DWORD PTR [rdi+0x8],ecx
   140014754:	test   ecx,ecx
   140014756:	jne    0x14001478c
   140014758:	xor    ebx,ebx
   14001475a:	xor    esi,esi
   14001475c:	mov    ecx,ebx
   14001475e:	call   0x14001b950
   140014763:	test   eax,eax
   140014765:	je     0x14001477f
   140014767:	mov    ecx,ebx
   140014769:	mov    r8,rsi
   14001476c:	mov    edx,0x1
   140014771:	and    ecx,0x7
   140014774:	sar    r8,0x3
   140014778:	shl    dl,cl
   14001477a:	or     BYTE PTR [r8+rdi*1+0xc],dl
   14001477f:	inc    ebx
   140014781:	inc    rsi
   140014784:	cmp    ebx,0x100
   14001478a:	jl     0x14001475c
   14001478c:	mov    rbx,QWORD PTR [rsp+0x30]
   140014791:	mov    rsi,QWORD PTR [rsp+0x38]
   140014796:	mov    rax,rdi
   140014799:	add    rsp,0x20
   14001479d:	pop    rdi
   14001479e:	ret    
   14001479f:	int3   
   1400147a0:	sub    rsp,0x58
   1400147a4:	cmp    DWORD PTR [r9+0x8],0x0
   1400147a9:	mov    r10,r9
   1400147ac:	mov    WORD PTR [rsp+0x40],dx
   1400147b1:	je     0x1400147c6
   1400147b3:	mov    eax,0xff
   1400147b8:	cmp    dx,ax
   1400147bb:	ja     0x140014809
   1400147bd:	mov    BYTE PTR [rcx],dl
   1400147bf:	mov    eax,0x1
   1400147c4:	jmp    0x140014817
   1400147c6:	and    DWORD PTR [rsp+0x48],0x0
   1400147cb:	lea    rax,[rsp+0x48]
   1400147d0:	lea    r8,[rsp+0x40]
   1400147d5:	mov    QWORD PTR [rsp+0x38],rax
   1400147da:	mov    eax,DWORD PTR [r9+0x4]
   1400147de:	and    QWORD PTR [rsp+0x30],0x0
   1400147e4:	mov    DWORD PTR [rsp+0x28],eax
   1400147e8:	mov    QWORD PTR [rsp+0x20],rcx
   1400147ed:	mov    ecx,DWORD PTR [r10]
   1400147f0:	mov    r9d,0x1
   1400147f6:	xor    edx,edx
   1400147f8:	call   QWORD PTR [rip+0x1aa12]        # 0x14002f210
   1400147fe:	test   eax,eax
   140014800:	je     0x140014809
   140014802:	cmp    DWORD PTR [rsp+0x48],0x0
   140014807:	je     0x140014817
   140014809:	call   0x14001b864
   14001480e:	mov    DWORD PTR [rax],0x2a
   140014814:	or     eax,0xffffffff
   140014817:	add    rsp,0x58
   14001481b:	ret    
   14001481c:	rex push rbx
   14001481e:	sub    rsp,0x20
   140014822:	mov    rbx,rcx
   140014825:	call   0x14001b320
   14001482a:	mov    edx,0x2
   14001482f:	mov    ecx,0x100
   140014834:	mov    DWORD PTR [rbx],eax
   140014836:	call   0x14001c1dc
   14001483b:	mov    QWORD PTR [rbx+0x8],rax
   14001483f:	test   rax,rax
   140014842:	je     0x140014864
   140014844:	call   0x14001bbac
   140014849:	mov    rcx,QWORD PTR [rbx+0x8]
   14001484d:	mov    r8d,0x200
   140014853:	mov    rdx,rax
   140014856:	call   0x140018a90
   14001485b:	mov    DWORD PTR [rbx+0x10],0x1
   140014862:	jmp    0x140014871
   140014864:	call   0x14001bbac
   140014869:	and    DWORD PTR [rbx+0x10],0x0
   14001486d:	mov    QWORD PTR [rbx+0x8],rax
   140014871:	call   0x14001b358
   140014876:	mov    rcx,QWORD PTR [rax+0x8]
   14001487a:	mov    QWORD PTR [rbx+0x18],rcx
   14001487e:	test   rcx,rcx
   140014881:	je     0x14001488c
   140014883:	call   0x14001bde0
   140014888:	mov    QWORD PTR [rbx+0x18],rax
   14001488c:	mov    rax,rbx
   14001488f:	add    rsp,0x20
   140014893:	pop    rbx
   140014894:	ret    
   140014895:	int3   
   140014896:	int3   
   140014897:	int3   
   140014898:	mov    QWORD PTR [rsp+0x18],rbx
   14001489d:	push   rbp
   14001489e:	push   rsi
   14001489f:	push   rdi
   1400148a0:	push   r14
   1400148a2:	push   r15
   1400148a4:	sub    rsp,0xa0
   1400148ab:	mov    rax,QWORD PTR [rip+0x2cd9e]        # 0x140041650
   1400148b2:	xor    rax,rsp
   1400148b5:	mov    QWORD PTR [rsp+0x90],rax
   1400148bd:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400148c5:	xor    r15d,r15d
   1400148c8:	mov    rsi,r9
   1400148cb:	mov    rbp,r8
   1400148ce:	mov    r14,rdx
   1400148d1:	mov    rdi,rcx
   1400148d4:	test   rdx,rdx
   1400148d7:	je     0x1400148ec
   1400148d9:	test   r8,r8
   1400148dc:	je     0x1400148ec
   1400148de:	cmp    BYTE PTR [rdx],r15b
   1400148e1:	jne    0x140014915
   1400148e3:	test   rcx,rcx
   1400148e6:	je     0x1400148ec
   1400148e8:	mov    WORD PTR [rcx],r15w
   1400148ec:	xor    eax,eax
   1400148ee:	mov    rcx,QWORD PTR [rsp+0x90]
   1400148f6:	xor    rcx,rsp
   1400148f9:	call   0x1400187d0
   1400148fe:	mov    rbx,QWORD PTR [rsp+0xe0]
   140014906:	add    rsp,0xa0
   14001490d:	pop    r15
   14001490f:	pop    r14
   140014911:	pop    rdi
   140014912:	pop    rsi
   140014913:	pop    rbp
   140014914:	ret    
   140014915:	test   rbx,rbx
   140014918:	jne    0x140014952
   14001491a:	lea    rcx,[rsp+0x30]
   14001491f:	call   0x140014710
   140014924:	lea    rbx,[rsp+0x60]
   140014929:	movups xmm0,XMMWORD PTR [rax]
   14001492c:	movups xmm1,XMMWORD PTR [rax+0x10]
   140014930:	movups XMMWORD PTR [rsp+0x60],xmm0
   140014935:	movsd  xmm0,QWORD PTR [rax+0x20]
   14001493a:	movups XMMWORD PTR [rsp+0x70],xmm1
   14001493f:	mov    eax,DWORD PTR [rax+0x28]
   140014942:	mov    DWORD PTR [rsp+0x88],eax
   140014949:	movsd  QWORD PTR [rsp+0x80],xmm0
   140014952:	cmp    DWORD PTR [rbx+0x8],r15d
   140014956:	je     0x14001496b
   140014958:	test   rdi,rdi
   14001495b:	je     0x140014964
   14001495d:	movzx  eax,BYTE PTR [r14]
   140014961:	mov    WORD PTR [rdi],ax
   140014964:	mov    eax,0x1
   140014969:	jmp    0x1400148ee
   14001496b:	cmp    DWORD PTR [rsi],r15d
   14001496e:	je     0x1400149c8
   140014970:	mov    al,BYTE PTR [r14]
   140014973:	mov    BYTE PTR [rsi+0x1],al
   140014976:	cmp    DWORD PTR [rbx+0x4],0x1
   14001497a:	jbe    0x1400149b2
   14001497c:	mov    ecx,DWORD PTR [rbx]
   14001497e:	mov    eax,r15d
   140014981:	mov    r9d,0x2
   140014987:	test   rdi,rdi
   14001498a:	lea    edx,[r9+0x7]
   14001498e:	mov    r8,rsi
   140014991:	setne  al
   140014994:	mov    DWORD PTR [rsp+0x28],eax
   140014998:	mov    QWORD PTR [rsp+0x20],rdi
   14001499d:	call   QWORD PTR [rip+0x1a875]        # 0x14002f218
   1400149a3:	test   eax,eax
   1400149a5:	je     0x1400149b2
   1400149a7:	mov    DWORD PTR [rsi],r15d
   1400149aa:	mov    eax,DWORD PTR [rbx+0x4]
   1400149ad:	jmp    0x1400148ee
   1400149b2:	mov    DWORD PTR [rsi],r15d
   1400149b5:	call   0x14001b864
   1400149ba:	mov    DWORD PTR [rax],0x2a
   1400149c0:	or     eax,0xffffffff
   1400149c3:	jmp    0x1400148ee
   1400149c8:	movzx  r8d,BYTE PTR [r14]
   1400149cc:	mov    edx,0x1
   1400149d1:	mov    ecx,r8d
   1400149d4:	mov    eax,r8d
   1400149d7:	and    ecx,0x7
   1400149da:	shr    rax,0x3
   1400149de:	shl    edx,cl
   1400149e0:	test   BYTE PTR [rax+rbx*1+0xc],dl
   1400149e4:	je     0x140014a38
   1400149e6:	mov    ecx,DWORD PTR [rbx+0x4]
   1400149e9:	cmp    rbp,rcx
   1400149ec:	jae    0x1400149fb
   1400149ee:	mov    BYTE PTR [rsi],r8b
   1400149f1:	mov    eax,0xfffffffe
   1400149f6:	jmp    0x1400148ee
   1400149fb:	cmp    ecx,0x1
   1400149fe:	jbe    0x140014a29
   140014a00:	mov    eax,r15d
   140014a03:	mov    r9d,ecx
   140014a06:	mov    ecx,DWORD PTR [rbx]
   140014a08:	test   rdi,rdi
   140014a0b:	mov    r8,r14
   140014a0e:	mov    edx,0x9
   140014a13:	setne  al
   140014a16:	mov    DWORD PTR [rsp+0x28],eax
   140014a1a:	mov    QWORD PTR [rsp+0x20],rdi
   140014a1f:	call   QWORD PTR [rip+0x1a7f3]        # 0x14002f218
   140014a25:	test   eax,eax
   140014a27:	jne    0x1400149aa
   140014a29:	cmp    BYTE PTR [r14+0x1],r15b
   140014a2d:	jne    0x1400149aa
   140014a33:	jmp    0x1400149b2
   140014a38:	mov    ecx,DWORD PTR [rbx]
   140014a3a:	mov    eax,r15d
   140014a3d:	mov    r9d,0x1
   140014a43:	test   rdi,rdi
   140014a46:	lea    edx,[r9+0x8]
   140014a4a:	mov    r8,r14
   140014a4d:	setne  al
   140014a50:	mov    DWORD PTR [rsp+0x28],eax
   140014a54:	mov    QWORD PTR [rsp+0x20],rdi
   140014a59:	call   QWORD PTR [rip+0x1a7b9]        # 0x14002f218
   140014a5f:	test   eax,eax
   140014a61:	jne    0x140014964
   140014a67:	jmp    0x1400149b5
   140014a6c:	mov    WORD PTR [rsp+0x8],cx
   140014a71:	sub    rsp,0x38
   140014a75:	mov    rax,rdx
   140014a78:	mov    edx,0xffff
   140014a7d:	mov    WORD PTR [rsp+0x50],cx
   140014a82:	cmp    cx,dx
   140014a85:	je     0x140014adc
   140014a87:	cmp    QWORD PTR [rax+0x18],0x0
   140014a8c:	jne    0x140014aa7
   140014a8e:	mov    edx,0x100
   140014a93:	cmp    cx,dx
   140014a96:	jae    0x140014aa7
   140014a98:	lea    eax,[rcx-0x61]
   140014a9b:	cmp    ax,0x19
   140014a9f:	ja     0x140014adc
   140014aa1:	sub    cx,0x20
   140014aa5:	jmp    0x140014adc
   140014aa7:	lea    rcx,[rsp+0x50]
   140014aac:	mov    r9d,0x1
   140014ab2:	lea    r8,[rsp+0x40]
   140014ab7:	mov    DWORD PTR [rsp+0x28],r9d
   140014abc:	mov    QWORD PTR [rsp+0x20],rcx
   140014ac1:	mov    rcx,QWORD PTR [rax+0x18]
   140014ac5:	mov    edx,0x200
   140014aca:	call   0x14001c3e0
   140014acf:	movzx  ecx,WORD PTR [rsp+0x50]
   140014ad4:	test   eax,eax
   140014ad6:	cmove  cx,WORD PTR [rsp+0x40]
   140014adc:	movzx  eax,cx
   140014adf:	add    rsp,0x38
   140014ae3:	ret    
   140014ae4:	mov    WORD PTR [rsp+0x8],cx
   140014ae9:	sub    rsp,0x38
   140014aed:	mov    rax,rdx
   140014af0:	mov    edx,0xffff
   140014af5:	mov    WORD PTR [rsp+0x50],cx
   140014afa:	cmp    cx,dx
   140014afd:	je     0x140014b4f
   140014aff:	cmp    QWORD PTR [rax+0x18],0x0
   140014b04:	mov    edx,0x100
   140014b09:	jne    0x140014b1f
   140014b0b:	cmp    cx,dx
   140014b0e:	jae    0x140014b1f
   140014b10:	lea    eax,[rcx-0x41]
   140014b13:	cmp    ax,0x19
   140014b17:	ja     0x140014b4f
   140014b19:	add    cx,0x20
   140014b1d:	jmp    0x140014b4f
   140014b1f:	lea    rcx,[rsp+0x50]
   140014b24:	mov    r9d,0x1
   140014b2a:	lea    r8,[rsp+0x40]
   140014b2f:	mov    DWORD PTR [rsp+0x28],r9d
   140014b34:	mov    QWORD PTR [rsp+0x20],rcx
   140014b39:	mov    rcx,QWORD PTR [rax+0x18]
   140014b3d:	call   0x14001c3e0
   140014b42:	movzx  ecx,WORD PTR [rsp+0x50]
   140014b47:	test   eax,eax
   140014b49:	cmove  cx,WORD PTR [rsp+0x40]
   140014b4f:	movzx  eax,cx
   140014b52:	add    rsp,0x38
   140014b56:	ret    
   140014b57:	int3   
   140014b58:	jmp    0x14001cdc4
   140014b5d:	int3   
   140014b5e:	int3   
   140014b5f:	int3   
   140014b60:	mov    QWORD PTR [rsp+0x10],rdx
   140014b65:	mov    QWORD PTR [rsp+0x8],rcx
   140014b6a:	push   rbx
   140014b6b:	push   rbp
   140014b6c:	push   rsi
   140014b6d:	push   rdi
   140014b6e:	push   r12
   140014b70:	push   r13
   140014b72:	push   r14
   140014b74:	push   r15
   140014b76:	sub    rsp,0x38
   140014b7a:	mov    r12,r9
   140014b7d:	mov    esi,r8d
   140014b80:	mov    r14,rdx
   140014b83:	mov    rbp,rcx
   140014b86:	test   r9,r9
   140014b89:	je     0x140014b8f
   140014b8b:	and    DWORD PTR [r9],0x0
   140014b8f:	mov    rbx,rcx
   140014b92:	movzx  ecx,BYTE PTR [rcx]
   140014b95:	jmp    0x140014b9d
   140014b97:	inc    rbx
   140014b9a:	movzx  ecx,BYTE PTR [rbx]
   140014b9d:	call   0x14001bce4
   140014ba2:	test   eax,eax
   140014ba4:	jne    0x140014b97
   140014ba6:	mov    r15b,BYTE PTR [rbx]
   140014ba9:	lea    eax,[r15-0x2b]
   140014bad:	test   al,0xfd
   140014baf:	je     0x140014bb6
   140014bb1:	mov    r15b,0x2b
   140014bb4:	jmp    0x140014bb9
   140014bb6:	inc    rbx
   140014bb9:	test   esi,esi
   140014bbb:	je     0x140014bc9
   140014bbd:	lea    eax,[rsi-0x2]
   140014bc0:	cmp    eax,0x22
   140014bc3:	ja     0x140014ca6
   140014bc9:	mov    cl,0x30
   140014bcb:	test   esi,esi
   140014bcd:	jle    0x140014be3
   140014bcf:	cmp    esi,0x10
   140014bd2:	jne    0x140014c07
   140014bd4:	cmp    BYTE PTR [rbx],cl
   140014bd6:	jne    0x140014c07
   140014bd8:	mov    al,BYTE PTR [rbx+0x1]
   140014bdb:	sub    al,0x58
   140014bdd:	test   al,0xdf
   140014bdf:	jne    0x140014c07
   140014be1:	jmp    0x140014c03
   140014be3:	cmp    BYTE PTR [rbx],cl
   140014be5:	je     0x140014bee
   140014be7:	mov    esi,0xa
   140014bec:	jmp    0x140014c07
   140014bee:	mov    al,BYTE PTR [rbx+0x1]
   140014bf1:	sub    al,0x58
   140014bf3:	test   al,0xdf
   140014bf5:	je     0x140014bfe
   140014bf7:	mov    esi,0x8
   140014bfc:	jmp    0x140014c07
   140014bfe:	mov    esi,0x10
   140014c03:	add    rbx,0x2
   140014c07:	mov    QWORD PTR [rsp+0x98],rbx
   140014c0f:	jmp    0x140014c14
   140014c11:	inc    rbx
   140014c14:	cmp    BYTE PTR [rbx],cl
   140014c16:	je     0x140014c11
   140014c18:	movsx  ecx,BYTE PTR [rbx]
   140014c1b:	xor    edi,edi
   140014c1d:	mov    QWORD PTR [rsp+0x20],rbx
   140014c22:	and    DWORD PTR [rsp+0x90],edi
   140014c29:	movsxd r13,esi
   140014c2c:	call   0x14001d9a0
   140014c31:	lea    rcx,[rip+0x1be10]        # 0x140030a48
   140014c38:	mov    r8,r13
   140014c3b:	mov    edx,eax
   140014c3d:	call   0x14001d9c0
   140014c42:	test   rax,rax
   140014c45:	je     0x140014c94
   140014c47:	movsxd rbp,esi
   140014c4a:	lea    r14,[rip+0x1bdf7]        # 0x140030a48
   140014c51:	mov    DWORD PTR [rsp+0x90],edi
   140014c58:	sub    al,r14b
   140014c5b:	inc    rbx
   140014c5e:	movsx  ecx,BYTE PTR [rbx]
   140014c61:	movsx  r13d,al
   140014c65:	imul   edi,esi
   140014c68:	add    edi,r13d
   140014c6b:	call   0x14001d9a0
   140014c70:	mov    r8,rbp
   140014c73:	mov    edx,eax
   140014c75:	mov    rcx,r14
   140014c78:	call   0x14001d9c0
   140014c7d:	test   rax,rax
   140014c80:	jne    0x140014c51
   140014c82:	mov    r14,QWORD PTR [rsp+0x88]
   140014c8a:	mov    rbp,QWORD PTR [rsp+0x80]
   140014c92:	jmp    0x140014c9c
   140014c94:	mov    r13b,BYTE PTR [rsp+0x90]
   140014c9c:	cmp    QWORD PTR [rsp+0x98],rbx
   140014ca4:	jne    0x140014cb2
   140014ca6:	test   r14,r14
   140014ca9:	je     0x140014cae
   140014cab:	mov    QWORD PTR [r14],rbp
   140014cae:	xor    eax,eax
   140014cb0:	jmp    0x140014d1c
   140014cb2:	lea    rcx,[rip+0x1bdb7]        # 0x140030a70
   140014cb9:	movsxd rax,esi
   140014cbc:	movsx  rax,BYTE PTR [rax+rcx*1]
   140014cc1:	mov    rcx,rbx
   140014cc4:	sub    rcx,rax
   140014cc7:	sub    rcx,QWORD PTR [rsp+0x20]
   140014ccc:	js     0x140014d0a
   140014cce:	test   rcx,rcx
   140014cd1:	jg     0x140014cec
   140014cd3:	movsx  ecx,r13b
   140014cd7:	mov    eax,edi
   140014cd9:	sub    eax,ecx
   140014cdb:	cmp    edi,eax
   140014cdd:	jb     0x140014cec
   140014cdf:	xor    edx,edx
   140014ce1:	div    esi
   140014ce3:	cmp    eax,DWORD PTR [rsp+0x90]
   140014cea:	je     0x140014d0a
   140014cec:	call   0x14001b864
   140014cf1:	mov    DWORD PTR [rax],0x22
   140014cf7:	test   r12,r12
   140014cfa:	je     0x140014d04
   140014cfc:	mov    DWORD PTR [r12],0x1
   140014d04:	or     edi,0xffffffff
   140014d07:	mov    r15b,0x2b
   140014d0a:	cmp    r15b,0x2d
   140014d0e:	jne    0x140014d12
   140014d10:	neg    edi
   140014d12:	test   r14,r14
   140014d15:	je     0x140014d1a
   140014d17:	mov    QWORD PTR [r14],rbx
   140014d1a:	mov    eax,edi
   140014d1c:	add    rsp,0x38
   140014d20:	pop    r15
   140014d22:	pop    r14
   140014d24:	pop    r13
   140014d26:	pop    r12
   140014d28:	pop    rdi
   140014d29:	pop    rsi
   140014d2a:	pop    rbp
   140014d2b:	pop    rbx
   140014d2c:	ret    
   140014d2d:	int3   
   140014d2e:	int3   
   140014d2f:	int3   
   140014d30:	mov    rax,rsp
   140014d33:	mov    QWORD PTR [rax+0x10],rbx
   140014d37:	mov    QWORD PTR [rax+0x18],rbp
   140014d3b:	mov    QWORD PTR [rax+0x20],rsi
   140014d3f:	push   rdi
   140014d40:	push   r14
   140014d42:	push   r15
   140014d44:	sub    rsp,0x20
   140014d48:	lea    rsi,[rax+0x8]
   140014d4c:	test   rdx,rdx
   140014d4f:	mov    rbp,rcx
   140014d52:	mov    rdi,rcx
   140014d55:	movzx  ecx,BYTE PTR [rcx]
   140014d58:	mov    r14,r9
   140014d5b:	cmovne rsi,rdx
   140014d5f:	mov    r15d,r8d
   140014d62:	jmp    0x140014d6a
   140014d64:	inc    rdi
   140014d67:	movzx  ecx,BYTE PTR [rdi]
   140014d6a:	call   0x14001bce4
   140014d6f:	test   eax,eax
   140014d71:	jne    0x140014d64
   140014d73:	mov    bl,BYTE PTR [rdi]
   140014d75:	lea    eax,[rbx-0x2b]
   140014d78:	test   al,0xfd
   140014d7a:	je     0x140014d80
   140014d7c:	mov    bl,0x2b
   140014d7e:	jmp    0x140014d83
   140014d80:	inc    rdi
   140014d83:	mov    r9,r14
   140014d86:	mov    r8d,r15d
   140014d89:	mov    rdx,rsi
   140014d8c:	mov    rcx,rdi
   140014d8f:	call   0x140014b60
   140014d94:	mov    ecx,eax
   140014d96:	cmp    rdi,QWORD PTR [rsi]
   140014d99:	jne    0x140014d9e
   140014d9b:	mov    QWORD PTR [rsi],rbp
   140014d9e:	mov    edi,0x7fffffff
   140014da3:	mov    r15b,0x2d
   140014da6:	cmp    rbp,QWORD PTR [rsi]
   140014da9:	jne    0x140014daf
   140014dab:	test   eax,eax
   140014dad:	jne    0x140014dc4
   140014daf:	cmp    bl,0x2b
   140014db2:	jne    0x140014db8
   140014db4:	cmp    eax,edi
   140014db6:	ja     0x140014dc4
   140014db8:	cmp    bl,r15b
   140014dbb:	jne    0x140014dea
   140014dbd:	cmp    eax,0x80000000
   140014dc2:	jbe    0x140014dea
   140014dc4:	call   0x14001b864
   140014dc9:	mov    DWORD PTR [rax],0x22
   140014dcf:	test   r14,r14
   140014dd2:	je     0x140014ddb
   140014dd4:	mov    DWORD PTR [r14],0x1
   140014ddb:	mov    eax,0x80000000
   140014de0:	cmp    bl,r15b
   140014de3:	cmove  edi,eax
   140014de6:	mov    eax,edi
   140014de8:	jmp    0x140014df4
   140014dea:	neg    eax
   140014dec:	cmp    bl,r15b
   140014def:	cmove  ecx,eax
   140014df2:	mov    eax,ecx
   140014df4:	mov    rbx,QWORD PTR [rsp+0x48]
   140014df9:	mov    rbp,QWORD PTR [rsp+0x50]
   140014dfe:	mov    rsi,QWORD PTR [rsp+0x58]
   140014e03:	add    rsp,0x20
   140014e07:	pop    r15
   140014e09:	pop    r14
   140014e0b:	pop    rdi
   140014e0c:	ret    
   140014e0d:	int3   
   140014e0e:	int3   
   140014e0f:	int3   
   140014e10:	mov    rax,rsp
   140014e13:	mov    QWORD PTR [rax+0x10],rbx
   140014e17:	mov    QWORD PTR [rax+0x18],rbp
   140014e1b:	mov    QWORD PTR [rax+0x20],rsi
   140014e1f:	push   rdi
   140014e20:	push   r14
   140014e22:	push   r15
   140014e24:	sub    rsp,0x20
   140014e28:	lea    rsi,[rax+0x8]
   140014e2c:	test   rdx,rdx
   140014e2f:	mov    rbp,rcx
   140014e32:	mov    rdi,rcx
   140014e35:	movzx  ecx,BYTE PTR [rcx]
   140014e38:	mov    r14,r9
   140014e3b:	cmovne rsi,rdx
   140014e3f:	mov    r15d,r8d
   140014e42:	jmp    0x140014e4a
   140014e44:	inc    rdi
   140014e47:	movzx  ecx,BYTE PTR [rdi]
   140014e4a:	call   0x14001bce4
   140014e4f:	test   eax,eax
   140014e51:	jne    0x140014e44
   140014e53:	mov    bl,BYTE PTR [rdi]
   140014e55:	lea    eax,[rbx-0x2b]
   140014e58:	test   al,0xfd
   140014e5a:	je     0x140014e60
   140014e5c:	mov    bl,0x2b
   140014e5e:	jmp    0x140014e63
   140014e60:	inc    rdi
   140014e63:	mov    r9,r14
   140014e66:	mov    r8d,r15d
   140014e69:	mov    rdx,rsi
   140014e6c:	mov    rcx,rdi
   140014e6f:	call   0x140014f04
   140014e74:	mov    rcx,rax
   140014e77:	cmp    rdi,QWORD PTR [rsi]
   140014e7a:	jne    0x140014e7f
   140014e7c:	mov    QWORD PTR [rsi],rbp
   140014e7f:	mov    dil,0x2d
   140014e82:	movabs r15,0x8000000000000000
   140014e8c:	cmp    rbp,QWORD PTR [rsi]
   140014e8f:	jne    0x140014e96
   140014e91:	test   rax,rax
   140014e94:	jne    0x140014eb4
   140014e96:	cmp    bl,0x2b
   140014e99:	jne    0x140014eaa
   140014e9b:	movabs rax,0x7fffffffffffffff
   140014ea5:	cmp    rcx,rax
   140014ea8:	ja     0x140014eb4
   140014eaa:	cmp    bl,dil
   140014ead:	jne    0x140014ed8
   140014eaf:	cmp    rcx,r15
   140014eb2:	jbe    0x140014ed8
   140014eb4:	call   0x14001b864
   140014eb9:	mov    DWORD PTR [rax],0x22
   140014ebf:	test   r14,r14
   140014ec2:	je     0x140014ecb
   140014ec4:	mov    DWORD PTR [r14],0x1
   140014ecb:	sub    bl,dil
   140014ece:	neg    bl
   140014ed0:	sbb    rax,rax
   140014ed3:	add    rax,r15
   140014ed6:	jmp    0x140014ee8
   140014ed8:	mov    rax,rcx
   140014edb:	neg    rax
   140014ede:	cmp    bl,dil
   140014ee1:	cmove  rcx,rax
   140014ee5:	mov    rax,rcx
   140014ee8:	mov    rbx,QWORD PTR [rsp+0x48]
   140014eed:	mov    rbp,QWORD PTR [rsp+0x50]
   140014ef2:	mov    rsi,QWORD PTR [rsp+0x58]
   140014ef7:	add    rsp,0x20
   140014efb:	pop    r15
   140014efd:	pop    r14
   140014eff:	pop    rdi
   140014f00:	ret    
   140014f01:	int3   
   140014f02:	int3   
   140014f03:	int3   
   140014f04:	mov    QWORD PTR [rsp+0x10],rbx
   140014f09:	mov    QWORD PTR [rsp+0x8],rcx
   140014f0e:	push   rbp
   140014f0f:	push   rsi
   140014f10:	push   rdi
   140014f11:	push   r12
   140014f13:	push   r13
   140014f15:	push   r14
   140014f17:	push   r15
   140014f19:	sub    rsp,0x30
   140014f1d:	mov    r12,r9
   140014f20:	mov    esi,r8d
   140014f23:	mov    r14,rdx
   140014f26:	mov    rbp,rcx
   140014f29:	test   r9,r9
   140014f2c:	je     0x140014f32
   140014f2e:	and    DWORD PTR [r9],0x0
   140014f32:	mov    rbx,rcx
   140014f35:	movzx  ecx,BYTE PTR [rcx]
   140014f38:	jmp    0x140014f40
   140014f3a:	inc    rbx
   140014f3d:	movzx  ecx,BYTE PTR [rbx]
   140014f40:	call   0x14001bce4
   140014f45:	test   eax,eax
   140014f47:	jne    0x140014f3a
   140014f49:	mov    r15b,BYTE PTR [rbx]
   140014f4c:	lea    eax,[r15-0x2b]
   140014f50:	test   al,0xfd
   140014f52:	je     0x140014f59
   140014f54:	mov    r15b,0x2b
   140014f57:	jmp    0x140014f5c
   140014f59:	inc    rbx
   140014f5c:	test   esi,esi
   140014f5e:	je     0x140014f6c
   140014f60:	lea    eax,[rsi-0x2]
   140014f63:	cmp    eax,0x22
   140014f66:	ja     0x140015037
   140014f6c:	mov    cl,0x30
   140014f6e:	test   esi,esi
   140014f70:	jle    0x140014f86
   140014f72:	cmp    esi,0x10
   140014f75:	jne    0x140014faa
   140014f77:	cmp    BYTE PTR [rbx],cl
   140014f79:	jne    0x140014faa
   140014f7b:	mov    al,BYTE PTR [rbx+0x1]
   140014f7e:	sub    al,0x58
   140014f80:	test   al,0xdf
   140014f82:	jne    0x140014faa
   140014f84:	jmp    0x140014fa6
   140014f86:	cmp    BYTE PTR [rbx],cl
   140014f88:	je     0x140014f91
   140014f8a:	mov    esi,0xa
   140014f8f:	jmp    0x140014faa
   140014f91:	mov    al,BYTE PTR [rbx+0x1]
   140014f94:	sub    al,0x58
   140014f96:	test   al,0xdf
   140014f98:	je     0x140014fa1
   140014f9a:	mov    esi,0x8
   140014f9f:	jmp    0x140014faa
   140014fa1:	mov    esi,0x10
   140014fa6:	add    rbx,0x2
   140014faa:	mov    QWORD PTR [rsp+0x20],rbx
   140014faf:	jmp    0x140014fb4
   140014fb1:	inc    rbx
   140014fb4:	cmp    BYTE PTR [rbx],cl
   140014fb6:	je     0x140014fb1
   140014fb8:	movsx  ecx,BYTE PTR [rbx]
   140014fbb:	xor    edi,edi
   140014fbd:	mov    QWORD PTR [rsp+0x28],rbx
   140014fc2:	and    QWORD PTR [rsp+0x88],rdi
   140014fca:	xor    r13b,r13b
   140014fcd:	movsxd rsi,esi
   140014fd0:	call   0x14001d9a0
   140014fd5:	lea    rcx,[rip+0x1babc]        # 0x140030a98
   140014fdc:	mov    r8,rsi
   140014fdf:	mov    edx,eax
   140014fe1:	call   0x14001d9c0
   140014fe6:	test   rax,rax
   140014fe9:	je     0x140015030
   140014feb:	lea    rbp,[rip+0x1baa6]        # 0x140030a98
   140014ff2:	mov    r13b,al
   140014ff5:	mov    QWORD PTR [rsp+0x88],rdi
   140014ffd:	mov    rcx,rsi
   140015000:	sub    r13b,bpl
   140015003:	inc    rbx
   140015006:	imul   rcx,rdi
   14001500a:	movsx  rdi,r13b
   14001500e:	add    rdi,rcx
   140015011:	movsx  ecx,BYTE PTR [rbx]
   140015014:	call   0x14001d9a0
   140015019:	mov    r8,rsi
   14001501c:	mov    rcx,rbp
   14001501f:	mov    edx,eax
   140015021:	call   0x14001d9c0
   140015026:	test   rax,rax
   140015029:	jne    0x140014ff2
   14001502b:	mov    rbp,QWORD PTR [rsp+0x70]
   140015030:	cmp    QWORD PTR [rsp+0x20],rbx
   140015035:	jne    0x140015043
   140015037:	test   r14,r14
   14001503a:	je     0x14001503f
   14001503c:	mov    QWORD PTR [r14],rbp
   14001503f:	xor    eax,eax
   140015041:	jmp    0x1400150b2
   140015043:	lea    rax,[rip+0x1ba76]        # 0x140030ac0
   14001504a:	mov    rcx,rbx
   14001504d:	movsx  rax,BYTE PTR [rsi+rax*1]
   140015052:	sub    rcx,rax
   140015055:	sub    rcx,QWORD PTR [rsp+0x28]
   14001505a:	js     0x14001509e
   14001505c:	test   rcx,rcx
   14001505f:	jg     0x14001507f
   140015061:	movsx  rcx,r13b
   140015065:	mov    rax,rdi
   140015068:	sub    rax,rcx
   14001506b:	cmp    rdi,rax
   14001506e:	jb     0x14001507f
   140015070:	xor    edx,edx
   140015072:	div    rsi
   140015075:	cmp    rax,QWORD PTR [rsp+0x88]
   14001507d:	je     0x14001509e
   14001507f:	call   0x14001b864
   140015084:	mov    DWORD PTR [rax],0x22
   14001508a:	test   r12,r12
   14001508d:	je     0x140015097
   14001508f:	mov    DWORD PTR [r12],0x1
   140015097:	or     rdi,0xffffffffffffffff
   14001509b:	mov    r15b,0x2b
   14001509e:	cmp    r15b,0x2d
   1400150a2:	jne    0x1400150a7
   1400150a4:	neg    rdi
   1400150a7:	test   r14,r14
   1400150aa:	je     0x1400150af
   1400150ac:	mov    QWORD PTR [r14],rbx
   1400150af:	mov    rax,rdi
   1400150b2:	mov    rbx,QWORD PTR [rsp+0x78]
   1400150b7:	add    rsp,0x30
   1400150bb:	pop    r15
   1400150bd:	pop    r14
   1400150bf:	pop    r13
   1400150c1:	pop    r12
   1400150c3:	pop    rdi
   1400150c4:	pop    rsi
   1400150c5:	pop    rbp
   1400150c6:	ret    
   1400150c7:	int3   
   1400150c8:	rex push rbp
   1400150ca:	push   rbx
   1400150cb:	push   rsi
   1400150cc:	push   rdi
   1400150cd:	push   r12
   1400150cf:	push   r13
   1400150d1:	push   r14
   1400150d3:	push   r15
   1400150d5:	lea    rbp,[rsp-0x1f]
   1400150da:	sub    rsp,0xa8
   1400150e1:	mov    rax,QWORD PTR [rip+0x2c568]        # 0x140041650
   1400150e8:	xor    rax,rsp
   1400150eb:	mov    QWORD PTR [rbp+0x7],rax
   1400150ef:	mov    rdi,rcx
   1400150f2:	mov    QWORD PTR [rbp-0x49],rcx
   1400150f6:	lea    rcx,[rbp-0x49]
   1400150fa:	mov    rsi,r9
   1400150fd:	mov    r15d,r8d
   140015100:	mov    rbx,rdx
   140015103:	call   0x1400157ec
   140015108:	mov    r12d,eax
   14001510b:	and    r12d,0x8
   14001510f:	test   rsi,rsi
   140015112:	je     0x140015117
   140015114:	and    DWORD PTR [rsi],0x0
   140015117:	and    eax,0xfffffff7
   14001511a:	mov    r13d,0x1
   140015120:	cmp    eax,r13d
   140015123:	jne    0x1400151dd
   140015129:	mov    rdx,QWORD PTR [rbp-0x49]
   14001512d:	lea    r9,[rbp-0x51]
   140015131:	mov    r8,rbx
   140015134:	mov    rcx,rdi
   140015137:	mov    DWORD PTR [rsp+0x20],r13d
   14001513c:	call   0x140015950
   140015141:	lea    ebx,[r13+0x2]
   140015145:	lea    rcx,[rbp-0x21]
   140015149:	movss  xmm2,DWORD PTR [rip+0x1b99b]        # 0x140030aec
   140015151:	mov    edx,ebx
   140015153:	movsxd r14,eax
   140015156:	call   0x140016938
   14001515b:	mov    edx,ebx
   14001515d:	lea    rcx,[rbp-0x41]
   140015161:	test   r14d,r14d
   140015164:	jne    0x140015170
   140015166:	xorps  xmm2,xmm2
   140015169:	call   0x140016938
   14001516e:	jmp    0x1400151c6
   140015170:	mov    r8d,DWORD PTR [rbp-0x4d]
   140015174:	call   0x1400168b4
   140015179:	mov    rdi,r13
   14001517c:	cmp    r13,r14
   14001517f:	jge    0x1400151c6
   140015181:	lea    rax,[rbp-0x11]
   140015185:	lea    r8,[rbp-0x21]
   140015189:	lea    rcx,[rbp-0x41]
   14001518d:	mov    r9d,ebx
   140015190:	mov    edx,ebx
   140015192:	mov    QWORD PTR [rsp+0x20],rax
   140015197:	call   0x1400167b4
   14001519c:	add    rdi,r13
   14001519f:	lea    rcx,[rbp-0x31]
   1400151a3:	mov    r8d,DWORD PTR [rbp+rdi*4-0x51]
   1400151a8:	mov    edx,ebx
   1400151aa:	call   0x1400168b4
   1400151af:	lea    r8,[rbp-0x31]
   1400151b3:	lea    rcx,[rbp-0x41]
   1400151b7:	mov    r9d,ebx
   1400151ba:	mov    edx,ebx
   1400151bc:	call   0x140016474
   1400151c1:	cmp    rdi,r14
   1400151c4:	jl     0x140015181
   1400151c6:	mov    edx,DWORD PTR [rbp-0x51]
   1400151c9:	lea    rcx,[rbp-0x41]
   1400151cd:	mov    r8,rsi
   1400151d0:	add    edx,r15d
   1400151d3:	call   0x1400169e8
   1400151d8:	jmp    0x1400152cb
   1400151dd:	cmp    eax,0x2
   1400151e0:	jne    0x1400152a6
   1400151e6:	mov    rdx,QWORD PTR [rbp-0x49]
   1400151ea:	lea    r9,[rbp-0x51]
   1400151ee:	mov    r8,rbx
   1400151f1:	mov    rcx,rdi
   1400151f4:	mov    DWORD PTR [rsp+0x20],r13d
   1400151f9:	call   0x140015bdc
   1400151fe:	mov    ebx,0x3
   140015203:	lea    rcx,[rbp-0x31]
   140015207:	movss  xmm2,DWORD PTR [rip+0x1b8d9]        # 0x140030ae8
   14001520f:	mov    edx,ebx
   140015211:	movsxd r14,eax
   140015214:	call   0x140016938
   140015219:	mov    edx,ebx
   14001521b:	lea    rcx,[rbp-0x41]
   14001521f:	test   r14d,r14d
   140015222:	jne    0x14001522e
   140015224:	xorps  xmm2,xmm2
   140015227:	call   0x140016938
   14001522c:	jmp    0x140015284
   14001522e:	mov    r8d,DWORD PTR [rbp-0x4d]
   140015232:	call   0x1400168b4
   140015237:	mov    rdi,r13
   14001523a:	cmp    r13,r14
   14001523d:	jge    0x140015284
   14001523f:	lea    rax,[rbp-0x11]
   140015243:	lea    r8,[rbp-0x31]
   140015247:	lea    rcx,[rbp-0x41]
   14001524b:	mov    r9d,ebx
   14001524e:	mov    edx,ebx
   140015250:	mov    QWORD PTR [rsp+0x20],rax
   140015255:	call   0x1400167b4
   14001525a:	add    rdi,r13
   14001525d:	lea    rcx,[rbp-0x21]
   140015261:	mov    r8d,DWORD PTR [rbp+rdi*4-0x51]
   140015266:	mov    edx,ebx
   140015268:	call   0x1400168b4
   14001526d:	lea    r8,[rbp-0x21]
   140015271:	lea    rcx,[rbp-0x41]
   140015275:	mov    r9d,ebx
   140015278:	mov    edx,ebx
   14001527a:	call   0x140016474
   14001527f:	cmp    rdi,r14
   140015282:	jl     0x14001523f
   140015284:	lea    rcx,[rbp-0x41]
   140015288:	mov    r8,rsi
   14001528b:	mov    edx,r15d
   14001528e:	call   0x1400169e8
   140015293:	mov    edx,DWORD PTR [rbp-0x51]
   140015296:	lea    rcx,[rbp-0x59]
   14001529a:	movss  DWORD PTR [rbp-0x59],xmm0
   14001529f:	call   0x140015f34
   1400152a4:	jmp    0x1400152d0
   1400152a6:	mov    ebx,0x3
   1400152ab:	cmp    eax,ebx
   1400152ad:	jne    0x1400152b9
   1400152af:	movss  xmm0,DWORD PTR [rip+0x2bdd9]        # 0x140041090
   1400152b7:	jmp    0x1400152cb
   1400152b9:	cmp    eax,0x4
   1400152bc:	jne    0x1400152c8
   1400152be:	movss  xmm0,DWORD PTR [rip+0x2bdda]        # 0x1400410a0
   1400152c6:	jmp    0x1400152cb
   1400152c8:	xorps  xmm0,xmm0
   1400152cb:	movss  DWORD PTR [rbp-0x59],xmm0
   1400152d0:	test   r12d,r12d
   1400152d3:	je     0x1400152e6
   1400152d5:	lea    rcx,[rbp-0x59]
   1400152d9:	call   0x140015f2c
   1400152de:	mov    ecx,0x8000
   1400152e3:	xor    WORD PTR [rax],cx
   1400152e6:	movss  xmm0,DWORD PTR [rbp-0x59]
   1400152eb:	mov    rcx,QWORD PTR [rbp+0x7]
   1400152ef:	xor    rcx,rsp
   1400152f2:	call   0x1400187d0
   1400152f7:	add    rsp,0xa8
   1400152fe:	pop    r15
   140015300:	pop    r14
   140015302:	pop    r13
   140015304:	pop    r12
   140015306:	pop    rdi
   140015307:	pop    rsi
   140015308:	pop    rbx
   140015309:	pop    rbp
   14001530a:	ret    
   14001530b:	int3   
   14001530c:	rex push rbp
   14001530e:	push   rbx
   14001530f:	push   rsi
   140015310:	push   rdi
   140015311:	push   r12
   140015313:	push   r14
   140015315:	push   r15
   140015317:	lea    rbp,[rsp-0x27]
   14001531c:	sub    rsp,0xd0
   140015323:	mov    rax,QWORD PTR [rip+0x2c326]        # 0x140041650
   14001532a:	xor    rax,rsp
   14001532d:	mov    QWORD PTR [rbp+0x1f],rax
   140015331:	mov    rdi,rcx
   140015334:	mov    QWORD PTR [rbp-0x71],rcx
   140015338:	lea    rcx,[rbp-0x71]
   14001533c:	mov    rsi,r9
   14001533f:	mov    r15d,r8d
   140015342:	mov    rbx,rdx
   140015345:	call   0x1400157ec
   14001534a:	mov    r12d,eax
   14001534d:	and    r12d,0x8
   140015351:	test   rsi,rsi
   140015354:	je     0x140015359
   140015356:	and    DWORD PTR [rsi],0x0
   140015359:	and    eax,0xfffffff7
   14001535c:	cmp    eax,0x1
   14001535f:	jne    0x14001541c
   140015365:	mov    rdx,QWORD PTR [rbp-0x71]
   140015369:	lea    r9,[rbp-0x69]
   14001536d:	mov    r8,rbx
   140015370:	mov    rcx,rdi
   140015373:	mov    DWORD PTR [rsp+0x20],0x2
   14001537b:	call   0x140015950
   140015380:	mov    ebx,0x3
   140015385:	lea    rcx,[rbp-0x29]
   140015389:	movsd  xmm2,QWORD PTR [rip+0x1b767]        # 0x140030af8
   140015391:	mov    edx,ebx
   140015393:	movsxd r14,eax
   140015396:	call   0x14001752c
   14001539b:	mov    edx,ebx
   14001539d:	lea    rcx,[rbp-0x59]
   1400153a1:	test   r14d,r14d
   1400153a4:	jne    0x1400153b0
   1400153a6:	xorps  xmm2,xmm2
   1400153a9:	call   0x14001752c
   1400153ae:	jmp    0x140015405
   1400153b0:	mov    r8d,DWORD PTR [rbp-0x65]
   1400153b4:	call   0x14001750c
   1400153b9:	mov    edi,0x1
   1400153be:	jmp    0x140015400
   1400153c0:	lea    rax,[rbp-0x11]
   1400153c4:	lea    r8,[rbp-0x29]
   1400153c8:	lea    rcx,[rbp-0x59]
   1400153cc:	mov    r9d,ebx
   1400153cf:	mov    edx,ebx
   1400153d1:	mov    QWORD PTR [rsp+0x20],rax
   1400153d6:	call   0x140017408
   1400153db:	mov    r8d,DWORD PTR [rbp+rdi*4-0x65]
   1400153e0:	inc    rdi
   1400153e3:	lea    rcx,[rbp-0x41]
   1400153e7:	mov    edx,ebx
   1400153e9:	call   0x14001750c
   1400153ee:	lea    r8,[rbp-0x41]
   1400153f2:	lea    rcx,[rbp-0x59]
   1400153f6:	mov    r9d,ebx
   1400153f9:	mov    edx,ebx
   1400153fb:	call   0x14001718c
   140015400:	cmp    rdi,r14
   140015403:	jl     0x1400153c0
   140015405:	mov    edx,DWORD PTR [rbp-0x69]
   140015408:	lea    rcx,[rbp-0x59]
   14001540c:	mov    r8,rsi
   14001540f:	add    edx,r15d
   140015412:	call   0x140017640
   140015417:	jmp    0x140015508
   14001541c:	cmp    eax,0x2
   14001541f:	jne    0x1400154e3
   140015425:	mov    rdx,QWORD PTR [rbp-0x71]
   140015429:	lea    r9,[rbp-0x69]
   14001542d:	mov    r8,rbx
   140015430:	mov    rcx,rdi
   140015433:	mov    DWORD PTR [rsp+0x20],eax
   140015437:	call   0x140015bdc
   14001543c:	mov    ebx,0x3
   140015441:	lea    rcx,[rbp-0x41]
   140015445:	movsd  xmm2,QWORD PTR [rip+0x1b6a3]        # 0x140030af0
   14001544d:	mov    edx,ebx
   14001544f:	movsxd r14,eax
   140015452:	call   0x14001752c
   140015457:	mov    edx,ebx
   140015459:	lea    rcx,[rbp-0x59]
   14001545d:	test   r14d,r14d
   140015460:	jne    0x14001546c
   140015462:	xorps  xmm2,xmm2
   140015465:	call   0x14001752c
   14001546a:	jmp    0x1400154c1
   14001546c:	mov    r8d,DWORD PTR [rbp-0x65]
   140015470:	call   0x14001750c
   140015475:	mov    edi,0x1
   14001547a:	jmp    0x1400154bc
   14001547c:	lea    rax,[rbp-0x11]
   140015480:	lea    r8,[rbp-0x41]
   140015484:	lea    rcx,[rbp-0x59]
   140015488:	mov    r9d,ebx
   14001548b:	mov    edx,ebx
   14001548d:	mov    QWORD PTR [rsp+0x20],rax
   140015492:	call   0x140017408
   140015497:	mov    r8d,DWORD PTR [rbp+rdi*4-0x65]
   14001549c:	inc    rdi
   14001549f:	lea    rcx,[rbp-0x29]
   1400154a3:	mov    edx,ebx
   1400154a5:	call   0x14001750c
   1400154aa:	lea    r8,[rbp-0x29]
   1400154ae:	lea    rcx,[rbp-0x59]
   1400154b2:	mov    r9d,ebx
   1400154b5:	mov    edx,ebx
   1400154b7:	call   0x14001718c
   1400154bc:	cmp    rdi,r14
   1400154bf:	jl     0x14001547c
   1400154c1:	lea    rcx,[rbp-0x59]
   1400154c5:	mov    r8,rsi
   1400154c8:	mov    edx,r15d
   1400154cb:	call   0x140017640
   1400154d0:	mov    edx,DWORD PTR [rbp-0x69]
   1400154d3:	lea    rcx,[rbp-0x79]
   1400154d7:	movsd  QWORD PTR [rbp-0x79],xmm0
   1400154dc:	call   0x140016b8c
   1400154e1:	jmp    0x14001550d
   1400154e3:	mov    ebx,0x3
   1400154e8:	cmp    eax,ebx
   1400154ea:	jne    0x1400154f6
   1400154ec:	movsd  xmm0,QWORD PTR [rip+0x2bc14]        # 0x140041108
   1400154f4:	jmp    0x140015508
   1400154f6:	cmp    eax,0x4
   1400154f9:	jne    0x140015505
   1400154fb:	movsd  xmm0,QWORD PTR [rip+0x2bc15]        # 0x140041118
   140015503:	jmp    0x140015508
   140015505:	xorps  xmm0,xmm0
   140015508:	movsd  QWORD PTR [rbp-0x79],xmm0
   14001550d:	test   r12d,r12d
   140015510:	je     0x140015523
   140015512:	lea    rcx,[rbp-0x79]
   140015516:	call   0x140017798
   14001551b:	mov    ecx,0x8000
   140015520:	xor    WORD PTR [rax],cx
   140015523:	movsd  xmm0,QWORD PTR [rbp-0x79]
   140015528:	mov    rcx,QWORD PTR [rbp+0x1f]
   14001552c:	xor    rcx,rsp
   14001552f:	call   0x1400187d0
   140015534:	add    rsp,0xd0
   14001553b:	pop    r15
   14001553d:	pop    r14
   14001553f:	pop    r12
   140015541:	pop    rdi
   140015542:	pop    rsi
   140015543:	pop    rbx
   140015544:	pop    rbp
   140015545:	ret    
   140015546:	int3   
   140015547:	int3   
   140015548:	rex push rbp
   14001554a:	push   rbx
   14001554b:	push   rsi
   14001554c:	push   rdi
   14001554d:	push   r12
   14001554f:	push   r14
   140015551:	push   r15
   140015553:	lea    rbp,[rsp-0x27]
   140015558:	sub    rsp,0xd0
   14001555f:	mov    rax,QWORD PTR [rip+0x2c0ea]        # 0x140041650
   140015566:	xor    rax,rsp
   140015569:	mov    QWORD PTR [rbp+0x1f],rax
   14001556d:	mov    rdi,rcx
   140015570:	mov    QWORD PTR [rbp-0x71],rcx
   140015574:	lea    rcx,[rbp-0x71]
   140015578:	mov    rsi,r9
   14001557b:	mov    r15d,r8d
   14001557e:	mov    rbx,rdx
   140015581:	call   0x1400157ec
   140015586:	mov    r12d,eax
   140015589:	and    r12d,0x8
   14001558d:	test   rsi,rsi
   140015590:	je     0x140015595
   140015592:	and    DWORD PTR [rsi],0x0
   140015595:	and    eax,0xfffffff7
   140015598:	cmp    eax,0x1
   14001559b:	jne    0x140015658
   1400155a1:	mov    rdx,QWORD PTR [rbp-0x71]
   1400155a5:	lea    r9,[rbp-0x69]
   1400155a9:	mov    r8,rbx
   1400155ac:	mov    rcx,rdi
   1400155af:	mov    DWORD PTR [rsp+0x20],0x2
   1400155b7:	call   0x140015950
   1400155bc:	mov    ebx,0x3
   1400155c1:	lea    rcx,[rbp-0x29]
   1400155c5:	movsd  xmm2,QWORD PTR [rip+0x1b52b]        # 0x140030af8
   1400155cd:	mov    edx,ebx
   1400155cf:	movsxd r14,eax
   1400155d2:	call   0x140017f6c
   1400155d7:	mov    edx,ebx
   1400155d9:	lea    rcx,[rbp-0x59]
   1400155dd:	test   r14d,r14d
   1400155e0:	jne    0x1400155ec
   1400155e2:	xorps  xmm2,xmm2
   1400155e5:	call   0x140017f6c
   1400155ea:	jmp    0x140015641
   1400155ec:	mov    r8d,DWORD PTR [rbp-0x65]
   1400155f0:	call   0x140017f4c
   1400155f5:	mov    edi,0x1
   1400155fa:	jmp    0x14001563c
   1400155fc:	lea    rax,[rbp-0x11]
   140015600:	lea    r8,[rbp-0x29]
   140015604:	lea    rcx,[rbp-0x59]
   140015608:	mov    r9d,ebx
   14001560b:	mov    edx,ebx
   14001560d:	mov    QWORD PTR [rsp+0x20],rax
   140015612:	call   0x140017e48
   140015617:	mov    r8d,DWORD PTR [rbp+rdi*4-0x65]
   14001561c:	inc    rdi
   14001561f:	lea    rcx,[rbp-0x41]
   140015623:	mov    edx,ebx
   140015625:	call   0x140017f4c
   14001562a:	lea    r8,[rbp-0x41]
   14001562e:	lea    rcx,[rbp-0x59]
   140015632:	mov    r9d,ebx
   140015635:	mov    edx,ebx
   140015637:	call   0x140017b24
   14001563c:	cmp    rdi,r14
   14001563f:	jl     0x1400155fc
   140015641:	mov    edx,DWORD PTR [rbp-0x69]
   140015644:	lea    rcx,[rbp-0x59]
   140015648:	mov    r8,rsi
   14001564b:	add    edx,r15d
   14001564e:	call   0x140018080
   140015653:	jmp    0x140015744
   140015658:	cmp    eax,0x2
   14001565b:	jne    0x14001571f
   140015661:	mov    rdx,QWORD PTR [rbp-0x71]
   140015665:	lea    r9,[rbp-0x69]
   140015669:	mov    r8,rbx
   14001566c:	mov    rcx,rdi
   14001566f:	mov    DWORD PTR [rsp+0x20],eax
   140015673:	call   0x140015bdc
   140015678:	mov    ebx,0x3
   14001567d:	lea    rcx,[rbp-0x41]
   140015681:	movsd  xmm2,QWORD PTR [rip+0x1b467]        # 0x140030af0
   140015689:	mov    edx,ebx
   14001568b:	movsxd r14,eax
   14001568e:	call   0x140017f6c
   140015693:	mov    edx,ebx
   140015695:	lea    rcx,[rbp-0x59]
   140015699:	test   r14d,r14d
   14001569c:	jne    0x1400156a8
   14001569e:	xorps  xmm2,xmm2
   1400156a1:	call   0x140017f6c
   1400156a6:	jmp    0x1400156fd
   1400156a8:	mov    r8d,DWORD PTR [rbp-0x65]
   1400156ac:	call   0x140017f4c
   1400156b1:	mov    edi,0x1
   1400156b6:	jmp    0x1400156f8
   1400156b8:	lea    rax,[rbp-0x11]
   1400156bc:	lea    r8,[rbp-0x41]
   1400156c0:	lea    rcx,[rbp-0x59]
   1400156c4:	mov    r9d,ebx
   1400156c7:	mov    edx,ebx
   1400156c9:	mov    QWORD PTR [rsp+0x20],rax
   1400156ce:	call   0x140017e48
   1400156d3:	mov    r8d,DWORD PTR [rbp+rdi*4-0x65]
   1400156d8:	inc    rdi
   1400156db:	lea    rcx,[rbp-0x29]
   1400156df:	mov    edx,ebx
   1400156e1:	call   0x140017f4c
   1400156e6:	lea    r8,[rbp-0x29]
   1400156ea:	lea    rcx,[rbp-0x59]
   1400156ee:	mov    r9d,ebx
   1400156f1:	mov    edx,ebx
   1400156f3:	call   0x140017b24
   1400156f8:	cmp    rdi,r14
   1400156fb:	jl     0x1400156b8
   1400156fd:	lea    rcx,[rbp-0x59]
   140015701:	mov    r8,rsi
   140015704:	mov    edx,r15d
   140015707:	call   0x140018080
   14001570c:	mov    edx,DWORD PTR [rbp-0x69]
   14001570f:	lea    rcx,[rbp-0x79]
   140015713:	movsd  QWORD PTR [rbp-0x79],xmm0
   140015718:	call   0x1400177a0
   14001571d:	jmp    0x140015749
   14001571f:	mov    ebx,0x3
   140015724:	cmp    eax,ebx
   140015726:	jne    0x140015732
   140015728:	movsd  xmm0,QWORD PTR [rip+0x2ba40]        # 0x140041170
   140015730:	jmp    0x140015744
   140015732:	cmp    eax,0x4
   140015735:	jne    0x140015741
   140015737:	movsd  xmm0,QWORD PTR [rip+0x2ba41]        # 0x140041180
   14001573f:	jmp    0x140015744
   140015741:	xorps  xmm0,xmm0
   140015744:	movsd  QWORD PTR [rbp-0x79],xmm0
   140015749:	test   r12d,r12d
   14001574c:	je     0x14001575f
   14001574e:	lea    rcx,[rbp-0x79]
   140015752:	call   0x140017798
   140015757:	mov    ecx,0x8000
   14001575c:	xor    WORD PTR [rax],cx
   14001575f:	movsd  xmm0,QWORD PTR [rbp-0x79]
   140015764:	mov    rcx,QWORD PTR [rbp+0x1f]
   140015768:	xor    rcx,rsp
   14001576b:	call   0x1400187d0
   140015770:	add    rsp,0xd0
   140015777:	pop    r15
   140015779:	pop    r14
   14001577b:	pop    r12
   14001577d:	pop    rdi
   14001577e:	pop    rsi
   14001577f:	pop    rbx
   140015780:	pop    rbp
   140015781:	ret    
   140015782:	int3   
   140015783:	int3   
   140015784:	sub    rsp,0x28
   140015788:	mov    rax,QWORD PTR [rip+0x2b881]        # 0x140041010
   14001578f:	test   rax,rax
   140015792:	je     0x1400157bb
   140015794:	dec    rax
   140015797:	mov    QWORD PTR [rip+0x2b872],rax        # 0x140041010
   14001579e:	call   QWORD PTR [rip+0x19a7c]        # 0x14002f220
   1400157a4:	mov    rcx,QWORD PTR [rip+0x2b865]        # 0x140041010
   1400157ab:	lea    rdx,[rip+0x2de3e]        # 0x1400435f0
   1400157b2:	mov    QWORD PTR [rdx+rcx*8],rax
   1400157b6:	add    rsp,0x28
   1400157ba:	ret    
   1400157bb:	call   0x14001d9f8
   1400157c0:	int3   
   1400157c1:	int3   
   1400157c2:	int3   
   1400157c3:	int3   
   1400157c4:	rex.W jmp QWORD PTR [rip+0x19a75]        # 0x14002f240
   1400157cb:	int3   
   1400157cc:	xor    r8d,r8d
   1400157cf:	mov    edx,0xfa0
   1400157d4:	jmp    0x14001dcd8
   1400157d9:	int3   
   1400157da:	int3   
   1400157db:	int3   
   1400157dc:	rex.W jmp QWORD PTR [rip+0x19a4d]        # 0x14002f230
   1400157e3:	int3   
   1400157e4:	rex.W jmp QWORD PTR [rip+0x19a4d]        # 0x14002f238
   1400157eb:	int3   
   1400157ec:	mov    rax,rsp
   1400157ef:	mov    QWORD PTR [rax+0x8],rbx
   1400157f3:	mov    QWORD PTR [rax+0x10],rsi
   1400157f7:	mov    QWORD PTR [rax+0x18],rdi
   1400157fb:	mov    QWORD PTR [rax+0x20],r14
   1400157ff:	push   r15
   140015801:	sub    rsp,0x20
   140015805:	mov    rbx,QWORD PTR [rcx]
   140015808:	mov    r14,rdx
   14001580b:	mov    r15,rcx
   14001580e:	xor    edi,edi
   140015810:	jmp    0x140015815
   140015812:	inc    rbx
   140015815:	movzx  ecx,BYTE PTR [rbx]
   140015818:	call   0x14001bce4
   14001581d:	test   eax,eax
   14001581f:	jne    0x140015812
   140015821:	cmp    BYTE PTR [rbx],0x2d
   140015824:	jne    0x14001582b
   140015826:	lea    edi,[rax+0x8]
   140015829:	jmp    0x140015830
   14001582b:	cmp    BYTE PTR [rbx],0x2b
   14001582e:	jne    0x140015833
   140015830:	inc    rbx
   140015833:	mov    al,BYTE PTR [rbx]
   140015835:	mov    r8b,0x4e
   140015838:	mov    dl,0xdf
   14001583a:	sub    al,r8b
   14001583d:	test   dl,al
   14001583f:	je     0x1400158e0
   140015845:	mov    al,BYTE PTR [rbx]
   140015847:	mov    r9b,0x49
   14001584a:	sub    al,r9b
   14001584d:	test   dl,al
   14001584f:	je     0x14001588d
   140015851:	cmp    BYTE PTR [rbx],0x30
   140015854:	jne    0x140015885
   140015856:	mov    al,BYTE PTR [rbx+0x1]
   140015859:	sub    al,0x58
   14001585b:	test   dl,al
   14001585d:	jne    0x140015885
   14001585f:	lea    rsi,[rbx+0x2]
   140015863:	mov    rax,rsi
   140015866:	cmp    BYTE PTR [rsi],0x2e
   140015869:	jne    0x14001586e
   14001586b:	inc    rax
   14001586e:	movzx  ecx,BYTE PTR [rax]
   140015871:	call   0x14001bd60
   140015876:	test   eax,eax
   140015878:	je     0x140015885
   14001587a:	mov    rbx,rsi
   14001587d:	or     edi,0x2
   140015880:	jmp    0x140015930
   140015885:	or     edi,0x1
   140015888:	jmp    0x140015930
   14001588d:	mov    al,BYTE PTR [rbx+0x1]
   140015890:	sub    al,r8b
   140015893:	test   dl,al
   140015895:	jne    0x140015923
   14001589b:	mov    al,BYTE PTR [rbx+0x2]
   14001589e:	sub    al,0x46
   1400158a0:	test   dl,al
   1400158a2:	jne    0x140015923
   1400158a4:	add    rbx,0x3
   1400158a8:	or     edi,0x3
   1400158ab:	mov    al,BYTE PTR [rbx]
   1400158ad:	sub    al,r9b
   1400158b0:	test   dl,al
   1400158b2:	jne    0x140015928
   1400158b4:	mov    al,BYTE PTR [rbx+0x1]
   1400158b7:	sub    al,r8b
   1400158ba:	test   dl,al
   1400158bc:	jne    0x140015928
   1400158be:	mov    al,BYTE PTR [rbx+0x2]
   1400158c1:	sub    al,r9b
   1400158c4:	test   dl,al
   1400158c6:	jne    0x140015928
   1400158c8:	mov    al,BYTE PTR [rbx+0x3]
   1400158cb:	sub    al,0x54
   1400158cd:	test   dl,al
   1400158cf:	jne    0x140015928
   1400158d1:	mov    al,BYTE PTR [rbx+0x4]
   1400158d4:	sub    al,0x59
   1400158d6:	test   dl,al
   1400158d8:	jne    0x140015928
   1400158da:	add    rbx,0x5
   1400158de:	jmp    0x140015928
   1400158e0:	mov    al,BYTE PTR [rbx+0x1]
   1400158e3:	sub    al,0x41
   1400158e5:	test   dl,al
   1400158e7:	jne    0x140015923
   1400158e9:	mov    al,BYTE PTR [rbx+0x2]
   1400158ec:	sub    al,r8b
   1400158ef:	test   dl,al
   1400158f1:	jne    0x140015923
   1400158f3:	add    rbx,0x3
   1400158f7:	mov    edi,0x4
   1400158fc:	cmp    BYTE PTR [rbx],0x28
   1400158ff:	mov    rsi,rbx
   140015902:	jne    0x140015928
   140015904:	inc    rsi
   140015907:	movzx  ecx,BYTE PTR [rsi]
   14001590a:	call   0x14001bbe8
   14001590f:	test   eax,eax
   140015911:	jne    0x140015904
   140015913:	cmp    BYTE PTR [rsi],0x5f
   140015916:	je     0x140015904
   140015918:	cmp    BYTE PTR [rsi],0x29
   14001591b:	jne    0x140015928
   14001591d:	lea    rbx,[rsi+0x1]
   140015921:	jmp    0x140015928
   140015923:	mov    rbx,QWORD PTR [r15]
   140015926:	xor    edi,edi
   140015928:	test   r14,r14
   14001592b:	je     0x140015930
   14001592d:	mov    QWORD PTR [r14],rbx
   140015930:	mov    rsi,QWORD PTR [rsp+0x38]
   140015935:	mov    r14,QWORD PTR [rsp+0x48]
   14001593a:	mov    QWORD PTR [r15],rbx
   14001593d:	mov    rbx,QWORD PTR [rsp+0x30]
   140015942:	mov    eax,edi
   140015944:	mov    rdi,QWORD PTR [rsp+0x40]
   140015949:	add    rsp,0x20
   14001594d:	pop    r15
   14001594f:	ret    
   140015950:	mov    QWORD PTR [rsp+0x8],rbx
   140015955:	push   rbp
   140015956:	push   rsi
   140015957:	push   rdi
   140015958:	push   r12
   14001595a:	push   r13
   14001595c:	push   r14
   14001595e:	push   r15
   140015960:	sub    rsp,0x70
   140015964:	mov    rax,QWORD PTR [rip+0x2bce5]        # 0x140041650
   14001596b:	xor    rax,rsp
   14001596e:	mov    QWORD PTR [rsp+0x60],rax
   140015973:	mov    eax,DWORD PTR [rsp+0xd0]
   14001597a:	mov    rsi,r9
   14001597d:	mov    QWORD PTR [rsp+0x28],r8
   140015982:	lea    ebp,[rax+rax*8]
   140015985:	mov    eax,0x2d
   14001598a:	mov    rbx,rdx
   14001598d:	cmp    ebp,eax
   14001598f:	mov    r13,rcx
   140015992:	mov    QWORD PTR [rsp+0x20],rcx
   140015997:	cmovg  ebp,eax
   14001599a:	and    DWORD PTR [r9],0x0
   14001599e:	and    DWORD PTR [r9+0x4],0x0
   1400159a3:	xor    r15d,r15d
   1400159a6:	cmp    BYTE PTR [rdx],0x30
   1400159a9:	jne    0x1400159b7
   1400159ab:	lea    r15d,[rax-0x2c]
   1400159af:	inc    rbx
   1400159b2:	cmp    BYTE PTR [rbx],0x30
   1400159b5:	je     0x1400159af
   1400159b7:	movzx  ecx,BYTE PTR [rbx]
   1400159ba:	xor    edi,edi
   1400159bc:	movsxd r12,ebp
   1400159bf:	call   0x14001bc68
   1400159c4:	test   eax,eax
   1400159c6:	je     0x1400159f5
   1400159c8:	xor    r14d,r14d
   1400159cb:	lea    r15d,[rdi+0x1]
   1400159cf:	cmp    r14,r12
   1400159d2:	jg     0x1400159e4
   1400159d4:	mov    al,BYTE PTR [rbx]
   1400159d6:	inc    edi
   1400159d8:	sub    al,0x30
   1400159da:	inc    r14
   1400159dd:	mov    BYTE PTR [rsp+r14*1+0x2f],al
   1400159e2:	jmp    0x1400159e6
   1400159e4:	inc    DWORD PTR [rsi]
   1400159e6:	inc    rbx
   1400159e9:	movzx  ecx,BYTE PTR [rbx]
   1400159ec:	call   0x14001bc68
   1400159f1:	test   eax,eax
   1400159f3:	jne    0x1400159cf
   1400159f5:	call   0x14001a1ec
   1400159fa:	mov    rcx,QWORD PTR [rax]
   1400159fd:	mov    al,BYTE PTR [rcx]
   1400159ff:	cmp    BYTE PTR [rbx],al
   140015a01:	jne    0x140015a06
   140015a03:	inc    rbx
   140015a06:	test   edi,edi
   140015a08:	jne    0x140015a1d
   140015a0a:	cmp    BYTE PTR [rbx],0x30
   140015a0d:	jne    0x140015a1d
   140015a0f:	lea    r15d,[rdi+0x1]
   140015a13:	dec    DWORD PTR [rsi]
   140015a15:	inc    rbx
   140015a18:	cmp    BYTE PTR [rbx],0x30
   140015a1b:	je     0x140015a13
   140015a1d:	movzx  ecx,BYTE PTR [rbx]
   140015a20:	call   0x14001bc68
   140015a25:	test   eax,eax
   140015a27:	je     0x140015a56
   140015a29:	movsxd r14,edi
   140015a2c:	mov    r15d,0x1
   140015a32:	cmp    r14,r12
   140015a35:	jg     0x140015a47
   140015a37:	mov    al,BYTE PTR [rbx]
   140015a39:	inc    r14
   140015a3c:	inc    edi
   140015a3e:	sub    al,0x30
   140015a40:	dec    DWORD PTR [rsi]
   140015a42:	mov    BYTE PTR [rsp+r14*1+0x2f],al
   140015a47:	inc    rbx
   140015a4a:	movzx  ecx,BYTE PTR [rbx]
   140015a4d:	call   0x14001bc68
   140015a52:	test   eax,eax
   140015a54:	jne    0x140015a32
   140015a56:	cmp    ebp,edi
   140015a58:	jge    0x140015a6c
   140015a5a:	cmp    BYTE PTR [rsp+rbp*1+0x30],0x5
   140015a5f:	jl     0x140015a68
   140015a61:	lea    eax,[rbp-0x1]
   140015a64:	inc    BYTE PTR [rsp+rax*1+0x30]
   140015a68:	inc    DWORD PTR [rsi]
   140015a6a:	mov    edi,ebp
   140015a6c:	movsxd rax,edi
   140015a6f:	test   edi,edi
   140015a71:	jle    0x140015a8d
   140015a73:	lea    rcx,[rsp+0x30]
   140015a78:	cmp    BYTE PTR [rcx+rax*1-0x1],0x0
   140015a7d:	jne    0x140015a8b
   140015a7f:	inc    DWORD PTR [rsi]
   140015a81:	dec    rax
   140015a84:	dec    edi
   140015a86:	test   rax,rax
   140015a89:	jg     0x140015a78
   140015a8b:	test   edi,edi
   140015a8d:	jne    0x140015a99
   140015a8f:	mov    edi,0x1
   140015a94:	mov    BYTE PTR [rsp+0x30],0x0
   140015a99:	test   r15d,r15d
   140015a9c:	je     0x140015bd7
   140015aa2:	mov    r14d,0x38e38e39
   140015aa8:	mov    ebp,0x0
   140015aad:	movsxd r11,edi
   140015ab0:	mov    eax,r14d
   140015ab3:	imul   edi
   140015ab5:	sar    edx,1
   140015ab7:	mov    eax,edx
   140015ab9:	inc    edx
   140015abb:	shr    eax,0x1f
   140015abe:	add    eax,edx
   140015ac0:	lea    r10d,[rax+rax*8]
   140015ac4:	mov    eax,r14d
   140015ac7:	sub    r10d,edi
   140015aca:	imul   r10d
   140015acd:	sar    edx,1
   140015acf:	mov    eax,edx
   140015ad1:	shr    eax,0x1f
   140015ad4:	add    edx,eax
   140015ad6:	lea    ecx,[rdx+rdx*8]
   140015ad9:	cmp    r10d,ecx
   140015adc:	setne  bpl
   140015ae0:	xor    r9d,r9d
   140015ae3:	test   edi,edi
   140015ae5:	jle    0x140015b2d
   140015ae7:	movsxd r8,ebp
   140015aea:	mov    eax,r14d
   140015aed:	imul   r10d
   140015af0:	sar    edx,1
   140015af2:	mov    eax,edx
   140015af4:	shr    eax,0x1f
   140015af7:	add    edx,eax
   140015af9:	lea    ecx,[rdx+rdx*8]
   140015afc:	cmp    r10d,ecx
   140015aff:	jne    0x140015b0e
   140015b01:	movsx  eax,BYTE PTR [rsp+r9*1+0x30]
   140015b07:	inc    ebp
   140015b09:	inc    r8
   140015b0c:	jmp    0x140015b1e
   140015b0e:	mov    eax,DWORD PTR [rsi+r8*4]
   140015b12:	movsx  edx,BYTE PTR [rsp+r9*1+0x30]
   140015b18:	lea    ecx,[rax+rax*4]
   140015b1b:	lea    eax,[rdx+rcx*2]
   140015b1e:	inc    r9
   140015b21:	inc    r10d
   140015b24:	mov    DWORD PTR [rsi+r8*4],eax
   140015b28:	cmp    r9,r11
   140015b2b:	jl     0x140015aea
   140015b2d:	mov    al,BYTE PTR [rbx]
   140015b2f:	sub    al,0x45
   140015b31:	test   al,0xdf
   140015b33:	jne    0x140015b9c
   140015b35:	mov    r13,rbx
   140015b38:	inc    rbx
   140015b3b:	mov    r14b,0x2b
   140015b3e:	mov    al,BYTE PTR [rbx]
   140015b40:	sub    al,r14b
   140015b43:	test   al,0xfd
   140015b45:	jne    0x140015b4d
   140015b47:	mov    r14b,BYTE PTR [rbx]
   140015b4a:	inc    rbx
   140015b4d:	movzx  ecx,BYTE PTR [rbx]
   140015b50:	xor    r12d,r12d
   140015b53:	xor    edi,edi
   140015b55:	call   0x14001bc68
   140015b5a:	test   eax,eax
   140015b5c:	je     0x140015b85
   140015b5e:	lea    r12d,[rdi+0x1]
   140015b62:	cmp    edi,0x5f5e100
   140015b68:	jge    0x140015b76
   140015b6a:	movzx  eax,BYTE PTR [rbx]
   140015b6d:	lea    edi,[rdi+rdi*4]
   140015b70:	lea    edi,[rdi-0x18]
   140015b73:	lea    edi,[rax+rdi*2]
   140015b76:	inc    rbx
   140015b79:	movzx  ecx,BYTE PTR [rbx]
   140015b7c:	call   0x14001bc68
   140015b81:	test   eax,eax
   140015b83:	jne    0x140015b62
   140015b85:	cmp    r14b,0x2d
   140015b89:	jne    0x140015b8d
   140015b8b:	neg    edi
   140015b8d:	add    DWORD PTR [rsi],edi
   140015b8f:	test   r12d,r12d
   140015b92:	jne    0x140015b97
   140015b94:	mov    rbx,r13
   140015b97:	mov    r13,QWORD PTR [rsp+0x20]
   140015b9c:	mov    rax,QWORD PTR [rsp+0x28]
   140015ba1:	test   rax,rax
   140015ba4:	je     0x140015bb0
   140015ba6:	test   r15d,r15d
   140015ba9:	cmovne r13,rbx
   140015bad:	mov    QWORD PTR [rax],r13
   140015bb0:	mov    eax,ebp
   140015bb2:	mov    rcx,QWORD PTR [rsp+0x60]
   140015bb7:	xor    rcx,rsp
   140015bba:	call   0x1400187d0
   140015bbf:	mov    rbx,QWORD PTR [rsp+0xb0]
   140015bc7:	add    rsp,0x70
   140015bcb:	pop    r15
   140015bcd:	pop    r14
   140015bcf:	pop    r13
   140015bd1:	pop    r12
   140015bd3:	pop    rdi
   140015bd4:	pop    rsi
   140015bd5:	pop    rbp
   140015bd6:	ret    
   140015bd7:	xor    ebp,ebp
   140015bd9:	jmp    0x140015b9c
   140015bdb:	int3   
   140015bdc:	mov    QWORD PTR [rsp+0x8],rbx
   140015be1:	push   rbp
   140015be2:	push   rsi
   140015be3:	push   rdi
   140015be4:	push   r12
   140015be6:	push   r13
   140015be8:	push   r14
   140015bea:	push   r15
   140015bec:	sub    rsp,0x70
   140015bf0:	mov    rax,QWORD PTR [rip+0x2ba59]        # 0x140041650
   140015bf7:	xor    rax,rsp
   140015bfa:	mov    QWORD PTR [rsp+0x60],rax
   140015bff:	imul   ebp,DWORD PTR [rsp+0xd0],0x7
   140015c07:	mov    eax,0x23
   140015c0c:	mov    rdi,r9
   140015c0f:	mov    QWORD PTR [rsp+0x30],r8
   140015c14:	mov    rbx,rdx
   140015c17:	mov    r13,rcx
   140015c1a:	cmp    ebp,eax
   140015c1c:	mov    QWORD PTR [rsp+0x28],rcx
   140015c21:	cmovg  ebp,eax
   140015c24:	and    DWORD PTR [r9],0x0
   140015c28:	and    DWORD PTR [r9+0x4],0x0
   140015c2d:	xor    r15d,r15d
   140015c30:	cmp    BYTE PTR [rdx],0x30
   140015c33:	mov    DWORD PTR [rsp+0x20],ebp
   140015c37:	jne    0x140015c45
   140015c39:	lea    r15d,[rax-0x22]
   140015c3d:	inc    rbx
   140015c40:	cmp    BYTE PTR [rbx],0x30
   140015c43:	je     0x140015c3d
   140015c45:	movsx  edx,BYTE PTR [rbx]
   140015c48:	xor    esi,esi
   140015c4a:	lea    r14,[rip+0x1aebf]        # 0x140030b10
   140015c51:	lea    r8d,[rsi+0x16]
   140015c55:	mov    rcx,r14
   140015c58:	call   0x14001d9c0
   140015c5d:	movsxd r12,ebp
   140015c60:	test   rax,rax
   140015c63:	je     0x140015cbc
   140015c65:	xor    r14d,r14d
   140015c68:	lea    r15d,[rsi+0x1]
   140015c6c:	lea    r13,[rip+0x1ae9d]        # 0x140030b10
   140015c73:	lea    rbp,[rip+0x1aeae]        # 0x140030b28
   140015c7a:	cmp    r14,r12
   140015c7d:	jg     0x140015c91
   140015c7f:	sub    rax,r13
   140015c82:	inc    esi
   140015c84:	inc    r14
   140015c87:	mov    al,BYTE PTR [rax+rbp*1]
   140015c8a:	mov    BYTE PTR [rsp+r14*1+0x37],al
   140015c8f:	jmp    0x140015c93
   140015c91:	inc    DWORD PTR [rdi]
   140015c93:	inc    rbx
   140015c96:	mov    r8d,0x16
   140015c9c:	mov    rcx,r13
   140015c9f:	movsx  edx,BYTE PTR [rbx]
   140015ca2:	call   0x14001d9c0
   140015ca7:	test   rax,rax
   140015caa:	jne    0x140015c7a
   140015cac:	mov    ebp,DWORD PTR [rsp+0x20]
   140015cb0:	mov    r13,QWORD PTR [rsp+0x28]
   140015cb5:	lea    r14,[rip+0x1ae54]        # 0x140030b10
   140015cbc:	call   0x14001a1ec
   140015cc1:	mov    rcx,QWORD PTR [rax]
   140015cc4:	mov    al,BYTE PTR [rcx]
   140015cc6:	cmp    BYTE PTR [rbx],al
   140015cc8:	jne    0x140015ccd
   140015cca:	inc    rbx
   140015ccd:	test   esi,esi
   140015ccf:	jne    0x140015ce4
   140015cd1:	cmp    BYTE PTR [rbx],0x30
   140015cd4:	jne    0x140015ce4
   140015cd6:	lea    r15d,[rsi+0x1]
   140015cda:	dec    DWORD PTR [rdi]
   140015cdc:	inc    rbx
   140015cdf:	cmp    BYTE PTR [rbx],0x30
   140015ce2:	je     0x140015cda
   140015ce4:	movsx  edx,BYTE PTR [rbx]
   140015ce7:	mov    r8d,0x16
   140015ced:	mov    rcx,r14
   140015cf0:	call   0x14001d9c0
   140015cf5:	test   rax,rax
   140015cf8:	je     0x140015d4a
   140015cfa:	movsxd r14,esi
   140015cfd:	mov    r15d,0x1
   140015d03:	lea    r13,[rip+0x1ae06]        # 0x140030b10
   140015d0a:	lea    rbp,[rip+0x1ae17]        # 0x140030b28
   140015d11:	cmp    r14,r12
   140015d14:	jg     0x140015d28
   140015d16:	sub    rax,r13
   140015d19:	inc    r14
   140015d1c:	inc    esi
   140015d1e:	mov    al,BYTE PTR [rax+rbp*1]
   140015d21:	dec    DWORD PTR [rdi]
   140015d23:	mov    BYTE PTR [rsp+r14*1+0x37],al
   140015d28:	inc    rbx
   140015d2b:	mov    r8d,0x16
   140015d31:	mov    rcx,r13
   140015d34:	movsx  edx,BYTE PTR [rbx]
   140015d37:	call   0x14001d9c0
   140015d3c:	test   rax,rax
   140015d3f:	jne    0x140015d11
   140015d41:	mov    ebp,DWORD PTR [rsp+0x20]
   140015d45:	mov    r13,QWORD PTR [rsp+0x28]
   140015d4a:	cmp    ebp,esi
   140015d4c:	jge    0x140015d62
   140015d4e:	mov    eax,ebp
   140015d50:	cmp    BYTE PTR [rsp+rax*1+0x38],0x8
   140015d55:	jl     0x140015d5e
   140015d57:	lea    eax,[rbp-0x1]
   140015d5a:	inc    BYTE PTR [rsp+rax*1+0x38]
   140015d5e:	inc    DWORD PTR [rdi]
   140015d60:	mov    esi,ebp
   140015d62:	movsxd rax,esi
   140015d65:	test   esi,esi
   140015d67:	jle    0x140015d83
   140015d69:	lea    rcx,[rsp+0x38]
   140015d6e:	cmp    BYTE PTR [rcx+rax*1-0x1],0x0
   140015d73:	jne    0x140015d81
   140015d75:	inc    DWORD PTR [rdi]
   140015d77:	dec    rax
   140015d7a:	dec    esi
   140015d7c:	test   rax,rax
   140015d7f:	jg     0x140015d6e
   140015d81:	test   esi,esi
   140015d83:	jne    0x140015d8f
   140015d85:	mov    esi,0x1
   140015d8a:	mov    BYTE PTR [rsp+0x38],0x0
   140015d8f:	shl    DWORD PTR [rdi],0x2
   140015d92:	test   r15d,r15d
   140015d95:	je     0x140015ede
   140015d9b:	mov    r14d,0x92492493
   140015da1:	mov    ebp,0x0
   140015da6:	movsxd r11,esi
   140015da9:	mov    eax,r14d
   140015dac:	imul   esi
   140015dae:	add    edx,esi
   140015db0:	sar    edx,0x2
   140015db3:	mov    eax,edx
   140015db5:	inc    edx
   140015db7:	shr    eax,0x1f
   140015dba:	add    eax,edx
   140015dbc:	imul   r10d,eax,0x7
   140015dc0:	mov    eax,r14d
   140015dc3:	sub    r10d,esi
   140015dc6:	imul   r10d
   140015dc9:	add    edx,r10d
   140015dcc:	sar    edx,0x2
   140015dcf:	mov    eax,edx
   140015dd1:	shr    eax,0x1f
   140015dd4:	add    edx,eax
   140015dd6:	imul   ecx,edx,0x7
   140015dd9:	cmp    r10d,ecx
   140015ddc:	setne  bpl
   140015de0:	xor    r9d,r9d
   140015de3:	test   esi,esi
   140015de5:	jle    0x140015e34
   140015de7:	movsxd r8,ebp
   140015dea:	mov    eax,r14d
   140015ded:	imul   r10d
   140015df0:	add    edx,r10d
   140015df3:	sar    edx,0x2
   140015df6:	mov    eax,edx
   140015df8:	shr    eax,0x1f
   140015dfb:	add    edx,eax
   140015dfd:	imul   ecx,edx,0x7
   140015e00:	cmp    r10d,ecx
   140015e03:	jne    0x140015e16
   140015e05:	movsx  eax,BYTE PTR [rsp+r9*1+0x38]
   140015e0b:	inc    ebp
   140015e0d:	inc    r8
   140015e10:	mov    DWORD PTR [rdi+r8*4],eax
   140015e14:	jmp    0x140015e29
   140015e16:	mov    eax,DWORD PTR [rdi+r8*4]
   140015e1a:	movsx  ecx,BYTE PTR [rsp+r9*1+0x38]
   140015e20:	shl    eax,0x4
   140015e23:	add    ecx,eax
   140015e25:	mov    DWORD PTR [rdi+r8*4],ecx
   140015e29:	inc    r9
   140015e2c:	inc    r10d
   140015e2f:	cmp    r9,r11
   140015e32:	jl     0x140015dea
   140015e34:	mov    al,BYTE PTR [rbx]
   140015e36:	sub    al,0x50
   140015e38:	test   al,0xdf
   140015e3a:	jne    0x140015ea3
   140015e3c:	mov    r13,rbx
   140015e3f:	inc    rbx
   140015e42:	mov    r14b,0x2b
   140015e45:	mov    al,BYTE PTR [rbx]
   140015e47:	sub    al,r14b
   140015e4a:	test   al,0xfd
   140015e4c:	jne    0x140015e54
   140015e4e:	mov    r14b,BYTE PTR [rbx]
   140015e51:	inc    rbx
   140015e54:	movzx  ecx,BYTE PTR [rbx]
   140015e57:	xor    r12d,r12d
   140015e5a:	xor    esi,esi
   140015e5c:	call   0x14001bc68
   140015e61:	test   eax,eax
   140015e63:	je     0x140015e8c
   140015e65:	lea    r12d,[rsi+0x1]
   140015e69:	cmp    esi,0x5f5e100
   140015e6f:	jge    0x140015e7d
   140015e71:	movzx  eax,BYTE PTR [rbx]
   140015e74:	lea    esi,[rsi+rsi*4]
   140015e77:	lea    esi,[rsi-0x18]
   140015e7a:	lea    esi,[rax+rsi*2]
   140015e7d:	inc    rbx
   140015e80:	movzx  ecx,BYTE PTR [rbx]
   140015e83:	call   0x14001bc68
   140015e88:	test   eax,eax
   140015e8a:	jne    0x140015e69
   140015e8c:	cmp    r14b,0x2d
   140015e90:	jne    0x140015e94
   140015e92:	neg    esi
   140015e94:	add    DWORD PTR [rdi],esi
   140015e96:	test   r12d,r12d
   140015e99:	jne    0x140015e9e
   140015e9b:	mov    rbx,r13
   140015e9e:	mov    r13,QWORD PTR [rsp+0x28]
   140015ea3:	mov    rax,QWORD PTR [rsp+0x30]
   140015ea8:	test   rax,rax
   140015eab:	je     0x140015eb7
   140015ead:	test   r15d,r15d
   140015eb0:	cmovne r13,rbx
   140015eb4:	mov    QWORD PTR [rax],r13
   140015eb7:	mov    eax,ebp
   140015eb9:	mov    rcx,QWORD PTR [rsp+0x60]
   140015ebe:	xor    rcx,rsp
   140015ec1:	call   0x1400187d0
   140015ec6:	mov    rbx,QWORD PTR [rsp+0xb0]
   140015ece:	add    rsp,0x70
   140015ed2:	pop    r15
   140015ed4:	pop    r14
   140015ed6:	pop    r13
   140015ed8:	pop    r12
   140015eda:	pop    rdi
   140015edb:	pop    rsi
   140015edc:	pop    rbp
   140015edd:	ret    
   140015ede:	xor    ebp,ebp
   140015ee0:	jmp    0x140015ea3
   140015ee2:	int3   
   140015ee3:	int3   
   140015ee4:	movzx  edx,WORD PTR [rcx+0x2]
   140015ee8:	mov    eax,0x7f80
   140015eed:	and    dx,ax
   140015ef0:	cmp    dx,ax
   140015ef3:	jne    0x140015f0d
   140015ef5:	test   BYTE PTR [rcx+0x2],0x7f
   140015ef9:	jne    0x140015f07
   140015efb:	xor    eax,eax
   140015efd:	cmp    WORD PTR [rcx],ax
   140015f00:	mov    eax,0x1
   140015f05:	je     0x140015f29
   140015f07:	mov    eax,0x2
   140015f0c:	ret    
   140015f0d:	movzx  eax,WORD PTR [rcx+0x2]
   140015f11:	test   eax,0xffff7fff
   140015f16:	jne    0x140015f1f
   140015f18:	xor    eax,eax
   140015f1a:	cmp    WORD PTR [rcx],ax
   140015f1d:	je     0x140015f29
   140015f1f:	neg    dx
   140015f22:	sbb    eax,eax
   140015f24:	neg    eax
   140015f26:	add    eax,0xfffffffe
   140015f29:	ret    
   140015f2a:	int3   
   140015f2b:	int3   
   140015f2c:	lea    rax,[rcx+0x2]
   140015f30:	ret    
   140015f31:	int3   
   140015f32:	int3   
   140015f33:	int3   
   140015f34:	mov    rax,rsp
   140015f37:	mov    QWORD PTR [rax+0x8],rbx
   140015f3b:	mov    QWORD PTR [rax+0x10],rbp
   140015f3f:	mov    QWORD PTR [rax+0x18],rsi
   140015f43:	mov    QWORD PTR [rax+0x20],rdi
   140015f47:	push   r14
   140015f49:	sub    rsp,0x20
   140015f4d:	mov    rbx,rcx
   140015f50:	movzx  ecx,WORD PTR [rcx+0x2]
   140015f54:	mov    ebp,0xff
   140015f59:	shr    cx,0x7
   140015f5d:	mov    esi,edx
   140015f5f:	and    cx,bp
   140015f62:	cmp    cx,bp
   140015f65:	jne    0x140015f85
   140015f67:	test   BYTE PTR [rbx+0x2],0x7f
   140015f6b:	jne    0x140015f7b
   140015f6d:	xor    edi,edi
   140015f6f:	lea    eax,[rdi+0x1]
   140015f72:	cmp    WORD PTR [rbx],di
   140015f75:	je     0x1400160ed
   140015f7b:	mov    eax,0x2
   140015f80:	jmp    0x1400160ed
   140015f85:	xor    edi,edi
   140015f87:	test   cx,cx
   140015f8a:	jne    0x140015fa0
   140015f8c:	mov    rcx,rbx
   140015f8f:	call   0x1400181d0
   140015f94:	movzx  ecx,ax
   140015f97:	cmp    di,ax
   140015f9a:	jl     0x1400160ea
   140015fa0:	test   esi,esi
   140015fa2:	jle    0x140015fd7
   140015fa4:	movsx  eax,cx
   140015fa7:	sub    ebp,eax
   140015fa9:	cmp    ebp,esi
   140015fab:	jg     0x140015fd7
   140015fad:	movss  xmm0,DWORD PTR [rip+0x2b0db]        # 0x140041090
   140015fb5:	mov    r11d,0x8000
   140015fbb:	test   WORD PTR [rbx+0x2],r11w
   140015fc0:	je     0x140015fc9
   140015fc2:	xorps  xmm0,XMMWORD PTR [rip+0x1ab77]        # 0x140030b40
   140015fc9:	movss  DWORD PTR [rbx],xmm0
   140015fcd:	mov    eax,0x1
   140015fd2:	jmp    0x1400160ed
   140015fd7:	movsx  edx,cx
   140015fda:	mov    eax,edx
   140015fdc:	neg    eax
   140015fde:	cmp    eax,esi
   140015fe0:	jge    0x140016003
   140015fe2:	mov    eax,0x807f
   140015fe7:	add    si,cx
   140015fea:	and    WORD PTR [rbx+0x2],ax
   140015fee:	mov    eax,0x80
   140015ff3:	imul   si,ax
   140015ff7:	or     WORD PTR [rbx+0x2],si
   140015ffb:	or     eax,0xffffffff
   140015ffe:	jmp    0x1400160ed
   140016003:	movzx  ecx,WORD PTR [rbx+0x2]
   140016007:	mov    eax,0x80
   14001600c:	lea    r10d,[rsi-0x1]
   140016010:	movzx  ebp,cx
   140016013:	and    cx,0x7f
   140016017:	add    r10d,edx
   14001601a:	or     cx,ax
   14001601d:	lea    eax,[r10+0x18]
   140016021:	mov    r11d,0x8000
   140016027:	and    bp,r11w
   14001602b:	mov    WORD PTR [rbx+0x2],cx
   14001602f:	cmp    eax,0x17
   140016032:	ja     0x1400160e3
   140016038:	movzx  esi,di
   14001603b:	mov    r14d,0x10
   140016041:	cmp    r10w,0xfff0
   140016046:	jg     0x140016056
   140016048:	movzx  esi,WORD PTR [rbx]
   14001604b:	mov    WORD PTR [rbx+0x2],di
   14001604f:	add    r10w,r14w
   140016053:	mov    WORD PTR [rbx],cx
   140016056:	neg    r10w
   14001605a:	je     0x1400160a6
   14001605c:	movzx  r8d,WORD PTR [rbx]
   140016060:	mov    eax,edi
   140016062:	movsx  r9d,r10w
   140016066:	sub    r14d,r9d
   140016069:	movzx  edx,r8w
   14001606d:	mov    ecx,r14d
   140016070:	shl    dx,cl
   140016073:	test   si,si
   140016076:	movzx  ecx,r10w
   14001607a:	setne  al
   14001607d:	shr    r8w,cl
   140016081:	movzx  esi,dx
   140016084:	movzx  edx,WORD PTR [rbx+0x2]
   140016088:	or     si,ax
   14001608b:	mov    ecx,r14d
   14001608e:	movzx  eax,dx
   140016091:	shl    ax,cl
   140016094:	mov    ecx,r9d
   140016097:	or     r8w,ax
   14001609b:	shr    dx,cl
   14001609e:	mov    WORD PTR [rbx+0x2],dx
   1400160a2:	mov    WORD PTR [rbx],r8w
   1400160a6:	or     WORD PTR [rbx+0x2],bp
   1400160aa:	movzx  ecx,WORD PTR [rbx+0x2]
   1400160ae:	mov    eax,0x1
   1400160b3:	cmp    r11w,si
   1400160b7:	jb     0x1400160bf
   1400160b9:	jne    0x1400160d0
   1400160bb:	test   BYTE PTR [rbx],al
   1400160bd:	je     0x1400160d0
   1400160bf:	add    WORD PTR [rbx],ax
   1400160c2:	jne    0x1400160d0
   1400160c4:	add    cx,ax
   1400160c7:	mov    WORD PTR [rbx+0x2],cx
   1400160cb:	jmp    0x140015ffb
   1400160d0:	cmp    cx,bp
   1400160d3:	jne    0x140015ffb
   1400160d9:	cmp    WORD PTR [rbx],di
   1400160dc:	je     0x1400160ea
   1400160de:	jmp    0x140015ffb
   1400160e3:	mov    WORD PTR [rbx+0x2],bp
   1400160e7:	mov    WORD PTR [rbx],di
   1400160ea:	movzx  eax,di
   1400160ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400160f2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400160f7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400160fc:	mov    rdi,QWORD PTR [rsp+0x48]
   140016101:	add    rsp,0x20
   140016105:	pop    r14
   140016107:	ret    
   140016108:	movss  DWORD PTR [rsp+0x18],xmm2
   14001610e:	push   rbp
   14001610f:	push   rbx
   140016110:	push   rsi
   140016111:	push   rdi
   140016112:	push   r12
   140016114:	push   r13
   140016116:	push   r14
   140016118:	push   r15
   14001611a:	mov    rbp,rsp
   14001611d:	sub    rsp,0x48
   140016121:	xor    r15d,r15d
   140016124:	movss  DWORD PTR [rbp+0x60],xmm2
   140016129:	movaps XMMWORD PTR [rsp+0x30],xmm6
   14001612e:	movsxd rsi,edx
   140016131:	mov    rdi,rcx
   140016134:	test   edx,edx
   140016136:	je     0x14001645a
   14001613c:	lea    rdx,[rbp+0x60]
   140016140:	lea    rcx,[rbp+0x48]
   140016144:	call   0x1400183cc
   140016149:	cmp    r15w,ax
   14001614d:	jge    0x1400161d3
   140016153:	cmp    ax,0x2
   140016157:	je     0x1400161c5
   140016159:	mov    rcx,rdi
   14001615c:	call   0x140015ee4
   140016161:	test   ax,ax
   140016164:	jle    0x1400161c5
   140016166:	cmp    ax,0x2
   14001616a:	je     0x14001645a
   140016170:	mov    rcx,rdi
   140016173:	call   0x140015f2c
   140016178:	lea    rcx,[rbp+0x58]
   14001617c:	mov    r14d,0x8000
   140016182:	movzx  ebx,WORD PTR [rax]
   140016185:	and    bx,r14w
   140016189:	call   0x140015f2c
   14001618e:	movzx  ecx,WORD PTR [rax]
   140016191:	and    cx,r14w
   140016195:	cmp    cx,bx
   140016198:	je     0x14001645a
   14001619e:	lea    ecx,[r15+0x1]
   1400161a2:	call   0x1400182c8
   1400161a7:	movss  xmm0,DWORD PTR [rip+0x2aef1]        # 0x1400410a0
   1400161af:	movss  DWORD PTR [rdi],xmm0
   1400161b3:	cmp    esi,0x1
   1400161b6:	jle    0x14001645a
   1400161bc:	mov    DWORD PTR [rdi+0x4],r15d
   1400161c0:	jmp    0x14001645a
   1400161c5:	movss  xmm0,DWORD PTR [rbp+0x58]
   1400161ca:	movss  DWORD PTR [rdi],xmm0
   1400161ce:	jmp    0x14001645a
   1400161d3:	test   ax,ax
   1400161d6:	jns    0x14001645a
   1400161dc:	mov    r12d,0x100
   1400161e2:	mov    ebx,r15d
   1400161e5:	test   esi,esi
   1400161e7:	jle    0x14001645a
   1400161ed:	mov    r14,rdi
   1400161f0:	lea    r13,[rdi-0x4]
   1400161f4:	xorps  xmm6,xmm6
   1400161f7:	movss  xmm0,DWORD PTR [r14]
   1400161fc:	lea    rdx,[rbp-0x28]
   140016200:	lea    rcx,[rbp+0x50]
   140016204:	movss  DWORD PTR [rbp-0x28],xmm0
   140016209:	call   0x1400183cc
   14001620e:	xor    edx,edx
   140016210:	cmp    dx,ax
   140016213:	jl     0x14001645a
   140016219:	test   ax,ax
   14001621c:	je     0x140016442
   140016222:	movsx  edx,WORD PTR [rbp+0x50]
   140016226:	movsx  eax,WORD PTR [rbp+0x48]
   14001622a:	movss  xmm1,DWORD PTR [rbp+0x58]
   14001622f:	mov    ecx,edx
   140016231:	sub    ecx,eax
   140016233:	cmp    ecx,0xfffffff4
   140016236:	jg     0x140016290
   140016238:	ucomiss xmm1,xmm6
   14001623b:	jp     0x14001623f
   14001623d:	je     0x140016290
   14001623f:	mov    ecx,ebx
   140016241:	mov    rax,r15
   140016244:	inc    rax
   140016247:	inc    ecx
   140016249:	cmp    rax,rsi
   14001624c:	jge    0x14001625a
   14001624e:	movss  xmm0,DWORD PTR [rdi+rax*4]
   140016253:	ucomiss xmm0,xmm6
   140016256:	jp     0x140016244
   140016258:	jne    0x140016244
   14001625a:	lea    eax,[rsi-0x1]
   14001625d:	cmp    ecx,eax
   14001625f:	jge    0x140016265
   140016261:	inc    ecx
   140016263:	jmp    0x14001626b
   140016265:	cmp    ecx,esi
   140016267:	jne    0x14001626b
   140016269:	dec    ecx
   14001626b:	movsxd rdx,ecx
   14001626e:	cmp    r15,rdx
   140016271:	jge    0x140016282
   140016273:	mov    eax,DWORD PTR [rdi+rdx*4-0x4]
   140016277:	mov    DWORD PTR [rdi+rdx*4],eax
   14001627a:	dec    rdx
   14001627d:	cmp    rdx,r15
   140016280:	jg     0x140016273
   140016282:	and    DWORD PTR [rbp+0x58],0x0
   140016286:	movss  DWORD PTR [r14],xmm1
   14001628b:	jmp    0x140016438
   140016290:	mov    eax,0xc
   140016295:	cmp    ecx,eax
   140016297:	jl     0x1400162aa
   140016299:	ucomiss xmm1,xmm6
   14001629c:	jp     0x1400162a0
   14001629e:	je     0x1400162aa
   1400162a0:	mov    r12d,edx
   1400162a3:	inc    ebx
   1400162a5:	jmp    0x14001642d
   1400162aa:	addss  xmm1,DWORD PTR [r14]
   1400162af:	ucomiss xmm1,xmm6
   1400162b2:	movss  DWORD PTR [r14],xmm1
   1400162b7:	jp     0x1400162f2
   1400162b9:	jne    0x1400162f2
   1400162bb:	mov    ecx,ebx
   1400162bd:	mov    rax,r14
   1400162c0:	inc    ecx
   1400162c2:	lea    rax,[rax+0x4]
   1400162c6:	cmp    ecx,esi
   1400162c8:	jge    0x1400162da
   1400162ca:	movss  xmm0,DWORD PTR [rax]
   1400162ce:	ucomiss xmm0,xmm6
   1400162d1:	movss  DWORD PTR [rax-0x4],xmm0
   1400162d6:	jp     0x1400162c0
   1400162d8:	jne    0x1400162c0
   1400162da:	and    DWORD PTR [rdi+rsi*4-0x4],0x0
   1400162df:	movss  xmm0,DWORD PTR [r14]
   1400162e4:	ucomiss xmm0,xmm6
   1400162e7:	movaps xmm1,xmm0
   1400162ea:	jp     0x1400162f2
   1400162ec:	je     0x14001645a
   1400162f2:	lea    rdx,[rbp+0x58]
   1400162f6:	lea    rcx,[rbp+0x48]
   1400162fa:	movss  DWORD PTR [rbp+0x58],xmm1
   1400162ff:	call   0x1400183cc
   140016304:	movsx  edx,WORD PTR [rbp+0x48]
   140016308:	lea    ecx,[r12-0xc]
   14001630d:	cmp    ecx,edx
   14001630f:	jge    0x1400163a9
   140016315:	sub    dx,r12w
   140016319:	lea    rcx,[rbp+0x58]
   14001631d:	add    dx,0xc
   140016321:	call   0x1400182f4
   140016326:	movsx  edx,WORD PTR [rbp+0x48]
   14001632a:	lea    rcx,[rbp+0x58]
   14001632e:	call   0x140015f34
   140016333:	movss  xmm0,DWORD PTR [r14]
   140016338:	subss  xmm0,DWORD PTR [rbp+0x58]
   14001633d:	ucomiss xmm0,xmm6
   140016340:	movss  DWORD PTR [r14],xmm0
   140016345:	jp     0x14001636d
   140016347:	jne    0x14001636d
   140016349:	mov    ecx,ebx
   14001634b:	mov    rax,r14
   14001634e:	inc    ecx
   140016350:	lea    rax,[rax+0x4]
   140016354:	cmp    ecx,esi
   140016356:	jge    0x140016368
   140016358:	movss  xmm0,DWORD PTR [rax]
   14001635c:	ucomiss xmm0,xmm6
   14001635f:	movss  DWORD PTR [rax-0x4],xmm0
   140016364:	jp     0x14001634e
   140016366:	jne    0x14001634e
   140016368:	and    DWORD PTR [rdi+rsi*4-0x4],0x0
   14001636d:	dec    r15
   140016370:	sub    r13,0x4
   140016374:	sub    r14,0x4
   140016378:	dec    ebx
   14001637a:	jne    0x140016387
   14001637c:	mov    r12d,0x100
   140016382:	jmp    0x140016438
   140016387:	movss  xmm0,DWORD PTR [r13+0x0]
   14001638d:	lea    rdx,[rbp+0x60]
   140016391:	lea    rcx,[rbp+0x50]
   140016395:	movss  DWORD PTR [rbp+0x60],xmm0
   14001639a:	call   0x1400183cc
   14001639f:	movsx  r12d,WORD PTR [rbp+0x50]
   1400163a4:	jmp    0x140016438
   1400163a9:	lea    r12d,[rbx+0x1]
   1400163ad:	cmp    r12d,esi
   1400163b0:	je     0x14001645a
   1400163b6:	movss  xmm0,DWORD PTR [r14]
   1400163bb:	movsxd rax,ebx
   1400163be:	lea    rcx,[rbp+0x50]
   1400163c2:	lea    rbx,[rdi+rax*4]
   1400163c6:	movss  DWORD PTR [rbp+0x58],xmm0
   1400163cb:	mov    rdx,rbx
   1400163ce:	call   0x1400183cc
   1400163d3:	mov    edx,0xc
   1400163d8:	mov    rcx,rbx
   1400163db:	call   0x1400182f4
   1400163e0:	movsx  edx,WORD PTR [rbp+0x50]
   1400163e4:	mov    rcx,rbx
   1400163e7:	call   0x140015f34
   1400163ec:	movsx  eax,WORD PTR [rbp+0x50]
   1400163f0:	movss  xmm0,DWORD PTR [rbp+0x58]
   1400163f5:	movss  xmm1,DWORD PTR [r14]
   1400163fa:	mov    DWORD PTR [rbp-0x24],eax
   1400163fd:	subss  xmm0,xmm1
   140016401:	ucomiss xmm0,xmm6
   140016404:	movss  DWORD PTR [rbp+0x58],xmm0
   140016409:	jp     0x140016414
   14001640b:	jne    0x140016414
   14001640d:	movss  DWORD PTR [rbp+0x60],xmm1
   140016412:	jmp    0x140016419
   140016414:	movss  DWORD PTR [rbp+0x60],xmm0
   140016419:	lea    rdx,[rbp+0x60]
   14001641d:	lea    rcx,[rbp+0x48]
   140016421:	call   0x1400183cc
   140016426:	mov    ebx,r12d
   140016429:	mov    r12d,DWORD PTR [rbp-0x24]
   14001642d:	inc    r15
   140016430:	add    r13,0x4
   140016434:	add    r14,0x4
   140016438:	cmp    ebx,esi
   14001643a:	jl     0x1400161f7
   140016440:	jmp    0x14001645a
   140016442:	movss  xmm0,DWORD PTR [rbp+0x58]
   140016447:	lea    eax,[rbx+0x1]
   14001644a:	movsxd rcx,ebx
   14001644d:	movss  DWORD PTR [rdi+rcx*4],xmm0
   140016452:	cmp    eax,esi
   140016454:	jge    0x14001645a
   140016456:	mov    DWORD PTR [rdi+rcx*4+0x4],edx
   14001645a:	mov    rax,rdi
   14001645d:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140016462:	add    rsp,0x48
   140016466:	pop    r15
   140016468:	pop    r14
   14001646a:	pop    r13
   14001646c:	pop    r12
   14001646e:	pop    rdi
   14001646f:	pop    rsi
   140016470:	pop    rbx
   140016471:	pop    rbp
   140016472:	ret    
   140016473:	int3   
   140016474:	mov    rax,rsp
   140016477:	mov    QWORD PTR [rax+0x8],rbx
   14001647b:	mov    QWORD PTR [rax+0x10],rbp
   14001647f:	mov    QWORD PTR [rax+0x18],rsi
   140016483:	mov    QWORD PTR [rax+0x20],rdi
   140016487:	push   r14
   140016489:	sub    rsp,0x20
   14001648d:	xor    edi,edi
   14001648f:	mov    ebp,r9d
   140016492:	mov    rsi,r8
   140016495:	mov    r14d,edx
   140016498:	mov    rbx,rcx
   14001649b:	test   r9d,r9d
   14001649e:	jle    0x1400164c4
   1400164a0:	movss  xmm2,DWORD PTR [rsi]
   1400164a4:	ucomiss xmm2,DWORD PTR [rip+0x1a6a5]        # 0x140030b50
   1400164ab:	jp     0x1400164af
   1400164ad:	je     0x1400164c4
   1400164af:	mov    edx,r14d
   1400164b2:	mov    rcx,rbx
   1400164b5:	call   0x140016108
   1400164ba:	inc    edi
   1400164bc:	add    rsi,0x4
   1400164c0:	cmp    edi,ebp
   1400164c2:	jl     0x1400164a0
   1400164c4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400164c9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400164ce:	mov    rdi,QWORD PTR [rsp+0x48]
   1400164d3:	mov    rax,rbx
   1400164d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400164db:	add    rsp,0x20
   1400164df:	pop    r14
   1400164e1:	ret    
   1400164e2:	int3   
   1400164e3:	int3   
   1400164e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400164e9:	push   rdi
   1400164ea:	sub    rsp,0x30
   1400164ee:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400164f3:	mov    rbx,rcx
   1400164f6:	test   edx,edx
   1400164f8:	jne    0x140016502
   1400164fa:	xorps  xmm0,xmm0
   1400164fd:	jmp    0x140016599
   140016502:	mov    edi,0x1
   140016507:	cmp    edx,edi
   140016509:	je     0x140016595
   14001650f:	movss  xmm0,DWORD PTR [rcx]
   140016513:	xorps  xmm2,xmm2
   140016516:	ucomiss xmm0,xmm2
   140016519:	jp     0x14001651d
   14001651b:	je     0x140016595
   14001651d:	movss  xmm6,DWORD PTR [rcx+0x4]
   140016522:	ucomiss xmm6,xmm2
   140016525:	jp     0x140016529
   140016527:	je     0x140016595
   140016529:	cmp    edx,0x2
   14001652c:	je     0x14001658c
   14001652e:	movss  xmm1,DWORD PTR [rcx+0x8]
   140016533:	ucomiss xmm1,xmm2
   140016536:	jp     0x14001653a
   140016538:	je     0x14001658c
   14001653a:	addss  xmm6,xmm0
   14001653e:	movss  xmm0,DWORD PTR [rcx+0xc]
   140016543:	movss  DWORD PTR [rsp+0x48],xmm1
   140016549:	ucomiss xmm0,xmm2
   14001654c:	jp     0x140016550
   14001654e:	je     0x140016563
   140016550:	lea    rcx,[rsp+0x48]
   140016555:	call   0x1400025a0
   14001655a:	or     WORD PTR [rax],di
   14001655d:	movss  xmm1,DWORD PTR [rsp+0x48]
   140016563:	movss  xmm2,DWORD PTR [rbx+0x4]
   140016568:	movaps xmm0,xmm6
   14001656b:	subss  xmm0,DWORD PTR [rbx]
   14001656f:	ucomiss xmm0,xmm2
   140016572:	jp     0x14001657f
   140016574:	jne    0x14001657f
   140016576:	addss  xmm1,xmm6
   14001657a:	movaps xmm0,xmm1
   14001657d:	jmp    0x140016599
   14001657f:	addss  xmm2,xmm1
   140016583:	addss  xmm2,DWORD PTR [rbx]
   140016587:	movaps xmm0,xmm2
   14001658a:	jmp    0x140016599
   14001658c:	addss  xmm6,xmm0
   140016590:	movaps xmm0,xmm6
   140016593:	jmp    0x140016599
   140016595:	movss  xmm0,DWORD PTR [rcx]
   140016599:	mov    rbx,QWORD PTR [rsp+0x40]
   14001659e:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400165a3:	add    rsp,0x30
   1400165a7:	pop    rdi
   1400165a8:	ret    
   1400165a9:	int3   
   1400165aa:	int3   
   1400165ab:	int3   
   1400165ac:	rex push rbx
   1400165ae:	sub    rsp,0x20
   1400165b2:	mov    rax,r8
   1400165b5:	movsxd r8,edx
   1400165b8:	mov    rbx,rcx
   1400165bb:	shl    r8,0x2
   1400165bf:	mov    rdx,rax
   1400165c2:	call   0x140018a90
   1400165c7:	mov    rax,rbx
   1400165ca:	add    rsp,0x20
   1400165ce:	pop    rbx
   1400165cf:	ret    
   1400165d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400165d5:	push   rbp
   1400165d6:	push   rsi
   1400165d7:	push   rdi
   1400165d8:	push   r12
   1400165da:	push   r13
   1400165dc:	push   r14
   1400165de:	push   r15
   1400165e0:	mov    rbp,rsp
   1400165e3:	sub    rsp,0x60
   1400165e7:	movaps XMMWORD PTR [rsp+0x50],xmm7
   1400165ec:	mov    rax,QWORD PTR [rip+0x2b05d]        # 0x140041650
   1400165f3:	xor    rax,rsp
   1400165f6:	mov    QWORD PTR [rbp-0x20],rax
   1400165fa:	xor    r12d,r12d
   1400165fd:	movaps xmm7,xmm2
   140016600:	mov    r15d,edx
   140016603:	mov    rdi,rcx
   140016606:	test   edx,edx
   140016608:	jle    0x140016662
   14001660a:	movaps xmm0,xmm2
   14001660d:	mulss  xmm0,DWORD PTR [rcx]
   140016611:	lea    rcx,[rbp-0x30]
   140016615:	movss  DWORD PTR [rbp-0x30],xmm0
   14001661a:	call   0x140015ee4
   14001661f:	movzx  esi,ax
   140016622:	cmp    r12w,ax
   140016626:	jg     0x14001665f
   140016628:	lea    ebx,[r12+0x1]
   14001662d:	cmp    ax,0x2
   140016631:	jne    0x14001663a
   140016633:	mov    ecx,ebx
   140016635:	call   0x1400182c8
   14001663a:	movss  xmm0,DWORD PTR [rbp-0x30]
   14001663f:	movss  DWORD PTR [rdi],xmm0
   140016643:	cmp    r12w,si
   140016647:	jge    0x140016785
   14001664d:	cmp    r15d,ebx
   140016650:	jle    0x140016785
   140016656:	mov    DWORD PTR [rdi+0x4],r12d
   14001665a:	jmp    0x140016785
   14001665f:	mov    DWORD PTR [rdi],r12d
   140016662:	mov    ebx,0x1
   140016667:	mov    r13d,r12d
   14001666a:	mov    r14d,ebx
   14001666d:	test   r15d,r15d
   140016670:	jle    0x140016785
   140016676:	mov    rax,r12
   140016679:	lea    r12,[rbp-0x30]
   14001667d:	mov    esi,ebx
   14001667f:	sub    r12,rdi
   140016682:	mov    QWORD PTR [rbp-0x38],rax
   140016686:	cmp    r14d,0x4
   14001668a:	jge    0x1400166d7
   14001668c:	add    rax,rsi
   14001668f:	lea    rcx,[rdi+rax*4]
   140016693:	lea    eax,[r14+r13*1]
   140016697:	cmp    eax,r15d
   14001669a:	jge    0x1400166ca
   14001669c:	movss  xmm0,DWORD PTR [rcx]
   1400166a0:	ucomiss xmm0,DWORD PTR [rip+0x1a4a9]        # 0x140030b50
   1400166a7:	jp     0x1400166ab
   1400166a9:	je     0x1400166ca
   1400166ab:	and    DWORD PTR [rcx],0x0
   1400166ae:	mulss  xmm0,xmm7
   1400166b2:	add    r14d,ebx
   1400166b5:	add    rsi,rbx
   1400166b8:	movss  DWORD PTR [r12+rcx*1],xmm0
   1400166be:	add    rcx,0x4
   1400166c2:	cmp    r14d,0x4
   1400166c6:	jl     0x140016693
   1400166c8:	jmp    0x1400166d7
   1400166ca:	and    DWORD PTR [rbp+rsi*4-0x30],0x0
   1400166cf:	mov    esi,0x8
   1400166d4:	mov    r14d,esi
   1400166d7:	movss  xmm0,DWORD PTR [rbp-0x30]
   1400166dc:	ucomiss xmm0,DWORD PTR [rip+0x1a46d]        # 0x140030b50
   1400166e3:	jp     0x1400166eb
   1400166e5:	je     0x140016785
   1400166eb:	lea    rdx,[rbp-0x40]
   1400166ef:	lea    rcx,[rbp-0x3c]
   1400166f3:	movss  DWORD PTR [rbp-0x40],xmm0
   1400166f8:	call   0x1400183cc
   1400166fd:	lea    rcx,[rbp-0x40]
   140016701:	mov    edx,0xc
   140016706:	call   0x1400182f4
   14001670b:	movsx  edx,WORD PTR [rbp-0x3c]
   14001670f:	lea    rcx,[rbp-0x40]
   140016713:	call   0x140015f34
   140016718:	mov    edx,r15d
   14001671b:	mov    rcx,rdi
   14001671e:	movss  xmm2,DWORD PTR [rbp-0x40]
   140016723:	call   0x140016108
   140016728:	mov    edx,r15d
   14001672b:	mov    rcx,rdi
   14001672e:	movss  xmm2,DWORD PTR [rbp-0x30]
   140016733:	subss  xmm2,DWORD PTR [rbp-0x40]
   140016738:	call   0x140016108
   14001673d:	mov    rax,rbx
   140016740:	cmp    rbx,rsi
   140016743:	jge    0x140016764
   140016745:	movss  xmm0,DWORD PTR [rbp+rax*4-0x30]
   14001674b:	ucomiss xmm0,DWORD PTR [rip+0x1a3fe]        # 0x140030b50
   140016752:	movss  DWORD PTR [rbp+rax*4-0x34],xmm0
   140016758:	jp     0x14001675c
   14001675a:	je     0x140016764
   14001675c:	add    rax,rbx
   14001675f:	cmp    rax,rsi
   140016762:	jl     0x140016745
   140016764:	mov    rax,QWORD PTR [rbp-0x38]
   140016768:	add    r13d,ebx
   14001676b:	sub    r12,0x4
   14001676f:	add    rax,rbx
   140016772:	sub    r14d,ebx
   140016775:	sub    rsi,rbx
   140016778:	mov    QWORD PTR [rbp-0x38],rax
   14001677c:	cmp    r13d,r15d
   14001677f:	jl     0x140016686
   140016785:	mov    rax,rdi
   140016788:	mov    rcx,QWORD PTR [rbp-0x20]
   14001678c:	xor    rcx,rsp
   14001678f:	call   0x1400187d0
   140016794:	mov    rbx,QWORD PTR [rsp+0xb0]
   14001679c:	movaps xmm7,XMMWORD PTR [rsp+0x50]
   1400167a1:	add    rsp,0x60
   1400167a5:	pop    r15
   1400167a7:	pop    r14
   1400167a9:	pop    r13
   1400167ab:	pop    r12
   1400167ad:	pop    rdi
   1400167ae:	pop    rsi
   1400167af:	pop    rbp
   1400167b0:	ret    
   1400167b1:	int3   
   1400167b2:	int3   
   1400167b3:	int3   
   1400167b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400167b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400167be:	mov    QWORD PTR [rsp+0x18],rsi
   1400167c3:	push   rdi
   1400167c4:	push   r12
   1400167c6:	push   r13
   1400167c8:	push   r14
   1400167ca:	push   r15
   1400167cc:	sub    rsp,0x20
   1400167d0:	movsxd rbp,r9d
   1400167d3:	mov    rbx,r8
   1400167d6:	movsxd rdi,edx
   1400167d9:	mov    rsi,rcx
   1400167dc:	test   edx,edx
   1400167de:	je     0x140016892
   1400167e4:	test   r9d,r9d
   1400167e7:	je     0x140016892
   1400167ed:	movss  xmm2,DWORD PTR [r8]
   1400167f2:	ucomiss xmm2,DWORD PTR [rip+0x1a357]        # 0x140030b50
   1400167f9:	jp     0x1400167fd
   1400167fb:	je     0x14001680e
   1400167fd:	movss  xmm0,DWORD PTR [r8+0x4]
   140016803:	ucomiss xmm0,DWORD PTR [rip+0x1a346]        # 0x140030b50
   14001680a:	jp     0x140016817
   14001680c:	jne    0x140016817
   14001680e:	mov    edx,edi
   140016810:	call   0x1400165d0
   140016815:	jmp    0x140016892
   140016817:	mov    r12,QWORD PTR [rsp+0x70]
   14001681c:	mov    rdx,rcx
   14001681f:	mov    r15,rdi
   140016822:	shl    r15,0x2
   140016826:	mov    rcx,r12
   140016829:	mov    r8,r15
   14001682c:	lea    r13,[r15+r12*1]
   140016830:	call   0x140018a90
   140016835:	mov    edx,edi
   140016837:	mov    rcx,rsi
   14001683a:	movss  xmm2,DWORD PTR [rbx]
   14001683e:	call   0x1400165d0
   140016843:	mov    r14d,0x1
   140016849:	jmp    0x14001688d
   14001684b:	movss  xmm0,DWORD PTR [rbx+r14*4]
   140016851:	ucomiss xmm0,DWORD PTR [rip+0x1a2f8]        # 0x140030b50
   140016858:	jp     0x14001685c
   14001685a:	je     0x140016892
   14001685c:	mov    r8,r15
   14001685f:	mov    rdx,r12
   140016862:	mov    rcx,r13
   140016865:	call   0x140018a90
   14001686a:	mov    edx,edi
   14001686c:	mov    rcx,r13
   14001686f:	movss  xmm2,DWORD PTR [rbx+r14*4]
   140016875:	call   0x1400165d0
   14001687a:	mov    r9d,edi
   14001687d:	mov    r8,r13
   140016880:	mov    edx,edi
   140016882:	mov    rcx,rsi
   140016885:	call   0x140016474
   14001688a:	inc    r14
   14001688d:	cmp    r14,rbp
   140016890:	jl     0x14001684b
   140016892:	mov    rbx,QWORD PTR [rsp+0x50]
   140016897:	mov    rbp,QWORD PTR [rsp+0x58]
   14001689c:	mov    rax,rsi
   14001689f:	mov    rsi,QWORD PTR [rsp+0x60]
   1400168a4:	add    rsp,0x20
   1400168a8:	pop    r15
   1400168aa:	pop    r14
   1400168ac:	pop    r13
   1400168ae:	pop    r12
   1400168b0:	pop    rdi
   1400168b1:	ret    
   1400168b2:	int3   
   1400168b3:	int3   
   1400168b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400168b9:	mov    QWORD PTR [rsp+0x10],rbp
   1400168be:	mov    QWORD PTR [rsp+0x18],rsi
   1400168c3:	push   rdi
   1400168c4:	sub    rsp,0x20
   1400168c8:	mov    esi,edx
   1400168ca:	mov    eax,0x68db8bad
   1400168cf:	mov    edi,r8d
   1400168d2:	mov    rbp,rcx
   1400168d5:	imul   r8d
   1400168d8:	mov    ebx,edx
   1400168da:	mov    edx,esi
   1400168dc:	sar    ebx,0xc
   1400168df:	mov    eax,ebx
   1400168e1:	shr    eax,0x1f
   1400168e4:	add    ebx,eax
   1400168e6:	movd   xmm2,ebx
   1400168ea:	cvtdq2ps xmm2,xmm2
   1400168ed:	call   0x140016938
   1400168f2:	movss  xmm2,DWORD PTR [rip+0x1a266]        # 0x140030b60
   1400168fa:	mov    edx,esi
   1400168fc:	mov    rcx,rbp
   1400168ff:	call   0x1400165d0
   140016904:	mov    edx,esi
   140016906:	mov    rcx,rbp
   140016909:	imul   eax,ebx,0x2710
   14001690f:	sub    edi,eax
   140016911:	movd   xmm2,edi
   140016915:	cvtdq2ps xmm2,xmm2
   140016918:	call   0x140016108
   14001691d:	mov    rbx,QWORD PTR [rsp+0x30]
   140016922:	mov    rsi,QWORD PTR [rsp+0x40]
   140016927:	mov    rax,rbp
   14001692a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001692f:	add    rsp,0x20
   140016933:	pop    rdi
   140016934:	ret    
   140016935:	int3   
   140016936:	int3   
   140016937:	int3   
   140016938:	mov    rax,rsp
   14001693b:	mov    QWORD PTR [rax+0x8],rbx
   14001693f:	mov    QWORD PTR [rax+0x20],rsi
   140016943:	push   rdi
   140016944:	sub    rsp,0x30
   140016948:	movaps XMMWORD PTR [rax-0x18],xmm6
   14001694c:	movaps xmm6,xmm2
   14001694f:	xor    esi,esi
   140016951:	mov    edi,edx
   140016953:	mov    rbx,rcx
   140016956:	movss  DWORD PTR [rax+0x18],xmm6
   14001695b:	test   edx,edx
   14001695d:	jle    0x1400169cf
   14001695f:	cmp    edx,0x1
   140016962:	je     0x1400169cb
   140016964:	lea    rdx,[rax+0x18]
   140016968:	lea    rcx,[rax+0x10]
   14001696c:	call   0x1400183cc
   140016971:	test   ax,ax
   140016974:	je     0x1400169c5
   140016976:	cmp    si,ax
   140016979:	jge    0x14001698a
   14001697b:	movss  xmm0,DWORD PTR [rsp+0x50]
   140016981:	mov    DWORD PTR [rbx+0x4],esi
   140016984:	movss  DWORD PTR [rbx],xmm0
   140016988:	jmp    0x1400169cf
   14001698a:	lea    rcx,[rsp+0x50]
   14001698f:	mov    edx,0xc
   140016994:	call   0x1400182f4
   140016999:	movsx  edx,WORD PTR [rsp+0x48]
   14001699e:	lea    rcx,[rsp+0x50]
   1400169a3:	call   0x140015f34
   1400169a8:	movss  xmm0,DWORD PTR [rsp+0x50]
   1400169ae:	subss  xmm6,xmm0
   1400169b2:	movss  DWORD PTR [rbx],xmm0
   1400169b6:	movss  DWORD PTR [rbx+0x4],xmm6
   1400169bb:	cmp    edi,0x2
   1400169be:	jle    0x1400169cf
   1400169c0:	mov    DWORD PTR [rbx+0x8],esi
   1400169c3:	jmp    0x1400169cf
   1400169c5:	movss  xmm6,DWORD PTR [rsp+0x50]
   1400169cb:	movss  DWORD PTR [rbx],xmm6
   1400169cf:	mov    rsi,QWORD PTR [rsp+0x58]
   1400169d4:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400169d9:	mov    rax,rbx
   1400169dc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400169e1:	add    rsp,0x30
   1400169e5:	pop    rdi
   1400169e6:	ret    
   1400169e7:	int3   
   1400169e8:	mov    QWORD PTR [rsp+0x10],rbx
   1400169ed:	push   rbp
   1400169ee:	push   rsi
   1400169ef:	push   rdi
   1400169f0:	sub    rsp,0x80
   1400169f7:	movaps XMMWORD PTR [rsp+0x70],xmm6
   1400169fc:	mov    rax,QWORD PTR [rip+0x2ac4d]        # 0x140041650
   140016a03:	xor    rax,rsp
   140016a06:	mov    QWORD PTR [rsp+0x68],rax
   140016a0b:	mov    rbp,r8
   140016a0e:	mov    ebx,edx
   140016a10:	mov    rsi,rcx
   140016a13:	test   edx,edx
   140016a15:	je     0x140016afd
   140016a1b:	movss  xmm0,DWORD PTR [rcx]
   140016a1f:	ucomiss xmm0,DWORD PTR [rip+0x1a12a]        # 0x140030b50
   140016a26:	jp     0x140016a2e
   140016a28:	je     0x140016afd
   140016a2e:	mov    edi,0x3
   140016a33:	test   edx,edx
   140016a35:	lea    rcx,[rsp+0x30]
   140016a3a:	mov    edx,edi
   140016a3c:	jle    0x140016a4d
   140016a3e:	movss  xmm2,DWORD PTR [rip+0x1a12e]        # 0x140030b74
   140016a46:	call   0x140016938
   140016a4b:	jmp    0x140016a5b
   140016a4d:	lea    r8,[rip+0x1a114]        # 0x140030b68
   140016a54:	neg    ebx
   140016a56:	call   0x1400165ac
   140016a5b:	test   bl,0x1
   140016a5e:	je     0x140016a7c
   140016a60:	lea    rax,[rsp+0x50]
   140016a65:	lea    r8,[rsp+0x30]
   140016a6a:	mov    r9d,edi
   140016a6d:	mov    edx,edi
   140016a6f:	mov    rcx,rsi
   140016a72:	mov    QWORD PTR [rsp+0x20],rax
   140016a77:	call   0x1400167b4
   140016a7c:	sar    ebx,1
   140016a7e:	mov    edx,edi
   140016a80:	je     0x140016ab1
   140016a82:	lea    r8,[rsp+0x30]
   140016a87:	lea    rcx,[rsp+0x40]
   140016a8c:	call   0x1400165ac
   140016a91:	lea    rax,[rsp+0x50]
   140016a96:	lea    r8,[rsp+0x40]
   140016a9b:	lea    rcx,[rsp+0x30]
   140016aa0:	mov    r9d,edi
   140016aa3:	mov    edx,edi
   140016aa5:	mov    QWORD PTR [rsp+0x20],rax
   140016aaa:	call   0x1400167b4
   140016aaf:	jmp    0x140016a5b
   140016ab1:	mov    rcx,rsi
   140016ab4:	call   0x1400164e4
   140016ab9:	movaps xmm6,xmm0
   140016abc:	ucomiss xmm6,DWORD PTR [rip+0x1a08d]        # 0x140030b50
   140016ac3:	jp     0x140016ac7
   140016ac5:	je     0x140016ae4
   140016ac7:	movss  xmm1,DWORD PTR [rip+0x2a5c1]        # 0x140041090
   140016acf:	ucomiss xmm6,xmm1
   140016ad2:	jp     0x140016ad6
   140016ad4:	je     0x140016ae4
   140016ad6:	xorps  xmm1,XMMWORD PTR [rip+0x1a063]        # 0x140030b40
   140016add:	ucomiss xmm6,xmm1
   140016ae0:	jp     0x140016af8
   140016ae2:	jne    0x140016af8
   140016ae4:	call   0x14001b864
   140016ae9:	mov    DWORD PTR [rax],0x22
   140016aef:	test   rbp,rbp
   140016af2:	je     0x140016af8
   140016af4:	or     DWORD PTR [rbp+0x0],0x1
   140016af8:	movaps xmm0,xmm6
   140016afb:	jmp    0x140016b07
   140016afd:	mov    edx,0x3
   140016b02:	call   0x1400164e4
   140016b07:	mov    rcx,QWORD PTR [rsp+0x68]
   140016b0c:	xor    rcx,rsp
   140016b0f:	call   0x1400187d0
   140016b14:	mov    rbx,QWORD PTR [rsp+0xa8]
   140016b1c:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   140016b21:	add    rsp,0x80
   140016b28:	pop    rdi
   140016b29:	pop    rsi
   140016b2a:	pop    rbp
   140016b2b:	ret    
   140016b2c:	movzx  edx,WORD PTR [rcx+0x6]
   140016b30:	mov    eax,0x7ff0
   140016b35:	and    dx,ax
   140016b38:	cmp    dx,ax
   140016b3b:	jne    0x140016b61
   140016b3d:	test   BYTE PTR [rcx+0x6],0xf
   140016b41:	jne    0x140016b5b
   140016b43:	xor    eax,eax
   140016b45:	cmp    WORD PTR [rcx+0x4],ax
   140016b49:	jne    0x140016b5b
   140016b4b:	cmp    WORD PTR [rcx+0x2],ax
   140016b4f:	jne    0x140016b5b
   140016b51:	cmp    WORD PTR [rcx],ax
   140016b54:	mov    eax,0x1
   140016b59:	je     0x140016b89
   140016b5b:	mov    eax,0x2
   140016b60:	ret    
   140016b61:	movzx  eax,WORD PTR [rcx+0x6]
   140016b65:	test   eax,0xffff7fff
   140016b6a:	jne    0x140016b7f
   140016b6c:	xor    eax,eax
   140016b6e:	cmp    WORD PTR [rcx+0x4],ax
   140016b72:	jne    0x140016b7f
   140016b74:	cmp    WORD PTR [rcx+0x2],ax
   140016b78:	jne    0x140016b7f
   140016b7a:	cmp    WORD PTR [rcx],ax
   140016b7d:	je     0x140016b89
   140016b7f:	neg    dx
   140016b82:	sbb    eax,eax
   140016b84:	neg    eax
   140016b86:	add    eax,0xfffffffe
   140016b89:	ret    
   140016b8a:	int3   
   140016b8b:	int3   
   140016b8c:	mov    QWORD PTR [rsp+0x8],rbx
   140016b91:	mov    QWORD PTR [rsp+0x10],rbp
   140016b96:	mov    QWORD PTR [rsp+0x18],rsi
   140016b9b:	push   rdi
   140016b9c:	push   r14
   140016b9e:	push   r15
   140016ba0:	sub    rsp,0x20
   140016ba4:	mov    rbx,rcx
   140016ba7:	movzx  ecx,WORD PTR [rcx+0x6]
   140016bab:	mov    ebp,0x7ff
   140016bb0:	shr    cx,0x4
   140016bb4:	mov    esi,edx
   140016bb6:	and    cx,bp
   140016bb9:	cmp    cx,bp
   140016bbc:	jne    0x140016bec
   140016bbe:	test   BYTE PTR [rbx+0x6],0xf
   140016bc2:	jne    0x140016bdd
   140016bc4:	xor    edi,edi
   140016bc6:	cmp    WORD PTR [rbx+0x4],di
   140016bca:	jne    0x140016bdd
   140016bcc:	cmp    WORD PTR [rbx+0x2],di
   140016bd0:	jne    0x140016bdd
   140016bd2:	cmp    WORD PTR [rbx],di
   140016bd5:	jne    0x140016bdd
   140016bd7:	lea    r10d,[rdi+0x1]
   140016bdb:	jmp    0x140016be3
   140016bdd:	mov    r10d,0x2
   140016be3:	movzx  eax,r10w
   140016be7:	jmp    0x140016df7
   140016bec:	xor    edi,edi
   140016bee:	test   cx,cx
   140016bf1:	jne    0x140016c07
   140016bf3:	mov    rcx,rbx
   140016bf6:	call   0x140018458
   140016bfb:	movzx  ecx,ax
   140016bfe:	cmp    di,ax
   140016c01:	jl     0x140016df4
   140016c07:	test   esi,esi
   140016c09:	jle    0x140016c3c
   140016c0b:	movsx  eax,cx
   140016c0e:	sub    ebp,eax
   140016c10:	cmp    ebp,esi
   140016c12:	jg     0x140016c3c
   140016c14:	movsd  xmm0,QWORD PTR [rip+0x2a4ec]        # 0x140041108
   140016c1c:	mov    ebp,0x8000
   140016c21:	test   WORD PTR [rbx+0x6],bp
   140016c25:	je     0x140016c2e
   140016c27:	xorps  xmm0,XMMWORD PTR [rip+0x19ed2]        # 0x140030b00
   140016c2e:	movsd  QWORD PTR [rbx],xmm0
   140016c32:	mov    eax,0x1
   140016c37:	jmp    0x140016df7
   140016c3c:	movsx  edx,cx
   140016c3f:	mov    eax,edx
   140016c41:	neg    eax
   140016c43:	cmp    eax,esi
   140016c45:	jge    0x140016c63
   140016c47:	add    si,cx
   140016c4a:	mov    eax,0x800f
   140016c4f:	and    WORD PTR [rbx+0x6],ax
   140016c53:	shl    si,0x4
   140016c57:	or     WORD PTR [rbx+0x6],si
   140016c5b:	or     eax,0xffffffff
   140016c5e:	jmp    0x140016df7
   140016c63:	movzx  ecx,WORD PTR [rbx+0x6]
   140016c67:	lea    r11d,[rsi-0x1]
   140016c6b:	mov    r15d,0x10
   140016c71:	movzx  r14d,cx
   140016c75:	add    r11d,edx
   140016c78:	and    cx,0xf
   140016c7c:	or     cx,r15w
   140016c80:	lea    eax,[r11+0x35]
   140016c84:	mov    ebp,0x8000
   140016c89:	and    r14w,bp
   140016c8d:	mov    WORD PTR [rbx+0x6],cx
   140016c91:	cmp    eax,0x34
   140016c94:	ja     0x140016de9
   140016c9a:	movzx  esi,di
   140016c9d:	lea    r10d,[r15-0xf]
   140016ca1:	cmp    r11w,0xfff0
   140016ca6:	jg     0x140016d01
   140016ca8:	movzx  edx,WORD PTR [rbx+0x2]
   140016cac:	mov    eax,0xfff0
   140016cb1:	movzx  r9d,cx
   140016cb5:	movzx  ecx,WORD PTR [rbx+0x4]
   140016cb9:	sub    ax,r11w
   140016cbd:	shr    ax,0x4
   140016cc1:	add    ax,r10w
   140016cc5:	movzx  r8d,ax
   140016cc9:	movzx  eax,r8w
   140016ccd:	shl    ax,0x4
   140016cd1:	add    r11w,ax
   140016cd5:	test   si,si
   140016cd8:	mov    eax,edi
   140016cda:	setne  al
   140016cdd:	movzx  esi,ax
   140016ce0:	or     si,WORD PTR [rbx]
   140016ce3:	mov    WORD PTR [rbx],dx
   140016ce6:	movzx  edx,cx
   140016ce9:	movzx  ecx,r9w
   140016ced:	mov    r9d,edi
   140016cf0:	sub    r8,r10
   140016cf3:	jne    0x140016cd5
   140016cf5:	mov    WORD PTR [rbx+0x6],di
   140016cf9:	mov    WORD PTR [rbx+0x4],cx
   140016cfd:	mov    WORD PTR [rbx+0x2],dx
   140016d01:	neg    r11w
   140016d05:	je     0x140016d8b
   140016d0b:	movzx  r8d,WORD PTR [rbx]
   140016d0f:	mov    eax,edi
   140016d11:	movsx  r9d,r11w
   140016d15:	sub    r15d,r9d
   140016d18:	movzx  edx,r8w
   140016d1c:	mov    ecx,r15d
   140016d1f:	shl    dx,cl
   140016d22:	test   si,si
   140016d25:	setne  al
   140016d28:	movzx  esi,dx
   140016d2b:	movzx  edx,WORD PTR [rbx+0x2]
   140016d2f:	or     si,ax
   140016d32:	movzx  eax,dx
   140016d35:	shl    ax,cl
   140016d38:	movzx  ecx,r11w
   140016d3c:	shr    r8w,cl
   140016d40:	mov    ecx,r15d
   140016d43:	or     ax,r8w
   140016d47:	movzx  r8d,WORD PTR [rbx+0x4]
   140016d4c:	mov    WORD PTR [rbx],ax
   140016d4f:	movzx  eax,r8w
   140016d53:	shl    ax,cl
   140016d56:	movzx  ecx,r11w
   140016d5a:	shr    dx,cl
   140016d5d:	mov    ecx,r15d
   140016d60:	or     ax,dx
   140016d63:	movzx  edx,WORD PTR [rbx+0x6]
   140016d67:	mov    WORD PTR [rbx+0x2],ax
   140016d6b:	movzx  eax,dx
   140016d6e:	shl    ax,cl
   140016d71:	movzx  ecx,r11w
   140016d75:	shr    r8w,cl
   140016d79:	mov    ecx,r9d
   140016d7c:	or     ax,r8w
   140016d80:	shr    dx,cl
   140016d83:	mov    WORD PTR [rbx+0x6],dx
   140016d87:	mov    WORD PTR [rbx+0x4],ax
   140016d8b:	or     WORD PTR [rbx+0x6],r14w
   140016d90:	movzx  eax,WORD PTR [rbx+0x6]
   140016d94:	cmp    bp,si
   140016d97:	jb     0x140016da0
   140016d99:	jne    0x140016dc1
   140016d9b:	test   BYTE PTR [rbx],r10b
   140016d9e:	je     0x140016dc1
   140016da0:	add    WORD PTR [rbx],r10w
   140016da4:	jne    0x140016dc1
   140016da6:	add    WORD PTR [rbx+0x2],r10w
   140016dab:	jne    0x140016dc1
   140016dad:	add    WORD PTR [rbx+0x4],r10w
   140016db2:	jne    0x140016dc1
   140016db4:	add    ax,r10w
   140016db8:	mov    WORD PTR [rbx+0x6],ax
   140016dbc:	jmp    0x140016c5b
   140016dc1:	cmp    ax,r14w
   140016dc5:	jne    0x140016c5b
   140016dcb:	cmp    WORD PTR [rbx+0x4],di
   140016dcf:	jne    0x140016c5b
   140016dd5:	cmp    WORD PTR [rbx+0x2],di
   140016dd9:	jne    0x140016c5b
   140016ddf:	cmp    WORD PTR [rbx],di
   140016de2:	je     0x140016df4
   140016de4:	jmp    0x140016c5b
   140016de9:	mov    WORD PTR [rbx+0x6],r14w
   140016dee:	mov    DWORD PTR [rbx+0x2],edi
   140016df1:	mov    WORD PTR [rbx],di
   140016df4:	movzx  eax,di
   140016df7:	mov    rbx,QWORD PTR [rsp+0x40]
   140016dfc:	mov    rbp,QWORD PTR [rsp+0x48]
   140016e01:	mov    rsi,QWORD PTR [rsp+0x50]
   140016e06:	add    rsp,0x20
   140016e0a:	pop    r15
   140016e0c:	pop    r14
   140016e0e:	pop    rdi
   140016e0f:	ret    
   140016e10:	movsd  QWORD PTR [rsp+0x18],xmm2
   140016e16:	push   rbp
   140016e17:	push   rbx
   140016e18:	push   rsi
   140016e19:	push   rdi
   140016e1a:	push   r12
   140016e1c:	push   r13
   140016e1e:	push   r14
   140016e20:	push   r15
   140016e22:	mov    rbp,rsp
   140016e25:	sub    rsp,0x48
   140016e29:	xor    r15d,r15d
   140016e2c:	movsd  QWORD PTR [rbp-0x28],xmm2
   140016e31:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140016e36:	movsxd rsi,edx
   140016e39:	mov    rdi,rcx
   140016e3c:	test   edx,edx
   140016e3e:	je     0x140017171
   140016e44:	lea    rdx,[rbp-0x28]
   140016e48:	lea    rcx,[rbp+0x48]
   140016e4c:	call   0x140018714
   140016e51:	cmp    r15w,ax
   140016e55:	jge    0x140016edb
   140016e5b:	cmp    ax,0x2
   140016e5f:	je     0x140016ecd
   140016e61:	mov    rcx,rdi
   140016e64:	call   0x140016b2c
   140016e69:	test   ax,ax
   140016e6c:	jle    0x140016ecd
   140016e6e:	cmp    ax,0x2
   140016e72:	je     0x140017171
   140016e78:	mov    rcx,rdi
   140016e7b:	call   0x140017798
   140016e80:	lea    rcx,[rbp+0x58]
   140016e84:	mov    r14d,0x8000
   140016e8a:	movzx  ebx,WORD PTR [rax]
   140016e8d:	and    bx,r14w
   140016e91:	call   0x140017798
   140016e96:	movzx  ecx,WORD PTR [rax]
   140016e99:	and    cx,r14w
   140016e9d:	cmp    cx,bx
   140016ea0:	je     0x140017171
   140016ea6:	lea    ecx,[r15+0x1]
   140016eaa:	call   0x1400182c8
   140016eaf:	movsd  xmm0,QWORD PTR [rip+0x2a261]        # 0x140041118
   140016eb7:	movsd  QWORD PTR [rdi],xmm0
   140016ebb:	cmp    esi,0x1
   140016ebe:	jle    0x140017171
   140016ec4:	mov    QWORD PTR [rdi+0x8],r15
   140016ec8:	jmp    0x140017171
   140016ecd:	movsd  xmm0,QWORD PTR [rbp+0x58]
   140016ed2:	movsd  QWORD PTR [rdi],xmm0
   140016ed6:	jmp    0x140017171
   140016edb:	test   ax,ax
   140016ede:	jns    0x140017171
   140016ee4:	mov    r12d,0x800
   140016eea:	mov    ebx,r15d
   140016eed:	test   esi,esi
   140016eef:	jle    0x140017171
   140016ef5:	mov    r14,rdi
   140016ef8:	lea    r13,[rdi-0x8]
   140016efc:	xorps  xmm6,xmm6
   140016eff:	movsd  xmm0,QWORD PTR [r14]
   140016f04:	lea    rdx,[rbp-0x20]
   140016f08:	lea    rcx,[rbp+0x50]
   140016f0c:	movsd  QWORD PTR [rbp-0x20],xmm0
   140016f11:	call   0x140018714
   140016f16:	xor    edx,edx
   140016f18:	cmp    dx,ax
   140016f1b:	jl     0x140017171
   140016f21:	test   ax,ax
   140016f24:	je     0x140017158
   140016f2a:	movsx  edx,WORD PTR [rbp+0x50]
   140016f2e:	movsx  eax,WORD PTR [rbp+0x48]
   140016f32:	movsd  xmm1,QWORD PTR [rbp+0x58]
   140016f37:	mov    ecx,edx
   140016f39:	sub    ecx,eax
   140016f3b:	cmp    ecx,0xffffffe6
   140016f3e:	jg     0x140016f9d
   140016f40:	ucomisd xmm1,xmm6
   140016f44:	jp     0x140016f48
   140016f46:	je     0x140016f9d
   140016f48:	mov    ecx,ebx
   140016f4a:	mov    rax,r15
   140016f4d:	inc    rax
   140016f50:	inc    ecx
   140016f52:	cmp    rax,rsi
   140016f55:	jge    0x140016f64
   140016f57:	movsd  xmm0,QWORD PTR [rdi+rax*8]
   140016f5c:	ucomisd xmm0,xmm6
   140016f60:	jp     0x140016f4d
   140016f62:	jne    0x140016f4d
   140016f64:	lea    eax,[rsi-0x1]
   140016f67:	cmp    ecx,eax
   140016f69:	jge    0x140016f6f
   140016f6b:	inc    ecx
   140016f6d:	jmp    0x140016f75
   140016f6f:	cmp    ecx,esi
   140016f71:	jne    0x140016f75
   140016f73:	dec    ecx
   140016f75:	movsxd rdx,ecx
   140016f78:	cmp    r15,rdx
   140016f7b:	jge    0x140016f8e
   140016f7d:	mov    rax,QWORD PTR [rdi+rdx*8-0x8]
   140016f82:	mov    QWORD PTR [rdi+rdx*8],rax
   140016f86:	dec    rdx
   140016f89:	cmp    rdx,r15
   140016f8c:	jg     0x140016f7d
   140016f8e:	movsd  QWORD PTR [r14],xmm1
   140016f93:	movsd  QWORD PTR [rbp+0x58],xmm6
   140016f98:	jmp    0x14001714e
   140016f9d:	mov    eax,0x1a
   140016fa2:	cmp    ecx,eax
   140016fa4:	jl     0x140016fb8
   140016fa6:	ucomisd xmm1,xmm6
   140016faa:	jp     0x140016fae
   140016fac:	je     0x140016fb8
   140016fae:	mov    r12d,edx
   140016fb1:	inc    ebx
   140016fb3:	jmp    0x140017143
   140016fb8:	addsd  xmm1,QWORD PTR [r14]
   140016fbd:	ucomisd xmm1,xmm6
   140016fc1:	movsd  QWORD PTR [r14],xmm1
   140016fc6:	jp     0x140017004
   140016fc8:	jne    0x140017004
   140016fca:	mov    ecx,ebx
   140016fcc:	mov    rax,r14
   140016fcf:	inc    ecx
   140016fd1:	lea    rax,[rax+0x8]
   140016fd5:	cmp    ecx,esi
   140016fd7:	jge    0x140016fea
   140016fd9:	movsd  xmm0,QWORD PTR [rax]
   140016fdd:	ucomisd xmm0,xmm6
   140016fe1:	movsd  QWORD PTR [rax-0x8],xmm0
   140016fe6:	jp     0x140016fcf
   140016fe8:	jne    0x140016fcf
   140016fea:	and    QWORD PTR [rdi+rsi*8-0x8],0x0
   140016ff0:	movsd  xmm0,QWORD PTR [r14]
   140016ff5:	ucomisd xmm0,xmm6
   140016ff9:	movaps xmm1,xmm0
   140016ffc:	jp     0x140017004
   140016ffe:	je     0x140017171
   140017004:	lea    rdx,[rbp+0x58]
   140017008:	lea    rcx,[rbp+0x48]
   14001700c:	movsd  QWORD PTR [rbp+0x58],xmm1
   140017011:	call   0x140018714
   140017016:	movsx  edx,WORD PTR [rbp+0x48]
   14001701a:	lea    ecx,[r12-0x1a]
   14001701f:	cmp    ecx,edx
   140017021:	jge    0x1400170be
   140017027:	sub    dx,r12w
   14001702b:	lea    rcx,[rbp+0x58]
   14001702f:	add    dx,0x1a
   140017033:	call   0x140018600
   140017038:	movsx  edx,WORD PTR [rbp+0x48]
   14001703c:	lea    rcx,[rbp+0x58]
   140017040:	call   0x140016b8c
   140017045:	movsd  xmm0,QWORD PTR [r14]
   14001704a:	subsd  xmm0,QWORD PTR [rbp+0x58]
   14001704f:	ucomisd xmm0,xmm6
   140017053:	movsd  QWORD PTR [r14],xmm0
   140017058:	jp     0x140017082
   14001705a:	jne    0x140017082
   14001705c:	mov    ecx,ebx
   14001705e:	mov    rax,r14
   140017061:	inc    ecx
   140017063:	lea    rax,[rax+0x8]
   140017067:	cmp    ecx,esi
   140017069:	jge    0x14001707c
   14001706b:	movsd  xmm0,QWORD PTR [rax]
   14001706f:	ucomisd xmm0,xmm6
   140017073:	movsd  QWORD PTR [rax-0x8],xmm0
   140017078:	jp     0x140017061
   14001707a:	jne    0x140017061
   14001707c:	and    QWORD PTR [rdi+rsi*8-0x8],0x0
   140017082:	dec    r15
   140017085:	sub    r13,0x8
   140017089:	sub    r14,0x8
   14001708d:	dec    ebx
   14001708f:	jne    0x14001709c
   140017091:	mov    r12d,0x800
   140017097:	jmp    0x14001714e
   14001709c:	movsd  xmm0,QWORD PTR [r13+0x0]
   1400170a2:	lea    rdx,[rbp-0x28]
   1400170a6:	lea    rcx,[rbp+0x50]
   1400170aa:	movsd  QWORD PTR [rbp-0x28],xmm0
   1400170af:	call   0x140018714
   1400170b4:	movsx  r12d,WORD PTR [rbp+0x50]
   1400170b9:	jmp    0x14001714e
   1400170be:	lea    r12d,[rbx+0x1]
   1400170c2:	cmp    r12d,esi
   1400170c5:	je     0x140017171
   1400170cb:	movsd  xmm0,QWORD PTR [r14]
   1400170d0:	movsxd rax,ebx
   1400170d3:	lea    rcx,[rbp+0x50]
   1400170d7:	lea    rbx,[rdi+rax*8]
   1400170db:	movsd  QWORD PTR [rbp+0x58],xmm0
   1400170e0:	mov    rdx,rbx
   1400170e3:	call   0x140018714
   1400170e8:	mov    edx,0x1a
   1400170ed:	mov    rcx,rbx
   1400170f0:	call   0x140018600
   1400170f5:	movsx  edx,WORD PTR [rbp+0x50]
   1400170f9:	mov    rcx,rbx
   1400170fc:	call   0x140016b8c
   140017101:	movsx  eax,WORD PTR [rbp+0x50]
   140017105:	movsd  xmm0,QWORD PTR [rbp+0x58]
   14001710a:	movsd  xmm1,QWORD PTR [r14]
   14001710f:	mov    DWORD PTR [rbp+0x60],eax
   140017112:	subsd  xmm0,xmm1
   140017116:	ucomisd xmm0,xmm6
   14001711a:	movsd  QWORD PTR [rbp+0x58],xmm0
   14001711f:	jp     0x14001712a
   140017121:	jne    0x14001712a
   140017123:	movsd  QWORD PTR [rbp-0x28],xmm1
   140017128:	jmp    0x14001712f
   14001712a:	movsd  QWORD PTR [rbp-0x28],xmm0
   14001712f:	lea    rdx,[rbp-0x28]
   140017133:	lea    rcx,[rbp+0x48]
   140017137:	call   0x140018714
   14001713c:	mov    ebx,r12d
   14001713f:	mov    r12d,DWORD PTR [rbp+0x60]
   140017143:	inc    r15
   140017146:	add    r13,0x8
   14001714a:	add    r14,0x8
   14001714e:	cmp    ebx,esi
   140017150:	jl     0x140016eff
   140017156:	jmp    0x140017171
   140017158:	movsd  xmm0,QWORD PTR [rbp+0x58]
   14001715d:	lea    eax,[rbx+0x1]
   140017160:	movsxd rcx,ebx
   140017163:	movsd  QWORD PTR [rdi+rcx*8],xmm0
   140017168:	cmp    eax,esi
   14001716a:	jge    0x140017171
   14001716c:	mov    QWORD PTR [rdi+rcx*8+0x8],rdx
   140017171:	mov    rax,rdi
   140017174:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140017179:	add    rsp,0x48
   14001717d:	pop    r15
   14001717f:	pop    r14
   140017181:	pop    r13
   140017183:	pop    r12
   140017185:	pop    rdi
   140017186:	pop    rsi
   140017187:	pop    rbx
   140017188:	pop    rbp
   140017189:	ret    
   14001718a:	int3   
   14001718b:	int3   
   14001718c:	mov    rax,rsp
   14001718f:	mov    QWORD PTR [rax+0x8],rbx
   140017193:	mov    QWORD PTR [rax+0x10],rbp
   140017197:	mov    QWORD PTR [rax+0x18],rsi
   14001719b:	mov    QWORD PTR [rax+0x20],rdi
   14001719f:	push   r14
   1400171a1:	sub    rsp,0x20
   1400171a5:	xor    edi,edi
   1400171a7:	mov    ebp,r9d
   1400171aa:	mov    rsi,r8
   1400171ad:	mov    r14d,edx
   1400171b0:	mov    rbx,rcx
   1400171b3:	test   r9d,r9d
   1400171b6:	jle    0x1400171dd
   1400171b8:	movsd  xmm2,QWORD PTR [rsi]
   1400171bc:	ucomisd xmm2,QWORD PTR [rip+0x199b4]        # 0x140030b78
   1400171c4:	jp     0x1400171c8
   1400171c6:	je     0x1400171dd
   1400171c8:	mov    edx,r14d
   1400171cb:	mov    rcx,rbx
   1400171ce:	call   0x140016e10
   1400171d3:	inc    edi
   1400171d5:	add    rsi,0x8
   1400171d9:	cmp    edi,ebp
   1400171db:	jl     0x1400171b8
   1400171dd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400171e2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400171e7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400171ec:	mov    rax,rbx
   1400171ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400171f4:	add    rsp,0x20
   1400171f8:	pop    r14
   1400171fa:	ret    
   1400171fb:	int3   
   1400171fc:	rex push rbx
   1400171fe:	sub    rsp,0x20
   140017202:	mov    rax,r8
   140017205:	movsxd r8,edx
   140017208:	mov    rbx,rcx
   14001720b:	shl    r8,0x3
   14001720f:	mov    rdx,rax
   140017212:	call   0x140018a90
   140017217:	mov    rax,rbx
   14001721a:	add    rsp,0x20
   14001721e:	pop    rbx
   14001721f:	ret    
   140017220:	mov    QWORD PTR [rsp+0x18],rbx
   140017225:	push   rbp
   140017226:	push   rsi
   140017227:	push   rdi
   140017228:	push   r12
   14001722a:	push   r13
   14001722c:	push   r14
   14001722e:	push   r15
   140017230:	mov    rbp,rsp
   140017233:	sub    rsp,0x70
   140017237:	movaps XMMWORD PTR [rsp+0x60],xmm7
   14001723c:	mov    rax,QWORD PTR [rip+0x2a40d]        # 0x140041650
   140017243:	xor    rax,rsp
   140017246:	mov    QWORD PTR [rbp-0x18],rax
   14001724a:	xor    r12d,r12d
   14001724d:	movaps xmm7,xmm2
   140017250:	mov    r15d,edx
   140017253:	mov    rdi,rcx
   140017256:	test   edx,edx
   140017258:	jle    0x1400172b2
   14001725a:	movaps xmm0,xmm2
   14001725d:	mulsd  xmm0,QWORD PTR [rcx]
   140017261:	lea    rcx,[rbp-0x38]
   140017265:	movsd  QWORD PTR [rbp-0x38],xmm0
   14001726a:	call   0x140016b2c
   14001726f:	movzx  esi,ax
   140017272:	cmp    r12w,ax
   140017276:	jg     0x1400172af
   140017278:	lea    ebx,[r12+0x1]
   14001727d:	cmp    ax,0x2
   140017281:	jne    0x14001728a
   140017283:	mov    ecx,ebx
   140017285:	call   0x1400182c8
   14001728a:	movsd  xmm0,QWORD PTR [rbp-0x38]
   14001728f:	movsd  QWORD PTR [rdi],xmm0
   140017293:	cmp    r12w,si
   140017297:	jge    0x1400173da
   14001729d:	cmp    r15d,ebx
   1400172a0:	jle    0x1400173da
   1400172a6:	mov    QWORD PTR [rdi+0x8],r12
   1400172aa:	jmp    0x1400173da
   1400172af:	mov    QWORD PTR [rdi],r12
   1400172b2:	mov    ebx,0x1
   1400172b7:	mov    r13d,r12d
   1400172ba:	mov    r14d,ebx
   1400172bd:	test   r15d,r15d
   1400172c0:	jle    0x1400173da
   1400172c6:	mov    rax,r12
   1400172c9:	lea    r12,[rbp-0x38]
   1400172cd:	mov    esi,ebx
   1400172cf:	sub    r12,rdi
   1400172d2:	mov    QWORD PTR [rbp-0x40],rax
   1400172d6:	cmp    r14d,0x4
   1400172da:	jge    0x14001732a
   1400172dc:	add    rax,rsi
   1400172df:	lea    rcx,[rdi+rax*8]
   1400172e3:	lea    eax,[r14+r13*1]
   1400172e7:	cmp    eax,r15d
   1400172ea:	jge    0x14001731c
   1400172ec:	movsd  xmm0,QWORD PTR [rcx]
   1400172f0:	ucomisd xmm0,QWORD PTR [rip+0x19880]        # 0x140030b78
   1400172f8:	jp     0x1400172fc
   1400172fa:	je     0x14001731c
   1400172fc:	and    QWORD PTR [rcx],0x0
   140017300:	mulsd  xmm0,xmm7
   140017304:	add    r14d,ebx
   140017307:	add    rsi,rbx
   14001730a:	movsd  QWORD PTR [r12+rcx*1],xmm0
   140017310:	add    rcx,0x8
   140017314:	cmp    r14d,0x4
   140017318:	jl     0x1400172e3
   14001731a:	jmp    0x14001732a
   14001731c:	and    QWORD PTR [rbp+rsi*8-0x38],0x0
   140017322:	mov    esi,0x8
   140017327:	mov    r14d,esi
   14001732a:	movsd  xmm0,QWORD PTR [rbp-0x38]
   14001732f:	ucomisd xmm0,QWORD PTR [rip+0x19841]        # 0x140030b78
   140017337:	jp     0x14001733f
   140017339:	je     0x1400173da
   14001733f:	lea    rdx,[rbp-0x48]
   140017343:	lea    rcx,[rbp-0x50]
   140017347:	movsd  QWORD PTR [rbp-0x48],xmm0
   14001734c:	call   0x140018714
   140017351:	lea    rcx,[rbp-0x48]
   140017355:	mov    edx,0x1a
   14001735a:	call   0x140018600
   14001735f:	movsx  edx,WORD PTR [rbp-0x50]
   140017363:	lea    rcx,[rbp-0x48]
   140017367:	call   0x140016b8c
   14001736c:	mov    edx,r15d
   14001736f:	mov    rcx,rdi
   140017372:	movsd  xmm2,QWORD PTR [rbp-0x48]
   140017377:	call   0x140016e10
   14001737c:	mov    edx,r15d
   14001737f:	mov    rcx,rdi
   140017382:	movsd  xmm2,QWORD PTR [rbp-0x38]
   140017387:	subsd  xmm2,QWORD PTR [rbp-0x48]
   14001738c:	call   0x140016e10
   140017391:	mov    rax,rbx
   140017394:	cmp    rbx,rsi
   140017397:	jge    0x1400173b9
   140017399:	movsd  xmm0,QWORD PTR [rbp+rax*8-0x38]
   14001739f:	ucomisd xmm0,QWORD PTR [rip+0x197d1]        # 0x140030b78
   1400173a7:	movsd  QWORD PTR [rbp+rax*8-0x40],xmm0
   1400173ad:	jp     0x1400173b1
   1400173af:	je     0x1400173b9
   1400173b1:	add    rax,rbx
   1400173b4:	cmp    rax,rsi
   1400173b7:	jl     0x140017399
   1400173b9:	mov    rax,QWORD PTR [rbp-0x40]
   1400173bd:	add    r13d,ebx
   1400173c0:	sub    r12,0x8
   1400173c4:	add    rax,rbx
   1400173c7:	sub    r14d,ebx
   1400173ca:	sub    rsi,rbx
   1400173cd:	mov    QWORD PTR [rbp-0x40],rax
   1400173d1:	cmp    r13d,r15d
   1400173d4:	jl     0x1400172d6
   1400173da:	mov    rax,rdi
   1400173dd:	mov    rcx,QWORD PTR [rbp-0x18]
   1400173e1:	xor    rcx,rsp
   1400173e4:	call   0x1400187d0
   1400173e9:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400173f1:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   1400173f6:	add    rsp,0x70
   1400173fa:	pop    r15
   1400173fc:	pop    r14
   1400173fe:	pop    r13
   140017400:	pop    r12
   140017402:	pop    rdi
   140017403:	pop    rsi
   140017404:	pop    rbp
   140017405:	ret    
   140017406:	int3   
   140017407:	int3   
   140017408:	mov    QWORD PTR [rsp+0x8],rbx
   14001740d:	mov    QWORD PTR [rsp+0x10],rbp
   140017412:	mov    QWORD PTR [rsp+0x18],rsi
   140017417:	push   rdi
   140017418:	push   r12
   14001741a:	push   r13
   14001741c:	push   r14
   14001741e:	push   r15
   140017420:	sub    rsp,0x20
   140017424:	movsxd rbp,r9d
   140017427:	mov    rbx,r8
   14001742a:	movsxd rdi,edx
   14001742d:	mov    rsi,rcx
   140017430:	test   edx,edx
   140017432:	je     0x1400174e9
   140017438:	test   r9d,r9d
   14001743b:	je     0x1400174e9
   140017441:	movsd  xmm2,QWORD PTR [r8]
   140017446:	ucomisd xmm2,QWORD PTR [rip+0x1972a]        # 0x140030b78
   14001744e:	jp     0x140017452
   140017450:	je     0x140017464
   140017452:	movsd  xmm0,QWORD PTR [r8+0x8]
   140017458:	ucomisd xmm0,QWORD PTR [rip+0x19718]        # 0x140030b78
   140017460:	jp     0x14001746d
   140017462:	jne    0x14001746d
   140017464:	mov    edx,edi
   140017466:	call   0x140017220
   14001746b:	jmp    0x1400174e9
   14001746d:	mov    r12,QWORD PTR [rsp+0x70]
   140017472:	mov    rdx,rcx
   140017475:	mov    r15,rdi
   140017478:	shl    r15,0x3
   14001747c:	mov    rcx,r12
   14001747f:	mov    r8,r15
   140017482:	lea    r13,[r15+r12*1]
   140017486:	call   0x140018a90
   14001748b:	mov    edx,edi
   14001748d:	mov    rcx,rsi
   140017490:	movsd  xmm2,QWORD PTR [rbx]
   140017494:	call   0x140017220
   140017499:	mov    r14d,0x1
   14001749f:	jmp    0x1400174e4
   1400174a1:	movsd  xmm0,QWORD PTR [rbx+r14*8]
   1400174a7:	ucomisd xmm0,QWORD PTR [rip+0x196c9]        # 0x140030b78
   1400174af:	jp     0x1400174b3
   1400174b1:	je     0x1400174e9
   1400174b3:	mov    r8,r15
   1400174b6:	mov    rdx,r12
   1400174b9:	mov    rcx,r13
   1400174bc:	call   0x140018a90
   1400174c1:	mov    edx,edi
   1400174c3:	mov    rcx,r13
   1400174c6:	movsd  xmm2,QWORD PTR [rbx+r14*8]
   1400174cc:	call   0x140017220
   1400174d1:	mov    r9d,edi
   1400174d4:	mov    r8,r13
   1400174d7:	mov    edx,edi
   1400174d9:	mov    rcx,rsi
   1400174dc:	call   0x14001718c
   1400174e1:	inc    r14
   1400174e4:	cmp    r14,rbp
   1400174e7:	jl     0x1400174a1
   1400174e9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400174ee:	mov    rbp,QWORD PTR [rsp+0x58]
   1400174f3:	mov    rax,rsi
   1400174f6:	mov    rsi,QWORD PTR [rsp+0x60]
   1400174fb:	add    rsp,0x20
   1400174ff:	pop    r15
   140017501:	pop    r14
   140017503:	pop    r13
   140017505:	pop    r12
   140017507:	pop    rdi
   140017508:	ret    
   140017509:	int3   
   14001750a:	int3   
   14001750b:	int3   
   14001750c:	rex push rbx
   14001750e:	sub    rsp,0x20
   140017512:	movd   xmm2,r8d
   140017517:	mov    rbx,rcx
   14001751a:	cvtdq2pd xmm2,xmm2
   14001751e:	call   0x14001752c
   140017523:	mov    rax,rbx
   140017526:	add    rsp,0x20
   14001752a:	pop    rbx
   14001752b:	ret    
   14001752c:	mov    rax,rsp
   14001752f:	mov    QWORD PTR [rax+0x18],rbx
   140017533:	push   rbp
   140017534:	push   rsi
   140017535:	push   rdi
   140017536:	sub    rsp,0x30
   14001753a:	xor    ebp,ebp
   14001753c:	movaps XMMWORD PTR [rax-0x28],xmm6
   140017540:	movsd  QWORD PTR [rax+0x8],xmm2
   140017545:	movaps xmm6,xmm2
   140017548:	mov    edi,edx
   14001754a:	mov    rbx,rcx
   14001754d:	test   edx,edx
   14001754f:	jle    0x140017628
   140017555:	cmp    edx,0x1
   140017558:	je     0x140017624
   14001755e:	lea    rdx,[rax+0x8]
   140017562:	lea    rcx,[rax+0x10]
   140017566:	call   0x140018714
   14001756b:	test   ax,ax
   14001756e:	je     0x14001761e
   140017574:	cmp    bp,ax
   140017577:	jge    0x14001758c
   140017579:	movsd  xmm0,QWORD PTR [rsp+0x50]
   14001757f:	mov    QWORD PTR [rbx+0x8],rbp
   140017583:	movsd  QWORD PTR [rbx],xmm0
   140017587:	jmp    0x140017628
   14001758c:	lea    rcx,[rsp+0x50]
   140017591:	mov    edx,0x1a
   140017596:	call   0x140018600
   14001759b:	movsx  edx,WORD PTR [rsp+0x58]
   1400175a0:	lea    rcx,[rsp+0x50]
   1400175a5:	call   0x140016b8c
   1400175aa:	lea    rsi,[rbx+0x8]
   1400175ae:	movsd  xmm0,QWORD PTR [rsp+0x50]
   1400175b4:	subsd  xmm6,xmm0
   1400175b8:	movsd  QWORD PTR [rbx],xmm0
   1400175bc:	movsd  QWORD PTR [rsi],xmm6
   1400175c0:	cmp    edi,0x2
   1400175c3:	jle    0x140017628
   1400175c5:	ucomisd xmm6,QWORD PTR [rip+0x195ab]        # 0x140030b78
   1400175cd:	jp     0x1400175d7
   1400175cf:	jne    0x1400175d7
   1400175d1:	mov    QWORD PTR [rbx+0x10],rbp
   1400175d5:	jmp    0x140017628
   1400175d7:	lea    rcx,[rsp+0x58]
   1400175dc:	mov    rdx,rsi
   1400175df:	call   0x140018714
   1400175e4:	mov    edx,0x1a
   1400175e9:	mov    rcx,rsi
   1400175ec:	call   0x140018600
   1400175f1:	movsx  edx,WORD PTR [rsp+0x58]
   1400175f6:	mov    rcx,rsi
   1400175f9:	call   0x140016b8c
   1400175fe:	subsd  xmm6,QWORD PTR [rsi]
   140017602:	movsd  QWORD PTR [rbx+0x10],xmm6
   140017607:	cmp    edi,0x3
   14001760a:	jle    0x140017628
   14001760c:	ucomisd xmm6,QWORD PTR [rip+0x19564]        # 0x140030b78
   140017614:	jp     0x140017618
   140017616:	je     0x140017628
   140017618:	mov    QWORD PTR [rbx+0x18],rbp
   14001761c:	jmp    0x140017628
   14001761e:	movsd  xmm6,QWORD PTR [rsp+0x50]
   140017624:	movsd  QWORD PTR [rbx],xmm6
   140017628:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14001762d:	mov    rax,rbx
   140017630:	mov    rbx,QWORD PTR [rsp+0x60]
   140017635:	add    rsp,0x30
   140017639:	pop    rdi
   14001763a:	pop    rsi
   14001763b:	pop    rbp
   14001763c:	ret    
   14001763d:	int3   
   14001763e:	int3   
   14001763f:	int3   
   140017640:	mov    rax,rsp
   140017643:	mov    QWORD PTR [rax+0x10],rbx
   140017647:	push   rbp
   140017648:	push   rsi
   140017649:	push   rdi
   14001764a:	sub    rsp,0xb0
   140017651:	movaps XMMWORD PTR [rax-0x28],xmm6
   140017655:	mov    rax,QWORD PTR [rip+0x29ff4]        # 0x140041650
   14001765c:	xor    rax,rsp
   14001765f:	mov    QWORD PTR [rsp+0x90],rax
   140017667:	mov    rbp,r8
   14001766a:	mov    ebx,edx
   14001766c:	mov    rsi,rcx
   14001766f:	test   edx,edx
   140017671:	je     0x14001775d
   140017677:	movsd  xmm0,QWORD PTR [rcx]
   14001767b:	ucomisd xmm0,QWORD PTR [rip+0x194f5]        # 0x140030b78
   140017683:	jp     0x14001768b
   140017685:	je     0x14001775d
   14001768b:	mov    edi,0x3
   140017690:	test   edx,edx
   140017692:	lea    rcx,[rsp+0x30]
   140017697:	mov    edx,edi
   140017699:	jle    0x1400176aa
   14001769b:	movsd  xmm2,QWORD PTR [rip+0x194f5]        # 0x140030b98
   1400176a3:	call   0x14001752c
   1400176a8:	jmp    0x1400176b8
   1400176aa:	lea    r8,[rip+0x194cf]        # 0x140030b80
   1400176b1:	neg    ebx
   1400176b3:	call   0x1400171fc
   1400176b8:	test   bl,0x1
   1400176bb:	je     0x1400176d9
   1400176bd:	lea    rax,[rsp+0x60]
   1400176c2:	lea    r8,[rsp+0x30]
   1400176c7:	mov    r9d,edi
   1400176ca:	mov    edx,edi
   1400176cc:	mov    rcx,rsi
   1400176cf:	mov    QWORD PTR [rsp+0x20],rax
   1400176d4:	call   0x140017408
   1400176d9:	sar    ebx,1
   1400176db:	mov    edx,edi
   1400176dd:	je     0x14001770e
   1400176df:	lea    r8,[rsp+0x30]
   1400176e4:	lea    rcx,[rsp+0x48]
   1400176e9:	call   0x1400171fc
   1400176ee:	lea    rax,[rsp+0x60]
   1400176f3:	lea    r8,[rsp+0x48]
   1400176f8:	lea    rcx,[rsp+0x30]
   1400176fd:	mov    r9d,edi
   140017700:	mov    edx,edi
   140017702:	mov    QWORD PTR [rsp+0x20],rax
   140017707:	call   0x140017408
   14001770c:	jmp    0x1400176b8
   14001770e:	mov    rcx,rsi
   140017711:	call   0x140017b94
   140017716:	ucomisd xmm0,QWORD PTR [rip+0x1945a]        # 0x140030b78
   14001771e:	movaps xmm6,xmm0
   140017721:	jp     0x140017725
   140017723:	je     0x140017744
   140017725:	movsd  xmm1,QWORD PTR [rip+0x299db]        # 0x140041108
   14001772d:	ucomisd xmm0,xmm1
   140017731:	jp     0x140017735
   140017733:	je     0x140017744
   140017735:	xorps  xmm1,XMMWORD PTR [rip+0x193c4]        # 0x140030b00
   14001773c:	ucomisd xmm0,xmm1
   140017740:	jp     0x140017758
   140017742:	jne    0x140017758
   140017744:	call   0x14001b864
   140017749:	mov    DWORD PTR [rax],0x22
   14001774f:	test   rbp,rbp
   140017752:	je     0x140017758
   140017754:	or     DWORD PTR [rbp+0x0],0x1
   140017758:	movaps xmm0,xmm6
   14001775b:	jmp    0x140017767
   14001775d:	mov    edx,0x3
   140017762:	call   0x140017b94
   140017767:	mov    rcx,QWORD PTR [rsp+0x90]
   14001776f:	xor    rcx,rsp
   140017772:	call   0x1400187d0
   140017777:	lea    r11,[rsp+0xb0]
   14001777f:	mov    rbx,QWORD PTR [r11+0x28]
   140017783:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140017788:	mov    rsp,r11
   14001778b:	pop    rdi
   14001778c:	pop    rsi
   14001778d:	pop    rbp
   14001778e:	ret    
   14001778f:	int3   
   140017790:	jmp    0x140016b2c
   140017795:	int3   
   140017796:	int3   
   140017797:	int3   
   140017798:	lea    rax,[rcx+0x6]
   14001779c:	ret    
   14001779d:	int3   
   14001779e:	int3   
   14001779f:	int3   
   1400177a0:	jmp    0x140016b8c
   1400177a5:	int3   
   1400177a6:	int3   
   1400177a7:	int3   
   1400177a8:	movsd  QWORD PTR [rsp+0x18],xmm2
   1400177ae:	push   rbp
   1400177af:	push   rbx
   1400177b0:	push   rsi
   1400177b1:	push   rdi
   1400177b2:	push   r12
   1400177b4:	push   r13
   1400177b6:	push   r14
   1400177b8:	push   r15
   1400177ba:	mov    rbp,rsp
   1400177bd:	sub    rsp,0x48
   1400177c1:	xor    r15d,r15d
   1400177c4:	movsd  QWORD PTR [rbp-0x28],xmm2
   1400177c9:	movaps XMMWORD PTR [rsp+0x30],xmm6
   1400177ce:	movsxd rsi,edx
   1400177d1:	mov    rdi,rcx
   1400177d4:	test   edx,edx
   1400177d6:	je     0x140017b09
   1400177dc:	lea    rdx,[rbp-0x28]
   1400177e0:	lea    rcx,[rbp+0x48]
   1400177e4:	call   0x1400187b8
   1400177e9:	cmp    r15w,ax
   1400177ed:	jge    0x140017873
   1400177f3:	cmp    ax,0x2
   1400177f7:	je     0x140017865
   1400177f9:	mov    rcx,rdi
   1400177fc:	call   0x140017790
   140017801:	test   ax,ax
   140017804:	jle    0x140017865
   140017806:	cmp    ax,0x2
   14001780a:	je     0x140017b09
   140017810:	mov    rcx,rdi
   140017813:	call   0x140017798
   140017818:	lea    rcx,[rbp+0x58]
   14001781c:	mov    r14d,0x8000
   140017822:	movzx  ebx,WORD PTR [rax]
   140017825:	and    bx,r14w
   140017829:	call   0x140017798
   14001782e:	movzx  ecx,WORD PTR [rax]
   140017831:	and    cx,r14w
   140017835:	cmp    cx,bx
   140017838:	je     0x140017b09
   14001783e:	lea    ecx,[r15+0x1]
   140017842:	call   0x1400182c8
   140017847:	movsd  xmm0,QWORD PTR [rip+0x29931]        # 0x140041180
   14001784f:	movsd  QWORD PTR [rdi],xmm0
   140017853:	cmp    esi,0x1
   140017856:	jle    0x140017b09
   14001785c:	mov    QWORD PTR [rdi+0x8],r15
   140017860:	jmp    0x140017b09
   140017865:	movsd  xmm0,QWORD PTR [rbp+0x58]
   14001786a:	movsd  QWORD PTR [rdi],xmm0
   14001786e:	jmp    0x140017b09
   140017873:	test   ax,ax
   140017876:	jns    0x140017b09
   14001787c:	mov    r12d,0x800
   140017882:	mov    ebx,r15d
   140017885:	test   esi,esi
   140017887:	jle    0x140017b09
   14001788d:	mov    r14,rdi
   140017890:	lea    r13,[rdi-0x8]
   140017894:	xorps  xmm6,xmm6
   140017897:	movsd  xmm0,QWORD PTR [r14]
   14001789c:	lea    rdx,[rbp-0x20]
   1400178a0:	lea    rcx,[rbp+0x50]
   1400178a4:	movsd  QWORD PTR [rbp-0x20],xmm0
   1400178a9:	call   0x1400187b8
   1400178ae:	xor    edx,edx
   1400178b0:	cmp    dx,ax
   1400178b3:	jl     0x140017b09
   1400178b9:	test   ax,ax
   1400178bc:	je     0x140017af0
   1400178c2:	movsx  edx,WORD PTR [rbp+0x50]
   1400178c6:	movsx  eax,WORD PTR [rbp+0x48]
   1400178ca:	movsd  xmm1,QWORD PTR [rbp+0x58]
   1400178cf:	mov    ecx,edx
   1400178d1:	sub    ecx,eax
   1400178d3:	cmp    ecx,0xffffffe6
   1400178d6:	jg     0x140017935
   1400178d8:	ucomisd xmm1,xmm6
   1400178dc:	jp     0x1400178e0
   1400178de:	je     0x140017935
   1400178e0:	mov    ecx,ebx
   1400178e2:	mov    rax,r15
   1400178e5:	inc    rax
   1400178e8:	inc    ecx
   1400178ea:	cmp    rax,rsi
   1400178ed:	jge    0x1400178fc
   1400178ef:	movsd  xmm0,QWORD PTR [rdi+rax*8]
   1400178f4:	ucomisd xmm0,xmm6
   1400178f8:	jp     0x1400178e5
   1400178fa:	jne    0x1400178e5
   1400178fc:	lea    eax,[rsi-0x1]
   1400178ff:	cmp    ecx,eax
   140017901:	jge    0x140017907
   140017903:	inc    ecx
   140017905:	jmp    0x14001790d
   140017907:	cmp    ecx,esi
   140017909:	jne    0x14001790d
   14001790b:	dec    ecx
   14001790d:	movsxd rdx,ecx
   140017910:	cmp    r15,rdx
   140017913:	jge    0x140017926
   140017915:	mov    rax,QWORD PTR [rdi+rdx*8-0x8]
   14001791a:	mov    QWORD PTR [rdi+rdx*8],rax
   14001791e:	dec    rdx
   140017921:	cmp    rdx,r15
   140017924:	jg     0x140017915
   140017926:	movsd  QWORD PTR [r14],xmm1
   14001792b:	movsd  QWORD PTR [rbp+0x58],xmm6
   140017930:	jmp    0x140017ae6
   140017935:	mov    eax,0x1a
   14001793a:	cmp    ecx,eax
   14001793c:	jl     0x140017950
   14001793e:	ucomisd xmm1,xmm6
   140017942:	jp     0x140017946
   140017944:	je     0x140017950
   140017946:	mov    r12d,edx
   140017949:	inc    ebx
   14001794b:	jmp    0x140017adb
   140017950:	addsd  xmm1,QWORD PTR [r14]
   140017955:	ucomisd xmm1,xmm6
   140017959:	movsd  QWORD PTR [r14],xmm1
   14001795e:	jp     0x14001799c
   140017960:	jne    0x14001799c
   140017962:	mov    ecx,ebx
   140017964:	mov    rax,r14
   140017967:	inc    ecx
   140017969:	lea    rax,[rax+0x8]
   14001796d:	cmp    ecx,esi
   14001796f:	jge    0x140017982
   140017971:	movsd  xmm0,QWORD PTR [rax]
   140017975:	ucomisd xmm0,xmm6
   140017979:	movsd  QWORD PTR [rax-0x8],xmm0
   14001797e:	jp     0x140017967
   140017980:	jne    0x140017967
   140017982:	and    QWORD PTR [rdi+rsi*8-0x8],0x0
   140017988:	movsd  xmm0,QWORD PTR [r14]
   14001798d:	ucomisd xmm0,xmm6
   140017991:	movaps xmm1,xmm0
   140017994:	jp     0x14001799c
   140017996:	je     0x140017b09
   14001799c:	lea    rdx,[rbp+0x58]
   1400179a0:	lea    rcx,[rbp+0x48]
   1400179a4:	movsd  QWORD PTR [rbp+0x58],xmm1
   1400179a9:	call   0x1400187b8
   1400179ae:	movsx  edx,WORD PTR [rbp+0x48]
   1400179b2:	lea    ecx,[r12-0x1a]
   1400179b7:	cmp    ecx,edx
   1400179b9:	jge    0x140017a56
   1400179bf:	sub    dx,r12w
   1400179c3:	lea    rcx,[rbp+0x58]
   1400179c7:	add    dx,0x1a
   1400179cb:	call   0x1400187b0
   1400179d0:	movsx  edx,WORD PTR [rbp+0x48]
   1400179d4:	lea    rcx,[rbp+0x58]
   1400179d8:	call   0x1400177a0
   1400179dd:	movsd  xmm0,QWORD PTR [r14]
   1400179e2:	subsd  xmm0,QWORD PTR [rbp+0x58]
   1400179e7:	ucomisd xmm0,xmm6
   1400179eb:	movsd  QWORD PTR [r14],xmm0
   1400179f0:	jp     0x140017a1a
   1400179f2:	jne    0x140017a1a
   1400179f4:	mov    ecx,ebx
   1400179f6:	mov    rax,r14
   1400179f9:	inc    ecx
   1400179fb:	lea    rax,[rax+0x8]
   1400179ff:	cmp    ecx,esi
   140017a01:	jge    0x140017a14
   140017a03:	movsd  xmm0,QWORD PTR [rax]
   140017a07:	ucomisd xmm0,xmm6
   140017a0b:	movsd  QWORD PTR [rax-0x8],xmm0
   140017a10:	jp     0x1400179f9
   140017a12:	jne    0x1400179f9
   140017a14:	and    QWORD PTR [rdi+rsi*8-0x8],0x0
   140017a1a:	dec    r15
   140017a1d:	sub    r13,0x8
   140017a21:	sub    r14,0x8
   140017a25:	dec    ebx
   140017a27:	jne    0x140017a34
   140017a29:	mov    r12d,0x800
   140017a2f:	jmp    0x140017ae6
   140017a34:	movsd  xmm0,QWORD PTR [r13+0x0]
   140017a3a:	lea    rdx,[rbp-0x28]
   140017a3e:	lea    rcx,[rbp+0x50]
   140017a42:	movsd  QWORD PTR [rbp-0x28],xmm0
   140017a47:	call   0x1400187b8
   140017a4c:	movsx  r12d,WORD PTR [rbp+0x50]
   140017a51:	jmp    0x140017ae6
   140017a56:	lea    r12d,[rbx+0x1]
   140017a5a:	cmp    r12d,esi
   140017a5d:	je     0x140017b09
   140017a63:	movsd  xmm0,QWORD PTR [r14]
   140017a68:	movsxd rax,ebx
   140017a6b:	lea    rcx,[rbp+0x50]
   140017a6f:	lea    rbx,[rdi+rax*8]
   140017a73:	movsd  QWORD PTR [rbp+0x58],xmm0
   140017a78:	mov    rdx,rbx
   140017a7b:	call   0x1400187b8
   140017a80:	mov    edx,0x1a
   140017a85:	mov    rcx,rbx
   140017a88:	call   0x1400187b0
   140017a8d:	movsx  edx,WORD PTR [rbp+0x50]
   140017a91:	mov    rcx,rbx
   140017a94:	call   0x1400177a0
   140017a99:	movsx  eax,WORD PTR [rbp+0x50]
   140017a9d:	movsd  xmm0,QWORD PTR [rbp+0x58]
   140017aa2:	movsd  xmm1,QWORD PTR [r14]
   140017aa7:	mov    DWORD PTR [rbp+0x60],eax
   140017aaa:	subsd  xmm0,xmm1
   140017aae:	ucomisd xmm0,xmm6
   140017ab2:	movsd  QWORD PTR [rbp+0x58],xmm0
   140017ab7:	jp     0x140017ac2
   140017ab9:	jne    0x140017ac2
   140017abb:	movsd  QWORD PTR [rbp-0x28],xmm1
   140017ac0:	jmp    0x140017ac7
   140017ac2:	movsd  QWORD PTR [rbp-0x28],xmm0
   140017ac7:	lea    rdx,[rbp-0x28]
   140017acb:	lea    rcx,[rbp+0x48]
   140017acf:	call   0x1400187b8
   140017ad4:	mov    ebx,r12d
   140017ad7:	mov    r12d,DWORD PTR [rbp+0x60]
   140017adb:	inc    r15
   140017ade:	add    r13,0x8
   140017ae2:	add    r14,0x8
   140017ae6:	cmp    ebx,esi
   140017ae8:	jl     0x140017897
   140017aee:	jmp    0x140017b09
   140017af0:	movsd  xmm0,QWORD PTR [rbp+0x58]
   140017af5:	lea    eax,[rbx+0x1]
   140017af8:	movsxd rcx,ebx
   140017afb:	movsd  QWORD PTR [rdi+rcx*8],xmm0
   140017b00:	cmp    eax,esi
   140017b02:	jge    0x140017b09
   140017b04:	mov    QWORD PTR [rdi+rcx*8+0x8],rdx
   140017b09:	mov    rax,rdi
   140017b0c:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   140017b11:	add    rsp,0x48
   140017b15:	pop    r15
   140017b17:	pop    r14
   140017b19:	pop    r13
   140017b1b:	pop    r12
   140017b1d:	pop    rdi
   140017b1e:	pop    rsi
   140017b1f:	pop    rbx
   140017b20:	pop    rbp
   140017b21:	ret    
   140017b22:	int3   
   140017b23:	int3   
   140017b24:	mov    rax,rsp
   140017b27:	mov    QWORD PTR [rax+0x8],rbx
   140017b2b:	mov    QWORD PTR [rax+0x10],rbp
   140017b2f:	mov    QWORD PTR [rax+0x18],rsi
   140017b33:	mov    QWORD PTR [rax+0x20],rdi
   140017b37:	push   r14
   140017b39:	sub    rsp,0x20
   140017b3d:	xor    edi,edi
   140017b3f:	mov    ebp,r9d
   140017b42:	mov    rsi,r8
   140017b45:	mov    r14d,edx
   140017b48:	mov    rbx,rcx
   140017b4b:	test   r9d,r9d
   140017b4e:	jle    0x140017b75
   140017b50:	movsd  xmm2,QWORD PTR [rsi]
   140017b54:	ucomisd xmm2,QWORD PTR [rip+0x1901c]        # 0x140030b78
   140017b5c:	jp     0x140017b60
   140017b5e:	je     0x140017b75
   140017b60:	mov    edx,r14d
   140017b63:	mov    rcx,rbx
   140017b66:	call   0x1400177a8
   140017b6b:	inc    edi
   140017b6d:	add    rsi,0x8
   140017b71:	cmp    edi,ebp
   140017b73:	jl     0x140017b50
   140017b75:	mov    rbp,QWORD PTR [rsp+0x38]
   140017b7a:	mov    rsi,QWORD PTR [rsp+0x40]
   140017b7f:	mov    rdi,QWORD PTR [rsp+0x48]
   140017b84:	mov    rax,rbx
   140017b87:	mov    rbx,QWORD PTR [rsp+0x30]
   140017b8c:	add    rsp,0x20
   140017b90:	pop    r14
   140017b92:	ret    
   140017b93:	int3   
   140017b94:	mov    QWORD PTR [rsp+0x8],rbx
   140017b99:	push   rdi
   140017b9a:	sub    rsp,0x30
   140017b9e:	movaps XMMWORD PTR [rsp+0x20],xmm6
   140017ba3:	mov    rbx,rcx
   140017ba6:	test   edx,edx
   140017ba8:	jne    0x140017bb2
   140017baa:	xorps  xmm0,xmm0
   140017bad:	jmp    0x140017c4e
   140017bb2:	mov    edi,0x1
   140017bb7:	cmp    edx,edi
   140017bb9:	je     0x140017c4a
   140017bbf:	movsd  xmm0,QWORD PTR [rcx]
   140017bc3:	xorps  xmm2,xmm2
   140017bc6:	ucomisd xmm0,xmm2
   140017bca:	jp     0x140017bce
   140017bcc:	je     0x140017c4a
   140017bce:	movsd  xmm6,QWORD PTR [rcx+0x8]
   140017bd3:	ucomisd xmm6,xmm2
   140017bd7:	jp     0x140017bdb
   140017bd9:	je     0x140017c4a
   140017bdb:	cmp    edx,0x2
   140017bde:	je     0x140017c41
   140017be0:	movsd  xmm1,QWORD PTR [rcx+0x10]
   140017be5:	ucomisd xmm1,xmm2
   140017be9:	jp     0x140017bed
   140017beb:	je     0x140017c41
   140017bed:	addsd  xmm6,xmm0
   140017bf1:	movsd  xmm0,QWORD PTR [rcx+0x18]
   140017bf6:	movsd  QWORD PTR [rsp+0x50],xmm1
   140017bfc:	ucomisd xmm0,xmm2
   140017c00:	jp     0x140017c04
   140017c02:	je     0x140017c17
   140017c04:	lea    rcx,[rsp+0x50]
   140017c09:	call   0x1400025a0
   140017c0e:	or     WORD PTR [rax],di
   140017c11:	movsd  xmm1,QWORD PTR [rsp+0x50]
   140017c17:	movsd  xmm2,QWORD PTR [rbx+0x8]
   140017c1c:	movaps xmm0,xmm6
   140017c1f:	subsd  xmm0,QWORD PTR [rbx]
   140017c23:	ucomisd xmm0,xmm2
   140017c27:	jp     0x140017c34
   140017c29:	jne    0x140017c34
   140017c2b:	addsd  xmm1,xmm6
   140017c2f:	movaps xmm0,xmm1
   140017c32:	jmp    0x140017c4e
   140017c34:	addsd  xmm2,xmm1
   140017c38:	addsd  xmm2,QWORD PTR [rbx]
   140017c3c:	movaps xmm0,xmm2
   140017c3f:	jmp    0x140017c4e
   140017c41:	addsd  xmm6,xmm0
   140017c45:	movaps xmm0,xmm6
   140017c48:	jmp    0x140017c4e
   140017c4a:	movsd  xmm0,QWORD PTR [rcx]
   140017c4e:	mov    rbx,QWORD PTR [rsp+0x40]
   140017c53:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140017c58:	add    rsp,0x30
   140017c5c:	pop    rdi
   140017c5d:	ret    
   140017c5e:	int3   
   140017c5f:	int3   
   140017c60:	mov    QWORD PTR [rsp+0x18],rbx
   140017c65:	push   rbp
   140017c66:	push   rsi
   140017c67:	push   rdi
   140017c68:	push   r12
   140017c6a:	push   r13
   140017c6c:	push   r14
   140017c6e:	push   r15
   140017c70:	mov    rbp,rsp
   140017c73:	sub    rsp,0x70
   140017c77:	movaps XMMWORD PTR [rsp+0x60],xmm7
   140017c7c:	mov    rax,QWORD PTR [rip+0x299cd]        # 0x140041650
   140017c83:	xor    rax,rsp
   140017c86:	mov    QWORD PTR [rbp-0x18],rax
   140017c8a:	xor    r12d,r12d
   140017c8d:	movaps xmm7,xmm2
   140017c90:	mov    r15d,edx
   140017c93:	mov    rdi,rcx
   140017c96:	test   edx,edx
   140017c98:	jle    0x140017cf2
   140017c9a:	movaps xmm0,xmm2
   140017c9d:	mulsd  xmm0,QWORD PTR [rcx]
   140017ca1:	lea    rcx,[rbp-0x38]
   140017ca5:	movsd  QWORD PTR [rbp-0x38],xmm0
   140017caa:	call   0x140017790
   140017caf:	movzx  esi,ax
   140017cb2:	cmp    r12w,ax
   140017cb6:	jg     0x140017cef
   140017cb8:	lea    ebx,[r12+0x1]
   140017cbd:	cmp    ax,0x2
   140017cc1:	jne    0x140017cca
   140017cc3:	mov    ecx,ebx
   140017cc5:	call   0x1400182c8
   140017cca:	movsd  xmm0,QWORD PTR [rbp-0x38]
   140017ccf:	movsd  QWORD PTR [rdi],xmm0
   140017cd3:	cmp    r12w,si
   140017cd7:	jge    0x140017e1a
   140017cdd:	cmp    r15d,ebx
   140017ce0:	jle    0x140017e1a
   140017ce6:	mov    QWORD PTR [rdi+0x8],r12
   140017cea:	jmp    0x140017e1a
   140017cef:	mov    QWORD PTR [rdi],r12
   140017cf2:	mov    ebx,0x1
   140017cf7:	mov    r13d,r12d
   140017cfa:	mov    r14d,ebx
   140017cfd:	test   r15d,r15d
   140017d00:	jle    0x140017e1a
   140017d06:	mov    rax,r12
   140017d09:	lea    r12,[rbp-0x38]
   140017d0d:	mov    esi,ebx
   140017d0f:	sub    r12,rdi
   140017d12:	mov    QWORD PTR [rbp-0x40],rax
   140017d16:	cmp    r14d,0x4
   140017d1a:	jge    0x140017d6a
   140017d1c:	add    rax,rsi
   140017d1f:	lea    rcx,[rdi+rax*8]
   140017d23:	lea    eax,[r14+r13*1]
   140017d27:	cmp    eax,r15d
   140017d2a:	jge    0x140017d5c
   140017d2c:	movsd  xmm0,QWORD PTR [rcx]
   140017d30:	ucomisd xmm0,QWORD PTR [rip+0x18e40]        # 0x140030b78
   140017d38:	jp     0x140017d3c
   140017d3a:	je     0x140017d5c
   140017d3c:	and    QWORD PTR [rcx],0x0
   140017d40:	mulsd  xmm0,xmm7
   140017d44:	add    r14d,ebx
   140017d47:	add    rsi,rbx
   140017d4a:	movsd  QWORD PTR [r12+rcx*1],xmm0
   140017d50:	add    rcx,0x8
   140017d54:	cmp    r14d,0x4
   140017d58:	jl     0x140017d23
   140017d5a:	jmp    0x140017d6a
   140017d5c:	and    QWORD PTR [rbp+rsi*8-0x38],0x0
   140017d62:	mov    esi,0x8
   140017d67:	mov    r14d,esi
   140017d6a:	movsd  xmm0,QWORD PTR [rbp-0x38]
   140017d6f:	ucomisd xmm0,QWORD PTR [rip+0x18e01]        # 0x140030b78
   140017d77:	jp     0x140017d7f
   140017d79:	je     0x140017e1a
   140017d7f:	lea    rdx,[rbp-0x48]
   140017d83:	lea    rcx,[rbp-0x50]
   140017d87:	movsd  QWORD PTR [rbp-0x48],xmm0
   140017d8c:	call   0x1400187b8
   140017d91:	lea    rcx,[rbp-0x48]
   140017d95:	mov    edx,0x1a
   140017d9a:	call   0x1400187b0
   140017d9f:	movsx  edx,WORD PTR [rbp-0x50]
   140017da3:	lea    rcx,[rbp-0x48]
   140017da7:	call   0x1400177a0
   140017dac:	mov    edx,r15d
   140017daf:	mov    rcx,rdi
   140017db2:	movsd  xmm2,QWORD PTR [rbp-0x48]
   140017db7:	call   0x1400177a8
   140017dbc:	mov    edx,r15d
   140017dbf:	mov    rcx,rdi
   140017dc2:	movsd  xmm2,QWORD PTR [rbp-0x38]
   140017dc7:	subsd  xmm2,QWORD PTR [rbp-0x48]
   140017dcc:	call   0x1400177a8
   140017dd1:	mov    rax,rbx
   140017dd4:	cmp    rbx,rsi
   140017dd7:	jge    0x140017df9
   140017dd9:	movsd  xmm0,QWORD PTR [rbp+rax*8-0x38]
   140017ddf:	ucomisd xmm0,QWORD PTR [rip+0x18d91]        # 0x140030b78
   140017de7:	movsd  QWORD PTR [rbp+rax*8-0x40],xmm0
   140017ded:	jp     0x140017df1
   140017def:	je     0x140017df9
   140017df1:	add    rax,rbx
   140017df4:	cmp    rax,rsi
   140017df7:	jl     0x140017dd9
   140017df9:	mov    rax,QWORD PTR [rbp-0x40]
   140017dfd:	add    r13d,ebx
   140017e00:	sub    r12,0x8
   140017e04:	add    rax,rbx
   140017e07:	sub    r14d,ebx
   140017e0a:	sub    rsi,rbx
   140017e0d:	mov    QWORD PTR [rbp-0x40],rax
   140017e11:	cmp    r13d,r15d
   140017e14:	jl     0x140017d16
   140017e1a:	mov    rax,rdi
   140017e1d:	mov    rcx,QWORD PTR [rbp-0x18]
   140017e21:	xor    rcx,rsp
   140017e24:	call   0x1400187d0
   140017e29:	mov    rbx,QWORD PTR [rsp+0xc0]
   140017e31:	movaps xmm7,XMMWORD PTR [rsp+0x60]
   140017e36:	add    rsp,0x70
   140017e3a:	pop    r15
   140017e3c:	pop    r14
   140017e3e:	pop    r13
   140017e40:	pop    r12
   140017e42:	pop    rdi
   140017e43:	pop    rsi
   140017e44:	pop    rbp
   140017e45:	ret    
   140017e46:	int3   
   140017e47:	int3   
   140017e48:	mov    QWORD PTR [rsp+0x8],rbx
   140017e4d:	mov    QWORD PTR [rsp+0x10],rbp
   140017e52:	mov    QWORD PTR [rsp+0x18],rsi
   140017e57:	push   rdi
   140017e58:	push   r12
   140017e5a:	push   r13
   140017e5c:	push   r14
   140017e5e:	push   r15
   140017e60:	sub    rsp,0x20
   140017e64:	movsxd rbp,r9d
   140017e67:	mov    rbx,r8
   140017e6a:	movsxd rdi,edx
   140017e6d:	mov    rsi,rcx
   140017e70:	test   edx,edx
   140017e72:	je     0x140017f29
   140017e78:	test   r9d,r9d
   140017e7b:	je     0x140017f29
   140017e81:	movsd  xmm2,QWORD PTR [r8]
   140017e86:	ucomisd xmm2,QWORD PTR [rip+0x18cea]        # 0x140030b78
   140017e8e:	jp     0x140017e92
   140017e90:	je     0x140017ea4
   140017e92:	movsd  xmm0,QWORD PTR [r8+0x8]
   140017e98:	ucomisd xmm0,QWORD PTR [rip+0x18cd8]        # 0x140030b78
   140017ea0:	jp     0x140017ead
   140017ea2:	jne    0x140017ead
   140017ea4:	mov    edx,edi
   140017ea6:	call   0x140017c60
   140017eab:	jmp    0x140017f29
   140017ead:	mov    r12,QWORD PTR [rsp+0x70]
   140017eb2:	mov    rdx,rcx
   140017eb5:	mov    r15,rdi
   140017eb8:	shl    r15,0x3
   140017ebc:	mov    rcx,r12
   140017ebf:	mov    r8,r15
   140017ec2:	lea    r13,[r15+r12*1]
   140017ec6:	call   0x140018a90
   140017ecb:	mov    edx,edi
   140017ecd:	mov    rcx,rsi
   140017ed0:	movsd  xmm2,QWORD PTR [rbx]
   140017ed4:	call   0x140017c60
   140017ed9:	mov    r14d,0x1
   140017edf:	jmp    0x140017f24
   140017ee1:	movsd  xmm0,QWORD PTR [rbx+r14*8]
   140017ee7:	ucomisd xmm0,QWORD PTR [rip+0x18c89]        # 0x140030b78
   140017eef:	jp     0x140017ef3
   140017ef1:	je     0x140017f29
   140017ef3:	mov    r8,r15
   140017ef6:	mov    rdx,r12
   140017ef9:	mov    rcx,r13
   140017efc:	call   0x140018a90
   140017f01:	mov    edx,edi
   140017f03:	mov    rcx,r13
   140017f06:	movsd  xmm2,QWORD PTR [rbx+r14*8]
   140017f0c:	call   0x140017c60
   140017f11:	mov    r9d,edi
   140017f14:	mov    r8,r13
   140017f17:	mov    edx,edi
   140017f19:	mov    rcx,rsi
   140017f1c:	call   0x140017b24
   140017f21:	inc    r14
   140017f24:	cmp    r14,rbp
   140017f27:	jl     0x140017ee1
   140017f29:	mov    rbx,QWORD PTR [rsp+0x50]
   140017f2e:	mov    rbp,QWORD PTR [rsp+0x58]
   140017f33:	mov    rax,rsi
   140017f36:	mov    rsi,QWORD PTR [rsp+0x60]
   140017f3b:	add    rsp,0x20
   140017f3f:	pop    r15
   140017f41:	pop    r14
   140017f43:	pop    r13
   140017f45:	pop    r12
   140017f47:	pop    rdi
   140017f48:	ret    
   140017f49:	int3   
   140017f4a:	int3   
   140017f4b:	int3   
   140017f4c:	rex push rbx
   140017f4e:	sub    rsp,0x20
   140017f52:	movd   xmm2,r8d
   140017f57:	mov    rbx,rcx
   140017f5a:	cvtdq2pd xmm2,xmm2
   140017f5e:	call   0x140017f6c
   140017f63:	mov    rax,rbx
   140017f66:	add    rsp,0x20
   140017f6a:	pop    rbx
   140017f6b:	ret    
   140017f6c:	mov    rax,rsp
   140017f6f:	mov    QWORD PTR [rax+0x18],rbx
   140017f73:	push   rbp
   140017f74:	push   rsi
   140017f75:	push   rdi
   140017f76:	sub    rsp,0x30
   140017f7a:	xor    ebp,ebp
   140017f7c:	movaps XMMWORD PTR [rax-0x28],xmm6
   140017f80:	movsd  QWORD PTR [rax+0x8],xmm2
   140017f85:	movaps xmm6,xmm2
   140017f88:	mov    edi,edx
   140017f8a:	mov    rbx,rcx
   140017f8d:	test   edx,edx
   140017f8f:	jle    0x140018068
   140017f95:	cmp    edx,0x1
   140017f98:	je     0x140018064
   140017f9e:	lea    rdx,[rax+0x8]
   140017fa2:	lea    rcx,[rax+0x10]
   140017fa6:	call   0x1400187b8
   140017fab:	test   ax,ax
   140017fae:	je     0x14001805e
   140017fb4:	cmp    bp,ax
   140017fb7:	jge    0x140017fcc
   140017fb9:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140017fbf:	mov    QWORD PTR [rbx+0x8],rbp
   140017fc3:	movsd  QWORD PTR [rbx],xmm0
   140017fc7:	jmp    0x140018068
   140017fcc:	lea    rcx,[rsp+0x50]
   140017fd1:	mov    edx,0x1a
   140017fd6:	call   0x1400187b0
   140017fdb:	movsx  edx,WORD PTR [rsp+0x58]
   140017fe0:	lea    rcx,[rsp+0x50]
   140017fe5:	call   0x1400177a0
   140017fea:	lea    rsi,[rbx+0x8]
   140017fee:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140017ff4:	subsd  xmm6,xmm0
   140017ff8:	movsd  QWORD PTR [rbx],xmm0
   140017ffc:	movsd  QWORD PTR [rsi],xmm6
   140018000:	cmp    edi,0x2
   140018003:	jle    0x140018068
   140018005:	ucomisd xmm6,QWORD PTR [rip+0x18b6b]        # 0x140030b78
   14001800d:	jp     0x140018017
   14001800f:	jne    0x140018017
   140018011:	mov    QWORD PTR [rbx+0x10],rbp
   140018015:	jmp    0x140018068
   140018017:	lea    rcx,[rsp+0x58]
   14001801c:	mov    rdx,rsi
   14001801f:	call   0x1400187b8
   140018024:	mov    edx,0x1a
   140018029:	mov    rcx,rsi
   14001802c:	call   0x1400187b0
   140018031:	movsx  edx,WORD PTR [rsp+0x58]
   140018036:	mov    rcx,rsi
   140018039:	call   0x1400177a0
   14001803e:	subsd  xmm6,QWORD PTR [rsi]
   140018042:	movsd  QWORD PTR [rbx+0x10],xmm6
   140018047:	cmp    edi,0x3
   14001804a:	jle    0x140018068
   14001804c:	ucomisd xmm6,QWORD PTR [rip+0x18b24]        # 0x140030b78
   140018054:	jp     0x140018058
   140018056:	je     0x140018068
   140018058:	mov    QWORD PTR [rbx+0x18],rbp
   14001805c:	jmp    0x140018068
   14001805e:	movsd  xmm6,QWORD PTR [rsp+0x50]
   140018064:	movsd  QWORD PTR [rbx],xmm6
   140018068:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14001806d:	mov    rax,rbx
   140018070:	mov    rbx,QWORD PTR [rsp+0x60]
   140018075:	add    rsp,0x30
   140018079:	pop    rdi
   14001807a:	pop    rsi
   14001807b:	pop    rbp
   14001807c:	ret    
   14001807d:	int3   
   14001807e:	int3   
   14001807f:	int3   
   140018080:	mov    rax,rsp
   140018083:	mov    QWORD PTR [rax+0x10],rbx
   140018087:	push   rbp
   140018088:	push   rsi
   140018089:	push   rdi
   14001808a:	sub    rsp,0xb0
   140018091:	movaps XMMWORD PTR [rax-0x28],xmm6
   140018095:	mov    rax,QWORD PTR [rip+0x295b4]        # 0x140041650
   14001809c:	xor    rax,rsp
   14001809f:	mov    QWORD PTR [rsp+0x90],rax
   1400180a7:	mov    rbp,r8
   1400180aa:	mov    ebx,edx
   1400180ac:	mov    rsi,rcx
   1400180af:	test   edx,edx
   1400180b1:	je     0x14001819d
   1400180b7:	movsd  xmm0,QWORD PTR [rcx]
   1400180bb:	ucomisd xmm0,QWORD PTR [rip+0x18ab5]        # 0x140030b78
   1400180c3:	jp     0x1400180cb
   1400180c5:	je     0x14001819d
   1400180cb:	mov    edi,0x3
   1400180d0:	test   edx,edx
   1400180d2:	lea    rcx,[rsp+0x30]
   1400180d7:	mov    edx,edi
   1400180d9:	jle    0x1400180ea
   1400180db:	movsd  xmm2,QWORD PTR [rip+0x18ab5]        # 0x140030b98
   1400180e3:	call   0x140017f6c
   1400180e8:	jmp    0x1400180f8
   1400180ea:	lea    r8,[rip+0x18aaf]        # 0x140030ba0
   1400180f1:	neg    ebx
   1400180f3:	call   0x1400171fc
   1400180f8:	test   bl,0x1
   1400180fb:	je     0x140018119
   1400180fd:	lea    rax,[rsp+0x60]
   140018102:	lea    r8,[rsp+0x30]
   140018107:	mov    r9d,edi
   14001810a:	mov    edx,edi
   14001810c:	mov    rcx,rsi
   14001810f:	mov    QWORD PTR [rsp+0x20],rax
   140018114:	call   0x140017e48
   140018119:	sar    ebx,1
   14001811b:	mov    edx,edi
   14001811d:	je     0x14001814e
   14001811f:	lea    r8,[rsp+0x30]
   140018124:	lea    rcx,[rsp+0x48]
   140018129:	call   0x1400171fc
   14001812e:	lea    rax,[rsp+0x60]
   140018133:	lea    r8,[rsp+0x48]
   140018138:	lea    rcx,[rsp+0x30]
   14001813d:	mov    r9d,edi
   140018140:	mov    edx,edi
   140018142:	mov    QWORD PTR [rsp+0x20],rax
   140018147:	call   0x140017e48
   14001814c:	jmp    0x1400180f8
   14001814e:	mov    rcx,rsi
   140018151:	call   0x140017b94
   140018156:	ucomisd xmm0,QWORD PTR [rip+0x18a1a]        # 0x140030b78
   14001815e:	movaps xmm6,xmm0
   140018161:	jp     0x140018165
   140018163:	je     0x140018184
   140018165:	movsd  xmm1,QWORD PTR [rip+0x29003]        # 0x140041170
   14001816d:	ucomisd xmm0,xmm1
   140018171:	jp     0x140018175
   140018173:	je     0x140018184
   140018175:	xorps  xmm1,XMMWORD PTR [rip+0x18984]        # 0x140030b00
   14001817c:	ucomisd xmm0,xmm1
   140018180:	jp     0x140018198
   140018182:	jne    0x140018198
   140018184:	call   0x14001b864
   140018189:	mov    DWORD PTR [rax],0x22
   14001818f:	test   rbp,rbp
   140018192:	je     0x140018198
   140018194:	or     DWORD PTR [rbp+0x0],0x1
   140018198:	movaps xmm0,xmm6
   14001819b:	jmp    0x1400181a7
   14001819d:	mov    edx,0x3
   1400181a2:	call   0x140017b94
   1400181a7:	mov    rcx,QWORD PTR [rsp+0x90]
   1400181af:	xor    rcx,rsp
   1400181b2:	call   0x1400187d0
   1400181b7:	lea    r11,[rsp+0xb0]
   1400181bf:	mov    rbx,QWORD PTR [r11+0x28]
   1400181c3:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400181c8:	mov    rsp,r11
   1400181cb:	pop    rdi
   1400181cc:	pop    rsi
   1400181cd:	pop    rbp
   1400181ce:	ret    
   1400181cf:	int3   
   1400181d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400181d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400181da:	mov    QWORD PTR [rsp+0x18],rdi
   1400181df:	movzx  eax,WORD PTR [rcx+0x2]
   1400181e3:	mov    rdx,rcx
   1400181e6:	mov    esi,0x1
   1400181eb:	movzx  r11d,ax
   1400181ef:	mov    ecx,0x8000
   1400181f4:	lea    edi,[rsi+0x7e]
   1400181f7:	and    eax,edi
   1400181f9:	and    r11w,cx
   1400181fd:	xor    ecx,ecx
   1400181ff:	movzx  r10d,si
   140018203:	mov    WORD PTR [rdx+0x2],ax
   140018207:	test   ax,ax
   14001820a:	jne    0x140018228
   14001820c:	cmp    WORD PTR [rdx],cx
   14001820f:	je     0x1400182ae
   140018215:	test   ax,ax
   140018218:	jne    0x140018228
   14001821a:	movzx  eax,WORD PTR [rdx]
   14001821d:	lea    r10d,[rsi-0x10]
   140018221:	mov    WORD PTR [rdx],cx
   140018224:	mov    WORD PTR [rdx+0x2],ax
   140018228:	movzx  r9d,WORD PTR [rdx+0x2]
   14001822d:	mov    ebx,0x80
   140018232:	cmp    r9w,bx
   140018236:	jae    0x140018268
   140018238:	movzx  ecx,WORD PTR [rdx]
   14001823b:	movzx  eax,r9w
   14001823f:	dec    r10w
   140018243:	movzx  r8d,cx
   140018247:	add    ax,ax
   14001824a:	add    cx,cx
   14001824d:	shr    r8w,0xf
   140018252:	mov    WORD PTR [rdx],cx
   140018255:	or     r8w,ax
   140018259:	movzx  r9d,r8w
   14001825d:	cmp    r8w,bx
   140018261:	jb     0x140018238
   140018263:	mov    WORD PTR [rdx+0x2],r8w
   140018268:	movzx  r8d,WORD PTR [rdx+0x2]
   14001826d:	mov    ebx,0x100
   140018272:	cmp    bx,r8w
   140018276:	ja     0x1400182aa
   140018278:	movzx  r9d,WORD PTR [rdx]
   14001827c:	movzx  eax,r9w
   140018280:	movzx  ecx,r8w
   140018284:	shr    r8w,1
   140018288:	shl    cx,0xf
   14001828c:	shr    ax,1
   14001828f:	add    r10w,si
   140018293:	movzx  r9d,cx
   140018297:	or     r9w,ax
   14001829b:	cmp    bx,r8w
   14001829f:	jbe    0x14001827c
   1400182a1:	mov    WORD PTR [rdx+0x2],r8w
   1400182a6:	mov    WORD PTR [rdx],r9w
   1400182aa:	and    WORD PTR [rdx+0x2],di
   1400182ae:	or     WORD PTR [rdx+0x2],r11w
   1400182b3:	mov    rbx,QWORD PTR [rsp+0x8]
   1400182b8:	mov    rsi,QWORD PTR [rsp+0x10]
   1400182bd:	mov    rdi,QWORD PTR [rsp+0x18]
   1400182c2:	movzx  eax,r10w
   1400182c6:	ret    
   1400182c7:	int3   
   1400182c8:	sub    rsp,0x28
   1400182cc:	test   cl,0x5
   1400182cf:	je     0x1400182de
   1400182d1:	call   0x14001b864
   1400182d6:	mov    DWORD PTR [rax],0x21
   1400182dc:	jmp    0x1400182ee
   1400182de:	test   cl,0x18
   1400182e1:	je     0x1400182ee
   1400182e3:	call   0x14001b864
   1400182e8:	mov    DWORD PTR [rax],0x22
   1400182ee:	add    rsp,0x28
   1400182f2:	ret    
   1400182f3:	int3   
   1400182f4:	mov    eax,0xff
   1400182f9:	mov    r8,rcx
   1400182fc:	movzx  ecx,WORD PTR [rcx+0x2]
   140018300:	movzx  r10d,cx
   140018304:	movzx  r11d,dx
   140018308:	shr    r10w,0x7
   14001830d:	and    r10w,ax
   140018311:	cmp    r10w,ax
   140018315:	jne    0x140018331
   140018317:	test   cl,0x7f
   14001831a:	jne    0x14001832b
   14001831c:	xor    edx,edx
   14001831e:	lea    eax,[rdx+0x1]
   140018321:	cmp    WORD PTR [r8],dx
   140018325:	je     0x1400183c9
   14001832b:	mov    eax,0x2
   140018330:	ret    
   140018331:	movzx  eax,cx
   140018334:	xor    edx,edx
   140018336:	test   eax,0xffff7fff
   14001833b:	jne    0x140018347
   14001833d:	cmp    WORD PTR [r8],dx
   140018341:	jne    0x140018347
   140018343:	movzx  eax,dx
   140018346:	ret    
   140018347:	mov    r9d,0x96
   14001834d:	sub    r9w,r10w
   140018351:	sub    r9w,r11w
   140018355:	test   r9w,r9w
   140018359:	jle    0x140018343
   14001835b:	mov    eax,0x18
   140018360:	cmp    ax,r9w
   140018364:	jg     0x14001837b
   140018366:	mov    eax,0x8000
   14001836b:	mov    WORD PTR [r8],dx
   14001836f:	and    cx,ax
   140018372:	or     eax,0xffffffff
   140018375:	mov    WORD PTR [r8+0x2],cx
   14001837a:	ret    
   14001837b:	movsx  rax,r9w
   14001837f:	lea    rcx,[rip+0xfffffffffffe7c7a]        # 0x140000000
   140018386:	sar    r9w,0x4
   14001838b:	and    eax,0xf
   14001838e:	movzx  r10d,WORD PTR [rcx+rax*2+0x30d00]
   140018397:	movsx  rax,r9w
   14001839b:	mov    rcx,QWORD PTR [rcx+rax*8+0x30d20]
   1400183a3:	movzx  eax,WORD PTR [r8+rcx*2]
   1400183a8:	and    r10w,ax
   1400183ac:	xor    ax,r10w
   1400183b0:	mov    WORD PTR [r8+rcx*2],ax
   1400183b5:	cmp    dx,r9w
   1400183b9:	jge    0x1400183c3
   1400183bb:	or     r10w,WORD PTR [r8]
   1400183bf:	mov    WORD PTR [r8],dx
   1400183c3:	neg    r10w
   1400183c7:	sbb    eax,eax
   1400183c9:	ret    
   1400183ca:	int3   
   1400183cb:	int3   
   1400183cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400183d1:	mov    QWORD PTR [rsp+0x10],rsi
   1400183d6:	push   rdi
   1400183d7:	sub    rsp,0x20
   1400183db:	movzx  eax,WORD PTR [rdx+0x2]
   1400183df:	mov    rsi,rcx
   1400183e2:	mov    ecx,0xff
   1400183e7:	shr    ax,0x7
   1400183eb:	xor    ebx,ebx
   1400183ed:	mov    rdi,rdx
   1400183f0:	and    ax,cx
   1400183f3:	cmp    ax,cx
   1400183f6:	jne    0x140018410
   1400183f8:	mov    WORD PTR [rsi],bx
   1400183fb:	test   BYTE PTR [rdx+0x2],0x7f
   1400183ff:	jne    0x140018409
   140018401:	lea    eax,[rbx+0x1]
   140018404:	cmp    WORD PTR [rdx],bx
   140018407:	je     0x140018446
   140018409:	mov    eax,0x2
   14001840e:	jmp    0x140018446
   140018410:	cmp    bx,ax
   140018413:	jl     0x14001842a
   140018415:	mov    rcx,rdx
   140018418:	call   0x1400181d0
   14001841d:	test   ax,ax
   140018420:	jle    0x14001842a
   140018422:	mov    WORD PTR [rsi],bx
   140018425:	movzx  eax,bx
   140018428:	jmp    0x140018446
   14001842a:	mov    ecx,0xbf7f
   14001842f:	sub    ax,0x7e
   140018433:	and    WORD PTR [rdi+0x2],cx
   140018437:	mov    ecx,0x3f00
   14001843c:	or     WORD PTR [rdi+0x2],cx
   140018440:	mov    WORD PTR [rsi],ax
   140018443:	or     eax,0xffffffff
   140018446:	mov    rbx,QWORD PTR [rsp+0x30]
   14001844b:	mov    rsi,QWORD PTR [rsp+0x38]
   140018450:	add    rsp,0x20
   140018454:	pop    rdi
   140018455:	ret    
   140018456:	int3   
   140018457:	int3   
   140018458:	mov    rax,rsp
   14001845b:	mov    QWORD PTR [rax+0x8],rbx
   14001845f:	mov    QWORD PTR [rax+0x10],rbp
   140018463:	mov    QWORD PTR [rax+0x18],rsi
   140018467:	mov    QWORD PTR [rax+0x20],rdi
   14001846b:	push   r14
   14001846d:	movzx  eax,WORD PTR [rcx+0x6]
   140018471:	mov    r14d,0x1
   140018477:	mov    r8,rcx
   14001847a:	movzx  esi,ax
   14001847d:	lea    ebp,[r14+0xe]
   140018481:	mov    ecx,0x8000
   140018486:	and    eax,ebp
   140018488:	xor    r10d,r10d
   14001848b:	and    si,cx
   14001848e:	movzx  r9d,r14w
   140018492:	mov    WORD PTR [r8+0x6],ax
   140018497:	test   ax,ax
   14001849a:	jne    0x1400184ea
   14001849c:	cmp    WORD PTR [r8+0x4],r10w
   1400184a1:	jne    0x1400184b4
   1400184a3:	cmp    WORD PTR [r8+0x2],r10w
   1400184a8:	jne    0x1400184b4
   1400184aa:	cmp    WORD PTR [r8],r10w
   1400184ae:	je     0x1400185df
   1400184b4:	test   ax,ax
   1400184b7:	jne    0x1400184ea
   1400184b9:	movzx  eax,WORD PTR [r8+0x4]
   1400184be:	movzx  ecx,WORD PTR [r8+0x2]
   1400184c3:	movzx  edx,ax
   1400184c6:	add    r9w,0xfff0
   1400184cb:	movzx  eax,cx
   1400184ce:	movzx  ecx,WORD PTR [r8]
   1400184d2:	mov    WORD PTR [r8],r10w
   1400184d6:	test   dx,dx
   1400184d9:	je     0x1400184c3
   1400184db:	mov    WORD PTR [r8+0x6],dx
   1400184e0:	mov    WORD PTR [r8+0x4],ax
   1400184e5:	mov    WORD PTR [r8+0x2],cx
   1400184ea:	movzx  ebx,WORD PTR [r8+0x6]
   1400184ef:	cmp    bx,0x10
   1400184f3:	jae    0x140018564
   1400184f5:	movzx  r10d,WORD PTR [r8+0x4]
   1400184fa:	movzx  r11d,WORD PTR [r8+0x2]
   1400184ff:	movzx  edx,WORD PTR [r8]
   140018503:	movzx  eax,r10w
   140018507:	movzx  ecx,r11w
   14001850b:	shr    ax,0xf
   14001850f:	shr    cx,0xf
   140018513:	movzx  edi,bx
   140018516:	add    di,di
   140018519:	dec    r9w
   14001851d:	or     di,ax
   140018520:	movzx  eax,r10w
   140018524:	movzx  r10d,cx
   140018528:	add    ax,ax
   14001852b:	movzx  ecx,dx
   14001852e:	add    dx,dx
   140018531:	or     r10w,ax
   140018535:	movzx  eax,r11w
   140018539:	shr    cx,0xf
   14001853d:	add    ax,ax
   140018540:	movzx  r11d,cx
   140018544:	mov    WORD PTR [r8],dx
   140018548:	or     r11w,ax
   14001854c:	movzx  ebx,di
   14001854f:	cmp    di,0x10
   140018553:	jb     0x1400184ff
   140018555:	mov    WORD PTR [r8+0x6],di
   14001855a:	mov    WORD PTR [r8+0x4],r10w
   14001855f:	mov    WORD PTR [r8+0x2],r11w
   140018564:	movzx  edx,WORD PTR [r8+0x6]
   140018569:	mov    edi,0x20
   14001856e:	cmp    di,dx
   140018571:	ja     0x1400185da
   140018573:	movzx  r11d,WORD PTR [r8+0x4]
   140018578:	movzx  r10d,WORD PTR [r8+0x2]
   14001857d:	movzx  ebx,WORD PTR [r8]
   140018581:	movzx  ecx,r10w
   140018585:	movzx  eax,bx
   140018588:	shr    r10w,1
   14001858c:	shr    ax,1
   14001858f:	shl    cx,0xf
   140018593:	add    r9w,r14w
   140018597:	movzx  ebx,cx
   14001859a:	movzx  ecx,dx
   14001859d:	shr    dx,1
   1400185a0:	or     bx,ax
   1400185a3:	movzx  eax,r11w
   1400185a7:	shl    cx,0xf
   1400185ab:	shl    ax,0xf
   1400185af:	or     r10w,ax
   1400185b3:	movzx  eax,r11w
   1400185b7:	movzx  r11d,cx
   1400185bb:	shr    ax,1
   1400185be:	or     r11w,ax
   1400185c2:	cmp    di,dx
   1400185c5:	jbe    0x140018581
   1400185c7:	mov    WORD PTR [r8+0x6],dx
   1400185cc:	mov    WORD PTR [r8+0x4],r11w
   1400185d1:	mov    WORD PTR [r8+0x2],r10w
   1400185d6:	mov    WORD PTR [r8],bx
   1400185da:	and    WORD PTR [r8+0x6],bp
   1400185df:	or     WORD PTR [r8+0x6],si
   1400185e4:	mov    rbx,QWORD PTR [rsp+0x10]
   1400185e9:	mov    rbp,QWORD PTR [rsp+0x18]
   1400185ee:	mov    rsi,QWORD PTR [rsp+0x20]
   1400185f3:	mov    rdi,QWORD PTR [rsp+0x28]
   1400185f8:	movzx  eax,r9w
   1400185fc:	pop    r14
   1400185fe:	ret    
   1400185ff:	int3   
   140018600:	mov    eax,0x7ff
   140018605:	mov    r8,rcx
   140018608:	movzx  ecx,WORD PTR [rcx+0x6]
   14001860c:	movzx  r9d,cx
   140018610:	movzx  r11d,dx
   140018614:	shr    r9w,0x4
   140018619:	and    r9w,ax
   14001861d:	cmp    r9w,ax
   140018621:	jne    0x14001864b
   140018623:	test   cl,0xf
   140018626:	jne    0x140018645
   140018628:	xor    edx,edx
   14001862a:	cmp    WORD PTR [r8+0x4],dx
   14001862f:	jne    0x140018645
   140018631:	cmp    WORD PTR [r8+0x2],dx
   140018636:	jne    0x140018645
   140018638:	lea    eax,[rdx+0x1]
   14001863b:	cmp    WORD PTR [r8],dx
   14001863f:	je     0x140018713
   140018645:	mov    eax,0x2
   14001864a:	ret    
   14001864b:	movzx  eax,cx
   14001864e:	xor    edx,edx
   140018650:	test   eax,0xffff7fff
   140018655:	jne    0x14001866f
   140018657:	cmp    WORD PTR [r8+0x4],dx
   14001865c:	jne    0x14001866f
   14001865e:	cmp    WORD PTR [r8+0x2],dx
   140018663:	jne    0x14001866f
   140018665:	cmp    WORD PTR [r8],dx
   140018669:	jne    0x14001866f
   14001866b:	movzx  eax,dx
   14001866e:	ret    
   14001866f:	mov    r10d,0x433
   140018675:	sub    r10w,r9w
   140018679:	sub    r10w,r11w
   14001867d:	test   r10w,r10w
   140018681:	jle    0x14001866b
   140018683:	mov    eax,0x35
   140018688:	cmp    ax,r10w
   14001868c:	jg     0x1400186a7
   14001868e:	mov    eax,0x8000
   140018693:	mov    DWORD PTR [r8+0x2],edx
   140018697:	mov    WORD PTR [r8],dx
   14001869b:	and    cx,ax
   14001869e:	or     eax,0xffffffff
   1400186a1:	mov    WORD PTR [r8+0x6],cx
   1400186a6:	ret    
   1400186a7:	movsx  rax,r10w
   1400186ab:	sar    r10w,0x4
   1400186b0:	lea    rcx,[rip+0xfffffffffffe7949]        # 0x140000000
   1400186b7:	and    eax,0xf
   1400186ba:	movzx  r9d,WORD PTR [rcx+rax*2+0x30d30]
   1400186c3:	movsx  rax,r10w
   1400186c7:	mov    rcx,QWORD PTR [rcx+rax*8+0x30d50]
   1400186cf:	movzx  eax,WORD PTR [r8+rcx*2]
   1400186d4:	and    r9w,ax
   1400186d8:	xor    ax,r9w
   1400186dc:	mov    WORD PTR [r8+rcx*2],ax
   1400186e1:	movsx  ecx,r10w
   1400186e5:	dec    ecx
   1400186e7:	je     0x140018705
   1400186e9:	dec    ecx
   1400186eb:	je     0x1400186fb
   1400186ed:	dec    ecx
   1400186ef:	jne    0x14001870d
   1400186f1:	or     r9w,WORD PTR [r8+0x4]
   1400186f6:	mov    WORD PTR [r8+0x4],dx
   1400186fb:	or     r9w,WORD PTR [r8+0x2]
   140018700:	mov    WORD PTR [r8+0x2],dx
   140018705:	or     r9w,WORD PTR [r8]
   140018709:	mov    WORD PTR [r8],dx
   14001870d:	neg    r9w
   140018711:	sbb    eax,eax
   140018713:	ret    
   140018714:	mov    QWORD PTR [rsp+0x8],rbx
   140018719:	mov    QWORD PTR [rsp+0x10],rsi
   14001871e:	push   rdi
   14001871f:	sub    rsp,0x20
   140018723:	movzx  eax,WORD PTR [rdx+0x6]
   140018727:	mov    rsi,rcx
   14001872a:	mov    ecx,0x7ff
   14001872f:	shr    ax,0x4
   140018733:	xor    ebx,ebx
   140018735:	mov    rdi,rdx
   140018738:	and    ax,cx
   14001873b:	cmp    ax,cx
   14001873e:	jne    0x140018764
   140018740:	mov    WORD PTR [rsi],bx
   140018743:	test   BYTE PTR [rdx+0x6],0xf
   140018747:	jne    0x14001875d
   140018749:	cmp    WORD PTR [rdx+0x4],bx
   14001874d:	jne    0x14001875d
   14001874f:	cmp    WORD PTR [rdx+0x2],bx
   140018753:	jne    0x14001875d
   140018755:	lea    eax,[rbx+0x1]
   140018758:	cmp    WORD PTR [rdx],bx
   14001875b:	je     0x14001879e
   14001875d:	mov    eax,0x2
   140018762:	jmp    0x14001879e
   140018764:	cmp    bx,ax
   140018767:	jl     0x14001877e
   140018769:	mov    rcx,rdx
   14001876c:	call   0x140018458
   140018771:	test   ax,ax
   140018774:	jle    0x14001877e
   140018776:	mov    WORD PTR [rsi],bx
   140018779:	movzx  eax,bx
   14001877c:	jmp    0x14001879e
   14001877e:	mov    ecx,0xbfef
   140018783:	and    WORD PTR [rdi+0x6],cx
   140018787:	mov    ecx,0x3fe0
   14001878c:	or     WORD PTR [rdi+0x6],cx
   140018790:	mov    ecx,0x3fe
   140018795:	sub    ax,cx
   140018798:	mov    WORD PTR [rsi],ax
   14001879b:	or     eax,0xffffffff
   14001879e:	mov    rbx,QWORD PTR [rsp+0x30]
   1400187a3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400187a8:	add    rsp,0x20
   1400187ac:	pop    rdi
   1400187ad:	ret    
   1400187ae:	int3   
   1400187af:	int3   
   1400187b0:	jmp    0x140018600
   1400187b5:	int3   
   1400187b6:	int3   
   1400187b7:	int3   
   1400187b8:	jmp    0x140018714
   1400187bd:	int3   
   1400187be:	int3   
   1400187bf:	int3   
   1400187c0:	int3   
   1400187c1:	int3   
   1400187c2:	int3   
   1400187c3:	int3   
   1400187c4:	int3   
   1400187c5:	int3   
   1400187c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400187d0:	cmp    rcx,QWORD PTR [rip+0x28e79]        # 0x140041650
   1400187d7:	jne    0x1400187ea
   1400187d9:	rol    rcx,0x10
   1400187dd:	test   cx,0xffff
   1400187e2:	jne    0x1400187e6
   1400187e4:	repz ret 
   1400187e6:	ror    rcx,0x10
   1400187ea:	jmp    0x140019a74
   1400187ef:	int3   
   1400187f0:	mov    rax,rsp
   1400187f3:	mov    QWORD PTR [rax+0x20],r9
   1400187f7:	mov    DWORD PTR [rax+0x18],r8d
   1400187fb:	mov    QWORD PTR [rax+0x10],rdx
   1400187ff:	push   rbx
   140018800:	push   rsi
   140018801:	push   rdi
   140018802:	push   r14
   140018804:	sub    rsp,0x38
   140018808:	mov    r14,r9
   14001880b:	movsxd rdi,r8d
   14001880e:	mov    rsi,rdx
   140018811:	and    DWORD PTR [rax-0x38],0x0
   140018815:	mov    rbx,rdi
   140018818:	imul   rbx,rdx
   14001881c:	add    rbx,rcx
   14001881f:	mov    QWORD PTR [rax+0x8],rbx
   140018823:	dec    edi
   140018825:	mov    DWORD PTR [rsp+0x70],edi
   140018829:	js     0x14001883b
   14001882b:	sub    rbx,rsi
   14001882e:	mov    QWORD PTR [rsp+0x60],rbx
   140018833:	mov    rcx,rbx
   140018836:	call   r14
   140018839:	jmp    0x140018823
   14001883b:	mov    DWORD PTR [rsp+0x20],0x1
   140018843:	add    rsp,0x38
   140018847:	pop    r14
   140018849:	pop    rdi
   14001884a:	pop    rsi
   14001884b:	pop    rbx
   14001884c:	ret    
   14001884d:	int3   
   14001884e:	int3   
   14001884f:	int3   
   140018850:	mov    QWORD PTR [rsp+0x10],rbx
   140018855:	mov    DWORD PTR [rsp+0x18],r8d
   14001885a:	mov    QWORD PTR [rsp+0x8],rcx
   14001885f:	push   rsi
   140018860:	push   rdi
   140018861:	push   r14
   140018863:	sub    rsp,0x40
   140018867:	mov    rsi,r9
   14001886a:	mov    edi,r8d
   14001886d:	mov    r14,rdx
   140018870:	mov    rbx,rcx
   140018873:	dec    edi
   140018875:	mov    DWORD PTR [rsp+0x70],edi
   140018879:	js     0x14001888a
   14001887b:	sub    rbx,r14
   14001887e:	mov    QWORD PTR [rsp+0x60],rbx
   140018883:	mov    rcx,rbx
   140018886:	call   rsi
   140018888:	jmp    0x140018873
   14001888a:	jmp    0x14001888c
   14001888c:	mov    rbx,QWORD PTR [rsp+0x68]
   140018891:	add    rsp,0x40
   140018895:	pop    r14
   140018897:	pop    rdi
   140018898:	pop    rsi
   140018899:	ret    
   14001889a:	int3   
   14001889b:	int3   
   14001889c:	rex push rbx
   14001889e:	sub    rsp,0x20
   1400188a2:	mov    edx,0x8
   1400188a7:	lea    ecx,[rdx+0x18]
   1400188aa:	call   0x14001c1dc
   1400188af:	mov    rcx,rax
   1400188b2:	mov    rbx,rax
   1400188b5:	call   QWORD PTR [rip+0x16965]        # 0x14002f220
   1400188bb:	mov    QWORD PTR [rip+0x2d316],rax        # 0x140045bd8
   1400188c2:	mov    QWORD PTR [rip+0x2d307],rax        # 0x140045bd0
   1400188c9:	test   rbx,rbx
   1400188cc:	jne    0x1400188d3
   1400188ce:	lea    eax,[rbx+0x18]
   1400188d1:	jmp    0x1400188d9
   1400188d3:	and    QWORD PTR [rbx],0x0
   1400188d7:	xor    eax,eax
   1400188d9:	add    rsp,0x20
   1400188dd:	pop    rbx
   1400188de:	ret    
   1400188df:	int3   
   1400188e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400188e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400188ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400188ef:	push   r12
   1400188f1:	push   r14
   1400188f3:	push   r15
   1400188f5:	sub    rsp,0x20
   1400188f9:	mov    r12,rcx
   1400188fc:	call   0x14001ea60
   140018901:	nop
   140018902:	mov    rcx,QWORD PTR [rip+0x2d2cf]        # 0x140045bd8
   140018909:	call   QWORD PTR [rip+0x16919]        # 0x14002f228
   14001890f:	mov    r14,rax
   140018912:	mov    rcx,QWORD PTR [rip+0x2d2b7]        # 0x140045bd0
   140018919:	call   QWORD PTR [rip+0x16909]        # 0x14002f228
   14001891f:	mov    rbx,rax
   140018922:	cmp    rax,r14
   140018925:	jb     0x1400189c6
   14001892b:	mov    rdi,rax
   14001892e:	sub    rdi,r14
   140018931:	lea    r15,[rdi+0x8]
   140018935:	cmp    r15,0x8
   140018939:	jb     0x1400189c6
   14001893f:	mov    rcx,r14
   140018942:	call   0x14001ec1c
   140018947:	mov    rsi,rax
   14001894a:	cmp    rax,r15
   14001894d:	jae    0x1400189a4
   14001894f:	mov    edx,0x1000
   140018954:	cmp    rax,rdx
   140018957:	cmovb  rdx,rax
   14001895b:	add    rdx,rax
   14001895e:	cmp    rdx,rax
   140018961:	jb     0x140018974
   140018963:	mov    rcx,r14
   140018966:	call   0x14001c2d8
   14001896b:	xor    ebx,ebx
   14001896d:	test   rax,rax
   140018970:	jne    0x14001898c
   140018972:	jmp    0x140018976
   140018974:	xor    ebx,ebx
   140018976:	lea    rdx,[rsi+0x20]
   14001897a:	cmp    rdx,rsi
   14001897d:	jb     0x1400189c8
   14001897f:	mov    rcx,r14
   140018982:	call   0x14001c2d8
   140018987:	test   rax,rax
   14001898a:	je     0x1400189c8
   14001898c:	sar    rdi,0x3
   140018990:	lea    rbx,[rax+rdi*8]
   140018994:	mov    rcx,rax
   140018997:	call   QWORD PTR [rip+0x16883]        # 0x14002f220
   14001899d:	mov    QWORD PTR [rip+0x2d234],rax        # 0x140045bd8
   1400189a4:	mov    rcx,r12
   1400189a7:	call   QWORD PTR [rip+0x16873]        # 0x14002f220
   1400189ad:	mov    QWORD PTR [rbx],rax
   1400189b0:	lea    rcx,[rbx+0x8]
   1400189b4:	call   QWORD PTR [rip+0x16866]        # 0x14002f220
   1400189ba:	mov    QWORD PTR [rip+0x2d20f],rax        # 0x140045bd0
   1400189c1:	mov    rbx,r12
   1400189c4:	jmp    0x1400189c8
   1400189c6:	xor    ebx,ebx
   1400189c8:	call   0x14001ea6c
   1400189cd:	mov    rax,rbx
   1400189d0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400189d5:	mov    rsi,QWORD PTR [rsp+0x48]
   1400189da:	mov    rdi,QWORD PTR [rsp+0x50]
   1400189df:	add    rsp,0x20
   1400189e3:	pop    r15
   1400189e5:	pop    r14
   1400189e7:	pop    r12
   1400189e9:	ret    
   1400189ea:	int3   
   1400189eb:	int3   
   1400189ec:	sub    rsp,0x28
   1400189f0:	call   0x1400188e0
   1400189f5:	neg    rax
   1400189f8:	sbb    eax,eax
   1400189fa:	neg    eax
   1400189fc:	dec    eax
   1400189fe:	add    rsp,0x28
   140018a02:	ret    
   140018a03:	int3   
   140018a04:	jmp    0x14001a1ac
   140018a09:	int3   
   140018a0a:	int3   
   140018a0b:	int3   
   140018a0c:	rex push rbx
   140018a0e:	sub    rsp,0x40
   140018a12:	mov    rbx,rcx
   140018a15:	jmp    0x140018a26
   140018a17:	mov    rcx,rbx
   140018a1a:	call   0x14001ec58
   140018a1f:	test   eax,eax
   140018a21:	je     0x140018a36
   140018a23:	mov    rcx,rbx
   140018a26:	call   0x14001adf0
   140018a2b:	test   rax,rax
   140018a2e:	je     0x140018a17
   140018a30:	add    rsp,0x40
   140018a34:	pop    rbx
   140018a35:	ret    
   140018a36:	lea    rax,[rip+0x16b2b]        # 0x14002f568
   140018a3d:	lea    rdx,[rsp+0x58]
   140018a42:	lea    rcx,[rsp+0x20]
   140018a47:	mov    r8d,0x1
   140018a4d:	mov    QWORD PTR [rsp+0x58],rax
   140018a52:	call   0x14001a010
   140018a57:	lea    rax,[rip+0x16afa]        # 0x14002f558
   140018a5e:	lea    rdx,[rip+0x26ee3]        # 0x14003f948
   140018a65:	lea    rcx,[rsp+0x20]
   140018a6a:	mov    QWORD PTR [rsp+0x20],rax
   140018a6f:	call   0x14001a628
   140018a74:	int3   
   140018a75:	int3   
   140018a76:	int3   
   140018a77:	int3   
   140018a78:	int3   
   140018a79:	int3   
   140018a7a:	int3   
   140018a7b:	int3   
   140018a7c:	int3   
   140018a7d:	int3   
   140018a7e:	int3   
   140018a7f:	int3   
   140018a80:	int3   
   140018a81:	int3   
   140018a82:	int3   
   140018a83:	int3   
   140018a84:	int3   
   140018a85:	int3   
   140018a86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140018a90:	mov    r11,rcx
   140018a93:	mov    r10,rdx
   140018a96:	cmp    r8,0x10
   140018a9a:	jbe    0x140018b59
   140018aa0:	sub    rdx,rcx
   140018aa3:	jae    0x140018ab4
   140018aa5:	mov    rax,r10
   140018aa8:	add    rax,r8
   140018aab:	cmp    rcx,rax
   140018aae:	jl     0x140018e4a
   140018ab4:	bt     DWORD PTR [rip+0x2b50c],0x1        # 0x140043fc8
   140018abc:	jae    0x140018ad1
   140018abe:	push   rdi
   140018abf:	push   rsi
   140018ac0:	mov    rdi,rcx
   140018ac3:	mov    rsi,r10
   140018ac6:	mov    rcx,r8
   140018ac9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018acb:	pop    rsi
   140018acc:	pop    rdi
   140018acd:	mov    rax,r11
   140018ad0:	ret    
   140018ad1:	bt     DWORD PTR [rip+0x2b4ef],0x2        # 0x140043fc8
   140018ad9:	jb     0x140018d35
   140018adf:	test   cl,0x7
   140018ae2:	je     0x140018b1a
   140018ae4:	test   cl,0x1
   140018ae7:	je     0x140018af4
   140018ae9:	mov    al,BYTE PTR [rdx+rcx*1]
   140018aec:	dec    r8
   140018aef:	mov    BYTE PTR [rcx],al
   140018af1:	inc    rcx
   140018af4:	test   cl,0x2
   140018af7:	je     0x140018b08
   140018af9:	mov    ax,WORD PTR [rdx+rcx*1]
   140018afd:	sub    r8,0x2
   140018b01:	mov    WORD PTR [rcx],ax
   140018b04:	add    rcx,0x2
   140018b08:	test   cl,0x4
   140018b0b:	je     0x140018b1a
   140018b0d:	mov    eax,DWORD PTR [rdx+rcx*1]
   140018b10:	sub    r8,0x4
   140018b14:	mov    DWORD PTR [rcx],eax
   140018b16:	add    rcx,0x4
   140018b1a:	mov    r9,r8
   140018b1d:	shr    r9,0x5
   140018b21:	jne    0x140018d00
   140018b27:	mov    r9,r8
   140018b2a:	shr    r9,0x3
   140018b2e:	je     0x140018b44
   140018b30:	mov    rax,QWORD PTR [rdx+rcx*1]
   140018b34:	mov    QWORD PTR [rcx],rax
   140018b37:	add    rcx,0x8
   140018b3b:	dec    r9
   140018b3e:	jne    0x140018b30
   140018b40:	and    r8,0x7
   140018b44:	test   r8,r8
   140018b47:	jne    0x140018b50
   140018b49:	mov    rax,r11
   140018b4c:	ret    
   140018b4d:	nop    DWORD PTR [rax]
   140018b50:	lea    rdx,[rdx+rcx*1]
   140018b54:	mov    r10,rcx
   140018b57:	jmp    0x140018b5c
   140018b59:	mov    r10,r11
   140018b5c:	lea    r9,[rip+0xfffffffffffe749d]        # 0x140000000
   140018b63:	mov    eax,DWORD PTR [r9+r8*4+0x18b70]
   140018b6b:	add    rax,r9
   140018b6e:	jmp    rax
   140018b70:	mov    ah,0x8b
   140018b72:	add    DWORD PTR [rax],eax
   140018b74:	mov    eax,0xc300018b
   140018b79:	mov    eax,DWORD PTR [rcx]
   140018b7b:	add    bh,cl
   140018b7d:	mov    eax,DWORD PTR [rcx]
   140018b7f:	add    ah,ah
   140018b81:	mov    eax,DWORD PTR [rcx]
   140018b83:	add    ch,ch
   140018b85:	mov    eax,DWORD PTR [rcx]
   140018b87:	add    bh,bh
   140018b89:	mov    eax,DWORD PTR [rcx]
   140018b8b:	add    BYTE PTR [rdx],dl
   140018b8d:	mov    WORD PTR [rcx],es
   140018b8f:	add    BYTE PTR [rsi],ch
   140018b91:	mov    WORD PTR [rcx],es
   140018b93:	add    BYTE PTR [rax],bh
   140018b95:	mov    WORD PTR [rcx],es
   140018b97:	add    BYTE PTR [rbx-0x74],cl
   140018b9a:	add    DWORD PTR [rax],eax
   140018b9c:	pop    rdi
   140018b9d:	mov    WORD PTR [rcx],es
   140018b9f:	add    BYTE PTR [rsp+rcx*4+0x1],bh
   140018ba3:	add    BYTE PTR [rbp-0x58fffe74],cl
   140018ba9:	mov    WORD PTR [rcx],es
   140018bab:	add    dl,al
   140018bad:	mov    WORD PTR [rcx],es
   140018baf:	add    dh,ah
   140018bb1:	mov    WORD PTR [rcx],es
   140018bb3:	add    BYTE PTR [rcx-0x75],cl
   140018bb6:	ret    
   140018bb7:	ret    
   140018bb8:	movzx  rax,BYTE PTR [rdx]
   140018bbc:	mov    BYTE PTR [r10],al
   140018bbf:	mov    rax,r11
   140018bc2:	ret    
   140018bc3:	movzx  rax,WORD PTR [rdx]
   140018bc7:	mov    WORD PTR [r10],ax
   140018bcb:	mov    rax,r11
   140018bce:	ret    
   140018bcf:	movzx  rax,BYTE PTR [rdx]
   140018bd3:	movzx  rcx,WORD PTR [rdx+0x1]
   140018bd8:	mov    BYTE PTR [r10],al
   140018bdb:	mov    WORD PTR [r10+0x1],cx
   140018be0:	mov    rax,r11
   140018be3:	ret    
   140018be4:	mov    eax,DWORD PTR [rdx]
   140018be6:	mov    DWORD PTR [r10],eax
   140018be9:	mov    rax,r11
   140018bec:	ret    
   140018bed:	movzx  rax,BYTE PTR [rdx]
   140018bf1:	mov    ecx,DWORD PTR [rdx+0x1]
   140018bf4:	mov    BYTE PTR [r10],al
   140018bf7:	mov    DWORD PTR [r10+0x1],ecx
   140018bfb:	mov    rax,r11
   140018bfe:	ret    
   140018bff:	movzx  rax,WORD PTR [rdx]
   140018c03:	mov    ecx,DWORD PTR [rdx+0x2]
   140018c06:	mov    WORD PTR [r10],ax
   140018c0a:	mov    DWORD PTR [r10+0x2],ecx
   140018c0e:	mov    rax,r11
   140018c11:	ret    
   140018c12:	movzx  rax,BYTE PTR [rdx]
   140018c16:	movzx  rcx,WORD PTR [rdx+0x1]
   140018c1b:	mov    edx,DWORD PTR [rdx+0x3]
   140018c1e:	mov    BYTE PTR [r10],al
   140018c21:	mov    WORD PTR [r10+0x1],cx
   140018c26:	mov    DWORD PTR [r10+0x3],edx
   140018c2a:	mov    rax,r11
   140018c2d:	ret    
   140018c2e:	mov    rax,QWORD PTR [rdx]
   140018c31:	mov    QWORD PTR [r10],rax
   140018c34:	mov    rax,r11
   140018c37:	ret    
   140018c38:	movzx  rax,BYTE PTR [rdx]
   140018c3c:	mov    rcx,QWORD PTR [rdx+0x1]
   140018c40:	mov    BYTE PTR [r10],al
   140018c43:	mov    QWORD PTR [r10+0x1],rcx
   140018c47:	mov    rax,r11
   140018c4a:	ret    
   140018c4b:	movzx  rax,WORD PTR [rdx]
   140018c4f:	mov    rcx,QWORD PTR [rdx+0x2]
   140018c53:	mov    WORD PTR [r10],ax
   140018c57:	mov    QWORD PTR [r10+0x2],rcx
   140018c5b:	mov    rax,r11
   140018c5e:	ret    
   140018c5f:	movzx  rax,BYTE PTR [rdx]
   140018c63:	movzx  rcx,WORD PTR [rdx+0x1]
   140018c68:	mov    rdx,QWORD PTR [rdx+0x3]
   140018c6c:	mov    BYTE PTR [r10],al
   140018c6f:	mov    WORD PTR [r10+0x1],cx
   140018c74:	mov    QWORD PTR [r10+0x3],rdx
   140018c78:	mov    rax,r11
   140018c7b:	ret    
   140018c7c:	mov    eax,DWORD PTR [rdx]
   140018c7e:	mov    rcx,QWORD PTR [rdx+0x4]
   140018c82:	mov    DWORD PTR [r10],eax
   140018c85:	mov    QWORD PTR [r10+0x4],rcx
   140018c89:	mov    rax,r11
   140018c8c:	ret    
   140018c8d:	movzx  rax,BYTE PTR [rdx]
   140018c91:	mov    ecx,DWORD PTR [rdx+0x1]
   140018c94:	mov    rdx,QWORD PTR [rdx+0x5]
   140018c98:	mov    BYTE PTR [r10],al
   140018c9b:	mov    DWORD PTR [r10+0x1],ecx
   140018c9f:	mov    QWORD PTR [r10+0x5],rdx
   140018ca3:	mov    rax,r11
   140018ca6:	ret    
   140018ca7:	movzx  rax,WORD PTR [rdx]
   140018cab:	mov    ecx,DWORD PTR [rdx+0x2]
   140018cae:	mov    rdx,QWORD PTR [rdx+0x6]
   140018cb2:	mov    WORD PTR [r10],ax
   140018cb6:	mov    DWORD PTR [r10+0x2],ecx
   140018cba:	mov    QWORD PTR [r10+0x6],rdx
   140018cbe:	mov    rax,r11
   140018cc1:	ret    
   140018cc2:	movzx  r8,BYTE PTR [rdx]
   140018cc6:	movzx  rax,WORD PTR [rdx+0x1]
   140018ccb:	mov    ecx,DWORD PTR [rdx+0x3]
   140018cce:	mov    rdx,QWORD PTR [rdx+0x7]
   140018cd2:	mov    BYTE PTR [r10],r8b
   140018cd5:	mov    WORD PTR [r10+0x1],ax
   140018cda:	mov    DWORD PTR [r10+0x3],ecx
   140018cde:	mov    QWORD PTR [r10+0x7],rdx
   140018ce2:	mov    rax,r11
   140018ce5:	ret    
   140018ce6:	movdqu xmm0,XMMWORD PTR [rdx]
   140018cea:	movdqu XMMWORD PTR [r10],xmm0
   140018cef:	mov    rax,r11
   140018cf2:	ret    
   140018cf3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018d00:	mov    rax,QWORD PTR [rdx+rcx*1]
   140018d04:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140018d09:	add    rcx,0x20
   140018d0d:	mov    QWORD PTR [rcx-0x20],rax
   140018d11:	mov    QWORD PTR [rcx-0x18],r10
   140018d15:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   140018d1a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140018d1f:	dec    r9
   140018d22:	mov    QWORD PTR [rcx-0x10],rax
   140018d26:	mov    QWORD PTR [rcx-0x8],r10
   140018d2a:	jne    0x140018d00
   140018d2c:	and    r8,0x1f
   140018d30:	jmp    0x140018b27
   140018d35:	cmp    r8,0x20
   140018d39:	jbe    0x140018e20
   140018d3f:	test   cl,0xf
   140018d42:	jne    0x140018d52
   140018d44:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140018d48:	add    rcx,0x10
   140018d4c:	sub    r8,0x10
   140018d50:	jmp    0x140018d6f
   140018d52:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140018d56:	add    rcx,0x20
   140018d5a:	and    cl,0xf0
   140018d5d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140018d62:	movups XMMWORD PTR [r11],xmm1
   140018d66:	mov    rax,rcx
   140018d69:	sub    rax,r11
   140018d6c:	sub    r8,rax
   140018d6f:	mov    r9,r8
   140018d72:	shr    r9,0x7
   140018d76:	je     0x140018dde
   140018d78:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140018d7c:	jmp    0x140018d88
   140018d7e:	xchg   ax,ax
   140018d80:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140018d84:	movaps XMMWORD PTR [rcx-0x10],xmm1
   140018d88:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140018d8c:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140018d91:	add    rcx,0x80
   140018d98:	movaps XMMWORD PTR [rcx-0x80],xmm0
   140018d9c:	movaps XMMWORD PTR [rcx-0x70],xmm1
   140018da0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   140018da5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   140018daa:	dec    r9
   140018dad:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140018db1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   140018db5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   140018dba:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   140018dbf:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140018dc3:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140018dc7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   140018dcc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140018dd1:	jne    0x140018d80
   140018dd3:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140018dd7:	and    r8,0x7f
   140018ddb:	movaps xmm0,xmm1
   140018dde:	mov    r9,r8
   140018de1:	shr    r9,0x4
   140018de5:	je     0x140018e01
   140018de7:	nop    WORD PTR [rax+rax*1+0x0]
   140018df0:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140018df4:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140018df8:	add    rcx,0x10
   140018dfc:	dec    r9
   140018dff:	jne    0x140018df0
   140018e01:	and    r8,0xf
   140018e05:	je     0x140018e14
   140018e07:	lea    rax,[r8+rcx*1]
   140018e0b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140018e10:	movups XMMWORD PTR [rax-0x10],xmm1
   140018e14:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140018e18:	mov    rax,r11
   140018e1b:	ret    
   140018e1c:	nop    DWORD PTR [rax+0x0]
   140018e20:	movups xmm0,XMMWORD PTR [r10]
   140018e24:	lea    rcx,[r8+rcx*1-0x10]
   140018e29:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140018e2d:	movups XMMWORD PTR [r11],xmm0
   140018e31:	movups XMMWORD PTR [rcx],xmm1
   140018e34:	mov    rax,r11
   140018e37:	ret    
   140018e38:	nop    DWORD PTR [rax+rax*1+0x0]
   140018e40:	data16 data16 xchg ax,ax
   140018e44:	data16 data16 xchg ax,ax
   140018e48:	xchg   ax,ax
   140018e4a:	bt     DWORD PTR [rip+0x2b176],0x2        # 0x140043fc8
   140018e52:	jb     0x140018f11
   140018e58:	add    rcx,r8
   140018e5b:	test   cl,0x7
   140018e5e:	je     0x140018e96
   140018e60:	test   cl,0x1
   140018e63:	je     0x140018e70
   140018e65:	dec    rcx
   140018e68:	mov    al,BYTE PTR [rdx+rcx*1]
   140018e6b:	dec    r8
   140018e6e:	mov    BYTE PTR [rcx],al
   140018e70:	test   cl,0x2
   140018e73:	je     0x140018e84
   140018e75:	sub    rcx,0x2
   140018e79:	mov    ax,WORD PTR [rdx+rcx*1]
   140018e7d:	sub    r8,0x2
   140018e81:	mov    WORD PTR [rcx],ax
   140018e84:	test   cl,0x4
   140018e87:	je     0x140018e96
   140018e89:	sub    rcx,0x4
   140018e8d:	mov    eax,DWORD PTR [rdx+rcx*1]
   140018e90:	sub    r8,0x4
   140018e94:	mov    DWORD PTR [rcx],eax
   140018e96:	mov    r9,r8
   140018e99:	shr    r9,0x5
   140018e9d:	jne    0x140018ee0
   140018e9f:	mov    r9,r8
   140018ea2:	shr    r9,0x3
   140018ea6:	je     0x140018ebc
   140018ea8:	sub    rcx,0x8
   140018eac:	mov    rax,QWORD PTR [rdx+rcx*1]
   140018eb0:	dec    r9
   140018eb3:	mov    QWORD PTR [rcx],rax
   140018eb6:	jne    0x140018ea8
   140018eb8:	and    r8,0x7
   140018ebc:	test   r8,r8
   140018ebf:	jne    0x140018ed0
   140018ec1:	mov    rax,r11
   140018ec4:	ret    
   140018ec5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018ed0:	sub    rcx,r8
   140018ed3:	mov    r10,rcx
   140018ed6:	lea    rdx,[rdx+rcx*1]
   140018eda:	jmp    0x140018b5c
   140018edf:	nop
   140018ee0:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140018ee5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   140018eea:	sub    rcx,0x20
   140018eee:	mov    QWORD PTR [rcx+0x18],rax
   140018ef2:	mov    QWORD PTR [rcx+0x10],r10
   140018ef6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   140018efb:	mov    r10,QWORD PTR [rdx+rcx*1]
   140018eff:	dec    r9
   140018f02:	mov    QWORD PTR [rcx+0x8],rax
   140018f06:	mov    QWORD PTR [rcx],r10
   140018f09:	jne    0x140018ee0
   140018f0b:	and    r8,0x1f
   140018f0f:	jmp    0x140018e9f
   140018f11:	cmp    r8,0x20
   140018f15:	jbe    0x140018e20
   140018f1b:	add    rcx,r8
   140018f1e:	test   cl,0xf
   140018f21:	jne    0x140018f31
   140018f23:	sub    rcx,0x10
   140018f27:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140018f2b:	sub    r8,0x10
   140018f2f:	jmp    0x140018f4c
   140018f31:	sub    rcx,0x10
   140018f35:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140018f39:	mov    rax,rcx
   140018f3c:	and    cl,0xf0
   140018f3f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140018f43:	movups XMMWORD PTR [rax],xmm1
   140018f46:	mov    r8,rcx
   140018f49:	sub    r8,r11
   140018f4c:	mov    r9,r8
   140018f4f:	shr    r9,0x7
   140018f53:	je     0x140018fbd
   140018f55:	movaps XMMWORD PTR [rcx],xmm0
   140018f58:	jmp    0x140018f67
   140018f5a:	nop    WORD PTR [rax+rax*1+0x0]
   140018f60:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140018f64:	movaps XMMWORD PTR [rcx],xmm1
   140018f67:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   140018f6c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140018f71:	sub    rcx,0x80
   140018f78:	movaps XMMWORD PTR [rcx+0x70],xmm0
   140018f7c:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140018f80:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140018f85:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   140018f8a:	dec    r9
   140018f8d:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140018f91:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140018f95:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   140018f9a:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   140018f9f:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140018fa3:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140018fa7:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   140018fac:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140018fb0:	jne    0x140018f60
   140018fb2:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140018fb6:	and    r8,0x7f
   140018fba:	movaps xmm0,xmm1
   140018fbd:	mov    r9,r8
   140018fc0:	shr    r9,0x4
   140018fc4:	je     0x140018fe0
   140018fc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140018fd0:	movaps XMMWORD PTR [rcx],xmm0
   140018fd3:	sub    rcx,0x10
   140018fd7:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140018fdb:	dec    r9
   140018fde:	jne    0x140018fd0
   140018fe0:	and    r8,0xf
   140018fe4:	je     0x140018fee
   140018fe6:	movups xmm1,XMMWORD PTR [r10]
   140018fea:	movups XMMWORD PTR [r11],xmm1
   140018fee:	movaps XMMWORD PTR [rcx],xmm0
   140018ff1:	mov    rax,r11
   140018ff4:	ret    
   140018ff5:	int3   
   140018ff6:	int3   
   140018ff7:	int3   
   140018ff8:	sub    rsp,0x28
   140018ffc:	mov    rcx,QWORD PTR [rip+0x2a76d]        # 0x140043770
   140019003:	call   QWORD PTR [rip+0x1621f]        # 0x14002f228
   140019009:	test   rax,rax
   14001900c:	je     0x140019012
   14001900e:	call   rax
   140019010:	jmp    0x140019012
   140019012:	call   0x140019018
   140019017:	nop
   140019018:	sub    rsp,0x28
   14001901c:	call   0x14001ef6c
   140019021:	mov    rcx,QWORD PTR [rax+0xd0]
   140019028:	test   rcx,rcx
   14001902b:	je     0x140019031
   14001902d:	call   rcx
   14001902f:	jmp    0x140019031
   140019031:	call   0x14001d9f8
   140019036:	nop
   140019037:	int3   
   140019038:	sub    rsp,0x28
   14001903c:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x140019018
   140019043:	call   QWORD PTR [rip+0x161d7]        # 0x14002f220
   140019049:	mov    QWORD PTR [rip+0x2a720],rax        # 0x140043770
   140019050:	add    rsp,0x28
   140019054:	ret    
   140019055:	int3   
   140019056:	int3   
   140019057:	int3   
   140019058:	rex push rbx
   14001905a:	sub    rsp,0x20
   14001905e:	mov    rbx,rcx
   140019061:	mov    BYTE PTR [rcx+0x18],0x0
   140019065:	test   rdx,rdx
   140019068:	jne    0x1400190f0
   14001906e:	call   0x14001ef6c
   140019073:	mov    QWORD PTR [rbx+0x10],rax
   140019077:	mov    rdx,QWORD PTR [rax+0xc0]
   14001907e:	mov    QWORD PTR [rbx],rdx
   140019081:	mov    rcx,QWORD PTR [rax+0xb8]
   140019088:	mov    QWORD PTR [rbx+0x8],rcx
   14001908c:	cmp    rdx,QWORD PTR [rip+0x28dfd]        # 0x140041e90
   140019093:	je     0x1400190ab
   140019095:	mov    eax,DWORD PTR [rax+0xc8]
   14001909b:	test   DWORD PTR [rip+0x28f57],eax        # 0x140041ff8
   1400190a1:	jne    0x1400190ab
   1400190a3:	call   0x14001f444
   1400190a8:	mov    QWORD PTR [rbx],rax
   1400190ab:	mov    rax,QWORD PTR [rip+0x28b0e]        # 0x140041bc0
   1400190b2:	cmp    QWORD PTR [rbx+0x8],rax
   1400190b6:	je     0x1400190d3
   1400190b8:	mov    rax,QWORD PTR [rbx+0x10]
   1400190bc:	mov    ecx,DWORD PTR [rax+0xc8]
   1400190c2:	test   DWORD PTR [rip+0x28f30],ecx        # 0x140041ff8
   1400190c8:	jne    0x1400190d3
   1400190ca:	call   0x14001f83c
   1400190cf:	mov    QWORD PTR [rbx+0x8],rax
   1400190d3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400190d7:	mov    eax,DWORD PTR [rcx+0xc8]
   1400190dd:	test   al,0x2
   1400190df:	jne    0x1400190f7
   1400190e1:	or     eax,0x2
   1400190e4:	mov    DWORD PTR [rcx+0xc8],eax
   1400190ea:	mov    BYTE PTR [rbx+0x18],0x1
   1400190ee:	jmp    0x1400190f7
   1400190f0:	movups xmm0,XMMWORD PTR [rdx]
   1400190f3:	movdqu XMMWORD PTR [rcx],xmm0
   1400190f7:	mov    rax,rbx
   1400190fa:	add    rsp,0x20
   1400190fe:	pop    rbx
   1400190ff:	ret    
   140019100:	mov    QWORD PTR [rsp+0x10],rbx
   140019105:	mov    WORD PTR [rsp+0x8],cx
   14001910a:	push   rbp
   14001910b:	mov    rbp,rsp
   14001910e:	sub    rsp,0x50
   140019112:	mov    eax,0xffff
   140019117:	cmp    cx,ax
   14001911a:	je     0x1400191bf
   140019120:	lea    rcx,[rbp-0x20]
   140019124:	call   0x140019058
   140019129:	mov    rbx,QWORD PTR [rbp-0x20]
   14001912d:	mov    rax,QWORD PTR [rbx+0x138]
   140019134:	test   rax,rax
   140019137:	jne    0x14001914c
   140019139:	movzx  edx,WORD PTR [rbp+0x10]
   14001913d:	lea    eax,[rdx-0x41]
   140019140:	cmp    ax,0x19
   140019144:	ja     0x1400191ab
   140019146:	add    dx,0x20
   14001914a:	jmp    0x1400191ab
   14001914c:	movzx  ecx,WORD PTR [rbp+0x10]
   140019150:	mov    edx,0x100
   140019155:	cmp    cx,dx
   140019158:	jae    0x14001917f
   14001915a:	mov    edx,0x1
   14001915f:	call   0x14001fdec
   140019164:	test   eax,eax
   140019166:	jne    0x14001916e
   140019168:	movzx  edx,WORD PTR [rbp+0x10]
   14001916c:	jmp    0x1400191ab
   14001916e:	movzx  ecx,WORD PTR [rbp+0x10]
   140019172:	mov    rax,QWORD PTR [rbx+0x110]
   140019179:	movzx  edx,BYTE PTR [rax+rcx*1]
   14001917d:	jmp    0x1400191ab
   14001917f:	lea    rcx,[rbp+0x20]
   140019183:	mov    r9d,0x1
   140019189:	lea    r8,[rbp+0x10]
   14001918d:	mov    DWORD PTR [rsp+0x28],r9d
   140019192:	mov    QWORD PTR [rsp+0x20],rcx
   140019197:	mov    rcx,rax
   14001919a:	call   0x14001c3e0
   14001919f:	movzx  edx,WORD PTR [rbp+0x10]
   1400191a3:	test   eax,eax
   1400191a5:	je     0x1400191ab
   1400191a7:	movzx  edx,WORD PTR [rbp+0x20]
   1400191ab:	cmp    BYTE PTR [rbp-0x8],0x0
   1400191af:	je     0x1400191bc
   1400191b1:	mov    rcx,QWORD PTR [rbp-0x10]
   1400191b5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400191bc:	movzx  eax,dx
   1400191bf:	mov    rbx,QWORD PTR [rsp+0x68]
   1400191c4:	add    rsp,0x50
   1400191c8:	pop    rbp
   1400191c9:	ret    
   1400191ca:	int3   
   1400191cb:	int3   
   1400191cc:	xor    edx,edx
   1400191ce:	jmp    0x140019100
   1400191d3:	int3   
   1400191d4:	mov    QWORD PTR [rsp+0x20],rbx
   1400191d9:	push   rbp
   1400191da:	push   rsi
   1400191db:	push   rdi
   1400191dc:	push   r12
   1400191de:	push   r13
   1400191e0:	push   r14
   1400191e2:	push   r15
   1400191e4:	mov    rbp,rsp
   1400191e7:	sub    rsp,0x80
   1400191ee:	mov    rax,QWORD PTR [rip+0x2845b]        # 0x140041650
   1400191f5:	xor    rax,rsp
   1400191f8:	mov    QWORD PTR [rbp-0x10],rax
   1400191fc:	xor    r12d,r12d
   1400191ff:	mov    rsi,r8
   140019202:	mov    r14,rdx
   140019205:	mov    r15,rcx
   140019208:	mov    ebx,r12d
   14001920b:	mov    DWORD PTR [rbp-0x40],r12d
   14001920f:	test   rcx,rcx
   140019212:	je     0x140019220
   140019214:	test   r8,r8
   140019217:	jne    0x140019220
   140019219:	xor    eax,eax
   14001921b:	jmp    0x1400194db
   140019220:	test   rdx,rdx
   140019223:	jne    0x14001923e
   140019225:	call   0x14001b864
   14001922a:	mov    DWORD PTR [rax],0x16
   140019230:	call   0x14001ffb8
   140019235:	or     rax,0xffffffffffffffff
   140019239:	jmp    0x1400194db
   14001923e:	lea    rcx,[rbp-0x38]
   140019242:	mov    rdx,r9
   140019245:	call   0x140019058
   14001924a:	test   r15,r15
   14001924d:	je     0x140019434
   140019253:	mov    r13,QWORD PTR [rbp-0x38]
   140019257:	cmp    QWORD PTR [r13+0x138],r12
   14001925e:	jne    0x1400192a7
   140019260:	test   rsi,rsi
   140019263:	je     0x1400194c4
   140019269:	mov    ecx,0xff
   14001926e:	cmp    WORD PTR [r14],cx
   140019272:	ja     0x140019299
   140019274:	mov    al,BYTE PTR [r14]
   140019277:	mov    BYTE PTR [r15+rbx*1],al
   14001927b:	movzx  eax,WORD PTR [r14]
   14001927f:	add    r14,0x2
   140019283:	test   ax,ax
   140019286:	je     0x1400194c4
   14001928c:	inc    rbx
   14001928f:	cmp    rbx,rsi
   140019292:	jb     0x14001926e
   140019294:	jmp    0x1400194c4
   140019299:	call   0x14001b864
   14001929e:	or     rbx,0xffffffffffffffff
   1400192a2:	jmp    0x1400194be
   1400192a7:	cmp    DWORD PTR [r13+0xd4],0x1
   1400192af:	jne    0x14001932b
   1400192b1:	test   rsi,rsi
   1400192b4:	je     0x1400192e2
   1400192b6:	mov    rax,r14
   1400192b9:	mov    rcx,rsi
   1400192bc:	cmp    WORD PTR [rax],r12w
   1400192c0:	je     0x1400192cb
   1400192c2:	add    rax,0x2
   1400192c6:	dec    rcx
   1400192c9:	jne    0x1400192bc
   1400192cb:	test   rcx,rcx
   1400192ce:	je     0x1400192e2
   1400192d0:	cmp    WORD PTR [rax],r12w
   1400192d4:	jne    0x1400192e2
   1400192d6:	mov    rsi,rax
   1400192d9:	sub    rsi,r14
   1400192dc:	sar    rsi,1
   1400192df:	inc    rsi
   1400192e2:	mov    ecx,DWORD PTR [r13+0x4]
   1400192e6:	lea    rax,[rbp-0x40]
   1400192ea:	mov    r9d,esi
   1400192ed:	mov    QWORD PTR [rsp+0x38],rax
   1400192f2:	mov    QWORD PTR [rsp+0x30],r12
   1400192f7:	mov    r8,r14
   1400192fa:	xor    edx,edx
   1400192fc:	mov    DWORD PTR [rsp+0x28],esi
   140019300:	mov    QWORD PTR [rsp+0x20],r15
   140019305:	call   QWORD PTR [rip+0x15f05]        # 0x14002f210
   14001930b:	movsxd rbx,eax
   14001930e:	test   eax,eax
   140019310:	je     0x140019299
   140019312:	cmp    DWORD PTR [rbp-0x40],r12d
   140019316:	jne    0x140019299
   140019318:	cmp    BYTE PTR [r15+rbx*1-0x1],r12b
   14001931d:	jne    0x1400194c4
   140019323:	dec    rbx
   140019326:	jmp    0x1400194c4
   14001932b:	mov    ecx,DWORD PTR [r13+0x4]
   14001932f:	lea    rax,[rbp-0x40]
   140019333:	or     rbx,0xffffffffffffffff
   140019337:	mov    QWORD PTR [rsp+0x38],rax
   14001933c:	mov    QWORD PTR [rsp+0x30],r12
   140019341:	mov    r9d,ebx
   140019344:	mov    r8,r14
   140019347:	xor    edx,edx
   140019349:	mov    DWORD PTR [rsp+0x28],esi
   14001934d:	mov    QWORD PTR [rsp+0x20],r15
   140019352:	call   QWORD PTR [rip+0x15eb8]        # 0x14002f210
   140019358:	movsxd rdi,eax
   14001935b:	test   eax,eax
   14001935d:	je     0x140019372
   14001935f:	cmp    DWORD PTR [rbp-0x40],r12d
   140019363:	jne    0x1400194b9
   140019369:	lea    rbx,[rdi-0x1]
   14001936d:	jmp    0x1400194c4
   140019372:	cmp    DWORD PTR [rbp-0x40],r12d
   140019376:	jne    0x1400194b9
   14001937c:	call   QWORD PTR [rip+0x15e1e]        # 0x14002f1a0
   140019382:	cmp    eax,0x7a
   140019385:	jne    0x1400194b9
   14001938b:	test   rsi,rsi
   14001938e:	je     0x1400194c7
   140019394:	mov    ecx,DWORD PTR [r13+0x4]
   140019398:	lea    rax,[rbp-0x40]
   14001939c:	mov    r9d,0x1
   1400193a2:	mov    QWORD PTR [rsp+0x38],rax
   1400193a7:	mov    eax,DWORD PTR [r13+0xd4]
   1400193ae:	mov    QWORD PTR [rsp+0x30],r12
   1400193b3:	mov    DWORD PTR [rsp+0x28],eax
   1400193b7:	lea    rax,[rbp-0x18]
   1400193bb:	mov    r8,r14
   1400193be:	xor    edx,edx
   1400193c0:	mov    QWORD PTR [rsp+0x20],rax
   1400193c5:	call   QWORD PTR [rip+0x15e45]        # 0x14002f210
   1400193cb:	test   eax,eax
   1400193cd:	je     0x1400194b9
   1400193d3:	cmp    DWORD PTR [rbp-0x40],r12d
   1400193d7:	jne    0x1400194b9
   1400193dd:	test   eax,eax
   1400193df:	js     0x1400194b9
   1400193e5:	movsxd rdx,eax
   1400193e8:	cmp    rdx,0x5
   1400193ec:	ja     0x1400194b9
   1400193f2:	lea    rax,[rdx+rdi*1]
   1400193f6:	cmp    rax,rsi
   1400193f9:	ja     0x1400194c7
   1400193ff:	mov    rcx,r12
   140019402:	test   rdx,rdx
   140019405:	jle    0x140019422
   140019407:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   14001940b:	mov    BYTE PTR [r15+rdi*1],al
   14001940f:	test   al,al
   140019411:	je     0x1400194c7
   140019417:	inc    rcx
   14001941a:	inc    rdi
   14001941d:	cmp    rcx,rdx
   140019420:	jl     0x140019407
   140019422:	add    r14,0x2
   140019426:	cmp    rdi,rsi
   140019429:	jae    0x1400194c7
   14001942f:	jmp    0x140019394
   140019434:	mov    rax,QWORD PTR [rbp-0x38]
   140019438:	cmp    QWORD PTR [rax+0x138],r12
   14001943f:	jne    0x14001947a
   140019441:	movzx  eax,WORD PTR [r14]
   140019445:	mov    rdi,r12
   140019448:	test   ax,ax
   14001944b:	je     0x1400194c7
   14001944d:	mov    ecx,0xff
   140019452:	cmp    ax,cx
   140019455:	ja     0x140019469
   140019457:	add    r14,0x2
   14001945b:	inc    rdi
   14001945e:	movzx  eax,WORD PTR [r14]
   140019462:	test   ax,ax
   140019465:	jne    0x140019452
   140019467:	jmp    0x1400194c7
   140019469:	call   0x14001b864
   14001946e:	or     rdi,0xffffffffffffffff
   140019472:	mov    DWORD PTR [rax],0x2a
   140019478:	jmp    0x1400194c7
   14001947a:	lea    rcx,[rbp-0x40]
   14001947e:	or     rbx,0xffffffffffffffff
   140019482:	mov    r8,r14
   140019485:	mov    QWORD PTR [rsp+0x38],rcx
   14001948a:	mov    ecx,DWORD PTR [rax+0x4]
   14001948d:	mov    QWORD PTR [rsp+0x30],r12
   140019492:	mov    r9d,ebx
   140019495:	xor    edx,edx
   140019497:	mov    DWORD PTR [rsp+0x28],r12d
   14001949c:	mov    QWORD PTR [rsp+0x20],r12
   1400194a1:	call   QWORD PTR [rip+0x15d69]        # 0x14002f210
   1400194a7:	movsxd rdi,eax
   1400194aa:	test   eax,eax
   1400194ac:	je     0x1400194b9
   1400194ae:	cmp    DWORD PTR [rbp-0x40],r12d
   1400194b2:	jne    0x1400194b9
   1400194b4:	dec    rdi
   1400194b7:	jmp    0x1400194c7
   1400194b9:	call   0x14001b864
   1400194be:	mov    DWORD PTR [rax],0x2a
   1400194c4:	mov    rdi,rbx
   1400194c7:	cmp    BYTE PTR [rbp-0x20],r12b
   1400194cb:	je     0x1400194d8
   1400194cd:	mov    rcx,QWORD PTR [rbp-0x28]
   1400194d1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400194d8:	mov    rax,rdi
   1400194db:	mov    rcx,QWORD PTR [rbp-0x10]
   1400194df:	xor    rcx,rsp
   1400194e2:	call   0x1400187d0
   1400194e7:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400194ef:	add    rsp,0x80
   1400194f6:	pop    r15
   1400194f8:	pop    r14
   1400194fa:	pop    r13
   1400194fc:	pop    r12
   1400194fe:	pop    rdi
   1400194ff:	pop    rsi
   140019500:	pop    rbp
   140019501:	ret    
   140019502:	int3   
   140019503:	int3   
   140019504:	mov    QWORD PTR [rsp+0x8],rbx
   140019509:	mov    QWORD PTR [rsp+0x10],rsi
   14001950e:	mov    QWORD PTR [rsp+0x18],rdi
   140019513:	push   r14
   140019515:	sub    rsp,0x20
   140019519:	xor    r14d,r14d
   14001951c:	mov    rax,r9
   14001951f:	mov    rdi,r8
   140019522:	mov    rbx,rdx
   140019525:	mov    rsi,rcx
   140019528:	test   rdx,rdx
   14001952b:	je     0x14001957e
   14001952d:	test   r8,r8
   140019530:	je     0x140019583
   140019532:	test   rdx,rdx
   140019535:	je     0x14001953a
   140019537:	mov    BYTE PTR [rdx],r14b
   14001953a:	test   rcx,rcx
   14001953d:	je     0x140019542
   14001953f:	and    QWORD PTR [rcx],r14
   140019542:	mov    r8,QWORD PTR [rsp+0x50]
   140019547:	cmp    r8,rdi
   14001954a:	cmova  r8,rdi
   14001954e:	cmp    r8,0x7fffffff
   140019555:	ja     0x140019583
   140019557:	mov    r9,QWORD PTR [rsp+0x58]
   14001955c:	mov    rdx,rax
   14001955f:	mov    rcx,rbx
   140019562:	call   0x1400191d4
   140019567:	cmp    rax,0xffffffffffffffff
   14001956b:	jne    0x140019598
   14001956d:	test   rbx,rbx
   140019570:	je     0x140019575
   140019572:	mov    BYTE PTR [rbx],r14b
   140019575:	call   0x14001b864
   14001957a:	mov    eax,DWORD PTR [rax]
   14001957c:	jmp    0x1400195da
   14001957e:	test   r8,r8
   140019581:	je     0x140019532
   140019583:	call   0x14001b864
   140019588:	mov    ebx,0x16
   14001958d:	mov    DWORD PTR [rax],ebx
   14001958f:	call   0x14001ffb8
   140019594:	mov    eax,ebx
   140019596:	jmp    0x1400195da
   140019598:	inc    rax
   14001959b:	test   rbx,rbx
   14001959e:	je     0x1400195cf
   1400195a0:	cmp    rax,rdi
   1400195a3:	jbe    0x1400195ca
   1400195a5:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   1400195ab:	je     0x1400195c1
   1400195ad:	mov    BYTE PTR [rbx],r14b
   1400195b0:	cmp    rdi,rax
   1400195b3:	ja     0x1400195c1
   1400195b5:	call   0x14001b864
   1400195ba:	mov    ebx,0x22
   1400195bf:	jmp    0x14001958d
   1400195c1:	mov    rax,rdi
   1400195c4:	mov    r14d,0x50
   1400195ca:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   1400195cf:	test   rsi,rsi
   1400195d2:	je     0x1400195d7
   1400195d4:	mov    QWORD PTR [rsi],rax
   1400195d7:	mov    eax,r14d
   1400195da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400195df:	mov    rsi,QWORD PTR [rsp+0x38]
   1400195e4:	mov    rdi,QWORD PTR [rsp+0x40]
   1400195e9:	add    rsp,0x20
   1400195ed:	pop    r14
   1400195ef:	ret    
   1400195f0:	sub    rsp,0x38
   1400195f4:	mov    rax,QWORD PTR [rsp+0x60]
   1400195f9:	and    QWORD PTR [rsp+0x28],0x0
   1400195ff:	mov    QWORD PTR [rsp+0x20],rax
   140019604:	call   0x140019504
   140019609:	add    rsp,0x38
   14001960d:	ret    
   14001960e:	int3   
   14001960f:	int3   
   140019610:	jmp    0x140018a04
   140019615:	int3   
   140019616:	int3   
   140019617:	int3   
   140019618:	mov    r11,rsp
   14001961b:	mov    QWORD PTR [r11+0x20],r9
   14001961f:	sub    rsp,0x38
   140019623:	lea    rax,[r11+0x28]
   140019627:	mov    QWORD PTR [r11-0x10],rax
   14001962b:	and    QWORD PTR [r11-0x18],0x0
   140019630:	call   0x140019d00
   140019635:	add    rsp,0x38
   140019639:	ret    
   14001963a:	int3   
   14001963b:	int3   
   14001963c:	mov    r11,rsp
   14001963f:	mov    QWORD PTR [r11+0x18],r8
   140019643:	mov    QWORD PTR [r11+0x20],r9
   140019647:	sub    rsp,0x38
   14001964b:	lea    rax,[r11+0x20]
   14001964f:	xor    r9d,r9d
   140019652:	mov    QWORD PTR [r11-0x18],rax
   140019656:	call   0x140019e48
   14001965b:	add    rsp,0x38
   14001965f:	ret    
   140019660:	rex push rdi
   140019662:	sub    rsp,0x20
   140019666:	mov    r10,r8
   140019669:	xor    r8d,r8d
   14001966c:	test   r9,r9
   14001966f:	jne    0x140019675
   140019671:	xor    eax,eax
   140019673:	jmp    0x1400196d4
   140019675:	test   rcx,rcx
   140019678:	jne    0x14001968f
   14001967a:	call   0x14001b864
   14001967f:	mov    edi,0x16
   140019684:	mov    DWORD PTR [rax],edi
   140019686:	call   0x14001ffb8
   14001968b:	mov    eax,edi
   14001968d:	jmp    0x1400196d4
   14001968f:	test   r10,r10
   140019692:	je     0x1400196a7
   140019694:	cmp    rdx,r9
   140019697:	jb     0x1400196a7
   140019699:	lea    r8,[r9+r9*1]
   14001969d:	mov    rdx,r10
   1400196a0:	call   0x140018a90
   1400196a5:	jmp    0x140019671
   1400196a7:	test   rdx,rdx
   1400196aa:	je     0x1400196b9
   1400196ac:	mov    rdi,rcx
   1400196af:	movzx  eax,r8w
   1400196b3:	mov    rcx,rdx
   1400196b6:	rep stos WORD PTR es:[rdi],ax
   1400196b9:	test   r10,r10
   1400196bc:	je     0x14001967a
   1400196be:	cmp    rdx,r9
   1400196c1:	jae    0x1400196cf
   1400196c3:	call   0x14001b864
   1400196c8:	mov    edi,0x22
   1400196cd:	jmp    0x140019684
   1400196cf:	mov    eax,0x16
   1400196d4:	add    rsp,0x20
   1400196d8:	pop    rdi
   1400196d9:	ret    
   1400196da:	int3   
   1400196db:	int3   
   1400196dc:	sub    rsp,0x28
   1400196e0:	mov    rax,rdx
   1400196e3:	lea    rdx,[rcx+0x11]
   1400196e7:	lea    rcx,[rax+0x11]
   1400196eb:	call   0x14001da60
   1400196f0:	test   eax,eax
   1400196f2:	sete   al
   1400196f5:	add    rsp,0x28
   1400196f9:	ret    
   1400196fa:	int3   
   1400196fb:	int3   
   1400196fc:	mov    QWORD PTR [rsp+0x8],rbx
   140019701:	push   rdi
   140019702:	sub    rsp,0x20
   140019706:	lea    rax,[rip+0x1766b]        # 0x140030d78
   14001970d:	mov    ebx,edx
   14001970f:	mov    rdi,rcx
   140019712:	mov    QWORD PTR [rcx],rax
   140019715:	call   0x1400201a0
   14001971a:	test   bl,0x1
   14001971d:	je     0x140019727
   14001971f:	mov    rcx,rdi
   140019722:	call   0x140018a04
   140019727:	mov    rax,rdi
   14001972a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001972f:	add    rsp,0x20
   140019733:	pop    rdi
   140019734:	ret    
   140019735:	int3   
   140019736:	int3   
   140019737:	int3   
   140019738:	sub    rsp,0x18
   14001973c:	xor    r8d,r8d
   14001973f:	mov    r9,rcx
   140019742:	test   edx,edx
   140019744:	jne    0x14001978e
   140019746:	and    r9d,0xf
   14001974a:	mov    rdx,rcx
   14001974d:	xorps  xmm1,xmm1
   140019750:	and    rdx,0xfffffffffffffff0
   140019754:	mov    ecx,r9d
   140019757:	or     r9d,0xffffffff
   14001975b:	shl    r9d,cl
   14001975e:	movdqa xmm0,XMMWORD PTR [rdx]
   140019762:	pcmpeqb xmm0,xmm1
   140019766:	pmovmskb eax,xmm0
   14001976a:	and    eax,r9d
   14001976d:	jne    0x140019783
   14001976f:	add    rdx,0x10
   140019773:	movdqa xmm0,XMMWORD PTR [rdx]
   140019777:	pcmpeqb xmm0,xmm1
   14001977b:	pmovmskb eax,xmm0
   14001977f:	test   eax,eax
   140019781:	je     0x14001976f
   140019783:	bsf    eax,eax
   140019786:	add    rax,rdx
   140019789:	jmp    0x140019834
   14001978e:	cmp    DWORD PTR [rip+0x27eeb],0x2        # 0x140041680
   140019795:	jge    0x140019839
   14001979b:	mov    r10,rcx
   14001979e:	movzx  eax,dl
   1400197a1:	and    r9d,0xf
   1400197a5:	and    r10,0xfffffffffffffff0
   1400197a9:	mov    ecx,eax
   1400197ab:	xorps  xmm2,xmm2
   1400197ae:	shl    ecx,0x8
   1400197b1:	or     ecx,eax
   1400197b3:	movd   xmm0,ecx
   1400197b7:	mov    ecx,r9d
   1400197ba:	or     r9d,0xffffffff
   1400197be:	shl    r9d,cl
   1400197c1:	pshuflw xmm1,xmm0,0x0
   1400197c6:	movdqa xmm0,xmm2
   1400197ca:	pcmpeqb xmm0,XMMWORD PTR [r10]
   1400197cf:	pshufd xmm3,xmm1,0x0
   1400197d4:	pmovmskb ecx,xmm0
   1400197d8:	movdqa xmm0,xmm3
   1400197dc:	pcmpeqb xmm0,XMMWORD PTR [r10]
   1400197e1:	pmovmskb edx,xmm0
   1400197e5:	and    edx,r9d
   1400197e8:	and    ecx,r9d
   1400197eb:	jne    0x14001981b
   1400197ed:	bsr    ecx,edx
   1400197f0:	movdqa xmm1,xmm2
   1400197f4:	movdqa xmm0,xmm3
   1400197f8:	add    rcx,r10
   1400197fb:	test   edx,edx
   1400197fd:	cmovne r8,rcx
   140019801:	add    r10,0x10
   140019805:	pcmpeqb xmm1,XMMWORD PTR [r10]
   14001980a:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001980f:	pmovmskb ecx,xmm1
   140019813:	pmovmskb edx,xmm0
   140019817:	test   ecx,ecx
   140019819:	je     0x1400197ed
   14001981b:	mov    eax,ecx
   14001981d:	neg    eax
   14001981f:	and    eax,ecx
   140019821:	dec    eax
   140019823:	and    edx,eax
   140019825:	bsr    ecx,edx
   140019828:	add    rcx,r10
   14001982b:	test   edx,edx
   14001982d:	cmovne r8,rcx
   140019831:	mov    rax,r8
   140019834:	add    rsp,0x18
   140019838:	ret    
   140019839:	test   cl,0xf
   14001983c:	je     0x140019857
   14001983e:	movsx  eax,BYTE PTR [r9]
   140019842:	cmp    eax,edx
   140019844:	cmove  r8,r9
   140019848:	cmp    BYTE PTR [r9],0x0
   14001984c:	je     0x140019831
   14001984e:	inc    r9
   140019851:	test   r9b,0xf
   140019855:	jne    0x14001983e
   140019857:	movzx  eax,dl
   14001985a:	movd   xmm0,eax
   14001985e:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140019865:	jae    0x140019874
   140019867:	movsxd r8,ecx
   14001986a:	add    r8,r9
   14001986d:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   140019874:	je     0x140019831
   140019876:	add    r9,0x10
   14001987a:	jmp    0x14001985e
   14001987c:	rex push rbx
   14001987e:	sub    rsp,0x20
   140019882:	test   rcx,rcx
   140019885:	je     0x140019894
   140019887:	test   rdx,rdx
   14001988a:	je     0x140019894
   14001988c:	test   r8,r8
   14001988f:	jne    0x1400198ad
   140019891:	mov    BYTE PTR [rcx],r8b
   140019894:	call   0x14001b864
   140019899:	mov    ebx,0x16
   14001989e:	mov    DWORD PTR [rax],ebx
   1400198a0:	call   0x14001ffb8
   1400198a5:	mov    eax,ebx
   1400198a7:	add    rsp,0x20
   1400198ab:	pop    rbx
   1400198ac:	ret    
   1400198ad:	mov    r9,rcx
   1400198b0:	sub    r9,r8
   1400198b3:	mov    al,BYTE PTR [r8]
   1400198b6:	mov    BYTE PTR [r9+r8*1],al
   1400198ba:	inc    r8
   1400198bd:	test   al,al
   1400198bf:	je     0x1400198c6
   1400198c1:	dec    rdx
   1400198c4:	jne    0x1400198b3
   1400198c6:	test   rdx,rdx
   1400198c9:	jne    0x1400198d9
   1400198cb:	mov    BYTE PTR [rcx],dl
   1400198cd:	call   0x14001b864
   1400198d2:	mov    ebx,0x22
   1400198d7:	jmp    0x14001989e
   1400198d9:	xor    eax,eax
   1400198db:	jmp    0x1400198a7
   1400198dd:	int3   
   1400198de:	int3   
   1400198df:	int3   
   1400198e0:	rex push rbx
   1400198e2:	sub    rsp,0x20
   1400198e6:	xor    r10d,r10d
   1400198e9:	mov    r9,rcx
   1400198ec:	test   rcx,rcx
   1400198ef:	je     0x1400198fe
   1400198f1:	test   rdx,rdx
   1400198f4:	je     0x1400198fe
   1400198f6:	test   r8,r8
   1400198f9:	jne    0x140019917
   1400198fb:	mov    BYTE PTR [rcx],r10b
   1400198fe:	call   0x14001b864
   140019903:	mov    ebx,0x16
   140019908:	mov    DWORD PTR [rax],ebx
   14001990a:	call   0x14001ffb8
   14001990f:	mov    eax,ebx
   140019911:	add    rsp,0x20
   140019915:	pop    rbx
   140019916:	ret    
   140019917:	cmp    BYTE PTR [rcx],r10b
   14001991a:	je     0x140019924
   14001991c:	inc    rcx
   14001991f:	dec    rdx
   140019922:	jne    0x140019917
   140019924:	test   rdx,rdx
   140019927:	jne    0x14001992e
   140019929:	mov    BYTE PTR [r9],r10b
   14001992c:	jmp    0x1400198fe
   14001992e:	sub    rcx,r8
   140019931:	mov    al,BYTE PTR [r8]
   140019934:	mov    BYTE PTR [rcx+r8*1],al
   140019938:	inc    r8
   14001993b:	test   al,al
   14001993d:	je     0x140019944
   14001993f:	dec    rdx
   140019942:	jne    0x140019931
   140019944:	test   rdx,rdx
   140019947:	jne    0x140019958
   140019949:	mov    BYTE PTR [r9],r10b
   14001994c:	call   0x14001b864
   140019951:	mov    ebx,0x22
   140019956:	jmp    0x140019908
   140019958:	xor    eax,eax
   14001995a:	jmp    0x140019911
   14001995c:	rex push rbx
   14001995e:	sub    rsp,0x20
   140019962:	xor    ebx,ebx
   140019964:	test   r9,r9
   140019967:	jne    0x140019977
   140019969:	test   rcx,rcx
   14001996c:	jne    0x14001997c
   14001996e:	test   rdx,rdx
   140019971:	jne    0x140019993
   140019973:	xor    eax,eax
   140019975:	jmp    0x1400199a6
   140019977:	test   rcx,rcx
   14001997a:	je     0x140019993
   14001997c:	test   rdx,rdx
   14001997f:	je     0x140019993
   140019981:	test   r9,r9
   140019984:	jne    0x14001998b
   140019986:	mov    WORD PTR [rcx],bx
   140019989:	jmp    0x140019973
   14001998b:	test   r8,r8
   14001998e:	jne    0x1400199ac
   140019990:	mov    WORD PTR [rcx],bx
   140019993:	call   0x14001b864
   140019998:	mov    ebx,0x16
   14001999d:	mov    DWORD PTR [rax],ebx
   14001999f:	call   0x14001ffb8
   1400199a4:	mov    eax,ebx
   1400199a6:	add    rsp,0x20
   1400199aa:	pop    rbx
   1400199ab:	ret    
   1400199ac:	mov    r11,rcx
   1400199af:	mov    r10,rdx
   1400199b2:	cmp    r9,0xffffffffffffffff
   1400199b6:	jne    0x1400199d4
   1400199b8:	sub    r11,r8
   1400199bb:	movzx  eax,WORD PTR [r8]
   1400199bf:	mov    WORD PTR [r11+r8*1],ax
   1400199c4:	lea    r8,[r8+0x2]
   1400199c8:	test   ax,ax
   1400199cb:	je     0x1400199fc
   1400199cd:	dec    r10
   1400199d0:	jne    0x1400199bb
   1400199d2:	jmp    0x1400199fc
   1400199d4:	sub    r8,rcx
   1400199d7:	movzx  eax,WORD PTR [r8+r11*1]
   1400199dc:	mov    WORD PTR [r11],ax
   1400199e0:	lea    r11,[r11+0x2]
   1400199e4:	test   ax,ax
   1400199e7:	je     0x1400199f3
   1400199e9:	dec    r10
   1400199ec:	je     0x1400199f3
   1400199ee:	dec    r9
   1400199f1:	jne    0x1400199d7
   1400199f3:	test   r9,r9
   1400199f6:	jne    0x1400199fc
   1400199f8:	mov    WORD PTR [r11],bx
   1400199fc:	test   r10,r10
   1400199ff:	jne    0x140019973
   140019a05:	cmp    r9,0xffffffffffffffff
   140019a09:	jne    0x140019a16
   140019a0b:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140019a10:	lea    eax,[r10+0x50]
   140019a14:	jmp    0x1400199a6
   140019a16:	mov    WORD PTR [rcx],bx
   140019a19:	call   0x14001b864
   140019a1e:	mov    ebx,0x22
   140019a23:	jmp    0x14001999d
   140019a28:	rex push rbx
   140019a2a:	sub    rsp,0x20
   140019a2e:	mov    rbx,rcx
   140019a31:	call   QWORD PTR [rip+0x15811]        # 0x14002f248
   140019a37:	mov    ecx,0x1
   140019a3c:	mov    DWORD PTR [rip+0x2a2ae],eax        # 0x140043cf0
   140019a42:	call   0x14002020c
   140019a47:	mov    rcx,rbx
   140019a4a:	call   0x14001e17c
   140019a4f:	cmp    DWORD PTR [rip+0x2a29a],0x0        # 0x140043cf0
   140019a56:	jne    0x140019a62
   140019a58:	mov    ecx,0x1
   140019a5d:	call   0x14002020c
   140019a62:	mov    ecx,0xc0000409
   140019a67:	add    rsp,0x20
   140019a6b:	pop    rbx
   140019a6c:	jmp    0x14001e15c
   140019a71:	int3   
   140019a72:	int3   
   140019a73:	int3   
   140019a74:	mov    QWORD PTR [rsp+0x8],rcx
   140019a79:	sub    rsp,0x38
   140019a7d:	mov    ecx,0x17
   140019a82:	call   0x14002cf10
   140019a87:	test   eax,eax
   140019a89:	je     0x140019a92
   140019a8b:	mov    ecx,0x2
   140019a90:	int    0x29
   140019a92:	lea    rcx,[rip+0x29d87]        # 0x140043820
   140019a99:	call   0x14001dbc8
   140019a9e:	mov    rax,QWORD PTR [rsp+0x38]
   140019aa3:	mov    QWORD PTR [rip+0x29e6e],rax        # 0x140043918
   140019aaa:	lea    rax,[rsp+0x38]
   140019aaf:	add    rax,0x8
   140019ab3:	mov    QWORD PTR [rip+0x29dfe],rax        # 0x1400438b8
   140019aba:	mov    rax,QWORD PTR [rip+0x29e57]        # 0x140043918
   140019ac1:	mov    QWORD PTR [rip+0x29cc8],rax        # 0x140043790
   140019ac8:	mov    rax,QWORD PTR [rsp+0x40]
   140019acd:	mov    QWORD PTR [rip+0x29dcc],rax        # 0x1400438a0
   140019ad4:	mov    DWORD PTR [rip+0x29ca2],0xc0000409        # 0x140043780
   140019ade:	mov    DWORD PTR [rip+0x29c9c],0x1        # 0x140043784
   140019ae8:	mov    DWORD PTR [rip+0x29ca6],0x1        # 0x140043798
   140019af2:	mov    eax,0x8
   140019af7:	imul   rax,rax,0x0
   140019afb:	lea    rcx,[rip+0x29c9e]        # 0x1400437a0
   140019b02:	mov    QWORD PTR [rcx+rax*1],0x2
   140019b0a:	mov    eax,0x8
   140019b0f:	imul   rax,rax,0x0
   140019b13:	mov    rcx,QWORD PTR [rip+0x27b36]        # 0x140041650
   140019b1a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140019b1f:	mov    eax,0x8
   140019b24:	imul   rax,rax,0x1
   140019b28:	mov    rcx,QWORD PTR [rip+0x27b29]        # 0x140041658
   140019b2f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140019b34:	lea    rcx,[rip+0x17245]        # 0x140030d80
   140019b3b:	call   0x140019a28
   140019b40:	add    rsp,0x38
   140019b44:	ret    
   140019b45:	int3   
   140019b46:	int3   
   140019b47:	int3   
   140019b48:	sub    rsp,0x28
   140019b4c:	mov    ecx,0x8
   140019b51:	call   0x140019b5c
   140019b56:	add    rsp,0x28
   140019b5a:	ret    
   140019b5b:	int3   
   140019b5c:	mov    DWORD PTR [rsp+0x8],ecx
   140019b60:	sub    rsp,0x28
   140019b64:	mov    ecx,0x17
   140019b69:	call   0x14002cf10
   140019b6e:	test   eax,eax
   140019b70:	je     0x140019b7a
   140019b72:	mov    eax,DWORD PTR [rsp+0x30]
   140019b76:	mov    ecx,eax
   140019b78:	int    0x29
   140019b7a:	lea    rcx,[rip+0x29c9f]        # 0x140043820
   140019b81:	call   0x14001db58
   140019b86:	mov    rax,QWORD PTR [rsp+0x28]
   140019b8b:	mov    QWORD PTR [rip+0x29d86],rax        # 0x140043918
   140019b92:	lea    rax,[rsp+0x28]
   140019b97:	add    rax,0x8
   140019b9b:	mov    QWORD PTR [rip+0x29d16],rax        # 0x1400438b8
   140019ba2:	mov    rax,QWORD PTR [rip+0x29d6f]        # 0x140043918
   140019ba9:	mov    QWORD PTR [rip+0x29be0],rax        # 0x140043790
   140019bb0:	mov    DWORD PTR [rip+0x29bc6],0xc0000409        # 0x140043780
   140019bba:	mov    DWORD PTR [rip+0x29bc0],0x1        # 0x140043784
   140019bc4:	mov    DWORD PTR [rip+0x29bca],0x1        # 0x140043798
   140019bce:	mov    eax,0x8
   140019bd3:	imul   rax,rax,0x0
   140019bd7:	lea    rcx,[rip+0x29bc2]        # 0x1400437a0
   140019bde:	mov    edx,DWORD PTR [rsp+0x30]
   140019be2:	mov    QWORD PTR [rcx+rax*1],rdx
   140019be6:	lea    rcx,[rip+0x17193]        # 0x140030d80
   140019bed:	call   0x140019a28
   140019bf2:	add    rsp,0x28
   140019bf6:	ret    
   140019bf7:	int3   
   140019bf8:	mov    QWORD PTR [rsp+0x8],rbx
   140019bfd:	mov    QWORD PTR [rsp+0x10],rsi
   140019c02:	mov    QWORD PTR [rsp+0x18],rdi
   140019c07:	push   rbp
   140019c08:	push   r14
   140019c0a:	push   r15
   140019c0c:	mov    rbp,rsp
   140019c0f:	sub    rsp,0x50
   140019c13:	xor    ebx,ebx
   140019c15:	mov    r14,r8
   140019c18:	mov    r15,rcx
   140019c1b:	mov    rsi,rdx
   140019c1e:	lea    rcx,[rbp-0x28]
   140019c22:	lea    r8d,[rbx+0x28]
   140019c26:	xor    edx,edx
   140019c28:	mov    rdi,r9
   140019c2b:	mov    QWORD PTR [rbp-0x30],rbx
   140019c2f:	call   0x14001b980
   140019c34:	test   rdi,rdi
   140019c37:	jne    0x140019c4e
   140019c39:	call   0x14001b864
   140019c3e:	mov    DWORD PTR [rax],0x16
   140019c44:	call   0x14001ffb8
   140019c49:	or     eax,0xffffffff
   140019c4c:	jmp    0x140019cc4
   140019c4e:	test   r14,r14
   140019c51:	je     0x140019c58
   140019c53:	test   rsi,rsi
   140019c56:	je     0x140019c39
   140019c58:	mov    r9,QWORD PTR [rbp+0x48]
   140019c5c:	mov    r8,QWORD PTR [rbp+0x40]
   140019c60:	mov    ecx,0x7fffffff
   140019c65:	cmp    r14,rcx
   140019c68:	mov    eax,r14d
   140019c6b:	mov    rdx,rdi
   140019c6e:	cmova  eax,ecx
   140019c71:	lea    rcx,[rbp-0x30]
   140019c75:	mov    DWORD PTR [rbp-0x18],0x42
   140019c7c:	mov    QWORD PTR [rbp-0x20],rsi
   140019c80:	mov    QWORD PTR [rbp-0x30],rsi
   140019c84:	mov    DWORD PTR [rbp-0x28],eax
   140019c87:	call   r15
   140019c8a:	mov    edi,eax
   140019c8c:	test   rsi,rsi
   140019c8f:	je     0x140019cc4
   140019c91:	test   eax,eax
   140019c93:	js     0x140019cb6
   140019c95:	dec    DWORD PTR [rbp-0x28]
   140019c98:	js     0x140019ca2
   140019c9a:	mov    rax,QWORD PTR [rbp-0x30]
   140019c9e:	mov    BYTE PTR [rax],bl
   140019ca0:	jmp    0x140019cb2
   140019ca2:	lea    rdx,[rbp-0x30]
   140019ca6:	xor    ecx,ecx
   140019ca8:	call   0x140020014
   140019cad:	cmp    eax,0xffffffff
   140019cb0:	je     0x140019cb6
   140019cb2:	mov    eax,edi
   140019cb4:	jmp    0x140019cc4
   140019cb6:	cmp    DWORD PTR [rbp-0x28],ebx
   140019cb9:	mov    BYTE PTR [rsi+r14*1-0x1],bl
   140019cbe:	setge  bl
   140019cc1:	lea    eax,[rbx-0x2]
   140019cc4:	lea    r11,[rsp+0x50]
   140019cc9:	mov    rbx,QWORD PTR [r11+0x20]
   140019ccd:	mov    rsi,QWORD PTR [r11+0x28]
   140019cd1:	mov    rdi,QWORD PTR [r11+0x30]
   140019cd5:	mov    rsp,r11
   140019cd8:	pop    r15
   140019cda:	pop    r14
   140019cdc:	pop    rbp
   140019cdd:	ret    
   140019cde:	int3   
   140019cdf:	int3   
   140019ce0:	sub    rsp,0x38
   140019ce4:	mov    rax,QWORD PTR [rsp+0x60]
   140019ce9:	mov    QWORD PTR [rsp+0x28],rax
   140019cee:	and    QWORD PTR [rsp+0x20],0x0
   140019cf4:	call   0x140019d00
   140019cf9:	add    rsp,0x38
   140019cfd:	ret    
   140019cfe:	int3   
   140019cff:	int3   
   140019d00:	mov    rax,rsp
   140019d03:	mov    QWORD PTR [rax+0x8],rbx
   140019d07:	mov    QWORD PTR [rax+0x10],rbp
   140019d0b:	mov    QWORD PTR [rax+0x18],rsi
   140019d0f:	mov    QWORD PTR [rax+0x20],rdi
   140019d13:	push   r14
   140019d15:	sub    rsp,0x30
   140019d19:	mov    rbp,r9
   140019d1c:	mov    rsi,r8
   140019d1f:	mov    rdi,rdx
   140019d22:	mov    rbx,rcx
   140019d25:	test   r9,r9
   140019d28:	je     0x140019e1a
   140019d2e:	test   r8,r8
   140019d31:	jne    0x140019d48
   140019d33:	test   rcx,rcx
   140019d36:	jne    0x140019d51
   140019d38:	test   rdx,rdx
   140019d3b:	jne    0x140019e1a
   140019d41:	xor    eax,eax
   140019d43:	jmp    0x140019e2d
   140019d48:	test   rcx,rcx
   140019d4b:	je     0x140019e1a
   140019d51:	test   rdx,rdx
   140019d54:	je     0x140019e1a
   140019d5a:	cmp    rdx,r8
   140019d5d:	jbe    0x140019dac
   140019d5f:	call   0x14001b864
   140019d64:	lea    r8,[rsi+0x1]
   140019d68:	lea    rcx,[rip+0x64a5]        # 0x140020214
   140019d6f:	mov    edi,DWORD PTR [rax]
   140019d71:	mov    rax,QWORD PTR [rsp+0x68]
   140019d76:	mov    r9,rbp
   140019d79:	mov    QWORD PTR [rsp+0x28],rax
   140019d7e:	mov    rax,QWORD PTR [rsp+0x60]
   140019d83:	mov    rdx,rbx
   140019d86:	mov    QWORD PTR [rsp+0x20],rax
   140019d8b:	call   0x140019bf8
   140019d90:	cmp    eax,0xfffffffe
   140019d93:	jne    0x140019e01
   140019d95:	call   0x14001b864
   140019d9a:	cmp    DWORD PTR [rax],0x22
   140019d9d:	jne    0x140019e2a
   140019da3:	call   0x14001b864
   140019da8:	mov    DWORD PTR [rax],edi
   140019daa:	jmp    0x140019e2a
   140019dac:	call   0x14001b864
   140019db1:	lea    rcx,[rip+0x645c]        # 0x140020214
   140019db8:	mov    r9,rbp
   140019dbb:	mov    r14d,DWORD PTR [rax]
   140019dbe:	mov    rax,QWORD PTR [rsp+0x68]
   140019dc3:	mov    r8,rdi
   140019dc6:	mov    QWORD PTR [rsp+0x28],rax
   140019dcb:	mov    rax,QWORD PTR [rsp+0x60]
   140019dd0:	mov    rdx,rbx
   140019dd3:	mov    QWORD PTR [rsp+0x20],rax
   140019dd8:	call   0x140019bf8
   140019ddd:	mov    BYTE PTR [rbx+rdi*1-0x1],0x0
   140019de2:	cmp    eax,0xfffffffe
   140019de5:	jne    0x140019e01
   140019de7:	cmp    rsi,0xffffffffffffffff
   140019deb:	jne    0x140019e05
   140019ded:	call   0x14001b864
   140019df2:	cmp    DWORD PTR [rax],0x22
   140019df5:	jne    0x140019e2a
   140019df7:	call   0x14001b864
   140019dfc:	mov    DWORD PTR [rax],r14d
   140019dff:	jmp    0x140019e2a
   140019e01:	test   eax,eax
   140019e03:	jns    0x140019e2d
   140019e05:	mov    BYTE PTR [rbx],0x0
   140019e08:	cmp    eax,0xfffffffe
   140019e0b:	jne    0x140019e2a
   140019e0d:	call   0x14001b864
   140019e12:	mov    DWORD PTR [rax],0x22
   140019e18:	jmp    0x140019e25
   140019e1a:	call   0x14001b864
   140019e1f:	mov    DWORD PTR [rax],0x16
   140019e25:	call   0x14001ffb8
   140019e2a:	or     eax,0xffffffff
   140019e2d:	mov    rbx,QWORD PTR [rsp+0x40]
   140019e32:	mov    rbp,QWORD PTR [rsp+0x48]
   140019e37:	mov    rsi,QWORD PTR [rsp+0x50]
   140019e3c:	mov    rdi,QWORD PTR [rsp+0x58]
   140019e41:	add    rsp,0x30
   140019e45:	pop    r14
   140019e47:	ret    
   140019e48:	rex push rbx
   140019e4a:	sub    rsp,0x30
   140019e4e:	mov    rbx,rcx
   140019e51:	test   r8,r8
   140019e54:	je     0x140019e9d
   140019e56:	test   rcx,rcx
   140019e59:	je     0x140019e9d
   140019e5b:	test   rdx,rdx
   140019e5e:	je     0x140019e9d
   140019e60:	mov    rax,QWORD PTR [rsp+0x60]
   140019e65:	mov    QWORD PTR [rsp+0x28],rax
   140019e6a:	mov    QWORD PTR [rsp+0x20],r9
   140019e6f:	mov    r9,r8
   140019e72:	mov    r8,rdx
   140019e75:	mov    rdx,rcx
   140019e78:	lea    rcx,[rip+0x6395]        # 0x140020214
   140019e7f:	call   0x140019bf8
   140019e84:	test   eax,eax
   140019e86:	jns    0x140019e8b
   140019e88:	mov    BYTE PTR [rbx],0x0
   140019e8b:	cmp    eax,0xfffffffe
   140019e8e:	jne    0x140019eb0
   140019e90:	call   0x14001b864
   140019e95:	mov    DWORD PTR [rax],0x22
   140019e9b:	jmp    0x140019ea8
   140019e9d:	call   0x14001b864
   140019ea2:	mov    DWORD PTR [rax],0x16
   140019ea8:	call   0x14001ffb8
   140019ead:	or     eax,0xffffffff
   140019eb0:	add    rsp,0x30
   140019eb4:	pop    rbx
   140019eb5:	ret    
   140019eb6:	int3   
   140019eb7:	int3   
   140019eb8:	rex push rbx
   140019eba:	sub    rsp,0x20
   140019ebe:	xor    ebx,ebx
   140019ec0:	mov    r11,rdx
   140019ec3:	mov    r10,rcx
   140019ec6:	test   r9,r9
   140019ec9:	jne    0x140019ed9
   140019ecb:	test   rcx,rcx
   140019ece:	jne    0x140019ede
   140019ed0:	test   rdx,rdx
   140019ed3:	jne    0x140019eef
   140019ed5:	xor    eax,eax
   140019ed7:	jmp    0x140019f02
   140019ed9:	test   rcx,rcx
   140019edc:	je     0x140019eef
   140019ede:	test   rdx,rdx
   140019ee1:	je     0x140019eef
   140019ee3:	test   r9,r9
   140019ee6:	je     0x140019f08
   140019ee8:	test   r8,r8
   140019eeb:	jne    0x140019f08
   140019eed:	mov    BYTE PTR [rcx],bl
   140019eef:	call   0x14001b864
   140019ef4:	mov    ebx,0x16
   140019ef9:	mov    DWORD PTR [rax],ebx
   140019efb:	call   0x14001ffb8
   140019f00:	mov    eax,ebx
   140019f02:	add    rsp,0x20
   140019f06:	pop    rbx
   140019f07:	ret    
   140019f08:	cmp    BYTE PTR [rcx],bl
   140019f0a:	je     0x140019f14
   140019f0c:	inc    rcx
   140019f0f:	dec    rdx
   140019f12:	jne    0x140019f08
   140019f14:	test   rdx,rdx
   140019f17:	jne    0x140019f1e
   140019f19:	mov    BYTE PTR [r10],bl
   140019f1c:	jmp    0x140019eef
   140019f1e:	cmp    r9,0xffffffffffffffff
   140019f22:	jne    0x140019f3c
   140019f24:	sub    rcx,r8
   140019f27:	mov    al,BYTE PTR [r8]
   140019f2a:	mov    BYTE PTR [rcx+r8*1],al
   140019f2e:	inc    r8
   140019f31:	test   al,al
   140019f33:	je     0x140019f62
   140019f35:	dec    rdx
   140019f38:	jne    0x140019f27
   140019f3a:	jmp    0x140019f62
   140019f3c:	test   r9,r9
   140019f3f:	je     0x140019f60
   140019f41:	sub    r8,rcx
   140019f44:	mov    al,BYTE PTR [r8+rcx*1]
   140019f48:	mov    BYTE PTR [rcx],al
   140019f4a:	inc    rcx
   140019f4d:	test   al,al
   140019f4f:	je     0x140019f5b
   140019f51:	dec    rdx
   140019f54:	je     0x140019f5b
   140019f56:	dec    r9
   140019f59:	jne    0x140019f44
   140019f5b:	test   r9,r9
   140019f5e:	jne    0x140019f62
   140019f60:	mov    BYTE PTR [rcx],bl
   140019f62:	test   rdx,rdx
   140019f65:	jne    0x140019ed5
   140019f6b:	cmp    r9,0xffffffffffffffff
   140019f6f:	jne    0x140019f7b
   140019f71:	mov    BYTE PTR [r10+r11*1-0x1],bl
   140019f76:	lea    eax,[rdx+0x50]
   140019f79:	jmp    0x140019f02
   140019f7b:	mov    BYTE PTR [r10],bl
   140019f7e:	call   0x14001b864
   140019f83:	mov    ebx,0x22
   140019f88:	jmp    0x140019ef9
   140019f8d:	int3   
   140019f8e:	int3   
   140019f8f:	int3   
   140019f90:	rex push rbx
   140019f92:	sub    rsp,0x20
   140019f96:	mov    rbx,rcx
   140019f99:	call   0x14001a02c
   140019f9e:	lea    rax,[rip+0x16e23]        # 0x140030dc8
   140019fa5:	mov    QWORD PTR [rbx],rax
   140019fa8:	mov    rax,rbx
   140019fab:	add    rsp,0x20
   140019faf:	pop    rbx
   140019fb0:	ret    
   140019fb1:	int3   
   140019fb2:	int3   
   140019fb3:	int3   
   140019fb4:	mov    QWORD PTR [rsp+0x10],rdx
   140019fb9:	push   rbx
   140019fba:	sub    rsp,0x20
   140019fbe:	lea    rdx,[rsp+0x38]
   140019fc3:	mov    rbx,rcx
   140019fc6:	call   0x140019fe0
   140019fcb:	lea    rax,[rip+0x16df6]        # 0x140030dc8
   140019fd2:	mov    QWORD PTR [rbx],rax
   140019fd5:	mov    rax,rbx
   140019fd8:	add    rsp,0x20
   140019fdc:	pop    rbx
   140019fdd:	ret    
   140019fde:	int3   
   140019fdf:	int3   
   140019fe0:	rex push rbx
   140019fe2:	sub    rsp,0x20
   140019fe6:	and    QWORD PTR [rcx+0x8],0x0
   140019feb:	lea    rax,[rip+0x16da6]        # 0x140030d98
   140019ff2:	mov    BYTE PTR [rcx+0x10],0x0
   140019ff6:	mov    QWORD PTR [rcx],rax
   140019ff9:	mov    rdx,QWORD PTR [rdx]
   140019ffc:	mov    rbx,rcx
   140019fff:	call   0x14001a0e8
   14001a004:	mov    rax,rbx
   14001a007:	add    rsp,0x20
   14001a00b:	pop    rbx
   14001a00c:	ret    
   14001a00d:	int3   
   14001a00e:	int3   
   14001a00f:	int3   
   14001a010:	lea    rax,[rip+0x16d81]        # 0x140030d98
   14001a017:	mov    QWORD PTR [rcx],rax
   14001a01a:	mov    rax,QWORD PTR [rdx]
   14001a01d:	mov    BYTE PTR [rcx+0x10],0x0
   14001a021:	mov    QWORD PTR [rcx+0x8],rax
   14001a025:	mov    rax,rcx
   14001a028:	ret    
   14001a029:	int3   
   14001a02a:	int3   
   14001a02b:	int3   
   14001a02c:	rex push rbx
   14001a02e:	sub    rsp,0x20
   14001a032:	and    QWORD PTR [rcx+0x8],0x0
   14001a037:	lea    rax,[rip+0x16d5a]        # 0x140030d98
   14001a03e:	mov    rbx,rcx
   14001a041:	mov    QWORD PTR [rcx],rax
   14001a044:	mov    BYTE PTR [rcx+0x10],0x0
   14001a048:	call   0x14001a068
   14001a04d:	mov    rax,rbx
   14001a050:	add    rsp,0x20
   14001a054:	pop    rbx
   14001a055:	ret    
   14001a056:	int3   
   14001a057:	int3   
   14001a058:	lea    rax,[rip+0x16d39]        # 0x140030d98
   14001a05f:	mov    QWORD PTR [rcx],rax
   14001a062:	jmp    0x14001a144
   14001a067:	int3   
   14001a068:	mov    QWORD PTR [rsp+0x8],rbx
   14001a06d:	push   rdi
   14001a06e:	sub    rsp,0x20
   14001a072:	mov    rdi,rdx
   14001a075:	mov    rbx,rcx
   14001a078:	cmp    rcx,rdx
   14001a07b:	je     0x14001a09e
   14001a07d:	call   0x14001a144
   14001a082:	cmp    BYTE PTR [rdi+0x10],0x0
   14001a086:	je     0x14001a096
   14001a088:	mov    rdx,QWORD PTR [rdi+0x8]
   14001a08c:	mov    rcx,rbx
   14001a08f:	call   0x14001a0e8
   14001a094:	jmp    0x14001a09e
   14001a096:	mov    rax,QWORD PTR [rdi+0x8]
   14001a09a:	mov    QWORD PTR [rbx+0x8],rax
   14001a09e:	mov    rax,rbx
   14001a0a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a0a6:	add    rsp,0x20
   14001a0aa:	pop    rdi
   14001a0ab:	ret    
   14001a0ac:	mov    QWORD PTR [rsp+0x8],rbx
   14001a0b1:	push   rdi
   14001a0b2:	sub    rsp,0x20
   14001a0b6:	lea    rax,[rip+0x16cdb]        # 0x140030d98
   14001a0bd:	mov    ebx,edx
   14001a0bf:	mov    rdi,rcx
   14001a0c2:	mov    QWORD PTR [rcx],rax
   14001a0c5:	call   0x14001a144
   14001a0ca:	test   bl,0x1
   14001a0cd:	je     0x14001a0d7
   14001a0cf:	mov    rcx,rdi
   14001a0d2:	call   0x140018a04
   14001a0d7:	mov    rax,rdi
   14001a0da:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a0df:	add    rsp,0x20
   14001a0e3:	pop    rdi
   14001a0e4:	ret    
   14001a0e5:	int3   
   14001a0e6:	int3   
   14001a0e7:	int3   
   14001a0e8:	test   rdx,rdx
   14001a0eb:	je     0x14001a141
   14001a0ed:	mov    QWORD PTR [rsp+0x8],rbx
   14001a0f2:	mov    QWORD PTR [rsp+0x10],rsi
   14001a0f7:	push   rdi
   14001a0f8:	sub    rsp,0x20
   14001a0fc:	mov    rsi,rcx
   14001a0ff:	mov    rcx,rdx
   14001a102:	mov    rbx,rdx
   14001a105:	call   0x14001a580
   14001a10a:	mov    rdi,rax
   14001a10d:	lea    rcx,[rax+0x1]
   14001a111:	call   0x14001adf0
   14001a116:	mov    QWORD PTR [rsi+0x8],rax
   14001a11a:	test   rax,rax
   14001a11d:	je     0x14001a132
   14001a11f:	lea    rdx,[rdi+0x1]
   14001a123:	mov    r8,rbx
   14001a126:	mov    rcx,rax
   14001a129:	call   0x14001987c
   14001a12e:	mov    BYTE PTR [rsi+0x10],0x1
   14001a132:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a137:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a13c:	add    rsp,0x20
   14001a140:	pop    rdi
   14001a141:	ret    
   14001a142:	int3   
   14001a143:	int3   
   14001a144:	rex push rbx
   14001a146:	sub    rsp,0x20
   14001a14a:	cmp    BYTE PTR [rcx+0x10],0x0
   14001a14e:	mov    rbx,rcx
   14001a151:	je     0x14001a15c
   14001a153:	mov    rcx,QWORD PTR [rcx+0x8]
   14001a157:	call   0x14001a1ac
   14001a15c:	and    QWORD PTR [rbx+0x8],0x0
   14001a161:	mov    BYTE PTR [rbx+0x10],0x0
   14001a165:	add    rsp,0x20
   14001a169:	pop    rbx
   14001a16a:	ret    
   14001a16b:	int3   
   14001a16c:	cmp    QWORD PTR [rcx+0x8],0x0
   14001a171:	lea    rax,[rip+0x16c30]        # 0x140030da8
   14001a178:	cmovne rax,QWORD PTR [rcx+0x8]
   14001a17d:	ret    
   14001a17e:	int3   
   14001a17f:	int3   
   14001a180:	sub    rsp,0x28
   14001a184:	mov    rcx,QWORD PTR [rip+0x29e85]        # 0x140044010
   14001a18b:	call   QWORD PTR [rip+0x15097]        # 0x14002f228
   14001a191:	test   rax,rax
   14001a194:	je     0x14001a198
   14001a196:	call   rax
   14001a198:	mov    edx,0x1
   14001a19d:	xor    ecx,ecx
   14001a19f:	call   0x14001d9dc
   14001a1a4:	call   0x14001d9f8
   14001a1a9:	int3   
   14001a1aa:	int3   
   14001a1ab:	int3   
   14001a1ac:	test   rcx,rcx
   14001a1af:	je     0x14001a1e8
   14001a1b1:	push   rbx
   14001a1b2:	sub    rsp,0x20
   14001a1b6:	mov    r8,rcx
   14001a1b9:	mov    rcx,QWORD PTR [rip+0x29e58]        # 0x140044018
   14001a1c0:	xor    edx,edx
   14001a1c2:	call   QWORD PTR [rip+0x15090]        # 0x14002f258
   14001a1c8:	test   eax,eax
   14001a1ca:	jne    0x14001a1e3
   14001a1cc:	call   0x14001b864
   14001a1d1:	mov    rbx,rax
   14001a1d4:	call   QWORD PTR [rip+0x14fc6]        # 0x14002f1a0
   14001a1da:	mov    ecx,eax
   14001a1dc:	call   0x14001b884
   14001a1e1:	mov    DWORD PTR [rbx],eax
   14001a1e3:	add    rsp,0x20
   14001a1e7:	pop    rbx
   14001a1e8:	ret    
   14001a1e9:	int3   
   14001a1ea:	int3   
   14001a1eb:	int3   
   14001a1ec:	sub    rsp,0x28
   14001a1f0:	call   0x14001ef6c
   14001a1f5:	mov    rcx,QWORD PTR [rip+0x27c94]        # 0x140041e90
   14001a1fc:	cmp    QWORD PTR [rax+0xc0],rcx
   14001a203:	je     0x14001a218
   14001a205:	mov    eax,DWORD PTR [rax+0xc8]
   14001a20b:	test   DWORD PTR [rip+0x27de7],eax        # 0x140041ff8
   14001a211:	jne    0x14001a218
   14001a213:	call   0x14001f444
   14001a218:	mov    rax,QWORD PTR [rip+0x27051]        # 0x140041270
   14001a21f:	add    rsp,0x28
   14001a223:	ret    
   14001a224:	mov    rax,rsp
   14001a227:	mov    QWORD PTR [rax+0x10],rbx
   14001a22b:	mov    QWORD PTR [rax+0x20],rsi
   14001a22f:	movsd  QWORD PTR [rax+0x8],xmm0
   14001a234:	push   rdi
   14001a235:	sub    rsp,0x40
   14001a239:	mov    ebx,edx
   14001a23b:	movaps XMMWORD PTR [rax-0x18],xmm6
   14001a23f:	mov    esi,0xffc0
   14001a244:	mov    ecx,0x1f80
   14001a249:	mov    edx,esi
   14001a24b:	movaps xmm6,xmm0
   14001a24e:	call   0x1400219cc
   14001a253:	movzx  ecx,WORD PTR [rsp+0x56]
   14001a258:	mov    rdi,rax
   14001a25b:	mov    eax,0x7ff0
   14001a260:	and    cx,ax
   14001a263:	cmp    cx,ax
   14001a266:	jne    0x14001a2b2
   14001a268:	movaps xmm0,xmm6
   14001a26b:	call   0x140021120
   14001a270:	test   eax,eax
   14001a272:	jle    0x14001a29d
   14001a274:	cmp    eax,0x2
   14001a277:	jle    0x14001a343
   14001a27d:	cmp    eax,0x3
   14001a280:	jne    0x14001a29d
   14001a282:	movd   xmm2,ebx
   14001a286:	lea    ecx,[rax+0x16]
   14001a289:	movaps xmm1,xmm6
   14001a28c:	mov    r9,rdi
   14001a28f:	cvtdq2pd xmm2,xmm2
   14001a293:	call   0x140021540
   14001a298:	jmp    0x14001a388
   14001a29d:	movaps xmm0,xmm6
   14001a2a0:	mov    ecx,0x8
   14001a2a5:	addsd  xmm0,QWORD PTR [rip+0x168ab]        # 0x140030b58
   14001a2ad:	jmp    0x14001a368
   14001a2b2:	ucomisd xmm6,QWORD PTR [rip+0x168be]        # 0x140030b78
   14001a2ba:	jp     0x14001a2c2
   14001a2bc:	je     0x14001a343
   14001a2c2:	lea    rdx,[rsp+0x60]
   14001a2c7:	movaps xmm0,xmm6
   14001a2ca:	call   0x140020fb4
   14001a2cf:	mov    ecx,DWORD PTR [rsp+0x60]
   14001a2d3:	test   ebx,ebx
   14001a2d5:	jns    0x14001a2e4
   14001a2d7:	mov    eax,0x80000000
   14001a2dc:	sub    eax,ebx
   14001a2de:	cmp    ecx,eax
   14001a2e0:	jl     0x14001a317
   14001a2e2:	jmp    0x14001a2ef
   14001a2e4:	mov    eax,0x7fffffff
   14001a2e9:	sub    eax,ebx
   14001a2eb:	cmp    ecx,eax
   14001a2ed:	jg     0x14001a353
   14001a2ef:	lea    edx,[rcx+rbx*1]
   14001a2f2:	cmp    edx,0xa00
   14001a2f8:	jg     0x14001a353
   14001a2fa:	cmp    edx,0x400
   14001a300:	jle    0x14001a30f
   14001a302:	add    edx,0xfffffa00
   14001a308:	call   0x1400210e8
   14001a30d:	jmp    0x14001a363
   14001a30f:	cmp    edx,0xfffff603
   14001a315:	jge    0x14001a326
   14001a317:	mulsd  xmm0,QWORD PTR [rip+0x16859]        # 0x140030b78
   14001a31f:	mov    ecx,0x12
   14001a324:	jmp    0x14001a368
   14001a326:	cmp    edx,0xfffffc03
   14001a32c:	jge    0x14001a33b
   14001a32e:	add    edx,0x600
   14001a334:	call   0x1400210e8
   14001a339:	jmp    0x14001a31f
   14001a33b:	call   0x1400210e8
   14001a340:	movaps xmm6,xmm0
   14001a343:	mov    rdx,rsi
   14001a346:	mov    rcx,rdi
   14001a349:	call   0x1400219cc
   14001a34e:	movaps xmm0,xmm6
   14001a351:	jmp    0x14001a388
   14001a353:	movaps xmm1,xmm0
   14001a356:	movsd  xmm0,QWORD PTR [rip+0x27cb2]        # 0x140042010
   14001a35e:	call   0x140020f7c
   14001a363:	mov    ecx,0x11
   14001a368:	movd   xmm3,ebx
   14001a36c:	movaps xmm2,xmm6
   14001a36f:	mov    edx,0x19
   14001a374:	mov    QWORD PTR [rsp+0x28],rdi
   14001a379:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001a37f:	cvtdq2pd xmm3,xmm3
   14001a383:	call   0x1400211d8
   14001a388:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a38d:	mov    rsi,QWORD PTR [rsp+0x68]
   14001a392:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14001a397:	add    rsp,0x40
   14001a39b:	pop    rdi
   14001a39c:	ret    
   14001a39d:	int3   
   14001a39e:	int3   
   14001a39f:	int3   
   14001a3a0:	sub    rsp,0x28
   14001a3a4:	call   0x1400226e4
   14001a3a9:	add    rsp,0x28
   14001a3ad:	jmp    0x14001a3b4
   14001a3b2:	int3   
   14001a3b3:	int3   
   14001a3b4:	mov    QWORD PTR [rsp+0x10],rbx
   14001a3b9:	mov    QWORD PTR [rsp+0x18],rsi
   14001a3be:	push   rdi
   14001a3bf:	sub    rsp,0x30
   14001a3c3:	call   0x14001dcac
   14001a3c8:	movzx  esi,ax
   14001a3cb:	mov    ecx,0x2
   14001a3d0:	call   0x14002269c
   14001a3d5:	mov    eax,0x5a4d
   14001a3da:	lea    rdi,[rip+0xfffffffffffe5c1f]        # 0x140000000
   14001a3e1:	cmp    WORD PTR [rip+0xfffffffffffe5c18],ax        # 0x140000000
   14001a3e8:	je     0x14001a3ee
   14001a3ea:	xor    ebx,ebx
   14001a3ec:	jmp    0x14001a41f
   14001a3ee:	movsxd rax,DWORD PTR [rip+0xfffffffffffe5c47]        # 0x14000003c
   14001a3f5:	add    rax,rdi
   14001a3f8:	cmp    DWORD PTR [rax],0x4550
   14001a3fe:	jne    0x14001a3ea
   14001a400:	mov    ecx,0x20b
   14001a405:	cmp    WORD PTR [rax+0x18],cx
   14001a409:	jne    0x14001a3ea
   14001a40b:	xor    ebx,ebx
   14001a40d:	cmp    DWORD PTR [rax+0x84],0xe
   14001a414:	jbe    0x14001a41f
   14001a416:	cmp    DWORD PTR [rax+0xf8],ebx
   14001a41c:	setne  bl
   14001a41f:	mov    DWORD PTR [rsp+0x40],ebx
   14001a423:	call   0x140020f5c
   14001a428:	test   eax,eax
   14001a42a:	jne    0x14001a44e
   14001a42c:	cmp    DWORD PTR [rip+0x2a535],0x1        # 0x140044968
   14001a433:	jne    0x14001a43a
   14001a435:	call   0x1400223b8
   14001a43a:	mov    ecx,0x1c
   14001a43f:	call   0x14002242c
   14001a444:	mov    ecx,0xff
   14001a449:	call   0x14001e874
   14001a44e:	call   0x14001f0d8
   14001a453:	test   eax,eax
   14001a455:	jne    0x14001a479
   14001a457:	cmp    DWORD PTR [rip+0x2a50a],0x1        # 0x140044968
   14001a45e:	jne    0x14001a465
   14001a460:	call   0x1400223b8
   14001a465:	mov    ecx,0x10
   14001a46a:	call   0x14002242c
   14001a46f:	mov    ecx,0xff
   14001a474:	call   0x14001e874
   14001a479:	call   0x140022790
   14001a47e:	nop
   14001a47f:	call   0x140021c98
   14001a484:	test   eax,eax
   14001a486:	jns    0x14001a492
   14001a488:	mov    ecx,0x1b
   14001a48d:	call   0x14001a540
   14001a492:	call   QWORD PTR [rip+0x14dc8]        # 0x14002f260
   14001a498:	mov    QWORD PTR [rip+0x2b869],rax        # 0x140045d08
   14001a49f:	call   0x140022800
   14001a4a4:	mov    QWORD PTR [rip+0x29855],rax        # 0x140043d00
   14001a4ab:	call   0x140021fc8
   14001a4b0:	test   eax,eax
   14001a4b2:	jns    0x14001a4be
   14001a4b4:	mov    ecx,0x8
   14001a4b9:	call   0x14001e88c
   14001a4be:	call   0x140022284
   14001a4c3:	test   eax,eax
   14001a4c5:	jns    0x14001a4d1
   14001a4c7:	mov    ecx,0x9
   14001a4cc:	call   0x14001e88c
   14001a4d1:	mov    ecx,0x1
   14001a4d6:	call   0x14001e8d4
   14001a4db:	test   eax,eax
   14001a4dd:	je     0x14001a4e6
   14001a4df:	mov    ecx,eax
   14001a4e1:	call   0x14001e88c
   14001a4e6:	call   0x1400228f4
   14001a4eb:	movzx  r9d,si
   14001a4ef:	mov    r8,rax
   14001a4f2:	xor    edx,edx
   14001a4f4:	mov    rcx,rdi
   14001a4f7:	call   0x14000ae10
   14001a4fc:	mov    edi,eax
   14001a4fe:	mov    DWORD PTR [rsp+0x20],eax
   14001a502:	test   ebx,ebx
   14001a504:	jne    0x14001a50d
   14001a506:	mov    ecx,eax
   14001a508:	call   0x14001ec10
   14001a50d:	call   0x14001e8c4
   14001a512:	jmp    0x14001a52b
   14001a514:	mov    edi,eax
   14001a516:	cmp    DWORD PTR [rsp+0x40],0x0
   14001a51b:	jne    0x14001a525
   14001a51d:	mov    ecx,eax
   14001a51f:	call   0x14001e96c
   14001a524:	int3   
   14001a525:	call   0x14001e8b4
   14001a52a:	nop
   14001a52b:	mov    eax,edi
   14001a52d:	mov    rbx,QWORD PTR [rsp+0x48]
   14001a532:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a537:	add    rsp,0x30
   14001a53b:	pop    rdi
   14001a53c:	ret    
   14001a53d:	int3   
   14001a53e:	int3   
   14001a53f:	int3   
   14001a540:	rex push rbx
   14001a542:	sub    rsp,0x20
   14001a546:	cmp    DWORD PTR [rip+0x2a41b],0x1        # 0x140044968
   14001a54d:	mov    ebx,ecx
   14001a54f:	jne    0x14001a556
   14001a551:	call   0x1400223b8
   14001a556:	mov    ecx,ebx
   14001a558:	call   0x14002242c
   14001a55d:	mov    ecx,0xff
   14001a562:	add    rsp,0x20
   14001a566:	pop    rbx
   14001a567:	jmp    0x14001e874
   14001a56c:	int3   
   14001a56d:	int3   
   14001a56e:	int3   
   14001a56f:	int3   
   14001a570:	int3   
   14001a571:	int3   
   14001a572:	int3   
   14001a573:	int3   
   14001a574:	int3   
   14001a575:	int3   
   14001a576:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001a580:	mov    rax,rcx
   14001a583:	neg    rcx
   14001a586:	test   rax,0x7
   14001a58c:	je     0x14001a59d
   14001a58e:	xchg   ax,ax
   14001a590:	mov    dl,BYTE PTR [rax]
   14001a592:	inc    rax
   14001a595:	test   dl,dl
   14001a597:	je     0x14001a5f8
   14001a599:	test   al,0x7
   14001a59b:	jne    0x14001a590
   14001a59d:	movabs r8,0x7efefefefefefeff
   14001a5a7:	movabs r11,0x8101010101010100
   14001a5b1:	mov    rdx,QWORD PTR [rax]
   14001a5b4:	mov    r9,r8
   14001a5b7:	add    rax,0x8
   14001a5bb:	add    r9,rdx
   14001a5be:	not    rdx
   14001a5c1:	xor    rdx,r9
   14001a5c4:	and    rdx,r11
   14001a5c7:	je     0x14001a5b1
   14001a5c9:	mov    rdx,QWORD PTR [rax-0x8]
   14001a5cd:	test   dl,dl
   14001a5cf:	je     0x14001a622
   14001a5d1:	test   dh,dh
   14001a5d3:	je     0x14001a61c
   14001a5d5:	shr    rdx,0x10
   14001a5d9:	test   dl,dl
   14001a5db:	je     0x14001a616
   14001a5dd:	test   dh,dh
   14001a5df:	je     0x14001a610
   14001a5e1:	shr    rdx,0x10
   14001a5e5:	test   dl,dl
   14001a5e7:	je     0x14001a60a
   14001a5e9:	test   dh,dh
   14001a5eb:	je     0x14001a604
   14001a5ed:	shr    edx,0x10
   14001a5f0:	test   dl,dl
   14001a5f2:	je     0x14001a5fe
   14001a5f4:	test   dh,dh
   14001a5f6:	jne    0x14001a5b1
   14001a5f8:	lea    rax,[rcx+rax*1-0x1]
   14001a5fd:	ret    
   14001a5fe:	lea    rax,[rcx+rax*1-0x2]
   14001a603:	ret    
   14001a604:	lea    rax,[rcx+rax*1-0x3]
   14001a609:	ret    
   14001a60a:	lea    rax,[rcx+rax*1-0x4]
   14001a60f:	ret    
   14001a610:	lea    rax,[rcx+rax*1-0x5]
   14001a615:	ret    
   14001a616:	lea    rax,[rcx+rax*1-0x6]
   14001a61b:	ret    
   14001a61c:	lea    rax,[rcx+rax*1-0x7]
   14001a621:	ret    
   14001a622:	lea    rax,[rcx+rax*1-0x8]
   14001a627:	ret    
   14001a628:	mov    QWORD PTR [rsp+0x10],rbx
   14001a62d:	mov    QWORD PTR [rsp+0x18],rdi
   14001a632:	push   rbp
   14001a633:	mov    rbp,rsp
   14001a636:	sub    rsp,0x60
   14001a63a:	movaps xmm0,XMMWORD PTR [rip+0x1679f]        # 0x140030de0
   14001a641:	movaps xmm1,XMMWORD PTR [rip+0x167a8]        # 0x140030df0
   14001a648:	mov    rbx,rdx
   14001a64b:	mov    rdi,rcx
   14001a64e:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14001a652:	movaps xmm0,XMMWORD PTR [rip+0x167a7]        # 0x140030e00
   14001a659:	movaps XMMWORD PTR [rbp-0x30],xmm1
   14001a65d:	movaps xmm1,XMMWORD PTR [rip+0x167ac]        # 0x140030e10
   14001a664:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14001a668:	movaps XMMWORD PTR [rbp-0x10],xmm1
   14001a66c:	test   rdx,rdx
   14001a66f:	je     0x14001a687
   14001a671:	test   BYTE PTR [rdx],0x10
   14001a674:	je     0x14001a687
   14001a676:	mov    rcx,QWORD PTR [rcx]
   14001a679:	sub    rcx,0x8
   14001a67d:	mov    rax,QWORD PTR [rcx]
   14001a680:	mov    rbx,QWORD PTR [rax+0x30]
   14001a684:	call   QWORD PTR [rax+0x40]
   14001a687:	lea    rdx,[rbp+0x10]
   14001a68b:	mov    rcx,rbx
   14001a68e:	mov    QWORD PTR [rbp-0x18],rdi
   14001a692:	mov    QWORD PTR [rbp-0x10],rbx
   14001a696:	call   QWORD PTR [rip+0x14bcc]        # 0x14002f268
   14001a69c:	mov    rdx,rax
   14001a69f:	mov    QWORD PTR [rbp+0x10],rax
   14001a6a3:	mov    QWORD PTR [rbp-0x8],rax
   14001a6a7:	test   rbx,rbx
   14001a6aa:	je     0x14001a6c7
   14001a6ac:	test   BYTE PTR [rbx],0x8
   14001a6af:	mov    ecx,0x1994000
   14001a6b4:	je     0x14001a6bb
   14001a6b6:	mov    DWORD PTR [rbp-0x20],ecx
   14001a6b9:	jmp    0x14001a6c7
   14001a6bb:	mov    eax,DWORD PTR [rbp-0x20]
   14001a6be:	test   rdx,rdx
   14001a6c1:	cmove  eax,ecx
   14001a6c4:	mov    DWORD PTR [rbp-0x20],eax
   14001a6c7:	mov    r8d,DWORD PTR [rbp-0x28]
   14001a6cb:	mov    edx,DWORD PTR [rbp-0x3c]
   14001a6ce:	mov    ecx,DWORD PTR [rbp-0x40]
   14001a6d1:	lea    r9,[rbp-0x20]
   14001a6d5:	call   QWORD PTR [rip+0x14b25]        # 0x14002f200
   14001a6db:	lea    r11,[rsp+0x60]
   14001a6e0:	mov    rbx,QWORD PTR [r11+0x18]
   14001a6e4:	mov    rdi,QWORD PTR [r11+0x20]
   14001a6e8:	mov    rsp,r11
   14001a6eb:	pop    rbp
   14001a6ec:	ret    
   14001a6ed:	int3   
   14001a6ee:	int3   
   14001a6ef:	int3   
   14001a6f0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a6f5:	mov    QWORD PTR [rsp+0x18],rbp
   14001a6fa:	push   rsi
   14001a6fb:	push   rdi
   14001a6fc:	push   r12
   14001a6fe:	push   r14
   14001a700:	push   r15
   14001a702:	sub    rsp,0x20
   14001a706:	mov    edi,DWORD PTR [r8+0xc]
   14001a70a:	mov    r12,rcx
   14001a70d:	mov    rcx,r8
   14001a710:	mov    rsi,r9
   14001a713:	mov    r14,r8
   14001a716:	mov    r15,rdx
   14001a719:	call   0x140022a0c
   14001a71e:	mov    r10,QWORD PTR [r12]
   14001a722:	mov    QWORD PTR [rsi],r10
   14001a725:	mov    ebp,eax
   14001a727:	test   edi,edi
   14001a729:	je     0x14001a79f
   14001a72b:	movsxd rax,DWORD PTR [r14+0x10]
   14001a72f:	dec    edi
   14001a731:	lea    rdx,[rdi+rdi*4]
   14001a735:	lea    rbx,[rax+rdx*4]
   14001a739:	add    rbx,QWORD PTR [r15+0x8]
   14001a73d:	cmp    ebp,DWORD PTR [rbx+0x4]
   14001a740:	jle    0x14001a727
   14001a742:	cmp    ebp,DWORD PTR [rbx+0x8]
   14001a745:	jg     0x14001a727
   14001a747:	mov    rcx,QWORD PTR [r15]
   14001a74a:	lea    rdx,[rsp+0x50]
   14001a74f:	xor    r8d,r8d
   14001a752:	call   QWORD PTR [rip+0x14b18]        # 0x14002f270
   14001a758:	movsxd r8,DWORD PTR [rbx+0x10]
   14001a75c:	mov    r9d,DWORD PTR [rbx+0xc]
   14001a760:	add    r8,QWORD PTR [rsp+0x50]
   14001a765:	mov    r10d,DWORD PTR [rax]
   14001a768:	xor    ecx,ecx
   14001a76a:	test   r9d,r9d
   14001a76d:	je     0x14001a786
   14001a76f:	lea    rdx,[r8+0xc]
   14001a773:	movsxd rax,DWORD PTR [rdx]
   14001a776:	cmp    rax,r10
   14001a779:	je     0x14001a786
   14001a77b:	inc    ecx
   14001a77d:	add    rdx,0x14
   14001a781:	cmp    ecx,r9d
   14001a784:	jb     0x14001a773
   14001a786:	cmp    ecx,r9d
   14001a789:	jae    0x14001a727
   14001a78b:	mov    rax,QWORD PTR [r12]
   14001a78f:	lea    rcx,[rcx+rcx*4]
   14001a793:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   14001a798:	mov    rcx,QWORD PTR [rcx+rax*1]
   14001a79c:	mov    QWORD PTR [rsi],rcx
   14001a79f:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a7a4:	mov    rbp,QWORD PTR [rsp+0x60]
   14001a7a9:	mov    rax,rsi
   14001a7ac:	add    rsp,0x20
   14001a7b0:	pop    r15
   14001a7b2:	pop    r14
   14001a7b4:	pop    r12
   14001a7b6:	pop    rdi
   14001a7b7:	pop    rsi
   14001a7b8:	ret    
   14001a7b9:	int3   
   14001a7ba:	int3   
   14001a7bb:	int3   
   14001a7bc:	mov    rax,rsp
   14001a7bf:	mov    QWORD PTR [rax+0x8],rbx
   14001a7c3:	mov    QWORD PTR [rax+0x10],rbp
   14001a7c7:	mov    QWORD PTR [rax+0x18],rsi
   14001a7cb:	mov    QWORD PTR [rax+0x20],rdi
   14001a7cf:	push   r12
   14001a7d1:	push   r14
   14001a7d3:	push   r15
   14001a7d5:	sub    rsp,0x20
   14001a7d9:	mov    edi,DWORD PTR [rdx+0xc]
   14001a7dc:	mov    rbp,QWORD PTR [rsp+0x70]
   14001a7e1:	mov    rbx,rdx
   14001a7e4:	mov    rcx,rbx
   14001a7e7:	mov    rdx,rbp
   14001a7ea:	mov    r12d,r9d
   14001a7ed:	xor    esi,esi
   14001a7ef:	call   0x140022a0c
   14001a7f4:	mov    r14d,eax
   14001a7f7:	test   edi,edi
   14001a7f9:	jne    0x14001a800
   14001a7fb:	call   0x140018ff8
   14001a800:	mov    r10,QWORD PTR [rsp+0x68]
   14001a805:	mov    r8,QWORD PTR [rsp+0x60]
   14001a80a:	mov    edx,edi
   14001a80c:	or     DWORD PTR [r10],0xffffffff
   14001a810:	or     DWORD PTR [r8],0xffffffff
   14001a814:	test   edi,edi
   14001a816:	je     0x14001a842
   14001a818:	mov    r11,QWORD PTR [rbp+0x8]
   14001a81c:	movsxd r15,DWORD PTR [rbx+0x10]
   14001a820:	lea    r9d,[rdx-0x1]
   14001a824:	lea    rcx,[r9+r9*4]
   14001a828:	lea    rax,[r11+rcx*4]
   14001a82c:	cmp    r14d,DWORD PTR [rax+r15*1+0x4]
   14001a831:	jle    0x14001a83a
   14001a833:	cmp    r14d,DWORD PTR [rax+r15*1+0x8]
   14001a838:	jle    0x14001a842
   14001a83a:	mov    edx,r9d
   14001a83d:	test   r9d,r9d
   14001a840:	jne    0x14001a820
   14001a842:	test   edx,edx
   14001a844:	je     0x14001a859
   14001a846:	lea    eax,[rdx-0x1]
   14001a849:	lea    rdx,[rax+rax*4]
   14001a84d:	movsxd rax,DWORD PTR [rbx+0x10]
   14001a851:	lea    rsi,[rax+rdx*4]
   14001a855:	add    rsi,QWORD PTR [rbp+0x8]
   14001a859:	xor    edx,edx
   14001a85b:	test   edi,edi
   14001a85d:	je     0x14001a8bf
   14001a85f:	xor    r9d,r9d
   14001a862:	movsxd rcx,DWORD PTR [rbx+0x10]
   14001a866:	add    rcx,r9
   14001a869:	add    rcx,QWORD PTR [rbp+0x8]
   14001a86d:	test   rsi,rsi
   14001a870:	je     0x14001a881
   14001a872:	mov    eax,DWORD PTR [rsi+0x4]
   14001a875:	cmp    DWORD PTR [rcx],eax
   14001a877:	jle    0x14001a89b
   14001a879:	mov    eax,DWORD PTR [rsi+0x8]
   14001a87c:	cmp    DWORD PTR [rcx+0x4],eax
   14001a87f:	jg     0x14001a89b
   14001a881:	cmp    r12d,DWORD PTR [rcx]
   14001a884:	jl     0x14001a89b
   14001a886:	cmp    r12d,DWORD PTR [rcx+0x4]
   14001a88a:	jg     0x14001a89b
   14001a88c:	cmp    DWORD PTR [r8],0xffffffff
   14001a890:	jne    0x14001a895
   14001a892:	mov    DWORD PTR [r8],edx
   14001a895:	lea    eax,[rdx+0x1]
   14001a898:	mov    DWORD PTR [r10],eax
   14001a89b:	inc    edx
   14001a89d:	add    r9,0x14
   14001a8a1:	cmp    edx,edi
   14001a8a3:	jb     0x14001a862
   14001a8a5:	mov    eax,DWORD PTR [r8]
   14001a8a8:	cmp    eax,0xffffffff
   14001a8ab:	je     0x14001a8bf
   14001a8ad:	lea    rcx,[rax+rax*4]
   14001a8b1:	movsxd rax,DWORD PTR [rbx+0x10]
   14001a8b5:	lea    rax,[rax+rcx*4]
   14001a8b9:	add    rax,QWORD PTR [rbp+0x8]
   14001a8bd:	jmp    0x14001a8c9
   14001a8bf:	and    DWORD PTR [r8],0x0
   14001a8c3:	and    DWORD PTR [r10],0x0
   14001a8c7:	xor    eax,eax
   14001a8c9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a8ce:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a8d3:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a8d8:	mov    rdi,QWORD PTR [rsp+0x58]
   14001a8dd:	add    rsp,0x20
   14001a8e1:	pop    r15
   14001a8e3:	pop    r14
   14001a8e5:	pop    r12
   14001a8e7:	ret    
   14001a8e8:	mov    QWORD PTR [rsp+0x8],rbx
   14001a8ed:	mov    QWORD PTR [rsp+0x10],rbp
   14001a8f2:	push   rsi
   14001a8f3:	push   rdi
   14001a8f4:	push   r14
   14001a8f6:	sub    rsp,0x20
   14001a8fa:	lea    r9,[rsp+0x50]
   14001a8ff:	mov    rdi,r8
   14001a902:	mov    rbp,rdx
   14001a905:	call   0x14001a6f0
   14001a90a:	mov    rdx,rbp
   14001a90d:	mov    rcx,rdi
   14001a910:	mov    r14,rax
   14001a913:	call   0x140022a0c
   14001a918:	mov    ebx,DWORD PTR [rdi+0xc]
   14001a91b:	mov    esi,eax
   14001a91d:	jmp    0x14001a946
   14001a91f:	dec    ebx
   14001a921:	call   0x14001ef6c
   14001a926:	lea    rdx,[rbx+rbx*4]
   14001a92a:	mov    rax,QWORD PTR [rax+0x128]
   14001a931:	lea    rcx,[rax+rdx*4]
   14001a935:	movsxd rax,DWORD PTR [rdi+0x10]
   14001a939:	add    rcx,rax
   14001a93c:	cmp    esi,DWORD PTR [rcx+0x4]
   14001a93f:	jle    0x14001a946
   14001a941:	cmp    esi,DWORD PTR [rcx+0x8]
   14001a944:	jle    0x14001a94c
   14001a946:	test   ebx,ebx
   14001a948:	jne    0x14001a91f
   14001a94a:	xor    ecx,ecx
   14001a94c:	test   rcx,rcx
   14001a94f:	jne    0x14001a957
   14001a951:	or     r9d,0xffffffff
   14001a955:	jmp    0x14001a95b
   14001a957:	mov    r9d,DWORD PTR [rcx+0x4]
   14001a95b:	mov    r8,rdi
   14001a95e:	mov    rdx,rbp
   14001a961:	mov    rcx,r14
   14001a964:	call   0x14001d364
   14001a969:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a96e:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a973:	add    rsp,0x20
   14001a977:	pop    r14
   14001a979:	pop    rdi
   14001a97a:	pop    rsi
   14001a97b:	ret    
   14001a97c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a981:	mov    QWORD PTR [rsp+0x10],rbp
   14001a986:	mov    QWORD PTR [rsp+0x18],rsi
   14001a98b:	push   rdi
   14001a98c:	sub    rsp,0x40
   14001a990:	mov    rsi,r9
   14001a993:	mov    rbp,r8
   14001a996:	mov    rbx,rdx
   14001a999:	mov    rdi,rcx
   14001a99c:	call   0x14001ef6c
   14001a9a1:	mov    QWORD PTR [rax+0x138],rbx
   14001a9a8:	mov    rbx,QWORD PTR [rdi]
   14001a9ab:	call   0x14001ef6c
   14001a9b0:	mov    rdx,QWORD PTR [rbx+0x38]
   14001a9b4:	mov    rcx,QWORD PTR [rsp+0x78]
   14001a9b9:	mov    r9,QWORD PTR [rsp+0x70]
   14001a9be:	mov    DWORD PTR [rsp+0x38],0x1
   14001a9c6:	mov    QWORD PTR [rax+0x130],rdx
   14001a9cd:	xor    ebx,ebx
   14001a9cf:	mov    QWORD PTR [rsp+0x30],rbx
   14001a9d4:	mov    DWORD PTR [rsp+0x28],ebx
   14001a9d8:	mov    QWORD PTR [rsp+0x20],rcx
   14001a9dd:	mov    rcx,QWORD PTR [rdi]
   14001a9e0:	mov    r8,rsi
   14001a9e3:	mov    rdx,rbp
   14001a9e6:	call   0x14001d4f8
   14001a9eb:	call   0x14001ef6c
   14001a9f0:	mov    rcx,QWORD PTR [rsp+0x80]
   14001a9f8:	mov    rbp,QWORD PTR [rsp+0x58]
   14001a9fd:	mov    rsi,QWORD PTR [rsp+0x60]
   14001aa02:	mov    QWORD PTR [rax+0x138],rbx
   14001aa09:	lea    eax,[rbx+0x1]
   14001aa0c:	mov    rbx,QWORD PTR [rsp+0x50]
   14001aa11:	mov    DWORD PTR [rcx],0x1
   14001aa17:	add    rsp,0x40
   14001aa1b:	pop    rdi
   14001aa1c:	ret    
   14001aa1d:	int3   
   14001aa1e:	int3   
   14001aa1f:	int3   
   14001aa20:	mov    rax,rsp
   14001aa23:	mov    QWORD PTR [rax+0x20],r9
   14001aa27:	mov    QWORD PTR [rax+0x18],r8
   14001aa2b:	mov    QWORD PTR [rax+0x10],rdx
   14001aa2f:	mov    QWORD PTR [rax+0x8],rcx
   14001aa33:	push   rbx
   14001aa34:	sub    rsp,0x60
   14001aa38:	mov    rbx,rcx
   14001aa3b:	and    DWORD PTR [rax-0x28],0x0
   14001aa3f:	mov    QWORD PTR [rax-0x20],rcx
   14001aa43:	mov    QWORD PTR [rax-0x18],r8
   14001aa47:	call   0x14001ef6c
   14001aa4c:	mov    r8,QWORD PTR [rax+0xe0]
   14001aa53:	lea    rdx,[rsp+0x48]
   14001aa58:	mov    ecx,DWORD PTR [rbx]
   14001aa5a:	call   r8
   14001aa5d:	mov    DWORD PTR [rsp+0x40],0x0
   14001aa65:	jmp    0x14001aa67
   14001aa67:	mov    eax,DWORD PTR [rsp+0x40]
   14001aa6b:	add    rsp,0x60
   14001aa6f:	pop    rbx
   14001aa70:	ret    
   14001aa71:	int3   
   14001aa72:	int3   
   14001aa73:	int3   
   14001aa74:	rex push rbx
   14001aa76:	sub    rsp,0x20
   14001aa7a:	mov    rbx,rcx
   14001aa7d:	mov    QWORD PTR [rcx],rdx
   14001aa80:	call   0x14001ef6c
   14001aa85:	cmp    rbx,QWORD PTR [rax+0x120]
   14001aa8c:	jae    0x14001aa9c
   14001aa8e:	call   0x14001ef6c
   14001aa93:	mov    rcx,QWORD PTR [rax+0x120]
   14001aa9a:	jmp    0x14001aa9e
   14001aa9c:	xor    ecx,ecx
   14001aa9e:	mov    QWORD PTR [rbx+0x8],rcx
   14001aaa2:	call   0x14001ef6c
   14001aaa7:	mov    QWORD PTR [rax+0x120],rbx
   14001aaae:	mov    rax,rbx
   14001aab1:	add    rsp,0x20
   14001aab5:	pop    rbx
   14001aab6:	ret    
   14001aab7:	int3   
   14001aab8:	mov    QWORD PTR [rsp+0x8],rbx
   14001aabd:	push   rdi
   14001aabe:	sub    rsp,0x20
   14001aac2:	mov    rdi,rcx
   14001aac5:	call   0x14001ef6c
   14001aaca:	cmp    rdi,QWORD PTR [rax+0x120]
   14001aad1:	je     0x14001aad8
   14001aad3:	call   0x140018ff8
   14001aad8:	call   0x14001ef6c
   14001aadd:	mov    rbx,QWORD PTR [rax+0x120]
   14001aae4:	jmp    0x14001aaef
   14001aae6:	cmp    rdi,rbx
   14001aae9:	je     0x14001ab04
   14001aaeb:	mov    rbx,QWORD PTR [rbx+0x8]
   14001aaef:	test   rbx,rbx
   14001aaf2:	jne    0x14001aae6
   14001aaf4:	call   0x140018ff8
   14001aaf9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aafe:	add    rsp,0x20
   14001ab02:	pop    rdi
   14001ab03:	ret    
   14001ab04:	call   0x14001ef6c
   14001ab09:	mov    rcx,QWORD PTR [rbx+0x8]
   14001ab0d:	mov    QWORD PTR [rax+0x120],rcx
   14001ab14:	jmp    0x14001aaf9
   14001ab16:	int3   
   14001ab17:	int3   
   14001ab18:	sub    rsp,0x28
   14001ab1c:	call   0x14001ef6c
   14001ab21:	mov    rax,QWORD PTR [rax+0x128]
   14001ab28:	add    rsp,0x28
   14001ab2c:	ret    
   14001ab2d:	int3   
   14001ab2e:	int3   
   14001ab2f:	int3   
   14001ab30:	sub    rsp,0x28
   14001ab34:	call   0x14001ef6c
   14001ab39:	mov    rax,QWORD PTR [rax+0x130]
   14001ab40:	add    rsp,0x28
   14001ab44:	ret    
   14001ab45:	int3   
   14001ab46:	int3   
   14001ab47:	int3   
   14001ab48:	rex push rbx
   14001ab4a:	sub    rsp,0x20
   14001ab4e:	mov    rbx,rcx
   14001ab51:	call   0x14001ef6c
   14001ab56:	mov    rdx,QWORD PTR [rax+0x120]
   14001ab5d:	jmp    0x14001ab68
   14001ab5f:	cmp    QWORD PTR [rdx],rbx
   14001ab62:	je     0x14001ab76
   14001ab64:	mov    rdx,QWORD PTR [rdx+0x8]
   14001ab68:	test   rdx,rdx
   14001ab6b:	jne    0x14001ab5f
   14001ab6d:	lea    eax,[rdx+0x1]
   14001ab70:	add    rsp,0x20
   14001ab74:	pop    rbx
   14001ab75:	ret    
   14001ab76:	xor    eax,eax
   14001ab78:	jmp    0x14001ab70
   14001ab7a:	int3   
   14001ab7b:	int3   
   14001ab7c:	rex push rbx
   14001ab7e:	sub    rsp,0x20
   14001ab82:	mov    rbx,rcx
   14001ab85:	call   0x14001ef6c
   14001ab8a:	mov    QWORD PTR [rax+0x128],rbx
   14001ab91:	add    rsp,0x20
   14001ab95:	pop    rbx
   14001ab96:	ret    
   14001ab97:	int3   
   14001ab98:	rex push rbx
   14001ab9a:	sub    rsp,0x20
   14001ab9e:	mov    rbx,rcx
   14001aba1:	call   0x14001ef6c
   14001aba6:	mov    QWORD PTR [rax+0x130],rbx
   14001abad:	add    rsp,0x20
   14001abb1:	pop    rbx
   14001abb2:	ret    
   14001abb3:	int3   
   14001abb4:	rex push rbp
   14001abb6:	lea    rbp,[rsp-0x4b0]
   14001abbe:	sub    rsp,0x5b0
   14001abc5:	mov    rax,QWORD PTR [rip+0x26a84]        # 0x140041650
   14001abcc:	xor    rax,rsp
   14001abcf:	mov    QWORD PTR [rbp+0x4a0],rax
   14001abd6:	mov    r10,QWORD PTR [rbp+0x4f8]
   14001abdd:	lea    rax,[rip+0x1623c]        # 0x140030e20
   14001abe4:	mov    r11,rcx
   14001abe7:	lea    rcx,[rsp+0x30]
   14001abec:	movups xmm0,XMMWORD PTR [rax]
   14001abef:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001abf3:	movups XMMWORD PTR [rcx],xmm0
   14001abf6:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001abfa:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001abfe:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001ac02:	movups XMMWORD PTR [rcx+0x20],xmm0
   14001ac06:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001ac0a:	movups XMMWORD PTR [rcx+0x30],xmm1
   14001ac0e:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001ac12:	movups XMMWORD PTR [rcx+0x40],xmm0
   14001ac16:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001ac1a:	movups XMMWORD PTR [rcx+0x50],xmm1
   14001ac1e:	movups xmm1,XMMWORD PTR [rax+0x80]
   14001ac25:	movups XMMWORD PTR [rcx+0x60],xmm0
   14001ac29:	movups xmm0,XMMWORD PTR [rax+0x70]
   14001ac2d:	mov    rax,QWORD PTR [rax+0x90]
   14001ac34:	movups XMMWORD PTR [rcx+0x70],xmm0
   14001ac38:	movups XMMWORD PTR [rcx+0x80],xmm1
   14001ac3f:	mov    QWORD PTR [rcx+0x90],rax
   14001ac46:	mov    rcx,QWORD PTR [r11]
   14001ac49:	lea    rax,[rip+0x24bc]        # 0x14001d10c
   14001ac50:	mov    QWORD PTR [rsp+0x50],rax
   14001ac55:	mov    rax,QWORD PTR [rbp+0x4e0]
   14001ac5c:	mov    QWORD PTR [rbp-0x80],rdx
   14001ac60:	mov    rdx,QWORD PTR [r10]
   14001ac63:	mov    QWORD PTR [rsp+0x60],rax
   14001ac68:	movsxd rax,DWORD PTR [rbp+0x4e8]
   14001ac6f:	mov    QWORD PTR [rsp+0x68],rax
   14001ac74:	mov    rax,QWORD PTR [rbp+0x4f0]
   14001ac7b:	mov    QWORD PTR [rsp+0x70],r8
   14001ac80:	mov    QWORD PTR [rsp+0x78],rax
   14001ac85:	movzx  eax,BYTE PTR [rbp+0x500]
   14001ac8c:	mov    QWORD PTR [rsp+0x58],r9
   14001ac91:	mov    QWORD PTR [rbp-0x78],rax
   14001ac95:	mov    rax,QWORD PTR [r10+0x40]
   14001ac99:	lea    r8,[rsp+0x30]
   14001ac9e:	mov    QWORD PTR [rsp+0x28],rax
   14001aca3:	lea    rax,[rbp-0x30]
   14001aca7:	xor    r9d,r9d
   14001acaa:	mov    QWORD PTR [rsp+0x20],rax
   14001acaf:	mov    QWORD PTR [rbp-0x70],0x19930520
   14001acb7:	call   QWORD PTR [rip+0x145bb]        # 0x14002f278
   14001acbd:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14001acc4:	xor    rcx,rsp
   14001acc7:	call   0x1400187d0
   14001accc:	add    rsp,0x5b0
   14001acd3:	pop    rbp
   14001acd4:	ret    
   14001acd5:	int3   
   14001acd6:	int3   
   14001acd7:	int3   
   14001acd8:	mov    QWORD PTR [rsp+0x10],rbx
   14001acdd:	mov    QWORD PTR [rsp+0x18],rsi
   14001ace2:	push   rdi
   14001ace3:	sub    rsp,0x40
   14001ace7:	mov    rbx,r9
   14001acea:	mov    rdi,r8
   14001aced:	mov    rsi,rcx
   14001acf0:	mov    QWORD PTR [rsp+0x50],rdx
   14001acf5:	call   0x14001ef6c
   14001acfa:	mov    rdx,QWORD PTR [rbx+0x8]
   14001acfe:	mov    QWORD PTR [rax+0x128],rdx
   14001ad05:	call   0x14001ef6c
   14001ad0a:	mov    rdx,QWORD PTR [rsi+0x38]
   14001ad0e:	mov    QWORD PTR [rax+0x130],rdx
   14001ad15:	call   0x14001ef6c
   14001ad1a:	mov    rdx,QWORD PTR [rbx+0x38]
   14001ad1e:	mov    r8d,DWORD PTR [rdx]
   14001ad21:	lea    rdx,[rsp+0x50]
   14001ad26:	mov    r9,rbx
   14001ad29:	add    r8,QWORD PTR [rax+0x128]
   14001ad30:	xor    eax,eax
   14001ad32:	mov    rcx,rsi
   14001ad35:	mov    DWORD PTR [rsp+0x38],eax
   14001ad39:	mov    QWORD PTR [rsp+0x30],rax
   14001ad3e:	mov    DWORD PTR [rsp+0x28],eax
   14001ad42:	mov    QWORD PTR [rsp+0x20],r8
   14001ad47:	mov    r8,rdi
   14001ad4a:	call   0x14001d4f8
   14001ad4f:	mov    rbx,QWORD PTR [rsp+0x58]
   14001ad54:	mov    rsi,QWORD PTR [rsp+0x60]
   14001ad59:	add    rsp,0x40
   14001ad5d:	pop    rdi
   14001ad5e:	ret    
   14001ad5f:	int3   
   14001ad60:	jmp    0x14001ad68
   14001ad65:	int3   
   14001ad66:	int3   
   14001ad67:	int3   
   14001ad68:	lea    rax,[rip+0x87e5]        # 0x140023554
   14001ad6f:	lea    rcx,[rip+0x7d2a]        # 0x140022aa0
   14001ad76:	mov    QWORD PTR [rip+0x2750b],rax        # 0x140042288
   14001ad7d:	lea    rax,[rip+0x8870]        # 0x1400235f4
   14001ad84:	mov    QWORD PTR [rip+0x274f5],rcx        # 0x140042280
   14001ad8b:	mov    QWORD PTR [rip+0x274fe],rax        # 0x140042290
   14001ad92:	lea    rax,[rip+0x88a3]        # 0x14002363c
   14001ad99:	mov    QWORD PTR [rip+0x27508],rcx        # 0x1400422a8
   14001ada0:	mov    QWORD PTR [rip+0x274f1],rax        # 0x140042298
   14001ada7:	lea    rax,[rip+0x8916]        # 0x1400236c4
   14001adae:	mov    QWORD PTR [rip+0x274eb],rax        # 0x1400422a0
   14001adb5:	lea    rax,[rip+0x7d08]        # 0x140022ac4
   14001adbc:	mov    QWORD PTR [rip+0x274ed],rax        # 0x1400422b0
   14001adc3:	lea    rax,[rip+0x8832]        # 0x1400235fc
   14001adca:	mov    QWORD PTR [rip+0x274e7],rax        # 0x1400422b8
   14001add1:	lea    rax,[rip+0x8784]        # 0x14002355c
   14001add8:	mov    QWORD PTR [rip+0x274e1],rax        # 0x1400422c0
   14001addf:	lea    rax,[rip+0x885e]        # 0x140023644
   14001ade6:	mov    QWORD PTR [rip+0x274db],rax        # 0x1400422c8
   14001aded:	ret    
   14001adee:	int3   
   14001adef:	int3   
   14001adf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001adf5:	mov    QWORD PTR [rsp+0x10],rsi
   14001adfa:	push   rdi
   14001adfb:	sub    rsp,0x20
   14001adff:	mov    rbx,rcx
   14001ae02:	cmp    rcx,0xffffffffffffffe0
   14001ae06:	ja     0x14001ae84
   14001ae08:	mov    edi,0x1
   14001ae0d:	test   rcx,rcx
   14001ae10:	cmovne rdi,rcx
   14001ae14:	mov    rcx,QWORD PTR [rip+0x291fd]        # 0x140044018
   14001ae1b:	test   rcx,rcx
   14001ae1e:	jne    0x14001ae40
   14001ae20:	call   0x1400223b8
   14001ae25:	mov    ecx,0x1e
   14001ae2a:	call   0x14002242c
   14001ae2f:	mov    ecx,0xff
   14001ae34:	call   0x14001e874
   14001ae39:	mov    rcx,QWORD PTR [rip+0x291d8]        # 0x140044018
   14001ae40:	mov    r8,rdi
   14001ae43:	xor    edx,edx
   14001ae45:	call   QWORD PTR [rip+0x14435]        # 0x14002f280
   14001ae4b:	mov    rsi,rax
   14001ae4e:	test   rax,rax
   14001ae51:	jne    0x14001ae7f
   14001ae53:	cmp    DWORD PTR [rip+0x29b13],eax        # 0x14004496c
   14001ae59:	je     0x14001ae69
   14001ae5b:	mov    rcx,rbx
   14001ae5e:	call   0x14001ec58
   14001ae63:	test   eax,eax
   14001ae65:	je     0x14001ae74
   14001ae67:	jmp    0x14001ae14
   14001ae69:	call   0x14001b864
   14001ae6e:	mov    DWORD PTR [rax],0xc
   14001ae74:	call   0x14001b864
   14001ae79:	mov    DWORD PTR [rax],0xc
   14001ae7f:	mov    rax,rsi
   14001ae82:	jmp    0x14001ae96
   14001ae84:	call   0x14001ec58
   14001ae89:	call   0x14001b864
   14001ae8e:	mov    DWORD PTR [rax],0xc
   14001ae94:	xor    eax,eax
   14001ae96:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ae9b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001aea0:	add    rsp,0x20
   14001aea4:	pop    rdi
   14001aea5:	ret    
   14001aea6:	int3   
   14001aea7:	int3   
   14001aea8:	mov    rax,rsp
   14001aeab:	mov    QWORD PTR [rax+0x8],rbx
   14001aeaf:	mov    QWORD PTR [rax+0x18],rsi
   14001aeb3:	mov    QWORD PTR [rax+0x20],rdi
   14001aeb7:	push   r12
   14001aeb9:	push   r13
   14001aebb:	push   r15
   14001aebd:	sub    rsp,0x40
   14001aec1:	mov    rdi,rdx
   14001aec4:	movsxd r12,ecx
   14001aec7:	xor    r15d,r15d
   14001aeca:	mov    QWORD PTR [rax+0x10],r15
   14001aece:	mov    ebx,r15d
   14001aed1:	test   rdx,rdx
   14001aed4:	je     0x14001af74
   14001aeda:	mov    QWORD PTR [rax-0x38],0x7fffffff
   14001aee2:	mov    r9,rdx
   14001aee5:	xor    r8d,r8d
   14001aee8:	xor    edx,edx
   14001aeea:	lea    rcx,[rax+0x10]
   14001aeee:	call   0x140024b2c
   14001aef3:	cmp    eax,0x16
   14001aef6:	je     0x14001af5f
   14001aef8:	cmp    eax,0x22
   14001aefb:	je     0x14001af5f
   14001aefd:	lea    edx,[r15+0x2]
   14001af01:	mov    rcx,QWORD PTR [rsp+0x68]
   14001af06:	call   0x14001c1dc
   14001af0b:	mov    rbx,rax
   14001af0e:	test   rax,rax
   14001af11:	jne    0x14001af1a
   14001af13:	xor    eax,eax
   14001af15:	jmp    0x14001b0d0
   14001af1a:	or     QWORD PTR [rsp+0x20],0xffffffffffffffff
   14001af20:	mov    r9,rdi
   14001af23:	mov    r8,QWORD PTR [rsp+0x68]
   14001af28:	mov    rdx,rax
   14001af2b:	xor    ecx,ecx
   14001af2d:	call   0x140024b2c
   14001af32:	cmp    eax,0x16
   14001af35:	je     0x14001af4a
   14001af37:	cmp    eax,0x22
   14001af3a:	je     0x14001af4a
   14001af3c:	test   eax,eax
   14001af3e:	je     0x14001af74
   14001af40:	mov    rcx,rbx
   14001af43:	call   0x14001a1ac
   14001af48:	jmp    0x14001af13
   14001af4a:	mov    QWORD PTR [rsp+0x20],r15
   14001af4f:	xor    r9d,r9d
   14001af52:	xor    r8d,r8d
   14001af55:	xor    edx,edx
   14001af57:	xor    ecx,ecx
   14001af59:	call   0x14001ffd8
   14001af5e:	int3   
   14001af5f:	mov    QWORD PTR [rsp+0x20],r15
   14001af64:	xor    r9d,r9d
   14001af67:	xor    r8d,r8d
   14001af6a:	xor    edx,edx
   14001af6c:	xor    ecx,ecx
   14001af6e:	call   0x14001ffd8
   14001af73:	int3   
   14001af74:	mov    rdx,rbx
   14001af77:	mov    ecx,r12d
   14001af7a:	call   0x140023f34
   14001af7f:	mov    rdi,rax
   14001af82:	mov    rcx,rbx
   14001af85:	call   0x14001a1ac
   14001af8a:	test   rdi,rdi
   14001af8d:	je     0x14001af13
   14001af8f:	call   0x14001ef6c
   14001af94:	mov    r13,rax
   14001af97:	mov    rcx,QWORD PTR [rax+0xc0]
   14001af9e:	mov    QWORD PTR [rsp+0x30],rcx
   14001afa3:	mov    rcx,QWORD PTR [rax+0xb8]
   14001afaa:	mov    QWORD PTR [rsp+0x38],rcx
   14001afaf:	mov    QWORD PTR [rsp+0x68],r15
   14001afb4:	lea    rax,[rsp+0x30]
   14001afb9:	mov    QWORD PTR [rsp+0x28],rax
   14001afbe:	mov    QWORD PTR [rsp+0x20],r15
   14001afc3:	mov    r9,rdi
   14001afc6:	xor    r8d,r8d
   14001afc9:	xor    edx,edx
   14001afcb:	lea    rcx,[rsp+0x68]
   14001afd0:	call   0x140019504
   14001afd5:	cmp    eax,0x16
   14001afd8:	je     0x14001b0e8
   14001afde:	cmp    eax,0x22
   14001afe1:	je     0x14001b0e8
   14001afe7:	test   eax,eax
   14001afe9:	jne    0x14001af13
   14001afef:	mov    rcx,QWORD PTR [rsp+0x68]
   14001aff4:	add    rcx,0x4
   14001aff8:	call   0x14001c25c
   14001affd:	mov    rsi,rax
   14001b000:	test   rax,rax
   14001b003:	je     0x14001af13
   14001b009:	lea    r15,[rax+0x4]
   14001b00d:	lea    rax,[rsp+0x30]
   14001b012:	mov    QWORD PTR [rsp+0x28],rax
   14001b017:	or     QWORD PTR [rsp+0x20],0xffffffffffffffff
   14001b01d:	mov    r9,rdi
   14001b020:	mov    r8,QWORD PTR [rsp+0x68]
   14001b025:	mov    rdx,r15
   14001b028:	xor    ecx,ecx
   14001b02a:	call   0x140019504
   14001b02f:	cmp    eax,0x16
   14001b032:	je     0x14001b0d2
   14001b038:	cmp    eax,0x22
   14001b03b:	je     0x14001b0d2
   14001b041:	test   eax,eax
   14001b043:	je     0x14001b04d
   14001b045:	mov    rcx,rsi
   14001b048:	jmp    0x14001af43
   14001b04d:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b052:	mov    ecx,0xc
   14001b057:	call   0x14001b118
   14001b05c:	nop
   14001b05d:	mov    rbx,r12
   14001b060:	shl    rbx,0x5
   14001b064:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   14001b069:	test   rcx,rcx
   14001b06c:	je     0x14001b083
   14001b06e:	or     eax,0xffffffff
   14001b071:	lock xadd DWORD PTR [rcx],eax
   14001b075:	dec    eax
   14001b077:	jne    0x14001b083
   14001b079:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   14001b07e:	call   0x14001a1ac
   14001b083:	test   BYTE PTR [r13+0xc8],0x2
   14001b08b:	jne    0x14001b0b5
   14001b08d:	test   BYTE PTR [rip+0x26f64],0x1        # 0x140041ff8
   14001b094:	jne    0x14001b0b5
   14001b096:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   14001b09b:	test   rcx,rcx
   14001b09e:	je     0x14001b0b5
   14001b0a0:	or     eax,0xffffffff
   14001b0a3:	lock xadd DWORD PTR [rcx],eax
   14001b0a7:	dec    eax
   14001b0a9:	jne    0x14001b0b5
   14001b0ab:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   14001b0b0:	call   0x14001a1ac
   14001b0b5:	mov    edx,DWORD PTR [rdi]
   14001b0b7:	mov    DWORD PTR [rsi],edx
   14001b0b9:	mov    QWORD PTR [rbx+rdi*1+0x20],rsi
   14001b0be:	mov    QWORD PTR [rbx+rdi*1+0x10],r15
   14001b0c3:	mov    ecx,0xc
   14001b0c8:	call   0x14001b308
   14001b0cd:	mov    rax,r15
   14001b0d0:	jmp    0x14001b0fd
   14001b0d2:	and    QWORD PTR [rsp+0x20],0x0
   14001b0d8:	xor    r9d,r9d
   14001b0db:	xor    r8d,r8d
   14001b0de:	xor    edx,edx
   14001b0e0:	xor    ecx,ecx
   14001b0e2:	call   0x14001ffd8
   14001b0e7:	int3   
   14001b0e8:	mov    QWORD PTR [rsp+0x20],r15
   14001b0ed:	xor    r9d,r9d
   14001b0f0:	xor    r8d,r8d
   14001b0f3:	xor    edx,edx
   14001b0f5:	xor    ecx,ecx
   14001b0f7:	call   0x14001ffd8
   14001b0fc:	int3   
   14001b0fd:	mov    rbx,QWORD PTR [rsp+0x60]
   14001b102:	mov    rsi,QWORD PTR [rsp+0x70]
   14001b107:	mov    rdi,QWORD PTR [rsp+0x78]
   14001b10c:	add    rsp,0x40
   14001b110:	pop    r15
   14001b112:	pop    r13
   14001b114:	pop    r12
   14001b116:	ret    
   14001b117:	int3   
   14001b118:	mov    QWORD PTR [rsp+0x8],rbx
   14001b11d:	push   rdi
   14001b11e:	sub    rsp,0x20
   14001b122:	movsxd rbx,ecx
   14001b125:	lea    rdi,[rip+0x26164]        # 0x140041290
   14001b12c:	add    rbx,rbx
   14001b12f:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14001b134:	jne    0x14001b147
   14001b136:	call   0x14001b1e4
   14001b13b:	test   eax,eax
   14001b13d:	jne    0x14001b147
   14001b13f:	lea    ecx,[rax+0x11]
   14001b142:	call   0x14001e88c
   14001b147:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14001b14b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b150:	add    rsp,0x20
   14001b154:	pop    rdi
   14001b155:	rex.W jmp QWORD PTR [rip+0x140d4]        # 0x14002f230
   14001b15c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b161:	mov    QWORD PTR [rsp+0x10],rbp
   14001b166:	mov    QWORD PTR [rsp+0x18],rsi
   14001b16b:	push   rdi
   14001b16c:	sub    rsp,0x20
   14001b170:	mov    edi,0x24
   14001b175:	lea    rbx,[rip+0x26114]        # 0x140041290
   14001b17c:	mov    ebp,edi
   14001b17e:	mov    rsi,QWORD PTR [rbx]
   14001b181:	test   rsi,rsi
   14001b184:	je     0x14001b1a1
   14001b186:	cmp    DWORD PTR [rbx+0x8],0x1
   14001b18a:	je     0x14001b1a1
   14001b18c:	mov    rcx,rsi
   14001b18f:	call   QWORD PTR [rip+0x140ab]        # 0x14002f240
   14001b195:	mov    rcx,rsi
   14001b198:	call   0x14001a1ac
   14001b19d:	and    QWORD PTR [rbx],0x0
   14001b1a1:	add    rbx,0x10
   14001b1a5:	dec    rbp
   14001b1a8:	jne    0x14001b17e
   14001b1aa:	lea    rbx,[rip+0x260e7]        # 0x140041298
   14001b1b1:	mov    rcx,QWORD PTR [rbx-0x8]
   14001b1b5:	test   rcx,rcx
   14001b1b8:	je     0x14001b1c5
   14001b1ba:	cmp    DWORD PTR [rbx],0x1
   14001b1bd:	jne    0x14001b1c5
   14001b1bf:	call   QWORD PTR [rip+0x1407b]        # 0x14002f240
   14001b1c5:	add    rbx,0x10
   14001b1c9:	dec    rdi
   14001b1cc:	jne    0x14001b1b1
   14001b1ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b1d3:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b1d8:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b1dd:	add    rsp,0x20
   14001b1e1:	pop    rdi
   14001b1e2:	ret    
   14001b1e3:	int3   
   14001b1e4:	mov    QWORD PTR [rsp+0x8],rbx
   14001b1e9:	mov    QWORD PTR [rsp+0x10],rdi
   14001b1ee:	push   r14
   14001b1f0:	sub    rsp,0x20
   14001b1f4:	movsxd rbx,ecx
   14001b1f7:	cmp    QWORD PTR [rip+0x28e19],0x0        # 0x140044018
   14001b1ff:	jne    0x14001b21a
   14001b201:	call   0x1400223b8
   14001b206:	mov    ecx,0x1e
   14001b20b:	call   0x14002242c
   14001b210:	mov    ecx,0xff
   14001b215:	call   0x14001e874
   14001b21a:	add    rbx,rbx
   14001b21d:	lea    r14,[rip+0x2606c]        # 0x140041290
   14001b224:	cmp    QWORD PTR [r14+rbx*8],0x0
   14001b229:	je     0x14001b232
   14001b22b:	mov    eax,0x1
   14001b230:	jmp    0x14001b290
   14001b232:	mov    ecx,0x28
   14001b237:	call   0x14001c25c
   14001b23c:	mov    rdi,rax
   14001b23f:	test   rax,rax
   14001b242:	jne    0x14001b253
   14001b244:	call   0x14001b864
   14001b249:	mov    DWORD PTR [rax],0xc
   14001b24f:	xor    eax,eax
   14001b251:	jmp    0x14001b290
   14001b253:	mov    ecx,0xa
   14001b258:	call   0x14001b118
   14001b25d:	nop
   14001b25e:	mov    rcx,rdi
   14001b261:	cmp    QWORD PTR [r14+rbx*8],0x0
   14001b266:	jne    0x14001b27b
   14001b268:	xor    r8d,r8d
   14001b26b:	mov    edx,0xfa0
   14001b270:	call   0x14001dcd8
   14001b275:	mov    QWORD PTR [r14+rbx*8],rdi
   14001b279:	jmp    0x14001b281
   14001b27b:	call   0x14001a1ac
   14001b280:	nop
   14001b281:	mov    rcx,QWORD PTR [rip+0x260a8]        # 0x140041330
   14001b288:	call   QWORD PTR [rip+0x13faa]        # 0x14002f238
   14001b28e:	jmp    0x14001b22b
   14001b290:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b295:	mov    rdi,QWORD PTR [rsp+0x38]
   14001b29a:	add    rsp,0x20
   14001b29e:	pop    r14
   14001b2a0:	ret    
   14001b2a1:	int3   
   14001b2a2:	int3   
   14001b2a3:	int3   
   14001b2a4:	mov    QWORD PTR [rsp+0x8],rbx
   14001b2a9:	mov    QWORD PTR [rsp+0x10],rsi
   14001b2ae:	push   rdi
   14001b2af:	sub    rsp,0x20
   14001b2b3:	xor    esi,esi
   14001b2b5:	lea    rbx,[rip+0x25fd4]        # 0x140041290
   14001b2bc:	lea    edi,[rsi+0x24]
   14001b2bf:	cmp    DWORD PTR [rbx+0x8],0x1
   14001b2c3:	jne    0x14001b2e9
   14001b2c5:	movsxd rax,esi
   14001b2c8:	lea    rdx,[rip+0x28a51]        # 0x140043d20
   14001b2cf:	xor    r8d,r8d
   14001b2d2:	lea    rcx,[rax+rax*4]
   14001b2d6:	inc    esi
   14001b2d8:	lea    rcx,[rdx+rcx*8]
   14001b2dc:	mov    edx,0xfa0
   14001b2e1:	mov    QWORD PTR [rbx],rcx
   14001b2e4:	call   0x14001dcd8
   14001b2e9:	add    rbx,0x10
   14001b2ed:	dec    rdi
   14001b2f0:	jne    0x14001b2bf
   14001b2f2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b2f7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b2fc:	lea    eax,[rdi+0x1]
   14001b2ff:	add    rsp,0x20
   14001b303:	pop    rdi
   14001b304:	ret    
   14001b305:	int3   
   14001b306:	int3   
   14001b307:	int3   
   14001b308:	movsxd rcx,ecx
   14001b30b:	lea    rax,[rip+0x25f7e]        # 0x140041290
   14001b312:	add    rcx,rcx
   14001b315:	mov    rcx,QWORD PTR [rax+rcx*8]
   14001b319:	rex.W jmp QWORD PTR [rip+0x13f18]        # 0x14002f238
   14001b320:	sub    rsp,0x28
   14001b324:	call   0x14001ef6c
   14001b329:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b330:	cmp    rcx,QWORD PTR [rip+0x26b59]        # 0x140041e90
   14001b337:	je     0x14001b34f
   14001b339:	mov    eax,DWORD PTR [rax+0xc8]
   14001b33f:	test   DWORD PTR [rip+0x26cb3],eax        # 0x140041ff8
   14001b345:	jne    0x14001b34f
   14001b347:	call   0x14001f444
   14001b34c:	mov    rcx,rax
   14001b34f:	mov    eax,DWORD PTR [rcx+0x4]
   14001b352:	add    rsp,0x28
   14001b356:	ret    
   14001b357:	int3   
   14001b358:	sub    rsp,0x28
   14001b35c:	call   0x14001ef6c
   14001b361:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b368:	cmp    rcx,QWORD PTR [rip+0x26b21]        # 0x140041e90
   14001b36f:	je     0x14001b387
   14001b371:	mov    eax,DWORD PTR [rax+0xc8]
   14001b377:	test   DWORD PTR [rip+0x26c7b],eax        # 0x140041ff8
   14001b37d:	jne    0x14001b387
   14001b37f:	call   0x14001f444
   14001b384:	mov    rcx,rax
   14001b387:	lea    rax,[rcx+0x128]
   14001b38e:	add    rsp,0x28
   14001b392:	ret    
   14001b393:	int3   
   14001b394:	sub    rsp,0x28
   14001b398:	call   0x14001ef6c
   14001b39d:	mov    rcx,QWORD PTR [rax+0xc0]
   14001b3a4:	cmp    rcx,QWORD PTR [rip+0x26ae5]        # 0x140041e90
   14001b3ab:	je     0x14001b3c3
   14001b3ad:	mov    eax,DWORD PTR [rax+0xc8]
   14001b3b3:	test   DWORD PTR [rip+0x26c3f],eax        # 0x140041ff8
   14001b3b9:	jne    0x14001b3c3
   14001b3bb:	call   0x14001f444
   14001b3c0:	mov    rcx,rax
   14001b3c3:	mov    eax,DWORD PTR [rcx+0xd4]
   14001b3c9:	add    rsp,0x28
   14001b3cd:	ret    
   14001b3ce:	int3   
   14001b3cf:	int3   
   14001b3d0:	mov    r11,rsp
   14001b3d3:	mov    QWORD PTR [r11+0x10],rbx
   14001b3d7:	mov    QWORD PTR [r11+0x18],rbp
   14001b3db:	mov    QWORD PTR [r11+0x20],rsi
   14001b3df:	push   rdi
   14001b3e0:	push   r12
   14001b3e2:	push   r13
   14001b3e4:	push   r14
   14001b3e6:	push   r15
   14001b3e8:	sub    rsp,0x90
   14001b3ef:	mov    rax,QWORD PTR [rip+0x2625a]        # 0x140041650
   14001b3f6:	xor    rax,rsp
   14001b3f9:	mov    QWORD PTR [rsp+0x88],rax
   14001b401:	mov    r8,QWORD PTR [rcx+0x138]
   14001b408:	xor    ebx,ebx
   14001b40a:	mov    rdi,rcx
   14001b40d:	mov    QWORD PTR [rsp+0x58],rbx
   14001b412:	mov    r15d,ebx
   14001b415:	mov    r12d,ebx
   14001b418:	mov    r13d,ebx
   14001b41b:	mov    ebp,ebx
   14001b41d:	mov    QWORD PTR [r11-0x58],rcx
   14001b421:	mov    QWORD PTR [r11-0x50],rbx
   14001b425:	test   r8,r8
   14001b428:	je     0x14001b76e
   14001b42e:	lea    r14,[rcx+0x4]
   14001b432:	lea    esi,[rbx+0x1]
   14001b435:	cmp    DWORD PTR [r14],ebx
   14001b438:	jne    0x14001b458
   14001b43a:	lea    rcx,[r11-0x58]
   14001b43e:	xor    edx,edx
   14001b440:	mov    r9d,0x1004
   14001b446:	mov    QWORD PTR [rsp+0x20],r14
   14001b44b:	call   0x140020d6c
   14001b450:	test   eax,eax
   14001b452:	jne    0x14001b73e
   14001b458:	mov    ecx,0x4
   14001b45d:	call   0x14001c25c
   14001b462:	mov    ebp,0x180
   14001b467:	mov    edx,0x2
   14001b46c:	mov    ecx,ebp
   14001b46e:	mov    QWORD PTR [rsp+0x58],rax
   14001b473:	call   0x14001c1dc
   14001b478:	mov    rdx,rsi
   14001b47b:	mov    ecx,ebp
   14001b47d:	mov    r15,rax
   14001b480:	call   0x14001c1dc
   14001b485:	mov    rdx,rsi
   14001b488:	mov    ecx,ebp
   14001b48a:	mov    r12,rax
   14001b48d:	call   0x14001c1dc
   14001b492:	lea    ecx,[rbp-0x7f]
   14001b495:	mov    rdx,rsi
   14001b498:	mov    r13,rax
   14001b49b:	call   0x14001c1dc
   14001b4a0:	mov    rbp,rax
   14001b4a3:	mov    rax,QWORD PTR [rsp+0x58]
   14001b4a8:	test   rax,rax
   14001b4ab:	je     0x14001b73e
   14001b4b1:	test   r15,r15
   14001b4b4:	je     0x14001b73e
   14001b4ba:	test   rbp,rbp
   14001b4bd:	je     0x14001b73e
   14001b4c3:	test   r12,r12
   14001b4c6:	je     0x14001b73e
   14001b4cc:	test   r13,r13
   14001b4cf:	je     0x14001b73e
   14001b4d5:	mov    DWORD PTR [rax],ebx
   14001b4d7:	mov    rcx,rbp
   14001b4da:	mov    eax,ebx
   14001b4dc:	mov    BYTE PTR [rcx],al
   14001b4de:	add    eax,esi
   14001b4e0:	add    rcx,rsi
   14001b4e3:	cmp    eax,0x100
   14001b4e8:	jl     0x14001b4dc
   14001b4ea:	mov    ecx,DWORD PTR [r14]
   14001b4ed:	lea    rdx,[rsp+0x70]
   14001b4f2:	call   QWORD PTR [rip+0x13d90]        # 0x14002f288
   14001b4f8:	test   eax,eax
   14001b4fa:	je     0x14001b73e
   14001b500:	cmp    DWORD PTR [rsp+0x70],0x5
   14001b505:	ja     0x14001b73e
   14001b50b:	movzx  eax,WORD PTR [rsp+0x70]
   14001b510:	mov    rdx,QWORD PTR [rdi+0x138]
   14001b517:	mov    DWORD PTR [rsp+0x40],ebx
   14001b51b:	mov    DWORD PTR [rsp+0x50],eax
   14001b51f:	mov    eax,DWORD PTR [r14]
   14001b522:	lea    rcx,[r12+0x81]
   14001b52a:	mov    DWORD PTR [rsp+0x38],eax
   14001b52e:	mov    eax,0xff
   14001b533:	lea    r9,[rbp+0x1]
   14001b537:	mov    DWORD PTR [rsp+0x30],eax
   14001b53b:	mov    QWORD PTR [rsp+0x28],rcx
   14001b540:	lea    r8d,[rax+0x1]
   14001b544:	xor    ecx,ecx
   14001b546:	mov    DWORD PTR [rsp+0x20],eax
   14001b54a:	call   0x14001c144
   14001b54f:	test   eax,eax
   14001b551:	je     0x14001b73e
   14001b557:	mov    eax,DWORD PTR [r14]
   14001b55a:	mov    rdx,QWORD PTR [rdi+0x138]
   14001b561:	mov    DWORD PTR [rsp+0x40],ebx
   14001b565:	mov    DWORD PTR [rsp+0x38],eax
   14001b569:	mov    eax,0xff
   14001b56e:	lea    rcx,[r13+0x81]
   14001b575:	mov    DWORD PTR [rsp+0x30],eax
   14001b579:	mov    QWORD PTR [rsp+0x28],rcx
   14001b57e:	lea    r9,[rbp+0x1]
   14001b582:	xor    ecx,ecx
   14001b584:	mov    r8d,0x200
   14001b58a:	mov    DWORD PTR [rsp+0x20],eax
   14001b58e:	call   0x14001c144
   14001b593:	test   eax,eax
   14001b595:	je     0x14001b73e
   14001b59b:	cmp    DWORD PTR [rsp+0x50],esi
   14001b59f:	jle    0x14001b5cf
   14001b5a1:	cmp    BYTE PTR [rsp+0x76],bl
   14001b5a5:	je     0x14001b5cf
   14001b5a7:	lea    rcx,[rsp+0x77]
   14001b5ac:	cmp    BYTE PTR [rcx],bl
   14001b5ae:	je     0x14001b5cf
   14001b5b0:	movzx  edx,BYTE PTR [rcx-0x1]
   14001b5b4:	jmp    0x14001b5bf
   14001b5b6:	movsxd rax,edx
   14001b5b9:	add    edx,esi
   14001b5bb:	mov    BYTE PTR [rax+rbp*1],0x20
   14001b5bf:	movzx  eax,BYTE PTR [rcx]
   14001b5c2:	cmp    edx,eax
   14001b5c4:	jle    0x14001b5b6
   14001b5c6:	add    rcx,0x2
   14001b5ca:	cmp    BYTE PTR [rcx-0x1],bl
   14001b5cd:	jne    0x14001b5ac
   14001b5cf:	mov    eax,DWORD PTR [r14]
   14001b5d2:	lea    rcx,[r15+0x100]
   14001b5d9:	mov    DWORD PTR [rsp+0x30],ebx
   14001b5dd:	mov    DWORD PTR [rsp+0x28],eax
   14001b5e1:	mov    QWORD PTR [rsp+0x20],rcx
   14001b5e6:	mov    r9d,0x100
   14001b5ec:	xor    ecx,ecx
   14001b5ee:	mov    r8,rbp
   14001b5f1:	mov    edx,esi
   14001b5f3:	call   0x140024cc4
   14001b5f8:	test   eax,eax
   14001b5fa:	je     0x14001b73e
   14001b600:	lea    r14,[r15+0xfe]
   14001b607:	mov    WORD PTR [r14],bx
   14001b60b:	mov    BYTE PTR [r12+0x7f],bl
   14001b610:	mov    BYTE PTR [r13+0x7f],bl
   14001b614:	mov    BYTE PTR [r12+0x80],bl
   14001b61c:	mov    BYTE PTR [r13+0x80],bl
   14001b623:	cmp    DWORD PTR [rsp+0x50],esi
   14001b627:	jle    0x14001b662
   14001b629:	cmp    BYTE PTR [rsp+0x76],bl
   14001b62d:	je     0x14001b662
   14001b62f:	lea    rcx,[rsp+0x77]
   14001b634:	cmp    BYTE PTR [rcx],bl
   14001b636:	je     0x14001b662
   14001b638:	movzx  edx,BYTE PTR [rcx-0x1]
   14001b63c:	jmp    0x14001b652
   14001b63e:	movsxd rax,edx
   14001b641:	mov    r8d,0x8000
   14001b647:	add    edx,esi
   14001b649:	mov    WORD PTR [r15+rax*2+0x100],r8w
   14001b652:	movzx  eax,BYTE PTR [rcx]
   14001b655:	cmp    edx,eax
   14001b657:	jle    0x14001b63e
   14001b659:	add    rcx,0x2
   14001b65d:	cmp    BYTE PTR [rcx-0x1],bl
   14001b660:	jne    0x14001b634
   14001b662:	lea    rdx,[r15+0x200]
   14001b669:	mov    r8d,0xfe
   14001b66f:	mov    rcx,r15
   14001b672:	call   0x140018a90
   14001b677:	lea    rdx,[r12+0x100]
   14001b67f:	mov    r8d,0x7f
   14001b685:	mov    rcx,r12
   14001b688:	call   0x140018a90
   14001b68d:	lea    rdx,[r13+0x100]
   14001b694:	mov    r8d,0x7f
   14001b69a:	mov    rcx,r13
   14001b69d:	call   0x140018a90
   14001b6a2:	mov    rcx,QWORD PTR [rdi+0xf8]
   14001b6a9:	test   rcx,rcx
   14001b6ac:	je     0x14001b6f2
   14001b6ae:	lock dec DWORD PTR [rcx]
   14001b6b1:	jne    0x14001b6f2
   14001b6b3:	mov    rcx,QWORD PTR [rdi+0x100]
   14001b6ba:	sub    rcx,0xfe
   14001b6c1:	call   0x14001a1ac
   14001b6c6:	mov    rcx,QWORD PTR [rdi+0x110]
   14001b6cd:	add    rcx,0xffffffffffffff80
   14001b6d1:	call   0x14001a1ac
   14001b6d6:	mov    rcx,QWORD PTR [rdi+0x118]
   14001b6dd:	add    rcx,0xffffffffffffff80
   14001b6e1:	call   0x14001a1ac
   14001b6e6:	mov    rcx,QWORD PTR [rdi+0xf8]
   14001b6ed:	call   0x14001a1ac
   14001b6f2:	mov    rax,QWORD PTR [rsp+0x58]
   14001b6f7:	mov    DWORD PTR [rax],esi
   14001b6f9:	mov    QWORD PTR [rdi+0xf8],rax
   14001b700:	lea    rax,[r15+0x100]
   14001b707:	mov    QWORD PTR [rdi+0x108],rax
   14001b70e:	lea    rax,[r12+0x80]
   14001b716:	mov    QWORD PTR [rdi+0x100],r14
   14001b71d:	mov    QWORD PTR [rdi+0x110],rax
   14001b724:	lea    rax,[r13+0x80]
   14001b72b:	mov    QWORD PTR [rdi+0x118],rax
   14001b732:	mov    eax,DWORD PTR [rsp+0x50]
   14001b736:	mov    DWORD PTR [rdi+0xd4],eax
   14001b73c:	jmp    0x14001b762
   14001b73e:	mov    rcx,QWORD PTR [rsp+0x58]
   14001b743:	call   0x14001a1ac
   14001b748:	mov    rcx,r15
   14001b74b:	call   0x14001a1ac
   14001b750:	mov    rcx,r12
   14001b753:	call   0x14001a1ac
   14001b758:	mov    rcx,r13
   14001b75b:	call   0x14001a1ac
   14001b760:	mov    ebx,esi
   14001b762:	mov    rcx,rbp
   14001b765:	call   0x14001a1ac
   14001b76a:	mov    eax,ebx
   14001b76c:	jmp    0x14001b7c2
   14001b76e:	mov    rax,QWORD PTR [rcx+0xf8]
   14001b775:	test   rax,rax
   14001b778:	je     0x14001b77d
   14001b77a:	lock dec DWORD PTR [rax]
   14001b77d:	lea    rax,[rip+0x1583c]        # 0x140030fc0
   14001b784:	mov    esi,0x1
   14001b789:	mov    QWORD PTR [rcx+0xf8],rbx
   14001b790:	mov    QWORD PTR [rcx+0x108],rax
   14001b797:	lea    rax,[rip+0x15cb2]        # 0x140031450
   14001b79e:	mov    QWORD PTR [rcx+0x100],rbx
   14001b7a5:	mov    QWORD PTR [rcx+0x110],rax
   14001b7ac:	lea    rax,[rip+0x15e1d]        # 0x1400315d0
   14001b7b3:	mov    DWORD PTR [rcx+0xd4],esi
   14001b7b9:	mov    QWORD PTR [rcx+0x118],rax
   14001b7c0:	xor    eax,eax
   14001b7c2:	mov    rcx,QWORD PTR [rsp+0x88]
   14001b7ca:	xor    rcx,rsp
   14001b7cd:	call   0x1400187d0
   14001b7d2:	lea    r11,[rsp+0x90]
   14001b7da:	mov    rbx,QWORD PTR [r11+0x38]
   14001b7de:	mov    rbp,QWORD PTR [r11+0x40]
   14001b7e2:	mov    rsi,QWORD PTR [r11+0x48]
   14001b7e6:	mov    rsp,r11
   14001b7e9:	pop    r15
   14001b7eb:	pop    r14
   14001b7ed:	pop    r13
   14001b7ef:	pop    r12
   14001b7f1:	pop    rdi
   14001b7f2:	ret    
   14001b7f3:	int3   
   14001b7f4:	sub    rsp,0x28
   14001b7f8:	call   0x14001ef90
   14001b7fd:	test   rax,rax
   14001b800:	jne    0x14001b80b
   14001b802:	lea    rax,[rip+0x25e33]        # 0x14004163c
   14001b809:	jmp    0x14001b80f
   14001b80b:	add    rax,0x14
   14001b80f:	add    rsp,0x28
   14001b813:	ret    
   14001b814:	mov    QWORD PTR [rsp+0x8],rbx
   14001b819:	push   rdi
   14001b81a:	sub    rsp,0x20
   14001b81e:	mov    edi,ecx
   14001b820:	call   0x14001ef90
   14001b825:	test   rax,rax
   14001b828:	jne    0x14001b833
   14001b82a:	lea    rax,[rip+0x25e0b]        # 0x14004163c
   14001b831:	jmp    0x14001b837
   14001b833:	add    rax,0x14
   14001b837:	mov    DWORD PTR [rax],edi
   14001b839:	call   0x14001ef90
   14001b83e:	lea    rbx,[rip+0x25df3]        # 0x140041638
   14001b845:	test   rax,rax
   14001b848:	je     0x14001b84e
   14001b84a:	lea    rbx,[rax+0x10]
   14001b84e:	mov    ecx,edi
   14001b850:	call   0x14001b884
   14001b855:	mov    DWORD PTR [rbx],eax
   14001b857:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b85c:	add    rsp,0x20
   14001b860:	pop    rdi
   14001b861:	ret    
   14001b862:	int3   
   14001b863:	int3   
   14001b864:	sub    rsp,0x28
   14001b868:	call   0x14001ef90
   14001b86d:	test   rax,rax
   14001b870:	jne    0x14001b87b
   14001b872:	lea    rax,[rip+0x25dbf]        # 0x140041638
   14001b879:	jmp    0x14001b87f
   14001b87b:	add    rax,0x10
   14001b87f:	add    rsp,0x28
   14001b883:	ret    
   14001b884:	lea    r10,[rip+0x25c45]        # 0x1400414d0
   14001b88b:	xor    edx,edx
   14001b88d:	mov    r8,r10
   14001b890:	lea    r9d,[rdx+0x8]
   14001b894:	cmp    ecx,DWORD PTR [r8]
   14001b897:	je     0x14001b8c8
   14001b899:	inc    edx
   14001b89b:	add    r8,r9
   14001b89e:	movsxd rax,edx
   14001b8a1:	cmp    rax,0x2d
   14001b8a5:	jb     0x14001b894
   14001b8a7:	lea    eax,[rcx-0x13]
   14001b8aa:	cmp    eax,0x11
   14001b8ad:	ja     0x14001b8b5
   14001b8af:	mov    eax,0xd
   14001b8b4:	ret    
   14001b8b5:	add    ecx,0xffffff44
   14001b8bb:	mov    eax,0x16
   14001b8c0:	cmp    ecx,0xe
   14001b8c3:	cmovbe eax,r9d
   14001b8c7:	ret    
   14001b8c8:	movsxd rax,edx
   14001b8cb:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   14001b8d0:	ret    
   14001b8d1:	int3   
   14001b8d2:	int3   
   14001b8d3:	int3   
   14001b8d4:	mov    QWORD PTR [rsp+0x8],rbx
   14001b8d9:	mov    QWORD PTR [rsp+0x10],rsi
   14001b8de:	push   rdi
   14001b8df:	sub    rsp,0x40
   14001b8e3:	mov    ebx,edx
   14001b8e5:	mov    rdx,rcx
   14001b8e8:	lea    rcx,[rsp+0x20]
   14001b8ed:	mov    edi,r9d
   14001b8f0:	mov    esi,r8d
   14001b8f3:	call   0x140019058
   14001b8f8:	mov    rax,QWORD PTR [rsp+0x28]
   14001b8fd:	movzx  edx,bl
   14001b900:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14001b905:	jne    0x14001b925
   14001b907:	test   esi,esi
   14001b909:	je     0x14001b91f
   14001b90b:	mov    rax,QWORD PTR [rsp+0x20]
   14001b910:	mov    rcx,QWORD PTR [rax+0x108]
   14001b917:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001b91b:	and    eax,esi
   14001b91d:	jmp    0x14001b921
   14001b91f:	xor    eax,eax
   14001b921:	test   eax,eax
   14001b923:	je     0x14001b92a
   14001b925:	mov    eax,0x1
   14001b92a:	cmp    BYTE PTR [rsp+0x38],0x0
   14001b92f:	je     0x14001b93d
   14001b931:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b936:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001b93d:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b942:	mov    rsi,QWORD PTR [rsp+0x58]
   14001b947:	add    rsp,0x40
   14001b94b:	pop    rdi
   14001b94c:	ret    
   14001b94d:	int3   
   14001b94e:	int3   
   14001b94f:	int3   
   14001b950:	mov    edx,ecx
   14001b952:	mov    r9d,0x4
   14001b958:	xor    r8d,r8d
   14001b95b:	xor    ecx,ecx
   14001b95d:	jmp    0x14001b8d4
   14001b962:	int3   
   14001b963:	int3   
   14001b964:	int3   
   14001b965:	int3   
   14001b966:	int3   
   14001b967:	int3   
   14001b968:	int3   
   14001b969:	int3   
   14001b96a:	int3   
   14001b96b:	int3   
   14001b96c:	int3   
   14001b96d:	int3   
   14001b96e:	int3   
   14001b96f:	int3   
   14001b970:	int3   
   14001b971:	int3   
   14001b972:	int3   
   14001b973:	int3   
   14001b974:	int3   
   14001b975:	int3   
   14001b976:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001b980:	mov    r11,rcx
   14001b983:	movzx  edx,dl
   14001b986:	cmp    r8,0x10
   14001b98a:	jb     0x14001baec
   14001b990:	bt     DWORD PTR [rip+0x28630],0x1        # 0x140043fc8
   14001b998:	jae    0x14001b9a8
   14001b99a:	push   rdi
   14001b99b:	mov    rdi,rcx
   14001b99e:	mov    eax,edx
   14001b9a0:	mov    rcx,r8
   14001b9a3:	rep stos BYTE PTR es:[rdi],al
   14001b9a5:	pop    rdi
   14001b9a6:	jmp    0x14001ba15
   14001b9a8:	movabs r9,0x101010101010101
   14001b9b2:	imul   rdx,r9
   14001b9b6:	bt     DWORD PTR [rip+0x2860a],0x2        # 0x140043fc8
   14001b9be:	jb     0x14001ba60
   14001b9c4:	cmp    r8,0x40
   14001b9c8:	jb     0x14001b9e8
   14001b9ca:	neg    rcx
   14001b9cd:	and    ecx,0x7
   14001b9d0:	je     0x14001b9d8
   14001b9d2:	sub    r8,rcx
   14001b9d5:	mov    QWORD PTR [r11],rdx
   14001b9d8:	add    rcx,r11
   14001b9db:	mov    r9,r8
   14001b9de:	and    r8,0x3f
   14001b9e2:	shr    r9,0x6
   14001b9e6:	jne    0x14001ba27
   14001b9e8:	mov    r9,r8
   14001b9eb:	and    r8,0x7
   14001b9ef:	shr    r9,0x3
   14001b9f3:	je     0x14001ba06
   14001b9f5:	data16 data16 xchg ax,ax
   14001b9f9:	nop
   14001b9fa:	mov    QWORD PTR [rcx],rdx
   14001b9fd:	add    rcx,0x8
   14001ba01:	dec    r9
   14001ba04:	jne    0x14001b9fa
   14001ba06:	test   r8,r8
   14001ba09:	je     0x14001ba15
   14001ba0b:	mov    BYTE PTR [rcx],dl
   14001ba0d:	inc    rcx
   14001ba10:	dec    r8
   14001ba13:	jne    0x14001ba0b
   14001ba15:	mov    rax,r11
   14001ba18:	ret    
   14001ba19:	nop    DWORD PTR [rax+0x0]
   14001ba20:	data16 data16 xchg ax,ax
   14001ba24:	data16 xchg ax,ax
   14001ba27:	mov    QWORD PTR [rcx],rdx
   14001ba2a:	mov    QWORD PTR [rcx+0x8],rdx
   14001ba2e:	mov    QWORD PTR [rcx+0x10],rdx
   14001ba32:	add    rcx,0x40
   14001ba36:	mov    QWORD PTR [rcx-0x28],rdx
   14001ba3a:	mov    QWORD PTR [rcx-0x20],rdx
   14001ba3e:	dec    r9
   14001ba41:	mov    QWORD PTR [rcx-0x18],rdx
   14001ba45:	mov    QWORD PTR [rcx-0x10],rdx
   14001ba49:	mov    QWORD PTR [rcx-0x8],rdx
   14001ba4d:	jne    0x14001ba27
   14001ba4f:	jmp    0x14001b9e8
   14001ba51:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001ba60:	movq   xmm0,rdx
   14001ba65:	punpcklbw xmm0,xmm0
   14001ba69:	test   cl,0xf
   14001ba6c:	je     0x14001ba84
   14001ba6e:	movups XMMWORD PTR [rcx],xmm0
   14001ba71:	mov    rax,rcx
   14001ba74:	and    rax,0xf
   14001ba78:	add    rcx,0x10
   14001ba7c:	sub    rcx,rax
   14001ba7f:	lea    r8,[rax+r8*1-0x10]
   14001ba84:	mov    r9,r8
   14001ba87:	shr    r9,0x7
   14001ba8b:	je     0x14001babf
   14001ba8d:	jmp    0x14001ba90
   14001ba8f:	nop
   14001ba90:	movaps XMMWORD PTR [rcx],xmm0
   14001ba93:	movaps XMMWORD PTR [rcx+0x10],xmm0
   14001ba97:	add    rcx,0x80
   14001ba9e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   14001baa2:	movaps XMMWORD PTR [rcx-0x50],xmm0
   14001baa6:	dec    r9
   14001baa9:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14001baad:	movaps XMMWORD PTR [rcx-0x30],xmm0
   14001bab1:	movaps XMMWORD PTR [rcx-0x20],xmm0
   14001bab5:	movaps XMMWORD PTR [rcx-0x10],xmm0
   14001bab9:	jne    0x14001ba90
   14001babb:	and    r8,0x7f
   14001babf:	mov    r9,r8
   14001bac2:	shr    r9,0x4
   14001bac6:	je     0x14001badc
   14001bac8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001bad0:	movaps XMMWORD PTR [rcx],xmm0
   14001bad3:	add    rcx,0x10
   14001bad7:	dec    r9
   14001bada:	jne    0x14001bad0
   14001badc:	and    r8,0xf
   14001bae0:	je     0x14001bae8
   14001bae2:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   14001bae8:	mov    rax,r11
   14001baeb:	ret    
   14001baec:	movabs r9,0x101010101010101
   14001baf6:	imul   rdx,r9
   14001bafa:	lea    r9,[rip+0xfffffffffffe44ff]        # 0x140000000
   14001bb01:	mov    eax,DWORD PTR [r9+r8*4+0x1bb15]
   14001bb09:	add    r9,rax
   14001bb0c:	add    rcx,r8
   14001bb0f:	mov    rax,r11
   14001bb12:	jmp    r9
   14001bb15:	outs   dx,BYTE PTR ds:[rsi]
   14001bb16:	mov    ebx,0xbb6b0001
   14001bb1b:	add    DWORD PTR [rax],eax
   14001bb1d:	jl     0x14001bada
   14001bb1f:	add    DWORD PTR [rax],eax
   14001bb21:	addr32 mov ebx,0xbb900001
   14001bb27:	add    DWORD PTR [rax],eax
   14001bb29:	test   DWORD PTR [rbx-0x4486ffff],edi
   14001bb2f:	add    DWORD PTR [rax],eax
   14001bb31:	fs mov ebx,0xbba50001
   14001bb37:	add    DWORD PTR [rax],eax
   14001bb39:	popf   
   14001bb3a:	mov    ebx,0xbb940001
   14001bb3f:	add    DWORD PTR [rax],eax
   14001bb41:	outs   dx,DWORD PTR ds:[rsi]
   14001bb42:	mov    ebx,0xbb8c0001
   14001bb47:	add    DWORD PTR [rax],eax
   14001bb49:	cmp    DWORD PTR [rbx-0x448affff],0xbb600001
   14001bb53:	add    DWORD PTR [rax],eax
   14001bb55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001bb60:	mov    QWORD PTR [rcx-0xf],rdx
   14001bb64:	mov    DWORD PTR [rcx-0x7],edx
   14001bb67:	mov    WORD PTR [rcx-0x3],dx
   14001bb6b:	mov    BYTE PTR [rcx-0x1],dl
   14001bb6e:	ret    
   14001bb6f:	mov    QWORD PTR [rcx-0xb],rdx
   14001bb73:	jmp    0x14001bb67
   14001bb75:	mov    QWORD PTR [rcx-0xe],rdx
   14001bb79:	mov    DWORD PTR [rcx-0x6],edx
   14001bb7c:	mov    WORD PTR [rcx-0x2],dx
   14001bb80:	ret    
   14001bb81:	mov    QWORD PTR [rcx-0xd],rdx
   14001bb85:	mov    DWORD PTR [rcx-0x5],edx
   14001bb88:	mov    BYTE PTR [rcx-0x1],dl
   14001bb8b:	ret    
   14001bb8c:	mov    QWORD PTR [rcx-0xc],rdx
   14001bb90:	mov    DWORD PTR [rcx-0x4],edx
   14001bb93:	ret    
   14001bb94:	mov    QWORD PTR [rcx-0xa],rdx
   14001bb98:	mov    WORD PTR [rcx-0x2],dx
   14001bb9c:	ret    
   14001bb9d:	mov    QWORD PTR [rcx-0x9],rdx
   14001bba1:	mov    BYTE PTR [rcx-0x1],dl
   14001bba4:	ret    
   14001bba5:	mov    QWORD PTR [rcx-0x8],rdx
   14001bba9:	ret    
   14001bbaa:	int3   
   14001bbab:	int3   
   14001bbac:	sub    rsp,0x28
   14001bbb0:	call   0x14001ef6c
   14001bbb5:	mov    rcx,QWORD PTR [rax+0xc0]
   14001bbbc:	cmp    rcx,QWORD PTR [rip+0x262cd]        # 0x140041e90
   14001bbc3:	je     0x14001bbdb
   14001bbc5:	mov    eax,DWORD PTR [rax+0xc8]
   14001bbcb:	test   DWORD PTR [rip+0x26427],eax        # 0x140041ff8
   14001bbd1:	jne    0x14001bbdb
   14001bbd3:	call   0x14001f444
   14001bbd8:	mov    rcx,rax
   14001bbdb:	mov    rax,QWORD PTR [rcx+0x108]
   14001bbe2:	add    rsp,0x28
   14001bbe6:	ret    
   14001bbe7:	int3   
   14001bbe8:	rex push rbx
   14001bbea:	sub    rsp,0x40
   14001bbee:	cmp    DWORD PTR [rip+0x28d7b],0x0        # 0x140044970
   14001bbf5:	movsxd rbx,ecx
   14001bbf8:	jne    0x14001bc0c
   14001bbfa:	mov    rax,QWORD PTR [rip+0x263a7]        # 0x140041fa8
   14001bc01:	movzx  eax,WORD PTR [rax+rbx*2]
   14001bc05:	and    eax,0x107
   14001bc0a:	jmp    0x14001bc61
   14001bc0c:	lea    rcx,[rsp+0x20]
   14001bc11:	xor    edx,edx
   14001bc13:	call   0x140019058
   14001bc18:	mov    rax,QWORD PTR [rsp+0x20]
   14001bc1d:	cmp    DWORD PTR [rax+0xd4],0x1
   14001bc24:	jle    0x14001bc3b
   14001bc26:	lea    r8,[rsp+0x20]
   14001bc2b:	mov    edx,0x107
   14001bc30:	mov    ecx,ebx
   14001bc32:	call   0x140024d40
   14001bc37:	mov    ecx,eax
   14001bc39:	jmp    0x14001bc4c
   14001bc3b:	mov    rax,QWORD PTR [rax+0x108]
   14001bc42:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001bc46:	and    ecx,0x107
   14001bc4c:	cmp    BYTE PTR [rsp+0x38],0x0
   14001bc51:	je     0x14001bc5f
   14001bc53:	mov    rax,QWORD PTR [rsp+0x30]
   14001bc58:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001bc5f:	mov    eax,ecx
   14001bc61:	add    rsp,0x40
   14001bc65:	pop    rbx
   14001bc66:	ret    
   14001bc67:	int3   
   14001bc68:	rex push rbx
   14001bc6a:	sub    rsp,0x40
   14001bc6e:	cmp    DWORD PTR [rip+0x28cfb],0x0        # 0x140044970
   14001bc75:	movsxd rbx,ecx
   14001bc78:	jne    0x14001bc8a
   14001bc7a:	mov    rax,QWORD PTR [rip+0x26327]        # 0x140041fa8
   14001bc81:	movzx  eax,WORD PTR [rax+rbx*2]
   14001bc85:	and    eax,0x4
   14001bc88:	jmp    0x14001bcdc
   14001bc8a:	lea    rcx,[rsp+0x20]
   14001bc8f:	xor    edx,edx
   14001bc91:	call   0x140019058
   14001bc96:	mov    rax,QWORD PTR [rsp+0x20]
   14001bc9b:	cmp    DWORD PTR [rax+0xd4],0x1
   14001bca2:	jle    0x14001bcb9
   14001bca4:	lea    r8,[rsp+0x20]
   14001bca9:	mov    edx,0x4
   14001bcae:	mov    ecx,ebx
   14001bcb0:	call   0x140024d40
   14001bcb5:	mov    ecx,eax
   14001bcb7:	jmp    0x14001bcc7
   14001bcb9:	mov    rax,QWORD PTR [rax+0x108]
   14001bcc0:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001bcc4:	and    ecx,0x4
   14001bcc7:	cmp    BYTE PTR [rsp+0x38],0x0
   14001bccc:	je     0x14001bcda
   14001bcce:	mov    rax,QWORD PTR [rsp+0x30]
   14001bcd3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001bcda:	mov    eax,ecx
   14001bcdc:	add    rsp,0x40
   14001bce0:	pop    rbx
   14001bce1:	ret    
   14001bce2:	int3   
   14001bce3:	int3   
   14001bce4:	rex push rbx
   14001bce6:	sub    rsp,0x40
   14001bcea:	cmp    DWORD PTR [rip+0x28c7f],0x0        # 0x140044970
   14001bcf1:	movsxd rbx,ecx
   14001bcf4:	jne    0x14001bd06
   14001bcf6:	mov    rax,QWORD PTR [rip+0x262ab]        # 0x140041fa8
   14001bcfd:	movzx  eax,WORD PTR [rax+rbx*2]
   14001bd01:	and    eax,0x8
   14001bd04:	jmp    0x14001bd58
   14001bd06:	lea    rcx,[rsp+0x20]
   14001bd0b:	xor    edx,edx
   14001bd0d:	call   0x140019058
   14001bd12:	mov    rax,QWORD PTR [rsp+0x20]
   14001bd17:	cmp    DWORD PTR [rax+0xd4],0x1
   14001bd1e:	jle    0x14001bd35
   14001bd20:	lea    r8,[rsp+0x20]
   14001bd25:	mov    edx,0x8
   14001bd2a:	mov    ecx,ebx
   14001bd2c:	call   0x140024d40
   14001bd31:	mov    ecx,eax
   14001bd33:	jmp    0x14001bd43
   14001bd35:	mov    rax,QWORD PTR [rax+0x108]
   14001bd3c:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001bd40:	and    ecx,0x8
   14001bd43:	cmp    BYTE PTR [rsp+0x38],0x0
   14001bd48:	je     0x14001bd56
   14001bd4a:	mov    rax,QWORD PTR [rsp+0x30]
   14001bd4f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001bd56:	mov    eax,ecx
   14001bd58:	add    rsp,0x40
   14001bd5c:	pop    rbx
   14001bd5d:	ret    
   14001bd5e:	int3   
   14001bd5f:	int3   
   14001bd60:	rex push rbx
   14001bd62:	sub    rsp,0x40
   14001bd66:	cmp    DWORD PTR [rip+0x28c03],0x0        # 0x140044970
   14001bd6d:	movsxd rbx,ecx
   14001bd70:	jne    0x14001bd84
   14001bd72:	mov    rax,QWORD PTR [rip+0x2622f]        # 0x140041fa8
   14001bd79:	movzx  eax,WORD PTR [rax+rbx*2]
   14001bd7d:	and    eax,0x80
   14001bd82:	jmp    0x14001bdd9
   14001bd84:	lea    rcx,[rsp+0x20]
   14001bd89:	xor    edx,edx
   14001bd8b:	call   0x140019058
   14001bd90:	mov    rax,QWORD PTR [rsp+0x20]
   14001bd95:	cmp    DWORD PTR [rax+0xd4],0x1
   14001bd9c:	jle    0x14001bdb3
   14001bd9e:	lea    r8,[rsp+0x20]
   14001bda3:	mov    edx,0x80
   14001bda8:	mov    ecx,ebx
   14001bdaa:	call   0x140024d40
   14001bdaf:	mov    ecx,eax
   14001bdb1:	jmp    0x14001bdc4
   14001bdb3:	mov    rax,QWORD PTR [rax+0x108]
   14001bdba:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001bdbe:	and    ecx,0x80
   14001bdc4:	cmp    BYTE PTR [rsp+0x38],0x0
   14001bdc9:	je     0x14001bdd7
   14001bdcb:	mov    rax,QWORD PTR [rsp+0x30]
   14001bdd0:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001bdd7:	mov    eax,ecx
   14001bdd9:	add    rsp,0x40
   14001bddd:	pop    rbx
   14001bdde:	ret    
   14001bddf:	int3   
   14001bde0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bde5:	mov    QWORD PTR [rsp+0x10],rsi
   14001bdea:	push   rdi
   14001bdeb:	sub    rsp,0x30
   14001bdef:	mov    rbx,rcx
   14001bdf2:	test   rcx,rcx
   14001bdf5:	je     0x14001be2d
   14001bdf7:	call   0x14001e19c
   14001bdfc:	mov    edx,0x2
   14001be01:	lea    rcx,[rax+0x1]
   14001be05:	mov    rsi,rax
   14001be08:	call   0x140024e1c
   14001be0d:	mov    rdi,rax
   14001be10:	test   rax,rax
   14001be13:	je     0x14001be2d
   14001be15:	lea    rdx,[rsi+0x1]
   14001be19:	mov    r8,rbx
   14001be1c:	mov    rcx,rax
   14001be1f:	call   0x140024e60
   14001be24:	test   eax,eax
   14001be26:	jne    0x14001be3f
   14001be28:	mov    rax,rdi
   14001be2b:	jmp    0x14001be2f
   14001be2d:	xor    eax,eax
   14001be2f:	mov    rbx,QWORD PTR [rsp+0x40]
   14001be34:	mov    rsi,QWORD PTR [rsp+0x48]
   14001be39:	add    rsp,0x30
   14001be3d:	pop    rdi
   14001be3e:	ret    
   14001be3f:	and    QWORD PTR [rsp+0x20],0x0
   14001be45:	xor    r9d,r9d
   14001be48:	xor    r8d,r8d
   14001be4b:	xor    edx,edx
   14001be4d:	xor    ecx,ecx
   14001be4f:	call   0x14001ffd8
   14001be54:	int3   
   14001be55:	int3   
   14001be56:	int3   
   14001be57:	int3   
   14001be58:	rex push rbp
   14001be5a:	push   r12
   14001be5c:	push   r13
   14001be5e:	push   r14
   14001be60:	push   r15
   14001be62:	sub    rsp,0x50
   14001be66:	lea    rbp,[rsp+0x40]
   14001be6b:	mov    QWORD PTR [rbp+0x40],rbx
   14001be6f:	mov    QWORD PTR [rbp+0x48],rsi
   14001be73:	mov    QWORD PTR [rbp+0x50],rdi
   14001be77:	mov    rax,QWORD PTR [rip+0x257d2]        # 0x140041650
   14001be7e:	xor    rax,rbp
   14001be81:	mov    QWORD PTR [rbp+0x8],rax
   14001be85:	mov    ebx,DWORD PTR [rbp+0x60]
   14001be88:	xor    edi,edi
   14001be8a:	mov    r12,r9
   14001be8d:	mov    r13d,r8d
   14001be90:	mov    QWORD PTR [rbp+0x0],rdx
   14001be94:	test   ebx,ebx
   14001be96:	jle    0x14001bec2
   14001be98:	mov    r10d,ebx
   14001be9b:	mov    rax,r9
   14001be9e:	dec    r10d
   14001bea1:	cmp    BYTE PTR [rax],dil
   14001bea4:	je     0x14001beb2
   14001bea6:	inc    rax
   14001bea9:	test   r10d,r10d
   14001beac:	jne    0x14001be9e
   14001beae:	or     r10d,0xffffffff
   14001beb2:	mov    eax,ebx
   14001beb4:	sub    eax,r10d
   14001beb7:	dec    eax
   14001beb9:	cmp    eax,ebx
   14001bebb:	lea    ebx,[rax+0x1]
   14001bebe:	jl     0x14001bec2
   14001bec0:	mov    ebx,eax
   14001bec2:	mov    r14d,DWORD PTR [rbp+0x78]
   14001bec6:	mov    esi,edi
   14001bec8:	test   r14d,r14d
   14001becb:	jne    0x14001bed4
   14001becd:	mov    rax,QWORD PTR [rcx]
   14001bed0:	mov    r14d,DWORD PTR [rax+0x4]
   14001bed4:	neg    DWORD PTR [rbp+0x80]
   14001beda:	mov    r9d,ebx
   14001bedd:	mov    r8,r12
   14001bee0:	sbb    edx,edx
   14001bee2:	mov    ecx,r14d
   14001bee5:	mov    DWORD PTR [rsp+0x28],edi
   14001bee9:	and    edx,0x8
   14001beec:	mov    QWORD PTR [rsp+0x20],rdi
   14001bef1:	inc    edx
   14001bef3:	call   QWORD PTR [rip+0x1331f]        # 0x14002f218
   14001bef9:	movsxd r15,eax
   14001befc:	test   eax,eax
   14001befe:	jne    0x14001bf07
   14001bf00:	xor    eax,eax
   14001bf02:	jmp    0x14001c11e
   14001bf07:	movabs r9,0xffffffffffffff0
   14001bf11:	test   eax,eax
   14001bf13:	jle    0x14001bf83
   14001bf15:	xor    edx,edx
   14001bf17:	lea    rax,[rdx-0x20]
   14001bf1b:	div    r15
   14001bf1e:	cmp    rax,0x2
   14001bf22:	jb     0x14001bf83
   14001bf24:	lea    rcx,[r15+r15*1]
   14001bf28:	lea    rax,[rcx+0x10]
   14001bf2c:	cmp    rax,rcx
   14001bf2f:	jbe    0x14001bf83
   14001bf31:	lea    rcx,[r15*2+0x10]
   14001bf39:	cmp    rcx,0x400
   14001bf40:	ja     0x14001bf6c
   14001bf42:	lea    rax,[rcx+0xf]
   14001bf46:	cmp    rax,rcx
   14001bf49:	ja     0x14001bf4e
   14001bf4b:	mov    rax,r9
   14001bf4e:	and    rax,0xfffffffffffffff0
   14001bf52:	call   0x140024ee0
   14001bf57:	sub    rsp,rax
   14001bf5a:	lea    rdi,[rsp+0x40]
   14001bf5f:	test   rdi,rdi
   14001bf62:	je     0x14001bf00
   14001bf64:	mov    DWORD PTR [rdi],0xcccc
   14001bf6a:	jmp    0x14001bf7f
   14001bf6c:	call   0x14001adf0
   14001bf71:	mov    rdi,rax
   14001bf74:	test   rax,rax
   14001bf77:	je     0x14001bf83
   14001bf79:	mov    DWORD PTR [rax],0xdddd
   14001bf7f:	add    rdi,0x10
   14001bf83:	test   rdi,rdi
   14001bf86:	je     0x14001bf00
   14001bf8c:	mov    r9d,ebx
   14001bf8f:	mov    r8,r12
   14001bf92:	mov    edx,0x1
   14001bf97:	mov    ecx,r14d
   14001bf9a:	mov    DWORD PTR [rsp+0x28],r15d
   14001bf9f:	mov    QWORD PTR [rsp+0x20],rdi
   14001bfa4:	call   QWORD PTR [rip+0x1326e]        # 0x14002f218
   14001bfaa:	test   eax,eax
   14001bfac:	je     0x14001c10b
   14001bfb2:	mov    r12,QWORD PTR [rbp+0x0]
   14001bfb6:	and    DWORD PTR [rsp+0x28],esi
   14001bfba:	and    QWORD PTR [rsp+0x20],rsi
   14001bfbf:	mov    rcx,r12
   14001bfc2:	mov    r9d,r15d
   14001bfc5:	mov    r8,rdi
   14001bfc8:	mov    edx,r13d
   14001bfcb:	call   0x14001e564
   14001bfd0:	movsxd rsi,eax
   14001bfd3:	test   eax,eax
   14001bfd5:	je     0x14001c10b
   14001bfdb:	mov    r9d,0x400
   14001bfe1:	test   r9d,r13d
   14001bfe4:	je     0x14001c01c
   14001bfe6:	mov    ecx,DWORD PTR [rbp+0x70]
   14001bfe9:	test   ecx,ecx
   14001bfeb:	je     0x14001c10b
   14001bff1:	cmp    esi,ecx
   14001bff3:	jg     0x14001c10b
   14001bff9:	mov    rax,QWORD PTR [rbp+0x68]
   14001bffd:	mov    DWORD PTR [rsp+0x28],ecx
   14001c001:	mov    r9d,r15d
   14001c004:	mov    r8,rdi
   14001c007:	mov    edx,r13d
   14001c00a:	mov    rcx,r12
   14001c00d:	mov    QWORD PTR [rsp+0x20],rax
   14001c012:	call   0x14001e564
   14001c017:	jmp    0x14001c10b
   14001c01c:	test   eax,eax
   14001c01e:	jle    0x14001c097
   14001c020:	xor    edx,edx
   14001c022:	lea    rax,[rdx-0x20]
   14001c026:	div    rsi
   14001c029:	cmp    rax,0x2
   14001c02d:	jb     0x14001c097
   14001c02f:	lea    rcx,[rsi+rsi*1]
   14001c033:	lea    rax,[rcx+0x10]
   14001c037:	cmp    rax,rcx
   14001c03a:	jbe    0x14001c097
   14001c03c:	lea    rcx,[rsi*2+0x10]
   14001c044:	cmp    rcx,r9
   14001c047:	ja     0x14001c07e
   14001c049:	lea    rax,[rcx+0xf]
   14001c04d:	cmp    rax,rcx
   14001c050:	ja     0x14001c05c
   14001c052:	movabs rax,0xffffffffffffff0
   14001c05c:	and    rax,0xfffffffffffffff0
   14001c060:	call   0x140024ee0
   14001c065:	sub    rsp,rax
   14001c068:	lea    rbx,[rsp+0x40]
   14001c06d:	test   rbx,rbx
   14001c070:	je     0x14001c10b
   14001c076:	mov    DWORD PTR [rbx],0xcccc
   14001c07c:	jmp    0x14001c091
   14001c07e:	call   0x14001adf0
   14001c083:	mov    rbx,rax
   14001c086:	test   rax,rax
   14001c089:	je     0x14001c099
   14001c08b:	mov    DWORD PTR [rax],0xdddd
   14001c091:	add    rbx,0x10
   14001c095:	jmp    0x14001c099
   14001c097:	xor    ebx,ebx
   14001c099:	test   rbx,rbx
   14001c09c:	je     0x14001c10b
   14001c09e:	mov    r9d,r15d
   14001c0a1:	mov    r8,rdi
   14001c0a4:	mov    edx,r13d
   14001c0a7:	mov    rcx,r12
   14001c0aa:	mov    DWORD PTR [rsp+0x28],esi
   14001c0ae:	mov    QWORD PTR [rsp+0x20],rbx
   14001c0b3:	call   0x14001e564
   14001c0b8:	xor    ecx,ecx
   14001c0ba:	test   eax,eax
   14001c0bc:	je     0x14001c0fa
   14001c0be:	mov    eax,DWORD PTR [rbp+0x70]
   14001c0c1:	xor    edx,edx
   14001c0c3:	mov    QWORD PTR [rsp+0x38],rcx
   14001c0c8:	mov    r9d,esi
   14001c0cb:	mov    r8,rbx
   14001c0ce:	mov    QWORD PTR [rsp+0x30],rcx
   14001c0d3:	test   eax,eax
   14001c0d5:	jne    0x14001c0e2
   14001c0d7:	mov    DWORD PTR [rsp+0x28],ecx
   14001c0db:	mov    QWORD PTR [rsp+0x20],rcx
   14001c0e0:	jmp    0x14001c0ef
   14001c0e2:	mov    DWORD PTR [rsp+0x28],eax
   14001c0e6:	mov    rax,QWORD PTR [rbp+0x68]
   14001c0ea:	mov    QWORD PTR [rsp+0x20],rax
   14001c0ef:	mov    ecx,r14d
   14001c0f2:	call   QWORD PTR [rip+0x13118]        # 0x14002f210
   14001c0f8:	mov    esi,eax
   14001c0fa:	lea    rcx,[rbx-0x10]
   14001c0fe:	cmp    DWORD PTR [rcx],0xdddd
   14001c104:	jne    0x14001c10b
   14001c106:	call   0x14001a1ac
   14001c10b:	lea    rcx,[rdi-0x10]
   14001c10f:	cmp    DWORD PTR [rcx],0xdddd
   14001c115:	jne    0x14001c11c
   14001c117:	call   0x14001a1ac
   14001c11c:	mov    eax,esi
   14001c11e:	mov    rcx,QWORD PTR [rbp+0x8]
   14001c122:	xor    rcx,rbp
   14001c125:	call   0x1400187d0
   14001c12a:	mov    rbx,QWORD PTR [rbp+0x40]
   14001c12e:	mov    rsi,QWORD PTR [rbp+0x48]
   14001c132:	mov    rdi,QWORD PTR [rbp+0x50]
   14001c136:	lea    rsp,[rbp+0x10]
   14001c13a:	pop    r15
   14001c13c:	pop    r14
   14001c13e:	pop    r13
   14001c140:	pop    r12
   14001c142:	pop    rbp
   14001c143:	ret    
   14001c144:	mov    QWORD PTR [rsp+0x8],rbx
   14001c149:	mov    QWORD PTR [rsp+0x10],rsi
   14001c14e:	push   rdi
   14001c14f:	sub    rsp,0x70
   14001c153:	mov    rsi,rdx
   14001c156:	mov    rdx,rcx
   14001c159:	lea    rcx,[rsp+0x50]
   14001c15e:	mov    rbx,r9
   14001c161:	mov    edi,r8d
   14001c164:	call   0x140019058
   14001c169:	mov    eax,DWORD PTR [rsp+0xc0]
   14001c170:	lea    rcx,[rsp+0x50]
   14001c175:	mov    r9,rbx
   14001c178:	mov    DWORD PTR [rsp+0x40],eax
   14001c17c:	mov    eax,DWORD PTR [rsp+0xb8]
   14001c183:	mov    r8d,edi
   14001c186:	mov    DWORD PTR [rsp+0x38],eax
   14001c18a:	mov    eax,DWORD PTR [rsp+0xb0]
   14001c191:	mov    rdx,rsi
   14001c194:	mov    DWORD PTR [rsp+0x30],eax
   14001c198:	mov    rax,QWORD PTR [rsp+0xa8]
   14001c1a0:	mov    QWORD PTR [rsp+0x28],rax
   14001c1a5:	mov    eax,DWORD PTR [rsp+0xa0]
   14001c1ac:	mov    DWORD PTR [rsp+0x20],eax
   14001c1b0:	call   0x14001be58
   14001c1b5:	cmp    BYTE PTR [rsp+0x68],0x0
   14001c1ba:	je     0x14001c1c8
   14001c1bc:	mov    rcx,QWORD PTR [rsp+0x60]
   14001c1c1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c1c8:	lea    r11,[rsp+0x70]
   14001c1cd:	mov    rbx,QWORD PTR [r11+0x10]
   14001c1d1:	mov    rsi,QWORD PTR [r11+0x18]
   14001c1d5:	mov    rsp,r11
   14001c1d8:	pop    rdi
   14001c1d9:	ret    
   14001c1da:	int3   
   14001c1db:	int3   
   14001c1dc:	mov    rax,rsp
   14001c1df:	mov    QWORD PTR [rax+0x8],rbx
   14001c1e3:	mov    QWORD PTR [rax+0x10],rbp
   14001c1e7:	mov    QWORD PTR [rax+0x18],rsi
   14001c1eb:	mov    QWORD PTR [rax+0x20],rdi
   14001c1ef:	push   r14
   14001c1f1:	sub    rsp,0x20
   14001c1f5:	xor    ebx,ebx
   14001c1f7:	mov    rsi,rdx
   14001c1fa:	mov    rbp,rcx
   14001c1fd:	or     r14d,0xffffffff
   14001c201:	xor    r8d,r8d
   14001c204:	mov    rdx,rsi
   14001c207:	mov    rcx,rbp
   14001c20a:	call   0x140025004
   14001c20f:	mov    rdi,rax
   14001c212:	test   rax,rax
   14001c215:	jne    0x14001c23d
   14001c217:	cmp    DWORD PTR [rip+0x27d33],eax        # 0x140043f50
   14001c21d:	jbe    0x14001c23d
   14001c21f:	mov    ecx,ebx
   14001c221:	call   0x14001e154
   14001c226:	lea    ecx,[rbx+0x3e8]
   14001c22c:	cmp    ecx,DWORD PTR [rip+0x27d1e]        # 0x140043f50
   14001c232:	mov    ebx,ecx
   14001c234:	cmova  ebx,r14d
   14001c238:	cmp    ebx,r14d
   14001c23b:	jne    0x14001c201
   14001c23d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c242:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c247:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c24c:	mov    rax,rdi
   14001c24f:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c254:	add    rsp,0x20
   14001c258:	pop    r14
   14001c25a:	ret    
   14001c25b:	int3   
   14001c25c:	mov    rax,rsp
   14001c25f:	mov    QWORD PTR [rax+0x8],rbx
   14001c263:	mov    QWORD PTR [rax+0x10],rbp
   14001c267:	mov    QWORD PTR [rax+0x18],rsi
   14001c26b:	mov    QWORD PTR [rax+0x20],rdi
   14001c26f:	push   r14
   14001c271:	sub    rsp,0x20
   14001c275:	mov    esi,DWORD PTR [rip+0x27cd5]        # 0x140043f50
   14001c27b:	xor    ebx,ebx
   14001c27d:	mov    rbp,rcx
   14001c280:	or     r14d,0xffffffff
   14001c284:	mov    rcx,rbp
   14001c287:	call   0x14001adf0
   14001c28c:	mov    rdi,rax
   14001c28f:	test   rax,rax
   14001c292:	jne    0x14001c2b8
   14001c294:	test   esi,esi
   14001c296:	je     0x14001c2b8
   14001c298:	mov    ecx,ebx
   14001c29a:	call   0x14001e154
   14001c29f:	mov    esi,DWORD PTR [rip+0x27cab]        # 0x140043f50
   14001c2a5:	lea    ecx,[rbx+0x3e8]
   14001c2ab:	cmp    ecx,esi
   14001c2ad:	mov    ebx,ecx
   14001c2af:	cmova  ebx,r14d
   14001c2b3:	cmp    ebx,r14d
   14001c2b6:	jne    0x14001c284
   14001c2b8:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c2bd:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c2c2:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c2c7:	mov    rax,rdi
   14001c2ca:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c2cf:	add    rsp,0x20
   14001c2d3:	pop    r14
   14001c2d5:	ret    
   14001c2d6:	int3   
   14001c2d7:	int3   
   14001c2d8:	mov    rax,rsp
   14001c2db:	mov    QWORD PTR [rax+0x8],rbx
   14001c2df:	mov    QWORD PTR [rax+0x10],rbp
   14001c2e3:	mov    QWORD PTR [rax+0x18],rsi
   14001c2e7:	mov    QWORD PTR [rax+0x20],rdi
   14001c2eb:	push   r14
   14001c2ed:	sub    rsp,0x20
   14001c2f1:	xor    ebx,ebx
   14001c2f3:	mov    rsi,rdx
   14001c2f6:	mov    rbp,rcx
   14001c2f9:	or     r14d,0xffffffff
   14001c2fd:	mov    rdx,rsi
   14001c300:	mov    rcx,rbp
   14001c303:	call   0x140024f30
   14001c308:	mov    rdi,rax
   14001c30b:	test   rax,rax
   14001c30e:	jne    0x14001c33b
   14001c310:	test   rsi,rsi
   14001c313:	je     0x14001c33b
   14001c315:	cmp    DWORD PTR [rip+0x27c35],eax        # 0x140043f50
   14001c31b:	jbe    0x14001c33b
   14001c31d:	mov    ecx,ebx
   14001c31f:	call   0x14001e154
   14001c324:	lea    ecx,[rbx+0x3e8]
   14001c32a:	cmp    ecx,DWORD PTR [rip+0x27c20]        # 0x140043f50
   14001c330:	mov    ebx,ecx
   14001c332:	cmova  ebx,r14d
   14001c336:	cmp    ebx,r14d
   14001c339:	jne    0x14001c2fd
   14001c33b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c340:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c345:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c34a:	mov    rax,rdi
   14001c34d:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c352:	add    rsp,0x20
   14001c356:	pop    r14
   14001c358:	ret    
   14001c359:	int3   
   14001c35a:	int3   
   14001c35b:	int3   
   14001c35c:	sub    rsp,0x28
   14001c360:	mov    r8,QWORD PTR [r9+0x38]
   14001c364:	mov    rcx,rdx
   14001c367:	mov    rdx,r9
   14001c36a:	call   0x14001c37c
   14001c36f:	mov    eax,0x1
   14001c374:	add    rsp,0x28
   14001c378:	ret    
   14001c379:	int3   
   14001c37a:	int3   
   14001c37b:	int3   
   14001c37c:	rex push rbx
   14001c37e:	sub    rsp,0x20
   14001c382:	mov    r11d,DWORD PTR [r8]
   14001c385:	mov    rbx,rdx
   14001c388:	mov    r9,rcx
   14001c38b:	and    r11d,0xfffffff8
   14001c38f:	test   BYTE PTR [r8],0x4
   14001c393:	mov    r10,rcx
   14001c396:	je     0x14001c3ab
   14001c398:	mov    eax,DWORD PTR [r8+0x8]
   14001c39c:	movsxd r10,DWORD PTR [r8+0x4]
   14001c3a0:	neg    eax
   14001c3a2:	add    r10,rcx
   14001c3a5:	movsxd rcx,eax
   14001c3a8:	and    r10,rcx
   14001c3ab:	movsxd rax,r11d
   14001c3ae:	mov    rdx,QWORD PTR [rax+r10*1]
   14001c3b2:	mov    rax,QWORD PTR [rbx+0x10]
   14001c3b6:	mov    ecx,DWORD PTR [rax+0x8]
   14001c3b9:	add    rcx,QWORD PTR [rbx+0x8]
   14001c3bd:	test   BYTE PTR [rcx+0x3],0xf
   14001c3c1:	je     0x14001c3cf
   14001c3c3:	movzx  eax,BYTE PTR [rcx+0x3]
   14001c3c7:	and    eax,0xfffffff0
   14001c3ca:	cdqe   
   14001c3cc:	add    r9,rax
   14001c3cf:	xor    r9,rdx
   14001c3d2:	mov    rcx,r9
   14001c3d5:	add    rsp,0x20
   14001c3d9:	pop    rbx
   14001c3da:	jmp    0x1400187d0
   14001c3df:	int3   
   14001c3e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c3e5:	mov    QWORD PTR [rsp+0x10],rsi
   14001c3ea:	push   rdi
   14001c3eb:	sub    rsp,0x30
   14001c3ef:	movsxd rax,r9d
   14001c3f2:	mov    rbx,r8
   14001c3f5:	mov    edi,edx
   14001c3f7:	mov    rsi,rcx
   14001c3fa:	test   r9d,r9d
   14001c3fd:	jle    0x14001c40a
   14001c3ff:	mov    rdx,rax
   14001c402:	mov    rcx,rbx
   14001c405:	call   0x1400250a0
   14001c40a:	mov    r8,rbx
   14001c40d:	mov    edx,edi
   14001c40f:	mov    r9d,eax
   14001c412:	mov    rcx,rsi
   14001c415:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c41a:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c41f:	add    rsp,0x30
   14001c423:	pop    rdi
   14001c424:	jmp    0x14001e564
   14001c429:	int3   
   14001c42a:	int3   
   14001c42b:	int3   
   14001c42c:	test   rcx,rcx
   14001c42f:	je     0x14001c499
   14001c431:	mov    BYTE PTR [rsp+0x10],dl
   14001c435:	sub    rsp,0x28
   14001c439:	cmp    DWORD PTR [rcx],0xe06d7363
   14001c43f:	jne    0x14001c495
   14001c441:	cmp    DWORD PTR [rcx+0x18],0x4
   14001c445:	jne    0x14001c495
   14001c447:	mov    eax,DWORD PTR [rcx+0x20]
   14001c44a:	sub    eax,0x19930520
   14001c44f:	cmp    eax,0x2
   14001c452:	ja     0x14001c495
   14001c454:	mov    rax,QWORD PTR [rcx+0x30]
   14001c458:	test   rax,rax
   14001c45b:	je     0x14001c495
   14001c45d:	movsxd rdx,DWORD PTR [rax+0x4]
   14001c461:	test   edx,edx
   14001c463:	je     0x14001c47e
   14001c465:	mov    rax,rdx
   14001c468:	mov    rdx,QWORD PTR [rcx+0x38]
   14001c46c:	add    rdx,rax
   14001c46f:	mov    rcx,QWORD PTR [rcx+0x28]
   14001c473:	call   rdx
   14001c475:	nop
   14001c476:	jmp    0x14001c495
   14001c478:	call   0x140019018
   14001c47d:	nop
   14001c47e:	test   BYTE PTR [rax],0x10
   14001c481:	je     0x14001c495
   14001c483:	mov    rax,QWORD PTR [rcx+0x28]
   14001c487:	mov    rcx,QWORD PTR [rax]
   14001c48a:	test   rcx,rcx
   14001c48d:	je     0x14001c495
   14001c48f:	mov    rax,QWORD PTR [rcx]
   14001c492:	call   QWORD PTR [rax+0x10]
   14001c495:	add    rsp,0x28
   14001c499:	ret    
   14001c49a:	int3   
   14001c49b:	int3   
   14001c49c:	rex push rbx
   14001c49e:	sub    rsp,0x20
   14001c4a2:	mov    rbx,rcx
   14001c4a5:	call   0x14001a02c
   14001c4aa:	lea    rax,[rip+0x1522f]        # 0x1400316e0
   14001c4b1:	mov    QWORD PTR [rbx],rax
   14001c4b4:	mov    rax,rbx
   14001c4b7:	add    rsp,0x20
   14001c4bb:	pop    rbx
   14001c4bc:	ret    
   14001c4bd:	int3   
   14001c4be:	int3   
   14001c4bf:	int3   
   14001c4c0:	lea    rax,[rip+0x15219]        # 0x1400316e0
   14001c4c7:	mov    QWORD PTR [rcx],rax
   14001c4ca:	jmp    0x14001a058
   14001c4cf:	int3   
   14001c4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c4d5:	push   rdi
   14001c4d6:	sub    rsp,0x20
   14001c4da:	lea    rax,[rip+0x151ff]        # 0x1400316e0
   14001c4e1:	mov    ebx,edx
   14001c4e3:	mov    rdi,rcx
   14001c4e6:	mov    QWORD PTR [rcx],rax
   14001c4e9:	call   0x14001a058
   14001c4ee:	test   bl,0x1
   14001c4f1:	je     0x14001c4fb
   14001c4f3:	mov    rcx,rdi
   14001c4f6:	call   0x140018a04
   14001c4fb:	mov    rax,rdi
   14001c4fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c503:	add    rsp,0x20
   14001c507:	pop    rdi
   14001c508:	ret    
   14001c509:	int3   
   14001c50a:	int3   
   14001c50b:	int3   
   14001c50c:	mov    rax,rsp
   14001c50f:	mov    QWORD PTR [rax+0x8],rbx
   14001c513:	mov    QWORD PTR [rax+0x18],rbp
   14001c517:	push   rsi
   14001c518:	push   rdi
   14001c519:	push   r12
   14001c51b:	push   r14
   14001c51d:	push   r15
   14001c51f:	sub    rsp,0x50
   14001c523:	mov    r15,QWORD PTR [rsp+0xa0]
   14001c52b:	mov    rbp,r9
   14001c52e:	mov    r14,rdx
   14001c531:	mov    r12,r8
   14001c534:	mov    rbx,rcx
   14001c537:	lea    r9,[rax+0x10]
   14001c53b:	mov    r8,r15
   14001c53e:	mov    rdx,rbp
   14001c541:	mov    rcx,r14
   14001c544:	call   0x14001a6f0
   14001c549:	mov    r9,QWORD PTR [rsp+0xb0]
   14001c551:	mov    rsi,QWORD PTR [rsp+0xa8]
   14001c559:	mov    rdi,rax
   14001c55c:	test   r9,r9
   14001c55f:	je     0x14001c56f
   14001c561:	mov    r8,rsi
   14001c564:	mov    rdx,rax
   14001c567:	mov    rcx,rbx
   14001c56a:	call   0x14001ce04
   14001c56f:	call   0x14001ab18
   14001c574:	movsxd rcx,DWORD PTR [rsi+0xc]
   14001c578:	mov    r9,rdi
   14001c57b:	add    rax,rcx
   14001c57e:	mov    cl,BYTE PTR [rsp+0xd8]
   14001c585:	mov    r8,r12
   14001c588:	mov    BYTE PTR [rsp+0x40],cl
   14001c58c:	mov    rcx,QWORD PTR [rsp+0xb8]
   14001c594:	mov    QWORD PTR [rsp+0x38],rbp
   14001c599:	mov    edx,DWORD PTR [rcx]
   14001c59b:	mov    QWORD PTR [rsp+0x30],r15
   14001c5a0:	mov    rcx,r14
   14001c5a3:	mov    DWORD PTR [rsp+0x28],edx
   14001c5a7:	mov    rdx,rbx
   14001c5aa:	mov    QWORD PTR [rsp+0x20],rax
   14001c5af:	call   0x14001abb4
   14001c5b4:	lea    r11,[rsp+0x50]
   14001c5b9:	mov    rbx,QWORD PTR [r11+0x30]
   14001c5bd:	mov    rbp,QWORD PTR [r11+0x40]
   14001c5c1:	mov    rsp,r11
   14001c5c4:	pop    r15
   14001c5c6:	pop    r14
   14001c5c8:	pop    r12
   14001c5ca:	pop    rdi
   14001c5cb:	pop    rsi
   14001c5cc:	ret    
   14001c5cd:	int3   
   14001c5ce:	int3   
   14001c5cf:	int3   
   14001c5d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001c5d5:	mov    QWORD PTR [rsp+0x18],r8
   14001c5da:	push   rbp
   14001c5db:	push   rsi
   14001c5dc:	push   rdi
   14001c5dd:	push   r12
   14001c5df:	push   r13
   14001c5e1:	push   r14
   14001c5e3:	push   r15
   14001c5e5:	lea    rbp,[rsp-0x7]
   14001c5ea:	sub    rsp,0xb0
   14001c5f1:	mov    rbx,QWORD PTR [rbp+0x67]
   14001c5f5:	mov    r13,rdx
   14001c5f8:	mov    rdi,rcx
   14001c5fb:	xor    r12d,r12d
   14001c5fe:	mov    rdx,r9
   14001c601:	mov    rcx,rbx
   14001c604:	mov    r15,r9
   14001c607:	mov    r14,r8
   14001c60a:	mov    BYTE PTR [rbp+0x47],r12b
   14001c60e:	mov    BYTE PTR [rbp-0x49],r12b
   14001c612:	call   0x140022a0c
   14001c617:	lea    r9,[rbp-0x21]
   14001c61b:	mov    r8,rbx
   14001c61e:	mov    rdx,r15
   14001c621:	mov    rcx,r13
   14001c624:	mov    esi,eax
   14001c626:	call   0x14001a6f0
   14001c62b:	mov    r8,rbx
   14001c62e:	mov    rdx,r15
   14001c631:	mov    rcx,r13
   14001c634:	call   0x140022998
   14001c639:	mov    r8,rbx
   14001c63c:	mov    rdx,r15
   14001c63f:	cmp    esi,eax
   14001c641:	jle    0x14001c662
   14001c643:	lea    rcx,[rbp-0x21]
   14001c647:	mov    r9d,esi
   14001c64a:	call   0x1400229c4
   14001c64f:	mov    r9d,esi
   14001c652:	mov    r8,rbx
   14001c655:	mov    rdx,r15
   14001c658:	mov    rcx,r13
   14001c65b:	call   0x1400229d0
   14001c660:	jmp    0x14001c66c
   14001c662:	mov    rcx,r13
   14001c665:	call   0x140022998
   14001c66a:	mov    esi,eax
   14001c66c:	cmp    esi,0xffffffff
   14001c66f:	jl     0x14001c676
   14001c671:	cmp    esi,DWORD PTR [rbx+0x4]
   14001c674:	jl     0x14001c67b
   14001c676:	call   0x140018ff8
   14001c67b:	cmp    DWORD PTR [rdi],0xe06d7363
   14001c681:	jne    0x14001ca02
   14001c687:	cmp    DWORD PTR [rdi+0x18],0x4
   14001c68b:	jne    0x14001c7c8
   14001c691:	mov    eax,DWORD PTR [rdi+0x20]
   14001c694:	sub    eax,0x19930520
   14001c699:	cmp    eax,0x2
   14001c69c:	ja     0x14001c7c8
   14001c6a2:	cmp    QWORD PTR [rdi+0x30],r12
   14001c6a6:	jne    0x14001c7c8
   14001c6ac:	call   0x14001ef6c
   14001c6b1:	cmp    QWORD PTR [rax+0xf0],r12
   14001c6b8:	je     0x14001c9e7
   14001c6be:	call   0x14001ef6c
   14001c6c3:	mov    rdi,QWORD PTR [rax+0xf0]
   14001c6ca:	call   0x14001ef6c
   14001c6cf:	mov    rcx,QWORD PTR [rdi+0x38]
   14001c6d3:	mov    r14,QWORD PTR [rax+0xf8]
   14001c6da:	mov    BYTE PTR [rbp+0x47],0x1
   14001c6de:	mov    QWORD PTR [rbp+0x57],r14
   14001c6e2:	call   0x14001ab98
   14001c6e7:	mov    edx,0x1
   14001c6ec:	mov    rcx,rdi
   14001c6ef:	call   0x1400250c0
   14001c6f4:	test   eax,eax
   14001c6f6:	jne    0x14001c6fd
   14001c6f8:	call   0x140018ff8
   14001c6fd:	cmp    DWORD PTR [rdi],0xe06d7363
   14001c703:	jne    0x14001c723
   14001c705:	cmp    DWORD PTR [rdi+0x18],0x4
   14001c709:	jne    0x14001c723
   14001c70b:	mov    eax,DWORD PTR [rdi+0x20]
   14001c70e:	sub    eax,0x19930520
   14001c713:	cmp    eax,0x2
   14001c716:	ja     0x14001c723
   14001c718:	cmp    QWORD PTR [rdi+0x30],r12
   14001c71c:	jne    0x14001c723
   14001c71e:	call   0x140018ff8
   14001c723:	call   0x14001ef6c
   14001c728:	cmp    QWORD PTR [rax+0x108],r12
   14001c72f:	je     0x14001c7c8
   14001c735:	call   0x14001ef6c
   14001c73a:	mov    r14,QWORD PTR [rax+0x108]
   14001c741:	call   0x14001ef6c
   14001c746:	mov    rdx,r14
   14001c749:	mov    rcx,rdi
   14001c74c:	mov    QWORD PTR [rax+0x108],r12
   14001c753:	call   0x14001ccec
   14001c758:	test   al,al
   14001c75a:	jne    0x14001c7c4
   14001c75c:	mov    r15d,r12d
   14001c75f:	cmp    DWORD PTR [r14],r12d
   14001c762:	jle    0x14001ca3a
   14001c768:	mov    rsi,r12
   14001c76b:	call   0x14001ab18
   14001c770:	movsxd rcx,DWORD PTR [r14+0x4]
   14001c774:	add    rax,rsi
   14001c777:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   14001c77c:	je     0x14001c799
   14001c77e:	call   0x14001ab18
   14001c783:	movsxd rcx,DWORD PTR [r14+0x4]
   14001c787:	add    rax,rsi
   14001c78a:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14001c78f:	call   0x14001ab18
   14001c794:	add    rax,rbx
   14001c797:	jmp    0x14001c79c
   14001c799:	mov    rax,r12
   14001c79c:	lea    rdx,[rip+0x2657d]        # 0x140042d20
   14001c7a3:	mov    rcx,rax
   14001c7a6:	call   0x1400196dc
   14001c7ab:	test   al,al
   14001c7ad:	jne    0x14001ca40
   14001c7b3:	inc    r15d
   14001c7b6:	add    rsi,0x14
   14001c7ba:	cmp    r15d,DWORD PTR [r14]
   14001c7bd:	jl     0x14001c76b
   14001c7bf:	jmp    0x14001ca3a
   14001c7c4:	mov    r14,QWORD PTR [rbp+0x57]
   14001c7c8:	cmp    DWORD PTR [rdi],0xe06d7363
   14001c7ce:	jne    0x14001ca02
   14001c7d4:	cmp    DWORD PTR [rdi+0x18],0x4
   14001c7d8:	jne    0x14001ca02
   14001c7de:	mov    eax,DWORD PTR [rdi+0x20]
   14001c7e1:	sub    eax,0x19930520
   14001c7e6:	cmp    eax,0x2
   14001c7e9:	ja     0x14001ca02
   14001c7ef:	cmp    DWORD PTR [rbx+0xc],r12d
   14001c7f3:	jbe    0x14001c947
   14001c7f9:	mov    r8d,DWORD PTR [rbp+0x77]
   14001c7fd:	lea    rax,[rbp-0x41]
   14001c801:	mov    QWORD PTR [rsp+0x30],r15
   14001c806:	mov    QWORD PTR [rsp+0x28],rax
   14001c80b:	lea    rax,[rbp-0x45]
   14001c80f:	mov    r9d,esi
   14001c812:	mov    rdx,rbx
   14001c815:	mov    rcx,r13
   14001c818:	mov    QWORD PTR [rsp+0x20],rax
   14001c81d:	call   0x14001a7bc
   14001c822:	mov    ecx,DWORD PTR [rbp-0x45]
   14001c825:	mov    edx,DWORD PTR [rbp-0x41]
   14001c828:	cmp    ecx,edx
   14001c82a:	jae    0x14001c947
   14001c830:	lea    r14,[rax+0x10]
   14001c834:	cmp    DWORD PTR [r14-0x10],esi
   14001c838:	jg     0x14001c929
   14001c83e:	cmp    esi,DWORD PTR [r14-0xc]
   14001c842:	jg     0x14001c929
   14001c848:	call   0x14001ab18
   14001c84d:	movsxd r12,DWORD PTR [r14]
   14001c850:	add    r12,rax
   14001c853:	mov    eax,DWORD PTR [r14-0x4]
   14001c857:	mov    DWORD PTR [rbp-0x3d],eax
   14001c85a:	test   eax,eax
   14001c85c:	jle    0x14001c923
   14001c862:	call   0x14001ab30
   14001c867:	mov    rcx,QWORD PTR [rdi+0x30]
   14001c86b:	movsxd rdx,DWORD PTR [rcx+0xc]
   14001c86f:	add    rax,0x4
   14001c873:	add    rax,rdx
   14001c876:	mov    QWORD PTR [rbp-0x31],rax
   14001c87a:	call   0x14001ab30
   14001c87f:	mov    rcx,QWORD PTR [rdi+0x30]
   14001c883:	movsxd rdx,DWORD PTR [rcx+0xc]
   14001c887:	mov    ecx,DWORD PTR [rax+rdx*1]
   14001c88a:	mov    DWORD PTR [rbp-0x39],ecx
   14001c88d:	test   ecx,ecx
   14001c88f:	jle    0x14001c8c8
   14001c891:	call   0x14001ab30
   14001c896:	mov    rcx,QWORD PTR [rbp-0x31]
   14001c89a:	mov    r8,QWORD PTR [rdi+0x30]
   14001c89e:	movsxd rcx,DWORD PTR [rcx]
   14001c8a1:	add    rax,rcx
   14001c8a4:	mov    rcx,r12
   14001c8a7:	mov    rdx,rax
   14001c8aa:	mov    QWORD PTR [rbp-0x29],rax
   14001c8ae:	call   0x14001d71c
   14001c8b3:	test   eax,eax
   14001c8b5:	jne    0x14001c8d3
   14001c8b7:	mov    eax,DWORD PTR [rbp-0x39]
   14001c8ba:	add    QWORD PTR [rbp-0x31],0x4
   14001c8bf:	dec    eax
   14001c8c1:	mov    DWORD PTR [rbp-0x39],eax
   14001c8c4:	test   eax,eax
   14001c8c6:	jg     0x14001c891
   14001c8c8:	mov    eax,DWORD PTR [rbp-0x3d]
   14001c8cb:	dec    eax
   14001c8cd:	add    r12,0x14
   14001c8d1:	jmp    0x14001c857
   14001c8d3:	mov    al,BYTE PTR [rbp+0x6f]
   14001c8d6:	mov    r8,QWORD PTR [rbp+0x57]
   14001c8da:	mov    r9,r15
   14001c8dd:	mov    BYTE PTR [rsp+0x58],al
   14001c8e1:	mov    al,BYTE PTR [rbp+0x47]
   14001c8e4:	mov    rdx,r13
   14001c8e7:	mov    BYTE PTR [rsp+0x50],al
   14001c8eb:	mov    rax,QWORD PTR [rbp+0x7f]
   14001c8ef:	mov    rcx,rdi
   14001c8f2:	mov    QWORD PTR [rsp+0x48],rax
   14001c8f7:	mov    eax,DWORD PTR [rbp+0x77]
   14001c8fa:	mov    BYTE PTR [rbp-0x49],0x1
   14001c8fe:	mov    DWORD PTR [rsp+0x40],eax
   14001c902:	lea    rax,[r14-0x10]
   14001c906:	mov    QWORD PTR [rsp+0x38],rax
   14001c90b:	mov    rax,QWORD PTR [rbp-0x29]
   14001c90f:	mov    QWORD PTR [rsp+0x30],rax
   14001c914:	mov    QWORD PTR [rsp+0x28],r12
   14001c919:	mov    QWORD PTR [rsp+0x20],rbx
   14001c91e:	call   0x14001c50c
   14001c923:	mov    edx,DWORD PTR [rbp-0x41]
   14001c926:	mov    ecx,DWORD PTR [rbp-0x45]
   14001c929:	inc    ecx
   14001c92b:	add    r14,0x14
   14001c92f:	mov    DWORD PTR [rbp-0x45],ecx
   14001c932:	cmp    ecx,edx
   14001c934:	jb     0x14001c834
   14001c93a:	xor    r12d,r12d
   14001c93d:	cmp    BYTE PTR [rbp-0x49],r12b
   14001c941:	jne    0x14001c9d4
   14001c947:	mov    eax,DWORD PTR [rbx]
   14001c949:	and    eax,0x1fffffff
   14001c94e:	cmp    eax,0x19930521
   14001c953:	jb     0x14001c9d4
   14001c955:	mov    esi,DWORD PTR [rbx+0x20]
   14001c958:	test   esi,esi
   14001c95a:	je     0x14001c969
   14001c95c:	movsxd rsi,esi
   14001c95f:	call   0x14001ab18
   14001c964:	add    rax,rsi
   14001c967:	jmp    0x14001c96c
   14001c969:	mov    rax,r12
   14001c96c:	test   rax,rax
   14001c96f:	je     0x14001c9d4
   14001c971:	test   esi,esi
   14001c973:	je     0x14001c986
   14001c975:	call   0x14001ab18
   14001c97a:	mov    rdx,rax
   14001c97d:	movsxd rax,DWORD PTR [rbx+0x20]
   14001c981:	add    rdx,rax
   14001c984:	jmp    0x14001c989
   14001c986:	mov    rdx,r12
   14001c989:	mov    rcx,rdi
   14001c98c:	call   0x14001ccec
   14001c991:	test   al,al
   14001c993:	jne    0x14001c9d4
   14001c995:	lea    r9,[rbp+0x47]
   14001c999:	mov    r8,rbx
   14001c99c:	mov    rdx,r15
   14001c99f:	mov    rcx,r13
   14001c9a2:	call   0x14001a6f0
   14001c9a7:	mov    cl,BYTE PTR [rbp+0x6f]
   14001c9aa:	mov    r8,QWORD PTR [rbp+0x57]
   14001c9ae:	mov    BYTE PTR [rsp+0x40],cl
   14001c9b2:	mov    QWORD PTR [rsp+0x38],r15
   14001c9b7:	mov    QWORD PTR [rsp+0x30],rbx
   14001c9bc:	or     DWORD PTR [rsp+0x28],0xffffffff
   14001c9c1:	mov    r9,rax
   14001c9c4:	mov    rdx,rdi
   14001c9c7:	mov    rcx,r13
   14001c9ca:	mov    QWORD PTR [rsp+0x20],r12
   14001c9cf:	call   0x14001abb4
   14001c9d4:	call   0x14001ef6c
   14001c9d9:	cmp    QWORD PTR [rax+0x108],r12
   14001c9e0:	je     0x14001c9e7
   14001c9e2:	call   0x140018ff8
   14001c9e7:	mov    rbx,QWORD PTR [rsp+0xf8]
   14001c9ef:	add    rsp,0xb0
   14001c9f6:	pop    r15
   14001c9f8:	pop    r14
   14001c9fa:	pop    r13
   14001c9fc:	pop    r12
   14001c9fe:	pop    rdi
   14001c9ff:	pop    rsi
   14001ca00:	pop    rbp
   14001ca01:	ret    
   14001ca02:	cmp    DWORD PTR [rbx+0xc],r12d
   14001ca06:	jbe    0x14001c9d4
   14001ca08:	cmp    BYTE PTR [rbp+0x6f],r12b
   14001ca0c:	jne    0x14001ca7e
   14001ca0e:	mov    rax,QWORD PTR [rbp+0x7f]
   14001ca12:	mov    r9,r15
   14001ca15:	mov    r8,r14
   14001ca18:	mov    QWORD PTR [rsp+0x38],rax
   14001ca1d:	mov    eax,DWORD PTR [rbp+0x77]
   14001ca20:	mov    rdx,r13
   14001ca23:	mov    DWORD PTR [rsp+0x30],eax
   14001ca27:	mov    rcx,rdi
   14001ca2a:	mov    DWORD PTR [rsp+0x28],esi
   14001ca2e:	mov    QWORD PTR [rsp+0x20],rbx
   14001ca33:	call   0x14001ca84
   14001ca38:	jmp    0x14001c9d4
   14001ca3a:	call   0x140019018
   14001ca3f:	int3   
   14001ca40:	mov    dl,0x1
   14001ca42:	mov    rcx,rdi
   14001ca45:	call   0x14001c42c
   14001ca4a:	lea    rax,[rip+0x14c9f]        # 0x1400316f0
   14001ca51:	lea    rdx,[rbp+0x47]
   14001ca55:	lea    rcx,[rbp-0x19]
   14001ca59:	mov    QWORD PTR [rbp+0x47],rax
   14001ca5d:	call   0x140019fe0
   14001ca62:	lea    rax,[rip+0x14c77]        # 0x1400316e0
   14001ca69:	lea    rdx,[rip+0x23030]        # 0x14003faa0
   14001ca70:	lea    rcx,[rbp-0x19]
   14001ca74:	mov    QWORD PTR [rbp-0x19],rax
   14001ca78:	call   0x14001a628
   14001ca7d:	int3   
   14001ca7e:	call   0x140019018
   14001ca83:	int3   
   14001ca84:	mov    QWORD PTR [rsp+0x10],rbx
   14001ca89:	mov    QWORD PTR [rsp+0x18],r8
   14001ca8e:	push   rbp
   14001ca8f:	push   rsi
   14001ca90:	push   rdi
   14001ca91:	push   r12
   14001ca93:	push   r13
   14001ca95:	push   r14
   14001ca97:	push   r15
   14001ca99:	sub    rsp,0x70
   14001ca9d:	cmp    DWORD PTR [rcx],0x80000003
   14001caa3:	mov    r15,r9
   14001caa6:	mov    rdi,r8
   14001caa9:	mov    r12,rdx
   14001caac:	mov    rsi,rcx
   14001caaf:	je     0x14001ccd1
   14001cab5:	call   0x14001ef6c
   14001caba:	mov    rbp,QWORD PTR [rsp+0xd0]
   14001cac2:	cmp    QWORD PTR [rax+0xe0],0x0
   14001caca:	je     0x14001cb2d
   14001cacc:	xor    ecx,ecx
   14001cace:	call   QWORD PTR [rip+0x1274c]        # 0x14002f220
   14001cad4:	mov    rbx,rax
   14001cad7:	call   0x14001ef6c
   14001cadc:	cmp    QWORD PTR [rax+0xe0],rbx
   14001cae3:	je     0x14001cb2d
   14001cae5:	cmp    DWORD PTR [rsi],0xe0434f4d
   14001caeb:	je     0x14001cb2d
   14001caed:	cmp    DWORD PTR [rsi],0xe0434352
   14001caf3:	mov    ebx,DWORD PTR [rsp+0xe0]
   14001cafa:	je     0x14001cb34
   14001cafc:	mov    rax,QWORD PTR [rsp+0xe8]
   14001cb04:	mov    r9,r15
   14001cb07:	mov    r8,rdi
   14001cb0a:	mov    QWORD PTR [rsp+0x30],rax
   14001cb0f:	mov    rdx,r12
   14001cb12:	mov    rcx,rsi
   14001cb15:	mov    DWORD PTR [rsp+0x28],ebx
   14001cb19:	mov    QWORD PTR [rsp+0x20],rbp
   14001cb1e:	call   0x14001aa20
   14001cb23:	test   eax,eax
   14001cb25:	jne    0x14001ccd1
   14001cb2b:	jmp    0x14001cb34
   14001cb2d:	mov    ebx,DWORD PTR [rsp+0xe0]
   14001cb34:	cmp    DWORD PTR [rbp+0xc],0x0
   14001cb38:	jne    0x14001cb3f
   14001cb3a:	call   0x140018ff8
   14001cb3f:	mov    r14d,DWORD PTR [rsp+0xd8]
   14001cb47:	lea    rax,[rsp+0x60]
   14001cb4c:	mov    QWORD PTR [rsp+0x30],r15
   14001cb51:	mov    QWORD PTR [rsp+0x28],rax
   14001cb56:	lea    rax,[rsp+0xb0]
   14001cb5e:	mov    r8d,ebx
   14001cb61:	mov    r9d,r14d
   14001cb64:	mov    rdx,rbp
   14001cb67:	mov    rcx,r12
   14001cb6a:	mov    QWORD PTR [rsp+0x20],rax
   14001cb6f:	call   0x14001a7bc
   14001cb74:	mov    ecx,DWORD PTR [rsp+0xb0]
   14001cb7b:	cmp    ecx,DWORD PTR [rsp+0x60]
   14001cb7f:	jae    0x14001ccd1
   14001cb85:	lea    rdi,[rax+0xc]
   14001cb89:	lea    r13,[rdi-0xc]
   14001cb8d:	cmp    r14d,DWORD PTR [r13+0x0]
   14001cb91:	jl     0x14001ccba
   14001cb97:	cmp    r14d,DWORD PTR [rdi-0x8]
   14001cb9b:	jg     0x14001ccba
   14001cba1:	call   0x14001ab18
   14001cba6:	movsxd rcx,DWORD PTR [rdi]
   14001cba9:	lea    rdx,[rcx+rcx*4]
   14001cbad:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001cbb1:	lea    rdx,[rcx+rdx*4]
   14001cbb5:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14001cbba:	je     0x14001cbdf
   14001cbbc:	call   0x14001ab18
   14001cbc1:	movsxd rcx,DWORD PTR [rdi]
   14001cbc4:	lea    rdx,[rcx+rcx*4]
   14001cbc8:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001cbcc:	lea    rdx,[rcx+rdx*4]
   14001cbd0:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14001cbd5:	call   0x14001ab18
   14001cbda:	add    rax,rbx
   14001cbdd:	jmp    0x14001cbe1
   14001cbdf:	xor    eax,eax
   14001cbe1:	test   rax,rax
   14001cbe4:	je     0x14001cc30
   14001cbe6:	call   0x14001ab18
   14001cbeb:	movsxd rcx,DWORD PTR [rdi]
   14001cbee:	lea    rdx,[rcx+rcx*4]
   14001cbf2:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001cbf6:	lea    rdx,[rcx+rdx*4]
   14001cbfa:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14001cbff:	je     0x14001cc24
   14001cc01:	call   0x14001ab18
   14001cc06:	movsxd rcx,DWORD PTR [rdi]
   14001cc09:	lea    rdx,[rcx+rcx*4]
   14001cc0d:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001cc11:	lea    rdx,[rcx+rdx*4]
   14001cc15:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14001cc1a:	call   0x14001ab18
   14001cc1f:	add    rax,rbx
   14001cc22:	jmp    0x14001cc26
   14001cc24:	xor    eax,eax
   14001cc26:	cmp    BYTE PTR [rax+0x10],0x0
   14001cc2a:	jne    0x14001ccb3
   14001cc30:	call   0x14001ab18
   14001cc35:	movsxd rcx,DWORD PTR [rdi]
   14001cc38:	lea    rdx,[rcx+rcx*4]
   14001cc3c:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001cc40:	lea    rdx,[rcx+rdx*4]
   14001cc44:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14001cc49:	jne    0x14001ccb3
   14001cc4b:	call   0x14001ab18
   14001cc50:	mov    ecx,DWORD PTR [rdi]
   14001cc52:	mov    r8,QWORD PTR [rsp+0xc0]
   14001cc5a:	mov    BYTE PTR [rsp+0x58],0x0
   14001cc5f:	mov    BYTE PTR [rsp+0x50],0x1
   14001cc64:	dec    ecx
   14001cc66:	movsxd rcx,ecx
   14001cc69:	mov    r9,r15
   14001cc6c:	lea    rdx,[rcx+rcx*4]
   14001cc70:	lea    rcx,[rax+rdx*4]
   14001cc74:	movsxd rax,DWORD PTR [rdi+0x4]
   14001cc78:	mov    rdx,r12
   14001cc7b:	add    rcx,rax
   14001cc7e:	mov    rax,QWORD PTR [rsp+0xe8]
   14001cc86:	mov    QWORD PTR [rsp+0x48],rax
   14001cc8b:	mov    eax,DWORD PTR [rsp+0xe0]
   14001cc92:	mov    DWORD PTR [rsp+0x40],eax
   14001cc96:	mov    QWORD PTR [rsp+0x38],r13
   14001cc9b:	and    QWORD PTR [rsp+0x30],0x0
   14001cca1:	mov    QWORD PTR [rsp+0x28],rcx
   14001cca6:	mov    rcx,rsi
   14001cca9:	mov    QWORD PTR [rsp+0x20],rbp
   14001ccae:	call   0x14001c50c
   14001ccb3:	mov    ecx,DWORD PTR [rsp+0xb0]
   14001ccba:	inc    ecx
   14001ccbc:	add    rdi,0x14
   14001ccc0:	mov    DWORD PTR [rsp+0xb0],ecx
   14001ccc7:	cmp    ecx,DWORD PTR [rsp+0x60]
   14001cccb:	jb     0x14001cb89
   14001ccd1:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001ccd9:	add    rsp,0x70
   14001ccdd:	pop    r15
   14001ccdf:	pop    r14
   14001cce1:	pop    r13
   14001cce3:	pop    r12
   14001cce5:	pop    rdi
   14001cce6:	pop    rsi
   14001cce7:	pop    rbp
   14001cce8:	ret    
   14001cce9:	int3   
   14001ccea:	int3   
   14001cceb:	int3   
   14001ccec:	mov    QWORD PTR [rsp+0x8],rbx
   14001ccf1:	mov    QWORD PTR [rsp+0x10],rbp
   14001ccf6:	mov    QWORD PTR [rsp+0x18],rsi
   14001ccfb:	push   rdi
   14001ccfc:	push   r12
   14001ccfe:	push   r13
   14001cd00:	push   r14
   14001cd02:	push   r15
   14001cd04:	sub    rsp,0x20
   14001cd08:	mov    rsi,rdx
   14001cd0b:	mov    r13,rcx
   14001cd0e:	test   rdx,rdx
   14001cd11:	je     0x14001cdb8
   14001cd17:	xor    edi,edi
   14001cd19:	xor    r14b,r14b
   14001cd1c:	cmp    DWORD PTR [rdx],edi
   14001cd1e:	jle    0x14001cd98
   14001cd20:	call   0x14001ab30
   14001cd25:	mov    rdx,rax
   14001cd28:	mov    rax,QWORD PTR [r13+0x30]
   14001cd2c:	movsxd r15,DWORD PTR [rax+0xc]
   14001cd30:	add    r15,0x4
   14001cd34:	add    r15,rdx
   14001cd37:	call   0x14001ab30
   14001cd3c:	mov    rdx,rax
   14001cd3f:	mov    rax,QWORD PTR [r13+0x30]
   14001cd43:	movsxd rcx,DWORD PTR [rax+0xc]
   14001cd47:	mov    ebp,DWORD PTR [rdx+rcx*1]
   14001cd4a:	test   ebp,ebp
   14001cd4c:	jle    0x14001cd92
   14001cd4e:	movsxd rax,edi
   14001cd51:	lea    r12,[rax+rax*4]
   14001cd55:	call   0x14001ab30
   14001cd5a:	mov    rbx,rax
   14001cd5d:	movsxd rax,DWORD PTR [r15]
   14001cd60:	add    rbx,rax
   14001cd63:	call   0x14001ab18
   14001cd68:	movsxd rcx,DWORD PTR [rsi+0x4]
   14001cd6c:	mov    r8,QWORD PTR [r13+0x30]
   14001cd70:	lea    rax,[rax+r12*4]
   14001cd74:	mov    rdx,rbx
   14001cd77:	add    rcx,rax
   14001cd7a:	call   0x14001d71c
   14001cd7f:	test   eax,eax
   14001cd81:	jne    0x14001cd8f
   14001cd83:	dec    ebp
   14001cd85:	add    r15,0x4
   14001cd89:	test   ebp,ebp
   14001cd8b:	jg     0x14001cd55
   14001cd8d:	jmp    0x14001cd92
   14001cd8f:	mov    r14b,0x1
   14001cd92:	inc    edi
   14001cd94:	cmp    edi,DWORD PTR [rsi]
   14001cd96:	jl     0x14001cd20
   14001cd98:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cd9d:	mov    rbp,QWORD PTR [rsp+0x58]
   14001cda2:	mov    rsi,QWORD PTR [rsp+0x60]
   14001cda7:	mov    al,r14b
   14001cdaa:	add    rsp,0x20
   14001cdae:	pop    r15
   14001cdb0:	pop    r14
   14001cdb2:	pop    r13
   14001cdb4:	pop    r12
   14001cdb6:	pop    rdi
   14001cdb7:	ret    
   14001cdb8:	call   0x140018ff8
   14001cdbd:	call   0x140019018
   14001cdc2:	int3   
   14001cdc3:	int3   
   14001cdc4:	sub    rsp,0x28
   14001cdc8:	call   0x14001ef6c
   14001cdcd:	xor    ecx,ecx
   14001cdcf:	cmp    DWORD PTR [rax+0x100],ecx
   14001cdd5:	setne  al
   14001cdd8:	add    rsp,0x28
   14001cddc:	ret    
   14001cddd:	int3   
   14001cdde:	int3   
   14001cddf:	int3   
   14001cde0:	movsxd rax,DWORD PTR [rdx]
   14001cde3:	add    rax,rcx
   14001cde6:	cmp    DWORD PTR [rdx+0x4],0x0
   14001cdea:	jl     0x14001ce02
   14001cdec:	movsxd r9,DWORD PTR [rdx+0x4]
   14001cdf0:	movsxd rdx,DWORD PTR [rdx+0x8]
   14001cdf4:	mov    rcx,QWORD PTR [r9+rcx*1]
   14001cdf8:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14001cdfc:	add    r8,r9
   14001cdff:	add    rax,r8
   14001ce02:	ret    
   14001ce03:	int3   
   14001ce04:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce09:	mov    QWORD PTR [rsp+0x10],rsi
   14001ce0e:	mov    QWORD PTR [rsp+0x18],rdi
   14001ce13:	push   r14
   14001ce15:	sub    rsp,0x20
   14001ce19:	mov    rdi,r9
   14001ce1c:	mov    r14,rcx
   14001ce1f:	test   DWORD PTR [r8],0x80000000
   14001ce26:	je     0x14001ce2d
   14001ce28:	mov    rsi,rdx
   14001ce2b:	jmp    0x14001ce34
   14001ce2d:	movsxd rsi,DWORD PTR [r8+0x8]
   14001ce31:	add    rsi,QWORD PTR [rdx]
   14001ce34:	call   0x14001cebc
   14001ce39:	dec    eax
   14001ce3b:	je     0x14001ce74
   14001ce3d:	dec    eax
   14001ce3f:	jne    0x14001ce9c
   14001ce41:	xor    ebx,ebx
   14001ce43:	cmp    DWORD PTR [rdi+0x18],ebx
   14001ce46:	je     0x14001ce57
   14001ce48:	call   0x14001ab30
   14001ce4d:	mov    rbx,rax
   14001ce50:	movsxd rax,DWORD PTR [rdi+0x18]
   14001ce54:	add    rbx,rax
   14001ce57:	lea    rdx,[rdi+0x8]
   14001ce5b:	mov    rcx,QWORD PTR [r14+0x28]
   14001ce5f:	call   0x14001cde0
   14001ce64:	mov    rdx,rax
   14001ce67:	mov    r8d,0x1
   14001ce6d:	mov    rcx,rsi
   14001ce70:	call   rbx
   14001ce72:	jmp    0x14001ce9c
   14001ce74:	xor    ebx,ebx
   14001ce76:	cmp    DWORD PTR [rdi+0x18],ebx
   14001ce79:	je     0x14001ce87
   14001ce7b:	call   0x14001ab30
   14001ce80:	movsxd rbx,DWORD PTR [rdi+0x18]
   14001ce84:	add    rbx,rax
   14001ce87:	lea    rdx,[rdi+0x8]
   14001ce8b:	mov    rcx,QWORD PTR [r14+0x28]
   14001ce8f:	call   0x14001cde0
   14001ce94:	mov    rdx,rax
   14001ce97:	mov    rcx,rsi
   14001ce9a:	call   rbx
   14001ce9c:	jmp    0x14001cea4
   14001ce9e:	call   0x140019018
   14001cea3:	nop
   14001cea4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cea9:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ceae:	mov    rdi,QWORD PTR [rsp+0x40]
   14001ceb3:	add    rsp,0x20
   14001ceb7:	pop    r14
   14001ceb9:	ret    
   14001ceba:	int3   
   14001cebb:	int3   
   14001cebc:	mov    QWORD PTR [rsp+0x8],rbx
   14001cec1:	mov    QWORD PTR [rsp+0x10],rsi
   14001cec6:	mov    QWORD PTR [rsp+0x18],rdi
   14001cecb:	push   r13
   14001cecd:	push   r14
   14001cecf:	push   r15
   14001ced1:	sub    rsp,0x30
   14001ced5:	mov    r14,r9
   14001ced8:	mov    rbx,r8
   14001cedb:	mov    rsi,rdx
   14001cede:	mov    r13,rcx
   14001cee1:	xor    edi,edi
   14001cee3:	mov    r15d,DWORD PTR [r8+0x4]
   14001cee7:	test   r15d,r15d
   14001ceea:	je     0x14001cefa
   14001ceec:	movsxd r15,r15d
   14001ceef:	call   0x14001ab18
   14001cef4:	lea    rdx,[r15+rax*1]
   14001cef8:	jmp    0x14001cefd
   14001cefa:	mov    rdx,rdi
   14001cefd:	test   rdx,rdx
   14001cf00:	je     0x14001d0ef
   14001cf06:	test   r15d,r15d
   14001cf09:	je     0x14001cf1c
   14001cf0b:	call   0x14001ab18
   14001cf10:	mov    rcx,rax
   14001cf13:	movsxd rax,DWORD PTR [rbx+0x4]
   14001cf17:	add    rcx,rax
   14001cf1a:	jmp    0x14001cf1f
   14001cf1c:	mov    rcx,rdi
   14001cf1f:	cmp    BYTE PTR [rcx+0x10],dil
   14001cf23:	je     0x14001d0ef
   14001cf29:	cmp    DWORD PTR [rbx+0x8],edi
   14001cf2c:	jne    0x14001cf3a
   14001cf2e:	test   DWORD PTR [rbx],0x80000000
   14001cf34:	je     0x14001d0ef
   14001cf3a:	mov    ecx,DWORD PTR [rbx]
   14001cf3c:	test   ecx,ecx
   14001cf3e:	js     0x14001cf4a
   14001cf40:	movsxd rax,DWORD PTR [rbx+0x8]
   14001cf44:	add    rax,QWORD PTR [rsi]
   14001cf47:	mov    rsi,rax
   14001cf4a:	test   cl,cl
   14001cf4c:	jns    0x14001cfa5
   14001cf4e:	test   BYTE PTR [r14],0x10
   14001cf52:	je     0x14001cfa5
   14001cf54:	mov    rax,QWORD PTR [rip+0x26ffd]        # 0x140043f58
   14001cf5b:	test   rax,rax
   14001cf5e:	je     0x14001cfa5
   14001cf60:	call   rax
   14001cf62:	mov    r15,rax
   14001cf65:	mov    ebx,0x1
   14001cf6a:	mov    edx,ebx
   14001cf6c:	mov    rcx,rax
   14001cf6f:	call   0x1400250c0
   14001cf74:	test   eax,eax
   14001cf76:	je     0x14001d0df
   14001cf7c:	mov    edx,ebx
   14001cf7e:	mov    rcx,rsi
   14001cf81:	call   0x1400250c0
   14001cf86:	test   eax,eax
   14001cf88:	je     0x14001d0df
   14001cf8e:	mov    QWORD PTR [rsi],r15
   14001cf91:	mov    rcx,r15
   14001cf94:	lea    rdx,[r14+0x8]
   14001cf98:	call   0x14001cde0
   14001cf9d:	mov    QWORD PTR [rsi],rax
   14001cfa0:	jmp    0x14001d0e5
   14001cfa5:	mov    ebx,0x1
   14001cfaa:	test   cl,0x8
   14001cfad:	je     0x14001cfdd
   14001cfaf:	mov    edx,ebx
   14001cfb1:	mov    rcx,QWORD PTR [r13+0x28]
   14001cfb5:	call   0x1400250c0
   14001cfba:	test   eax,eax
   14001cfbc:	je     0x14001d0df
   14001cfc2:	mov    edx,ebx
   14001cfc4:	mov    rcx,rsi
   14001cfc7:	call   0x1400250c0
   14001cfcc:	test   eax,eax
   14001cfce:	je     0x14001d0df
   14001cfd4:	mov    rcx,QWORD PTR [r13+0x28]
   14001cfd8:	mov    QWORD PTR [rsi],rcx
   14001cfdb:	jmp    0x14001cf94
   14001cfdd:	test   BYTE PTR [r14],bl
   14001cfe0:	je     0x14001d033
   14001cfe2:	mov    edx,ebx
   14001cfe4:	mov    rcx,QWORD PTR [r13+0x28]
   14001cfe8:	call   0x1400250c0
   14001cfed:	test   eax,eax
   14001cfef:	je     0x14001d0df
   14001cff5:	mov    edx,ebx
   14001cff7:	mov    rcx,rsi
   14001cffa:	call   0x1400250c0
   14001cfff:	test   eax,eax
   14001d001:	je     0x14001d0df
   14001d007:	movsxd r8,DWORD PTR [r14+0x14]
   14001d00b:	mov    rdx,QWORD PTR [r13+0x28]
   14001d00f:	mov    rcx,rsi
   14001d012:	call   0x140018a90
   14001d017:	cmp    DWORD PTR [r14+0x14],0x8
   14001d01c:	jne    0x14001d0e5
   14001d022:	cmp    QWORD PTR [rsi],rdi
   14001d025:	je     0x14001d0e5
   14001d02b:	mov    rcx,QWORD PTR [rsi]
   14001d02e:	jmp    0x14001cf94
   14001d033:	cmp    DWORD PTR [r14+0x18],edi
   14001d037:	je     0x14001d04a
   14001d039:	call   0x14001ab30
   14001d03e:	mov    rcx,rax
   14001d041:	movsxd rax,DWORD PTR [r14+0x18]
   14001d045:	add    rcx,rax
   14001d048:	jmp    0x14001d04d
   14001d04a:	mov    rcx,rdi
   14001d04d:	mov    edx,ebx
   14001d04f:	test   rcx,rcx
   14001d052:	mov    rcx,QWORD PTR [r13+0x28]
   14001d056:	jne    0x14001d090
   14001d058:	call   0x1400250c0
   14001d05d:	test   eax,eax
   14001d05f:	je     0x14001d0df
   14001d061:	mov    edx,ebx
   14001d063:	mov    rcx,rsi
   14001d066:	call   0x1400250c0
   14001d06b:	test   eax,eax
   14001d06d:	je     0x14001d0df
   14001d06f:	movsxd rbx,DWORD PTR [r14+0x14]
   14001d073:	lea    rdx,[r14+0x8]
   14001d077:	mov    rcx,QWORD PTR [r13+0x28]
   14001d07b:	call   0x14001cde0
   14001d080:	mov    rdx,rax
   14001d083:	mov    r8,rbx
   14001d086:	mov    rcx,rsi
   14001d089:	call   0x140018a90
   14001d08e:	jmp    0x14001d0e5
   14001d090:	call   0x1400250c0
   14001d095:	test   eax,eax
   14001d097:	je     0x14001d0df
   14001d099:	mov    edx,ebx
   14001d09b:	mov    rcx,rsi
   14001d09e:	call   0x1400250c0
   14001d0a3:	test   eax,eax
   14001d0a5:	je     0x14001d0df
   14001d0a7:	cmp    DWORD PTR [r14+0x18],edi
   14001d0ab:	je     0x14001d0be
   14001d0ad:	call   0x14001ab30
   14001d0b2:	mov    rcx,rax
   14001d0b5:	movsxd rax,DWORD PTR [r14+0x18]
   14001d0b9:	add    rcx,rax
   14001d0bc:	jmp    0x14001d0c1
   14001d0be:	mov    rcx,rdi
   14001d0c1:	call   0x1400250c0
   14001d0c6:	test   eax,eax
   14001d0c8:	je     0x14001d0df
   14001d0ca:	mov    al,BYTE PTR [r14]
   14001d0cd:	and    al,0x4
   14001d0cf:	neg    al
   14001d0d1:	sbb    ecx,ecx
   14001d0d3:	neg    ecx
   14001d0d5:	add    ecx,ebx
   14001d0d7:	mov    edi,ecx
   14001d0d9:	mov    DWORD PTR [rsp+0x20],ecx
   14001d0dd:	jmp    0x14001d0e5
   14001d0df:	call   0x140018ff8
   14001d0e4:	nop
   14001d0e5:	mov    eax,edi
   14001d0e7:	jmp    0x14001d0f1
   14001d0e9:	call   0x140019018
   14001d0ee:	nop
   14001d0ef:	xor    eax,eax
   14001d0f1:	mov    rbx,QWORD PTR [rsp+0x50]
   14001d0f6:	mov    rsi,QWORD PTR [rsp+0x58]
   14001d0fb:	mov    rdi,QWORD PTR [rsp+0x60]
   14001d100:	add    rsp,0x30
   14001d104:	pop    r15
   14001d106:	pop    r14
   14001d108:	pop    r13
   14001d10a:	ret    
   14001d10b:	int3   
   14001d10c:	rex push rbx
   14001d10e:	push   rsi
   14001d10f:	push   rdi
   14001d110:	push   r12
   14001d112:	push   r13
   14001d114:	push   r14
   14001d116:	push   r15
   14001d118:	sub    rsp,0x90
   14001d11f:	mov    rdi,rcx
   14001d122:	xor    r15d,r15d
   14001d125:	mov    DWORD PTR [rsp+0x20],r15d
   14001d12a:	and    DWORD PTR [rsp+0xd0],r15d
   14001d132:	and    QWORD PTR [rsp+0x40],r15
   14001d137:	and    QWORD PTR [rsp+0xe8],r15
   14001d13f:	call   0x14001ef6c
   14001d144:	mov    r13,QWORD PTR [rax+0xf8]
   14001d14b:	mov    QWORD PTR [rsp+0x50],r13
   14001d150:	call   0x14001ef6c
   14001d155:	mov    rax,QWORD PTR [rax+0xf0]
   14001d15c:	mov    QWORD PTR [rsp+0xe0],rax
   14001d164:	mov    rsi,QWORD PTR [rdi+0x50]
   14001d168:	mov    QWORD PTR [rsp+0xd8],rsi
   14001d170:	mov    rax,QWORD PTR [rdi+0x48]
   14001d174:	mov    QWORD PTR [rsp+0x48],rax
   14001d179:	mov    rbx,QWORD PTR [rdi+0x40]
   14001d17d:	mov    rax,QWORD PTR [rdi+0x30]
   14001d181:	mov    QWORD PTR [rsp+0x58],rax
   14001d186:	mov    r14,QWORD PTR [rdi+0x28]
   14001d18a:	mov    QWORD PTR [rsp+0x60],r14
   14001d18f:	call   0x14001ef6c
   14001d194:	mov    QWORD PTR [rax+0xf0],rsi
   14001d19b:	call   0x14001ef6c
   14001d1a0:	mov    QWORD PTR [rax+0xf8],rbx
   14001d1a7:	call   0x14001ef6c
   14001d1ac:	mov    rdx,QWORD PTR [rax+0xf0]
   14001d1b3:	mov    rdx,QWORD PTR [rdx+0x28]
   14001d1b7:	lea    rcx,[rsp+0x78]
   14001d1bc:	call   0x14001aa74
   14001d1c1:	mov    r12,rax
   14001d1c4:	mov    QWORD PTR [rsp+0x38],rax
   14001d1c9:	cmp    QWORD PTR [rdi+0x58],r15
   14001d1cd:	je     0x14001d1ee
   14001d1cf:	mov    DWORD PTR [rsp+0xd0],0x1
   14001d1da:	call   0x14001ef6c
   14001d1df:	mov    rcx,QWORD PTR [rax+0x138]
   14001d1e6:	mov    QWORD PTR [rsp+0xe8],rcx
   14001d1ee:	mov    r8d,0x100
   14001d1f4:	mov    rdx,r14
   14001d1f7:	mov    rcx,QWORD PTR [rsp+0x58]
   14001d1fc:	call   0x1400250e0
   14001d201:	mov    rbx,rax
   14001d204:	mov    QWORD PTR [rsp+0x40],rax
   14001d209:	mov    rdi,QWORD PTR [rsp+0xe0]
   14001d211:	jmp    0x14001d28e
   14001d213:	mov    DWORD PTR [rsp+0x20],0x1
   14001d21b:	call   0x14001ef6c
   14001d220:	and    DWORD PTR [rax+0x460],0x0
   14001d227:	mov    rsi,QWORD PTR [rsp+0xd8]
   14001d22f:	cmp    DWORD PTR [rsp+0xd0],0x0
   14001d237:	je     0x14001d25a
   14001d239:	mov    dl,0x1
   14001d23b:	mov    rcx,rsi
   14001d23e:	call   0x14001c42c
   14001d243:	mov    rax,QWORD PTR [rsp+0xe8]
   14001d24b:	lea    r9,[rax+0x20]
   14001d24f:	mov    r8d,DWORD PTR [rax+0x18]
   14001d253:	mov    edx,DWORD PTR [rax+0x4]
   14001d256:	mov    ecx,DWORD PTR [rax]
   14001d258:	jmp    0x14001d267
   14001d25a:	lea    r9,[rsi+0x20]
   14001d25e:	mov    r8d,DWORD PTR [rsi+0x18]
   14001d262:	mov    edx,DWORD PTR [rsi+0x4]
   14001d265:	mov    ecx,DWORD PTR [rsi]
   14001d267:	call   QWORD PTR [rip+0x11f93]        # 0x14002f200
   14001d26d:	mov    r15d,DWORD PTR [rsp+0x20]
   14001d272:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d277:	mov    r13,QWORD PTR [rsp+0x50]
   14001d27c:	mov    rdi,QWORD PTR [rsp+0xe0]
   14001d284:	mov    r14,QWORD PTR [rsp+0x60]
   14001d289:	mov    r12,QWORD PTR [rsp+0x38]
   14001d28e:	mov    rcx,r12
   14001d291:	call   0x14001aab8
   14001d296:	test   r15d,r15d
   14001d299:	jne    0x14001d2cd
   14001d29b:	cmp    DWORD PTR [rsi],0xe06d7363
   14001d2a1:	jne    0x14001d2cd
   14001d2a3:	cmp    DWORD PTR [rsi+0x18],0x4
   14001d2a7:	jne    0x14001d2cd
   14001d2a9:	mov    eax,DWORD PTR [rsi+0x20]
   14001d2ac:	sub    eax,0x19930520
   14001d2b1:	cmp    eax,0x2
   14001d2b4:	ja     0x14001d2cd
   14001d2b6:	mov    rcx,QWORD PTR [rsi+0x28]
   14001d2ba:	call   0x14001ab48
   14001d2bf:	test   eax,eax
   14001d2c1:	je     0x14001d2cd
   14001d2c3:	mov    dl,0x1
   14001d2c5:	mov    rcx,rsi
   14001d2c8:	call   0x14001c42c
   14001d2cd:	call   0x14001ef6c
   14001d2d2:	mov    QWORD PTR [rax+0xf0],rdi
   14001d2d9:	call   0x14001ef6c
   14001d2de:	mov    QWORD PTR [rax+0xf8],r13
   14001d2e5:	mov    rax,QWORD PTR [rsp+0x48]
   14001d2ea:	movsxd rcx,DWORD PTR [rax+0x1c]
   14001d2ee:	mov    rax,QWORD PTR [r14]
   14001d2f1:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14001d2f9:	mov    rax,rbx
   14001d2fc:	add    rsp,0x90
   14001d303:	pop    r15
   14001d305:	pop    r14
   14001d307:	pop    r13
   14001d309:	pop    r12
   14001d30b:	pop    rdi
   14001d30c:	pop    rsi
   14001d30d:	pop    rbx
   14001d30e:	ret    
   14001d30f:	int3   
   14001d310:	sub    rsp,0x28
   14001d314:	mov    rax,QWORD PTR [rcx]
   14001d317:	cmp    DWORD PTR [rax],0xe0434352
   14001d31d:	je     0x14001d331
   14001d31f:	cmp    DWORD PTR [rax],0xe0434f4d
   14001d325:	je     0x14001d331
   14001d327:	cmp    DWORD PTR [rax],0xe06d7363
   14001d32d:	jne    0x14001d34a
   14001d32f:	jmp    0x14001d351
   14001d331:	call   0x14001ef6c
   14001d336:	cmp    DWORD PTR [rax+0x100],0x0
   14001d33d:	jle    0x14001d34a
   14001d33f:	call   0x14001ef6c
   14001d344:	dec    DWORD PTR [rax+0x100]
   14001d34a:	xor    eax,eax
   14001d34c:	add    rsp,0x28
   14001d350:	ret    
   14001d351:	call   0x14001ef6c
   14001d356:	and    DWORD PTR [rax+0x100],0x0
   14001d35d:	call   0x140019018
   14001d362:	int3   
   14001d363:	int3   
   14001d364:	mov    rax,rsp
   14001d367:	mov    DWORD PTR [rax+0x20],r9d
   14001d36b:	mov    QWORD PTR [rax+0x18],r8
   14001d36f:	mov    QWORD PTR [rax+0x10],rdx
   14001d373:	mov    QWORD PTR [rax+0x8],rcx
   14001d377:	push   rbx
   14001d378:	push   rsi
   14001d379:	push   rdi
   14001d37a:	push   r12
   14001d37c:	push   r13
   14001d37e:	push   r14
   14001d380:	push   r15
   14001d382:	sub    rsp,0x30
   14001d386:	mov    r12d,r9d
   14001d389:	mov    rsi,r8
   14001d38c:	mov    r13,rdx
   14001d38f:	mov    r15,rcx
   14001d392:	call   0x14001ab18
   14001d397:	mov    QWORD PTR [rsp+0x28],rax
   14001d39c:	mov    r8,rsi
   14001d39f:	mov    rdx,r13
   14001d3a2:	mov    rcx,r15
   14001d3a5:	call   0x140022970
   14001d3aa:	mov    edi,eax
   14001d3ac:	call   0x14001ef6c
   14001d3b1:	inc    DWORD PTR [rax+0x100]
   14001d3b7:	cmp    edi,0xffffffff
   14001d3ba:	je     0x14001d4ad
   14001d3c0:	cmp    edi,r12d
   14001d3c3:	jle    0x14001d4ad
   14001d3c9:	cmp    edi,0xffffffff
   14001d3cc:	jle    0x14001d3d3
   14001d3ce:	cmp    edi,DWORD PTR [rsi+0x4]
   14001d3d1:	jl     0x14001d3d8
   14001d3d3:	call   0x140018ff8
   14001d3d8:	movsxd r14,edi
   14001d3db:	call   0x14001ab18
   14001d3e0:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001d3e4:	lea    rax,[rax+r14*8]
   14001d3e8:	mov    edi,DWORD PTR [rcx+rax*1]
   14001d3eb:	mov    DWORD PTR [rsp+0x20],edi
   14001d3ef:	call   0x14001ab18
   14001d3f4:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001d3f8:	lea    rax,[rax+r14*8]
   14001d3fc:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14001d401:	je     0x14001d41f
   14001d403:	call   0x14001ab18
   14001d408:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001d40c:	lea    rax,[rax+r14*8]
   14001d410:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14001d415:	call   0x14001ab18
   14001d41a:	add    rax,rbx
   14001d41d:	jmp    0x14001d421
   14001d41f:	xor    eax,eax
   14001d421:	test   rax,rax
   14001d424:	je     0x14001d484
   14001d426:	mov    r9d,edi
   14001d429:	mov    r8,rsi
   14001d42c:	mov    rdx,r13
   14001d42f:	mov    rcx,r15
   14001d432:	call   0x1400229c4
   14001d437:	call   0x14001ab18
   14001d43c:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001d440:	lea    rax,[rax+r14*8]
   14001d444:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14001d449:	je     0x14001d467
   14001d44b:	call   0x14001ab18
   14001d450:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001d454:	lea    rax,[rax+r14*8]
   14001d458:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14001d45d:	call   0x14001ab18
   14001d462:	add    rax,rbx
   14001d465:	jmp    0x14001d469
   14001d467:	xor    eax,eax
   14001d469:	mov    r8d,0x103
   14001d46f:	mov    rdx,r15
   14001d472:	mov    rcx,rax
   14001d475:	call   0x1400250e0
   14001d47a:	mov    rcx,QWORD PTR [rsp+0x28]
   14001d47f:	call   0x14001ab7c
   14001d484:	jmp    0x14001d4a4
   14001d486:	mov    r12d,DWORD PTR [rsp+0x88]
   14001d48e:	mov    rsi,QWORD PTR [rsp+0x80]
   14001d496:	mov    r13,QWORD PTR [rsp+0x78]
   14001d49b:	mov    r15,QWORD PTR [rsp+0x70]
   14001d4a0:	mov    edi,DWORD PTR [rsp+0x20]
   14001d4a4:	mov    DWORD PTR [rsp+0x24],edi
   14001d4a8:	jmp    0x14001d3b7
   14001d4ad:	call   0x14001ef6c
   14001d4b2:	cmp    DWORD PTR [rax+0x100],0x0
   14001d4b9:	jle    0x14001d4c6
   14001d4bb:	call   0x14001ef6c
   14001d4c0:	dec    DWORD PTR [rax+0x100]
   14001d4c6:	cmp    edi,0xffffffff
   14001d4c9:	je     0x14001d4d5
   14001d4cb:	cmp    edi,r12d
   14001d4ce:	jle    0x14001d4d5
   14001d4d0:	call   0x140018ff8
   14001d4d5:	mov    r9d,edi
   14001d4d8:	mov    r8,rsi
   14001d4db:	mov    rdx,r13
   14001d4de:	mov    rcx,r15
   14001d4e1:	call   0x1400229c4
   14001d4e6:	add    rsp,0x30
   14001d4ea:	pop    r15
   14001d4ec:	pop    r14
   14001d4ee:	pop    r13
   14001d4f0:	pop    r12
   14001d4f2:	pop    rdi
   14001d4f3:	pop    rsi
   14001d4f4:	pop    rbx
   14001d4f5:	ret    
   14001d4f6:	int3   
   14001d4f7:	int3   
   14001d4f8:	mov    QWORD PTR [rsp+0x8],rbx
   14001d4fd:	mov    QWORD PTR [rsp+0x10],rbp
   14001d502:	mov    QWORD PTR [rsp+0x18],rsi
   14001d507:	push   rdi
   14001d508:	push   r12
   14001d50a:	push   r14
   14001d50c:	sub    rsp,0x40
   14001d510:	mov    rbp,r9
   14001d513:	mov    r14,r8
   14001d516:	mov    rsi,rdx
   14001d519:	mov    rbx,rcx
   14001d51c:	call   0x14001ef6c
   14001d521:	mov    rdi,QWORD PTR [rsp+0x80]
   14001d529:	cmp    DWORD PTR [rax+0x460],0x0
   14001d530:	mov    edx,0x1fffffff
   14001d535:	mov    r8d,0x80000029
   14001d53b:	mov    r9d,0x80000026
   14001d541:	mov    r12d,0x1
   14001d547:	jne    0x14001d581
   14001d549:	cmp    DWORD PTR [rbx],0xe06d7363
   14001d54f:	je     0x14001d581
   14001d551:	cmp    DWORD PTR [rbx],r8d
   14001d554:	jne    0x14001d566
   14001d556:	cmp    DWORD PTR [rbx+0x18],0xf
   14001d55a:	jne    0x14001d566
   14001d55c:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14001d564:	je     0x14001d581
   14001d566:	cmp    DWORD PTR [rbx],r9d
   14001d569:	je     0x14001d581
   14001d56b:	mov    ecx,DWORD PTR [rdi]
   14001d56d:	and    ecx,edx
   14001d56f:	cmp    ecx,0x19930522
   14001d575:	jb     0x14001d581
   14001d577:	test   BYTE PTR [rdi+0x24],r12b
   14001d57b:	jne    0x14001d700
   14001d581:	mov    eax,DWORD PTR [rbx+0x4]
   14001d584:	test   al,0x66
   14001d586:	je     0x14001d61e
   14001d58c:	cmp    DWORD PTR [rdi+0x4],0x0
   14001d590:	je     0x14001d700
   14001d596:	cmp    DWORD PTR [rsp+0x88],0x0
   14001d59e:	jne    0x14001d700
   14001d5a4:	and    eax,0x20
   14001d5a7:	je     0x14001d5e7
   14001d5a9:	cmp    DWORD PTR [rbx],r9d
   14001d5ac:	jne    0x14001d5e7
   14001d5ae:	mov    r8,QWORD PTR [r14+0xf8]
   14001d5b5:	mov    rdx,rbp
   14001d5b8:	mov    rcx,rdi
   14001d5bb:	call   0x140022a14
   14001d5c0:	mov    ebx,eax
   14001d5c2:	cmp    eax,0xffffffff
   14001d5c5:	jl     0x14001d5cc
   14001d5c7:	cmp    eax,DWORD PTR [rdi+0x4]
   14001d5ca:	jl     0x14001d5d1
   14001d5cc:	call   0x140018ff8
   14001d5d1:	mov    r9d,ebx
   14001d5d4:	mov    rcx,rsi
   14001d5d7:	mov    rdx,rbp
   14001d5da:	mov    r8,rdi
   14001d5dd:	call   0x14001d364
   14001d5e2:	jmp    0x14001d700
   14001d5e7:	test   eax,eax
   14001d5e9:	je     0x14001d60b
   14001d5eb:	cmp    DWORD PTR [rbx],r8d
   14001d5ee:	jne    0x14001d60b
   14001d5f0:	mov    esi,DWORD PTR [rbx+0x38]
   14001d5f3:	cmp    esi,0xffffffff
   14001d5f6:	jl     0x14001d5fd
   14001d5f8:	cmp    esi,DWORD PTR [rdi+0x4]
   14001d5fb:	jl     0x14001d602
   14001d5fd:	call   0x140018ff8
   14001d602:	mov    rcx,QWORD PTR [rbx+0x28]
   14001d606:	mov    r9d,esi
   14001d609:	jmp    0x14001d5d7
   14001d60b:	mov    r8,rdi
   14001d60e:	mov    rdx,rbp
   14001d611:	mov    rcx,rsi
   14001d614:	call   0x14001a8e8
   14001d619:	jmp    0x14001d700
   14001d61e:	cmp    DWORD PTR [rdi+0xc],0x0
   14001d622:	jne    0x14001d652
   14001d624:	mov    eax,DWORD PTR [rdi]
   14001d626:	and    eax,edx
   14001d628:	cmp    eax,0x19930521
   14001d62d:	jb     0x14001d700
   14001d633:	cmp    DWORD PTR [rdi+0x20],0x0
   14001d637:	je     0x14001d647
   14001d639:	call   0x14001ab18
   14001d63e:	movsxd rcx,DWORD PTR [rdi+0x20]
   14001d642:	add    rax,rcx
   14001d645:	jmp    0x14001d649
   14001d647:	xor    eax,eax
   14001d649:	test   rax,rax
   14001d64c:	je     0x14001d700
   14001d652:	cmp    DWORD PTR [rbx],0xe06d7363
   14001d658:	jne    0x14001d6c7
   14001d65a:	cmp    DWORD PTR [rbx+0x18],0x3
   14001d65e:	jb     0x14001d6c7
   14001d660:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14001d667:	jbe    0x14001d6c7
   14001d669:	mov    rax,QWORD PTR [rbx+0x30]
   14001d66d:	cmp    DWORD PTR [rax+0x8],0x0
   14001d671:	je     0x14001d685
   14001d673:	call   0x14001ab30
   14001d678:	mov    rcx,QWORD PTR [rbx+0x30]
   14001d67c:	movsxd r10,DWORD PTR [rcx+0x8]
   14001d680:	add    r10,rax
   14001d683:	jmp    0x14001d688
   14001d685:	xor    r10d,r10d
   14001d688:	test   r10,r10
   14001d68b:	je     0x14001d6c7
   14001d68d:	movzx  eax,BYTE PTR [rsp+0x98]
   14001d695:	mov    r9,rbp
   14001d698:	mov    r8,r14
   14001d69b:	mov    DWORD PTR [rsp+0x38],eax
   14001d69f:	mov    rax,QWORD PTR [rsp+0x90]
   14001d6a7:	mov    rdx,rsi
   14001d6aa:	mov    QWORD PTR [rsp+0x30],rax
   14001d6af:	mov    eax,DWORD PTR [rsp+0x88]
   14001d6b6:	mov    rcx,rbx
   14001d6b9:	mov    DWORD PTR [rsp+0x28],eax
   14001d6bd:	mov    QWORD PTR [rsp+0x20],rdi
   14001d6c2:	call   r10
   14001d6c5:	jmp    0x14001d703
   14001d6c7:	mov    rax,QWORD PTR [rsp+0x90]
   14001d6cf:	mov    r9,rbp
   14001d6d2:	mov    r8,r14
   14001d6d5:	mov    QWORD PTR [rsp+0x38],rax
   14001d6da:	mov    eax,DWORD PTR [rsp+0x88]
   14001d6e1:	mov    rdx,rsi
   14001d6e4:	mov    DWORD PTR [rsp+0x30],eax
   14001d6e8:	mov    al,BYTE PTR [rsp+0x98]
   14001d6ef:	mov    rcx,rbx
   14001d6f2:	mov    BYTE PTR [rsp+0x28],al
   14001d6f6:	mov    QWORD PTR [rsp+0x20],rdi
   14001d6fb:	call   0x14001c5d0
   14001d700:	mov    eax,r12d
   14001d703:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d708:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d70d:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d712:	add    rsp,0x40
   14001d716:	pop    r14
   14001d718:	pop    r12
   14001d71a:	pop    rdi
   14001d71b:	ret    
   14001d71c:	mov    rax,rsp
   14001d71f:	mov    QWORD PTR [rax+0x8],rbx
   14001d723:	mov    QWORD PTR [rax+0x10],rbp
   14001d727:	mov    QWORD PTR [rax+0x18],rsi
   14001d72b:	mov    QWORD PTR [rax+0x20],rdi
   14001d72f:	push   r14
   14001d731:	sub    rsp,0x20
   14001d735:	mov    esi,DWORD PTR [rcx+0x4]
   14001d738:	xor    ebx,ebx
   14001d73a:	mov    r14,r8
   14001d73d:	mov    rbp,rdx
   14001d740:	mov    rdi,rcx
   14001d743:	test   esi,esi
   14001d745:	je     0x14001d755
   14001d747:	movsxd rsi,esi
   14001d74a:	call   0x14001ab18
   14001d74f:	lea    rcx,[rsi+rax*1]
   14001d753:	jmp    0x14001d758
   14001d755:	mov    rcx,rbx
   14001d758:	test   rcx,rcx
   14001d75b:	je     0x14001d829
   14001d761:	test   esi,esi
   14001d763:	je     0x14001d774
   14001d765:	movsxd rsi,DWORD PTR [rdi+0x4]
   14001d769:	call   0x14001ab18
   14001d76e:	lea    rcx,[rsi+rax*1]
   14001d772:	jmp    0x14001d777
   14001d774:	mov    rcx,rbx
   14001d777:	cmp    BYTE PTR [rcx+0x10],bl
   14001d77a:	je     0x14001d829
   14001d780:	test   BYTE PTR [rdi],0x80
   14001d783:	je     0x14001d78f
   14001d785:	test   BYTE PTR [rbp+0x0],0x10
   14001d789:	jne    0x14001d829
   14001d78f:	test   esi,esi
   14001d791:	je     0x14001d7a4
   14001d793:	call   0x14001ab18
   14001d798:	mov    rsi,rax
   14001d79b:	movsxd rax,DWORD PTR [rdi+0x4]
   14001d79f:	add    rsi,rax
   14001d7a2:	jmp    0x14001d7a7
   14001d7a4:	mov    rsi,rbx
   14001d7a7:	call   0x14001ab30
   14001d7ac:	mov    rcx,rax
   14001d7af:	movsxd rax,DWORD PTR [rbp+0x4]
   14001d7b3:	add    rcx,rax
   14001d7b6:	cmp    rsi,rcx
   14001d7b9:	je     0x14001d7f5
   14001d7bb:	cmp    DWORD PTR [rdi+0x4],ebx
   14001d7be:	je     0x14001d7d1
   14001d7c0:	call   0x14001ab18
   14001d7c5:	mov    rsi,rax
   14001d7c8:	movsxd rax,DWORD PTR [rdi+0x4]
   14001d7cc:	add    rsi,rax
   14001d7cf:	jmp    0x14001d7d4
   14001d7d1:	mov    rsi,rbx
   14001d7d4:	call   0x14001ab30
   14001d7d9:	movsxd rdx,DWORD PTR [rbp+0x4]
   14001d7dd:	lea    rcx,[rsi+0x10]
   14001d7e1:	add    rdx,0x10
   14001d7e5:	add    rdx,rax
   14001d7e8:	call   0x14001da60
   14001d7ed:	test   eax,eax
   14001d7ef:	je     0x14001d7f5
   14001d7f1:	xor    eax,eax
   14001d7f3:	jmp    0x14001d82e
   14001d7f5:	mov    al,0x2
   14001d7f7:	test   BYTE PTR [rbp+0x0],al
   14001d7fa:	je     0x14001d801
   14001d7fc:	test   BYTE PTR [rdi],0x8
   14001d7ff:	je     0x14001d825
   14001d801:	test   BYTE PTR [r14],0x1
   14001d805:	je     0x14001d80c
   14001d807:	test   BYTE PTR [rdi],0x1
   14001d80a:	je     0x14001d825
   14001d80c:	test   BYTE PTR [r14],0x4
   14001d810:	je     0x14001d817
   14001d812:	test   BYTE PTR [rdi],0x4
   14001d815:	je     0x14001d825
   14001d817:	test   BYTE PTR [r14],al
   14001d81a:	je     0x14001d820
   14001d81c:	test   BYTE PTR [rdi],al
   14001d81e:	je     0x14001d825
   14001d820:	mov    ebx,0x1
   14001d825:	mov    eax,ebx
   14001d827:	jmp    0x14001d82e
   14001d829:	mov    eax,0x1
   14001d82e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d833:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d838:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d83d:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d842:	add    rsp,0x20
   14001d846:	pop    r14
   14001d848:	ret    
   14001d849:	int3   
   14001d84a:	int3   
   14001d84b:	int3   
   14001d84c:	mov    QWORD PTR [rsp+0x10],rdi
   14001d851:	mov    QWORD PTR [rsp+0x20],r14
   14001d856:	push   rbp
   14001d857:	mov    rbp,rsp
   14001d85a:	sub    rsp,0x70
   14001d85e:	movsxd rdi,ecx
   14001d861:	lea    rcx,[rbp-0x20]
   14001d865:	call   0x140019058
   14001d86a:	cmp    edi,0x100
   14001d870:	jae    0x14001d8cf
   14001d872:	mov    rdx,QWORD PTR [rbp-0x20]
   14001d876:	cmp    DWORD PTR [rdx+0xd4],0x1
   14001d87d:	jle    0x14001d895
   14001d87f:	lea    r8,[rbp-0x20]
   14001d883:	mov    edx,0x1
   14001d888:	mov    ecx,edi
   14001d88a:	call   0x140024d40
   14001d88f:	mov    rdx,QWORD PTR [rbp-0x20]
   14001d893:	jmp    0x14001d8a3
   14001d895:	mov    rax,QWORD PTR [rdx+0x108]
   14001d89c:	movzx  eax,WORD PTR [rax+rdi*2]
   14001d8a0:	and    eax,0x1
   14001d8a3:	test   eax,eax
   14001d8a5:	je     0x14001d8b7
   14001d8a7:	mov    rax,QWORD PTR [rdx+0x110]
   14001d8ae:	movzx  eax,BYTE PTR [rax+rdi*1]
   14001d8b2:	jmp    0x14001d97b
   14001d8b7:	cmp    BYTE PTR [rbp-0x8],0x0
   14001d8bb:	je     0x14001d8c8
   14001d8bd:	mov    rax,QWORD PTR [rbp-0x10]
   14001d8c1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001d8c8:	mov    eax,edi
   14001d8ca:	jmp    0x14001d98c
   14001d8cf:	mov    rax,QWORD PTR [rbp-0x20]
   14001d8d3:	cmp    DWORD PTR [rax+0xd4],0x1
   14001d8da:	jle    0x14001d907
   14001d8dc:	mov    r14d,edi
   14001d8df:	lea    rdx,[rbp-0x20]
   14001d8e3:	sar    r14d,0x8
   14001d8e7:	movzx  ecx,r14b
   14001d8eb:	call   0x1400251a4
   14001d8f0:	test   eax,eax
   14001d8f2:	je     0x14001d907
   14001d8f4:	mov    BYTE PTR [rbp+0x10],r14b
   14001d8f8:	mov    BYTE PTR [rbp+0x11],dil
   14001d8fc:	mov    BYTE PTR [rbp+0x12],0x0
   14001d900:	mov    ecx,0x2
   14001d905:	jmp    0x14001d91f
   14001d907:	call   0x14001b864
   14001d90c:	mov    ecx,0x1
   14001d911:	mov    DWORD PTR [rax],0x2a
   14001d917:	mov    BYTE PTR [rbp+0x10],dil
   14001d91b:	mov    BYTE PTR [rbp+0x11],0x0
   14001d91f:	mov    rdx,QWORD PTR [rbp-0x20]
   14001d923:	mov    DWORD PTR [rsp+0x40],0x1
   14001d92b:	lea    r9,[rbp+0x10]
   14001d92f:	mov    eax,DWORD PTR [rdx+0x4]
   14001d932:	mov    rdx,QWORD PTR [rdx+0x138]
   14001d939:	mov    r8d,0x100
   14001d93f:	mov    DWORD PTR [rsp+0x38],eax
   14001d943:	lea    rax,[rbp+0x20]
   14001d947:	mov    DWORD PTR [rsp+0x30],0x3
   14001d94f:	mov    QWORD PTR [rsp+0x28],rax
   14001d954:	mov    DWORD PTR [rsp+0x20],ecx
   14001d958:	lea    rcx,[rbp-0x20]
   14001d95c:	call   0x14001c144
   14001d961:	test   eax,eax
   14001d963:	je     0x14001d8b7
   14001d969:	cmp    eax,0x1
   14001d96c:	movzx  eax,BYTE PTR [rbp+0x20]
   14001d970:	je     0x14001d97b
   14001d972:	movzx  ecx,BYTE PTR [rbp+0x21]
   14001d976:	shl    eax,0x8
   14001d979:	or     eax,ecx
   14001d97b:	cmp    BYTE PTR [rbp-0x8],0x0
   14001d97f:	je     0x14001d98c
   14001d981:	mov    rcx,QWORD PTR [rbp-0x10]
   14001d985:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001d98c:	lea    r11,[rsp+0x70]
   14001d991:	mov    rdi,QWORD PTR [r11+0x18]
   14001d995:	mov    r14,QWORD PTR [r11+0x28]
   14001d999:	mov    rsp,r11
   14001d99c:	pop    rbp
   14001d99d:	ret    
   14001d99e:	int3   
   14001d99f:	int3   
   14001d9a0:	cmp    DWORD PTR [rip+0x26fc9],0x0        # 0x140044970
   14001d9a7:	jne    0x14001d9b7
   14001d9a9:	lea    eax,[rcx-0x41]
   14001d9ac:	cmp    eax,0x19
   14001d9af:	ja     0x14001d9b4
   14001d9b1:	add    ecx,0x20
   14001d9b4:	mov    eax,ecx
   14001d9b6:	ret    
   14001d9b7:	xor    edx,edx
   14001d9b9:	jmp    0x14001d84c
   14001d9be:	int3   
   14001d9bf:	int3   
   14001d9c0:	test   r8,r8
   14001d9c3:	je     0x14001d9d1
   14001d9c5:	cmp    BYTE PTR [rcx],dl
   14001d9c7:	je     0x14001d9d1
   14001d9c9:	inc    rcx
   14001d9cc:	dec    r8
   14001d9cf:	jne    0x14001d9c5
   14001d9d1:	neg    r8
   14001d9d4:	sbb    rax,rax
   14001d9d7:	and    rax,rcx
   14001d9da:	ret    
   14001d9db:	int3   
   14001d9dc:	mov    eax,DWORD PTR [rip+0x23c7e]        # 0x140041660
   14001d9e2:	mov    r8d,edx
   14001d9e5:	and    ecx,edx
   14001d9e7:	not    r8d
   14001d9ea:	and    r8d,eax
   14001d9ed:	or     r8d,ecx
   14001d9f0:	mov    DWORD PTR [rip+0x23c69],r8d        # 0x140041660
   14001d9f7:	ret    
   14001d9f8:	sub    rsp,0x28
   14001d9fc:	call   0x140025230
   14001da01:	test   rax,rax
   14001da04:	je     0x14001da10
   14001da06:	mov    ecx,0x16
   14001da0b:	call   0x140025260
   14001da10:	test   BYTE PTR [rip+0x23c49],0x2        # 0x140041660
   14001da17:	je     0x14001da42
   14001da19:	mov    ecx,0x17
   14001da1e:	call   0x14002cf10
   14001da23:	test   eax,eax
   14001da25:	je     0x14001da2e
   14001da27:	mov    ecx,0x7
   14001da2c:	int    0x29
   14001da2e:	mov    r8d,0x1
   14001da34:	mov    edx,0x40000015
   14001da39:	lea    ecx,[r8+0x2]
   14001da3d:	call   0x14001fe54
   14001da42:	mov    ecx,0x3
   14001da47:	call   0x14001e96c
   14001da4c:	int3   
   14001da4d:	int3   
   14001da4e:	int3   
   14001da4f:	int3   
   14001da50:	int3   
   14001da51:	int3   
   14001da52:	int3   
   14001da53:	int3   
   14001da54:	int3   
   14001da55:	int3   
   14001da56:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001da60:	sub    rdx,rcx
   14001da63:	test   cl,0x7
   14001da66:	je     0x14001da7c
   14001da68:	movzx  eax,BYTE PTR [rcx]
   14001da6b:	cmp    al,BYTE PTR [rcx+rdx*1]
   14001da6e:	jne    0x14001dabf
   14001da70:	inc    rcx
   14001da73:	test   al,al
   14001da75:	je     0x14001dabc
   14001da77:	test   cl,0x7
   14001da7a:	jne    0x14001da68
   14001da7c:	movabs r11,0x8080808080808080
   14001da86:	movabs r10,0xfefefefefefefeff
   14001da90:	lea    eax,[ecx+edx*1]
   14001da94:	and    eax,0xfff
   14001da99:	cmp    eax,0xff8
   14001da9e:	ja     0x14001da68
   14001daa0:	mov    rax,QWORD PTR [rcx]
   14001daa3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   14001daa7:	jne    0x14001da68
   14001daa9:	lea    r9,[r10+rax*1]
   14001daad:	not    rax
   14001dab0:	add    rcx,0x8
   14001dab4:	and    rax,r9
   14001dab7:	test   r11,rax
   14001daba:	je     0x14001da90
   14001dabc:	xor    eax,eax
   14001dabe:	ret    
   14001dabf:	sbb    rax,rax
   14001dac2:	or     rax,0x1
   14001dac6:	ret    
   14001dac7:	int3   
   14001dac8:	mov    rax,rsp
   14001dacb:	mov    QWORD PTR [rax+0x8],rbx
   14001dacf:	mov    QWORD PTR [rax+0x10],rbp
   14001dad3:	mov    QWORD PTR [rax+0x18],rsi
   14001dad7:	mov    QWORD PTR [rax+0x20],rdi
   14001dadb:	push   r14
   14001dadd:	sub    rsp,0x20
   14001dae1:	mov    rbx,QWORD PTR [r9+0x38]
   14001dae5:	mov    rsi,rdx
   14001dae8:	mov    r14,r8
   14001daeb:	mov    rbp,rcx
   14001daee:	lea    r8,[rbx+0x4]
   14001daf2:	mov    rdx,r9
   14001daf5:	mov    rcx,rsi
   14001daf8:	mov    rdi,r9
   14001dafb:	call   0x14001c37c
   14001db00:	mov    r11d,DWORD PTR [rbx+0x4]
   14001db04:	mov    r10d,DWORD PTR [rbp+0x4]
   14001db08:	mov    eax,r11d
   14001db0b:	and    r11d,0x2
   14001db0f:	mov    r8d,0x1
   14001db15:	and    eax,r8d
   14001db18:	and    r10b,0x66
   14001db1c:	cmove  r11d,eax
   14001db20:	test   r11d,r11d
   14001db23:	je     0x14001db39
   14001db25:	mov    r9,rdi
   14001db28:	mov    r8,r14
   14001db2b:	mov    rdx,rsi
   14001db2e:	mov    rcx,rbp
   14001db31:	call   0x14001acd8
   14001db36:	mov    r8d,eax
   14001db39:	mov    rbx,QWORD PTR [rsp+0x30]
   14001db3e:	mov    rbp,QWORD PTR [rsp+0x38]
   14001db43:	mov    rsi,QWORD PTR [rsp+0x40]
   14001db48:	mov    rdi,QWORD PTR [rsp+0x48]
   14001db4d:	mov    eax,r8d
   14001db50:	add    rsp,0x20
   14001db54:	pop    r14
   14001db56:	ret    
   14001db57:	int3   
   14001db58:	mov    QWORD PTR [rsp+0x20],rbx
   14001db5d:	push   rdi
   14001db5e:	sub    rsp,0x40
   14001db62:	mov    rbx,rcx
   14001db65:	call   QWORD PTR [rip+0x11725]        # 0x14002f290
   14001db6b:	mov    rdi,QWORD PTR [rbx+0xf8]
   14001db72:	lea    rdx,[rsp+0x50]
   14001db77:	xor    r8d,r8d
   14001db7a:	mov    rcx,rdi
   14001db7d:	call   QWORD PTR [rip+0x116ed]        # 0x14002f270
   14001db83:	test   rax,rax
   14001db86:	je     0x14001dbba
   14001db88:	and    QWORD PTR [rsp+0x38],0x0
   14001db8e:	mov    rdx,QWORD PTR [rsp+0x50]
   14001db93:	lea    rcx,[rsp+0x58]
   14001db98:	mov    QWORD PTR [rsp+0x30],rcx
   14001db9d:	lea    rcx,[rsp+0x60]
   14001dba2:	mov    r9,rax
   14001dba5:	mov    QWORD PTR [rsp+0x28],rcx
   14001dbaa:	xor    ecx,ecx
   14001dbac:	mov    r8,rdi
   14001dbaf:	mov    QWORD PTR [rsp+0x20],rbx
   14001dbb4:	call   QWORD PTR [rip+0x116de]        # 0x14002f298
   14001dbba:	mov    rbx,QWORD PTR [rsp+0x68]
   14001dbbf:	add    rsp,0x40
   14001dbc3:	pop    rdi
   14001dbc4:	ret    
   14001dbc5:	int3   
   14001dbc6:	int3   
   14001dbc7:	int3   
   14001dbc8:	rex push rbx
   14001dbca:	push   rsi
   14001dbcb:	push   rdi
   14001dbcc:	sub    rsp,0x40
   14001dbd0:	mov    rbx,rcx
   14001dbd3:	call   QWORD PTR [rip+0x116b7]        # 0x14002f290
   14001dbd9:	mov    rsi,QWORD PTR [rbx+0xf8]
   14001dbe0:	xor    edi,edi
   14001dbe2:	lea    rdx,[rsp+0x60]
   14001dbe7:	xor    r8d,r8d
   14001dbea:	mov    rcx,rsi
   14001dbed:	call   QWORD PTR [rip+0x1167d]        # 0x14002f270
   14001dbf3:	test   rax,rax
   14001dbf6:	je     0x14001dc31
   14001dbf8:	and    QWORD PTR [rsp+0x38],0x0
   14001dbfe:	mov    rdx,QWORD PTR [rsp+0x60]
   14001dc03:	lea    rcx,[rsp+0x68]
   14001dc08:	mov    QWORD PTR [rsp+0x30],rcx
   14001dc0d:	lea    rcx,[rsp+0x70]
   14001dc12:	mov    r9,rax
   14001dc15:	mov    QWORD PTR [rsp+0x28],rcx
   14001dc1a:	xor    ecx,ecx
   14001dc1c:	mov    r8,rsi
   14001dc1f:	mov    QWORD PTR [rsp+0x20],rbx
   14001dc24:	call   QWORD PTR [rip+0x1166e]        # 0x14002f298
   14001dc2a:	inc    edi
   14001dc2c:	cmp    edi,0x2
   14001dc2f:	jl     0x14001dbe2
   14001dc31:	add    rsp,0x40
   14001dc35:	pop    rdi
   14001dc36:	pop    rsi
   14001dc37:	pop    rbx
   14001dc38:	ret    
   14001dc39:	int3   
   14001dc3a:	int3   
   14001dc3b:	int3   
   14001dc3c:	mov    rax,QWORD PTR [rip+0x27fbd]        # 0x140045c00
   14001dc43:	xor    rax,QWORD PTR [rip+0x23a06]        # 0x140041650
   14001dc4a:	je     0x14001dc4f
   14001dc4c:	rex.W jmp rax
   14001dc4f:	rex.W jmp QWORD PTR [rip+0x1166a]        # 0x14002f2c0
   14001dc56:	int3   
   14001dc57:	int3   
   14001dc58:	mov    rax,QWORD PTR [rip+0x27fa9]        # 0x140045c08
   14001dc5f:	xor    rax,QWORD PTR [rip+0x239ea]        # 0x140041650
   14001dc66:	je     0x14001dc6b
   14001dc68:	rex.W jmp rax
   14001dc6b:	rex.W jmp QWORD PTR [rip+0x11666]        # 0x14002f2d8
   14001dc72:	int3   
   14001dc73:	int3   
   14001dc74:	mov    rax,QWORD PTR [rip+0x27f95]        # 0x140045c10
   14001dc7b:	xor    rax,QWORD PTR [rip+0x239ce]        # 0x140041650
   14001dc82:	je     0x14001dc87
   14001dc84:	rex.W jmp rax
   14001dc87:	rex.W jmp QWORD PTR [rip+0x1163a]        # 0x14002f2c8
   14001dc8e:	int3   
   14001dc8f:	int3   
   14001dc90:	mov    rax,QWORD PTR [rip+0x27f81]        # 0x140045c18
   14001dc97:	xor    rax,QWORD PTR [rip+0x239b2]        # 0x140041650
   14001dc9e:	je     0x14001dca3
   14001dca0:	rex.W jmp rax
   14001dca3:	rex.W jmp QWORD PTR [rip+0x11626]        # 0x14002f2d0
   14001dcaa:	int3   
   14001dcab:	int3   
   14001dcac:	sub    rsp,0x98
   14001dcb3:	lea    rcx,[rsp+0x20]
   14001dcb8:	call   QWORD PTR [rip+0x11622]        # 0x14002f2e0
   14001dcbe:	test   BYTE PTR [rsp+0x5c],0x1
   14001dcc3:	movzx  ecx,WORD PTR [rsp+0x60]
   14001dcc8:	mov    eax,0xa
   14001dccd:	cmovne eax,ecx
   14001dcd0:	add    rsp,0x98
   14001dcd7:	ret    
   14001dcd8:	sub    rsp,0x28
   14001dcdc:	mov    rax,QWORD PTR [rip+0x27f3d]        # 0x140045c20
   14001dce3:	xor    rax,QWORD PTR [rip+0x23966]        # 0x140041650
   14001dcea:	je     0x14001dcf3
   14001dcec:	add    rsp,0x28
   14001dcf0:	rex.W jmp rax
   14001dcf3:	call   QWORD PTR [rip+0x115b7]        # 0x14002f2b0
   14001dcf9:	mov    eax,0x1
   14001dcfe:	add    rsp,0x28
   14001dd02:	ret    
   14001dd03:	int3   
   14001dd04:	rex push rbx
   14001dd06:	sub    rsp,0x20
   14001dd0a:	mov    eax,DWORD PTR [rip+0x23960]        # 0x140041670
   14001dd10:	xor    ebx,ebx
   14001dd12:	test   eax,eax
   14001dd14:	jns    0x14001dd45
   14001dd16:	mov    rax,QWORD PTR [rip+0x27fcb]        # 0x140045ce8
   14001dd1d:	mov    DWORD PTR [rsp+0x30],ebx
   14001dd21:	xor    rax,QWORD PTR [rip+0x23928]        # 0x140041650
   14001dd28:	je     0x14001dd3b
   14001dd2a:	lea    rcx,[rsp+0x30]
   14001dd2f:	xor    edx,edx
   14001dd31:	call   rax
   14001dd33:	cmp    eax,0x7a
   14001dd36:	lea    eax,[rbx+0x1]
   14001dd39:	je     0x14001dd3d
   14001dd3b:	mov    eax,ebx
   14001dd3d:	mov    DWORD PTR [rip+0x2392d],eax        # 0x140041670
   14001dd43:	test   eax,eax
   14001dd45:	setg   bl
   14001dd48:	mov    eax,ebx
   14001dd4a:	add    rsp,0x20
   14001dd4e:	pop    rbx
   14001dd4f:	ret    
   14001dd50:	rex push rbx
   14001dd52:	sub    rsp,0x20
   14001dd56:	lea    rcx,[rip+0x139a3]        # 0x140031700
   14001dd5d:	call   QWORD PTR [rip+0x11585]        # 0x14002f2e8
   14001dd63:	lea    rdx,[rip+0x139b6]        # 0x140031720
   14001dd6a:	mov    rcx,rax
   14001dd6d:	mov    rbx,rax
   14001dd70:	call   QWORD PTR [rip+0x1136a]        # 0x14002f0e0
   14001dd76:	lea    rdx,[rip+0x139b3]        # 0x140031730
   14001dd7d:	mov    rcx,rbx
   14001dd80:	xor    rax,QWORD PTR [rip+0x238c9]        # 0x140041650
   14001dd87:	mov    QWORD PTR [rip+0x27e72],rax        # 0x140045c00
   14001dd8e:	call   QWORD PTR [rip+0x1134c]        # 0x14002f0e0
   14001dd94:	lea    rdx,[rip+0x1399d]        # 0x140031738
   14001dd9b:	xor    rax,QWORD PTR [rip+0x238ae]        # 0x140041650
   14001dda2:	mov    rcx,rbx
   14001dda5:	mov    QWORD PTR [rip+0x27e5c],rax        # 0x140045c08
   14001ddac:	call   QWORD PTR [rip+0x1132e]        # 0x14002f0e0
   14001ddb2:	lea    rdx,[rip+0x1398f]        # 0x140031748
   14001ddb9:	xor    rax,QWORD PTR [rip+0x23890]        # 0x140041650
   14001ddc0:	mov    rcx,rbx
   14001ddc3:	mov    QWORD PTR [rip+0x27e46],rax        # 0x140045c10
   14001ddca:	call   QWORD PTR [rip+0x11310]        # 0x14002f0e0
   14001ddd0:	lea    rdx,[rip+0x13981]        # 0x140031758
   14001ddd7:	xor    rax,QWORD PTR [rip+0x23872]        # 0x140041650
   14001ddde:	mov    rcx,rbx
   14001dde1:	mov    QWORD PTR [rip+0x27e30],rax        # 0x140045c18
   14001dde8:	call   QWORD PTR [rip+0x112f2]        # 0x14002f0e0
   14001ddee:	lea    rdx,[rip+0x13983]        # 0x140031778
   14001ddf5:	xor    rax,QWORD PTR [rip+0x23854]        # 0x140041650
   14001ddfc:	mov    rcx,rbx
   14001ddff:	mov    QWORD PTR [rip+0x27e1a],rax        # 0x140045c20
   14001de06:	call   QWORD PTR [rip+0x112d4]        # 0x14002f0e0
   14001de0c:	lea    rdx,[rip+0x13975]        # 0x140031788
   14001de13:	xor    rax,QWORD PTR [rip+0x23836]        # 0x140041650
   14001de1a:	mov    rcx,rbx
   14001de1d:	mov    QWORD PTR [rip+0x27e04],rax        # 0x140045c28
   14001de24:	call   QWORD PTR [rip+0x112b6]        # 0x14002f0e0
   14001de2a:	lea    rdx,[rip+0x1396f]        # 0x1400317a0
   14001de31:	xor    rax,QWORD PTR [rip+0x23818]        # 0x140041650
   14001de38:	mov    rcx,rbx
   14001de3b:	mov    QWORD PTR [rip+0x27dee],rax        # 0x140045c30
   14001de42:	call   QWORD PTR [rip+0x11298]        # 0x14002f0e0
   14001de48:	lea    rdx,[rip+0x13969]        # 0x1400317b8
   14001de4f:	xor    rax,QWORD PTR [rip+0x237fa]        # 0x140041650
   14001de56:	mov    rcx,rbx
   14001de59:	mov    QWORD PTR [rip+0x27dd8],rax        # 0x140045c38
   14001de60:	call   QWORD PTR [rip+0x1127a]        # 0x14002f0e0
   14001de66:	lea    rdx,[rip+0x13963]        # 0x1400317d0
   14001de6d:	xor    rax,QWORD PTR [rip+0x237dc]        # 0x140041650
   14001de74:	mov    rcx,rbx
   14001de77:	mov    QWORD PTR [rip+0x27dc2],rax        # 0x140045c40
   14001de7e:	call   QWORD PTR [rip+0x1125c]        # 0x14002f0e0
   14001de84:	lea    rdx,[rip+0x1395d]        # 0x1400317e8
   14001de8b:	xor    rax,QWORD PTR [rip+0x237be]        # 0x140041650
   14001de92:	mov    rcx,rbx
   14001de95:	mov    QWORD PTR [rip+0x27dac],rax        # 0x140045c48
   14001de9c:	call   QWORD PTR [rip+0x1123e]        # 0x14002f0e0
   14001dea2:	lea    rdx,[rip+0x1395f]        # 0x140031808
   14001dea9:	xor    rax,QWORD PTR [rip+0x237a0]        # 0x140041650
   14001deb0:	mov    rcx,rbx
   14001deb3:	mov    QWORD PTR [rip+0x27d96],rax        # 0x140045c50
   14001deba:	call   QWORD PTR [rip+0x11220]        # 0x14002f0e0
   14001dec0:	lea    rdx,[rip+0x13959]        # 0x140031820
   14001dec7:	xor    rax,QWORD PTR [rip+0x23782]        # 0x140041650
   14001dece:	mov    rcx,rbx
   14001ded1:	mov    QWORD PTR [rip+0x27d80],rax        # 0x140045c58
   14001ded8:	call   QWORD PTR [rip+0x11202]        # 0x14002f0e0
   14001dede:	lea    rdx,[rip+0x13953]        # 0x140031838
   14001dee5:	xor    rax,QWORD PTR [rip+0x23764]        # 0x140041650
   14001deec:	mov    rcx,rbx
   14001deef:	mov    QWORD PTR [rip+0x27d6a],rax        # 0x140045c60
   14001def6:	call   QWORD PTR [rip+0x111e4]        # 0x14002f0e0
   14001defc:	lea    rdx,[rip+0x1394d]        # 0x140031850
   14001df03:	xor    rax,QWORD PTR [rip+0x23746]        # 0x140041650
   14001df0a:	mov    rcx,rbx
   14001df0d:	mov    QWORD PTR [rip+0x27d54],rax        # 0x140045c68
   14001df14:	call   QWORD PTR [rip+0x111c6]        # 0x14002f0e0
   14001df1a:	lea    rdx,[rip+0x13947]        # 0x140031868
   14001df21:	xor    rax,QWORD PTR [rip+0x23728]        # 0x140041650
   14001df28:	mov    rcx,rbx
   14001df2b:	mov    QWORD PTR [rip+0x27d3e],rax        # 0x140045c70
   14001df32:	call   QWORD PTR [rip+0x111a8]        # 0x14002f0e0
   14001df38:	xor    rax,QWORD PTR [rip+0x23711]        # 0x140041650
   14001df3f:	lea    rdx,[rip+0x13942]        # 0x140031888
   14001df46:	mov    rcx,rbx
   14001df49:	mov    QWORD PTR [rip+0x27d28],rax        # 0x140045c78
   14001df50:	call   QWORD PTR [rip+0x1118a]        # 0x14002f0e0
   14001df56:	lea    rdx,[rip+0x1394b]        # 0x1400318a8
   14001df5d:	xor    rax,QWORD PTR [rip+0x236ec]        # 0x140041650
   14001df64:	mov    rcx,rbx
   14001df67:	mov    QWORD PTR [rip+0x27d12],rax        # 0x140045c80
   14001df6e:	call   QWORD PTR [rip+0x1116c]        # 0x14002f0e0
   14001df74:	lea    rdx,[rip+0x1394d]        # 0x1400318c8
   14001df7b:	xor    rax,QWORD PTR [rip+0x236ce]        # 0x140041650
   14001df82:	mov    rcx,rbx
   14001df85:	mov    QWORD PTR [rip+0x27cfc],rax        # 0x140045c88
   14001df8c:	call   QWORD PTR [rip+0x1114e]        # 0x14002f0e0
   14001df92:	lea    rdx,[rip+0x1394f]        # 0x1400318e8
   14001df99:	xor    rax,QWORD PTR [rip+0x236b0]        # 0x140041650
   14001dfa0:	mov    rcx,rbx
   14001dfa3:	mov    QWORD PTR [rip+0x27ce6],rax        # 0x140045c90
   14001dfaa:	call   QWORD PTR [rip+0x11130]        # 0x14002f0e0
   14001dfb0:	lea    rdx,[rip+0x13949]        # 0x140031900
   14001dfb7:	xor    rax,QWORD PTR [rip+0x23692]        # 0x140041650
   14001dfbe:	mov    rcx,rbx
   14001dfc1:	mov    QWORD PTR [rip+0x27cd0],rax        # 0x140045c98
   14001dfc8:	call   QWORD PTR [rip+0x11112]        # 0x14002f0e0
   14001dfce:	lea    rdx,[rip+0x1394b]        # 0x140031920
   14001dfd5:	xor    rax,QWORD PTR [rip+0x23674]        # 0x140041650
   14001dfdc:	mov    rcx,rbx
   14001dfdf:	mov    QWORD PTR [rip+0x27cba],rax        # 0x140045ca0
   14001dfe6:	call   QWORD PTR [rip+0x110f4]        # 0x14002f0e0
   14001dfec:	lea    rdx,[rip+0x13945]        # 0x140031938
   14001dff3:	xor    rax,QWORD PTR [rip+0x23656]        # 0x140041650
   14001dffa:	mov    rcx,rbx
   14001dffd:	mov    QWORD PTR [rip+0x27cac],rax        # 0x140045cb0
   14001e004:	call   QWORD PTR [rip+0x110d6]        # 0x14002f0e0
   14001e00a:	lea    rdx,[rip+0x13937]        # 0x140031948
   14001e011:	xor    rax,QWORD PTR [rip+0x23638]        # 0x140041650
   14001e018:	mov    rcx,rbx
   14001e01b:	mov    QWORD PTR [rip+0x27c86],rax        # 0x140045ca8
   14001e022:	call   QWORD PTR [rip+0x110b8]        # 0x14002f0e0
   14001e028:	lea    rdx,[rip+0x13929]        # 0x140031958
   14001e02f:	xor    rax,QWORD PTR [rip+0x2361a]        # 0x140041650
   14001e036:	mov    rcx,rbx
   14001e039:	mov    QWORD PTR [rip+0x27c78],rax        # 0x140045cb8
   14001e040:	call   QWORD PTR [rip+0x1109a]        # 0x14002f0e0
   14001e046:	lea    rdx,[rip+0x1391b]        # 0x140031968
   14001e04d:	xor    rax,QWORD PTR [rip+0x235fc]        # 0x140041650
   14001e054:	mov    rcx,rbx
   14001e057:	mov    QWORD PTR [rip+0x27c62],rax        # 0x140045cc0
   14001e05e:	call   QWORD PTR [rip+0x1107c]        # 0x14002f0e0
   14001e064:	lea    rdx,[rip+0x1390d]        # 0x140031978
   14001e06b:	xor    rax,QWORD PTR [rip+0x235de]        # 0x140041650
   14001e072:	mov    rcx,rbx
   14001e075:	mov    QWORD PTR [rip+0x27c4c],rax        # 0x140045cc8
   14001e07c:	call   QWORD PTR [rip+0x1105e]        # 0x14002f0e0
   14001e082:	lea    rdx,[rip+0x1390f]        # 0x140031998
   14001e089:	xor    rax,QWORD PTR [rip+0x235c0]        # 0x140041650
   14001e090:	mov    rcx,rbx
   14001e093:	mov    QWORD PTR [rip+0x27c36],rax        # 0x140045cd0
   14001e09a:	call   QWORD PTR [rip+0x11040]        # 0x14002f0e0
   14001e0a0:	lea    rdx,[rip+0x13909]        # 0x1400319b0
   14001e0a7:	xor    rax,QWORD PTR [rip+0x235a2]        # 0x140041650
   14001e0ae:	mov    rcx,rbx
   14001e0b1:	mov    QWORD PTR [rip+0x27c20],rax        # 0x140045cd8
   14001e0b8:	call   QWORD PTR [rip+0x11022]        # 0x14002f0e0
   14001e0be:	lea    rdx,[rip+0x138fb]        # 0x1400319c0
   14001e0c5:	xor    rax,QWORD PTR [rip+0x23584]        # 0x140041650
   14001e0cc:	mov    rcx,rbx
   14001e0cf:	mov    QWORD PTR [rip+0x27c0a],rax        # 0x140045ce0
   14001e0d6:	call   QWORD PTR [rip+0x11004]        # 0x14002f0e0
   14001e0dc:	lea    rdx,[rip+0x138f5]        # 0x1400319d8
   14001e0e3:	xor    rax,QWORD PTR [rip+0x23566]        # 0x140041650
   14001e0ea:	mov    rcx,rbx
   14001e0ed:	mov    QWORD PTR [rip+0x27bf4],rax        # 0x140045ce8
   14001e0f4:	call   QWORD PTR [rip+0x10fe6]        # 0x14002f0e0
   14001e0fa:	lea    rdx,[rip+0x138e7]        # 0x1400319e8
   14001e101:	xor    rax,QWORD PTR [rip+0x23548]        # 0x140041650
   14001e108:	mov    rcx,rbx
   14001e10b:	mov    QWORD PTR [rip+0x27bde],rax        # 0x140045cf0
   14001e112:	call   QWORD PTR [rip+0x10fc8]        # 0x14002f0e0
   14001e118:	xor    rax,QWORD PTR [rip+0x23531]        # 0x140041650
   14001e11f:	lea    rdx,[rip+0x138e2]        # 0x140031a08
   14001e126:	mov    rcx,rbx
   14001e129:	mov    QWORD PTR [rip+0x27bc8],rax        # 0x140045cf8
   14001e130:	call   QWORD PTR [rip+0x10faa]        # 0x14002f0e0
   14001e136:	xor    rax,QWORD PTR [rip+0x23513]        # 0x140041650
   14001e13d:	mov    QWORD PTR [rip+0x27bbc],rax        # 0x140045d00
   14001e144:	add    rsp,0x20
   14001e148:	pop    rbx
   14001e149:	ret    
   14001e14a:	int3   
   14001e14b:	int3   
   14001e14c:	rex.W jmp QWORD PTR [rip+0x11155]        # 0x14002f2a8
   14001e153:	int3   
   14001e154:	rex.W jmp QWORD PTR [rip+0x10f65]        # 0x14002f0c0
   14001e15b:	int3   
   14001e15c:	rex push rbx
   14001e15e:	sub    rsp,0x20
   14001e162:	mov    ebx,ecx
   14001e164:	call   QWORD PTR [rip+0x11006]        # 0x14002f170
   14001e16a:	mov    edx,ebx
   14001e16c:	mov    rcx,rax
   14001e16f:	add    rsp,0x20
   14001e173:	pop    rbx
   14001e174:	rex.W jmp QWORD PTR [rip+0x1113d]        # 0x14002f2b8
   14001e17b:	int3   
   14001e17c:	rex push rbx
   14001e17e:	sub    rsp,0x20
   14001e182:	mov    rbx,rcx
   14001e185:	xor    ecx,ecx
   14001e187:	call   QWORD PTR [rip+0x1111b]        # 0x14002f2a8
   14001e18d:	mov    rcx,rbx
   14001e190:	add    rsp,0x20
   14001e194:	pop    rbx
   14001e195:	rex.W jmp QWORD PTR [rip+0x11104]        # 0x14002f2a0
   14001e19c:	mov    rax,rcx
   14001e19f:	movzx  edx,WORD PTR [rax]
   14001e1a2:	add    rax,0x2
   14001e1a6:	test   dx,dx
   14001e1a9:	jne    0x14001e19f
   14001e1ab:	sub    rax,rcx
   14001e1ae:	sar    rax,1
   14001e1b1:	dec    rax
   14001e1b4:	ret    
   14001e1b5:	int3   
   14001e1b6:	int3   
   14001e1b7:	int3   
   14001e1b8:	int3   
   14001e1b9:	int3   
   14001e1ba:	int3   
   14001e1bb:	int3   
   14001e1bc:	int3   
   14001e1bd:	int3   
   14001e1be:	int3   
   14001e1bf:	int3   
   14001e1c0:	int3   
   14001e1c1:	int3   
   14001e1c2:	int3   
   14001e1c3:	int3   
   14001e1c4:	int3   
   14001e1c5:	int3   
   14001e1c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001e1d0:	sub    rdx,rcx
   14001e1d3:	cmp    r8,0x8
   14001e1d7:	jb     0x14001e1fb
   14001e1d9:	test   cl,0x7
   14001e1dc:	je     0x14001e1f2
   14001e1de:	xchg   ax,ax
   14001e1e0:	mov    al,BYTE PTR [rcx]
   14001e1e2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001e1e5:	jne    0x14001e213
   14001e1e7:	inc    rcx
   14001e1ea:	dec    r8
   14001e1ed:	test   cl,0x7
   14001e1f0:	jne    0x14001e1e0
   14001e1f2:	mov    r9,r8
   14001e1f5:	shr    r9,0x3
   14001e1f9:	jne    0x14001e21a
   14001e1fb:	test   r8,r8
   14001e1fe:	je     0x14001e20f
   14001e200:	mov    al,BYTE PTR [rcx]
   14001e202:	cmp    al,BYTE PTR [rdx+rcx*1]
   14001e205:	jne    0x14001e213
   14001e207:	inc    rcx
   14001e20a:	dec    r8
   14001e20d:	jne    0x14001e200
   14001e20f:	xor    rax,rax
   14001e212:	ret    
   14001e213:	sbb    eax,eax
   14001e215:	sbb    eax,0xffffffff
   14001e218:	ret    
   14001e219:	nop
   14001e21a:	shr    r9,0x2
   14001e21e:	je     0x14001e257
   14001e220:	mov    rax,QWORD PTR [rcx]
   14001e223:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001e227:	jne    0x14001e284
   14001e229:	mov    rax,QWORD PTR [rcx+0x8]
   14001e22d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001e232:	jne    0x14001e280
   14001e234:	mov    rax,QWORD PTR [rcx+0x10]
   14001e238:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14001e23d:	jne    0x14001e27c
   14001e23f:	mov    rax,QWORD PTR [rcx+0x18]
   14001e243:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14001e248:	jne    0x14001e278
   14001e24a:	add    rcx,0x20
   14001e24e:	dec    r9
   14001e251:	jne    0x14001e220
   14001e253:	and    r8,0x1f
   14001e257:	mov    r9,r8
   14001e25a:	shr    r9,0x3
   14001e25e:	je     0x14001e1fb
   14001e260:	mov    rax,QWORD PTR [rcx]
   14001e263:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14001e267:	jne    0x14001e284
   14001e269:	add    rcx,0x8
   14001e26d:	dec    r9
   14001e270:	jne    0x14001e260
   14001e272:	and    r8,0x7
   14001e276:	jmp    0x14001e1fb
   14001e278:	add    rcx,0x8
   14001e27c:	add    rcx,0x8
   14001e280:	add    rcx,0x8
   14001e284:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14001e288:	bswap  rax
   14001e28b:	bswap  rcx
   14001e28e:	cmp    rax,rcx
   14001e291:	sbb    eax,eax
   14001e293:	sbb    eax,0xffffffff
   14001e296:	ret    
   14001e297:	int3   
   14001e298:	mov    r10d,ecx
   14001e29b:	xor    r8d,r8d
   14001e29e:	mov    r9d,0xe3
   14001e2a4:	lea    eax,[r9+r8*1]
   14001e2a8:	lea    r11,[rip+0x13781]        # 0x140031a30
   14001e2af:	mov    ecx,r10d
   14001e2b2:	cdq    
   14001e2b3:	sub    eax,edx
   14001e2b5:	sar    eax,1
   14001e2b7:	movsxd rdx,eax
   14001e2ba:	shl    rdx,0x4
   14001e2be:	sub    ecx,DWORD PTR [rdx+r11*1]
   14001e2c2:	je     0x14001e2da
   14001e2c4:	test   ecx,ecx
   14001e2c6:	jns    0x14001e2ce
   14001e2c8:	lea    r9d,[rax-0x1]
   14001e2cc:	jmp    0x14001e2d2
   14001e2ce:	lea    r8d,[rax+0x1]
   14001e2d2:	cmp    r8d,r9d
   14001e2d5:	jle    0x14001e2a4
   14001e2d7:	or     eax,0xffffffff
   14001e2da:	ret    
   14001e2db:	int3   
   14001e2dc:	mov    rax,rsp
   14001e2df:	mov    QWORD PTR [rax+0x8],rbx
   14001e2e3:	mov    QWORD PTR [rax+0x10],rbp
   14001e2e7:	mov    QWORD PTR [rax+0x18],rsi
   14001e2eb:	mov    QWORD PTR [rax+0x20],rdi
   14001e2ef:	push   r14
   14001e2f1:	sub    rsp,0x20
   14001e2f5:	mov    rbp,rcx
   14001e2f8:	xor    edi,edi
   14001e2fa:	mov    esi,0xe3
   14001e2ff:	lea    r14,[rip+0x1456a]        # 0x140032870
   14001e306:	lea    eax,[rsi+rdi*1]
   14001e309:	mov    r8d,0x55
   14001e30f:	mov    rcx,rbp
   14001e312:	cdq    
   14001e313:	sub    eax,edx
   14001e315:	sar    eax,1
   14001e317:	movsxd rbx,eax
   14001e31a:	mov    rdx,rbx
   14001e31d:	add    rdx,rdx
   14001e320:	mov    rdx,QWORD PTR [r14+rdx*8]
   14001e324:	call   0x14001e5f4
   14001e329:	test   eax,eax
   14001e32b:	je     0x14001e340
   14001e32d:	jns    0x14001e334
   14001e32f:	lea    esi,[rbx-0x1]
   14001e332:	jmp    0x14001e337
   14001e334:	lea    edi,[rbx+0x1]
   14001e337:	cmp    edi,esi
   14001e339:	jle    0x14001e306
   14001e33b:	or     eax,0xffffffff
   14001e33e:	jmp    0x14001e34b
   14001e340:	mov    rax,rbx
   14001e343:	add    rax,rax
   14001e346:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14001e34b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e350:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e355:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e35a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001e35f:	add    rsp,0x20
   14001e363:	pop    r14
   14001e365:	ret    
   14001e366:	int3   
   14001e367:	int3   
   14001e368:	mov    QWORD PTR [rsp+0x8],rbx
   14001e36d:	mov    QWORD PTR [rsp+0x10],rbp
   14001e372:	mov    QWORD PTR [rsp+0x18],rsi
   14001e377:	push   rdi
   14001e378:	sub    rsp,0x30
   14001e37c:	movsxd rbx,r8d
   14001e37f:	mov    rsi,rdx
   14001e382:	test   ecx,0xfffff3ff
   14001e388:	jne    0x14001e392
   14001e38a:	cmp    ecx,0xc00
   14001e390:	jne    0x14001e3a1
   14001e392:	test   rdx,rdx
   14001e395:	jne    0x14001e39c
   14001e397:	test   r8d,r8d
   14001e39a:	jg     0x14001e3a1
   14001e39c:	test   r8d,r8d
   14001e39f:	jns    0x14001e3a5
   14001e3a1:	xor    eax,eax
   14001e3a3:	jmp    0x14001e3ec
   14001e3a5:	call   0x14001e298
   14001e3aa:	test   eax,eax
   14001e3ac:	js     0x14001e3a1
   14001e3ae:	cdqe   
   14001e3b0:	lea    rbp,[rip+0x13681]        # 0x140031a38
   14001e3b7:	mov    edx,0x55
   14001e3bc:	add    rax,rax
   14001e3bf:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
   14001e3c4:	mov    rcx,rbp
   14001e3c7:	call   0x1400250a0
   14001e3cc:	mov    rdi,rax
   14001e3cf:	test   ebx,ebx
   14001e3d1:	jle    0x14001e3e9
   14001e3d3:	cmp    eax,ebx
   14001e3d5:	jge    0x14001e3a1
   14001e3d7:	mov    rdx,rbx
   14001e3da:	mov    r8,rbp
   14001e3dd:	mov    rcx,rsi
   14001e3e0:	call   0x140024e60
   14001e3e5:	test   eax,eax
   14001e3e7:	jne    0x14001e401
   14001e3e9:	lea    eax,[rdi+0x1]
   14001e3ec:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e3f1:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e3f6:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e3fb:	add    rsp,0x30
   14001e3ff:	pop    rdi
   14001e400:	ret    
   14001e401:	and    QWORD PTR [rsp+0x20],0x0
   14001e407:	xor    r9d,r9d
   14001e40a:	xor    r8d,r8d
   14001e40d:	xor    edx,edx
   14001e40f:	xor    ecx,ecx
   14001e411:	call   0x14001ffd8
   14001e416:	int3   
   14001e417:	int3   
   14001e418:	sub    rsp,0x28
   14001e41c:	test   rcx,rcx
   14001e41f:	je     0x14001e443
   14001e421:	call   0x14001e2dc
   14001e426:	test   eax,eax
   14001e428:	js     0x14001e443
   14001e42a:	cdqe   
   14001e42c:	cmp    rax,0xe4
   14001e432:	jae    0x14001e443
   14001e434:	lea    rcx,[rip+0x135f5]        # 0x140031a30
   14001e43b:	add    rax,rax
   14001e43e:	mov    eax,DWORD PTR [rcx+rax*8]
   14001e441:	jmp    0x14001e445
   14001e443:	xor    eax,eax
   14001e445:	add    rsp,0x28
   14001e449:	ret    
   14001e44a:	int3   
   14001e44b:	int3   
   14001e44c:	xor    r8d,r8d
   14001e44f:	xor    edx,edx
   14001e451:	rex.W jmp QWORD PTR [rip+0x25b08]        # 0x140043f60
   14001e458:	sub    rsp,0x28
   14001e45c:	mov    rax,QWORD PTR [rip+0x2784d]        # 0x140045cb0
   14001e463:	xor    rax,QWORD PTR [rip+0x231e6]        # 0x140041650
   14001e46a:	je     0x14001e476
   14001e46c:	xor    r9d,r9d
   14001e46f:	add    rsp,0x28
   14001e473:	rex.W jmp rax
   14001e476:	mov    QWORD PTR [rip+0x25ae3],rcx        # 0x140043f60
   14001e47d:	lea    rcx,[rip+0xffffffffffffffc8]        # 0x14001e44c
   14001e484:	mov    edx,0x1
   14001e489:	call   QWORD PTR [rip+0x10e81]        # 0x14002f310
   14001e48f:	and    QWORD PTR [rip+0x25ac9],0x0        # 0x140043f60
   14001e497:	add    rsp,0x28
   14001e49b:	ret    
   14001e49c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e4a1:	mov    QWORD PTR [rsp+0x10],rsi
   14001e4a6:	push   rdi
   14001e4a7:	sub    rsp,0x20
   14001e4ab:	mov    rax,QWORD PTR [rip+0x2780e]        # 0x140045cc0
   14001e4b2:	mov    ebx,r9d
   14001e4b5:	mov    rdi,r8
   14001e4b8:	xor    rax,QWORD PTR [rip+0x23191]        # 0x140041650
   14001e4bf:	mov    esi,edx
   14001e4c1:	je     0x14001e4c7
   14001e4c3:	call   rax
   14001e4c5:	jmp    0x14001e4dc
   14001e4c7:	call   0x14001e418
   14001e4cc:	mov    r9d,ebx
   14001e4cf:	mov    r8,rdi
   14001e4d2:	mov    ecx,eax
   14001e4d4:	mov    edx,esi
   14001e4d6:	call   QWORD PTR [rip+0x10e1c]        # 0x14002f2f8
   14001e4dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e4e1:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e4e6:	add    rsp,0x20
   14001e4ea:	pop    rdi
   14001e4eb:	ret    
   14001e4ec:	mov    QWORD PTR [rsp+0x8],rbx
   14001e4f1:	push   rdi
   14001e4f2:	sub    rsp,0x20
   14001e4f6:	mov    rax,QWORD PTR [rip+0x277d3]        # 0x140045cd0
   14001e4fd:	mov    ebx,edx
   14001e4ff:	mov    rdi,rcx
   14001e502:	xor    rax,QWORD PTR [rip+0x23147]        # 0x140041650
   14001e509:	je     0x14001e50f
   14001e50b:	call   rax
   14001e50d:	jmp    0x14001e522
   14001e50f:	call   QWORD PTR [rip+0x10df3]        # 0x14002f308
   14001e515:	mov    r8d,ebx
   14001e518:	mov    rdx,rdi
   14001e51b:	mov    ecx,eax
   14001e51d:	call   0x14001e368
   14001e522:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e527:	add    rsp,0x20
   14001e52b:	pop    rdi
   14001e52c:	ret    
   14001e52d:	int3   
   14001e52e:	int3   
   14001e52f:	int3   
   14001e530:	sub    rsp,0x28
   14001e534:	mov    rax,QWORD PTR [rip+0x2779d]        # 0x140045cd8
   14001e53b:	xor    rax,QWORD PTR [rip+0x2310e]        # 0x140041650
   14001e542:	je     0x14001e54b
   14001e544:	add    rsp,0x28
   14001e548:	rex.W jmp rax
   14001e54b:	call   0x14001e418
   14001e550:	mov    edx,0x1
   14001e555:	mov    ecx,eax
   14001e557:	add    rsp,0x28
   14001e55b:	rex.W jmp QWORD PTR [rip+0x10d9e]        # 0x14002f300
   14001e562:	int3   
   14001e563:	int3   
   14001e564:	mov    r11,rsp
   14001e567:	mov    QWORD PTR [r11+0x8],rbx
   14001e56b:	mov    QWORD PTR [r11+0x10],rsi
   14001e56f:	push   rdi
   14001e570:	sub    rsp,0x50
   14001e574:	mov    r10,QWORD PTR [rip+0x27765]        # 0x140045ce0
   14001e57b:	mov    ebx,r9d
   14001e57e:	mov    rdi,r8
   14001e581:	xor    r10,QWORD PTR [rip+0x230c8]        # 0x140041650
   14001e588:	mov    esi,edx
   14001e58a:	je     0x14001e5b6
   14001e58c:	xor    eax,eax
   14001e58e:	mov    QWORD PTR [r11-0x18],rax
   14001e592:	mov    QWORD PTR [r11-0x20],rax
   14001e596:	mov    QWORD PTR [r11-0x28],rax
   14001e59a:	mov    eax,DWORD PTR [rsp+0x88]
   14001e5a1:	mov    DWORD PTR [rsp+0x28],eax
   14001e5a5:	mov    rax,QWORD PTR [rsp+0x80]
   14001e5ad:	mov    QWORD PTR [r11-0x38],rax
   14001e5b1:	call   r10
   14001e5b4:	jmp    0x14001e5e3
   14001e5b6:	call   0x14001e418
   14001e5bb:	mov    r9d,ebx
   14001e5be:	mov    r8,rdi
   14001e5c1:	mov    ecx,eax
   14001e5c3:	mov    eax,DWORD PTR [rsp+0x88]
   14001e5ca:	mov    edx,esi
   14001e5cc:	mov    DWORD PTR [rsp+0x28],eax
   14001e5d0:	mov    rax,QWORD PTR [rsp+0x80]
   14001e5d8:	mov    QWORD PTR [rsp+0x20],rax
   14001e5dd:	call   QWORD PTR [rip+0x10d0d]        # 0x14002f2f0
   14001e5e3:	mov    rbx,QWORD PTR [rsp+0x60]
   14001e5e8:	mov    rsi,QWORD PTR [rsp+0x68]
   14001e5ed:	add    rsp,0x50
   14001e5f1:	pop    rdi
   14001e5f2:	ret    
   14001e5f3:	int3   
   14001e5f4:	xor    r9d,r9d
   14001e5f7:	mov    r10,rdx
   14001e5fa:	mov    r11,rcx
   14001e5fd:	test   r8,r8
   14001e600:	je     0x14001e645
   14001e602:	sub    r11,rdx
   14001e605:	movzx  ecx,WORD PTR [r11+r10*1]
   14001e60a:	lea    eax,[rcx-0x41]
   14001e60d:	cmp    ax,0x19
   14001e611:	ja     0x14001e617
   14001e613:	add    cx,0x20
   14001e617:	movzx  edx,WORD PTR [r10]
   14001e61b:	lea    eax,[rdx-0x41]
   14001e61e:	cmp    ax,0x19
   14001e622:	ja     0x14001e628
   14001e624:	add    dx,0x20
   14001e628:	add    r10,0x2
   14001e62c:	dec    r8
   14001e62f:	je     0x14001e63b
   14001e631:	test   cx,cx
   14001e634:	je     0x14001e63b
   14001e636:	cmp    cx,dx
   14001e639:	je     0x14001e605
   14001e63b:	movzx  eax,dx
   14001e63e:	movzx  r9d,cx
   14001e642:	sub    r9d,eax
   14001e645:	mov    eax,r9d
   14001e648:	ret    
   14001e649:	int3   
   14001e64a:	int3   
   14001e64b:	int3   
   14001e64c:	mov    rax,rsp
   14001e64f:	mov    QWORD PTR [rax+0x8],rbx
   14001e653:	mov    QWORD PTR [rax+0x10],rbp
   14001e657:	mov    QWORD PTR [rax+0x18],rsi
   14001e65b:	push   rdi
   14001e65c:	push   r12
   14001e65e:	push   r13
   14001e660:	push   r14
   14001e662:	push   r15
   14001e664:	sub    rsp,0x40
   14001e668:	mov    r12,QWORD PTR [r9+0x8]
   14001e66c:	mov    r15,QWORD PTR [r9]
   14001e66f:	mov    rbx,QWORD PTR [r9+0x38]
   14001e673:	sub    r15,r12
   14001e676:	test   BYTE PTR [rcx+0x4],0x66
   14001e67a:	mov    r14,r9
   14001e67d:	mov    r13,rdx
   14001e680:	mov    rbp,rcx
   14001e683:	jne    0x14001e767
   14001e689:	mov    esi,DWORD PTR [r9+0x48]
   14001e68d:	mov    QWORD PTR [rax-0x38],rcx
   14001e691:	mov    QWORD PTR [rax-0x30],r8
   14001e695:	cmp    esi,DWORD PTR [rbx]
   14001e697:	jae    0x14001e80a
   14001e69d:	mov    edi,esi
   14001e69f:	add    rdi,rdi
   14001e6a2:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   14001e6a6:	cmp    r15,rax
   14001e6a9:	jb     0x14001e759
   14001e6af:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   14001e6b3:	cmp    r15,rax
   14001e6b6:	jae    0x14001e759
   14001e6bc:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   14001e6c1:	je     0x14001e759
   14001e6c7:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   14001e6cc:	je     0x14001e6e5
   14001e6ce:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   14001e6d2:	lea    rcx,[rsp+0x30]
   14001e6d7:	mov    rdx,r13
   14001e6da:	add    rax,r12
   14001e6dd:	call   rax
   14001e6df:	test   eax,eax
   14001e6e1:	js     0x14001e760
   14001e6e3:	jle    0x14001e759
   14001e6e5:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14001e6ec:	jne    0x14001e716
   14001e6ee:	cmp    QWORD PTR [rip+0x12fda],0x0        # 0x1400316d0
   14001e6f6:	je     0x14001e716
   14001e6f8:	lea    rcx,[rip+0x12fd1]        # 0x1400316d0
   14001e6ff:	call   0x140025660
   14001e704:	test   eax,eax
   14001e706:	je     0x14001e716
   14001e708:	mov    edx,0x1
   14001e70d:	mov    rcx,rbp
   14001e710:	call   QWORD PTR [rip+0x12fba]        # 0x1400316d0
   14001e716:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   14001e71a:	mov    r8d,0x1
   14001e720:	mov    rdx,r13
   14001e723:	add    rcx,r12
   14001e726:	call   0x140025170
   14001e72b:	mov    rax,QWORD PTR [r14+0x40]
   14001e72f:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   14001e733:	mov    r9d,DWORD PTR [rbp+0x0]
   14001e737:	mov    QWORD PTR [rsp+0x28],rax
   14001e73c:	mov    rax,QWORD PTR [r14+0x28]
   14001e740:	add    rdx,r12
   14001e743:	mov    r8,rbp
   14001e746:	mov    rcx,r13
   14001e749:	mov    QWORD PTR [rsp+0x20],rax
   14001e74e:	call   QWORD PTR [rip+0x10b24]        # 0x14002f278
   14001e754:	call   0x1400251a0
   14001e759:	inc    esi
   14001e75b:	jmp    0x14001e695
   14001e760:	xor    eax,eax
   14001e762:	jmp    0x14001e80f
   14001e767:	mov    rsi,QWORD PTR [r9+0x20]
   14001e76b:	mov    edi,DWORD PTR [r9+0x48]
   14001e76f:	sub    rsi,r12
   14001e772:	jmp    0x14001e800
   14001e777:	mov    ecx,edi
   14001e779:	add    rcx,rcx
   14001e77c:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   14001e780:	cmp    r15,rax
   14001e783:	jb     0x14001e7fe
   14001e785:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   14001e789:	cmp    r15,rax
   14001e78c:	jae    0x14001e7fe
   14001e78e:	test   BYTE PTR [rbp+0x4],0x20
   14001e792:	je     0x14001e7d8
   14001e794:	xor    r9d,r9d
   14001e797:	test   edx,edx
   14001e799:	je     0x14001e7d3
   14001e79b:	mov    r8d,r9d
   14001e79e:	add    r8,r8
   14001e7a1:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14001e7a6:	cmp    rsi,rax
   14001e7a9:	jb     0x14001e7cb
   14001e7ab:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   14001e7b0:	cmp    rsi,rax
   14001e7b3:	jae    0x14001e7cb
   14001e7b5:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14001e7b9:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   14001e7be:	jne    0x14001e7cb
   14001e7c0:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   14001e7c4:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   14001e7c9:	je     0x14001e7d3
   14001e7cb:	inc    r9d
   14001e7ce:	cmp    r9d,edx
   14001e7d1:	jb     0x14001e79b
   14001e7d3:	cmp    r9d,edx
   14001e7d6:	jne    0x14001e80a
   14001e7d8:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14001e7dc:	test   eax,eax
   14001e7de:	je     0x14001e7e7
   14001e7e0:	cmp    rsi,rax
   14001e7e3:	je     0x14001e80a
   14001e7e5:	jmp    0x14001e7fe
   14001e7e7:	lea    eax,[rdi+0x1]
   14001e7ea:	mov    rdx,r13
   14001e7ed:	mov    DWORD PTR [r14+0x48],eax
   14001e7f1:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   14001e7f6:	mov    cl,0x1
   14001e7f8:	add    r8,r12
   14001e7fb:	call   r8
   14001e7fe:	inc    edi
   14001e800:	mov    edx,DWORD PTR [rbx]
   14001e802:	cmp    edi,edx
   14001e804:	jb     0x14001e777
   14001e80a:	mov    eax,0x1
   14001e80f:	lea    r11,[rsp+0x40]
   14001e814:	mov    rbx,QWORD PTR [r11+0x30]
   14001e818:	mov    rbp,QWORD PTR [r11+0x38]
   14001e81c:	mov    rsi,QWORD PTR [r11+0x40]
   14001e820:	mov    rsp,r11
   14001e823:	pop    r15
   14001e825:	pop    r14
   14001e827:	pop    r13
   14001e829:	pop    r12
   14001e82b:	pop    rdi
   14001e82c:	ret    
   14001e82d:	int3   
   14001e82e:	int3   
   14001e82f:	int3   
   14001e830:	rex push rbx
   14001e832:	sub    rsp,0x20
   14001e836:	mov    ebx,ecx
   14001e838:	lea    r8,[rsp+0x38]
   14001e83d:	lea    rdx,[rip+0x1652c]        # 0x140034d70
   14001e844:	xor    ecx,ecx
   14001e846:	call   QWORD PTR [rip+0x10ad4]        # 0x14002f320
   14001e84c:	test   eax,eax
   14001e84e:	je     0x14001e86b
   14001e850:	mov    rcx,QWORD PTR [rsp+0x38]
   14001e855:	lea    rdx,[rip+0x1652c]        # 0x140034d88
   14001e85c:	call   QWORD PTR [rip+0x1087e]        # 0x14002f0e0
   14001e862:	test   rax,rax
   14001e865:	je     0x14001e86b
   14001e867:	mov    ecx,ebx
   14001e869:	call   rax
   14001e86b:	add    rsp,0x20
   14001e86f:	pop    rbx
   14001e870:	ret    
   14001e871:	int3   
   14001e872:	int3   
   14001e873:	int3   
   14001e874:	rex push rbx
   14001e876:	sub    rsp,0x20
   14001e87a:	mov    ebx,ecx
   14001e87c:	call   0x14001e830
   14001e881:	mov    ecx,ebx
   14001e883:	call   QWORD PTR [rip+0x10a8f]        # 0x14002f318
   14001e889:	int3   
   14001e88a:	int3   
   14001e88b:	int3   
   14001e88c:	rex push rbx
   14001e88e:	sub    rsp,0x20
   14001e892:	mov    ebx,ecx
   14001e894:	call   0x1400223b8
   14001e899:	mov    ecx,ebx
   14001e89b:	call   0x14002242c
   14001e8a0:	xor    r8d,r8d
   14001e8a3:	mov    ecx,0xff
   14001e8a8:	lea    edx,[r8+0x1]
   14001e8ac:	call   0x14001ea78
   14001e8b1:	int3   
   14001e8b2:	int3   
   14001e8b3:	int3   
   14001e8b4:	mov    edx,0x1
   14001e8b9:	xor    ecx,ecx
   14001e8bb:	mov    r8d,edx
   14001e8be:	jmp    0x14001ea78
   14001e8c3:	int3   
   14001e8c4:	xor    edx,edx
   14001e8c6:	xor    ecx,ecx
   14001e8c8:	lea    r8d,[rdx+0x1]
   14001e8cc:	jmp    0x14001ea78
   14001e8d1:	int3   
   14001e8d2:	int3   
   14001e8d3:	int3   
   14001e8d4:	rex push rbx
   14001e8d6:	sub    rsp,0x20
   14001e8da:	cmp    QWORD PTR [rip+0x125d6],0x0        # 0x140030eb8
   14001e8e2:	mov    ebx,ecx
   14001e8e4:	je     0x14001e8fe
   14001e8e6:	lea    rcx,[rip+0x125cb]        # 0x140030eb8
   14001e8ed:	call   0x140025660
   14001e8f2:	test   eax,eax
   14001e8f4:	je     0x14001e8fe
   14001e8f6:	mov    ecx,ebx
   14001e8f8:	call   QWORD PTR [rip+0x125ba]        # 0x140030eb8
   14001e8fe:	call   0x1400236d8
   14001e903:	lea    rdx,[rip+0x10b8e]        # 0x14002f498
   14001e90a:	lea    rcx,[rip+0x10b57]        # 0x14002f468
   14001e911:	call   0x14001ea24
   14001e916:	test   eax,eax
   14001e918:	jne    0x14001e964
   14001e91a:	lea    rcx,[rip+0x3ea7]        # 0x1400227c8
   14001e921:	call   0x1400189ec
   14001e926:	lea    rdx,[rip+0x10b33]        # 0x14002f460
   14001e92d:	lea    rcx,[rip+0x10aa4]        # 0x14002f3d8
   14001e934:	call   0x14001e9c4
   14001e939:	cmp    QWORD PTR [rip+0x27287],0x0        # 0x140045bc8
   14001e941:	je     0x14001e962
   14001e943:	lea    rcx,[rip+0x2727e]        # 0x140045bc8
   14001e94a:	call   0x140025660
   14001e94f:	test   eax,eax
   14001e951:	je     0x14001e962
   14001e953:	xor    r8d,r8d
   14001e956:	xor    ecx,ecx
   14001e958:	lea    edx,[r8+0x2]
   14001e95c:	call   QWORD PTR [rip+0x27266]        # 0x140045bc8
   14001e962:	xor    eax,eax
   14001e964:	add    rsp,0x20
   14001e968:	pop    rbx
   14001e969:	ret    
   14001e96a:	int3   
   14001e96b:	int3   
   14001e96c:	xor    r8d,r8d
   14001e96f:	lea    edx,[r8+0x1]
   14001e973:	jmp    0x14001ea78
   14001e978:	rex push rbx
   14001e97a:	sub    rsp,0x20
   14001e97e:	xor    ecx,ecx
   14001e980:	call   QWORD PTR [rip+0x1089a]        # 0x14002f220
   14001e986:	mov    rcx,rax
   14001e989:	mov    rbx,rax
   14001e98c:	call   0x14001ec8c
   14001e991:	mov    rcx,rbx
   14001e994:	call   0x14001ff48
   14001e999:	mov    rcx,rbx
   14001e99c:	call   0x140020f54
   14001e9a1:	mov    rcx,rbx
   14001e9a4:	call   0x140025240
   14001e9a9:	mov    rcx,rbx
   14001e9ac:	call   0x140019038
   14001e9b1:	mov    rcx,rbx
   14001e9b4:	call   0x1400256e0
   14001e9b9:	add    rsp,0x20
   14001e9bd:	pop    rbx
   14001e9be:	jmp    0x14001dd50
   14001e9c3:	int3   
   14001e9c4:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9c9:	mov    QWORD PTR [rsp+0x10],rbp
   14001e9ce:	mov    QWORD PTR [rsp+0x18],rsi
   14001e9d3:	push   rdi
   14001e9d4:	sub    rsp,0x20
   14001e9d8:	xor    ebp,ebp
   14001e9da:	mov    rbx,rdx
   14001e9dd:	mov    rdi,rcx
   14001e9e0:	sub    rbx,rcx
   14001e9e3:	mov    esi,ebp
   14001e9e5:	add    rbx,0x7
   14001e9e9:	shr    rbx,0x3
   14001e9ed:	cmp    rcx,rdx
   14001e9f0:	cmova  rbx,rbp
   14001e9f4:	test   rbx,rbx
   14001e9f7:	je     0x14001ea0f
   14001e9f9:	mov    rax,QWORD PTR [rdi]
   14001e9fc:	test   rax,rax
   14001e9ff:	je     0x14001ea03
   14001ea01:	call   rax
   14001ea03:	inc    rsi
   14001ea06:	add    rdi,0x8
   14001ea0a:	cmp    rsi,rbx
   14001ea0d:	jb     0x14001e9f9
   14001ea0f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea14:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ea19:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ea1e:	add    rsp,0x20
   14001ea22:	pop    rdi
   14001ea23:	ret    
   14001ea24:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea29:	push   rdi
   14001ea2a:	sub    rsp,0x20
   14001ea2e:	xor    eax,eax
   14001ea30:	mov    rdi,rdx
   14001ea33:	mov    rbx,rcx
   14001ea36:	cmp    rcx,rdx
   14001ea39:	jae    0x14001ea52
   14001ea3b:	test   eax,eax
   14001ea3d:	jne    0x14001ea52
   14001ea3f:	mov    rcx,QWORD PTR [rbx]
   14001ea42:	test   rcx,rcx
   14001ea45:	je     0x14001ea49
   14001ea47:	call   rcx
   14001ea49:	add    rbx,0x8
   14001ea4d:	cmp    rbx,rdi
   14001ea50:	jb     0x14001ea3b
   14001ea52:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea57:	add    rsp,0x20
   14001ea5b:	pop    rdi
   14001ea5c:	ret    
   14001ea5d:	int3   
   14001ea5e:	int3   
   14001ea5f:	int3   
   14001ea60:	mov    ecx,0x8
   14001ea65:	jmp    0x14001b118
   14001ea6a:	int3   
   14001ea6b:	int3   
   14001ea6c:	mov    ecx,0x8
   14001ea71:	jmp    0x14001b308
   14001ea76:	int3   
   14001ea77:	int3   
   14001ea78:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea7d:	mov    QWORD PTR [rsp+0x10],rsi
   14001ea82:	mov    DWORD PTR [rsp+0x18],r8d
   14001ea87:	push   rdi
   14001ea88:	push   r12
   14001ea8a:	push   r13
   14001ea8c:	push   r14
   14001ea8e:	push   r15
   14001ea90:	sub    rsp,0x40
   14001ea94:	mov    r14d,r8d
   14001ea97:	mov    ebx,edx
   14001ea99:	mov    r13d,ecx
   14001ea9c:	mov    ecx,0x8
   14001eaa1:	call   0x14001b118
   14001eaa6:	nop
   14001eaa7:	cmp    DWORD PTR [rip+0x254ba],0x1        # 0x140043f68
   14001eaae:	je     0x14001ebbb
   14001eab4:	mov    DWORD PTR [rip+0x254ea],0x1        # 0x140043fa8
   14001eabe:	mov    BYTE PTR [rip+0x254df],r14b        # 0x140043fa4
   14001eac5:	test   ebx,ebx
   14001eac7:	jne    0x14001eba7
   14001eacd:	mov    rcx,QWORD PTR [rip+0x27104]        # 0x140045bd8
   14001ead4:	call   QWORD PTR [rip+0x1074e]        # 0x14002f228
   14001eada:	mov    rsi,rax
   14001eadd:	mov    QWORD PTR [rsp+0x30],rax
   14001eae2:	test   rax,rax
   14001eae5:	je     0x14001eb94
   14001eaeb:	mov    rcx,QWORD PTR [rip+0x270de]        # 0x140045bd0
   14001eaf2:	call   QWORD PTR [rip+0x10730]        # 0x14002f228
   14001eaf8:	mov    rdi,rax
   14001eafb:	mov    QWORD PTR [rsp+0x20],rax
   14001eb00:	mov    r12,rsi
   14001eb03:	mov    QWORD PTR [rsp+0x28],rsi
   14001eb08:	mov    r15,rax
   14001eb0b:	mov    QWORD PTR [rsp+0x38],rax
   14001eb10:	sub    rdi,0x8
   14001eb14:	mov    QWORD PTR [rsp+0x20],rdi
   14001eb19:	cmp    rdi,rsi
   14001eb1c:	jb     0x14001eb94
   14001eb1e:	xor    ecx,ecx
   14001eb20:	call   QWORD PTR [rip+0x106fa]        # 0x14002f220
   14001eb26:	cmp    QWORD PTR [rdi],rax
   14001eb29:	jne    0x14001eb2d
   14001eb2b:	jmp    0x14001eb10
   14001eb2d:	cmp    rdi,rsi
   14001eb30:	jb     0x14001eb94
   14001eb32:	mov    rcx,QWORD PTR [rdi]
   14001eb35:	call   QWORD PTR [rip+0x106ed]        # 0x14002f228
   14001eb3b:	mov    rbx,rax
   14001eb3e:	xor    ecx,ecx
   14001eb40:	call   QWORD PTR [rip+0x106da]        # 0x14002f220
   14001eb46:	mov    QWORD PTR [rdi],rax
   14001eb49:	call   rbx
   14001eb4b:	mov    rcx,QWORD PTR [rip+0x27086]        # 0x140045bd8
   14001eb52:	call   QWORD PTR [rip+0x106d0]        # 0x14002f228
   14001eb58:	mov    rbx,rax
   14001eb5b:	mov    rcx,QWORD PTR [rip+0x2706e]        # 0x140045bd0
   14001eb62:	call   QWORD PTR [rip+0x106c0]        # 0x14002f228
   14001eb68:	cmp    r12,rbx
   14001eb6b:	jne    0x14001eb72
   14001eb6d:	cmp    r15,rax
   14001eb70:	je     0x14001eb2b
   14001eb72:	mov    r12,rbx
   14001eb75:	mov    QWORD PTR [rsp+0x28],rbx
   14001eb7a:	mov    rsi,rbx
   14001eb7d:	mov    QWORD PTR [rsp+0x30],rbx
   14001eb82:	mov    r15,rax
   14001eb85:	mov    QWORD PTR [rsp+0x38],rax
   14001eb8a:	mov    rdi,rax
   14001eb8d:	mov    QWORD PTR [rsp+0x20],rax
   14001eb92:	jmp    0x14001eb2b
   14001eb94:	lea    rdx,[rip+0x10925]        # 0x14002f4c0
   14001eb9b:	lea    rcx,[rip+0x108fe]        # 0x14002f4a0
   14001eba2:	call   0x14001e9c4
   14001eba7:	lea    rdx,[rip+0x10922]        # 0x14002f4d0
   14001ebae:	lea    rcx,[rip+0x10913]        # 0x14002f4c8
   14001ebb5:	call   0x14001e9c4
   14001ebba:	nop
   14001ebbb:	test   r14d,r14d
   14001ebbe:	je     0x14001ebcf
   14001ebc0:	mov    ecx,0x8
   14001ebc5:	call   0x14001b308
   14001ebca:	test   r14d,r14d
   14001ebcd:	jne    0x14001ebf5
   14001ebcf:	mov    DWORD PTR [rip+0x2538f],0x1        # 0x140043f68
   14001ebd9:	mov    ecx,0x8
   14001ebde:	call   0x14001b308
   14001ebe3:	mov    ecx,r13d
   14001ebe6:	call   0x14001e830
   14001ebeb:	mov    ecx,r13d
   14001ebee:	call   QWORD PTR [rip+0x10724]        # 0x14002f318
   14001ebf4:	int3   
   14001ebf5:	mov    rbx,QWORD PTR [rsp+0x70]
   14001ebfa:	mov    rsi,QWORD PTR [rsp+0x78]
   14001ebff:	add    rsp,0x40
   14001ec03:	pop    r15
   14001ec05:	pop    r14
   14001ec07:	pop    r13
   14001ec09:	pop    r12
   14001ec0b:	pop    rdi
   14001ec0c:	ret    
   14001ec0d:	int3   
   14001ec0e:	int3   
   14001ec0f:	int3   
   14001ec10:	xor    r8d,r8d
   14001ec13:	xor    edx,edx
   14001ec15:	jmp    0x14001ea78
   14001ec1a:	int3   
   14001ec1b:	int3   
   14001ec1c:	sub    rsp,0x28
   14001ec20:	test   rcx,rcx
   14001ec23:	jne    0x14001ec3e
   14001ec25:	call   0x14001b864
   14001ec2a:	mov    DWORD PTR [rax],0x16
   14001ec30:	call   0x14001ffb8
   14001ec35:	or     rax,0xffffffffffffffff
   14001ec39:	add    rsp,0x28
   14001ec3d:	ret    
   14001ec3e:	mov    r8,rcx
   14001ec41:	mov    rcx,QWORD PTR [rip+0x253d0]        # 0x140044018
   14001ec48:	xor    edx,edx
   14001ec4a:	add    rsp,0x28
   14001ec4e:	rex.W jmp QWORD PTR [rip+0x106d3]        # 0x14002f328
   14001ec55:	int3   
   14001ec56:	int3   
   14001ec57:	int3   
   14001ec58:	rex push rbx
   14001ec5a:	sub    rsp,0x20
   14001ec5e:	mov    rbx,rcx
   14001ec61:	mov    rcx,QWORD PTR [rip+0x25358]        # 0x140043fc0
   14001ec68:	call   QWORD PTR [rip+0x105ba]        # 0x14002f228
   14001ec6e:	test   rax,rax
   14001ec71:	je     0x14001ec83
   14001ec73:	mov    rcx,rbx
   14001ec76:	call   rax
   14001ec78:	test   eax,eax
   14001ec7a:	je     0x14001ec83
   14001ec7c:	mov    eax,0x1
   14001ec81:	jmp    0x14001ec85
   14001ec83:	xor    eax,eax
   14001ec85:	add    rsp,0x20
   14001ec89:	pop    rbx
   14001ec8a:	ret    
   14001ec8b:	int3   
   14001ec8c:	mov    QWORD PTR [rip+0x2532d],rcx        # 0x140043fc0
   14001ec93:	ret    
   14001ec94:	mov    QWORD PTR [rsp+0x8],rbx
   14001ec99:	mov    QWORD PTR [rsp+0x10],rbp
   14001ec9e:	mov    QWORD PTR [rsp+0x18],rsi
   14001eca3:	push   rdi
   14001eca4:	sub    rsp,0x10
   14001eca8:	xor    ecx,ecx
   14001ecaa:	xor    eax,eax
   14001ecac:	xor    edi,edi
   14001ecae:	cpuid  
   14001ecb0:	mov    DWORD PTR [rip+0x229ca],0x2        # 0x140041684
   14001ecba:	mov    DWORD PTR [rip+0x229bc],0x1        # 0x140041680
   14001ecc4:	mov    r11d,ebx
   14001ecc7:	mov    ebx,ecx
   14001ecc9:	mov    r8d,edx
   14001eccc:	xor    ebx,0x6c65746e
   14001ecd2:	mov    r9d,edx
   14001ecd5:	mov    edx,r11d
   14001ecd8:	xor    r8d,0x49656e69
   14001ecdf:	xor    edx,0x756e6547
   14001ece5:	mov    ebp,eax
   14001ece7:	or     r8d,ebx
   14001ecea:	lea    eax,[rdi+0x1]
   14001eced:	or     r8d,edx
   14001ecf0:	sete   r10b
   14001ecf4:	xor    r11d,0x68747541
   14001ecfb:	xor    r9d,0x69746e65
   14001ed02:	or     r11d,r9d
   14001ed05:	xor    ecx,0x444d4163
   14001ed0b:	or     r11d,ecx
   14001ed0e:	sete   sil
   14001ed12:	xor    ecx,ecx
   14001ed14:	cpuid  
   14001ed16:	mov    r11d,ecx
   14001ed19:	mov    r9d,eax
   14001ed1c:	mov    DWORD PTR [rsp+0x4],ebx
   14001ed20:	mov    DWORD PTR [rsp+0xc],edx
   14001ed24:	test   r10b,r10b
   14001ed27:	je     0x14001ed78
   14001ed29:	mov    edx,eax
   14001ed2b:	and    edx,0xfff3ff0
   14001ed31:	cmp    edx,0x106c0
   14001ed37:	je     0x14001ed64
   14001ed39:	cmp    edx,0x20660
   14001ed3f:	je     0x14001ed64
   14001ed41:	cmp    edx,0x20670
   14001ed47:	je     0x14001ed64
   14001ed49:	add    edx,0xfffcf9b0
   14001ed4f:	cmp    edx,0x20
   14001ed52:	ja     0x14001ed78
   14001ed54:	movabs rcx,0x100010001
   14001ed5e:	bt     rcx,rdx
   14001ed62:	jae    0x14001ed78
   14001ed64:	mov    r8d,DWORD PTR [rip+0x2525d]        # 0x140043fc8
   14001ed6b:	or     r8d,0x1
   14001ed6f:	mov    DWORD PTR [rip+0x25252],r8d        # 0x140043fc8
   14001ed76:	jmp    0x14001ed7f
   14001ed78:	mov    r8d,DWORD PTR [rip+0x25249]        # 0x140043fc8
   14001ed7f:	test   sil,sil
   14001ed82:	je     0x14001ed9f
   14001ed84:	and    r9d,0xff00f00
   14001ed8b:	cmp    r9d,0x600f00
   14001ed92:	jl     0x14001ed9f
   14001ed94:	or     r8d,0x4
   14001ed98:	mov    DWORD PTR [rip+0x25229],r8d        # 0x140043fc8
   14001ed9f:	mov    eax,0x7
   14001eda4:	cmp    ebp,eax
   14001eda6:	jl     0x14001edca
   14001eda8:	xor    ecx,ecx
   14001edaa:	cpuid  
   14001edac:	mov    edi,ebx
   14001edae:	mov    DWORD PTR [rsp],eax
   14001edb1:	mov    DWORD PTR [rsp+0x8],ecx
   14001edb5:	mov    DWORD PTR [rsp+0xc],edx
   14001edb9:	bt     ebx,0x9
   14001edbd:	jae    0x14001edca
   14001edbf:	or     r8d,0x2
   14001edc3:	mov    DWORD PTR [rip+0x251fe],r8d        # 0x140043fc8
   14001edca:	bt     r11d,0x14
   14001edcf:	jae    0x14001ee21
   14001edd1:	mov    DWORD PTR [rip+0x228a5],0x2        # 0x140041680
   14001eddb:	mov    DWORD PTR [rip+0x2289f],0x6        # 0x140041684
   14001ede5:	bt     r11d,0x1b
   14001edea:	jae    0x14001ee21
   14001edec:	bt     r11d,0x1c
   14001edf1:	jae    0x14001ee21
   14001edf3:	mov    DWORD PTR [rip+0x22883],0x3        # 0x140041680
   14001edfd:	mov    DWORD PTR [rip+0x2287d],0xe        # 0x140041684
   14001ee07:	test   dil,0x20
   14001ee0b:	je     0x14001ee21
   14001ee0d:	mov    DWORD PTR [rip+0x22869],0x5        # 0x140041680
   14001ee17:	mov    DWORD PTR [rip+0x22863],0x2e        # 0x140041684
   14001ee21:	mov    rbx,QWORD PTR [rsp+0x20]
   14001ee26:	mov    rbp,QWORD PTR [rsp+0x28]
   14001ee2b:	mov    rsi,QWORD PTR [rsp+0x30]
   14001ee30:	xor    eax,eax
   14001ee32:	add    rsp,0x10
   14001ee36:	pop    rdi
   14001ee37:	ret    
   14001ee38:	test   rcx,rcx
   14001ee3b:	je     0x14001ef6a
   14001ee41:	mov    QWORD PTR [rsp+0x10],rbx
   14001ee46:	push   rdi
   14001ee47:	sub    rsp,0x20
   14001ee4b:	mov    rbx,rcx
   14001ee4e:	mov    rcx,QWORD PTR [rcx+0x38]
   14001ee52:	test   rcx,rcx
   14001ee55:	je     0x14001ee5c
   14001ee57:	call   0x14001a1ac
   14001ee5c:	mov    rcx,QWORD PTR [rbx+0x48]
   14001ee60:	test   rcx,rcx
   14001ee63:	je     0x14001ee6a
   14001ee65:	call   0x14001a1ac
   14001ee6a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001ee6e:	test   rcx,rcx
   14001ee71:	je     0x14001ee78
   14001ee73:	call   0x14001a1ac
   14001ee78:	mov    rcx,QWORD PTR [rbx+0x68]
   14001ee7c:	test   rcx,rcx
   14001ee7f:	je     0x14001ee86
   14001ee81:	call   0x14001a1ac
   14001ee86:	mov    rcx,QWORD PTR [rbx+0x70]
   14001ee8a:	test   rcx,rcx
   14001ee8d:	je     0x14001ee94
   14001ee8f:	call   0x14001a1ac
   14001ee94:	mov    rcx,QWORD PTR [rbx+0x78]
   14001ee98:	test   rcx,rcx
   14001ee9b:	je     0x14001eea2
   14001ee9d:	call   0x14001a1ac
   14001eea2:	mov    rcx,QWORD PTR [rbx+0x80]
   14001eea9:	test   rcx,rcx
   14001eeac:	je     0x14001eeb3
   14001eeae:	call   0x14001a1ac
   14001eeb3:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001eeba:	lea    rax,[rip+0x1643f]        # 0x140035300
   14001eec1:	cmp    rcx,rax
   14001eec4:	je     0x14001eecb
   14001eec6:	call   0x14001a1ac
   14001eecb:	mov    edi,0xd
   14001eed0:	mov    ecx,edi
   14001eed2:	call   0x14001b118
   14001eed7:	nop
   14001eed8:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001eedf:	mov    QWORD PTR [rsp+0x30],rcx
   14001eee4:	test   rcx,rcx
   14001eee7:	je     0x14001ef05
   14001eee9:	lock dec DWORD PTR [rcx]
   14001eeec:	jne    0x14001ef05
   14001eeee:	lea    rax,[rip+0x229ab]        # 0x1400418a0
   14001eef5:	mov    rcx,QWORD PTR [rsp+0x30]
   14001eefa:	cmp    rcx,rax
   14001eefd:	je     0x14001ef05
   14001eeff:	call   0x14001a1ac
   14001ef04:	nop
   14001ef05:	mov    ecx,edi
   14001ef07:	call   0x14001b308
   14001ef0c:	mov    ecx,0xc
   14001ef11:	call   0x14001b118
   14001ef16:	nop
   14001ef17:	mov    rdi,QWORD PTR [rbx+0xc0]
   14001ef1e:	test   rdi,rdi
   14001ef21:	je     0x14001ef4e
   14001ef23:	mov    rcx,rdi
   14001ef26:	call   0x14001f3a0
   14001ef2b:	cmp    rdi,QWORD PTR [rip+0x22f5e]        # 0x140041e90
   14001ef32:	je     0x14001ef4e
   14001ef34:	lea    rax,[rip+0x22f65]        # 0x140041ea0
   14001ef3b:	cmp    rdi,rax
   14001ef3e:	je     0x14001ef4e
   14001ef40:	cmp    DWORD PTR [rdi],0x0
   14001ef43:	jne    0x14001ef4e
   14001ef45:	mov    rcx,rdi
   14001ef48:	call   0x14001f208
   14001ef4d:	nop
   14001ef4e:	mov    ecx,0xc
   14001ef53:	call   0x14001b308
   14001ef58:	mov    rcx,rbx
   14001ef5b:	call   0x14001a1ac
   14001ef60:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ef65:	add    rsp,0x20
   14001ef69:	pop    rdi
   14001ef6a:	ret    
   14001ef6b:	int3   
   14001ef6c:	rex push rbx
   14001ef6e:	sub    rsp,0x20
   14001ef72:	call   0x14001ef90
   14001ef77:	mov    rbx,rax
   14001ef7a:	test   rax,rax
   14001ef7d:	jne    0x14001ef87
   14001ef7f:	lea    ecx,[rax+0x10]
   14001ef82:	call   0x14001e88c
   14001ef87:	mov    rax,rbx
   14001ef8a:	add    rsp,0x20
   14001ef8e:	pop    rbx
   14001ef8f:	ret    
   14001ef90:	mov    QWORD PTR [rsp+0x8],rbx
   14001ef95:	push   rdi
   14001ef96:	sub    rsp,0x20
   14001ef9a:	call   QWORD PTR [rip+0x10200]        # 0x14002f1a0
   14001efa0:	mov    ecx,DWORD PTR [rip+0x226e2]        # 0x140041688
   14001efa6:	mov    edi,eax
   14001efa8:	call   0x14001dc74
   14001efad:	mov    rbx,rax
   14001efb0:	test   rax,rax
   14001efb3:	jne    0x14001effc
   14001efb5:	lea    ecx,[rax+0x1]
   14001efb8:	mov    edx,0x478
   14001efbd:	call   0x14001c1dc
   14001efc2:	mov    rbx,rax
   14001efc5:	test   rax,rax
   14001efc8:	je     0x14001effc
   14001efca:	mov    ecx,DWORD PTR [rip+0x226b8]        # 0x140041688
   14001efd0:	mov    rdx,rax
   14001efd3:	call   0x14001dc90
   14001efd8:	mov    rcx,rbx
   14001efdb:	test   eax,eax
   14001efdd:	je     0x14001eff5
   14001efdf:	xor    edx,edx
   14001efe1:	call   0x14001f014
   14001efe6:	call   QWORD PTR [rip+0x10154]        # 0x14002f140
   14001efec:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001eff1:	mov    DWORD PTR [rbx],eax
   14001eff3:	jmp    0x14001effc
   14001eff5:	call   0x14001a1ac
   14001effa:	xor    ebx,ebx
   14001effc:	mov    ecx,edi
   14001effe:	call   QWORD PTR [rip+0x100fc]        # 0x14002f100
   14001f004:	mov    rax,rbx
   14001f007:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f00c:	add    rsp,0x20
   14001f010:	pop    rdi
   14001f011:	ret    
   14001f012:	int3   
   14001f013:	int3   
   14001f014:	mov    QWORD PTR [rsp+0x8],rbx
   14001f019:	push   rdi
   14001f01a:	sub    rsp,0x20
   14001f01e:	mov    rdi,rdx
   14001f021:	mov    rbx,rcx
   14001f024:	lea    rax,[rip+0x162d5]        # 0x140035300
   14001f02b:	mov    QWORD PTR [rcx+0xa0],rax
   14001f032:	and    DWORD PTR [rcx+0x10],0x0
   14001f036:	mov    DWORD PTR [rcx+0x1c],0x1
   14001f03d:	mov    DWORD PTR [rcx+0xc8],0x1
   14001f047:	mov    eax,0x43
   14001f04c:	mov    WORD PTR [rcx+0x164],ax
   14001f053:	mov    WORD PTR [rcx+0x26a],ax
   14001f05a:	lea    rax,[rip+0x2283f]        # 0x1400418a0
   14001f061:	mov    QWORD PTR [rcx+0xb8],rax
   14001f068:	and    QWORD PTR [rcx+0x470],0x0
   14001f070:	mov    ecx,0xd
   14001f075:	call   0x14001b118
   14001f07a:	nop
   14001f07b:	mov    rax,QWORD PTR [rbx+0xb8]
   14001f082:	lock inc DWORD PTR [rax]
   14001f085:	mov    ecx,0xd
   14001f08a:	call   0x14001b308
   14001f08f:	mov    ecx,0xc
   14001f094:	call   0x14001b118
   14001f099:	nop
   14001f09a:	mov    QWORD PTR [rbx+0xc0],rdi
   14001f0a1:	test   rdi,rdi
   14001f0a4:	jne    0x14001f0b4
   14001f0a6:	mov    rax,QWORD PTR [rip+0x22de3]        # 0x140041e90
   14001f0ad:	mov    QWORD PTR [rbx+0xc0],rax
   14001f0b4:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001f0bb:	call   0x14001f17c
   14001f0c0:	nop
   14001f0c1:	mov    ecx,0xc
   14001f0c6:	call   0x14001b308
   14001f0cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f0d0:	add    rsp,0x20
   14001f0d4:	pop    rdi
   14001f0d5:	ret    
   14001f0d6:	int3   
   14001f0d7:	int3   
   14001f0d8:	rex push rbx
   14001f0da:	sub    rsp,0x20
   14001f0de:	call   0x14001e978
   14001f0e3:	call   0x14001b2a4
   14001f0e8:	test   eax,eax
   14001f0ea:	je     0x14001f14a
   14001f0ec:	lea    rcx,[rip+0xfffffffffffffd45]        # 0x14001ee38
   14001f0f3:	call   0x14001dc3c
   14001f0f8:	mov    DWORD PTR [rip+0x2258a],eax        # 0x140041688
   14001f0fe:	cmp    eax,0xffffffff
   14001f101:	je     0x14001f14a
   14001f103:	mov    edx,0x478
   14001f108:	mov    ecx,0x1
   14001f10d:	call   0x14001c1dc
   14001f112:	mov    rbx,rax
   14001f115:	test   rax,rax
   14001f118:	je     0x14001f14a
   14001f11a:	mov    ecx,DWORD PTR [rip+0x22568]        # 0x140041688
   14001f120:	mov    rdx,rax
   14001f123:	call   0x14001dc90
   14001f128:	test   eax,eax
   14001f12a:	je     0x14001f14a
   14001f12c:	xor    edx,edx
   14001f12e:	mov    rcx,rbx
   14001f131:	call   0x14001f014
   14001f136:	call   QWORD PTR [rip+0x10004]        # 0x14002f140
   14001f13c:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001f141:	mov    DWORD PTR [rbx],eax
   14001f143:	mov    eax,0x1
   14001f148:	jmp    0x14001f151
   14001f14a:	call   0x14001f158
   14001f14f:	xor    eax,eax
   14001f151:	add    rsp,0x20
   14001f155:	pop    rbx
   14001f156:	ret    
   14001f157:	int3   
   14001f158:	sub    rsp,0x28
   14001f15c:	mov    ecx,DWORD PTR [rip+0x22526]        # 0x140041688
   14001f162:	cmp    ecx,0xffffffff
   14001f165:	je     0x14001f173
   14001f167:	call   0x14001dc58
   14001f16c:	or     DWORD PTR [rip+0x22515],0xffffffff        # 0x140041688
   14001f173:	add    rsp,0x28
   14001f177:	jmp    0x14001b15c
   14001f17c:	lock inc DWORD PTR [rcx]
   14001f17f:	mov    rax,QWORD PTR [rcx+0xd8]
   14001f186:	test   rax,rax
   14001f189:	je     0x14001f18e
   14001f18b:	lock inc DWORD PTR [rax]
   14001f18e:	mov    rax,QWORD PTR [rcx+0xe8]
   14001f195:	test   rax,rax
   14001f198:	je     0x14001f19d
   14001f19a:	lock inc DWORD PTR [rax]
   14001f19d:	mov    rax,QWORD PTR [rcx+0xe0]
   14001f1a4:	test   rax,rax
   14001f1a7:	je     0x14001f1ac
   14001f1a9:	lock inc DWORD PTR [rax]
   14001f1ac:	mov    rax,QWORD PTR [rcx+0xf8]
   14001f1b3:	test   rax,rax
   14001f1b6:	je     0x14001f1bb
   14001f1b8:	lock inc DWORD PTR [rax]
   14001f1bb:	lea    rax,[rcx+0x28]
   14001f1bf:	mov    r8d,0x6
   14001f1c5:	lea    rdx,[rip+0x22a00]        # 0x140041bcc
   14001f1cc:	cmp    QWORD PTR [rax-0x10],rdx
   14001f1d0:	je     0x14001f1dd
   14001f1d2:	mov    rdx,QWORD PTR [rax]
   14001f1d5:	test   rdx,rdx
   14001f1d8:	je     0x14001f1dd
   14001f1da:	lock inc DWORD PTR [rdx]
   14001f1dd:	cmp    QWORD PTR [rax-0x18],0x0
   14001f1e2:	je     0x14001f1f0
   14001f1e4:	mov    rdx,QWORD PTR [rax-0x8]
   14001f1e8:	test   rdx,rdx
   14001f1eb:	je     0x14001f1f0
   14001f1ed:	lock inc DWORD PTR [rdx]
   14001f1f0:	add    rax,0x20
   14001f1f4:	dec    r8
   14001f1f7:	jne    0x14001f1c5
   14001f1f9:	mov    rax,QWORD PTR [rcx+0x120]
   14001f200:	lock inc DWORD PTR [rax+0x15c]
   14001f207:	ret    
   14001f208:	mov    QWORD PTR [rsp+0x8],rbx
   14001f20d:	mov    QWORD PTR [rsp+0x10],rbp
   14001f212:	mov    QWORD PTR [rsp+0x18],rsi
   14001f217:	push   rdi
   14001f218:	sub    rsp,0x20
   14001f21c:	mov    rax,QWORD PTR [rcx+0xf0]
   14001f223:	mov    rbx,rcx
   14001f226:	test   rax,rax
   14001f229:	je     0x14001f2a4
   14001f22b:	lea    rcx,[rip+0x21f9e]        # 0x1400411d0
   14001f232:	cmp    rax,rcx
   14001f235:	je     0x14001f2a4
   14001f237:	mov    rax,QWORD PTR [rbx+0xd8]
   14001f23e:	test   rax,rax
   14001f241:	je     0x14001f2a4
   14001f243:	cmp    DWORD PTR [rax],0x0
   14001f246:	jne    0x14001f2a4
   14001f248:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001f24f:	test   rcx,rcx
   14001f252:	je     0x14001f26a
   14001f254:	cmp    DWORD PTR [rcx],0x0
   14001f257:	jne    0x14001f26a
   14001f259:	call   0x14001a1ac
   14001f25e:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001f265:	call   0x1400256e8
   14001f26a:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001f271:	test   rcx,rcx
   14001f274:	je     0x14001f28c
   14001f276:	cmp    DWORD PTR [rcx],0x0
   14001f279:	jne    0x14001f28c
   14001f27b:	call   0x14001a1ac
   14001f280:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001f287:	call   0x140025cf4
   14001f28c:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001f293:	call   0x14001a1ac
   14001f298:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001f29f:	call   0x14001a1ac
   14001f2a4:	mov    rax,QWORD PTR [rbx+0xf8]
   14001f2ab:	test   rax,rax
   14001f2ae:	je     0x14001f2f7
   14001f2b0:	cmp    DWORD PTR [rax],0x0
   14001f2b3:	jne    0x14001f2f7
   14001f2b5:	mov    rcx,QWORD PTR [rbx+0x100]
   14001f2bc:	sub    rcx,0xfe
   14001f2c3:	call   0x14001a1ac
   14001f2c8:	mov    rcx,QWORD PTR [rbx+0x110]
   14001f2cf:	mov    edi,0x80
   14001f2d4:	sub    rcx,rdi
   14001f2d7:	call   0x14001a1ac
   14001f2dc:	mov    rcx,QWORD PTR [rbx+0x118]
   14001f2e3:	sub    rcx,rdi
   14001f2e6:	call   0x14001a1ac
   14001f2eb:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001f2f2:	call   0x14001a1ac
   14001f2f7:	mov    rcx,QWORD PTR [rbx+0x120]
   14001f2fe:	lea    rax,[rip+0x228cb]        # 0x140041bd0
   14001f305:	cmp    rcx,rax
   14001f308:	je     0x14001f324
   14001f30a:	cmp    DWORD PTR [rcx+0x15c],0x0
   14001f311:	jne    0x14001f324
   14001f313:	call   0x140026028
   14001f318:	mov    rcx,QWORD PTR [rbx+0x120]
   14001f31f:	call   0x14001a1ac
   14001f324:	lea    rsi,[rbx+0x128]
   14001f32b:	lea    rdi,[rbx+0x28]
   14001f32f:	mov    ebp,0x6
   14001f334:	lea    rax,[rip+0x22891]        # 0x140041bcc
   14001f33b:	cmp    QWORD PTR [rdi-0x10],rax
   14001f33f:	je     0x14001f35b
   14001f341:	mov    rcx,QWORD PTR [rdi]
   14001f344:	test   rcx,rcx
   14001f347:	je     0x14001f35b
   14001f349:	cmp    DWORD PTR [rcx],0x0
   14001f34c:	jne    0x14001f35b
   14001f34e:	call   0x14001a1ac
   14001f353:	mov    rcx,QWORD PTR [rsi]
   14001f356:	call   0x14001a1ac
   14001f35b:	cmp    QWORD PTR [rdi-0x18],0x0
   14001f360:	je     0x14001f375
   14001f362:	mov    rcx,QWORD PTR [rdi-0x8]
   14001f366:	test   rcx,rcx
   14001f369:	je     0x14001f375
   14001f36b:	cmp    DWORD PTR [rcx],0x0
   14001f36e:	jne    0x14001f375
   14001f370:	call   0x14001a1ac
   14001f375:	add    rsi,0x8
   14001f379:	add    rdi,0x20
   14001f37d:	dec    rbp
   14001f380:	jne    0x14001f334
   14001f382:	mov    rcx,rbx
   14001f385:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f38a:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f38f:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f394:	add    rsp,0x20
   14001f398:	pop    rdi
   14001f399:	jmp    0x14001a1ac
   14001f39e:	int3   
   14001f39f:	int3   
   14001f3a0:	test   rcx,rcx
   14001f3a3:	je     0x14001f440
   14001f3a9:	or     r9d,0xffffffff
   14001f3ad:	lock add DWORD PTR [rcx],r9d
   14001f3b1:	mov    rax,QWORD PTR [rcx+0xd8]
   14001f3b8:	test   rax,rax
   14001f3bb:	je     0x14001f3c1
   14001f3bd:	lock add DWORD PTR [rax],r9d
   14001f3c1:	mov    rax,QWORD PTR [rcx+0xe8]
   14001f3c8:	test   rax,rax
   14001f3cb:	je     0x14001f3d1
   14001f3cd:	lock add DWORD PTR [rax],r9d
   14001f3d1:	mov    rax,QWORD PTR [rcx+0xe0]
   14001f3d8:	test   rax,rax
   14001f3db:	je     0x14001f3e1
   14001f3dd:	lock add DWORD PTR [rax],r9d
   14001f3e1:	mov    rax,QWORD PTR [rcx+0xf8]
   14001f3e8:	test   rax,rax
   14001f3eb:	je     0x14001f3f1
   14001f3ed:	lock add DWORD PTR [rax],r9d
   14001f3f1:	lea    rax,[rcx+0x28]
   14001f3f5:	mov    r8d,0x6
   14001f3fb:	lea    rdx,[rip+0x227ca]        # 0x140041bcc
   14001f402:	cmp    QWORD PTR [rax-0x10],rdx
   14001f406:	je     0x14001f414
   14001f408:	mov    rdx,QWORD PTR [rax]
   14001f40b:	test   rdx,rdx
   14001f40e:	je     0x14001f414
   14001f410:	lock add DWORD PTR [rdx],r9d
   14001f414:	cmp    QWORD PTR [rax-0x18],0x0
   14001f419:	je     0x14001f428
   14001f41b:	mov    rdx,QWORD PTR [rax-0x8]
   14001f41f:	test   rdx,rdx
   14001f422:	je     0x14001f428
   14001f424:	lock add DWORD PTR [rdx],r9d
   14001f428:	add    rax,0x20
   14001f42c:	dec    r8
   14001f42f:	jne    0x14001f3fb
   14001f431:	mov    rax,QWORD PTR [rcx+0x120]
   14001f438:	lock add DWORD PTR [rax+0x15c],r9d
   14001f440:	mov    rax,rcx
   14001f443:	ret    
   14001f444:	rex push rbx
   14001f446:	sub    rsp,0x20
   14001f44a:	call   0x14001ef6c
   14001f44f:	mov    rbx,rax
   14001f452:	mov    ecx,DWORD PTR [rip+0x22ba0]        # 0x140041ff8
   14001f458:	test   DWORD PTR [rax+0xc8],ecx
   14001f45e:	je     0x14001f478
   14001f460:	cmp    QWORD PTR [rax+0xc0],0x0
   14001f468:	je     0x14001f478
   14001f46a:	call   0x14001ef6c
   14001f46f:	mov    rbx,QWORD PTR [rax+0xc0]
   14001f476:	jmp    0x14001f4a3
   14001f478:	mov    ecx,0xc
   14001f47d:	call   0x14001b118
   14001f482:	nop
   14001f483:	lea    rcx,[rbx+0xc0]
   14001f48a:	mov    rdx,QWORD PTR [rip+0x229ff]        # 0x140041e90
   14001f491:	call   0x14001f4bc
   14001f496:	mov    rbx,rax
   14001f499:	mov    ecx,0xc
   14001f49e:	call   0x14001b308
   14001f4a3:	test   rbx,rbx
   14001f4a6:	jne    0x14001f4b0
   14001f4a8:	lea    ecx,[rbx+0x20]
   14001f4ab:	call   0x14001e88c
   14001f4b0:	mov    rax,rbx
   14001f4b3:	add    rsp,0x20
   14001f4b7:	pop    rbx
   14001f4b8:	ret    
   14001f4b9:	int3   
   14001f4ba:	int3   
   14001f4bb:	int3   
   14001f4bc:	mov    QWORD PTR [rsp+0x8],rbx
   14001f4c1:	push   rdi
   14001f4c2:	sub    rsp,0x20
   14001f4c6:	mov    rdi,rdx
   14001f4c9:	test   rdx,rdx
   14001f4cc:	je     0x14001f511
   14001f4ce:	test   rcx,rcx
   14001f4d1:	je     0x14001f511
   14001f4d3:	mov    rbx,QWORD PTR [rcx]
   14001f4d6:	cmp    rbx,rdx
   14001f4d9:	je     0x14001f50c
   14001f4db:	mov    QWORD PTR [rcx],rdx
   14001f4de:	mov    rcx,rdx
   14001f4e1:	call   0x14001f17c
   14001f4e6:	test   rbx,rbx
   14001f4e9:	je     0x14001f50c
   14001f4eb:	mov    rcx,rbx
   14001f4ee:	call   0x14001f3a0
   14001f4f3:	cmp    DWORD PTR [rbx],0x0
   14001f4f6:	jne    0x14001f50c
   14001f4f8:	lea    rax,[rip+0x229a1]        # 0x140041ea0
   14001f4ff:	cmp    rbx,rax
   14001f502:	je     0x14001f50c
   14001f504:	mov    rcx,rbx
   14001f507:	call   0x14001f208
   14001f50c:	mov    rax,rdi
   14001f50f:	jmp    0x14001f513
   14001f511:	xor    eax,eax
   14001f513:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f518:	add    rsp,0x20
   14001f51c:	pop    rdi
   14001f51d:	ret    
   14001f51e:	int3   
   14001f51f:	int3   
   14001f520:	sub    rsp,0x28
   14001f524:	cmp    DWORD PTR [rip+0x266b5],0x0        # 0x140045be0
   14001f52b:	jne    0x14001f541
   14001f52d:	mov    ecx,0xfffffffd
   14001f532:	call   0x14001f8f8
   14001f537:	mov    DWORD PTR [rip+0x2669f],0x1        # 0x140045be0
   14001f541:	xor    eax,eax
   14001f543:	add    rsp,0x28
   14001f547:	ret    
   14001f548:	rex push rbx
   14001f54a:	sub    rsp,0x40
   14001f54e:	mov    ebx,ecx
   14001f550:	lea    rcx,[rsp+0x20]
   14001f555:	xor    edx,edx
   14001f557:	call   0x140019058
   14001f55c:	and    DWORD PTR [rip+0x24a8d],0x0        # 0x140043ff0
   14001f563:	cmp    ebx,0xfffffffe
   14001f566:	jne    0x14001f57a
   14001f568:	mov    DWORD PTR [rip+0x24a7e],0x1        # 0x140043ff0
   14001f572:	call   QWORD PTR [rip+0xfdc8]        # 0x14002f340
   14001f578:	jmp    0x14001f58f
   14001f57a:	cmp    ebx,0xfffffffd
   14001f57d:	jne    0x14001f593
   14001f57f:	mov    DWORD PTR [rip+0x24a67],0x1        # 0x140043ff0
   14001f589:	call   QWORD PTR [rip+0xfda9]        # 0x14002f338
   14001f58f:	mov    ebx,eax
   14001f591:	jmp    0x14001f5aa
   14001f593:	cmp    ebx,0xfffffffc
   14001f596:	jne    0x14001f5aa
   14001f598:	mov    rax,QWORD PTR [rsp+0x20]
   14001f59d:	mov    DWORD PTR [rip+0x24a49],0x1        # 0x140043ff0
   14001f5a7:	mov    ebx,DWORD PTR [rax+0x4]
   14001f5aa:	cmp    BYTE PTR [rsp+0x38],0x0
   14001f5af:	je     0x14001f5bd
   14001f5b1:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f5b6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001f5bd:	mov    eax,ebx
   14001f5bf:	add    rsp,0x40
   14001f5c3:	pop    rbx
   14001f5c4:	ret    
   14001f5c5:	int3   
   14001f5c6:	int3   
   14001f5c7:	int3   
   14001f5c8:	mov    QWORD PTR [rsp+0x8],rbx
   14001f5cd:	mov    QWORD PTR [rsp+0x10],rbp
   14001f5d2:	mov    QWORD PTR [rsp+0x18],rsi
   14001f5d7:	push   rdi
   14001f5d8:	sub    rsp,0x20
   14001f5dc:	lea    rbx,[rcx+0x18]
   14001f5e0:	mov    rsi,rcx
   14001f5e3:	mov    ebp,0x101
   14001f5e8:	mov    rcx,rbx
   14001f5eb:	mov    r8d,ebp
   14001f5ee:	xor    edx,edx
   14001f5f0:	call   0x14001b980
   14001f5f5:	xor    eax,eax
   14001f5f7:	lea    rdi,[rsi+0xc]
   14001f5fb:	mov    QWORD PTR [rsi+0x4],rax
   14001f5ff:	mov    QWORD PTR [rsi+0x220],rax
   14001f606:	mov    ecx,0x6
   14001f60b:	movzx  eax,ax
   14001f60e:	rep stos WORD PTR es:[rdi],ax
   14001f611:	lea    rdi,[rip+0x22288]        # 0x1400418a0
   14001f618:	sub    rdi,rsi
   14001f61b:	mov    al,BYTE PTR [rdi+rbx*1]
   14001f61e:	mov    BYTE PTR [rbx],al
   14001f620:	inc    rbx
   14001f623:	dec    rbp
   14001f626:	jne    0x14001f61b
   14001f628:	lea    rcx,[rsi+0x119]
   14001f62f:	mov    edx,0x100
   14001f634:	mov    al,BYTE PTR [rcx+rdi*1]
   14001f637:	mov    BYTE PTR [rcx],al
   14001f639:	inc    rcx
   14001f63c:	dec    rdx
   14001f63f:	jne    0x14001f634
   14001f641:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f646:	mov    rbp,QWORD PTR [rsp+0x38]
   14001f64b:	mov    rsi,QWORD PTR [rsp+0x40]
   14001f650:	add    rsp,0x20
   14001f654:	pop    rdi
   14001f655:	ret    
   14001f656:	int3   
   14001f657:	int3   
   14001f658:	mov    QWORD PTR [rsp+0x10],rbx
   14001f65d:	mov    QWORD PTR [rsp+0x18],rdi
   14001f662:	push   rbp
   14001f663:	lea    rbp,[rsp-0x480]
   14001f66b:	sub    rsp,0x580
   14001f672:	mov    rax,QWORD PTR [rip+0x21fd7]        # 0x140041650
   14001f679:	xor    rax,rsp
   14001f67c:	mov    QWORD PTR [rbp+0x470],rax
   14001f683:	mov    rdi,rcx
   14001f686:	mov    ecx,DWORD PTR [rcx+0x4]
   14001f689:	lea    rdx,[rsp+0x50]
   14001f68e:	call   QWORD PTR [rip+0xfbf4]        # 0x14002f288
   14001f694:	mov    ebx,0x100
   14001f699:	test   eax,eax
   14001f69b:	je     0x14001f7d6
   14001f6a1:	xor    eax,eax
   14001f6a3:	lea    rcx,[rsp+0x70]
   14001f6a8:	mov    BYTE PTR [rcx],al
   14001f6aa:	inc    eax
   14001f6ac:	inc    rcx
   14001f6af:	cmp    eax,ebx
   14001f6b1:	jb     0x14001f6a8
   14001f6b3:	mov    al,BYTE PTR [rsp+0x56]
   14001f6b7:	mov    BYTE PTR [rsp+0x70],0x20
   14001f6bc:	lea    rdx,[rsp+0x56]
   14001f6c1:	jmp    0x14001f6e5
   14001f6c3:	movzx  r8d,BYTE PTR [rdx+0x1]
   14001f6c8:	movzx  ecx,al
   14001f6cb:	jmp    0x14001f6da
   14001f6cd:	cmp    ecx,ebx
   14001f6cf:	jae    0x14001f6df
   14001f6d1:	mov    eax,ecx
   14001f6d3:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14001f6d8:	inc    ecx
   14001f6da:	cmp    ecx,r8d
   14001f6dd:	jbe    0x14001f6cd
   14001f6df:	add    rdx,0x2
   14001f6e3:	mov    al,BYTE PTR [rdx]
   14001f6e5:	test   al,al
   14001f6e7:	jne    0x14001f6c3
   14001f6e9:	mov    eax,DWORD PTR [rdi+0x4]
   14001f6ec:	and    DWORD PTR [rsp+0x30],0x0
   14001f6f1:	lea    r8,[rsp+0x70]
   14001f6f6:	mov    DWORD PTR [rsp+0x28],eax
   14001f6fa:	lea    rax,[rbp+0x270]
   14001f701:	mov    r9d,ebx
   14001f704:	mov    edx,0x1
   14001f709:	xor    ecx,ecx
   14001f70b:	mov    QWORD PTR [rsp+0x20],rax
   14001f710:	call   0x140024cc4
   14001f715:	and    DWORD PTR [rsp+0x40],0x0
   14001f71a:	mov    eax,DWORD PTR [rdi+0x4]
   14001f71d:	mov    rdx,QWORD PTR [rdi+0x220]
   14001f724:	mov    DWORD PTR [rsp+0x38],eax
   14001f728:	lea    rax,[rbp+0x70]
   14001f72c:	mov    DWORD PTR [rsp+0x30],ebx
   14001f730:	mov    QWORD PTR [rsp+0x28],rax
   14001f735:	lea    r9,[rsp+0x70]
   14001f73a:	mov    r8d,ebx
   14001f73d:	xor    ecx,ecx
   14001f73f:	mov    DWORD PTR [rsp+0x20],ebx
   14001f743:	call   0x14001c144
   14001f748:	and    DWORD PTR [rsp+0x40],0x0
   14001f74d:	mov    eax,DWORD PTR [rdi+0x4]
   14001f750:	mov    rdx,QWORD PTR [rdi+0x220]
   14001f757:	mov    DWORD PTR [rsp+0x38],eax
   14001f75b:	lea    rax,[rbp+0x170]
   14001f762:	mov    DWORD PTR [rsp+0x30],ebx
   14001f766:	mov    QWORD PTR [rsp+0x28],rax
   14001f76b:	lea    r9,[rsp+0x70]
   14001f770:	mov    r8d,0x200
   14001f776:	xor    ecx,ecx
   14001f778:	mov    DWORD PTR [rsp+0x20],ebx
   14001f77c:	call   0x14001c144
   14001f781:	lea    r8,[rbp+0x70]
   14001f785:	lea    r9,[rbp+0x170]
   14001f78c:	sub    r8,rdi
   14001f78f:	lea    rdx,[rbp+0x270]
   14001f796:	lea    rcx,[rdi+0x19]
   14001f79a:	sub    r9,rdi
   14001f79d:	test   BYTE PTR [rdx],0x1
   14001f7a0:	je     0x14001f7ac
   14001f7a2:	or     BYTE PTR [rcx],0x10
   14001f7a5:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14001f7aa:	jmp    0x14001f7b9
   14001f7ac:	test   BYTE PTR [rdx],0x2
   14001f7af:	je     0x14001f7c1
   14001f7b1:	or     BYTE PTR [rcx],0x20
   14001f7b4:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14001f7b9:	mov    BYTE PTR [rcx+0x100],al
   14001f7bf:	jmp    0x14001f7c8
   14001f7c1:	mov    BYTE PTR [rcx+0x100],0x0
   14001f7c8:	inc    rcx
   14001f7cb:	add    rdx,0x2
   14001f7cf:	dec    rbx
   14001f7d2:	jne    0x14001f79d
   14001f7d4:	jmp    0x14001f815
   14001f7d6:	xor    edx,edx
   14001f7d8:	lea    rcx,[rdi+0x19]
   14001f7dc:	lea    r8d,[rdx-0x61]
   14001f7e0:	lea    eax,[r8+0x20]
   14001f7e4:	cmp    eax,0x19
   14001f7e7:	ja     0x14001f7f1
   14001f7e9:	or     BYTE PTR [rcx],0x10
   14001f7ec:	lea    eax,[rdx+0x20]
   14001f7ef:	jmp    0x14001f7fd
   14001f7f1:	cmp    r8d,0x19
   14001f7f5:	ja     0x14001f805
   14001f7f7:	or     BYTE PTR [rcx],0x20
   14001f7fa:	lea    eax,[rdx-0x20]
   14001f7fd:	mov    BYTE PTR [rcx+0x100],al
   14001f803:	jmp    0x14001f80c
   14001f805:	mov    BYTE PTR [rcx+0x100],0x0
   14001f80c:	inc    edx
   14001f80e:	inc    rcx
   14001f811:	cmp    edx,ebx
   14001f813:	jb     0x14001f7dc
   14001f815:	mov    rcx,QWORD PTR [rbp+0x470]
   14001f81c:	xor    rcx,rsp
   14001f81f:	call   0x1400187d0
   14001f824:	lea    r11,[rsp+0x580]
   14001f82c:	mov    rbx,QWORD PTR [r11+0x18]
   14001f830:	mov    rdi,QWORD PTR [r11+0x20]
   14001f834:	mov    rsp,r11
   14001f837:	pop    rbp
   14001f838:	ret    
   14001f839:	int3   
   14001f83a:	int3   
   14001f83b:	int3   
   14001f83c:	mov    QWORD PTR [rsp+0x10],rbx
   14001f841:	push   rdi
   14001f842:	sub    rsp,0x20
   14001f846:	call   0x14001ef6c
   14001f84b:	mov    rdi,rax
   14001f84e:	mov    ecx,DWORD PTR [rip+0x227a4]        # 0x140041ff8
   14001f854:	test   DWORD PTR [rax+0xc8],ecx
   14001f85a:	je     0x14001f86f
   14001f85c:	cmp    QWORD PTR [rax+0xc0],0x0
   14001f864:	je     0x14001f86f
   14001f866:	mov    rbx,QWORD PTR [rax+0xb8]
   14001f86d:	jmp    0x14001f8db
   14001f86f:	mov    ecx,0xd
   14001f874:	call   0x14001b118
   14001f879:	nop
   14001f87a:	mov    rbx,QWORD PTR [rdi+0xb8]
   14001f881:	mov    QWORD PTR [rsp+0x30],rbx
   14001f886:	cmp    rbx,QWORD PTR [rip+0x22333]        # 0x140041bc0
   14001f88d:	je     0x14001f8d1
   14001f88f:	test   rbx,rbx
   14001f892:	je     0x14001f8af
   14001f894:	lock dec DWORD PTR [rbx]
   14001f897:	jne    0x14001f8af
   14001f899:	lea    rax,[rip+0x22000]        # 0x1400418a0
   14001f8a0:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f8a5:	cmp    rcx,rax
   14001f8a8:	je     0x14001f8af
   14001f8aa:	call   0x14001a1ac
   14001f8af:	mov    rax,QWORD PTR [rip+0x2230a]        # 0x140041bc0
   14001f8b6:	mov    QWORD PTR [rdi+0xb8],rax
   14001f8bd:	mov    rax,QWORD PTR [rip+0x222fc]        # 0x140041bc0
   14001f8c4:	mov    QWORD PTR [rsp+0x30],rax
   14001f8c9:	lock inc DWORD PTR [rax]
   14001f8cc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f8d1:	mov    ecx,0xd
   14001f8d6:	call   0x14001b308
   14001f8db:	test   rbx,rbx
   14001f8de:	jne    0x14001f8e8
   14001f8e0:	lea    ecx,[rbx+0x20]
   14001f8e3:	call   0x14001e88c
   14001f8e8:	mov    rax,rbx
   14001f8eb:	mov    rbx,QWORD PTR [rsp+0x38]
   14001f8f0:	add    rsp,0x20
   14001f8f4:	pop    rdi
   14001f8f5:	ret    
   14001f8f6:	int3   
   14001f8f7:	int3   
   14001f8f8:	mov    rax,rsp
   14001f8fb:	mov    QWORD PTR [rax+0x8],rbx
   14001f8ff:	mov    QWORD PTR [rax+0x10],rsi
   14001f903:	mov    QWORD PTR [rax+0x18],rdi
   14001f907:	mov    QWORD PTR [rax+0x20],r14
   14001f90b:	push   r15
   14001f90d:	sub    rsp,0x30
   14001f911:	mov    edi,ecx
   14001f913:	or     r15d,0xffffffff
   14001f917:	call   0x14001ef6c
   14001f91c:	mov    rsi,rax
   14001f91f:	call   0x14001f83c
   14001f924:	mov    rbx,QWORD PTR [rsi+0xb8]
   14001f92b:	mov    ecx,edi
   14001f92d:	call   0x14001f548
   14001f932:	mov    r14d,eax
   14001f935:	cmp    eax,DWORD PTR [rbx+0x4]
   14001f938:	je     0x14001fb19
   14001f93e:	mov    ecx,0x228
   14001f943:	call   0x14001c25c
   14001f948:	mov    rbx,rax
   14001f94b:	xor    edi,edi
   14001f94d:	test   rax,rax
   14001f950:	je     0x14001fb1e
   14001f956:	mov    rax,QWORD PTR [rsi+0xb8]
   14001f95d:	mov    rcx,rbx
   14001f960:	lea    edx,[rdi+0x4]
   14001f963:	lea    r8d,[rdx+0x7c]
   14001f967:	movups xmm0,XMMWORD PTR [rax]
   14001f96a:	movups XMMWORD PTR [rcx],xmm0
   14001f96d:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001f971:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001f975:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001f979:	movups XMMWORD PTR [rcx+0x20],xmm0
   14001f97d:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001f981:	movups XMMWORD PTR [rcx+0x30],xmm1
   14001f985:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001f989:	movups XMMWORD PTR [rcx+0x40],xmm0
   14001f98d:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001f991:	movups XMMWORD PTR [rcx+0x50],xmm1
   14001f995:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001f999:	movups XMMWORD PTR [rcx+0x60],xmm0
   14001f99d:	add    rcx,r8
   14001f9a0:	movups xmm1,XMMWORD PTR [rax+0x70]
   14001f9a4:	movups XMMWORD PTR [rcx-0x10],xmm1
   14001f9a8:	add    rax,r8
   14001f9ab:	dec    rdx
   14001f9ae:	jne    0x14001f967
   14001f9b0:	movups xmm0,XMMWORD PTR [rax]
   14001f9b3:	movups XMMWORD PTR [rcx],xmm0
   14001f9b6:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001f9ba:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001f9be:	mov    rax,QWORD PTR [rax+0x20]
   14001f9c2:	mov    QWORD PTR [rcx+0x20],rax
   14001f9c6:	mov    DWORD PTR [rbx],edi
   14001f9c8:	mov    rdx,rbx
   14001f9cb:	mov    ecx,r14d
   14001f9ce:	call   0x14001fb3c
   14001f9d3:	mov    r15d,eax
   14001f9d6:	test   eax,eax
   14001f9d8:	jne    0x14001faf3
   14001f9de:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001f9e5:	lea    r14,[rip+0x21eb4]        # 0x1400418a0
   14001f9ec:	lock dec DWORD PTR [rcx]
   14001f9ef:	jne    0x14001fa02
   14001f9f1:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001f9f8:	cmp    rcx,r14
   14001f9fb:	je     0x14001fa02
   14001f9fd:	call   0x14001a1ac
   14001fa02:	mov    QWORD PTR [rsi+0xb8],rbx
   14001fa09:	lock inc DWORD PTR [rbx]
   14001fa0c:	test   BYTE PTR [rsi+0xc8],0x2
   14001fa13:	jne    0x14001fb1e
   14001fa19:	test   BYTE PTR [rip+0x225d8],0x1        # 0x140041ff8
   14001fa20:	jne    0x14001fb1e
   14001fa26:	mov    esi,0xd
   14001fa2b:	mov    ecx,esi
   14001fa2d:	call   0x14001b118
   14001fa32:	nop
   14001fa33:	mov    eax,DWORD PTR [rbx+0x4]
   14001fa36:	mov    DWORD PTR [rip+0x24594],eax        # 0x140043fd0
   14001fa3c:	mov    eax,DWORD PTR [rbx+0x8]
   14001fa3f:	mov    DWORD PTR [rip+0x2458f],eax        # 0x140043fd4
   14001fa45:	mov    rax,QWORD PTR [rbx+0x220]
   14001fa4c:	mov    QWORD PTR [rip+0x24595],rax        # 0x140043fe8
   14001fa53:	mov    edx,edi
   14001fa55:	lea    r8,[rip+0xfffffffffffe05a4]        # 0x140000000
   14001fa5c:	mov    DWORD PTR [rsp+0x20],edx
   14001fa60:	cmp    edx,0x5
   14001fa63:	jge    0x14001fa7a
   14001fa65:	movsxd rcx,edx
   14001fa68:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   14001fa6d:	mov    WORD PTR [r8+rcx*2+0x43fd8],ax
   14001fa76:	inc    edx
   14001fa78:	jmp    0x14001fa5c
   14001fa7a:	mov    edx,edi
   14001fa7c:	mov    DWORD PTR [rsp+0x20],edx
   14001fa80:	cmp    edx,0x101
   14001fa86:	jge    0x14001fa9b
   14001fa88:	movsxd rcx,edx
   14001fa8b:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14001fa8f:	mov    BYTE PTR [rcx+r8*1+0x41690],al
   14001fa97:	inc    edx
   14001fa99:	jmp    0x14001fa7c
   14001fa9b:	mov    DWORD PTR [rsp+0x20],edi
   14001fa9f:	cmp    edi,0x100
   14001faa5:	jge    0x14001fabd
   14001faa7:	movsxd rcx,edi
   14001faaa:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14001fab1:	mov    BYTE PTR [rcx+r8*1+0x417a0],al
   14001fab9:	inc    edi
   14001fabb:	jmp    0x14001fa9b
   14001fabd:	mov    rcx,QWORD PTR [rip+0x220fc]        # 0x140041bc0
   14001fac4:	or     eax,0xffffffff
   14001fac7:	lock xadd DWORD PTR [rcx],eax
   14001facb:	dec    eax
   14001facd:	jne    0x14001fae0
   14001facf:	mov    rcx,QWORD PTR [rip+0x220ea]        # 0x140041bc0
   14001fad6:	cmp    rcx,r14
   14001fad9:	je     0x14001fae0
   14001fadb:	call   0x14001a1ac
   14001fae0:	mov    QWORD PTR [rip+0x220d9],rbx        # 0x140041bc0
   14001fae7:	lock inc DWORD PTR [rbx]
   14001faea:	mov    ecx,esi
   14001faec:	call   0x14001b308
   14001faf1:	jmp    0x14001fb1e
   14001faf3:	cmp    eax,0xffffffff
   14001faf6:	jne    0x14001fb1e
   14001faf8:	lea    r14,[rip+0x21da1]        # 0x1400418a0
   14001faff:	cmp    rbx,r14
   14001fb02:	je     0x14001fb0c
   14001fb04:	mov    rcx,rbx
   14001fb07:	call   0x14001a1ac
   14001fb0c:	call   0x14001b864
   14001fb11:	mov    DWORD PTR [rax],0x16
   14001fb17:	jmp    0x14001fb1e
   14001fb19:	xor    edi,edi
   14001fb1b:	mov    r15d,edi
   14001fb1e:	mov    eax,r15d
   14001fb21:	mov    rbx,QWORD PTR [rsp+0x40]
   14001fb26:	mov    rsi,QWORD PTR [rsp+0x48]
   14001fb2b:	mov    rdi,QWORD PTR [rsp+0x50]
   14001fb30:	mov    r14,QWORD PTR [rsp+0x58]
   14001fb35:	add    rsp,0x30
   14001fb39:	pop    r15
   14001fb3b:	ret    
   14001fb3c:	mov    QWORD PTR [rsp+0x18],rbx
   14001fb41:	mov    QWORD PTR [rsp+0x20],rbp
   14001fb46:	push   rsi
   14001fb47:	push   rdi
   14001fb48:	push   r12
   14001fb4a:	push   r14
   14001fb4c:	push   r15
   14001fb4e:	sub    rsp,0x40
   14001fb52:	mov    rax,QWORD PTR [rip+0x21af7]        # 0x140041650
   14001fb59:	xor    rax,rsp
   14001fb5c:	mov    QWORD PTR [rsp+0x38],rax
   14001fb61:	mov    rbx,rdx
   14001fb64:	call   0x14001f548
   14001fb69:	xor    esi,esi
   14001fb6b:	mov    edi,eax
   14001fb6d:	test   eax,eax
   14001fb6f:	jne    0x14001fb7e
   14001fb71:	mov    rcx,rbx
   14001fb74:	call   0x14001f5c8
   14001fb79:	jmp    0x14001fdc2
   14001fb7e:	lea    r12,[rip+0x21f4b]        # 0x140041ad0
   14001fb85:	mov    ebp,esi
   14001fb87:	mov    r15d,0x1
   14001fb8d:	mov    rax,r12
   14001fb90:	cmp    DWORD PTR [rax],edi
   14001fb92:	je     0x14001fcd0
   14001fb98:	add    ebp,r15d
   14001fb9b:	add    rax,0x30
   14001fb9f:	cmp    ebp,0x5
   14001fba2:	jb     0x14001fb90
   14001fba4:	lea    eax,[rdi-0xfde8]
   14001fbaa:	cmp    eax,r15d
   14001fbad:	jbe    0x14001fcc8
   14001fbb3:	movzx  ecx,di
   14001fbb6:	call   QWORD PTR [rip+0xf774]        # 0x14002f330
   14001fbbc:	test   eax,eax
   14001fbbe:	je     0x14001fcc8
   14001fbc4:	lea    rdx,[rsp+0x20]
   14001fbc9:	mov    ecx,edi
   14001fbcb:	call   QWORD PTR [rip+0xf6b7]        # 0x14002f288
   14001fbd1:	test   eax,eax
   14001fbd3:	je     0x14001fcbc
   14001fbd9:	lea    rcx,[rbx+0x18]
   14001fbdd:	xor    edx,edx
   14001fbdf:	mov    r8d,0x101
   14001fbe5:	call   0x14001b980
   14001fbea:	mov    DWORD PTR [rbx+0x4],edi
   14001fbed:	mov    QWORD PTR [rbx+0x220],rsi
   14001fbf4:	cmp    DWORD PTR [rsp+0x20],r15d
   14001fbf9:	jbe    0x14001fca5
   14001fbff:	lea    rdx,[rsp+0x26]
   14001fc04:	cmp    BYTE PTR [rsp+0x26],sil
   14001fc09:	je     0x14001fc44
   14001fc0b:	cmp    BYTE PTR [rdx+0x1],sil
   14001fc0f:	je     0x14001fc44
   14001fc11:	movzx  edi,BYTE PTR [rdx+0x1]
   14001fc15:	movzx  r8d,BYTE PTR [rdx]
   14001fc19:	cmp    r8d,edi
   14001fc1c:	ja     0x14001fc3b
   14001fc1e:	lea    ecx,[r8+0x1]
   14001fc22:	lea    rax,[rbx+0x18]
   14001fc26:	add    rax,rcx
   14001fc29:	sub    edi,r8d
   14001fc2c:	lea    ecx,[r15+rdi*1]
   14001fc30:	or     BYTE PTR [rax],0x4
   14001fc33:	add    rax,r15
   14001fc36:	sub    rcx,r15
   14001fc39:	jne    0x14001fc30
   14001fc3b:	add    rdx,0x2
   14001fc3f:	cmp    BYTE PTR [rdx],sil
   14001fc42:	jne    0x14001fc0b
   14001fc44:	lea    rax,[rbx+0x1a]
   14001fc48:	mov    ecx,0xfe
   14001fc4d:	or     BYTE PTR [rax],0x8
   14001fc50:	add    rax,r15
   14001fc53:	sub    rcx,r15
   14001fc56:	jne    0x14001fc4d
   14001fc58:	mov    ecx,DWORD PTR [rbx+0x4]
   14001fc5b:	sub    ecx,0x3a4
   14001fc61:	je     0x14001fc91
   14001fc63:	sub    ecx,0x4
   14001fc66:	je     0x14001fc88
   14001fc68:	sub    ecx,0xd
   14001fc6b:	je     0x14001fc7f
   14001fc6d:	dec    ecx
   14001fc6f:	je     0x14001fc76
   14001fc71:	mov    rax,rsi
   14001fc74:	jmp    0x14001fc98
   14001fc76:	mov    rax,QWORD PTR [rip+0x15133]        # 0x140034db0
   14001fc7d:	jmp    0x14001fc98
   14001fc7f:	mov    rax,QWORD PTR [rip+0x15122]        # 0x140034da8
   14001fc86:	jmp    0x14001fc98
   14001fc88:	mov    rax,QWORD PTR [rip+0x15111]        # 0x140034da0
   14001fc8f:	jmp    0x14001fc98
   14001fc91:	mov    rax,QWORD PTR [rip+0x15100]        # 0x140034d98
   14001fc98:	mov    QWORD PTR [rbx+0x220],rax
   14001fc9f:	mov    DWORD PTR [rbx+0x8],r15d
   14001fca3:	jmp    0x14001fca8
   14001fca5:	mov    DWORD PTR [rbx+0x8],esi
   14001fca8:	lea    rdi,[rbx+0xc]
   14001fcac:	movzx  eax,si
   14001fcaf:	mov    ecx,0x6
   14001fcb4:	rep stos WORD PTR es:[rdi],ax
   14001fcb7:	jmp    0x14001fdba
   14001fcbc:	cmp    DWORD PTR [rip+0x2432e],esi        # 0x140043ff0
   14001fcc2:	jne    0x14001fb71
   14001fcc8:	or     eax,0xffffffff
   14001fccb:	jmp    0x14001fdc4
   14001fcd0:	lea    rcx,[rbx+0x18]
   14001fcd4:	xor    edx,edx
   14001fcd6:	mov    r8d,0x101
   14001fcdc:	call   0x14001b980
   14001fce1:	mov    eax,ebp
   14001fce3:	lea    r9,[r12+0x10]
   14001fce8:	lea    r11,[rax+rax*2]
   14001fcec:	lea    r14,[rip+0x21dd5]        # 0x140041ac8
   14001fcf3:	mov    ebp,0x4
   14001fcf8:	shl    r11,0x4
   14001fcfc:	add    r9,r11
   14001fcff:	mov    rdx,r9
   14001fd02:	cmp    BYTE PTR [r9],sil
   14001fd05:	je     0x14001fd47
   14001fd07:	cmp    BYTE PTR [rdx+0x1],sil
   14001fd0b:	je     0x14001fd47
   14001fd0d:	movzx  r8d,BYTE PTR [rdx]
   14001fd11:	movzx  eax,BYTE PTR [rdx+0x1]
   14001fd15:	cmp    r8d,eax
   14001fd18:	ja     0x14001fd3e
   14001fd1a:	lea    r10d,[r8+0x1]
   14001fd1e:	cmp    r10d,0x101
   14001fd25:	jae    0x14001fd3e
   14001fd27:	mov    al,BYTE PTR [r14]
   14001fd2a:	add    r8d,r15d
   14001fd2d:	or     BYTE PTR [r10+rbx*1+0x18],al
   14001fd32:	movzx  eax,BYTE PTR [rdx+0x1]
   14001fd36:	add    r10d,r15d
   14001fd39:	cmp    r8d,eax
   14001fd3c:	jbe    0x14001fd1e
   14001fd3e:	add    rdx,0x2
   14001fd42:	cmp    BYTE PTR [rdx],sil
   14001fd45:	jne    0x14001fd07
   14001fd47:	add    r9,0x8
   14001fd4b:	add    r14,r15
   14001fd4e:	sub    rbp,r15
   14001fd51:	jne    0x14001fcff
   14001fd53:	mov    DWORD PTR [rbx+0x4],edi
   14001fd56:	mov    DWORD PTR [rbx+0x8],r15d
   14001fd5a:	sub    edi,0x3a4
   14001fd60:	je     0x14001fd8b
   14001fd62:	sub    edi,0x4
   14001fd65:	je     0x14001fd82
   14001fd67:	sub    edi,0xd
   14001fd6a:	je     0x14001fd79
   14001fd6c:	dec    edi
   14001fd6e:	jne    0x14001fd92
   14001fd70:	mov    rsi,QWORD PTR [rip+0x15039]        # 0x140034db0
   14001fd77:	jmp    0x14001fd92
   14001fd79:	mov    rsi,QWORD PTR [rip+0x15028]        # 0x140034da8
   14001fd80:	jmp    0x14001fd92
   14001fd82:	mov    rsi,QWORD PTR [rip+0x15017]        # 0x140034da0
   14001fd89:	jmp    0x14001fd92
   14001fd8b:	mov    rsi,QWORD PTR [rip+0x15006]        # 0x140034d98
   14001fd92:	sub    r11,rbx
   14001fd95:	mov    QWORD PTR [rbx+0x220],rsi
   14001fd9c:	lea    rcx,[rbx+0xc]
   14001fda0:	lea    rdi,[r11+r12*1]
   14001fda4:	mov    edx,0x6
   14001fda9:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14001fdae:	mov    WORD PTR [rcx],ax
   14001fdb1:	lea    rcx,[rcx+0x2]
   14001fdb5:	sub    rdx,r15
   14001fdb8:	jne    0x14001fda9
   14001fdba:	mov    rcx,rbx
   14001fdbd:	call   0x14001f658
   14001fdc2:	xor    eax,eax
   14001fdc4:	mov    rcx,QWORD PTR [rsp+0x38]
   14001fdc9:	xor    rcx,rsp
   14001fdcc:	call   0x1400187d0
   14001fdd1:	lea    r11,[rsp+0x40]
   14001fdd6:	mov    rbx,QWORD PTR [r11+0x40]
   14001fdda:	mov    rbp,QWORD PTR [r11+0x48]
   14001fdde:	mov    rsp,r11
   14001fde1:	pop    r15
   14001fde3:	pop    r14
   14001fde5:	pop    r12
   14001fde7:	pop    rdi
   14001fde8:	pop    rsi
   14001fde9:	ret    
   14001fdea:	int3   
   14001fdeb:	int3   
   14001fdec:	mov    WORD PTR [rsp+0x8],cx
   14001fdf1:	push   rbx
   14001fdf2:	sub    rsp,0x20
   14001fdf6:	mov    eax,0xffff
   14001fdfb:	movzx  ebx,dx
   14001fdfe:	cmp    cx,ax
   14001fe01:	jne    0x14001fe07
   14001fe03:	xor    eax,eax
   14001fe05:	jmp    0x14001fe4c
   14001fe07:	mov    eax,0x100
   14001fe0c:	cmp    cx,ax
   14001fe0f:	jae    0x14001fe21
   14001fe11:	mov    rax,QWORD PTR [rip+0x21830]        # 0x140041648
   14001fe18:	movzx  ecx,cx
   14001fe1b:	movzx  eax,WORD PTR [rax+rcx*2]
   14001fe1f:	jmp    0x14001fe47
   14001fe21:	mov    ecx,0x1
   14001fe26:	lea    r9,[rsp+0x40]
   14001fe2b:	lea    rdx,[rsp+0x30]
   14001fe30:	mov    r8d,ecx
   14001fe33:	call   QWORD PTR [rip+0xf3cf]        # 0x14002f208
   14001fe39:	xor    ecx,ecx
   14001fe3b:	test   eax,eax
   14001fe3d:	je     0x14001fe44
   14001fe3f:	movzx  ecx,WORD PTR [rsp+0x40]
   14001fe44:	movzx  eax,cx
   14001fe47:	movzx  ecx,bx
   14001fe4a:	and    eax,ecx
   14001fe4c:	add    rsp,0x20
   14001fe50:	pop    rbx
   14001fe51:	ret    
   14001fe52:	int3   
   14001fe53:	int3   
   14001fe54:	mov    rax,rsp
   14001fe57:	mov    QWORD PTR [rax+0x10],rbx
   14001fe5b:	mov    QWORD PTR [rax+0x18],rsi
   14001fe5f:	mov    QWORD PTR [rax+0x20],rdi
   14001fe63:	push   rbp
   14001fe64:	lea    rbp,[rax-0x4b8]
   14001fe6b:	sub    rsp,0x5b0
   14001fe72:	mov    rax,QWORD PTR [rip+0x217d7]        # 0x140041650
   14001fe79:	xor    rax,rsp
   14001fe7c:	mov    QWORD PTR [rbp+0x4a0],rax
   14001fe83:	mov    edi,r8d
   14001fe86:	mov    esi,edx
   14001fe88:	mov    ebx,ecx
   14001fe8a:	cmp    ecx,0xffffffff
   14001fe8d:	je     0x14001fe94
   14001fe8f:	call   0x14002020c
   14001fe94:	and    DWORD PTR [rsp+0x30],0x0
   14001fe99:	lea    rcx,[rsp+0x34]
   14001fe9e:	xor    edx,edx
   14001fea0:	mov    r8d,0x94
   14001fea6:	call   0x14001b980
   14001feab:	lea    rax,[rsp+0x30]
   14001feb0:	lea    rcx,[rbp-0x30]
   14001feb4:	mov    QWORD PTR [rsp+0x20],rax
   14001feb9:	lea    rax,[rbp-0x30]
   14001febd:	mov    QWORD PTR [rsp+0x28],rax
   14001fec2:	call   0x14001db58
   14001fec7:	mov    rax,QWORD PTR [rbp+0x4b8]
   14001fece:	mov    QWORD PTR [rbp+0xc8],rax
   14001fed5:	lea    rax,[rbp+0x4b8]
   14001fedc:	mov    DWORD PTR [rsp+0x30],esi
   14001fee0:	add    rax,0x8
   14001fee4:	mov    DWORD PTR [rsp+0x34],edi
   14001fee8:	mov    QWORD PTR [rbp+0x68],rax
   14001feec:	mov    rax,QWORD PTR [rbp+0x4b8]
   14001fef3:	mov    QWORD PTR [rsp+0x40],rax
   14001fef8:	call   QWORD PTR [rip+0xf34a]        # 0x14002f248
   14001fefe:	lea    rcx,[rsp+0x20]
   14001ff03:	mov    edi,eax
   14001ff05:	call   0x14001e17c
   14001ff0a:	test   eax,eax
   14001ff0c:	jne    0x14001ff1e
   14001ff0e:	test   edi,edi
   14001ff10:	jne    0x14001ff1e
   14001ff12:	cmp    ebx,0xffffffff
   14001ff15:	je     0x14001ff1e
   14001ff17:	mov    ecx,ebx
   14001ff19:	call   0x14002020c
   14001ff1e:	mov    rcx,QWORD PTR [rbp+0x4a0]
   14001ff25:	xor    rcx,rsp
   14001ff28:	call   0x1400187d0
   14001ff2d:	lea    r11,[rsp+0x5b0]
   14001ff35:	mov    rbx,QWORD PTR [r11+0x18]
   14001ff39:	mov    rsi,QWORD PTR [r11+0x20]
   14001ff3d:	mov    rdi,QWORD PTR [r11+0x28]
   14001ff41:	mov    rsp,r11
   14001ff44:	pop    rbp
   14001ff45:	ret    
   14001ff46:	int3   
   14001ff47:	int3   
   14001ff48:	mov    QWORD PTR [rip+0x240a9],rcx        # 0x140043ff8
   14001ff4f:	ret    
   14001ff50:	mov    QWORD PTR [rsp+0x8],rbx
   14001ff55:	mov    QWORD PTR [rsp+0x10],rbp
   14001ff5a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ff5f:	push   rdi
   14001ff60:	sub    rsp,0x30
   14001ff64:	mov    rbp,rcx
   14001ff67:	mov    rcx,QWORD PTR [rip+0x2408a]        # 0x140043ff8
   14001ff6e:	mov    ebx,r9d
   14001ff71:	mov    rdi,r8
   14001ff74:	mov    rsi,rdx
   14001ff77:	call   QWORD PTR [rip+0xf2ab]        # 0x14002f228
   14001ff7d:	mov    r9d,ebx
   14001ff80:	mov    r8,rdi
   14001ff83:	mov    rdx,rsi
   14001ff86:	mov    rcx,rbp
   14001ff89:	test   rax,rax
   14001ff8c:	je     0x14001ffa5
   14001ff8e:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ff93:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ff98:	mov    rsi,QWORD PTR [rsp+0x50]
   14001ff9d:	add    rsp,0x30
   14001ffa1:	pop    rdi
   14001ffa2:	rex.W jmp rax
   14001ffa5:	mov    rax,QWORD PTR [rsp+0x60]
   14001ffaa:	mov    QWORD PTR [rsp+0x20],rax
   14001ffaf:	call   0x14001ffd8
   14001ffb4:	int3   
   14001ffb5:	int3   
   14001ffb6:	int3   
   14001ffb7:	int3   
   14001ffb8:	sub    rsp,0x38
   14001ffbc:	and    QWORD PTR [rsp+0x20],0x0
   14001ffc2:	xor    r9d,r9d
   14001ffc5:	xor    r8d,r8d
   14001ffc8:	xor    edx,edx
   14001ffca:	xor    ecx,ecx
   14001ffcc:	call   0x14001ff50
   14001ffd1:	add    rsp,0x38
   14001ffd5:	ret    
   14001ffd6:	int3   
   14001ffd7:	int3   
   14001ffd8:	sub    rsp,0x28
   14001ffdc:	mov    ecx,0x17
   14001ffe1:	call   0x14002cf10
   14001ffe6:	test   eax,eax
   14001ffe8:	je     0x14001fff1
   14001ffea:	mov    ecx,0x5
   14001ffef:	int    0x29
   14001fff1:	mov    r8d,0x1
   14001fff7:	mov    edx,0xc0000417
   14001fffc:	lea    ecx,[r8+0x1]
   140020000:	call   0x14001fe54
   140020005:	mov    ecx,0xc0000417
   14002000a:	add    rsp,0x28
   14002000e:	jmp    0x14001e15c
   140020013:	int3   
   140020014:	mov    rax,rsp
   140020017:	mov    QWORD PTR [rax+0x10],rbx
   14002001b:	mov    QWORD PTR [rax+0x18],rbp
   14002001f:	mov    QWORD PTR [rax+0x20],rsi
   140020023:	mov    DWORD PTR [rax+0x8],ecx
   140020026:	push   rdi
   140020027:	sub    rsp,0x20
   14002002b:	mov    rcx,rdx
   14002002e:	mov    rbx,rdx
   140020031:	call   0x14002721c
   140020036:	mov    ecx,DWORD PTR [rbx+0x18]
   140020039:	movsxd rsi,eax
   14002003c:	test   cl,0x82
   14002003f:	jne    0x140020058
   140020041:	call   0x14001b864
   140020046:	mov    DWORD PTR [rax],0x9
   14002004c:	or     DWORD PTR [rbx+0x18],0x20
   140020050:	or     eax,0xffffffff
   140020053:	jmp    0x14002018a
   140020058:	test   cl,0x40
   14002005b:	je     0x14002006a
   14002005d:	call   0x14001b864
   140020062:	mov    DWORD PTR [rax],0x22
   140020068:	jmp    0x14002004c
   14002006a:	xor    edi,edi
   14002006c:	test   cl,0x1
   14002006f:	je     0x14002008a
   140020071:	mov    DWORD PTR [rbx+0x8],edi
   140020074:	test   cl,0x10
   140020077:	je     0x140020106
   14002007d:	mov    rax,QWORD PTR [rbx+0x10]
   140020081:	and    ecx,0xfffffffe
   140020084:	mov    QWORD PTR [rbx],rax
   140020087:	mov    DWORD PTR [rbx+0x18],ecx
   14002008a:	mov    eax,DWORD PTR [rbx+0x18]
   14002008d:	mov    DWORD PTR [rbx+0x8],edi
   140020090:	and    eax,0xffffffef
   140020093:	or     eax,0x2
   140020096:	mov    DWORD PTR [rbx+0x18],eax
   140020099:	test   eax,0x10c
   14002009e:	jne    0x1400200cf
   1400200a0:	call   0x140027108
   1400200a5:	add    rax,0x30
   1400200a9:	cmp    rbx,rax
   1400200ac:	je     0x1400200bc
   1400200ae:	call   0x140027108
   1400200b3:	add    rax,0x60
   1400200b7:	cmp    rbx,rax
   1400200ba:	jne    0x1400200c7
   1400200bc:	mov    ecx,esi
   1400200be:	call   0x140027244
   1400200c3:	test   eax,eax
   1400200c5:	jne    0x1400200cf
   1400200c7:	mov    rcx,rbx
   1400200ca:	call   0x140027cf8
   1400200cf:	test   DWORD PTR [rbx+0x18],0x108
   1400200d6:	je     0x140020167
   1400200dc:	mov    ebp,DWORD PTR [rbx]
   1400200de:	mov    rdx,QWORD PTR [rbx+0x10]
   1400200e2:	sub    ebp,DWORD PTR [rbx+0x10]
   1400200e5:	lea    rax,[rdx+0x1]
   1400200e9:	mov    QWORD PTR [rbx],rax
   1400200ec:	mov    eax,DWORD PTR [rbx+0x24]
   1400200ef:	dec    eax
   1400200f1:	mov    DWORD PTR [rbx+0x8],eax
   1400200f4:	test   ebp,ebp
   1400200f6:	jle    0x140020111
   1400200f8:	mov    r8d,ebp
   1400200fb:	mov    ecx,esi
   1400200fd:	call   0x1400272a4
   140020102:	mov    edi,eax
   140020104:	jmp    0x14002015b
   140020106:	or     ecx,0x20
   140020109:	mov    DWORD PTR [rbx+0x18],ecx
   14002010c:	jmp    0x140020050
   140020111:	lea    eax,[rsi+0x2]
   140020114:	cmp    eax,0x1
   140020117:	jbe    0x140020137
   140020119:	mov    rcx,rsi
   14002011c:	mov    rax,rsi
   14002011f:	lea    r8,[rip+0x23efa]        # 0x140044020
   140020126:	and    ecx,0x1f
   140020129:	sar    rax,0x5
   14002012d:	imul   rdx,rcx,0x58
   140020131:	add    rdx,QWORD PTR [r8+rax*8]
   140020135:	jmp    0x14002013e
   140020137:	lea    rdx,[rip+0x220e2]        # 0x140042220
   14002013e:	test   BYTE PTR [rdx+0x8],0x20
   140020142:	je     0x14002015b
   140020144:	xor    edx,edx
   140020146:	mov    ecx,esi
   140020148:	lea    r8d,[rdx+0x2]
   14002014c:	call   0x140027b7c
   140020151:	cmp    rax,0xffffffffffffffff
   140020155:	je     0x14002004c
   14002015b:	mov    rcx,QWORD PTR [rbx+0x10]
   14002015f:	mov    al,BYTE PTR [rsp+0x30]
   140020163:	mov    BYTE PTR [rcx],al
   140020165:	jmp    0x14002017d
   140020167:	mov    ebp,0x1
   14002016c:	lea    rdx,[rsp+0x30]
   140020171:	mov    ecx,esi
   140020173:	mov    r8d,ebp
   140020176:	call   0x1400272a4
   14002017b:	mov    edi,eax
   14002017d:	cmp    edi,ebp
   14002017f:	jne    0x14002004c
   140020185:	movzx  eax,BYTE PTR [rsp+0x30]
   14002018a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002018f:	mov    rbp,QWORD PTR [rsp+0x40]
   140020194:	mov    rsi,QWORD PTR [rsp+0x48]
   140020199:	add    rsp,0x20
   14002019d:	pop    rdi
   14002019e:	ret    
   14002019f:	int3   
   1400201a0:	rex push rbx
   1400201a2:	sub    rsp,0x30
   1400201a6:	mov    rbx,rcx
   1400201a9:	mov    ecx,0xe
   1400201ae:	call   0x14001b118
   1400201b3:	nop
   1400201b4:	mov    rax,QWORD PTR [rbx+0x8]
   1400201b8:	test   rax,rax
   1400201bb:	je     0x1400201fc
   1400201bd:	mov    rcx,QWORD PTR [rip+0x23e44]        # 0x140044008
   1400201c4:	lea    rdx,[rip+0x23e35]        # 0x140044000
   1400201cb:	mov    QWORD PTR [rsp+0x20],rcx
   1400201d0:	test   rcx,rcx
   1400201d3:	je     0x1400201ee
   1400201d5:	cmp    QWORD PTR [rcx],rax
   1400201d8:	jne    0x1400201e9
   1400201da:	mov    rax,QWORD PTR [rcx+0x8]
   1400201de:	mov    QWORD PTR [rdx+0x8],rax
   1400201e2:	call   0x14001a1ac
   1400201e7:	jmp    0x1400201ee
   1400201e9:	mov    rdx,rcx
   1400201ec:	jmp    0x1400201cb
   1400201ee:	mov    rcx,QWORD PTR [rbx+0x8]
   1400201f2:	call   0x14001a1ac
   1400201f7:	and    QWORD PTR [rbx+0x8],0x0
   1400201fc:	mov    ecx,0xe
   140020201:	call   0x14001b308
   140020206:	add    rsp,0x30
   14002020a:	pop    rbx
   14002020b:	ret    
   14002020c:	and    DWORD PTR [rip+0x259b1],0x0        # 0x140045bc4
   140020213:	ret    
   140020214:	mov    QWORD PTR [rsp+0x18],rbx
   140020219:	push   rbp
   14002021a:	push   rsi
   14002021b:	push   rdi
   14002021c:	push   r12
   14002021e:	push   r13
   140020220:	push   r14
   140020222:	push   r15
   140020224:	lea    rbp,[rsp-0x1e0]
   14002022c:	sub    rsp,0x2e0
   140020233:	mov    rax,QWORD PTR [rip+0x21416]        # 0x140041650
   14002023a:	xor    rax,rsp
   14002023d:	mov    QWORD PTR [rbp+0x1d8],rax
   140020244:	xor    eax,eax
   140020246:	mov    rsi,rcx
   140020249:	mov    QWORD PTR [rsp+0x68],rcx
   14002024e:	mov    rdi,rdx
   140020251:	lea    rcx,[rbp-0x58]
   140020255:	mov    rdx,r8
   140020258:	mov    r13,r9
   14002025b:	mov    DWORD PTR [rsp+0x70],eax
   14002025f:	mov    r14d,eax
   140020262:	mov    DWORD PTR [rsp+0x54],eax
   140020266:	mov    r12d,eax
   140020269:	mov    DWORD PTR [rsp+0x48],eax
   14002026d:	mov    DWORD PTR [rsp+0x60],eax
   140020271:	mov    DWORD PTR [rsp+0x58],eax
   140020275:	mov    ebx,eax
   140020277:	mov    DWORD PTR [rsp+0x50],eax
   14002027b:	call   0x140019058
   140020280:	call   0x14001b864
   140020285:	or     r8d,0xffffffff
   140020289:	xor    r10d,r10d
   14002028c:	mov    QWORD PTR [rbp-0x80],rax
   140020290:	test   rsi,rsi
   140020293:	je     0x140020be4
   140020299:	test   BYTE PTR [rsi+0x18],0x40
   14002029d:	lea    r9,[rip+0xfffffffffffdfd5c]        # 0x140000000
   1400202a4:	jne    0x140020330
   1400202aa:	mov    rcx,rsi
   1400202ad:	call   0x14002721c
   1400202b2:	lea    r8,[rip+0x21f67]        # 0x140042220
   1400202b9:	movsxd r10,eax
   1400202bc:	lea    ecx,[r10+0x2]
   1400202c0:	cmp    ecx,0x1
   1400202c3:	jbe    0x1400202e7
   1400202c5:	mov    rdx,r10
   1400202c8:	mov    rcx,r10
   1400202cb:	lea    rax,[rip+0xfffffffffffdfd2e]        # 0x140000000
   1400202d2:	and    edx,0x1f
   1400202d5:	sar    rcx,0x5
   1400202d9:	imul   r9,rdx,0x58
   1400202dd:	add    r9,QWORD PTR [rax+rcx*8+0x44020]
   1400202e5:	jmp    0x1400202ea
   1400202e7:	mov    r9,r8
   1400202ea:	test   BYTE PTR [r9+0x38],0x7f
   1400202ef:	jne    0x140020be4
   1400202f5:	lea    eax,[r10+0x2]
   1400202f9:	lea    r9,[rip+0xfffffffffffdfd00]        # 0x140000000
   140020300:	cmp    eax,0x1
   140020303:	jbe    0x14002031e
   140020305:	mov    rcx,r10
   140020308:	mov    rax,r10
   14002030b:	and    ecx,0x1f
   14002030e:	sar    rax,0x5
   140020312:	imul   r8,rcx,0x58
   140020316:	add    r8,QWORD PTR [r9+rax*8+0x44020]
   14002031e:	test   BYTE PTR [r8+0x38],0x80
   140020323:	jne    0x140020be4
   140020329:	or     r8d,0xffffffff
   14002032d:	xor    r10d,r10d
   140020330:	test   rdi,rdi
   140020333:	je     0x140020be4
   140020339:	mov    r15b,BYTE PTR [rdi]
   14002033c:	mov    esi,r10d
   14002033f:	mov    DWORD PTR [rsp+0x40],r10d
   140020344:	mov    DWORD PTR [rsp+0x44],r10d
   140020349:	mov    edx,r10d
   14002034c:	mov    QWORD PTR [rbp-0x78],r10
   140020350:	test   r15b,r15b
   140020353:	je     0x140020bfc
   140020359:	mov    r11d,0x200
   14002035f:	inc    rdi
   140020362:	mov    QWORD PTR [rbp-0x68],rdi
   140020366:	test   esi,esi
   140020368:	js     0x140020bdb
   14002036e:	lea    eax,[r15-0x20]
   140020372:	cmp    al,0x58
   140020374:	ja     0x140020388
   140020376:	movsx  rax,r15b
   14002037a:	movzx  ecx,BYTE PTR [rax+r9*1+0x351c0]
   140020383:	and    ecx,0xf
   140020386:	jmp    0x14002038b
   140020388:	mov    ecx,r10d
   14002038b:	movsxd rax,ecx
   14002038e:	lea    rcx,[rax+rax*8]
   140020392:	movsxd rax,edx
   140020395:	add    rcx,rax
   140020398:	movzx  edx,BYTE PTR [rcx+r9*1+0x351e0]
   1400203a1:	shr    edx,0x4
   1400203a4:	mov    DWORD PTR [rsp+0x5c],edx
   1400203a8:	cmp    edx,0x8
   1400203ab:	je     0x140020be4
   1400203b1:	mov    ecx,edx
   1400203b3:	test   edx,edx
   1400203b5:	je     0x140020a9d
   1400203bb:	dec    ecx
   1400203bd:	je     0x140020bb7
   1400203c3:	dec    ecx
   1400203c5:	je     0x140020b67
   1400203cb:	dec    ecx
   1400203cd:	je     0x140020b2b
   1400203d3:	dec    ecx
   1400203d5:	je     0x140020b23
   1400203db:	dec    ecx
   1400203dd:	je     0x140020aee
   1400203e3:	dec    ecx
   1400203e5:	je     0x140020a13
   1400203eb:	dec    ecx
   1400203ed:	jne    0x1400209fe
   1400203f3:	movsx  ecx,r15b
   1400203f7:	cmp    ecx,0x64
   1400203fa:	jg     0x140020569
   140020400:	je     0x140020661
   140020406:	cmp    ecx,0x41
   140020409:	je     0x14002053e
   14002040f:	cmp    ecx,0x43
   140020412:	je     0x1400204e4
   140020418:	lea    eax,[rcx-0x45]
   14002041b:	test   eax,0xfffffffd
   140020420:	je     0x14002053e
   140020426:	cmp    ecx,0x53
   140020429:	je     0x140020498
   14002042b:	cmp    ecx,0x58
   14002042e:	je     0x1400205fa
   140020434:	cmp    ecx,0x5a
   140020437:	je     0x140020450
   140020439:	cmp    ecx,0x61
   14002043c:	je     0x14002054a
   140020442:	cmp    ecx,0x63
   140020445:	je     0x1400204f2
   14002044b:	jmp    0x14002086c
   140020450:	mov    rax,QWORD PTR [r13+0x0]
   140020454:	add    r13,0x8
   140020458:	test   rax,rax
   14002045b:	je     0x14002048c
   14002045d:	mov    rbx,QWORD PTR [rax+0x8]
   140020461:	test   rbx,rbx
   140020464:	je     0x14002048c
   140020466:	movsx  eax,WORD PTR [rax]
   140020469:	bt     r14d,0xb
   14002046e:	jae    0x140020482
   140020470:	cdq    
   140020471:	mov    DWORD PTR [rsp+0x50],0x1
   140020479:	sub    eax,edx
   14002047b:	sar    eax,1
   14002047d:	jmp    0x140020868
   140020482:	mov    DWORD PTR [rsp+0x50],r10d
   140020487:	jmp    0x140020868
   14002048c:	mov    rbx,QWORD PTR [rip+0x21b6d]        # 0x140042000
   140020493:	jmp    0x14002085d
   140020498:	test   r14d,0x830
   14002049f:	jne    0x1400204a6
   1400204a1:	bts    r14d,0xb
   1400204a6:	mov    rbx,QWORD PTR [r13+0x0]
   1400204aa:	cmp    r12d,r8d
   1400204ad:	mov    eax,r12d
   1400204b0:	mov    ecx,0x7fffffff
   1400204b5:	cmove  eax,ecx
   1400204b8:	add    r13,0x8
   1400204bc:	test   r14d,0x810
   1400204c3:	je     0x1400205c6
   1400204c9:	test   rbx,rbx
   1400204cc:	mov    DWORD PTR [rsp+0x50],0x1
   1400204d4:	cmove  rbx,QWORD PTR [rip+0x21b2c]        # 0x140042008
   1400204dc:	mov    rcx,rbx
   1400204df:	jmp    0x1400205ba
   1400204e4:	test   r14d,0x830
   1400204eb:	jne    0x1400204f2
   1400204ed:	bts    r14d,0xb
   1400204f2:	add    r13,0x8
   1400204f6:	test   r14d,0x810
   1400204fd:	je     0x140020526
   1400204ff:	movzx  r9d,WORD PTR [r13-0x8]
   140020504:	lea    rdx,[rbp-0x30]
   140020508:	lea    rcx,[rsp+0x44]
   14002050d:	mov    r8,r11
   140020510:	call   0x140027ef0
   140020515:	xor    r10d,r10d
   140020518:	test   eax,eax
   14002051a:	je     0x140020535
   14002051c:	mov    DWORD PTR [rsp+0x58],0x1
   140020524:	jmp    0x140020535
   140020526:	mov    al,BYTE PTR [r13-0x8]
   14002052a:	mov    DWORD PTR [rsp+0x44],0x1
   140020532:	mov    BYTE PTR [rbp-0x30],al
   140020535:	lea    rbx,[rbp-0x30]
   140020539:	jmp    0x14002086c
   14002053e:	mov    DWORD PTR [rsp+0x60],0x1
   140020546:	add    r15b,0x20
   14002054a:	or     r14d,0x40
   14002054e:	lea    rbx,[rbp-0x30]
   140020552:	mov    esi,r11d
   140020555:	test   r12d,r12d
   140020558:	jns    0x14002077f
   14002055e:	mov    r12d,0x6
   140020564:	jmp    0x1400207c5
   140020569:	cmp    ecx,0x67
   14002056c:	jle    0x14002054a
   14002056e:	cmp    ecx,0x69
   140020571:	je     0x140020661
   140020577:	cmp    ecx,0x6e
   14002057a:	je     0x14002062f
   140020580:	cmp    ecx,0x6f
   140020583:	je     0x14002061f
   140020589:	cmp    ecx,0x70
   14002058c:	je     0x1400205ef
   14002058e:	cmp    ecx,0x73
   140020591:	je     0x1400204a6
   140020597:	cmp    ecx,0x75
   14002059a:	je     0x140020665
   1400205a0:	cmp    ecx,0x78
   1400205a3:	jne    0x14002086c
   1400205a9:	lea    eax,[rcx-0x51]
   1400205ac:	jmp    0x1400205ff
   1400205ae:	dec    eax
   1400205b0:	cmp    WORD PTR [rcx],r10w
   1400205b4:	je     0x1400205be
   1400205b6:	add    rcx,0x2
   1400205ba:	test   eax,eax
   1400205bc:	jne    0x1400205ae
   1400205be:	sub    rcx,rbx
   1400205c1:	sar    rcx,1
   1400205c4:	jmp    0x1400205e6
   1400205c6:	test   rbx,rbx
   1400205c9:	cmove  rbx,QWORD PTR [rip+0x21a2f]        # 0x140042000
   1400205d1:	mov    rcx,rbx
   1400205d4:	jmp    0x1400205e0
   1400205d6:	dec    eax
   1400205d8:	cmp    BYTE PTR [rcx],r10b
   1400205db:	je     0x1400205e4
   1400205dd:	inc    rcx
   1400205e0:	test   eax,eax
   1400205e2:	jne    0x1400205d6
   1400205e4:	sub    ecx,ebx
   1400205e6:	mov    DWORD PTR [rsp+0x44],ecx
   1400205ea:	jmp    0x14002086c
   1400205ef:	mov    r12d,0x10
   1400205f5:	bts    r14d,0xf
   1400205fa:	mov    eax,0x7
   1400205ff:	mov    DWORD PTR [rsp+0x70],eax
   140020603:	mov    r9d,0x10
   140020609:	test   r14b,r14b
   14002060c:	jns    0x14002066b
   14002060e:	add    al,0x51
   140020610:	mov    BYTE PTR [rsp+0x4c],0x30
   140020615:	lea    edx,[r9-0xe]
   140020619:	mov    BYTE PTR [rsp+0x4d],al
   14002061d:	jmp    0x14002066f
   14002061f:	mov    r9d,0x8
   140020625:	test   r14b,r14b
   140020628:	jns    0x14002066b
   14002062a:	or     r14d,r11d
   14002062d:	jmp    0x14002066b
   14002062f:	mov    rdi,QWORD PTR [r13+0x0]
   140020633:	add    r13,0x8
   140020637:	call   0x140027d4c
   14002063c:	xor    r10d,r10d
   14002063f:	test   eax,eax
   140020641:	je     0x140020be4
   140020647:	test   r14b,0x20
   14002064b:	je     0x140020652
   14002064d:	mov    WORD PTR [rdi],si
   140020650:	jmp    0x140020654
   140020652:	mov    DWORD PTR [rdi],esi
   140020654:	mov    DWORD PTR [rsp+0x58],0x1
   14002065c:	jmp    0x1400209cd
   140020661:	or     r14d,0x40
   140020665:	mov    r9d,0xa
   14002066b:	mov    edx,DWORD PTR [rsp+0x48]
   14002066f:	mov    eax,0x8000
   140020674:	test   eax,r14d
   140020677:	je     0x140020683
   140020679:	mov    r8,QWORD PTR [r13+0x0]
   14002067d:	add    r13,0x8
   140020681:	jmp    0x1400206bd
   140020683:	bt     r14d,0xc
   140020688:	jb     0x140020679
   14002068a:	add    r13,0x8
   14002068e:	test   r14b,0x20
   140020692:	je     0x1400206ad
   140020694:	mov    QWORD PTR [rsp+0x78],r13
   140020699:	test   r14b,0x40
   14002069d:	je     0x1400206a6
   14002069f:	movsx  r8,WORD PTR [r13-0x8]
   1400206a4:	jmp    0x1400206c2
   1400206a6:	movzx  r8d,WORD PTR [r13-0x8]
   1400206ab:	jmp    0x1400206c2
   1400206ad:	test   r14b,0x40
   1400206b1:	je     0x1400206b9
   1400206b3:	movsxd r8,DWORD PTR [r13-0x8]
   1400206b7:	jmp    0x1400206bd
   1400206b9:	mov    r8d,DWORD PTR [r13-0x8]
   1400206bd:	mov    QWORD PTR [rsp+0x78],r13
   1400206c2:	test   r14b,0x40
   1400206c6:	je     0x1400206d5
   1400206c8:	test   r8,r8
   1400206cb:	jns    0x1400206d5
   1400206cd:	neg    r8
   1400206d0:	bts    r14d,0x8
   1400206d5:	test   eax,r14d
   1400206d8:	jne    0x1400206e4
   1400206da:	bt     r14d,0xc
   1400206df:	jb     0x1400206e4
   1400206e1:	mov    r8d,r8d
   1400206e4:	test   r12d,r12d
   1400206e7:	jns    0x1400206f1
   1400206e9:	mov    r12d,0x1
   1400206ef:	jmp    0x1400206fc
   1400206f1:	and    r14d,0xfffffff7
   1400206f5:	cmp    r12d,r11d
   1400206f8:	cmovg  r12d,r11d
   1400206fc:	mov    r13d,DWORD PTR [rsp+0x70]
   140020701:	mov    rax,r8
   140020704:	lea    rbx,[rbp+0x1cf]
   14002070b:	neg    rax
   14002070e:	sbb    ecx,ecx
   140020710:	and    ecx,edx
   140020712:	mov    DWORD PTR [rsp+0x48],ecx
   140020716:	mov    ecx,r12d
   140020719:	dec    r12d
   14002071c:	test   ecx,ecx
   14002071e:	jg     0x140020725
   140020720:	test   r8,r8
   140020723:	je     0x140020745
   140020725:	xor    edx,edx
   140020727:	mov    rax,r8
   14002072a:	movsxd rcx,r9d
   14002072d:	div    rcx
   140020730:	mov    r8,rax
   140020733:	lea    eax,[rdx+0x30]
   140020736:	cmp    eax,0x39
   140020739:	jle    0x14002073e
   14002073b:	add    eax,r13d
   14002073e:	mov    BYTE PTR [rbx],al
   140020740:	dec    rbx
   140020743:	jmp    0x140020716
   140020745:	mov    r13,QWORD PTR [rsp+0x78]
   14002074a:	lea    rax,[rbp+0x1cf]
   140020751:	sub    eax,ebx
   140020753:	inc    rbx
   140020756:	mov    DWORD PTR [rsp+0x44],eax
   14002075a:	test   r11d,r14d
   14002075d:	je     0x14002086c
   140020763:	test   eax,eax
   140020765:	je     0x140020770
   140020767:	cmp    BYTE PTR [rbx],0x30
   14002076a:	je     0x14002086c
   140020770:	dec    rbx
   140020773:	inc    DWORD PTR [rsp+0x44]
   140020777:	mov    BYTE PTR [rbx],0x30
   14002077a:	jmp    0x14002086c
   14002077f:	jne    0x14002078f
   140020781:	cmp    r15b,0x67
   140020785:	jne    0x1400207c5
   140020787:	mov    r12d,0x1
   14002078d:	jmp    0x1400207c5
   14002078f:	cmp    r12d,r11d
   140020792:	cmovg  r12d,r11d
   140020796:	cmp    r12d,0xa3
   14002079d:	jle    0x1400207c5
   14002079f:	lea    edi,[r12+0x15d]
   1400207a7:	movsxd rcx,edi
   1400207aa:	call   0x14001c25c
   1400207af:	mov    QWORD PTR [rbp-0x78],rax
   1400207b3:	test   rax,rax
   1400207b6:	je     0x1400207bf
   1400207b8:	mov    rbx,rax
   1400207bb:	mov    esi,edi
   1400207bd:	jmp    0x1400207c5
   1400207bf:	mov    r12d,0xa3
   1400207c5:	mov    rax,QWORD PTR [r13+0x0]
   1400207c9:	mov    rcx,QWORD PTR [rip+0x21ae0]        # 0x1400422b0
   1400207d0:	add    r13,0x8
   1400207d4:	movsx  edi,r15b
   1400207d8:	movsxd rsi,esi
   1400207db:	mov    QWORD PTR [rbp-0x60],rax
   1400207df:	call   QWORD PTR [rip+0xea43]        # 0x14002f228
   1400207e5:	lea    rcx,[rbp-0x58]
   1400207e9:	mov    r9d,edi
   1400207ec:	mov    QWORD PTR [rsp+0x30],rcx
   1400207f1:	mov    ecx,DWORD PTR [rsp+0x60]
   1400207f5:	mov    r8,rsi
   1400207f8:	mov    DWORD PTR [rsp+0x28],ecx
   1400207fc:	lea    rcx,[rbp-0x60]
   140020800:	mov    rdx,rbx
   140020803:	mov    DWORD PTR [rsp+0x20],r12d
   140020808:	call   rax
   14002080a:	mov    edi,r14d
   14002080d:	and    edi,0x80
   140020813:	je     0x140020830
   140020815:	test   r12d,r12d
   140020818:	jne    0x140020830
   14002081a:	mov    rcx,QWORD PTR [rip+0x21aa7]        # 0x1400422c8
   140020821:	call   QWORD PTR [rip+0xea01]        # 0x14002f228
   140020827:	lea    rdx,[rbp-0x58]
   14002082b:	mov    rcx,rbx
   14002082e:	call   rax
   140020830:	cmp    r15b,0x67
   140020834:	jne    0x140020850
   140020836:	test   edi,edi
   140020838:	jne    0x140020850
   14002083a:	mov    rcx,QWORD PTR [rip+0x21a7f]        # 0x1400422c0
   140020841:	call   QWORD PTR [rip+0xe9e1]        # 0x14002f228
   140020847:	lea    rdx,[rbp-0x58]
   14002084b:	mov    rcx,rbx
   14002084e:	call   rax
   140020850:	cmp    BYTE PTR [rbx],0x2d
   140020853:	jne    0x14002085d
   140020855:	bts    r14d,0x8
   14002085a:	inc    rbx
   14002085d:	mov    rcx,rbx
   140020860:	call   0x14001a580
   140020865:	xor    r10d,r10d
   140020868:	mov    DWORD PTR [rsp+0x44],eax
   14002086c:	cmp    DWORD PTR [rsp+0x58],r10d
   140020871:	jne    0x1400209cd
   140020877:	test   r14b,0x40
   14002087b:	je     0x1400208ae
   14002087d:	bt     r14d,0x8
   140020882:	jae    0x14002088b
   140020884:	mov    BYTE PTR [rsp+0x4c],0x2d
   140020889:	jmp    0x140020896
   14002088b:	test   r14b,0x1
   14002088f:	je     0x1400208a1
   140020891:	mov    BYTE PTR [rsp+0x4c],0x2b
   140020896:	mov    edi,0x1
   14002089b:	mov    DWORD PTR [rsp+0x48],edi
   14002089f:	jmp    0x1400208b2
   1400208a1:	test   r14b,0x2
   1400208a5:	je     0x1400208ae
   1400208a7:	mov    BYTE PTR [rsp+0x4c],0x20
   1400208ac:	jmp    0x140020896
   1400208ae:	mov    edi,DWORD PTR [rsp+0x48]
   1400208b2:	mov    esi,DWORD PTR [rsp+0x54]
   1400208b6:	mov    r15,QWORD PTR [rsp+0x68]
   1400208bb:	sub    esi,DWORD PTR [rsp+0x44]
   1400208bf:	sub    esi,edi
   1400208c1:	test   r14b,0xc
   1400208c5:	jne    0x1400208d8
   1400208c7:	lea    r9,[rsp+0x40]
   1400208cc:	mov    r8,r15
   1400208cf:	mov    edx,esi
   1400208d1:	mov    cl,0x20
   1400208d3:	call   0x140020c84
   1400208d8:	mov    rax,QWORD PTR [rbp-0x80]
   1400208dc:	lea    r9,[rsp+0x40]
   1400208e1:	lea    rcx,[rsp+0x4c]
   1400208e6:	mov    r8,r15
   1400208e9:	mov    edx,edi
   1400208eb:	mov    QWORD PTR [rsp+0x20],rax
   1400208f0:	call   0x140020cd8
   1400208f5:	test   r14b,0x8
   1400208f9:	je     0x140020912
   1400208fb:	test   r14b,0x4
   1400208ff:	jne    0x140020912
   140020901:	lea    r9,[rsp+0x40]
   140020906:	mov    r8,r15
   140020909:	mov    edx,esi
   14002090b:	mov    cl,0x30
   14002090d:	call   0x140020c84
   140020912:	cmp    DWORD PTR [rsp+0x50],0x0
   140020917:	mov    edi,DWORD PTR [rsp+0x44]
   14002091b:	je     0x14002098d
   14002091d:	test   edi,edi
   14002091f:	jle    0x14002098d
   140020921:	mov    r15,rbx
   140020924:	movzx  r9d,WORD PTR [r15]
   140020928:	lea    rdx,[rbp+0x1d0]
   14002092f:	lea    rcx,[rbp-0x70]
   140020933:	mov    r8d,0x6
   140020939:	dec    edi
   14002093b:	lea    r15,[r15+0x2]
   14002093f:	call   0x140027ef0
   140020944:	xor    r10d,r10d
   140020947:	test   eax,eax
   140020949:	jne    0x14002097f
   14002094b:	mov    edx,DWORD PTR [rbp-0x70]
   14002094e:	test   edx,edx
   140020950:	je     0x14002097f
   140020952:	mov    rax,QWORD PTR [rbp-0x80]
   140020956:	mov    r8,QWORD PTR [rsp+0x68]
   14002095b:	lea    r9,[rsp+0x40]
   140020960:	lea    rcx,[rbp+0x1d0]
   140020967:	mov    QWORD PTR [rsp+0x20],rax
   14002096c:	call   0x140020cd8
   140020971:	xor    r10d,r10d
   140020974:	test   edi,edi
   140020976:	jne    0x140020924
   140020978:	mov    r15,QWORD PTR [rsp+0x68]
   14002097d:	jmp    0x1400209ab
   14002097f:	mov    r15,QWORD PTR [rsp+0x68]
   140020984:	or     eax,0xffffffff
   140020987:	mov    DWORD PTR [rsp+0x40],eax
   14002098b:	jmp    0x1400209af
   14002098d:	mov    rax,QWORD PTR [rbp-0x80]
   140020991:	lea    r9,[rsp+0x40]
   140020996:	mov    r8,r15
   140020999:	mov    edx,edi
   14002099b:	mov    rcx,rbx
   14002099e:	mov    QWORD PTR [rsp+0x20],rax
   1400209a3:	call   0x140020cd8
   1400209a8:	xor    r10d,r10d
   1400209ab:	mov    eax,DWORD PTR [rsp+0x40]
   1400209af:	test   eax,eax
   1400209b1:	js     0x1400209cd
   1400209b3:	test   r14b,0x4
   1400209b7:	je     0x1400209cd
   1400209b9:	lea    r9,[rsp+0x40]
   1400209be:	mov    r8,r15
   1400209c1:	mov    edx,esi
   1400209c3:	mov    cl,0x20
   1400209c5:	call   0x140020c84
   1400209ca:	xor    r10d,r10d
   1400209cd:	mov    rax,QWORD PTR [rbp-0x78]
   1400209d1:	test   rax,rax
   1400209d4:	je     0x1400209e5
   1400209d6:	mov    rcx,rax
   1400209d9:	call   0x14001a1ac
   1400209de:	xor    r10d,r10d
   1400209e1:	mov    QWORD PTR [rbp-0x78],r10
   1400209e5:	mov    rdi,QWORD PTR [rbp-0x68]
   1400209e9:	mov    esi,DWORD PTR [rsp+0x40]
   1400209ed:	mov    edx,DWORD PTR [rsp+0x5c]
   1400209f1:	mov    r11d,0x200
   1400209f7:	lea    r9,[rip+0xfffffffffffdf602]        # 0x140000000
   1400209fe:	mov    r15b,BYTE PTR [rdi]
   140020a01:	test   r15b,r15b
   140020a04:	je     0x140020bdb
   140020a0a:	or     r8d,0xffffffff
   140020a0e:	jmp    0x14002035f
   140020a13:	cmp    r15b,0x49
   140020a17:	je     0x140020a4d
   140020a19:	cmp    r15b,0x68
   140020a1d:	je     0x140020a47
   140020a1f:	cmp    r15b,0x6c
   140020a23:	je     0x140020a32
   140020a25:	cmp    r15b,0x77
   140020a29:	jne    0x1400209fe
   140020a2b:	bts    r14d,0xb
   140020a30:	jmp    0x1400209fe
   140020a32:	cmp    BYTE PTR [rdi],0x6c
   140020a35:	jne    0x140020a41
   140020a37:	inc    rdi
   140020a3a:	bts    r14d,0xc
   140020a3f:	jmp    0x1400209fe
   140020a41:	or     r14d,0x10
   140020a45:	jmp    0x1400209fe
   140020a47:	or     r14d,0x20
   140020a4b:	jmp    0x1400209fe
   140020a4d:	mov    al,BYTE PTR [rdi]
   140020a4f:	bts    r14d,0xf
   140020a54:	cmp    al,0x36
   140020a56:	jne    0x140020a69
   140020a58:	cmp    BYTE PTR [rdi+0x1],0x34
   140020a5c:	jne    0x140020a69
   140020a5e:	add    rdi,0x2
   140020a62:	bts    r14d,0xf
   140020a67:	jmp    0x1400209fe
   140020a69:	cmp    al,0x33
   140020a6b:	jne    0x140020a7e
   140020a6d:	cmp    BYTE PTR [rdi+0x1],0x32
   140020a71:	jne    0x140020a7e
   140020a73:	add    rdi,0x2
   140020a77:	btr    r14d,0xf
   140020a7c:	jmp    0x1400209fe
   140020a7e:	sub    al,0x58
   140020a80:	cmp    al,0x20
   140020a82:	ja     0x140020a98
   140020a84:	movabs rcx,0x120821001
   140020a8e:	bt     rcx,rax
   140020a92:	jb     0x1400209fe
   140020a98:	mov    DWORD PTR [rsp+0x5c],r10d
   140020a9d:	lea    rdx,[rbp-0x58]
   140020aa1:	movzx  ecx,r15b
   140020aa5:	mov    DWORD PTR [rsp+0x50],r10d
   140020aaa:	call   0x1400251a4
   140020aaf:	test   eax,eax
   140020ab1:	je     0x140020ad4
   140020ab3:	mov    rdx,QWORD PTR [rsp+0x68]
   140020ab8:	lea    r8,[rsp+0x40]
   140020abd:	mov    cl,r15b
   140020ac0:	call   0x140020c3c
   140020ac5:	mov    r15b,BYTE PTR [rdi]
   140020ac8:	inc    rdi
   140020acb:	test   r15b,r15b
   140020ace:	je     0x140020be4
   140020ad4:	mov    rdx,QWORD PTR [rsp+0x68]
   140020ad9:	lea    r8,[rsp+0x40]
   140020ade:	mov    cl,r15b
   140020ae1:	call   0x140020c3c
   140020ae6:	xor    r10d,r10d
   140020ae9:	jmp    0x1400209e9
   140020aee:	cmp    r15b,0x2a
   140020af2:	jne    0x140020b0d
   140020af4:	mov    r12d,DWORD PTR [r13+0x0]
   140020af8:	add    r13,0x8
   140020afc:	test   r12d,r12d
   140020aff:	jns    0x1400209fe
   140020b05:	mov    r12d,r8d
   140020b08:	jmp    0x1400209fe
   140020b0d:	lea    r12d,[r12+r12*4]
   140020b11:	movsx  eax,r15b
   140020b15:	lea    r12d,[r12-0x18]
   140020b1a:	lea    r12d,[rax+r12*2]
   140020b1e:	jmp    0x1400209fe
   140020b23:	mov    r12d,r10d
   140020b26:	jmp    0x1400209fe
   140020b2b:	cmp    r15b,0x2a
   140020b2f:	jne    0x140020b4d
   140020b31:	mov    eax,DWORD PTR [r13+0x0]
   140020b35:	add    r13,0x8
   140020b39:	mov    DWORD PTR [rsp+0x54],eax
   140020b3d:	test   eax,eax
   140020b3f:	jns    0x1400209fe
   140020b45:	or     r14d,0x4
   140020b49:	neg    eax
   140020b4b:	jmp    0x140020b5e
   140020b4d:	mov    eax,DWORD PTR [rsp+0x54]
   140020b51:	lea    ecx,[rax+rax*4]
   140020b54:	movsx  eax,r15b
   140020b58:	lea    eax,[rax+rcx*2]
   140020b5b:	add    eax,0xffffffd0
   140020b5e:	mov    DWORD PTR [rsp+0x54],eax
   140020b62:	jmp    0x1400209fe
   140020b67:	cmp    r15b,0x20
   140020b6b:	je     0x140020bae
   140020b6d:	cmp    r15b,0x23
   140020b71:	je     0x140020ba4
   140020b73:	cmp    r15b,0x2b
   140020b77:	je     0x140020b9b
   140020b79:	cmp    r15b,0x2d
   140020b7d:	je     0x140020b92
   140020b7f:	cmp    r15b,0x30
   140020b83:	jne    0x1400209fe
   140020b89:	or     r14d,0x8
   140020b8d:	jmp    0x1400209fe
   140020b92:	or     r14d,0x4
   140020b96:	jmp    0x1400209fe
   140020b9b:	or     r14d,0x1
   140020b9f:	jmp    0x1400209fe
   140020ba4:	bts    r14d,0x7
   140020ba9:	jmp    0x1400209fe
   140020bae:	or     r14d,0x2
   140020bb2:	jmp    0x1400209fe
   140020bb7:	mov    DWORD PTR [rsp+0x60],r10d
   140020bbc:	mov    DWORD PTR [rsp+0x58],r10d
   140020bc1:	mov    DWORD PTR [rsp+0x54],r10d
   140020bc6:	mov    DWORD PTR [rsp+0x48],r10d
   140020bcb:	mov    r14d,r10d
   140020bce:	mov    r12d,r8d
   140020bd1:	mov    DWORD PTR [rsp+0x50],r10d
   140020bd6:	jmp    0x1400209fe
   140020bdb:	test   edx,edx
   140020bdd:	je     0x140020bfc
   140020bdf:	cmp    edx,0x7
   140020be2:	je     0x140020bfc
   140020be4:	call   0x14001b864
   140020be9:	mov    DWORD PTR [rax],0x16
   140020bef:	call   0x14001ffb8
   140020bf4:	or     eax,0xffffffff
   140020bf7:	xor    r10d,r10d
   140020bfa:	jmp    0x140020bfe
   140020bfc:	mov    eax,esi
   140020bfe:	cmp    BYTE PTR [rbp-0x40],r10b
   140020c02:	je     0x140020c0f
   140020c04:	mov    rcx,QWORD PTR [rbp-0x48]
   140020c08:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020c0f:	mov    rcx,QWORD PTR [rbp+0x1d8]
   140020c16:	xor    rcx,rsp
   140020c19:	call   0x1400187d0
   140020c1e:	mov    rbx,QWORD PTR [rsp+0x330]
   140020c26:	add    rsp,0x2e0
   140020c2d:	pop    r15
   140020c2f:	pop    r14
   140020c31:	pop    r13
   140020c33:	pop    r12
   140020c35:	pop    rdi
   140020c36:	pop    rsi
   140020c37:	pop    rbp
   140020c38:	ret    
   140020c39:	int3   
   140020c3a:	int3   
   140020c3b:	int3   
   140020c3c:	rex push rbx
   140020c3e:	sub    rsp,0x20
   140020c42:	test   BYTE PTR [rdx+0x18],0x40
   140020c46:	mov    rbx,r8
   140020c49:	je     0x140020c57
   140020c4b:	cmp    QWORD PTR [rdx+0x10],0x0
   140020c50:	jne    0x140020c57
   140020c52:	inc    DWORD PTR [r8]
   140020c55:	jmp    0x140020c7c
   140020c57:	dec    DWORD PTR [rdx+0x8]
   140020c5a:	js     0x140020c69
   140020c5c:	mov    rax,QWORD PTR [rdx]
   140020c5f:	mov    BYTE PTR [rax],cl
   140020c61:	inc    QWORD PTR [rdx]
   140020c64:	movzx  eax,cl
   140020c67:	jmp    0x140020c71
   140020c69:	movsx  ecx,cl
   140020c6c:	call   0x140020014
   140020c71:	cmp    eax,0xffffffff
   140020c74:	jne    0x140020c7a
   140020c76:	or     DWORD PTR [rbx],eax
   140020c78:	jmp    0x140020c7c
   140020c7a:	inc    DWORD PTR [rbx]
   140020c7c:	add    rsp,0x20
   140020c80:	pop    rbx
   140020c81:	ret    
   140020c82:	int3   
   140020c83:	int3   
   140020c84:	test   edx,edx
   140020c86:	jle    0x140020cd4
   140020c88:	mov    QWORD PTR [rsp+0x8],rbx
   140020c8d:	mov    QWORD PTR [rsp+0x10],rbp
   140020c92:	mov    QWORD PTR [rsp+0x18],rsi
   140020c97:	push   rdi
   140020c98:	sub    rsp,0x20
   140020c9c:	mov    rdi,r9
   140020c9f:	mov    rsi,r8
   140020ca2:	mov    ebx,edx
   140020ca4:	mov    bpl,cl
   140020ca7:	mov    r8,rdi
   140020caa:	mov    rdx,rsi
   140020cad:	mov    cl,bpl
   140020cb0:	dec    ebx
   140020cb2:	call   0x140020c3c
   140020cb7:	cmp    DWORD PTR [rdi],0xffffffff
   140020cba:	je     0x140020cc0
   140020cbc:	test   ebx,ebx
   140020cbe:	jg     0x140020ca7
   140020cc0:	mov    rbx,QWORD PTR [rsp+0x30]
   140020cc5:	mov    rbp,QWORD PTR [rsp+0x38]
   140020cca:	mov    rsi,QWORD PTR [rsp+0x40]
   140020ccf:	add    rsp,0x20
   140020cd3:	pop    rdi
   140020cd4:	ret    
   140020cd5:	int3   
   140020cd6:	int3   
   140020cd7:	int3   
   140020cd8:	mov    QWORD PTR [rsp+0x8],rbx
   140020cdd:	mov    QWORD PTR [rsp+0x10],rbp
   140020ce2:	mov    QWORD PTR [rsp+0x18],rsi
   140020ce7:	push   rdi
   140020ce8:	push   r14
   140020cea:	push   r15
   140020cec:	sub    rsp,0x20
   140020cf0:	test   BYTE PTR [r8+0x18],0x40
   140020cf5:	mov    rbx,QWORD PTR [rsp+0x60]
   140020cfa:	mov    rdi,r9
   140020cfd:	mov    r15d,DWORD PTR [rbx]
   140020d00:	mov    rbp,r8
   140020d03:	mov    esi,edx
   140020d05:	mov    r14,rcx
   140020d08:	je     0x140020d16
   140020d0a:	cmp    QWORD PTR [r8+0x10],0x0
   140020d0f:	jne    0x140020d16
   140020d11:	add    DWORD PTR [r9],edx
   140020d14:	jmp    0x140020d53
   140020d16:	and    DWORD PTR [rbx],0x0
   140020d19:	test   edx,edx
   140020d1b:	jle    0x140020d50
   140020d1d:	mov    cl,BYTE PTR [r14]
   140020d20:	mov    r8,rdi
   140020d23:	mov    rdx,rbp
   140020d26:	dec    esi
   140020d28:	call   0x140020c3c
   140020d2d:	inc    r14
   140020d30:	cmp    DWORD PTR [rdi],0xffffffff
   140020d33:	jne    0x140020d47
   140020d35:	cmp    DWORD PTR [rbx],0x2a
   140020d38:	jne    0x140020d4b
   140020d3a:	mov    r8,rdi
   140020d3d:	mov    rdx,rbp
   140020d40:	mov    cl,0x3f
   140020d42:	call   0x140020c3c
   140020d47:	test   esi,esi
   140020d49:	jg     0x140020d1d
   140020d4b:	cmp    DWORD PTR [rbx],0x0
   140020d4e:	jne    0x140020d53
   140020d50:	mov    DWORD PTR [rbx],r15d
   140020d53:	mov    rbx,QWORD PTR [rsp+0x40]
   140020d58:	mov    rbp,QWORD PTR [rsp+0x48]
   140020d5d:	mov    rsi,QWORD PTR [rsp+0x50]
   140020d62:	add    rsp,0x20
   140020d66:	pop    r15
   140020d68:	pop    r14
   140020d6a:	pop    rdi
   140020d6b:	ret    
   140020d6c:	rex push rbx
   140020d6e:	push   rbp
   140020d6f:	push   rsi
   140020d70:	push   rdi
   140020d71:	push   r12
   140020d73:	push   r14
   140020d75:	push   r15
   140020d77:	sub    rsp,0xd0
   140020d7e:	mov    rax,QWORD PTR [rip+0x208cb]        # 0x140041650
   140020d85:	xor    rax,rsp
   140020d88:	mov    QWORD PTR [rsp+0xc0],rax
   140020d90:	mov    rbx,QWORD PTR [rsp+0x130]
   140020d98:	mov    esi,r9d
   140020d9b:	mov    rbp,r8
   140020d9e:	mov    r12,rcx
   140020da1:	cmp    edx,0x1
   140020da4:	jne    0x140020ea8
   140020daa:	lea    r9,[rsp+0x40]
   140020daf:	mov    r8d,esi
   140020db2:	mov    rdx,rbp
   140020db5:	lea    rdi,[rsp+0x40]
   140020dba:	xor    r14d,r14d
   140020dbd:	mov    DWORD PTR [rsp+0x20],0x80
   140020dc5:	call   0x14002812c
   140020dca:	mov    r15d,eax
   140020dcd:	test   eax,eax
   140020dcf:	jne    0x140020e30
   140020dd1:	call   QWORD PTR [rip+0xe3c9]        # 0x14002f1a0
   140020dd7:	cmp    eax,0x7a
   140020dda:	jne    0x140020e58
   140020ddc:	and    DWORD PTR [rsp+0x20],r14d
   140020de1:	xor    r9d,r9d
   140020de4:	mov    r8d,esi
   140020de7:	mov    rdx,rbp
   140020dea:	mov    rcx,r12
   140020ded:	call   0x14002812c
   140020df2:	movsxd r15,eax
   140020df5:	test   eax,eax
   140020df7:	je     0x140020e58
   140020df9:	lea    edx,[r14+0x1]
   140020dfd:	mov    rcx,r15
   140020e00:	call   0x14001c1dc
   140020e05:	mov    rdi,rax
   140020e08:	test   rax,rax
   140020e0b:	je     0x140020e58
   140020e0d:	mov    r9,rax
   140020e10:	mov    r8d,esi
   140020e13:	mov    rdx,rbp
   140020e16:	mov    rcx,r12
   140020e19:	mov    r14d,0x1
   140020e1f:	mov    DWORD PTR [rsp+0x20],r15d
   140020e24:	call   0x14002812c
   140020e29:	mov    r15d,eax
   140020e2c:	test   eax,eax
   140020e2e:	je     0x140020e50
   140020e30:	movsxd rsi,r15d
   140020e33:	mov    edx,0x1
   140020e38:	mov    rcx,rsi
   140020e3b:	call   0x14001c1dc
   140020e40:	mov    rcx,rax
   140020e43:	mov    QWORD PTR [rbx],rax
   140020e46:	test   rax,rax
   140020e49:	jne    0x140020e7d
   140020e4b:	test   r14d,r14d
   140020e4e:	je     0x140020e58
   140020e50:	mov    rcx,rdi
   140020e53:	call   0x14001a1ac
   140020e58:	or     eax,0xffffffff
   140020e5b:	mov    rcx,QWORD PTR [rsp+0xc0]
   140020e63:	xor    rcx,rsp
   140020e66:	call   0x1400187d0
   140020e6b:	add    rsp,0xd0
   140020e72:	pop    r15
   140020e74:	pop    r14
   140020e76:	pop    r12
   140020e78:	pop    rdi
   140020e79:	pop    rsi
   140020e7a:	pop    rbp
   140020e7b:	pop    rbx
   140020e7c:	ret    
   140020e7d:	lea    eax,[r15-0x1]
   140020e81:	mov    r8,rdi
   140020e84:	mov    rdx,rsi
   140020e87:	movsxd r9,eax
   140020e8a:	call   0x140027f04
   140020e8f:	test   eax,eax
   140020e91:	jne    0x140020f3b
   140020e97:	test   r14d,r14d
   140020e9a:	je     0x140020ea4
   140020e9c:	mov    rcx,rdi
   140020e9f:	call   0x14001a1ac
   140020ea4:	xor    eax,eax
   140020ea6:	jmp    0x140020e5b
   140020ea8:	mov    r14d,0x2
   140020eae:	cmp    edx,r14d
   140020eb1:	jne    0x140020f06
   140020eb3:	and    QWORD PTR [rbx],0x0
   140020eb7:	xor    r9d,r9d
   140020eba:	xor    r8d,r8d
   140020ebd:	mov    edx,esi
   140020ebf:	mov    rcx,rbp
   140020ec2:	call   0x14001e49c
   140020ec7:	movsxd rdi,eax
   140020eca:	test   eax,eax
   140020ecc:	je     0x140020ef5
   140020ece:	mov    rcx,rdi
   140020ed1:	mov    edx,r14d
   140020ed4:	call   0x14001c1dc
   140020ed9:	mov    QWORD PTR [rbx],rax
   140020edc:	test   rax,rax
   140020edf:	je     0x140020ef5
   140020ee1:	mov    r9d,edi
   140020ee4:	mov    r8,rax
   140020ee7:	mov    edx,esi
   140020ee9:	mov    rcx,rbp
   140020eec:	call   0x14001e49c
   140020ef1:	test   eax,eax
   140020ef3:	jne    0x140020ea4
   140020ef5:	mov    rcx,QWORD PTR [rbx]
   140020ef8:	call   0x14001a1ac
   140020efd:	and    QWORD PTR [rbx],0x0
   140020f01:	jmp    0x140020e58
   140020f06:	test   edx,edx
   140020f08:	jne    0x140020e58
   140020f0e:	and    DWORD PTR [rsp+0x30],edx
   140020f12:	bts    esi,0x1d
   140020f16:	lea    r8,[rsp+0x30]
   140020f1b:	mov    edx,esi
   140020f1d:	mov    r9d,r14d
   140020f20:	mov    rcx,rbp
   140020f23:	call   0x14001e49c
   140020f28:	test   eax,eax
   140020f2a:	je     0x140020e58
   140020f30:	mov    al,BYTE PTR [rsp+0x30]
   140020f34:	mov    BYTE PTR [rbx],al
   140020f36:	jmp    0x140020ea4
   140020f3b:	and    QWORD PTR [rsp+0x20],0x0
   140020f41:	xor    r9d,r9d
   140020f44:	xor    r8d,r8d
   140020f47:	xor    edx,edx
   140020f49:	xor    ecx,ecx
   140020f4b:	call   0x14001ffd8
   140020f50:	int3   
   140020f51:	int3   
   140020f52:	int3   
   140020f53:	int3   
   140020f54:	mov    QWORD PTR [rip+0x230b5],rcx        # 0x140044010
   140020f5b:	ret    
   140020f5c:	sub    rsp,0x28
   140020f60:	call   QWORD PTR [rip+0xe3e2]        # 0x14002f348
   140020f66:	xor    ecx,ecx
   140020f68:	test   rax,rax
   140020f6b:	mov    QWORD PTR [rip+0x230a6],rax        # 0x140044018
   140020f72:	setne  cl
   140020f75:	mov    eax,ecx
   140020f77:	add    rsp,0x28
   140020f7b:	ret    
   140020f7c:	movsd  QWORD PTR [rsp+0x8],xmm0
   140020f82:	movabs rdx,0x8000000000000000
   140020f8c:	mov    rcx,QWORD PTR [rsp+0x8]
   140020f91:	movsd  QWORD PTR [rsp+0x8],xmm1
   140020f97:	mov    rax,QWORD PTR [rsp+0x8]
   140020f9c:	xor    rax,rcx
   140020f9f:	test   rdx,rax
   140020fa2:	je     0x140020fb2
   140020fa4:	xor    rcx,rdx
   140020fa7:	mov    QWORD PTR [rsp+0x8],rcx
   140020fac:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140020fb2:	ret    
   140020fb3:	int3   
   140020fb4:	movaps xmm1,xmm0
   140020fb7:	movsd  QWORD PTR [rsp+0x8],xmm0
   140020fbd:	xorps  xmm0,xmm0
   140020fc0:	mov    r10,rdx
   140020fc3:	ucomisd xmm1,xmm0
   140020fc7:	jp     0x140020fd2
   140020fc9:	jne    0x140020fd2
   140020fcb:	xor    ecx,ecx
   140020fcd:	jmp    0x1400210e4
   140020fd2:	mov    rax,QWORD PTR [rsp+0x8]
   140020fd7:	mov    ecx,0x7ff0
   140020fdc:	mov    r8,rax
   140020fdf:	shr    r8,0x30
   140020fe3:	test   cx,r8w
   140020fe7:	jne    0x14002109a
   140020fed:	mov    edx,DWORD PTR [rsp+0x8]
   140020ff1:	shr    rax,0x20
   140020ff5:	test   eax,0xfffff
   140020ffa:	jne    0x140021004
   140020ffc:	test   edx,edx
   140020ffe:	je     0x14002109a
   140021004:	xor    r9d,r9d
   140021007:	comisd xmm0,xmm1
   14002100b:	mov    ecx,0xfffffc03
   140021010:	seta   r9b
   140021014:	test   r8b,0x10
   140021018:	jne    0x14002103e
   14002101a:	mov    eax,DWORD PTR [rsp+0xc]
   14002101e:	add    eax,eax
   140021020:	mov    DWORD PTR [rsp+0xc],eax
   140021024:	test   edx,edx
   140021026:	jns    0x14002102f
   140021028:	or     eax,0x1
   14002102b:	mov    DWORD PTR [rsp+0xc],eax
   14002102f:	add    edx,edx
   140021031:	dec    ecx
   140021033:	test   BYTE PTR [rsp+0xe],0x10
   140021038:	je     0x14002101e
   14002103a:	mov    DWORD PTR [rsp+0x8],edx
   14002103e:	movzx  eax,WORD PTR [rsp+0xe]
   140021043:	mov    edx,0xffef
   140021048:	and    ax,dx
   14002104b:	mov    WORD PTR [rsp+0xe],ax
   140021050:	test   r9d,r9d
   140021053:	je     0x140021062
   140021055:	mov    edx,0x8000
   14002105a:	or     ax,dx
   14002105d:	mov    WORD PTR [rsp+0xe],ax
   140021062:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140021068:	mov    edx,0xbfef
   14002106d:	movsd  QWORD PTR [rsp+0x10],xmm0
   140021073:	movsd  QWORD PTR [rsp+0x8],xmm0
   140021079:	mov    rax,QWORD PTR [rsp+0x10]
   14002107e:	shr    rax,0x30
   140021082:	and    ax,dx
   140021085:	mov    edx,0x3fe0
   14002108a:	or     ax,dx
   14002108d:	mov    WORD PTR [rsp+0xe],ax
   140021092:	movsd  xmm0,QWORD PTR [rsp+0x8]
   140021098:	jmp    0x1400210e4
   14002109a:	mov    edx,0xbfef
   14002109f:	movsd  QWORD PTR [rsp+0x10],xmm1
   1400210a5:	mov    ecx,0x7ff
   1400210aa:	movsd  QWORD PTR [rsp+0x18],xmm1
   1400210b0:	mov    rax,QWORD PTR [rsp+0x18]
   1400210b5:	shr    rax,0x30
   1400210b9:	and    ax,dx
   1400210bc:	mov    edx,0x3fe0
   1400210c1:	or     ax,dx
   1400210c4:	mov    WORD PTR [rsp+0x16],ax
   1400210c9:	movzx  eax,WORD PTR [rsp+0xe]
   1400210ce:	shr    ax,0x4
   1400210d2:	movsd  xmm0,QWORD PTR [rsp+0x10]
   1400210d8:	and    ax,cx
   1400210db:	movsx  ecx,ax
   1400210de:	sub    ecx,0x3fe
   1400210e4:	mov    DWORD PTR [r10],ecx
   1400210e7:	ret    
   1400210e8:	movsd  QWORD PTR [rsp+0x8],xmm0
   1400210ee:	mov    rax,QWORD PTR [rsp+0x8]
   1400210f3:	mov    ecx,0x800f
   1400210f8:	shr    rax,0x30
   1400210fc:	movsd  QWORD PTR [rsp+0x18],xmm0
   140021102:	and    ax,cx
   140021105:	mov    ecx,0x3fe
   14002110a:	add    dx,cx
   14002110d:	shl    dx,0x4
   140021111:	or     ax,dx
   140021114:	mov    WORD PTR [rsp+0x1e],ax
   140021119:	movsd  xmm0,QWORD PTR [rsp+0x18]
   14002111f:	ret    
   140021120:	movsd  QWORD PTR [rsp+0x8],xmm0
   140021126:	mov    rax,QWORD PTR [rsp+0x8]
   14002112b:	mov    rcx,rax
   14002112e:	shr    rcx,0x20
   140021132:	cmp    ecx,0x7ff00000
   140021138:	jne    0x140021144
   14002113a:	test   eax,eax
   14002113c:	jne    0x140021144
   14002113e:	mov    eax,0x1
   140021143:	ret    
   140021144:	cmp    ecx,0xfff00000
   14002114a:	jne    0x140021156
   14002114c:	test   eax,eax
   14002114e:	jne    0x140021156
   140021150:	mov    eax,0x2
   140021155:	ret    
   140021156:	mov    r8d,0x7ff8
   14002115c:	mov    rdx,rax
   14002115f:	shr    rdx,0x30
   140021163:	and    dx,r8w
   140021167:	cmp    dx,r8w
   14002116b:	jne    0x140021173
   14002116d:	mov    eax,0x3
   140021172:	ret    
   140021173:	mov    r8d,0x7ff0
   140021179:	cmp    dx,r8w
   14002117d:	jne    0x140021191
   14002117f:	test   ecx,0x7ffff
   140021185:	jne    0x14002118b
   140021187:	test   eax,eax
   140021189:	je     0x140021191
   14002118b:	mov    eax,0x4
   140021190:	ret    
   140021191:	xor    eax,eax
   140021193:	ret    
   140021194:	mov    eax,ecx
   140021196:	test   cl,0x20
   140021199:	je     0x1400211a2
   14002119b:	mov    ecx,0x5
   1400211a0:	jmp    0x1400211d4
   1400211a2:	test   al,0x8
   1400211a4:	je     0x1400211ad
   1400211a6:	mov    ecx,0x1
   1400211ab:	jmp    0x1400211d4
   1400211ad:	test   al,0x4
   1400211af:	je     0x1400211b8
   1400211b1:	mov    ecx,0x2
   1400211b6:	jmp    0x1400211d4
   1400211b8:	mov    ecx,0x1
   1400211bd:	test   cl,al
   1400211bf:	je     0x1400211c8
   1400211c1:	mov    ecx,0x3
   1400211c6:	jmp    0x1400211d4
   1400211c8:	movzx  eax,al
   1400211cb:	mov    ecx,0x2
   1400211d0:	and    ecx,eax
   1400211d2:	add    ecx,ecx
   1400211d4:	mov    eax,ecx
   1400211d6:	ret    
   1400211d7:	int3   
   1400211d8:	mov    rax,rsp
   1400211db:	mov    QWORD PTR [rax+0x10],rbx
   1400211df:	push   rbp
   1400211e0:	push   rsi
   1400211e1:	push   rdi
   1400211e2:	lea    rbp,[rax-0x4f]
   1400211e6:	sub    rsp,0xf0
   1400211ed:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400211f1:	movaps XMMWORD PTR [rax-0x38],xmm7
   1400211f5:	mov    rax,QWORD PTR [rip+0x20454]        # 0x140041650
   1400211fc:	xor    rax,rsp
   1400211ff:	mov    QWORD PTR [rbp+0x7],rax
   140021203:	mov    rbx,QWORD PTR [rbp+0x7f]
   140021207:	mov    esi,edx
   140021209:	lea    rdx,[rbp+0x77]
   14002120d:	movsd  QWORD PTR [rbp-0x79],xmm2
   140021212:	movaps xmm6,xmm3
   140021215:	movaps xmm7,xmm2
   140021218:	mov    r8,rbx
   14002121b:	mov    edi,ecx
   14002121d:	call   0x1400212dc
   140021222:	test   eax,eax
   140021224:	jne    0x140021265
   140021226:	mov    eax,DWORD PTR [rbp-0x29]
   140021229:	and    DWORD PTR [rsp+0x30],0x0
   14002122e:	lea    rdx,[rbp+0x7f]
   140021232:	movsd  QWORD PTR [rbp-0x39],xmm6
   140021237:	and    eax,0xffffffe3
   14002123a:	lea    rcx,[rbp-0x69]
   14002123e:	mov    r9d,esi
   140021241:	or     eax,0x3
   140021244:	mov    r8d,edi
   140021247:	mov    DWORD PTR [rbp-0x29],eax
   14002124a:	lea    rax,[rbp+0x77]
   14002124e:	mov    QWORD PTR [rsp+0x28],rax
   140021253:	lea    rax,[rbp-0x79]
   140021257:	mov    QWORD PTR [rsp+0x20],rax
   14002125c:	call   0x1400215a4
   140021261:	mov    rbx,QWORD PTR [rbp+0x7f]
   140021265:	mov    ecx,edi
   140021267:	call   0x140021194
   14002126c:	cmp    DWORD PTR [rip+0x214ed],0x0        # 0x140042760
   140021273:	jne    0x14002129a
   140021275:	test   eax,eax
   140021277:	je     0x14002129a
   140021279:	movsd  xmm0,QWORD PTR [rbp+0x77]
   14002127e:	movaps xmm3,xmm6
   140021281:	movaps xmm2,xmm7
   140021284:	mov    edx,esi
   140021286:	mov    ecx,eax
   140021288:	mov    QWORD PTR [rsp+0x28],rbx
   14002128d:	movsd  QWORD PTR [rsp+0x20],xmm0
   140021293:	call   0x1400218d8
   140021298:	jmp    0x1400212b3
   14002129a:	mov    ecx,eax
   14002129c:	call   0x1400218a8
   1400212a1:	mov    edx,0xffc0
   1400212a6:	mov    rcx,rbx
   1400212a9:	call   0x1400219cc
   1400212ae:	movsd  xmm0,QWORD PTR [rbp+0x77]
   1400212b3:	mov    rcx,QWORD PTR [rbp+0x7]
   1400212b7:	xor    rcx,rsp
   1400212ba:	call   0x1400187d0
   1400212bf:	lea    r11,[rsp+0xf0]
   1400212c7:	mov    rbx,QWORD PTR [r11+0x28]
   1400212cb:	movaps xmm6,XMMWORD PTR [r11-0x10]
   1400212d0:	movaps xmm7,XMMWORD PTR [r11-0x20]
   1400212d5:	mov    rsp,r11
   1400212d8:	pop    rdi
   1400212d9:	pop    rsi
   1400212da:	pop    rbp
   1400212db:	ret    
   1400212dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400212e1:	push   rbp
   1400212e2:	push   rsi
   1400212e3:	push   rdi
   1400212e4:	push   r12
   1400212e6:	push   r13
   1400212e8:	push   r14
   1400212ea:	push   r15
   1400212ec:	sub    rsp,0x30
   1400212f0:	xor    r14d,r14d
   1400212f3:	mov    ebx,ecx
   1400212f5:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400212fa:	and    ebx,0x1f
   1400212fd:	mov    r15,r8
   140021300:	mov    rsi,rdx
   140021303:	mov    r12d,ecx
   140021306:	lea    r13d,[r14+0x10]
   14002130a:	test   cl,0x8
   14002130d:	je     0x140021325
   14002130f:	test   r15b,r15b
   140021312:	jns    0x140021325
   140021314:	lea    ecx,[r14+0x1]
   140021318:	call   0x140021a48
   14002131d:	and    ebx,0xfffffff7
   140021320:	jmp    0x140021502
   140021325:	mov    ecx,0x4
   14002132a:	test   cl,r12b
   14002132d:	je     0x140021343
   14002132f:	bt     r8,0x9
   140021334:	jae    0x140021343
   140021336:	call   0x140021a48
   14002133b:	and    ebx,0xfffffffb
   14002133e:	jmp    0x140021502
   140021343:	mov    edi,0x1
   140021348:	test   dil,r12b
   14002134b:	je     0x140021401
   140021351:	bt     r8,0xa
   140021356:	jae    0x140021401
   14002135c:	lea    ecx,[rdi+0x7]
   14002135f:	call   0x140021a48
   140021364:	mov    rax,r15
   140021367:	mov    ecx,0x6000
   14002136c:	and    rax,rcx
   14002136f:	je     0x1400213ce
   140021371:	cmp    rax,0x2000
   140021377:	je     0x1400213b6
   140021379:	cmp    rax,0x4000
   14002137f:	je     0x14002139e
   140021381:	cmp    rax,rcx
   140021384:	jne    0x1400213f9
   140021386:	movsd  xmm0,QWORD PTR [rsi]
   14002138a:	comisd xmm0,QWORD PTR [rip+0xf7e6]        # 0x140030b78
   140021392:	movsd  xmm0,QWORD PTR [rip+0x20c86]        # 0x140042020
   14002139a:	ja     0x1400213f5
   14002139c:	jmp    0x1400213ee
   14002139e:	movsd  xmm0,QWORD PTR [rsi]
   1400213a2:	comisd xmm0,QWORD PTR [rip+0xf7ce]        # 0x140030b78
   1400213aa:	ja     0x1400213dc
   1400213ac:	movsd  xmm0,QWORD PTR [rip+0x20c6c]        # 0x140042020
   1400213b4:	jmp    0x1400213ee
   1400213b6:	movsd  xmm0,QWORD PTR [rsi]
   1400213ba:	comisd xmm0,QWORD PTR [rip+0xf7b6]        # 0x140030b78
   1400213c2:	jbe    0x1400213e6
   1400213c4:	movsd  xmm0,QWORD PTR [rip+0x20c54]        # 0x140042020
   1400213cc:	jmp    0x1400213f5
   1400213ce:	movsd  xmm0,QWORD PTR [rsi]
   1400213d2:	comisd xmm0,QWORD PTR [rip+0xf79e]        # 0x140030b78
   1400213da:	jbe    0x1400213e6
   1400213dc:	movsd  xmm0,QWORD PTR [rip+0x20c2c]        # 0x140042010
   1400213e4:	jmp    0x1400213f5
   1400213e6:	movsd  xmm0,QWORD PTR [rip+0x20c22]        # 0x140042010
   1400213ee:	xorps  xmm0,XMMWORD PTR [rip+0xf70b]        # 0x140030b00
   1400213f5:	movsd  QWORD PTR [rsi],xmm0
   1400213f9:	and    ebx,0xfffffffe
   1400213fc:	jmp    0x140021502
   140021401:	test   r12b,0x2
   140021405:	je     0x140021502
   14002140b:	bt     r8,0xb
   140021410:	jae    0x140021502
   140021416:	movsd  xmm0,QWORD PTR [rdx]
   14002141a:	test   r13b,r12b
   14002141d:	xorps  xmm6,xmm6
   140021420:	mov    ebp,r14d
   140021423:	cmovne ebp,edi
   140021426:	ucomisd xmm0,xmm6
   14002142a:	jp     0x140021435
   14002142c:	jne    0x140021435
   14002142e:	mov    ebp,edi
   140021430:	jmp    0x1400214f3
   140021435:	lea    rdx,[rsp+0x70]
   14002143a:	call   0x140020fb4
   14002143f:	mov    ecx,DWORD PTR [rsp+0x70]
   140021443:	add    ecx,0xfffffa00
   140021449:	movsd  QWORD PTR [rsp+0x88],xmm0
   140021452:	cmp    ecx,0xfffffbce
   140021458:	jge    0x140021465
   14002145a:	mulsd  xmm0,xmm6
   14002145e:	mov    ebp,edi
   140021460:	jmp    0x1400214ef
   140021465:	mov    rax,QWORD PTR [rsp+0x88]
   14002146d:	comisd xmm6,xmm0
   140021471:	mov    r8d,r14d
   140021474:	seta   r8b
   140021478:	shr    rax,0x30
   14002147c:	and    ax,0xf
   140021480:	or     ax,r13w
   140021484:	mov    WORD PTR [rsp+0x8e],ax
   14002148c:	cmp    ecx,0xfffffc03
   140021492:	jge    0x1400214da
   140021494:	mov    eax,DWORD PTR [rsp+0x88]
   14002149b:	mov    edx,0xfffffc03
   1400214a0:	sub    edx,ecx
   1400214a2:	mov    ecx,DWORD PTR [rsp+0x8c]
   1400214a9:	test   dil,al
   1400214ac:	je     0x1400214b3
   1400214ae:	test   ebp,ebp
   1400214b0:	cmove  ebp,edi
   1400214b3:	shr    eax,1
   1400214b5:	mov    DWORD PTR [rsp+0x88],eax
   1400214bc:	test   dil,cl
   1400214bf:	je     0x1400214cc
   1400214c1:	bts    eax,0x1f
   1400214c5:	mov    DWORD PTR [rsp+0x88],eax
   1400214cc:	shr    ecx,1
   1400214ce:	sub    rdx,rdi
   1400214d1:	jne    0x1400214a9
   1400214d3:	mov    DWORD PTR [rsp+0x8c],ecx
   1400214da:	movsd  xmm0,QWORD PTR [rsp+0x88]
   1400214e3:	test   r8d,r8d
   1400214e6:	je     0x1400214ef
   1400214e8:	xorps  xmm0,XMMWORD PTR [rip+0xf611]        # 0x140030b00
   1400214ef:	movsd  QWORD PTR [rsi],xmm0
   1400214f3:	test   ebp,ebp
   1400214f5:	je     0x1400214ff
   1400214f7:	mov    rcx,r13
   1400214fa:	call   0x140021a48
   1400214ff:	and    ebx,0xfffffffd
   140021502:	test   r13b,r12b
   140021505:	je     0x14002151b
   140021507:	bt     r15,0xc
   14002150c:	jae    0x14002151b
   14002150e:	mov    ecx,0x20
   140021513:	call   0x140021a48
   140021518:	and    ebx,0xffffffef
   14002151b:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   140021520:	test   ebx,ebx
   140021522:	mov    rbx,QWORD PTR [rsp+0x78]
   140021527:	sete   r14b
   14002152b:	mov    eax,r14d
   14002152e:	add    rsp,0x30
   140021532:	pop    r15
   140021534:	pop    r14
   140021536:	pop    r13
   140021538:	pop    r12
   14002153a:	pop    rdi
   14002153b:	pop    rsi
   14002153c:	pop    rbp
   14002153d:	ret    
   14002153e:	int3   
   14002153f:	int3   
   140021540:	rex push rbx
   140021542:	sub    rsp,0x40
   140021546:	cmp    DWORD PTR [rip+0x21213],0x0        # 0x140042760
   14002154d:	movaps XMMWORD PTR [rsp+0x30],xmm6
   140021552:	movaps xmm6,xmm1
   140021555:	addsd  xmm6,xmm2
   140021559:	mov    rbx,r9
   14002155c:	jne    0x14002157d
   14002155e:	movaps xmm3,xmm2
   140021561:	mov    edx,ecx
   140021563:	movaps xmm2,xmm1
   140021566:	mov    ecx,0x1
   14002156b:	mov    QWORD PTR [rsp+0x28],rbx
   140021570:	movsd  QWORD PTR [rsp+0x20],xmm6
   140021576:	call   0x1400218d8
   14002157b:	jmp    0x140021598
   14002157d:	call   0x14001b864
   140021582:	mov    edx,0xffc0
   140021587:	mov    rcx,rbx
   14002158a:	mov    DWORD PTR [rax],0x21
   140021590:	call   0x1400219cc
   140021595:	movaps xmm0,xmm6
   140021598:	movaps xmm6,XMMWORD PTR [rsp+0x30]
   14002159d:	add    rsp,0x40
   1400215a1:	pop    rbx
   1400215a2:	ret    
   1400215a3:	int3   
   1400215a4:	mov    rax,rsp
   1400215a7:	mov    QWORD PTR [rax+0x10],rbx
   1400215ab:	mov    QWORD PTR [rax+0x18],rsi
   1400215af:	mov    QWORD PTR [rax+0x20],rdi
   1400215b3:	mov    QWORD PTR [rax+0x8],rcx
   1400215b7:	push   rbp
   1400215b8:	mov    rbp,rsp
   1400215bb:	sub    rsp,0x20
   1400215bf:	mov    rbx,rdx
   1400215c2:	xor    edx,edx
   1400215c4:	mov    esi,r9d
   1400215c7:	mov    DWORD PTR [rcx+0x4],edx
   1400215ca:	mov    rax,QWORD PTR [rbp+0x10]
   1400215ce:	mov    edi,0xc000000d
   1400215d3:	mov    DWORD PTR [rax+0x8],edx
   1400215d6:	mov    rax,QWORD PTR [rbp+0x10]
   1400215da:	mov    DWORD PTR [rax+0xc],edx
   1400215dd:	test   r8b,0x10
   1400215e1:	je     0x1400215f0
   1400215e3:	mov    rax,QWORD PTR [rbp+0x10]
   1400215e7:	mov    edi,0xc000008f
   1400215ec:	or     DWORD PTR [rax+0x4],0x1
   1400215f0:	test   r8b,0x2
   1400215f4:	je     0x140021603
   1400215f6:	mov    rax,QWORD PTR [rbp+0x10]
   1400215fa:	mov    edi,0xc0000093
   1400215ff:	or     DWORD PTR [rax+0x4],0x2
   140021603:	test   r8b,0x1
   140021607:	je     0x140021616
   140021609:	mov    rax,QWORD PTR [rbp+0x10]
   14002160d:	mov    edi,0xc0000091
   140021612:	or     DWORD PTR [rax+0x4],0x4
   140021616:	test   r8b,0x4
   14002161a:	je     0x140021629
   14002161c:	mov    rax,QWORD PTR [rbp+0x10]
   140021620:	mov    edi,0xc000008e
   140021625:	or     DWORD PTR [rax+0x4],0x8
   140021629:	test   r8b,0x8
   14002162d:	je     0x14002163c
   14002162f:	mov    rax,QWORD PTR [rbp+0x10]
   140021633:	mov    edi,0xc0000090
   140021638:	or     DWORD PTR [rax+0x4],0x10
   14002163c:	mov    rcx,QWORD PTR [rbp+0x10]
   140021640:	mov    rax,QWORD PTR [rbx]
   140021643:	shr    rax,0x7
   140021647:	shl    eax,0x4
   14002164a:	not    eax
   14002164c:	xor    eax,DWORD PTR [rcx+0x8]
   14002164f:	and    eax,0x10
   140021652:	xor    DWORD PTR [rcx+0x8],eax
   140021655:	mov    rcx,QWORD PTR [rbp+0x10]
   140021659:	mov    rax,QWORD PTR [rbx]
   14002165c:	shr    rax,0x9
   140021660:	shl    eax,0x3
   140021663:	not    eax
   140021665:	xor    eax,DWORD PTR [rcx+0x8]
   140021668:	and    eax,0x8
   14002166b:	xor    DWORD PTR [rcx+0x8],eax
   14002166e:	mov    rcx,QWORD PTR [rbp+0x10]
   140021672:	mov    rax,QWORD PTR [rbx]
   140021675:	shr    rax,0xa
   140021679:	shl    eax,0x2
   14002167c:	not    eax
   14002167e:	xor    eax,DWORD PTR [rcx+0x8]
   140021681:	and    eax,0x4
   140021684:	xor    DWORD PTR [rcx+0x8],eax
   140021687:	mov    rcx,QWORD PTR [rbp+0x10]
   14002168b:	mov    rax,QWORD PTR [rbx]
   14002168e:	shr    rax,0xb
   140021692:	add    eax,eax
   140021694:	not    eax
   140021696:	xor    eax,DWORD PTR [rcx+0x8]
   140021699:	and    eax,0x2
   14002169c:	xor    DWORD PTR [rcx+0x8],eax
   14002169f:	mov    eax,DWORD PTR [rbx]
   1400216a1:	mov    rcx,QWORD PTR [rbp+0x10]
   1400216a5:	shr    rax,0xc
   1400216a9:	not    eax
   1400216ab:	xor    eax,DWORD PTR [rcx+0x8]
   1400216ae:	and    eax,0x1
   1400216b1:	xor    DWORD PTR [rcx+0x8],eax
   1400216b4:	call   0x140021a68
   1400216b9:	mov    rdx,rax
   1400216bc:	test   al,0x1
   1400216be:	je     0x1400216c8
   1400216c0:	mov    rcx,QWORD PTR [rbp+0x10]
   1400216c4:	or     DWORD PTR [rcx+0xc],0x10
   1400216c8:	test   al,0x4
   1400216ca:	je     0x1400216d4
   1400216cc:	mov    rcx,QWORD PTR [rbp+0x10]
   1400216d0:	or     DWORD PTR [rcx+0xc],0x8
   1400216d4:	test   al,0x8
   1400216d6:	je     0x1400216e0
   1400216d8:	mov    rax,QWORD PTR [rbp+0x10]
   1400216dc:	or     DWORD PTR [rax+0xc],0x4
   1400216e0:	test   dl,0x10
   1400216e3:	je     0x1400216ed
   1400216e5:	mov    rax,QWORD PTR [rbp+0x10]
   1400216e9:	or     DWORD PTR [rax+0xc],0x2
   1400216ed:	test   dl,0x20
   1400216f0:	je     0x1400216fa
   1400216f2:	mov    rax,QWORD PTR [rbp+0x10]
   1400216f6:	or     DWORD PTR [rax+0xc],0x1
   1400216fa:	mov    eax,DWORD PTR [rbx]
   1400216fc:	mov    ecx,0x6000
   140021701:	and    rax,rcx
   140021704:	je     0x140021744
   140021706:	cmp    rax,0x2000
   14002170c:	je     0x140021734
   14002170e:	cmp    rax,0x4000
   140021714:	je     0x140021724
   140021716:	cmp    rax,rcx
   140021719:	jne    0x14002174b
   14002171b:	mov    rax,QWORD PTR [rbp+0x10]
   14002171f:	or     DWORD PTR [rax],0x3
   140021722:	jmp    0x14002174b
   140021724:	mov    rax,QWORD PTR [rbp+0x10]
   140021728:	and    DWORD PTR [rax],0xfffffffe
   14002172b:	mov    rax,QWORD PTR [rbp+0x10]
   14002172f:	or     DWORD PTR [rax],0x2
   140021732:	jmp    0x14002174b
   140021734:	mov    rax,QWORD PTR [rbp+0x10]
   140021738:	and    DWORD PTR [rax],0xfffffffd
   14002173b:	mov    rax,QWORD PTR [rbp+0x10]
   14002173f:	or     DWORD PTR [rax],0x1
   140021742:	jmp    0x14002174b
   140021744:	mov    rax,QWORD PTR [rbp+0x10]
   140021748:	and    DWORD PTR [rax],0xfffffffc
   14002174b:	mov    rax,QWORD PTR [rbp+0x10]
   14002174f:	and    esi,0xfff
   140021755:	and    DWORD PTR [rax],0xfffe001f
   14002175b:	mov    rax,QWORD PTR [rbp+0x10]
   14002175f:	shl    esi,0x5
   140021762:	or     DWORD PTR [rax],esi
   140021764:	mov    rax,QWORD PTR [rbp+0x10]
   140021768:	mov    rsi,QWORD PTR [rbp+0x38]
   14002176c:	or     DWORD PTR [rax+0x20],0x1
   140021770:	cmp    DWORD PTR [rbp+0x40],0x0
   140021774:	je     0x1400217a9
   140021776:	mov    rax,QWORD PTR [rbp+0x10]
   14002177a:	mov    edx,0xffffffe1
   14002177f:	and    DWORD PTR [rax+0x20],edx
   140021782:	mov    rax,QWORD PTR [rbp+0x30]
   140021786:	mov    ecx,DWORD PTR [rax]
   140021788:	mov    rax,QWORD PTR [rbp+0x10]
   14002178c:	mov    DWORD PTR [rax+0x10],ecx
   14002178f:	mov    rax,QWORD PTR [rbp+0x10]
   140021793:	or     DWORD PTR [rax+0x60],0x1
   140021797:	mov    rax,QWORD PTR [rbp+0x10]
   14002179b:	and    DWORD PTR [rax+0x60],edx
   14002179e:	mov    rax,QWORD PTR [rbp+0x10]
   1400217a2:	mov    ecx,DWORD PTR [rsi]
   1400217a4:	mov    DWORD PTR [rax+0x50],ecx
   1400217a7:	jmp    0x1400217f1
   1400217a9:	mov    rcx,QWORD PTR [rbp+0x10]
   1400217ad:	mov    r8d,0xffffffe3
   1400217b3:	mov    eax,DWORD PTR [rcx+0x20]
   1400217b6:	and    eax,r8d
   1400217b9:	or     eax,0x2
   1400217bc:	mov    DWORD PTR [rcx+0x20],eax
   1400217bf:	mov    rax,QWORD PTR [rbp+0x30]
   1400217c3:	mov    rcx,QWORD PTR [rax]
   1400217c6:	mov    rax,QWORD PTR [rbp+0x10]
   1400217ca:	mov    QWORD PTR [rax+0x10],rcx
   1400217ce:	mov    rax,QWORD PTR [rbp+0x10]
   1400217d2:	or     DWORD PTR [rax+0x60],0x1
   1400217d6:	mov    rdx,QWORD PTR [rbp+0x10]
   1400217da:	mov    eax,DWORD PTR [rdx+0x60]
   1400217dd:	and    eax,r8d
   1400217e0:	or     eax,0x2
   1400217e3:	mov    DWORD PTR [rdx+0x60],eax
   1400217e6:	mov    rax,QWORD PTR [rbp+0x10]
   1400217ea:	mov    rdx,QWORD PTR [rsi]
   1400217ed:	mov    QWORD PTR [rax+0x50],rdx
   1400217f1:	call   0x1400219ac
   1400217f6:	xor    edx,edx
   1400217f8:	lea    r9,[rbp+0x10]
   1400217fc:	lea    r8d,[rdx+0x1]
   140021800:	mov    ecx,edi
   140021802:	call   QWORD PTR [rip+0xd9f8]        # 0x14002f200
   140021808:	mov    rcx,QWORD PTR [rbp+0x10]
   14002180c:	test   BYTE PTR [rcx+0x8],0x10
   140021810:	je     0x140021817
   140021812:	btr    QWORD PTR [rbx],0x7
   140021817:	test   BYTE PTR [rcx+0x8],0x8
   14002181b:	je     0x140021822
   14002181d:	btr    QWORD PTR [rbx],0x9
   140021822:	test   BYTE PTR [rcx+0x8],0x4
   140021826:	je     0x14002182d
   140021828:	btr    QWORD PTR [rbx],0xa
   14002182d:	test   BYTE PTR [rcx+0x8],0x2
   140021831:	je     0x140021838
   140021833:	btr    QWORD PTR [rbx],0xb
   140021838:	test   BYTE PTR [rcx+0x8],0x1
   14002183c:	je     0x140021843
   14002183e:	btr    QWORD PTR [rbx],0xc
   140021843:	mov    eax,DWORD PTR [rcx]
   140021845:	and    eax,0x3
   140021848:	je     0x140021877
   14002184a:	dec    eax
   14002184c:	je     0x14002186b
   14002184e:	dec    eax
   140021850:	je     0x14002185f
   140021852:	dec    eax
   140021854:	jne    0x14002187e
   140021856:	or     QWORD PTR [rbx],0x6000
   14002185d:	jmp    0x14002187e
   14002185f:	btr    QWORD PTR [rbx],0xd
   140021864:	bts    QWORD PTR [rbx],0xe
   140021869:	jmp    0x14002187e
   14002186b:	btr    QWORD PTR [rbx],0xe
   140021870:	bts    QWORD PTR [rbx],0xd
   140021875:	jmp    0x14002187e
   140021877:	and    QWORD PTR [rbx],0xffffffffffff9fff
   14002187e:	cmp    DWORD PTR [rbp+0x40],0x0
   140021882:	je     0x14002188b
   140021884:	mov    eax,DWORD PTR [rcx+0x50]
   140021887:	mov    DWORD PTR [rsi],eax
   140021889:	jmp    0x140021892
   14002188b:	mov    rax,QWORD PTR [rcx+0x50]
   14002188f:	mov    QWORD PTR [rsi],rax
   140021892:	mov    rbx,QWORD PTR [rsp+0x38]
   140021897:	mov    rsi,QWORD PTR [rsp+0x40]
   14002189c:	mov    rdi,QWORD PTR [rsp+0x48]
   1400218a1:	add    rsp,0x20
   1400218a5:	pop    rbp
   1400218a6:	ret    
   1400218a7:	int3   
   1400218a8:	sub    rsp,0x28
   1400218ac:	cmp    ecx,0x1
   1400218af:	je     0x1400218c6
   1400218b1:	lea    eax,[rcx-0x2]
   1400218b4:	cmp    eax,0x1
   1400218b7:	ja     0x1400218d1
   1400218b9:	call   0x14001b864
   1400218be:	mov    DWORD PTR [rax],0x22
   1400218c4:	jmp    0x1400218d1
   1400218c6:	call   0x14001b864
   1400218cb:	mov    DWORD PTR [rax],0x21
   1400218d1:	add    rsp,0x28
   1400218d5:	ret    
   1400218d6:	int3   
   1400218d7:	int3   
   1400218d8:	movsd  QWORD PTR [rsp+0x20],xmm3
   1400218de:	movsd  QWORD PTR [rsp+0x18],xmm2
   1400218e4:	push   rbx
   1400218e5:	sub    rsp,0x50
   1400218e9:	lea    r9,[rip+0x20750]        # 0x140042040
   1400218f0:	mov    ebx,ecx
   1400218f2:	xor    r8d,r8d
   1400218f5:	mov    rax,r9
   1400218f8:	cmp    DWORD PTR [rax],edx
   1400218fa:	je     0x140021913
   1400218fc:	lea    rcx,[rip+0x2090d]        # 0x140042210
   140021903:	add    rax,0x10
   140021907:	inc    r8d
   14002190a:	cmp    rax,rcx
   14002190d:	jl     0x1400218f8
   14002190f:	xor    eax,eax
   140021911:	jmp    0x14002191e
   140021913:	movsxd rax,r8d
   140021916:	add    rax,rax
   140021919:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   14002191e:	mov    rcx,QWORD PTR [rsp+0x88]
   140021926:	mov    QWORD PTR [rsp+0x28],rax
   14002192b:	mov    edx,0xffc0
   140021930:	test   rax,rax
   140021933:	je     0x140021991
   140021935:	mov    eax,DWORD PTR [rsp+0x70]
   140021939:	mov    DWORD PTR [rsp+0x20],ebx
   14002193d:	mov    DWORD PTR [rsp+0x30],eax
   140021941:	mov    eax,DWORD PTR [rsp+0x74]
   140021945:	mov    DWORD PTR [rsp+0x34],eax
   140021949:	mov    eax,DWORD PTR [rsp+0x78]
   14002194d:	mov    DWORD PTR [rsp+0x38],eax
   140021951:	mov    eax,DWORD PTR [rsp+0x7c]
   140021955:	mov    DWORD PTR [rsp+0x3c],eax
   140021959:	mov    eax,DWORD PTR [rsp+0x80]
   140021960:	mov    DWORD PTR [rsp+0x40],eax
   140021964:	mov    eax,DWORD PTR [rsp+0x84]
   14002196b:	mov    DWORD PTR [rsp+0x44],eax
   14002196f:	call   0x1400219cc
   140021974:	lea    rcx,[rsp+0x20]
   140021979:	call   0x140011c40
   14002197e:	test   eax,eax
   140021980:	jne    0x140021989
   140021982:	mov    ecx,ebx
   140021984:	call   0x1400218a8
   140021989:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14002198f:	jmp    0x1400219a6
   140021991:	call   0x1400219cc
   140021996:	mov    ecx,ebx
   140021998:	call   0x1400218a8
   14002199d:	movsd  xmm0,QWORD PTR [rsp+0x80]
   1400219a6:	add    rsp,0x50
   1400219aa:	pop    rbx
   1400219ab:	ret    
   1400219ac:	rex push rbx
   1400219ae:	sub    rsp,0x20
   1400219b2:	call   0x1400281b0
   1400219b7:	mov    ebx,eax
   1400219b9:	and    ebx,0x3f
   1400219bc:	call   0x1400281ca
   1400219c1:	mov    eax,ebx
   1400219c3:	add    rsp,0x20
   1400219c7:	pop    rbx
   1400219c8:	ret    
   1400219c9:	int3   
   1400219ca:	int3   
   1400219cb:	int3   
   1400219cc:	mov    QWORD PTR [rsp+0x18],rbx
   1400219d1:	mov    QWORD PTR [rsp+0x20],rsi
   1400219d6:	push   rdi
   1400219d7:	sub    rsp,0x20
   1400219db:	mov    rbx,rdx
   1400219de:	mov    rdi,rcx
   1400219e1:	call   0x1400281b0
   1400219e6:	mov    esi,eax
   1400219e8:	mov    DWORD PTR [rsp+0x38],eax
   1400219ec:	mov    ecx,ebx
   1400219ee:	not    ecx
   1400219f0:	or     ecx,0xffff807f
   1400219f6:	and    ecx,eax
   1400219f8:	and    edi,ebx
   1400219fa:	or     ecx,edi
   1400219fc:	mov    DWORD PTR [rsp+0x30],ecx
   140021a00:	cmp    BYTE PTR [rip+0x20809],0x0        # 0x140042210
   140021a07:	je     0x140021a2e
   140021a09:	test   cl,0x40
   140021a0c:	je     0x140021a2e
   140021a0e:	call   0x1400281c0
   140021a13:	jmp    0x140021a2c
   140021a15:	mov    BYTE PTR [rip+0x207f4],0x0        # 0x140042210
   140021a1c:	mov    ecx,DWORD PTR [rsp+0x30]
   140021a20:	and    ecx,0xffffffbf
   140021a23:	call   0x1400281c0
   140021a28:	mov    esi,DWORD PTR [rsp+0x38]
   140021a2c:	jmp    0x140021a36
   140021a2e:	and    ecx,0xffffffbf
   140021a31:	call   0x1400281c0
   140021a36:	mov    eax,esi
   140021a38:	mov    rbx,QWORD PTR [rsp+0x40]
   140021a3d:	mov    rsi,QWORD PTR [rsp+0x48]
   140021a42:	add    rsp,0x20
   140021a46:	pop    rdi
   140021a47:	ret    
   140021a48:	rex push rbx
   140021a4a:	sub    rsp,0x20
   140021a4e:	mov    rbx,rcx
   140021a51:	call   0x1400281b0
   140021a56:	and    ebx,0x3f
   140021a59:	or     eax,ebx
   140021a5b:	mov    ecx,eax
   140021a5d:	add    rsp,0x20
   140021a61:	pop    rbx
   140021a62:	jmp    0x1400281c0
   140021a67:	int3   
   140021a68:	sub    rsp,0x28
   140021a6c:	call   0x1400281b0
   140021a71:	and    eax,0x3f
   140021a74:	add    rsp,0x28
   140021a78:	ret    
   140021a79:	int3   
   140021a7a:	int3   
   140021a7b:	int3   
   140021a7c:	sub    rsp,0x28
   140021a80:	mov    rax,QWORD PTR [rcx]
   140021a83:	cmp    DWORD PTR [rax],0xe06d7363
   140021a89:	jne    0x140021aa7
   140021a8b:	cmp    DWORD PTR [rax+0x18],0x4
   140021a8f:	jne    0x140021aa7
   140021a91:	mov    ecx,DWORD PTR [rax+0x20]
   140021a94:	lea    eax,[rcx-0x19930520]
   140021a9a:	cmp    eax,0x2
   140021a9d:	jbe    0x140021aae
   140021a9f:	cmp    ecx,0x1994000
   140021aa5:	je     0x140021aae
   140021aa7:	xor    eax,eax
   140021aa9:	add    rsp,0x28
   140021aad:	ret    
   140021aae:	call   0x140019018
   140021ab3:	int3   
   140021ab4:	sub    rsp,0x28
   140021ab8:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140021a7c
   140021abf:	call   0x14001e14c
   140021ac4:	xor    eax,eax
   140021ac6:	add    rsp,0x28
   140021aca:	ret    
   140021acb:	int3   
   140021acc:	mov    QWORD PTR [rsp+0x8],rbx
   140021ad1:	mov    QWORD PTR [rsp+0x10],rbp
   140021ad6:	mov    QWORD PTR [rsp+0x18],rsi
   140021adb:	push   rdi
   140021adc:	sub    rsp,0x20
   140021ae0:	mov    rsi,rdx
   140021ae3:	mov    edi,ecx
   140021ae5:	call   0x14001ef90
   140021aea:	xor    r9d,r9d
   140021aed:	mov    rbx,rax
   140021af0:	test   rax,rax
   140021af3:	je     0x140021c81
   140021af9:	mov    rdx,QWORD PTR [rax+0xa0]
   140021b00:	mov    rcx,rdx
   140021b03:	cmp    DWORD PTR [rcx],edi
   140021b05:	je     0x140021b17
   140021b07:	lea    rax,[rdx+0xc0]
   140021b0e:	add    rcx,0x10
   140021b12:	cmp    rcx,rax
   140021b15:	jb     0x140021b03
   140021b17:	lea    rax,[rdx+0xc0]
   140021b1e:	cmp    rcx,rax
   140021b21:	jae    0x140021b27
   140021b23:	cmp    DWORD PTR [rcx],edi
   140021b25:	je     0x140021b2a
   140021b27:	mov    rcx,r9
   140021b2a:	test   rcx,rcx
   140021b2d:	je     0x140021c81
   140021b33:	mov    r8,QWORD PTR [rcx+0x8]
   140021b37:	test   r8,r8
   140021b3a:	je     0x140021c81
   140021b40:	cmp    r8,0x5
   140021b44:	jne    0x140021b53
   140021b46:	mov    QWORD PTR [rcx+0x8],r9
   140021b4a:	lea    eax,[r8-0x4]
   140021b4e:	jmp    0x140021c83
   140021b53:	cmp    r8,0x1
   140021b57:	jne    0x140021b61
   140021b59:	or     eax,0xffffffff
   140021b5c:	jmp    0x140021c83
   140021b61:	mov    rbp,QWORD PTR [rbx+0xa8]
   140021b68:	mov    QWORD PTR [rbx+0xa8],rsi
   140021b6f:	cmp    DWORD PTR [rcx+0x4],0x8
   140021b73:	jne    0x140021c6b
   140021b79:	mov    edx,0x30
   140021b7e:	mov    rax,QWORD PTR [rbx+0xa0]
   140021b85:	add    rdx,0x10
   140021b89:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   140021b8e:	cmp    rdx,0xc0
   140021b95:	jl     0x140021b7e
   140021b97:	cmp    DWORD PTR [rcx],0xc000008e
   140021b9d:	mov    edi,DWORD PTR [rbx+0xb0]
   140021ba3:	jne    0x140021bb4
   140021ba5:	mov    DWORD PTR [rbx+0xb0],0x83
   140021baf:	jmp    0x140021c55
   140021bb4:	cmp    DWORD PTR [rcx],0xc0000090
   140021bba:	jne    0x140021bcb
   140021bbc:	mov    DWORD PTR [rbx+0xb0],0x81
   140021bc6:	jmp    0x140021c55
   140021bcb:	cmp    DWORD PTR [rcx],0xc0000091
   140021bd1:	jne    0x140021bdf
   140021bd3:	mov    DWORD PTR [rbx+0xb0],0x84
   140021bdd:	jmp    0x140021c55
   140021bdf:	cmp    DWORD PTR [rcx],0xc0000093
   140021be5:	jne    0x140021bf3
   140021be7:	mov    DWORD PTR [rbx+0xb0],0x85
   140021bf1:	jmp    0x140021c55
   140021bf3:	cmp    DWORD PTR [rcx],0xc000008d
   140021bf9:	jne    0x140021c07
   140021bfb:	mov    DWORD PTR [rbx+0xb0],0x82
   140021c05:	jmp    0x140021c55
   140021c07:	cmp    DWORD PTR [rcx],0xc000008f
   140021c0d:	jne    0x140021c1b
   140021c0f:	mov    DWORD PTR [rbx+0xb0],0x86
   140021c19:	jmp    0x140021c55
   140021c1b:	cmp    DWORD PTR [rcx],0xc0000092
   140021c21:	jne    0x140021c2f
   140021c23:	mov    DWORD PTR [rbx+0xb0],0x8a
   140021c2d:	jmp    0x140021c55
   140021c2f:	cmp    DWORD PTR [rcx],0xc00002b5
   140021c35:	jne    0x140021c43
   140021c37:	mov    DWORD PTR [rbx+0xb0],0x8d
   140021c41:	jmp    0x140021c55
   140021c43:	cmp    DWORD PTR [rcx],0xc00002b4
   140021c49:	jne    0x140021c55
   140021c4b:	mov    DWORD PTR [rbx+0xb0],0x8e
   140021c55:	mov    edx,DWORD PTR [rbx+0xb0]
   140021c5b:	mov    ecx,0x8
   140021c60:	call   r8
   140021c63:	mov    DWORD PTR [rbx+0xb0],edi
   140021c69:	jmp    0x140021c75
   140021c6b:	mov    QWORD PTR [rcx+0x8],r9
   140021c6f:	mov    ecx,DWORD PTR [rcx+0x4]
   140021c72:	call   r8
   140021c75:	mov    QWORD PTR [rbx+0xa8],rbp
   140021c7c:	jmp    0x140021b59
   140021c81:	xor    eax,eax
   140021c83:	mov    rbx,QWORD PTR [rsp+0x30]
   140021c88:	mov    rbp,QWORD PTR [rsp+0x38]
   140021c8d:	mov    rsi,QWORD PTR [rsp+0x40]
   140021c92:	add    rsp,0x20
   140021c96:	pop    rdi
   140021c97:	ret    
   140021c98:	mov    rax,rsp
   140021c9b:	mov    QWORD PTR [rax+0x8],rbx
   140021c9f:	mov    QWORD PTR [rax+0x10],rsi
   140021ca3:	mov    QWORD PTR [rax+0x18],rdi
   140021ca7:	mov    QWORD PTR [rax+0x20],r12
   140021cab:	push   r13
   140021cad:	push   r14
   140021caf:	push   r15
   140021cb1:	sub    rsp,0xc0
   140021cb8:	mov    QWORD PTR [rsp+0x48],rsp
   140021cbd:	mov    ecx,0xb
   140021cc2:	call   0x14001b118
   140021cc7:	nop
   140021cc8:	mov    edi,0x58
   140021ccd:	mov    edx,edi
   140021ccf:	lea    r13d,[rdi-0x38]
   140021cd3:	mov    ecx,r13d
   140021cd6:	call   0x14001c1dc
   140021cdb:	mov    rcx,rax
   140021cde:	mov    QWORD PTR [rsp+0x28],rax
   140021ce3:	xor    r12d,r12d
   140021ce6:	test   rax,rax
   140021ce9:	jne    0x140021d04
   140021ceb:	lea    rdx,[rip+0xa]        # 0x140021cfc
   140021cf2:	mov    rcx,rsp
   140021cf5:	call   0x140025140
   140021cfa:	nop
   140021cfb:	nop
   140021cfc:	or     eax,0xffffffff
   140021cff:	jmp    0x140021fa3
   140021d04:	mov    QWORD PTR [rip+0x22315],rax        # 0x140044020
   140021d0b:	mov    DWORD PTR [rip+0x23eae],r13d        # 0x140045bc0
   140021d12:	add    rax,0xb00
   140021d18:	cmp    rcx,rax
   140021d1b:	jae    0x140021d56
   140021d1d:	mov    WORD PTR [rcx+0x8],0xa00
   140021d23:	or     QWORD PTR [rcx],0xffffffffffffffff
   140021d27:	mov    DWORD PTR [rcx+0xc],r12d
   140021d2b:	and    BYTE PTR [rcx+0x38],0x80
   140021d2f:	mov    al,BYTE PTR [rcx+0x38]
   140021d32:	and    al,0x7f
   140021d34:	mov    BYTE PTR [rcx+0x38],al
   140021d37:	mov    WORD PTR [rcx+0x39],0xa0a
   140021d3d:	mov    DWORD PTR [rcx+0x50],r12d
   140021d41:	mov    BYTE PTR [rcx+0x4c],r12b
   140021d45:	add    rcx,rdi
   140021d48:	mov    QWORD PTR [rsp+0x28],rcx
   140021d4d:	mov    rax,QWORD PTR [rip+0x222cc]        # 0x140044020
   140021d54:	jmp    0x140021d12
   140021d56:	lea    rcx,[rsp+0x50]
   140021d5b:	call   QWORD PTR [rip+0xd57f]        # 0x14002f2e0
   140021d61:	cmp    WORD PTR [rsp+0x92],r12w
   140021d6a:	je     0x140021eb2
   140021d70:	mov    rax,QWORD PTR [rsp+0x98]
   140021d78:	test   rax,rax
   140021d7b:	je     0x140021eb2
   140021d81:	lea    r14,[rax+0x4]
   140021d85:	mov    QWORD PTR [rsp+0x38],r14
   140021d8a:	movsxd rsi,DWORD PTR [rax]
   140021d8d:	add    rsi,r14
   140021d90:	mov    QWORD PTR [rsp+0x40],rsi
   140021d95:	mov    r15d,0x800
   140021d9b:	cmp    DWORD PTR [rax],r15d
   140021d9e:	cmovl  r15d,DWORD PTR [rax]
   140021da2:	mov    ebx,0x1
   140021da7:	mov    DWORD PTR [rsp+0x30],ebx
   140021dab:	cmp    DWORD PTR [rip+0x23e0e],r15d        # 0x140045bc0
   140021db2:	jge    0x140021e27
   140021db4:	mov    rdx,rdi
   140021db7:	mov    rcx,r13
   140021dba:	call   0x14001c1dc
   140021dbf:	mov    rcx,rax
   140021dc2:	mov    QWORD PTR [rsp+0x28],rax
   140021dc7:	test   rax,rax
   140021dca:	jne    0x140021dd5
   140021dcc:	mov    r15d,DWORD PTR [rip+0x23ded]        # 0x140045bc0
   140021dd3:	jmp    0x140021e27
   140021dd5:	movsxd rdx,ebx
   140021dd8:	lea    r8,[rip+0x22241]        # 0x140044020
   140021ddf:	mov    QWORD PTR [r8+rdx*8],rax
   140021de3:	add    DWORD PTR [rip+0x23dd6],r13d        # 0x140045bc0
   140021dea:	mov    rax,QWORD PTR [r8+rdx*8]
   140021dee:	add    rax,0xb00
   140021df4:	cmp    rcx,rax
   140021df7:	jae    0x140021e23
   140021df9:	mov    WORD PTR [rcx+0x8],0xa00
   140021dff:	or     QWORD PTR [rcx],0xffffffffffffffff
   140021e03:	mov    DWORD PTR [rcx+0xc],r12d
   140021e07:	and    BYTE PTR [rcx+0x38],0x80
   140021e0b:	mov    WORD PTR [rcx+0x39],0xa0a
   140021e11:	mov    DWORD PTR [rcx+0x50],r12d
   140021e15:	mov    BYTE PTR [rcx+0x4c],r12b
   140021e19:	add    rcx,rdi
   140021e1c:	mov    QWORD PTR [rsp+0x28],rcx
   140021e21:	jmp    0x140021dea
   140021e23:	inc    ebx
   140021e25:	jmp    0x140021da7
   140021e27:	mov    edi,r12d
   140021e2a:	mov    DWORD PTR [rsp+0x20],r12d
   140021e2f:	lea    r13,[rip+0x221ea]        # 0x140044020
   140021e36:	cmp    edi,r15d
   140021e39:	jge    0x140021eb2
   140021e3b:	mov    rcx,QWORD PTR [rsi]
   140021e3e:	lea    rax,[rcx+0x2]
   140021e42:	cmp    rax,0x1
   140021e46:	jbe    0x140021e99
   140021e48:	test   BYTE PTR [r14],0x1
   140021e4c:	je     0x140021e99
   140021e4e:	test   BYTE PTR [r14],0x8
   140021e52:	jne    0x140021e5e
   140021e54:	call   QWORD PTR [rip+0xd4fe]        # 0x14002f358
   140021e5a:	test   eax,eax
   140021e5c:	je     0x140021e99
   140021e5e:	movsxd rcx,edi
   140021e61:	mov    rax,rcx
   140021e64:	sar    rax,0x5
   140021e68:	and    ecx,0x1f
   140021e6b:	imul   rbx,rcx,0x58
   140021e6f:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   140021e74:	mov    QWORD PTR [rsp+0x28],rbx
   140021e79:	mov    rax,QWORD PTR [rsi]
   140021e7c:	mov    QWORD PTR [rbx],rax
   140021e7f:	mov    al,BYTE PTR [r14]
   140021e82:	mov    BYTE PTR [rbx+0x8],al
   140021e85:	lea    rcx,[rbx+0x10]
   140021e89:	xor    r8d,r8d
   140021e8c:	mov    edx,0xfa0
   140021e91:	call   0x14001dcd8
   140021e96:	inc    DWORD PTR [rbx+0xc]
   140021e99:	inc    edi
   140021e9b:	mov    DWORD PTR [rsp+0x20],edi
   140021e9f:	inc    r14
   140021ea2:	mov    QWORD PTR [rsp+0x38],r14
   140021ea7:	add    rsi,0x8
   140021eab:	mov    QWORD PTR [rsp+0x40],rsi
   140021eb0:	jmp    0x140021e36
   140021eb2:	mov    edi,r12d
   140021eb5:	mov    DWORD PTR [rsp+0x20],r12d
   140021eba:	mov    r15,0xfffffffffffffffe
   140021ec1:	cmp    edi,0x3
   140021ec4:	jge    0x140021f97
   140021eca:	movsxd rsi,edi
   140021ecd:	imul   rbx,rsi,0x58
   140021ed1:	add    rbx,QWORD PTR [rip+0x22148]        # 0x140044020
   140021ed8:	mov    QWORD PTR [rsp+0x28],rbx
   140021edd:	mov    rax,QWORD PTR [rbx]
   140021ee0:	add    rax,0x2
   140021ee4:	cmp    rax,0x1
   140021ee8:	jbe    0x140021efa
   140021eea:	movsx  eax,BYTE PTR [rbx+0x8]
   140021eee:	bts    eax,0x7
   140021ef2:	mov    BYTE PTR [rbx+0x8],al
   140021ef5:	jmp    0x140021f8c
   140021efa:	mov    BYTE PTR [rbx+0x8],0x81
   140021efe:	lea    eax,[rdi-0x1]
   140021f01:	neg    eax
   140021f03:	sbb    ecx,ecx
   140021f05:	add    ecx,0xfffffff5
   140021f08:	mov    eax,0xfffffff6
   140021f0d:	test   edi,edi
   140021f0f:	cmove  ecx,eax
   140021f12:	call   QWORD PTR [rip+0xd438]        # 0x14002f350
   140021f18:	mov    r14,rax
   140021f1b:	lea    rcx,[rax+0x1]
   140021f1f:	cmp    rcx,0x1
   140021f23:	jbe    0x140021f6b
   140021f25:	mov    rcx,rax
   140021f28:	call   QWORD PTR [rip+0xd42a]        # 0x14002f358
   140021f2e:	test   eax,eax
   140021f30:	je     0x140021f6b
   140021f32:	mov    QWORD PTR [rbx],r14
   140021f35:	movzx  eax,al
   140021f38:	cmp    eax,0x2
   140021f3b:	jne    0x140021f46
   140021f3d:	movsx  eax,BYTE PTR [rbx+0x8]
   140021f41:	or     eax,0x40
   140021f44:	jmp    0x140021f52
   140021f46:	cmp    eax,0x3
   140021f49:	jne    0x140021f55
   140021f4b:	movsx  eax,BYTE PTR [rbx+0x8]
   140021f4f:	or     eax,0x8
   140021f52:	mov    BYTE PTR [rbx+0x8],al
   140021f55:	lea    rcx,[rbx+0x10]
   140021f59:	xor    r8d,r8d
   140021f5c:	mov    edx,0xfa0
   140021f61:	call   0x14001dcd8
   140021f66:	inc    DWORD PTR [rbx+0xc]
   140021f69:	jmp    0x140021f8c
   140021f6b:	movsx  eax,BYTE PTR [rbx+0x8]
   140021f6f:	or     eax,0x40
   140021f72:	mov    BYTE PTR [rbx+0x8],al
   140021f75:	mov    QWORD PTR [rbx],r15
   140021f78:	mov    rax,QWORD PTR [rip+0x22c21]        # 0x140044ba0
   140021f7f:	test   rax,rax
   140021f82:	je     0x140021f8c
   140021f84:	mov    rax,QWORD PTR [rax+rsi*8]
   140021f88:	mov    DWORD PTR [rax+0x1c],r15d
   140021f8c:	inc    edi
   140021f8e:	mov    DWORD PTR [rsp+0x20],edi
   140021f92:	jmp    0x140021ec1
   140021f97:	mov    ecx,0xb
   140021f9c:	call   0x14001b308
   140021fa1:	xor    eax,eax
   140021fa3:	lea    r11,[rsp+0xc0]
   140021fab:	mov    rbx,QWORD PTR [r11+0x20]
   140021faf:	mov    rsi,QWORD PTR [r11+0x28]
   140021fb3:	mov    rdi,QWORD PTR [r11+0x30]
   140021fb7:	mov    r12,QWORD PTR [r11+0x38]
   140021fbb:	mov    rsp,r11
   140021fbe:	pop    r15
   140021fc0:	pop    r14
   140021fc2:	pop    r13
   140021fc4:	ret    
   140021fc5:	int3   
   140021fc6:	int3   
   140021fc7:	int3   
   140021fc8:	mov    QWORD PTR [rsp+0x18],rbx
   140021fcd:	mov    QWORD PTR [rsp+0x20],rsi
   140021fd2:	push   rdi
   140021fd3:	sub    rsp,0x30
   140021fd7:	cmp    DWORD PTR [rip+0x23c02],0x0        # 0x140045be0
   140021fde:	jne    0x140021fe5
   140021fe0:	call   0x14001f520
   140021fe5:	lea    rdi,[rip+0x22234]        # 0x140044220
   140021fec:	mov    r8d,0x104
   140021ff2:	xor    ecx,ecx
   140021ff4:	mov    rdx,rdi
   140021ff7:	mov    BYTE PTR [rip+0x22326],0x0        # 0x140044324
   140021ffe:	call   QWORD PTR [rip+0xd0cc]        # 0x14002f0d0
   140022004:	mov    rbx,QWORD PTR [rip+0x23cfd]        # 0x140045d08
   14002200b:	mov    QWORD PTR [rip+0x21f7e],rdi        # 0x140043f90
   140022012:	test   rbx,rbx
   140022015:	je     0x14002201c
   140022017:	cmp    BYTE PTR [rbx],0x0
   14002201a:	jne    0x14002201f
   14002201c:	mov    rbx,rdi
   14002201f:	lea    rax,[rsp+0x48]
   140022024:	lea    r9,[rsp+0x40]
   140022029:	xor    r8d,r8d
   14002202c:	xor    edx,edx
   14002202e:	mov    rcx,rbx
   140022031:	mov    QWORD PTR [rsp+0x20],rax
   140022036:	call   0x1400220bc
   14002203b:	movsxd rsi,DWORD PTR [rsp+0x40]
   140022040:	movabs rcx,0x1fffffffffffffff
   14002204a:	cmp    rsi,rcx
   14002204d:	jae    0x1400220a8
   14002204f:	movsxd rcx,DWORD PTR [rsp+0x48]
   140022054:	cmp    rcx,0xffffffffffffffff
   140022058:	jae    0x1400220a8
   14002205a:	lea    rdx,[rcx+rsi*8]
   14002205e:	cmp    rdx,rcx
   140022061:	jb     0x1400220a8
   140022063:	mov    rcx,rdx
   140022066:	call   0x14001c25c
   14002206b:	mov    rdi,rax
   14002206e:	test   rax,rax
   140022071:	je     0x1400220a8
   140022073:	lea    r8,[rax+rsi*8]
   140022077:	lea    rax,[rsp+0x48]
   14002207c:	lea    r9,[rsp+0x40]
   140022081:	mov    rdx,rdi
   140022084:	mov    rcx,rbx
   140022087:	mov    QWORD PTR [rsp+0x20],rax
   14002208c:	call   0x1400220bc
   140022091:	mov    eax,DWORD PTR [rsp+0x40]
   140022095:	mov    QWORD PTR [rip+0x21ed4],rdi        # 0x140043f70
   14002209c:	dec    eax
   14002209e:	mov    DWORD PTR [rip+0x21ec8],eax        # 0x140043f6c
   1400220a4:	xor    eax,eax
   1400220a6:	jmp    0x1400220ab
   1400220a8:	or     eax,0xffffffff
   1400220ab:	mov    rbx,QWORD PTR [rsp+0x50]
   1400220b0:	mov    rsi,QWORD PTR [rsp+0x58]
   1400220b5:	add    rsp,0x30
   1400220b9:	pop    rdi
   1400220ba:	ret    
   1400220bb:	int3   
   1400220bc:	mov    rax,rsp
   1400220bf:	mov    QWORD PTR [rax+0x8],rbx
   1400220c3:	mov    QWORD PTR [rax+0x10],rbp
   1400220c7:	mov    QWORD PTR [rax+0x18],rsi
   1400220cb:	mov    QWORD PTR [rax+0x20],rdi
   1400220cf:	push   r12
   1400220d1:	push   r14
   1400220d3:	push   r15
   1400220d5:	sub    rsp,0x20
   1400220d9:	mov    r14,QWORD PTR [rsp+0x60]
   1400220de:	mov    r12,r9
   1400220e1:	mov    rdi,r8
   1400220e4:	and    DWORD PTR [r14],0x0
   1400220e8:	mov    r15,rdx
   1400220eb:	mov    rbx,rcx
   1400220ee:	mov    DWORD PTR [r9],0x1
   1400220f5:	test   rdx,rdx
   1400220f8:	je     0x140022101
   1400220fa:	mov    QWORD PTR [rdx],r8
   1400220fd:	add    r15,0x8
   140022101:	xor    ebp,ebp
   140022103:	cmp    BYTE PTR [rbx],0x22
   140022106:	jne    0x140022119
   140022108:	xor    eax,eax
   14002210a:	test   ebp,ebp
   14002210c:	mov    sil,0x22
   14002210f:	sete   al
   140022112:	inc    rbx
   140022115:	mov    ebp,eax
   140022117:	jmp    0x140022150
   140022119:	inc    DWORD PTR [r14]
   14002211c:	test   rdi,rdi
   14002211f:	je     0x140022128
   140022121:	mov    al,BYTE PTR [rbx]
   140022123:	mov    BYTE PTR [rdi],al
   140022125:	inc    rdi
   140022128:	movzx  esi,BYTE PTR [rbx]
   14002212b:	inc    rbx
   14002212e:	mov    ecx,esi
   140022130:	call   0x14001b950
   140022135:	test   eax,eax
   140022137:	je     0x14002214b
   140022139:	inc    DWORD PTR [r14]
   14002213c:	test   rdi,rdi
   14002213f:	je     0x140022148
   140022141:	mov    al,BYTE PTR [rbx]
   140022143:	mov    BYTE PTR [rdi],al
   140022145:	inc    rdi
   140022148:	inc    rbx
   14002214b:	test   sil,sil
   14002214e:	je     0x14002216b
   140022150:	test   ebp,ebp
   140022152:	jne    0x140022103
   140022154:	cmp    sil,0x20
   140022158:	je     0x140022160
   14002215a:	cmp    sil,0x9
   14002215e:	jne    0x140022103
   140022160:	test   rdi,rdi
   140022163:	je     0x14002216e
   140022165:	mov    BYTE PTR [rdi-0x1],0x0
   140022169:	jmp    0x14002216e
   14002216b:	dec    rbx
   14002216e:	xor    esi,esi
   140022170:	cmp    BYTE PTR [rbx],0x0
   140022173:	je     0x140022257
   140022179:	cmp    BYTE PTR [rbx],0x20
   14002217c:	je     0x140022183
   14002217e:	cmp    BYTE PTR [rbx],0x9
   140022181:	jne    0x140022188
   140022183:	inc    rbx
   140022186:	jmp    0x140022179
   140022188:	cmp    BYTE PTR [rbx],0x0
   14002218b:	je     0x140022257
   140022191:	test   r15,r15
   140022194:	je     0x14002219d
   140022196:	mov    QWORD PTR [r15],rdi
   140022199:	add    r15,0x8
   14002219d:	inc    DWORD PTR [r12]
   1400221a1:	mov    edx,0x1
   1400221a6:	xor    ecx,ecx
   1400221a8:	jmp    0x1400221af
   1400221aa:	inc    rbx
   1400221ad:	inc    ecx
   1400221af:	cmp    BYTE PTR [rbx],0x5c
   1400221b2:	je     0x1400221aa
   1400221b4:	cmp    BYTE PTR [rbx],0x22
   1400221b7:	jne    0x1400221ee
   1400221b9:	test   dl,cl
   1400221bb:	jne    0x1400221da
   1400221bd:	test   esi,esi
   1400221bf:	je     0x1400221cf
   1400221c1:	lea    rax,[rbx+0x1]
   1400221c5:	cmp    BYTE PTR [rax],0x22
   1400221c8:	jne    0x1400221cf
   1400221ca:	mov    rbx,rax
   1400221cd:	jmp    0x1400221da
   1400221cf:	xor    eax,eax
   1400221d1:	xor    edx,edx
   1400221d3:	test   esi,esi
   1400221d5:	sete   al
   1400221d8:	mov    esi,eax
   1400221da:	shr    ecx,1
   1400221dc:	jmp    0x1400221ee
   1400221de:	dec    ecx
   1400221e0:	test   rdi,rdi
   1400221e3:	je     0x1400221eb
   1400221e5:	mov    BYTE PTR [rdi],0x5c
   1400221e8:	inc    rdi
   1400221eb:	inc    DWORD PTR [r14]
   1400221ee:	test   ecx,ecx
   1400221f0:	jne    0x1400221de
   1400221f2:	mov    al,BYTE PTR [rbx]
   1400221f4:	test   al,al
   1400221f6:	je     0x140022244
   1400221f8:	test   esi,esi
   1400221fa:	jne    0x140022204
   1400221fc:	cmp    al,0x20
   1400221fe:	je     0x140022244
   140022200:	cmp    al,0x9
   140022202:	je     0x140022244
   140022204:	test   edx,edx
   140022206:	je     0x14002223c
   140022208:	movsx  ecx,al
   14002220b:	call   0x14001b950
   140022210:	test   rdi,rdi
   140022213:	je     0x14002222f
   140022215:	test   eax,eax
   140022217:	je     0x140022226
   140022219:	mov    al,BYTE PTR [rbx]
   14002221b:	inc    rbx
   14002221e:	mov    BYTE PTR [rdi],al
   140022220:	inc    rdi
   140022223:	inc    DWORD PTR [r14]
   140022226:	mov    al,BYTE PTR [rbx]
   140022228:	mov    BYTE PTR [rdi],al
   14002222a:	inc    rdi
   14002222d:	jmp    0x140022239
   14002222f:	test   eax,eax
   140022231:	je     0x140022239
   140022233:	inc    rbx
   140022236:	inc    DWORD PTR [r14]
   140022239:	inc    DWORD PTR [r14]
   14002223c:	inc    rbx
   14002223f:	jmp    0x1400221a1
   140022244:	test   rdi,rdi
   140022247:	je     0x14002224f
   140022249:	mov    BYTE PTR [rdi],0x0
   14002224c:	inc    rdi
   14002224f:	inc    DWORD PTR [r14]
   140022252:	jmp    0x140022170
   140022257:	test   r15,r15
   14002225a:	je     0x140022260
   14002225c:	and    QWORD PTR [r15],0x0
   140022260:	inc    DWORD PTR [r12]
   140022264:	mov    rbx,QWORD PTR [rsp+0x40]
   140022269:	mov    rbp,QWORD PTR [rsp+0x48]
   14002226e:	mov    rsi,QWORD PTR [rsp+0x50]
   140022273:	mov    rdi,QWORD PTR [rsp+0x58]
   140022278:	add    rsp,0x20
   14002227c:	pop    r15
   14002227e:	pop    r14
   140022280:	pop    r12
   140022282:	ret    
   140022283:	int3   
   140022284:	mov    QWORD PTR [rsp+0x8],rbx
   140022289:	mov    QWORD PTR [rsp+0x10],rbp
   14002228e:	mov    QWORD PTR [rsp+0x18],rsi
   140022293:	push   rdi
   140022294:	sub    rsp,0x30
   140022298:	cmp    DWORD PTR [rip+0x23941],0x0        # 0x140045be0
   14002229f:	jne    0x1400222a6
   1400222a1:	call   0x14001f520
   1400222a6:	mov    rbx,QWORD PTR [rip+0x21a53]        # 0x140043d00
   1400222ad:	xor    edi,edi
   1400222af:	test   rbx,rbx
   1400222b2:	jne    0x1400222d0
   1400222b4:	or     eax,0xffffffff
   1400222b7:	jmp    0x140022371
   1400222bc:	cmp    al,0x3d
   1400222be:	je     0x1400222c2
   1400222c0:	inc    edi
   1400222c2:	mov    rcx,rbx
   1400222c5:	call   0x14001a580
   1400222ca:	inc    rbx
   1400222cd:	add    rbx,rax
   1400222d0:	mov    al,BYTE PTR [rbx]
   1400222d2:	test   al,al
   1400222d4:	jne    0x1400222bc
   1400222d6:	lea    eax,[rdi+0x1]
   1400222d9:	mov    edx,0x8
   1400222de:	movsxd rcx,eax
   1400222e1:	call   0x14001c1dc
   1400222e6:	mov    rdi,rax
   1400222e9:	mov    QWORD PTR [rip+0x21c90],rax        # 0x140043f80
   1400222f0:	test   rax,rax
   1400222f3:	je     0x1400222b4
   1400222f5:	mov    rbx,QWORD PTR [rip+0x21a04]        # 0x140043d00
   1400222fc:	cmp    BYTE PTR [rbx],0x0
   1400222ff:	je     0x140022351
   140022301:	mov    rcx,rbx
   140022304:	call   0x14001a580
   140022309:	cmp    BYTE PTR [rbx],0x3d
   14002230c:	lea    esi,[rax+0x1]
   14002230f:	je     0x14002233f
   140022311:	movsxd rbp,esi
   140022314:	mov    edx,0x1
   140022319:	mov    rcx,rbp
   14002231c:	call   0x14001c1dc
   140022321:	mov    QWORD PTR [rdi],rax
   140022324:	test   rax,rax
   140022327:	je     0x140022386
   140022329:	mov    r8,rbx
   14002232c:	mov    rdx,rbp
   14002232f:	mov    rcx,rax
   140022332:	call   0x14001987c
   140022337:	test   eax,eax
   140022339:	jne    0x14002239f
   14002233b:	add    rdi,0x8
   14002233f:	movsxd rax,esi
   140022342:	add    rbx,rax
   140022345:	cmp    BYTE PTR [rbx],0x0
   140022348:	jne    0x140022301
   14002234a:	mov    rbx,QWORD PTR [rip+0x219af]        # 0x140043d00
   140022351:	mov    rcx,rbx
   140022354:	call   0x14001a1ac
   140022359:	and    QWORD PTR [rip+0x2199f],0x0        # 0x140043d00
   140022361:	and    QWORD PTR [rdi],0x0
   140022365:	mov    DWORD PTR [rip+0x23875],0x1        # 0x140045be4
   14002236f:	xor    eax,eax
   140022371:	mov    rbx,QWORD PTR [rsp+0x40]
   140022376:	mov    rbp,QWORD PTR [rsp+0x48]
   14002237b:	mov    rsi,QWORD PTR [rsp+0x50]
   140022380:	add    rsp,0x30
   140022384:	pop    rdi
   140022385:	ret    
   140022386:	mov    rcx,QWORD PTR [rip+0x21bf3]        # 0x140043f80
   14002238d:	call   0x14001a1ac
   140022392:	and    QWORD PTR [rip+0x21be6],0x0        # 0x140043f80
   14002239a:	jmp    0x1400222b4
   14002239f:	and    QWORD PTR [rsp+0x20],0x0
   1400223a5:	xor    r9d,r9d
   1400223a8:	xor    r8d,r8d
   1400223ab:	xor    edx,edx
   1400223ad:	xor    ecx,ecx
   1400223af:	call   0x14001ffd8
   1400223b4:	int3   
   1400223b5:	int3   
   1400223b6:	int3   
   1400223b7:	int3   
   1400223b8:	sub    rsp,0x28
   1400223bc:	mov    ecx,0x3
   1400223c1:	call   0x1400226a4
   1400223c6:	cmp    eax,0x1
   1400223c9:	je     0x1400223e2
   1400223cb:	mov    ecx,0x3
   1400223d0:	call   0x1400226a4
   1400223d5:	test   eax,eax
   1400223d7:	jne    0x1400223f6
   1400223d9:	cmp    DWORD PTR [rip+0x21f50],0x1        # 0x140044330
   1400223e0:	jne    0x1400223f6
   1400223e2:	mov    ecx,0xfc
   1400223e7:	call   0x14002242c
   1400223ec:	mov    ecx,0xff
   1400223f1:	call   0x14002242c
   1400223f6:	add    rsp,0x28
   1400223fa:	ret    
   1400223fb:	int3   
   1400223fc:	lea    r9,[rip+0x12fcd]        # 0x1400353d0
   140022403:	xor    edx,edx
   140022405:	mov    r8,r9
   140022408:	cmp    ecx,DWORD PTR [r8]
   14002240b:	je     0x14002241f
   14002240d:	inc    edx
   14002240f:	add    r8,0x10
   140022413:	movsxd rax,edx
   140022416:	cmp    rax,0x17
   14002241a:	jb     0x140022408
   14002241c:	xor    eax,eax
   14002241e:	ret    
   14002241f:	movsxd rax,edx
   140022422:	add    rax,rax
   140022425:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   14002242a:	ret    
   14002242b:	int3   
   14002242c:	mov    QWORD PTR [rsp+0x10],rbx
   140022431:	mov    QWORD PTR [rsp+0x18],rbp
   140022436:	mov    QWORD PTR [rsp+0x20],rsi
   14002243b:	push   rdi
   14002243c:	push   r14
   14002243e:	push   r15
   140022440:	sub    rsp,0x250
   140022447:	mov    rax,QWORD PTR [rip+0x1f202]        # 0x140041650
   14002244e:	xor    rax,rsp
   140022451:	mov    QWORD PTR [rsp+0x240],rax
   140022459:	mov    edi,ecx
   14002245b:	call   0x1400223fc
   140022460:	xor    esi,esi
   140022462:	mov    rbx,rax
   140022465:	test   rax,rax
   140022468:	je     0x140022607
   14002246e:	lea    ecx,[rsi+0x3]
   140022471:	call   0x1400226a4
   140022476:	cmp    eax,0x1
   140022479:	je     0x14002259c
   14002247f:	lea    ecx,[rsi+0x3]
   140022482:	call   0x1400226a4
   140022487:	test   eax,eax
   140022489:	jne    0x140022498
   14002248b:	cmp    DWORD PTR [rip+0x21e9e],0x1        # 0x140044330
   140022492:	je     0x14002259c
   140022498:	cmp    edi,0xfc
   14002249e:	je     0x140022607
   1400224a4:	lea    rbp,[rip+0x21e95]        # 0x140044340
   1400224ab:	mov    r15d,0x314
   1400224b1:	lea    r8,[rip+0x139b8]        # 0x140035e70
   1400224b8:	mov    rcx,rbp
   1400224bb:	mov    edx,r15d
   1400224be:	call   0x140024e60
   1400224c3:	xor    ecx,ecx
   1400224c5:	test   eax,eax
   1400224c7:	jne    0x140022688
   1400224cd:	lea    r14,[rip+0x21e9e]        # 0x140044372
   1400224d4:	mov    r8d,0x104
   1400224da:	mov    WORD PTR [rip+0x22099],si        # 0x14004457a
   1400224e1:	mov    rdx,r14
   1400224e4:	call   QWORD PTR [rip+0xccc6]        # 0x14002f1b0
   1400224ea:	lea    edi,[r15-0x19]
   1400224ee:	test   eax,eax
   1400224f0:	jne    0x14002250b
   1400224f2:	lea    r8,[rip+0x139af]        # 0x140035ea8
   1400224f9:	mov    edx,edi
   1400224fb:	mov    rcx,r14
   1400224fe:	call   0x140024e60
   140022503:	test   eax,eax
   140022505:	jne    0x140022634
   14002250b:	mov    rcx,r14
   14002250e:	call   0x14001e19c
   140022513:	inc    rax
   140022516:	cmp    rax,0x3c
   14002251a:	jbe    0x140022555
   14002251c:	mov    rcx,r14
   14002251f:	call   0x14001e19c
   140022524:	lea    rcx,[rbp-0x44]
   140022528:	lea    r8,[rip+0x139a9]        # 0x140035ed8
   14002252f:	lea    rcx,[rcx+rax*2]
   140022533:	mov    r9d,0x3
   140022539:	mov    rax,rcx
   14002253c:	sub    rax,r14
   14002253f:	sar    rax,1
   140022542:	sub    rdi,rax
   140022545:	mov    rdx,rdi
   140022548:	call   0x14001995c
   14002254d:	test   eax,eax
   14002254f:	jne    0x140022649
   140022555:	lea    r8,[rip+0x13984]        # 0x140035ee0
   14002255c:	mov    rdx,r15
   14002255f:	mov    rcx,rbp
   140022562:	call   0x140028200
   140022567:	test   eax,eax
   140022569:	jne    0x140022673
   14002256f:	mov    r8,rbx
   140022572:	mov    rdx,r15
   140022575:	mov    rcx,rbp
   140022578:	call   0x140028200
   14002257d:	test   eax,eax
   14002257f:	jne    0x14002265e
   140022585:	lea    rdx,[rip+0x13964]        # 0x140035ef0
   14002258c:	mov    r8d,0x12010
   140022592:	mov    rcx,rbp
   140022595:	call   0x140028288
   14002259a:	jmp    0x140022607
   14002259c:	mov    ecx,0xfffffff4
   1400225a1:	call   QWORD PTR [rip+0xcda9]        # 0x14002f350
   1400225a7:	mov    rdi,rax
   1400225aa:	lea    rcx,[rax-0x1]
   1400225ae:	cmp    rcx,0xfffffffffffffffd
   1400225b2:	ja     0x140022607
   1400225b4:	mov    r8d,esi
   1400225b7:	lea    rdx,[rsp+0x40]
   1400225bc:	mov    cl,BYTE PTR [rbx]
   1400225be:	mov    BYTE PTR [rdx],cl
   1400225c0:	cmp    WORD PTR [rbx],si
   1400225c3:	je     0x1400225da
   1400225c5:	inc    r8d
   1400225c8:	inc    rdx
   1400225cb:	add    rbx,0x2
   1400225cf:	movsxd rax,r8d
   1400225d2:	cmp    rax,0x1f4
   1400225d8:	jb     0x1400225bc
   1400225da:	lea    rcx,[rsp+0x40]
   1400225df:	mov    BYTE PTR [rsp+0x233],sil
   1400225e7:	call   0x14001a580
   1400225ec:	lea    r9,[rsp+0x30]
   1400225f1:	lea    rdx,[rsp+0x40]
   1400225f6:	mov    rcx,rdi
   1400225f9:	mov    r8,rax
   1400225fc:	mov    QWORD PTR [rsp+0x20],rsi
   140022601:	call   QWORD PTR [rip+0xcb19]        # 0x14002f120
   140022607:	mov    rcx,QWORD PTR [rsp+0x240]
   14002260f:	xor    rcx,rsp
   140022612:	call   0x1400187d0
   140022617:	lea    r11,[rsp+0x250]
   14002261f:	mov    rbx,QWORD PTR [r11+0x28]
   140022623:	mov    rbp,QWORD PTR [r11+0x30]
   140022627:	mov    rsi,QWORD PTR [r11+0x38]
   14002262b:	mov    rsp,r11
   14002262e:	pop    r15
   140022630:	pop    r14
   140022632:	pop    rdi
   140022633:	ret    
   140022634:	xor    r9d,r9d
   140022637:	xor    r8d,r8d
   14002263a:	xor    edx,edx
   14002263c:	xor    ecx,ecx
   14002263e:	mov    QWORD PTR [rsp+0x20],rsi
   140022643:	call   0x14001ffd8
   140022648:	int3   
   140022649:	xor    r9d,r9d
   14002264c:	xor    r8d,r8d
   14002264f:	xor    edx,edx
   140022651:	xor    ecx,ecx
   140022653:	mov    QWORD PTR [rsp+0x20],rsi
   140022658:	call   0x14001ffd8
   14002265d:	int3   
   14002265e:	xor    r9d,r9d
   140022661:	xor    r8d,r8d
   140022664:	xor    edx,edx
   140022666:	xor    ecx,ecx
   140022668:	mov    QWORD PTR [rsp+0x20],rsi
   14002266d:	call   0x14001ffd8
   140022672:	int3   
   140022673:	xor    r9d,r9d
   140022676:	xor    r8d,r8d
   140022679:	xor    edx,edx
   14002267b:	xor    ecx,ecx
   14002267d:	mov    QWORD PTR [rsp+0x20],rsi
   140022682:	call   0x14001ffd8
   140022687:	int3   
   140022688:	xor    r9d,r9d
   14002268b:	xor    r8d,r8d
   14002268e:	xor    edx,edx
   140022690:	mov    QWORD PTR [rsp+0x20],rsi
   140022695:	call   0x14001ffd8
   14002269a:	int3   
   14002269b:	int3   
   14002269c:	mov    DWORD PTR [rip+0x21c8e],ecx        # 0x140044330
   1400226a2:	ret    
   1400226a3:	int3   
   1400226a4:	sub    rsp,0x28
   1400226a8:	test   ecx,ecx
   1400226aa:	js     0x1400226cc
   1400226ac:	cmp    ecx,0x2
   1400226af:	jle    0x1400226be
   1400226b1:	cmp    ecx,0x3
   1400226b4:	jne    0x1400226cc
   1400226b6:	mov    eax,DWORD PTR [rip+0x222ac]        # 0x140044968
   1400226bc:	jmp    0x1400226df
   1400226be:	mov    eax,DWORD PTR [rip+0x222a4]        # 0x140044968
   1400226c4:	mov    DWORD PTR [rip+0x2229e],ecx        # 0x140044968
   1400226ca:	jmp    0x1400226df
   1400226cc:	call   0x14001b864
   1400226d1:	mov    DWORD PTR [rax],0x16
   1400226d7:	call   0x14001ffb8
   1400226dc:	or     eax,0xffffffff
   1400226df:	add    rsp,0x28
   1400226e3:	ret    
   1400226e4:	mov    QWORD PTR [rsp+0x20],rbx
   1400226e9:	push   rbp
   1400226ea:	mov    rbp,rsp
   1400226ed:	sub    rsp,0x20
   1400226f1:	mov    rax,QWORD PTR [rip+0x1ef58]        # 0x140041650
   1400226f8:	and    QWORD PTR [rbp+0x18],0x0
   1400226fd:	movabs rbx,0x2b992ddfa232
   140022707:	cmp    rax,rbx
   14002270a:	jne    0x14002277b
   14002270c:	lea    rcx,[rbp+0x18]
   140022710:	call   QWORD PTR [rip+0xcc52]        # 0x14002f368
   140022716:	mov    rax,QWORD PTR [rbp+0x18]
   14002271a:	mov    QWORD PTR [rbp+0x10],rax
   14002271e:	call   QWORD PTR [rip+0xca1c]        # 0x14002f140
   140022724:	mov    eax,eax
   140022726:	xor    QWORD PTR [rbp+0x10],rax
   14002272a:	call   QWORD PTR [rip+0xca18]        # 0x14002f148
   140022730:	lea    rcx,[rbp+0x20]
   140022734:	mov    eax,eax
   140022736:	xor    QWORD PTR [rbp+0x10],rax
   14002273a:	call   QWORD PTR [rip+0xcc20]        # 0x14002f360
   140022740:	mov    eax,DWORD PTR [rbp+0x20]
   140022743:	shl    rax,0x20
   140022747:	lea    rcx,[rbp+0x10]
   14002274b:	xor    rax,QWORD PTR [rbp+0x20]
   14002274f:	xor    rax,QWORD PTR [rbp+0x10]
   140022753:	xor    rax,rcx
   140022756:	movabs rcx,0xffffffffffff
   140022760:	and    rax,rcx
   140022763:	movabs rcx,0x2b992ddfa233
   14002276d:	cmp    rax,rbx
   140022770:	cmove  rax,rcx
   140022774:	mov    QWORD PTR [rip+0x1eed5],rax        # 0x140041650
   14002277b:	mov    rbx,QWORD PTR [rsp+0x48]
   140022780:	not    rax
   140022783:	mov    QWORD PTR [rip+0x1eece],rax        # 0x140041658
   14002278a:	add    rsp,0x20
   14002278e:	pop    rbp
   14002278f:	ret    
   140022790:	mov    QWORD PTR [rsp+0x8],rbx
   140022795:	push   rdi
   140022796:	sub    rsp,0x20
   14002279a:	lea    rbx,[rip+0x1956f]        # 0x14003bd10
   1400227a1:	lea    rdi,[rip+0x19568]        # 0x14003bd10
   1400227a8:	jmp    0x1400227b8
   1400227aa:	mov    rax,QWORD PTR [rbx]
   1400227ad:	test   rax,rax
   1400227b0:	je     0x1400227b4
   1400227b2:	call   rax
   1400227b4:	add    rbx,0x8
   1400227b8:	cmp    rbx,rdi
   1400227bb:	jb     0x1400227aa
   1400227bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400227c2:	add    rsp,0x20
   1400227c6:	pop    rdi
   1400227c7:	ret    
   1400227c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400227cd:	push   rdi
   1400227ce:	sub    rsp,0x20
   1400227d2:	lea    rbx,[rip+0x19547]        # 0x14003bd20
   1400227d9:	lea    rdi,[rip+0x19540]        # 0x14003bd20
   1400227e0:	jmp    0x1400227f0
   1400227e2:	mov    rax,QWORD PTR [rbx]
   1400227e5:	test   rax,rax
   1400227e8:	je     0x1400227ec
   1400227ea:	call   rax
   1400227ec:	add    rbx,0x8
   1400227f0:	cmp    rbx,rdi
   1400227f3:	jb     0x1400227e2
   1400227f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400227fa:	add    rsp,0x20
   1400227fe:	pop    rdi
   1400227ff:	ret    
   140022800:	mov    rax,rsp
   140022803:	mov    QWORD PTR [rax+0x8],rbx
   140022807:	mov    QWORD PTR [rax+0x10],rbp
   14002280b:	mov    QWORD PTR [rax+0x18],rsi
   14002280f:	mov    QWORD PTR [rax+0x20],rdi
   140022813:	push   r14
   140022815:	sub    rsp,0x40
   140022819:	call   QWORD PTR [rip+0xcb51]        # 0x14002f370
   14002281f:	xor    r14d,r14d
   140022822:	mov    rdi,rax
   140022825:	test   rax,rax
   140022828:	je     0x1400228d7
   14002282e:	mov    rbx,rax
   140022831:	cmp    WORD PTR [rax],r14w
   140022835:	je     0x14002284b
   140022837:	add    rbx,0x2
   14002283b:	cmp    WORD PTR [rbx],r14w
   14002283f:	jne    0x140022837
   140022841:	add    rbx,0x2
   140022845:	cmp    WORD PTR [rbx],r14w
   140022849:	jne    0x140022837
   14002284b:	mov    QWORD PTR [rsp+0x38],r14
   140022850:	sub    rbx,rax
   140022853:	mov    QWORD PTR [rsp+0x30],r14
   140022858:	sar    rbx,1
   14002285b:	mov    r8,rax
   14002285e:	xor    edx,edx
   140022860:	lea    r9d,[rbx+0x1]
   140022864:	xor    ecx,ecx
   140022866:	mov    DWORD PTR [rsp+0x28],r14d
   14002286b:	mov    QWORD PTR [rsp+0x20],r14
   140022870:	call   QWORD PTR [rip+0xc99a]        # 0x14002f210
   140022876:	movsxd rbp,eax
   140022879:	test   eax,eax
   14002287b:	je     0x1400228ce
   14002287d:	mov    rcx,rbp
   140022880:	call   0x14001c25c
   140022885:	mov    rsi,rax
   140022888:	test   rax,rax
   14002288b:	je     0x1400228ce
   14002288d:	mov    QWORD PTR [rsp+0x38],r14
   140022892:	mov    QWORD PTR [rsp+0x30],r14
   140022897:	lea    r9d,[rbx+0x1]
   14002289b:	mov    r8,rdi
   14002289e:	xor    edx,edx
   1400228a0:	xor    ecx,ecx
   1400228a2:	mov    DWORD PTR [rsp+0x28],ebp
   1400228a6:	mov    QWORD PTR [rsp+0x20],rax
   1400228ab:	call   QWORD PTR [rip+0xc95f]        # 0x14002f210
   1400228b1:	test   eax,eax
   1400228b3:	jne    0x1400228c0
   1400228b5:	mov    rcx,rsi
   1400228b8:	call   0x14001a1ac
   1400228bd:	mov    rsi,r14
   1400228c0:	mov    rcx,rdi
   1400228c3:	call   QWORD PTR [rip+0xcaaf]        # 0x14002f378
   1400228c9:	mov    rax,rsi
   1400228cc:	jmp    0x1400228d9
   1400228ce:	mov    rcx,rdi
   1400228d1:	call   QWORD PTR [rip+0xcaa1]        # 0x14002f378
   1400228d7:	xor    eax,eax
   1400228d9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400228de:	mov    rbp,QWORD PTR [rsp+0x58]
   1400228e3:	mov    rsi,QWORD PTR [rsp+0x60]
   1400228e8:	mov    rdi,QWORD PTR [rsp+0x68]
   1400228ed:	add    rsp,0x40
   1400228f1:	pop    r14
   1400228f3:	ret    
   1400228f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400228f9:	push   rdi
   1400228fa:	sub    rsp,0x20
   1400228fe:	xor    edi,edi
   140022900:	cmp    DWORD PTR [rip+0x232da],edi        # 0x140045be0
   140022906:	jne    0x14002290d
   140022908:	call   0x14001f520
   14002290d:	mov    rbx,QWORD PTR [rip+0x233f4]        # 0x140045d08
   140022914:	lea    rax,[rip+0x17255]        # 0x140039b70
   14002291b:	test   rbx,rbx
   14002291e:	cmove  rbx,rax
   140022922:	cmp    BYTE PTR [rbx],0x20
   140022925:	ja     0x140022930
   140022927:	cmp    BYTE PTR [rbx],0x0
   14002292a:	je     0x14002295f
   14002292c:	test   edi,edi
   14002292e:	je     0x140022959
   140022930:	cmp    BYTE PTR [rbx],0x22
   140022933:	jne    0x14002293e
   140022935:	xor    eax,eax
   140022937:	test   edi,edi
   140022939:	sete   al
   14002293c:	mov    edi,eax
   14002293e:	movzx  ecx,BYTE PTR [rbx]
   140022941:	call   0x14001b950
   140022946:	test   eax,eax
   140022948:	je     0x14002294d
   14002294a:	inc    rbx
   14002294d:	inc    rbx
   140022950:	jmp    0x140022922
   140022952:	cmp    al,0x20
   140022954:	ja     0x14002295f
   140022956:	inc    rbx
   140022959:	mov    al,BYTE PTR [rbx]
   14002295b:	test   al,al
   14002295d:	jne    0x140022952
   14002295f:	mov    rax,rbx
   140022962:	mov    rbx,QWORD PTR [rsp+0x30]
   140022967:	add    rsp,0x20
   14002296b:	pop    rdi
   14002296c:	ret    
   14002296d:	int3   
   14002296e:	int3   
   14002296f:	int3   
   140022970:	sub    rsp,0x28
   140022974:	movsxd r9,DWORD PTR [r8+0x1c]
   140022978:	mov    rax,QWORD PTR [rcx]
   14002297b:	mov    r10,r8
   14002297e:	mov    eax,DWORD PTR [r9+rax*1]
   140022982:	cmp    eax,0xfffffffe
   140022985:	jne    0x140022992
   140022987:	mov    r8,QWORD PTR [rdx]
   14002298a:	mov    rcx,r10
   14002298d:	call   0x140022a14
   140022992:	add    rsp,0x28
   140022996:	ret    
   140022997:	int3   
   140022998:	rex push rbx
   14002299a:	sub    rsp,0x20
   14002299e:	lea    r9,[rsp+0x40]
   1400229a3:	mov    rbx,r8
   1400229a6:	call   0x14001a6f0
   1400229ab:	mov    rcx,QWORD PTR [rax]
   1400229ae:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400229b2:	mov    QWORD PTR [rsp+0x40],rcx
   1400229b7:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   1400229bb:	add    rsp,0x20
   1400229bf:	pop    rbx
   1400229c0:	ret    
   1400229c1:	int3   
   1400229c2:	int3   
   1400229c3:	int3   
   1400229c4:	movsxd rdx,DWORD PTR [r8+0x1c]
   1400229c8:	mov    rax,QWORD PTR [rcx]
   1400229cb:	mov    DWORD PTR [rdx+rax*1],r9d
   1400229cf:	ret    
   1400229d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400229d5:	push   rdi
   1400229d6:	sub    rsp,0x20
   1400229da:	mov    edi,r9d
   1400229dd:	lea    r9,[rsp+0x40]
   1400229e2:	mov    rbx,r8
   1400229e5:	call   0x14001a6f0
   1400229ea:	mov    rcx,QWORD PTR [rax]
   1400229ed:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400229f1:	mov    QWORD PTR [rsp+0x40],rcx
   1400229f6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   1400229fa:	jle    0x140022a00
   1400229fc:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   140022a00:	mov    rbx,QWORD PTR [rsp+0x30]
   140022a05:	add    rsp,0x20
   140022a09:	pop    rdi
   140022a0a:	ret    
   140022a0b:	int3   
   140022a0c:	mov    r8,QWORD PTR [rdx]
   140022a0f:	jmp    0x140022a14
   140022a14:	mov    QWORD PTR [rsp+0x8],rbx
   140022a19:	mov    QWORD PTR [rsp+0x10],rbp
   140022a1e:	mov    QWORD PTR [rsp+0x18],rsi
   140022a23:	push   rdi
   140022a24:	sub    rsp,0x20
   140022a28:	mov    rbp,r8
   140022a2b:	mov    rsi,rdx
   140022a2e:	mov    rbx,rcx
   140022a31:	test   rcx,rcx
   140022a34:	jne    0x140022a3b
   140022a36:	call   0x140018ff8
   140022a3b:	movsxd rax,DWORD PTR [rbx+0x18]
   140022a3f:	mov    edi,DWORD PTR [rbx+0x14]
   140022a42:	add    rax,QWORD PTR [rsi+0x8]
   140022a46:	jne    0x140022a4d
   140022a48:	call   0x140018ff8
   140022a4d:	xor    r8d,r8d
   140022a50:	test   edi,edi
   140022a52:	je     0x140022a88
   140022a54:	mov    r9,QWORD PTR [rsi+0x8]
   140022a58:	movsxd r10,DWORD PTR [rbx+0x18]
   140022a5c:	lea    rcx,[r9+r8*8]
   140022a60:	movsxd rdx,DWORD PTR [rcx+r10*1]
   140022a64:	add    rdx,r9
   140022a67:	cmp    rbp,rdx
   140022a6a:	jl     0x140022a74
   140022a6c:	inc    r8d
   140022a6f:	cmp    r8d,edi
   140022a72:	jb     0x140022a5c
   140022a74:	test   r8d,r8d
   140022a77:	je     0x140022a88
   140022a79:	lea    ecx,[r8-0x1]
   140022a7d:	lea    rax,[r9+rcx*8]
   140022a81:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   140022a86:	jmp    0x140022a8b
   140022a88:	or     eax,0xffffffff
   140022a8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022a90:	mov    rbp,QWORD PTR [rsp+0x38]
   140022a95:	mov    rsi,QWORD PTR [rsp+0x40]
   140022a9a:	add    rsp,0x20
   140022a9e:	pop    rdi
   140022a9f:	ret    
   140022aa0:	sub    rsp,0x48
   140022aa4:	mov    eax,DWORD PTR [rsp+0x78]
   140022aa8:	and    QWORD PTR [rsp+0x30],0x0
   140022aae:	mov    DWORD PTR [rsp+0x28],eax
   140022ab2:	mov    eax,DWORD PTR [rsp+0x70]
   140022ab6:	mov    DWORD PTR [rsp+0x20],eax
   140022aba:	call   0x140022ac4
   140022abf:	add    rsp,0x48
   140022ac3:	ret    
   140022ac4:	sub    rsp,0x38
   140022ac8:	lea    eax,[r9-0x45]
   140022acc:	mov    r10d,0xffffffdf
   140022ad2:	test   r10d,eax
   140022ad5:	je     0x140022b21
   140022ad7:	cmp    r9d,0x66
   140022adb:	jne    0x140022af3
   140022add:	mov    rax,QWORD PTR [rsp+0x70]
   140022ae2:	mov    r9d,DWORD PTR [rsp+0x60]
   140022ae7:	mov    QWORD PTR [rsp+0x20],rax
   140022aec:	call   0x14002334c
   140022af1:	jmp    0x140022b3d
   140022af3:	lea    eax,[r9-0x41]
   140022af7:	mov    r9d,DWORD PTR [rsp+0x60]
   140022afc:	test   r10d,eax
   140022aff:	mov    rax,QWORD PTR [rsp+0x70]
   140022b04:	mov    QWORD PTR [rsp+0x28],rax
   140022b09:	mov    eax,DWORD PTR [rsp+0x68]
   140022b0d:	mov    DWORD PTR [rsp+0x20],eax
   140022b11:	je     0x140022b1a
   140022b13:	call   0x140023420
   140022b18:	jmp    0x140022b3d
   140022b1a:	call   0x140022b44
   140022b1f:	jmp    0x140022b3d
   140022b21:	mov    rax,QWORD PTR [rsp+0x70]
   140022b26:	mov    r9d,DWORD PTR [rsp+0x60]
   140022b2b:	mov    QWORD PTR [rsp+0x28],rax
   140022b30:	mov    eax,DWORD PTR [rsp+0x68]
   140022b34:	mov    DWORD PTR [rsp+0x20],eax
   140022b38:	call   0x1400230f0
   140022b3d:	add    rsp,0x38
   140022b41:	ret    
   140022b42:	int3   
   140022b43:	int3   
   140022b44:	mov    rax,rsp
   140022b47:	mov    QWORD PTR [rax+0x8],rbx
   140022b4b:	mov    QWORD PTR [rax+0x10],rbp
   140022b4f:	mov    QWORD PTR [rax+0x18],rsi
   140022b53:	push   rdi
   140022b54:	push   r12
   140022b56:	push   r13
   140022b58:	push   r14
   140022b5a:	push   r15
   140022b5c:	sub    rsp,0x50
   140022b60:	mov    rdi,rdx
   140022b63:	mov    rdx,QWORD PTR [rsp+0xa8]
   140022b6b:	mov    r14,rcx
   140022b6e:	lea    rcx,[rax-0x48]
   140022b72:	mov    r15d,0x30
   140022b78:	mov    ebx,r9d
   140022b7b:	mov    rsi,r8
   140022b7e:	mov    r12d,0x3ff
   140022b84:	movzx  ebp,r15w
   140022b88:	call   0x140019058
   140022b8d:	xor    r9d,r9d
   140022b90:	test   ebx,ebx
   140022b92:	cmovs  ebx,r9d
   140022b96:	test   rdi,rdi
   140022b99:	jne    0x140022ba7
   140022b9b:	call   0x14001b864
   140022ba0:	mov    ebx,0x16
   140022ba5:	jmp    0x140022bc4
   140022ba7:	test   rsi,rsi
   140022baa:	je     0x140022b9b
   140022bac:	lea    eax,[rbx+0xb]
   140022baf:	mov    BYTE PTR [rdi],r9b
   140022bb2:	movsxd rcx,eax
   140022bb5:	cmp    rsi,rcx
   140022bb8:	ja     0x140022bd3
   140022bba:	call   0x14001b864
   140022bbf:	mov    ebx,0x22
   140022bc4:	mov    DWORD PTR [rax],ebx
   140022bc6:	call   0x14001ffb8
   140022bcb:	xor    r9d,r9d
   140022bce:	jmp    0x140022ec1
   140022bd3:	mov    rax,QWORD PTR [r14]
   140022bd6:	mov    ecx,0x7ff
   140022bdb:	shr    rax,0x34
   140022bdf:	and    rax,rcx
   140022be2:	cmp    rax,rcx
   140022be5:	jne    0x140022c7d
   140022beb:	mov    QWORD PTR [rsp+0x28],r9
   140022bf0:	mov    DWORD PTR [rsp+0x20],r9d
   140022bf5:	lea    r8,[rsi-0x2]
   140022bf9:	cmp    rsi,0xffffffffffffffff
   140022bfd:	lea    rdx,[rdi+0x2]
   140022c01:	mov    r9d,ebx
   140022c04:	cmove  r8,rsi
   140022c08:	mov    rcx,r14
   140022c0b:	call   0x1400230f0
   140022c10:	xor    r9d,r9d
   140022c13:	mov    ebx,eax
   140022c15:	test   eax,eax
   140022c17:	je     0x140022c21
   140022c19:	mov    BYTE PTR [rdi],r9b
   140022c1c:	jmp    0x140022ec1
   140022c21:	cmp    BYTE PTR [rdi+0x2],0x2d
   140022c25:	mov    esi,0x1
   140022c2a:	jne    0x140022c32
   140022c2c:	mov    BYTE PTR [rdi],0x2d
   140022c2f:	add    rdi,rsi
   140022c32:	mov    ebx,DWORD PTR [rsp+0xa0]
   140022c39:	mov    BYTE PTR [rdi],r15b
   140022c3c:	mov    edx,0x65
   140022c41:	mov    eax,ebx
   140022c43:	neg    eax
   140022c45:	sbb    cl,cl
   140022c47:	and    cl,0xe0
   140022c4a:	add    cl,0x78
   140022c4d:	mov    BYTE PTR [rdi+rsi*1],cl
   140022c50:	lea    rcx,[rsi+0x1]
   140022c54:	add    rcx,rdi
   140022c57:	call   0x140019738
   140022c5c:	xor    r9d,r9d
   140022c5f:	test   rax,rax
   140022c62:	je     0x140022ebe
   140022c68:	neg    ebx
   140022c6a:	sbb    cl,cl
   140022c6c:	and    cl,0xe0
   140022c6f:	add    cl,0x70
   140022c72:	mov    BYTE PTR [rax],cl
   140022c74:	mov    BYTE PTR [rax+0x3],r9b
   140022c78:	jmp    0x140022ebe
   140022c7d:	movabs rax,0x8000000000000000
   140022c87:	mov    esi,0x1
   140022c8c:	test   QWORD PTR [r14],rax
   140022c8f:	je     0x140022c97
   140022c91:	mov    BYTE PTR [rdi],0x2d
   140022c94:	add    rdi,rsi
   140022c97:	mov    r13d,DWORD PTR [rsp+0xa0]
   140022c9f:	mov    r10d,r15d
   140022ca2:	movabs r11,0xfffffffffffff
   140022cac:	mov    BYTE PTR [rdi],r10b
   140022caf:	add    rdi,rsi
   140022cb2:	mov    eax,r13d
   140022cb5:	neg    eax
   140022cb7:	mov    eax,r13d
   140022cba:	sbb    cl,cl
   140022cbc:	and    cl,0xe0
   140022cbf:	add    cl,0x78
   140022cc2:	mov    BYTE PTR [rdi],cl
   140022cc4:	add    rdi,rsi
   140022cc7:	neg    eax
   140022cc9:	sbb    edx,edx
   140022ccb:	movabs rax,0x7ff0000000000000
   140022cd5:	and    edx,0xffffffe0
   140022cd8:	sub    edx,0xffffffd9
   140022cdb:	test   QWORD PTR [r14],rax
   140022cde:	jne    0x140022cfb
   140022ce0:	mov    BYTE PTR [rdi],r10b
   140022ce3:	mov    rax,QWORD PTR [r14]
   140022ce6:	add    rdi,rsi
   140022ce9:	and    rax,r11
   140022cec:	neg    rax
   140022cef:	sbb    r12,r12
   140022cf2:	and    r12d,0x3fe
   140022cf9:	jmp    0x140022d01
   140022cfb:	mov    BYTE PTR [rdi],0x31
   140022cfe:	add    rdi,rsi
   140022d01:	mov    r15,rdi
   140022d04:	add    rdi,rsi
   140022d07:	test   ebx,ebx
   140022d09:	jne    0x140022d10
   140022d0b:	mov    BYTE PTR [r15],r9b
   140022d0e:	jmp    0x140022d24
   140022d10:	mov    rax,QWORD PTR [rsp+0x30]
   140022d15:	mov    rcx,QWORD PTR [rax+0xf0]
   140022d1c:	mov    rax,QWORD PTR [rcx]
   140022d1f:	mov    cl,BYTE PTR [rax]
   140022d21:	mov    BYTE PTR [r15],cl
   140022d24:	test   QWORD PTR [r14],r11
   140022d27:	jbe    0x140022db5
   140022d2d:	movabs r8,0xf000000000000
   140022d37:	test   ebx,ebx
   140022d39:	jle    0x140022d68
   140022d3b:	mov    rax,QWORD PTR [r14]
   140022d3e:	mov    cl,bpl
   140022d41:	and    rax,r8
   140022d44:	and    rax,r11
   140022d47:	shr    rax,cl
   140022d4a:	add    ax,r10w
   140022d4e:	cmp    ax,0x39
   140022d52:	jbe    0x140022d57
   140022d54:	add    ax,dx
   140022d57:	mov    BYTE PTR [rdi],al
   140022d59:	shr    r8,0x4
   140022d5d:	sub    ebx,esi
   140022d5f:	add    rdi,rsi
   140022d62:	add    bp,0xfffc
   140022d66:	jns    0x140022d37
   140022d68:	test   bp,bp
   140022d6b:	js     0x140022db5
   140022d6d:	mov    rax,QWORD PTR [r14]
   140022d70:	mov    cl,bpl
   140022d73:	and    rax,r8
   140022d76:	and    rax,r11
   140022d79:	shr    rax,cl
   140022d7c:	cmp    ax,0x8
   140022d80:	jbe    0x140022db5
   140022d82:	lea    rcx,[rdi-0x1]
   140022d86:	mov    al,BYTE PTR [rcx]
   140022d88:	sub    al,0x46
   140022d8a:	test   al,0xdf
   140022d8c:	jne    0x140022d96
   140022d8e:	mov    BYTE PTR [rcx],r10b
   140022d91:	sub    rcx,rsi
   140022d94:	jmp    0x140022d86
   140022d96:	cmp    rcx,r15
   140022d99:	je     0x140022daf
   140022d9b:	mov    al,BYTE PTR [rcx]
   140022d9d:	cmp    al,0x39
   140022d9f:	jne    0x140022da8
   140022da1:	add    dl,0x3a
   140022da4:	mov    BYTE PTR [rcx],dl
   140022da6:	jmp    0x140022db5
   140022da8:	add    al,sil
   140022dab:	mov    BYTE PTR [rcx],al
   140022dad:	jmp    0x140022db5
   140022daf:	sub    rcx,rsi
   140022db2:	add    BYTE PTR [rcx],sil
   140022db5:	test   ebx,ebx
   140022db7:	jle    0x140022dd1
   140022db9:	mov    r8,rbx
   140022dbc:	mov    dl,r10b
   140022dbf:	mov    rcx,rdi
   140022dc2:	call   0x14001b980
   140022dc7:	add    rdi,rbx
   140022dca:	xor    r9d,r9d
   140022dcd:	lea    r10d,[r9+0x30]
   140022dd1:	cmp    BYTE PTR [r15],r9b
   140022dd4:	cmove  rdi,r15
   140022dd8:	neg    r13d
   140022ddb:	sbb    al,al
   140022ddd:	and    al,0xe0
   140022ddf:	add    al,0x70
   140022de1:	mov    BYTE PTR [rdi],al
   140022de3:	mov    rcx,QWORD PTR [r14]
   140022de6:	add    rdi,rsi
   140022de9:	shr    rcx,0x34
   140022ded:	and    ecx,0x7ff
   140022df3:	sub    rcx,r12
   140022df6:	js     0x140022e00
   140022df8:	mov    BYTE PTR [rdi],0x2b
   140022dfb:	add    rdi,rsi
   140022dfe:	jmp    0x140022e09
   140022e00:	mov    BYTE PTR [rdi],0x2d
   140022e03:	add    rdi,rsi
   140022e06:	neg    rcx
   140022e09:	mov    r8,rdi
   140022e0c:	mov    BYTE PTR [rdi],r10b
   140022e0f:	cmp    rcx,0x3e8
   140022e16:	jl     0x140022e4b
   140022e18:	movabs rax,0x20c49ba5e353f7cf
   140022e22:	imul   rcx
   140022e25:	sar    rdx,0x7
   140022e29:	mov    rax,rdx
   140022e2c:	shr    rax,0x3f
   140022e30:	add    rdx,rax
   140022e33:	lea    eax,[r10+rdx*1]
   140022e37:	mov    BYTE PTR [rdi],al
   140022e39:	add    rdi,rsi
   140022e3c:	imul   rax,rdx,0xfffffffffffffc18
   140022e43:	add    rcx,rax
   140022e46:	cmp    rdi,r8
   140022e49:	jne    0x140022e51
   140022e4b:	cmp    rcx,0x64
   140022e4f:	jl     0x140022e7f
   140022e51:	movabs rax,0xa3d70a3d70a3d70b
   140022e5b:	imul   rcx
   140022e5e:	add    rdx,rcx
   140022e61:	sar    rdx,0x6
   140022e65:	mov    rax,rdx
   140022e68:	shr    rax,0x3f
   140022e6c:	add    rdx,rax
   140022e6f:	lea    eax,[r10+rdx*1]
   140022e73:	mov    BYTE PTR [rdi],al
   140022e75:	add    rdi,rsi
   140022e78:	imul   rax,rdx,0xffffffffffffff9c
   140022e7c:	add    rcx,rax
   140022e7f:	cmp    rdi,r8
   140022e82:	jne    0x140022e8a
   140022e84:	cmp    rcx,0xa
   140022e88:	jl     0x140022eb5
   140022e8a:	movabs rax,0x6666666666666667
   140022e94:	imul   rcx
   140022e97:	sar    rdx,0x2
   140022e9b:	mov    rax,rdx
   140022e9e:	shr    rax,0x3f
   140022ea2:	add    rdx,rax
   140022ea5:	lea    eax,[r10+rdx*1]
   140022ea9:	mov    BYTE PTR [rdi],al
   140022eab:	add    rdi,rsi
   140022eae:	imul   rax,rdx,0xfffffffffffffff6
   140022eb2:	add    rcx,rax
   140022eb5:	add    cl,r10b
   140022eb8:	mov    BYTE PTR [rdi],cl
   140022eba:	mov    BYTE PTR [rdi+0x1],r9b
   140022ebe:	mov    ebx,r9d
   140022ec1:	cmp    BYTE PTR [rsp+0x48],r9b
   140022ec6:	je     0x140022ed4
   140022ec8:	mov    rcx,QWORD PTR [rsp+0x40]
   140022ecd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140022ed4:	lea    r11,[rsp+0x50]
   140022ed9:	mov    eax,ebx
   140022edb:	mov    rbx,QWORD PTR [r11+0x30]
   140022edf:	mov    rbp,QWORD PTR [r11+0x38]
   140022ee3:	mov    rsi,QWORD PTR [r11+0x40]
   140022ee7:	mov    rsp,r11
   140022eea:	pop    r15
   140022eec:	pop    r14
   140022eee:	pop    r13
   140022ef0:	pop    r12
   140022ef2:	pop    rdi
   140022ef3:	ret    
   140022ef4:	mov    rax,rsp
   140022ef7:	mov    QWORD PTR [rax+0x8],rbx
   140022efb:	mov    QWORD PTR [rax+0x10],rbp
   140022eff:	mov    QWORD PTR [rax+0x18],rsi
   140022f03:	mov    QWORD PTR [rax+0x20],rdi
   140022f07:	push   r13
   140022f09:	push   r14
   140022f0b:	push   r15
   140022f0d:	sub    rsp,0x50
   140022f11:	mov    r14,rdx
   140022f14:	mov    rdx,QWORD PTR [rsp+0xa0]
   140022f1c:	mov    rdi,rcx
   140022f1f:	lea    rcx,[rax-0x38]
   140022f23:	mov    r13d,r9d
   140022f26:	movsxd rsi,r8d
   140022f29:	call   0x140019058
   140022f2e:	test   rdi,rdi
   140022f31:	je     0x140022f38
   140022f33:	test   r14,r14
   140022f36:	jne    0x140022f44
   140022f38:	call   0x14001b864
   140022f3d:	mov    ebx,0x16
   140022f42:	jmp    0x140022f5f
   140022f44:	xor    eax,eax
   140022f46:	test   esi,esi
   140022f48:	cmovg  eax,esi
   140022f4b:	add    eax,0x9
   140022f4e:	cdqe   
   140022f50:	cmp    r14,rax
   140022f53:	ja     0x140022f6b
   140022f55:	call   0x14001b864
   140022f5a:	mov    ebx,0x22
   140022f5f:	mov    DWORD PTR [rax],ebx
   140022f61:	call   0x14001ffb8
   140022f66:	jmp    0x1400230a3
   140022f6b:	cmp    BYTE PTR [rsp+0x98],0x0
   140022f73:	mov    rbp,QWORD PTR [rsp+0x90]
   140022f7b:	je     0x140022fb1
   140022f7d:	xor    ebx,ebx
   140022f7f:	cmp    DWORD PTR [rbp+0x0],0x2d
   140022f83:	sete   bl
   140022f86:	xor    r15d,r15d
   140022f89:	add    rbx,rdi
   140022f8c:	test   esi,esi
   140022f8e:	setg   r15b
   140022f92:	test   r15d,r15d
   140022f95:	je     0x140022fb1
   140022f97:	mov    rcx,rbx
   140022f9a:	call   0x14001a580
   140022f9f:	movsxd rcx,r15d
   140022fa2:	mov    rdx,rbx
   140022fa5:	lea    r8,[rax+0x1]
   140022fa9:	add    rcx,rbx
   140022fac:	call   0x140018a90
   140022fb1:	cmp    DWORD PTR [rbp+0x0],0x2d
   140022fb5:	mov    rdx,rdi
   140022fb8:	jne    0x140022fc1
   140022fba:	mov    BYTE PTR [rdi],0x2d
   140022fbd:	lea    rdx,[rdi+0x1]
   140022fc1:	test   esi,esi
   140022fc3:	jle    0x140022fe0
   140022fc5:	mov    al,BYTE PTR [rdx+0x1]
   140022fc8:	mov    BYTE PTR [rdx],al
   140022fca:	mov    rax,QWORD PTR [rsp+0x30]
   140022fcf:	inc    rdx
   140022fd2:	mov    rcx,QWORD PTR [rax+0xf0]
   140022fd9:	mov    rax,QWORD PTR [rcx]
   140022fdc:	mov    cl,BYTE PTR [rax]
   140022fde:	mov    BYTE PTR [rdx],cl
   140022fe0:	xor    ecx,ecx
   140022fe2:	lea    rbx,[rdx+rsi*1]
   140022fe6:	lea    r8,[rip+0x12f4f]        # 0x140035f3c
   140022fed:	cmp    BYTE PTR [rsp+0x98],cl
   140022ff4:	sete   cl
   140022ff7:	add    rbx,rcx
   140022ffa:	sub    rdi,rbx
   140022ffd:	cmp    r14,0xffffffffffffffff
   140023001:	mov    rcx,rbx
   140023004:	lea    rdx,[r14+rdi*1]
   140023008:	cmove  rdx,r14
   14002300c:	call   0x14001987c
   140023011:	test   eax,eax
   140023013:	jne    0x1400230d7
   140023019:	lea    rcx,[rbx+0x2]
   14002301d:	test   r13d,r13d
   140023020:	je     0x140023025
   140023022:	mov    BYTE PTR [rbx],0x45
   140023025:	mov    rax,QWORD PTR [rbp+0x10]
   140023029:	cmp    BYTE PTR [rax],0x30
   14002302c:	je     0x140023084
   14002302e:	mov    r8d,DWORD PTR [rbp+0x4]
   140023032:	dec    r8d
   140023035:	jns    0x14002303e
   140023037:	neg    r8d
   14002303a:	mov    BYTE PTR [rbx+0x1],0x2d
   14002303e:	cmp    r8d,0x64
   140023042:	jl     0x14002305f
   140023044:	mov    eax,0x51eb851f
   140023049:	imul   r8d
   14002304c:	sar    edx,0x5
   14002304f:	mov    eax,edx
   140023051:	shr    eax,0x1f
   140023054:	add    edx,eax
   140023056:	add    BYTE PTR [rbx+0x2],dl
   140023059:	imul   eax,edx,0xffffff9c
   14002305c:	add    r8d,eax
   14002305f:	cmp    r8d,0xa
   140023063:	jl     0x140023080
   140023065:	mov    eax,0x66666667
   14002306a:	imul   r8d
   14002306d:	sar    edx,0x2
   140023070:	mov    eax,edx
   140023072:	shr    eax,0x1f
   140023075:	add    edx,eax
   140023077:	add    BYTE PTR [rbx+0x3],dl
   14002307a:	imul   eax,edx,0xfffffff6
   14002307d:	add    r8d,eax
   140023080:	add    BYTE PTR [rbx+0x4],r8b
   140023084:	test   BYTE PTR [rip+0x21a95],0x1        # 0x140044b20
   14002308b:	je     0x1400230a1
   14002308d:	cmp    BYTE PTR [rcx],0x30
   140023090:	jne    0x1400230a1
   140023092:	lea    rdx,[rcx+0x1]
   140023096:	mov    r8d,0x3
   14002309c:	call   0x140018a90
   1400230a1:	xor    ebx,ebx
   1400230a3:	cmp    BYTE PTR [rsp+0x48],0x0
   1400230a8:	je     0x1400230b6
   1400230aa:	mov    rcx,QWORD PTR [rsp+0x40]
   1400230af:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400230b6:	lea    r11,[rsp+0x50]
   1400230bb:	mov    eax,ebx
   1400230bd:	mov    rbx,QWORD PTR [r11+0x20]
   1400230c1:	mov    rbp,QWORD PTR [r11+0x28]
   1400230c5:	mov    rsi,QWORD PTR [r11+0x30]
   1400230c9:	mov    rdi,QWORD PTR [r11+0x38]
   1400230cd:	mov    rsp,r11
   1400230d0:	pop    r15
   1400230d2:	pop    r14
   1400230d4:	pop    r13
   1400230d6:	ret    
   1400230d7:	and    QWORD PTR [rsp+0x20],0x0
   1400230dd:	xor    r9d,r9d
   1400230e0:	xor    r8d,r8d
   1400230e3:	xor    edx,edx
   1400230e5:	xor    ecx,ecx
   1400230e7:	call   0x14001ffd8
   1400230ec:	int3   
   1400230ed:	int3   
   1400230ee:	int3   
   1400230ef:	int3   
   1400230f0:	rex push rbx
   1400230f2:	push   rbp
   1400230f3:	push   rsi
   1400230f4:	push   rdi
   1400230f5:	sub    rsp,0x88
   1400230fc:	mov    rax,QWORD PTR [rip+0x1e54d]        # 0x140041650
   140023103:	xor    rax,rsp
   140023106:	mov    QWORD PTR [rsp+0x70],rax
   14002310b:	mov    rcx,QWORD PTR [rcx]
   14002310e:	mov    rbx,r8
   140023111:	mov    rdi,rdx
   140023114:	mov    esi,r9d
   140023117:	mov    ebp,0x16
   14002311c:	lea    r8,[rsp+0x58]
   140023121:	lea    rdx,[rsp+0x40]
   140023126:	mov    r9d,ebp
   140023129:	call   0x140028838
   14002312e:	test   rdi,rdi
   140023131:	jne    0x140023146
   140023133:	call   0x14001b864
   140023138:	mov    DWORD PTR [rax],ebp
   14002313a:	call   0x14001ffb8
   14002313f:	mov    eax,ebp
   140023141:	jmp    0x1400231ce
   140023146:	test   rbx,rbx
   140023149:	je     0x140023133
   14002314b:	or     rdx,0xffffffffffffffff
   14002314f:	cmp    rbx,rdx
   140023152:	je     0x14002316e
   140023154:	xor    eax,eax
   140023156:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002315b:	mov    rdx,rbx
   14002315e:	sete   al
   140023161:	sub    rdx,rax
   140023164:	xor    eax,eax
   140023166:	test   esi,esi
   140023168:	setg   al
   14002316b:	sub    rdx,rax
   14002316e:	xor    eax,eax
   140023170:	cmp    DWORD PTR [rsp+0x40],0x2d
   140023175:	lea    r8d,[rsi+0x1]
   140023179:	sete   al
   14002317c:	xor    ecx,ecx
   14002317e:	test   esi,esi
   140023180:	setg   cl
   140023183:	add    rax,rdi
   140023186:	lea    r9,[rsp+0x40]
   14002318b:	add    rcx,rax
   14002318e:	call   0x1400284fc
   140023193:	test   eax,eax
   140023195:	je     0x14002319c
   140023197:	mov    BYTE PTR [rdi],0x0
   14002319a:	jmp    0x1400231ce
   14002319c:	mov    rax,QWORD PTR [rsp+0xd8]
   1400231a4:	mov    r9d,DWORD PTR [rsp+0xd0]
   1400231ac:	mov    r8d,esi
   1400231af:	mov    QWORD PTR [rsp+0x30],rax
   1400231b4:	lea    rax,[rsp+0x40]
   1400231b9:	mov    rdx,rbx
   1400231bc:	mov    rcx,rdi
   1400231bf:	mov    BYTE PTR [rsp+0x28],0x0
   1400231c4:	mov    QWORD PTR [rsp+0x20],rax
   1400231c9:	call   0x140022ef4
   1400231ce:	mov    rcx,QWORD PTR [rsp+0x70]
   1400231d3:	xor    rcx,rsp
   1400231d6:	call   0x1400187d0
   1400231db:	add    rsp,0x88
   1400231e2:	pop    rdi
   1400231e3:	pop    rsi
   1400231e4:	pop    rbp
   1400231e5:	pop    rbx
   1400231e6:	ret    
   1400231e7:	int3   
   1400231e8:	mov    rax,rsp
   1400231eb:	mov    QWORD PTR [rax+0x8],rbx
   1400231ef:	mov    QWORD PTR [rax+0x10],rbp
   1400231f3:	mov    QWORD PTR [rax+0x18],rsi
   1400231f7:	mov    QWORD PTR [rax+0x20],rdi
   1400231fb:	push   r14
   1400231fd:	sub    rsp,0x40
   140023201:	mov    ebx,DWORD PTR [r9+0x4]
   140023205:	mov    rsi,rdx
   140023208:	mov    rdx,QWORD PTR [rsp+0x78]
   14002320d:	mov    rdi,rcx
   140023210:	lea    rcx,[rax-0x28]
   140023214:	mov    rbp,r9
   140023217:	dec    ebx
   140023219:	mov    r14d,r8d
   14002321c:	call   0x140019058
   140023221:	test   rdi,rdi
   140023224:	je     0x14002322b
   140023226:	test   rsi,rsi
   140023229:	jne    0x140023241
   14002322b:	call   0x14001b864
   140023230:	mov    ebx,0x16
   140023235:	mov    DWORD PTR [rax],ebx
   140023237:	call   0x14001ffb8
   14002323c:	jmp    0x140023319
   140023241:	cmp    BYTE PTR [rsp+0x70],0x0
   140023246:	je     0x140023262
   140023248:	cmp    ebx,r14d
   14002324b:	jne    0x140023262
   14002324d:	xor    eax,eax
   14002324f:	cmp    DWORD PTR [rbp+0x0],0x2d
   140023253:	movsxd rcx,ebx
   140023256:	sete   al
   140023259:	add    rax,rdi
   14002325c:	mov    WORD PTR [rcx+rax*1],0x30
   140023262:	cmp    DWORD PTR [rbp+0x0],0x2d
   140023266:	jne    0x14002326e
   140023268:	mov    BYTE PTR [rdi],0x2d
   14002326b:	inc    rdi
   14002326e:	cmp    DWORD PTR [rbp+0x4],0x0
   140023272:	jg     0x140023294
   140023274:	mov    rcx,rdi
   140023277:	call   0x14001a580
   14002327c:	lea    rcx,[rdi+0x1]
   140023280:	mov    rdx,rdi
   140023283:	lea    r8,[rax+0x1]
   140023287:	call   0x140018a90
   14002328c:	mov    BYTE PTR [rdi],0x30
   14002328f:	inc    rdi
   140023292:	jmp    0x14002329b
   140023294:	movsxd rax,DWORD PTR [rbp+0x4]
   140023298:	add    rdi,rax
   14002329b:	test   r14d,r14d
   14002329e:	jle    0x140023317
   1400232a0:	mov    rcx,rdi
   1400232a3:	lea    rsi,[rdi+0x1]
   1400232a7:	call   0x14001a580
   1400232ac:	mov    rdx,rdi
   1400232af:	mov    rcx,rsi
   1400232b2:	lea    r8,[rax+0x1]
   1400232b6:	call   0x140018a90
   1400232bb:	mov    rax,QWORD PTR [rsp+0x20]
   1400232c0:	mov    rcx,QWORD PTR [rax+0xf0]
   1400232c7:	mov    rax,QWORD PTR [rcx]
   1400232ca:	mov    cl,BYTE PTR [rax]
   1400232cc:	mov    BYTE PTR [rdi],cl
   1400232ce:	mov    ebx,DWORD PTR [rbp+0x4]
   1400232d1:	test   ebx,ebx
   1400232d3:	jns    0x140023317
   1400232d5:	neg    ebx
   1400232d7:	cmp    BYTE PTR [rsp+0x70],0x0
   1400232dc:	jne    0x1400232e9
   1400232de:	mov    eax,ebx
   1400232e0:	mov    ebx,r14d
   1400232e3:	cmp    r14d,eax
   1400232e6:	cmovge ebx,eax
   1400232e9:	test   ebx,ebx
   1400232eb:	je     0x140023307
   1400232ed:	mov    rcx,rsi
   1400232f0:	call   0x14001a580
   1400232f5:	movsxd rcx,ebx
   1400232f8:	mov    rdx,rsi
   1400232fb:	lea    r8,[rax+0x1]
   1400232ff:	add    rcx,rsi
   140023302:	call   0x140018a90
   140023307:	movsxd r8,ebx
   14002330a:	mov    edx,0x30
   14002330f:	mov    rcx,rsi
   140023312:	call   0x14001b980
   140023317:	xor    ebx,ebx
   140023319:	cmp    BYTE PTR [rsp+0x38],0x0
   14002331e:	je     0x14002332c
   140023320:	mov    rcx,QWORD PTR [rsp+0x30]
   140023325:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002332c:	mov    rbp,QWORD PTR [rsp+0x58]
   140023331:	mov    rsi,QWORD PTR [rsp+0x60]
   140023336:	mov    rdi,QWORD PTR [rsp+0x68]
   14002333b:	mov    eax,ebx
   14002333d:	mov    rbx,QWORD PTR [rsp+0x50]
   140023342:	add    rsp,0x40
   140023346:	pop    r14
   140023348:	ret    
   140023349:	int3   
   14002334a:	int3   
   14002334b:	int3   
   14002334c:	rex push rbx
   14002334e:	push   rbp
   14002334f:	push   rsi
   140023350:	push   rdi
   140023351:	sub    rsp,0x78
   140023355:	mov    rax,QWORD PTR [rip+0x1e2f4]        # 0x140041650
   14002335c:	xor    rax,rsp
   14002335f:	mov    QWORD PTR [rsp+0x60],rax
   140023364:	mov    rcx,QWORD PTR [rcx]
   140023367:	mov    rbx,r8
   14002336a:	mov    rdi,rdx
   14002336d:	mov    esi,r9d
   140023370:	mov    ebp,0x16
   140023375:	lea    r8,[rsp+0x48]
   14002337a:	lea    rdx,[rsp+0x30]
   14002337f:	mov    r9d,ebp
   140023382:	call   0x140028838
   140023387:	test   rdi,rdi
   14002338a:	jne    0x14002339c
   14002338c:	call   0x14001b864
   140023391:	mov    DWORD PTR [rax],ebp
   140023393:	call   0x14001ffb8
   140023398:	mov    eax,ebp
   14002339a:	jmp    0x140023407
   14002339c:	test   rbx,rbx
   14002339f:	je     0x14002338c
   1400233a1:	or     rdx,0xffffffffffffffff
   1400233a5:	cmp    rbx,rdx
   1400233a8:	je     0x1400233ba
   1400233aa:	xor    eax,eax
   1400233ac:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400233b1:	mov    rdx,rbx
   1400233b4:	sete   al
   1400233b7:	sub    rdx,rax
   1400233ba:	mov    r8d,DWORD PTR [rsp+0x34]
   1400233bf:	xor    ecx,ecx
   1400233c1:	lea    r9,[rsp+0x30]
   1400233c6:	add    r8d,esi
   1400233c9:	cmp    DWORD PTR [rsp+0x30],0x2d
   1400233ce:	sete   cl
   1400233d1:	add    rcx,rdi
   1400233d4:	call   0x1400284fc
   1400233d9:	test   eax,eax
   1400233db:	je     0x1400233e2
   1400233dd:	mov    BYTE PTR [rdi],0x0
   1400233e0:	jmp    0x140023407
   1400233e2:	mov    rax,QWORD PTR [rsp+0xc0]
   1400233ea:	lea    r9,[rsp+0x30]
   1400233ef:	mov    r8d,esi
   1400233f2:	mov    QWORD PTR [rsp+0x28],rax
   1400233f7:	mov    rdx,rbx
   1400233fa:	mov    rcx,rdi
   1400233fd:	mov    BYTE PTR [rsp+0x20],0x0
   140023402:	call   0x1400231e8
   140023407:	mov    rcx,QWORD PTR [rsp+0x60]
   14002340c:	xor    rcx,rsp
   14002340f:	call   0x1400187d0
   140023414:	add    rsp,0x78
   140023418:	pop    rdi
   140023419:	pop    rsi
   14002341a:	pop    rbp
   14002341b:	pop    rbx
   14002341c:	ret    
   14002341d:	int3   
   14002341e:	int3   
   14002341f:	int3   
   140023420:	rex push rbx
   140023422:	push   rbp
   140023423:	push   rsi
   140023424:	push   rdi
   140023425:	push   r14
   140023427:	sub    rsp,0x80
   14002342e:	mov    rax,QWORD PTR [rip+0x1e21b]        # 0x140041650
   140023435:	xor    rax,rsp
   140023438:	mov    QWORD PTR [rsp+0x70],rax
   14002343d:	mov    rcx,QWORD PTR [rcx]
   140023440:	mov    rdi,r8
   140023443:	mov    rsi,rdx
   140023446:	mov    ebp,r9d
   140023449:	mov    ebx,0x16
   14002344e:	lea    r8,[rsp+0x58]
   140023453:	lea    rdx,[rsp+0x40]
   140023458:	mov    r9d,ebx
   14002345b:	call   0x140028838
   140023460:	test   rsi,rsi
   140023463:	jne    0x140023478
   140023465:	call   0x14001b864
   14002346a:	mov    DWORD PTR [rax],ebx
   14002346c:	call   0x14001ffb8
   140023471:	mov    eax,ebx
   140023473:	jmp    0x140023539
   140023478:	test   rdi,rdi
   14002347b:	je     0x140023465
   14002347d:	mov    r14d,DWORD PTR [rsp+0x44]
   140023482:	xor    eax,eax
   140023484:	dec    r14d
   140023487:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002348c:	sete   al
   14002348f:	or     rdx,0xffffffffffffffff
   140023493:	lea    rbx,[rax+rsi*1]
   140023497:	cmp    rdi,rdx
   14002349a:	je     0x1400234a2
   14002349c:	mov    rdx,rdi
   14002349f:	sub    rdx,rax
   1400234a2:	lea    r9,[rsp+0x40]
   1400234a7:	mov    r8d,ebp
   1400234aa:	mov    rcx,rbx
   1400234ad:	call   0x1400284fc
   1400234b2:	test   eax,eax
   1400234b4:	je     0x1400234bb
   1400234b6:	mov    BYTE PTR [rsi],0x0
   1400234b9:	jmp    0x140023539
   1400234bb:	mov    eax,DWORD PTR [rsp+0x44]
   1400234bf:	dec    eax
   1400234c1:	cmp    r14d,eax
   1400234c4:	setl   cl
   1400234c7:	cmp    eax,0xfffffffc
   1400234ca:	jl     0x140023507
   1400234cc:	cmp    eax,ebp
   1400234ce:	jge    0x140023507
   1400234d0:	test   cl,cl
   1400234d2:	je     0x1400234e0
   1400234d4:	mov    al,BYTE PTR [rbx]
   1400234d6:	inc    rbx
   1400234d9:	test   al,al
   1400234db:	jne    0x1400234d4
   1400234dd:	mov    BYTE PTR [rbx-0x2],al
   1400234e0:	mov    rax,QWORD PTR [rsp+0xd8]
   1400234e8:	lea    r9,[rsp+0x40]
   1400234ed:	mov    r8d,ebp
   1400234f0:	mov    QWORD PTR [rsp+0x28],rax
   1400234f5:	mov    rdx,rdi
   1400234f8:	mov    rcx,rsi
   1400234fb:	mov    BYTE PTR [rsp+0x20],0x1
   140023500:	call   0x1400231e8
   140023505:	jmp    0x140023539
   140023507:	mov    rax,QWORD PTR [rsp+0xd8]
   14002350f:	mov    r9d,DWORD PTR [rsp+0xd0]
   140023517:	mov    r8d,ebp
   14002351a:	mov    QWORD PTR [rsp+0x30],rax
   14002351f:	lea    rax,[rsp+0x40]
   140023524:	mov    rdx,rdi
   140023527:	mov    rcx,rsi
   14002352a:	mov    BYTE PTR [rsp+0x28],0x1
   14002352f:	mov    QWORD PTR [rsp+0x20],rax
   140023534:	call   0x140022ef4
   140023539:	mov    rcx,QWORD PTR [rsp+0x70]
   14002353e:	xor    rcx,rsp
   140023541:	call   0x1400187d0
   140023546:	add    rsp,0x80
   14002354d:	pop    r14
   14002354f:	pop    rdi
   140023550:	pop    rsi
   140023551:	pop    rbp
   140023552:	pop    rbx
   140023553:	ret    
   140023554:	xor    edx,edx
   140023556:	jmp    0x14002355c
   14002355b:	int3   
   14002355c:	rex push rbx
   14002355e:	sub    rsp,0x40
   140023562:	mov    rbx,rcx
   140023565:	lea    rcx,[rsp+0x20]
   14002356a:	call   0x140019058
   14002356f:	mov    cl,BYTE PTR [rbx]
   140023571:	mov    r8,QWORD PTR [rsp+0x20]
   140023576:	test   cl,cl
   140023578:	je     0x140023593
   14002357a:	mov    rax,QWORD PTR [r8+0xf0]
   140023581:	mov    rdx,QWORD PTR [rax]
   140023584:	mov    al,BYTE PTR [rdx]
   140023586:	cmp    cl,al
   140023588:	je     0x140023593
   14002358a:	inc    rbx
   14002358d:	mov    cl,BYTE PTR [rbx]
   14002358f:	test   cl,cl
   140023591:	jne    0x140023586
   140023593:	mov    al,BYTE PTR [rbx]
   140023595:	inc    rbx
   140023598:	test   al,al
   14002359a:	je     0x1400235d9
   14002359c:	jmp    0x1400235a7
   14002359e:	sub    al,0x45
   1400235a0:	test   al,0xdf
   1400235a2:	je     0x1400235ad
   1400235a4:	inc    rbx
   1400235a7:	mov    al,BYTE PTR [rbx]
   1400235a9:	test   al,al
   1400235ab:	jne    0x14002359e
   1400235ad:	mov    rdx,rbx
   1400235b0:	dec    rbx
   1400235b3:	cmp    BYTE PTR [rbx],0x30
   1400235b6:	je     0x1400235b0
   1400235b8:	mov    rax,QWORD PTR [r8+0xf0]
   1400235bf:	mov    rcx,QWORD PTR [rax]
   1400235c2:	mov    al,BYTE PTR [rcx]
   1400235c4:	cmp    BYTE PTR [rbx],al
   1400235c6:	jne    0x1400235cb
   1400235c8:	dec    rbx
   1400235cb:	mov    al,BYTE PTR [rdx]
   1400235cd:	inc    rbx
   1400235d0:	inc    rdx
   1400235d3:	mov    BYTE PTR [rbx],al
   1400235d5:	test   al,al
   1400235d7:	jne    0x1400235cb
   1400235d9:	cmp    BYTE PTR [rsp+0x38],0x0
   1400235de:	je     0x1400235ec
   1400235e0:	mov    rax,QWORD PTR [rsp+0x30]
   1400235e5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400235ec:	add    rsp,0x40
   1400235f0:	pop    rbx
   1400235f1:	ret    
   1400235f2:	int3   
   1400235f3:	int3   
   1400235f4:	xor    r9d,r9d
   1400235f7:	jmp    0x1400235fc
   1400235fc:	rex push rbx
   1400235fe:	sub    rsp,0x30
   140023602:	mov    rax,r8
   140023605:	mov    rbx,rdx
   140023608:	mov    r8,r9
   14002360b:	mov    rdx,rax
   14002360e:	test   ecx,ecx
   140023610:	je     0x140023626
   140023612:	lea    rcx,[rsp+0x20]
   140023617:	call   0x140028698
   14002361c:	mov    rax,QWORD PTR [rsp+0x20]
   140023621:	mov    QWORD PTR [rbx],rax
   140023624:	jmp    0x140023636
   140023626:	lea    rcx,[rsp+0x40]
   14002362b:	call   0x140028760
   140023630:	mov    eax,DWORD PTR [rsp+0x40]
   140023634:	mov    DWORD PTR [rbx],eax
   140023636:	add    rsp,0x30
   14002363a:	pop    rbx
   14002363b:	ret    
   14002363c:	xor    edx,edx
   14002363e:	jmp    0x140023644
   140023643:	int3   
   140023644:	rex push rbx
   140023646:	sub    rsp,0x40
   14002364a:	mov    rbx,rcx
   14002364d:	lea    rcx,[rsp+0x20]
   140023652:	call   0x140019058
   140023657:	movsx  ecx,BYTE PTR [rbx]
   14002365a:	call   0x14001d9a0
   14002365f:	cmp    eax,0x65
   140023662:	je     0x140023673
   140023664:	inc    rbx
   140023667:	movzx  ecx,BYTE PTR [rbx]
   14002366a:	call   0x14001bc68
   14002366f:	test   eax,eax
   140023671:	jne    0x140023664
   140023673:	movsx  ecx,BYTE PTR [rbx]
   140023676:	call   0x14001d9a0
   14002367b:	cmp    eax,0x78
   14002367e:	jne    0x140023684
   140023680:	add    rbx,0x2
   140023684:	mov    rax,QWORD PTR [rsp+0x20]
   140023689:	mov    dl,BYTE PTR [rbx]
   14002368b:	mov    rcx,QWORD PTR [rax+0xf0]
   140023692:	mov    rax,QWORD PTR [rcx]
   140023695:	mov    cl,BYTE PTR [rax]
   140023697:	mov    BYTE PTR [rbx],cl
   140023699:	inc    rbx
   14002369c:	mov    al,BYTE PTR [rbx]
   14002369e:	mov    BYTE PTR [rbx],dl
   1400236a0:	mov    dl,al
   1400236a2:	mov    al,BYTE PTR [rbx]
   1400236a4:	inc    rbx
   1400236a7:	test   al,al
   1400236a9:	jne    0x14002369c
   1400236ab:	cmp    BYTE PTR [rsp+0x38],al
   1400236af:	je     0x1400236bd
   1400236b1:	mov    rax,QWORD PTR [rsp+0x30]
   1400236b6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400236bd:	add    rsp,0x40
   1400236c1:	pop    rbx
   1400236c2:	ret    
   1400236c3:	int3   
   1400236c4:	movsd  xmm0,QWORD PTR [rcx]
   1400236c8:	xor    eax,eax
   1400236ca:	comisd xmm0,QWORD PTR [rip+0xd4a6]        # 0x140030b78
   1400236d2:	setae  al
   1400236d5:	ret    
   1400236d6:	int3   
   1400236d7:	int3   
   1400236d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400236dd:	push   rdi
   1400236de:	sub    rsp,0x20
   1400236e2:	xor    edi,edi
   1400236e4:	lea    rbx,[rip+0x1eb95]        # 0x140042280
   1400236eb:	mov    rcx,QWORD PTR [rbx]
   1400236ee:	call   QWORD PTR [rip+0xbb2c]        # 0x14002f220
   1400236f4:	inc    edi
   1400236f6:	mov    QWORD PTR [rbx],rax
   1400236f9:	movsxd rax,edi
   1400236fc:	lea    rbx,[rbx+0x8]
   140023700:	cmp    rax,0xa
   140023704:	jb     0x1400236eb
   140023706:	mov    rbx,QWORD PTR [rsp+0x30]
   14002370b:	add    rsp,0x20
   14002370f:	pop    rdi
   140023710:	ret    
   140023711:	int3   
   140023712:	int3   
   140023713:	int3   
   140023714:	rex push rdi
   140023716:	sub    rsp,0x20
   14002371a:	lea    rdi,[rip+0x1e77f]        # 0x140041ea0
   140023721:	cmp    QWORD PTR [rip+0x1e768],rdi        # 0x140041e90
   140023728:	je     0x140023755
   14002372a:	mov    ecx,0xc
   14002372f:	call   0x14001b118
   140023734:	nop
   140023735:	mov    rdx,rdi
   140023738:	lea    rcx,[rip+0x1e751]        # 0x140041e90
   14002373f:	call   0x14001f4bc
   140023744:	mov    QWORD PTR [rip+0x1e745],rax        # 0x140041e90
   14002374b:	mov    ecx,0xc
   140023750:	call   0x14001b308
   140023755:	add    rsp,0x20
   140023759:	pop    rdi
   14002375a:	ret    
   14002375b:	int3   
   14002375c:	mov    QWORD PTR [rsp+0x8],rbx
   140023761:	mov    QWORD PTR [rsp+0x10],rsi
   140023766:	push   rdi
   140023767:	sub    rsp,0x30
   14002376b:	mov    rdi,rcx
   14002376e:	test   rcx,rcx
   140023771:	jne    0x140023785
   140023773:	xor    eax,eax
   140023775:	mov    rbx,QWORD PTR [rsp+0x40]
   14002377a:	mov    rsi,QWORD PTR [rsp+0x48]
   14002377f:	add    rsp,0x30
   140023783:	pop    rdi
   140023784:	ret    
   140023785:	mov    edx,0x55
   14002378a:	call   0x1400250a0
   14002378f:	mov    rsi,rax
   140023792:	cmp    rax,0x55
   140023796:	jae    0x140023773
   140023798:	lea    rcx,[rax*2+0x2]
   1400237a0:	call   0x14001c25c
   1400237a5:	mov    rbx,rax
   1400237a8:	test   rax,rax
   1400237ab:	je     0x140023773
   1400237ad:	lea    rdx,[rsi+0x1]
   1400237b1:	mov    r8,rdi
   1400237b4:	mov    rcx,rax
   1400237b7:	mov    r9,rdx
   1400237ba:	call   0x14001995c
   1400237bf:	test   eax,eax
   1400237c1:	jne    0x1400237c8
   1400237c3:	mov    rax,rbx
   1400237c6:	jmp    0x140023775
   1400237c8:	and    QWORD PTR [rsp+0x20],0x0
   1400237ce:	xor    r9d,r9d
   1400237d1:	xor    r8d,r8d
   1400237d4:	xor    edx,edx
   1400237d6:	xor    ecx,ecx
   1400237d8:	call   0x14001ffd8
   1400237dd:	int3   
   1400237de:	int3   
   1400237df:	int3   
   1400237e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400237e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400237ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400237ef:	push   rdi
   1400237f0:	sub    rsp,0x30
   1400237f4:	mov    rbx,r8
   1400237f7:	mov    rdi,rdx
   1400237fa:	mov    rsi,rcx
   1400237fd:	call   0x140024e60
   140023802:	xor    ebp,ebp
   140023804:	test   eax,eax
   140023806:	jne    0x14002386d
   140023808:	lea    rax,[rbx+0x80]
   14002380f:	cmp    WORD PTR [rax],bp
   140023812:	je     0x14002382f
   140023814:	lea    r9,[rip+0x128e5]        # 0x140036100
   14002381b:	lea    r8d,[rbp+0x2]
   14002381f:	mov    rdx,rdi
   140023822:	mov    rcx,rsi
   140023825:	mov    QWORD PTR [rsp+0x20],rax
   14002382a:	call   0x140023ecc
   14002382f:	lea    rax,[rbx+0x100]
   140023836:	cmp    WORD PTR [rax],bp
   140023839:	je     0x140023858
   14002383b:	lea    r9,[rip+0x128c2]        # 0x140036104
   140023842:	mov    r8d,0x2
   140023848:	mov    rdx,rdi
   14002384b:	mov    rcx,rsi
   14002384e:	mov    QWORD PTR [rsp+0x20],rax
   140023853:	call   0x140023ecc
   140023858:	mov    rbx,QWORD PTR [rsp+0x40]
   14002385d:	mov    rbp,QWORD PTR [rsp+0x48]
   140023862:	mov    rsi,QWORD PTR [rsp+0x50]
   140023867:	add    rsp,0x30
   14002386b:	pop    rdi
   14002386c:	ret    
   14002386d:	xor    r9d,r9d
   140023870:	xor    r8d,r8d
   140023873:	xor    edx,edx
   140023875:	xor    ecx,ecx
   140023877:	mov    QWORD PTR [rsp+0x20],rbp
   14002387c:	call   0x14001ffd8
   140023881:	int3   
   140023882:	int3   
   140023883:	int3   
   140023884:	mov    QWORD PTR [rsp+0x8],rbx
   140023889:	mov    QWORD PTR [rsp+0x10],rbp
   14002388e:	mov    QWORD PTR [rsp+0x18],rsi
   140023893:	push   rdi
   140023894:	push   r14
   140023896:	push   r15
   140023898:	sub    rsp,0x30
   14002389c:	mov    rbx,rdx
   14002389f:	mov    r8d,0x1ca
   1400238a5:	xor    edx,edx
   1400238a7:	mov    rsi,rcx
   1400238aa:	call   0x14001b980
   1400238af:	xor    r15d,r15d
   1400238b2:	cmp    WORD PTR [rbx],r15w
   1400238b6:	jne    0x1400238bf
   1400238b8:	xor    eax,eax
   1400238ba:	jmp    0x1400239cc
   1400238bf:	cmp    WORD PTR [rbx],0x2e
   1400238c3:	jne    0x1400238f6
   1400238c5:	lea    r8,[rbx+0x2]
   1400238c9:	cmp    WORD PTR [r8],r15w
   1400238cd:	je     0x1400238f6
   1400238cf:	mov    edx,0x10
   1400238d4:	lea    rcx,[rsi+0x100]
   1400238db:	lea    r9d,[rdx-0x1]
   1400238df:	call   0x14001995c
   1400238e4:	test   eax,eax
   1400238e6:	jne    0x1400239e5
   1400238ec:	mov    WORD PTR [rsi+0x11e],r15w
   1400238f4:	jmp    0x1400238b8
   1400238f6:	mov    ebp,r15d
   1400238f9:	lea    rdx,[rip+0x127f8]        # 0x1400360f8
   140023900:	mov    rcx,rbx
   140023903:	call   0x140028938
   140023908:	test   rax,rax
   14002390b:	je     0x1400239c9
   140023911:	lea    r14,[rbx+rax*2]
   140023915:	movzx  edi,WORD PTR [r14]
   140023919:	test   ebp,ebp
   14002391b:	jne    0x14002394b
   14002391d:	cmp    rax,0x40
   140023921:	jae    0x1400239c9
   140023927:	cmp    di,0x2e
   14002392b:	je     0x1400239c9
   140023931:	lea    edx,[rbp+0x40]
   140023934:	mov    r9,rax
   140023937:	mov    r8,rbx
   14002393a:	mov    rcx,rsi
   14002393d:	call   0x14001995c
   140023942:	test   eax,eax
   140023944:	je     0x1400239ab
   140023946:	jmp    0x1400239fa
   14002394b:	cmp    ebp,0x1
   14002394e:	jne    0x14002397a
   140023950:	cmp    rax,0x40
   140023954:	jae    0x1400239c9
   140023956:	cmp    di,0x5f
   14002395a:	je     0x1400239c9
   14002395c:	lea    rcx,[rsi+0x80]
   140023963:	lea    edx,[rbp+0x3f]
   140023966:	mov    r9,rax
   140023969:	mov    r8,rbx
   14002396c:	call   0x14001995c
   140023971:	test   eax,eax
   140023973:	je     0x1400239ab
   140023975:	jmp    0x140023a0f
   14002397a:	cmp    ebp,0x2
   14002397d:	jne    0x1400239c9
   14002397f:	cmp    rax,0x10
   140023983:	jae    0x1400239c9
   140023985:	test   di,di
   140023988:	je     0x140023990
   14002398a:	cmp    di,0x2c
   14002398e:	jne    0x1400239c9
   140023990:	lea    rcx,[rsi+0x100]
   140023997:	mov    r9,rax
   14002399a:	mov    r8,rbx
   14002399d:	mov    edx,0x10
   1400239a2:	call   0x14001995c
   1400239a7:	test   eax,eax
   1400239a9:	jne    0x140023a24
   1400239ab:	cmp    di,0x2c
   1400239af:	je     0x1400238b8
   1400239b5:	test   di,di
   1400239b8:	je     0x1400238b8
   1400239be:	lea    rbx,[r14+0x2]
   1400239c2:	inc    ebp
   1400239c4:	jmp    0x1400238f9
   1400239c9:	or     eax,0xffffffff
   1400239cc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400239d1:	mov    rbp,QWORD PTR [rsp+0x58]
   1400239d6:	mov    rsi,QWORD PTR [rsp+0x60]
   1400239db:	add    rsp,0x30
   1400239df:	pop    r15
   1400239e1:	pop    r14
   1400239e3:	pop    rdi
   1400239e4:	ret    
   1400239e5:	xor    r9d,r9d
   1400239e8:	xor    r8d,r8d
   1400239eb:	xor    edx,edx
   1400239ed:	xor    ecx,ecx
   1400239ef:	mov    QWORD PTR [rsp+0x20],r15
   1400239f4:	call   0x14001ffd8
   1400239f9:	int3   
   1400239fa:	xor    r9d,r9d
   1400239fd:	xor    r8d,r8d
   140023a00:	xor    edx,edx
   140023a02:	xor    ecx,ecx
   140023a04:	mov    QWORD PTR [rsp+0x20],r15
   140023a09:	call   0x14001ffd8
   140023a0e:	int3   
   140023a0f:	xor    r9d,r9d
   140023a12:	xor    r8d,r8d
   140023a15:	xor    edx,edx
   140023a17:	xor    ecx,ecx
   140023a19:	mov    QWORD PTR [rsp+0x20],r15
   140023a1e:	call   0x14001ffd8
   140023a23:	int3   
   140023a24:	xor    r9d,r9d
   140023a27:	xor    r8d,r8d
   140023a2a:	xor    edx,edx
   140023a2c:	xor    ecx,ecx
   140023a2e:	mov    QWORD PTR [rsp+0x20],r15
   140023a33:	call   0x14001ffd8
   140023a38:	int3   
   140023a39:	int3   
   140023a3a:	int3   
   140023a3b:	int3   
   140023a3c:	sub    rsp,0x28
   140023a40:	test   rdx,rdx
   140023a43:	je     0x140023af3
   140023a49:	test   rcx,rcx
   140023a4c:	je     0x140023af3
   140023a52:	cmp    rcx,rdx
   140023a55:	je     0x140023af3
   140023a5b:	mov    eax,0x2
   140023a60:	mov    r8,rcx
   140023a63:	lea    r9d,[rax+0x7e]
   140023a67:	movups xmm0,XMMWORD PTR [rdx]
   140023a6a:	movups XMMWORD PTR [r8],xmm0
   140023a6e:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140023a72:	movups XMMWORD PTR [r8+0x10],xmm1
   140023a77:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140023a7b:	movups XMMWORD PTR [r8+0x20],xmm0
   140023a80:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140023a84:	movups XMMWORD PTR [r8+0x30],xmm1
   140023a89:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140023a8d:	movups XMMWORD PTR [r8+0x40],xmm0
   140023a92:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140023a96:	movups XMMWORD PTR [r8+0x50],xmm1
   140023a9b:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140023a9f:	movups XMMWORD PTR [r8+0x60],xmm0
   140023aa4:	movups xmm1,XMMWORD PTR [rdx+0x70]
   140023aa8:	add    r8,r9
   140023aab:	add    rdx,r9
   140023aae:	movups XMMWORD PTR [r8-0x10],xmm1
   140023ab3:	dec    rax
   140023ab6:	jne    0x140023a67
   140023ab8:	movups xmm0,XMMWORD PTR [rdx]
   140023abb:	movups XMMWORD PTR [r8],xmm0
   140023abf:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140023ac3:	movups XMMWORD PTR [r8+0x10],xmm1
   140023ac8:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140023acc:	movups XMMWORD PTR [r8+0x20],xmm0
   140023ad1:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140023ad5:	movups XMMWORD PTR [r8+0x30],xmm1
   140023ada:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140023ade:	movups XMMWORD PTR [r8+0x40],xmm0
   140023ae3:	mov    rax,QWORD PTR [rdx+0x50]
   140023ae7:	mov    QWORD PTR [r8+0x50],rax
   140023aeb:	and    DWORD PTR [rcx],0x0
   140023aee:	call   0x14001f17c
   140023af3:	add    rsp,0x28
   140023af7:	ret    
   140023af8:	rex push rbp
   140023afa:	push   rbx
   140023afb:	push   rsi
   140023afc:	push   rdi
   140023afd:	push   r12
   140023aff:	push   r13
   140023b01:	push   r14
   140023b03:	push   r15
   140023b05:	lea    rbp,[rsp-0x148]
   140023b0d:	sub    rsp,0x248
   140023b14:	mov    rax,QWORD PTR [rip+0x1db35]        # 0x140041650
   140023b1b:	xor    rax,rsp
   140023b1e:	mov    QWORD PTR [rbp+0x130],rax
   140023b25:	mov    rdi,QWORD PTR [rbp+0x1b8]
   140023b2c:	mov    rsi,r9
   140023b2f:	mov    r13,r8
   140023b32:	mov    QWORD PTR [rsp+0x50],r8
   140023b37:	mov    r12,rdx
   140023b3a:	mov    rbx,rcx
   140023b3d:	call   0x14001ef6c
   140023b42:	lea    rcx,[rax+0x160]
   140023b49:	lea    r15,[rax+0x164]
   140023b50:	lea    r14,[rax+0x26a]
   140023b57:	mov    QWORD PTR [rsp+0x38],rcx
   140023b5c:	xor    ecx,ecx
   140023b5e:	mov    QWORD PTR [rsp+0x40],r15
   140023b63:	mov    DWORD PTR [rsp+0x30],ecx
   140023b67:	test   rbx,rbx
   140023b6a:	jne    0x140023b91
   140023b6c:	xor    eax,eax
   140023b6e:	mov    rcx,QWORD PTR [rbp+0x130]
   140023b75:	xor    rcx,rsp
   140023b78:	call   0x1400187d0
   140023b7d:	add    rsp,0x248
   140023b84:	pop    r15
   140023b86:	pop    r14
   140023b88:	pop    r13
   140023b8a:	pop    r12
   140023b8c:	pop    rdi
   140023b8d:	pop    rsi
   140023b8e:	pop    rbx
   140023b8f:	pop    rbp
   140023b90:	ret    
   140023b91:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140023b98:	add    rax,0x398
   140023b9e:	mov    r9d,0x55
   140023ba4:	mov    r8,rax
   140023ba7:	mov    rcx,rsi
   140023baa:	mov    QWORD PTR [rsp+0x48],rax
   140023baf:	call   0x14001995c
   140023bb4:	xor    ecx,ecx
   140023bb6:	test   eax,eax
   140023bb8:	jne    0x140023eb7
   140023bbe:	cmp    WORD PTR [rbx],0x43
   140023bc2:	jne    0x140023bf5
   140023bc4:	cmp    WORD PTR [rbx+0x2],cx
   140023bc8:	jne    0x140023bf5
   140023bca:	lea    r8,[rip+0x1251f]        # 0x1400360f0
   140023bd1:	mov    rdx,r13
   140023bd4:	mov    rcx,r12
   140023bd7:	call   0x140024e60
   140023bdc:	xor    ecx,ecx
   140023bde:	test   eax,eax
   140023be0:	jne    0x140023e15
   140023be6:	test   rdi,rdi
   140023be9:	je     0x140023bed
   140023beb:	mov    DWORD PTR [rdi],ecx
   140023bed:	mov    rax,r12
   140023bf0:	jmp    0x140023b6e
   140023bf5:	mov    rcx,rbx
   140023bf8:	call   0x14001e19c
   140023bfd:	mov    r13,rax
   140023c00:	cmp    rax,0x83
   140023c06:	jae    0x140023c2e
   140023c08:	mov    rdx,rbx
   140023c0b:	mov    rcx,r14
   140023c0e:	call   0x1400288fc
   140023c13:	test   eax,eax
   140023c15:	je     0x140023db2
   140023c1b:	mov    rdx,rbx
   140023c1e:	mov    rcx,r15
   140023c21:	call   0x1400288fc
   140023c26:	test   eax,eax
   140023c28:	je     0x140023db2
   140023c2e:	mov    rax,QWORD PTR [rip+0x2207b]        # 0x140045cb0
   140023c35:	lea    rcx,[rsp+0x60]
   140023c3a:	mov    rdx,rbx
   140023c3d:	xor    rax,QWORD PTR [rip+0x1da0c]        # 0x140041650
   140023c44:	mov    eax,0x0
   140023c49:	lea    r15d,[rax+0x1]
   140023c4d:	cmovne r15d,eax
   140023c51:	call   0x140023884
   140023c56:	test   eax,eax
   140023c58:	jne    0x140023cd5
   140023c5a:	test   r15d,r15d
   140023c5d:	mov    r15,QWORD PTR [rsp+0x38]
   140023c62:	lea    r8,[rsp+0x60]
   140023c67:	mov    rdx,r15
   140023c6a:	lea    rcx,[rsp+0x60]
   140023c6f:	je     0x140023c78
   140023c71:	call   0x140029acc
   140023c76:	jmp    0x140023c7d
   140023c78:	call   0x14002909c
   140023c7d:	test   eax,eax
   140023c7f:	je     0x140023cda
   140023c81:	mov    r15d,0x83
   140023c87:	lea    r8,[rsp+0x60]
   140023c8c:	mov    rcx,r14
   140023c8f:	mov    edx,r15d
   140023c92:	call   0x1400237e0
   140023c97:	test   rsi,rsi
   140023c9a:	je     0x140023da6
   140023ca0:	lea    rcx,[rbp+0x80]
   140023ca7:	call   0x14001e19c
   140023cac:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140023cb3:	lea    r8,[rbp+0x80]
   140023cba:	lea    r9,[rax+0x1]
   140023cbe:	mov    rcx,rsi
   140023cc1:	call   0x14001995c
   140023cc6:	xor    esi,esi
   140023cc8:	test   eax,eax
   140023cca:	je     0x140023d7f
   140023cd0:	jmp    0x140023e28
   140023cd5:	mov    r15,QWORD PTR [rsp+0x38]
   140023cda:	mov    rcx,rbx
   140023cdd:	call   0x14001e530
   140023ce2:	test   eax,eax
   140023ce4:	je     0x140023de8
   140023cea:	lea    r8,[rsp+0x30]
   140023cef:	mov    r9d,0x2
   140023cf5:	mov    edx,0x20001004
   140023cfa:	mov    rcx,rbx
   140023cfd:	call   0x14001e49c
   140023d02:	test   eax,eax
   140023d04:	je     0x140023d0e
   140023d06:	mov    eax,DWORD PTR [rsp+0x30]
   140023d0a:	test   eax,eax
   140023d0c:	jne    0x140023d18
   140023d0e:	call   QWORD PTR [rip+0xb624]        # 0x14002f338
   140023d14:	mov    DWORD PTR [rsp+0x30],eax
   140023d18:	movzx  eax,ax
   140023d1b:	mov    r8,rbx
   140023d1e:	mov    edx,0x83
   140023d23:	mov    DWORD PTR [r15],eax
   140023d26:	lea    r15,[r13+0x1]
   140023d2a:	mov    rcx,r14
   140023d2d:	mov    r9,r15
   140023d30:	call   0x14001995c
   140023d35:	xor    ecx,ecx
   140023d37:	test   eax,eax
   140023d39:	jne    0x140023e91
   140023d3f:	mov    rdx,QWORD PTR [rbp+0x1b0]
   140023d46:	mov    r9,r15
   140023d49:	mov    r8,rbx
   140023d4c:	mov    rcx,rsi
   140023d4f:	call   0x14001995c
   140023d54:	xor    esi,esi
   140023d56:	test   eax,eax
   140023d58:	jne    0x140023e7c
   140023d5e:	mov    rcx,QWORD PTR [rsp+0x48]
   140023d63:	lea    edx,[rsi+0x55]
   140023d66:	mov    r9,r15
   140023d69:	mov    r8,rbx
   140023d6c:	call   0x14001995c
   140023d71:	test   eax,eax
   140023d73:	jne    0x140023e67
   140023d79:	mov    r15d,0x83
   140023d7f:	cmp    WORD PTR [rbx],si
   140023d82:	je     0x140023da8
   140023d84:	cmp    r13,r15
   140023d87:	jae    0x140023da8
   140023d89:	mov    rcx,QWORD PTR [rsp+0x40]
   140023d8e:	lea    r9,[r13+0x1]
   140023d92:	mov    r8,rbx
   140023d95:	mov    rdx,r15
   140023d98:	call   0x14001995c
   140023d9d:	test   eax,eax
   140023d9f:	je     0x140023db4
   140023da1:	jmp    0x140023e3d
   140023da6:	jmp    0x140023d7f
   140023da8:	mov    rax,QWORD PTR [rsp+0x40]
   140023dad:	mov    WORD PTR [rax],si
   140023db0:	jmp    0x140023db4
   140023db2:	xor    esi,esi
   140023db4:	test   rdi,rdi
   140023db7:	je     0x140023dcc
   140023db9:	mov    rdx,QWORD PTR [rsp+0x38]
   140023dbe:	mov    r8d,0x4
   140023dc4:	mov    rcx,rdi
   140023dc7:	call   0x140018a90
   140023dcc:	mov    rdx,QWORD PTR [rsp+0x50]
   140023dd1:	mov    r8,r14
   140023dd4:	mov    rcx,r12
   140023dd7:	call   0x140024e60
   140023ddc:	test   eax,eax
   140023dde:	jne    0x140023e52
   140023de0:	mov    rax,r14
   140023de3:	jmp    0x140023b6e
   140023de8:	mov    rcx,rsi
   140023deb:	call   0x14001e19c
   140023df0:	mov    rcx,QWORD PTR [rsp+0x48]
   140023df5:	mov    r8,rsi
   140023df8:	lea    r9,[rax+0x1]
   140023dfc:	mov    edx,0x55
   140023e01:	call   0x14001995c
   140023e06:	xor    ecx,ecx
   140023e08:	test   eax,eax
   140023e0a:	je     0x140023b6c
   140023e10:	jmp    0x140023ea4
   140023e15:	xor    r9d,r9d
   140023e18:	xor    r8d,r8d
   140023e1b:	xor    edx,edx
   140023e1d:	mov    QWORD PTR [rsp+0x20],rcx
   140023e22:	call   0x14001ffd8
   140023e27:	int3   
   140023e28:	xor    r9d,r9d
   140023e2b:	xor    r8d,r8d
   140023e2e:	xor    edx,edx
   140023e30:	xor    ecx,ecx
   140023e32:	mov    QWORD PTR [rsp+0x20],rsi
   140023e37:	call   0x14001ffd8
   140023e3c:	int3   
   140023e3d:	xor    r9d,r9d
   140023e40:	xor    r8d,r8d
   140023e43:	xor    edx,edx
   140023e45:	xor    ecx,ecx
   140023e47:	mov    QWORD PTR [rsp+0x20],rsi
   140023e4c:	call   0x14001ffd8
   140023e51:	int3   
   140023e52:	xor    r9d,r9d
   140023e55:	xor    r8d,r8d
   140023e58:	xor    edx,edx
   140023e5a:	xor    ecx,ecx
   140023e5c:	mov    QWORD PTR [rsp+0x20],rsi
   140023e61:	call   0x14001ffd8
   140023e66:	int3   
   140023e67:	xor    r9d,r9d
   140023e6a:	xor    r8d,r8d
   140023e6d:	xor    edx,edx
   140023e6f:	xor    ecx,ecx
   140023e71:	mov    QWORD PTR [rsp+0x20],rsi
   140023e76:	call   0x14001ffd8
   140023e7b:	int3   
   140023e7c:	xor    r9d,r9d
   140023e7f:	xor    r8d,r8d
   140023e82:	xor    edx,edx
   140023e84:	xor    ecx,ecx
   140023e86:	mov    QWORD PTR [rsp+0x20],rsi
   140023e8b:	call   0x14001ffd8
   140023e90:	int3   
   140023e91:	xor    r9d,r9d
   140023e94:	xor    r8d,r8d
   140023e97:	xor    edx,edx
   140023e99:	mov    QWORD PTR [rsp+0x20],rcx
   140023e9e:	call   0x14001ffd8
   140023ea3:	int3   
   140023ea4:	xor    r9d,r9d
   140023ea7:	xor    r8d,r8d
   140023eaa:	xor    edx,edx
   140023eac:	mov    QWORD PTR [rsp+0x20],rcx
   140023eb1:	call   0x14001ffd8
   140023eb6:	int3   
   140023eb7:	xor    r9d,r9d
   140023eba:	xor    r8d,r8d
   140023ebd:	xor    edx,edx
   140023ebf:	mov    QWORD PTR [rsp+0x20],rcx
   140023ec4:	call   0x14001ffd8
   140023ec9:	int3   
   140023eca:	int3   
   140023ecb:	int3   
   140023ecc:	test   r8d,r8d
   140023ecf:	jle    0x140023f1a
   140023ed1:	mov    DWORD PTR [rsp+0x18],r8d
   140023ed6:	mov    QWORD PTR [rsp+0x20],r9
   140023edb:	push   rbx
   140023edc:	push   rbp
   140023edd:	push   rsi
   140023ede:	push   rdi
   140023edf:	sub    rsp,0x38
   140023ee3:	lea    rdi,[rsp+0x78]
   140023ee8:	xor    ebx,ebx
   140023eea:	mov    rsi,rdx
   140023eed:	add    rdi,0xfffffffffffffff8
   140023ef1:	mov    rbp,rcx
   140023ef4:	lea    rdi,[rdi+0x8]
   140023ef8:	mov    rdx,rsi
   140023efb:	mov    rcx,rbp
   140023efe:	mov    r8,QWORD PTR [rdi]
   140023f01:	call   0x140028200
   140023f06:	test   eax,eax
   140023f08:	jne    0x140023f1b
   140023f0a:	inc    ebx
   140023f0c:	cmp    ebx,DWORD PTR [rsp+0x70]
   140023f10:	jl     0x140023ef4
   140023f12:	add    rsp,0x38
   140023f16:	pop    rdi
   140023f17:	pop    rsi
   140023f18:	pop    rbp
   140023f19:	pop    rbx
   140023f1a:	ret    
   140023f1b:	and    QWORD PTR [rsp+0x20],0x0
   140023f21:	xor    r9d,r9d
   140023f24:	xor    r8d,r8d
   140023f27:	xor    edx,edx
   140023f29:	xor    ecx,ecx
   140023f2b:	call   0x14001ffd8
   140023f30:	int3   
   140023f31:	int3   
   140023f32:	int3   
   140023f33:	int3   
   140023f34:	mov    QWORD PTR [rsp+0x8],rbx
   140023f39:	mov    QWORD PTR [rsp+0x10],rsi
   140023f3e:	mov    QWORD PTR [rsp+0x20],rdi
   140023f43:	push   r12
   140023f45:	push   r14
   140023f47:	push   r15
   140023f49:	sub    rsp,0x30
   140023f4d:	mov    r14,rdx
   140023f50:	mov    r12d,ecx
   140023f53:	xor    esi,esi
   140023f55:	cmp    ecx,0x5
   140023f58:	jbe    0x140023f71
   140023f5a:	call   0x14001b864
   140023f5f:	mov    DWORD PTR [rax],0x16
   140023f65:	call   0x14001ffb8
   140023f6a:	xor    eax,eax
   140023f6c:	jmp    0x1400240b5
   140023f71:	call   0x14001ef6c
   140023f76:	mov    rbx,rax
   140023f79:	mov    QWORD PTR [rsp+0x60],rax
   140023f7e:	call   0x14001f444
   140023f83:	or     DWORD PTR [rbx+0xc8],0x10
   140023f8a:	mov    edx,0x1
   140023f8f:	mov    ecx,0x158
   140023f94:	call   0x14001c1dc
   140023f99:	mov    rdi,rax
   140023f9c:	test   rax,rax
   140023f9f:	je     0x1400240ab
   140023fa5:	mov    ecx,0xc
   140023faa:	call   0x14001b118
   140023faf:	nop
   140023fb0:	lea    r15,[rbx+0xc0]
   140023fb7:	mov    rdx,QWORD PTR [r15]
   140023fba:	mov    rcx,rdi
   140023fbd:	call   0x140023a3c
   140023fc2:	nop
   140023fc3:	mov    ecx,0xc
   140023fc8:	call   0x14001b308
   140023fcd:	mov    r8,r14
   140023fd0:	mov    edx,r12d
   140023fd3:	mov    rcx,rdi
   140023fd6:	call   0x1400242a4
   140023fdb:	mov    rsi,rax
   140023fde:	mov    QWORD PTR [rsp+0x20],rax
   140023fe3:	test   rax,rax
   140023fe6:	je     0x14002409a
   140023fec:	test   r14,r14
   140023fef:	je     0x14002401a
   140023ff1:	lea    rdx,[rip+0x1dbd4]        # 0x140041bcc
   140023ff8:	mov    rcx,r14
   140023ffb:	call   0x1400288fc
   140024000:	mov    ecx,DWORD PTR [rip+0x2096a]        # 0x140044970
   140024006:	test   eax,eax
   140024008:	mov    r14d,0x1
   14002400e:	cmovne ecx,r14d
   140024012:	mov    DWORD PTR [rip+0x20958],ecx        # 0x140044970
   140024018:	jmp    0x140024020
   14002401a:	mov    r14d,0x1
   140024020:	mov    ecx,0xc
   140024025:	call   0x14001b118
   14002402a:	nop
   14002402b:	mov    rdx,rdi
   14002402e:	mov    rcx,r15
   140024031:	call   0x14001f4bc
   140024036:	mov    rcx,rdi
   140024039:	call   0x14001f3a0
   14002403e:	test   BYTE PTR [rbx+0xc8],0x2
   140024045:	jne    0x14002408e
   140024047:	test   BYTE PTR [rip+0x1dfaa],r14b        # 0x140041ff8
   14002404e:	jne    0x14002408e
   140024050:	mov    rdx,QWORD PTR [r15]
   140024053:	lea    rcx,[rip+0x1de36]        # 0x140041e90
   14002405a:	call   0x14001f4bc
   14002405f:	mov    rdx,QWORD PTR [rip+0x1de2a]        # 0x140041e90
   140024066:	mov    rax,QWORD PTR [rdx+0xf0]
   14002406d:	mov    QWORD PTR [rip+0x1d1fc],rax        # 0x140041270
   140024074:	mov    rax,QWORD PTR [rdx+0x108]
   14002407b:	mov    QWORD PTR [rip+0x1d5be],rax        # 0x140041640
   140024082:	mov    eax,DWORD PTR [rdx+0xd4]
   140024088:	mov    DWORD PTR [rip+0x1db3a],eax        # 0x140041bc8
   14002408e:	mov    ecx,0xc
   140024093:	call   0x14001b308
   140024098:	jmp    0x1400240ab
   14002409a:	mov    rcx,rdi
   14002409d:	call   0x14001f3a0
   1400240a2:	mov    rcx,rdi
   1400240a5:	call   0x14001f208
   1400240aa:	nop
   1400240ab:	and    DWORD PTR [rbx+0xc8],0xffffffef
   1400240b2:	mov    rax,rsi
   1400240b5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400240ba:	mov    rsi,QWORD PTR [rsp+0x58]
   1400240bf:	mov    rdi,QWORD PTR [rsp+0x68]
   1400240c4:	add    rsp,0x30
   1400240c8:	pop    r15
   1400240ca:	pop    r14
   1400240cc:	pop    r12
   1400240ce:	ret    
   1400240cf:	int3   
   1400240d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400240d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400240da:	mov    QWORD PTR [rsp+0x18],rsi
   1400240df:	push   rdi
   1400240e0:	push   r12
   1400240e2:	push   r13
   1400240e4:	push   r14
   1400240e6:	push   r15
   1400240e8:	sub    rsp,0x30
   1400240ec:	mov    rdi,rcx
   1400240ef:	mov    ecx,0x6a6
   1400240f4:	mov    ebp,0x1
   1400240f9:	call   0x14001c25c
   1400240fe:	xor    r13d,r13d
   140024101:	mov    rsi,rax
   140024104:	test   rax,rax
   140024107:	jne    0x140024126
   140024109:	mov    rbx,QWORD PTR [rsp+0x60]
   14002410e:	mov    rbp,QWORD PTR [rsp+0x68]
   140024113:	mov    rsi,QWORD PTR [rsp+0x70]
   140024118:	add    rsp,0x30
   14002411c:	pop    r15
   14002411e:	pop    r14
   140024120:	pop    r13
   140024122:	pop    r12
   140024124:	pop    rdi
   140024125:	ret    
   140024126:	lea    r14,[rax+0x4]
   14002412a:	mov    ebx,0x351
   14002412f:	mov    r8d,0x3
   140024135:	mov    WORD PTR [r14],r13w
   140024139:	mov    DWORD PTR [rax],ebp
   14002413b:	mov    rax,QWORD PTR [rdi+0x38]
   14002413f:	mov    r9,QWORD PTR [rip+0x11e22]        # 0x140035f68
   140024146:	mov    QWORD PTR [rsp+0x28],rax
   14002414b:	lea    rax,[rip+0x11f9a]        # 0x1400360ec
   140024152:	mov    edx,ebx
   140024154:	mov    rcx,r14
   140024157:	mov    QWORD PTR [rsp+0x20],rax
   14002415c:	call   0x140023ecc
   140024161:	lea    r15,[rip+0x11e00]        # 0x140035f68
   140024168:	lea    r12,[rdi+0x38]
   14002416c:	lea    r8,[rip+0x11f75]        # 0x1400360e8
   140024173:	mov    rdx,rbx
   140024176:	mov    rcx,r14
   140024179:	call   0x140028200
   14002417e:	test   eax,eax
   140024180:	jne    0x14002428f
   140024186:	mov    rcx,QWORD PTR [r12]
   14002418a:	lea    rbx,[r12+0x20]
   14002418f:	mov    rdx,QWORD PTR [rbx]
   140024192:	call   0x1400288fc
   140024197:	mov    r12,rbx
   14002419a:	mov    r8d,0x3
   1400241a0:	test   eax,eax
   1400241a2:	mov    rax,QWORD PTR [rbx]
   1400241a5:	mov    ebx,0x351
   1400241aa:	mov    QWORD PTR [rsp+0x28],rax
   1400241af:	cmovne ebp,r13d
   1400241b3:	lea    rax,[rip+0x11f32]        # 0x1400360ec
   1400241ba:	add    r15,0x18
   1400241be:	mov    edx,ebx
   1400241c0:	mov    rcx,r14
   1400241c3:	mov    r9,QWORD PTR [r15]
   1400241c6:	mov    QWORD PTR [rsp+0x20],rax
   1400241cb:	call   0x140023ecc
   1400241d0:	lea    rax,[rip+0x11df1]        # 0x140035fc8
   1400241d7:	cmp    r15,rax
   1400241da:	jl     0x14002416c
   1400241dc:	test   ebp,ebp
   1400241de:	jne    0x140024233
   1400241e0:	mov    rcx,QWORD PTR [rdi+0x28]
   1400241e4:	or     ebx,0xffffffff
   1400241e7:	test   rcx,rcx
   1400241ea:	je     0x1400241ff
   1400241ec:	mov    eax,ebx
   1400241ee:	lock xadd DWORD PTR [rcx],eax
   1400241f2:	add    eax,ebx
   1400241f4:	jne    0x1400241ff
   1400241f6:	mov    rcx,QWORD PTR [rdi+0x28]
   1400241fa:	call   0x14001a1ac
   1400241ff:	mov    rax,QWORD PTR [rdi+0x20]
   140024203:	test   rax,rax
   140024206:	je     0x14002421b
   140024208:	mov    ecx,ebx
   14002420a:	lock xadd DWORD PTR [rax],ecx
   14002420e:	add    ecx,ebx
   140024210:	jne    0x14002421b
   140024212:	mov    rcx,QWORD PTR [rdi+0x20]
   140024216:	call   0x14001a1ac
   14002421b:	mov    QWORD PTR [rdi+0x20],r13
   14002421f:	mov    QWORD PTR [rdi+0x10],r13
   140024223:	mov    QWORD PTR [rdi+0x28],rsi
   140024227:	mov    QWORD PTR [rdi+0x18],r14
   14002422b:	mov    rax,r14
   14002422e:	jmp    0x140024109
   140024233:	mov    rcx,rsi
   140024236:	call   0x14001a1ac
   14002423b:	mov    rcx,QWORD PTR [rdi+0x28]
   14002423f:	or     ebx,0xffffffff
   140024242:	test   rcx,rcx
   140024245:	je     0x14002425a
   140024247:	mov    eax,ebx
   140024249:	lock xadd DWORD PTR [rcx],eax
   14002424d:	add    eax,ebx
   14002424f:	jne    0x14002425a
   140024251:	mov    rcx,QWORD PTR [rdi+0x28]
   140024255:	call   0x14001a1ac
   14002425a:	mov    rcx,QWORD PTR [rdi+0x20]
   14002425e:	test   rcx,rcx
   140024261:	je     0x140024276
   140024263:	mov    eax,ebx
   140024265:	lock xadd DWORD PTR [rcx],eax
   140024269:	add    eax,ebx
   14002426b:	jne    0x140024276
   14002426d:	mov    rcx,QWORD PTR [rdi+0x20]
   140024271:	call   0x14001a1ac
   140024276:	mov    rax,QWORD PTR [rdi+0x58]
   14002427a:	mov    QWORD PTR [rdi+0x20],r13
   14002427e:	mov    QWORD PTR [rdi+0x10],r13
   140024282:	mov    QWORD PTR [rdi+0x28],r13
   140024286:	mov    QWORD PTR [rdi+0x18],r13
   14002428a:	jmp    0x140024109
   14002428f:	xor    r9d,r9d
   140024292:	xor    r8d,r8d
   140024295:	xor    edx,edx
   140024297:	xor    ecx,ecx
   140024299:	mov    QWORD PTR [rsp+0x20],r13
   14002429e:	call   0x14001ffd8
   1400242a3:	int3   
   1400242a4:	mov    QWORD PTR [rsp+0x20],rbx
   1400242a9:	push   rbp
   1400242aa:	push   rsi
   1400242ab:	push   rdi
   1400242ac:	push   r12
   1400242ae:	push   r13
   1400242b0:	push   r14
   1400242b2:	push   r15
   1400242b4:	sub    rsp,0x200
   1400242bb:	mov    rax,QWORD PTR [rip+0x1d38e]        # 0x140041650
   1400242c2:	xor    rax,rsp
   1400242c5:	mov    QWORD PTR [rsp+0x1f0],rax
   1400242cd:	xor    r13d,r13d
   1400242d0:	mov    rbx,r8
   1400242d3:	mov    rdi,rcx
   1400242d6:	test   edx,edx
   1400242d8:	je     0x1400242fa
   1400242da:	test   rbx,rbx
   1400242dd:	je     0x1400242e9
   1400242df:	call   0x140024510
   1400242e4:	jmp    0x14002443f
   1400242e9:	movsxd rax,edx
   1400242ec:	shl    rax,0x5
   1400242f0:	mov    rax,QWORD PTR [rax+rcx*1+0x18]
   1400242f5:	jmp    0x14002443f
   1400242fa:	mov    ebp,0x1
   1400242ff:	mov    esi,r13d
   140024302:	test   rbx,rbx
   140024305:	je     0x14002443a
   14002430b:	cmp    WORD PTR [r8],0x4c
   140024310:	jne    0x14002446e
   140024316:	cmp    WORD PTR [r8+0x2],0x43
   14002431c:	jne    0x14002446e
   140024322:	cmp    WORD PTR [r8+0x4],0x5f
   140024328:	jne    0x14002446e
   14002432e:	lea    rdx,[rip+0x11dab]        # 0x1400360e0
   140024335:	mov    rcx,rbx
   140024338:	call   0x1400289a4
   14002433d:	mov    r14,rax
   140024340:	test   rax,rax
   140024343:	je     0x14002446a
   140024349:	mov    rbp,rax
   14002434c:	sub    rbp,rbx
   14002434f:	sar    rbp,1
   140024352:	je     0x14002446a
   140024358:	cmp    WORD PTR [rax],0x3b
   14002435c:	je     0x14002446a
   140024362:	mov    r12d,0x1
   140024368:	lea    r15,[rip+0x11bf9]        # 0x140035f68
   14002436f:	mov    rcx,QWORD PTR [r15]
   140024372:	mov    r8,rbp
   140024375:	mov    rdx,rbx
   140024378:	call   0x140028978
   14002437d:	test   eax,eax
   14002437f:	jne    0x14002438e
   140024381:	mov    rcx,QWORD PTR [r15]
   140024384:	call   0x14001e19c
   140024389:	cmp    rbp,rax
   14002438c:	je     0x1400243a1
   14002438e:	lea    rax,[rip+0x11c33]        # 0x140035fc8
   140024395:	add    r15,0x18
   140024399:	inc    r12d
   14002439c:	cmp    r15,rax
   14002439f:	jle    0x14002436f
   1400243a1:	add    r14,0x2
   1400243a5:	lea    rdx,[rip+0x11d3c]        # 0x1400360e8
   1400243ac:	mov    rcx,r14
   1400243af:	call   0x140028938
   1400243b4:	mov    rbx,rax
   1400243b7:	test   rax,rax
   1400243ba:	jne    0x1400243c7
   1400243bc:	cmp    WORD PTR [r14],0x3b
   1400243c1:	jne    0x14002446a
   1400243c7:	cmp    r12d,0x5
   1400243cb:	jg     0x140024417
   1400243cd:	lea    rcx,[rsp+0x30]
   1400243d2:	mov    r9,rax
   1400243d5:	mov    r8,r14
   1400243d8:	mov    edx,0x83
   1400243dd:	call   0x14001995c
   1400243e2:	test   eax,eax
   1400243e4:	jne    0x1400244f9
   1400243ea:	lea    rax,[rbx+rbx*1]
   1400243ee:	cmp    rax,0x106
   1400243f4:	jae    0x1400244f3
   1400243fa:	lea    r8,[rsp+0x30]
   1400243ff:	mov    edx,r12d
   140024402:	mov    rcx,rdi
   140024405:	mov    WORD PTR [rsp+rax*1+0x30],r13w
   14002440b:	call   0x140024510
   140024410:	test   rax,rax
   140024413:	je     0x140024417
   140024415:	inc    esi
   140024417:	lea    rbx,[r14+rbx*2]
   14002441b:	cmp    WORD PTR [rbx],r13w
   14002441f:	je     0x14002442f
   140024421:	add    rbx,0x2
   140024425:	cmp    WORD PTR [rbx],r13w
   140024429:	jne    0x14002432e
   14002442f:	test   esi,esi
   140024431:	je     0x1400244eb
   140024437:	mov    rcx,rdi
   14002443a:	call   0x1400240d0
   14002443f:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140024447:	xor    rcx,rsp
   14002444a:	call   0x1400187d0
   14002444f:	mov    rbx,QWORD PTR [rsp+0x258]
   140024457:	add    rsp,0x200
   14002445e:	pop    r15
   140024460:	pop    r14
   140024462:	pop    r13
   140024464:	pop    r12
   140024466:	pop    rdi
   140024467:	pop    rsi
   140024468:	pop    rbp
   140024469:	ret    
   14002446a:	xor    eax,eax
   14002446c:	jmp    0x14002443f
   14002446e:	lea    r9,[rsp+0x140]
   140024476:	lea    rdx,[rsp+0x30]
   14002447b:	mov    r8d,0x83
   140024481:	mov    rcx,rbx
   140024484:	mov    QWORD PTR [rsp+0x28],r13
   140024489:	mov    QWORD PTR [rsp+0x20],0x55
   140024492:	call   0x140023af8
   140024497:	test   rax,rax
   14002449a:	je     0x14002443f
   14002449c:	mov    ebx,r13d
   14002449f:	lea    r14,[rdi+0x18]
   1400244a3:	test   ebx,ebx
   1400244a5:	je     0x1400244d3
   1400244a7:	mov    rdx,QWORD PTR [r14]
   1400244aa:	lea    rcx,[rsp+0x30]
   1400244af:	call   0x1400288fc
   1400244b4:	test   eax,eax
   1400244b6:	je     0x1400244d1
   1400244b8:	lea    r8,[rsp+0x30]
   1400244bd:	mov    edx,ebx
   1400244bf:	mov    rcx,rdi
   1400244c2:	call   0x140024510
   1400244c7:	test   rax,rax
   1400244ca:	jne    0x1400244d1
   1400244cc:	mov    ebp,r13d
   1400244cf:	jmp    0x1400244d3
   1400244d1:	inc    esi
   1400244d3:	inc    ebx
   1400244d5:	add    r14,0x20
   1400244d9:	cmp    ebx,0x5
   1400244dc:	jle    0x1400244a3
   1400244de:	test   ebp,ebp
   1400244e0:	jne    0x140024437
   1400244e6:	jmp    0x14002442f
   1400244eb:	mov    rax,r13
   1400244ee:	jmp    0x14002443f
   1400244f3:	call   0x140019b48
   1400244f8:	int3   
   1400244f9:	xor    r9d,r9d
   1400244fc:	xor    r8d,r8d
   1400244ff:	xor    edx,edx
   140024501:	xor    ecx,ecx
   140024503:	mov    QWORD PTR [rsp+0x20],r13
   140024508:	call   0x14001ffd8
   14002450d:	int3   
   14002450e:	int3   
   14002450f:	int3   
   140024510:	mov    QWORD PTR [rsp+0x20],rbx
   140024515:	push   rbp
   140024516:	push   rsi
   140024517:	push   rdi
   140024518:	push   r12
   14002451a:	push   r13
   14002451c:	push   r14
   14002451e:	push   r15
   140024520:	lea    rbp,[rsp-0x230]
   140024528:	sub    rsp,0x330
   14002452f:	mov    rax,QWORD PTR [rip+0x1d11a]        # 0x140041650
   140024536:	xor    rax,rsp
   140024539:	mov    QWORD PTR [rbp+0x220],rax
   140024540:	mov    rbx,r8
   140024543:	movsxd r12,edx
   140024546:	mov    rdi,rcx
   140024549:	call   0x14001ef6c
   14002454e:	lea    r9,[rbp+0x170]
   140024555:	lea    rdx,[rsp+0x60]
   14002455a:	lea    r14,[rax+0x370]
   140024561:	lea    rax,[rsp+0x40]
   140024566:	mov    r8d,0x83
   14002456c:	mov    QWORD PTR [rsp+0x28],rax
   140024571:	mov    rcx,rbx
   140024574:	mov    QWORD PTR [rsp+0x20],0x55
   14002457d:	call   0x140023af8
   140024582:	test   rax,rax
   140024585:	jne    0x1400245b3
   140024587:	xor    eax,eax
   140024589:	mov    rcx,QWORD PTR [rbp+0x220]
   140024590:	xor    rcx,rsp
   140024593:	call   0x1400187d0
   140024598:	mov    rbx,QWORD PTR [rsp+0x388]
   1400245a0:	add    rsp,0x330
   1400245a7:	pop    r15
   1400245a9:	pop    r14
   1400245ab:	pop    r13
   1400245ad:	pop    r12
   1400245af:	pop    rdi
   1400245b0:	pop    rsi
   1400245b1:	pop    rbp
   1400245b2:	ret    
   1400245b3:	mov    rbx,r12
   1400245b6:	lea    rcx,[rsp+0x60]
   1400245bb:	shl    rbx,0x5
   1400245bf:	mov    rdx,QWORD PTR [rbx+rdi*1+0x18]
   1400245c4:	call   0x1400288fc
   1400245c9:	test   eax,eax
   1400245cb:	jne    0x1400245d4
   1400245cd:	mov    rax,QWORD PTR [rbx+rdi*1+0x18]
   1400245d2:	jmp    0x140024589
   1400245d4:	lea    rcx,[rsp+0x60]
   1400245d9:	call   0x14001e19c
   1400245de:	mov    r15,rax
   1400245e1:	lea    rcx,[rax*2+0x6]
   1400245e9:	call   0x14001c25c
   1400245ee:	mov    r13,rax
   1400245f1:	test   rax,rax
   1400245f4:	je     0x140024587
   1400245f6:	mov    rcx,QWORD PTR [rbx+rdi*1+0x18]
   1400245fb:	lea    r8,[rsp+0x60]
   140024600:	lea    rdx,[r15+0x1]
   140024604:	mov    QWORD PTR [rsp+0x48],rcx
   140024609:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   140024611:	mov    QWORD PTR [rsp+0x50],rcx
   140024616:	mov    ecx,DWORD PTR [rdi+0x4]
   140024619:	mov    DWORD PTR [rsp+0x44],ecx
   14002461d:	lea    rcx,[rax+0x4]
   140024621:	call   0x140024e60
   140024626:	xor    r15d,r15d
   140024629:	test   eax,eax
   14002462b:	jne    0x140024809
   140024631:	cmp    WORD PTR [rsp+0x60],0x43
   140024637:	lea    rax,[r13+0x4]
   14002463b:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   140024640:	jne    0x140024654
   140024642:	cmp    WORD PTR [rsp+0x62],r15w
   140024648:	jne    0x140024654
   14002464a:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   140024652:	jmp    0x140024668
   140024654:	lea    rcx,[rbp+0x170]
   14002465b:	call   0x14002375c
   140024660:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   140024668:	cmp    r12d,0x2
   14002466c:	jne    0x140024748
   140024672:	mov    eax,DWORD PTR [rsp+0x40]
   140024676:	mov    r8d,r15d
   140024679:	mov    rdx,r15
   14002467c:	mov    DWORD PTR [rdi+0x4],eax
   14002467f:	mov    rcx,QWORD PTR [r14+0x20]
   140024683:	mov    eax,DWORD PTR [r14+rdx*8]
   140024687:	cmp    DWORD PTR [rdi+0x4],eax
   14002468a:	je     0x1400246a5
   14002468c:	mov    rax,QWORD PTR [r14+rdx*8]
   140024690:	mov    QWORD PTR [r14+rdx*8],rcx
   140024694:	inc    rdx
   140024697:	inc    r8d
   14002469a:	mov    rcx,rax
   14002469d:	cmp    rdx,0x5
   1400246a1:	jl     0x140024683
   1400246a3:	jmp    0x1400246b8
   1400246a5:	test   r8d,r8d
   1400246a8:	je     0x1400246b8
   1400246aa:	movsxd rdx,r8d
   1400246ad:	mov    rax,QWORD PTR [r14+rdx*8]
   1400246b1:	mov    QWORD PTR [r14],rax
   1400246b4:	mov    QWORD PTR [r14+rdx*8],rcx
   1400246b8:	cmp    r8d,0x5
   1400246bc:	jne    0x14002473c
   1400246be:	mov    eax,DWORD PTR [rdi+0x4]
   1400246c1:	lea    r9d,[r8+0x7a]
   1400246c5:	mov    DWORD PTR [rsp+0x30],0x1
   1400246cd:	mov    DWORD PTR [rsp+0x28],eax
   1400246d1:	lea    rax,[rbp+0x70]
   1400246d5:	lea    r8,[rip+0x11984]        # 0x140036060
   1400246dc:	lea    edx,[r9-0x7e]
   1400246e0:	xor    ecx,ecx
   1400246e2:	mov    QWORD PTR [rsp+0x20],rax
   1400246e7:	call   0x140024cc4
   1400246ec:	test   eax,eax
   1400246ee:	je     0x140024732
   1400246f0:	mov    edx,r15d
   1400246f3:	lea    rcx,[rbp+0x70]
   1400246f7:	mov    eax,0x1ff
   1400246fc:	inc    edx
   1400246fe:	and    WORD PTR [rcx],ax
   140024701:	movsxd rax,edx
   140024704:	lea    rcx,[rcx+0x2]
   140024708:	cmp    rax,0x7f
   14002470c:	jb     0x1400246f7
   14002470e:	mov    rdx,QWORD PTR [rip+0x1dbbb]        # 0x1400422d0
   140024715:	lea    rcx,[rbp+0x70]
   140024719:	mov    r8d,0xfe
   14002471f:	call   0x14001e1d0
   140024724:	mov    ecx,r15d
   140024727:	test   eax,eax
   140024729:	sete   cl
   14002472c:	mov    DWORD PTR [r14+0x4],ecx
   140024730:	jmp    0x140024736
   140024732:	mov    DWORD PTR [r14+0x4],r15d
   140024736:	mov    eax,DWORD PTR [rdi+0x4]
   140024739:	mov    DWORD PTR [r14],eax
   14002473c:	mov    eax,DWORD PTR [r14+0x4]
   140024740:	mov    DWORD PTR [rdi+0xd0],eax
   140024746:	jmp    0x140024764
   140024748:	cmp    r12d,0x1
   14002474c:	jne    0x140024757
   14002474e:	mov    eax,DWORD PTR [rsp+0x40]
   140024752:	mov    DWORD PTR [rdi+0x8],eax
   140024755:	jmp    0x140024764
   140024757:	cmp    r12d,0x5
   14002475b:	jne    0x140024764
   14002475d:	mov    eax,DWORD PTR [rsp+0x40]
   140024761:	mov    DWORD PTR [rdi+0xc],eax
   140024764:	lea    rax,[r12+r12*2]
   140024768:	lea    rdx,[rip+0x117f1]        # 0x140035f60
   14002476f:	mov    rcx,rdi
   140024772:	call   QWORD PTR [rdx+rax*8]
   140024775:	test   eax,eax
   140024777:	je     0x1400247b1
   140024779:	mov    rax,QWORD PTR [rsp+0x48]
   14002477e:	mov    QWORD PTR [rbx+rdi*1+0x18],rax
   140024783:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   14002478b:	call   0x14001a1ac
   140024790:	mov    rax,QWORD PTR [rsp+0x50]
   140024795:	mov    rcx,r13
   140024798:	mov    QWORD PTR [rdi+r12*8+0x128],rax
   1400247a0:	call   0x14001a1ac
   1400247a5:	mov    eax,DWORD PTR [rsp+0x44]
   1400247a9:	mov    DWORD PTR [rdi+0x4],eax
   1400247ac:	jmp    0x140024587
   1400247b1:	lea    rcx,[rip+0x1d414]        # 0x140041bcc
   1400247b8:	cmp    QWORD PTR [rsp+0x48],rcx
   1400247bd:	je     0x1400247f7
   1400247bf:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   1400247c4:	lock dec DWORD PTR [rcx]
   1400247c7:	jne    0x1400247f7
   1400247c9:	mov    rcx,QWORD PTR [rbx+rdi*1+0x28]
   1400247ce:	call   0x14001a1ac
   1400247d3:	mov    rcx,QWORD PTR [rbx+rdi*1+0x20]
   1400247d8:	call   0x14001a1ac
   1400247dd:	mov    rcx,QWORD PTR [rdi+r12*8+0x128]
   1400247e5:	call   0x14001a1ac
   1400247ea:	mov    QWORD PTR [rbx+rdi*1+0x18],r15
   1400247ef:	mov    QWORD PTR [rdi+r12*8+0x128],r15
   1400247f7:	mov    DWORD PTR [r13+0x0],0x1
   1400247ff:	mov    QWORD PTR [rbx+rdi*1+0x28],r13
   140024804:	jmp    0x1400245cd
   140024809:	xor    r9d,r9d
   14002480c:	xor    r8d,r8d
   14002480f:	xor    edx,edx
   140024811:	xor    ecx,ecx
   140024813:	mov    QWORD PTR [rsp+0x20],r15
   140024818:	call   0x14001ffd8
   14002481d:	int3   
   14002481e:	int3   
   14002481f:	int3   
   140024820:	mov    rax,rsp
   140024823:	mov    QWORD PTR [rax+0x8],rbx
   140024827:	mov    QWORD PTR [rax+0x10],rbp
   14002482b:	mov    QWORD PTR [rax+0x18],rsi
   14002482f:	mov    QWORD PTR [rax+0x20],rdi
   140024833:	push   r12
   140024835:	push   r14
   140024837:	push   r15
   140024839:	sub    rsp,0x50
   14002483d:	xor    r12d,r12d
   140024840:	mov    rbp,r8
   140024843:	mov    r14,rdx
   140024846:	mov    rdi,rcx
   140024849:	mov    ebx,r12d
   14002484c:	test   rcx,rcx
   14002484f:	je     0x140024861
   140024851:	test   r8,r8
   140024854:	jne    0x14002485d
   140024856:	xor    eax,eax
   140024858:	jmp    0x1400249dd
   14002485d:	mov    WORD PTR [rcx],r12w
   140024861:	test   rdx,rdx
   140024864:	jne    0x14002487f
   140024866:	call   0x14001b864
   14002486b:	mov    DWORD PTR [rax],0x16
   140024871:	call   0x14001ffb8
   140024876:	or     rax,0xffffffffffffffff
   14002487a:	jmp    0x1400249dd
   14002487f:	lea    rcx,[rsp+0x30]
   140024884:	mov    rdx,r9
   140024887:	call   0x140019058
   14002488c:	mov    rax,QWORD PTR [rsp+0x30]
   140024891:	test   rdi,rdi
   140024894:	je     0x140024979
   14002489a:	cmp    QWORD PTR [rax+0x138],r12
   1400248a1:	jne    0x1400248cf
   1400248a3:	test   rbp,rbp
   1400248a6:	je     0x1400249c7
   1400248ac:	movzx  eax,BYTE PTR [rbx+r14*1]
   1400248b1:	mov    WORD PTR [rdi],ax
   1400248b4:	cmp    BYTE PTR [rbx+r14*1],r12b
   1400248b8:	je     0x1400249c7
   1400248be:	inc    rbx
   1400248c1:	add    rdi,0x2
   1400248c5:	cmp    rbx,rbp
   1400248c8:	jb     0x1400248ac
   1400248ca:	jmp    0x1400249c7
   1400248cf:	mov    ecx,DWORD PTR [rax+0x4]
   1400248d2:	or     rbx,0xffffffffffffffff
   1400248d6:	mov    r8,r14
   1400248d9:	lea    edx,[rbx+0xa]
   1400248dc:	mov    r9d,ebx
   1400248df:	mov    DWORD PTR [rsp+0x28],ebp
   1400248e3:	mov    QWORD PTR [rsp+0x20],rdi
   1400248e8:	call   QWORD PTR [rip+0xa92a]        # 0x14002f218
   1400248ee:	movsxd rcx,eax
   1400248f1:	test   eax,eax
   1400248f3:	jne    0x1400249c3
   1400248f9:	call   QWORD PTR [rip+0xa8a1]        # 0x14002f1a0
   1400248ff:	cmp    eax,0x7a
   140024902:	jne    0x140024963
   140024904:	mov    r15d,ebp
   140024907:	mov    rsi,r14
   14002490a:	test   ebp,ebp
   14002490c:	je     0x140024937
   14002490e:	dec    r15d
   140024911:	cmp    BYTE PTR [rsi],r12b
   140024914:	je     0x140024937
   140024916:	movzx  ecx,BYTE PTR [rsi]
   140024919:	lea    rdx,[rsp+0x30]
   14002491e:	call   0x1400251a4
   140024923:	test   eax,eax
   140024925:	je     0x14002492f
   140024927:	inc    rsi
   14002492a:	cmp    BYTE PTR [rsi],r12b
   14002492d:	je     0x140024963
   14002492f:	inc    rsi
   140024932:	test   r15d,r15d
   140024935:	jmp    0x14002490c
   140024937:	mov    rax,QWORD PTR [rsp+0x30]
   14002493c:	sub    esi,r14d
   14002493f:	mov    r8,r14
   140024942:	mov    ecx,DWORD PTR [rax+0x4]
   140024945:	mov    edx,0x1
   14002494a:	mov    r9d,esi
   14002494d:	mov    DWORD PTR [rsp+0x28],ebp
   140024951:	mov    QWORD PTR [rsp+0x20],rdi
   140024956:	call   QWORD PTR [rip+0xa8bc]        # 0x14002f218
   14002495c:	movsxd rcx,eax
   14002495f:	test   eax,eax
   140024961:	jne    0x140024974
   140024963:	call   0x14001b864
   140024968:	mov    DWORD PTR [rax],0x2a
   14002496e:	mov    WORD PTR [rdi],r12w
   140024972:	jmp    0x1400249c7
   140024974:	mov    rbx,rcx
   140024977:	jmp    0x1400249c7
   140024979:	cmp    QWORD PTR [rax+0x138],r12
   140024980:	jne    0x14002498f
   140024982:	mov    rcx,r14
   140024985:	call   0x14001a580
   14002498a:	mov    rbx,rax
   14002498d:	jmp    0x1400249c7
   14002498f:	mov    ecx,DWORD PTR [rax+0x4]
   140024992:	or     rbx,0xffffffffffffffff
   140024996:	mov    r8,r14
   140024999:	lea    edx,[rbx+0xa]
   14002499c:	mov    r9d,ebx
   14002499f:	mov    DWORD PTR [rsp+0x28],r12d
   1400249a4:	mov    QWORD PTR [rsp+0x20],r12
   1400249a9:	call   QWORD PTR [rip+0xa869]        # 0x14002f218
   1400249af:	movsxd rcx,eax
   1400249b2:	test   eax,eax
   1400249b4:	jne    0x1400249c3
   1400249b6:	call   0x14001b864
   1400249bb:	mov    DWORD PTR [rax],0x2a
   1400249c1:	jmp    0x1400249c7
   1400249c3:	lea    rbx,[rcx-0x1]
   1400249c7:	cmp    BYTE PTR [rsp+0x48],r12b
   1400249cc:	je     0x1400249da
   1400249ce:	mov    rcx,QWORD PTR [rsp+0x40]
   1400249d3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400249da:	mov    rax,rbx
   1400249dd:	lea    r11,[rsp+0x50]
   1400249e2:	mov    rbx,QWORD PTR [r11+0x20]
   1400249e6:	mov    rbp,QWORD PTR [r11+0x28]
   1400249ea:	mov    rsi,QWORD PTR [r11+0x30]
   1400249ee:	mov    rdi,QWORD PTR [r11+0x38]
   1400249f2:	mov    rsp,r11
   1400249f5:	pop    r15
   1400249f7:	pop    r14
   1400249f9:	pop    r12
   1400249fb:	ret    
   1400249fc:	mov    QWORD PTR [rsp+0x8],rbx
   140024a01:	mov    QWORD PTR [rsp+0x10],rsi
   140024a06:	mov    QWORD PTR [rsp+0x18],rdi
   140024a0b:	push   r12
   140024a0d:	push   r14
   140024a0f:	push   r15
   140024a11:	sub    rsp,0x40
   140024a15:	xor    r12d,r12d
   140024a18:	mov    r15,r9
   140024a1b:	mov    rsi,r8
   140024a1e:	mov    rdi,rdx
   140024a21:	mov    r14,rcx
   140024a24:	mov    ebx,r12d
   140024a27:	test   rdx,rdx
   140024a2a:	jne    0x140024a33
   140024a2c:	test   r8,r8
   140024a2f:	je     0x140024a52
   140024a31:	jmp    0x140024a38
   140024a33:	test   r8,r8
   140024a36:	jne    0x140024a4e
   140024a38:	call   0x14001b864
   140024a3d:	mov    ebx,0x16
   140024a42:	mov    DWORD PTR [rax],ebx
   140024a44:	call   0x14001ffb8
   140024a49:	jmp    0x140024b10
   140024a4e:	mov    WORD PTR [rdx],r12w
   140024a52:	test   rcx,rcx
   140024a55:	je     0x140024a5a
   140024a57:	mov    QWORD PTR [rcx],r12
   140024a5a:	mov    rdx,QWORD PTR [rsp+0x88]
   140024a62:	lea    rcx,[rsp+0x20]
   140024a67:	call   0x140019058
   140024a6c:	mov    r8,QWORD PTR [rsp+0x80]
   140024a74:	cmp    r8,rsi
   140024a77:	cmova  r8,rsi
   140024a7b:	cmp    r8,0x7fffffff
   140024a82:	jbe    0x140024a90
   140024a84:	call   0x14001b864
   140024a89:	mov    ebx,0x16
   140024a8e:	jmp    0x140024ade
   140024a90:	lea    r9,[rsp+0x20]
   140024a95:	mov    rdx,r15
   140024a98:	mov    rcx,rdi
   140024a9b:	call   0x140024820
   140024aa0:	cmp    rax,0xffffffffffffffff
   140024aa4:	jne    0x140024ab8
   140024aa6:	test   rdi,rdi
   140024aa9:	je     0x140024aaf
   140024aab:	mov    WORD PTR [rdi],r12w
   140024aaf:	call   0x14001b864
   140024ab4:	mov    ebx,DWORD PTR [rax]
   140024ab6:	jmp    0x140024afd
   140024ab8:	inc    rax
   140024abb:	test   rdi,rdi
   140024abe:	je     0x140024af5
   140024ac0:	cmp    rax,rsi
   140024ac3:	jbe    0x140024aef
   140024ac5:	cmp    QWORD PTR [rsp+0x80],0xffffffffffffffff
   140024ace:	je     0x140024ae7
   140024ad0:	mov    WORD PTR [rdi],r12w
   140024ad4:	call   0x14001b864
   140024ad9:	mov    ebx,0x22
   140024ade:	mov    DWORD PTR [rax],ebx
   140024ae0:	call   0x14001ffb8
   140024ae5:	jmp    0x140024afd
   140024ae7:	mov    rax,rsi
   140024aea:	mov    ebx,0x50
   140024aef:	mov    WORD PTR [rdi+rax*2-0x2],r12w
   140024af5:	test   r14,r14
   140024af8:	je     0x140024afd
   140024afa:	mov    QWORD PTR [r14],rax
   140024afd:	cmp    BYTE PTR [rsp+0x38],r12b
   140024b02:	je     0x140024b10
   140024b04:	mov    rcx,QWORD PTR [rsp+0x30]
   140024b09:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024b10:	mov    rsi,QWORD PTR [rsp+0x68]
   140024b15:	mov    rdi,QWORD PTR [rsp+0x70]
   140024b1a:	mov    eax,ebx
   140024b1c:	mov    rbx,QWORD PTR [rsp+0x60]
   140024b21:	add    rsp,0x40
   140024b25:	pop    r15
   140024b27:	pop    r14
   140024b29:	pop    r12
   140024b2b:	ret    
   140024b2c:	sub    rsp,0x38
   140024b30:	mov    rax,QWORD PTR [rsp+0x60]
   140024b35:	and    QWORD PTR [rsp+0x28],0x0
   140024b3b:	mov    QWORD PTR [rsp+0x20],rax
   140024b40:	call   0x1400249fc
   140024b45:	add    rsp,0x38
   140024b49:	ret    
   140024b4a:	int3   
   140024b4b:	int3   
   140024b4c:	rex push rbp
   140024b4e:	push   r12
   140024b50:	push   r13
   140024b52:	push   r14
   140024b54:	push   r15
   140024b56:	sub    rsp,0x40
   140024b5a:	lea    rbp,[rsp+0x30]
   140024b5f:	mov    QWORD PTR [rbp+0x40],rbx
   140024b63:	mov    QWORD PTR [rbp+0x48],rsi
   140024b67:	mov    QWORD PTR [rbp+0x50],rdi
   140024b6b:	mov    rax,QWORD PTR [rip+0x1cade]        # 0x140041650
   140024b72:	xor    rax,rbp
   140024b75:	mov    QWORD PTR [rbp+0x0],rax
   140024b79:	mov    r14d,DWORD PTR [rbp+0x68]
   140024b7d:	xor    edi,edi
   140024b7f:	mov    r15d,r9d
   140024b82:	mov    r12,r8
   140024b85:	mov    r13d,edx
   140024b88:	test   r14d,r14d
   140024b8b:	jne    0x140024b94
   140024b8d:	mov    rax,QWORD PTR [rcx]
   140024b90:	mov    r14d,DWORD PTR [rax+0x4]
   140024b94:	neg    DWORD PTR [rbp+0x70]
   140024b97:	mov    ecx,r14d
   140024b9a:	mov    DWORD PTR [rsp+0x28],edi
   140024b9e:	sbb    edx,edx
   140024ba0:	mov    QWORD PTR [rsp+0x20],rdi
   140024ba5:	and    edx,0x8
   140024ba8:	inc    edx
   140024baa:	call   QWORD PTR [rip+0xa668]        # 0x14002f218
   140024bb0:	movsxd rsi,eax
   140024bb3:	test   eax,eax
   140024bb5:	jne    0x140024bbe
   140024bb7:	xor    eax,eax
   140024bb9:	jmp    0x140024c9c
   140024bbe:	jle    0x140024c37
   140024bc0:	movabs rax,0x7ffffffffffffff0
   140024bca:	cmp    rsi,rax
   140024bcd:	ja     0x140024c37
   140024bcf:	lea    rcx,[rsi+rsi*1]
   140024bd3:	lea    rax,[rcx+0x10]
   140024bd7:	cmp    rax,rcx
   140024bda:	jbe    0x140024c37
   140024bdc:	lea    rcx,[rsi*2+0x10]
   140024be4:	cmp    rcx,0x400
   140024beb:	ja     0x140024c1e
   140024bed:	lea    rax,[rcx+0xf]
   140024bf1:	cmp    rax,rcx
   140024bf4:	ja     0x140024c00
   140024bf6:	movabs rax,0xffffffffffffff0
   140024c00:	and    rax,0xfffffffffffffff0
   140024c04:	call   0x140024ee0
   140024c09:	sub    rsp,rax
   140024c0c:	lea    rbx,[rsp+0x30]
   140024c11:	test   rbx,rbx
   140024c14:	je     0x140024bb7
   140024c16:	mov    DWORD PTR [rbx],0xcccc
   140024c1c:	jmp    0x140024c31
   140024c1e:	call   0x14001adf0
   140024c23:	mov    rbx,rax
   140024c26:	test   rax,rax
   140024c29:	je     0x140024c3a
   140024c2b:	mov    DWORD PTR [rax],0xdddd
   140024c31:	add    rbx,0x10
   140024c35:	jmp    0x140024c3a
   140024c37:	mov    rbx,rdi
   140024c3a:	test   rbx,rbx
   140024c3d:	je     0x140024bb7
   140024c43:	mov    r8,rsi
   140024c46:	xor    edx,edx
   140024c48:	mov    rcx,rbx
   140024c4b:	add    r8,r8
   140024c4e:	call   0x14001b980
   140024c53:	mov    r9d,r15d
   140024c56:	mov    r8,r12
   140024c59:	mov    edx,0x1
   140024c5e:	mov    ecx,r14d
   140024c61:	mov    DWORD PTR [rsp+0x28],esi
   140024c65:	mov    QWORD PTR [rsp+0x20],rbx
   140024c6a:	call   QWORD PTR [rip+0xa5a8]        # 0x14002f218
   140024c70:	test   eax,eax
   140024c72:	je     0x140024c89
   140024c74:	mov    r9,QWORD PTR [rbp+0x60]
   140024c78:	mov    r8d,eax
   140024c7b:	mov    rdx,rbx
   140024c7e:	mov    ecx,r13d
   140024c81:	call   QWORD PTR [rip+0xa581]        # 0x14002f208
   140024c87:	mov    edi,eax
   140024c89:	lea    rcx,[rbx-0x10]
   140024c8d:	cmp    DWORD PTR [rcx],0xdddd
   140024c93:	jne    0x140024c9a
   140024c95:	call   0x14001a1ac
   140024c9a:	mov    eax,edi
   140024c9c:	mov    rcx,QWORD PTR [rbp+0x0]
   140024ca0:	xor    rcx,rbp
   140024ca3:	call   0x1400187d0
   140024ca8:	mov    rbx,QWORD PTR [rbp+0x40]
   140024cac:	mov    rsi,QWORD PTR [rbp+0x48]
   140024cb0:	mov    rdi,QWORD PTR [rbp+0x50]
   140024cb4:	lea    rsp,[rbp+0x10]
   140024cb8:	pop    r15
   140024cba:	pop    r14
   140024cbc:	pop    r13
   140024cbe:	pop    r12
   140024cc0:	pop    rbp
   140024cc1:	ret    
   140024cc2:	int3   
   140024cc3:	int3   
   140024cc4:	mov    QWORD PTR [rsp+0x8],rbx
   140024cc9:	mov    QWORD PTR [rsp+0x10],rsi
   140024cce:	push   rdi
   140024ccf:	sub    rsp,0x60
   140024cd3:	mov    esi,edx
   140024cd5:	mov    rdx,rcx
   140024cd8:	lea    rcx,[rsp+0x40]
   140024cdd:	mov    ebx,r9d
   140024ce0:	mov    rdi,r8
   140024ce3:	call   0x140019058
   140024ce8:	mov    eax,DWORD PTR [rsp+0xa0]
   140024cef:	lea    rcx,[rsp+0x40]
   140024cf4:	mov    r9d,ebx
   140024cf7:	mov    DWORD PTR [rsp+0x30],eax
   140024cfb:	mov    eax,DWORD PTR [rsp+0x98]
   140024d02:	mov    r8,rdi
   140024d05:	mov    DWORD PTR [rsp+0x28],eax
   140024d09:	mov    rax,QWORD PTR [rsp+0x90]
   140024d11:	mov    edx,esi
   140024d13:	mov    QWORD PTR [rsp+0x20],rax
   140024d18:	call   0x140024b4c
   140024d1d:	cmp    BYTE PTR [rsp+0x58],0x0
   140024d22:	je     0x140024d30
   140024d24:	mov    rcx,QWORD PTR [rsp+0x50]
   140024d29:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024d30:	mov    rbx,QWORD PTR [rsp+0x70]
   140024d35:	mov    rsi,QWORD PTR [rsp+0x78]
   140024d3a:	add    rsp,0x60
   140024d3e:	pop    rdi
   140024d3f:	ret    
   140024d40:	mov    QWORD PTR [rsp+0x10],rsi
   140024d45:	push   rbp
   140024d46:	push   rdi
   140024d47:	push   r14
   140024d49:	mov    rbp,rsp
   140024d4c:	sub    rsp,0x60
   140024d50:	movsxd rdi,ecx
   140024d53:	mov    r14d,edx
   140024d56:	lea    rcx,[rbp-0x20]
   140024d5a:	mov    rdx,r8
   140024d5d:	call   0x140019058
   140024d62:	lea    eax,[rdi+0x1]
   140024d65:	cmp    eax,0x100
   140024d6a:	ja     0x140024d7d
   140024d6c:	mov    rax,QWORD PTR [rbp-0x20]
   140024d70:	mov    rcx,QWORD PTR [rax+0x108]
   140024d77:	movzx  eax,WORD PTR [rcx+rdi*2]
   140024d7b:	jmp    0x140024df6
   140024d7d:	mov    esi,edi
   140024d7f:	lea    rdx,[rbp-0x20]
   140024d83:	sar    esi,0x8
   140024d86:	movzx  ecx,sil
   140024d8a:	call   0x1400251a4
   140024d8f:	mov    edx,0x1
   140024d94:	test   eax,eax
   140024d96:	je     0x140024daa
   140024d98:	mov    BYTE PTR [rbp+0x38],sil
   140024d9c:	mov    BYTE PTR [rbp+0x39],dil
   140024da0:	mov    BYTE PTR [rbp+0x3a],0x0
   140024da4:	lea    r9d,[rdx+0x1]
   140024da8:	jmp    0x140024db5
   140024daa:	mov    BYTE PTR [rbp+0x38],dil
   140024dae:	mov    BYTE PTR [rbp+0x39],0x0
   140024db2:	mov    r9d,edx
   140024db5:	mov    rax,QWORD PTR [rbp-0x20]
   140024db9:	mov    DWORD PTR [rsp+0x30],edx
   140024dbd:	lea    r8,[rbp+0x38]
   140024dc1:	mov    ecx,DWORD PTR [rax+0x4]
   140024dc4:	lea    rax,[rbp+0x20]
   140024dc8:	mov    DWORD PTR [rsp+0x28],ecx
   140024dcc:	lea    rcx,[rbp-0x20]
   140024dd0:	mov    QWORD PTR [rsp+0x20],rax
   140024dd5:	call   0x140024cc4
   140024dda:	test   eax,eax
   140024ddc:	jne    0x140024df2
   140024dde:	cmp    BYTE PTR [rbp-0x8],al
   140024de1:	je     0x140024dee
   140024de3:	mov    rax,QWORD PTR [rbp-0x10]
   140024de7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024dee:	xor    eax,eax
   140024df0:	jmp    0x140024e0a
   140024df2:	movzx  eax,WORD PTR [rbp+0x20]
   140024df6:	and    eax,r14d
   140024df9:	cmp    BYTE PTR [rbp-0x8],0x0
   140024dfd:	je     0x140024e0a
   140024dff:	mov    rcx,QWORD PTR [rbp-0x10]
   140024e03:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024e0a:	mov    rsi,QWORD PTR [rsp+0x88]
   140024e12:	add    rsp,0x60
   140024e16:	pop    r14
   140024e18:	pop    rdi
   140024e19:	pop    rbp
   140024e1a:	ret    
   140024e1b:	int3   
   140024e1c:	rex push rbx
   140024e1e:	sub    rsp,0x20
   140024e22:	and    DWORD PTR [rsp+0x40],0x0
   140024e27:	lea    r8,[rsp+0x40]
   140024e2c:	call   0x140025004
   140024e31:	mov    rbx,rax
   140024e34:	test   rax,rax
   140024e37:	jne    0x140024e54
   140024e39:	cmp    DWORD PTR [rsp+0x40],eax
   140024e3d:	je     0x140024e54
   140024e3f:	call   0x14001b864
   140024e44:	test   rax,rax
   140024e47:	je     0x140024e54
   140024e49:	call   0x14001b864
   140024e4e:	mov    ecx,DWORD PTR [rsp+0x40]
   140024e52:	mov    DWORD PTR [rax],ecx
   140024e54:	mov    rax,rbx
   140024e57:	add    rsp,0x20
   140024e5b:	pop    rbx
   140024e5c:	ret    
   140024e5d:	int3   
   140024e5e:	int3   
   140024e5f:	int3   
   140024e60:	rex push rbx
   140024e62:	sub    rsp,0x20
   140024e66:	xor    r10d,r10d
   140024e69:	test   rcx,rcx
   140024e6c:	je     0x140024e7c
   140024e6e:	test   rdx,rdx
   140024e71:	je     0x140024e7c
   140024e73:	test   r8,r8
   140024e76:	jne    0x140024e95
   140024e78:	mov    WORD PTR [rcx],r10w
   140024e7c:	call   0x14001b864
   140024e81:	mov    ebx,0x16
   140024e86:	mov    DWORD PTR [rax],ebx
   140024e88:	call   0x14001ffb8
   140024e8d:	mov    eax,ebx
   140024e8f:	add    rsp,0x20
   140024e93:	pop    rbx
   140024e94:	ret    
   140024e95:	mov    r9,rcx
   140024e98:	sub    r9,r8
   140024e9b:	movzx  eax,WORD PTR [r8]
   140024e9f:	mov    WORD PTR [r9+r8*1],ax
   140024ea4:	lea    r8,[r8+0x2]
   140024ea8:	test   ax,ax
   140024eab:	je     0x140024eb2
   140024ead:	dec    rdx
   140024eb0:	jne    0x140024e9b
   140024eb2:	test   rdx,rdx
   140024eb5:	jne    0x140024ec7
   140024eb7:	mov    WORD PTR [rcx],r10w
   140024ebb:	call   0x14001b864
   140024ec0:	mov    ebx,0x22
   140024ec5:	jmp    0x140024e86
   140024ec7:	xor    eax,eax
   140024ec9:	jmp    0x140024e8f
   140024ecb:	int3   
   140024ecc:	int3   
   140024ecd:	int3   
   140024ece:	int3   
   140024ecf:	int3   
   140024ed0:	int3   
   140024ed1:	int3   
   140024ed2:	int3   
   140024ed3:	int3   
   140024ed4:	int3   
   140024ed5:	int3   
   140024ed6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140024ee0:	sub    rsp,0x10
   140024ee4:	mov    QWORD PTR [rsp],r10
   140024ee8:	mov    QWORD PTR [rsp+0x8],r11
   140024eed:	xor    r11,r11
   140024ef0:	lea    r10,[rsp+0x18]
   140024ef5:	sub    r10,rax
   140024ef8:	cmovb  r10,r11
   140024efc:	mov    r11,QWORD PTR gs:0x10
   140024f05:	cmp    r10,r11
   140024f08:	jae    0x140024f20
   140024f0a:	and    r10w,0xf000
   140024f10:	lea    r11,[r11-0x1000]
   140024f17:	mov    BYTE PTR [r11],0x0
   140024f1b:	cmp    r10,r11
   140024f1e:	jne    0x140024f10
   140024f20:	mov    r10,QWORD PTR [rsp]
   140024f24:	mov    r11,QWORD PTR [rsp+0x8]
   140024f29:	add    rsp,0x10
   140024f2d:	ret    
   140024f2e:	int3   
   140024f2f:	int3   
   140024f30:	mov    QWORD PTR [rsp+0x8],rbx
   140024f35:	mov    QWORD PTR [rsp+0x10],rsi
   140024f3a:	push   rdi
   140024f3b:	sub    rsp,0x20
   140024f3f:	mov    rbx,rdx
   140024f42:	mov    rdi,rcx
   140024f45:	test   rcx,rcx
   140024f48:	jne    0x140024f54
   140024f4a:	mov    rcx,rdx
   140024f4d:	call   0x14001adf0
   140024f52:	jmp    0x140024fbe
   140024f54:	test   rdx,rdx
   140024f57:	jne    0x140024f60
   140024f59:	call   0x14001a1ac
   140024f5e:	jmp    0x140024fbc
   140024f60:	cmp    rdx,0xffffffffffffffe0
   140024f64:	ja     0x140024fa9
   140024f66:	mov    rcx,QWORD PTR [rip+0x1f0ab]        # 0x140044018
   140024f6d:	mov    eax,0x1
   140024f72:	test   rbx,rbx
   140024f75:	cmove  rbx,rax
   140024f79:	mov    r8,rdi
   140024f7c:	xor    edx,edx
   140024f7e:	mov    r9,rbx
   140024f81:	call   QWORD PTR [rip+0xa3f9]        # 0x14002f380
   140024f87:	mov    rsi,rax
   140024f8a:	test   rax,rax
   140024f8d:	jne    0x140024ffe
   140024f8f:	cmp    DWORD PTR [rip+0x1f9d7],eax        # 0x14004496c
   140024f95:	je     0x140024fe7
   140024f97:	mov    rcx,rbx
   140024f9a:	call   0x14001ec58
   140024f9f:	test   eax,eax
   140024fa1:	je     0x140024fce
   140024fa3:	cmp    rbx,0xffffffffffffffe0
   140024fa7:	jbe    0x140024f66
   140024fa9:	mov    rcx,rbx
   140024fac:	call   0x14001ec58
   140024fb1:	call   0x14001b864
   140024fb6:	mov    DWORD PTR [rax],0xc
   140024fbc:	xor    eax,eax
   140024fbe:	mov    rbx,QWORD PTR [rsp+0x30]
   140024fc3:	mov    rsi,QWORD PTR [rsp+0x38]
   140024fc8:	add    rsp,0x20
   140024fcc:	pop    rdi
   140024fcd:	ret    
   140024fce:	call   0x14001b864
   140024fd3:	mov    rbx,rax
   140024fd6:	call   QWORD PTR [rip+0xa1c4]        # 0x14002f1a0
   140024fdc:	mov    ecx,eax
   140024fde:	call   0x14001b884
   140024fe3:	mov    DWORD PTR [rbx],eax
   140024fe5:	jmp    0x140024fbc
   140024fe7:	call   0x14001b864
   140024fec:	mov    rbx,rax
   140024fef:	call   QWORD PTR [rip+0xa1ab]        # 0x14002f1a0
   140024ff5:	mov    ecx,eax
   140024ff7:	call   0x14001b884
   140024ffc:	mov    DWORD PTR [rbx],eax
   140024ffe:	mov    rax,rsi
   140025001:	jmp    0x140024fbe
   140025003:	int3   
   140025004:	mov    QWORD PTR [rsp+0x8],rbx
   140025009:	push   rdi
   14002500a:	sub    rsp,0x20
   14002500e:	mov    rdi,r8
   140025011:	mov    rbx,rdx
   140025014:	test   rcx,rcx
   140025017:	je     0x140025036
   140025019:	xor    edx,edx
   14002501b:	lea    rax,[rdx-0x20]
   14002501f:	div    rcx
   140025022:	cmp    rax,rbx
   140025025:	jae    0x140025036
   140025027:	call   0x14001b864
   14002502c:	mov    DWORD PTR [rax],0xc
   140025032:	xor    eax,eax
   140025034:	jmp    0x140025093
   140025036:	imul   rbx,rcx
   14002503a:	mov    eax,0x1
   14002503f:	test   rbx,rbx
   140025042:	cmove  rbx,rax
   140025046:	xor    eax,eax
   140025048:	cmp    rbx,0xffffffffffffffe0
   14002504c:	ja     0x140025066
   14002504e:	mov    rcx,QWORD PTR [rip+0x1efc3]        # 0x140044018
   140025055:	lea    edx,[rax+0x8]
   140025058:	mov    r8,rbx
   14002505b:	call   QWORD PTR [rip+0xa21f]        # 0x14002f280
   140025061:	test   rax,rax
   140025064:	jne    0x140025093
   140025066:	cmp    DWORD PTR [rip+0x1f8ff],0x0        # 0x14004496c
   14002506d:	je     0x140025088
   14002506f:	mov    rcx,rbx
   140025072:	call   0x14001ec58
   140025077:	test   eax,eax
   140025079:	jne    0x140025046
   14002507b:	test   rdi,rdi
   14002507e:	je     0x140025032
   140025080:	mov    DWORD PTR [rdi],0xc
   140025086:	jmp    0x140025032
   140025088:	test   rdi,rdi
   14002508b:	je     0x140025093
   14002508d:	mov    DWORD PTR [rdi],0xc
   140025093:	mov    rbx,QWORD PTR [rsp+0x30]
   140025098:	add    rsp,0x20
   14002509c:	pop    rdi
   14002509d:	ret    
   14002509e:	int3   
   14002509f:	int3   
   1400250a0:	xor    r8d,r8d
   1400250a3:	mov    eax,r8d
   1400250a6:	test   rdx,rdx
   1400250a9:	je     0x1400250bd
   1400250ab:	cmp    WORD PTR [rcx],r8w
   1400250af:	je     0x1400250bd
   1400250b1:	inc    rax
   1400250b4:	add    rcx,0x2
   1400250b8:	cmp    rax,rdx
   1400250bb:	jb     0x1400250ab
   1400250bd:	ret    
   1400250be:	int3   
   1400250bf:	int3   
   1400250c0:	neg    rcx
   1400250c3:	sbb    eax,eax
   1400250c5:	and    eax,0x1
   1400250c8:	ret    
   1400250c9:	int3   
   1400250ca:	int3   
   1400250cb:	int3   
   1400250cc:	int3   
   1400250cd:	int3   
   1400250ce:	int3   
   1400250cf:	int3   
   1400250d0:	int3   
   1400250d1:	int3   
   1400250d2:	int3   
   1400250d3:	int3   
   1400250d4:	int3   
   1400250d5:	int3   
   1400250d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400250e0:	sub    rsp,0x28
   1400250e4:	mov    QWORD PTR [rsp+0x30],rcx
   1400250e9:	mov    QWORD PTR [rsp+0x38],rdx
   1400250ee:	mov    DWORD PTR [rsp+0x40],r8d
   1400250f3:	mov    rdx,QWORD PTR [rdx]
   1400250f6:	mov    rax,rcx
   1400250f9:	call   0x140025170
   1400250fe:	call   rax
   140025100:	call   0x1400251a0
   140025105:	mov    rcx,rax
   140025108:	mov    rdx,QWORD PTR [rsp+0x38]
   14002510d:	mov    rdx,QWORD PTR [rdx]
   140025110:	mov    r8d,0x2
   140025116:	call   0x140025170
   14002511b:	add    rsp,0x28
   14002511f:	ret    
   140025120:	mov    rax,QWORD PTR [rsp]
   140025124:	mov    QWORD PTR [rcx],rax
   140025127:	ret    
   140025128:	int3   
   140025129:	int3   
   14002512a:	int3   
   14002512b:	int3   
   14002512c:	int3   
   14002512d:	int3   
   14002512e:	int3   
   14002512f:	int3   
   140025130:	int3   
   140025131:	int3   
   140025132:	int3   
   140025133:	int3   
   140025134:	int3   
   140025135:	int3   
   140025136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025140:	sub    rsp,0x4d8
   140025147:	xor    r8,r8
   14002514a:	xor    r9,r9
   14002514d:	mov    QWORD PTR [rsp+0x20],rsp
   140025152:	mov    QWORD PTR [rsp+0x28],r8
   140025157:	call   0x14002cf16
   14002515c:	add    rsp,0x4d8
   140025163:	ret    
   140025164:	int3   
   140025165:	int3   
   140025166:	int3   
   140025167:	int3   
   140025168:	int3   
   140025169:	int3   
   14002516a:	nop    WORD PTR [rax+rax*1+0x0]
   140025170:	mov    QWORD PTR [rsp+0x8],rcx
   140025175:	mov    QWORD PTR [rsp+0x18],rdx
   14002517a:	mov    DWORD PTR [rsp+0x10],r8d
   14002517f:	mov    r9,0x19930520
   140025186:	jmp    0x140025190
   140025188:	int3   
   140025189:	int3   
   14002518a:	int3   
   14002518b:	int3   
   14002518c:	int3   
   14002518d:	int3   
   14002518e:	xchg   ax,ax
   140025190:	ret    
   140025191:	int3   
   140025192:	int3   
   140025193:	int3   
   140025194:	int3   
   140025195:	int3   
   140025196:	int3   
   140025197:	nop    WORD PTR [rax+rax*1+0x0]
   1400251a0:	ret    
   1400251a1:	int3   
   1400251a2:	int3   
   1400251a3:	int3   
   1400251a4:	rex push rbx
   1400251a6:	sub    rsp,0x40
   1400251aa:	mov    ebx,ecx
   1400251ac:	lea    rcx,[rsp+0x20]
   1400251b1:	call   0x140019058
   1400251b6:	mov    rax,QWORD PTR [rsp+0x20]
   1400251bb:	movzx  edx,bl
   1400251be:	mov    rcx,QWORD PTR [rax+0x108]
   1400251c5:	movzx  eax,WORD PTR [rcx+rdx*2]
   1400251c9:	and    eax,0x8000
   1400251ce:	cmp    BYTE PTR [rsp+0x38],0x0
   1400251d3:	je     0x1400251e1
   1400251d5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400251da:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400251e1:	add    rsp,0x40
   1400251e5:	pop    rbx
   1400251e6:	ret    
   1400251e7:	int3   
   1400251e8:	rex push rbx
   1400251ea:	sub    rsp,0x40
   1400251ee:	mov    ebx,ecx
   1400251f0:	lea    rcx,[rsp+0x20]
   1400251f5:	xor    edx,edx
   1400251f7:	call   0x140019058
   1400251fc:	mov    rax,QWORD PTR [rsp+0x20]
   140025201:	movzx  edx,bl
   140025204:	mov    rcx,QWORD PTR [rax+0x108]
   14002520b:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002520f:	and    eax,0x8000
   140025214:	cmp    BYTE PTR [rsp+0x38],0x0
   140025219:	je     0x140025227
   14002521b:	mov    rcx,QWORD PTR [rsp+0x30]
   140025220:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025227:	add    rsp,0x40
   14002522b:	pop    rbx
   14002522c:	ret    
   14002522d:	int3   
   14002522e:	int3   
   14002522f:	int3   
   140025230:	mov    rcx,QWORD PTR [rip+0x1f751]        # 0x140044988
   140025237:	rex.W jmp QWORD PTR [rip+0x9fea]        # 0x14002f228
   14002523e:	int3   
   14002523f:	int3   
   140025240:	mov    QWORD PTR [rip+0x1f731],rcx        # 0x140044978
   140025247:	mov    QWORD PTR [rip+0x1f732],rcx        # 0x140044980
   14002524e:	mov    QWORD PTR [rip+0x1f733],rcx        # 0x140044988
   140025255:	mov    QWORD PTR [rip+0x1f734],rcx        # 0x140044990
   14002525c:	ret    
   14002525d:	int3   
   14002525e:	int3   
   14002525f:	int3   
   140025260:	mov    QWORD PTR [rsp+0x18],rbx
   140025265:	mov    QWORD PTR [rsp+0x20],rsi
   14002526a:	push   rdi
   14002526b:	push   r12
   14002526d:	push   r13
   14002526f:	push   r14
   140025271:	push   r15
   140025273:	sub    rsp,0x30
   140025277:	mov    ebx,ecx
   140025279:	xor    r13d,r13d
   14002527c:	and    DWORD PTR [rsp+0x68],r13d
   140025281:	xor    edi,edi
   140025283:	mov    DWORD PTR [rsp+0x60],edi
   140025287:	xor    esi,esi
   140025289:	mov    edx,ecx
   14002528b:	sub    edx,0x2
   14002528e:	je     0x140025358
   140025294:	sub    edx,0x2
   140025297:	je     0x1400252fb
   140025299:	sub    edx,0x2
   14002529c:	je     0x1400252eb
   14002529e:	sub    edx,0x2
   1400252a1:	je     0x1400252fb
   1400252a3:	sub    edx,0x3
   1400252a6:	je     0x1400252fb
   1400252a8:	sub    edx,0x4
   1400252ab:	je     0x1400252db
   1400252ad:	sub    edx,0x6
   1400252b0:	je     0x1400252c8
   1400252b2:	dec    edx
   1400252b4:	je     0x1400252eb
   1400252b6:	call   0x14001b864
   1400252bb:	mov    DWORD PTR [rax],0x16
   1400252c1:	call   0x14001ffb8
   1400252c6:	jmp    0x140025308
   1400252c8:	lea    r14,[rip+0x1f6b1]        # 0x140044980
   1400252cf:	mov    rcx,QWORD PTR [rip+0x1f6aa]        # 0x140044980
   1400252d6:	jmp    0x140025366
   1400252db:	lea    r14,[rip+0x1f6ae]        # 0x140044990
   1400252e2:	mov    rcx,QWORD PTR [rip+0x1f6a7]        # 0x140044990
   1400252e9:	jmp    0x140025366
   1400252eb:	lea    r14,[rip+0x1f696]        # 0x140044988
   1400252f2:	mov    rcx,QWORD PTR [rip+0x1f68f]        # 0x140044988
   1400252f9:	jmp    0x140025366
   1400252fb:	call   0x14001ef90
   140025300:	mov    rsi,rax
   140025303:	test   rax,rax
   140025306:	jne    0x140025310
   140025308:	or     eax,0xffffffff
   14002530b:	jmp    0x14002547b
   140025310:	mov    rdx,QWORD PTR [rax+0xa0]
   140025317:	mov    rcx,rdx
   14002531a:	movsxd r8,DWORD PTR [rip+0x1009f]        # 0x1400353c0
   140025321:	cmp    DWORD PTR [rcx+0x4],ebx
   140025324:	je     0x140025339
   140025326:	add    rcx,0x10
   14002532a:	mov    rax,r8
   14002532d:	shl    rax,0x4
   140025331:	add    rax,rdx
   140025334:	cmp    rcx,rax
   140025337:	jb     0x140025321
   140025339:	mov    rax,r8
   14002533c:	shl    rax,0x4
   140025340:	add    rax,rdx
   140025343:	cmp    rcx,rax
   140025346:	jae    0x14002534d
   140025348:	cmp    DWORD PTR [rcx+0x4],ebx
   14002534b:	je     0x14002534f
   14002534d:	xor    ecx,ecx
   14002534f:	lea    r14,[rcx+0x8]
   140025353:	mov    r15,QWORD PTR [r14]
   140025356:	jmp    0x140025378
   140025358:	lea    r14,[rip+0x1f619]        # 0x140044978
   14002535f:	mov    rcx,QWORD PTR [rip+0x1f612]        # 0x140044978
   140025366:	mov    edi,0x1
   14002536b:	mov    DWORD PTR [rsp+0x60],edi
   14002536f:	call   QWORD PTR [rip+0x9eb3]        # 0x14002f228
   140025375:	mov    r15,rax
   140025378:	cmp    r15,0x1
   14002537c:	jne    0x140025385
   14002537e:	xor    eax,eax
   140025380:	jmp    0x14002547b
   140025385:	test   r15,r15
   140025388:	jne    0x140025394
   14002538a:	lea    ecx,[r15+0x3]
   14002538e:	call   0x14001e96c
   140025393:	int3   
   140025394:	test   edi,edi
   140025396:	je     0x1400253a0
   140025398:	xor    ecx,ecx
   14002539a:	call   0x14001b118
   14002539f:	nop
   1400253a0:	mov    r12d,0x910
   1400253a6:	cmp    ebx,0xb
   1400253a9:	ja     0x1400253de
   1400253ab:	bt     r12d,ebx
   1400253af:	jae    0x1400253de
   1400253b1:	mov    r13,QWORD PTR [rsi+0xa8]
   1400253b8:	mov    QWORD PTR [rsp+0x28],r13
   1400253bd:	and    QWORD PTR [rsi+0xa8],0x0
   1400253c5:	cmp    ebx,0x8
   1400253c8:	jne    0x14002541c
   1400253ca:	mov    eax,DWORD PTR [rsi+0xb0]
   1400253d0:	mov    DWORD PTR [rsp+0x68],eax
   1400253d4:	mov    DWORD PTR [rsi+0xb0],0x8c
   1400253de:	cmp    ebx,0x8
   1400253e1:	jne    0x14002541c
   1400253e3:	mov    ecx,DWORD PTR [rip+0xffdf]        # 0x1400353c8
   1400253e9:	mov    edx,ecx
   1400253eb:	mov    DWORD PTR [rsp+0x20],ecx
   1400253ef:	mov    eax,DWORD PTR [rip+0xffd7]        # 0x1400353cc
   1400253f5:	add    ecx,eax
   1400253f7:	cmp    edx,ecx
   1400253f9:	jge    0x140025427
   1400253fb:	movsxd rcx,edx
   1400253fe:	add    rcx,rcx
   140025401:	mov    rax,QWORD PTR [rsi+0xa0]
   140025408:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14002540e:	inc    edx
   140025410:	mov    DWORD PTR [rsp+0x20],edx
   140025414:	mov    ecx,DWORD PTR [rip+0xffae]        # 0x1400353c8
   14002541a:	jmp    0x1400253ef
   14002541c:	xor    ecx,ecx
   14002541e:	call   QWORD PTR [rip+0x9dfc]        # 0x14002f220
   140025424:	mov    QWORD PTR [r14],rax
   140025427:	test   edi,edi
   140025429:	je     0x140025432
   14002542b:	xor    ecx,ecx
   14002542d:	call   0x14001b308
   140025432:	cmp    ebx,0x8
   140025435:	jne    0x140025444
   140025437:	mov    edx,DWORD PTR [rsi+0xb0]
   14002543d:	mov    ecx,ebx
   14002543f:	call   r15
   140025442:	jmp    0x140025449
   140025444:	mov    ecx,ebx
   140025446:	call   r15
   140025449:	cmp    ebx,0xb
   14002544c:	ja     0x14002537e
   140025452:	bt     r12d,ebx
   140025456:	jae    0x14002537e
   14002545c:	mov    QWORD PTR [rsi+0xa8],r13
   140025463:	cmp    ebx,0x8
   140025466:	jne    0x14002537e
   14002546c:	mov    eax,DWORD PTR [rsp+0x68]
   140025470:	mov    DWORD PTR [rsi+0xb0],eax
   140025476:	jmp    0x14002537e
   14002547b:	mov    rbx,QWORD PTR [rsp+0x70]
   140025480:	mov    rsi,QWORD PTR [rsp+0x78]
   140025485:	add    rsp,0x30
   140025489:	pop    r15
   14002548b:	pop    r14
   14002548d:	pop    r13
   14002548f:	pop    r12
   140025491:	pop    rdi
   140025492:	ret    
   140025493:	int3   
   140025494:	sub    rsp,0x28
   140025498:	xor    r8d,r8d
   14002549b:	mov    r9,rdx
   14002549e:	mov    r10,rcx
   1400254a1:	cmp    DWORD PTR [rip+0x1f4c8],r8d        # 0x140044970
   1400254a8:	jne    0x14002550f
   1400254aa:	test   rcx,rcx
   1400254ad:	jne    0x1400254c9
   1400254af:	call   0x14001b864
   1400254b4:	mov    DWORD PTR [rax],0x16
   1400254ba:	call   0x14001ffb8
   1400254bf:	mov    eax,0x7fffffff
   1400254c4:	add    rsp,0x28
   1400254c8:	ret    
   1400254c9:	test   rdx,rdx
   1400254cc:	je     0x1400254af
   1400254ce:	sub    r10,rdx
   1400254d1:	movzx  edx,WORD PTR [r10+r9*1]
   1400254d6:	lea    eax,[rdx-0x41]
   1400254d9:	cmp    ax,0x19
   1400254dd:	ja     0x1400254e3
   1400254df:	add    dx,0x20
   1400254e3:	movzx  ecx,WORD PTR [r9]
   1400254e7:	lea    eax,[rcx-0x41]
   1400254ea:	cmp    ax,0x19
   1400254ee:	ja     0x1400254f4
   1400254f0:	add    cx,0x20
   1400254f4:	add    r9,0x2
   1400254f8:	test   dx,dx
   1400254fb:	je     0x140025502
   1400254fd:	cmp    dx,cx
   140025500:	je     0x1400254d1
   140025502:	movzx  ecx,cx
   140025505:	movzx  eax,dx
   140025508:	sub    eax,ecx
   14002550a:	add    rsp,0x28
   14002550e:	ret    
   14002550f:	add    rsp,0x28
   140025513:	jmp    0x140025518
   140025518:	mov    rax,rsp
   14002551b:	mov    QWORD PTR [rax+0x8],rbx
   14002551f:	mov    QWORD PTR [rax+0x10],rbp
   140025523:	mov    QWORD PTR [rax+0x18],rsi
   140025527:	push   rdi
   140025528:	sub    rsp,0x40
   14002552c:	mov    rsi,rcx
   14002552f:	mov    rdi,rdx
   140025532:	lea    rcx,[rax-0x28]
   140025536:	mov    rdx,r8
   140025539:	call   0x140019058
   14002553e:	xor    ebp,ebp
   140025540:	test   rsi,rsi
   140025543:	je     0x14002554a
   140025545:	test   rdi,rdi
   140025548:	jne    0x140025561
   14002554a:	call   0x14001b864
   14002554f:	mov    DWORD PTR [rax],0x16
   140025555:	call   0x14001ffb8
   14002555a:	mov    eax,0x7fffffff
   14002555f:	jmp    0x1400255dd
   140025561:	mov    rax,QWORD PTR [rsp+0x20]
   140025566:	cmp    QWORD PTR [rax+0x138],rbp
   14002556d:	jne    0x1400255a3
   14002556f:	sub    rsi,rdi
   140025572:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140025576:	lea    eax,[rbx-0x41]
   140025579:	cmp    ax,0x19
   14002557d:	ja     0x140025583
   14002557f:	add    bx,0x20
   140025583:	movzx  ecx,WORD PTR [rdi]
   140025586:	lea    eax,[rcx-0x41]
   140025589:	cmp    ax,0x19
   14002558d:	ja     0x140025593
   14002558f:	add    cx,0x20
   140025593:	add    rdi,0x2
   140025597:	test   bx,bx
   14002559a:	je     0x1400255d5
   14002559c:	cmp    bx,cx
   14002559f:	je     0x140025572
   1400255a1:	jmp    0x1400255d5
   1400255a3:	movzx  ecx,WORD PTR [rsi]
   1400255a6:	lea    rdx,[rsp+0x20]
   1400255ab:	call   0x140019100
   1400255b0:	movzx  ecx,WORD PTR [rdi]
   1400255b3:	lea    rdx,[rsp+0x20]
   1400255b8:	movzx  ebx,ax
   1400255bb:	lea    rsi,[rsi+0x2]
   1400255bf:	call   0x140019100
   1400255c4:	lea    rdi,[rdi+0x2]
   1400255c8:	movzx  ecx,ax
   1400255cb:	test   bx,bx
   1400255ce:	je     0x1400255d5
   1400255d0:	cmp    bx,ax
   1400255d3:	je     0x1400255a3
   1400255d5:	movzx  ecx,cx
   1400255d8:	movzx  eax,bx
   1400255db:	sub    eax,ecx
   1400255dd:	cmp    BYTE PTR [rsp+0x38],bpl
   1400255e2:	je     0x1400255f0
   1400255e4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400255e9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400255f0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400255f5:	mov    rbp,QWORD PTR [rsp+0x58]
   1400255fa:	mov    rsi,QWORD PTR [rsp+0x60]
   1400255ff:	add    rsp,0x40
   140025603:	pop    rdi
   140025604:	ret    
   140025605:	int3   
   140025606:	int3   
   140025607:	int3   
   140025608:	int3   
   140025609:	int3   
   14002560a:	int3   
   14002560b:	int3   
   14002560c:	int3   
   14002560d:	int3   
   14002560e:	int3   
   14002560f:	int3   
   140025610:	movsxd r8,DWORD PTR [rcx+0x3c]
   140025614:	xor    r9d,r9d
   140025617:	mov    r10,rdx
   14002561a:	add    r8,rcx
   14002561d:	movzx  eax,WORD PTR [r8+0x14]
   140025622:	movzx  r11d,WORD PTR [r8+0x6]
   140025627:	add    rax,0x18
   14002562b:	add    rax,r8
   14002562e:	test   r11d,r11d
   140025631:	je     0x140025651
   140025633:	mov    edx,DWORD PTR [rax+0xc]
   140025636:	cmp    r10,rdx
   140025639:	jb     0x140025645
   14002563b:	mov    ecx,DWORD PTR [rax+0x8]
   14002563e:	add    ecx,edx
   140025640:	cmp    r10,rcx
   140025643:	jb     0x140025653
   140025645:	inc    r9d
   140025648:	add    rax,0x28
   14002564c:	cmp    r9d,r11d
   14002564f:	jb     0x140025633
   140025651:	xor    eax,eax
   140025653:	ret    
   140025654:	int3   
   140025655:	int3   
   140025656:	int3   
   140025657:	int3   
   140025658:	int3   
   140025659:	int3   
   14002565a:	int3   
   14002565b:	int3   
   14002565c:	int3   
   14002565d:	int3   
   14002565e:	int3   
   14002565f:	int3   
   140025660:	mov    QWORD PTR [rsp+0x8],rbx
   140025665:	push   rdi
   140025666:	sub    rsp,0x20
   14002566a:	mov    rbx,rcx
   14002566d:	lea    rdi,[rip+0xfffffffffffda98c]        # 0x140000000
   140025674:	mov    rcx,rdi
   140025677:	call   0x1400256b0
   14002567c:	test   eax,eax
   14002567e:	je     0x1400256a2
   140025680:	sub    rbx,rdi
   140025683:	mov    rdx,rbx
   140025686:	mov    rcx,rdi
   140025689:	call   0x140025610
   14002568e:	test   rax,rax
   140025691:	je     0x1400256a2
   140025693:	mov    eax,DWORD PTR [rax+0x24]
   140025696:	shr    eax,0x1f
   140025699:	not    eax
   14002569b:	and    eax,0x1
   14002569e:	jmp    0x1400256a2
   1400256a0:	xor    eax,eax
   1400256a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400256a7:	add    rsp,0x20
   1400256ab:	pop    rdi
   1400256ac:	ret    
   1400256ad:	int3   
   1400256ae:	int3   
   1400256af:	int3   
   1400256b0:	mov    rax,rcx
   1400256b3:	mov    ecx,0x5a4d
   1400256b8:	cmp    WORD PTR [rax],cx
   1400256bb:	je     0x1400256c0
   1400256bd:	xor    eax,eax
   1400256bf:	ret    
   1400256c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400256c4:	add    rcx,rax
   1400256c7:	xor    eax,eax
   1400256c9:	cmp    DWORD PTR [rcx],0x4550
   1400256cf:	jne    0x1400256dd
   1400256d1:	mov    edx,0x20b
   1400256d6:	cmp    WORD PTR [rcx+0x18],dx
   1400256da:	sete   al
   1400256dd:	ret    
   1400256de:	int3   
   1400256df:	int3   
   1400256e0:	mov    QWORD PTR [rip+0x1f379],rcx        # 0x140044a60
   1400256e7:	ret    
   1400256e8:	test   rcx,rcx
   1400256eb:	je     0x1400257f1
   1400256f1:	push   rbx
   1400256f2:	sub    rsp,0x20
   1400256f6:	mov    rbx,rcx
   1400256f9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400256fd:	cmp    rcx,QWORD PTR [rip+0x1bae4]        # 0x1400411e8
   140025704:	je     0x14002570b
   140025706:	call   0x14001a1ac
   14002570b:	mov    rcx,QWORD PTR [rbx+0x20]
   14002570f:	cmp    rcx,QWORD PTR [rip+0x1bada]        # 0x1400411f0
   140025716:	je     0x14002571d
   140025718:	call   0x14001a1ac
   14002571d:	mov    rcx,QWORD PTR [rbx+0x28]
   140025721:	cmp    rcx,QWORD PTR [rip+0x1bad0]        # 0x1400411f8
   140025728:	je     0x14002572f
   14002572a:	call   0x14001a1ac
   14002572f:	mov    rcx,QWORD PTR [rbx+0x30]
   140025733:	cmp    rcx,QWORD PTR [rip+0x1bac6]        # 0x140041200
   14002573a:	je     0x140025741
   14002573c:	call   0x14001a1ac
   140025741:	mov    rcx,QWORD PTR [rbx+0x38]
   140025745:	cmp    rcx,QWORD PTR [rip+0x1babc]        # 0x140041208
   14002574c:	je     0x140025753
   14002574e:	call   0x14001a1ac
   140025753:	mov    rcx,QWORD PTR [rbx+0x40]
   140025757:	cmp    rcx,QWORD PTR [rip+0x1bab2]        # 0x140041210
   14002575e:	je     0x140025765
   140025760:	call   0x14001a1ac
   140025765:	mov    rcx,QWORD PTR [rbx+0x48]
   140025769:	cmp    rcx,QWORD PTR [rip+0x1baa8]        # 0x140041218
   140025770:	je     0x140025777
   140025772:	call   0x14001a1ac
   140025777:	mov    rcx,QWORD PTR [rbx+0x68]
   14002577b:	cmp    rcx,QWORD PTR [rip+0x1bab6]        # 0x140041238
   140025782:	je     0x140025789
   140025784:	call   0x14001a1ac
   140025789:	mov    rcx,QWORD PTR [rbx+0x70]
   14002578d:	cmp    rcx,QWORD PTR [rip+0x1baac]        # 0x140041240
   140025794:	je     0x14002579b
   140025796:	call   0x14001a1ac
   14002579b:	mov    rcx,QWORD PTR [rbx+0x78]
   14002579f:	cmp    rcx,QWORD PTR [rip+0x1baa2]        # 0x140041248
   1400257a6:	je     0x1400257ad
   1400257a8:	call   0x14001a1ac
   1400257ad:	mov    rcx,QWORD PTR [rbx+0x80]
   1400257b4:	cmp    rcx,QWORD PTR [rip+0x1ba95]        # 0x140041250
   1400257bb:	je     0x1400257c2
   1400257bd:	call   0x14001a1ac
   1400257c2:	mov    rcx,QWORD PTR [rbx+0x88]
   1400257c9:	cmp    rcx,QWORD PTR [rip+0x1ba88]        # 0x140041258
   1400257d0:	je     0x1400257d7
   1400257d2:	call   0x14001a1ac
   1400257d7:	mov    rcx,QWORD PTR [rbx+0x90]
   1400257de:	cmp    rcx,QWORD PTR [rip+0x1ba7b]        # 0x140041260
   1400257e5:	je     0x1400257ec
   1400257e7:	call   0x14001a1ac
   1400257ec:	add    rsp,0x20
   1400257f0:	pop    rbx
   1400257f1:	ret    
   1400257f2:	int3   
   1400257f3:	int3   
   1400257f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400257f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400257fe:	mov    QWORD PTR [rsp+0x18],rdi
   140025803:	push   rbp
   140025804:	push   r12
   140025806:	push   r13
   140025808:	push   r14
   14002580a:	push   r15
   14002580c:	mov    rbp,rsp
   14002580f:	sub    rsp,0x40
   140025813:	xor    ebx,ebx
   140025815:	mov    rsi,rcx
   140025818:	mov    QWORD PTR [rbp-0x10],rcx
   14002581c:	mov    r15d,ebx
   14002581f:	mov    QWORD PTR [rbp-0x8],rbx
   140025823:	cmp    QWORD PTR [rcx+0x140],rbx
   14002582a:	jne    0x140025844
   14002582c:	cmp    QWORD PTR [rcx+0x148],rbx
   140025833:	jne    0x140025844
   140025835:	mov    r12d,ebx
   140025838:	lea    r14,[rip+0x1b991]        # 0x1400411d0
   14002583f:	jmp    0x140025c87
   140025844:	mov    edx,0x98
   140025849:	mov    ecx,0x1
   14002584e:	call   0x14001c1dc
   140025853:	mov    r14,rax
   140025856:	test   rax,rax
   140025859:	jne    0x140025865
   14002585b:	mov    eax,0x1
   140025860:	jmp    0x140025cd6
   140025865:	mov    edi,0x4
   14002586a:	mov    ecx,edi
   14002586c:	call   0x14001c25c
   140025871:	mov    r12,rax
   140025874:	test   rax,rax
   140025877:	jne    0x140025883
   140025879:	mov    rcx,r14
   14002587c:	call   0x14001a1ac
   140025881:	jmp    0x14002585b
   140025883:	mov    DWORD PTR [rax],ebx
   140025885:	cmp    QWORD PTR [rsi+0x140],rbx
   14002588c:	je     0x140025bc4
   140025892:	mov    rcx,rdi
   140025895:	call   0x14001c25c
   14002589a:	mov    r15,rax
   14002589d:	test   rax,rax
   1400258a0:	jne    0x1400258af
   1400258a2:	mov    rcx,r14
   1400258a5:	call   0x14001a1ac
   1400258aa:	mov    rcx,r12
   1400258ad:	jmp    0x14002587c
   1400258af:	mov    DWORD PTR [rax],ebx
   1400258b1:	mov    rdi,QWORD PTR [rsi+0x140]
   1400258b8:	mov    r9d,0x15
   1400258be:	lea    rax,[r14+0x18]
   1400258c2:	lea    rcx,[rbp-0x10]
   1400258c6:	lea    edx,[r9-0x14]
   1400258ca:	mov    r8,rdi
   1400258cd:	mov    QWORD PTR [rsp+0x20],rax
   1400258d2:	call   0x140020d6c
   1400258d7:	lea    rcx,[r14+0x20]
   1400258db:	mov    r9d,0x14
   1400258e1:	mov    QWORD PTR [rsp+0x20],rcx
   1400258e6:	lea    edx,[r9-0x13]
   1400258ea:	lea    rcx,[rbp-0x10]
   1400258ee:	mov    r8,rdi
   1400258f1:	mov    ebx,eax
   1400258f3:	call   0x140020d6c
   1400258f8:	lea    rcx,[r14+0x28]
   1400258fc:	mov    r9d,0x16
   140025902:	mov    QWORD PTR [rsp+0x20],rcx
   140025907:	lea    edx,[r9-0x15]
   14002590b:	lea    rcx,[rbp-0x10]
   14002590f:	mov    r8,rdi
   140025912:	or     ebx,eax
   140025914:	call   0x140020d6c
   140025919:	mov    r9d,0x17
   14002591f:	lea    rcx,[rbp-0x10]
   140025923:	or     ebx,eax
   140025925:	lea    rax,[r14+0x30]
   140025929:	lea    edx,[r9-0x16]
   14002592d:	mov    r8,rdi
   140025930:	mov    QWORD PTR [rsp+0x20],rax
   140025935:	call   0x140020d6c
   14002593a:	mov    r9d,0x18
   140025940:	lea    r13,[r14+0x38]
   140025944:	lea    rcx,[rbp-0x10]
   140025948:	lea    edx,[r9-0x17]
   14002594c:	mov    r8,rdi
   14002594f:	or     ebx,eax
   140025951:	mov    QWORD PTR [rsp+0x20],r13
   140025956:	call   0x140020d6c
   14002595b:	mov    r9d,0x50
   140025961:	or     ebx,eax
   140025963:	lea    rax,[r14+0x40]
   140025967:	lea    rcx,[rbp-0x10]
   14002596b:	lea    edx,[r9-0x4f]
   14002596f:	mov    r8,rdi
   140025972:	mov    QWORD PTR [rsp+0x20],rax
   140025977:	call   0x140020d6c
   14002597c:	mov    r9d,0x51
   140025982:	or     ebx,eax
   140025984:	lea    rax,[r14+0x48]
   140025988:	lea    rcx,[rbp-0x10]
   14002598c:	lea    edx,[r9-0x50]
   140025990:	mov    r8,rdi
   140025993:	mov    QWORD PTR [rsp+0x20],rax
   140025998:	call   0x140020d6c
   14002599d:	lea    rcx,[rbp-0x10]
   1400259a1:	mov    r9d,0x1a
   1400259a7:	or     ebx,eax
   1400259a9:	lea    rax,[r14+0x50]
   1400259ad:	mov    r8,rdi
   1400259b0:	xor    edx,edx
   1400259b2:	mov    QWORD PTR [rsp+0x20],rax
   1400259b7:	call   0x140020d6c
   1400259bc:	lea    rcx,[rbp-0x10]
   1400259c0:	mov    r9d,0x19
   1400259c6:	or     ebx,eax
   1400259c8:	lea    rax,[r14+0x51]
   1400259cc:	mov    r8,rdi
   1400259cf:	xor    edx,edx
   1400259d1:	mov    QWORD PTR [rsp+0x20],rax
   1400259d6:	call   0x140020d6c
   1400259db:	lea    rcx,[rbp-0x10]
   1400259df:	mov    r9d,0x54
   1400259e5:	or     ebx,eax
   1400259e7:	lea    rax,[r14+0x52]
   1400259eb:	mov    r8,rdi
   1400259ee:	xor    edx,edx
   1400259f0:	mov    QWORD PTR [rsp+0x20],rax
   1400259f5:	call   0x140020d6c
   1400259fa:	or     ebx,eax
   1400259fc:	lea    rax,[r14+0x53]
   140025a00:	lea    rcx,[rbp-0x10]
   140025a04:	mov    r9d,0x55
   140025a0a:	mov    r8,rdi
   140025a0d:	xor    edx,edx
   140025a0f:	mov    QWORD PTR [rsp+0x20],rax
   140025a14:	call   0x140020d6c
   140025a19:	lea    rcx,[rbp-0x10]
   140025a1d:	or     ebx,eax
   140025a1f:	lea    rax,[r14+0x54]
   140025a23:	mov    r9d,0x56
   140025a29:	mov    r8,rdi
   140025a2c:	xor    edx,edx
   140025a2e:	mov    QWORD PTR [rsp+0x20],rax
   140025a33:	call   0x140020d6c
   140025a38:	lea    rcx,[rbp-0x10]
   140025a3c:	mov    r9d,0x57
   140025a42:	or     ebx,eax
   140025a44:	lea    rax,[r14+0x55]
   140025a48:	mov    r8,rdi
   140025a4b:	xor    edx,edx
   140025a4d:	mov    QWORD PTR [rsp+0x20],rax
   140025a52:	call   0x140020d6c
   140025a57:	lea    rcx,[rbp-0x10]
   140025a5b:	mov    r9d,0x52
   140025a61:	or     ebx,eax
   140025a63:	lea    rax,[r14+0x56]
   140025a67:	mov    r8,rdi
   140025a6a:	xor    edx,edx
   140025a6c:	mov    QWORD PTR [rsp+0x20],rax
   140025a71:	call   0x140020d6c
   140025a76:	lea    rcx,[rbp-0x10]
   140025a7a:	mov    r9d,0x53
   140025a80:	or     ebx,eax
   140025a82:	lea    rax,[r14+0x57]
   140025a86:	mov    r8,rdi
   140025a89:	xor    edx,edx
   140025a8b:	mov    QWORD PTR [rsp+0x20],rax
   140025a90:	call   0x140020d6c
   140025a95:	mov    r9d,0x15
   140025a9b:	lea    rcx,[rbp-0x10]
   140025a9f:	or     ebx,eax
   140025aa1:	lea    rax,[r14+0x68]
   140025aa5:	lea    edx,[r9-0x13]
   140025aa9:	mov    r8,rdi
   140025aac:	mov    QWORD PTR [rsp+0x20],rax
   140025ab1:	call   0x140020d6c
   140025ab6:	mov    r9d,0x14
   140025abc:	lea    rcx,[rbp-0x10]
   140025ac0:	or     ebx,eax
   140025ac2:	lea    rax,[r14+0x70]
   140025ac6:	lea    edx,[r9-0x12]
   140025aca:	mov    r8,rdi
   140025acd:	mov    QWORD PTR [rsp+0x20],rax
   140025ad2:	call   0x140020d6c
   140025ad7:	mov    r9d,0x16
   140025add:	lea    rcx,[rbp-0x10]
   140025ae1:	or     ebx,eax
   140025ae3:	lea    rax,[r14+0x78]
   140025ae7:	lea    edx,[r9-0x14]
   140025aeb:	mov    r8,rdi
   140025aee:	mov    QWORD PTR [rsp+0x20],rax
   140025af3:	call   0x140020d6c
   140025af8:	mov    r9d,0x17
   140025afe:	lea    rcx,[rbp-0x10]
   140025b02:	or     ebx,eax
   140025b04:	lea    rax,[r14+0x80]
   140025b0b:	lea    edx,[r9-0x15]
   140025b0f:	mov    r8,rdi
   140025b12:	mov    QWORD PTR [rsp+0x20],rax
   140025b17:	call   0x140020d6c
   140025b1c:	mov    r9d,0x50
   140025b22:	lea    rcx,[rbp-0x10]
   140025b26:	or     ebx,eax
   140025b28:	lea    rax,[r14+0x88]
   140025b2f:	lea    edx,[r9-0x4e]
   140025b33:	mov    r8,rdi
   140025b36:	mov    QWORD PTR [rsp+0x20],rax
   140025b3b:	call   0x140020d6c
   140025b40:	or     ebx,eax
   140025b42:	mov    r9d,0x51
   140025b48:	lea    rax,[r14+0x90]
   140025b4f:	lea    rcx,[rbp-0x10]
   140025b53:	lea    edx,[r9-0x4f]
   140025b57:	mov    r8,rdi
   140025b5a:	mov    QWORD PTR [rsp+0x20],rax
   140025b5f:	call   0x140020d6c
   140025b64:	or     eax,ebx
   140025b66:	je     0x140025b88
   140025b68:	mov    rcx,r14
   140025b6b:	call   0x1400256e8
   140025b70:	mov    rcx,r14
   140025b73:	call   0x14001a1ac
   140025b78:	mov    rcx,r12
   140025b7b:	call   0x14001a1ac
   140025b80:	mov    rcx,r15
   140025b83:	jmp    0x14002587c
   140025b88:	mov    rdx,QWORD PTR [r13+0x0]
   140025b8c:	xor    ebx,ebx
   140025b8e:	jmp    0x140025ba1
   140025b90:	mov    cl,BYTE PTR [rdx]
   140025b92:	lea    eax,[rcx-0x30]
   140025b95:	cmp    al,0x9
   140025b97:	ja     0x140025baa
   140025b99:	sub    cl,0x30
   140025b9c:	mov    BYTE PTR [rdx],cl
   140025b9e:	inc    rdx
   140025ba1:	cmp    BYTE PTR [rdx],bl
   140025ba3:	jne    0x140025b90
   140025ba5:	jmp    0x140025c2a
   140025baa:	cmp    cl,0x3b
   140025bad:	jne    0x140025b9e
   140025baf:	mov    r8,rdx
   140025bb2:	lea    rcx,[r8+0x1]
   140025bb6:	mov    al,BYTE PTR [rcx]
   140025bb8:	mov    BYTE PTR [r8],al
   140025bbb:	mov    r8,rcx
   140025bbe:	test   al,al
   140025bc0:	jne    0x140025bb2
   140025bc2:	jmp    0x140025ba1
   140025bc4:	lea    rax,[rip+0x1b605]        # 0x1400411d0
   140025bcb:	mov    edx,0x80
   140025bd0:	movups xmm0,XMMWORD PTR [rax]
   140025bd3:	movups XMMWORD PTR [r14],xmm0
   140025bd7:	movups xmm1,XMMWORD PTR [rax+0x10]
   140025bdb:	movups XMMWORD PTR [r14+0x10],xmm1
   140025be0:	movups xmm0,XMMWORD PTR [rax+0x20]
   140025be4:	movups XMMWORD PTR [r14+0x20],xmm0
   140025be9:	movups xmm1,XMMWORD PTR [rax+0x30]
   140025bed:	movups XMMWORD PTR [r14+0x30],xmm1
   140025bf2:	movups xmm0,XMMWORD PTR [rax+0x40]
   140025bf6:	movups XMMWORD PTR [r14+0x40],xmm0
   140025bfb:	movups xmm1,XMMWORD PTR [rax+0x50]
   140025bff:	movups XMMWORD PTR [r14+0x50],xmm1
   140025c04:	movups xmm0,XMMWORD PTR [rax+0x60]
   140025c08:	movups XMMWORD PTR [r14+0x60],xmm0
   140025c0d:	movups xmm0,XMMWORD PTR [rax+0x70]
   140025c11:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   140025c17:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   140025c1b:	movups XMMWORD PTR [r14+rdx*1],xmm1
   140025c20:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   140025c25:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   140025c2a:	mov    rax,QWORD PTR [rsi+0xf0]
   140025c31:	mov    rcx,QWORD PTR [rax]
   140025c34:	mov    QWORD PTR [r14],rcx
   140025c37:	mov    rax,QWORD PTR [rsi+0xf0]
   140025c3e:	mov    rcx,QWORD PTR [rax+0x8]
   140025c42:	mov    QWORD PTR [r14+0x8],rcx
   140025c46:	mov    rax,QWORD PTR [rsi+0xf0]
   140025c4d:	mov    rcx,QWORD PTR [rax+0x10]
   140025c51:	mov    QWORD PTR [r14+0x10],rcx
   140025c55:	mov    rax,QWORD PTR [rsi+0xf0]
   140025c5c:	mov    rcx,QWORD PTR [rax+0x58]
   140025c60:	mov    QWORD PTR [r14+0x58],rcx
   140025c64:	mov    rax,QWORD PTR [rsi+0xf0]
   140025c6b:	mov    rcx,QWORD PTR [rax+0x60]
   140025c6f:	mov    QWORD PTR [r14+0x60],rcx
   140025c73:	mov    DWORD PTR [r12],0x1
   140025c7b:	test   r15,r15
   140025c7e:	je     0x140025c87
   140025c80:	mov    DWORD PTR [r15],0x1
   140025c87:	mov    rax,QWORD PTR [rsi+0xe8]
   140025c8e:	test   rax,rax
   140025c91:	je     0x140025c96
   140025c93:	lock dec DWORD PTR [rax]
   140025c96:	mov    rcx,QWORD PTR [rsi+0xd8]
   140025c9d:	test   rcx,rcx
   140025ca0:	je     0x140025cbf
   140025ca2:	lock dec DWORD PTR [rcx]
   140025ca5:	jne    0x140025cbf
   140025ca7:	mov    rcx,QWORD PTR [rsi+0xf0]
   140025cae:	call   0x14001a1ac
   140025cb3:	mov    rcx,QWORD PTR [rsi+0xd8]
   140025cba:	call   0x14001a1ac
   140025cbf:	mov    QWORD PTR [rsi+0xe8],r15
   140025cc6:	mov    QWORD PTR [rsi+0xd8],r12
   140025ccd:	mov    QWORD PTR [rsi+0xf0],r14
   140025cd4:	xor    eax,eax
   140025cd6:	lea    r11,[rsp+0x40]
   140025cdb:	mov    rbx,QWORD PTR [r11+0x30]
   140025cdf:	mov    rsi,QWORD PTR [r11+0x38]
   140025ce3:	mov    rdi,QWORD PTR [r11+0x40]
   140025ce7:	mov    rsp,r11
   140025cea:	pop    r15
   140025cec:	pop    r14
   140025cee:	pop    r13
   140025cf0:	pop    r12
   140025cf2:	pop    rbp
   140025cf3:	ret    
   140025cf4:	test   rcx,rcx
   140025cf7:	je     0x140025d5f
   140025cf9:	push   rbx
   140025cfa:	sub    rsp,0x20
   140025cfe:	mov    rbx,rcx
   140025d01:	mov    rcx,QWORD PTR [rcx]
   140025d04:	cmp    rcx,QWORD PTR [rip+0x1b4c5]        # 0x1400411d0
   140025d0b:	je     0x140025d12
   140025d0d:	call   0x14001a1ac
   140025d12:	mov    rcx,QWORD PTR [rbx+0x8]
   140025d16:	cmp    rcx,QWORD PTR [rip+0x1b4bb]        # 0x1400411d8
   140025d1d:	je     0x140025d24
   140025d1f:	call   0x14001a1ac
   140025d24:	mov    rcx,QWORD PTR [rbx+0x10]
   140025d28:	cmp    rcx,QWORD PTR [rip+0x1b4b1]        # 0x1400411e0
   140025d2f:	je     0x140025d36
   140025d31:	call   0x14001a1ac
   140025d36:	mov    rcx,QWORD PTR [rbx+0x58]
   140025d3a:	cmp    rcx,QWORD PTR [rip+0x1b4e7]        # 0x140041228
   140025d41:	je     0x140025d48
   140025d43:	call   0x14001a1ac
   140025d48:	mov    rcx,QWORD PTR [rbx+0x60]
   140025d4c:	cmp    rcx,QWORD PTR [rip+0x1b4dd]        # 0x140041230
   140025d53:	je     0x140025d5a
   140025d55:	call   0x14001a1ac
   140025d5a:	add    rsp,0x20
   140025d5e:	pop    rbx
   140025d5f:	ret    
   140025d60:	mov    rax,rsp
   140025d63:	mov    QWORD PTR [rax+0x8],rbx
   140025d67:	mov    QWORD PTR [rax+0x10],rbp
   140025d6b:	mov    QWORD PTR [rax+0x18],rsi
   140025d6f:	push   rdi
   140025d70:	push   r12
   140025d72:	push   r13
   140025d74:	push   r14
   140025d76:	push   r15
   140025d78:	sub    rsp,0x40
   140025d7c:	xor    ebx,ebx
   140025d7e:	mov    rsi,rcx
   140025d81:	mov    QWORD PTR [rax-0x38],rcx
   140025d85:	mov    QWORD PTR [rax-0x30],rbx
   140025d89:	cmp    QWORD PTR [rcx+0x148],rbx
   140025d90:	jne    0x140025dad
   140025d92:	cmp    QWORD PTR [rcx+0x140],rbx
   140025d99:	jne    0x140025dad
   140025d9b:	mov    r15d,ebx
   140025d9e:	mov    r12d,ebx
   140025da1:	lea    r14,[rip+0x1b428]        # 0x1400411d0
   140025da8:	jmp    0x140025fb9
   140025dad:	mov    ebp,0x1
   140025db2:	mov    edx,0x98
   140025db7:	mov    ecx,ebp
   140025db9:	call   0x14001c1dc
   140025dbe:	mov    r14,rax
   140025dc1:	test   rax,rax
   140025dc4:	jne    0x140025dcd
   140025dc6:	mov    eax,ebp
   140025dc8:	jmp    0x140026008
   140025dcd:	mov    rax,QWORD PTR [rsi+0xf0]
   140025dd4:	mov    edx,0x80
   140025dd9:	lea    edi,[rdx-0x7c]
   140025ddc:	mov    ecx,edi
   140025dde:	movups xmm0,XMMWORD PTR [rax]
   140025de1:	movups XMMWORD PTR [r14],xmm0
   140025de5:	movups xmm1,XMMWORD PTR [rax+0x10]
   140025de9:	movups XMMWORD PTR [r14+0x10],xmm1
   140025dee:	movups xmm0,XMMWORD PTR [rax+0x20]
   140025df2:	movups XMMWORD PTR [r14+0x20],xmm0
   140025df7:	movups xmm1,XMMWORD PTR [rax+0x30]
   140025dfb:	movups XMMWORD PTR [r14+0x30],xmm1
   140025e00:	movups xmm0,XMMWORD PTR [rax+0x40]
   140025e04:	movups XMMWORD PTR [r14+0x40],xmm0
   140025e09:	movups xmm1,XMMWORD PTR [rax+0x50]
   140025e0d:	movups XMMWORD PTR [r14+0x50],xmm1
   140025e12:	movups xmm0,XMMWORD PTR [rax+0x60]
   140025e16:	movups XMMWORD PTR [r14+0x60],xmm0
   140025e1b:	movups xmm0,XMMWORD PTR [rax+0x70]
   140025e1f:	movups XMMWORD PTR [r14+rdx*1-0x10],xmm0
   140025e25:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   140025e29:	movups XMMWORD PTR [r14+rdx*1],xmm1
   140025e2e:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   140025e33:	mov    QWORD PTR [r14+rdx*1+0x10],rax
   140025e38:	call   0x14001c25c
   140025e3d:	mov    r12,rax
   140025e40:	test   rax,rax
   140025e43:	jne    0x140025e52
   140025e45:	mov    rcx,r14
   140025e48:	call   0x14001a1ac
   140025e4d:	jmp    0x140025dc6
   140025e52:	mov    DWORD PTR [rax],ebx
   140025e54:	cmp    QWORD PTR [rsi+0x148],rbx
   140025e5b:	je     0x140025f74
   140025e61:	mov    rcx,rdi
   140025e64:	call   0x14001c25c
   140025e69:	mov    r15,rax
   140025e6c:	test   rax,rax
   140025e6f:	je     0x140025f2b
   140025e75:	mov    DWORD PTR [rax],ebx
   140025e77:	mov    rdi,QWORD PTR [rsi+0x148]
   140025e7e:	lea    rcx,[rsp+0x30]
   140025e83:	mov    r9d,0xe
   140025e89:	mov    edx,ebp
   140025e8b:	mov    r8,rdi
   140025e8e:	mov    QWORD PTR [rsp+0x20],r14
   140025e93:	call   0x140020d6c
   140025e98:	lea    rcx,[r14+0x8]
   140025e9c:	mov    QWORD PTR [rsp+0x20],rcx
   140025ea1:	lea    rcx,[rsp+0x30]
   140025ea6:	mov    r9d,0xf
   140025eac:	mov    r8,rdi
   140025eaf:	mov    edx,ebp
   140025eb1:	mov    ebx,eax
   140025eb3:	call   0x140020d6c
   140025eb8:	lea    r13,[r14+0x10]
   140025ebc:	lea    rcx,[rsp+0x30]
   140025ec1:	mov    r9d,0x10
   140025ec7:	mov    r8,rdi
   140025eca:	mov    edx,ebp
   140025ecc:	or     ebx,eax
   140025ece:	mov    QWORD PTR [rsp+0x20],r13
   140025ed3:	call   0x140020d6c
   140025ed8:	mov    r9d,0xe
   140025ede:	or     ebx,eax
   140025ee0:	lea    rax,[r14+0x58]
   140025ee4:	lea    rcx,[rsp+0x30]
   140025ee9:	lea    edx,[r9-0xc]
   140025eed:	mov    r8,rdi
   140025ef0:	mov    QWORD PTR [rsp+0x20],rax
   140025ef5:	call   0x140020d6c
   140025efa:	mov    r9d,0xf
   140025f00:	or     ebx,eax
   140025f02:	lea    rax,[r14+0x60]
   140025f06:	lea    rcx,[rsp+0x30]
   140025f0b:	lea    edx,[r9-0xd]
   140025f0f:	mov    r8,rdi
   140025f12:	mov    QWORD PTR [rsp+0x20],rax
   140025f17:	call   0x140020d6c
   140025f1c:	or     eax,ebx
   140025f1e:	je     0x140025f3b
   140025f20:	mov    rcx,r14
   140025f23:	call   0x140025cf4
   140025f28:	or     ebp,0xffffffff
   140025f2b:	mov    rcx,r14
   140025f2e:	call   0x14001a1ac
   140025f33:	mov    rcx,r12
   140025f36:	jmp    0x140025e48
   140025f3b:	mov    rdx,QWORD PTR [r13+0x0]
   140025f3f:	xor    ebx,ebx
   140025f41:	jmp    0x140025f54
   140025f43:	mov    cl,BYTE PTR [rdx]
   140025f45:	lea    eax,[rcx-0x30]
   140025f48:	cmp    al,0x9
   140025f4a:	ja     0x140025f5a
   140025f4c:	sub    cl,0x30
   140025f4f:	mov    BYTE PTR [rdx],cl
   140025f51:	add    rdx,rbp
   140025f54:	cmp    BYTE PTR [rdx],bl
   140025f56:	jne    0x140025f43
   140025f58:	jmp    0x140025fad
   140025f5a:	cmp    cl,0x3b
   140025f5d:	jne    0x140025f51
   140025f5f:	mov    r8,rdx
   140025f62:	lea    rcx,[r8+0x1]
   140025f66:	mov    al,BYTE PTR [rcx]
   140025f68:	mov    BYTE PTR [r8],al
   140025f6b:	mov    r8,rcx
   140025f6e:	test   al,al
   140025f70:	jne    0x140025f62
   140025f72:	jmp    0x140025f54
   140025f74:	mov    rax,QWORD PTR [rip+0x1b255]        # 0x1400411d0
   140025f7b:	mov    r15,rbx
   140025f7e:	mov    QWORD PTR [r14],rax
   140025f81:	mov    rax,QWORD PTR [rip+0x1b250]        # 0x1400411d8
   140025f88:	mov    QWORD PTR [r14+0x8],rax
   140025f8c:	mov    rax,QWORD PTR [rip+0x1b24d]        # 0x1400411e0
   140025f93:	mov    QWORD PTR [r14+0x10],rax
   140025f97:	mov    rax,QWORD PTR [rip+0x1b28a]        # 0x140041228
   140025f9e:	mov    QWORD PTR [r14+0x58],rax
   140025fa2:	mov    rax,QWORD PTR [rip+0x1b287]        # 0x140041230
   140025fa9:	mov    QWORD PTR [r14+0x60],rax
   140025fad:	mov    DWORD PTR [r12],ebp
   140025fb1:	test   r15,r15
   140025fb4:	je     0x140025fb9
   140025fb6:	mov    DWORD PTR [r15],ebp
   140025fb9:	mov    rax,QWORD PTR [rsi+0xe0]
   140025fc0:	test   rax,rax
   140025fc3:	je     0x140025fc8
   140025fc5:	lock dec DWORD PTR [rax]
   140025fc8:	mov    rcx,QWORD PTR [rsi+0xd8]
   140025fcf:	test   rcx,rcx
   140025fd2:	je     0x140025ff1
   140025fd4:	lock dec DWORD PTR [rcx]
   140025fd7:	jne    0x140025ff1
   140025fd9:	mov    rcx,QWORD PTR [rsi+0xd8]
   140025fe0:	call   0x14001a1ac
   140025fe5:	mov    rcx,QWORD PTR [rsi+0xf0]
   140025fec:	call   0x14001a1ac
   140025ff1:	mov    QWORD PTR [rsi+0xe0],r15
   140025ff8:	mov    QWORD PTR [rsi+0xd8],r12
   140025fff:	mov    QWORD PTR [rsi+0xf0],r14
   140026006:	xor    eax,eax
   140026008:	lea    r11,[rsp+0x40]
   14002600d:	mov    rbx,QWORD PTR [r11+0x30]
   140026011:	mov    rbp,QWORD PTR [r11+0x38]
   140026015:	mov    rsi,QWORD PTR [r11+0x40]
   140026019:	mov    rsp,r11
   14002601c:	pop    r15
   14002601e:	pop    r14
   140026020:	pop    r13
   140026022:	pop    r12
   140026024:	pop    rdi
   140026025:	ret    
   140026026:	int3   
   140026027:	int3   
   140026028:	test   rcx,rcx
   14002602b:	je     0x140026421
   140026031:	push   rbx
   140026032:	sub    rsp,0x20
   140026036:	mov    rbx,rcx
   140026039:	mov    rcx,QWORD PTR [rcx+0x8]
   14002603d:	call   0x14001a1ac
   140026042:	mov    rcx,QWORD PTR [rbx+0x10]
   140026046:	call   0x14001a1ac
   14002604b:	mov    rcx,QWORD PTR [rbx+0x18]
   14002604f:	call   0x14001a1ac
   140026054:	mov    rcx,QWORD PTR [rbx+0x20]
   140026058:	call   0x14001a1ac
   14002605d:	mov    rcx,QWORD PTR [rbx+0x28]
   140026061:	call   0x14001a1ac
   140026066:	mov    rcx,QWORD PTR [rbx+0x30]
   14002606a:	call   0x14001a1ac
   14002606f:	mov    rcx,QWORD PTR [rbx]
   140026072:	call   0x14001a1ac
   140026077:	mov    rcx,QWORD PTR [rbx+0x40]
   14002607b:	call   0x14001a1ac
   140026080:	mov    rcx,QWORD PTR [rbx+0x48]
   140026084:	call   0x14001a1ac
   140026089:	mov    rcx,QWORD PTR [rbx+0x50]
   14002608d:	call   0x14001a1ac
   140026092:	mov    rcx,QWORD PTR [rbx+0x58]
   140026096:	call   0x14001a1ac
   14002609b:	mov    rcx,QWORD PTR [rbx+0x60]
   14002609f:	call   0x14001a1ac
   1400260a4:	mov    rcx,QWORD PTR [rbx+0x68]
   1400260a8:	call   0x14001a1ac
   1400260ad:	mov    rcx,QWORD PTR [rbx+0x38]
   1400260b1:	call   0x14001a1ac
   1400260b6:	mov    rcx,QWORD PTR [rbx+0x70]
   1400260ba:	call   0x14001a1ac
   1400260bf:	mov    rcx,QWORD PTR [rbx+0x78]
   1400260c3:	call   0x14001a1ac
   1400260c8:	mov    rcx,QWORD PTR [rbx+0x80]
   1400260cf:	call   0x14001a1ac
   1400260d4:	mov    rcx,QWORD PTR [rbx+0x88]
   1400260db:	call   0x14001a1ac
   1400260e0:	mov    rcx,QWORD PTR [rbx+0x90]
   1400260e7:	call   0x14001a1ac
   1400260ec:	mov    rcx,QWORD PTR [rbx+0x98]
   1400260f3:	call   0x14001a1ac
   1400260f8:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400260ff:	call   0x14001a1ac
   140026104:	mov    rcx,QWORD PTR [rbx+0xa8]
   14002610b:	call   0x14001a1ac
   140026110:	mov    rcx,QWORD PTR [rbx+0xb0]
   140026117:	call   0x14001a1ac
   14002611c:	mov    rcx,QWORD PTR [rbx+0xb8]
   140026123:	call   0x14001a1ac
   140026128:	mov    rcx,QWORD PTR [rbx+0xc0]
   14002612f:	call   0x14001a1ac
   140026134:	mov    rcx,QWORD PTR [rbx+0xc8]
   14002613b:	call   0x14001a1ac
   140026140:	mov    rcx,QWORD PTR [rbx+0xd0]
   140026147:	call   0x14001a1ac
   14002614c:	mov    rcx,QWORD PTR [rbx+0xd8]
   140026153:	call   0x14001a1ac
   140026158:	mov    rcx,QWORD PTR [rbx+0xe0]
   14002615f:	call   0x14001a1ac
   140026164:	mov    rcx,QWORD PTR [rbx+0xe8]
   14002616b:	call   0x14001a1ac
   140026170:	mov    rcx,QWORD PTR [rbx+0xf0]
   140026177:	call   0x14001a1ac
   14002617c:	mov    rcx,QWORD PTR [rbx+0xf8]
   140026183:	call   0x14001a1ac
   140026188:	mov    rcx,QWORD PTR [rbx+0x100]
   14002618f:	call   0x14001a1ac
   140026194:	mov    rcx,QWORD PTR [rbx+0x108]
   14002619b:	call   0x14001a1ac
   1400261a0:	mov    rcx,QWORD PTR [rbx+0x110]
   1400261a7:	call   0x14001a1ac
   1400261ac:	mov    rcx,QWORD PTR [rbx+0x118]
   1400261b3:	call   0x14001a1ac
   1400261b8:	mov    rcx,QWORD PTR [rbx+0x120]
   1400261bf:	call   0x14001a1ac
   1400261c4:	mov    rcx,QWORD PTR [rbx+0x128]
   1400261cb:	call   0x14001a1ac
   1400261d0:	mov    rcx,QWORD PTR [rbx+0x130]
   1400261d7:	call   0x14001a1ac
   1400261dc:	mov    rcx,QWORD PTR [rbx+0x138]
   1400261e3:	call   0x14001a1ac
   1400261e8:	mov    rcx,QWORD PTR [rbx+0x140]
   1400261ef:	call   0x14001a1ac
   1400261f4:	mov    rcx,QWORD PTR [rbx+0x148]
   1400261fb:	call   0x14001a1ac
   140026200:	mov    rcx,QWORD PTR [rbx+0x150]
   140026207:	call   0x14001a1ac
   14002620c:	mov    rcx,QWORD PTR [rbx+0x168]
   140026213:	call   0x14001a1ac
   140026218:	mov    rcx,QWORD PTR [rbx+0x170]
   14002621f:	call   0x14001a1ac
   140026224:	mov    rcx,QWORD PTR [rbx+0x178]
   14002622b:	call   0x14001a1ac
   140026230:	mov    rcx,QWORD PTR [rbx+0x180]
   140026237:	call   0x14001a1ac
   14002623c:	mov    rcx,QWORD PTR [rbx+0x188]
   140026243:	call   0x14001a1ac
   140026248:	mov    rcx,QWORD PTR [rbx+0x190]
   14002624f:	call   0x14001a1ac
   140026254:	mov    rcx,QWORD PTR [rbx+0x160]
   14002625b:	call   0x14001a1ac
   140026260:	mov    rcx,QWORD PTR [rbx+0x1a0]
   140026267:	call   0x14001a1ac
   14002626c:	mov    rcx,QWORD PTR [rbx+0x1a8]
   140026273:	call   0x14001a1ac
   140026278:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14002627f:	call   0x14001a1ac
   140026284:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14002628b:	call   0x14001a1ac
   140026290:	mov    rcx,QWORD PTR [rbx+0x1c0]
   140026297:	call   0x14001a1ac
   14002629c:	mov    rcx,QWORD PTR [rbx+0x1c8]
   1400262a3:	call   0x14001a1ac
   1400262a8:	mov    rcx,QWORD PTR [rbx+0x198]
   1400262af:	call   0x14001a1ac
   1400262b4:	mov    rcx,QWORD PTR [rbx+0x1d0]
   1400262bb:	call   0x14001a1ac
   1400262c0:	mov    rcx,QWORD PTR [rbx+0x1d8]
   1400262c7:	call   0x14001a1ac
   1400262cc:	mov    rcx,QWORD PTR [rbx+0x1e0]
   1400262d3:	call   0x14001a1ac
   1400262d8:	mov    rcx,QWORD PTR [rbx+0x1e8]
   1400262df:	call   0x14001a1ac
   1400262e4:	mov    rcx,QWORD PTR [rbx+0x1f0]
   1400262eb:	call   0x14001a1ac
   1400262f0:	mov    rcx,QWORD PTR [rbx+0x1f8]
   1400262f7:	call   0x14001a1ac
   1400262fc:	mov    rcx,QWORD PTR [rbx+0x200]
   140026303:	call   0x14001a1ac
   140026308:	mov    rcx,QWORD PTR [rbx+0x208]
   14002630f:	call   0x14001a1ac
   140026314:	mov    rcx,QWORD PTR [rbx+0x210]
   14002631b:	call   0x14001a1ac
   140026320:	mov    rcx,QWORD PTR [rbx+0x218]
   140026327:	call   0x14001a1ac
   14002632c:	mov    rcx,QWORD PTR [rbx+0x220]
   140026333:	call   0x14001a1ac
   140026338:	mov    rcx,QWORD PTR [rbx+0x228]
   14002633f:	call   0x14001a1ac
   140026344:	mov    rcx,QWORD PTR [rbx+0x230]
   14002634b:	call   0x14001a1ac
   140026350:	mov    rcx,QWORD PTR [rbx+0x238]
   140026357:	call   0x14001a1ac
   14002635c:	mov    rcx,QWORD PTR [rbx+0x240]
   140026363:	call   0x14001a1ac
   140026368:	mov    rcx,QWORD PTR [rbx+0x248]
   14002636f:	call   0x14001a1ac
   140026374:	mov    rcx,QWORD PTR [rbx+0x250]
   14002637b:	call   0x14001a1ac
   140026380:	mov    rcx,QWORD PTR [rbx+0x258]
   140026387:	call   0x14001a1ac
   14002638c:	mov    rcx,QWORD PTR [rbx+0x260]
   140026393:	call   0x14001a1ac
   140026398:	mov    rcx,QWORD PTR [rbx+0x268]
   14002639f:	call   0x14001a1ac
   1400263a4:	mov    rcx,QWORD PTR [rbx+0x270]
   1400263ab:	call   0x14001a1ac
   1400263b0:	mov    rcx,QWORD PTR [rbx+0x278]
   1400263b7:	call   0x14001a1ac
   1400263bc:	mov    rcx,QWORD PTR [rbx+0x280]
   1400263c3:	call   0x14001a1ac
   1400263c8:	mov    rcx,QWORD PTR [rbx+0x288]
   1400263cf:	call   0x14001a1ac
   1400263d4:	mov    rcx,QWORD PTR [rbx+0x290]
   1400263db:	call   0x14001a1ac
   1400263e0:	mov    rcx,QWORD PTR [rbx+0x298]
   1400263e7:	call   0x14001a1ac
   1400263ec:	mov    rcx,QWORD PTR [rbx+0x2a0]
   1400263f3:	call   0x14001a1ac
   1400263f8:	mov    rcx,QWORD PTR [rbx+0x2a8]
   1400263ff:	call   0x14001a1ac
   140026404:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14002640b:	call   0x14001a1ac
   140026410:	mov    rcx,QWORD PTR [rbx+0x2b8]
   140026417:	call   0x14001a1ac
   14002641c:	add    rsp,0x20
   140026420:	pop    rbx
   140026421:	ret    
   140026422:	int3   
   140026423:	int3   
   140026424:	mov    QWORD PTR [rsp+0x8],rbx
   140026429:	mov    QWORD PTR [rsp+0x10],rbp
   14002642e:	push   rdi
   14002642f:	sub    rsp,0x20
   140026433:	cmp    QWORD PTR [rcx+0x150],0x0
   14002643b:	mov    rdi,rcx
   14002643e:	lea    rbp,[rip+0x1b78b]        # 0x140041bd0
   140026445:	je     0x140026492
   140026447:	mov    edx,0x2c0
   14002644c:	mov    ecx,0x1
   140026451:	call   0x14001c1dc
   140026456:	mov    rbx,rax
   140026459:	test   rax,rax
   14002645c:	jne    0x140026465
   14002645e:	mov    eax,0x1
   140026463:	jmp    0x1400264b1
   140026465:	mov    rdx,rdi
   140026468:	mov    rcx,rax
   14002646b:	call   0x1400264c4
   140026470:	test   eax,eax
   140026472:	je     0x140026486
   140026474:	mov    rcx,rbx
   140026477:	call   0x140026028
   14002647c:	mov    rcx,rbx
   14002647f:	call   0x14001a1ac
   140026484:	jmp    0x14002645e
   140026486:	mov    DWORD PTR [rbx+0x15c],0x1
   140026490:	jmp    0x140026495
   140026492:	mov    rbx,rbp
   140026495:	mov    rax,QWORD PTR [rdi+0x120]
   14002649c:	cmp    rax,rbp
   14002649f:	je     0x1400264a8
   1400264a1:	lock dec DWORD PTR [rax+0x15c]
   1400264a8:	mov    QWORD PTR [rdi+0x120],rbx
   1400264af:	xor    eax,eax
   1400264b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400264b6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400264bb:	add    rsp,0x20
   1400264bf:	pop    rdi
   1400264c0:	ret    
   1400264c1:	int3   
   1400264c2:	int3   
   1400264c3:	int3   
   1400264c4:	mov    rax,rsp
   1400264c7:	mov    QWORD PTR [rax+0x8],rbx
   1400264cb:	mov    QWORD PTR [rax+0x10],rsi
   1400264cf:	mov    QWORD PTR [rax+0x18],rdi
   1400264d3:	mov    QWORD PTR [rax+0x20],r14
   1400264d7:	push   rbp
   1400264d8:	mov    rbp,rsp
   1400264db:	sub    rsp,0x40
   1400264df:	mov    rsi,QWORD PTR [rdx+0x150]
   1400264e6:	mov    rbx,rdx
   1400264e9:	mov    rdi,rcx
   1400264ec:	test   rcx,rcx
   1400264ef:	jne    0x1400264f9
   1400264f1:	or     eax,0xffffffff
   1400264f4:	jmp    0x140027023
   1400264f9:	mov    rcx,rsi
   1400264fc:	call   0x14002375c
   140026501:	and    QWORD PTR [rbp-0x8],0x0
   140026506:	mov    r9d,0x31
   14002650c:	lea    r14d,[r9-0x30]
   140026510:	mov    QWORD PTR [rdi+0x2b8],rax
   140026517:	lea    rax,[rdi+0x8]
   14002651b:	lea    rcx,[rbp-0x10]
   14002651f:	mov    r8,rsi
   140026522:	mov    edx,r14d
   140026525:	mov    QWORD PTR [rbp-0x10],rbx
   140026529:	mov    QWORD PTR [rsp+0x20],rax
   14002652e:	call   0x140020d6c
   140026533:	lea    rcx,[rdi+0x10]
   140026537:	lea    r9d,[r14+0x31]
   14002653b:	mov    r8,rsi
   14002653e:	mov    QWORD PTR [rsp+0x20],rcx
   140026543:	lea    rcx,[rbp-0x10]
   140026547:	mov    edx,r14d
   14002654a:	mov    ebx,eax
   14002654c:	call   0x140020d6c
   140026551:	lea    rcx,[rdi+0x18]
   140026555:	mov    QWORD PTR [rsp+0x20],rcx
   14002655a:	lea    r9d,[r14+0x32]
   14002655e:	lea    rcx,[rbp-0x10]
   140026562:	mov    r8,rsi
   140026565:	mov    edx,r14d
   140026568:	or     ebx,eax
   14002656a:	call   0x140020d6c
   14002656f:	lea    r9d,[r14+0x33]
   140026573:	lea    rcx,[rbp-0x10]
   140026577:	or     ebx,eax
   140026579:	lea    rax,[rdi+0x20]
   14002657d:	mov    r8,rsi
   140026580:	mov    edx,r14d
   140026583:	mov    QWORD PTR [rsp+0x20],rax
   140026588:	call   0x140020d6c
   14002658d:	lea    r9d,[r14+0x34]
   140026591:	lea    rcx,[rbp-0x10]
   140026595:	or     ebx,eax
   140026597:	lea    rax,[rdi+0x28]
   14002659b:	mov    r8,rsi
   14002659e:	mov    edx,r14d
   1400265a1:	mov    QWORD PTR [rsp+0x20],rax
   1400265a6:	call   0x140020d6c
   1400265ab:	lea    r9d,[r14+0x35]
   1400265af:	lea    rcx,[rbp-0x10]
   1400265b3:	or     ebx,eax
   1400265b5:	lea    rax,[rdi+0x30]
   1400265b9:	mov    r8,rsi
   1400265bc:	mov    edx,r14d
   1400265bf:	mov    QWORD PTR [rsp+0x20],rax
   1400265c4:	call   0x140020d6c
   1400265c9:	lea    r9d,[r14+0x36]
   1400265cd:	lea    rcx,[rbp-0x10]
   1400265d1:	mov    r8,rsi
   1400265d4:	mov    edx,r14d
   1400265d7:	mov    QWORD PTR [rsp+0x20],rdi
   1400265dc:	or     ebx,eax
   1400265de:	call   0x140020d6c
   1400265e3:	lea    r9d,[r14+0x29]
   1400265e7:	or     ebx,eax
   1400265e9:	lea    rax,[rdi+0x40]
   1400265ed:	lea    rcx,[rbp-0x10]
   1400265f1:	mov    r8,rsi
   1400265f4:	mov    edx,r14d
   1400265f7:	mov    QWORD PTR [rsp+0x20],rax
   1400265fc:	call   0x140020d6c
   140026601:	lea    r9d,[r14+0x2a]
   140026605:	lea    rcx,[rbp-0x10]
   140026609:	or     ebx,eax
   14002660b:	lea    rax,[rdi+0x48]
   14002660f:	mov    r8,rsi
   140026612:	mov    edx,r14d
   140026615:	mov    QWORD PTR [rsp+0x20],rax
   14002661a:	call   0x140020d6c
   14002661f:	lea    r9d,[r14+0x2b]
   140026623:	mov    r8,rsi
   140026626:	or     ebx,eax
   140026628:	lea    rax,[rdi+0x50]
   14002662c:	mov    QWORD PTR [rsp+0x20],rax
   140026631:	lea    rcx,[rbp-0x10]
   140026635:	mov    edx,r14d
   140026638:	call   0x140020d6c
   14002663d:	lea    r9d,[r14+0x2c]
   140026641:	lea    rcx,[rbp-0x10]
   140026645:	or     ebx,eax
   140026647:	lea    rax,[rdi+0x58]
   14002664b:	mov    r8,rsi
   14002664e:	mov    edx,r14d
   140026651:	mov    QWORD PTR [rsp+0x20],rax
   140026656:	call   0x140020d6c
   14002665b:	lea    r9d,[r14+0x2d]
   14002665f:	lea    rcx,[rbp-0x10]
   140026663:	or     ebx,eax
   140026665:	lea    rax,[rdi+0x60]
   140026669:	mov    r8,rsi
   14002666c:	mov    edx,r14d
   14002666f:	mov    QWORD PTR [rsp+0x20],rax
   140026674:	call   0x140020d6c
   140026679:	lea    r9d,[r14+0x2e]
   14002667d:	lea    rcx,[rbp-0x10]
   140026681:	or     ebx,eax
   140026683:	lea    rax,[rdi+0x68]
   140026687:	mov    r8,rsi
   14002668a:	mov    edx,r14d
   14002668d:	mov    QWORD PTR [rsp+0x20],rax
   140026692:	call   0x140020d6c
   140026697:	lea    r9d,[r14+0x2f]
   14002669b:	lea    rcx,[rbp-0x10]
   14002669f:	or     ebx,eax
   1400266a1:	lea    rax,[rdi+0x38]
   1400266a5:	mov    r8,rsi
   1400266a8:	mov    edx,r14d
   1400266ab:	mov    QWORD PTR [rsp+0x20],rax
   1400266b0:	call   0x140020d6c
   1400266b5:	lea    r9d,[r14+0x43]
   1400266b9:	lea    rcx,[rbp-0x10]
   1400266bd:	or     ebx,eax
   1400266bf:	lea    rax,[rdi+0x70]
   1400266c3:	mov    r8,rsi
   1400266c6:	mov    edx,r14d
   1400266c9:	mov    QWORD PTR [rsp+0x20],rax
   1400266ce:	call   0x140020d6c
   1400266d3:	lea    r9d,[r14+0x44]
   1400266d7:	lea    rcx,[rbp-0x10]
   1400266db:	or     ebx,eax
   1400266dd:	lea    rax,[rdi+0x78]
   1400266e1:	mov    r8,rsi
   1400266e4:	mov    edx,r14d
   1400266e7:	mov    QWORD PTR [rsp+0x20],rax
   1400266ec:	call   0x140020d6c
   1400266f1:	lea    r9d,[r14+0x45]
   1400266f5:	lea    rcx,[rbp-0x10]
   1400266f9:	or     ebx,eax
   1400266fb:	lea    rax,[rdi+0x80]
   140026702:	mov    r8,rsi
   140026705:	mov    edx,r14d
   140026708:	mov    QWORD PTR [rsp+0x20],rax
   14002670d:	call   0x140020d6c
   140026712:	lea    r9d,[r14+0x46]
   140026716:	lea    rcx,[rbp-0x10]
   14002671a:	or     ebx,eax
   14002671c:	lea    rax,[rdi+0x88]
   140026723:	mov    r8,rsi
   140026726:	mov    edx,r14d
   140026729:	mov    QWORD PTR [rsp+0x20],rax
   14002672e:	call   0x140020d6c
   140026733:	lea    r9d,[r14+0x47]
   140026737:	lea    rcx,[rbp-0x10]
   14002673b:	or     ebx,eax
   14002673d:	lea    rax,[rdi+0x90]
   140026744:	mov    r8,rsi
   140026747:	mov    edx,r14d
   14002674a:	mov    QWORD PTR [rsp+0x20],rax
   14002674f:	call   0x140020d6c
   140026754:	lea    r9d,[r14+0x48]
   140026758:	mov    r8,rsi
   14002675b:	or     ebx,eax
   14002675d:	lea    rax,[rdi+0x98]
   140026764:	mov    edx,r14d
   140026767:	mov    QWORD PTR [rsp+0x20],rax
   14002676c:	lea    rcx,[rbp-0x10]
   140026770:	call   0x140020d6c
   140026775:	lea    r9d,[r14+0x49]
   140026779:	lea    rcx,[rbp-0x10]
   14002677d:	or     ebx,eax
   14002677f:	lea    rax,[rdi+0xa0]
   140026786:	mov    r8,rsi
   140026789:	mov    edx,r14d
   14002678c:	mov    QWORD PTR [rsp+0x20],rax
   140026791:	call   0x140020d6c
   140026796:	lea    r9d,[r14+0x4a]
   14002679a:	lea    rcx,[rbp-0x10]
   14002679e:	or     ebx,eax
   1400267a0:	lea    rax,[rdi+0xa8]
   1400267a7:	mov    r8,rsi
   1400267aa:	mov    edx,r14d
   1400267ad:	mov    QWORD PTR [rsp+0x20],rax
   1400267b2:	call   0x140020d6c
   1400267b7:	lea    r9d,[r14+0x4b]
   1400267bb:	lea    rcx,[rbp-0x10]
   1400267bf:	or     ebx,eax
   1400267c1:	lea    rax,[rdi+0xb0]
   1400267c8:	mov    r8,rsi
   1400267cb:	mov    edx,r14d
   1400267ce:	mov    QWORD PTR [rsp+0x20],rax
   1400267d3:	call   0x140020d6c
   1400267d8:	lea    r9d,[r14+0x4c]
   1400267dc:	lea    rcx,[rbp-0x10]
   1400267e0:	or     ebx,eax
   1400267e2:	lea    rax,[rdi+0xb8]
   1400267e9:	mov    r8,rsi
   1400267ec:	mov    edx,r14d
   1400267ef:	mov    QWORD PTR [rsp+0x20],rax
   1400267f4:	call   0x140020d6c
   1400267f9:	lea    r9d,[r14+0x4d]
   1400267fd:	lea    rcx,[rbp-0x10]
   140026801:	or     ebx,eax
   140026803:	lea    rax,[rdi+0xc0]
   14002680a:	mov    r8,rsi
   14002680d:	mov    edx,r14d
   140026810:	mov    QWORD PTR [rsp+0x20],rax
   140026815:	call   0x140020d6c
   14002681a:	lea    r9d,[r14+0x4e]
   14002681e:	lea    rcx,[rbp-0x10]
   140026822:	or     ebx,eax
   140026824:	lea    rax,[rdi+0xc8]
   14002682b:	mov    r8,rsi
   14002682e:	mov    edx,r14d
   140026831:	mov    QWORD PTR [rsp+0x20],rax
   140026836:	call   0x140020d6c
   14002683b:	lea    r9d,[r14+0x37]
   14002683f:	lea    rcx,[rbp-0x10]
   140026843:	or     ebx,eax
   140026845:	lea    rax,[rdi+0xd0]
   14002684c:	mov    r8,rsi
   14002684f:	mov    edx,r14d
   140026852:	mov    QWORD PTR [rsp+0x20],rax
   140026857:	call   0x140020d6c
   14002685c:	lea    r9d,[r14+0x38]
   140026860:	lea    rcx,[rbp-0x10]
   140026864:	or     ebx,eax
   140026866:	lea    rax,[rdi+0xd8]
   14002686d:	mov    r8,rsi
   140026870:	mov    edx,r14d
   140026873:	mov    QWORD PTR [rsp+0x20],rax
   140026878:	call   0x140020d6c
   14002687d:	lea    r9d,[r14+0x39]
   140026881:	lea    rcx,[rbp-0x10]
   140026885:	or     ebx,eax
   140026887:	lea    rax,[rdi+0xe0]
   14002688e:	mov    r8,rsi
   140026891:	mov    edx,r14d
   140026894:	mov    QWORD PTR [rsp+0x20],rax
   140026899:	call   0x140020d6c
   14002689e:	lea    r9d,[r14+0x3a]
   1400268a2:	mov    r8,rsi
   1400268a5:	or     ebx,eax
   1400268a7:	lea    rax,[rdi+0xe8]
   1400268ae:	mov    edx,r14d
   1400268b1:	mov    QWORD PTR [rsp+0x20],rax
   1400268b6:	lea    rcx,[rbp-0x10]
   1400268ba:	call   0x140020d6c
   1400268bf:	lea    r9d,[r14+0x3b]
   1400268c3:	lea    rcx,[rbp-0x10]
   1400268c7:	or     ebx,eax
   1400268c9:	lea    rax,[rdi+0xf0]
   1400268d0:	mov    r8,rsi
   1400268d3:	mov    edx,r14d
   1400268d6:	mov    QWORD PTR [rsp+0x20],rax
   1400268db:	call   0x140020d6c
   1400268e0:	lea    r9d,[r14+0x3c]
   1400268e4:	lea    rcx,[rbp-0x10]
   1400268e8:	or     ebx,eax
   1400268ea:	lea    rax,[rdi+0xf8]
   1400268f1:	mov    r8,rsi
   1400268f4:	mov    edx,r14d
   1400268f7:	mov    QWORD PTR [rsp+0x20],rax
   1400268fc:	call   0x140020d6c
   140026901:	lea    r9d,[r14+0x3d]
   140026905:	lea    rcx,[rbp-0x10]
   140026909:	or     ebx,eax
   14002690b:	lea    rax,[rdi+0x100]
   140026912:	mov    r8,rsi
   140026915:	mov    edx,r14d
   140026918:	mov    QWORD PTR [rsp+0x20],rax
   14002691d:	call   0x140020d6c
   140026922:	lea    r9d,[r14+0x3e]
   140026926:	lea    rcx,[rbp-0x10]
   14002692a:	or     ebx,eax
   14002692c:	lea    rax,[rdi+0x108]
   140026933:	mov    r8,rsi
   140026936:	mov    edx,r14d
   140026939:	mov    QWORD PTR [rsp+0x20],rax
   14002693e:	call   0x140020d6c
   140026943:	lea    r9d,[r14+0x3f]
   140026947:	lea    rcx,[rbp-0x10]
   14002694b:	or     ebx,eax
   14002694d:	lea    rax,[rdi+0x110]
   140026954:	mov    r8,rsi
   140026957:	mov    edx,r14d
   14002695a:	mov    QWORD PTR [rsp+0x20],rax
   14002695f:	call   0x140020d6c
   140026964:	lea    r9d,[r14+0x40]
   140026968:	lea    rcx,[rbp-0x10]
   14002696c:	or     ebx,eax
   14002696e:	lea    rax,[rdi+0x118]
   140026975:	mov    r8,rsi
   140026978:	mov    edx,r14d
   14002697b:	mov    QWORD PTR [rsp+0x20],rax
   140026980:	call   0x140020d6c
   140026985:	lea    r9d,[r14+0x41]
   140026989:	lea    rcx,[rbp-0x10]
   14002698d:	or     ebx,eax
   14002698f:	lea    rax,[rdi+0x120]
   140026996:	mov    r8,rsi
   140026999:	mov    edx,r14d
   14002699c:	mov    QWORD PTR [rsp+0x20],rax
   1400269a1:	call   0x140020d6c
   1400269a6:	lea    r9d,[r14+0x42]
   1400269aa:	lea    rcx,[rbp-0x10]
   1400269ae:	or     ebx,eax
   1400269b0:	lea    rax,[rdi+0x128]
   1400269b7:	mov    r8,rsi
   1400269ba:	mov    edx,r14d
   1400269bd:	mov    QWORD PTR [rsp+0x20],rax
   1400269c2:	call   0x140020d6c
   1400269c7:	lea    r9d,[r14+0x27]
   1400269cb:	lea    rcx,[rbp-0x10]
   1400269cf:	or     ebx,eax
   1400269d1:	lea    rax,[rdi+0x130]
   1400269d8:	mov    r8,rsi
   1400269db:	mov    edx,r14d
   1400269de:	mov    QWORD PTR [rsp+0x20],rax
   1400269e3:	call   0x140020d6c
   1400269e8:	lea    r9d,[r14+0x28]
   1400269ec:	lea    rcx,[rbp-0x10]
   1400269f0:	or     ebx,eax
   1400269f2:	lea    rax,[rdi+0x138]
   1400269f9:	mov    r8,rsi
   1400269fc:	mov    edx,r14d
   1400269ff:	mov    QWORD PTR [rsp+0x20],rax
   140026a04:	call   0x140020d6c
   140026a09:	or     ebx,eax
   140026a0b:	lea    rax,[rdi+0x140]
   140026a12:	lea    r9d,[r14+0x1e]
   140026a16:	lea    rcx,[rbp-0x10]
   140026a1a:	mov    r8,rsi
   140026a1d:	mov    edx,r14d
   140026a20:	mov    QWORD PTR [rsp+0x20],rax
   140026a25:	call   0x140020d6c
   140026a2a:	lea    r9d,[r14+0x1f]
   140026a2e:	or     ebx,eax
   140026a30:	lea    rax,[rdi+0x148]
   140026a37:	lea    rcx,[rbp-0x10]
   140026a3b:	mov    r8,rsi
   140026a3e:	mov    edx,r14d
   140026a41:	mov    QWORD PTR [rsp+0x20],rax
   140026a46:	call   0x140020d6c
   140026a4b:	lea    rcx,[rbp-0x10]
   140026a4f:	mov    r9d,0x1003
   140026a55:	or     ebx,eax
   140026a57:	lea    rax,[rdi+0x150]
   140026a5e:	mov    r8,rsi
   140026a61:	mov    edx,r14d
   140026a64:	mov    QWORD PTR [rsp+0x20],rax
   140026a69:	call   0x140020d6c
   140026a6e:	lea    rcx,[rbp-0x10]
   140026a72:	mov    r9d,0x1009
   140026a78:	or     ebx,eax
   140026a7a:	lea    rax,[rdi+0x158]
   140026a81:	mov    r8,rsi
   140026a84:	xor    edx,edx
   140026a86:	mov    QWORD PTR [rsp+0x20],rax
   140026a8b:	call   0x140020d6c
   140026a90:	lea    r9d,[r14+0x30]
   140026a94:	lea    rcx,[rbp-0x10]
   140026a98:	lea    r14d,[r9-0x2f]
   140026a9c:	or     ebx,eax
   140026a9e:	lea    rax,[rdi+0x168]
   140026aa5:	mov    edx,r14d
   140026aa8:	mov    r8,rsi
   140026aab:	mov    QWORD PTR [rsp+0x20],rax
   140026ab0:	call   0x140020d6c
   140026ab5:	lea    r9d,[r14+0x30]
   140026ab9:	lea    rcx,[rbp-0x10]
   140026abd:	or     ebx,eax
   140026abf:	lea    rax,[rdi+0x170]
   140026ac6:	mov    r8,rsi
   140026ac9:	mov    edx,r14d
   140026acc:	mov    QWORD PTR [rsp+0x20],rax
   140026ad1:	call   0x140020d6c
   140026ad6:	lea    r9d,[r14+0x31]
   140026ada:	lea    rcx,[rbp-0x10]
   140026ade:	or     ebx,eax
   140026ae0:	lea    rax,[rdi+0x178]
   140026ae7:	mov    r8,rsi
   140026aea:	mov    edx,r14d
   140026aed:	mov    QWORD PTR [rsp+0x20],rax
   140026af2:	call   0x140020d6c
   140026af7:	lea    r9d,[r14+0x32]
   140026afb:	lea    rcx,[rbp-0x10]
   140026aff:	or     ebx,eax
   140026b01:	lea    rax,[rdi+0x180]
   140026b08:	mov    r8,rsi
   140026b0b:	mov    edx,r14d
   140026b0e:	mov    QWORD PTR [rsp+0x20],rax
   140026b13:	call   0x140020d6c
   140026b18:	lea    r9d,[r14+0x33]
   140026b1c:	lea    rcx,[rbp-0x10]
   140026b20:	or     ebx,eax
   140026b22:	lea    rax,[rdi+0x188]
   140026b29:	mov    r8,rsi
   140026b2c:	mov    edx,r14d
   140026b2f:	mov    QWORD PTR [rsp+0x20],rax
   140026b34:	call   0x140020d6c
   140026b39:	lea    r9d,[r14+0x34]
   140026b3d:	lea    rcx,[rbp-0x10]
   140026b41:	or     ebx,eax
   140026b43:	lea    rax,[rdi+0x190]
   140026b4a:	mov    r8,rsi
   140026b4d:	mov    edx,r14d
   140026b50:	mov    QWORD PTR [rsp+0x20],rax
   140026b55:	call   0x140020d6c
   140026b5a:	or     ebx,eax
   140026b5c:	lea    rax,[rdi+0x160]
   140026b63:	lea    r9d,[r14+0x35]
   140026b67:	lea    rcx,[rbp-0x10]
   140026b6b:	mov    r8,rsi
   140026b6e:	mov    edx,r14d
   140026b71:	mov    QWORD PTR [rsp+0x20],rax
   140026b76:	call   0x140020d6c
   140026b7b:	lea    r9d,[r14+0x28]
   140026b7f:	or     ebx,eax
   140026b81:	lea    rax,[rdi+0x1a0]
   140026b88:	lea    rcx,[rbp-0x10]
   140026b8c:	mov    r8,rsi
   140026b8f:	mov    edx,r14d
   140026b92:	mov    QWORD PTR [rsp+0x20],rax
   140026b97:	call   0x140020d6c
   140026b9c:	lea    r9d,[r14+0x29]
   140026ba0:	lea    rcx,[rbp-0x10]
   140026ba4:	or     ebx,eax
   140026ba6:	lea    rax,[rdi+0x1a8]
   140026bad:	mov    r8,rsi
   140026bb0:	mov    edx,r14d
   140026bb3:	mov    QWORD PTR [rsp+0x20],rax
   140026bb8:	call   0x140020d6c
   140026bbd:	lea    r9d,[r14+0x2a]
   140026bc1:	lea    rcx,[rbp-0x10]
   140026bc5:	or     ebx,eax
   140026bc7:	lea    rax,[rdi+0x1b0]
   140026bce:	mov    r8,rsi
   140026bd1:	mov    edx,r14d
   140026bd4:	mov    QWORD PTR [rsp+0x20],rax
   140026bd9:	call   0x140020d6c
   140026bde:	lea    r9d,[r14+0x2b]
   140026be2:	lea    rcx,[rbp-0x10]
   140026be6:	or     ebx,eax
   140026be8:	lea    rax,[rdi+0x1b8]
   140026bef:	mov    r8,rsi
   140026bf2:	mov    edx,r14d
   140026bf5:	mov    QWORD PTR [rsp+0x20],rax
   140026bfa:	call   0x140020d6c
   140026bff:	lea    r9d,[r14+0x2c]
   140026c03:	lea    rcx,[rbp-0x10]
   140026c07:	or     ebx,eax
   140026c09:	lea    rax,[rdi+0x1c0]
   140026c10:	mov    r8,rsi
   140026c13:	mov    edx,r14d
   140026c16:	mov    QWORD PTR [rsp+0x20],rax
   140026c1b:	call   0x140020d6c
   140026c20:	lea    r9d,[r14+0x2d]
   140026c24:	lea    rcx,[rbp-0x10]
   140026c28:	or     ebx,eax
   140026c2a:	lea    rax,[rdi+0x1c8]
   140026c31:	mov    r8,rsi
   140026c34:	mov    edx,r14d
   140026c37:	mov    QWORD PTR [rsp+0x20],rax
   140026c3c:	call   0x140020d6c
   140026c41:	lea    r9d,[r14+0x2e]
   140026c45:	lea    rcx,[rbp-0x10]
   140026c49:	or     ebx,eax
   140026c4b:	lea    rax,[rdi+0x198]
   140026c52:	mov    r8,rsi
   140026c55:	mov    edx,r14d
   140026c58:	mov    QWORD PTR [rsp+0x20],rax
   140026c5d:	call   0x140020d6c
   140026c62:	lea    r9d,[r14+0x42]
   140026c66:	lea    rcx,[rbp-0x10]
   140026c6a:	or     ebx,eax
   140026c6c:	lea    rax,[rdi+0x1d0]
   140026c73:	mov    r8,rsi
   140026c76:	mov    edx,r14d
   140026c79:	mov    QWORD PTR [rsp+0x20],rax
   140026c7e:	call   0x140020d6c
   140026c83:	lea    r9d,[r14+0x43]
   140026c87:	lea    rcx,[rbp-0x10]
   140026c8b:	or     ebx,eax
   140026c8d:	lea    rax,[rdi+0x1d8]
   140026c94:	mov    r8,rsi
   140026c97:	mov    edx,r14d
   140026c9a:	mov    QWORD PTR [rsp+0x20],rax
   140026c9f:	call   0x140020d6c
   140026ca4:	or     ebx,eax
   140026ca6:	lea    rax,[rdi+0x1e0]
   140026cad:	lea    r9d,[r14+0x44]
   140026cb1:	lea    rcx,[rbp-0x10]
   140026cb5:	mov    r8,rsi
   140026cb8:	mov    edx,r14d
   140026cbb:	mov    QWORD PTR [rsp+0x20],rax
   140026cc0:	call   0x140020d6c
   140026cc5:	lea    r9d,[r14+0x45]
   140026cc9:	lea    rcx,[rbp-0x10]
   140026ccd:	or     ebx,eax
   140026ccf:	lea    rax,[rdi+0x1e8]
   140026cd6:	mov    r8,rsi
   140026cd9:	mov    edx,r14d
   140026cdc:	mov    QWORD PTR [rsp+0x20],rax
   140026ce1:	call   0x140020d6c
   140026ce6:	lea    r9d,[r14+0x46]
   140026cea:	lea    rcx,[rbp-0x10]
   140026cee:	or     ebx,eax
   140026cf0:	lea    rax,[rdi+0x1f0]
   140026cf7:	mov    r8,rsi
   140026cfa:	mov    edx,r14d
   140026cfd:	mov    QWORD PTR [rsp+0x20],rax
   140026d02:	call   0x140020d6c
   140026d07:	lea    r9d,[r14+0x47]
   140026d0b:	lea    rcx,[rbp-0x10]
   140026d0f:	or     ebx,eax
   140026d11:	lea    rax,[rdi+0x1f8]
   140026d18:	mov    r8,rsi
   140026d1b:	mov    edx,r14d
   140026d1e:	mov    QWORD PTR [rsp+0x20],rax
   140026d23:	call   0x140020d6c
   140026d28:	lea    r9d,[r14+0x48]
   140026d2c:	lea    rcx,[rbp-0x10]
   140026d30:	or     ebx,eax
   140026d32:	lea    rax,[rdi+0x200]
   140026d39:	mov    r8,rsi
   140026d3c:	mov    edx,r14d
   140026d3f:	mov    QWORD PTR [rsp+0x20],rax
   140026d44:	call   0x140020d6c
   140026d49:	lea    r9d,[r14+0x49]
   140026d4d:	lea    rcx,[rbp-0x10]
   140026d51:	or     ebx,eax
   140026d53:	lea    rax,[rdi+0x208]
   140026d5a:	mov    r8,rsi
   140026d5d:	mov    edx,r14d
   140026d60:	mov    QWORD PTR [rsp+0x20],rax
   140026d65:	call   0x140020d6c
   140026d6a:	lea    r9d,[r14+0x4a]
   140026d6e:	lea    rcx,[rbp-0x10]
   140026d72:	or     ebx,eax
   140026d74:	lea    rax,[rdi+0x210]
   140026d7b:	mov    r8,rsi
   140026d7e:	mov    edx,r14d
   140026d81:	mov    QWORD PTR [rsp+0x20],rax
   140026d86:	call   0x140020d6c
   140026d8b:	lea    r9d,[r14+0x4b]
   140026d8f:	lea    rcx,[rbp-0x10]
   140026d93:	or     ebx,eax
   140026d95:	lea    rax,[rdi+0x218]
   140026d9c:	mov    r8,rsi
   140026d9f:	mov    edx,r14d
   140026da2:	mov    QWORD PTR [rsp+0x20],rax
   140026da7:	call   0x140020d6c
   140026dac:	lea    r9d,[r14+0x4c]
   140026db0:	lea    rcx,[rbp-0x10]
   140026db4:	or     ebx,eax
   140026db6:	lea    rax,[rdi+0x220]
   140026dbd:	mov    r8,rsi
   140026dc0:	mov    edx,r14d
   140026dc3:	mov    QWORD PTR [rsp+0x20],rax
   140026dc8:	call   0x140020d6c
   140026dcd:	lea    r9d,[r14+0x4d]
   140026dd1:	lea    rcx,[rbp-0x10]
   140026dd5:	or     ebx,eax
   140026dd7:	lea    rax,[rdi+0x228]
   140026dde:	mov    r8,rsi
   140026de1:	mov    edx,r14d
   140026de4:	mov    QWORD PTR [rsp+0x20],rax
   140026de9:	call   0x140020d6c
   140026dee:	or     ebx,eax
   140026df0:	lea    rax,[rdi+0x230]
   140026df7:	lea    r9d,[r14+0x36]
   140026dfb:	lea    rcx,[rbp-0x10]
   140026dff:	mov    r8,rsi
   140026e02:	mov    edx,r14d
   140026e05:	mov    QWORD PTR [rsp+0x20],rax
   140026e0a:	call   0x140020d6c
   140026e0f:	lea    r9d,[r14+0x37]
   140026e13:	lea    rcx,[rbp-0x10]
   140026e17:	or     ebx,eax
   140026e19:	lea    rax,[rdi+0x238]
   140026e20:	mov    r8,rsi
   140026e23:	mov    edx,r14d
   140026e26:	mov    QWORD PTR [rsp+0x20],rax
   140026e2b:	call   0x140020d6c
   140026e30:	lea    r9d,[r14+0x38]
   140026e34:	lea    rcx,[rbp-0x10]
   140026e38:	or     ebx,eax
   140026e3a:	lea    rax,[rdi+0x240]
   140026e41:	mov    r8,rsi
   140026e44:	mov    edx,r14d
   140026e47:	mov    QWORD PTR [rsp+0x20],rax
   140026e4c:	call   0x140020d6c
   140026e51:	lea    r9d,[r14+0x39]
   140026e55:	lea    rcx,[rbp-0x10]
   140026e59:	or     ebx,eax
   140026e5b:	lea    rax,[rdi+0x248]
   140026e62:	mov    r8,rsi
   140026e65:	mov    edx,r14d
   140026e68:	mov    QWORD PTR [rsp+0x20],rax
   140026e6d:	call   0x140020d6c
   140026e72:	lea    r9d,[r14+0x3a]
   140026e76:	lea    rcx,[rbp-0x10]
   140026e7a:	or     ebx,eax
   140026e7c:	lea    rax,[rdi+0x250]
   140026e83:	mov    r8,rsi
   140026e86:	mov    edx,r14d
   140026e89:	mov    QWORD PTR [rsp+0x20],rax
   140026e8e:	call   0x140020d6c
   140026e93:	lea    r9d,[r14+0x3b]
   140026e97:	lea    rcx,[rbp-0x10]
   140026e9b:	or     ebx,eax
   140026e9d:	lea    rax,[rdi+0x258]
   140026ea4:	mov    r8,rsi
   140026ea7:	mov    edx,r14d
   140026eaa:	mov    QWORD PTR [rsp+0x20],rax
   140026eaf:	call   0x140020d6c
   140026eb4:	lea    r9d,[r14+0x3c]
   140026eb8:	lea    rcx,[rbp-0x10]
   140026ebc:	or     ebx,eax
   140026ebe:	lea    rax,[rdi+0x260]
   140026ec5:	mov    r8,rsi
   140026ec8:	mov    edx,r14d
   140026ecb:	mov    QWORD PTR [rsp+0x20],rax
   140026ed0:	call   0x140020d6c
   140026ed5:	lea    r9d,[r14+0x3d]
   140026ed9:	lea    rcx,[rbp-0x10]
   140026edd:	or     ebx,eax
   140026edf:	lea    rax,[rdi+0x268]
   140026ee6:	mov    r8,rsi
   140026ee9:	mov    edx,r14d
   140026eec:	mov    QWORD PTR [rsp+0x20],rax
   140026ef1:	call   0x140020d6c
   140026ef6:	lea    r9d,[r14+0x3e]
   140026efa:	lea    rcx,[rbp-0x10]
   140026efe:	or     ebx,eax
   140026f00:	lea    rax,[rdi+0x270]
   140026f07:	mov    r8,rsi
   140026f0a:	mov    edx,r14d
   140026f0d:	mov    QWORD PTR [rsp+0x20],rax
   140026f12:	call   0x140020d6c
   140026f17:	lea    r9d,[r14+0x3f]
   140026f1b:	lea    rcx,[rbp-0x10]
   140026f1f:	or     ebx,eax
   140026f21:	lea    rax,[rdi+0x278]
   140026f28:	mov    r8,rsi
   140026f2b:	mov    edx,r14d
   140026f2e:	mov    QWORD PTR [rsp+0x20],rax
   140026f33:	call   0x140020d6c
   140026f38:	or     ebx,eax
   140026f3a:	lea    rax,[rdi+0x280]
   140026f41:	mov    QWORD PTR [rsp+0x20],rax
   140026f46:	lea    r9d,[r14+0x40]
   140026f4a:	lea    rcx,[rbp-0x10]
   140026f4e:	mov    r8,rsi
   140026f51:	mov    edx,r14d
   140026f54:	call   0x140020d6c
   140026f59:	lea    r9d,[r14+0x41]
   140026f5d:	lea    rcx,[rbp-0x10]
   140026f61:	or     ebx,eax
   140026f63:	lea    rax,[rdi+0x288]
   140026f6a:	mov    r8,rsi
   140026f6d:	mov    edx,r14d
   140026f70:	mov    QWORD PTR [rsp+0x20],rax
   140026f75:	call   0x140020d6c
   140026f7a:	lea    r9d,[r14+0x26]
   140026f7e:	lea    rcx,[rbp-0x10]
   140026f82:	or     ebx,eax
   140026f84:	lea    rax,[rdi+0x290]
   140026f8b:	mov    r8,rsi
   140026f8e:	mov    edx,r14d
   140026f91:	mov    QWORD PTR [rsp+0x20],rax
   140026f96:	call   0x140020d6c
   140026f9b:	lea    r9d,[r14+0x27]
   140026f9f:	lea    rcx,[rbp-0x10]
   140026fa3:	or     ebx,eax
   140026fa5:	lea    rax,[rdi+0x298]
   140026fac:	mov    r8,rsi
   140026faf:	mov    edx,r14d
   140026fb2:	mov    QWORD PTR [rsp+0x20],rax
   140026fb7:	call   0x140020d6c
   140026fbc:	lea    r9d,[r14+0x1d]
   140026fc0:	lea    rcx,[rbp-0x10]
   140026fc4:	or     ebx,eax
   140026fc6:	lea    rax,[rdi+0x2a0]
   140026fcd:	mov    r8,rsi
   140026fd0:	mov    edx,r14d
   140026fd3:	mov    QWORD PTR [rsp+0x20],rax
   140026fd8:	call   0x140020d6c
   140026fdd:	lea    r9d,[r14+0x1e]
   140026fe1:	lea    rcx,[rbp-0x10]
   140026fe5:	or     ebx,eax
   140026fe7:	lea    rax,[rdi+0x2a8]
   140026fee:	mov    r8,rsi
   140026ff1:	mov    edx,r14d
   140026ff4:	mov    QWORD PTR [rsp+0x20],rax
   140026ff9:	call   0x140020d6c
   140026ffe:	lea    rcx,[rbp-0x10]
   140027002:	mov    r9d,0x1003
   140027008:	or     ebx,eax
   14002700a:	lea    rax,[rdi+0x2b0]
   140027011:	mov    r8,rsi
   140027014:	mov    edx,r14d
   140027017:	mov    QWORD PTR [rsp+0x20],rax
   14002701c:	call   0x140020d6c
   140027021:	or     eax,ebx
   140027023:	mov    rbx,QWORD PTR [rsp+0x50]
   140027028:	mov    rsi,QWORD PTR [rsp+0x58]
   14002702d:	mov    rdi,QWORD PTR [rsp+0x60]
   140027032:	mov    r14,QWORD PTR [rsp+0x68]
   140027037:	add    rsp,0x40
   14002703b:	pop    rbp
   14002703c:	ret    
   14002703d:	int3   
   14002703e:	int3   
   14002703f:	int3   
   140027040:	mov    QWORD PTR [rsp+0x8],rbx
   140027045:	push   rdi
   140027046:	sub    rsp,0x20
   14002704a:	mov    eax,DWORD PTR [rip+0x1db58]        # 0x140044ba8
   140027050:	xor    ebx,ebx
   140027052:	mov    edi,0x14
   140027057:	test   eax,eax
   140027059:	jne    0x140027062
   14002705b:	mov    eax,0x200
   140027060:	jmp    0x140027067
   140027062:	cmp    eax,edi
   140027064:	cmovl  eax,edi
   140027067:	movsxd rcx,eax
   14002706a:	mov    edx,0x8
   14002706f:	mov    DWORD PTR [rip+0x1db33],eax        # 0x140044ba8
   140027075:	call   0x14001c1dc
   14002707a:	mov    QWORD PTR [rip+0x1db1f],rax        # 0x140044ba0
   140027081:	test   rax,rax
   140027084:	jne    0x1400270aa
   140027086:	lea    edx,[rax+0x8]
   140027089:	mov    rcx,rdi
   14002708c:	mov    DWORD PTR [rip+0x1db16],edi        # 0x140044ba8
   140027092:	call   0x14001c1dc
   140027097:	mov    QWORD PTR [rip+0x1db02],rax        # 0x140044ba0
   14002709e:	test   rax,rax
   1400270a1:	jne    0x1400270aa
   1400270a3:	mov    eax,0x1a
   1400270a8:	jmp    0x1400270cd
   1400270aa:	lea    rcx,[rip+0x1b2ef]        # 0x1400423a0
   1400270b1:	mov    QWORD PTR [rbx+rax*1],rcx
   1400270b5:	add    rcx,0x30
   1400270b9:	lea    rbx,[rbx+0x8]
   1400270bd:	dec    rdi
   1400270c0:	je     0x1400270cb
   1400270c2:	mov    rax,QWORD PTR [rip+0x1dad7]        # 0x140044ba0
   1400270c9:	jmp    0x1400270b1
   1400270cb:	xor    eax,eax
   1400270cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400270d2:	add    rsp,0x20
   1400270d6:	pop    rdi
   1400270d7:	ret    
   1400270d8:	sub    rsp,0x28
   1400270dc:	call   0x140029e2c
   1400270e1:	cmp    BYTE PTR [rip+0x1cebc],0x0        # 0x140043fa4
   1400270e8:	je     0x1400270ef
   1400270ea:	call   0x140029f20
   1400270ef:	mov    rcx,QWORD PTR [rip+0x1daaa]        # 0x140044ba0
   1400270f6:	call   0x14001a1ac
   1400270fb:	and    QWORD PTR [rip+0x1da9d],0x0        # 0x140044ba0
   140027103:	add    rsp,0x28
   140027107:	ret    
   140027108:	lea    rax,[rip+0x1b291]        # 0x1400423a0
   14002710f:	ret    
   140027110:	rex push rbx
   140027112:	sub    rsp,0x20
   140027116:	mov    rbx,rcx
   140027119:	lea    rcx,[rip+0x1b280]        # 0x1400423a0
   140027120:	cmp    rbx,rcx
   140027123:	jb     0x140027165
   140027125:	lea    rax,[rip+0x1b604]        # 0x140042730
   14002712c:	cmp    rbx,rax
   14002712f:	ja     0x140027165
   140027131:	mov    rdx,rbx
   140027134:	movabs rax,0x2aaaaaaaaaaaaaab
   14002713e:	sub    rdx,rcx
   140027141:	imul   rdx
   140027144:	sar    rdx,0x3
   140027148:	mov    rcx,rdx
   14002714b:	shr    rcx,0x3f
   14002714f:	add    rcx,rdx
   140027152:	add    ecx,0x10
   140027155:	call   0x14001b118
   14002715a:	bts    DWORD PTR [rbx+0x18],0xf
   14002715f:	add    rsp,0x20
   140027163:	pop    rbx
   140027164:	ret    
   140027165:	lea    rcx,[rbx+0x30]
   140027169:	add    rsp,0x20
   14002716d:	pop    rbx
   14002716e:	rex.W jmp QWORD PTR [rip+0x80bb]        # 0x14002f230
   140027175:	int3   
   140027176:	int3   
   140027177:	int3   
   140027178:	rex push rbx
   14002717a:	sub    rsp,0x20
   14002717e:	mov    rbx,rdx
   140027181:	cmp    ecx,0x14
   140027184:	jge    0x140027199
   140027186:	add    ecx,0x10
   140027189:	call   0x14001b118
   14002718e:	bts    DWORD PTR [rbx+0x18],0xf
   140027193:	add    rsp,0x20
   140027197:	pop    rbx
   140027198:	ret    
   140027199:	lea    rcx,[rdx+0x30]
   14002719d:	add    rsp,0x20
   1400271a1:	pop    rbx
   1400271a2:	rex.W jmp QWORD PTR [rip+0x8087]        # 0x14002f230
   1400271a9:	int3   
   1400271aa:	int3   
   1400271ab:	int3   
   1400271ac:	lea    rdx,[rip+0x1b1ed]        # 0x1400423a0
   1400271b3:	cmp    rcx,rdx
   1400271b6:	jb     0x1400271ef
   1400271b8:	lea    rax,[rip+0x1b571]        # 0x140042730
   1400271bf:	cmp    rcx,rax
   1400271c2:	ja     0x1400271ef
   1400271c4:	btr    DWORD PTR [rcx+0x18],0xf
   1400271c9:	sub    rcx,rdx
   1400271cc:	movabs rax,0x2aaaaaaaaaaaaaab
   1400271d6:	imul   rcx
   1400271d9:	sar    rdx,0x3
   1400271dd:	mov    rcx,rdx
   1400271e0:	shr    rcx,0x3f
   1400271e4:	add    rcx,rdx
   1400271e7:	add    ecx,0x10
   1400271ea:	jmp    0x14001b308
   1400271ef:	add    rcx,0x30
   1400271f3:	rex.W jmp QWORD PTR [rip+0x803e]        # 0x14002f238
   1400271fa:	int3   
   1400271fb:	int3   
   1400271fc:	cmp    ecx,0x14
   1400271ff:	jge    0x14002720e
   140027201:	btr    DWORD PTR [rdx+0x18],0xf
   140027206:	add    ecx,0x10
   140027209:	jmp    0x14001b308
   14002720e:	lea    rcx,[rdx+0x30]
   140027212:	rex.W jmp QWORD PTR [rip+0x801f]        # 0x14002f238
   140027219:	int3   
   14002721a:	int3   
   14002721b:	int3   
   14002721c:	sub    rsp,0x28
   140027220:	test   rcx,rcx
   140027223:	jne    0x14002723a
   140027225:	call   0x14001b864
   14002722a:	mov    DWORD PTR [rax],0x16
   140027230:	call   0x14001ffb8
   140027235:	or     eax,0xffffffff
   140027238:	jmp    0x14002723d
   14002723a:	mov    eax,DWORD PTR [rcx+0x1c]
   14002723d:	add    rsp,0x28
   140027241:	ret    
   140027242:	int3   
   140027243:	int3   
   140027244:	sub    rsp,0x28
   140027248:	cmp    ecx,0xfffffffe
   14002724b:	jne    0x14002725a
   14002724d:	call   0x14001b864
   140027252:	mov    DWORD PTR [rax],0x9
   140027258:	jmp    0x14002729c
   14002725a:	test   ecx,ecx
   14002725c:	js     0x14002728c
   14002725e:	cmp    ecx,DWORD PTR [rip+0x1e95c]        # 0x140045bc0
   140027264:	jae    0x14002728c
   140027266:	movsxd rcx,ecx
   140027269:	lea    rdx,[rip+0x1cdb0]        # 0x140044020
   140027270:	mov    rax,rcx
   140027273:	and    ecx,0x1f
   140027276:	sar    rax,0x5
   14002727a:	imul   rcx,rcx,0x58
   14002727e:	mov    rax,QWORD PTR [rdx+rax*8]
   140027282:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140027287:	and    eax,0x40
   14002728a:	jmp    0x14002729e
   14002728c:	call   0x14001b864
   140027291:	mov    DWORD PTR [rax],0x9
   140027297:	call   0x14001ffb8
   14002729c:	xor    eax,eax
   14002729e:	add    rsp,0x28
   1400272a2:	ret    
   1400272a3:	int3   
   1400272a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400272a9:	mov    DWORD PTR [rsp+0x8],ecx
   1400272ad:	push   rsi
   1400272ae:	push   rdi
   1400272af:	push   r12
   1400272b1:	push   r14
   1400272b3:	push   r15
   1400272b5:	sub    rsp,0x20
   1400272b9:	mov    esi,r8d
   1400272bc:	mov    r14,rdx
   1400272bf:	movsxd rbx,ecx
   1400272c2:	cmp    ebx,0xfffffffe
   1400272c5:	jne    0x1400272df
   1400272c7:	call   0x14001b7f4
   1400272cc:	and    DWORD PTR [rax],0x0
   1400272cf:	call   0x14001b864
   1400272d4:	mov    DWORD PTR [rax],0x9
   1400272da:	jmp    0x140027370
   1400272df:	test   ecx,ecx
   1400272e1:	js     0x140027358
   1400272e3:	cmp    ebx,DWORD PTR [rip+0x1e8d7]        # 0x140045bc0
   1400272e9:	jae    0x140027358
   1400272eb:	mov    rax,rbx
   1400272ee:	mov    rdi,rbx
   1400272f1:	sar    rdi,0x5
   1400272f5:	lea    r12,[rip+0x1cd24]        # 0x140044020
   1400272fc:	and    eax,0x1f
   1400272ff:	imul   r15,rax,0x58
   140027303:	mov    rax,QWORD PTR [r12+rdi*8]
   140027307:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   14002730d:	and    ecx,0x1
   140027310:	je     0x140027358
   140027312:	mov    ecx,ebx
   140027314:	call   0x140029fc8
   140027319:	nop
   14002731a:	mov    rax,QWORD PTR [r12+rdi*8]
   14002731e:	test   BYTE PTR [rax+r15*1+0x8],0x1
   140027324:	je     0x140027337
   140027326:	mov    r8d,esi
   140027329:	mov    rdx,r14
   14002732c:	mov    ecx,ebx
   14002732e:	call   0x140027388
   140027333:	mov    edi,eax
   140027335:	jmp    0x14002734d
   140027337:	call   0x14001b864
   14002733c:	mov    DWORD PTR [rax],0x9
   140027342:	call   0x14001b7f4
   140027347:	and    DWORD PTR [rax],0x0
   14002734a:	or     edi,0xffffffff
   14002734d:	mov    ecx,ebx
   14002734f:	call   0x14002a180
   140027354:	mov    eax,edi
   140027356:	jmp    0x140027373
   140027358:	call   0x14001b7f4
   14002735d:	and    DWORD PTR [rax],0x0
   140027360:	call   0x14001b864
   140027365:	mov    DWORD PTR [rax],0x9
   14002736b:	call   0x14001ffb8
   140027370:	or     eax,0xffffffff
   140027373:	mov    rbx,QWORD PTR [rsp+0x58]
   140027378:	add    rsp,0x20
   14002737c:	pop    r15
   14002737e:	pop    r14
   140027380:	pop    r12
   140027382:	pop    rdi
   140027383:	pop    rsi
   140027384:	ret    
   140027385:	int3   
   140027386:	int3   
   140027387:	int3   
   140027388:	mov    QWORD PTR [rsp+0x20],rbx
   14002738d:	push   rbp
   14002738e:	push   rsi
   14002738f:	push   rdi
   140027390:	push   r12
   140027392:	push   r13
   140027394:	push   r14
   140027396:	push   r15
   140027398:	lea    rbp,[rsp-0x1a40]
   1400273a0:	mov    eax,0x1b40
   1400273a5:	call   0x140024ee0
   1400273aa:	sub    rsp,rax
   1400273ad:	mov    rax,QWORD PTR [rip+0x1a29c]        # 0x140041650
   1400273b4:	xor    rax,rsp
   1400273b7:	mov    QWORD PTR [rbp+0x1a30],rax
   1400273be:	xor    r12d,r12d
   1400273c1:	mov    r15d,r8d
   1400273c4:	mov    r14,rdx
   1400273c7:	movsxd rdi,ecx
   1400273ca:	mov    DWORD PTR [rsp+0x40],r12d
   1400273cf:	mov    ebx,r12d
   1400273d2:	mov    esi,r12d
   1400273d5:	test   r8d,r8d
   1400273d8:	jne    0x1400273e1
   1400273da:	xor    eax,eax
   1400273dc:	jmp    0x140027b4f
   1400273e1:	test   rdx,rdx
   1400273e4:	jne    0x140027406
   1400273e6:	call   0x14001b7f4
   1400273eb:	mov    DWORD PTR [rax],r12d
   1400273ee:	call   0x14001b864
   1400273f3:	mov    DWORD PTR [rax],0x16
   1400273f9:	call   0x14001ffb8
   1400273fe:	or     eax,0xffffffff
   140027401:	jmp    0x140027b4f
   140027406:	mov    rax,rdi
   140027409:	mov    rcx,rdi
   14002740c:	lea    rdx,[rip+0x1cc0d]        # 0x140044020
   140027413:	sar    rcx,0x5
   140027417:	and    eax,0x1f
   14002741a:	mov    QWORD PTR [rsp+0x48],rcx
   14002741f:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140027423:	imul   r13,rax,0x58
   140027427:	mov    r12b,BYTE PTR [r13+rcx*1+0x38]
   14002742c:	mov    QWORD PTR [rsp+0x58],r13
   140027431:	add    r12b,r12b
   140027434:	sar    r12b,1
   140027437:	lea    eax,[r12-0x1]
   14002743c:	cmp    al,0x1
   14002743e:	ja     0x140027454
   140027440:	mov    eax,r15d
   140027443:	not    eax
   140027445:	test   al,0x1
   140027447:	jne    0x140027454
   140027449:	call   0x14001b7f4
   14002744e:	xor    ecx,ecx
   140027450:	mov    DWORD PTR [rax],ecx
   140027452:	jmp    0x1400273ee
   140027454:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14002745a:	je     0x140027469
   14002745c:	xor    edx,edx
   14002745e:	mov    ecx,edi
   140027460:	lea    r8d,[rdx+0x2]
   140027464:	call   0x140027c64
   140027469:	mov    ecx,edi
   14002746b:	call   0x140027244
   140027470:	mov    rdi,QWORD PTR [rsp+0x48]
   140027475:	test   eax,eax
   140027477:	je     0x1400277bd
   14002747d:	lea    rax,[rip+0x1cb9c]        # 0x140044020
   140027484:	mov    rax,QWORD PTR [rax+rdi*8]
   140027488:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14002748e:	je     0x1400277bd
   140027494:	call   0x14001ef6c
   140027499:	lea    rdx,[rsp+0x64]
   14002749e:	mov    rcx,QWORD PTR [rax+0xc0]
   1400274a5:	xor    eax,eax
   1400274a7:	cmp    QWORD PTR [rcx+0x138],rax
   1400274ae:	mov    edi,eax
   1400274b0:	mov    rax,QWORD PTR [rsp+0x48]
   1400274b5:	lea    rcx,[rip+0x1cb64]        # 0x140044020
   1400274bc:	sete   dil
   1400274c0:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400274c4:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   1400274c9:	call   QWORD PTR [rip+0x7cf9]        # 0x14002f1c8
   1400274cf:	xor    ecx,ecx
   1400274d1:	test   eax,eax
   1400274d3:	je     0x1400277b8
   1400274d9:	xor    eax,eax
   1400274db:	test   edi,edi
   1400274dd:	je     0x1400274e8
   1400274df:	test   r12b,r12b
   1400274e2:	je     0x1400277b1
   1400274e8:	call   QWORD PTR [rip+0x7cd2]        # 0x14002f1c0
   1400274ee:	mov    rdi,r14
   1400274f1:	mov    DWORD PTR [rsp+0x68],eax
   1400274f5:	xor    eax,eax
   1400274f7:	movzx  ecx,ax
   1400274fa:	mov    WORD PTR [rsp+0x44],ax
   1400274ff:	mov    DWORD PTR [rsp+0x60],eax
   140027503:	test   r15d,r15d
   140027506:	je     0x140027b12
   14002750c:	mov    r13d,eax
   14002750f:	test   r12b,r12b
   140027512:	jne    0x1400276bb
   140027518:	mov    cl,BYTE PTR [rdi]
   14002751a:	mov    r13,QWORD PTR [rsp+0x58]
   14002751f:	lea    rdx,[rip+0x1cafa]        # 0x140044020
   140027526:	cmp    cl,0xa
   140027529:	sete   al
   14002752c:	xor    r8d,r8d
   14002752f:	mov    DWORD PTR [rsp+0x64],eax
   140027533:	mov    rax,QWORD PTR [rsp+0x48]
   140027538:	mov    rdx,QWORD PTR [rdx+rax*8]
   14002753c:	cmp    DWORD PTR [r13+rdx*1+0x50],r8d
   140027541:	je     0x140027562
   140027543:	mov    al,BYTE PTR [r13+rdx*1+0x4c]
   140027548:	mov    BYTE PTR [rsp+0x6d],cl
   14002754c:	mov    BYTE PTR [rsp+0x6c],al
   140027550:	mov    DWORD PTR [r13+rdx*1+0x50],r8d
   140027555:	mov    r8d,0x2
   14002755b:	lea    rdx,[rsp+0x6c]
   140027560:	jmp    0x1400275ab
   140027562:	movsx  ecx,cl
   140027565:	call   0x1400251e8
   14002756a:	test   eax,eax
   14002756c:	je     0x1400275a2
   14002756e:	mov    rax,r15
   140027571:	sub    rax,rdi
   140027574:	add    rax,r14
   140027577:	cmp    rax,0x1
   14002757b:	jle    0x140027734
   140027581:	lea    rcx,[rsp+0x44]
   140027586:	mov    r8d,0x2
   14002758c:	mov    rdx,rdi
   14002758f:	call   0x14002a300
   140027594:	cmp    eax,0xffffffff
   140027597:	je     0x140027776
   14002759d:	inc    rdi
   1400275a0:	jmp    0x1400275be
   1400275a2:	mov    r8d,0x1
   1400275a8:	mov    rdx,rdi
   1400275ab:	lea    rcx,[rsp+0x44]
   1400275b0:	call   0x14002a300
   1400275b5:	cmp    eax,0xffffffff
   1400275b8:	je     0x140027776
   1400275be:	mov    ecx,DWORD PTR [rsp+0x68]
   1400275c2:	xor    eax,eax
   1400275c4:	lea    r8,[rsp+0x44]
   1400275c9:	mov    QWORD PTR [rsp+0x38],rax
   1400275ce:	mov    QWORD PTR [rsp+0x30],rax
   1400275d3:	lea    rax,[rsp+0x6c]
   1400275d8:	mov    r9d,0x1
   1400275de:	xor    edx,edx
   1400275e0:	mov    DWORD PTR [rsp+0x28],0x5
   1400275e8:	mov    QWORD PTR [rsp+0x20],rax
   1400275ed:	inc    rdi
   1400275f0:	call   QWORD PTR [rip+0x7c1a]        # 0x14002f210
   1400275f6:	mov    r13d,eax
   1400275f9:	test   eax,eax
   1400275fb:	je     0x140027771
   140027601:	mov    rax,QWORD PTR [rsp+0x48]
   140027606:	lea    rcx,[rip+0x1ca13]        # 0x140044020
   14002760d:	lea    r9,[rsp+0x60]
   140027612:	mov    rcx,QWORD PTR [rcx+rax*8]
   140027616:	xor    eax,eax
   140027618:	lea    rdx,[rsp+0x6c]
   14002761d:	mov    QWORD PTR [rsp+0x20],rax
   140027622:	mov    rax,QWORD PTR [rsp+0x58]
   140027627:	mov    r8d,r13d
   14002762a:	mov    rcx,QWORD PTR [rax+rcx*1]
   14002762e:	call   QWORD PTR [rip+0x7aec]        # 0x14002f120
   140027634:	test   eax,eax
   140027636:	je     0x140027769
   14002763c:	mov    eax,DWORD PTR [rsp+0x40]
   140027640:	mov    ebx,edi
   140027642:	sub    ebx,r14d
   140027645:	add    ebx,eax
   140027647:	cmp    DWORD PTR [rsp+0x60],r13d
   14002764c:	jl     0x140027af7
   140027652:	xor    r13d,r13d
   140027655:	cmp    DWORD PTR [rsp+0x64],r13d
   14002765a:	je     0x1400276b4
   14002765c:	mov    rax,QWORD PTR [rsp+0x48]
   140027661:	lea    r8d,[r13+0x1]
   140027665:	mov    BYTE PTR [rsp+0x6c],0xd
   14002766a:	lea    rcx,[rip+0x1c9af]        # 0x140044020
   140027671:	mov    QWORD PTR [rsp+0x20],r13
   140027676:	mov    r13,QWORD PTR [rsp+0x58]
   14002767b:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002767f:	lea    r9,[rsp+0x60]
   140027684:	lea    rdx,[rsp+0x6c]
   140027689:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14002768e:	call   QWORD PTR [rip+0x7a8c]        # 0x14002f120
   140027694:	test   eax,eax
   140027696:	je     0x14002775f
   14002769c:	cmp    DWORD PTR [rsp+0x60],0x1
   1400276a1:	jl     0x140027776
   1400276a7:	inc    DWORD PTR [rsp+0x40]
   1400276ab:	movzx  ecx,WORD PTR [rsp+0x44]
   1400276b0:	inc    ebx
   1400276b2:	jmp    0x140027723
   1400276b4:	movzx  ecx,WORD PTR [rsp+0x44]
   1400276b9:	jmp    0x14002771e
   1400276bb:	lea    eax,[r12-0x1]
   1400276c0:	cmp    al,0x1
   1400276c2:	ja     0x1400276dd
   1400276c4:	movzx  ecx,WORD PTR [rdi]
   1400276c7:	xor    eax,eax
   1400276c9:	cmp    cx,0xa
   1400276cd:	mov    r13d,eax
   1400276d0:	mov    WORD PTR [rsp+0x44],cx
   1400276d5:	sete   r13b
   1400276d9:	add    rdi,0x2
   1400276dd:	lea    eax,[r12-0x1]
   1400276e2:	cmp    al,0x1
   1400276e4:	ja     0x14002771e
   1400276e6:	call   0x14002a308
   1400276eb:	movzx  ecx,WORD PTR [rsp+0x44]
   1400276f0:	cmp    ax,cx
   1400276f3:	jne    0x140027769
   1400276f5:	add    ebx,0x2
   1400276f8:	test   r13d,r13d
   1400276fb:	je     0x14002771e
   1400276fd:	mov    eax,0xd
   140027702:	mov    ecx,eax
   140027704:	mov    WORD PTR [rsp+0x44],ax
   140027709:	call   0x14002a308
   14002770e:	movzx  ecx,WORD PTR [rsp+0x44]
   140027713:	cmp    ax,cx
   140027716:	jne    0x140027769
   140027718:	inc    ebx
   14002771a:	inc    DWORD PTR [rsp+0x40]
   14002771e:	mov    r13,QWORD PTR [rsp+0x58]
   140027723:	mov    eax,edi
   140027725:	sub    eax,r14d
   140027728:	cmp    eax,r15d
   14002772b:	jae    0x140027776
   14002772d:	xor    eax,eax
   14002772f:	jmp    0x14002750c
   140027734:	mov    al,BYTE PTR [rdi]
   140027736:	mov    r15,QWORD PTR [rsp+0x48]
   14002773b:	lea    r12,[rip+0x1c8de]        # 0x140044020
   140027742:	mov    rcx,QWORD PTR [r12+r15*8]
   140027746:	inc    ebx
   140027748:	mov    rdi,r15
   14002774b:	mov    BYTE PTR [r13+rcx*1+0x4c],al
   140027750:	mov    rax,QWORD PTR [r12+r15*8]
   140027754:	mov    DWORD PTR [r13+rax*1+0x50],0x1
   14002775d:	jmp    0x14002777b
   14002775f:	call   QWORD PTR [rip+0x7a3b]        # 0x14002f1a0
   140027765:	mov    esi,eax
   140027767:	jmp    0x140027776
   140027769:	call   QWORD PTR [rip+0x7a31]        # 0x14002f1a0
   14002776f:	mov    esi,eax
   140027771:	mov    r13,QWORD PTR [rsp+0x58]
   140027776:	mov    rdi,QWORD PTR [rsp+0x48]
   14002777b:	mov    eax,DWORD PTR [rsp+0x40]
   14002777f:	test   ebx,ebx
   140027781:	jne    0x140027b4b
   140027787:	xor    ebx,ebx
   140027789:	test   esi,esi
   14002778b:	je     0x140027b17
   140027791:	cmp    esi,0x5
   140027794:	jne    0x140027b06
   14002779a:	call   0x14001b864
   14002779f:	mov    DWORD PTR [rax],0x9
   1400277a5:	call   0x14001b7f4
   1400277aa:	mov    DWORD PTR [rax],esi
   1400277ac:	jmp    0x1400273fe
   1400277b1:	mov    rdi,QWORD PTR [rsp+0x48]
   1400277b6:	jmp    0x1400277bf
   1400277b8:	mov    rdi,QWORD PTR [rsp+0x48]
   1400277bd:	xor    eax,eax
   1400277bf:	lea    r9,[rip+0x1c85a]        # 0x140044020
   1400277c6:	mov    rcx,QWORD PTR [r9+rdi*8]
   1400277ca:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   1400277d0:	je     0x140027abe
   1400277d6:	mov    esi,eax
   1400277d8:	test   r12b,r12b
   1400277db:	jne    0x1400278b9
   1400277e1:	mov    r12,r14
   1400277e4:	test   r15d,r15d
   1400277e7:	je     0x140027b17
   1400277ed:	mov    edx,0xd
   1400277f2:	jmp    0x1400277f6
   1400277f4:	xor    eax,eax
   1400277f6:	mov    r13d,DWORD PTR [rsp+0x40]
   1400277fb:	lea    rdi,[rbp+0x630]
   140027802:	mov    rcx,rax
   140027805:	mov    eax,r12d
   140027808:	sub    eax,r14d
   14002780b:	cmp    eax,r15d
   14002780e:	jae    0x140027837
   140027810:	mov    al,BYTE PTR [r12]
   140027814:	inc    r12
   140027817:	cmp    al,0xa
   140027819:	jne    0x140027826
   14002781b:	mov    BYTE PTR [rdi],dl
   14002781d:	inc    r13d
   140027820:	inc    rdi
   140027823:	inc    rcx
   140027826:	inc    rcx
   140027829:	mov    BYTE PTR [rdi],al
   14002782b:	inc    rdi
   14002782e:	cmp    rcx,0x13ff
   140027835:	jb     0x140027805
   140027837:	lea    rax,[rbp+0x630]
   14002783e:	mov    r8d,edi
   140027841:	mov    DWORD PTR [rsp+0x40],r13d
   140027846:	mov    r13,QWORD PTR [rsp+0x58]
   14002784b:	sub    r8d,eax
   14002784e:	mov    rax,QWORD PTR [rsp+0x48]
   140027853:	mov    rcx,QWORD PTR [r9+rax*8]
   140027857:	xor    eax,eax
   140027859:	lea    r9,[rsp+0x50]
   14002785e:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140027863:	lea    rdx,[rbp+0x630]
   14002786a:	mov    QWORD PTR [rsp+0x20],rax
   14002786f:	call   QWORD PTR [rip+0x78ab]        # 0x14002f120
   140027875:	test   eax,eax
   140027877:	je     0x14002775f
   14002787d:	add    ebx,DWORD PTR [rsp+0x50]
   140027881:	lea    rax,[rbp+0x630]
   140027888:	sub    rdi,rax
   14002788b:	movsxd rax,DWORD PTR [rsp+0x50]
   140027890:	cmp    rax,rdi
   140027893:	jl     0x140027776
   140027899:	mov    eax,r12d
   14002789c:	mov    edx,0xd
   1400278a1:	lea    r9,[rip+0x1c778]        # 0x140044020
   1400278a8:	sub    eax,r14d
   1400278ab:	cmp    eax,r15d
   1400278ae:	jb     0x1400277f4
   1400278b4:	jmp    0x140027776
   1400278b9:	cmp    r12b,0x2
   1400278bd:	mov    r12,r14
   1400278c0:	jne    0x1400279a6
   1400278c6:	test   r15d,r15d
   1400278c9:	je     0x140027b17
   1400278cf:	mov    edx,0xd
   1400278d4:	jmp    0x1400278d8
   1400278d6:	xor    eax,eax
   1400278d8:	mov    r13d,DWORD PTR [rsp+0x40]
   1400278dd:	lea    rdi,[rbp+0x630]
   1400278e4:	mov    rcx,rax
   1400278e7:	mov    eax,r12d
   1400278ea:	sub    eax,r14d
   1400278ed:	cmp    eax,r15d
   1400278f0:	jae    0x140027924
   1400278f2:	movzx  eax,WORD PTR [r12]
   1400278f7:	add    r12,0x2
   1400278fb:	cmp    ax,0xa
   1400278ff:	jne    0x140027910
   140027901:	mov    WORD PTR [rdi],dx
   140027904:	add    r13d,0x2
   140027908:	add    rdi,0x2
   14002790c:	add    rcx,0x2
   140027910:	add    rcx,0x2
   140027914:	mov    WORD PTR [rdi],ax
   140027917:	add    rdi,0x2
   14002791b:	cmp    rcx,0x13fe
   140027922:	jb     0x1400278e7
   140027924:	lea    rax,[rbp+0x630]
   14002792b:	mov    r8d,edi
   14002792e:	mov    DWORD PTR [rsp+0x40],r13d
   140027933:	mov    r13,QWORD PTR [rsp+0x58]
   140027938:	sub    r8d,eax
   14002793b:	mov    rax,QWORD PTR [rsp+0x48]
   140027940:	mov    rcx,QWORD PTR [r9+rax*8]
   140027944:	xor    eax,eax
   140027946:	lea    r9,[rsp+0x50]
   14002794b:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140027950:	lea    rdx,[rbp+0x630]
   140027957:	mov    QWORD PTR [rsp+0x20],rax
   14002795c:	call   QWORD PTR [rip+0x77be]        # 0x14002f120
   140027962:	test   eax,eax
   140027964:	je     0x14002775f
   14002796a:	add    ebx,DWORD PTR [rsp+0x50]
   14002796e:	lea    rax,[rbp+0x630]
   140027975:	sub    rdi,rax
   140027978:	movsxd rax,DWORD PTR [rsp+0x50]
   14002797d:	cmp    rax,rdi
   140027980:	jl     0x140027776
   140027986:	mov    eax,r12d
   140027989:	mov    edx,0xd
   14002798e:	lea    r9,[rip+0x1c68b]        # 0x140044020
   140027995:	sub    eax,r14d
   140027998:	cmp    eax,r15d
   14002799b:	jb     0x1400278d6
   1400279a1:	jmp    0x140027776
   1400279a6:	test   r15d,r15d
   1400279a9:	je     0x140027b17
   1400279af:	mov    r8d,0xd
   1400279b5:	jmp    0x1400279b9
   1400279b7:	xor    eax,eax
   1400279b9:	lea    rcx,[rbp-0x80]
   1400279bd:	mov    rdx,rax
   1400279c0:	mov    eax,r12d
   1400279c3:	sub    eax,r14d
   1400279c6:	cmp    eax,r15d
   1400279c9:	jae    0x1400279fa
   1400279cb:	movzx  eax,WORD PTR [r12]
   1400279d0:	add    r12,0x2
   1400279d4:	cmp    ax,0xa
   1400279d8:	jne    0x1400279e6
   1400279da:	mov    WORD PTR [rcx],r8w
   1400279de:	add    rcx,0x2
   1400279e2:	add    rdx,0x2
   1400279e6:	add    rdx,0x2
   1400279ea:	mov    WORD PTR [rcx],ax
   1400279ed:	add    rcx,0x2
   1400279f1:	cmp    rdx,0x6a8
   1400279f8:	jb     0x1400279c0
   1400279fa:	lea    rax,[rbp-0x80]
   1400279fe:	xor    edi,edi
   140027a00:	lea    r8,[rbp-0x80]
   140027a04:	sub    ecx,eax
   140027a06:	mov    QWORD PTR [rsp+0x38],rdi
   140027a0b:	mov    QWORD PTR [rsp+0x30],rdi
   140027a10:	mov    eax,ecx
   140027a12:	mov    ecx,0xfde9
   140027a17:	mov    DWORD PTR [rsp+0x28],0xd55
   140027a1f:	cdq    
   140027a20:	sub    eax,edx
   140027a22:	xor    edx,edx
   140027a24:	sar    eax,1
   140027a26:	mov    r9d,eax
   140027a29:	lea    rax,[rbp+0x630]
   140027a30:	mov    QWORD PTR [rsp+0x20],rax
   140027a35:	call   QWORD PTR [rip+0x77d5]        # 0x14002f210
   140027a3b:	mov    r13d,eax
   140027a3e:	test   eax,eax
   140027a40:	je     0x140027769
   140027a46:	movsxd rax,edi
   140027a49:	mov    r8d,r13d
   140027a4c:	lea    rdx,[rbp+0x630]
   140027a53:	add    rdx,rax
   140027a56:	mov    rax,QWORD PTR [rsp+0x48]
   140027a5b:	lea    rcx,[rip+0x1c5be]        # 0x140044020
   140027a62:	mov    rcx,QWORD PTR [rcx+rax*8]
   140027a66:	xor    eax,eax
   140027a68:	lea    r9,[rsp+0x50]
   140027a6d:	mov    QWORD PTR [rsp+0x20],rax
   140027a72:	mov    rax,QWORD PTR [rsp+0x58]
   140027a77:	sub    r8d,edi
   140027a7a:	mov    rcx,QWORD PTR [rax+rcx*1]
   140027a7e:	call   QWORD PTR [rip+0x769c]        # 0x14002f120
   140027a84:	test   eax,eax
   140027a86:	je     0x140027a93
   140027a88:	add    edi,DWORD PTR [rsp+0x50]
   140027a8c:	cmp    r13d,edi
   140027a8f:	jg     0x140027a46
   140027a91:	jmp    0x140027a9b
   140027a93:	call   QWORD PTR [rip+0x7707]        # 0x14002f1a0
   140027a99:	mov    esi,eax
   140027a9b:	cmp    r13d,edi
   140027a9e:	jg     0x140027771
   140027aa4:	mov    ebx,r12d
   140027aa7:	mov    r8d,0xd
   140027aad:	sub    ebx,r14d
   140027ab0:	cmp    ebx,r15d
   140027ab3:	jb     0x1400279b7
   140027ab9:	jmp    0x140027771
   140027abe:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140027ac3:	lea    r9,[rsp+0x50]
   140027ac8:	mov    r8d,r15d
   140027acb:	mov    rdx,r14
   140027ace:	mov    QWORD PTR [rsp+0x20],rax
   140027ad3:	call   QWORD PTR [rip+0x7647]        # 0x14002f120
   140027ad9:	test   eax,eax
   140027adb:	je     0x140027ae8
   140027add:	mov    ebx,DWORD PTR [rsp+0x50]
   140027ae1:	mov    eax,esi
   140027ae3:	jmp    0x14002777f
   140027ae8:	call   QWORD PTR [rip+0x76b2]        # 0x14002f1a0
   140027aee:	mov    esi,eax
   140027af0:	mov    eax,ebx
   140027af2:	jmp    0x14002777f
   140027af7:	mov    r13,QWORD PTR [rsp+0x58]
   140027afc:	mov    rdi,QWORD PTR [rsp+0x48]
   140027b01:	jmp    0x14002777f
   140027b06:	mov    ecx,esi
   140027b08:	call   0x14001b814
   140027b0d:	jmp    0x1400273fe
   140027b12:	mov    rdi,QWORD PTR [rsp+0x48]
   140027b17:	lea    rax,[rip+0x1c502]        # 0x140044020
   140027b1e:	mov    rax,QWORD PTR [rax+rdi*8]
   140027b22:	test   BYTE PTR [r13+rax*1+0x8],0x40
   140027b28:	je     0x140027b34
   140027b2a:	cmp    BYTE PTR [r14],0x1a
   140027b2e:	je     0x1400273da
   140027b34:	call   0x14001b864
   140027b39:	mov    DWORD PTR [rax],0x1c
   140027b3f:	call   0x14001b7f4
   140027b44:	mov    DWORD PTR [rax],ebx
   140027b46:	jmp    0x1400273fe
   140027b4b:	sub    ebx,eax
   140027b4d:	mov    eax,ebx
   140027b4f:	mov    rcx,QWORD PTR [rbp+0x1a30]
   140027b56:	xor    rcx,rsp
   140027b59:	call   0x1400187d0
   140027b5e:	mov    rbx,QWORD PTR [rsp+0x1b98]
   140027b66:	add    rsp,0x1b40
   140027b6d:	pop    r15
   140027b6f:	pop    r14
   140027b71:	pop    r13
   140027b73:	pop    r12
   140027b75:	pop    rdi
   140027b76:	pop    rsi
   140027b77:	pop    rbp
   140027b78:	ret    
   140027b79:	int3   
   140027b7a:	int3   
   140027b7b:	int3   
   140027b7c:	mov    QWORD PTR [rsp+0x10],rbx
   140027b81:	mov    DWORD PTR [rsp+0x8],ecx
   140027b85:	push   rsi
   140027b86:	push   rdi
   140027b87:	push   r12
   140027b89:	push   r14
   140027b8b:	push   r15
   140027b8d:	sub    rsp,0x20
   140027b91:	mov    esi,r8d
   140027b94:	mov    r14,rdx
   140027b97:	movsxd rbx,ecx
   140027b9a:	cmp    ebx,0xfffffffe
   140027b9d:	jne    0x140027bb7
   140027b9f:	call   0x14001b7f4
   140027ba4:	and    DWORD PTR [rax],0x0
   140027ba7:	call   0x14001b864
   140027bac:	mov    DWORD PTR [rax],0x9
   140027bb2:	jmp    0x140027c4b
   140027bb7:	test   ecx,ecx
   140027bb9:	js     0x140027c33
   140027bbb:	cmp    ebx,DWORD PTR [rip+0x1dfff]        # 0x140045bc0
   140027bc1:	jae    0x140027c33
   140027bc3:	mov    rax,rbx
   140027bc6:	mov    rdi,rbx
   140027bc9:	sar    rdi,0x5
   140027bcd:	lea    r12,[rip+0x1c44c]        # 0x140044020
   140027bd4:	and    eax,0x1f
   140027bd7:	imul   r15,rax,0x58
   140027bdb:	mov    rax,QWORD PTR [r12+rdi*8]
   140027bdf:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   140027be5:	and    ecx,0x1
   140027be8:	je     0x140027c33
   140027bea:	mov    ecx,ebx
   140027bec:	call   0x140029fc8
   140027bf1:	nop
   140027bf2:	mov    rax,QWORD PTR [r12+rdi*8]
   140027bf6:	test   BYTE PTR [rax+r15*1+0x8],0x1
   140027bfc:	je     0x140027c10
   140027bfe:	mov    r8d,esi
   140027c01:	mov    rdx,r14
   140027c04:	mov    ecx,ebx
   140027c06:	call   0x140027c64
   140027c0b:	mov    rdi,rax
   140027c0e:	jmp    0x140027c27
   140027c10:	call   0x14001b864
   140027c15:	mov    DWORD PTR [rax],0x9
   140027c1b:	call   0x14001b7f4
   140027c20:	and    DWORD PTR [rax],0x0
   140027c23:	or     rdi,0xffffffffffffffff
   140027c27:	mov    ecx,ebx
   140027c29:	call   0x14002a180
   140027c2e:	mov    rax,rdi
   140027c31:	jmp    0x140027c4f
   140027c33:	call   0x14001b7f4
   140027c38:	and    DWORD PTR [rax],0x0
   140027c3b:	call   0x14001b864
   140027c40:	mov    DWORD PTR [rax],0x9
   140027c46:	call   0x14001ffb8
   140027c4b:	or     rax,0xffffffffffffffff
   140027c4f:	mov    rbx,QWORD PTR [rsp+0x58]
   140027c54:	add    rsp,0x20
   140027c58:	pop    r15
   140027c5a:	pop    r14
   140027c5c:	pop    r12
   140027c5e:	pop    rdi
   140027c5f:	pop    rsi
   140027c60:	ret    
   140027c61:	int3   
   140027c62:	int3   
   140027c63:	int3   
   140027c64:	mov    QWORD PTR [rsp+0x8],rbx
   140027c69:	mov    QWORD PTR [rsp+0x10],rsi
   140027c6e:	push   rdi
   140027c6f:	sub    rsp,0x20
   140027c73:	movsxd rbx,ecx
   140027c76:	mov    edi,r8d
   140027c79:	mov    rsi,rdx
   140027c7c:	mov    ecx,ebx
   140027c7e:	call   0x14002a10c
   140027c83:	cmp    rax,0xffffffffffffffff
   140027c87:	jne    0x140027c9a
   140027c89:	call   0x14001b864
   140027c8e:	mov    DWORD PTR [rax],0x9
   140027c94:	or     rax,0xffffffffffffffff
   140027c98:	jmp    0x140027ce7
   140027c9a:	lea    r8,[rsp+0x48]
   140027c9f:	mov    r9d,edi
   140027ca2:	mov    rdx,rsi
   140027ca5:	mov    rcx,rax
   140027ca8:	call   QWORD PTR [rip+0x7522]        # 0x14002f1d0
   140027cae:	test   eax,eax
   140027cb0:	jne    0x140027cc1
   140027cb2:	call   QWORD PTR [rip+0x74e8]        # 0x14002f1a0
   140027cb8:	mov    ecx,eax
   140027cba:	call   0x14001b814
   140027cbf:	jmp    0x140027c94
   140027cc1:	mov    rcx,rbx
   140027cc4:	mov    rax,rbx
   140027cc7:	lea    rdx,[rip+0x1c352]        # 0x140044020
   140027cce:	sar    rax,0x5
   140027cd2:	and    ecx,0x1f
   140027cd5:	mov    rax,QWORD PTR [rdx+rax*8]
   140027cd9:	imul   rcx,rcx,0x58
   140027cdd:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140027ce2:	mov    rax,QWORD PTR [rsp+0x48]
   140027ce7:	mov    rbx,QWORD PTR [rsp+0x30]
   140027cec:	mov    rsi,QWORD PTR [rsp+0x38]
   140027cf1:	add    rsp,0x20
   140027cf5:	pop    rdi
   140027cf6:	ret    
   140027cf7:	int3   
   140027cf8:	rex push rbx
   140027cfa:	sub    rsp,0x20
   140027cfe:	inc    DWORD PTR [rip+0x1cd74]        # 0x140044a78
   140027d04:	mov    rbx,rcx
   140027d07:	mov    ecx,0x1000
   140027d0c:	call   0x14001c25c
   140027d11:	mov    QWORD PTR [rbx+0x10],rax
   140027d15:	test   rax,rax
   140027d18:	je     0x140027d27
   140027d1a:	or     DWORD PTR [rbx+0x18],0x8
   140027d1e:	mov    DWORD PTR [rbx+0x24],0x1000
   140027d25:	jmp    0x140027d3a
   140027d27:	or     DWORD PTR [rbx+0x18],0x4
   140027d2b:	lea    rax,[rbx+0x20]
   140027d2f:	mov    DWORD PTR [rbx+0x24],0x2
   140027d36:	mov    QWORD PTR [rbx+0x10],rax
   140027d3a:	mov    rax,QWORD PTR [rbx+0x10]
   140027d3e:	and    DWORD PTR [rbx+0x8],0x0
   140027d42:	mov    QWORD PTR [rbx],rax
   140027d45:	add    rsp,0x20
   140027d49:	pop    rbx
   140027d4a:	ret    
   140027d4b:	int3   
   140027d4c:	mov    rcx,QWORD PTR [rip+0x198fd]        # 0x140041650
   140027d53:	xor    eax,eax
   140027d55:	or     rcx,0x1
   140027d59:	cmp    QWORD PTR [rip+0x1cd20],rcx        # 0x140044a80
   140027d60:	sete   al
   140027d63:	ret    
   140027d64:	mov    QWORD PTR [rsp+0x8],rbx
   140027d69:	mov    QWORD PTR [rsp+0x18],rsi
   140027d6e:	mov    WORD PTR [rsp+0x20],r9w
   140027d74:	push   rdi
   140027d75:	sub    rsp,0x60
   140027d79:	mov    rdi,r8
   140027d7c:	mov    rsi,rdx
   140027d7f:	mov    rbx,rcx
   140027d82:	test   rdx,rdx
   140027d85:	jne    0x140027d9a
   140027d87:	test   r8,r8
   140027d8a:	je     0x140027d9a
   140027d8c:	test   rcx,rcx
   140027d8f:	je     0x140027d93
   140027d91:	and    DWORD PTR [rcx],edx
   140027d93:	xor    eax,eax
   140027d95:	jmp    0x140027e2f
   140027d9a:	test   rcx,rcx
   140027d9d:	je     0x140027da2
   140027d9f:	or     DWORD PTR [rcx],0xffffffff
   140027da2:	cmp    r8,0x7fffffff
   140027da9:	jbe    0x140027dbe
   140027dab:	call   0x14001b864
   140027db0:	mov    ebx,0x16
   140027db5:	mov    DWORD PTR [rax],ebx
   140027db7:	call   0x14001ffb8
   140027dbc:	jmp    0x140027e2d
   140027dbe:	mov    rdx,QWORD PTR [rsp+0x90]
   140027dc6:	lea    rcx,[rsp+0x40]
   140027dcb:	call   0x140019058
   140027dd0:	mov    rax,QWORD PTR [rsp+0x40]
   140027dd5:	cmp    QWORD PTR [rax+0x138],0x0
   140027ddd:	jne    0x140027e5e
   140027ddf:	movzx  eax,WORD PTR [rsp+0x88]
   140027de7:	mov    ecx,0xff
   140027dec:	cmp    ax,cx
   140027def:	jbe    0x140027e41
   140027df1:	test   rsi,rsi
   140027df4:	je     0x140027e08
   140027df6:	test   rdi,rdi
   140027df9:	je     0x140027e08
   140027dfb:	mov    r8,rdi
   140027dfe:	xor    edx,edx
   140027e00:	mov    rcx,rsi
   140027e03:	call   0x14001b980
   140027e08:	call   0x14001b864
   140027e0d:	mov    DWORD PTR [rax],0x2a
   140027e13:	call   0x14001b864
   140027e18:	mov    ebx,DWORD PTR [rax]
   140027e1a:	cmp    BYTE PTR [rsp+0x58],0x0
   140027e1f:	je     0x140027e2d
   140027e21:	mov    rcx,QWORD PTR [rsp+0x50]
   140027e26:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140027e2d:	mov    eax,ebx
   140027e2f:	lea    r11,[rsp+0x60]
   140027e34:	mov    rbx,QWORD PTR [r11+0x10]
   140027e38:	mov    rsi,QWORD PTR [r11+0x20]
   140027e3c:	mov    rsp,r11
   140027e3f:	pop    rdi
   140027e40:	ret    
   140027e41:	test   rsi,rsi
   140027e44:	je     0x140027e51
   140027e46:	test   rdi,rdi
   140027e49:	je     0x140027ed8
   140027e4f:	mov    BYTE PTR [rsi],al
   140027e51:	test   rbx,rbx
   140027e54:	je     0x140027eab
   140027e56:	mov    DWORD PTR [rbx],0x1
   140027e5c:	jmp    0x140027eab
   140027e5e:	and    DWORD PTR [rsp+0x78],0x0
   140027e63:	lea    rcx,[rsp+0x78]
   140027e68:	lea    r8,[rsp+0x88]
   140027e70:	mov    QWORD PTR [rsp+0x38],rcx
   140027e75:	and    QWORD PTR [rsp+0x30],0x0
   140027e7b:	mov    ecx,DWORD PTR [rax+0x4]
   140027e7e:	mov    r9d,0x1
   140027e84:	xor    edx,edx
   140027e86:	mov    DWORD PTR [rsp+0x28],edi
   140027e8a:	mov    QWORD PTR [rsp+0x20],rsi
   140027e8f:	call   QWORD PTR [rip+0x737b]        # 0x14002f210
   140027e95:	test   eax,eax
   140027e97:	je     0x140027eb2
   140027e99:	cmp    DWORD PTR [rsp+0x78],0x0
   140027e9e:	jne    0x140027e08
   140027ea4:	test   rbx,rbx
   140027ea7:	je     0x140027eab
   140027ea9:	mov    DWORD PTR [rbx],eax
   140027eab:	xor    ebx,ebx
   140027ead:	jmp    0x140027e1a
   140027eb2:	call   QWORD PTR [rip+0x72e8]        # 0x14002f1a0
   140027eb8:	cmp    eax,0x7a
   140027ebb:	jne    0x140027e08
   140027ec1:	test   rsi,rsi
   140027ec4:	je     0x140027ed8
   140027ec6:	test   rdi,rdi
   140027ec9:	je     0x140027ed8
   140027ecb:	mov    r8,rdi
   140027ece:	xor    edx,edx
   140027ed0:	mov    rcx,rsi
   140027ed3:	call   0x14001b980
   140027ed8:	call   0x14001b864
   140027edd:	mov    ebx,0x22
   140027ee2:	mov    DWORD PTR [rax],ebx
   140027ee4:	call   0x14001ffb8
   140027ee9:	jmp    0x140027e1a
   140027eee:	int3   
   140027eef:	int3   
   140027ef0:	sub    rsp,0x38
   140027ef4:	and    QWORD PTR [rsp+0x20],0x0
   140027efa:	call   0x140027d64
   140027eff:	add    rsp,0x38
   140027f03:	ret    
   140027f04:	rex push rbx
   140027f06:	sub    rsp,0x20
   140027f0a:	xor    ebx,ebx
   140027f0c:	test   r9,r9
   140027f0f:	jne    0x140027f1f
   140027f11:	test   rcx,rcx
   140027f14:	jne    0x140027f24
   140027f16:	test   rdx,rdx
   140027f19:	jne    0x140027f39
   140027f1b:	xor    eax,eax
   140027f1d:	jmp    0x140027f4c
   140027f1f:	test   rcx,rcx
   140027f22:	je     0x140027f39
   140027f24:	test   rdx,rdx
   140027f27:	je     0x140027f39
   140027f29:	test   r9,r9
   140027f2c:	jne    0x140027f32
   140027f2e:	mov    BYTE PTR [rcx],bl
   140027f30:	jmp    0x140027f1b
   140027f32:	test   r8,r8
   140027f35:	jne    0x140027f52
   140027f37:	mov    BYTE PTR [rcx],bl
   140027f39:	call   0x14001b864
   140027f3e:	mov    ebx,0x16
   140027f43:	mov    DWORD PTR [rax],ebx
   140027f45:	call   0x14001ffb8
   140027f4a:	mov    eax,ebx
   140027f4c:	add    rsp,0x20
   140027f50:	pop    rbx
   140027f51:	ret    
   140027f52:	mov    r11,rcx
   140027f55:	mov    r10,rdx
   140027f58:	cmp    r9,0xffffffffffffffff
   140027f5c:	jne    0x140027f76
   140027f5e:	sub    r11,r8
   140027f61:	mov    al,BYTE PTR [r8]
   140027f64:	mov    BYTE PTR [r11+r8*1],al
   140027f68:	inc    r8
   140027f6b:	test   al,al
   140027f6d:	je     0x140027f99
   140027f6f:	dec    r10
   140027f72:	jne    0x140027f61
   140027f74:	jmp    0x140027f99
   140027f76:	sub    r8,rcx
   140027f79:	mov    al,BYTE PTR [r8+r11*1]
   140027f7d:	mov    BYTE PTR [r11],al
   140027f80:	inc    r11
   140027f83:	test   al,al
   140027f85:	je     0x140027f91
   140027f87:	dec    r10
   140027f8a:	je     0x140027f91
   140027f8c:	dec    r9
   140027f8f:	jne    0x140027f79
   140027f91:	test   r9,r9
   140027f94:	jne    0x140027f99
   140027f96:	mov    BYTE PTR [r11],bl
   140027f99:	test   r10,r10
   140027f9c:	jne    0x140027f1b
   140027fa2:	cmp    r9,0xffffffffffffffff
   140027fa6:	jne    0x140027fb2
   140027fa8:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   140027fac:	lea    eax,[r10+0x50]
   140027fb0:	jmp    0x140027f4c
   140027fb2:	mov    BYTE PTR [rcx],bl
   140027fb4:	call   0x14001b864
   140027fb9:	mov    ebx,0x22
   140027fbe:	jmp    0x140027f43
   140027fc0:	rex push rbp
   140027fc2:	push   r12
   140027fc4:	push   r13
   140027fc6:	push   r14
   140027fc8:	push   r15
   140027fca:	sub    rsp,0x50
   140027fce:	lea    rbp,[rsp+0x40]
   140027fd3:	mov    QWORD PTR [rbp+0x40],rbx
   140027fd7:	mov    QWORD PTR [rbp+0x48],rsi
   140027fdb:	mov    QWORD PTR [rbp+0x50],rdi
   140027fdf:	mov    rax,QWORD PTR [rip+0x1966a]        # 0x140041650
   140027fe6:	xor    rax,rbp
   140027fe9:	mov    QWORD PTR [rbp+0x0],rax
   140027fed:	mov    rax,QWORD PTR [rcx]
   140027ff0:	mov    r15d,r8d
   140027ff3:	mov    r12,rdx
   140027ff6:	mov    r14d,DWORD PTR [rax+0x4]
   140027ffa:	mov    r13,r9
   140027ffd:	xor    r8d,r8d
   140028000:	xor    r9d,r9d
   140028003:	mov    edx,r15d
   140028006:	mov    rcx,r12
   140028009:	xor    edi,edi
   14002800b:	call   0x14001e49c
   140028010:	movsxd rsi,eax
   140028013:	test   eax,eax
   140028015:	jne    0x14002801e
   140028017:	xor    eax,eax
   140028019:	jmp    0x140028104
   14002801e:	jle    0x140028097
   140028020:	xor    edx,edx
   140028022:	lea    rax,[rdx-0x20]
   140028026:	div    rsi
   140028029:	cmp    rax,0x2
   14002802d:	jb     0x140028097
   14002802f:	lea    rcx,[rsi+rsi*1]
   140028033:	lea    rax,[rcx+0x10]
   140028037:	cmp    rax,rcx
   14002803a:	jbe    0x140028097
   14002803c:	lea    rcx,[rsi*2+0x10]
   140028044:	cmp    rcx,0x400
   14002804b:	ja     0x14002807e
   14002804d:	lea    rax,[rcx+0xf]
   140028051:	cmp    rax,rcx
   140028054:	ja     0x140028060
   140028056:	movabs rax,0xffffffffffffff0
   140028060:	and    rax,0xfffffffffffffff0
   140028064:	call   0x140024ee0
   140028069:	sub    rsp,rax
   14002806c:	lea    rbx,[rsp+0x40]
   140028071:	test   rbx,rbx
   140028074:	je     0x140028017
   140028076:	mov    DWORD PTR [rbx],0xcccc
   14002807c:	jmp    0x140028091
   14002807e:	call   0x14001adf0
   140028083:	mov    rbx,rax
   140028086:	test   rax,rax
   140028089:	je     0x14002809a
   14002808b:	mov    DWORD PTR [rax],0xdddd
   140028091:	add    rbx,0x10
   140028095:	jmp    0x14002809a
   140028097:	mov    rbx,rdi
   14002809a:	test   rbx,rbx
   14002809d:	je     0x140028017
   1400280a3:	mov    r9d,esi
   1400280a6:	mov    r8,rbx
   1400280a9:	mov    edx,r15d
   1400280ac:	mov    rcx,r12
   1400280af:	call   0x14001e49c
   1400280b4:	test   eax,eax
   1400280b6:	je     0x1400280f1
   1400280b8:	mov    eax,DWORD PTR [rbp+0x60]
   1400280bb:	or     r9d,0xffffffff
   1400280bf:	xor    edx,edx
   1400280c1:	mov    QWORD PTR [rsp+0x38],rdi
   1400280c6:	mov    r8,rbx
   1400280c9:	mov    ecx,r14d
   1400280cc:	mov    QWORD PTR [rsp+0x30],rdi
   1400280d1:	test   eax,eax
   1400280d3:	jne    0x1400280e0
   1400280d5:	mov    DWORD PTR [rsp+0x28],edi
   1400280d9:	mov    QWORD PTR [rsp+0x20],rdi
   1400280de:	jmp    0x1400280e9
   1400280e0:	mov    DWORD PTR [rsp+0x28],eax
   1400280e4:	mov    QWORD PTR [rsp+0x20],r13
   1400280e9:	call   QWORD PTR [rip+0x7121]        # 0x14002f210
   1400280ef:	mov    edi,eax
   1400280f1:	lea    rcx,[rbx-0x10]
   1400280f5:	cmp    DWORD PTR [rcx],0xdddd
   1400280fb:	jne    0x140028102
   1400280fd:	call   0x14001a1ac
   140028102:	mov    eax,edi
   140028104:	mov    rcx,QWORD PTR [rbp+0x0]
   140028108:	xor    rcx,rbp
   14002810b:	call   0x1400187d0
   140028110:	mov    rbx,QWORD PTR [rbp+0x40]
   140028114:	mov    rsi,QWORD PTR [rbp+0x48]
   140028118:	mov    rdi,QWORD PTR [rbp+0x50]
   14002811c:	lea    rsp,[rbp+0x10]
   140028120:	pop    r15
   140028122:	pop    r14
   140028124:	pop    r13
   140028126:	pop    r12
   140028128:	pop    rbp
   140028129:	ret    
   14002812a:	int3   
   14002812b:	int3   
   14002812c:	mov    QWORD PTR [rsp+0x8],rbx
   140028131:	mov    QWORD PTR [rsp+0x10],rsi
   140028136:	push   rdi
   140028137:	sub    rsp,0x50
   14002813b:	mov    rsi,rdx
   14002813e:	mov    rdx,rcx
   140028141:	lea    rcx,[rsp+0x30]
   140028146:	mov    rbx,r9
   140028149:	mov    edi,r8d
   14002814c:	call   0x140019058
   140028151:	mov    eax,DWORD PTR [rsp+0x80]
   140028158:	lea    rcx,[rsp+0x30]
   14002815d:	mov    r9,rbx
   140028160:	mov    r8d,edi
   140028163:	mov    rdx,rsi
   140028166:	mov    DWORD PTR [rsp+0x20],eax
   14002816a:	call   0x140027fc0
   14002816f:	cmp    BYTE PTR [rsp+0x48],0x0
   140028174:	je     0x140028182
   140028176:	mov    rcx,QWORD PTR [rsp+0x40]
   14002817b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028182:	mov    rbx,QWORD PTR [rsp+0x60]
   140028187:	mov    rsi,QWORD PTR [rsp+0x68]
   14002818c:	add    rsp,0x50
   140028190:	pop    rdi
   140028191:	ret    
   140028192:	int3   
   140028193:	int3   
   140028194:	int3   
   140028195:	int3   
   140028196:	int3   
   140028197:	int3   
   140028198:	int3   
   140028199:	int3   
   14002819a:	int3   
   14002819b:	int3   
   14002819c:	int3   
   14002819d:	int3   
   14002819e:	int3   
   14002819f:	int3   
   1400281a0:	int3   
   1400281a1:	int3   
   1400281a2:	int3   
   1400281a3:	int3   
   1400281a4:	int3   
   1400281a5:	int3   
   1400281a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400281b0:	sub    rsp,0x8
   1400281b4:	stmxcsr DWORD PTR [rsp]
   1400281b8:	mov    eax,DWORD PTR [rsp]
   1400281bb:	add    rsp,0x8
   1400281bf:	ret    
   1400281c0:	mov    DWORD PTR [rsp+0x8],ecx
   1400281c4:	ldmxcsr DWORD PTR [rsp+0x8]
   1400281c9:	ret    
   1400281ca:	stmxcsr DWORD PTR [rsp+0x8]
   1400281cf:	mov    ecx,0xffffffc0
   1400281d4:	and    DWORD PTR [rsp+0x8],ecx
   1400281d8:	ldmxcsr DWORD PTR [rsp+0x8]
   1400281dd:	ret    
   1400281de:	ucomisd xmm0,QWORD PTR [rip+0xe8ca]        # 0x140036ab0
   1400281e6:	jae    0x1400281fc
   1400281e8:	ucomisd xmm0,QWORD PTR [rip+0xe8c8]        # 0x140036ab8
   1400281f0:	jbe    0x1400281fc
   1400281f2:	cvtsd2si rcx,xmm0
   1400281f7:	cvtsi2sd xmm0,rcx
   1400281fc:	ret    
   1400281fd:	int3   
   1400281fe:	int3   
   1400281ff:	int3   
   140028200:	rex push rbx
   140028202:	sub    rsp,0x20
   140028206:	xor    r10d,r10d
   140028209:	mov    r9,rcx
   14002820c:	test   rcx,rcx
   14002820f:	je     0x14002821f
   140028211:	test   rdx,rdx
   140028214:	je     0x14002821f
   140028216:	test   r8,r8
   140028219:	jne    0x140028238
   14002821b:	mov    WORD PTR [rcx],r10w
   14002821f:	call   0x14001b864
   140028224:	mov    ebx,0x16
   140028229:	mov    DWORD PTR [rax],ebx
   14002822b:	call   0x14001ffb8
   140028230:	mov    eax,ebx
   140028232:	add    rsp,0x20
   140028236:	pop    rbx
   140028237:	ret    
   140028238:	cmp    WORD PTR [rcx],r10w
   14002823c:	je     0x140028247
   14002823e:	add    rcx,0x2
   140028242:	dec    rdx
   140028245:	jne    0x140028238
   140028247:	test   rdx,rdx
   14002824a:	jne    0x140028252
   14002824c:	mov    WORD PTR [r9],r10w
   140028250:	jmp    0x14002821f
   140028252:	sub    rcx,r8
   140028255:	movzx  eax,WORD PTR [r8]
   140028259:	mov    WORD PTR [rcx+r8*1],ax
   14002825e:	lea    r8,[r8+0x2]
   140028262:	test   ax,ax
   140028265:	je     0x14002826c
   140028267:	dec    rdx
   14002826a:	jne    0x140028255
   14002826c:	test   rdx,rdx
   14002826f:	jne    0x140028281
   140028271:	mov    WORD PTR [r9],r10w
   140028275:	call   0x14001b864
   14002827a:	mov    ebx,0x22
   14002827f:	jmp    0x140028229
   140028281:	xor    eax,eax
   140028283:	jmp    0x140028232
   140028285:	int3   
   140028286:	int3   
   140028287:	int3   
   140028288:	rex push rbx
   14002828a:	push   rbp
   14002828b:	push   rsi
   14002828c:	push   rdi
   14002828d:	push   r12
   14002828f:	push   r14
   140028291:	push   r15
   140028293:	sub    rsp,0x50
   140028297:	mov    rax,QWORD PTR [rip+0x193b2]        # 0x140041650
   14002829e:	xor    rax,rsp
   1400282a1:	mov    QWORD PTR [rsp+0x48],rax
   1400282a6:	mov    r15,rcx
   1400282a9:	xor    ecx,ecx
   1400282ab:	mov    ebp,r8d
   1400282ae:	mov    r12,rdx
   1400282b1:	call   QWORD PTR [rip+0x6f69]        # 0x14002f220
   1400282b7:	xor    edi,edi
   1400282b9:	mov    rsi,rax
   1400282bc:	call   0x14001dd04
   1400282c1:	cmp    QWORD PTR [rip+0x1c830],rdi        # 0x140044af8
   1400282c8:	mov    r14d,eax
   1400282cb:	jne    0x1400283c9
   1400282d1:	lea    rcx,[rip+0xe7e8]        # 0x140036ac0
   1400282d8:	xor    edx,edx
   1400282da:	mov    r8d,0x800
   1400282e0:	call   QWORD PTR [rip+0x6ed2]        # 0x14002f1b8
   1400282e6:	mov    rbx,rax
   1400282e9:	test   rax,rax
   1400282ec:	jne    0x14002831b
   1400282ee:	call   QWORD PTR [rip+0x6eac]        # 0x14002f1a0
   1400282f4:	cmp    eax,0x57
   1400282f7:	jne    0x1400284dd
   1400282fd:	lea    rcx,[rip+0xe7bc]        # 0x140036ac0
   140028304:	xor    r8d,r8d
   140028307:	xor    edx,edx
   140028309:	call   QWORD PTR [rip+0x6ea9]        # 0x14002f1b8
   14002830f:	mov    rbx,rax
   140028312:	test   rax,rax
   140028315:	je     0x1400284dd
   14002831b:	lea    rdx,[rip+0xe7b6]        # 0x140036ad8
   140028322:	mov    rcx,rbx
   140028325:	call   QWORD PTR [rip+0x6db5]        # 0x14002f0e0
   14002832b:	test   rax,rax
   14002832e:	je     0x1400284dd
   140028334:	mov    rcx,rax
   140028337:	call   QWORD PTR [rip+0x6ee3]        # 0x14002f220
   14002833d:	lea    rdx,[rip+0xe7a4]        # 0x140036ae8
   140028344:	mov    rcx,rbx
   140028347:	mov    QWORD PTR [rip+0x1c7aa],rax        # 0x140044af8
   14002834e:	call   QWORD PTR [rip+0x6d8c]        # 0x14002f0e0
   140028354:	mov    rcx,rax
   140028357:	call   QWORD PTR [rip+0x6ec3]        # 0x14002f220
   14002835d:	lea    rdx,[rip+0xe794]        # 0x140036af8
   140028364:	mov    rcx,rbx
   140028367:	mov    QWORD PTR [rip+0x1c792],rax        # 0x140044b00
   14002836e:	call   QWORD PTR [rip+0x6d6c]        # 0x14002f0e0
   140028374:	mov    rcx,rax
   140028377:	call   QWORD PTR [rip+0x6ea3]        # 0x14002f220
   14002837d:	lea    rdx,[rip+0xe78c]        # 0x140036b10
   140028384:	mov    rcx,rbx
   140028387:	mov    QWORD PTR [rip+0x1c77a],rax        # 0x140044b08
   14002838e:	call   QWORD PTR [rip+0x6d4c]        # 0x14002f0e0
   140028394:	mov    rcx,rax
   140028397:	call   QWORD PTR [rip+0x6e83]        # 0x14002f220
   14002839d:	mov    QWORD PTR [rip+0x1c774],rax        # 0x140044b18
   1400283a4:	test   rax,rax
   1400283a7:	je     0x1400283c9
   1400283a9:	lea    rdx,[rip+0xe780]        # 0x140036b30
   1400283b0:	mov    rcx,rbx
   1400283b3:	call   QWORD PTR [rip+0x6d27]        # 0x14002f0e0
   1400283b9:	mov    rcx,rax
   1400283bc:	call   QWORD PTR [rip+0x6e5e]        # 0x14002f220
   1400283c2:	mov    QWORD PTR [rip+0x1c747],rax        # 0x140044b10
   1400283c9:	call   QWORD PTR [rip+0x6e79]        # 0x14002f248
   1400283cf:	test   eax,eax
   1400283d1:	je     0x1400283f0
   1400283d3:	test   r15,r15
   1400283d6:	je     0x1400283e1
   1400283d8:	mov    rcx,r15
   1400283db:	call   QWORD PTR [rip+0x6df7]        # 0x14002f1d8
   1400283e1:	test   r14d,r14d
   1400283e4:	je     0x14002840c
   1400283e6:	mov    eax,0x4
   1400283eb:	jmp    0x1400284df
   1400283f0:	test   r14d,r14d
   1400283f3:	je     0x14002840c
   1400283f5:	mov    rcx,QWORD PTR [rip+0x1c6fc]        # 0x140044af8
   1400283fc:	call   QWORD PTR [rip+0x6e26]        # 0x14002f228
   140028402:	mov    eax,0x3
   140028407:	jmp    0x1400284df
   14002840c:	mov    rcx,QWORD PTR [rip+0x1c6fd]        # 0x140044b10
   140028413:	cmp    rcx,rsi
   140028416:	je     0x14002847b
   140028418:	cmp    QWORD PTR [rip+0x1c6f9],rsi        # 0x140044b18
   14002841f:	je     0x14002847b
   140028421:	call   QWORD PTR [rip+0x6e01]        # 0x14002f228
   140028427:	mov    rcx,QWORD PTR [rip+0x1c6ea]        # 0x140044b18
   14002842e:	mov    rbx,rax
   140028431:	call   QWORD PTR [rip+0x6df1]        # 0x14002f228
   140028437:	mov    r14,rax
   14002843a:	test   rbx,rbx
   14002843d:	je     0x14002847b
   14002843f:	test   rax,rax
   140028442:	je     0x14002847b
   140028444:	call   rbx
   140028446:	test   rax,rax
   140028449:	je     0x140028475
   14002844b:	lea    rcx,[rsp+0x30]
   140028450:	mov    r9d,0xc
   140028456:	lea    r8,[rsp+0x38]
   14002845b:	mov    QWORD PTR [rsp+0x20],rcx
   140028460:	lea    edx,[r9-0xb]
   140028464:	mov    rcx,rax
   140028467:	call   r14
   14002846a:	test   eax,eax
   14002846c:	je     0x140028475
   14002846e:	test   BYTE PTR [rsp+0x40],0x1
   140028473:	jne    0x14002847b
   140028475:	bts    ebp,0x15
   140028479:	jmp    0x1400284bb
   14002847b:	mov    rcx,QWORD PTR [rip+0x1c67e]        # 0x140044b00
   140028482:	cmp    rcx,rsi
   140028485:	je     0x1400284bb
   140028487:	call   QWORD PTR [rip+0x6d9b]        # 0x14002f228
   14002848d:	test   rax,rax
   140028490:	je     0x1400284bb
   140028492:	call   rax
   140028494:	mov    rdi,rax
   140028497:	test   rax,rax
   14002849a:	je     0x1400284bb
   14002849c:	mov    rcx,QWORD PTR [rip+0x1c665]        # 0x140044b08
   1400284a3:	cmp    rcx,rsi
   1400284a6:	je     0x1400284bb
   1400284a8:	call   QWORD PTR [rip+0x6d7a]        # 0x14002f228
   1400284ae:	test   rax,rax
   1400284b1:	je     0x1400284bb
   1400284b3:	mov    rcx,rdi
   1400284b6:	call   rax
   1400284b8:	mov    rdi,rax
   1400284bb:	mov    rcx,QWORD PTR [rip+0x1c636]        # 0x140044af8
   1400284c2:	call   QWORD PTR [rip+0x6d60]        # 0x14002f228
   1400284c8:	test   rax,rax
   1400284cb:	je     0x1400284dd
   1400284cd:	mov    r9d,ebp
   1400284d0:	mov    r8,r12
   1400284d3:	mov    rdx,r15
   1400284d6:	mov    rcx,rdi
   1400284d9:	call   rax
   1400284db:	jmp    0x1400284df
   1400284dd:	xor    eax,eax
   1400284df:	mov    rcx,QWORD PTR [rsp+0x48]
   1400284e4:	xor    rcx,rsp
   1400284e7:	call   0x1400187d0
   1400284ec:	add    rsp,0x50
   1400284f0:	pop    r15
   1400284f2:	pop    r14
   1400284f4:	pop    r12
   1400284f6:	pop    rdi
   1400284f7:	pop    rsi
   1400284f8:	pop    rbp
   1400284f9:	pop    rbx
   1400284fa:	ret    
   1400284fb:	int3   
   1400284fc:	mov    QWORD PTR [rsp+0x8],rbx
   140028501:	push   rdi
   140028502:	sub    rsp,0x20
   140028506:	mov    rbx,rcx
   140028509:	mov    rcx,QWORD PTR [r9+0x10]
   14002850d:	xor    r10d,r10d
   140028510:	test   rbx,rbx
   140028513:	jne    0x14002852d
   140028515:	call   0x14001b864
   14002851a:	mov    ebx,0x16
   14002851f:	mov    DWORD PTR [rax],ebx
   140028521:	call   0x14001ffb8
   140028526:	mov    eax,ebx
   140028528:	jmp    0x1400285bc
   14002852d:	test   rdx,rdx
   140028530:	je     0x140028515
   140028532:	mov    eax,r10d
   140028535:	test   r8d,r8d
   140028538:	mov    BYTE PTR [rbx],r10b
   14002853b:	cmovg  eax,r8d
   14002853f:	inc    eax
   140028541:	cdqe   
   140028543:	cmp    rdx,rax
   140028546:	ja     0x140028554
   140028548:	call   0x14001b864
   14002854d:	mov    ebx,0x22
   140028552:	jmp    0x14002851f
   140028554:	lea    rdi,[rbx+0x1]
   140028558:	mov    BYTE PTR [rbx],0x30
   14002855b:	mov    rax,rdi
   14002855e:	jmp    0x14002857a
   140028560:	cmp    BYTE PTR [rcx],r10b
   140028563:	je     0x14002856d
   140028565:	movsx  edx,BYTE PTR [rcx]
   140028568:	inc    rcx
   14002856b:	jmp    0x140028572
   14002856d:	mov    edx,0x30
   140028572:	mov    BYTE PTR [rax],dl
   140028574:	inc    rax
   140028577:	dec    r8d
   14002857a:	test   r8d,r8d
   14002857d:	jg     0x140028560
   14002857f:	mov    BYTE PTR [rax],r10b
   140028582:	js     0x140028598
   140028584:	cmp    BYTE PTR [rcx],0x35
   140028587:	jl     0x140028598
   140028589:	jmp    0x14002858e
   14002858b:	mov    BYTE PTR [rax],0x30
   14002858e:	dec    rax
   140028591:	cmp    BYTE PTR [rax],0x39
   140028594:	je     0x14002858b
   140028596:	inc    BYTE PTR [rax]
   140028598:	cmp    BYTE PTR [rbx],0x31
   14002859b:	jne    0x1400285a3
   14002859d:	inc    DWORD PTR [r9+0x4]
   1400285a1:	jmp    0x1400285ba
   1400285a3:	mov    rcx,rdi
   1400285a6:	call   0x14001a580
   1400285ab:	mov    rdx,rdi
   1400285ae:	mov    rcx,rbx
   1400285b1:	lea    r8,[rax+0x1]
   1400285b5:	call   0x140018a90
   1400285ba:	xor    eax,eax
   1400285bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400285c1:	add    rsp,0x20
   1400285c5:	pop    rdi
   1400285c6:	ret    
   1400285c7:	int3   
   1400285c8:	rex push rbx
   1400285ca:	push   rsi
   1400285cb:	push   rdi
   1400285cc:	sub    rsp,0x80
   1400285d3:	mov    rax,QWORD PTR [rip+0x19076]        # 0x140041650
   1400285da:	xor    rax,rsp
   1400285dd:	mov    QWORD PTR [rsp+0x78],rax
   1400285e2:	mov    rsi,rcx
   1400285e5:	mov    rbx,rdx
   1400285e8:	lea    rcx,[rsp+0x48]
   1400285ed:	mov    rdx,r8
   1400285f0:	mov    rdi,r9
   1400285f3:	call   0x140019058
   1400285f8:	lea    rax,[rsp+0x48]
   1400285fd:	lea    rdx,[rsp+0x40]
   140028602:	mov    QWORD PTR [rsp+0x38],rax
   140028607:	and    DWORD PTR [rsp+0x30],0x0
   14002860c:	and    DWORD PTR [rsp+0x28],0x0
   140028611:	and    DWORD PTR [rsp+0x20],0x0
   140028616:	lea    rcx,[rsp+0x68]
   14002861b:	xor    r9d,r9d
   14002861e:	mov    r8,rbx
   140028621:	call   0x14002aed4
   140028626:	mov    ebx,eax
   140028628:	test   rdi,rdi
   14002862b:	je     0x140028635
   14002862d:	mov    rcx,QWORD PTR [rsp+0x40]
   140028632:	mov    QWORD PTR [rdi],rcx
   140028635:	lea    rcx,[rsp+0x68]
   14002863a:	mov    rdx,rsi
   14002863d:	call   0x14002a91c
   140028642:	mov    ecx,eax
   140028644:	mov    eax,0x3
   140028649:	test   al,bl
   14002864b:	jne    0x140028659
   14002864d:	cmp    ecx,0x1
   140028650:	je     0x14002866c
   140028652:	cmp    ecx,0x2
   140028655:	jne    0x14002866a
   140028657:	jmp    0x14002865e
   140028659:	test   bl,0x1
   14002865c:	je     0x140028665
   14002865e:	mov    eax,0x4
   140028663:	jmp    0x14002866c
   140028665:	test   bl,0x2
   140028668:	jne    0x14002866c
   14002866a:	xor    eax,eax
   14002866c:	cmp    BYTE PTR [rsp+0x60],0x0
   140028671:	je     0x14002867f
   140028673:	mov    rcx,QWORD PTR [rsp+0x58]
   140028678:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002867f:	mov    rcx,QWORD PTR [rsp+0x78]
   140028684:	xor    rcx,rsp
   140028687:	call   0x1400187d0
   14002868c:	add    rsp,0x80
   140028693:	pop    rdi
   140028694:	pop    rsi
   140028695:	pop    rbx
   140028696:	ret    
   140028697:	int3   
   140028698:	mov    QWORD PTR [rsp+0x18],rbx
   14002869d:	push   rdi
   14002869e:	sub    rsp,0x80
   1400286a5:	mov    rax,QWORD PTR [rip+0x18fa4]        # 0x140041650
   1400286ac:	xor    rax,rsp
   1400286af:	mov    QWORD PTR [rsp+0x78],rax
   1400286b4:	mov    rdi,rcx
   1400286b7:	mov    rbx,rdx
   1400286ba:	lea    rcx,[rsp+0x40]
   1400286bf:	mov    rdx,r8
   1400286c2:	call   0x140019058
   1400286c7:	lea    rax,[rsp+0x40]
   1400286cc:	lea    rdx,[rsp+0x60]
   1400286d1:	mov    QWORD PTR [rsp+0x38],rax
   1400286d6:	and    DWORD PTR [rsp+0x30],0x0
   1400286db:	and    DWORD PTR [rsp+0x28],0x0
   1400286e0:	and    DWORD PTR [rsp+0x20],0x0
   1400286e5:	lea    rcx,[rsp+0x68]
   1400286ea:	xor    r9d,r9d
   1400286ed:	mov    r8,rbx
   1400286f0:	call   0x14002aed4
   1400286f5:	lea    rcx,[rsp+0x68]
   1400286fa:	mov    rdx,rdi
   1400286fd:	mov    ebx,eax
   1400286ff:	call   0x14002a364
   140028704:	mov    ecx,eax
   140028706:	mov    eax,0x3
   14002870b:	test   al,bl
   14002870d:	jne    0x14002871b
   14002870f:	cmp    ecx,0x1
   140028712:	je     0x14002872e
   140028714:	cmp    ecx,0x2
   140028717:	jne    0x14002872c
   140028719:	jmp    0x140028720
   14002871b:	test   bl,0x1
   14002871e:	je     0x140028727
   140028720:	mov    eax,0x4
   140028725:	jmp    0x14002872e
   140028727:	test   bl,0x2
   14002872a:	jne    0x14002872e
   14002872c:	xor    eax,eax
   14002872e:	cmp    BYTE PTR [rsp+0x58],0x0
   140028733:	je     0x140028741
   140028735:	mov    rcx,QWORD PTR [rsp+0x50]
   14002873a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028741:	mov    rcx,QWORD PTR [rsp+0x78]
   140028746:	xor    rcx,rsp
   140028749:	call   0x1400187d0
   14002874e:	mov    rbx,QWORD PTR [rsp+0xa0]
   140028756:	add    rsp,0x80
   14002875d:	pop    rdi
   14002875e:	ret    
   14002875f:	int3   
   140028760:	xor    r9d,r9d
   140028763:	jmp    0x1400285c8
   140028768:	mov    QWORD PTR [rsp+0x8],rbx
   14002876d:	movzx  r11d,WORD PTR [rdx+0x6]
   140028772:	mov    r10,rcx
   140028775:	mov    ecx,DWORD PTR [rdx+0x4]
   140028778:	movzx  r8d,r11w
   14002877c:	mov    eax,0x8000
   140028781:	mov    r9d,0x7ff
   140028787:	shr    r8w,0x4
   14002878c:	and    r11w,ax
   140028790:	mov    eax,DWORD PTR [rdx]
   140028792:	and    r8w,r9w
   140028796:	and    ecx,0xfffff
   14002879c:	mov    ebx,0x80000000
   1400287a1:	movzx  edx,r8w
   1400287a5:	test   edx,edx
   1400287a7:	je     0x1400287c1
   1400287a9:	cmp    edx,r9d
   1400287ac:	je     0x1400287b9
   1400287ae:	mov    edx,0x3c00
   1400287b3:	add    r8w,dx
   1400287b7:	jmp    0x1400287dd
   1400287b9:	mov    r8d,0x7fff
   1400287bf:	jmp    0x1400287dd
   1400287c1:	test   ecx,ecx
   1400287c3:	jne    0x1400287d2
   1400287c5:	test   eax,eax
   1400287c7:	jne    0x1400287d2
   1400287c9:	and    DWORD PTR [r10+0x4],eax
   1400287cd:	and    DWORD PTR [r10],eax
   1400287d0:	jmp    0x14002882a
   1400287d2:	mov    edx,0x3c01
   1400287d7:	add    r8w,dx
   1400287db:	xor    ebx,ebx
   1400287dd:	mov    r9d,eax
   1400287e0:	shl    ecx,0xb
   1400287e3:	shl    eax,0xb
   1400287e6:	shr    r9d,0x15
   1400287ea:	mov    DWORD PTR [r10],eax
   1400287ed:	or     r9d,ecx
   1400287f0:	or     r9d,ebx
   1400287f3:	mov    DWORD PTR [r10+0x4],r9d
   1400287f7:	test   r9d,r9d
   1400287fa:	js     0x140028826
   1400287fc:	mov    edx,DWORD PTR [r10]
   1400287ff:	lea    eax,[r9+r9*1]
   140028803:	mov    ecx,edx
   140028805:	shr    ecx,0x1f
   140028808:	mov    r9d,ecx
   14002880b:	or     r9d,eax
   14002880e:	lea    eax,[rdx+rdx*1]
   140028811:	mov    DWORD PTR [r10],eax
   140028814:	mov    eax,0xffff
   140028819:	add    r8w,ax
   14002881d:	test   r9d,r9d
   140028820:	jns    0x1400287fc
   140028822:	mov    DWORD PTR [r10+0x4],r9d
   140028826:	or     r11w,r8w
   14002882a:	mov    rbx,QWORD PTR [rsp+0x8]
   14002882f:	mov    WORD PTR [r10+0x8],r11w
   140028834:	ret    
   140028835:	int3   
   140028836:	int3   
   140028837:	int3   
   140028838:	rex push rbp
   14002883a:	push   rbx
   14002883b:	push   rsi
   14002883c:	push   rdi
   14002883d:	lea    rbp,[rsp-0x3f]
   140028842:	sub    rsp,0x88
   140028849:	mov    rax,QWORD PTR [rip+0x18e00]        # 0x140041650
   140028850:	xor    rax,rsp
   140028853:	mov    QWORD PTR [rbp+0x27],rax
   140028857:	mov    rdi,rdx
   14002885a:	mov    QWORD PTR [rbp-0x19],rcx
   14002885e:	lea    rdx,[rbp-0x19]
   140028862:	lea    rcx,[rbp-0x9]
   140028866:	mov    rbx,r9
   140028869:	mov    rsi,r8
   14002886c:	call   0x140028768
   140028871:	movzx  eax,WORD PTR [rbp-0x1]
   140028875:	xor    r8d,r8d
   140028878:	movsd  xmm0,QWORD PTR [rbp-0x9]
   14002887d:	movsd  QWORD PTR [rbp-0x19],xmm0
   140028882:	lea    r9,[rbp+0x7]
   140028886:	lea    rcx,[rbp-0x19]
   14002888a:	lea    edx,[r8+0x11]
   14002888e:	mov    WORD PTR [rbp-0x11],ax
   140028892:	call   0x14002b738
   140028897:	movsx  ecx,BYTE PTR [rbp+0x9]
   14002889b:	mov    DWORD PTR [rdi],ecx
   14002889d:	movsx  ecx,WORD PTR [rbp+0x7]
   1400288a1:	lea    r8,[rbp+0xb]
   1400288a5:	mov    DWORD PTR [rdi+0x4],ecx
   1400288a8:	mov    rdx,rbx
   1400288ab:	mov    rcx,rsi
   1400288ae:	mov    DWORD PTR [rdi+0x8],eax
   1400288b1:	call   0x14001987c
   1400288b6:	test   eax,eax
   1400288b8:	jne    0x1400288d9
   1400288ba:	mov    QWORD PTR [rdi+0x10],rsi
   1400288be:	mov    rax,rdi
   1400288c1:	mov    rcx,QWORD PTR [rbp+0x27]
   1400288c5:	xor    rcx,rsp
   1400288c8:	call   0x1400187d0
   1400288cd:	add    rsp,0x88
   1400288d4:	pop    rdi
   1400288d5:	pop    rsi
   1400288d6:	pop    rbx
   1400288d7:	pop    rbp
   1400288d8:	ret    
   1400288d9:	and    QWORD PTR [rsp+0x20],0x0
   1400288df:	xor    r9d,r9d
   1400288e2:	xor    r8d,r8d
   1400288e5:	xor    edx,edx
   1400288e7:	xor    ecx,ecx
   1400288e9:	call   0x14001ffd8
   1400288ee:	int3   
   1400288ef:	int3   
   1400288f0:	mov    ecx,0x2
   1400288f5:	jmp    0x14001e88c
   1400288fa:	int3   
   1400288fb:	int3   
   1400288fc:	movzx  r8d,WORD PTR [rdx]
   140028900:	movzx  eax,WORD PTR [rcx]
   140028903:	sub    eax,r8d
   140028906:	jne    0x140028922
   140028908:	sub    rcx,rdx
   14002890b:	test   r8w,r8w
   14002890f:	je     0x140028922
   140028911:	add    rdx,0x2
   140028915:	movzx  r8d,WORD PTR [rdx]
   140028919:	movzx  eax,WORD PTR [rcx+rdx*1]
   14002891d:	sub    eax,r8d
   140028920:	je     0x14002890b
   140028922:	test   eax,eax
   140028924:	jns    0x14002892a
   140028926:	or     eax,0xffffffff
   140028929:	ret    
   14002892a:	mov    ecx,0x1
   14002892f:	test   eax,eax
   140028931:	cmovg  eax,ecx
   140028934:	ret    
   140028935:	int3   
   140028936:	int3   
   140028937:	int3   
   140028938:	xor    r10d,r10d
   14002893b:	mov    r9,rdx
   14002893e:	mov    rax,rcx
   140028941:	cmp    WORD PTR [rcx],r10w
   140028945:	je     0x140028970
   140028947:	mov    r8,r9
   14002894a:	cmp    WORD PTR [r9],r10w
   14002894e:	je     0x140028966
   140028950:	movzx  edx,WORD PTR [r9]
   140028954:	cmp    dx,WORD PTR [rax]
   140028957:	je     0x140028970
   140028959:	add    r8,0x2
   14002895d:	movzx  edx,WORD PTR [r8]
   140028961:	test   dx,dx
   140028964:	jne    0x140028954
   140028966:	add    rax,0x2
   14002896a:	cmp    WORD PTR [rax],r10w
   14002896e:	jmp    0x140028945
   140028970:	sub    rax,rcx
   140028973:	sar    rax,1
   140028976:	ret    
   140028977:	int3   
   140028978:	test   r8,r8
   14002897b:	jne    0x140028995
   14002897d:	xor    eax,eax
   14002897f:	ret    
   140028980:	movzx  eax,WORD PTR [rcx]
   140028983:	test   ax,ax
   140028986:	je     0x14002899a
   140028988:	cmp    ax,WORD PTR [rdx]
   14002898b:	jne    0x14002899a
   14002898d:	add    rcx,0x2
   140028991:	add    rdx,0x2
   140028995:	dec    r8
   140028998:	jne    0x140028980
   14002899a:	movzx  eax,WORD PTR [rcx]
   14002899d:	movzx  ecx,WORD PTR [rdx]
   1400289a0:	sub    eax,ecx
   1400289a2:	ret    
   1400289a3:	int3   
   1400289a4:	mov    r9,rdx
   1400289a7:	movzx  eax,WORD PTR [rcx]
   1400289aa:	test   ax,ax
   1400289ad:	je     0x1400289d9
   1400289af:	cmp    WORD PTR [r9],0x0
   1400289b4:	mov    r8,r9
   1400289b7:	je     0x1400289cf
   1400289b9:	movzx  edx,WORD PTR [r9]
   1400289bd:	cmp    dx,ax
   1400289c0:	je     0x1400289d5
   1400289c2:	add    r8,0x2
   1400289c6:	movzx  edx,WORD PTR [r8]
   1400289ca:	test   dx,dx
   1400289cd:	jne    0x1400289bd
   1400289cf:	add    rcx,0x2
   1400289d3:	jmp    0x1400289a7
   1400289d5:	mov    rax,rcx
   1400289d8:	ret    
   1400289d9:	xor    eax,eax
   1400289db:	ret    
   1400289dc:	rex push rbx
   1400289de:	sub    rsp,0x20
   1400289e2:	mov    rbx,rcx
   1400289e5:	mov    rcx,QWORD PTR [rcx]
   1400289e8:	call   0x14001e19c
   1400289ed:	mov    rcx,QWORD PTR [rbx+0x8]
   1400289f1:	xor    edx,edx
   1400289f3:	cmp    rax,0x3
   1400289f7:	sete   dl
   1400289fa:	mov    DWORD PTR [rbx+0x18],edx
   1400289fd:	call   0x14001e19c
   140028a02:	xor    ecx,ecx
   140028a04:	cmp    rax,0x3
   140028a08:	sete   cl
   140028a0b:	cmp    DWORD PTR [rbx+0x18],0x0
   140028a0f:	mov    DWORD PTR [rbx+0x1c],ecx
   140028a12:	je     0x140028a1b
   140028a14:	mov    edx,0x2
   140028a19:	jmp    0x140028a54
   140028a1b:	mov    rcx,QWORD PTR [rbx]
   140028a1e:	xor    r9d,r9d
   140028a21:	test   rcx,rcx
   140028a24:	jne    0x140028a2a
   140028a26:	xor    edx,edx
   140028a28:	jmp    0x140028a54
   140028a2a:	mov    edx,0x2
   140028a2f:	movzx  r8d,WORD PTR [rcx]
   140028a33:	add    rcx,rdx
   140028a36:	lea    eax,[r8-0x41]
   140028a3a:	cmp    ax,0x19
   140028a3e:	jbe    0x140028a4c
   140028a40:	sub    r8w,0x61
   140028a45:	cmp    r8w,0x19
   140028a4a:	ja     0x140028a51
   140028a4c:	inc    r9d
   140028a4f:	jmp    0x140028a2f
   140028a51:	mov    edx,r9d
   140028a54:	xor    r8d,r8d
   140028a57:	mov    DWORD PTR [rbx+0x14],edx
   140028a5a:	lea    rcx,[rip+0xb3]        # 0x140028b14
   140028a61:	lea    edx,[r8+0x3]
   140028a65:	call   0x14001e458
   140028a6a:	test   DWORD PTR [rbx+0x10],0x100
   140028a71:	je     0x140028a82
   140028a73:	test   DWORD PTR [rbx+0x10],0x200
   140028a7a:	je     0x140028a82
   140028a7c:	test   BYTE PTR [rbx+0x10],0x7
   140028a80:	jne    0x140028a86
   140028a82:	and    DWORD PTR [rbx+0x10],0x0
   140028a86:	add    rsp,0x20
   140028a8a:	pop    rbx
   140028a8b:	ret    
   140028a8c:	rex push rbx
   140028a8e:	sub    rsp,0x20
   140028a92:	mov    rbx,rcx
   140028a95:	mov    rcx,QWORD PTR [rcx]
   140028a98:	call   0x14001e19c
   140028a9d:	xor    edx,edx
   140028a9f:	cmp    rax,0x3
   140028aa3:	sete   dl
   140028aa6:	mov    DWORD PTR [rbx+0x18],edx
   140028aa9:	test   edx,edx
   140028aab:	je     0x140028ab4
   140028aad:	mov    edx,0x2
   140028ab2:	jmp    0x140028aed
   140028ab4:	mov    rcx,QWORD PTR [rbx]
   140028ab7:	xor    r9d,r9d
   140028aba:	test   rcx,rcx
   140028abd:	jne    0x140028ac3
   140028abf:	xor    edx,edx
   140028ac1:	jmp    0x140028aed
   140028ac3:	mov    edx,0x2
   140028ac8:	movzx  r8d,WORD PTR [rcx]
   140028acc:	add    rcx,rdx
   140028acf:	lea    eax,[r8-0x41]
   140028ad3:	cmp    ax,0x19
   140028ad7:	jbe    0x140028ae5
   140028ad9:	sub    r8w,0x61
   140028ade:	cmp    r8w,0x19
   140028ae3:	ja     0x140028aea
   140028ae5:	inc    r9d
   140028ae8:	jmp    0x140028ac8
   140028aea:	mov    edx,r9d
   140028aed:	xor    r8d,r8d
   140028af0:	mov    DWORD PTR [rbx+0x14],edx
   140028af3:	lea    rcx,[rip+0x3a6]        # 0x140028ea0
   140028afa:	lea    edx,[r8+0x3]
   140028afe:	call   0x14001e458
   140028b03:	test   BYTE PTR [rbx+0x10],0x4
   140028b07:	jne    0x140028b0d
   140028b09:	and    DWORD PTR [rbx+0x10],0x0
   140028b0d:	add    rsp,0x20
   140028b11:	pop    rbx
   140028b12:	ret    
   140028b13:	int3   
   140028b14:	mov    QWORD PTR [rsp+0x10],rbx
   140028b19:	mov    QWORD PTR [rsp+0x18],rbp
   140028b1e:	push   rsi
   140028b1f:	push   rdi
   140028b20:	push   r14
   140028b22:	sub    rsp,0xc0
   140028b29:	mov    rax,QWORD PTR [rip+0x18b20]        # 0x140041650
   140028b30:	xor    rax,rsp
   140028b33:	mov    QWORD PTR [rsp+0xb0],rax
   140028b3b:	mov    rdi,rcx
   140028b3e:	call   0x14001ef6c
   140028b43:	mov    esi,0x40
   140028b48:	lea    rbx,[rax+0x140]
   140028b4f:	lea    r8,[rsp+0x30]
   140028b54:	mov    r9d,esi
   140028b57:	mov    ecx,DWORD PTR [rbx+0x1c]
   140028b5a:	neg    ecx
   140028b5c:	mov    rcx,rdi
   140028b5f:	sbb    edx,edx
   140028b61:	and    edx,0xfffff005
   140028b67:	add    edx,0x1002
   140028b6d:	call   0x14001e49c
   140028b72:	xor    ebp,ebp
   140028b74:	test   eax,eax
   140028b76:	jne    0x140028b85
   140028b78:	mov    DWORD PTR [rbx+0x10],ebp
   140028b7b:	mov    eax,0x1
   140028b80:	jmp    0x140028df9
   140028b85:	mov    rcx,QWORD PTR [rbx+0x8]
   140028b89:	lea    rdx,[rsp+0x30]
   140028b8e:	call   0x140025494
   140028b93:	mov    r14d,0x55
   140028b99:	test   eax,eax
   140028b9b:	jne    0x140028c96
   140028ba1:	mov    eax,DWORD PTR [rbx+0x18]
   140028ba4:	lea    r8,[rsp+0x30]
   140028ba9:	mov    r9d,esi
   140028bac:	neg    eax
   140028bae:	mov    rcx,rdi
   140028bb1:	sbb    edx,edx
   140028bb3:	and    edx,0xfffff002
   140028bb9:	add    edx,0x1001
   140028bbf:	call   0x14001e49c
   140028bc4:	test   eax,eax
   140028bc6:	je     0x140028b78
   140028bc8:	mov    rcx,QWORD PTR [rbx]
   140028bcb:	lea    rdx,[rsp+0x30]
   140028bd0:	call   0x140025494
   140028bd5:	test   eax,eax
   140028bd7:	jne    0x140028c0b
   140028bd9:	or     DWORD PTR [rbx+0x10],0x304
   140028be0:	mov    rcx,rdi
   140028be3:	call   0x14001e19c
   140028be8:	lea    rcx,[rbx+0x258]
   140028bef:	mov    r8,rdi
   140028bf2:	lea    r9,[rax+0x1]
   140028bf6:	mov    edx,r14d
   140028bf9:	call   0x14001995c
   140028bfe:	test   eax,eax
   140028c00:	je     0x140028c96
   140028c06:	jmp    0x140028e21
   140028c0b:	test   BYTE PTR [rbx+0x10],0x2
   140028c0f:	jne    0x140028c96
   140028c15:	cmp    DWORD PTR [rbx+0x14],ebp
   140028c18:	je     0x140028c5a
   140028c1a:	movsxd r8,DWORD PTR [rbx+0x14]
   140028c1e:	mov    rcx,QWORD PTR [rbx]
   140028c21:	lea    rdx,[rsp+0x30]
   140028c26:	call   0x14002c3e0
   140028c2b:	test   eax,eax
   140028c2d:	jne    0x140028c5a
   140028c2f:	or     DWORD PTR [rbx+0x10],0x2
   140028c33:	mov    rcx,rdi
   140028c36:	call   0x14001e19c
   140028c3b:	lea    rcx,[rbx+0x258]
   140028c42:	mov    r8,rdi
   140028c45:	lea    r9,[rax+0x1]
   140028c49:	mov    rdx,r14
   140028c4c:	call   0x14001995c
   140028c51:	test   eax,eax
   140028c53:	je     0x140028c96
   140028c55:	jmp    0x140028e36
   140028c5a:	test   BYTE PTR [rbx+0x10],0x1
   140028c5e:	jne    0x140028c96
   140028c60:	mov    rcx,rdi
   140028c63:	call   0x140029034
   140028c68:	test   eax,eax
   140028c6a:	je     0x140028c96
   140028c6c:	or     DWORD PTR [rbx+0x10],0x1
   140028c70:	mov    rcx,rdi
   140028c73:	call   0x14001e19c
   140028c78:	lea    rcx,[rbx+0x258]
   140028c7f:	mov    r8,rdi
   140028c82:	lea    r9,[rax+0x1]
   140028c86:	mov    rdx,r14
   140028c89:	call   0x14001995c
   140028c8e:	test   eax,eax
   140028c90:	jne    0x140028e4b
   140028c96:	mov    eax,DWORD PTR [rbx+0x10]
   140028c99:	mov    ecx,0x300
   140028c9e:	and    eax,ecx
   140028ca0:	cmp    eax,ecx
   140028ca2:	je     0x140028dee
   140028ca8:	mov    eax,DWORD PTR [rbx+0x18]
   140028cab:	lea    r8,[rsp+0x30]
   140028cb0:	mov    r9d,0x80
   140028cb6:	neg    eax
   140028cb8:	mov    rcx,rdi
   140028cbb:	sbb    edx,edx
   140028cbd:	and    edx,0xfffff002
   140028cc3:	add    edx,0x1001
   140028cc9:	call   0x14001e49c
   140028cce:	test   eax,eax
   140028cd0:	je     0x140028b78
   140028cd6:	mov    rcx,QWORD PTR [rbx]
   140028cd9:	lea    rdx,[rsp+0x30]
   140028cde:	call   0x140025494
   140028ce3:	test   eax,eax
   140028ce5:	jne    0x140028dee
   140028ceb:	bts    DWORD PTR [rbx+0x10],0x9
   140028cf0:	cmp    DWORD PTR [rbx+0x18],ebp
   140028cf3:	je     0x140028d31
   140028cf5:	bts    DWORD PTR [rbx+0x10],0x8
   140028cfa:	lea    rsi,[rbx+0x258]
   140028d01:	cmp    WORD PTR [rsi],bp
   140028d04:	jne    0x140028dee
   140028d0a:	mov    rcx,rdi
   140028d0d:	call   0x14001e19c
   140028d12:	mov    r8,rdi
   140028d15:	mov    rdx,r14
   140028d18:	lea    r9,[rax+0x1]
   140028d1c:	mov    rcx,rsi
   140028d1f:	call   0x14001995c
   140028d24:	test   eax,eax
   140028d26:	je     0x140028dee
   140028d2c:	jmp    0x140028e60
   140028d31:	cmp    DWORD PTR [rbx+0x14],ebp
   140028d34:	je     0x140028dbb
   140028d3a:	mov    rcx,QWORD PTR [rbx]
   140028d3d:	call   0x14001e19c
   140028d42:	cmp    eax,DWORD PTR [rbx+0x14]
   140028d45:	jne    0x140028dbb
   140028d47:	mov    rcx,rdi
   140028d4a:	call   0x140029034
   140028d4f:	test   eax,eax
   140028d51:	jne    0x140028d87
   140028d53:	mov    rcx,QWORD PTR [rbx]
   140028d56:	mov    esi,ebp
   140028d58:	test   rcx,rcx
   140028d5b:	je     0x140028d7b
   140028d5d:	movzx  edx,WORD PTR [rcx]
   140028d60:	add    rcx,0x2
   140028d64:	lea    eax,[rdx-0x41]
   140028d67:	cmp    ax,0x19
   140028d6b:	jbe    0x140028d77
   140028d6d:	sub    dx,0x61
   140028d71:	cmp    dx,0x19
   140028d75:	ja     0x140028d7b
   140028d77:	inc    esi
   140028d79:	jmp    0x140028d5d
   140028d7b:	mov    rcx,QWORD PTR [rbx]
   140028d7e:	call   0x14001e19c
   140028d83:	cmp    esi,eax
   140028d85:	je     0x140028dee
   140028d87:	bts    DWORD PTR [rbx+0x10],0x8
   140028d8c:	lea    rsi,[rbx+0x258]
   140028d93:	cmp    WORD PTR [rsi],bp
   140028d96:	jne    0x140028dee
   140028d98:	mov    rcx,rdi
   140028d9b:	call   0x14001e19c
   140028da0:	mov    r8,rdi
   140028da3:	mov    rdx,r14
   140028da6:	lea    r9,[rax+0x1]
   140028daa:	mov    rcx,rsi
   140028dad:	call   0x14001995c
   140028db2:	test   eax,eax
   140028db4:	je     0x140028dee
   140028db6:	jmp    0x140028e75
   140028dbb:	bts    DWORD PTR [rbx+0x10],0x8
   140028dc0:	lea    rsi,[rbx+0x258]
   140028dc7:	cmp    WORD PTR [rsi],bp
   140028dca:	jne    0x140028dee
   140028dcc:	mov    rcx,rdi
   140028dcf:	call   0x14001e19c
   140028dd4:	mov    r8,rdi
   140028dd7:	mov    rdx,r14
   140028dda:	lea    r9,[rax+0x1]
   140028dde:	mov    rcx,rsi
   140028de1:	call   0x14001995c
   140028de6:	test   eax,eax
   140028de8:	jne    0x140028e8a
   140028dee:	mov    eax,DWORD PTR [rbx+0x10]
   140028df1:	shr    eax,0x2
   140028df4:	not    eax
   140028df6:	and    eax,0x1
   140028df9:	mov    rcx,QWORD PTR [rsp+0xb0]
   140028e01:	xor    rcx,rsp
   140028e04:	call   0x1400187d0
   140028e09:	lea    r11,[rsp+0xc0]
   140028e11:	mov    rbx,QWORD PTR [r11+0x28]
   140028e15:	mov    rbp,QWORD PTR [r11+0x30]
   140028e19:	mov    rsp,r11
   140028e1c:	pop    r14
   140028e1e:	pop    rdi
   140028e1f:	pop    rsi
   140028e20:	ret    
   140028e21:	xor    r9d,r9d
   140028e24:	xor    r8d,r8d
   140028e27:	xor    edx,edx
   140028e29:	xor    ecx,ecx
   140028e2b:	mov    QWORD PTR [rsp+0x20],rbp
   140028e30:	call   0x14001ffd8
   140028e35:	int3   
   140028e36:	xor    r9d,r9d
   140028e39:	xor    r8d,r8d
   140028e3c:	xor    edx,edx
   140028e3e:	xor    ecx,ecx
   140028e40:	mov    QWORD PTR [rsp+0x20],rbp
   140028e45:	call   0x14001ffd8
   140028e4a:	int3   
   140028e4b:	xor    r9d,r9d
   140028e4e:	xor    r8d,r8d
   140028e51:	xor    edx,edx
   140028e53:	xor    ecx,ecx
   140028e55:	mov    QWORD PTR [rsp+0x20],rbp
   140028e5a:	call   0x14001ffd8
   140028e5f:	int3   
   140028e60:	xor    r9d,r9d
   140028e63:	xor    r8d,r8d
   140028e66:	xor    edx,edx
   140028e68:	xor    ecx,ecx
   140028e6a:	mov    QWORD PTR [rsp+0x20],rbp
   140028e6f:	call   0x14001ffd8
   140028e74:	int3   
   140028e75:	xor    r9d,r9d
   140028e78:	xor    r8d,r8d
   140028e7b:	xor    edx,edx
   140028e7d:	xor    ecx,ecx
   140028e7f:	mov    QWORD PTR [rsp+0x20],rbp
   140028e84:	call   0x14001ffd8
   140028e89:	int3   
   140028e8a:	xor    r9d,r9d
   140028e8d:	xor    r8d,r8d
   140028e90:	xor    edx,edx
   140028e92:	xor    ecx,ecx
   140028e94:	mov    QWORD PTR [rsp+0x20],rbp
   140028e99:	call   0x14001ffd8
   140028e9e:	int3   
   140028e9f:	int3   
   140028ea0:	mov    QWORD PTR [rsp+0x10],rbx
   140028ea5:	push   rdi
   140028ea6:	sub    rsp,0x130
   140028ead:	mov    rax,QWORD PTR [rip+0x1879c]        # 0x140041650
   140028eb4:	xor    rax,rsp
   140028eb7:	mov    QWORD PTR [rsp+0x120],rax
   140028ebf:	mov    rdi,rcx
   140028ec2:	call   0x14001ef6c
   140028ec7:	lea    r8,[rsp+0x30]
   140028ecc:	lea    rbx,[rax+0x140]
   140028ed3:	mov    r9d,0x78
   140028ed9:	mov    ecx,DWORD PTR [rbx+0x18]
   140028edc:	neg    ecx
   140028ede:	mov    rcx,rdi
   140028ee1:	sbb    edx,edx
   140028ee3:	and    edx,0xfffff002
   140028ee9:	add    edx,0x1001
   140028eef:	call   0x14001e49c
   140028ef4:	test   eax,eax
   140028ef6:	jne    0x140028f02
   140028ef8:	and    DWORD PTR [rbx+0x10],eax
   140028efb:	mov    eax,0x1
   140028f00:	jmp    0x140028f46
   140028f02:	mov    rcx,QWORD PTR [rbx]
   140028f05:	lea    rdx,[rsp+0x30]
   140028f0a:	call   0x140025494
   140028f0f:	test   eax,eax
   140028f11:	jne    0x140028f3b
   140028f13:	mov    rcx,rdi
   140028f16:	call   0x14001e19c
   140028f1b:	lea    rcx,[rbx+0x258]
   140028f22:	mov    r8,rdi
   140028f25:	lea    r9,[rax+0x1]
   140028f29:	mov    edx,0x55
   140028f2e:	call   0x14001995c
   140028f33:	test   eax,eax
   140028f35:	jne    0x140028f67
   140028f37:	or     DWORD PTR [rbx+0x10],0x4
   140028f3b:	mov    eax,DWORD PTR [rbx+0x10]
   140028f3e:	shr    eax,0x2
   140028f41:	not    eax
   140028f43:	and    eax,0x1
   140028f46:	mov    rcx,QWORD PTR [rsp+0x120]
   140028f4e:	xor    rcx,rsp
   140028f51:	call   0x1400187d0
   140028f56:	mov    rbx,QWORD PTR [rsp+0x148]
   140028f5e:	add    rsp,0x130
   140028f65:	pop    rdi
   140028f66:	ret    
   140028f67:	and    QWORD PTR [rsp+0x20],0x0
   140028f6d:	xor    r9d,r9d
   140028f70:	xor    r8d,r8d
   140028f73:	xor    edx,edx
   140028f75:	xor    ecx,ecx
   140028f77:	call   0x14001ffd8
   140028f7c:	int3   
   140028f7d:	int3   
   140028f7e:	int3   
   140028f7f:	int3   
   140028f80:	mov    QWORD PTR [rsp+0x10],rbx
   140028f85:	mov    QWORD PTR [rsp+0x18],rsi
   140028f8a:	push   rdi
   140028f8b:	sub    rsp,0x20
   140028f8f:	xor    esi,esi
   140028f91:	mov    rdi,rdx
   140028f94:	mov    rbx,rcx
   140028f97:	test   rcx,rcx
   140028f9a:	je     0x140028ff2
   140028f9c:	cmp    WORD PTR [rcx],si
   140028f9f:	je     0x140028ff2
   140028fa1:	lea    rdx,[rip+0xeb38]        # 0x140037ae0
   140028fa8:	call   0x1400288fc
   140028fad:	test   eax,eax
   140028faf:	je     0x140028ff2
   140028fb1:	lea    rdx,[rip+0xeb30]        # 0x140037ae8
   140028fb8:	mov    rcx,rbx
   140028fbb:	call   0x1400288fc
   140028fc0:	test   eax,eax
   140028fc2:	jne    0x140028fe8
   140028fc4:	lea    rcx,[rdi+0x258]
   140028fcb:	lea    r9d,[rsi+0x2]
   140028fcf:	lea    r8,[rsp+0x30]
   140028fd4:	mov    edx,0x2000000b
   140028fd9:	call   0x14001e49c
   140028fde:	test   eax,eax
   140028fe0:	je     0x140029012
   140028fe2:	mov    eax,DWORD PTR [rsp+0x30]
   140028fe6:	jmp    0x140029024
   140028fe8:	mov    rcx,rbx
   140028feb:	call   0x14002c348
   140028ff0:	jmp    0x140029024
   140028ff2:	lea    rcx,[rdi+0x258]
   140028ff9:	lea    r8,[rsp+0x30]
   140028ffe:	mov    r9d,0x2
   140029004:	mov    edx,0x20001004
   140029009:	call   0x14001e49c
   14002900e:	test   eax,eax
   140029010:	jne    0x140029016
   140029012:	xor    eax,eax
   140029014:	jmp    0x140029024
   140029016:	mov    eax,DWORD PTR [rsp+0x30]
   14002901a:	test   eax,eax
   14002901c:	jne    0x140029024
   14002901e:	call   QWORD PTR [rip+0x6314]        # 0x14002f338
   140029024:	mov    rbx,QWORD PTR [rsp+0x38]
   140029029:	mov    rsi,QWORD PTR [rsp+0x40]
   14002902e:	add    rsp,0x20
   140029032:	pop    rdi
   140029033:	ret    
   140029034:	mov    QWORD PTR [rsp+0x10],rbx
   140029039:	push   rdi
   14002903a:	sub    rsp,0x40
   14002903e:	mov    rax,QWORD PTR [rip+0x1860b]        # 0x140041650
   140029045:	xor    rax,rsp
   140029048:	mov    QWORD PTR [rsp+0x38],rax
   14002904d:	mov    r9d,0x9
   140029053:	lea    r8,[rsp+0x20]
   140029058:	mov    rdi,rcx
   14002905b:	lea    edx,[r9+0x50]
   14002905f:	call   0x14001e49c
   140029064:	xor    ebx,ebx
   140029066:	test   eax,eax
   140029068:	je     0x140029084
   14002906a:	lea    rcx,[rsp+0x20]
   14002906f:	mov    r8d,0x9
   140029075:	mov    rdx,rdi
   140029078:	call   0x140028978
   14002907d:	test   eax,eax
   14002907f:	sete   bl
   140029082:	mov    eax,ebx
   140029084:	mov    rcx,QWORD PTR [rsp+0x38]
   140029089:	xor    rcx,rsp
   14002908c:	call   0x1400187d0
   140029091:	mov    rbx,QWORD PTR [rsp+0x58]
   140029096:	add    rsp,0x40
   14002909a:	pop    rdi
   14002909b:	ret    
   14002909c:	rex push rbx
   14002909e:	push   rbp
   14002909f:	push   rsi
   1400290a0:	push   rdi
   1400290a1:	push   r12
   1400290a3:	push   r14
   1400290a5:	push   r15
   1400290a7:	sub    rsp,0xf0
   1400290ae:	mov    rax,QWORD PTR [rip+0x1859b]        # 0x140041650
   1400290b5:	xor    rax,rsp
   1400290b8:	mov    QWORD PTR [rsp+0xe0],rax
   1400290c0:	mov    rbp,r8
   1400290c3:	mov    rsi,rdx
   1400290c6:	mov    r14,rcx
   1400290c9:	call   0x14001ef6c
   1400290ce:	xor    r12d,r12d
   1400290d1:	lea    rbx,[rax+0x140]
   1400290d8:	lea    rax,[r14+0x80]
   1400290df:	lea    r15,[rbx+0x258]
   1400290e6:	lea    rdi,[rbx+0x8]
   1400290ea:	mov    DWORD PTR [rbx+0x10],r12d
   1400290ee:	mov    WORD PTR [r15],r12w
   1400290f2:	mov    QWORD PTR [rdi],rax
   1400290f5:	mov    QWORD PTR [rbx],r14
   1400290f8:	cmp    WORD PTR [rax],r12w
   1400290fc:	je     0x140029112
   1400290fe:	lea    edx,[r12+0x16]
   140029103:	lea    rcx,[rip+0xe676]        # 0x140037780
   14002910a:	mov    r8,rdi
   14002910d:	call   0x140029a30
   140029112:	mov    rax,QWORD PTR [rbx]
   140029115:	cmp    WORD PTR [rax],r12w
   140029119:	je     0x140029291
   14002911f:	mov    rax,QWORD PTR [rdi]
   140029122:	mov    rcx,rbx
   140029125:	cmp    WORD PTR [rax],r12w
   140029129:	je     0x140029132
   14002912b:	call   0x1400289dc
   140029130:	jmp    0x140029137
   140029132:	call   0x140028a8c
   140029137:	cmp    DWORD PTR [rbx+0x10],r12d
   14002913b:	jne    0x140029174
   14002913d:	lea    rcx,[rip+0xda0c]        # 0x140036b50
   140029144:	mov    r8,rbx
   140029147:	mov    edx,0x40
   14002914c:	call   0x140029a30
   140029151:	test   eax,eax
   140029153:	je     0x14002916a
   140029155:	mov    rax,QWORD PTR [rdi]
   140029158:	mov    rcx,rbx
   14002915b:	cmp    WORD PTR [rax],r12w
   14002915f:	je     0x140029287
   140029165:	call   0x1400289dc
   14002916a:	cmp    DWORD PTR [rbx+0x10],r12d
   14002916e:	je     0x1400292da
   140029174:	lea    rcx,[r14+0x100]
   14002917b:	mov    rdx,rbx
   14002917e:	call   0x140028f80
   140029183:	mov    ebx,eax
   140029185:	test   eax,eax
   140029187:	je     0x1400292da
   14002918d:	lea    ecx,[rax-0xfde8]
   140029193:	cmp    ecx,0x1
   140029196:	jbe    0x1400292da
   14002919c:	movzx  ecx,ax
   14002919f:	call   QWORD PTR [rip+0x618b]        # 0x14002f330
   1400291a5:	test   eax,eax
   1400291a7:	je     0x1400292da
   1400291ad:	test   rsi,rsi
   1400291b0:	je     0x1400291b4
   1400291b2:	mov    DWORD PTR [rsi],ebx
   1400291b4:	test   rbp,rbp
   1400291b7:	je     0x140029280
   1400291bd:	lea    rsi,[rbp+0x120]
   1400291c4:	mov    rcx,r15
   1400291c7:	mov    WORD PTR [rsi],r12w
   1400291cb:	call   0x14001e19c
   1400291d0:	mov    r8,r15
   1400291d3:	lea    r9,[rax+0x1]
   1400291d7:	mov    edx,0x55
   1400291dc:	mov    rcx,rsi
   1400291df:	call   0x14001995c
   1400291e4:	test   eax,eax
   1400291e6:	jne    0x140029313
   1400291ec:	lea    r9d,[rax+0x40]
   1400291f0:	mov    r8,rbp
   1400291f3:	mov    edx,0x1001
   1400291f8:	mov    rcx,rsi
   1400291fb:	call   0x14001e49c
   140029200:	test   eax,eax
   140029202:	je     0x1400292da
   140029208:	lea    rdi,[rbp+0x80]
   14002920f:	mov    r9d,0x40
   140029215:	mov    edx,0x1002
   14002921a:	mov    r8,rdi
   14002921d:	mov    rcx,rsi
   140029220:	call   0x14001e49c
   140029225:	test   eax,eax
   140029227:	je     0x1400292da
   14002922d:	mov    edx,0x5f
   140029232:	mov    rcx,rdi
   140029235:	call   0x14002c354
   14002923a:	test   rax,rax
   14002923d:	jne    0x14002924f
   14002923f:	lea    edx,[rax+0x2e]
   140029242:	mov    rcx,rdi
   140029245:	call   0x14002c354
   14002924a:	test   rax,rax
   14002924d:	je     0x140029268
   14002924f:	mov    r9d,0x40
   140029255:	mov    r8,rdi
   140029258:	mov    rcx,rsi
   14002925b:	lea    edx,[r9-0x39]
   14002925f:	call   0x14001e49c
   140029264:	test   eax,eax
   140029266:	je     0x1400292da
   140029268:	mov    r9d,0xa
   14002926e:	lea    rdx,[rbp+0x100]
   140029275:	mov    ecx,ebx
   140029277:	lea    r8d,[r9+0x6]
   14002927b:	call   0x14002c210
   140029280:	mov    eax,0x1
   140029285:	jmp    0x1400292dc
   140029287:	call   0x140028a8c
   14002928c:	jmp    0x14002916a
   140029291:	or     DWORD PTR [rbx+0x10],0x104
   140029298:	lea    rcx,[rsp+0x30]
   14002929d:	mov    edx,0x55
   1400292a2:	call   0x14001e4ec
   1400292a7:	cmp    eax,0x1
   1400292aa:	jle    0x14002916a
   1400292b0:	lea    rcx,[rsp+0x30]
   1400292b5:	call   0x14001e19c
   1400292ba:	lea    r8,[rsp+0x30]
   1400292bf:	mov    edx,0x55
   1400292c4:	lea    r9,[rax+0x1]
   1400292c8:	mov    rcx,r15
   1400292cb:	call   0x14001995c
   1400292d0:	test   eax,eax
   1400292d2:	je     0x14002916a
   1400292d8:	jmp    0x1400292fe
   1400292da:	xor    eax,eax
   1400292dc:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400292e4:	xor    rcx,rsp
   1400292e7:	call   0x1400187d0
   1400292ec:	add    rsp,0xf0
   1400292f3:	pop    r15
   1400292f5:	pop    r14
   1400292f7:	pop    r12
   1400292f9:	pop    rdi
   1400292fa:	pop    rsi
   1400292fb:	pop    rbp
   1400292fc:	pop    rbx
   1400292fd:	ret    
   1400292fe:	xor    r9d,r9d
   140029301:	xor    r8d,r8d
   140029304:	xor    edx,edx
   140029306:	xor    ecx,ecx
   140029308:	mov    QWORD PTR [rsp+0x20],r12
   14002930d:	call   0x14001ffd8
   140029312:	int3   
   140029313:	xor    r9d,r9d
   140029316:	xor    r8d,r8d
   140029319:	xor    edx,edx
   14002931b:	xor    ecx,ecx
   14002931d:	mov    QWORD PTR [rsp+0x20],r12
   140029322:	call   0x14001ffd8
   140029327:	int3   
   140029328:	mov    QWORD PTR [rsp+0x10],rbx
   14002932d:	mov    QWORD PTR [rsp+0x18],rbp
   140029332:	mov    QWORD PTR [rsp+0x20],rsi
   140029337:	push   rdi
   140029338:	sub    rsp,0x120
   14002933f:	mov    rax,QWORD PTR [rip+0x1830a]        # 0x140041650
   140029346:	xor    rax,rsp
   140029349:	mov    QWORD PTR [rsp+0x110],rax
   140029351:	mov    rbx,rcx
   140029354:	call   0x14001ef6c
   140029359:	mov    rbp,rax
   14002935c:	call   0x14001ef6c
   140029361:	mov    rcx,rbx
   140029364:	mov    rdi,QWORD PTR [rax+0x470]
   14002936b:	call   0x140029888
   140029370:	mov    ecx,DWORD PTR [rbp+0x15c]
   140029376:	neg    ecx
   140029378:	lea    r8,[rsp+0x20]
   14002937d:	mov    r9d,0xf0
   140029383:	sbb    edx,edx
   140029385:	mov    ecx,eax
   140029387:	mov    esi,eax
   140029389:	and    edx,0xfffff005
   14002938f:	add    edx,0x1002
   140029395:	call   QWORD PTR [rip+0x5f5d]        # 0x14002f2f8
   14002939b:	xor    ebx,ebx
   14002939d:	test   eax,eax
   14002939f:	jne    0x1400293a8
   1400293a1:	mov    DWORD PTR [rdi],ebx
   1400293a3:	lea    eax,[rbx+0x1]
   1400293a6:	jmp    0x1400293eb
   1400293a8:	mov    rcx,QWORD PTR [rbp+0x148]
   1400293af:	lea    rdx,[rsp+0x20]
   1400293b4:	call   0x140025494
   1400293b9:	test   eax,eax
   1400293bb:	jne    0x1400293e1
   1400293bd:	lea    rcx,[rip+0xe72c]        # 0x140037af0
   1400293c4:	cmp    si,WORD PTR [rcx]
   1400293c7:	je     0x1400293e1
   1400293c9:	inc    ebx
   1400293cb:	add    rcx,0x2
   1400293cf:	movsxd rax,ebx
   1400293d2:	cmp    rax,0xa
   1400293d6:	jb     0x1400293c4
   1400293d8:	or     DWORD PTR [rdi],0x4
   1400293db:	mov    DWORD PTR [rdi+0x8],esi
   1400293de:	mov    DWORD PTR [rdi+0x4],esi
   1400293e1:	mov    eax,DWORD PTR [rdi]
   1400293e3:	shr    eax,0x2
   1400293e6:	not    eax
   1400293e8:	and    eax,0x1
   1400293eb:	mov    rcx,QWORD PTR [rsp+0x110]
   1400293f3:	xor    rcx,rsp
   1400293f6:	call   0x1400187d0
   1400293fb:	lea    r11,[rsp+0x120]
   140029403:	mov    rbx,QWORD PTR [r11+0x18]
   140029407:	mov    rbp,QWORD PTR [r11+0x20]
   14002940b:	mov    rsi,QWORD PTR [r11+0x28]
   14002940f:	mov    rsp,r11
   140029412:	pop    rdi
   140029413:	ret    
   140029414:	mov    QWORD PTR [rsp+0x8],rbx
   140029419:	push   rdi
   14002941a:	sub    rsp,0x20
   14002941e:	mov    rdi,rcx
   140029421:	call   0x14001ef6c
   140029426:	lea    rbx,[rax+0x140]
   14002942d:	mov    rcx,QWORD PTR [rbx]
   140029430:	call   0x14001e19c
   140029435:	mov    rcx,QWORD PTR [rbx+0x8]
   140029439:	xor    edx,edx
   14002943b:	cmp    rax,0x3
   14002943f:	sete   dl
   140029442:	mov    DWORD PTR [rbx+0x18],edx
   140029445:	call   0x14001e19c
   14002944a:	xor    ecx,ecx
   14002944c:	cmp    rax,0x3
   140029450:	mov    edx,0x2
   140029455:	sete   cl
   140029458:	mov    DWORD PTR [rbx+0x1c],ecx
   14002945b:	and    DWORD PTR [rdi+0x4],0x0
   14002945f:	cmp    DWORD PTR [rbx+0x18],0x0
   140029463:	jne    0x140029490
   140029465:	mov    rcx,QWORD PTR [rbx]
   140029468:	xor    r9d,r9d
   14002946b:	movzx  r8d,WORD PTR [rcx]
   14002946f:	add    rcx,rdx
   140029472:	lea    eax,[r8-0x41]
   140029476:	cmp    ax,0x19
   14002947a:	jbe    0x140029488
   14002947c:	sub    r8w,0x61
   140029481:	cmp    r8w,0x19
   140029486:	ja     0x14002948d
   140029488:	inc    r9d
   14002948b:	jmp    0x14002946b
   14002948d:	mov    edx,r9d
   140029490:	mov    DWORD PTR [rbx+0x14],edx
   140029493:	lea    rcx,[rip+0xc2]        # 0x14002955c
   14002949a:	mov    edx,0x1
   14002949f:	call   QWORD PTR [rip+0x5e6b]        # 0x14002f310
   1400294a5:	test   DWORD PTR [rdi],0x100
   1400294ab:	je     0x1400294ba
   1400294ad:	test   DWORD PTR [rdi],0x200
   1400294b3:	je     0x1400294ba
   1400294b5:	test   BYTE PTR [rdi],0x7
   1400294b8:	jne    0x1400294bd
   1400294ba:	and    DWORD PTR [rdi],0x0
   1400294bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400294c2:	add    rsp,0x20
   1400294c6:	pop    rdi
   1400294c7:	ret    
   1400294c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400294cd:	push   rdi
   1400294ce:	sub    rsp,0x20
   1400294d2:	mov    rdi,rcx
   1400294d5:	call   0x14001ef6c
   1400294da:	mov    rcx,QWORD PTR [rax+0x140]
   1400294e1:	mov    rbx,rax
   1400294e4:	call   0x14001e19c
   1400294e9:	xor    edx,edx
   1400294eb:	mov    ecx,0x2
   1400294f0:	cmp    rax,0x3
   1400294f4:	sete   dl
   1400294f7:	mov    DWORD PTR [rbx+0x158],edx
   1400294fd:	test   edx,edx
   1400294ff:	jne    0x140029530
   140029501:	mov    rdx,QWORD PTR [rbx+0x140]
   140029508:	xor    r9d,r9d
   14002950b:	movzx  r8d,WORD PTR [rdx]
   14002950f:	add    rdx,rcx
   140029512:	lea    eax,[r8-0x41]
   140029516:	cmp    ax,0x19
   14002951a:	jbe    0x140029528
   14002951c:	sub    r8w,0x61
   140029521:	cmp    r8w,0x19
   140029526:	ja     0x14002952d
   140029528:	inc    r9d
   14002952b:	jmp    0x14002950b
   14002952d:	mov    ecx,r9d
   140029530:	mov    DWORD PTR [rbx+0x154],ecx
   140029536:	lea    rcx,[rip+0x24f]        # 0x14002978c
   14002953d:	mov    edx,0x1
   140029542:	call   QWORD PTR [rip+0x5dc8]        # 0x14002f310
   140029548:	test   BYTE PTR [rdi],0x4
   14002954b:	jne    0x140029550
   14002954d:	and    DWORD PTR [rdi],0x0
   140029550:	mov    rbx,QWORD PTR [rsp+0x30]
   140029555:	add    rsp,0x20
   140029559:	pop    rdi
   14002955a:	ret    
   14002955b:	int3   
   14002955c:	mov    QWORD PTR [rsp+0x10],rbx
   140029561:	mov    QWORD PTR [rsp+0x18],rsi
   140029566:	mov    QWORD PTR [rsp+0x20],rdi
   14002956b:	push   r14
   14002956d:	sub    rsp,0x120
   140029574:	mov    rax,QWORD PTR [rip+0x180d5]        # 0x140041650
   14002957b:	xor    rax,rsp
   14002957e:	mov    QWORD PTR [rsp+0x110],rax
   140029586:	mov    rbx,rcx
   140029589:	call   0x14001ef6c
   14002958e:	lea    rsi,[rax+0x140]
   140029595:	call   0x14001ef6c
   14002959a:	mov    rcx,rbx
   14002959d:	mov    rdi,QWORD PTR [rax+0x470]
   1400295a4:	call   0x140029888
   1400295a9:	mov    ecx,DWORD PTR [rsi+0x1c]
   1400295ac:	neg    ecx
   1400295ae:	lea    r8,[rsp+0x20]
   1400295b3:	mov    r9d,0xf0
   1400295b9:	sbb    edx,edx
   1400295bb:	mov    ecx,eax
   1400295bd:	mov    ebx,eax
   1400295bf:	and    edx,0xfffff005
   1400295c5:	add    edx,0x1002
   1400295cb:	call   QWORD PTR [rip+0x5d27]        # 0x14002f2f8
   1400295d1:	xor    r14d,r14d
   1400295d4:	test   eax,eax
   1400295d6:	jne    0x1400295e5
   1400295d8:	mov    DWORD PTR [rdi],r14d
   1400295db:	mov    eax,0x1
   1400295e0:	jmp    0x14002975f
   1400295e5:	mov    rcx,QWORD PTR [rsi+0x8]
   1400295e9:	lea    rdx,[rsp+0x20]
   1400295ee:	call   0x140025494
   1400295f3:	test   eax,eax
   1400295f5:	jne    0x1400296a7
   1400295fb:	mov    eax,DWORD PTR [rsi+0x18]
   1400295fe:	lea    r8,[rsp+0x20]
   140029603:	mov    r9d,0xf0
   140029609:	neg    eax
   14002960b:	mov    ecx,ebx
   14002960d:	sbb    edx,edx
   14002960f:	and    edx,0xfffff002
   140029615:	add    edx,0x1001
   14002961b:	call   QWORD PTR [rip+0x5cd7]        # 0x14002f2f8
   140029621:	test   eax,eax
   140029623:	je     0x1400295d8
   140029625:	mov    rcx,QWORD PTR [rsi]
   140029628:	lea    rdx,[rsp+0x20]
   14002962d:	call   0x140025494
   140029632:	test   eax,eax
   140029634:	jne    0x140029641
   140029636:	or     DWORD PTR [rdi],0x304
   14002963c:	mov    DWORD PTR [rdi+0x4],ebx
   14002963f:	jmp    0x1400296a4
   140029641:	test   BYTE PTR [rdi],0x2
   140029644:	jne    0x1400296a7
   140029646:	cmp    DWORD PTR [rsi+0x14],r14d
   14002964a:	je     0x140029679
   14002964c:	movsxd r8,DWORD PTR [rsi+0x14]
   140029650:	mov    rcx,QWORD PTR [rsi]
   140029653:	lea    rdx,[rsp+0x20]
   140029658:	call   0x14002c3e0
   14002965d:	test   eax,eax
   14002965f:	jne    0x140029679
   140029661:	or     DWORD PTR [rdi],0x2
   140029664:	mov    DWORD PTR [rdi+0x8],ebx
   140029667:	mov    rcx,QWORD PTR [rsi]
   14002966a:	call   0x14001e19c
   14002966f:	cmp    eax,DWORD PTR [rsi+0x14]
   140029672:	jne    0x1400296a7
   140029674:	mov    DWORD PTR [rdi+0x4],ebx
   140029677:	jmp    0x1400296a7
   140029679:	mov    ecx,DWORD PTR [rdi]
   14002967b:	test   cl,0x1
   14002967e:	jne    0x1400296a7
   140029680:	mov    r8d,r14d
   140029683:	lea    rdx,[rip+0xe466]        # 0x140037af0
   14002968a:	cmp    bx,WORD PTR [rdx]
   14002968d:	je     0x1400296a7
   14002968f:	inc    r8d
   140029692:	add    rdx,0x2
   140029696:	movsxd rax,r8d
   140029699:	cmp    rax,0xa
   14002969d:	jb     0x14002968a
   14002969f:	or     ecx,0x1
   1400296a2:	mov    DWORD PTR [rdi],ecx
   1400296a4:	mov    DWORD PTR [rdi+0x8],ebx
   1400296a7:	mov    eax,DWORD PTR [rdi]
   1400296a9:	mov    ecx,0x300
   1400296ae:	and    eax,ecx
   1400296b0:	cmp    eax,ecx
   1400296b2:	je     0x140029755
   1400296b8:	mov    eax,DWORD PTR [rsi+0x18]
   1400296bb:	lea    r8,[rsp+0x20]
   1400296c0:	mov    r9d,0xf0
   1400296c6:	neg    eax
   1400296c8:	mov    ecx,ebx
   1400296ca:	sbb    edx,edx
   1400296cc:	and    edx,0xfffff002
   1400296d2:	add    edx,0x1001
   1400296d8:	call   QWORD PTR [rip+0x5c1a]        # 0x14002f2f8
   1400296de:	test   eax,eax
   1400296e0:	je     0x1400295d8
   1400296e6:	mov    rcx,QWORD PTR [rsi]
   1400296e9:	lea    rdx,[rsp+0x20]
   1400296ee:	call   0x140025494
   1400296f3:	test   eax,eax
   1400296f5:	jne    0x14002971b
   1400296f7:	bts    DWORD PTR [rdi],0x9
   1400296fb:	cmp    DWORD PTR [rsi+0x18],r14d
   1400296ff:	jne    0x140029748
   140029701:	cmp    DWORD PTR [rsi+0x14],r14d
   140029705:	je     0x140029748
   140029707:	mov    rcx,QWORD PTR [rsi]
   14002970a:	call   0x14001e19c
   14002970f:	cmp    eax,DWORD PTR [rsi+0x14]
   140029712:	jne    0x140029748
   140029714:	mov    edx,0x1
   140029719:	jmp    0x14002973a
   14002971b:	cmp    DWORD PTR [rsi+0x18],r14d
   14002971f:	jne    0x140029755
   140029721:	cmp    DWORD PTR [rsi+0x14],r14d
   140029725:	je     0x140029755
   140029727:	mov    rcx,QWORD PTR [rsi]
   14002972a:	lea    rdx,[rsp+0x20]
   14002972f:	call   0x140025494
   140029734:	test   eax,eax
   140029736:	jne    0x140029755
   140029738:	xor    edx,edx
   14002973a:	mov    r8,rdi
   14002973d:	mov    ecx,ebx
   14002973f:	call   0x140029988
   140029744:	test   eax,eax
   140029746:	je     0x140029755
   140029748:	bts    DWORD PTR [rdi],0x8
   14002974c:	cmp    DWORD PTR [rdi+0x4],r14d
   140029750:	jne    0x140029755
   140029752:	mov    DWORD PTR [rdi+0x4],ebx
   140029755:	mov    eax,DWORD PTR [rdi]
   140029757:	shr    eax,0x2
   14002975a:	not    eax
   14002975c:	and    eax,0x1
   14002975f:	mov    rcx,QWORD PTR [rsp+0x110]
   140029767:	xor    rcx,rsp
   14002976a:	call   0x1400187d0
   14002976f:	lea    r11,[rsp+0x120]
   140029777:	mov    rbx,QWORD PTR [r11+0x18]
   14002977b:	mov    rsi,QWORD PTR [r11+0x20]
   14002977f:	mov    rdi,QWORD PTR [r11+0x28]
   140029783:	mov    rsp,r11
   140029786:	pop    r14
   140029788:	ret    
   140029789:	int3   
   14002978a:	int3   
   14002978b:	int3   
   14002978c:	mov    QWORD PTR [rsp+0x10],rbx
   140029791:	mov    QWORD PTR [rsp+0x18],rsi
   140029796:	push   rdi
   140029797:	sub    rsp,0x120
   14002979e:	mov    rax,QWORD PTR [rip+0x17eab]        # 0x140041650
   1400297a5:	xor    rax,rsp
   1400297a8:	mov    QWORD PTR [rsp+0x110],rax
   1400297b0:	mov    rbx,rcx
   1400297b3:	call   0x14001ef6c
   1400297b8:	lea    rsi,[rax+0x140]
   1400297bf:	call   0x14001ef6c
   1400297c4:	mov    rcx,rbx
   1400297c7:	mov    rdi,QWORD PTR [rax+0x470]
   1400297ce:	call   0x140029888
   1400297d3:	mov    ecx,DWORD PTR [rsi+0x18]
   1400297d6:	neg    ecx
   1400297d8:	lea    r8,[rsp+0x20]
   1400297dd:	mov    r9d,0xf0
   1400297e3:	sbb    edx,edx
   1400297e5:	mov    ecx,eax
   1400297e7:	mov    ebx,eax
   1400297e9:	and    edx,0xfffff002
   1400297ef:	add    edx,0x1001
   1400297f5:	call   QWORD PTR [rip+0x5afd]        # 0x14002f2f8
   1400297fb:	test   eax,eax
   1400297fd:	jne    0x140029808
   1400297ff:	and    DWORD PTR [rdi],eax
   140029801:	mov    eax,0x1
   140029806:	jmp    0x140029863
   140029808:	mov    rcx,QWORD PTR [rsi]
   14002980b:	lea    rdx,[rsp+0x20]
   140029810:	call   0x140025494
   140029815:	test   eax,eax
   140029817:	jne    0x140029823
   140029819:	cmp    DWORD PTR [rsi+0x18],eax
   14002981c:	jne    0x140029850
   14002981e:	lea    edx,[rax+0x1]
   140029821:	jmp    0x140029842
   140029823:	cmp    DWORD PTR [rsi+0x18],0x0
   140029827:	jne    0x140029859
   140029829:	cmp    DWORD PTR [rsi+0x14],0x0
   14002982d:	je     0x140029859
   14002982f:	mov    rcx,QWORD PTR [rsi]
   140029832:	lea    rdx,[rsp+0x20]
   140029837:	call   0x140025494
   14002983c:	test   eax,eax
   14002983e:	jne    0x140029859
   140029840:	xor    edx,edx
   140029842:	mov    r8,rdi
   140029845:	mov    ecx,ebx
   140029847:	call   0x140029988
   14002984c:	test   eax,eax
   14002984e:	je     0x140029859
   140029850:	or     DWORD PTR [rdi],0x4
   140029853:	mov    DWORD PTR [rdi+0x4],ebx
   140029856:	mov    DWORD PTR [rdi+0x8],ebx
   140029859:	mov    eax,DWORD PTR [rdi]
   14002985b:	shr    eax,0x2
   14002985e:	not    eax
   140029860:	and    eax,0x1
   140029863:	mov    rcx,QWORD PTR [rsp+0x110]
   14002986b:	xor    rcx,rsp
   14002986e:	call   0x1400187d0
   140029873:	lea    r11,[rsp+0x120]
   14002987b:	mov    rbx,QWORD PTR [r11+0x18]
   14002987f:	mov    rsi,QWORD PTR [r11+0x20]
   140029883:	mov    rsp,r11
   140029886:	pop    rdi
   140029887:	ret    
   140029888:	movzx  edx,WORD PTR [rcx]
   14002988b:	xor    r10d,r10d
   14002988e:	mov    r9,rcx
   140029891:	mov    r8d,r10d
   140029894:	jmp    0x1400298cd
   140029896:	lea    eax,[rdx-0x61]
   140029899:	lea    r9,[r9+0x2]
   14002989d:	cmp    ax,0x5
   1400298a1:	ja     0x1400298aa
   1400298a3:	mov    eax,0xffd9
   1400298a8:	jmp    0x1400298b8
   1400298aa:	lea    eax,[rdx-0x41]
   1400298ad:	cmp    ax,0x5
   1400298b1:	ja     0x1400298bb
   1400298b3:	mov    eax,0xfff9
   1400298b8:	add    dx,ax
   1400298bb:	shl    r8d,0x4
   1400298bf:	movzx  ecx,dx
   1400298c2:	movzx  edx,WORD PTR [r9]
   1400298c6:	add    r8d,0xffffffd0
   1400298ca:	add    r8d,ecx
   1400298cd:	test   dx,dx
   1400298d0:	jne    0x140029896
   1400298d2:	mov    eax,r8d
   1400298d5:	ret    
   1400298d6:	int3   
   1400298d7:	int3   
   1400298d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400298dd:	mov    QWORD PTR [rsp+0x18],rsi
   1400298e2:	push   rdi
   1400298e3:	sub    rsp,0x20
   1400298e7:	xor    esi,esi
   1400298e9:	mov    rdi,rdx
   1400298ec:	mov    rbx,rcx
   1400298ef:	test   rcx,rcx
   1400298f2:	je     0x140029947
   1400298f4:	cmp    WORD PTR [rcx],si
   1400298f7:	je     0x140029947
   1400298f9:	lea    rdx,[rip+0xe1e0]        # 0x140037ae0
   140029900:	call   0x1400288fc
   140029905:	test   eax,eax
   140029907:	je     0x140029947
   140029909:	lea    rdx,[rip+0xe1d8]        # 0x140037ae8
   140029910:	mov    rcx,rbx
   140029913:	call   0x1400288fc
   140029918:	test   eax,eax
   14002991a:	jne    0x14002993d
   14002991c:	mov    ecx,DWORD PTR [rdi+0x8]
   14002991f:	lea    r9d,[rsi+0x2]
   140029923:	lea    r8,[rsp+0x30]
   140029928:	mov    edx,0x2000000b
   14002992d:	call   QWORD PTR [rip+0x59c5]        # 0x14002f2f8
   140029933:	test   eax,eax
   140029935:	je     0x140029964
   140029937:	mov    eax,DWORD PTR [rsp+0x30]
   14002993b:	jmp    0x140029976
   14002993d:	mov    rcx,rbx
   140029940:	call   0x14002c348
   140029945:	jmp    0x140029976
   140029947:	mov    ecx,DWORD PTR [rdi+0x8]
   14002994a:	lea    r8,[rsp+0x30]
   14002994f:	mov    r9d,0x2
   140029955:	mov    edx,0x20001004
   14002995a:	call   QWORD PTR [rip+0x5998]        # 0x14002f2f8
   140029960:	test   eax,eax
   140029962:	jne    0x140029968
   140029964:	xor    eax,eax
   140029966:	jmp    0x140029976
   140029968:	mov    eax,DWORD PTR [rsp+0x30]
   14002996c:	test   eax,eax
   14002996e:	jne    0x140029976
   140029970:	call   QWORD PTR [rip+0x59c2]        # 0x14002f338
   140029976:	mov    rbx,QWORD PTR [rsp+0x38]
   14002997b:	mov    rsi,QWORD PTR [rsp+0x40]
   140029980:	add    rsp,0x20
   140029984:	pop    rdi
   140029985:	ret    
   140029986:	int3   
   140029987:	int3   
   140029988:	mov    QWORD PTR [rsp+0x10],rbx
   14002998d:	mov    QWORD PTR [rsp+0x18],rbp
   140029992:	mov    QWORD PTR [rsp+0x20],rsi
   140029997:	push   rdi
   140029998:	sub    rsp,0x20
   14002999c:	mov    ebp,edx
   14002999e:	mov    edi,ecx
   1400299a0:	call   0x14001ef6c
   1400299a5:	mov    ecx,edi
   1400299a7:	lea    r8,[rsp+0x30]
   1400299ac:	mov    r9d,0x2
   1400299b2:	and    ecx,0x3ff
   1400299b8:	mov    edx,0x20000001
   1400299bd:	mov    rsi,rax
   1400299c0:	bts    ecx,0xa
   1400299c4:	call   QWORD PTR [rip+0x592e]        # 0x14002f2f8
   1400299ca:	xor    ebx,ebx
   1400299cc:	test   eax,eax
   1400299ce:	jne    0x1400299d4
   1400299d0:	xor    eax,eax
   1400299d2:	jmp    0x140029a18
   1400299d4:	cmp    edi,DWORD PTR [rsp+0x30]
   1400299d8:	je     0x140029a13
   1400299da:	test   ebp,ebp
   1400299dc:	je     0x140029a13
   1400299de:	mov    rcx,QWORD PTR [rsi+0x140]
   1400299e5:	movzx  edx,WORD PTR [rcx]
   1400299e8:	add    rcx,0x2
   1400299ec:	lea    eax,[rdx-0x41]
   1400299ef:	cmp    ax,0x19
   1400299f3:	jbe    0x1400299ff
   1400299f5:	sub    dx,0x61
   1400299f9:	cmp    dx,0x19
   1400299fd:	ja     0x140029a03
   1400299ff:	inc    ebx
   140029a01:	jmp    0x1400299e5
   140029a03:	mov    rcx,QWORD PTR [rsi+0x140]
   140029a0a:	call   0x14001e19c
   140029a0f:	cmp    ebx,eax
   140029a11:	je     0x1400299d0
   140029a13:	mov    eax,0x1
   140029a18:	mov    rbx,QWORD PTR [rsp+0x38]
   140029a1d:	mov    rbp,QWORD PTR [rsp+0x40]
   140029a22:	mov    rsi,QWORD PTR [rsp+0x48]
   140029a27:	add    rsp,0x20
   140029a2b:	pop    rdi
   140029a2c:	ret    
   140029a2d:	int3   
   140029a2e:	int3   
   140029a2f:	int3   
   140029a30:	mov    rax,rsp
   140029a33:	mov    QWORD PTR [rax+0x8],rbx
   140029a37:	mov    QWORD PTR [rax+0x10],rbp
   140029a3b:	mov    QWORD PTR [rax+0x18],rsi
   140029a3f:	mov    QWORD PTR [rax+0x20],rdi
   140029a43:	push   r12
   140029a45:	push   r14
   140029a47:	push   r15
   140029a49:	sub    rsp,0x20
   140029a4d:	xor    ebx,ebx
   140029a4f:	mov    r15,r8
   140029a52:	mov    edi,edx
   140029a54:	mov    r12,rcx
   140029a57:	mov    eax,0x1
   140029a5c:	mov    esi,ebx
   140029a5e:	test   edx,edx
   140029a60:	js     0x140029aa3
   140029a62:	test   eax,eax
   140029a64:	je     0x140029aa5
   140029a66:	mov    rcx,QWORD PTR [r15]
   140029a69:	lea    eax,[rsi+rdi*1]
   140029a6c:	cdq    
   140029a6d:	sub    eax,edx
   140029a6f:	sar    eax,1
   140029a71:	movsxd rbp,eax
   140029a74:	mov    r14,rbp
   140029a77:	shl    r14,0x4
   140029a7b:	mov    rdx,QWORD PTR [r14+r12*1]
   140029a7f:	call   0x140025494
   140029a84:	test   eax,eax
   140029a86:	jne    0x140029a95
   140029a88:	lea    rcx,[r12+0x8]
   140029a8d:	add    rcx,r14
   140029a90:	mov    QWORD PTR [r15],rcx
   140029a93:	jmp    0x140029a9f
   140029a95:	jns    0x140029a9c
   140029a97:	lea    edi,[rbp-0x1]
   140029a9a:	jmp    0x140029a9f
   140029a9c:	lea    esi,[rbp+0x1]
   140029a9f:	cmp    esi,edi
   140029aa1:	jle    0x140029a62
   140029aa3:	test   eax,eax
   140029aa5:	mov    rbp,QWORD PTR [rsp+0x48]
   140029aaa:	mov    rsi,QWORD PTR [rsp+0x50]
   140029aaf:	mov    rdi,QWORD PTR [rsp+0x58]
   140029ab4:	sete   bl
   140029ab7:	mov    eax,ebx
   140029ab9:	mov    rbx,QWORD PTR [rsp+0x40]
   140029abe:	add    rsp,0x20
   140029ac2:	pop    r15
   140029ac4:	pop    r14
   140029ac6:	pop    r12
   140029ac8:	ret    
   140029ac9:	int3   
   140029aca:	int3   
   140029acb:	int3   
   140029acc:	rex push rbp
   140029ace:	push   rbx
   140029acf:	push   rsi
   140029ad0:	push   rdi
   140029ad1:	push   r12
   140029ad3:	push   r14
   140029ad5:	push   r15
   140029ad7:	mov    rbp,rsp
   140029ada:	sub    rsp,0x40
   140029ade:	mov    rax,QWORD PTR [rip+0x17b6b]        # 0x140041650
   140029ae5:	xor    rax,rsp
   140029ae8:	mov    QWORD PTR [rbp-0x10],rax
   140029aec:	mov    r14,r8
   140029aef:	mov    r15,rdx
   140029af2:	mov    rsi,rcx
   140029af5:	call   0x14001ef6c
   140029afa:	xor    edx,edx
   140029afc:	lea    rcx,[rbp-0x20]
   140029b00:	lea    r8d,[rdx+0xc]
   140029b04:	mov    rdi,rax
   140029b07:	call   0x14001b980
   140029b0c:	call   0x14001ef6c
   140029b11:	lea    rcx,[rbp-0x20]
   140029b15:	xor    r12d,r12d
   140029b18:	mov    QWORD PTR [rax+0x470],rcx
   140029b1f:	test   rsi,rsi
   140029b22:	jne    0x140029b30
   140029b24:	or     DWORD PTR [rbp-0x20],0x104
   140029b2b:	jmp    0x140029c4a
   140029b30:	lea    rax,[rsi+0x80]
   140029b37:	lea    rbx,[rdi+0x148]
   140029b3e:	mov    QWORD PTR [rdi+0x140],rsi
   140029b45:	mov    QWORD PTR [rbx],rax
   140029b48:	test   rax,rax
   140029b4b:	je     0x140029b6a
   140029b4d:	cmp    WORD PTR [rax],r12w
   140029b51:	je     0x140029b6a
   140029b53:	mov    edx,DWORD PTR [rip+0xdf7f]        # 0x140037ad8
   140029b59:	lea    rcx,[rip+0xdc20]        # 0x140037780
   140029b60:	mov    r8,rbx
   140029b63:	dec    edx
   140029b65:	call   0x140029a30
   140029b6a:	mov    DWORD PTR [rbp-0x20],r12d
   140029b6e:	mov    rax,QWORD PTR [rdi+0x140]
   140029b75:	test   rax,rax
   140029b78:	je     0x140029bf3
   140029b7a:	cmp    WORD PTR [rax],r12w
   140029b7e:	je     0x140029bf3
   140029b80:	mov    rax,QWORD PTR [rbx]
   140029b83:	test   rax,rax
   140029b86:	je     0x140029b99
   140029b88:	cmp    WORD PTR [rax],r12w
   140029b8c:	je     0x140029b99
   140029b8e:	lea    rcx,[rbp-0x20]
   140029b92:	call   0x140029414
   140029b97:	jmp    0x140029ba2
   140029b99:	lea    rcx,[rbp-0x20]
   140029b9d:	call   0x1400294c8
   140029ba2:	cmp    DWORD PTR [rbp-0x20],r12d
   140029ba6:	jne    0x140029c60
   140029bac:	mov    edx,DWORD PTR [rip+0xdf22]        # 0x140037ad4
   140029bb2:	lea    r8,[rdi+0x140]
   140029bb9:	lea    rcx,[rip+0xcf90]        # 0x140036b50
   140029bc0:	dec    edx
   140029bc2:	call   0x140029a30
   140029bc7:	test   eax,eax
   140029bc9:	je     0x140029c56
   140029bcf:	mov    rax,QWORD PTR [rbx]
   140029bd2:	test   rax,rax
   140029bd5:	je     0x140029be8
   140029bd7:	cmp    WORD PTR [rax],r12w
   140029bdb:	je     0x140029be8
   140029bdd:	lea    rcx,[rbp-0x20]
   140029be1:	call   0x140029414
   140029be6:	jmp    0x140029c56
   140029be8:	lea    rcx,[rbp-0x20]
   140029bec:	call   0x1400294c8
   140029bf1:	jmp    0x140029c56
   140029bf3:	mov    rax,QWORD PTR [rbx]
   140029bf6:	test   rax,rax
   140029bf9:	je     0x140029c43
   140029bfb:	cmp    WORD PTR [rax],r12w
   140029bff:	je     0x140029c43
   140029c01:	call   0x14001ef6c
   140029c06:	mov    rbx,rax
   140029c09:	mov    rcx,QWORD PTR [rax+0x148]
   140029c10:	call   0x14001e19c
   140029c15:	mov    ecx,r12d
   140029c18:	mov    edx,0x1
   140029c1d:	cmp    rax,0x3
   140029c21:	sete   cl
   140029c24:	mov    DWORD PTR [rbx+0x15c],ecx
   140029c2a:	lea    rcx,[rip+0xfffffffffffff6f7]        # 0x140029328
   140029c31:	call   QWORD PTR [rip+0x56d9]        # 0x14002f310
   140029c37:	test   BYTE PTR [rbp-0x20],0x4
   140029c3b:	jne    0x140029c56
   140029c3d:	mov    DWORD PTR [rbp-0x20],r12d
   140029c41:	jmp    0x140029c56
   140029c43:	mov    DWORD PTR [rbp-0x20],0x104
   140029c4a:	call   QWORD PTR [rip+0x56b8]        # 0x14002f308
   140029c50:	mov    DWORD PTR [rbp-0x1c],eax
   140029c53:	mov    DWORD PTR [rbp-0x18],eax
   140029c56:	cmp    DWORD PTR [rbp-0x20],r12d
   140029c5a:	je     0x140029d45
   140029c60:	lea    rax,[rsi+0x100]
   140029c67:	neg    rsi
   140029c6a:	lea    rdx,[rbp-0x20]
   140029c6e:	sbb    rcx,rcx
   140029c71:	and    rcx,rax
   140029c74:	call   0x1400298d8
   140029c79:	mov    ebx,eax
   140029c7b:	test   eax,eax
   140029c7d:	je     0x140029d45
   140029c83:	lea    ecx,[rax-0xfde8]
   140029c89:	cmp    ecx,0x1
   140029c8c:	jbe    0x140029d45
   140029c92:	movzx  ecx,ax
   140029c95:	call   QWORD PTR [rip+0x5695]        # 0x14002f330
   140029c9b:	test   eax,eax
   140029c9d:	je     0x140029d45
   140029ca3:	mov    ecx,DWORD PTR [rbp-0x1c]
   140029ca6:	mov    edx,0x1
   140029cab:	call   QWORD PTR [rip+0x564f]        # 0x14002f300
   140029cb1:	test   eax,eax
   140029cb3:	je     0x140029d45
   140029cb9:	test   r15,r15
   140029cbc:	je     0x140029cc1
   140029cbe:	mov    DWORD PTR [r15],ebx
   140029cc1:	mov    ecx,DWORD PTR [rbp-0x1c]
   140029cc4:	lea    rdx,[rdi+0x398]
   140029ccb:	mov    edi,0x55
   140029cd0:	mov    r8d,edi
   140029cd3:	call   0x14001e368
   140029cd8:	test   r14,r14
   140029cdb:	je     0x140029d3e
   140029cdd:	mov    ecx,DWORD PTR [rbp-0x1c]
   140029ce0:	lea    rdx,[r14+0x120]
   140029ce7:	mov    r8d,edi
   140029cea:	call   0x14001e368
   140029cef:	mov    ecx,DWORD PTR [rbp-0x1c]
   140029cf2:	mov    edi,0x40
   140029cf7:	mov    r9d,edi
   140029cfa:	mov    r8,r14
   140029cfd:	mov    edx,0x1001
   140029d02:	call   QWORD PTR [rip+0x55f0]        # 0x14002f2f8
   140029d08:	test   eax,eax
   140029d0a:	je     0x140029d45
   140029d0c:	mov    ecx,DWORD PTR [rbp-0x18]
   140029d0f:	lea    r8,[r14+0x80]
   140029d16:	mov    r9d,edi
   140029d19:	mov    edx,0x1002
   140029d1e:	call   QWORD PTR [rip+0x55d4]        # 0x14002f2f8
   140029d24:	test   eax,eax
   140029d26:	je     0x140029d45
   140029d28:	lea    rdx,[r14+0x100]
   140029d2f:	lea    r9d,[rdi-0x36]
   140029d33:	lea    r8d,[rdi-0x30]
   140029d37:	mov    ecx,ebx
   140029d39:	call   0x14002c210
   140029d3e:	mov    eax,0x1
   140029d43:	jmp    0x140029d47
   140029d45:	xor    eax,eax
   140029d47:	mov    rcx,QWORD PTR [rbp-0x10]
   140029d4b:	xor    rcx,rsp
   140029d4e:	call   0x1400187d0
   140029d53:	add    rsp,0x40
   140029d57:	pop    r15
   140029d59:	pop    r14
   140029d5b:	pop    r12
   140029d5d:	pop    rdi
   140029d5e:	pop    rsi
   140029d5f:	pop    rbx
   140029d60:	pop    rbp
   140029d61:	ret    
   140029d62:	int3   
   140029d63:	int3   
   140029d64:	rex push rbx
   140029d66:	sub    rsp,0x20
   140029d6a:	mov    rbx,rcx
   140029d6d:	test   rcx,rcx
   140029d70:	jne    0x140029d7c
   140029d72:	add    rsp,0x20
   140029d76:	pop    rbx
   140029d77:	jmp    0x140029e38
   140029d7c:	call   0x140029db0
   140029d81:	test   eax,eax
   140029d83:	je     0x140029d8a
   140029d85:	or     eax,0xffffffff
   140029d88:	jmp    0x140029daa
   140029d8a:	test   DWORD PTR [rbx+0x18],0x4000
   140029d91:	je     0x140029da8
   140029d93:	mov    rcx,rbx
   140029d96:	call   0x14002721c
   140029d9b:	mov    ecx,eax
   140029d9d:	call   0x14002c590
   140029da2:	neg    eax
   140029da4:	sbb    eax,eax
   140029da6:	jmp    0x140029daa
   140029da8:	xor    eax,eax
   140029daa:	add    rsp,0x20
   140029dae:	pop    rbx
   140029daf:	ret    
   140029db0:	mov    QWORD PTR [rsp+0x8],rbx
   140029db5:	mov    QWORD PTR [rsp+0x10],rsi
   140029dba:	push   rdi
   140029dbb:	sub    rsp,0x20
   140029dbf:	mov    eax,DWORD PTR [rcx+0x18]
   140029dc2:	xor    esi,esi
   140029dc4:	mov    rbx,rcx
   140029dc7:	and    al,0x3
   140029dc9:	cmp    al,0x2
   140029dcb:	jne    0x140029e0c
   140029dcd:	test   DWORD PTR [rcx+0x18],0x108
   140029dd4:	je     0x140029e0c
   140029dd6:	mov    edi,DWORD PTR [rcx]
   140029dd8:	sub    edi,DWORD PTR [rcx+0x10]
   140029ddb:	test   edi,edi
   140029ddd:	jle    0x140029e0c
   140029ddf:	call   0x14002721c
   140029de4:	mov    rdx,QWORD PTR [rbx+0x10]
   140029de8:	mov    r8d,edi
   140029deb:	mov    ecx,eax
   140029ded:	call   0x1400272a4
   140029df2:	cmp    eax,edi
   140029df4:	jne    0x140029e05
   140029df6:	mov    eax,DWORD PTR [rbx+0x18]
   140029df9:	test   al,al
   140029dfb:	jns    0x140029e0c
   140029dfd:	and    eax,0xfffffffd
   140029e00:	mov    DWORD PTR [rbx+0x18],eax
   140029e03:	jmp    0x140029e0c
   140029e05:	or     DWORD PTR [rbx+0x18],0x20
   140029e09:	or     esi,0xffffffff
   140029e0c:	mov    rcx,QWORD PTR [rbx+0x10]
   140029e10:	and    DWORD PTR [rbx+0x8],0x0
   140029e14:	mov    eax,esi
   140029e16:	mov    rsi,QWORD PTR [rsp+0x38]
   140029e1b:	mov    QWORD PTR [rbx],rcx
   140029e1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140029e23:	add    rsp,0x20
   140029e27:	pop    rdi
   140029e28:	ret    
   140029e29:	int3   
   140029e2a:	int3   
   140029e2b:	int3   
   140029e2c:	mov    ecx,0x1
   140029e31:	jmp    0x140029e38
   140029e36:	int3   
   140029e37:	int3   
   140029e38:	mov    QWORD PTR [rsp+0x8],rbx
   140029e3d:	mov    QWORD PTR [rsp+0x10],rsi
   140029e42:	mov    QWORD PTR [rsp+0x18],rdi
   140029e47:	push   r13
   140029e49:	push   r14
   140029e4b:	push   r15
   140029e4d:	sub    rsp,0x30
   140029e51:	mov    r14d,ecx
   140029e54:	xor    esi,esi
   140029e56:	xor    edi,edi
   140029e58:	lea    ecx,[rsi+0x1]
   140029e5b:	call   0x14001b118
   140029e60:	nop
   140029e61:	xor    ebx,ebx
   140029e63:	or     r13d,0xffffffff
   140029e67:	mov    DWORD PTR [rsp+0x20],ebx
   140029e6b:	cmp    ebx,DWORD PTR [rip+0x1ad37]        # 0x140044ba8
   140029e71:	jge    0x140029ef1
   140029e73:	movsxd r15,ebx
   140029e76:	mov    rax,QWORD PTR [rip+0x1ad23]        # 0x140044ba0
   140029e7d:	mov    rdx,QWORD PTR [rax+r15*8]
   140029e81:	test   rdx,rdx
   140029e84:	je     0x140029eea
   140029e86:	test   BYTE PTR [rdx+0x18],0x83
   140029e8a:	je     0x140029eea
   140029e8c:	mov    ecx,ebx
   140029e8e:	call   0x140027178
   140029e93:	nop
   140029e94:	mov    rax,QWORD PTR [rip+0x1ad05]        # 0x140044ba0
   140029e9b:	mov    rcx,QWORD PTR [rax+r15*8]
   140029e9f:	test   BYTE PTR [rcx+0x18],0x83
   140029ea3:	je     0x140029ed8
   140029ea5:	cmp    r14d,0x1
   140029ea9:	jne    0x140029ebd
   140029eab:	call   0x140029d64
   140029eb0:	cmp    eax,r13d
   140029eb3:	je     0x140029ed8
   140029eb5:	inc    esi
   140029eb7:	mov    DWORD PTR [rsp+0x24],esi
   140029ebb:	jmp    0x140029ed8
   140029ebd:	test   r14d,r14d
   140029ec0:	jne    0x140029ed8
   140029ec2:	test   BYTE PTR [rcx+0x18],0x2
   140029ec6:	je     0x140029ed8
   140029ec8:	call   0x140029d64
   140029ecd:	cmp    eax,r13d
   140029ed0:	cmove  edi,r13d
   140029ed4:	mov    DWORD PTR [rsp+0x28],edi
   140029ed8:	mov    rdx,QWORD PTR [rip+0x1acc1]        # 0x140044ba0
   140029edf:	mov    rdx,QWORD PTR [rdx+r15*8]
   140029ee3:	mov    ecx,ebx
   140029ee5:	call   0x1400271fc
   140029eea:	inc    ebx
   140029eec:	jmp    0x140029e67
   140029ef1:	mov    ecx,0x1
   140029ef6:	call   0x14001b308
   140029efb:	cmp    r14d,0x1
   140029eff:	cmove  edi,esi
   140029f02:	mov    eax,edi
   140029f04:	mov    rbx,QWORD PTR [rsp+0x50]
   140029f09:	mov    rsi,QWORD PTR [rsp+0x58]
   140029f0e:	mov    rdi,QWORD PTR [rsp+0x60]
   140029f13:	add    rsp,0x30
   140029f17:	pop    r15
   140029f19:	pop    r14
   140029f1b:	pop    r13
   140029f1d:	ret    
   140029f1e:	int3   
   140029f1f:	int3   
   140029f20:	mov    QWORD PTR [rsp+0x8],rbx
   140029f25:	mov    QWORD PTR [rsp+0x10],rsi
   140029f2a:	push   rdi
   140029f2b:	sub    rsp,0x30
   140029f2f:	xor    edi,edi
   140029f31:	lea    ecx,[rdi+0x1]
   140029f34:	call   0x14001b118
   140029f39:	nop
   140029f3a:	lea    ebx,[rdi+0x3]
   140029f3d:	mov    DWORD PTR [rsp+0x20],ebx
   140029f41:	cmp    ebx,DWORD PTR [rip+0x1ac61]        # 0x140044ba8
   140029f47:	jge    0x140029fac
   140029f49:	movsxd rsi,ebx
   140029f4c:	mov    rax,QWORD PTR [rip+0x1ac4d]        # 0x140044ba0
   140029f53:	mov    rcx,QWORD PTR [rax+rsi*8]
   140029f57:	test   rcx,rcx
   140029f5a:	je     0x140029fa8
   140029f5c:	test   BYTE PTR [rcx+0x18],0x83
   140029f60:	je     0x140029f72
   140029f62:	call   0x14002c6e4
   140029f67:	cmp    eax,0xffffffff
   140029f6a:	je     0x140029f72
   140029f6c:	inc    edi
   140029f6e:	mov    DWORD PTR [rsp+0x24],edi
   140029f72:	cmp    ebx,0x14
   140029f75:	jl     0x140029fa8
   140029f77:	mov    rax,QWORD PTR [rip+0x1ac22]        # 0x140044ba0
   140029f7e:	mov    rcx,QWORD PTR [rax+rsi*8]
   140029f82:	add    rcx,0x30
   140029f86:	call   QWORD PTR [rip+0x52b4]        # 0x14002f240
   140029f8c:	mov    rcx,QWORD PTR [rip+0x1ac0d]        # 0x140044ba0
   140029f93:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140029f97:	call   0x14001a1ac
   140029f9c:	mov    rax,QWORD PTR [rip+0x1abfd]        # 0x140044ba0
   140029fa3:	and    QWORD PTR [rax+rsi*8],0x0
   140029fa8:	inc    ebx
   140029faa:	jmp    0x140029f3d
   140029fac:	mov    ecx,0x1
   140029fb1:	call   0x14001b308
   140029fb6:	mov    eax,edi
   140029fb8:	mov    rbx,QWORD PTR [rsp+0x40]
   140029fbd:	mov    rsi,QWORD PTR [rsp+0x48]
   140029fc2:	add    rsp,0x30
   140029fc6:	pop    rdi
   140029fc7:	ret    
   140029fc8:	mov    QWORD PTR [rsp+0x8],rbx
   140029fcd:	mov    QWORD PTR [rsp+0x10],rsi
   140029fd2:	mov    QWORD PTR [rsp+0x18],rdi
   140029fd7:	push   r15
   140029fd9:	sub    rsp,0x20
   140029fdd:	movsxd rax,ecx
   140029fe0:	mov    rsi,rax
   140029fe3:	sar    rsi,0x5
   140029fe7:	lea    r15,[rip+0x1a032]        # 0x140044020
   140029fee:	and    eax,0x1f
   140029ff1:	imul   rbx,rax,0x58
   140029ff5:	mov    rdi,QWORD PTR [r15+rsi*8]
   140029ff9:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140029ffe:	jne    0x14002a034
   14002a000:	mov    ecx,0xa
   14002a005:	call   0x14001b118
   14002a00a:	nop
   14002a00b:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   14002a010:	jne    0x14002a02a
   14002a012:	lea    rcx,[rbx+0x10]
   14002a016:	add    rcx,rdi
   14002a019:	xor    r8d,r8d
   14002a01c:	mov    edx,0xfa0
   14002a021:	call   0x14001dcd8
   14002a026:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14002a02a:	mov    ecx,0xa
   14002a02f:	call   0x14001b308
   14002a034:	mov    rcx,QWORD PTR [r15+rsi*8]
   14002a038:	add    rcx,0x10
   14002a03c:	add    rcx,rbx
   14002a03f:	call   QWORD PTR [rip+0x51eb]        # 0x14002f230
   14002a045:	mov    eax,0x1
   14002a04a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a04f:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a054:	mov    rdi,QWORD PTR [rsp+0x40]
   14002a059:	add    rsp,0x20
   14002a05d:	pop    r15
   14002a05f:	ret    
   14002a060:	mov    QWORD PTR [rsp+0x8],rbx
   14002a065:	mov    QWORD PTR [rsp+0x10],rdi
   14002a06a:	push   r14
   14002a06c:	sub    rsp,0x20
   14002a070:	test   ecx,ecx
   14002a072:	js     0x14002a0e3
   14002a074:	cmp    ecx,DWORD PTR [rip+0x1bb46]        # 0x140045bc0
   14002a07a:	jae    0x14002a0e3
   14002a07c:	movsxd rax,ecx
   14002a07f:	lea    r14,[rip+0x19f9a]        # 0x140044020
   14002a086:	mov    rdi,rax
   14002a089:	and    eax,0x1f
   14002a08c:	sar    rdi,0x5
   14002a090:	imul   rbx,rax,0x58
   14002a094:	mov    rax,QWORD PTR [r14+rdi*8]
   14002a098:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14002a09d:	je     0x14002a0e3
   14002a09f:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14002a0a4:	je     0x14002a0e3
   14002a0a6:	cmp    DWORD PTR [rip+0x1a283],0x1        # 0x140044330
   14002a0ad:	jne    0x14002a0d6
   14002a0af:	test   ecx,ecx
   14002a0b1:	je     0x14002a0c9
   14002a0b3:	dec    ecx
   14002a0b5:	je     0x14002a0c2
   14002a0b7:	dec    ecx
   14002a0b9:	jne    0x14002a0d6
   14002a0bb:	mov    ecx,0xfffffff4
   14002a0c0:	jmp    0x14002a0ce
   14002a0c2:	mov    ecx,0xfffffff5
   14002a0c7:	jmp    0x14002a0ce
   14002a0c9:	mov    ecx,0xfffffff6
   14002a0ce:	xor    edx,edx
   14002a0d0:	call   QWORD PTR [rip+0x510a]        # 0x14002f1e0
   14002a0d6:	mov    rax,QWORD PTR [r14+rdi*8]
   14002a0da:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14002a0df:	xor    eax,eax
   14002a0e1:	jmp    0x14002a0f9
   14002a0e3:	call   0x14001b864
   14002a0e8:	mov    DWORD PTR [rax],0x9
   14002a0ee:	call   0x14001b7f4
   14002a0f3:	and    DWORD PTR [rax],0x0
   14002a0f6:	or     eax,0xffffffff
   14002a0f9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a0fe:	mov    rdi,QWORD PTR [rsp+0x38]
   14002a103:	add    rsp,0x20
   14002a107:	pop    r14
   14002a109:	ret    
   14002a10a:	int3   
   14002a10b:	int3   
   14002a10c:	sub    rsp,0x28
   14002a110:	cmp    ecx,0xfffffffe
   14002a113:	jne    0x14002a12a
   14002a115:	call   0x14001b7f4
   14002a11a:	and    DWORD PTR [rax],0x0
   14002a11d:	call   0x14001b864
   14002a122:	mov    DWORD PTR [rax],0x9
   14002a128:	jmp    0x14002a177
   14002a12a:	test   ecx,ecx
   14002a12c:	js     0x14002a15f
   14002a12e:	cmp    ecx,DWORD PTR [rip+0x1ba8c]        # 0x140045bc0
   14002a134:	jae    0x14002a15f
   14002a136:	movsxd rcx,ecx
   14002a139:	lea    r8,[rip+0x19ee0]        # 0x140044020
   14002a140:	mov    rax,rcx
   14002a143:	and    ecx,0x1f
   14002a146:	sar    rax,0x5
   14002a14a:	imul   rdx,rcx,0x58
   14002a14e:	mov    rax,QWORD PTR [r8+rax*8]
   14002a152:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14002a157:	je     0x14002a15f
   14002a159:	mov    rax,QWORD PTR [rax+rdx*1]
   14002a15d:	jmp    0x14002a17b
   14002a15f:	call   0x14001b7f4
   14002a164:	and    DWORD PTR [rax],0x0
   14002a167:	call   0x14001b864
   14002a16c:	mov    DWORD PTR [rax],0x9
   14002a172:	call   0x14001ffb8
   14002a177:	or     rax,0xffffffffffffffff
   14002a17b:	add    rsp,0x28
   14002a17f:	ret    
   14002a180:	movsxd rdx,ecx
   14002a183:	lea    r8,[rip+0x19e96]        # 0x140044020
   14002a18a:	mov    rax,rdx
   14002a18d:	and    edx,0x1f
   14002a190:	sar    rax,0x5
   14002a194:	imul   rcx,rdx,0x58
   14002a198:	mov    rax,QWORD PTR [r8+rax*8]
   14002a19c:	add    rcx,0x10
   14002a1a0:	add    rcx,rax
   14002a1a3:	rex.W jmp QWORD PTR [rip+0x508e]        # 0x14002f238
   14002a1aa:	int3   
   14002a1ab:	int3   
   14002a1ac:	mov    rax,rsp
   14002a1af:	mov    QWORD PTR [rax+0x8],rbx
   14002a1b3:	mov    QWORD PTR [rax+0x10],rbp
   14002a1b7:	mov    QWORD PTR [rax+0x18],rsi
   14002a1bb:	mov    QWORD PTR [rax+0x20],rdi
   14002a1bf:	push   r14
   14002a1c1:	sub    rsp,0x50
   14002a1c5:	xor    r14d,r14d
   14002a1c8:	mov    rbp,r8
   14002a1cb:	mov    rsi,rdx
   14002a1ce:	mov    rdi,rcx
   14002a1d1:	test   rdx,rdx
   14002a1d4:	je     0x14002a1e9
   14002a1d6:	test   r8,r8
   14002a1d9:	je     0x14002a1e9
   14002a1db:	cmp    BYTE PTR [rdx],r14b
   14002a1de:	jne    0x14002a206
   14002a1e0:	test   rcx,rcx
   14002a1e3:	je     0x14002a1e9
   14002a1e5:	mov    WORD PTR [rcx],r14w
   14002a1e9:	xor    eax,eax
   14002a1eb:	mov    rbx,QWORD PTR [rsp+0x60]
   14002a1f0:	mov    rbp,QWORD PTR [rsp+0x68]
   14002a1f5:	mov    rsi,QWORD PTR [rsp+0x70]
   14002a1fa:	mov    rdi,QWORD PTR [rsp+0x78]
   14002a1ff:	add    rsp,0x50
   14002a203:	pop    r14
   14002a205:	ret    
   14002a206:	lea    rcx,[rsp+0x30]
   14002a20b:	mov    rdx,r9
   14002a20e:	call   0x140019058
   14002a213:	mov    rax,QWORD PTR [rsp+0x30]
   14002a218:	cmp    QWORD PTR [rax+0x138],r14
   14002a21f:	jne    0x14002a236
   14002a221:	test   rdi,rdi
   14002a224:	je     0x14002a22c
   14002a226:	movzx  eax,BYTE PTR [rsi]
   14002a229:	mov    WORD PTR [rdi],ax
   14002a22c:	mov    ebx,0x1
   14002a231:	jmp    0x14002a2e3
   14002a236:	movzx  ecx,BYTE PTR [rsi]
   14002a239:	lea    rdx,[rsp+0x30]
   14002a23e:	call   0x1400251a4
   14002a243:	mov    ebx,0x1
   14002a248:	test   eax,eax
   14002a24a:	je     0x14002a2a6
   14002a24c:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a251:	mov    r9d,DWORD PTR [rcx+0xd4]
   14002a258:	cmp    r9d,ebx
   14002a25b:	jle    0x14002a28c
   14002a25d:	cmp    ebp,r9d
   14002a260:	jl     0x14002a28c
   14002a262:	mov    ecx,DWORD PTR [rcx+0x4]
   14002a265:	mov    eax,r14d
   14002a268:	test   rdi,rdi
   14002a26b:	setne  al
   14002a26e:	lea    edx,[rbx+0x8]
   14002a271:	mov    r8,rsi
   14002a274:	mov    DWORD PTR [rsp+0x28],eax
   14002a278:	mov    QWORD PTR [rsp+0x20],rdi
   14002a27d:	call   QWORD PTR [rip+0x4f95]        # 0x14002f218
   14002a283:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a288:	test   eax,eax
   14002a28a:	jne    0x14002a29e
   14002a28c:	movsxd rax,DWORD PTR [rcx+0xd4]
   14002a293:	cmp    rbp,rax
   14002a296:	jb     0x14002a2d5
   14002a298:	cmp    BYTE PTR [rsi+0x1],r14b
   14002a29c:	je     0x14002a2d5
   14002a29e:	mov    ebx,DWORD PTR [rcx+0xd4]
   14002a2a4:	jmp    0x14002a2e3
   14002a2a6:	mov    eax,r14d
   14002a2a9:	test   rdi,rdi
   14002a2ac:	mov    r9d,ebx
   14002a2af:	setne  al
   14002a2b2:	mov    r8,rsi
   14002a2b5:	mov    edx,0x9
   14002a2ba:	mov    DWORD PTR [rsp+0x28],eax
   14002a2be:	mov    rax,QWORD PTR [rsp+0x30]
   14002a2c3:	mov    QWORD PTR [rsp+0x20],rdi
   14002a2c8:	mov    ecx,DWORD PTR [rax+0x4]
   14002a2cb:	call   QWORD PTR [rip+0x4f47]        # 0x14002f218
   14002a2d1:	test   eax,eax
   14002a2d3:	jne    0x14002a2e3
   14002a2d5:	call   0x14001b864
   14002a2da:	or     ebx,0xffffffff
   14002a2dd:	mov    DWORD PTR [rax],0x2a
   14002a2e3:	cmp    BYTE PTR [rsp+0x48],r14b
   14002a2e8:	je     0x14002a2f6
   14002a2ea:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a2ef:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a2f6:	mov    eax,ebx
   14002a2f8:	jmp    0x14002a1eb
   14002a2fd:	int3   
   14002a2fe:	int3   
   14002a2ff:	int3   
   14002a300:	xor    r9d,r9d
   14002a303:	jmp    0x14002a1ac
   14002a308:	mov    WORD PTR [rsp+0x8],cx
   14002a30d:	sub    rsp,0x38
   14002a311:	mov    rcx,QWORD PTR [rip+0x184f8]        # 0x140042810
   14002a318:	cmp    rcx,0xfffffffffffffffe
   14002a31c:	jne    0x14002a32a
   14002a31e:	call   0x14002c76c
   14002a323:	mov    rcx,QWORD PTR [rip+0x184e6]        # 0x140042810
   14002a32a:	cmp    rcx,0xffffffffffffffff
   14002a32e:	jne    0x14002a337
   14002a330:	mov    eax,0xffff
   14002a335:	jmp    0x14002a35c
   14002a337:	and    QWORD PTR [rsp+0x20],0x0
   14002a33d:	lea    r9,[rsp+0x48]
   14002a342:	lea    rdx,[rsp+0x40]
   14002a347:	mov    r8d,0x1
   14002a34d:	call   QWORD PTR [rip+0x4e95]        # 0x14002f1e8
   14002a353:	test   eax,eax
   14002a355:	je     0x14002a330
   14002a357:	movzx  eax,WORD PTR [rsp+0x40]
   14002a35c:	add    rsp,0x38
   14002a360:	ret    
   14002a361:	int3   
   14002a362:	int3   
   14002a363:	int3   
   14002a364:	mov    QWORD PTR [rsp+0x8],rbx
   14002a369:	mov    QWORD PTR [rsp+0x18],rsi
   14002a36e:	mov    QWORD PTR [rsp+0x20],rdi
   14002a373:	push   rbp
   14002a374:	push   r12
   14002a376:	push   r13
   14002a378:	push   r14
   14002a37a:	push   r15
   14002a37c:	mov    rbp,rsp
   14002a37f:	sub    rsp,0x60
   14002a383:	mov    rax,QWORD PTR [rip+0x172c6]        # 0x140041650
   14002a38a:	xor    rax,rsp
   14002a38d:	mov    QWORD PTR [rbp-0x8],rax
   14002a391:	movzx  eax,WORD PTR [rcx+0xa]
   14002a395:	movzx  r9d,WORD PTR [rcx]
   14002a399:	xor    ebx,ebx
   14002a39b:	mov    edi,eax
   14002a39d:	and    eax,0x8000
   14002a3a2:	shl    r9d,0x10
   14002a3a6:	mov    DWORD PTR [rbp-0x3c],eax
   14002a3a9:	mov    eax,DWORD PTR [rcx+0x6]
   14002a3ac:	and    edi,0x7fff
   14002a3b2:	mov    DWORD PTR [rbp-0x18],eax
   14002a3b5:	mov    eax,DWORD PTR [rcx+0x2]
   14002a3b8:	sub    edi,0x3fff
   14002a3be:	mov    r12d,0x1f
   14002a3c4:	mov    QWORD PTR [rbp-0x30],rdx
   14002a3c8:	mov    DWORD PTR [rbp-0x28],r9d
   14002a3cc:	mov    DWORD PTR [rbp-0x14],eax
   14002a3cf:	mov    DWORD PTR [rbp-0x10],r9d
   14002a3d3:	lea    esi,[rbx+0x1]
   14002a3d6:	lea    r14d,[r12-0x1c]
   14002a3db:	cmp    edi,0xffffc001
   14002a3e1:	jne    0x14002a40c
   14002a3e3:	mov    r8d,ebx
   14002a3e6:	mov    eax,ebx
   14002a3e8:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14002a3ec:	jne    0x14002a3fb
   14002a3ee:	add    rax,rsi
   14002a3f1:	cmp    rax,r14
   14002a3f4:	jl     0x14002a3e8
   14002a3f6:	jmp    0x14002a8b2
   14002a3fb:	mov    QWORD PTR [rbp-0x18],rbx
   14002a3ff:	mov    DWORD PTR [rbp-0x10],ebx
   14002a402:	mov    ebx,0x2
   14002a407:	jmp    0x14002a8b2
   14002a40c:	mov    rax,QWORD PTR [rbp-0x18]
   14002a410:	mov    r8d,r12d
   14002a413:	or     r15d,0xffffffff
   14002a417:	mov    QWORD PTR [rbp-0x20],rax
   14002a41b:	mov    eax,DWORD PTR [rip+0x183c7]        # 0x1400427e8
   14002a421:	mov    DWORD PTR [rbp-0x40],edi
   14002a424:	dec    eax
   14002a426:	mov    r13d,ebx
   14002a429:	mov    DWORD PTR [rbp-0x38],eax
   14002a42c:	inc    eax
   14002a42e:	cdq    
   14002a42f:	and    edx,r12d
   14002a432:	add    eax,edx
   14002a434:	mov    r10d,eax
   14002a437:	and    eax,r12d
   14002a43a:	sar    r10d,0x5
   14002a43e:	sub    eax,edx
   14002a440:	sub    r8d,eax
   14002a443:	movsxd r11,r10d
   14002a446:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14002a44b:	mov    DWORD PTR [rbp-0x24],r8d
   14002a44f:	bt     ecx,r8d
   14002a453:	jae    0x14002a4f7
   14002a459:	mov    ecx,r8d
   14002a45c:	mov    eax,r15d
   14002a45f:	movsxd rdx,r10d
   14002a462:	shl    eax,cl
   14002a464:	not    eax
   14002a466:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002a46a:	jne    0x14002a485
   14002a46c:	lea    eax,[r10+0x1]
   14002a470:	movsxd rcx,eax
   14002a473:	jmp    0x14002a47e
   14002a475:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002a479:	jne    0x14002a485
   14002a47b:	add    rcx,rsi
   14002a47e:	cmp    rcx,r14
   14002a481:	jl     0x14002a475
   14002a483:	jmp    0x14002a4f7
   14002a485:	mov    eax,DWORD PTR [rbp-0x38]
   14002a488:	mov    ecx,r12d
   14002a48b:	cdq    
   14002a48c:	and    edx,r12d
   14002a48f:	add    eax,edx
   14002a491:	mov    r8d,eax
   14002a494:	and    eax,r12d
   14002a497:	sub    eax,edx
   14002a499:	sar    r8d,0x5
   14002a49d:	mov    edx,esi
   14002a49f:	sub    ecx,eax
   14002a4a1:	movsxd r11,r8d
   14002a4a4:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14002a4a9:	shl    edx,cl
   14002a4ab:	lea    ecx,[rax+rdx*1]
   14002a4ae:	cmp    ecx,eax
   14002a4b0:	jb     0x14002a4b6
   14002a4b2:	cmp    ecx,edx
   14002a4b4:	jae    0x14002a4b9
   14002a4b6:	mov    r13d,esi
   14002a4b9:	lea    eax,[r8-0x1]
   14002a4bd:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14002a4c2:	movsxd rdx,eax
   14002a4c5:	test   eax,eax
   14002a4c7:	js     0x14002a4f0
   14002a4c9:	test   r13d,r13d
   14002a4cc:	je     0x14002a4f0
   14002a4ce:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002a4d2:	mov    r13d,ebx
   14002a4d5:	lea    r8d,[rax+0x1]
   14002a4d9:	cmp    r8d,eax
   14002a4dc:	jb     0x14002a4e3
   14002a4de:	cmp    r8d,esi
   14002a4e1:	jae    0x14002a4e6
   14002a4e3:	mov    r13d,esi
   14002a4e6:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002a4eb:	sub    rdx,rsi
   14002a4ee:	jns    0x14002a4c9
   14002a4f0:	mov    r8d,DWORD PTR [rbp-0x24]
   14002a4f4:	movsxd r11,r10d
   14002a4f7:	mov    ecx,r8d
   14002a4fa:	mov    eax,r15d
   14002a4fd:	shl    eax,cl
   14002a4ff:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14002a504:	lea    eax,[r10+0x1]
   14002a508:	movsxd rdx,eax
   14002a50b:	cmp    rdx,r14
   14002a50e:	jge    0x14002a52d
   14002a510:	lea    rcx,[rbp-0x18]
   14002a514:	mov    r8,r14
   14002a517:	sub    r8,rdx
   14002a51a:	lea    rcx,[rcx+rdx*4]
   14002a51e:	xor    edx,edx
   14002a520:	shl    r8,0x2
   14002a524:	call   0x14001b980
   14002a529:	mov    r9d,DWORD PTR [rbp-0x28]
   14002a52d:	test   r13d,r13d
   14002a530:	je     0x14002a534
   14002a532:	add    edi,esi
   14002a534:	mov    ecx,DWORD PTR [rip+0x182aa]        # 0x1400427e4
   14002a53a:	mov    eax,ecx
   14002a53c:	sub    eax,DWORD PTR [rip+0x182a6]        # 0x1400427e8
   14002a542:	cmp    edi,eax
   14002a544:	jge    0x14002a55a
   14002a546:	mov    QWORD PTR [rbp-0x18],rbx
   14002a54a:	mov    DWORD PTR [rbp-0x10],ebx
   14002a54d:	mov    r8d,ebx
   14002a550:	mov    ebx,0x2
   14002a555:	jmp    0x14002a8ae
   14002a55a:	cmp    edi,ecx
   14002a55c:	jg     0x14002a793
   14002a562:	sub    ecx,DWORD PTR [rbp-0x40]
   14002a565:	mov    rax,QWORD PTR [rbp-0x20]
   14002a569:	mov    r10d,r15d
   14002a56c:	mov    QWORD PTR [rbp-0x18],rax
   14002a570:	mov    eax,ecx
   14002a572:	mov    DWORD PTR [rbp-0x10],r9d
   14002a576:	cdq    
   14002a577:	mov    r11,r14
   14002a57a:	mov    r9d,ebx
   14002a57d:	and    edx,r12d
   14002a580:	lea    r8,[rbp-0x18]
   14002a584:	add    eax,edx
   14002a586:	mov    r13d,eax
   14002a589:	and    eax,r12d
   14002a58c:	sub    eax,edx
   14002a58e:	sar    r13d,0x5
   14002a592:	mov    ecx,eax
   14002a594:	mov    edi,eax
   14002a596:	mov    eax,0x20
   14002a59b:	shl    r10d,cl
   14002a59e:	sub    eax,ecx
   14002a5a0:	mov    r14d,eax
   14002a5a3:	not    r10d
   14002a5a6:	mov    eax,DWORD PTR [r8]
   14002a5a9:	mov    ecx,edi
   14002a5ab:	mov    edx,eax
   14002a5ad:	shr    eax,cl
   14002a5af:	mov    ecx,r14d
   14002a5b2:	or     eax,r9d
   14002a5b5:	and    edx,r10d
   14002a5b8:	mov    r9d,edx
   14002a5bb:	mov    DWORD PTR [r8],eax
   14002a5be:	lea    r8,[r8+0x4]
   14002a5c2:	shl    r9d,cl
   14002a5c5:	sub    r11,rsi
   14002a5c8:	jne    0x14002a5a6
   14002a5ca:	movsxd r10,r13d
   14002a5cd:	lea    edi,[r11+0x2]
   14002a5d1:	lea    r14d,[r11+0x3]
   14002a5d5:	mov    r9,r10
   14002a5d8:	mov    r8d,edi
   14002a5db:	neg    r9
   14002a5de:	cmp    r8,r10
   14002a5e1:	jl     0x14002a5f8
   14002a5e3:	mov    rdx,r8
   14002a5e6:	shl    rdx,0x2
   14002a5ea:	lea    rax,[rdx+r9*4]
   14002a5ee:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002a5f2:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002a5f6:	jmp    0x14002a5fd
   14002a5f8:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002a5fd:	sub    r8,rsi
   14002a600:	jns    0x14002a5de
   14002a602:	mov    r8d,DWORD PTR [rbp-0x38]
   14002a606:	mov    r11d,r12d
   14002a609:	lea    eax,[r8+0x1]
   14002a60d:	cdq    
   14002a60e:	and    edx,r12d
   14002a611:	add    eax,edx
   14002a613:	mov    r9d,eax
   14002a616:	and    eax,r12d
   14002a619:	sub    eax,edx
   14002a61b:	sar    r9d,0x5
   14002a61f:	sub    r11d,eax
   14002a622:	movsxd rax,r9d
   14002a625:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14002a629:	bt     ecx,r11d
   14002a62d:	jae    0x14002a6cb
   14002a633:	mov    ecx,r11d
   14002a636:	mov    eax,r15d
   14002a639:	movsxd rdx,r9d
   14002a63c:	shl    eax,cl
   14002a63e:	not    eax
   14002a640:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002a644:	jne    0x14002a65f
   14002a646:	lea    eax,[r9+0x1]
   14002a64a:	movsxd rcx,eax
   14002a64d:	jmp    0x14002a658
   14002a64f:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002a653:	jne    0x14002a65f
   14002a655:	add    rcx,rsi
   14002a658:	cmp    rcx,r14
   14002a65b:	jl     0x14002a64f
   14002a65d:	jmp    0x14002a6cb
   14002a65f:	mov    eax,r8d
   14002a662:	mov    ecx,r12d
   14002a665:	cdq    
   14002a666:	and    edx,r12d
   14002a669:	add    eax,edx
   14002a66b:	mov    r10d,eax
   14002a66e:	and    eax,r12d
   14002a671:	sub    eax,edx
   14002a673:	sar    r10d,0x5
   14002a677:	mov    edx,esi
   14002a679:	sub    ecx,eax
   14002a67b:	movsxd r13,r10d
   14002a67e:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14002a683:	shl    edx,cl
   14002a685:	mov    ecx,ebx
   14002a687:	lea    r8d,[rax+rdx*1]
   14002a68b:	cmp    r8d,eax
   14002a68e:	jb     0x14002a695
   14002a690:	cmp    r8d,edx
   14002a693:	jae    0x14002a697
   14002a695:	mov    ecx,esi
   14002a697:	lea    eax,[r10-0x1]
   14002a69b:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14002a6a0:	movsxd rdx,eax
   14002a6a3:	test   eax,eax
   14002a6a5:	js     0x14002a6cb
   14002a6a7:	test   ecx,ecx
   14002a6a9:	je     0x14002a6cb
   14002a6ab:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002a6af:	mov    ecx,ebx
   14002a6b1:	lea    r8d,[rax+0x1]
   14002a6b5:	cmp    r8d,eax
   14002a6b8:	jb     0x14002a6bf
   14002a6ba:	cmp    r8d,esi
   14002a6bd:	jae    0x14002a6c1
   14002a6bf:	mov    ecx,esi
   14002a6c1:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002a6c6:	sub    rdx,rsi
   14002a6c9:	jns    0x14002a6a7
   14002a6cb:	mov    ecx,r11d
   14002a6ce:	mov    eax,r15d
   14002a6d1:	shl    eax,cl
   14002a6d3:	movsxd rcx,r9d
   14002a6d6:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14002a6da:	lea    eax,[r9+0x1]
   14002a6de:	movsxd rdx,eax
   14002a6e1:	cmp    rdx,r14
   14002a6e4:	jge    0x14002a6ff
   14002a6e6:	lea    rcx,[rbp-0x18]
   14002a6ea:	mov    r8,r14
   14002a6ed:	sub    r8,rdx
   14002a6f0:	lea    rcx,[rcx+rdx*4]
   14002a6f4:	xor    edx,edx
   14002a6f6:	shl    r8,0x2
   14002a6fa:	call   0x14001b980
   14002a6ff:	mov    eax,DWORD PTR [rip+0x180e7]        # 0x1400427ec
   14002a705:	mov    r13d,0x20
   14002a70b:	mov    r9d,ebx
   14002a70e:	inc    eax
   14002a710:	lea    r8,[rbp-0x18]
   14002a714:	cdq    
   14002a715:	and    edx,r12d
   14002a718:	add    eax,edx
   14002a71a:	mov    r10d,eax
   14002a71d:	and    eax,r12d
   14002a720:	sub    eax,edx
   14002a722:	sar    r10d,0x5
   14002a726:	mov    ecx,eax
   14002a728:	mov    r11d,eax
   14002a72b:	shl    r15d,cl
   14002a72e:	sub    r13d,eax
   14002a731:	not    r15d
   14002a734:	mov    eax,DWORD PTR [r8]
   14002a737:	mov    ecx,r11d
   14002a73a:	mov    edx,eax
   14002a73c:	shr    eax,cl
   14002a73e:	mov    ecx,r13d
   14002a741:	or     eax,r9d
   14002a744:	and    edx,r15d
   14002a747:	mov    r9d,edx
   14002a74a:	mov    DWORD PTR [r8],eax
   14002a74d:	lea    r8,[r8+0x4]
   14002a751:	shl    r9d,cl
   14002a754:	sub    r14,rsi
   14002a757:	jne    0x14002a734
   14002a759:	movsxd r10,r10d
   14002a75c:	mov    r8,rdi
   14002a75f:	mov    r9,r10
   14002a762:	neg    r9
   14002a765:	cmp    r8,r10
   14002a768:	jl     0x14002a77f
   14002a76a:	mov    rdx,r8
   14002a76d:	shl    rdx,0x2
   14002a771:	lea    rax,[rdx+r9*4]
   14002a775:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002a779:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002a77d:	jmp    0x14002a784
   14002a77f:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002a784:	sub    r8,rsi
   14002a787:	jns    0x14002a765
   14002a789:	mov    r8d,ebx
   14002a78c:	mov    ebx,edi
   14002a78e:	jmp    0x14002a8ae
   14002a793:	mov    eax,DWORD PTR [rip+0x18053]        # 0x1400427ec
   14002a799:	mov    r10d,DWORD PTR [rip+0x18040]        # 0x1400427e0
   14002a7a0:	mov    r13d,0x20
   14002a7a6:	cdq    
   14002a7a7:	and    edx,r12d
   14002a7aa:	add    eax,edx
   14002a7ac:	mov    r11d,eax
   14002a7af:	and    eax,r12d
   14002a7b2:	sub    eax,edx
   14002a7b4:	sar    r11d,0x5
   14002a7b8:	mov    ecx,eax
   14002a7ba:	shl    r15d,cl
   14002a7bd:	not    r15d
   14002a7c0:	cmp    edi,r10d
   14002a7c3:	jl     0x14002a83f
   14002a7c5:	mov    QWORD PTR [rbp-0x18],rbx
   14002a7c9:	bts    DWORD PTR [rbp-0x18],0x1f
   14002a7ce:	mov    DWORD PTR [rbp-0x10],ebx
   14002a7d1:	sub    r13d,eax
   14002a7d4:	mov    edi,eax
   14002a7d6:	mov    r9d,ebx
   14002a7d9:	lea    r8,[rbp-0x18]
   14002a7dd:	mov    eax,DWORD PTR [r8]
   14002a7e0:	mov    ecx,edi
   14002a7e2:	mov    edx,r15d
   14002a7e5:	and    edx,eax
   14002a7e7:	shr    eax,cl
   14002a7e9:	mov    ecx,r13d
   14002a7ec:	or     eax,r9d
   14002a7ef:	mov    r9d,edx
   14002a7f2:	shl    r9d,cl
   14002a7f5:	mov    DWORD PTR [r8],eax
   14002a7f8:	lea    r8,[r8+0x4]
   14002a7fc:	sub    r14,rsi
   14002a7ff:	jne    0x14002a7dd
   14002a801:	movsxd r9,r11d
   14002a804:	lea    edi,[r14+0x2]
   14002a808:	mov    r8,r9
   14002a80b:	neg    r8
   14002a80e:	cmp    rdi,r9
   14002a811:	jl     0x14002a828
   14002a813:	mov    rdx,rdi
   14002a816:	shl    rdx,0x2
   14002a81a:	lea    rax,[rdx+r8*4]
   14002a81e:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002a822:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002a826:	jmp    0x14002a82c
   14002a828:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002a82c:	sub    rdi,rsi
   14002a82f:	jns    0x14002a80e
   14002a831:	mov    r8d,DWORD PTR [rip+0x17fbc]        # 0x1400427f4
   14002a838:	mov    ebx,esi
   14002a83a:	add    r8d,r10d
   14002a83d:	jmp    0x14002a8ae
   14002a83f:	mov    r8d,DWORD PTR [rip+0x17fae]        # 0x1400427f4
   14002a846:	btr    DWORD PTR [rbp-0x18],0x1f
   14002a84b:	mov    r10d,ebx
   14002a84e:	add    r8d,edi
   14002a851:	mov    edi,eax
   14002a853:	sub    r13d,eax
   14002a856:	lea    r9,[rbp-0x18]
   14002a85a:	mov    eax,DWORD PTR [r9]
   14002a85d:	mov    ecx,edi
   14002a85f:	mov    edx,eax
   14002a861:	shr    eax,cl
   14002a863:	mov    ecx,r13d
   14002a866:	or     eax,r10d
   14002a869:	and    edx,r15d
   14002a86c:	mov    r10d,edx
   14002a86f:	mov    DWORD PTR [r9],eax
   14002a872:	lea    r9,[r9+0x4]
   14002a876:	shl    r10d,cl
   14002a879:	sub    r14,rsi
   14002a87c:	jne    0x14002a85a
   14002a87e:	movsxd r10,r11d
   14002a881:	lea    edi,[r14+0x2]
   14002a885:	mov    r9,r10
   14002a888:	neg    r9
   14002a88b:	cmp    rdi,r10
   14002a88e:	jl     0x14002a8a5
   14002a890:	mov    rdx,rdi
   14002a893:	shl    rdx,0x2
   14002a897:	lea    rax,[rdx+r9*4]
   14002a89b:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002a89f:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002a8a3:	jmp    0x14002a8a9
   14002a8a5:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002a8a9:	sub    rdi,rsi
   14002a8ac:	jns    0x14002a88b
   14002a8ae:	mov    rdx,QWORD PTR [rbp-0x30]
   14002a8b2:	sub    r12d,DWORD PTR [rip+0x17f33]        # 0x1400427ec
   14002a8b9:	mov    cl,r12b
   14002a8bc:	shl    r8d,cl
   14002a8bf:	neg    DWORD PTR [rbp-0x3c]
   14002a8c2:	sbb    eax,eax
   14002a8c4:	and    eax,0x80000000
   14002a8c9:	or     r8d,eax
   14002a8cc:	mov    eax,DWORD PTR [rip+0x17f1e]        # 0x1400427f0
   14002a8d2:	or     r8d,DWORD PTR [rbp-0x18]
   14002a8d6:	cmp    eax,0x40
   14002a8d9:	jne    0x14002a8e6
   14002a8db:	mov    eax,DWORD PTR [rbp-0x14]
   14002a8de:	mov    DWORD PTR [rdx+0x4],r8d
   14002a8e2:	mov    DWORD PTR [rdx],eax
   14002a8e4:	jmp    0x14002a8ee
   14002a8e6:	cmp    eax,0x20
   14002a8e9:	jne    0x14002a8ee
   14002a8eb:	mov    DWORD PTR [rdx],r8d
   14002a8ee:	mov    eax,ebx
   14002a8f0:	mov    rcx,QWORD PTR [rbp-0x8]
   14002a8f4:	xor    rcx,rsp
   14002a8f7:	call   0x1400187d0
   14002a8fc:	lea    r11,[rsp+0x60]
   14002a901:	mov    rbx,QWORD PTR [r11+0x30]
   14002a905:	mov    rsi,QWORD PTR [r11+0x40]
   14002a909:	mov    rdi,QWORD PTR [r11+0x48]
   14002a90d:	mov    rsp,r11
   14002a910:	pop    r15
   14002a912:	pop    r14
   14002a914:	pop    r13
   14002a916:	pop    r12
   14002a918:	pop    rbp
   14002a919:	ret    
   14002a91a:	int3   
   14002a91b:	int3   
   14002a91c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a921:	mov    QWORD PTR [rsp+0x18],rsi
   14002a926:	mov    QWORD PTR [rsp+0x20],rdi
   14002a92b:	push   rbp
   14002a92c:	push   r12
   14002a92e:	push   r13
   14002a930:	push   r14
   14002a932:	push   r15
   14002a934:	mov    rbp,rsp
   14002a937:	sub    rsp,0x60
   14002a93b:	mov    rax,QWORD PTR [rip+0x16d0e]        # 0x140041650
   14002a942:	xor    rax,rsp
   14002a945:	mov    QWORD PTR [rbp-0x8],rax
   14002a949:	movzx  eax,WORD PTR [rcx+0xa]
   14002a94d:	movzx  r9d,WORD PTR [rcx]
   14002a951:	xor    ebx,ebx
   14002a953:	mov    edi,eax
   14002a955:	and    eax,0x8000
   14002a95a:	shl    r9d,0x10
   14002a95e:	mov    DWORD PTR [rbp-0x3c],eax
   14002a961:	mov    eax,DWORD PTR [rcx+0x6]
   14002a964:	and    edi,0x7fff
   14002a96a:	mov    DWORD PTR [rbp-0x18],eax
   14002a96d:	mov    eax,DWORD PTR [rcx+0x2]
   14002a970:	sub    edi,0x3fff
   14002a976:	mov    r12d,0x1f
   14002a97c:	mov    QWORD PTR [rbp-0x30],rdx
   14002a980:	mov    DWORD PTR [rbp-0x28],r9d
   14002a984:	mov    DWORD PTR [rbp-0x14],eax
   14002a987:	mov    DWORD PTR [rbp-0x10],r9d
   14002a98b:	lea    esi,[rbx+0x1]
   14002a98e:	lea    r14d,[r12-0x1c]
   14002a993:	cmp    edi,0xffffc001
   14002a999:	jne    0x14002a9c4
   14002a99b:	mov    r8d,ebx
   14002a99e:	mov    eax,ebx
   14002a9a0:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   14002a9a4:	jne    0x14002a9b3
   14002a9a6:	add    rax,rsi
   14002a9a9:	cmp    rax,r14
   14002a9ac:	jl     0x14002a9a0
   14002a9ae:	jmp    0x14002ae6a
   14002a9b3:	mov    QWORD PTR [rbp-0x18],rbx
   14002a9b7:	mov    DWORD PTR [rbp-0x10],ebx
   14002a9ba:	mov    ebx,0x2
   14002a9bf:	jmp    0x14002ae6a
   14002a9c4:	mov    rax,QWORD PTR [rbp-0x18]
   14002a9c8:	mov    r8d,r12d
   14002a9cb:	or     r15d,0xffffffff
   14002a9cf:	mov    QWORD PTR [rbp-0x20],rax
   14002a9d3:	mov    eax,DWORD PTR [rip+0x17e27]        # 0x140042800
   14002a9d9:	mov    DWORD PTR [rbp-0x40],edi
   14002a9dc:	dec    eax
   14002a9de:	mov    r13d,ebx
   14002a9e1:	mov    DWORD PTR [rbp-0x38],eax
   14002a9e4:	inc    eax
   14002a9e6:	cdq    
   14002a9e7:	and    edx,r12d
   14002a9ea:	add    eax,edx
   14002a9ec:	mov    r10d,eax
   14002a9ef:	and    eax,r12d
   14002a9f2:	sar    r10d,0x5
   14002a9f6:	sub    eax,edx
   14002a9f8:	sub    r8d,eax
   14002a9fb:	movsxd r11,r10d
   14002a9fe:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   14002aa03:	mov    DWORD PTR [rbp-0x24],r8d
   14002aa07:	bt     ecx,r8d
   14002aa0b:	jae    0x14002aaaf
   14002aa11:	mov    ecx,r8d
   14002aa14:	mov    eax,r15d
   14002aa17:	movsxd rdx,r10d
   14002aa1a:	shl    eax,cl
   14002aa1c:	not    eax
   14002aa1e:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002aa22:	jne    0x14002aa3d
   14002aa24:	lea    eax,[r10+0x1]
   14002aa28:	movsxd rcx,eax
   14002aa2b:	jmp    0x14002aa36
   14002aa2d:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002aa31:	jne    0x14002aa3d
   14002aa33:	add    rcx,rsi
   14002aa36:	cmp    rcx,r14
   14002aa39:	jl     0x14002aa2d
   14002aa3b:	jmp    0x14002aaaf
   14002aa3d:	mov    eax,DWORD PTR [rbp-0x38]
   14002aa40:	mov    ecx,r12d
   14002aa43:	cdq    
   14002aa44:	and    edx,r12d
   14002aa47:	add    eax,edx
   14002aa49:	mov    r8d,eax
   14002aa4c:	and    eax,r12d
   14002aa4f:	sub    eax,edx
   14002aa51:	sar    r8d,0x5
   14002aa55:	mov    edx,esi
   14002aa57:	sub    ecx,eax
   14002aa59:	movsxd r11,r8d
   14002aa5c:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   14002aa61:	shl    edx,cl
   14002aa63:	lea    ecx,[rax+rdx*1]
   14002aa66:	cmp    ecx,eax
   14002aa68:	jb     0x14002aa6e
   14002aa6a:	cmp    ecx,edx
   14002aa6c:	jae    0x14002aa71
   14002aa6e:	mov    r13d,esi
   14002aa71:	lea    eax,[r8-0x1]
   14002aa75:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   14002aa7a:	movsxd rdx,eax
   14002aa7d:	test   eax,eax
   14002aa7f:	js     0x14002aaa8
   14002aa81:	test   r13d,r13d
   14002aa84:	je     0x14002aaa8
   14002aa86:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002aa8a:	mov    r13d,ebx
   14002aa8d:	lea    r8d,[rax+0x1]
   14002aa91:	cmp    r8d,eax
   14002aa94:	jb     0x14002aa9b
   14002aa96:	cmp    r8d,esi
   14002aa99:	jae    0x14002aa9e
   14002aa9b:	mov    r13d,esi
   14002aa9e:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002aaa3:	sub    rdx,rsi
   14002aaa6:	jns    0x14002aa81
   14002aaa8:	mov    r8d,DWORD PTR [rbp-0x24]
   14002aaac:	movsxd r11,r10d
   14002aaaf:	mov    ecx,r8d
   14002aab2:	mov    eax,r15d
   14002aab5:	shl    eax,cl
   14002aab7:	and    DWORD PTR [rbp+r11*4-0x18],eax
   14002aabc:	lea    eax,[r10+0x1]
   14002aac0:	movsxd rdx,eax
   14002aac3:	cmp    rdx,r14
   14002aac6:	jge    0x14002aae5
   14002aac8:	lea    rcx,[rbp-0x18]
   14002aacc:	mov    r8,r14
   14002aacf:	sub    r8,rdx
   14002aad2:	lea    rcx,[rcx+rdx*4]
   14002aad6:	xor    edx,edx
   14002aad8:	shl    r8,0x2
   14002aadc:	call   0x14001b980
   14002aae1:	mov    r9d,DWORD PTR [rbp-0x28]
   14002aae5:	test   r13d,r13d
   14002aae8:	je     0x14002aaec
   14002aaea:	add    edi,esi
   14002aaec:	mov    ecx,DWORD PTR [rip+0x17d0a]        # 0x1400427fc
   14002aaf2:	mov    eax,ecx
   14002aaf4:	sub    eax,DWORD PTR [rip+0x17d06]        # 0x140042800
   14002aafa:	cmp    edi,eax
   14002aafc:	jge    0x14002ab12
   14002aafe:	mov    QWORD PTR [rbp-0x18],rbx
   14002ab02:	mov    DWORD PTR [rbp-0x10],ebx
   14002ab05:	mov    r8d,ebx
   14002ab08:	mov    ebx,0x2
   14002ab0d:	jmp    0x14002ae66
   14002ab12:	cmp    edi,ecx
   14002ab14:	jg     0x14002ad4b
   14002ab1a:	sub    ecx,DWORD PTR [rbp-0x40]
   14002ab1d:	mov    rax,QWORD PTR [rbp-0x20]
   14002ab21:	mov    r10d,r15d
   14002ab24:	mov    QWORD PTR [rbp-0x18],rax
   14002ab28:	mov    eax,ecx
   14002ab2a:	mov    DWORD PTR [rbp-0x10],r9d
   14002ab2e:	cdq    
   14002ab2f:	mov    r11,r14
   14002ab32:	mov    r9d,ebx
   14002ab35:	and    edx,r12d
   14002ab38:	lea    r8,[rbp-0x18]
   14002ab3c:	add    eax,edx
   14002ab3e:	mov    r13d,eax
   14002ab41:	and    eax,r12d
   14002ab44:	sub    eax,edx
   14002ab46:	sar    r13d,0x5
   14002ab4a:	mov    ecx,eax
   14002ab4c:	mov    edi,eax
   14002ab4e:	mov    eax,0x20
   14002ab53:	shl    r10d,cl
   14002ab56:	sub    eax,ecx
   14002ab58:	mov    r14d,eax
   14002ab5b:	not    r10d
   14002ab5e:	mov    eax,DWORD PTR [r8]
   14002ab61:	mov    ecx,edi
   14002ab63:	mov    edx,eax
   14002ab65:	shr    eax,cl
   14002ab67:	mov    ecx,r14d
   14002ab6a:	or     eax,r9d
   14002ab6d:	and    edx,r10d
   14002ab70:	mov    r9d,edx
   14002ab73:	mov    DWORD PTR [r8],eax
   14002ab76:	lea    r8,[r8+0x4]
   14002ab7a:	shl    r9d,cl
   14002ab7d:	sub    r11,rsi
   14002ab80:	jne    0x14002ab5e
   14002ab82:	movsxd r10,r13d
   14002ab85:	lea    edi,[r11+0x2]
   14002ab89:	lea    r14d,[r11+0x3]
   14002ab8d:	mov    r9,r10
   14002ab90:	mov    r8d,edi
   14002ab93:	neg    r9
   14002ab96:	cmp    r8,r10
   14002ab99:	jl     0x14002abb0
   14002ab9b:	mov    rdx,r8
   14002ab9e:	shl    rdx,0x2
   14002aba2:	lea    rax,[rdx+r9*4]
   14002aba6:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002abaa:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002abae:	jmp    0x14002abb5
   14002abb0:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002abb5:	sub    r8,rsi
   14002abb8:	jns    0x14002ab96
   14002abba:	mov    r8d,DWORD PTR [rbp-0x38]
   14002abbe:	mov    r11d,r12d
   14002abc1:	lea    eax,[r8+0x1]
   14002abc5:	cdq    
   14002abc6:	and    edx,r12d
   14002abc9:	add    eax,edx
   14002abcb:	mov    r9d,eax
   14002abce:	and    eax,r12d
   14002abd1:	sub    eax,edx
   14002abd3:	sar    r9d,0x5
   14002abd7:	sub    r11d,eax
   14002abda:	movsxd rax,r9d
   14002abdd:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   14002abe1:	bt     ecx,r11d
   14002abe5:	jae    0x14002ac83
   14002abeb:	mov    ecx,r11d
   14002abee:	mov    eax,r15d
   14002abf1:	movsxd rdx,r9d
   14002abf4:	shl    eax,cl
   14002abf6:	not    eax
   14002abf8:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   14002abfc:	jne    0x14002ac17
   14002abfe:	lea    eax,[r9+0x1]
   14002ac02:	movsxd rcx,eax
   14002ac05:	jmp    0x14002ac10
   14002ac07:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002ac0b:	jne    0x14002ac17
   14002ac0d:	add    rcx,rsi
   14002ac10:	cmp    rcx,r14
   14002ac13:	jl     0x14002ac07
   14002ac15:	jmp    0x14002ac83
   14002ac17:	mov    eax,r8d
   14002ac1a:	mov    ecx,r12d
   14002ac1d:	cdq    
   14002ac1e:	and    edx,r12d
   14002ac21:	add    eax,edx
   14002ac23:	mov    r10d,eax
   14002ac26:	and    eax,r12d
   14002ac29:	sub    eax,edx
   14002ac2b:	sar    r10d,0x5
   14002ac2f:	mov    edx,esi
   14002ac31:	sub    ecx,eax
   14002ac33:	movsxd r13,r10d
   14002ac36:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14002ac3b:	shl    edx,cl
   14002ac3d:	mov    ecx,ebx
   14002ac3f:	lea    r8d,[rax+rdx*1]
   14002ac43:	cmp    r8d,eax
   14002ac46:	jb     0x14002ac4d
   14002ac48:	cmp    r8d,edx
   14002ac4b:	jae    0x14002ac4f
   14002ac4d:	mov    ecx,esi
   14002ac4f:	lea    eax,[r10-0x1]
   14002ac53:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14002ac58:	movsxd rdx,eax
   14002ac5b:	test   eax,eax
   14002ac5d:	js     0x14002ac83
   14002ac5f:	test   ecx,ecx
   14002ac61:	je     0x14002ac83
   14002ac63:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   14002ac67:	mov    ecx,ebx
   14002ac69:	lea    r8d,[rax+0x1]
   14002ac6d:	cmp    r8d,eax
   14002ac70:	jb     0x14002ac77
   14002ac72:	cmp    r8d,esi
   14002ac75:	jae    0x14002ac79
   14002ac77:	mov    ecx,esi
   14002ac79:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   14002ac7e:	sub    rdx,rsi
   14002ac81:	jns    0x14002ac5f
   14002ac83:	mov    ecx,r11d
   14002ac86:	mov    eax,r15d
   14002ac89:	shl    eax,cl
   14002ac8b:	movsxd rcx,r9d
   14002ac8e:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   14002ac92:	lea    eax,[r9+0x1]
   14002ac96:	movsxd rdx,eax
   14002ac99:	cmp    rdx,r14
   14002ac9c:	jge    0x14002acb7
   14002ac9e:	lea    rcx,[rbp-0x18]
   14002aca2:	mov    r8,r14
   14002aca5:	sub    r8,rdx
   14002aca8:	lea    rcx,[rcx+rdx*4]
   14002acac:	xor    edx,edx
   14002acae:	shl    r8,0x2
   14002acb2:	call   0x14001b980
   14002acb7:	mov    eax,DWORD PTR [rip+0x17b47]        # 0x140042804
   14002acbd:	mov    r13d,0x20
   14002acc3:	mov    r9d,ebx
   14002acc6:	inc    eax
   14002acc8:	lea    r8,[rbp-0x18]
   14002accc:	cdq    
   14002accd:	and    edx,r12d
   14002acd0:	add    eax,edx
   14002acd2:	mov    r10d,eax
   14002acd5:	and    eax,r12d
   14002acd8:	sub    eax,edx
   14002acda:	sar    r10d,0x5
   14002acde:	mov    ecx,eax
   14002ace0:	mov    r11d,eax
   14002ace3:	shl    r15d,cl
   14002ace6:	sub    r13d,eax
   14002ace9:	not    r15d
   14002acec:	mov    eax,DWORD PTR [r8]
   14002acef:	mov    ecx,r11d
   14002acf2:	mov    edx,eax
   14002acf4:	shr    eax,cl
   14002acf6:	mov    ecx,r13d
   14002acf9:	or     eax,r9d
   14002acfc:	and    edx,r15d
   14002acff:	mov    r9d,edx
   14002ad02:	mov    DWORD PTR [r8],eax
   14002ad05:	lea    r8,[r8+0x4]
   14002ad09:	shl    r9d,cl
   14002ad0c:	sub    r14,rsi
   14002ad0f:	jne    0x14002acec
   14002ad11:	movsxd r10,r10d
   14002ad14:	mov    r8,rdi
   14002ad17:	mov    r9,r10
   14002ad1a:	neg    r9
   14002ad1d:	cmp    r8,r10
   14002ad20:	jl     0x14002ad37
   14002ad22:	mov    rdx,r8
   14002ad25:	shl    rdx,0x2
   14002ad29:	lea    rax,[rdx+r9*4]
   14002ad2d:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002ad31:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002ad35:	jmp    0x14002ad3c
   14002ad37:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   14002ad3c:	sub    r8,rsi
   14002ad3f:	jns    0x14002ad1d
   14002ad41:	mov    r8d,ebx
   14002ad44:	mov    ebx,edi
   14002ad46:	jmp    0x14002ae66
   14002ad4b:	mov    eax,DWORD PTR [rip+0x17ab3]        # 0x140042804
   14002ad51:	mov    r10d,DWORD PTR [rip+0x17aa0]        # 0x1400427f8
   14002ad58:	mov    r13d,0x20
   14002ad5e:	cdq    
   14002ad5f:	and    edx,r12d
   14002ad62:	add    eax,edx
   14002ad64:	mov    r11d,eax
   14002ad67:	and    eax,r12d
   14002ad6a:	sub    eax,edx
   14002ad6c:	sar    r11d,0x5
   14002ad70:	mov    ecx,eax
   14002ad72:	shl    r15d,cl
   14002ad75:	not    r15d
   14002ad78:	cmp    edi,r10d
   14002ad7b:	jl     0x14002adf7
   14002ad7d:	mov    QWORD PTR [rbp-0x18],rbx
   14002ad81:	bts    DWORD PTR [rbp-0x18],0x1f
   14002ad86:	mov    DWORD PTR [rbp-0x10],ebx
   14002ad89:	sub    r13d,eax
   14002ad8c:	mov    edi,eax
   14002ad8e:	mov    r9d,ebx
   14002ad91:	lea    r8,[rbp-0x18]
   14002ad95:	mov    eax,DWORD PTR [r8]
   14002ad98:	mov    ecx,edi
   14002ad9a:	mov    edx,r15d
   14002ad9d:	and    edx,eax
   14002ad9f:	shr    eax,cl
   14002ada1:	mov    ecx,r13d
   14002ada4:	or     eax,r9d
   14002ada7:	mov    r9d,edx
   14002adaa:	shl    r9d,cl
   14002adad:	mov    DWORD PTR [r8],eax
   14002adb0:	lea    r8,[r8+0x4]
   14002adb4:	sub    r14,rsi
   14002adb7:	jne    0x14002ad95
   14002adb9:	movsxd r9,r11d
   14002adbc:	lea    edi,[r14+0x2]
   14002adc0:	mov    r8,r9
   14002adc3:	neg    r8
   14002adc6:	cmp    rdi,r9
   14002adc9:	jl     0x14002ade0
   14002adcb:	mov    rdx,rdi
   14002adce:	shl    rdx,0x2
   14002add2:	lea    rax,[rdx+r8*4]
   14002add6:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002adda:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002adde:	jmp    0x14002ade4
   14002ade0:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002ade4:	sub    rdi,rsi
   14002ade7:	jns    0x14002adc6
   14002ade9:	mov    r8d,DWORD PTR [rip+0x17a1c]        # 0x14004280c
   14002adf0:	mov    ebx,esi
   14002adf2:	add    r8d,r10d
   14002adf5:	jmp    0x14002ae66
   14002adf7:	mov    r8d,DWORD PTR [rip+0x17a0e]        # 0x14004280c
   14002adfe:	btr    DWORD PTR [rbp-0x18],0x1f
   14002ae03:	mov    r10d,ebx
   14002ae06:	add    r8d,edi
   14002ae09:	mov    edi,eax
   14002ae0b:	sub    r13d,eax
   14002ae0e:	lea    r9,[rbp-0x18]
   14002ae12:	mov    eax,DWORD PTR [r9]
   14002ae15:	mov    ecx,edi
   14002ae17:	mov    edx,eax
   14002ae19:	shr    eax,cl
   14002ae1b:	mov    ecx,r13d
   14002ae1e:	or     eax,r10d
   14002ae21:	and    edx,r15d
   14002ae24:	mov    r10d,edx
   14002ae27:	mov    DWORD PTR [r9],eax
   14002ae2a:	lea    r9,[r9+0x4]
   14002ae2e:	shl    r10d,cl
   14002ae31:	sub    r14,rsi
   14002ae34:	jne    0x14002ae12
   14002ae36:	movsxd r10,r11d
   14002ae39:	lea    edi,[r14+0x2]
   14002ae3d:	mov    r9,r10
   14002ae40:	neg    r9
   14002ae43:	cmp    rdi,r10
   14002ae46:	jl     0x14002ae5d
   14002ae48:	mov    rdx,rdi
   14002ae4b:	shl    rdx,0x2
   14002ae4f:	lea    rax,[rdx+r9*4]
   14002ae53:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002ae57:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002ae5b:	jmp    0x14002ae61
   14002ae5d:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   14002ae61:	sub    rdi,rsi
   14002ae64:	jns    0x14002ae43
   14002ae66:	mov    rdx,QWORD PTR [rbp-0x30]
   14002ae6a:	sub    r12d,DWORD PTR [rip+0x17993]        # 0x140042804
   14002ae71:	mov    cl,r12b
   14002ae74:	shl    r8d,cl
   14002ae77:	neg    DWORD PTR [rbp-0x3c]
   14002ae7a:	sbb    eax,eax
   14002ae7c:	and    eax,0x80000000
   14002ae81:	or     r8d,eax
   14002ae84:	mov    eax,DWORD PTR [rip+0x1797e]        # 0x140042808
   14002ae8a:	or     r8d,DWORD PTR [rbp-0x18]
   14002ae8e:	cmp    eax,0x40
   14002ae91:	jne    0x14002ae9e
   14002ae93:	mov    eax,DWORD PTR [rbp-0x14]
   14002ae96:	mov    DWORD PTR [rdx+0x4],r8d
   14002ae9a:	mov    DWORD PTR [rdx],eax
   14002ae9c:	jmp    0x14002aea6
   14002ae9e:	cmp    eax,0x20
   14002aea1:	jne    0x14002aea6
   14002aea3:	mov    DWORD PTR [rdx],r8d
   14002aea6:	mov    eax,ebx
   14002aea8:	mov    rcx,QWORD PTR [rbp-0x8]
   14002aeac:	xor    rcx,rsp
   14002aeaf:	call   0x1400187d0
   14002aeb4:	lea    r11,[rsp+0x60]
   14002aeb9:	mov    rbx,QWORD PTR [r11+0x30]
   14002aebd:	mov    rsi,QWORD PTR [r11+0x40]
   14002aec1:	mov    rdi,QWORD PTR [r11+0x48]
   14002aec5:	mov    rsp,r11
   14002aec8:	pop    r15
   14002aeca:	pop    r14
   14002aecc:	pop    r13
   14002aece:	pop    r12
   14002aed0:	pop    rbp
   14002aed1:	ret    
   14002aed2:	int3   
   14002aed3:	int3   
   14002aed4:	mov    QWORD PTR [rsp+0x18],rbx
   14002aed9:	push   rbp
   14002aeda:	push   rsi
   14002aedb:	push   rdi
   14002aedc:	push   r12
   14002aede:	push   r13
   14002aee0:	push   r14
   14002aee2:	push   r15
   14002aee4:	lea    rbp,[rsp-0x7]
   14002aee9:	sub    rsp,0xa0
   14002aef0:	mov    rax,QWORD PTR [rip+0x16759]        # 0x140041650
   14002aef7:	xor    rax,rsp
   14002aefa:	mov    QWORD PTR [rbp-0x1],rax
   14002aefe:	mov    r14,QWORD PTR [rbp+0x7f]
   14002af02:	xor    ebx,ebx
   14002af04:	mov    DWORD PTR [rbp-0x6d],r9d
   14002af08:	lea    r9d,[rbx+0x1]
   14002af0c:	mov    QWORD PTR [rbp-0x59],rcx
   14002af10:	mov    QWORD PTR [rbp-0x69],rdx
   14002af14:	lea    r10,[rbp-0x21]
   14002af18:	mov    WORD PTR [rbp-0x71],bx
   14002af1c:	mov    r11d,ebx
   14002af1f:	mov    DWORD PTR [rbp-0x75],r9d
   14002af23:	mov    r15d,ebx
   14002af26:	mov    DWORD PTR [rbp-0x79],ebx
   14002af29:	mov    r12d,ebx
   14002af2c:	mov    r13d,ebx
   14002af2f:	mov    esi,ebx
   14002af31:	mov    ecx,ebx
   14002af33:	test   r14,r14
   14002af36:	jne    0x14002af4f
   14002af38:	call   0x14001b864
   14002af3d:	mov    DWORD PTR [rax],0x16
   14002af43:	call   0x14001ffb8
   14002af48:	xor    eax,eax
   14002af4a:	jmp    0x14002b70e
   14002af4f:	mov    rdi,r8
   14002af52:	cmp    BYTE PTR [r8],0x20
   14002af56:	ja     0x14002af71
   14002af58:	movsx  rax,BYTE PTR [r8]
   14002af5c:	movabs rdx,0x100002600
   14002af66:	bt     rdx,rax
   14002af6a:	jae    0x14002af71
   14002af6c:	add    r8,r9
   14002af6f:	jmp    0x14002af52
   14002af71:	mov    dl,BYTE PTR [r8]
   14002af74:	add    r8,r9
   14002af77:	cmp    ecx,0x5
   14002af7a:	jg     0x14002b18a
   14002af80:	je     0x14002b170
   14002af86:	mov    r9d,ecx
   14002af89:	test   ecx,ecx
   14002af8b:	je     0x14002b114
   14002af91:	dec    r9d
   14002af94:	je     0x14002b0d4
   14002af9a:	dec    r9d
   14002af9d:	je     0x14002b082
   14002afa3:	dec    r9d
   14002afa6:	je     0x14002b035
   14002afac:	dec    r9d
   14002afaf:	jne    0x14002b24f
   14002afb5:	mov    r9d,0x1
   14002afbb:	mov    al,0x30
   14002afbd:	mov    r15d,r9d
   14002afc0:	mov    DWORD PTR [rbp-0x79],r9d
   14002afc4:	test   r11d,r11d
   14002afc7:	jne    0x14002aff9
   14002afc9:	jmp    0x14002afd4
   14002afcb:	mov    dl,BYTE PTR [r8]
   14002afce:	sub    esi,r9d
   14002afd1:	add    r8,r9
   14002afd4:	cmp    dl,al
   14002afd6:	je     0x14002afcb
   14002afd8:	jmp    0x14002aff9
   14002afda:	cmp    dl,0x39
   14002afdd:	jg     0x14002affd
   14002afdf:	cmp    r11d,0x19
   14002afe3:	jae    0x14002aff3
   14002afe5:	sub    dl,al
   14002afe7:	add    r11d,r9d
   14002afea:	mov    BYTE PTR [r10],dl
   14002afed:	add    r10,r9
   14002aff0:	sub    esi,r9d
   14002aff3:	mov    dl,BYTE PTR [r8]
   14002aff6:	add    r8,r9
   14002aff9:	cmp    dl,al
   14002affb:	jge    0x14002afda
   14002affd:	lea    eax,[rdx-0x2b]
   14002b000:	test   al,0xfd
   14002b002:	je     0x14002b028
   14002b004:	cmp    dl,0x43
   14002b007:	jle    0x14002b149
   14002b00d:	cmp    dl,0x45
   14002b010:	jle    0x14002b01e
   14002b012:	sub    dl,0x64
   14002b015:	cmp    dl,r9b
   14002b018:	ja     0x14002b149
   14002b01e:	mov    ecx,0x6
   14002b023:	jmp    0x14002af71
   14002b028:	sub    r8,r9
   14002b02b:	mov    ecx,0xb
   14002b030:	jmp    0x14002af71
   14002b035:	mov    r9d,0x1
   14002b03b:	mov    al,0x30
   14002b03d:	mov    r15d,r9d
   14002b040:	jmp    0x14002b063
   14002b042:	cmp    dl,0x39
   14002b045:	jg     0x14002b067
   14002b047:	cmp    r11d,0x19
   14002b04b:	jae    0x14002b05a
   14002b04d:	sub    dl,al
   14002b04f:	add    r11d,r9d
   14002b052:	mov    BYTE PTR [r10],dl
   14002b055:	add    r10,r9
   14002b058:	jmp    0x14002b05d
   14002b05a:	add    esi,r9d
   14002b05d:	mov    dl,BYTE PTR [r8]
   14002b060:	add    r8,r9
   14002b063:	cmp    dl,al
   14002b065:	jge    0x14002b042
   14002b067:	mov    rax,QWORD PTR [r14]
   14002b06a:	mov    rcx,QWORD PTR [rax+0xf0]
   14002b071:	mov    rax,QWORD PTR [rcx]
   14002b074:	cmp    dl,BYTE PTR [rax]
   14002b076:	jne    0x14002affd
   14002b078:	mov    ecx,0x4
   14002b07d:	jmp    0x14002af71
   14002b082:	lea    eax,[rdx-0x31]
   14002b085:	cmp    al,0x8
   14002b087:	ja     0x14002b09c
   14002b089:	mov    ecx,0x3
   14002b08e:	mov    r9d,0x1
   14002b094:	sub    r8,r9
   14002b097:	jmp    0x14002af71
   14002b09c:	mov    rax,QWORD PTR [r14]
   14002b09f:	mov    rcx,QWORD PTR [rax+0xf0]
   14002b0a6:	mov    rax,QWORD PTR [rcx]
   14002b0a9:	cmp    dl,BYTE PTR [rax]
   14002b0ab:	jne    0x14002b0bd
   14002b0ad:	mov    ecx,0x5
   14002b0b2:	mov    r9d,0x1
   14002b0b8:	jmp    0x14002af71
   14002b0bd:	cmp    dl,0x30
   14002b0c0:	jne    0x14002b2b8
   14002b0c6:	mov    r9d,0x1
   14002b0cc:	mov    ecx,r9d
   14002b0cf:	jmp    0x14002af71
   14002b0d4:	lea    eax,[rdx-0x31]
   14002b0d7:	mov    r9d,0x1
   14002b0dd:	mov    r15d,r9d
   14002b0e0:	cmp    al,0x8
   14002b0e2:	ja     0x14002b0ea
   14002b0e4:	lea    ecx,[r9+0x2]
   14002b0e8:	jmp    0x14002b094
   14002b0ea:	mov    rax,QWORD PTR [r14]
   14002b0ed:	mov    rcx,QWORD PTR [rax+0xf0]
   14002b0f4:	mov    rax,QWORD PTR [rcx]
   14002b0f7:	cmp    dl,BYTE PTR [rax]
   14002b0f9:	je     0x14002b078
   14002b0ff:	lea    eax,[rdx-0x2b]
   14002b102:	test   al,0xfd
   14002b104:	je     0x14002b028
   14002b10a:	cmp    dl,0x30
   14002b10d:	je     0x14002b0cc
   14002b10f:	jmp    0x14002b004
   14002b114:	lea    eax,[rdx-0x31]
   14002b117:	cmp    al,0x8
   14002b119:	jbe    0x14002b089
   14002b11f:	mov    rax,QWORD PTR [r14]
   14002b122:	mov    rcx,QWORD PTR [rax+0xf0]
   14002b129:	mov    rax,QWORD PTR [rcx]
   14002b12c:	cmp    dl,BYTE PTR [rax]
   14002b12e:	je     0x14002b0ad
   14002b134:	cmp    dl,0x2b
   14002b137:	je     0x14002b162
   14002b139:	cmp    dl,0x2d
   14002b13c:	je     0x14002b151
   14002b13e:	cmp    dl,0x30
   14002b141:	je     0x14002b0c6
   14002b143:	mov    r9d,0x1
   14002b149:	sub    r8,r9
   14002b14c:	jmp    0x14002b2c1
   14002b151:	mov    ecx,0x2
   14002b156:	mov    DWORD PTR [rbp-0x71],0x8000
   14002b15d:	jmp    0x14002b0b2
   14002b162:	mov    ecx,0x2
   14002b167:	mov    WORD PTR [rbp-0x71],bx
   14002b16b:	jmp    0x14002b0b2
   14002b170:	sub    dl,0x30
   14002b173:	mov    DWORD PTR [rbp-0x79],r9d
   14002b177:	cmp    dl,0x9
   14002b17a:	ja     0x14002b259
   14002b180:	mov    ecx,0x4
   14002b185:	jmp    0x14002b094
   14002b18a:	mov    r9d,ecx
   14002b18d:	sub    r9d,0x6
   14002b191:	je     0x14002b233
   14002b197:	dec    r9d
   14002b19a:	je     0x14002b20f
   14002b19c:	dec    r9d
   14002b19f:	je     0x14002b1e3
   14002b1a1:	dec    r9d
   14002b1a4:	je     0x14002b25e
   14002b1aa:	cmp    r9d,0x2
   14002b1ae:	jne    0x14002b24f
   14002b1b4:	cmp    DWORD PTR [rbp+0x77],ebx
   14002b1b7:	je     0x14002b143
   14002b1b9:	lea    rdi,[r8-0x1]
   14002b1bd:	cmp    dl,0x2b
   14002b1c0:	je     0x14002b1d9
   14002b1c2:	cmp    dl,0x2d
   14002b1c5:	jne    0x14002b2b8
   14002b1cb:	or     DWORD PTR [rbp-0x75],0xffffffff
   14002b1cf:	mov    ecx,0x7
   14002b1d4:	jmp    0x14002b0b2
   14002b1d9:	mov    ecx,0x7
   14002b1de:	jmp    0x14002b0b2
   14002b1e3:	mov    r9d,0x1
   14002b1e9:	mov    r12d,r9d
   14002b1ec:	jmp    0x14002b1f4
   14002b1ee:	mov    dl,BYTE PTR [r8]
   14002b1f1:	add    r8,r9
   14002b1f4:	cmp    dl,0x30
   14002b1f7:	je     0x14002b1ee
   14002b1f9:	sub    dl,0x31
   14002b1fc:	cmp    dl,0x8
   14002b1ff:	ja     0x14002b149
   14002b205:	mov    ecx,0x9
   14002b20a:	jmp    0x14002b094
   14002b20f:	lea    eax,[rdx-0x31]
   14002b212:	cmp    al,0x8
   14002b214:	ja     0x14002b220
   14002b216:	mov    ecx,0x9
   14002b21b:	jmp    0x14002b08e
   14002b220:	cmp    dl,0x30
   14002b223:	jne    0x14002b2b8
   14002b229:	mov    ecx,0x8
   14002b22e:	jmp    0x14002b0b2
   14002b233:	lea    eax,[rdx-0x31]
   14002b236:	lea    rdi,[r8-0x2]
   14002b23a:	cmp    al,0x8
   14002b23c:	jbe    0x14002b216
   14002b23e:	cmp    dl,0x2b
   14002b241:	je     0x14002b24a
   14002b243:	cmp    dl,0x2d
   14002b246:	je     0x14002b1cb
   14002b248:	jmp    0x14002b220
   14002b24a:	mov    ecx,0x7
   14002b24f:	cmp    ecx,0xa
   14002b252:	je     0x14002b2bb
   14002b254:	jmp    0x14002b0b2
   14002b259:	mov    r8,rdi
   14002b25c:	jmp    0x14002b2c1
   14002b25e:	mov    r9d,0x1
   14002b264:	mov    dil,0x30
   14002b267:	mov    r12d,r9d
   14002b26a:	jmp    0x14002b290
   14002b26c:	cmp    dl,0x39
   14002b26f:	jg     0x14002b2ae
   14002b271:	lea    r13d,[r13+r13*4+0x0]
   14002b276:	movsx  eax,dl
   14002b279:	lea    r13d,[r13-0x18]
   14002b27d:	lea    r13d,[rax+r13*2]
   14002b281:	cmp    r13d,0x1450
   14002b288:	jg     0x14002b297
   14002b28a:	mov    dl,BYTE PTR [r8]
   14002b28d:	add    r8,r9
   14002b290:	cmp    dl,dil
   14002b293:	jge    0x14002b26c
   14002b295:	jmp    0x14002b2ae
   14002b297:	mov    r13d,0x1451
   14002b29d:	jmp    0x14002b2ae
   14002b29f:	cmp    dl,0x39
   14002b2a2:	jg     0x14002b149
   14002b2a8:	mov    dl,BYTE PTR [r8]
   14002b2ab:	add    r8,r9
   14002b2ae:	cmp    dl,dil
   14002b2b1:	jge    0x14002b29f
   14002b2b3:	jmp    0x14002b149
   14002b2b8:	mov    r8,rdi
   14002b2bb:	mov    r9d,0x1
   14002b2c1:	mov    rax,QWORD PTR [rbp-0x69]
   14002b2c5:	mov    QWORD PTR [rax],r8
   14002b2c8:	test   r15d,r15d
   14002b2cb:	je     0x14002b6e4
   14002b2d1:	cmp    r11d,0x18
   14002b2d5:	jbe    0x14002b2f0
   14002b2d7:	mov    al,BYTE PTR [rbp-0xa]
   14002b2da:	cmp    al,0x5
   14002b2dc:	jl     0x14002b2e4
   14002b2de:	add    al,r9b
   14002b2e1:	mov    BYTE PTR [rbp-0xa],al
   14002b2e4:	sub    r10,r9
   14002b2e7:	mov    r11d,0x18
   14002b2ed:	add    esi,r9d
   14002b2f0:	test   r11d,r11d
   14002b2f3:	jne    0x14002b30a
   14002b2f5:	movzx  edx,bx
   14002b2f8:	movzx  eax,bx
   14002b2fb:	mov    edi,ebx
   14002b2fd:	mov    ecx,ebx
   14002b2ff:	jmp    0x14002b6f3
   14002b304:	dec    r11d
   14002b307:	add    esi,r9d
   14002b30a:	sub    r10,r9
   14002b30d:	cmp    BYTE PTR [r10],bl
   14002b310:	je     0x14002b304
   14002b312:	lea    r8,[rbp-0x41]
   14002b316:	lea    rcx,[rbp-0x21]
   14002b31a:	mov    edx,r11d
   14002b31d:	call   0x14002c7a8
   14002b322:	cmp    DWORD PTR [rbp-0x75],ebx
   14002b325:	jge    0x14002b32a
   14002b327:	neg    r13d
   14002b32a:	add    r13d,esi
   14002b32d:	test   r12d,r12d
   14002b330:	jne    0x14002b336
   14002b332:	add    r13d,DWORD PTR [rbp+0x67]
   14002b336:	cmp    DWORD PTR [rbp-0x79],ebx
   14002b339:	jne    0x14002b33f
   14002b33b:	sub    r13d,DWORD PTR [rbp+0x6f]
   14002b33f:	cmp    r13d,0x1450
   14002b346:	jg     0x14002b6ce
   14002b34c:	cmp    r13d,0xffffebb0
   14002b353:	jl     0x14002b6be
   14002b359:	lea    rsi,[rip+0x174c0]        # 0x140042820
   14002b360:	sub    rsi,0x60
   14002b364:	test   r13d,r13d
   14002b367:	je     0x14002b6ac
   14002b36d:	jns    0x14002b37d
   14002b36f:	lea    rsi,[rip+0x1760a]        # 0x140042980
   14002b376:	neg    r13d
   14002b379:	sub    rsi,0x60
   14002b37d:	cmp    DWORD PTR [rbp-0x6d],ebx
   14002b380:	jne    0x14002b386
   14002b382:	mov    WORD PTR [rbp-0x41],bx
   14002b386:	test   r13d,r13d
   14002b389:	je     0x14002b6ac
   14002b38f:	mov    edi,0x80000000
   14002b394:	mov    r9d,0x7fff
   14002b39a:	mov    eax,r13d
   14002b39d:	add    rsi,0x54
   14002b3a1:	sar    r13d,0x3
   14002b3a5:	mov    QWORD PTR [rbp-0x61],rsi
   14002b3a9:	and    eax,0x7
   14002b3ac:	je     0x14002b6a3
   14002b3b2:	cdqe   
   14002b3b4:	mov    r11d,0x8000
   14002b3ba:	mov    r14d,0x1
   14002b3c0:	lea    rcx,[rax+rax*2]
   14002b3c4:	lea    rdx,[rsi+rcx*4]
   14002b3c8:	mov    QWORD PTR [rbp-0x69],rdx
   14002b3cc:	cmp    WORD PTR [rdx],r11w
   14002b3d0:	jb     0x14002b3f7
   14002b3d2:	mov    eax,DWORD PTR [rdx+0x8]
   14002b3d5:	movsd  xmm0,QWORD PTR [rdx]
   14002b3d9:	lea    rdx,[rbp-0x31]
   14002b3dd:	mov    DWORD PTR [rbp-0x29],eax
   14002b3e0:	movsd  QWORD PTR [rbp-0x31],xmm0
   14002b3e5:	mov    rax,QWORD PTR [rbp-0x31]
   14002b3e9:	shr    rax,0x10
   14002b3ed:	mov    QWORD PTR [rbp-0x69],rdx
   14002b3f1:	sub    eax,r14d
   14002b3f4:	mov    DWORD PTR [rbp-0x2f],eax
   14002b3f7:	movzx  eax,WORD PTR [rdx+0xa]
   14002b3fb:	movzx  ecx,WORD PTR [rbp-0x37]
   14002b3ff:	mov    QWORD PTR [rbp-0x51],rbx
   14002b403:	movzx  r12d,ax
   14002b407:	and    ax,r9w
   14002b40b:	mov    DWORD PTR [rbp-0x49],ebx
   14002b40e:	xor    r12w,cx
   14002b412:	and    cx,r9w
   14002b416:	and    r12w,r11w
   14002b41a:	lea    r8d,[rcx+rax*1]
   14002b41e:	cmp    cx,r9w
   14002b422:	jae    0x14002b68f
   14002b428:	cmp    ax,r9w
   14002b42c:	jae    0x14002b68f
   14002b432:	mov    r10d,0xbffd
   14002b438:	cmp    r8w,r10w
   14002b43c:	ja     0x14002b68f
   14002b442:	mov    r10d,0x3fbf
   14002b448:	cmp    r8w,r10w
   14002b44c:	ja     0x14002b45a
   14002b44e:	mov    QWORD PTR [rbp-0x3d],rbx
   14002b452:	mov    DWORD PTR [rbp-0x41],ebx
   14002b455:	jmp    0x14002b6a3
   14002b45a:	test   cx,cx
   14002b45d:	jne    0x14002b47f
   14002b45f:	add    r8w,r14w
   14002b463:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14002b46a:	jne    0x14002b47f
   14002b46c:	cmp    DWORD PTR [rbp-0x3d],ebx
   14002b46f:	jne    0x14002b47f
   14002b471:	cmp    DWORD PTR [rbp-0x41],ebx
   14002b474:	jne    0x14002b47f
   14002b476:	mov    WORD PTR [rbp-0x37],bx
   14002b47a:	jmp    0x14002b6a3
   14002b47f:	test   ax,ax
   14002b482:	jne    0x14002b49a
   14002b484:	add    r8w,r14w
   14002b488:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14002b48f:	jne    0x14002b49a
   14002b491:	cmp    DWORD PTR [rdx+0x4],ebx
   14002b494:	jne    0x14002b49a
   14002b496:	cmp    DWORD PTR [rdx],ebx
   14002b498:	je     0x14002b44e
   14002b49a:	mov    r15d,ebx
   14002b49d:	lea    r9,[rbp-0x51]
   14002b4a1:	mov    r10d,0x5
   14002b4a7:	mov    DWORD PTR [rbp-0x79],r10d
   14002b4ab:	test   r10d,r10d
   14002b4ae:	jle    0x14002b51c
   14002b4b0:	lea    eax,[r15+r15*1]
   14002b4b4:	lea    rdi,[rbp-0x41]
   14002b4b8:	lea    rsi,[rdx+0x8]
   14002b4bc:	movsxd rcx,eax
   14002b4bf:	mov    eax,r15d
   14002b4c2:	and    eax,r14d
   14002b4c5:	add    rdi,rcx
   14002b4c8:	mov    edx,eax
   14002b4ca:	movzx  eax,WORD PTR [rdi]
   14002b4cd:	movzx  ecx,WORD PTR [rsi]
   14002b4d0:	mov    r11d,ebx
   14002b4d3:	imul   ecx,eax
   14002b4d6:	mov    eax,DWORD PTR [r9]
   14002b4d9:	lea    r14d,[rax+rcx*1]
   14002b4dd:	cmp    r14d,eax
   14002b4e0:	jb     0x14002b4e7
   14002b4e2:	cmp    r14d,ecx
   14002b4e5:	jae    0x14002b4ed
   14002b4e7:	mov    r11d,0x1
   14002b4ed:	mov    DWORD PTR [r9],r14d
   14002b4f0:	mov    r14d,0x1
   14002b4f6:	test   r11d,r11d
   14002b4f9:	je     0x14002b500
   14002b4fb:	add    WORD PTR [r9+0x4],r14w
   14002b500:	mov    r11d,DWORD PTR [rbp-0x79]
   14002b504:	add    rdi,0x2
   14002b508:	sub    rsi,0x2
   14002b50c:	sub    r11d,r14d
   14002b50f:	mov    DWORD PTR [rbp-0x79],r11d
   14002b513:	test   r11d,r11d
   14002b516:	jg     0x14002b4ca
   14002b518:	mov    rdx,QWORD PTR [rbp-0x69]
   14002b51c:	sub    r10d,r14d
   14002b51f:	add    r9,0x2
   14002b523:	add    r15d,r14d
   14002b526:	test   r10d,r10d
   14002b529:	jg     0x14002b4a7
   14002b52f:	mov    r10d,DWORD PTR [rbp-0x49]
   14002b533:	mov    r9d,DWORD PTR [rbp-0x51]
   14002b537:	mov    eax,0xc002
   14002b53c:	add    r8w,ax
   14002b540:	mov    edi,0x80000000
   14002b545:	mov    r15d,0xffff
   14002b54b:	test   r8w,r8w
   14002b54f:	jle    0x14002b590
   14002b551:	test   edi,r10d
   14002b554:	jne    0x14002b58a
   14002b556:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002b55a:	mov    edx,r9d
   14002b55d:	add    r10d,r10d
   14002b560:	shr    edx,0x1f
   14002b563:	add    r9d,r9d
   14002b566:	mov    ecx,r11d
   14002b569:	shr    ecx,0x1f
   14002b56c:	lea    eax,[r11+r11*1]
   14002b570:	add    r8w,r15w
   14002b574:	or     eax,edx
   14002b576:	or     r10d,ecx
   14002b579:	mov    DWORD PTR [rbp-0x51],r9d
   14002b57d:	mov    DWORD PTR [rbp-0x4d],eax
   14002b580:	mov    DWORD PTR [rbp-0x49],r10d
   14002b584:	test   r8w,r8w
   14002b588:	jg     0x14002b551
   14002b58a:	test   r8w,r8w
   14002b58e:	jg     0x14002b5fa
   14002b590:	add    r8w,r15w
   14002b594:	jns    0x14002b5fa
   14002b596:	movzx  eax,r8w
   14002b59a:	mov    edi,ebx
   14002b59c:	neg    ax
   14002b59f:	movzx  edx,ax
   14002b5a2:	add    r8w,dx
   14002b5a6:	test   BYTE PTR [rbp-0x51],r14b
   14002b5aa:	je     0x14002b5af
   14002b5ac:	add    edi,r14d
   14002b5af:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002b5b3:	mov    eax,r10d
   14002b5b6:	shr    r9d,1
   14002b5b9:	mov    ecx,r11d
   14002b5bc:	shl    eax,0x1f
   14002b5bf:	shr    r11d,1
   14002b5c2:	shl    ecx,0x1f
   14002b5c5:	or     r11d,eax
   14002b5c8:	shr    r10d,1
   14002b5cb:	or     r9d,ecx
   14002b5ce:	mov    DWORD PTR [rbp-0x4d],r11d
   14002b5d2:	mov    DWORD PTR [rbp-0x51],r9d
   14002b5d6:	sub    rdx,r14
   14002b5d9:	jne    0x14002b5a6
   14002b5db:	test   edi,edi
   14002b5dd:	mov    DWORD PTR [rbp-0x49],r10d
   14002b5e1:	mov    edi,0x80000000
   14002b5e6:	je     0x14002b5fa
   14002b5e8:	movzx  eax,r9w
   14002b5ec:	or     ax,r14w
   14002b5f0:	mov    WORD PTR [rbp-0x51],ax
   14002b5f4:	mov    r9d,DWORD PTR [rbp-0x51]
   14002b5f8:	jmp    0x14002b5fe
   14002b5fa:	movzx  eax,WORD PTR [rbp-0x51]
   14002b5fe:	mov    rsi,QWORD PTR [rbp-0x61]
   14002b602:	mov    r11d,0x8000
   14002b608:	cmp    ax,r11w
   14002b60c:	ja     0x14002b61e
   14002b60e:	and    r9d,0x1ffff
   14002b615:	cmp    r9d,0x18000
   14002b61c:	jne    0x14002b666
   14002b61e:	mov    eax,DWORD PTR [rbp-0x4f]
   14002b621:	or     ecx,0xffffffff
   14002b624:	cmp    eax,ecx
   14002b626:	jne    0x14002b660
   14002b628:	mov    eax,DWORD PTR [rbp-0x4b]
   14002b62b:	mov    DWORD PTR [rbp-0x4f],ebx
   14002b62e:	cmp    eax,ecx
   14002b630:	jne    0x14002b654
   14002b632:	movzx  eax,WORD PTR [rbp-0x47]
   14002b636:	mov    DWORD PTR [rbp-0x4b],ebx
   14002b639:	cmp    ax,r15w
   14002b63d:	jne    0x14002b64a
   14002b63f:	mov    WORD PTR [rbp-0x47],r11w
   14002b644:	add    r8w,r14w
   14002b648:	jmp    0x14002b65a
   14002b64a:	add    ax,r14w
   14002b64e:	mov    WORD PTR [rbp-0x47],ax
   14002b652:	jmp    0x14002b65a
   14002b654:	add    eax,r14d
   14002b657:	mov    DWORD PTR [rbp-0x4b],eax
   14002b65a:	mov    r10d,DWORD PTR [rbp-0x49]
   14002b65e:	jmp    0x14002b666
   14002b660:	add    eax,r14d
   14002b663:	mov    DWORD PTR [rbp-0x4f],eax
   14002b666:	mov    r9d,0x7fff
   14002b66c:	cmp    r8w,r9w
   14002b670:	jae    0x14002b68f
   14002b672:	movzx  eax,WORD PTR [rbp-0x4f]
   14002b676:	or     r8w,r12w
   14002b67a:	mov    DWORD PTR [rbp-0x3b],r10d
   14002b67e:	mov    WORD PTR [rbp-0x41],ax
   14002b682:	mov    eax,DWORD PTR [rbp-0x4d]
   14002b685:	mov    WORD PTR [rbp-0x37],r8w
   14002b68a:	mov    DWORD PTR [rbp-0x3f],eax
   14002b68d:	jmp    0x14002b6a3
   14002b68f:	neg    r12w
   14002b693:	mov    QWORD PTR [rbp-0x41],rbx
   14002b697:	sbb    eax,eax
   14002b699:	and    eax,edi
   14002b69b:	add    eax,0x7fff8000
   14002b6a0:	mov    DWORD PTR [rbp-0x39],eax
   14002b6a3:	test   r13d,r13d
   14002b6a6:	jne    0x14002b39a
   14002b6ac:	mov    eax,DWORD PTR [rbp-0x39]
   14002b6af:	movzx  edx,WORD PTR [rbp-0x41]
   14002b6b3:	mov    ecx,DWORD PTR [rbp-0x3f]
   14002b6b6:	mov    edi,DWORD PTR [rbp-0x3b]
   14002b6b9:	shr    eax,0x10
   14002b6bc:	jmp    0x14002b6f3
   14002b6be:	mov    edx,ebx
   14002b6c0:	movzx  eax,bx
   14002b6c3:	mov    edi,ebx
   14002b6c5:	mov    ecx,ebx
   14002b6c7:	mov    ebx,0x1
   14002b6cc:	jmp    0x14002b6f3
   14002b6ce:	mov    ecx,ebx
   14002b6d0:	movzx  edx,bx
   14002b6d3:	mov    eax,0x7fff
   14002b6d8:	mov    ebx,0x2
   14002b6dd:	mov    edi,0x80000000
   14002b6e2:	jmp    0x14002b6f3
   14002b6e4:	movzx  edx,bx
   14002b6e7:	movzx  eax,bx
   14002b6ea:	mov    edi,ebx
   14002b6ec:	mov    ecx,ebx
   14002b6ee:	mov    ebx,0x4
   14002b6f3:	mov    r8,QWORD PTR [rbp-0x59]
   14002b6f7:	or     ax,WORD PTR [rbp-0x71]
   14002b6fb:	mov    WORD PTR [r8+0xa],ax
   14002b700:	mov    eax,ebx
   14002b702:	mov    WORD PTR [r8],dx
   14002b706:	mov    DWORD PTR [r8+0x2],ecx
   14002b70a:	mov    DWORD PTR [r8+0x6],edi
   14002b70e:	mov    rcx,QWORD PTR [rbp-0x1]
   14002b712:	xor    rcx,rsp
   14002b715:	call   0x1400187d0
   14002b71a:	mov    rbx,QWORD PTR [rsp+0xf0]
   14002b722:	add    rsp,0xa0
   14002b729:	pop    r15
   14002b72b:	pop    r14
   14002b72d:	pop    r13
   14002b72f:	pop    r12
   14002b731:	pop    rdi
   14002b732:	pop    rsi
   14002b733:	pop    rbp
   14002b734:	ret    
   14002b735:	int3   
   14002b736:	int3   
   14002b737:	int3   
   14002b738:	mov    QWORD PTR [rsp+0x10],rbx
   14002b73d:	push   rbp
   14002b73e:	push   rsi
   14002b73f:	push   rdi
   14002b740:	push   r12
   14002b742:	push   r13
   14002b744:	push   r14
   14002b746:	push   r15
   14002b748:	lea    rbp,[rsp-0x27]
   14002b74d:	sub    rsp,0xc0
   14002b754:	mov    rax,QWORD PTR [rip+0x15ef5]        # 0x140041650
   14002b75b:	xor    rax,rsp
   14002b75e:	mov    QWORD PTR [rbp+0x17],rax
   14002b762:	movzx  r10d,WORD PTR [rcx+0x8]
   14002b767:	mov    rbx,r9
   14002b76a:	mov    r9d,DWORD PTR [rcx]
   14002b76d:	mov    DWORD PTR [rbp-0x4d],edx
   14002b770:	mov    edx,0x8000
   14002b775:	mov    r11d,0x1
   14002b77b:	mov    DWORD PTR [rbp-0x39],r8d
   14002b77f:	mov    r8d,DWORD PTR [rcx+0x4]
   14002b783:	movzx  ecx,r10w
   14002b787:	and    cx,dx
   14002b78a:	lea    r13d,[rdx-0x1]
   14002b78e:	lea    eax,[r11+0x1f]
   14002b792:	xor    r12d,r12d
   14002b795:	and    r10w,r13w
   14002b799:	mov    QWORD PTR [rbp-0x41],rbx
   14002b79d:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   14002b7a4:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   14002b7ab:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   14002b7b2:	mov    WORD PTR [rbp-0x67],cx
   14002b7b6:	lea    edi,[rax+0xd]
   14002b7b9:	test   cx,cx
   14002b7bc:	je     0x14002b7c4
   14002b7be:	mov    BYTE PTR [rbx+0x2],dil
   14002b7c2:	jmp    0x14002b7c7
   14002b7c4:	mov    BYTE PTR [rbx+0x2],al
   14002b7c7:	test   r10w,r10w
   14002b7cb:	jne    0x14002b7fb
   14002b7cd:	test   r8d,r8d
   14002b7d0:	jne    0x14002b8ca
   14002b7d6:	test   r9d,r9d
   14002b7d9:	jne    0x14002b8ca
   14002b7df:	cmp    cx,dx
   14002b7e2:	cmove  eax,edi
   14002b7e5:	mov    WORD PTR [rbx],r12w
   14002b7e9:	mov    BYTE PTR [rbx+0x2],al
   14002b7ec:	mov    WORD PTR [rbx+0x3],0x3001
   14002b7f2:	mov    BYTE PTR [rbx+0x5],r12b
   14002b7f6:	jmp    0x14002c156
   14002b7fb:	cmp    r10w,r13w
   14002b7ff:	jne    0x14002b8ca
   14002b805:	mov    esi,0x80000000
   14002b80a:	mov    WORD PTR [rbx],r11w
   14002b80e:	cmp    r8d,esi
   14002b811:	jne    0x14002b818
   14002b813:	test   r9d,r9d
   14002b816:	je     0x14002b841
   14002b818:	bt     r8d,0x1e
   14002b81d:	jb     0x14002b841
   14002b81f:	lea    rcx,[rbx+0x4]
   14002b823:	lea    r8,[rip+0xc2da]        # 0x140037b04
   14002b82a:	mov    edx,0x16
   14002b82f:	call   0x14001987c
   14002b834:	test   eax,eax
   14002b836:	je     0x14002b8be
   14002b83c:	jmp    0x14002c1bc
   14002b841:	test   cx,cx
   14002b844:	je     0x14002b871
   14002b846:	cmp    r8d,0xc0000000
   14002b84d:	jne    0x14002b871
   14002b84f:	test   r9d,r9d
   14002b852:	jne    0x14002b8a1
   14002b854:	lea    rcx,[rbx+0x4]
   14002b858:	lea    r8,[rip+0xc2ad]        # 0x140037b0c
   14002b85f:	lea    edx,[r9+0x16]
   14002b863:	call   0x14001987c
   14002b868:	test   eax,eax
   14002b86a:	je     0x14002b897
   14002b86c:	jmp    0x14002c1d1
   14002b871:	cmp    r8d,esi
   14002b874:	jne    0x14002b8a1
   14002b876:	test   r9d,r9d
   14002b879:	jne    0x14002b8a1
   14002b87b:	lea    rcx,[rbx+0x4]
   14002b87f:	lea    r8,[rip+0xc28e]        # 0x140037b14
   14002b886:	lea    edx,[r9+0x16]
   14002b88a:	call   0x14001987c
   14002b88f:	test   eax,eax
   14002b891:	jne    0x14002c1e6
   14002b897:	mov    eax,0x5
   14002b89c:	mov    BYTE PTR [rbx+0x3],al
   14002b89f:	jmp    0x14002b8c2
   14002b8a1:	lea    rcx,[rbx+0x4]
   14002b8a5:	lea    r8,[rip+0xc270]        # 0x140037b1c
   14002b8ac:	mov    edx,0x16
   14002b8b1:	call   0x14001987c
   14002b8b6:	test   eax,eax
   14002b8b8:	jne    0x14002c1fb
   14002b8be:	mov    BYTE PTR [rbx+0x3],0x6
   14002b8c2:	mov    r11d,r12d
   14002b8c5:	jmp    0x14002c156
   14002b8ca:	movzx  edx,r10w
   14002b8ce:	mov    DWORD PTR [rbp-0x17],r9d
   14002b8d2:	mov    WORD PTR [rbp-0xf],r10w
   14002b8d7:	mov    ecx,r8d
   14002b8da:	mov    eax,edx
   14002b8dc:	lea    r9,[rip+0x16f3d]        # 0x140042820
   14002b8e3:	shr    ecx,0x18
   14002b8e6:	shr    eax,0x8
   14002b8e9:	mov    r15d,0x80000000
   14002b8ef:	lea    eax,[rax+rcx*2]
   14002b8f2:	mov    r14d,0x5
   14002b8f8:	sub    r9,0x60
   14002b8fc:	mov    DWORD PTR [rbp-0x13],r8d
   14002b900:	mov    WORD PTR [rbp-0x19],r12w
   14002b905:	mov    esi,0xbffd
   14002b90a:	imul   ecx,eax,0x4d
   14002b90d:	imul   eax,edx,0x4d10
   14002b913:	add    eax,0xecbced0c
   14002b918:	mov    DWORD PTR [rbp-0x49],r14d
   14002b91c:	lea    edi,[r15-0x1]
   14002b920:	add    ecx,eax
   14002b922:	sar    ecx,0x10
   14002b925:	movsx  r10d,cx
   14002b929:	mov    DWORD PTR [rbp-0x61],ecx
   14002b92c:	neg    r10d
   14002b92f:	je     0x14002bca4
   14002b935:	test   r10d,r10d
   14002b938:	jns    0x14002b94b
   14002b93a:	lea    r9,[rip+0x1703f]        # 0x140042980
   14002b941:	neg    r10d
   14002b944:	sub    r9,0x60
   14002b948:	test   r10d,r10d
   14002b94b:	je     0x14002bca4
   14002b951:	mov    r8d,DWORD PTR [rbp-0x15]
   14002b955:	mov    edx,DWORD PTR [rbp-0x19]
   14002b958:	mov    eax,r10d
   14002b95b:	add    r9,0x54
   14002b95f:	sar    r10d,0x3
   14002b963:	mov    DWORD PTR [rbp-0x51],r10d
   14002b967:	mov    QWORD PTR [rbp-0x59],r9
   14002b96b:	and    eax,0x7
   14002b96e:	je     0x14002bc8d
   14002b974:	cdqe   
   14002b976:	lea    rcx,[rax+rax*2]
   14002b97a:	lea    rsi,[r9+rcx*4]
   14002b97e:	mov    r9d,0x8000
   14002b984:	mov    QWORD PTR [rbp-0x31],rsi
   14002b988:	cmp    WORD PTR [rsi],r9w
   14002b98c:	jb     0x14002b9b3
   14002b98e:	mov    eax,DWORD PTR [rsi+0x8]
   14002b991:	movsd  xmm0,QWORD PTR [rsi]
   14002b995:	lea    rsi,[rbp+0x7]
   14002b999:	mov    DWORD PTR [rbp+0xf],eax
   14002b99c:	movsd  QWORD PTR [rbp+0x7],xmm0
   14002b9a1:	mov    rax,QWORD PTR [rbp+0x7]
   14002b9a5:	shr    rax,0x10
   14002b9a9:	mov    QWORD PTR [rbp-0x31],rsi
   14002b9ad:	sub    eax,r11d
   14002b9b0:	mov    DWORD PTR [rbp+0x9],eax
   14002b9b3:	movzx  ecx,WORD PTR [rsi+0xa]
   14002b9b7:	movzx  eax,WORD PTR [rbp-0xf]
   14002b9bb:	mov    DWORD PTR [rbp-0x65],r12d
   14002b9bf:	movzx  ebx,cx
   14002b9c2:	and    cx,r13w
   14002b9c6:	mov    QWORD PTR [rbp-0x29],0x0
   14002b9ce:	xor    bx,ax
   14002b9d1:	and    ax,r13w
   14002b9d5:	mov    DWORD PTR [rbp-0x21],r12d
   14002b9d9:	and    bx,r9w
   14002b9dd:	lea    r9d,[rax+rcx*1]
   14002b9e1:	mov    WORD PTR [rbp-0x69],bx
   14002b9e5:	cmp    ax,r13w
   14002b9e9:	jae    0x14002bc6c
   14002b9ef:	cmp    cx,r13w
   14002b9f3:	jae    0x14002bc6c
   14002b9f9:	mov    r13d,0xbffd
   14002b9ff:	cmp    r9w,r13w
   14002ba03:	ja     0x14002bc66
   14002ba09:	mov    ebx,0x3fbf
   14002ba0e:	cmp    r9w,bx
   14002ba12:	ja     0x14002ba27
   14002ba14:	mov    QWORD PTR [rbp-0x15],0x0
   14002ba1c:	mov    r13d,0x7fff
   14002ba22:	jmp    0x14002bc80
   14002ba27:	test   ax,ax
   14002ba2a:	jne    0x14002ba4e
   14002ba2c:	add    r9w,r11w
   14002ba30:	test   DWORD PTR [rbp-0x11],edi
   14002ba33:	jne    0x14002ba4e
   14002ba35:	test   r8d,r8d
   14002ba38:	jne    0x14002ba4e
   14002ba3a:	test   edx,edx
   14002ba3c:	jne    0x14002ba4e
   14002ba3e:	mov    WORD PTR [rbp-0xf],r12w
   14002ba43:	mov    r13d,0x7fff
   14002ba49:	jmp    0x14002bc89
   14002ba4e:	test   cx,cx
   14002ba51:	jne    0x14002ba67
   14002ba53:	add    r9w,r11w
   14002ba57:	test   DWORD PTR [rsi+0x8],edi
   14002ba5a:	jne    0x14002ba67
   14002ba5c:	cmp    DWORD PTR [rsi+0x4],r12d
   14002ba60:	jne    0x14002ba67
   14002ba62:	cmp    DWORD PTR [rsi],r12d
   14002ba65:	je     0x14002ba14
   14002ba67:	mov    edi,r14d
   14002ba6a:	lea    rdx,[rbp-0x29]
   14002ba6e:	xor    r14d,r14d
   14002ba71:	mov    r13d,edi
   14002ba74:	test   edi,edi
   14002ba76:	jle    0x14002bad7
   14002ba78:	lea    eax,[r12+r12*1]
   14002ba7c:	lea    r14,[rbp-0x19]
   14002ba80:	mov    ebx,r12d
   14002ba83:	movsxd rcx,eax
   14002ba86:	and    ebx,r11d
   14002ba89:	lea    r15,[rsi+0x8]
   14002ba8d:	add    r14,rcx
   14002ba90:	xor    esi,esi
   14002ba92:	movzx  eax,WORD PTR [r15]
   14002ba96:	movzx  ecx,WORD PTR [r14]
   14002ba9a:	mov    r10d,esi
   14002ba9d:	imul   ecx,eax
   14002baa0:	mov    eax,DWORD PTR [rdx]
   14002baa2:	lea    r8d,[rax+rcx*1]
   14002baa6:	cmp    r8d,eax
   14002baa9:	jb     0x14002bab0
   14002baab:	cmp    r8d,ecx
   14002baae:	jae    0x14002bab3
   14002bab0:	mov    r10d,r11d
   14002bab3:	mov    DWORD PTR [rdx],r8d
   14002bab6:	test   r10d,r10d
   14002bab9:	je     0x14002bac0
   14002babb:	add    WORD PTR [rdx+0x4],r11w
   14002bac0:	sub    r13d,r11d
   14002bac3:	add    r14,0x2
   14002bac7:	sub    r15,0x2
   14002bacb:	test   r13d,r13d
   14002bace:	jg     0x14002ba92
   14002bad0:	mov    rsi,QWORD PTR [rbp-0x31]
   14002bad4:	xor    r14d,r14d
   14002bad7:	sub    edi,r11d
   14002bada:	add    rdx,0x2
   14002bade:	add    r12d,r11d
   14002bae1:	test   edi,edi
   14002bae3:	jg     0x14002ba71
   14002bae5:	mov    r10d,DWORD PTR [rbp-0x21]
   14002bae9:	mov    r8d,DWORD PTR [rbp-0x29]
   14002baed:	mov    eax,0xc002
   14002baf2:	add    r9w,ax
   14002baf6:	xor    r12d,r12d
   14002baf9:	mov    ebx,0xffff
   14002bafe:	mov    r15d,0x80000000
   14002bb04:	test   r9w,r9w
   14002bb08:	jle    0x14002bb46
   14002bb0a:	test   r15d,r10d
   14002bb0d:	jne    0x14002bb40
   14002bb0f:	mov    edi,DWORD PTR [rbp-0x25]
   14002bb12:	mov    edx,r8d
   14002bb15:	add    r10d,r10d
   14002bb18:	shr    edx,0x1f
   14002bb1b:	add    r8d,r8d
   14002bb1e:	mov    ecx,edi
   14002bb20:	shr    ecx,0x1f
   14002bb23:	lea    eax,[rdi+rdi*1]
   14002bb26:	add    r9w,bx
   14002bb2a:	or     eax,edx
   14002bb2c:	or     r10d,ecx
   14002bb2f:	mov    DWORD PTR [rbp-0x29],r8d
   14002bb33:	mov    DWORD PTR [rbp-0x25],eax
   14002bb36:	mov    DWORD PTR [rbp-0x21],r10d
   14002bb3a:	test   r9w,r9w
   14002bb3e:	jg     0x14002bb0a
   14002bb40:	test   r9w,r9w
   14002bb44:	jg     0x14002bbb3
   14002bb46:	add    r9w,bx
   14002bb4a:	jns    0x14002bbb3
   14002bb4c:	movzx  eax,r9w
   14002bb50:	neg    ax
   14002bb53:	movzx  edx,ax
   14002bb56:	add    r9w,dx
   14002bb5a:	mov    WORD PTR [rbp-0x5d],r9w
   14002bb5f:	mov    r9d,DWORD PTR [rbp-0x65]
   14002bb63:	test   BYTE PTR [rbp-0x29],r11b
   14002bb67:	je     0x14002bb6c
   14002bb69:	add    r9d,r11d
   14002bb6c:	mov    edi,DWORD PTR [rbp-0x25]
   14002bb6f:	mov    eax,r10d
   14002bb72:	shr    r8d,1
   14002bb75:	mov    ecx,edi
   14002bb77:	shl    eax,0x1f
   14002bb7a:	shr    edi,1
   14002bb7c:	shl    ecx,0x1f
   14002bb7f:	or     edi,eax
   14002bb81:	shr    r10d,1
   14002bb84:	or     r8d,ecx
   14002bb87:	mov    DWORD PTR [rbp-0x25],edi
   14002bb8a:	mov    DWORD PTR [rbp-0x29],r8d
   14002bb8e:	sub    rdx,r11
   14002bb91:	jne    0x14002bb63
   14002bb93:	test   r9d,r9d
   14002bb96:	movzx  r9d,WORD PTR [rbp-0x5d]
   14002bb9b:	mov    DWORD PTR [rbp-0x21],r10d
   14002bb9f:	je     0x14002bbb3
   14002bba1:	movzx  eax,r8w
   14002bba5:	or     ax,r11w
   14002bba9:	mov    WORD PTR [rbp-0x29],ax
   14002bbad:	mov    r8d,DWORD PTR [rbp-0x29]
   14002bbb1:	jmp    0x14002bbb7
   14002bbb3:	movzx  eax,WORD PTR [rbp-0x29]
   14002bbb7:	mov    ecx,0x8000
   14002bbbc:	cmp    ax,cx
   14002bbbf:	ja     0x14002bbd1
   14002bbc1:	and    r8d,0x1ffff
   14002bbc8:	cmp    r8d,0x18000
   14002bbcf:	jne    0x14002bc19
   14002bbd1:	mov    eax,DWORD PTR [rbp-0x27]
   14002bbd4:	or     edx,0xffffffff
   14002bbd7:	cmp    eax,edx
   14002bbd9:	jne    0x14002bc13
   14002bbdb:	mov    eax,DWORD PTR [rbp-0x23]
   14002bbde:	mov    DWORD PTR [rbp-0x27],r12d
   14002bbe2:	cmp    eax,edx
   14002bbe4:	jne    0x14002bc07
   14002bbe6:	movzx  eax,WORD PTR [rbp-0x1f]
   14002bbea:	mov    DWORD PTR [rbp-0x23],r12d
   14002bbee:	cmp    ax,bx
   14002bbf1:	jne    0x14002bbfd
   14002bbf3:	mov    WORD PTR [rbp-0x1f],cx
   14002bbf7:	add    r9w,r11w
   14002bbfb:	jmp    0x14002bc0d
   14002bbfd:	add    ax,r11w
   14002bc01:	mov    WORD PTR [rbp-0x1f],ax
   14002bc05:	jmp    0x14002bc0d
   14002bc07:	add    eax,r11d
   14002bc0a:	mov    DWORD PTR [rbp-0x23],eax
   14002bc0d:	mov    r10d,DWORD PTR [rbp-0x21]
   14002bc11:	jmp    0x14002bc19
   14002bc13:	add    eax,r11d
   14002bc16:	mov    DWORD PTR [rbp-0x27],eax
   14002bc19:	mov    r13d,0x7fff
   14002bc1f:	mov    r14d,0x5
   14002bc25:	mov    edi,0x7fffffff
   14002bc2a:	cmp    r9w,r13w
   14002bc2e:	jb     0x14002bc3d
   14002bc30:	movzx  eax,WORD PTR [rbp-0x69]
   14002bc34:	mov    r10d,DWORD PTR [rbp-0x51]
   14002bc38:	neg    ax
   14002bc3b:	jmp    0x14002bc6f
   14002bc3d:	movzx  eax,WORD PTR [rbp-0x27]
   14002bc41:	or     r9w,WORD PTR [rbp-0x69]
   14002bc46:	mov    DWORD PTR [rbp-0x13],r10d
   14002bc4a:	mov    r10d,DWORD PTR [rbp-0x51]
   14002bc4e:	mov    WORD PTR [rbp-0x19],ax
   14002bc52:	mov    eax,DWORD PTR [rbp-0x25]
   14002bc55:	mov    DWORD PTR [rbp-0x17],eax
   14002bc58:	mov    r8d,DWORD PTR [rbp-0x15]
   14002bc5c:	mov    edx,DWORD PTR [rbp-0x19]
   14002bc5f:	mov    WORD PTR [rbp-0xf],r9w
   14002bc64:	jmp    0x14002bc89
   14002bc66:	mov    r13d,0x7fff
   14002bc6c:	neg    bx
   14002bc6f:	sbb    eax,eax
   14002bc71:	mov    DWORD PTR [rbp-0x15],r12d
   14002bc75:	and    eax,r15d
   14002bc78:	add    eax,0x7fff8000
   14002bc7d:	mov    DWORD PTR [rbp-0x11],eax
   14002bc80:	mov    edx,r12d
   14002bc83:	mov    r8d,r12d
   14002bc86:	mov    DWORD PTR [rbp-0x19],edx
   14002bc89:	mov    r9,QWORD PTR [rbp-0x59]
   14002bc8d:	test   r10d,r10d
   14002bc90:	jne    0x14002b958
   14002bc96:	mov    rbx,QWORD PTR [rbp-0x41]
   14002bc9a:	mov    ecx,DWORD PTR [rbp-0x61]
   14002bc9d:	mov    esi,0xbffd
   14002bca2:	jmp    0x14002bcab
   14002bca4:	mov    r8d,DWORD PTR [rbp-0x15]
   14002bca8:	mov    edx,DWORD PTR [rbp-0x19]
   14002bcab:	mov    eax,DWORD PTR [rbp-0x11]
   14002bcae:	mov    r9d,0x3fff
   14002bcb4:	shr    eax,0x10
   14002bcb7:	cmp    ax,r9w
   14002bcbb:	jb     0x14002bf77
   14002bcc1:	add    cx,r11w
   14002bcc5:	mov    r9d,0x8000
   14002bccb:	mov    DWORD PTR [rbp-0x65],r12d
   14002bccf:	lea    r10d,[r9-0x1]
   14002bcd3:	mov    DWORD PTR [rbp-0x61],ecx
   14002bcd6:	movzx  ecx,WORD PTR [rbp+0x1]
   14002bcda:	movzx  r13d,cx
   14002bcde:	and    cx,r10w
   14002bce2:	mov    QWORD PTR [rbp-0x29],0x0
   14002bcea:	xor    r13w,ax
   14002bcee:	and    ax,r10w
   14002bcf2:	mov    DWORD PTR [rbp-0x21],r12d
   14002bcf6:	and    r13w,r9w
   14002bcfa:	lea    r9d,[rax+rcx*1]
   14002bcfe:	cmp    ax,r10w
   14002bd02:	jae    0x14002bf60
   14002bd08:	cmp    cx,r10w
   14002bd0c:	jae    0x14002bf60
   14002bd12:	cmp    r9w,si
   14002bd16:	ja     0x14002bf60
   14002bd1c:	mov    r10d,0x3fbf
   14002bd22:	cmp    r9w,r10w
   14002bd26:	ja     0x14002bd31
   14002bd28:	mov    DWORD PTR [rbp-0x11],r12d
   14002bd2c:	jmp    0x14002bf71
   14002bd31:	test   ax,ax
   14002bd34:	jne    0x14002bd52
   14002bd36:	add    r9w,r11w
   14002bd3a:	test   DWORD PTR [rbp-0x11],edi
   14002bd3d:	jne    0x14002bd52
   14002bd3f:	test   r8d,r8d
   14002bd42:	jne    0x14002bd52
   14002bd44:	test   edx,edx
   14002bd46:	jne    0x14002bd52
   14002bd48:	mov    WORD PTR [rbp-0xf],r12w
   14002bd4d:	jmp    0x14002bf77
   14002bd52:	test   cx,cx
   14002bd55:	jne    0x14002bd6c
   14002bd57:	add    r9w,r11w
   14002bd5b:	test   DWORD PTR [rbp-0x1],edi
   14002bd5e:	jne    0x14002bd6c
   14002bd60:	cmp    DWORD PTR [rbp-0x5],r12d
   14002bd64:	jne    0x14002bd6c
   14002bd66:	cmp    DWORD PTR [rbp-0x9],r12d
   14002bd6a:	je     0x14002bd28
   14002bd6c:	mov    edi,r12d
   14002bd6f:	lea    rdx,[rbp-0x29]
   14002bd73:	mov    esi,r14d
   14002bd76:	test   r14d,r14d
   14002bd79:	jle    0x14002bdd8
   14002bd7b:	lea    eax,[rdi+rdi*1]
   14002bd7e:	lea    r15,[rbp-0x19]
   14002bd82:	mov    r12d,edi
   14002bd85:	movsxd rcx,eax
   14002bd88:	and    r12d,r11d
   14002bd8b:	lea    r14,[rbp-0x1]
   14002bd8f:	add    r15,rcx
   14002bd92:	xor    ebx,ebx
   14002bd94:	movzx  eax,WORD PTR [r15]
   14002bd98:	movzx  ecx,WORD PTR [r14]
   14002bd9c:	mov    r8d,ebx
   14002bd9f:	imul   ecx,eax
   14002bda2:	mov    eax,DWORD PTR [rdx]
   14002bda4:	lea    r10d,[rax+rcx*1]
   14002bda8:	cmp    r10d,eax
   14002bdab:	jb     0x14002bdb2
   14002bdad:	cmp    r10d,ecx
   14002bdb0:	jae    0x14002bdb5
   14002bdb2:	mov    r8d,r11d
   14002bdb5:	mov    DWORD PTR [rdx],r10d
   14002bdb8:	test   r8d,r8d
   14002bdbb:	je     0x14002bdc2
   14002bdbd:	add    WORD PTR [rdx+0x4],r11w
   14002bdc2:	sub    esi,r11d
   14002bdc5:	add    r15,0x2
   14002bdc9:	sub    r14,0x2
   14002bdcd:	test   esi,esi
   14002bdcf:	jg     0x14002bd94
   14002bdd1:	mov    r14d,DWORD PTR [rbp-0x49]
   14002bdd5:	xor    r12d,r12d
   14002bdd8:	sub    r14d,r11d
   14002bddb:	add    rdx,0x2
   14002bddf:	add    edi,r11d
   14002bde2:	mov    DWORD PTR [rbp-0x49],r14d
   14002bde6:	test   r14d,r14d
   14002bde9:	jg     0x14002bd73
   14002bdeb:	mov    rbx,QWORD PTR [rbp-0x41]
   14002bdef:	mov    r8d,DWORD PTR [rbp-0x21]
   14002bdf3:	mov    r10d,DWORD PTR [rbp-0x29]
   14002bdf7:	mov    eax,0xc002
   14002bdfc:	mov    esi,0x80000000
   14002be01:	mov    r14d,0xffff
   14002be07:	add    r9w,ax
   14002be0b:	test   r9w,r9w
   14002be0f:	jle    0x14002be4d
   14002be11:	test   esi,r8d
   14002be14:	jne    0x14002be47
   14002be16:	mov    edi,DWORD PTR [rbp-0x25]
   14002be19:	mov    edx,r10d
   14002be1c:	add    r8d,r8d
   14002be1f:	shr    edx,0x1f
   14002be22:	add    r10d,r10d
   14002be25:	mov    ecx,edi
   14002be27:	shr    ecx,0x1f
   14002be2a:	lea    eax,[rdi+rdi*1]
   14002be2d:	add    r9w,r14w
   14002be31:	or     eax,edx
   14002be33:	or     r8d,ecx
   14002be36:	mov    DWORD PTR [rbp-0x29],r10d
   14002be3a:	mov    DWORD PTR [rbp-0x25],eax
   14002be3d:	mov    DWORD PTR [rbp-0x21],r8d
   14002be41:	test   r9w,r9w
   14002be45:	jg     0x14002be11
   14002be47:	test   r9w,r9w
   14002be4b:	jg     0x14002beb2
   14002be4d:	add    r9w,r14w
   14002be51:	jns    0x14002beb2
   14002be53:	mov    ebx,DWORD PTR [rbp-0x65]
   14002be56:	movzx  eax,r9w
   14002be5a:	neg    ax
   14002be5d:	movzx  edx,ax
   14002be60:	add    r9w,dx
   14002be64:	test   BYTE PTR [rbp-0x29],r11b
   14002be68:	je     0x14002be6d
   14002be6a:	add    ebx,r11d
   14002be6d:	mov    edi,DWORD PTR [rbp-0x25]
   14002be70:	mov    eax,r8d
   14002be73:	shr    r10d,1
   14002be76:	mov    ecx,edi
   14002be78:	shl    eax,0x1f
   14002be7b:	shr    edi,1
   14002be7d:	shl    ecx,0x1f
   14002be80:	or     edi,eax
   14002be82:	shr    r8d,1
   14002be85:	or     r10d,ecx
   14002be88:	mov    DWORD PTR [rbp-0x25],edi
   14002be8b:	mov    DWORD PTR [rbp-0x29],r10d
   14002be8f:	sub    rdx,r11
   14002be92:	jne    0x14002be64
   14002be94:	test   ebx,ebx
   14002be96:	mov    rbx,QWORD PTR [rbp-0x41]
   14002be9a:	mov    DWORD PTR [rbp-0x21],r8d
   14002be9e:	je     0x14002beb2
   14002bea0:	movzx  eax,r10w
   14002bea4:	or     ax,r11w
   14002bea8:	mov    WORD PTR [rbp-0x29],ax
   14002beac:	mov    r10d,DWORD PTR [rbp-0x29]
   14002beb0:	jmp    0x14002beb6
   14002beb2:	movzx  eax,WORD PTR [rbp-0x29]
   14002beb6:	mov    ecx,0x8000
   14002bebb:	cmp    ax,cx
   14002bebe:	ja     0x14002bed0
   14002bec0:	and    r10d,0x1ffff
   14002bec7:	cmp    r10d,0x18000
   14002bece:	jne    0x14002bf19
   14002bed0:	mov    eax,DWORD PTR [rbp-0x27]
   14002bed3:	or     edx,0xffffffff
   14002bed6:	cmp    eax,edx
   14002bed8:	jne    0x14002bf13
   14002beda:	mov    eax,DWORD PTR [rbp-0x23]
   14002bedd:	mov    DWORD PTR [rbp-0x27],r12d
   14002bee1:	cmp    eax,edx
   14002bee3:	jne    0x14002bf07
   14002bee5:	movzx  eax,WORD PTR [rbp-0x1f]
   14002bee9:	mov    DWORD PTR [rbp-0x23],r12d
   14002beed:	cmp    ax,r14w
   14002bef1:	jne    0x14002befd
   14002bef3:	mov    WORD PTR [rbp-0x1f],cx
   14002bef7:	add    r9w,r11w
   14002befb:	jmp    0x14002bf0d
   14002befd:	add    ax,r11w
   14002bf01:	mov    WORD PTR [rbp-0x1f],ax
   14002bf05:	jmp    0x14002bf0d
   14002bf07:	add    eax,r11d
   14002bf0a:	mov    DWORD PTR [rbp-0x23],eax
   14002bf0d:	mov    r8d,DWORD PTR [rbp-0x21]
   14002bf11:	jmp    0x14002bf19
   14002bf13:	add    eax,r11d
   14002bf16:	mov    DWORD PTR [rbp-0x27],eax
   14002bf19:	mov    eax,0x7fff
   14002bf1e:	cmp    r9w,ax
   14002bf22:	jb     0x14002bf3c
   14002bf24:	neg    r13w
   14002bf28:	mov    r8d,r12d
   14002bf2b:	mov    edx,r12d
   14002bf2e:	sbb    eax,eax
   14002bf30:	and    eax,esi
   14002bf32:	add    eax,0x7fff8000
   14002bf37:	mov    DWORD PTR [rbp-0x11],eax
   14002bf3a:	jmp    0x14002bf7c
   14002bf3c:	movzx  eax,WORD PTR [rbp-0x27]
   14002bf40:	or     r9w,r13w
   14002bf44:	mov    DWORD PTR [rbp-0x13],r8d
   14002bf48:	mov    WORD PTR [rbp-0x19],ax
   14002bf4c:	mov    eax,DWORD PTR [rbp-0x25]
   14002bf4f:	mov    WORD PTR [rbp-0xf],r9w
   14002bf54:	mov    DWORD PTR [rbp-0x17],eax
   14002bf57:	mov    r8d,DWORD PTR [rbp-0x15]
   14002bf5b:	mov    edx,DWORD PTR [rbp-0x19]
   14002bf5e:	jmp    0x14002bf7c
   14002bf60:	neg    r13w
   14002bf64:	sbb    eax,eax
   14002bf66:	and    eax,r15d
   14002bf69:	add    eax,0x7fff8000
   14002bf6e:	mov    DWORD PTR [rbp-0x11],eax
   14002bf71:	mov    edx,r12d
   14002bf74:	mov    r8d,r12d
   14002bf77:	mov    ecx,0x8000
   14002bf7c:	mov    eax,DWORD PTR [rbp-0x61]
   14002bf7f:	mov    r14d,DWORD PTR [rbp-0x4d]
   14002bf83:	mov    WORD PTR [rbx],ax
   14002bf86:	test   BYTE PTR [rbp-0x39],r11b
   14002bf8a:	je     0x14002bfa9
   14002bf8c:	cwde   
   14002bf8d:	add    r14d,eax
   14002bf90:	test   r14d,r14d
   14002bf93:	jg     0x14002bfa9
   14002bf95:	cmp    WORD PTR [rbp-0x67],cx
   14002bf99:	mov    eax,0x20
   14002bf9e:	lea    ecx,[rax+0xd]
   14002bfa1:	cmove  eax,ecx
   14002bfa4:	jmp    0x14002b7e5
   14002bfa9:	mov    r9d,DWORD PTR [rbp-0x11]
   14002bfad:	mov    eax,0x15
   14002bfb2:	mov    WORD PTR [rbp-0xf],r12w
   14002bfb7:	mov    esi,DWORD PTR [rbp-0x11]
   14002bfba:	cmp    r14d,eax
   14002bfbd:	lea    r10d,[rax-0xd]
   14002bfc1:	cmovg  r14d,eax
   14002bfc5:	shr    r9d,0x10
   14002bfc9:	sub    r9d,0x3ffe
   14002bfd0:	mov    ecx,r8d
   14002bfd3:	mov    eax,edx
   14002bfd5:	add    esi,esi
   14002bfd7:	add    r8d,r8d
   14002bfda:	shr    eax,0x1f
   14002bfdd:	shr    ecx,0x1f
   14002bfe0:	or     r8d,eax
   14002bfe3:	or     esi,ecx
   14002bfe5:	add    edx,edx
   14002bfe7:	sub    r10,r11
   14002bfea:	jne    0x14002bfd0
   14002bfec:	mov    DWORD PTR [rbp-0x15],r8d
   14002bff0:	mov    DWORD PTR [rbp-0x19],edx
   14002bff3:	test   r9d,r9d
   14002bff6:	jns    0x14002c02a
   14002bff8:	neg    r9d
   14002bffb:	movzx  r10d,r9b
   14002bfff:	test   r10d,r10d
   14002c002:	jle    0x14002c02a
   14002c004:	mov    ecx,r8d
   14002c007:	mov    eax,esi
   14002c009:	shr    edx,1
   14002c00b:	shr    r8d,1
   14002c00e:	shl    eax,0x1f
   14002c011:	shl    ecx,0x1f
   14002c014:	sub    r10d,r11d
   14002c017:	shr    esi,1
   14002c019:	or     r8d,eax
   14002c01c:	or     edx,ecx
   14002c01e:	test   r10d,r10d
   14002c021:	jg     0x14002c004
   14002c023:	mov    DWORD PTR [rbp-0x15],r8d
   14002c027:	mov    DWORD PTR [rbp-0x19],edx
   14002c02a:	lea    r15d,[r14+0x1]
   14002c02e:	lea    rdi,[rbx+0x4]
   14002c032:	mov    r10,rdi
   14002c035:	test   r15d,r15d
   14002c038:	jle    0x14002c112
   14002c03e:	movsd  xmm0,QWORD PTR [rbp-0x19]
   14002c043:	mov    ecx,r8d
   14002c046:	add    r8d,r8d
   14002c049:	shr    ecx,0x1f
   14002c04c:	mov    eax,edx
   14002c04e:	add    edx,edx
   14002c050:	shr    eax,0x1f
   14002c053:	lea    r9d,[rsi+rsi*1]
   14002c057:	movsd  QWORD PTR [rbp+0x7],xmm0
   14002c05c:	or     r8d,eax
   14002c05f:	or     r9d,ecx
   14002c062:	mov    eax,edx
   14002c064:	mov    ecx,r8d
   14002c067:	shr    eax,0x1f
   14002c06a:	add    r8d,r8d
   14002c06d:	or     r8d,eax
   14002c070:	mov    eax,DWORD PTR [rbp+0x7]
   14002c073:	add    edx,edx
   14002c075:	shr    ecx,0x1f
   14002c078:	add    r9d,r9d
   14002c07b:	lea    r12d,[rax+rdx*1]
   14002c07f:	or     r9d,ecx
   14002c082:	cmp    r12d,edx
   14002c085:	jb     0x14002c08c
   14002c087:	cmp    r12d,eax
   14002c08a:	jae    0x14002c0ad
   14002c08c:	xor    r14d,r14d
   14002c08f:	lea    eax,[r8+0x1]
   14002c093:	mov    ecx,r14d
   14002c096:	cmp    eax,r8d
   14002c099:	jb     0x14002c0a0
   14002c09b:	cmp    eax,r11d
   14002c09e:	jae    0x14002c0a3
   14002c0a0:	mov    ecx,r11d
   14002c0a3:	mov    r8d,eax
   14002c0a6:	test   ecx,ecx
   14002c0a8:	je     0x14002c0ad
   14002c0aa:	add    r9d,r11d
   14002c0ad:	mov    rax,QWORD PTR [rbp+0x7]
   14002c0b1:	shr    rax,0x20
   14002c0b5:	lea    r14d,[r8+rax*1]
   14002c0b9:	cmp    r14d,r8d
   14002c0bc:	jb     0x14002c0c3
   14002c0be:	cmp    r14d,eax
   14002c0c1:	jae    0x14002c0c6
   14002c0c3:	add    r9d,r11d
   14002c0c6:	mov    eax,r12d
   14002c0c9:	add    r9d,esi
   14002c0cc:	lea    edx,[r12+r12*1]
   14002c0d0:	shr    eax,0x1f
   14002c0d3:	xor    r12d,r12d
   14002c0d6:	lea    r8d,[r14+r14*1]
   14002c0da:	or     r8d,eax
   14002c0dd:	mov    ecx,r14d
   14002c0e0:	lea    eax,[r9+r9*1]
   14002c0e4:	shr    ecx,0x1f
   14002c0e7:	sub    r15d,r11d
   14002c0ea:	mov    DWORD PTR [rbp-0x19],edx
   14002c0ed:	or     eax,ecx
   14002c0ef:	mov    DWORD PTR [rbp-0x15],r8d
   14002c0f3:	mov    DWORD PTR [rbp-0x11],eax
   14002c0f6:	shr    eax,0x18
   14002c0f9:	mov    BYTE PTR [rbp-0xe],r12b
   14002c0fd:	add    al,0x30
   14002c0ff:	mov    BYTE PTR [r10],al
   14002c102:	add    r10,r11
   14002c105:	test   r15d,r15d
   14002c108:	jle    0x14002c112
   14002c10a:	mov    esi,DWORD PTR [rbp-0x11]
   14002c10d:	jmp    0x14002c03e
   14002c112:	sub    r10,r11
   14002c115:	mov    al,BYTE PTR [r10]
   14002c118:	sub    r10,r11
   14002c11b:	cmp    al,0x35
   14002c11d:	jl     0x14002c189
   14002c11f:	jmp    0x14002c12e
   14002c121:	cmp    BYTE PTR [r10],0x39
   14002c125:	jne    0x14002c133
   14002c127:	mov    BYTE PTR [r10],0x30
   14002c12b:	sub    r10,r11
   14002c12e:	cmp    r10,rdi
   14002c131:	jae    0x14002c121
   14002c133:	cmp    r10,rdi
   14002c136:	jae    0x14002c13f
   14002c138:	add    r10,r11
   14002c13b:	add    WORD PTR [rbx],r11w
   14002c13f:	add    BYTE PTR [r10],r11b
   14002c142:	sub    r10b,bl
   14002c145:	sub    r10b,0x3
   14002c149:	movsx  rax,r10b
   14002c14d:	mov    BYTE PTR [rbx+0x3],r10b
   14002c151:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   14002c156:	mov    eax,r11d
   14002c159:	mov    rcx,QWORD PTR [rbp+0x17]
   14002c15d:	xor    rcx,rsp
   14002c160:	call   0x1400187d0
   14002c165:	mov    rbx,QWORD PTR [rsp+0x108]
   14002c16d:	add    rsp,0xc0
   14002c174:	pop    r15
   14002c176:	pop    r14
   14002c178:	pop    r13
   14002c17a:	pop    r12
   14002c17c:	pop    rdi
   14002c17d:	pop    rsi
   14002c17e:	pop    rbp
   14002c17f:	ret    
   14002c180:	cmp    BYTE PTR [r10],0x30
   14002c184:	jne    0x14002c18e
   14002c186:	sub    r10,r11
   14002c189:	cmp    r10,rdi
   14002c18c:	jae    0x14002c180
   14002c18e:	cmp    r10,rdi
   14002c191:	jae    0x14002c142
   14002c193:	mov    eax,0x20
   14002c198:	mov    r9d,0x8000
   14002c19e:	mov    WORD PTR [rbx],r12w
   14002c1a2:	cmp    WORD PTR [rbp-0x67],r9w
   14002c1a7:	lea    ecx,[rax+0xd]
   14002c1aa:	mov    BYTE PTR [rbx+0x3],r11b
   14002c1ae:	cmove  eax,ecx
   14002c1b1:	mov    BYTE PTR [rbx+0x2],al
   14002c1b4:	mov    BYTE PTR [rdi],0x30
   14002c1b7:	jmp    0x14002b7f2
   14002c1bc:	xor    r9d,r9d
   14002c1bf:	xor    r8d,r8d
   14002c1c2:	xor    edx,edx
   14002c1c4:	xor    ecx,ecx
   14002c1c6:	mov    QWORD PTR [rsp+0x20],r12
   14002c1cb:	call   0x14001ffd8
   14002c1d0:	int3   
   14002c1d1:	xor    r9d,r9d
   14002c1d4:	xor    r8d,r8d
   14002c1d7:	xor    edx,edx
   14002c1d9:	xor    ecx,ecx
   14002c1db:	mov    QWORD PTR [rsp+0x20],r12
   14002c1e0:	call   0x14001ffd8
   14002c1e5:	int3   
   14002c1e6:	xor    r9d,r9d
   14002c1e9:	xor    r8d,r8d
   14002c1ec:	xor    edx,edx
   14002c1ee:	xor    ecx,ecx
   14002c1f0:	mov    QWORD PTR [rsp+0x20],r12
   14002c1f5:	call   0x14001ffd8
   14002c1fa:	int3   
   14002c1fb:	xor    r9d,r9d
   14002c1fe:	xor    r8d,r8d
   14002c201:	xor    edx,edx
   14002c203:	xor    ecx,ecx
   14002c205:	mov    QWORD PTR [rsp+0x20],r12
   14002c20a:	call   0x14001ffd8
   14002c20f:	int3   
   14002c210:	sub    rsp,0x38
   14002c214:	cmp    r9d,0xa
   14002c218:	jne    0x14002c228
   14002c21a:	test   ecx,ecx
   14002c21c:	jns    0x14002c228
   14002c21e:	mov    DWORD PTR [rsp+0x20],0x1
   14002c226:	jmp    0x14002c22d
   14002c228:	and    DWORD PTR [rsp+0x20],0x0
   14002c22d:	call   0x14002c238
   14002c232:	add    rsp,0x38
   14002c236:	ret    
   14002c237:	int3   
   14002c238:	mov    QWORD PTR [rsp+0x8],rbx
   14002c23d:	mov    QWORD PTR [rsp+0x10],rbp
   14002c242:	mov    QWORD PTR [rsp+0x18],rsi
   14002c247:	push   rdi
   14002c248:	sub    rsp,0x20
   14002c24c:	xor    ebp,ebp
   14002c24e:	mov    esi,r9d
   14002c251:	mov    rdi,r8
   14002c254:	mov    r10,rdx
   14002c257:	mov    r11d,ecx
   14002c25a:	test   rdx,rdx
   14002c25d:	jne    0x14002c277
   14002c25f:	call   0x14001b864
   14002c264:	mov    ebx,0x16
   14002c269:	mov    DWORD PTR [rax],ebx
   14002c26b:	call   0x14001ffb8
   14002c270:	mov    eax,ebx
   14002c272:	jmp    0x14002c333
   14002c277:	test   r8,r8
   14002c27a:	je     0x14002c25f
   14002c27c:	mov    WORD PTR [rdx],bp
   14002c27f:	mov    edx,DWORD PTR [rsp+0x50]
   14002c283:	mov    eax,edx
   14002c285:	neg    eax
   14002c287:	sbb    rcx,rcx
   14002c28a:	neg    rcx
   14002c28d:	inc    rcx
   14002c290:	cmp    r8,rcx
   14002c293:	ja     0x14002c2a1
   14002c295:	call   0x14001b864
   14002c29a:	mov    ebx,0x22
   14002c29f:	jmp    0x14002c269
   14002c2a1:	lea    eax,[r9-0x2]
   14002c2a5:	mov    ebx,0x22
   14002c2aa:	cmp    eax,ebx
   14002c2ac:	ja     0x14002c25f
   14002c2ae:	mov    rcx,rbp
   14002c2b1:	mov    r8,r10
   14002c2b4:	test   edx,edx
   14002c2b6:	je     0x14002c2c9
   14002c2b8:	lea    eax,[rbx+0xb]
   14002c2bb:	lea    r8,[r10+0x2]
   14002c2bf:	lea    ecx,[rbx-0x21]
   14002c2c2:	mov    WORD PTR [r10],ax
   14002c2c6:	neg    r11d
   14002c2c9:	mov    r9,r8
   14002c2cc:	xor    edx,edx
   14002c2ce:	mov    eax,r11d
   14002c2d1:	div    esi
   14002c2d3:	mov    r11d,eax
   14002c2d6:	cmp    edx,0x9
   14002c2d9:	jbe    0x14002c2e1
   14002c2db:	add    dx,0x57
   14002c2df:	jmp    0x14002c2e5
   14002c2e1:	add    dx,0x30
   14002c2e5:	mov    WORD PTR [r8],dx
   14002c2e9:	inc    rcx
   14002c2ec:	add    r8,0x2
   14002c2f0:	test   eax,eax
   14002c2f2:	je     0x14002c2f9
   14002c2f4:	cmp    rcx,rdi
   14002c2f7:	jb     0x14002c2cc
   14002c2f9:	cmp    rcx,rdi
   14002c2fc:	jb     0x14002c30c
   14002c2fe:	mov    WORD PTR [r10],bp
   14002c302:	call   0x14001b864
   14002c307:	jmp    0x14002c269
   14002c30c:	mov    WORD PTR [r8],bp
   14002c310:	sub    r8,0x2
   14002c314:	movzx  eax,WORD PTR [r9]
   14002c318:	movzx  ecx,WORD PTR [r8]
   14002c31c:	mov    WORD PTR [r8],ax
   14002c320:	mov    WORD PTR [r9],cx
   14002c324:	add    r9,0x2
   14002c328:	sub    r8,0x2
   14002c32c:	cmp    r9,r8
   14002c32f:	jb     0x14002c314
   14002c331:	xor    eax,eax
   14002c333:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c338:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c33d:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c342:	add    rsp,0x20
   14002c346:	pop    rdi
   14002c347:	ret    
   14002c348:	xor    edx,edx
   14002c34a:	lea    r8d,[rdx+0xa]
   14002c34e:	jmp    0x14002cbb4
   14002c353:	int3   
   14002c354:	sub    rsp,0x18
   14002c358:	movdqa xmm2,XMMWORD PTR [rsp]
   14002c35d:	movzx  eax,dx
   14002c360:	mov    r8,rcx
   14002c363:	movd   xmm0,eax
   14002c367:	xor    r9d,r9d
   14002c36a:	pshuflw xmm1,xmm0,0x0
   14002c36f:	pshufd xmm3,xmm1,0x0
   14002c374:	mov    rax,r8
   14002c377:	and    eax,0xfff
   14002c37c:	cmp    rax,0xff0
   14002c382:	ja     0x14002c3af
   14002c384:	movdqu xmm1,XMMWORD PTR [r8]
   14002c389:	movdqa xmm0,xmm2
   14002c38d:	pxor   xmm0,xmm2
   14002c391:	movdqa xmm2,xmm0
   14002c395:	pcmpeqw xmm2,xmm1
   14002c399:	pcmpeqw xmm1,xmm3
   14002c39d:	por    xmm2,xmm1
   14002c3a1:	pmovmskb eax,xmm2
   14002c3a5:	test   eax,eax
   14002c3a7:	jne    0x14002c3c1
   14002c3a9:	add    r8,0x10
   14002c3ad:	jmp    0x14002c374
   14002c3af:	cmp    WORD PTR [r8],dx
   14002c3b3:	je     0x14002c3d8
   14002c3b5:	cmp    WORD PTR [r8],r9w
   14002c3b9:	je     0x14002c3d4
   14002c3bb:	add    r8,0x2
   14002c3bf:	jmp    0x14002c374
   14002c3c1:	bsf    ecx,eax
   14002c3c4:	add    r8,rcx
   14002c3c7:	cmp    WORD PTR [r8],dx
   14002c3cb:	cmove  r9,r8
   14002c3cf:	mov    rax,r9
   14002c3d2:	jmp    0x14002c3db
   14002c3d4:	xor    eax,eax
   14002c3d6:	jmp    0x14002c3db
   14002c3d8:	mov    rax,r8
   14002c3db:	add    rsp,0x18
   14002c3df:	ret    
   14002c3e0:	sub    rsp,0x28
   14002c3e4:	xor    r9d,r9d
   14002c3e7:	mov    r11,r8
   14002c3ea:	mov    r10,rcx
   14002c3ed:	cmp    DWORD PTR [rip+0x1857c],r9d        # 0x140044970
   14002c3f4:	jne    0x14002c46e
   14002c3f6:	test   r8,r8
   14002c3f9:	je     0x14002c466
   14002c3fb:	test   rcx,rcx
   14002c3fe:	jne    0x14002c41a
   14002c400:	call   0x14001b864
   14002c405:	mov    DWORD PTR [rax],0x16
   14002c40b:	call   0x14001ffb8
   14002c410:	mov    eax,0x7fffffff
   14002c415:	add    rsp,0x28
   14002c419:	ret    
   14002c41a:	test   rdx,rdx
   14002c41d:	je     0x14002c400
   14002c41f:	sub    r10,rdx
   14002c422:	movzx  ecx,WORD PTR [r10+rdx*1]
   14002c427:	lea    eax,[rcx-0x41]
   14002c42a:	cmp    ax,0x19
   14002c42e:	ja     0x14002c434
   14002c430:	add    cx,0x20
   14002c434:	movzx  r8d,WORD PTR [rdx]
   14002c438:	lea    eax,[r8-0x41]
   14002c43c:	cmp    ax,0x19
   14002c440:	ja     0x14002c447
   14002c442:	add    r8w,0x20
   14002c447:	add    rdx,0x2
   14002c44b:	dec    r11
   14002c44e:	je     0x14002c45b
   14002c450:	test   cx,cx
   14002c453:	je     0x14002c45b
   14002c455:	cmp    cx,r8w
   14002c459:	je     0x14002c422
   14002c45b:	movzx  eax,r8w
   14002c45f:	movzx  r9d,cx
   14002c463:	sub    r9d,eax
   14002c466:	mov    eax,r9d
   14002c469:	add    rsp,0x28
   14002c46d:	ret    
   14002c46e:	add    rsp,0x28
   14002c472:	jmp    0x14002c478
   14002c477:	int3   
   14002c478:	mov    rax,rsp
   14002c47b:	mov    QWORD PTR [rax+0x8],rbx
   14002c47f:	mov    QWORD PTR [rax+0x10],rbp
   14002c483:	mov    QWORD PTR [rax+0x18],rsi
   14002c487:	mov    QWORD PTR [rax+0x20],rdi
   14002c48b:	push   r14
   14002c48d:	sub    rsp,0x40
   14002c491:	xor    r14d,r14d
   14002c494:	mov    rbp,r8
   14002c497:	mov    rdi,rdx
   14002c49a:	mov    rsi,rcx
   14002c49d:	mov    eax,r14d
   14002c4a0:	test   r8,r8
   14002c4a3:	je     0x14002c573
   14002c4a9:	test   rcx,rcx
   14002c4ac:	jne    0x14002c4c8
   14002c4ae:	call   0x14001b864
   14002c4b3:	mov    DWORD PTR [rax],0x16
   14002c4b9:	call   0x14001ffb8
   14002c4be:	mov    eax,0x7fffffff
   14002c4c3:	jmp    0x14002c573
   14002c4c8:	test   rdx,rdx
   14002c4cb:	je     0x14002c4ae
   14002c4cd:	lea    rcx,[rsp+0x20]
   14002c4d2:	mov    rdx,r9
   14002c4d5:	call   0x140019058
   14002c4da:	mov    rax,QWORD PTR [rsp+0x20]
   14002c4df:	cmp    QWORD PTR [rax+0x138],r14
   14002c4e6:	jne    0x14002c521
   14002c4e8:	sub    rsi,rdi
   14002c4eb:	movzx  ebx,WORD PTR [rsi+rdi*1]
   14002c4ef:	lea    eax,[rbx-0x41]
   14002c4f2:	cmp    ax,0x19
   14002c4f6:	ja     0x14002c4fc
   14002c4f8:	add    bx,0x20
   14002c4fc:	movzx  ecx,WORD PTR [rdi]
   14002c4ff:	lea    eax,[rcx-0x41]
   14002c502:	cmp    ax,0x19
   14002c506:	ja     0x14002c50c
   14002c508:	add    cx,0x20
   14002c50c:	add    rdi,0x2
   14002c510:	dec    rbp
   14002c513:	je     0x14002c558
   14002c515:	test   bx,bx
   14002c518:	je     0x14002c558
   14002c51a:	cmp    bx,cx
   14002c51d:	je     0x14002c4eb
   14002c51f:	jmp    0x14002c558
   14002c521:	movzx  ecx,WORD PTR [rsi]
   14002c524:	lea    rdx,[rsp+0x20]
   14002c529:	call   0x140019100
   14002c52e:	movzx  ecx,WORD PTR [rdi]
   14002c531:	lea    rdx,[rsp+0x20]
   14002c536:	movzx  ebx,ax
   14002c539:	call   0x140019100
   14002c53e:	lea    rsi,[rsi+0x2]
   14002c542:	lea    rdi,[rdi+0x2]
   14002c546:	movzx  ecx,ax
   14002c549:	dec    rbp
   14002c54c:	je     0x14002c558
   14002c54e:	test   bx,bx
   14002c551:	je     0x14002c558
   14002c553:	cmp    bx,ax
   14002c556:	je     0x14002c521
   14002c558:	movzx  ecx,cx
   14002c55b:	movzx  eax,bx
   14002c55e:	sub    eax,ecx
   14002c560:	cmp    BYTE PTR [rsp+0x38],r14b
   14002c565:	je     0x14002c573
   14002c567:	mov    rcx,QWORD PTR [rsp+0x30]
   14002c56c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002c573:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c578:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c57d:	mov    rsi,QWORD PTR [rsp+0x60]
   14002c582:	mov    rdi,QWORD PTR [rsp+0x68]
   14002c587:	add    rsp,0x40
   14002c58b:	pop    r14
   14002c58d:	ret    
   14002c58e:	int3   
   14002c58f:	int3   
   14002c590:	mov    QWORD PTR [rsp+0x18],rbx
   14002c595:	mov    DWORD PTR [rsp+0x8],ecx
   14002c599:	push   rsi
   14002c59a:	push   rdi
   14002c59b:	push   r14
   14002c59d:	sub    rsp,0x20
   14002c5a1:	movsxd rdi,ecx
   14002c5a4:	cmp    edi,0xfffffffe
   14002c5a7:	jne    0x14002c5b9
   14002c5a9:	call   0x14001b864
   14002c5ae:	mov    DWORD PTR [rax],0x9
   14002c5b4:	jmp    0x14002c656
   14002c5b9:	test   ecx,ecx
   14002c5bb:	js     0x14002c646
   14002c5c1:	cmp    edi,DWORD PTR [rip+0x195f9]        # 0x140045bc0
   14002c5c7:	jae    0x14002c646
   14002c5c9:	mov    rax,rdi
   14002c5cc:	mov    rbx,rdi
   14002c5cf:	sar    rbx,0x5
   14002c5d3:	lea    r14,[rip+0x17a46]        # 0x140044020
   14002c5da:	and    eax,0x1f
   14002c5dd:	imul   rsi,rax,0x58
   14002c5e1:	mov    rax,QWORD PTR [r14+rbx*8]
   14002c5e5:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002c5ea:	and    ecx,0x1
   14002c5ed:	je     0x14002c646
   14002c5ef:	mov    ecx,edi
   14002c5f1:	call   0x140029fc8
   14002c5f6:	nop
   14002c5f7:	mov    rax,QWORD PTR [r14+rbx*8]
   14002c5fb:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002c600:	je     0x14002c62d
   14002c602:	mov    ecx,edi
   14002c604:	call   0x14002a10c
   14002c609:	mov    rcx,rax
   14002c60c:	call   QWORD PTR [rip+0x2bde]        # 0x14002f1f0
   14002c612:	test   eax,eax
   14002c614:	jne    0x14002c620
   14002c616:	call   QWORD PTR [rip+0x2b84]        # 0x14002f1a0
   14002c61c:	mov    ebx,eax
   14002c61e:	jmp    0x14002c622
   14002c620:	xor    ebx,ebx
   14002c622:	test   ebx,ebx
   14002c624:	je     0x14002c63b
   14002c626:	call   0x14001b7f4
   14002c62b:	mov    DWORD PTR [rax],ebx
   14002c62d:	call   0x14001b864
   14002c632:	mov    DWORD PTR [rax],0x9
   14002c638:	or     ebx,0xffffffff
   14002c63b:	mov    ecx,edi
   14002c63d:	call   0x14002a180
   14002c642:	mov    eax,ebx
   14002c644:	jmp    0x14002c659
   14002c646:	call   0x14001b864
   14002c64b:	mov    DWORD PTR [rax],0x9
   14002c651:	call   0x14001ffb8
   14002c656:	or     eax,0xffffffff
   14002c659:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c65e:	add    rsp,0x20
   14002c662:	pop    r14
   14002c664:	pop    rdi
   14002c665:	pop    rsi
   14002c666:	ret    
   14002c667:	int3   
   14002c668:	mov    QWORD PTR [rsp+0x8],rbx
   14002c66d:	push   rdi
   14002c66e:	sub    rsp,0x20
   14002c672:	or     edi,0xffffffff
   14002c675:	mov    rbx,rcx
   14002c678:	test   rcx,rcx
   14002c67b:	jne    0x14002c691
   14002c67d:	call   0x14001b864
   14002c682:	mov    DWORD PTR [rax],0x16
   14002c688:	call   0x14001ffb8
   14002c68d:	or     eax,edi
   14002c68f:	jmp    0x14002c6d7
   14002c691:	test   BYTE PTR [rcx+0x18],0x83
   14002c695:	je     0x14002c6d1
   14002c697:	call   0x140029db0
   14002c69c:	mov    rcx,rbx
   14002c69f:	mov    edi,eax
   14002c6a1:	call   0x14002cd3c
   14002c6a6:	mov    rcx,rbx
   14002c6a9:	call   0x14002721c
   14002c6ae:	mov    ecx,eax
   14002c6b0:	call   0x14002cbbc
   14002c6b5:	test   eax,eax
   14002c6b7:	jns    0x14002c6be
   14002c6b9:	or     edi,0xffffffff
   14002c6bc:	jmp    0x14002c6d1
   14002c6be:	mov    rcx,QWORD PTR [rbx+0x28]
   14002c6c2:	test   rcx,rcx
   14002c6c5:	je     0x14002c6d1
   14002c6c7:	call   0x14001a1ac
   14002c6cc:	and    QWORD PTR [rbx+0x28],0x0
   14002c6d1:	and    DWORD PTR [rbx+0x18],0x0
   14002c6d5:	mov    eax,edi
   14002c6d7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c6dc:	add    rsp,0x20
   14002c6e0:	pop    rdi
   14002c6e1:	ret    
   14002c6e2:	int3   
   14002c6e3:	int3   
   14002c6e4:	mov    QWORD PTR [rsp+0x10],rbx
   14002c6e9:	mov    QWORD PTR [rsp+0x8],rcx
   14002c6ee:	push   rdi
   14002c6ef:	sub    rsp,0x20
   14002c6f3:	mov    rbx,rcx
   14002c6f6:	or     edi,0xffffffff
   14002c6f9:	xor    eax,eax
   14002c6fb:	test   rcx,rcx
   14002c6fe:	setne  al
   14002c701:	test   eax,eax
   14002c703:	jne    0x14002c719
   14002c705:	call   0x14001b864
   14002c70a:	mov    DWORD PTR [rax],0x16
   14002c710:	call   0x14001ffb8
   14002c715:	mov    eax,edi
   14002c717:	jmp    0x14002c73f
   14002c719:	test   BYTE PTR [rcx+0x18],0x40
   14002c71d:	je     0x14002c725
   14002c71f:	and    DWORD PTR [rcx+0x18],0x0
   14002c723:	jmp    0x14002c715
   14002c725:	call   0x140027110
   14002c72a:	nop
   14002c72b:	mov    rcx,rbx
   14002c72e:	call   0x14002c668
   14002c733:	mov    edi,eax
   14002c735:	mov    rcx,rbx
   14002c738:	call   0x1400271ac
   14002c73d:	jmp    0x14002c715
   14002c73f:	mov    rbx,QWORD PTR [rsp+0x38]
   14002c744:	add    rsp,0x20
   14002c748:	pop    rdi
   14002c749:	ret    
   14002c74a:	int3   
   14002c74b:	int3   
   14002c74c:	sub    rsp,0x28
   14002c750:	mov    rcx,QWORD PTR [rip+0x160b9]        # 0x140042810
   14002c757:	lea    rax,[rcx+0x2]
   14002c75b:	cmp    rax,0x1
   14002c75f:	jbe    0x14002c767
   14002c761:	call   QWORD PTR [rip+0x2a19]        # 0x14002f180
   14002c767:	add    rsp,0x28
   14002c76b:	ret    
   14002c76c:	sub    rsp,0x48
   14002c770:	and    QWORD PTR [rsp+0x30],0x0
   14002c776:	and    DWORD PTR [rsp+0x28],0x0
   14002c77b:	mov    r8d,0x3
   14002c781:	lea    rcx,[rip+0xb3a0]        # 0x140037b28
   14002c788:	xor    r9d,r9d
   14002c78b:	mov    edx,0x40000000
   14002c790:	mov    DWORD PTR [rsp+0x20],r8d
   14002c795:	call   QWORD PTR [rip+0x290d]        # 0x14002f0a8
   14002c79b:	mov    QWORD PTR [rip+0x1606e],rax        # 0x140042810
   14002c7a2:	add    rsp,0x48
   14002c7a6:	ret    
   14002c7a7:	int3   
   14002c7a8:	mov    QWORD PTR [rsp+0x8],rbx
   14002c7ad:	mov    QWORD PTR [rsp+0x10],rbp
   14002c7b2:	mov    QWORD PTR [rsp+0x18],rsi
   14002c7b7:	push   rdi
   14002c7b8:	push   r12
   14002c7ba:	push   r14
   14002c7bc:	sub    rsp,0x10
   14002c7c0:	and    DWORD PTR [r8],0x0
   14002c7c4:	and    DWORD PTR [r8+0x4],0x0
   14002c7c9:	and    DWORD PTR [r8+0x8],0x0
   14002c7ce:	mov    r10,r8
   14002c7d1:	mov    edi,edx
   14002c7d3:	mov    rbp,rcx
   14002c7d6:	mov    ebx,0x404e
   14002c7db:	test   edx,edx
   14002c7dd:	je     0x14002c924
   14002c7e3:	xor    r11d,r11d
   14002c7e6:	xor    r8d,r8d
   14002c7e9:	xor    r9d,r9d
   14002c7ec:	lea    r12d,[r11+0x1]
   14002c7f0:	movsd  xmm0,QWORD PTR [r10]
   14002c7f5:	mov    r14d,DWORD PTR [r10+0x8]
   14002c7f9:	mov    ecx,r8d
   14002c7fc:	shr    ecx,0x1f
   14002c7ff:	add    r8d,r8d
   14002c802:	add    r9d,r9d
   14002c805:	movsd  QWORD PTR [rsp],xmm0
   14002c80a:	or     r9d,ecx
   14002c80d:	lea    edx,[r11+r11*1]
   14002c811:	mov    eax,r11d
   14002c814:	shr    eax,0x1f
   14002c817:	add    r9d,r9d
   14002c81a:	or     r8d,eax
   14002c81d:	mov    eax,edx
   14002c81f:	add    edx,edx
   14002c821:	mov    ecx,r8d
   14002c824:	shr    eax,0x1f
   14002c827:	add    r8d,r8d
   14002c82a:	shr    ecx,0x1f
   14002c82d:	or     r8d,eax
   14002c830:	xor    eax,eax
   14002c832:	or     r9d,ecx
   14002c835:	mov    ecx,DWORD PTR [rsp]
   14002c838:	mov    DWORD PTR [r10],edx
   14002c83b:	lea    esi,[rdx+rcx*1]
   14002c83e:	mov    DWORD PTR [r10+0x4],r8d
   14002c842:	mov    DWORD PTR [r10+0x8],r9d
   14002c846:	cmp    esi,edx
   14002c848:	jb     0x14002c84e
   14002c84a:	cmp    esi,ecx
   14002c84c:	jae    0x14002c851
   14002c84e:	mov    eax,r12d
   14002c851:	mov    DWORD PTR [r10],esi
   14002c854:	test   eax,eax
   14002c856:	je     0x14002c87c
   14002c858:	mov    eax,r8d
   14002c85b:	inc    r8d
   14002c85e:	xor    ecx,ecx
   14002c860:	cmp    r8d,eax
   14002c863:	jb     0x14002c86a
   14002c865:	cmp    r8d,r12d
   14002c868:	jae    0x14002c86d
   14002c86a:	mov    ecx,r12d
   14002c86d:	mov    DWORD PTR [r10+0x4],r8d
   14002c871:	test   ecx,ecx
   14002c873:	je     0x14002c87c
   14002c875:	inc    r9d
   14002c878:	mov    DWORD PTR [r10+0x8],r9d
   14002c87c:	mov    rax,QWORD PTR [rsp]
   14002c880:	xor    ecx,ecx
   14002c882:	shr    rax,0x20
   14002c886:	lea    r11d,[r8+rax*1]
   14002c88a:	cmp    r11d,r8d
   14002c88d:	jb     0x14002c894
   14002c88f:	cmp    r11d,eax
   14002c892:	jae    0x14002c897
   14002c894:	mov    ecx,r12d
   14002c897:	mov    DWORD PTR [r10+0x4],r11d
   14002c89b:	test   ecx,ecx
   14002c89d:	je     0x14002c8a6
   14002c89f:	add    r9d,r12d
   14002c8a2:	mov    DWORD PTR [r10+0x8],r9d
   14002c8a6:	add    r9d,r14d
   14002c8a9:	lea    edx,[rsi+rsi*1]
   14002c8ac:	mov    ecx,r11d
   14002c8af:	shr    ecx,0x1f
   14002c8b2:	lea    r8d,[r11+r11*1]
   14002c8b6:	add    r9d,r9d
   14002c8b9:	or     r9d,ecx
   14002c8bc:	mov    eax,esi
   14002c8be:	mov    DWORD PTR [r10],edx
   14002c8c1:	shr    eax,0x1f
   14002c8c4:	mov    DWORD PTR [r10+0x8],r9d
   14002c8c8:	or     r8d,eax
   14002c8cb:	xor    eax,eax
   14002c8cd:	mov    DWORD PTR [r10+0x4],r8d
   14002c8d1:	movsx  ecx,BYTE PTR [rbp+0x0]
   14002c8d5:	lea    r11d,[rdx+rcx*1]
   14002c8d9:	cmp    r11d,edx
   14002c8dc:	jb     0x14002c8e3
   14002c8de:	cmp    r11d,ecx
   14002c8e1:	jae    0x14002c8e6
   14002c8e3:	mov    eax,r12d
   14002c8e6:	mov    DWORD PTR [r10],r11d
   14002c8e9:	test   eax,eax
   14002c8eb:	je     0x14002c911
   14002c8ed:	mov    eax,r8d
   14002c8f0:	inc    r8d
   14002c8f3:	xor    ecx,ecx
   14002c8f5:	cmp    r8d,eax
   14002c8f8:	jb     0x14002c8ff
   14002c8fa:	cmp    r8d,r12d
   14002c8fd:	jae    0x14002c902
   14002c8ff:	mov    ecx,r12d
   14002c902:	mov    DWORD PTR [r10+0x4],r8d
   14002c906:	test   ecx,ecx
   14002c908:	je     0x14002c911
   14002c90a:	inc    r9d
   14002c90d:	mov    DWORD PTR [r10+0x8],r9d
   14002c911:	add    rbp,r12
   14002c914:	mov    DWORD PTR [r10+0x4],r8d
   14002c918:	mov    DWORD PTR [r10+0x8],r9d
   14002c91c:	dec    edi
   14002c91e:	jne    0x14002c7f0
   14002c924:	cmp    DWORD PTR [r10+0x8],0x0
   14002c929:	jne    0x14002c965
   14002c92b:	mov    r8d,DWORD PTR [r10+0x4]
   14002c92f:	mov    edx,DWORD PTR [r10]
   14002c932:	mov    eax,r8d
   14002c935:	mov    r9d,r8d
   14002c938:	shl    eax,0x10
   14002c93b:	mov    ecx,edx
   14002c93d:	shl    edx,0x10
   14002c940:	shr    ecx,0x10
   14002c943:	shr    r9d,0x10
   14002c947:	mov    DWORD PTR [r10],edx
   14002c94a:	mov    r8d,ecx
   14002c94d:	or     r8d,eax
   14002c950:	mov    eax,0xfff0
   14002c955:	add    bx,ax
   14002c958:	test   r9d,r9d
   14002c95b:	je     0x14002c92f
   14002c95d:	mov    DWORD PTR [r10+0x4],r8d
   14002c961:	mov    DWORD PTR [r10+0x8],r9d
   14002c965:	mov    edx,DWORD PTR [r10+0x8]
   14002c969:	mov    r11d,0x8000
   14002c96f:	test   r11d,edx
   14002c972:	jne    0x14002c9ac
   14002c974:	mov    r9d,DWORD PTR [r10]
   14002c977:	mov    r8d,DWORD PTR [r10+0x4]
   14002c97b:	mov    ecx,r8d
   14002c97e:	mov    eax,r9d
   14002c981:	add    r8d,r8d
   14002c984:	shr    eax,0x1f
   14002c987:	add    edx,edx
   14002c989:	shr    ecx,0x1f
   14002c98c:	or     r8d,eax
   14002c98f:	mov    eax,0xffff
   14002c994:	or     edx,ecx
   14002c996:	add    bx,ax
   14002c999:	add    r9d,r9d
   14002c99c:	test   r11d,edx
   14002c99f:	je     0x14002c97b
   14002c9a1:	mov    DWORD PTR [r10],r9d
   14002c9a4:	mov    DWORD PTR [r10+0x4],r8d
   14002c9a8:	mov    DWORD PTR [r10+0x8],edx
   14002c9ac:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c9b1:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c9b6:	mov    WORD PTR [r10+0xa],bx
   14002c9bb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c9c0:	add    rsp,0x10
   14002c9c4:	pop    r14
   14002c9c6:	pop    r12
   14002c9c8:	pop    rdi
   14002c9c9:	ret    
   14002c9ca:	int3   
   14002c9cb:	int3   
   14002c9cc:	mov    QWORD PTR [rsp+0x18],rbx
   14002c9d1:	mov    QWORD PTR [rsp+0x8],rcx
   14002c9d6:	push   rbp
   14002c9d7:	push   rsi
   14002c9d8:	push   rdi
   14002c9d9:	push   r12
   14002c9db:	push   r13
   14002c9dd:	push   r14
   14002c9df:	push   r15
   14002c9e1:	sub    rsp,0x20
   14002c9e5:	mov    ebp,r9d
   14002c9e8:	mov    r14d,r8d
   14002c9eb:	mov    r15,rdx
   14002c9ee:	test   rdx,rdx
   14002c9f1:	je     0x14002c9f6
   14002c9f3:	mov    QWORD PTR [rdx],rcx
   14002c9f6:	test   rcx,rcx
   14002c9f9:	jne    0x14002ca12
   14002c9fb:	call   0x14001b864
   14002ca00:	mov    DWORD PTR [rax],0x16
   14002ca06:	call   0x14001ffb8
   14002ca0b:	xor    eax,eax
   14002ca0d:	jmp    0x14002cb9f
   14002ca12:	test   r8d,r8d
   14002ca15:	je     0x14002ca20
   14002ca17:	lea    eax,[r8-0x2]
   14002ca1b:	cmp    eax,0x22
   14002ca1e:	ja     0x14002c9fb
   14002ca20:	movzx  esi,WORD PTR [rcx]
   14002ca23:	xor    edi,edi
   14002ca25:	lea    rbx,[rcx+0x2]
   14002ca29:	lea    r13d,[rdi+0x8]
   14002ca2d:	jmp    0x14002ca36
   14002ca2f:	movzx  esi,WORD PTR [rbx]
   14002ca32:	add    rbx,0x2
   14002ca36:	mov    edx,r13d
   14002ca39:	movzx  ecx,si
   14002ca3c:	call   0x14001fdec
   14002ca41:	test   eax,eax
   14002ca43:	jne    0x14002ca2f
   14002ca45:	cmp    si,0x2d
   14002ca49:	jne    0x14002ca50
   14002ca4b:	or     ebp,0x2
   14002ca4e:	jmp    0x14002ca56
   14002ca50:	cmp    si,0x2b
   14002ca54:	jne    0x14002ca5d
   14002ca56:	movzx  esi,WORD PTR [rbx]
   14002ca59:	add    rbx,0x2
   14002ca5d:	mov    r13d,0xffdf
   14002ca63:	test   r14d,r14d
   14002ca66:	jne    0x14002ca97
   14002ca68:	movzx  ecx,si
   14002ca6b:	call   0x14002cd74
   14002ca70:	test   eax,eax
   14002ca72:	je     0x14002ca7c
   14002ca74:	mov    r14d,0xa
   14002ca7a:	jmp    0x14002cabe
   14002ca7c:	movzx  eax,WORD PTR [rbx]
   14002ca7f:	sub    ax,0x58
   14002ca83:	test   r13w,ax
   14002ca87:	je     0x14002ca91
   14002ca89:	mov    r14d,0x8
   14002ca8f:	jmp    0x14002cabe
   14002ca91:	mov    r14d,0x10
   14002ca97:	cmp    r14d,0x10
   14002ca9b:	jne    0x14002cabe
   14002ca9d:	movzx  ecx,si
   14002caa0:	call   0x14002cd74
   14002caa5:	test   eax,eax
   14002caa7:	jne    0x14002cabe
   14002caa9:	movzx  eax,WORD PTR [rbx]
   14002caac:	sub    ax,0x58
   14002cab0:	test   r13w,ax
   14002cab4:	jne    0x14002cabe
   14002cab6:	movzx  esi,WORD PTR [rbx+0x2]
   14002caba:	add    rbx,0x4
   14002cabe:	xor    edx,edx
   14002cac0:	or     eax,0xffffffff
   14002cac3:	div    r14d
   14002cac6:	mov    r13d,eax
   14002cac9:	mov    r12d,edx
   14002cacc:	movzx  ecx,si
   14002cacf:	call   0x14002cd74
   14002cad4:	cmp    eax,0xffffffff
   14002cad7:	jne    0x14002cafd
   14002cad9:	lea    ecx,[rsi-0x41]
   14002cadc:	cmp    cx,0x19
   14002cae0:	jbe    0x14002caeb
   14002cae2:	lea    eax,[rsi-0x61]
   14002cae5:	cmp    ax,0x19
   14002cae9:	ja     0x14002cb19
   14002caeb:	lea    eax,[rsi-0x61]
   14002caee:	cmp    ax,0x19
   14002caf2:	movzx  eax,si
   14002caf5:	ja     0x14002cafa
   14002caf7:	sub    eax,0x20
   14002cafa:	add    eax,0xffffffc9
   14002cafd:	cmp    eax,r14d
   14002cb00:	jae    0x14002cb19
   14002cb02:	or     ebp,0x8
   14002cb05:	cmp    edi,r13d
   14002cb08:	jb     0x14002cb33
   14002cb0a:	jne    0x14002cb11
   14002cb0c:	cmp    eax,r12d
   14002cb0f:	jbe    0x14002cb33
   14002cb11:	or     ebp,0x4
   14002cb14:	test   r15,r15
   14002cb17:	jne    0x14002cb39
   14002cb19:	mov    r12,QWORD PTR [rsp+0x60]
   14002cb1e:	sub    rbx,0x2
   14002cb22:	test   bpl,0x8
   14002cb26:	jne    0x14002cb42
   14002cb28:	test   r15,r15
   14002cb2b:	cmovne rbx,r12
   14002cb2f:	xor    edi,edi
   14002cb31:	jmp    0x14002cb8d
   14002cb33:	imul   edi,r14d
   14002cb37:	add    edi,eax
   14002cb39:	movzx  esi,WORD PTR [rbx]
   14002cb3c:	add    rbx,0x2
   14002cb40:	jmp    0x14002cacc
   14002cb42:	mov    esi,0x7fffffff
   14002cb47:	test   bpl,0x4
   14002cb4b:	jne    0x14002cb6a
   14002cb4d:	test   bpl,0x1
   14002cb51:	jne    0x14002cb8d
   14002cb53:	mov    eax,ebp
   14002cb55:	and    eax,0x2
   14002cb58:	je     0x14002cb62
   14002cb5a:	cmp    edi,0x80000000
   14002cb60:	ja     0x14002cb6a
   14002cb62:	test   eax,eax
   14002cb64:	jne    0x14002cb8d
   14002cb66:	cmp    edi,esi
   14002cb68:	jbe    0x14002cb8d
   14002cb6a:	call   0x14001b864
   14002cb6f:	mov    DWORD PTR [rax],0x22
   14002cb75:	test   bpl,0x1
   14002cb79:	je     0x14002cb80
   14002cb7b:	or     edi,0xffffffff
   14002cb7e:	jmp    0x14002cb8d
   14002cb80:	mov    al,bpl
   14002cb83:	and    al,0x2
   14002cb85:	neg    al
   14002cb87:	sbb    edi,edi
   14002cb89:	neg    edi
   14002cb8b:	add    edi,esi
   14002cb8d:	test   r15,r15
   14002cb90:	je     0x14002cb95
   14002cb92:	mov    QWORD PTR [r15],rbx
   14002cb95:	test   bpl,0x2
   14002cb99:	je     0x14002cb9d
   14002cb9b:	neg    edi
   14002cb9d:	mov    eax,edi
   14002cb9f:	mov    rbx,QWORD PTR [rsp+0x70]
   14002cba4:	add    rsp,0x20
   14002cba8:	pop    r15
   14002cbaa:	pop    r14
   14002cbac:	pop    r13
   14002cbae:	pop    r12
   14002cbb0:	pop    rdi
   14002cbb1:	pop    rsi
   14002cbb2:	pop    rbp
   14002cbb3:	ret    
   14002cbb4:	xor    r9d,r9d
   14002cbb7:	jmp    0x14002c9cc
   14002cbbc:	mov    QWORD PTR [rsp+0x18],rbx
   14002cbc1:	mov    DWORD PTR [rsp+0x8],ecx
   14002cbc5:	push   rsi
   14002cbc6:	push   rdi
   14002cbc7:	push   r14
   14002cbc9:	sub    rsp,0x20
   14002cbcd:	movsxd rbx,ecx
   14002cbd0:	cmp    ebx,0xfffffffe
   14002cbd3:	jne    0x14002cbed
   14002cbd5:	call   0x14001b7f4
   14002cbda:	and    DWORD PTR [rax],0x0
   14002cbdd:	call   0x14001b864
   14002cbe2:	mov    DWORD PTR [rax],0x9
   14002cbe8:	jmp    0x14002cc6e
   14002cbed:	test   ecx,ecx
   14002cbef:	js     0x14002cc56
   14002cbf1:	cmp    ebx,DWORD PTR [rip+0x18fc9]        # 0x140045bc0
   14002cbf7:	jae    0x14002cc56
   14002cbf9:	mov    rax,rbx
   14002cbfc:	mov    rdi,rbx
   14002cbff:	sar    rdi,0x5
   14002cc03:	lea    r14,[rip+0x17416]        # 0x140044020
   14002cc0a:	and    eax,0x1f
   14002cc0d:	imul   rsi,rax,0x58
   14002cc11:	mov    rax,QWORD PTR [r14+rdi*8]
   14002cc15:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002cc1a:	and    ecx,0x1
   14002cc1d:	je     0x14002cc56
   14002cc1f:	mov    ecx,ebx
   14002cc21:	call   0x140029fc8
   14002cc26:	nop
   14002cc27:	mov    rax,QWORD PTR [r14+rdi*8]
   14002cc2b:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14002cc30:	je     0x14002cc3d
   14002cc32:	mov    ecx,ebx
   14002cc34:	call   0x14002cc80
   14002cc39:	mov    edi,eax
   14002cc3b:	jmp    0x14002cc4b
   14002cc3d:	call   0x14001b864
   14002cc42:	mov    DWORD PTR [rax],0x9
   14002cc48:	or     edi,0xffffffff
   14002cc4b:	mov    ecx,ebx
   14002cc4d:	call   0x14002a180
   14002cc52:	mov    eax,edi
   14002cc54:	jmp    0x14002cc71
   14002cc56:	call   0x14001b7f4
   14002cc5b:	and    DWORD PTR [rax],0x0
   14002cc5e:	call   0x14001b864
   14002cc63:	mov    DWORD PTR [rax],0x9
   14002cc69:	call   0x14001ffb8
   14002cc6e:	or     eax,0xffffffff
   14002cc71:	mov    rbx,QWORD PTR [rsp+0x50]
   14002cc76:	add    rsp,0x20
   14002cc7a:	pop    r14
   14002cc7c:	pop    rdi
   14002cc7d:	pop    rsi
   14002cc7e:	ret    
   14002cc7f:	int3   
   14002cc80:	mov    QWORD PTR [rsp+0x8],rbx
   14002cc85:	push   rdi
   14002cc86:	sub    rsp,0x20
   14002cc8a:	movsxd rdi,ecx
   14002cc8d:	mov    ecx,edi
   14002cc8f:	call   0x14002a10c
   14002cc94:	cmp    rax,0xffffffffffffffff
   14002cc98:	je     0x14002ccf3
   14002cc9a:	mov    rax,QWORD PTR [rip+0x1737f]        # 0x140044020
   14002cca1:	mov    ecx,0x2
   14002cca6:	cmp    edi,0x1
   14002cca9:	jne    0x14002ccb4
   14002ccab:	test   BYTE PTR [rax+0xb8],dil
   14002ccb2:	jne    0x14002ccbe
   14002ccb4:	cmp    edi,ecx
   14002ccb6:	jne    0x14002ccd5
   14002ccb8:	test   BYTE PTR [rax+0x60],0x1
   14002ccbc:	je     0x14002ccd5
   14002ccbe:	call   0x14002a10c
   14002ccc3:	mov    ecx,0x1
   14002ccc8:	mov    rbx,rax
   14002cccb:	call   0x14002a10c
   14002ccd0:	cmp    rax,rbx
   14002ccd3:	je     0x14002ccf3
   14002ccd5:	mov    ecx,edi
   14002ccd7:	call   0x14002a10c
   14002ccdc:	mov    rcx,rax
   14002ccdf:	call   QWORD PTR [rip+0x249b]        # 0x14002f180
   14002cce5:	test   eax,eax
   14002cce7:	jne    0x14002ccf3
   14002cce9:	call   QWORD PTR [rip+0x24b1]        # 0x14002f1a0
   14002ccef:	mov    ebx,eax
   14002ccf1:	jmp    0x14002ccf5
   14002ccf3:	xor    ebx,ebx
   14002ccf5:	mov    ecx,edi
   14002ccf7:	call   0x14002a060
   14002ccfc:	mov    rdx,rdi
   14002ccff:	mov    rcx,rdi
   14002cd02:	sar    rcx,0x5
   14002cd06:	and    edx,0x1f
   14002cd09:	lea    r8,[rip+0x17310]        # 0x140044020
   14002cd10:	mov    rcx,QWORD PTR [r8+rcx*8]
   14002cd14:	imul   rdx,rdx,0x58
   14002cd18:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   14002cd1d:	test   ebx,ebx
   14002cd1f:	je     0x14002cd2d
   14002cd21:	mov    ecx,ebx
   14002cd23:	call   0x14001b814
   14002cd28:	or     eax,0xffffffff
   14002cd2b:	jmp    0x14002cd2f
   14002cd2d:	xor    eax,eax
   14002cd2f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cd34:	add    rsp,0x20
   14002cd38:	pop    rdi
   14002cd39:	ret    
   14002cd3a:	int3   
   14002cd3b:	int3   
   14002cd3c:	rex push rbx
   14002cd3e:	sub    rsp,0x20
   14002cd42:	test   BYTE PTR [rcx+0x18],0x83
   14002cd46:	mov    rbx,rcx
   14002cd49:	je     0x14002cd6d
   14002cd4b:	test   BYTE PTR [rcx+0x18],0x8
   14002cd4f:	je     0x14002cd6d
   14002cd51:	mov    rcx,QWORD PTR [rcx+0x10]
   14002cd55:	call   0x14001a1ac
   14002cd5a:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14002cd61:	xor    eax,eax
   14002cd63:	mov    QWORD PTR [rbx],rax
   14002cd66:	mov    QWORD PTR [rbx+0x10],rax
   14002cd6a:	mov    DWORD PTR [rbx+0x8],eax
   14002cd6d:	add    rsp,0x20
   14002cd71:	pop    rbx
   14002cd72:	ret    
   14002cd73:	int3   
   14002cd74:	mov    edx,0x30
   14002cd79:	cmp    cx,dx
   14002cd7c:	jb     0x14002cf05
   14002cd82:	cmp    cx,0x3a
   14002cd86:	jae    0x14002cd8e
   14002cd88:	movzx  eax,cx
   14002cd8b:	sub    eax,edx
   14002cd8d:	ret    
   14002cd8e:	mov    edx,0xff10
   14002cd93:	cmp    cx,dx
   14002cd96:	jae    0x14002cef7
   14002cd9c:	mov    edx,0x660
   14002cda1:	cmp    cx,dx
   14002cda4:	jb     0x14002cf05
   14002cdaa:	lea    eax,[rdx+0xa]
   14002cdad:	cmp    cx,ax
   14002cdb0:	jb     0x14002cd88
   14002cdb2:	mov    edx,0x6f0
   14002cdb7:	cmp    cx,dx
   14002cdba:	jb     0x14002cf05
   14002cdc0:	lea    eax,[rdx+0xa]
   14002cdc3:	cmp    cx,ax
   14002cdc6:	jb     0x14002cd88
   14002cdc8:	mov    edx,0x966
   14002cdcd:	cmp    cx,dx
   14002cdd0:	jb     0x14002cf05
   14002cdd6:	lea    eax,[rdx+0xa]
   14002cdd9:	cmp    cx,ax
   14002cddc:	jb     0x14002cd88
   14002cdde:	lea    edx,[rax+0x76]
   14002cde1:	cmp    cx,dx
   14002cde4:	jb     0x14002cf05
   14002cdea:	lea    eax,[rdx+0xa]
   14002cded:	cmp    cx,ax
   14002cdf0:	jb     0x14002cd88
   14002cdf2:	lea    edx,[rax+0x76]
   14002cdf5:	cmp    cx,dx
   14002cdf8:	jb     0x14002cf05
   14002cdfe:	lea    eax,[rdx+0xa]
   14002ce01:	cmp    cx,ax
   14002ce04:	jb     0x14002cd88
   14002ce06:	lea    edx,[rax+0x76]
   14002ce09:	cmp    cx,dx
   14002ce0c:	jb     0x14002cf05
   14002ce12:	lea    eax,[rdx+0xa]
   14002ce15:	cmp    cx,ax
   14002ce18:	jb     0x14002cd88
   14002ce1e:	lea    edx,[rax+0x76]
   14002ce21:	cmp    cx,dx
   14002ce24:	jb     0x14002cf05
   14002ce2a:	lea    eax,[rdx+0xa]
   14002ce2d:	cmp    cx,ax
   14002ce30:	jb     0x14002cd88
   14002ce36:	mov    edx,0xc66
   14002ce3b:	cmp    cx,dx
   14002ce3e:	jb     0x14002cf05
   14002ce44:	lea    eax,[rdx+0xa]
   14002ce47:	cmp    cx,ax
   14002ce4a:	jb     0x14002cd88
   14002ce50:	lea    edx,[rax+0x76]
   14002ce53:	cmp    cx,dx
   14002ce56:	jb     0x14002cf05
   14002ce5c:	lea    eax,[rdx+0xa]
   14002ce5f:	cmp    cx,ax
   14002ce62:	jb     0x14002cd88
   14002ce68:	lea    edx,[rax+0x76]
   14002ce6b:	cmp    cx,dx
   14002ce6e:	jb     0x14002cf05
   14002ce74:	lea    eax,[rdx+0xa]
   14002ce77:	cmp    cx,ax
   14002ce7a:	jb     0x14002cd88
   14002ce80:	mov    edx,0xe50
   14002ce85:	cmp    cx,dx
   14002ce88:	jb     0x14002cf05
   14002ce8a:	lea    eax,[rdx+0xa]
   14002ce8d:	cmp    cx,ax
   14002ce90:	jb     0x14002cd88
   14002ce96:	lea    edx,[rax+0x76]
   14002ce99:	cmp    cx,dx
   14002ce9c:	jb     0x14002cf05
   14002ce9e:	lea    eax,[rdx+0xa]
   14002cea1:	cmp    cx,ax
   14002cea4:	jb     0x14002cd88
   14002ceaa:	lea    edx,[rax+0x46]
   14002cead:	cmp    cx,dx
   14002ceb0:	jb     0x14002cf05
   14002ceb2:	lea    eax,[rdx+0xa]
   14002ceb5:	cmp    cx,ax
   14002ceb8:	jb     0x14002cd88
   14002cebe:	mov    edx,0x1040
   14002cec3:	cmp    cx,dx
   14002cec6:	jb     0x14002cf05
   14002cec8:	lea    eax,[rdx+0xa]
   14002cecb:	cmp    cx,ax
   14002cece:	jb     0x14002cd88
   14002ced4:	mov    edx,0x17e0
   14002ced9:	cmp    cx,dx
   14002cedc:	jb     0x14002cf05
   14002cede:	lea    eax,[rdx+0xa]
   14002cee1:	cmp    cx,ax
   14002cee4:	jb     0x14002cd88
   14002ceea:	lea    edx,[rax+0x26]
   14002ceed:	cmp    cx,dx
   14002cef0:	jb     0x14002cf05
   14002cef2:	lea    eax,[rdx+0xa]
   14002cef5:	jmp    0x14002cefc
   14002cef7:	mov    eax,0xff1a
   14002cefc:	cmp    cx,ax
   14002ceff:	jb     0x14002cd88
   14002cf05:	or     eax,0xffffffff
   14002cf08:	ret    
   14002cf09:	int3   
   14002cf0a:	int3   
   14002cf0b:	int3   
   14002cf0c:	int3   
   14002cf0d:	int3   
   14002cf0e:	int3   
   14002cf0f:	int3   
   14002cf10:	jmp    QWORD PTR [rip+0x233a]        # 0x14002f250
   14002cf16:	jmp    QWORD PTR [rip+0x235c]        # 0x14002f278
   14002cf1c:	mov    rax,rsp
   14002cf1f:	mov    QWORD PTR [rax+0x8],rbx
   14002cf23:	mov    QWORD PTR [rax+0x10],rbp
   14002cf27:	mov    QWORD PTR [rax+0x18],rsi
   14002cf2b:	mov    QWORD PTR [rax+0x20],rdi
   14002cf2f:	push   r14
   14002cf31:	sub    rsp,0x20
   14002cf35:	mov    r10,QWORD PTR [r9+0x38]
   14002cf39:	mov    rsi,rdx
   14002cf3c:	mov    r14,r8
   14002cf3f:	mov    ebx,DWORD PTR [r10]
   14002cf42:	mov    rbp,rcx
   14002cf45:	mov    rdx,r9
   14002cf48:	shl    rbx,0x4
   14002cf4c:	mov    rcx,rsi
   14002cf4f:	mov    rdi,r9
   14002cf52:	add    rbx,r10
   14002cf55:	lea    r8,[rbx+0x4]
   14002cf59:	call   0x14001c37c
   14002cf5e:	mov    r11d,DWORD PTR [rbx+0x4]
   14002cf62:	mov    r10d,DWORD PTR [rbp+0x4]
   14002cf66:	mov    eax,r11d
   14002cf69:	and    r11d,0x2
   14002cf6d:	mov    edx,0x1
   14002cf72:	and    eax,edx
   14002cf74:	and    r10b,0x66
   14002cf78:	cmove  r11d,eax
   14002cf7c:	test   r11d,r11d
   14002cf7f:	je     0x14002cf94
   14002cf81:	mov    r9,rdi
   14002cf84:	mov    r8,r14
   14002cf87:	mov    rdx,rsi
   14002cf8a:	mov    rcx,rbp
   14002cf8d:	call   0x14001e64c
   14002cf92:	mov    edx,eax
   14002cf94:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cf99:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cf9e:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cfa3:	mov    rdi,QWORD PTR [rsp+0x48]
   14002cfa8:	mov    eax,edx
   14002cfaa:	add    rsp,0x20
   14002cfae:	pop    r14
   14002cfb0:	ret    
   14002cfb1:	int3   
   14002cfb2:	int3   
   14002cfb3:	int3   
   14002cfb4:	int3   
   14002cfb5:	int3   
   14002cfb6:	int3   
   14002cfb7:	int3   
   14002cfb8:	int3   
   14002cfb9:	int3   
   14002cfba:	int3   
   14002cfbb:	int3   
   14002cfbc:	int3   
   14002cfbd:	int3   
   14002cfbe:	int3   
   14002cfbf:	int3   
   14002cfc0:	lea    rcx,[rdx+0x30]
   14002cfc7:	jmp    0x1400019c0
   14002cfcc:	lea    rcx,[rdx+0x58]
   14002cfd3:	jmp    0x1400019c0
   14002cfd8:	lea    rcx,[rdx+0x80]
   14002cfdf:	jmp    0x1400019c0
   14002cfe4:	lea    rcx,[rdx+0xa8]
   14002cfeb:	jmp    0x1400019c0
   14002cff0:	lea    rcx,[rdx+0xd0]
   14002cff7:	jmp    0x1400019c0
   14002cffc:	lea    rcx,[rdx+0xf8]
   14002d003:	jmp    0x1400019c0
   14002d008:	lea    rcx,[rdx+0x120]
   14002d00f:	jmp    0x1400019c0
   14002d014:	lea    rcx,[rdx+0x148]
   14002d01b:	jmp    0x1400019c0
   14002d020:	lea    rcx,[rdx+0x170]
   14002d027:	jmp    0x1400019c0
   14002d02c:	lea    rcx,[rdx+0x198]
   14002d033:	jmp    0x1400019c0
   14002d038:	lea    rcx,[rdx+0x1c0]
   14002d03f:	jmp    0x1400019c0
   14002d044:	lea    rcx,[rdx+0x1e8]
   14002d04b:	jmp    0x1400019c0
   14002d050:	lea    rcx,[rdx+0x210]
   14002d057:	jmp    0x1400019c0
   14002d05c:	rex push rbp
   14002d05e:	sub    rsp,0x20
   14002d062:	mov    rbp,rdx
   14002d065:	lea    r9,[rip+0xfffffffffffd4954]        # 0x1400019c0
   14002d06c:	mov    r8d,0xe
   14002d072:	mov    edx,0x28
   14002d077:	lea    rcx,[rbp+0x30]
   14002d07b:	call   0x1400187f0
   14002d080:	add    rsp,0x20
   14002d084:	pop    rbp
   14002d085:	ret    
   14002d086:	lea    rcx,[rip+0x17aab]        # 0x140044b38
   14002d08d:	jmp    0x140001a30
   14002d092:	int3   
   14002d093:	int3   
   14002d094:	int3   
   14002d095:	int3   
   14002d096:	int3   
   14002d097:	int3   
   14002d098:	int3   
   14002d099:	int3   
   14002d09a:	int3   
   14002d09b:	int3   
   14002d09c:	int3   
   14002d09d:	int3   
   14002d09e:	int3   
   14002d09f:	int3   
   14002d0a0:	lea    rcx,[rdx+0x30]
   14002d0a7:	jmp    0x1400019f0
   14002d0ac:	lea    rcx,[rdx+0x58]
   14002d0b3:	jmp    0x1400019f0
   14002d0b8:	lea    rcx,[rdx+0x80]
   14002d0bf:	jmp    0x1400019f0
   14002d0c4:	lea    rcx,[rdx+0xa8]
   14002d0cb:	jmp    0x1400019f0
   14002d0d0:	lea    rcx,[rdx+0xd0]
   14002d0d7:	jmp    0x1400019f0
   14002d0dc:	lea    rcx,[rdx+0xf8]
   14002d0e3:	jmp    0x1400019f0
   14002d0e8:	lea    rcx,[rdx+0x120]
   14002d0ef:	jmp    0x1400019f0
   14002d0f4:	lea    rcx,[rdx+0x148]
   14002d0fb:	jmp    0x1400019f0
   14002d100:	lea    rcx,[rdx+0x170]
   14002d107:	jmp    0x1400019f0
   14002d10c:	lea    rcx,[rdx+0x198]
   14002d113:	jmp    0x1400019f0
   14002d118:	lea    rcx,[rdx+0x1c0]
   14002d11f:	jmp    0x1400019f0
   14002d124:	lea    rcx,[rdx+0x1e8]
   14002d12b:	jmp    0x1400019f0
   14002d130:	lea    rcx,[rdx+0x210]
   14002d137:	jmp    0x1400019f0
   14002d13c:	rex push rbp
   14002d13e:	sub    rsp,0x20
   14002d142:	mov    rbp,rdx
   14002d145:	lea    r9,[rip+0xfffffffffffd48a4]        # 0x1400019f0
   14002d14c:	mov    r8d,0xe
   14002d152:	mov    edx,0x28
   14002d157:	lea    rcx,[rbp+0x30]
   14002d15b:	call   0x1400187f0
   14002d160:	add    rsp,0x20
   14002d164:	pop    rbp
   14002d165:	ret    
   14002d166:	lea    rcx,[rip+0x179db]        # 0x140044b48
   14002d16d:	jmp    0x140001a60
   14002d172:	int3   
   14002d173:	int3   
   14002d174:	int3   
   14002d175:	int3   
   14002d176:	int3   
   14002d177:	int3   
   14002d178:	int3   
   14002d179:	int3   
   14002d17a:	int3   
   14002d17b:	int3   
   14002d17c:	int3   
   14002d17d:	int3   
   14002d17e:	int3   
   14002d17f:	int3   
   14002d180:	rex push rbp
   14002d182:	sub    rsp,0x20
   14002d186:	mov    rbp,rdx
   14002d189:	mov    rdx,QWORD PTR [rbp+0x60]
   14002d18d:	mov    rcx,QWORD PTR [rbp+0x68]
   14002d191:	call   0x140002740
   14002d196:	add    rsp,0x20
   14002d19a:	pop    rbp
   14002d19b:	ret    
   14002d19c:	mov    QWORD PTR [rsp+0x10],rdx
   14002d1a1:	push   rbp
   14002d1a2:	sub    rsp,0x20
   14002d1a6:	mov    rbp,rdx
   14002d1a9:	mov    rcx,QWORD PTR [rbp+0x50]
   14002d1ad:	call   0x140018a04
   14002d1b2:	xor    edx,edx
   14002d1b4:	xor    ecx,ecx
   14002d1b6:	call   0x14001a628
   14002d1bb:	nop
   14002d1bc:	int3   
   14002d1bd:	int3   
   14002d1be:	int3   
   14002d1bf:	int3   
   14002d1c0:	mov    QWORD PTR [rsp+0x10],rdx
   14002d1c5:	push   rbp
   14002d1c6:	sub    rsp,0x30
   14002d1ca:	mov    rbp,rdx
   14002d1cd:	mov    rdx,QWORD PTR [rbp+0x30]
   14002d1d1:	call   0x140002d10
   14002d1d6:	xor    edx,edx
   14002d1d8:	xor    ecx,ecx
   14002d1da:	call   0x14001a628
   14002d1df:	nop
   14002d1e0:	rex push rbp
   14002d1e2:	sub    rsp,0x20
   14002d1e6:	mov    rbp,rdx
   14002d1e9:	mov    rdx,QWORD PTR [rbp+0x50]
   14002d1ed:	mov    rcx,QWORD PTR [rbp+0x58]
   14002d1f1:	call   0x140002740
   14002d1f6:	add    rsp,0x20
   14002d1fa:	pop    rbp
   14002d1fb:	ret    
   14002d1fc:	mov    QWORD PTR [rsp+0x10],rdx
   14002d201:	push   rbp
   14002d202:	sub    rsp,0x20
   14002d206:	mov    rbp,rdx
   14002d209:	mov    rcx,QWORD PTR [rbp+0x40]
   14002d20d:	call   0x140018a04
   14002d212:	xor    edx,edx
   14002d214:	xor    ecx,ecx
   14002d216:	call   0x14001a628
   14002d21b:	nop
   14002d21c:	int3   
   14002d21d:	int3   
   14002d21e:	int3   
   14002d21f:	int3   
   14002d220:	mov    QWORD PTR [rsp+0x10],rdx
   14002d225:	push   rbp
   14002d226:	sub    rsp,0x30
   14002d22a:	mov    rbp,rdx
   14002d22d:	mov    rdx,QWORD PTR [rbp+0x30]
   14002d231:	call   0x140002db0
   14002d236:	xor    edx,edx
   14002d238:	xor    ecx,ecx
   14002d23a:	call   0x14001a628
   14002d23f:	nop
   14002d240:	mov    QWORD PTR [rsp+0x10],rdx
   14002d245:	push   rbp
   14002d246:	sub    rsp,0x30
   14002d24a:	mov    rbp,rdx
   14002d24d:	mov    rdx,QWORD PTR [rbp+0x38]
   14002d251:	call   0x140002d10
   14002d256:	xor    edx,edx
   14002d258:	xor    ecx,ecx
   14002d25a:	call   0x14001a628
   14002d25f:	nop
   14002d260:	mov    QWORD PTR [rsp+0x10],rdx
   14002d265:	push   rbp
   14002d266:	sub    rsp,0x30
   14002d26a:	mov    rbp,rdx
   14002d26d:	mov    rdx,QWORD PTR [rbp+0x38]
   14002d271:	call   0x140002db0
   14002d276:	xor    edx,edx
   14002d278:	xor    ecx,ecx
   14002d27a:	call   0x14001a628
   14002d27f:	nop
   14002d280:	mov    QWORD PTR [rsp+0x10],rdx
   14002d285:	push   rbp
   14002d286:	sub    rsp,0x20
   14002d28a:	mov    rbp,rdx
   14002d28d:	mov    rcx,QWORD PTR [rbp+0x68]
   14002d291:	mov    QWORD PTR [rbp+0x68],rcx
   14002d295:	xor    eax,eax
   14002d297:	inc    rcx
   14002d29a:	je     0x14002d2bd
   14002d29c:	movabs rax,0x7fffffffffffffff
   14002d2a6:	cmp    rcx,rax
   14002d2a9:	ja     0x14002d2b8
   14002d2ab:	add    rcx,rcx
   14002d2ae:	call   0x140018a0c
   14002d2b3:	test   rax,rax
   14002d2b6:	jne    0x14002d2bd
   14002d2b8:	call   0x140014018
   14002d2bd:	mov    QWORD PTR [rbp+0x78],rax
   14002d2c1:	lea    rax,[rip+0xfffffffffffd6973]        # 0x140003c3b
   14002d2c8:	add    rsp,0x20
   14002d2cc:	pop    rbp
   14002d2cd:	ret    
   14002d2ce:	int3   
   14002d2cf:	mov    QWORD PTR [rsp+0x10],rdx
   14002d2d4:	push   rbx
   14002d2d5:	push   rbp
   14002d2d6:	sub    rsp,0x28
   14002d2da:	mov    rbp,rdx
   14002d2dd:	mov    rbx,QWORD PTR [rbp+0x60]
   14002d2e1:	cmp    QWORD PTR [rbx+0x18],0x8
   14002d2e6:	jb     0x14002d2f0
   14002d2e8:	mov    rcx,QWORD PTR [rbx]
   14002d2eb:	call   0x140018a04
   14002d2f0:	mov    QWORD PTR [rbx+0x18],0x7
   14002d2f8:	mov    QWORD PTR [rbx+0x10],0x0
   14002d300:	xor    eax,eax
   14002d302:	mov    WORD PTR [rbx],ax
   14002d305:	xor    edx,edx
   14002d307:	xor    ecx,ecx
   14002d309:	call   0x14001a628
   14002d30e:	nop
   14002d30f:	int3   
   14002d310:	lea    rcx,[rip+0x15839]        # 0x140042b50
   14002d317:	jmp    0x140008a30
   14002d31c:	lea    rcx,[rip+0x1584d]        # 0x140042b70
   14002d323:	jmp    0x140008a30
   14002d328:	lea    rcx,[rip+0x15861]        # 0x140042b90
   14002d32f:	jmp    0x140008a30
   14002d334:	int3   
   14002d335:	int3   
   14002d336:	int3   
   14002d337:	int3   
   14002d338:	int3   
   14002d339:	int3   
   14002d33a:	int3   
   14002d33b:	int3   
   14002d33c:	int3   
   14002d33d:	int3   
   14002d33e:	int3   
   14002d33f:	int3   
   14002d340:	lea    rcx,[rdx+0x20]
   14002d347:	jmp    0x1400019c0
   14002d34c:	int3   
   14002d34d:	int3   
   14002d34e:	int3   
   14002d34f:	int3   
   14002d350:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d357:	jmp    0x140008fc0
   14002d35c:	mov    rcx,QWORD PTR [rdx+0x60]
   14002d363:	add    rcx,0x28
   14002d367:	jmp    0x1400019c0
   14002d36c:	lea    rcx,[rdx+0xb8]
   14002d373:	jmp    0x1400019c0
   14002d378:	lea    rcx,[rdx+0x98]
   14002d37f:	jmp    0x1400019c0
   14002d384:	lea    rcx,[rdx+0x78]
   14002d38b:	jmp    0x140008a30
   14002d390:	lea    rcx,[rdx+0x20]
   14002d397:	jmp    0x1400019c0
   14002d39c:	int3   
   14002d39d:	int3   
   14002d39e:	int3   
   14002d39f:	int3   
   14002d3a0:	lea    rcx,[rdx+0x40]
   14002d3a7:	jmp    0x140008a30
   14002d3ac:	lea    rcx,[rdx+0x40]
   14002d3b3:	jmp    0x140008a30
   14002d3b8:	lea    rcx,[rdx+0x40]
   14002d3bf:	jmp    0x140008a30
   14002d3c4:	lea    rcx,[rdx+0x40]
   14002d3cb:	jmp    0x140008a30
   14002d3d0:	lea    rcx,[rdx+0x40]
   14002d3d7:	jmp    0x140008a30
   14002d3dc:	int3   
   14002d3dd:	int3   
   14002d3de:	int3   
   14002d3df:	int3   
   14002d3e0:	lea    rcx,[rdx+0x38]
   14002d3e7:	jmp    0x140008a30
   14002d3ec:	int3   
   14002d3ed:	int3   
   14002d3ee:	int3   
   14002d3ef:	int3   
   14002d3f0:	lea    rcx,[rdx+0x2f8]
   14002d3f7:	jmp    0x1400019c0
   14002d3fc:	lea    rcx,[rdx+0x2b0]
   14002d403:	jmp    0x1400019c0
   14002d408:	lea    rcx,[rdx+0x320]
   14002d40f:	jmp    0x1400019c0
   14002d414:	lea    rcx,[rdx+0x2b0]
   14002d41b:	jmp    0x1400019c0
   14002d420:	lea    rcx,[rdx+0x2d8]
   14002d427:	jmp    0x1400019c0
   14002d42c:	lea    rcx,[rdx+0x2b0]
   14002d433:	jmp    0x140008a30
   14002d438:	lea    rcx,[rdx+0x2b0]
   14002d43f:	jmp    0x140008a30
   14002d444:	lea    rcx,[rdx+0x340]
   14002d44b:	jmp    0x1400077a0
   14002d450:	lea    rcx,[rdx+0x20]
   14002d457:	jmp    0x140008a30
   14002d45c:	lea    rcx,[rdx+0x20]
   14002d463:	jmp    0x140008a30
   14002d468:	lea    rcx,[rdx+0x20]
   14002d46f:	jmp    0x140008a30
   14002d474:	int3   
   14002d475:	int3   
   14002d476:	int3   
   14002d477:	int3   
   14002d478:	int3   
   14002d479:	int3   
   14002d47a:	int3   
   14002d47b:	int3   
   14002d47c:	int3   
   14002d47d:	int3   
   14002d47e:	int3   
   14002d47f:	int3   
   14002d480:	lea    rcx,[rdx+0x20]
   14002d487:	jmp    0x1400019c0
   14002d48c:	lea    rcx,[rdx+0x48]
   14002d493:	jmp    0x1400019c0
   14002d498:	int3   
   14002d499:	int3   
   14002d49a:	int3   
   14002d49b:	int3   
   14002d49c:	int3   
   14002d49d:	int3   
   14002d49e:	int3   
   14002d49f:	int3   
   14002d4a0:	lea    rcx,[rdx+0x28]
   14002d4a7:	jmp    0x1400019c0
   14002d4ac:	int3   
   14002d4ad:	int3   
   14002d4ae:	int3   
   14002d4af:	int3   
   14002d4b0:	lea    rcx,[rdx+0x68]
   14002d4b7:	jmp    0x1400019c0
   14002d4bc:	lea    rcx,[rdx+0x30]
   14002d4c3:	jmp    0x1400019c0
   14002d4c8:	int3   
   14002d4c9:	int3   
   14002d4ca:	int3   
   14002d4cb:	int3   
   14002d4cc:	int3   
   14002d4cd:	int3   
   14002d4ce:	int3   
   14002d4cf:	int3   
   14002d4d0:	lea    rcx,[rdx+0x40]
   14002d4d7:	jmp    0x1400019c0
   14002d4dc:	lea    rcx,[rdx+0x80]
   14002d4e3:	jmp    0x1400019c0
   14002d4e8:	lea    rcx,[rdx+0x60]
   14002d4ef:	jmp    0x1400019c0
   14002d4f4:	lea    rcx,[rdx+0xc0]
   14002d4fb:	jmp    0x1400019c0
   14002d500:	lea    rcx,[rdx+0xe0]
   14002d507:	jmp    0x1400019c0
   14002d50c:	lea    rcx,[rdx+0xa0]
   14002d513:	jmp    0x1400019c0
   14002d518:	lea    rcx,[rdx+0x108]
   14002d51f:	jmp    0x1400019c0
   14002d524:	lea    rcx,[rdx+0x20]
   14002d52b:	jmp    0x140008a30
   14002d530:	lea    rcx,[rdx+0x28]
   14002d537:	jmp    0x140008a30
   14002d53c:	int3   
   14002d53d:	int3   
   14002d53e:	int3   
   14002d53f:	int3   
   14002d540:	lea    rcx,[rdx+0x70]
   14002d547:	jmp    0x1400019c0
   14002d54c:	lea    rcx,[rdx+0x90]
   14002d553:	jmp    0x140007830
   14002d558:	lea    rcx,[rdx+0x30]
   14002d55f:	jmp    0x1400019c0
   14002d564:	int3   
   14002d565:	int3   
   14002d566:	int3   
   14002d567:	int3   
   14002d568:	int3   
   14002d569:	int3   
   14002d56a:	int3   
   14002d56b:	int3   
   14002d56c:	int3   
   14002d56d:	int3   
   14002d56e:	int3   
   14002d56f:	int3   
   14002d570:	lea    rcx,[rdx+0x48]
   14002d577:	jmp    0x140008a30
   14002d57c:	lea    rcx,[rdx+0x28]
   14002d583:	jmp    0x1400019c0
   14002d588:	int3   
   14002d589:	int3   
   14002d58a:	int3   
   14002d58b:	int3   
   14002d58c:	int3   
   14002d58d:	int3   
   14002d58e:	int3   
   14002d58f:	int3   
   14002d590:	lea    rcx,[rdx+0x78]
   14002d597:	jmp    0x140007840
   14002d59c:	int3   
   14002d59d:	int3   
   14002d59e:	int3   
   14002d59f:	int3   
   14002d5a0:	rex push rbp
   14002d5a2:	sub    rsp,0x20
   14002d5a6:	mov    rbp,rdx
   14002d5a9:	mov    eax,DWORD PTR [rbp+0x20]
   14002d5ac:	and    eax,0x1
   14002d5af:	test   eax,eax
   14002d5b1:	je     0x14002d5c0
   14002d5b3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14002d5b7:	mov    rcx,QWORD PTR [rbp+0x50]
   14002d5bb:	call   0x1400019c0
   14002d5c0:	add    rsp,0x20
   14002d5c4:	pop    rbp
   14002d5c5:	ret    
   14002d5c6:	int3   
   14002d5c7:	int3   
   14002d5c8:	int3   
   14002d5c9:	int3   
   14002d5ca:	int3   
   14002d5cb:	int3   
   14002d5cc:	int3   
   14002d5cd:	int3   
   14002d5ce:	int3   
   14002d5cf:	int3   
   14002d5d0:	rex push rbp
   14002d5d2:	sub    rsp,0x20
   14002d5d6:	mov    rbp,rdx
   14002d5d9:	mov    eax,DWORD PTR [rbp+0x20]
   14002d5dc:	and    eax,0x1
   14002d5df:	test   eax,eax
   14002d5e1:	je     0x14002d5f0
   14002d5e3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14002d5e7:	mov    rcx,QWORD PTR [rbp+0x50]
   14002d5eb:	call   0x140008a30
   14002d5f0:	add    rsp,0x20
   14002d5f4:	pop    rbp
   14002d5f5:	ret    
   14002d5f6:	int3   
   14002d5f7:	int3   
   14002d5f8:	int3   
   14002d5f9:	int3   
   14002d5fa:	int3   
   14002d5fb:	int3   
   14002d5fc:	int3   
   14002d5fd:	int3   
   14002d5fe:	int3   
   14002d5ff:	int3   
   14002d600:	mov    QWORD PTR [rsp+0x10],rdx
   14002d605:	push   rbp
   14002d606:	sub    rsp,0x20
   14002d60a:	mov    rbp,rdx
   14002d60d:	mov    rcx,QWORD PTR [rbp+0x68]
   14002d611:	mov    QWORD PTR [rbp+0x68],rcx
   14002d615:	xor    eax,eax
   14002d617:	inc    rcx
   14002d61a:	je     0x14002d631
   14002d61c:	cmp    rcx,0xffffffffffffffff
   14002d620:	ja     0x14002d62c
   14002d622:	call   0x140018a0c
   14002d627:	test   rax,rax
   14002d62a:	jne    0x14002d631
   14002d62c:	call   0x140014018
   14002d631:	mov    QWORD PTR [rbp+0x78],rax
   14002d635:	lea    rax,[rip+0xfffffffffffdb6c9]        # 0x140008d05
   14002d63c:	add    rsp,0x20
   14002d640:	pop    rbp
   14002d641:	ret    
   14002d642:	int3   
   14002d643:	mov    QWORD PTR [rsp+0x10],rdx
   14002d648:	push   rbx
   14002d649:	push   rbp
   14002d64a:	sub    rsp,0x28
   14002d64e:	mov    rbp,rdx
   14002d651:	mov    rbx,QWORD PTR [rbp+0x60]
   14002d655:	cmp    QWORD PTR [rbx+0x18],0x10
   14002d65a:	jb     0x14002d664
   14002d65c:	mov    rcx,QWORD PTR [rbx]
   14002d65f:	call   0x140018a04
   14002d664:	mov    QWORD PTR [rbx+0x18],0xf
   14002d66c:	mov    QWORD PTR [rbx+0x10],0x0
   14002d674:	mov    BYTE PTR [rbx],0x0
   14002d677:	xor    edx,edx
   14002d679:	xor    ecx,ecx
   14002d67b:	call   0x14001a628
   14002d680:	nop
   14002d681:	int3   
   14002d682:	int3   
   14002d683:	int3   
   14002d684:	int3   
   14002d685:	int3   
   14002d686:	int3   
   14002d687:	int3   
   14002d688:	int3   
   14002d689:	int3   
   14002d68a:	int3   
   14002d68b:	int3   
   14002d68c:	int3   
   14002d68d:	int3   
   14002d68e:	int3   
   14002d68f:	int3   
   14002d690:	mov    rcx,QWORD PTR [rdx+0x80]
   14002d697:	add    rcx,0x90
   14002d69e:	jmp    0x140009b20
   14002d6a3:	mov    rcx,QWORD PTR [rdx+0x80]
   14002d6aa:	add    rcx,0x98
   14002d6b1:	jmp    0x140009b20
   14002d6b6:	mov    rcx,QWORD PTR [rdx+0x80]
   14002d6bd:	add    rcx,0xa0
   14002d6c4:	jmp    0x140009b20
   14002d6c9:	mov    rcx,QWORD PTR [rdx+0x80]
   14002d6d0:	add    rcx,0xa8
   14002d6d7:	jmp    0x140009b20
   14002d6dc:	mov    rcx,QWORD PTR [rdx+0x80]
   14002d6e3:	add    rcx,0xb0
   14002d6ea:	jmp    0x140009b20
   14002d6ef:	int3   
   14002d6f0:	lea    rcx,[rdx+0x50]
   14002d6f7:	jmp    0x1400019c0
   14002d6fc:	lea    rcx,[rdx+0x28]
   14002d703:	jmp    0x1400019c0
   14002d708:	int3   
   14002d709:	int3   
   14002d70a:	int3   
   14002d70b:	int3   
   14002d70c:	int3   
   14002d70d:	int3   
   14002d70e:	int3   
   14002d70f:	int3   
   14002d710:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d717:	jmp    0x140008fc0
   14002d71c:	int3   
   14002d71d:	int3   
   14002d71e:	int3   
   14002d71f:	int3   
   14002d720:	rex push rbp
   14002d722:	sub    rsp,0x30
   14002d726:	mov    rbp,rdx
   14002d729:	mov    rcx,QWORD PTR [rbp+0x30]
   14002d72d:	test   rcx,rcx
   14002d730:	je     0x14002d739
   14002d732:	call   QWORD PTR [rip+0x19f0]        # 0x14002f128
   14002d738:	nop
   14002d739:	add    rsp,0x30
   14002d73d:	pop    rbp
   14002d73e:	ret    
   14002d73f:	int3   
   14002d740:	lea    rcx,[rdx+0x50]
   14002d747:	jmp    0x140008a30
   14002d74c:	lea    rcx,[rdx+0x20]
   14002d753:	jmp    0x140008a30
   14002d758:	int3   
   14002d759:	int3   
   14002d75a:	int3   
   14002d75b:	int3   
   14002d75c:	int3   
   14002d75d:	int3   
   14002d75e:	int3   
   14002d75f:	int3   
   14002d760:	lea    rcx,[rdx+0x48]
   14002d767:	jmp    0x1400019c0
   14002d76c:	int3   
   14002d76d:	int3   
   14002d76e:	int3   
   14002d76f:	int3   
   14002d770:	lea    rcx,[rdx+0x80]
   14002d777:	jmp    0x140011f90
   14002d77c:	lea    rcx,[rdx+0x80]
   14002d783:	jmp    0x140011f90
   14002d788:	lea    rcx,[rdx+0x70]
   14002d78f:	jmp    0x140012a80
   14002d794:	mov    QWORD PTR [rsp+0x10],rdx
   14002d799:	push   rbp
   14002d79a:	sub    rsp,0x40
   14002d79e:	mov    rbp,rdx
   14002d7a1:	mov    rcx,QWORD PTR [rbp+0x40]
   14002d7a5:	mov    rax,QWORD PTR [rcx]
   14002d7a8:	movsxd rdx,DWORD PTR [rax+0x4]
   14002d7ac:	add    rdx,rcx
   14002d7af:	mov    eax,DWORD PTR [rdx+0x10]
   14002d7b2:	or     eax,0x4
   14002d7b5:	cmp    QWORD PTR [rdx+0x48],0x0
   14002d7ba:	jne    0x14002d7bf
   14002d7bc:	or     eax,0x4
   14002d7bf:	and    eax,0x17
   14002d7c2:	mov    DWORD PTR [rdx+0x10],eax
   14002d7c5:	test   DWORD PTR [rdx+0x14],eax
   14002d7c8:	jne    0x14002d7d3
   14002d7ca:	lea    rax,[rip+0xfffffffffffdf349]        # 0x14000cb1a
   14002d7d1:	jmp    0x14002d7dd
   14002d7d3:	xor    edx,edx
   14002d7d5:	xor    ecx,ecx
   14002d7d7:	call   0x14001a628
   14002d7dc:	nop
   14002d7dd:	add    rsp,0x40
   14002d7e1:	pop    rbp
   14002d7e2:	ret    
   14002d7e3:	int3   
   14002d7e4:	int3   
   14002d7e5:	int3   
   14002d7e6:	int3   
   14002d7e7:	int3   
   14002d7e8:	int3   
   14002d7e9:	int3   
   14002d7ea:	int3   
   14002d7eb:	int3   
   14002d7ec:	int3   
   14002d7ed:	int3   
   14002d7ee:	int3   
   14002d7ef:	int3   
   14002d7f0:	rex push rbp
   14002d7f2:	sub    rsp,0x20
   14002d7f6:	mov    rbp,rdx
   14002d7f9:	mov    eax,DWORD PTR [rbp+0x50]
   14002d7fc:	and    eax,0x1
   14002d7ff:	test   eax,eax
   14002d801:	je     0x14002d817
   14002d803:	and    DWORD PTR [rbp+0x50],0xfffffffe
   14002d807:	mov    rcx,QWORD PTR [rbp+0x40]
   14002d80b:	add    rcx,0x98
   14002d812:	call   0x140013340
   14002d817:	add    rsp,0x20
   14002d81b:	pop    rbp
   14002d81c:	ret    
   14002d81d:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d824:	add    rcx,0x20
   14002d828:	jmp    0x14000cdb0
   14002d82d:	mov    rcx,QWORD PTR [rdx+0x28]
   14002d834:	jmp    0x140011e30
   14002d839:	int3   
   14002d83a:	int3   
   14002d83b:	int3   
   14002d83c:	int3   
   14002d83d:	int3   
   14002d83e:	int3   
   14002d83f:	int3   
   14002d840:	mov    rcx,QWORD PTR [rdx+0x40]
   14002d847:	add    rcx,0x18
   14002d84b:	jmp    0x140011f60
   14002d850:	lea    rcx,[rdx+0x70]
   14002d857:	jmp    0x140012a80
   14002d85c:	lea    rcx,[rdx+0x78]
   14002d863:	jmp    0x1400019c0
   14002d868:	lea    rcx,[rdx+0x40]
   14002d86f:	jmp    0x1400019c0
   14002d874:	lea    rcx,[rdx+0x40]
   14002d87b:	jmp    0x1400019c0
   14002d880:	lea    rcx,[rdx+0x38]
   14002d887:	jmp    0x140012a80
   14002d88c:	int3   
   14002d88d:	int3   
   14002d88e:	int3   
   14002d88f:	int3   
   14002d890:	lea    rcx,[rdx+0x30]
   14002d897:	jmp    0x140012a80
   14002d89c:	int3   
   14002d89d:	int3   
   14002d89e:	int3   
   14002d89f:	int3   
   14002d8a0:	lea    rcx,[rdx+0x68]
   14002d8a7:	jmp    0x140008a30
   14002d8ac:	lea    rcx,[rdx+0x48]
   14002d8b3:	jmp    0x140008a30
   14002d8b8:	int3   
   14002d8b9:	int3   
   14002d8ba:	int3   
   14002d8bb:	int3   
   14002d8bc:	int3   
   14002d8bd:	int3   
   14002d8be:	int3   
   14002d8bf:	int3   
   14002d8c0:	lea    rcx,[rdx+0x60]
   14002d8c7:	jmp    0x140012a80
   14002d8cc:	lea    rcx,[rdx+0x98]
   14002d8d3:	jmp    0x140008a30
   14002d8d8:	lea    rcx,[rdx+0x40]
   14002d8df:	jmp    0x140012a80
   14002d8e4:	lea    rcx,[rdx+0x78]
   14002d8eb:	jmp    0x140008a30
   14002d8f0:	lea    rcx,[rdx+0x40]
   14002d8f7:	jmp    0x140012a80
   14002d8fc:	int3   
   14002d8fd:	int3   
   14002d8fe:	int3   
   14002d8ff:	int3   
   14002d900:	lea    rcx,[rdx+0x48]
   14002d907:	jmp    0x140012a80
   14002d90c:	lea    rcx,[rdx+0x90]
   14002d913:	jmp    0x140008a30
   14002d918:	lea    rcx,[rdx+0x28]
   14002d91f:	jmp    0x140012a80
   14002d924:	lea    rcx,[rdx+0x70]
   14002d92b:	jmp    0x140008a30
   14002d930:	lea    rcx,[rdx+0x40]
   14002d937:	jmp    0x140011f90
   14002d93c:	lea    rcx,[rdx+0x40]
   14002d943:	jmp    0x140012010
   14002d948:	mov    QWORD PTR [rsp+0x10],rdx
   14002d94d:	push   rbp
   14002d94e:	sub    rsp,0x20
   14002d952:	mov    rbp,rdx
   14002d955:	mov    rcx,QWORD PTR [rbp+0x30]
   14002d959:	mov    rax,QWORD PTR [rcx]
   14002d95c:	movsxd rdx,DWORD PTR [rax+0x4]
   14002d960:	add    rdx,rcx
   14002d963:	mov    eax,DWORD PTR [rdx+0x10]
   14002d966:	or     eax,0x4
   14002d969:	cmp    QWORD PTR [rdx+0x48],0x0
   14002d96e:	jne    0x14002d973
   14002d970:	or     eax,0x4
   14002d973:	and    eax,0x17
   14002d976:	mov    DWORD PTR [rdx+0x10],eax
   14002d979:	test   DWORD PTR [rdx+0x14],eax
   14002d97c:	jne    0x14002d987
   14002d97e:	lea    rax,[rip+0xfffffffffffe30e2]        # 0x140010a67
   14002d985:	jmp    0x14002d991
   14002d987:	xor    edx,edx
   14002d989:	xor    ecx,ecx
   14002d98b:	call   0x14001a628
   14002d990:	nop
   14002d991:	add    rsp,0x20
   14002d995:	pop    rbp
   14002d996:	ret    
   14002d997:	int3   
   14002d998:	int3   
   14002d999:	int3   
   14002d99a:	int3   
   14002d99b:	int3   
   14002d99c:	int3   
   14002d99d:	int3   
   14002d99e:	int3   
   14002d99f:	int3   
   14002d9a0:	lea    rcx,[rdx+0x4c]
   14002d9a7:	jmp    0x1400146d8
   14002d9ac:	int3   
   14002d9ad:	int3   
   14002d9ae:	int3   
   14002d9af:	int3   
   14002d9b0:	mov    rcx,QWORD PTR [rdx+0xa0]
   14002d9b7:	jmp    0x140018a04
   14002d9bc:	int3   
   14002d9bd:	int3   
   14002d9be:	int3   
   14002d9bf:	int3   
   14002d9c0:	mov    QWORD PTR [rsp+0x10],rdx
   14002d9c5:	push   rbp
   14002d9c6:	sub    rsp,0x30
   14002d9ca:	mov    rbp,rdx
   14002d9cd:	mov    rcx,QWORD PTR [rbp+0x78]
   14002d9d1:	call   0x140011740
   14002d9d6:	xor    edx,edx
   14002d9d8:	xor    ecx,ecx
   14002d9da:	call   0x14001a628
   14002d9df:	nop
   14002d9e0:	mov    rcx,QWORD PTR [rdx+0xc0]
   14002d9e7:	jmp    0x140018a04
   14002d9ec:	rex push rbp
   14002d9ee:	sub    rsp,0x20
   14002d9f2:	mov    rbp,rdx
   14002d9f5:	mov    eax,DWORD PTR [rbp+0xb0]
   14002d9fb:	and    eax,0x1
   14002d9fe:	test   eax,eax
   14002da00:	je     0x14002da12
   14002da02:	and    DWORD PTR [rbp+0xb0],0xfffffffe
   14002da09:	lea    rcx,[rbp+0x28]
   14002da0d:	call   0x140012760
   14002da12:	add    rsp,0x20
   14002da16:	pop    rbp
   14002da17:	ret    
   14002da18:	mov    rcx,QWORD PTR [rdx+0xc0]
   14002da1f:	jmp    0x140012120
   14002da24:	int3   
   14002da25:	int3   
   14002da26:	int3   
   14002da27:	int3   
   14002da28:	int3   
   14002da29:	int3   
   14002da2a:	int3   
   14002da2b:	int3   
   14002da2c:	int3   
   14002da2d:	int3   
   14002da2e:	int3   
   14002da2f:	int3   
   14002da30:	mov    QWORD PTR [rsp+0x10],rdx
   14002da35:	push   rbp
   14002da36:	sub    rsp,0x20
   14002da3a:	mov    rbp,rdx
   14002da3d:	lea    rax,[rip+0xfffffffffffe45c6]        # 0x14001200a
   14002da44:	add    rsp,0x20
   14002da48:	pop    rbp
   14002da49:	ret    
   14002da4a:	int3   
   14002da4b:	int3   
   14002da4c:	int3   
   14002da4d:	int3   
   14002da4e:	int3   
   14002da4f:	int3   
   14002da50:	lea    rcx,[rdx+0x28]
   14002da57:	jmp    0x140011f90
   14002da5c:	lea    rcx,[rdx+0x28]
   14002da63:	jmp    0x140012010
   14002da68:	int3   
   14002da69:	int3   
   14002da6a:	int3   
   14002da6b:	int3   
   14002da6c:	int3   
   14002da6d:	int3   
   14002da6e:	int3   
   14002da6f:	int3   
   14002da70:	mov    rcx,QWORD PTR [rdx+0x28]
   14002da77:	jmp    0x1400146d8
   14002da7c:	mov    rcx,QWORD PTR [rdx+0x28]
   14002da83:	add    rcx,0x8
   14002da87:	jmp    0x140012730
   14002da8c:	mov    rcx,QWORD PTR [rdx+0x28]
   14002da93:	add    rcx,0x18
   14002da97:	jmp    0x140012730
   14002da9c:	mov    rcx,QWORD PTR [rdx+0x28]
   14002daa3:	add    rcx,0x28
   14002daa7:	jmp    0x140012730
   14002daac:	mov    rcx,QWORD PTR [rdx+0x28]
   14002dab3:	add    rcx,0x38
   14002dab7:	jmp    0x140012730
   14002dabc:	mov    rcx,QWORD PTR [rdx+0x28]
   14002dac3:	add    rcx,0x48
   14002dac7:	jmp    0x140012730
   14002dacc:	mov    rcx,QWORD PTR [rdx+0x28]
   14002dad3:	add    rcx,0x58
   14002dad7:	jmp    0x140012730
   14002dadc:	int3   
   14002dadd:	int3   
   14002dade:	int3   
   14002dadf:	int3   
   14002dae0:	mov    rcx,QWORD PTR [rdx+0x50]
   14002dae7:	jmp    0x140008a30
   14002daec:	lea    rcx,[rdx+0x30]
   14002daf3:	jmp    0x140008a30
   14002daf8:	int3   
   14002daf9:	int3   
   14002dafa:	int3   
   14002dafb:	int3   
   14002dafc:	int3   
   14002dafd:	int3   
   14002dafe:	int3   
   14002daff:	int3   
   14002db00:	lea    rcx,[rdx+0x40]
   14002db07:	jmp    0x140008a30
   14002db0c:	lea    rcx,[rdx+0x80]
   14002db13:	jmp    0x140008a30
   14002db18:	int3   
   14002db19:	int3   
   14002db1a:	int3   
   14002db1b:	int3   
   14002db1c:	int3   
   14002db1d:	int3   
   14002db1e:	int3   
   14002db1f:	int3   
   14002db20:	lea    rcx,[rdx+0x50]
   14002db27:	jmp    0x140012a80
   14002db2c:	mov    QWORD PTR [rsp+0x10],rdx
   14002db31:	push   rbp
   14002db32:	sub    rsp,0x20
   14002db36:	mov    rbp,rdx
   14002db39:	mov    rcx,QWORD PTR [rbp+0x40]
   14002db3d:	mov    rax,QWORD PTR [rcx]
   14002db40:	movsxd rdx,DWORD PTR [rax+0x4]
   14002db44:	add    rdx,rcx
   14002db47:	mov    eax,DWORD PTR [rdx+0x10]
   14002db4a:	or     eax,0x4
   14002db4d:	cmp    QWORD PTR [rdx+0x48],0x0
   14002db52:	jne    0x14002db57
   14002db54:	or     eax,0x4
   14002db57:	and    eax,0x17
   14002db5a:	mov    DWORD PTR [rdx+0x10],eax
   14002db5d:	test   DWORD PTR [rdx+0x14],eax
   14002db60:	jne    0x14002db6b
   14002db62:	lea    rax,[rip+0xfffffffffffe5752]        # 0x1400132bb
   14002db69:	jmp    0x14002db75
   14002db6b:	xor    edx,edx
   14002db6d:	xor    ecx,ecx
   14002db6f:	call   0x14001a628
   14002db74:	nop
   14002db75:	add    rsp,0x20
   14002db79:	pop    rbp
   14002db7a:	ret    
   14002db7b:	int3   
   14002db7c:	int3   
   14002db7d:	int3   
   14002db7e:	int3   
   14002db7f:	int3   
   14002db80:	lea    rcx,[rdx+0x88]
   14002db87:	jmp    0x1400019c0
   14002db8c:	lea    rcx,[rdx+0x48]
   14002db93:	jmp    0x1400019c0
   14002db98:	lea    rcx,[rdx+0x28]
   14002db9f:	jmp    0x1400019c0
   14002dba4:	lea    rcx,[rdx+0x40]
   14002dbab:	jmp    0x1400146d8
   14002dbb0:	rex push rbp
   14002dbb2:	sub    rsp,0x20
   14002dbb6:	mov    rbp,rdx
   14002dbb9:	cmp    DWORD PTR [rbp+0x20],0x0
   14002dbbd:	jne    0x14002dbd5
   14002dbbf:	mov    r9,QWORD PTR [rbp+0x78]
   14002dbc3:	mov    r8d,DWORD PTR [rbp+0x70]
   14002dbc7:	mov    rdx,QWORD PTR [rbp+0x68]
   14002dbcb:	mov    rcx,QWORD PTR [rbp+0x60]
   14002dbcf:	call   0x140018850
   14002dbd4:	nop
   14002dbd5:	add    rsp,0x20
   14002dbd9:	pop    rbp
   14002dbda:	ret    
   14002dbdb:	int3   
   14002dbdc:	rex push rbp
   14002dbde:	sub    rsp,0x20
   14002dbe2:	mov    rbp,rdx
   14002dbe5:	mov    QWORD PTR [rbp+0x38],rcx
   14002dbe9:	mov    QWORD PTR [rbp+0x28],rcx
   14002dbed:	mov    rax,QWORD PTR [rbp+0x28]
   14002dbf1:	mov    rcx,QWORD PTR [rax]
   14002dbf4:	mov    QWORD PTR [rbp+0x30],rcx
   14002dbf8:	mov    rax,QWORD PTR [rbp+0x30]
   14002dbfc:	cmp    DWORD PTR [rax],0xe06d7363
   14002dc02:	je     0x14002dc10
   14002dc04:	mov    DWORD PTR [rbp+0x20],0x0
   14002dc0b:	mov    eax,DWORD PTR [rbp+0x20]
   14002dc0e:	jmp    0x14002dc16
   14002dc10:	call   0x140019018
   14002dc15:	nop
   14002dc16:	add    rsp,0x20
   14002dc1a:	pop    rbp
   14002dc1b:	ret    
   14002dc1c:	int3   
   14002dc1d:	rex push rbp
   14002dc1f:	sub    rsp,0x20
   14002dc23:	mov    rbp,rdx
   14002dc26:	add    rsp,0x20
   14002dc2a:	pop    rbp
   14002dc2b:	jmp    0x14001ea6c
   14002dc30:	int3   
   14002dc31:	rex push rbp
   14002dc33:	sub    rsp,0x20
   14002dc37:	mov    rbp,rdx
   14002dc3a:	mov    rax,QWORD PTR [rcx]
   14002dc3d:	mov    rdx,rcx
   14002dc40:	mov    ecx,DWORD PTR [rax]
   14002dc42:	call   0x140021acc
   14002dc47:	nop
   14002dc48:	add    rsp,0x20
   14002dc4c:	pop    rbp
   14002dc4d:	ret    
   14002dc4e:	int3   
   14002dc4f:	rex push rbp
   14002dc51:	sub    rsp,0x40
   14002dc55:	mov    rbp,rdx
   14002dc58:	lea    rax,[rbp+0x40]
   14002dc5c:	mov    QWORD PTR [rsp+0x30],rax
   14002dc61:	mov    rax,QWORD PTR [rbp+0x90]
   14002dc68:	mov    QWORD PTR [rsp+0x28],rax
   14002dc6d:	mov    rax,QWORD PTR [rbp+0x88]
   14002dc74:	mov    QWORD PTR [rsp+0x20],rax
   14002dc79:	mov    r9,QWORD PTR [rbp+0x80]
   14002dc80:	mov    r8,QWORD PTR [rbp+0x78]
   14002dc84:	mov    rdx,QWORD PTR [rbp+0x70]
   14002dc88:	call   0x14001a97c
   14002dc8d:	nop
   14002dc8e:	add    rsp,0x40
   14002dc92:	pop    rbp
   14002dc93:	ret    
   14002dc94:	int3   
   14002dc95:	rex push rbp
   14002dc97:	sub    rsp,0x30
   14002dc9b:	mov    rbp,rdx
   14002dc9e:	mov    ecx,0xc
   14002dca3:	call   0x14001b308
   14002dca8:	nop
   14002dca9:	add    rsp,0x30
   14002dcad:	pop    rbp
   14002dcae:	ret    
   14002dcaf:	int3   
   14002dcb0:	rex push rbp
   14002dcb2:	sub    rsp,0x20
   14002dcb6:	mov    rbp,rdx
   14002dcb9:	mov    rcx,QWORD PTR [rip+0x13670]        # 0x140041330
   14002dcc0:	add    rsp,0x20
   14002dcc4:	pop    rbp
   14002dcc5:	rex.W jmp QWORD PTR [rip+0x156c]        # 0x14002f238
   14002dccc:	int3   
   14002dccd:	rex push rbp
   14002dccf:	sub    rsp,0x20
   14002dcd3:	mov    rbp,rdx
   14002dcd6:	mov    QWORD PTR [rbp+0x70],rcx
   14002dcda:	mov    QWORD PTR [rbp+0x68],rcx
   14002dcde:	mov    rax,QWORD PTR [rbp+0x68]
   14002dce2:	mov    rcx,QWORD PTR [rax]
   14002dce5:	mov    QWORD PTR [rbp+0x28],rcx
   14002dce9:	mov    DWORD PTR [rbp+0x20],0x0
   14002dcf0:	mov    rax,QWORD PTR [rbp+0x28]
   14002dcf4:	cmp    DWORD PTR [rax],0xe06d7363
   14002dcfa:	jne    0x14002dd49
   14002dcfc:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd00:	cmp    DWORD PTR [rax+0x18],0x4
   14002dd04:	jne    0x14002dd49
   14002dd06:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd0a:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002dd11:	je     0x14002dd2d
   14002dd13:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd17:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002dd1e:	je     0x14002dd2d
   14002dd20:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd24:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002dd2b:	jne    0x14002dd49
   14002dd2d:	mov    rdx,QWORD PTR [rbp+0x28]
   14002dd31:	mov    rax,QWORD PTR [rbp+0xd8]
   14002dd38:	mov    rcx,QWORD PTR [rax+0x28]
   14002dd3c:	cmp    QWORD PTR [rdx+0x28],rcx
   14002dd40:	jne    0x14002dd49
   14002dd42:	mov    DWORD PTR [rbp+0x20],0x1
   14002dd49:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd4d:	cmp    DWORD PTR [rax],0xe06d7363
   14002dd53:	jne    0x14002ddb0
   14002dd55:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd59:	cmp    DWORD PTR [rax+0x18],0x4
   14002dd5d:	jne    0x14002ddb0
   14002dd5f:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd63:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002dd6a:	je     0x14002dd86
   14002dd6c:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd70:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002dd77:	je     0x14002dd86
   14002dd79:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd7d:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002dd84:	jne    0x14002ddb0
   14002dd86:	mov    rax,QWORD PTR [rbp+0x28]
   14002dd8a:	cmp    QWORD PTR [rax+0x30],0x0
   14002dd8f:	jne    0x14002ddb0
   14002dd91:	call   0x14001ef6c
   14002dd96:	mov    DWORD PTR [rax+0x460],0x1
   14002dda0:	mov    DWORD PTR [rbp+0x20],0x1
   14002dda7:	mov    DWORD PTR [rbp+0x30],0x1
   14002ddae:	jmp    0x14002ddb7
   14002ddb0:	mov    DWORD PTR [rbp+0x30],0x0
   14002ddb7:	mov    eax,DWORD PTR [rbp+0x30]
   14002ddba:	add    rsp,0x20
   14002ddbe:	pop    rbp
   14002ddbf:	ret    
   14002ddc0:	int3   
   14002ddc1:	rex push rbx
   14002ddc3:	push   rbp
   14002ddc4:	sub    rsp,0x28
   14002ddc8:	mov    rbp,rdx
   14002ddcb:	mov    rcx,QWORD PTR [rbp+0x38]
   14002ddcf:	call   0x14001aab8
   14002ddd4:	cmp    DWORD PTR [rbp+0x20],0x0
   14002ddd8:	jne    0x14002de14
   14002ddda:	mov    rbx,QWORD PTR [rbp+0xd8]
   14002dde1:	cmp    DWORD PTR [rbx],0xe06d7363
   14002dde7:	jne    0x14002de14
   14002dde9:	cmp    DWORD PTR [rbx+0x18],0x4
   14002dded:	jne    0x14002de14
   14002ddef:	mov    eax,DWORD PTR [rbx+0x20]
   14002ddf2:	sub    eax,0x19930520
   14002ddf7:	cmp    eax,0x2
   14002ddfa:	ja     0x14002de14
   14002ddfc:	mov    rcx,QWORD PTR [rbx+0x28]
   14002de00:	call   0x14001ab48
   14002de05:	test   eax,eax
   14002de07:	je     0x14002de14
   14002de09:	mov    dl,0x1
   14002de0b:	mov    rcx,rbx
   14002de0e:	call   0x14001c42c
   14002de13:	nop
   14002de14:	call   0x14001ef6c
   14002de19:	mov    rcx,QWORD PTR [rbp+0xe0]
   14002de20:	mov    QWORD PTR [rax+0xf0],rcx
   14002de27:	call   0x14001ef6c
   14002de2c:	mov    rcx,QWORD PTR [rbp+0x50]
   14002de30:	mov    QWORD PTR [rax+0xf8],rcx
   14002de37:	add    rsp,0x28
   14002de3b:	pop    rbp
   14002de3c:	pop    rbx
   14002de3d:	ret    
   14002de3e:	int3   
   14002de3f:	rex push rbp
   14002de41:	sub    rsp,0x20
   14002de45:	mov    rbp,rdx
   14002de48:	xor    eax,eax
   14002de4a:	cmp    BYTE PTR [rbp+0x38],al
   14002de4d:	setne  al
   14002de50:	add    rsp,0x20
   14002de54:	pop    rbp
   14002de55:	ret    
   14002de56:	int3   
   14002de57:	rex push rbp
   14002de59:	sub    rsp,0x20
   14002de5d:	mov    rbp,rdx
   14002de60:	call   0x14001d310
   14002de65:	nop
   14002de66:	add    rsp,0x20
   14002de6a:	pop    rbp
   14002de6b:	ret    
   14002de6c:	int3   
   14002de6d:	rex push rbp
   14002de6f:	sub    rsp,0x20
   14002de73:	mov    rbp,rdx
   14002de76:	call   0x14001ef6c
   14002de7b:	cmp    DWORD PTR [rax+0x100],0x0
   14002de82:	jle    0x14002de8f
   14002de84:	call   0x14001ef6c
   14002de89:	dec    DWORD PTR [rax+0x100]
   14002de8f:	add    rsp,0x20
   14002de93:	pop    rbp
   14002de94:	ret    
   14002de95:	int3   
   14002de96:	rex push rbp
   14002de98:	sub    rsp,0x20
   14002de9c:	mov    rbp,rdx
   14002de9f:	cmp    DWORD PTR [rbp+0x80],0x0
   14002dea6:	je     0x14002deb3
   14002dea8:	mov    ecx,0x8
   14002dead:	call   0x14001b308
   14002deb2:	nop
   14002deb3:	add    rsp,0x20
   14002deb7:	pop    rbp
   14002deb8:	ret    
   14002deb9:	int3   
   14002deba:	rex push rbp
   14002debc:	sub    rsp,0x20
   14002dec0:	mov    rbp,rdx
   14002dec3:	mov    ecx,0xd
   14002dec8:	add    rsp,0x20
   14002decc:	pop    rbp
   14002decd:	jmp    0x14001b308
   14002ded2:	int3   
   14002ded3:	rex push rbp
   14002ded5:	sub    rsp,0x20
   14002ded9:	mov    rbp,rdx
   14002dedc:	mov    ecx,0xc
   14002dee1:	add    rsp,0x20
   14002dee5:	pop    rbp
   14002dee6:	jmp    0x14001b308
   14002deeb:	int3   
   14002deec:	rex push rbp
   14002deee:	sub    rsp,0x20
   14002def2:	mov    rbp,rdx
   14002def5:	mov    ecx,0xd
   14002defa:	add    rsp,0x20
   14002defe:	pop    rbp
   14002deff:	jmp    0x14001b308
   14002df04:	int3   
   14002df05:	rex push rbp
   14002df07:	sub    rsp,0x20
   14002df0b:	mov    rbp,rdx
   14002df0e:	mov    ecx,0xe
   14002df13:	add    rsp,0x20
   14002df17:	pop    rbp
   14002df18:	jmp    0x14001b308
   14002df1d:	int3   
   14002df1e:	rex push rbp
   14002df20:	sub    rsp,0x20
   14002df24:	mov    rbp,rdx
   14002df27:	mov    rax,QWORD PTR [rcx]
   14002df2a:	cmp    DWORD PTR [rax],0xc0000005
   14002df30:	je     0x14002df3e
   14002df32:	cmp    DWORD PTR [rax],0xc000001d
   14002df38:	je     0x14002df3e
   14002df3a:	xor    eax,eax
   14002df3c:	jmp    0x14002df43
   14002df3e:	mov    eax,0x1
   14002df43:	add    rsp,0x20
   14002df47:	pop    rbp
   14002df48:	ret    
   14002df49:	int3   
   14002df4a:	rex push rbp
   14002df4c:	sub    rsp,0x20
   14002df50:	mov    rbp,rdx
   14002df53:	mov    ecx,0xb
   14002df58:	call   0x14001b308
   14002df5d:	nop
   14002df5e:	add    rsp,0x20
   14002df62:	pop    rbp
   14002df63:	ret    
   14002df64:	int3   
   14002df65:	rex push rbp
   14002df67:	sub    rsp,0x20
   14002df6b:	mov    rbp,rdx
   14002df6e:	mov    ecx,0xc
   14002df73:	add    rsp,0x20
   14002df77:	pop    rbp
   14002df78:	jmp    0x14001b308
   14002df7d:	int3   
   14002df7e:	rex push rbp
   14002df80:	sub    rsp,0x20
   14002df84:	mov    rbp,rdx
   14002df87:	mov    ecx,0xc
   14002df8c:	call   0x14001b308
   14002df91:	nop
   14002df92:	add    rsp,0x20
   14002df96:	pop    rbp
   14002df97:	ret    
   14002df98:	int3   
   14002df99:	rex push rbp
   14002df9b:	sub    rsp,0x20
   14002df9f:	mov    rbp,rdx
   14002dfa2:	mov    ecx,0xc
   14002dfa7:	call   0x14001b308
   14002dfac:	nop
   14002dfad:	add    rsp,0x20
   14002dfb1:	pop    rbp
   14002dfb2:	ret    
   14002dfb3:	int3   
   14002dfb4:	rex push rbp
   14002dfb6:	sub    rsp,0x20
   14002dfba:	mov    rbp,rdx
   14002dfbd:	mov    rax,QWORD PTR [rbp+0x60]
   14002dfc1:	and    DWORD PTR [rax+0xc8],0xffffffef
   14002dfc8:	add    rsp,0x20
   14002dfcc:	pop    rbp
   14002dfcd:	ret    
   14002dfce:	int3   
   14002dfcf:	rex push rbp
   14002dfd1:	sub    rsp,0x20
   14002dfd5:	mov    rbp,rdx
   14002dfd8:	cmp    DWORD PTR [rbp+0x60],0x0
   14002dfdc:	je     0x14002dfe6
   14002dfde:	xor    ecx,ecx
   14002dfe0:	call   0x14001b308
   14002dfe5:	nop
   14002dfe6:	add    rsp,0x20
   14002dfea:	pop    rbp
   14002dfeb:	ret    
   14002dfec:	int3   
   14002dfed:	int3   
   14002dfee:	int3   
   14002dfef:	int3   
   14002dff0:	rex push rbp
   14002dff2:	sub    rsp,0x20
   14002dff6:	mov    rbp,rdx
   14002dff9:	mov    rax,QWORD PTR [rcx]
   14002dffc:	xor    ecx,ecx
   14002dffe:	cmp    DWORD PTR [rax],0xc0000005
   14002e004:	sete   cl
   14002e007:	mov    eax,ecx
   14002e009:	add    rsp,0x20
   14002e00d:	pop    rbp
   14002e00e:	ret    
   14002e00f:	int3   
   14002e010:	rex push rbp
   14002e012:	sub    rsp,0x20
   14002e016:	mov    rbp,rdx
   14002e019:	mov    ecx,DWORD PTR [rbp+0x50]
   14002e01c:	add    rsp,0x20
   14002e020:	pop    rbp
   14002e021:	jmp    0x14002a180
   14002e026:	int3   
   14002e027:	rex push rbp
   14002e029:	sub    rsp,0x20
   14002e02d:	mov    rbp,rdx
   14002e030:	movsxd rcx,DWORD PTR [rbp+0x20]
   14002e034:	mov    rax,rcx
   14002e037:	mov    rdx,QWORD PTR [rip+0x16b62]        # 0x140044ba0
   14002e03e:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14002e042:	call   0x1400271fc
   14002e047:	nop
   14002e048:	add    rsp,0x20
   14002e04c:	pop    rbp
   14002e04d:	ret    
   14002e04e:	int3   
   14002e04f:	rex push rbp
   14002e051:	sub    rsp,0x20
   14002e055:	mov    rbp,rdx
   14002e058:	mov    ecx,0x1
   14002e05d:	add    rsp,0x20
   14002e061:	pop    rbp
   14002e062:	jmp    0x14001b308
   14002e067:	int3   
   14002e068:	rex push rbp
   14002e06a:	sub    rsp,0x20
   14002e06e:	mov    rbp,rdx
   14002e071:	mov    ecx,0x1
   14002e076:	add    rsp,0x20
   14002e07a:	pop    rbp
   14002e07b:	jmp    0x14001b308
   14002e080:	int3   
   14002e081:	rex push rbp
   14002e083:	sub    rsp,0x20
   14002e087:	mov    rbp,rdx
   14002e08a:	mov    ecx,0xa
   14002e08f:	add    rsp,0x20
   14002e093:	pop    rbp
   14002e094:	jmp    0x14001b308
   14002e099:	int3   
   14002e09a:	rex push rbp
   14002e09c:	sub    rsp,0x20
   14002e0a0:	mov    rbp,rdx
   14002e0a3:	mov    rcx,QWORD PTR [rbp+0x30]
   14002e0a7:	add    rsp,0x20
   14002e0ab:	pop    rbp
   14002e0ac:	jmp    0x1400271ac
   14002e0b1:	int3   
   14002e0b2:	rex push rbp
   14002e0b4:	sub    rsp,0x20
   14002e0b8:	mov    rbp,rdx
   14002e0bb:	mov    ecx,DWORD PTR [rbp+0x40]
   14002e0be:	add    rsp,0x20
   14002e0c2:	pop    rbp
   14002e0c3:	jmp    0x14002a180
   14002e0c8:	int3   
   14002e0c9:	int3   
   14002e0ca:	int3   
   14002e0cb:	int3   
   14002e0cc:	int3   
   14002e0cd:	int3   
   14002e0ce:	int3   
   14002e0cf:	int3   
   14002e0d0:	rex push rbx
   14002e0d2:	sub    rsp,0x20
   14002e0d6:	mov    r8,QWORD PTR [rip+0x16a5b]        # 0x140044b38
   14002e0dd:	lea    rdx,[rsp+0x30]
   14002e0e2:	mov    r9,r8
   14002e0e5:	mov    r8,QWORD PTR [r8]
   14002e0e8:	call   0x140001a90
   14002e0ed:	mov    rbx,QWORD PTR [rip+0x16a44]        # 0x140044b38
   14002e0f4:	lea    rcx,[rsp+0x30]
   14002e0f9:	call   0x1400025a0
   14002e0fe:	call   0x140002740
   14002e103:	lea    rcx,[rsp+0x30]
   14002e108:	call   0x1400025a0
   14002e10d:	call   0x140002740
   14002e112:	lea    rcx,[rsp+0x30]
   14002e117:	call   0x1400025a0
   14002e11c:	call   0x140002740
   14002e121:	lea    rcx,[rsp+0x30]
   14002e126:	call   0x1400025a0
   14002e12b:	mov    rcx,rbx
   14002e12e:	call   0x140018a04
   14002e133:	add    rsp,0x20
   14002e137:	pop    rbx
   14002e138:	ret    
   14002e139:	int3   
   14002e13a:	int3   
   14002e13b:	int3   
   14002e13c:	int3   
   14002e13d:	int3   
   14002e13e:	int3   
   14002e13f:	int3   
   14002e140:	rex push rbx
   14002e142:	sub    rsp,0x20
   14002e146:	mov    r8,QWORD PTR [rip+0x169fb]        # 0x140044b48
   14002e14d:	lea    rdx,[rsp+0x30]
   14002e152:	mov    r9,r8
   14002e155:	mov    r8,QWORD PTR [r8]
   14002e158:	call   0x140001ba0
   14002e15d:	mov    rbx,QWORD PTR [rip+0x169e4]        # 0x140044b48
   14002e164:	lea    rcx,[rsp+0x30]
   14002e169:	call   0x1400025a0
   14002e16e:	call   0x140002740
   14002e173:	lea    rcx,[rsp+0x30]
   14002e178:	call   0x1400025a0
   14002e17d:	call   0x140002740
   14002e182:	lea    rcx,[rsp+0x30]
   14002e187:	call   0x1400025a0
   14002e18c:	call   0x140002740
   14002e191:	lea    rcx,[rsp+0x30]
   14002e196:	call   0x1400025a0
   14002e19b:	mov    rcx,rbx
   14002e19e:	call   0x140018a04
   14002e1a3:	add    rsp,0x20
   14002e1a7:	pop    rbx
   14002e1a8:	ret    
   14002e1a9:	int3   
   14002e1aa:	int3   
   14002e1ab:	int3   
   14002e1ac:	int3   
   14002e1ad:	int3   
   14002e1ae:	int3   
   14002e1af:	int3   
   14002e1b0:	sub    rsp,0x28
   14002e1b4:	cmp    QWORD PTR [rip+0x1494c],0x8        # 0x140042b08
   14002e1bc:	jb     0x14002e1fc
   14002e1be:	lea    rcx,[rsp+0x30]
   14002e1c3:	mov    QWORD PTR [rsp+0x20],rbx
   14002e1c8:	mov    rbx,QWORD PTR [rip+0x14921]        # 0x140042af0
   14002e1cf:	call   0x1400025a0
   14002e1d4:	lea    rdx,[rip+0x14915]        # 0x140042af0
   14002e1db:	lea    rcx,[rsp+0x30]
   14002e1e0:	call   0x140002740
   14002e1e5:	lea    rcx,[rsp+0x30]
   14002e1ea:	call   0x1400025a0
   14002e1ef:	mov    rcx,rbx
   14002e1f2:	call   0x140018a04
   14002e1f7:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e1fc:	xor    eax,eax
   14002e1fe:	mov    QWORD PTR [rip+0x148ff],0x7        # 0x140042b08
   14002e209:	mov    QWORD PTR [rip+0x148f0],rax        # 0x140042b00
   14002e210:	mov    WORD PTR [rip+0x148d9],ax        # 0x140042af0
   14002e217:	add    rsp,0x28
   14002e21b:	ret    
   14002e21c:	int3   
   14002e21d:	int3   
   14002e21e:	int3   
   14002e21f:	int3   
   14002e220:	sub    rsp,0x28
   14002e224:	cmp    QWORD PTR [rip+0x148fc],0x8        # 0x140042b28
   14002e22c:	jb     0x14002e26c
   14002e22e:	lea    rcx,[rsp+0x30]
   14002e233:	mov    QWORD PTR [rsp+0x20],rbx
   14002e238:	mov    rbx,QWORD PTR [rip+0x148d1]        # 0x140042b10
   14002e23f:	call   0x1400025a0
   14002e244:	lea    rdx,[rip+0x148c5]        # 0x140042b10
   14002e24b:	lea    rcx,[rsp+0x30]
   14002e250:	call   0x140002740
   14002e255:	lea    rcx,[rsp+0x30]
   14002e25a:	call   0x1400025a0
   14002e25f:	mov    rcx,rbx
   14002e262:	call   0x140018a04
   14002e267:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e26c:	xor    eax,eax
   14002e26e:	mov    QWORD PTR [rip+0x148af],0x7        # 0x140042b28
   14002e279:	mov    QWORD PTR [rip+0x148a0],rax        # 0x140042b20
   14002e280:	mov    WORD PTR [rip+0x14889],ax        # 0x140042b10
   14002e287:	add    rsp,0x28
   14002e28b:	ret    
   14002e28c:	int3   
   14002e28d:	int3   
   14002e28e:	int3   
   14002e28f:	int3   
   14002e290:	sub    rsp,0x28
   14002e294:	cmp    QWORD PTR [rip+0x148ac],0x8        # 0x140042b48
   14002e29c:	jb     0x14002e2dc
   14002e29e:	lea    rcx,[rsp+0x30]
   14002e2a3:	mov    QWORD PTR [rsp+0x20],rbx
   14002e2a8:	mov    rbx,QWORD PTR [rip+0x14881]        # 0x140042b30
   14002e2af:	call   0x1400025a0
   14002e2b4:	lea    rdx,[rip+0x14875]        # 0x140042b30
   14002e2bb:	lea    rcx,[rsp+0x30]
   14002e2c0:	call   0x140002740
   14002e2c5:	lea    rcx,[rsp+0x30]
   14002e2ca:	call   0x1400025a0
   14002e2cf:	mov    rcx,rbx
   14002e2d2:	call   0x140018a04
   14002e2d7:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e2dc:	xor    eax,eax
   14002e2de:	mov    QWORD PTR [rip+0x1485f],0x7        # 0x140042b48
   14002e2e9:	mov    QWORD PTR [rip+0x14850],rax        # 0x140042b40
   14002e2f0:	mov    WORD PTR [rip+0x14839],ax        # 0x140042b30
   14002e2f7:	add    rsp,0x28
   14002e2fb:	ret    
   14002e2fc:	int3   
   14002e2fd:	int3   
   14002e2fe:	int3   
   14002e2ff:	int3   
   14002e300:	mov    edx,0x20
   14002e305:	lea    r9,[rip+0xfffffffffffda724]        # 0x140008a30
   14002e30c:	lea    rcx,[rip+0x1483d]        # 0x140042b50
   14002e313:	lea    r8d,[rdx-0x1c]
   14002e317:	jmp    0x1400187f0
   14002e31c:	int3   
   14002e31d:	int3   
   14002e31e:	int3   
   14002e31f:	int3   
   14002e320:	lea    rax,[rip+0x12b9]        # 0x14002f5e0
   14002e327:	mov    QWORD PTR [rip+0x148a2],rax        # 0x140042bd0
   14002e32e:	ret    
   14002e32f:	int3   
   14002e330:	sub    rsp,0x28
   14002e334:	cmp    QWORD PTR [rip+0x148b4],0x8        # 0x140042bf0
   14002e33c:	jb     0x14002e37c
   14002e33e:	lea    rcx,[rsp+0x30]
   14002e343:	mov    QWORD PTR [rsp+0x20],rbx
   14002e348:	mov    rbx,QWORD PTR [rip+0x14889]        # 0x140042bd8
   14002e34f:	call   0x1400025a0
   14002e354:	lea    rdx,[rip+0x1487d]        # 0x140042bd8
   14002e35b:	lea    rcx,[rsp+0x30]
   14002e360:	call   0x140002740
   14002e365:	lea    rcx,[rsp+0x30]
   14002e36a:	call   0x1400025a0
   14002e36f:	mov    rcx,rbx
   14002e372:	call   0x140018a04
   14002e377:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e37c:	xor    eax,eax
   14002e37e:	mov    QWORD PTR [rip+0x14867],0x7        # 0x140042bf0
   14002e389:	mov    QWORD PTR [rip+0x14858],rax        # 0x140042be8
   14002e390:	mov    WORD PTR [rip+0x14841],ax        # 0x140042bd8
   14002e397:	add    rsp,0x28
   14002e39b:	ret    
   14002e39c:	int3   
   14002e39d:	int3   
   14002e39e:	int3   
   14002e39f:	int3   
   14002e3a0:	sub    rsp,0x28
   14002e3a4:	cmp    QWORD PTR [rip+0x14864],0x8        # 0x140042c10
   14002e3ac:	jb     0x14002e3ec
   14002e3ae:	lea    rcx,[rsp+0x30]
   14002e3b3:	mov    QWORD PTR [rsp+0x20],rbx
   14002e3b8:	mov    rbx,QWORD PTR [rip+0x14839]        # 0x140042bf8
   14002e3bf:	call   0x1400025a0
   14002e3c4:	lea    rdx,[rip+0x1482d]        # 0x140042bf8
   14002e3cb:	lea    rcx,[rsp+0x30]
   14002e3d0:	call   0x140002740
   14002e3d5:	lea    rcx,[rsp+0x30]
   14002e3da:	call   0x1400025a0
   14002e3df:	mov    rcx,rbx
   14002e3e2:	call   0x140018a04
   14002e3e7:	mov    rbx,QWORD PTR [rsp+0x20]
   14002e3ec:	xor    eax,eax
   14002e3ee:	mov    QWORD PTR [rip+0x14817],0x7        # 0x140042c10
   14002e3f9:	mov    QWORD PTR [rip+0x14808],rax        # 0x140042c08
   14002e400:	mov    WORD PTR [rip+0x147f1],ax        # 0x140042bf8
   14002e407:	add    rsp,0x28
   14002e40b:	ret    
   14002e40c:	int3   
   14002e40d:	int3   
   14002e40e:	int3   
   14002e40f:	int3   
   14002e410:	lea    rax,[rip+0x11c9]        # 0x14002f5e0
   14002e417:	mov    QWORD PTR [rip+0x147fa],rax        # 0x140042c18
   14002e41e:	ret    
   14002e41f:	int3   
   14002e420:	lea    rax,[rip+0x11b9]        # 0x14002f5e0
   14002e427:	mov    QWORD PTR [rip+0x147f2],rax        # 0x140042c20
   14002e42e:	ret    
   14002e42f:	int3   
   14002e430:	rex push rbx
   14002e432:	sub    rsp,0x20
   14002e436:	jmp    0x14002e467
   14002e438:	mov    rax,QWORD PTR [rbx]
   14002e43b:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e43f:	mov    QWORD PTR [rip+0x15072],rax        # 0x1400434b8
   14002e446:	mov    rax,QWORD PTR [rcx]
   14002e449:	call   QWORD PTR [rax+0x10]
   14002e44c:	test   rax,rax
   14002e44f:	je     0x14002e45f
   14002e451:	mov    r8,QWORD PTR [rax]
   14002e454:	mov    edx,0x1
   14002e459:	mov    rcx,rax
   14002e45c:	call   QWORD PTR [r8]
   14002e45f:	mov    rcx,rbx
   14002e462:	call   0x140018a04
   14002e467:	mov    rbx,QWORD PTR [rip+0x1504a]        # 0x1400434b8
   14002e46e:	test   rbx,rbx
   14002e471:	jne    0x14002e438
   14002e473:	add    rsp,0x20
   14002e477:	pop    rbx
   14002e478:	ret    
   14002e479:	int3   
   14002e47a:	int3   
   14002e47b:	int3   
   14002e47c:	sub    rsp,0x28
   14002e480:	mov    rcx,QWORD PTR [rip+0x15059]        # 0x1400434e0
   14002e487:	test   rcx,rcx
   14002e48a:	je     0x14002e4a5
   14002e48c:	mov    rax,QWORD PTR [rcx]
   14002e48f:	call   QWORD PTR [rax+0x10]
   14002e492:	test   rax,rax
   14002e495:	je     0x14002e4a5
   14002e497:	mov    r8,QWORD PTR [rax]
   14002e49a:	mov    edx,0x1
   14002e49f:	mov    rcx,rax
   14002e4a2:	call   QWORD PTR [r8]
   14002e4a5:	add    rsp,0x28
   14002e4a9:	ret    
   14002e4aa:	int3   
   14002e4ab:	int3   
   14002e4ac:	lea    rcx,[rip+0x1504d]        # 0x140043500
   14002e4b3:	jmp    0x14001469c
   14002e4b8:	sub    rsp,0x28
   14002e4bc:	jmp    0x14002e4e0
   14002e4be:	lea    rcx,[rip+0x1512b]        # 0x1400435f0
   14002e4c5:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002e4c9:	inc    rax
   14002e4cc:	mov    QWORD PTR [rip+0x12b3d],rax        # 0x140041010
   14002e4d3:	call   QWORD PTR [rip+0xd4f]        # 0x14002f228
   14002e4d9:	test   rax,rax
   14002e4dc:	je     0x14002e4e0
   14002e4de:	call   rax
   14002e4e0:	mov    rax,QWORD PTR [rip+0x12b29]        # 0x140041010
   14002e4e7:	cmp    rax,0xa
   14002e4eb:	jb     0x14002e4be
   14002e4ed:	add    rsp,0x28
   14002e4f1:	ret    
   14002e4f2:	int3   
   14002e4f3:	int3   
   14002e4f4:	lea    rcx,[rip+0x15145]        # 0x140043640
   14002e4fb:	jmp    0x14001469c
