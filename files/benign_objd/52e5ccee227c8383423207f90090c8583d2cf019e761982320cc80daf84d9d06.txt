
52e5ccee227c8383423207f90090c8583d2cf019e761982320cc80daf84d9d06.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	movaps xmm0,XMMWORD PTR [rip+0x4649]        # 0x140005650
   140001007:	movaps xmm1,XMMWORD PTR [rip+0x4652]        # 0x140005660
   14000100e:	movdqu XMMWORD PTR [rip+0x768a],xmm0        # 0x1400086a0
   140001016:	movdqu XMMWORD PTR [rip+0x7692],xmm1        # 0x1400086b0
   14000101e:	ret    
   14000101f:	int3   
   140001020:	int3   
   140001021:	int3   
   140001022:	int3   
   140001023:	int3   
   140001024:	int3   
   140001025:	int3   
   140001026:	int3   
   140001027:	int3   
   140001028:	sub    rsp,0x38
   14000102c:	and    QWORD PTR [rsp+0x20],0x0
   140001032:	lea    r8,[rip+0x45f7]        # 0x140005630
   140001039:	mov    eax,0xb
   14000103e:	movzx  r9d,ax
   140001042:	lea    edx,[rax+0x20]
   140001045:	call   QWORD PTR [rip+0x43c5]        # 0x140005410
   14000104b:	add    rsp,0x38
   14000104f:	ret    
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	int3   
   140001055:	int3   
   140001056:	int3   
   140001057:	int3   
   140001058:	mov    r11,rsp
   14000105b:	mov    DWORD PTR [r11+0x20],r9d
   14000105f:	sub    rsp,0x48
   140001063:	and    QWORD PTR [r11-0x18],0x0
   140001068:	lea    rax,[r11+0x20]
   14000106c:	movzx  r9d,dx
   140001070:	mov    edx,0x2b
   140001075:	mov    QWORD PTR [r11-0x20],0x4
   14000107d:	mov    QWORD PTR [r11-0x28],rax
   140001081:	call   QWORD PTR [rip+0x4389]        # 0x140005410
   140001087:	add    rsp,0x48
   14000108b:	ret    
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	int3   
   140001091:	int3   
   140001092:	int3   
   140001093:	int3   
   140001094:	sub    rsp,0x58
   140001098:	test   r9,r9
   14000109b:	je     0x1400010b0
   14000109d:	or     rdx,0xffffffffffffffff
   1400010a1:	inc    rdx
   1400010a4:	cmp    BYTE PTR [r9+rdx*1],0x0
   1400010a9:	jne    0x1400010a1
   1400010ab:	inc    rdx
   1400010ae:	jmp    0x1400010b5
   1400010b0:	mov    edx,0x5
   1400010b5:	test   r9,r9
   1400010b8:	lea    r8,[rsp+0x80]
   1400010c0:	lea    rax,[rip+0x4499]        # 0x140005560
   1400010c7:	cmovne rax,r9
   1400010cb:	and    QWORD PTR [rsp+0x40],0x0
   1400010d1:	mov    QWORD PTR [rsp+0x38],0x4
   1400010da:	mov    r9d,0xc
   1400010e0:	mov    QWORD PTR [rsp+0x30],r8
   1400010e5:	lea    r8,[rip+0x4544]        # 0x140005630
   1400010ec:	mov    QWORD PTR [rsp+0x28],rdx
   1400010f1:	mov    QWORD PTR [rsp+0x20],rax
   1400010f6:	lea    edx,[r9+0x1f]
   1400010fa:	call   QWORD PTR [rip+0x4310]        # 0x140005410
   140001100:	add    rsp,0x58
   140001104:	ret    
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	mov    QWORD PTR [rsp+0x8],rbx
   140001115:	mov    QWORD PTR [rsp+0x10],rsi
   14000111a:	push   rdi
   14000111b:	sub    rsp,0x20
   14000111f:	and    DWORD PTR [r8],0x0
   140001123:	mov    rbx,rdx
   140001126:	sub    ecx,0x4
   140001129:	je     0x140001140
   14000112b:	cmp    ecx,0x1
   14000112e:	je     0x140001137
   140001130:	mov    eax,0x57
   140001135:	jmp    0x14000117f
   140001137:	xor    edi,edi
   140001139:	xor    eax,eax
   14000113b:	xor    sil,sil
   14000113e:	jmp    0x140001161
   140001140:	mov    rcx,r9
   140001143:	call   QWORD PTR [rip+0x42bf]        # 0x140005408
   140001149:	mov    rcx,rax
   14000114c:	mov    rdi,rax
   14000114f:	call   QWORD PTR [rip+0x42ab]        # 0x140005400
   140001155:	mov    rcx,rdi
   140001158:	mov    sil,al
   14000115b:	call   QWORD PTR [rip+0x4297]        # 0x1400053f8
   140001161:	test   BYTE PTR [rbx+0x1a],0x2
   140001165:	je     0x140001172
   140001167:	mov    rcx,QWORD PTR [rbx+0x10]
   14000116b:	test   rcx,rcx
   14000116e:	cmovne rbx,rcx
   140001172:	mov    QWORD PTR [rbx+0x10],rdi
   140001176:	mov    BYTE PTR [rbx+0x19],sil
   14000117a:	mov    DWORD PTR [rbx+0x1c],eax
   14000117d:	xor    eax,eax
   14000117f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001184:	mov    rsi,QWORD PTR [rsp+0x38]
   140001189:	add    rsp,0x20
   14000118d:	pop    rdi
   14000118e:	ret    
   14000118f:	int3   
   140001190:	int3   
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	mov    QWORD PTR [rsp+0x10],rbx
   14000119d:	mov    QWORD PTR [rsp+0x18],rbp
   1400011a2:	mov    QWORD PTR [rsp+0x20],rsi
   1400011a7:	push   rdi
   1400011a8:	push   r14
   1400011aa:	push   r15
   1400011ac:	sub    rsp,0x270
   1400011b3:	mov    rax,QWORD PTR [rip+0x6e4e]        # 0x140008008
   1400011ba:	xor    rax,rsp
   1400011bd:	mov    QWORD PTR [rsp+0x260],rax
   1400011c5:	xor    r9d,r9d
   1400011c8:	mov    rbp,rcx
   1400011cb:	xor    r8d,r8d
   1400011ce:	xor    ecx,ecx
   1400011d0:	lea    edx,[r9+0x1]
   1400011d4:	call   QWORD PTR [rip+0x402e]        # 0x140005208
   1400011da:	xor    ebx,ebx
   1400011dc:	mov    QWORD PTR [rip+0x74a1],0x1        # 0x140008688
   1400011e7:	lea    rax,[rip+0x4452]        # 0x140005640
   1400011ee:	mov    QWORD PTR [rip+0x748b],rbx        # 0x140008680
   1400011f5:	lea    rdi,[rip+0x7474]        # 0x140008670
   1400011fc:	mov    QWORD PTR [rip+0x746d],rbx        # 0x140008670
   140001203:	mov    QWORD PTR [rip+0x748e],rax        # 0x140008698
   14000120a:	lea    rsi,[rip+0x7487]        # 0x140008698
   140001211:	mov    QWORD PTR [rip+0x6e08],rdi        # 0x140008020
   140001218:	mov    r8,QWORD PTR [rsi]
   14000121b:	lea    rax,[rdi+0x8]
   14000121f:	mov    QWORD PTR [rsp+0x38],rax
   140001224:	lea    rcx,[rip+0xfffffffffffffee5]        # 0x140001110
   14000122b:	mov    QWORD PTR [rsp+0x30],rbx
   140001230:	lea    rax,[rsp+0x48]
   140001235:	mov    QWORD PTR [rsp+0x48],r8
   14000123a:	lea    rsi,[rsi+0x8]
   14000123e:	mov    QWORD PTR [rsp+0x50],rbx
   140001243:	mov    r9d,0x1
   140001249:	mov    QWORD PTR [rsp+0x28],rbx
   14000124e:	mov    rdx,rdi
   140001251:	mov    QWORD PTR [rsp+0x20],rax
   140001256:	mov    QWORD PTR [rdi+0x20],r8
   14000125a:	call   QWORD PTR [rip+0x4190]        # 0x1400053f0
   140001260:	mov    rdi,QWORD PTR [rdi]
   140001263:	test   rdi,rdi
   140001266:	jne    0x140001218
   140001268:	xor    edx,edx
   14000126a:	lea    rcx,[rip+0x4333]        # 0x1400055a4
   140001271:	call   QWORD PTR [rip+0x8d99]        # 0x14000a010
   140001277:	lea    r14d,[rdi+0xa]
   14000127b:	mov    esi,eax
   14000127d:	lea    r15,[rip+0x6d9c]        # 0x140008020
   140001284:	test   eax,eax
   140001286:	jns    0x1400012b0
   140001288:	mov    rcx,QWORD PTR [rip+0x6d91]        # 0x140008020
   14000128f:	cmp    rcx,r15
   140001292:	je     0x1400012b0
   140001294:	test   BYTE PTR [rcx+0x1c],0x4
   140001298:	je     0x1400012b0
   14000129a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000129e:	lea    r8,[rip+0x438b]        # 0x140005630
   1400012a5:	mov    edx,r14d
   1400012a8:	mov    r9d,eax
   1400012ab:	call   0x140001058
   1400012b0:	mov    r9d,0x100
   1400012b6:	mov    QWORD PTR [rip+0x73ab],rbp        # 0x140008668
   1400012bd:	lea    r8,[rsp+0x60]
   1400012c2:	mov    edx,0x3e8
   1400012c7:	mov    rcx,rbp
   1400012ca:	call   QWORD PTR [rip+0x3dc0]        # 0x140005090
   1400012d0:	call   QWORD PTR [rip+0x8d2a]        # 0x14000a000
   1400012d6:	lea    rdx,[rsp+0x60]
   1400012db:	lea    rcx,[rip+0x4286]        # 0x140005568
   1400012e2:	call   QWORD PTR [rip+0x3db0]        # 0x140005098
   1400012e8:	mov    rdi,rax
   1400012eb:	test   rax,rax
   1400012ee:	jne    0x1400013f9
   1400012f4:	or     ecx,0xffffffff
   1400012f7:	call   QWORD PTR [rip+0x3d3b]        # 0x140005038
   1400012fd:	lea    edx,[rdi+0x2]
   140001300:	xor    ecx,ecx
   140001302:	call   QWORD PTR [rip+0x3eb8]        # 0x1400051c0
   140001308:	mov    edi,eax
   14000130a:	test   eax,eax
   14000130c:	js     0x1400013ed
   140001312:	lea    rdx,[rip+0x430f]        # 0x140005628
   140001319:	mov    ecx,0x70
   14000131e:	call   0x1400039e4
   140001323:	test   rax,rax
   140001326:	je     0x14000136c
   140001328:	mov    QWORD PTR [rax],rbx
   14000132b:	xor    ecx,ecx
   14000132d:	mov    QWORD PTR [rax+0xc],rbx
   140001331:	mov    DWORD PTR [rax+0x8],ebx
   140001334:	mov    QWORD PTR [rax+0x18],rbx
   140001338:	mov    QWORD PTR [rax+0x20],0x11
   140001340:	mov    QWORD PTR [rax+0x28],rbx
   140001344:	mov    QWORD PTR [rax+0x30],rbx
   140001348:	mov    DWORD PTR [rax+0x38],r14d
   14000134c:	mov    BYTE PTR [rax+0x40],bl
   14000134f:	mov    QWORD PTR [rax+0x54],rbx
   140001353:	mov    QWORD PTR [rax+0x5c],rbx
   140001357:	mov    QWORD PTR [rax+0x64],rbx
   14000135b:	mov    QWORD PTR [rax+0x44],rcx
   14000135f:	mov    QWORD PTR [rax+0x4c],rcx
   140001363:	mov    QWORD PTR [rip+0x735e],rax        # 0x1400086c8
   14000136a:	jmp    0x140001376
   14000136c:	mov    rax,rbx
   14000136f:	mov    QWORD PTR [rip+0x7352],rbx        # 0x1400086c8
   140001376:	test   rax,rax
   140001379:	jne    0x140001382
   14000137b:	mov    edi,0x8007000e
   140001380:	jmp    0x1400013e7
   140001382:	call   QWORD PTR [rip+0x3ec0]        # 0x140005248
   140001388:	mov    rcx,rax
   14000138b:	lea    rdx,[rsp+0x40]
   140001390:	call   QWORD PTR [rip+0x3f9a]        # 0x140005330
   140001396:	mov    rbp,rax
   140001399:	test   rax,rax
   14000139c:	je     0x1400013e7
   14000139e:	cmp    DWORD PTR [rsp+0x40],0x2
   1400013a3:	jne    0x1400013e7
   1400013a5:	mov    r14,QWORD PTR [rax+0x8]
   1400013a9:	lea    rdx,[rip+0x41d8]        # 0x140005588
   1400013b0:	mov    rcx,r14
   1400013b3:	call   QWORD PTR [rip+0x3f37]        # 0x1400052f0
   1400013b9:	test   eax,eax
   1400013bb:	jne    0x1400013c2
   1400013bd:	lea    ecx,[rax+0x2]
   1400013c0:	jmp    0x1400013d9
   1400013c2:	lea    rdx,[rip+0x41cf]        # 0x140005598
   1400013c9:	mov    rcx,r14
   1400013cc:	call   QWORD PTR [rip+0x3f1e]        # 0x1400052f0
   1400013d2:	test   eax,eax
   1400013d4:	jne    0x1400013de
   1400013d6:	lea    ecx,[rax+0x1]
   1400013d9:	call   0x140001580
   1400013de:	mov    rcx,rbp
   1400013e1:	call   QWORD PTR [rip+0x3e31]        # 0x140005218
   1400013e7:	call   QWORD PTR [rip+0x3dcb]        # 0x1400051b8
   1400013ed:	test   esi,esi
   1400013ef:	js     0x140001438
   1400013f1:	test   edi,edi
   1400013f3:	jns    0x140001438
   1400013f5:	mov    esi,edi
   1400013f7:	jmp    0x140001438
   1400013f9:	mov    rcx,QWORD PTR [rip+0x6c20]        # 0x140008020
   140001400:	cmp    rcx,r15
   140001403:	je     0x140001414
   140001405:	test   BYTE PTR [rcx+0x1c],0x4
   140001409:	je     0x140001414
   14000140b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000140f:	call   0x140001028
   140001414:	mov    rcx,rdi
   140001417:	call   QWORD PTR [rip+0x3c83]        # 0x1400050a0
   14000141d:	test   eax,eax
   14000141f:	je     0x14000142f
   140001421:	mov    edx,0x9
   140001426:	mov    rcx,rdi
   140001429:	call   QWORD PTR [rip+0x3c79]        # 0x1400050a8
   14000142f:	mov    rcx,rdi
   140001432:	call   QWORD PTR [rip+0x3c78]        # 0x1400050b0
   140001438:	mov    rdi,QWORD PTR [rip+0x6be1]        # 0x140008020
   14000143f:	cmp    rdi,r15
   140001442:	je     0x140001468
   140001444:	jmp    0x14000145c
   140001446:	mov    rcx,QWORD PTR [rdi+0x8]
   14000144a:	test   rcx,rcx
   14000144d:	je     0x140001459
   14000144f:	call   QWORD PTR [rip+0x3fc3]        # 0x140005418
   140001455:	mov    QWORD PTR [rdi+0x8],rbx
   140001459:	mov    rdi,QWORD PTR [rdi]
   14000145c:	test   rdi,rdi
   14000145f:	jne    0x140001446
   140001461:	mov    QWORD PTR [rip+0x6bb8],r15        # 0x140008020
   140001468:	test   esi,esi
   14000146a:	setns  bl
   14000146d:	mov    eax,ebx
   14000146f:	mov    rcx,QWORD PTR [rsp+0x260]
   140001477:	xor    rcx,rsp
   14000147a:	call   0x1400039c0
   14000147f:	lea    r11,[rsp+0x270]
   140001487:	mov    rbx,QWORD PTR [r11+0x28]
   14000148b:	mov    rbp,QWORD PTR [r11+0x30]
   14000148f:	mov    rsi,QWORD PTR [r11+0x38]
   140001493:	mov    rsp,r11
   140001496:	pop    r15
   140001498:	pop    r14
   14000149a:	pop    rdi
   14000149b:	ret    
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	int3   
   1400014a1:	int3   
   1400014a2:	int3   
   1400014a3:	int3   
   1400014a4:	rex push rbx
   1400014a6:	sub    rsp,0x60
   1400014aa:	mov    rax,QWORD PTR [rip+0x6b57]        # 0x140008008
   1400014b1:	xor    rax,rsp
   1400014b4:	mov    QWORD PTR [rsp+0x50],rax
   1400014b9:	lea    rcx,[rip+0x7200]        # 0x1400086c0
   1400014c0:	call   QWORD PTR [rip+0x3b8a]        # 0x140005050
   1400014c6:	mov    ebx,eax
   1400014c8:	test   eax,eax
   1400014ca:	js     0x14000154a
   1400014cc:	movdqa xmm0,XMMWORD PTR [rip+0x44cc]        # 0x1400059a0
   1400014d4:	lea    r8,[rsp+0x20]
   1400014d9:	movdqa xmm1,XMMWORD PTR [rip+0x44cf]        # 0x1400059b0
   1400014e1:	mov    edx,0x6
   1400014e6:	mov    rcx,QWORD PTR [rip+0x71d3]        # 0x1400086c0
   1400014ed:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   1400014f3:	movdqa xmm0,XMMWORD PTR [rip+0x4495]        # 0x140005990
   1400014fb:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140001501:	movdqu XMMWORD PTR [rsp+0x30],xmm1
   140001507:	call   QWORD PTR [rip+0x3b4b]        # 0x140005058
   14000150d:	mov    ebx,eax
   14000150f:	test   eax,eax
   140001511:	js     0x14000154a
   140001513:	mov    rcx,QWORD PTR [rip+0x71a6]        # 0x1400086c0
   14000151a:	xor    r8d,r8d
   14000151d:	lea    edx,[r8+0x3]
   140001521:	call   QWORD PTR [rip+0x3b39]        # 0x140005060
   140001527:	mov    ebx,eax
   140001529:	test   eax,eax
   14000152b:	js     0x14000154a
   14000152d:	mov    rcx,QWORD PTR [rip+0x718c]        # 0x1400086c0
   140001534:	lea    rdx,[rip+0x6b5]        # 0x140001bf0
   14000153b:	xor    r8d,r8d
   14000153e:	call   QWORD PTR [rip+0x3b24]        # 0x140005068
   140001544:	mov    ebx,eax
   140001546:	test   eax,eax
   140001548:	jns    0x140001564
   14000154a:	mov    rcx,QWORD PTR [rip+0x716f]        # 0x1400086c0
   140001551:	test   rcx,rcx
   140001554:	je     0x140001564
   140001556:	call   QWORD PTR [rip+0x3b14]        # 0x140005070
   14000155c:	and    QWORD PTR [rip+0x715c],0x0        # 0x1400086c0
   140001564:	mov    eax,ebx
   140001566:	mov    rcx,QWORD PTR [rsp+0x50]
   14000156b:	xor    rcx,rsp
   14000156e:	call   0x1400039c0
   140001573:	add    rsp,0x60
   140001577:	pop    rbx
   140001578:	ret    
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	mov    rax,rsp
   140001583:	mov    QWORD PTR [rax+0x8],rbx
   140001587:	mov    QWORD PTR [rax+0x10],rsi
   14000158b:	mov    QWORD PTR [rax+0x18],rdi
   14000158f:	push   rbp
   140001590:	push   r14
   140001592:	push   r15
   140001594:	lea    rbp,[rax-0x568]
   14000159b:	sub    rsp,0x650
   1400015a2:	movaps XMMWORD PTR [rax-0x28],xmm6
   1400015a6:	mov    rax,QWORD PTR [rip+0x6a5b]        # 0x140008008
   1400015ad:	xor    rax,rsp
   1400015b0:	mov    QWORD PTR [rbp+0x530],rax
   1400015b7:	mov    rbx,QWORD PTR [rip+0x710a]        # 0x1400086c8
   1400015be:	lea    r8,[rip+0x115b]        # 0x140002720
   1400015c5:	cmp    ecx,0x1
   1400015c8:	mov    r9,rbx
   1400015cb:	mov    edi,0x80004005
   1400015d0:	sete   al
   1400015d3:	xor    edx,edx
   1400015d5:	xor    ecx,ecx
   1400015d7:	mov    BYTE PTR [rbx+0x40],al
   1400015da:	call   QWORD PTR [rip+0x3b28]        # 0x140005108
   1400015e0:	xor    r15d,r15d
   1400015e3:	test   eax,eax
   1400015e5:	je     0x140001698
   1400015eb:	mov    edi,r15d
   1400015ee:	mov    esi,r15d
   1400015f1:	cmp    DWORD PTR [rbx+0x8],r15d
   1400015f5:	jbe    0x1400016ac
   1400015fb:	xor    edx,edx
   1400015fd:	lea    rcx,[rbp-0x1c]
   140001601:	mov    r8d,0x344
   140001607:	call   0x140004122
   14000160c:	mov    rcx,QWORD PTR [rbx]
   14000160f:	lea    r8,[rbp-0x20]
   140001613:	movsxd rax,esi
   140001616:	add    rcx,0x28
   14000161a:	imul   r14,rax,0x168
   140001621:	mov    r9d,0x1
   140001627:	mov    DWORD PTR [rbp-0x20],0x348
   14000162e:	add    rcx,r14
   140001631:	xor    edx,edx
   140001633:	call   QWORD PTR [rip+0x3a47]        # 0x140005080
   140001639:	test   eax,eax
   14000163b:	je     0x140001693
   14000163d:	mov    rcx,QWORD PTR [rbx]
   140001640:	lea    r8,[rbp+0x128]
   140001647:	add    rcx,0x68
   14000164b:	mov    edx,0x80
   140001650:	add    rcx,r14
   140001653:	sub    r8,rcx
   140001656:	lea    rax,[rdx+0x7fffff7e]
   14000165d:	test   rax,rax
   140001660:	je     0x140001679
   140001662:	movzx  eax,WORD PTR [r8+rcx*1]
   140001667:	test   ax,ax
   14000166a:	je     0x140001679
   14000166c:	mov    WORD PTR [rcx],ax
   14000166f:	add    rcx,0x2
   140001673:	sub    rdx,0x1
   140001677:	jne    0x140001656
   140001679:	test   rdx,rdx
   14000167c:	jne    0x140001682
   14000167e:	sub    rcx,0x2
   140001682:	inc    esi
   140001684:	mov    WORD PTR [rcx],r15w
   140001688:	cmp    esi,DWORD PTR [rbx+0x8]
   14000168b:	jb     0x1400015fb
   140001691:	jmp    0x1400016ac
   140001693:	mov    edi,0x80004005
   140001698:	mov    rcx,QWORD PTR [rbx]
   14000169b:	test   rcx,rcx
   14000169e:	je     0x1400016a8
   1400016a0:	call   0x140003590
   1400016a5:	mov    QWORD PTR [rbx],r15
   1400016a8:	mov    QWORD PTR [rbx+0x8],r15
   1400016ac:	test   edi,edi
   1400016ae:	js     0x1400016be
   1400016b0:	mov    rcx,rbx
   1400016b3:	call   0x14000260c
   1400016b8:	mov    edi,eax
   1400016ba:	test   eax,eax
   1400016bc:	jns    0x1400016e3
   1400016be:	lea    rcx,[rbx+0x18]
   1400016c2:	call   0x140002220
   1400016c7:	mov    rcx,QWORD PTR [rbx]
   1400016ca:	test   rcx,rcx
   1400016cd:	je     0x1400016d7
   1400016cf:	call   0x140003590
   1400016d4:	mov    QWORD PTR [rbx],r15
   1400016d7:	mov    QWORD PTR [rbx+0x8],r15
   1400016db:	test   edi,edi
   1400016dd:	js     0x14000188c
   1400016e3:	call   0x1400014a4
   1400016e8:	test   eax,eax
   1400016ea:	js     0x14000188c
   1400016f0:	mov    rax,QWORD PTR [rip+0x6fd1]        # 0x1400086c8
   1400016f7:	lea    r8,[rbp+0x330]
   1400016fe:	mov    rcx,QWORD PTR [rip+0x6f63]        # 0x140008668
   140001705:	mov    r9d,0x100
   14000170b:	mov    edx,0x3e8
   140001710:	movups xmm6,XMMWORD PTR [rax+0x44]
   140001714:	call   QWORD PTR [rip+0x3976]        # 0x140005090
   14000171a:	mov    ebx,0x50
   14000171f:	lea    rcx,[rsp+0x60]
   140001724:	mov    r8d,ebx
   140001727:	xor    edx,edx
   140001729:	call   0x140004122
   14000172e:	mov    rcx,QWORD PTR [rip+0x6f33]        # 0x140008668
   140001735:	lea    rax,[rip+0x204]        # 0x140001940
   14000173c:	lea    edx,[rbx+0x14]
   14000173f:	mov    QWORD PTR [rsp+0x68],rax
   140001744:	mov    QWORD PTR [rsp+0x78],rcx
   140001749:	mov    DWORD PTR [rsp+0x60],ebx
   14000174d:	mov    DWORD PTR [rsp+0x64],0x3
   140001755:	call   QWORD PTR [rip+0x395d]        # 0x1400050b8
   14000175b:	mov    edx,0x7f89
   140001760:	xor    ecx,ecx
   140001762:	mov    QWORD PTR [rbp-0x80],rax
   140001766:	call   QWORD PTR [rip+0x3954]        # 0x1400050c0
   14000176c:	lea    rdi,[rip+0x3df5]        # 0x140005568
   140001773:	mov    QWORD PTR [rbp-0x70],0x6
   14000177b:	lea    rcx,[rsp+0x60]
   140001780:	mov    QWORD PTR [rbp-0x78],rax
   140001784:	mov    QWORD PTR [rbp-0x60],rdi
   140001788:	call   QWORD PTR [rip+0x393a]        # 0x1400050c8
   14000178e:	mov    rax,QWORD PTR [rip+0x6ed3]        # 0x140008668
   140001795:	movdqa xmm0,xmm6
   140001799:	mov    QWORD PTR [rsp+0x58],r15
   14000179e:	movdqa xmm1,xmm6
   1400017a2:	mov    QWORD PTR [rsp+0x50],rax
   1400017a7:	mov    QWORD PTR [rsp+0x48],r15
   1400017ac:	psrldq xmm0,0xc
   1400017b1:	movd   r9d,xmm0
   1400017b6:	movdqa xmm0,xmm6
   1400017ba:	movd   ecx,xmm6
   1400017be:	mov    QWORD PTR [rsp+0x40],r15
   1400017c3:	psrldq xmm1,0x4
   1400017c8:	movd   r8d,xmm1
   1400017cd:	psrldq xmm0,0x8
   1400017d2:	movd   edx,xmm0
   1400017d6:	sub    r9d,r8d
   1400017d9:	mov    DWORD PTR [rsp+0x38],r9d
   1400017de:	mov    r9d,0x82000000
   1400017e4:	sub    edx,ecx
   1400017e6:	mov    DWORD PTR [rsp+0x30],edx
   1400017ea:	mov    rdx,rdi
   1400017ed:	mov    DWORD PTR [rsp+0x28],r8d
   1400017f2:	lea    r8,[rbp+0x330]
   1400017f9:	mov    DWORD PTR [rsp+0x20],ecx
   1400017fd:	mov    ecx,0x40000
   140001802:	call   QWORD PTR [rip+0x38c8]        # 0x1400050d0
   140001808:	mov    rbx,rax
   14000180b:	test   rax,rax
   14000180e:	je     0x14000187c
   140001810:	mov    edx,0xffffffec
   140001815:	mov    rcx,rax
   140001818:	call   QWORD PTR [rip+0x38ba]        # 0x1400050d8
   14000181e:	mov    edx,0x1
   140001823:	mov    rcx,rbx
   140001826:	and    eax,0x400000
   14000182b:	mov    DWORD PTR [rip+0x6e9f],eax        # 0x1400086d0
   140001831:	call   QWORD PTR [rip+0x3871]        # 0x1400050a8
   140001837:	xor    r9d,r9d
   14000183a:	xor    r8d,r8d
   14000183d:	mov    edx,0x8001
   140001842:	mov    rcx,rbx
   140001845:	call   QWORD PTR [rip+0x3895]        # 0x1400050e0
   14000184b:	jmp    0x140001866
   14000184d:	cmp    eax,0xffffffff
   140001850:	je     0x14000187c
   140001852:	lea    rcx,[rbp-0x50]
   140001856:	call   QWORD PTR [rip+0x3894]        # 0x1400050f0
   14000185c:	lea    rcx,[rbp-0x50]
   140001860:	call   QWORD PTR [rip+0x3892]        # 0x1400050f8
   140001866:	xor    r9d,r9d
   140001869:	lea    rcx,[rbp-0x50]
   14000186d:	xor    r8d,r8d
   140001870:	xor    edx,edx
   140001872:	call   QWORD PTR [rip+0x3870]        # 0x1400050e8
   140001878:	test   eax,eax
   14000187a:	jne    0x14000184d
   14000187c:	mov    rdx,QWORD PTR [rip+0x6de5]        # 0x140008668
   140001883:	mov    rcx,rdi
   140001886:	call   QWORD PTR [rip+0x3874]        # 0x140005100
   14000188c:	mov    rcx,QWORD PTR [rip+0x6e2d]        # 0x1400086c0
   140001893:	test   rcx,rcx
   140001896:	je     0x1400018a5
   140001898:	call   QWORD PTR [rip+0x37d2]        # 0x140005070
   14000189e:	mov    QWORD PTR [rip+0x6e1b],r15        # 0x1400086c0
   1400018a5:	mov    rbx,QWORD PTR [rip+0x6e1c]        # 0x1400086c8
   1400018ac:	lea    rcx,[rbx+0x18]
   1400018b0:	call   0x140002220
   1400018b5:	mov    rcx,QWORD PTR [rbx]
   1400018b8:	test   rcx,rcx
   1400018bb:	je     0x1400018c5
   1400018bd:	call   0x140003590
   1400018c2:	mov    QWORD PTR [rbx],r15
   1400018c5:	mov    QWORD PTR [rbx+0x8],r15
   1400018c9:	mov    rbx,QWORD PTR [rip+0x6df8]        # 0x1400086c8
   1400018d0:	test   rbx,rbx
   1400018d3:	je     0x1400018f3
   1400018d5:	lea    rcx,[rbx+0x18]
   1400018d9:	call   0x140002220
   1400018de:	mov    rcx,QWORD PTR [rbx]
   1400018e1:	test   rcx,rcx
   1400018e4:	je     0x1400018eb
   1400018e6:	call   0x140003590
   1400018eb:	mov    rcx,rbx
   1400018ee:	call   0x140003578
   1400018f3:	mov    QWORD PTR [rip+0x6dce],r15        # 0x1400086c8
   1400018fa:	mov    rcx,QWORD PTR [rbp+0x530]
   140001901:	xor    rcx,rsp
   140001904:	call   0x1400039c0
   140001909:	lea    r11,[rsp+0x650]
   140001911:	mov    rbx,QWORD PTR [r11+0x20]
   140001915:	mov    rsi,QWORD PTR [r11+0x28]
   140001919:	mov    rdi,QWORD PTR [r11+0x30]
   14000191d:	movaps xmm6,XMMWORD PTR [r11-0x10]
   140001922:	mov    rsp,r11
   140001925:	pop    r15
   140001927:	pop    r14
   140001929:	pop    rbp
   14000192a:	ret    
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	int3   
   140001931:	int3   
   140001932:	int3   
   140001933:	int3   
   140001934:	int3   
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	mov    QWORD PTR [rsp+0x8],rbx
   140001945:	mov    QWORD PTR [rsp+0x10],rsi
   14000194a:	push   rdi
   14000194b:	sub    rsp,0x30
   14000194f:	xor    edi,edi
   140001951:	mov    eax,0x204
   140001956:	mov    rbx,rcx
   140001959:	cmp    edx,eax
   14000195b:	ja     0x140001a9c
   140001961:	je     0x1400019a7
   140001963:	mov    eax,edx
   140001965:	sub    eax,0x1
   140001968:	je     0x140001a8c
   14000196e:	sub    eax,0x1
   140001971:	je     0x140001a7f
   140001977:	sub    eax,0xd
   14000197a:	je     0x140001a5c
   140001980:	sub    eax,0x1
   140001983:	je     0x140001a23
   140001989:	sub    eax,0x76
   14000198c:	je     0x1400019bb
   14000198e:	cmp    eax,0x7c
   140001991:	jne    0x140001bc6
   140001997:	cmp    r8,0xd
   14000199b:	je     0x1400019b1
   14000199d:	cmp    r8,0x1b
   1400019a1:	jne    0x140001bcf
   1400019a7:	mov    edx,0x8003
   1400019ac:	jmp    0x140001b42
   1400019b1:	mov    edx,0x8004
   1400019b6:	jmp    0x140001b42
   1400019bb:	mov    rsi,QWORD PTR [rip+0x6d06]        # 0x1400086c8
   1400019c2:	lea    rcx,[rsi+0x18]
   1400019c6:	call   0x140002220
   1400019cb:	mov    r8d,edi
   1400019ce:	movsxd rax,r8d
   1400019d1:	mov    ecx,edi
   1400019d3:	imul   rdx,rax,0x168
   1400019da:	cmp    DWORD PTR [rsi+0x5c],edi
   1400019dd:	mov    rax,QWORD PTR [rsi]
   1400019e0:	seta   cl
   1400019e3:	mov    DWORD PTR [rdx+rax*1+0x4],ecx
   1400019e7:	mov    ecx,edi
   1400019e9:	cmp    DWORD PTR [rsi+0x60],edi
   1400019ec:	mov    rax,QWORD PTR [rsi]
   1400019ef:	seta   cl
   1400019f2:	inc    r8d
   1400019f5:	mov    DWORD PTR [rdx+rax*1+0xc],ecx
   1400019f9:	mov    rax,QWORD PTR [rsi]
   1400019fc:	mov    DWORD PTR [rdx+rax*1+0x8],edi
   140001a00:	mov    rax,QWORD PTR [rsi]
   140001a03:	mov    DWORD PTR [rdx+rax*1],edi
   140001a06:	cmp    r8d,DWORD PTR [rsi+0x58]
   140001a0a:	jbe    0x1400019ce
   140001a0c:	mov    DWORD PTR [rsi+0x58],edi
   140001a0f:	xor    edx,edx
   140001a11:	mov    rcx,rbx
   140001a14:	lea    r8d,[rdx+0x1]
   140001a18:	call   QWORD PTR [rip+0x3782]        # 0x1400051a0
   140001a1e:	jmp    0x140001bcf
   140001a23:	mov    DWORD PTR [rsp+0x28],0x1
   140001a2b:	mov    r9d,0x1
   140001a31:	xor    r8d,r8d
   140001a34:	mov    DWORD PTR [rsp+0x20],0x1
   140001a3c:	xor    edx,edx
   140001a3e:	call   QWORD PTR [rip+0x3754]        # 0x140005198
   140001a44:	mov    ecx,0x1
   140001a49:	call   0x140001dec
   140001a4e:	mov    rcx,rbx
   140001a51:	call   QWORD PTR [rip+0x3739]        # 0x140005190
   140001a57:	jmp    0x140001bcf
   140001a5c:	mov    rdx,QWORD PTR [rip+0x6c65]        # 0x1400086c8
   140001a63:	movsxd rax,DWORD PTR [rdx+0x58]
   140001a67:	imul   r8,rax,0x168
   140001a6e:	add    r8,QWORD PTR [rdx]
   140001a71:	add    rdx,0x44
   140001a75:	call   0x140001ee0
   140001a7a:	jmp    0x140001bcf
   140001a7f:	xor    ecx,ecx
   140001a81:	call   QWORD PTR [rip+0x3701]        # 0x140005188
   140001a87:	jmp    0x140001bcf
   140001a8c:	mov    ecx,0x1
   140001a91:	call   QWORD PTR [rip+0x36b9]        # 0x140005150
   140001a97:	jmp    0x140001bcf
   140001a9c:	cmp    edx,0x245
   140001aa2:	jb     0x140001bc6
   140001aa8:	cmp    edx,0x247
   140001aae:	jbe    0x140001bb6
   140001ab4:	cmp    edx,0x8001
   140001aba:	je     0x140001b68
   140001ac0:	mov    r10d,0x8002
   140001ac6:	cmp    edx,r10d
   140001ac9:	je     0x140001b57
   140001acf:	cmp    edx,0x8003
   140001ad5:	je     0x140001b50
   140001ad7:	cmp    edx,0x8004
   140001add:	jne    0x140001bc6
   140001ae3:	mov    r8,QWORD PTR [rip+0x6bde]        # 0x1400086c8
   140001aea:	mov    ecx,DWORD PTR [r8+0x58]
   140001aee:	inc    ecx
   140001af0:	cmp    ecx,DWORD PTR [r8+0x8]
   140001af4:	jae    0x140001b3c
   140001af6:	mov    eax,DWORD PTR [r8+0x5c]
   140001afa:	mov    edx,edi
   140001afc:	cmp    DWORD PTR [r8+0x64],eax
   140001b00:	mov    DWORD PTR [r8+0x58],ecx
   140001b04:	setb   dl
   140001b07:	movsxd rax,ecx
   140001b0a:	imul   rcx,rax,0x168
   140001b11:	mov    rax,QWORD PTR [r8]
   140001b14:	mov    DWORD PTR [rcx+rax*1+0x4],edx
   140001b18:	mov    edx,edi
   140001b1a:	mov    eax,DWORD PTR [r8+0x60]
   140001b1e:	cmp    DWORD PTR [r8+0x68],eax
   140001b22:	movsxd rax,DWORD PTR [r8+0x58]
   140001b26:	setb   dl
   140001b29:	imul   rcx,rax,0x168
   140001b30:	mov    rax,QWORD PTR [r8]
   140001b33:	mov    DWORD PTR [rcx+rax*1+0xc],edx
   140001b37:	jmp    0x140001a0f
   140001b3c:	mov    edx,r10d
   140001b3f:	mov    rcx,rbx
   140001b42:	xor    r9d,r9d
   140001b45:	xor    r8d,r8d
   140001b48:	call   QWORD PTR [rip+0x3592]        # 0x1400050e0
   140001b4e:	jmp    0x140001bcf
   140001b50:	mov    edx,0x10
   140001b55:	jmp    0x140001b42
   140001b57:	call   0x140002914
   140001b5c:	call   0x1400031c4
   140001b61:	mov    edx,0x10
   140001b66:	jmp    0x140001b3f
   140001b68:	xor    ecx,ecx
   140001b6a:	call   0x140001dec
   140001b6f:	mov    rax,QWORD PTR [rip+0x6b52]        # 0x1400086c8
   140001b76:	mov    DWORD PTR [rsp+0x28],0x1
   140001b7e:	movups xmm0,XMMWORD PTR [rax+0x44]
   140001b82:	movq   rdx,xmm0
   140001b87:	psrldq xmm0,0x8
   140001b8c:	movq   rcx,xmm0
   140001b91:	mov    r8,rdx
   140001b94:	mov    rax,rcx
   140001b97:	shr    r8,0x20
   140001b9b:	sub    ecx,edx
   140001b9d:	shr    rax,0x20
   140001ba1:	sub    eax,r8d
   140001ba4:	mov    r9d,ecx
   140001ba7:	mov    rcx,rbx
   140001baa:	mov    DWORD PTR [rsp+0x20],eax
   140001bae:	call   QWORD PTR [rip+0x35e4]        # 0x140005198
   140001bb4:	jmp    0x140001bcf
   140001bb6:	call   0x140001ce0
   140001bbb:	test   eax,eax
   140001bbd:	setns  dil
   140001bc1:	dec    rdi
   140001bc4:	jmp    0x140001bcf
   140001bc6:	call   QWORD PTR [rip+0x35b4]        # 0x140005180
   140001bcc:	mov    rdi,rax
   140001bcf:	mov    rbx,QWORD PTR [rsp+0x40]
   140001bd4:	mov    rax,rdi
   140001bd7:	mov    rsi,QWORD PTR [rsp+0x48]
   140001bdc:	add    rsp,0x30
   140001be0:	pop    rdi
   140001be1:	ret    
   140001be2:	int3   
   140001be3:	int3   
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    rax,rsp
   140001bf3:	sub    rsp,0x88
   140001bfa:	cmp    DWORD PTR [rdx],0x2
   140001bfd:	jne    0x140001cd1
   140001c03:	movaps xmm0,XMMWORD PTR [rip+0x69f6]        # 0x140008600
   140001c0a:	lea    rdx,[rax-0x68]
   140001c0e:	movaps xmm1,XMMWORD PTR [rip+0x69fb]        # 0x140008610
   140001c15:	movaps XMMWORD PTR [rax-0x68],xmm0
   140001c19:	movaps xmm0,XMMWORD PTR [rip+0x6a00]        # 0x140008620
   140001c20:	movaps XMMWORD PTR [rax-0x58],xmm1
   140001c24:	movaps xmm1,XMMWORD PTR [rip+0x6a05]        # 0x140008630
   140001c2b:	movaps XMMWORD PTR [rax-0x48],xmm0
   140001c2f:	movaps xmm0,XMMWORD PTR [rip+0x6a0a]        # 0x140008640
   140001c36:	movaps XMMWORD PTR [rax-0x38],xmm1
   140001c3a:	movaps xmm1,XMMWORD PTR [rip+0x6a0f]        # 0x140008650
   140001c41:	movaps XMMWORD PTR [rax-0x28],xmm0
   140001c45:	movaps XMMWORD PTR [rax-0x18],xmm1
   140001c49:	call   0x140002290
   140001c4e:	mov    rcx,QWORD PTR [rip+0x6a73]        # 0x1400086c8
   140001c55:	xor    r9d,r9d
   140001c58:	mov    r10d,0x1
   140001c5e:	movsxd rax,DWORD PTR [rcx+0x58]
   140001c62:	imul   rdx,rax,0x168
   140001c69:	mov    rax,QWORD PTR [rcx]
   140001c6c:	cmp    DWORD PTR [rdx+rax*1],r9d
   140001c70:	jne    0x140001c7c
   140001c72:	mov    r8d,r10d
   140001c75:	cmp    DWORD PTR [rdx+rax*1+0x4],r9d
   140001c7a:	jne    0x140001c7f
   140001c7c:	mov    r8d,r9d
   140001c7f:	cmp    DWORD PTR [rdx+rax*1+0x8],r9d
   140001c84:	jne    0x140001c92
   140001c86:	cmp    DWORD PTR [rdx+rax*1+0xc],r9d
   140001c8b:	je     0x140001c92
   140001c8d:	test   r8d,r8d
   140001c90:	jne    0x140001cbf
   140001c92:	mov    eax,DWORD PTR [rcx+0x5c]
   140001c95:	cmp    DWORD PTR [rcx+0x64],eax
   140001c98:	jne    0x140001cbf
   140001c9a:	mov    eax,DWORD PTR [rcx+0x60]
   140001c9d:	cmp    DWORD PTR [rcx+0x68],eax
   140001ca0:	jne    0x140001cbf
   140001ca2:	mov    rcx,QWORD PTR [rip+0x69b7]        # 0x140008660
   140001ca9:	xor    r8d,r8d
   140001cac:	mov    edx,0x8002
   140001cb1:	add    rsp,0x88
   140001cb8:	rex.W jmp QWORD PTR [rip+0x3421]        # 0x1400050e0
   140001cbf:	mov    rcx,QWORD PTR [rip+0x699a]        # 0x140008660
   140001cc6:	mov    r8d,r10d
   140001cc9:	xor    edx,edx
   140001ccb:	call   QWORD PTR [rip+0x34cf]        # 0x1400051a0
   140001cd1:	add    rsp,0x88
   140001cd8:	ret    
   140001cd9:	int3   
   140001cda:	int3   
   140001cdb:	int3   
   140001cdc:	int3   
   140001cdd:	int3   
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	mov    rax,rsp
   140001ce3:	mov    QWORD PTR [rax+0x8],rbx
   140001ce7:	mov    QWORD PTR [rax+0x18],rsi
   140001ceb:	mov    QWORD PTR [rax+0x20],r9
   140001cef:	mov    DWORD PTR [rax+0x10],edx
   140001cf2:	push   rdi
   140001cf3:	sub    rsp,0x20
   140001cf7:	and    DWORD PTR [rax+0x20],0x0
   140001cfb:	lea    rdx,[rip+0x68fe]        # 0x140008600
   140001d02:	and    DWORD PTR [rax+0x10],0x0
   140001d06:	movzx  esi,r8w
   140001d0a:	mov    QWORD PTR [rip+0x694f],rcx        # 0x140008660
   140001d11:	mov    ecx,esi
   140001d13:	call   QWORD PTR [rip+0x345f]        # 0x140005178
   140001d19:	test   eax,eax
   140001d1b:	je     0x140001dce
   140001d21:	xor    r9d,r9d
   140001d24:	lea    r8,[rsp+0x38]
   140001d29:	lea    rdx,[rsp+0x48]
   140001d2e:	mov    ecx,esi
   140001d30:	call   QWORD PTR [rip+0x343a]        # 0x140005170
   140001d36:	test   eax,eax
   140001d38:	je     0x140001dce
   140001d3e:	mov    ecx,DWORD PTR [rsp+0x48]
   140001d42:	test   ecx,ecx
   140001d44:	je     0x140001dce
   140001d4a:	mov    eax,DWORD PTR [rsp+0x38]
   140001d4e:	test   eax,eax
   140001d50:	je     0x140001dce
   140001d52:	imul   ecx,eax
   140001d55:	mov    eax,0x60
   140001d5a:	mul    rcx
   140001d5d:	mov    rcx,0xffffffffffffffff
   140001d64:	cmovo  rax,rcx
   140001d68:	mov    rcx,rax
   140001d6b:	call   0x140003584
   140001d70:	mov    rcx,rax
   140001d73:	mov    rdi,rax
   140001d76:	neg    rcx
   140001d79:	sbb    ebx,ebx
   140001d7b:	not    ebx
   140001d7d:	and    ebx,0x8007000e
   140001d83:	jl     0x140001dbf
   140001d85:	mov    r9,rax
   140001d88:	lea    r8,[rsp+0x38]
   140001d8d:	lea    rdx,[rsp+0x48]
   140001d92:	mov    ecx,esi
   140001d94:	call   QWORD PTR [rip+0x33d6]        # 0x140005170
   140001d9a:	test   eax,eax
   140001d9c:	je     0x140001dbf
   140001d9e:	mov    r8d,DWORD PTR [rsp+0x38]
   140001da3:	mov    r9,rdi
   140001da6:	mov    edx,DWORD PTR [rsp+0x48]
   140001daa:	mov    rcx,QWORD PTR [rip+0x690f]        # 0x1400086c0
   140001db1:	call   QWORD PTR [rip+0x3291]        # 0x140005048
   140001db7:	mov    ecx,esi
   140001db9:	call   QWORD PTR [rip+0x33a9]        # 0x140005168
   140001dbf:	test   rdi,rdi
   140001dc2:	je     0x140001dd3
   140001dc4:	mov    rcx,rdi
   140001dc7:	call   0x140003590
   140001dcc:	jmp    0x140001dd3
   140001dce:	mov    ebx,0x80004005
   140001dd3:	mov    rsi,QWORD PTR [rsp+0x40]
   140001dd8:	mov    eax,ebx
   140001dda:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ddf:	add    rsp,0x20
   140001de3:	pop    rdi
   140001de4:	ret    
   140001de5:	int3   
   140001de6:	int3   
   140001de7:	int3   
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	mov    r11,rsp
   140001def:	mov    QWORD PTR [r11+0x8],rbx
   140001df3:	mov    QWORD PTR [r11+0x18],rbp
   140001df7:	mov    QWORD PTR [r11+0x20],rsi
   140001dfb:	push   rdi
   140001dfc:	sub    rsp,0x30
   140001e00:	xor    ebp,ebp
   140001e02:	lea    rax,[r11+0x10]
   140001e06:	mov    esi,ecx
   140001e08:	mov    QWORD PTR [r11+0x10],rbp
   140001e0c:	lea    r9,[rip+0x3805]        # 0x140005618
   140001e13:	mov    QWORD PTR [r11-0x18],rax
   140001e17:	xor    edx,edx
   140001e19:	lea    rcx,[rip+0x3a90]        # 0x1400058b0
   140001e20:	lea    r8d,[rbp+0x4]
   140001e24:	call   QWORD PTR [rip+0x3386]        # 0x1400051b0
   140001e2a:	test   eax,eax
   140001e2c:	js     0x140001ea1
   140001e2e:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e33:	mov    rax,QWORD PTR [rbx]
   140001e36:	test   esi,esi
   140001e38:	je     0x140001e4e
   140001e3a:	mov    rdi,QWORD PTR [rax+0x58]
   140001e3e:	mov    rcx,rdi
   140001e41:	call   QWORD PTR [rip+0x35e1]        # 0x140005428
   140001e47:	mov    rcx,rbx
   140001e4a:	call   rdi
   140001e4c:	jmp    0x140001e63
   140001e4e:	mov    rdi,QWORD PTR [rax+0x38]
   140001e52:	mov    rcx,rdi
   140001e55:	call   QWORD PTR [rip+0x35cd]        # 0x140005428
   140001e5b:	movzx  edx,bp
   140001e5e:	mov    rcx,rbx
   140001e61:	call   rdi
   140001e63:	test   eax,eax
   140001e65:	jns    0x140001ea1
   140001e67:	mov    rcx,QWORD PTR [rip+0x61b2]        # 0x140008020
   140001e6e:	lea    rdx,[rip+0x61ab]        # 0x140008020
   140001e75:	cmp    rcx,rdx
   140001e78:	je     0x140001ea1
   140001e7a:	test   BYTE PTR [rcx+0x1c],0x4
   140001e7e:	je     0x140001ea1
   140001e80:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e84:	lea    rdx,[rip+0x3765]        # 0x1400055f0
   140001e8b:	test   esi,esi
   140001e8d:	mov    DWORD PTR [rsp+0x20],eax
   140001e91:	lea    r9,[rip+0x3770]        # 0x140005608
   140001e98:	cmovne r9,rdx
   140001e9c:	call   0x140001094
   140001ea1:	mov    rdi,QWORD PTR [rsp+0x48]
   140001ea6:	mov    QWORD PTR [rsp+0x48],rbp
   140001eab:	test   rdi,rdi
   140001eae:	je     0x140001ec5
   140001eb0:	mov    rax,QWORD PTR [rdi]
   140001eb3:	mov    rbx,QWORD PTR [rax+0x10]
   140001eb7:	mov    rcx,rbx
   140001eba:	call   QWORD PTR [rip+0x3568]        # 0x140005428
   140001ec0:	mov    rcx,rdi
   140001ec3:	call   rbx
   140001ec5:	mov    rbx,QWORD PTR [rsp+0x40]
   140001eca:	mov    rbp,QWORD PTR [rsp+0x50]
   140001ecf:	mov    rsi,QWORD PTR [rsp+0x58]
   140001ed4:	add    rsp,0x30
   140001ed8:	pop    rdi
   140001ed9:	ret    
   140001eda:	int3   
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	mov    QWORD PTR [rsp+0x20],rbx
   140001ee5:	push   rbp
   140001ee6:	push   rsi
   140001ee7:	push   rdi
   140001ee8:	push   r12
   140001eea:	push   r13
   140001eec:	push   r14
   140001eee:	push   r15
   140001ef0:	lea    rbp,[rsp-0x210]
   140001ef8:	sub    rsp,0x310
   140001eff:	mov    rax,QWORD PTR [rip+0x6102]        # 0x140008008
   140001f06:	xor    rax,rsp
   140001f09:	mov    QWORD PTR [rbp+0x200],rax
   140001f10:	mov    r15,rdx
   140001f13:	mov    rbx,r8
   140001f16:	lea    rdx,[rbp-0x50]
   140001f1a:	mov    r12,rcx
   140001f1d:	call   QWORD PTR [rip+0x323d]        # 0x140005160
   140001f23:	mov    rcx,rax
   140001f26:	mov    edx,0x58
   140001f2b:	mov    rdi,rax
   140001f2e:	call   QWORD PTR [rip+0x30cc]        # 0x140005000
   140001f34:	xor    edx,edx
   140001f36:	lea    rcx,[rsp+0x50]
   140001f3b:	mov    r13d,eax
   140001f3e:	lea    r8d,[rdx+0x5c]
   140001f42:	call   0x140004122
   140001f47:	mov    r8d,0x60
   140001f4d:	mov    edx,r13d
   140001f50:	lea    ecx,[r8-0x48]
   140001f54:	call   QWORD PTR [rip+0x32ce]        # 0x140005228
   140001f5a:	lea    rcx,[rsp+0x50]
   140001f5f:	mov    DWORD PTR [rsp+0x50],eax
   140001f63:	xor    r14d,r14d
   140001f66:	call   QWORD PTR [rip+0x309c]        # 0x140005008
   140001f6c:	mov    rsi,rax
   140001f6f:	test   rax,rax
   140001f72:	je     0x140001f96
   140001f74:	xor    r9d,r9d
   140001f77:	lea    edx,[r14+0x30]
   140001f7b:	mov    r8,rax
   140001f7e:	mov    rcx,r12
   140001f81:	call   QWORD PTR [rip+0x31d1]        # 0x140005158
   140001f87:	mov    rdx,rsi
   140001f8a:	mov    rcx,rdi
   140001f8d:	call   QWORD PTR [rip+0x307d]        # 0x140005010
   140001f93:	mov    r14,rax
   140001f96:	mov    ecx,0x5
   140001f9b:	call   QWORD PTR [rip+0x31a7]        # 0x140005148
   140001fa1:	mov    edx,eax
   140001fa3:	mov    rcx,rdi
   140001fa6:	call   QWORD PTR [rip+0x306c]        # 0x140005018
   140001fac:	mov    ecx,0x8
   140001fb1:	mov    DWORD PTR [rsp+0x34],eax
   140001fb5:	call   QWORD PTR [rip+0x318d]        # 0x140005148
   140001fbb:	mov    edx,eax
   140001fbd:	mov    rcx,rdi
   140001fc0:	call   QWORD PTR [rip+0x305a]        # 0x140005020
   140001fc6:	mov    edx,DWORD PTR [rbx+0x18]
   140001fc9:	mov    ecx,DWORD PTR [rbx+0x10]
   140001fcc:	sub    edx,ecx
   140001fce:	mov    DWORD PTR [rsp+0x30],eax
   140001fd2:	mov    eax,DWORD PTR [rbx+0x1c]
   140001fd5:	sub    eax,DWORD PTR [rbx+0x14]
   140001fd8:	sub    eax,0x64
   140001fdb:	shr    eax,1
   140001fdd:	sub    eax,DWORD PTR [r15+0x4]
   140001fe1:	add    eax,DWORD PTR [rbx+0x14]
   140001fe4:	mov    DWORD PTR [rsp+0x3c],eax
   140001fe8:	add    eax,0x32
   140001feb:	cmp    DWORD PTR [rip+0x66de],0x0        # 0x1400086d0
   140001ff2:	mov    DWORD PTR [rsp+0x44],eax
   140001ff6:	je     0x140002001
   140001ff8:	mov    ecx,DWORD PTR [r15+0x8]
   140001ffc:	sub    ecx,DWORD PTR [rbx+0x18]
   140001fff:	jmp    0x140002004
   140002001:	sub    ecx,DWORD PTR [r15]
   140002004:	xor    r15d,r15d
   140002007:	mov    DWORD PTR [rsp+0x38],ecx
   14000200b:	lea    eax,[rcx+rdx*1]
   14000200e:	mov    DWORD PTR [rsp+0x40],eax
   140002012:	cmp    DWORD PTR [rbx],r15d
   140002015:	jne    0x140002065
   140002017:	cmp    DWORD PTR [rbx+0x4],r15d
   14000201b:	je     0x140002065
   14000201d:	mov    rcx,QWORD PTR [rip+0x6644]        # 0x140008668
   140002024:	lea    r8,[rbp+0x0]
   140002028:	mov    r9d,0x100
   14000202e:	mov    edx,0x3e9
   140002033:	call   QWORD PTR [rip+0x3057]        # 0x140005090
   140002039:	lea    rcx,[rbp+0x0]
   14000203d:	call   QWORD PTR [rip+0x32b5]        # 0x1400052f8
   140002043:	mov    QWORD PTR [rsp+0x28],r15
   140002048:	lea    r9,[rsp+0x38]
   14000204d:	mov    r8d,eax
   140002050:	mov    DWORD PTR [rsp+0x20],0x11
   140002058:	lea    rdx,[rbp+0x0]
   14000205c:	mov    rcx,rdi
   14000205f:	call   QWORD PTR [rip+0x30db]        # 0x140005140
   140002065:	cmp    DWORD PTR [rbx+0x8],r15d
   140002069:	jne    0x1400020b9
   14000206b:	cmp    DWORD PTR [rbx+0xc],r15d
   14000206f:	je     0x1400020b9
   140002071:	mov    rcx,QWORD PTR [rip+0x65f0]        # 0x140008668
   140002078:	lea    r8,[rbp+0x0]
   14000207c:	mov    r9d,0x100
   140002082:	mov    edx,0x3ea
   140002087:	call   QWORD PTR [rip+0x3003]        # 0x140005090
   14000208d:	lea    rcx,[rbp+0x0]
   140002091:	call   QWORD PTR [rip+0x3261]        # 0x1400052f8
   140002097:	mov    QWORD PTR [rsp+0x28],r15
   14000209c:	lea    r9,[rsp+0x38]
   1400020a1:	mov    r8d,eax
   1400020a4:	mov    DWORD PTR [rsp+0x20],0x11
   1400020ac:	lea    rdx,[rbp+0x0]
   1400020b0:	mov    rcx,rdi
   1400020b3:	call   QWORD PTR [rip+0x3087]        # 0x140005140
   1400020b9:	xor    edx,edx
   1400020bb:	lea    rcx,[rsp+0x50]
   1400020c0:	lea    r8d,[rdx+0x5c]
   1400020c4:	call   0x140004122
   1400020c9:	mov    r8d,0x60
   1400020cf:	mov    edx,r13d
   1400020d2:	lea    ecx,[r8-0x4e]
   1400020d6:	call   QWORD PTR [rip+0x314c]        # 0x140005228
   1400020dc:	mov    DWORD PTR [rsp+0x50],eax
   1400020e0:	test   rsi,rsi
   1400020e3:	je     0x1400020fa
   1400020e5:	mov    rdx,r14
   1400020e8:	mov    rcx,rdi
   1400020eb:	call   QWORD PTR [rip+0x2f1f]        # 0x140005010
   1400020f1:	mov    rcx,rsi
   1400020f4:	call   QWORD PTR [rip+0x2f2e]        # 0x140005028
   1400020fa:	lea    rcx,[rsp+0x50]
   1400020ff:	call   QWORD PTR [rip+0x2f03]        # 0x140005008
   140002105:	mov    rsi,rax
   140002108:	test   rax,rax
   14000210b:	je     0x14000212f
   14000210d:	xor    r9d,r9d
   140002110:	mov    r8,rax
   140002113:	mov    rcx,r12
   140002116:	lea    edx,[r9+0x30]
   14000211a:	call   QWORD PTR [rip+0x3038]        # 0x140005158
   140002120:	mov    rdx,rsi
   140002123:	mov    rcx,rdi
   140002126:	call   QWORD PTR [rip+0x2ee4]        # 0x140005010
   14000212c:	mov    r14,rax
   14000212f:	add    DWORD PTR [rsp+0x3c],0x64
   140002134:	add    DWORD PTR [rsp+0x44],0xc8
   14000213c:	cmp    DWORD PTR [rbx],r15d
   14000213f:	je     0x140002147
   140002141:	cmp    DWORD PTR [rbx+0x4],r15d
   140002145:	jne    0x140002153
   140002147:	cmp    DWORD PTR [rbx+0x8],r15d
   14000214b:	je     0x14000215a
   14000214d:	cmp    DWORD PTR [rbx+0xc],r15d
   140002151:	je     0x14000215a
   140002153:	mov    edx,0x3ed
   140002158:	jmp    0x140002169
   14000215a:	mov    edx,0x3eb
   14000215f:	cmp    DWORD PTR [rbx],r15d
   140002162:	jne    0x140002169
   140002164:	mov    edx,0x3ec
   140002169:	mov    rcx,QWORD PTR [rip+0x64f8]        # 0x140008668
   140002170:	lea    r8,[rbp+0x0]
   140002174:	mov    r9d,0x100
   14000217a:	call   QWORD PTR [rip+0x2f10]        # 0x140005090
   140002180:	lea    rcx,[rbp+0x0]
   140002184:	call   QWORD PTR [rip+0x316e]        # 0x1400052f8
   14000218a:	mov    QWORD PTR [rsp+0x28],r15
   14000218f:	lea    r9,[rsp+0x38]
   140002194:	mov    r8d,eax
   140002197:	mov    DWORD PTR [rsp+0x20],0x11
   14000219f:	lea    rdx,[rbp+0x0]
   1400021a3:	mov    rcx,rdi
   1400021a6:	call   QWORD PTR [rip+0x2f94]        # 0x140005140
   1400021ac:	mov    edx,DWORD PTR [rsp+0x30]
   1400021b0:	mov    rcx,rdi
   1400021b3:	call   QWORD PTR [rip+0x2e67]        # 0x140005020
   1400021b9:	mov    edx,DWORD PTR [rsp+0x34]
   1400021bd:	mov    rcx,rdi
   1400021c0:	call   QWORD PTR [rip+0x2e52]        # 0x140005018
   1400021c6:	test   rsi,rsi
   1400021c9:	je     0x1400021e0
   1400021cb:	mov    rdx,r14
   1400021ce:	mov    rcx,rdi
   1400021d1:	call   QWORD PTR [rip+0x2e39]        # 0x140005010
   1400021d7:	mov    rcx,rsi
   1400021da:	call   QWORD PTR [rip+0x2e48]        # 0x140005028
   1400021e0:	lea    rdx,[rbp-0x50]
   1400021e4:	mov    rcx,r12
   1400021e7:	call   QWORD PTR [rip+0x2f4b]        # 0x140005138
   1400021ed:	mov    rcx,QWORD PTR [rbp+0x200]
   1400021f4:	xor    rcx,rsp
   1400021f7:	call   0x1400039c0
   1400021fc:	mov    rbx,QWORD PTR [rsp+0x368]
   140002204:	add    rsp,0x310
   14000220b:	pop    r15
   14000220d:	pop    r14
   14000220f:	pop    r13
   140002211:	pop    r12
   140002213:	pop    rdi
   140002214:	pop    rsi
   140002215:	pop    rbp
   140002216:	ret    
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	mov    QWORD PTR [rsp+0x10],rbx
   140002225:	push   rdi
   140002226:	sub    rsp,0x20
   14000222a:	mov    rdi,rcx
   14000222d:	mov    rcx,QWORD PTR [rcx]
   140002230:	test   rcx,rcx
   140002233:	je     0x14000224c
   140002235:	cmp    DWORD PTR [rdi+0x8],0x0
   140002239:	jbe    0x14000224c
   14000223b:	mov    r8d,DWORD PTR [rdi+0x8]
   14000223f:	mov    rdx,rcx
   140002242:	lea    rdx,[rdx+0x8]
   140002246:	sub    r8,0x1
   14000224a:	jne    0x140002242
   14000224c:	call   0x140003590
   140002251:	mov    rcx,QWORD PTR [rdi+0x18]
   140002255:	and    QWORD PTR [rdi],0x0
   140002259:	and    DWORD PTR [rdi+0xc],0x0
   14000225d:	and    QWORD PTR [rdi+0x10],0x0
   140002262:	test   rcx,rcx
   140002265:	je     0x140002277
   140002267:	mov    rbx,QWORD PTR [rcx]
   14000226a:	call   0x140003590
   14000226f:	mov    rcx,rbx
   140002272:	test   rbx,rbx
   140002275:	jne    0x140002267
   140002277:	and    QWORD PTR [rdi+0x18],0x0
   14000227c:	mov    rbx,QWORD PTR [rsp+0x38]
   140002281:	add    rsp,0x20
   140002285:	pop    rdi
   140002286:	ret    
   140002287:	int3   
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    QWORD PTR [rsp+0x8],rbx
   140002295:	mov    QWORD PTR [rsp+0x18],rsi
   14000229a:	push   rbp
   14000229b:	push   rdi
   14000229c:	push   r13
   14000229e:	push   r14
   1400022a0:	push   r15
   1400022a2:	lea    rbp,[rsp-0x1220]
   1400022aa:	mov    eax,0x1320
   1400022af:	call   0x140004160
   1400022b4:	sub    rsp,rax
   1400022b7:	mov    rax,QWORD PTR [rip+0x5d4a]        # 0x140008008
   1400022be:	xor    rax,rsp
   1400022c1:	mov    QWORD PTR [rbp+0x1210],rax
   1400022c8:	mov    rdi,QWORD PTR [rip+0x63f9]        # 0x1400086c8
   1400022cf:	xor    ebx,ebx
   1400022d1:	mov    r8,QWORD PTR [rdx+0x10]
   1400022d5:	mov    r15,rdx
   1400022d8:	mov    esi,ebx
   1400022da:	mov    r9,QWORD PTR [rdi+0x18]
   1400022de:	test   r9,r9
   1400022e1:	je     0x14000230f
   1400022e3:	xor    edx,edx
   1400022e5:	mov    rax,r8
   1400022e8:	shr    rax,0x4
   1400022ec:	div    DWORD PTR [rdi+0x20]
   1400022ef:	mov    rax,QWORD PTR [r9+rdx*8]
   1400022f3:	jmp    0x1400022fe
   1400022f5:	cmp    QWORD PTR [rax+0x10],r8
   1400022f9:	je     0x140002306
   1400022fb:	mov    rax,QWORD PTR [rax]
   1400022fe:	test   rax,rax
   140002301:	jne    0x1400022f5
   140002303:	mov    rax,rbx
   140002306:	test   rax,rax
   140002309:	jne    0x1400025d7
   14000230f:	lea    rdx,[rbp+0xdd0]
   140002316:	mov    rcx,r8
   140002319:	call   QWORD PTR [rip+0x2e11]        # 0x140005130
   14000231f:	test   eax,eax
   140002321:	jne    0x140002349
   140002323:	call   QWORD PTR [rip+0x2ebf]        # 0x1400051e8
   140002329:	movzx  ecx,ax
   14000232c:	mov    esi,0x80004005
   140002331:	or     ecx,0x80070000
   140002337:	test   eax,eax
   140002339:	cmovle ecx,eax
   14000233c:	test   ecx,ecx
   14000233e:	cmovs  esi,ecx
   140002341:	test   esi,esi
   140002343:	js     0x1400025d7
   140002349:	cmp    BYTE PTR [rdi+0x40],bl
   14000234c:	jne    0x140002360
   14000234e:	cmp    DWORD PTR [rbp+0xde0],0x3
   140002355:	je     0x14000236d
   140002357:	cmp    BYTE PTR [rdi+0x40],bl
   14000235a:	je     0x1400025d7
   140002360:	cmp    DWORD PTR [rbp+0xde0],0x1
   140002367:	jne    0x1400025d7
   14000236d:	xor    edx,edx
   14000236f:	lea    rcx,[rbp+0x680]
   140002376:	mov    r8d,0x748
   14000237c:	call   0x140004122
   140002381:	mov    edx,0x8
   140002386:	lea    rcx,[rbp+0x680]
   14000238d:	lea    rax,[rbp+0xdd0]
   140002394:	lea    r13d,[rdx+0x78]
   140002398:	movups xmm0,XMMWORD PTR [rax]
   14000239b:	movups xmm1,XMMWORD PTR [rax+0x10]
   14000239f:	movups XMMWORD PTR [rcx],xmm0
   1400023a2:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400023a6:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400023aa:	movups xmm1,XMMWORD PTR [rax+0x30]
   1400023ae:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400023b2:	movups xmm0,XMMWORD PTR [rax+0x40]
   1400023b6:	movups XMMWORD PTR [rcx+0x30],xmm1
   1400023ba:	movups xmm1,XMMWORD PTR [rax+0x50]
   1400023be:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400023c2:	movups xmm0,XMMWORD PTR [rax+0x60]
   1400023c6:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400023ca:	movups xmm1,XMMWORD PTR [rax+0x70]
   1400023ce:	add    rax,r13
   1400023d1:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400023d5:	add    rcx,r13
   1400023d8:	movups XMMWORD PTR [rcx-0x10],xmm1
   1400023dc:	sub    rdx,0x1
   1400023e0:	jne    0x140002398
   1400023e2:	movups xmm0,XMMWORD PTR [rax]
   1400023e5:	mov    esi,ebx
   1400023e7:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400023eb:	movups XMMWORD PTR [rcx],xmm0
   1400023ee:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400023f2:	mov    rax,QWORD PTR [rax+0x30]
   1400023f6:	movups XMMWORD PTR [rcx+0x10],xmm1
   1400023fa:	movups XMMWORD PTR [rcx+0x20],xmm0
   1400023fe:	mov    QWORD PTR [rcx+0x30],rax
   140002402:	mov    rcx,QWORD PTR [rdi]
   140002405:	movsxd rax,DWORD PTR [rdi+0x58]
   140002409:	imul   rdx,rax,0x168
   140002410:	lea    r8,[rcx+0x68]
   140002414:	add    r8,rdx
   140002417:	mov    rax,QWORD PTR [rdx+rcx*1+0x20]
   14000241c:	mov    rdx,r13
   14000241f:	mov    QWORD PTR [rbp+0xcc0],rax
   140002426:	lea    rcx,[rbp+0xcc8]
   14000242d:	lea    rax,[rbp+0xcc8]
   140002434:	sub    r8,rax
   140002437:	lea    rax,[rdx+0x7fffff7e]
   14000243e:	test   rax,rax
   140002441:	je     0x14000245a
   140002443:	movzx  eax,WORD PTR [r8+rcx*1]
   140002448:	test   ax,ax
   14000244b:	je     0x14000245a
   14000244d:	mov    WORD PTR [rcx],ax
   140002450:	add    rcx,0x2
   140002454:	sub    rdx,0x1
   140002458:	jne    0x140002437
   14000245a:	test   rdx,rdx
   14000245d:	jne    0x140002468
   14000245f:	sub    rcx,0x2
   140002463:	mov    esi,0x8007007a
   140002468:	mov    WORD PTR [rcx],bx
   14000246b:	test   esi,esi
   14000246d:	js     0x1400025d7
   140002473:	mov    rcx,QWORD PTR [r15+0x10]
   140002477:	lea    r9,[rsp+0x20]
   14000247c:	lea    r8,[rbp+0xab8]
   140002483:	mov    DWORD PTR [rsp+0x20],0x104
   14000248b:	mov    edx,0x20000007
   140002490:	call   QWORD PTR [rip+0x2c92]        # 0x140005128
   140002496:	cmp    eax,0xffffffff
   140002499:	jne    0x1400024b9
   14000249b:	call   QWORD PTR [rip+0x2d47]        # 0x1400051e8
   1400024a1:	movzx  ecx,ax
   1400024a4:	mov    esi,0x80004005
   1400024a9:	or     ecx,0x80070000
   1400024af:	test   eax,eax
   1400024b1:	cmovle ecx,eax
   1400024b4:	test   ecx,ecx
   1400024b6:	cmovs  esi,ecx
   1400024b9:	test   esi,esi
   1400024bb:	js     0x1400025d7
   1400024c1:	lea    rdx,[rsp+0x30]
   1400024c6:	mov    ecx,0xe
   1400024cb:	lea    rax,[rbp+0x680]
   1400024d2:	movups xmm0,XMMWORD PTR [rax]
   1400024d5:	movups xmm1,XMMWORD PTR [rax+0x10]
   1400024d9:	movups XMMWORD PTR [rdx],xmm0
   1400024dc:	movups xmm0,XMMWORD PTR [rax+0x20]
   1400024e0:	movups XMMWORD PTR [rdx+0x10],xmm1
   1400024e4:	movups xmm1,XMMWORD PTR [rax+0x30]
   1400024e8:	movups XMMWORD PTR [rdx+0x20],xmm0
   1400024ec:	movups xmm0,XMMWORD PTR [rax+0x40]
   1400024f0:	movups XMMWORD PTR [rdx+0x30],xmm1
   1400024f4:	movups xmm1,XMMWORD PTR [rax+0x50]
   1400024f8:	movups XMMWORD PTR [rdx+0x40],xmm0
   1400024fc:	movups xmm0,XMMWORD PTR [rax+0x60]
   140002500:	movups XMMWORD PTR [rdx+0x50],xmm1
   140002504:	movups xmm1,XMMWORD PTR [rax+0x70]
   140002508:	add    rax,r13
   14000250b:	movups XMMWORD PTR [rdx+0x60],xmm0
   14000250f:	add    rdx,r13
   140002512:	movups XMMWORD PTR [rdx-0x10],xmm1
   140002516:	sub    rcx,0x1
   14000251a:	jne    0x1400024d2
   14000251c:	movups xmm0,XMMWORD PTR [rax]
   14000251f:	lea    r8,[rsp+0x30]
   140002524:	movups xmm1,XMMWORD PTR [rax+0x10]
   140002528:	lea    rcx,[rdi+0x18]
   14000252c:	movups XMMWORD PTR [rdx],xmm0
   14000252f:	movups xmm0,XMMWORD PTR [rax+0x20]
   140002533:	movups XMMWORD PTR [rdx+0x10],xmm1
   140002537:	movups xmm1,XMMWORD PTR [rax+0x30]
   14000253b:	mov    rax,QWORD PTR [rax+0x40]
   14000253f:	movups XMMWORD PTR [rdx+0x20],xmm0
   140002543:	movups XMMWORD PTR [rdx+0x30],xmm1
   140002547:	mov    QWORD PTR [rdx+0x40],rax
   14000254b:	mov    rdx,QWORD PTR [r15+0x10]
   14000254f:	call   0x140002df8
   140002554:	mov    esi,eax
   140002556:	test   eax,eax
   140002558:	js     0x1400025d7
   14000255a:	cmp    DWORD PTR [rbp+0xde0],0x3
   140002561:	jne    0x14000257d
   140002563:	movsxd rcx,DWORD PTR [rdi+0x58]
   140002567:	inc    DWORD PTR [rdi+0x64]
   14000256a:	imul   rdx,rcx,0x168
   140002571:	mov    rcx,QWORD PTR [rdi]
   140002574:	mov    DWORD PTR [rdx+rcx*1],0x1
   14000257b:	jmp    0x14000259f
   14000257d:	cmp    DWORD PTR [rbp+0xde0],0x1
   140002584:	jne    0x14000259f
   140002586:	movsxd rax,DWORD PTR [rdi+0x58]
   14000258a:	inc    DWORD PTR [rdi+0x68]
   14000258d:	imul   rcx,rax,0x168
   140002594:	mov    rax,QWORD PTR [rdi]
   140002597:	mov    DWORD PTR [rcx+rax*1+0x8],0x1
   14000259f:	mov    eax,DWORD PTR [rdi+0x5c]
   1400025a2:	mov    edx,ebx
   1400025a4:	cmp    DWORD PTR [rdi+0x64],eax
   1400025a7:	movsxd rax,DWORD PTR [rdi+0x58]
   1400025ab:	setb   dl
   1400025ae:	imul   rcx,rax,0x168
   1400025b5:	mov    rax,QWORD PTR [rdi]
   1400025b8:	mov    DWORD PTR [rcx+rax*1+0x4],edx
   1400025bc:	mov    eax,DWORD PTR [rdi+0x60]
   1400025bf:	cmp    DWORD PTR [rdi+0x68],eax
   1400025c2:	movsxd rax,DWORD PTR [rdi+0x58]
   1400025c6:	setb   bl
   1400025c9:	imul   rcx,rax,0x168
   1400025d0:	mov    rax,QWORD PTR [rdi]
   1400025d3:	mov    DWORD PTR [rcx+rax*1+0xc],ebx
   1400025d7:	mov    eax,esi
   1400025d9:	mov    rcx,QWORD PTR [rbp+0x1210]
   1400025e0:	xor    rcx,rsp
   1400025e3:	call   0x1400039c0
   1400025e8:	lea    r11,[rsp+0x1320]
   1400025f0:	mov    rbx,QWORD PTR [r11+0x30]
   1400025f4:	mov    rsi,QWORD PTR [r11+0x40]
   1400025f8:	mov    rsp,r11
   1400025fb:	pop    r15
   1400025fd:	pop    r14
   1400025ff:	pop    r13
   140002601:	pop    rdi
   140002602:	pop    rbp
   140002603:	ret    
   140002604:	int3   
   140002605:	int3   
   140002606:	int3   
   140002607:	int3   
   140002608:	int3   
   140002609:	int3   
   14000260a:	int3   
   14000260b:	int3   
   14000260c:	mov    rax,rsp
   14000260f:	mov    QWORD PTR [rax+0x8],rbx
   140002613:	mov    QWORD PTR [rax+0x18],rsi
   140002617:	push   rdi
   140002618:	sub    rsp,0x20
   14000261c:	mov    rdi,rcx
   14000261f:	xor    ebx,ebx
   140002621:	and    DWORD PTR [rax+0x10],ebx
   140002624:	lea    rcx,[rax+0x10]
   140002628:	xor    edx,edx
   14000262a:	xor    esi,esi
   14000262c:	call   QWORD PTR [rip+0x2aee]        # 0x140005120
   140002632:	test   eax,eax
   140002634:	jne    0x140002652
   140002636:	call   QWORD PTR [rip+0x2bac]        # 0x1400051e8
   14000263c:	movzx  ebx,ax
   14000263f:	or     ebx,0x80070000
   140002645:	test   eax,eax
   140002647:	cmovle ebx,eax
   14000264a:	test   ebx,ebx
   14000264c:	js     0x1400026f2
   140002652:	mov    ecx,DWORD PTR [rsp+0x38]
   140002656:	mov    eax,0x438
   14000265b:	mul    rcx
   14000265e:	mov    rcx,0xffffffffffffffff
   140002665:	lea    rdx,[rip+0x2fbc]        # 0x140005628
   14000266c:	cmovo  rax,rcx
   140002670:	mov    rcx,rax
   140002673:	call   0x140003a0c
   140002678:	mov    rsi,rax
   14000267b:	mov    eax,0x8007000e
   140002680:	test   rsi,rsi
   140002683:	cmovne eax,ebx
   140002686:	mov    ebx,eax
   140002688:	test   eax,eax
   14000268a:	js     0x1400026f2
   14000268c:	mov    rdx,rsi
   14000268f:	lea    rcx,[rsp+0x38]
   140002694:	call   QWORD PTR [rip+0x2a86]        # 0x140005120
   14000269a:	test   eax,eax
   14000269c:	jne    0x1400026bc
   14000269e:	call   QWORD PTR [rip+0x2b44]        # 0x1400051e8
   1400026a4:	movzx  ecx,ax
   1400026a7:	mov    ebx,0x80004005
   1400026ac:	or     ecx,0x80070000
   1400026b2:	test   eax,eax
   1400026b4:	cmovle ecx,eax
   1400026b7:	test   ecx,ecx
   1400026b9:	cmovs  ebx,ecx
   1400026bc:	test   ebx,ebx
   1400026be:	js     0x1400026f2
   1400026c0:	mov    ecx,DWORD PTR [rsp+0x38]
   1400026c4:	test   ecx,ecx
   1400026c6:	je     0x1400026f2
   1400026c8:	lea    rax,[rsi+0x10]
   1400026cc:	mov    edx,ecx
   1400026ce:	cmp    BYTE PTR [rdi+0x40],0x0
   1400026d2:	jne    0x1400026de
   1400026d4:	cmp    DWORD PTR [rax],0x3
   1400026d7:	jne    0x1400026e6
   1400026d9:	inc    DWORD PTR [rdi+0x5c]
   1400026dc:	jmp    0x1400026e6
   1400026de:	cmp    DWORD PTR [rax],0x1
   1400026e1:	jne    0x1400026e6
   1400026e3:	inc    DWORD PTR [rdi+0x60]
   1400026e6:	add    rax,0x438
   1400026ec:	sub    rdx,0x1
   1400026f0:	jne    0x1400026ce
   1400026f2:	mov    rcx,rsi
   1400026f5:	call   0x140003590
   1400026fa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400026ff:	mov    eax,ebx
   140002701:	mov    rbx,QWORD PTR [rsp+0x30]
   140002706:	add    rsp,0x20
   14000270a:	pop    rdi
   14000270b:	ret    
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	int3   
   140002711:	int3   
   140002712:	int3   
   140002713:	int3   
   140002714:	int3   
   140002715:	int3   
   140002716:	int3   
   140002717:	int3   
   140002718:	int3   
   140002719:	int3   
   14000271a:	int3   
   14000271b:	int3   
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	rex push rbp
   140002722:	push   rbx
   140002723:	push   rsi
   140002724:	push   rdi
   140002725:	push   r14
   140002727:	lea    rbp,[rsp-0x280]
   14000272f:	sub    rsp,0x380
   140002736:	mov    rax,QWORD PTR [rip+0x58cb]        # 0x140008008
   14000273d:	xor    rax,rsp
   140002740:	mov    QWORD PTR [rbp+0x270],rax
   140002747:	mov    rdi,r8
   14000274a:	mov    rsi,rcx
   14000274d:	xor    r14d,r14d
   140002750:	lea    rcx,[rbp+0x94]
   140002757:	mov    r8d,0x164
   14000275d:	mov    DWORD PTR [rbp+0x90],r14d
   140002764:	xor    edx,edx
   140002766:	mov    rbx,r9
   140002769:	call   0x140004122
   14000276e:	movups xmm0,XMMWORD PTR [rdi]
   140002771:	mov    eax,DWORD PTR [rdi]
   140002773:	mov    QWORD PTR [rbp+0xb0],rsi
   14000277a:	movdqu XMMWORD PTR [rbp+0xa0],xmm0
   140002782:	cmp    DWORD PTR [rbx+0x44],eax
   140002785:	jle    0x14000278a
   140002787:	mov    DWORD PTR [rbx+0x44],eax
   14000278a:	mov    eax,DWORD PTR [rdi+0x4]
   14000278d:	cmp    DWORD PTR [rbx+0x48],eax
   140002790:	jle    0x140002795
   140002792:	mov    DWORD PTR [rbx+0x48],eax
   140002795:	mov    eax,DWORD PTR [rdi+0x8]
   140002798:	cmp    DWORD PTR [rbx+0x4c],eax
   14000279b:	jge    0x1400027a0
   14000279d:	mov    DWORD PTR [rbx+0x4c],eax
   1400027a0:	mov    eax,DWORD PTR [rdi+0xc]
   1400027a3:	cmp    DWORD PTR [rbx+0x50],eax
   1400027a6:	jge    0x1400027ab
   1400027a8:	mov    DWORD PTR [rbx+0x50],eax
   1400027ab:	mov    edi,0x68
   1400027b0:	lea    rcx,[rbp+0x200]
   1400027b7:	mov    r8d,edi
   1400027ba:	xor    edx,edx
   1400027bc:	call   0x140004122
   1400027c1:	lea    rdx,[rbp+0x200]
   1400027c8:	mov    DWORD PTR [rbp+0x200],edi
   1400027ce:	mov    rcx,rsi
   1400027d1:	call   QWORD PTR [rip+0x2939]        # 0x140005110
   1400027d7:	test   eax,eax
   1400027d9:	je     0x1400028ea
   1400027df:	lea    r8,[rbp+0x228]
   1400027e6:	mov    r10d,r14d
   1400027e9:	lea    rax,[rbp+0xb8]
   1400027f0:	sub    r8,rax
   1400027f3:	lea    edx,[rdi-0x48]
   1400027f6:	lea    rcx,[rbp+0xb8]
   1400027fd:	lea    r9d,[rdi-0x66]
   140002801:	lea    rax,[rdx+0x7fffffde]
   140002808:	test   rax,rax
   14000280b:	je     0x140002823
   14000280d:	movzx  eax,WORD PTR [r8+rcx*1]
   140002812:	test   ax,ax
   140002815:	je     0x140002823
   140002817:	mov    WORD PTR [rcx],ax
   14000281a:	add    rcx,r9
   14000281d:	sub    rdx,0x1
   140002821:	jne    0x140002801
   140002823:	test   rdx,rdx
   140002826:	jne    0x140002831
   140002828:	sub    rcx,r9
   14000282b:	mov    r10d,0x8007007a
   140002831:	mov    WORD PTR [rcx],r14w
   140002835:	test   r10d,r10d
   140002838:	js     0x1400028ea
   14000283e:	lea    r8,[rsp+0x20]
   140002843:	mov    eax,0x80
   140002848:	lea    rdx,[rbp+0x90]
   14000284f:	movups xmm0,XMMWORD PTR [rdx]
   140002852:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140002856:	movups XMMWORD PTR [r8],xmm0
   14000285a:	movups xmm0,XMMWORD PTR [rdx+0x20]
   14000285e:	movups XMMWORD PTR [r8+0x10],xmm1
   140002863:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140002867:	movups XMMWORD PTR [r8+0x20],xmm0
   14000286c:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140002870:	movups XMMWORD PTR [r8+0x30],xmm1
   140002875:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140002879:	movups XMMWORD PTR [r8+0x40],xmm0
   14000287e:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140002882:	movups XMMWORD PTR [r8+0x50],xmm1
   140002887:	movups xmm1,XMMWORD PTR [rdx+0x70]
   14000288b:	add    rdx,rax
   14000288e:	movups XMMWORD PTR [r8+0x60],xmm0
   140002893:	add    r8,rax
   140002896:	movups XMMWORD PTR [r8-0x10],xmm1
   14000289b:	sub    r9,0x1
   14000289f:	jne    0x14000284f
   1400028a1:	movups xmm0,XMMWORD PTR [rdx]
   1400028a4:	mov    rcx,rbx
   1400028a7:	movups xmm1,XMMWORD PTR [rdx+0x10]
   1400028ab:	movups XMMWORD PTR [r8],xmm0
   1400028af:	movups xmm0,XMMWORD PTR [rdx+0x20]
   1400028b3:	movups XMMWORD PTR [r8+0x10],xmm1
   1400028b8:	movups xmm1,XMMWORD PTR [rdx+0x30]
   1400028bc:	movups XMMWORD PTR [r8+0x20],xmm0
   1400028c1:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400028c5:	movups XMMWORD PTR [r8+0x30],xmm1
   1400028ca:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400028ce:	mov    rdx,QWORD PTR [rdx+0x60]
   1400028d2:	movups XMMWORD PTR [r8+0x40],xmm0
   1400028d7:	movups XMMWORD PTR [r8+0x50],xmm1
   1400028dc:	mov    QWORD PTR [r8+0x60],rdx
   1400028e0:	lea    rdx,[rsp+0x20]
   1400028e5:	call   0x140002c64
   1400028ea:	mov    eax,0x1
   1400028ef:	mov    rcx,QWORD PTR [rbp+0x270]
   1400028f6:	xor    rcx,rsp
   1400028f9:	call   0x1400039c0
   1400028fe:	add    rsp,0x380
   140002905:	pop    r14
   140002907:	pop    rdi
   140002908:	pop    rsi
   140002909:	pop    rbx
   14000290a:	pop    rbp
   14000290b:	ret    
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	int3   
   140002911:	int3   
   140002912:	int3   
   140002913:	int3   
   140002914:	mov    rax,rsp
   140002917:	mov    QWORD PTR [rax+0x8],rbx
   14000291b:	mov    QWORD PTR [rax+0x10],rsi
   14000291f:	mov    QWORD PTR [rax+0x18],rdi
   140002923:	push   rbp
   140002924:	push   r12
   140002926:	push   r14
   140002928:	lea    rbp,[rax-0x8e8]
   14000292f:	sub    rsp,0x9d0
   140002936:	mov    rax,QWORD PTR [rip+0x56cb]        # 0x140008008
   14000293d:	xor    rax,rsp
   140002940:	mov    QWORD PTR [rbp+0x8c0],rax
   140002947:	mov    rsi,QWORD PTR [rip+0x5d7a]        # 0x1400086c8
   14000294e:	xor    r14d,r14d
   140002951:	mov    ebx,r14d
   140002954:	mov    eax,DWORD PTR [rsi+0x24]
   140002957:	neg    eax
   140002959:	sbb    rdi,rdi
   14000295c:	test   rdi,rdi
   14000295f:	je     0x140002c2d
   140002965:	mov    r12d,0x80070000
   14000296b:	test   ebx,ebx
   14000296d:	js     0x140002c2d
   140002973:	mov    rdx,rdi
   140002976:	cmp    rdi,0xffffffffffffffff
   14000297a:	jne    0x14000299b
   14000297c:	mov    ecx,r14d
   14000297f:	cmp    DWORD PTR [rsi+0x20],r14d
   140002983:	jbe    0x1400029a8
   140002985:	mov    r8,QWORD PTR [rsi+0x18]
   140002989:	mov    eax,ecx
   14000298b:	mov    rdx,QWORD PTR [r8+rax*8]
   14000298f:	test   rdx,rdx
   140002992:	jne    0x1400029a8
   140002994:	inc    ecx
   140002996:	cmp    ecx,DWORD PTR [rsi+0x20]
   140002999:	jb     0x140002989
   14000299b:	test   rdx,rdx
   14000299e:	jne    0x1400029a8
   1400029a0:	mov    rdi,r14
   1400029a3:	jmp    0x140002a54
   1400029a8:	mov    rdi,QWORD PTR [rdx]
   1400029ab:	test   rdi,rdi
   1400029ae:	jne    0x1400029ce
   1400029b0:	mov    ecx,DWORD PTR [rdx+0x8]
   1400029b3:	inc    ecx
   1400029b5:	cmp    ecx,DWORD PTR [rsi+0x20]
   1400029b8:	jae    0x1400029ce
   1400029ba:	mov    r8,QWORD PTR [rsi+0x18]
   1400029be:	mov    rdi,QWORD PTR [r8+rcx*8]
   1400029c2:	test   rdi,rdi
   1400029c5:	jne    0x1400029ce
   1400029c7:	inc    ecx
   1400029c9:	cmp    ecx,DWORD PTR [rsi+0x20]
   1400029cc:	jb     0x1400029be
   1400029ce:	lea    rax,[rdx+0x18]
   1400029d2:	mov    edx,0xe
   1400029d7:	lea    rcx,[rsp+0x60]
   1400029dc:	movups xmm0,XMMWORD PTR [rax]
   1400029df:	lea    rax,[rax+0x80]
   1400029e6:	movups XMMWORD PTR [rcx],xmm0
   1400029e9:	lea    rcx,[rcx+0x80]
   1400029f0:	movups xmm1,XMMWORD PTR [rax-0x70]
   1400029f4:	movups XMMWORD PTR [rcx-0x70],xmm1
   1400029f8:	movups xmm0,XMMWORD PTR [rax-0x60]
   1400029fc:	movups XMMWORD PTR [rcx-0x60],xmm0
   140002a00:	movups xmm1,XMMWORD PTR [rax-0x50]
   140002a04:	movups XMMWORD PTR [rcx-0x50],xmm1
   140002a08:	movups xmm0,XMMWORD PTR [rax-0x40]
   140002a0c:	movups XMMWORD PTR [rcx-0x40],xmm0
   140002a10:	movups xmm1,XMMWORD PTR [rax-0x30]
   140002a14:	movups XMMWORD PTR [rcx-0x30],xmm1
   140002a18:	movups xmm0,XMMWORD PTR [rax-0x20]
   140002a1c:	movups XMMWORD PTR [rcx-0x20],xmm0
   140002a20:	movups xmm1,XMMWORD PTR [rax-0x10]
   140002a24:	movups XMMWORD PTR [rcx-0x10],xmm1
   140002a28:	sub    rdx,0x1
   140002a2c:	jne    0x1400029dc
   140002a2e:	movups xmm0,XMMWORD PTR [rax]
   140002a31:	movups XMMWORD PTR [rcx],xmm0
   140002a34:	movups xmm1,XMMWORD PTR [rax+0x10]
   140002a38:	movups XMMWORD PTR [rcx+0x10],xmm1
   140002a3c:	movups xmm0,XMMWORD PTR [rax+0x20]
   140002a40:	movups XMMWORD PTR [rcx+0x20],xmm0
   140002a44:	movups xmm1,XMMWORD PTR [rax+0x30]
   140002a48:	movups XMMWORD PTR [rcx+0x30],xmm1
   140002a4c:	mov    rax,QWORD PTR [rax+0x40]
   140002a50:	mov    QWORD PTR [rcx+0x40],rax
   140002a54:	lea    rax,[rbp+0x398]
   140002a5b:	test   rax,rax
   140002a5e:	je     0x140002ab6
   140002a60:	lea    rax,[rbp+0x398]
   140002a67:	mov    r9d,0x14
   140002a6d:	lea    r8,[rip+0x2eb4]        # 0x140005928
   140002a74:	mov    QWORD PTR [rsp+0x20],rax
   140002a79:	mov    edx,0x100
   140002a7e:	lea    rcx,[rbp+0x6b0]
   140002a85:	call   0x1400034b8
   140002a8a:	test   eax,eax
   140002a8c:	js     0x140002ab6
   140002a8e:	lea    r8,[rbp+0x6b0]
   140002a95:	mov    rcx,0xffffffff80000002
   140002a9c:	lea    rdx,[rip+0x2e9d]        # 0x140005940
   140002aa3:	call   QWORD PTR [rip+0x2817]        # 0x1400052c0
   140002aa9:	movzx  ebx,ax
   140002aac:	or     ebx,r12d
   140002aaf:	test   eax,eax
   140002ab1:	cmovle ebx,eax
   140002ab4:	jmp    0x140002abb
   140002ab6:	mov    ebx,0x80070057
   140002abb:	mov    ecx,0x80000000
   140002ac0:	lea    eax,[rbx+rcx*1]
   140002ac3:	test   ecx,eax
   140002ac5:	jne    0x140002ad3
   140002ac7:	cmp    ebx,0x80070002
   140002acd:	jne    0x140002c24
   140002ad3:	lea    rax,[rbp+0x398]
   140002ada:	test   rax,rax
   140002add:	je     0x140002c0d
   140002ae3:	lea    rax,[rbp+0x5a8]
   140002aea:	test   rax,rax
   140002aed:	je     0x140002c0d
   140002af3:	lea    rax,[rbp+0x398]
   140002afa:	mov    r9d,0x14
   140002b00:	lea    r8,[rip+0x2e21]        # 0x140005928
   140002b07:	mov    QWORD PTR [rsp+0x20],rax
   140002b0c:	mov    edx,0x100
   140002b11:	lea    rcx,[rbp+0x6b0]
   140002b18:	call   0x1400034b8
   140002b1d:	test   eax,eax
   140002b1f:	js     0x140002c0d
   140002b25:	lea    rax,[rsp+0x50]
   140002b2a:	mov    QWORD PTR [rsp+0x50],r14
   140002b2f:	mov    r9d,0xf003f
   140002b35:	mov    QWORD PTR [rsp+0x20],rax
   140002b3a:	xor    r8d,r8d
   140002b3d:	lea    rdx,[rip+0x2dfc]        # 0x140005940
   140002b44:	mov    rcx,0xffffffff80000002
   140002b4b:	call   QWORD PTR [rip+0x2757]        # 0x1400052a8
   140002b51:	movzx  ebx,ax
   140002b54:	or     ebx,r12d
   140002b57:	test   eax,eax
   140002b59:	cmovle ebx,eax
   140002b5c:	cmp    ebx,0x80070002
   140002b62:	jne    0x140002baa
   140002b64:	mov    QWORD PTR [rsp+0x40],r14
   140002b69:	lea    rax,[rsp+0x50]
   140002b6e:	mov    QWORD PTR [rsp+0x38],rax
   140002b73:	lea    rdx,[rip+0x2dc6]        # 0x140005940
   140002b7a:	mov    QWORD PTR [rsp+0x30],r14
   140002b7f:	xor    r9d,r9d
   140002b82:	mov    DWORD PTR [rsp+0x28],0xf003f
   140002b8a:	xor    r8d,r8d
   140002b8d:	mov    rcx,0xffffffff80000002
   140002b94:	mov    DWORD PTR [rsp+0x20],r14d
   140002b99:	call   QWORD PTR [rip+0x2711]        # 0x1400052b0
   140002b9f:	movzx  ebx,ax
   140002ba2:	or     ebx,r12d
   140002ba5:	test   eax,eax
   140002ba7:	cmovle ebx,eax
   140002baa:	test   ebx,ebx
   140002bac:	js     0x140002c12
   140002bae:	lea    rcx,[rbp+0x5a8]
   140002bb5:	or     rax,0xffffffffffffffff
   140002bb9:	inc    rax
   140002bbc:	cmp    WORD PTR [rcx+rax*2],r14w
   140002bc1:	jne    0x140002bb9
   140002bc3:	mov    rcx,QWORD PTR [rsp+0x50]
   140002bc8:	lea    eax,[rax*2+0x2]
   140002bcf:	mov    DWORD PTR [rsp+0x28],eax
   140002bd3:	lea    rdx,[rbp+0x6b0]
   140002bda:	lea    rax,[rbp+0x5a8]
   140002be1:	mov    r9d,0x1
   140002be7:	xor    r8d,r8d
   140002bea:	mov    QWORD PTR [rsp+0x20],rax
   140002bef:	call   QWORD PTR [rip+0x26a3]        # 0x140005298
   140002bf5:	mov    rcx,QWORD PTR [rsp+0x50]
   140002bfa:	movzx  ebx,ax
   140002bfd:	or     ebx,r12d
   140002c00:	test   eax,eax
   140002c02:	cmovle ebx,eax
   140002c05:	call   QWORD PTR [rip+0x2695]        # 0x1400052a0
   140002c0b:	jmp    0x140002c12
   140002c0d:	mov    ebx,0x80070057
   140002c12:	mov    rdx,QWORD PTR [rbp+0x5a0]
   140002c19:	mov    rcx,QWORD PTR [rsp+0x68]
   140002c1e:	call   QWORD PTR [rip+0x24f4]        # 0x140005118
   140002c24:	test   rdi,rdi
   140002c27:	jne    0x14000296b
   140002c2d:	mov    eax,ebx
   140002c2f:	mov    rcx,QWORD PTR [rbp+0x8c0]
   140002c36:	xor    rcx,rsp
   140002c39:	call   0x1400039c0
   140002c3e:	lea    r11,[rsp+0x9d0]
   140002c46:	mov    rbx,QWORD PTR [r11+0x20]
   140002c4a:	mov    rsi,QWORD PTR [r11+0x28]
   140002c4e:	mov    rdi,QWORD PTR [r11+0x30]
   140002c52:	mov    rsp,r11
   140002c55:	pop    r14
   140002c57:	pop    r12
   140002c59:	pop    rbp
   140002c5a:	ret    
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	int3   
   140002c61:	int3   
   140002c62:	int3   
   140002c63:	int3   
   140002c64:	mov    QWORD PTR [rsp+0x8],rbx
   140002c69:	mov    QWORD PTR [rsp+0x10],rbp
   140002c6e:	mov    QWORD PTR [rsp+0x18],rsi
   140002c73:	push   rdi
   140002c74:	sub    rsp,0x190
   140002c7b:	mov    esi,0x2
   140002c80:	lea    r8,[rsp+0x20]
   140002c85:	mov    rdi,rcx
   140002c88:	mov    eax,esi
   140002c8a:	lea    ebp,[rsi+0x7e]
   140002c8d:	movups xmm0,XMMWORD PTR [rdx]
   140002c90:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140002c94:	movups XMMWORD PTR [r8],xmm0
   140002c98:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140002c9c:	movups XMMWORD PTR [r8+0x10],xmm1
   140002ca1:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140002ca5:	movups XMMWORD PTR [r8+0x20],xmm0
   140002caa:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140002cae:	movups XMMWORD PTR [r8+0x30],xmm1
   140002cb3:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140002cb7:	movups XMMWORD PTR [r8+0x40],xmm0
   140002cbc:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140002cc0:	movups XMMWORD PTR [r8+0x50],xmm1
   140002cc5:	movups xmm1,XMMWORD PTR [rdx+0x70]
   140002cc9:	add    rdx,rbp
   140002ccc:	movups XMMWORD PTR [r8+0x60],xmm0
   140002cd1:	add    r8,rbp
   140002cd4:	movups XMMWORD PTR [r8-0x10],xmm1
   140002cd9:	sub    rax,0x1
   140002cdd:	jne    0x140002c8d
   140002cdf:	movups xmm0,XMMWORD PTR [rdx]
   140002ce2:	movsxd rbx,DWORD PTR [rcx+0x8]
   140002ce6:	mov    rax,QWORD PTR [rdx+0x60]
   140002cea:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140002cee:	movups XMMWORD PTR [r8],xmm0
   140002cf2:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140002cf6:	movups XMMWORD PTR [r8+0x10],xmm1
   140002cfb:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140002cff:	movups XMMWORD PTR [r8+0x20],xmm0
   140002d04:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140002d08:	movups XMMWORD PTR [r8+0x30],xmm1
   140002d0d:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140002d11:	movups XMMWORD PTR [r8+0x40],xmm0
   140002d16:	movups XMMWORD PTR [r8+0x50],xmm1
   140002d1b:	mov    QWORD PTR [r8+0x60],rax
   140002d1f:	test   ebx,ebx
   140002d21:	jns    0x140002d2e
   140002d23:	mov    r8d,0x80070057
   140002d29:	jmp    0x140002dd4
   140002d2e:	lea    edx,[rbx+0x1]
   140002d31:	test   edx,edx
   140002d33:	js     0x140002d23
   140002d35:	call   0x140002f78
   140002d3a:	mov    r8d,eax
   140002d3d:	test   eax,eax
   140002d3f:	js     0x140002dd4
   140002d45:	imul   rdx,rbx,0x168
   140002d4c:	lea    rcx,[rsp+0x20]
   140002d51:	add    rdx,QWORD PTR [rdi]
   140002d54:	movups xmm0,XMMWORD PTR [rcx]
   140002d57:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140002d5b:	movups XMMWORD PTR [rdx],xmm0
   140002d5e:	movups xmm0,XMMWORD PTR [rcx+0x20]
   140002d62:	movups XMMWORD PTR [rdx+0x10],xmm1
   140002d66:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140002d6a:	movups XMMWORD PTR [rdx+0x20],xmm0
   140002d6e:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140002d72:	movups XMMWORD PTR [rdx+0x30],xmm1
   140002d76:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140002d7a:	movups XMMWORD PTR [rdx+0x40],xmm0
   140002d7e:	movups xmm0,XMMWORD PTR [rcx+0x60]
   140002d82:	movups XMMWORD PTR [rdx+0x50],xmm1
   140002d86:	movups xmm1,XMMWORD PTR [rcx+0x70]
   140002d8a:	add    rcx,rbp
   140002d8d:	movups XMMWORD PTR [rdx+0x60],xmm0
   140002d91:	add    rdx,rbp
   140002d94:	movups XMMWORD PTR [rdx-0x10],xmm1
   140002d98:	sub    rsi,0x1
   140002d9c:	jne    0x140002d54
   140002d9e:	movups xmm0,XMMWORD PTR [rcx]
   140002da1:	movups xmm1,XMMWORD PTR [rcx+0x10]
   140002da5:	movups XMMWORD PTR [rdx],xmm0
   140002da8:	movups xmm0,XMMWORD PTR [rcx+0x20]
   140002dac:	movups XMMWORD PTR [rdx+0x10],xmm1
   140002db0:	movups xmm1,XMMWORD PTR [rcx+0x30]
   140002db4:	movups XMMWORD PTR [rdx+0x20],xmm0
   140002db8:	movups xmm0,XMMWORD PTR [rcx+0x40]
   140002dbc:	movups XMMWORD PTR [rdx+0x30],xmm1
   140002dc0:	movups xmm1,XMMWORD PTR [rcx+0x50]
   140002dc4:	mov    rcx,QWORD PTR [rcx+0x60]
   140002dc8:	movups XMMWORD PTR [rdx+0x40],xmm0
   140002dcc:	movups XMMWORD PTR [rdx+0x50],xmm1
   140002dd0:	mov    QWORD PTR [rdx+0x60],rcx
   140002dd4:	lea    r11,[rsp+0x190]
   140002ddc:	mov    eax,r8d
   140002ddf:	mov    rbx,QWORD PTR [r11+0x10]
   140002de3:	mov    rbp,QWORD PTR [r11+0x18]
   140002de7:	mov    rsi,QWORD PTR [r11+0x20]
   140002deb:	mov    rsp,r11
   140002dee:	pop    rdi
   140002def:	ret    
   140002df0:	int3   
   140002df1:	int3   
   140002df2:	int3   
   140002df3:	int3   
   140002df4:	int3   
   140002df5:	int3   
   140002df6:	int3   
   140002df7:	int3   
   140002df8:	mov    QWORD PTR [rsp+0x8],rbx
   140002dfd:	mov    QWORD PTR [rsp+0x10],rbp
   140002e02:	mov    QWORD PTR [rsp+0x18],rsi
   140002e07:	push   rdi
   140002e08:	push   r14
   140002e0a:	push   r15
   140002e0c:	sub    rsp,0x20
   140002e10:	mov    ebp,DWORD PTR [rcx+0x8]
   140002e13:	mov    rax,rdx
   140002e16:	mov    r15,rdx
   140002e19:	shr    rax,0x4
   140002e1d:	xor    edx,edx
   140002e1f:	mov    rsi,rcx
   140002e22:	mov    rcx,QWORD PTR [rcx]
   140002e25:	xor    edi,edi
   140002e27:	div    ebp
   140002e29:	mov    rbx,r8
   140002e2c:	mov    r14d,edx
   140002e2f:	test   rcx,rcx
   140002e32:	je     0x140002e52
   140002e34:	mov    r8,QWORD PTR [rcx+rdx*8]
   140002e38:	jmp    0x140002e43
   140002e3a:	cmp    QWORD PTR [r8+0x10],r15
   140002e3e:	je     0x140002e48
   140002e40:	mov    r8,QWORD PTR [r8]
   140002e43:	test   r8,r8
   140002e46:	jne    0x140002e3a
   140002e48:	test   r8,r8
   140002e4b:	jne    0x140002ec8
   140002e4d:	test   rcx,rcx
   140002e50:	jne    0x140002e9b
   140002e52:	test   ebp,ebp
   140002e54:	jne    0x140002e60
   140002e56:	mov    edi,0x80070057
   140002e5b:	jmp    0x140002f57
   140002e60:	mov    rcx,0xffffffffffffffff
   140002e67:	mov    eax,0x8
   140002e6c:	mul    rbp
   140002e6f:	cmovo  rax,rcx
   140002e73:	mov    rcx,rax
   140002e76:	call   0x140003584
   140002e7b:	mov    QWORD PTR [rsi],rax
   140002e7e:	test   rax,rax
   140002e81:	je     0x140002f52
   140002e87:	mov    r8,rbp
   140002e8a:	xor    edx,edx
   140002e8c:	shl    r8,0x3
   140002e90:	mov    rcx,rax
   140002e93:	call   0x140004122
   140002e98:	mov    DWORD PTR [rsi+0x8],ebp
   140002e9b:	mov    rcx,rsi
   140002e9e:	call   0x14000310c
   140002ea3:	mov    r8,rax
   140002ea6:	test   rax,rax
   140002ea9:	je     0x140002f52
   140002eaf:	mov    DWORD PTR [rax+0x8],r14d
   140002eb3:	mov    QWORD PTR [rax+0x10],r15
   140002eb7:	mov    rax,QWORD PTR [rsi]
   140002eba:	mov    rcx,QWORD PTR [rax+r14*8]
   140002ebe:	mov    QWORD PTR [r8],rcx
   140002ec1:	mov    rax,QWORD PTR [rsi]
   140002ec4:	mov    QWORD PTR [rax+r14*8],r8
   140002ec8:	mov    eax,0xe
   140002ecd:	add    r8,0x18
   140002ed1:	lea    ecx,[rax+0x72]
   140002ed4:	movups xmm0,XMMWORD PTR [rbx]
   140002ed7:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140002edb:	movups XMMWORD PTR [r8],xmm0
   140002edf:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140002ee3:	movups XMMWORD PTR [r8+0x10],xmm1
   140002ee8:	movups xmm1,XMMWORD PTR [rbx+0x30]
   140002eec:	movups XMMWORD PTR [r8+0x20],xmm0
   140002ef1:	movups xmm0,XMMWORD PTR [rbx+0x40]
   140002ef5:	movups XMMWORD PTR [r8+0x30],xmm1
   140002efa:	movups xmm1,XMMWORD PTR [rbx+0x50]
   140002efe:	movups XMMWORD PTR [r8+0x40],xmm0
   140002f03:	movups xmm0,XMMWORD PTR [rbx+0x60]
   140002f07:	movups XMMWORD PTR [r8+0x50],xmm1
   140002f0c:	movups xmm1,XMMWORD PTR [rbx+0x70]
   140002f10:	add    rbx,rcx
   140002f13:	movups XMMWORD PTR [r8+0x60],xmm0
   140002f18:	add    r8,rcx
   140002f1b:	movups XMMWORD PTR [r8-0x10],xmm1
   140002f20:	sub    rax,0x1
   140002f24:	jne    0x140002ed4
   140002f26:	movups xmm0,XMMWORD PTR [rbx]
   140002f29:	mov    rax,QWORD PTR [rbx+0x40]
   140002f2d:	movups xmm1,XMMWORD PTR [rbx+0x10]
   140002f31:	movups XMMWORD PTR [r8],xmm0
   140002f35:	movups xmm0,XMMWORD PTR [rbx+0x20]
   140002f39:	movups XMMWORD PTR [r8+0x10],xmm1
   140002f3e:	movups xmm1,XMMWORD PTR [rbx+0x30]
   140002f42:	movups XMMWORD PTR [r8+0x20],xmm0
   140002f47:	movups XMMWORD PTR [r8+0x30],xmm1
   140002f4c:	mov    QWORD PTR [r8+0x40],rax
   140002f50:	jmp    0x140002f57
   140002f52:	mov    edi,0x8007000e
   140002f57:	mov    rbx,QWORD PTR [rsp+0x40]
   140002f5c:	mov    eax,edi
   140002f5e:	mov    rbp,QWORD PTR [rsp+0x48]
   140002f63:	mov    rsi,QWORD PTR [rsp+0x50]
   140002f68:	add    rsp,0x20
   140002f6c:	pop    r15
   140002f6e:	pop    r14
   140002f70:	pop    rdi
   140002f71:	ret    
   140002f72:	int3   
   140002f73:	int3   
   140002f74:	int3   
   140002f75:	int3   
   140002f76:	int3   
   140002f77:	int3   
   140002f78:	mov    rax,rsp
   140002f7b:	mov    QWORD PTR [rax+0x8],rbx
   140002f7f:	mov    QWORD PTR [rax+0x10],rbp
   140002f83:	mov    QWORD PTR [rax+0x18],rsi
   140002f87:	mov    QWORD PTR [rax+0x20],rdi
   140002f8b:	push   r14
   140002f8d:	sub    rsp,0x20
   140002f91:	xor    edi,edi
   140002f93:	movsxd rsi,edx
   140002f96:	mov    rbx,rcx
   140002f99:	test   edx,edx
   140002f9b:	jne    0x140002fb6
   140002f9d:	cmp    QWORD PTR [rcx],rdi
   140002fa0:	je     0x140002fad
   140002fa2:	mov    rcx,QWORD PTR [rcx]
   140002fa5:	call   0x140003590
   140002faa:	mov    QWORD PTR [rbx],rdi
   140002fad:	mov    QWORD PTR [rbx+0x8],rdi
   140002fb1:	jmp    0x1400030e6
   140002fb6:	cmp    QWORD PTR [rcx],rdi
   140002fb9:	jne    0x140002ff2
   140002fbb:	imul   rbp,rsi,0x168
   140002fc2:	mov    rcx,rbp
   140002fc5:	call   0x140003584
   140002fca:	mov    rcx,rax
   140002fcd:	test   rax,rax
   140002fd0:	je     0x1400030e1
   140002fd6:	mov    QWORD PTR [rbx],rax
   140002fd9:	mov    eax,0xffffffff
   140002fde:	cmp    rbp,rax
   140002fe1:	jae    0x140002fed
   140002fe3:	mov    r8d,ebp
   140002fe6:	xor    edx,edx
   140002fe8:	call   0x140004122
   140002fed:	mov    DWORD PTR [rbx+0xc],esi
   140002ff0:	jmp    0x140003030
   140002ff2:	mov    r8d,DWORD PTR [rcx+0xc]
   140002ff6:	cmp    esi,r8d
   140002ff9:	jg     0x140003038
   140002ffb:	cmp    esi,DWORD PTR [rcx+0x8]
   140002ffe:	jle    0x140003030
   140003000:	mov    eax,esi
   140003002:	sub    eax,DWORD PTR [rcx+0x8]
   140003005:	cdqe   
   140003007:	imul   rcx,rax,0x168
   14000300e:	mov    eax,0xffffffff
   140003013:	cmp    rcx,rax
   140003016:	jae    0x140003030
   140003018:	movsxd rax,DWORD PTR [rbx+0x8]
   14000301c:	xor    edx,edx
   14000301e:	mov    r8d,ecx
   140003021:	imul   rcx,rax,0x168
   140003028:	add    rcx,QWORD PTR [rbx]
   14000302b:	call   0x140004122
   140003030:	mov    DWORD PTR [rbx+0x8],esi
   140003033:	jmp    0x1400030e6
   140003038:	mov    ecx,DWORD PTR [rcx+0x10]
   14000303b:	test   ecx,ecx
   14000303d:	jne    0x140003061
   14000303f:	mov    eax,DWORD PTR [rbx+0x8]
   140003042:	cdq    
   140003043:	and    edx,0x7
   140003046:	add    eax,edx
   140003048:	mov    edx,0x400
   14000304d:	sar    eax,0x3
   140003050:	cmp    eax,edx
   140003052:	mov    ecx,eax
   140003054:	cmovg  ecx,edx
   140003057:	mov    edx,0x4
   14000305c:	cmp    eax,edx
   14000305e:	cmovl  ecx,edx
   140003061:	lea    eax,[r8+rcx*1]
   140003065:	mov    ebp,esi
   140003067:	cmp    esi,eax
   140003069:	cmovl  ebp,eax
   14000306c:	cmp    ebp,DWORD PTR [rbx+0x8]
   14000306f:	jl     0x1400030e1
   140003071:	movsxd rax,ebp
   140003074:	imul   rcx,rax,0x168
   14000307b:	call   0x140003584
   140003080:	mov    r14,rax
   140003083:	test   rax,rax
   140003086:	je     0x1400030e1
   140003088:	movsxd rax,DWORD PTR [rbx+0x8]
   14000308c:	mov    rcx,r14
   14000308f:	mov    rdx,QWORD PTR [rbx]
   140003092:	imul   r8,rax,0x168
   140003099:	call   0x140004116
   14000309e:	mov    eax,esi
   1400030a0:	sub    eax,DWORD PTR [rbx+0x8]
   1400030a3:	cdqe   
   1400030a5:	imul   rcx,rax,0x168
   1400030ac:	mov    eax,0xffffffff
   1400030b1:	cmp    rcx,rax
   1400030b4:	jae    0x1400030ce
   1400030b6:	movsxd rax,DWORD PTR [rbx+0x8]
   1400030ba:	xor    edx,edx
   1400030bc:	mov    r8d,ecx
   1400030bf:	imul   rcx,rax,0x168
   1400030c6:	add    rcx,r14
   1400030c9:	call   0x140004122
   1400030ce:	mov    rcx,QWORD PTR [rbx]
   1400030d1:	call   0x140003590
   1400030d6:	mov    QWORD PTR [rbx],r14
   1400030d9:	mov    DWORD PTR [rbx+0x8],esi
   1400030dc:	mov    DWORD PTR [rbx+0xc],ebp
   1400030df:	jmp    0x1400030e6
   1400030e1:	mov    edi,0x8007000e
   1400030e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400030eb:	mov    eax,edi
   1400030ed:	mov    rdi,QWORD PTR [rsp+0x48]
   1400030f2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400030f7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400030fc:	add    rsp,0x20
   140003100:	pop    r14
   140003102:	ret    
   140003103:	int3   
   140003104:	int3   
   140003105:	int3   
   140003106:	int3   
   140003107:	int3   
   140003108:	int3   
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	mov    QWORD PTR [rsp+0x8],rbx
   140003111:	push   rdi
   140003112:	sub    rsp,0x20
   140003116:	cmp    QWORD PTR [rcx+0x10],0x0
   14000311b:	mov    rdi,rcx
   14000311e:	jne    0x140003184
   140003120:	imul   eax,DWORD PTR [rcx+0x20],0x760
   140003127:	add    eax,0x8
   14000312a:	cmp    eax,DWORD PTR [rcx+0x20]
   14000312d:	jbe    0x1400031b7
   140003133:	mov    ebx,0x760
   140003138:	cmp    eax,ebx
   14000313a:	jbe    0x1400031b7
   14000313c:	mov    ecx,eax
   14000313e:	call   0x140003584
   140003143:	test   rax,rax
   140003146:	je     0x1400031b7
   140003148:	mov    rcx,QWORD PTR [rdi+0x18]
   14000314c:	mov    QWORD PTR [rax],rcx
   14000314f:	mov    QWORD PTR [rdi+0x18],rax
   140003153:	mov    r8d,DWORD PTR [rdi+0x20]
   140003157:	dec    r8d
   14000315a:	movsxd rcx,r8d
   14000315d:	imul   rdx,rcx,0x760
   140003164:	lea    rcx,[rax+0x8]
   140003168:	add    rcx,rdx
   14000316b:	test   r8d,r8d
   14000316e:	js     0x140003184
   140003170:	mov    rax,QWORD PTR [rdi+0x10]
   140003174:	mov    QWORD PTR [rcx],rax
   140003177:	mov    QWORD PTR [rdi+0x10],rcx
   14000317b:	sub    rcx,rbx
   14000317e:	sub    r8d,0x1
   140003182:	jns    0x140003170
   140003184:	mov    rbx,QWORD PTR [rdi+0x10]
   140003188:	xor    eax,eax
   14000318a:	xor    edx,edx
   14000318c:	mov    r8d,0x748
   140003192:	mov    rcx,QWORD PTR [rbx]
   140003195:	inc    DWORD PTR [rdi+0xc]
   140003198:	mov    QWORD PTR [rdi+0x10],rcx
   14000319c:	lea    rcx,[rbx+0x18]
   1400031a0:	mov    QWORD PTR [rbx+0x10],rax
   1400031a4:	call   0x140004122
   1400031a9:	mov    rax,rbx
   1400031ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031b1:	add    rsp,0x20
   1400031b5:	pop    rdi
   1400031b6:	ret    
   1400031b7:	xor    eax,eax
   1400031b9:	jmp    0x1400031ac
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	int3   
   1400031c1:	int3   
   1400031c2:	int3   
   1400031c3:	int3   
   1400031c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400031c9:	mov    DWORD PTR [rsp+0x8],ecx
   1400031cd:	push   rbp
   1400031ce:	push   rbx
   1400031cf:	push   rsi
   1400031d0:	mov    rbp,rsp
   1400031d3:	sub    rsp,0x70
   1400031d7:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   1400031df:	and    DWORD PTR [rbp+0x28],0x0
   1400031e3:	lea    rax,[rbp+0x28]
   1400031e7:	mov    QWORD PTR [rbp-0x18],rax
   1400031eb:	lea    rax,[rip+0x26ce]        # 0x1400058c0
   1400031f2:	mov    QWORD PTR [rbp-0x10],rax
   1400031f6:	lea    rsi,[rip+0x4e23]        # 0x140008020
   1400031fd:	cmp    QWORD PTR [rip+0x4e1c],rsi        # 0x140008020
   140003204:	je     0x140003210
   140003206:	lea    rcx,[rbp-0x18]
   14000320a:	call   0x1400033fc
   14000320f:	nop
   140003210:	and    QWORD PTR [rbp+0x30],0x0
   140003215:	and    DWORD PTR [rbp+0x20],0x0
   140003219:	lea    rax,[rbp+0x20]
   14000321d:	mov    QWORD PTR [rbp-0x28],rax
   140003221:	lea    rax,[rip+0x26d0]        # 0x1400058f8
   140003228:	mov    QWORD PTR [rbp-0x20],rax
   14000322c:	cmp    QWORD PTR [rip+0x4ded],rsi        # 0x140008020
   140003233:	je     0x14000323f
   140003235:	lea    rcx,[rbp-0x28]
   140003239:	call   0x1400033fc
   14000323e:	nop
   14000323f:	lea    rax,[rbp+0x30]
   140003243:	mov    QWORD PTR [rsp+0x30],rax
   140003248:	mov    DWORD PTR [rsp+0x28],0xc8
   140003250:	mov    DWORD PTR [rsp+0x20],0x2
   140003258:	lea    r9,[rip+0x2351]        # 0x1400055b0
   14000325f:	xor    r8d,r8d
   140003262:	lea    edx,[r8+0x1a]
   140003266:	mov    ecx,0xffff
   14000326b:	call   QWORD PTR [rip+0x1e17]        # 0x140005088
   140003271:	test   rax,rax
   140003274:	jne    0x1400032bf
   140003276:	call   QWORD PTR [rip+0x1f6c]        # 0x1400051e8
   14000327c:	test   eax,eax
   14000327e:	je     0x1400032bf
   140003280:	movzx  r8d,ax
   140003284:	or     r8d,0x80070000
   14000328b:	test   eax,eax
   14000328d:	cmovle r8d,eax
   140003291:	mov    DWORD PTR [rbp+0x20],r8d
   140003295:	mov    rcx,QWORD PTR [rip+0x4d84]        # 0x140008020
   14000329c:	cmp    rcx,rsi
   14000329f:	je     0x1400032c3
   1400032a1:	test   BYTE PTR [rcx+0x1c],0x4
   1400032a5:	je     0x1400032c3
   1400032a7:	mov    edx,0x3b
   1400032ac:	mov    r9d,r8d
   1400032af:	lea    r8,[rip+0x2662]        # 0x140005918
   1400032b6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400032ba:	call   0x140001058
   1400032bf:	mov    r8d,DWORD PTR [rbp+0x20]
   1400032c3:	mov    DWORD PTR [rbp+0x28],r8d
   1400032c7:	lea    rcx,[rbp-0x28]
   1400032cb:	call   0x140003438
   1400032d0:	mov    ebx,DWORD PTR [rbp+0x28]
   1400032d3:	test   ebx,ebx
   1400032d5:	jns    0x140003304
   1400032d7:	mov    rcx,QWORD PTR [rip+0x4d42]        # 0x140008020
   1400032de:	cmp    rcx,rsi
   1400032e1:	je     0x140003304
   1400032e3:	test   BYTE PTR [rcx+0x1c],0x4
   1400032e7:	je     0x140003304
   1400032e9:	mov    edx,0x1d
   1400032ee:	mov    r9d,ebx
   1400032f1:	lea    r8,[rip+0x25f0]        # 0x1400058e8
   1400032f8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400032fc:	call   0x140001058
   140003301:	mov    ebx,DWORD PTR [rbp+0x28]
   140003304:	lea    rcx,[rbp-0x18]
   140003308:	call   0x140003438
   14000330d:	mov    eax,ebx
   14000330f:	add    rsp,0x70
   140003313:	pop    rsi
   140003314:	pop    rbx
   140003315:	pop    rbp
   140003316:	ret    
   140003317:	int3   
   140003318:	int3   
   140003319:	int3   
   14000331a:	int3   
   14000331b:	int3   
   14000331c:	int3   
   14000331d:	int3   
   14000331e:	int3   
   14000331f:	int3   
   140003320:	sub    rsp,0x48
   140003324:	test   r9,r9
   140003327:	je     0x14000333c
   140003329:	or     r8,0xffffffffffffffff
   14000332d:	inc    r8
   140003330:	cmp    BYTE PTR [r9+r8*1],0x0
   140003335:	jne    0x14000332d
   140003337:	inc    r8
   14000333a:	jmp    0x140003342
   14000333c:	mov    r8d,0x5
   140003342:	test   r9,r9
   140003345:	lea    rax,[rip+0x2214]        # 0x140005560
   14000334c:	cmovne rax,r9
   140003350:	and    QWORD PTR [rsp+0x30],0x0
   140003356:	mov    QWORD PTR [rsp+0x28],r8
   14000335b:	lea    r8,[rip+0x25b6]        # 0x140005918
   140003362:	movzx  r9d,dx
   140003366:	mov    edx,0x2b
   14000336b:	mov    QWORD PTR [rsp+0x20],rax
   140003370:	call   QWORD PTR [rip+0x209a]        # 0x140005410
   140003376:	add    rsp,0x48
   14000337a:	ret    
   14000337b:	int3   
   14000337c:	int3   
   14000337d:	int3   
   14000337e:	int3   
   14000337f:	int3   
   140003380:	int3   
   140003381:	int3   
   140003382:	int3   
   140003383:	int3   
   140003384:	sub    rsp,0x58
   140003388:	test   r9,r9
   14000338b:	je     0x1400033a0
   14000338d:	or     rdx,0xffffffffffffffff
   140003391:	inc    rdx
   140003394:	cmp    BYTE PTR [r9+rdx*1],0x0
   140003399:	jne    0x140003391
   14000339b:	inc    rdx
   14000339e:	jmp    0x1400033a5
   1400033a0:	mov    edx,0x5
   1400033a5:	test   r9,r9
   1400033a8:	lea    r8,[rsp+0x80]
   1400033b0:	lea    rax,[rip+0x21a9]        # 0x140005560
   1400033b7:	cmovne rax,r9
   1400033bb:	and    QWORD PTR [rsp+0x40],0x0
   1400033c1:	mov    QWORD PTR [rsp+0x38],0x4
   1400033ca:	mov    r9d,0xb
   1400033d0:	mov    QWORD PTR [rsp+0x30],r8
   1400033d5:	lea    r8,[rip+0x253c]        # 0x140005918
   1400033dc:	mov    QWORD PTR [rsp+0x28],rdx
   1400033e1:	mov    QWORD PTR [rsp+0x20],rax
   1400033e6:	lea    edx,[r9+0x20]
   1400033ea:	call   QWORD PTR [rip+0x2020]        # 0x140005410
   1400033f0:	add    rsp,0x58
   1400033f4:	ret    
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	rex push rbx
   1400033fe:	sub    rsp,0x20
   140003402:	mov    rbx,rcx
   140003405:	mov    rcx,QWORD PTR [rip+0x4c14]        # 0x140008020
   14000340c:	test   DWORD PTR [rcx+0x1c],0x400
   140003413:	je     0x140003427
   140003415:	mov    r9,QWORD PTR [rbx+0x8]
   140003419:	mov    edx,0xa
   14000341e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003422:	call   0x140003320
   140003427:	mov    rax,rbx
   14000342a:	add    rsp,0x20
   14000342e:	pop    rbx
   14000342f:	ret    
   140003430:	int3   
   140003431:	int3   
   140003432:	int3   
   140003433:	int3   
   140003434:	int3   
   140003435:	int3   
   140003436:	int3   
   140003437:	int3   
   140003438:	mov    QWORD PTR [rsp+0x8],rbx
   14000343d:	push   rdi
   14000343e:	sub    rsp,0x30
   140003442:	mov    rax,QWORD PTR [rcx]
   140003445:	lea    rdi,[rip+0x4bd4]        # 0x140008020
   14000344c:	mov    rbx,rcx
   14000344f:	test   rax,rax
   140003452:	je     0x14000347d
   140003454:	mov    edx,DWORD PTR [rax]
   140003456:	test   edx,edx
   140003458:	jns    0x14000347d
   14000345a:	mov    rcx,QWORD PTR [rip+0x4bbf]        # 0x140008020
   140003461:	cmp    rcx,rdi
   140003464:	je     0x1400034a4
   140003466:	test   BYTE PTR [rcx+0x1c],0x4
   14000346a:	je     0x140003484
   14000346c:	mov    r9,QWORD PTR [rbx+0x8]
   140003470:	mov    rcx,QWORD PTR [rcx+0x10]
   140003474:	mov    DWORD PTR [rsp+0x20],edx
   140003478:	call   0x140003384
   14000347d:	mov    rcx,QWORD PTR [rip+0x4b9c]        # 0x140008020
   140003484:	cmp    rcx,rdi
   140003487:	je     0x1400034a4
   140003489:	test   DWORD PTR [rcx+0x1c],0x400
   140003490:	je     0x1400034a4
   140003492:	mov    r9,QWORD PTR [rbx+0x8]
   140003496:	mov    edx,0xc
   14000349b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000349f:	call   0x140003320
   1400034a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034a9:	add    rsp,0x30
   1400034ad:	pop    rdi
   1400034ae:	ret    
   1400034af:	int3   
   1400034b0:	int3   
   1400034b1:	int3   
   1400034b2:	int3   
   1400034b3:	int3   
   1400034b4:	int3   
   1400034b5:	int3   
   1400034b6:	int3   
   1400034b7:	int3   
   1400034b8:	mov    QWORD PTR [rsp+0x18],r8
   1400034bd:	mov    QWORD PTR [rsp+0x20],r9
   1400034c2:	push   rbx
   1400034c3:	push   rbp
   1400034c4:	push   rsi
   1400034c5:	push   rdi
   1400034c6:	sub    rsp,0x28
   1400034ca:	xor    ebp,ebp
   1400034cc:	lea    rax,[rdx-0x1]
   1400034d0:	cmp    rax,0x7ffffffe
   1400034d6:	mov    rsi,rcx
   1400034d9:	mov    edi,ebp
   1400034db:	mov    ecx,0x80070057
   1400034e0:	cmova  edi,ecx
   1400034e3:	test   edi,edi
   1400034e5:	js     0x14000351c
   1400034e7:	lea    rbx,[rdx-0x1]
   1400034eb:	mov    rcx,rsi
   1400034ee:	mov    rdx,rbx
   1400034f1:	lea    r9,[rsp+0x68]
   1400034f6:	mov    edi,ebp
   1400034f8:	call   QWORD PTR [rip+0x1e5a]        # 0x140005358
   1400034fe:	test   eax,eax
   140003500:	js     0x140003511
   140003502:	cdqe   
   140003504:	cmp    rax,rbx
   140003507:	ja     0x140003511
   140003509:	jne    0x140003524
   14000350b:	mov    WORD PTR [rsi+rbx*2],bp
   14000350f:	jmp    0x140003524
   140003511:	mov    WORD PTR [rsi+rbx*2],bp
   140003515:	mov    edi,0x8007007a
   14000351a:	jmp    0x140003524
   14000351c:	test   rdx,rdx
   14000351f:	je     0x140003524
   140003521:	mov    WORD PTR [rsi],bp
   140003524:	mov    eax,edi
   140003526:	add    rsp,0x28
   14000352a:	pop    rdi
   14000352b:	pop    rsi
   14000352c:	pop    rbp
   14000352d:	pop    rbx
   14000352e:	ret    
   14000352f:	int3   
   140003530:	int3   
   140003531:	int3   
   140003532:	int3   
   140003533:	int3   
   140003534:	int3   
   140003535:	int3   
   140003536:	int3   
   140003537:	int3   
   140003538:	int3   
   140003539:	int3   
   14000353a:	int3   
   14000353b:	int3   
   14000353c:	int3   
   14000353d:	int3   
   14000353e:	int3   
   14000353f:	int3   
   140003540:	sub    rsp,0x38
   140003544:	and    DWORD PTR [rsp+0x28],0x0
   140003549:	mov    r9,QWORD PTR [rip+0x1c80]        # 0x1400051d0
   140003550:	mov    r8,QWORD PTR [rip+0x2431]        # 0x140005988
   140003557:	mov    QWORD PTR [rsp+0x20],rdx
   14000355c:	mov    rdx,rcx
   14000355f:	lea    rcx,[rip+0xffffffffffffca9a]        # 0x140000000
   140003566:	call   QWORD PTR [rip+0x1c6c]        # 0x1400051d8
   14000356c:	add    rsp,0x38
   140003570:	ret    
   140003571:	int3   
   140003572:	int3   
   140003573:	int3   
   140003574:	int3   
   140003575:	int3   
   140003576:	int3   
   140003577:	int3   
   140003578:	jmp    0x140003a18
   14000357d:	int3   
   14000357e:	int3   
   14000357f:	int3   
   140003580:	int3   
   140003581:	int3   
   140003582:	int3   
   140003583:	int3   
   140003584:	jmp    0x14000359c
   140003589:	int3   
   14000358a:	int3   
   14000358b:	int3   
   14000358c:	int3   
   14000358d:	int3   
   14000358e:	int3   
   14000358f:	int3   
   140003590:	jmp    0x140003578
   140003595:	int3   
   140003596:	int3   
   140003597:	int3   
   140003598:	int3   
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	mov    QWORD PTR [rsp+0x8],rbx
   1400035a1:	push   rdi
   1400035a2:	sub    rsp,0x20
   1400035a6:	mov    rdi,rcx
   1400035a9:	jmp    0x1400035ba
   1400035ab:	mov    rcx,rdi
   1400035ae:	call   0x140003a30
   1400035b3:	test   eax,eax
   1400035b5:	je     0x1400035c7
   1400035b7:	mov    rcx,rdi
   1400035ba:	call   0x140003a24
   1400035bf:	mov    rbx,rax
   1400035c2:	test   rax,rax
   1400035c5:	je     0x1400035ab
   1400035c7:	mov    rax,rbx
   1400035ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035cf:	add    rsp,0x20
   1400035d3:	pop    rdi
   1400035d4:	ret    
   1400035d5:	int3   
   1400035d6:	int3   
   1400035d7:	int3   
   1400035d8:	int3   
   1400035d9:	int3   
   1400035da:	int3   
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	sub    rsp,0x28
   1400035e4:	mov    eax,0x5a4d
   1400035e9:	cmp    WORD PTR [rip+0xffffffffffffca10],ax        # 0x140000000
   1400035f0:	je     0x1400035f6
   1400035f2:	xor    eax,eax
   1400035f4:	jmp    0x140003645
   1400035f6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffca3f]        # 0x14000003c
   1400035fd:	lea    rax,[rip+0xffffffffffffc9fc]        # 0x140000000
   140003604:	add    rcx,rax
   140003607:	cmp    DWORD PTR [rcx],0x4550
   14000360d:	jne    0x1400035f2
   14000360f:	movzx  eax,WORD PTR [rcx+0x18]
   140003613:	cmp    eax,0x10b
   140003618:	je     0x140003634
   14000361a:	cmp    eax,0x20b
   14000361f:	jne    0x1400035f2
   140003621:	xor    eax,eax
   140003623:	cmp    DWORD PTR [rcx+0x84],0xe
   14000362a:	jbe    0x140003645
   14000362c:	cmp    DWORD PTR [rcx+0xf8],eax
   140003632:	jmp    0x140003642
   140003634:	xor    eax,eax
   140003636:	cmp    DWORD PTR [rcx+0x74],0xe
   14000363a:	jbe    0x140003645
   14000363c:	cmp    DWORD PTR [rcx+0xe8],eax
   140003642:	setne  al
   140003645:	mov    ecx,0x2
   14000364a:	mov    DWORD PTR [rip+0x4a00],eax        # 0x140008050
   140003650:	call   0x140003b08
   140003655:	mov    ecx,eax
   140003657:	call   QWORD PTR [rip+0x1d7b]        # 0x1400053d8
   14000365d:	mov    rcx,QWORD PTR [rip+0x1d14]        # 0x140005378
   140003664:	or     rax,0xffffffffffffffff
   140003668:	mov    QWORD PTR [rip+0x5069],rax        # 0x1400086d8
   14000366f:	mov    QWORD PTR [rip+0x506a],rax        # 0x1400086e0
   140003676:	mov    eax,DWORD PTR [rip+0x49e8]        # 0x140008064
   14000367c:	mov    DWORD PTR [rcx],eax
   14000367e:	mov    rcx,QWORD PTR [rip+0x1cc3]        # 0x140005348
   140003685:	mov    eax,DWORD PTR [rip+0x49cd]        # 0x140008058
   14000368b:	mov    DWORD PTR [rcx],eax
   14000368d:	call   0x140003d20
   140003692:	cmp    DWORD PTR [rip+0x4967],0x0        # 0x140008000
   140003699:	jne    0x1400036a8
   14000369b:	lea    rcx,[rip+0x67e]        # 0x140003d20
   1400036a2:	call   QWORD PTR [rip+0x1d10]        # 0x1400053b8
   1400036a8:	xor    eax,eax
   1400036aa:	add    rsp,0x28
   1400036ae:	ret    
   1400036af:	int3   
   1400036b0:	int3   
   1400036b1:	int3   
   1400036b2:	int3   
   1400036b3:	int3   
   1400036b4:	int3   
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	sub    rsp,0x38
   1400036c4:	mov    eax,DWORD PTR [rip+0x4996]        # 0x140008060
   1400036ca:	lea    r8,[rip+0x4977]        # 0x140008048
   1400036d1:	mov    r9d,DWORD PTR [rip+0x4984]        # 0x14000805c
   1400036d8:	lea    rdx,[rip+0x4961]        # 0x140008040
   1400036df:	mov    DWORD PTR [rip+0x496f],eax        # 0x140008054
   1400036e5:	lea    rcx,[rip+0x494c]        # 0x140008038
   1400036ec:	lea    rax,[rip+0x4961]        # 0x140008054
   1400036f3:	mov    QWORD PTR [rsp+0x20],rax
   1400036f8:	call   QWORD PTR [rip+0x1ce2]        # 0x1400053e0
   1400036fe:	mov    DWORD PTR [rip+0x4938],eax        # 0x14000803c
   140003704:	add    rsp,0x38
   140003708:	ret    
   140003709:	int3   
   14000370a:	int3   
   14000370b:	int3   
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	mov    QWORD PTR [rsp+0x8],rbx
   140003715:	mov    QWORD PTR [rsp+0x10],rsi
   14000371a:	mov    QWORD PTR [rsp+0x18],rdi
   14000371f:	push   r12
   140003721:	push   r14
   140003723:	push   r15
   140003725:	sub    rsp,0xb0
   14000372c:	xor    r15d,r15d
   14000372f:	mov    DWORD PTR [rsp+0x20],r15d
   140003734:	lea    rcx,[rsp+0x40]
   140003739:	call   QWORD PTR [rip+0x1b19]        # 0x140005258
   14000373f:	nop
   140003740:	mov    rax,QWORD PTR gs:0x30
   140003749:	mov    rbx,QWORD PTR [rax+0x8]
   14000374d:	mov    r14d,r15d
   140003750:	xor    eax,eax
   140003752:	lock cmpxchg QWORD PTR [rip+0x4f8d],rbx        # 0x1400086e8
   14000375b:	je     0x140003779
   14000375d:	cmp    rax,rbx
   140003760:	jne    0x14000376c
   140003762:	mov    edi,0x1
   140003767:	mov    r14d,edi
   14000376a:	jmp    0x14000377e
   14000376c:	mov    ecx,0x3e8
   140003771:	call   QWORD PTR [rip+0x1b91]        # 0x140005308
   140003777:	jmp    0x140003750
   140003779:	mov    edi,0x1
   14000377e:	mov    eax,DWORD PTR [rip+0x4f6c]        # 0x1400086f0
   140003784:	cmp    eax,edi
   140003786:	jne    0x140003796
   140003788:	mov    esi,0x1f
   14000378d:	mov    ecx,esi
   14000378f:	call   0x140003b54
   140003794:	jmp    0x140003807
   140003796:	mov    eax,DWORD PTR [rip+0x4f54]        # 0x1400086f0
   14000379c:	test   eax,eax
   14000379e:	jne    0x1400037fc
   1400037a0:	mov    DWORD PTR [rip+0x4f4a],edi        # 0x1400086f0
   1400037a6:	lea    r12,[rip+0x1cc3]        # 0x140005470
   1400037ad:	lea    rbx,[rip+0x1ca4]        # 0x140005458
   1400037b4:	mov    QWORD PTR [rsp+0x30],rbx
   1400037b9:	mov    eax,r15d
   1400037bc:	mov    DWORD PTR [rsp+0x24],eax
   1400037c0:	cmp    rbx,r12
   1400037c3:	jae    0x1400037ee
   1400037c5:	test   eax,eax
   1400037c7:	jne    0x1400037f2
   1400037c9:	mov    rsi,QWORD PTR [rbx]
   1400037cc:	test   rsi,rsi
   1400037cf:	je     0x1400037e3
   1400037d1:	mov    rcx,rsi
   1400037d4:	mov    rax,QWORD PTR [rip+0x1c4d]        # 0x140005428
   1400037db:	call   rax
   1400037dd:	call   rsi
   1400037df:	mov    DWORD PTR [rsp+0x24],eax
   1400037e3:	add    rbx,0x8
   1400037e7:	mov    QWORD PTR [rsp+0x30],rbx
   1400037ec:	jmp    0x1400037c0
   1400037ee:	test   eax,eax
   1400037f0:	je     0x140003802
   1400037f2:	mov    eax,0xff
   1400037f7:	jmp    0x140003963
   1400037fc:	mov    DWORD PTR [rip+0x4832],edi        # 0x140008034
   140003802:	mov    esi,0x1f
   140003807:	mov    eax,DWORD PTR [rip+0x4ee3]        # 0x1400086f0
   14000380d:	cmp    eax,edi
   14000380f:	jne    0x14000382e
   140003811:	lea    rdx,[rip+0x1c38]        # 0x140005450
   140003818:	lea    rcx,[rip+0x1c19]        # 0x140005438
   14000381f:	call   0x140003d2a
   140003824:	mov    DWORD PTR [rip+0x4ec2],0x2        # 0x1400086f0
   14000382e:	test   r14d,r14d
   140003831:	jne    0x14000383d
   140003833:	mov    rax,r15
   140003836:	xchg   QWORD PTR [rip+0x4eab],rax        # 0x1400086e8
   14000383d:	cmp    QWORD PTR [rip+0x4eb4],r15        # 0x1400086f8
   140003844:	je     0x140003874
   140003846:	lea    rcx,[rip+0x4eab]        # 0x1400086f8
   14000384d:	call   0x140003bb0
   140003852:	test   eax,eax
   140003854:	je     0x140003874
   140003856:	mov    rbx,QWORD PTR [rip+0x4e9b]        # 0x1400086f8
   14000385d:	mov    rcx,rbx
   140003860:	mov    rax,QWORD PTR [rip+0x1bc1]        # 0x140005428
   140003867:	call   rax
   140003869:	xor    r8d,r8d
   14000386c:	lea    edx,[r8+0x2]
   140003870:	xor    ecx,ecx
   140003872:	call   rbx
   140003874:	mov    rax,QWORD PTR [rip+0x1b25]        # 0x1400053a0
   14000387b:	mov    rdx,QWORD PTR [rax]
   14000387e:	test   rdx,rdx
   140003881:	jne    0x14000388d
   140003883:	mov    eax,0xff
   140003888:	jmp    0x140003963
   14000388d:	mov    QWORD PTR [rsp+0x28],rdx
   140003892:	mov    ecx,DWORD PTR [rsp+0x20]
   140003896:	cmp    WORD PTR [rdx],0x20
   14000389a:	ja     0x140003914
   14000389c:	cmp    WORD PTR [rdx],r15w
   1400038a0:	je     0x1400038a6
   1400038a2:	test   ecx,ecx
   1400038a4:	jne    0x140003914
   1400038a6:	movzx  eax,WORD PTR [rdx]
   1400038a9:	sub    ax,di
   1400038ac:	cmp    ax,si
   1400038af:	ja     0x1400038bc
   1400038b1:	add    rdx,0x2
   1400038b5:	mov    QWORD PTR [rsp+0x28],rdx
   1400038ba:	jmp    0x1400038a6
   1400038bc:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400038c0:	movzx  eax,WORD PTR [rsp+0x80]
   1400038c8:	mov    r9d,0xa
   1400038ce:	and    cl,dil
   1400038d1:	cmovne r9d,eax
   1400038d5:	mov    r8,rdx
   1400038d8:	xor    edx,edx
   1400038da:	lea    rcx,[rip+0xffffffffffffc71f]        # 0x140000000
   1400038e1:	call   0x140001198
   1400038e6:	mov    DWORD PTR [rip+0x4744],eax        # 0x140008030
   1400038ec:	cmp    DWORD PTR [rip+0x475d],r15d        # 0x140008050
   1400038f3:	jne    0x1400038fd
   1400038f5:	mov    ecx,eax
   1400038f7:	call   QWORD PTR [rip+0x1ad3]        # 0x1400053d0
   1400038fd:	cmp    DWORD PTR [rip+0x4730],r15d        # 0x140008034
   140003904:	jne    0x140003912
   140003906:	call   QWORD PTR [rip+0x1ab4]        # 0x1400053c0
   14000390c:	mov    eax,DWORD PTR [rip+0x471e]        # 0x140008030
   140003912:	jmp    0x140003963
   140003914:	cmp    WORD PTR [rdx],0x22
   140003918:	jne    0x140003928
   14000391a:	mov    eax,r15d
   14000391d:	test   ecx,ecx
   14000391f:	sete   al
   140003922:	mov    ecx,eax
   140003924:	mov    DWORD PTR [rsp+0x20],eax
   140003928:	add    rdx,0x2
   14000392c:	mov    QWORD PTR [rsp+0x28],rdx
   140003931:	jmp    0x140003896
   140003936:	mov    DWORD PTR [rip+0x46f4],eax        # 0x140008030
   14000393c:	cmp    DWORD PTR [rip+0x470d],0x0        # 0x140008050
   140003943:	jne    0x14000394e
   140003945:	mov    ecx,eax
   140003947:	call   QWORD PTR [rip+0x1a7b]        # 0x1400053c8
   14000394d:	int3   
   14000394e:	cmp    DWORD PTR [rip+0x46df],0x0        # 0x140008034
   140003955:	jne    0x140003963
   140003957:	call   QWORD PTR [rip+0x1a63]        # 0x1400053c0
   14000395d:	mov    eax,DWORD PTR [rip+0x46cd]        # 0x140008030
   140003963:	lea    r11,[rsp+0xb0]
   14000396b:	mov    rbx,QWORD PTR [r11+0x20]
   14000396f:	mov    rsi,QWORD PTR [r11+0x28]
   140003973:	mov    rdi,QWORD PTR [r11+0x30]
   140003977:	mov    rsp,r11
   14000397a:	pop    r15
   14000397c:	pop    r14
   14000397e:	pop    r12
   140003980:	ret    
   140003981:	int3   
   140003982:	int3   
   140003983:	int3   
   140003984:	int3   
   140003985:	int3   
   140003986:	int3   
   140003987:	int3   
   140003988:	int3   
   140003989:	int3   
   14000398a:	int3   
   14000398b:	int3   
   14000398c:	int3   
   14000398d:	int3   
   14000398e:	int3   
   14000398f:	int3   
   140003990:	sub    rsp,0x28
   140003994:	call   0x140003c44
   140003999:	add    rsp,0x28
   14000399d:	jmp    0x140003710
   1400039a2:	int3   
   1400039a3:	int3   
   1400039a4:	int3   
   1400039a5:	int3   
   1400039a6:	int3   
   1400039a7:	int3   
   1400039a8:	int3   
   1400039a9:	int3   
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	int3   
   1400039b1:	int3   
   1400039b2:	int3   
   1400039b3:	int3   
   1400039b4:	int3   
   1400039b5:	int3   
   1400039b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400039c0:	cmp    rcx,QWORD PTR [rip+0x4641]        # 0x140008008
   1400039c7:	jne    0x1400039d9
   1400039c9:	rol    rcx,0x10
   1400039cd:	test   cx,0xffff
   1400039d2:	jne    0x1400039d5
   1400039d4:	ret    
   1400039d5:	ror    rcx,0x10
   1400039d9:	jmp    0x140003da0
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	int3   
   1400039e1:	int3   
   1400039e2:	int3   
   1400039e3:	int3   
   1400039e4:	sub    rsp,0x38
   1400039e8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400039f1:	call   0x14000359c
   1400039f6:	nop
   1400039f7:	jmp    0x1400039fe
   1400039f9:	mov    rax,QWORD PTR [rsp+0x50]
   1400039fe:	add    rsp,0x38
   140003a02:	ret    
   140003a03:	int3   
   140003a04:	int3   
   140003a05:	int3   
   140003a06:	int3   
   140003a07:	int3   
   140003a08:	int3   
   140003a09:	int3   
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	jmp    0x1400039e4
   140003a11:	int3   
   140003a12:	int3   
   140003a13:	int3   
   140003a14:	int3   
   140003a15:	int3   
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	jmp    QWORD PTR [rip+0x194a]        # 0x140005368
   140003a1e:	int3   
   140003a1f:	int3   
   140003a20:	int3   
   140003a21:	int3   
   140003a22:	int3   
   140003a23:	int3   
   140003a24:	jmp    QWORD PTR [rip+0x1946]        # 0x140005370
   140003a2a:	int3   
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	jmp    QWORD PTR [rip+0x194a]        # 0x140005380
   140003a36:	int3   
   140003a37:	int3   
   140003a38:	int3   
   140003a39:	int3   
   140003a3a:	int3   
   140003a3b:	int3   
   140003a3c:	int3   
   140003a3d:	int3   
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	sub    rsp,0x28
   140003a44:	mov    rax,QWORD PTR [rcx]
   140003a47:	cmp    DWORD PTR [rax],0xe06d7363
   140003a4d:	jne    0x140003a72
   140003a4f:	cmp    DWORD PTR [rax+0x18],0x4
   140003a53:	jne    0x140003a72
   140003a55:	mov    ecx,DWORD PTR [rax+0x20]
   140003a58:	lea    eax,[rcx-0x19930520]
   140003a5e:	cmp    eax,0x2
   140003a61:	jbe    0x140003a6b
   140003a63:	cmp    ecx,0x1994000
   140003a69:	jne    0x140003a72
   140003a6b:	call   QWORD PTR [rip+0x18df]        # 0x140005350
   140003a71:	int3   
   140003a72:	xor    eax,eax
   140003a74:	add    rsp,0x28
   140003a78:	ret    
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	sub    rsp,0x28
   140003a84:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140003a40
   140003a8b:	call   QWORD PTR [rip+0x175f]        # 0x1400051f0
   140003a91:	xor    eax,eax
   140003a93:	add    rsp,0x28
   140003a97:	ret    
   140003a98:	int3   
   140003a99:	int3   
   140003a9a:	int3   
   140003a9b:	int3   
   140003a9c:	int3   
   140003a9d:	int3   
   140003a9e:	jmp    QWORD PTR [rip+0x18e4]        # 0x140005388
   140003aa4:	int3   
   140003aa5:	int3   
   140003aa6:	int3   
   140003aa7:	int3   
   140003aa8:	int3   
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	sub    rsp,0x18
   140003ab0:	xor    edx,edx
   140003ab2:	lea    rax,[rcx-0x1]
   140003ab6:	cmp    rax,0xfffffffffffffffd
   140003aba:	ja     0x140003af8
   140003abc:	mov    eax,0x5a4d
   140003ac1:	cmp    WORD PTR [rcx],ax
   140003ac4:	jne    0x140003af0
   140003ac6:	cmp    DWORD PTR [rcx+0x3c],edx
   140003ac9:	jl     0x140003af0
   140003acb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140003ad2:	jae    0x140003af0
   140003ad4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140003ad8:	add    rax,rcx
   140003adb:	mov    QWORD PTR [rsp],rax
   140003adf:	cmp    DWORD PTR [rax],0x4550
   140003ae5:	cmovne rax,rdx
   140003ae9:	mov    rdx,rax
   140003aec:	mov    QWORD PTR [rsp],rax
   140003af0:	jmp    0x140003af8
   140003af2:	xor    edx,edx
   140003af4:	mov    QWORD PTR [rsp],rdx
   140003af8:	mov    rax,rdx
   140003afb:	add    rsp,0x18
   140003aff:	ret    
   140003b00:	int3   
   140003b01:	int3   
   140003b02:	int3   
   140003b03:	int3   
   140003b04:	int3   
   140003b05:	int3   
   140003b06:	int3   
   140003b07:	int3   
   140003b08:	rex push rbx
   140003b0a:	sub    rsp,0x20
   140003b0e:	mov    ebx,ecx
   140003b10:	xor    ecx,ecx
   140003b12:	call   QWORD PTR [rip+0x1720]        # 0x140005238
   140003b18:	test   rax,rax
   140003b1b:	je     0x140003b45
   140003b1d:	mov    rcx,rax
   140003b20:	call   0x140003aac
   140003b25:	test   rax,rax
   140003b28:	je     0x140003b45
   140003b2a:	mov    ecx,0x2
   140003b2f:	cmp    WORD PTR [rax+0x5c],cx
   140003b33:	jne    0x140003b39
   140003b35:	mov    eax,ecx
   140003b37:	jmp    0x140003b47
   140003b39:	cmp    WORD PTR [rax+0x5c],0x3
   140003b3e:	mov    eax,0x1
   140003b43:	je     0x140003b47
   140003b45:	mov    eax,ebx
   140003b47:	add    rsp,0x20
   140003b4b:	pop    rbx
   140003b4c:	ret    
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	int3   
   140003b51:	int3   
   140003b52:	int3   
   140003b53:	int3   
   140003b54:	jmp    QWORD PTR [rip+0x183e]        # 0x140005398
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	movsxd r8,DWORD PTR [rcx+0x3c]
   140003b64:	xor    r9d,r9d
   140003b67:	add    r8,rcx
   140003b6a:	mov    r10,rdx
   140003b6d:	movzx  eax,WORD PTR [r8+0x14]
   140003b72:	movzx  r11d,WORD PTR [r8+0x6]
   140003b77:	add    rax,0x18
   140003b7b:	add    rax,r8
   140003b7e:	test   r11d,r11d
   140003b81:	je     0x140003ba1
   140003b83:	mov    edx,DWORD PTR [rax+0xc]
   140003b86:	cmp    r10,rdx
   140003b89:	jb     0x140003b95
   140003b8b:	mov    ecx,DWORD PTR [rax+0x8]
   140003b8e:	add    ecx,edx
   140003b90:	cmp    r10,rcx
   140003b93:	jb     0x140003ba3
   140003b95:	inc    r9d
   140003b98:	add    rax,0x28
   140003b9c:	cmp    r9d,r11d
   140003b9f:	jb     0x140003b83
   140003ba1:	xor    eax,eax
   140003ba3:	ret    
   140003ba4:	int3   
   140003ba5:	int3   
   140003ba6:	int3   
   140003ba7:	int3   
   140003ba8:	int3   
   140003ba9:	int3   
   140003baa:	int3   
   140003bab:	int3   
   140003bac:	int3   
   140003bad:	int3   
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140003bb5:	push   rdi
   140003bb6:	sub    rsp,0x20
   140003bba:	mov    rbx,rcx
   140003bbd:	lea    rdi,[rip+0xffffffffffffc43c]        # 0x140000000
   140003bc4:	mov    rcx,rdi
   140003bc7:	call   0x140003c10
   140003bcc:	test   eax,eax
   140003bce:	je     0x140003bf2
   140003bd0:	sub    rbx,rdi
   140003bd3:	mov    rdx,rbx
   140003bd6:	mov    rcx,rdi
   140003bd9:	call   0x140003b60
   140003bde:	test   rax,rax
   140003be1:	je     0x140003bf2
   140003be3:	mov    eax,DWORD PTR [rax+0x24]
   140003be6:	shr    eax,0x1f
   140003be9:	not    eax
   140003beb:	and    eax,0x1
   140003bee:	jmp    0x140003bf2
   140003bf0:	xor    eax,eax
   140003bf2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bf7:	add    rsp,0x20
   140003bfb:	pop    rdi
   140003bfc:	ret    
   140003bfd:	int3   
   140003bfe:	int3   
   140003bff:	int3   
   140003c00:	int3   
   140003c01:	int3   
   140003c02:	int3   
   140003c03:	int3   
   140003c04:	int3   
   140003c05:	int3   
   140003c06:	int3   
   140003c07:	int3   
   140003c08:	int3   
   140003c09:	int3   
   140003c0a:	int3   
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	mov    rax,rcx
   140003c13:	mov    ecx,0x5a4d
   140003c18:	cmp    WORD PTR [rax],cx
   140003c1b:	je     0x140003c20
   140003c1d:	xor    eax,eax
   140003c1f:	ret    
   140003c20:	movsxd rcx,DWORD PTR [rax+0x3c]
   140003c24:	add    rcx,rax
   140003c27:	xor    eax,eax
   140003c29:	cmp    DWORD PTR [rcx],0x4550
   140003c2f:	jne    0x140003c3d
   140003c31:	mov    edx,0x20b
   140003c36:	cmp    WORD PTR [rcx+0x18],dx
   140003c3a:	sete   al
   140003c3d:	ret    
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	int3   
   140003c41:	int3   
   140003c42:	int3   
   140003c43:	int3   
   140003c44:	mov    QWORD PTR [rsp+0x20],rbx
   140003c49:	push   rbp
   140003c4a:	mov    rbp,rsp
   140003c4d:	sub    rsp,0x20
   140003c51:	and    QWORD PTR [rbp+0x18],0x0
   140003c56:	movabs rbx,0x2b992ddfa232
   140003c60:	mov    rax,QWORD PTR [rip+0x43a1]        # 0x140008008
   140003c67:	cmp    rax,rbx
   140003c6a:	jne    0x140003cff
   140003c70:	lea    rcx,[rbp+0x18]
   140003c74:	call   QWORD PTR [rip+0x16a6]        # 0x140005320
   140003c7a:	mov    rax,QWORD PTR [rbp+0x18]
   140003c7e:	mov    QWORD PTR [rbp+0x10],rax
   140003c82:	call   QWORD PTR [rip+0x15e0]        # 0x140005268
   140003c88:	mov    eax,eax
   140003c8a:	xor    QWORD PTR [rbp+0x10],rax
   140003c8e:	call   QWORD PTR [rip+0x15dc]        # 0x140005270
   140003c94:	mov    eax,eax
   140003c96:	xor    QWORD PTR [rbp+0x10],rax
   140003c9a:	call   QWORD PTR [rip+0x1678]        # 0x140005318
   140003ca0:	mov    eax,eax
   140003ca2:	shl    rax,0x18
   140003ca6:	xor    QWORD PTR [rbp+0x10],rax
   140003caa:	call   QWORD PTR [rip+0x1668]        # 0x140005318
   140003cb0:	mov    eax,eax
   140003cb2:	lea    rcx,[rbp+0x10]
   140003cb6:	xor    rax,QWORD PTR [rbp+0x10]
   140003cba:	xor    rax,rcx
   140003cbd:	lea    rcx,[rbp+0x20]
   140003cc1:	mov    QWORD PTR [rbp+0x10],rax
   140003cc5:	call   QWORD PTR [rip+0x15bd]        # 0x140005288
   140003ccb:	mov    eax,DWORD PTR [rbp+0x20]
   140003cce:	movabs rcx,0xffffffffffff
   140003cd8:	shl    rax,0x20
   140003cdc:	xor    rax,QWORD PTR [rbp+0x20]
   140003ce0:	xor    rax,QWORD PTR [rbp+0x10]
   140003ce4:	and    rax,rcx
   140003ce7:	movabs rcx,0x2b992ddfa233
   140003cf1:	cmp    rax,rbx
   140003cf4:	cmove  rax,rcx
   140003cf8:	mov    QWORD PTR [rip+0x4309],rax        # 0x140008008
   140003cff:	mov    rbx,QWORD PTR [rsp+0x48]
   140003d04:	not    rax
   140003d07:	mov    QWORD PTR [rip+0x4302],rax        # 0x140008010
   140003d0e:	add    rsp,0x20
   140003d12:	pop    rbp
   140003d13:	ret    
   140003d14:	int3   
   140003d15:	int3   
   140003d16:	int3   
   140003d17:	int3   
   140003d18:	int3   
   140003d19:	int3   
   140003d1a:	int3   
   140003d1b:	int3   
   140003d1c:	int3   
   140003d1d:	int3   
   140003d1e:	int3   
   140003d1f:	int3   
   140003d20:	xor    eax,eax
   140003d22:	ret    
   140003d23:	int3   
   140003d24:	int3   
   140003d25:	int3   
   140003d26:	int3   
   140003d27:	int3   
   140003d28:	int3   
   140003d29:	int3   
   140003d2a:	jmp    QWORD PTR [rip+0x1680]        # 0x1400053b0
   140003d30:	int3   
   140003d31:	int3   
   140003d32:	int3   
   140003d33:	int3   
   140003d34:	int3   
   140003d35:	int3   
   140003d36:	jmp    QWORD PTR [rip+0x166c]        # 0x1400053a8
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	int3   
   140003d41:	int3   
   140003d42:	int3   
   140003d43:	int3   
   140003d44:	int3   
   140003d45:	int3   
   140003d46:	int3   
   140003d47:	int3   
   140003d48:	int3   
   140003d49:	int3   
   140003d4a:	int3   
   140003d4b:	int3   
   140003d4c:	int3   
   140003d4d:	int3   
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	ret    0x0
   140003d53:	int3   
   140003d54:	int3   
   140003d55:	int3   
   140003d56:	int3   
   140003d57:	int3   
   140003d58:	int3   
   140003d59:	int3   
   140003d5a:	int3   
   140003d5b:	int3   
   140003d5c:	rex push rbx
   140003d5e:	sub    rsp,0x20
   140003d62:	mov    rbx,rcx
   140003d65:	xor    ecx,ecx
   140003d67:	call   QWORD PTR [rip+0x1483]        # 0x1400051f0
   140003d6d:	mov    rcx,rbx
   140003d70:	call   QWORD PTR [rip+0x1482]        # 0x1400051f8
   140003d76:	call   QWORD PTR [rip+0x14fc]        # 0x140005278
   140003d7c:	mov    rcx,rax
   140003d7f:	mov    edx,0xc0000409
   140003d84:	add    rsp,0x20
   140003d88:	pop    rbx
   140003d89:	rex.W jmp QWORD PTR [rip+0x14d0]        # 0x140005260
   140003d90:	int3   
   140003d91:	int3   
   140003d92:	int3   
   140003d93:	int3   
   140003d94:	int3   
   140003d95:	int3   
   140003d96:	int3   
   140003d97:	int3   
   140003d98:	int3   
   140003d99:	int3   
   140003d9a:	int3   
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	mov    QWORD PTR [rsp+0x8],rcx
   140003da5:	sub    rsp,0x88
   140003dac:	lea    rcx,[rip+0x435d]        # 0x140008110
   140003db3:	call   QWORD PTR [rip+0x1527]        # 0x1400052e0
   140003db9:	mov    rax,QWORD PTR [rip+0x4448]        # 0x140008208
   140003dc0:	mov    QWORD PTR [rsp+0x48],rax
   140003dc5:	xor    r8d,r8d
   140003dc8:	lea    rdx,[rsp+0x50]
   140003dcd:	mov    rcx,QWORD PTR [rsp+0x48]
   140003dd2:	call   QWORD PTR [rip+0x14f8]        # 0x1400052d0
   140003dd8:	mov    QWORD PTR [rsp+0x40],rax
   140003ddd:	cmp    QWORD PTR [rsp+0x40],0x0
   140003de3:	je     0x140003e27
   140003de5:	mov    QWORD PTR [rsp+0x38],0x0
   140003dee:	lea    rax,[rsp+0x58]
   140003df3:	mov    QWORD PTR [rsp+0x30],rax
   140003df8:	lea    rax,[rsp+0x60]
   140003dfd:	mov    QWORD PTR [rsp+0x28],rax
   140003e02:	lea    rax,[rip+0x4307]        # 0x140008110
   140003e09:	mov    QWORD PTR [rsp+0x20],rax
   140003e0e:	mov    r9,QWORD PTR [rsp+0x40]
   140003e13:	mov    r8,QWORD PTR [rsp+0x48]
   140003e18:	mov    rdx,QWORD PTR [rsp+0x50]
   140003e1d:	xor    ecx,ecx
   140003e1f:	call   QWORD PTR [rip+0x14b3]        # 0x1400052d8
   140003e25:	jmp    0x140003e4a
   140003e27:	mov    rax,QWORD PTR [rip+0x437a]        # 0x1400081a8
   140003e2e:	mov    rax,QWORD PTR [rax]
   140003e31:	mov    QWORD PTR [rip+0x43d0],rax        # 0x140008208
   140003e38:	mov    rax,QWORD PTR [rip+0x4369]        # 0x1400081a8
   140003e3f:	add    rax,0x8
   140003e43:	mov    QWORD PTR [rip+0x435e],rax        # 0x1400081a8
   140003e4a:	mov    rax,QWORD PTR [rip+0x43b7]        # 0x140008208
   140003e51:	mov    QWORD PTR [rip+0x4228],rax        # 0x140008080
   140003e58:	mov    rax,QWORD PTR [rsp+0x90]
   140003e60:	mov    QWORD PTR [rip+0x4329],rax        # 0x140008190
   140003e67:	mov    DWORD PTR [rip+0x41ff],0xc0000409        # 0x140008070
   140003e71:	mov    DWORD PTR [rip+0x41f9],0x1        # 0x140008074
   140003e7b:	mov    DWORD PTR [rip+0x4203],0x3        # 0x140008088
   140003e85:	mov    eax,0x8
   140003e8a:	imul   rax,rax,0x0
   140003e8e:	lea    rcx,[rip+0x41fb]        # 0x140008090
   140003e95:	mov    QWORD PTR [rcx+rax*1],0x2
   140003e9d:	mov    eax,0x8
   140003ea2:	imul   rax,rax,0x1
   140003ea6:	lea    rcx,[rip+0x41e3]        # 0x140008090
   140003ead:	mov    rdx,QWORD PTR [rip+0x4154]        # 0x140008008
   140003eb4:	mov    QWORD PTR [rcx+rax*1],rdx
   140003eb8:	mov    eax,0x8
   140003ebd:	imul   rax,rax,0x2
   140003ec1:	lea    rcx,[rip+0x41c8]        # 0x140008090
   140003ec8:	mov    rdx,QWORD PTR [rip+0x4141]        # 0x140008010
   140003ecf:	mov    QWORD PTR [rcx+rax*1],rdx
   140003ed3:	mov    eax,0x8
   140003ed8:	imul   rax,rax,0x0
   140003edc:	mov    rcx,QWORD PTR [rip+0x4125]        # 0x140008008
   140003ee3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140003ee8:	mov    eax,0x8
   140003eed:	imul   rax,rax,0x1
   140003ef1:	mov    rcx,QWORD PTR [rip+0x4118]        # 0x140008010
   140003ef8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140003efd:	lea    rcx,[rip+0x15f4]        # 0x1400054f8
   140003f04:	call   0x140003d5c
   140003f09:	add    rsp,0x88
   140003f10:	ret    
   140003f11:	int3   
   140003f12:	int3   
   140003f13:	int3   
   140003f14:	int3   
   140003f15:	int3   
   140003f16:	int3   
   140003f17:	int3   
   140003f18:	jmp    QWORD PTR [rip+0x1422]        # 0x140005340
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	int3   
   140003f21:	int3   
   140003f22:	int3   
   140003f23:	int3   
   140003f24:	int3   
   140003f25:	int3   
   140003f26:	int3   
   140003f27:	int3   
   140003f28:	int3   
   140003f29:	int3   
   140003f2a:	int3   
   140003f2b:	int3   
   140003f2c:	int3   
   140003f2d:	int3   
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	lea    rax,[rip+0x60d9]        # 0x14000a010
   140003f37:	jmp    0x140003f50
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	int3   
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	mov    QWORD PTR [rsp+0x8],rcx
   140003f55:	mov    QWORD PTR [rsp+0x10],rdx
   140003f5a:	mov    QWORD PTR [rsp+0x18],r8
   140003f5f:	mov    QWORD PTR [rsp+0x20],r9
   140003f64:	sub    rsp,0x68
   140003f68:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140003f6e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140003f74:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140003f7a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140003f80:	mov    rdx,rax
   140003f83:	lea    rcx,[rip+0x21b6]        # 0x140006140
   140003f8a:	call   0x140003540
   140003f8f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140003f95:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140003f9b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140003fa1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140003fa7:	mov    rcx,QWORD PTR [rsp+0x70]
   140003fac:	mov    rdx,QWORD PTR [rsp+0x78]
   140003fb1:	mov    r8,QWORD PTR [rsp+0x80]
   140003fb9:	mov    r9,QWORD PTR [rsp+0x88]
   140003fc1:	add    rsp,0x68
   140003fc5:	jmp    0x140003fc7
   140003fc7:	jmp    rax
   140003fc9:	int3   
   140003fca:	int3   
   140003fcb:	int3   
   140003fcc:	int3   
   140003fcd:	int3   
   140003fce:	int3   
   140003fcf:	int3   
   140003fd0:	lea    rax,[rip+0x6029]        # 0x14000a000
   140003fd7:	jmp    0x140003ff0
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	int3   
   140003fe1:	int3   
   140003fe2:	int3   
   140003fe3:	int3   
   140003fe4:	int3   
   140003fe5:	int3   
   140003fe6:	int3   
   140003fe7:	int3   
   140003fe8:	int3   
   140003fe9:	int3   
   140003fea:	int3   
   140003feb:	int3   
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	mov    QWORD PTR [rsp+0x8],rcx
   140003ff5:	mov    QWORD PTR [rsp+0x10],rdx
   140003ffa:	mov    QWORD PTR [rsp+0x18],r8
   140003fff:	mov    QWORD PTR [rsp+0x20],r9
   140004004:	sub    rsp,0x68
   140004008:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000400e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140004014:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000401a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140004020:	mov    rdx,rax
   140004023:	lea    rcx,[rip+0x2136]        # 0x140006160
   14000402a:	call   0x140003540
   14000402f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140004035:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000403b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140004041:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140004047:	mov    rcx,QWORD PTR [rsp+0x70]
   14000404c:	mov    rdx,QWORD PTR [rsp+0x78]
   140004051:	mov    r8,QWORD PTR [rsp+0x80]
   140004059:	mov    r9,QWORD PTR [rsp+0x88]
   140004061:	add    rsp,0x68
   140004065:	jmp    0x140004067
   140004067:	jmp    rax
   140004069:	int3   
   14000406a:	int3   
   14000406b:	int3   
   14000406c:	int3   
   14000406d:	int3   
   14000406e:	int3   
   14000406f:	int3   
   140004070:	jmp    QWORD PTR [rip+0x115a]        # 0x1400051d0
   140004076:	int3   
   140004077:	int3   
   140004078:	int3   
   140004079:	int3   
   14000407a:	int3   
   14000407b:	int3   
   14000407c:	sub    rsp,0x28
   140004080:	mov    r8,QWORD PTR [r9+0x38]
   140004084:	mov    rcx,rdx
   140004087:	mov    rdx,r9
   14000408a:	call   0x1400040a0
   14000408f:	mov    eax,0x1
   140004094:	add    rsp,0x28
   140004098:	ret    
   140004099:	int3   
   14000409a:	int3   
   14000409b:	int3   
   14000409c:	int3   
   14000409d:	int3   
   14000409e:	int3   
   14000409f:	int3   
   1400040a0:	rex push rbx
   1400040a2:	sub    rsp,0x20
   1400040a6:	mov    r11d,DWORD PTR [r8]
   1400040a9:	mov    rbx,rdx
   1400040ac:	and    r11d,0xfffffff8
   1400040b0:	mov    r9,rcx
   1400040b3:	test   BYTE PTR [r8],0x4
   1400040b7:	mov    r10,rcx
   1400040ba:	je     0x1400040cf
   1400040bc:	mov    eax,DWORD PTR [r8+0x8]
   1400040c0:	movsxd r10,DWORD PTR [r8+0x4]
   1400040c4:	neg    eax
   1400040c6:	add    r10,rcx
   1400040c9:	movsxd rcx,eax
   1400040cc:	and    r10,rcx
   1400040cf:	movsxd rax,r11d
   1400040d2:	mov    rdx,QWORD PTR [rax+r10*1]
   1400040d6:	mov    rax,QWORD PTR [rbx+0x10]
   1400040da:	mov    ecx,DWORD PTR [rax+0x8]
   1400040dd:	add    rcx,QWORD PTR [rbx+0x8]
   1400040e1:	test   BYTE PTR [rcx+0x3],0xf
   1400040e5:	je     0x1400040f3
   1400040e7:	movzx  eax,BYTE PTR [rcx+0x3]
   1400040eb:	and    eax,0xfffffff0
   1400040ee:	cdqe   
   1400040f0:	add    r9,rax
   1400040f3:	xor    r9,rdx
   1400040f6:	mov    rcx,r9
   1400040f9:	add    rsp,0x20
   1400040fd:	pop    rbx
   1400040fe:	jmp    0x1400039c0
   140004103:	int3   
   140004104:	int3   
   140004105:	int3   
   140004106:	int3   
   140004107:	int3   
   140004108:	int3   
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	int3   
   140004111:	int3   
   140004112:	int3   
   140004113:	int3   
   140004114:	int3   
   140004115:	int3   
   140004116:	jmp    QWORD PTR [rip+0x1244]        # 0x140005360
   14000411c:	int3   
   14000411d:	int3   
   14000411e:	int3   
   14000411f:	int3   
   140004120:	int3   
   140004121:	int3   
   140004122:	jmp    QWORD PTR [rip+0x1268]        # 0x140005390
   140004128:	int3   
   140004129:	int3   
   14000412a:	int3   
   14000412b:	int3   
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	int3   
   140004131:	int3   
   140004132:	int3   
   140004133:	int3   
   140004134:	int3   
   140004135:	int3   
   140004136:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004140:	jmp    rax
   140004142:	int3   
   140004143:	int3   
   140004144:	int3   
   140004145:	int3   
   140004146:	int3   
   140004147:	int3   
   140004148:	int3   
   140004149:	int3   
   14000414a:	int3   
   14000414b:	int3   
   14000414c:	int3   
   14000414d:	int3   
   14000414e:	int3   
   14000414f:	int3   
   140004150:	int3   
   140004151:	int3   
   140004152:	int3   
   140004153:	int3   
   140004154:	int3   
   140004155:	int3   
   140004156:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004160:	sub    rsp,0x10
   140004164:	mov    QWORD PTR [rsp],r10
   140004168:	mov    QWORD PTR [rsp+0x8],r11
   14000416d:	xor    r11,r11
   140004170:	lea    r10,[rsp+0x18]
   140004175:	sub    r10,rax
   140004178:	cmovb  r10,r11
   14000417c:	mov    r11,QWORD PTR gs:0x10
   140004185:	cmp    r10,r11
   140004188:	jae    0x14000419f
   14000418a:	and    r10w,0xf000
   140004190:	lea    r11,[r11-0x1000]
   140004197:	test   BYTE PTR [r11],r11b
   14000419a:	cmp    r10,r11
   14000419d:	jne    0x140004190
   14000419f:	mov    r10,QWORD PTR [rsp]
   1400041a3:	mov    r11,QWORD PTR [rsp+0x8]
   1400041a8:	add    rsp,0x10
   1400041ac:	ret    
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	int3   
   1400041b1:	int3   
   1400041b2:	int3   
   1400041b3:	int3   
   1400041b4:	int3   
   1400041b5:	int3   
   1400041b6:	lea    rcx,[rdx+0x58]
   1400041bd:	jmp    0x140003438
   1400041c2:	lea    rcx,[rdx+0x48]
   1400041c9:	jmp    0x140003438
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	int3   
   1400041d1:	int3   
   1400041d2:	int3   
   1400041d3:	int3   
   1400041d4:	rex push rbp
   1400041d6:	sub    rsp,0x20
   1400041da:	mov    rbp,rdx
   1400041dd:	mov    rax,QWORD PTR [rcx]
   1400041e0:	mov    rdx,rcx
   1400041e3:	mov    ecx,DWORD PTR [rax]
   1400041e5:	call   0x140003a9e
   1400041ea:	nop
   1400041eb:	add    rsp,0x20
   1400041ef:	pop    rbp
   1400041f0:	ret    
   1400041f1:	int3   
   1400041f2:	int3   
   1400041f3:	int3   
   1400041f4:	int3   
   1400041f5:	int3   
   1400041f6:	int3   
   1400041f7:	int3   
   1400041f8:	mov    QWORD PTR [rsp+0x10],rdx
   1400041fd:	push   rbp
   1400041fe:	sub    rsp,0x20
   140004202:	mov    rbp,rdx
   140004205:	and    QWORD PTR [rbp+0x50],0x0
   14000420a:	lea    rax,[rip+0xfffffffffffff7e8]        # 0x1400039f9
   140004211:	add    rsp,0x20
   140004215:	pop    rbp
   140004216:	ret    
   140004217:	int3   
   140004218:	int3   
   140004219:	int3   
   14000421a:	int3   
   14000421b:	int3   
   14000421c:	int3   
   14000421d:	int3   
   14000421e:	int3   
   14000421f:	int3   
   140004220:	rex push rbp
   140004222:	sub    rsp,0x20
   140004226:	mov    rbp,rdx
   140004229:	mov    rax,QWORD PTR [rcx]
   14000422c:	xor    ecx,ecx
   14000422e:	cmp    DWORD PTR [rax],0xc0000005
   140004234:	sete   cl
   140004237:	mov    eax,ecx
   140004239:	add    rsp,0x20
   14000423d:	pop    rbp
   14000423e:	ret    
   14000423f:	int3   

Disassembly of section .rdata:

0000000140005000 <.rdata>:
   140005000:	or     BYTE PTR [rax+0x0],ch
   140005003:	add    BYTE PTR [rax],al
   140005005:	add    BYTE PTR [rax],al
   140005007:	add    BYTE PTR [rax],bl
   140005009:	push   0x0
   14000500e:	add    BYTE PTR [rax],al
   140005010:	cs push 0x0
   140005016:	add    BYTE PTR [rax],al
   140005018:	ds push 0x0
   14000501e:	add    BYTE PTR [rax],al
   140005020:	rex.WR push 0x0
   140005026:	add    BYTE PTR [rax],al
   140005028:	pop    rsp
   140005029:	push   0x0
	...
   140005036:	add    BYTE PTR [rax],al
   140005038:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005039:	jo     0x14000503b
	...
   140005047:	add    BYTE PTR [rax+0x71],al
   14000504d:	add    BYTE PTR [rax],al
   14000504f:	add    ah,cl
   140005051:	jo     0x140005053
   140005053:	add    BYTE PTR [rax],al
   140005055:	add    BYTE PTR [rax],al
   140005057:	add    al,ch
   140005059:	jo     0x14000505b
   14000505b:	add    BYTE PTR [rax],al
   14000505d:	add    BYTE PTR [rax],al
   14000505f:	add    BYTE PTR [rax],bl
   140005061:	jno    0x140005063
   140005063:	add    BYTE PTR [rax],al
   140005065:	add    BYTE PTR [rax],al
   140005067:	add    BYTE PTR [rax],bh
   140005069:	jno    0x14000506b
   14000506b:	add    BYTE PTR [rax],al
   14000506d:	add    BYTE PTR [rax],al
   14000506f:	add    BYTE PTR [rcx+rsi*2+0x0],ah
	...
   14000507f:	add    dh,cl
   140005081:	push   0x0
   140005083:	add    BYTE PTR [rax],al
   140005085:	add    BYTE PTR [rax],al
   140005087:	add    BYTE PTR [rsi+0x71],dh
   14000508d:	add    BYTE PTR [rax],al
   14000508f:	add    BYTE PTR [rsi+0x68],dh
   140005092:	add    BYTE PTR [rax],al
   140005094:	add    BYTE PTR [rax],al
   140005096:	add    BYTE PTR [rax],al
   140005098:	test   BYTE PTR [rax+0x0],ch
   14000509b:	add    BYTE PTR [rax],al
   14000509d:	add    BYTE PTR [rax],al
   14000509f:	add    BYTE PTR [rdx+0x68],dl
   1400050a5:	add    BYTE PTR [rax],al
   1400050a7:	add    BYTE PTR [rsi+0x68],bl
   1400050ad:	add    BYTE PTR [rax],al
   1400050af:	add    BYTE PTR [rax+rbp*2+0x0],ch
   1400050b6:	add    BYTE PTR [rax],al
   1400050b8:	ret    0x68
   1400050bb:	add    BYTE PTR [rax],al
   1400050bd:	add    BYTE PTR [rax],al
   1400050bf:	add    dh,cl
   1400050c1:	push   0x0
   1400050c6:	add    BYTE PTR [rax],al
   1400050c8:	fsubr  QWORD PTR [rax+0x0]
   1400050cb:	add    BYTE PTR [rax],al
   1400050cd:	add    BYTE PTR [rax],al
   1400050cf:	add    al,dh
   1400050d1:	push   0x0
   1400050d6:	add    BYTE PTR [rax],al
   1400050d8:	add    ch,BYTE PTR [rcx+0x0]
   1400050db:	add    BYTE PTR [rax],al
   1400050dd:	add    BYTE PTR [rax],al
   1400050df:	add    BYTE PTR [rsi],dl
   1400050e1:	imul   eax,DWORD PTR [rax],0x0
   1400050e7:	add    BYTE PTR [rsi],ah
   1400050e9:	imul   eax,DWORD PTR [rax],0x0
   1400050ef:	add    BYTE PTR [rcx+rbp*2],dh
   1400050f2:	add    BYTE PTR [rax],al
   1400050f4:	add    BYTE PTR [rax],al
   1400050f6:	add    BYTE PTR [rax],al
   1400050f8:	imul   rax,QWORD PTR [rax],0x0
   1400050ff:	add    BYTE PTR [rcx+rbp*2+0x0],bl
   140005103:	add    BYTE PTR [rax],al
   140005105:	add    BYTE PTR [rax],al
   140005107:	add    BYTE PTR [rax+0x6a],bh
   14000510d:	add    BYTE PTR [rax],al
   14000510f:	add    BYTE PTR [rsi+0x6a],ah
   140005115:	add    BYTE PTR [rax],al
   140005117:	add    ah,ah
   140005119:	or     DWORD PTR [rax],eax
   14000511b:	add    BYTE PTR [rax],al
   14000511d:	add    BYTE PTR [rax],al
   14000511f:	adc    BYTE PTR [rdx+0x6a],0x0
   140005126:	add    BYTE PTR [rax],al
   140005128:	js     0x140005194
   14000512a:	add    BYTE PTR [rax],al
   14000512c:	add    BYTE PTR [rax],al
   14000512e:	add    BYTE PTR [rax],al
   140005130:	fs push 0x0
   140005133:	add    BYTE PTR [rax],al
   140005135:	add    BYTE PTR [rax],al
   140005137:	add    BYTE PTR [rax+0x6a],bl
   14000513a:	add    BYTE PTR [rax],al
   14000513c:	add    BYTE PTR [rax],al
   14000513e:	add    BYTE PTR [rax],al
   140005140:	rex.WX push 0x0
   140005143:	add    BYTE PTR [rax],al
   140005145:	add    BYTE PTR [rax],al
   140005147:	add    BYTE PTR [rdx+rbp*2],bh
   14000514a:	add    BYTE PTR [rax],al
   14000514c:	add    BYTE PTR [rax],al
   14000514e:	add    BYTE PTR [rax],al
   140005150:	jo     0x1400051bb
   140005152:	add    BYTE PTR [rax],al
   140005154:	add    BYTE PTR [rax],al
   140005156:	add    BYTE PTR [rax],al
   140005158:	sub    al,0x6a
   14000515a:	add    BYTE PTR [rax],al
   14000515c:	add    BYTE PTR [rax],al
   14000515e:	add    BYTE PTR [rax],al
   140005160:	(bad)  
   140005161:	push   0x0
   140005163:	add    BYTE PTR [rax],al
   140005165:	add    BYTE PTR [rax],al
   140005167:	add    BYTE PTR [rdx],al
   140005169:	push   0x0
   14000516b:	add    BYTE PTR [rax],al
   14000516d:	add    BYTE PTR [rax],al
   14000516f:	add    ah,ah
   140005171:	imul   eax,DWORD PTR [rax],0x0
   140005177:	add    dl,dl
   140005179:	imul   eax,DWORD PTR [rax],0x0
   14000517f:	add    al,al
   140005181:	imul   eax,DWORD PTR [rax],0x0
   140005187:	add    BYTE PTR [rsi+0x69],ch
   14000518d:	add    BYTE PTR [rax],al
   14000518f:	add    BYTE PTR [rsi+0x69],bl
   140005195:	add    BYTE PTR [rax],al
   140005197:	add    BYTE PTR [rax+0x69],dl
   14000519d:	add    BYTE PTR [rax],al
   14000519f:	add    BYTE PTR [rsi+0x69],bh
	...
   1400051ae:	add    BYTE PTR [rax],al
   1400051b0:	rex.WRX ins BYTE PTR es:[rdi],dx
   1400051b2:	add    BYTE PTR [rax],al
   1400051b4:	add    BYTE PTR [rax],al
   1400051b6:	add    BYTE PTR [rax],al
   1400051b8:	cmp    al,0x6c
   1400051ba:	add    BYTE PTR [rax],al
   1400051bc:	add    BYTE PTR [rax],al
   1400051be:	add    BYTE PTR [rax],al
   1400051c0:	or     al,0x6c
	...
   1400051ce:	add    BYTE PTR [rax],al
   1400051d0:	rex.WX jb 0x1400051d3
   1400051d3:	add    BYTE PTR [rax],al
   1400051d5:	add    BYTE PTR [rax],al
   1400051d7:	add    BYTE PTR [rdx],dh
   1400051d9:	jb     0x1400051db
	...
   1400051e7:	add    BYTE PTR [rdx+0x6c],ah
   1400051ea:	add    BYTE PTR [rax],al
   1400051ec:	add    BYTE PTR [rax],al
   1400051ee:	add    BYTE PTR [rax],al
   1400051f0:	mov    WORD PTR [rax+rax*1+0x0],gs
   1400051f4:	add    BYTE PTR [rax],al
   1400051f6:	add    BYTE PTR [rax],al
   1400051f8:	jo     0x140005267
	...
   140005206:	add    BYTE PTR [rax],al
   140005208:	imul   BYTE PTR [rbx+0x0]
	...
   140005217:	add    BYTE PTR [rax],dh
   140005219:	ins    BYTE PTR es:[rdi],dx
	...
   140005226:	add    BYTE PTR [rax],al
   140005228:	shr    BYTE PTR [rdi+0x0],1
	...
   140005237:	add    BYTE PTR [rdx+0x6c],ch
	...
   140005245:	add    BYTE PTR [rax],al
   140005247:	add    BYTE PTR [rsi],bl
   140005249:	ins    BYTE PTR es:[rdi],dx
	...
   140005256:	add    BYTE PTR [rax],al
   140005258:	jp     0x1400052c6
   14000525a:	add    BYTE PTR [rax],al
   14000525c:	add    BYTE PTR [rax],al
   14000525e:	add    BYTE PTR [rax],al
   140005260:	movabs al,ds:0xd80000000000006d
   140005269:	ins    BYTE PTR es:[rdi],dx
   14000526a:	add    BYTE PTR [rax],al
   14000526c:	add    BYTE PTR [rax],al
   14000526e:	add    BYTE PTR [rax],al
   140005270:	out    dx,al
   140005271:	ins    BYTE PTR es:[rdi],dx
   140005272:	add    BYTE PTR [rax],al
   140005274:	add    BYTE PTR [rax],al
   140005276:	add    BYTE PTR [rax],al
   140005278:	mov    WORD PTR [rbp+0x0],gs
	...
   140005287:	add    BYTE PTR [rsi+0x6c],bh
	...
   140005295:	add    BYTE PTR [rax],al
   140005297:	add    BYTE PTR [rdx],cl
   140005299:	jb     0x14000529b
   14000529b:	add    BYTE PTR [rax],al
   14000529d:	add    BYTE PTR [rax],al
   14000529f:	add    ah,bh
   1400052a1:	jno    0x1400052a3
   1400052a3:	add    BYTE PTR [rax],al
   1400052a5:	add    BYTE PTR [rax],al
   1400052a7:	add    ah,ch
   1400052a9:	jno    0x1400052ab
   1400052ab:	add    BYTE PTR [rax],al
   1400052ad:	add    BYTE PTR [rax],al
   1400052af:	add    dl,bl
   1400052b1:	jno    0x1400052b3
	...
   1400052bf:	add    BYTE PTR [rdx+rsi*2],bl
	...
   1400052ce:	add    BYTE PTR [rax],al
   1400052d0:	rex.X ins DWORD PTR es:[rdi],dx
   1400052d2:	add    BYTE PTR [rax],al
   1400052d4:	add    BYTE PTR [rax],al
   1400052d6:	add    BYTE PTR [rax],al
   1400052d8:	pop    rsp
   1400052d9:	ins    DWORD PTR es:[rdi],dx
   1400052da:	add    BYTE PTR [rax],al
   1400052dc:	add    BYTE PTR [rax],al
   1400052de:	add    BYTE PTR [rax],al
   1400052e0:	cs ins DWORD PTR es:[rdi],dx
	...
   1400052ee:	add    BYTE PTR [rax],al
   1400052f0:	outs   dx,WORD PTR ds:[rsi]
   1400052f2:	add    BYTE PTR [rax],al
   1400052f4:	add    BYTE PTR [rax],al
   1400052f6:	add    BYTE PTR [rax],al
   1400052f8:	jb     0x140005369
	...
   140005306:	add    BYTE PTR [rax],al
   140005308:	jb     0x140005376
	...
   140005316:	add    BYTE PTR [rax],al
   140005318:	(bad)  
   140005319:	ins    DWORD PTR es:[rdi],dx
   14000531a:	add    BYTE PTR [rax],al
   14000531c:	add    BYTE PTR [rax],al
   14000531e:	add    BYTE PTR [rax],al
   140005320:	add    al,0x6d
	...
   14000532e:	add    BYTE PTR [rax],al
   140005330:	push   rax
   140005331:	outs   dx,DWORD PTR ds:[rsi]
	...
   14000533e:	add    BYTE PTR [rax],al
   140005340:	shr    BYTE PTR [rbx+0x0],0x0
   140005344:	add    BYTE PTR [rax],al
   140005346:	add    BYTE PTR [rax],al
   140005348:	mov    ah,0x6b
   14000534a:	add    BYTE PTR [rax],al
   14000534c:	add    BYTE PTR [rax],al
   14000534e:	add    BYTE PTR [rax],al
   140005350:	loop   0x1400053bd
   140005352:	add    BYTE PTR [rax],al
   140005354:	add    BYTE PTR [rax],al
   140005356:	add    BYTE PTR [rax],al
   140005358:	int3   
   140005359:	jno    0x14000535b
   14000535b:	add    BYTE PTR [rax],al
   14000535d:	add    BYTE PTR [rax],al
   14000535f:	add    al,dl
   140005361:	jb     0x140005363
   140005363:	add    BYTE PTR [rax],al
   140005365:	add    BYTE PTR [rax],al
   140005367:	add    al,dh
   140005369:	push   0x0
   14000536b:	add    BYTE PTR [rax],al
   14000536d:	add    BYTE PTR [rax],al
   14000536f:	add    al,bh
   140005371:	push   0x0
   140005373:	add    BYTE PTR [rax],al
   140005375:	add    BYTE PTR [rax],al
   140005377:	add    BYTE PTR [rdx+0x6b],ch
   14000537d:	add    BYTE PTR [rax],al
   14000537f:	add    BYTE PTR [rdx],al
   140005381:	imul   eax,DWORD PTR [rax],0x0
   140005384:	add    BYTE PTR [rax],al
   140005386:	add    BYTE PTR [rax],al
   140005388:	(bad)  
   140005389:	imul   eax,DWORD PTR [rax],0x0
   14000538c:	add    BYTE PTR [rax],al
   14000538e:	add    BYTE PTR [rax],al
   140005390:	fidiv  DWORD PTR [rdx+0x0]
   140005393:	add    BYTE PTR [rax],al
   140005395:	add    BYTE PTR [rax],al
   140005397:	add    BYTE PTR [rbx+rbp*2],bl
   14000539a:	add    BYTE PTR [rax],al
   14000539c:	add    BYTE PTR [rax],al
   14000539e:	add    BYTE PTR [rax],al
   1400053a0:	movabs al,ds:0x880000000000006b
   1400053a9:	imul   eax,DWORD PTR [rax],0x0
   1400053ac:	add    BYTE PTR [rax],al
   1400053ae:	add    BYTE PTR [rax],al
   1400053b0:	jl     0x14000541d
   1400053b2:	add    BYTE PTR [rax],al
   1400053b4:	add    BYTE PTR [rax],al
   1400053b6:	add    BYTE PTR [rax],al
   1400053b8:	push   0x6b
   1400053bd:	add    BYTE PTR [rax],al
   1400053bf:	add    BYTE PTR [rsi+0x6b],bl
   1400053c2:	add    BYTE PTR [rax],al
   1400053c4:	add    BYTE PTR [rax],al
   1400053c6:	add    BYTE PTR [rax],al
   1400053c8:	push   rsi
   1400053c9:	imul   eax,DWORD PTR [rax],0x0
   1400053cc:	add    BYTE PTR [rax],al
   1400053ce:	add    BYTE PTR [rax],al
   1400053d0:	rex.WRX imul r8,QWORD PTR [rax],0x0
   1400053d4:	add    BYTE PTR [rax],al
   1400053d6:	add    BYTE PTR [rax],al
   1400053d8:	cmp    al,0x6b
   1400053da:	add    BYTE PTR [rax],al
   1400053dc:	add    BYTE PTR [rax],al
   1400053de:	add    BYTE PTR [rax],al
   1400053e0:	sub    ch,BYTE PTR [rbx+0x0]
	...
   1400053ef:	add    BYTE PTR [rsi+0x70],ah
   1400053f2:	add    BYTE PTR [rax],al
   1400053f4:	add    BYTE PTR [rax],al
   1400053f6:	add    BYTE PTR [rax],al
   1400053f8:	rex.WR jo 0x1400053fb
   1400053fb:	add    BYTE PTR [rax],al
   1400053fd:	add    BYTE PTR [rax],al
   1400053ff:	add    BYTE PTR [rdx],dh
   140005401:	jo     0x140005403
   140005403:	add    BYTE PTR [rax],al
   140005405:	add    BYTE PTR [rax],al
   140005407:	add    BYTE PTR [rax],bl
   140005409:	jo     0x14000540b
   14000540b:	add    BYTE PTR [rax],al
   14000540d:	add    BYTE PTR [rax],al
   14000540f:	add    BYTE PTR [rsi],al
   140005411:	jo     0x140005413
   140005413:	add    BYTE PTR [rax],al
   140005415:	add    BYTE PTR [rax],al
   140005417:	add    BYTE PTR [rax+0x70],al
	...
   140005425:	add    BYTE PTR [rax],al
   140005427:	add    BYTE PTR [rax+0x3d],dl
   14000542a:	add    BYTE PTR [rax+0x1],al
   14000542d:	add    BYTE PTR [rax],al
   14000542f:	add    BYTE PTR [rax+0x41],al
   140005432:	add    BYTE PTR [rax+0x1],al
	...
   14000543d:	add    BYTE PTR [rax],al
   14000543f:	add    al,al
   140005441:	add    BYTE PTR ss:[rax+0x1],al
   140005445:	add    BYTE PTR [rax],al
   140005447:	add    BYTE PTR [rax],al
   140005449:	adc    BYTE PTR [rax],al
   14000544b:	rex add DWORD PTR [rax],eax
	...
   14000545e:	add    BYTE PTR [rax],al
   140005460:	loopne 0x140005497
   140005462:	add    BYTE PTR [rax+0x1],al
   140005465:	add    BYTE PTR [rax],al
   140005467:	add    BYTE PTR [rax+0x140003a],al
	...
   140005479:	adc    BYTE PTR [rax],al
   14000547b:	add    BYTE PTR [rax],dl
   14000547d:	adc    DWORD PTR [rax],eax
   14000547f:	add    BYTE PTR [rax+0x19],al
   140005482:	add    BYTE PTR [rax],al
   140005484:	lock sbb eax,DWORD PTR [rax]
   140005487:	add    BYTE PTR [rax],ah
   140005489:	(bad)  
   14000548a:	add    BYTE PTR [rax],al
   14000548c:	rex xor eax,0x35e00000
   140005492:	add    BYTE PTR [rax],al
   140005494:	shl    BYTE PTR [rsi],0x0
   140005497:	add    BYTE PTR [rax+0x40000039],dl
   14000549d:	cmp    al,BYTE PTR [rax]
   14000549f:	add    BYTE PTR [rax+0x2000003a],al
   1400054a5:	cmp    eax,0x3d500000
   1400054aa:	add    BYTE PTR [rax],al
   1400054ac:	movabs al,ds:0x5000003f3000003d
   1400054b5:	(bad)  
   1400054b6:	add    BYTE PTR [rax],al
   1400054b8:	sar    BYTE PTR [rdi],1
   1400054ba:	add    BYTE PTR [rax],al
   1400054bc:	lock (bad) 
   1400054be:	add    BYTE PTR [rax],al
   1400054c0:	jo     0x140005502
	...
   1400054ce:	add    BYTE PTR [rax],al
   1400054d0:	and    al,BYTE PTR [rip+0x21993]        # 0x140026e69
   1400054d6:	add    BYTE PTR [rax],al
   1400054d8:	xor    al,0x60
   1400054da:	add    BYTE PTR [rax],al
   1400054dc:	add    DWORD PTR [rax],eax
   1400054de:	add    BYTE PTR [rax],al
   1400054e0:	rex.R (bad) 
   1400054e2:	add    BYTE PTR [rax],al
   1400054e4:	(bad)  
   1400054e5:	add    BYTE PTR [rax],al
   1400054e7:	add    BYTE PTR [rax+0x60],dh
   1400054ea:	add    BYTE PTR [rax],al
   1400054ec:	and    BYTE PTR [rax],al
   1400054ee:	add    BYTE PTR [rax],al
   1400054f0:	add    BYTE PTR [rax],al
   1400054f2:	add    BYTE PTR [rax],al
   1400054f4:	add    DWORD PTR [rax],eax
   1400054f6:	add    BYTE PTR [rax],al
   1400054f8:	jo     0x14000547a
   1400054fa:	add    BYTE PTR [rax+0x1],al
   1400054fd:	add    BYTE PTR [rax],al
   1400054ff:	add    BYTE PTR [rax],dl
   140005501:	add    DWORD PTR [rax],0x140
	...
   14000550f:	add    BYTE PTR [rbp+0x78],ah
   140005512:	je     0x140005541
   140005514:	ins    DWORD PTR es:[rdi],dx
   140005515:	jae    0x140005544
   140005517:	ja     0x140005582
   140005519:	outs   dx,BYTE PTR ds:[rsi]
   14000551a:	sub    eax,0x6e72656b
   14000551f:	gs ins BYTE PTR es:[rdi],dx
   140005521:	xor    esi,DWORD PTR [rdx]
   140005523:	sub    eax,0x646e6977
   140005528:	outs   dx,DWORD PTR ds:[rsi]
   140005529:	ja     0x14000559e
   14000552b:	gs jb  0x1400055a0
   14000552e:	outs   dx,DWORD PTR ds:[rsi]
   14000552f:	jb     0x1400055a3
   140005531:	gs jo  0x1400055a3
   140005534:	jb     0x1400055aa
   140005536:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000553d:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac648374
   140005543:	ins    BYTE PTR es:[rdi],dx
	...
   140005550:	rex.XB
   140005551:	rex.WRXB
   140005552:	rex.WRB
   140005553:	rex.XB push r12
   140005555:	xor    r14,QWORD PTR [rdx]
   140005558:	cs fs ins BYTE PTR es:[rdi],dx
   14000555b:	ins    BYTE PTR es:[rdi],dx
   14000555c:	add    BYTE PTR [rax],al
   14000555e:	add    BYTE PTR [rax],al
   140005560:	rex.WRX push rbp
   140005562:	rex.WR
   140005563:	rex.WR add BYTE PTR [rax],r8b
   140005566:	add    BYTE PTR [rax],al
   140005568:	rex.WRB add BYTE PTR [r8+rax*1+0x4d],r8b
   14000556d:	add    BYTE PTR [rdi+0x0],bl
   140005570:	push   rdi
   140005571:	add    BYTE PTR [rsi+0x0],ch
   140005574:	add    BYTE PTR fs:[rbx+0x0],al
   140005578:	ins    BYTE PTR es:[rdi],dx
   140005579:	add    BYTE PTR [rcx+0x0],ah
   14000557c:	jae    0x14000557e
   14000557e:	jae    0x140005580
	...
   140005588:	sub    eax,0x6f007400
   14000558d:	add    BYTE PTR [rbp+0x0],dh
   140005590:	movsxd eax,DWORD PTR [rax]
   140005592:	push   0x0
   140005597:	add    BYTE PTR [rip+0x65007000],ch        # 0x1a500c59d
   14000559d:	add    BYTE PTR [rsi+0x0],ch
   1400055a0:	add    BYTE PTR [rax],al
   1400055a2:	add    BYTE PTR [rax],al
   1400055a4:	and    BYTE PTR [rax],al
	...
   1400055ae:	add    BYTE PTR [rax],al
   1400055b0:	push   rsp
   1400055b1:	add    BYTE PTR [rcx+0x0],ah
   1400055b4:	(bad)  
   1400055b5:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400055b9:	add    BYTE PTR [rax+rax*1+0x50],dh
   1400055bd:	add    BYTE PTR [rbx+0x0],al
   1400055c0:	add    BYTE PTR [rcx+0x0],r13b
   1400055c4:	add    BYTE PTR [ecx+0x0],ch
   1400055c8:	je     0x1400055ca
   1400055ca:	imul   eax,DWORD PTR [rax],0x65007a
   1400055d0:	jb     0x1400055d2
   1400055d2:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400055d6:	jo     0x1400055d8
   1400055d8:	jo     0x1400055da
   1400055da:	imul   eax,DWORD PTR [rax],0x67006e
   1400055e0:	rex.XB add BYTE PTR [r8+0x0],bpl
   1400055e4:	(bad)  
   1400055e5:	add    BYTE PTR [rsi+0x0],ch
   1400055e8:	add    BYTE PTR [ebp+0x0],ah
   1400055ec:	add    BYTE PTR fs:[rax],al
   1400055ef:	add    BYTE PTR [rdx+0x65],dl
   1400055f2:	jae    0x140005669
   1400055f4:	ins    DWORD PTR es:[rdi],dx
   1400055f5:	gs push rbp
   1400055f7:	rex.WB push r14
   1400055f9:	imul   esi,DWORD PTR [rbx+0x69],0x696c6962
   140005600:	je     0x14000567b
   140005602:	add    BYTE PTR [rax],al
   140005604:	add    BYTE PTR [rax],al
   140005606:	add    BYTE PTR [rax],al
   140005608:	push   rbx
   140005609:	push   0x6e57776f
   14000560e:	sub    BYTE PTR fs:[rsi+0x41],al
   140005612:	rex.WR push rbx
   140005614:	sub    DWORD PTR [r8],r8d
   140005617:	add    BYTE PTR [rbp-0x2233c1b3],dl
   14000561d:	and    eax,DWORD PTR [rsi+0x4c]
   140005620:	mov    es,esp
   140005622:	sub    BYTE PTR [rax+0x7129260d],bh
	...
   140005630:	xor    BYTE PTR [rdx+0x23],bl
   140005633:	movabs eax,ds:0xa7ef954a08577225
   14000563c:	ins    BYTE PTR es:[rdi],dx
   14000563d:	xor    al,0x9f
   14000563f:	and    eax,DWORD PTR [rsi+rbp*2-0xd]
   140005643:	(bad)  
   140005644:	out    dx,eax
   140005645:	pop    rsi
   140005646:	(bad)  
   140005647:	rex.WR cmp rbx,0xffffffffebfaa780
   14000564e:	shl    eax,0x8f
   140005651:	push   0xffffffffffffff8a
   140005653:	pop    rcx
   140005654:	rcl    BYTE PTR [rdx-0x60],0x4b
   140005658:	xchg   ebx,eax
   140005659:	scas   eax,DWORD PTR es:[rdi]
   14000565a:	scas   eax,DWORD PTR es:[rdi]
   14000565b:	xor    eax,0x61a51174
   140005660:	jne    0x140005601
   140005662:	(bad)  
   140005663:	mov    ch,0xe0
   140005665:	add    al,0x98
   140005667:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140005669:	out    dx,al
   14000566a:	ret    
   14000566b:	or     eax,0x11905abb
   140005670:	xor    bl,bl
   140005672:	pop    rdx
   140005673:	jae    0x140005630
   140005675:	(bad)  
   140005676:	mov    BYTE PTR [rdi-0x60],al
   140005679:	in     al,0xf
   14000567b:	xor    DWORD PTR [rax+rdx*4+0x5],esp
   14000567f:	pop    rbp
   140005680:	mov    edi,0xe76e0e07
   140005685:	scas   eax,DWORD PTR es:[rdi]
   140005686:	test   DWORD PTR [rdi+rax*4-0x2f],0x204664af
   14000568e:	test   BYTE PTR [rax],bl
   140005690:	(bad)
   140005693:	rex.XB sar r14d,cl
   140005696:	rol    DWORD PTR [rbp-0x75],1
   140005699:	jbe    0x14000570c
   14000569b:	shr    edx,cl
   14000569d:	jp     0x140005621
   14000569f:	popf   
   1400056a0:	push   rsi
   1400056a1:	sbb    ebp,DWORD PTR [rax-0x6cf6ca88]
   1400056a7:	rex.R mov edx,0x1a5400ae
   1400056ad:	mov    dl,BYTE PTR [rsi]
   1400056af:	(bad)  
   1400056b0:	sub    eax,0xf4730750
   1400056b5:	stc    
   1400056b6:	sbb    BYTE PTR [rsi-0x4d],cl
   1400056b9:	repnz sub al,0xe1
   1400056bc:	mov    cl,0xa3
   1400056be:	(bad)  
   1400056bf:	or     al,0x8b
   1400056c1:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400056c3:	ins    DWORD PTR es:[rdi],dx
   1400056c4:	rex.R push rdx
   1400056c6:	in     al,dx
   1400056c7:	xchg   r8d,eax
   1400056c9:	pop    rbx
   1400056ca:	xor    bl,al
   1400056cc:	(bad)  
   1400056cd:	mov    eax,0xefc40908
   1400056d2:	jg     0x14000565f
   1400056d4:	stos   BYTE PTR es:[rdi],al
   1400056d5:	xchg   esi,eax
   1400056d6:	dec    BYTE PTR [rbx-0x54]
   1400056d9:	mov    bl,BYTE PTR es:[rdi+0xb]
   1400056dd:	loopne 0x14000575a
   1400056df:	cmc    
   1400056e0:	cmp    bh,BYTE PTR [rbx-0x30]
   1400056e3:	test   al,0xf0
   1400056e5:	mov    esi,DWORD PTR [rax-0x47566ac0]
   1400056eb:	or     ch,BYTE PTR [rbx-0x49]
   1400056ee:	xchg   DWORD PTR [rdi+0xe932389],edi
   1400056f4:	ja     0x140005713
   1400056f6:	scas   eax,DWORD PTR es:[rdi]
   1400056f7:	rex.XB lods al,BYTE PTR ds:[rsi]
   1400056f9:	add    BYTE PTR [rbx-0x6b],bl
   1400056fc:	or     eax,0xb42d4b6d
   140005701:	and    edx,DWORD PTR [rcx+0xb882802]
   140005707:	mov    r10b,0x50
   14000570a:	movabs al,ds:0xdec5c7dce5956553
   140005713:	(bad)  
   140005714:	mov    edx,0x894906f6
   140005719:	rex.WRXB
   14000571a:	data16 (bad) 
   14000571c:	(bad)  
   14000571d:	cld    
   14000571e:	rex.RB ins BYTE PTR es:[rdi],dx
   140005720:	(bad)  
   140005721:	rex.WB xor cl,BYTE PTR [rip+0x41e413b2]        # 0x181e46ada
   140005728:	lods   al,BYTE PTR ds:[rsi]
   140005729:	out    0x7a,al
   14000572b:	jmp    0x17b2d9504
   140005730:	mov    bh,0x57
   140005732:	jle    0x1400057b3
   140005734:	(bad)  
   140005735:	mov    esi,0x56a34be1
   14000573a:	jp     0x1400056c0
   14000573c:	(bad)  
   14000573d:	(bad)  
   14000573e:	sbb    BYTE PTR [rbx+0x5d5d5e56],dl
   140005744:	test   eax,0x9f4c5b6b
   140005749:	mov    al,0x85
   14000574b:	sbb    al,0x91
   14000574d:	jno    0x14000579d
   14000574f:	push   rsi
   140005750:	sbb    BYTE PTR [rcx+0x7c3a6a84],0xb7
   140005757:	rex.RB stos BYTE PTR es:[rdi],al
   140005759:	(bad)  
   14000575a:	nop
   14000575b:	movabs ds:0x33c1df83890e9562,al
   140005764:	fucomi st,st(4)
   140005766:	lock rex.R mov ecx,0xa5d1db23
   14000576d:	mov    dl,0x13
   14000576f:	outs   dx,BYTE PTR ds:[rsi]
   140005770:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140005771:	int    0x29
   140005773:	push   rbx
   140005774:	pop    rbx
   140005775:	cli    
   140005776:	ror    BYTE PTR [rsi-0x45],cl
   140005779:	xor    al,BYTE PTR [rbx+0x44720146]
   14000577f:	sub    BYTE PTR [rdi-0x73ffd207],ch
   140005785:	fisttp QWORD PTR [rcx+0x49]
   140005788:	mov    edx,0x105ed646
   14000578d:	jge    0x1400057a9
   14000578f:	mov    cl,dl
   140005791:	mov    bh,0x32
   140005793:	popf   
   140005794:	adc    edx,DWORD PTR [rdx]
   140005796:	push   rsp
   140005797:	rex.WRXB mov r15b,0xe4
   14000579a:	leave  
   14000579b:	add    eax,0x387ae10e
   1400057a0:	mov    ecx,0x59e71caa
   1400057a5:	or     BYTE PTR [rip+0x7cdba24c],0x79        # 0x1bcdbf9f8
   1400057ac:	push   rsp
   1400057ad:	rex.RXB lea r8d,[r10+0x5c0b730a]
   1400057b4:	xchg   esp,eax
   1400057b5:	repz (bad) 
   1400057b7:	rex.WB test rax,0x34c43733
   1400057bd:	hlt    
   1400057be:	mov    bh,0xeb
   1400057c0:	mov    rdx,db2
   1400057c3:	sub    BYTE PTR [rsi],bl
   1400057c5:	xchg   DWORD PTR [rcx+0x4907864d],edx
   1400057cb:	xor    bh,BYTE PTR [rbp-0x21]
   1400057ce:	or     bl,BYTE PTR [rdi-0x7ca65f06]
   1400057d4:	rex.R (bad) 
   1400057d6:	out    0x4d,al
   1400057d8:	xchg   edx,eax
   1400057d9:	or     esi,0xf59c895a
   1400057df:	(bad)  
   1400057e0:	fld    QWORD PTR [rdx+0x46]
   1400057e3:	rex.WR sahf 
   1400057e5:	rex.RXB
   1400057e6:	data16 rex.WR mov spl,0x40
   1400057ea:	(bad)  
   1400057eb:	int    0x83
   1400057ed:	xchg   ebp,eax
   1400057ee:	pop    QWORD PTR [rax]
   1400057f0:	mov    bl,BYTE PTR [rdx-0x1a7131d3]
   1400057f6:	mov    edx,0x18fa9340
   1400057fb:	fwait
   1400057fc:	mov    bl,0x90
   1400057fe:	add    BYTE PTR [rsi-0x3c38b7f1],ch
   140005804:	cmp    DWORD PTR [rax-0x11],ebx
   140005807:	rex.RX movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140005809:	data16 fmul DWORD PTR [rax+0x1c]
   14000580d:	jp     0x14000580d
   14000580f:	shr    DWORD PTR [rdi-0x6215dd88],0xc5
   140005816:	hlt    
   140005817:	rex.WRX cdqe 
   140005819:	pop    rbx
   14000581a:	(bad)  
   14000581b:	mov    esi,0x3422df12
   140005820:	leave  
   140005821:	or     eax,0xcc5cb863
   140005826:	xor    ecx,DWORD PTR [rbp+rcx*4-0x53]
   14000582a:	mov    ah,0x7f
   14000582c:	(bad)  
   14000582d:	sub    ecx,DWORD PTR [rcx+rdi*2+0x15e2f8e6]
   140005834:	and    DWORD PTR [rbx-0x75],0x165a94e
   14000583b:	(bad)  
   14000583c:	jge    0x1400058bd
   14000583e:	retf   0xe438
   140005841:	sti    
   140005842:	data16 jo 0x140005883
   140005845:	rex.RXB jne 0x14000588e
   140005848:	pushf  
   140005849:	and    eax,0x9b822600
   14000584e:	rex (bad) 
   140005850:	(bad)  
   140005851:	pop    rbx
   140005852:	enter  0xe6bb,0xad
   140005856:	xchg   ebx,eax
   140005857:	mov    bl,0xbb
   14000585a:	fs (bad) 
   14000585c:	movabs eax,ds:0xcb039143d31a7ad3
   140005865:	js     0x140005803
   140005867:	rex.R test al,0xe7
   14000586a:	ror    DWORD PTR [eax-0x7dcd3c9c],1
   140005871:	(bad)  
   140005872:	je     0x1400058db
   140005874:	in     eax,0xe
   140005876:	(bad)  
   140005877:	rex.B movabs eax,ds:0x283d8fc09e3a272b
   140005881:	add    esi,DWORD PTR [rdx-0x10]
   140005884:	cmp    esp,DWORD PTR [rsi-0x71]
   140005887:	test   DWORD PTR [r14+0x3eae3195],esp
   14000588e:	int    0xfa
   140005890:	fisttp QWORD PTR [rcx+rsi*2-0x6af2535f]
   140005897:	rex movabs eax,ds:0xd2fb6b10cb597b81
   1400058a1:	je     0x1400058ad
   1400058a3:	and    edx,0x824e396e
   1400058a9:	pop    rsi
   1400058aa:	ins    DWORD PTR es:[rdi],dx
   1400058ab:	out    dx,eax
   1400058ac:	(bad)  
   1400058ad:	push   0xffffffffffffffff
   1400058af:	(bad)
   1400058b2:	rex.WX add rax,0x43474bea
   1400058b8:	mov    dh,BYTE PTR [rip+0x2533a564]        # 0x16533fe22
   1400058be:	rex.WX popf 
   1400058c0:	push   rsp
   1400058c1:	(bad)  
   1400058c2:	(bad)  
   1400058c3:	push   rbp
   1400058c4:	je     0x14000592f
   1400058c6:	ins    BYTE PTR es:[rdi],dx
   1400058c7:	jae    0x140005903
   1400058c9:	cmp    al,BYTE PTR [rdx+0x72]
   1400058cc:	outs   dx,DWORD PTR ds:[rsi]
   1400058cd:	(bad)  
   1400058ce:	movsxd esp,DWORD PTR fs:[rcx+0x73]
   1400058d2:	je     0x140005927
   1400058d4:	gs je  0x14000594b
   1400058d7:	imul   ebp,DWORD PTR [rsi+0x67],0x6e616843
   1400058de:	add    BYTE PTR gs:[eax],al
   1400058e2:	add    BYTE PTR [rax],al
   1400058e4:	add    BYTE PTR [rax],al
   1400058e6:	add    BYTE PTR [rax],al
   1400058e8:	enter  0x8f1b,0xda
   1400058ec:	jns    0x1400058b3
   1400058ee:	iret   
   1400058ef:	in     al,dx
   1400058f0:	adc    eax,0xe68a74b9
   1400058f6:	mov    al,0x6
   1400058f8:	rex.W
   1400058f9:	gs ins BYTE PTR es:[rdi],dx
   1400058fb:	jo     0x140005962
   1400058fd:	jb     0x140005972
   1400058ff:	cmp    bh,BYTE PTR [rdx]
   140005901:	push   rbx
   140005902:	outs   dx,BYTE PTR gs:[rsi]
   140005904:	fs rex.WRB
   140005906:	gs jae 0x14000597c
   140005909:	(bad)  
   14000590a:	addr32 gs push rsp
   14000590d:	imul   ebp,DWORD PTR [rbp+0x65],0x5774756f
   140005914:	add    BYTE PTR [rax],al
   140005916:	add    BYTE PTR [rax],al
   140005918:	jb     0x1400058c7
   14000591a:	(bad)  
   14000591b:	xor    DWORD PTR [rdx],esp
   14000591d:	cmp    esp,DWORD PTR [rsi]
   14000591f:	mov    dh,0xdc
   140005921:	sahf   
   140005922:	test   BYTE PTR [rdi],ah
   140005924:	sbb    DWORD PTR [rax+0x25d39d],esp
   14000592a:	add    BYTE PTR fs:[rip+0x73002500],ch        # 0x1b3007e31
	...
   14000593d:	add    BYTE PTR [rax],al
   14000593f:	add    BYTE PTR [rbx+0x0],dl
   140005942:	outs   dx,DWORD PTR ds:[rsi]
   140005943:	add    BYTE PTR [rsi+0x0],ah
   140005946:	je     0x140005948
   140005948:	ja     0x14000594a
   14000594a:	(bad)  
   14000594b:	add    BYTE PTR [rdx+0x0],dh
   14000594e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140005953:	add    BYTE PTR [rcx+0x0],ch
   140005956:	movsxd eax,DWORD PTR [rax]
   140005958:	jb     0x14000595a
   14000595a:	outs   dx,DWORD PTR ds:[rsi]
   14000595b:	add    BYTE PTR [rbx+0x0],dh
   14000595e:	outs   dx,DWORD PTR ds:[rsi]
   14000595f:	add    BYTE PTR [rsi+0x0],ah
   140005962:	je     0x140005964
   140005964:	pop    rsp
   140005965:	add    BYTE PTR [rdi+0x0],dl
   140005968:	imul   eax,DWORD PTR [rax],0x700073
   14000596e:	pop    rsp
   14000596f:	add    BYTE PTR [rax+0x0],dl
   140005972:	add    BYTE PTR gs:[rsi+0x0],ch
   140005976:	pop    rsp
   140005977:	add    BYTE PTR [rax+rax*1+0x69],al
   14000597b:	add    BYTE PTR [rdi+0x0],ah
   14000597e:	imul   eax,DWORD PTR [rax],0x6f006d
   140005984:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000598d:	add    BYTE PTR [rax],al
   14000598f:	add    BYTE PTR [rip+0x0],al        # 0x140005995
   140005995:	add    BYTE PTR [rax],al
   140005997:	add    BYTE PTR [rsi],al
   140005999:	add    BYTE PTR [rax],al
   14000599b:	add    BYTE PTR [rax],al
   14000599d:	add    BYTE PTR [rax],al
   14000599f:	add    BYTE PTR [rcx],al
   1400059a1:	add    BYTE PTR [rax],al
   1400059a3:	add    bh,bh
   1400059a5:	add    BYTE PTR [rax],al
   1400059a7:	add    BYTE PTR [rdx],al
   1400059a9:	add    BYTE PTR [rax],al
   1400059ab:	add    BYTE PTR [rcx],al
   1400059ad:	add    BYTE PTR [rax],al
   1400059af:	add    BYTE PTR [rbx],al
   1400059b1:	add    BYTE PTR [rax],al
   1400059b3:	add    BYTE PTR [rcx],al
   1400059b5:	add    BYTE PTR [rax],al
   1400059b7:	add    BYTE PTR [rax+rax*1],al
   1400059ba:	add    BYTE PTR [rax],al
   1400059bc:	add    DWORD PTR [rax],eax
   1400059be:	add    BYTE PTR [rax],al
   1400059c0:	and    al,BYTE PTR [rip+0x21993]        # 0x140027359
   1400059c6:	add    BYTE PTR [rax],al
   1400059c8:	jl     0x140005a29
	...
   1400059d2:	add    BYTE PTR [rax],al
   1400059d4:	add    eax,0x90000000
   1400059d9:	pop    rdi
   1400059da:	add    BYTE PTR [rax],al
   1400059dc:	add    BYTE PTR [rax],al
	...
   1400059f3:	add    BYTE PTR [rdx],ah
   1400059f5:	cmp    bl,BYTE PTR [rdi+0x55]
   1400059fb:	add    BYTE PTR [rdx],al
   1400059fd:	add    BYTE PTR [rax],al
   1400059ff:	add    BYTE PTR [rcx],ch
   140005a01:	add    BYTE PTR [rax],al
   140005a03:	add    al,dh
   140005a05:	pop    rdx
   140005a06:	add    BYTE PTR [rax],al
   140005a08:	lock rex.X add BYTE PTR [rax],al
   140005a0c:	add    BYTE PTR [rax],al
   140005a0e:	add    BYTE PTR [rax],al
   140005a10:	and    bh,BYTE PTR [rdx]
   140005a12:	lahf   
   140005a13:	push   rbp
   140005a14:	add    BYTE PTR [rax],al
   140005a16:	add    BYTE PTR [rax],al
   140005a18:	or     eax,0x80000000
   140005a1d:	add    al,BYTE PTR [rax]
   140005a1f:	add    BYTE PTR [rax],dh
   140005a21:	pop    rbx
   140005a22:	add    BYTE PTR [rax],al
   140005a24:	xor    BYTE PTR [rbx+0x0],al
	...
   140005a4f:	add    BYTE PTR [rax+0x0],ah
	...
   140005aa5:	add    BYTE PTR [rax],al
   140005aa7:	add    BYTE PTR [rax],cl
   140005aa9:	add    BYTE PTR [rax],0x40
   140005aac:	add    DWORD PTR [rax],eax
	...
   140005abe:	add    BYTE PTR [rax],al
   140005ac0:	sub    BYTE PTR [rax+rax*1+0x40],dl
   140005ac4:	add    DWORD PTR [rax],eax
   140005ac6:	add    BYTE PTR [rax],al
   140005ac8:	xor    BYTE PTR [rax+rax*1+0x40],dl
   140005acc:	add    DWORD PTR [rax],eax
   140005ace:	add    BYTE PTR [rax],al
   140005ad0:	js     0x140005b26
   140005ad2:	add    BYTE PTR [rax+0x1],al
   140005ad5:	add    BYTE PTR [rax],al
   140005ad7:	add    BYTE PTR [rbx],dl
	...
   140005ae1:	xor    eax,0x0
	...
   140005aee:	add    BYTE PTR [rax],al
   140005af0:	push   rdx
   140005af1:	push   rbx
   140005af2:	rex.R push rbx
   140005af4:	pop    rdi
   140005af5:	fcom   QWORD PTR [rbx+rdx*1+0x50]
   140005af9:	rex.R rol BYTE PTR [rax-0x5d],1
   140005afd:	ret    0x8687
   140005b00:	ins    BYTE PTR es:[rdi],dx
   140005b01:	and    eax,0x1fcb3
   140005b06:	add    BYTE PTR [rax],al
   140005b08:	rex.WRB jne 0x140005b77
   140005b0b:	je     0x140005b76
   140005b0d:	imul   r12d,DWORD PTR [rdi+0x69],0x2e6e6f4d
   140005b15:	jo     0x140005b7b
   140005b17:	(bad)  
	...
   140005b30:	rex.RXB
   140005b31:	rex.XB push r12
   140005b33:	rex.WR add BYTE PTR [rax],r10b
   140005b36:	add    BYTE PTR [rax],al
   140005b38:	(bad)  
   140005b39:	add    BYTE PTR [rax],al
   140005b3b:	add    BYTE PTR [rsi],ch
   140005b3d:	je     0x140005ba4
   140005b3f:	js     0x140005bb5
   140005b41:	and    al,0x64
   140005b43:	imul   eax,DWORD PTR [rax],0x20000000
   140005b49:	adc    BYTE PTR [rax],al
   140005b4b:	add    BYTE PTR [rax],cl
   140005b4d:	xor    DWORD PTR [rax],eax
   140005b4f:	add    BYTE PTR [rsi],ch
   140005b51:	je     0x140005bb8
   140005b53:	js     0x140005bc9
   140005b55:	and    al,0x6d
   140005b57:	outs   dx,BYTE PTR ds:[rsi]
   140005b58:	add    BYTE PTR [rax],al
   140005b5a:	add    BYTE PTR [rax],al
   140005b5c:	xor    BYTE PTR [rcx+0x0],al
   140005b5f:	add    BYTE PTR [rbp+0x0],bh
   140005b62:	add    BYTE PTR [rax],al
   140005b64:	cs je  0x140005bcc
   140005b67:	js     0x140005bdd
   140005b69:	and    al,0x6d
   140005b6b:	outs   dx,BYTE PTR ds:[rsi]
   140005b6c:	and    al,0x30
   140005b6e:	xor    BYTE PTR [rax],al
   140005b70:	mov    al,0x41
   140005b72:	add    BYTE PTR [rax],al
   140005b74:	nop
   140005b75:	add    BYTE PTR [rax],al
   140005b77:	add    BYTE PTR [rsi],ch
   140005b79:	je     0x140005be0
   140005b7b:	js     0x140005bf1
   140005b7d:	and    al,0x78
   140005b7f:	add    BYTE PTR [rax],al
   140005b81:	push   rax
   140005b82:	add    BYTE PTR [rax],al
   140005b84:	sub    BYTE PTR [rax+rax*1],al
   140005b87:	add    BYTE PTR [rsi],ch
   140005b89:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140005b91:	add    BYTE PTR [rax],al
   140005b93:	add    BYTE PTR [rax],ch
   140005b95:	push   rsp
   140005b96:	add    BYTE PTR [rax],al
   140005b98:	adc    BYTE PTR [rax],al
   140005b9a:	add    BYTE PTR [rax],al
   140005b9c:	xor    BYTE PTR cs:[rax],dh
   140005b9f:	movsxd esp,DWORD PTR [rsi+0x67]
   140005ba2:	add    BYTE PTR [rax],al
   140005ba4:	cmp    BYTE PTR [rax+rax*1+0x0],dl
   140005ba8:	or     BYTE PTR [rax],al
   140005baa:	add    BYTE PTR [rax],al
   140005bac:	cs rex.XB push r10
   140005baf:	push   rsp
   140005bb0:	and    al,0x58
   140005bb2:	rex.XB
   140005bb3:	add    BYTE PTR [r8],al
   140005bb6:	add    BYTE PTR [rax],al
   140005bb8:	rex push rsp
   140005bba:	add    BYTE PTR [rax],al
   140005bbc:	or     BYTE PTR [rax],al
   140005bbe:	add    BYTE PTR [rax],al
   140005bc0:	cs rex.XB push r10
   140005bc3:	push   rsp
   140005bc4:	and    al,0x58
   140005bc6:	rex.XB
   140005bc7:	rex.B
   140005bc8:	add    BYTE PTR [r8],al
   140005bcb:	add    BYTE PTR [rax+0x54],cl
   140005bce:	add    BYTE PTR [rax],al
   140005bd0:	or     BYTE PTR [rax],al
   140005bd2:	add    BYTE PTR [rax],al
   140005bd4:	cs rex.XB push r10
   140005bd7:	push   rsp
   140005bd8:	and    al,0x58
   140005bda:	rex.XB push r13
   140005bdc:	add    BYTE PTR [rax],al
   140005bde:	add    BYTE PTR [rax],al
   140005be0:	push   rax
   140005be1:	push   rsp
   140005be2:	add    BYTE PTR [rax],al
   140005be4:	or     BYTE PTR [rax],al
   140005be6:	add    BYTE PTR [rax],al
   140005be8:	cs rex.XB push r10
   140005beb:	push   rsp
   140005bec:	and    al,0x58
   140005bee:	rex.XB pop r10
   140005bf0:	add    BYTE PTR [rax],al
   140005bf2:	add    BYTE PTR [rax],al
   140005bf4:	pop    rax
   140005bf5:	push   rsp
   140005bf6:	add    BYTE PTR [rax],al
   140005bf8:	or     BYTE PTR [rax],al
   140005bfa:	add    BYTE PTR [rax],al
   140005bfc:	cs rex.XB push r10
   140005bff:	push   rsp
   140005c00:	and    al,0x58
   140005c02:	rex.WB
   140005c03:	add    BYTE PTR [r8],al
   140005c06:	add    BYTE PTR [rax],al
   140005c08:	(bad)  
   140005c09:	push   rsp
   140005c0a:	add    BYTE PTR [rax],al
   140005c0c:	or     BYTE PTR [rax],al
   140005c0e:	add    BYTE PTR [rax],al
   140005c10:	cs rex.XB push r10
   140005c13:	push   rsp
   140005c14:	and    al,0x58
   140005c16:	rex.WB
   140005c17:	rex.B
   140005c18:	add    BYTE PTR [r8],al
   140005c1b:	add    BYTE PTR [rax+0x54],ch
   140005c1e:	add    BYTE PTR [rax],al
   140005c20:	or     BYTE PTR [rax],al
   140005c22:	add    BYTE PTR [rax],al
   140005c24:	cs rex.XB push r10
   140005c27:	push   rsp
   140005c28:	and    al,0x58
   140005c2a:	rex.WB pop r9
   140005c2c:	add    BYTE PTR [rax],al
   140005c2e:	add    BYTE PTR [rax],al
   140005c30:	jo     0x140005c86
   140005c32:	add    BYTE PTR [rax],al
   140005c34:	or     BYTE PTR [rax],al
   140005c36:	add    BYTE PTR [rax],al
   140005c38:	cs rex.XB push r10
   140005c3b:	push   rsp
   140005c3c:	and    al,0x58
   140005c3e:	rex.WB pop r10
   140005c40:	add    BYTE PTR [rax],al
   140005c42:	add    BYTE PTR [rax],al
   140005c44:	js     0x140005c9a
   140005c46:	add    BYTE PTR [rax],al
   140005c48:	rex.WR add BYTE PTR [rax],r8b
   140005c4b:	add    BYTE PTR [rsi],ch
   140005c4d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140005c55:	add    BYTE PTR [rax],al
   140005c57:	add    al,dl
   140005c59:	push   rsp
   140005c5a:	add    BYTE PTR [rax],al
   140005c5c:	and    BYTE PTR [rsi],al
   140005c5e:	add    BYTE PTR [rax],al
   140005c60:	cs jb  0x140005cc7
   140005c63:	(bad)  
   140005c64:	je     0x140005cc7
   140005c66:	add    BYTE PTR [rax],al
   140005c68:	lock pop rdx
   140005c6a:	add    BYTE PTR [rax],al
   140005c6c:	rol    BYTE PTR [rdx],0x0
   140005c6f:	add    BYTE PTR [rsi],ch
   140005c71:	jb     0x140005cd7
   140005c73:	(bad)  
   140005c74:	je     0x140005cd7
   140005c76:	and    al,0x7a
   140005c78:	jp     0x140005cf4
   140005c7a:	fs (bad) 
   140005c7c:	add    BYTE PTR [eax],al
   140005c7f:	add    BYTE PTR [rax-0x6fffffa3],dh
   140005c85:	add    eax,DWORD PTR [rax]
   140005c87:	add    BYTE PTR [rsi],ch
   140005c89:	js     0x140005cef
   140005c8b:	(bad)  
   140005c8c:	je     0x140005cef
   140005c8e:	add    BYTE PTR [rax],al
   140005c90:	rex (bad) 
   140005c92:	add    BYTE PTR [rax],al
   140005c94:	add    BYTE PTR [rax],al
   140005c97:	add    BYTE PTR [rsi],ch
   140005c99:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140005ca2:	add    BYTE PTR [rax],al
   140005ca4:	and    BYTE PTR [rcx+0x0],0x0
   140005ca8:	and    BYTE PTR [rax],al
   140005caa:	add    BYTE PTR [rax],al
   140005cac:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140005cb6:	add    BYTE PTR [rax],al
   140005cb8:	movabs al,ds:0x2e00000020000061
   140005cc1:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140005cca:	add    BYTE PTR [rax],al
   140005ccc:	shl    BYTE PTR [rcx+0x0],0x0
   140005cd0:	(bad)  
   140005cd1:	add    BYTE PTR [rax],al
   140005cd3:	add    BYTE PTR [rsi],ch
   140005cd5:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140005cde:	add    BYTE PTR [rax],al
   140005ce0:	loopne 0x140005d43
   140005ce2:	add    BYTE PTR [rax],al
   140005ce4:	and    BYTE PTR [rax],al
   140005ce6:	add    BYTE PTR [rax],al
   140005ce8:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140005cf2:	add    BYTE PTR [rax],al
   140005cf4:	add    BYTE PTR [rdx+0x0],ah
   140005cf7:	add    ah,cl
   140005cf9:	add    DWORD PTR [rax],eax
   140005cfb:	add    BYTE PTR [rsi],ch
   140005cfd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140005d05:	add    BYTE PTR [rax],al
   140005d07:	add    ah,cl
   140005d09:	movsxd eax,DWORD PTR [rax]
   140005d0b:	add    BYTE PTR [rax+rax*1],dl
   140005d0e:	add    BYTE PTR [rax],al
   140005d10:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140005d19:	add    BYTE PTR [rax],al
   140005d1b:	add    al,ah
   140005d1d:	movsxd eax,DWORD PTR [rax]
   140005d1f:	add    BYTE PTR [rax],ch
   140005d21:	add    al,0x0
   140005d23:	add    BYTE PTR [rsi],ch
   140005d25:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140005d2d:	add    BYTE PTR [rax],al
   140005d2f:	add    BYTE PTR [rax],cl
   140005d31:	push   0xadc0000
   140005d36:	add    BYTE PTR [rax],al
   140005d38:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140005d41:	add    BYTE PTR [rax],al
   140005d43:	add    BYTE PTR [rax],al
   140005d45:	add    BYTE PTR [rax],0x0
   140005d48:	xor    BYTE PTR [rax],al
   140005d4a:	add    BYTE PTR [rax],al
   140005d4c:	cs fs (bad) 
   140005d4f:	je     0x140005db2
   140005d51:	add    BYTE PTR [rax],al
   140005d53:	add    BYTE PTR [rax],dh
   140005d55:	add    BYTE PTR [rax],0x0
   140005d58:	rol    BYTE PTR [rsi],1
   140005d5a:	add    BYTE PTR [rax],al
   140005d5c:	cs (bad) 
   140005d5f:	jae    0x140005d61
   140005d61:	add    BYTE PTR [rax],al
   140005d63:	add    BYTE PTR [rax],al
   140005d65:	nop
   140005d66:	add    BYTE PTR [rax],al
   140005d68:	jo     0x140005d6c
   140005d6a:	add    BYTE PTR [rax],al
   140005d6c:	cs jo  0x140005dd3
   140005d6f:	(bad)  
   140005d70:	je     0x140005dd3
   140005d72:	add    BYTE PTR [rax],al
   140005d74:	add    BYTE PTR [rax+0x200000],ah
   140005d7a:	add    BYTE PTR [rax],al
   140005d7c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140005d86:	add    BYTE PTR [rax],al
   140005d88:	add    BYTE PTR [rax+0x3000000],dh
   140005d8e:	add    BYTE PTR [rax],al
   140005d90:	cs jb  0x140005e06
   140005d93:	jb     0x140005df8
   140005d95:	and    al,0x30
   140005d97:	xor    DWORD PTR [rax],eax
   140005d99:	add    BYTE PTR [rax],al
   140005d9b:	add    BYTE PTR [rax],al
   140005d9d:	mov    bl,0x0
   140005d9f:	add    al,dh
   140005da1:	imul   eax,DWORD PTR [rax],0x0
   140005da4:	cs jb  0x140005e1a
   140005da7:	jb     0x140005e0c
   140005da9:	and    al,0x30
   140005dab:	xor    al,BYTE PTR [rax]
   140005dad:	add    BYTE PTR [rax],al
   140005daf:	add    BYTE PTR [rcx],al
   140005db1:	add    al,0x1
   140005db3:	add    BYTE PTR [rdx+riz*2],al
   140005db6:	add    BYTE PTR [rax],al
   140005db8:	add    DWORD PTR [rbx],ecx
   140005dba:	add    DWORD PTR [rax],eax
   140005dbc:	or     eax,DWORD PTR [rdx+0x4010000]
   140005dc2:	add    DWORD PTR [rax],eax
   140005dc4:	add    al,0xa2
   140005dc6:	add    BYTE PTR [rax],al
   140005dc8:	add    DWORD PTR [rdi],ecx
   140005dca:	(bad)  
   140005dcb:	add    BYTE PTR [rdi],cl
   140005dcd:	fs (bad) 
   140005dcf:	add    BYTE PTR [rdi],cl
   140005dd1:	xor    al,0x6
   140005dd3:	add    BYTE PTR [rdi],cl
   140005dd5:	xor    cl,BYTE PTR [rbx]
   140005dd7:	jo     0x140005df2
   140005dd9:	sub    eax,0x641b000b
   140005dde:	push   rbp
   140005ddf:	add    BYTE PTR [rbx],bl
   140005de1:	push   rsp
   140005de2:	push   rsp
   140005de3:	add    BYTE PTR [rbx],bl
   140005de5:	xor    al,0x53
   140005de7:	add    BYTE PTR [rbx],bl
   140005de9:	add    DWORD PTR [rsi+0x0],ecx
   140005dec:	adc    al,0xf0
   140005dee:	adc    ah,al
   140005df0:	adc    BYTE PTR [rax+0x0],dh
   140005df3:	add    BYTE PTR [rax+rax*2+0x0],bh
   140005df7:	add    BYTE PTR [rax+0x2],ah
   140005dfa:	add    BYTE PTR [rax],al
   140005dfc:	sbb    DWORD PTR [rip+0xffffffffb2060002],edx        # 0xf2065e04
   140005e02:	add    dh,BYTE PTR [rax]
   140005e04:	jl     0x140005e46
   140005e06:	add    BYTE PTR [rax],al
   140005e08:	push   rax
   140005e09:	add    BYTE PTR [rax],al
   140005e0b:	add    BYTE PTR [rcx],bl
   140005e0d:	(bad)  
   140005e0e:	or     eax,0x64682600
   140005e13:	add    BYTE PTR [rdx],ah
   140005e15:	je     0x140005de7
   140005e17:	add    BYTE PTR [rdx],ah
   140005e19:	fs iret 
   140005e1b:	add    BYTE PTR [rdx],ah
   140005e1d:	xor    al,0xce
   140005e1f:	add    BYTE PTR [rdx],ah
   140005e21:	add    edx,ecx
   140005e23:	add    BYTE PTR [rax+rsi*8],dl
   140005e26:	adc    ah,al
   140005e28:	adc    BYTE PTR [rax+0x0],dl
   140005e2b:	add    BYTE PTR [rax+rax*2+0x0],bh
   140005e2f:	add    BYTE PTR [rax],dh
   140005e31:	(bad)  
   140005e32:	add    BYTE PTR [rax],al
   140005e34:	add    DWORD PTR [rdi],ecx
   140005e36:	(bad)  
   140005e37:	add    BYTE PTR [rdi],cl
   140005e39:	or     DWORD PTR fs:[rax],eax
   140005e3c:	sysenter 
   140005e3e:	or     BYTE PTR [rax],al
   140005e40:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140005e43:	jo     0x140005e46
   140005e45:	or     al,BYTE PTR [rdx]
   140005e47:	add    BYTE PTR [rdx],cl
   140005e49:	add    DWORD PTR [rcx],edx
   140005e4b:	add    BYTE PTR [rcx],al
   140005e4d:	(bad)  
   140005e4e:	(bad)  
   140005e4f:	add    BYTE PTR [rdi],dl
   140005e51:	or     BYTE PTR fs:[rax],al
   140005e54:	(bad)  
   140005e55:	xor    al,0x6
   140005e57:	add    BYTE PTR [rdi],dl
   140005e59:	xor    dl,BYTE PTR [rbx]
   140005e5b:	jo     0x140005e5e
   140005e5d:	adc    al,0x8
   140005e5f:	add    BYTE PTR [rsp+riz*2],dl
   140005e62:	or     eax,DWORD PTR [rax]
   140005e64:	adc    al,0x54
   140005e66:	or     al,BYTE PTR [rax]
   140005e68:	adc    al,0x34
   140005e6a:	or     BYTE PTR [rax],al
   140005e6c:	adc    al,0x52
   140005e6e:	adc    BYTE PTR [rax+0x19],dh
   140005e71:	xor    BYTE PTR [rbx],cl
   140005e73:	add    BYTE PTR [rdi],bl
   140005e75:	xor    al,0x6d
   140005e77:	add    BYTE PTR [rdi],bl
   140005e79:	add    DWORD PTR [rdx+0x0],esp
   140005e7c:	adc    al,dh
   140005e7e:	(bad)  
   140005e7f:	loopne 0x140005e8d
   140005e81:	ror    BYTE PTR [rdx],1
   140005e83:	ror    BYTE PTR [rax],0x70
   140005e86:	(bad)  
   140005e87:	(bad)  
   140005e88:	(bad)  
   140005e89:	push   rax
   140005e8a:	add    BYTE PTR [rax],al
   140005e8c:	jl     0x140005ece
   140005e8e:	add    BYTE PTR [rax],al
   140005e90:	add    BYTE PTR [rbx],al
   140005e92:	add    BYTE PTR [rax],al
   140005e94:	add    DWORD PTR [rdx],ecx
   140005e96:	add    al,0x0
   140005e98:	or     dh,BYTE PTR [rdi+rax*1]
   140005e9b:	add    BYTE PTR [rdx],cl
   140005e9d:	xor    al,BYTE PTR [rsi]
   140005e9f:	jo     0x140005eba
   140005ea1:	cmp    BYTE PTR [rbx],cl
   140005ea3:	add    BYTE PTR [rdi],ah
   140005ea5:	fs ins BYTE PTR es:[rdi],dx
   140005ea7:	add    ah,BYTE PTR [rdi]
   140005ea9:	xor    al,0x6a
   140005eab:	add    ah,BYTE PTR [rdi]
   140005ead:	add    DWORD PTR [rdx+rax*1+0x12],esp
   140005eb1:	lock adc al,ah
   140005eb4:	(bad)  
   140005eb5:	ror    BYTE PTR [rax+rsi*2],1
   140005eb8:	or     edx,DWORD PTR [rax+0x0]
   140005ebb:	add    BYTE PTR [rax+rax*2+0x0],bh
   140005ebf:	add    BYTE PTR [rax],dl
   140005ec1:	adc    eax,DWORD PTR [rax]
   140005ec3:	add    BYTE PTR [rcx],al
   140005ec5:	adc    BYTE PTR [rsi],al
   140005ec7:	add    BYTE PTR [rax],dl
   140005ec9:	or     BYTE PTR fs:[rax],al
   140005ecc:	adc    BYTE PTR [rsi+rax*1],dh
   140005ecf:	add    BYTE PTR [rax],dl
   140005ed1:	xor    cl,BYTE PTR [rax+rsi*2]
   140005ed4:	sbb    DWORD PTR [rdi],esp
   140005ed6:	(bad)  
   140005ed7:	add    BYTE PTR [rsi],dl
   140005ed9:	add    DWORD PTR [rax+0x0],esi
   140005edc:	(bad)  
   140005edd:	loopne 0x140005ee4
   140005edf:	jo     0x140005ee5
   140005ee1:	(bad)  
   140005ee2:	add    esi,DWORD PTR [rax]
   140005ee4:	add    dl,BYTE PTR [rax+0x0]
   140005ee7:	add    BYTE PTR [rax+rax*2+0x0],bh
   140005eeb:	add    BYTE PTR [rax+0x3],dh
   140005eee:	add    BYTE PTR [rax],al
   140005ef0:	sbb    DWORD PTR [rbx],esi
   140005ef2:	or     eax,DWORD PTR [rax]
   140005ef4:	and    dh,BYTE PTR [rax+rax*2+0x1]
   140005ef8:	and    ah,BYTE PTR [rdi+rdi*1+0x1]
   140005efc:	and    dh,BYTE PTR [rsi+rdi*1]
   140005eff:	add    DWORD PTR [rdx],esp
   140005f01:	add    DWORD PTR [rdx],edi
   140005f03:	add    DWORD PTR [rax+riz*8],edx
   140005f06:	adc    al,al
   140005f08:	adc    BYTE PTR [rax+0x0],dl
   140005f0b:	add    BYTE PTR [rax+rax*2+0x0],bh
   140005f0f:	add    al,al
   140005f11:	or     DWORD PTR [rax],eax
   140005f13:	add    BYTE PTR [rcx],al
   140005f15:	(bad)  
   140005f16:	or     DWORD PTR [rax],eax
   140005f18:	(bad)  
   140005f19:	fs add BYTE PTR ss:[rdi],dl
   140005f1d:	push   rsp
   140005f1e:	xor    eax,0x34341700
   140005f23:	add    BYTE PTR [rdi],dl
   140005f25:	add    DWORD PTR [rdx],esi
   140005f27:	add    BYTE PTR [rax],dl
   140005f29:	jo     0x140005f2b
   140005f2b:	add    BYTE PTR [rcx],al
   140005f2d:	sbb    BYTE PTR [rdx],cl
   140005f2f:	add    BYTE PTR [rax],bl
   140005f31:	or     al,BYTE PTR fs:[rax]
   140005f34:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140005f38:	sbb    BYTE PTR [rax+rcx*1],dh
   140005f3b:	add    BYTE PTR [rax],bl
   140005f3d:	xor    dl,BYTE PTR [rax+rsi*8]
   140005f40:	adc    ah,al
   140005f42:	adc    BYTE PTR [rax+0x1],dh
   140005f45:	sbb    DWORD PTR [rdx],ecx
   140005f47:	add    BYTE PTR [rcx],bl
   140005f49:	je     0x140005f54
   140005f4b:	add    BYTE PTR [rcx],bl
   140005f4d:	or     BYTE PTR fs:[rax],al
   140005f50:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140005f54:	sbb    DWORD PTR [rsi+rax*1],esi
   140005f57:	add    BYTE PTR [rcx],bl
   140005f59:	xor    dl,BYTE PTR [rip+0x40a01e0]        # 0x1440a613f
   140005f5f:	add    BYTE PTR [rdx],cl
   140005f61:	xor    al,0x6
   140005f63:	add    BYTE PTR [rdx],cl
   140005f65:	xor    al,BYTE PTR [rsi]
   140005f67:	jo     0x140005f7a
   140005f69:	sbb    eax,DWORD PTR [rax+rax*1]
   140005f6c:	adc    edx,edx
   140005f6e:	or     al,0x60
   140005f70:	or     esi,DWORD PTR [rax]
   140005f72:	or     dl,BYTE PTR [rax+0x18]
   140005f75:	(bad)  
   140005f76:	add    BYTE PTR [rax],al
   140005f78:	rcr    BYTE PTR [rcx+0x0],0x0
   140005f7c:	(bad)  
   140005f7d:	(bad)  
   140005f7e:	(bad)  
   140005f7f:	push   QWORD PTR [rsi+0x41]
   140005f85:	add    BYTE PTR [rax],al
   140005f87:	add    dl,al
   140005f89:	add    BYTE PTR [r8],al
   140005f8c:	add    BYTE PTR [rax],al
   140005f8e:	add    BYTE PTR [rax],al
   140005f90:	(bad)  
   140005f91:	xor    DWORD PTR [rax],eax
   140005f93:	add    bh,bh
   140005f95:	(bad)  
   140005f96:	(bad)  
   140005f97:	call   QWORD PTR [rax]
   140005f99:	xor    al,BYTE PTR [rax]
   140005f9b:	add    BYTE PTR [rax],al
   140005f9d:	add    BYTE PTR [rax],al
   140005f9f:	add    BYTE PTR [rdi],bh
   140005fa1:	xor    al,BYTE PTR [rax]
   140005fa3:	add    BYTE PTR [rcx],al
   140005fa5:	add    BYTE PTR [rax],al
   140005fa7:	add    bh,al
   140005fa9:	xor    al,BYTE PTR [rax]
   140005fab:	add    BYTE PTR [rax],al
   140005fad:	add    BYTE PTR [rax],al
   140005faf:	add    BYTE PTR [rbx+rsi*1],al
   140005fb2:	add    BYTE PTR [rax],al
   140005fb4:	(bad)  
   140005fb5:	(bad)  
   140005fb6:	(bad)  
   140005fb7:	inc    DWORD PTR [rcx]
   140005fb9:	add    al,0x1
   140005fbb:	add    BYTE PTR [rdx+rax*4],al
   140005fbe:	add    BYTE PTR [rax],al
   140005fc0:	add    DWORD PTR [rsi],eax
   140005fc2:	add    al,BYTE PTR [rax]
   140005fc4:	(bad)  
   140005fc5:	xor    al,BYTE PTR [rdx]
   140005fc7:	xor    BYTE PTR [rcx],al
   140005fc9:	or     al,BYTE PTR [rax+rax*1]
   140005fcc:	or     dh,BYTE PTR [rax+rcx*1]
   140005fcf:	add    BYTE PTR [rdx],cl
   140005fd1:	push   rdx
   140005fd2:	(bad)  
   140005fd3:	jo     0x140005fd6
   140005fd5:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e4271db
   140005fdb:	jo     0x140005fea
   140005fdd:	(bad)  
   140005fde:	or     al,0x50
   140005fe0:	or     esi,DWORD PTR [rax]
   140005fe2:	add    BYTE PTR [rax],al
   140005fe4:	or     DWORD PTR [rbx+rcx*1],ebx
   140005fe7:	add    BYTE PTR [rsp+rsi*2],bl
   140005fea:	sbb    al,0x0
   140005fec:	sbb    al,0x64
   140005fee:	sbb    eax,DWORD PTR [rax]
   140005ff0:	sbb    al,0x34
   140005ff2:	sbb    al,BYTE PTR [rax]
   140005ff4:	sbb    al,0x1
   140005ff6:	(bad)  
   140005ff7:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e073ed
   140005ffd:	rol    BYTE PTR [rax],0x0
   140006000:	ss cmp eax,0x10000
   140006006:	add    BYTE PTR [rax],al
   140006008:	rex (bad) 
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	cmp    DWORD PTR ss:[rax],eax
   14000600f:	add    ah,dl
   140006011:	add    BYTE PTR [r8],al
   140006014:	cmp    DWORD PTR ss:[rax],eax
   140006017:	add    BYTE PTR [rcx],al
   140006019:	add    al,0x1
   14000601b:	add    BYTE PTR [rdx+rax*2],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	add    DWORD PTR [rax],eax
   140006022:	add    BYTE PTR [rax],al
   140006024:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204602b
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	sbb    BYTE PTR [rdi],bh
   14000602e:	add    BYTE PTR [rax],al
   140006030:	rcl    BYTE PTR [rax+rax*1+0x0],1
   140006034:	(bad)  
   140006035:	(bad)  
   140006036:	(bad)  
   140006037:	inc    DWORD PTR [rax]
   140006039:	add    BYTE PTR [rax],al
   14000603b:	add    bh,bh
   14000603d:	(bad)  
   14000603e:	(bad)  
   14000603f:	inc    DWORD PTR [rax]
	...
   140006049:	add    BYTE PTR [rax],al
   14000604b:	add    BYTE PTR [rcx],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rcx],al
   140006051:	add    BYTE PTR [rax],al
   140006053:	add    BYTE PTR [rax+0x60],bl
   140006056:	add    BYTE PTR [rax],al
   140006058:	add    BYTE PTR [rax],al
	...
   140006063:	add    al,bh
   140006065:	add    BYTE PTR [r8],al
   140006068:	cmp    BYTE PTR [rax],al
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	in     al,0x39
   140006072:	add    BYTE PTR [rax],al
   140006074:	(bad)  
   140006075:	(bad)  
   140006076:	(bad)  
   140006077:	push   rcx
   140006079:	cmp    DWORD PTR [rax],eax
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    bh,dh
   140006081:	cmp    DWORD PTR [rax],eax
   140006083:	add    bh,bh
   140006085:	(bad)  
   140006086:	(bad)  
   140006087:	(bad)  
   140006088:	clc    
   140006089:	add    BYTE PTR [r8],al
   14000608c:	add    BYTE PTR [rax],al
   14000608e:	add    BYTE PTR [rax],al
   140006090:	add    eax,0x1000042
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    BYTE PTR [rdx],cl
   140006099:	rex.X add BYTE PTR [rax],al
   14000609c:	add    BYTE PTR [rax],al
   14000609e:	add    BYTE PTR [rax],al
   1400060a0:	sbb    DWORD PTR [rdx],ecx
   1400060a2:	add    al,BYTE PTR [rax]
   1400060a4:	or     dh,BYTE PTR [rdx]
   1400060a6:	(bad)  
   1400060a7:	push   rax
   1400060a8:	sbb    BYTE PTR [rdi],bh
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	rcl    BYTE PTR [rax+rax*1+0x0],1
   1400060b0:	or     DWORD PTR [rcx+rax*1],eax
   1400060b3:	add    BYTE PTR [rdx+riz*1],al
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	ss cmp eax,0x10000
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	mov    esp,0xf200003a
   1400060c5:	cmp    al,BYTE PTR [rax]
   1400060c7:	add    BYTE PTR [rcx],al
   1400060c9:	add    BYTE PTR [rax],al
   1400060cb:	add    dl,dh
   1400060cd:	cmp    al,BYTE PTR [rax]
   1400060cf:	add    BYTE PTR [rcx],cl
   1400060d1:	or     al,BYTE PTR [rax+rax*1]
   1400060d4:	or     dh,BYTE PTR [rsi+rax*1]
   1400060d7:	add    BYTE PTR [rdx],cl
   1400060d9:	xor    al,BYTE PTR [rsi]
   1400060db:	jo     0x140006113
   1400060dd:	cmp    eax,0x10000
   1400060e2:	add    BYTE PTR [rax],al
   1400060e4:	mov    ebp,0xf000003b
   1400060e9:	cmp    eax,DWORD PTR [rax]
   1400060eb:	add    BYTE PTR [rax],ah
   1400060ed:	rex.X add BYTE PTR [rax],al
   1400060f0:	lock cmp eax,DWORD PTR [rax]
   1400060f3:	add    BYTE PTR [rcx],al
   1400060f5:	(bad)  
   1400060f6:	add    al,BYTE PTR [rax]
   1400060f8:	(bad)  
   1400060f9:	xor    al,BYTE PTR [rdx]
   1400060fb:	push   rax
   1400060fc:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d6106
   140006102:	or     DWORD PTR [rax],eax
   140006104:	or     eax,0x1500632
   140006109:	or     al,0x2
   14000610b:	add    BYTE PTR [rcx+rax*1],cl
   14000610e:	adc    DWORD PTR [rax],eax
   140006110:	add    DWORD PTR [rax],eax
   140006112:	add    BYTE PTR [rax],al
   140006114:	add    DWORD PTR [rax],ebx
   140006116:	add    DWORD PTR [rax],eax
   140006118:	sbb    dl,al
   14000611a:	add    BYTE PTR [rax],al
   14000611c:	add    DWORD PTR [rax],ebx
   14000611e:	add    DWORD PTR [rax],eax
   140006120:	sbb    dl,al
   140006122:	add    BYTE PTR [rax],al
   140006124:	add    DWORD PTR [rax],ebx
   140006126:	add    DWORD PTR [rax],eax
   140006128:	sbb    dl,al
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	add    DWORD PTR [rax],ebx
   14000612e:	add    DWORD PTR [rax],eax
   140006130:	sbb    dl,al
   140006132:	add    BYTE PTR [rax],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	add    DWORD PTR [rcx+rax*1],eax
   14000613b:	add    BYTE PTR [rdx+rdx*1],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	add    DWORD PTR [rax],eax
   140006142:	add    BYTE PTR [rax],al
   140006144:	adc    BYTE PTR [rbp+0x0],dl
   140006147:	add    al,ah
   140006149:	test   DWORD PTR [rax],eax
   14000614b:	add    BYTE PTR [rax],dl
   14000614d:	movabs al,ds:0x61e0000061b00000
	...
   14000615e:	add    BYTE PTR [rax],al
   140006160:	add    DWORD PTR [rax],eax
   140006162:	add    BYTE PTR [rax],al
   140006164:	push   rax
   140006165:	push   rbp
   140006166:	add    BYTE PTR [rax],al
   140006168:	call   0x1400061f2
   14000616d:	movabs al,ds:0x61f0000061a00000
	...
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	adc    DWORD PTR [rax],eax
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax+0x0],al
   1400061ac:	add    BYTE PTR [rax],al
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	shl    BYTE PTR [rcx+0x0],0x0
	...
   1400061c0:	add    BYTE PTR [rax],al
   1400061c2:	push   rdx
   1400061c3:	imul   esi,DWORD PTR gs:[ebx+0x74],0x70417265
   1400061cc:	jo     0x14000623a
   1400061ce:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400061d5:	push   rdx
   1400061d6:	gs jae 0x14000624d
   1400061d9:	(bad)  
   1400061da:	jb     0x140006250
	...
   140006200:	loopne 0x140006265
	...
   14000620a:	add    BYTE PTR [rax],al
   14000620c:	ins    BYTE PTR es:[rdi],dx
   14000620d:	push   0x50000000
   140006212:	add    BYTE PTR [rax],al
   140006214:	(bad)  
   140006215:	add    BYTE PTR fs:[rax],al
	...
   140006220:	in     al,0x6a
   140006222:	add    BYTE PTR [rax],al
   140006224:	adc    BYTE PTR [rax+0x0],0x0
   140006228:	and    BYTE PTR [rdi+0x0],ah
	...
   140006233:	add    dh,dl
   140006235:	imul   eax,DWORD PTR [rax],0x0
   140006238:	rex push rbx
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	call   0x1400062a6
   140006241:	add    BYTE PTR [rax],al
   140006243:	add    BYTE PTR [rax],al
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    BYTE PTR [rbp+rbp*2+0x52080000],dh
   14000624e:	add    BYTE PTR [rax],al
   140006250:	nop
   140006251:	add    BYTE PTR gs:[rax],al
	...
   14000625c:	(bad)  
   14000625d:	ins    DWORD PTR es:[rdi],dx
   14000625e:	add    BYTE PTR [rax],al
   140006260:	mov    al,0x51
   140006262:	add    BYTE PTR [rax],al
   140006264:	sub    BYTE PTR [rsi+0x0],ah
	...
   14000626f:	add    ah,dh
   140006271:	ins    DWORD PTR es:[rdi],dx
   140006272:	add    BYTE PTR [rax],al
   140006274:	rex.W push rdx
   140006276:	add    BYTE PTR [rax],al
   140006278:	clc    
   140006279:	add    BYTE PTR gs:[rax],al
	...
   140006284:	and    ch,BYTE PTR [rsi+0x0]
   140006287:	add    BYTE PTR [rax],bl
   140006289:	push   rdx
   14000628a:	add    BYTE PTR [rax],al
   14000628c:	enter  0x65,0x0
	...
   140006298:	rex.X outs dx,BYTE PTR ds:[rsi]
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	call   0x1280062f2
   1400062a1:	data16 add BYTE PTR [rax],al
	...
   1400062ac:	ins    BYTE PTR es:[rdi],dx
   1400062ad:	outs   dx,BYTE PTR ds:[rsi]
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	or     BYTE PTR [rbx+0x0],dl
   1400062b3:	add    BYTE PTR [rax],bh
   1400062b5:	data16 add BYTE PTR [rax],al
	...
   1400062c0:	mov    gs,WORD PTR [rsi+0x0]
   1400062c3:	add    BYTE PTR [rax+0x52],bl
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	sbb    BYTE PTR [rsi+0x0],ah
	...
   1400062d3:	add    BYTE PTR [rax+0x3800006e],bh
   1400062d9:	push   rdx
   1400062da:	add    BYTE PTR [rax],al
   1400062dc:	push   0x66
   1400062e1:	add    BYTE PTR [rax],al
   1400062e3:	add    BYTE PTR [rax],al
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    dl,ah
   1400062e9:	outs   dx,BYTE PTR ds:[rsi]
   1400062ea:	add    BYTE PTR [rax],al
   1400062ec:	mov    BYTE PTR [rdx+0x0],dl
   1400062ef:	add    al,bh
   1400062f1:	data16 add BYTE PTR [rax],al
	...
   1400062fc:	(bad)  
   1400062fd:	outs   dx,DWORD PTR ds:[rsi]
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	sbb    BYTE PTR [rbx+0x0],dl
   140006303:	add    BYTE PTR [rax+0x66],dh
   140006309:	add    BYTE PTR [rax],al
   14000630b:	add    BYTE PTR [rax],al
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    BYTE PTR [rdx],ch
   140006311:	outs   dx,DWORD PTR ds:[rsi]
   140006312:	add    BYTE PTR [rax],al
   140006314:	rcl    BYTE PTR [rdx+0x0],1
   140006317:	add    BYTE PTR [rax],dl
   140006319:	add    BYTE PTR [eax],al
	...
   140006324:	jle    0x140006395
   140006326:	add    BYTE PTR [rax],al
   140006328:	xor    BYTE PTR [rbx+0x0],dl
   14000632b:	add    al,dl
   14000632d:	data16 add BYTE PTR [rax],al
	...
   140006338:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006339:	outs   dx,DWORD PTR ds:[rsi]
   14000633a:	add    BYTE PTR [rax],al
   14000633c:	lock push rdx
   14000633e:	add    BYTE PTR [rax],al
   140006340:	or     BYTE PTR [rsi+0x0],ah
	...
   14000634b:	add    dl,bl
   14000634d:	outs   dx,DWORD PTR ds:[rsi]
   14000634e:	add    BYTE PTR [rax],al
   140006350:	sub    BYTE PTR [rdx+0x0],dl
   140006353:	add    al,dl
   140006355:	add    BYTE PTR [eax],al
	...
   140006360:	(bad)  
   140006361:	jo     0x140006363
   140006363:	add    al,dh
   140006365:	push   rbx
   140006366:	add    BYTE PTR [rax],al
   140006368:	sbb    BYTE PTR [rax+rax*1+0x0],ah
	...
   140006374:	ret    0x70
   140006377:	add    BYTE PTR [rax],bh
   140006379:	push   rax
   14000637a:	add    BYTE PTR [rax],al
   14000637c:	sub    BYTE PTR [rax+rax*1+0x0],ah
	...
   140006388:	stos   BYTE PTR es:[rdi],al
   140006389:	jno    0x14000638b
   14000638b:	add    BYTE PTR [rax+0x50],cl
   14000638e:	add    BYTE PTR [rax],al
   140006390:	js     0x1400063f8
	...
   14000639a:	add    BYTE PTR [rax],al
   14000639c:	(bad)  
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	cwde   
   1400063a1:	push   rdx
   1400063a2:	add    BYTE PTR [rax],al
   1400063a4:	movabs al,ds:0x66
   1400063ad:	add    BYTE PTR [rax],al
   1400063af:	add    BYTE PTR [rsi-0x3fffff8e],al
   1400063b5:	push   rdx
   1400063b6:	add    BYTE PTR [rax],al
   1400063b8:	mov    al,0x65
	...
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	stos   BYTE PTR es:[rdi],al
   1400063c5:	jb     0x1400063c7
   1400063c7:	add    al,dl
   1400063c9:	push   rcx
	...
   1400063de:	add    BYTE PTR [rax],al
   1400063e0:	or     BYTE PTR [rax+0x0],ch
   1400063e3:	add    BYTE PTR [rax],al
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    BYTE PTR [rax],bl
   1400063e9:	push   0x0
   1400063ee:	add    BYTE PTR [rax],al
   1400063f0:	cs push 0x0
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	ds push 0x0
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	rex.WR push 0x0
   140006406:	add    BYTE PTR [rax],al
   140006408:	pop    rsp
   140006409:	push   0x0
	...
   140006416:	add    BYTE PTR [rax],al
   140006418:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006419:	jo     0x14000641b
	...
   140006427:	add    BYTE PTR [rax+0x71],al
   14000642d:	add    BYTE PTR [rax],al
   14000642f:	add    ah,cl
   140006431:	jo     0x140006433
   140006433:	add    BYTE PTR [rax],al
   140006435:	add    BYTE PTR [rax],al
   140006437:	add    al,ch
   140006439:	jo     0x14000643b
   14000643b:	add    BYTE PTR [rax],al
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    BYTE PTR [rax],bl
   140006441:	jno    0x140006443
   140006443:	add    BYTE PTR [rax],al
   140006445:	add    BYTE PTR [rax],al
   140006447:	add    BYTE PTR [rax],bh
   140006449:	jno    0x14000644b
   14000644b:	add    BYTE PTR [rax],al
   14000644d:	add    BYTE PTR [rax],al
   14000644f:	add    BYTE PTR [rcx+rsi*2+0x0],ah
	...
   14000645f:	add    dh,cl
   140006461:	push   0x0
   140006463:	add    BYTE PTR [rax],al
   140006465:	add    BYTE PTR [rax],al
   140006467:	add    BYTE PTR [rsi+0x71],dh
   14000646d:	add    BYTE PTR [rax],al
   14000646f:	add    BYTE PTR [rsi+0x68],dh
   140006472:	add    BYTE PTR [rax],al
   140006474:	add    BYTE PTR [rax],al
   140006476:	add    BYTE PTR [rax],al
   140006478:	test   BYTE PTR [rax+0x0],ch
   14000647b:	add    BYTE PTR [rax],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rdx+0x68],dl
   140006485:	add    BYTE PTR [rax],al
   140006487:	add    BYTE PTR [rsi+0x68],bl
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rax+rbp*2+0x0],ch
   140006496:	add    BYTE PTR [rax],al
   140006498:	ret    0x68
   14000649b:	add    BYTE PTR [rax],al
   14000649d:	add    BYTE PTR [rax],al
   14000649f:	add    dh,cl
   1400064a1:	push   0x0
   1400064a6:	add    BYTE PTR [rax],al
   1400064a8:	fsubr  QWORD PTR [rax+0x0]
   1400064ab:	add    BYTE PTR [rax],al
   1400064ad:	add    BYTE PTR [rax],al
   1400064af:	add    al,dh
   1400064b1:	push   0x0
   1400064b6:	add    BYTE PTR [rax],al
   1400064b8:	add    ch,BYTE PTR [rcx+0x0]
   1400064bb:	add    BYTE PTR [rax],al
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    BYTE PTR [rsi],dl
   1400064c1:	imul   eax,DWORD PTR [rax],0x0
   1400064c7:	add    BYTE PTR [rsi],ah
   1400064c9:	imul   eax,DWORD PTR [rax],0x0
   1400064cf:	add    BYTE PTR [rcx+rbp*2],dh
   1400064d2:	add    BYTE PTR [rax],al
   1400064d4:	add    BYTE PTR [rax],al
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	imul   rax,QWORD PTR [rax],0x0
   1400064df:	add    BYTE PTR [rcx+rbp*2+0x0],bl
   1400064e3:	add    BYTE PTR [rax],al
   1400064e5:	add    BYTE PTR [rax],al
   1400064e7:	add    BYTE PTR [rax+0x6a],bh
   1400064ed:	add    BYTE PTR [rax],al
   1400064ef:	add    BYTE PTR [rsi+0x6a],ah
   1400064f5:	add    BYTE PTR [rax],al
   1400064f7:	add    ah,ah
   1400064f9:	or     DWORD PTR [rax],eax
   1400064fb:	add    BYTE PTR [rax],al
   1400064fd:	add    BYTE PTR [rax],al
   1400064ff:	adc    BYTE PTR [rdx+0x6a],0x0
   140006506:	add    BYTE PTR [rax],al
   140006508:	js     0x140006574
   14000650a:	add    BYTE PTR [rax],al
   14000650c:	add    BYTE PTR [rax],al
   14000650e:	add    BYTE PTR [rax],al
   140006510:	fs push 0x0
   140006513:	add    BYTE PTR [rax],al
   140006515:	add    BYTE PTR [rax],al
   140006517:	add    BYTE PTR [rax+0x6a],bl
   14000651a:	add    BYTE PTR [rax],al
   14000651c:	add    BYTE PTR [rax],al
   14000651e:	add    BYTE PTR [rax],al
   140006520:	rex.WX push 0x0
   140006523:	add    BYTE PTR [rax],al
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    BYTE PTR [rdx+rbp*2],bh
   14000652a:	add    BYTE PTR [rax],al
   14000652c:	add    BYTE PTR [rax],al
   14000652e:	add    BYTE PTR [rax],al
   140006530:	jo     0x14000659b
   140006532:	add    BYTE PTR [rax],al
   140006534:	add    BYTE PTR [rax],al
   140006536:	add    BYTE PTR [rax],al
   140006538:	sub    al,0x6a
   14000653a:	add    BYTE PTR [rax],al
   14000653c:	add    BYTE PTR [rax],al
   14000653e:	add    BYTE PTR [rax],al
   140006540:	(bad)  
   140006541:	push   0x0
   140006543:	add    BYTE PTR [rax],al
   140006545:	add    BYTE PTR [rax],al
   140006547:	add    BYTE PTR [rdx],al
   140006549:	push   0x0
   14000654b:	add    BYTE PTR [rax],al
   14000654d:	add    BYTE PTR [rax],al
   14000654f:	add    ah,ah
   140006551:	imul   eax,DWORD PTR [rax],0x0
   140006557:	add    dl,dl
   140006559:	imul   eax,DWORD PTR [rax],0x0
   14000655f:	add    al,al
   140006561:	imul   eax,DWORD PTR [rax],0x0
   140006567:	add    BYTE PTR [rsi+0x69],ch
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rsi+0x69],bl
   140006575:	add    BYTE PTR [rax],al
   140006577:	add    BYTE PTR [rax+0x69],dl
   14000657d:	add    BYTE PTR [rax],al
   14000657f:	add    BYTE PTR [rsi+0x69],bh
	...
   14000658e:	add    BYTE PTR [rax],al
   140006590:	rex.WRX ins BYTE PTR es:[rdi],dx
   140006592:	add    BYTE PTR [rax],al
   140006594:	add    BYTE PTR [rax],al
   140006596:	add    BYTE PTR [rax],al
   140006598:	cmp    al,0x6c
   14000659a:	add    BYTE PTR [rax],al
   14000659c:	add    BYTE PTR [rax],al
   14000659e:	add    BYTE PTR [rax],al
   1400065a0:	or     al,0x6c
	...
   1400065ae:	add    BYTE PTR [rax],al
   1400065b0:	rex.WX jb 0x1400065b3
   1400065b3:	add    BYTE PTR [rax],al
   1400065b5:	add    BYTE PTR [rax],al
   1400065b7:	add    BYTE PTR [rdx],dh
   1400065b9:	jb     0x1400065bb
	...
   1400065c7:	add    BYTE PTR [rdx+0x6c],ah
   1400065ca:	add    BYTE PTR [rax],al
   1400065cc:	add    BYTE PTR [rax],al
   1400065ce:	add    BYTE PTR [rax],al
   1400065d0:	mov    WORD PTR [rax+rax*1+0x0],gs
   1400065d4:	add    BYTE PTR [rax],al
   1400065d6:	add    BYTE PTR [rax],al
   1400065d8:	jo     0x140006647
	...
   1400065e6:	add    BYTE PTR [rax],al
   1400065e8:	imul   BYTE PTR [rbx+0x0]
	...
   1400065f7:	add    BYTE PTR [rax],dh
   1400065f9:	ins    BYTE PTR es:[rdi],dx
	...
   140006606:	add    BYTE PTR [rax],al
   140006608:	shr    BYTE PTR [rdi+0x0],1
	...
   140006617:	add    BYTE PTR [rdx+0x6c],ch
	...
   140006625:	add    BYTE PTR [rax],al
   140006627:	add    BYTE PTR [rsi],bl
   140006629:	ins    BYTE PTR es:[rdi],dx
	...
   140006636:	add    BYTE PTR [rax],al
   140006638:	jp     0x1400066a6
   14000663a:	add    BYTE PTR [rax],al
   14000663c:	add    BYTE PTR [rax],al
   14000663e:	add    BYTE PTR [rax],al
   140006640:	movabs al,ds:0xd80000000000006d
   140006649:	ins    BYTE PTR es:[rdi],dx
   14000664a:	add    BYTE PTR [rax],al
   14000664c:	add    BYTE PTR [rax],al
   14000664e:	add    BYTE PTR [rax],al
   140006650:	out    dx,al
   140006651:	ins    BYTE PTR es:[rdi],dx
   140006652:	add    BYTE PTR [rax],al
   140006654:	add    BYTE PTR [rax],al
   140006656:	add    BYTE PTR [rax],al
   140006658:	mov    WORD PTR [rbp+0x0],gs
	...
   140006667:	add    BYTE PTR [rsi+0x6c],bh
	...
   140006675:	add    BYTE PTR [rax],al
   140006677:	add    BYTE PTR [rdx],cl
   140006679:	jb     0x14000667b
   14000667b:	add    BYTE PTR [rax],al
   14000667d:	add    BYTE PTR [rax],al
   14000667f:	add    ah,bh
   140006681:	jno    0x140006683
   140006683:	add    BYTE PTR [rax],al
   140006685:	add    BYTE PTR [rax],al
   140006687:	add    ah,ch
   140006689:	jno    0x14000668b
   14000668b:	add    BYTE PTR [rax],al
   14000668d:	add    BYTE PTR [rax],al
   14000668f:	add    dl,bl
   140006691:	jno    0x140006693
	...
   14000669f:	add    BYTE PTR [rdx+rsi*2],bl
	...
   1400066ae:	add    BYTE PTR [rax],al
   1400066b0:	rex.X ins DWORD PTR es:[rdi],dx
   1400066b2:	add    BYTE PTR [rax],al
   1400066b4:	add    BYTE PTR [rax],al
   1400066b6:	add    BYTE PTR [rax],al
   1400066b8:	pop    rsp
   1400066b9:	ins    DWORD PTR es:[rdi],dx
   1400066ba:	add    BYTE PTR [rax],al
   1400066bc:	add    BYTE PTR [rax],al
   1400066be:	add    BYTE PTR [rax],al
   1400066c0:	cs ins DWORD PTR es:[rdi],dx
	...
   1400066ce:	add    BYTE PTR [rax],al
   1400066d0:	outs   dx,WORD PTR ds:[rsi]
   1400066d2:	add    BYTE PTR [rax],al
   1400066d4:	add    BYTE PTR [rax],al
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	jb     0x140006749
	...
   1400066e6:	add    BYTE PTR [rax],al
   1400066e8:	jb     0x140006756
	...
   1400066f6:	add    BYTE PTR [rax],al
   1400066f8:	(bad)  
   1400066f9:	ins    DWORD PTR es:[rdi],dx
   1400066fa:	add    BYTE PTR [rax],al
   1400066fc:	add    BYTE PTR [rax],al
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	add    al,0x6d
	...
   14000670e:	add    BYTE PTR [rax],al
   140006710:	push   rax
   140006711:	outs   dx,DWORD PTR ds:[rsi]
	...
   14000671e:	add    BYTE PTR [rax],al
   140006720:	shr    BYTE PTR [rbx+0x0],0x0
   140006724:	add    BYTE PTR [rax],al
   140006726:	add    BYTE PTR [rax],al
   140006728:	mov    ah,0x6b
   14000672a:	add    BYTE PTR [rax],al
   14000672c:	add    BYTE PTR [rax],al
   14000672e:	add    BYTE PTR [rax],al
   140006730:	loop   0x14000679d
   140006732:	add    BYTE PTR [rax],al
   140006734:	add    BYTE PTR [rax],al
   140006736:	add    BYTE PTR [rax],al
   140006738:	int3   
   140006739:	jno    0x14000673b
   14000673b:	add    BYTE PTR [rax],al
   14000673d:	add    BYTE PTR [rax],al
   14000673f:	add    al,dl
   140006741:	jb     0x140006743
   140006743:	add    BYTE PTR [rax],al
   140006745:	add    BYTE PTR [rax],al
   140006747:	add    al,dh
   140006749:	push   0x0
   14000674b:	add    BYTE PTR [rax],al
   14000674d:	add    BYTE PTR [rax],al
   14000674f:	add    al,bh
   140006751:	push   0x0
   140006753:	add    BYTE PTR [rax],al
   140006755:	add    BYTE PTR [rax],al
   140006757:	add    BYTE PTR [rdx+0x6b],ch
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	add    BYTE PTR [rdx],al
   140006761:	imul   eax,DWORD PTR [rax],0x0
   140006764:	add    BYTE PTR [rax],al
   140006766:	add    BYTE PTR [rax],al
   140006768:	(bad)  
   140006769:	imul   eax,DWORD PTR [rax],0x0
   14000676c:	add    BYTE PTR [rax],al
   14000676e:	add    BYTE PTR [rax],al
   140006770:	fidiv  DWORD PTR [rdx+0x0]
   140006773:	add    BYTE PTR [rax],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rbx+rbp*2],bl
   14000677a:	add    BYTE PTR [rax],al
   14000677c:	add    BYTE PTR [rax],al
   14000677e:	add    BYTE PTR [rax],al
   140006780:	movabs al,ds:0x880000000000006b
   140006789:	imul   eax,DWORD PTR [rax],0x0
   14000678c:	add    BYTE PTR [rax],al
   14000678e:	add    BYTE PTR [rax],al
   140006790:	jl     0x1400067fd
   140006792:	add    BYTE PTR [rax],al
   140006794:	add    BYTE PTR [rax],al
   140006796:	add    BYTE PTR [rax],al
   140006798:	push   0x6b
   14000679d:	add    BYTE PTR [rax],al
   14000679f:	add    BYTE PTR [rsi+0x6b],bl
   1400067a2:	add    BYTE PTR [rax],al
   1400067a4:	add    BYTE PTR [rax],al
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	push   rsi
   1400067a9:	imul   eax,DWORD PTR [rax],0x0
   1400067ac:	add    BYTE PTR [rax],al
   1400067ae:	add    BYTE PTR [rax],al
   1400067b0:	rex.WRX imul r8,QWORD PTR [rax],0x0
   1400067b4:	add    BYTE PTR [rax],al
   1400067b6:	add    BYTE PTR [rax],al
   1400067b8:	cmp    al,0x6b
   1400067ba:	add    BYTE PTR [rax],al
   1400067bc:	add    BYTE PTR [rax],al
   1400067be:	add    BYTE PTR [rax],al
   1400067c0:	sub    ch,BYTE PTR [rbx+0x0]
	...
   1400067cf:	add    BYTE PTR [rsi+0x70],ah
   1400067d2:	add    BYTE PTR [rax],al
   1400067d4:	add    BYTE PTR [rax],al
   1400067d6:	add    BYTE PTR [rax],al
   1400067d8:	rex.WR jo 0x1400067db
   1400067db:	add    BYTE PTR [rax],al
   1400067dd:	add    BYTE PTR [rax],al
   1400067df:	add    BYTE PTR [rdx],dh
   1400067e1:	jo     0x1400067e3
   1400067e3:	add    BYTE PTR [rax],al
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    BYTE PTR [rax],bl
   1400067e9:	jo     0x1400067eb
   1400067eb:	add    BYTE PTR [rax],al
   1400067ed:	add    BYTE PTR [rax],al
   1400067ef:	add    BYTE PTR [rsi],al
   1400067f1:	jo     0x1400067f3
   1400067f3:	add    BYTE PTR [rax],al
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    BYTE PTR [rax+0x70],al
	...
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    BYTE PTR [rdi],ah
   140006809:	add    al,BYTE PTR [rdi+0x65]
   14000680c:	je     0x140006852
   14000680e:	gs jbe 0x14000687a
   140006811:	movsxd esp,DWORD PTR [rbp+0x43]
   140006814:	(bad)  
   140006815:	jo     0x14000688a
   140006817:	add    BYTE PTR [rcx+0x0],al
   14000681a:	rex.XB jb 0x140006882
   14000681d:	(bad)  
   14000681e:	je     0x140006885
   140006820:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140006822:	outs   dx,BYTE PTR ds:[rsi]
   140006823:	je     0x14000686e
   140006825:	outs   dx,BYTE PTR ds:[rsi]
   140006826:	imul   esi,DWORD PTR fs:[rdx+0x65],0x577463
   14000682e:	add    eax,0x6c655303
   140006833:	movsxd esi,DWORD PTR gs:[rdi+rcx*2+0x62]
   140006838:	push   0x65
   14000683a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000683e:	or     al,0x3
   140006840:	push   rbx
   140006841:	gs je  0x140006886
   140006844:	imul   eax,DWORD PTR [rbx+0x6f],0x6c
   140006848:	outs   dx,DWORD PTR ds:[rsi]
   140006849:	jb     0x14000684b
   14000684b:	add    BYTE PTR [rbx+rax*1],dh
   14000684e:	push   rbx
   14000684f:	gs je  0x1400068a6
   140006852:	gs js  0x1400068c9
   140006855:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006857:	ins    BYTE PTR es:[rdi],dx
   140006858:	outs   dx,DWORD PTR ds:[rsi]
   140006859:	jb     0x14000685b
   14000685b:	add    BYTE PTR [rsi],bh
   14000685d:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140006861:	gs je  0x1400068c9
   140006864:	rex.WRXB (bad) 
   140006866:	push   0x65
   140006868:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14000686c:	rex.RXB
   14000686d:	rex.R
   14000686e:	xor    rsi,QWORD PTR [r10]
   140006871:	cs fs ins BYTE PTR es:[rdi],dx
   140006874:	ins    BYTE PTR es:[rdi],dx
   140006875:	add    BYTE PTR [rbx+0x2],al
   140006878:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000687a:	(bad)  
   14000687b:	fs push rbx
   14000687d:	je     0x1400068f1
   14000687f:	imul   ebp,DWORD PTR [rsi+0x67],0x10b0057
   140006886:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x646e6957
   14000688e:	outs   dx,DWORD PTR ds:[rsi]
   14000688f:	ja     0x1400068e8
   140006891:	add    BYTE PTR [rbx],dl
   140006893:	add    cl,BYTE PTR [rcx+0x73]
   140006896:	movsxd rbp,DWORD PTR [r15+0x6e]
   14000689a:	imul   esp,DWORD PTR [rbx+0x0],0x53034c00
   1400068a1:	push   0x6957776f
   1400068a6:	outs   dx,BYTE PTR ds:[rsi]
   1400068a7:	outs   dx,DWORD PTR fs:[rsi]
   1400068a9:	ja     0x1400068ab
   1400068ab:	add    dh,bh
   1400068ad:	add    dl,BYTE PTR [rbx+0x65]
   1400068b0:	je     0x1400068f8
   1400068b2:	outs   dx,DWORD PTR ds:[rsi]
   1400068b3:	jb     0x14000691a
   1400068b5:	addr32 jb 0x140006927
   1400068b8:	jne    0x140006928
   1400068ba:	fs push rdi
   1400068bc:	imul   ebp,DWORD PTR [rsi+0x64],0x3600776f
   1400068c3:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   1400068c7:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   1400068cc:	push   rdi
   1400068cd:	add    BYTE PTR [rdx+rax*1],dh
   1400068d0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400068d2:	(bad)  
   1400068d3:	fs rex.XB jne 0x140006949
   1400068d7:	jae    0x140006948
   1400068d9:	jb     0x140006932
   1400068db:	add    BYTE PTR [rdx+rax*1+0x69676552],ch
   1400068e2:	jae    0x140006958
   1400068e4:	gs jb  0x14000692a
   1400068e7:	ins    BYTE PTR es:[rdi],dx
   1400068e8:	(bad)  
   1400068e9:	jae    0x14000695e
   1400068eb:	rex.RB js 0x140006945
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	jno    0x1400068f2
   1400068f2:	rex.XB jb 0x14000695a
   1400068f5:	(bad)  
   1400068f6:	je     0x14000695d
   1400068f8:	push   rdi
   1400068f9:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140006900:	push   rdi
   140006901:	add    ch,cl
   140006903:	add    DWORD PTR [rdi+0x65],eax
   140006906:	je     0x14000695f
   140006908:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14000690f:	outs   dx,BYTE PTR ds:[rsi]
   140006910:	addr32 push rax
   140006912:	je     0x140006986
   140006914:	push   rdi
   140006915:	add    BYTE PTR [rbx+0x736f5002],al
   14000691b:	je     0x14000696a
   14000691d:	gs jae 0x140006993
   140006920:	(bad)  
   140006921:	addr32 gs push rdi
   140006924:	add    BYTE PTR [rax],al
   140006926:	js     0x140006929
   140006928:	rex.RXB
   140006929:	gs je  0x140006979
   14000692c:	gs jae 0x1400069a2
   14000692f:	(bad)  
   140006930:	addr32 gs push rdi
   140006933:	add    BYTE PTR [rbx+0x3],ch
   140006936:	push   rsp
   140006937:	jb     0x14000699a
   140006939:	outs   dx,BYTE PTR ds:[rsi]
   14000693a:	jae    0x1400069a8
   14000693c:	(bad)  
   14000693d:	je     0x1400069a4
   14000693f:	rex.WRB
   140006940:	gs jae 0x1400069b6
   140006943:	(bad)  
   140006944:	add    BYTE PTR gs:[eax],al
   140006948:	mov    dh,0x0
   14000694a:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140006952:	rex.WRB
   140006953:	gs jae 0x1400069c9
   140006956:	(bad)  
   140006957:	addr32 gs push rdi
   14000695a:	add    BYTE PTR [rax],al
   14000695c:	jne    0x140006961
   14000695e:	push   rbp
   14000695f:	outs   dx,BYTE PTR ds:[rsi]
   140006960:	jb     0x1400069c7
   140006962:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14000696a:	(bad)  
   14000696b:	jae    0x1400069e0
   14000696d:	push   rdi
   14000696e:	add    BYTE PTR [rax],al
   140006970:	rex.RXB add r10d,DWORD PTR [r11+0x68]
   140006974:	outs   dx,DWORD PTR ds:[rsi]
   140006975:	ja     0x1400069ba
   140006977:	jne    0x1400069eb
   140006979:	jae    0x1400069ea
   14000697b:	jb     0x14000697d
   14000697d:	add    bh,bh
   14000697f:	add    DWORD PTR [rcx+0x6e],ecx
   140006982:	jbe    0x1400069e5
   140006984:	ins    BYTE PTR es:[rdi],dx
   140006985:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x63655265
   14000698d:	je     0x14000698f
   14000698f:	add    BYTE PTR [rsi+0x2],ah
   140006992:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140006994:	jbe    0x1400069fb
   140006996:	push   rdi
   140006997:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14000699e:	scas   al,BYTE PTR es:[rdi]
   14000699f:	add    BYTE PTR [rbp+riz*2+0x73],al
   1400069a3:	je     0x140006a17
   1400069a5:	outs   dx,DWORD PTR ds:[rsi]
   1400069a6:	jns    0x1400069ff
   1400069a8:	imul   ebp,DWORD PTR [rsi+0x64],0x8400776f
   1400069af:	add    dl,BYTE PTR [rax+0x6f]
   1400069b2:	jae    0x140006a28
   1400069b4:	push   rcx
   1400069b5:	jne    0x140006a20
   1400069b7:	je     0x140006a06
   1400069b9:	gs jae 0x140006a2f
   1400069bc:	(bad)  
   1400069bd:	add    BYTE PTR gs:[edx+0x66654400],ah
   1400069c5:	push   rdi
   1400069c6:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   1400069cd:	outs   dx,DWORD PTR ds:[rsi]
   1400069ce:	movsxd edx,DWORD PTR [rdi+0x0]
   1400069d1:	add    BYTE PTR [rsi+0x74654701],cl
   1400069d7:	push   rax
   1400069d8:	outs   dx,DWORD PTR ds:[rsi]
   1400069d9:	imul   ebp,DWORD PTR [rsi+0x74],0x6e497265
   1400069e0:	outs   dx,WORD PTR ds:[rsi]
   1400069e2:	add    BYTE PTR [rax],al
   1400069e4:	mov    DWORD PTR [rcx],eax
   1400069e6:	rex.RXB
   1400069e7:	gs je  0x140006a3a
   1400069ea:	outs   dx,DWORD PTR ds:[rsi]
   1400069eb:	imul   ebp,DWORD PTR [rsi+0x74],0x72467265
   1400069f2:	(bad)  
   1400069f3:	ins    DWORD PTR es:[rdi],dx
   1400069f4:	rex.WB outs dx,BYTE PTR gs:[rsi]
   1400069f7:	outs   dx,WORD PTR ds:[rsi]
   1400069f9:	imul   rsi,QWORD PTR [rbx+0x74],0x79726f
   140006a01:	add    BYTE PTR [rdx+0x3],dl
   140006a04:	push   rbx
   140006a05:	imul   ebp,DWORD PTR [rcx+0x70],0x50
   140006a09:	outs   dx,DWORD PTR ds:[rsi]
   140006a0a:	imul   ebp,DWORD PTR [rsi+0x74],0x72467265
   140006a11:	(bad)  
   140006a12:	ins    DWORD PTR es:[rdi],dx
   140006a13:	gs rex.WRB
   140006a15:	gs jae 0x140006a8b
   140006a18:	(bad)  
   140006a19:	addr32 gs jae 0x140006a1d
   140006a1d:	add    BYTE PTR [rsi],cl
   140006a1f:	add    BYTE PTR [rdx+0x65],al
   140006a22:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
   140006a2a:	add    BYTE PTR [rax],al
   140006a2c:	loop   0x140006a30
   140006a2e:	push   rbx
   140006a2f:	outs   dx,BYTE PTR gs:[rsi]
   140006a31:	fs rex.WRB
   140006a33:	gs jae 0x140006aa9
   140006a36:	(bad)  
   140006a37:	addr32 gs push rdi
   140006a3a:	add    BYTE PTR [rax],al
   140006a3c:	lods   eax,DWORD PTR ds:[rsi]
   140006a3d:	add    DWORD PTR [rdi+0x65],eax
   140006a40:	je     0x140006a95
   140006a42:	jns    0x140006ab7
   140006a44:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006a46:	ins    BYTE PTR es:[rdi],dx
   140006a47:	outs   dx,DWORD PTR ds:[rsi]
   140006a48:	jb     0x140006a4a
   140006a4a:	(bad)  
   140006a4b:	add    BYTE PTR [rdx+rsi*2+0x61],al
   140006a4f:	ja     0x140006aa5
   140006a51:	gs js  0x140006ac8
   140006a54:	rex.RB js 0x140006aae
   140006a57:	add    bl,ch
   140006a59:	add    BYTE PTR [rbp+0x6e],al
   140006a5c:	fs push rax
   140006a5e:	(bad)  
   140006a5f:	imul   ebp,DWORD PTR [rsi+0x74],0x1820000
   140006a66:	rex.RXB
   140006a67:	gs je  0x140006aba
   140006a6a:	outs   dx,DWORD PTR ds:[rsi]
   140006a6b:	imul   ebp,DWORD PTR [rsi+0x74],0x65447265
   140006a72:	jbe    0x140006add
   140006a74:	movsxd esp,DWORD PTR [rbp+0x0]
   140006a77:	add    BYTE PTR [rcx+0x74654701],ah
   140006a7d:	push   rdx
   140006a7e:	(bad)  
   140006a7f:	ja     0x140006aca
   140006a81:	outs   dx,BYTE PTR ds:[rsi]
   140006a82:	jo     0x140006af9
   140006a84:	je     0x140006aca
   140006a86:	gs jbe 0x140006af2
   140006a89:	movsxd esp,DWORD PTR [rbp+0x49]
   140006a8c:	outs   dx,BYTE PTR ds:[rsi]
   140006a8d:	outs   dx,WORD PTR ds:[rsi]
   140006a8f:	push   rdi
   140006a90:	add    BYTE PTR [rax],al
   140006a92:	xchg   BYTE PTR [rcx],al
   140006a94:	rex.RXB
   140006a95:	gs je  0x140006ae8
   140006a98:	outs   dx,DWORD PTR ds:[rsi]
   140006a99:	imul   ebp,DWORD PTR [rsi+0x74],0x65447265
   140006aa0:	jbe    0x140006b0b
   140006aa2:	movsxd esp,DWORD PTR [rbp+0x73]
   140006aa5:	add    BYTE PTR [rdx+0x1],bh
   140006aa8:	rex.RXB
   140006aa9:	gs je  0x140006af9
   140006aac:	outs   dx,DWORD PTR ds:[rsi]
   140006aad:	outs   dx,BYTE PTR ds:[rsi]
   140006aae:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6f666e49
   140006ab6:	push   rdi
   140006ab7:	add    ch,dh
   140006ab9:	add    BYTE PTR [rbp+0x6e],al
   140006abc:	jne    0x140006b2b
   140006abe:	imul   r14d,DWORD PTR [rbx+0x70],0x4d79616c
   140006ac6:	outs   dx,DWORD PTR ds:[rsi]
   140006ac7:	outs   dx,BYTE PTR ds:[rsi]
   140006ac8:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0xf40073
   140006ad0:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140006ad2:	jne    0x140006b41
   140006ad4:	imul   r14d,DWORD PTR [rbx+0x70],0x4479616c
   140006adc:	gs jbe 0x140006b48
   140006adf:	movsxd esp,DWORD PTR [rbp+0x73]
   140006ae2:	push   rdi
   140006ae3:	add    BYTE PTR [rbp+0x53],dl
   140006ae6:	rex.RB push r10
   140006ae8:	xor    esi,DWORD PTR [rdx]
   140006aea:	cs fs ins BYTE PTR es:[rdi],dx
   140006aed:	ins    BYTE PTR es:[rdi],dx
   140006aee:	add    BYTE PTR [rax],al
   140006af0:	rex.WR add al,0x66
   140006af3:	jb     0x140006b5a
   140006af5:	add    BYTE PTR gs:[rax],al
   140006af8:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140006aff:	movsxd eax,DWORD PTR [rax]
   140006b01:	add    BYTE PTR [rdi+0x61635f00],bh
   140006b07:	ins    BYTE PTR es:[rdi],dx
   140006b08:	ins    BYTE PTR es:[rdi],dx
   140006b09:	outs   dx,BYTE PTR ds:[rsi]
   140006b0a:	gs ja  0x140006b75
   140006b0d:	add    BYTE PTR [rbp+0x0],dl
   140006b10:	pop    rdi
   140006b11:	pop    rax
   140006b12:	movsxd esi,DWORD PTR [rax+0x74]
   140006b15:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140006b1e:	pop    rdi
   140006b1f:	(bad)  
   140006b20:	ins    DWORD PTR es:[rdi],dx
   140006b21:	jae    0x140006b8a
   140006b23:	pop    rdi
   140006b24:	gs js  0x140006b90
   140006b27:	je     0x140006b29
   140006b29:	add    BYTE PTR [rbp+0x775f5f00],bl
   140006b2f:	addr32 gs je 0x140006ba0
   140006b33:	(bad)  
   140006b34:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140006b3b:	add    BYTE PTR [rsi+0x735f5f00],cl
   140006b41:	gs je  0x140006ba3
   140006b44:	(bad)  
   140006b45:	jo     0x140006bb7
   140006b47:	pop    rdi
   140006b48:	je     0x140006bc3
   140006b4a:	jo     0x140006bb1
   140006b4c:	add    BYTE PTR [rax],al
   140006b4e:	xor    al,BYTE PTR [riz*2+0x746978]
   140006b55:	add    BYTE PTR [rsi],cl
   140006b57:	add    DWORD PTR [rdi+0x65],ebx
   140006b5a:	js     0x140006bc5
   140006b5c:	je     0x140006b5e
   140006b5e:	rol    DWORD PTR [rax],0x5f
   140006b61:	movsxd esp,DWORD PTR [rbp+0x78]
   140006b64:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140006b6c:	jae    0x140006bd3
   140006b6e:	je     0x140006be5
   140006b70:	jae    0x140006bd7
   140006b72:	jb     0x140006be1
   140006b74:	(bad)  
   140006b75:	je     0x140006bdf
   140006b77:	gs jb  0x140006bec
   140006b7a:	add    BYTE PTR [rax],al
   140006b7c:	jge    0x140006b7f
   140006b7e:	pop    rdi
   140006b7f:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140006b86:	ins    DWORD PTR es:[rdi],dx
   140006b87:	add    BYTE PTR [rdi+0x0],dl
   140006b8a:	pop    rdi
   140006b8b:	pop    rdi
   140006b8c:	rex.XB pop r15
   140006b8e:	jae    0x140006c00
   140006b90:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140006b94:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140006b9b:	ins    BYTE PTR es:[rdi],dx
   140006b9c:	gs jb  0x140006b9f
   140006b9f:	add    BYTE PTR [rdx+0x63775f03],al
   140006ba5:	ins    DWORD PTR es:[rdi],dx
   140006ba6:	fs ins BYTE PTR es:[rdi],dx
   140006ba8:	outs   dx,BYTE PTR ds:[rsi]
   140006ba9:	add    BYTE PTR [rdi],ah
   140006bab:	add    DWORD PTR [rdi+0x66],ebx
   140006bae:	ins    DWORD PTR es:[rdi],dx
   140006baf:	outs   dx,DWORD PTR ds:[rsi]
   140006bb0:	fs add BYTE PTR gs:[rax],al
   140006bb4:	rol    BYTE PTR [rax],cl
   140006bb6:	pop    rdi
   140006bb7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140006bba:	ins    DWORD PTR es:[rdi],dx
   140006bbb:	outs   dx,DWORD PTR ds:[rsi]
   140006bbc:	fs add BYTE PTR gs:[rax],al
   140006bc0:	pop    rbx
   140006bc1:	add    BYTE PTR [rdi+0x5f],bl
   140006bc4:	rex.XB js 0x140006c3f
   140006bc7:	rex.RX jb 0x140006c2b
   140006bca:	ins    DWORD PTR es:[rdi],dx
   140006bcb:	gs rex.W (bad) 
   140006bce:	outs   dx,BYTE PTR ds:[rsi]
   140006bcf:	fs ins BYTE PTR es:[rdi],dx
   140006bd1:	gs jb  0x140006c07
   140006bd4:	add    BYTE PTR [rax],al
   140006bd6:	ins    DWORD PTR es:[rdi],dx
   140006bd7:	jae    0x140006c4f
   140006bd9:	movsxd esi,DWORD PTR [rdx+0x74]
   140006bdc:	cs fs ins BYTE PTR es:[rdi],dx
   140006bdf:	ins    BYTE PTR es:[rdi],dx
   140006be0:	add    BYTE PTR [rax],al
   140006be2:	(bad)  
   140006be3:	add    BYTE PTR [rdi],bh
   140006be5:	je     0x140006c4c
   140006be7:	jb     0x140006c56
   140006be9:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140006bf0:	pop    rcx
   140006bf1:	pop    r8
   140006bf3:	pop    rax
   140006bf4:	pop    rdx
   140006bf5:	add    BYTE PTR [rdx],cl
   140006bf7:	add    BYTE PTR [rax+0x65],cl
   140006bfa:	(bad)  
   140006bfb:	jo     0x140006c50
   140006bfd:	gs je  0x140006c49
   140006c00:	outs   dx,BYTE PTR ds:[rsi]
   140006c01:	outs   dx,WORD PTR ds:[rsi]
   140006c03:	jb     0x140006c72
   140006c05:	(bad)  
   140006c06:	je     0x140006c71
   140006c08:	outs   dx,DWORD PTR ds:[rsi]
   140006c09:	outs   dx,BYTE PTR ds:[rsi]
   140006c0a:	add    BYTE PTR [rax],al
   140006c0c:	add    BYTE PTR es:[rbx+0x6f],al
   140006c10:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006c12:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140006c1a:	rex.RB js 0x140006c1d
   140006c1d:	add    BYTE PTR [rip+0x74654700],al        # 0x1b465b323
   140006c23:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006c25:	ins    DWORD PTR es:[rdi],dx
   140006c26:	ins    DWORD PTR es:[rdi],dx
   140006c27:	(bad)  
   140006c28:	outs   dx,BYTE PTR ds:[rsi]
   140006c29:	imul   r13,QWORD PTR fs:[rsi+0x65],0x30057
   140006c32:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006c34:	movsxd esp,DWORD PTR [rcx+0x6c]
   140006c37:	rex.RX jb 0x140006c9f
   140006c3a:	add    BYTE PTR gs:[rdx+0x0],al
   140006c3e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006c40:	push   rbp
   140006c41:	outs   dx,BYTE PTR ds:[rsi]
   140006c42:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140006c49:	imul   edi,DWORD PTR [rdx+0x65],0x80000
   140006c50:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006c52:	rex.XB jb 0x140006cba
   140006c55:	(bad)  
   140006c56:	je     0x140006cbd
   140006c58:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006c5a:	jae    0x140006cd0
   140006c5c:	(bad)  
   140006c5d:	outs   dx,BYTE PTR ds:[rsi]
   140006c5e:	movsxd esp,DWORD PTR [rbp+0x0]
   140006c61:	add    BYTE PTR [rip+0x74654700],al        # 0x1b465b367
   140006c67:	rex.WR (bad) 
   140006c69:	jae    0x140006cdf
   140006c6b:	rex.RB jb 0x140006ce0
   140006c6e:	outs   dx,DWORD PTR ds:[rsi]
   140006c6f:	jb     0x140006c71
   140006c71:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56cbf77
   140006c77:	gs jo  0x140006c7a
   140006c7a:	and    BYTE PTR [rax],al
   140006c7c:	rex.RXB
   140006c7d:	gs je  0x140006cd3
   140006c80:	je     0x140006ce3
   140006c82:	jb     0x140006cf8
   140006c84:	jne    0x140006cf6
   140006c86:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006c88:	outs   dx,WORD PTR ds:[rsi]
   140006c8a:	push   rdi
   140006c8b:	add    BYTE PTR [rdi],cl
   140006c8d:	add    BYTE PTR [rbx+0x65],dl
   140006c90:	je     0x140006ce7
   140006c92:	outs   dx,BYTE PTR ds:[rsi]
   140006c93:	push   0x6c646e61
   140006c98:	gs fs rex.RB js 0x140006d00
   140006c9d:	gs jo  0x140006d14
   140006ca0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140006ca7:	gs jb  0x140006caa
   140006caa:	adc    eax,DWORD PTR [rax]
   140006cac:	rex.RXB
   140006cad:	gs je  0x140006cfd
   140006cb0:	outs   dx,DWORD PTR ds:[rsi]
   140006cb1:	fs jne 0x140006d20
   140006cb4:	gs rex.W (bad) 
   140006cb7:	outs   dx,BYTE PTR ds:[rsi]
   140006cb8:	fs ins BYTE PTR es:[rdi],dx
   140006cba:	gs push rdi
   140006cbc:	add    BYTE PTR [rax],al
   140006cbe:	add    BYTE PTR [rax],al
   140006cc0:	push   rcx
   140006cc1:	jne    0x140006d28
   140006cc3:	jb     0x140006d3e
   140006cc5:	push   rax
   140006cc6:	gs jb  0x140006d2f
   140006cc9:	outs   dx,DWORD PTR ds:[rsi]
   140006cca:	jb     0x140006d39
   140006ccc:	(bad)  
   140006ccd:	outs   dx,BYTE PTR ds:[rsi]
   140006cce:	movsxd esp,DWORD PTR [rbp+0x43]
   140006cd1:	outs   dx,DWORD PTR ds:[rsi]
   140006cd2:	jne    0x140006d42
   140006cd4:	je     0x140006d3b
   140006cd6:	jb     0x140006cd8
   140006cd8:	or     eax,0x74654700
   140006cdd:	rex.XB jne 0x140006d52
   140006ce0:	jb     0x140006d47
   140006ce2:	outs   dx,BYTE PTR ds:[rsi]
   140006ce3:	je     0x140006d35
   140006ce5:	jb     0x140006d56
   140006ce7:	movsxd esp,DWORD PTR [rbp+0x73]
   140006cea:	jae    0x140006d35
   140006cec:	add    BYTE PTR fs:[rcx],dl
   140006cef:	add    BYTE PTR [rdi+0x65],al
   140006cf2:	je     0x140006d37
   140006cf4:	jne    0x140006d68
   140006cf6:	jb     0x140006d5d
   140006cf8:	outs   dx,BYTE PTR ds:[rsi]
   140006cf9:	je     0x140006d4f
   140006cfb:	push   0x64616572
   140006d00:	rex.WB
   140006d01:	add    BYTE PTR fs:[rax],al
   140006d04:	adc    al,0x0
   140006d06:	rex.RXB
   140006d07:	gs je  0x140006d5d
   140006d0a:	jns    0x140006d7f
   140006d0c:	je     0x140006d73
   140006d0e:	ins    DWORD PTR es:[rdi],dx
   140006d0f:	push   rsp
   140006d10:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140006d17:	ins    BYTE PTR es:[rdi],dx
   140006d18:	gs push rsp
   140006d1a:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140006d21:	gs je  0x140006d78
   140006d24:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140006d2b:	je     0x140006d2d
   140006d2d:	add    BYTE PTR [rdx],al
   140006d2f:	add    BYTE PTR [rdx+0x74],dl
   140006d32:	ins    BYTE PTR es:[rdi],dx
   140006d33:	rex.XB (bad) 
   140006d35:	jo     0x140006dab
   140006d37:	jne    0x140006dab
   140006d39:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140006d3c:	outs   dx,BYTE PTR ds:[rsi]
   140006d3d:	je     0x140006da4
   140006d3f:	js     0x140006db5
   140006d41:	add    BYTE PTR [rcx],cl
   140006d43:	add    BYTE PTR [rdx+0x74],dl
   140006d46:	ins    BYTE PTR es:[rdi],dx
   140006d47:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006d49:	outs   dx,DWORD PTR ds:[rsi]
   140006d4a:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140006d4e:	jne    0x140006dbe
   140006d50:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140006d54:	outs   dx,BYTE PTR ds:[rsi]
   140006d55:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140006d57:	je     0x140006dcb
   140006d59:	jns    0x140006d5b
   140006d5b:	add    BYTE PTR [rdi],cl
   140006d5d:	add    BYTE PTR [rdx+0x74],dl
   140006d60:	ins    BYTE PTR es:[rdi],dx
   140006d61:	push   rsi
   140006d62:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140006d69:	outs   dx,BYTE PTR ds:[rsi]
   140006d6a:	ja     0x140006dd5
   140006d6c:	outs   dx,BYTE PTR ds:[rsi]
   140006d6d:	add    BYTE PTR fs:[rax],al
   140006d70:	adc    DWORD PTR [rax],eax
   140006d72:	push   rbp
   140006d73:	outs   dx,BYTE PTR ds:[rsi]
   140006d74:	push   0x6c646e61
   140006d79:	gs fs rex.RB js 0x140006de1
   140006d7e:	gs jo  0x140006df5
   140006d81:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140006d88:	gs jb  0x140006d8b
   140006d8b:	add    BYTE PTR [rax+rax*1],cl
   140006d8e:	rex.RXB
   140006d8f:	gs je  0x140006dd5
   140006d92:	jne    0x140006e06
   140006d94:	jb     0x140006dfb
   140006d96:	outs   dx,BYTE PTR ds:[rsi]
   140006d97:	je     0x140006de9
   140006d99:	jb     0x140006e0a
   140006d9b:	movsxd esp,DWORD PTR [rbp+0x73]
   140006d9e:	jae    0x140006da0
   140006da0:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140006da5:	ins    DWORD PTR es:[rdi],dx
   140006da6:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140006dad:	outs   dx,DWORD PTR ds:[rsi]
   140006dae:	movsxd esp,DWORD PTR [rbp+0x73]
   140006db1:	jae    0x140006db3
   140006db3:	add    BYTE PTR [rcx+0x70],ah
   140006db6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de12d
   140006dc0:	outs   dx,DWORD PTR ds:[rsi]
   140006dc1:	jb     0x140006e28
   140006dc3:	sub    eax,0x70616568
   140006dc8:	sub    eax,0x322d316c
   140006dcd:	sub    eax,0x6c642e30
   140006dd2:	ins    BYTE PTR es:[rdi],dx
   140006dd3:	add    BYTE PTR [rcx+0x70],ah
   140006dd6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de14d
   140006de0:	outs   dx,DWORD PTR ds:[rsi]
   140006de1:	jb     0x140006e48
   140006de3:	sub    eax,0x2d6d6f63
   140006de8:	ins    BYTE PTR es:[rdi],dx
   140006de9:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e319b20
   140006def:	fs ins BYTE PTR es:[rdi],dx
   140006df1:	ins    BYTE PTR es:[rdi],dx
   140006df2:	add    BYTE PTR [rax],al
   140006df4:	(bad)  
   140006df5:	jo     0x140006e60
   140006df7:	sub    eax,0x772d736d
   140006dfc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140006e03:	sub    eax,0x636f7270
   140006e08:	gs jae 0x140006e7e
   140006e0b:	outs   dx,BYTE PTR gs:[rsi]
   140006e0d:	jbe    0x140006e78
   140006e0f:	jb     0x140006e80
   140006e11:	outs   dx,BYTE PTR ds:[rsi]
   140006e12:	ins    DWORD PTR es:[rdi],dx
   140006e13:	outs   dx,BYTE PTR gs:[rsi]
   140006e15:	je     0x140006e44
   140006e17:	ins    BYTE PTR es:[rdi],dx
   140006e18:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e309b50
   140006e1e:	fs ins BYTE PTR es:[rdi],dx
   140006e20:	ins    BYTE PTR es:[rdi],dx
   140006e21:	add    BYTE PTR [rcx+0x70],ah
   140006e24:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de19b
   140006e2e:	outs   dx,DWORD PTR ds:[rsi]
   140006e2f:	jb     0x140006e96
   140006e31:	sub    eax,0x70616568
   140006e36:	sub    eax,0x312d326c
   140006e3b:	sub    eax,0x6c642e30
   140006e40:	ins    BYTE PTR es:[rdi],dx
   140006e41:	add    BYTE PTR [rcx+0x70],ah
   140006e44:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de1bb
   140006e4e:	outs   dx,DWORD PTR ds:[rsi]
   140006e4f:	jb     0x140006eb6
   140006e51:	sub    eax,0x6f727265
   140006e56:	jb     0x140006ec0
   140006e58:	(bad)  
   140006e59:	outs   dx,BYTE PTR ds:[rsi]
   140006e5a:	fs ins BYTE PTR es:[rdi],dx
   140006e5c:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140006e63:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac649c9a
   140006e69:	ins    BYTE PTR es:[rdi],dx
   140006e6a:	add    BYTE PTR [rax],al
   140006e6c:	(bad)  
   140006e6d:	jo     0x140006ed8
   140006e6f:	sub    eax,0x772d736d
   140006e74:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140006e7b:	sub    eax,0x636e7973
   140006e80:	push   0x2d316c2d
   140006e85:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac649cbb
   140006e8b:	ins    BYTE PTR es:[rdi],dx
   140006e8c:	add    BYTE PTR [rax],al
   140006e8e:	(bad)  
   140006e8f:	jo     0x140006efa
   140006e91:	sub    eax,0x772d736d
   140006e96:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140006e9d:	sub    eax,0x636f7270
   140006ea2:	gs jae 0x140006f18
   140006ea5:	je     0x140006f0f
   140006ea7:	jb     0x140006f0e
   140006ea9:	(bad)  
   140006eaa:	fs jae 0x140006eda
   140006ead:	ins    BYTE PTR es:[rdi],dx
   140006eae:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e329be5
   140006eb4:	fs ins BYTE PTR es:[rdi],dx
   140006eb6:	ins    BYTE PTR es:[rdi],dx
   140006eb7:	add    BYTE PTR [rcx+0x70],ah
   140006eba:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de231
   140006ec4:	outs   dx,DWORD PTR ds:[rsi]
   140006ec5:	jb     0x140006f2c
   140006ec7:	sub    eax,0x7262696c
   140006ecc:	(bad)  
   140006ecd:	jb     0x140006f48
   140006ecf:	ins    BYTE PTR es:[rdi],dx
   140006ed0:	outs   dx,DWORD PTR ds:[rsi]
   140006ed1:	(bad)  
   140006ed2:	fs gs jb 0x140006f03
   140006ed6:	ins    BYTE PTR es:[rdi],dx
   140006ed7:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e309c0f
   140006edd:	fs ins BYTE PTR es:[rdi],dx
   140006edf:	ins    BYTE PTR es:[rdi],dx
   140006ee0:	add    BYTE PTR [rax],al
   140006ee2:	(bad)  
   140006ee3:	jo     0x140006f4e
   140006ee5:	sub    eax,0x772d736d
   140006eea:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140006ef1:	sub    eax,0x666f7270
   140006ef6:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140006efe:	sub    eax,0x6c642e30
   140006f03:	ins    BYTE PTR es:[rdi],dx
   140006f04:	add    BYTE PTR [rax],al
   140006f06:	(bad)  
   140006f07:	jo     0x140006f72
   140006f09:	sub    eax,0x772d736d
   140006f0e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140006f15:	sub    eax,0x69737973
   140006f1a:	outs   dx,BYTE PTR ds:[rsi]
   140006f1b:	outs   dx,WORD PTR ds:[rsi]
   140006f1d:	sub    eax,0x322d316c
   140006f22:	sub    eax,0x6c642e31
   140006f27:	ins    BYTE PTR es:[rdi],dx
   140006f28:	add    BYTE PTR [rax],al
   140006f2a:	(bad)  
   140006f2b:	jo     0x140006f96
   140006f2d:	sub    eax,0x772d736d
   140006f32:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140006f39:	sub    eax,0x736c7472
   140006f3e:	jne    0x140006fb0
   140006f40:	jo     0x140006fb1
   140006f42:	jb     0x140006fb8
   140006f44:	sub    eax,0x322d316c
   140006f49:	sub    eax,0x6c642e30
   140006f4e:	ins    BYTE PTR es:[rdi],dx
   140006f4f:	add    BYTE PTR [rax],al
   140006f51:	add    BYTE PTR [rbx+0x6f],al
   140006f54:	ins    DWORD PTR es:[rdi],dx
   140006f55:	ins    DWORD PTR es:[rdi],dx
   140006f56:	(bad)  
   140006f57:	outs   dx,BYTE PTR ds:[rsi]
   140006f58:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   140006f61:	addr32 jbe 0x140006fbb
   140006f64:	add    BYTE PTR [rax],al
   140006f66:	add    eax,DWORD PTR [rax]
   140006f68:	ins    BYTE PTR es:[rdi],dx
   140006f69:	jae    0x140006fdf
   140006f6b:	jb     0x140006fd0
   140006f6d:	ins    DWORD PTR es:[rdi],dx
   140006f6e:	jo     0x140006fc7
   140006f70:	add    BYTE PTR [rax],al
   140006f72:	or     eax,DWORD PTR [rax]
   140006f74:	ins    BYTE PTR es:[rdi],dx
   140006f75:	jae    0x140006feb
   140006f77:	jb     0x140006fe5
   140006f79:	outs   dx,BYTE PTR gs:[rsi]
   140006f7b:	push   rdi
   140006f7c:	add    BYTE PTR [rax],al
   140006f7e:	(bad)  
   140006f7f:	jo     0x140006fea
   140006f81:	sub    eax,0x772d736d
   140006f86:	imul   ebp,DWORD PTR [rsi+0x2d],0x6f636873
   140006f8d:	jb     0x140006ff4
   140006f8f:	sub    eax,0x6f73626f
   140006f94:	ins    BYTE PTR es:[rdi],dx
   140006f95:	gs je  0x140006ffd
   140006f98:	sub    eax,0x312d316c
   140006f9d:	sub    eax,0x6c642e30
   140006fa2:	ins    BYTE PTR es:[rdi],dx
   140006fa3:	add    BYTE PTR [rcx+0x70],ah
   140006fa6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de31d
   140006fb0:	outs   dx,DWORD PTR ds:[rsi]
   140006fb1:	jb     0x140007018
   140006fb3:	sub    eax,0x69727473
   140006fb8:	outs   dx,BYTE PTR ds:[rsi]
   140006fb9:	addr32 sub eax,0x6f73626f
   140006fbf:	ins    BYTE PTR es:[rdi],dx
   140006fc0:	gs je  0x140007028
   140006fc3:	sub    eax,0x312d316c
   140006fc8:	sub    eax,0x6c642e30
   140006fcd:	ins    BYTE PTR es:[rdi],dx
   140006fce:	add    BYTE PTR [rax],al
   140006fd0:	(bad)  
   140006fd1:	add    BYTE PTR [rbp+0x75],cl
   140006fd4:	ins    BYTE PTR es:[rdi],dx
   140006fd5:	imul   r14d,DWORD PTR [rsi+0x0],0x69706100
   140006fdd:	sub    eax,0x772d736d
   140006fe2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140006fe9:	sub    eax,0x6e72656b
   140006fee:	gs ins BYTE PTR es:[rdi],dx
   140006ff0:	xor    esi,DWORD PTR [rdx]
   140006ff2:	sub    eax,0x6167656c
   140006ff7:	movsxd edi,DWORD PTR [rcx+0x2d]
   140006ffa:	ins    BYTE PTR es:[rdi],dx
   140006ffb:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e319d32
   140007001:	fs ins BYTE PTR es:[rdi],dx
   140007003:	ins    BYTE PTR es:[rdi],dx
   140007004:	add    BYTE PTR [rax],al
   140007006:	push   rdx
   140007007:	add    BYTE PTR [rbp+0x74],al
   14000700a:	ja     0x140007060
   14000700c:	jb     0x14000706f
   14000700e:	movsxd esp,DWORD PTR [rbp+0x4d]
   140007011:	gs jae 0x140007087
   140007014:	(bad)  
   140007015:	add    BYTE PTR gs:[esi+0x0],al
   14000701a:	rex.RB je 0x140007094
   14000701d:	rex.RXB
   14000701e:	gs je  0x140007075
   140007021:	jb     0x140007084
   140007023:	movsxd esp,DWORD PTR [rbp+0x4c]
   140007026:	outs   dx,DWORD PTR ds:[rsi]
   140007027:	addr32 addr32 gs jb 0x140007074
   14000702c:	(bad)  
   14000702d:	outs   dx,BYTE PTR ds:[rsi]
   14000702e:	fs ins BYTE PTR es:[rdi],dx
   140007030:	add    BYTE PTR gs:[rbp+0x0],al
   140007034:	rex.RB je 0x1400070ae
   140007037:	rex.RXB
   140007038:	gs je  0x14000708f
   14000703b:	jb     0x14000709e
   14000703d:	movsxd esp,DWORD PTR [rbp+0x45]
   140007040:	outs   dx,BYTE PTR ds:[rsi]
   140007041:	(bad)  
   140007042:	(bad)  
   140007043:	ins    BYTE PTR es:[rdi],dx
   140007044:	gs rex.WR
   140007046:	gs jbe 0x1400070ae
   140007049:	ins    BYTE PTR es:[rdi],dx
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rbp+0x74],r8b
   140007050:	ja     0x140007099
   140007052:	gs je  0x1400070a9
   140007055:	jb     0x1400070b8
   140007057:	movsxd esp,DWORD PTR [rbp+0x45]
   14000705a:	outs   dx,BYTE PTR ds:[rsi]
   14000705b:	(bad)  
   14000705c:	(bad)  
   14000705d:	ins    BYTE PTR es:[rdi],dx
   14000705e:	gs rex.RX ins BYTE PTR es:[rdi],dx
   140007061:	(bad)  
   140007062:	addr32 jae 0x140007065
   140007065:	add    BYTE PTR [rbp+0x0],cl
   140007068:	rex.RB je 0x1400070e2
   14000706b:	push   rdx
   14000706c:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   140007075:	(bad)  
   140007076:	movsxd esp,DWORD PTR [rbp+0x47]
   140007079:	jne    0x1400070e4
   14000707b:	fs jae 0x1400070d5
   14000707e:	add    BYTE PTR [rax],al
   140007080:	push   rsp
   140007081:	add    BYTE PTR [rbp+0x74],al
   140007084:	ja     0x1400070db
   140007086:	outs   dx,BYTE PTR ds:[rsi]
   140007087:	jb     0x1400070ee
   140007089:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   140007091:	(bad)  
   140007092:	movsxd esp,DWORD PTR [rbp+0x47]
   140007095:	jne    0x140007100
   140007097:	fs jae 0x14000709a
   14000709a:	outs   dx,BYTE PTR ds:[rsi]
   14000709b:	je     0x140007101
   14000709d:	ins    BYTE PTR es:[rdi],dx
   14000709e:	ins    BYTE PTR es:[rdi],dx
   14000709f:	cs fs ins BYTE PTR es:[rdi],dx
   1400070a2:	ins    BYTE PTR es:[rdi],dx
   1400070a3:	add    BYTE PTR [rax],ch
   1400070a5:	add    BYTE PTR [rcx+0x6d],cl
   1400070a8:	ins    DWORD PTR es:[rdi],dx
   1400070a9:	imul   r14d,DWORD PTR [rbx+0x61],0x54656c62
   1400070b1:	gs js  0x140007128
   1400070b4:	rex.RX jb 0x140007118
   1400070b7:	ins    DWORD PTR es:[rdi],dx
   1400070b8:	gs push rbx
   1400070ba:	gs jb  0x140007133
   1400070bd:	imul   esp,DWORD PTR [rbx+0x65],0x4d490000
   1400070c4:	xor    r14,QWORD PTR [r10]
   1400070c7:	cs fs ins BYTE PTR es:[rdi],dx
   1400070ca:	ins    BYTE PTR es:[rdi],dx
   1400070cb:	add    BYTE PTR [rdx],al
   1400070cd:	add    BYTE PTR [rbx+0x72],al
   1400070d0:	gs (bad) 
   1400070d2:	je     0x140007139
   1400070d4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400070d6:	je     0x14000713d
   1400070d8:	jb     0x14000713b
   1400070da:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400070de:	outs   dx,BYTE PTR ds:[rsi]
   1400070df:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400070e1:	outs   dx,BYTE PTR ds:[rsi]
   1400070e2:	je     0x140007149
   1400070e4:	js     0x14000715a
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	adc    eax,DWORD PTR [rax]
   1400070ea:	push   rbx
   1400070eb:	gs je  0x140007137
   1400070ee:	outs   dx,BYTE PTR ds:[rsi]
   1400070ef:	je     0x140007156
   1400070f1:	jb     0x140007154
   1400070f3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400070f7:	outs   dx,BYTE PTR ds:[rsi]
   1400070f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400070fa:	outs   dx,BYTE PTR ds:[rsi]
   1400070fb:	imul   sp,WORD PTR [rdi+0x75],0x6172
   140007101:	je     0x14000716c
   140007103:	outs   dx,DWORD PTR ds:[rsi]
   140007104:	outs   dx,BYTE PTR ds:[rsi]
   140007105:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007107:	je     0x14000716e
   140007109:	jb     0x14000716c
   14000710b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000710f:	outs   dx,BYTE PTR ds:[rsi]
   140007110:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007112:	outs   dx,BYTE PTR ds:[rsi]
   140007113:	je     0x14000717a
   140007115:	js     0x14000718b
   140007117:	add    BYTE PTR [rsi],dl
   140007119:	add    BYTE PTR [rbx+0x65],dl
   14000711c:	je     0x14000716e
   14000711e:	jb     0x14000718f
   140007120:	jo     0x140007187
   140007122:	jb     0x140007198
   140007124:	jns    0x14000716f
   140007126:	outs   dx,BYTE PTR ds:[rsi]
   140007127:	je     0x14000718e
   140007129:	jb     0x14000718c
   14000712b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000712f:	outs   dx,BYTE PTR ds:[rsi]
   140007130:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007132:	outs   dx,BYTE PTR ds:[rsi]
   140007133:	je     0x14000719a
   140007135:	js     0x1400071ab
   140007137:	add    BYTE PTR [rsi],cl
   140007139:	add    BYTE PTR [rdx+0x65],dl
   14000713c:	imul   esi,DWORD PTR [ebx+0x74],0x754f7265
   140007144:	je     0x1400071b6
   140007146:	jne    0x1400071bc
   140007148:	rex.XB (bad) 
   14000714a:	ins    BYTE PTR es:[rdi],dx
   14000714b:	ins    BYTE PTR es:[rdi],dx
   14000714c:	(bad)  
   14000714e:	movsxd ebp,DWORD PTR [rbx+0x49]
   140007151:	outs   dx,BYTE PTR ds:[rsi]
   140007152:	je     0x1400071b9
   140007154:	jb     0x1400071b7
   140007156:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000715a:	outs   dx,BYTE PTR ds:[rsi]
   14000715b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000715d:	outs   dx,BYTE PTR ds:[rsi]
   14000715e:	je     0x1400071c5
   140007160:	js     0x1400071d6
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    al,0x0
   140007166:	rex.R
   140007167:	gs jae 0x1400071de
   14000716a:	jb     0x1400071db
   14000716c:	jns    0x1400071b7
   14000716e:	outs   dx,BYTE PTR ds:[rsi]
   14000716f:	je     0x1400071d6
   140007171:	jb     0x1400071d4
   140007173:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140007177:	outs   dx,BYTE PTR ds:[rsi]
   140007178:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000717a:	outs   dx,BYTE PTR ds:[rsi]
   14000717b:	je     0x1400071e2
   14000717d:	js     0x1400071f3
   14000717f:	add    BYTE PTR [rip+0x6f725000],cl        # 0x1af72c185
   140007185:	movsxd esp,DWORD PTR [rbp+0x73]
   140007188:	jae    0x1400071da
   14000718a:	outs   dx,DWORD PTR ds:[rsi]
   14000718b:	imul   ebp,DWORD PTR [rsi+0x74],0x72467265
   140007192:	(bad)  
   140007193:	ins    DWORD PTR es:[rdi],dx
   140007194:	gs jae 0x1400071e0
   140007197:	outs   dx,BYTE PTR ds:[rsi]
   140007198:	je     0x1400071ff
   14000719a:	jb     0x1400071fd
   14000719c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400071a0:	outs   dx,BYTE PTR ds:[rsi]
   1400071a1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400071a3:	outs   dx,BYTE PTR ds:[rsi]
   1400071a4:	je     0x14000720b
   1400071a6:	js     0x14000721c
   1400071a8:	add    BYTE PTR [rax],al
   1400071aa:	rex.WRX
   1400071ab:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400071ad:	jo     0x140007224
   1400071af:	je     0x1400071df
   1400071b1:	fs ins BYTE PTR es:[rdi],dx
   1400071b3:	ins    BYTE PTR es:[rdi],dx
   1400071b4:	add    BYTE PTR [rax],al
   1400071b6:	loope  0x1400071ba
   1400071b8:	push   rbx
   1400071b9:	outs   dx,BYTE PTR gs:[rsi]
   1400071bb:	fs rex.WRB
   1400071bd:	gs jae 0x140007233
   1400071c0:	(bad)  
   1400071c1:	addr32 gs push rsp
   1400071c4:	imul   ebp,DWORD PTR [rbp+0x65],0x5774756f
   1400071cb:	add    BYTE PTR [rcx+0x3],ch
   1400071ce:	pop    rdi
   1400071cf:	jbe    0x140007244
   1400071d1:	outs   dx,BYTE PTR ds:[rsi]
   1400071d2:	ja     0x140007244
   1400071d4:	jb     0x14000723f
   1400071d6:	outs   dx,BYTE PTR ds:[rsi]
   1400071d7:	je     0x14000723f
   1400071d9:	add    BYTE PTR [rbx],al
   1400071db:	add    BYTE PTR [rdx+0x65],dl
   1400071de:	addr32 rex.XB jb 0x140007247
   1400071e2:	(bad)  
   1400071e3:	je     0x14000724a
   1400071e5:	rex.WXB
   1400071e6:	gs jns 0x14000722e
   1400071e9:	js     0x140007242
   1400071eb:	add    BYTE PTR [rsi],bl
   1400071ed:	add    BYTE PTR [rdx+0x65],dl
   1400071f0:	addr32 rex.WRXB jo 0x140007259
   1400071f4:	outs   dx,BYTE PTR ds:[rsi]
   1400071f5:	rex.WXB
   1400071f6:	gs jns 0x14000723e
   1400071f9:	js     0x140007252
   1400071fb:	add    BYTE PTR [rax],al
   1400071fd:	add    BYTE PTR [rdx+0x65],dl
   140007200:	rex.XB ins BYTE PTR es:[edi],dx
   140007203:	outs   dx,DWORD PTR ds:[rsi]
   140007204:	jae    0x14000726b
   140007206:	rex.WXB
   140007207:	gs jns 0x14000720a
   14000720a:	sub    al,0x0
   14000720c:	push   rdx
   14000720d:	gs addr32 push rbx
   140007210:	gs je  0x140007269
   140007213:	(bad)  
   140007214:	ins    BYTE PTR es:[rdi],dx
   140007215:	jne    0x14000727c
   140007217:	rex.RB js 0x140007271
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	(bad)  
   14000721d:	add    BYTE PTR [rdx+0x65],dl
   140007220:	addr32 rex.R
   140007222:	gs ins BYTE PTR es:[rdi],dx
   140007224:	gs je  0x14000728c
   140007227:	rex.WXB
   140007228:	gs jns 0x140007281
   14000722b:	(bad)  
   14000722c:	ins    BYTE PTR es:[rdi],dx
   14000722d:	jne    0x140007294
   14000722f:	push   rdi
   140007230:	add    BYTE PTR [rax],al
   140007232:	add    DWORD PTR [rax],eax
   140007234:	push   rdx
   140007235:	gs jae 0x1400072a7
   140007238:	ins    BYTE PTR es:[rdi],dx
   140007239:	jbe    0x1400072a0
   14000723b:	rex.R
   14000723c:	gs ins BYTE PTR es:[rdi],dx
   14000723e:	(bad)  
   14000723f:	jns    0x14000728d
   140007241:	outs   dx,DWORD PTR ds:[rsi]
   140007242:	(bad)  
   140007243:	fs gs fs push r8
   140007248:	rex.WB add BYTE PTR [r8],al
   14000724b:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000724f:	(bad)  
   140007250:	jns    0x14000729e
   140007252:	outs   dx,DWORD PTR ds:[rsi]
   140007253:	(bad)  
   140007254:	fs rex.RX (bad) 
   140007257:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000725f:	imul   eax,DWORD PTR [rax],0x0
   140007262:	(bad)  
   140007263:	jo     0x1400072ce
   140007265:	sub    eax,0x772d736d
   14000726a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140007271:	sub    eax,0x69676572
   140007276:	jae    0x1400072ec
   140007278:	jb     0x1400072f3
   14000727a:	sub    eax,0x312d316c
   14000727f:	sub    eax,0x6c642e30
   140007284:	ins    BYTE PTR es:[rdi],dx
   140007285:	add    BYTE PTR [rcx+0x70],ah
   140007288:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de5ff
   140007292:	outs   dx,DWORD PTR ds:[rsi]
   140007293:	jb     0x1400072fa
   140007295:	sub    eax,0x69676572
   14000729a:	jae    0x140007310
   14000729c:	jb     0x140007317
   14000729e:	sub    eax,0x312d316c
   1400072a3:	sub    eax,0x6c642e31
   1400072a8:	ins    BYTE PTR es:[rdi],dx
   1400072a9:	add    BYTE PTR [rcx+0x70],ah
   1400072ac:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72de623
   1400072b6:	outs   dx,DWORD PTR ds:[rsi]
   1400072b7:	jb     0x14000731e
   1400072b9:	sub    eax,0x616c6564
   1400072be:	jns    0x14000732c
   1400072c0:	outs   dx,DWORD PTR ds:[rsi]
   1400072c1:	(bad)  
   1400072c2:	fs sub eax,0x312d316c
   1400072c8:	sub    eax,0x6c642e31
   1400072cd:	ins    BYTE PTR es:[rdi],dx
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	xchg   edx,eax
   1400072d1:	add    al,0x6d
   1400072d3:	gs ins DWORD PTR es:[rdi],dx
   1400072d5:	movsxd esi,DWORD PTR [rax+0x79]
   1400072d8:	add    BYTE PTR [rax],al
   1400072da:	xchg   esi,eax
   1400072db:	add    al,0x6d
   1400072dd:	gs ins DWORD PTR es:[rdi],dx
   1400072df:	jae    0x140007346
   1400072e1:	je     0x1400072e3
	...

Disassembly of section .data:

0000000140008000 <.data>:
   140008000:	add    DWORD PTR [rax],eax
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000800e:	add    BYTE PTR [rax],al
   140008010:	int    0x5d
   140008012:	and    dl,dl
   140008014:	data16 (bad) 
   140008016:	(bad)  
   140008017:	inc    DWORD PTR [rax]
   140008019:	add    BYTE PTR [rax],al
   14000801b:	add    BYTE PTR [rax],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rax],ah
   140008021:	add    BYTE PTR [rax],0x40
   140008024:	add    DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

0000000140009000 <.pdata>:
   140009000:	sub    BYTE PTR [rax],dl
   140009002:	add    BYTE PTR [rax],al
   140009004:	push   rax
   140009005:	adc    BYTE PTR [rax],al
   140009007:	add    BYTE PTR [rax+0x5800005d],dh
   14000900d:	adc    BYTE PTR [rax],al
   14000900f:	add    BYTE PTR [rax+rdx*1+0x5db80000],cl
   140009016:	add    BYTE PTR [rax],al
   140009018:	xchg   esp,eax
   140009019:	adc    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rip+0xffffffffc0000011],al        # 0x100009032
   140009021:	pop    rbp
   140009022:	add    BYTE PTR [rax],al
   140009024:	adc    BYTE PTR [rcx],dl
   140009026:	add    BYTE PTR [rax],al
   140009028:	(bad)  
   140009029:	adc    DWORD PTR [rax],eax
   14000902b:	add    al,cl
   14000902d:	pop    rbp
   14000902e:	add    BYTE PTR [rax],al
   140009030:	cwde   
   140009031:	adc    DWORD PTR [rax],eax
   140009033:	add    BYTE PTR [rsp+rdx*1+0x5dd80000],bl
   14000903a:	add    BYTE PTR [rax],al
   14000903c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000903d:	adc    al,0x0
   14000903f:	add    BYTE PTR [rcx+0x15],bh
   140009042:	add    BYTE PTR [rax],al
   140009044:	cld    
   140009045:	pop    rbp
   140009046:	add    BYTE PTR [rax],al
   140009048:	adc    BYTE PTR [rip+0x192b0000],0x0        # 0x1592b904f
   14000904f:	add    BYTE PTR [rsi+rbx*2],cl
   140009052:	add    BYTE PTR [rax],al
   140009054:	rex sbb DWORD PTR [rax],eax
   140009057:	add    dl,ah
   140009059:	sbb    eax,DWORD PTR [rax]
   14000905b:	add    BYTE PTR [rsi+rbx*2],dh
   14000905e:	add    BYTE PTR [rax],al
   140009060:	lock sbb eax,DWORD PTR [rax]
   140009063:	add    cl,bl
   140009065:	sbb    al,0x0
   140009067:	add    BYTE PTR [rsi+rbx*2+0x0],al
   14000906b:	add    al,ah
   14000906d:	sbb    al,0x0
   14000906f:	add    ch,ah
   140009071:	sbb    eax,0x5e4c0000
   140009076:	add    BYTE PTR [rax],al
   140009078:	in     al,dx
   140009079:	sbb    eax,0x1eda0000
   14000907e:	add    BYTE PTR [rax],al
   140009080:	pop    rsp
   140009081:	pop    rsi
   140009082:	add    BYTE PTR [rax],al
   140009084:	loopne 0x1400090a4
   140009086:	add    BYTE PTR [rax],al
   140009088:	(bad)  
   140009089:	and    al,BYTE PTR [rax]
   14000908b:	add    BYTE PTR [rax+0x5e],dh
   14000908e:	add    BYTE PTR [rax],al
   140009090:	and    BYTE PTR [rdx],ah
   140009092:	add    BYTE PTR [rax],al
   140009094:	xchg   DWORD PTR [rdx],esp
   140009096:	add    BYTE PTR [rax],al
   140009098:	xchg   esp,eax
   140009099:	pop    rsi
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	nop
   14000909d:	and    al,BYTE PTR [rax]
   14000909f:	add    BYTE PTR [rsi+riz*1],al
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	movabs al,ds:0xc0000260c00005e
   1400090ad:	(bad)  
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	(bad)  
   1400090b1:	pop    rsi
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	and    BYTE PTR [rdi],ah
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	or     al,0x29
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	(bad)  
   1400090bd:	pop    rsi
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	adc    al,0x29
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	pop    rbx
   1400090c5:	sub    al,0x0
   1400090c7:	add    al,dh
   1400090c9:	pop    rsi
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	fs sub al,0x0
   1400090cf:	add    al,dh
   1400090d1:	sub    eax,0x5f140000
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	clc    
   1400090d9:	sub    eax,0x2f720000
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	sub    al,0x5f
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	js     0x140009115
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	add    esi,DWORD PTR [rcx]
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	rex.R pop rdi
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	or     al,0x31
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	mov    ebx,0x5c000031
   1400090f9:	pop    rdi
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	(bad)  
   1400090fd:	xor    DWORD PTR [rax],eax
   1400090ff:	add    BYTE PTR [rdi],dl
   140009101:	xor    eax,DWORD PTR [rax]
   140009103:	add    BYTE PTR [rax+0x5f],ch
   140009106:	add    BYTE PTR [rax],al
   140009108:	and    BYTE PTR [rbx],dh
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	jnp    0x140009141
   14000910e:	add    BYTE PTR [rax],al
   140009110:	mov    eax,0x8400005f
   140009115:	xor    eax,DWORD PTR [rax]
   140009117:	add    ch,dh
   140009119:	xor    eax,DWORD PTR [rax]
   14000911b:	add    al,al
   14000911d:	pop    rbp
   14000911e:	add    BYTE PTR [rax],al
   140009120:	cld    
   140009121:	xor    eax,DWORD PTR [rax]
   140009123:	add    BYTE PTR [rax],dh
   140009125:	xor    al,0x0
   140009127:	add    al,al
   140009129:	pop    rdi
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	cmp    BYTE PTR [rax+rax*1],dh
   14000912f:	add    BYTE PTR [rdi-0x37ffffcc],ch
   140009135:	pop    rdi
   140009136:	add    BYTE PTR [rax],al
   140009138:	mov    eax,0x2f000034
   14000913d:	xor    eax,0x5fd40000
   140009142:	add    BYTE PTR [rax],al
   140009144:	rex xor eax,0x35710000
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	mov    al,0x5d
   14000914e:	add    BYTE PTR [rax],al
   140009150:	pushf  
   140009151:	xor    eax,0x35d50000
   140009156:	add    BYTE PTR [rax],al
   140009158:	pop    rsp
   140009159:	pop    rdi
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	loopne 0x140009193
   14000915e:	add    BYTE PTR [rax],al
   140009160:	scas   eax,DWORD PTR es:[rdi]
   140009161:	add    BYTE PTR ss:[rax],al
   140009164:	sbb    BYTE PTR [rax+0x0],ah
   140009167:	add    al,al
   140009169:	add    BYTE PTR ss:[rax],al
   14000916c:	or     DWORD PTR [rdi],esi
   14000916e:	add    BYTE PTR [rax],al
   140009170:	mov    al,0x5d
   140009172:	add    BYTE PTR [rax],al
   140009174:	adc    BYTE PTR [rdi],dh
   140009176:	add    BYTE PTR [rax],al
   140009178:	cmp    DWORD PTR [rcx],0x5fe40000
   14000917e:	add    BYTE PTR [rax],al
   140009180:	nop
   140009181:	cmp    DWORD PTR [rax],eax
   140009183:	add    BYTE PTR [rdx+0x18000039],ah
   140009189:	(bad)  
   14000918a:	add    BYTE PTR [rax],al
   14000918c:	sar    BYTE PTR [rcx],0x0
   14000918f:	add    dh,bl
   140009191:	cmp    DWORD PTR [rax],eax
   140009193:	add    BYTE PTR [rax],ah
   140009195:	(bad)  
   140009196:	add    BYTE PTR [rax],al
   140009198:	in     al,0x39
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	add    edi,DWORD PTR [rdx]
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	and    al,0x60
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	cmp    al,BYTE PTR [rax]
   1400091a7:	add    BYTE PTR [rcx+0x3a],bh
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	sbb    BYTE PTR [rax+0x0],ah
   1400091af:	add    BYTE PTR [rax-0x67ffffc6],al
   1400091b5:	cmp    al,BYTE PTR [rax]
   1400091b7:	add    BYTE PTR [rax],bl
   1400091b9:	(bad)  
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	lods   al,BYTE PTR ds:[rsi]
   1400091bd:	cmp    al,BYTE PTR [rax]
   1400091bf:	add    BYTE PTR [rax],al
   1400091c1:	cmp    eax,DWORD PTR [rax]
   1400091c3:	add    BYTE PTR [rax+0x8000060],dh
   1400091c9:	cmp    eax,DWORD PTR [rax]
   1400091cb:	add    BYTE PTR [rbp+0x3b],cl
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	rcr    BYTE PTR [rdi+0x0],0x0
   1400091d4:	mov    al,0x3b
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	std    
   1400091d9:	cmp    eax,DWORD PTR [rax]
   1400091db:	add    al,dl
   1400091dd:	(bad)  
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	rex.R cmp al,0x0
   1400091e3:	add    BYTE PTR [rdi*1+0x60fc0000],dl
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	pop    rsp
   1400091ed:	cmp    eax,0x3d900000
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	rcr    BYTE PTR [rdi+0x0],0x0
   1400091f8:	movabs al,ds:0x800003f1100003d
   140009201:	(bad)  
   140009202:	add    BYTE PTR [rax],al
   140009204:	push   rax
   140009205:	(bad)  
   140009206:	add    BYTE PTR [rax],al
   140009208:	(bad)  
   140009209:	(bad)  
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	adc    al,0x61
   14000920e:	add    BYTE PTR [rax],al
   140009210:	lock (bad) 
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [eax],al
   140009218:	sbb    al,0x61
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	jl     0x14000925e
   14000921e:	add    BYTE PTR [rax],al
   140009220:	cdq    
   140009221:	add    BYTE PTR [rax],al
   140009224:	sbb    BYTE PTR [rax+0x0],ah
   140009227:	add    BYTE PTR [rax+0x3000040],ah
   14000922d:	add    BYTE PTR [r8],al
   140009230:	rcr    BYTE PTR [rdi+0x0],0x0
   140009234:	rex
   140009235:	add    BYTE PTR [r8],al
   140009238:	rex.X
   140009239:	add    BYTE PTR [r8],al
   14000923c:	adc    BYTE PTR [rcx+0x0],ah
   14000923f:	add    BYTE PTR [rax+0x41],ah
   140009242:	add    BYTE PTR [rax],al
   140009244:	lods   eax,DWORD PTR ds:[rsi]
   140009245:	add    BYTE PTR [r8],al
   140009248:	cmp    BYTE PTR [rcx+0x0],ah
   14000924b:	add    ah,dl
   14000924d:	add    BYTE PTR [r8],al
   140009250:	repnz add BYTE PTR [r8],al
   140009254:	hlt    
   140009255:	(bad)  
   140009256:	add    BYTE PTR [rax],al
   140009258:	clc    
   140009259:	add    BYTE PTR [r8],al
   14000925c:	sbb    BYTE PTR [rdx+0x0],al
   14000925f:	add    BYTE PTR [rax+0x20000060],ah
   140009265:	rex.X add BYTE PTR [rax],al
   140009268:	rex
   140009269:	rex.X add BYTE PTR [rax],al
   14000926c:	hlt    
   14000926d:	(bad)  
	...

Disassembly of section .didat:

000000014000a000 <.didat>:
   14000a000:	sar    BYTE PTR [rdi],1
   14000a002:	add    BYTE PTR [rax+0x1],al
	...
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rax],dh
   14000a011:	(bad)  
   14000a012:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b00c:	add    DWORD PTR [rax],eax
   14000b00e:	add    al,0x0
   14000b010:	clc    
   14000b011:	add    al,BYTE PTR [rax]
   14000b013:	cmp    BYTE PTR [rax],0x0
   14000b016:	add    BYTE PTR [rax+0x3],al
   14000b01c:	push   rax
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	or     BYTE PTR [rsi],0x0
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	test   al,0x0
   14000b026:	add    BYTE PTR [rax+0x10],al
   14000b02c:	rol    BYTE PTR [rax],0x0
   14000b02f:	sbb    BYTE PTR [rax],0x0
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	fadd   DWORD PTR [rax]
   14000b036:	add    BYTE PTR [rax+0x0],al
	...
   14000b044:	add    BYTE PTR [rax],al
   14000b046:	add    DWORD PTR [rax],eax
   14000b048:	add    DWORD PTR [rax],eax
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	lock add BYTE PTR [rax],al
   14000b04f:	add    BYTE PTR [rax],0x0
	...
   14000b05e:	or     DWORD PTR [rax],eax
   14000b060:	add    DWORD PTR [rax],eax
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	or     BYTE PTR [rcx],al
   14000b066:	add    BYTE PTR [rax+0x2],al
   14000b06c:	and    BYTE PTR [rcx],al
   14000b06e:	add    BYTE PTR [rax+0x3],al
   14000b074:	cmp    BYTE PTR [rcx],al
   14000b076:	add    BYTE PTR [rax+0x4],al
   14000b07c:	push   rax
   14000b07d:	add    DWORD PTR [rax],eax
   14000b07f:	add    BYTE PTR [rip+0x68000000],0x1        # 0x1a800b086
   14000b086:	add    BYTE PTR [rax+0x6],al
   14000b08c:	add    BYTE PTR [rcx],0x0
   14000b08f:	add    BYTE PTR [rdi],0x0
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	cwde   
   14000b095:	add    DWORD PTR [rax],eax
   14000b097:	or     BYTE PTR [rax],0x0
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	mov    al,0x1
   14000b09e:	add    BYTE PTR [rax+0x9],al
   14000b0a4:	enter  0x1,0x80
	...
   14000b0b4:	add    BYTE PTR [rax],al
   14000b0b6:	add    DWORD PTR [rax],eax
   14000b0b8:	add    BYTE PTR fs:[rax],al
   14000b0bb:	add    al,ah
   14000b0bd:	add    DWORD PTR [rax],eax
   14000b0bf:	add    BYTE PTR [rax],0x0
	...
   14000b0ce:	add    DWORD PTR [rax],eax
   14000b0d0:	add    DWORD PTR [rax],eax
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	clc    
   14000b0d5:	add    DWORD PTR [rax],eax
   14000b0d7:	add    BYTE PTR [rax],0x0
	...
   14000b0e6:	add    DWORD PTR [rax],eax
   14000b0e8:	add    DWORD PTR [rax],eax
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	adc    BYTE PTR [rdx],al
   14000b0ee:	add    BYTE PTR [rax+0x0],al
	...
   14000b0fc:	add    BYTE PTR [rax],al
   14000b0fe:	add    DWORD PTR [rax],eax
   14000b100:	or     DWORD PTR [rax+rax*1],eax
   14000b103:	add    BYTE PTR [rax],ch
   14000b105:	add    al,BYTE PTR [rax]
	...
   14000b113:	add    BYTE PTR [rax],al
   14000b115:	add    BYTE PTR [rcx],al
   14000b117:	add    BYTE PTR [rcx],cl
   14000b119:	add    al,0x0
   14000b11b:	add    BYTE PTR [rax],bh
   14000b11d:	add    al,BYTE PTR [rax]
	...
   14000b12b:	add    BYTE PTR [rax],al
   14000b12d:	add    BYTE PTR [rcx],al
   14000b12f:	add    BYTE PTR [rcx],cl
   14000b131:	add    al,0x0
   14000b133:	add    BYTE PTR [rax+0x2],cl
	...
   14000b146:	add    DWORD PTR [rax],eax
   14000b148:	or     DWORD PTR [rax+rax*1],eax
   14000b14b:	add    BYTE PTR [rax+0x2],bl
	...
   14000b15e:	add    DWORD PTR [rax],eax
   14000b160:	or     DWORD PTR [rax+rax*1],eax
   14000b163:	add    BYTE PTR [rax+0x2],ch
	...
   14000b176:	add    DWORD PTR [rax],eax
   14000b178:	or     DWORD PTR [rax+rax*1],eax
   14000b17b:	add    BYTE PTR [rax+0x2],bh
	...
   14000b18e:	add    DWORD PTR [rax],eax
   14000b190:	or     DWORD PTR [rax+rax*1],eax
   14000b193:	add    BYTE PTR [rax+0x2],cl
	...
   14000b1a5:	add    BYTE PTR [rcx],al
   14000b1a7:	add    BYTE PTR [rcx],cl
   14000b1a9:	add    al,0x0
   14000b1ab:	add    BYTE PTR [rax+0x2],bl
	...
   14000b1bd:	add    BYTE PTR [rcx],al
   14000b1bf:	add    BYTE PTR [rcx],cl
   14000b1c1:	add    al,0x0
   14000b1c3:	add    BYTE PTR [rax+0x2],ch
	...
   14000b1d5:	add    BYTE PTR [rcx],al
   14000b1d7:	add    BYTE PTR [rcx],cl
   14000b1d9:	add    al,0x0
   14000b1db:	add    BYTE PTR [rax+0x2],bh
	...
   14000b1ed:	add    BYTE PTR [rcx],al
   14000b1ef:	add    BYTE PTR [rcx],cl
   14000b1f1:	add    al,0x0
   14000b1f3:	add    al,cl
   14000b1f5:	add    al,BYTE PTR [rax]
	...
   14000b203:	add    BYTE PTR [rax],al
   14000b205:	add    BYTE PTR [rcx],al
   14000b207:	add    BYTE PTR [rcx],cl
   14000b209:	add    al,0x0
   14000b20b:	add    al,bl
   14000b20d:	add    al,BYTE PTR [rax]
	...
   14000b21b:	add    BYTE PTR [rax],al
   14000b21d:	add    BYTE PTR [rcx],al
   14000b21f:	add    BYTE PTR [rcx],cl
   14000b221:	add    al,0x0
   14000b223:	add    al,ch
   14000b225:	add    al,BYTE PTR [rax]
   14000b227:	add    BYTE PTR [rax],ah
   14000b229:	(bad)  
   14000b22a:	add    DWORD PTR [rax],eax
   14000b22c:	rol    BYTE PTR [rax],1
	...
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	mov    al,0xbb
   14000b23a:	add    BYTE PTR [rax],al
   14000b23c:	push   0x6
   14000b241:	add    BYTE PTR [rax],al
   14000b243:	add    BYTE PTR [rax],al
   14000b245:	add    BYTE PTR [rax],al
   14000b247:	add    BYTE PTR [rax],bl
   14000b249:	ret    0x0
   14000b24c:	call   0x14000b253
	...
   14000b259:	(bad)
   14000b25c:	sub    BYTE PTR [rcx],al
	...
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	sub    dh,al
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	test   al,0xe
	...
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	rcl    ah,1
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	test   al,0x8
	...
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	js     0x14000b267
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	push   0x5
   14000b291:	add    BYTE PTR [rax],al
   14000b293:	add    BYTE PTR [rax],al
   14000b295:	add    BYTE PTR [rax],al
   14000b297:	add    al,ah
   14000b299:	loop   0x14000b29b
   14000b29b:	add    BYTE PTR [rax+0x25],ch
   14000b2a1:	add    BYTE PTR [rax],al
   14000b2a3:	add    BYTE PTR [rax],al
   14000b2a5:	add    BYTE PTR [rax],al
   14000b2a7:	add    BYTE PTR [rax-0x57fffef8],cl
   14000b2ad:	adc    BYTE PTR [rax],al
	...
   14000b2b7:	add    BYTE PTR [rax],dh
   14000b2b9:	sbb    DWORD PTR [rcx],eax
   14000b2bb:	add    BYTE PTR [rax+0x4],ch
	...
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	cwde   
   14000b2c9:	sbb    eax,0x840001
	...
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	lock mov bh,0x0
   14000b2db:	add    al,al
   14000b2dd:	add    eax,DWORD PTR [rax]
	...
   14000b2e7:	add    BYTE PTR [rax],al
   14000b2e9:	mov    bl,0x0
   14000b2eb:	add    al,dh
   14000b2ed:	add    al,0x0
	...
   14000b2f7:	add    BYTE PTR [rbx],al
   14000b2f9:	add    BYTE PTR [rbp+0x0],cl
   14000b2fc:	push   rbp
   14000b2fd:	add    BYTE PTR [rcx+0x0],cl
   14000b300:	cmp    al,0x3f
   14000b302:	js     0x14000b371
   14000b304:	ins    BYTE PTR es:[rdi],dx
   14000b305:	and    BYTE PTR [rsi+0x65],dh
   14000b308:	jb     0x14000b37d
   14000b30a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b311:	xor    BYTE PTR [rdx],ah
   14000b313:	and    BYTE PTR [rbp+0x6e],ah
   14000b316:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b319:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000b320:	rex.RX sub eax,0x73202238
   14000b326:	je     0x14000b389
   14000b328:	outs   dx,BYTE PTR ds:[rsi]
   14000b329:	fs (bad) 
   14000b32b:	ins    BYTE PTR es:[rdi],dx
   14000b32c:	outs   dx,DWORD PTR ds:[rsi]
   14000b32d:	outs   dx,BYTE PTR ds:[rsi]
   14000b32e:	gs cmp eax,0x73657922
   14000b334:	and    bh,BYTE PTR [rdi]
   14000b336:	ds or  eax,0x2d213c0a
   14000b33c:	sub    eax,0x706f4320
   14000b341:	jns    0x14000b3b5
   14000b343:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000b34a:	sub    DWORD PTR [rax],esp
   14000b34c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000b354:	je     0x14000b376
   14000b356:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b358:	jb     0x14000b3ca
   14000b35a:	outs   dx,DWORD PTR ds:[rsi]
   14000b35b:	jb     0x14000b3be
   14000b35d:	je     0x14000b3c8
   14000b35f:	outs   dx,DWORD PTR ds:[rsi]
   14000b360:	outs   dx,BYTE PTR ds:[rsi]
   14000b361:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0df194
   14000b367:	cmp    al,0x61
   14000b369:	jae    0x14000b3de
   14000b36b:	gs ins DWORD PTR es:[rdi],dx
   14000b36d:	(bad)  
   14000b36e:	ins    BYTE PTR es:[rdi],dx
   14000b36f:	jns    0x14000b391
   14000b371:	js     0x14000b3e0
   14000b373:	ins    BYTE PTR es:[rdi],dx
   14000b374:	outs   dx,BYTE PTR ds:[rsi]
   14000b375:	jae    0x14000b3b4
   14000b377:	and    dh,BYTE PTR [rbp+0x72]
   14000b37a:	outs   dx,BYTE PTR ds:[rsi]
   14000b37b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b37e:	push   0x73616d65
   14000b383:	sub    eax,0x7263696d
   14000b388:	outs   dx,DWORD PTR ds:[rsi]
   14000b389:	jae    0x14000b3fa
   14000b38b:	data16 je 0x14000b3bb
   14000b38e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b391:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b394:	ins    DWORD PTR es:[rdi],dx
   14000b395:	cs jbe 0x14000b3c9
   14000b398:	and    ah,BYTE PTR [rax]
   14000b39a:	ins    DWORD PTR es:[rdi],dx
   14000b39b:	(bad)  
   14000b39c:	outs   dx,BYTE PTR ds:[rsi]
   14000b39d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000b3a4:	jb     0x14000b419
   14000b3a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b3ad:	xor    BYTE PTR [rdx],ah
   14000b3af:	and    BYTE PTR [rax+0x6d],bh
   14000b3b2:	ins    BYTE PTR es:[rdi],dx
   14000b3b3:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b4:	jae    0x14000b3f0
   14000b3b6:	(bad)  
   14000b3b7:	jae    0x14000b426
   14000b3b9:	jbe    0x14000b3ee
   14000b3bb:	cmp    eax,0x6e727522
   14000b3c0:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b3c3:	push   0x73616d65
   14000b3c8:	sub    eax,0x7263696d
   14000b3cd:	outs   dx,DWORD PTR ds:[rsi]
   14000b3ce:	jae    0x14000b43f
   14000b3d0:	data16 je 0x14000b400
   14000b3d3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b3d6:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b3d9:	ins    DWORD PTR es:[rdi],dx
   14000b3da:	cs jbe 0x14000b410
   14000b3dd:	and    bh,BYTE PTR [rsi]
   14000b3df:	or     eax,0x73613c0a
   14000b3e4:	jae    0x14000b44b
   14000b3e6:	ins    DWORD PTR es:[rdi],dx
   14000b3e7:	(bad)  
   14000b3e8:	ins    BYTE PTR es:[rdi],dx
   14000b3e9:	jns    0x14000b434
   14000b3eb:	fs outs dx,BYTE PTR gs:[rsi]
   14000b3ee:	je     0x14000b459
   14000b3f0:	je     0x14000b46b
   14000b3f2:	or     eax,0x2020200a
   14000b3f7:	and    BYTE PTR [rsi+0x65],dh
   14000b3fa:	jb     0x14000b46f
   14000b3fc:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000b403:	xor    DWORD PTR [rsi],ebp
   14000b405:	xor    BYTE PTR [rsi],ch
   14000b407:	xor    BYTE PTR [rdx],ah
   14000b409:	or     eax,0x2020200a
   14000b40e:	and    BYTE PTR [rax+0x72],dh
   14000b411:	outs   dx,DWORD PTR ds:[rsi]
   14000b412:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b415:	jae    0x14000b486
   14000b417:	jb     0x14000b45a
   14000b419:	jb     0x14000b47e
   14000b41b:	push   0x63657469
   14000b420:	je     0x14000b497
   14000b422:	jb     0x14000b489
   14000b424:	cmp    eax,0x646d6122
   14000b429:	ss xor al,0x22
   14000b42c:	or     eax,0x2020200a
   14000b431:	and    BYTE PTR [rsi+0x61],ch
   14000b434:	ins    DWORD PTR es:[rdi],dx
   14000b435:	gs cmp eax,0x63694d22
   14000b43b:	jb     0x14000b4ac
   14000b43d:	jae    0x14000b4ae
   14000b43f:	data16 je 0x14000b470
   14000b442:	push   rsp
   14000b443:	(bad)  
   14000b444:	(bad)  
   14000b445:	ins    BYTE PTR es:[rdi],dx
   14000b446:	gs je  0x14000b499
   14000b449:	rex.XB
   14000b44a:	cs rex.WRB jne 0x14000b4ba
   14000b44e:	je     0x14000b4b9
   14000b450:	imul   r12d,DWORD PTR [rdi+0x69],0x226e6f4d
   14000b458:	or     eax,0x2020200a
   14000b45d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000b461:	gs cmp eax,0x6e697722
   14000b467:	xor    esi,DWORD PTR [rdx]
   14000b469:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ee379
   14000b46f:	or     bh,BYTE PTR [rsp+riz*2]
   14000b472:	gs jae 0x14000b4d8
   14000b475:	jb     0x14000b4e0
   14000b477:	jo     0x14000b4ed
   14000b479:	imul   ebp,DWORD PTR [rdi+0x6e],0x6261543e
   14000b480:	ins    BYTE PTR es:[rdi],dx
   14000b481:	gs je  0x14000b4a4
   14000b484:	push   rax
   14000b485:	rex.XB and BYTE PTR [r13+0x6f],cl
   14000b489:	outs   dx,BYTE PTR ds:[rsi]
   14000b48a:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x74655320
   14000b492:	jne    0x14000b504
   14000b494:	cmp    al,0x2f
   14000b496:	fs gs jae 0x14000b4fd
   14000b49a:	jb     0x14000b505
   14000b49c:	jo     0x14000b512
   14000b49e:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000b4a5:	fs gs jo 0x14000b50e
   14000b4a9:	outs   dx,BYTE PTR ds:[rsi]
   14000b4aa:	fs outs dx,BYTE PTR gs:[rsi]
   14000b4ad:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000b4b0:	or     eax,0x2020200a
   14000b4b5:	and    BYTE PTR [rsp+riz*2],bh
   14000b4b8:	gs jo  0x14000b520
   14000b4bb:	outs   dx,BYTE PTR ds:[rsi]
   14000b4bc:	fs outs dx,BYTE PTR gs:[rsi]
   14000b4bf:	je     0x14000b502
   14000b4c1:	jae    0x14000b536
   14000b4c3:	gs ins DWORD PTR es:[rdi],dx
   14000b4c5:	(bad)  
   14000b4c6:	ins    BYTE PTR es:[rdi],dx
   14000b4c7:	jns    0x14000b507
   14000b4c9:	or     eax,0x2020200a
   14000b4ce:	and    BYTE PTR [rax],ah
   14000b4d0:	and    BYTE PTR [rax],ah
   14000b4d2:	and    BYTE PTR [rcx+riz*2],bh
   14000b4d5:	jae    0x14000b54a
   14000b4d7:	gs ins DWORD PTR es:[rdi],dx
   14000b4d9:	(bad)  
   14000b4da:	ins    BYTE PTR es:[rdi],dx
   14000b4db:	jns    0x14000b526
   14000b4dd:	fs outs dx,BYTE PTR gs:[rsi]
   14000b4e0:	je     0x14000b54b
   14000b4e2:	je     0x14000b55d
   14000b4e4:	or     eax,0x2020200a
   14000b4e9:	and    BYTE PTR [rax],ah
   14000b4eb:	and    BYTE PTR [rax],ah
   14000b4ed:	and    BYTE PTR [rax],ah
   14000b4ef:	and    BYTE PTR [rax],ah
   14000b4f1:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000b4f5:	gs cmp eax,0x6e697722
   14000b4fb:	xor    esi,DWORD PTR [rdx]
   14000b4fd:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d50d
   14000b503:	and    BYTE PTR [rax],ah
   14000b505:	and    BYTE PTR [rax],ah
   14000b507:	and    BYTE PTR [rax],ah
   14000b509:	and    BYTE PTR [rax],ah
   14000b50b:	and    BYTE PTR [rsi+0x61],ch
   14000b50e:	ins    DWORD PTR es:[rdi],dx
   14000b50f:	gs cmp eax,0x63694d22
   14000b515:	jb     0x14000b586
   14000b517:	jae    0x14000b588
   14000b519:	data16 je 0x14000b54a
   14000b51c:	push   rdi
   14000b51d:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b524:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b526:	ins    DWORD PTR es:[rdi],dx
   14000b527:	ins    DWORD PTR es:[rdi],dx
   14000b528:	outs   dx,DWORD PTR ds:[rsi]
   14000b529:	outs   dx,BYTE PTR ds:[rsi]
   14000b52a:	sub    eax,0x746e6f43
   14000b52f:	jb     0x14000b5a0
   14000b531:	ins    BYTE PTR es:[rdi],dx
   14000b532:	jae    0x14000b556
   14000b534:	or     eax,0x2020200a
   14000b539:	and    BYTE PTR [rax],ah
   14000b53b:	and    BYTE PTR [rax],ah
   14000b53d:	and    BYTE PTR [rax],ah
   14000b53f:	and    BYTE PTR [rax],ah
   14000b541:	and    BYTE PTR [rsi+0x65],dh
   14000b544:	jb     0x14000b5b9
   14000b546:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000b54d:	xor    BYTE PTR [rsi],ch
   14000b54f:	xor    BYTE PTR [rsi],ch
   14000b551:	xor    BYTE PTR [rdx],ah
   14000b553:	or     eax,0x2020200a
   14000b558:	and    BYTE PTR [rax],ah
   14000b55a:	and    BYTE PTR [rax],ah
   14000b55c:	and    BYTE PTR [rax],ah
   14000b55e:	and    BYTE PTR [rax],ah
   14000b560:	and    BYTE PTR [rax+0x72],dh
   14000b563:	outs   dx,DWORD PTR ds:[rsi]
   14000b564:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b567:	jae    0x14000b5d8
   14000b569:	jb     0x14000b5ac
   14000b56b:	jb     0x14000b5d0
   14000b56d:	push   0x63657469
   14000b572:	je     0x14000b5e9
   14000b574:	jb     0x14000b5db
   14000b576:	cmp    eax,0x646d6122
   14000b57b:	ss xor al,0x22
   14000b57e:	or     eax,0x2020200a
   14000b583:	and    BYTE PTR [rax],ah
   14000b585:	and    BYTE PTR [rax],ah
   14000b587:	and    BYTE PTR [rax],ah
   14000b589:	and    BYTE PTR [rax],ah
   14000b58b:	and    BYTE PTR [rax+0x75],dh
   14000b58e:	(bad)  
   14000b58f:	ins    BYTE PTR es:[rdi],dx
   14000b590:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000b597:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000b59b:	and    dh,BYTE PTR [rsi]
   14000b59d:	xor    eax,0x36623539
   14000b5a2:	xor    al,0x31
   14000b5a4:	xor    al,0x34
   14000b5a6:	movsxd esp,DWORD PTR [rbx+0x66]
   14000b5a9:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000b5ad:	or     eax,0x2020200a
   14000b5b2:	and    BYTE PTR [rax],ah
   14000b5b4:	and    BYTE PTR [rax],ah
   14000b5b6:	and    BYTE PTR [rax],ah
   14000b5b8:	and    BYTE PTR [rax],ah
   14000b5ba:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000b5be:	addr32 jne 0x14000b622
   14000b5c1:	addr32 gs cmp eax,0xd222a22
   14000b5c8:	or     ah,BYTE PTR [rax]
   14000b5ca:	and    BYTE PTR [rax],ah
   14000b5cc:	and    BYTE PTR [rax],ah
   14000b5ce:	and    BYTE PTR [rax],ah
   14000b5d0:	and    BYTE PTR [rdi],ch
   14000b5d2:	ds or  eax,0x2020200a
   14000b5d8:	and    BYTE PTR [rdi+rbp*1],bh
   14000b5db:	fs gs jo 0x14000b644
   14000b5df:	outs   dx,BYTE PTR ds:[rsi]
   14000b5e0:	fs outs dx,BYTE PTR gs:[rsi]
   14000b5e3:	je     0x14000b626
   14000b5e5:	jae    0x14000b65a
   14000b5e7:	gs ins DWORD PTR es:[rdi],dx
   14000b5e9:	(bad)  
   14000b5ea:	ins    BYTE PTR es:[rdi],dx
   14000b5eb:	jns    0x14000b62b
   14000b5ed:	or     eax,0x642f3c0a
   14000b5f2:	gs jo  0x14000b65a
   14000b5f5:	outs   dx,BYTE PTR ds:[rsi]
   14000b5f6:	fs outs dx,BYTE PTR gs:[rsi]
   14000b5f9:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000b5fc:	or     eax,0x3c0a0d0a
   14000b601:	je     0x14000b675
   14000b603:	jne    0x14000b678
   14000b605:	je     0x14000b650
   14000b607:	outs   dx,BYTE PTR ds:[rsi]
   14000b608:	outs   dx,WORD PTR ds:[rsi]
   14000b60a:	and    BYTE PTR [rax+0x6d],bh
   14000b60d:	ins    BYTE PTR es:[rdi],dx
   14000b60e:	outs   dx,BYTE PTR ds:[rsi]
   14000b60f:	jae    0x14000b64e
   14000b611:	and    dh,BYTE PTR [rbp+0x72]
   14000b614:	outs   dx,BYTE PTR ds:[rsi]
   14000b615:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b618:	push   0x73616d65
   14000b61d:	sub    eax,0x7263696d
   14000b622:	outs   dx,DWORD PTR ds:[rsi]
   14000b623:	jae    0x14000b694
   14000b625:	data16 je 0x14000b655
   14000b628:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b62b:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b62e:	ins    DWORD PTR es:[rdi],dx
   14000b62f:	cs jbe 0x14000b665
   14000b632:	and    bh,BYTE PTR [rsi]
   14000b634:	or     eax,0x2020200a
   14000b639:	and    BYTE PTR [rbx+rsi*2],bh
   14000b63c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b640:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b648:	and    BYTE PTR [rax],ah
   14000b64a:	and    BYTE PTR [rax],ah
   14000b64c:	and    BYTE PTR [rax],ah
   14000b64e:	cmp    al,0x72
   14000b650:	gs jno 0x14000b6c8
   14000b653:	gs jae 0x14000b6ca
   14000b656:	gs fs push rax
   14000b659:	jb     0x14000b6c4
   14000b65b:	jbe    0x14000b6c6
   14000b65d:	ins    BYTE PTR es:[rdi],dx
   14000b65e:	gs addr32 gs jae 0x14000b6a1
   14000b663:	or     eax,0x2020200a
   14000b668:	and    BYTE PTR [rax],ah
   14000b66a:	and    BYTE PTR [rax],ah
   14000b66c:	and    BYTE PTR [rax],ah
   14000b66e:	and    BYTE PTR [rax],ah
   14000b670:	and    BYTE PTR [rdx+rsi*2],bh
   14000b673:	gs jno 0x14000b6eb
   14000b676:	gs jae 0x14000b6ed
   14000b679:	gs fs rex.RB js 0x14000b6e3
   14000b67e:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b681:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b688:	ins    BYTE PTR es:[rdi],dx
   14000b689:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b68d:	gs ins BYTE PTR es:[rdi],dx
   14000b68f:	cmp    eax,0x71657222
   14000b694:	jne    0x14000b6ff
   14000b696:	jb     0x14000b6fd
   14000b698:	rex.B
   14000b699:	fs ins DWORD PTR es:[rdi],dx
   14000b69b:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14000b6a2:	je     0x14000b713
   14000b6a4:	jb     0x14000b6c8
   14000b6a6:	and    BYTE PTR [rdi],ch
   14000b6a8:	ds or  eax,0x2020200a
   14000b6ae:	and    BYTE PTR [rax],ah
   14000b6b0:	and    BYTE PTR [rax],ah
   14000b6b2:	and    BYTE PTR [rdi+rbp*1],bh
   14000b6b5:	jb     0x14000b71c
   14000b6b7:	jno    0x14000b72e
   14000b6b9:	gs jae 0x14000b730
   14000b6bc:	gs fs push rax
   14000b6bf:	jb     0x14000b72a
   14000b6c1:	jbe    0x14000b72c
   14000b6c3:	ins    BYTE PTR es:[rdi],dx
   14000b6c4:	gs addr32 gs jae 0x14000b707
   14000b6c9:	or     eax,0x2020200a
   14000b6ce:	and    BYTE PTR [rdi+rbp*1],bh
   14000b6d1:	jae    0x14000b738
   14000b6d3:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b6d6:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000b6de:	je     0x14000b752
   14000b6e0:	jne    0x14000b755
   14000b6e2:	je     0x14000b72d
   14000b6e4:	outs   dx,BYTE PTR ds:[rsi]
   14000b6e5:	outs   dx,WORD PTR ds:[rsi]
   14000b6e7:	ds or  eax,0x3c0a0d0a
   14000b6ed:	(bad)  
   14000b6ee:	jae    0x14000b75d
   14000b6f0:	jbe    0x14000b725
   14000b6f2:	cmp    ah,BYTE PTR [rcx+0x70]
   14000b6f5:	jo     0x14000b763
   14000b6f7:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b6fe:	ds or  eax,0x2020200a
   14000b704:	and    BYTE PTR [rcx+riz*2],bh
   14000b707:	jae    0x14000b776
   14000b709:	jbe    0x14000b73e
   14000b70b:	cmp    dh,BYTE PTR [rdi+0x69]
   14000b70e:	outs   dx,BYTE PTR ds:[rsi]
   14000b70f:	outs   dx,DWORD PTR fs:[rsi]
   14000b711:	ja     0x14000b786
   14000b713:	push   rbx
   14000b714:	gs je  0x14000b78b
   14000b717:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14000b71e:	ins    BYTE PTR es:[rdi],dx
   14000b71f:	outs   dx,BYTE PTR ds:[rsi]
   14000b720:	jae    0x14000b75f
   14000b722:	and    ch,BYTE PTR [rax+0x74]
   14000b725:	je     0x14000b797
   14000b727:	cmp    ch,BYTE PTR [rdi]
   14000b729:	(bad)  
   14000b72a:	jae    0x14000b78f
   14000b72c:	push   0x73616d65
   14000b731:	cs ins DWORD PTR es:[rdi],dx
   14000b733:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000b73a:	je     0x14000b76a
   14000b73c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b73f:	(bad)  
   14000b740:	push   rbx
   14000b741:	rex.WRB
   14000b742:	rex.WB (bad) 
   14000b744:	xor    dh,BYTE PTR [rax]
   14000b746:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a0e7b
   14000b74c:	outs   dx,DWORD PTR fs:[rsi]
   14000b74e:	ja     0x14000b7c3
   14000b750:	push   rbx
   14000b751:	gs je  0x14000b7c8
   14000b754:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   14000b75b:	or     ah,BYTE PTR [rax]
   14000b75d:	and    BYTE PTR [rax],ah
   14000b75f:	and    BYTE PTR [rax],ah
   14000b761:	and    BYTE PTR [rax],ah
   14000b763:	and    BYTE PTR [rsp+riz*2],bh
   14000b766:	jo     0x14000b7d1
   14000b768:	rex.B ja 0x14000b7cc
   14000b76b:	jb     0x14000b7d2
   14000b76d:	ds jo  0x14000b7d5
   14000b770:	jb     0x14000b792
   14000b772:	ins    DWORD PTR es:[rdi],dx
   14000b773:	outs   dx,DWORD PTR ds:[rsi]
   14000b774:	outs   dx,BYTE PTR ds:[rsi]
   14000b775:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x70642f3c
   14000b77d:	imul   eax,DWORD PTR [rcx+0x77],0x3e657261
   14000b784:	or     eax,0x2020200a
   14000b789:	and    BYTE PTR [rax],ah
   14000b78b:	and    BYTE PTR [rax],ah
   14000b78d:	and    BYTE PTR [rcx+riz*2],bh
   14000b790:	jne    0x14000b806
   14000b792:	outs   dx,DWORD PTR ds:[rsi]
   14000b793:	rex.RB ins BYTE PTR es:[rdi],dx
   14000b795:	gs jbe 0x14000b7f9
   14000b798:	je     0x14000b7ff
   14000b79a:	ds je  0x14000b80f
   14000b79d:	jne    0x14000b804
   14000b79f:	cmp    al,0x2f
   14000b7a1:	(bad)  
   14000b7a2:	jne    0x14000b818
   14000b7a4:	outs   dx,DWORD PTR ds:[rsi]
   14000b7a5:	rex.RB ins BYTE PTR es:[rdi],dx
   14000b7a7:	gs jbe 0x14000b80b
   14000b7aa:	je     0x14000b811
   14000b7ac:	ds or  eax,0x2020200a
   14000b7b2:	and    BYTE PTR [rdi+rbp*1],bh
   14000b7b5:	(bad)  
   14000b7b6:	jae    0x14000b825
   14000b7b8:	jbe    0x14000b7ed
   14000b7ba:	cmp    dh,BYTE PTR [rdi+0x69]
   14000b7bd:	outs   dx,BYTE PTR ds:[rsi]
   14000b7be:	outs   dx,DWORD PTR fs:[rsi]
   14000b7c0:	ja     0x14000b835
   14000b7c2:	push   rbx
   14000b7c3:	gs je  0x14000b83a
   14000b7c6:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000b7cd:	cmp    al,0x2f
   14000b7cf:	(bad)  
   14000b7d0:	jae    0x14000b83f
   14000b7d2:	jbe    0x14000b807
   14000b7d4:	cmp    ah,BYTE PTR [rcx+0x70]
   14000b7d7:	jo     0x14000b845
   14000b7d9:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b7e0:	ds or  eax,0x612f3c0a
   14000b7e6:	jae    0x14000b85b
   14000b7e8:	gs ins DWORD PTR es:[rdi],dx
   14000b7ea:	(bad)  
   14000b7eb:	ins    BYTE PTR es:[rdi],dx
   14000b7ec:	jns    0x14000b82c
   14000b7ee:	or     eax,0x3403c00a
   14000b7f3:	add    BYTE PTR [rax],al
   14000b7f5:	add    BYTE PTR [rsi+0x0],dl
   14000b7f8:	push   rbx
   14000b7f9:	add    BYTE PTR [rdi+0x0],bl
   14000b7fc:	push   rsi
   14000b7fd:	add    BYTE PTR [rbp+0x0],al
   14000b800:	push   rdx
   14000b801:	add    BYTE PTR [rbx+0x0],dl
   14000b804:	rex.WB add BYTE PTR [r15+0x0],cl
   14000b808:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000b80c:	rex.WB add BYTE PTR [r14+0x0],cl
   14000b810:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000b814:	add    BYTE PTR [rax],al
   14000b816:	add    BYTE PTR [rax],al
   14000b818:	mov    ebp,0xfeef04
   14000b81d:	add    BYTE PTR [rcx],al
   14000b81f:	add    BYTE PTR [rax],al
   14000b821:	add    BYTE PTR [rdx],cl
   14000b823:	add    BYTE PTR [rax],al
   14000b825:	add    BYTE PTR [rax],bpl
   14000b828:	add    BYTE PTR [rax],al
   14000b82a:	or     al,BYTE PTR [rax]
   14000b82c:	add    BYTE PTR [rax+0x0],al
   14000b82f:	sub    BYTE PTR [rdi],bh
   14000b831:	add    BYTE PTR [rax],al
   14000b833:	add    BYTE PTR [rax],al
   14000b835:	add    BYTE PTR [rax],al
   14000b837:	add    BYTE PTR [rax+rax*1],al
   14000b83a:	add    al,0x0
   14000b83c:	add    DWORD PTR [rax],eax
	...
   14000b84a:	add    BYTE PTR [rax],al
   14000b84c:	(bad)  
   14000b84d:	add    eax,DWORD PTR [rax]
   14000b84f:	add    BYTE PTR [rcx],al
   14000b851:	add    BYTE PTR [rbx+0x0],dl
   14000b854:	je     0x14000b856
   14000b856:	jb     0x14000b858
   14000b858:	imul   eax,DWORD PTR [rax],0x67006e
   14000b85e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b862:	ins    BYTE PTR es:[rdi],dx
   14000b863:	add    BYTE PTR [rbp+0x0],ah
   14000b866:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b86a:	data16 add BYTE PTR [rdi+0x0],ch
   14000b86e:	add    BYTE PTR [rax],al
   14000b870:	cli    
   14000b871:	add    al,BYTE PTR [rax]
   14000b873:	add    BYTE PTR [rcx],al
   14000b875:	add    BYTE PTR [rax],dh
   14000b877:	add    BYTE PTR [rax+rax*1],dh
   14000b87a:	xor    BYTE PTR [rax],al
   14000b87c:	cmp    DWORD PTR [rax],eax
   14000b87e:	xor    BYTE PTR [rax],al
   14000b880:	xor    al,0x0
   14000b882:	rex.X add BYTE PTR [rax],sil
   14000b885:	add    BYTE PTR [rax],al
   14000b887:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000b88b:	add    BYTE PTR [rcx],al
   14000b88d:	add    BYTE PTR [rbx+0x0],al
   14000b890:	outs   dx,DWORD PTR ds:[rsi]
   14000b891:	add    BYTE PTR [rbp+0x0],ch
   14000b894:	jo     0x14000b896
   14000b896:	(bad)  
   14000b897:	add    BYTE PTR [rsi+0x0],ch
   14000b89a:	jns    0x14000b89c
   14000b89c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b8a0:	ins    DWORD PTR es:[rdi],dx
   14000b8a1:	add    BYTE PTR [rbp+0x0],ah
   14000b8a4:	add    BYTE PTR [rax],al
   14000b8a6:	add    BYTE PTR [rax],al
   14000b8a8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b8ac:	movsxd eax,DWORD PTR [rax]
   14000b8ae:	jb     0x14000b8b0
   14000b8b0:	outs   dx,DWORD PTR ds:[rsi]
   14000b8b1:	add    BYTE PTR [rbx+0x0],dh
   14000b8b4:	outs   dx,DWORD PTR ds:[rsi]
   14000b8b5:	add    BYTE PTR [rsi+0x0],ah
   14000b8b8:	je     0x14000b8ba
   14000b8ba:	and    BYTE PTR [rax],al
   14000b8bc:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b8c0:	jb     0x14000b8c2
   14000b8c2:	jo     0x14000b8c4
   14000b8c4:	outs   dx,DWORD PTR ds:[rsi]
   14000b8c5:	add    BYTE PTR [rdx+0x0],dh
   14000b8c8:	(bad)  
   14000b8c9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b8cd:	add    BYTE PTR [rdi+0x0],ch
   14000b8d0:	outs   dx,BYTE PTR ds:[rsi]
   14000b8d1:	add    BYTE PTR [rax],al
   14000b8d3:	add    BYTE PTR [rax+rax*1+0x22],ch
   14000b8d7:	add    BYTE PTR [rcx],al
   14000b8d9:	add    BYTE PTR [rsi+0x0],al
   14000b8dc:	imul   eax,DWORD PTR [rax],0x65006c
   14000b8e2:	add    BYTE PTR [rbp+0x0],r12b
   14000b8e6:	jae    0x14000b8e8
   14000b8e8:	movsxd eax,DWORD PTR [rax]
   14000b8ea:	jb     0x14000b8ec
   14000b8ec:	imul   eax,DWORD PTR [rax],0x740070
   14000b8f2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b8f8:	add    BYTE PTR [rax],al
   14000b8fa:	add    BYTE PTR [rax],al
   14000b8fc:	add    BYTE PTR [rcx+0x0],r13b
   14000b900:	add    BYTE PTR [ecx+0x0],ch
   14000b904:	je     0x14000b906
   14000b906:	imul   eax,DWORD PTR [rax],0x65007a
   14000b90c:	jb     0x14000b90e
   14000b90e:	and    BYTE PTR [rax],al
   14000b910:	je     0x14000b912
   14000b912:	outs   dx,DWORD PTR ds:[rsi]
   14000b913:	add    BYTE PTR [rax],ah
   14000b915:	add    BYTE PTR [rbp+0x0],cl
   14000b918:	outs   dx,DWORD PTR ds:[rsi]
   14000b919:	add    BYTE PTR [rsi+0x0],ch
   14000b91c:	imul   eax,DWORD PTR [rax],0x6f0074
   14000b922:	jb     0x14000b924
   14000b924:	and    BYTE PTR [rax],al
   14000b926:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000b92a:	jo     0x14000b92c
   14000b92c:	jo     0x14000b92e
   14000b92e:	imul   eax,DWORD PTR [rax],0x67006e
   14000b934:	and    BYTE PTR [rax],al
   14000b936:	push   rsp
   14000b937:	add    BYTE PTR [rdi+0x0],ch
   14000b93a:	outs   dx,DWORD PTR ds:[rsi]
   14000b93b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000b93f:	add    BYTE PTR [rsi+0x0],ah
   14000b942:	and    eax,DWORD PTR [rax]
   14000b944:	add    DWORD PTR [rax],eax
   14000b946:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b94a:	ins    BYTE PTR es:[rdi],dx
   14000b94b:	add    BYTE PTR [rbp+0x0],ah
   14000b94e:	push   rsi
   14000b94f:	add    BYTE PTR [rbp+0x0],ah
   14000b952:	jb     0x14000b954
   14000b954:	jae    0x14000b956
   14000b956:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b95c:	add    BYTE PTR [rax],al
   14000b95e:	add    BYTE PTR [rax],al
   14000b960:	xor    DWORD PTR [rax],eax
   14000b962:	xor    BYTE PTR [rax],al
   14000b964:	add    BYTE PTR cs:[rax],dh
   14000b967:	add    BYTE PTR [rsi],ch
   14000b969:	add    BYTE PTR [rcx],dh
   14000b96b:	add    BYTE PTR [rax],dh
   14000b96d:	add    BYTE PTR [rdx],dh
   14000b96f:	add    BYTE PTR [rax+rax*1],dh
   14000b972:	xor    BYTE PTR [rax],al
   14000b974:	add    BYTE PTR cs:[rcx],dh
   14000b977:	add    BYTE PTR [rsi],dh
   14000b979:	add    BYTE PTR [rbx],dh
   14000b97b:	add    BYTE PTR [rax],bh
   14000b97d:	add    BYTE PTR [rax+rax*1],dh
   14000b980:	and    BYTE PTR [rax],al
   14000b982:	sub    BYTE PTR [rax],al
   14000b984:	je     0x14000b986
   14000b986:	push   0x2e003100
   14000b98b:	add    BYTE PTR [rcx],dh
   14000b98d:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700e993
   14000b993:	add    BYTE PTR [rax],dh
   14000b995:	add    BYTE PTR [rcx],bh
   14000b997:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700ea9d
   14000b99d:	add    BYTE PTR [rax],dh
   14000b99f:	add    BYTE PTR [rax],dh
   14000b9a1:	add    BYTE PTR [rcx],ch
   14000b9a3:	add    BYTE PTR [rax],al
   14000b9a5:	add    BYTE PTR [rax],al
   14000b9a7:	add    BYTE PTR [rdx+0x0],al
   14000b9aa:	adc    DWORD PTR [rax],eax
   14000b9ac:	add    DWORD PTR [rax],eax
   14000b9ae:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b9b2:	je     0x14000b9b4
   14000b9b4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b9b8:	outs   dx,BYTE PTR ds:[rsi]
   14000b9b9:	add    BYTE PTR [rcx+0x0],ah
   14000b9bc:	ins    BYTE PTR es:[rdi],dx
   14000b9bd:	add    BYTE PTR [rsi+0x0],cl
   14000b9c0:	(bad)  
   14000b9c1:	add    BYTE PTR [rbp+0x0],ch
   14000b9c4:	add    BYTE PTR gs:[rax],al
   14000b9c7:	add    BYTE PTR [rbp+0x0],cl
   14000b9ca:	jne    0x14000b9cc
   14000b9cc:	ins    BYTE PTR es:[rdi],dx
   14000b9cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b9d1:	add    BYTE PTR [rax+rax*1+0x69],al
   14000b9d5:	add    BYTE PTR [rdi+0x0],ah
   14000b9d8:	imul   eax,DWORD PTR [rax],0x6f004d
   14000b9de:	outs   dx,BYTE PTR ds:[rsi]
   14000b9df:	add    BYTE PTR [rsi],ch
   14000b9e1:	add    BYTE PTR [rbp+0x0],ah
   14000b9e4:	js     0x14000b9e6
   14000b9e6:	add    BYTE PTR gs:[rax],al
   14000b9e9:	add    BYTE PTR [rax],al
   14000b9eb:	add    BYTE PTR [rax+0x1002e00],al
   14000b9f1:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b9f5:	add    BYTE PTR [rdi+0x0],ah
   14000b9f8:	(bad)  
   14000b9f9:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000b9fd:	add    BYTE PTR [rdi+0x0],ch
   14000ba00:	jo     0x14000ba02
   14000ba02:	jns    0x14000ba04
   14000ba04:	jb     0x14000ba06
   14000ba06:	imul   eax,DWORD PTR [rax],0x680067
   14000ba0c:	je     0x14000ba0e
   14000ba0e:	add    BYTE PTR [rax],al
   14000ba10:	test   eax,0x4d002000
   14000ba15:	add    BYTE PTR [rcx+0x0],ch
   14000ba18:	movsxd eax,DWORD PTR [rax]
   14000ba1a:	jb     0x14000ba1c
   14000ba1c:	outs   dx,DWORD PTR ds:[rsi]
   14000ba1d:	add    BYTE PTR [rbx+0x0],dh
   14000ba20:	outs   dx,DWORD PTR ds:[rsi]
   14000ba21:	add    BYTE PTR [rsi+0x0],ah
   14000ba24:	je     0x14000ba26
   14000ba26:	and    BYTE PTR [rax],al
   14000ba28:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000ba2c:	jb     0x14000ba2e
   14000ba2e:	jo     0x14000ba30
   14000ba30:	outs   dx,DWORD PTR ds:[rsi]
   14000ba31:	add    BYTE PTR [rdx+0x0],dh
   14000ba34:	(bad)  
   14000ba35:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ba39:	add    BYTE PTR [rdi+0x0],ch
   14000ba3c:	outs   dx,BYTE PTR ds:[rsi]
   14000ba3d:	add    BYTE PTR [rsi],ch
   14000ba3f:	add    BYTE PTR [rax],ah
   14000ba41:	add    BYTE PTR [rcx+0x0],al
   14000ba44:	ins    BYTE PTR es:[rdi],dx
   14000ba45:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000ba49:	add    BYTE PTR [rdx+0x0],dh
   14000ba4c:	imul   eax,DWORD PTR [rax],0x680067
   14000ba52:	je     0x14000ba54
   14000ba54:	jae    0x14000ba56
   14000ba56:	and    BYTE PTR [rax],al
   14000ba58:	jb     0x14000ba5a
   14000ba5a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000ba5e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ba62:	jbe    0x14000ba64
   14000ba64:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000ba69:	add    BYTE PTR [rax],al
   14000ba6b:	add    BYTE PTR [rdx+0x0],cl
   14000ba6e:	adc    DWORD PTR [rax],eax
   14000ba70:	add    DWORD PTR [rax],eax
   14000ba72:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000ba76:	imul   eax,DWORD PTR [rax],0x690067
   14000ba7c:	outs   dx,BYTE PTR ds:[rsi]
   14000ba7d:	add    BYTE PTR [rcx+0x0],ah
   14000ba80:	ins    BYTE PTR es:[rdi],dx
   14000ba81:	add    BYTE PTR [rsi+0x0],al
   14000ba84:	imul   eax,DWORD PTR [rax],0x65006c
   14000ba8a:	outs   dx,BYTE PTR ds:[rsi]
   14000ba8b:	add    BYTE PTR [rcx+0x0],ah
   14000ba8e:	ins    DWORD PTR es:[rdi],dx
   14000ba8f:	add    BYTE PTR [rbp+0x0],ah
   14000ba92:	add    BYTE PTR [rax],al
   14000ba94:	rex.WRB add BYTE PTR [r13+0x0],r14b
   14000ba98:	ins    BYTE PTR es:[rdi],dx
   14000ba99:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ba9d:	add    BYTE PTR [rax+rax*1+0x69],al
   14000baa1:	add    BYTE PTR [rdi+0x0],ah
   14000baa4:	imul   eax,DWORD PTR [rax],0x6f004d
   14000baaa:	outs   dx,BYTE PTR ds:[rsi]
   14000baab:	add    BYTE PTR [rsi],ch
   14000baad:	add    BYTE PTR [rbp+0x0],ah
   14000bab0:	js     0x14000bab2
   14000bab2:	add    BYTE PTR gs:[rax],al
   14000bab5:	add    BYTE PTR [rax],al
   14000bab7:	add    BYTE PTR [rdx+0x0],ch
   14000baba:	and    eax,0x50000100
   14000babf:	add    BYTE PTR [rdx+0x0],dh
   14000bac2:	outs   dx,DWORD PTR ds:[rsi]
   14000bac3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000bac7:	add    BYTE PTR [rbx+0x0],ah
   14000baca:	je     0x14000bacc
   14000bacc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000bad0:	ins    DWORD PTR es:[rdi],dx
   14000bad1:	add    BYTE PTR [rbp+0x0],ah
   14000bad4:	add    BYTE PTR [rax],al
   14000bad6:	add    BYTE PTR [rax],al
   14000bad8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000badc:	movsxd eax,DWORD PTR [rax]
   14000bade:	jb     0x14000bae0
   14000bae0:	outs   dx,DWORD PTR ds:[rsi]
   14000bae1:	add    BYTE PTR [rbx+0x0],dh
   14000bae4:	outs   dx,DWORD PTR ds:[rsi]
   14000bae5:	add    BYTE PTR [rsi+0x0],ah
   14000bae8:	je     0x14000baea
   14000baea:	scas   al,BYTE PTR es:[rdi]
   14000baeb:	add    BYTE PTR [rax],ah
   14000baed:	add    BYTE PTR [rdi+0x0],dl
   14000baf0:	imul   eax,DWORD PTR [rax],0x64006e
   14000baf6:	outs   dx,DWORD PTR ds:[rsi]
   14000baf7:	add    BYTE PTR [rdi+0x0],dh
   14000bafa:	jae    0x14000bafc
   14000bafc:	scas   al,BYTE PTR es:[rdi]
   14000bafd:	add    BYTE PTR [rax],ah
   14000baff:	add    BYTE PTR [rdi+0x0],cl
   14000bb02:	jo     0x14000bb04
   14000bb04:	add    BYTE PTR gs:[rdx+0x0],dh
   14000bb08:	(bad)  
   14000bb09:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000bb0d:	add    BYTE PTR [rsi+0x0],ch
   14000bb10:	add    BYTE PTR [eax],ah
   14000bb13:	add    BYTE PTR [rbx+0x0],dl
   14000bb16:	jns    0x14000bb18
   14000bb18:	jae    0x14000bb1a
   14000bb1a:	je     0x14000bb1c
   14000bb1c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000bb20:	add    BYTE PTR [rax],al
   14000bb22:	add    BYTE PTR [rax],al
   14000bb24:	rex.RX add BYTE PTR [rcx],r10b
   14000bb27:	add    BYTE PTR [rcx],al
   14000bb29:	add    BYTE PTR [rax+0x0],dl
   14000bb2c:	jb     0x14000bb2e
   14000bb2e:	outs   dx,DWORD PTR ds:[rsi]
   14000bb2f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000bb33:	add    BYTE PTR [rbx+0x0],ah
   14000bb36:	je     0x14000bb38
   14000bb38:	push   rsi
   14000bb39:	add    BYTE PTR [rbp+0x0],ah
   14000bb3c:	jb     0x14000bb3e
   14000bb3e:	jae    0x14000bb40
   14000bb40:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bb46:	add    BYTE PTR [rax],al
   14000bb48:	xor    DWORD PTR [rax],eax
   14000bb4a:	xor    BYTE PTR [rax],al
   14000bb4c:	add    BYTE PTR cs:[rax],dh
   14000bb4f:	add    BYTE PTR [rsi],ch
   14000bb51:	add    BYTE PTR [rcx],dh
   14000bb53:	add    BYTE PTR [rax],dh
   14000bb55:	add    BYTE PTR [rdx],dh
   14000bb57:	add    BYTE PTR [rax+rax*1],dh
   14000bb5a:	xor    BYTE PTR [rax],al
   14000bb5c:	add    BYTE PTR cs:[rcx],dh
   14000bb5f:	add    BYTE PTR [rsi],dh
   14000bb61:	add    BYTE PTR [rbx],dh
   14000bb63:	add    BYTE PTR [rax],bh
   14000bb65:	add    BYTE PTR [rax+rax*1],dh
   14000bb68:	add    BYTE PTR [rax],al
   14000bb6a:	add    BYTE PTR [rax],al
   14000bb6c:	add    BYTE PTR [rax],r8b
   14000bb6f:	add    BYTE PTR [rcx],al
   14000bb71:	add    BYTE PTR [rsi+0x0],dl
   14000bb74:	(bad)  
   14000bb75:	add    BYTE PTR [rdx+0x0],dh
   14000bb78:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000bb7c:	ins    BYTE PTR es:[rdi],dx
   14000bb7d:	add    BYTE PTR [rbp+0x0],ah
   14000bb80:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000bb84:	data16 add BYTE PTR [rdi+0x0],ch
   14000bb88:	add    BYTE PTR [rax],al
   14000bb8a:	add    BYTE PTR [rax],al
   14000bb8c:	and    al,0x0
   14000bb8e:	add    al,0x0
   14000bb90:	add    BYTE PTR [rax],al
   14000bb92:	push   rsp
   14000bb93:	add    BYTE PTR [rdx+0x0],dh
   14000bb96:	(bad)  
   14000bb97:	add    BYTE PTR [rsi+0x0],ch
   14000bb9a:	jae    0x14000bb9c
   14000bb9c:	ins    BYTE PTR es:[rdi],dx
   14000bb9d:	add    BYTE PTR [rcx+0x0],ah
   14000bba0:	je     0x14000bba2
   14000bba2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000bba8:	add    BYTE PTR [rax],al
   14000bbaa:	add    BYTE PTR [rax],al
   14000bbac:	or     DWORD PTR [rax+rsi*4],eax
   14000bbaf:	add    al,0x28
   14000bbb1:	add    BYTE PTR [rax],al
   14000bbb3:	add    BYTE PTR [rax],dh
   14000bbb5:	add    BYTE PTR [rax],al
   14000bbb7:	add    BYTE PTR [rax+0x0],ah
   14000bbba:	add    BYTE PTR [rax],al
   14000bbbc:	add    DWORD PTR [rax],eax
   14000bbbe:	add    al,0x0
	...
   14000bbe0:	add    BYTE PTR [rax-0x80000000],al
   14000bbe6:	add    BYTE PTR [rax],0x80
   14000bbe9:	add    BYTE PTR [rax],al
   14000bbeb:	add    BYTE PTR [rax-0x7fff8000],al
   14000bbf1:	add    BYTE PTR [rax],0x0
   14000bbf4:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   14000bbfb:	add    BYTE PTR [rax],al
   14000bbfd:	add    bh,bh
   14000bbff:	add    BYTE PTR [rax],al
   14000bc01:	add    BYTE PTR [rax],al
   14000bc03:	add    BYTE PTR [rax],al
   14000bc05:	(bad)  
   14000bc06:	inc    DWORD PTR [rax]
   14000bc08:	inc    DWORD PTR [rax]
   14000bc0a:	add    BYTE PTR [rax],al
   14000bc0c:	inc    DWORD PTR [rax]
   14000bc0e:	inc    DWORD PTR [rax]
   14000bc10:	(bad)  
   14000bc11:	inc    DWORD PTR [rax]
   14000bc13:	add    bh,bh
   14000bc15:	(bad)  
   14000bc16:	inc    DWORD PTR [rax]
   14000bc18:	adc    DWORD PTR [rcx],edx
   14000bc1a:	adc    DWORD PTR [rcx],edx
   14000bc1c:	adc    DWORD PTR [rcx],edx
   14000bc1e:	adc    DWORD PTR [rcx],edx
   14000bc20:	adc    DWORD PTR [rcx],edx
   14000bc22:	adc    DWORD PTR [rcx],edx
   14000bc24:	adc    DWORD PTR [rcx],edx
   14000bc26:	adc    DWORD PTR [rcx],edx
   14000bc28:	adc    DWORD PTR [rcx],edx
   14000bc2a:	adc    DWORD PTR [rcx],edx
   14000bc2c:	adc    DWORD PTR [rcx],edx
   14000bc2e:	adc    DWORD PTR [rcx],edx
   14000bc30:	adc    DWORD PTR [rcx],edx
   14000bc32:	adc    DWORD PTR [rcx],edx
   14000bc34:	adc    DWORD PTR [rcx],edx
   14000bc36:	adc    DWORD PTR [rcx],edx
   14000bc38:	adc    DWORD PTR [rcx],edx
   14000bc3a:	adc    DWORD PTR [rcx],edx
   14000bc3c:	adc    DWORD PTR [rcx],edx
   14000bc3e:	adc    DWORD PTR [rcx],edx
   14000bc40:	adc    DWORD PTR [rcx],edx
   14000bc42:	adc    DWORD PTR [rcx],edx
   14000bc44:	adc    DWORD PTR [rcx],edx
   14000bc46:	adc    DWORD PTR [rcx],edx
   14000bc48:	adc    DWORD PTR [rcx],edx
   14000bc4a:	adc    DWORD PTR [rcx],edx
   14000bc4c:	adc    DWORD PTR [rcx],edx
   14000bc4e:	adc    DWORD PTR [rcx],edx
   14000bc50:	adc    DWORD PTR [rcx],edx
   14000bc52:	adc    DWORD PTR [rcx],edx
   14000bc54:	adc    DWORD PTR [rcx],edx
   14000bc56:	adc    DWORD PTR [rcx],edx
   14000bc58:	adc    DWORD PTR [rcx],edx
   14000bc5a:	adc    DWORD PTR [rcx],edx
   14000bc5c:	adc    DWORD PTR [rcx],edx
   14000bc5e:	adc    DWORD PTR [rcx],edx
   14000bc60:	adc    DWORD PTR [rcx],edx
   14000bc62:	adc    DWORD PTR [rax],eax
   14000bc64:	add    BYTE PTR [rcx],al
   14000bc66:	adc    DWORD PTR [rcx],edx
   14000bc68:	adc    DWORD PTR [rcx],edx
   14000bc6a:	adc    DWORD PTR [rcx],edx
   14000bc6c:	adc    DWORD PTR [rcx],edx
   14000bc6e:	adc    DWORD PTR [rcx],edx
   14000bc70:	adc    DWORD PTR [rcx],edx
   14000bc72:	adc    DWORD PTR [rcx],edx
   14000bc74:	adc    DWORD PTR [rcx],edx
   14000bc76:	adc    DWORD PTR [rcx],edx
   14000bc78:	adc    DWORD PTR [rcx],edx
   14000bc7a:	(bad)  
   14000bc7b:	mov    BYTE PTR [rdi+0x70],dh
   14000bc7e:	add    BYTE PTR [rcx],al
   14000bc80:	adc    DWORD PTR [rcx],edx
   14000bc82:	adc    DWORD PTR [rcx],edx
   14000bc84:	adc    DWORD PTR [rcx],edx
   14000bc86:	adc    DWORD PTR [rcx],edx
   14000bc88:	adc    DWORD PTR [rcx],edx
   14000bc8a:	adc    DWORD PTR [rcx],edx
   14000bc8c:	adc    DWORD PTR [rcx],edx
   14000bc8e:	adc    DWORD PTR [rcx],edx
   14000bc90:	adc    DWORD PTR [rcx],edx
   14000bc92:	js     0x14000bc1c
   14000bc94:	ja     0x14000bd0d
   14000bc96:	ja     0x14000bd08
   14000bc98:	add    BYTE PTR [rcx],al
   14000bc9a:	adc    DWORD PTR [rcx],edx
   14000bc9c:	adc    DWORD PTR [rcx],edx
   14000bc9e:	adc    DWORD PTR [rcx],edx
   14000bca0:	adc    DWORD PTR [rcx],edx
   14000bca2:	adc    DWORD PTR [rcx],edx
   14000bca4:	adc    DWORD PTR [rcx],edx
   14000bca6:	adc    DWORD PTR [rcx],edx
   14000bca8:	adc    DWORD PTR [rcx],edx
   14000bcaa:	jg     0x14000bc34
   14000bcac:	ja     0x14000bd25
   14000bcae:	ja     0x14000bd27
   14000bcb0:	ja     0x14000bd22
   14000bcb2:	add    BYTE PTR [rcx],al
   14000bcb4:	adc    DWORD PTR [rcx],edx
   14000bcb6:	adc    DWORD PTR [rcx],edx
   14000bcb8:	adc    DWORD PTR [rcx],edx
   14000bcba:	adc    DWORD PTR [rcx],edx
   14000bcbc:	adc    DWORD PTR [rcx],edx
   14000bcbe:	adc    DWORD PTR [rcx],edx
   14000bcc0:	adc    DWORD PTR [rcx],edx
   14000bcc2:	jg     0x14000bc4c
   14000bcc4:	ja     0x14000bd3d
   14000bcc6:	ja     0x14000bd3f
   14000bcc8:	ja     0x14000bd41
   14000bcca:	ja     0x14000bd3c
   14000bccc:	add    BYTE PTR [rcx],al
   14000bcce:	adc    DWORD PTR [rcx],edx
   14000bcd0:	adc    DWORD PTR [rcx],edx
   14000bcd2:	adc    DWORD PTR [rcx],edx
   14000bcd4:	adc    DWORD PTR [rcx],edx
   14000bcd6:	adc    DWORD PTR [rcx],edx
   14000bcd8:	adc    DWORD PTR [rcx],edx
   14000bcda:	jg     0x14000bc64
   14000bcdc:	ja     0x14000bcdd
   14000bcde:	push   QWORD PTR [rdi+0x77]
   14000bce1:	ja     0x14000bd5a
   14000bce3:	ja     0x14000bd5c
   14000bce5:	jo     0x14000bce7
   14000bce7:	add    DWORD PTR [rcx],edx
   14000bce9:	adc    DWORD PTR [rcx],edx
   14000bceb:	adc    DWORD PTR [rcx],edx
   14000bced:	adc    DWORD PTR [rcx],edx
   14000bcef:	adc    DWORD PTR [rcx],edx
   14000bcf1:	adc    DWORD PTR [rdi-0x78],edi
   14000bcf4:	ja     0x14000bcde
   14000bcf6:	call   0x1b778b4fa
   14000bcfb:	ja     0x14000bd74
   14000bcfd:	ja     0x14000bd76
   14000bcff:	jo     0x14000bd12
   14000bd01:	adc    DWORD PTR [rcx],edx
   14000bd03:	adc    DWORD PTR [rcx],edx
   14000bd05:	adc    DWORD PTR [rcx],edx
   14000bd07:	adc    DWORD PTR [rcx],edx
   14000bd09:	adc    DWORD PTR [rdi-0x78],edi
   14000bd0c:	ja     0x14000bc9c
   14000bd0e:	mov    cs,WORD PTR [rsi+0x77f7ff8f]
   14000bd14:	ja     0x14000bd8d
   14000bd16:	ja     0x14000bd88
   14000bd18:	adc    DWORD PTR [rcx],edx
   14000bd1a:	adc    DWORD PTR [rcx],edx
   14000bd1c:	adc    DWORD PTR [rcx],edx
   14000bd1e:	adc    DWORD PTR [rcx],edx
   14000bd20:	adc    DWORD PTR [rcx],edx
   14000bd22:	jg     0x14000bcac
   14000bd24:	ja     0x14000bd0e
   14000bd26:	call   0x12fe9a613
   14000bd2b:	push   rdi
   14000bd2d:	ja     0x14000bda6
   14000bd2f:	jo     0x14000bd42
   14000bd31:	adc    DWORD PTR [rcx],edx
   14000bd33:	adc    DWORD PTR [rcx],edx
   14000bd35:	adc    DWORD PTR [rcx],edx
   14000bd37:	adc    DWORD PTR [rcx],edx
   14000bd39:	adc    DWORD PTR [rdi-0x78],edi
   14000bd3c:	ja     0x14000bccc
   14000bd3e:	mov    cs,WORD PTR [rsi-0x71717172]
   14000bd44:	(bad)  
   14000bd45:	push   rdi
   14000bd47:	jo     0x14000bd5a
   14000bd49:	adc    DWORD PTR [rcx],edx
   14000bd4b:	adc    DWORD PTR [rcx],edx
   14000bd4d:	adc    DWORD PTR [rcx],edx
   14000bd4f:	adc    DWORD PTR [rcx],edx
   14000bd51:	adc    DWORD PTR [rdi-0x78],edi
   14000bd54:	ja     0x14000bd3e
   14000bd56:	call   0x128e9a643
   14000bd5b:	call   0x1b0f8a648
   14000bd60:	adc    DWORD PTR [rcx],edx
   14000bd62:	adc    DWORD PTR [rcx],edx
   14000bd64:	adc    DWORD PTR [rcx],edx
   14000bd66:	adc    DWORD PTR [rcx],edx
   14000bd68:	adc    DWORD PTR [rcx],edx
   14000bd6a:	jg     0x14000bcf4
   14000bd6c:	ja     0x14000bcfc
   14000bd6e:	mov    cs,WORD PTR [rsi-0x71717172]
   14000bd74:	mov    cs,WORD PTR [rsi+0x111170f7]
   14000bd7a:	adc    DWORD PTR [rcx],edx
   14000bd7c:	adc    DWORD PTR [rcx],edx
   14000bd7e:	adc    DWORD PTR [rcx],edx
   14000bd80:	adc    DWORD PTR [rcx],edx
   14000bd82:	jg     0x14000bd0b
   14000bd84:	js     0x14000bd6e
   14000bd86:	call   0x128e9a673
   14000bd8b:	call   0x1b0f8a678
   14000bd90:	adc    DWORD PTR [rcx],edx
   14000bd92:	adc    DWORD PTR [rcx],edx
   14000bd94:	adc    DWORD PTR [rcx],edx
   14000bd96:	adc    DWORD PTR [rcx],edx
   14000bd98:	adc    DWORD PTR [rcx],edx
   14000bd9a:	jg     0x14000bd23
   14000bd9c:	js     0x14000bd8c
   14000bd9e:	out    dx,al
   14000bd9f:	out    dx,al
   14000bda0:	out    dx,al
   14000bda1:	out    dx,al
   14000bda2:	mov    cs,WORD PTR [rsi+0x70f78e8e]
   14000bda8:	adc    DWORD PTR [rcx],edx
   14000bdaa:	adc    DWORD PTR [rcx],edx
   14000bdac:	adc    DWORD PTR [rcx],edx
   14000bdae:	adc    DWORD PTR [rcx],edx
   14000bdb0:	adc    DWORD PTR [rdi],edx
   14000bdb2:	mov    BYTE PTR [rdi-0x11171188],al
   14000bdb8:	call   0x128e9a6a5
   14000bdbd:	call   0x151122eb9
   14000bdc2:	adc    DWORD PTR [rcx],edx
   14000bdc4:	adc    DWORD PTR [rcx],edx
   14000bdc6:	adc    DWORD PTR [rcx],edx
   14000bdc8:	adc    DWORD PTR [rdi],edx
   14000bdca:	clc    
   14000bdcb:	xchg   DWORD PTR [rax-0x18],edi
   14000bdce:	out    dx,al
   14000bdcf:	call   0xceefacc2
   14000bdd4:	mov    cs,WORD PTR [rsi+0x111170f7]
   14000bdda:	adc    DWORD PTR [rcx],edx
   14000bddc:	adc    DWORD PTR [rcx],edx
   14000bdde:	adc    DWORD PTR [rcx],edx
   14000bde0:	adc    DWORD PTR [rdi],edx
   14000bde2:	clc    
   14000bde3:	xchg   DWORD PTR [rax-0x2],edi
   14000bde6:	call   0x128e9a6d9
   14000bdeb:	call   0x1b0f8a6d8
   14000bdf0:	adc    DWORD PTR [rcx],edx
   14000bdf2:	adc    DWORD PTR [rcx],edx
   14000bdf4:	adc    DWORD PTR [rcx],edx
   14000bdf6:	adc    DWORD PTR [rcx],edx
   14000bdf8:	adc    DWORD PTR [rdi],edx
   14000bdfa:	clc    
   14000bdfb:	xchg   DWORD PTR [rax-0x12],edi
   14000bdfe:	out    dx,al
   14000bdff:	call   0x12eefacf2
   14000be04:	mov    cs,WORD PTR [rsi+0x111170f7]
   14000be0a:	adc    DWORD PTR [rcx],edx
   14000be0c:	adc    DWORD PTR [rcx],edx
   14000be0e:	adc    DWORD PTR [rcx],edx
   14000be10:	adc    DWORD PTR [rdi],edx
   14000be12:	clc    
   14000be13:	xchg   DWORD PTR [rax-0x2],edi
   14000be16:	out    dx,al
   14000be17:	out    dx,al
   14000be18:	call   0x128e9a70b
   14000be1d:	call   0x151122f19
   14000be22:	adc    DWORD PTR [rcx],edx
   14000be24:	adc    DWORD PTR [rcx],edx
   14000be26:	adc    DWORD PTR [rcx],edx
   14000be28:	adc    DWORD PTR [rdi],edx
   14000be2a:	clc    
   14000be2b:	xchg   DWORD PTR [rax-0x11],edi
   14000be2e:	out    dx,al
   14000be2f:	call   0x12eefa722
   14000be34:	mov    cs,WORD PTR [rsi+0x111170f7]
   14000be3a:	adc    DWORD PTR [rcx],edx
   14000be3c:	adc    DWORD PTR [rcx],edx
   14000be3e:	adc    DWORD PTR [rcx],edx
   14000be40:	adc    DWORD PTR [rdi],edx
   14000be42:	clc    
   14000be43:	xchg   DWORD PTR [rax-0x2],edi
   14000be46:	(bad)  
   14000be47:	out    dx,al
   14000be48:	call   0x128e9a73b
   14000be4d:	call   0x151122f49
   14000be52:	adc    DWORD PTR [rcx],edx
   14000be54:	adc    DWORD PTR [rcx],edx
   14000be56:	adc    DWORD PTR [rcx],edx
   14000be58:	adc    DWORD PTR [rdi],edx
   14000be5a:	clc    
   14000be5b:	xchg   DWORD PTR [rax-0x11],edi
   14000be5e:	out    dx,eax
   14000be5f:	out    dx,al
   14000be60:	rol    BYTE PTR [rax],0x0
   14000be63:	(bad)  
   14000be64:	mov    cs,WORD PTR [rsi+0x111170f7]
   14000be6a:	adc    DWORD PTR [rcx],edx
   14000be6c:	adc    DWORD PTR [rcx],edx
   14000be6e:	adc    DWORD PTR [rcx],edx
   14000be70:	adc    DWORD PTR [rdi],edx
   14000be72:	clc    
   14000be73:	xchg   DWORD PTR [rax-0x2],edi
   14000be76:	(bad)  
   14000be77:	dec    BYTE PTR [rsp+rcx*8+0x66]
   14000be7b:	(bad)  
   14000be7c:	add    al,ch
   14000be7e:	out    0x70,eax
   14000be80:	adc    DWORD PTR [rcx],edx
   14000be82:	adc    DWORD PTR [rcx],edx
   14000be84:	adc    DWORD PTR [rcx],edx
   14000be86:	adc    DWORD PTR [rcx],edx
   14000be88:	adc    DWORD PTR [rdi],edx
   14000be8a:	clc    
   14000be8b:	xchg   DWORD PTR [rax-0x1],edi
   14000be8e:	(bad)  
   14000be8f:	out    dx,eax
   14000be90:	in     al,0x88
   14000be92:	int3   
   14000be93:	(bad)  
   14000be94:	data16 add BYTE PTR [rdi],al
   14000be97:	jo     0x14000beaa
   14000be99:	adc    DWORD PTR [rcx],edx
   14000be9b:	adc    DWORD PTR [rcx],edx
   14000be9d:	adc    DWORD PTR [rcx],edx
   14000be9f:	adc    DWORD PTR [rcx],edx
   14000bea1:	(bad)  
   14000bea2:	clc    
   14000bea3:	xchg   DWORD PTR [rax-0x2],edi
   14000bea6:	(bad)  
   14000bea7:	(bad)  
   14000bea8:	dec    BYTE PTR [rsi-0x18]
   14000beab:	mov    esp,cs
   14000bead:	data16 (bad) 
   14000beaf:	add    BYTE PTR [rcx],dl
   14000beb1:	adc    DWORD PTR [rcx],edx
   14000beb3:	adc    DWORD PTR [rcx],edx
   14000beb5:	adc    DWORD PTR [rcx],edx
   14000beb7:	adc    DWORD PTR [rcx],edx
   14000beb9:	(bad)  
   14000beba:	clc    
   14000bebb:	xchg   DWORD PTR [rax-0x10000001],ecx
   14000bec1:	in     al,0xee
   14000bec3:	call   0x1a6c78b50
   14000bec8:	add    BYTE PTR [rcx],al
   14000beca:	adc    DWORD PTR [rcx],edx
   14000becc:	adc    DWORD PTR [rcx],edx
   14000bece:	adc    DWORD PTR [rcx],edx
   14000bed0:	adc    DWORD PTR [rdi],edx
   14000bed2:	clc    
   14000bed3:	ja     0x14000be64
   14000bed5:	(bad)  
   14000bed6:	(bad)  
   14000bed7:	(bad)  
   14000bed8:	(bad)  
   14000bed9:	inc    BYTE PTR [rsi+rbp*8-0x12]
   14000bedd:	mov    BYTE PTR [rsp+rcx*8+0x11006066],cl
   14000bee4:	adc    DWORD PTR [rcx],edx
   14000bee6:	adc    DWORD PTR [rcx],edx
   14000bee8:	adc    DWORD PTR [rdi],edx
   14000beea:	clc    
   14000beeb:	ja     0x14000be7c
   14000beed:	(bad)  
   14000beee:	(bad)  
   14000beef:	(bad)  
   14000bef0:	(bad)  
   14000bef1:	out    dx,eax
   14000bef2:	out    dx,eax
   14000bef3:	rex.R out dx,al
   14000bef5:	out    dx,al
   14000bef6:	call   0x1a6c78b83
   14000befb:	add    BYTE PTR [rcx],dl
   14000befd:	adc    DWORD PTR [rcx],edx
   14000beff:	adc    DWORD PTR [rcx],edx
   14000bf01:	js     0x14000be8b
   14000bf03:	ja     0x14000be94
   14000bf05:	(bad)  
   14000bf06:	(bad)  
   14000bf07:	(bad)  
   14000bf08:	(bad)  
   14000bf09:	(bad)  
   14000bf0a:	(bad)  
   14000bf0b:	inc    BYTE PTR [rsi+rbp*8-0x12]
   14000bf0f:	out    dx,al
   14000bf10:	mov    BYTE PTR [rsp+rcx*8+0x11110066],cl
   14000bf17:	adc    DWORD PTR [rcx],edx
   14000bf19:	jg     0x14000bea3
   14000bf1b:	ja     0x14000beac
   14000bf1d:	(bad)  
   14000bf1e:	(bad)  
   14000bf1f:	(bad)  
   14000bf20:	(bad)  
   14000bf21:	(bad)  
   14000bf22:	out    dx,eax
   14000bf23:	out    dx,eax
   14000bf24:	out    dx,al
   14000bf25:	rex.R out dx,al
   14000bf27:	out    dx,al
   14000bf28:	out    dx,al
   14000bf29:	enter  0xcc88,0x66
   14000bf2d:	add    BYTE PTR [rcx],dl
   14000bf2f:	adc    DWORD PTR [rcx],edx
   14000bf31:	jg     0x14000bebb
   14000bf33:	ja     0x14000bec4
   14000bf35:	(bad)  
   14000bf36:	(bad)  
   14000bf37:	(bad)  
   14000bf38:	(bad)  
   14000bf39:	(bad)  
   14000bf3a:	(bad)  
   14000bf3b:	(bad)  
   14000bf3c:	(bad)  
   14000bf3d:	out    dx,al
   14000bf3e:	rex.R out dx,al
   14000bf40:	out    dx,al
   14000bf41:	outs   dx,BYTE PTR ds:[rsi]
   14000bf42:	out    dx,al
   14000bf43:	mov    ah,cl
   14000bf45:	data16 add BYTE PTR [rcx],dl
   14000bf48:	adc    DWORD PTR [rdi-0x78],edi
   14000bf4b:	ja     0x14000bedc
   14000bf4d:	(bad)  
   14000bf4e:	(bad)  
   14000bf4f:	(bad)  
   14000bf50:	(bad)  
   14000bf51:	(bad)  
   14000bf52:	(bad)  
   14000bf53:	out    dx,eax
   14000bf54:	out    dx,eax
   14000bf55:	out    dx,al
   14000bf56:	test   DWORD PTR [rsi-0x1a],0x88eeeeee
   14000bf5d:	int3   
   14000bf5e:	add    WORD PTR [rcx],dx
   14000bf61:	jg     0x14000beeb
   14000bf63:	ja     0x14000bef4
   14000bf65:	(bad)  
   14000bf66:	(bad)  
   14000bf67:	(bad)  
   14000bf68:	(bad)  
   14000bf69:	(bad)  
   14000bf6a:	(bad)  
   14000bf6b:	(bad)  
   14000bf6c:	(bad)  
   14000bf6d:	(bad)  
   14000bf6e:	div    DWORD PTR [rsi+rcx*2-0x1]
   14000bf72:	out    dx,al
   14000bf73:	out    dx,al
   14000bf74:	out    dx,al
   14000bf75:	mov    ah,cl
   14000bf77:	(bad)  
   14000bf78:	adc    DWORD PTR [rdi-0x78],edi
   14000bf7b:	ja     0x14000bf0c
   14000bf7d:	(bad)  
   14000bf7e:	(bad)  
   14000bf7f:	(bad)  
   14000bf80:	(bad)  
   14000bf81:	(bad)  
   14000bf82:	(bad)  
   14000bf83:	(bad)  
   14000bf84:	(bad)  
   14000bf85:	out    dx,eax
   14000bf86:	div    DWORD PTR [rax+0x44]
   14000bf89:	out    dx,al
   14000bf8a:	(bad)  
   14000bf8b:	(bad)  
   14000bf8c:	out    dx,al
   14000bf8d:	out    dx,al
   14000bf8e:	enter  0x1160,0x7f
   14000bf92:	mov    BYTE PTR [rdi-0x78],dh
   14000bf95:	(bad)  
   14000bf96:	(bad)  
   14000bf97:	(bad)  
   14000bf98:	(bad)  
   14000bf99:	(bad)  
   14000bf9a:	(bad)  
   14000bf9b:	(bad)  
   14000bf9c:	(bad)  
   14000bf9d:	(bad)  
   14000bf9e:	div    DWORD PTR [rax+0x4e]
   14000bfa1:	rex.R out dx,al
   14000bfa3:	out    dx,eax
   14000bfa4:	(bad)  
   14000bfa5:	call   0x1bf122012
   14000bfaa:	mov    BYTE PTR [rdi+0x77],dh
   14000bfad:	mov    BYTE PTR [rax-0x7778],cl
   14000bfb3:	(bad)  
   14000bfb4:	(bad)  
   14000bfb5:	push   rdi
   14000bfb7:	jo     0x14000bfcd
   14000bfb9:	out    dx,al
   14000bfba:	rex.R
   14000bfbb:	rex.WRX out dx,al
   14000bfbd:	out    0xee,al
   14000bfbf:	(bad)  
   14000bfc0:	adc    DWORD PTR [rdi-0x78],edi
   14000bfc3:	ja     0x14000c03c
   14000bfc5:	ja     0x14000c03e
   14000bfc7:	ja     0x14000c041
   14000bfc9:	mov    BYTE PTR [rax-0x8007078],cl
   14000bfcf:	jo     0x14000bfe2
   14000bfd1:	int3   
   14000bfd2:	out    dx,al
   14000bfd3:	in     al,0x4e
   14000bfd5:	mov    dh,bh
   14000bfd7:	rcl    DWORD PTR [rcx],0x7f
   14000bfda:	mov    BYTE PTR [rax+0x77777788],cl
   14000bfe0:	ja     0x14000c059
   14000bfe2:	ja     0x14000c05b
   14000bfe4:	mov    BYTE PTR [rax+0x111170f7],cl
   14000bfea:	int3   
   14000bfeb:	int3   
   14000bfec:	int3   
   14000bfed:	int3   
   14000bfee:	int3   
   14000bfef:	adc    DWORD PTR [rcx],edx
   14000bff1:	(bad)  
   14000bff2:	(bad)  
   14000bff3:	(bad)  
   14000bff4:	dec    DWORD PTR [rax+0x77878888]
   14000bffa:	ja     0x14000c073
   14000bffc:	ja     0x14000c075
   14000bffe:	ja     0x14000c070
   14000c000:	adc    DWORD PTR [rcx],edx
   14000c002:	adc    DWORD PTR [rcx],edx
   14000c004:	adc    DWORD PTR [rcx],edx
   14000c006:	adc    DWORD PTR [rcx],edx
   14000c008:	adc    DWORD PTR [rcx],edx
   14000c00a:	ja     0x14000c083
   14000c00c:	ja     0x14000bf9d
   14000c00e:	(bad)  
   14000c00f:	(bad)  
   14000c010:	clc    
   14000c011:	mov    BYTE PTR [rax+0x77777788],cl
   14000c017:	jo     0x14000c02a
   14000c019:	adc    DWORD PTR [rcx],edx
   14000c01b:	adc    DWORD PTR [rcx],edx
   14000c01d:	adc    DWORD PTR [rcx],edx
   14000c01f:	adc    DWORD PTR [rcx],edx
   14000c021:	adc    DWORD PTR [rcx],edx
   14000c023:	adc    DWORD PTR [rcx],edx
   14000c025:	ja     0x14000c09e
   14000c027:	ja     0x14000c0a1
   14000c029:	(bad)  
   14000c02a:	(bad)  
   14000c02b:	dec    DWORD PTR [rax+0x11708788]
   14000c031:	adc    DWORD PTR [rcx],edx
   14000c033:	adc    DWORD PTR [rcx],edx
   14000c035:	adc    DWORD PTR [rcx],edx
   14000c037:	adc    DWORD PTR [rcx],edx
   14000c039:	adc    DWORD PTR [rcx],edx
   14000c03b:	adc    DWORD PTR [rcx],edx
   14000c03d:	adc    DWORD PTR [rcx],edx
   14000c03f:	adc    DWORD PTR [rdi],edx
   14000c041:	ja     0x14000c0ba
   14000c043:	ja     0x14000bfd4
   14000c045:	push   rdi
   14000c047:	add    DWORD PTR [rcx],edx
   14000c049:	adc    DWORD PTR [rcx],edx
   14000c04b:	adc    DWORD PTR [rcx],edx
   14000c04d:	adc    DWORD PTR [rcx],edx
   14000c04f:	adc    DWORD PTR [rcx],edx
   14000c051:	adc    DWORD PTR [rcx],edx
   14000c053:	adc    DWORD PTR [rcx],edx
   14000c055:	adc    DWORD PTR [rcx],edx
   14000c057:	adc    DWORD PTR [rcx],edx
   14000c059:	adc    DWORD PTR [rcx],edx
   14000c05b:	adc    DWORD PTR [rdi+0x77],esi
   14000c05e:	ja     0x14000c071
   14000c060:	adc    DWORD PTR [rcx],edx
   14000c062:	adc    DWORD PTR [rcx],edx
   14000c064:	adc    DWORD PTR [rcx],edx
   14000c066:	adc    DWORD PTR [rcx],edx
   14000c068:	adc    DWORD PTR [rcx],edx
   14000c06a:	adc    DWORD PTR [rcx],edx
   14000c06c:	adc    DWORD PTR [rcx],edx
   14000c06e:	adc    DWORD PTR [rcx],edx
   14000c070:	adc    DWORD PTR [rcx],edx
   14000c072:	adc    DWORD PTR [rcx],edx
   14000c074:	adc    DWORD PTR [rcx],edx
   14000c076:	adc    DWORD PTR [rcx],edx
   14000c078:	adc    DWORD PTR [rcx],edx
   14000c07a:	adc    DWORD PTR [rcx],edx
   14000c07c:	adc    DWORD PTR [rcx],edx
   14000c07e:	adc    DWORD PTR [rcx],edx
   14000c080:	adc    DWORD PTR [rcx],edx
   14000c082:	adc    DWORD PTR [rcx],edx
   14000c084:	adc    DWORD PTR [rcx],edx
   14000c086:	adc    DWORD PTR [rcx],edx
   14000c088:	adc    DWORD PTR [rcx],edx
   14000c08a:	adc    DWORD PTR [rcx],edx
   14000c08c:	adc    DWORD PTR [rcx],edx
   14000c08e:	adc    DWORD PTR [rcx],edx
   14000c090:	adc    DWORD PTR [rcx],edx
   14000c092:	adc    DWORD PTR [rcx],edx
   14000c094:	adc    DWORD PTR [rcx],edx
   14000c096:	adc    DWORD PTR [rcx],edx
   14000c098:	(bad)  
   14000c099:	(bad)  
   14000c09a:	(bad)  
   14000c09b:	(bad)  
   14000c09c:	(bad)  
   14000c09d:	inc    DWORD PTR [rax]
   14000c09f:	add    bh,bh
   14000c0a1:	(bad)  
   14000c0a2:	(bad)  
   14000c0a3:	(bad)  
   14000c0a4:	(bad)  
   14000c0a5:	inc    DWORD PTR [rax]
   14000c0a7:	add    bh,bh
   14000c0a9:	(bad)  
   14000c0aa:	(bad)  
   14000c0ab:	(bad)  
   14000c0ac:	(bad)  
   14000c0ad:	inc    DWORD PTR [rax]
   14000c0af:	add    ah,bh
   14000c0b1:	(bad)  
   14000c0b2:	(bad)  
   14000c0b3:	(bad)  
   14000c0b4:	(bad)  
   14000c0b5:	inc    DWORD PTR [rax]
   14000c0b7:	add    al,bh
   14000c0b9:	add    edi,edi
   14000c0bb:	(bad)  
   14000c0bc:	(bad)  
   14000c0bd:	inc    DWORD PTR [rax]
   14000c0bf:	add    al,dh
   14000c0c1:	add    BYTE PTR [rdi],bl
   14000c0c3:	(bad)  
   14000c0c4:	(bad)  
   14000c0c5:	inc    DWORD PTR [rax]
   14000c0c7:	add    al,dh
   14000c0c9:	add    BYTE PTR [rcx],al
   14000c0cb:	(bad)  
   14000c0cc:	(bad)  
   14000c0cd:	inc    DWORD PTR [rax]
   14000c0cf:	add    al,dh
   14000c0d1:	add    BYTE PTR [rax],al
   14000c0d3:	(bad)  
   14000c0d4:	(bad)  
   14000c0d5:	inc    DWORD PTR [rax]
   14000c0d7:	add    al,dh
   14000c0d9:	add    BYTE PTR [rax],al
   14000c0db:	add    edi,edi
   14000c0dd:	inc    DWORD PTR [rax]
   14000c0df:	add    al,dh
   14000c0e1:	add    BYTE PTR [rax],al
   14000c0e3:	add    bh,bh
   14000c0e5:	inc    DWORD PTR [rax]
   14000c0e7:	add    al,dh
   14000c0e9:	add    BYTE PTR [rax],al
   14000c0eb:	add    bh,bh
   14000c0ed:	inc    DWORD PTR [rax]
   14000c0ef:	add    al,dh
   14000c0f1:	add    BYTE PTR [rax],al
   14000c0f3:	add    bh,bh
   14000c0f5:	inc    DWORD PTR [rax]
   14000c0f7:	add    al,dh
   14000c0f9:	add    BYTE PTR [rax],al
   14000c0fb:	add    bh,bh
   14000c0fd:	inc    DWORD PTR [rax]
   14000c0ff:	add    al,dh
   14000c101:	add    BYTE PTR [rax],al
   14000c103:	add    bh,bh
   14000c105:	inc    DWORD PTR [rax]
   14000c107:	add    al,dh
   14000c109:	add    BYTE PTR [rax],al
   14000c10b:	add    bh,bh
   14000c10d:	inc    DWORD PTR [rax]
   14000c10f:	add    al,dh
   14000c111:	add    BYTE PTR [rax],al
   14000c113:	add    bh,bh
   14000c115:	inc    DWORD PTR [rax]
   14000c117:	add    al,dh
   14000c119:	add    BYTE PTR [rax],al
   14000c11b:	add    bh,bh
   14000c11d:	inc    DWORD PTR [rax]
   14000c11f:	add    al,ah
   14000c121:	add    BYTE PTR [rax],al
   14000c123:	add    bh,bh
   14000c125:	inc    DWORD PTR [rax]
   14000c127:	add    al,ah
   14000c129:	add    BYTE PTR [rax],al
   14000c12b:	add    bh,bh
   14000c12d:	inc    DWORD PTR [rax]
   14000c12f:	add    al,ah
   14000c131:	add    BYTE PTR [rax],al
   14000c133:	add    bh,bh
   14000c135:	inc    DWORD PTR [rax]
   14000c137:	add    al,ah
   14000c139:	add    BYTE PTR [rax],al
   14000c13b:	add    bh,bh
   14000c13d:	inc    DWORD PTR [rax]
   14000c13f:	add    al,ah
   14000c141:	add    BYTE PTR [rax],al
   14000c143:	add    bh,bh
   14000c145:	inc    DWORD PTR [rax]
   14000c147:	add    al,ah
   14000c149:	add    BYTE PTR [rax],al
   14000c14b:	add    bh,bh
   14000c14d:	inc    DWORD PTR [rax]
   14000c14f:	add    al,ah
   14000c151:	add    BYTE PTR [rax],al
   14000c153:	add    bh,bh
   14000c155:	inc    DWORD PTR [rax]
   14000c157:	add    al,ah
   14000c159:	add    BYTE PTR [rax],al
   14000c15b:	add    bh,bh
   14000c15d:	inc    DWORD PTR [rax]
   14000c15f:	add    al,ah
   14000c161:	add    BYTE PTR [rax],al
   14000c163:	add    bh,bh
   14000c165:	inc    DWORD PTR [rax]
   14000c167:	add    al,ah
   14000c169:	add    BYTE PTR [rax],al
   14000c16b:	add    bh,bh
   14000c16d:	inc    DWORD PTR [rax]
   14000c16f:	add    al,ah
   14000c171:	add    BYTE PTR [rax],al
   14000c173:	add    bh,bh
   14000c175:	inc    DWORD PTR [rax]
   14000c177:	add    al,ah
   14000c179:	add    BYTE PTR [rax],al
   14000c17b:	add    BYTE PTR [rdi],bl
   14000c17d:	inc    DWORD PTR [rax]
   14000c17f:	add    al,ah
   14000c181:	add    BYTE PTR [rax],al
   14000c183:	add    BYTE PTR [rbx],al
   14000c185:	inc    DWORD PTR [rax]
   14000c187:	add    al,ah
   14000c189:	add    BYTE PTR [rax],al
   14000c18b:	add    BYTE PTR [rax],al
   14000c18d:	inc    DWORD PTR [rax]
   14000c18f:	add    al,al
   14000c191:	add    BYTE PTR [rax],al
   14000c193:	add    BYTE PTR [rax],al
   14000c195:	(bad)  
   14000c196:	add    BYTE PTR [rax],al
   14000c198:	rol    BYTE PTR [rax],0x0
   14000c19b:	add    BYTE PTR [rax],al
   14000c19d:	sldt   WORD PTR [rax]
   14000c1a0:	rol    BYTE PTR [rax],0x0
   14000c1a3:	add    BYTE PTR [rax],al
   14000c1a5:	add    eax,DWORD PTR [rax]
   14000c1a7:	add    al,al
   14000c1a9:	add    BYTE PTR [rax],al
   14000c1ab:	add    BYTE PTR [rax],al
   14000c1ad:	add    DWORD PTR [rax],eax
   14000c1af:	add    al,al
   14000c1b1:	add    BYTE PTR [rax],al
   14000c1b3:	add    BYTE PTR [rax],al
   14000c1b5:	add    BYTE PTR [rax],al
   14000c1b7:	add    al,al
   14000c1b9:	add    BYTE PTR [rax],al
   14000c1bb:	add    BYTE PTR [rax],al
   14000c1bd:	add    BYTE PTR [rax],al
   14000c1bf:	add    al,al
   14000c1c1:	add    BYTE PTR [rax],al
   14000c1c3:	add    BYTE PTR [rax],al
   14000c1c5:	add    BYTE PTR [rax],al
   14000c1c7:	add    al,al
   14000c1c9:	add    BYTE PTR [rax],al
   14000c1cb:	add    BYTE PTR [rax-0x40000000],al
   14000c1d1:	add    BYTE PTR [rax],al
   14000c1d3:	add    al,al
   14000c1d5:	add    DWORD PTR [rax],eax
   14000c1d7:	add    al,al
   14000c1d9:	add    BYTE PTR [rax],al
   14000c1db:	add    al,dh
   14000c1dd:	add    eax,DWORD PTR [rax]
   14000c1df:	add    al,ah
   14000c1e1:	add    BYTE PTR [rax],al
   14000c1e3:	add    bh,bh
   14000c1e5:	inc    DWORD PTR [rax]
   14000c1e7:	add    al,dh
   14000c1e9:	add    BYTE PTR [rax],al
   14000c1eb:	add    bh,bh
   14000c1ed:	inc    DWORD PTR [rax]
   14000c1ef:	add    bh,bh
   14000c1f1:	rol    BYTE PTR [rax],0x0
   14000c1f4:	(bad)  
   14000c1f5:	inc    DWORD PTR [rax]
   14000c1f7:	add    bh,bh
   14000c1f9:	inc    DWORD PTR [rax+0xffff01]
   14000c1ff:	add    bh,bh
   14000c201:	(bad)  
   14000c202:	inc    DWORD PTR [rbx]
   14000c204:	(bad)  
   14000c205:	inc    DWORD PTR [rax]
   14000c207:	add    bh,bh
   14000c209:	(bad)  
   14000c20a:	(bad)  
   14000c20b:	(bad)  
   14000c20c:	(bad)  
   14000c20d:	inc    DWORD PTR [rax]
   14000c20f:	add    bh,bh
   14000c211:	(bad)  
   14000c212:	(bad)  
   14000c213:	(bad)  
   14000c214:	(bad)  
   14000c215:	inc    DWORD PTR [rax]
   14000c217:	add    BYTE PTR [rax],ch
   14000c219:	add    BYTE PTR [rax],al
   14000c21b:	add    BYTE PTR [rax],ah
   14000c21d:	add    BYTE PTR [rax],al
   14000c21f:	add    BYTE PTR [rax+0x0],al
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	add    DWORD PTR [rax],eax
   14000c226:	add    al,0x0
	...
   14000c248:	add    BYTE PTR [rax-0x80000000],al
   14000c24e:	add    BYTE PTR [rax],0x80
   14000c251:	add    BYTE PTR [rax],al
   14000c253:	add    BYTE PTR [rax-0x7fff8000],al
   14000c259:	add    BYTE PTR [rax],0x0
   14000c25c:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   14000c263:	add    BYTE PTR [rax],al
   14000c265:	add    bh,bh
   14000c267:	add    BYTE PTR [rax],al
   14000c269:	add    BYTE PTR [rax],al
   14000c26b:	add    BYTE PTR [rax],al
   14000c26d:	(bad)  
   14000c26e:	inc    DWORD PTR [rax]
   14000c270:	inc    DWORD PTR [rax]
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	inc    DWORD PTR [rax]
   14000c276:	inc    DWORD PTR [rax]
   14000c278:	(bad)  
   14000c279:	inc    DWORD PTR [rax]
   14000c27b:	add    bh,bh
   14000c27d:	(bad)  
   14000c27e:	inc    DWORD PTR [rax]
   14000c280:	adc    DWORD PTR [rcx],edx
   14000c282:	adc    DWORD PTR [rcx],edx
   14000c284:	adc    DWORD PTR [rcx],edx
   14000c286:	adc    DWORD PTR [rcx],edx
   14000c288:	adc    DWORD PTR [rcx],edx
   14000c28a:	adc    DWORD PTR [rcx],edx
   14000c28c:	adc    DWORD PTR [rcx],edx
   14000c28e:	adc    DWORD PTR [rcx],edx
   14000c290:	adc    DWORD PTR [rax],edx
   14000c292:	add    BYTE PTR [rcx],dl
   14000c294:	adc    DWORD PTR [rcx],edx
   14000c296:	adc    DWORD PTR [rcx],edx
   14000c298:	adc    DWORD PTR [rcx],edx
   14000c29a:	adc    DWORD PTR [rcx],edx
   14000c29c:	adc    DWORD PTR [rcx],edx
   14000c29e:	adc    DWORD PTR [rcx],edx
   14000c2a0:	(bad)  
   14000c2a1:	ja     0x14000c31a
   14000c2a3:	add    BYTE PTR [rcx],al
   14000c2a5:	adc    DWORD PTR [rcx],edx
   14000c2a7:	adc    DWORD PTR [rcx],edx
   14000c2a9:	adc    DWORD PTR [rcx],edx
   14000c2ab:	adc    DWORD PTR [rcx],edx
   14000c2ad:	adc    DWORD PTR [rcx],edx
   14000c2af:	adc    DWORD PTR [rax-0x79],edi
   14000c2b2:	ja     0x14000c32b
   14000c2b4:	jo     0x14000c2b6
   14000c2b6:	adc    DWORD PTR [rcx],edx
   14000c2b8:	adc    DWORD PTR [rcx],edx
   14000c2ba:	adc    DWORD PTR [rcx],edx
   14000c2bc:	adc    DWORD PTR [rcx],edx
   14000c2be:	adc    DWORD PTR [rcx],edx
   14000c2c0:	jg     0x14000c249
   14000c2c2:	ja     0x14000c33b
   14000c2c4:	ja     0x14000c33d
   14000c2c6:	add    BYTE PTR [rcx],al
   14000c2c8:	adc    DWORD PTR [rcx],edx
   14000c2ca:	adc    DWORD PTR [rcx],edx
   14000c2cc:	adc    DWORD PTR [rcx],edx
   14000c2ce:	adc    DWORD PTR [rcx],edx
   14000c2d0:	jg     0x14000c259
   14000c2d2:	js     0x14000c2d3
   14000c2d4:	ja     0x14000c34d
   14000c2d6:	ja     0x14000c348
   14000c2d8:	add    BYTE PTR [rcx],dl
   14000c2da:	adc    DWORD PTR [rcx],edx
   14000c2dc:	adc    DWORD PTR [rcx],edx
   14000c2de:	adc    DWORD PTR [rcx],edx
   14000c2e0:	jg     0x14000c269
   14000c2e2:	jle    0x14000c272
   14000c2e4:	push   rdi
   14000c2e6:	ja     0x14000c35f
   14000c2e8:	ja     0x14000c2ea
   14000c2ea:	adc    DWORD PTR [rcx],edx
   14000c2ec:	adc    DWORD PTR [rcx],edx
   14000c2ee:	adc    DWORD PTR [rcx],edx
   14000c2f0:	jg     0x14000c279
   14000c2f2:	js     0x14000c2dc
   14000c2f4:	call   0x1b778c2e8
   14000c2f9:	ja     0x14000c2fc
   14000c2fb:	adc    DWORD PTR [rcx],edx
   14000c2fd:	adc    DWORD PTR [rcx],edx
   14000c2ff:	adc    DWORD PTR [rdi-0x79],edi
   14000c302:	jle    0x14000c292
   14000c304:	mov    cs,WORD PTR [rsi+0x77f7ff8e]
   14000c30a:	add    DWORD PTR [rcx],edx
   14000c30c:	adc    DWORD PTR [rcx],edx
   14000c30e:	adc    DWORD PTR [rcx],edx
   14000c310:	jg     0x14000c299
   14000c312:	js     0x14000c2fc
   14000c314:	call   0x12fe9ac01
   14000c319:	test   DWORD PTR [rcx],0x11111111
   14000c31f:	adc    DWORD PTR [rdi-0x79],edi
   14000c322:	jle    0x14000c2b2
   14000c324:	mov    cs,WORD PTR [rsi-0x8717172]
   14000c32a:	add    DWORD PTR [rcx],edx
   14000c32c:	adc    DWORD PTR [rcx],edx
   14000c32e:	adc    DWORD PTR [rcx],edx
   14000c330:	jg     0x14000c2b9
   14000c332:	jle    0x14000c322
   14000c334:	out    dx,al
   14000c335:	call   0x137e9ac22
   14000c33a:	add    DWORD PTR [rcx],edx
   14000c33c:	adc    DWORD PTR [rcx],edx
   14000c33e:	adc    DWORD PTR [rcx],edx
   14000c340:	jg     0x14000c2c9
   14000c342:	jle    0x14000c2d2
   14000c344:	mov    cs,WORD PTR [rsi-0x8717172]
   14000c34a:	add    DWORD PTR [rcx],edx
   14000c34c:	adc    DWORD PTR [rcx],edx
   14000c34e:	adc    DWORD PTR [rcx],edx
   14000c350:	jg     0x14000c2d9
   14000c352:	jle    0x14000c342
   14000c354:	out    dx,al
   14000c355:	out    dx,al
   14000c356:	call   0x141f8ac43
   14000c35b:	adc    DWORD PTR [rcx],edx
   14000c35d:	adc    DWORD PTR [rcx],edx
   14000c35f:	adc    DWORD PTR [rdi-0x79],edi
   14000c362:	jle    0x14000c352
   14000c364:	out    dx,al
   14000c365:	mov    cs,WORD PTR [rsi+0x1f78e8e]
   14000c36b:	adc    DWORD PTR [rcx],edx
   14000c36d:	adc    DWORD PTR [rcx],edx
   14000c36f:	adc    DWORD PTR [rdi-0x79],edi
   14000c372:	jg     0x14000c363
   14000c374:	out    dx,al
   14000c375:	out    dx,al
   14000c376:	call   0x141f8ac63
   14000c37b:	adc    DWORD PTR [rcx],edx
   14000c37d:	adc    DWORD PTR [rcx],edx
   14000c37f:	adc    DWORD PTR [rdi-0x79],edi
   14000c382:	jle    0x14000c382
   14000c384:	(bad)  
   14000c385:	out    dx,al
   14000c386:	mov    cs,WORD PTR [rsi+0x1101f78e]
   14000c38c:	adc    DWORD PTR [rcx],edx
   14000c38e:	adc    DWORD PTR [rcx],edx
   14000c390:	jg     0x14000c319
   14000c392:	jg     0x14000c383
   14000c394:	out    dx,eax
   14000c395:	loopne 0x14000c397
   14000c397:	or     al,ch
   14000c399:	test   DWORD PTR [rcx],0x11111111
   14000c39f:	adc    DWORD PTR [rdi-0x79],edi
   14000c3a2:	jle    0x14000c3a2
   14000c3a4:	(bad)  
   14000c3a5:	cld    
   14000c3a6:	data16 (bad) 
   14000c3a8:	add    bh,dh
   14000c3aa:	add    DWORD PTR [rcx],edx
   14000c3ac:	adc    DWORD PTR [rcx],edx
   14000c3ae:	adc    DWORD PTR [rcx],edx
   14000c3b0:	jg     0x14000c339
   14000c3b2:	jg     0x14000c3a3
   14000c3b4:	(bad)  
   14000c3b5:	out    dx,eax
   14000c3b6:	(bad)  
   14000c3b7:	out    0x66,al
   14000c3b9:	add    BYTE PTR [rcx],al
   14000c3bb:	adc    DWORD PTR [rcx],edx
   14000c3bd:	adc    DWORD PTR [rcx],edx
   14000c3bf:	adc    DWORD PTR [rdi-0x79],edi
   14000c3c2:	jle    0x14000c3c2
   14000c3c4:	(bad)  
   14000c3c5:	(bad)  
   14000c3c6:	cld    
   14000c3c7:	(bad)  
   14000c3c8:	out    dx,al
   14000c3c9:	data16 (bad) 
   14000c3cb:	add    BYTE PTR [rcx],dl
   14000c3cd:	adc    DWORD PTR [rcx],edx
   14000c3cf:	adc    DWORD PTR [rdi-0x79],edi
   14000c3d2:	jg     0x14000c3d3
   14000c3d4:	(bad)  
   14000c3d5:	(bad)  
   14000c3d6:	out    dx,eax
   14000c3d7:	in     al,dx
   14000c3d8:	(bad)  
   14000c3d9:	out    dx,al
   14000c3da:	out    0x66,al
   14000c3dc:	add    BYTE PTR [rcx],al
   14000c3de:	adc    DWORD PTR [rcx],edx
   14000c3e0:	jg     0x14000c369
   14000c3e2:	jg     0x14000c3e2
   14000c3e4:	(bad)  
   14000c3e5:	(bad)  
   14000c3e6:	(bad)  
   14000c3e7:	(bad)  
   14000c3e8:	in     al,dx
   14000c3e9:	(bad)  
   14000c3ea:	out    dx,al
   14000c3eb:	out    dx,al
   14000c3ec:	data16 (bad) 
   14000c3ee:	add    DWORD PTR [rcx],edx
   14000c3f0:	jg     0x14000c379
   14000c3f2:	jg     0x14000c3f3
   14000c3f4:	(bad)  
   14000c3f5:	(bad)  
   14000c3f6:	out    dx,eax
   14000c3f7:	out    dx,eax
   14000c3f8:	out    dx,al
   14000c3f9:	cld    
   14000c3fa:	(bad)  
   14000c3fb:	out    dx,al
   14000c3fc:	out    dx,al
   14000c3fd:	out    0x60,al
   14000c3ff:	add    DWORD PTR [rdi-0x79],edi
   14000c402:	jg     0x14000c403
   14000c404:	(bad)  
   14000c405:	(bad)  
   14000c406:	(bad)  
   14000c407:	(bad)  
   14000c408:	out    dx,al
   14000c409:	test   DWORD PTR [rsp+rcx*8],0x60e6eece
   14000c410:	jg     0x14000c399
   14000c412:	ja     0x14000c48b
   14000c414:	jg     0x14000c415
   14000c416:	(bad)  
   14000c417:	out    dx,eax
   14000c418:	out    dx,al
   14000c419:	test   DWORD PTR [rcx],0xe6ceecce
   14000c41f:	loopne 0x14000c4a0
   14000c421:	xchg   DWORD PTR [rdi+0x77],esi
   14000c424:	ja     0x14000c49d
   14000c426:	jle    0x14000c426
   14000c428:	out    dx,al
   14000c429:	test   DWORD PTR [rcx],0xeeeece1c
   14000c42f:	loopne 0x14000c4a9
   14000c431:	(bad)  
   14000c432:	clc    
   14000c433:	mov    BYTE PTR [rdi+0x77],dh
   14000c436:	ja     0x14000c4af
   14000c438:	ja     0x14000c421
   14000c43a:	add    DWORD PTR [rcx],edx
   14000c43c:	sbb    al,0xcc
   14000c43e:	int3   
   14000c43f:	rcl    DWORD PTR [rdi],0x77
   14000c442:	js     0x14000c443
   14000c444:	dec    DWORD PTR [rax+0x77777787]
   14000c44a:	add    DWORD PTR [rcx],edx
   14000c44c:	adc    DWORD PTR [rcx],edx
   14000c44e:	adc    DWORD PTR [rcx],edx
   14000c450:	adc    DWORD PTR [rcx],edx
   14000c452:	(bad)  
   14000c453:	ja     0x14000c4cc
   14000c455:	(bad)  
   14000c456:	(bad)  
   14000c457:	clc    
   14000c458:	mov    BYTE PTR [rdi+0x11111101],al
   14000c45e:	adc    DWORD PTR [rcx],edx
   14000c460:	adc    DWORD PTR [rcx],edx
   14000c462:	adc    DWORD PTR [rcx],edx
   14000c464:	adc    DWORD PTR [rdi+0x77],esi
   14000c467:	js     0x14000c468
   14000c469:	clc    
   14000c46a:	add    DWORD PTR [rcx],edx
   14000c46c:	adc    DWORD PTR [rcx],edx
   14000c46e:	adc    DWORD PTR [rcx],edx
   14000c470:	adc    DWORD PTR [rcx],edx
   14000c472:	adc    DWORD PTR [rcx],edx
   14000c474:	adc    DWORD PTR [rcx],edx
   14000c476:	adc    DWORD PTR [rdi],edx
   14000c478:	ja     0x14000c4f1
   14000c47a:	adc    DWORD PTR [rcx],edx
   14000c47c:	adc    DWORD PTR [rcx],edx
   14000c47e:	adc    DWORD PTR [rcx],edx
   14000c480:	(bad)  
   14000c481:	(bad)  
   14000c482:	(bad)  
   14000c483:	jmp    rbx
   14000c485:	(bad)  
   14000c486:	(bad)  
   14000c487:	inc    DWORD PTR [rax+0xffff7f]
   14000c48d:	ud0    edi,edi
   14000c490:	add    BYTE PTR [rcx],al
   14000c492:	(bad)  
   14000c493:	inc    DWORD PTR [rax]
   14000c495:	add    BYTE PTR [rdi],bh
   14000c497:	inc    DWORD PTR [rax]
   14000c499:	add    BYTE PTR [rdi],cl
   14000c49b:	inc    DWORD PTR [rax]
   14000c49d:	add    BYTE PTR [rdi],al
   14000c49f:	inc    DWORD PTR [rax]
   14000c4a1:	add    BYTE PTR [rdi],al
   14000c4a3:	inc    DWORD PTR [rax]
   14000c4a5:	add    BYTE PTR [rdi],al
   14000c4a7:	inc    DWORD PTR [rax]
   14000c4a9:	add    BYTE PTR [rdi],al
   14000c4ab:	inc    DWORD PTR [rax]
   14000c4ad:	add    BYTE PTR [rdi],al
   14000c4af:	inc    DWORD PTR [rax]
   14000c4b1:	add    BYTE PTR [rdi],al
   14000c4b3:	inc    DWORD PTR [rax]
   14000c4b5:	add    BYTE PTR [rdi],al
   14000c4b7:	inc    DWORD PTR [rax]
   14000c4b9:	add    BYTE PTR [rdi],al
   14000c4bb:	inc    DWORD PTR [rax]
   14000c4bd:	add    BYTE PTR [rdi],al
   14000c4bf:	inc    DWORD PTR [rax]
   14000c4c1:	add    BYTE PTR [rdi],al
   14000c4c3:	inc    DWORD PTR [rax]
   14000c4c5:	add    BYTE PTR [rdi],al
   14000c4c7:	inc    DWORD PTR [rax]
   14000c4c9:	add    BYTE PTR [rdi],al
   14000c4cb:	inc    DWORD PTR [rax]
   14000c4cd:	add    BYTE PTR [rdi],al
   14000c4cf:	inc    DWORD PTR [rax]
   14000c4d1:	add    BYTE PTR [rax],al
   14000c4d3:	inc    DWORD PTR [rax]
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	(bad)  
   14000c4d8:	add    BYTE PTR [rax],al
   14000c4da:	add    BYTE PTR [rdi],al
   14000c4dc:	add    BYTE PTR [rax],al
   14000c4de:	add    BYTE PTR [rcx],al
   14000c4e0:	add    BYTE PTR [rax],al
   14000c4e2:	add    BYTE PTR [rax],al
   14000c4e4:	add    BYTE PTR [rax],al
   14000c4e6:	add    al,0x0
   14000c4e8:	add    BYTE PTR [rax],al
   14000c4ea:	(bad)  
   14000c4eb:	add    BYTE PTR [rax],al
   14000c4ed:	add    BYTE PTR [rdi],al
   14000c4ef:	add    DWORD PTR [rax-0x700f900],0xffff0700
   14000c4f9:	rol    BYTE PTR [rdi],0xff
   14000c4fc:	(bad)  
   14000c4fd:	dec    BYTE PTR [rdi]
   14000c4ff:	jmp    FWORD PTR [rax]
   14000c501:	add    BYTE PTR [rax],al
   14000c503:	add    BYTE PTR [rax],dl
   14000c505:	add    BYTE PTR [rax],al
   14000c507:	add    BYTE PTR [rax],ah
   14000c509:	add    BYTE PTR [rax],al
   14000c50b:	add    BYTE PTR [rcx],al
   14000c50d:	add    BYTE PTR [rax+rax*1],al
	...
   14000c530:	add    BYTE PTR [rax-0x80000000],al
   14000c536:	add    BYTE PTR [rax],0x80
   14000c539:	add    BYTE PTR [rax],al
   14000c53b:	add    BYTE PTR [rax-0x7fff8000],al
   14000c541:	add    BYTE PTR [rax],0x0
   14000c544:	add    BYTE PTR [rax-0x3f3fff80],0xc0
   14000c54b:	add    BYTE PTR [rax],al
   14000c54d:	add    bh,bh
   14000c54f:	add    BYTE PTR [rax],al
   14000c551:	add    BYTE PTR [rax],al
   14000c553:	add    BYTE PTR [rax],al
   14000c555:	(bad)  
   14000c556:	inc    DWORD PTR [rax]
   14000c558:	inc    DWORD PTR [rax]
   14000c55a:	add    BYTE PTR [rax],al
   14000c55c:	inc    DWORD PTR [rax]
   14000c55e:	inc    DWORD PTR [rax]
   14000c560:	(bad)  
   14000c561:	inc    DWORD PTR [rax]
   14000c563:	add    bh,bh
   14000c565:	(bad)  
   14000c566:	inc    DWORD PTR [rax]
   14000c568:	adc    DWORD PTR [rcx],edx
   14000c56a:	adc    DWORD PTR [rcx],edx
   14000c56c:	adc    DWORD PTR [rcx],edx
   14000c56e:	adc    DWORD PTR [rcx],edx
   14000c570:	adc    BYTE PTR [rax],al
   14000c572:	add    DWORD PTR [rcx],edx
   14000c574:	adc    DWORD PTR [rcx],edx
   14000c576:	adc    DWORD PTR [rcx],edx
   14000c578:	ja     0x14000c5f1
   14000c57a:	jo     0x14000c57c
   14000c57c:	add    DWORD PTR [rcx],edx
   14000c57e:	adc    DWORD PTR [rcx],edx
   14000c580:	js     0x14000c5fa
   14000c582:	xchg   DWORD PTR [rdi+0x70],esi
   14000c585:	adc    DWORD PTR [rcx],edx
   14000c587:	adc    DWORD PTR [rax+0x7e],edi
   14000c58a:	mov    cs,WORD PTR [rax+0x11111170]
   14000c590:	js     0x14000c60a
   14000c592:	call   0x15112367f
   14000c597:	adc    DWORD PTR [rax+0x7e],edi
   14000c59a:	mov    cs,WORD PTR [rax+0x11111170]
   14000c5a0:	js     0x14000c621
   14000c5a2:	in     al,0x44
   14000c5a4:	jo     0x14000c5b7
   14000c5a6:	adc    DWORD PTR [rcx],edx
   14000c5a8:	js     0x14000c628
   14000c5aa:	dec    dh
   14000c5ac:	adc    DWORD PTR [rcx],r10d
   14000c5af:	adc    DWORD PTR [rax+0x7f],edi
   14000c5b2:	out    dx,eax
   14000c5b3:	in     al,dx
   14000c5b4:	out    dx,al
   14000c5b5:	add    BYTE PTR [rcx],al
   14000c5b7:	adc    DWORD PTR [rax+0x7f],edi
   14000c5ba:	(bad)  
   14000c5bb:	dec    ah
   14000c5bd:	out    dx,al
   14000c5be:	loopne 0x14000c5c1
   14000c5c0:	js     0x14000c639
   14000c5c2:	jg     0x14000c5b3
   14000c5c4:	lock int3 
   14000c5c6:	out    dx,al
   14000c5c7:	loopne 0x14000c641
   14000c5c9:	mov    BYTE PTR [rdi-0x33ee8f89],al
   14000c5cf:	rcl    BYTE PTR [rdi],0x77
   14000c5d2:	js     0x14000c55c
   14000c5d4:	adc    BYTE PTR [rcx],0x11
   14000c5d7:	adc    DWORD PTR [rcx],edx
   14000c5d9:	adc    DWORD PTR [rdi],edx
   14000c5db:	ja     0x14000c64e
   14000c5dd:	adc    DWORD PTR [rcx],edx
   14000c5df:	adc    DWORD PTR [rcx],edx
   14000c5e1:	adc    DWORD PTR [rcx],edx
   14000c5e3:	adc    DWORD PTR [rcx],edx
   14000c5e5:	adc    DWORD PTR [rcx],edx
   14000c5e7:	adc    edi,edi
   14000c5e9:	(bad)  
   14000c5ea:	jle    0x14000c57a
   14000c5ec:	xchg   edi,edi
   14000c5ee:	mov    ?,edi
   14000c5f0:	add    BYTE PTR [rdi+0x1],bh
   14000c5f3:	adc    DWORD PTR [rax],eax
   14000c5f5:	(bad)  
   14000c5f6:	adc    DWORD PTR [rcx],edx
   14000c5f8:	add    BYTE PTR [rdi],bh
   14000c5fa:	js     0x14000c5e4
   14000c5fc:	add    BYTE PTR [rdi],bh
   14000c5fe:	call   0x1413fc6eb
   14000c603:	adc    DWORD PTR [rax],eax
   14000c605:	(bad)  
   14000c606:	adc    DWORD PTR [rcx],edx
   14000c608:	add    BYTE PTR [rdi],bh
   14000c60a:	jle    0x14000c59a
   14000c60c:	add    BYTE PTR [rdi],al
   14000c60e:	mov    cs,WORD PTR [rsi+0x11010100]
   14000c614:	add    BYTE PTR [rax],al
   14000c616:	adc    DWORD PTR [rcx],edx
   14000c618:	add    BYTE PTR [rax],dh
   14000c61a:	jle    0x14000c60a
   14000c61c:	cmp    BYTE PTR [rdi],0xe8
   14000c61f:	call   0x15102461c
   14000c624:	(bad)  
   14000c625:	call   QWORD PTR [rcx]
   14000c627:	adc    DWORD PTR [rax],ebp
   14000c629:	add    BYTE PTR [rax],al
   14000c62b:	add    BYTE PTR [rax],dh
   14000c62d:	add    BYTE PTR [rax],al
   14000c62f:	add    BYTE PTR [rax+0x0],ah
   14000c632:	add    BYTE PTR [rax],al
   14000c634:	add    DWORD PTR [rax],eax
   14000c636:	or     BYTE PTR [rax],al
	...
   14000c654:	(bad)  
   14000c655:	(bad)  
   14000c656:	inc    DWORD PTR [rax]
   14000c658:	add    BYTE PTR [rax],al
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	pop    rbp
   14000c65d:	(bad)  
   14000c65e:	(bad)  
   14000c65f:	add    BYTE PTR [rdi+0x45],al
   14000c662:	add    BYTE PTR [r8-0x3fff4f52],r14b
   14000c669:	mov    edi,0xb1b200c0
   14000c66e:	mov    dl,0x0
   14000c670:	call   FWORD PTR [rdi-0x5b00ff61]
   14000c676:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c677:	add    bh,bh
   14000c679:	test   al,0xa8
   14000c67b:	add    bh,bh
   14000c67d:	lods   al,BYTE PTR ds:[rsi]
   14000c67e:	lods   al,BYTE PTR ds:[rsi]
   14000c67f:	add    bh,bh
   14000c681:	scas   al,BYTE PTR es:[rdi]
   14000c682:	scas   al,BYTE PTR es:[rdi]
   14000c683:	add    bh,bh
   14000c685:	mov    cl,0xb1
   14000c687:	add    ah,bh
   14000c689:	mov    cl,0xb1
   14000c68b:	add    bh,bh
   14000c68d:	mov    ah,0xb4
   14000c68f:	add    bh,bh
   14000c691:	mov    bh,0xb7
   14000c693:	add    bh,bh
   14000c695:	mov    edx,0xb8fd00ba
   14000c69a:	mov    eax,0xb7b7fa00
   14000c69f:	add    bl,bh
   14000c6a1:	mov    ecx,0xbdff00b9
   14000c6a6:	mov    ebp,0xbbbbfc00
   14000c6ab:	add    bh,bh
   14000c6ad:	rol    al,0x0
   14000c6b0:	(bad)  
   14000c6b1:	xchg   esi,eax
   14000c6b2:	xchg   esi,eax
   14000c6b3:	add    al,cl
   14000c6b5:	xchg   edi,eax
   14000c6b6:	xchg   edi,eax
   14000c6b7:	add    ch,al
   14000c6b9:	xchg   ebp,eax
   14000c6ba:	xchg   ebp,eax
   14000c6bb:	add    bh,bh
   14000c6bd:	ret    0xc2
   14000c6c0:	cld    
   14000c6c1:	mov    edi,0x9aca00bf
   14000c6c6:	(bad)  
   14000c6c7:	add    BYTE PTR [rdi-0x3eff6d6e],bh
   14000c6cd:	xchg   esp,eax
   14000c6ce:	xchg   esp,eax
   14000c6cf:	add    BYTE PTR [rbp-0xff6e6f],bh
   14000c6d5:	(bad)
   14000c6d8:	mov    ebx,0xb7009191
   14000c6dd:	mov    cs,WORD PTR [rsi-0x6f6f4700]
   14000c6e3:	add    BYTE PTR [rbp-0xff7273],dh
   14000c6e9:	leave  
   14000c6ea:	leave  
   14000c6eb:	add    BYTE PTR [rbx-0x50ff7273],dh
   14000c6f1:	mov    cl,BYTE PTR [rdx-0x73734f00]
   14000c6f7:	add    bh,bh
   14000c6f9:	retf   
   14000c6fa:	retf   
   14000c6fb:	add    BYTE PTR [rcx+rcx*4-0x7552ff77],ch
   14000c702:	mov    al,BYTE PTR [rax]
   14000c704:	stos   BYTE PTR es:[rdi],al
   14000c705:	mov    BYTE PTR [rax-0x31310100],cl
   14000c70b:	add    cl,bh
   14000c70d:	retf   0xca
   14000c710:	ret    0x9d9d
   14000c713:	add    BYTE PTR [rbp-0xff797a],ah
   14000c719:	rcl    ecx,1
   14000c71b:	add    BYTE PTR [rsi-0x61ff6a6b],dh
   14000c721:	(bad)  
   14000c722:	(bad)  
   14000c723:	add    bh,bh
   14000c725:	(bad)  
   14000c726:	(bad)  
   14000c727:	add    bl,dl
   14000c729:	mov    al,0xb0
   14000c72b:	add    cl,dl
   14000c72d:	scas   al,BYTE PTR es:[rdi]
   14000c72e:	scas   al,BYTE PTR es:[rdi]
   14000c72f:	add    dh,cl
   14000c731:	lods   al,BYTE PTR ds:[rsi]
   14000c732:	lods   al,BYTE PTR ds:[rsi]
   14000c733:	add    BYTE PTR [rdx-0xff6465],bh
   14000c739:	(bad)  
   14000c73a:	(bad)  
   14000c73b:	add    BYTE PTR [rcx-0x6cff7f80],bl
   14000c741:	jl     0x14000c7bf
   14000c743:	add    dl,cl
   14000c745:	stos   DWORD PTR es:[rdi],eax
   14000c746:	stos   DWORD PTR es:[rdi],eax
   14000c747:	add    BYTE PTR [rbp-0xff8182],dl
   14000c74d:	(bad)  
   14000c74f:	add    BYTE PTR [rcx-0x5cff8485],dl
   14000c755:	mov    ecx,DWORD PTR [rbx-0x64644b00]
   14000c75b:	add    BYTE PTR [rsi-0xff8586],cl
   14000c761:	(bad)  
   14000c763:	add    bh,bh
   14000c765:	(bad)  
   14000c767:	add    BYTE PTR [rbx-0x76ff8687],cl
   14000c76d:	ja     0x14000c7e6
   14000c76f:	add    BYTE PTR [rdi-0xff898a],al
   14000c775:	loope  0x14000c758
   14000c777:	add    dl,dh
   14000c779:	(bad)  
   14000c77a:	(bad)  
   14000c77b:	add    BYTE PTR [rbp+rsi*2+0x73820075],al
   14000c782:	jae    0x14000c784
   14000c784:	ret    
   14000c785:	lods   eax,DWORD PTR ds:[rsi]
   14000c786:	lods   eax,DWORD PTR ds:[rsi]
   14000c787:	add    BYTE PTR [rbp-0x1aff898a],al
   14000c78d:	int3   
   14000c78e:	int3   
   14000c78f:	add    ah,bl
   14000c791:	(bad)  
   14000c792:	(bad)  
   14000c793:	add    bh,cl
   14000c795:	mov    ecx,0xe5ff00b9
   14000c79a:	in     eax,0x0
   14000c79c:	fwait
   14000c79d:	mov    ecx,DWORD PTR [rbx-0x7d7d6f00]
   14000c7a3:	add    cl,bh
   14000c7a5:	loope  0x14000c788
   14000c7a7:	add    BYTE PTR [rsi+0x72],bh
   14000c7aa:	jb     0x14000c7ac
   14000c7ac:	rex.WX
   14000c7ad:	rex.XB
   14000c7ae:	rex.XB add r15b,dil
   14000c7b1:	call   0x11ef3c89e
   14000c7b6:	fiadd  WORD PTR [rax]
   14000c7b8:	movabs ds:0x7900757580009494,al
   14000c7c1:	outs   dx,DWORD PTR ds:[rsi]
   14000c7c2:	outs   dx,DWORD PTR ds:[rsi]
   14000c7c3:	add    bh,bh
   14000c7c5:	jmp    0x14000c7b2
   14000c7c7:	add    BYTE PTR [rbx+0x71],bh
   14000c7ca:	jno    0x14000c7cc
   14000c7cc:	(bad)  
   14000c7ce:	int3   
   14000c7cf:	add    cl,ah
   14000c7d1:	rcl    ecx,1
   14000c7d3:	add    dl,al
   14000c7d5:	mov    ah,0xb4
   14000c7d7:	add    BYTE PTR [rcx-0xff6263],ch
   14000c7dd:	out    dx,al
   14000c7de:	out    dx,al
   14000c7df:	add    BYTE PTR [rbp-0x27ff6566],ah
   14000c7e5:	retf   0xca
   14000c7e8:	sahf   
   14000c7e9:	xchg   esp,eax
   14000c7ea:	xchg   esp,eax
   14000c7eb:	add    BYTE PTR [rdx+0x75008989],dl
   14000c7f1:	outs   dx,BYTE PTR ds:[rsi]
   14000c7f2:	outs   dx,BYTE PTR ds:[rsi]
   14000c7f3:	add    bh,bh
   14000c7f5:	icebp  
   14000c7f6:	icebp  
   14000c7f7:	add    cl,dl
   14000c7f9:	(bad)
   14000c7fc:	jmp    0x1b201a5de
   14000c801:	ins    BYTE PTR es:[rdi],dx
   14000c802:	ins    BYTE PTR es:[rdi],dx
   14000c803:	add    bh,bh
   14000c805:	repz repz add bl,cl
   14000c809:	ret    0xc2
   14000c80c:	jo     0x14000c879
   14000c80e:	imul   eax,DWORD PTR [rax],0xffffffff
   14000c811:	div    dh
   14000c813:	add    BYTE PTR [rax-0x75ff6566],ah
   14000c819:	test   DWORD PTR [rbp-0x56565100],eax
   14000c81f:	add    BYTE PTR [rdi-0x39ff6d6e],dl
   14000c825:	rol    al,0x0
   14000c828:	xchg   DWORD PTR [rbx+0x6a6d0083],eax
   14000c82e:	push   0x0
   14000c830:	(bad)  
   14000c831:	stc    
   14000c832:	stc    
   14000c833:	add    al,dh
   14000c835:	(bad)  
   14000c836:	(bad)  
   14000c837:	add    BYTE PTR [rbp-0x57ff4748],bh
   14000c83d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c83e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c83f:	add    BYTE PTR [rax-0x47ff8283],al
   14000c845:	mov    ch,0xb5
   14000c847:	add    BYTE PTR [rbx-0x4fff4f50],dh
   14000c84d:	lods   eax,DWORD PTR ds:[rsi]
   14000c84e:	lods   eax,DWORD PTR ds:[rsi]
   14000c84f:	add    BYTE PTR [rbp-0x5fff5d5e],ah
   14000c855:	popf   
   14000c856:	popf   
   14000c857:	add    BYTE PTR [rdx+0x68],ch
   14000c85a:	push   0xfffffffffcfcff00
   14000c85f:	add    cl,bl
   14000c861:	(bad)  
   14000c862:	(bad)  
   14000c863:	add    dh,dl
   14000c865:	rcl    ebx,cl
   14000c867:	add    BYTE PTR [rdx+rcx*4-0x1b19ff76],cl
   14000c86e:	in     al,0x0
   14000c870:	(bad)  
   14000c872:	fld    QWORD PTR [rax]
   14000c874:	mov    bh,0xb5
   14000c876:	mov    ch,0x0
   14000c878:	push   0xffffffffbe006767
   14000c87d:	mov    ebp,0xb9ba00bd
   14000c882:	mov    ecx,0xc2c3f300
   14000c887:	add    BYTE PTR [rbp+rdx*4-0x4c0dff6d],ch
   14000c88e:	lods   eax,DWORD PTR ds:[rsi]
   14000c88f:	add    BYTE PTR [rbx-0x6ff7f7c],ch
   14000c895:	(bad)  
   14000c896:	rol    BYTE PTR [rax],cl
   14000c898:	out    0x9e,al
   14000c89a:	xchg   edx,eax
   14000c89b:	add    BYTE PTR [rdi+rsi*2-0x5c19ff8f],bl
   14000c8a2:	xchg   esi,eax
   14000c8a3:	add    dh,ah
   14000c8a5:	scas   al,BYTE PTR es:[rdi]
   14000c8a6:	movabs eax,ds:0x889bd9007a8dcf00
   14000c8af:	add    cl,cl
   14000c8b1:	jnp    0x14000c913
   14000c8b3:	add    ah,cl
   14000c8b5:	xchg   BYTE PTR [rax+rax*1-0x2e],ch
   14000c8b9:	xchg   edx,eax
   14000c8ba:	jl     0x14000c8bc
   14000c8bc:	(bad)  
   14000c8bd:	push   rbp
   14000c8be:	cmp    BYTE PTR [rax],al
   14000c8c0:	movabs ds:0xac0019387a00445e,al
   14000c8c9:	push   rcx
   14000c8ca:	sub    BYTE PTR [rax],al
   14000c8cc:	mov    bl,0x5c
   14000c8ce:	add    BYTE PTR ss:[rsi-0x7cffc89e],dh
   14000c8d5:	push   rsi
   14000c8d6:	add    BYTE PTR [rdx-0x5eff5050],sil
   14000c8dd:	cmp    al,0x3
   14000c8df:	add    BYTE PTR [rsi-0x59ffe5b5],ah
   14000c8e5:	add    BYTE PTR [rax],al
   14000c8e8:	fwait
   14000c8e9:	adc    DWORD PTR [rax],r8d
   14000c8ec:	mov    edi,0xac004d78
   14000c8f1:	rex.RX add BYTE PTR [rax],r8b
   14000c8f4:	scas   eax,DWORD PTR es:[rdi]
   14000c8f5:	rex.WB add BYTE PTR [r8],al
   14000c8f8:	mov    bl,0x4e
   14000c8fa:	add    al,BYTE PTR [rax]
   14000c8fc:	mov    ch,0x51
   14000c8fe:	(bad)  
   14000c8ff:	add    BYTE PTR [rcx-0x43ffffad],bh
   14000c905:	pop    rsp
   14000c906:	or     eax,0x1a63bc00
   14000c90b:	add    ch,dl
   14000c90d:	mov    ss,WORD PTR [rbx+0x0]
   14000c910:	(bad)  
   14000c911:	cdq    
   14000c912:	data16 add BYTE PTR [rdi-0x3cffffa7],bh
   14000c919:	(bad)  
   14000c91a:	or     al,BYTE PTR [rax]
   14000c91c:	leave  
   14000c91d:	push   0x17
   14000c91f:	add    al,cl
   14000c921:	fs add al,0x0
   14000c924:	int    0x6b
   14000c926:	or     DWORD PTR [rax],eax
   14000c928:	shr    DWORD PTR [rdi+0xd],1
   14000c92b:	add    dl,dl
   14000c92d:	jb     0x14000c942
   14000c92f:	add    ah,dl
   14000c931:	ja     0x14000c94c
   14000c933:	add    dh,dl
   14000c935:	jp     0x14000c954
   14000c937:	add    bh,dl
   14000c939:	jge    0x14000c961
   14000c93b:	add    bl,bl
   14000c93d:	test   BYTE PTR [rip+0x3988db00],ch        # 0x17989a443
   14000c943:	add    cl,ah
   14000c945:	(bad)  
   14000c946:	cmp    al,0x0
   14000c948:	in     al,0x95
   14000c94a:	add    r13b,r12b
   14000c94d:	xchg   edi,eax
   14000c94e:	rex.WX add bpl,spl
   14000c951:	cwde   
   14000c952:	rex.WXB add r15b,spl
   14000c955:	fwait
   14000c956:	rex.WRXB add r15b,r12b
   14000c959:	sahf   
   14000c95a:	pop    rax
   14000c95b:	add    bl,ch
   14000c95d:	movabs ds:0xb0f1006daff0005b,eax
   14000c966:	outs   dx,DWORD PTR ds:[rsi]
   14000c967:	add    bl,dh
   14000c969:	mov    ch,0x76
   14000c96b:	add    ah,cl
   14000c96d:	xchg   esi,eax
   14000c96e:	movsxd eax,DWORD PTR [rax]
   14000c970:	idiv   DWORD PTR [rcx+rax*4-0x773e0700]
   14000c977:	add    ah,bh
   14000c979:	(bad)  
   14000c97a:	nop
   14000c97b:	add    ch,bh
   14000c97d:	retf   0x96
   14000c980:	in     al,dx
   14000c981:	test   eax,0xceff0063
   14000c986:	fwait
   14000c987:	add    bh,bh
   14000c989:	rcr    DWORD PTR [rsi+0x77aad700],1
   14000c98f:	add    bh,bh
   14000c991:	(bad)  
   14000c992:	movabs eax,ds:0x8fc2e600a5d8ff00
   14000c99b:	add    bh,bl
   14000c99d:	mov    edi,0xddff0093
   14000c9a2:	stos   BYTE PTR es:[rdi],al
   14000c9a3:	add    BYTE PTR [rdi+0x4d],ch
   14000c9a6:	sbb    BYTE PTR [rax],al
   14000c9a8:	out    0xcc,al
   14000c9aa:	movabs ds:0xa6d9f200afe2fe00,eax
   14000c9b3:	add    dl,dh
   14000c9b5:	fld    TBYTE PTR [rax-0x49170200]
   14000c9bb:	add    ah,bh
   14000c9bd:	out    0xb3,al
   14000c9bf:	add    bh,bh
   14000c9c1:	in     al,dx
   14000c9c2:	mov    ecx,0xbff2fe00
   14000c9c7:	add    bh,bh
   14000c9c9:	test   ecx,0xebffff00
   14000c9cf:	add    BYTE PTR [rdi-0x49ff4949],dh
   14000c9d5:	mov    dh,0xb5
   14000c9d7:	add    BYTE PTR [rcx-0x42ff4f4f],dh
   14000c9dd:	mov    esi,0xb6b500ba
   14000c9e2:	mov    ch,0x0
   14000c9e4:	scas   eax,DWORD PTR es:[rdi]
   14000c9e5:	mov    al,0xaf
   14000c9e7:	add    BYTE PTR [rsi],dh
   14000c9e9:	rex.RX cmp eax,0xb8b9b700
   14000c9ef:	add    BYTE PTR [rcx-0x4eff5556],ch
   14000c9f5:	mov    dl,0xb3
   14000c9f7:	add    ch,al
   14000c9f9:	(bad)
   14000c9fc:	mov    cl,0xb1
   14000c9fe:	mov    dl,0x0
   14000ca00:	stc    
   14000ca01:	stc    
   14000ca02:	stc    
   14000ca03:	add    bl,bl
   14000ca05:	fcmovnu st,st(3)
   14000ca07:	add    cl,bl
   14000ca09:	(bad)  
   14000ca0b:	add    bh,dl
   14000ca0d:	xlat   BYTE PTR ds:[rbx]
   14000ca0e:	xlat   BYTE PTR ds:[rbx]
   14000ca0f:	add    ah,dl
   14000ca11:	(bad)  
   14000ca12:	(bad)  
   14000ca13:	add    dl,dl
   14000ca15:	rcl    dl,cl
   14000ca17:	add    al,dl
   14000ca19:	rcl    al,1
   14000ca1b:	add    dh,cl
   14000ca1d:	(bad)  
   14000ca1e:	(bad)  
   14000ca1f:	add    ch,cl
   14000ca21:	int    0xcd
   14000ca23:	add    cl,cl
   14000ca25:	leave  
   14000ca26:	leave  
   14000ca27:	add    dl,al
   14000ca29:	ret    0xc2
   14000ca2c:	mov    ah,0xb4
   14000ca2e:	mov    ah,0x0
   14000ca30:	mov    dl,0xb2
   14000ca32:	mov    dl,0x0
   14000ca34:	scas   al,BYTE PTR es:[rdi]
   14000ca35:	scas   al,BYTE PTR es:[rdi]
   14000ca36:	scas   al,BYTE PTR es:[rdi]
   14000ca37:	add    BYTE PTR [rsp+rbp*4-0x5a5aff54],ch
   14000ca3e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ca3f:	add    BYTE PTR [rdx-0x63ff5d5e],ah
   14000ca45:	pushf  
   14000ca46:	pushf  
   14000ca47:	add    BYTE PTR [rbp+0x75],dh
   14000ca4a:	jne    0x14000ca4c
   14000ca4c:	(bad)  
   14000ca4d:	(bad)  
   14000ca4e:	inc    DWORD PTR [rax]
	...
   14000cae4:	add    BYTE PTR [rax],al
   14000cae6:	add    al,0x4
   14000cae8:	push   rdi
   14000cae9:	add    al,0x4
	...
   14000cb13:	add    BYTE PTR [rax],al
   14000cb15:	out    0xfd,al
   14000cb17:	data16 sub al,0x2c
   14000cb1a:	sub    BYTE PTR [rsp+rax*1],al
   14000cb1d:	add    al,0x4
	...
   14000cb43:	add    BYTE PTR [rbx],al
   14000cb45:	std    
   14000cb46:	std    
   14000cb47:	sub    bp,WORD PTR [rax+rbp*1]
   14000cb4b:	sub    DWORD PTR [rsp+rbp*1],ebp
   14000cb4e:	sub    al,0x4
   14000cb50:	add    al,0x4
   14000cb52:	add    al,0x0
	...
   14000cb74:	add    edi,esp
   14000cb76:	xor    DWORD PTR [rcx+0x2d],0x29282c2b
   14000cb7d:	(bad)  
   14000cb7e:	and    eax,0x25252525
   14000cb83:	add    al,0x4
   14000cb85:	add    al,0x4
	...
   14000cba3:	add    BYTE PTR [rbx],al
   14000cba5:	sti    
   14000cba6:	cld    
   14000cba7:	pop    rdx
   14000cba8:	xor    DWORD PTR [rip+0x29282c42],ebp        # 0x16928f7f0
   14000cbae:	(bad)  
   14000cbaf:	and    eax,0x20222423
   14000cbb4:	and    BYTE PTR [rax],ah
   14000cbb6:	sbb    al,BYTE PTR [rsp+rax*1]
   14000cbb9:	add    al,0x4
	...
   14000cbd3:	add    BYTE PTR [rbx],al
   14000cbd5:	sti    
   14000cbd6:	cld    
   14000cbd7:	pop    rdx
   14000cbd8:	xor    DWORD PTR [rcx],esi
   14000cbda:	gs icebp 
   14000cbdc:	outs   dx,BYTE PTR ds:[rsi]
   14000cbdd:	cmp    QWORD PTR [r15],r12
   14000cbe0:	and    eax,0x20222423
   14000cbe5:	(bad)  
   14000cbe6:	and    BYTE PTR [rax],ah
   14000cbe8:	(bad)  
   14000cbe9:	sbb    bl,BYTE PTR [rdx]
   14000cbeb:	add    al,0x4
   14000cbed:	add    al,0x4
	...
   14000cc03:	add    BYTE PTR [rbx],al
   14000cc05:	sti    
   14000cc06:	sbb    BYTE PTR [rdx+0x31],0x31
   14000cc0a:	(bad)  
   14000cc0b:	sbb    al,0x8d
   14000cc0d:	rex.WRXB (bad) 
   14000cc0f:	test   BYTE PTR [rdx+0x3d],ch
   14000cc12:	cmp    DWORD PTR [rdx+riz*1],esp
   14000cc15:	and    BYTE PTR [rsi],bl
   14000cc17:	(bad)  
   14000cc18:	(bad)  
   14000cc19:	sbb    bl,BYTE PTR [rax]
   14000cc1b:	sbb    BYTE PTR [rdx],bl
   14000cc1d:	sbb    bl,BYTE PTR [rdx]
   14000cc1f:	add    al,0x0
	...
   14000cc31:	add    BYTE PTR [rax],al
   14000cc33:	add    BYTE PTR [rbx],al
   14000cc35:	call   0x1813226ba
   14000cc3a:	sbb    edx,DWORD PTR [rdi]
   14000cc3c:	adc    eax,0x8d141011
   14000cc41:	rex.WRXB imul r9,QWORD PTR [r8+0x1e1f3865],0x1f
   14000cc49:	(bad)  
   14000cc4a:	sbb    bl,BYTE PTR [rax]
   14000cc4c:	sbb    DWORD PTR [rcx],ebx
   14000cc4e:	sbb    al,BYTE PTR [rax+rax*1]
	...
   14000cc61:	add    BYTE PTR [rax],al
   14000cc63:	add    BYTE PTR [rbx],al
   14000cc65:	call   0xce3526ea
   14000cc6a:	and    DWORD PTR [rbx],ebx
   14000cc6c:	(bad)  
   14000cc6d:	adc    eax,0xd0f1011
   14000cc72:	or     al,0x13
   14000cc74:	lea    ecx,[rdx+0x79]
   14000cc77:	imul   edx,DWORD PTR [rax+0x38],0x1f
   14000cc7b:	sbb    bl,BYTE PTR [rax]
   14000cc7d:	sbb    DWORD PTR [rcx],ebx
   14000cc7f:	add    al,0x0
	...
   14000cc91:	add    BYTE PTR [rax],al
   14000cc93:	add    BYTE PTR [rbx],al
   14000cc95:	cli    
   14000cc96:	call   0x1663400dc
   14000cc9b:	and    DWORD PTR [rbx],ebx
   14000cc9d:	(bad)  
   14000cc9e:	adc    eax,0xd0f1011
   14000cca3:	or     al,0xb
   14000cca5:	or     cl,BYTE PTR [rcx]
   14000cca7:	(bad)  
   14000cca8:	(bad)  
   14000cca9:	push   rbp
   14000ccaa:	in     al,dx
   14000ccab:	imul   edx,DWORD PTR [rax+0x1d],0x19
   14000ccaf:	add    al,0x0
	...
   14000ccc1:	add    BYTE PTR [rax],al
   14000ccc3:	add    BYTE PTR [rbx],al
   14000ccc5:	cli    
   14000ccc6:	cli    
   14000ccc7:	push   rbx
   14000ccc8:	xor    al,0x33
   14000ccca:	sub    ah,BYTE PTR [rsi]
   14000cccc:	and    DWORD PTR [rbx],ebx
   14000ccce:	(bad)  
   14000cccf:	adc    eax,0xd0f1011
   14000ccd4:	or     al,0xb
   14000ccd6:	or     cl,BYTE PTR [rcx]
   14000ccd8:	or     DWORD PTR [rax],ecx
   14000ccda:	or     BYTE PTR [rdx],dl
   14000ccdc:	imul   esi,DWORD PTR [rsi],0x418
	...
   14000ccf2:	add    BYTE PTR [rax],al
   14000ccf4:	add    edi,ecx
   14000ccf6:	stc    
   14000ccf7:	push   rbx
   14000ccf8:	cmp    esi,DWORD PTR [rbx]
   14000ccfa:	sub    ah,BYTE PTR cs:[rsi]
   14000ccfd:	and    DWORD PTR [rbx],ebx
   14000ccff:	(bad)  
   14000cd00:	adc    eax,0xd0f1011
   14000cd05:	or     al,0xb
   14000cd07:	or     cl,BYTE PTR [rcx]
   14000cd09:	or     DWORD PTR [rax],ecx
   14000cd0b:	or     BYTE PTR [rbp+0x37],dl
   14000cd0e:	sbb    al,BYTE PTR [rax+rax*1]
	...
   14000cd21:	add    BYTE PTR [rax],al
   14000cd23:	add    BYTE PTR [rbx],al
   14000cd25:	stc    
   14000cd26:	in     eax,0x53
   14000cd28:	cmp    edi,DWORD PTR [rcx]
   14000cd2a:	xor    ch,BYTE PTR [rsi]
   14000cd2c:	sub    ah,BYTE PTR [rsi]
   14000cd2e:	and    DWORD PTR [rbx],ebx
   14000cd30:	(bad)  
   14000cd31:	adc    eax,0xd0f1011
   14000cd36:	or     al,0xb
   14000cd38:	or     cl,BYTE PTR [rcx]
   14000cd3a:	or     DWORD PTR [rax],ecx
   14000cd3c:	push   rbp
   14000cd3d:	cmp    BYTE PTR [rdi],bl
   14000cd3f:	add    al,0x0
	...
   14000cd51:	add    BYTE PTR [rax],al
   14000cd53:	add    BYTE PTR [rbx],al
   14000cd55:	call   0x17d3f213c
   14000cd5a:	xor    eax,0x262a2e32
   14000cd5f:	and    DWORD PTR [rbx],ebx
   14000cd61:	(bad)  
   14000cd62:	adc    eax,0xd0f1011
   14000cd67:	or     al,0xb
   14000cd69:	or     cl,BYTE PTR [rcx]
   14000cd6b:	or     DWORD PTR [rcx+0x38],ebx
   14000cd6e:	(bad)  
   14000cd6f:	add    al,0x0
	...
   14000cd81:	add    BYTE PTR [rax],al
   14000cd83:	add    edi,eax
   14000cd85:	jmp    0x17d3d0a2c
   14000cd8a:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662afbc2
   14000cd90:	and    DWORD PTR [rbx],ebx
   14000cd92:	(bad)  
   14000cd93:	adc    eax,0xd0f1011
   14000cd98:	or     al,0xb
   14000cd9a:	or     cl,BYTE PTR [rcx]
   14000cd9c:	jns    0x14000cddb
   14000cd9e:	(bad)  
   14000cd9f:	add    al,0x0
	...
   14000cdb1:	add    BYTE PTR [rax],al
   14000cdb3:	add    edi,edx
   14000cdb5:	jmp    0x17d3d0e5c
   14000cdba:	(bad)  
   14000cdbb:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662afbf3
   14000cdc1:	and    DWORD PTR [rbx],ebx
   14000cdc3:	(bad)  
   14000cdc4:	adc    eax,0xd0f1011
   14000cdc9:	or     al,0xb
   14000cdcb:	or     bh,BYTE PTR [rcx+0x30]
   14000cdce:	and    BYTE PTR [rax+rax*1],al
	...
   14000cde1:	add    BYTE PTR [rax],al
   14000cde3:	add    ebp,ebx
   14000cde5:	loopne 0x14000cdcb
   14000cde7:	rex.XB
   14000cde8:	rex cmp eax,0x353a3f44
   14000cdee:	xor    ch,BYTE PTR [rsi]
   14000cdf0:	sub    ah,BYTE PTR [rsi]
   14000cdf2:	and    DWORD PTR [rbx],ebx
   14000cdf4:	(bad)  
   14000cdf5:	adc    eax,0xd0f1011
   14000cdfa:	or     al,0xb
   14000cdfc:	xchg   DWORD PTR [rdx+riz*1],esp
   14000cdff:	add    al,0x0
	...
   14000ce11:	add    BYTE PTR [rax],al
   14000ce13:	add    eax,DWORD PTR [rip+0x4343a2e0]        # 0x1834470f9
   14000ce19:	push   rcx
   14000ce1a:	rex.RB
   14000ce1b:	rex.R (bad) 
   14000ce1d:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662afc55
   14000ce23:	and    DWORD PTR [rbx],ebx
   14000ce25:	(bad)  
   14000ce26:	adc    eax,0xd0f1011
   14000ce2b:	or     al,0x87
   14000ce2d:	and    esp,DWORD PTR [rsp+rax*1]
	...
   14000ce40:	add    BYTE PTR [rax],al
   14000ce42:	add    BYTE PTR [rbx],al
   14000ce44:	(bad)  
   14000ce45:	out    0xe1,eax
   14000ce47:	rex.RX
   14000ce48:	rex.RX
   14000ce49:	rex.WRXB
   14000ce4a:	rex.WB
   14000ce4b:	rex.RB
   14000ce4c:	rex.R (bad) 
   14000ce4e:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662afc86
   14000ce54:	and    DWORD PTR [rbx],ebx
   14000ce56:	(bad)  
   14000ce57:	adc    eax,0xd0f1011
   14000ce5c:	mov    BYTE PTR [rip+0x423],ah        # 0x14000d285
	...
   14000ce72:	add    BYTE PTR [rbx],al
   14000ce74:	in     al,0x8c
   14000ce76:	jae    0x14000cebf
   14000ce78:	rex.RX
   14000ce79:	rex.WRXB push r10
   14000ce7b:	rex.WB
   14000ce7c:	rex.RB
   14000ce7d:	rex.R (bad) 
   14000ce7f:	cmp    dh,BYTE PTR [rip+0x262a2e32]        # 0x1662afcb7
   14000ce85:	and    DWORD PTR [rbx],ebx
   14000ce87:	(bad)  
   14000ce88:	adc    eax,0xed0f1011
   14000ce8d:	(bad)  
   14000ce8e:	and    eax,0x4
	...
   14000cea3:	add    ecx,DWORD PTR [rbx+0x4748738c]
   14000cea9:	rex.WRXB pop r8
   14000ceab:	push   rdx
   14000ceac:	rex.WB
   14000cead:	rex.RB
   14000ceae:	rex.R (bad) 
   14000ceb0:	cmp    dh,BYTE PTR [rip+0x26262f2e]        # 0x16626fde4
   14000ceb6:	and    DWORD PTR [rbx],ebx
   14000ceb8:	(bad)  
   14000ceb9:	adc    eax,0x29ee1011
   14000cebe:	(bad)  
   14000cebf:	add    al,0x0
	...
   14000ced1:	add    BYTE PTR [rax],al
   14000ced3:	add    ecx,DWORD PTR [rbx+0x484e73e3]
   14000ced9:	(bad)  
   14000ceda:	pop    rbp
   14000cedb:	pop    rax
   14000cedc:	push   rdx
   14000cedd:	rex.WB
   14000cede:	lea    r11d,[r15-0x66676061]
   14000cee5:	cwde   
   14000cee6:	xchg   esp,eax
   14000cee7:	(bad)  
   14000cee8:	sbb    edx,DWORD PTR [rdi]
   14000ceea:	adc    eax,0x2928f016
   14000ceef:	add    al,0x0
	...
   14000cf01:	add    BYTE PTR [rax],al
   14000cf03:	add    eax,DWORD PTR [rsi]
   14000cf05:	mov    edi,DWORD PTR [rdi+0x4b]
   14000cf08:	rex.W jns 0x14000cf6e
   14000cf0b:	pop    rbp
   14000cf0c:	pop    rax
   14000cf0d:	push   rdx
   14000cf0e:	rex.WB cqo 
   14000cf10:	movabs eax,ds:0xa0a3aaabb3babcc7
   14000cf19:	xchg   edx,eax
   14000cf1a:	adc    eax,0x282cf18d
   14000cf1f:	add    al,0x0
	...
   14000cf31:	add    BYTE PTR [rax],al
   14000cf33:	add    ebp,edx
   14000cf35:	idiv   BYTE PTR [rbx+0x4c]
   14000cf38:	rex.WXB ins DWORD PTR es:[rdi],dx
   14000cf3a:	imul   esp,DWORD PTR [rbx+0x5d],0x9e915258
   14000cf41:	scas   eax,DWORD PTR es:[rdi]
   14000cf42:	enter  0xc1cc,0xc2
   14000cf46:	mov    esi,0x9ea5b1b7
   14000cf4b:	xchg   esi,eax
   14000cf4c:	jne    0x14000cf79
   14000cf4e:	sub    al,0x4
	...
   14000cf60:	add    BYTE PTR [rax],al
   14000cf62:	add    BYTE PTR [rbx],al
   14000cf64:	(bad)  
   14000cf65:	(bad)  
   14000cf66:	jno    0x14000cfbe
   14000cf68:	rex.WR jo 0x14000cfd8
   14000cf6b:	imul   esp,DWORD PTR [rbx+0x5d],0x9e915258
   14000cf72:	mov    al,0xcb
   14000cf74:	leave  
   14000cf75:	rol    esi,1
   14000cf77:	mov    ebp,0xa8b4b6ba
   14000cf7c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cf7d:	pushf  
   14000cf7e:	nop
   14000cf7f:	add    al,0x0
	...
   14000cf91:	add    BYTE PTR [rax],al
   14000cf93:	add    esi,ebp
   14000cf95:	(bad)  
   14000cf96:	jno    0x14000cfee
   14000cf98:	push   rsi
   14000cf99:	js     0x14000d00b
   14000cf9b:	ins    DWORD PTR es:[rdi],dx
   14000cf9c:	imul   esp,DWORD PTR [rbx+0x5d],0xa0915258
   14000cfa3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cfa4:	xlat   BYTE PTR ds:[rbx]
   14000cfa5:	(bad)  
   14000cfa7:	mov    bl,0xbe
   14000cfaa:	mov    ebx,0xa3aab4b7
   14000cfaf:	popf   
	...
   14000cfc0:	add    BYTE PTR [rax],al
   14000cfc2:	add    BYTE PTR [rbx],al
   14000cfc4:	cmc    
   14000cfc5:	cmc    
   14000cfc6:	jno    0x14000d026
   14000cfc8:	pop    rbx
   14000cfc9:	cmp    DWORD PTR [rax+0x70],0x6d
   14000cfcd:	imul   esp,DWORD PTR [rbx+0x5d],0xa7495258
   14000cfd4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cfd5:	fst    st(4)
   14000cfd7:	(bad)  
   14000cfd8:	retf   0xccc6
   14000cfdb:	mov    edi,0xacb5b8bc
   14000cfe0:	movabs ds:0xa3a5,eax
	...
   14000cff1:	add    BYTE PTR [rax],al
   14000cff3:	add    esi,esp
   14000cff5:	cmc    
   14000cff6:	sbb    DWORD PTR [rsp+rsi*2+0x1],0x6d707883
   14000cffe:	imul   esp,DWORD PTR [rbx+0x5d],0x99495258
   14000d005:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d006:	(bad)  
   14000d007:	xlat   BYTE PTR ds:[rbx]
   14000d008:	xlat   BYTE PTR ds:[rbx]
   14000d009:	ror    bl,1
   14000d00b:	enter  0xc1cc,0xbd
   14000d00f:	mov    ecx,0xa9b7b3b6
   14000d014:	test   eax,0xa9
	...
   14000d021:	add    BYTE PTR [rbx],al
   14000d023:	lock hlt 
   14000d025:	hlt    
   14000d026:	addr32 pop rsp
   14000d028:	add    WORD PTR [rcx],ax
   14000d02b:	cmp    DWORD PTR [rax+0x70],0x6d
   14000d02f:	imul   esp,DWORD PTR [rbx+0x5d],0x91495258
   14000d036:	(bad)  
   14000d037:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d038:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d039:	fcomp  st(3)
   14000d03b:	ror    bl,1
   14000d03d:	leave  
   14000d03e:	(bad)
   14000d042:	mov    ebp,0xa9b9bbbc
   14000d047:	test   eax,0xa9
   14000d04c:	add    BYTE PTR [rax],al
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	add    BYTE PTR [rax],al
   14000d052:	add    esi,eax
   14000d054:	repz hlt 
   14000d056:	jb     0x14000d0c0
   14000d058:	je     0x14000d05b
   14000d05a:	add    DWORD PTR [rcx],eax
   14000d05c:	cmp    DWORD PTR [rax+0x70],0x6d
   14000d060:	imul   esp,DWORD PTR [rbx+0x5d],0x45495258
   14000d067:	rex.R xchg edi,eax
   14000d069:	lahf   
   14000d06a:	movabs al,ds:0xc3c5c8c9cdd4dbd2
   14000d073:	sar    DWORD PTR [rsi-0x48454443],0xaa
   14000d07a:	test   eax,0x0
   14000d07f:	add    BYTE PTR [rax],al
   14000d081:	add    BYTE PTR [rbx],al
   14000d083:	lock bnd repz jb 0x14000d0f0
   14000d088:	je     0x14000d08b
   14000d08a:	add    DWORD PTR [rcx],eax
   14000d08c:	add    DWORD PTR [rbx+0x696d7078],eax
   14000d092:	movsxd ebx,DWORD PTR [rbp+0x58]
   14000d095:	push   rdx
   14000d096:	rex.WB
   14000d097:	rex.RB
   14000d098:	rex.R (bad) 
   14000d09a:	xchg   ebp,eax
   14000d09b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d09c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d09d:	iret   
   14000d09e:	(bad)  
   14000d0a0:	int    0xcb
   14000d0a2:	enter  0xc3c5,0xbf
   14000d0a6:	mov    ebp,0xb5b8babc
   14000d0ab:	stos   BYTE PTR es:[rdi],al
   14000d0ac:	test   eax,0x0
   14000d0b1:	add    BYTE PTR [rbx],al
   14000d0b3:	lock icebp 
   14000d0b5:	bnd jbe 0x14000d124
   14000d0b8:	jno    0x14000d0bb
   14000d0ba:	add    DWORD PTR [rcx],eax
   14000d0bc:	add    DWORD PTR [rcx],eax
   14000d0be:	cmp    DWORD PTR [rax+0x70],0x6d
   14000d0c2:	imul   esp,DWORD PTR [rbx+0x5d],0x45495258
   14000d0c9:	rex.R (bad) 
   14000d0cb:	pop    rdi
   14000d0cc:	mov    ds,WORD PTR [rbx-0x2f284f5a]
   14000d0d2:	int    0xca
   14000d0d4:	enter  0xccc5,0xc2
   14000d0d8:	sar    BYTE PTR [rbp-0x56474645],0xa9
   14000d0df:	add    BYTE PTR [rax],al
   14000d0e1:	add    BYTE PTR [rbx],al
   14000d0e3:	out    dx,al
   14000d0e4:	lock icebp 
   14000d0e6:	jbe    0x14000d157
   14000d0e8:	jge    0x14000d0eb
   14000d0ea:	add    DWORD PTR [rcx],eax
   14000d0ec:	add    DWORD PTR [rcx],eax
   14000d0ee:	add    DWORD PTR [rbx+0x696d7078],eax
   14000d0f4:	movsxd ebx,DWORD PTR [rbp+0x58]
   14000d0f7:	push   rdx
   14000d0f8:	rex.WB
   14000d0f9:	rex.RB
   14000d0fa:	rex.R pop rdi
   14000d0fc:	(bad)  
   14000d0fd:	cmp    edx,DWORD PTR [rbx-0x2825225c]
   14000d103:	(bad)  
   14000d104:	int    0xcb
   14000d106:	enter  0xccc6,0xc1
   14000d10a:	mov    edi,0xbcc0c1bf
   14000d10f:	test   eax,0xee030000
   14000d114:	out    dx,eax
   14000d115:	lock ja 0x14000d18f
   14000d118:	mov    DWORD PTR [rcx],eax
   14000d11a:	add    DWORD PTR [rcx],eax
   14000d11c:	add    DWORD PTR [rcx],eax
   14000d11e:	add    DWORD PTR [rcx],eax
   14000d120:	cmp    DWORD PTR [rax+0x70],0x6d
   14000d124:	imul   esp,DWORD PTR [rbx+0x5d],0x45495258
   14000d12b:	pop    rdi
   14000d12c:	(bad)  
   14000d12d:	cmp    edi,DWORD PTR [rsi]
   14000d12f:	(bad)  
   14000d130:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d131:	iret   
   14000d132:	fcmovu st,st(5)
   14000d134:	fcmovbe st,st(4)
   14000d136:	(bad)  
   14000d137:	retf   
   14000d138:	leave  
   14000d139:	mov    ah,0xcd
   14000d13c:	int    0xc8
   14000d13e:	ret    0xa9
   14000d141:	add    BYTE PTR [rbx],al
   14000d143:	out    dx,al
   14000d144:	out    dx,eax
   14000d145:	out    dx,eax
   14000d146:	(bad)  
   14000d147:	ja     0x14000d1c5
   14000d149:	je     0x14000d1c8
   14000d14b:	icebp  
   14000d14c:	xchg   DWORD PTR [rcx],eax
   14000d14e:	add    DWORD PTR [rcx],eax
   14000d150:	add    DWORD PTR [rbx+0x696d7078],eax
   14000d156:	movsxd ebx,DWORD PTR [rbp+0x58]
   14000d159:	push   rdx
   14000d15a:	rex.WB pop r15
   14000d15c:	(bad)  
   14000d15d:	cmp    eax,DWORD PTR ds:[rbx+riz*4]
   14000d161:	mov    dl,0xad
   14000d163:	scas   al,BYTE PTR es:[rdi]
   14000d164:	iret   
   14000d165:	fcmovnu st,st(4)
   14000d167:	xlat   BYTE PTR ds:[rbx]
   14000d168:	ror    ch,1
   14000d16a:	int    0xd4
   14000d16c:	ror    esi,1
   14000d16e:	retf   0xa9
   14000d171:	add    BYTE PTR [rbx],al
   14000d173:	in     eax,dx
   14000d174:	out    dx,al
   14000d175:	out    dx,eax
   14000d176:	mov    al,BYTE PTR [rdx+0x6c6f7777]
   14000d17c:	push   0x7a816768
   14000d181:	test   DWORD PTR [rdi+0x69697078],eax
   14000d187:	movsxd ebx,DWORD PTR [rbp+0x58]
   14000d18a:	push   rdx
   14000d18b:	pop    rdi
   14000d18c:	fs cmp al,0x3e
   14000d18f:	add    al,0xa6
   14000d191:	ret    0xb8bb
   14000d194:	lods   al,BYTE PTR ds:[rsi]
   14000d195:	lods   al,BYTE PTR ds:[rsi]
   14000d196:	(bad)  
   14000d197:	(bad)  
   14000d199:	xlat   BYTE PTR ds:[rbx]
   14000d19a:	(bad)  
   14000d19c:	(bad)  
   14000d19e:	shr    BYTE PTR [rcx-0x77fd0000],1
   14000d1a4:	in     eax,dx
   14000d1a5:	out    dx,al
   14000d1a6:	stc    
   14000d1a7:	add    DWORD PTR [rsi+0x6c6f7776],0x5c5c6868
   14000d1b1:	pop    rsi
   14000d1b2:	push   rsi
   14000d1b3:	push   rsi
   14000d1b4:	push   rbx
   14000d1b5:	jae    0x14000d218
   14000d1b7:	(bad)  
   14000d1b8:	pop    rcx
   14000d1b9:	pop    rbp
   14000d1ba:	pop    rax
   14000d1bb:	pop    rdi
   14000d1bc:	jno    0x14000d1fa
   14000d1be:	cmp    al,0x4
   14000d1c0:	add    BYTE PTR [rsp+rbp*4-0x53453d3e],ch
   14000d1c7:	lods   al,BYTE PTR ds:[rsi]
   14000d1c8:	lods   al,BYTE PTR ds:[rsi]
   14000d1c9:	int3   
   14000d1ca:	(bad)  
   14000d1cc:	(bad)  
   14000d1ce:	lods   al,BYTE PTR ds:[rsi]
   14000d1cf:	add    BYTE PTR [rax],al
   14000d1d1:	add    BYTE PTR [rax],al
   14000d1d3:	add    edi,eax
   14000d1d5:	(bad)  
   14000d1d6:	out    dx,al
   14000d1d7:	out    dx,eax
   14000d1d8:	out    dx,eax
   14000d1d9:	lock icebp 
   14000d1db:	cmc    
   14000d1dc:	mov    DWORD PTR [rax+0x5c767281],eax
   14000d1e2:	pop    rsi
   14000d1e3:	push   rsi
   14000d1e4:	push   rsi
   14000d1e5:	rex.WR
   14000d1e6:	rex.WXB
   14000d1e7:	rex.WRX
   14000d1e8:	rex.W
   14000d1e9:	rex.RXB mov ds,WORD PTR [r10+0x53]
   14000d1ed:	cmp    al,0x4
   14000d1f0:	add    BYTE PTR [rax],al
   14000d1f2:	add    ch,dl
   14000d1f4:	lods   al,BYTE PTR ds:[rsi]
   14000d1f5:	lods   al,BYTE PTR ds:[rsi]
   14000d1f6:	scas   eax,DWORD PTR es:[rdi]
   14000d1f7:	mov    ebx,0xd3acacaf
   14000d1fc:	(bad)  
   14000d1fd:	lods   al,BYTE PTR ds:[rsi]
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	add    BYTE PTR [rax],al
   14000d202:	add    BYTE PTR [rax],al
   14000d204:	add    eax,DWORD PTR [rbx]
   14000d206:	add    eax,DWORD PTR [rbx]
   14000d208:	add    eax,DWORD PTR [rbx]
   14000d20a:	div    edi
   14000d20c:	repnz repz hlt 
   14000d20f:	hlt    
   14000d210:	cmc    
   14000d211:	cmc    
   14000d212:	mov    edi,DWORD PTR [rsi-0x80]
   14000d215:	jno    0x14000d27e
   14000d217:	push   rsp
   14000d218:	rex.WRX
   14000d219:	rex.W
   14000d21a:	rex.RXB
   14000d21b:	rex.RX
   14000d21c:	rex.XB
   14000d21d:	rex.XB
   14000d21e:	add    al,0x0
   14000d221:	add    BYTE PTR [rax],al
   14000d223:	add    BYTE PTR [rax],al
   14000d225:	add    BYTE PTR [rsp+rbp*4-0x53535354],ch
   14000d22c:	lods   al,BYTE PTR ds:[rsi]
	...
   14000d239:	add    BYTE PTR [rbx],al
   14000d23b:	add    eax,DWORD PTR [rbx]
   14000d23d:	add    eax,DWORD PTR [rbx]
   14000d23f:	add    eax,DWORD PTR [rbx]
   14000d241:	sti    
   14000d242:	mov    ebp,edx
   14000d244:	(bad)  
   14000d245:	div    dh
   14000d247:	(bad)  
   14000d248:	mov    esp,DWORD PTR [rdx+0x53667173]
   14000d24e:	push   rsp
   14000d24f:	add    al,0x0
	...
   14000d271:	add    eax,DWORD PTR [rbx]
   14000d273:	add    eax,DWORD PTR [rbx]
   14000d275:	add    eax,DWORD PTR [rbx]
   14000d277:	add    edi,ebx
   14000d279:	mov    ecx,DWORD PTR [rbx+0x4fe74f8]
	...
   14000d2a7:	add    BYTE PTR [rbx],al
   14000d2a9:	add    eax,DWORD PTR [rbx]
   14000d2ab:	add    eax,DWORD PTR [rbx]
   14000d2ad:	add    eax,DWORD PTR [rax]
	...
   14000d34f:	add    bh,bh
   14000d351:	(bad)  
   14000d352:	(bad)  
   14000d353:	(bad)  
   14000d354:	(bad)  
   14000d355:	inc    DWORD PTR [rax]
   14000d357:	add    bh,bh
   14000d359:	(bad)  
   14000d35a:	(bad)  
   14000d35b:	(bad)  
   14000d35c:	(bad)  
   14000d35d:	inc    DWORD PTR [rax]
   14000d35f:	add    bh,bh
   14000d361:	(bad)  
   14000d362:	(bad)  
   14000d363:	(bad)  
   14000d364:	(bad)  
   14000d365:	inc    DWORD PTR [rax]
   14000d367:	add    ah,bh
   14000d369:	(bad)  
   14000d36a:	(bad)  
   14000d36b:	(bad)  
   14000d36c:	(bad)  
   14000d36d:	inc    DWORD PTR [rax]
   14000d36f:	add    al,bh
   14000d371:	add    edi,edi
   14000d373:	(bad)  
   14000d374:	(bad)  
   14000d375:	inc    DWORD PTR [rax]
   14000d377:	add    al,dh
   14000d379:	add    BYTE PTR [rdi],bl
   14000d37b:	(bad)  
   14000d37c:	(bad)  
   14000d37d:	inc    DWORD PTR [rax]
   14000d37f:	add    al,dh
   14000d381:	add    BYTE PTR [rcx],al
   14000d383:	(bad)  
   14000d384:	(bad)  
   14000d385:	inc    DWORD PTR [rax]
   14000d387:	add    al,dh
   14000d389:	add    BYTE PTR [rax],al
   14000d38b:	(bad)  
   14000d38c:	(bad)  
   14000d38d:	inc    DWORD PTR [rax]
   14000d38f:	add    al,dh
   14000d391:	add    BYTE PTR [rax],al
   14000d393:	add    edi,edi
   14000d395:	inc    DWORD PTR [rax]
   14000d397:	add    al,dh
   14000d399:	add    BYTE PTR [rax],al
   14000d39b:	add    bh,bh
   14000d39d:	inc    DWORD PTR [rax]
   14000d39f:	add    al,dh
   14000d3a1:	add    BYTE PTR [rax],al
   14000d3a3:	add    bh,bh
   14000d3a5:	inc    DWORD PTR [rax]
   14000d3a7:	add    al,dh
   14000d3a9:	add    BYTE PTR [rax],al
   14000d3ab:	add    bh,bh
   14000d3ad:	inc    DWORD PTR [rax]
   14000d3af:	add    al,dh
   14000d3b1:	add    BYTE PTR [rax],al
   14000d3b3:	add    bh,bh
   14000d3b5:	inc    DWORD PTR [rax]
   14000d3b7:	add    al,dh
   14000d3b9:	add    BYTE PTR [rax],al
   14000d3bb:	add    bh,bh
   14000d3bd:	inc    DWORD PTR [rax]
   14000d3bf:	add    al,dh
   14000d3c1:	add    BYTE PTR [rax],al
   14000d3c3:	add    bh,bh
   14000d3c5:	inc    DWORD PTR [rax]
   14000d3c7:	add    al,dh
   14000d3c9:	add    BYTE PTR [rax],al
   14000d3cb:	add    bh,bh
   14000d3cd:	inc    DWORD PTR [rax]
   14000d3cf:	add    al,dh
   14000d3d1:	add    BYTE PTR [rax],al
   14000d3d3:	add    bh,bh
   14000d3d5:	inc    DWORD PTR [rax]
   14000d3d7:	add    al,ah
   14000d3d9:	add    BYTE PTR [rax],al
   14000d3db:	add    bh,bh
   14000d3dd:	inc    DWORD PTR [rax]
   14000d3df:	add    al,ah
   14000d3e1:	add    BYTE PTR [rax],al
   14000d3e3:	add    bh,bh
   14000d3e5:	inc    DWORD PTR [rax]
   14000d3e7:	add    al,ah
   14000d3e9:	add    BYTE PTR [rax],al
   14000d3eb:	add    bh,bh
   14000d3ed:	inc    DWORD PTR [rax]
   14000d3ef:	add    al,ah
   14000d3f1:	add    BYTE PTR [rax],al
   14000d3f3:	add    bh,bh
   14000d3f5:	inc    DWORD PTR [rax]
   14000d3f7:	add    al,ah
   14000d3f9:	add    BYTE PTR [rax],al
   14000d3fb:	add    bh,bh
   14000d3fd:	inc    DWORD PTR [rax]
   14000d3ff:	add    al,ah
   14000d401:	add    BYTE PTR [rax],al
   14000d403:	add    bh,bh
   14000d405:	inc    DWORD PTR [rax]
   14000d407:	add    al,ah
   14000d409:	add    BYTE PTR [rax],al
   14000d40b:	add    bh,bh
   14000d40d:	inc    DWORD PTR [rax]
   14000d40f:	add    al,ah
   14000d411:	add    BYTE PTR [rax],al
   14000d413:	add    bh,bh
   14000d415:	inc    DWORD PTR [rax]
   14000d417:	add    al,ah
   14000d419:	add    BYTE PTR [rax],al
   14000d41b:	add    bh,bh
   14000d41d:	inc    DWORD PTR [rax]
   14000d41f:	add    al,ah
   14000d421:	add    BYTE PTR [rax],al
   14000d423:	add    bh,bh
   14000d425:	inc    DWORD PTR [rax]
   14000d427:	add    al,ah
   14000d429:	add    BYTE PTR [rax],al
   14000d42b:	add    bh,bh
   14000d42d:	inc    DWORD PTR [rax]
   14000d42f:	add    al,ah
   14000d431:	add    BYTE PTR [rax],al
   14000d433:	add    bh,bh
   14000d435:	inc    DWORD PTR [rax]
   14000d437:	add    al,ah
   14000d439:	add    BYTE PTR [rax],al
   14000d43b:	add    BYTE PTR [rdi],bl
   14000d43d:	inc    DWORD PTR [rax]
   14000d43f:	add    al,ah
   14000d441:	add    BYTE PTR [rax],al
   14000d443:	add    BYTE PTR [rbx],al
   14000d445:	inc    DWORD PTR [rax]
   14000d447:	add    al,al
   14000d449:	add    BYTE PTR [rax],al
   14000d44b:	add    BYTE PTR [rax],al
   14000d44d:	jg     0x14000d44f
   14000d44f:	add    al,al
   14000d451:	add    BYTE PTR [rax],al
   14000d453:	add    BYTE PTR [rax],al
   14000d455:	(bad)  
   14000d456:	add    BYTE PTR [rax],al
   14000d458:	rol    BYTE PTR [rax],0x0
   14000d45b:	add    BYTE PTR [rax],al
   14000d45d:	(bad)  
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	rol    BYTE PTR [rax],0x0
   14000d463:	add    BYTE PTR [rax],al
   14000d465:	add    DWORD PTR [rax],eax
   14000d467:	add    al,al
   14000d469:	add    BYTE PTR [rax],al
   14000d46b:	add    BYTE PTR [rax],al
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    al,al
   14000d471:	add    BYTE PTR [rax],al
   14000d473:	add    BYTE PTR [rax],al
   14000d475:	add    BYTE PTR [rax],al
   14000d477:	add    al,al
   14000d479:	add    BYTE PTR [rax],al
   14000d47b:	add    BYTE PTR [rax],al
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    al,al
   14000d481:	add    BYTE PTR [rax],al
   14000d483:	add    BYTE PTR [rax],al
   14000d485:	add    BYTE PTR [rax],al
   14000d487:	add    al,al
   14000d489:	add    BYTE PTR [rax],al
   14000d48b:	add    BYTE PTR [rax-0x1fffffff],al
   14000d491:	add    BYTE PTR [rax],al
   14000d493:	add    al,ah
   14000d495:	add    eax,DWORD PTR [rax]
   14000d497:	add    al,dh
   14000d499:	add    BYTE PTR [rax],al
   14000d49b:	add    ah,bh
   14000d49d:	(bad)  
   14000d49e:	add    BYTE PTR [rax],al
   14000d4a0:	inc    eax
   14000d4a2:	add    BYTE PTR [rax],al
   14000d4a4:	(bad)  
   14000d4a5:	inc    DWORD PTR [rax]
   14000d4a7:	add    bh,bh
   14000d4a9:	inc    DWORD PTR [rax+0xffff01]
   14000d4af:	add    bh,bh
   14000d4b1:	(bad)  
   14000d4b2:	inc    DWORD PTR [rbx]
   14000d4b4:	(bad)  
   14000d4b5:	inc    DWORD PTR [rax]
   14000d4b7:	add    bh,bh
   14000d4b9:	(bad)  
   14000d4ba:	(bad)  
   14000d4bb:	(bad)  
   14000d4bc:	(bad)  
   14000d4bd:	inc    DWORD PTR [rax]
   14000d4bf:	add    bh,bh
   14000d4c1:	(bad)  
   14000d4c2:	(bad)  
   14000d4c3:	(bad)  
   14000d4c4:	(bad)  
   14000d4c5:	inc    DWORD PTR [rax]
   14000d4c7:	add    bh,bh
   14000d4c9:	(bad)  
   14000d4ca:	(bad)  
   14000d4cb:	(bad)  
   14000d4cc:	(bad)  
   14000d4cd:	inc    DWORD PTR [rax]
   14000d4cf:	add    BYTE PTR [rax],ch
   14000d4d1:	add    BYTE PTR [rax],al
   14000d4d3:	add    BYTE PTR [rax],ah
   14000d4d5:	add    BYTE PTR [rax],al
   14000d4d7:	add    BYTE PTR [rax+0x0],al
   14000d4da:	add    BYTE PTR [rax],al
   14000d4dc:	add    DWORD PTR [rax],eax
   14000d4de:	or     BYTE PTR [rax],al
	...
   14000d4fc:	(bad)  
   14000d4fd:	(bad)  
   14000d4fe:	inc    DWORD PTR [rax]
   14000d500:	pop    rbp
   14000d501:	(bad)  
   14000d502:	(bad)  
   14000d503:	add    BYTE PTR [rdi+0x45],al
   14000d506:	add    BYTE PTR [r15-0xffffa7],r15b
   14000d50d:	popf   
   14000d50e:	popf   
   14000d50f:	add    bh,bh
   14000d511:	movabs eax,ds:0xaaff00a5a5ff00a1
   14000d51a:	stos   BYTE PTR es:[rdi],al
   14000d51b:	add    bh,bh
   14000d51d:	lods   eax,DWORD PTR ds:[rsi]
   14000d51e:	lods   eax,DWORD PTR ds:[rsi]
   14000d51f:	add    dh,bh
   14000d521:	scas   al,BYTE PTR es:[rdi]
   14000d522:	scas   al,BYTE PTR es:[rdi]
   14000d523:	add    bh,bh
   14000d525:	mov    dl,0xb2
   14000d527:	add    ah,bh
   14000d529:	mov    cl,0xb1
   14000d52b:	add    ah,bh
   14000d52d:	mov    dl,0xb2
   14000d52f:	add    bh,bh
   14000d531:	mov    bh,0xb7
   14000d533:	add    bh,bh
   14000d535:	mov    ebx,0xb9fc00bb
   14000d53a:	mov    ecx,0xb8b8fb00
   14000d53f:	add    cl,bh
   14000d541:	mov    ecx,0xbfff00b9
   14000d546:	mov    edi,0x9898cb00
   14000d54b:	add    al,bh
   14000d54d:	mov    ebx,0x97c800bb
   14000d552:	xchg   edi,eax
   14000d553:	add    ch,al
   14000d555:	xchg   ebp,eax
   14000d556:	xchg   ebp,eax
   14000d557:	add    bl,al
   14000d559:	xchg   esp,eax
   14000d55a:	xchg   esp,eax
   14000d55b:	add    bh,bh
   14000d55d:	ret    
   14000d55e:	ret    
   14000d55f:	add    dh,dh
   14000d561:	mov    esi,0x93bf00be
   14000d566:	xchg   ebx,eax
   14000d567:	add    BYTE PTR [rcx+rdx*4-0x3900ff6f],bh
   14000d56e:	mov    BYTE PTR [rax],0xf9
   14000d571:	rol    ecx,0x0
   14000d574:	mov    edx,0xb3009090
   14000d579:	mov    ecx,DWORD PTR [rbx-0x37370100]
   14000d57f:	add    dl,al
   14000d581:	cwde   
   14000d582:	cwde   
   14000d583:	add    BYTE PTR [rdi-0x4bff7071],dh
   14000d589:	lea    ecx,[rbp-0x3e3e0c00]
   14000d58f:	add    cl,dl
   14000d591:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d592:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d593:	add    BYTE PTR [rax-0x61ff7475],dh
   14000d599:	jge    0x14000d618
   14000d59b:	add    BYTE PTR [rsi-0xff7576],ch
   14000d5a1:	int    0xcd
   14000d5a3:	add    bh,cl
   14000d5a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d5a6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d5a7:	add    BYTE PTR [rbp-0xff797a],ah
   14000d5ad:	rcl    al,1
   14000d5af:	add    ch,cl
   14000d5b1:	test   al,0xa8
   14000d5b3:	add    BYTE PTR [rbp+rcx*4-0x6341ff73],ch
   14000d5ba:	pushf  
   14000d5bb:	add    BYTE PTR [rsi-0x77ff7d7e],bl
   14000d5c1:	jo     0x14000d633
   14000d5c3:	add    BYTE PTR [rdx-0xff7f80],bl
   14000d5c9:	(bad)  
   14000d5ca:	(bad)  
   14000d5cb:	add    dh,dl
   14000d5cd:	mov    ah,0xb4
   14000d5cf:	add    BYTE PTR [rsi-0x6cff8182],dl
   14000d5d5:	jl     0x14000d653
   14000d5d7:	add    ch,ah
   14000d5d9:	ret    0xc2
   14000d5dc:	mov    ah,0x99
   14000d5de:	cdq    
   14000d5df:	add    BYTE PTR [rcx-0xff8485],dl
   14000d5e5:	fcmovu st,st(2)
   14000d5e7:	add    dh,ch
   14000d5e9:	retf   
   14000d5ea:	retf   
   14000d5eb:	add    ah,cl
   14000d5ed:	scas   al,BYTE PTR es:[rdi]
   14000d5ee:	scas   al,BYTE PTR es:[rdi]
   14000d5ef:	add    dh,ah
   14000d5f1:	(bad)
   14000d5f4:	mov    ?,WORD PTR [rdx+0x7a]
   14000d5f7:	add    dh,dh
   14000d5f9:	(bad)  
   14000d5fa:	(bad)  
   14000d5fb:	add    bh,bh
   14000d5fd:	fstp   st(5)
   14000d5ff:	add    BYTE PTR [rdx-0x74ff5e5f],bh
   14000d605:	js     0x14000d67f
   14000d607:	add    BYTE PTR [rax-0x3bff898a],cl
   14000d60d:	stos   DWORD PTR es:[rdi],eax
   14000d60e:	stos   DWORD PTR es:[rdi],eax
   14000d60f:	add    BYTE PTR [rsi-0x79ff8384],cl
   14000d615:	jne    0x14000d68c
   14000d617:	add    bl,ah
   14000d619:	mov    edi,0xe1e1ff00
   14000d61f:	add    BYTE PTR [rbx-0x5bff8b8c],al
   14000d625:	xchg   edx,eax
   14000d626:	xchg   edx,eax
   14000d627:	add    bh,bl
   14000d629:	mov    edi,0x85859500
   14000d62f:	add    dl,ah
   14000d631:	retf   
   14000d632:	retf   
   14000d633:	add    bl,bl
   14000d635:	(bad)  
   14000d636:	(bad)  
   14000d637:	add    BYTE PTR [rdi+0x72],bh
   14000d63a:	jb     0x14000d63c
   14000d63c:	jmp    rsi
   14000d63e:	out    0x0,al
   14000d640:	sar    BYTE PTR [rbp-0x4a36ff43],cl
   14000d646:	mov    ch,0x0
   14000d648:	(bad)  
   14000d649:	rol    ecx,0x0
   14000d64c:	(bad)
   14000d64f:	add    BYTE PTR [rbp+0x7c008888],dl
   14000d655:	jno    0x14000d6c8
   14000d657:	add    dl,ch
   14000d659:	(bad)  
   14000d65a:	(bad)  
   14000d65b:	add    cl,ah
   14000d65d:	(bad)  
   14000d65e:	(bad)  
   14000d65f:	add    ah,cl
   14000d661:	mov    ebx,0xebff00bb
   14000d666:	jmp    0x14000d668
   14000d668:	cli    
   14000d669:	out    0xe7,eax
   14000d66b:	add    dh,bl
   14000d66d:	int    0xcd
   14000d66f:	add    bl,bl
   14000d671:	retf   
   14000d672:	retf   
   14000d673:	add    BYTE PTR [rsi+0x75],bh
   14000d676:	jne    0x14000d678
   14000d678:	(bad)  
   14000d679:	out    dx,al
   14000d67a:	out    dx,al
   14000d67b:	add    BYTE PTR [rbx-0x4fff6e6f],bl
   14000d681:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d682:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d683:	add    BYTE PTR [rbx+0x6c],dh
   14000d686:	ins    BYTE PTR es:[rdi],dx
   14000d687:	add    BYTE PTR [rbx+0x71009393],bl
   14000d68d:	imul   ebp,DWORD PTR [rbx+0x0],0xffffffff
   14000d691:	repz repz add BYTE PTR [rbp-0x73ff797a],cl
   14000d699:	test   DWORD PTR [rbp-0x39393100],eax
   14000d69f:	add    al,ah
   14000d6a1:	xlat   BYTE PTR ds:[rbx]
   14000d6a2:	xlat   BYTE PTR ds:[rbx]
   14000d6a3:	add    BYTE PTR [rax-0x6cff6d6e],bl
   14000d6a9:	lea    ecx,[rbp-0x64645f00]
   14000d6af:	add    BYTE PTR [rdx-0x67ff7a7b],cl
   14000d6b5:	xchg   ebx,eax
   14000d6b6:	xchg   ebx,eax
   14000d6b7:	add    BYTE PTR [rsi+0x7c009191],dl
   14000d6bd:	js     0x14000d737
   14000d6bf:	add    BYTE PTR [rbx+0x77],bh
   14000d6c2:	ja     0x14000d6c4
   14000d6c4:	jb     0x14000d734
   14000d6c6:	outs   dx,BYTE PTR ds:[rsi]
   14000d6c7:	add    bh,bh
   14000d6c9:	clc    
   14000d6ca:	clc    
   14000d6cb:	add    BYTE PTR [rsi-0x6dff5657],ch
   14000d6d1:	mov    cs,WORD PTR [rsi+0x7d7d8100]
   14000d6d7:	add    BYTE PTR [rbp-0x69ff4748],bh
   14000d6dd:	xchg   edx,eax
   14000d6de:	xchg   edx,eax
   14000d6df:	add    BYTE PTR [rbp-0x6bff6e6f],dl
   14000d6e5:	nop
   14000d6e6:	nop
   14000d6e7:	add    BYTE PTR [rcx+rcx*4-0x7d7aff77],cl
   14000d6ee:	(bad)  
   14000d6ef:	add    bh,bh
   14000d6f1:	sti    
   14000d6f2:	sti    
   14000d6f3:	add    BYTE PTR [rbx-0x5fff4f50],dh
   14000d6f9:	sahf   
   14000d6fa:	sahf   
   14000d6fb:	add    BYTE PTR [rbp-0x6dff6c6d],dl
   14000d701:	nop
   14000d702:	nop
   14000d703:	add    BYTE PTR [rdi-0x23ff7273],cl
   14000d709:	fcmovu st,st(2)
   14000d70b:	add    al,al
   14000d70d:	mov    esi,0xbfc000be
   14000d712:	mov    edi,0x89898a00
   14000d717:	add    cl,bh
   14000d719:	mov    edx,0x93ab00b7
   14000d71e:	lea    eax,[rax]
   14000d720:	(bad)
   14000d724:	mov    ecx,0xc6001359
   14000d729:	outs   dx,BYTE PTR ds:[rsi]
   14000d72a:	sub    DWORD PTR [rax],eax
   14000d72c:	mov    esp,0xd500316e
   14000d731:	pushf  
   14000d732:	ins    BYTE PTR es:[rdi],dx
   14000d733:	add    ah,dl
   14000d735:	jbe    0x14000d74e
   14000d737:	add    dl,dl
   14000d739:	jne    0x14000d755
   14000d73b:	add    al,bl
   14000d73d:	jg     0x14000d764
   14000d73f:	add    cl,bl
   14000d741:	and    BYTE PTR [rsi],0x0
   14000d744:	fiadd  DWORD PTR [rcx-0x7a24ffd7]
   14000d74a:	cs add ah,bl
   14000d74d:	xchg   BYTE PTR [rax],dh
   14000d74f:	add    al,ah
   14000d751:	lea    edi,[rdx]
   14000d753:	add    dl,ah
   14000d755:	xchg   edx,eax
   14000d756:	add    r11b,spl
   14000d759:	xchg   esp,eax
   14000d75a:	rex.RX add dl,r12b
   14000d75d:	xchg   ebp,eax
   14000d75e:	rex.WB add r12b,spl
   14000d761:	(bad)  
   14000d762:	rex.WRXB add r9b,r13b
   14000d765:	lahf   
   14000d766:	push   rbp
   14000d767:	add    dl,ch
   14000d769:	lahf   
   14000d76a:	push   rsi
   14000d76b:	add    cl,ch
   14000d76d:	movabs eax,ds:0xabef005ba3eb0057
   14000d776:	imul   eax,DWORD PTR [rax],0x6aadef
   14000d77c:	repnz mov bl,0x73
   14000d77f:	add    ch,dh
   14000d781:	mov    eax,0xbcf7007a
   14000d786:	add    DWORD PTR [rax],0x3e90de
   14000d78c:	loop   0x14000d72c
   14000d78e:	push   rdx
   14000d78f:	add    ah,dh
   14000d791:	mov    edx,0xc1f9007c
   14000d796:	xchg   DWORD PTR [rax],eax
   14000d798:	cli    
   14000d799:	(bad)  
   14000d79a:	mov    WORD PTR [rax],es
   14000d79c:	sti    
   14000d79d:	(bad)  
   14000d79e:	nop
   14000d79f:	add    ch,bh
   14000d7a1:	retf   
   14000d7a2:	xchg   ebp,eax
   14000d7a3:	add    ch,bh
   14000d7a5:	(bad)  
   14000d7a6:	cdq    
   14000d7a7:	add    dl,bh
   14000d7a9:	retf   
   14000d7aa:	xchg   esp,eax
   14000d7ab:	add    bh,bh
   14000d7ad:	shl    DWORD PTR [rax+0x7abaea00],cl
   14000d7b3:	add    bh,ah
   14000d7b5:	mov    esi,0xd9ff0088
   14000d7ba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d7bb:	add    dh,bh
   14000d7bd:	fldenv [rbp-0x56230100]
   14000d7c3:	add    ah,ch
   14000d7c5:	int3   
   14000d7c6:	xchg   edi,eax
   14000d7c7:	add    ch,dh
   14000d7c9:	rcr    DWORD PTR [rcx-0x4f1d0100],cl
   14000d7cf:	add    bh,bh
   14000d7d1:	out    0xb2,al
   14000d7d3:	add    bh,bh
   14000d7d5:	out    0xb4,eax
   14000d7d7:	add    bh,bh
   14000d7d9:	out    dx,al
   14000d7da:	mov    ebx,0xbff2ff00
   14000d7df:	add    ah,bh
   14000d7e1:	repnz leave 
   14000d7e3:	add    bh,bh
   14000d7e5:	(bad)  
   14000d7e6:	jmp    0x14000d7e8
   14000d7e8:	xchg   edi,eax
   14000d7e9:	cwde   
   14000d7ea:	xchg   edi,eax
   14000d7eb:	add    dh,dl
   14000d7ed:	(bad)  
   14000d7ee:	xlat   BYTE PTR ds:[rbx]
   14000d7ef:	add    al,dl
   14000d7f1:	rcl    cl,1
   14000d7f3:	add    ah,bl
   14000d7f5:	(bad)  
   14000d7f7:	add    dl,bl
   14000d7f9:	fcmovu st,st(2)
   14000d7fb:	add    cl,bl
   14000d7fd:	(bad)  
   14000d7ff:	add    bh,dl
   14000d801:	xlat   BYTE PTR ds:[rbx]
   14000d802:	xlat   BYTE PTR ds:[rbx]
   14000d803:	add    ch,dl
   14000d805:	(bad)  
   14000d806:	(bad)  
   14000d807:	add    bl,dl
   14000d809:	rcl    ebx,cl
   14000d80b:	add    dl,dl
   14000d80d:	rcl    dl,cl
   14000d80f:	add    bh,cl
   14000d811:	iret   
   14000d812:	iret   
   14000d813:	add    dh,cl
   14000d815:	(bad)  
   14000d816:	(bad)  
   14000d817:	add    ah,cl
   14000d819:	int3   
   14000d81a:	int3   
   14000d81b:	add    dl,cl
   14000d81d:	retf   0xca
   14000d820:	enter  0xc8c8,0x0
   14000d824:	mov    edi,0xc5c500c7
   14000d82a:	(bad)
   14000d82d:	rol    ecx,0x0
   14000d830:	rol    al,0xc0
   14000d833:	add    BYTE PTR [rdi-0x41ff4041],bh
   14000d839:	mov    esi,0xbdbd00be
   14000d83e:	mov    ebp,0xbbbbbb00
   14000d843:	add    BYTE PTR [rdx-0x48ff4546],bh
   14000d849:	mov    bh,0xb7
   14000d84b:	add    BYTE PTR [rsp+rsi*4-0x4c4cff4c],dh
   14000d852:	mov    bl,0x0
   14000d854:	mov    dl,0xb2
   14000d856:	mov    dl,0x0
   14000d858:	mov    cl,0xb1
   14000d85a:	mov    cl,0x0
   14000d85c:	lods   eax,DWORD PTR ds:[rsi]
   14000d85d:	lods   eax,DWORD PTR ds:[rsi]
   14000d85e:	lods   eax,DWORD PTR ds:[rsi]
   14000d85f:	add    BYTE PTR [rdx-0x56ff5556],ch
   14000d865:	test   eax,0xa7a700a9
   14000d86a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d86b:	add    BYTE PTR [rbp-0x5bff5a5b],ah
   14000d871:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d872:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d873:	add    BYTE PTR [rbx-0x5fff5c5d],ah
   14000d879:	movabs al,ds:0x9d9d009e9e9e00a0
   14000d882:	popf   
   14000d883:	add    BYTE PTR [rbx-0x65ff6465],bl
   14000d889:	(bad)  
   14000d88a:	(bad)  
   14000d88b:	add    BYTE PTR [rsi-0x6aff696a],dl
   14000d891:	xchg   ebp,eax
   14000d892:	xchg   ebp,eax
   14000d893:	add    BYTE PTR [rcx-0x72ff6e6f],dl
   14000d899:	lea    ecx,[rbp-0x75757600]
   14000d89f:	add    BYTE PTR [rax-0x7aff7778],cl
   14000d8a5:	test   DWORD PTR [rbp-0x7b7b7c00],eax
   14000d8ab:	add    BYTE PTR [rdx-0x7fff7d7e],al
   14000d8b1:	add    BYTE PTR [rax+0x7f7f7f00],0x0
   14000d8b8:	jle    0x14000d938
   14000d8ba:	jle    0x14000d8bc
   14000d8bc:	jl     0x14000d93a
   14000d8be:	jl     0x14000d8c0
   14000d8c0:	jp     0x14000d93c
   14000d8c2:	jp     0x14000d8c4
	...
   14000d918:	add    BYTE PTR [rax],al
   14000d91a:	add    BYTE PTR [rbx],al
   14000d91c:	add    eax,DWORD PTR [rbx]
	...
   14000d936:	add    BYTE PTR [rax],al
   14000d938:	add    BYTE PTR [rdx],al
   14000d93a:	add    dh,dl
   14000d93c:	sub    al,0x32
   14000d93e:	add    eax,DWORD PTR [rbx]
   14000d940:	add    eax,DWORD PTR [rax]
	...
   14000d956:	add    BYTE PTR [rax],al
   14000d958:	add    dh,dl
   14000d95a:	in     eax,0xf2
   14000d95c:	sub    al,0x29
   14000d95e:	(bad)  
   14000d95f:	and    al,0x28
   14000d961:	add    eax,DWORD PTR [rbx]
   14000d963:	add    eax,DWORD PTR [rax]
	...
   14000d975:	add    BYTE PTR [rax],al
   14000d977:	add    BYTE PTR [rdx],al
   14000d979:	repnz in eax,0xf1
   14000d97c:	sub    al,0x29
   14000d97e:	(bad)  
   14000d97f:	and    al,0x24
   14000d981:	and    ebx,DWORD PTR [rdi]
   14000d983:	and    BYTE PTR [rbx],al
   14000d985:	add    eax,DWORD PTR [rbx]
	...
   14000d997:	add    BYTE PTR [rdx],al
   14000d999:	out    dx,eax
   14000d99a:	in     al,0xf0
   14000d99c:	sub    al,0x2f
   14000d99e:	cmp    DWORD PTR [rdi],esp
   14000d9a0:	and    al,0x23
   14000d9a2:	(bad)  
   14000d9a3:	and    al,0x1c
   14000d9a5:	sbb    ebx,DWORD PTR [rax]
   14000d9a7:	add    eax,DWORD PTR [rbx]
   14000d9a9:	add    eax,DWORD PTR [rax]
	...
   14000d9b7:	add    BYTE PTR [rdx],al
   14000d9b9:	in     al,dx
   14000d9ba:	loop   0x14000d9aa
   14000d9bc:	sub    al,0x30
   14000d9be:	ds pop rsi
   14000d9c0:	pop    rdx
   14000d9c1:	xor    BYTE PTR [r15],r11b
   14000d9c4:	sbb    al,0x1b
   14000d9c6:	sbb    BYTE PTR [rax],bl
   14000d9c8:	(bad)  
   14000d9c9:	(bad)  
   14000d9ca:	add    eax,DWORD PTR [rbx]
	...
   14000d9d8:	add    ch,dl
   14000d9da:	loopne 0x14000d9c9
   14000d9dc:	sub    al,0x26
   14000d9de:	adc    ecx,DWORD PTR [rdi]
   14000d9e0:	adc    BYTE PTR [rip+0x3d54593c],ah        # 0x17d553322
   14000d9e6:	and    bl,BYTE PTR [rax]
   14000d9e8:	(bad)  
   14000d9e9:	(bad)  
   14000d9ea:	adc    al,0x14
   14000d9ec:	add    eax,DWORD PTR [rax]
	...
   14000d9f6:	add    BYTE PTR [rax],al
   14000d9f8:	add    ch,al
   14000d9fa:	fucomip st,st(3)
   14000d9fc:	xor    DWORD PTR [rsi],esp
   14000d9fe:	sbb    DWORD PTR [rbx],edx
   14000da00:	femms  
   14000da02:	or     ecx,DWORD PTR [rcx]
   14000da04:	or     eax,0x4c58401e
   14000da09:	xor    eax,0x31416
	...
   14000da16:	add    BYTE PTR [rax],al
   14000da18:	add    ah,bh
   14000da1a:	fsub   st(2),st
   14000da1c:	xor    DWORD PTR [rbx],ebp
   14000da1e:	and    DWORD PTR [rcx],ebx
   14000da20:	adc    ecx,DWORD PTR [rdi]
   14000da22:	(bad)  
   14000da23:	or     ecx,DWORD PTR [rcx]
   14000da25:	or     BYTE PTR [rdi],al
   14000da27:	(bad)  
   14000da28:	or     bl,BYTE PTR [rip+0x31658]        # 0x14003f086
	...
   14000da36:	add    BYTE PTR [rax],al
   14000da38:	add    ah,ch
   14000da3a:	fiadd  DWORD PTR [rdi+0x212a2e33]
   14000da40:	sbb    DWORD PTR [rbx],edx
   14000da42:	femms  
   14000da44:	or     ecx,DWORD PTR [rcx]
   14000da46:	or     BYTE PTR [rdi],al
   14000da48:	(bad)  
   14000da49:	add    eax,0x3174c
	...
   14000da56:	add    BYTE PTR [rax],al
   14000da58:	add    ah,bl
   14000da5a:	fnstcw WORD PTR [rsi+rsi*1+0x35]
   14000da5e:	sub    eax,0x1319212a
   14000da63:	femms  
   14000da65:	or     ecx,DWORD PTR [rcx]
   14000da67:	or     BYTE PTR [rdi],al
   14000da69:	or     al,0x4f
   14000da6b:	sbb    BYTE PTR [rbx],al
	...
   14000da75:	add    BYTE PTR [rax],al
   14000da77:	add    BYTE PTR [rdx],al
   14000da79:	loopne 0x14000da53
   14000da7b:	xor    DWORD PTR [rdi],0x38
   14000da7e:	xor    al,0x2d
   14000da80:	sub    ah,BYTE PTR [rcx]
   14000da82:	sbb    DWORD PTR [rbx],edx
   14000da84:	femms  
   14000da86:	or     ecx,DWORD PTR [rcx]
   14000da88:	or     BYTE PTR [rcx],dl
   14000da8a:	push   rsp
   14000da8b:	sbb    eax,DWORD PTR [rbx]
	...
   14000da95:	add    BYTE PTR [rax],al
   14000da97:	add    BYTE PTR [rdx],al
   14000da99:	(bad)  
   14000da9b:	(bad)  
   14000da9c:	cmp    bh,BYTE PTR [rsi]
   14000da9e:	cmp    esi,DWORD PTR [rbp*1+0x1319212a]
   14000daa5:	femms  
   14000daa7:	or     ecx,DWORD PTR [rcx]
   14000daa9:	adc    dl,BYTE PTR [rdx+0x1c]
   14000daac:	add    eax,DWORD PTR [rax]
	...
   14000dab6:	add    BYTE PTR [rax],al
   14000dab8:	add    bl,bl
   14000daba:	(bad)  
   14000dabb:	cmp    DWORD PTR [rdi],0x343b4148
   14000dac1:	sub    eax,0x1319212a
   14000dac6:	femms  
   14000dac8:	or     edx,DWORD PTR [rip+0x31f5a]        # 0x14003fa28
	...
   14000dad6:	add    BYTE PTR [rax],al
   14000dad8:	add    bl,cl
   14000dada:	shl    BYTE PTR [rsi+0x43],cl
   14000dadd:	rex.WRX
   14000dade:	rex.WB
   14000dadf:	cmp    esi,DWORD PTR [rbp*1+0x1319212a]
   14000dae7:	femms  
   14000dae9:	sbb    dl,BYTE PTR [rbx+0x23]
   14000daec:	add    eax,DWORD PTR [rax]
	...
   14000daf6:	add    BYTE PTR [rax],al
   14000daf8:	add    dl,bh
   14000dafa:	shr    BYTE PTR [rsp+rax*2+0x5c],1
   14000dafe:	push   rcx
   14000daff:	rex.WB
   14000db00:	cmp    esi,DWORD PTR [rbp*1+0x1319212a]
   14000db08:	bndldx bnd2,[rbp+0x24]
   14000db0c:	add    eax,DWORD PTR [rax]
	...
   14000db16:	add    BYTE PTR [rax],al
   14000db18:	add    dl,ah
   14000db1a:	int    0x7b
   14000db1c:	rex.RXB (bad) 
   14000db1e:	pop    rbx
   14000db1f:	push   rcx
   14000db20:	rex.WB xor al,0x8e
   14000db23:	mov    ecx,DWORD PTR [rbx+0x13888b8b]
   14000db29:	and    eax,0x32742
	...
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	add    dl,dl
   14000db3a:	int3   
   14000db3b:	jns    0x14000db87
   14000db3d:	data16 (bad) 
   14000db3f:	pop    rbx
   14000db40:	push   rcx
   14000db41:	cmp    rcx,QWORD PTR [r14+0x49ea6a3]
   14000db48:	add    al,0x4
   14000db4a:	cmp    DWORD PTR [rcx],ebp
   14000db4c:	add    eax,DWORD PTR [rax]
	...
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	add    cl,dh
   14000db5a:	retf   0x506f
   14000db5d:	je     0x14000dbc5
   14000db5f:	(bad)  
   14000db60:	pop    rbx
   14000db61:	push   rcx
   14000db62:	cmp    rcx,QWORD PTR [r14-0x675f5348]
   14000db69:	xchg   edx,eax
   14000db6a:	mov    eax,DWORD PTR [rsp+rax*1]
	...
   14000db75:	add    BYTE PTR [rax],al
   14000db77:	add    BYTE PTR [rdx],al
   14000db79:	int3   
   14000db7a:	enter  0x5f67,0x7e
   14000db7e:	je     0x14000dbe6
   14000db80:	(bad)  
   14000db81:	pop    rbx
   14000db82:	push   rcx
   14000db83:	cmp    rcx,QWORD PTR [r14-0x5e574f72]
   14000db8a:	(bad)  
   14000db8b:	xchg   ebp,eax
   14000db8c:	nop
   14000db8d:	add    al,0x4
   14000db8f:	add    al,0x0
   14000db91:	add    BYTE PTR [rax],al
   14000db93:	add    BYTE PTR [rax],al
   14000db95:	add    BYTE PTR [rax],al
   14000db97:	add    BYTE PTR [rdx],al
   14000db99:	leave  
   14000db9a:	(bad)  
   14000db9b:	push   0x747e0164
   14000dba0:	data16 (bad) 
   14000dba2:	pop    rbx
   14000dba3:	push   rcx
   14000dba4:	rex.WB
   14000dba5:	cmp    ecx,DWORD PTR [r14-0x5d554d72]
   14000dbac:	sahf   
   14000dbad:	xchg   edi,eax
   14000dbae:	xchg   esp,eax
   14000dbaf:	pop    QWORD PTR [rsp+rax*1]
   14000dbb2:	add    al,0x0
   14000dbb4:	add    BYTE PTR [rax],al
   14000dbb6:	add    BYTE PTR [rax],al
   14000dbb8:	add    al,bh
   14000dbba:	(bad)
   14000dbbd:	add    DWORD PTR [rcx],eax
   14000dbbf:	jle    0x14000dc35
   14000dbc1:	data16 (bad) 
   14000dbc3:	pop    rbx
   14000dbc4:	push   rcx
   14000dbc5:	rex.WB
   14000dbc6:	cmp    ecx,DWORD PTR [r10-0x564d7172]
   14000dbcd:	movabs ds:0x4049196979ca0,al
   14000dbd6:	add    BYTE PTR [rax],al
   14000dbd8:	add    al,ah
   14000dbda:	ret    
   14000dbdb:	outs   dx,BYTE PTR ds:[rsi]
   14000dbdc:	jo     0x14000dbdf
   14000dbde:	add    DWORD PTR [rcx],eax
   14000dbe0:	jle    0x14000dc56
   14000dbe2:	data16 (bad) 
   14000dbe4:	pop    rbx
   14000dbe5:	push   rcx
   14000dbe6:	rex.WB
   14000dbe7:	cmp    ecx,DWORD PTR [r14-0x77]
   14000dbeb:	mov    ?,WORD PTR [rsi-0x605c5550]
   14000dbf1:	sahf   
   14000dbf2:	fwait
   14000dbf3:	popf   
   14000dbf4:	cdq    
   14000dbf5:	add    al,0x0
   14000dbf7:	add    BYTE PTR [rdx],al
   14000dbf9:	ret    0x77c1
   14000dbfc:	jp     0x14000dbff
   14000dbfe:	add    DWORD PTR [rcx],eax
   14000dc00:	add    DWORD PTR [rsi+0x74],edi
   14000dc03:	data16 (bad) 
   14000dc05:	pop    rbx
   14000dc06:	push   rcx
   14000dc07:	rex.WB
   14000dc08:	pop    r13
   14000dc0a:	rex.WXB add rcx,QWORD PTR [r13-0x544e484d]
   14000dc11:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dc12:	sahf   
   14000dc13:	fwait
   14000dc14:	popf   
   14000dc15:	cdq    
   14000dc16:	add    al,0x0
   14000dc18:	add    bh,BYTE PTR [rdi-0x7a888e41]
   14000dc1e:	test   BYTE PTR [rcx],al
   14000dc20:	add    DWORD PTR [rcx],eax
   14000dc22:	jle    0x14000dc98
   14000dc24:	data16 (bad) 
   14000dc26:	pop    rbx
   14000dc27:	push   rcx
   14000dc28:	rex.WB pop r13
   14000dc2a:	add    ecx,DWORD PTR ss:[rbx+rdx*4-0x494b5066]
   14000dc32:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dc33:	test   eax,0x4a9ad
   14000dc38:	add    bh,BYTE PTR [rdi+0x7372bcc0]
   14000dc3e:	movsxd edi,DWORD PTR gs:[rbp+0x64]
   14000dc42:	js     0x14000dcad
   14000dc44:	push   0x66
   14000dc46:	(bad)  
   14000dc47:	pop    rbx
   14000dc48:	push   rcx
   14000dc49:	imul   esi,DWORD PTR [rdi],0x4040003
   14000dc4f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000dc50:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dc51:	mov    ah,0xb6
   14000dc53:	mov    ecx,0x4b5ba
   14000dc58:	add    dl,dh
   14000dc5a:	sar    BYTE PTR [rbp-0x7f287942],0x7a
   14000dc61:	push   0x4a50575f
   14000dc66:	rex.WRB
   14000dc67:	rex.WXB push r13
   14000dc69:	(bad)  
   14000dc6a:	cmp    al,BYTE PTR [rbx]
   14000dc6c:	add    BYTE PTR [rax],al
   14000dc6e:	add    BYTE PTR [rsp+rax*1],al
   14000dc71:	scas   al,BYTE PTR es:[rdi]
   14000dc72:	mov    ecx,0x4b3bbba
   14000dc77:	add    BYTE PTR [rax],al
   14000dc79:	add    al,BYTE PTR [rdx]
   14000dc7b:	add    al,BYTE PTR [rdx]
   14000dc7d:	jge    0x14000dc59
   14000dc7f:	ror    eax,cl
   14000dc81:	enter  0xcbc9,0x7f
   14000dc85:	jne    0x14000dcf4
   14000dc87:	(bad)  
   14000dc88:	push   rsi
   14000dc89:	rex.RX (bad) 
   14000dc8b:	add    eax,DWORD PTR [rax]
   14000dc8d:	add    BYTE PTR [rax],al
   14000dc8f:	add    BYTE PTR [rax],al
   14000dc91:	add    al,0x4
   14000dc93:	add    al,0x4
   14000dc95:	add    al,0x0
   14000dc97:	add    BYTE PTR [rax],al
   14000dc99:	add    BYTE PTR [rax],al
   14000dc9b:	add    BYTE PTR [rax],al
   14000dc9d:	add    al,BYTE PTR [rdx]
   14000dc9f:	add    al,BYTE PTR [rdx]
   14000dca1:	add    bl,ah
   14000dca3:	out    0xe9,al
   14000dca5:	in     eax,0xe1
   14000dca7:	iret   
   14000dca8:	rcl    ebx,1
   14000dcaa:	in     eax,0x3
	...
   14000dcc0:	add    BYTE PTR [rax],al
   14000dcc2:	add    al,BYTE PTR [rdx]
   14000dcc4:	add    al,BYTE PTR [rdx]
   14000dcc6:	add    dl,bh
   14000dcc8:	xlat   BYTE PTR ds:[rbx]
   14000dcc9:	fucom  st(5)
   14000dccb:	add    eax,DWORD PTR [rax]
	...
   14000dce5:	add    BYTE PTR [rax],al
   14000dce7:	add    al,BYTE PTR [rdx]
   14000dce9:	add    al,BYTE PTR [rdx]
	...
   14000dcf7:	add    bh,bh
   14000dcf9:	(bad)  
   14000dcfa:	(bad)  
   14000dcfb:	jmp    rbx
   14000dcfd:	(bad)  
   14000dcfe:	(bad)  
   14000dcff:	inc    DWORD PTR [rax+0xffff7f]
   14000dd05:	ud0    edi,edi
   14000dd08:	add    BYTE PTR [rcx],al
   14000dd0a:	(bad)  
   14000dd0b:	inc    DWORD PTR [rax]
   14000dd0d:	add    BYTE PTR [rdi],bh
   14000dd0f:	inc    DWORD PTR [rax]
   14000dd11:	add    BYTE PTR [rdi],cl
   14000dd13:	inc    DWORD PTR [rax]
   14000dd15:	add    BYTE PTR [rdi],al
   14000dd17:	inc    DWORD PTR [rax]
   14000dd19:	add    BYTE PTR [rdi],al
   14000dd1b:	inc    DWORD PTR [rax]
   14000dd1d:	add    BYTE PTR [rdi],al
   14000dd1f:	inc    DWORD PTR [rax]
   14000dd21:	add    BYTE PTR [rdi],al
   14000dd23:	inc    DWORD PTR [rax]
   14000dd25:	add    BYTE PTR [rdi],al
   14000dd27:	inc    DWORD PTR [rax]
   14000dd29:	add    BYTE PTR [rdi],al
   14000dd2b:	inc    DWORD PTR [rax]
   14000dd2d:	add    BYTE PTR [rdi],al
   14000dd2f:	inc    DWORD PTR [rax]
   14000dd31:	add    BYTE PTR [rdi],al
   14000dd33:	inc    DWORD PTR [rax]
   14000dd35:	add    BYTE PTR [rdi],al
   14000dd37:	inc    DWORD PTR [rax]
   14000dd39:	add    BYTE PTR [rdi],al
   14000dd3b:	inc    DWORD PTR [rax]
   14000dd3d:	add    BYTE PTR [rdi],al
   14000dd3f:	inc    DWORD PTR [rax]
   14000dd41:	add    BYTE PTR [rdi],al
   14000dd43:	inc    DWORD PTR [rax]
   14000dd45:	add    BYTE PTR [rdi],al
   14000dd47:	inc    DWORD PTR [rax]
   14000dd49:	add    BYTE PTR [rax],al
   14000dd4b:	inc    DWORD PTR [rax]
   14000dd4d:	add    BYTE PTR [rax],al
   14000dd4f:	(bad)  
   14000dd50:	add    BYTE PTR [rax],al
   14000dd52:	add    BYTE PTR [rdi],al
   14000dd54:	add    BYTE PTR [rax],al
   14000dd56:	add    BYTE PTR [rbx],al
   14000dd58:	add    BYTE PTR [rax],al
   14000dd5a:	add    BYTE PTR [rcx],al
   14000dd5c:	add    BYTE PTR [rax],al
   14000dd5e:	add    BYTE PTR [rcx],al
   14000dd60:	add    BYTE PTR [rax],al
   14000dd62:	or     BYTE PTR [rcx],al
   14000dd64:	add    BYTE PTR [rax],al
   14000dd66:	(bad)  
   14000dd67:	add    DWORD PTR [rax-0x77cf100],eax
   14000dd6d:	add    BYTE PTR [rdi],cl
   14000dd6f:	(bad)  
   14000dd70:	inc    eax
   14000dd72:	ud0    edi,edi
   14000dd75:	(bad)  
   14000dd76:	(bad)  
   14000dd77:	jmp    FWORD PTR [rax]
   14000dd79:	add    BYTE PTR [rax],al
   14000dd7b:	add    BYTE PTR [rax],dl
   14000dd7d:	add    BYTE PTR [rax],al
   14000dd7f:	add    BYTE PTR [rax],ah
   14000dd81:	add    BYTE PTR [rax],al
   14000dd83:	add    BYTE PTR [rcx],al
   14000dd85:	add    BYTE PTR [rax],cl
	...
   14000dda3:	add    bh,bh
   14000dda5:	(bad)  
   14000dda6:	inc    DWORD PTR [rax]
   14000dda8:	jo     0x14000de10
   14000ddaa:	push   0xffffffffccc5f300
   14000ddaf:	add    bh,bh
   14000ddb1:	in     eax,dx
   14000ddb2:	out    dx,eax
   14000ddb3:	add    bh,bh
   14000ddb5:	out    dx,eax
   14000ddb6:	icebp  
   14000ddb7:	add    bh,bh
   14000ddb9:	idiv   eax
   14000ddbb:	add    dl,al
   14000ddbd:	mov    al,0xb1
   14000ddbf:	add    bh,bh
   14000ddc1:	rol    esp,0x0
   14000ddc4:	dec    ebx
   14000ddc6:	int    0x0
   14000ddc8:	push   QWORD PTR [rsi-0x2d00ff49]
   14000ddce:	rol    DWORD PTR [rax],cl
   14000ddd0:	jmp    QWORD PTR [rsi-0x5500ff5a]
   14000ddd6:	stos   BYTE PTR es:[rdi],al
   14000ddd7:	add    bh,bh
   14000ddd9:	lods   eax,DWORD PTR ds:[rsi]
   14000ddda:	lods   eax,DWORD PTR ds:[rsi]
   14000dddb:	add    bh,bh
   14000dddd:	mov    ah,0xb4
   14000dddf:	add    bh,bh
   14000dde1:	mov    dh,0xb6
   14000dde3:	add    bh,bh
   14000dde5:	mov    esi,0xbfff00be
   14000ddea:	mov    edi,0xbdbdfd00
   14000ddef:	add    dl,bh
   14000ddf1:	mov    ebx,0xbdfb00bb
   14000ddf6:	mov    ebp,0xbbbbf600
   14000ddfb:	add    bh,bh
   14000ddfd:	(bad)
   14000de00:	idiv   BYTE PTR [rdi-0x440fff41]
   14000de06:	mov    ebx,0xc9c9ff00
   14000de0b:	add    bh,bh
   14000de0d:	int3   
   14000de0e:	int3   
   14000de0f:	add    dl,bl
   14000de11:	scas   al,BYTE PTR es:[rdi]
   14000de12:	scas   al,BYTE PTR es:[rdi]
   14000de13:	add    dh,al
   14000de15:	sahf   
   14000de16:	sahf   
   14000de17:	add    bh,ah
   14000de19:	mov    ebx,0x9abc00bb
   14000de1e:	(bad)  
   14000de1f:	add    cl,al
   14000de21:	lahf   
   14000de22:	lahf   
   14000de23:	add    dl,cl
   14000de25:	test   al,0xa8
   14000de27:	add    bh,bh
   14000de29:	(bad)  
   14000de2a:	(bad)  
   14000de2b:	add    cl,bl
   14000de2d:	mov    dh,0xb6
   14000de2f:	add    bh,al
   14000de31:	test   al,0xa8
   14000de33:	add    ah,al
   14000de35:	stos   DWORD PTR es:[rdi],eax
   14000de36:	stos   DWORD PTR es:[rdi],eax
   14000de37:	add    bh,bh
   14000de39:	loopne 0x14000de1b
   14000de3b:	add    al,cl
   14000de3d:	mov    ch,0xb5
   14000de3f:	add    bh,bh
   14000de41:	in     al,dx
   14000de42:	in     al,dx
   14000de43:	add    ch,bl
   14000de45:	(bad)  
   14000de46:	(bad)  
   14000de47:	add    al,cl
   14000de49:	mov    esi,0xb0b900be
   14000de4e:	mov    al,0x0
   14000de50:	push   rsp
   14000de52:	hlt    
   14000de53:	add    bh,bh
   14000de55:	div    edi
   14000de57:	add    bh,bh
   14000de59:	sti    
   14000de5a:	sti    
   14000de5b:	add    bh,al
   14000de5d:	(bad)  
   14000de5e:	(bad)  
   14000de5f:	add    BYTE PTR [rdx-0x2eff5f60],ah
   14000de65:	iret   
   14000de66:	iret   
   14000de67:	add    BYTE PTR [rbx-0xff4e4f],dh
   14000de6d:	(bad)  
   14000de6e:	inc    BYTE PTR [rax]
   14000de70:	sar    BYTE PTR [rdi-0x2b05ff41],0xd3
   14000de77:	add    cl,bh
   14000de79:	(bad)  
   14000de7b:	add    ah,bh
   14000de7d:	(bad)  
   14000de7f:	add    bl,al
   14000de81:	push   0x22
   14000de83:	add    bh,bh
   14000de85:	mov    cl,0x69
   14000de87:	add    dh,bl
   14000de89:	mov    edi,DWORD PTR [rip+0x5da7ee00]        # 0x19da8cc8f
   14000de8f:	add    bh,bh
   14000de91:	iret   
   14000de92:	xchg   ebp,eax
   14000de93:	add    al,ah
   14000de95:	rcl    DWORD PTR [rbx+0x56795000],0x0
   14000de9c:	add    BYTE PTR [rax],al
   14000de9e:	add    BYTE PTR [rax],al
   14000dea0:	or     dl,ah
   14000dea2:	pop    rdi
   14000dea3:	add    BYTE PTR [rdi],bh
   14000dea5:	test   BYTE PTR [rsi+0x0],bl
   14000dea8:	pushf  
   14000dea9:	lahf   
   14000deaa:	movabs eax,ds:0xffffff00
	...
   14000e1af:	add    BYTE PTR [rax],al
   14000e1b1:	add    al,BYTE PTR [rdx]
   14000e1b3:	add    al,BYTE PTR [rdx]
   14000e1b5:	add    al,BYTE PTR [rax]
	...
   14000e1bf:	add    BYTE PTR [rax],al
   14000e1c1:	rex.X xor BYTE PTR [rdi],bl
   14000e1c4:	and    esp,DWORD PTR [rcx]
   14000e1c6:	add    al,BYTE PTR [rdx]
   14000e1c8:	add    al,BYTE PTR [rdx]
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	add    BYTE PTR [rax],al
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	add    BYTE PTR [rdx+0x34],al
   14000e1d3:	sbb    eax,0x19161517
   14000e1d8:	(bad)  
   14000e1d9:	sbb    al,0x2
   14000e1db:	add    BYTE PTR [rax],al
   14000e1dd:	add    BYTE PTR [rax],al
   14000e1df:	add    BYTE PTR [rax],al
   14000e1e1:	rex.X xor al,0x20
   14000e1e4:	sbb    edx,DWORD PTR [rdx]
   14000e1e6:	femms  
   14000e1e8:	or     al,0x11
   14000e1ea:	add    al,BYTE PTR [rax]
   14000e1ec:	add    BYTE PTR [rax],al
   14000e1ee:	add    BYTE PTR [rax],al
   14000e1f0:	add    BYTE PTR [rdx+0x34],al
   14000e1f3:	and    al,0x22
   14000e1f5:	sbb    dl,BYTE PTR [rcx]
   14000e1f7:	adc    BYTE PTR [rip+0x214],cl        # 0x14000e411
   14000e1fd:	add    BYTE PTR [rax],al
   14000e1ff:	add    BYTE PTR [rax],al
   14000e201:	rex.X xor al,0x25
   14000e204:	or     ecx,DWORD PTR es:[rcx]
   14000e207:	or     BYTE PTR [rdx],cl
   14000e209:	sbb    BYTE PTR [rdx],al
   14000e20b:	add    BYTE PTR [rax],al
   14000e20d:	add    BYTE PTR [rax],al
   14000e20f:	add    BYTE PTR [rax],al
   14000e211:	rex.X xor al,0x27
   14000e214:	sub    BYTE PTR [rip+0x3133a3a],dh        # 0x143141c54
   14000e21a:	add    al,BYTE PTR [rax]
   14000e21c:	add    BYTE PTR [rax],al
   14000e21e:	add    BYTE PTR [rax],al
   14000e220:	add    BYTE PTR [rdx+0x34],al
   14000e223:	sub    al,BYTE PTR [rsi]
   14000e225:	cmp    bh,BYTE PTR ss:[rdx+rdi*1]
   14000e229:	cmp    al,BYTE PTR [rdx]
   14000e22b:	add    BYTE PTR [rax],al
   14000e22d:	add    BYTE PTR [rax],al
   14000e22f:	add    BYTE PTR [rax],al
   14000e231:	rex.X xor al,0x2f
   14000e234:	xor    eax,DWORD PTR [rdi+rsi*1]
   14000e237:	cmp    bh,BYTE PTR [rsp+rdi*1]
   14000e23a:	cmp    BYTE PTR [rax],bh
   14000e23c:	cmp    BYTE PTR [rax],al
   14000e23e:	add    BYTE PTR [rax],al
   14000e240:	add    BYTE PTR [rdx+0x34],al
   14000e243:	xor    DWORD PTR [rcx],eax
   14000e245:	sub    eax,0x3a393704
   14000e24a:	cmp    al,0x3c
   14000e24c:	cmp    edi,DWORD PTR [rax]
   14000e24e:	cmp    BYTE PTR [rax],al
   14000e250:	add    BYTE PTR [rdx+0x34],al
   14000e253:	xor    dh,BYTE PTR [rdx]
   14000e255:	xor    ch,BYTE PTR [rsi]
   14000e257:	sub    al,0x5
   14000e259:	cmp    eax,0x3c3c3838
   14000e25e:	cmp    al,0x38
   14000e260:	add    BYTE PTR [rdx+0x34],al
   14000e263:	xor    al,0x34
   14000e265:	xor    al,0x2b
   14000e267:	xor    dh,BYTE PTR [rdx]
   14000e269:	(bad)  
   14000e26a:	add    BYTE PTR ds:[rax],bh
   14000e26d:	cmp    BYTE PTR [rax],bh
   14000e26f:	cmp    BYTE PTR [rax],al
   14000e271:	add    BYTE PTR [rdx+0x42],al
   14000e274:	rex.X
   14000e275:	rex.X sub DWORD PTR [rcx],ebp
   14000e278:	sub    DWORD PTR [rcx],ebp
   14000e27a:	add    BYTE PTR [r8],al
	...
   14000e285:	add    BYTE PTR [rdx+0x42],al
   14000e288:	rex.X
   14000e289:	rex.X
   14000e28a:	rex.X add BYTE PTR [rax],al
	...
   14000e29d:	add    BYTE PTR [rax],al
   14000e29f:	add    bh,bh
   14000e2a1:	(bad)  
   14000e2a2:	fucomip st,st(3)
   14000e2a4:	cmp    edi,0x19
   14000e2a7:	adc    eax,DWORD PTR [rax-0x7ff6f4c1]
   14000e2ad:	(bad)  
   14000e2ae:	rex pop rax
   14000e2b0:	sbb    BYTE PTR [rdi],0x16
   14000e2b3:	adc    al,0x80
   14000e2b5:	(bad)  
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	sbb    BYTE PTR [rdi],0x0
   14000e2bb:	add    BYTE PTR [rax-0x7fffffe1],al
   14000e2c1:	(bad)  
   14000e2c2:	fsub   st(2),st
   14000e2c4:	add    BYTE PTR [rdi],0x21
   14000e2c7:	sbb    DWORD PTR [rax-0x7ff4f1ff],eax
   14000e2cd:	add    BYTE PTR [rdi],al
   14000e2cf:	(bad)  
   14000e2d0:	adc    BYTE PTR [rax],0x58
   14000e2d3:	(bad)  
   14000e2d4:	rcr    BYTE PTR [rdi],0x0
   14000e2d7:	add    ah,bh
   14000e2d9:	(bad)  
   14000e2da:	add    BYTE PTR [rax],al
   14000e2dc:	(bad)  
   14000e2dd:	inc    DWORD PTR [rax]
   14000e2df:	add    BYTE PTR [rax],ch
   14000e2e1:	add    BYTE PTR [rax],al
   14000e2e3:	add    BYTE PTR [rax],dh
   14000e2e5:	add    BYTE PTR [rax],al
   14000e2e7:	add    BYTE PTR [rax+0x0],ah
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	add    DWORD PTR [rax],eax
   14000e2ee:	and    BYTE PTR [rax],al
	...
   14000e3dc:	add    BYTE PTR [rax],al
   14000e3de:	add    BYTE PTR [rbx],al
   14000e3e0:	add    BYTE PTR [rax],al
   14000e3e2:	add    BYTE PTR [rdi],al
   14000e3e4:	add    BYTE PTR [rax],al
   14000e3e6:	add    BYTE PTR [rax+rax*1],al
   14000e3e9:	add    BYTE PTR [rax],al
   14000e3eb:	add    DWORD PTR [rax],eax
	...
   14000e495:	add    BYTE PTR [rax],al
   14000e497:	add    al,BYTE PTR [rax]
   14000e499:	add    BYTE PTR [rax],al
   14000e49b:	or     eax,0x27000000
   14000e4a0:	add    BYTE PTR [rax],al
   14000e4a2:	add    BYTE PTR [rdx],bh
   14000e4a4:	add    BYTE PTR [rax],al
   14000e4a6:	add    BYTE PTR [rsi],dh
   14000e4a8:	add    BYTE PTR [rax],al
   14000e4aa:	add    BYTE PTR [rsi],ah
   14000e4ac:	add    BYTE PTR [rax],al
   14000e4ae:	add    BYTE PTR [rdi],dl
   14000e4b0:	add    BYTE PTR [rax],al
   14000e4b2:	add    BYTE PTR [rdx],cl
   14000e4b4:	add    BYTE PTR [rax],al
   14000e4b6:	add    BYTE PTR [rdx],al
	...
   14000e550:	add    BYTE PTR [rax],al
   14000e552:	add    BYTE PTR [rsi],al
   14000e554:	add    BYTE PTR [rax],al
   14000e556:	add    BYTE PTR [rax+rax*1],bl
   14000e559:	add    BYTE PTR [rax],al
   14000e55b:	rex.RX adc eax,0x5981515
   14000e561:	add    eax,0x9805
   14000e566:	add    BYTE PTR [rdi+0x7b000000],cl
   14000e56c:	add    BYTE PTR [rax],al
   14000e56e:	add    BYTE PTR [rdi+0x0],bl
   14000e571:	add    BYTE PTR [rax],al
   14000e573:	rex.XB add BYTE PTR [r8],al
   14000e576:	add    BYTE PTR [rsi],ch
   14000e578:	add    BYTE PTR [rax],al
   14000e57a:	add    BYTE PTR [rsi],bl
   14000e57c:	add    BYTE PTR [rax],al
   14000e57e:	add    BYTE PTR [rax],dl
   14000e580:	add    BYTE PTR [rax],al
   14000e582:	add    BYTE PTR [rsi],al
   14000e584:	add    BYTE PTR [rax],al
   14000e586:	add    BYTE PTR [rcx],al
	...
   14000e610:	add    BYTE PTR [rax],al
   14000e612:	add    BYTE PTR [rdi],dl
   14000e614:	adc    eax,0x2d751515
   14000e619:	sub    eax,0x585bea2d
   14000e61e:	pop    rax
   14000e61f:	dec    DWORD PTR [rdx+0x43]
   14000e622:	rex.XB jmp FWORD PTR [r11]
   14000e625:	sub    ebp,DWORD PTR [rbx]
   14000e627:	repz (bad) 
   14000e629:	(bad)  
   14000e62a:	(bad)  
   14000e62b:	fimul  DWORD PTR [rip+0xb80d0d]        # 0x140b8f33e
   14000e631:	add    BYTE PTR [rax],al
   14000e633:	cwde   
   14000e634:	add    BYTE PTR [rax],al
   14000e636:	add    BYTE PTR [rbp+0x6d000000],al
   14000e63c:	add    BYTE PTR [rax],al
   14000e63e:	add    BYTE PTR [rdx+0x0],dl
   14000e641:	add    BYTE PTR [rax],al
   14000e643:	cmp    DWORD PTR [rax],eax
   14000e645:	add    BYTE PTR [rax],al
   14000e647:	add    BYTE PTR es:[rax],al
   14000e64a:	add    BYTE PTR [rax],bl
   14000e64c:	add    BYTE PTR [rax],al
   14000e64e:	add    BYTE PTR [rax+rax*1],cl
   14000e651:	add    BYTE PTR [rax],al
   14000e653:	add    eax,DWORD PTR [rax]
	...
   14000e6cd:	add    BYTE PTR [rax],al
   14000e6cf:	add    ebp,DWORD PTR [rbx]
   14000e6d1:	sub    ebp,DWORD PTR [rbx]
   14000e6d3:	xchg   edi,eax
   14000e6d4:	rex.RXB
   14000e6d5:	rex.RXB
   14000e6d6:	rex.RXB dec DWORD PTR [r8-0x60007778]
   14000e6dd:	xchg   esp,eax
   14000e6de:	xchg   esp,eax
   14000e6df:	jmp    FWORD PTR [rbp-0x60007576]
   14000e6e5:	add    BYTE PTR [rax+0x6b6b82ff],0xff
   14000e6ec:	pop    rbx
   14000e6ed:	rex.WRXB
   14000e6ee:	rex.WRXB (bad) 
   14000e6f0:	cmp    DWORD PTR [rsi],esi
   14000e6f2:	ss sti 
   14000e6f4:	and    esp,DWORD PTR [rbx]
   14000e6f6:	and    esp,ebp
   14000e6f8:	sbb    BYTE PTR [rax],bl
   14000e6fa:	sbb    ah,cl
   14000e6fc:	add    eax,0xa60505
   14000e701:	add    BYTE PTR [rax],al
   14000e703:	xchg   ecx,eax
   14000e704:	add    BYTE PTR [rax],al
   14000e706:	add    BYTE PTR [rbx+0x0],bh
   14000e709:	add    BYTE PTR [rax],al
   14000e70b:	(bad)  
   14000e70c:	add    BYTE PTR [rax],al
   14000e70e:	add    BYTE PTR [rsi+0x0],al
   14000e711:	add    BYTE PTR [rax],al
   14000e713:	xor    BYTE PTR [rax],al
   14000e715:	add    BYTE PTR [rax],al
   14000e717:	(bad)  
   14000e718:	add    BYTE PTR [rax],al
   14000e71a:	add    BYTE PTR [rdx],dl
   14000e71c:	add    BYTE PTR [rax],al
   14000e71e:	add    BYTE PTR [rdi],al
   14000e720:	add    BYTE PTR [rax],al
   14000e722:	add    BYTE PTR [rcx],al
	...
   14000e78c:	add    BYTE PTR [rax],al
   14000e78e:	add    BYTE PTR [rcx],cl
   14000e790:	rex.RXB
   14000e791:	rex.RXB
   14000e792:	rex.RXB call FWORD PTR [r15-0x62006061]
   14000e799:	popf   
   14000e79a:	popf   
   14000e79b:	jmp    QWORD PTR [rbx-0x53006d6e]
   14000e7a1:	mov    DWORD PTR [rcx-0x75755201],ecx
   14000e7a7:	jmp    FWORD PTR [rdi-0x4e007475]
   14000e7ad:	mov    WORD PTR [rdi+rdi*8-0x72724d],cs
   14000e7b4:	xchg   ebp,eax
   14000e7b5:	ja     0x14000e82e
   14000e7b7:	jmp    FWORD PTR [rbp+0x5b]
   14000e7ba:	pop    rbx
   14000e7bb:	dec    DWORD PTR [rsp+rax*2+0x44]
   14000e7bf:	jmp    FWORD PTR [rbx]
   14000e7c1:	sub    ebp,DWORD PTR [rbx]
   14000e7c3:	repz (bad) 
   14000e7c5:	(bad)  
   14000e7c6:	(bad)  
   14000e7c7:	ficom  DWORD PTR [rcx]
   14000e7c9:	adc    DWORD PTR [rcx],edx
   14000e7cb:	mov    esi,0x9a000000
   14000e7d0:	add    BYTE PTR [rax],al
   14000e7d2:	add    BYTE PTR [rax+0x70000000],cl
   14000e7d8:	add    BYTE PTR [rax],al
   14000e7da:	add    BYTE PTR [rbp+0x0],dl
   14000e7dd:	add    BYTE PTR [rax],al
   14000e7df:	cmp    al,0x0
   14000e7e1:	add    BYTE PTR [rax],al
   14000e7e3:	sub    BYTE PTR [rax],al
   14000e7e5:	add    BYTE PTR [rax],al
   14000e7e7:	sbb    DWORD PTR [rax],eax
   14000e7e9:	add    BYTE PTR [rax],al
   14000e7eb:	or     al,0x0
   14000e7ed:	add    BYTE PTR [rax],al
   14000e7ef:	add    eax,DWORD PTR [rax]
	...
   14000e849:	add    BYTE PTR [rax],al
   14000e84b:	add    BYTE PTR [rip+0x64492d2d],ch        # 0x1a44a157e
   14000e851:	fs jmp QWORD PTR fs:[rcx-0x60005e5f]
   14000e859:	lahf   
   14000e85a:	lahf   
   14000e85b:	jmp    QWORD PTR [rbx-0x55006c6d]
   14000e861:	mov    BYTE PTR [rax-0x76765301],cl
   14000e867:	jmp    FWORD PTR [rbp-0x50007576]
   14000e86d:	mov    ecx,DWORD PTR [rbx-0x73734e01]
   14000e873:	push   QWORD PTR [rbx-0x49007273]
   14000e879:	mov    cs,WORD PTR [rsi-0x71714801]
   14000e87f:	jmp    FWORD PTR [rax-0x77007b7c]
   14000e885:	outs   dx,BYTE PTR ds:[rsi]
   14000e886:	outs   dx,BYTE PTR ds:[rsi]
   14000e887:	call   FWORD PTR [rsi+0x50]
   14000e88a:	push   rax
   14000e88b:	(bad)  
   14000e88c:	cmp    DWORD PTR [rsi],esi
   14000e88e:	ss sti 
   14000e890:	es es es jmp 0x10d1900b0
   14000e898:	or     DWORD PTR [rcx],ecx
   14000e89a:	or     DWORD PTR [rsi-0x6e000000],ebp
   14000e8a0:	add    BYTE PTR [rax],al
   14000e8a2:	add    BYTE PTR [rbp+0x0],bh
   14000e8a5:	add    BYTE PTR [rax],al
   14000e8a7:	add    BYTE PTR fs:[rax],al
   14000e8aa:	add    BYTE PTR [rax+0x0],cl
   14000e8ad:	add    BYTE PTR [rax],al
   14000e8af:	xor    BYTE PTR [rax],al
   14000e8b1:	add    BYTE PTR [rax],al
   14000e8b3:	(bad)  
   14000e8b4:	add    BYTE PTR [rax],al
   14000e8b6:	add    BYTE PTR [rdx],dl
   14000e8b8:	add    BYTE PTR [rax],al
   14000e8ba:	add    BYTE PTR [rdi],al
   14000e8bc:	add    BYTE PTR [rax],al
   14000e8be:	add    BYTE PTR [rcx],al
	...
   14000e90c:	sub    eax,0x6b492d2d
   14000e911:	imul   ebp,DWORD PTR [rbx-0x1],0xffffffa3
   14000e915:	movabs ds:0x93a3ffa1a1a1ffa3,eax
   14000e91e:	xchg   ebx,eax
   14000e91f:	jmp    QWORD PTR [rdi-0x51007879]
   14000e925:	xchg   ecx,eax
   14000e926:	xchg   ecx,eax
   14000e927:	(bad)  
   14000e928:	mov    edx,0xb2ffa4a4
   14000e92d:	xchg   ebx,eax
   14000e92e:	xchg   ebx,eax
   14000e92f:	jmp    FWORD PTR [rdi-0x4e007475]
   14000e935:	mov    WORD PTR [rdi+rdi*8-0x72724d],cs
   14000e93c:	mov    dh,0x8e
   14000e93e:	mov    ?,edi
   14000e940:	mov    bh,0x8e
   14000e942:	mov    ?,edi
   14000e944:	mov    ecx,0xbbff9090
   14000e949:	xchg   ecx,eax
   14000e94a:	xchg   ecx,eax
   14000e94b:	(bad)  
   14000e94c:	mov    ebp,0xa5ff9191
   14000e951:	add    BYTE PTR [rax+0x63637aff],0xff
   14000e958:	rex.WRX
   14000e959:	rex.RB
   14000e95a:	rex.RB jmp FWORD PTR [r11]
   14000e95d:	sub    ebp,DWORD PTR [rbx]
   14000e95f:	repz and DWORD PTR [rcx],esp
   14000e962:	and    esi,ebx
   14000e964:	adc    DWORD PTR [rcx],edx
   14000e966:	adc    DWORD PTR [rdi-0x66000000],edi
   14000e96c:	add    BYTE PTR [rax],al
   14000e96e:	add    BYTE PTR [rax+0x70000000],cl
   14000e974:	add    BYTE PTR [rax],al
   14000e976:	add    BYTE PTR [rbp+0x0],dl
   14000e979:	add    BYTE PTR [rax],al
   14000e97b:	cmp    al,0x0
   14000e97d:	add    BYTE PTR [rax],al
   14000e97f:	(bad)  
   14000e980:	add    BYTE PTR [rax],al
   14000e982:	add    BYTE PTR [rbx],dl
   14000e984:	add    BYTE PTR [rax],al
   14000e986:	add    BYTE PTR [rip+0x0],al        # 0x14000e98c
	...
   14000e9cc:	sub    al,0x2c
   14000e9ce:	sub    al,0x4a
   14000e9d0:	ins    BYTE PTR es:[rdi],dx
   14000e9d1:	ins    BYTE PTR es:[rdi],dx
   14000e9d2:	ins    BYTE PTR es:[rdi],dx
   14000e9d3:	jmp    QWORD PTR [rsp+riz*4-0x5c5c005c]
   14000e9da:	movabs ds:0x8686a6ff9393a3ff,eax
   14000e9e3:	push   QWORD PTR [rsi-0x2200696a]
   14000e9e9:	leave  
   14000e9ea:	leave  
   14000e9eb:	call   rsp
   14000e9ed:	rcl    al,1
   14000e9ef:	dec    esi
   14000e9f1:	mov    edi,0xb6b6c6ff
   14000e9f7:	(bad)  
   14000e9f8:	mov    esi,0xb3ffa5a5
   14000e9fd:	lea    ecx,[rbp-0x71714901]
   14000ea03:	push   QWORD PTR [rdi-0x46007172]
   14000ea09:	nop
   14000ea0a:	nop
   14000ea0b:	(bad)  
   14000ea0c:	mov    ebx,0xbdff9191
   14000ea11:	xchg   ecx,eax
   14000ea12:	xchg   ecx,eax
   14000ea13:	(bad)  
   14000ea14:	mov    edi,0xc1ff9292
   14000ea19:	xchg   esp,eax
   14000ea1a:	xchg   esp,eax
   14000ea1b:	(bad)  
   14000ea1c:	mov    edx,0x8eff8f8f
   14000ea21:	jo     0x14000ea93
   14000ea23:	jmp    FWORD PTR [rbx+0x58]
   14000ea26:	pop    rax
   14000ea27:	(bad)  
   14000ea28:	cmp    dh,BYTE PTR [rdi]
   14000ea2a:	(bad)  
   14000ea2b:	sti    
   14000ea2c:	es es es jmp 0x10d19024c
   14000ea34:	or     DWORD PTR [rcx],ecx
   14000ea36:	or     DWORD PTR [rsi-0x6e000000],ebp
   14000ea3c:	add    BYTE PTR [rax],al
   14000ea3e:	add    BYTE PTR [rdi+0x0],dh
   14000ea41:	add    BYTE PTR [rax],al
   14000ea43:	rex.RX add BYTE PTR [rax],r8b
   14000ea46:	add    BYTE PTR [rbx],dl
	...
   14000ea8c:	sub    ebp,DWORD PTR [rbx]
   14000ea8e:	sub    ecx,DWORD PTR [rsi+rbp*2+0x6e]
   14000ea92:	outs   dx,BYTE PTR ds:[rsi]
   14000ea93:	jmp    QWORD PTR [rsi-0x5b00595a]
   14000ea99:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ea9a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ea9b:	jmp    QWORD PTR [rdx-0x5b006f70]
   14000eaa1:	test   DWORD PTR [rbp-0x6a6a4301],eax
   14000eaa7:	(bad)  
   14000eaa8:	inc    eax
   14000eaaa:	sar    bh,0xff
   14000eaad:	mov    ebp,0xbff7ffbd
   14000eab2:	mov    edi,0xc5c5edff
   14000eab7:	jmp    rbx
   14000eab9:	rcl    ecx,1
   14000eabb:	(bad)  
   14000eabc:	(bad)  
   14000eabe:	fdiv   st(7),st
   14000eac0:	(bad)  
   14000eac1:	retf   
   14000eac2:	retf   
   14000eac3:	dec    ebp
   14000eac5:	mov    ecx,0x9fc0ffb9
   14000eaca:	lahf   
   14000eacb:	(bad)  
   14000eacc:	mov    ecx,0xbbff9090
   14000ead1:	xchg   ecx,eax
   14000ead2:	xchg   ecx,eax
   14000ead3:	(bad)  
   14000ead4:	mov    ebp,0xbfff9191
   14000ead9:	xchg   edx,eax
   14000eada:	xchg   edx,eax
   14000eadb:	inc    ecx
   14000eadd:	xchg   esp,eax
   14000eade:	xchg   esp,eax
   14000eadf:	inc    ebx
   14000eae1:	xchg   ebp,eax
   14000eae2:	xchg   ebp,eax
   14000eae3:	inc    ebp
   14000eae5:	xchg   ebp,eax
   14000eae6:	xchg   ebp,eax
   14000eae7:	inc    edi
   14000eae9:	xchg   esi,eax
   14000eaea:	xchg   esi,eax
   14000eaeb:	jmp    FWORD PTR [rbp+0x7fff8585]
   14000eaf1:	data16 call WORD PTR [rax+0x46]
   14000eaf6:	rex.RX jmp FWORD PTR [rbx]
   14000eaf9:	sub    ebp,DWORD PTR [rbx]
   14000eafb:	repz sbb ebx,DWORD PTR [rbx]
   14000eafe:	sbb    edx,eax
   14000eb00:	add    BYTE PTR [rax],al
   14000eb02:	add    BYTE PTR [rbp+0x0],ch
   14000eb05:	add    BYTE PTR [rax],al
   14000eb07:	(bad)  
	...
   14000eb4c:	sub    ebp,DWORD PTR [rbx]
   14000eb4e:	sub    ebx,DWORD PTR [rdi+0x76]
   14000eb51:	jbe    0x14000ebc9
   14000eb53:	jmp    FWORD PTR [rax-0x59005758]
   14000eb59:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000eb5a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000eb5b:	jmp    QWORD PTR [rcx-0x5d007374]
   14000eb61:	test   BYTE PTR [rdi+rdi*8-0x6a6a45],al
   14000eb68:	inc    edx
   14000eb6a:	ret    0xffff
   14000eb6d:	rol    al,0xff
   14000eb70:	(bad)  
   14000eb71:	mov    ebp,0xbaffffbd
   14000eb76:	mov    edx,0xb7b7ffff
   14000eb7b:	(bad)  
   14000eb7c:	push   QWORD PTR [rsp+rsi*4-0x43430801]
   14000eb83:	push   rax
   14000eb85:	mov    edi,0xdadaeaff
   14000eb8b:	jmp    rsp
   14000eb8d:	loop   0x14000eb71
   14000eb8f:	(bad)  
   14000eb90:	fmul   st(7),st
   14000eb92:	iret   
   14000eb93:	call   rdx
   14000eb95:	mov    edx,0x9dc4ffba
   14000eb9a:	popf   
   14000eb9b:	(bad)  
   14000eb9c:	mov    edi,0xc1ff9292
   14000eba1:	xchg   esp,eax
   14000eba2:	xchg   esp,eax
   14000eba3:	inc    ebx
   14000eba5:	xchg   ebp,eax
   14000eba6:	xchg   ebp,eax
   14000eba7:	inc    ebp
   14000eba9:	xchg   ebp,eax
   14000ebaa:	xchg   ebp,eax
   14000ebab:	inc    edi
   14000ebad:	xchg   esi,eax
   14000ebae:	xchg   esi,eax
   14000ebaf:	dec    ecx
   14000ebb1:	cwde   
   14000ebb2:	cwde   
   14000ebb3:	dec    ebx
   14000ebb5:	cdq    
   14000ebb6:	cdq    
   14000ebb7:	inc    edx
   14000ebb9:	xchg   ebx,eax
   14000ebba:	xchg   ebx,eax
   14000ebbb:	jmp    FWORD PTR [rcx]
   14000ebbd:	sub    DWORD PTR [rcx],ebp
   14000ebbf:	in     al,dx
   14000ebc0:	add    BYTE PTR [rax],al
   14000ebc2:	add    BYTE PTR [rdi+0x0],dh
   14000ebc5:	add    BYTE PTR [rax],al
   14000ebc7:	and    eax,DWORD PTR [rax]
	...
   14000ec09:	add    BYTE PTR [rax],al
   14000ec0b:	add    BYTE PTR [rdi],ch
   14000ec0d:	(bad)  
   14000ec0e:	(bad)  
   14000ec0f:	mov    WORD PTR [rbp-0x55007273],cs
   14000ec15:	stos   BYTE PTR es:[rdi],al
   14000ec16:	stos   BYTE PTR es:[rdi],al
   14000ec17:	jmp    FWORD PTR [rax-0x5f005758]
   14000ec1d:	mov    ecx,DWORD PTR [rbx-0x7c7c5f01]
   14000ec23:	(bad)  
   14000ec24:	mov    ebx,0xffff9999
   14000ec29:	(bad)
   14000ec2c:	inc    edx
   14000ec2e:	ret    0xffff
   14000ec31:	rol    al,0xff
   14000ec34:	(bad)  
   14000ec35:	mov    ebp,0xbaffffbd
   14000ec3a:	mov    edx,0xb7b7ffff
   14000ec3f:	(bad)  
   14000ec40:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000ec47:	(bad)  
   14000ec48:	jmp    FWORD PTR [rbp-0x51020053]
   14000ec4e:	scas   al,BYTE PTR es:[rdi]
   14000ec4f:	(bad)  
   14000ec50:	clc    
   14000ec51:	mov    ebp,0xcdf5ffbd
   14000ec56:	int    0xff
   14000ec58:	repz loop 0x14000ec3d
   14000ec5b:	(bad)  
   14000ec5c:	in     al,dx
   14000ec5d:	out    0xe7,eax
   14000ec5f:	jmp    rcx
   14000ec61:	rcl    ecx,1
   14000ec63:	call   rbx
   14000ec65:	mov    ah,0xb4
   14000ec67:	inc    esi
   14000ec69:	fwait
   14000ec6a:	fwait
   14000ec6b:	inc    ebp
   14000ec6d:	xchg   ebp,eax
   14000ec6e:	xchg   ebp,eax
   14000ec6f:	inc    edi
   14000ec71:	xchg   esi,eax
   14000ec72:	xchg   esi,eax
   14000ec73:	dec    ecx
   14000ec75:	cwde   
   14000ec76:	cwde   
   14000ec77:	dec    ebx
   14000ec79:	cdq    
   14000ec7a:	cdq    
   14000ec7b:	jmp    FWORD PTR [rcx]
   14000ec7d:	sub    DWORD PTR [rcx],ebp
   14000ec7f:	in     al,dx
   14000ec80:	add    BYTE PTR [rax],al
   14000ec82:	add    BYTE PTR [rdi+0x0],dh
   14000ec85:	add    BYTE PTR [rax],al
   14000ec87:	and    eax,DWORD PTR [rax]
	...
   14000ecc9:	add    BYTE PTR [rax],al
   14000eccb:	add    BYTE PTR [rdi],ch
   14000eccd:	(bad)  
   14000ecce:	(bad)  
   14000eccf:	mov    WORD PTR [rsi-0x54007172],cs
   14000ecd5:	stos   DWORD PTR es:[rdi],eax
   14000ecd6:	stos   DWORD PTR es:[rdi],eax
   14000ecd7:	jmp    FWORD PTR [rdx-0x60005556]
   14000ecdd:	mov    ecx,DWORD PTR [rbx-0x7d7d6101]
   14000ece3:	dec    eax
   14000ece5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ece6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ece7:	(bad)  
   14000ece8:	dec    ecx
   14000ecea:	leave  
   14000eceb:	(bad)  
   14000ecec:	inc    ebp
   14000ecee:	(bad)  
   14000ecf1:	ret    0xffc2
   14000ecf4:	inc    eax
   14000ecf6:	sar    bh,0xff
   14000ecf9:	mov    ebp,0xbaffffbd
   14000ecfe:	mov    edx,0xb7b7ffff
   14000ed03:	(bad)  
   14000ed04:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000ed0b:	(bad)  
   14000ed0c:	jmp    FWORD PTR [rbp-0x54000053]
   14000ed12:	stos   DWORD PTR es:[rdi],eax
   14000ed13:	(bad)  
   14000ed14:	jmp    FWORD PTR [rax-0x5a000058]
   14000ed1a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ed1b:	(bad)  
   14000ed1c:	std    
   14000ed1d:	lods   al,BYTE PTR ds:[rsi]
   14000ed1e:	lods   al,BYTE PTR ds:[rsi]
   14000ed1f:	(bad)  
   14000ed20:	sti    
   14000ed21:	rol    al,0xff
   14000ed24:	sti    
   14000ed25:	(bad)  
   14000ed26:	(bad)  
   14000ed27:	(bad)  
   14000ed28:	sti    
   14000ed29:	out    dx,al
   14000ed2a:	out    dx,al
   14000ed2b:	push   rbx
   14000ed2d:	(bad)  
   14000ed2e:	(bad)  
   14000ed2f:	(bad)  
   14000ed30:	ffreep st(4)
   14000ed32:	(bad)  
   14000ed33:	inc    edi
   14000ed35:	xchg   esi,eax
   14000ed36:	xchg   esi,eax
   14000ed37:	dec    ecx
   14000ed39:	cwde   
   14000ed3a:	cwde   
   14000ed3b:	jmp    FWORD PTR [rcx]
   14000ed3d:	sub    DWORD PTR [rcx],ebp
   14000ed3f:	in     al,dx
   14000ed40:	add    BYTE PTR [rax],al
   14000ed42:	add    BYTE PTR [rdi+0x0],dh
   14000ed45:	add    BYTE PTR [rax],al
   14000ed47:	and    eax,DWORD PTR [rax]
	...
   14000ed89:	add    BYTE PTR [rax],al
   14000ed8b:	add    BYTE PTR [rdi],ch
   14000ed8d:	(bad)  
   14000ed8e:	(bad)  
   14000ed8f:	mov    WORD PTR [rax-0x52006f70],ss
   14000ed95:	lods   eax,DWORD PTR ds:[rsi]
   14000ed96:	lods   eax,DWORD PTR ds:[rsi]
   14000ed97:	jmp    FWORD PTR [rbx-0x61005455]
   14000ed9d:	mov    ecx,DWORD PTR [rbx-0x7e7e6301]
   14000eda3:	dec    esi
   14000eda5:	test   al,0xa8
   14000eda7:	(bad)  
   14000eda8:	dec    ebx
   14000edaa:	retf   
   14000edab:	(bad)  
   14000edac:	dec    ecx
   14000edae:	leave  
   14000edaf:	(bad)  
   14000edb0:	inc    ebp
   14000edb2:	(bad)  
   14000edb5:	ret    0xffc2
   14000edb8:	inc    eax
   14000edba:	sar    bh,0xff
   14000edbd:	mov    ebp,0xbaffffbd
   14000edc2:	mov    edx,0xb7b7ffff
   14000edc7:	(bad)  
   14000edc8:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000edcf:	(bad)  
   14000edd0:	jmp    FWORD PTR [rbp-0x54000053]
   14000edd6:	stos   DWORD PTR es:[rdi],eax
   14000edd7:	(bad)  
   14000edd8:	jmp    FWORD PTR [rax-0x5a000058]
   14000edde:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eddf:	(bad)  
   14000ede0:	jmp    QWORD PTR [rdx-0x5f00005e]
   14000ede6:	movabs al,ds:0xbebefdff9c9cffff
   14000edef:	(bad)  
   14000edf0:	out    dx,eax
   14000edf1:	in     al,0xe4
   14000edf3:	inc    ebp
   14000edf5:	xchg   ebp,eax
   14000edf6:	xchg   ebp,eax
   14000edf7:	inc    edi
   14000edf9:	xchg   esi,eax
   14000edfa:	xchg   esi,eax
   14000edfb:	jmp    FWORD PTR [rcx]
   14000edfd:	sub    DWORD PTR [rcx],ebp
   14000edff:	in     al,dx
   14000ee00:	add    BYTE PTR [rax],al
   14000ee02:	add    BYTE PTR [rdi+0x0],dh
   14000ee05:	add    BYTE PTR [rax],al
   14000ee07:	and    eax,DWORD PTR [rax]
	...
   14000ee49:	add    BYTE PTR [rax],al
   14000ee4b:	add    BYTE PTR [rsi],ch
   14000ee4d:	cs cs (bad) 
   14000ee50:	xchg   ecx,eax
   14000ee51:	xchg   ecx,eax
   14000ee52:	xchg   ecx,eax
   14000ee53:	jmp    FWORD PTR [rdi-0x52005051]
   14000ee59:	lods   eax,DWORD PTR ds:[rsi]
   14000ee5a:	lods   eax,DWORD PTR ds:[rsi]
   14000ee5b:	call   FWORD PTR [rcx-0x65007d7e]
   14000ee61:	add    BYTE PTR [rax-0x56563101],0xff
   14000ee68:	dec    esi
   14000ee6a:	(bad)  
   14000ee6b:	(bad)  
   14000ee6c:	dec    ebx
   14000ee6e:	retf   
   14000ee6f:	(bad)  
   14000ee70:	dec    ecx
   14000ee72:	leave  
   14000ee73:	(bad)  
   14000ee74:	inc    ebp
   14000ee76:	(bad)  
   14000ee79:	ret    0xffc2
   14000ee7c:	inc    eax
   14000ee7e:	sar    bh,0xff
   14000ee81:	mov    ebp,0xbaffffbd
   14000ee86:	mov    edx,0xb7b7ffff
   14000ee8b:	(bad)  
   14000ee8c:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000ee93:	(bad)  
   14000ee94:	jmp    FWORD PTR [rbp-0x54000053]
   14000ee9a:	stos   DWORD PTR es:[rdi],eax
   14000ee9b:	(bad)  
   14000ee9c:	jmp    FWORD PTR [rax-0x5a000058]
   14000eea2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eea3:	(bad)  
   14000eea4:	jmp    QWORD PTR [rdx-0x5f00005e]
   14000eeaa:	movabs al,ds:0xe1e1ecffb9b9fdff
   14000eeb3:	inc    ebx
   14000eeb5:	xchg   ebp,eax
   14000eeb6:	xchg   ebp,eax
   14000eeb7:	inc    ebp
   14000eeb9:	xchg   ebp,eax
   14000eeba:	xchg   ebp,eax
   14000eebb:	jmp    FWORD PTR [rcx]
   14000eebd:	sub    DWORD PTR [rcx],ebp
   14000eebf:	jmp    0x14000eec1
   14000eec1:	add    BYTE PTR [rax],al
   14000eec3:	jno    0x14000eec5
   14000eec5:	add    BYTE PTR [rax],al
   14000eec7:	and    BYTE PTR [rax],al
	...
   14000ef09:	add    BYTE PTR [rax],al
   14000ef0b:	add    BYTE PTR [rax],dh
   14000ef0d:	xor    BYTE PTR [rax],dh
   14000ef0f:	mov    edx,0xffa2a2a2
   14000ef14:	mov    al,0xb0
   14000ef16:	mov    al,0xff
   14000ef18:	scas   eax,DWORD PTR es:[rdi]
   14000ef19:	scas   eax,DWORD PTR es:[rdi]
   14000ef1a:	scas   eax,DWORD PTR es:[rdi]
   14000ef1b:	call   QWORD PTR [rsi-0x67008182]
   14000ef21:	jg     0x14000efa2
   14000ef23:	dec    esp
   14000ef25:	test   eax,0xd1ffffa9
   14000ef2a:	sar    edi,1
   14000ef2c:	dec    esi
   14000ef2e:	(bad)  
   14000ef2f:	(bad)  
   14000ef30:	dec    ebx
   14000ef32:	retf   
   14000ef33:	(bad)  
   14000ef34:	dec    ecx
   14000ef36:	leave  
   14000ef37:	(bad)  
   14000ef38:	inc    ebp
   14000ef3a:	(bad)  
   14000ef3d:	ret    0xffc2
   14000ef40:	inc    eax
   14000ef42:	sar    bh,0xff
   14000ef45:	mov    ebp,0xbaffffbd
   14000ef4a:	mov    edx,0xb7b7ffff
   14000ef4f:	(bad)  
   14000ef50:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000ef57:	(bad)  
   14000ef58:	jmp    FWORD PTR [rbp-0x54000053]
   14000ef5e:	stos   DWORD PTR es:[rdi],eax
   14000ef5f:	(bad)  
   14000ef60:	jmp    FWORD PTR [rax-0x5a000058]
   14000ef66:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ef67:	(bad)  
   14000ef68:	jmp    QWORD PTR [rdx-0x3505005e]
   14000ef6e:	retf   0xdbff
   14000ef71:	(bad)  
   14000ef72:	(bad)  
   14000ef73:	inc    ecx
   14000ef75:	xchg   esp,eax
   14000ef76:	xchg   esp,eax
   14000ef77:	inc    ebx
   14000ef79:	xchg   ebp,eax
   14000ef7a:	xchg   ebp,eax
   14000ef7b:	jmp    FWORD PTR [rdx]
   14000ef7d:	sub    ch,BYTE PTR [rdx]
   14000ef7f:	(bad)  
   14000ef80:	add    BYTE PTR [rax],al
   14000ef82:	add    BYTE PTR [rbp+0x0],ah
   14000ef85:	add    BYTE PTR [rax],al
   14000ef87:	sbb    al,BYTE PTR [rax]
	...
   14000efc9:	add    BYTE PTR [rax],al
   14000efcb:	add    BYTE PTR [rcx],dh
   14000efcd:	xor    DWORD PTR [rcx],esi
   14000efcf:	enter  0xb4b4,0xb4
   14000efd3:	push   QWORD PTR [rdx-0x4f004d4e]
   14000efd9:	mov    al,0xb0
   14000efdb:	call   QWORD PTR [rbp+rdi*2+0x7e96ff7d]
   14000efe2:	jle    0x14000efe3
   14000efe4:	shl    BYTE PTR [rdx-0x2b00004e],1
   14000efea:	(bad)  
   14000efeb:	(bad)  
   14000efec:	call   rcx
   14000efee:	sar    edi,1
   14000eff0:	dec    esi
   14000eff2:	(bad)  
   14000eff3:	(bad)  
   14000eff4:	dec    ebx
   14000eff6:	retf   
   14000eff7:	(bad)  
   14000eff8:	dec    ecx
   14000effa:	leave  
   14000effb:	(bad)  
   14000effc:	inc    ebp
   14000effe:	(bad)  
   14000f001:	ret    0xffc2
   14000f004:	inc    eax
   14000f006:	sar    bh,0xff
   14000f009:	mov    ebp,0xbaffffbd
   14000f00e:	mov    edx,0xb7b7ffff
   14000f013:	(bad)  
   14000f014:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000f01b:	(bad)  
   14000f01c:	jmp    FWORD PTR [rbp-0x54000053]
   14000f022:	stos   DWORD PTR es:[rdi],eax
   14000f023:	(bad)  
   14000f024:	jmp    FWORD PTR [rax-0x5a000058]
   14000f02a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f02b:	(bad)  
   14000f02c:	clc    
   14000f02d:	leave  
   14000f02e:	leave  
   14000f02f:	(bad)  
   14000f030:	fadd   st,st(2)
   14000f032:	ret    0xbfff
   14000f035:	xchg   edx,eax
   14000f036:	xchg   edx,eax
   14000f037:	call   FWORD PTR [rbp+0x1fff7c7c]
   14000f03d:	(bad)  
   14000f03e:	(bad)  
   14000f03f:	rol    DWORD PTR [rax],cl
   14000f041:	add    BYTE PTR [rax],al
   14000f043:	pop    rdi
   14000f044:	add    BYTE PTR [rax],al
   14000f046:	add    BYTE PTR [rax],bl
	...
   14000f08c:	xor    DWORD PTR [rcx],esi
   14000f08e:	xor    eax,ecx
   14000f090:	mov    dh,0xb6
   14000f092:	mov    dh,0xff
   14000f094:	mov    ah,0xb4
   14000f096:	mov    ah,0xff
   14000f098:	mov    dl,0xb2
   14000f09a:	mov    dl,0xff
   14000f09c:	xchg   edx,eax
   14000f09d:	jl     0x14000f11b
   14000f09f:	call   QWORD PTR [rbp+rdi*2-0x3e1e0083]
   14000f0a6:	sar    edi,0xff
   14000f0a9:	xlat   BYTE PTR ds:[rbx]
   14000f0aa:	xlat   BYTE PTR ds:[rbx]
   14000f0ab:	(bad)  
   14000f0ac:	call   rsp
   14000f0ae:	(bad)  
   14000f0af:	(bad)  
   14000f0b0:	call   rcx
   14000f0b2:	sar    edi,1
   14000f0b4:	dec    esi
   14000f0b6:	(bad)  
   14000f0b7:	(bad)  
   14000f0b8:	dec    ebx
   14000f0ba:	retf   
   14000f0bb:	(bad)  
   14000f0bc:	dec    ecx
   14000f0be:	leave  
   14000f0bf:	(bad)  
   14000f0c0:	inc    ebp
   14000f0c2:	(bad)  
   14000f0c5:	ret    0xffc2
   14000f0c8:	inc    eax
   14000f0ca:	sar    bh,0xff
   14000f0cd:	mov    ebp,0xbaffffbd
   14000f0d2:	mov    edx,0xb7b7ffff
   14000f0d7:	(bad)  
   14000f0d8:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000f0df:	(bad)  
   14000f0e0:	jmp    FWORD PTR [rbp-0x54000053]
   14000f0e6:	stos   DWORD PTR es:[rdi],eax
   14000f0e7:	(bad)  
   14000f0e8:	jmp    FWORD PTR [rax-0x370a0058]
   14000f0ee:	enter  0xd5ff,0xc0
   14000f0f2:	sar    bh,0xbd
   14000f0f5:	xchg   ecx,eax
   14000f0f6:	xchg   ecx,eax
   14000f0f7:	call   FWORD PTR [rdx+rdi*2+0x1f1fff7a]
   14000f0fe:	(bad)  
   14000f0ff:	rol    DWORD PTR [rax],cl
   14000f101:	add    BYTE PTR [rax],al
   14000f103:	pop    rdi
   14000f104:	add    BYTE PTR [rax],al
   14000f106:	add    BYTE PTR [rax],bl
	...
   14000f14c:	xor    BYTE PTR [rax],dh
   14000f14e:	xor    cl,cl
   14000f150:	mov    eax,0xb6ffb8b8
   14000f155:	mov    dh,0xb6
   14000f157:	push   QWORD PTR [rsp+rsi*4+0x7b90ffb4]
   14000f15e:	jnp    0x14000f15f
   14000f160:	xchg   edx,eax
   14000f161:	jl     0x14000f1df
   14000f163:	jmp    rsp
   14000f165:	(bad)  
   14000f166:	(bad)  
   14000f167:	(bad)  
   14000f168:	(bad)  
   14000f169:	fcmovu st,st(2)
   14000f16b:	(bad)  
   14000f16c:	call   rdi
   14000f16e:	xlat   BYTE PTR ds:[rbx]
   14000f16f:	(bad)  
   14000f170:	call   rsp
   14000f172:	(bad)  
   14000f173:	(bad)  
   14000f174:	call   rcx
   14000f176:	sar    edi,1
   14000f178:	dec    esi
   14000f17a:	(bad)  
   14000f17b:	(bad)  
   14000f17c:	dec    ebx
   14000f17e:	retf   
   14000f17f:	(bad)  
   14000f180:	dec    ecx
   14000f182:	leave  
   14000f183:	(bad)  
   14000f184:	inc    ebp
   14000f186:	(bad)  
   14000f189:	ret    0xffc2
   14000f18c:	inc    eax
   14000f18e:	sar    bh,0xff
   14000f191:	mov    ebp,0xbaffffbd
   14000f196:	mov    edx,0xb7b7ffff
   14000f19b:	(bad)  
   14000f19c:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000f1a3:	(bad)  
   14000f1a4:	jmp    FWORD PTR [rbp-0x54000053]
   14000f1aa:	stos   DWORD PTR es:[rdi],eax
   14000f1ab:	push   rsp
   14000f1ad:	leave  
   14000f1ae:	leave  
   14000f1af:	call   rdx
   14000f1b1:	mov    esi,0x91bbffbe
   14000f1b6:	xchg   ecx,eax
   14000f1b7:	call   FWORD PTR [rdx+0x1fff7a7a]
   14000f1bd:	(bad)  
   14000f1be:	(bad)  
   14000f1bf:	rol    DWORD PTR [rax],cl
   14000f1c1:	add    BYTE PTR [rax],al
   14000f1c3:	pop    rdi
   14000f1c4:	add    BYTE PTR [rax],al
   14000f1c6:	add    BYTE PTR [rax],bl
	...
   14000f20c:	xor    BYTE PTR [rax],dh
   14000f20e:	xor    dl,cl
   14000f210:	mov    ecx,0xb8ffb9b9
   14000f215:	mov    eax,0xa7acffb8
   14000f21a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f21b:	dec    DWORD PTR [rsi-0x6f008586]
   14000f221:	jnp    0x14000f29e
   14000f223:	jmp    rsp
   14000f225:	mov    dh,0xff
   14000f228:	(bad)  
   14000f229:	fstp   st(5)
   14000f22b:	(bad)  
   14000f22c:	(bad)  
   14000f22d:	fcmovu st,st(2)
   14000f22f:	(bad)  
   14000f230:	call   rdi
   14000f232:	xlat   BYTE PTR ds:[rbx]
   14000f233:	(bad)  
   14000f234:	call   rsp
   14000f236:	(bad)  
   14000f237:	(bad)  
   14000f238:	call   rcx
   14000f23a:	sar    edi,1
   14000f23c:	dec    esi
   14000f23e:	(bad)  
   14000f23f:	(bad)  
   14000f240:	dec    ebx
   14000f242:	retf   
   14000f243:	(bad)  
   14000f244:	dec    ecx
   14000f246:	leave  
   14000f247:	(bad)  
   14000f248:	inc    ebp
   14000f24a:	(bad)  
   14000f24d:	ret    0xffc2
   14000f250:	inc    eax
   14000f252:	sar    bh,0xff
   14000f255:	mov    ebp,0xbaffffbd
   14000f25a:	mov    edx,0xb7b7ffff
   14000f25f:	(bad)  
   14000f260:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000f267:	(bad)  
   14000f268:	jmp    FWORD PTR [rbp-0x370d0053]
   14000f26e:	enter  0xcfff,0xba
   14000f272:	mov    edx,0x9090b9ff
   14000f277:	call   FWORD PTR [rcx+0x1fff7979]
   14000f27d:	(bad)  
   14000f27e:	(bad)  
   14000f27f:	rol    DWORD PTR [rax],cl
   14000f281:	add    BYTE PTR [rax],al
   14000f283:	pop    rdi
   14000f284:	add    BYTE PTR [rax],al
   14000f286:	add    BYTE PTR [rax],bl
	...
   14000f2cc:	push   rbp
   14000f2cd:	push   rbp
   14000f2ce:	push   rbp
   14000f2cf:	(bad)  
   14000f2d0:	mov    ebx,0xb9ffbbbb
   14000f2d5:	mov    ecx,0xa8adffb9
   14000f2da:	test   al,0xff
   14000f2dc:	mov    WORD PTR [rcx+0x79],?
   14000f2df:	dec    DWORD PTR [rsi-0x1c008586]
   14000f2e5:	enter  0xffc8,0xff
   14000f2e9:	(bad)  
   14000f2eb:	(bad)  
   14000f2ec:	(bad)  
   14000f2ed:	fstp   st(5)
   14000f2ef:	(bad)  
   14000f2f0:	(bad)  
   14000f2f1:	fcmovu st,st(2)
   14000f2f3:	(bad)  
   14000f2f4:	call   rdi
   14000f2f6:	xlat   BYTE PTR ds:[rbx]
   14000f2f7:	(bad)  
   14000f2f8:	call   rsp
   14000f2fa:	(bad)  
   14000f2fb:	(bad)  
   14000f2fc:	call   rcx
   14000f2fe:	sar    edi,1
   14000f300:	dec    esi
   14000f302:	(bad)  
   14000f303:	(bad)  
   14000f304:	dec    ebx
   14000f306:	retf   
   14000f307:	(bad)  
   14000f308:	dec    ecx
   14000f30a:	leave  
   14000f30b:	(bad)  
   14000f30c:	inc    ebp
   14000f30e:	(bad)  
   14000f311:	ret    0xffc2
   14000f314:	inc    eax
   14000f316:	sar    bh,0xff
   14000f319:	mov    ebp,0xbaffffbd
   14000f31e:	mov    edx,0xb7b7ffff
   14000f323:	(bad)  
   14000f324:	push   QWORD PTR [rsp+rsi*4-0x4f4f0001]
   14000f32b:	push   rax
   14000f32d:	mov    edi,0xb8b8ccff
   14000f333:	push   QWORD PTR [rdi-0x68007172]
   14000f339:	jns    0x14000f3b4
   14000f33b:	call   FWORD PTR [rdi]
   14000f33d:	(bad)  
   14000f33e:	(bad)  
   14000f33f:	rol    DWORD PTR [rax],cl
   14000f341:	add    BYTE PTR [rax],al
   14000f343:	pop    rdi
   14000f344:	add    BYTE PTR [rax],al
   14000f346:	add    BYTE PTR [rax],bl
	...
   14000f38c:	push   rsi
   14000f38d:	push   rsi
   14000f38e:	push   rsi
   14000f38f:	(bad)  
   14000f390:	mov    esp,0xbbffbcbc
   14000f395:	mov    ebx,0xa9adffbb
   14000f39a:	test   eax,0x78788aff
   14000f39f:	dec    DWORD PTR [rcx+rdi*2-0x26100087]
   14000f3a6:	fcos   
   14000f3a8:	jmp    rdx
   14000f3aa:	loop   0x14000f3ab
   14000f3ac:	(bad)  
   14000f3ad:	(bad)  
   14000f3af:	(bad)  
   14000f3b0:	(bad)  
   14000f3b1:	fstp   st(5)
   14000f3b3:	(bad)  
   14000f3b4:	(bad)  
   14000f3b5:	fcmovu st,st(2)
   14000f3b7:	(bad)  
   14000f3b8:	call   rdi
   14000f3ba:	xlat   BYTE PTR ds:[rbx]
   14000f3bb:	(bad)  
   14000f3bc:	call   rsp
   14000f3be:	(bad)  
   14000f3bf:	(bad)  
   14000f3c0:	call   rcx
   14000f3c2:	sar    edi,1
   14000f3c4:	dec    esi
   14000f3c6:	(bad)  
   14000f3c7:	(bad)  
   14000f3c8:	dec    ebx
   14000f3ca:	retf   
   14000f3cb:	(bad)  
   14000f3cc:	dec    ecx
   14000f3ce:	leave  
   14000f3cf:	(bad)  
   14000f3d0:	inc    ebp
   14000f3d2:	(bad)  
   14000f3d5:	ret    
   14000f3d6:	ret    
   14000f3d7:	(bad)  
   14000f3d8:	inc    eax
   14000f3da:	sar    bh,0xff
   14000f3dd:	mov    ebp,0xbaffffbd
   14000f3e2:	mov    edx,0xb7b7ffff
   14000f3e7:	(bad)  
   14000f3e8:	push   QWORD PTR [rsp+rsi*4-0x38381101]
   14000f3ef:	dec    edx
   14000f3f1:	mov    dh,0xb6
   14000f3f3:	push   QWORD PTR [rsi-0x69007172]
   14000f3f9:	ja     0x14000f472
   14000f3fb:	call   FWORD PTR [rdi]
   14000f3fd:	(bad)  
   14000f3fe:	(bad)  
   14000f3ff:	rol    DWORD PTR [rax],cl
   14000f401:	add    BYTE PTR [rax],al
   14000f403:	pop    rdi
   14000f404:	add    BYTE PTR [rax],al
   14000f406:	add    BYTE PTR [rax],bl
	...
   14000f448:	add    BYTE PTR [rax],al
   14000f44a:	add    BYTE PTR [rcx],al
   14000f44c:	push   rsi
   14000f44d:	push   rsi
   14000f44e:	push   rsi
   14000f44f:	(bad)  
   14000f450:	mov    esi,0xbcffbebe
   14000f455:	mov    esp,0xaaaeffbc
   14000f45a:	stos   BYTE PTR es:[rdi],al
   14000f45b:	dec    DWORD PTR [rax-0x75008889]
   14000f461:	js     0x14000f4db
   14000f463:	(bad)  
   14000f464:	(bad)  
   14000f465:	jmp    0x12700f453
   14000f46a:	out    0xff,al
   14000f46c:	jmp    rdx
   14000f46e:	loop   0x14000f46f
   14000f470:	(bad)  
   14000f471:	(bad)  
   14000f473:	(bad)  
   14000f474:	(bad)  
   14000f475:	fstp   st(5)
   14000f477:	(bad)  
   14000f478:	(bad)  
   14000f479:	fcmovu st,st(2)
   14000f47b:	(bad)  
   14000f47c:	call   rdi
   14000f47e:	xlat   BYTE PTR ds:[rbx]
   14000f47f:	(bad)  
   14000f480:	call   rsp
   14000f482:	(bad)  
   14000f483:	(bad)  
   14000f484:	call   rcx
   14000f486:	sar    edi,1
   14000f488:	dec    esi
   14000f48a:	(bad)  
   14000f48b:	(bad)  
   14000f48c:	dec    ebx
   14000f48e:	retf   
   14000f48f:	(bad)  
   14000f490:	dec    ecx
   14000f492:	leave  
   14000f493:	(bad)  
   14000f494:	inc    esi
   14000f496:	(bad)  
   14000f497:	(bad)  
   14000f498:	inc    ebx
   14000f49a:	ret    
   14000f49b:	(bad)  
   14000f49c:	inc    eax
   14000f49e:	sar    bh,0xff
   14000f4a1:	mov    ebp,0xbaffffbd
   14000f4a6:	mov    edx,0xb7b7ffff
   14000f4ab:	jmp    rsp
   14000f4ad:	int    0xcd
   14000f4af:	inc    esi
   14000f4b1:	mov    ah,0xb4
   14000f4b3:	push   QWORD PTR [rbx-0x6a007273]
   14000f4b9:	ja     0x14000f532
   14000f4bb:	call   FWORD PTR [rdi]
   14000f4bd:	(bad)  
   14000f4be:	(bad)  
   14000f4bf:	rol    DWORD PTR [rax],cl
   14000f4c1:	add    BYTE PTR [rax],al
   14000f4c3:	pop    rdi
   14000f4c4:	add    BYTE PTR [rax],al
   14000f4c6:	add    BYTE PTR [rax],bl
	...
   14000f508:	add    BYTE PTR [rax],al
   14000f50a:	add    BYTE PTR [rsi],al
   14000f50c:	push   rdi
   14000f50d:	push   rdi
   14000f50e:	push   rdi
   14000f50f:	inc    eax
   14000f511:	rol    al,0xff
   14000f514:	mov    esi,0xabffbebe
   14000f519:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f51a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f51b:	inc    DWORD PTR [rsi-0x7700898a]
   14000f521:	ja     0x14000f59a
   14000f523:	(bad)  
   14000f524:	(bad)  
   14000f525:	in     al,dx
   14000f526:	in     al,dx
   14000f527:	(bad)  
   14000f528:	(bad)  
   14000f529:	jmp    0x12700f517
   14000f52e:	out    0xff,al
   14000f530:	jmp    rdx
   14000f532:	loop   0x14000f533
   14000f534:	(bad)  
   14000f535:	(bad)  
   14000f537:	(bad)  
   14000f538:	(bad)  
   14000f539:	fstp   st(5)
   14000f53b:	(bad)  
   14000f53c:	stc    
   14000f53d:	iret   
   14000f53e:	int3   
   14000f53f:	(bad)  
   14000f540:	fbld   TBYTE PTR [rbx-0x5419006d]
   14000f546:	sahf   
   14000f547:	jmp    rsi
   14000f549:	stos   BYTE PTR es:[rdi],al
   14000f54a:	popf   
   14000f54b:	(bad)  
   14000f54c:	stc    
   14000f54d:	(bad)  
   14000f551:	retf   
   14000f552:	retf   
   14000f553:	(bad)  
   14000f554:	dec    ecx
   14000f556:	leave  
   14000f557:	(bad)  
   14000f558:	inc    esi
   14000f55a:	(bad)  
   14000f55b:	(bad)  
   14000f55c:	inc    ebx
   14000f55e:	ret    
   14000f55f:	(bad)  
   14000f560:	inc    eax
   14000f562:	sar    bh,0xff
   14000f565:	mov    ebp,0xbaffffbd
   14000f56a:	mov    edx,0xcecee0ff
   14000f56f:	(bad)  
   14000f570:	mov    ecx,0xb1ff9e9e
   14000f575:	mov    WORD PTR [rdi+rdi*8-0x89896d],cs
   14000f57c:	(bad)  
   14000f57d:	(bad)  
   14000f57e:	(bad)  
   14000f57f:	rol    DWORD PTR [rax],cl
   14000f581:	add    BYTE PTR [rax],al
   14000f583:	pop    rdi
   14000f584:	add    BYTE PTR [rax],al
   14000f586:	add    BYTE PTR [rax],bl
	...
   14000f5c8:	sub    BYTE PTR [rax],ch
   14000f5ca:	sub    BYTE PTR [rcx],ch
   14000f5cc:	(bad)  
   14000f5cd:	(bad)  
   14000f5ce:	(bad)  
   14000f5cf:	inc    edx
   14000f5d1:	ret    0xffc2
   14000f5d4:	rol    al,0xc0
   14000f5d7:	jmp    QWORD PTR [rcx-0x7b006566]
   14000f5dd:	jne    0x14000f654
   14000f5df:	inc    DWORD PTR [rsi-0x898a]
   14000f5e5:	out    dx,eax
   14000f5e6:	out    dx,eax
   14000f5e7:	(bad)  
   14000f5e8:	(bad)  
   14000f5e9:	in     al,dx
   14000f5ea:	in     al,dx
   14000f5eb:	(bad)  
   14000f5ec:	(bad)  
   14000f5ed:	jmp    0x12700f5db
   14000f5f2:	out    0xff,al
   14000f5f4:	jmp    rdx
   14000f5f6:	loop   0x14000f5f7
   14000f5f8:	jmp    rax
   14000f5fa:	loopne 0x14000f5fb
   14000f5fc:	mov    ecx,0x83ff4568
   14000f601:	push   rax
   14000f602:	ss (bad) 
   14000f604:	mov    edx,0xabff2160
   14000f609:	rex.WB (bad) 
   14000f60b:	jmp    FWORD PTR [rcx-0x5c00f5ba]
   14000f611:	ds add bh,bh
   14000f614:	cdq    
   14000f615:	xor    eax,DWORD PTR [rax]
   14000f617:	jmp    FWORD PTR [rdi+rcx*2+0x7cccff25]
   14000f61e:	movsxd edi,edi
   14000f620:	stc    
   14000f621:	mov    edx,0xc0ffffb6
   14000f626:	sar    bh,0xff
   14000f629:	mov    ebp,0xccddffbd
   14000f62e:	int3   
   14000f62f:	push   QWORD PTR [rdi-0x50006364]
   14000f635:	mov    ecx,DWORD PTR [rbx+0x767692ff]
   14000f63b:	call   FWORD PTR [rdi]
   14000f63d:	(bad)  
   14000f63e:	(bad)  
   14000f63f:	rol    DWORD PTR [rax],cl
   14000f641:	add    BYTE PTR [rax],al
   14000f643:	pop    rdi
   14000f644:	add    BYTE PTR [rax],al
   14000f646:	add    BYTE PTR [rax],bl
	...
   14000f688:	sub    eax,0x7c492d2d
   14000f68d:	jl     0x14000f70b
   14000f68f:	inc    esp
   14000f691:	(bad)  
   14000f692:	(bad)  
   14000f693:	inc    edx
   14000f695:	ret    0xffc2
   14000f698:	movabs eax,ds:0x84ff747483ff9a9a
   14000f6a1:	jne    0x14000f718
   14000f6a3:	(bad)  
   14000f6a4:	push   rdx
   14000f6a6:	repnz (bad) 
   14000f6a8:	(bad)  
   14000f6a9:	out    dx,eax
   14000f6aa:	out    dx,eax
   14000f6ab:	(bad)  
   14000f6ac:	(bad)  
   14000f6ad:	in     al,dx
   14000f6ae:	in     al,dx
   14000f6af:	(bad)  
   14000f6b0:	(bad)  
   14000f6b1:	jmp    0x12700f69f
   14000f6b6:	out    0xff,al
   14000f6b8:	jmp    rdx
   14000f6ba:	loop   0x14000f6bb
   14000f6bc:	mov    edi,0xa8ff5574
   14000f6c1:	push   0xffffffffb5f4ff44
   14000f6c6:	js     0x14000f6c7
   14000f6c8:	in     al,dx
   14000f6c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f6ca:	(bad)  
   14000f6cb:	jmp    rbx
   14000f6cd:	xchg   esp,eax
   14000f6ce:	rex.RB (bad) 
   14000f6d0:	fild   DWORD PTR [rbp-0x7c2500d3]
   14000f6d6:	sub    edi,edi
   14000f6d8:	iret   
   14000f6d9:	jo     0x14000f6ee
   14000f6db:	push   QWORD PTR [rbx-0x5900ffb3]
   14000f6e1:	rex.X or al,0xff
   14000f6e4:	mov    edi,0xf2ff4969
   14000f6e9:	scas   al,BYTE PTR es:[rdi]
   14000f6ea:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f6eb:	(bad)  
   14000f6ec:	fcmove st,st(1)
   14000f6ee:	leave  
   14000f6ef:	push   QWORD PTR [rbp-0x52006465]
   14000f6f5:	mov    cl,BYTE PTR [rdx+0x757590ff]
   14000f6fb:	call   FWORD PTR [rdi]
   14000f6fd:	(bad)  
   14000f6fe:	(bad)  
   14000f6ff:	rol    DWORD PTR [rax],cl
   14000f701:	add    BYTE PTR [rax],al
   14000f703:	pop    rsp
   14000f704:	add    BYTE PTR [rax],al
   14000f706:	add    BYTE PTR [rsi],dl
	...
   14000f748:	sub    eax,0x7d492d2d
   14000f74d:	jge    0x14000f7cc
   14000f74f:	inc    ebp
   14000f751:	(bad)
   14000f754:	(bad)  
   14000f755:	(bad)  
   14000f756:	(bad)  
   14000f757:	jmp    QWORD PTR [rax-0x7f006566]
   14000f75d:	jae    0x14000f7d2
   14000f75f:	call   FWORD PTR [rax+rdx*4-0xa000070]
   14000f766:	cmc    
   14000f767:	(bad)  
   14000f768:	push   rdx
   14000f76a:	repnz (bad) 
   14000f76c:	(bad)  
   14000f76d:	out    dx,eax
   14000f76e:	out    dx,eax
   14000f76f:	(bad)  
   14000f770:	(bad)  
   14000f771:	in     al,dx
   14000f772:	in     al,dx
   14000f773:	(bad)  
   14000f774:	(bad)  
   14000f775:	jmp    0x12700f763
   14000f77a:	out    0xff,al
   14000f77c:	jmp    rdx
   14000f77e:	loop   0x14000f77f
   14000f780:	mov    edi,0xbfff5575
   14000f785:	ins    BYTE PTR es:[rdi],dx
   14000f786:	cmp    edi,edi
   14000f788:	cld    
   14000f789:	(bad)  
   14000f78a:	xchg   ecx,eax
   14000f78b:	push   rsi
   14000f78d:	mov    edx,0xb3f1ff7f
   14000f792:	jae    0x14000f793
   14000f794:	stc    
   14000f795:	ret    0xff8a
   14000f798:	in     al,0x96
   14000f79a:	rex.RXB call r12
   14000f79d:	jbe    0x14000f7b7
   14000f79f:	dec    edi
   14000f7a1:	ins    DWORD PTR es:[rdi],dx
   14000f7a2:	or     bh,bh
   14000f7a4:	mov    ecx,0xa3ff0053
   14000f7a9:	cmp    eax,0x62acff00
   14000f7ae:	(bad)  
   14000f7af:	jmp    FWORD PTR [rdx-0x53009085]
   14000f7b5:	mov    DWORD PTR [rcx+0x74748fff],ecx
   14000f7bb:	call   FWORD PTR [rdi]
   14000f7bd:	(bad)  
   14000f7be:	(bad)  
   14000f7bf:	(bad)  
   14000f7c0:	add    BYTE PTR [rax],al
   14000f7c2:	add    BYTE PTR [rcx+0x0],ch
   14000f7c5:	add    BYTE PTR [rax],al
   14000f7c7:	add    BYTE PTR cs:[rax],al
   14000f7ca:	add    BYTE PTR [rdi],bl
   14000f7cc:	add    BYTE PTR [rax],al
   14000f7ce:	add    BYTE PTR [rax+rax*1],bl
   14000f7d1:	add    BYTE PTR [rax],al
   14000f7d3:	sldt   WORD PTR [rax]
   14000f7d6:	add    BYTE PTR [rax+rax*1],al
	...
   14000f805:	add    BYTE PTR [rax],al
   14000f807:	add    BYTE PTR [rsp+rbp*1],ch
   14000f80a:	sub    al,0x4a
   14000f80c:	jle    0x14000f88c
   14000f80e:	jle    0x14000f80f
   14000f810:	mov    edi,0xc5c5ffc7
   14000f816:	(bad)  
   14000f819:	fwait
   14000f81a:	fwait
   14000f81b:	(bad)  
   14000f81c:	jle    0x14000f890
   14000f81e:	jb     0x14000f81f
   14000f820:	movabs al,ds:0xfffff7f7ffff9494
   14000f829:	cmc    
   14000f82a:	cmc    
   14000f82b:	(bad)  
   14000f82c:	push   rdx
   14000f82e:	repnz (bad) 
   14000f830:	(bad)  
   14000f831:	out    dx,eax
   14000f832:	out    dx,eax
   14000f833:	(bad)  
   14000f834:	(bad)  
   14000f835:	in     al,dx
   14000f836:	in     al,dx
   14000f837:	(bad)  
   14000f838:	(bad)  
   14000f839:	jmp    0x12700f827
   14000f83e:	out    0xff,al
   14000f840:	jmp    rdx
   14000f842:	loop   0x14000f843
   14000f844:	mov    edi,0xbfff5575
   14000f849:	jae    0x14000f88b
   14000f84b:	(bad)  
   14000f84c:	call   rdi
   14000f84e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f84f:	(bad)  
   14000f850:	jmp    rdx
   14000f852:	scas   eax,DWORD PTR es:[rdi]
   14000f853:	(bad)  
   14000f854:	std    
   14000f855:	fsub   QWORD PTR [rdi+0x69acefff]
   14000f85b:	(bad)  
   14000f85c:	call   0x120004bff
   14000f861:	lea    edi,[rcx]
   14000f863:	call   rdi
   14000f865:	jnp    0x14000f886
   14000f867:	call   rcx
   14000f869:	jo     0x14000f879
   14000f86b:	(bad)  
   14000f86c:	mov    edi,0xa9ff0059
   14000f871:	rex.XB add r15b,dil
   14000f874:	pushf  
   14000f875:	rex.XB sbb dil,r15b
   14000f878:	mov    ds,WORD PTR [rcx+0x46]
   14000f87b:	call   QWORD PTR [rdi]
   14000f87d:	(bad)  
   14000f87e:	(bad)  
   14000f87f:	rol    DWORD PTR [rax],1
   14000f881:	add    BYTE PTR [rax],al
   14000f883:	xchg   esp,eax
   14000f884:	add    BYTE PTR [rax],al
   14000f886:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000f88a:	add    BYTE PTR [rsi+0x0],ch
   14000f88d:	add    BYTE PTR [rax],al
   14000f88f:	push   0x4d000000
   14000f894:	add    BYTE PTR [rax],al
   14000f896:	add    BYTE PTR [rax+rax*1],ch
   14000f899:	add    BYTE PTR [rax],al
   14000f89b:	adc    eax,DWORD PTR [rax]
   14000f89d:	add    BYTE PTR [rax],al
   14000f89f:	(bad)  
   14000f8a0:	add    BYTE PTR [rax],al
   14000f8a2:	add    BYTE PTR [rcx],al
	...
   14000f8c8:	sub    ch,BYTE PTR [rdx]
   14000f8ca:	sub    cl,BYTE PTR [rsi+0x7f]
   14000f8cd:	jg     0x14000f94e
   14000f8cf:	dec    ecx
   14000f8d1:	leave  
   14000f8d2:	leave  
   14000f8d3:	inc    edi
   14000f8d5:	mov    edi,0x909097ff
   14000f8db:	(bad)  
   14000f8dc:	jl     0x14000f94f
   14000f8de:	jno    0x14000f8df
   14000f8e0:	sahf   
   14000f8e1:	xchg   ebp,eax
   14000f8e2:	xchg   ebp,eax
   14000f8e3:	(bad)  
   14000f8e4:	(bad)  
   14000f8e5:	cli    
   14000f8e6:	cli    
   14000f8e7:	(bad)  
   14000f8e8:	push   rdi
   14000f8ea:	idiv   edi
   14000f8ec:	push   rbp
   14000f8ee:	cmc    
   14000f8ef:	(bad)  
   14000f8f0:	push   rdx
   14000f8f2:	repnz (bad) 
   14000f8f4:	(bad)  
   14000f8f5:	out    dx,eax
   14000f8f6:	out    dx,eax
   14000f8f7:	(bad)  
   14000f8f8:	(bad)  
   14000f8f9:	in     al,dx
   14000f8fa:	in     al,dx
   14000f8fb:	(bad)  
   14000f8fc:	(bad)  
   14000f8fd:	jmp    0x12700f8eb
   14000f902:	out    0xff,al
   14000f904:	jmp    rdx
   14000f906:	loop   0x14000f907
   14000f908:	int3   
   14000f909:	mov    dh,BYTE PTR [rcx-0x1]
   14000f90c:	lods   al,BYTE PTR ds:[rsi]
   14000f90d:	push   rbp
   14000f90e:	and    bh,bh
   14000f910:	stc    
   14000f911:	in     eax,dx
   14000f912:	mov    edx,0xb6e9ffff
   14000f917:	(bad)  
   14000f918:	dec    dh
   14000f91a:	fwait
   14000f91b:	(bad)  
   14000f91c:	stc    
   14000f91d:	ror    DWORD PTR [rax+0x70b1f1ff],0xff
   14000f924:	(bad)  
   14000f925:	movabs ds:0x80d9ff3e90e1ff5b,al
   14000f92e:	es call rdx
   14000f931:	jno    0x14000f944
   14000f933:	inc    esi
   14000f935:	(bad)  
   14000f936:	add    bh,bh
   14000f938:	lods   al,BYTE PTR ds:[rsi]
   14000f939:	rex.RX add dil,r15b
   14000f93c:	mov    ?,WORD PTR [rdx]
   14000f93e:	add    bh,dh
   14000f940:	(bad)  
   14000f942:	add    bh,bl
   14000f944:	je     0x14000f96d
   14000f946:	add    dh,ah
   14000f948:	je     0x14000f971
   14000f94a:	add    dh,ah
   14000f94c:	ds adc eax,0xc600
   14000f952:	add    BYTE PTR [rax+rax*1+0x7e0000],bl
   14000f959:	add    BYTE PTR [rax],al
   14000f95b:	push   rdi
   14000f95c:	add    BYTE PTR [rax],al
   14000f95e:	add    BYTE PTR [rax+rax*1],dh
   14000f961:	add    BYTE PTR [rax],al
   14000f963:	sbb    DWORD PTR [rax],eax
   14000f965:	add    BYTE PTR [rax],al
   14000f967:	or     DWORD PTR [rax],eax
   14000f969:	add    BYTE PTR [rax],al
   14000f96b:	add    DWORD PTR [rax],eax
	...
   14000f985:	add    BYTE PTR [rax],al
   14000f987:	add    BYTE PTR [rsi],ch
   14000f989:	cs cs jge 0x14000f929
   14000f98d:	pushf  
   14000f98e:	pushf  
   14000f98f:	dec    ebx
   14000f991:	retf   
   14000f992:	retf   
   14000f993:	dec    ecx
   14000f995:	leave  
   14000f996:	leave  
   14000f997:	dec    DWORD PTR [rbp+0x7aff8585]
   14000f99d:	jo     0x14000fa0f
   14000f99f:	call   FWORD PTR [rbp-0x6a6b]
   14000f9a5:	(bad)  
   14000f9a6:	(bad)  
   14000f9a7:	(bad)  
   14000f9a8:	(bad)  
   14000f9a9:	cli    
   14000f9aa:	cli    
   14000f9ab:	(bad)  
   14000f9ac:	push   rdi
   14000f9ae:	idiv   edi
   14000f9b0:	push   rbp
   14000f9b2:	cmc    
   14000f9b3:	(bad)  
   14000f9b4:	push   rdx
   14000f9b6:	repnz (bad) 
   14000f9b8:	(bad)  
   14000f9b9:	out    dx,eax
   14000f9ba:	out    dx,eax
   14000f9bb:	(bad)  
   14000f9bc:	(bad)  
   14000f9bd:	in     al,dx
   14000f9be:	in     al,dx
   14000f9bf:	(bad)  
   14000f9c0:	(bad)  
   14000f9c1:	jmp    0x12700f9af
   14000f9c6:	out    0xff,al
   14000f9c8:	jmp    rdx
   14000f9ca:	loop   0x14000f9cb
   14000f9cc:	fstp   DWORD PTR [rdi+0x4da6ff8c]
   14000f9d2:	sbb    bh,bh
   14000f9d4:	fldcw  WORD PTR [rdi-0x21060084]
   14000f9da:	stos   DWORD PTR es:[rdi],eax
   14000f9db:	(bad)  
   14000f9dc:	(bad)  
   14000f9dd:	fisubr WORD PTR [rbx-0x602d0001]
   14000f9e3:	(bad)  
   14000f9e4:	cli    
   14000f9e5:	ret    
   14000f9e6:	mov    edi,?
   14000f9e8:	hlt    
   14000f9e9:	mov    ch,0x78
   14000f9eb:	(bad)  
   14000f9ec:	in     al,dx
   14000f9ed:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f9ee:	(bad)  
   14000f9ef:	jmp    rbx
   14000f9f1:	xchg   esp,eax
   14000f9f2:	rex.RB (bad) 
   14000f9f4:	fild   DWORD PTR [rbp+0x75d3ff2d]
   14000f9fa:	adc    eax,0x566caff
   14000f9ff:	(bad)  
   14000fa00:	mov    eax,0xc3ff0755
   14000fa05:	(bad)  
   14000fa06:	or     bh,bh
   14000fa08:	ret    0x5c
   14000fa0b:	jmp    FWORD PTR [rsi+rax*2+0x2e8aff00]
   14000fa12:	add    bh,dh
   14000fa14:	rex.RX (bad) 
   14000fa16:	add    cl,dl
   14000fa18:	(bad)  
   14000fa19:	add    eax,0xa800
   14000fa1e:	add    BYTE PTR [rsi+0x61000000],al
   14000fa24:	add    BYTE PTR [rax],al
   14000fa26:	add    BYTE PTR [rip+0x1f000000],bh        # 0x15f00fa2c
   14000fa2c:	add    BYTE PTR [rax],al
   14000fa2e:	add    BYTE PTR [rbx],cl
   14000fa30:	add    BYTE PTR [rax],al
   14000fa32:	add    BYTE PTR [rdx],al
	...
   14000fa48:	(bad)  
   14000fa49:	(bad)  
   14000fa4a:	(bad)  
   14000fa4b:	mov    WORD PTR [rdi-0x33005859],fs
   14000fa51:	int3   
   14000fa52:	int3   
   14000fa53:	dec    ebx
   14000fa55:	retf   
   14000fa56:	retf   
   14000fa57:	dec    DWORD PTR [rbp+rax*4+0x6f79ff85]
   14000fa5e:	outs   dx,DWORD PTR ds:[rsi]
   14000fa5f:	call   FWORD PTR [rsi-0x6869]
   14000fa65:	(bad)  
   14000fa66:	(bad)  
   14000fa67:	(bad)  
   14000fa68:	(bad)  
   14000fa69:	(bad)  
   14000fa6a:	(bad)  
   14000fa6b:	(bad)  
   14000fa6c:	(bad)  
   14000fa6d:	cli    
   14000fa6e:	cli    
   14000fa6f:	(bad)  
   14000fa70:	push   rdi
   14000fa72:	idiv   edi
   14000fa74:	push   rbp
   14000fa76:	cmc    
   14000fa77:	(bad)  
   14000fa78:	push   rdx
   14000fa7a:	repnz (bad) 
   14000fa7c:	(bad)  
   14000fa7d:	out    dx,eax
   14000fa7e:	out    dx,eax
   14000fa7f:	(bad)  
   14000fa80:	(bad)  
   14000fa81:	in     al,dx
   14000fa82:	in     al,dx
   14000fa83:	(bad)  
   14000fa84:	(bad)  
   14000fa85:	jmp    0x12700fa73
   14000fa8a:	out    0xff,al
   14000fa8c:	jmp    rdx
   14000fa8e:	loop   0x14000fa8f
   14000fa90:	repnz retf 0xffc4
   14000fa94:	(bad)  
   14000fa95:	jle    0x14000faf8
   14000fa97:	jmp    QWORD PTR [rsi-0x3300e5b6]
   14000fa9d:	xchg   esp,eax
   14000fa9e:	(bad)  
   14000fa9f:	push   rdx
   14000faa1:	(bad)  
   14000faa2:	movabs ds:0xa1d4ffffaee1ffff,al
   14000faab:	(bad)  
   14000faac:	cld    
   14000faad:	(bad)  
   14000faae:	xchg   ecx,eax
   14000faaf:	push   rsi
   14000fab1:	mov    edx,0xa9edff7f
   14000fab6:	fs jmp rbp
   14000fab9:	cdq    
   14000faba:	rex.WR (bad) 
   14000fabc:	fimul  WORD PTR [rcx-0x711f00cc]
   14000fac2:	cmp    edi,edi
   14000fac4:	fadd   QWORD PTR [rsi+0x7dd7ff30]
   14000faca:	and    edi,edi
   14000facc:	shl    DWORD PTR [rax+0xe],1
   14000facf:	inc    esi
   14000fad1:	(bad)  
   14000fad2:	add    bh,bh
   14000fad4:	mov    bl,0x4d
   14000fad6:	add    bh,bh
   14000fad8:	xchg   ebp,eax
   14000fad9:	xor    eax,DWORD PTR [rax]
   14000fadb:	sti    
   14000fadc:	pop    rcx
   14000fadd:	(bad)  
   14000fade:	add    ah,bl
   14000fae0:	sbb    al,0x9
   14000fae2:	add    BYTE PTR [rbx-0x71000000],dh
   14000fae8:	add    BYTE PTR [rax],al
   14000faea:	add    BYTE PTR [rbx+0x0],ch
   14000faed:	add    BYTE PTR [rax],al
   14000faef:	add    BYTE PTR [rax],r8b
   14000faf2:	add    BYTE PTR [rip+0xe000000],ah        # 0x14e00faf8
   14000faf8:	add    BYTE PTR [rax],al
   14000fafa:	add    BYTE PTR [rbx],al
	...
   14000fb08:	(bad)  
   14000fb09:	(bad)  
   14000fb0a:	(bad)  
   14000fb0b:	mov    WORD PTR [rax-0x31005758],gs
   14000fb11:	(bad)  
   14000fb12:	(bad)  
   14000fb13:	dec    esp
   14000fb15:	int3   
   14000fb16:	int3   
   14000fb17:	dec    DWORD PTR [rdx+0x77ff8585]
   14000fb1d:	outs   dx,BYTE PTR ds:[rsi]
   14000fb1e:	outs   dx,BYTE PTR ds:[rsi]
   14000fb1f:	(bad)  
   14000fb20:	mov    esp,0xffffb7b7
   14000fb25:	(bad)  
   14000fb26:	(bad)  
   14000fb27:	(bad)  
   14000fb28:	(bad)  
   14000fb29:	(bad)  
   14000fb2a:	(bad)  
   14000fb2b:	(bad)  
   14000fb2c:	(bad)  
   14000fb2d:	(bad)  
   14000fb2e:	(bad)  
   14000fb2f:	(bad)  
   14000fb30:	(bad)  
   14000fb31:	cli    
   14000fb32:	cli    
   14000fb33:	(bad)  
   14000fb34:	push   rdi
   14000fb36:	idiv   edi
   14000fb38:	push   rbp
   14000fb3a:	cmc    
   14000fb3b:	(bad)  
   14000fb3c:	push   rdx
   14000fb3e:	repnz (bad) 
   14000fb40:	(bad)  
   14000fb41:	out    dx,eax
   14000fb42:	out    dx,eax
   14000fb43:	(bad)  
   14000fb44:	(bad)  
   14000fb45:	in     al,dx
   14000fb46:	in     al,dx
   14000fb47:	(bad)  
   14000fb48:	(bad)  
   14000fb49:	jmp    0x12700fb37
   14000fb4e:	out    0xff,al
   14000fb50:	jmp    rdx
   14000fb52:	loop   0x14000fb53
   14000fb54:	jmp    rax
   14000fb56:	loopne 0x14000fb57
   14000fb58:	stc    
   14000fb59:	ror    bh,cl
   14000fb5b:	call   rdx
   14000fb5d:	xchg   ecx,eax
   14000fb5e:	jnp    0x14000fb5f
   14000fb60:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fb61:	sbb    rdi,rdi
   14000fb64:	mov    edi,0xecff497c
   14000fb69:	int3   
   14000fb6a:	cdq    
   14000fb6b:	(bad)  
   14000fb6c:	jmp    rbp
   14000fb6e:	mov    dl,0xff
   14000fb70:	call   rdi
   14000fb72:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fb73:	(bad)  
   14000fb74:	std    
   14000fb75:	retf   
   14000fb76:	xchg   edi,eax
   14000fb77:	(bad)  
   14000fb78:	clc    
   14000fb79:	mov    ebp,0xaff0ff84
   14000fb7e:	outs   dx,BYTE PTR ds:[rsi]
   14000fb7f:	(bad)  
   14000fb80:	out    dx,eax
   14000fb81:	lods   al,BYTE PTR ds:[rsi]
   14000fb82:	imul   edi,edi,0xff569fe8
   14000fb88:	in     al,0x96
   14000fb8a:	rex.RXB (bad) 
   14000fb8c:	fimul  WORD PTR [rcx+0x7ed8ff34]
   14000fb92:	and    al,0xff
   14000fb94:	shl    DWORD PTR [rbx+0x13],cl
   14000fb97:	dec    edx
   14000fb99:	fs add bh,bh
   14000fb9c:	mov    ecx,0x9fff0053
   14000fba1:	cmp    DWORD PTR [rax],eax
   14000fba3:	jmp    FWORD PTR [rdx+0x23]
   14000fba6:	add    ch,ah
   14000fba8:	(bad)  
   14000fba9:	or     eax,0xbc00
   14000fbae:	add    BYTE PTR [rbp+0x73000000],dl
   14000fbb4:	add    BYTE PTR [rax],al
   14000fbb6:	add    BYTE PTR [rcx+0x0],cl
   14000fbb9:	add    BYTE PTR [rax],al
   14000fbbb:	and    al,BYTE PTR [rax]
   14000fbbd:	add    BYTE PTR [rax],al
   14000fbbf:	(bad)  
	...
   14000fbc8:	cs cs mov gs,WORD PTR cs:[rdx-0x2f005556]
   14000fbd1:	rcl    al,1
   14000fbd3:	dec    esi
   14000fbd5:	(bad)  
   14000fbd6:	(bad)  
   14000fbd7:	dec    DWORD PTR [rcx+0x74ff8585]
   14000fbdd:	ins    DWORD PTR es:[rdi],dx
   14000fbde:	ins    DWORD PTR es:[rdi],dx
   14000fbdf:	(bad)  
   14000fbe0:	mov    ebx,0xffffb7b7
   14000fbe5:	(bad)  
   14000fbe6:	(bad)  
   14000fbe7:	(bad)  
   14000fbe8:	(bad)  
   14000fbe9:	(bad)  
   14000fbea:	(bad)  
   14000fbeb:	(bad)  
   14000fbec:	(bad)  
   14000fbed:	(bad)  
   14000fbee:	(bad)  
   14000fbef:	(bad)  
   14000fbf0:	(bad)  
   14000fbf1:	(bad)  
   14000fbf2:	(bad)  
   14000fbf3:	(bad)  
   14000fbf4:	(bad)  
   14000fbf5:	cli    
   14000fbf6:	cli    
   14000fbf7:	(bad)  
   14000fbf8:	push   rdi
   14000fbfa:	idiv   edi
   14000fbfc:	push   rbp
   14000fbfe:	cmc    
   14000fbff:	(bad)  
   14000fc00:	push   rdx
   14000fc02:	repnz (bad) 
   14000fc04:	(bad)  
   14000fc05:	out    dx,eax
   14000fc06:	out    dx,eax
   14000fc07:	(bad)  
   14000fc08:	(bad)  
   14000fc09:	in     al,dx
   14000fc0a:	in     al,dx
   14000fc0b:	(bad)  
   14000fc0c:	(bad)  
   14000fc0d:	jmp    0x12700fbfb
   14000fc12:	out    0xff,al
   14000fc14:	jmp    rdx
   14000fc16:	loop   0x14000fc17
   14000fc18:	jmp    rax
   14000fc1a:	loopne 0x14000fc1b
   14000fc1c:	(bad)  
   14000fc1d:	fstp   st(5)
   14000fc1f:	(bad)  
   14000fc20:	(bad)  
   14000fc21:	fcmovu st,st(2)
   14000fc23:	(bad)  
   14000fc24:	fstp   DWORD PTR [rdx+0x5cb3ff87]
   14000fc2a:	push   QWORD PTR ss:[rbx-0x2000ce9c]
   14000fc31:	mov    dh,0x83
   14000fc33:	(bad)  
   14000fc34:	(bad)  
   14000fc35:	call   0x11b00fbef
   14000fc3a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fc3b:	(bad)  
   14000fc3c:	dec    esi
   14000fc3e:	fwait
   14000fc3f:	(bad)  
   14000fc40:	sti    
   14000fc41:	(bad)  
   14000fc42:	(bad)  
   14000fc43:	push   rbp
   14000fc45:	mov    ecx,0xaff0ff7d
   14000fc4a:	outs   dx,BYTE PTR ds:[rsi]
   14000fc4b:	(bad)  
   14000fc4c:	(bad)  
   14000fc4d:	movabs ds:0x8ddfff4a97e4ff5b,al
   14000fc56:	cmp    edi,edi
   14000fc58:	fiadd  DWORD PTR [rdx+0x76d4ff28]
   14000fc5e:	sbb    bh,bh
   14000fc60:	(bad)  
   14000fc61:	imul   eax,DWORD PTR [rip+0x56bcff],0x40a6ff        # 0x14057b96a
   14000fc6b:	(bad)  
   14000fc6c:	jnp    0x14000fc97
   14000fc6e:	add    dh,ch
   14000fc70:	xor    dl,BYTE PTR [rcx]
   14000fc72:	add    ah,al
   14000fc74:	add    BYTE PTR [rax],al
   14000fc76:	add    BYTE PTR [rdi+0x65000000],dl
   14000fc7c:	add    BYTE PTR [rax],al
   14000fc7e:	add    BYTE PTR [rax],ch
   14000fc80:	add    BYTE PTR [rax],al
   14000fc82:	add    BYTE PTR [rsi],al
   14000fc84:	add    BYTE PTR [rax],al
   14000fc86:	add    BYTE PTR [rax],al
   14000fc88:	cs cs cs popf 
   14000fc8c:	stos   DWORD PTR es:[rdi],eax
   14000fc8d:	stos   DWORD PTR es:[rdi],eax
   14000fc8e:	stos   DWORD PTR es:[rdi],eax
   14000fc8f:	call   rcx
   14000fc91:	rcl    ecx,1
   14000fc93:	call   rax
   14000fc95:	rcl    al,1
   14000fc97:	push   QWORD PTR [rdi+0x71]
   14000fc9a:	jno    0x14000fc9b
   14000fc9c:	jae    0x14000fd0b
   14000fc9e:	ins    DWORD PTR es:[rdi],dx
   14000fc9f:	(bad)  
   14000fca0:	mov    ecx,0xffffb6b6
   14000fca5:	(bad)  
   14000fca6:	(bad)  
   14000fca7:	(bad)  
   14000fca8:	(bad)  
   14000fca9:	(bad)  
   14000fcaa:	(bad)  
   14000fcab:	(bad)  
   14000fcac:	(bad)  
   14000fcad:	(bad)  
   14000fcae:	(bad)  
   14000fcaf:	(bad)  
   14000fcb0:	(bad)  
   14000fcb1:	(bad)  
   14000fcb2:	(bad)  
   14000fcb3:	(bad)  
   14000fcb4:	(bad)  
   14000fcb5:	(bad)  
   14000fcb6:	(bad)  
   14000fcb7:	(bad)  
   14000fcb8:	(bad)  
   14000fcb9:	cli    
   14000fcba:	cli    
   14000fcbb:	(bad)  
   14000fcbc:	push   rdi
   14000fcbe:	idiv   edi
   14000fcc0:	push   rbp
   14000fcc2:	cmc    
   14000fcc3:	(bad)  
   14000fcc4:	push   rdx
   14000fcc6:	repnz (bad) 
   14000fcc8:	(bad)  
   14000fcc9:	out    dx,eax
   14000fcca:	out    dx,eax
   14000fccb:	(bad)  
   14000fccc:	(bad)  
   14000fccd:	in     al,dx
   14000fcce:	in     al,dx
   14000fccf:	(bad)  
   14000fcd0:	(bad)  
   14000fcd1:	jmp    0x12700fcbf
   14000fcd6:	out    0xff,al
   14000fcd8:	jmp    rdx
   14000fcda:	loop   0x14000fcdb
   14000fcdc:	jmp    rax
   14000fcde:	loopne 0x14000fcdf
   14000fce0:	(bad)  
   14000fce1:	fstp   st(5)
   14000fce3:	(bad)  
   14000fce4:	(bad)  
   14000fce5:	fcmovu st,st(2)
   14000fce7:	(bad)  
   14000fce8:	call   rdi
   14000fcea:	xlat   BYTE PTR ds:[rbx]
   14000fceb:	push   QWORD PTR [rsi-0x65006f63]
   14000fcf1:	push   rax
   14000fcf2:	xor    bh,bh
   14000fcf4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fcf5:	sbb    rdi,r15
   14000fcf8:	fldcw  WORD PTR [rbx-0x22000088]
   14000fcfe:	stos   BYTE PTR es:[rdi],al
   14000fcff:	(bad)  
   14000fd00:	call   rbp
   14000fd02:	movabs ds:0x92c7fdff9bceffff,al
   14000fd0b:	push   rdi
   14000fd0d:	mov    esp,0xb0f1ff81
   14000fd12:	jno    0x14000fd13
   14000fd14:	in     al,dx
   14000fd15:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fd16:	(bad)  
   14000fd17:	jmp    rsi
   14000fd19:	fwait
   14000fd1a:	rex.WRX jmp rcx
   14000fd1d:	nop
   14000fd1e:	ds (bad) 
   14000fd20:	fild   DWORD PTR [rbx+0x7ad6ff2b]
   14000fd26:	sbb    eax,0xe70d1ff
   14000fd2b:	dec    esi
   14000fd2d:	jno    0x14000fd49
   14000fd2f:	jmp    FWORD PTR [rbp+0x73ff0c4b]
   14000fd35:	es add dl,ch
   14000fd38:	add    BYTE PTR [rax],al
   14000fd3a:	add    BYTE PTR [rdi+0x5a000000],bl
   14000fd40:	add    BYTE PTR [rax],al
   14000fd42:	add    BYTE PTR [rsi],dl
   14000fd44:	add    BYTE PTR [rax],al
   14000fd46:	add    BYTE PTR [rax],al
   14000fd48:	xor    DWORD PTR [rcx],esi
   14000fd4a:	xor    eax,ecx
   14000fd4c:	(bad)  
   14000fd4d:	(bad)  
   14000fd4e:	(bad)  
   14000fd4f:	call   rbx
   14000fd51:	rcl    ebx,cl
   14000fd53:	call   rcx
   14000fd55:	rcl    ecx,1
   14000fd57:	jmp    FWORD PTR [rdi+0x6a]
   14000fd5a:	push   0xffffffffffffffff
   14000fd5c:	jno    0x14000fdc9
   14000fd5e:	imul   edi,edi,0xffffffb9
   14000fd61:	mov    dh,0xb6
   14000fd63:	(bad)  
   14000fd64:	(bad)  
   14000fd65:	(bad)  
   14000fd66:	(bad)  
   14000fd67:	(bad)  
   14000fd68:	(bad)  
   14000fd69:	(bad)  
   14000fd6a:	(bad)  
   14000fd6b:	(bad)  
   14000fd6c:	(bad)  
   14000fd6d:	(bad)  
   14000fd6e:	(bad)  
   14000fd6f:	(bad)  
   14000fd70:	(bad)  
   14000fd71:	(bad)  
   14000fd72:	(bad)  
   14000fd73:	(bad)  
   14000fd74:	(bad)  
   14000fd75:	(bad)  
   14000fd76:	(bad)  
   14000fd77:	(bad)  
   14000fd78:	(bad)  
   14000fd79:	(bad)  
   14000fd7a:	(bad)  
   14000fd7b:	(bad)  
   14000fd7c:	(bad)  
   14000fd7d:	cli    
   14000fd7e:	cli    
   14000fd7f:	(bad)  
   14000fd80:	push   rdi
   14000fd82:	idiv   edi
   14000fd84:	push   rbp
   14000fd86:	cmc    
   14000fd87:	(bad)  
   14000fd88:	push   rdx
   14000fd8a:	repnz (bad) 
   14000fd8c:	(bad)  
   14000fd8d:	out    dx,eax
   14000fd8e:	out    dx,eax
   14000fd8f:	(bad)  
   14000fd90:	(bad)  
   14000fd91:	in     al,dx
   14000fd92:	in     al,dx
   14000fd93:	(bad)  
   14000fd94:	(bad)  
   14000fd95:	jmp    0x12700fd83
   14000fd9a:	out    0xff,al
   14000fd9c:	jmp    rdx
   14000fd9e:	loop   0x14000fd9f
   14000fda0:	jmp    rax
   14000fda2:	loopne 0x14000fda3
   14000fda4:	(bad)  
   14000fda5:	fstp   st(5)
   14000fda7:	(bad)  
   14000fda8:	(bad)  
   14000fda9:	fcmovu st,st(2)
   14000fdab:	(bad)  
   14000fdac:	mov    esi,0x9affbebe
   14000fdb1:	add    BYTE PTR [rax+0x71779bff],0xff
   14000fdb8:	cdq    
   14000fdb9:	cmp    eax,0xd9f2ff10
   14000fdbe:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fdbf:	(bad)  
   14000fdc0:	(bad)  
   14000fdc1:	jmp    0x12000fd7c
   14000fdc6:	lods   al,BYTE PTR ds:[rsi]
   14000fdc7:	(bad)  
   14000fdc8:	call   rsi
   14000fdca:	movabs ds:0x97cafeff9ccfffff,eax
   14000fdd3:	(bad)  
   14000fdd4:	stc    
   14000fdd5:	mov    edi,0xb4f3ff86
   14000fdda:	jne    0x14000fddb
   14000fddc:	in     eax,dx
   14000fddd:	test   eax,0x9ce7ff64
   14000fde2:	push   rcx
   14000fde3:	jmp    rdx
   14000fde5:	xchg   ebx,eax
   14000fde6:	rex.XB (bad) 
   14000fde8:	call   0x12a00528b
   14000fded:	movabs eax,ds:0x61bdff4796e4ff58
   14000fdf6:	(bad)  
   14000fdf7:	call   FWORD PTR [rcx+0x1e]
   14000fdfa:	add    ah,bl
   14000fdfc:	add    BYTE PTR [rax],al
   14000fdfe:	add    BYTE PTR [rax+0x28000000],al
   14000fe04:	add    BYTE PTR [rax],al
   14000fe06:	add    BYTE PTR [rax],al
   14000fe08:	xor    DWORD PTR [rcx],esi
   14000fe0a:	xor    eax,ecx
   14000fe0c:	xlat   BYTE PTR ds:[rbx]
   14000fe0d:	xlat   BYTE PTR ds:[rbx]
   14000fe0e:	xlat   BYTE PTR ds:[rbx]
   14000fe0f:	call   rbp
   14000fe11:	(bad)  
   14000fe12:	(bad)  
   14000fe13:	call   rbx
   14000fe15:	rcl    ebx,cl
   14000fe17:	jmp    FWORD PTR [rbp+0x6a]
   14000fe1a:	push   0xffffffffffffffff
   14000fe1c:	outs   dx,DWORD PTR ds:[rsi]
   14000fe1d:	push   0x6a
   14000fe1f:	dec    edx
   14000fe21:	mov    edi,0xffffffff
   14000fe27:	(bad)  
   14000fe28:	(bad)  
   14000fe29:	(bad)  
   14000fe2a:	(bad)  
   14000fe2b:	(bad)  
   14000fe2c:	(bad)  
   14000fe2d:	(bad)  
   14000fe2e:	(bad)  
   14000fe2f:	(bad)  
   14000fe30:	(bad)  
   14000fe31:	(bad)  
   14000fe32:	(bad)  
   14000fe33:	(bad)  
   14000fe34:	(bad)  
   14000fe35:	(bad)  
   14000fe36:	(bad)  
   14000fe37:	(bad)  
   14000fe38:	(bad)  
   14000fe39:	(bad)  
   14000fe3a:	(bad)  
   14000fe3b:	(bad)  
   14000fe3c:	(bad)  
   14000fe3d:	(bad)  
   14000fe3e:	(bad)  
   14000fe3f:	(bad)  
   14000fe40:	(bad)  
   14000fe41:	cli    
   14000fe42:	cli    
   14000fe43:	(bad)  
   14000fe44:	push   rdi
   14000fe46:	idiv   edi
   14000fe48:	push   rbp
   14000fe4a:	cmc    
   14000fe4b:	(bad)  
   14000fe4c:	push   rdx
   14000fe4e:	repnz (bad) 
   14000fe50:	(bad)  
   14000fe51:	out    dx,eax
   14000fe52:	out    dx,eax
   14000fe53:	(bad)  
   14000fe54:	(bad)  
   14000fe55:	in     al,dx
   14000fe56:	in     al,dx
   14000fe57:	(bad)  
   14000fe58:	(bad)  
   14000fe59:	jmp    0x12700fe47
   14000fe5e:	out    0xff,al
   14000fe60:	jmp    rdx
   14000fe62:	loop   0x14000fe63
   14000fe64:	jmp    rax
   14000fe66:	loopne 0x14000fe67
   14000fe68:	(bad)  
   14000fe69:	fstp   st(5)
   14000fe6b:	(bad)  
   14000fe6c:	mov    esp,0x98ffbcbc
   14000fe71:	jg     0x14000fef2
   14000fe73:	call   FWORD PTR [rdx-0x78007f80]
   14000fe79:	pop    rdx
   14000fe7a:	rex.WX jmp QWORD PTR [rsi-0x2600e5b3]
   14000fe81:	scas   eax,DWORD PTR es:[rdi]
   14000fe82:	jl     0x14000fe83
   14000fe84:	push   rsp
   14000fe86:	sar    edi,0xff
   14000fe89:	in     al,dx
   14000fe8a:	mov    ecx,0xaee1ffff
   14000fe8f:	(bad)  
   14000fe90:	(bad)  
   14000fe91:	fldenv [rsi-0x612e0001]
   14000fe97:	(bad)  
   14000fe98:	dec    esp
   14000fe9a:	cdq    
   14000fe9b:	(bad)  
   14000fe9c:	cli    
   14000fe9d:	ret    0xff8b
   14000fea0:	hlt    
   14000fea1:	mov    ch,0x78
   14000fea3:	push   rsp
   14000fea5:	mov    bh,0x79
   14000fea7:	(bad)  
   14000fea8:	dec    edi
   14000feaa:	pushf  
   14000feab:	(bad)  
   14000feac:	cld    
   14000fead:	(bad)  
   14000feae:	nop
   14000feaf:	push   rsp
   14000feb1:	mov    bh,0x7a
   14000feb3:	jmp    rdi
   14000feb5:	sahf   
   14000feb6:	push   rbx
   14000feb7:	call   QWORD PTR [rdx+0xfb0031]
   14000febd:	add    BYTE PTR [rax],al
   14000febf:	mov    WORD PTR [rax],es
   14000fec1:	add    BYTE PTR [rax],al
   14000fec3:	add    BYTE PTR cs:[rax],al
   14000fec6:	add    BYTE PTR [rax],al
   14000fec8:	xor    DWORD PTR [rcx],esi
   14000feca:	xor    eax,ecx
   14000fecc:	(bad)  
   14000fece:	fcos   
   14000fed0:	xlat   BYTE PTR ds:[rbx]
   14000fed1:	xlat   BYTE PTR ds:[rbx]
   14000fed2:	xlat   BYTE PTR ds:[rbx]
   14000fed3:	call   rbp
   14000fed5:	(bad)  
   14000fed6:	(bad)  
   14000fed7:	jmp    FWORD PTR [rbx+0x69]
   14000feda:	imul   edi,edi,0xff6a6a6d
   14000fee0:	xchg   edx,eax
   14000fee1:	(bad)  
   14000fee2:	(bad)  
   14000fee3:	(bad)  
   14000fee4:	mov    eax,0xdcffb5b5
   14000fee9:	fcmovu st,st(2)
   14000feeb:	(bad)  
   14000feec:	out    dx,al
   14000feed:	in     eax,dx
   14000feee:	in     eax,dx
   14000feef:	(bad)  
   14000fef0:	(bad)  
   14000fef1:	(bad)  
   14000fef2:	(bad)  
   14000fef3:	(bad)  
   14000fef4:	(bad)  
   14000fef5:	(bad)  
   14000fef6:	(bad)  
   14000fef7:	(bad)  
   14000fef8:	(bad)  
   14000fef9:	(bad)  
   14000fefa:	(bad)  
   14000fefb:	(bad)  
   14000fefc:	(bad)  
   14000fefd:	(bad)  
   14000fefe:	(bad)  
   14000feff:	(bad)  
   14000ff00:	(bad)  
   14000ff01:	(bad)  
   14000ff02:	(bad)  
   14000ff03:	(bad)  
   14000ff04:	(bad)  
   14000ff05:	cli    
   14000ff06:	cli    
   14000ff07:	(bad)  
   14000ff08:	push   rdi
   14000ff0a:	idiv   edi
   14000ff0c:	push   rbp
   14000ff0e:	cmc    
   14000ff0f:	(bad)  
   14000ff10:	push   rdx
   14000ff12:	repnz (bad) 
   14000ff14:	(bad)  
   14000ff15:	out    dx,eax
   14000ff16:	out    dx,eax
   14000ff17:	(bad)  
   14000ff18:	(bad)  
   14000ff19:	in     al,dx
   14000ff1a:	in     al,dx
   14000ff1b:	(bad)  
   14000ff1c:	(bad)  
   14000ff1d:	jmp    0x12700ff0b
   14000ff22:	out    0xff,al
   14000ff24:	jmp    rdx
   14000ff26:	loop   0x14000ff27
   14000ff28:	jmp    rax
   14000ff2a:	loopne 0x14000ff2b
   14000ff2c:	mov    ebx,0x96ffbbbb
   14000ff31:	jle    0x14000ffb1
   14000ff33:	call   FWORD PTR [rax+0x66ff7f7f]
   14000ff39:	pop    rdx
   14000ff3a:	pop    rdx
   14000ff3b:	(bad)  
   14000ff3c:	jns    0x14000ff6f
   14000ff3e:	or     eax,0x550b4fa
   14000ff43:	inc    esi
   14000ff45:	ins    BYTE PTR es:[rdi],dx
   14000ff46:	sbb    bh,bh
   14000ff48:	iret   
   14000ff49:	fwait
   14000ff4a:	fs (bad) 
   14000ff4c:	stc    
   14000ff4d:	jmp    0x12f00ff08
   14000ff52:	mov    ebx,0xb1e4ffff
   14000ff57:	(bad)  
   14000ff58:	(bad)  
   14000ff59:	fld    TBYTE PTR [rax-0x5f2c0001]
   14000ff5f:	(bad)  
   14000ff60:	dec    ebp
   14000ff62:	(bad)  
   14000ff63:	(bad)  
   14000ff64:	(bad)  
   14000ff65:	fsub   DWORD PTR [rdi+rdi*8-0x532001]
   14000ff6c:	(bad)  
   14000ff6d:	fisub  DWORD PTR [rdi-0x622f0001]
   14000ff73:	push   rdi
   14000ff75:	mov    esp,0x50aeff81
   14000ff7a:	sbb    bh,bh
   14000ff7c:	add    BYTE PTR [rax],al
   14000ff7e:	add    BYTE PTR [rdx+0x28000000],al
   14000ff84:	add    BYTE PTR [rax],al
   14000ff86:	add    BYTE PTR [rax],al
   14000ff88:	xor    BYTE PTR [rax],dh
   14000ff8a:	xor    cl,cl
   14000ff8c:	fcmovnu st,st(3)
   14000ff8e:	(bad)  
   14000ff90:	(bad)  
   14000ff92:	fcos   
   14000ff94:	xlat   BYTE PTR ds:[rbx]
   14000ff95:	xlat   BYTE PTR ds:[rbx]
   14000ff96:	xlat   BYTE PTR ds:[rbx]
   14000ff97:	jmp    FWORD PTR [rcx+0x67]
   14000ff9a:	jmp    FWORD PTR [ebx+0x69]
   14000ff9e:	imul   edi,edi,0xff6a6a6d
   14000ffa4:	outs   dx,DWORD PTR ds:[rsi]
   14000ffa5:	push   0x6a
   14000ffa7:	push   QWORD PTR [rcx+0x6b]
   14000ffaa:	imul   edi,edi,0x73
   14000ffad:	ins    DWORD PTR es:[rdi],dx
   14000ffae:	ins    DWORD PTR es:[rdi],dx
   14000ffaf:	push   QWORD PTR [rbp+rbp*2+0x6d]
   14000ffb3:	call   FWORD PTR [rax-0x54006d6e]
   14000ffb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ffba:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ffbb:	(bad)  
   14000ffbc:	mov    esp,0xdeffb7b7
   14000ffc1:	(bad)  
   14000ffc3:	(bad)  
   14000ffc4:	out    dx,eax
   14000ffc5:	in     al,dx
   14000ffc6:	in     al,dx
   14000ffc7:	(bad)  
   14000ffc8:	(bad)  
   14000ffc9:	cli    
   14000ffca:	cli    
   14000ffcb:	(bad)  
   14000ffcc:	push   rdi
   14000ffce:	idiv   edi
   14000ffd0:	push   rbp
   14000ffd2:	cmc    
   14000ffd3:	(bad)  
   14000ffd4:	push   rdx
   14000ffd6:	repnz (bad) 
   14000ffd8:	(bad)  
   14000ffd9:	out    dx,eax
   14000ffda:	out    dx,eax
   14000ffdb:	(bad)  
   14000ffdc:	(bad)  
   14000ffdd:	in     al,dx
   14000ffde:	in     al,dx
   14000ffdf:	(bad)  
   14000ffe0:	(bad)  
   14000ffe1:	jmp    0x12700ffcf
   14000ffe6:	out    0xff,al
   14000ffe8:	repnz fcmovu st,st(2)
   14000ffeb:	(bad)  
   14000ffec:	mov    ecx,0x94ffb9b9
   14000fff1:	jge    0x140010070
   14000fff3:	call   QWORD PTR [rsi+0x65ff7e7e]
   14000fff9:	pop    rcx
   14000fffa:	pop    rcx
   14000fffb:	(bad)  
   14000fffc:	jns    0x14001002f
   14000fffe:	or     eax,0x397ccff9
   140010003:	(bad)  
   140010004:	fild   DWORD PTR [rbp+rbp*1+0xc5ec0ff]
   14001000b:	jmp    QWORD PTR [rsi-0x4000ffc0]
   140010011:	jg     0x14001005f
   140010013:	push   rdx
   140010015:	fild   QWORD PTR [rdi+rdi*8-0x420f01]
   14001001c:	jmp    rdi
   14001001e:	mov    ah,0xff
   140010020:	(bad)  
   140010021:	(bad)  [rdx-0x420f0001]
   140010027:	(bad)  
   140010028:	push   rsp
   14001002a:	sar    edi,1
   14001002c:	push   rdx
   14001002e:	(bad)  
   14001002f:	(bad)  
   140010030:	jmp    rcx
   140010032:	scas   al,BYTE PTR es:[rdi]
   140010033:	(bad)  
   140010034:	dec    edi
   140010036:	pushf  
   140010037:	call   QWORD PTR [rbx+0xf90031]
   14001003d:	add    BYTE PTR [rax],al
   14001003f:	(bad)  
   140010040:	add    BYTE PTR [rax],al
   140010042:	add    BYTE PTR [rcx],bl
   140010044:	add    BYTE PTR [rax],al
   140010046:	add    BYTE PTR [rax],al
   140010048:	rex.WB
   140010049:	rex.WB
   14001004a:	rex.WB in al,0xdc
   14001004d:	(bad)  
   14001004f:	(bad)  
   140010050:	fcmovnu st,st(3)
   140010052:	(bad)  
   140010054:	retf   0xcaca
   140010057:	jmp    QWORD PTR [rax-0x74006061]
   14001005d:	mov    cl,BYTE PTR [rdx-0x7b7b7a01]
   140010063:	jmp    FWORD PTR [rbp+0x6a]
   140010066:	push   0xffffffffffffffff
   140010068:	outs   dx,DWORD PTR ds:[rsi]
   140010069:	push   0x6a
   14001006b:	push   QWORD PTR [rcx+0x6b]
   14001006e:	imul   edi,edi,0x73
   140010071:	ins    DWORD PTR es:[rdi],dx
   140010072:	ins    DWORD PTR es:[rdi],dx
   140010073:	push   QWORD PTR [rbp+rbp*2+0x6d]
   140010077:	push   QWORD PTR [rdi+0x6e]
   14001007a:	outs   dx,BYTE PTR ds:[rsi]
   14001007b:	(bad)  
   14001007c:	jns    0x1400100ed
   14001007e:	outs   dx,DWORD PTR ds:[rsi]
   14001007f:	(bad)  
   140010080:	jp     0x1400100f2
   140010082:	jo     0x140010083
   140010084:	jl     0x1400100f7
   140010086:	jno    0x140010087
   140010088:	jle    0x1400100fc
   14001008a:	jb     0x14001008b
   14001008c:	movabs al,ds:0xc9ffa5a5b1ff9494
   140010095:	mov    esp,0xd2e1ffbc
   14001009a:	sar    bh,cl
   14001009c:	mul    edi
   14001009e:	out    0xff,eax
   1400100a0:	(bad)  
   1400100a1:	in     al,dx
   1400100a2:	in     al,dx
   1400100a3:	(bad)  
   1400100a4:	(bad)  
   1400100a5:	jmp    0x11aef0093
   1400100aa:	(bad)  
   1400100ac:	mov    dl,0xaf
   1400100ae:	scas   eax,DWORD PTR es:[rdi]
   1400100af:	call   QWORD PTR [rdx-0x6b008384]
   1400100b5:	jge    0x140010134
   1400100b7:	jmp    QWORD PTR [rax+rbx*2+0x58]
   1400100bb:	push   QWORD PTR [rsi]
   1400100bd:	sbb    eax,0x3193c311
   1400100c2:	add    al,ch
   1400100c4:	mov    edx,0xe3ff2961
   1400100c9:	(bad)  
   1400100ca:	pop    rax
   1400100cb:	(bad)  
   1400100cc:	fisttp WORD PTR [rcx+rdi*1+0x1165c5ff]
   1400100d3:	(bad)  
   1400100d4:	mov    edx,0xc9ff0255
   1400100d9:	movsxd eax,DWORD PTR [rax]
   1400100db:	(bad)  
   1400100dc:	fistp  WORD PTR [rbx-0x200600b8]
   1400100e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400100e3:	(bad)  
   1400100e4:	(bad)  
   1400100e5:	call   rdx
   1400100e7:	(bad)  
   1400100e8:	(bad)  
   1400100e9:	(bad)  
   1400100ea:	cld    
   1400100eb:	(bad)  
   1400100ec:	(bad)  
   1400100ed:	jmp    rsp
   1400100ef:	(bad)  
   1400100f0:	(bad)  
   1400100f1:	in     al,dx
   1400100f2:	mov    edx,0x5d90d2ff
   1400100f7:	push   QWORD PTR [rcx+0x26]
   1400100fa:	add    cl,al
   1400100fc:	add    BYTE PTR [rax],al
   1400100fe:	add    BYTE PTR [rax],dh
   140010100:	add    BYTE PTR [rax],al
   140010102:	add    BYTE PTR [rdi],al
   140010104:	add    BYTE PTR [rax],al
   140010106:	add    BYTE PTR [rax],al
   140010108:	rex.W
   140010109:	rex.W
   14001010a:	rex.W push QWORD PTR [rbx-0x43004c4d]
   140010111:	mov    esp,0xdbdbffbc
   140010116:	(bad)  
   140010118:	(bad)  
   14001011a:	fcos   
   14001011c:	xlat   BYTE PTR ds:[rbx]
   14001011d:	xlat   BYTE PTR ds:[rbx]
   14001011e:	xlat   BYTE PTR ds:[rbx]
   14001011f:	call   rbp
   140010121:	(bad)  
   140010122:	(bad)  
   140010123:	call   rbx
   140010125:	rcl    ebx,cl
   140010127:	dec    ebx
   140010129:	retf   
   14001012a:	retf   
   14001012b:	(bad)  
   14001012c:	mov    eax,0xa5ffb7b7
   140010131:	movabs ds:0x858aff9d9da0ffa3,eax
   14001013a:	test   edi,edi
   14001013c:	xchg   BYTE PTR [rdi+0x7f],bh
   14001013f:	(bad)  
   140010140:	jns    0x1400101b1
   140010142:	outs   dx,DWORD PTR ds:[rsi]
   140010143:	(bad)  
   140010144:	jp     0x1400101b6
   140010146:	jo     0x140010147
   140010148:	jl     0x1400101bb
   14001014a:	jno    0x14001014b
   14001014c:	jle    0x1400101c0
   14001014e:	jb     0x14001014f
   140010150:	xor    BYTE PTR [rbx+0x73],0xff
   140010154:	xor    DWORD PTR [rsp+rsi*2-0x1],0xffffff84
   140010159:	jne    0x1400101d0
   14001015b:	inc    DWORD PTR [rsi-0x6f00898a]
   140010161:	jle    0x1400101e1
   140010163:	jmp    QWORD PTR [rdi-0x4a006b6c]
   140010169:	movabs ds:0x7b90ff90909dffa3,eax
   140010172:	jnp    0x140010173
   140010174:	xchg   edx,eax
   140010175:	jl     0x1400101f3
   140010177:	call   QWORD PTR [rcx+0x4a]
   14001017a:	rex.WX inc QWORD PTR [rax]
   14001017d:	add    BYTE PTR [rax],al
   14001017f:	pop    QWORD PTR [rax]
   140010181:	add    BYTE PTR [rax],al
   140010183:	(bad)  
   140010184:	xchg   esi,eax
   140010185:	xor    al,BYTE PTR [rax]
   140010187:	(bad)  
   140010188:	xchg   edi,eax
   140010189:	xor    al,BYTE PTR [rax]
   14001018b:	shr    BYTE PTR [rdi-0x2600e2ad],cl
   140010191:	mov    cs,WORD PTR [rdi-0x1]
   140010194:	jrcxz  0x14001012a
   140010196:	rex.RB call r8
   140010199:	jno    0x1400101b0
   14001019b:	(bad)  
   14001019c:	mov    ecx,0xa9ff0053
   1400101a1:	rex.WB or rax,0xffffffff80b3d9ff
   1400101a7:	(bad)  
   1400101a8:	stc    
   1400101a9:	repnz leave 
   1400101ab:	push   rdx
   1400101ad:	in     eax,0xb6
   1400101af:	dec    esp
   1400101b1:	nop
   1400101b2:	pop    rbp
   1400101b3:	dec    DWORD PTR [rsi+0x2adf002f]
   1400101b9:	(bad)  
   1400101ba:	add    BYTE PTR [rdx],bh
   1400101bc:	add    BYTE PTR [rax],al
   1400101be:	add    BYTE PTR [rax+rax*1],cl
   1400101c1:	add    BYTE PTR [rax],al
   1400101c3:	add    DWORD PTR [rax],eax
   1400101c5:	add    BYTE PTR [rax],al
   1400101c7:	add    BYTE PTR [rcx],dh
   1400101c9:	xor    DWORD PTR [rcx],esi
   1400101cb:	rex.X (bad) 
   1400101cd:	(bad)  
   1400101ce:	(bad)  
   1400101cf:	push   rdi
   1400101d0:	xor    BYTE PTR [rax],dh
   1400101d2:	xor    BYTE PTR [rax-0x49cececf],cl
   1400101d8:	pop    rcx
   1400101d9:	pop    rcx
   1400101da:	pop    rcx
   1400101db:	(bad)  
   1400101dc:	pop    rsp
   1400101dd:	pop    rsp
   1400101de:	pop    rsp
   1400101df:	inc    DWORD PTR [rbp-0x67007a7b]
   1400101e5:	cwde   
   1400101e6:	cwde   
   1400101e7:	jmp    FWORD PTR [rbx-0x2e005455]
   1400101ed:	rcl    ecx,1
   1400101ef:	call   rax
   1400101f1:	rcl    al,1
   1400101f3:	dec    esi
   1400101f5:	(bad)  
   1400101f6:	(bad)  
   1400101f7:	dec    esp
   1400101f9:	int3   
   1400101fa:	int3   
   1400101fb:	dec    ebx
   1400101fd:	retf   
   1400101fe:	retf   
   1400101ff:	dec    ecx
   140010201:	leave  
   140010202:	leave  
   140010203:	(bad)  
   140010204:	mov    ebp,0xb3ffbcbc
   140010209:	mov    al,0xb0
   14001020b:	jmp    QWORD PTR [rbp-0x5f005f60]
   140010211:	(bad)  
   140010212:	(bad)  
   140010213:	call   QWORD PTR [rcx-0x7000797a]
   140010219:	add    DWORD PTR [rbx+0x757584ff],0xffffffff
   140010220:	xchg   BYTE PTR [rsi+0x76],dh
   140010223:	dec    DWORD PTR [rax-0x75008889]
   140010229:	js     0x1400102a3
   14001022b:	dec    DWORD PTR [rcx+rdi*2+0x7a8eff79]
   140010232:	jp     0x140010233
   140010234:	nop
   140010235:	jnp    0x1400102b2
   140010237:	dec    DWORD PTR [rbx+0x45]
   14001023a:	rex.RB inc DWORD PTR [r8]
   14001023d:	add    BYTE PTR [rax],al
   14001023f:	mov    eax,DWORD PTR [rax]
   140010241:	add    BYTE PTR [rax],al
   140010243:	sub    eax,0x0
   140010248:	add    BYTE PTR [rax],al
   14001024a:	add    BYTE PTR [rax],al
   14001024c:	xchg   esp,eax
   14001024d:	xor    DWORD PTR [rax],eax
   14001024f:	rex.X xchg ebp,eax
   140010251:	xor    al,BYTE PTR [rax]
   140010253:	mov    bl,0xa4
   140010255:	rex.XB (bad) 
   140010257:	call   FWORD PTR [rbx-0x771af7c6]
   14001025d:	sub    eax,0x2776a100
   140010262:	add    BYTE PTR [rbx-0x6f],dl
   140010265:	xor    BYTE PTR [rax],al
   140010267:	xchg   edi,eax
   140010268:	xchg   esp,eax
   140010269:	xor    DWORD PTR [rax],eax
   14001026b:	(bad)
   14001026e:	add    bh,al
   140010270:	test   DWORD PTR [rax+rax*1],ebp
   140010273:	or     DWORD PTR [rax+0x18],0x2200
   14001027a:	add    BYTE PTR [rdi],al
   14001027c:	add    BYTE PTR [rax],al
   14001027e:	add    BYTE PTR [rcx],al
	...
   1400102a0:	xor    DWORD PTR [rcx],esi
   1400102a2:	xor    DWORD PTR [rcx],esp
   1400102a4:	xor    BYTE PTR [rax],dh
   1400102a6:	xor    BYTE PTR [rax+rsi*1+0x30],al
   1400102aa:	xor    BYTE PTR [rdi+0x30],dh
   1400102ad:	xor    BYTE PTR [rax],dh
   1400102af:	xchg   edi,eax
   1400102b0:	ds ds ds (bad) 
   1400102b4:	pop    rsi
   1400102b5:	pop    rsi
   1400102b6:	pop    rsi
   1400102b7:	jrcxz  0x140010330
   1400102b9:	ja     0x140010332
   1400102bb:	inc    DWORD PTR [rax-0x5a007f80]
   1400102c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400102c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400102c3:	push   QWORD PTR [rdi-0x38004849]
   1400102c9:	mov    edi,0xc5c5c5ff
   1400102cf:	inc    esp
   1400102d1:	(bad)  
   1400102d2:	(bad)  
   1400102d3:	inc    edx
   1400102d5:	ret    0xffc2
   1400102d8:	rol    al,0xc0
   1400102db:	(bad)  
   1400102dc:	mov    esi,0xb6ffbebe
   1400102e1:	mov    ah,0xb4
   1400102e3:	jmp    FWORD PTR [rsi-0x5b005556]
   1400102e9:	popf   
   1400102ea:	popf   
   1400102eb:	call   FWORD PTR [rdi-0x68006a6b]
   1400102f1:	mov    BYTE PTR [rax-0x7e7e6c01],cl
   1400102f7:	dec    DWORD PTR [rdx+0x45]
   1400102fa:	rex.RB inc DWORD PTR [r8]
   1400102fd:	add    BYTE PTR [rax],al
   1400102ff:	movsxd eax,DWORD PTR [rax]
   140010301:	add    BYTE PTR [rax],al
   140010303:	(bad)  
	...
   140010314:	xchg   esp,eax
   140010315:	xor    DWORD PTR [rax],eax
   140010317:	and    DWORD PTR [rax],eax
   140010319:	add    BYTE PTR [rax],al
   14001031b:	add    eax,DWORD PTR [rax]
   14001031d:	add    BYTE PTR [rax],al
   14001031f:	add    DWORD PTR [rax],eax
	...
   140010379:	add    BYTE PTR [rax],al
   14001037b:	add    BYTE PTR [rcx],dh
   14001037d:	xor    DWORD PTR [rcx],esi
   14001037f:	rex.X (bad) 
   140010381:	(bad)  
   140010382:	(bad)  
   140010383:	push   rdi
   140010384:	xor    BYTE PTR [rax],dh
   140010386:	xor    BYTE PTR [rax-0x49cececf],cl
   14001038c:	push   rbp
   14001038d:	push   rbp
   14001038e:	push   rbp
   14001038f:	(bad)  
   140010390:	(bad)  
   140010391:	(bad)  
   140010392:	(bad)  
   140010393:	(bad)  
   140010394:	jnp    0x140010411
   140010396:	jnp    0x140010397
   140010398:	mov    WORD PTR [rsp+rcx*4-0x62626201],cs
   14001039f:	(bad)  
   1400103a0:	mov    esi,0xbdffbebe
   1400103a5:	mov    ebp,0xbbbbffbd
   1400103aa:	mov    ebx,0xa0a0a0ff
   1400103af:	inc    DWORD PTR [rsi+0x6cff8686]
   1400103b5:	ins    BYTE PTR es:[rdi],dx
   1400103b6:	ins    BYTE PTR es:[rdi],dx
   1400103b7:	(bad)  
   1400103b8:	cmp    bh,BYTE PTR [rdx]
   1400103ba:	cmp    bl,cl
   1400103bc:	add    BYTE PTR [rax],al
   1400103be:	add    BYTE PTR [rax],ah
   1400103c0:	add    BYTE PTR [rax],al
   1400103c2:	add    BYTE PTR [rcx],cl
	...
   140010454:	xor    DWORD PTR [rcx],esi
   140010456:	xor    DWORD PTR [rcx],esp
   140010458:	xor    BYTE PTR [rax],dh
   14001045a:	xor    BYTE PTR [rcx+rsi*1+0x31],al
   14001045e:	xor    DWORD PTR [rsi-0x67cfcfd0],eax
   140010464:	cmp    eax,0x3cc63d3d
   140010469:	cmp    al,0x3c
   14001046b:	mov    ecx,0x8f2e2e2e
   140010470:	sub    DWORD PTR [rcx],ebp
   140010472:	sub    DWORD PTR [rax+0x1d],edx
   140010475:	sbb    eax,0x1c1d
   14001047a:	add    BYTE PTR [rax+rax*1],al
   14001047d:	add    BYTE PTR [rax],al
   14001047f:	add    DWORD PTR [rax],eax
	...
   140010705:	add    BYTE PTR [rax],al
   140010707:	add    bh,bh
   140010709:	(bad)  
   14001070a:	(bad)  
   14001070b:	(bad)  
   14001070c:	(bad)  
   14001070d:	inc    DWORD PTR [rax]
   14001070f:	add    al,bh
   140010711:	jg     0x140010712
   140010713:	(bad)  
   140010714:	(bad)  
   140010715:	inc    DWORD PTR [rax]
   140010717:	add    al,ah
   140010719:	ud0    edi,edi
   14001071c:	(bad)  
   14001071d:	inc    DWORD PTR [rax]
   14001071f:	add    al,al
   140010721:	add    bh,bh
   140010723:	(bad)  
   140010724:	(bad)  
   140010725:	inc    DWORD PTR [rax]
   140010727:	add    al,al
   140010729:	add    BYTE PTR [rdi],bl
   14001072b:	(bad)  
   14001072c:	(bad)  
   14001072d:	inc    DWORD PTR [rax]
   14001072f:	add    BYTE PTR [rax-0xff00],al
   140010735:	inc    DWORD PTR [rax]
   140010737:	add    BYTE PTR [rax-0xc10000],al
   14001073d:	inc    DWORD PTR [rax]
   14001073f:	add    BYTE PTR [rax-0xfd0000],al
   140010745:	inc    DWORD PTR [rax]
   140010747:	add    BYTE PTR [rax-0x1000000],al
   14001074d:	inc    DWORD PTR [rax]
   14001074f:	add    BYTE PTR [rax-0x1000000],al
   140010755:	inc    DWORD PTR [rax]
   140010757:	add    BYTE PTR [rax-0x1000000],al
   14001075d:	inc    DWORD PTR [rax]
   14001075f:	add    BYTE PTR [rax-0x1000000],al
   140010765:	inc    DWORD PTR [rax]
   140010767:	add    BYTE PTR [rax-0x1000000],al
   14001076d:	inc    DWORD PTR [rax]
   14001076f:	add    BYTE PTR [rax-0x1000000],al
   140010775:	inc    DWORD PTR [rax]
   140010777:	add    BYTE PTR [rax-0x1000000],al
   14001077d:	inc    DWORD PTR [rax]
   14001077f:	add    BYTE PTR [rax-0x1000000],al
   140010785:	inc    DWORD PTR [rax]
   140010787:	add    BYTE PTR [rax-0x1000000],al
   14001078d:	inc    DWORD PTR [rax]
   14001078f:	add    BYTE PTR [rax-0x1000000],al
   140010795:	inc    DWORD PTR [rax]
   140010797:	add    BYTE PTR [rax-0x1000000],al
   14001079d:	inc    DWORD PTR [rax]
   14001079f:	add    BYTE PTR [rax-0x1000000],al
   1400107a5:	inc    DWORD PTR [rax]
   1400107a7:	add    BYTE PTR [rax-0x1000000],al
   1400107ad:	inc    DWORD PTR [rax]
   1400107af:	add    BYTE PTR [rax-0x1000000],al
   1400107b5:	inc    DWORD PTR [rax]
   1400107b7:	add    BYTE PTR [rax-0x1000000],al
   1400107bd:	inc    DWORD PTR [rax]
   1400107bf:	add    BYTE PTR [rax],al
   1400107c1:	add    BYTE PTR [rax],al
   1400107c3:	add    bh,bh
   1400107c5:	inc    DWORD PTR [rax]
   1400107c7:	add    BYTE PTR [rax],al
   1400107c9:	add    BYTE PTR [rax],al
   1400107cb:	add    bh,bh
   1400107cd:	inc    DWORD PTR [rax]
   1400107cf:	add    BYTE PTR [rax],al
   1400107d1:	add    BYTE PTR [rax],al
   1400107d3:	add    bh,bh
   1400107d5:	inc    DWORD PTR [rax]
   1400107d7:	add    BYTE PTR [rax],al
   1400107d9:	add    BYTE PTR [rax],al
   1400107db:	add    bh,bh
   1400107dd:	inc    DWORD PTR [rax]
   1400107df:	add    BYTE PTR [rax],al
   1400107e1:	add    BYTE PTR [rax],al
   1400107e3:	add    BYTE PTR [rdi],cl
   1400107e5:	inc    DWORD PTR [rax]
   1400107e7:	add    BYTE PTR [rax],al
   1400107e9:	add    BYTE PTR [rax],al
   1400107eb:	add    BYTE PTR [rcx],al
   1400107ed:	inc    DWORD PTR [rax]
   1400107ef:	add    BYTE PTR [rax],al
   1400107f1:	add    BYTE PTR [rax],al
   1400107f3:	add    BYTE PTR [rax],al
   1400107f5:	jg     0x1400107f7
   1400107f7:	add    BYTE PTR [rax],al
   1400107f9:	add    BYTE PTR [rax],al
   1400107fb:	add    BYTE PTR [rax],al
   1400107fd:	(bad)  
   1400107fe:	add    BYTE PTR [rax],al
   140010800:	add    BYTE PTR [rax],al
   140010802:	add    BYTE PTR [rax],al
   140010804:	add    BYTE PTR [rdi],al
   140010806:	add    BYTE PTR [rax],al
   140010808:	add    BYTE PTR [rax],al
   14001080a:	add    BYTE PTR [rax],al
   14001080c:	add    BYTE PTR [rbx],al
   14001080e:	add    BYTE PTR [rax],al
   140010810:	add    BYTE PTR [rax],al
   140010812:	add    BYTE PTR [rax],al
   140010814:	add    BYTE PTR [rcx],al
   140010816:	add    BYTE PTR [rax],al
   140010818:	add    BYTE PTR [rax],al
   14001081a:	add    BYTE PTR [rax],al
   14001081c:	add    BYTE PTR [rcx],al
   14001081e:	add    BYTE PTR [rax],al
   140010820:	add    BYTE PTR [rax],al
   140010822:	add    BYTE PTR [rax],al
   140010824:	add    BYTE PTR [rcx],al
   140010826:	add    BYTE PTR [rax],al
   140010828:	add    BYTE PTR [rax],al
   14001082a:	add    BYTE PTR [rax],al
   14001082c:	add    BYTE PTR [rcx],al
   14001082e:	add    BYTE PTR [rax],al
   140010830:	add    BYTE PTR [rax],al
   140010832:	add    BYTE PTR [rax],al
   140010834:	add    BYTE PTR [rcx],al
   140010836:	add    BYTE PTR [rax],al
   140010838:	add    BYTE PTR [rax],al
   14001083a:	add    BYTE PTR [rax],al
   14001083c:	add    BYTE PTR [rcx],al
   14001083e:	add    BYTE PTR [rax],al
   140010840:	add    BYTE PTR [rax],al
   140010842:	add    BYTE PTR [rax],al
   140010844:	add    BYTE PTR [rcx],al
   140010846:	add    BYTE PTR [rax],al
   140010848:	add    BYTE PTR [rax],al
   14001084a:	add    BYTE PTR [rax],al
   14001084c:	add    BYTE PTR [rcx],al
   14001084e:	add    BYTE PTR [rax],al
   140010850:	add    BYTE PTR [rax],al
   140010852:	add    BYTE PTR [rcx],al
   140010854:	add    BYTE PTR [rbx],0x0
   140010857:	add    ah,bh
   140010859:	add    BYTE PTR [rax],al
   14001085b:	add    ebx,esp
   14001085d:	inc    DWORD PTR [rax]
   14001085f:	add    bh,bh
   140010861:	clc    
   140010862:	add    BYTE PTR [rcx],al
   140010864:	(bad)  
   140010865:	inc    DWORD PTR [rax]
   140010867:	add    bh,bh
   140010869:	jmp    rax
   14001086b:	add    edi,edi
   14001086d:	inc    DWORD PTR [rax]
   14001086f:	add    bh,bh
   140010871:	(bad)  
   140010872:	(bad)  
   140010873:	(bad)  
   140010874:	(bad)  
   140010875:	inc    DWORD PTR [rax]
   140010877:	add    bh,bh
   140010879:	(bad)  
   14001087a:	(bad)  
   14001087b:	(bad)  
   14001087c:	(bad)  
   14001087d:	inc    DWORD PTR [rax]
   14001087f:	add    bh,bh
   140010881:	(bad)  
   140010882:	(bad)  
   140010883:	(bad)  
   140010884:	(bad)  
   140010885:	inc    DWORD PTR [rax]
   140010887:	add    BYTE PTR [rax],ch
   140010889:	add    BYTE PTR [rax],al
   14001088b:	add    BYTE PTR [rax],ah
   14001088d:	add    BYTE PTR [rax],al
   14001088f:	add    BYTE PTR [rax+0x0],al
   140010892:	add    BYTE PTR [rax],al
   140010894:	add    DWORD PTR [rax],eax
   140010896:	and    BYTE PTR [rax],al
	...
   1400109bc:	add    BYTE PTR [rax],al
   1400109be:	add    BYTE PTR [rbx],al
   1400109c0:	add    BYTE PTR [rax],al
   1400109c2:	add    BYTE PTR [rip+0x15000000],cl        # 0x1550109c8
   1400109c8:	add    BYTE PTR [rax],al
   1400109ca:	add    BYTE PTR [rdi],cl
   1400109cc:	add    BYTE PTR [rax],al
   1400109ce:	add    BYTE PTR [rip+0x1000000],al        # 0x1410109d4
	...
   140010a34:	add    BYTE PTR [rax],al
   140010a36:	add    BYTE PTR [rcx],al
   140010a38:	add    BYTE PTR [rax],al
   140010a3a:	add    BYTE PTR [rdi],al
   140010a3c:	add    BYTE PTR [rax],al
   140010a3e:	add    BYTE PTR [rdi],bl
   140010a40:	add    BYTE PTR [rax],al
   140010a42:	add    BYTE PTR [rbp+0x0],al
   140010a45:	add    BYTE PTR [rax],al
   140010a47:	pop    rbx
   140010a48:	add    BYTE PTR [rax],al
   140010a4a:	add    BYTE PTR [rdi+0x0],cl
   140010a4d:	add    BYTE PTR [rax],al
   140010a4f:	(bad)  
   140010a50:	add    BYTE PTR [rax],al
   140010a52:	add    BYTE PTR [rax+rax*1],ah
   140010a55:	add    BYTE PTR [rax],al
   140010a57:	adc    eax,0xa000000
   140010a5c:	add    BYTE PTR [rax],al
   140010a5e:	add    BYTE PTR [rdx],al
	...
   140010ab4:	add    BYTE PTR [rax],al
   140010ab6:	add    BYTE PTR [rax+rax*1],al
   140010ab9:	add    BYTE PTR [rax],al
   140010abb:	and    bl,BYTE PTR [rax]
   140010abd:	sbb    BYTE PTR [rax],bl
   140010abf:	xchg   BYTE PTR [rsi],ah
   140010ac1:	es es (bad) 
   140010ac4:	adc    eax,0x5c11515
   140010ac9:	add    eax,0xa505
   140010ace:	add    BYTE PTR [rsi+0x76000000],cl
   140010ad4:	add    BYTE PTR [rax],al
   140010ad6:	add    BYTE PTR [rbx+0x0],bl
   140010ad9:	add    BYTE PTR [rax],al
   140010adb:	add    BYTE PTR [r8],al
   140010ade:	add    BYTE PTR [rax+rax*1],ch
   140010ae1:	add    BYTE PTR [rax],al
   140010ae3:	sbb    eax,0x10000000
   140010ae8:	add    BYTE PTR [rax],al
   140010aea:	add    BYTE PTR [rsi],al
   140010aec:	add    BYTE PTR [rax],al
   140010aee:	add    BYTE PTR [rcx],al
	...
   140010b34:	and    DWORD PTR [rcx],esp
   140010b36:	and    DWORD PTR [rcx],ebx
   140010b38:	xor    eax,0x6eaa3535
   140010b3d:	outs   dx,BYTE PTR ds:[rsi]
   140010b3e:	outs   dx,BYTE PTR ds:[rsi]
   140010b3f:	jmp    QWORD PTR [rbp-0x76006e6f]
   140010b45:	outs   dx,DWORD PTR ds:[rsi]
   140010b46:	outs   dx,DWORD PTR ds:[rsi]
   140010b47:	jmp    FWORD PTR [rbx+0x5a]
   140010b4a:	pop    rdx
   140010b4b:	inc    DWORD PTR [rbx+rdi*1+0x3b]
   140010b4f:	out    dx,al
   140010b50:	sbb    ebx,DWORD PTR [rbx]
   140010b52:	sbb    edx,esp
   140010b54:	or     eax,0xb60d0d
   140010b59:	add    BYTE PTR [rax],al
   140010b5b:	xchg   esi,eax
   140010b5c:	add    BYTE PTR [rax],al
   140010b5e:	add    BYTE PTR [rdx+0x6b000000],al
   140010b64:	add    BYTE PTR [rax],al
   140010b66:	add    BYTE PTR [rdx+0x0],dl
   140010b69:	add    BYTE PTR [rax],al
   140010b6b:	cmp    DWORD PTR [rax],eax
   140010b6d:	add    BYTE PTR [rax],al
   140010b6f:	add    BYTE PTR es:[rax],al
   140010b72:	add    BYTE PTR [rdi],dl
   140010b74:	add    BYTE PTR [rax],al
   140010b76:	add    BYTE PTR [rdx],cl
   140010b78:	add    BYTE PTR [rax],al
   140010b7a:	add    BYTE PTR [rdx],al
	...
   140010bb4:	sub    eax,0x7e492d2d
   140010bb9:	jle    0x140010c39
   140010bbb:	call   FWORD PTR [rsi-0x58006162]
   140010bc1:	mov    cs,WORD PTR [rsi-0x76765201]
   140010bc7:	push   QWORD PTR [rax-0x4c007475]
   140010bcd:	lea    ecx,[rbp-0x7d7d5a01]
   140010bd3:	inc    DWORD PTR [rsi+0x59ff6d6d]
   140010bd9:	rex.WR
   140010bda:	rex.WR imul QWORD PTR [rip+0x18e42a2a]        # 0x158e5360b
   140010be1:	sbb    BYTE PTR [rax],bl
   140010be3:	int3   
   140010be4:	add    eax,0xa60505
   140010be9:	add    BYTE PTR [rax],al
   140010beb:	xchg   ecx,eax
   140010bec:	add    BYTE PTR [rax],al
   140010bee:	add    BYTE PTR [rbx+0x0],bh
   140010bf1:	add    BYTE PTR [rax],al
   140010bf3:	pop    rdi
   140010bf4:	add    BYTE PTR [rax],al
   140010bf6:	add    BYTE PTR [rbx+0x0],al
   140010bf9:	add    BYTE PTR [rax],al
   140010bfb:	add    BYTE PTR cs:[rax],al
   140010bfe:	add    BYTE PTR [rsi],bl
   140010c00:	add    BYTE PTR [rax],al
   140010c02:	add    BYTE PTR [rax],dl
   140010c04:	add    BYTE PTR [rax],al
   140010c06:	add    BYTE PTR [rax+rax*1],al
	...
   140010c31:	add    BYTE PTR [rax],al
   140010c33:	add    BYTE PTR [rip+0xffffffff87492d2d],ch        # 0xc74a3966
   140010c39:	xchg   DWORD PTR [rdi-0x5e5e5e01],eax
   140010c3f:	jmp    QWORD PTR [rbp-0x51007273]
   140010c45:	xchg   ecx,eax
   140010c46:	xchg   ecx,eax
   140010c47:	(bad)  
   140010c48:	mov    ebx,0xb2ffa5a5
   140010c4d:	nop
   140010c4e:	nop
   140010c4f:	push   QWORD PTR [rbx-0x49007273]
   140010c55:	mov    cs,WORD PTR [rsi-0x6f6f4601]
   140010c5b:	(bad)  
   140010c5c:	mov    esp,0x9cff9191
   140010c61:	jp     0x140010cdd
   140010c63:	push   QWORD PTR [rcx+0x5d]
   140010c66:	pop    rbp
   140010c67:	inc    DWORD PTR [rdi+0x3f]
   140010c6a:	(bad)  
   140010c6b:	repz (bad) 
   140010c6d:	(bad)  
   140010c6e:	(bad)  
   140010c6f:	fimul  DWORD PTR [rip+0xb80d0d]        # 0x140b91982
   140010c75:	add    BYTE PTR [rax],al
   140010c77:	cwde   
   140010c78:	add    BYTE PTR [rax],al
   140010c7a:	add    BYTE PTR [rbp+0x6d000000],al
   140010c80:	add    BYTE PTR [rax],al
   140010c82:	add    BYTE PTR [rax+rax*1+0x0],al
   140010c86:	add    BYTE PTR [rax+rax*1],dl
	...
   140010cb1:	add    BYTE PTR [rax],al
   140010cb3:	add    BYTE PTR [rsp+rbp*1],ch
   140010cb6:	sub    al,0x4b
   140010cb8:	mov    cl,BYTE PTR [rdx-0x5b5b0076]
   140010cbe:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010cbf:	jmp    QWORD PTR [rsp+rcx*4-0x6a460074]
   140010cc6:	xchg   ebp,eax
   140010cc7:	push   rax
   140010cc9:	(bad)  
   140010cca:	(bad)  
   140010ccb:	(bad)  
   140010ccc:	call   0x11a00d79b
   140010cd1:	(bad)  
   140010cd2:	(bad)  
   140010cd3:	dec    ebx
   140010cd5:	mov    edx,0xa8c4ffba
   140010cda:	test   al,0xff
   140010cdc:	mov    esp,0xbcff9595
   140010ce1:	xchg   ecx,eax
   140010ce2:	xchg   ecx,eax
   140010ce3:	(bad)  
   140010ce4:	mov    edi,0xc2ff9292
   140010ce9:	xchg   esp,eax
   140010cea:	xchg   esp,eax
   140010ceb:	(bad)  
   140010cec:	mov    esp,0x90ff8f8f
   140010cf1:	jno    0x140010d64
   140010cf3:	jmp    FWORD PTR [rdx+0x57]
   140010cf6:	push   rdi
   140010cf7:	sti    
   140010cf8:	sub    ch,BYTE PTR cs:[rdx]
   140010cfb:	in     eax,0x18
   140010cfd:	sbb    BYTE PTR [rax],bl
   140010cff:	int3   
   140010d00:	add    BYTE PTR [rax],al
   140010d02:	add    BYTE PTR [rax+rax*1+0x0],bh
   140010d06:	add    BYTE PTR [rax],ch
	...
   140010d34:	sub    DWORD PTR [rcx],ebp
   140010d36:	sub    DWORD PTR [rax-0x74],edx
   140010d39:	mov    WORD PTR [rdi+rdi*8-0x585859],cs
   140010d40:	movabs ds:0xffffa1a1c1ff8c8c,al
   140010d49:	ret    0xffc2
   140010d4c:	(bad)  
   140010d4d:	mov    esi,0xb9ffffbe
   140010d52:	mov    ecx,0xb9b9fbff
   140010d57:	push   rsp
   140010d59:	ret    
   140010d5a:	ret    
   140010d5b:	(bad)  
   140010d5c:	out    dx,eax
   140010d5d:	rcl    al,1
   140010d5f:	jmp    rcx
   140010d61:	int3   
   140010d62:	int3   
   140010d63:	call   rsi
   140010d65:	rol    al,0xff
   140010d68:	int    0xab
   140010d6a:	stos   DWORD PTR es:[rdi],eax
   140010d6b:	inc    ecx
   140010d6d:	xchg   esp,eax
   140010d6e:	xchg   esp,eax
   140010d6f:	inc    ebp
   140010d71:	xchg   ebp,eax
   140010d72:	xchg   ebp,eax
   140010d73:	dec    eax
   140010d75:	xchg   edi,eax
   140010d76:	xchg   edi,eax
   140010d77:	dec    ebx
   140010d79:	cdq    
   140010d7a:	cdq    
   140010d7b:	push   QWORD PTR [rsi+0x60]
   140010d7e:	(bad)  
   140010d7f:	inc    DWORD PTR [rax]
   140010d81:	add    BYTE PTR [rax],al
   140010d83:	pop    QWORD PTR [rax]
   140010d85:	add    BYTE PTR [rax],al
   140010d87:	(bad)  
	...
   140010db4:	(bad)  
   140010db5:	(bad)  
   140010db6:	(bad)  
   140010db7:	mov    WORD PTR [rsp+riz*4-0x5656005c],fs
   140010dbe:	test   eax,0x84849eff
   140010dc3:	dec    edi
   140010dc5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010dc6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010dc7:	(bad)  
   140010dc8:	inc    esi
   140010dca:	(bad)  
   140010dcb:	(bad)  
   140010dcc:	inc    edx
   140010dce:	ret    0xffff
   140010dd1:	mov    esi,0xb9ffffbe
   140010dd6:	mov    ecx,0xb4b4ffff
   140010ddb:	(bad)  
   140010ddc:	push   QWORD PTR [rax-0x54000050]
   140010de2:	stos   DWORD PTR es:[rdi],eax
   140010de3:	(bad)  
   140010de4:	std    
   140010de5:	mov    al,0xb0
   140010de7:	(bad)  
   140010de8:	cli    
   140010de9:	rol    ecx,0xff
   140010dec:	test   bh,0xcf
   140010def:	(bad)  
   140010df0:	(bad)  
   140010df1:	(bad)  
   140010df2:	(bad)  
   140010df3:	(bad)  
   140010df4:	ffreep st(4)
   140010df6:	(bad)  
   140010df7:	dec    eax
   140010df9:	xchg   edi,eax
   140010dfa:	xchg   edi,eax
   140010dfb:	(bad)  
   140010dfc:	jg     0x140010e64
   140010dfe:	inc    WORD PTR [rax]
   140010e01:	add    BYTE PTR [rax],al
   140010e03:	pop    QWORD PTR [rax]
   140010e05:	add    BYTE PTR [rax],al
   140010e07:	(bad)  
	...
   140010e34:	(bad)  
   140010e35:	(bad)  
   140010e36:	(bad)  
   140010e37:	mov    WORD PTR [rdi-0x53005051],gs
   140010e3d:	lods   al,BYTE PTR ds:[rsi]
   140010e3e:	lods   al,BYTE PTR ds:[rsi]
   140010e3f:	call   FWORD PTR [rbx-0x31007e7f]
   140010e45:	test   al,0xa8
   140010e47:	(bad)  
   140010e48:	dec    ebx
   140010e4a:	retf   
   140010e4b:	(bad)  
   140010e4c:	inc    edi
   140010e4e:	(bad)  
   140010e4f:	(bad)  
   140010e50:	inc    edx
   140010e52:	ret    0xffff
   140010e55:	mov    esi,0xb9ffffbe
   140010e5a:	mov    ecx,0xb4b4ffff
   140010e5f:	(bad)  
   140010e60:	push   QWORD PTR [rax-0x54000050]
   140010e66:	stos   DWORD PTR es:[rdi],eax
   140010e67:	(bad)  
   140010e68:	jmp    QWORD PTR [rdi-0x5d000059]
   140010e6e:	movabs ds:0xd2d2feff9e9effff,al
   140010e77:	inc    ebp
   140010e79:	xchg   ebp,eax
   140010e7a:	xchg   ebp,eax
   140010e7b:	(bad)  
   140010e7c:	jge    0x140010ee3
   140010e7e:	inc    DWORD PTR gs:[rax]
   140010e81:	add    BYTE PTR [rax],al
   140010e83:	pop    QWORD PTR [rax]
   140010e85:	add    BYTE PTR [rax],al
   140010e87:	(bad)  
	...
   140010eb4:	(bad)  
   140010eb5:	(bad)  
   140010eb6:	(bad)  
   140010eb7:	mov    WORD PTR [rcx-0x50004e4f],?
   140010ebd:	scas   eax,DWORD PTR es:[rdi]
   140010ebe:	scas   eax,DWORD PTR es:[rdi]
   140010ebf:	call   QWORD PTR [rdi-0x32008081]
   140010ec5:	test   eax,0xcfffffa9
   140010eca:	iret   
   140010ecb:	(bad)  
   140010ecc:	dec    ebx
   140010ece:	retf   
   140010ecf:	(bad)  
   140010ed0:	inc    edi
   140010ed2:	(bad)  
   140010ed3:	(bad)  
   140010ed4:	inc    edx
   140010ed6:	ret    0xffff
   140010ed9:	mov    esi,0xbaffffbe
   140010ede:	mov    edx,0xb4b4ffff
   140010ee3:	(bad)  
   140010ee4:	push   QWORD PTR [rax-0x54000050]
   140010eea:	stos   DWORD PTR es:[rdi],eax
   140010eeb:	(bad)  
   140010eec:	jmp    QWORD PTR [rdi-0x5d000059]
   140010ef2:	movabs ds:0x9494c1ffcbcbfbff,al
   140010efb:	(bad)  
   140010efc:	jl     0x140010f62
   140010efe:	inc    DWORD PTR fs:[rax]
   140010f01:	add    BYTE PTR [rax],al
   140010f03:	pop    QWORD PTR [rax]
   140010f05:	add    BYTE PTR [rax],al
   140010f07:	(bad)  
	...
   140010f34:	cs cs mov ?,WORD PTR cs:[rsp+rsi*4-0x4e4e004c]
   140010f3e:	mov    cl,0xff
   140010f40:	xchg   ebp,eax
   140010f41:	jge    0x140010fc0
   140010f43:	dec    ebx
   140010f45:	stos   DWORD PTR es:[rdi],eax
   140010f46:	stos   DWORD PTR es:[rdi],eax
   140010f47:	(bad)  
   140010f48:	call   rsp
   140010f4a:	(bad)  
   140010f4b:	(bad)  
   140010f4c:	dec    edi
   140010f4e:	iret   
   140010f4f:	(bad)  
   140010f50:	dec    ebx
   140010f52:	retf   
   140010f53:	(bad)  
   140010f54:	inc    edi
   140010f56:	(bad)  
   140010f57:	(bad)  
   140010f58:	inc    edx
   140010f5a:	ret    0xffff
   140010f5d:	mov    esi,0xbaffffbe
   140010f62:	mov    edx,0xb4b4ffff
   140010f67:	(bad)  
   140010f68:	push   QWORD PTR [rax-0x54000050]
   140010f6e:	stos   DWORD PTR es:[rdi],eax
   140010f6f:	(bad)  
   140010f70:	jmp    QWORD PTR [rdi-0x260a0059]
   140010f76:	fcos   
   140010f78:	mov    edi,0x7aff9292
   140010f7d:	movsxd esp,DWORD PTR [rbx-0x1]
   140010f80:	add    BYTE PTR [rax],al
   140010f82:	add    BYTE PTR [rdi+0x2f000000],cl
	...
   140010fb4:	cmp    al,0x3c
   140010fb6:	cmp    al,0x9d
   140010fb8:	mov    bh,0xb7
   140010fba:	mov    bh,0xff
   140010fbc:	mov    ah,0xb4
   140010fbe:	mov    ah,0xff
   140010fc0:	xchg   ecx,eax
   140010fc1:	jnp    0x14001103e
   140010fc3:	(bad)  
   140010fc4:	fadd   st(0),st
   140010fc6:	sar    bh,0xff
   140010fc9:	(bad)  
   140010fcb:	(bad)  
   140010fcc:	call   rsp
   140010fce:	(bad)  
   140010fcf:	(bad)  
   140010fd0:	dec    edi
   140010fd2:	iret   
   140010fd3:	(bad)  
   140010fd4:	dec    ebx
   140010fd6:	retf   
   140010fd7:	(bad)  
   140010fd8:	inc    edi
   140010fda:	(bad)  
   140010fdb:	(bad)  
   140010fdc:	inc    edx
   140010fde:	ret    0xffff
   140010fe1:	mov    esi,0xbaffffbe
   140010fe6:	mov    edx,0xb4b4ffff
   140010feb:	(bad)  
   140010fec:	push   QWORD PTR [rax-0x53000050]
   140010ff2:	lods   al,BYTE PTR ds:[rsi]
   140010ff3:	push   rax
   140010ff5:	fcmovu st,st(2)
   140010ff7:	(bad)  
   140010ff8:	mov    esp,0x78ff9191
   140010ffd:	(bad)  
   140011002:	add    BYTE PTR [rdi+0x2f000000],cl
	...
   140011034:	pop    rsp
   140011035:	pop    rsp
   140011036:	pop    rsp
   140011037:	enter  0xbaba,0xba
   14001103b:	jmp    FWORD PTR [rbp-0x71005758]
   140011041:	jp     0x1400110bd
   140011043:	jmp    rbx
   140011045:	mov    edi,0xddddffff
   14001104b:	(bad)  
   14001104c:	(bad)  
   14001104d:	(bad)  
   14001104f:	(bad)  
   140011050:	call   rsp
   140011052:	(bad)  
   140011053:	(bad)  
   140011054:	call   rax
   140011056:	sar    bh,1
   140011058:	dec    ebx
   14001105a:	retf   
   14001105b:	(bad)  
   14001105c:	inc    edi
   14001105e:	(bad)  
   14001105f:	(bad)  
   140011060:	inc    edx
   140011062:	ret    0xffff
   140011065:	mov    esi,0xbaffffbe
   14001106a:	mov    edx,0xb4b4ffff
   14001106f:	(bad)  
   140011070:	push   QWORD PTR [rax-0x29140050]
   140011076:	(bad)  
   140011077:	(bad)  
   140011078:	mov    eax,0x77ff8f8f
   14001107d:	(bad)  
   140011082:	add    BYTE PTR [rdi+0x2f000000],cl
	...
   1400110b4:	pop    rbp
   1400110b5:	pop    rbp
   1400110b6:	pop    rbp
   1400110b7:	enter  0xbcbc,0xbc
   1400110bb:	jmp    FWORD PTR [rsi-0x73005657]
   1400110c1:	jns    0x14001113c
   1400110c3:	jmp    rbx
   1400110c5:	retf   
   1400110c6:	retf   
   1400110c7:	(bad)  
   1400110c8:	jmp    rcx
   1400110ca:	loope  0x1400110cb
   1400110cc:	(bad)  
   1400110cd:	fstp   st(5)
   1400110cf:	(bad)  
   1400110d0:	(bad)  
   1400110d1:	(bad)  
   1400110d3:	(bad)  
   1400110d4:	call   rsp
   1400110d6:	(bad)  
   1400110d7:	(bad)  
   1400110d8:	call   rax
   1400110da:	sar    bh,1
   1400110dc:	dec    ebx
   1400110de:	retf   
   1400110df:	(bad)  
   1400110e0:	inc    edi
   1400110e2:	(bad)  
   1400110e3:	(bad)  
   1400110e4:	inc    edx
   1400110e6:	ret    0xffff
   1400110e9:	mov    esi,0xbaffffbe
   1400110ee:	mov    edx,0xb4b4ffff
   1400110f3:	jmp    rdi
   1400110f5:	rcl    ebx,cl
   1400110f7:	push   QWORD PTR [rsi+0x75ff8e8e]
   1400110fd:	(bad)  
   1400110fe:	(bad)  
   1400110ff:	inc    DWORD PTR [rax]
   140011101:	add    BYTE PTR [rax],al
   140011103:	pop    QWORD PTR [rax]
   140011105:	add    BYTE PTR [rax],al
   140011107:	(bad)  
	...
   140011134:	pop    rsi
   140011135:	pop    rsi
   140011136:	pop    rsi
   140011137:	enter  0xbfbf,0xbf
   14001113b:	jmp    FWORD PTR [rdi-0x77005455]
   140011141:	ja     0x1400111ba
   140011143:	jmp    rdx
   140011145:	(bad)  
   140011146:	(bad)  
   140011147:	(bad)  
   140011148:	jmp    rsi
   14001114a:	out    0xff,al
   14001114c:	jmp    rcx
   14001114e:	loope  0x14001114f
   140011150:	(bad)  
   140011151:	fstp   st(5)
   140011153:	(bad)  
   140011154:	(bad)  
   140011155:	(bad)  
   140011157:	(bad)  
   140011158:	call   rsp
   14001115a:	(bad)  
   14001115b:	(bad)  
   14001115c:	call   rax
   14001115e:	sar    bh,1
   140011160:	dec    ebx
   140011162:	retf   
   140011163:	(bad)  
   140011164:	inc    edi
   140011166:	(bad)  
   140011167:	(bad)  
   140011168:	inc    ebx
   14001116a:	ret    
   14001116b:	(bad)  
   14001116c:	(bad)  
   14001116d:	mov    esi,0xbaffffbe
   140011172:	mov    edx,0xd0d0e2ff
   140011177:	push   QWORD PTR [rdx+0x74ff8c8c]
   14001117d:	(bad)  
   14001117e:	(bad)  
   14001117f:	inc    DWORD PTR [rax]
   140011181:	add    BYTE PTR [rax],al
   140011183:	pop    QWORD PTR [rax]
   140011185:	add    BYTE PTR [rax],al
   140011187:	(bad)  
	...
   1400111b4:	pop    rsi
   1400111b5:	pop    rsi
   1400111b6:	pop    rsi
   1400111b7:	retf   0xc1c1
   1400111ba:	sar    edi,0xb0
   1400111bd:	lods   eax,DWORD PTR ds:[rsi]
   1400111be:	lods   eax,DWORD PTR ds:[rsi]
   1400111bf:	inc    DWORD PTR [rbp-0x1c00898a]
   1400111c5:	(bad)  
   1400111c6:	(bad)  
   1400111c7:	(bad)  
   1400111c8:	(bad)  
   1400111c9:	jmp    0x1400111b6
   1400111cb:	(bad)  
   1400111cc:	jmp    rsi
   1400111ce:	out    0xff,al
   1400111d0:	jmp    rdx
   1400111d2:	loop   0x1400111d3
   1400111d4:	mov    esp,0xa6ff5c78
   1400111d9:	(bad)  
   1400111da:	xor    eax,0x1d60bcff
   1400111df:	(bad)  
   1400111e0:	mov    esp,0xbfff2360
   1400111e5:	gs xor bh,bh
   1400111e8:	ret    0x4a6d
   1400111eb:	push   rdx
   1400111ed:	mov    al,0xaa
   1400111ef:	(bad)  
   1400111f0:	(bad)  
   1400111f1:	mov    esi,0xbfd7ffbe
   1400111f6:	mov    edi,0x8b8bafff
   1400111fb:	push   QWORD PTR [rdx+0x60]
   1400111fe:	(bad)  
   1400111ff:	inc    DWORD PTR [rax]
   140011201:	add    BYTE PTR [rax],al
   140011203:	lea    eax,[rax]
   140011205:	add    BYTE PTR [rax],al
   140011207:	(bad)  
   140011208:	add    BYTE PTR [rax],al
   14001120a:	add    BYTE PTR [rcx],al
	...
   140011234:	ja     0x1400112ad
   140011236:	ja     0x14001122a
   140011238:	(bad)
   14001123b:	jmp    FWORD PTR [rbp-0x7c005657]
   140011241:	je     0x1400112b7
   140011243:	(bad)  
   140011244:	push   rsp
   140011246:	hlt    
   140011247:	(bad)  
   140011248:	push   rax
   14001124a:	lock (bad) 
   14001124c:	(bad)  
   14001124d:	jmp    0x14001123a
   14001124f:	(bad)  
   140011250:	jmp    rsi
   140011252:	out    0xff,al
   140011254:	fldenv [rcx-0x71290072]
   14001125a:	pop    rbx
   14001125b:	push   rsp
   14001125d:	mov    dh,0x78
   14001125f:	(bad)  
   140011260:	jmp    0x12a006c07
   140011265:	movabs eax,ds:0x53b9ff1575d3ff58
   14001126e:	add    bh,bh
   140011270:	mov    ecx,0xbeff305d
   140011275:	xchg   ebx,eax
   140011276:	xchg   edi,edi
   140011278:	lods   al,BYTE PTR ds:[rsi]
   140011279:	mov    DWORD PTR [rcx+0x5f5f71ff],ecx
   14001127f:	inc    DWORD PTR [rax]
   140011281:	add    BYTE PTR [rax],al
   140011283:	xchg   edi,eax
   140011284:	add    BYTE PTR [rax],al
   140011286:	add    BYTE PTR [rbx+0x0],dl
   140011289:	add    BYTE PTR [rax],al
   14001128b:	(bad)  
   14001128c:	add    BYTE PTR [rax],al
   14001128e:	add    BYTE PTR [rip+0x13000000],ah        # 0x153011294
   140011294:	add    BYTE PTR [rax],al
   140011296:	add    BYTE PTR [rax+rax*1],al
	...
   1400112b1:	add    BYTE PTR [rax],al
   1400112b3:	add    BYTE PTR [rsi+0x7e],bh
   1400112b6:	jle    0x1400112b7
   1400112b8:	mov    edi,0x9ba1ffc7
   1400112be:	fwait
   1400112bf:	(bad)  
   1400112c0:	jg     0x140011334
   1400112c2:	jb     0x1400112c3
   1400112c4:	(bad)  
   1400112c5:	clc    
   1400112c6:	clc    
   1400112c7:	(bad)  
   1400112c8:	push   rsp
   1400112ca:	hlt    
   1400112cb:	(bad)  
   1400112cc:	push   rax
   1400112ce:	lock (bad) 
   1400112d0:	(bad)  
   1400112d1:	jmp    0x1400112be
   1400112d3:	(bad)  
   1400112d4:	jmp    rsi
   1400112d6:	out    0xff,al
   1400112d8:	in     al,dx
   1400112d9:	ret    0xffb8
   1400112dc:	(bad)  
   1400112dd:	jnp    0x14001132b
   1400112df:	(bad)  
   1400112e0:	(bad)  
   1400112e1:	fild   QWORD PTR [rbx-0x602a0301]
   1400112e7:	(bad)  
   1400112e8:	jmp    0x14001128e
   1400112ea:	pop    rbp
   1400112eb:	(bad)  
   1400112ec:	fimul  WORD PTR [rbx+0x75d3ff37]
   1400112f2:	adc    eax,0x25bc0ff
   1400112f7:	jmp    FWORD PTR [rbx+0x65ff114e]
   1400112fd:	cmp    DWORD PTR [rip+0x40df7],esp        # 0x1400520fa
   140011303:	mov    dh,0x0
   140011305:	add    BYTE PTR [rax],al
   140011307:	fwait
   140011308:	add    BYTE PTR [rax],al
   14001130a:	add    BYTE PTR [rbp+0x7a000000],cl
   140011310:	add    BYTE PTR [rax],al
   140011312:	add    BYTE PTR [rbp+0x0],dl
   140011315:	add    BYTE PTR [rax],al
   140011317:	xor    DWORD PTR [rax],eax
   140011319:	add    BYTE PTR [rax],al
   14001131b:	sbb    BYTE PTR [rax],al
   14001131d:	add    BYTE PTR [rax],al
   14001131f:	or     DWORD PTR [rax],eax
   140011321:	add    BYTE PTR [rax],al
   140011323:	add    DWORD PTR [rax],eax
	...
   140011331:	add    BYTE PTR [rax],al
   140011333:	add    DWORD PTR [rdi+0x7f],edi
   140011336:	jg     0x140011337
   140011338:	retf   0xcaca
   14001133b:	jmp    QWORD PTR [rcx+0x7cff9c9c]
   140011341:	jno    0x1400113b4
   140011343:	(bad)  
   140011344:	(bad)  
   140011345:	std    
   140011346:	std    
   140011347:	(bad)  
   140011348:	(bad)  
   140011349:	stc    
   14001134a:	stc    
   14001134b:	(bad)  
   14001134c:	push   rsp
   14001134e:	hlt    
   14001134f:	(bad)  
   140011350:	push   rax
   140011352:	lock (bad) 
   140011354:	(bad)  
   140011355:	jmp    0x140011342
   140011357:	(bad)  
   140011358:	jmp    rdi
   14001135a:	out    0xff,eax
   14001135c:	in     al,dx
   14001135d:	ret    0xffb8
   140011360:	mov    edi,0xf2ff4c7c
   140011365:	fldenv [rsi-0x5c280101]
   14001136b:	(bad)  
   14001136c:	stc    
   14001136d:	ret    0xff8a
   140011370:	out    dx,al
   140011371:	stos   BYTE PTR es:[rdi],al
   140011372:	addr32 jmp rdx
   140011375:	xchg   ebx,eax
   140011376:	rex.XB call r14
   140011379:	jns    0x140011398
   14001137b:	inc    edi
   14001137d:	movsxd eax,DWORD PTR [rip+0x54db1ff]        # 0x1454ec582
   140011383:	push   QWORD PTR [rbx-0x6700fdb2]
   140011389:	cmp    al,0x0
   14001138b:	test   DWORD PTR [rsi+0x17],0xd100
   140011392:	add    BYTE PTR [rcx-0x7b000000],ah
   140011398:	add    BYTE PTR [rax],al
   14001139a:	add    BYTE PTR [rcx+0x0],ah
   14001139d:	add    BYTE PTR [rax],al
   14001139f:	cmp    eax,0x1f000000
   1400113a4:	add    BYTE PTR [rax],al
   1400113a6:	add    BYTE PTR [rbx],cl
   1400113a8:	add    BYTE PTR [rax],al
   1400113aa:	add    BYTE PTR [rdx],al
   1400113ac:	add    BYTE PTR [rax],al
   1400113ae:	add    BYTE PTR [rax],al
   1400113b0:	add    BYTE PTR [rax],al
   1400113b2:	add    BYTE PTR [rcx+rax*4],al
   1400113b5:	add    DWORD PTR [rcx-0x33333301],0x9d9da1ff
   1400113bf:	(bad)  
   1400113c0:	jns    0x140011431
   1400113c2:	outs   dx,DWORD PTR ds:[rsi]
   1400113c3:	(bad)  
   1400113c4:	(bad)  
   1400113c5:	(bad)  
   1400113c6:	(bad)  
   1400113c7:	(bad)  
   1400113c8:	(bad)  
   1400113c9:	std    
   1400113ca:	std    
   1400113cb:	(bad)  
   1400113cc:	(bad)  
   1400113cd:	stc    
   1400113ce:	stc    
   1400113cf:	(bad)  
   1400113d0:	push   rsp
   1400113d2:	hlt    
   1400113d3:	(bad)  
   1400113d4:	push   rax
   1400113d6:	lock (bad) 
   1400113d8:	(bad)  
   1400113d9:	in     al,dx
   1400113da:	in     al,dx
   1400113db:	(bad)  
   1400113dc:	jmp    rdi
   1400113de:	out    0xff,eax
   1400113e0:	jmp    rdx
   1400113e2:	loop   0x1400113e3
   1400113e4:	fstp   DWORD PTR [rsi-0x7b390075]
   1400113ea:	pop    rax
   1400113eb:	jmp    rsi
   1400113ed:	mov    ebp,0xdcffff8a
   1400113f2:	test   eax,0x91c8fbff
   1400113f7:	push   rcx
   1400113f9:	mov    cl,0x70
   1400113fb:	jmp    rbp
   1400113fd:	cdq    
   1400113fe:	rex.WR jmp rdx
   140011401:	xchg   ebx,eax
   140011402:	rex.XB (bad) 
   140011404:	fisttp QWORD PTR [rax+0x75d3ff32]
   14001140a:	adc    eax,0x563c7ff
   14001140f:	jmp    QWORD PTR [rbp+0x5cfb0044]
   140011415:	and    DWORD PTR [rax],eax
   140011417:	fcomp  QWORD PTR [rcx+rcx*1]
   14001141a:	add    BYTE PTR [rbx-0x71000000],dh
   140011420:	add    BYTE PTR [rax],al
   140011422:	add    BYTE PTR [rbx+0x0],ch
   140011425:	add    BYTE PTR [rax],al
   140011427:	add    BYTE PTR [rax],al
   14001142a:	add    BYTE PTR [rcx],bl
   14001142c:	add    BYTE PTR [rax],al
   14001142e:	add    BYTE PTR [rcx+riz*1],al
   140011431:	and    DWORD PTR [rcx],esp
   140011433:	sbb    DWORD PTR [rdx-0x30007d7e],eax
   140011439:	iret   
   14001143a:	iret   
   14001143b:	jmp    QWORD PTR [rax-0x78006263]
   140011441:	add    BYTE PTR [rax-0x1],0xff
   140011448:	(bad)  
   140011449:	(bad)  
   14001144a:	(bad)  
   14001144b:	(bad)  
   14001144c:	(bad)  
   14001144d:	std    
   14001144e:	std    
   14001144f:	(bad)  
   140011450:	(bad)  
   140011451:	stc    
   140011452:	stc    
   140011453:	(bad)  
   140011454:	push   rsp
   140011456:	hlt    
   140011457:	(bad)  
   140011458:	push   rax
   14001145a:	lock (bad) 
   14001145c:	(bad)  
   14001145d:	in     al,dx
   14001145e:	in     al,dx
   14001145f:	(bad)  
   140011460:	jmp    rdi
   140011462:	out    0xff,eax
   140011464:	jmp    rdx
   140011466:	loop   0x140011467
   140011468:	(bad)  
   140011469:	(bad)  
   14001146b:	jmp    rsi
   14001146d:	mov    al,0xa3
   14001146f:	(bad)  
   140011470:	mov    edi,0xd9ff4d74
   140011475:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011476:	je     0x140011477
   140011478:	jmp    rcx
   14001147a:	scas   al,BYTE PTR es:[rdi]
   14001147b:	(bad)  
   14001147c:	std    
   14001147d:	(bad)  
   14001147e:	(bad)  
   14001147f:	(bad)  
   140011480:	stc    
   140011481:	mov    edi,0xacefff86
   140011486:	imul   edi,edi,0xff519ce7
   14001148c:	fimul  WORD PTR [rbx+0x78d5ff37]
   140011492:	sbb    bh,bh
   140011494:	int3   
   140011495:	imul   ecx,DWORD PTR [rdx],0x50b6ff
   14001149b:	push   QWORD PTR [rcx+0x2a]
   14001149e:	add    ch,ah
   1400114a0:	(bad)  
   1400114a1:	or     eax,0xbc00
   1400114a6:	add    BYTE PTR [rbx+0x4e000000],cl
   1400114ac:	add    BYTE PTR [rax],al
   1400114ae:	add    BYTE PTR [rbx],dl
   1400114b0:	sub    eax,0xac492d2d
   1400114b5:	lods   al,BYTE PTR ds:[rsi]
   1400114b6:	lods   al,BYTE PTR ds:[rsi]
   1400114b7:	call   rdx
   1400114b9:	rcl    dl,cl
   1400114bb:	dec    DWORD PTR [rsi-0x69007576]
   1400114c1:	xchg   ecx,eax
   1400114c2:	xchg   ecx,eax
   1400114c3:	(bad)  
   1400114c4:	(bad)  
   1400114c5:	(bad)  
   1400114c6:	(bad)  
   1400114c7:	(bad)  
   1400114c8:	(bad)  
   1400114c9:	(bad)  
   1400114ca:	(bad)  
   1400114cb:	(bad)  
   1400114cc:	(bad)  
   1400114cd:	(bad)  
   1400114ce:	(bad)  
   1400114cf:	(bad)  
   1400114d0:	(bad)  
   1400114d1:	std    
   1400114d2:	std    
   1400114d3:	(bad)  
   1400114d4:	(bad)  
   1400114d5:	stc    
   1400114d6:	stc    
   1400114d7:	(bad)  
   1400114d8:	push   rsp
   1400114da:	hlt    
   1400114db:	(bad)  
   1400114dc:	push   rax
   1400114de:	lock (bad) 
   1400114e0:	(bad)  
   1400114e1:	in     al,dx
   1400114e2:	in     al,dx
   1400114e3:	(bad)  
   1400114e4:	jmp    rdi
   1400114e6:	out    0xff,eax
   1400114e8:	jmp    rdx
   1400114ea:	loop   0x1400114eb
   1400114ec:	(bad)  
   1400114ed:	(bad)  
   1400114ef:	(bad)  
   1400114f0:	(bad)  
   1400114f1:	(bad)  
   1400114f3:	push   QWORD PTR [rdx+riz*4+0x5ca1ff9c]
   1400114fa:	cmp    al,0xff
   1400114fc:	fbstp  TBYTE PTR [rax-0x24000083]
   140011502:	test   al,0xff
   140011504:	call   rax
   140011506:	popf   
   140011507:	(bad)  
   140011508:	cli    
   140011509:	ret    0xff8b
   14001150c:	icebp  
   14001150d:	mov    cl,0x70
   14001150f:	(bad)  
   140011510:	jmp    0x122006db6
   140011515:	nop
   140011516:	ds (bad) 
   140011518:	fiadd  DWORD PTR [rcx-0x762200d8]
   14001151e:	xor    al,0xff
   140011520:	ret    0x2468
   140011523:	inc    DWORD PTR [rsi+0x17]
   140011526:	add    cl,dl
   140011528:	add    BYTE PTR [rax],al
   14001152a:	add    BYTE PTR [rbp+0x0],bh
   14001152d:	add    BYTE PTR [rax],al
   14001152f:	es sub eax,0xae492d2d
   140011535:	scas   al,BYTE PTR es:[rdi]
   140011536:	scas   al,BYTE PTR es:[rdi]
   140011537:	call   rbp
   140011539:	(bad)  
   14001153a:	(bad)  
   14001153b:	inc    DWORD PTR [rdi-0x6c007b7c]
   140011541:	nop
   140011542:	nop
   140011543:	(bad)  
   140011544:	(bad)  
   140011545:	(bad)  
   140011546:	(bad)  
   140011547:	(bad)  
   140011548:	(bad)  
   140011549:	(bad)  
   14001154a:	(bad)  
   14001154b:	(bad)  
   14001154c:	(bad)  
   14001154d:	(bad)  
   14001154e:	(bad)  
   14001154f:	(bad)  
   140011550:	(bad)  
   140011551:	(bad)  
   140011552:	(bad)  
   140011553:	(bad)  
   140011554:	(bad)  
   140011555:	(bad)  
   140011556:	(bad)  
   140011557:	(bad)  
   140011558:	(bad)  
   140011559:	stc    
   14001155a:	stc    
   14001155b:	(bad)  
   14001155c:	push   rsp
   14001155e:	hlt    
   14001155f:	(bad)  
   140011560:	push   rax
   140011562:	lock (bad) 
   140011564:	(bad)  
   140011565:	in     al,dx
   140011566:	in     al,dx
   140011567:	(bad)  
   140011568:	jmp    rdi
   14001156a:	out    0xff,eax
   14001156c:	jmp    rdx
   14001156e:	loop   0x14001156f
   140011570:	(bad)  
   140011571:	(bad)  
   140011573:	push   QWORD PTR [rcx-0x65005657]
   140011579:	add    BYTE PTR [rax+0x3a5a93ff],0xff
   140011580:	fldcw  WORD PTR [rbp-0x13000086]
   140011586:	mov    ecx,0xacdfffff
   14001158b:	(bad)  
   14001158c:	call   rdx
   14001158e:	lahf   
   14001158f:	(bad)  
   140011590:	cld    
   140011591:	(bad)  
   140011592:	nop
   140011593:	push   rbp
   140011595:	mov    ecx,0xbaf4ff7c
   14001159a:	jl     0x14001159b
   14001159c:	cld    
   14001159d:	enter  0xff92,0xf3
   1400115a1:	mov    ah,0x75
   1400115a3:	jmp    FWORD PTR [rdi+0xfb1f59]
   1400115a9:	add    BYTE PTR [rax],al
   1400115ab:	test   DWORD PTR [rax],eax
   1400115ad:	add    BYTE PTR [rax],al
   1400115af:	sub    ch,BYTE PTR [rip+0xffffffffb0482d2d]        # 0xf04942e2
   1400115b5:	mov    al,0xb0
   1400115b7:	call   rdi
   1400115b9:	xlat   BYTE PTR ds:[rbx]
   1400115ba:	xlat   BYTE PTR ds:[rbx]
   1400115bb:	inc    DWORD PTR [rbp+0x76ff8484]
   1400115c1:	jae    0x140011636
   1400115c3:	call   QWORD PTR [rbx-0x4f006f70]
   1400115c9:	lods   al,BYTE PTR ds:[rsi]
   1400115ca:	lods   al,BYTE PTR ds:[rsi]
   1400115cb:	inc    ebx
   1400115cd:	mov    edi,0xdbddffbf
   1400115d2:	(bad)  
   1400115d4:	div    esi
   1400115d6:	idiv   bh
   1400115d8:	(bad)  
   1400115d9:	(bad)  
   1400115da:	(bad)  
   1400115db:	(bad)  
   1400115dc:	(bad)  
   1400115dd:	stc    
   1400115de:	stc    
   1400115df:	(bad)  
   1400115e0:	push   rbp
   1400115e2:	cmc    
   1400115e3:	(bad)  
   1400115e4:	push   rax
   1400115e6:	lock (bad) 
   1400115e8:	(bad)  
   1400115e9:	in     al,dx
   1400115ea:	in     al,dx
   1400115eb:	(bad)  
   1400115ec:	jmp    rdi
   1400115ee:	out    0xff,eax
   1400115f0:	jmp    rdx
   1400115f2:	loop   0x1400115f3
   1400115f4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400115f5:	pushf  
   1400115f6:	pushf  
   1400115f7:	call   QWORD PTR [rdi+0x66ff7e7e]
   1400115fd:	rex.RX cmp edi,r15d
   140011600:	leave  
   140011601:	ins    BYTE PTR es:[rdi],dx
   140011602:	sbb    eax,0x1e76ceff
   140011607:	call   rdx
   140011609:	fwait
   14001160a:	(bad)  
   14001160b:	(bad)  
   14001160c:	stc    
   14001160d:	in     al,0xb1
   14001160f:	(bad)  
   140011610:	jmp    rbx
   140011612:	mov    al,0xff
   140011614:	call   rbp
   140011616:	movabs ds:0xbce9ffffb5e8ffff,al
   14001161f:	(bad)  
   140011620:	(bad)  
   140011621:	fsub   DWORD PTR [rbp+0x457bcaff]
   140011627:	inc    DWORD PTR [rax]
   140011629:	add    BYTE PTR [rax],al
   14001162b:	(bad)  
   14001162c:	add    BYTE PTR [rax],al
   14001162e:	add    BYTE PTR [rbx],bl
   140011630:	(bad)  
   140011631:	(bad)  
   140011632:	(bad)  
   140011633:	rex.RB mov r10b,0xb2
   140011636:	mov    dl,0xff
   140011638:	fcmovnu st,st(3)
   14001163a:	(bad)  
   14001163c:	scas   al,BYTE PTR es:[rdi]
   14001163d:	scas   al,BYTE PTR es:[rdi]
   14001163e:	scas   al,BYTE PTR es:[rdi]
   14001163f:	jmp    QWORD PTR [rax-0x78006061]
   140011645:	test   BYTE PTR [rdi+rdi*8-0x81817e],al
   14001164c:	jb     0x1400116ba
   14001164e:	ins    BYTE PTR es:[rdi],dx
   14001164f:	push   QWORD PTR [rsi+0x6e]
   140011652:	outs   dx,BYTE PTR ds:[rsi]
   140011653:	(bad)  
   140011654:	jns    0x1400116c5
   140011656:	outs   dx,DWORD PTR ds:[rsi]
   140011657:	inc    DWORD PTR [rdx+rdi*2-0x6a600086]
   14001165e:	xchg   ebp,eax
   14001165f:	(bad)  
   140011660:	mov    eax,0xc9ffadad
   140011665:	mov    esp,0xd1e1ffbc
   14001166a:	sar    edi,1
   14001166c:	clc    
   14001166d:	in     al,0xe4
   14001166f:	(bad)  
   140011670:	jmp    rdi
   140011672:	out    0xff,eax
   140011674:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011675:	cdq    
   140011676:	cdq    
   140011677:	call   QWORD PTR [rbp+rdi*2+0x404cff7d]
   14001167e:	cmp    al,0xf1
   140011680:	mov    bh,BYTE PTR [rcx+rdx*1]
   140011683:	xlat   BYTE PTR ds:[rbx]
   140011684:	retf   
   140011685:	js     0x1400116be
   140011687:	(bad)  
   140011688:	fld    DWORD PTR [rbx+0x6bc6ff30]
   14001168e:	sbb    edi,edi
   140011690:	(bad)  [rbx-0x561900cf]
   140011696:	pop    rsp
   140011697:	(bad)  
   140011698:	(bad)  
   140011699:	(bad)  
   14001169a:	fcos   
   14001169c:	(bad)  
   14001169d:	(bad)  
   14001169e:	out    dx,eax
   14001169f:	(bad)  
   1400116a0:	stc    
   1400116a1:	fisubr WORD PTR [rbp+0x1a438cff]
   1400116a7:	(bad)  
   1400116a8:	add    BYTE PTR [rax],al
   1400116aa:	add    BYTE PTR [rax+rax*1],ch
   1400116ad:	add    BYTE PTR [rax],al
   1400116af:	or     BYTE PTR [rcx],dh
   1400116b1:	xor    DWORD PTR [rcx],esi
   1400116b3:	xor    bl,BYTE PTR [rbp+0x5d]
   1400116b6:	pop    rbp
   1400116b7:	ret    0x8b8b
   1400116ba:	mov    edx,esp
   1400116bc:	xchg   ecx,eax
   1400116bd:	xchg   ecx,eax
   1400116be:	xchg   ecx,eax
   1400116bf:	jmp    FWORD PTR [rsi-0x3e005152]
   1400116c5:	rol    ecx,0xff
   1400116c8:	rcl    dl,cl
   1400116ca:	sar    bh,cl
   1400116cc:	iret   
   1400116cd:	iret   
   1400116ce:	iret   
   1400116cf:	inc    edx
   1400116d1:	rol    ecx,0xff
   1400116d4:	mov    dh,0xb3
   1400116d6:	mov    bl,0xff
   1400116d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400116d9:	movabs eax,ds:0x8790ff9c9ca1ffa1
   1400116e2:	xchg   edi,edi
   1400116e4:	mov    es,WORD PTR [rdx+0x7585ff82]
   1400116ea:	jne    0x1400116eb
   1400116ec:	mov    BYTE PTR [rdi+0x77],dh
   1400116ef:	dec    DWORD PTR [rbp-0x6c008384]
   1400116f5:	add    DWORD PTR [rcx+0x7b7b91ff],0x3e3e45ff
   1400116ff:	out    0x0,al
   140011701:	add    BYTE PTR [rax],al
   140011703:	fs push rbp
   140011705:	sbb    al,0x0
   140011707:	cmp    bl,BYTE PTR [rsi-0x415cf3c2]
   14001170d:	addr32 sub esi,ecx
   140011710:	mov    ch,0x56
   140011712:	adc    dh,dl
   140011714:	xchg   ebx,eax
   140011715:	(bad)  
   140011716:	add    BYTE PTR [rax-0x29c2914e],dh
   14001171c:	(bad)  
   14001171d:	xchg   ecx,eax
   14001171e:	pop    rsi
   14001171f:	icebp  
   140011720:	sahf   
   140011721:	push   rcx
   140011722:	and    ebp,DWORD PTR [rsi+0x2800143d]
   140011728:	add    BYTE PTR [rax],al
   14001172a:	add    BYTE PTR [rax],cl
   14001172c:	add    BYTE PTR [rax],al
   14001172e:	add    BYTE PTR [rcx],al
	...
   140011740:	xor    DWORD PTR [rcx],esi
   140011742:	xor    DWORD PTR [rdx],esi
   140011744:	(bad)  
   140011745:	(bad)  
   140011746:	(bad)  
   140011747:	xor    BYTE PTR [r8],r14b
   14001174a:	xor    BYTE PTR [rdi-0x58a2a2a3],al
   140011750:	jo     0x1400117c2
   140011752:	jo     0x14001171a
   140011754:	test   BYTE PTR [rsp+rax*4-0x6e6e6e0f],al
   14001175b:	jmp    QWORD PTR [rdx-0x3a005d5e]
   140011761:	(bad)
   140011764:	ret    0xc2c2
   140011767:	inc    eax
   140011769:	rol    al,0xff
   14001176c:	mov    dh,0xb4
   14001176e:	mov    ah,0xff
   140011770:	scas   al,BYTE PTR es:[rdi]
   140011771:	stos   BYTE PTR es:[rdi],al
   140011772:	stos   BYTE PTR es:[rdi],al
   140011773:	jmp    QWORD PTR [rbp-0x5d006263]
   140011779:	cwde   
   14001177a:	cwde   
   14001177b:	dec    DWORD PTR [rax+rcx*2+0x48]
   14001177f:	(bad)  
   140011780:	add    BYTE PTR [rax],al
   140011782:	add    BYTE PTR [rdx],dh
   140011784:	add    BYTE PTR [rax],al
   140011786:	add    BYTE PTR [rip+0x0],cl        # 0x14001178c
   14001178c:	nop
   14001178d:	xor    BYTE PTR [rax],al
   14001178f:	adc    DWORD PTR [rax+0x12002d],ecx
   140011795:	add    BYTE PTR [rax],al
   140011797:	add    al,BYTE PTR [rax]
   140011799:	add    BYTE PTR [rax],al
   14001179b:	add    DWORD PTR [rax],eax
	...
   1400117d9:	add    BYTE PTR [rax],al
   1400117db:	add    BYTE PTR [rcx],dh
   1400117dd:	xor    DWORD PTR [rcx],esi
   1400117df:	rex.X xor BYTE PTR [rax],sil
   1400117e2:	xor    BYTE PTR [rsi+0x40],ah
   1400117e5:	rex
   1400117e6:	rex mov DWORD PTR [rbx+0x63],esp
   1400117ea:	movsxd esi,DWORD PTR [rdi-0x2a848485]
   1400117f0:	jnp    0x14001186d
   1400117f2:	jnp    0x1400117e5
   1400117f4:	pop    rbp
   1400117f5:	pop    rbp
   1400117f6:	pop    rbp
   1400117f7:	mov    esp,0x903d3d3d
   1400117fc:	and    eax,0x422525
   140011801:	add    BYTE PTR [rax],al
   140011803:	or     al,BYTE PTR [rax]
   140011805:	add    BYTE PTR [rax],al
   140011807:	add    al,BYTE PTR [rax]
	...
   1400118ad:	add    BYTE PTR [rax],al
   1400118af:	add    bh,bh
   1400118b1:	(bad)  
   1400118b2:	(bad)  
   1400118b3:	(bad)  
   1400118b4:	(bad)  
   1400118b5:	(bad)  
   1400118b6:	(bad)  
   1400118b7:	jmp    rax
   1400118b9:	jg     0x1400118ba
   1400118bb:	inc    DWORD PTR [rax-0x7f0000f1]
   1400118c1:	add    bh,bh
   1400118c3:	inc    DWORD PTR [rax-0x7f00e100]
   1400118c9:	add    BYTE PTR [rbx],al
   1400118cb:	inc    DWORD PTR [rax-0x7f00fd00]
   1400118d1:	add    BYTE PTR [rbx],al
   1400118d3:	inc    DWORD PTR [rax-0x7f00fd00]
   1400118d9:	add    BYTE PTR [rbx],al
   1400118db:	inc    DWORD PTR [rax-0x7f00fd00]
   1400118e1:	add    BYTE PTR [rbx],al
   1400118e3:	inc    DWORD PTR [rax-0x7f00fd00]
   1400118e9:	add    BYTE PTR [rbx],al
   1400118eb:	inc    DWORD PTR [rax-0x7f00fd00]
   1400118f1:	add    BYTE PTR [rbx],al
   1400118f3:	inc    DWORD PTR [rax-0x7f00fd00]
   1400118f9:	add    BYTE PTR [rcx],al
   1400118fb:	inc    DWORD PTR [rax-0x7fc10000]
   140011901:	add    BYTE PTR [rax],al
   140011903:	(bad)  
   140011904:	add    BYTE PTR [rax],al
   140011906:	add    BYTE PTR [rcx],al
	...
   140011924:	lock add BYTE PTR [rdx],al
   140011927:	(bad)  
   140011928:	jmp    rax
   14001192a:	add    edi,edi
   14001192c:	(bad)  
   14001192d:	(bad)  
   14001192e:	(bad)  
   14001192f:	jmp    FWORD PTR [rax]
   140011931:	add    BYTE PTR [rax],al
   140011933:	add    BYTE PTR [rax],dl
   140011935:	add    BYTE PTR [rax],al
   140011937:	add    BYTE PTR [rax],ah
   140011939:	add    BYTE PTR [rax],al
   14001193b:	add    BYTE PTR [rcx],al
   14001193d:	add    BYTE PTR [rax],ah
	...
   14001195f:	add    al,0x0
   140011961:	add    BYTE PTR [rax],al
   140011963:	or     eax,0x11000000
   140011968:	add    BYTE PTR [rax],al
   14001196a:	add    BYTE PTR [rip+0x7000000],cl        # 0x147011970
   140011970:	add    BYTE PTR [rax],al
   140011972:	add    BYTE PTR [rcx],al
	...
   140011998:	add    BYTE PTR [rax],al
   14001199a:	add    BYTE PTR [rdx],al
   14001199c:	add    BYTE PTR [rax],al
   14001199e:	add    BYTE PTR [rax],bl
   1400119a0:	add    BYTE PTR [rax],al
   1400119a2:	add    BYTE PTR [rax+0x0],al
   1400119a5:	add    BYTE PTR [rax],al
   1400119a7:	push   rbx
   1400119a8:	add    BYTE PTR [rax],al
   1400119aa:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400119ae:	add    BYTE PTR [rdx],bh
   1400119b0:	add    BYTE PTR [rax],al
   1400119b2:	add    BYTE PTR [rdx],ch
   1400119b4:	add    BYTE PTR [rax],al
   1400119b6:	add    BYTE PTR [rax+rax*1],bl
   1400119b9:	add    BYTE PTR [rax],al
   1400119bb:	sldt   WORD PTR [rax]
   1400119be:	add    BYTE PTR [rip+0x1000000],al        # 0x1410119c4
	...
   1400119d8:	sbb    DWORD PTR [rdx],ebx
   1400119da:	sbb    cl,BYTE PTR [rdi+rsi*1]
   1400119dd:	(bad)  
   1400119de:	(bad)  
   1400119df:	je     0x140011a23
   1400119e1:	cmp    bh,BYTE PTR [rdx]
   1400119e3:	mov    dh,0x25
   1400119e5:	(bad)  
   1400119e6:	(bad)  
   1400119e7:	mov    ebp,0xaa0e0e0f
   1400119ec:	add    DWORD PTR [rcx],eax
   1400119ee:	add    DWORD PTR [rdx+0x7e000000],edx
   1400119f4:	add    BYTE PTR [rax],al
   1400119f6:	add    BYTE PTR [rdi+0x0],ah
   1400119f9:	add    BYTE PTR [rax],al
   1400119fb:	rex.WRB add BYTE PTR [r8],r8b
   1400119fe:	add    BYTE PTR [rip+0xd000000],ch        # 0x14d011a04
	...
   140011a18:	sub    eax,0x8c332e2e
   140011a1d:	mov    WORD PTR [rdi+rdi*8-0x6b6b51],cs
   140011a24:	mov    esp,0xa2ff9c9c
   140011a29:	test   DWORD PTR [rbp+0x58586cfe],eax
   140011a2f:	repnz rex.B (bad) 
   140011a32:	(bad)  
   140011a33:	loope  0x140011a52
   140011a35:	sbb    bl,BYTE PTR [rdx]
   140011a37:	(bad)
   140011a3a:	or     BYTE PTR [rbx+0x6c000000],ah
   140011a40:	add    BYTE PTR [rax],al
   140011a42:	add    BYTE PTR [rip+0x1000000],ah        # 0x141011a48
	...
   140011a58:	cs (bad) 
   140011a5a:	(bad)  
   140011a5b:	cmp    al,0x91
   140011a5d:	xchg   ecx,eax
   140011a5e:	xchg   ecx,eax
   140011a5f:	sti    
   140011a60:	mov    ecx,0xfaff9c9c
   140011a65:	ret    
   140011a66:	ret    
   140011a67:	push   rdx
   140011a69:	mov    esi,0xbae6ffbe
   140011a6e:	mov    edx,0xb1b1daff
   140011a73:	dec    edx
   140011a75:	movabs ds:0x607f870708bffa3,eax
   140011a7e:	(bad)  
   140011a7f:	nop
   140011a80:	add    BYTE PTR [rax],al
   140011a82:	add    BYTE PTR [rcx],dh
   140011a84:	add    BYTE PTR [rax],al
   140011a86:	add    BYTE PTR [rdx],al
	...
   140011a98:	xor    esi,DWORD PTR [rsp+rsi*1]
   140011a9b:	push   rbx
   140011a9c:	movabs al,ds:0xffff9c9cbaffa0a0
   140011aa5:	enter  0xffc8,0xff
   140011aa9:	mov    esi,0xb2ffffbe
   140011aae:	mov    dl,0xff
   140011ab0:	jmp    FWORD PTR [rsi-0x47000052]
   140011ab6:	mov    eax,0xa0a0c8ff
   140011abb:	cld    
   140011abc:	(bad)  
   140011abd:	or     ecx,DWORD PTR [rbx]
   140011abf:	xchg   ebx,eax
   140011ac0:	add    BYTE PTR [rax],al
   140011ac2:	add    BYTE PTR [rdx],dh
   140011ac4:	add    BYTE PTR [rax],al
   140011ac6:	add    BYTE PTR [rdx],al
	...
   140011ad8:	cmp    BYTE PTR [rax],bh
   140011ada:	cmp    BYTE PTR [rsi-0x5b],dl
   140011add:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ade:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011adf:	(bad)  
   140011ae0:	mov    ecx,0xffff9f9f
   140011ae5:	(bad)  
   140011ae6:	(bad)  
   140011ae7:	(bad)  
   140011ae8:	dec    eax
   140011aea:	enter  0xffff,0xbd
   140011aee:	mov    ebp,0xb2b2ffff
   140011af3:	(bad)  
   140011af4:	push   QWORD PTR [rdx-0x6241004e]
   140011afa:	popf   
   140011afb:	sti    
   140011afc:	or     al,0xa
   140011afe:	or     dl,BYTE PTR [rbx+0x32000000]
   140011b04:	add    BYTE PTR [rax],al
   140011b06:	add    BYTE PTR [rdx],al
	...
   140011b18:	pop    rdx
   140011b19:	pop    rbx
   140011b1a:	pop    rbx
   140011b1b:	ins    DWORD PTR es:[rdi],dx
   140011b1c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b1d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011b1e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011b1f:	(bad)  
   140011b20:	mov    ebp,0xffffa6a6
   140011b25:	loopne 0x140011b07
   140011b27:	(bad)  
   140011b28:	call   rsi
   140011b2a:	fdivr  st,st(7)
   140011b2c:	dec    ebp
   140011b2e:	sar    edi,1
   140011b30:	inc    ebx
   140011b32:	(bad)  
   140011b33:	(bad)  
   140011b34:	(bad)  
   140011b35:	mov    edi,0x9cb8ffc0
   140011b3a:	pushf  
   140011b3b:	sti    
   140011b3c:	or     al,0xa
   140011b3e:	or     dl,BYTE PTR [rax+rax*1+0x340000]
   140011b45:	add    BYTE PTR [rax],al
   140011b47:	add    al,0x0
	...
   140011b55:	add    BYTE PTR [rax],al
   140011b57:	add    BYTE PTR [rdi+0x60],bl
   140011b5a:	(bad)  
   140011b5b:	jno    0x140011b06
   140011b5d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b5e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b5f:	(bad)  
   140011b60:	mov    ebx,0xffffabaa
   140011b65:	jmp    0x140011b53
   140011b67:	jmp    rbx
   140011b69:	mov    cl,0xa0
   140011b6b:	(bad)  
   140011b6c:	ficom  WORD PTR [rdi-0x6a1e008c]
   140011b72:	jnp    0x140011b73
   140011b74:	div    BYTE PTR [rsi-0x6851004e]
   140011b7a:	pushf  
   140011b7b:	sti    
   140011b7c:	or     BYTE PTR [rsi],al
   140011b7e:	(bad)  
   140011b7f:	lahf   
   140011b80:	add    BYTE PTR [rax],al
   140011b82:	add    BYTE PTR [rdx+0x0],bl
   140011b85:	add    BYTE PTR [rax],al
   140011b87:	sub    eax,0x18000000
   140011b8c:	add    BYTE PTR [rax],al
   140011b8e:	add    BYTE PTR [rax],cl
   140011b90:	add    BYTE PTR [rax],al
   140011b92:	add    BYTE PTR [rcx],al
   140011b94:	add    BYTE PTR [rax],al
   140011b96:	add    BYTE PTR [rax],al
   140011b98:	jns    0x140011c13
   140011b9a:	jns    0x140011b25
   140011b9c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011b9d:	movabs ds:0xfcffffb7b6c1ffa3,eax
   140011ba6:	std    
   140011ba7:	(bad)  
   140011ba8:	call   0x11f00c769
   140011bad:	movabs al,ds:0x79d3ff5aa7e8ff63
   140011bb6:	sub    edi,edi
   140011bb8:	movabs eax,ds:0xac0000e24fb335d
   140011bc1:	add    al,0x0
   140011bc3:	movabs al,ds:0x5e0000007f000000
   140011bcc:	add    BYTE PTR [rax],al
   140011bce:	add    BYTE PTR [rdx],dh
   140011bd0:	add    BYTE PTR [rax],al
   140011bd2:	add    BYTE PTR [rip+0x0],cl        # 0x140011bd8
   140011bd8:	movsxd esp,DWORD PTR [rsp+riz*2-0x72]
   140011bdc:	stos   BYTE PTR es:[rdi],al
   140011bdd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011bde:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011bdf:	(bad)  
   140011be0:	mov    esi,0xffffb9b9
   140011be5:	(bad)  
   140011be6:	(bad)  
   140011be7:	(bad)  
   140011be8:	push   rax
   140011bea:	repz push rax
   140011bed:	(bad)  
   140011bee:	(bad)  
   140011bef:	jmp    rsi
   140011bf1:	mov    ecx,0xb8edff99
   140011bf6:	(bad)  
   140011bf7:	(bad)  
   140011bf8:	in     al,dx
   140011bf9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011bfa:	pop    rcx
   140011bfb:	call   rsp
   140011bfd:	jl     0x140011c2c
   140011bff:	jmp    FWORD PTR [rsp+rdx*2+0x2764f60a]
   140011c06:	add    dl,bl
   140011c08:	sbb    cl,BYTE PTR [rax]
   140011c0a:	add    BYTE PTR [rsi+0x6f000000],ch
   140011c10:	add    BYTE PTR [rax],al
   140011c12:	add    BYTE PTR [rdx],ah
   140011c14:	add    BYTE PTR [rax],al
   140011c16:	add    BYTE PTR [rax],al
   140011c18:	push   0xffffffffada06969
   140011c1d:	lods   al,BYTE PTR ds:[rsi]
   140011c1e:	lods   al,BYTE PTR ds:[rsi]
   140011c1f:	dec    eax
   140011c21:	(bad)
   140011c24:	(bad)  
   140011c25:	(bad)  
   140011c26:	(bad)  
   140011c27:	(bad)  
   140011c28:	(bad)  
   140011c29:	(bad)  
   140011c2a:	(bad)  
   140011c2b:	(bad)  
   140011c2c:	push   rbp
   140011c2e:	idiv   bh
   140011c30:	jmp    rdi
   140011c32:	jmp    0x102c70a36
   140011c37:	dec    ecx
   140011c39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011c3a:	mov    edi,edi
   140011c3c:	sti    
   140011c3d:	rcr    DWORD PTR [rdi+rdi*8-0x7d3e08],1
   140011c44:	out    0x98,al
   140011c46:	inc    r9
   140011c49:	outs   dx,DWORD PTR ds:[rsi]
   140011c4a:	sub    esi,esi
   140011c4c:	add    BYTE PTR [rax],al
   140011c4e:	add    BYTE PTR [rbx+0x0],bh
   140011c51:	add    BYTE PTR [rax],al
   140011c53:	sub    BYTE PTR [rax],al
   140011c55:	add    BYTE PTR [rax],al
   140011c57:	add    BYTE PTR [rdi+0x77],dh
   140011c5a:	ja     0x140011c05
   140011c5c:	mov    edx,0x99ffbaba
   140011c61:	xchg   edi,eax
   140011c62:	xchg   edi,eax
   140011c63:	(bad)  
   140011c64:	mov    ecx,0xd3ffb6b6
   140011c69:	rcl    al,1
   140011c6b:	jmp    rbp
   140011c6d:	fstp   st(5)
   140011c6f:	push   rbx
   140011c71:	loop   0x140011c55
   140011c73:	(bad)  
   140011c74:	(bad)  
   140011c75:	call   0x1bf9a1c65
   140011c7a:	jp     0x140011c79
   140011c7c:	(bad)  
   140011c7d:	js     0x140011cb6
   140011c7f:	std    
   140011c80:	jmp    0x13900943c
   140011c85:	iret   
   140011c86:	xchg   ebx,eax
   140011c87:	(bad)  
   140011c88:	(bad)  
   140011c89:	jmp    0x140021b49
   140011c8e:	add    BYTE PTR [rax+0x0],cl
   140011c91:	add    BYTE PTR [rax],al
   140011c93:	(bad)  
   140011c94:	add    BYTE PTR [rax],al
   140011c96:	add    BYTE PTR [rax],al
   140011c98:	push   rax
   140011c99:	push   rax
   140011c9a:	push   rax
   140011c9b:	push   rax
   140011c9c:	xchg   edx,eax
   140011c9d:	xchg   edx,eax
   140011c9e:	xchg   edx,eax
   140011c9f:	movabs al,ds:0xdb868687bc7b7b7b
   140011ca8:	xchg   ecx,eax
   140011ca9:	mov    cs,WORD PTR [rsi-0x65656007]
   140011caf:	jmp    FWORD PTR [rax-0x54006061]
   140011cb5:	lahf   
   140011cb6:	movabs al,ds:0xa1c3ef1777783ff
   140011cbf:	imul   ebx,DWORD PTR [rbx-0x5a6cf8c1],0x4b
   140011cc6:	or     eax,0x4d78b099
   140011ccb:	mov    BYTE PTR [rax],al
   140011ccd:	add    BYTE PTR [rax],al
   140011ccf:	adc    al,BYTE PTR [rax]
   140011cd1:	add    BYTE PTR [rax],al
   140011cd3:	add    eax,0x0
	...
   140011ce0:	xor    dh,BYTE PTR [rdx]
   140011ce2:	xor    al,BYTE PTR [rsi+rax*2]
   140011ce5:	rex.RXB
   140011ce6:	rex.RXB (bad) 
   140011ce8:	jge    0x140011d67
   140011cea:	jge    0x140011d2a
   140011cec:	push   rdx
   140011ced:	push   rbx
   140011cee:	push   rbx
   140011cef:	ins    BYTE PTR es:[rdi],dx
   140011cf0:	push   0x6a
   140011cf2:	push   0xffffffffffffff95
   140011cf4:	test   BYTE PTR [rsp+rax*4+0x59554fba],al
   140011cfb:	mov    DWORD PTR [rax],eax
   140011cfd:	add    BYTE PTR [rax],al
   140011cff:	adc    eax,DWORD PTR [rax]
   140011d01:	add    BYTE PTR [rax],al
   140011d03:	add    eax,0x0
	...
   140011d58:	cmp    edi,0x1f000000
   140011d5e:	sub    al,0x4b
   140011d60:	add    BYTE PTR [rdi],bl
   140011d62:	mov    bh,bh
   140011d64:	add    BYTE PTR [rdi],cl
   140011d66:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011d67:	inc    DWORD PTR [rax]
   140011d69:	jl     0xd5101e6e
   140011d6f:	inc    DWORD PTR [rax]
   140011d71:	pinsrw mm7,edi,0x0
   140011d75:	bswap  edx
   140011d77:	inc    DWORD PTR [rax]
   140011d79:	add    esp,eax
   140011d7b:	inc    DWORD PTR [rax]
   140011d7d:	add    DWORD PTR [rdx-0x57feff01],edi
   140011d83:	inc    DWORD PTR [rax]
   140011d85:	add    DWORD PTR [rbp-0x6efeff01],edx
   140011d8b:	inc    DWORD PTR [rax]
   140011d8d:	add    DWORD PTR [rdx-0x6be03f01],edx
   140011d93:	(bad)  
   140011d94:	(bad)  
   140011d95:	dec    DWORD PTR [rdi+0x10000ff]
   140011d9b:	add    BYTE PTR [rcx],cl
   140011d9d:	add    BYTE PTR [rax],dh
   140011d9f:	xor    BYTE PTR [rax],dl
   140011da1:	add    BYTE PTR [rcx],al
   140011da3:	add    BYTE PTR [rax+rax*1],al
   140011da6:	push   0x1000006
   140011dab:	add    BYTE PTR [rax],ah
   140011dad:	and    BYTE PTR [rax],dl
   140011daf:	add    BYTE PTR [rcx],al
   140011db1:	add    BYTE PTR [rax+rax*1],al
   140011db4:	call   0x142011dbb
   140011db9:	add    BYTE PTR [rax],dl
   140011dbb:	adc    BYTE PTR [rax],dl
   140011dbd:	add    BYTE PTR [rcx],al
   140011dbf:	add    BYTE PTR [rax+rax*1],al
   140011dc2:	sub    BYTE PTR [rcx],al
   140011dc4:	add    BYTE PTR [rax],al
   140011dc6:	add    eax,DWORD PTR [rax]
   140011dc8:	xor    BYTE PTR [rax],dh
   140011dca:	add    BYTE PTR [rax],al
   140011dcc:	add    DWORD PTR [rax],eax
   140011dce:	or     BYTE PTR [rax],al
   140011dd0:	test   al,0xe
   140011dd2:	add    BYTE PTR [rax],al
   140011dd4:	add    al,0x0
   140011dd6:	and    BYTE PTR [rax],ah
   140011dd8:	add    BYTE PTR [rax],al
   140011dda:	add    DWORD PTR [rax],eax
   140011ddc:	or     BYTE PTR [rax],al
   140011dde:	test   al,0x8
   140011de0:	add    BYTE PTR [rax],al
   140011de2:	add    eax,0x101000
   140011de7:	add    BYTE PTR [rcx],al
   140011de9:	add    BYTE PTR [rax],cl
   140011deb:	add    BYTE PTR [rax+0x5],ch
   140011dee:	add    BYTE PTR [rax],al
   140011df0:	(bad)  
   140011df1:	add    BYTE PTR [rax],dh
   140011df3:	xor    BYTE PTR [rax],al
   140011df5:	add    BYTE PTR [rcx],al
   140011df7:	add    BYTE PTR [rax],ah
   140011df9:	add    BYTE PTR [rax+0x7000025],ch
   140011dff:	add    BYTE PTR [rax],ah
   140011e01:	and    BYTE PTR [rax],al
   140011e03:	add    BYTE PTR [rcx],al
   140011e05:	add    BYTE PTR [rax],ah
   140011e07:	add    BYTE PTR [rax+0x8000010],ch
   140011e0d:	add    BYTE PTR [rax],dl
   140011e0f:	adc    BYTE PTR [rax],al
   140011e11:	add    BYTE PTR [rcx],al
   140011e13:	add    BYTE PTR [rax],ah
   140011e15:	add    BYTE PTR [rax+0x4],ch
   140011e18:	add    BYTE PTR [rax],al
   140011e1a:	or     DWORD PTR [rax],eax
   140011e1c:	add    BYTE PTR [rax],al
   140011e1e:	add    BYTE PTR [rax],al
   140011e20:	int    0xfe
   140011e22:	int    0xfe
   140011e24:	rol    BYTE PTR [rax],1
   140011e26:	add    BYTE PTR [rax],al
   140011e28:	add    BYTE PTR [rax],al
   140011e2a:	add    DWORD PTR [rax],eax
   140011e2c:	add    BYTE PTR [rax],al
   140011e2e:	add    BYTE PTR [rax],al
   140011e30:	adc    DWORD PTR [rax],eax
   140011e32:	add    BYTE PTR [rax],al
   140011e34:	add    BYTE PTR [rax],al
   140011e36:	add    BYTE PTR [rax],al
   140011e38:	add    al,BYTE PTR [rax]
   140011e3a:	add    BYTE PTR [rax],al
   140011e3c:	stos   BYTE PTR es:[rdi],al
   140011e3d:	ins    DWORD PTR es:[rdi],dx
   140011e3e:	pop    rbx
   140011e3f:	pop    rcx
   140011e40:	and    eax,0xf79333a2
   140011e45:	out    0x88,eax
   140011e47:	jg     0x140011ea5
   140011e49:	sub    al,0x40
   140011e4b:	cld    
   140011e4c:	jmp    0xeb8c7035
   140011e51:	pop    rbx
   140011e52:	(bad)  
   140011e53:	(bad)  
   140011e54:	adc    al,0xd0
   140011e56:	cmp    al,0xd3
   140011e58:	(bad)  
   140011e59:	retf   
   140011e5a:	leave  
   140011e5b:	test   DWORD PTR [rax],eax
	...
   140011e71:	add    BYTE PTR [rax],al
   140011e73:	add    BYTE PTR [rax+0xe000000],cl
   140011e79:	add    BYTE PTR [rax],al
   140011e7b:	add    BYTE PTR [rax+0x10000000],bl
   140011e81:	add    BYTE PTR [rax],al
   140011e83:	add    BYTE PTR [rax+0xe000000],ch
   140011e89:	add    BYTE PTR [rax],al
   140011e8b:	add    BYTE PTR [rax+0x8000000],bh
	...
   140011e99:	add    BYTE PTR [rax],al
   140011e9b:	add    al,al
   140011e9d:	add    BYTE PTR [rax],al
   140011e9f:	add    BYTE PTR [rax+rax*1],cl
   140011ea2:	add    BYTE PTR [rax],al
   140011ea4:	add    BYTE PTR [rax],al
   140011ea6:	add    BYTE PTR [rax],al
   140011ea8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140011eac:	rex.WB add BYTE PTR [r8],al
	...
   140011eb7:	add    BYTE PTR [rbx],al
   140011eb9:	add    BYTE PTR [rax],al
   140011ebb:	add    BYTE PTR [rsi],cl
   140011ebd:	add    BYTE PTR [rax],al
   140011ebf:	add    BYTE PTR [rax],dl
   140011ec1:	add    BYTE PTR [rax],al
   140011ec3:	add    BYTE PTR [rax],bl
   140011ec5:	add    BYTE PTR [rax],al
   140011ec7:	add    BYTE PTR [rbp+0x0],cl
   140011eca:	push   rbp
   140011ecb:	add    BYTE PTR [rcx+0x0],cl
	...
   140011ed6:	add    BYTE PTR [rax],al
   140011ed8:	(bad)  
   140011ed9:	add    BYTE PTR [rax],al
   140011edb:	add    BYTE PTR [rax],dl
   140011edd:	add    BYTE PTR [rax],al
   140011edf:	add    BYTE PTR [rbp+0x0],ah
   140011ee2:	outs   dx,BYTE PTR ds:[rsi]
   140011ee3:	add    BYTE PTR [rip+0x53005500],ch        # 0x1930173e9
   140011ee9:	add    BYTE PTR [rax],al
   140011eeb:	add    BYTE PTR [rax],al
   140011eed:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140012000 <.reloc>:
   140012000:	add    BYTE PTR [rax+0x0],dl
   140012003:	add    BYTE PTR [rax],ah
   140012005:	add    BYTE PTR [rax],al
   140012007:	add    BYTE PTR [rax],ch
   140012009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001200a:	xor    BYTE PTR [rax+rax*2+0x60a448a4],ah
   140012011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012012:	push   0xa4f8a4
   140012017:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012018:	test   al,0xaa
   14001201a:	shr    BYTE PTR [rdx-0x552f5538],0x0
   140012021:	add    BYTE PTR [rax],0x0
   140012024:	or     al,0x0
   140012026:	add    BYTE PTR [rax],al
   140012028:	and    BYTE PTR [rax-0x60000000],ah
   14001202e:	add    BYTE PTR [rax],al
   140012030:	or     al,0x0
   140012032:	add    BYTE PTR [rax],al
   140012034:	.byte 0x0
   140012035:	.byte 0xa0
   140012036:	.byte 0x10
   140012037:	.byte 0xa0
